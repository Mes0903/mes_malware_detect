
509bfdd62ae1399dcff921bf68cab9ee09cc2c25836e2615f4911852dd7cede1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0x62bf7b73
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	xor    al,0x65
  402d0a:	data16 fsub QWORD PTR [ebx+0x6a]
  402d0e:	push   0x69
  402d10:	xor    al,cl
  402d12:	fdivr  st,st(5)
  402d14:	ins    BYTE PTR es:[edi],dx
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	sbb    BYTE PTR [eax+0x19],dh
  402da5:	mov    bh,BYTE PTR [edi]
  402da7:	xchg   edi,eax
  402da8:	pop    ebx
  402da9:	lods   al,BYTE PTR ds:[esi]
  402daa:	jmp    0x58c:0x3e043abe
  402db1:	in     al,dx
  402db2:	ja     0x402e18
  402db4:	jp     0x402d4c
  402db6:	imul   edx,DWORD PTR [ebx],0x26
  402db9:	inc    ebx
  402dba:	fsubr  DWORD PTR [edi-0x4b]
  402dbd:	mov    cl,0xf5
  402dbf:	loop   0x402e01
  402dc1:	xor    eax,0xfa80d8cf
  402dc6:	dec    esp
  402dc7:	test   DWORD PTR [edx],esi
  402dc9:	enter  0x3655,0x79
  402dcd:	aas    
  402dce:	dec    esi
  402dcf:	or     ah,ah
  402dd1:	stc    
  402dd2:	addr16 pop ds
  402dd4:	and    BYTE PTR cs:[edx-0x3e],dh
  402dd8:	sub    ch,al
  402dda:	inc    esp
  402ddb:	and    ah,BYTE PTR [eax+edi*1-0x49ee2824]
  402de2:	sbb    ecx,DWORD PTR [eax+0x71]
  402de5:	addr16 in al,0xd7
  402de8:	(bad)  
  402de9:	mov    edi,0xe6730f9
  402dee:	dec    edi
  402def:	out    dx,eax
  402df0:	daa    
  402df1:	(bad)  
  402df2:	or     ebp,DWORD PTR [ecx]
  402df4:	sti    
  402df5:	sub    eax,edi
  402df7:	xchg   esp,eax
  402df8:	cs or  al,0xa0
  402dfb:	sti    
  402dfc:	push   edx
  402dfd:	in     al,dx
  402dfe:	xlat   BYTE PTR ds:[ebx]
  402dff:	mov    edx,DWORD PTR [edi-0x39]
  402e02:	adc    BYTE PTR [edx+0x3166a97e],dl
  402e08:	jbe    0x402dcd
  402e0a:	jbe    0x402e01
  402e0c:	and    eax,0x15c7bdcc
  402e11:	xor    BYTE PTR [esi],dh
  402e13:	lock inc esi
  402e15:	not    DWORD PTR ds:0xc40005fd
  402e1b:	sbb    ebp,ebp
  402e1d:	test   al,0x2d
  402e1f:	add    BYTE PTR [ebx],dl
  402e21:	inc    esi
  402e22:	mov    al,ds:0x78538ba6
  402e27:	push   0x50
  402e29:	dec    eax
  402e2a:	push   ebp
  402e2b:	push   eax
  402e2c:	push   cs
  402e2d:	pusha  
  402e2e:	clc    
  402e2f:	cmp    eax,0xfc36989
  402e34:	jg     0x402e81
  402e36:	push   0x28
  402e38:	retf   
  402e39:	mov    DWORD PTR [ebx+0x247d1081],edx
  402e3f:	inc    esi
  402e40:	lahf   
  402e41:	stos   DWORD PTR es:[edi],eax
  402e42:	jo     0x402e37
  402e44:	clc    
  402e45:	inc    eax
  402e46:	pop    edx
  402e47:	inc    ebp
  402e48:	out    dx,eax
  402e49:	shr    DWORD PTR ds:0xe2099273,0x27
  402e50:	xchg   esi,eax
  402e51:	add    BYTE PTR [edi+0xe6df2fe],0x8b
  402e58:	push   DWORD PTR [ebx+edi*2+0x565fd18f]
  402e5f:	inc    esp
  402e60:	fwait
  402e61:	or     eax,0x8ff620d6
  402e66:	bnd jnp 0x402e43
  402e69:	std    
  402e6a:	ins    DWORD PTR es:[edi],dx
  402e6b:	(bad)  
  402e6c:	hlt    
  402e6d:	cmp    dh,0x90
  402e70:	shr    BYTE PTR [ecx],0x98
  402e73:	scas   eax,DWORD PTR es:[edi]
  402e74:	push   ecx
  402e75:	sub    DWORD PTR [esi],0xffffffec
  402e78:	jmp    0x402ea5
  402e7a:	mov    bh,0xda
  402e7c:	push   DWORD PTR ds:0x90144788
  402e82:	inc    esp
  402e83:	or     eax,0x1d1999ac
  402e88:	bound  eax,QWORD PTR [esi+0x71f88c34]
  402e8e:	out    0x92,al
  402e90:	mov    bl,0xcd
  402e92:	xor    al,0x64
  402e94:	fwait
  402e95:	shl    eax,0xfd
  402e98:	je     0x402f18
  402e9a:	xchg   DWORD PTR [ecx-0x77ece27c],esi
  402ea0:	and    edx,eax
  402ea2:	ja     0x402f22
  402ea4:	out    0x25,eax
  402ea6:	push   edx
  402ea7:	ja     0x402ea8
  402ea9:	retf   
  402eaa:	jns    0x402eca
  402eac:	in     al,0x8e
  402eae:	jbe    0x402f22
  402eb0:	ret    
  402eb1:	hlt    
  402eb2:	out    0x3b,eax
  402eb4:	cmp    ebx,DWORD PTR [edx+edi*8]
  402eb7:	cli    
  402eb8:	out    0x78,al
  402eba:	fldenv [ebp-0x12319218]
  402ec0:	imul   edi,DWORD PTR [esp+esi*1],0xb2459455
  402ec7:	xor    DWORD PTR [ecx+0x41765e00],ebx
  402ecd:	rcr    DWORD PTR [ecx-0x43b976c5],cl
  402ed3:	dec    ebp
  402ed4:	or     eax,0x9595e492
  402ed9:	lds    esi,FWORD PTR [esi+ecx*8+0x7d]
  402edd:	mov    BYTE PTR [edx],ch
  402edf:	mov    BYTE PTR [ebx+0x33c376b1],0xfa
  402ee6:	pop    ecx
  402ee7:	or     DWORD PTR [ebx-0x43618c40],eax
  402eed:	or     eax,0xf0526379
  402ef2:	jl     0x402f4a
  402ef4:	mov    ds:0xada496c9,eax
  402ef9:	jmp    0x2087:0xae4fec9d
  402f00:	inc    esp
  402f01:	lds    edx,FWORD PTR [edx+0x3f]
  402f04:	cmp    DWORD PTR [edi+edi*2+0x48],edx
  402f08:	adc    al,BYTE PTR [edx+0x1f]
  402f0b:	hlt    
  402f0c:	jae    0x402e8f
  402f0e:	jecxz  0x402ec0
  402f10:	jl     0x402ee0
  402f12:	icebp  
  402f13:	scas   eax,DWORD PTR es:[edi]
  402f14:	inc    edx
  402f15:	push   esi
  402f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f17:	lods   al,BYTE PTR ds:[esi]
  402f18:	and    al,dl
  402f1a:	sub    dh,BYTE PTR [edi-0x3831140b]
  402f20:	mov    ecx,0x8889c61b
  402f25:	cdq    
  402f26:	fild   DWORD PTR [ecx+0x0]
  402f29:	mov    gs,WORD PTR [ecx+0x29]
  402f2c:	mov    ch,BYTE PTR [esi]
  402f2e:	push   cs
  402f2f:	lahf   
  402f30:	loope  0x402f12
  402f32:	icebp  
  402f33:	mov    dl,0xbd
  402f35:	scas   al,BYTE PTR es:[edi]
  402f36:	ss stos DWORD PTR es:[edi],eax
  402f38:	fsubr  st(7),st
  402f3a:	jne    0x402f80
  402f3c:	cmc    
  402f3d:	mov    al,0xb5
  402f3f:	cmp    dh,BYTE PTR [edi]
  402f41:	add    eax,0x137e739f
  402f46:	sahf   
  402f47:	jbe    0x402f74
  402f49:	test   DWORD PTR [ecx+0x78],esp
  402f4c:	les    ebp,FWORD PTR ds:0x8d95cee2
  402f52:	lahf   
  402f53:	int3   
  402f54:	outs   dx,BYTE PTR ds:[esi]
  402f55:	jp     0x402f77
  402f57:	call   0x68dbe6cf
  402f5c:	add    BYTE PTR ds:0xd293cd7c,0x90
  402f63:	xchg   esp,eax
  402f64:	adc    ah,ch
  402f66:	push   edx
  402f67:	(bad)  
  402f68:	rol    ch,1
  402f6a:	and    ebp,DWORD PTR [ebx-0x73]
  402f6d:	and    al,0x68
  402f6f:	jnp    0x402f1b
  402f71:	(bad)  
  402f73:	dec    ebx
  402f74:	call   0xb8fa11c6
  402f79:	fwait
  402f7a:	cmp    al,0x9
  402f7c:	aas    
  402f7d:	pop    ebx
  402f7e:	pusha  
  402f7f:	sahf   
  402f80:	ins    BYTE PTR es:[edi],dx
  402f81:	ret    0x1de4
  402f84:	cdq    
  402f85:	sar    ch,cl
  402f87:	inc    ebx
  402f88:	cmp    al,0x1a
  402f8a:	fs pop ebx
  402f8c:	and    BYTE PTR [si],ch
  402f8f:	jns    0x402f9d
  402f91:	push   eax
  402f92:	out    0xb2,eax
  402f94:	popf   
  402f95:	mov    ds:0x5a0c61fd,al
  402f9a:	inc    eax
  402f9b:	push   edi
  402f9c:	sub    BYTE PTR [esi+esi*1],ch
  402f9f:	js     0x40301b
  402fa1:	push   ebx
  402fa2:	jp     0x402fbf
  402fa4:	call   0x749e:0xbfbe69af
  402fab:	dec    edx
  402fac:	dec    eax
  402fad:	mov    ah,0x9a
  402faf:	out    0xc2,eax
  402fb1:	push   ebx
  402fb2:	add    dl,BYTE PTR [ebx+eax*8]
  402fb5:	outs   dx,BYTE PTR ds:[esi]
  402fb6:	and    esi,DWORD PTR [edx]
  402fb8:	adc    edx,edi
  402fba:	xor    ecx,DWORD PTR [ecx-0xe]
  402fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fbe:	int    0x3a
  402fc0:	jbe    0x40302c
  402fc2:	sub    bl,al
  402fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc5:	ss dec ecx
  402fc7:	xchg   esp,ecx
  402fc9:	into   
  402fca:	inc    ecx
  402fcb:	xor    ah,BYTE PTR [edi-0x59]
  402fce:	xchg   ebp,eax
  402fcf:	mov    cl,0x55
  402fd1:	mov    WORD PTR [esi+eax*8-0x1aeedc36],?
  402fd8:	fisttp DWORD PTR [ebx]
  402fda:	jge    0x402fc3
  402fdc:	push   edi
  402fdd:	not    bh
  402fdf:	inc    ebx
  402fe0:	jno    0x402fed
  402fe2:	adc    eax,0x44dc53e4
  402fe7:	jp     0x402f7c
  402fe9:	xor    eax,DWORD PTR [esi+0x72ad88fc]
  402fef:	(bad)  
  402ff0:	pusha  
  402ff1:	int    0x62
  402ff3:	das    
  402ff4:	or     al,0x82
  402ff6:	mov    ebp,0x8befd3ba
  402ffb:	push   ds
  402ffc:	push   edi
  402ffd:	sub    eax,0xa5e1b2b7
  403002:	pop    es
  403003:	icebp  
  403004:	jns    0x403024
  403006:	add    DWORD PTR [edx+0x10],ebx
  403009:	mov    ecx,0xd71a7c89
  40300e:	add    esi,0xa9ca20bf
  403014:	fcom   st(0)
  403016:	or     eax,0x8e4200a0
  40301b:	add    DWORD PTR [ebx-0x61bbdb81],ebp
  403021:	sub    al,0x18
  403023:	scas   eax,DWORD PTR es:[edi]
  403024:	sar    esp,0x85
  403027:	repz sub al,0x3c
  40302a:	inc    esp
  40302b:	mov    edx,0x30026e84
  403030:	xchg   ebx,eax
  403031:	pop    ax
  403033:	fdiv   st(7),st
  403035:	adc    eax,0xc2fa6aef
  40303a:	out    0x59,eax
  40303c:	mov    al,0x61
  40303e:	adc    al,0x2
  403040:	cmp    edi,eax
  403042:	mov    WORD PTR [esi-0x59],fs
  403045:	pop    eax
  403046:	adc    BYTE PTR cs:[ecx+0x79],ah
  40304a:	mov    ebp,0x16c6b2c5
  40304f:	dec    eax
  403050:	sbb    dl,ah
  403052:	imul   eax,edx,0x1171af8
  403058:	in     al,0x45
  40305a:	dec    ecx
  40305b:	iret   
  40305c:	or     ch,ah
  40305e:	ss push edi
  403060:	mov    BYTE PTR [eax-0x2a],al
  403063:	cli    
  403064:	cli    
  403065:	mov    bh,0x7c
  403067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403068:	daa    
  403069:	sub    BYTE PTR [ecx],ch
  40306b:	inc    esp
  40306c:	loopne 0x40307e
  40306e:	xchg   ebx,eax
  40306f:	jo     0x4030ad
  403071:	into   
  403072:	mov    ecx,0x87e33d17
  403077:	repnz fbld TBYTE PTR es:[esi]
  40307b:	shl    BYTE PTR [ecx-0x32eda17e],1
  403081:	lods   al,BYTE PTR ds:[esi]
  403082:	push   ss
  403083:	hlt    
  403084:	jecxz  0x4030aa
  403086:	and    DWORD PTR [ecx-0x7a],ebp
  403089:	mov    ds:0x2ceecfdb,eax
  40308e:	xlat   BYTE PTR ds:[ebx]
  40308f:	inc    ebp
  403090:	xchg   edx,eax
  403091:	leave  
  403092:	outs   dx,DWORD PTR ds:[esi]
  403093:	adc    al,BYTE PTR [edi+ebx*4-0x53]
  403097:	and    ch,BYTE PTR [ecx+eiz*4+0xc6fa044]
  40309e:	add    dl,ah
  4030a0:	inc    ecx
  4030a1:	jnp    0x403100
  4030a3:	cmp    BYTE PTR [edi+0x28],dl
  4030a6:	mov    dh,0x61
  4030a8:	fadd   st(0),st
  4030aa:	or     bh,BYTE PTR [ebp-0x5bd3c1a4]
  4030b0:	jp     0x40306e
  4030b2:	dec    ecx
  4030b3:	mov    ah,0x19
  4030b5:	sbb    BYTE PTR [eax+ebx*2+0x1b],bl
  4030b9:	inc    esi
  4030ba:	cmp    ebp,DWORD PTR [edx+0x5a501d3c]
  4030c0:	add    dh,BYTE PTR [ebx]
  4030c2:	out    0xc9,al
  4030c4:	lods   al,BYTE PTR ds:[esi]
  4030c5:	nop
  4030c6:	mov    eax,0x5366e42b
  4030cb:	fnsave [edi+ebx*2-0x7a]
  4030cf:	mov    cl,0x55
  4030d1:	ds in  al,0x8f
  4030d4:	mov    DWORD PTR [ebp+0x5c],ebx
  4030d7:	loope  0x4030dd
  4030d9:	add    bh,0x43
  4030dc:	adc    ebp,DWORD PTR [eax]
  4030de:	or     al,0xe2
  4030e0:	bound  esp,QWORD PTR [ecx]
  4030e2:	adc    al,0xe9
  4030e4:	mov    es,WORD PTR [esi-0x61]
  4030e7:	mov    eax,ds:0xb62c141b
  4030ec:	addr16 repnz inc ebx
  4030ef:	cmp    al,0x5b
  4030f1:	out    0x8e,eax
  4030f3:	loopne 0x403076
  4030f5:	jecxz  0x4030f7
  4030f7:	mov    ch,0x34
  4030f9:	jo     0x403143
  4030fb:	inc    edx
  4030fc:	sbb    DWORD PTR [esi+0x21],ebp
  4030ff:	add    al,0x89
  403101:	and    DWORD PTR [ebp+0xdd131ea],eax
  403107:	cmp    BYTE PTR [ecx-0x63a9044e],bl
  40310d:	out    dx,al
  40310e:	mov    ch,0xa2
  403110:	loope  0x403116
  403112:	adc    BYTE PTR [eax+0xa],bl
  403115:	jge    0x403182
  403117:	and    DWORD PTR [esi+ebp*1-0x19],ebx
  40311b:	out    0x31,eax
  40311d:	imul   esi,DWORD PTR [ebx],0x562d31bd
  403123:	(bad)  
  403124:	pop    ds
  403125:	scas   eax,DWORD PTR es:[edi]
  403126:	popa   
  403127:	je     0x403150
  403129:	add    ah,BYTE PTR [ebp+0x7139adde]
  40312f:	ror    DWORD PTR [ecx-0x6ee5f3b8],cl
  403135:	dec    edx
  403136:	push   ds
  403137:	push   edx
  403138:	dec    eax
  403139:	xor    edi,esp
  40313b:	mov    ebx,DWORD PTR [ecx]
  40313d:	xchg   ebp,eax
  40313e:	cdq    
  40313f:	call   0xc4e4ebf2
  403144:	popa   
  403145:	loop   0x40312f
  403147:	sar    BYTE PTR [eax+eax*4],1
  40314a:	(bad)
  40314d:	aad    0x46
  40314f:	cwde   
  403150:	xchg   esp,eax
  403151:	inc    eax
  403152:	adc    BYTE PTR [ecx],al
  403154:	repnz and DWORD PTR [edi+edx*8],esp
  403158:	retf   
  403159:	popa   
  40315a:	stos   DWORD PTR es:[edi],eax
  40315b:	mov    cl,0x57
  40315d:	fcmovnbe st,st(7)
  40315f:	leave  
  403160:	jbe    0x4031b7
  403162:	and    ebx,DWORD PTR [edi+edx*2-0xfcc832e]
  403169:	imul   eax,ebx,0x23
  40316c:	in     eax,0x73
  40316e:	call   0xadb9:0x80ff20c8
  403175:	pop    edi
  403176:	(bad)  
  403177:	sub    esp,DWORD PTR [edx+0x15eb1fe9]
  40317d:	mov    ecx,0x2c13ecb4
  403182:	cmp    eax,0x9e6ab75f
  403187:	mov    cl,0xc2
  403189:	xlat   BYTE PTR ds:[ebx]
  40318a:	xlat   BYTE PTR ds:[ebx]
  40318b:	mov    ah,0x2e
  40318d:	push   eax
  40318e:	fs (bad) 
  403190:	fmul   DWORD PTR [edi+0x596f8820]
  403196:	daa    
  403197:	imul   esi,DWORD PTR [ecx+0x64],0xffffffe9
  40319b:	aad    0x38
  40319d:	mov    ah,BYTE PTR [ebp+0x43]
  4031a0:	pop    ebp
  4031a1:	dec    edx
  4031a2:	mov    cl,0xb9
  4031a4:	retf   
  4031a5:	pop    ds
  4031a6:	stc    
  4031a7:	scas   al,BYTE PTR es:[edi]
  4031a8:	fst    st(0)
  4031aa:	shr    DWORD PTR [edx],cl
  4031ac:	retf   
  4031ad:	inc    edi
  4031ae:	sbb    BYTE PTR [ecx],bh
  4031b0:	inc    edx
  4031b1:	fsubr  QWORD PTR [edi-0x4c]
  4031b4:	sub    ebx,DWORD PTR [edi+0x1d5258a7]
  4031ba:	aaa    
  4031bb:	mov    esp,0x765ddbd1
  4031c0:	mov    ds:0x506329f5,al
  4031c5:	xor    al,BYTE PTR [edi-0x76d1ffe9]
  4031cb:	and    BYTE PTR [edi-0x64],dl
  4031ce:	or     DWORD PTR [ebx-0x3d3266c7],edi
  4031d4:	inc    ebp
  4031d5:	dec    eax
  4031d6:	ins    DWORD PTR es:[edi],dx
  4031d7:	cwde   
  4031d8:	mov    gs,WORD PTR [esi-0x2f16fa23]
  4031de:	cmp    BYTE PTR [edi+0x54],0x99
  4031e2:	fisub  WORD PTR [ebp-0x4e92a30a]
  4031e8:	jecxz  0x40321a
  4031ea:	mov    bh,0x6d
  4031ec:	mov    esi,0x7d289f23
  4031f1:	adc    DWORD PTR [ebx+0x4b],edx
  4031f4:	cmp    BYTE PTR [esi+0x3f701f71],al
  4031fa:	mov    al,ds:0xf17a2530
  4031ff:	mov    ebx,0x10d63247
  403204:	call   0x25a97b5a
  403209:	jbe    0x403230
  40320b:	xor    eax,0x79aa596c
  403210:	dec    edx
  403211:	cld    
  403212:	imul   ebp,DWORD PTR [ecx-0x7d],0x59
  403216:	xor    DWORD PTR ds:0x43ac40d0,0xfffffff4
  40321d:	mov    ds,WORD PTR [esi+0x38271fd2]
  403223:	pop    es
  403224:	pusha  
  403225:	mov    ecx,0xee9b2af6
  40322a:	loope  0x403284
  40322c:	pop    edx
  40322d:	test   DWORD PTR [edi-0x9],esp
  403230:	imul   edi,DWORD PTR [ecx+0x606253e],0x6f15ea9b
  40323a:	call   0x2703bf5a
  40323f:	xchg   edi,eax
  403240:	dec    esi
  403241:	add    ebp,DWORD PTR [edx-0x72]
  403244:	push   es
  403245:	pop    ds
  403246:	inc    ebp
  403247:	(bad)  
  403248:	in     eax,dx
  403249:	mov    eax,ds:0xde4d62ad
  40324e:	xor    ecx,ecx
  403250:	test   eax,0xf5d13006
  403255:	je     0x40323f
  403257:	mov    ah,0x45
  403259:	shl    eax,0xf
  40325c:	pop    esp
  40325d:	mov    al,ds:0xb98fbc01
  403262:	outs   dx,DWORD PTR ds:[esi]
  403263:	ins    BYTE PTR es:[edi],dx
  403264:	mov    ds:0x193bffe8,al
  403269:	mov    ebp,0xe7c4633a
  40326e:	jmp    0xa579918e
  403273:	rcr    BYTE PTR [ebp+0x7f00e216],cl
  403279:	fsub   QWORD PTR [eax-0xa]
  40327c:	jl     0x40324a
  40327e:	aas    
  40327f:	pop    es
  403280:	fwait
  403281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403282:	div    BYTE PTR [esi]
  403284:	sub    eax,0xe39f745d
  403289:	(bad)  
  40328a:	mov    ecx,0x58479049
  40328f:	dec    eax
  403290:	add    eax,0x296ffe56
  403295:	sub    dl,BYTE PTR [esp+edx*8+0x3123a602]
  40329c:	imul   eax,DWORD PTR [edi-0x2e],0xad0411d6
  4032a3:	or     DWORD PTR [edi],0xfffffffc
  4032a6:	xor    BYTE PTR [esi],ch
  4032a8:	mov    eax,ds:0xc821712b
  4032ad:	and    ah,al
  4032af:	jbe    0x4032a6
  4032b1:	ins    BYTE PTR es:[edi],dx
  4032b2:	add    bl,BYTE PTR [edi-0x5c]
  4032b5:	popa   
  4032b6:	mov    ds:0x834c77ce,al
  4032bb:	and    al,0xfa
  4032bd:	xor    al,0x21
  4032bf:	fstp   DWORD PTR [edx+0x60]
  4032c2:	dec    eax
  4032c3:	inc    edx
  4032c4:	test   DWORD PTR [ecx+0x6c],ebx
  4032c7:	jne    0x4032d8
  4032c9:	adc    al,BYTE PTR [esi-0x77]
  4032cc:	inc    esi
  4032cd:	nop
  4032ce:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4032d0:	sahf   
  4032d1:	add    BYTE PTR [eax-0x74bf70ee],al
  4032d7:	and    BYTE PTR [eax+0x51416820],ah
  4032dd:	adc    ecx,DWORD PTR [esp+esi*4]
  4032e0:	aam    0x62
  4032e2:	sub    ecx,DWORD PTR [ebp-0x34a20753]
  4032e8:	ret    
  4032e9:	push   cs
  4032ea:	adc    al,0x4b
  4032ec:	xor    ebp,ebp
  4032ee:	xor    al,BYTE PTR [esp+edi*8]
  4032f1:	pop    ax
  4032f3:	data16 mov ds:0x86bb6e83,al
  4032f9:	pushf  
  4032fa:	xor    eax,0xb8da198a
  4032ff:	ret    0xd6ea
  403302:	lahf   
  403303:	aam    0x49
  403305:	sbb    DWORD PTR [eax],ebp
  403307:	inc    esi
  403308:	out    dx,al
  403309:	mov    ebx,0xeb9b9390
  40330e:	stos   DWORD PTR es:[edi],eax
  40330f:	cdq    
  403310:	in     eax,0x31
  403312:	test   al,0x14
  403314:	pop    ecx
  403315:	or     BYTE PTR [ecx-0x507841de],ah
  40331b:	dec    esi
  40331c:	jle    0x4032e3
  40331e:	push   eax
  40331f:	mov    DWORD PTR ds:0x965c1915,0xfb02950a
  403329:	lock and esp,DWORD PTR [ebx+0x1f]
  40332d:	or     DWORD PTR [edi+0x39],ebx
  403330:	inc    edx
  403331:	cmp    BYTE PTR [ebx+0x2ea8eb44],0xbc
  403338:	scas   al,BYTE PTR es:[edi]
  403339:	xchg   edx,eax
  40333a:	in     al,dx
  40333b:	xchg   ebx,eax
  40333c:	add    esi,ecx
  40333e:	jmp    FWORD PTR [ebp-0x3b]
  403341:	mov    bl,0x79
  403343:	sub    al,0xbc
  403345:	mov    ah,0x72
  403347:	cmc    
  403348:	nop
  403349:	adc    esp,0x3d
  40334c:	pop    ss
  40334d:	adc    dl,ah
  40334f:	sub    DWORD PTR [ecx+ecx*4],edi
  403352:	inc    edx
  403353:	and    al,0x80
  403355:	imul   edi,DWORD PTR [ecx],0xb30cd958
  40335b:	inc    ebp
  40335c:	imul   ecx,DWORD PTR [esi+0x5cd73edf],0x7
  403363:	pop    ecx
  403364:	ds (bad) 
  403366:	outs   dx,DWORD PTR ds:[esi]
  403367:	fdiv   QWORD PTR ds:0x889b8749
  40336d:	cmp    eax,0xa36c4f72
  403372:	arpl   WORD PTR [ebx],ax
  403374:	xor    BYTE PTR [eax+0x1c],dh
  403377:	cmp    ebx,eax
  403379:	test   esi,esp
  40337b:	sub    DWORD PTR [edx+edi*8-0x5342312],0xd4ef5db9
  403386:	mov    al,ds:0xb4c370f9
  40338b:	pop    edi
  40338c:	in     eax,0x57
  40338e:	in     eax,0x45
  403390:	ret    0x845d
  403393:	jp     0x40334b
  403395:	stc    
  403396:	dec    edx
  403397:	pop    es
  403398:	push   edx
  403399:	push   ebx
  40339a:	mov    ch,0xee
  40339c:	ins    DWORD PTR es:[edi],dx
  40339d:	push   ss
  40339e:	mov    esi,ebp
  4033a0:	sahf   
  4033a1:	or     DWORD PTR [esi+0x369b33fc],edx
  4033a7:	mov    al,ds:0x6f67309c
  4033ac:	(bad)  [edx-0x22f0dc9c]
  4033b2:	xor    edi,DWORD PTR [ecx]
  4033b4:	pop    ecx
  4033b5:	add    BYTE PTR [esi+edi*4],bl
  4033b8:	push   ecx
  4033b9:	pop    ecx
  4033ba:	jmp    0x1f91:0xbab9a0fc
  4033c1:	fwait
  4033c2:	in     al,dx
  4033c3:	mov    ds:0x396ddf2b,eax
  4033c8:	icebp  
  4033c9:	pop    ebx
  4033ca:	js     0x403425
  4033cc:	pop    ecx
  4033cd:	mov    ebp,0x90ab635c
  4033d2:	fmul   QWORD PTR [edx-0x6da4e057]
  4033d8:	neg    BYTE PTR [ebx+eiz*8]
  4033db:	cdq    
  4033dc:	pop    ebx
  4033dd:	add    esp,esi
  4033df:	(bad)  
  4033e0:	sbb    DWORD PTR [edx-0x79bdeac0],ebp
  4033e6:	xchg   edi,eax
  4033e7:	pop    ebx
  4033e8:	push   esi
  4033e9:	das    
  4033ea:	pop    eax
  4033eb:	in     al,0x85
  4033ed:	fcomp  DWORD PTR [ecx]
  4033ef:	jmp    0x4033f5
  4033f1:	mov    ds:0xe9986b3e,eax
  4033f6:	pop    ecx
  4033f7:	jle    0x403478
  4033f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033fa:	mov    ds:0xcf433201,al
  4033ff:	fimul  WORD PTR [ebx+ecx*4+0x63dddad3]
  403406:	push   ds
  403407:	pop    ds
  403408:	retf   
  403409:	shr    BYTE PTR [edx-0x1e1227d7],cl
  40340f:	push   ebx
  403410:	adc    DWORD PTR [esi+0xe7564fc],esp
  403416:	hlt    
  403417:	pop    ss
  403418:	cmp    BYTE PTR [ebx+0x17],dl
  40341b:	rcl    cl,0x7d
  40341e:	mov    ah,0x3a
  403420:	enter  0xb741,0x1a
  403424:	pop    ebx
  403425:	in     al,0x86
  403427:	xchg   BYTE PTR [edx+0x7befd8c2],ah
  40342d:	mov    al,ds:0x3915787f
  403432:	push   edx
  403433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403434:	cmp    DWORD PTR [edi+0x507ef91c],edx
  40343a:	jg     0x4034a4
  40343c:	mov    eax,0xbed1ce60
  403441:	leave  
  403442:	xchg   edx,eax
  403443:	out    0x86,eax
  403445:	popa   
  403446:	scas   eax,DWORD PTR es:[edi]
  403447:	push   esi
  403448:	aam    0xa2
  40344a:	push   es
  40344b:	mov    al,0xa6
  40344d:	mov    dl,0x9f
  40344f:	(bad)
  403453:	pop    ds
  403454:	add    eax,0x7283a406
  403459:	shl    DWORD PTR [ebp+0x34],1
  40345c:	pop    esi
  40345d:	or     BYTE PTR [esi],0xdb
  403460:	in     al,0x51
  403462:	push   ds
  403463:	retf   0x6c2b
  403466:	jbe    0x403463
  403468:	xlat   BYTE PTR ds:[ebx]
  403469:	adc    DWORD PTR [esi-0x10],esi
  40346c:	push   es
  40346d:	cmp    al,0x24
  40346f:	jno    0x4034be
  403471:	add    al,BYTE PTR [eax+0x195e6402]
  403477:	mov    ?,WORD PTR ds:0x5bfd24d1
  40347d:	mov    WORD PTR [edx-0x34],ds
  403480:	jle    0x4034a7
  403482:	shl    DWORD PTR [edx-0x8],0xf9
  403486:	test   DWORD PTR [esi],esp
  403488:	cmc    
  403489:	push   edi
  40348a:	call   0x7ee6:0xf3fa5efb
  403491:	sahf   
  403492:	inc    edi
  403493:	cmp    al,cl
  403495:	test   BYTE PTR [si],bl
  403498:	inc    ebp
  403499:	sub    al,0x5f
  40349b:	int3   
  40349c:	mul    DWORD PTR [ebx]
  40349e:	(bad)  
  40349f:	push   esi
  4034a0:	cmp    esi,ecx
  4034a2:	push   0x9154612e
  4034a7:	cmp    DWORD PTR [edi+0x22],ecx
  4034aa:	sbb    eax,0x8ad244a0
  4034af:	sti    
  4034b0:	outs   dx,BYTE PTR ds:[esi]
  4034b1:	xor    BYTE PTR [edx],bh
  4034b3:	into   
  4034b4:	dec    esp
  4034b5:	jmp    0x40347c
  4034b7:	cdq    
  4034b8:	sbb    ebp,ecx
  4034ba:	popa   
  4034bb:	or     ch,BYTE PTR [eax-0x3b]
  4034be:	aad    0xb8
  4034c0:	push   ss
  4034c1:	sub    DWORD PTR [ebx],ecx
  4034c3:	add    ah,ch
  4034c5:	mov    dl,0x89
  4034c7:	lock mov al,ds:0xcce0a637
  4034cd:	das    
  4034ce:	ret    
  4034cf:	cmp    BYTE PTR [eax-0x65],bh
  4034d2:	mov    ecx,0xe21a1777
  4034d7:	(bad)  
  4034d8:	lods   eax,DWORD PTR ds:[esi]
  4034d9:	outs   dx,BYTE PTR ds:[esi]
  4034da:	cmp    esp,DWORD PTR [edx-0x7e]
  4034dd:	sbb    edx,DWORD PTR [ebx-0x7d]
  4034e0:	mov    ch,0x6f
  4034e2:	jbe    0x40351e
  4034e4:	adc    BYTE PTR [ebp+0x2eade746],cl
  4034ea:	jne    0x4034af
  4034ec:	mov    ecx,DWORD PTR [ebp-0x37cb8823]
  4034f2:	cdq    
  4034f3:	mov    eax,ds:0x96bfa344
  4034f8:	xchg   edx,eax
  4034f9:	inc    ecx
  4034fa:	(bad)  
  4034fb:	xchg   esp,eax
  4034fc:	mov    ecx,0x32d4ad6
  403501:	pop    esi
  403502:	das    
  403503:	ror    DWORD PTR [ebx],1
  403505:	add    eax,0xa57eb0fa
  40350a:	clc    
  40350b:	adc    edi,DWORD PTR [ebx-0x19]
  40350e:	call   0x62da:0xab22dc68
  403515:	or     DWORD PTR [edx+0x2e],esi
  403518:	jno    0x4034b3
  40351a:	pop    ds
  40351b:	stos   BYTE PTR es:[edi],al
  40351c:	jge    0x403519
  40351e:	cli    
  40351f:	vorps  xmm4,xmm4,XMMWORD PTR [edx+0x13]
  403524:	and    DWORD PTR [edx+eiz*4+0x645eae9],ebp
  40352b:	pop    eax
  40352c:	loop   0x40354a
  40352e:	into   
  40352f:	or     al,0xc9
  403531:	in     eax,dx
  403532:	into   
  403533:	cmc    
  403534:	scas   eax,DWORD PTR es:[edi]
  403535:	jge    0x4034e2
  403537:	xchg   DWORD PTR [ecx-0x7b94b87],ebx
  40353d:	mov    WORD PTR [ebx-0x1960b481],?
  403543:	fnsave [edi]
  403545:	enter  0x5670,0x81
  403549:	(bad)  
  40354a:	add    DWORD PTR [eax+0x62],ecx
  40354d:	pop    ds
  40354e:	cmp    edx,edi
  403550:	out    dx,eax
  403551:	in     al,dx
  403552:	mov    bh,0x97
  403554:	test   al,0x6b
  403556:	sub    al,0xce
  403558:	inc    eax
  403559:	dec    esi
  40355a:	icebp  
  40355b:	dec    ebp
  40355c:	rcr    DWORD PTR [edx],0x5d
  40355f:	xor    DWORD PTR [edx+0x17],ebx
  403562:	sar    ecx,1
  403564:	or     al,0xc4
  403566:	mov    WORD PTR [ecx-0x2f],cs
  403569:	xchg   edx,esp
  40356b:	adc    eax,0x612f10cc
  403570:	mov    ch,0x88
  403573:	sahf   
  403574:	inc    esp
  403575:	idiv   DWORD PTR [ecx+edi*8-0x30]
  403579:	mov    ah,0x6e
  40357b:	loopne 0x40353a
  40357d:	iret   
  40357e:	dec    edi
  40357f:	mov    cl,0x85
  403581:	(bad)  
  403582:	test   ch,al
  403584:	mov    esp,0x3c5c306f
  403589:	xchg   ecx,eax
  40358a:	mov    edi,DWORD PTR [ebp-0x706066d1]
  403590:	xchg   edx,eax
  403591:	sar    esi,1
  403593:	mov    ebx,ebx
  403595:	sbb    eax,DWORD PTR [esi+0x14048ae8]
  40359b:	lahf   
  40359c:	bound  edx,QWORD PTR [ecx+0x6221e9c]
  4035a2:	into   
  4035a3:	stos   BYTE PTR es:[edi],al
  4035a4:	shl    bl,1
  4035a6:	addr16 sub al,0x0
  4035a9:	mov    edx,0xedd5d97b
  4035ae:	mov    al,ds:0x2e55782c
  4035b3:	mov    ebp,0x70b13c81
  4035b8:	inc    edi
  4035b9:	or     BYTE PTR [edi-0x14],0x4e
  4035bd:	fucomp st(3)
  4035bf:	mov    edx,0x2847e14c
  4035c4:	popa   
  4035c5:	in     al,dx
  4035c6:	je     0x403640
  4035c8:	mov    al,ds:0x5f8127a1
  4035cd:	cmp    eax,0x8ef4048d
  4035d2:	jmp    0xe2bd:0xea445d7e
  4035d9:	add    edi,edi
  4035db:	pop    ecx
  4035dc:	dec    esp
  4035dd:	xor    edx,esi
  4035df:	bound  ebp,QWORD PTR [edi]
  4035e1:	mov    ah,0x6a
  4035e3:	mov    esi,0x4143a70f
  4035e8:	mov    eax,ds:0xc840bfb
  4035ed:	dec    edi
  4035ee:	dec    ebp
  4035ef:	jl     0x4035e3
  4035f1:	dec    esi
  4035f2:	add    al,0xfe
  4035f4:	push   eax
  4035f5:	cmp    bl,BYTE PTR [eax]
  4035f7:	and    BYTE PTR ss:[edi-0x3a3617fc],cl
  4035fe:	inc    ebp
  4035ff:	jno    0x4035db
  403601:	push   cs
  403602:	mov    ah,0xd8
  403604:	dec    edi
  403605:	sbb    esi,ebx
  403607:	in     eax,0xc9
  403609:	add    eax,esp
  40360b:	dec    eax
  40360c:	and    al,0x43
  40360e:	adc    BYTE PTR [edx+ecx*2-0x2b],ch
  403612:	inc    esi
  403613:	push   0xab151d53
  403618:	lahf   
  403619:	loop   0x403696
  40361b:	sub    edx,DWORD PTR [ecx-0x2e]
  40361e:	xor    DWORD PTR [edx+eiz*8+0x7c],eax
  403622:	jne    0x40369f
  403624:	add    dh,BYTE PTR [esi+0x47]
  403627:	fwait
  403628:	js     0x4035b8
  40362a:	adc    ch,BYTE PTR ds:0x4cb62054
  403630:	mov    ecx,0x5163d194
  403635:	lods   eax,DWORD PTR ds:[esi]
  403636:	stos   DWORD PTR es:[edi],eax
  403637:	mov    cs,WORD PTR [edi]
  403639:	les    ecx,FWORD PTR [esp+eiz*2+0x7dda92a1]
  403640:	or     BYTE PTR [eax-0x16],al
  403643:	or     BYTE PTR [eax+0x62],0xca
  403647:	js     0x40362d
  403649:	sbb    edx,DWORD PTR [edx]
  40364b:	into   
  40364c:	test   eax,0xf56b5143
  403651:	add    cl,BYTE PTR [ecx+0x14]
  403654:	xor    eax,0x9b10efda
  403659:	adc    eax,0x65
  40365c:	sub    DWORD PTR [ecx+0x57],esp
  40365f:	cmc    
  403660:	cmp    bh,BYTE PTR [ebp-0x80]
  403663:	jge    0x403665
  403665:	je     0x403631
  403667:	sub    al,0x21
  403669:	stos   DWORD PTR es:[edi],eax
  40366a:	adc    dl,bl
  40366c:	mov    edx,0x20a79f92
  403671:	pop    edx
  403672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403673:	adc    eax,ecx
  403675:	sbb    DWORD PTR [esi+0x67],ebx
  403678:	cmp    edx,eax
  40367a:	push   ecx
  40367b:	cld    
  40367c:	dec    edi
  40367d:	cs dec edx
  40367f:	mov    ds:0xe7c6403f,eax
  403684:	add    BYTE PTR [esi-0x740325bd],dh
  40368a:	jne    0x403654
  40368c:	call   FWORD PTR [eax+0x4b40798e]
  403692:	mov    edi,0x40af24db
  403697:	lahf   
  403698:	mov    bl,BYTE PTR [ebx+edx*8-0x62]
  40369c:	popa   
  40369d:	cmp    BYTE PTR [eax-0x198260ce],ch
  4036a3:	jbe    0x403694
  4036a5:	pop    edx
  4036a6:	add    DWORD PTR [ebx],edi
  4036a8:	sahf   
  4036a9:	(bad)  
  4036aa:	std    
  4036ab:	mov    BYTE PTR [ecx+0x3e],dh
  4036ae:	(bad)  
  4036af:	(bad)  
  4036b0:	and    eax,0x99453537
  4036b5:	ficomp WORD PTR [esi+0x5f0a1741]
  4036bb:	jl     0x403710
  4036bd:	rcr    DWORD PTR [edx+0x15],cl
  4036c0:	pop    ebp
  4036c1:	call   0xbb8d772
  4036c6:	fwait
  4036c7:	ins    BYTE PTR es:[edi],dx
  4036c8:	mov    al,0x49
  4036ca:	into   
  4036cb:	iret   
  4036cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036cd:	outs   dx,BYTE PTR ds:[esi]
  4036ce:	test   DWORD PTR [esi+edx*8],ebp
  4036d1:	cmp    BYTE PTR [edi+0x31],dh
  4036d4:	inc    ebp
  4036d5:	push   0x77
  4036d7:	stos   BYTE PTR es:[edi],al
  4036d8:	hlt    
  4036d9:	in     al,0x2f
  4036db:	push   ebx
  4036dc:	loopne 0x4036b4
  4036de:	fisttp DWORD PTR [esi]
  4036e0:	(bad)  
  4036e1:	icebp  
  4036e2:	mov    ebp,0xff711b65
  4036e7:	clc    
  4036e8:	ins    BYTE PTR es:[edi],dx
  4036e9:	push   esi
  4036ea:	out    dx,al
  4036eb:	jg     0x4036a6
  4036ed:	ds loope 0x40373f
  4036f0:	ficom  DWORD PTR [edi+eax*1-0x6472d2ce]
  4036f7:	xchg   edi,eax
  4036f8:	cmp    edi,esp
  4036fa:	jecxz  0x40368a
  4036fc:	std    
  4036fd:	out    0x5c,eax
  4036ff:	jnp    0x40377d
  403701:	leave  
  403702:	ja     0x4036a4
  403704:	xor    BYTE PTR [edx-0x5d],dh
  403707:	xchg   ebx,eax
  403708:	push   ds
  403709:	push   esi
  40370a:	aas    
  40370b:	fdivr  DWORD PTR [edx+ecx*1+0x3b]
  40370f:	inc    edi
  403710:	fistp  WORD PTR [ecx+0x5528f5c]
  403716:	loop   0x40375a
  403718:	jnp    0x40369c
  40371a:	push   0x3f2779b3
  40371f:	das    
  403720:	out    0xe9,al
  403722:	pop    esi
  403723:	cdq    
  403724:	xchg   ebx,eax
  403725:	and    al,0x5f
  403728:	and    al,0xeb
  40372a:	(bad)  
  40372b:	out    dx,al
  40372c:	cmp    eax,0xcae39ac6
  403731:	arpl   WORD PTR [esi],si
  403733:	push   edi
  403734:	mov    BYTE PTR [esi+ebp*4],dh
  403737:	lock sub BYTE PTR [edi+0x53568080],ch
  40373e:	pop    es
  40373f:	sub    cl,bl
  403741:	retf   
  403742:	push   eax
  403743:	add    al,0xfb
  403745:	rcr    DWORD PTR [edx+0x28b36a9b],0xe3
  40374c:	pop    es
  40374d:	pop    esi
  40374e:	or     BYTE PTR [ecx],ah
  403750:	cmp    DWORD PTR [edx],ecx
  403752:	mov    esi,0xaef528c4
  403757:	sub    edi,0xcd1768
  40375d:	xchg   ebx,eax
  40375e:	adc    BYTE PTR [eax-0x59291ef6],dl
  403764:	lods   eax,DWORD PTR ds:[esi]
  403765:	cmp    eax,0xd62fde5d
  40376a:	rol    BYTE PTR [eax+0x5d],1
  40376d:	lds    edx,FWORD PTR [edi+0x5a]
  403770:	adc    BYTE PTR [ebx],0x29
  403773:	loope  0x4037bf
  403775:	pop    esp
  403776:	imul   esp,ecx,0x29
  403779:	add    bh,0x72
  40377c:	mov    ebp,0xafe8035d
  403781:	jb     0x403783
  403783:	retf   
  403784:	adc    BYTE PTR ds:0x28e41bc4,ah
  40378a:	xor    dl,dh
  40378c:	mov    eax,edx
  40378e:	enter  0xad66,0x7c
  403792:	or     DWORD PTR ds:0x469428c8,esi
  403798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403799:	nop
  40379a:	mov    cl,BYTE PTR [ebx-0x22]
  40379d:	pop    ebx
  40379e:	in     eax,dx
  40379f:	mov    esi,0x88564a59
  4037a4:	shr    BYTE PTR [eax],0xe6
  4037a7:	pop    es
  4037a8:	and    BYTE PTR [ebx-0x1511cbec],cl
  4037ae:	mov    ebx,0x67e0aade
  4037b3:	xor    edx,ebx
  4037b5:	jae    0x40382b
  4037b7:	iret   
  4037b8:	(bad)  
  4037b9:	mov    cl,0xe
  4037bb:	adc    eax,0x3bbfb75a
  4037c0:	rol    cl,1
  4037c2:	mov    al,0x3c
  4037c4:	push   ebp
  4037c5:	call   0x737a58a3
  4037ca:	ret    
  4037cb:	pop    es
  4037cc:	and    esi,DWORD PTR [ebx]
  4037ce:	fild   WORD PTR [eax-0x59c39182]
  4037d4:	adc    BYTE PTR [ebp-0x10],0xc5
  4037d8:	xlat   BYTE PTR es:[ebx]
  4037da:	xchg   DWORD PTR ds:0xc68d7e73,ebx
  4037e0:	cmp    al,0xa5
  4037e2:	mov    bl,0x35
  4037e4:	sti    
  4037e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e6:	jmp    0xe6b1d44e
  4037eb:	into   
  4037ec:	xchg   esp,eax
  4037ed:	fwait
  4037ee:	jecxz  0x403816
  4037f0:	adc    BYTE PTR [ebx],bl
  4037f2:	xor    DWORD PTR [ebx-0x4c],edi
  4037f5:	test   eax,0xc4c102b7
  4037fa:	inc    ebp
  4037fb:	ret    
  4037fc:	call   0x9f839e6a
  403801:	jmp    0x4cde:0xd4a36eef
  403808:	cwde   
  403809:	fnsave [eax+esi*2+0x777653bd]
  403810:	mov    ah,0x62
  403812:	dec    esi
  403813:	and    BYTE PTR [edx],cl
  403815:	inc    esp
  403816:	jo     0x403848
  403818:	sar    BYTE PTR [edx-0x63cd7ce5],1
  40381e:	push   ss
  40381f:	int    0xcc
  403821:	lods   al,BYTE PTR ds:[esi]
  403822:	aas    
  403823:	mov    cl,0xad
  403825:	cmp    DWORD PTR [edi+0x6ce32160],0x4c
  40382c:	push   ebx
  40382d:	lock into 
  40382f:	lea    edx,[edi+0x48]
  403832:	adc    eax,0xdaa4f38c
  403837:	add    ch,BYTE PTR [eax+0x3c]
  40383a:	cmp    edi,eax
  40383c:	cwde   
  40383d:	fild   WORD PTR [edi-0x6ad9c0b8]
  403843:	shr    BYTE PTR [ecx-0x12],0xf1
  403847:	sbb    eax,0x650a5c15
  40384c:	jmp    0x4986240e
  403851:	mov    esp,0xe17c1283
  403856:	int3   
  403857:	cmp    eax,0xc82e53c3
  40385c:	sbb    esi,DWORD PTR [ebx-0xb6bca7d]
  403862:	clc    
  403863:	mov    edi,0x841a09c7
  403868:	push   cs
  403869:	sbb    al,0xd9
  40386b:	cld    
  40386c:	push   cs
  40386d:	pop    es
  40386e:	pop    esp
  40386f:	mov    ebx,0x4dfccea9
  403874:	test   al,0xa1
  403876:	(bad)  
  403877:	ds jg  0x403851
  40387a:	sub    eax,0x91d40e6c
  40387f:	jae    0x403887
  403881:	or     esi,DWORD PTR [ecx+0x685b5cc4]
  403887:	(bad)  
  403889:	jg     0x403823
  40388b:	cmp    BYTE PTR [ecx-0xd],bl
  40388e:	ret    0x708c
  403891:	(bad)  
  403892:	xor    DWORD PTR [ebx-0x43fec032],eax
  403898:	and    al,0x49
  40389a:	dec    ebp
  40389b:	inc    ecx
  40389c:	inc    ebp
  40389d:	mov    dh,0x61
  40389f:	stc    
  4038a0:	ja     0x4038a0
  4038a2:	(bad)  
  4038a3:	sub    edx,ebx
  4038a5:	jne    0x403863
  4038a7:	push   ds
  4038a8:	mov    ds:0x5eae22b4,eax
  4038ad:	ins    BYTE PTR es:[edi],dx
  4038ae:	imul   esp,DWORD PTR [eax+0x68ad8f13],0x5d
  4038b5:	daa    
  4038b6:	cmp    BYTE PTR [ecx+0x61],cl
  4038b9:	push   ss
  4038ba:	std    
  4038bb:	js     0x4038b4
  4038bd:	adc    eax,0x26f758c0
  4038c2:	sbb    ebx,DWORD PTR [ecx+eiz*1+0x2e8d9577]
  4038c9:	push   ss
  4038ca:	push   ebx
  4038cb:	inc    esi
  4038cc:	int3   
  4038cd:	dec    ebx
  4038ce:	mov    ebp,esi
  4038d0:	sahf   
  4038d1:	xor    eax,0x391a8c
  4038d6:	xchg   esp,eax
  4038d7:	dec    ebx
  4038d8:	fcmove st,st(0)
  4038da:	hlt    
  4038db:	fiadd  DWORD PTR [edx-0x2c258de9]
  4038e1:	aaa    
  4038e2:	push   ss
  4038e3:	and    al,0xec
  4038e5:	inc    DWORD PTR [edi+0x1e80e16e]
  4038eb:	gs sub ch,al
  4038ee:	lods   eax,DWORD PTR ds:[esi]
  4038ef:	jmp    0x4038be
  4038f1:	test   eax,0x8611bd4e
  4038f6:	stc    
  4038f7:	lods   eax,DWORD PTR ds:[esi]
  4038f8:	cmp    BYTE PTR [edx],0x1f
  4038fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038fc:	dec    esp
  4038fd:	adc    eax,0x52ff0ee1
  403902:	clc    
  403903:	lods   eax,DWORD PTR ds:[esi]
  403904:	and    edx,esp
  403906:	pop    ss
  403907:	xchg   esi,eax
  403908:	adc    al,0xfb
  40390a:	fidiv  WORD PTR ds:0xdeb698d3
  403910:	add    edx,edx
  403912:	mov    ebp,0x293ec84f
  403917:	pop    eax
  403918:	mov    bl,0x2c
  40391a:	retf   0x8a4c
  40391d:	and    al,0x6e
  40391f:	or     al,0x5
  403921:	push   ebx
  403922:	out    dx,al
  403923:	fs rcr dl,0xc2
  403927:	clc    
  403928:	jecxz  0x4038dc
  40392a:	js     0x4039aa
  40392c:	sub    eax,DWORD PTR [edx-0x1fbd4163]
  403932:	js     0x403976
  403934:	cmp    BYTE PTR [ebp+0x4918b4e7],ah
  40393a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40393b:	dec    edi
  40393c:	rcl    BYTE PTR [edi+0x79d77ae5],cl
  403942:	dec    esp
  403943:	jg     0x403923
  403945:	cmp    eax,0xbc1cb31f
  40394a:	jno    0x403902
  40394c:	hlt    
  40394d:	mov    esp,edi
  40394f:	lods   eax,DWORD PTR ds:[esi]
  403950:	or     eax,0xe3e40368
  403955:	push   esp
  403956:	retf   0xe707
  403959:	or     eax,0x12d2a02a
  40395e:	jno    0x40391b
  403960:	rcr    DWORD PTR [esi+0x50],1
  403963:	(bad)  [ecx-0x7055494]
  403969:	mov    dl,cl
  40396b:	xor    DWORD PTR [eax+eiz*4-0x13],0x1efd2a00
  403973:	inc    ebx
  403974:	inc    ebp
  403975:	jbe    0x403949
  403977:	fidivr WORD PTR [ebp+edx*1-0x34]
  40397b:	lea    esi,[ecx]
  40397d:	or     eax,0xee9df66f
  403982:	and    BYTE PTR [ebx],dh
  403984:	and    eax,0x646ccacf
  403989:	mov    ebx,0x940d2fe1
  40398e:	mov    eax,0x5103b56b
  403993:	xor    BYTE PTR [edx+0x72b5d076],0xaf
  40399a:	push   edx
  40399b:	enter  0xb5d1,0x39
  40399f:	push   esp
  4039a0:	call   0x37950696
  4039a5:	pop    esi
  4039a6:	(bad)  
  4039a7:	sub    eax,0xe1d7848
  4039ac:	std    
  4039ad:	and    edi,DWORD PTR ds:0xe22a123a
  4039b3:	jmp    0x4039c9
  4039b5:	ds dec ebx
  4039b7:	sub    dl,dh
  4039b9:	dec    esi
  4039ba:	push   0xa535ca92
  4039bf:	leave  
  4039c0:	je     0x403a31
  4039c2:	jno    0x4039a3
  4039c4:	cmp    bh,al
  4039c6:	mov    ecx,0x3abde320
  4039cb:	xchg   edi,eax
  4039cc:	pop    ds
  4039cd:	cmp    ah,BYTE PTR [esi]
  4039cf:	dec    esp
  4039d0:	imul   edx,esp,0x5d
  4039d3:	sbb    DWORD PTR [ebx+ebp*8],ebp
  4039d6:	cmp    eax,0xe8061f86
  4039db:	ds mov esp,eax
  4039de:	cli    
  4039df:	out    dx,eax
  4039e0:	xchg   esp,eax
  4039e1:	adc    ebp,DWORD PTR [eax-0x38]
  4039e4:	sbb    al,0x2b
  4039e6:	push   ecx
  4039e7:	sbb    ebx,esp
  4039e9:	xlat   BYTE PTR ds:[ebx]
  4039ea:	or     eax,0x1ea0d11b
  4039ef:	mov    eax,0x618a1b73
  4039f4:	int    0x95
  4039f6:	test   al,0x68
  4039f8:	sub    edi,0xffffffb7
  4039fb:	ficom  WORD PTR [edx]
  4039fd:	mov    dh,0x10
  4039ff:	mov    ebx,0xec0437b
  403a04:	scas   al,BYTE PTR es:[edi]
  403a05:	stos   BYTE PTR es:[edi],al
  403a06:	push   cs
  403a07:	dec    edi
  403a08:	and    BYTE PTR [edi],dl
  403a0a:	jg     0x4039c3
  403a0c:	or     eax,0x44492fd8
  403a11:	push   ecx
  403a12:	pop    edi
  403a13:	inc    eax
  403a14:	and    al,0xe5
  403a16:	adc    DWORD PTR [ebx-0x6d0095c3],eax
  403a1c:	jl     0x403a41
  403a1e:	push   eax
  403a1f:	fbstp  TBYTE PTR ds:0xabca605a
  403a25:	iret   
  403a26:	push   esp
  403a27:	jmp    0xe82f2784
  403a2c:	pmulhuw mm2,QWORD PTR [esi+0x65]
  403a30:	clc    
  403a31:	shr    BYTE PTR [ebx+0x4b82fde5],cl
  403a37:	dec    eax
  403a38:	pusha  
  403a39:	add    al,0x3e
  403a3b:	nop
  403a3c:	(bad)  
  403a3d:	in     al,0x7b
  403a3f:	sub    al,0xec
  403a41:	jg     0x403a23
  403a43:	jb     0x403a07
  403a45:	mov    esi,0xe331de07
  403a4a:	mov    ch,0x4f
  403a4c:	ficom  DWORD PTR [ecx-0x72dbe6f6]
  403a52:	ss stos BYTE PTR es:[edi],al
  403a54:	loopne 0x403a34
  403a56:	enter  0x2576,0x69
  403a5a:	mov    al,0x3a
  403a5c:	popf   
  403a5d:	inc    edx
  403a5e:	ss retf 
  403a60:	repz xchg edx,eax
  403a62:	push   ss
  403a63:	push   ss
  403a64:	scas   eax,DWORD PTR es:[edi]
  403a65:	or     ah,BYTE PTR [ebp+0x4d130c35]
  403a6b:	sar    DWORD PTR [edi+0x71],cl
  403a6e:	push   esi
  403a6f:	xor    al,0x15
  403a71:	scas   al,BYTE PTR es:[edi]
  403a72:	jae    0x403a75
  403a74:	dec    edi
  403a75:	vpcomq xmm3,xmm6,XMMWORD PTR [eax],0xfd
  403a7b:	clc    
  403a7c:	pop    ebx
  403a7d:	mov    al,0x9
  403a7f:	pop    ebp
  403a80:	cmp    BYTE PTR [ebx+0x63699a9],0xc4
  403a87:	sub    eax,0x24a129e4
  403a8c:	loopne 0x403a71
  403a8e:	lods   al,BYTE PTR ds:[esi]
  403a8f:	xchg   ebp,eax
  403a90:	sbb    edi,ecx
  403a92:	mov    eax,ds:0x84b52add
  403a97:	jb     0x403ac6
  403a99:	adc    DWORD PTR [eax],esp
  403a9b:	and    ah,0xfc
  403a9e:	cld    
  403a9f:	sbb    dl,BYTE PTR [ebx]
  403aa1:	push   edi
  403aa2:	cmc    
  403aa3:	test   BYTE PTR [edx+0x4e],dl
  403aa6:	js     0x403aec
  403aa8:	rcl    DWORD PTR es:[esi+edx*1+0x75],0xef
  403aae:	arpl   WORD PTR [esi],ax
  403ab0:	and    DWORD PTR [ebp+ebp*2-0x68f05f48],0xffffffec
  403ab8:	mov    dh,0x52
  403aba:	or     dl,BYTE PTR [edi+ebx*2-0x48]
  403abe:	jae    0x403b1b
  403ac0:	mov    ds:0x73bbfac7,eax
  403ac5:	xchg   edi,eax
  403ac6:	add    eax,DWORD PTR ds:0xe8019515
  403acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403acd:	sbb    BYTE PTR [edi],cl
  403acf:	in     eax,dx
  403ad0:	pop    es
  403ad1:	(bad)  
  403ad2:	out    dx,al
  403ad3:	sub    al,0x84
  403ad5:	push   edx
  403ad6:	js     0x403a77
  403ad8:	sub    DWORD PTR [ebx],ebx
  403ada:	jno    0x403a62
  403adc:	sub    ebp,edx
  403ade:	cmp    BYTE PTR [eax-0x24],cl
  403ae1:	add    DWORD PTR [eax],eax
  403ae3:	mov    bh,0x2c
  403ae5:	jno    0x403a80
  403ae7:	dec    eax
  403ae8:	les    ecx,FWORD PTR [edi-0x6b]
  403aeb:	ins    DWORD PTR es:[edi],dx
  403aec:	cmp    eax,0x39422e94
  403af1:	test   al,0x93
  403af3:	fdiv   DWORD PTR [edx+0x3d17550]
  403af9:	lods   al,BYTE PTR ds:[esi]
  403afa:	pop    ebx
  403afb:	push   cs
  403afc:	mov    esp,0x2ba9e49d
  403b01:	jb     0x403b64
  403b03:	add    DWORD PTR [esi],0xe234adb9
  403b09:	mov    ch,0xf7
  403b0b:	inc    ebp
  403b0c:	jecxz  0x403afe
  403b0e:	cmp    DWORD PTR [esi-0x78d73d00],0x48
  403b15:	adc    eax,0x37402570
  403b1a:	js     0x403ad8
  403b1c:	sbb    edi,DWORD PTR ss:[edi]
  403b1f:	and    ch,BYTE PTR [esi-0x4c]
  403b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b23:	xchg   ecx,eax
  403b24:	ret    0x67e
  403b27:	adc    al,0x25
  403b29:	mov    eax,cs
  403b2b:	and    DWORD PTR [edx],esp
  403b2d:	scas   al,BYTE PTR es:[edi]
  403b2e:	mov    ebp,0x23f35aa1
  403b33:	repnz sbb cl,ch
  403b36:	in     eax,dx
  403b37:	mov    dl,0x2b
  403b39:	es pop ebp
  403b3b:	out    dx,eax
  403b3c:	ret    0x1658
  403b3f:	lock fimul WORD PTR [ecx+0x7a]
  403b43:	mov    edx,?
  403b45:	or     DWORD PTR [esi+0x20],ebx
  403b48:	jp     0x403b69
  403b4a:	sahf   
  403b4b:	or     eax,0xc4835937
  403b50:	sub    al,0x99
  403b52:	sbb    al,0x10
  403b54:	xchg   cl,dl
  403b56:	dec    esi
  403b57:	iret   
  403b58:	fldcw  WORD PTR [esi]
  403b5a:	or     BYTE PTR [eax+0x24d1914e],cl
  403b60:	mov    ds:0x93ef8648,al
  403b65:	leave  
  403b66:	daa    
  403b67:	data16 jae 0x403b74
  403b6a:	xor    edx,DWORD PTR [ebx+0x48206a52]
  403b70:	arpl   si,bx
  403b72:	test   BYTE PTR [eax+0x62],bh
  403b75:	xchg   edi,eax
  403b76:	outs   dx,BYTE PTR ds:[esi]
  403b77:	int    0x6
  403b79:	(bad)  
  403b7b:	xlat   BYTE PTR ds:[ebx]
  403b7c:	dec    ecx
  403b7d:	mov    BYTE PTR [edi],dl
  403b7f:	aas    
  403b80:	dec    eax
  403b81:	call   0x1ba2e85a
  403b86:	std    
  403b87:	ds push edx
  403b89:	jp     0x403b5f
  403b8b:	inc    ebx
  403b8c:	fst    QWORD PTR [edx-0x23]
  403b8f:	xchg   ebx,eax
  403b90:	inc    eax
  403b91:	std    
  403b92:	das    
  403b93:	and    BYTE PTR [esi+0x19bf27c5],dh
  403b99:	cmovno ebx,DWORD PTR [eax]
  403b9c:	gs ins DWORD PTR es:[edi],dx
  403b9e:	outs   dx,DWORD PTR ds:[esi]
  403b9f:	dec    ebp
  403ba0:	lock push eax
  403ba2:	ins    BYTE PTR es:[edi],dx
  403ba3:	xchg   ebp,eax
  403ba4:	xor    al,BYTE PTR [esi]
  403ba6:	jb     0x403bc2
  403ba8:	in     al,dx
  403ba9:	jb     0x403b2e
  403bab:	daa    
  403bac:	cmp    eax,0x9e74a0b1
  403bb1:	pop    eax
  403bb2:	pop    ebx
  403bb3:	mov    DWORD PTR [edi],edx
  403bb5:	sub    eax,0x38810e97
  403bba:	es inc esi
  403bbc:	pop    es
  403bbd:	sub    al,0x51
  403bbf:	xchg   esi,eax
  403bc0:	jne    0x403b80
  403bc2:	adc    dl,bh
  403bc4:	sbb    al,0xc8
  403bc6:	xchg   BYTE PTR ss:[ebp-0x74],ch
  403bca:	dec    ebp
  403bcb:	push   0x14b79604
  403bd0:	mov    dh,0x41
  403bd2:	sub    eax,0xc5128366
  403bd7:	xor    ebp,DWORD PTR [esi-0x76601eff]
  403bdd:	int    0xf2
  403bdf:	cmp    BYTE PTR [eax+eiz*1],dl
  403be2:	push   ebp
  403be3:	mov    ebx,0x4a9a68ff
  403be8:	xchg   esi,eax
  403be9:	out    dx,al
  403bea:	in     al,dx
  403beb:	push   ebx
  403bec:	stos   BYTE PTR es:[edi],al
  403bed:	bound  eax,QWORD PTR [ecx]
  403bef:	mov    ebx,gs
  403bf1:	adc    ah,BYTE PTR [ebx+0x1fc43b35]
  403bf7:	inc    ebp
  403bf8:	cmp    cl,BYTE PTR [edx+ecx*2-0x229347ff]
  403bff:	push   cs
  403c00:	xor    bh,BYTE PTR [esi]
  403c02:	mov    ?,WORD PTR [ebp+eax*4+0x162384c4]
  403c09:	adc    al,0x86
  403c0b:	shr    BYTE PTR [ebx+0x6a52d393],cl
  403c11:	mov    edi,0x60f6abe1
  403c16:	xor    eax,0x7e1ddfa2
  403c1b:	mov    cl,0xa4
  403c1d:	outs   dx,BYTE PTR ds:[esi]
  403c1e:	std    
  403c1f:	stos   DWORD PTR es:[edi],eax
  403c20:	adc    BYTE PTR [ebp+0x6d18c8a7],bh
  403c26:	ret    0xd687
  403c29:	and    al,0xc3
  403c2b:	fmul   DWORD PTR [ebp+0x52]
  403c2e:	inc    edx
  403c2f:	bound  eax,QWORD PTR [ecx+ebx*2-0x3d92ffe0]
  403c36:	and    DWORD PTR [ebx+eax*1-0x3e49d092],eax
  403c3d:	fadd   DWORD PTR [edx+0x245ea1ad]
  403c43:	adc    ch,bl
  403c45:	sub    DWORD PTR [esi],0xd45c69fb
  403c4b:	mov    edi,eax
  403c4d:	cdq    
  403c4e:	add    DWORD PTR [esi+0x2a8e0565],ecx
  403c54:	pop    ds
  403c55:	or     edx,DWORD PTR [esi+0x30]
  403c58:	push   0xffffffc0
  403c5a:	adc    cl,BYTE PTR [ebp-0x50c258de]
  403c60:	test   al,0xb5
  403c62:	xor    ecx,DWORD PTR ds:0xeecef854
  403c68:	xchg   esi,eax
  403c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c6a:	or     edx,ecx
  403c6c:	std    
  403c6d:	ins    DWORD PTR es:[edi],dx
  403c6e:	lock dec eax
  403c70:	jmp    0x6bf847e
  403c75:	adc    BYTE PTR [eax],bl
  403c77:	adc    dl,bh
  403c79:	or     BYTE PTR [edi],ch
  403c7b:	test   al,0x1
  403c7d:	ror    BYTE PTR [ebp+edi*1-0x12],1
  403c81:	mov    dl,BYTE PTR [ecx]
  403c83:	sbb    DWORD PTR [esi],ebp
  403c85:	pop    ebx
  403c86:	xor    eax,0x368e4e94
  403c8b:	jnp    0x403c45
  403c8d:	cwde   
  403c8e:	stos   DWORD PTR es:[edi],eax
  403c8f:	mov    ebx,0xdfad934f
  403c94:	push   ecx
  403c95:	jo     0x403d03
  403c97:	push   esp
  403c98:	pushf  
  403c99:	mov    ecx,0xee8f318f
  403c9e:	mov    ds:0xb94e4cdd,eax
  403ca3:	jge    0x403cca
  403ca5:	aaa    
  403ca6:	je     0x403c4c
  403ca8:	(bad)  
  403ca9:	and    cl,BYTE PTR [ebp-0x65]
  403cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cad:	das    
  403cae:	jb     0x403c4d
  403cb0:	push   cs
  403cb1:	aad    0x6b
  403cb3:	shr    ebp,1
  403cb5:	mov    ch,BYTE PTR [esi+ebx*4-0x11]
  403cb9:	mov    DWORD PTR [ecx-0x616625b8],ebx
  403cbf:	jbe    0x403c71
  403cc1:	xchg   ebp,eax
  403cc2:	icebp  
  403cc3:	popa   
  403cc4:	jecxz  0x403cf5
  403cc6:	test   al,0x8a
  403cc8:	cmp    DWORD PTR [ebx],0x17
  403ccb:	mov    ah,0x55
  403ccd:	aam    0x19
  403ccf:	or     DWORD PTR [esi-0x2a],eax
  403cd2:	dec    esp
  403cd3:	xchg   esi,eax
  403cd4:	(bad)  [ebp+eiz*1-0x6d]
  403cd8:	iret   
  403cd9:	clc    
  403cda:	xor    eax,DWORD PTR [esi]
  403cdc:	dec    edi
  403cdd:	cli    
  403cde:	mov    ds:0x38a12766,al
  403ce3:	aad    0xdb
  403ce5:	pop    ebx
  403ce6:	into   
  403ce7:	jecxz  0x403cf4
  403ce9:	loope  0x403d52
  403ceb:	push   esi
  403cec:	icebp  
  403ced:	xchg   esi,eax
  403cee:	pop    edx
  403cef:	fstp   DWORD PTR [edx]
  403cf1:	mov    ebp,0xb0caec56
  403cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cf7:	gs cmc 
  403cf9:	dec    ecx
  403cfa:	jp     0x403c7d
  403cfc:	stc    
  403cfd:	mov    ds:0x908cbe4d,al
  403d02:	mov    ebp,0x5a8ba7f4
  403d07:	hlt    
  403d08:	shr    DWORD PTR [esp+eiz*2+0x56d99c8a],cl
  403d0f:	mov    ss,WORD PTR [ecx]
  403d11:	xor    esp,DWORD PTR [ebx+0x4e3b1c57]
  403d17:	and    eax,0x40f7e4f7
  403d1c:	(bad)  [edx-0x1e537479]
  403d22:	push   ebx
  403d23:	clc    
  403d24:	hlt    
  403d25:	outs   dx,DWORD PTR ds:[esi]
  403d26:	push   ss
  403d27:	pop    edi
  403d28:	(bad)  
  403d29:	cvttps2pi mm3,xmm2
  403d2c:	aaa    
  403d2d:	push   0x7bc919f8
  403d32:	(bad)  
  403d34:	call   0xddb:0x3957ad29
  403d3b:	lods   eax,DWORD PTR ds:[esi]
  403d3c:	mov    BYTE PTR [edx*1-0x115212ed],ah
  403d43:	daa    
  403d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d45:	add    ch,ch
  403d47:	dec    ebx
  403d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d49:	mov    bl,0x52
  403d4b:	push   esp
  403d4c:	mov    al,ds:0x394201e9
  403d51:	in     eax,0x7b
  403d53:	or     eax,0x7aabebaf
  403d58:	cmp    edx,DWORD PTR [edx+0x72537758]
  403d5e:	cmp    eax,0x7cee2005
  403d63:	sbb    edx,eax
  403d65:	dec    ecx
  403d66:	mov    DWORD PTR [eax-0x2c10102b],esp
  403d6c:	popf   
  403d6d:	mov    esp,edi
  403d6f:	xor    eax,eax
  403d71:	call   0x4cdc2ceb
  403d76:	adc    al,0x95
  403d78:	mov    BYTE PTR [ebp+0x6f],dl
  403d7b:	dec    ebx
  403d7c:	xchg   ebp,eax
  403d7d:	adc    eax,0x8a05f04e
  403d82:	pusha  
  403d83:	inc    edi
  403d84:	mov    edx,0xc39ae6f2
  403d89:	repz int 0x12
  403d8c:	add    al,0xa7
  403d8e:	test   BYTE PTR [edx+0x68a9e8de],ah
  403d94:	xlat   BYTE PTR ds:[ebx]
  403d95:	or     al,0xc
  403d97:	jp     0x403d43
  403d99:	pop    eax
  403d9a:	or     ecx,DWORD PTR [esi+edi*8-0x80]
  403d9e:	mov    edx,0x5778970d
  403da3:	ss push ss
  403da5:	mov    ecx,0x2819b152
  403daa:	dec    BYTE PTR [eax+0x11c60e0f]
  403db0:	in     al,0x35
  403db2:	xor    BYTE PTR [ecx+0xaed5061],bh
  403db8:	inc    ebx
  403db9:	les    edx,FWORD PTR [eax-0x5a]
  403dbc:	sar    BYTE PTR [ebp+ebp*8+0x504de71a],cl
  403dc3:	cmp    dh,ch
  403dc5:	jbe    0x403d5e
  403dc7:	adc    DWORD PTR [ecx+0x1204599a],0x4
  403dce:	out    dx,al
  403dcf:	adc    al,0x70
  403dd1:	aas    
  403dd2:	ins    DWORD PTR es:[edi],dx
  403dd3:	shr    DWORD PTR [ecx],1
  403dd5:	nop
  403dd6:	push   0xffffff8b
  403dd8:	mov    cl,0x86
  403dda:	test   al,0x9
  403ddc:	push   edx
  403ddd:	jl     0x403e31
  403ddf:	loope  0x403e4b
  403de1:	mov    dh,0x5
  403de3:	int3   
  403de4:	xchg   esp,eax
  403de5:	pop    ds
  403de6:	data16 out dx,al
  403de8:	daa    
  403de9:	xchg   edi,eax
  403dea:	or     DWORD PTR [ebp-0x3],esp
  403ded:	ficom  WORD PTR [eax+0x6e]
  403df0:	outs   dx,DWORD PTR ds:[si]
  403df2:	hlt    
  403df3:	sub    edx,DWORD PTR [ebp-0x1f]
  403df6:	scas   eax,DWORD PTR es:[edi]
  403df7:	jmp    0xaa2439d
  403dfc:	int    0xfd
  403dfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dff:	loop   0x403de7
  403e01:	cs inc edi
  403e03:	das    
  403e04:	sub    BYTE PTR [ebx+edx*4+0x4f],0xc
  403e09:	lods   eax,DWORD PTR ds:[esi]
  403e0a:	test   DWORD PTR [edx],ecx
  403e0c:	mov    ebp,0x75784996
  403e11:	mov    DWORD PTR [ebx-0x35a4868d],edi
  403e17:	add    ecx,ebp
  403e19:	xchg   al,ch
  403e1b:	js     0x403df6
  403e1d:	xchg   ebp,eax
  403e1e:	sub    BYTE PTR [edx+ecx*2-0x7e],ch
  403e22:	sbb    dh,BYTE PTR [ecx+0xb]
  403e25:	or     BYTE PTR [ebx+0x5e],bh
  403e28:	jbe    0x403dbc
  403e2a:	sbb    eax,0xe4e0e58c
  403e2f:	rcr    ecx,0xaa
  403e32:	in     eax,0xba
  403e34:	imul   eax,DWORD PTR [ecx],0xffffffd0
  403e37:	mov    ebp,0xae00df96
  403e3c:	mov    ebx,0xa139f153
  403e41:	out    0x94,eax
  403e43:	lods   eax,DWORD PTR ds:[esi]
  403e44:	and    ebx,ebp
  403e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e47:	das    
  403e48:	or     al,0x4b
  403e4a:	in     al,0x48
  403e4c:	pop    es
  403e4d:	xor    edi,DWORD PTR [edi]
  403e4f:	push   0xb568bc16
  403e54:	enter  0xd15e,0x15
  403e58:	dec    esi
  403e59:	call   FWORD PTR [edx-0x55]
  403e5c:	xor    DWORD PTR [ecx],eax
  403e5e:	dec    BYTE PTR [esp+ecx*4]
  403e61:	jle    0x403e17
  403e63:	sbb    ecx,esp
  403e65:	mov    cs,WORD PTR [ecx+edi*4+0x2a]
  403e69:	leave  
  403e6a:	leave  
  403e6b:	scas   al,BYTE PTR es:[edi]
  403e6c:	adc    ecx,DWORD PTR [edi+0x17e5ffc0]
  403e72:	rcl    BYTE PTR [esi-0x60e30553],cl
  403e78:	in     eax,0x33
  403e7a:	ins    BYTE PTR es:[edi],dx
  403e7b:	das    
  403e7c:	push   ss
  403e7d:	popf   
  403e7e:	push   es
  403e7f:	daa    
  403e80:	mov    ebx,0x7ee41eaa
  403e85:	test   BYTE PTR [eax+0x51],al
  403e88:	(bad)
  403e8c:	ss jns 0x403ea5
  403e8f:	xor    ecx,edx
  403e91:	dec    edi
  403e92:	push   esi
  403e93:	push   cs
  403e94:	push   esp
  403e95:	inc    ebx
  403e96:	in     al,0x63
  403e98:	ss aam 0x13
  403e9b:	inc    ecx
  403e9c:	pop    ss
  403e9d:	shl    DWORD PTR [esi-0x71703652],0xdd
  403ea4:	sbb    ebp,DWORD PTR [ecx-0xb65609a]
  403eaa:	(bad)  
  403eab:	rol    DWORD PTR [edi],cl
  403ead:	adc    BYTE PTR [edx+0xf],al
  403eb0:	cmc    
  403eb1:	cmp    eax,0xdc5ef7bb
  403eb6:	int3   
  403eb7:	loopne 0x403f04
  403eb9:	test   ebp,edx
  403ebb:	cmp    al,0x66
  403ebd:	adc    al,BYTE PTR [edi+0x1ca1084a]
  403ec3:	sub    al,0x63
  403ec5:	cmp    dh,ah
  403ec7:	mov    ds:0x65da8a3,eax
  403ecc:	xchg   ecx,eax
  403ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ece:	ret    
  403ecf:	mov    esi,DWORD PTR [esi]
  403ed1:	pop    eax
  403ed2:	ss push 0x41
  403ed5:	add    DWORD PTR [edx+0x7dd44f05],eax
  403edb:	leave  
  403edc:	ins    BYTE PTR es:[edi],dx
  403edd:	dec    ecx
  403ede:	xor    eax,0x9f6954c5
  403ee3:	arpl   WORD PTR [edi-0x7e722902],bp
  403ee9:	push   0xffffff90
  403eeb:	mov    ds:0xda032d59,al
  403ef0:	nop
  403ef1:	in     al,dx
  403ef2:	pop    esp
  403ef3:	dec    esi
  403ef4:	push   esp
  403ef5:	daa    
  403ef6:	mov    ebx,0x640e5a10
  403efb:	push   ebp
  403efc:	in     al,0x6
  403efe:	dec    esi
  403eff:	dec    ebx
  403f00:	xchg   esi,eax
  403f01:	jmp    0xd6e5:0xb277c6c5
  403f08:	adc    esp,ebp
  403f0a:	arpl   di,bx
  403f0c:	mov    edx,0xb1ce21e8
  403f11:	(bad)  
  403f12:	jle    0x403f34
  403f14:	frstor [esi+0x243648d7]
  403f1a:	lock outs dx,BYTE PTR ds:[esi]
  403f1c:	push   ecx
  403f1d:	pop    ds
  403f1e:	ins    DWORD PTR es:[edi],dx
  403f1f:	in     eax,dx
  403f20:	inc    ebp
  403f21:	stos   BYTE PTR es:[edi],al
  403f22:	sbb    ah,bl
  403f24:	mov    al,ds:0x8c03630b
  403f29:	dec    esp
  403f2a:	jecxz  0x403f6f
  403f2c:	or     BYTE PTR [ebx+0x7dec1f9b],ah
  403f32:	fsubr  st(0),st
  403f34:	call   0x499db221
  403f39:	or     BYTE PTR [ebx+0x52],bl
  403f3c:	jg     0x403f05
  403f3e:	sar    BYTE PTR [ebx-0x25],1
  403f41:	aas    
  403f42:	mov    al,ds:0xb728f25d
  403f47:	pushf  
  403f48:	clc    
  403f49:	jo     0x403efb
  403f4b:	retf   0xd5c5
  403f4e:	popa   
  403f4f:	add    ebx,edx
  403f51:	adc    DWORD PTR [eax],esp
  403f53:	pop    edi
  403f54:	dec    esp
  403f55:	inc    ebp
  403f56:	jg     0x403eda
  403f58:	ffreep st(2)
  403f5a:	cli    
  403f5b:	pop    edi
  403f5c:	dec    ebx
  403f5d:	xchg   edx,eax
  403f5e:	jne    0x403f1e
  403f60:	xchg   esi,eax
  403f61:	pop    eax
  403f62:	fwait
  403f63:	and    ch,BYTE PTR [eax-0x4cc8ade1]
  403f69:	jge    0x403f34
  403f6b:	pop    es
  403f6c:	push   eax
  403f6d:	pop    ecx
  403f6e:	jb     0x403fd9
  403f70:	jbe    0x403f01
  403f72:	fldcw  WORD PTR [edx]
  403f74:	adc    dl,BYTE PTR [edx]
  403f76:	or     eax,0xcd4f7cf8
  403f7b:	dec    ebx
  403f7c:	adc    ebx,ebp
  403f7e:	stos   BYTE PTR es:[edi],al
  403f7f:	fidiv  WORD PTR [eax+0xd]
  403f82:	mov    ds:0x4eb723d4,eax
  403f87:	shr    BYTE PTR [esi+0x2e],cl
  403f8a:	mov    al,0xd9
  403f8c:	cli    
  403f8d:	sbb    al,0xcf
  403f8f:	enter  0xc44e,0x9e
  403f93:	add    al,0xa9
  403f95:	lods   eax,DWORD PTR ds:[esi]
  403f96:	inc    edx
  403f97:	mov    bl,0xc8
  403f99:	ret    
  403f9a:	mov    ch,0xbc
  403f9c:	sahf   
  403f9d:	aam    0xd5
  403f9f:	sbb    BYTE PTR [esi+ebx*1],dh
  403fa2:	sub    BYTE PTR [ebp-0x50f1a379],cl
  403fa8:	fadd   QWORD PTR [ebp+0x60903743]
  403fae:	cdq    
  403faf:	push   ds
  403fb0:	inc    eax
  403fb1:	xor    bl,BYTE PTR [edx-0xc]
  403fb4:	lea    ecx,[eax]
  403fb6:	cmp    DWORD PTR [ebp-0x18734a7e],ebx
  403fbc:	jbe    0x403ff7
  403fbe:	lods   al,BYTE PTR ds:[esi]
  403fbf:	xlat   BYTE PTR ds:[ebx]
  403fc0:	(bad)  
  403fc1:	push   0xfffffffa
  403fc3:	icebp  
  403fc4:	ds xor eax,0xd43504e9
  403fca:	xchg   DWORD PTR [ecx+0x6c],eax
  403fcd:	popf   
  403fce:	es push edi
  403fd0:	or     ebx,ecx
  403fd2:	call   0xc080:0x65b275c7
  403fd9:	(bad)  
  403fda:	(bad)  
  403fdb:	in     eax,dx
  403fdc:	mov    bl,0x1d
  403fde:	(bad)  
  403fdf:	jle    0x40403a
  403fe1:	and    DWORD PTR [eax+0x68],0x65
  403fe5:	call   0xb156:0xc02b995
  403fec:	popf   
  403fed:	shl    esi,0x82
  403ff0:	mov    esp,esp
  403ff2:	push   ebx
  403ff3:	gs fucom st(1)
  403ff6:	das    
  403ff7:	(bad)  
  403ff8:	cld    
  403ff9:	imul   esp,DWORD PTR [edi+0x1b1122c0],0xffffffbd
  404000:	adc    DWORD PTR [ebx+0x29],0x62688954
  404007:	mov    esp,esp
  404009:	adc    DWORD PTR [eax-0x2f083fd0],esp
  40400f:	jmp    eax
  404011:	and    bl,BYTE PTR [ebx]
  404013:	call   0x4e2d01af
  404018:	push   ds
  404019:	xchg   esp,eax
  40401a:	lods   al,BYTE PTR ds:[esi]
  40401b:	stos   BYTE PTR es:[edi],al
  40401c:	stc    
  40401d:	pop    es
  40401e:	xchg   edi,eax
  40401f:	mov    ds:0x124dcc65,al
  404024:	retf   
  404025:	arpl   WORD PTR [edx-0xe35d335],cx
  40402b:	or     cl,bl
  40402d:	daa    
  40402e:	lods   eax,DWORD PTR ds:[esi]
  40402f:	data16 cmp BYTE PTR [ebp-0x79],cl
  404033:	pop    edi
  404034:	call   0xc048294c
  404039:	sub    DWORD PTR [esi-0x6],esi
  40403c:	add    DWORD PTR [ebx+0x782e2f8a],0xffffffd9
  404043:	mov    ebx,0xdfb423b8
  404048:	gs pop ebp
  40404a:	es inc edx
  40404c:	add    eax,0x87efe59
  404051:	jecxz  0x4040a6
  404053:	cld    
  404054:	hlt    
  404055:	push   esp
  404056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404057:	adc    al,0x36
  404059:	loope  0x404056
  40405b:	shl    BYTE PTR [eax+0x3d],cl
  40405e:	(bad)  
  40405f:	out    0xba,eax
  404061:	push   ecx
  404062:	inc    ebp
  404063:	cmp    al,0xdf
  404065:	icebp  
  404066:	je     0x40401b
  404068:	bound  esi,QWORD PTR [edx]
  40406a:	arpl   WORD PTR [eax-0x24],dx
  40406d:	adc    DWORD PTR [esi+0x58],ebp
  404070:	shr    DWORD PTR [edx],1
  404072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404073:	jnp    0x404040
  404075:	push   0xb1db3ac9
  40407a:	imul   edx,DWORD PTR [esi-0x54b2386e],0x6c
  404081:	aaa    
  404082:	jmp    0x404015
  404084:	or     dl,BYTE PTR [edx+0x46917251]
  40408a:	mov    dl,BYTE PTR [eax+ecx*2+0x4e]
  40408e:	sub    BYTE PTR [edi-0x24583bbe],0xe2
  404095:	and    al,0xe4
  404097:	cwd    
  404099:	pusha  
  40409a:	xor    al,0x86
  40409c:	mov    BYTE PTR [eax-0x6e],bl
  40409f:	fild   WORD PTR [edx]
  4040a1:	hlt    
  4040a2:	mov    es,edi
  4040a4:	gs sub eax,0x58d171a9
  4040aa:	xor    DWORD PTR [edi],ebx
  4040ac:	lea    esi,[ebx+eiz*2+0x55]
  4040b0:	(bad)
  4040b3:	out    dx,eax
  4040b4:	outs   dx,BYTE PTR ds:[esi]
  4040b5:	mov    es,WORD PTR [edi-0x4cac8dc4]
  4040bb:	push   cs
  4040bc:	loopne 0x4040a2
  4040be:	mov    ah,0x60
  4040c0:	aam    0x6c
  4040c2:	aas    
  4040c3:	int3   
  4040c4:	sub    eax,0xc8b4a62e
  4040c9:	mov    edx,0xa7b7fde7
  4040ce:	mov    eax,0x64109000
  4040d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040d4:	lock out 0x8c,eax
  4040d7:	dec    ecx
  4040d8:	cmc    
  4040d9:	inc    esi
  4040da:	mov    esi,0x4f7bf4e6
  4040df:	es mov bl,0xc8
  4040e2:	loop   0x4040aa
  4040e4:	xchg   ecx,eax
  4040e5:	add    bh,BYTE PTR [ecx-0x10]
  4040e8:	xchg   ecx,eax
  4040e9:	mov    ecx,0x57962c49
  4040ee:	dec    edx
  4040ef:	cli    
  4040f0:	and    ebx,ecx
  4040f2:	loop   0x4040fc
  4040f4:	xor    DWORD PTR [edi+0x4d3a6284],esp
  4040fa:	outs   dx,BYTE PTR ds:[esi]
  4040fb:	mov    dh,0x15
  4040fd:	(bad)  
  4040fe:	cld    
  4040ff:	push   edi
  404100:	test   BYTE PTR [edx],bh
  404102:	in     eax,dx
  404103:	or     ebp,DWORD PTR [esi]
  404105:	inc    edx
  404106:	aas    
  404107:	loope  0x4040fa
  404109:	(bad)  
  40410b:	inc    eax
  40410c:	push   es
  40410d:	repz pop es
  40410f:	and    edi,DWORD PTR [edx]
  404111:	cmp    dh,BYTE PTR [ebx+0x72439529]
  404117:	sar    DWORD PTR [ebp-0x58],0xa9
  40411b:	mov    ebp,0x68461d96
  404120:	in     al,dx
  404121:	hlt    
  404122:	in     al,0x9e
  404124:	cs push cs
  404126:	xchg   ecx,eax
  404127:	sbb    eax,0x8be1a816
  40412c:	aad    0xc6
  40412e:	pop    ss
  40412f:	in     al,dx
  404130:	xlat   BYTE PTR ds:[ebx]
  404131:	int    0x10
  404133:	inc    ecx
  404134:	xchg   edx,eax
  404135:	xor    eax,0xea0013dc
  40413a:	xchg   ebx,eax
  40413b:	jb     0x404158
  40413d:	mov    bh,0x91
  40413f:	inc    eax
  404140:	mov    ah,0xf7
  404142:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404143:	retf   0xeab7
  404146:	sbb    eax,0x2c81dc39
  40414b:	in     al,0x35
  40414d:	retf   0xae94
  404150:	ret    0xc9b5
  404153:	pop    esp
  404154:	xor    DWORD PTR [eax-0x7],ebp
  404157:	clc    
  404158:	sbb    DWORD PTR [edi+0xc6ca24c],0x6b0ca07b
  404162:	sbb    eax,edx
  404164:	pop    ebx
  404165:	mov    dh,0x9e
  404167:	(bad)  
  404168:	icebp  
  404169:	dec    edx
  40416a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416b:	cmc    
  40416c:	popa   
  40416d:	imul   edi,DWORD PTR [ecx],0xbc8bac32
  404173:	dec    edx
  404174:	pushf  
  404175:	ss pop ds
  404177:	rcl    BYTE PTR [ecx],0x1f
  40417a:	cli    
  40417b:	inc    ebx
  40417c:	cwde   
  40417d:	and    DWORD PTR [ebx],esi
  40417f:	jmp    0xbca6:0x3113e2e
  404186:	jno    0x4041f4
  404188:	stos   DWORD PTR es:[edi],eax
  404189:	(bad)  
  40418a:	scas   al,BYTE PTR es:[edi]
  40418b:	test   eax,0x36a77c09
  404190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404191:	or     ebx,eax
  404193:	scas   al,BYTE PTR es:[edi]
  404194:	jge    0x404126
  404196:	pop    edi
  404197:	aam    0x51
  404199:	mov    esi,0x8f4fba04
  40419e:	pusha  
  40419f:	xor    DWORD PTR [eax-0x2f86029b],0x46
  4041a6:	out    0x32,al
  4041a8:	dec    ebp
  4041a9:	icebp  
  4041aa:	scas   al,BYTE PTR es:[edi]
  4041ab:	data16 lock lahf 
  4041ae:	push   cs
  4041af:	ins    DWORD PTR es:[edi],dx
  4041b0:	inc    esp
  4041b1:	hlt    
  4041b2:	and    al,0x3f
  4041b4:	sub    eax,0x8842431d
  4041b9:	pop    esi
  4041ba:	or     bh,BYTE PTR [ebp-0x12]
  4041bd:	fldl2e 
  4041bf:	and    esp,edx
  4041c1:	(bad)  
  4041c2:	psubw  mm2,mm6
  4041c5:	cmp    ah,BYTE PTR [edx-0x38]
  4041c8:	mov    eax,0xde5178ee
  4041cd:	loope  0x404243
  4041cf:	cli    
  4041d0:	mov    cl,0xc6
  4041d2:	dec    esp
  4041d3:	fdivr  st,st(5)
  4041d5:	cmp    DWORD PTR [esp+eiz*2+0x21],0x94db70c4
  4041dd:	repnz dec ebx
  4041df:	mov    ds:0xa229200e,eax
  4041e4:	outs   dx,DWORD PTR ds:[esi]
  4041e5:	frstor [eax-0x25]
  4041e8:	mov    DWORD PTR [esi],ebx
  4041ea:	mov    ds:0xd9e47797,eax
  4041ef:	pop    esp
  4041f0:	fcmovu st,st(4)
  4041f2:	and    al,0x4d
  4041f4:	out    dx,al
  4041f5:	pushf  
  4041f6:	in     eax,0xcd
  4041f8:	mov    edi,0x4547fb28
  4041fd:	dec    BYTE PTR [edi-0x5010ebf4]
  404203:	das    
  404204:	shl    BYTE PTR [ebx],cl
  404206:	jmp    0x7c987f6d
  40420b:	mov    ebp,0xcc23ccc0
  404210:	retf   0xa9d
  404213:	and    al,0xc4
  404215:	leave  
  404216:	int    0x9f
  404218:	push   eax
  404219:	sub    eax,0xf77117d7
  40421e:	test   BYTE PTR ds:[edx+0x68a54121],dl
  404225:	adc    edx,DWORD PTR [edx]
  404227:	fs sahf 
  404229:	cmp    eax,0x5fb15748
  40422e:	mov    ah,ah
  404230:	cmc    
  404231:	rcr    edi,cl
  404233:	push   esp
  404234:	push   ss
  404235:	mov    edi,0x84ff8c4d
  40423a:	or     edi,DWORD PTR [edi+ecx*4]
  40423d:	das    
  40423e:	push   eax
  40423f:	stc    
  404240:	icebp  
  404241:	xor    ch,ah
  404243:	repnz xor eax,0xae8a8161
  404249:	pop    edi
  40424a:	xor    al,0x1c
  40424c:	ror    DWORD PTR [ecx],0x13
  40424f:	cmp    al,0xa0
  404251:	sar    DWORD PTR [edi+0x30252b76],0x91
  404258:	mov    bl,0xb4
  40425a:	outs   dx,BYTE PTR ds:[esi]
  40425b:	mov    ch,0x6
  40425d:	(bad)  
  40425e:	shl    BYTE PTR [edi-0x1211a4e4],1
  404264:	push   esp
  404265:	lods   eax,DWORD PTR ds:[esi]
  404266:	iret   
  404267:	push   esi
  404268:	jg     0x40425a
  40426a:	popf   
  40426b:	sub    eax,0xafef4daa
  404270:	es mov dl,0xe
  404273:	jns    0x404217
  404275:	stc    
  404276:	pusha  
  404277:	dec    ebp
  404278:	jmp    0x404288
  40427a:	pop    ebp
  40427b:	jp     0x404247
  40427d:	jmp    0x40421c
  40427f:	sbb    eax,0xd34560cb
  404284:	inc    esi
  404285:	ds pop ebx
  404287:	sub    BYTE PTR [ebp-0x66],ah
  40428a:	sub    edx,DWORD PTR [ebx+0x3e]
  40428d:	sub    edi,esp
  40428f:	lea    ecx,[ebx-0x74407b56]
  404295:	shr    DWORD PTR [eax+0x5b],0xc9
  404299:	xchg   edi,eax
  40429a:	fsubr  QWORD PTR [eax-0x5a7647b7]
  4042a0:	adc    DWORD PTR [edi-0x54],0xffffffce
  4042a4:	sub    dl,BYTE PTR [edx]
  4042a6:	pop    edx
  4042a7:	mov    ebx,DWORD PTR [edi-0x2bbc96b2]
  4042ad:	aam    0xe9
  4042af:	dec    ebp
  4042b0:	add    DWORD PTR [edx],edx
  4042b2:	(bad)  
  4042b3:	cmp    ebx,ebp
  4042b5:	imul   eax,eax,0x46
  4042b8:	nop
  4042b9:	sbb    DWORD PTR ds:0x7dcc7b19,0xffffffb5
  4042c0:	rcl    BYTE PTR [ecx+0x3f],cl
  4042c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042c4:	sub    ecx,DWORD PTR ds:0x2562430
  4042ca:	js     0x404274
  4042cc:	fmul   DWORD PTR [ebx]
  4042ce:	jg     0x4042cf
  4042d0:	inc    ebp
  4042d1:	repz adc cl,BYTE PTR ds:0x183052e1
  4042d8:	jno    0x40426e
  4042da:	add    DWORD PTR [edx+ebx*2],edi
  4042dd:	mov    ?,WORD PTR [esi+0x22]
  4042e0:	add    eax,0x25ab54e5
  4042e5:	ins    DWORD PTR es:[edi],dx
  4042e6:	nop
  4042e7:	mov    edi,0x7292841b
  4042ec:	jecxz  0x4042ad
  4042ee:	aaa    
  4042ef:	mov    cl,0xc9
  4042f1:	(bad)  
  4042f2:	sbb    ecx,DWORD PTR [ebp+0x1c97e9b0]
  4042f8:	clc    
  4042f9:	psubb  mm7,QWORD PTR [edi]
  4042fc:	sub    eax,0x8c556436
  404301:	gs cdq 
  404303:	leave  
  404304:	fistp  QWORD PTR [edi]
  404306:	cdq    
  404307:	in     al,0xfe
  404309:	inc    esp
  40430a:	adc    DWORD PTR [ebp+0x26],edi
  40430d:	fnstcw WORD PTR [ecx]
  40430f:	daa    
  404310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404311:	cs push ss
  404313:	sub    edi,DWORD PTR [ecx]
  404315:	inc    ecx
  404316:	ficom  WORD PTR [ebx+0x3c]
  404319:	lock inc ebx
  40431b:	push   DWORD PTR [edi-0x2b]
  40431e:	dec    edx
  40431f:	mov    WORD PTR [eax+eiz*1-0x3fc630b4],fs
  404326:	icebp  
  404327:	adc    ah,BYTE PTR [edx+0x4049b369]
  40432d:	push   esp
  40432e:	leave  
  40432f:	mov    ?,WORD PTR [ebx+0x3f]
  404332:	push   ss
  404333:	mov    ebp,0x8797a10a
  404338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404339:	outs   dx,DWORD PTR gs:[esi]
  40433b:	and    BYTE PTR [ebx],0x93
  40433e:	fdivr  DWORD PTR [ecx-0xe]
  404341:	sti    
  404342:	mov    ecx,DWORD PTR [edx-0x46]
  404345:	mov    bl,0x6e
  404347:	es out dx,al
  404349:	xor    DWORD PTR [ebx+0x58],ebp
  40434c:	xor    edx,DWORD PTR ds:0xdc014e12
  404352:	push   ds
  404353:	sub    DWORD PTR [edx-0x75],esp
  404356:	dec    ebx
  404357:	arpl   WORD PTR [edx+0x1b],si
  40435a:	mov    al,0xe
  40435c:	fdivr  QWORD PTR [esi-0x3]
  40435f:	sub    al,0x86
  404361:	adc    BYTE PTR [ebx-0x32],bh
  404364:	fadd   st,st(7)
  404366:	ror    bl,cl
  404368:	sbb    edx,DWORD PTR ds:0xc3951229
  40436e:	imul   edi,DWORD PTR [eax],0xdc32fc5e
  404374:	jne    0x4043c7
  404376:	ins    DWORD PTR es:[edi],dx
  404377:	fucom  st(3)
  404379:	aad    0x3a
  40437b:	(bad)  [edi]
  40437d:	mov    WORD PTR [esi+0xd],cs
  404380:	mov    bl,0xb6
  404382:	ins    BYTE PTR es:[edi],dx
  404383:	rol    ebp,1
  404385:	loope  0x40437c
  404387:	sub    edi,DWORD PTR [eax]
  404389:	int    0x57
  40438b:	loopne 0x404318
  40438d:	inc    esp
  40438e:	repz and edx,DWORD PTR [edx]
  404391:	aam    0xf2
  404393:	loop   0x40439d
  404395:	popf   
  404396:	out    dx,al
  404397:	retf   
  404398:	push   ss
  404399:	daa    
  40439a:	scas   eax,DWORD PTR es:[edi]
  40439b:	dec    ebx
  40439c:	dec    esp
  40439d:	aas    
  40439e:	adc    DWORD PTR [ebp-0x1f],eax
  4043a1:	and    edx,DWORD PTR [esp+edi*2+0x510fcc05]
  4043a8:	ret    0x1c35
  4043ab:	dec    eax
  4043ac:	fsub   DWORD PTR [eax+0x155dc39c]
  4043b2:	test   eax,0x7f847cd5
  4043b7:	sub    dl,bl
  4043b9:	dec    ecx
  4043ba:	stos   BYTE PTR es:[edi],al
  4043bb:	xlat   BYTE PTR ds:[ebx]
  4043bc:	mov    cl,0xd7
  4043be:	push   ds
  4043bf:	xchg   esi,eax
  4043c0:	cld    
  4043c1:	push   es
  4043c2:	pushf  
  4043c3:	mov    esp,edx
  4043c5:	jbe    0x4043e7
  4043c7:	mov    ecx,0x5ac71b08
  4043cc:	iret   
  4043cd:	xor    DWORD PTR [esi+0x3de14c1a],edi
  4043d3:	mov    al,0xdd
  4043d5:	and    ecx,0x5
  4043d8:	xchg   edx,eax
  4043d9:	jecxz  0x4043f4
  4043db:	mov    ah,0xf
  4043dd:	in     al,0xe7
  4043df:	out    dx,al
  4043e0:	retf   0xff0c
  4043e3:	shr    DWORD PTR [ebx+0x74],cl
  4043e6:	add    DWORD PTR [edi-0x1c],ebx
  4043e9:	or     al,0xae
  4043eb:	pop    es
  4043ec:	mov    esp,0xb682130c
  4043f1:	sub    ecx,edi
  4043f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f4:	lock call 0x21e:0x449942e3
  4043fc:	add    DWORD PTR [esi],ebx
  4043fe:	paddsw mm7,QWORD PTR [eax+0x42b9b7e8]
  404405:	call   0xd8b9:0x9e71c1c8
  40440c:	imul   eax,DWORD PTR [ebx-0x23],0x68
  404410:	popa   
  404411:	ins    BYTE PTR es:[edi],dx
  404412:	call   0xcd59:0x55b2e020
  404419:	push   0x28954756
  40441e:	mov    eax,ds:0x3093a538
  404423:	xchg   esi,eax
  404424:	pop    ss
  404425:	and    ah,cl
  404427:	repz clc 
  404429:	cmp    ah,cl
  40442b:	xchg   ecx,eax
  40442c:	fild   WORD PTR [edx-0x11]
  40442f:	js     0x404416
  404431:	popa   
  404432:	push   0xffffffb7
  404434:	daa    
  404435:	lods   al,BYTE PTR ds:[esi]
  404436:	cli    
  404437:	frstor [ecx-0x1e]
  40443a:	xchg   ebp,eax
  40443b:	js     0x4043d0
  40443d:	fbld   TBYTE PTR [ebp+0x6c]
  404440:	iret   
  404441:	test   DWORD PTR [esi-0x564bc90d],eax
  404447:	push   ds
  404448:	pushf  
  404449:	aas    
  40444a:	daa    
  40444b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444c:	imul   ebp,esp,0x5f
  40444f:	imul   DWORD PTR [eax-0x8]
  404452:	or     al,0x57
  404454:	cmp    eax,0xd677b75d
  404459:	or     BYTE PTR [ecx],bl
  40445b:	push   eax
  40445c:	rcr    BYTE PTR gs:[ecx-0x6b],1
  404460:	sbb    al,0xf5
  404462:	pop    esi
  404463:	frndint 
  404465:	push   ss
  404466:	cmp    BYTE PTR [esi],dh
  404468:	scas   eax,DWORD PTR es:[edi]
  404469:	mov    ds:0xf42d19b8,al
  40446e:	cdq    
  40446f:	fdiv   st,st(1)
  404471:	inc    eax
  404472:	sbb    eax,0x52fd24ca
  404477:	mov    edx,0x57fcf336
  40447c:	inc    eax
  40447d:	xor    al,0x9d
  40447f:	mov    BYTE PTR [ecx+0x55],dl
  404482:	jbe    0x4044e7
  404484:	ins    DWORD PTR es:[edi],dx
  404485:	loopne 0x4044c4
  404487:	jb     0x404440
  404489:	add    DWORD PTR [esi],edx
  40448b:	push   0xffffffbf
  40448d:	loop   0x40447f
  40448f:	mov    ebp,0x80b4d44f
  404494:	mov    ebx,0x42433e2f
  404499:	xchg   esi,eax
  40449a:	sub    ecx,DWORD PTR [eax+0x70c12f42]
  4044a0:	mov    dh,0xa
  4044a2:	jo     0x40450c
  4044a4:	div    BYTE PTR [esi+edx*4-0x51]
  4044a8:	repz (bad) [edx+eax*1+0x639a758b]
  4044b0:	or     eax,0x56490ee9
  4044b5:	pop    edx
  4044b6:	into   
  4044b7:	add    al,0xcc
  4044b9:	jns    0x4044fb
  4044bb:	sub    ebp,DWORD PTR [edi+0x76c7f598]
  4044c1:	ret    
  4044c2:	addr16 push 0x90dfd62e
  4044c8:	mov    al,0xb8
  4044ca:	jae    0x4044ca
  4044cc:	es (bad) 
  4044ce:	ror    DWORD PTR [ebp-0x6adfde5],0xdc
  4044d5:	jae    0x4044df
  4044d7:	xchg   DWORD PTR [ecx],ebp
  4044d9:	iret   
  4044da:	and    al,0xe1
  4044dc:	mov    ecx,0xfba2e7fe
  4044e1:	(bad)  [edx-0x1943400c]
  4044e7:	add    BYTE PTR [edx],al
  4044e9:	(bad)  
  4044eb:	add    eax,0x86bcf965
  4044f0:	sbb    BYTE PTR [esi+0x3b18d60a],bh
  4044f6:	inc    edx
  4044f7:	loope  0x404493
  4044f9:	inc    ebp
  4044fa:	fimul  DWORD PTR [esi+ecx*4]
  4044fd:	retf   
  4044fe:	add    al,0xec
  404500:	mov    dh,0x85
  404502:	push   esp
  404503:	and    eax,0xe10e3616
  404508:	jle    0x4044f3
  40450a:	xor    ecx,DWORD PTR [edi]
  40450c:	montmul (bad)
  40450d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40450e:	add    al,0x13
  404510:	int    0x11
  404512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404513:	and    DWORD PTR [eax+edx*8],esi
  404516:	call   0x2fdc:0x96589577
  40451d:	mov    ah,0x20
  40451f:	mov    BYTE PTR [ecx],0xec
  404522:	je     0x4044a4
  404524:	dec    esp
  404525:	sub    edx,DWORD PTR ds:[edx+0x3896b101]
  40452c:	and    al,0xd6
  40452e:	pop    edx
  40452f:	dec    ebp
  404530:	(bad)  
  404531:	stc    
  404532:	ds cli 
  404534:	add    ebx,DWORD PTR [ecx+edi*1]
  404537:	loope  0x40452c
  404539:	mov    edx,0x2e425fe1
  40453e:	iret   
  40453f:	sahf   
  404540:	aaa    
  404541:	xor    BYTE PTR [eax-0x3389d556],ah
  404547:	outs   dx,DWORD PTR ds:[esi]
  404548:	repnz or edx,ebp
  40454b:	daa    
  40454c:	outs   dx,DWORD PTR ss:[esi]
  40454e:	inc    BYTE PTR [ebx+0x3a9256c3]
  404554:	jle    0x404528
  404556:	adc    BYTE PTR [edi+ebp*2+0x7582746f],bh
  40455d:	(bad)  
  40455e:	push   0x7b
  404560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404561:	inc    ebx
  404562:	mov    edi,0x5960429d
  404567:	mov    eax,DWORD PTR [eax]
  404569:	xor    edx,ebx
  40456b:	loop   0x404505
  40456d:	ins    DWORD PTR es:[edi],dx
  40456e:	mov    ecx,0xbc1b43c1
  404573:	or     dl,BYTE PTR [edx+0x46c83b23]
  404579:	inc    esi
  40457a:	and    al,0x7d
  40457c:	inc    esp
  40457d:	xor    eax,0x38fd93ca
  404582:	jb     0x404519
  404584:	cmp    edi,eax
  404586:	jle    0x404560
  404588:	jecxz  0x404583
  40458a:	jle    0x4045e2
  40458c:	rcr    esp,cl
  40458e:	push   esp
  40458f:	dec    eax
  404590:	mov    ah,0xe9
  404592:	xchg   ecx,eax
  404593:	cdq    
  404594:	mov    cl,0xe
  404596:	inc    edx
  404597:	mov    ah,BYTE PTR [edx+0x6f7371f1]
  40459d:	mov    bl,BYTE PTR ds:0xd3a6
  4045a2:	js     0x404562
  4045a4:	and    edi,0x34e1f05a
  4045aa:	test   al,0x31
  4045ac:	push   es
  4045ad:	mov    bl,0x19
  4045af:	mov    bh,0xae
  4045b1:	ja     0x404626
  4045b3:	dec    esp
  4045b4:	and    ecx,DWORD PTR [edi+0x26]
  4045b7:	out    dx,eax
  4045b8:	sbb    DWORD PTR [esp+ebp*1+0x72],eax
  4045bc:	inc    ebx
  4045bd:	dec    edi
  4045be:	jae    0x40460c
  4045c0:	xchg   bp,ax
  4045c2:	xchg   ecx,eax
  4045c3:	pop    edx
  4045c4:	adc    DWORD PTR [esi+eax*4],edi
  4045c7:	fmul   DWORD PTR [ecx-0x3f]
  4045ca:	push   0xc43f04a4
  4045cf:	mov    eax,0xaa78d154
  4045d4:	in     al,dx
  4045d5:	jae    0x4045f3
  4045d7:	(bad)  
  4045db:	xchg   esi,eax
  4045dc:	leave  
  4045dd:	xchg   esi,eax
  4045de:	adc    edi,edx
  4045e0:	push   eax
  4045e1:	pop    es
  4045e2:	bound  esp,QWORD PTR [eax-0x45]
  4045e5:	jle    0x4045b4
  4045e7:	addr16 mov ecx,0x65a6c08
  4045ed:	pop    esi
  4045ee:	aam    0x43
  4045f0:	cmp    eax,0xb368c78
  4045f5:	test   BYTE PTR [edi+0x40],ch
  4045f8:	inc    edi
  4045f9:	rol    DWORD PTR [edi],1
  4045fb:	ficom  DWORD PTR [esi+0x64]
  4045fe:	pop    ds
  4045ff:	inc    ecx
  404600:	adc    DWORD PTR [edi-0x25b74019],edi
  404606:	je     0x404682
  404608:	loope  0x40459a
  40460a:	das    
  40460b:	fcomp  st(4)
  40460d:	xchg   edi,eax
  40460e:	cmpxchg BYTE PTR [ebx],ch
  404611:	test   BYTE PTR [esi],0x32
  404614:	ret    
  404615:	test   al,0x4f
  404617:	mov    ecx,0xf2590cb2
  40461c:	int3   
  40461d:	push   eax
  40461e:	shl    BYTE PTR [ecx-0x49],0xf6
  404622:	out    0x1c,al
  404624:	xor    DWORD PTR [ebx],ebp
  404626:	and    eax,0x3da27f47
  40462b:	loop   0x40462a
  40462d:	jge    0x40467d
  40462f:	cdq    
  404630:	arpl   WORD PTR [ebx-0x15],di
  404633:	push   esp
  404634:	call   0x9cb6:0x678bec2d
  40463b:	inc    edi
  40463c:	lea    ebx,[edi]
  40463e:	or     al,0x4d
  404640:	test   BYTE PTR [edi+0xb],0x62
  404644:	inc    esp
  404645:	das    
  404646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404647:	jbe    0x404642
  404649:	sbb    esi,DWORD PTR [ebp-0x58]
  40464c:	out    0x7f,al
  40464e:	(bad)
  404651:	or     DWORD PTR [edx],0x56
  404654:	popf   
  404655:	jle    0x404689
  404657:	test   ebx,ecx
  404659:	xor    BYTE PTR [edx+ebx*4],0x24
  40465d:	out    0xdf,al
  40465f:	jge    0x4045fe
  404661:	mov    ebp,0xea503c12
  404666:	push   edi
  404667:	test   BYTE PTR ds:0xa2f12121,bl
  40466d:	(bad)  
  40466f:	inc    esp
  404670:	test   DWORD PTR [edi],eax
  404672:	(bad)  
  404673:	sub    edi,edx
  404675:	mul    DWORD PTR [eax+0x4c95236e]
  40467b:	mov    bl,BYTE PTR [ecx]
  40467d:	(bad)  
  40467e:	and    ebp,DWORD PTR [ebp+0x2f0b5169]
  404684:	push   cs
  404685:	retf   
  404686:	cmp    BYTE PTR [ebp+0x4e9c3cc5],bl
  40468c:	aad    0x30
  40468e:	ja     0x4046e0
  404690:	sar    DWORD PTR [esi+ebp*4+0x32],1
  404694:	popf   
  404695:	or     al,0x86
  404697:	mov    ebx,DWORD PTR [ecx-0x3a774d0a]
  40469d:	inc    ecx
  40469e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40469f:	out    dx,eax
  4046a0:	mov    ch,0x6
  4046a2:	retf   0xac27
  4046a5:	(bad)  
  4046a6:	pop    ebp
  4046a7:	dec    edx
  4046a8:	cmp    edx,0xefdb6c0c
  4046ae:	pop    ds
  4046af:	jae    0x404690
  4046b1:	or     BYTE PTR [edi+ebx*8+0x5e2e845b],dh
  4046b8:	cs add ebx,0x3d
  4046bc:	jae    0x40469f
  4046be:	cli    
  4046bf:	test   al,0x50
  4046c1:	or     al,0xca
  4046c3:	add    cl,BYTE PTR [esp+eax*1-0x5d]
  4046c7:	lods   al,BYTE PTR ds:[esi]
  4046c8:	mov    cl,0x38
  4046ca:	in     al,dx
  4046cb:	jecxz  0x404698
  4046cd:	sub    BYTE PTR [ebx+0x63],dh
  4046d0:	dec    esp
  4046d1:	mov    edi,fs
  4046d3:	mov    WORD PTR [ecx+0x3e],fs
  4046d6:	push   ss
  4046d7:	ret    
  4046d8:	pop    edi
  4046d9:	or     al,0xc0
  4046db:	mov    dh,dh
  4046dd:	enter  0xce0f,0x34
  4046e1:	jns    0x404696
  4046e3:	gs mov dl,0xb4
  4046e6:	(bad)  
  4046e7:	lock jo 0x4046f6
  4046ea:	mov    BYTE PTR [esi+0x531b45dc],al
  4046f0:	bound  ebx,QWORD PTR [edi-0x43386716]
  4046f6:	fcomp  DWORD PTR [eax-0x24b32f34]
  4046fc:	dec    edi
  4046fd:	(bad)  
  4046fe:	fstp   TBYTE PTR [ebx+0x6d]
  404701:	mov    bl,0xf2
  404703:	and    eax,0x2b4ae28c
  404708:	mov    ch,0x55
  40470a:	mov    edx,0x15b75170
  40470f:	je     0x404699
  404711:	xlat   BYTE PTR ds:[ebx]
  404712:	je     0x4046d9
  404714:	cmp    edi,DWORD PTR [edx+0x2397c8e4]
  40471a:	pop    esp
  40471b:	ja     0x404795
  40471d:	sbb    eax,0x33a1646c
  404722:	mov    BYTE PTR [edi],dl
  404724:	xor    eax,0x45c2ea45
  404729:	fcom   DWORD PTR [ecx-0x39]
  40472c:	in     eax,0x37
  40472e:	mov    dh,0x5f
  404730:	adc    BYTE PTR [eax-0x2b68033],0x99
  404737:	clc    
  404738:	fadd   QWORD PTR [esi+0x16d10d7a]
  40473e:	jmp    0x4046f9
  404740:	pop    esp
  404741:	pop    ebx
  404742:	mov    cl,0xd7
  404744:	aaa    
  404745:	xor    BYTE PTR [edi-0x18],cl
  404748:	das    
  404749:	mov    ah,0xde
  40474b:	jmp    0x1932:0x607b921d
  404752:	jecxz  0x40478d
  404754:	mov    ch,0x2b
  404756:	mov    ch,0x3e
  404758:	fdiv   DWORD PTR [ecx-0x42]
  40475b:	fwait
  40475c:	gs mov esi,0x5be1d747
  404762:	stos   BYTE PTR es:[edi],al
  404763:	mov    esp,0xcba7796b
  404768:	jbe    0x404774
  40476a:	adc    dh,al
  40476c:	neg    DWORD PTR [esi-0x70c50d4c]
  404772:	xor    DWORD PTR [edx+ebx*8],0x45023835
  404779:	stc    
  40477a:	or     bh,BYTE PTR [ebx]
  40477c:	sbb    edx,DWORD PTR [esi+0x12f6626c]
  404782:	dec    edi
  404783:	add    esi,DWORD PTR [ecx+0x18fe6373]
  404789:	inc    esp
  40478a:	addr16 call 0x2a4:0xd0886ab5
  404792:	mov    edx,0xa157d878
  404797:	sbb    esp,DWORD PTR [esi]
  404799:	mov    ch,0x18
  40479b:	push   ebp
  40479c:	aas    
  40479d:	or     ecx,esp
  40479f:	retf   
  4047a0:	fld    DWORD PTR ds:0xcec9a3fa
  4047a6:	mov    ds:0x885ebb01,al
  4047ab:	cmp    dl,bh
  4047ad:	xor    DWORD PTR [ebx+ebp*4-0x2b],esi
  4047b1:	jecxz  0x40480b
  4047b3:	in     al,dx
  4047b4:	int    0x35
  4047b6:	popa   
  4047b7:	or     edx,ebx
  4047b9:	cmc    
  4047ba:	hlt    
  4047bb:	adc    al,0x42
  4047bd:	out    dx,al
  4047be:	leave  
  4047bf:	mov    eax,0x94007f3f
  4047c4:	pop    esi
  4047c5:	mov    ah,0x81
  4047c7:	test   BYTE PTR [eax+0x2a7d0298],bl
  4047cd:	lods   al,BYTE PTR ds:[esi]
  4047ce:	jge    0x4047cf
  4047d0:	or     BYTE PTR [ecx],dh
  4047d2:	cmp    al,0x62
  4047d4:	push   ebp
  4047d5:	jno    0x4047bc
  4047d7:	(bad)  
  4047d8:	imul   eax,DWORD PTR [ecx*1+0x511f8aff],0xb99008c1
  4047e3:	lahf   
  4047e4:	jmp    0xc749:0x5633ae10
  4047eb:	or     al,0x1
  4047ed:	dec    esi
  4047ee:	dec    ecx
  4047ef:	sub    edx,eax
  4047f1:	push   ebp
  4047f2:	rcr    bl,cl
  4047f4:	jmp    0x16eacadf
  4047f9:	test   DWORD PTR [ebx+0x81ceeb0],esi
  4047ff:	aaa    
  404800:	loope  0x404809
  404802:	scas   al,BYTE PTR es:[edi]
  404803:	add    al,0x55
  404805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404806:	cmp    DWORD PTR [edi-0x4f],0x73
  40480a:	push   cs
  40480b:	pushf  
  40480c:	fisubr WORD PTR [edi+0x3c]
  40480f:	xchg   esi,eax
  404810:	mov    ds:0xdb704ba0,eax
  404815:	mov    DWORD PTR [ebx-0x14bfbf54],eax
  40481b:	mov    al,ds:0x4b4fdfb0
  404820:	jge    0x4047d1
  404822:	stc    
  404823:	xor    al,0xf8
  404825:	xor    bh,BYTE PTR [esi]
  404827:	mov    bl,dh
  404829:	in     eax,0x26
  40482b:	mov    edx,0x1a147a26
  404830:	je     0x40487e
  404832:	cmp    BYTE PTR [eax],al
  404834:	mov    ch,0x4a
  404836:	test   al,0x1e
  404838:	bswap  esi
  40483a:	push   ds
  40483b:	xor    al,0x9e
  40483d:	ja     0x40483d
  40483f:	or     esi,DWORD PTR [edi+0x30]
  404842:	(bad)  
  404843:	jbe    0x4048be
  404845:	or     ecx,0x8f2aaa71
  40484b:	loope  0x40487e
  40484d:	xchg   ebp,eax
  40484e:	jo     0x404843
  404850:	retf   
  404851:	dec    esi
  404852:	push   ss
  404853:	push   0xfffffffc
  404855:	adc    ecx,DWORD PTR [ecx+0x54787a8f]
  40485b:	sar    BYTE PTR [eax-0x630d0b21],cl
  404861:	fstp   DWORD PTR [eax+0x5de0ee9e]
  404867:	mov    ecx,0x5e830eac
  40486c:	pop    edi
  40486d:	or     cl,al
  40486f:	xor    bh,al
  404871:	in     eax,dx
  404872:	aam    0x2f
  404874:	mov    edx,0x1ded2ade
  404879:	xchg   esi,eax
  40487a:	call   0x8629:0xf83a2a9c
  404881:	ins    DWORD PTR es:[edi],dx
  404882:	fimul  DWORD PTR [edx-0x27716f5b]
  404888:	clc    
  404889:	sti    
  40488a:	sub    ah,BYTE PTR es:[edx-0x7fcf687]
  404891:	or     al,0xb1
  404893:	je     0x404898
  404895:	div    BYTE PTR [esi-0x102b3384]
  40489b:	sbb    ah,BYTE PTR [edx-0x6b]
  40489e:	sar    bl,1
  4048a0:	or     esp,DWORD PTR [eax-0x1aff9fa0]
  4048a6:	pushf  
  4048a7:	inc    esi
  4048a8:	lods   eax,DWORD PTR fs:[esi]
  4048aa:	(bad)  
  4048ab:	lods   eax,DWORD PTR ds:[esi]
  4048ac:	dec    edi
  4048ad:	ret    
  4048ae:	or     BYTE PTR [esi],0x68
  4048b1:	mov    dh,0xd
  4048b3:	rol    DWORD PTR [ebp-0x60172020],0x5d
  4048ba:	mov    dl,0x1a
  4048bc:	and    esi,DWORD PTR [edi+0x63e8e313]
  4048c2:	outs   dx,DWORD PTR cs:[esi]
  4048c4:	mov    esp,0x5c3acc5b
  4048c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ca:	in     al,dx
  4048cb:	ret    0xcc22
  4048ce:	lock cmp ah,ch
  4048d1:	loop   0x404878
  4048d3:	outs   dx,DWORD PTR ds:[esi]
  4048d4:	jle    0x404920
  4048d6:	pop    gs
  4048d8:	sub    eax,DWORD PTR [ebp+0x52]
  4048db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048dc:	mov    ecx,0x8098d18c
  4048e1:	cmc    
  4048e2:	xor    cl,BYTE PTR [ecx]
  4048e4:	in     al,0xc4
  4048e6:	shl    ecx,1
  4048e8:	data16 mov ch,BYTE PTR [ebx+0x7a3c3d6c]
  4048ef:	in     al,dx
  4048f0:	push   esi
  4048f1:	fcom   QWORD PTR [edx]
  4048f3:	add    DWORD PTR [edi+0x6fa1e8c3],0xf8ce8294
  4048fd:	dec    eax
  4048fe:	add    esi,DWORD PTR [esi-0x5a2f8eca]
  404904:	cmp    BYTE PTR [ecx-0x13303b94],dh
  40490a:	out    dx,al
  40490b:	jge    0x404900
  40490d:	pop    ebp
  40490e:	dec    ebp
  40490f:	mov    eax,ds:0xd71cee01
  404914:	jg     0x40494c
  404916:	pusha  
  404917:	adc    ebx,DWORD PTR [esi+0x77]
  40491a:	fs jne 0x404920
  40491d:	sahf   
  40491e:	retf   
  40491f:	push   ss
  404920:	dec    eax
  404921:	add    eax,0x59b9a3ed
  404926:	push   ecx
  404927:	xor    BYTE PTR [ecx+0x2f2e3184],al
  40492d:	scas   eax,DWORD PTR es:[edi]
  40492e:	ins    DWORD PTR es:[edi],dx
  40492f:	xor    dl,BYTE PTR [ecx]
  404931:	push   eax
  404932:	xchg   esp,eax
  404933:	ins    DWORD PTR es:[edi],dx
  404934:	lea    ecx,[esi+edx*4]
  404937:	xor    al,0x4f
  404939:	scas   al,BYTE PTR es:[edi]
  40493a:	sbb    BYTE PTR [esi],dh
  40493c:	push   0x2fb8859a
  404941:	jl     0x404900
  404943:	(bad)  
  404945:	(bad)  
  404946:	mov    ebx,0x68cb6bc1
  40494b:	push   ss
  40494c:	xor    dl,BYTE PTR [ecx]
  40494e:	cmp    cl,BYTE PTR [ebp-0x62]
  404951:	outs   dx,DWORD PTR ds:[esi]
  404952:	or     eax,0x24c5330
  404957:	test   eax,0x8a85a236
  40495c:	pop    edi
  40495d:	mov    ebx,0x9c401c7c
  404962:	(bad)  
  404963:	cld    
  404964:	lods   al,BYTE PTR ds:[esi]
  404965:	das    
  404966:	push   eax
  404967:	call   0xfa63:0x41d65fa8
  40496e:	sbb    edi,0x31
  404971:	xchg   edx,eax
  404972:	pop    ss
  404973:	jle    0x404901
  404975:	test   BYTE PTR [ecx-0x72],cl
  404978:	dec    eax
  404979:	push   ecx
  40497a:	sar    DWORD PTR [ebx],cl
  40497c:	pop    eax
  40497d:	mov    cl,0x88
  40497f:	pop    eax
  404980:	mov    esp,0x2ec28146
  404985:	enter  0x2be7,0x13
  404989:	mov    bh,0x12
  40498b:	ret    
  40498c:	push   ds
  40498d:	iret   
  40498e:	xchg   ebx,eax
  40498f:	xchg   esp,eax
  404990:	lods   al,BYTE PTR ds:[esi]
  404991:	jecxz  0x404990
  404993:	into   
  404994:	adc    DWORD PTR ds:0xd2d795cd,esi
  40499a:	xchg   ebp,eax
  40499b:	and    ebx,DWORD PTR [esi+eiz*8+0x4c]
  40499f:	out    0x3e,eax
  4049a1:	rcl    BYTE PTR [ebx+0x35ae88db],0xd3
  4049a8:	rcl    bh,1
  4049aa:	adc    eax,0x8bdc25d3
  4049af:	das    
  4049b0:	vpsubq ymm0,ymm4,ymm4
  4049b4:	daa    
  4049b5:	xchg   edx,eax
  4049b6:	mov    bh,0x1b
  4049b8:	mov    ds:0x7dcc9e0,al
  4049bd:	(bad)  
  4049bf:	daa    
  4049c0:	leave  
  4049c1:	das    
  4049c2:	mov    edx,0xc62ed784
  4049c7:	pop    ebx
  4049c8:	inc    ebp
  4049c9:	lea    ecx,[edx+edi*8+0x5d]
  4049cd:	stos   BYTE PTR es:[edi],al
  4049ce:	mov    cs,WORD PTR [edx+0x1b]
  4049d1:	sub    al,BYTE PTR [ebx+0x3a]
  4049d4:	hlt    
  4049d5:	mov    eax,0x50f7470a
  4049da:	lds    ecx,FWORD PTR [ecx+0x50]
  4049dd:	loope  0x404970
  4049df:	shr    DWORD PTR [esi-0x2909c150],cl
  4049e5:	int3   
  4049e6:	retf   0x919c
  4049e9:	ds xchg edx,eax
  4049eb:	das    
  4049ec:	lods   al,BYTE PTR ds:[esi]
  4049ed:	and    dh,dl
  4049ef:	jmp    0x4049a2
  4049f1:	fs mov bh,0xf1
  4049f4:	cmp    eax,0xf82cfd4f
  4049f9:	cmp    DWORD PTR [edx+eiz*2+0x1e],ebp
  4049fd:	mov    ebx,0xa052525a
  404a02:	and    BYTE PTR [edx],al
  404a04:	and    BYTE PTR [edi-0x6bae4588],cl
  404a0a:	inc    esi
  404a0b:	push   ds
  404a0c:	fsubr  DWORD PTR ss:0x13a2ad08
  404a13:	lods   eax,DWORD PTR ds:[esi]
  404a14:	sbb    al,0x9c
  404a16:	push   cs
  404a17:	enter  0xf2a2,0x48
  404a1b:	push   ds
  404a1c:	jecxz  0x404a16
  404a1e:	sub    eax,0x495931a
  404a23:	not    bl
  404a25:	push   cs
  404a26:	rcr    BYTE PTR [eax-0x58],1
  404a29:	mov    bh,0x1c
  404a2b:	ret    0x14f0
  404a2e:	adc    al,0xf3
  404a30:	cmp    edx,DWORD PTR [eax+0xf]
  404a33:	push   ds
  404a34:	lahf   
  404a35:	inc    ebp
  404a36:	cdq    
  404a37:	push   edx
  404a38:	dec    ebp
  404a39:	(bad)  
  404a3b:	mov    ah,0x12
  404a3d:	mov    ecx,DWORD PTR [ecx]
  404a3f:	mov    ch,0xd0
  404a41:	retf   0x32b2
  404a44:	mov    al,bl
  404a46:	pusha  
  404a47:	stos   DWORD PTR es:[edi],eax
  404a48:	test   eax,0x10855ee3
  404a4d:	push   ebx
  404a4e:	jo     0x404ac6
  404a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a51:	cs gs in al,dx
  404a54:	mov    esp,0x68d08f3b
  404a59:	inc    edx
  404a5a:	add    dl,BYTE PTR [ebx]
  404a5c:	sahf   
  404a5d:	dec    eax
  404a5e:	sub    eax,DWORD PTR [esi]
  404a60:	dec    BYTE PTR [eax]
  404a62:	(bad)  
  404a63:	mov    BYTE PTR [ebx-0x4e],bh
  404a66:	and    DWORD PTR [edx],0x2f4d49d5
  404a6c:	inc    edi
  404a6d:	bound  ebp,QWORD PTR [eax-0x7f17d80d]
  404a73:	jle    0x404a6c
  404a75:	sub    BYTE PTR [ebp+ebx*8-0x1c449869],cl
  404a7c:	je     0x404ac0
  404a7e:	jno    0x404ac0
  404a80:	retf   0xb7dc
  404a83:	popa   
  404a84:	xor    cl,bh
  404a86:	inc    esi
  404a87:	stos   DWORD PTR es:[edi],eax
  404a88:	jae    0x404b06
  404a8a:	push   ecx
  404a8b:	add    BYTE PTR [ecx-0x7755cf5],dl
  404a91:	add    eax,0x321e28e9
  404a96:	cwde   
  404a97:	adc    DWORD PTR ds:0x2d250c1d,esi
  404a9d:	mov    dh,0x9f
  404a9f:	mov    ss,WORD PTR [edi+ebp*4+0x14]
  404aa3:	xchg   DWORD PTR [eax],eax
  404aa5:	popa   
  404aa6:	mov    ds:0x60337f32,al
  404aab:	ss and ch,dh
  404aae:	mov    ebx,0x1954cca8
  404ab3:	in     al,0x32
  404ab5:	sub    DWORD PTR [edx],eax
  404ab7:	lods   al,BYTE PTR ds:[esi]
  404ab8:	jmp    0x7bf04813
  404abd:	pusha  
  404abe:	push   esp
  404abf:	xor    eax,0x2da7d05
  404ac4:	push   esi
  404ac5:	mov    eax,ds:0x7bebeee8
  404aca:	(bad)  
  404acb:	stc    
  404acc:	out    dx,al
  404acd:	and    BYTE PTR [bx+si+0x4a],cl
  404ad1:	jge    0x404ae3
  404ad3:	mov    ds:0x63240daa,eax
  404ad8:	cs jmp 0x8d6052a7
  404ade:	sahf   
  404adf:	js     0x404ab0
  404ae1:	dec    edx
  404ae2:	les    ebp,FWORD PTR [eax+0x5b]
  404ae5:	ss into 
  404ae7:	mov    BYTE PTR [ebx+0x30d22456],bh
  404aed:	lea    eax,[ecx]
  404aef:	inc    ecx
  404af0:	mov    fs,edi
  404af2:	addr16 je 0x404b19
  404af5:	outs   dx,DWORD PTR ds:[esi]
  404af6:	scas   eax,DWORD PTR es:[edi]
  404af7:	mov    DWORD PTR [esi-0xb0fb5de],esp
  404afd:	sbb    eax,0xa46f56ef
  404b02:	fld    QWORD PTR [esi]
  404b04:	stc    
  404b05:	int    0x90
  404b07:	pop    ebp
  404b08:	dec    ebp
  404b09:	or     ebx,DWORD PTR ds:0xc3eb1c2d
  404b0f:	sbb    al,0xf0
  404b11:	xor    DWORD PTR [ebp+edi*2-0x34],edi
  404b15:	int3   
  404b16:	push   ecx
  404b17:	mov    al,0xa5
  404b19:	add    DWORD PTR [ecx-0xd],edi
  404b1c:	sbb    eax,0x28abbfb6
  404b21:	in     al,dx
  404b22:	xlat   BYTE PTR ds:[ebx]
  404b23:	fld    QWORD PTR [edi+0x4d]
  404b26:	mov    ebx,0x8235489e
  404b2b:	test   BYTE PTR [ebx+eiz*8-0x1c629b0],0x24
  404b33:	je     0x404ac0
  404b35:	addr16 pop ebx
  404b37:	cmp    BYTE PTR ss:[eax],ah
  404b3a:	sub    al,0x52
  404b3c:	inc    esp
  404b3d:	push   cs
  404b3e:	cmp    ecx,DWORD PTR [edx+0x28]
  404b41:	xchg   esp,eax
  404b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b43:	lds    esi,FWORD PTR [ecx-0x1462b57c]
  404b49:	inc    edx
  404b4a:	dec    esi
  404b4b:	pop    esi
  404b4c:	pop    esp
  404b4d:	(bad)  
  404b4f:	loope  0x404b30
  404b51:	dec    ebp
  404b52:	xor    cl,BYTE PTR [eax+0x3]
  404b55:	daa    
  404b56:	fnsave [ebx]
  404b58:	aam    0x13
  404b5a:	and    al,0x9b
  404b5c:	test   al,0x41
  404b5e:	adc    BYTE PTR [edi],0x85
  404b61:	push   ebp
  404b62:	push   edx
  404b63:	jp     0x404b6d
  404b65:	mov    eax,0xdd83d5de
  404b6a:	cdq    
  404b6b:	adc    eax,DWORD PTR ds:0xb6a6a3c2
  404b71:	ret    0x5a0f
  404b74:	cdq    
  404b75:	bound  esp,QWORD PTR [ebx-0x8]
  404b78:	ret    
  404b79:	push   ds
  404b7a:	xchg   edx,eax
  404b7b:	push   es
  404b7c:	mov    ecx,0xf254ceb4
  404b81:	outs   dx,DWORD PTR ds:[esi]
  404b82:	adc    DWORD PTR [edx-0x7b],0x35
  404b86:	fnsave [edi]
  404b88:	repnz mov ch,0x5b
  404b8b:	inc    ebx
  404b8c:	repz out 0x1c,al
  404b8f:	out    dx,eax
  404b90:	(bad)  
  404b91:	ret    0xc9c5
  404b94:	gs push cs
  404b96:	push   ss
  404b97:	test   al,0x1a
  404b99:	pop    ebx
  404b9a:	and    al,0xf8
  404b9c:	mov    bh,0x74
  404b9e:	inc    edx
  404b9f:	mov    cl,0xeb
  404ba1:	aaa    
  404ba2:	ds (bad) 
  404ba4:	hlt    
  404ba5:	call   0x8f963cce
  404baa:	sbb    eax,0xa83e3923
  404baf:	ins    DWORD PTR es:[edi],dx
  404bb0:	int3   
  404bb1:	pop    edx
  404bb2:	mov    cl,0x7
  404bb4:	shr    BYTE PTR [eax+0xd],1
  404bb7:	ja     0x404c21
  404bb9:	cmc    
  404bba:	outs   dx,DWORD PTR ds:[esi]
  404bbb:	shl    DWORD PTR [edx+0x75],cl
  404bbe:	leave  
  404bbf:	mov    ch,bl
  404bc1:	cmp    DWORD PTR [ebx-0x4ed1865],0x11ebbed4
  404bcb:	(bad)  
  404bcc:	out    dx,al
  404bcd:	mov    esp,0x9a9a6c58
  404bd2:	mov    bh,0x2c
  404bd4:	mov    DWORD PTR [edi],esp
  404bd6:	leave  
  404bd7:	aad    0x56
  404bd9:	stos   DWORD PTR es:[edi],eax
  404bda:	lahf   
  404bdb:	cs inc edi
  404bdd:	mov    cl,0x22
  404bdf:	mov    edi,0xc37d900f
  404be4:	xor    BYTE PTR [edi-0x76],dh
  404be7:	loopne 0x404c32
  404be9:	sbb    BYTE PTR [eax+eax*4+0x66],ah
  404bed:	and    al,0x45
  404bef:	inc    edx
  404bf0:	es int 0x93
  404bf3:	inc    ebx
  404bf4:	xchg   BYTE PTR [esi-0x5c44451b],ah
  404bfa:	shl    ch,0x37
  404bfd:	pop    ds
  404bfe:	mov    ebp,0x2e07dcd0
  404c03:	sub    eax,0x828f59f0
  404c08:	mov    edi,DWORD PTR [ebx+0x3634b937]
  404c0e:	adc    BYTE PTR [esp+ecx*4+0x2d],ch
  404c12:	add    eax,0x6b04490a
  404c17:	pop    ebp
  404c18:	xchg   esp,eax
  404c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c1a:	lds    esp,FWORD PTR [esi+0x6bf3be8a]
  404c20:	jne    0x404c45
  404c22:	repz mov esp,0xbf6a2b98
  404c28:	call   0x1f9d9c36
  404c2d:	call   0xa634d711
  404c32:	and    cl,BYTE PTR [ecx]
  404c34:	xchg   esp,eax
  404c35:	sbb    al,0x9a
  404c37:	bound  eax,QWORD PTR [ecx-0x3ad8076c]
  404c3d:	pop    ecx
  404c3e:	inc    edx
  404c40:	enter  0x3a47,0xa0
  404c44:	in     eax,dx
  404c45:	aad    0xb4
  404c47:	retf   
  404c48:	mov    al,ds:0x9284b6d1
  404c4d:	sub    al,0xb7
  404c4f:	cmp    BYTE PTR [ebx+0x5ccd6898],ch
  404c55:	mov    ebx,esp
  404c57:	adc    al,0x20
  404c59:	in     al,dx
  404c5a:	xor    ebx,0xd2ae30f3
  404c60:	cmp    al,0x98
  404c62:	cmp    eax,0xe1448862
  404c67:	mov    eax,0xf679c8d1
  404c6c:	mov    ch,0x49
  404c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c6f:	sbb    BYTE PTR ds:0x6d2b1a96,dl
  404c75:	ss mov cl,0x2b
  404c78:	mov    eax,ds:0x402fd98b
  404c7d:	imul   edx,ebx,0xec6a860d
  404c83:	arpl   WORD PTR [eax-0x637c1a5a],di
  404c89:	cmp    eax,0xa478177f
  404c8e:	xchg   esi,eax
  404c8f:	dec    esi
  404c90:	and    DWORD PTR [esi-0x77],eax
  404c93:	pop    edi
  404c94:	cwde   
  404c95:	clc    
  404c96:	retf   
  404c97:	pop    esp
  404c98:	sti    
  404c99:	jecxz  0x404c2f
  404c9b:	fdivr  DWORD PTR [edi+eiz*8]
  404c9e:	jnp    0x404d1e
  404ca0:	mov    fs,WORD PTR [esi-0x64539e4]
  404ca6:	out    0x5e,eax
  404ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca9:	lds    cx,DWORD PTR [ecx+0xa8b95a5]
  404cb0:	dec    eax
  404cb1:	call   0xfbe5:0xc80e8134
  404cb8:	and    BYTE PTR [edx+ebp*1+0x40],ah
  404cbc:	or     bl,bh
  404cbe:	mov    ds:0x799d040a,eax
  404cc3:	push   ebx
  404cc4:	out    0x2b,al
  404cc6:	mov    esp,0x62a383d4
  404ccb:	ins    BYTE PTR es:[edi],dx
  404ccc:	jge    0x404c7f
  404cce:	fiadd  WORD PTR [eax+0x61]
  404cd1:	ds inc ebx
  404cd3:	push   0x50
  404cd5:	fisttp DWORD PTR [eax+0x6e53fb80]
  404cdb:	push   ebp
  404cdc:	jp     0x404cc1
  404cde:	mov    edx,0x4a8bb2b3
  404ce3:	xchg   DWORD PTR [eax+0x505efaf3],edx
  404ce9:	add    DWORD PTR [eax],edx
  404ceb:	jno    0x404d41
  404ced:	and    eax,0x396a644d
  404cf2:	(bad)  
  404cf4:	cwde   
  404cf5:	es or  eax,edi
  404cf8:	ret    0xaa85
  404cfb:	fistp  QWORD PTR [ebx+ecx*4]
  404cfe:	cmc    
  404cff:	mov    dl,0x22
  404d01:	jmp    0x7bc4:0xa11fe529
  404d08:	push   ss
  404d09:	mov    ah,0xd5
  404d0b:	and    ecx,DWORD PTR [ebp-0x31]
  404d0e:	mov    edi,0xc646ba69
  404d13:	test   eax,0x29fca14c
  404d18:	sahf   
  404d19:	rol    DWORD PTR [eax],0x96
  404d1c:	and    dh,BYTE PTR [edx]
  404d1e:	sbb    al,0x53
  404d20:	mov    BYTE PTR [edx-0x76],dh
  404d23:	retf   
  404d24:	jl     0x404cbc
  404d26:	(bad)
  404d29:	out    0x84,al
  404d2b:	mov    al,ds:0xa77ebe59
  404d30:	sub    edi,edi
  404d32:	(bad)  
  404d33:	jle    0x404d67
  404d35:	mov    dh,0xda
  404d37:	mov    eax,0x903b31b4
  404d3c:	lods   al,BYTE PTR ds:[esi]
  404d3d:	test   DWORD PTR [ebx+0x6e89a7c8],edx
  404d43:	das    
  404d44:	inc    ecx
  404d45:	clc    
  404d46:	xor    eax,0xf433fc39
  404d4b:	mov    WORD PTR [eax-0x8],es
  404d4e:	cld    
  404d4f:	not    edi
  404d51:	xchg   esp,eax
  404d52:	add    edi,DWORD PTR [ebp-0x54]
  404d55:	jmp    0x404ced
  404d57:	xor    edx,DWORD PTR [edi*1+0x6d10d6fd]
  404d5e:	or     DWORD PTR [ebx],esp
  404d60:	cmp    al,0x9f
  404d62:	pushf  
  404d63:	popa   
  404d64:	cli    
  404d65:	mov    dl,0x7b
  404d67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d68:	imul   edi,DWORD PTR [eax],0xca4b988f
  404d6e:	xchg   ecx,eax
  404d6f:	arpl   WORD PTR [esi],cx
  404d71:	pop    es
  404d72:	dec    esp
  404d73:	cmp    BYTE PTR ds:0x28e2959,dh
  404d79:	mov    ebp,0x2fd323b
  404d7e:	add    DWORD PTR cs:[ecx+edx*1-0x26],0x77
  404d84:	or     DWORD PTR [eax+ebp*4+0x5],edi
  404d88:	lea    esp,[esp+eiz*8]
  404d8b:	mov    WORD PTR [eax],?
  404d8d:	das    
  404d8e:	cmp    eax,0x813ff1d8
  404d93:	shl    eax,cl
  404d95:	cs jecxz 0x404da9
  404d98:	push   edx
  404d99:	add    edi,esi
  404d9b:	cdq    
  404d9c:	xchg   BYTE PTR [ebx+0x6e69a469],dh
  404da2:	aas    
  404da3:	cwde   
  404da4:	and    DWORD PTR ds:0xd653488,edx
  404daa:	fstp   QWORD PTR [eax-0xc265d5a]
  404db0:	adc    cl,0x62
  404db3:	std    
  404db4:	push   0xffffffa9
  404db6:	push   esi
  404db7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404db8:	sbb    al,0x25
  404dba:	pop    esi
  404dbb:	iret   
  404dbc:	lods   al,BYTE PTR ds:[esi]
  404dbd:	fadd   QWORD PTR [esi]
  404dbf:	push   0xc66022a0
  404dc4:	and    ebx,esi
  404dc6:	jnp    0x404e2b
  404dc8:	rcl    BYTE PTR [esi],1
  404dca:	and    al,0x9
  404dcc:	xor    al,0x33
  404dce:	or     edi,DWORD PTR [esi-0xf]
  404dd1:	retf   0xc090
  404dd4:	fidiv  WORD PTR [edx+esi*4]
  404dd7:	shl    bh,1
  404dd9:	std    
  404dda:	mov    al,ds:0xd930b4e8
  404ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404de0:	adc    ebp,eax
  404de2:	jnp    0x404e52
  404de4:	cmp    edi,edx
  404de6:	push   edx
  404de7:	js     0x404db7
  404de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dea:	adc    DWORD PTR [edx+0x26],esi
  404ded:	retf   
  404dee:	mov    DWORD PTR [ebx+0x1],edx
  404df1:	jbe    0x404dad
  404df3:	lock inc BYTE PTR [esi-0x2b]
  404df7:	je     0x404e15
  404df9:	push   edx
  404dfa:	les    edi,FWORD PTR [eax]
  404dfc:	aas    
  404dfd:	jmp    0x5086da29
  404e02:	ror    DWORD PTR [edx+0x26],0x63
  404e06:	sub    bh,bh
  404e08:	xor    eax,0xa0bbc5af
  404e0d:	jge    0x404e2a
  404e0f:	lock mov ch,0x85
  404e12:	pop    ss
  404e13:	xor    ch,BYTE PTR [esi+0x59cd11b9]
  404e19:	mov    ah,0x6c
  404e1b:	cld    
  404e1c:	popa   
  404e1d:	retf   0xb110
  404e20:	pusha  
  404e21:	jecxz  0x404e06
  404e23:	jne    0x404e54
  404e25:	jg     0x404e6f
  404e27:	into   
  404e28:	jge    0x404ddd
  404e2a:	loop   0x404df4
  404e2c:	inc    esp
  404e2d:	mov    cl,0xc5
  404e2f:	xchg   edi,eax
  404e30:	mov    edx,0x50099a54
  404e35:	adc    bl,BYTE PTR [ecx+0x157be5e5]
  404e3b:	pusha  
  404e3c:	jmp    0x61f95b9c
  404e41:	push   eax
  404e42:	mov    ebp,DWORD PTR [edx+0x5d16d8f1]
  404e48:	jl     0x404e22
  404e4a:	pop    esp
  404e4b:	into   
  404e4c:	mov    ch,0x81
  404e4e:	daa    
  404e4f:	cmp    dh,dl
  404e51:	mov    dl,0x95
  404e53:	xchg   ebx,eax
  404e54:	push   eax
  404e55:	inc    edx
  404e56:	fs pusha 
  404e58:	inc    edi
  404e59:	mov    eax,ds:0x3eb5f3a0
  404e5e:	jp     0x404e81
  404e60:	popf   
  404e61:	sar    BYTE PTR [edx+0x5d5e5421],0x31
  404e68:	aam    0xfc
  404e6a:	or     DWORD PTR [ebx-0x699f43f5],0xacb713a
  404e74:	dec    eax
  404e75:	fst    DWORD PTR [ecx-0x7ae2e38d]
  404e7b:	lea    ebx,[edx+0x51]
  404e7e:	xor    al,0xe3
  404e80:	jmp    0xf2cb:0xe49c7077
  404e87:	ins    BYTE PTR es:[edi],dx
  404e88:	loope  0x404e9d
  404e8a:	sbb    BYTE PTR [eax+0x37],0x20
  404e8e:	(bad)  
  404e8f:	es loope 0x404f0a
  404e92:	sbb    bl,BYTE PTR [edx-0x73]
  404e95:	jbe    0x404e18
  404e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e98:	jl     0x404ec2
  404e9a:	js     0x404ea3
  404e9c:	fstp   TBYTE PTR [esi+ebx*4+0x69]
  404ea0:	mov    ecx,0x36808728
  404ea5:	or     ah,bl
  404ea7:	fsubr  DWORD PTR [ecx]
  404ea9:	je     0x404e8d
  404eab:	mov    ecx,DWORD PTR [ebx]
  404ead:	ret    0x572f
  404eb0:	and    DWORD PTR [esi-0x27db986f],esp
  404eb6:	icebp  
  404eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eb8:	sub    esi,edx
  404eba:	adc    ch,cl
  404ebc:	stos   DWORD PTR es:[edi],eax
  404ebd:	xchg   edi,eax
  404ebe:	push   ecx
  404ebf:	loop   0x404ece
  404ec1:	aam    0xe3
  404ec3:	retf   
  404ec4:	xchg   esp,eax
  404ec5:	jb     0x404ea6
  404ec7:	out    dx,eax
  404ec8:	repz mul ecx
  404ecb:	lods   eax,DWORD PTR ds:[esi]
  404ecc:	or     DWORD PTR [edi],ebp
  404ece:	adc    DWORD PTR [esi-0x61],esi
  404ed1:	ficom  DWORD PTR [eax*1+0x734bf7c4]
  404ed8:	lds    eax,FWORD PTR ds:0x743accc1
  404ede:	addr16 iret 
  404ee0:	push   ecx
  404ee1:	mul    DWORD PTR [ecx+0x5b]
  404ee4:	adc    BYTE PTR [ebx-0x10],bh
  404ee7:	jo     0x404ed8
  404ee9:	ins    DWORD PTR es:[edi],dx
  404eea:	stos   BYTE PTR es:[edi],al
  404eeb:	xchg   esp,eax
  404eec:	sub    al,BYTE PTR [esi+0x6]
  404eef:	in     al,0x5e
  404ef1:	mov    esi,0xf73d818e
  404ef6:	inc    ebx
  404ef7:	or     al,0x24
  404ef9:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  404efb:	xor    eax,0x660224a7
  404f00:	add    DWORD PTR [edx-0x56],edi
  404f03:	push   esi
  404f04:	stos   DWORD PTR es:[edi],eax
  404f05:	lods   al,BYTE PTR ds:[esi]
  404f06:	jge    0x404e92
  404f08:	jns    0x404f80
  404f0a:	(bad)  
  404f0c:	mov    esi,ebx
  404f0e:	jecxz  0x404f49
  404f10:	sub    al,bh
  404f12:	fdiv   QWORD PTR [eax+esi*2]
  404f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f16:	bound  esp,QWORD PTR [edi]
  404f18:	call   0xc4cf:0x75e79cd0
  404f1f:	add    DWORD PTR [eax+0x55899b3c],ebx
  404f25:	mov    cl,0xf2
  404f27:	in     al,0x58
  404f29:	push   esp
  404f2a:	sbb    ebp,eax
  404f2c:	std    
  404f2d:	dec    edi
  404f2e:	sti    
  404f2f:	xchg   ecx,eax
  404f30:	and    eax,0x4a1a758b
  404f35:	jno    0x404f6f
  404f37:	lds    eax,FWORD PTR [edi+ebx*8-0x34]
  404f3b:	dec    ebx
  404f3c:	mov    ds:0xf203773f,eax
  404f41:	cmp    al,0x18
  404f43:	inc    edx
  404f44:	test   BYTE PTR [edx],dl
  404f46:	adc    BYTE PTR [edi+ebp*1],0x33
  404f4a:	dec    esi
  404f4b:	and    BYTE PTR [ecx-0x4c4b65bd],dl
  404f51:	sub    cl,BYTE PTR [ecx]
  404f53:	dec    ecx
  404f54:	xor    eax,0xfaaf7054
  404f59:	pop    ds
  404f5a:	test   ah,0x63
  404f5d:	xchg   esi,eax
  404f5e:	icebp  
  404f5f:	cld    
  404f60:	enter  0x236,0x54
  404f64:	pushf  
  404f65:	jmp    0x27b8ba0e
  404f6a:	test   BYTE PTR ds:0xa520de80,bl
  404f70:	push   edi
  404f71:	iret   
  404f72:	popf   
  404f73:	xor    dh,BYTE PTR [ebx]
  404f75:	cmp    al,0x9c
  404f77:	out    0x67,eax
  404f79:	mov    ds:0x738aaf6a,eax
  404f7e:	push   cs
  404f7f:	sahf   
  404f80:	push   edx
  404f81:	push   edx
  404f82:	mov    ds:0x535a070c,al
  404f87:	imul   ebx,DWORD PTR [edx-0x15c7ffc8],0xffffffb7
  404f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f8f:	loopne 0x404f87
  404f91:	pop    ebx
  404f92:	xor    DWORD PTR [eax],0xbc304a5f
  404f98:	adc    dh,BYTE PTR [ebx-0x3d3ba280]
  404f9e:	fsubrp st(3),st
  404fa0:	cmp    eax,0x5fa5f4b2
  404fa5:	mov    esp,0x440d3037
  404faa:	test   BYTE PTR [ebx+ecx*2],dh
  404fad:	arpl   WORD PTR [ebp+0x2c],bp
  404fb0:	ror    BYTE PTR [eax-0x1e3c0c6e],0xa7
  404fb7:	shl    DWORD PTR [edi-0x4f],cl
  404fba:	cwde   
  404fbb:	mov    ebx,0x50feebb
  404fc0:	arpl   WORD PTR [ebp-0xe998db4],cx
  404fc6:	add    al,0xda
  404fc8:	hlt    
  404fc9:	inc    ecx
  404fca:	and    al,0x28
  404fcc:	pushf  
  404fcd:	fstp   DWORD PTR [ecx]
  404fcf:	rol    BYTE PTR [edx+0x59],0x9d
  404fd3:	mov    dl,0x42
  404fd5:	xchg   ebx,eax
  404fd6:	xchg   esi,eax
  404fd7:	sahf   
  404fd8:	pushf  
  404fd9:	ss xor al,0xde
  404fdc:	sub    eax,ecx
  404fde:	(bad)  
  404fdf:	mov    cl,0xc0
  404fe1:	cmp    eax,0x721b6df8
  404fe6:	mov    ds:0x182f27ba,al
  404feb:	pop    ds
  404fec:	bound  ecx,QWORD PTR [edi+eax*8+0x1e]
  404ff0:	jmp    0x405064
  404ff2:	add    esi,DWORD PTR [edi+0x28cb345b]
  404ff8:	mov    BYTE PTR [esi+0x6e4ac83c],ch
  404ffe:	mov    eax,0xe0b05c1c
  405003:	push   0x1fcde148
  405008:	inc    esp
  405009:	and    ch,0xe8
  40500c:	fild   QWORD PTR [edi-0x5249a0c7]
  405012:	pop    DWORD PTR [edx-0x17]
  405015:	pop    ecx
  405016:	fwait
  405017:	dec    edx
  405018:	mov    esi,0x867f21df
  40501d:	ds sahf 
  40501f:	loop   0x404fb1
  405021:	adc    al,0x31
  405023:	adc    eax,0xe5e6395e
  405028:	mov    WORD PTR [esi+0x1fcba960],es
  40502e:	push   esp
  40502f:	jbe    0x404fc9
  405031:	pop    ebx
  405032:	xchg   edx,eax
  405033:	outs   dx,BYTE PTR ds:[esi]
  405034:	aaa    
  405035:	(bad)  
  405036:	push   cs
  405037:	sub    al,0x2b
  405039:	cmp    ecx,eax
  40503b:	je     0x40528b
  405041:	add    DWORD PTR ds:0x42b018,0x42c008
  40504b:	push   DWORD PTR [ebp-0x14]
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	cs inc esp
  405661:	rcl    BYTE PTR [ecx],0x30
  405664:	pop    edi
  405665:	jp     0x4056e1
  405667:	in     eax,0x5f
  405669:	jp     0x4056e5
  40566b:	je     0x4055fc
  40566d:	into   
  40566e:	and    bh,BYTE PTR [eax+0x6327b32c]
  405674:	jmp    0x7e70:0x9110a755
  40567b:	add    ch,BYTE PTR [edi+0x373b7ea1]
  405681:	mov    esp,0xc2a758b3
  405686:	int    0xb
  405688:	mov    DWORD PTR [esi-0x72],0x5f267316
  40568f:	(bad)  
  405690:	sahf   
  405691:	sbb    al,0xc1
  405693:	add    edx,DWORD PTR [eax-0x3d5a820c]
  405699:	popf   
  40569a:	push   cs
  40569b:	pop    ebp
  40569c:	cmp    cl,ch
  40569e:	pop    edx
  40569f:	outs   dx,DWORD PTR ds:[esi]
  4056a0:	xchg   DWORD PTR [ebx-0x12],eax
  4056a3:	push   es
  4056a4:	dec    esi
  4056a5:	(bad)  
  4056a7:	cmp    al,BYTE PTR ds:0x2568d0
  4056ad:	cmp    bh,0x42
  4056b0:	clc    
  4056b1:	xor    eax,0x545154b1
  4056b6:	shl    DWORD PTR [ebx-0x50fa6794],cl
  4056bc:	loopne 0x405700
  4056be:	jmp    0x405691
  4056c0:	in     al,dx
  4056c1:	mov    eax,0xde99a5bd
  4056c6:	(bad)  
  4056c7:	sbb    BYTE PTR [ebp+0x233ec94e],bl
  4056cd:	jmp    0xab628174
  4056d2:	sub    DWORD PTR [ecx-0x68],0xa85e968b
  4056d9:	jmp    0x405750
  4056db:	sub    eax,0x3f88b320
  4056e0:	dec    edi
  4056e1:	mul    cl
  4056e3:	jle    0x40572e
  4056e5:	mov    dl,0x7
  4056e7:	and    DWORD PTR [edx+eiz*2+0x58919023],0x36
  4056ef:	int3   
  4056f0:	inc    ebx
  4056f1:	das    
  4056f2:	or     ch,BYTE PTR [edi+0xf616643]
  4056f8:	out    0xe3,eax
  4056fa:	cmp    ah,dh
  4056fc:	mov    WORD PTR [edi-0x7bb21b9],gs
  405702:	fs into 
  405704:	imul   BYTE PTR [ebx+0x5b]
  405707:	test   al,0x4b
  405709:	push   ebx
  40570a:	push   cs
  40570b:	mov    WORD PTR [ecx+0x6e53ac1],es
  405711:	push   ss
  405712:	bound  eax,QWORD PTR [esi+0x13]
  405715:	jecxz  0x4056dc
  405717:	int    0x27
  405719:	xchg   esi,eax
  40571a:	outs   dx,DWORD PTR ds:[esi]
  40571b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40571c:	xchg   esp,eax
  40571d:	shl    DWORD PTR [esi],0x9e
  405720:	ret    0xf3f5
  405723:	mov    cl,0x51
  405725:	xchg   esi,eax
  405726:	dec    esp
  405727:	push   ebp
  405728:	fsubr  QWORD PTR [ebx]
  40572a:	push   es
  40572b:	add    ebx,esp
  40572d:	mov    esi,ebx
  40572f:	fwait
  405730:	jae    0x4056b5
  405732:	jae    0x40573f
  405734:	cmc    
  405735:	out    dx,eax
  405736:	(bad)  
  405737:	aaa    
  405738:	xchg   ecx,eax
  405739:	adc    ebp,DWORD PTR [eax-0x2a515231]
  40573f:	into   
  405740:	loopne 0x405741
  405742:	add    al,0x90
  405744:	xor    BYTE PTR [ebp+eiz*4+0x37633ecb],0x1
  40574c:	inc    ecx
  40574d:	out    dx,eax
  40574e:	icebp  
  40574f:	out    0x77,al
  405751:	stc    
  405752:	sbb    esi,DWORD PTR [ebx]
  405754:	ds jno 0x405796
  405757:	jns    0x405744
  405759:	stos   BYTE PTR es:[edi],al
  40575a:	imul   ebp,DWORD PTR [esi],0x65632d2d
  405760:	pop    edx
  405761:	sub    BYTE PTR [eax-0x7f5b82f1],ch
  405767:	ret    
  405768:	sbb    DWORD PTR [ebp+0x7f9717c4],ebx
  40576e:	retf   
  40576f:	sub    edx,esp
  405771:	push   es
  405772:	mov    bl,0x16
  405774:	ins    BYTE PTR es:[edi],dx
  405775:	lahf   
  405776:	stos   DWORD PTR es:[edi],eax
  405777:	pop    ebx
  405778:	js     0x40578d
  40577a:	cs jbe 0x405779
  40577d:	sbb    DWORD PTR [ebp-0x1f],edi
  405780:	cs inc ebp
  405782:	pop    ds
  405783:	pop    eax
  405784:	or     DWORD PTR [edi-0x26],ecx
  405787:	repz mov ds:0x780707c7,al
  40578d:	add    DWORD PTR [edi],0xffffffad
  405790:	push   edx
  405791:	icebp  
  405792:	popf   
  405793:	(bad)  
  405794:	xchg   ebp,eax
  405795:	cs loop 0x405742
  405798:	mov    ch,0xa4
  40579a:	hlt    
  40579b:	imul   eax,DWORD PTR [esi],0xffffffdc
  40579e:	int3   
  40579f:	mov    eax,ds:0xa28b010f
  4057a4:	int    0x64
  4057a6:	dec    edx
  4057a7:	sub    dh,al
  4057a9:	sub    eax,0x1fdd5d1a
  4057ae:	imul   edi,ecx,0xa
  4057b1:	push   DWORD PTR [ebx+0x6e]
  4057b4:	add    eax,0xdcee2091
  4057b9:	and    eax,0x45cea5e8
  4057be:	push   esp
  4057bf:	rcl    BYTE PTR [ebx+0x54],1
  4057c2:	mov    ebx,0xf751572
  4057c7:	sbb    bh,bl
  4057c9:	cmp    bl,BYTE PTR [esi-0x72e91649]
  4057cf:	iret   
  4057d0:	cmp    al,0x5e
  4057d2:	adc    ah,BYTE PTR [eax+0x4508656f]
  4057d8:	push   ss
  4057d9:	loopne 0x405844
  4057db:	fxch   st(2)
  4057dd:	sbb    DWORD PTR [edx-0x44],edx
  4057e0:	iret   
  4057e1:	cmp    al,0x61
  4057e3:	mov    ebp,0x77587a05
  4057e8:	es pop esp
  4057ea:	dec    esp
  4057eb:	ret    0x891f
  4057ee:	ffree  st(7)
  4057f0:	das    
  4057f1:	shl    BYTE PTR [esi+ecx*2],0xb0
  4057f5:	xor    eax,0x309c4c73
  4057fa:	jg     0x40580a
  4057fc:	imul   eax,DWORD PTR [edx-0x4a],0x49
  405800:	(bad)  
  405801:	repnz test BYTE PTR [esi-0x659409c0],cl
  405808:	dec    ebx
  405809:	(bad)  
  40580a:	pop    eax
  40580b:	cmp    BYTE PTR [esi+0x2615584a],0x4c
  405812:	imul   eax,ebx,0xadf22908
  405818:	cmp    BYTE PTR [edx],cl
  40581a:	lods   eax,DWORD PTR ds:[esi]
  40581b:	dec    esp
  40581c:	popf   
  40581d:	lock imul ebp,DWORD PTR [edx+0x1f2cf63d],0x39
  405825:	or     cl,bl
  405827:	mov    cl,0x41
  405829:	jecxz  0x40580f
  40582b:	push   ss
  40582c:	mov    bl,BYTE PTR ds:0x74f1ee49
  405832:	add    al,0x4a
  405834:	push   ds
  405835:	jmp    0x5cb0:0x242cacbf
  40583c:	xor    eax,0x94c4bc69
  405841:	stos   DWORD PTR es:[edi],eax
  405842:	or     DWORD PTR [edx],edx
  405844:	into   
  405845:	mov    eax,0x484ec9a5
  40584a:	test   BYTE PTR [ecx-0x2d4e0496],dl
  405850:	jge    0x405877
  405852:	aam    0xc9
  405854:	dec    edx
  405855:	pop    esp
  405856:	mov    BYTE PTR [edx],bh
  405858:	stos   BYTE PTR es:[edi],al
  405859:	dec    ebx
  40585a:	bound  esi,QWORD PTR [edi]
  40585c:	add    bh,al
  40585e:	mov    ah,BYTE PTR [eax+0x48]
  405861:	ins    DWORD PTR es:[edi],dx
  405862:	mov    al,ds:0x6e511b54
  405867:	lods   eax,DWORD PTR ds:[esi]
  405868:	and    al,BYTE PTR [ebp+0x48cda0f3]
  40586e:	stc    
  40586f:	jbe    0x40585a
  405871:	out    dx,al
  405872:	mov    esi,0x55876be2
  405877:	mov    edi,0x86a65dbb
  40587c:	jb     0x4058fa
  40587e:	aaa    
  40587f:	xor    edi,DWORD PTR [eax]
  405881:	xor    BYTE PTR [ebp-0x58c61c47],0x19
  405888:	ror    BYTE PTR [ecx-0x8],cl
  40588b:	(bad)  
  40588c:	cmp    BYTE PTR [ebx+0x6b],bh
  40588f:	mov    dh,BYTE PTR [edx+0xe42ff47]
  405895:	dec    ebx
  405896:	xchg   ebx,eax
  405897:	int    0xfc
  405899:	mov    ?,edi
  40589b:	jmp    0x405884
  40589d:	mov    ch,0x1f
  40589f:	xor    eax,0x8a8844a
  4058a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058a5:	ret    0x17c3
  4058a8:	pop    ebp
  4058a9:	cld    
  4058aa:	rol    al,0x17
  4058ad:	mov    ah,0xaa
  4058af:	in     eax,0xf6
  4058b1:	cmp    eax,0xef614ee5
  4058b6:	loopne 0x405934
  4058b8:	add    DWORD PTR [edi-0x61eeb570],edx
  4058be:	cwde   
  4058bf:	bts    DWORD PTR [ecx+0x48],esi
  4058c3:	sbb    eax,DWORD PTR [eax+0x2002f70c]
  4058c9:	out    dx,eax
  4058ca:	in     al,dx
  4058cb:	xchg   edx,eax
  4058cc:	mov    esi,0xd6b64cf1
  4058d1:	push   es
  4058d2:	push   0x831b52a1
  4058d7:	or     ah,0xd7
  4058da:	pop    ebx
  4058db:	in     al,0x99
  4058dd:	push   es
  4058de:	out    0x8d,al
  4058e0:	add    ebp,ecx
  4058e2:	test   DWORD PTR [edi+0x5d],ebx
  4058e5:	iret   
  4058e6:	dec    esi
  4058e7:	fcom   DWORD PTR [ebx]
  4058e9:	cmovl  eax,DWORD PTR [ebx+0x3a7c7c05]
  4058f0:	call   FWORD PTR [ebx-0x2a32f9e2]
  4058f6:	xor    eax,0x899288e1
  4058fb:	pop    esi
  4058fc:	sub    bh,ah
  4058fe:	aam    0x65
  405900:	outs   dx,BYTE PTR ds:[esi]
  405901:	xchg   ecx,eax
  405902:	ret    
  405903:	push   eax
  405904:	adc    dl,BYTE PTR [ecx+ebx*1-0x2ccd96f8]
  40590b:	mov    WORD PTR [ecx],es
  40590d:	lods   al,BYTE PTR ds:[esi]
  40590e:	sbb    DWORD PTR [edx+0x64],edx
  405911:	bound  eax,QWORD PTR [ecx-0x1b073502]
  405917:	div    DWORD PTR [ecx+0x44]
  40591a:	xchg   ebx,eax
  40591b:	in     al,dx
  40591c:	xor    BYTE PTR [ecx+0x4d29c7d8],cl
  405922:	mov    al,0xcd
  405924:	jno    0x40598a
  405926:	mov    DWORD PTR [ebx+edi*1-0x221241c],eax
  40592d:	lods   al,BYTE PTR ds:[esi]
  40592e:	mov    ds:0xbe8c01d5,eax
  405933:	shr    BYTE PTR [edx+0x5523a02d],1
  405939:	jae    0x40592e
  40593b:	aam    0xfb
  40593d:	mov    ds:0x811ee4cd,eax
  405942:	and    eax,0x3ecb693c
  405947:	push   ds
  405948:	shl    esp,0x95
  40594b:	fisttp DWORD PTR [esi-0x34c0b05]
  405951:	out    dx,al
  405952:	imul   eax,DWORD PTR cs:[edi],0xfffffffb
  405956:	repz xchg edi,eax
  405958:	loop   0x4058e5
  40595a:	mov    ebp,0xee7946d9
  40595f:	ffree  st(6)
  405961:	sbb    al,0xd
  405963:	jp     0x4058ec
  405965:	sub    eax,0x72755f8f
  40596a:	push   0x506c8508
  40596f:	jge    0x405955
  405971:	icebp  
  405972:	jae    0x4059d7
  405974:	call   0xa71:0xca11bbc4
  40597b:	jns    0x4059bc
  40597d:	push   ecx
  40597e:	pop    esi
  40597f:	clc    
  405980:	jl     0x4059c4
  405982:	mov    dh,BYTE PTR [esi+eax*4+0x1c383d44]
  405989:	es adc al,0x31
  40598c:	push   ds
  40598d:	repz sbb eax,0xba8d0f8e
  405993:	sub    al,BYTE PTR [esi]
  405995:	xor    al,0x28
  405997:	ret    
  405998:	js     0x405999
  40599a:	or     cl,BYTE PTR [edi+0x4e5d1c31]
  4059a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a1:	int3   
  4059a2:	sub    al,0x49
  4059a4:	inc    ecx
  4059a5:	dec    eax
  4059a6:	or     eax,0xea273d39
  4059ab:	push   ss
  4059ac:	mov    dh,0x7d
  4059ae:	push   edi
  4059af:	shr    DWORD PTR [eax-0x7],cl
  4059b2:	add    eax,0xba3c97c
  4059b7:	xchg   BYTE PTR [esp+esi*1],cl
  4059ba:	aam    0xf2
  4059bc:	pushf  
  4059bd:	aad    0x37
  4059bf:	inc    eax
  4059c0:	and    eax,0xbee0aabf
  4059c5:	lods   eax,DWORD PTR ds:[esi]
  4059c6:	aam    0x1c
  4059c8:	xor    BYTE PTR [ebp-0x7642d689],ah
  4059ce:	daa    
  4059cf:	add    BYTE PTR [ebp-0x39],ch
  4059d2:	dec    ebp
  4059d3:	scas   al,BYTE PTR es:[edi]
  4059d4:	adc    bl,BYTE PTR [edx-0x2]
  4059d7:	dec    esp
  4059d8:	sbb    bl,BYTE PTR [ebx+ecx*8]
  4059db:	xor    DWORD PTR [edi+ebp*2-0x11],ebp
  4059df:	mov    dl,0xc0
  4059e1:	test   eax,0xf112730
  4059e6:	inc    edi
  4059e7:	and    DWORD PTR [esi+0x64],esi
  4059ea:	repz push edi
  4059ec:	sub    dl,BYTE PTR [esi+0x2e]
  4059ef:	push   eax
  4059f0:	adc    eax,0x46558701
  4059f5:	sbb    BYTE PTR [edx-0x26],ah
  4059f8:	jo     0x40597b
  4059fa:	or     esp,DWORD PTR [esi+0x1eb41961]
  405a00:	or     cl,BYTE PTR [ebp-0x2f2f0f45]
  405a06:	mov    ch,BYTE PTR [esi-0x1fc97192]
  405a0c:	mov    eax,0xeb372d8d
  405a11:	mov    edi,0xc319bd41
  405a16:	cmc    
  405a17:	add    ah,ch
  405a19:	jbe    0x4059e5
  405a1b:	(bad)  
  405a1c:	shr    BYTE PTR [eax-0x12b12f4f],cl
  405a22:	sahf   
  405a23:	mov    ch,0x21
  405a25:	inc    ebx
  405a26:	hlt    
  405a27:	fidivr DWORD PTR [edx-0x71]
  405a2a:	dec    edx
  405a2b:	out    0xa5,al
  405a2d:	je     0x405a43
  405a2f:	mov    al,ds:0x60a80ee8
  405a34:	test   DWORD PTR [ebp-0x12],ebp
  405a37:	fiadd  DWORD PTR [ecx+0x6c0d35ab]
  405a3d:	(bad)  
  405a3e:	push   0x66c40796
  405a43:	dec    ebp
  405a44:	setl   BYTE PTR [ecx+0x3]
  405a48:	jae    0x405a71
  405a4a:	stos   BYTE PTR es:[edi],al
  405a4b:	jae    0x405aa0
  405a4d:	dec    edi
  405a4e:	and    ebx,esp
  405a50:	aaa    
  405a51:	push   esi
  405a52:	add    BYTE PTR [edi-0x5e],ah
  405a55:	jb     0x4059f6
  405a57:	add    BYTE PTR [ecx+eiz*1-0x201f5253],ah
  405a5e:	sub    eax,DWORD PTR [esi-0x5b]
  405a61:	dec    bl
  405a63:	in     eax,0x83
  405a65:	push   ebx
  405a66:	das    
  405a67:	or     ch,0x30
  405a6a:	xor    ebp,DWORD PTR [edx]
  405a6c:	cwde   
  405a6d:	inc    esp
  405a6e:	rol    DWORD PTR [edi],1
  405a70:	cmc    
  405a71:	and    DWORD PTR [esi],edi
  405a73:	stc    
  405a74:	add    eax,0x3d12ba38
  405a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a7a:	cli    
  405a7b:	dec    esp
  405a7c:	repnz in al,0xc4
  405a7f:	add    BYTE PTR [edi+edi*1-0x3a39c887],bl
  405a86:	mov    esp,0x5c1039b
  405a8b:	mov    ch,0x2d
  405a8d:	or     edx,edi
  405a8f:	cli    
  405a90:	xchg   edi,eax
  405a91:	cwde   
  405a92:	mov    dl,0xb5
  405a94:	gs adc bl,dl
  405a97:	cmp    bh,BYTE PTR [eax+0x161fbcf2]
  405a9d:	push   esi
  405a9e:	jle    0x405aec
  405aa0:	inc    ebp
  405aa1:	push   ds
  405aa2:	xchg   ebp,eax
  405aa3:	add    eax,0x94251a11
  405aa8:	fidivr WORD PTR [ebx]
  405aaa:	pop    edi
  405aab:	call   0x79196ef7
  405ab0:	xchg   DWORD PTR [edi+0x770e766],edx
  405ab6:	sbb    ebx,ebx
  405ab8:	push   edi
  405ab9:	sbb    al,0x1e
  405abb:	dec    edi
  405abc:	inc    edi
  405abd:	add    bl,dh
  405abf:	pop    ebx
  405ac0:	lahf   
  405ac1:	gs jno 0x405b30
  405ac4:	xor    BYTE PTR [eax-0x3b],ah
  405ac7:	inc    edi
  405ac8:	in     eax,0xd0
  405aca:	and    DWORD PTR [ebp-0x6c],esi
  405acd:	repnz out 0xf8,al
  405ad0:	and    BYTE PTR [esi+0x5a70ad3],ah
  405ad6:	jge    0x405b1b
  405ad8:	dec    eax
  405ad9:	jle    0x405a5e
  405adb:	xlat   BYTE PTR ds:[ebx]
  405adc:	aad    0xf0
  405ade:	sbb    al,al
  405ae0:	cmp    bh,BYTE PTR [esi]
  405ae2:	stos   DWORD PTR es:[edi],eax
  405ae3:	or     al,0xf7
  405ae5:	jecxz  0x405ab4
  405ae7:	sahf   
  405ae8:	pop    ebp
  405ae9:	jmp    0x37a550ae
  405aee:	sub    eax,0x2cfffcb5
  405af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405af4:	jecxz  0x405a7b
  405af6:	in     al,0x7e
  405af8:	jno    0x405b18
  405afa:	pop    eax
  405afb:	shl    DWORD PTR [edi+0x63],0xe0
  405aff:	adc    DWORD PTR [eax+0x4d62baf3],ebx
  405b05:	pop    edi
  405b06:	add    edx,DWORD PTR [edi+0x27]
  405b09:	iret   
  405b0a:	cwde   
  405b0b:	(bad)  
  405b0c:	gs je  0x405b0c
  405b0f:	adc    ah,BYTE PTR [ecx+0x35d2db9c]
  405b15:	fmul   DWORD PTR [ecx+edi*1-0x2a]
  405b19:	repnz enter 0xcb0d,0x4d
  405b1e:	xchg   esi,eax
  405b1f:	rol    DWORD PTR [edi],1
  405b21:	shl    DWORD PTR [ebx+0x53d0267],0x9c
  405b28:	pop    esp
  405b29:	xchg   BYTE PTR [ecx+0x28],ch
  405b2c:	mov    edi,0xe7349a6f
  405b31:	sub    dh,BYTE PTR [eax-0x46]
  405b34:	ja     0x405b9c
  405b36:	fwait
  405b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b38:	stc    
  405b39:	(bad)  [edi+0x5a]
  405b3c:	mov    eax,0x60dc995c
  405b41:	mov    DWORD PTR gs:[ebp+edx*1-0x34],ebp
  405b46:	stos   BYTE PTR es:[edi],al
  405b47:	and    DWORD PTR [ecx],esi
  405b49:	mov    ecx,0x3ac1f9f6
  405b4e:	xor    BYTE PTR [ebp-0x59ecf1e2],bh
  405b54:	mov    esp,0xace8e572
  405b59:	or     eax,esp
  405b5b:	and    ax,WORD PTR [eax+0x276aefd2]
  405b62:	or     DWORD PTR [esi],esi
  405b64:	sbb    edx,ecx
  405b66:	repz mov dx,0x500d
  405b6b:	push   cs
  405b6c:	mov    esi,0xcf401cd6
  405b71:	xor    dh,BYTE PTR [ebx+0x2261c5fe]
  405b77:	add    BYTE PTR [ebp-0x42],ch
  405b7a:	xlat   BYTE PTR ds:[ebx]
  405b7b:	stc    
  405b7c:	cdq    
  405b7d:	jo     0x405bc1
  405b7f:	mov    cl,0xf2
  405b81:	stos   DWORD PTR es:[edi],eax
  405b82:	fwait
  405b83:	push   ecx
  405b84:	into   
  405b85:	retf   
  405b86:	jno    0x405be7
  405b88:	push   0x5
  405b8a:	jno    0x405b9b
  405b8c:	mov    cl,BYTE PTR [ebp+0x74]
  405b8f:	add    al,0xd5
  405b91:	dec    esi
  405b92:	retf   
  405b93:	xchg   ebp,eax
  405b94:	add    ch,BYTE PTR [ebp+eiz*8+0x2e11cec3]
  405b9b:	or     bh,BYTE PTR [ecx-0x6dbdd3f5]
  405ba1:	xchg   ebx,eax
  405ba2:	jmp    0x40ec:0x4d8834d4
  405ba9:	je     0x405ba2
  405bab:	cld    
  405bac:	pop    esi
  405bad:	ret    
  405bae:	mov    esi,0x20922cbc
  405bb3:	ror    BYTE PTR [eax-0x6f],1
  405bb6:	inc    edi
  405bb7:	jnp    0x405c03
  405bb9:	lock lock fcomip st,st(5)
  405bbd:	repz fst DWORD PTR [eax]
  405bc0:	fidivr DWORD PTR ds:0x93198c1a
  405bc6:	mov    ebp,0xe819efc2
  405bcb:	xor    ebx,DWORD PTR [ecx-0x863c779]
  405bd1:	test   eax,0xf8d03631
  405bd6:	data16 (bad) 
  405bd8:	push   0xda536385
  405bdd:	loopne 0x405b65
  405bdf:	inc    esp
  405be0:	test   BYTE PTR [edx],al
  405be2:	stos   BYTE PTR es:[edi],al
  405be3:	sbb    DWORD PTR [ebx],ebp
  405be5:	dec    edi
  405be6:	cmp    eax,0x8406362b
  405beb:	loope  0x405b71
  405bed:	inc    esi
  405bee:	mov    DWORD PTR [esi-0x26],edx
  405bf1:	neg    BYTE PTR [ebx+0x5]
  405bf4:	xor    ebx,DWORD PTR [eax]
  405bf6:	xchg   esp,eax
  405bf7:	add    DWORD PTR [ebx+0x7cb1bcc5],edx
  405bfd:	cmp    eax,0x76ccd872
  405c02:	inc    edx
  405c03:	mov    eax,ds:0x9bbeb6dd
  405c08:	inc    ebx
  405c09:	into   
  405c0a:	das    
  405c0b:	(bad)  
  405c0c:	enter  0x7ed7,0x31
  405c10:	mov    al,0x74
  405c12:	shl    DWORD PTR [ecx-0x1614fcbf],1
  405c18:	sub    DWORD PTR [ecx-0x51305af6],ebx
  405c1e:	mov    ebx,0xe22b28d3
  405c23:	push   ebx
  405c24:	fmul   DWORD PTR [edx+esi*1]
  405c27:	sahf   
  405c28:	and    dl,ch
  405c2a:	(bad)  
  405c2b:	leave  
  405c2c:	xchg   esp,eax
  405c2d:	ja     0x405c4b
  405c2f:	or     al,BYTE PTR fs:[eax+0x33]
  405c33:	or     al,0xf9
  405c35:	add    eax,0xb88dbe7d
  405c3a:	out    0x74,eax
  405c3c:	inc    edx
  405c3d:	mov    esp,0xc6105b0a
  405c42:	sbb    ch,dh
  405c44:	fs jl  0x405beb
  405c47:	or     BYTE PTR [eax+0x58],bh
  405c4a:	mov    dl,0xde
  405c4c:	add    BYTE PTR [eax],bl
  405c4e:	add    al,0x42
  405c50:	pop    edi
  405c51:	ret    0xff76
  405c54:	push   esp
  405c55:	and    al,0x42
  405c57:	sbb    eax,0xbe5c052
  405c5c:	add    ebp,DWORD PTR [ecx]
  405c5e:	push   eax
  405c5f:	inc    eax
  405c60:	aas    
  405c61:	add    DWORD PTR [edi+0x5c],ebx
  405c64:	or     eax,0x1c42603
  405c69:	ss out 0xbd,eax
  405c6c:	imul   ebp,DWORD PTR [eax+0x9e5dc2a],0x1e
  405c73:	repnz loop 0x405c31
  405c76:	js     0x405cec
  405c78:	retf   0xce7d
  405c7b:	icebp  
  405c7c:	shl    DWORD PTR [edi+0x34aaf504],1
  405c82:	sbb    esi,edi
  405c84:	sahf   
  405c85:	add    BYTE PTR [eax+0x77f26780],ch
  405c8b:	(bad)  [ebx-0x5d]
  405c8e:	dec    esi
  405c8f:	outs   dx,BYTE PTR ds:[esi]
  405c90:	xor    BYTE PTR [edi-0x1c],0xbe
  405c94:	xlat   BYTE PTR ds:[ebx]
  405c95:	loopne 0x405c55
  405c97:	jbe    0x405c78
  405c99:	test   ebp,ecx
  405c9b:	cwde   
  405c9c:	inc    eax
  405c9d:	push   ebp
  405c9e:	ret    
  405c9f:	xchg   DWORD PTR [ebp-0x51],edx
  405ca2:	gs jne 0x405c59
  405ca5:	xchg   BYTE PTR [edx+0x3de46670],bl
  405cab:	setns  BYTE PTR [ebp+eiz*2-0x2c8915a8]
  405cb3:	mov    BYTE PTR [ebx],0x5e
  405cb6:	in     eax,0x69
  405cb8:	sbb    bh,bl
  405cba:	fwait
  405cbb:	int    0x95
  405cbd:	pop    ds
  405cbe:	xor    DWORD PTR [ebx],ecx
  405cc0:	scas   eax,DWORD PTR es:[edi]
  405cc1:	mov    ah,0x2c
  405cc3:	mov    edi,0x2e98502
  405cc8:	retf   
  405cc9:	and    edi,ebx
  405ccb:	mov    esp,0xc8783eab
  405cd0:	and    dh,BYTE PTR [ebp+0x6b]
  405cd3:	lds    esi,FWORD PTR [ecx+0x19]
  405cd6:	jne    0x405ca1
  405cd8:	cmp    esp,DWORD PTR [eax]
  405cda:	cdq    
  405cdb:	mov    ah,0x97
  405cdd:	sbb    DWORD PTR [ebx+edx*1],edi
  405ce0:	outs   dx,BYTE PTR ds:[esi]
  405ce1:	push   ds
  405ce2:	addr16 pop edx
  405ce4:	mov    edi,0xe00fa885
  405ce9:	cld    
  405cea:	mov    ch,0x4b
  405cec:	(bad)  
  405ced:	test   al,0xf7
  405cef:	mov    bl,0xb5
  405cf1:	lods   al,BYTE PTR ds:[esi]
  405cf2:	or     BYTE PTR [eax],al
  405cf4:	adc    BYTE PTR [ecx-0x23dd8207],dh
  405cfa:	inc    ebx
  405cfb:	inc    esp
  405cfc:	cmp    cl,BYTE PTR [edi]
  405cfe:	rcl    DWORD PTR [edi-0x4],cl
  405d01:	xchg   edi,eax
  405d02:	push   ds
  405d03:	sub    edx,ecx
  405d05:	and    BYTE PTR [edx+eiz*2+0x7b],al
  405d09:	xchg   edi,eax
  405d0a:	sti    
  405d0b:	(bad)  [esi+0x13e2996c]
  405d11:	and    BYTE PTR [ecx-0x43c365a5],dh
  405d17:	lock fld TBYTE PTR [ecx-0x54]
  405d1b:	mov    ecx,0x6e752b98
  405d20:	stc    
  405d21:	mov    esi,es
  405d23:	data16 or dh,BYTE PTR [ebx-0x70]
  405d27:	jo     0x405caf
  405d29:	jae    0x405cd5
  405d2b:	ret    0x58dc
  405d2e:	push   ss
  405d2f:	mov    bl,0xe4
  405d31:	xchg   dl,bl
  405d33:	xor    edi,DWORD PTR [ebp+0x48d3f242]
  405d39:	pop    esp
  405d3a:	imul   edx,DWORD PTR [ebx-0x2a31da1e],0x6686f68f
  405d44:	push   esp
  405d45:	ret    0x6ae3
  405d48:	jl     0x405d41
  405d4a:	push   0x23
  405d4c:	adc    DWORD PTR [ebp-0x59f3eec4],esi
  405d52:	mov    ebp,0x3923c443
  405d57:	push   cs
  405d58:	pop    ebx
  405d59:	sahf   
  405d5a:	bnd ja 0x405dcd
  405d5d:	pop    eax
  405d5e:	sti    
  405d5f:	sub    edi,DWORD PTR [edi]
  405d61:	adc    DWORD PTR [ecx-0x6b],ebp
  405d64:	out    dx,al
  405d65:	and    dl,BYTE PTR [ebp-0x67]
  405d68:	(bad)  
  405d69:	out    0x4f,eax
  405d6b:	into   
  405d6c:	adc    BYTE PTR [ebx-0x7e],bl
  405d6f:	jge    0x405d35
  405d71:	scas   eax,DWORD PTR es:[edi]
  405d72:	dec    ebp
  405d73:	jge    0x405de1
  405d75:	mov    edx,0x94efd154
  405d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d7b:	jns    0x405da3
  405d7d:	dec    ecx
  405d7e:	pop    ecx
  405d7f:	ds hlt 
  405d81:	cld    
  405d82:	std    
  405d83:	mov    ebp,0xc39f2a50
  405d88:	mov    ds:0x955f5d85,eax
  405d8d:	jns    0x405d7e
  405d8f:	add    BYTE PTR [ecx],ah
  405d91:	clc    
  405d92:	xlat   BYTE PTR ds:[ebx]
  405d93:	adc    BYTE PTR [ecx],cl
  405d95:	retf   
  405d96:	jns    0x405e09
  405d98:	xchg   ecx,eax
  405d99:	lahf   
  405d9a:	inc    esp
  405d9b:	shl    BYTE PTR [ecx+0x6e9411e2],0xc2
  405da2:	loope  0x405e0e
  405da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da5:	inc    eax
  405da6:	inc    ecx
  405da7:	nop
  405da8:	pop    ss
  405da9:	jle    0x405dc4
  405dab:	and    edi,0x2d31188d
  405db1:	jo     0x405d4a
  405db3:	fnstsw WORD PTR [edi]
  405db5:	adc    DWORD PTR ds:0xf40eb1e3,edi
  405dbb:	dec    esi
  405dbc:	push   ss
  405dbd:	cs jecxz 0x405d45
  405dc0:	push   0xe7cc6bd1
  405dc5:	bound  ecx,QWORD PTR [ebp+0x60061640]
  405dcb:	mov    edi,0x1e07a3de
  405dd0:	push   ss
  405dd1:	mov    BYTE PTR [esi-0x8],0x2b
  405dd5:	pusha  
  405dd6:	bound  ecx,QWORD PTR [edi-0x5addade0]
  405ddc:	imul   eax,DWORD PTR [ebx-0x3c9f98c5],0x77bec109
  405de6:	pop    esi
  405de7:	out    0x89,eax
  405de9:	into   
  405dea:	ret    
  405deb:	retf   
  405dec:	mov    bl,0xf5
  405dee:	out    dx,al
  405def:	add    DWORD PTR [ebp-0x7f],ebx
  405df2:	cs aad 0x3
  405df5:	sbb    BYTE PTR [edi+eiz*4-0x29],0x6c
  405dfa:	push   ebp
  405dfb:	pop    edi
  405dfc:	cmp    al,0x19
  405dfe:	xor    bl,BYTE PTR [edx+0x4054fc10]
  405e04:	cli    
  405e05:	enter  0xc2aa,0xe4
  405e09:	add    DWORD PTR [ebx+0x6f],ebx
  405e0c:	mov    esi,0xfd0a9282
  405e11:	xchg   esi,eax
  405e12:	xchg   esp,eax
  405e13:	push   ebp
  405e14:	sub    eax,0x1c0b6714
  405e19:	mov    al,0x77
  405e1b:	push   edi
  405e1c:	in     eax,dx
  405e1d:	sti    
  405e1e:	cdq    
  405e1f:	pop    ebx
  405e20:	sub    eax,0x66630f30
  405e25:	mov    cl,dl
  405e27:	cwde   
  405e28:	aad    0x1d
  405e2a:	in     eax,0x12
  405e2c:	inc    esi
  405e2d:	aad    0x88
  405e2f:	adc    BYTE PTR [ebx+0x6f],bh
  405e32:	mov    al,0xa0
  405e34:	mov    ah,0x5b
  405e36:	shl    edi,cl
  405e38:	jp     0x405e05
  405e3a:	sub    BYTE PTR [edi-0x285cc0e4],cl
  405e40:	aaa    
  405e41:	imul   esp,DWORD PTR [ecx],0xffffff9e
  405e44:	and    ah,BYTE PTR [eax]
  405e46:	inc    eax
  405e47:	sbb    al,0x90
  405e49:	or     DWORD PTR [ebp-0x29],esi
  405e4c:	adc    al,0x8b
  405e4e:	mov    al,ds:0x5074d07
  405e53:	pop    ebp
  405e54:	cmc    
  405e55:	add    esi,ebx
  405e57:	inc    eax
  405e58:	jbe    0x405ec0
  405e5a:	mov    ebx,0x56e65d73
  405e5f:	icebp  
  405e60:	rcl    DWORD PTR [ecx+0x71],cl
  405e63:	mov    bl,0x2
  405e65:	xchg   ebx,eax
  405e66:	sbb    eax,0xb7cef563
  405e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e6c:	stos   DWORD PTR es:[edi],eax
  405e6d:	pop    ecx
  405e6e:	add    eax,DWORD PTR [ecx]
  405e70:	push   edi
  405e71:	mov    dl,0x89
  405e73:	push   es
  405e74:	ret    0x10d3
  405e77:	pop    edx
  405e78:	mov    bh,BYTE PTR [esi-0x56]
  405e7b:	add    eax,DWORD PTR [eax-0x567eb255]
  405e81:	sar    ch,0xeb
  405e84:	ins    DWORD PTR es:[edi],dx
  405e85:	fmul   QWORD PTR [ebp-0x4b33d618]
  405e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e8c:	cmc    
  405e8d:	sub    eax,0xea370e2d
  405e92:	push   0xcc2e2846
  405e97:	aad    0x41
  405e99:	call   0xb4b84a7e
  405e9e:	std    
  405e9f:	mov    ecx,0x20d93d13
  405ea4:	dec    ecx
  405ea5:	adc    cl,BYTE PTR [ecx]
  405ea7:	stc    
  405ea8:	call   0x7f98:0xf54a6080
  405eaf:	add    eax,0x34bb6dd3
  405eb4:	mov    ds:0x3cbe21a1,al
  405eb9:	xor    DWORD PTR [ecx-0x15143aa4],edi
  405ebf:	inc    dx
  405ec1:	add    BYTE PTR [esi-0x5c12cb8d],ch
  405ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec8:	sbb    bl,BYTE PTR [ebx-0x22b24565]
  405ece:	dec    esp
  405ecf:	dec    esp
  405ed0:	iret   
  405ed1:	fdiv   st,st(5)
  405ed3:	das    
  405ed4:	pop    ds
  405ed5:	gs mov ch,0x6e
  405ed8:	and    edx,ecx
  405eda:	inc    esp
  405edb:	(bad)  
  405edd:	je     0x405ef6
  405edf:	stos   BYTE PTR es:[edi],al
  405ee0:	sub    BYTE PTR [ebp+0x7a485c96],bh
  405ee6:	push   ebx
  405ee7:	sbb    DWORD PTR [edi-0x2820f76e],eax
  405eed:	out    dx,eax
  405eee:	stos   BYTE PTR es:[edi],al
  405eef:	or     edx,esp
  405ef1:	(bad)  
  405ef2:	cmp    al,0x57
  405ef4:	jo     0x405ea2
  405ef6:	pop    es
  405ef7:	in     al,dx
  405ef8:	inc    edx
  405ef9:	or     bh,0x30
  405efc:	mov    al,cl
  405efe:	js     0x405f3b
  405f00:	adc    BYTE PTR [eax-0x62a80cf0],dh
  405f06:	cmp    eax,ebx
  405f08:	jo     0x405e99
  405f0a:	mov    ecx,0x8e75d803
  405f0f:	ja     0x405f02
  405f11:	test   eax,0xcfc1b991
  405f16:	outs   dx,BYTE PTR ds:[esi]
  405f17:	cmp    DWORD PTR [ecx],esp
  405f19:	pop    eax
  405f1a:	xlat   BYTE PTR ds:[ebx]
  405f1b:	scas   al,BYTE PTR es:[edi]
  405f1c:	push   edx
  405f1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f1e:	or     eax,ebx
  405f20:	inc    ecx
  405f21:	mov    dh,0x50
  405f23:	and    ecx,edi
  405f25:	icebp  
  405f26:	(bad)  
  405f28:	dec    ecx
  405f29:	pop    ebp
  405f2a:	call   0xb951587b
  405f2f:	mov    bh,0x33
  405f31:	mov    cl,0xe0
  405f33:	sub    ebp,DWORD PTR [ecx]
  405f35:	fsubr  DWORD PTR [ecx]
  405f37:	pop    edx
  405f38:	lods   eax,DWORD PTR ds:[esi]
  405f39:	shr    ecx,1
  405f3b:	mov    eax,0x58c982ed
  405f40:	dec    esi
  405f41:	xchg   ebp,eax
  405f42:	fnstenv [esi]
  405f44:	and    dl,BYTE PTR [edx+ecx*2+0x1350885d]
  405f4b:	push   ebp
  405f4c:	lock mov ah,0xa6
  405f4f:	sub    DWORD PTR [ecx+0x69],edx
  405f52:	mov    BYTE PTR [edx+edx*4-0x52],al
  405f56:	add    ah,0xb2
  405f59:	xchg   al,al
  405f5b:	push   edx
  405f5c:	(bad)  
  405f5d:	mov    bl,0x4e
  405f5f:	imul   ebx,DWORD PTR [ebx+0x225eaf90],0xffffffd5
  405f66:	daa    
  405f67:	and    BYTE PTR [edi+0x1b3c4de6],al
  405f6d:	mov    BYTE PTR [esi-0x5e],bl
  405f70:	retfw  0xfe4e
  405f74:	sbb    dh,BYTE PTR [edx-0x2d]
  405f77:	cld    
  405f78:	iret   
  405f79:	dec    esp
  405f7a:	lods   al,BYTE PTR ds:[esi]
  405f7b:	adc    ch,BYTE PTR [esi-0x22]
  405f7e:	pushf  
  405f7f:	mov    bl,bh
  405f81:	sub    al,bl
  405f83:	fistp  QWORD PTR [eax*4-0x3d3cb0c3]
  405f8a:	sub    eax,esp
  405f8c:	ss cwde 
  405f8e:	scas   al,BYTE PTR es:[edi]
  405f8f:	or     eax,0x53ba662a
  405f94:	addr16 mov ch,0x54
  405f97:	mul    BYTE PTR [eax+0x2d1ffad]
  405f9d:	jo     0x405fda
  405f9f:	cmp    DWORD PTR gs:[ebp+edx*2-0x1a],ecx
  405fa4:	and    al,0x1c
  405fa6:	cs jne 0x405f9b
  405fa9:	jmp    0x405fc9
  405fab:	out    0xf9,al
  405fad:	retf   0x90e8
  405fb0:	imul   eax,eax,0xffffff83
  405fb3:	fdiv   DWORD PTR [edx]
  405fb5:	mov    eax,ds:0x95350f3f
  405fba:	mov    ebx,0x66ebf24a
  405fc0:	xlat   BYTE PTR ds:[ebx]
  405fc1:	xor    eax,0xe4fe2819
  405fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fc7:	aad    0xc4
  405fc9:	pop    ss
  405fca:	sub    DWORD PTR [edx-0x3c3e4ff6],ecx
  405fd0:	push   ds
  405fd1:	stc    
  405fd2:	adc    DWORD PTR [ecx],esp
  405fd4:	stc    
  405fd5:	pusha  
  405fd6:	cmp    eax,0x6fd6f2c4
  405fdb:	push   esp
  405fdc:	out    dx,eax
  405fdd:	retf   0xe233
  405fe0:	sub    ah,BYTE PTR [edx]
  405fe2:	inc    eax
  405fe3:	loope  0x405f9a
  405fe5:	cli    
  405fe6:	and    dl,bl
  405fe8:	dec    esp
  405fe9:	jae    0x40605a
  405feb:	leave  
  405fec:	aad    0xff
  405fee:	adc    edi,DWORD PTR [edx+0x44]
  405ff1:	ret    0x5c69
  405ff4:	jecxz  0x405ffb
  405ff6:	xchg   ebp,eax
  405ff7:	pslld  mm2,QWORD PTR [esi]
  405ffa:	xchg   ecx,eax
  405ffb:	add    BYTE PTR [ebp-0x59],bh
  405ffe:	sub    BYTE PTR [ecx-0x5367b1f1],ah
  406004:	popf   
  406005:	test   eax,0xbdcbd35
  40600a:	int3   
  40600b:	sub    al,0x19
  40600d:	mov    dl,ch
  40600f:	sub    BYTE PTR [ebx-0x2cf7d3f1],cl
  406015:	push   esi
  406016:	sbb    edi,0xffffffca
  406019:	addr16 cmc 
  40601b:	lods   al,BYTE PTR ds:[esi]
  40601c:	in     al,dx
  40601d:	add    BYTE PTR [edi],bl
  40601f:	xchg   edx,eax
  406020:	inc    ebp
  406021:	mov    edi,0x1eb27134
  406026:	dec    edi
  406027:	aam    0xa2
  406029:	mov    edx,DWORD PTR [ecx-0x52]
  40602c:	mov    ds:0x7740b6d6,al
  406031:	pop    ecx
  406032:	dec    ebp
  406033:	daa    
  406034:	std    
  406035:	mov    eax,0xd070be74
  40603a:	mov    BYTE PTR [eax+0x4505210d],ch
  406040:	jge    0x40609a
  406042:	cli    
  406043:	pop    eax
  406044:	dec    ebx
  406045:	jmp    0x406044
  406047:	xchg   esi,eax
  406048:	fldenv [ebx]
  40604a:	jmp    0x39d0:0x5de2f5b2
  406051:	and    eax,0xe1573fa
  406056:	jg     0x405fea
  406058:	(bad)  
  406059:	jg     0x406024
  40605b:	out    dx,eax
  40605c:	pop    edx
  40605d:	add    DWORD PTR [ebx+0x5d],0xedf6e491
  406064:	cmp    DWORD PTR [ecx-0x4e],ebp
  406067:	lds    esi,FWORD PTR [eax]
  406069:	dec    ebp
  40606a:	sub    DWORD PTR [edx],0x72
  40606d:	pop    edi
  40606e:	lds    ebx,FWORD PTR [ecx-0x77bc4341]
  406074:	js     0x406097
  406076:	mov    edx,0x30b8a47a
  40607b:	push   eax
  40607c:	cmc    
  40607d:	mov    edi,0x224ce4b9
  406082:	cmp    al,0xe1
  406084:	dec    edi
  406085:	leave  
  406086:	push   eax
  406087:	push   edi
  406088:	mov    al,ds:0x317c2973
  40608d:	dec    eax
  40608e:	fcmovne st,st(0)
  406090:	mov    dl,0xf2
  406092:	shl    dl,cl
  406094:	in     al,0xea
  406096:	ffreep st(5)
  406098:	int    0xa
  40609a:	mov    cl,0xc7
  40609c:	jne    0x406098
  40609e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40609f:	repnz cli 
  4060a1:	sub    al,0xf
  4060a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a4:	sbb    eax,0x52c48575
  4060a9:	pop    edx
  4060aa:	jp     0x4060af
  4060ac:	and    eax,0xffffffd5
  4060af:	xchg   DWORD PTR [ebp-0x79],edx
  4060b2:	mov    dl,0x59
  4060b4:	ds iret 
  4060b6:	push   edx
  4060b7:	lock add ch,BYTE PTR [ecx]
  4060ba:	ds fs inc ecx
  4060bd:	pop    edi
  4060be:	sti    
  4060bf:	sbb    al,dl
  4060c1:	push   esp
  4060c2:	cli    
  4060c3:	es jge 0x40609c
  4060c6:	pushf  
  4060c7:	jg     0x40606b
  4060c9:	aad    0x73
  4060cb:	and    BYTE PTR [ecx+0x29],dl
  4060ce:	or     edi,DWORD PTR [eax]
  4060d0:	and    esi,esi
  4060d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060d3:	inc    ebp
  4060d4:	pop    ss
  4060d5:	and    ebp,DWORD PTR [eax-0x8b5ef83]
  4060db:	ret    
  4060dc:	mov    dl,0x12
  4060de:	xor    eax,0xaf491524
  4060e3:	inc    esi
  4060e4:	pop    edi
  4060e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e6:	dec    edi
  4060e7:	mov    WORD PTR [edi+0x3c],ss
  4060ea:	arpl   WORD PTR [edi-0x7f],si
  4060ed:	push   ebx
  4060ee:	pop    ds
  4060ef:	mov    bh,0x71
  4060f1:	push   ecx
  4060f2:	jae    0x406117
  4060f4:	push   0x3
  4060f6:	es sahf 
  4060f8:	lods   eax,DWORD PTR ds:[esi]
  4060f9:	out    0x14,al
  4060fb:	sti    
  4060fc:	mov    ebx,0x586e10a9
  406101:	in     eax,0x97
  406103:	bound  ebx,QWORD PTR [edx]
  406105:	nop
  406106:	jg     0x40609d
  406108:	xchg   edi,eax
  406109:	sar    BYTE PTR [eax],0x62
  40610c:	les    edi,FWORD PTR [ebx+eax*4+0x25]
  406110:	or     al,0x1c
  406112:	(bad)
  406116:	mov    ch,0x1f
  406118:	mov    al,0xe2
  40611a:	cmp    ch,dh
  40611c:	jbe    0x406134
  40611e:	jp     0x40616b
  406120:	inc    eax
  406121:	ss sub al,0x1d
  406124:	mov    al,0xf4
  406126:	fdiv   QWORD PTR [edi+ecx*8]
  406129:	rcr    BYTE PTR [ebx],cl
  40612b:	retf   0x8f5d
  40612e:	push   ecx
  40612f:	mov    eax,ds:0x41b759aa
  406134:	xchg   ebx,eax
  406135:	bound  esp,QWORD PTR [ebx*1+0x7306add7]
  40613c:	shl    ch,0xa2
  40613f:	and    DWORD PTR [esi+0x69],ebp
  406142:	loopne 0x4060e8
  406144:	cmp    eax,0x53291d93
  406149:	mov    ebx,0xad7253d4
  40614e:	pop    ebp
  40614f:	popa   
  406150:	pop    eax
  406151:	inc    eax
  406152:	dec    edx
  406153:	jmp    0x3999:0x68100239
  40615a:	out    dx,al
  40615b:	loope  0x4061c1
  40615d:	test   al,0x88
  40615f:	push   es
  406160:	mov    ebx,cs
  406162:	mov    BYTE PTR [ecx-0x68b84f76],ch
  406168:	imul   ecx,eax,0xffffff96
  40616b:	lods   eax,DWORD PTR ds:[esi]
  40616c:	mov    al,0x76
  40616e:	pop    ss
  40616f:	fidiv  WORD PTR [ecx+0x3b59d710]
  406175:	rol    DWORD PTR [edi+edi*2-0x2a],1
  406179:	xor    eax,0x20328446
  40617e:	bound  esp,QWORD PTR [edx-0x5ea6dd43]
  406184:	or     ah,BYTE PTR [ebp-0x2a]
  406187:	cmp    ecx,DWORD PTR [edx+0x49949b86]
  40618d:	ins    DWORD PTR es:[edi],dx
  40618e:	ficomp DWORD PTR [edi+0x25c170c3]
  406194:	sahf   
  406195:	test   al,0x47
  406197:	or     al,0x8c
  406199:	mov    dh,0x95
  40619b:	mov    DWORD PTR [esi],esp
  40619d:	adc    DWORD PTR [esi+0x28],0xffffffab
  4061a1:	test   BYTE PTR [eax+eiz*8+0x7b],al
  4061a5:	inc    edi
  4061a6:	ret    0x5623
  4061a9:	xor    bh,dl
  4061ab:	imul   esp,DWORD PTR [esi],0x54
  4061ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061af:	loope  0x406215
  4061b1:	add    dl,cl
  4061b3:	stc    
  4061b4:	add    ecx,ebx
  4061b6:	cdq    
  4061b7:	cmc    
  4061b8:	add    ebx,ecx
  4061ba:	xchg   ecx,eax
  4061bb:	mov    ecx,0x783a3ff3
  4061c0:	push   0x26
  4061c2:	repnz scas al,BYTE PTR es:[edi]
  4061c4:	xchg   DWORD PTR [esi],edx
  4061c6:	mov    al,ds:0xa8cedd7b
  4061cb:	sbb    BYTE PTR [ebx],0x35
  4061ce:	test   eax,0xef4add9b
  4061d3:	scas   eax,DWORD PTR es:[edi]
  4061d4:	lock ret 0x500
  4061d8:	je     0x40617d
  4061da:	jl     0x4061e0
  4061dc:	dec    edx
  4061dd:	call   0xc9eb:0xa08c7c72
  4061e4:	daa    
  4061e5:	mov    ebx,0xc079798b
  4061ea:	cmp    eax,0xbecf6fc3
  4061ef:	loope  0x406205
  4061f1:	jle    0x4061f3
  4061f3:	cmp    DWORD PTR [ecx+0x4f8d6c81],ebx
  4061f9:	dec    edi
  4061fa:	bound  edx,QWORD PTR [edi+0x45]
  4061fd:	(bad)  
  4061fe:	or     al,0x1c
  406200:	push   ebx
  406201:	sub    BYTE PTR ds:0xe46e099a,bh
  406207:	es aam 0xe1
  40620a:	cdq    
  40620b:	dec    esp
  40620c:	xor    al,0x1a
  40620e:	loopne 0x406231
  406210:	sub    ch,bl
  406212:	cli    
  406213:	and    BYTE PTR [esi],cl
  406215:	adc    eax,0xcc79be56
  40621a:	bound  ecx,QWORD PTR [edx]
  40621c:	xlat   BYTE PTR ds:[ebx]
  40621d:	inc    ecx
  40621e:	xchg   DWORD PTR [edx-0x126438f0],esi
  406224:	jns    0x4061dc
  406226:	hlt    
  406227:	mov    esi,DWORD PTR [ebx+eax*8+0x14b9fc91]
  40622e:	jnp    0x4061b2
  406230:	sbb    al,0x3e
  406232:	dec    esp
  406233:	arpl   WORD PTR [edi],cx
  406235:	ret    0x9bd8
  406238:	shl    BYTE PTR [edx-0x3f],1
  40623b:	adc    dl,BYTE PTR ds:0x88c934ca
  406241:	in     eax,0xec
  406243:	ss cwde 
  406245:	int3   
  406246:	jg     0x40628b
  406248:	xchg   edi,eax
  406249:	in     eax,0x2d
  40624b:	int    0xb5
  40624d:	and    DWORD PTR [ebx],esp
  40624f:	shl    DWORD PTR [ebp-0x1b],1
  406252:	mov    eax,0x7f26a412
  406257:	add    BYTE PTR [esi],dh
  406259:	cdq    
  40625a:	call   0x5d4475cf
  40625f:	imul   DWORD PTR [ebx-0x6d]
  406262:	syscall 
  406264:	cmc    
  406265:	push   edx
  406266:	dec    esi
  406267:	lods   al,BYTE PTR ds:[esi]
  406268:	scas   al,BYTE PTR es:[edi]
  406269:	mov    esp,0x20997896
  40626e:	push   ecx
  40626f:	jg     0x4062a4
  406271:	in     al,dx
  406272:	lahf   
  406273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406274:	fdiv   DWORD PTR [edi-0x47]
  406277:	mov    eax,0x1d685722
  40627c:	mov    cl,0x65
  40627e:	push   esi
  40627f:	stos   DWORD PTR es:[edi],eax
  406280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406281:	and    ecx,DWORD PTR [ebp-0x242da993]
  406287:	sbb    bh,0xd0
  40628a:	xchg   esp,eax
  40628b:	lahf   
  40628c:	mov    ebx,0x8a23aa67
  406291:	icebp  
  406292:	stos   BYTE PTR es:[edi],al
  406293:	sbb    DWORD PTR [edx+eax*1],0xffffff99
  406297:	es int 0x6e
  40629a:	jb     0x4062b5
  40629c:	mov    ds,WORD PTR [ecx-0x6e83b625]
  4062a2:	add    al,0x95
  4062a4:	pop    eax
  4062a5:	jno    0x406277
  4062a7:	jbe    0x406267
  4062a9:	mov    BYTE PTR [ecx+0x36],0x45
  4062ad:	xor    bl,BYTE PTR [edx+0x3e99fdc8]
  4062b3:	clc    
  4062b4:	ins    BYTE PTR es:[edi],dx
  4062b5:	mov    ds:0x403dc47a,eax
  4062ba:	gs jmp 0x932b7c57
  4062c0:	das    
  4062c1:	push   cs
  4062c2:	add    eax,0x855d875e
  4062c7:	mov    dh,0x54
  4062c9:	rol    ecx,cl
  4062cb:	cdq    
  4062cc:	push   edx
  4062cd:	dec    edi
  4062ce:	sub    DWORD PTR [ebx-0x40],0x35
  4062d2:	cdq    
  4062d3:	fucomp st(6)
  4062d5:	cdq    
  4062d6:	dec    esi
  4062d7:	stc    
  4062d8:	fmul   QWORD PTR [esp+eiz*4+0x90af653]
  4062df:	loop   0x40630f
  4062e1:	(bad)  
  4062e2:	cwde   
  4062e3:	dec    edx
  4062e4:	sub    BYTE PTR [esi],ch
  4062e6:	std    
  4062e7:	and    BYTE PTR [edx+0x4d36bb2c],bh
  4062ed:	jno    0x4062b4
  4062ef:	and    ebp,DWORD PTR [edx]
  4062f1:	mov    al,ds:0xb49b6acb
  4062f6:	iret   
  4062f7:	mov    bl,0xe
  4062f9:	fisub  DWORD PTR [eax]
  4062fb:	sbb    al,0x75
  4062fd:	lds    ecx,FWORD PTR [ecx+eax*2]
  406300:	rcr    BYTE PTR [eax],cl
  406302:	nop
  406303:	das    
  406304:	jno    0x40630f
  406306:	inc    ecx
  406307:	xor    BYTE PTR [ebp+eax*8+0x4d],dl
  40630b:	dec    edi
  40630c:	pushf  
  40630d:	fnsave [ecx-0x1db0aa61]
  406313:	push   esi
  406314:	mov    eax,0x799f24ce
  406319:	or     ecx,DWORD PTR [ecx]
  40631b:	dec    edx
  40631c:	dec    ebx
  40631d:	aaa    
  40631e:	rcr    DWORD PTR [edi],cl
  406320:	out    0xeb,eax
  406322:	stos   BYTE PTR es:[edi],al
  406323:	sub    eax,ecx
  406325:	push   0x29
  406327:	cmp    eax,0xcb73c54a
  40632c:	push   0x6b66b5cc
  406331:	jae    0x4062e3
  406333:	je     0x40630d
  406335:	pop    edi
  406336:	pop    esp
  406337:	leave  
  406338:	rcr    al,1
  40633a:	jnp    0x406336
  40633c:	sbb    DWORD PTR [ecx-0x1aa7cce0],0x1b71262c
  406346:	in     eax,dx
  406347:	into   
  406348:	push   0x32135f13
  40634d:	mov    eax,es:0x1c67dcb9
  406353:	out    dx,al
  406354:	push   esi
  406355:	push   edi
  406356:	aaa    
  406357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406358:	sbb    eax,0x5a62dbae
  40635d:	sub    eax,0xc4157eaf
  406362:	mov    bh,0x49
  406364:	mov    ds:0x5791a596,eax
  406369:	jl     0x406396
  40636b:	xchg   edi,eax
  40636c:	inc    eax
  40636d:	(bad)  
  40636e:	cli    
  40636f:	int3   
  406370:	mov    bh,BYTE PTR [edi]
  406372:	jnp    0x406315
  406374:	jnp    0x406321
  406376:	mov    ds:0xdd9520de,eax
  40637b:	sub    BYTE PTR [ecx],ah
  40637d:	in     al,dx
  40637e:	ret    0x63bf
  406381:	mov    ch,bl
  406383:	aas    
  406384:	test   DWORD PTR [ebx+0x6f845a81],ebx
  40638a:	xchg   DWORD PTR [ecx],ebx
  40638c:	inc    ecx
  40638d:	imul   esi,edx,0xfdc92679
  406393:	test   DWORD PTR [eax],esi
  406395:	push   si
  406397:	or     al,0x3b
  406399:	xor    cl,BYTE PTR [esi+eax*4-0x2e]
  40639d:	inc    edx
  40639e:	xchg   esp,eax
  40639f:	adc    ecx,DWORD PTR [eax+0x1f869833]
  4063a5:	ss mov eax,0x4d397d5f
  4063ab:	add    bh,bl
  4063ad:	jmp    0x1207b94b
  4063b2:	bound  ecx,QWORD PTR [edi]
  4063b4:	jecxz  0x40640a
  4063b6:	sub    eax,0xa4ebe4d5
  4063bb:	lods   eax,DWORD PTR ds:[esi]
  4063bc:	pop    edx
  4063bd:	mov    eax,0x20150803
  4063c2:	pop    edx
  4063c3:	and    DWORD PTR [edx+0x65],esp
  4063c6:	retf   
  4063c7:	das    
  4063c8:	neg    DWORD PTR [ebx]
  4063ca:	popa   
  4063cb:	mov    ch,0xa4
  4063cd:	xlat   BYTE PTR ds:[ebx]
  4063ce:	mov    al,ds:0x327ec3d0
  4063d3:	mov    esi,0x437c7b52
  4063d8:	ins    BYTE PTR es:[edi],dx
  4063d9:	std    
  4063da:	retf   0x5e1c
  4063dd:	xchg   ebx,eax
  4063de:	jmp    DWORD PTR [esi-0x42fa990e]
  4063e4:	fidiv  WORD PTR [edi-0x7502c96b]
  4063ea:	mov    BYTE PTR [esi+0x41],ah
  4063ed:	cmp    BYTE PTR [eax],ah
  4063ef:	cld    
  4063f0:	cmp    ecx,DWORD PTR ds:0x801e1f0e
  4063f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063f7:	cli    
  4063f8:	sbb    ah,bh
  4063fa:	push   0xd29205ac
  4063ff:	repz mov dl,0xc3
  406402:	jg     0x40638d
  406404:	xor    BYTE PTR [esi],ch
  406406:	jmp    0x2e3e2de0
  40640b:	enter  0x487d,0xcc
  40640f:	popf   
  406410:	popf   
  406411:	mov    bl,0xd1
  406413:	pop    es
  406414:	aad    0x7b
  406416:	or     al,0x9d
  406418:	xchg   BYTE PTR [esi],bl
  40641a:	jo     0x406453
  40641c:	aaa    
  40641d:	stos   BYTE PTR es:[edi],al
  40641e:	test   DWORD PTR [esi],esp
  406420:	jg     0x4063c1
  406422:	and    DWORD PTR [eax],ebx
  406424:	sti    
  406425:	jo     0x4063f6
  406427:	inc    ebx
  406428:	xor    eax,0xa74820dd
  40642d:	cmp    edx,DWORD PTR [eax]
  40642f:	jmp    0xbd9f:0xb800e2c1
  406436:	lods   eax,DWORD PTR ds:[esi]
  406437:	jno    0x40647d
  406439:	lahf   
  40643a:	fcomp  QWORD PTR [esp+ebx*2]
  40643d:	loope  0x40643b
  40643f:	mov    bl,0xfe
  406441:	aas    
  406442:	xchg   esp,eax
  406443:	dec    esp
  406444:	loop   0x406479
  406446:	(bad)  
  406447:	test   esi,edi
  406449:	pop    es
  40644a:	les    edi,FWORD PTR [ebx+0x3b8a1ad1]
  406450:	fnstenv [ecx+0x18]
  406453:	sub    BYTE PTR [edi+eiz*1],ch
  406456:	loop   0x40644f
  406458:	sbb    al,0xf0
  40645a:	xchg   edi,eax
  40645b:	mov    esp,0x7c72a1ae
  406460:	out    dx,eax
  406461:	or     ch,BYTE PTR [ebx]
  406463:	je     0x406457
  406465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406466:	sub    BYTE PTR [ebp+0xf3d942b],cl
  40646c:	call   0xa2a5fe2e
  406471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406472:	jmp    0x8ebb:0xaa7880f9
  406479:	push   esi
  40647a:	mov    esi,0x88f11ce5
  40647f:	lock or eax,0xb98f67b5
  406485:	mov    esp,0x5a29d79a
  40648a:	pushf  
  40648b:	jmp    0xcad4:0x6e0ec8ce
  406492:	jb     0x4064be
  406494:	das    
  406495:	sbb    edi,DWORD PTR [esi+0x104709c7]
  40649b:	sbb    BYTE PTR [ecx],bl
  40649d:	inc    eax
  40649e:	iret   
  40649f:	(bad)  [edx]
  4064a1:	cmc    
  4064a2:	test   DWORD PTR [edi+0x73],0xc1161b3e
  4064a9:	fsub   st(3),st
  4064ab:	jo     0x40645a
  4064ad:	dec    esi
  4064ae:	in     eax,dx
  4064af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064b0:	addr16 call 0x7291:0x64b335d
  4064b8:	daa    
  4064b9:	jg     0x406466
  4064bb:	aad    0xb9
  4064bd:	pop    esp
  4064be:	popf   
  4064bf:	dec    ecx
  4064c0:	sbb    eax,0xbd36636b
  4064c5:	push   ds
  4064c6:	xor    eax,0x99872186
  4064cb:	leave  
  4064cc:	(bad)  
  4064cd:	faddp  st(3),st
  4064cf:	cmp    dh,BYTE PTR [ebp-0xe006712]
  4064d5:	add    BYTE PTR [esi],al
  4064d7:	or     eax,esi
  4064d9:	nop
  4064da:	es jno 0x406548
  4064dd:	shr    DWORD PTR [eax-0x49],1
  4064e0:	add    BYTE PTR [ebx+0x49f74f51],bl
  4064e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064e7:	gs jae 0x406499
  4064ea:	adc    eax,0x6791c4fd
  4064ef:	pslld  mm2,QWORD PTR [esi]
  4064f2:	adc    BYTE PTR [ecx+0x55],bh
  4064f5:	pop    eax
  4064f6:	les    edi,FWORD PTR [ebx+esi*4+0x4388df51]
  4064fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064fe:	sbb    BYTE PTR [edx+0x1206f7f6],ah
  406504:	(bad)  
  406506:	fstp   DWORD PTR [edx+0x4e]
  406509:	xchg   edi,eax
  40650a:	inc    ecx
  40650b:	adc    al,0x22
  40650d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40650e:	mov    eax,ds:0x2aaefa4
  406513:	pop    edi
  406514:	sub    eax,0x680d835e
  406519:	mov    al,0xe0
  40651b:	rol    DWORD PTR [edi],1
  40651d:	sub    al,0x2f
  40651f:	retf   
  406520:	or     DWORD PTR [ebx+0x41],esi
  406523:	repnz dec edi
  406525:	js     0x406593
  406527:	xor    eax,0x2158d5c2
  40652c:	cmp    al,ch
  40652e:	in     eax,dx
  40652f:	push   edx
  406530:	pop    ds
  406531:	rol    DWORD PTR [esi-0x2a],1
  406534:	fwait
  406535:	shl    BYTE PTR [edx+0x5f],0x2f
  406539:	icebp  
  40653a:	in     eax,dx
  40653b:	je     0x40653d
  40653d:	fnstsw WORD PTR ds:0x3d60be93
  406543:	rol    BYTE PTR [esi],1
  406545:	mov    al,0x15
  406547:	clc    
  406548:	fmulp  st(4),st
  40654a:	mov    cl,0xfa
  40654c:	dec    edi
  40654d:	or     BYTE PTR [ebx-0x799f9564],dl
  406553:	sub    bl,BYTE PTR [esi+0x1e]
  406556:	cwde   
  406557:	jne    0x4065b7
  406559:	mov    ebx,0xc40703ac
  40655e:	mov    esi,0xf5d05b20
  406563:	fwait
  406564:	loope  0x40652e
  406566:	stos   BYTE PTR es:[edi],al
  406567:	ror    DWORD PTR [edi-0x1c689270],1
  40656d:	test   al,0xb7
  40656f:	xor    edx,esi
  406571:	mov    eax,0x5a0b0117
  406576:	bound  ebp,QWORD PTR [edx+0x6f]
  406579:	es ins DWORD PTR es:[edi],dx
  40657b:	sbb    edi,ecx
  40657d:	ret    0x62d1
  406580:	dec    ecx
  406581:	cmp    ebx,ebx
  406583:	in     eax,0xf9
  406585:	in     eax,0x4d
  406587:	leave  
  406588:	mov    ah,0xa7
  40658a:	xor    ah,bh
  40658c:	gs call 0xfcca:0x3d753f7d
  406594:	call   0x9c2b:0x792374e
  40659b:	aas    
  40659c:	inc    ecx
  40659d:	rcr    BYTE PTR gs:[esi],0xf6
  4065a1:	ds fwait
  4065a3:	cld    
  4065a4:	sar    DWORD PTR [eax-0xd],cl
  4065a7:	dec    ecx
  4065a8:	mov    eax,ds:0xf7ae60cd
  4065ad:	repz jg 0x4065a2
  4065b0:	sub    bh,bh
  4065b2:	sbb    BYTE PTR [ebp+0x48],cl
  4065b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b6:	mov    ebp,0x751eaf32
  4065bb:	ret    0xc9d0
  4065be:	jp     0x406622
  4065c0:	stos   DWORD PTR es:[edi],eax
  4065c1:	pop    edx
  4065c2:	mov    ecx,DWORD PTR [eax]
  4065c4:	fidiv  DWORD PTR [esi+eiz*8-0x74]
  4065c8:	sub    edi,DWORD PTR [ebp-0x6f]
  4065cb:	push   esi
  4065cc:	cs inc esi
  4065ce:	mov    ds:0x4b0c1715,al
  4065d3:	xor    eax,ecx
  4065d5:	shr    BYTE PTR [ecx+eax*2-0x26b3dd37],1
  4065dc:	or     al,0x67
  4065de:	mov    eax,?
  4065e0:	(bad)  
  4065e1:	fnstsw WORD PTR [ebx+0x71]
  4065e4:	mov    ds:0x1914b548,eax
  4065e9:	repnz xor eax,0x2d1402ec
  4065ef:	mov    BYTE PTR [edi-0x75],bl
  4065f2:	loopne 0x406669
  4065f4:	xchg   DWORD PTR ds:0x9bfabe95,ecx
  4065fa:	test   DWORD PTR [eax-0x61fae477],esp
  406600:	sar    BYTE PTR [ecx+0x2baa7422],1
  406606:	cli    
  406607:	dec    edi
  406608:	adc    bl,al
  40660a:	rcl    DWORD PTR [esi+0x6143d4d0],cl
  406610:	dec    eax
  406611:	movd   mm7,DWORD PTR [eax-0x7]
  406615:	cmp    al,0x83
  406617:	mov    dl,0x83
  406619:	int    0xb9
  40661b:	mov    edi,0x59b4ebb8
  406620:	pop    esi
  406621:	inc    edx
  406622:	mov    ds:0x2a99b696,eax
  406627:	popf   
  406628:	pop    edx
  406629:	(bad)  
  40662a:	(bad)  
  40662b:	add    bl,BYTE PTR [bp+si+0x6d10]
  406630:	cmp    BYTE PTR [ebx-0x18],al
  406633:	dec    ebx
  406634:	lock js 0x406612
  406637:	jle    0x40667f
  406639:	and    eax,0xc5af455e
  40663e:	and    bh,dl
  406640:	mov    WORD PTR [edx+0x19b9898],es
  406646:	xchg   esi,eax
  406647:	in     al,0x3c
  406649:	adc    al,cl
  40664b:	imul   ebx,edx,0x2c910ed8
  406651:	out    0x79,al
  406653:	and    edx,esp
  406655:	aam    0xe
  406657:	push   DWORD PTR [edx-0x1cd9e1aa]
  40665d:	test   dl,ah
  40665f:	adc    cl,BYTE PTR [esi]
  406661:	loope  0x406646
  406663:	aas    
  406664:	push   0x1a
  406666:	adc    eax,ebp
  406668:	cwde   
  406669:	xchg   esp,eax
  40666a:	into   
  40666b:	popf   
  40666c:	pop    ds
  40666d:	clc    
  40666e:	sub    eax,0x609be871
  406673:	or     cl,BYTE PTR [ebx-0x4e]
  406676:	adc    BYTE PTR [esi+0x3],dh
  406679:	pop    ss
  40667a:	sbb    ah,ch
  40667c:	mov    bh,0xd3
  40667e:	int    0xf9
  406680:	pushf  
  406681:	imul   ebp,DWORD PTR ds:[ecx+0x38],0xffffffe5
  406686:	cld    
  406687:	fsubr  st(7),st
  406689:	imul   si,WORD PTR [ebx+0x61ea5728],0xff89
  406691:	(bad)  
  406692:	enter  0xe6c9,0x7c
  406696:	dec    edx
  406697:	cwde   
  406698:	repz ds sbb eax,0x25b96d1a
  40669f:	mov    eax,0xf02c74c8
  4066a4:	jbe    0x4066c4
  4066a6:	cmp    eax,0xaabdaea4
  4066ab:	repnz clc 
  4066ad:	dec    esp
  4066ae:	mov    dh,0xd3
  4066b0:	push   ds
  4066b1:	jmp    0xe6ad:0x769c41bd
  4066b8:	dec    esi
  4066b9:	movq   QWORD PTR [esi-0x4f7dd109],mm3
  4066c0:	rep stos DWORD PTR es:[edi],eax
  4066c2:	divps  xmm3,XMMWORD PTR [ecx+0x66769119]
  4066c9:	inc    esp
  4066ca:	arpl   bx,cx
  4066cc:	push   0xffffffaa
  4066ce:	dec    ebp
  4066cf:	jp     0x406712
  4066d1:	inc    ebp
  4066d2:	fwait
  4066d3:	sbb    BYTE PTR [edx+0x755adfd6],bl
  4066d9:	xchg   BYTE PTR [ecx+0x70],cl
  4066dc:	adc    esi,DWORD PTR [esi+0x7f]
  4066df:	rcl    DWORD PTR [edi+ecx*2-0x170c0047],0xd6
  4066e7:	lea    esi,[esi-0x6c44dfd]
  4066ed:	js     0x4066a2
  4066ef:	jl     0x4066eb
  4066f1:	nop    ebp
  4066f4:	test   DWORD PTR [eax-0x3e],eax
  4066f7:	repz jnp 0xe923cdd9
  4066fe:	dec    esi
  4066ff:	fidivr WORD PTR [ebp+eiz*8-0x71]
  406703:	push   ss
  406704:	cmp    DWORD PTR [edx],ecx
  406706:	mov    ah,0xc2
  406708:	jecxz  0x406777
  40670a:	add    BYTE PTR [ebp-0x33],ch
  40670d:	not    WORD PTR [esi+eax*4-0x55f7229c]
  406715:	dec    esp
  406716:	(bad)  
  406717:	in     al,0x94
  406719:	shl    BYTE PTR [ebp-0x68],cl
  40671c:	xchg   DWORD PTR [edi-0x70],ebp
  40671f:	nop
  406720:	test   BYTE PTR [esi+0x55],0xd
  406724:	sub    DWORD PTR [edi-0x7d9b4827],ebp
  40672a:	xor    DWORD PTR [ebx+edx*1],ecx
  40672d:	push   esp
  40672e:	in     al,0x26
  406730:	call   0x4a5b8863
  406735:	dec    edx
  406736:	cdq    
  406737:	outs   dx,BYTE PTR ds:[esi]
  406738:	daa    
  406739:	mov    ebp,0xe18ccff5
  40673e:	ins    BYTE PTR es:[edi],dx
  40673f:	repnz repz push cs
  406742:	mov    DWORD PTR [edi-0x46],edx
  406745:	xor    esi,edi
  406747:	jno    0x406790
  406749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40674a:	js     0x4066e5
  40674c:	xor    ecx,esi
  40674e:	test   ebp,0x55d760d2
  406754:	mov    dl,BYTE PTR [esi]
  406756:	daa    
  406757:	mov    esi,0xac49d531
  40675c:	jle    0x40675a
  40675e:	inc    esp
  40675f:	jbe    0x406708
  406761:	leave  
  406762:	jl     0x406765
  406764:	out    0xc9,eax
  406766:	xchg   ebp,eax
  406767:	xchg   ebx,eax
  406768:	ins    DWORD PTR es:[edi],dx
  406769:	mov    bl,0x37
  40676b:	jmp    0x20b123c6
  406770:	(bad)  
  406771:	xor    al,0x97
  406773:	add    eax,0xc45c07f5
  406778:	push   edi
  406779:	pop    esi
  40677a:	lock loope 0x4067f9
  40677d:	dec    ebp
  40677e:	fstp   QWORD PTR [edi]
  406780:	gs cdq 
  406782:	(bad)  
  406783:	(bad)  
  406784:	std    
  406785:	add    DWORD PTR [edx-0x70a17e8c],esi
  40678b:	cmc    
  40678c:	pop    edx
  40678d:	or     BYTE PTR [esi-0x1ff5bff4],0x3a
  406794:	sub    eax,0x20ed6012
  406799:	adc    DWORD PTR [eax],edx
  40679b:	adc    cl,al
  40679d:	cmp    eax,0xf83ea31c
  4067a2:	dec    ebp
  4067a3:	ss xor eax,0x522ee16a
  4067a9:	imul   BYTE PTR [esp+esi*8+0x6034884f]
  4067b0:	call   0xe0b4:0xa2a12a64
  4067b7:	push   esi
  4067b8:	jb     0x406755
  4067ba:	mov    BYTE PTR [ecx+0x2c845a7b],ch
  4067c0:	mov    dl,0x69
  4067c2:	in     eax,0xfd
  4067c4:	into   
  4067c5:	jae    0x4067dc
  4067c7:	or     cl,bl
  4067c9:	ret    
  4067ca:	xchg   ecx,eax
  4067cb:	mov    bh,0x1b
  4067cd:	jle    0x40683c
  4067cf:	lods   eax,DWORD PTR ds:[esi]
  4067d0:	out    0x3e,al
  4067d2:	sbb    DWORD PTR [eax],esp
  4067d4:	mov    ds:0x33bdfcda,eax
  4067d9:	iret   
  4067da:	sub    al,0xc
  4067dc:	dec    esp
  4067dd:	sahf   
  4067de:	int    0x4a
  4067e0:	rol    DWORD PTR [edx],cl
  4067e2:	add    bl,BYTE PTR ds:0xcb875642
  4067e8:	pushf  
  4067e9:	repz jle 0x4067d7
  4067ec:	inc    si
  4067ee:	or     DWORD PTR [edx],ebx
  4067f0:	loopne 0x40682f
  4067f2:	mov    fs,WORD PTR [edi-0x55]
  4067f5:	mov    ah,0x7d
  4067f7:	cmp    al,0xbb
  4067f9:	sbb    al,dh
  4067fb:	ret    
  4067fc:	dec    ebp
  4067fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067fe:	int3   
  4067ff:	mov    eax,0xca952591
  406804:	gs adc ch,0xbd
  406808:	xchg   DWORD PTR [edi],ebp
  40680a:	push   edi
  40680b:	aaa    
  40680c:	jl     0x40678e
  40680e:	add    BYTE PTR [esi-0x4c],dl
  406811:	out    dx,eax
  406812:	xor    eax,esi
  406814:	sub    ebp,DWORD PTR [esi-0x4]
  406817:	jmp    0x56ad:0x448e65a2
  40681e:	jae    0x406826
  406820:	push   edx
  406821:	cmp    DWORD PTR [edx+0x15],ebx
  406824:	lods   al,BYTE PTR ds:[esi]
  406825:	mov    DWORD PTR [eax],esi
  406827:	mov    eax,0x50a6dab3
  40682c:	xchg   edx,eax
  40682d:	arpl   WORD PTR [ecx],cx
  40682f:	pop    esi
  406830:	mov    edx,ebp
  406832:	dec    ebx
  406833:	sub    eax,0x9cd8d44f
  406838:	ins    BYTE PTR es:[edi],dx
  406839:	mov    edx,0xb50b95ca
  40683e:	dec    eax
  40683f:	push   es
  406840:	jecxz  0x406816
  406842:	shl    DWORD PTR [edx-0x2ab9b671],cl
  406848:	(bad)  
  406849:	popa   
  40684a:	outs   dx,DWORD PTR ds:[esi]
  40684b:	adc    DWORD PTR [edx+0x7b821345],esp
  406851:	pop    ecx
  406852:	mov    eax,ds:0x79d083e7
  406857:	aad    0x43
  406859:	add    al,0xf7
  40685b:	pop    es
  40685c:	icebp  
  40685d:	sub    edx,DWORD PTR [ecx+0x2d]
  406860:	cmc    
  406861:	stos   DWORD PTR es:[edi],eax
  406862:	sbb    BYTE PTR [ebx],al
  406864:	xchg   esp,eax
  406865:	nop
  406866:	inc    ebx
  406867:	adc    BYTE PTR [ebp+0x7c],bh
  40686a:	mov    edi,0x4eb3bde
  40686f:	lods   al,BYTE PTR ds:[esi]
  406870:	loope  0x4067fd
  406872:	pop    ebx
  406873:	xchg   DWORD PTR [ebx],eax
  406875:	loop   0x406819
  406877:	sbb    BYTE PTR [ebx],dl
  406879:	pop    ebp
  40687a:	ret    0x2b84
  40687d:	mov    ah,0xb8
  40687f:	daa    
  406880:	jecxz  0x4068c9
  406882:	pop    esi
  406883:	or     eax,ebp
  406885:	(bad)  
  406886:	into   
  406887:	dec    ecx
  406888:	inc    esi
  406889:	mov    ds:0x7081adb1,eax
  40688e:	sub    eax,0x2af2d45
  406893:	mov    bh,BYTE PTR [eax-0x22f8aa30]
  406899:	xchg   esp,eax
  40689a:	cmp    dh,BYTE PTR [ecx+esi*1]
  40689d:	sbb    eax,0xcb9abd2d
  4068a2:	mov    ah,0x13
  4068a4:	adc    al,0xe5
  4068a6:	pushf  
  4068a7:	stc    
  4068a8:	jb     0x406834
  4068aa:	xor    BYTE PTR [ecx-0x1837eff1],0x65
  4068b1:	inc    esp
  4068b2:	bound  ebx,QWORD PTR [ecx]
  4068b4:	dec    edx
  4068b5:	mov    edx,0xdba2c205
  4068ba:	jecxz  0x4068f1
  4068bc:	ret    0xd235
  4068bf:	xor    BYTE PTR [esi-0x1c63d02],bl
  4068c5:	cli    
  4068c6:	fadd   DWORD PTR [edi+eiz*8-0x50]
  4068ca:	scas   eax,DWORD PTR es:[edi]
  4068cb:	test   al,0x1b
  4068cd:	adc    eax,0xb0ea4131
  4068d2:	in     eax,dx
  4068d3:	dec    ebx
  4068d4:	adc    dh,bh
  4068d6:	sbb    eax,0x4ea7fabf
  4068db:	jp     0x406896
  4068dd:	lods   al,BYTE PTR ds:[esi]
  4068de:	aas    
  4068df:	xchg   ebp,eax
  4068e0:	add    eax,0x92ea61c8
  4068e5:	inc    edi
  4068e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e7:	mov    edi,ecx
  4068e9:	repnz mov edi,0xfdf242e7
  4068ef:	adc    DWORD PTR [eax+eiz*2-0x46a5d452],esp
  4068f6:	and    DWORD PTR [edx+0x1b84b760],eax
  4068fc:	sub    dl,BYTE PTR [ebx+eax*4-0xd]
  406900:	jp     0x406883
  406902:	mov    eax,0x7a0afcf5
  406907:	outs   dx,DWORD PTR ds:[esi]
  406908:	inc    esi
  406909:	ss sti 
  40690b:	add    ah,BYTE PTR [ebp+0x6a7f3d6a]
  406911:	xchg   edi,eax
  406912:	lahf   
  406913:	je     0x40691d
  406915:	fidivr DWORD PTR [ebx+edx*2]
  406918:	add    al,0xc2
  40691a:	pop    ds
  40691b:	xchg   ebp,eax
  40691c:	sub    edx,esi
  40691e:	push   esp
  40691f:	stc    
  406920:	daa    
  406921:	in     al,0x71
  406923:	push   edx
  406924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406925:	jmp    0xbefa:0xcf1953c2
  40692c:	std    
  40692d:	fsub   DWORD PTR [ecx+ebx*4-0x649628cb]
  406934:	pop    ecx
  406935:	mov    eax,ds:0xb530a806
  40693a:	fmul   QWORD PTR [ebp-0x1d]
  40693d:	and    eax,0x5a1ce831
  406942:	gs ret 0x79f
  406946:	(bad)  
  406948:	ins    BYTE PTR es:[edi],dx
  406949:	sbb    al,BYTE PTR [ecx+0x3f]
  40694c:	push   ds
  40694d:	pop    esp
  40694e:	or     BYTE PTR [esi-0x79],0x68
  406952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406953:	mov    ebp,0x6a17df3c
  406958:	jb     0x4068e6
  40695a:	mov    edi,0x6d817e4c
  40695f:	jne    0x406913
  406961:	outs   dx,DWORD PTR ds:[esi]
  406962:	jmp    0x93a2b6bd
  406967:	add    edx,esi
  406969:	adc    BYTE PTR [edx-0x27],bl
  40696c:	inc    edi
  40696d:	test   esi,0xcbbf4dfd
  406973:	or     al,0xb
  406975:	(bad)  [ecx]
  406977:	ss fwait
  406979:	out    0xd6,eax
  40697b:	sub    eax,0xe21bc254
  406980:	push   esi
  406981:	bound  ebp,QWORD PTR [ecx]
  406983:	scas   al,BYTE PTR es:[edi]
  406984:	push   0xe7e2d37b
  406989:	shr    DWORD PTR [esi-0x30aeb6a8],1
  40698f:	add    edi,0xffffffa7
  406992:	xor    esi,edi
  406994:	xchg   DWORD PTR [esi-0x43],edi
  406997:	pop    esi
  406998:	adc    eax,0x8642b20c
  40699d:	imul   esi,DWORD PTR [eax-0x63652c4d],0x48
  4069a4:	dec    ebx
  4069a5:	icebp  
  4069a6:	jmp    0x406a04
  4069a8:	pop    edi
  4069a9:	sar    BYTE PTR [ecx],cl
  4069ab:	aam    0x5d
  4069ad:	shl    DWORD PTR [esi-0x50],0x5e
  4069b1:	cwde   
  4069b2:	sbb    al,0x24
  4069b4:	int    0xf2
  4069b6:	mov    bl,0xb7
  4069b8:	sbb    ecx,DWORD PTR [edx+ecx*1-0x21]
  4069bc:	sub    edx,edi
  4069be:	arpl   WORD PTR [eax+ecx*4+0x5c],cx
  4069c2:	xchg   ecx,eax
  4069c3:	loope  0x406a0e
  4069c5:	mov    bh,0x78
  4069c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069c8:	(bad)  
  4069c9:	xchg   edx,eax
  4069ca:	in     eax,dx
  4069cb:	cs or  eax,0x3353f5e5
  4069d1:	and    BYTE PTR [esi+0x28],cl
  4069d4:	mov    esp,0x62c57d7
  4069d9:	dec    eax
  4069da:	dec    esi
  4069db:	and    al,0xa7
  4069dd:	and    eax,0x4fb3e68
  4069e2:	stos   BYTE PTR es:[edi],al
  4069e3:	and    DWORD PTR [edx+0x3304b459],ebx
  4069e9:	push   edx
  4069ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069eb:	mov    ebx,0xf2756406
  4069f0:	icebp  
  4069f1:	jnp    0x4069e7
  4069f3:	xor    dl,BYTE PTR [eax]
  4069f5:	cmc    
  4069f6:	cs lahf 
  4069f8:	mov    edx,DWORD PTR [ebx-0x1c6be97e]
  4069fe:	mov    eax,DWORD PTR [edi+edx*4]
  406a01:	xchg   ebp,eax
  406a02:	pusha  
  406a03:	loope  0x406a26
  406a05:	adc    BYTE PTR [esi],bh
  406a07:	and    ah,BYTE PTR [edx+eax*8+0x7]
  406a0b:	lahf   
  406a0c:	and    DWORD PTR [esi],esp
  406a0e:	lock cmp dl,BYTE PTR [ebx]
  406a11:	push   ecx
  406a12:	bound  ebp,QWORD PTR [edi+ebp*8]
  406a15:	fild   WORD PTR [esi]
  406a17:	fwait
  406a18:	inc    ecx
  406a19:	test   BYTE PTR [edi+edi*4],0xaf
  406a1d:	adc    BYTE PTR [ebp+0x19],0xc8
  406a21:	and    bl,BYTE PTR [edx+0x1b06e645]
  406a27:	out    0xe2,al
  406a29:	repnz (bad) 
  406a2b:	jl     0x4069da
  406a2d:	sub    eax,DWORD PTR [eax-0x14]
  406a30:	std    
  406a31:	cdq    
  406a32:	adc    ecx,DWORD PTR [edx-0x47d5a6d7]
  406a38:	xchg   ebx,eax
  406a39:	cmp    al,0xa
  406a3c:	and    eax,0xca9de622
  406a41:	pop    ebp
  406a42:	rcl    BYTE PTR [ebx+0x1c],0xbe
  406a46:	inc    edi
  406a47:	xchg   ebx,eax
  406a48:	cmc    
  406a49:	or     bl,BYTE PTR [edx+0x39567611]
  406a4f:	xchg   edx,eax
  406a50:	lods   eax,DWORD PTR ds:[esi]
  406a51:	add    ah,bh
  406a53:	sub    ebx,DWORD PTR [ecx-0x55]
  406a56:	xchg   ebp,eax
  406a57:	sub    eax,0xb0799d6c
  406a5c:	shl    DWORD PTR [esp+edx*4],1
  406a5f:	fwait
  406a60:	ins    DWORD PTR es:[edi],dx
  406a61:	sar    BYTE PTR [esp+edx*8+0x7651a5d6],1
  406a68:	int    0x9d
  406a6a:	xor    eax,0xb8a13b3e
  406a6f:	mov    ah,0x3e
  406a71:	mov    al,0x93
  406a73:	inc    ebp
  406a74:	or     al,0x2e
  406a76:	nop
  406a77:	lods   eax,DWORD PTR ds:[esi]
  406a78:	enter  0x9894,0xb7
  406a7c:	jmp    0xa734:0xc0030367
  406a83:	hlt    
  406a84:	shl    DWORD PTR [ebp+0x6a7e728f],0xe9
  406a8b:	push   eax
  406a8c:	ror    BYTE PTR [edi+0x1d8c5fb1],1
  406a92:	sbb    BYTE PTR [esi+0x3c],dl
  406a95:	ins    DWORD PTR es:[edi],dx
  406a96:	adc    bl,0xa8
  406a99:	xor    DWORD PTR [ebx-0x59],ebx
  406a9c:	jl     0x406b11
  406a9e:	cld    
  406a9f:	loope  0x406a4c
  406aa1:	into   
  406aa2:	push   es
  406aa3:	loop   0x406af9
  406aa5:	dec    esi
  406aa6:	adc    DWORD PTR [edi-0x21],edi
  406aa9:	imul   eax,edx,0x2323a7ad
  406aaf:	mov    DWORD PTR ds:0xa33b1905,ecx
  406ab5:	bound  ebx,QWORD PTR [ecx]
  406ab7:	loop   0x406b19
  406ab9:	and    DWORD PTR [ebx+0x4486a31],ebx
  406abf:	test   al,0xd1
  406ac1:	ret    
  406ac2:	and    dl,bl
  406ac4:	inc    eax
  406ac5:	inc    ebx
  406ac6:	jl     0x406b36
  406ac8:	ins    BYTE PTR es:[edi],dx
  406ac9:	xchg   ebx,eax
  406aca:	add    BYTE PTR [ebp+0x4023de77],ah
  406ad0:	cmp    al,cl
  406ad2:	lods   eax,DWORD PTR ds:[esi]
  406ad3:	mov    eax,0x7173ff53
  406ad8:	xchg   esi,eax
  406ad9:	mov    ds:0xb73250cf,al
  406ade:	gs dec eax
  406ae0:	jge    0x406ab8
  406ae2:	pop    ss
  406ae3:	dec    ebx
  406ae4:	xchg   DWORD PTR [ebx],ebx
  406ae6:	or     ebx,ecx
  406ae8:	aam    0x44
  406aea:	enter  0xbea4,0xfb
  406aee:	xchg   edi,eax
  406aef:	pusha  
  406af0:	xchg   ebx,eax
  406af1:	inc    ebx
  406af2:	mov    BYTE PTR [eax],ch
  406af4:	jge    0x406a8d
  406af6:	repz mov bh,0x56
  406af9:	aam    0xe6
  406afb:	ds sub cl,BYTE PTR ss:[ebp+0x5e]
  406b00:	sub    eax,0x52c2fb4f
  406b05:	mov    edi,0x706238c1
  406b0a:	in     al,0xe2
  406b0c:	loopne 0x406b4b
  406b0e:	stos   DWORD PTR es:[edi],eax
  406b0f:	jo     0x406b43
  406b11:	jb     0x406b48
  406b13:	and    al,0x94
  406b15:	mul    BYTE PTR [ecx]
  406b17:	pop    esp
  406b18:	mov    WORD PTR ds:0xea059e31,ss
  406b1e:	pop    es
  406b1f:	loop   0x406b42
  406b21:	jge    0x406b1c
  406b23:	mov    ecx,edx
  406b25:	aas    
  406b26:	mov    eax,0x487c9a09
  406b2b:	and    ebp,edx
  406b2d:	popa   
  406b2e:	cmp    BYTE PTR [esi+0x5],bh
  406b31:	jl     0x406b38
  406b33:	push   edi
  406b34:	aad    0xb1
  406b36:	rol    DWORD PTR [edi+0x74677b25],cl
  406b3c:	les    ecx,FWORD PTR [ecx+0x1f]
  406b3f:	fcomp  QWORD PTR [eax]
  406b41:	fidiv  DWORD PTR [ebx+ebx*4]
  406b44:	fcom   DWORD PTR [eax-0x5c58a69b]
  406b4a:	imul   ebx,DWORD PTR [ebx],0x6b34e0f8
  406b50:	in     eax,dx
  406b51:	mov    al,0x93
  406b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b54:	stc    
  406b55:	idiv   DWORD PTR ds:0x2b41312
  406b5b:	stos   DWORD PTR es:[edi],eax
  406b5c:	cmp    esi,DWORD PTR [esi+edx*4-0xaaa5e84]
  406b63:	mov    ah,0xd6
  406b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b66:	popf   
  406b67:	xor    bh,BYTE PTR [ecx-0x5b]
  406b6a:	cmp    DWORD PTR [ecx],esi
  406b6c:	mov    ebp,0x467a93b0
  406b71:	xchg   edi,eax
  406b72:	xchg   ebp,eax
  406b73:	pop    ebx
  406b74:	(bad)  
  406b75:	adc    al,0xe0
  406b77:	sbb    eax,DWORD PTR [edi+0x287e4b9b]
  406b7d:	ins    BYTE PTR es:[edi],dx
  406b7e:	retf   0x40e4
  406b81:	adc    DWORD PTR ss:[esi+0x79],ebx
  406b85:	add    al,0x5b
  406b87:	fisub  DWORD PTR ds:0x3e285dfa
  406b8d:	xchg   edi,eax
  406b8e:	mov    gs,WORD PTR [esi]
  406b90:	leave  
  406b91:	hlt    
  406b92:	or     bh,dl
  406b94:	adc    eax,0x75d6fbca
  406b99:	dec    ebx
  406b9a:	jb     0x406bac
  406b9c:	clc    
  406b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b9e:	jnp    0x406b5d
  406ba0:	push   0xffffffa6
  406ba2:	push   eax
  406ba3:	invd   
  406ba5:	fstp   DWORD PTR ds:0x789348a5
  406bab:	fimul  DWORD PTR [edx-0x4c]
  406bae:	mov    eax,ds:0x1beb0e22
  406bb3:	jmp    0x406c0b
  406bb5:	loope  0x406b47
  406bb7:	pop    es
  406bb8:	in     al,dx
  406bb9:	aad    0x6
  406bbb:	out    0x97,al
  406bbd:	push   ecx
  406bbe:	cmp    DWORD PTR [edx+0x8],ebx
  406bc1:	stos   DWORD PTR es:[edi],eax
  406bc2:	cmp    eax,0xd13b22dd
  406bc7:	xchg   edi,eax
  406bc8:	jge    0x406c09
  406bca:	and    eax,0x5a4991a7
  406bcf:	lods   eax,DWORD PTR ds:[esi]
  406bd0:	mov    ebp,0x854a4320
  406bd5:	stc    
  406bd6:	adc    DWORD PTR [ebx+0x41],edi
  406bd9:	outs   dx,BYTE PTR ds:[esi]
  406bda:	(bad)  
  406bdb:	out    dx,al
  406bdc:	test   al,0xb1
  406bde:	div    dl
  406be0:	adc    ch,BYTE PTR [eax-0x3d07252f]
  406be6:	imul   edx,DWORD PTR [edx+edi*2+0x6e],0x27
  406beb:	jle    0x406c25
  406bed:	mov    ebx,0x43578654
  406bf2:	and    al,0x81
  406bf4:	xor    esi,ebp
  406bf6:	daa    
  406bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bf8:	adc    BYTE PTR [ebx+0x601b600b],0x3e
  406bff:	jbe    0x406bed
  406c01:	test   BYTE PTR ss:[edi-0x4],dh
  406c05:	sub    edi,edi
  406c07:	jbe    0x406bf3
  406c09:	sub    eax,0x5e6fe61c
  406c0e:	xchg   ebp,eax
  406c0f:	and    DWORD PTR [esi+0x41],ebp
  406c12:	shl    BYTE PTR [ebx-0x34],1
  406c15:	mov    WORD PTR ds:[esi-0x24],es
  406c19:	scas   eax,DWORD PTR es:[edi]
  406c1a:	jne    0x406bef
  406c1c:	push   0xffffff95
  406c1e:	push   0xb6485b6e
  406c23:	add    BYTE PTR [ebx],ah
  406c25:	cmp    DWORD PTR [edx],ebx
  406c27:	and    ebx,DWORD PTR [edx+0x68d91fcd]
  406c2d:	arpl   WORD PTR [edi+0xdcc5b3],bp
  406c33:	lods   eax,DWORD PTR ds:[esi]
  406c34:	add    edi,DWORD PTR ds:0x41fd3816
  406c3a:	ret    
  406c3b:	push   esp
  406c3c:	xchg   esi,ebx
  406c3e:	aad    0xb9
  406c40:	(bad)  
  406c41:	out    dx,eax
  406c42:	mov    esi,0x21550405
  406c47:	pop    ecx
  406c48:	or     eax,edi
  406c4a:	xor    al,0xae
  406c4c:	jmp    0x406bf4
  406c4e:	fwait
  406c4f:	aam    0x9a
  406c51:	(bad)  
  406c52:	in     al,0x75
  406c54:	popa   
  406c55:	jno    0x406c67
  406c57:	adc    bl,ch
  406c59:	mov    edx,0xe8455fef
  406c5e:	mov    esp,0xf5e66185
  406c63:	xchg   esi,eax
  406c64:	pop    ss
  406c65:	jge    0x406c52
  406c67:	dec    eax
  406c68:	out    0xe5,eax
  406c6a:	js     0x406c4b
  406c6c:	jp     0x406bfa
  406c6e:	fs inc eax
  406c70:	stos   BYTE PTR es:[edi],al
  406c71:	imul   ecx,DWORD PTR [edx+eiz*4+0x77369b3c],0x1b1527df
  406c7c:	jge    0x406c2e
  406c7e:	cmp    eax,0xedf0190f
  406c83:	sar    DWORD PTR [ebp+0x29],cl
  406c86:	ja     0x406c35
  406c88:	ficom  WORD PTR ds:0xe4cbb2eb
  406c8e:	sub    bl,bh
  406c90:	int    0xbb
  406c92:	ss test al,0x42
  406c95:	sbb    DWORD PTR [edx+0x4d],0xd068c89a
  406c9c:	adc    ch,bl
  406c9e:	imul   eax,DWORD PTR [ecx],0xca1a3625
  406ca4:	lahf   
  406ca5:	lods   eax,DWORD PTR ds:[esi]
  406ca6:	jge    0x406cb8
  406ca8:	sbb    eax,0x9a6b51a9
  406cad:	add    cl,BYTE PTR [edx]
  406caf:	fs cld 
  406cb1:	loop   0x406c51
  406cb3:	je     0x406d2a
  406cb5:	and    eax,0xb6d5707d
  406cba:	mov    bl,BYTE PTR [ebp-0x10]
  406cbd:	mov    bh,0x84
  406cbf:	sbb    BYTE PTR [edi],dl
  406cc1:	fmul   QWORD PTR [edi]
  406cc3:	loope  0x406d08
  406cc5:	or     cl,BYTE PTR [esi]
  406cc7:	sahf   
  406cc8:	addr16 fwait
  406cca:	inc    ecx
  406ccb:	jmp    0x406cb5
  406ccd:	outs   dx,DWORD PTR ds:[esi]
  406cce:	call   ecx
  406cd0:	out    0xf2,eax
  406cd2:	dec    esp
  406cd3:	mov    edx,0x651748cd
  406cd8:	fstp   TBYTE PTR [eax+0x476579f2]
  406cde:	daa    
  406cdf:	adc    eax,0xe75b2014
  406ce4:	seto   BYTE PTR [ebp-0x5edebef4]
  406ceb:	pop    DWORD PTR [ebx-0x7051bb92]
  406cf1:	outs   dx,BYTE PTR ds:[esi]
  406cf2:	push   eax
  406cf3:	jae    0x406ce9
  406cf5:	aad    0x15
  406cf7:	mov    eax,ds:0xf5a9ff36
  406cfc:	iret   
  406cfd:	xor    edi,DWORD PTR [edi]
  406cff:	add    al,0x79
  406d01:	sbb    al,0xd0
  406d03:	pop    esp
  406d04:	pop    ebx
  406d05:	ins    BYTE PTR es:[edi],dx
  406d06:	call   0xc131:0x5aa7c807
  406d0d:	xor    al,0x7
  406d0f:	pop    ebp
  406d10:	sub    DWORD PTR [edx],esi
  406d12:	xor    al,0xce
  406d14:	or     BYTE PTR [ebx],0xa8
  406d17:	cmp    eax,0x462e1fec
  406d1c:	mov    ds:0xb97f5228,eax
  406d21:	mov    eax,0xa933b613
  406d26:	icebp  
  406d27:	xor    al,0x15
  406d29:	jmp    0xde38:0xf8188848
  406d30:	lds    edx,FWORD PTR [esi-0x511d55f5]
  406d36:	nop
  406d37:	push   ds
  406d38:	lea    edi,ds:0xc4d84640
  406d3e:	adc    al,0xe7
  406d40:	add    esp,esi
  406d42:	mov    al,ds:0xb4393eff
  406d47:	sub    DWORD PTR [esi+0x4d5a2881],esi
  406d4d:	or     al,0xa4
  406d4f:	sbb    DWORD PTR [ebx],esi
  406d51:	ss push 0xb68475cc
  406d57:	cli    
  406d58:	add    eax,0x72680efd
  406d5d:	add    ax,0x8630
  406d61:	adc    ecx,DWORD PTR [edi]
  406d63:	mov    ds:0x32468f29,eax
  406d68:	mov    ds:0x3f8f81f3,eax
  406d6d:	fsubr  DWORD PTR [eax-0x63]
  406d70:	call   0xcbe0:0x17ce3391
  406d77:	cmp    DWORD PTR [edi+0x4a],ecx
  406d7a:	mov    BYTE PTR [edi-0xd23a95d],0xd3
  406d81:	cli    
  406d82:	gs scas al,BYTE PTR es:[edi]
  406d84:	adc    BYTE PTR [edx+0x1ba4d866],bh
  406d8a:	pop    esi
  406d8b:	pop    ss
  406d8c:	dec    eax
  406d8d:	retf   0x110b
  406d90:	cmp    ebx,DWORD PTR [ecx+0x7c]
  406d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d94:	stc    
  406d95:	sbb    dh,0x4f
  406d98:	adc    esp,DWORD PTR ds:0xd2e3953e
  406d9e:	or     BYTE PTR [esi],dl
  406da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406da1:	push   ds
  406da2:	pop    edx
  406da3:	pop    es
  406da4:	sbb    ah,BYTE PTR [esi+eax*8-0x2b]
  406da8:	mov    ds:0x4c0a6e29,eax
  406dad:	lahf   
  406dae:	push   es
  406daf:	out    dx,al
  406db0:	mov    esi,0x4520f1bb
  406db5:	in     al,0x5a
  406db7:	add    BYTE PTR ds:0x46763a65,al
  406dbd:	jmp    0x3c74:0x99eb271e
  406dc4:	push   0x33
  406dc6:	sbb    eax,0xe5ec17c7
  406dcb:	imul   ebp,DWORD PTR [eax-0x79],0xffffff83
  406dcf:	aas    
  406dd0:	xchg   ecx,eax
  406dd1:	dec    edi
  406dd2:	cmp    al,0xde
  406dd4:	mov    al,0xd3
  406dd6:	jecxz  0x406e4d
  406dd8:	fld    st(6)
  406dda:	add    ebp,DWORD PTR [ebx]
  406ddc:	mov    ah,0xb8
  406dde:	int    0xbb
  406de0:	mov    ebp,0xef416018
  406de5:	push   ss
  406de6:	dec    edi
  406de7:	adc    bl,BYTE PTR [esi-0x4e]
  406dea:	rol    ah,1
  406dec:	(bad)  
  406ded:	shl    DWORD PTR [edx+0x56d60754],1
  406df3:	inc    edi
  406df4:	repnz pop eax
  406df6:	gs test eax,0x1d7a5a78
  406dfc:	and    DWORD PTR [ecx],0x6ba7f1ed
  406e02:	dec    ebp
  406e03:	xor    eax,0xedea786e
  406e08:	enter  0xf3d6,0x9d
  406e0c:	add    ecx,DWORD PTR [ebx+0x7ab83424]
  406e12:	pop    eax
  406e13:	into   
  406e14:	fwait
  406e15:	mov    edx,0x8b3fa5ef
  406e1a:	rcr    DWORD PTR [ecx-0x3f213089],1
  406e20:	imul   esp,edi,0xffffffbc
  406e23:	add    DWORD PTR ds:0xbb2fbad9,eax
  406e29:	mov    bl,0xf1
  406e2b:	add    BYTE PTR [ecx+eax*8-0x5d],0x87
  406e30:	pusha  
  406e31:	sbb    bh,BYTE PTR [ebx-0x13]
  406e34:	(bad)  
  406e35:	mov    al,ds:0x9e757a99
  406e3a:	loopne 0x406df1
  406e3c:	xor    dl,BYTE PTR [esi+ebx*1+0x60d70092]
  406e43:	popa   
  406e44:	pusha  
  406e45:	div    BYTE PTR [ecx+0x2552f497]
  406e4b:	add    eax,0xc7b8e4b2
  406e50:	jle    0x406e7c
  406e52:	call   0x9254f3c1
  406e57:	icebp  
  406e58:	or     al,0x4
  406e5a:	sub    cl,BYTE PTR [edi+0x71aa7a60]
  406e60:	cmc    
  406e61:	pushf  
  406e62:	or     edi,ecx
  406e64:	cli    
  406e65:	and    BYTE PTR [esi],0xc9
  406e68:	out    0x2c,al
  406e6a:	dec    ebp
  406e6b:	jno    0x406ed5
  406e6d:	test   al,0x3
  406e6f:	pop    edi
  406e70:	xchg   edx,eax
  406e71:	lods   al,BYTE PTR ds:[esi]
  406e72:	xor    ch,BYTE PTR [edi+0x64cea184]
  406e78:	jo     0x406e9f
  406e7a:	fsubr  QWORD PTR [ecx]
  406e7c:	mov    ss,eax
  406e7e:	nop
  406e7f:	imul   ebp,DWORD PTR [eax+0x149b3a2],0xa4bea732
  406e89:	and    BYTE PTR [eax+0x6d61be2a],bh
  406e8f:	popa   
  406e90:	(bad)  
  406e91:	iret   
  406e92:	mov    esi,0x1fe33d37
  406e97:	and    ch,BYTE PTR [edx+0xa]
  406e9a:	std    
  406e9b:	shl    ah,1
  406e9d:	stos   BYTE PTR es:[edi],al
  406e9e:	or     bh,BYTE PTR [edi-0x16]
  406ea1:	adc    dh,cl
  406ea3:	inc    eax
  406ea4:	(bad)  
  406ea5:	js     0x406e2a
  406ea7:	push   ds
  406ea8:	out    dx,eax
  406ea9:	push   edi
  406eaa:	add    dh,BYTE PTR ds:0x2fe5880a
  406eb0:	fst    DWORD PTR [edi-0x3a836073]
  406eb6:	inc    ebp
  406eb7:	fisub  WORD PTR [edi+edx*4]
  406eba:	js     0x406e5e
  406ebc:	scas   al,BYTE PTR es:[edi]
  406ebd:	in     eax,dx
  406ebe:	sbb    BYTE PTR [ecx-0x74],dl
  406ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ec2:	sub    eax,0x6c
  406ec5:	mov    cl,bh
  406ec7:	ss dec edx
  406ec9:	ins    BYTE PTR es:[edi],dx
  406eca:	js     0x406e8f
  406ecc:	ins    BYTE PTR es:[edi],dx
  406ecd:	cs or  al,0xae
  406ed0:	je     0x406e67
  406ed2:	jbe    0x406e7d
  406ed4:	stc    
  406ed5:	ret    
  406ed6:	dec    eax
  406ed7:	pop    eax
  406ed8:	dec    eax
  406ed9:	sahf   
  406eda:	outs   dx,BYTE PTR ds:[esi]
  406edb:	adc    bl,BYTE PTR [edx+0x69916e5d]
  406ee1:	mov    ebx,DWORD PTR [ebp-0x72]
  406ee4:	add    DWORD PTR [ecx],edx
  406ee6:	inc    esi
  406ee7:	push   edi
  406ee8:	add    cl,bl
  406eea:	mov    cl,0x1f
  406eec:	jae    0x406f09
  406eee:	inc    eax
  406eef:	mov    BYTE PTR [ebx],dl
  406ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ef3:	inc    ebp
  406ef4:	sbb    eax,0xbd53b475
  406ef9:	aam    0x21
  406efb:	mov    ?,ebp
  406efd:	push   ds
  406efe:	adc    bl,dh
  406f00:	daa    
  406f01:	push   ss
  406f02:	div    BYTE PTR [eax-0x39]
  406f05:	(bad)  
  406f06:	(bad)  [edi]
  406f08:	sbb    al,0xaf
  406f0a:	jae    0x406ee3
  406f0c:	pop    ss
  406f0d:	xlat   BYTE PTR ds:[ebx]
  406f0e:	dec    ebx
  406f0f:	arpl   WORD PTR [ecx-0x4d],bp
  406f12:	cli    
  406f13:	pop    ds
  406f14:	jbe    0x406ea8
  406f16:	pop    ebx
  406f17:	out    0x37,eax
  406f19:	les    esp,FWORD PTR [edi]
  406f1b:	fstp   QWORD PTR [eax+0x31]
  406f1e:	xchg   esp,eax
  406f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f20:	cwde   
  406f21:	scas   al,BYTE PTR es:[edi]
  406f22:	int    0xda
  406f24:	sbb    ah,BYTE PTR [eax-0x2f3ca00d]
  406f2a:	ja     0x406f46
  406f2c:	aad    0x8f
  406f2e:	sub    eax,0x7b7505f2
  406f33:	repz add al,0xb6
  406f36:	js     0x406ed3
  406f38:	cld    
  406f39:	and    ch,BYTE PTR [eax+0x16]
  406f3c:	push   ebp
  406f3d:	pop    ds
  406f3e:	and    ch,bh
  406f40:	in     al,dx
  406f41:	enter  0xf8c6,0x7e
  406f45:	test   BYTE PTR [ecx],bl
  406f47:	icebp  
  406f48:	inc    edi
  406f49:	add    BYTE PTR [edi-0x7e],0xd1
  406f4d:	adc    edx,DWORD PTR [esp+esi*4+0x1e0da41a]
  406f54:	jmp    0x51d7:0xbe021593
  406f5b:	add    DWORD PTR fs:[ebp-0x56],0x7d
  406f60:	je     0x406f0c
  406f62:	jnp    0x406fd2
  406f64:	arpl   WORD PTR [ecx],di
  406f66:	scas   al,BYTE PTR es:[edi]
  406f67:	jno    0x406f53
  406f69:	ds stos DWORD PTR es:[edi],eax
  406f6b:	mov    edi,0xe92bee1a
  406f70:	add    ebx,DWORD PTR [eax-0x5cc001eb]
  406f76:	adc    DWORD PTR [ebx-0x6c],eax
  406f79:	stos   BYTE PTR es:[edi],al
  406f7a:	mov    ebp,0x241ebddd
  406f7f:	scas   eax,DWORD PTR es:[edi]
  406f80:	inc    edi
  406f81:	and    eax,0x970a680e
  406f86:	pop    es
  406f87:	xor    eax,0xb33c6464
  406f8c:	xchg   eax,edi
  406f8e:	xor    BYTE PTR [esi+esi*4],cl
  406f91:	test   eax,0x7f9172ac
  406f96:	mov    al,0xd0
  406f98:	xor    edi,ecx
  406f9a:	sar    DWORD PTR [edx-0x500e3ff1],1
  406fa0:	(bad)  
  406fa1:	repz inc eax
  406fa3:	push   esp
  406fa4:	mov    ebx,0x42587aa5
  406fa9:	(bad)  
  406fab:	outs   dx,DWORD PTR ds:[esi]
  406fac:	aaa    
  406fad:	sti    
  406fae:	cs cmp al,0xc9
  406fb1:	cmp    al,0x7b
  406fb3:	cmp    eax,0x450465f8
  406fb8:	ins    DWORD PTR es:[edi],dx
  406fb9:	and    ebx,DWORD PTR [edx+0xda4fe6c]
  406fbf:	add    edi,eax
  406fc1:	cmp    BYTE PTR [ecx+0x448a9147],ch
  406fc7:	repnz ror cl,cl
  406fca:	jp     0x407004
  406fcc:	test   BYTE PTR [eax-0x27],ah
  406fcf:	inc    esi
  406fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fd1:	jae    0x406f77
  406fd3:	ja     0x406fad
  406fd5:	lods   al,BYTE PTR ds:[esi]
  406fd6:	xchg   edi,eax
  406fd7:	data16 ds (bad) 
  406fda:	std    
  406fdb:	sub    DWORD PTR [ecx-0x100512f5],0xffffff91
  406fe2:	in     al,0x68
  406fe4:	adc    edi,edx
  406fe6:	inc    esp
  406fe7:	addr16 test ah,bh
  406fea:	ins    BYTE PTR es:[edi],dx
  406feb:	cdq    
  406fec:	mov    al,0xf8
  406fee:	jmp    0x5680d069
  406ff3:	lods   eax,DWORD PTR ds:[esi]
  406ff4:	addr16 xchg esp,esi
  406ff7:	and    BYTE PTR [ecx+esi*4+0x66],ah
  406ffb:	mov    ?,WORD PTR [ecx+edi*1]
  406ffe:	jp     0x406f82
  407000:	dec    DWORD PTR fs:[eax-0x5ddd62e1]
  407007:	adc    eax,DWORD PTR [ecx+0x5306ec6e]
  40700d:	jle    0x407038
  40700f:	bound  edx,QWORD PTR fs:[esi]
  407012:	jns    0x406f98
  407014:	add    DWORD PTR [ebx+edi*8-0x75502362],ebp
  40701b:	cli    
  40701c:	pand   mm0,QWORD PTR [eax]
  40701f:	fimul  DWORD PTR ds:0xac9bf4ff
  407025:	jnp    0x406fb3
  407027:	jo     0x4070a3
  407029:	dec    ebp
  40702a:	cwde   
  40702b:	xor    bl,BYTE PTR [ecx+0x5a60ff66]
  407031:	push   ebp
  407032:	cmp    DWORD PTR [eax-0x4e7dc1da],0xffffff90
  407039:	std    
  40703a:	test   al,0x13
  40703c:	rcl    BYTE PTR [edx-0x3],cl
  40703f:	inc    ebp
  407040:	je     0x4070a2
  407042:	stos   DWORD PTR es:[edi],eax
  407043:	rcr    ecx,1
  407045:	push   esi
  407046:	scas   eax,DWORD PTR es:[edi]
  407047:	inc    ecx
  407048:	adc    DWORD PTR [ecx],edi
  40704a:	retf   
  40704b:	push   eax
  40704c:	jl     0x4070b3
  40704e:	and    eax,DWORD PTR [ebp+0x2d6560f3]
  407054:	and    DWORD PTR [edx-0x34],0x5953288a
  40705b:	jmp    0xa5d2909b
  407060:	inc    esp
  407061:	stc    
  407062:	cwde   
  407063:	fwait
  407064:	mul    BYTE PTR [esi]
  407066:	popa   
  407067:	fbld   TBYTE PTR [edi+edi*4+0x2c]
  40706b:	dec    edi
  40706c:	or     ebp,ebp
  40706e:	lds    ebp,FWORD PTR [edi]
  407070:	imul   ebp,DWORD PTR [ecx+0x20fd433a],0x55
  407077:	and    BYTE PTR [ebx],ch
  407079:	aas    
  40707a:	outs   dx,BYTE PTR ds:[esi]
  40707b:	add    al,0x18
  40707d:	cmp    DWORD PTR [ebp+eax*8-0x737cdb52],eax
  407084:	sbb    dh,BYTE PTR [ecx+0x4701af86]
  40708a:	xchg   BYTE PTR [esi+0x44],cl
  40708d:	ss push cs
  40708f:	mov    dl,0xc1
  407091:	mov    esp,0x5e3a0d37
  407096:	jnp    0x4070ea
  407098:	scas   al,BYTE PTR es:[edi]
  407099:	fdiv   QWORD PTR [ebp+0x2e]
  40709c:	sbb    DWORD PTR [ebp-0x29],eax
  40709f:	cmc    
  4070a0:	inc    ebp
  4070a1:	mov    cl,0x6
  4070a3:	fs push edi
  4070a5:	cmp    ebp,DWORD PTR [edx]
  4070a7:	into   
  4070a8:	and    BYTE PTR [ebx],0xb3
  4070ab:	mov    al,ds:0xa2eb5691
  4070b0:	mov    WORD PTR [esi],gs
  4070b2:	call   0xddc7:0x108f1e9c
  4070b9:	(bad)  
  4070ba:	sub    ch,bl
  4070bc:	clc    
  4070bd:	xchg   ebp,eax
  4070be:	sbb    BYTE PTR ds:0xbab460e2,dl
  4070c4:	pop    esi
  4070c5:	adc    esi,DWORD PTR [eax]
  4070c7:	daa    
  4070c8:	enter  0x7bec,0xcb
  4070cc:	clc    
  4070cd:	daa    
  4070ce:	lock std 
  4070d0:	cmp    BYTE PTR [esi-0x6f],dh
  4070d3:	bound  ebp,QWORD PTR [edi+0x18]
  4070d6:	das    
  4070d7:	push   0xfffffff6
  4070d9:	lahf   
  4070da:	outs   dx,DWORD PTR ds:[esi]
  4070db:	fs push 0xbb52eb41
  4070e1:	mov    ebp,0xeab17945
  4070e6:	sub    al,0x62
  4070e8:	jl     0x40714b
  4070ea:	adc    al,0x2f
  4070ec:	pop    es
  4070ed:	adc    ecx,DWORD PTR [edi+0x50]
  4070f0:	scas   eax,DWORD PTR es:[edi]
  4070f1:	shr    DWORD PTR [ecx],0x5a
  4070f4:	imul   esp,DWORD PTR [ebp+0x673b8868],0x89dff777
  4070fe:	mov    eax,ds:0x474b57c9
  407103:	lea    eax,[ecx]
  407105:	xchg   ebx,eax
  407106:	arpl   cx,sp
  407108:	jne    0x407131
  40710a:	jg     0x40718a
  40710c:	xchg   DWORD PTR [esi],ecx
  40710e:	or     eax,0x48db0ef5
  407113:	outs   dx,DWORD PTR ds:[esi]
  407114:	jp     0x4070dd
  407116:	les    esi,FWORD PTR [ecx-0x27]
  407119:	mov    bh,0x68
  40711b:	jno    0x4070a9
  40711d:	mov    bl,0xfa
  40711f:	mov    edx,0xcdc1450
  407124:	dec    esp
  407125:	sbb    cl,BYTE PTR [edx+0x7eb28d5a]
  40712b:	mov    edi,0x6d980ffa
  407130:	xor    BYTE PTR [ebx],cl
  407132:	jb     0x40718b
  407134:	(bad)  
  407135:	call   0xc7e1fdf9
  40713a:	(bad)
  40713d:	popf   
  40713e:	je     0x40715a
  407140:	mov    esi,0xec6dd814
  407145:	test   al,0xe9
  407147:	int    0xb6
  407149:	sub    DWORD PTR [edx+0x5af17e45],edi
  40714f:	(bad)  
  407150:	jns    0x4071cf
  407152:	je     0x4071bb
  407154:	test   al,0x5
  407156:	xchg   ebp,eax
  407157:	retf   0xb2e0
  40715a:	addr16 (bad) 
  40715c:	ds cmc 
  40715e:	xchg   BYTE PTR [ebp-0x59],dl
  407161:	inc    ebp
  407162:	and    al,0x10
  407164:	fs (bad) 
  407166:	aam    0x78
  407168:	sbb    edi,ebp
  40716a:	mov    ebp,edi
  40716c:	aas    
  40716d:	xchg   ecx,eax
  40716e:	dec    ebp
  40716f:	jecxz  0x4071eb
  407171:	and    ah,BYTE PTR [ebx-0x44e5ae5c]
  407177:	push   esi
  407178:	or     eax,0x6504a545
  40717d:	sub    DWORD PTR [edi+0x1b],edx
  407180:	scas   al,BYTE PTR es:[edi]
  407181:	rol    BYTE PTR ds:0x451813cc,1
  407187:	push   esp
  407188:	mov    ds,WORD PTR [edx+0x756c05be]
  40718e:	inc    esp
  40718f:	rcl    ah,0x9
  407192:	push   cs
  407193:	ins    DWORD PTR es:[edi],dx
  407194:	pop    esp
  407195:	mov    ?,ebx
  407197:	push   0x5201d716
  40719c:	mov    bl,0xb
  40719e:	int    0x33
  4071a0:	mov    al,0xa1
  4071a2:	xchg   ebp,eax
  4071a3:	test   eax,0xe1378497
  4071a8:	ja     0x4071d8
  4071aa:	sbb    esi,DWORD PTR [edx-0x26]
  4071ad:	mov    bl,BYTE PTR [eax+0x5ccfa97a]
  4071b3:	pop    ebp
  4071b4:	dec    esp
  4071b5:	popa   
  4071b6:	inc    esp
  4071b7:	jo     0x4071a3
  4071b9:	sbb    al,BYTE PTR [edi-0xc]
  4071bc:	or     al,0x97
  4071be:	xchg   BYTE PTR [esi+0x76d26ae0],ah
  4071c4:	or     eax,0x61635c62
  4071c9:	aas    
  4071ca:	imul   DWORD PTR [ecx]
  4071cc:	sub    BYTE PTR [esp+eax*2],al
  4071cf:	test   eax,0xf265f86a
  4071d4:	ins    BYTE PTR es:[edi],dx
  4071d5:	mov    eax,0xbbb8259d
  4071da:	out    dx,eax
  4071db:	push   cs
  4071dc:	add    al,0x5e
  4071de:	xor    al,0xa3
  4071e0:	hlt    
  4071e1:	mov    edx,0x5323f277
  4071e6:	test   al,0xc6
  4071e8:	test   DWORD PTR [edi],eax
  4071ea:	dec    edi
  4071eb:	and    DWORD PTR [edx+ecx*2-0x28f5dc52],ebp
  4071f2:	pop    edi
  4071f3:	jmp    0xd1ee:0xedd7d7d2
  4071fa:	sbb    edx,esp
  4071fc:	lea    esp,[ebp+0x24]
  4071ff:	pop    esp
  407200:	retf   0x773c
  407203:	lods   eax,DWORD PTR ds:[esi]
  407204:	fidivr DWORD PTR [edx]
  407206:	xchg   esp,eax
  407207:	dec    ebp
  407208:	pop    DWORD PTR [eax]
  40720a:	mov    ds:0x50d0e900,eax
  40720f:	adc    BYTE PTR [edi+0x3c],0xf6
  407213:	dec    ecx
  407214:	mov    al,ds:0x4dd36dde
  407219:	scas   eax,DWORD PTR es:[edi]
  40721a:	(bad)  
  40721b:	es jp  0x40728b
  40721e:	inc    edx
  40721f:	jno    0x40724c
  407221:	out    dx,eax
  407222:	iret   
  407223:	xchg   BYTE PTR [ebx+0x73aa0bd2],bl
  407229:	rcl    DWORD PTR [eax+0x72],cl
  40722c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40722d:	pop    ds
  40722e:	aas    
  40722f:	std    
  407230:	lods   al,BYTE PTR ds:[esi]
  407231:	dec    edx
  407232:	sahf   
  407233:	xchg   edx,eax
  407234:	sub    DWORD PTR [edi+0x48],esi
  407237:	cwde   
  407238:	mov    cl,0x5b
  40723a:	lock xchg edx,eax
  40723c:	cmp    edx,DWORD PTR [ecx-0x554353c3]
  407242:	xchg   edi,eax
  407243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407244:	sub    al,0x50
  407246:	add    al,0x38
  407248:	dec    edi
  407249:	adc    DWORD PTR [ebp-0x37],ebx
  40724c:	fs iret 
  40724e:	push   edi
  40724f:	mov    dh,0xe4
  407251:	jge    0x4071ea
  407253:	adc    al,0xeb
  407255:	test   eax,0x8ed1e7bb
  40725a:	(bad)  
  40725b:	mov    ebx,0x9e35f9c9
  407260:	test   al,0xb4
  407262:	pop    edx
  407263:	cld    
  407264:	adc    ebx,DWORD PTR ds:[ecx+0x58]
  407268:	out    dx,al
  407269:	aad    0xd5
  40726b:	ja     0x4072ce
  40726d:	mov    dl,BYTE PTR [edi+0x74]
  407270:	clc    
  407271:	call   0xac9c580c
  407276:	xchg   edi,eax
  407277:	jo     0x407232
  407279:	test   eax,0xe559437d
  40727e:	xor    dl,BYTE PTR [ebp+0xbdab0a0]
  407284:	repnz lock fild QWORD PTR [ecx]
  407288:	xchg   BYTE PTR [ebp+0x52ea7cf9],bh
  40728e:	lea    edx,[eax-0x44230408]
  407294:	xor    al,0x1a
  407296:	lods   al,BYTE PTR ds:[esi]
  407297:	call   0x1cc1787a
  40729c:	fwait
  40729d:	adc    esi,DWORD PTR [eax]
  40729f:	push   ebp
  4072a0:	dec    eax
  4072a1:	scas   al,BYTE PTR es:[edi]
  4072a2:	pop    es
  4072a3:	aam    0xd1
  4072a5:	jae    0x407278
  4072a7:	push   edx
  4072a8:	imul   ebp,DWORD PTR [edx],0x7b38dfd9
  4072ae:	(bad)  
  4072af:	(bad)  
  4072b0:	fld    DWORD PTR [esp+ebp*4]
  4072b3:	jecxz  0x407248
  4072b5:	xchg   ebx,eax
  4072b6:	out    dx,eax
  4072b7:	lds    esp,FWORD PTR [ebp-0x7b54570d]
  4072bd:	ror    DWORD PTR [edi+0xcc451aa],cl
  4072c3:	jp     0x407261
  4072c5:	push   cs
  4072c6:	out    0x7b,al
  4072c8:	pop    ebx
  4072c9:	mov    dh,0x51
  4072cb:	pop    ebp
  4072cc:	push   edi
  4072cd:	inc    esp
  4072ce:	xor    al,0xb1
  4072d0:	xchg   esp,eax
  4072d1:	shl    BYTE PTR [esi+0x6c],cl
  4072d4:	jmp    0xb2df:0xe5c30fc3
  4072db:	pusha  
  4072dc:	repz push cs
  4072de:	dec    ebx
  4072df:	jle    0x4072cf
  4072e1:	xor    ecx,ebx
  4072e3:	or     ecx,esp
  4072e5:	jecxz  0x407289
  4072e7:	push   ds
  4072e8:	ror    dh,0x4b
  4072eb:	push   esi
  4072ec:	sub    al,0x9d
  4072ee:	ins    BYTE PTR es:[edi],dx
  4072ef:	lds    eax,FWORD PTR [eax-0x71]
  4072f2:	xchg   ebx,eax
  4072f3:	adc    al,0xcc
  4072f5:	xlat   BYTE PTR ds:[ebx]
  4072f6:	cmp    BYTE PTR [ecx],al
  4072f8:	sbb    dh,0xd8
  4072fb:	xor    eax,0x125396e5
  407300:	fistp  WORD PTR [ebx+0xb448d8b]
  407306:	gs cdq 
  407308:	adc    al,0x9f
  40730a:	dec    eax
  40730b:	aaa    
  40730c:	in     al,dx
  40730d:	out    dx,al
  40730e:	mul    DWORD PTR [edx+0x23b1fb5f]
  407314:	aas    
  407315:	dec    esp
  407316:	and    edi,DWORD PTR [ebp+0x5144a30]
  40731c:	lds    edx,FWORD PTR [ebp-0x52b2f47b]
  407322:	or     esp,esi
  407324:	push   edi
  407325:	std    
  407326:	xor    BYTE PTR ds:0x9c791f8c,cl
  40732c:	push   ss
  40732d:	in     al,0x73
  40732f:	fstp   QWORD PTR [esi]
  407331:	jmp    0x40739c
  407333:	inc    ecx
  407334:	outs   dx,DWORD PTR ds:[esi]
  407335:	pop    ds
  407336:	scas   al,BYTE PTR es:[edi]
  407337:	(bad)  
  407338:	ja     0x4072ec
  40733a:	lods   eax,DWORD PTR ds:[esi]
  40733b:	mov    cl,0x33
  40733d:	xchg   ebx,eax
  40733e:	cmp    al,0xe2
  407340:	mov    cl,0x38
  407342:	pop    ss
  407343:	shl    DWORD PTR [ecx-0x1c10b116],cl
  407349:	clc    
  40734a:	cmovno edx,DWORD PTR [eax]
  40734d:	cdq    
  40734e:	add    esp,DWORD PTR [ebx]
  407350:	sub    eax,0x75c82690
  407355:	add    BYTE PTR [ebp-0x21],bh
  407358:	xchg   edx,eax
  407359:	and    cl,BYTE PTR [ebx]
  40735b:	adc    BYTE PTR [esi-0xeb5f3c2],0x14
  407362:	and    al,0x64
  407364:	push   ss
  407365:	icebp  
  407366:	jp     0x4073c2
  407368:	add    al,0x2e
  40736a:	inc    edx
  40736b:	xchg   esi,eax
  40736c:	lahf   
  40736d:	call   0x8b5b1abe
  407372:	std    
  407373:	sbb    eax,0xc9f72338
  407378:	aam    0x73
  40737a:	and    BYTE PTR [ecx+0x4b],ah
  40737d:	js     0x4073ce
  40737f:	mov    ah,0x33
  407381:	shl    DWORD PTR [edx+0x68274db6],cl
  407387:	push   esi
  407388:	mov    edi,0x514a0187
  40738d:	loopne 0x40734f
  40738f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407390:	rol    DWORD PTR [edx+0x54],cl
  407393:	ficomp WORD PTR [ecx+0x3d]
  407396:	push   esi
  407397:	sbb    eax,0x67398ba3
  40739c:	sbb    eax,0xdb609429
  4073a1:	test   al,0xd8
  4073a3:	loopne 0x4073cd
  4073a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073a6:	push   ecx
  4073a7:	cmp    BYTE PTR [eax+eiz*8-0x617fc64d],al
  4073ae:	mov    bh,0xa3
  4073b0:	push   ebx
  4073b1:	ficom  WORD PTR [ebp+0xc]
  4073b4:	dec    ebx
  4073b5:	inc    ebp
  4073b6:	cmp    al,0xab
  4073b8:	xchg   ecx,eax
  4073b9:	iret   
  4073ba:	sahf   
  4073bb:	and    al,BYTE PTR ds:0xbf907a1d
  4073c1:	loopne 0x407364
  4073c3:	sbb    eax,0x9c099f4a
  4073c8:	and    eax,DWORD PTR [ebp-0x3b]
  4073cb:	xchg   ecx,eax
  4073cc:	out    dx,al
  4073cd:	shr    BYTE PTR [esi-0x35],cl
  4073d0:	dec    ebx
  4073d1:	inc    edi
  4073d2:	cld    
  4073d3:	retf   
  4073d4:	adc    al,0x72
  4073d6:	in     eax,0x95
  4073d8:	sub    DWORD PTR [ecx],edx
  4073da:	push   eax
  4073db:	push   0x17adc977
  4073e0:	adc    ebp,edi
  4073e2:	lods   al,BYTE PTR ds:[esi]
  4073e3:	shr    DWORD PTR [ecx+edx*2],0xf9
  4073e7:	scas   al,BYTE PTR es:[edi]
  4073e8:	sub    al,0x1b
  4073ea:	sbb    al,0x38
  4073ec:	lds    edx,FWORD PTR [eax]
  4073ee:	jbe    0x40743b
  4073f0:	pop    ebx
  4073f1:	loop   0x4073ae
  4073f3:	std    
  4073f4:	out    0x61,al
  4073f6:	mov    ds:0xf033f262,al
  4073fb:	sub    eax,0xc63d84b6
  407400:	(bad)  
  407402:	add    al,0xc
  407404:	inc    edx
  407405:	adc    bh,BYTE PTR [edx+0x7b]
  407408:	push   edi
  407409:	dec    edi
  40740a:	jno    0x4073c6
  40740c:	dec    edx
  40740d:	mov    esi,0xa49387e4
  407412:	add    DWORD PTR [ebx-0x61],ebp
  407415:	fadd   QWORD PTR [eax]
  407417:	push   ds
  407418:	stos   BYTE PTR es:[edi],al
  407419:	cwde   
  40741a:	loopne 0x40744c
  40741c:	outs   dx,DWORD PTR gs:[esi]
  40741e:	fidiv  DWORD PTR [esi+ecx*1+0x72]
  407422:	inc    ebx
  407423:	mov    bh,0x4b
  407425:	mov    ecx,0x594359c7
  40742a:	xchg   edi,eax
  40742b:	add    eax,0x5aea0576
  407430:	fstp   DWORD PTR [edx+0x5744344e]
  407436:	div    esp
  407438:	jae    0x4074ac
  40743a:	add    dl,BYTE PTR [esi]
  40743c:	fadd   st,st(4)
  40743e:	in     eax,dx
  40743f:	mov    esp,0x2bdc713f
  407444:	xchg   esi,eax
  407445:	enter  0x3526,0x57
  407449:	jae    0x407433
  40744b:	call   0x82a73959
  407450:	pop    ebp
  407451:	data16 out 0x73,al
  407454:	inc    esi
  407455:	aam    0x37
  407457:	popa   
  407458:	xchg   ecx,eax
  407459:	push   0xffffff8d
  40745b:	add    dh,dh
  40745d:	mov    bh,0x8f
  40745f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407460:	aad    0x8
  407462:	dec    esi
  407463:	xor    edx,edx
  407465:	push   esp
  407466:	xor    BYTE PTR fs:[ecx-0x301995fd],ch
  40746d:	mul    DWORD PTR [edi]
  40746f:	mov    BYTE PTR [ecx+ebp*4-0x6f06f162],bl
  407476:	jae    0x407430
  407478:	aas    
  407479:	aad    0x1a
  40747b:	mov    ecx,0x37687e71
  407480:	jmp    0xe778:0x2a9943ba
  407487:	xchg   esi,eax
  407488:	jae    0x40742d
  40748a:	xor    BYTE PTR [ecx+0x7f737df],ch
  407490:	dec    edx
  407491:	lock push cs
  407493:	add    al,0xe3
  407495:	xor    al,0x0
  407497:	cdq    
  407498:	jae    0x407422
  40749a:	adc    al,0xbe
  40749c:	arpl   WORD PTR [ecx-0x7e0c4ca5],bp
  4074a2:	pop    ebp
  4074a3:	sub    dh,cl
  4074a5:	push   es
  4074a6:	lds    esi,FWORD PTR [eax+ebx*1]
  4074a9:	bound  edx,QWORD PTR ds:0x6cf5eab
  4074af:	(bad)  
  4074b0:	and    BYTE PTR [ecx-0x23],ah
  4074b3:	and    al,0xd7
  4074b5:	test   al,0xc1
  4074b7:	pop    esp
  4074b8:	dec    esp
  4074b9:	mov    dh,BYTE PTR [esp+eax*4]
  4074bc:	repz adc ch,cl
  4074bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074c1:	pusha  
  4074c2:	test   al,0x58
  4074c4:	adc    dl,al
  4074c6:	dec    edx
  4074c7:	bsr    esi,DWORD PTR [edx]
  4074ca:	test   al,0xeb
  4074cc:	jno    0x407454
  4074ce:	fidivr DWORD PTR [ebx-0x7b]
  4074d1:	inc    ecx
  4074d2:	mov    edi,0x4da9fc0f
  4074d7:	dec    ecx
  4074d8:	out    dx,eax
  4074d9:	xchg   ebx,eax
  4074da:	lods   eax,DWORD PTR ds:[esi]
  4074db:	xor    eax,esp
  4074dd:	mov    bh,0xec
  4074df:	or     DWORD PTR [ecx-0x2fa12511],0x2b662a7f
  4074e9:	adc    eax,0xb0b2d34f
  4074ee:	push   edx
  4074ef:	loop   0x407541
  4074f1:	(bad)  [edi-0x16]
  4074f4:	mov    ah,0xa1
  4074f6:	in     eax,dx
  4074f7:	stos   DWORD PTR es:[edi],eax
  4074f8:	je     0x407504
  4074fa:	mov    DWORD PTR [ecx],edi
  4074fc:	adc    cl,BYTE PTR [ebx]
  4074fe:	neg    cl
  407500:	xor    DWORD PTR [esi-0x5c],ebp
  407503:	cmc    
  407504:	jns    0x4074d7
  407506:	mov    eax,0x96ef1329
  40750b:	add    DWORD PTR [esi-0x4f],esi
  40750e:	mov    esi,0xeedc1626
  407513:	cdq    
  407514:	leave  
  407515:	jne    0x407539
  407517:	add    ecx,DWORD PTR [edi]
  407519:	mov    al,0x96
  40751b:	aam    0x4b
  40751d:	popf   
  40751e:	push   eax
  40751f:	sub    BYTE PTR [eax-0x6d],dh
  407522:	push   ss
  407523:	adc    dl,dl
  407525:	retf   
  407526:	pop    esp
  407527:	shr    BYTE PTR [esi+0x1b],1
  40752a:	mov    ah,0x75
  40752c:	and    al,0x89
  40752e:	fst    DWORD PTR [ecx]
  407530:	jmp    0x4075a7
  407532:	add    DWORD PTR [ebx],ebx
  407534:	or     DWORD PTR [esi+0x471ad21f],esp
  40753a:	inc    esi
  40753b:	call   0x4a15:0x3a26ade0
  407542:	push   ds
  407543:	add    al,0x22
  407545:	popf   
  407546:	outs   dx,DWORD PTR ds:[esi]
  407547:	in     eax,dx
  407548:	aad    0x2f
  40754a:	xlat   BYTE PTR ds:[ebx]
  40754b:	mov    bh,0x2e
  40754d:	sbb    al,BYTE PTR ds:0x5c59183c
  407553:	std    
  407554:	mov    ecx,fs
  407556:	ds shl BYTE PTR es:[esi+eax*8],1
  40755b:	push   0xffffff8a
  40755d:	pop    esp
  40755e:	imul   ebx,DWORD PTR [ebp-0x1e],0xe42c314e
  407565:	sbb    BYTE PTR [edx-0x148c4cc5],bl
  40756b:	mov    ecx,0x6cc1bf15
  407570:	inc    esp
  407571:	cmp    eax,0x4d71363f
  407576:	enter  0x4ff2,0x76
  40757a:	cs cmp al,0xad
  40757d:	fs pop edi
  40757f:	sar    edi,cl
  407581:	ss out dx,eax
  407583:	test   eax,0x72f82b69
  407588:	pop    es
  407589:	into   
  40758a:	dec    ecx
  40758b:	fnstsw WORD PTR [ebx]
  40758d:	pop    esi
  40758e:	inc    eax
  40758f:	int    0xc
  407591:	lea    ebp,[ecx-0x7c803765]
  407597:	repnz fdiv QWORD PTR [esi+0x3980a254]
  40759e:	or     esp,DWORD PTR [edx-0x64]
  4075a1:	pushf  
  4075a2:	icebp  
  4075a3:	data16 and bl,BYTE PTR ds:0x655e1851
  4075aa:	sbb    bl,ch
  4075ac:	gs out dx,eax
  4075ae:	mov    DWORD PTR [ecx-0x4ed2b78a],ebp
  4075b4:	call   0x349c46ae
  4075b9:	mov    BYTE PTR [ecx],bh
  4075bb:	mov    dh,ch
  4075bd:	and    BYTE PTR [edx+0x33],ch
  4075c0:	mov    eax,cs
  4075c2:	sbb    DWORD PTR [ecx-0x39f7a977],edi
  4075c8:	imul   esp,DWORD PTR [eax+0x7bee8854],0x4a6366f0
  4075d2:	dec    esp
  4075d3:	dec    edi
  4075d4:	sbb    cl,bl
  4075d6:	mov    bl,ah
  4075d8:	xor    DWORD PTR [eax+0x65],edi
  4075db:	pop    edi
  4075dc:	mov    dh,0x4f
  4075de:	sub    al,0xb1
  4075e0:	mov    cs,WORD PTR [ecx+0x16a88248]
  4075e6:	xor    eax,0x332b407
  4075eb:	stos   BYTE PTR es:[edi],al
  4075ec:	(bad)  [edx+0x7b]
  4075ef:	stos   BYTE PTR es:[edi],al
  4075f0:	push   esi
  4075f1:	cli    
  4075f2:	ins    BYTE PTR es:[edi],dx
  4075f3:	ret    
  4075f4:	sti    
  4075f5:	lods   eax,DWORD PTR ds:[esi]
  4075f6:	dec    ebp
  4075f7:	gs (bad) 
  4075f9:	out    dx,al
  4075fa:	xchg   ebx,eax
  4075fb:	cmp    eax,0xffffff8e
  4075fe:	and    edi,ebx
  407600:	mov    dl,0x79
  407602:	popf   
  407603:	mov    BYTE PTR [edi+ebp*1-0xcb04a03],bl
  40760a:	ins    DWORD PTR es:[edi],dx
  40760b:	fistp  QWORD PTR [ebp-0x70]
  40760e:	pop    esi
  40760f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407610:	lock call 0x20d05abf
  407616:	sub    eax,0x1c896092
  40761b:	mov    esi,0x38738e4e
  407620:	fsubr  st(3),st
  407622:	sub    BYTE PTR [ebp-0x16],bh
  407625:	(bad)  
  407627:	fs mov esp,0xe7c0f863
  40762d:	jle    0x40761c
  40762f:	sti    
  407630:	pop    ds
  407631:	mov    ds:0xecd8d9e4,al
  407636:	jb     0x4076a9
  407638:	call   0xd0f9d27e
  40763d:	mov    dh,0x7a
  40763f:	push   ebp
  407640:	hlt    
  407641:	mov    ds:0x44171fde,eax
  407646:	in     al,dx
  407647:	loopne 0x40767d
  407649:	mov    bh,0x63
  40764b:	shr    DWORD PTR [edi-0x62],1
  40764e:	xchg   esp,eax
  40764f:	adc    al,0xca
  407651:	pushf  
  407652:	cmp    ah,ch
  407654:	scas   al,BYTE PTR es:[edi]
  407655:	fwait
  407656:	add    al,0xbf
  407658:	push   edi
  407659:	(bad)  
  40765a:	stos   BYTE PTR es:[edi],al
  40765b:	popf   
  40765c:	dec    esp
  40765d:	scas   al,BYTE PTR es:[edi]
  40765e:	sub    al,BYTE PTR [ecx-0x59]
  407661:	retf   
  407662:	in     eax,0xd
  407664:	pop    edx
  407665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407666:	(bad)  
  407667:	or     eax,0xe6ff5447
  40766c:	je     0x407626
  40766e:	in     al,0xe
  407670:	inc    edi
  407671:	xchg   esi,eax
  407672:	scas   al,BYTE PTR es:[edi]
  407673:	rsm    
  407675:	xchg   ecx,eax
  407676:	int3   
  407677:	or     BYTE PTR [esi+edi*2],dh
  40767a:	mov    DWORD PTR [edx],edx
  40767c:	test   eax,0x9a3a3807
  407681:	jg     0x40767f
  407683:	push   ebp
  407684:	fs add al,0x48
  407687:	cwde   
  407688:	rol    DWORD PTR [esi+0x7bfe5a5c],cl
  40768e:	(bad)  
  40768f:	cmp    cl,BYTE PTR [ebx+0x32]
  407692:	test   DWORD PTR [esi+ebp*4-0x6f],eax
  407696:	sub    al,0x15
  407698:	jnp    0x407624
  40769a:	out    0x0,eax
  40769c:	mov    dl,ah
  40769e:	or     DWORD PTR ds:0x1305cf41,ebp
  4076a4:	xchg   esi,eax
  4076a5:	es mov ch,0xb8
  4076a8:	pop    ecx
  4076a9:	cmc    
  4076aa:	mov    ds:0x3622466,eax
  4076af:	pop    edx
  4076b0:	xor    BYTE PTR [ecx+0x589665],al
  4076b6:	mov    ah,0xc7
  4076b8:	cmc    
  4076b9:	or     DWORD PTR [ebx],ecx
  4076bb:	dec    esi
  4076bc:	cli    
  4076bd:	aad    0xa8
  4076bf:	neg    cl
  4076c1:	dec    esi
  4076c2:	mov    ebx,DWORD PTR [esi]
  4076c4:	jp     0x4076ae
  4076c6:	pop    ss
  4076c7:	adc    al,0xd9
  4076c9:	mov    BYTE PTR [ebp-0xa2eb002],dh
  4076cf:	sbb    eax,0xd04524d6
  4076d4:	imul   ebx,DWORD PTR ds:0x7e953f35,0x10d9abe7
  4076de:	sub    ah,ch
  4076e0:	sub    BYTE PTR [edx+0x5a028db6],0xd1
  4076e7:	inc    esi
  4076e8:	(bad)  
  4076e9:	and    bl,BYTE PTR [eax-0x35bddb59]
  4076ef:	mov    ds,WORD PTR [ebp-0x80]
  4076f2:	scas   eax,DWORD PTR es:[edi]
  4076f3:	lock dec edi
  4076f5:	adc    eax,0xb44dc00
  4076fa:	mov    ebp,0xb225788d
  4076ff:	pop    ss
  407700:	pop    edi
  407701:	loopne 0x407749
  407703:	mov    al,0x43
  407705:	bound  esi,QWORD PTR [ebx]
  407707:	(bad)  
  407708:	cmp    DWORD PTR [edx-0x57],eax
  40770b:	cmp    eax,0xa993e849
  407710:	dec    edi
  407711:	push   esi
  407712:	inc    ebx
  407713:	fist   DWORD PTR [eax-0x16]
  407716:	mov    al,0x8a
  407718:	fs ret 0xeeba
  40771c:	mov    ds:0xd084b931,eax
  407721:	test   DWORD PTR [esp+edi*2-0x16],edi
  407725:	and    edi,ebp
  407727:	add    bh,BYTE PTR [esi-0x6e]
  40772a:	jge    0x40778c
  40772c:	mov    edx,0x55f4dbc2
  407731:	js     0x407724
  407733:	jb     0x4076e0
  407735:	out    0xb3,al
  407737:	popa   
  407738:	xchg   esi,eax
  407739:	je     0x40777c
  40773b:	jb     0x407727
  40773d:	repz push ds
  40773f:	dec    ebp
  407740:	mov    al,0x42
  407742:	hlt    
  407743:	bound  ebp,QWORD PTR [ebx+0x19c9fc8b]
  407749:	pop    ebx
  40774a:	imul   edi,DWORD PTR [edi],0xffffffe0
  40774d:	int3   
  40774e:	iret   
  40774f:	mov    al,ds:0x6a8de56a
  407754:	dec    esi
  407755:	punpckldq mm4,DWORD PTR [edi+ebp*1-0x11b755c4]
  40775d:	inc    esi
  40775e:	pop    es
  40775f:	inc    ecx
  407760:	das    
  407761:	sub    eax,0x2a23822d
  407766:	cld    
  407767:	test   al,0x7b
  407769:	mov    ebp,0x31e9dc5b
  40776e:	int    0x2d
  407770:	mov    ah,0xb0
  407772:	lock sub esi,ebx
  407775:	mov    eax,ds:0x58f9edcd
  40777a:	push   esi
  40777b:	mov    bh,0x97
  40777d:	test   al,0xe9
  40777f:	enter  0xaafa,0x9e
  407783:	dec    ebx
  407784:	jecxz  0x4077ad
  407786:	add    eax,0x48345b55
  40778b:	push   0xffffffc9
  40778d:	adc    dl,dl
  40778f:	cld    
  407790:	sahf   
  407791:	jecxz  0x407780
  407793:	xor    ecx,DWORD PTR [ebx+0x657304f4]
  407799:	mov    al,0xe0
  40779b:	test   al,0x81
  40779d:	dec    ecx
  40779e:	sbb    al,0x22
  4077a0:	ins    BYTE PTR es:[edi],dx
  4077a1:	xor    al,0x5b
  4077a3:	shr    edx,1
  4077a5:	xor    BYTE PTR [ecx+0x7a],ah
  4077a8:	gs add bl,dl
  4077ab:	mov    al,0x95
  4077ad:	adc    DWORD PTR [esi-0x73c28310],esi
  4077b3:	pop    ds
  4077b4:	and    DWORD PTR [edx],ecx
  4077b6:	sub    eax,0x1c48d9b
  4077bb:	sahf   
  4077bc:	mov    esi,0x82ba704b
  4077c1:	adc    esp,edx
  4077c3:	cwde   
  4077c4:	lahf   
  4077c5:	ret    0x81b7
  4077c8:	dec    esp
  4077c9:	mov    al,ds:0xa124baf
  4077ce:	pop    edx
  4077cf:	retf   0xabdc
  4077d2:	mov    ch,0x35
  4077d4:	push   es
  4077d5:	call   0x653b370c
  4077da:	xor    BYTE PTR [edi],ch
  4077dc:	add    eax,0x1d3cfcd6
  4077e1:	mov    ah,0x3
  4077e3:	push   ss
  4077e4:	outs   dx,DWORD PTR ds:[esi]
  4077e5:	test   al,0xd
  4077e7:	inc    esi
  4077e8:	jecxz  0x40783f
  4077ea:	xor    esp,eax
  4077ec:	in     eax,dx
  4077ed:	int    0xd4
  4077ef:	(bad)
  4077f3:	leave  
  4077f4:	dec    ebp
  4077f5:	shl    ebx,cl
  4077f7:	push   esp
  4077f8:	push   ss
  4077f9:	inc    esi
  4077fa:	popa   
  4077fb:	xchg   ah,ch
  4077fd:	xor    al,0xcf
  4077ff:	mov    ebp,0x65e13ab2
  407804:	cli    
  407805:	popa   
  407806:	or     BYTE PTR [esi+0x325fe269],dh
  40780c:	cld    
  40780d:	ret    
  40780e:	stos   BYTE PTR es:[edi],al
  40780f:	(bad)  
  407811:	scas   eax,DWORD PTR es:[edi]
  407812:	jno    0x407797
  407814:	in     eax,0x5c
  407816:	call   0xef63bc71
  40781b:	stos   DWORD PTR es:[edi],eax
  40781c:	dec    ecx
  40781d:	or     BYTE PTR [ebx],0x4e
  407820:	dec    edx
  407821:	fdiv   QWORD PTR [esi-0x6e976c13]
  407827:	push   edi
  407828:	mov    eax,ds:0x7d67c250
  40782d:	or     cl,BYTE PTR [edx+0x637d6b97]
  407833:	shl    BYTE PTR [ebx+0x20318f21],0x38
  40783a:	cdq    
  40783b:	or     BYTE PTR [esi+0x175d17bf],al
  407841:	sbb    eax,0x7a84d408
  407846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407847:	lods   eax,DWORD PTR ds:[esi]
  407848:	add    esi,0x20ec31b4
  40784e:	cmp    al,0x9d
  407850:	mov    dh,ch
  407852:	ds pop ebp
  407854:	sbb    dl,ah
  407856:	mov    esi,0x47f04f03
  40785b:	fcmovbe st,st(6)
  40785d:	inc    eax
  40785e:	popa   
  40785f:	mov    edi,0xdf6b3099
  407864:	sub    dh,0x10
  407867:	in     al,0x67
  407869:	mov    esi,0xd5e6178e
  40786e:	sub    eax,0xf7481cfc
  407873:	sbb    bl,BYTE PTR [eax-0x1659e58c]
  407879:	jmp    0xb6369b0e
  40787e:	repz mov ebp,0xcba8387c
  407884:	dec    esi
  407885:	dec    esp
  407886:	aad    0x36
  407888:	sub    DWORD PTR [edx-0x761cc22c],ecx
  40788e:	add    DWORD PTR [edi+0xe],esi
  407891:	or     ah,BYTE PTR [edi+edi*4-0x60ee5b52]
  407898:	mov    ds:0xf6c66acc,al
  40789d:	iret   
  40789e:	retf   
  40789f:	add    cl,BYTE PTR [ecx+0x5d31a0f9]
  4078a5:	mov    ds,WORD PTR [esi]
  4078a7:	test   al,0x5
  4078a9:	das    
  4078aa:	ret    
  4078ab:	test   eax,0xac4b142
  4078b0:	aaa    
  4078b1:	jmp    0x29199c06
  4078b6:	mov    ecx,0x8e825332
  4078bb:	and    eax,0xa628428b
  4078c0:	sub    ah,BYTE PTR [esi]
  4078c2:	ja     0x40787a
  4078c4:	jle    0x407892
  4078c6:	ins    DWORD PTR es:[edi],dx
  4078c7:	fdiv   QWORD PTR ds:0x1eb4b07d
  4078cd:	mov    edi,0xc37c7bbe
  4078d2:	mov    ds:0x3b58ae7e,al
  4078d7:	jmp    0xba26:0x4c2ade57
  4078de:	xor    BYTE PTR [esp+ecx*4-0x4b],cl
  4078e2:	pop    esp
  4078e3:	gs xor dh,ah
  4078e6:	addr16 mov esi,0x15e7a34
  4078ec:	fistp  DWORD PTR [esp+edi*2-0x47ef5645]
  4078f3:	lods   eax,DWORD PTR ds:[esi]
  4078f4:	inc    ebp
  4078f5:	outs   dx,DWORD PTR ds:[esi]
  4078f6:	lods   al,BYTE PTR ds:[esi]
  4078f7:	imul   eax,eax,0xfffffffe
  4078fa:	in     al,0x87
  4078fc:	repnz push eax
  4078fe:	or     edx,DWORD PTR [esp+esi*8+0x61237af2]
  407905:	push   0xffffff9f
  407907:	bound  ebp,QWORD PTR [esi]
  407909:	mov    al,ds:0xd3ef0cf4
  40790e:	cmp    al,0x2
  407910:	xlat   BYTE PTR ds:[ebx]
  407911:	fdiv   st,st(3)
  407913:	dec    ebp
  407914:	aas    
  407915:	stos   BYTE PTR es:[edi],al
  407916:	xchg   esi,eax
  407917:	pop    ebx
  407918:	push   ebp
  407919:	or     ebp,DWORD PTR [ebp+0x6cb34772]
  40791f:	xor    esi,ecx
  407921:	pop    ecx
  407922:	addr16 xchg esp,eax
  407924:	inc    eax
  407925:	xor    eax,0x7f7497e9
  40792a:	pcmpgtb mm6,QWORD PTR [eax]
  40792d:	out    dx,al
  40792e:	aas    
  40792f:	scas   eax,DWORD PTR es:[edi]
  407930:	adc    DWORD PTR [edx+0x2d04286d],esp
  407936:	dec    DWORD PTR [eax]
  407938:	mov    eax,DWORD PTR [edi+0x47796aed]
  40793e:	nop
  40793f:	dec    esi
  407940:	mov    ebx,0xc77f6127
  407945:	xchg   ebp,eax
  407946:	jl     0x407960
  407948:	sti    
  407949:	mov    al,0x4e
  40794b:	cmp    BYTE PTR [ecx+0x73],0xbc
  40794f:	imul   esi,DWORD PTR [edi],0x4841261e
  407955:	cmc    
  407956:	arpl   WORD PTR [edx+0x7a],bx
  407959:	in     eax,0x6e
  40795b:	jb     0x4079b2
  40795d:	in     eax,0xa2
  40795f:	test   eax,0x744c10fe
  407964:	push   esi
  407965:	clc    
  407966:	dec    esi
  407967:	shr    ah,cl
  407969:	adc    BYTE PTR [ecx],dh
  40796b:	dec    eax
  40796c:	xlat   BYTE PTR ds:[ebx]
  40796d:	jmp    0x64a07822
  407972:	jns    0x407988
  407974:	out    0x6f,eax
  407976:	pushf  
  407977:	fiadd  WORD PTR [ecx+0x33689cad]
  40797d:	pop    ebp
  40797e:	and    ebx,DWORD PTR [edx-0x34252ef0]
  407984:	xor    eax,0xd2650b2
  407989:	and    DWORD PTR [edx],ecx
  40798b:	jge    0x407924
  40798d:	jno    0x407994
  40798f:	out    dx,al
  407990:	out    dx,al
  407991:	std    
  407992:	push   ebx
  407993:	les    edx,FWORD PTR ss:[eax+0x54]
  407997:	xchg   edx,eax
  407998:	aaa    
  407999:	and    eax,0x4d5ce4b7
  40799e:	mov    al,0x65
  4079a0:	or     DWORD PTR [esi+0x4],esi
  4079a3:	sbb    bh,dl
  4079a5:	add    eax,0x13ae6758
  4079aa:	mov    edi,0xf1d6cf94
  4079af:	add    eax,0x3c3c0c01
  4079b4:	add    al,0xb6
  4079b6:	pop    ss
  4079b7:	icebp  
  4079b8:	int3   
  4079b9:	xchg   DWORD PTR [edi],edx
  4079bb:	and    bh,BYTE PTR [eax+0x33]
  4079be:	add    al,bl
  4079c0:	out    0xe8,al
  4079c2:	retf   0x82a0
  4079c5:	dec    esi
  4079c6:	faddp  st(1),st
  4079c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079c9:	add    DWORD PTR [edx],edx
  4079cb:	std    
  4079cc:	jmp    0x4079db
  4079ce:	inc    ecx
  4079cf:	jp     0x407970
  4079d1:	inc    edi
  4079d2:	mov    esp,0xddbef617
  4079d7:	(bad)  
  4079d8:	push   ecx
  4079d9:	xadd   BYTE PTR [edi+0x26ffc8cf],dh
  4079e0:	es retf 
  4079e2:	std    
  4079e3:	bound  ebp,QWORD PTR [ecx+0x4581336d]
  4079e9:	scas   al,BYTE PTR es:[edi]
  4079ea:	loopne 0x407987
  4079ec:	neg    DWORD PTR [esi]
  4079ee:	es adc bh,0x82
  4079f2:	adc    DWORD PTR [esi-0x23],ebx
  4079f5:	push   cs
  4079f6:	test   DWORD PTR [ebx-0x75],0x4d8bf445
  4079fd:	hlt    
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0x9337e350
  407a58:	push   edx
  407a59:	(bad)  
  407a5a:	in     al,dx
  407a5b:	mov    ds:0xe57a7a3c,eax
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	push   cs
  407a64:	ret    0x4211
  407a67:	fsub   QWORD PTR [ecx+0xa047b7e]
  407a6d:	in     eax,0xde
  407a6f:	icebp  
  407a70:	add    esp,DWORD PTR [eax+0x3d]
  407a73:	push   esp
  407a74:	ins    DWORD PTR es:[edi],dx
  407a75:	or     eax,DWORD PTR [esi+0x9c78876]
  407a7b:	mov    ebp,0x2e972988
  407a80:	ror    BYTE PTR [ebx],1
  407a82:	or     eax,0x95376bf5
  407a87:	pop    es
  407a88:	js     0x407a8e
  407a8a:	dec    esp
  407a8b:	lods   eax,DWORD PTR ds:[esi]
  407a8c:	cmp    ebp,esi
  407a8e:	loope  0x407a36
  407a90:	out    0x96,eax
  407a92:	adc    edx,DWORD PTR [esi]
  407a94:	add    eax,0x2168e38f
  407a99:	adc    al,BYTE PTR [edx]
  407a9b:	adc    ecx,DWORD PTR [edi]
  407a9d:	inc    esi
  407a9e:	loope  0x407a98
  407aa0:	(bad)
  407aa3:	add    eax,0xa4a484ea
  407aa8:	lock and al,0x61
  407aab:	imul   ecx,DWORD PTR [edi],0x929934ef
  407ab1:	add    eax,0x35280868
  407ab6:	xor    eax,0x7c716b9b
  407abb:	xchg   dl,dh
  407abd:	pop    esi
  407abe:	push   edi
  407abf:	mov    esp,esi
  407ac1:	and    edx,DWORD PTR [esi]
  407ac3:	daa    
  407ac4:	outs   dx,BYTE PTR ds:[esi]
  407ac5:	pop    edi
  407ac6:	das    
  407ac7:	jge    0x407add
  407ac9:	ret    0x533
  407acc:	sbb    bh,BYTE PTR [ebp-0x33]
  407acf:	sbb    DWORD PTR [edx],esp
  407ad1:	test   al,0xc3
  407ad3:	inc    esi
  407ad4:	loope  0x407af3
  407ad6:	jb     0x407a5b
  407ad8:	lea    ebx,[esi-0x2a24a1d1]
  407ade:	cmp    al,0xe4
  407ae0:	or     eax,0x795bd8c8
  407ae5:	inc    esp
  407ae6:	wbinvd 
  407ae8:	jecxz  0x407ad7
  407aea:	test   ecx,ecx
  407aec:	add    al,0xc9
  407aee:	xor    BYTE PTR [ebx-0x59],0xc2
  407af2:	push   esp
  407af3:	adc    BYTE PTR [esi+0x1f3a5f09],ch
  407af9:	call   0x49dc9e82
  407afe:	aam    0x74
  407b00:	lea    ebx,[ebp-0x19314ac6]
  407b06:	xor    edx,DWORD PTR [ecx+0x2abae8f7]
  407b0c:	call   0x1d67:0xee3a3fe7
  407b13:	cmc    
  407b14:	(bad)  
  407b15:	pop    ebp
  407b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b17:	fiadd  WORD PTR [edi]
  407b19:	fisub  DWORD PTR ds:0xadf694e
  407b1f:	xor    eax,0x3da9b1b0
  407b24:	inc    eax
  407b25:	mov    esi,0x58189a75
  407b2a:	xlat   BYTE PTR ds:[ebx]
  407b2b:	enter  0x13b0,0x6
  407b2f:	lock lods al,BYTE PTR ds:[esi]
  407b31:	and    ch,dh
  407b33:	(bad)
  407b36:	inc    ebp
  407b37:	je     0x407b73
  407b39:	and    DWORD PTR cs:[ecx+0x65de581b],esp
  407b40:	fwait
  407b41:	or     edx,edi
  407b43:	jb     0x407ad0
  407b45:	jle    0x407b1a
  407b47:	adc    BYTE PTR [edi+0x4b60104d],0xec
  407b4e:	and    al,0xf5
  407b50:	enter  0x22b8,0x52
  407b54:	div    BYTE PTR [ebp*2-0x5ba15796]
  407b5b:	dec    edx
  407b5c:	frstpm(287 only) 
  407b5e:	jne    0x407b1d
  407b60:	loopne 0x407aed
  407b62:	sbb    BYTE PTR [ecx+0x39],cl
  407b65:	jecxz  0x407b83
  407b67:	xor    cl,BYTE PTR [edx+0x67158df]
  407b6d:	in     al,0x99
  407b6f:	hlt    
  407b70:	loopne 0x407b4d
  407b72:	ds dec ebp
  407b74:	push   esi
  407b75:	mov    DWORD PTR [edx],esp
  407b77:	and    ah,bl
  407b79:	in     al,dx
  407b7a:	xchg   ebx,eax
  407b7b:	sbb    al,0xd1
  407b7d:	jb     0x407b25
  407b7f:	lahf   
  407b80:	sub    dl,bh
  407b82:	stos   BYTE PTR es:[edi],al
  407b83:	das    
  407b84:	out    0xc7,eax
  407b86:	hlt    
  407b87:	gs inc ch
  407b8a:	test   eax,0xb7e9d020
  407b8f:	xchg   esi,eax
  407b90:	push   eax
  407b91:	lea    ecx,fs:[esi+0x6b]
  407b95:	pop    edx
  407b96:	and    al,0x38
  407b98:	test   al,0x5a
  407b9a:	cmovge eax,DWORD PTR [ebp-0x228f0a59]
  407ba1:	repnz mov cl,0x80
  407ba4:	jns    0x407bc0
  407ba6:	sti    
  407ba7:	inc    eax
  407ba8:	or     esp,DWORD PTR [ebp-0x4b]
  407bab:	js     0x407b93
  407bad:	mov    esp,0xd1bbf521
  407bb2:	mov    BYTE PTR [esi],cl
  407bb4:	xchg   DWORD PTR [esi-0x1cc5bd56],ecx
  407bba:	mov    al,al
  407bbc:	repnz mov ebp,0x1f79f206
  407bc2:	in     al,0xfd
  407bc4:	adc    BYTE PTR ds:0x9be60b3c,bh
  407bca:	dec    ecx
  407bcb:	nop
  407bcc:	pusha  
  407bcd:	popf   
  407bce:	into   
  407bcf:	sbb    edx,edi
  407bd1:	loope  0x407bf4
  407bd3:	fwait
  407bd4:	dec    ebx
  407bd5:	xor    BYTE PTR [esi],dh
  407bd7:	mov    edx,0x8416633d
  407bdc:	std    
  407bdd:	imul   ebx,DWORD PTR [ecx+0x3e],0x24
  407be1:	rcr    BYTE PTR [esi],1
  407be3:	add    ecx,ecx
  407be5:	mov    edx,0x563a9e6a
  407bea:	out    0x8c,al
  407bec:	scas   eax,DWORD PTR es:[edi]
  407bed:	jnp    0x407c41
  407bef:	(bad)  
  407bf0:	rcl    DWORD PTR [edi-0x4c],1
  407bf3:	cmc    
  407bf4:	dec    edi
  407bf5:	push   0xffffff84
  407bf7:	jno    0x407c09
  407bf9:	sbb    BYTE PTR [ecx-0x474fa3c8],dl
  407bff:	out    0x3,al
  407c01:	xor    cl,BYTE PTR [ecx+0x13b9ad8a]
  407c07:	push   ebx
  407c08:	xor    esi,eax
  407c0a:	adc    cl,BYTE PTR [eax]
  407c0c:	and    dl,0x11
  407c0f:	jecxz  0x407c0a
  407c11:	push   0x16c7f59b
  407c16:	dec    ebp
  407c17:	add    ebx,esp
  407c19:	data16 cmp BYTE PTR [edx+eax*8+0x52],bh
  407c1e:	clc    
  407c1f:	mov    ecx,0xe915e172
  407c24:	cdq    
  407c25:	sbb    DWORD PTR [ebx-0x6f539112],0x86439164
  407c2f:	mov    cl,0xcb
  407c31:	mov    dh,0x95
  407c33:	mov    edx,0xad580f7c
  407c38:	dec    edi
  407c39:	dec    eax
  407c3a:	xor    BYTE PTR [eax],0xb0
  407c3d:	dec    edx
  407c3e:	loope  0x407c5d
  407c40:	mov    edx,0xc8a3889
  407c45:	jg     0x407c9a
  407c47:	aaa    
  407c48:	xrelease xchg DWORD PTR [edx-0x202f6780],edi
  407c4f:	add    ebp,DWORD PTR [esi+0x26]
  407c52:	cdq    
  407c53:	xchg   DWORD PTR [ebx+0xe],edx
  407c56:	setp   BYTE PTR [esi+0x22]
  407c5a:	out    dx,eax
  407c5b:	mov    DWORD PTR [edx+0x6976e3a6],edx
  407c61:	add    BYTE PTR [edi-0x1c],bl
  407c64:	sbb    eax,0xe9617e28
  407c69:	stos   DWORD PTR es:[edi],eax
  407c6a:	outs   dx,BYTE PTR ds:[esi]
  407c6b:	ret    
  407c6c:	add    al,0x35
  407c6e:	mov    ebx,0xcc3120c1
  407c73:	and    DWORD PTR [edx],ebx
  407c75:	call   0x823523b6
  407c7a:	push   ebx
  407c7b:	jo     0x407cc9
  407c7d:	mov    ds,WORD PTR [edx+ebx*2]
  407c80:	or     DWORD PTR [edi-0x53],ebx
  407c83:	xor    al,0xb4
  407c85:	mov    al,0x69
  407c87:	mov    ds:0xcefa092b,al
  407c8c:	data16 jns 0x407c1a
  407c8f:	mov    bh,0x6e
  407c91:	mov    DWORD PTR [eax+0x1e],ebx
  407c94:	jae    0x407ccd
  407c96:	popf   
  407c97:	fild   DWORD PTR [edi]
  407c99:	fdiv   DWORD PTR [esi-0x64100117]
  407c9f:	dec    ebp
  407ca0:	cdq    
  407ca1:	jns    0x407cd3
  407ca3:	pusha  
  407ca4:	loop   0x407d07
  407ca6:	fdiv   QWORD PTR [eax-0x6f]
  407ca9:	jg     0x407c2e
  407cab:	xor    al,0x62
  407cad:	test   eax,0x8799eda1
  407cb2:	adc    bl,BYTE PTR [eax]
  407cb4:	mov    ?,WORD PTR [edx+edi*2]
  407cb7:	imul   ecx,DWORD PTR [ebx],0xfffffffd
  407cba:	inc    edi
  407cbb:	pop    es
  407cbc:	adc    esi,DWORD PTR [ebx]
  407cbe:	aam    0x43
  407cc0:	adc    cl,BYTE PTR [esi]
  407cc2:	push   es
  407cc3:	or     esi,DWORD PTR [eax]
  407cc5:	and    al,0x11
  407cc7:	icebp  
  407cc8:	lods   eax,DWORD PTR ds:[esi]
  407cc9:	outs   dx,BYTE PTR ds:[esi]
  407cca:	sbb    al,0x10
  407ccc:	jbe    0x407d39
  407cce:	dec    edi
  407ccf:	adc    BYTE PTR [edi+0x4c],al
  407cd2:	sahf   
  407cd3:	mov    BYTE PTR [di],al
  407cd6:	push   ds
  407cd7:	fidivr WORD PTR [esi]
  407cd9:	mov    ebx,0xbf5bf368
  407cde:	inc    esi
  407cdf:	ror    ebp,cl
  407ce1:	arpl   WORD PTR [ebp-0x69],sp
  407ce4:	je     0x407c86
  407ce6:	mov    dh,0xee
  407ce8:	xchg   ecx,eax
  407ce9:	les    ebx,FWORD PTR [esi]
  407ceb:	mov    cl,0x35
  407ced:	jecxz  0x407d33
  407cef:	(bad)  
  407cf0:	mov    ?,WORD PTR [ecx-0x512da326]
  407cf6:	pop    eax
  407cf7:	leave  
  407cf8:	enter  0x4da5,0x47
  407cfc:	mov    esp,DWORD PTR [ebp-0x30]
  407cff:	stos   DWORD PTR es:[edi],eax
  407d00:	out    0x2,al
  407d02:	test   BYTE PTR [ecx-0x19],dh
  407d05:	(bad)  
  407d06:	outs   dx,DWORD PTR ds:[esi]
  407d07:	mov    eax,0x949dcb5f
  407d0c:	pop    ebx
  407d0d:	ficom  WORD PTR [edx-0x2fe5daaa]
  407d13:	mov    ch,0x82
  407d15:	rcl    BYTE PTR [ebp-0x69],1
  407d18:	dec    ecx
  407d19:	ins    BYTE PTR es:[edi],dx
  407d1a:	loop   0x407d03
  407d1c:	xchg   esp,eax
  407d1d:	push   ebx
  407d1e:	fiadd  WORD PTR [eax]
  407d20:	retf   
  407d21:	ficomp DWORD PTR [ebx-0x3f]
  407d24:	out    dx,eax
  407d25:	iret   
  407d26:	and    DWORD PTR [edi+0x37],ebx
  407d29:	sub    esi,DWORD PTR [edx-0x48301f9d]
  407d2f:	ins    DWORD PTR es:[edi],dx
  407d30:	jo     0x407d56
  407d32:	inc    eax
  407d33:	aaa    
  407d34:	push   edi
  407d35:	and    DWORD PTR [esi+ebx*8-0x5],ecx
  407d39:	ins    BYTE PTR es:[edi],dx
  407d3a:	mov    al,0xad
  407d3c:	test   ecx,edx
  407d3e:	call   0xb93d:0x51376f86
  407d45:	fdiv   QWORD PTR [edx]
  407d47:	sbb    eax,0x168f51cb
  407d4c:	nop
  407d4d:	stc    
  407d4e:	inc    ebx
  407d4f:	test   DWORD PTR [esi+edx*8],esi
  407d52:	lods   al,BYTE PTR ds:[esi]
  407d53:	mov    ch,0x39
  407d55:	addr16 jl 0x407dc0
  407d58:	adc    DWORD PTR [ecx+0x1fe4cfc4],ecx
  407d5e:	push   cs
  407d5f:	pop    eax
  407d60:	dec    eax
  407d61:	mov    eax,ds:0x5a512cb3
  407d66:	test   eax,0xbcc72e79
  407d6b:	add    eax,0xe9cf17a8
  407d70:	dec    edi
  407d71:	sti    
  407d72:	mov    ebx,0x9059f20a
  407d77:	(bad)  
  407d78:	push   ecx
  407d79:	cmp    esp,DWORD PTR [eax+0x6f]
  407d7c:	sub    eax,0x163ab281
  407d81:	mov    ds:0xf6453c82,eax
  407d86:	addr16 xor al,0x4b
  407d89:	adc    al,0x30
  407d8c:	jno    0x407dce
  407d8e:	lods   eax,DWORD PTR ds:[esi]
  407d8f:	dec    ebx
  407d90:	test   eax,0x954f32a5
  407d95:	mov    dh,0x61
  407d97:	in     eax,0x9a
  407d99:	sbb    eax,0x620d2179
  407d9e:	js     0x407df0
  407da0:	stos   BYTE PTR es:[edi],al
  407da1:	cli    
  407da2:	ins    BYTE PTR es:[edi],dx
  407da3:	repnz sbb ch,BYTE PTR [ecx]
  407da6:	xchg   ecx,eax
  407da7:	pop    ebp
  407da8:	sbb    BYTE PTR [ebp+0x5b17f501],bh
  407dae:	jp     0x407d68
  407db0:	or     al,0x43
  407db2:	push   ds
  407db3:	shr    DWORD PTR [ebp-0x16fd2ae9],cl
  407db9:	lds    ebx,FWORD PTR ds:0xe009bf22
  407dbf:	xchg   BYTE PTR [ecx],ah
  407dc1:	xor    al,0x99
  407dc3:	clc    
  407dc4:	int3   
  407dc5:	mov    eax,0xa88f8f9b
  407dca:	sbb    esi,ebx
  407dcc:	lahf   
  407dcd:	inc    ebp
  407dce:	int3   
  407dcf:	dec    esi
  407dd0:	sbb    DWORD PTR [eax-0x5d],0xffffffb1
  407dd4:	sar    BYTE PTR [edi+0x3b],1
  407dd7:	daa    
  407dd8:	cmp    bh,BYTE PTR [ebp+0x2d2fe486]
  407dde:	out    dx,eax
  407ddf:	jne    0x407e00
  407de1:	ror    DWORD PTR [esi+edx*4-0x7e],0x2a
  407de6:	xchg   ecx,eax
  407de7:	lock in eax,dx
  407de9:	adc    al,0x8e
  407deb:	bound  eax,QWORD PTR [esi-0xe]
  407dee:	jno    0x407d7a
  407df0:	not    BYTE PTR [eax+0x79]
  407df3:	out    0x4e,eax
  407df5:	xchg   ebx,eax
  407df6:	sub    DWORD PTR [ebp-0x19936397],edi
  407dfc:	mov    edx,0xc5e44e16
  407e01:	frstor ds:0x5182cf7e
  407e07:	xchg   DWORD PTR [eax+ebp*2-0x5f],ebp
  407e0b:	sahf   
  407e0c:	ja     0x407e7a
  407e0e:	and    esi,DWORD PTR [ebp+ecx*2+0x1f31c7bc]
  407e15:	int3   
  407e16:	loope  0x407e8d
  407e18:	cdq    
  407e19:	adc    al,0x8
  407e1b:	scas   eax,DWORD PTR es:[edi]
  407e1c:	push   0x5ccaf7d4
  407e21:	jge    0x407e23
  407e23:	aad    0x16
  407e25:	mov    esp,0x27de0b29
  407e2a:	mov    edi,0xa34719a4
  407e2f:	outs   dx,BYTE PTR ds:[esi]
  407e30:	adc    al,0x92
  407e32:	jb     0x407df1
  407e34:	pop    ecx
  407e35:	aaa    
  407e36:	mov    ebp,DWORD PTR [esi-0x38]
  407e39:	mov    ebx,0x88701fc8
  407e3e:	mov    edx,0x7f329a6b
  407e43:	inc    edx
  407e44:	pop    ss
  407e45:	dec    edi
  407e46:	fwait
  407e47:	inc    edx
  407e48:	sub    esi,edx
  407e4a:	mov    bl,0x0
  407e4c:	jbe    0x407e87
  407e4e:	and    DWORD PTR [ebx],edi
  407e50:	mov    edx,0x61a1f082
  407e55:	stc    
  407e56:	dec    ebx
  407e57:	mov    cl,BYTE PTR [ebx-0x58]
  407e5a:	loopne 0x407e68
  407e5c:	iret   
  407e5d:	add    dh,BYTE PTR [ebx+0x6bfeed4d]
  407e63:	inc    edx
  407e64:	outs   dx,BYTE PTR ds:[esi]
  407e65:	lods   eax,DWORD PTR ds:[esi]
  407e66:	sbb    ch,BYTE PTR [edx]
  407e68:	xchg   ebx,eax
  407e69:	xlat   BYTE PTR fs:[ebx]
  407e6b:	cmp    ah,dh
  407e6d:	mov    esi,0x6ca2b095
  407e72:	int3   
  407e73:	cmp    BYTE PTR [edx+0xcd2f5f4],bl
  407e79:	mov    bl,0x2
  407e7b:	fistp  DWORD PTR [esp+edi*1]
  407e7e:	sbb    ebp,esp
  407e80:	fwait
  407e81:	ins    DWORD PTR es:[edi],dx
  407e82:	cli    
  407e83:	inc    eax
  407e84:	call   0x70dc:0x87e938c9
  407e8b:	pop    ds
  407e8c:	fnsave [esp+esi*8+0x33]
  407e90:	pop    ebx
  407e91:	fst    QWORD PTR [eax]
  407e93:	into   
  407e94:	mov    ds:0xcf949afc,al
  407e99:	stc    
  407e9a:	inc    esp
  407e9b:	int    0xa2
  407e9d:	mov    edi,esp
  407e9f:	add    eax,0x41dbcb7b
  407ea4:	xchg   DWORD PTR [ebp+edi*8+0x57],edi
  407ea8:	or     al,0x80
  407eaa:	dec    ebx
  407eab:	fucomip st,st(5)
  407ead:	pop    eax
  407eae:	push   edx
  407eaf:	xor    ebx,edi
  407eb1:	cmc    
  407eb2:	lds    ebx,FWORD PTR [eax-0x57]
  407eb5:	or     DWORD PTR [ecx],esi
  407eb7:	mov    ecx,0xc99f90f5
  407ebc:	sub    eax,0xbfe78ee5
  407ec1:	jle    0x407f41
  407ec3:	jmp    0x87a7c5ea
  407ec8:	jmp    0xe6a698b
  407ecd:	call   ebp
  407ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed0:	mov    eax,ds:0xa796c1b3
  407ed5:	fldcw  WORD PTR [ecx+0x67040ed4]
  407edb:	lahf   
  407edc:	mov    al,ds:0x733d5156
  407ee1:	cmp    eax,DWORD PTR [ebp+eiz*8-0x34]
  407ee5:	and    al,0x38
  407ee7:	(bad)  
  407ee8:	pop    ss
  407ee9:	mov    BYTE PTR [edx],bh
  407eeb:	repz inc edx
  407eed:	jge    0x407ea1
  407eef:	mov    bl,0x4b
  407ef1:	dec    edx
  407ef2:	sub    esi,0x8c6aef63
  407ef8:	push   0x4d
  407efa:	addr16 test eax,0x1bc63612
  407f01:	int3   
  407f02:	sbb    DWORD PTR [esi+0x295b589d],0x4523929b
  407f0c:	mov    edi,0x6e08f5
  407f11:	test   DWORD PTR [ecx-0x3406b880],ebx
  407f17:	push   ss
  407f18:	rcr    BYTE PTR [eax],cl
  407f1a:	push   ebp
  407f1b:	pop    ebx
  407f1c:	rcr    BYTE PTR [ebx+0x7b71b7b7],0x7f
  407f23:	dec    ecx
  407f24:	in     eax,0xc0
  407f26:	cmp    DWORD PTR [eax-0x7a81acfa],edi
  407f2c:	lods   al,BYTE PTR ds:[esi]
  407f2d:	mov    ebx,0x3ede4e20
  407f32:	xor    eax,0xd3098cca
  407f37:	dec    edx
  407f38:	inc    ebx
  407f39:	cdq    
  407f3a:	or     BYTE PTR [eax-0x56],0x94
  407f3e:	push   ebp
  407f3f:	data16 mov cl,0xa5
  407f42:	lods   al,BYTE PTR ds:[esi]
  407f43:	lods   eax,DWORD PTR ds:[esi]
  407f44:	aad    0x74
  407f46:	mov    bh,0x25
  407f48:	enter  0x437d,0x27
  407f4c:	xor    esi,edx
  407f4e:	inc    ebx
  407f4f:	and    edx,DWORD PTR [edi+0x6d8ebcd0]
  407f55:	adc    al,0x6a
  407f57:	shr    BYTE PTR ds:0x6dfa4f35,0x55
  407f5e:	cmc    
  407f5f:	sbb    BYTE PTR [eax+0x4e],cl
  407f62:	dec    esi
  407f63:	add    BYTE PTR [ecx-0x3b],0xa3
  407f67:	pop    ebx
  407f68:	and    al,0x66
  407f6a:	stc    
  407f6b:	mov    al,ds:0xae4a4d38
  407f70:	(bad)  
  407f72:	ins    BYTE PTR es:[edi],dx
  407f73:	mov    bl,0x79
  407f75:	mov    ds:0x22991262,eax
  407f7a:	or     DWORD PTR [edx+0x7ac0c46],ebx
  407f80:	pop    ss
  407f81:	xor    BYTE PTR [ebx],bl
  407f83:	mov    WORD PTR [edi+eax*2+0x103aefb9],?
  407f8a:	pop    esi
  407f8b:	xlat   BYTE PTR ds:[ebx]
  407f8c:	mov    ah,0xe6
  407f8e:	dec    ecx
  407f8f:	lock sbb DWORD PTR [edi-0x30],esi
  407f93:	ror    DWORD PTR [edi],1
  407f95:	push   si
  407f97:	fistp  WORD PTR [esi+0x4317aed]
  407f9d:	bnd ja 0x407f72
  407fa0:	loopne 0x407fc2
  407fa2:	dec    edi
  407fa3:	(bad)  
  407fa4:	in     eax,dx
  407fa5:	or     eax,0x96b7dd2e
  407faa:	pusha  
  407fab:	sbb    dl,BYTE PTR [esi-0x1ba58bc0]
  407fb1:	std    
  407fb2:	xor    eax,0xe39e6083
  407fb7:	inc    ebx
  407fb8:	lea    esp,[eax+0x75]
  407fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fbc:	(bad)  
  407fbe:	stos   DWORD PTR es:[edi],eax
  407fbf:	adc    al,0xc6
  407fc1:	pop    esi
  407fc2:	jne    0x408006
  407fc4:	and    bl,bh
  407fc6:	jmp    0x2432:0xc91f0fb6
  407fcd:	rcr    BYTE PTR [esp+esi*1+0x61],0x11
  407fd2:	int    0x51
  407fd4:	inc    ebx
  407fd5:	cdq    
  407fd6:	xchg   edx,eax
  407fd7:	xchg   ebx,eax
  407fd8:	rol    DWORD PTR [ecx],1
  407fda:	iret   
  407fdb:	aas    
  407fdc:	sbb    eax,DWORD PTR [ecx+0x19]
  407fdf:	repz enter 0x9f22,0x54
  407fe4:	mov    ds:0x270a61a7,eax
  407fe9:	ficom  WORD PTR [esi]
  407feb:	lahf   
  407fec:	cmp    BYTE PTR [ebp+ebx*4+0x14],bl
  407ff0:	push   es
  407ff1:	(bad)  
  407ff2:	or     al,0x57
  407ff4:	mov    bh,0x8a
  407ff6:	pop    edi
  407ff7:	mov    dl,dh
  407ff9:	inc    edx
  407ffa:	sar    ecx,0x54
  407ffd:	ds inc ecx
  407fff:	adc    DWORD PTR [edi+0xee45e06],ecx
  408005:	mov    ?,esi
  408007:	mov    esi,0x23f92ab4
  40800c:	in     eax,0x75
  40800e:	in     al,0x17
  408010:	and    dh,BYTE PTR [ebp+eax*8+0x57]
  408014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408015:	sub    BYTE PTR [ebx+0x3cb81dc7],dh
  40801b:	jle    0x40801c
  40801d:	fnstsw WORD PTR [ebp+0x1119d469]
  408023:	stos   BYTE PTR es:[edi],al
  408024:	push   0xd
  408026:	fcomip st,st(2)
  408028:	jl     0x408013
  40802a:	dec    ebp
  40802b:	pusha  
  40802c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40802d:	and    eax,0xb6264066
  408032:	pop    ds
  408033:	add    DWORD PTR [ebp-0x1a],eax
  408036:	rcl    DWORD PTR [edi-0x3fdae236],cl
  40803c:	xor    ebp,esp
  40803e:	or     eax,0x7608a599
  408043:	add    esp,DWORD PTR [edx+0x387e0fbd]
  408049:	mov    al,0xe7
  40804b:	sahf   
  40804c:	sbb    eax,0x9a71c400
  408051:	addr16 push ds
  408053:	pusha  
  408054:	mov    BYTE PTR [ecx-0x18201b1],al
  40805a:	jmp    FWORD PTR [ecx]
  40805c:	mov    BYTE PTR [ebp-0x56],bh
  40805f:	dec    edi
  408060:	inc    ebp
  408061:	pop    esi
  408062:	retf   
  408063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408064:	sbb    DWORD PTR [ebx+0x15101155],edi
  40806a:	test   BYTE PTR [esi+0x71],al
  40806d:	inc    ecx
  40806e:	or     DWORD PTR [ecx+0x4a],eax
  408071:	cli    
  408072:	dec    ebp
  408073:	jp     0x40808b
  408075:	std    
  408076:	mov    al,0xc9
  408078:	cmc    
  408079:	loop   0x40809a
  40807b:	jae    0x4080f9
  40807d:	xor    edi,DWORD PTR [ecx+0x37]
  408080:	pop    es
  408081:	fistp  QWORD PTR [edx-0x12]
  408084:	pop    es
  408085:	mov    ah,BYTE PTR [ebx]
  408087:	jnp    0x4080d4
  408089:	scas   al,BYTE PTR es:[edi]
  40808a:	and    esp,DWORD PTR [edx-0x54f20a6c]
  408090:	iret   
  408091:	jle    0x408097
  408093:	sub    eax,0x32c9a26a
  408098:	add    al,0x35
  40809a:	loop   0x4080b0
  40809c:	lea    esp,[esi+0x2c]
  40809f:	cmp    eax,0x151de87d
  4080a4:	retf   0x9462
  4080a7:	std    
  4080a8:	nop
  4080a9:	jmp    0x408089
  4080ab:	mov    bl,0x37
  4080ad:	mov    ds:0x7d9db571,al
  4080b2:	xchg   ebp,eax
  4080b3:	pushf  
  4080b4:	mov    cl,0x45
  4080b6:	pop    eax
  4080b7:	xor    DWORD PTR [ebx],edx
  4080b9:	fist   WORD PTR [ebp+0xf]
  4080bc:	mov    ecx,0xae6167e9
  4080c1:	sub    ebx,edx
  4080c3:	add    BYTE PTR [edi-0x4],dl
  4080c6:	je     0x4080c5
  4080c8:	ds int 0xa
  4080cb:	or     DWORD PTR [ecx],0x154425c1
  4080d1:	mov    DWORD PTR [edi+0x34b14055],eax
  4080d7:	lock scas eax,DWORD PTR es:[edi]
  4080d9:	inc    ebp
  4080da:	jb     0x40810e
  4080dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080dd:	call   0x4c11:0x7d1eb492
  4080e4:	pop    eax
  4080e5:	adc    BYTE PTR [ebx+ecx*2-0x46425d4c],0x86
  4080ed:	inc    esp
  4080ee:	pop    ebx
  4080ef:	lods   al,BYTE PTR ds:[esi]
  4080f0:	clc    
  4080f1:	movq   QWORD PTR [ecx],mm0
  4080f4:	nop
  4080f5:	push   ecx
  4080f6:	adc    eax,0xc9985ba3
  4080fb:	or     al,0x47
  4080fd:	mov    esi,0xff055a0b
  408102:	mov    dh,0x76
  408104:	push   ecx
  408105:	push   0xb90c3c6d
  40810a:	in     al,0x3a
  40810c:	popf   
  40810d:	cwde   
  40810e:	lock and DWORD PTR [ebx+0x270c2082],ecx
  408115:	xchg   edx,eax
  408116:	lods   al,BYTE PTR ds:[esi]
  408117:	push   esi
  408118:	out    0xa4,eax
  40811a:	jg     0x4080a1
  40811c:	or     eax,0xfd4753b9
  408121:	out    dx,eax
  408122:	pushf  
  408123:	div    ah
  408125:	mov    BYTE PTR ds:0x23c800b4,cl
  40812b:	push   ebp
  40812c:	je     0x408119
  40812e:	pop    esp
  40812f:	xchg   ecx,eax
  408130:	femms  
  408132:	lahf   
  408133:	dec    esi
  408134:	lock fild DWORD PTR [edi+ebp*2+0x6f]
  408139:	push   cs
  40813a:	call   DWORD PTR [esi+0x9]
  40813d:	das    
  40813e:	jb     0x408173
  408140:	sub    ebp,DWORD PTR [eax]
  408142:	push   eax
  408143:	xlat   BYTE PTR ds:[ebx]
  408144:	add    esp,edx
  408146:	add    BYTE PTR [edi],dh
  408148:	mov    bl,0x2c
  40814a:	mov    ecx,0x192314a6
  40814f:	cdq    
  408150:	pop    ds
  408151:	imul   eax,DWORD PTR [edi],0x40
  408154:	adc    DWORD PTR [esi-0x31fd637d],0x3fb732d3
  40815e:	jbe    0x408157
  408160:	pop    es
  408161:	mov    edx,0xc90f974a
  408166:	xlat   BYTE PTR ds:[ebx]
  408167:	(bad)  
  408168:	mov    cl,0x7b
  40816a:	add    esp,esp
  40816c:	fst    QWORD PTR [edi-0x5eccc3c5]
  408172:	fild   QWORD PTR [eax+eax*2+0x589a062a]
  408179:	push   ecx
  40817a:	jmp    0xeebb:0xae15d608
  408181:	lea    edx,[edx+0x79]
  408184:	jge    0x40812d
  408186:	enter  0x39c8,0x6c
  40818a:	sub    al,0xcd
  40818c:	or     ecx,DWORD PTR [eax]
  40818e:	pop    es
  40818f:	or     edx,DWORD PTR [eax+0x39881590]
  408195:	aam    0xc6
  408197:	out    0xbc,eax
  408199:	pop    ecx
  40819a:	adc    ebp,edx
  40819c:	and    BYTE PTR [ebx],bh
  40819e:	add    eax,0xdb4dd149
  4081a3:	fadd   QWORD PTR [ebp+ecx*1-0x3e]
  4081a7:	repnz pop ds
  4081a9:	daa    
  4081aa:	mov    edx,edx
  4081ac:	pop    edi
  4081ad:	ror    DWORD PTR [ebx],1
  4081af:	xor    dl,al
  4081b1:	std    
  4081b2:	imul   edi,ebp,0x84172f80
  4081b8:	push   edx
  4081b9:	std    
  4081ba:	mov    ah,0x23
  4081bc:	(bad)  
  4081bd:	call   0x7992:0xc6f6156c
  4081c4:	mov    dl,0xda
  4081c6:	leave  
  4081c7:	mov    fs,WORD PTR [edx+0x68287efe]
  4081cd:	icebp  
  4081ce:	(bad)  
  4081cf:	adc    eax,0x450d5e9b
  4081d4:	iret   
  4081d5:	or     edx,edi
  4081d7:	cdq    
  4081d8:	dec    eax
  4081d9:	push   ss
  4081da:	cmp    edx,DWORD PTR ds:0x2658b873
  4081e0:	or     eax,0x3ff457e
  4081e5:	test   BYTE PTR [ebp-0x51],bl
  4081e8:	mov    ecx,0x534b448f
  4081ed:	cmp    cl,al
  4081ef:	mov    edx,0xb27cf2f7
  4081f4:	cld    
  4081f5:	adc    esp,esi
  4081f7:	mov    al,ds:0xe8cd13cd
  4081fc:	xlat   BYTE PTR ds:[ebx]
  4081fd:	nop
  4081fe:	shl    BYTE PTR [edx],cl
  408200:	clc    
  408201:	shl    BYTE PTR [eax+0x39],cl
  408204:	or     bl,BYTE PTR ds:0x53c561a1
  40820a:	cs mov ah,0x67
  40820d:	or     al,0x73
  40820f:	pop    es
  408210:	add    eax,0x7b678813
  408215:	nop
  408216:	retf   
  408217:	sbb    ecx,ebp
  408219:	hlt    
  40821a:	dec    ebx
  40821b:	or     eax,0xe8f51611
  408220:	jb     0x40820e
  408222:	dec    esp
  408223:	mov    ebp,ebp
  408225:	outs   dx,DWORD PTR ds:[esi]
  408226:	dec    edx
  408227:	int3   
  408228:	xchg   edi,eax
  408229:	or     DWORD PTR [ebp+0x7c27dbd5],0x4e9f342f
  408233:	and    edi,DWORD PTR [ecx+0x1e]
  408236:	je     0x4081cd
  408238:	jne    0x408243
  40823a:	xchg   edi,eax
  40823b:	in     al,0x35
  40823d:	inc    ecx
  40823e:	inc    ebx
  40823f:	leave  
  408240:	mov    ds:0x19bfd06b,al
  408245:	js     0x408284
  408247:	sti    
  408248:	mov    dl,0x3a
  40824a:	mov    dl,0x5
  40824c:	stc    
  40824d:	add    dl,dl
  40824f:	call   0xc3e:0xb64df692
  408256:	or     BYTE PTR [esi-0x13313941],ah
  40825c:	pop    esp
  40825d:	lea    eax,[eax+0x23f6af0a]
  408263:	retf   0x3610
  408266:	std    
  408267:	dec    esi
  408268:	cs shr cl,cl
  40826b:	jne    0x408294
  40826d:	adc    ah,BYTE PTR [edx+0x3f]
  408270:	lods   al,BYTE PTR ds:[esi]
  408271:	add    eax,eax
  408273:	call   0x63bd77fc
  408278:	data16 test BYTE PTR [esi+0x62],0xc6
  40827d:	pop    edi
  40827e:	retf   0x6077
  408281:	dec    ebx
  408282:	mov    dh,0xd5
  408284:	push   ecx
  408285:	xchg   esp,eax
  408286:	hlt    
  408287:	mov    BYTE PTR [edx+ebx*1-0x74],dh
  40828b:	or     ebx,DWORD PTR [edx]
  40828d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40828e:	adc    cl,BYTE PTR [eax-0x4bc65746]
  408294:	out    0x7f,al
  408296:	(bad)  
  408297:	mov    ds:0x94318fa8,al
  40829c:	inc    edx
  40829d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40829e:	push   edx
  40829f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082a0:	popf   
  4082a1:	iret   
  4082a2:	push   edi
  4082a3:	push   cs
  4082a4:	dec    ebx
  4082a5:	pop    ds
  4082a6:	or     cl,BYTE PTR [ebp+0x7886c10b]
  4082ac:	nop
  4082ad:	pop    ebx
  4082ae:	test   DWORD PTR [edi-0x32],edx
  4082b1:	fiadd  WORD PTR [ecx]
  4082b3:	mov    ebx,DWORD PTR [edx*4+0x3ffb5320]
  4082ba:	lahf   
  4082bb:	cs pop esp
  4082bd:	cwde   
  4082be:	xchg   edx,eax
  4082bf:	hlt    
  4082c0:	(bad)  
  4082c1:	mov    ah,0x22
  4082c3:	pushf  
  4082c4:	addr16 jbe 0x408274
  4082c7:	mov    dh,0xb3
  4082c9:	jmp    0x4082f5
  4082cb:	sar    BYTE PTR [ecx],1
  4082cd:	test   al,0xb6
  4082cf:	jno    0x4082a2
  4082d1:	xor    al,0x3d
  4082d3:	push   0xdbb26a57
  4082d8:	ja     0x4082be
  4082da:	lahf   
  4082db:	ret    0xb55c
  4082de:	in     eax,dx
  4082df:	hlt    
  4082e0:	or     al,0xe1
  4082e2:	pop    eax
  4082e3:	dec    ebx
  4082e4:	es dec edi
  4082e6:	fcomp  DWORD PTR [ebx+0x24fdb6bd]
  4082ec:	push   ss
  4082ed:	loope  0x40832f
  4082ef:	jns    0x4082d1
  4082f1:	ins    DWORD PTR es:[edi],dx
  4082f2:	sahf   
  4082f3:	inc    eax
  4082f4:	jmp    0xb4a9:0x5eaa097c
  4082fb:	add    DWORD PTR [edx+0x62],edi
  4082fe:	out    dx,al
  4082ff:	clc    
  408300:	mov    edi,0x434964c3
  408305:	adc    DWORD PTR [eax+0x28],0x5a
  408309:	hlt    
  40830a:	sub    dh,bl
  40830c:	mov    esp,DWORD PTR [edx]
  40830e:	cli    
  40830f:	sub    DWORD PTR [ecx+edx*4+0x5645e5ae],esp
  408316:	rcl    edx,cl
  408318:	test   al,0xcb
  40831a:	sbb    BYTE PTR [esi+0x2b],dl
  40831d:	sub    eax,0x75c4fa81
  408322:	add    ch,BYTE PTR [edx+0x1903170e]
  408328:	fistp  WORD PTR [ebx-0x69d06a4a]
  40832e:	mov    esp,0x4e90a61d
  408333:	jecxz  0x4082b8
  408335:	outs   dx,BYTE PTR ds:[esi]
  408336:	mov    esp,0xc7e7d462
  40833b:	cs mov bh,0xcc
  40833e:	pop    esp
  40833f:	leave  
  408340:	inc    esi
  408341:	push   esp
  408342:	in     al,0x98
  408344:	pop    esi
  408345:	out    0x49,al
  408347:	inc    esi
  408348:	pushf  
  408349:	xlat   BYTE PTR ds:[ebx]
  40834a:	in     al,0x74
  40834c:	cld    
  40834d:	cmp    ecx,DWORD PTR [ecx]
  40834f:	sti    
  408350:	adc    BYTE PTR [esi],bh
  408352:	int3   
  408353:	les    edx,FWORD PTR [ecx-0x52]
  408356:	hlt    
  408357:	xchg   ecx,eax
  408358:	dec    ebp
  408359:	data16 icebp 
  40835b:	js     0x4083c6
  40835d:	aas    
  40835e:	loope  0x40834b
  408360:	dec    ecx
  408361:	jbe    0x408352
  408363:	lea    edi,[esp+edx*4-0x63468780]
  40836a:	add    al,0xbc
  40836c:	pop    ecx
  40836d:	dec    esi
  40836e:	inc    edi
  40836f:	inc    ebx
  408370:	pop    es
  408371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408372:	loopne 0x40831c
  408374:	inc    esp
  408375:	dec    ebp
  408376:	adc    ah,dh
  408378:	or     BYTE PTR [ebx-0x4b7dd6bf],0xe0
  40837f:	mov    dh,0xc8
  408381:	test   BYTE PTR [edi+0x42],dh
  408384:	or     bh,BYTE PTR [edx]
  408386:	nop
  408387:	enter  0x3b55,0x6e
  40838b:	xchg   edx,edi
  40838d:	aad    0x96
  40838f:	mov    ebx,0x4fa2d5c5
  408394:	jmp    FWORD PTR [esi]
  408396:	in     eax,dx
  408397:	int    0xc1
  408399:	add    DWORD PTR [edx-0x6e],0x78
  40839d:	mov    edx,0x6fce246f
  4083a2:	xchg   esp,eax
  4083a3:	add    DWORD PTR [di-0x5ac3],ecx
  4083a8:	mov    ?,ebp
  4083aa:	push   ebx
  4083ab:	gs (bad) 
  4083ad:	push   esp
  4083ae:	sub    eax,0xfe35c1d9
  4083b3:	push   es
  4083b4:	mov    esi,0x2b9c3ae9
  4083b9:	in     al,0xcb
  4083bb:	push   esi
  4083bc:	sbb    eax,0x455003e
  4083c1:	fwait
  4083c2:	(bad)
  4083c5:	lods   eax,DWORD PTR ds:[esi]
  4083c6:	push   edi
  4083c7:	xor    eax,0x28fd871
  4083cc:	add    BYTE PTR [eax+eax*4+0x79],cl
  4083d0:	fist   WORD PTR [ebx-0x4a82988b]
  4083d6:	call   0x153d:0x1b5999e3
  4083dd:	push   edx
  4083de:	in     al,dx
  4083df:	push   ecx
  4083e0:	and    al,0xef
  4083e2:	mov    bl,0x2e
  4083e4:	rep ins DWORD PTR es:[edi],dx
  4083e6:	dec    ebx
  4083e7:	test   DWORD PTR [esp+ebx*4],esp
  4083ea:	int3   
  4083eb:	mov    bl,0xae
  4083ed:	mov    dh,0xb4
  4083ef:	mov    ah,BYTE PTR [eax+0x4e]
  4083f2:	ja     0x40838b
  4083f4:	scas   al,BYTE PTR es:[edi]
  4083f5:	fsubp  st(0),st
  4083f7:	dec    esp
  4083f8:	xor    ah,BYTE PTR [ebp-0x66]
  4083fb:	xor    al,0x85
  4083fd:	jmp    0xe2705c65
  408402:	push   ebp
  408403:	inc    ecx
  408404:	out    0x23,al
  408406:	inc    ecx
  408407:	sbb    DWORD PTR [ecx],0x4d
  40840a:	pop    esi
  40840b:	not    DWORD PTR [esi]
  40840d:	xchg   DWORD PTR [eax-0x20e2feb1],edi
  408413:	xor    eax,DWORD PTR [ebp+0x19]
  408416:	sbb    al,0x56
  408418:	shr    BYTE PTR [eax-0x14],0x2f
  40841c:	lods   al,BYTE PTR ds:[esi]
  40841d:	std    
  40841e:	cmp    BYTE PTR [eax+0x3c4a2489],0x53
  408425:	adc    esi,DWORD PTR [ebx]
  408427:	or     DWORD PTR [edi],ebx
  408429:	popf   
  40842a:	into   
  40842b:	clc    
  40842c:	pop    edx
  40842d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842e:	add    ch,BYTE PTR [eax]
  408430:	lods   al,BYTE PTR ds:[esi]
  408431:	and    eax,ebp
  408433:	mov    al,0xb6
  408435:	sub    BYTE PTR [edi+0x7bc5b1],bh
  40843b:	lods   eax,DWORD PTR ds:[esi]
  40843c:	jp     0x4083c6
  40843e:	mov    bl,0x34
  408440:	adc    al,0xd5
  408442:	inc    edx
  408443:	cmc    
  408444:	push   0x25
  408446:	les    eax,FWORD PTR [eax-0x9]
  408449:	popa   
  40844a:	(bad)  
  40844c:	cli    
  40844d:	adc    DWORD PTR [ebp-0x5a6197a7],edi
  408453:	jns    0x4083d9
  408455:	xchg   ebx,edx
  408457:	mov    esi,0xbea0fece
  40845c:	scas   eax,DWORD PTR es:[edi]
  40845d:	hlt    
  40845e:	cld    
  40845f:	jo     0x408403
  408461:	cwde   
  408462:	scas   al,BYTE PTR es:[edi]
  408463:	push   ebx
  408464:	aas    
  408465:	jg     0x40840b
  408467:	push   esp
  408468:	dec    edx
  408469:	outs   dx,DWORD PTR ds:[esi]
  40846a:	test   bh,dh
  40846c:	ja     0x408425
  40846e:	and    eax,DWORD PTR [ebp+0x4d]
  408471:	lea    esp,[ebx-0x56]
  408474:	sbb    DWORD PTR [edx+0x7f],ebp
  408477:	inc    edx
  408478:	mov    dl,0x14
  40847a:	loop   0x408431
  40847c:	xchg   ebx,eax
  40847d:	mov    edx,0x25e7d184
  408482:	jno    0x40841b
  408484:	push   esi
  408485:	mov    BYTE PTR [esi+0x18a207ef],0x78
  40848c:	xor    al,ah
  40848e:	cs jne 0x408469
  408491:	dec    ebp
  408492:	stos   DWORD PTR es:[edi],eax
  408493:	popa   
  408494:	(bad)  
  408495:	out    dx,al
  408496:	push   0x70
  408498:	popf   
  408499:	ins    BYTE PTR es:[edi],dx
  40849a:	sbb    al,0xb7
  40849c:	pop    ds
  40849d:	fbstp  TBYTE PTR [ebp+0x762aae80]
  4084a3:	jno    0x408520
  4084a5:	dec    edx
  4084a6:	nop
  4084a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a8:	nop
  4084a9:	dec    edi
  4084aa:	fldenv [edx+0x67199f37]
  4084b0:	pop    eax
  4084b1:	aaa    
  4084b2:	inc    eax
  4084b3:	fs fs ret 
  4084b6:	lea    eax,[edx]
  4084b8:	xchg   ecx,eax
  4084b9:	pop    eax
  4084ba:	scas   al,BYTE PTR es:[edi]
  4084bb:	popa   
  4084bc:	push   ebx
  4084bd:	mov    eax,ds:0x3290758
  4084c2:	mov    al,0x31
  4084c4:	xor    BYTE PTR [eax+0x42cb47df],cl
  4084ca:	add    bh,BYTE PTR [eax-0x77a187fb]
  4084d0:	add    bh,BYTE PTR [ebp+0x36]
  4084d3:	xchg   ebx,eax
  4084d4:	icebp  
  4084d5:	pusha  
  4084d6:	scas   eax,DWORD PTR es:[edi]
  4084d7:	pop    es
  4084d8:	(bad)  
  4084d9:	jge    0x40850c
  4084db:	scas   eax,DWORD PTR es:[edi]
  4084dc:	push   edi
  4084dd:	iret   
  4084de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084df:	xchg   BYTE PTR [edi],ah
  4084e1:	ss call ecx
  4084e4:	inc    edi
  4084e5:	rcl    BYTE PTR cs:[esi],cl
  4084e8:	inc    ebp
  4084e9:	push   edi
  4084ea:	inc    ecx
  4084eb:	push   esp
  4084ec:	sbb    eax,0xfff1e5a4
  4084f1:	jns    0x408485
  4084f3:	pop    ebp
  4084f4:	(bad)  
  4084f5:	dec    edi
  4084f6:	in     al,0x58
  4084f8:	cwde   
  4084f9:	cwde   
  4084fa:	xchg   edx,eax
  4084fb:	pushf  
  4084fc:	test   BYTE PTR [ecx-0x4386adb0],dh
  408502:	popf   
  408503:	jne    0x4084d6
  408505:	pop    DWORD PTR [edx+ebp*1]
  408508:	lods   eax,DWORD PTR ds:[esi]
  408509:	inc    edx
  40850a:	int3   
  40850b:	addr16 aad 0x96
  40850e:	das    
  40850f:	aaa    
  408510:	lea    esi,[ecx+0x79b305c0]
  408516:	test   BYTE PTR [eiz*8+0x4b468198],ch
  40851d:	shl    DWORD PTR [ebx-0x26abc32b],0xf4
  408524:	aad    0xc5
  408526:	(bad)  
  408528:	xchg   ebx,eax
  408529:	xchg   esi,eax
  40852a:	inc    edi
  40852b:	clc    
  40852c:	test   al,0x5c
  40852e:	leave  
  40852f:	test   al,0x64
  408531:	inc    eax
  408532:	mov    ecx,0x2920413b
  408537:	ja     0x40857b
  408539:	cwde   
  40853a:	dec    esp
  40853b:	pop    ebx
  40853c:	ror    DWORD PTR [ecx-0xf5adef9],1
  408542:	jmp    0xa7e1dff6
  408547:	adc    bl,BYTE PTR [eax-0x1e]
  40854a:	or     al,0x28
  40854c:	clc    
  40854d:	inc    ebp
  40854e:	lods   eax,DWORD PTR ds:[esi]
  40854f:	xchg   al,cl
  408551:	ss (bad) 
  408554:	cli    
  408555:	pop    ecx
  408556:	outs   dx,BYTE PTR ds:[esi]
  408557:	pop    eax
  408558:	mov    edx,0x120f90af
  40855d:	sub    eax,0x21b690e9
  408562:	push   es
  408563:	jp     0x408576
  408565:	mov    eax,0x9b2187fd
  40856a:	fs jle 0x4085af
  40856d:	(bad)  
  40856f:	sub    BYTE PTR [esi],0x3f
  408572:	xchg   ebp,eax
  408573:	and    dh,BYTE PTR [ecx+0xc]
  408576:	popf   
  408577:	xor    al,BYTE PTR [eax]
  408579:	inc    DWORD PTR [ebx-0x2568be3a]
  40857f:	dec    esp
  408580:	or     ch,bl
  408582:	xchg   esi,eax
  408583:	loop   0x408566
  408585:	xchg   edx,eax
  408586:	into   
  408587:	or     DWORD PTR [ebx],eax
  408589:	mov    ch,0xce
  40858b:	pop    edi
  40858c:	cs xor dl,0x17
  408590:	pushf  
  408591:	das    
  408592:	retf   0xf393
  408595:	test   dh,bh
  408597:	not    BYTE PTR [edi]
  408599:	jno    0x408591
  40859b:	(bad)  
  40859c:	scas   al,BYTE PTR es:[edi]
  40859d:	sub    dx,WORD PTR [eax]
  4085a0:	cmovns ebp,esi
  4085a3:	ss push ds
  4085a5:	test   DWORD PTR [ecx-0x48],ebx
  4085a8:	enter  0x272c,0x76
  4085ac:	mov    esi,esp
  4085ae:	or     al,0xbf
  4085b0:	pop    ss
  4085b1:	enter  0x2d34,0x94
  4085b5:	jo     0x40862c
  4085b7:	push   0x4698fdf9
  4085bc:	fsub   QWORD PTR [ebx-0x3f8a9e70]
  4085c2:	es xchg esi,eax
  4085c4:	xor    esi,eax
  4085c6:	shl    DWORD PTR [eax-0x30891165],cl
  4085cc:	mov    ds:0x87bb9596,al
  4085d1:	xchg   esp,eax
  4085d2:	push   ebp
  4085d3:	or     al,0x3f
  4085d5:	pop    ecx
  4085d6:	jnp    0x408563
  4085d8:	(bad)  
  4085d9:	mov    ds:0xe510e79b,eax
  4085de:	or     al,BYTE PTR [eax+0x23558bc1]
  4085e4:	idiv   BYTE PTR [edx+0x25]
  4085e7:	push   ebp
  4085e8:	test   al,0xc1
  4085ea:	sbb    DWORD PTR ds:0x7fba1814,esp
  4085f0:	inc    ebp
  4085f1:	xchg   esi,eax
  4085f2:	aad    0x9e
  4085f4:	das    
  4085f5:	push   ebx
  4085f6:	retf   
  4085f7:	and    al,0xf7
  4085f9:	jmp    0x6f393cab
  4085fe:	adc    ah,BYTE PTR [ebx]
  408600:	inc    ecx
  408601:	loop   0x408681
  408603:	jp     0x40861c
  408605:	inc    edi
  408606:	push   es
  408607:	mov    dl,0xf2
  408609:	adc    al,0xe8
  40860b:	mov    esp,0xa80e6294
  408610:	clc    
  408611:	(bad)  
  408612:	(bad)  
  408614:	ins    BYTE PTR es:[edi],dx
  408615:	add    ebx,DWORD PTR [ebp-0x292d720d]
  40861b:	daa    
  40861c:	jae    0x408666
  40861e:	mov    esi,0xa51d8771
  408623:	xchg   esp,eax
  408624:	or     al,0xa1
  408626:	(bad)  
  408627:	cmp    eax,DWORD PTR [edx]
  408629:	pop    ds
  40862a:	mov    ds:0x835219d3,eax
  40862f:	jb     0x4085d6
  408631:	mov    eax,0x501d8ea5
  408636:	xchg   esi,eax
  408637:	inc    edi
  408638:	jg     0x408696
  40863a:	xor    DWORD PTR [eax+0x30],esi
  40863d:	pop    esp
  40863e:	pop    es
  40863f:	add    esi,ebp
  408641:	jecxz  0x4086c1
  408643:	out    dx,al
  408644:	or     edi,DWORD PTR ds:0xd235d775
  40864a:	mov    dh,0x4b
  40864c:	pop    ebx
  40864d:	or     eax,0x9a0b2c9c
  408652:	jb     0x4086b4
  408654:	mov    ebp,0xacf7d484
  408659:	sub    al,0x12
  40865b:	fnstcw WORD PTR ds:0xe250d0a6
  408661:	or     BYTE PTR [eax],al
  408663:	jo     0x408641
  408665:	outs   dx,DWORD PTR ds:[esi]
  408666:	mov    ds:0xcb59cd0a,eax
  40866b:	push   es
  40866c:	sub    ebp,DWORD PTR [eax]
  40866e:	fdiv   QWORD PTR [edx]
  408670:	xchg   ebx,eax
  408671:	or     dl,BYTE PTR [ebp-0x489d2812]
  408677:	jnp    0x408657
  408679:	push   ebp
  40867a:	push   ebx
  40867b:	inc    ecx
  40867c:	out    dx,eax
  40867d:	ds mov ebp,0x72c03d29
  408683:	out    dx,eax
  408684:	neg    eax
  408686:	ss ds out 0x99,al
  40868a:	fs mov ah,al
  40868d:	jmp    0x955c:0xa5d989b7
  408694:	inc    edi
  408695:	imul   edi,eax,0x1fe6fb13
  40869b:	xchg   ebp,eax
  40869c:	inc    esp
  40869d:	inc    edx
  40869e:	fs jae 0x40862b
  4086a1:	(bad)  
  4086a2:	sahf   
  4086a3:	jle    0x408709
  4086a5:	or     dl,BYTE PTR [ebx+0x1cc9d503]
  4086ab:	cmp    DWORD PTR [edx+ebx*8+0x48],0x7b
  4086b0:	push   ecx
  4086b1:	jns    0x40870e
  4086b3:	push   edi
  4086b4:	push   eax
  4086b5:	hlt    
  4086b6:	jo     0x408661
  4086b8:	ror    bl,1
  4086ba:	cld    
  4086bb:	add    edi,DWORD PTR [esi]
  4086bd:	xor    DWORD PTR [edx],eax
  4086bf:	mov    edi,0x5e9348e1
  4086c4:	inc    ebp
  4086c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086c6:	ins    DWORD PTR es:[edi],dx
  4086c7:	icebp  
  4086c8:	(bad)  
  4086ca:	mov    eax,ds:0x68e44325
  4086cf:	xor    DWORD PTR [ebx+edi*4-0x3f],ecx
  4086d3:	inc    ebp
  4086d4:	mov    ah,0x2e
  4086d6:	cdq    
  4086d7:	pusha  
  4086d8:	ins    DWORD PTR es:[edi],dx
  4086d9:	sub    BYTE PTR [edx+ebx*1+0x648a26bc],bl
  4086e0:	aas    
  4086e1:	add    al,0xa9
  4086e3:	inc    ebp
  4086e4:	fmulp  st(5),st
  4086e6:	mov    eax,0x1f437d5b
  4086eb:	sbb    BYTE PTR [eax],al
  4086ed:	fsubrp st(2),st
  4086ef:	ins    DWORD PTR es:[edi],dx
  4086f0:	data16 adc al,0x9b
  4086f3:	mov    al,BYTE PTR [esp+ecx*8+0x3ed37537]
  4086fa:	xor    BYTE PTR ds:0xaa2ddcf,0x5d
  408701:	pop    ebx
  408702:	loope  0x4086f9
  408704:	aaa    
  408705:	dec    edx
  408706:	jne    0x4086e8
  408708:	retf   
  408709:	jecxz  0x4086af
  40870b:	cmp    ecx,DWORD PTR [edi+0x275208e8]
  408711:	es dec ebp
  408713:	lahf   
  408714:	push   esp
  408715:	(bad)  [edi-0x2a]
  408718:	sub    bh,al
  40871a:	test   al,0x20
  40871c:	push   ss
  40871d:	fdivr  QWORD PTR [eax-0x2]
  408720:	jmp    0x4b42:0x24a279f0
  408727:	push   es
  408728:	addr16 stc 
  40872a:	push   esi
  40872b:	ficomp DWORD PTR [edi+esi*1]
  40872e:	dec    ebx
  40872f:	lea    esp,[ecx]
  408731:	ja     0x408765
  408733:	leave  
  408734:	sub    DWORD PTR cs:[edx+0x2c],ecx
  408738:	inc    esi
  408739:	outs   dx,DWORD PTR ds:[esi]
  40873a:	bound  edi,QWORD PTR [edi]
  40873c:	stc    
  40873d:	(bad)  
  40873e:	mov    edx,0x70285505
  408743:	pop    ds
  408744:	out    dx,eax
  408745:	les    ecx,FWORD PTR [eax+0x69]
  408748:	sbb    eax,0x3817a2db
  40874d:	js     0x40879e
  40874f:	xor    edi,esp
  408751:	adc    al,0x9a
  408753:	hlt    
  408754:	je     0x4087b0
  408756:	test   eax,0xaa0bfc2e
  40875b:	retf   0xc053
  40875e:	jle    0x408725
  408760:	test   ebp,ecx
  408762:	jle    0x40875f
  408764:	mov    ah,0xb3
  408766:	in     al,0x7d
  408768:	lds    ecx,FWORD PTR [edi]
  40876a:	hlt    
  40876b:	out    0x7d,al
  40876d:	in     eax,dx
  40876e:	dec    ecx
  40876f:	pop    esi
  408770:	mov    al,0x78
  408772:	dec    ebx
  408773:	add    ah,BYTE PTR [ebx+0x73641870]
  408779:	cmp    BYTE PTR ds:0x531d193c,dh
  40877f:	xchg   al,bh
  408781:	sbb    edx,DWORD PTR [ebx-0x1ed714c]
  408787:	scas   al,BYTE PTR es:[edi]
  408788:	repnz fcom DWORD PTR [ebx+esi*8+0x2a6e6e14]
  408790:	push   ss
  408791:	loope  0x408756
  408793:	fsubr  st,st(3)
  408795:	adc    ebx,DWORD PTR [esi]
  408797:	int    0x66
  408799:	lods   al,BYTE PTR ds:[esi]
  40879a:	dec    ebx
  40879b:	cs inc edi
  40879d:	aaa    
  40879e:	sbb    BYTE PTR [edx+0x3b46157b],bh
  4087a4:	mov    esp,0x3512e996
  4087a9:	push   0xa5c822cb
  4087ae:	cld    
  4087af:	lahf   
  4087b0:	ds inc edi
  4087b2:	xor    al,0x2c
  4087b4:	mov    dl,BYTE PTR [edi]
  4087b6:	iret   
  4087b7:	jnp    0x40873f
  4087b9:	std    
  4087ba:	popa   
  4087bb:	lods   al,BYTE PTR ds:[esi]
  4087bc:	xchg   ebp,eax
  4087bd:	push   edi
  4087be:	sub    eax,esp
  4087c0:	mov    ecx,0xa0b648af
  4087c5:	mov    ah,0x8c
  4087c7:	sub    eax,0x940f5e09
  4087cc:	lea    eax,[esi]
  4087ce:	popa   
  4087cf:	ds pop es
  4087d1:	cli    
  4087d2:	sub    BYTE PTR ds:0x361db5a4,0x4b
  4087d9:	ror    BYTE PTR [edi+0x58],1
  4087dc:	pop    ebp
  4087dd:	sub    dh,BYTE PTR [ebp+0x1800c642]
  4087e3:	inc    esi
  4087e4:	shr    BYTE PTR cs:[ecx+0x4afa014],1
  4087eb:	push   ds
  4087ec:	enter  0x380e,0xc6
  4087f0:	shl    dh,1
  4087f2:	sahf   
  4087f3:	loope  0x4087c0
  4087f5:	and    bh,BYTE PTR [edx-0x6d8c1fcc]
  4087fb:	jnp    0x408824
  4087fd:	inc    ecx
  4087fe:	xchg   esp,eax
  4087ff:	push   es
  408800:	mov    ah,0x37
  408802:	pop    ebx
  408803:	loop   0x408796
  408805:	xor    BYTE PTR [ebx-0x4],bl
  408808:	xlat   BYTE PTR ds:[ebx]
  408809:	mov    eax,0x21150df2
  40880e:	add    BYTE PTR [esi],ch
  408810:	dec    esp
  408811:	mov    dh,0x9
  408813:	mov    BYTE PTR [bx+0x7b],ch
  408817:	xor    eax,0x3a9b5d9a
  40881c:	jecxz  0x4087b5
  40881e:	dec    esp
  40881f:	test   BYTE PTR [ecx+0x56],al
  408822:	imul   ebx,DWORD PTR [ebx+0x46e9aa43],0xffffffb5
  408829:	(bad)  
  40882a:	pop    esi
  40882b:	jno    0x408876
  40882d:	xor    al,0x4
  40882f:	mov    eax,ds:0xc0d457f6
  408834:	or     edx,0x6797af9c
  40883a:	jbe    0x408826
  40883c:	push   edi
  40883d:	out    dx,eax
  40883e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40883f:	(bad)  
  408840:	call   DWORD PTR [edi+0x61]
  408843:	sub    al,0x1b
  408845:	or     BYTE PTR [edi+0x7d],bl
  408848:	sbb    DWORD PTR [eax-0x18152e6e],0xffffff87
  40884f:	out    0xa1,eax
  408851:	cld    
  408852:	inc    edi
  408853:	rcl    esp,0x3e
  408856:	into   
  408857:	test   eax,0x5aa1e687
  40885c:	and    DWORD PTR [eax+esi*8],ebx
  40885f:	outs   dx,DWORD PTR ds:[esi]
  408860:	adc    BYTE PTR [ecx],ah
  408862:	mov    al,0x7d
  408864:	mov    eax,0x3825a0d3
  408869:	fisubr WORD PTR [ebx+0x1a]
  40886c:	xchg   esp,eax
  40886d:	mov    dl,0xb2
  40886f:	lea    ebx,[ebx-0x7a95b895]
  408875:	fimul  WORD PTR [esi+0x1b]
  408878:	add    DWORD PTR [ebx],esi
  40887a:	jns    0x408854
  40887c:	pop    edi
  40887d:	xor    al,0x94
  40887f:	mov    ds:0xfb4dc9c5,al
  408884:	ret    0xa95e
  408887:	pop    edx
  408888:	(bad)  
  408889:	jmp    0x40887b
  40888b:	xchg   edi,eax
  40888c:	std    
  40888d:	push   0xe3caca16
  408892:	nop
  408893:	test   BYTE PTR [ebx-0x6ca0fc53],al
  408899:	sysret 
  40889b:	hlt    
  40889c:	cmp    al,0x65
  40889e:	inc    esi
  40889f:	ins    BYTE PTR es:[edi],dx
  4088a0:	aam    0xcc
  4088a2:	jne    0x408839
  4088a4:	push   0x72
  4088a6:	push   edx
  4088a7:	xchg   dh,dh
  4088a9:	shr    DWORD PTR [ecx],1
  4088ab:	xor    ebx,0xffffff87
  4088ae:	fadd   st,st(3)
  4088b0:	mov    eax,0x28cdaea5
  4088b5:	out    0x7c,al
  4088b7:	jecxz  0x408861
  4088b9:	cmp    al,BYTE PTR [esi-0x12c67ba2]
  4088bf:	pop    ebp
  4088c0:	loop   0x4088dd
  4088c2:	mov    cl,0x89
  4088c4:	arpl   WORD PTR [edi-0x18a6d835],bx
  4088ca:	lea    edi,[ecx+0xa1a4694]
  4088d0:	xchg   ebp,eax
  4088d1:	xchg   edx,eax
  4088d2:	dec    ecx
  4088d4:	mov    ebx,0x9e287538
  4088d9:	cmp    edx,ebx
  4088db:	int    0x8
  4088dd:	jl     0x40888c
  4088df:	clc    
  4088e0:	jns    0x4088f0
  4088e2:	mov    cl,0xdc
  4088e4:	jecxz  0x408904
  4088e6:	fsub   st(1),st
  4088e8:	dec    eax
  4088e9:	jae    0x4088b8
  4088eb:	pusha  
  4088ec:	aam    0xf4
  4088ee:	xchg   ebx,eax
  4088ef:	dec    ebx
  4088f0:	mov    al,0x76
  4088f2:	or     ebx,ecx
  4088f4:	or     al,0x9a
  4088f6:	push   0x61834ed4
  4088fb:	push   ebx
  4088fc:	ret    0x2cdd
  4088ff:	das    
  408900:	xlat   BYTE PTR ds:[ebx]
  408901:	or     eax,DWORD PTR [eax-0x1d]
  408904:	ds cld 
  408906:	mov    eax,0x42c0dd8c
  40890b:	lock lahf 
  40890d:	shl    DWORD PTR [edi+0x5fb10996],cl
  408913:	pop    edi
  408914:	xor    al,0x11
  408916:	jg     0x408935
  408918:	sbb    DWORD PTR [ebx+0xfff3887],ecx
  40891e:	or     BYTE PTR ds:0xd5cefd4a,ch
  408924:	test   eax,0x7bdbe883
  408929:	jp     0x4088c5
  40892b:	push   eax
  40892c:	sub    al,0x53
  40892e:	add    DWORD PTR [eax+0x6],eax
  408931:	sbb    DWORD PTR [ecx-0x5d68fdef],ebx
  408937:	mov    esp,0x3d013b3d
  40893c:	in     al,0x47
  40893e:	mov    ebx,0xb4c06843
  408943:	cmp    al,0xe5
  408945:	push   esi
  408946:	jmp    0xf76f:0x49c4113c
  40894d:	ss gs iret 
  408950:	xor    dl,dh
  408952:	sti    
  408953:	jnp    0x408934
  408955:	and    BYTE PTR ds:0xc5c39d82,ch
  40895b:	and    al,0x22
  40895d:	jmp    0xcd52:0x2f0a651e
  408964:	std    
  408965:	imul   esp,ebp,0xbc78d939
  40896b:	loope  0x408956
  40896d:	in     eax,0xd
  40896f:	ror    BYTE PTR [edx-0x1d],1
  408972:	fnsave ds:0xe4c6835c
  408978:	cli    
  408979:	sub    bl,0x22
  40897c:	inc    ebx
  40897d:	cmp    edi,edi
  40897f:	rcr    BYTE PTR [ecx],0xe8
  408982:	add    DWORD PTR [esi+eiz*4],ebp
  408985:	pop    edx
  408986:	mov    ebx,0x5cc9e589
  40898b:	out    0x3d,eax
  40898d:	mov    bl,0xdc
  40898f:	or     dl,dh
  408991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408992:	je     0x4089f5
  408994:	jl     0x408988
  408996:	cli    
  408997:	in     al,0x57
  408999:	not    BYTE PTR [esi+0x38b0fe7a]
  40899f:	jae    0x4089a2
  4089a1:	xlat   BYTE PTR ds:[ebx]
  4089a2:	mov    ds,WORD PTR [ecx]
  4089a4:	mov    dx,es
  4089a7:	test   DWORD PTR [ebp+eiz*1-0x1cd0d53d],esp
  4089ae:	shr    BYTE PTR [eax-0x139a660],cl
  4089b4:	inc    esp
  4089b5:	iret   
  4089b6:	inc    esi
  4089b7:	scas   eax,DWORD PTR es:[edi]
  4089b8:	sbb    eax,0x8f61f90b
  4089bd:	das    
  4089be:	adc    ebp,DWORD PTR [ebx-0x204e8a24]
  4089c4:	add    al,0x5
  4089c6:	jnp    0x408a1c
  4089c8:	push   esp
  4089c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ca:	mov    esi,0x503950a7
  4089cf:	dec    esi
  4089d0:	xchg   ebx,eax
  4089d1:	in     eax,0xac
  4089d3:	inc    edi
  4089d4:	lock dec eax
  4089d6:	dec    ebp
  4089d7:	fbld   TBYTE PTR [esi+0x104f7846]
  4089dd:	repz mov ds:0xf426e5f5,al
  4089e3:	in     eax,dx
  4089e4:	jle    0x408973
  4089e6:	js     0x408a18
  4089e8:	std    
  4089e9:	loopne 0x408a2a
  4089eb:	dec    esi
  4089ec:	cmp    BYTE PTR [ebx+edx*2+0x356b393e],bl
  4089f3:	fisubr WORD PTR [ebx+0x1f5469ab]
  4089f9:	mov    al,0xd
  4089fb:	push   ecx
  4089fc:	sti    
  4089fd:	push   0x2d0a0b0e
  408a02:	icebp  
  408a03:	inc    ebp
  408a04:	add    eax,0x2e2b1b4b
  408a09:	dec    edi
  408a0a:	pop    ebp
  408a0b:	pop    ebx
  408a0c:	fdiv   DWORD PTR [ecx+0x54314ba]
  408a12:	repz xor eax,0x2cfd87bb
  408a18:	or     esi,0x9ce3a3c6
  408a1e:	push   ebp
  408a1f:	ins    DWORD PTR es:[edi],dx
  408a20:	or     ebx,DWORD PTR [edx+ecx*8-0x12]
  408a24:	xor    DWORD PTR [eax+0x66],ebp
  408a27:	test   al,0x7c
  408a29:	imul   eax,edi,0xffffffaf
  408a2c:	ds or  al,0x6f
  408a2f:	fs sbb edi,edx
  408a32:	fstp   QWORD PTR ds:0x7bcf8c3
  408a38:	push   ebp
  408a39:	or     al,0xa3
  408a3b:	mov    ds:0xd0029fae,eax
  408a40:	mov    ds:0x77886f59,al
  408a45:	aas    
  408a46:	sbb    al,0x6f
  408a48:	pusha  
  408a49:	cmp    eax,0x647b2a20
  408a4e:	lock mov ds:0x6291af95,al
  408a54:	mov    edi,0xe692767f
  408a59:	sbb    al,0x3d
  408a5b:	push   es
  408a5c:	mov    bh,0x72
  408a5e:	ficom  WORD PTR [ebp-0x5c9fa60c]
  408a64:	jle    0x408a07
  408a66:	push   ebx
  408a67:	mov    BYTE PTR [esi],ch
  408a69:	aad    0x3f
  408a6b:	and    ah,BYTE PTR [edx]
  408a6d:	nop
  408a6e:	mov    ds,WORD PTR [ebp+0x4813c37e]
  408a74:	and    ecx,DWORD PTR [ecx+0x11]
  408a77:	pop    es
  408a78:	inc    edi
  408a79:	xchg   BYTE PTR [ebp-0x4e],dh
  408a7c:	mov    edx,0x424275c3
  408a81:	neg    cl
  408a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a84:	xlat   BYTE PTR ds:[ebx]
  408a85:	rcl    al,0x51
  408a88:	xor    ebx,DWORD PTR [edi]
  408a8a:	dec    esi
  408a8b:	fnstcw WORD PTR [ebx]
  408a8d:	enter  0xe8b5,0xea
  408a91:	stos   BYTE PTR es:[edi],al
  408a92:	adc    BYTE PTR [edi+ebx*8+0x58a1ab32],dl
  408a99:	scas   al,BYTE PTR es:[edi]
  408a9a:	jle    0x408adf
  408a9c:	xchg   edi,eax
  408a9d:	xor    eax,0xba74814c
  408aa2:	jne    0x408a36
  408aa4:	pop    ebp
  408aa5:	adc    esp,esi
  408aa7:	outs   dx,BYTE PTR ds:[esi]
  408aa8:	(bad)  
  408aa9:	mov    ds:0xcbbe5828,eax
  408aae:	jle    0x408a92
  408ab0:	dec    ebx
  408ab1:	iret   
  408ab2:	call   0x5890fad6
  408ab7:	mov    ah,0x29
  408aba:	inc    ebx
  408abb:	out    0x12,al
  408abd:	mov    al,0x4e
  408abf:	or     esp,DWORD PTR [ebp+0x43]
  408ac2:	scas   eax,DWORD PTR es:[edi]
  408ac3:	jb     0x408ad7
  408ac5:	pop    eax
  408ac6:	pop    edi
  408ac7:	lds    esi,FWORD PTR [edx+0x7c]
  408aca:	imul   edx,DWORD PTR [edx+0x7d6056cf],0x40
  408ad1:	loop   0x408a75
  408ad3:	(bad)  
  408ad4:	retf   0x86bd
  408ad7:	inc    esp
  408ad8:	mov    cl,0xb1
  408ada:	add    eax,0x6e8175b8
  408adf:	mov    ecx,0x245e935b
  408ae4:	rol    DWORD PTR [ebp+0x6ac4bbe1],cl
  408aea:	outs   dx,DWORD PTR ds:[esi]
  408aeb:	inc    ebx
  408aec:	in     al,dx
  408aed:	push   ds
  408aee:	stc    
  408aef:	sar    BYTE PTR [ebx],0xc8
  408af2:	popa   
  408af3:	mov    ecx,0x4385ec30
  408af8:	sub    DWORD PTR [esi-0x1],0xdca7057e
  408aff:	jmp    0x408afb
  408b01:	stos   DWORD PTR es:[edi],eax
  408b02:	std    
  408b03:	ficom  DWORD PTR [ecx-0x19]
  408b06:	adc    bl,BYTE PTR [esi+0x70]
  408b09:	dec    esi
  408b0a:	push   ecx
  408b0b:	mov    esp,ecx
  408b0d:	push   eax
  408b0e:	call   0x6d450b9f
  408b13:	sbb    DWORD PTR [edi+0x72f15d12],esp
  408b19:	and    al,0xad
  408b1b:	xchg   esi,eax
  408b1c:	jle    0x408ab7
  408b1e:	lock sbb DWORD PTR [ebx+ecx*2+0x5d],ebx
  408b23:	mov    cs,WORD PTR [edi+0x6]
  408b26:	clc    
  408b27:	mov    WORD PTR ds:0xde828d34,?
  408b2d:	std    
  408b2e:	lea    ebp,[ecx-0x5b]
  408b31:	hlt    
  408b32:	mul    DWORD PTR [ecx+edx*4]
  408b35:	inc    edi
  408b36:	aas    
  408b37:	outs   dx,DWORD PTR ds:[esi]
  408b38:	adc    DWORD PTR [edx-0x78],0xca5072fd
  408b3f:	inc    ecx
  408b40:	lods   eax,DWORD PTR ds:[esi]
  408b41:	pushf  
  408b42:	push   edi
  408b43:	push   0x99514248
  408b48:	add    ecx,DWORD PTR [edx+eax*4-0x5834667d]
  408b4f:	and    BYTE PTR [edi-0x38],al
  408b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b53:	and    al,0xf5
  408b55:	jbe    0x408b20
  408b57:	adc    DWORD PTR [edi-0x756a46c1],ecx
  408b5d:	sbb    esi,DWORD PTR [edx-0x8]
  408b60:	rcl    BYTE PTR [ebx+0x35],cl
  408b63:	mov    ebx,ecx
  408b65:	pushf  
  408b66:	test   al,0x8d
  408b68:	out    dx,al
  408b69:	dec    eax
  408b6a:	enter  0x9ecb,0x85
  408b6e:	mov    bl,0xb9
  408b70:	pop    ss
  408b71:	mov    ebp,0x36ee54e4
  408b76:	inc    ebx
  408b77:	inc    ebx
  408b78:	xor    BYTE PTR ds:[esi+0x26],dl
  408b7c:	icebp  
  408b7d:	or     al,0x20
  408b7f:	ss adc ebx,esp
  408b82:	pushf  
  408b83:	pop    edx
  408b84:	out    0xe6,eax
  408b86:	and    eax,0x2bbebf2c
  408b8b:	jle    0x408bcb
  408b8d:	cmp    BYTE PTR [eax],al
  408b8f:	loop   0x408be3
  408b91:	fild   DWORD PTR [esi+0x353c355a]
  408b97:	leave  
  408b98:	push   ebp
  408b99:	pop    esi
  408b9a:	and    dl,cl
  408b9c:	or     cl,BYTE PTR [ebx+0x69]
  408b9f:	pushf  
  408ba0:	inc    ebx
  408ba1:	fstp   TBYTE PTR [edi-0x44ef54b7]
  408ba7:	mov    bh,BYTE PTR ds:0x2075e096
  408bad:	pop    ecx
  408bae:	enter  0x82d3,0x8c
  408bb2:	adc    esi,DWORD PTR [ebx]
  408bb4:	push   ebp
  408bb5:	out    0xe6,eax
  408bb7:	enter  0x28d8,0xbb
  408bbb:	adc    ch,dh
  408bbd:	clc    
  408bbe:	test   DWORD PTR [ebx-0xa],0xc0293e6
  408bc5:	adc    edx,DWORD PTR [ebx+0x7097f7d5]
  408bcb:	xchg   edx,eax
  408bcc:	test   DWORD PTR [ebx+0x16b88311],ebx
  408bd2:	icebp  
  408bd3:	and    DWORD PTR [esi-0x3b],eax
  408bd6:	lods   al,BYTE PTR ds:[esi]
  408bd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bd8:	sar    DWORD PTR [ebp-0x3d98f096],0x85
  408bdf:	inc    esp
  408be0:	or     dl,BYTE PTR [edx+0x5bab6476]
  408be6:	mov    ds:0x29697789,al
  408beb:	js     0x408bbd
  408bed:	imul   ebx,ebx,0xffffff89
  408bf0:	push   0xdfb2067b
  408bf5:	xor    eax,0xa9d20189
  408bfa:	cs popa 
  408bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bfd:	cld    
  408bfe:	cli    
  408bff:	jne    0x408b8d
  408c01:	(bad)  
  408c02:	pop    ebx
  408c03:	xchg   ebp,eax
  408c04:	inc    esp
  408c05:	dec    DWORD PTR [edi+esi*8-0x3b]
  408c09:	movups xmm3,XMMWORD PTR [edx]
  408c0c:	adc    dh,ah
  408c0e:	push   ecx
  408c0f:	pop    ecx
  408c10:	and    bh,BYTE PTR [edi+0x1fee433]
  408c16:	fadd   QWORD PTR [edi+0x68]
  408c19:	nop
  408c1a:	out    0xa0,eax
  408c1c:	jmp    0x41f9:0xa4c97d8
  408c23:	add    DWORD PTR [ecx+eax*4],ebp
  408c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c27:	cli    
  408c28:	sbb    al,0xc4
  408c2a:	iret   
  408c2b:	jbe    0x408bee
  408c2d:	lods   al,BYTE PTR ds:[esi]
  408c2e:	lods   al,BYTE PTR ds:[esi]
  408c2f:	add    DWORD PTR [esi-0x7c1f4471],eax
  408c35:	xor    eax,0x795c030a
  408c3a:	mov    ch,0x2c
  408c3c:	ins    DWORD PTR es:[edi],dx
  408c3d:	mov    ch,0xb
  408c3f:	cmp    BYTE PTR [ebx+0x66],dh
  408c42:	int    0x85
  408c44:	fcom   QWORD PTR [edi+0x17]
  408c47:	or     DWORD PTR [ecx+0x3e76718e],edi
  408c4d:	sub    ah,BYTE PTR [ecx+ebp*8]
  408c50:	cwde   
  408c51:	shl    esi,cl
  408c53:	icebp  
  408c54:	(bad)  
  408c55:	adc    ebx,DWORD PTR [ebx+ebx*2+0x49]
  408c59:	push   esi
  408c5a:	fimul  DWORD PTR [esi+ebx*8]
  408c5d:	inc    edx
  408c5e:	sbb    BYTE PTR [esi],bl
  408c60:	dec    esp
  408c61:	jge    0x408ccd
  408c63:	hlt    
  408c64:	push   0xffffffd1
  408c66:	sbb    BYTE PTR [edi+0x7a],bl
  408c69:	jle    0x408cb3
  408c6b:	mov    esi,0x976fb5f9
  408c70:	(bad)  
  408c72:	fsubr  QWORD PTR [edi+0x780c6714]
  408c78:	pop    ebp
  408c79:	adc    al,0xc2
  408c7b:	popf   
  408c7c:	or     eax,0x19908440
  408c81:	fbld   TBYTE PTR [ebp+0x3e0f234a]
  408c87:	cmp    BYTE PTR [edi-0x3a0ae6ac],ch
  408c8d:	xor    al,0x95
  408c8f:	(bad)  
  408c90:	mov    ss,WORD PTR [ebx-0x4227470a]
  408c96:	hlt    
  408c97:	les    esp,FWORD PTR [esi+0x61]
  408c9a:	jne    0x408c58
  408c9c:	add    DWORD PTR [eax],esp
  408c9e:	push   esp
  408c9f:	mov    bh,0xa7
  408ca1:	pop    ebp
  408ca2:	or     al,0x2c
  408ca4:	push   esi
  408ca5:	adc    ch,al
  408ca7:	iret   
  408ca8:	scas   al,BYTE PTR es:[edi]
  408ca9:	mov    al,BYTE PTR [edi]
  408cab:	push   esi
  408cac:	cmp    ebx,DWORD PTR [ebx+0x3d8b7f0f]
  408cb2:	push   edx
  408cb3:	aas    
  408cb4:	xchg   esp,eax
  408cb5:	and    BYTE PTR [ebx+eax*2+0x48],al
  408cb9:	push   esi
  408cba:	out    0xf8,al
  408cbc:	xchg   edi,eax
  408cbd:	add    eax,0xd444efdb
  408cc2:	out    dx,eax
  408cc3:	inc    esi
  408cc4:	lea    esp,[ecx]
  408cc6:	jmp    0xc45a:0xd46048b8
  408ccd:	cmp    al,0x19
  408ccf:	jmp    0xcc90:0x8e8532d2
  408cd6:	(bad)  
  408cd7:	pop    ebp
  408cd8:	repz jae 0x408ce2
  408cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cdc:	mov    esp,0x86d00f94
  408ce1:	inc    eax
  408ce2:	jle    0x408cee
  408ce4:	push   es
  408ce5:	cmp    BYTE PTR [edi],cl
  408ce7:	mov    ecx,0xba59ae3f
  408cec:	mov    ecx,ebp
  408cee:	outs   dx,BYTE PTR ds:[esi]
  408cef:	xor    ebp,DWORD PTR [ebp-0x32]
  408cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf3:	outs   dx,DWORD PTR ds:[esi]
  408cf4:	loope  0x408c78
  408cf6:	fs and al,0x86
  408cf9:	jns    0x408ca6
  408cfb:	sub    edi,esi
  408cfd:	adc    al,0xdd
  408cff:	inc    edx
  408d00:	test   eax,0xbc7ee572
  408d05:	in     al,0x94
  408d07:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  408d09:	aam    0x1
  408d0b:	mov    ebp,0x9bc1ebcc
  408d10:	shl    DWORD PTR [edi],1
  408d12:	xor    DWORD PTR [ebp+0x48],0xffffffa3
  408d16:	into   
  408d17:	or     esp,DWORD PTR [esi]
  408d19:	add    BYTE PTR [ebp+edi*2-0xf425433],ah
  408d20:	and    BYTE PTR [esp+edi*4-0x5f0e4d4d],bh
  408d27:	and    eax,0xda93bd5a
  408d2c:	pop    esi
  408d2d:	xchg   ebx,eax
  408d2e:	push   ss
  408d2f:	sbb    ecx,DWORD PTR [ebx+0x29c80fbb]
  408d35:	push   esi
  408d36:	mov    eax,0x915115fe
  408d3b:	mov    esi,0xa352a554
  408d40:	add    BYTE PTR [ebx-0x21],dl
  408d43:	test   BYTE PTR [esi+0x599b7ac8],0x8a
  408d4a:	es sbb eax,0x120e2226
  408d50:	scas   eax,DWORD PTR es:[edi]
  408d51:	lds    ebp,FWORD PTR [edx+eax*2]
  408d54:	test   DWORD PTR [edi+0x5d],esi
  408d57:	sbb    cl,BYTE PTR [ecx+0x7a7f6859]
  408d5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d5e:	dec    ebx
  408d5f:	xlat   BYTE PTR ds:[ebx]
  408d60:	int3   
  408d61:	push   edx
  408d62:	dec    esi
  408d63:	imul   ecx,DWORD PTR [eax-0x24744bed],0x44
  408d6a:	stos   DWORD PTR es:[edi],eax
  408d6b:	das    
  408d6c:	mov    ecx,0xa2542c8
  408d71:	add    dh,BYTE PTR [esi+0x61]
  408d74:	mov    esi,es
  408d76:	add    BYTE PTR [ebp+0x74ac9847],bh
  408d7c:	or     edx,esp
  408d7e:	in     eax,0xd4
  408d80:	enter  0x10cd,0x29
  408d84:	adc    ecx,DWORD PTR [edx]
  408d86:	pop    ds
  408d87:	sub    ah,BYTE PTR [esi]
  408d89:	jne    0x408d3b
  408d8b:	mov    ?,WORD PTR [ecx]
  408d8d:	scas   eax,DWORD PTR es:[edi]
  408d8e:	and    al,0xe9
  408d90:	add    eax,0x3f091a53
  408d95:	mov    edi,0xeb1b3ce8
  408d9a:	xchg   esp,eax
  408d9b:	retf   
  408d9c:	mov    al,BYTE PTR [esi+0x8]
  408d9f:	mov    cl,0xc3
  408da1:	jo     0x408e20
  408da3:	loop   0x408de7
  408da5:	test   eax,0xcb42ecd2
  408daa:	out    0x26,eax
  408dac:	dec    esp
  408dad:	mov    eax,ds:0x3e0a8c53
  408db2:	gs mov ebx,0x5d290b6b
  408db8:	ins    DWORD PTR es:[edi],dx
  408db9:	loope  0x408de0
  408dbb:	ret    0x658c
  408dbe:	call   0x6d8d:0xdc4457c3
  408dc5:	fs jg  0x408d9c
  408dc8:	dec    ecx
  408dc9:	mov    esi,0xdbe82d85
  408dce:	jg     0x408dd8
  408dd0:	addr16 adc eax,0x7d20eec6
  408dd6:	or     DWORD PTR cs:[edi-0x2b],ebx
  408dda:	pop    esi
  408ddb:	inc    esi
  408ddc:	sbb    bh,ch
  408dde:	int    0x88
  408de0:	cli    
  408de1:	cmp    cl,BYTE PTR [ebx]
  408de3:	or     DWORD PTR [edi+0x79],ecx
  408de6:	push   ds
  408de7:	jmp    0x9996:0x72c84880
  408dee:	test   eax,0x96c1cc3b
  408df3:	and    al,0x43
  408df5:	retf   
  408df6:	bound  edi,QWORD PTR [ebx]
  408df8:	cwde   
  408df9:	ret    0x1c04
  408dfc:	inc    edi
  408dfd:	(bad)  
  408dfe:	int3   
  408dff:	imul   edx,DWORD PTR [esi+0x6b],0x1d647590
  408e06:	popa   
  408e07:	call   0x3425:0xe22877e6
  408e0e:	mov    al,bl
  408e10:	and    cl,dl
  408e12:	mov    edx,0x35da52b1
  408e17:	das    
  408e18:	cld    
  408e19:	mov    ebp,0xd59f005d
  408e1e:	sbb    DWORD PTR [edi],edx
  408e20:	xor    al,0x6
  408e22:	mul    DWORD PTR [esi-0x5de59e35]
  408e28:	or     eax,0xa0bde9ac
  408e2d:	mov    ebx,0x748a3421
  408e32:	xchg   esi,eax
  408e33:	xor    bh,BYTE PTR [edx-0x66]
  408e36:	xchg   edi,eax
  408e37:	shr    edi,cl
  408e39:	fcom   QWORD PTR [ebx+0x56c6ae3a]
  408e3f:	mov    ebp,0x619774e1
  408e44:	xor    BYTE PTR ds:0x191b0633,ch
  408e4a:	cmp    dl,BYTE PTR [edx+0x69]
  408e4d:	and    al,0x19
  408e4f:	jle    0x408e98
  408e51:	xor    al,0x1b
  408e53:	jge    0x408e0c
  408e55:	fwait
  408e56:	xchg   ecx,eax
  408e57:	scas   al,BYTE PTR es:[edi]
  408e58:	jge    0x408ec6
  408e5a:	stos   DWORD PTR es:[edi],eax
  408e5b:	mov    dl,BYTE PTR [ebp-0x7b]
  408e5e:	sbb    edi,DWORD PTR [ebp+0x57]
  408e61:	sub    DWORD PTR ds:0xd9ff7cd9,0x9ed072bc
  408e6b:	xchg   BYTE PTR ds:[ebx+eiz*2+0x17bcad75],bl
  408e73:	mov    ah,0xec
  408e75:	mov    ah,0xbf
  408e77:	push   esi
  408e78:	mov    dh,0x2e
  408e7a:	retf   0xd869
  408e7d:	mov    ecx,0xd761a4fc
  408e82:	pop    ss
  408e83:	nop
  408e84:	and    DWORD PTR [eax-0x29],ebx
  408e87:	pop    es
  408e88:	dec    edx
  408e89:	mov    ebx,0xccea42fb
  408e8e:	sub    eax,0x7ebc73e5
  408e93:	lods   eax,DWORD PTR ds:[esi]
  408e94:	push   es
  408e95:	repz ja 0x408edd
  408e98:	repz push eax
  408e9a:	aas    
  408e9b:	sub    BYTE PTR [esp+edi*1-0x6109490c],bh
  408ea2:	mov    eax,ds:0xfd27832c
  408ea7:	pop    esi
  408ea8:	jbe    0x408e57
  408eaa:	push   edx
  408eab:	mov    BYTE PTR [edx-0x11],ch
  408eae:	inc    eax
  408eaf:	cdq    
  408eb0:	xchg   edx,eax
  408eb1:	mov    bl,0x6c
  408eb3:	mov    esp,0xfd5e8304
  408eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb9:	lock dec esi
  408ebb:	sub    cl,BYTE PTR es:[ebp+0x15]
  408ebf:	and    al,0xce
  408ec1:	in     al,0x93
  408ec3:	cs das 
  408ec5:	int    0x52
  408ec7:	gs fs enter 0xf19b,0x98
  408ecd:	sbb    BYTE PTR [ebp-0x26],al
  408ed0:	lea    edi,[eax+0x28]
  408ed3:	call   0xf40a:0x8bf4e2b2
  408eda:	cdq    
  408edb:	xchg   BYTE PTR [ecx],bl
  408edd:	(bad)  
  408ede:	icebp  
  408edf:	dec    ebp
  408ee0:	push   es
  408ee1:	xchg   edi,eax
  408ee2:	jno    0x408eeb
  408ee4:	lock in al,dx
  408ee6:	(bad)  
  408ee7:	jmp    0x8179ef06
  408eec:	or     BYTE PTR [ebp-0x6b49198b],bh
  408ef2:	xor    DWORD PTR [edi+0x2622969d],ecx
  408ef8:	fwait
  408ef9:	pop    ecx
  408efa:	sub    eax,0x629f0644
  408eff:	xor    DWORD PTR [edi],esp
  408f01:	stc    
  408f02:	jmp    0x9d6b:0x9a68b27c
  408f09:	push   cs
  408f0a:	mov    al,0x30
  408f0c:	mov    dh,0x75
  408f0e:	test   eax,0x4a9f851d
  408f13:	mov    ah,0x2c
  408f15:	xlat   BYTE PTR ds:[ebx]
  408f16:	inc    eax
  408f17:	and    edi,DWORD PTR [eax+0x13]
  408f1a:	cli    
  408f1b:	shr    DWORD PTR [esi],cl
  408f1d:	pop    ecx
  408f1e:	scas   al,BYTE PTR es:[edi]
  408f1f:	shr    BYTE PTR [eax],0xe8
  408f22:	adc    edi,ecx
  408f24:	cmp    eax,0x26dc0b88
  408f29:	inc    esp
  408f2a:	and    bl,BYTE PTR [edx]
  408f2c:	adc    DWORD PTR [esi],esp
  408f2e:	jge    0x408edf
  408f30:	xor    al,0x62
  408f32:	rcr    DWORD PTR [edx+0x6b],1
  408f35:	sub    al,0xdb
  408f37:	ret    0xfe18
  408f3a:	test   al,0xa1
  408f3c:	lods   al,BYTE PTR ds:[esi]
  408f3d:	adc    esp,edx
  408f3f:	jmp    0x408f2c
  408f41:	ins    DWORD PTR es:[edi],dx
  408f42:	push   ss
  408f43:	xor    esi,DWORD PTR [ebp+0x6b]
  408f46:	push   ds
  408f47:	je     0x408f9d
  408f49:	sbb    ah,BYTE PTR [esi]
  408f4b:	fmul   QWORD PTR [edx-0x14fbb9ab]
  408f51:	arpl   WORD PTR [ebx],cx
  408f53:	dec    esi
  408f54:	sti    
  408f55:	xor    eax,0xca4a5991
  408f5a:	leave  
  408f5b:	mov    cl,0x20
  408f5d:	mov    dh,dl
  408f5f:	and    eax,0x8dae317c
  408f64:	retf   0xf536
  408f67:	mov    bl,BYTE PTR [edx+0x51]
  408f6a:	int    0x39
  408f6c:	adc    al,0xb4
  408f6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f6f:	sub    ebx,esp
  408f71:	cld    
  408f72:	mov    al,0x63
  408f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f75:	jge    0x408f81
  408f77:	or     al,0x36
  408f79:	je     0x408f19
  408f7b:	pushf  
  408f7c:	mov    edi,0xde58cb58
  408f81:	ins    DWORD PTR es:[edi],dx
  408f82:	inc    ebx
  408f83:	gs push 0x71f5fb86
  408f89:	inc    edx
  408f8a:	dec    ebp
  408f8b:	fmul   DWORD PTR [esi+0x562b1782]
  408f91:	ret    0x9879
  408f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f95:	pop    ss
  408f96:	jae    0x408f85
  408f98:	mov    DWORD PTR [eax-0x466e5eb4],esp
  408f9e:	ds push 0x237142ba
  408fa4:	sbb    edi,eax
  408fa6:	sar    BYTE PTR [ebp+0x3d],cl
  408fa9:	(bad)  
  408fab:	aad    0x78
  408fad:	es push edi
  408faf:	ret    0xc970
  408fb2:	sbb    eax,0xd7cc9885
  408fb7:	outs   dx,DWORD PTR ds:[esi]
  408fb8:	loope  0x409031
  408fba:	and    BYTE PTR [ecx+0x41],bl
  408fbd:	dec    esi
  408fbe:	pop    es
  408fbf:	imul   esp,DWORD PTR [edx],0xb8a5e4f9
  408fc5:	mov    al,0x15
  408fc7:	or     cl,BYTE PTR [ebx]
  408fc9:	push   0x6c
  408fcb:	xchg   ebp,eax
  408fcc:	push   ds
  408fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fce:	push   eax
  408fcf:	sbb    al,0x8c
  408fd1:	pop    ecx
  408fd2:	(bad)  
  408fd3:	dec    ecx
  408fd4:	xchg   bp,ax
  408fd6:	scas   eax,DWORD PTR es:[edi]
  408fd7:	rcl    BYTE PTR [edi-0x1a91d90b],0xc5
  408fde:	out    0x93,eax
  408fe0:	out    0x1,al
  408fe2:	loope  0x409041
  408fe4:	loopne 0x408fe9
  408fe6:	les    edx,FWORD PTR [ecx]
  408fe8:	lds    ecx,FWORD PTR [edi+ebx*1-0x27d6ea44]
  408fef:	aas    
  408ff0:	pop    ds
  408ff1:	jmp    0xc5e8bfde
  408ff6:	inc    ebx
  408ff7:	mov    ebx,0xcc4a4271
  408ffc:	imul   ebx,ebp,0x5f
  408fff:	fisub  WORD PTR [ebx-0x36]
  409002:	sbb    ebp,DWORD PTR [edi+0xd]
  409005:	popa   
  409006:	cmp    bl,BYTE PTR [ebx+0x5]
  409009:	call   0xd71f:0xfc21b161
  409010:	outs   dx,DWORD PTR ds:[esi]
  409011:	ss popf 
  409013:	pushf  
  409014:	into   
  409015:	fst    DWORD PTR [edi-0x30]
  409018:	pusha  
  409019:	inc    eax
  40901a:	adc    al,0x19
  40901c:	xchg   esp,eax
  40901e:	xor    eax,0x848f14c6
  409023:	xchg   ecx,eax
  409024:	test   al,0xb9
  409026:	call   0xa0e4:0xa50c33bb
  40902d:	and    bl,BYTE PTR [edx-0x5f]
  409030:	lods   eax,DWORD PTR ds:[esi]
  409031:	sbb    eax,0x5b80a57c
  409036:	push   0x99c6e7fa
  40903b:	add    cl,BYTE PTR [eax+0xb85f1c5]
  409041:	loop   0x4090ba
  409043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409044:	pop    edi
  409045:	cdq    
  409046:	stos   DWORD PTR es:[edi],eax
  409047:	call   esi
  409049:	sbb    al,0x51
  40904b:	and    al,BYTE PTR ds:0xbb9be422
  409051:	sub    eax,0xd3a1e500
  409056:	pusha  
  409057:	and    eax,0x8adbc20b
  40905c:	dec    ebp
  40905d:	mov    ds:0x8dd5479b,al
  409062:	mov    esi,0xea6aae88
  409067:	mov    ds:0xaa163a72,al
  40906c:	popa   
  40906d:	mov    ?,WORD PTR [edi-0x2b]
  409070:	pop    edx
  409071:	and    eax,0xa9253c91
  409077:	repz push es
  409079:	int    0xae
  40907b:	bt     DWORD PTR es:[ebx+edx*1+0x14],ecx
  409081:	jo     0x409058
  409083:	push   ss
  409084:	enter  0x39fd,0xb9
  409088:	pmullw mm3,QWORD PTR [esi-0x6d5e0f66]
  40908f:	repnz inc edx
  409091:	jle    0x4090f1
  409093:	stos   DWORD PTR es:[edi],eax
  409094:	fst    st(1)
  409096:	cdq    
  409097:	popf   
  409098:	add    DWORD PTR [eax-0x3f70d9cb],ebx
  40909e:	adc    cl,BYTE PTR [esp+eax*4]
  4090a1:	xchg   ecx,eax
  4090a2:	mov    ebp,DWORD PTR [esi+0x1c]
  4090a5:	leave  
  4090a6:	or     eax,esp
  4090a8:	lods   eax,DWORD PTR ds:[si]
  4090aa:	aas    
  4090ab:	lahf   
  4090ac:	gs mov esp,ecx
  4090af:	sti    
  4090b0:	xor    BYTE PTR [eax-0x34fa795e],0xf2
  4090b7:	ret    
  4090b8:	ret    
  4090b9:	(bad)  
  4090bb:	or     edx,DWORD PTR [esi+0x33]
  4090be:	ret    0xf249
  4090c1:	add    al,0x99
  4090c3:	cmp    DWORD PTR [edx],ecx
  4090c5:	outs   dx,BYTE PTR ds:[esi]
  4090c6:	adc    dh,BYTE PTR [ebp+0x40b595cd]
  4090cc:	std    
  4090cd:	pop    ebx
  4090ce:	adc    BYTE PTR [ecx],bl
  4090d0:	lea    edi,[eax]
  4090d2:	xchg   ecx,eax
  4090d3:	cmp    bh,dl
  4090d5:	shl    ah,1
  4090d7:	(bad)  
  4090d9:	cwde   
  4090da:	inc    eax
  4090db:	outs   dx,DWORD PTR ds:[esi]
  4090dc:	mov    al,ds:0x56fb003e
  4090e1:	fwait
  4090e2:	test   BYTE PTR [eax-0x759bf05d],dh
  4090e8:	jmp    0x40912e
  4090ea:	mov    ds:0xe7c6fc3e,eax
  4090ef:	mov    cl,0x5d
  4090f1:	and    BYTE PTR [edi+0x70440f30],ch
  4090f7:	or     DWORD PTR [esi],esi
  4090f9:	cmp    eax,0x56536628
  4090fe:	adc    DWORD PTR [eax-0x592ccca8],edx
  409104:	dec    eax
  409105:	stc    
  409106:	mul    DWORD PTR [edi+edi*8]
  409109:	jae    0x409160
  40910b:	rcr    DWORD PTR [edx-0x1df44382],0x15
  409112:	inc    edi
  409113:	add    ecx,DWORD PTR [edx+0x2c]
  409116:	bound  esp,QWORD PTR [edi+ecx*2]
  409119:	js     0x4090a3
  40911b:	mov    al,0x93
  40911d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40911e:	pop    DWORD PTR [esi-0x4f92ff0d]
  409124:	fcmovnb st,st(4)
  409126:	or     BYTE PTR [ecx-0x71],dh
  409129:	mov    ds:0x74437349,eax
  40912e:	loop   0x40919c
  409130:	mov    DWORD PTR [eax-0x77d4078b],ebp
  409136:	sub    DWORD PTR ds:0x50080922,eax
  40913c:	xchg   DWORD PTR [ecx-0x257d662b],edi
  409142:	test   eax,0x33d7920a
  409147:	pop    ebx
  409148:	scas   al,BYTE PTR es:[edi]
  409149:	(bad)  
  40914b:	rol    DWORD PTR [ebx],0x92
  40914e:	rol    esi,1
  409150:	out    0xc5,eax
  409152:	hlt    
  409153:	or     cl,BYTE PTR [eax-0x50844270]
  409159:	add    al,0x89
  40915b:	aaa    
  40915c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40915d:	xor    dh,BYTE PTR [edi]
  40915f:	sbb    DWORD PTR [ebp+esi*8-0x49],edi
  409163:	(bad)  
  409164:	dec    ebx
  409165:	data16 sub al,BYTE PTR [edi-0x1e]
  409169:	lahf   
  40916a:	sub    al,0x6a
  40916c:	mov    esp,0xe7b65f75
  409171:	imul   esi,DWORD PTR [ebx-0x494c3751],0x57
  409178:	or     dl,al
  40917a:	and    al,0x33
  40917c:	pop    es
  40917d:	ins    BYTE PTR es:[edi],dx
  40917e:	sar    BYTE PTR [esi-0xb],cl
  409181:	popf   
  409182:	mov    esi,0x20da8f68
  409187:	dec    edi
  409188:	cmp    al,0xc7
  40918a:	cmp    DWORD PTR [eax],eax
  40918c:	pop    eax
  40918d:	push   ss
  40918e:	cli    
  40918f:	cmp    eax,0xa707c15a
  409194:	rol    BYTE PTR ds:0x78276910,1
  40919a:	into   
  40919b:	push   ebp
  40919c:	imul   ebp,esi,0x79
  40919f:	mov    ch,0xc1
  4091a1:	ss stc 
  4091a3:	mov    ds:0xee522be3,eax
  4091a8:	ror    BYTE PTR [ecx+eax*8],1
  4091ab:	adc    eax,0x8dda3ed2
  4091b0:	in     eax,0xe0
  4091b2:	les    ebx,FWORD PTR ds:0x4292f34c
  4091b8:	ja     0x409208
  4091ba:	push   0xb1b98e4d
  4091bf:	ja     0x409161
  4091c1:	push   esi
  4091c2:	cwde   
  4091c3:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4091c5:	stc    
  4091c6:	mov    eax,0x7cf7543e
  4091cb:	ret    
  4091cc:	ins    BYTE PTR es:[edi],dx
  4091cd:	jnp    0x409234
  4091cf:	pop    ecx
  4091d0:	xchg   edi,eax
  4091d1:	mov    edx,0xb413e71c
  4091d6:	or     BYTE PTR [esi-0x62a4be14],dh
  4091dc:	repz aaa 
  4091de:	aas    
  4091df:	(bad)  
  4091e0:	mov    esp,0x5505fa32
  4091e5:	inc    esi
  4091e6:	add    DWORD PTR [ebp-0x3d5731fd],ecx
  4091ec:	imul   edx,DWORD PTR [ecx+eiz*8-0x56],0xe2270c0b
  4091f4:	mov    esi,0x423898a1
  4091f9:	test   BYTE PTR [ecx-0x7b],bl
  4091fc:	jl     0x40924b
  4091fe:	xor    eax,0x2cee42eb
  409203:	test   al,0x30
  409205:	jmp    0x97f0:0xe503b8a1
  40920c:	add    ebx,edi
  40920e:	xor    al,0x8d
  409210:	idiv   BYTE PTR [edi+edi*8-0x78ff3478]
  409217:	gs sti 
  409219:	test   cl,al
  40921b:	sahf   
  40921c:	adc    ecx,DWORD PTR [edi]
  40921e:	adc    dl,bl
  409220:	mov    esp,0x8fe514f1
  409225:	aad    0xf1
  409227:	stc    
  409228:	cmp    esp,0xffffff9b
  40922b:	fstp   QWORD PTR [edi-0x56]
  40922e:	fdivp  st(2),st
  409230:	add    eax,0x87fb1672
  409235:	test   ah,ah
  409237:	loop   0x409232
  409239:	cmp    DWORD PTR [ecx+0xf1f171c],esp
  40923f:	or     DWORD PTR [edx],esi
  409241:	dec    edx
  409242:	lods   al,BYTE PTR ds:[esi]
  409243:	loop   0x40927a
  409245:	xor    BYTE PTR [ecx+0x560f81fc],0x30
  40924c:	mov    dh,0x6b
  40924e:	and    BYTE PTR [edx-0x6e4208aa],dh
  409254:	mov    al,0xdf
  409256:	and    DWORD PTR [ecx],esp
  409258:	in     eax,0x8
  40925a:	sar    BYTE PTR [esi-0x1a8e0f8a],1
  409260:	sbb    bh,BYTE PTR [ebx-0x13]
  409263:	sub    DWORD PTR [edx],edi
  409265:	xor    BYTE PTR [ebp-0x28eb9072],dl
  40926b:	cldemote BYTE PTR [ebx-0x551d6ab2]
  409272:	xchg   BYTE PTR [ebx+0x1736c5c4],dh
  409278:	test   al,0xe9
  40927a:	mov    gs,esi
  40927c:	push   esp
  40927d:	inc    esi
  40927e:	xor    al,0x61
  409280:	add    al,0xa3
  409282:	in     eax,dx
  409283:	iret   
  409284:	shl    BYTE PTR [edx-0x6e69f888],1
  40928a:	(bad)  
  40928b:	out    0xf9,eax
  40928d:	stos   BYTE PTR es:[edi],al
  40928e:	shl    BYTE PTR [ebx],1
  409290:	cli    
  409291:	xchg   BYTE PTR [edx+0x76ec828e],cl
  409297:	scas   al,BYTE PTR es:[edi]
  409298:	and    bl,BYTE PTR [eax+0x7f]
  40929b:	js     0x4092ef
  40929d:	push   esp
  40929e:	gs push ebx
  4092a0:	xlat   BYTE PTR ds:[ebx]
  4092a1:	dec    ecx
  4092a2:	mov    ds:0x5f16efb,al
  4092a7:	jb     0x4092ab
  4092a9:	mov    edi,0x8baf8e1
  4092ae:	fild   WORD PTR [ecx-0x1b444b27]
  4092b4:	inc    esi
  4092b5:	inc    esi
  4092b6:	or     al,BYTE PTR [ecx-0x34fa051f]
  4092bc:	fist   WORD PTR [edi-0xb]
  4092bf:	jle    0x40930d
  4092c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c2:	push   es
  4092c3:	adc    al,0xee
  4092c5:	lahf   
  4092c6:	ins    DWORD PTR es:[edi],dx
  4092c7:	arpl   dx,bp
  4092c9:	out    0xbd,al
  4092cb:	cmp    eax,0x61a0d61a
  4092d0:	inc    ebp
  4092d1:	add    edi,DWORD PTR [esp+edx*8+0xdcdd4c4]
  4092d8:	scas   al,BYTE PTR es:[edi]
  4092d9:	cld    
  4092da:	and    DWORD PTR [eax+0x1c],eax
  4092dd:	mov    eax,ds:0x5ede1128
  4092e2:	lock aaa 
  4092e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092e5:	xlat   BYTE PTR ds:[ebx]
  4092e6:	jmp    0x4092f4
  4092e8:	imul   eax,DWORD PTR [ebx-0x745e14d4],0xfffffff4
  4092ef:	inc    edx
  4092f0:	fs and eax,0x80c9ecf
  4092f6:	inc    esi
  4092f7:	or     ch,BYTE PTR [edi]
  4092f9:	mov    ds:0x181737fc,al
  4092fe:	je     0x4092da
  409300:	sub    al,0xb9
  409302:	mov    esp,0x76ab9553
  409307:	xor    BYTE PTR [eax],ah
  409309:	mov    edi,0x955d25f1
  40930e:	jae    0x40937b
  409310:	mov    bl,0x22
  409312:	jge    0x409323
  409314:	xor    ebp,DWORD PTR [edx+ecx*4-0x2ffb5e96]
  40931b:	pop    eax
  40931c:	cwde   
  40931d:	lock inc esi
  40931f:	xlat   BYTE PTR ds:[ebx]
  409320:	sbb    ecx,DWORD PTR [eax+0x61f47d45]
  409326:	or     esi,DWORD PTR [ebx+0x7]
  409329:	sbb    edx,ecx
  40932b:	mov    ebp,0x1c88168
  409330:	and    ebp,eax
  409332:	pop    ecx
  409333:	cwde   
  409334:	sbb    eax,0x22ae23ea
  409339:	fs jmp 0xf575:0xe972c61f
  409341:	lock fiadd DWORD PTR [ebp-0x4e7287c4]
  409348:	test   DWORD PTR [ebp+0x73c4a7b7],esp
  40934e:	nop
  40934f:	aad    0x12
  409351:	int3   
  409352:	div    BYTE PTR [eax+0x2f]
  409355:	xchg   ebp,eax
  409356:	hlt    
  409357:	pop    es
  409358:	lods   al,BYTE PTR ds:[esi]
  409359:	adc    al,0x1a
  40935b:	cmp    eax,0x17daa867
  409360:	sub    bh,BYTE PTR [ebx+0x3d]
  409363:	sub    BYTE PTR [eax+0x3f6c629a],dl
  409369:	pop    ebx
  40936a:	imul   edx,edi,0xb65f1563
  409370:	pop    edi
  409371:	dec    edi
  409372:	ins    DWORD PTR es:[edi],dx
  409373:	(bad)  
  409374:	fst    DWORD PTR [edi-0x3bb5c47]
  40937a:	and    DWORD PTR [edx],esp
  40937c:	inc    ebx
  40937d:	and    dh,0xe6
  409380:	add    edi,DWORD PTR [edx-0x3ed41e2]
  409386:	mov    ecx,0x1b0a80dd
  40938b:	(bad)  
  40938c:	cmp    eax,DWORD PTR [edx]
  40938e:	mov    al,0xf1
  409390:	cmp    DWORD PTR [eax-0x69],esi
  409393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409394:	and    eax,0x4ffb8ed7
  409399:	adc    edx,DWORD PTR [ecx]
  40939b:	xor    eax,DWORD PTR [edi-0x5b]
  40939e:	pop    ds
  40939f:	xchg   edi,eax
  4093a0:	iret   
  4093a1:	adc    bh,ah
  4093a3:	mov    cl,0x3b
  4093a5:	stos   DWORD PTR es:[edi],eax
  4093a6:	retf   
  4093a7:	adc    eax,0x858d00f0
  4093ac:	cwde   
  4093ad:	cmp    edx,DWORD PTR [ebx]
  4093af:	inc    esp
  4093b0:	or     al,0x91
  4093b2:	mov    eax,0x67fbc1bc
  4093b7:	outs   dx,BYTE PTR ds:[esi]
  4093b8:	pop    ebp
  4093b9:	push   ss
  4093ba:	push   ebp
  4093bb:	fadd   DWORD PTR [edi-0x1d]
  4093be:	adc    eax,0xc9d7467f
  4093c3:	mov    al,ds:0xa656114
  4093c8:	outs   dx,DWORD PTR cs:[esi]
  4093ca:	inc    ecx
  4093cb:	mov    ?,WORD PTR [ebx+eax*1-0x470dd93d]
  4093d2:	add    al,0x81
  4093d4:	xchg   ebx,eax
  4093d5:	add    eax,0xca34f8e6
  4093da:	out    dx,eax
  4093db:	repz or bl,BYTE PTR [ebx]
  4093de:	mov    ebx,0x2ec10615
  4093e3:	push   ss
  4093e4:	xchg   esp,eax
  4093e5:	pop    esi
  4093e6:	test   DWORD PTR [eax],ebp
  4093e8:	(bad)  [esp+edx*2+0x2]
  4093ec:	out    0x76,al
  4093ee:	repz add esp,DWORD PTR [esi+0x8]
  4093f2:	daa    
  4093f3:	add    DWORD PTR [edx-0x6a],esi
  4093f6:	out    0xf3,al
  4093f8:	inc    edx
  4093f9:	or     al,0x25
  4093fb:	(bad)  
  4093fc:	jmp    DWORD PTR [edx+0x74]
  4093ff:	xchg   esp,eax
  409400:	call   0x95a83ee2
  409405:	cmp    BYTE PTR [esp+edx*2-0x135a81f6],bh
  40940c:	ins    DWORD PTR es:[edi],dx
  40940d:	test   BYTE PTR [esi-0x6],cl
  409410:	inc    esi
  409411:	aas    
  409412:	jge    0x40946f
  409414:	mov    eax,0x10745c2e
  409419:	in     eax,dx
  40941a:	cdq    
  40941b:	imul   ecx,DWORD PTR [eax-0x562fb433],0x5b
  409422:	aad    0x0
  409424:	out    dx,eax
  409425:	mov    dh,0x17
  409427:	or     al,al
  409429:	pop    ss
  40942a:	sbb    ah,BYTE PTR [eax-0x3db17975]
  409430:	(bad)  
  409431:	out    dx,al
  409432:	and    al,0x68
  409434:	rcr    BYTE PTR [esi+0x19],1
  409437:	je     0x409492
  409439:	add    DWORD PTR [ebp+0x3a],edx
  40943c:	mov    ds:0x5006ee57,al
  409441:	adc    dl,BYTE PTR [ebp-0x40]
  409444:	out    0x84,al
  409446:	cmp    ah,BYTE PTR [ebp*2+0x2277ae25]
  40944d:	or     al,al
  40944f:	mov    ah,0xcb
  409451:	xchg   BYTE PTR [ecx],cl
  409453:	xchg   edi,eax
  409454:	mov    ds:0xb41db547,al
  409459:	inc    esi
  40945a:	mov    cl,0xb5
  40945c:	jle    0x409445
  40945e:	loopne 0x409400
  409460:	sbb    cl,BYTE PTR ds:0x2984044
  409466:	cmc    
  409467:	test   eax,0x3f2af0fc
  40946c:	xchg   edx,eax
  40946d:	rcl    DWORD PTR [ebx-0x65],cl
  409470:	pop    es
  409471:	out    0x46,eax
  409473:	cdq    
  409474:	cmp    al,0x3a
  409476:	pop    ebx
  409477:	out    0x2c,al
  409479:	js     0x4094e5
  40947b:	push   eax
  40947c:	xchg   BYTE PTR [edi+0x32],ch
  40947f:	lods   eax,DWORD PTR ds:[esi]
  409480:	push   ecx
  409481:	xor    DWORD PTR [ecx-0x3dedf88b],ecx
  409487:	fimul  DWORD PTR [ebp-0x1e]
  40948a:	daa    
  40948b:	jg     0x40940d
  40948d:	mov    bh,0x76
  40948f:	xchg   edx,eax
  409490:	xchg   ebx,eax
  409491:	loopne 0x4094c0
  409493:	dec    eax
  409494:	out    dx,eax
  409495:	mov    ax,ds:0x2b041cc3
  40949b:	add    al,0x72
  40949d:	jmp    0x4094ca
  40949f:	or     bh,BYTE PTR [ebx-0x3d37977d]
  4094a5:	aad    0xab
  4094a7:	pop    eax
  4094a8:	jg     0x4094d6
  4094aa:	cmc    
  4094ab:	repnz les esi,FWORD PTR [ebx]
  4094ae:	loop   0x4094e5
  4094b0:	mov    al,ds:0x21644c9f
  4094b5:	dec    eax
  4094b6:	into   
  4094b7:	and    eax,DWORD PTR [eax+0xc]
  4094ba:	mov    BYTE PTR [ebx+0x6b6fbb9b],ah
  4094c0:	pop    esp
  4094c1:	xor    DWORD PTR [edx-0x28b356d0],0x4b09e021
  4094cb:	imul   edx,DWORD PTR [eax-0x5e495a25],0x72763c21
  4094d5:	or     al,0x4d
  4094d7:	mov    ah,0xbc
  4094d9:	shl    ah,1
  4094db:	arpl   cx,di
  4094dd:	fdiv   QWORD PTR [esi-0x35]
  4094e0:	add    eax,0xbd451af2
  4094e5:	sahf   
  4094e6:	mov    al,ds:0x318f48a8
  4094eb:	out    0xc4,al
  4094ed:	jnp    0x409504
  4094ef:	loop   0x4094a5
  4094f1:	pop    edi
  4094f2:	out    0xf9,al
  4094f4:	es push ebx
  4094f6:	pop    ebp
  4094f7:	pushf  
  4094f8:	pop    ecx
  4094f9:	pop    ds
  4094fa:	mov    dl,bh
  4094fc:	sar    DWORD PTR [eax-0x7c516d16],cl
  409502:	sbb    cl,dl
  409504:	sti    
  409505:	(bad)  
  409506:	push   eax
  409507:	push   esi
  409508:	repnz pop esi
  40950a:	xlat   BYTE PTR ds:[ebx]
  40950b:	in     eax,dx
  40950c:	fmul   QWORD PTR [edx-0x17b16f33]
  409512:	sub    eax,0x9ac6c539
  409517:	mov    edx,0xaad57749
  40951c:	enter  0x370c,0xbc
  409520:	jg     0x4094e1
  409522:	add    eax,0x4a69d086
  409527:	add    edi,esi
  409529:	or     edi,DWORD PTR [eax-0x41824e9f]
  40952f:	retf   
  409530:	mov    ds:0x3eec4926,eax
  409535:	lahf   
  409536:	add    DWORD PTR [ecx+0x49574ba5],0xffffffd8
  40953d:	xor    al,0xd7
  409540:	cs call 0x16ea:0xee35f59e
  409548:	lods   eax,DWORD PTR ds:[esi]
  409549:	daa    
  40954a:	mov    ds:0xefa25786,al
  40954f:	adc    BYTE PTR [ebx-0x44],bh
  409552:	mov    bh,0x5c
  409554:	mov    esi,0x46ece008
  409559:	sub    al,BYTE PTR [ecx-0x5e]
  40955c:	ret    0x8de2
  40955f:	or     DWORD PTR [edx],edx
  409561:	inc    ecx
  409562:	mov    BYTE PTR [esp-0xb75845c],bh
  409569:	nop
  40956a:	jno    0x409520
  40956c:	pop    ecx
  40956d:	xchg   BYTE PTR [esi],ch
  40956f:	jmp    0x72e4:0xdc4732da
  409576:	shl    al,cl
  409578:	fnstsw WORD PTR [ebx-0x66]
  40957b:	dec    esp
  40957c:	inc    ebp
  40957d:	call   FWORD PTR [esi]
  40957f:	shl    BYTE PTR ds:0x513ce721,1
  409585:	jae    0x4095db
  409587:	scas   al,BYTE PTR es:[edi]
  409588:	aas    
  409589:	add    BYTE PTR [esi+ebx*2+0x4c],al
  40958d:	cwde   
  40958e:	bswap  esi
  409590:	lahf   
  409591:	inc    edx
  409592:	or     DWORD PTR [edx],esi
  409594:	pop    esi
  409595:	xchg   esi,eax
  409596:	sbb    eax,0x61
  409599:	js     0x409609
  40959b:	mov    al,ds:0x85feff77
  4095a0:	repnz retf 0x2f3d
  4095a4:	jg     0x4095f0
  4095a6:	pop    esi
  4095a7:	repnz cmp eax,0x3f796850
  4095ad:	mov    ss,WORD PTR [eax]
  4095af:	stc    
  4095b0:	imul   esi,DWORD PTR [edx-0x80],0x3e
  4095b4:	jmp    0xe7607b54
  4095b9:	scas   al,BYTE PTR es:[edi]
  4095ba:	enter  0x736a,0x10
  4095be:	fsub   QWORD PTR [ecx+ecx*8+0x7d7d79e1]
  4095c5:	and    edi,DWORD PTR [ecx+0x334b79db]
  4095cb:	mov    edx,0x33b92b8f
  4095d0:	stos   DWORD PTR es:[edi],eax
  4095d1:	adc    BYTE PTR [ecx],bl
  4095d3:	in     al,0x3d
  4095d5:	xor    esp,DWORD PTR [esi-0x8]
  4095d8:	fsub   st,st(3)
  4095da:	out    0x8b,eax
  4095dc:	bound  ecx,QWORD PTR [edx+ebx*4+0x5e]
  4095e0:	scas   al,BYTE PTR es:[edi]
  4095e1:	icebp  
  4095e2:	das    
  4095e3:	(bad)  
  4095e4:	test   ebp,ecx
  4095e6:	mov    esi,0x82720325
  4095eb:	femms  
  4095ed:	and    eax,DWORD PTR [ebx-0x52]
  4095f0:	push   0xea764686
  4095f5:	and    ch,cl
  4095f7:	fldcw  WORD PTR ds:0x6f8e680d
  4095fd:	jl     0x409621
  4095ff:	sbb    esp,DWORD PTR [ecx+0x269c3f91]
  409605:	mov    dl,0xd9
  409607:	in     al,0x7c
  409609:	xor    eax,0x3ea4dd37
  40960e:	push   edx
  40960f:	mov    esp,0x90794ea5
  409614:	pop    edx
  409615:	dec    ebp
  409616:	push   esi
  409617:	hlt    
  409618:	mov    DWORD PTR [esi+0x1c],esi
  40961b:	xchg   esp,eax
  40961c:	add    BYTE PTR [ebx+esi*2+0x3a],bh
  409620:	and    al,0x3c
  409622:	xor    DWORD PTR [edi],esi
  409624:	cdq    
  409625:	mov    ebp,0x4f5fcd6a
  40962a:	ins    BYTE PTR es:[edi],dx
  40962b:	adc    al,0xf9
  40962d:	jns    0x4095d8
  40962f:	retf   0xe148
  409632:	xchg   ebp,eax
  409633:	ds pop es
  409635:	mov    DWORD PTR [ebp+0x5],ebp
  409638:	push   es
  409639:	loop   0x409673
  40963b:	adc    BYTE PTR [ebx+0x386499ea],0x87
  409642:	(bad)  {k4}
  409647:	dec    ebp
  409648:	jl     0x40964c
  40964a:	sbb    edx,DWORD PTR [edx]
  40964c:	cmp    BYTE PTR [ebp+0x2caf3ddb],al
  409652:	in     al,0x5a
  409654:	lds    ebp,FWORD PTR [ebx+0x2fadd800]
  40965a:	dec    ecx
  40965b:	aaa    
  40965c:	outs   dx,BYTE PTR ds:[esi]
  40965d:	jmp    0x9abcebfa
  409662:	imul   edi,esi,0xecbea924
  409668:	lods   al,BYTE PTR ds:[esi]
  409669:	es enter 0x2d8a,0x2
  40966e:	cmp    al,0x36
  409670:	(bad)  
  409671:	or     dh,dl
  409673:	xchg   ebp,eax
  409674:	dec    edx
  409675:	xor    al,BYTE PTR [eax]
  409677:	and    eax,0xfccd9a25
  40967c:	add    BYTE PTR [edx+0x22],dl
  40967f:	cmp    DWORD PTR [ebx-0x4d],edx
  409682:	add    al,0x43
  409684:	outs   dx,BYTE PTR ds:[esi]
  409685:	je     0x409697
  409687:	mov    esp,0xcaf53236
  40968c:	adc    eax,edi
  40968e:	push   ebp
  40968f:	mov    dh,0x49
  409691:	outs   dx,DWORD PTR ds:[esi]
  409692:	dec    esi
  409693:	or     dl,bl
  409695:	daa    
  409696:	xor    eax,0x26f5b9df
  40969b:	or     BYTE PTR [ecx+0x35bda1a3],bh
  4096a1:	xlat   BYTE PTR ds:[ebx]
  4096a2:	push   edi
  4096a3:	sub    al,0xc9
  4096a5:	xchg   DWORD PTR [eax+ebp*4+0x63],ecx
  4096a9:	pop    edi
  4096aa:	rcr    DWORD PTR [ecx+0x3809f555],cl
  4096b0:	scas   al,BYTE PTR es:[edi]
  4096b1:	adc    cl,BYTE PTR [ebx+0x24]
  4096b4:	mov    ebp,0x4373e901
  4096b9:	out    dx,eax
  4096ba:	aaa    
  4096bb:	cmc    
  4096bc:	dec    esi
  4096bd:	ins    DWORD PTR es:[edi],dx
  4096be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096bf:	fcomp  DWORD PTR [eax+0x3f]
  4096c2:	mov    DWORD PTR [esp+ebx*8],ecx
  4096c5:	mov    eax,ds:0x96c7b339
  4096ca:	jg     0x4096e5
  4096cc:	scas   eax,DWORD PTR es:[edi]
  4096cd:	xchg   ebp,eax
  4096ce:	mov    dh,0x93
  4096d0:	cmp    al,0x0
  4096d2:	shl    al,1
  4096d4:	inc    ecx
  4096d5:	sti    
  4096d6:	ins    BYTE PTR es:[edi],dx
  4096d7:	push   ebp
  4096d8:	mov    eax,ds:0x40f1df23
  4096dd:	or     DWORD PTR [eax+0x19],edx
  4096e0:	fadd   st,st(0)
  4096e2:	mov    edx,0x528948d0
  4096e7:	xchg   ebx,eax
  4096e8:	test   DWORD PTR ds:0x5fae3e63,ebp
  4096ee:	adc    bh,BYTE PTR [eax+0x62]
  4096f1:	inc    BYTE PTR [ebp+edx*2-0x35]
  4096f5:	repnz loope 0x40969a
  4096f8:	xor    BYTE PTR [esi],dl
  4096fa:	jg     0x40971c
  4096fc:	adc    bl,BYTE PTR [eax+eiz*4]
  4096ff:	arpl   WORD PTR [edi-0x51],bp
  409702:	add    eax,0x81d32d11
  409707:	cmp    eax,0xb6d4eb89
  40970c:	mov    bl,0x64
  40970e:	in     eax,0x53
  409710:	mov    ?,WORD PTR [edx-0x79]
  409713:	rcr    DWORD PTR [edi+ecx*1-0x76aa57d1],0x2e
  40971b:	pop    es
  40971c:	push   eax
  40971d:	cmp    DWORD PTR [ebp+0x3a],0x5d77a22b
  409724:	mov    eax,0x1408bdee
  409729:	mov    dl,0x3
  40972b:	add    DWORD PTR ds:0xb590774f,eax
  409732:	pop    ebp
  409733:	shl    DWORD PTR [edi-0x4a310069],0x80
  40973a:	mov    WORD PTR [esp+eax*4+0x74],gs
  40973e:	or     esi,eax
  409740:	inc    ecx
  409741:	sub    DWORD PTR [edi+0x1e84598f],esp
  409747:	shr    edx,cl
  409749:	addr16 ret 
  40974b:	das    
  40974c:	push   edx
  40974d:	xchg   dl,dl
  40974f:	xchg   esi,eax
  409750:	leave  
  409751:	inc    edx
  409752:	jns    0x409722
  409754:	and    ecx,ebx
  409756:	js     0x40970b
  409758:	or     DWORD PTR es:[edi+ebp*2-0x12c2160b],0x78
  409761:	test   eax,0x73165ddc
  409766:	jmp    0x67099a9a
  40976b:	test   eax,0x3c323b37
  409770:	pop    es
  409771:	inc    esp
  409772:	and    bl,ah
  409774:	push   ecx
  409775:	call   0xf8be:0x1937e87b
  40977c:	ins    BYTE PTR es:[edi],dx
  40977d:	and    ah,BYTE PTR [ebp+ebx*8+0x185e1ed5]
  409784:	jle    0x4097fd
  409786:	xchg   ebx,eax
  409787:	xchg   edi,eax
  409788:	retf   0x8b62
  40978b:	add    esp,DWORD PTR [eax+0x5327179e]
  409791:	and    eax,edi
  409793:	pop    ecx
  409794:	xor    al,0x3a
  409796:	mov    dh,0xcd
  409798:	sub    al,BYTE PTR [edx]
  40979a:	fwait
  40979b:	ins    DWORD PTR es:[edi],dx
  40979c:	fiadd  DWORD PTR [ebx+0x31]
  40979f:	pusha  
  4097a0:	mov    ds:0x7f8d0fc0,al
  4097a5:	sbb    al,0x88
  4097a7:	and    dh,BYTE PTR [ecx]
  4097a9:	add    BYTE PTR [esi+0x198ca43d],al
  4097af:	(bad)  
  4097b0:	push   0x70c89c98
  4097b5:	shl    DWORD PTR [esi-0x4],cl
  4097b8:	xor    ah,bl
  4097ba:	dec    edx
  4097bb:	test   ecx,ebx
  4097bd:	cmp    BYTE PTR [ebp*4-0x2067ed99],cl
  4097c4:	aas    
  4097c5:	mov    esp,0x2c515785
  4097ca:	enter  0xe4a7,0xe5
  4097ce:	mov    bh,0x19
  4097d0:	xor    al,0x37
  4097d3:	sbb    eax,0xd8a83b95
  4097d8:	xchg   edi,eax
  4097d9:	mov    al,0x9c
  4097db:	jp     0x409787
  4097dd:	or     BYTE PTR [ecx+ebx*1+0x5e],ah
  4097e1:	mov    eax,0xbbe00661
  4097e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e7:	cmp    esp,DWORD PTR [ebp+0x79]
  4097ea:	enter  0x2509,0x9
  4097ee:	arpl   WORD PTR [ecx],dx
  4097f0:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4097f2:	aas    
  4097f3:	rcr    DWORD PTR [ebp+0x7830687a],1
  4097f9:	inc    ebx
  4097fa:	ficom  WORD PTR [edi-0x9]
  4097fd:	into   
  4097fe:	cs cmp al,0x8c
  409801:	push   ebp
  409802:	cld    
  409803:	jecxz  0x409873
  409805:	push   ebx
  409806:	ja     0x409863
  409808:	jne    0x409854
  40980a:	mov    bh,0x7e
  40980c:	inc    ebp
  40980d:	call   0x11af:0x85917ccd
  409814:	mov    eax,DWORD PTR [ebp-0x62]
  409817:	push   DWORD PTR [eax-0x588926f1]
  40981d:	cmp    al,0x35
  40981f:	sub    esi,ecx
  409821:	pop    ebx
  409822:	xchg   edi,eax
  409823:	cmp    al,0xab
  409825:	xor    BYTE PTR [esi+0x3f],dl
  409828:	pushf  
  409829:	inc    esi
  40982a:	xchg   BYTE PTR [esi-0x69],bh
  40982d:	in     al,dx
  40982e:	aam    0xb0
  409830:	xor    DWORD PTR [ebp-0x3b],ecx
  409833:	and    al,0xc8
  409835:	scas   eax,DWORD PTR es:[edi]
  409836:	mov    ah,0x3d
  409838:	(bad)  
  409839:	jmp    0x9e269933
  40983e:	xchg   edi,eax
  40983f:	dec    edi
  409840:	fiadd  DWORD PTR [eax+0x4d0882f4]
  409846:	sbb    edi,DWORD PTR [eax-0x6e]
  409849:	fiadd  DWORD PTR [edi]
  40984b:	scas   eax,DWORD PTR es:[edi]
  40984c:	inc    ebp
  40984d:	fisubr DWORD PTR [edx-0x13]
  409850:	xchg   ebx,eax
  409851:	pop    ss
  409852:	mov    DWORD PTR [esp+ecx*8-0x623d6558],edi
  409859:	cwde   
  40985a:	xor    eax,DWORD PTR [ecx]
  40985c:	out    dx,al
  40985d:	mov    ch,0x90
  40985f:	fist   WORD PTR [eax+0x4a981133]
  409865:	jmp    0x872d72d0
  40986a:	test   al,0x98
  40986c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40986d:	add    al,0xfb
  40986f:	mov    ebp,0xa692da19
  409874:	dec    ebp
  409875:	jmp    DWORD PTR [eax+0x25cbfb82]
  40987b:	jg     0x409863
  40987d:	or     al,BYTE PTR [ecx]
  40987f:	stos   BYTE PTR es:[edi],al
  409880:	adc    edi,0xce6cbf7b
  409886:	sub    al,0x6f
  409888:	jmp    0x4098ff
  40988a:	int    0x9b
  40988c:	nop
  40988d:	and    ah,0xf8
  409890:	xorps  xmm1,xmm0
  409893:	fnsave [ebx+0x42]
  409896:	(bad)  [esi+0x35c54bdd]
  40989c:	cwde   
  40989d:	rol    ebp,cl
  40989f:	ss sahf 
  4098a1:	and    BYTE PTR [ecx+edx*2+0x17],cl
  4098a5:	cmc    
  4098a6:	ret    
  4098a7:	pop    ebp
  4098a8:	xchg   ebp,eax
  4098a9:	pushf  
  4098aa:	adc    bl,dh
  4098ac:	adc    DWORD PTR ds:0x3046bc8d,edx
  4098b2:	fwait
  4098b3:	rcl    BYTE PTR [ebp+0x1cd15b18],0x74
  4098ba:	jo     0x409870
  4098bc:	ins    DWORD PTR es:[edi],dx
  4098bd:	shr    BYTE PTR [edx-0x6ade2f25],cl
  4098c3:	cmp    eax,0x319243bf
  4098c8:	xlat   BYTE PTR ds:[ebx]
  4098c9:	into   
  4098ca:	xchg   ebp,eax
  4098cb:	ss mov al,0x64
  4098ce:	outs   dx,BYTE PTR ds:[esi]
  4098cf:	mov    ?,esp
  4098d1:	cmp    eax,0xe00e6d02
  4098d6:	stos   BYTE PTR es:[edi],al
  4098d7:	sbb    DWORD PTR [ebp-0x3a],ebx
  4098da:	cld    
  4098db:	add    DWORD PTR [edx],edi
  4098dd:	(bad)  
  4098de:	or     al,0x9
  4098e0:	loope  0x409899
  4098e2:	aas    
  4098e3:	sbb    eax,0xd8be427f
  4098e8:	(bad)  
  4098ea:	pushf  
  4098eb:	sar    BYTE PTR [edi-0x4f],0x3c
  4098ef:	loope  0x409904
  4098f1:	add    ecx,DWORD PTR [eax-0x48c00ef9]
  4098f7:	add    ebp,edx
  4098f9:	dec    esi
  4098fa:	sar    DWORD PTR [ebp+0x69e35db5],1
  409900:	or     cl,ch
  409902:	pop    ebx
  409903:	cwde   
  409904:	pop    edx
  409905:	sub    ch,BYTE PTR [ecx-0x72182ffa]
  40990b:	xor    esi,eax
  40990d:	xor    al,BYTE PTR [ecx+0x61a802af]
  409913:	lock jl 0x409920
  409916:	adc    ebx,DWORD PTR [eax]
  409918:	cld    
  409919:	and    DWORD PTR [eax-0x21],0xffffffca
  40991d:	call   DWORD PTR [eax-0x1fedd4e1]
  409923:	stc    
  409924:	or     al,0x9d
  409926:	in     eax,dx
  409927:	in     al,dx
  409928:	push   esp
  409929:	sub    edx,DWORD PTR [ebx-0x7b]
  40992c:	outs   dx,DWORD PTR ds:[esi]
  40992d:	xor    DWORD PTR [esi-0x2d540546],ebx
  409933:	pop    edx
  409934:	inc    edi
  409935:	hlt    
  409936:	pop    ss
  409937:	test   DWORD PTR [eax],esi
  409939:	mov    ds:0xea451ddb,al
  40993e:	xor    eax,0xb50b1f81
  409943:	pop    ds
  409944:	call   0x92fa:0x4715b136
  40994b:	mov    al,BYTE PTR [ebx]
  40994d:	mov    bh,ah
  40994f:	(bad)  
  409951:	pushf  
  409952:	jb     0x40995f
  409954:	mov    ds:0xc7bc632,eax
  409959:	or     dl,dl
  40995b:	cli    
  40995c:	mov    cl,0xe2
  40995e:	mov    WORD PTR [ebp+0x5f],fs
  409961:	sub    edx,0xffffffe9
  409964:	xchg   ebx,eax
  409965:	int    0xc6
  409967:	jb     0x4099a6
  409969:	dec    esp
  40996a:	sbb    DWORD PTR [edi+edi*4-0x7a],ebx
  40996e:	mov    ds,WORD PTR ds:0x79c538e2
  409974:	(bad)  
  409976:	push   ss
  409977:	lods   al,BYTE PTR ds:[esi]
  409978:	ret    
  409979:	mov    ecx,0x1175a735
  40997e:	jno    0x4099f7
  409980:	retf   0xb38e
  409983:	mov    bh,0x3a
  409985:	fidiv  DWORD PTR [eax-0x5ef9bf00]
  40998b:	sbb    BYTE PTR [ecx-0x69],0xb8
  40998f:	sbb    eax,0x319adb20
  409994:	ret    
  409995:	cmp    ecx,ebp
  409997:	pop    es
  409998:	mov    edx,0xcff82c5c
  40999d:	icebp  
  40999e:	mov    DWORD PTR [edx],edx
  4099a0:	mov    ah,0xaa
  4099a2:	fisub  WORD PTR [ebp-0x23078cef]
  4099a8:	cmp    edi,eax
  4099aa:	hlt    
  4099ab:	mov    esp,0x1e66d0e9
  4099b0:	jmp    0xab21:0x5f491870
  4099b7:	fstp   QWORD PTR [eax-0x2e996213]
  4099bd:	mov    ebx,DWORD PTR [edi-0x4f37a708]
  4099c3:	mov    eax,ds:0x7330c339
  4099c8:	loop   0x409a32
  4099ca:	es jge 0x409978
  4099cd:	sbb    BYTE PTR [edx-0x1e],bh
  4099d0:	loopne 0x4099cb
  4099d2:	mov    fs,WORD PTR [ebx]
  4099d4:	push   ebx
  4099d5:	sbb    BYTE PTR [edi+ebx*8+0x23],bl
  4099d9:	jnp    0x40997d
  4099db:	call   0xc0aca78f
  4099e0:	(bad)  
  4099e1:	out    dx,eax
  4099e2:	cs push eax
  4099e4:	cmp    al,0x87
  4099e6:	push   cs
  4099e7:	cmp    al,0x24
  4099e9:	(bad)  
  4099ea:	xchg   esp,eax
  4099eb:	loopne 0x409a39
  4099ed:	or     al,0x27
  4099ef:	lods   al,BYTE PTR ds:[esi]
  4099f0:	mov    DWORD PTR [edx+0x50],esi
  4099f3:	jbe    0x409a6a
  4099f5:	scas   eax,DWORD PTR es:[edi]
  4099f6:	or     edx,0xb56a0fa5
  4099fc:	test   eax,0xef3b9229
  409a01:	inc    esp
  409a02:	retf   
  409a03:	lea    ebp,[edi]
  409a05:	lea    ebp,[edx+esi*2]
  409a08:	xchg   al,bh
  409a0a:	(bad)  
  409a0b:	or     al,0x18
  409a0d:	rcl    BYTE PTR [ecx+0x2c],0xef
  409a11:	inc    edi
  409a12:	mov    ch,BYTE PTR [ebx-0x2b4cfb68]
  409a18:	mov    DWORD PTR fs:[edi],edi
  409a1b:	mov    eax,0x7bd4fc6b
  409a20:	repz push ebp
  409a22:	jb     0x409a7b
  409a24:	mov    ebx,0xfd46ac7b
  409a29:	test   eax,0x4bb90e11
  409a2e:	fs cmp al,0x26
  409a31:	lea    ecx,[esi]
  409a33:	in     eax,0x17
  409a35:	adc    BYTE PTR [eax],0x4
  409a38:	push   eax
  409a39:	xor    eax,DWORD PTR [ebp-0x52]
  409a3c:	imul   edx,DWORD PTR [edx+edi*2],0x55
  409a40:	cs loopne 0x409a55
  409a43:	push   ebp
  409a44:	fistp  QWORD PTR [ebx]
  409a46:	dec    ebp
  409a47:	xchg   ebp,eax
  409a48:	fistp  DWORD PTR ds:0x96f2031f
  409a4e:	mov    bh,0x2e
  409a50:	mov    ds:0x5c72cf00,eax
  409a55:	loop   0x409a7e
  409a57:	aad    0x6d
  409a59:	push   edi
  409a5a:	ret    
  409a5b:	sar    dl,0x1
  409a5e:	or     al,0x4f
  409a60:	sub    al,0xd4
  409a62:	sbb    BYTE PTR [edi-0x4ab98d6d],ch
  409a68:	cmc    
  409a69:	and    DWORD PTR [ebx-0x53596885],edx
  409a6f:	jmp    0x409a55
  409a71:	fist   DWORD PTR [ebp-0x71688136]
  409a77:	adc    DWORD PTR [edi+ecx*2+0x9bcf154],ebx
  409a7e:	arpl   dx,di
  409a80:	pop    es
  409a81:	push   es
  409a82:	aas    
  409a83:	push   eax
  409a84:	(bad)  
  409a85:	aaa    
  409a86:	adc    DWORD PTR [ebx],ebx
  409a88:	inc    edi
  409a89:	loopne 0x409a79
  409a8b:	out    0x82,eax
  409a8d:	sbb    BYTE PTR [esi-0x4e921a52],0x96
  409a94:	stos   BYTE PTR es:[edi],al
  409a95:	out    0x5,eax
  409a97:	mov    dl,bl
  409a99:	outs   dx,BYTE PTR ds:[esi]
  409a9a:	and    eax,0x19dc9f7f
  409a9f:	popa   
  409aa0:	frstor [edi]
  409aa2:	popf   
  409aa3:	scas   al,BYTE PTR es:[edi]
  409aa4:	sub    edi,DWORD PTR ds:0x8e806e8
  409aab:	add    ah,bh
  409aad:	push   eax
  409aae:	sbb    al,bh
  409ab0:	mov    ebx,0xdc70be62
  409ab5:	push   esi
  409ab6:	xor    DWORD PTR ds:0x1322136f,0x73
  409abd:	xor    DWORD PTR [edx],edx
  409abf:	add    dl,BYTE PTR [esi]
  409ac1:	enter  0x809a,0xf2
  409ac5:	jo     0x409a7c
  409ac7:	pop    eax
  409ac8:	mov    ds:0x16d5c8f2,eax
  409acd:	mov    esp,0x54d31749
  409ad2:	lods   eax,DWORD PTR ds:[esi]
  409ad3:	dec    edi
  409ad4:	mov    eax,ds:0xe0f7d57d
  409ad9:	inc    eax
  409ada:	jo     0x409b5b
  409adc:	sub    eax,0x83f947b1
  409ae1:	adc    BYTE PTR fs:[ecx-0x77192482],bh
  409ae8:	std    
  409ae9:	int    0x1a
  409aeb:	push   esi
  409aec:	or     al,0x12
  409aee:	jle    0x409a94
  409af0:	nop
  409af1:	jno    0x409a8b
  409af3:	sub    eax,0x469b5567
  409af8:	cmp    al,0xc0
  409afa:	loop   0x409ad4
  409afc:	in     eax,0x21
  409afe:	dec    ebp
  409aff:	mov    ds:0xf28bd9a7,eax
  409b04:	(bad)  
  409b05:	mov    edx,0x3262c97e
  409b0a:	or     eax,0x9eef4ffb
  409b0f:	mov    ah,0xe0
  409b11:	punpckhdq mm4,QWORD PTR [ebx+0x7b938e3]
  409b18:	push   edx
  409b19:	ret    0xc37b
  409b1c:	sbb    bl,bh
  409b1e:	sbb    al,0xf3
  409b20:	rol    DWORD PTR [ecx],cl
  409b22:	adc    dl,BYTE PTR [edx+ecx*8+0x39d119cc]
  409b29:	pop    ebp
  409b2a:	and    cl,cl
  409b2c:	int    0x43
  409b2e:	lea    ecx,[ebp-0x75]
  409b31:	sbb    esp,DWORD PTR [edi]
  409b33:	xor    edx,edi
  409b35:	dec    esp
  409b36:	inc    esi
  409b37:	pop    esp
  409b38:	add    bl,BYTE PTR [esi]
  409b3a:	shl    BYTE PTR [edi],1
  409b3c:	imul   edi,DWORD PTR [edx],0xb82df4a9
  409b42:	cmp    esi,DWORD PTR [edi]
  409b44:	mov    eax,ds:0x199287fb
  409b49:	fisub  WORD PTR [ebx]
  409b4b:	sar    BYTE PTR [ebp+0x61],cl
  409b4e:	jne    0x409ad2
  409b50:	sbb    bh,BYTE PTR [ebp+0x29c044ed]
  409b56:	aad    0x6c
  409b58:	or     bh,BYTE PTR [ecx+esi*8]
  409b5b:	loope  0x409bc8
  409b5d:	mov    ds:0x7fde5202,al
  409b62:	sti    
  409b63:	scas   al,BYTE PTR es:[edi]
  409b64:	mov    BYTE PTR [eax],0x4d
  409b67:	mov    dl,0xcf
  409b69:	retf   0x520
  409b6c:	inc    esi
  409b6d:	push   ecx
  409b6e:	add    BYTE PTR [ebx],ah
  409b70:	sbb    DWORD PTR [ebp-0x65b9e8ba],0xd69d537a
  409b7a:	push   ecx
  409b7b:	sub    dh,BYTE PTR [edx]
  409b7d:	outs   dx,BYTE PTR ds:[esi]
  409b7e:	daa    
  409b7f:	and    dl,BYTE PTR [edi+ebp*8-0x6c]
  409b83:	xor    BYTE PTR [edi],ch
  409b85:	test   esp,edx
  409b87:	orps   xmm0,XMMWORD PTR [ecx-0x38391610]
  409b8e:	mov    dl,0xc8
  409b90:	test   esp,0x4203512
  409b96:	sbb    esi,0xb01e112d
  409b9c:	les    esp,FWORD PTR [edx]
  409b9e:	sar    DWORD PTR fs:[edx-0x5a],1
  409ba2:	fsubr  DWORD PTR [eax+0x24cf6daf]
  409ba8:	mov    ds:0x7a556522,al
  409bad:	scas   al,BYTE PTR es:[edi]
  409bae:	mov    esp,ebp
  409bb0:	push   edi
  409bb1:	popa   
  409bb2:	push   esi
  409bb3:	lea    esp,[edx-0x3b]
  409bb6:	repnz cwde 
  409bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409bb9:	jns    0x409ba1
  409bbb:	jg     0x409bee
  409bbd:	xor    ecx,DWORD PTR [ecx-0x569e3af3]
  409bc3:	imul   ebx,DWORD PTR [ecx+0x72],0xffffffeb
  409bc7:	ja     0x409c2e
  409bc9:	nop
  409bca:	jg     0x409c38
  409bcc:	(bad)  
  409bcd:	ficom  WORD PTR [ecx-0x5b4c1112]
  409bd3:	in     al,0xd7
  409bd5:	pop    edx
  409bd6:	xor    edx,DWORD PTR [ebp-0x737abb12]
  409bdc:	pop    eax
  409bdd:	mov    bh,0x27
  409bdf:	mov    ebp,0xfd7ffae1
  409be4:	hlt    
  409be5:	jmp    0xeb1f:0x44084fc1
  409bec:	inc    esi
  409bed:	adc    al,0x61
  409bef:	mov    ah,0xd9
  409bf1:	nop
  409bf2:	adc    ch,BYTE PTR [edx]
  409bf4:	sub    edi,edi
  409bf6:	or     eax,0x26933d5
  409bfb:	mov    eax,ds:0x439be350
  409c00:	mov    dh,0xe1
  409c02:	sbb    al,0x1
  409c04:	aam    0x9b
  409c06:	in     eax,0xa8
  409c08:	add    BYTE PTR [edx],bl
  409c0a:	push   0xfffffff8
  409c0c:	push   esi
  409c0d:	test   eax,0xc3b2b59f
  409c12:	xor    eax,0xc5dff253
  409c17:	sbb    al,dl
  409c19:	dec    ebx
  409c1a:	mov    ?,WORD PTR [ecx+0x16]
  409c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c1e:	into   
  409c1f:	mov    eax,ds:0x90b39a02
  409c24:	pop    edx
  409c25:	pop    eax
  409c26:	push   edx
  409c27:	lea    eax,[ecx]
  409c29:	mov    dh,0xe4
  409c2b:	in     eax,dx
  409c2c:	test   eax,0x4b8da179
  409c31:	sub    BYTE PTR [eax+0x40],dl
  409c34:	inc    eax
  409c35:	inc    edi
  409c36:	sbb    DWORD PTR [esi+edx*2],ebx
  409c39:	and    BYTE PTR [edx],al
  409c3b:	sub    dl,BYTE PTR [ecx+0x24]
  409c3e:	dec    eax
  409c3f:	or     eax,0xfe935872
  409c44:	frndint 
  409c46:	aad    0xbc
  409c48:	fwait
  409c49:	jmp    0x5c822b29
  409c4e:	or     eax,0x1bb1cdb5
  409c53:	aas    
  409c54:	aaa    
  409c55:	push   cs
  409c56:	and    ebx,DWORD PTR [eax+0x7c]
  409c59:	shl    DWORD PTR [ecx],cl
  409c5b:	les    ecx,FWORD PTR ss:[edx-0x68c55c71]
  409c62:	dec    BYTE PTR [edi+0x30]
  409c65:	jns    0x409ce0
  409c67:	imul   esi,DWORD PTR [ecx-0x37],0x36
  409c6b:	cmp    BYTE PTR [ebx],0x49
  409c6e:	enter  0x11d3,0x20
  409c72:	into   
  409c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c74:	or     cl,BYTE PTR [eax-0x128ee04b]
  409c7a:	pop    esp
  409c7b:	push   0xffffff82
  409c7d:	xchg   edi,eax
  409c7e:	data16 jmp 0x409c1f
  409c81:	sahf   
  409c82:	shl    BYTE PTR [edx],0x7e
  409c85:	bound  ecx,QWORD PTR [eax+0x16a19d55]
  409c8b:	je     0x409c55
  409c8d:	xchg   edx,eax
  409c8e:	sub    eax,0x4463ba1c
  409c93:	xchg   esp,eax
  409c94:	pop    edi
  409c95:	adc    esi,DWORD PTR [ebx+0x1f6add10]
  409c9b:	jns    0x409c5e
  409c9d:	cs and al,0x54
  409ca0:	jne    0x409c53
  409ca2:	push   ecx
  409ca3:	test   BYTE PTR [esi+0x68],al
  409ca6:	fxch   st(6)
  409ca8:	xchg   esi,eax
  409ca9:	(bad)  
  409caa:	in     al,dx
  409cab:	adc    DWORD PTR [ebx-0x5d657d40],edi
  409cb1:	lods   eax,DWORD PTR ds:[esi]
  409cb2:	inc    esi
  409cb3:	push   edx
  409cb4:	sub    eax,0xf4bd529b
  409cb9:	cmp    al,0xa3
  409cbb:	sub    BYTE PTR [eax+0x9099cd7],bl
  409cc1:	fcom   DWORD PTR ds:0xeee63977
  409cc7:	(bad)  
  409cc8:	(bad)  [eax]
  409cca:	cld    
  409ccb:	xlat   BYTE PTR ds:[ebx]
  409ccc:	fsubr  st(5),st
  409cce:	xor    al,0x4a
  409cd0:	pop    ebx
  409cd1:	pushf  
  409cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cd3:	jmp    0xf6a21826
  409cd8:	mov    ds:0x631e1688,al
  409cdd:	dec    edi
  409cde:	inc    esp
  409cdf:	mov    edi,0xf0435f74
  409ce4:	pop    ds
  409ce5:	call   0xf482d6c0
  409cea:	and    DWORD PTR [ecx+edx*2+0x34501236],ebx
  409cf1:	mov    cl,0xbe
  409cf3:	dec    ecx
  409cf4:	data16 cmp ch,BYTE PTR [edx+0x713fc32]
  409cfb:	neg    DWORD PTR [ebx+0x2f3a1e]
  409d01:	fdiv   st(5),st
  409d03:	mov    cl,0x42
  409d05:	(bad)  
  409d06:	and    al,0x92
  409d08:	xor    bl,BYTE PTR [esi+0x35]
  409d0b:	xchg   esi,eax
  409d0c:	xlat   BYTE PTR ds:[bx]
  409d0e:	jnp    0x409d7f
  409d10:	mov    cl,0x99
  409d12:	dec    ecx
  409d13:	add    al,0x99
  409d15:	jg     0x409d0f
  409d17:	push   esp
  409d18:	mov    eax,0xb2183d82
  409d1d:	inc    esi
  409d1e:	(bad)  
  409d1f:	cdq    
  409d20:	sub    BYTE PTR [ebp-0x3],0x83
  409d24:	cld    
  409d25:	dec    ebx
  409d26:	lds    ecx,FWORD PTR [eax+ebp*8+0x76866240]
  409d2d:	jne    0x409d25
  409d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d30:	xchg   esp,eax
  409d31:	jge    0x409d15
  409d33:	pop    ds
  409d34:	sbb    dh,BYTE PTR [ebx+0x5e]
  409d37:	test   ebx,esp
  409d39:	inc    esi
  409d3a:	inc    eax
  409d3b:	mov    bl,0x72
  409d3d:	mov    dh,0x94
  409d3f:	inc    ebp
  409d40:	loop   0x409d33
  409d42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d43:	jle    0x409dac
  409d45:	jnp    0x409d31
  409d47:	int3   
  409d48:	mov    eax,0x3331b7c5
  409d4d:	dec    edi
  409d4e:	inc    ebp
  409d4f:	ret    0x3793
  409d52:	dec    edi
  409d53:	xchg   DWORD PTR [ebx-0x21],ecx
  409d56:	xor    al,0x1b
  409d58:	rcl    BYTE PTR [edx],1
  409d5a:	jbe    0x409db5
  409d5c:	jns    0x409d9f
  409d5e:	cmp    DWORD PTR [edx-0x4c],edi
  409d61:	jmp    0xe333:0xf2eb198d
  409d68:	sbb    al,0x6
  409d6a:	stos   BYTE PTR es:[edi],al
  409d6b:	aad    0x18
  409d6d:	sbb    DWORD PTR [edi+eiz*1-0x70292b3],ecx
  409d74:	bound  edx,QWORD PTR [edi-0x73021fe3]
  409d7a:	or     esi,DWORD PTR [edx-0x7e3b5c85]
  409d80:	cmp    eax,0x51eaffb8
  409d85:	add    ah,BYTE PTR [edx-0x57]
  409d88:	out    0x56,al
  409d8a:	fcom   QWORD PTR [ebp-0x7d]
  409d8d:	(bad)  
  409d8e:	outs   dx,BYTE PTR ds:[esi]
  409d8f:	or     BYTE PTR [edi+0x2b],cl
  409d92:	shl    DWORD PTR [esi],cl
  409d94:	(bad)  [edx-0x75]
  409d97:	push   eax
  409d98:	aad    0xcf
  409d9a:	out    dx,eax
  409d9b:	je     0x409db7
  409d9d:	jo     0x409d72
  409d9f:	cmp    bh,BYTE PTR [ebp-0x3f]
  409da2:	add    eax,0xbd546bff
  409da7:	ficomp DWORD PTR [edx-0x4e]
  409daa:	lods   al,BYTE PTR ds:[esi]
  409dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dac:	(bad)  
  409dad:	or     al,0xcb
  409daf:	aaa    
  409db0:	popa   
  409db1:	imul   esi,eax,0xd78402f2
  409db7:	adc    BYTE PTR [edi],ah
  409db9:	inc    ebp
  409dba:	pop    ss
  409dbb:	in     al,dx
  409dbc:	out    0x19,eax
  409dbe:	jmp    0x2f50:0x59917b0d
  409dc5:	shl    DWORD PTR [ecx+0x361f4aab],1
  409dcb:	call   0x7cafea02
  409dd0:	or     dh,dl
  409dd2:	cdq    
  409dd3:	sbb    al,0x35
  409dd5:	sub    ecx,edi
  409dd7:	dec    ebp
  409dd8:	mov    bh,0xf2
  409dda:	or     DWORD PTR [eax],edx
  409ddc:	shl    DWORD PTR [eax],cl
  409dde:	data16 int 0xcf
  409de1:	pop    ebp
  409de2:	sahf   
  409de3:	test   DWORD PTR [edi-0x53],0xccc263f0
  409dea:	ins    BYTE PTR es:[edi],dx
  409deb:	call   0x5254efaa
  409df0:	sub    eax,ecx
  409df2:	mov    DWORD PTR [ebp-0x4],eax
  409df5:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  409dfc:	mov    eax,DWORD PTR [ebp-0xc]
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	popf   
  40a2fb:	push   0x4b
  40a2fd:	push   esi
  40a2fe:	add    BYTE PTR cs:[edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	stos   BYTE PTR es:[edi],al
  40a307:	lds    eax,FWORD PTR [edi-0x35]
  40a30a:	test   eax,0x9c3f2dd7
  40a30f:	hlt    
  40a310:	mov    ebp,0xa8f9deee
  40a315:	ss pop es
  40a317:	pop    eax
  40a318:	outs   dx,DWORD PTR ds:[esi]
  40a319:	jle    0x40a335
  40a31b:	pop    ebx
  40a31c:	and    BYTE PTR [bx+si+0x3d],dh
  40a320:	adc    DWORD PTR [ecx+0x53],esp
  40a323:	lds    ecx,FWORD PTR [esi]
  40a325:	int3   
  40a326:	push   eax
  40a327:	pushf  
  40a328:	push   ss
  40a329:	mov    bl,0x34
  40a32b:	adc    DWORD PTR [edi-0x58eef202],eax
  40a331:	push   ss
  40a332:	iret   
  40a333:	sub    BYTE PTR [ebx],bl
  40a335:	cmc    
  40a336:	sahf   
  40a337:	sti    
  40a338:	inc    eax
  40a339:	sbb    BYTE PTR [ebx+0x56],al
  40a33c:	jle    0x40a360
  40a33e:	mov    dl,BYTE PTR [eax-0x49854f99]
  40a344:	lahf   
  40a345:	jge    0x40a352
  40a347:	popa   
  40a348:	mov    edi,0x92723c33
  40a34d:	cmp    eax,0x25229330
  40a352:	jmp    0xd7b86ec6
  40a357:	nop
  40a358:	jne    0x40a3af
  40a35a:	mov    ah,BYTE PTR ds:0x769ae0a2
  40a360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a361:	das    
  40a362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a363:	push   DWORD PTR [ecx]
  40a365:	mov    eax,ds:0xb714a5a6
  40a36a:	add    DWORD PTR [esi+0x368dabab],edi
  40a370:	mov    ds:0x4417cd00,al
  40a375:	mov    dh,BYTE PTR [ecx+ecx*1]
  40a378:	mov    al,0x26
  40a37a:	into   
  40a37b:	ja     0x40a306
  40a37d:	push   0xd587d097
  40a382:	mov    bh,0x23
  40a384:	sub    BYTE PTR [edi],ah
  40a386:	cdq    
  40a387:	out    0xe2,eax
  40a389:	inc    edi
  40a38a:	mov    ch,0xd7
  40a38c:	adc    al,0x9a
  40a38e:	retf   
  40a38f:	xor    bl,BYTE PTR [eax]
  40a391:	pop    ecx
  40a392:	ins    DWORD PTR es:[edi],dx
  40a393:	push   0xd
  40a395:	inc    esi
  40a396:	popa   
  40a397:	push   edx
  40a398:	pop    esp
  40a399:	scas   eax,DWORD PTR es:[edi]
  40a39a:	push   cs
  40a39b:	push   edx
  40a39c:	mov    ebp,0xc335ed04
  40a3a1:	jno    0x40a418
  40a3a3:	fwait
  40a3a4:	cmp    al,BYTE PTR [edx]
  40a3a6:	mov    edx,ecx
  40a3a8:	xor    eax,0xcf1618b
  40a3ad:	ins    DWORD PTR es:[edi],dx
  40a3ae:	test   DWORD PTR [edi-0x67],0x37cc67a7
  40a3b5:	shl    ebp,0x41
  40a3b8:	xor    edx,esp
  40a3ba:	(bad)  
  40a3bb:	jle    0x40a3f6
  40a3bd:	sub    DWORD PTR [ebx+0x4],edx
  40a3c0:	xor    eax,DWORD PTR [esi]
  40a3c2:	(bad)  
  40a3c3:	(bad)
  40a3c7:	xor    BYTE PTR [edi-0xb],bh
  40a3ca:	xor    BYTE PTR [ebp+ecx*4+0x1],ch
  40a3ce:	adc    edx,edi
  40a3d0:	sub    DWORD PTR [edx+0x5f86e81a],eax
  40a3d6:	pop    esi
  40a3d7:	in     al,dx
  40a3d8:	in     eax,0x70
  40a3da:	xchg   ebx,eax
  40a3db:	pushf  
  40a3dc:	mov    bh,0x13
  40a3de:	(bad)  
  40a3df:	and    al,0xbb
  40a3e1:	xchg   edx,eax
  40a3e2:	inc    eax
  40a3e3:	into   
  40a3e4:	push   0xbe7c69f
  40a3e9:	daa    
  40a3ea:	outs   dx,DWORD PTR ds:[esi]
  40a3eb:	bound  ebx,QWORD PTR [eax-0x43]
  40a3ee:	mov    eax,0xcfeebc95
  40a3f3:	cmp    BYTE PTR [eax-0x14],dl
  40a3f6:	push   eax
  40a3f7:	cli    
  40a3f8:	sti    
  40a3f9:	pop    es
  40a3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fb:	adc    al,0xbb
  40a3fd:	pop    ss
  40a3fe:	jno    0x40a3a4
  40a400:	inc    esp
  40a401:	fwait
  40a402:	addr16 dec ecx
  40a404:	dec    eax
  40a405:	jp     0x40a3ca
  40a407:	xchg   ebp,eax
  40a408:	xchg   ebx,eax
  40a409:	mov    al,0x6c
  40a40b:	mov    ecx,0x3b0abd90
  40a410:	mov    cl,0x28
  40a412:	xchg   ebp,eax
  40a413:	std    
  40a414:	mov    DWORD PTR ds:0x74d8d6af,ecx
  40a41a:	stc    
  40a41b:	(bad)  
  40a41c:	dec    ebp
  40a41d:	xchg   ecx,eax
  40a41e:	stos   BYTE PTR es:[di],al
  40a420:	lahf   
  40a421:	adc    ah,BYTE PTR [edi+eax*8-0x3ae71438]
  40a428:	pushf  
  40a429:	fmul   st,st(2)
  40a42b:	pop    eax
  40a42c:	sbb    BYTE PTR [ebx-0x2ad16fc8],ch
  40a432:	jno    0x40a3ec
  40a434:	xchg   esi,eax
  40a435:	rol    DWORD PTR [ebp-0x6c],cl
  40a438:	and    ecx,0xffffffe6
  40a43b:	inc    esp
  40a43c:	mov    al,0xc
  40a43e:	lahf   
  40a43f:	shl    DWORD PTR ds:0xa6d362cf,0xf1
  40a446:	cmovae edi,DWORD PTR [esi+ebp*4+0x321a8690]
  40a44e:	imul   esi,DWORD PTR [edi+0xd6d4235],0xd
  40a455:	dec    ebp
  40a456:	inc    eax
  40a457:	stos   BYTE PTR es:[edi],al
  40a458:	mov    esi,0x9078aec7
  40a45d:	rcl    al,1
  40a45f:	pop    esi
  40a460:	xor    al,0xff
  40a462:	test   DWORD PTR [edi+0x5c],ecx
  40a465:	mov    bl,0x50
  40a467:	mov    cl,0xf6
  40a469:	adc    esp,DWORD PTR [esp+ebp*4+0x82e8087]
  40a470:	in     eax,0xf5
  40a472:	retf   0x250c
  40a475:	push   edx
  40a476:	jno    0x40a4ce
  40a478:	js     0x40a40d
  40a47a:	rcl    BYTE PTR [ecx+edi*4],0x2e
  40a47e:	push   ds
  40a47f:	add    edi,DWORD PTR [ebp-0xa]
  40a482:	sti    
  40a483:	dec    edx
  40a484:	push   ecx
  40a485:	addr16 test al,0x8d
  40a488:	retf   0x3948
  40a48b:	iret   
  40a48c:	xchg   BYTE PTR [edx+eiz*1+0x7d6dff0f],al
  40a493:	aaa    
  40a494:	cmp    esi,0x29
  40a497:	adc    eax,DWORD PTR [esi]
  40a499:	pop    esp
  40a49a:	aad    0x48
  40a49c:	mov    edi,0xf5eb66b5
  40a4a1:	cld    
  40a4a2:	or     ecx,DWORD PTR [edx-0x24]
  40a4a5:	push   edx
  40a4a6:	in     al,dx
  40a4a7:	jmp    DWORD PTR [ecx-0x2fe0f907]
  40a4ad:	and    DWORD PTR [esi+0x743e47bf],0x4b
  40a4b4:	mov    cl,0xce
  40a4b6:	js     0x40a4c7
  40a4b8:	stos   BYTE PTR es:[edi],al
  40a4b9:	mov    ecx,0xe82562b8
  40a4be:	lahf   
  40a4bf:	jle    0x40a50f
  40a4c1:	add    eax,0xace55980
  40a4c6:	cli    
  40a4c7:	loop   0x40a535
  40a4c9:	(bad)  
  40a4ca:	inc    BYTE PTR [esi-0x610b5c66]
  40a4d0:	mov    BYTE PTR [ebx],dl
  40a4d2:	sub    BYTE PTR [edx-0x76],al
  40a4d5:	ins    DWORD PTR es:[edi],dx
  40a4d6:	xor    dl,BYTE PTR [eax]
  40a4d8:	nop
  40a4d9:	sub    esi,ebp
  40a4db:	aas    
  40a4dc:	pop    ds
  40a4dd:	repnz mov es,edi
  40a4e0:	cld    
  40a4e1:	pop    edx
  40a4e2:	push   edi
  40a4e3:	gs call 0x5458d436
  40a4e9:	adc    eax,0x268a71ba
  40a4ee:	fwait
  40a4ef:	outs   dx,BYTE PTR ds:[esi]
  40a4f0:	mov    edx,0xb5f5c151
  40a4f5:	push   ss
  40a4f6:	inc    edx
  40a4f7:	arpl   WORD PTR [eax-0x70],di
  40a4fa:	dec    edi
  40a4fb:	das    
  40a4fc:	and    esp,DWORD PTR [eax-0x67]
  40a4ff:	ret    0x755a
  40a502:	pop    esi
  40a503:	and    eax,esp
  40a505:	jns    0x40a514
  40a507:	push   ss
  40a508:	and    ebp,DWORD PTR [ecx+0x1d]
  40a50b:	adc    DWORD PTR [edi],esi
  40a50d:	or     DWORD PTR [ebx-0x2e],ebp
  40a510:	mov    ebp,0x6c1d25a2
  40a515:	leave  
  40a516:	push   es
  40a517:	je     0x40a576
  40a519:	imul   eax,DWORD PTR [edi-0x4d],0x6a
  40a51d:	jns    0x40a52c
  40a51f:	sub    BYTE PTR [esi+0x607b448f],al
  40a525:	ins    BYTE PTR es:[edi],dx
  40a526:	mov    al,0x17
  40a528:	xor    ebp,DWORD PTR [ebx]
  40a52a:	lahf   
  40a52b:	test   DWORD PTR [eax-0x19],esi
  40a52e:	icebp  
  40a52f:	xchg   BYTE PTR [esi+esi*1+0x33],cl
  40a533:	daa    
  40a534:	inc    ecx
  40a535:	and    eax,0x718b2b7a
  40a53a:	push   esi
  40a53b:	pop    ecx
  40a53c:	loope  0x40a594
  40a53e:	inc    edx
  40a53f:	cdq    
  40a540:	add    esp,esi
  40a542:	in     eax,dx
  40a543:	pop    ebx
  40a544:	adc    al,0x32
  40a546:	adc    eax,0xc7328d9
  40a54b:	adc    al,0xa
  40a54d:	out    0xd2,eax
  40a54f:	xchg   ecx,eax
  40a550:	sub    bp,WORD PTR [edi-0x5d]
  40a554:	jns    0x40a5ac
  40a556:	jge    0x40a4d9
  40a558:	xchg   esi,eax
  40a559:	aad    0xc8
  40a55b:	pop    ebp
  40a55c:	sub    al,BYTE PTR [ebp+0x2b]
  40a55f:	xlat   BYTE PTR ds:[ebx]
  40a560:	inc    esp
  40a561:	addr16 aas 
  40a563:	mov    esi,DWORD PTR [ebx+0x13525777]
  40a569:	or     esi,0x47abb5fc
  40a56f:	sub    bh,dh
  40a571:	(bad)  
  40a573:	mov    ecx,DWORD PTR [esi+0x21356639]
  40a579:	xchg   ebp,eax
  40a57a:	pop    DWORD PTR [esi+0x638918a5]
  40a580:	mov    bh,0x4f
  40a582:	push   es
  40a583:	or     esi,ecx
  40a585:	add    DWORD PTR ds:0x4db3f16a,edi
  40a58b:	les    esi,FWORD PTR [eax+0x2196c6d3]
  40a591:	sbb    eax,DWORD PTR [edi+0x64]
  40a594:	pop    edi
  40a595:	cmp    BYTE PTR [eax-0x64],bh
  40a598:	jg     0x40a5ed
  40a59a:	or     ebx,DWORD PTR [ecx+0x3728a372]
  40a5a0:	std    
  40a5a1:	xchg   ebp,eax
  40a5a2:	cmc    
  40a5a3:	mov    BYTE PTR [eax],0x8d
  40a5a6:	inc    edx
  40a5a7:	loope  0x40a5b3
  40a5a9:	in     al,dx
  40a5aa:	sub    DWORD PTR [edi+0x30],ecx
  40a5ad:	pop    ss
  40a5ae:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40a5b0:	push   0xb678a33e
  40a5b5:	mov    edx,0x89051c7
  40a5ba:	add    al,bl
  40a5bc:	jmp    0x4dee:0xaf3d0478
  40a5c3:	lock xchg ecx,eax
  40a5c5:	pop    esp
  40a5c6:	pop    edi
  40a5c7:	mov    ch,0x89
  40a5c9:	int3   
  40a5ca:	outs   dx,DWORD PTR ds:[esi]
  40a5cb:	fdiv   st,st(6)
  40a5cd:	lods   al,BYTE PTR ds:[esi]
  40a5ce:	lock cmp DWORD PTR [eax],edi
  40a5d1:	push   edx
  40a5d2:	adc    al,0xb6
  40a5d4:	mov    DWORD PTR [esi-0x7d4ba5fe],ebp
  40a5da:	mov    eax,0x9062996a
  40a5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5e0:	je     0x40a564
  40a5e2:	les    esp,FWORD PTR [edx+0x691bb6cc]
  40a5e8:	or     DWORD PTR [ebx+eiz*2],ebp
  40a5eb:	leave  
  40a5ec:	dec    ecx
  40a5ed:	repz pop ebp
  40a5ef:	rcl    BYTE PTR [ecx],1
  40a5f1:	or     al,0x91
  40a5f3:	lahf   
  40a5f4:	dec    esp
  40a5f5:	jmp    0x36004dba
  40a5fa:	aam    0xbe
  40a5fc:	pop    ss
  40a5fd:	pop    edi
  40a5fe:	jae    0x40a5fd
  40a600:	push   es
  40a601:	and    al,0x54
  40a603:	mov    ds:0x61a4898,al
  40a608:	ins    BYTE PTR es:[edi],dx
  40a609:	ret    
  40a60a:	sbb    al,0x36
  40a60c:	push   edx
  40a60d:	xchg   ecx,eax
  40a60e:	cmp    BYTE PTR [edi-0x56954c22],cl
  40a614:	mov    edx,0xfe0b2841
  40a619:	push   ebx
  40a61a:	pop    ds
  40a61b:	cmp    edi,ecx
  40a61d:	adc    BYTE PTR [eax-0xf788af3],al
  40a623:	mov    ah,0xce
  40a625:	jmp    0x40a65a
  40a627:	fstp   QWORD PTR ds:[ecx+edi*8-0x4d7dce29]
  40a62f:	dec    edi
  40a630:	xchg   ecx,eax
  40a631:	push   esi
  40a632:	dec    ebx
  40a633:	xor    al,0x2e
  40a635:	cs jns 0x40a5bc
  40a638:	adc    BYTE PTR [eax],dh
  40a63a:	mov    dh,0x9f
  40a63c:	push   0xffffff91
  40a63e:	jge    0x40a626
  40a640:	add    eax,0x6abd857b
  40a645:	aam    0xf1
  40a647:	clc    
  40a648:	and    esp,DWORD PTR [ecx]
  40a64a:	mov    cl,0xa5
  40a64c:	pusha  
  40a64d:	and    eax,DWORD PTR [edx+0x5b85e000]
  40a653:	daa    
  40a654:	aaa    
  40a655:	cmp    edi,DWORD PTR [edi+0x41]
  40a658:	leave  
  40a659:	inc    esp
  40a65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65b:	mov    ds:0xabb27118,eax
  40a660:	and    esp,0x38ead9ea
  40a666:	nop
  40a667:	bound  esp,QWORD PTR [edx]
  40a669:	aas    
  40a66a:	cmp    al,0xa3
  40a66c:	inc    esp
  40a66d:	jns    0x40a6d5
  40a66f:	sub    DWORD PTR [ecx+0x7f],esp
  40a672:	fs inc esi
  40a674:	jne    0x40a675
  40a676:	sti    
  40a677:	push   edi
  40a678:	leave  
  40a679:	stc    
  40a67a:	add    esi,ebx
  40a67c:	sbb    ch,dh
  40a67e:	mov    al,ds:0xcfac87cc
  40a683:	and    eax,eax
  40a685:	xlat   BYTE PTR ds:[ebx]
  40a686:	(bad)  [esi+eiz*4]
  40a689:	adc    DWORD PTR [edx+0x1d],ecx
  40a68c:	sub    DWORD PTR [edx+edi*1],eax
  40a68f:	ds dec eax
  40a691:	sahf   
  40a692:	bswap  esi
  40a694:	enter  0xe33,0x49
  40a698:	push   ds
  40a699:	mov    ch,0x30
  40a69b:	cmp    al,0xb
  40a69d:	or     eax,0x15e69692
  40a6a2:	push   sp
  40a6a4:	(bad)  
  40a6a5:	mov    BYTE PTR [ebx+0x299e439f],cl
  40a6ab:	(bad)  
  40a6ac:	jp     0x40a6b4
  40a6ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6af:	xchg   esi,eax
  40a6b0:	stc    
  40a6b1:	aaa    
  40a6b2:	jle    0x40a6fc
  40a6b4:	inc    eax
  40a6b5:	jl     0x40a67a
  40a6b7:	iretw  
  40a6b9:	jnp    0x40a660
  40a6bb:	sub    BYTE PTR [edx],dl
  40a6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6be:	push   es
  40a6bf:	or     ch,0x6d
  40a6c2:	stos   BYTE PTR es:[edi],al
  40a6c3:	pop    ecx
  40a6c4:	jne    0x40a6a3
  40a6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c7:	fmul   QWORD PTR [ebp-0x6f]
  40a6ca:	mov    ah,0x7
  40a6cc:	ror    edi,cl
  40a6ce:	out    0x85,al
  40a6d0:	mov    ds:0xc94e441a,eax
  40a6d5:	retf   0xfb3d
  40a6d8:	push   ebp
  40a6d9:	test   eax,0xc62559b3
  40a6de:	xor    cl,ch
  40a6e0:	pusha  
  40a6e1:	mov    bl,0x1c
  40a6e3:	mov    edx,esi
  40a6e5:	not    BYTE PTR [esi-0x11]
  40a6e8:	(bad)  
  40a6ea:	cld    
  40a6eb:	(bad)  
  40a6ed:	popa   
  40a6ee:	inc    esi
  40a6ef:	lock imul eax,DWORD PTR [edx+0x6f],0x210a5b9a
  40a6f7:	(bad)  
  40a6f9:	mov    ebp,0x11e73bc
  40a6fe:	xchg   DWORD PTR [ecx],edi
  40a700:	adc    DWORD PTR [ebx],esi
  40a702:	xor    al,0xd5
  40a704:	ja     0x40a6c9
  40a706:	jno    0x40a699
  40a708:	sar    BYTE PTR [edi-0x72],1
  40a70b:	loopne 0x40a75f
  40a70d:	inc    ecx
  40a70e:	ret    
  40a70f:	mov    bh,0x91
  40a711:	xchg   edi,eax
  40a712:	cmp    edx,DWORD PTR ds:0x659dcae2
  40a718:	sbb    esi,eax
  40a71a:	mov    dh,dh
  40a71c:	js     0x40a6dc
  40a71e:	xchg   DWORD PTR [eax],eax
  40a720:	ss int 0xc0
  40a723:	xchg   esi,eax
  40a724:	fs scas al,BYTE PTR es:[edi]
  40a726:	ret    
  40a727:	ror    BYTE PTR [ebp+0x2f],0x4e
  40a72b:	jmp    0x1b0f:0xb9ead94d
  40a732:	xchg   edi,eax
  40a733:	mov    dh,0xb6
  40a735:	(bad)  
  40a736:	daa    
  40a737:	outs   dx,DWORD PTR ds:[esi]
  40a738:	retf   
  40a739:	xlat   BYTE PTR ds:[ebx]
  40a73a:	repnz cmp ebp,DWORD PTR ds:0xee9ee53b
  40a741:	add    al,0x5
  40a743:	push   esi
  40a744:	test   DWORD PTR [esi],eax
  40a746:	push   edx
  40a747:	and    esi,edi
  40a749:	xor    DWORD PTR [esp+eiz*8+0x39],eax
  40a74d:	jb     0x40a6dd
  40a74f:	repnz mov ah,BYTE PTR [edx-0x3c1cfe8a]
  40a756:	adc    al,0xe1
  40a758:	into   
  40a759:	add    eax,0x8233612d
  40a75e:	pusha  
  40a75f:	lea    ebx,[ebx+ecx*2]
  40a762:	mov    ch,0x7c
  40a764:	enter  0x75e5,0xf2
  40a768:	cmp    cl,cl
  40a76a:	mov    esp,0xc4438717
  40a76f:	lods   eax,DWORD PTR ds:[esi]
  40a770:	or     BYTE PTR [ecx],bl
  40a772:	mov    WORD PTR [edx-0x3c7012d6],es
  40a778:	xchg   ebp,eax
  40a779:	xor    eax,0x3793aa9a
  40a77e:	inc    DWORD PTR ds:0xb8c81c92
  40a784:	or     bh,dh
  40a786:	(bad)  
  40a787:	frstor [edx-0x2013976a]
  40a78d:	jbe    0x40a806
  40a78f:	(bad)  
  40a790:	pop    esp
  40a791:	sbb    al,0xda
  40a793:	mov    al,0xa3
  40a795:	fsub   st,st(1)
  40a797:	xchg   esi,eax
  40a798:	add    ah,0xf3
  40a79b:	fucomip st,st(5)
  40a79d:	mov    edi,esi
  40a79f:	mov    edi,0x79620477
  40a7a4:	mov    dl,0x5b
  40a7a6:	mov    al,ds:0xd07fe403
  40a7ab:	jbe    0x40a7d3
  40a7ad:	sub    eax,0x84532d22
  40a7b2:	stos   DWORD PTR es:[edi],eax
  40a7b3:	in     eax,0xf
  40a7b5:	(bad)  
  40a7b6:	dec    ebx
  40a7b7:	push   ds
  40a7b8:	or     eax,0x9024a65e
  40a7bd:	or     DWORD PTR [ecx],0x41
  40a7c0:	xor    DWORD PTR [esi+0x59],esp
  40a7c3:	dec    ebx
  40a7c4:	sub    dh,ch
  40a7c6:	(bad)  
  40a7c7:	and    eax,0x39519ade
  40a7cc:	jbe    0x40a849
  40a7ce:	jl     0x40a834
  40a7d0:	and    edx,DWORD PTR [ecx]
  40a7d2:	lahf   
  40a7d3:	or     ah,dl
  40a7d5:	je     0x40a821
  40a7d7:	std    
  40a7d8:	dec    eax
  40a7d9:	ins    DWORD PTR es:[edi],dx
  40a7da:	loopne 0x40a809
  40a7dc:	inc    ecx
  40a7dd:	fbld   TBYTE PTR [eax+0x4cd20ef7]
  40a7e4:	ds jecxz 0x40a800
  40a7e7:	repz jb 0x40a774
  40a7ea:	pop    edi
  40a7eb:	push   ss
  40a7ec:	xchg   esi,eax
  40a7ed:	pop    edi
  40a7ee:	shl    DWORD PTR [edi-0x77],1
  40a7f1:	xor    bh,ch
  40a7f3:	loopne 0x40a7cc
  40a7f5:	iret   
  40a7f6:	ins    BYTE PTR es:[edi],dx
  40a7f7:	ret    0x2b1b
  40a7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7fb:	pop    ecx
  40a7fc:	jmp    0x40a7a8
  40a7fe:	frstor [esi]
  40a800:	xor    eax,DWORD PTR [edi-0x22]
  40a803:	mov    al,ds:0xa8e1b7e5
  40a808:	retf   0x189
  40a80b:	iret   
  40a80c:	cmp    eax,0x7ab27d9b
  40a811:	inc    edx
  40a812:	(bad)  
  40a813:	out    dx,eax
  40a814:	je     0x40a7d6
  40a816:	out    0x41,al
  40a818:	xchg   esi,eax
  40a819:	pop    esi
  40a81a:	inc    edx
  40a81b:	push   cs
  40a81c:	out    0x6,eax
  40a81e:	ror    dh,0xdd
  40a821:	icebp  
  40a822:	inc    ebx
  40a823:	aas    
  40a824:	aaa    
  40a825:	clc    
  40a826:	shr    DWORD PTR [edx],1
  40a828:	add    BYTE PTR [ecx+esi*8],al
  40a82b:	mov    ah,BYTE PTR [eax]
  40a82d:	fcomp  QWORD PTR [eax-0x6005423d]
  40a833:	sub    ecx,DWORD PTR [eax]
  40a835:	(bad)  
  40a837:	fbstp  TBYTE PTR [ecx+ebp*1+0x4682c51b]
  40a83e:	jecxz  0x40a833
  40a840:	shr    BYTE PTR [eax+0x465cde60],1
  40a846:	(bad)  
  40a847:	xlat   BYTE PTR ds:[ebx]
  40a848:	adc    cl,bl
  40a84a:	test   BYTE PTR [edi+0x56],0x18
  40a84e:	out    0x6a,eax
  40a850:	mov    ch,0x54
  40a852:	adc    BYTE PTR [ebx-0x5c438f07],0x79
  40a859:	pop    edi
  40a85a:	shr    BYTE PTR [esi],1
  40a85c:	fld    QWORD PTR [ebx-0x74982487]
  40a862:	mov    dh,0x10
  40a864:	pop    es
  40a865:	daa    
  40a866:	add    BYTE PTR [ebp-0x38],0xc8
  40a86a:	push   edx
  40a86b:	std    
  40a86c:	inc    eax
  40a86d:	add    al,0x43
  40a86f:	arpl   bx,si
  40a871:	push   edx
  40a872:	sub    BYTE PTR [edx],ch
  40a874:	mov    ah,0x3d
  40a876:	mov    fs,WORD PTR [ebp-0xc0a3e0e]
  40a87c:	sbb    esp,esi
  40a87e:	and    ch,bl
  40a880:	loope  0x40a817
  40a882:	push   edx
  40a883:	ret    
  40a884:	jbe    0x40a8d3
  40a886:	cli    
  40a887:	(bad)  
  40a888:	or     BYTE PTR [edx+edx*2-0x23],0x14
  40a88d:	inc    edi
  40a88e:	in     al,dx
  40a88f:	add    al,BYTE PTR [ebp+0x2e205cc8]
  40a895:	add    BYTE PTR [esp+ecx*4+0x2f],ah
  40a899:	or     edi,ecx
  40a89b:	sub    DWORD PTR [ecx+0x10],ecx
  40a89e:	and    DWORD PTR [ebp-0x12],edx
  40a8a1:	cmp    DWORD PTR [eax-0x66],edi
  40a8a4:	cs cli 
  40a8a6:	inc    ebx
  40a8a7:	push   edi
  40a8a8:	inc    edi
  40a8a9:	xor    eax,0xc0014220
  40a8ae:	fdivr  DWORD PTR [edi-0x574a84ee]
  40a8b4:	stc    
  40a8b5:	pop    ss
  40a8b6:	ret    
  40a8b7:	mov    ds:0x9c4dd927,eax
  40a8bc:	mov    ds:0xe99deb73,al
  40a8c1:	leave  
  40a8c2:	(bad)  
  40a8c3:	push   0xffffffc9
  40a8c5:	shr    BYTE PTR [esi],cl
  40a8c7:	push   eax
  40a8c8:	cmp    bl,BYTE PTR [edx+0x69]
  40a8cb:	popf   
  40a8cc:	adc    esp,DWORD PTR [eax]
  40a8ce:	xchg   esp,eax
  40a8cf:	xor    esp,edi
  40a8d1:	cli    
  40a8d2:	mov    cl,0xea
  40a8d4:	stc    
  40a8d5:	pop    ecx
  40a8d6:	jbe    0x40a885
  40a8d8:	rol    BYTE PTR [eax+ecx*8-0x618ffd3b],cl
  40a8df:	jge    0x40a8f5
  40a8e1:	and    BYTE PTR [ecx-0x23880d1e],bh
  40a8e7:	mov    ds:0x2874afa4,al
  40a8ec:	sti    
  40a8ed:	jl     0x40a893
  40a8ef:	inc    esi
  40a8f0:	dec    BYTE PTR [esi+edi*4]
  40a8f3:	dec    eax
  40a8f4:	pop    ss
  40a8f5:	mov    eax,ds:0x9cf227bc
  40a8fa:	fidiv  WORD PTR [esi+ebx*4-0x656ddc63]
  40a901:	fisttp WORD PTR [ebx]
  40a903:	cmp    BYTE PTR [eax-0x7f01f437],0x22
  40a90a:	xlat   BYTE PTR ds:[ebx]
  40a90b:	jl     0x40a90d
  40a90d:	xchg   esp,eax
  40a90e:	gs push ds
  40a910:	sbb    eax,0x9a4daba0
  40a915:	pop    es
  40a916:	in     eax,0xed
  40a918:	ss adc dl,bl
  40a91b:	mov    ah,0xe7
  40a91d:	iret   
  40a91e:	sub    al,dh
  40a920:	sub    DWORD PTR [esi-0x7eaa90a0],ecx
  40a926:	fisubr WORD PTR [esi+ebx*8+0x27]
  40a92a:	into   
  40a92b:	jmp    0x40a9ac
  40a92d:	es push edi
  40a92f:	adc    BYTE PTR [edi+0x2d],bl
  40a932:	mov    bh,0x8f
  40a934:	aas    
  40a935:	sbb    eax,0xbbc74ee9
  40a93a:	in     al,dx
  40a93b:	mov    bh,0x1c
  40a93d:	fsubr  DWORD PTR [edx+0x3a]
  40a940:	push   0xffffffa4
  40a942:	push   ds
  40a943:	gs fcomp st(2)
  40a946:	lock sbb DWORD PTR [ecx],0xffffffff
  40a94a:	pop    ecx
  40a94b:	cmp    DWORD PTR [esi-0x39],ebx
  40a94e:	daa    
  40a94f:	mov    esi,0x239b0b36
  40a954:	xor    eax,0xf4e2ca84
  40a959:	popa   
  40a95a:	in     al,dx
  40a95b:	test   eax,0xe0ef928b
  40a960:	loopne 0x40a99e
  40a962:	pushf  
  40a963:	dec    esp
  40a964:	and    ecx,ebp
  40a966:	in     eax,dx
  40a967:	popa   
  40a968:	or     al,0x39
  40a96a:	test   eax,0xf045e3f9
  40a96f:	or     DWORD PTR [ecx-0x73],0x562709ec
  40a976:	adc    eax,0x5ff3b59c
  40a97b:	cmp    edx,ecx
  40a97d:	jo     0x40a951
  40a97f:	je     0x40a9bf
  40a981:	pop    ebp
  40a982:	sahf   
  40a983:	mov    esi,0x9276461d
  40a988:	aam    0xf1
  40a98a:	int    0x2c
  40a98c:	sti    
  40a98d:	ret    0xe1e6
  40a990:	in     eax,0x1e
  40a992:	clc    
  40a993:	inc    eax
  40a994:	rcl    DWORD PTR [ebp+0x769231b],0x1a
  40a99b:	aas    
  40a99c:	sub    esp,DWORD PTR [ebx]
  40a99e:	mov    al,0x14
  40a9a0:	shl    DWORD PTR [eax-0x2b],cl
  40a9a3:	hlt    
  40a9a4:	imul   ebp,edx,0xffffff94
  40a9a7:	dec    ecx
  40a9a8:	push   ebp
  40a9a9:	sub    eax,0xcedc131d
  40a9ae:	out    0xa2,eax
  40a9b0:	push   cs
  40a9b1:	idiv   DWORD PTR [edx]
  40a9b3:	push   es
  40a9b4:	sub    eax,0x59d41320
  40a9b9:	and    ah,BYTE PTR [edx+eiz*2]
  40a9bc:	cmp    al,0x55
  40a9be:	hlt    
  40a9bf:	jg     0x40aa01
  40a9c1:	aam    0xf5
  40a9c3:	lahf   
  40a9c4:	xchg   esi,eax
  40a9c5:	push   eax
  40a9c6:	leave  
  40a9c7:	push   eax
  40a9c8:	repz dec edx
  40a9ca:	sub    esp,DWORD PTR [eax-0x791c6e03]
  40a9d0:	(bad)  
  40a9d1:	cmp    BYTE PTR [esi-0x29],bh
  40a9d4:	call   0xc85a941c
  40a9d9:	leave  
  40a9da:	ret    
  40a9db:	data16 fmul st,st(1)
  40a9de:	cmp    ecx,0x1c3da7e6
  40a9e4:	lahf   
  40a9e5:	mov    esi,0xaa1e802b
  40a9ea:	pop    edi
  40a9eb:	jns    0x40aa69
  40a9ed:	idiv   ebx
  40a9ef:	mov    ch,0x94
  40a9f1:	lds    edx,FWORD PTR [ecx-0x32a18012]
  40a9f7:	xchg   DWORD PTR [edx+0x5],edx
  40a9fa:	and    DWORD PTR [esi+0x8de60be],esi
  40aa00:	xor    esp,DWORD PTR [esi-0x6c688f73]
  40aa06:	pop    ss
  40aa07:	ror    BYTE PTR [edx+esi*2-0x55],1
  40aa0b:	sahf   
  40aa0c:	push   ds
  40aa0d:	daa    
  40aa0e:	cdq    
  40aa0f:	push   edi
  40aa10:	(bad)  
  40aa12:	mov    eax,ds:0xd3c98f10
  40aa17:	adc    DWORD PTR [edx-0x4d],eax
  40aa1a:	jmp    0x6b31:0x2c10711e
  40aa21:	xor    ecx,esp
  40aa23:	test   DWORD PTR [eax+0x77],ecx
  40aa26:	inc    eax
  40aa27:	adc    al,0xd
  40aa2a:	aaa    
  40aa2b:	xor    eax,0x3c4c9a1f
  40aa30:	aad    0x56
  40aa32:	fdivr  QWORD PTR [ebx-0x7629ecf6]
  40aa38:	xchg   edi,eax
  40aa39:	lahf   
  40aa3a:	jo     0x40aa10
  40aa3c:	(bad)  
  40aa3d:	adc    al,bl
  40aa3f:	sub    ah,cl
  40aa41:	aaa    
  40aa42:	lahf   
  40aa43:	add    BYTE PTR [eax],bl
  40aa45:	repnz aas 
  40aa47:	(bad)  
  40aa48:	pop    esi
  40aa49:	add    bl,dl
  40aa4b:	dec    esp
  40aa4c:	leave  
  40aa4d:	aam    0x35
  40aa4f:	pop    esp
  40aa50:	xchg   edx,eax
  40aa51:	(bad)  
  40aa52:	fstp   TBYTE PTR [ecx+esi*2-0x45]
  40aa56:	mov    bl,0xfc
  40aa58:	das    
  40aa59:	cdq    
  40aa5a:	xchg   ebp,eax
  40aa5b:	leave  
  40aa5c:	aaa    
  40aa5d:	mov    esi,0x84aee847
  40aa62:	ins    BYTE PTR es:[edi],dx
  40aa63:	push   esp
  40aa64:	add    al,0x98
  40aa66:	add    DWORD PTR [edi+0x2d0731e],esp
  40aa6c:	jge    0x40aa64
  40aa6e:	pushf  
  40aa6f:	cld    
  40aa70:	add    ch,BYTE PTR [edx+0x60]
  40aa73:	xor    eax,0xcd8a6972
  40aa78:	addr16 sti 
  40aa7a:	mov    esi,edi
  40aa7c:	mov    eax,0x6433881a
  40aa81:	les    edx,FWORD PTR [bp+di-0x6d]
  40aa85:	aas    
  40aa86:	mov    ecx,0x91d2d16a
  40aa8b:	lods   eax,DWORD PTR ds:[esi]
  40aa8c:	jmp    0x776360ba
  40aa91:	dec    ebx
  40aa92:	jmp    0x93f5:0xcf8020a9
  40aa99:	mov    DWORD PTR gs:0x9d17d7bc,esp
  40aaa0:	jecxz  0x40aa24
  40aaa2:	ja     0x40aac4
  40aaa4:	push   0xb514173b
  40aaa9:	cmp    eax,DWORD PTR [eax]
  40aaab:	mov    edi,0x81dd873c
  40aab0:	xor    DWORD PTR [edx-0x6d027f24],eax
  40aab6:	dec    esi
  40aab7:	dec    edi
  40aab8:	imul   edx,ebx,0xce9cd7
  40aabe:	and    ebp,DWORD PTR [edx+0xac5652c]
  40aac4:	fwait
  40aac5:	cs ret 
  40aac7:	sub    al,0x14
  40aac9:	jl     0x40aa8f
  40aacb:	(bad)  
  40aacc:	mov    esi,0xaf381f2
  40aad1:	lock xor BYTE PTR [ebx],bl
  40aad4:	and    dh,BYTE PTR ds:[edi+0x71686273]
  40aadb:	push   edi
  40aadc:	xchg   ecx,eax
  40aadd:	xchg   edi,eax
  40aade:	(bad)  
  40aadf:	xchg   ecx,eax
  40aae0:	lods   eax,DWORD PTR ds:[esi]
  40aae1:	mov    ebx,0x487001c4
  40aae6:	cmp    ecx,DWORD PTR [edi+0xa]
  40aae9:	test   DWORD PTR [edi+0x30],0x8f4735c6
  40aaf0:	inc    ebx
  40aaf1:	jp     0x40aa9b
  40aaf3:	jb     0x40aac9
  40aaf5:	aas    
  40aaf6:	test   DWORD PTR [eax],ebx
  40aaf8:	mov    ds:0x7c5e51d8,al
  40aafd:	std    
  40aafe:	mov    bh,0x3e
  40ab00:	jnp    0x40aaa8
  40ab02:	imul   ecx,DWORD PTR [edi+0x66],0xffffff9b
  40ab06:	call   0x4343882
  40ab0b:	loope  0x40ab4d
  40ab0d:	mov    edi,0x9cf124fa
  40ab12:	add    eax,0x73aa50f4
  40ab17:	lahf   
  40ab18:	popa   
  40ab19:	add    DWORD PTR [edx-0x26c729fd],ebp
  40ab1f:	ret    
  40ab20:	hlt    
  40ab21:	adc    DWORD PTR [eax+edi*8],edi
  40ab24:	in     eax,dx
  40ab25:	add    eax,0xaecd6de1
  40ab2a:	pop    esi
  40ab2b:	mov    dl,0x68
  40ab2d:	test   BYTE PTR [esi-0x5d34a004],dh
  40ab33:	ret    
  40ab34:	rcl    BYTE PTR [esi+esi*1-0x49b34eb0],0x27
  40ab3c:	and    al,0x79
  40ab3e:	jecxz  0x40aaf4
  40ab40:	add    eax,0x97ca4f0c
  40ab45:	mul    BYTE PTR [edx]
  40ab47:	std    
  40ab48:	cmp    DWORD PTR [edx+0x5a],esp
  40ab4b:	ja     0x40ab7d
  40ab4d:	lods   eax,DWORD PTR ds:[esi]
  40ab4e:	pop    eax
  40ab4f:	bound  esp,QWORD PTR [ebx+eiz*1+0x741c9cf5]
  40ab56:	and    DWORD PTR [esi+ebx*1-0x1485c75c],ebp
  40ab5d:	les    ecx,FWORD PTR [edx]
  40ab5f:	jmp    0x40ab5d
  40ab61:	or     al,0xbd
  40ab63:	inc    edx
  40ab64:	in     eax,dx
  40ab65:	loopne 0x40aba0
  40ab67:	mov    DWORD PTR [ebx+0x42c6eb84],eax
  40ab6d:	js     0x40abc2
  40ab6f:	cmp    eax,0xfa308473
  40ab74:	mov    al,cl
  40ab76:	adc    DWORD PTR [ecx+eiz*8-0x15],ecx
  40ab7a:	es dec eax
  40ab7c:	ds sub eax,0x6332c10d
  40ab82:	les    ebx,FWORD PTR [eax-0x4340f70a]
  40ab88:	push   ds
  40ab89:	ret    0xb1c2
  40ab8c:	mov    dh,0xba
  40ab8e:	mov    ah,0x40
  40ab90:	adc    dl,BYTE PTR [ebx]
  40ab92:	mov    eax,ecx
  40ab94:	in     al,0xf0
  40ab96:	mov    esi,0x1f9fa0d0
  40ab9b:	dec    esp
  40ab9c:	inc    edx
  40ab9d:	add    BYTE PTR [edi],ah
  40ab9f:	and    bl,BYTE PTR [edi-0x7dc83020]
  40aba5:	mov    bl,0x5f
  40aba7:	out    0xb1,eax
  40aba9:	cmc    
  40abaa:	imul   esi,DWORD PTR [edx],0x3
  40abad:	icebp  
  40abae:	in     al,dx
  40abaf:	cli    
  40abb0:	dec    esi
  40abb1:	push   es
  40abb2:	sub    al,0x70
  40abb4:	mov    bl,0xdd
  40abb6:	ins    BYTE PTR es:[edi],dx
  40abb7:	hlt    
  40abb8:	loopne 0x40aba6
  40abba:	add    BYTE PTR [edi],bh
  40abbc:	bound  ebp,QWORD PTR [ebp-0x1f282dde]
  40abc2:	and    DWORD PTR [ebx+0x76],esi
  40abc5:	and    DWORD PTR [eax-0x36f85416],esi
  40abcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abcc:	mov    ecx,0x40bb5891
  40abd1:	jl     0x40abff
  40abd3:	and    DWORD PTR [ebx],eax
  40abd5:	add    al,0x29
  40abd7:	mov    esi,edx
  40abd9:	in     al,dx
  40abda:	pop    edi
  40abdb:	ret    0x6cdd
  40abde:	mov    bl,0x16
  40abe0:	or     al,0x8b
  40abe2:	or     dh,BYTE PTR [edi-0x78]
  40abe5:	xchg   DWORD PTR cs:[edi+0x5f7abf9f],edi
  40abec:	ins    DWORD PTR es:[edi],dx
  40abed:	sbb    dh,cl
  40abef:	out    dx,eax
  40abf0:	std    
  40abf1:	mov    ebp,DWORD PTR ss:[ebx+0x3e5d1d0b]
  40abf8:	or     DWORD PTR [eax],0x2d424c1d
  40abfe:	cmp    DWORD PTR [ebp+ebx*4+0x7be2520e],edi
  40ac05:	mov    ebp,0xd1a42b06
  40ac0a:	hlt    
  40ac0b:	stc    
  40ac0c:	addr16 std 
  40ac0e:	stc    
  40ac0f:	pop    ebp
  40ac10:	repnz sbb eax,0xe2f0a203
  40ac16:	mov    esp,0x22c33696
  40ac1b:	xor    esp,DWORD PTR [ecx]
  40ac1d:	add    eax,0x9bb4c33a
  40ac22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac23:	pushf  
  40ac24:	aas    
  40ac25:	and    al,0x92
  40ac27:	dec    esi
  40ac28:	pushf  
  40ac29:	fist   WORD PTR [edx]
  40ac2b:	punpcklbw mm4,mm6
  40ac2e:	mov    edx,0x171229da
  40ac33:	(bad)  [eax+0x1976eb0b]
  40ac39:	cwde   
  40ac3a:	xchg   BYTE PTR [esi+ebx*4+0x31c76b18],ah
  40ac41:	idiv   ebx
  40ac43:	mov    dh,0xda
  40ac45:	outs   dx,BYTE PTR ds:[esi]
  40ac46:	int3   
  40ac47:	jno    0x40abd9
  40ac49:	rcr    BYTE PTR ds:0xa64c27ad,1
  40ac4f:	lods   eax,DWORD PTR ds:[esi]
  40ac50:	lock inc eax
  40ac52:	test   al,0x5f
  40ac54:	inc    edi
  40ac55:	(bad)  
  40ac56:	xor    eax,0x8bf1845e
  40ac5b:	(bad)  
  40ac5c:	or     al,0xe6
  40ac5e:	jecxz  0x40aca4
  40ac60:	repz adc BYTE PTR [edx],ch
  40ac63:	nop
  40ac64:	iret   
  40ac65:	call   0xaade:0xfaa539c6
  40ac6c:	jmp    0x40acbd
  40ac6e:	mov    esp,0x341dd02e
  40ac73:	mov    dh,0x4a
  40ac75:	dec    ebp
  40ac76:	dec    esp
  40ac77:	jmp    0xee04c2d9
  40ac7c:	repnz cmc 
  40ac7e:	push   edx
  40ac7f:	ret    
  40ac80:	ja     0x40ac3f
  40ac82:	es repnz shl ah,0xf
  40ac87:	test   eax,0xd7c1c650
  40ac8c:	mov    dl,0xd9
  40ac8e:	test   esi,ecx
  40ac90:	jmp    0x968ef9e0
  40ac95:	je     0x40ac51
  40ac97:	(bad)  
  40ac98:	int    0x1
  40ac9a:	leave  
  40ac9b:	push   es
  40ac9c:	leave  
  40ac9d:	mov    ds:0x24038220,eax
  40aca2:	xchg   esp,eax
  40aca3:	push   ebx
  40aca4:	fwait
  40aca5:	push   ss
  40aca6:	loop   0x40ac57
  40aca8:	ins    DWORD PTR es:[edi],dx
  40aca9:	(bad)  
  40acaa:	sti    
  40acab:	lock xor eax,0x1df34bea
  40acb1:	mov    edx,DWORD PTR [ecx+0x1c]
  40acb4:	je     0x40ac48
  40acb6:	leave  
  40acb7:	push   edi
  40acb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acb9:	in     al,0xe
  40acbb:	shl    BYTE PTR [esi-0x230067cb],1
  40acc1:	cmp    bh,BYTE PTR [edx-0x1b]
  40acc4:	mov    ch,ah
  40acc6:	and    eax,0x1341c12a
  40accb:	cli    
  40accc:	je     0x40acb2
  40acce:	shr    dl,cl
  40acd0:	cmp    eax,0xdada6b12
  40acd5:	ret    0xbdbb
  40acd8:	lods   al,BYTE PTR ds:[esi]
  40acd9:	sbb    DWORD PTR [ebp+0x36],0xffffffd9
  40acdd:	cmp    ebx,edx
  40acdf:	mov    cl,0xed
  40ace1:	dec    ecx
  40ace2:	jne    0x40ad13
  40ace4:	(bad)
  40ace7:	adc    DWORD PTR [esi-0x2e],edx
  40acea:	mov    bh,0x84
  40acec:	hlt    
  40aced:	or     eax,0xf5b77f66
  40acf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acf3:	(bad)  
  40acf4:	cdq    
  40acf5:	or     BYTE PTR [edi+ecx*2+0x6884fcb1],ch
  40acfc:	mov    al,0xf7
  40acfe:	jb     0x40ace4
  40ad00:	push   si
  40ad02:	or     al,0xfd
  40ad04:	jecxz  0x40ad4d
  40ad06:	push   esi
  40ad07:	fwait
  40ad08:	mov    dh,0x22
  40ad0a:	mul    dl
  40ad0c:	push   ebp
  40ad0d:	inc    esp
  40ad0e:	jmp    0x40ad5c
  40ad10:	arpl   WORD PTR [edi-0x60],si
  40ad13:	(bad)  
  40ad15:	mov    edi,0x7027b39c
  40ad1a:	dec    ebx
  40ad1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad1c:	add    dh,BYTE PTR [edx+0x74cb7ebb]
  40ad22:	scas   eax,DWORD PTR es:[edi]
  40ad23:	popf   
  40ad24:	lods   eax,DWORD PTR ds:[esi]
  40ad25:	fild   DWORD PTR [ebx+edx*1-0x26a03195]
  40ad2c:	dec    esi
  40ad2d:	test   DWORD PTR [ebx],0x5e4d13df
  40ad33:	dec    ebx
  40ad34:	arpl   WORD PTR [ebx+0x4aba5cb4],di
  40ad3a:	and    ch,dl
  40ad3c:	daa    
  40ad3d:	mov    ch,0xb4
  40ad3f:	mov    edi,0x90cce9e9
  40ad44:	cmc    
  40ad45:	ins    DWORD PTR es:[edi],dx
  40ad46:	add    ah,cl
  40ad48:	mov    esp,0x228a06c5
  40ad4d:	sub    eax,0xfb36e47b
  40ad52:	fwait
  40ad53:	inc    ebp
  40ad54:	arpl   WORD PTR [eax+0x24],sp
  40ad57:	dec    ebp
  40ad58:	pop    eax
  40ad59:	inc    ebp
  40ad5a:	sbb    ch,BYTE PTR [ebp+0x1e533a01]
  40ad60:	xlat   BYTE PTR ds:[ebx]
  40ad61:	xchg   ecx,eax
  40ad62:	cld    
  40ad63:	(bad)  
  40ad64:	mov    edi,0xe218676c
  40ad69:	das    
  40ad6a:	jg     0x40acef
  40ad6c:	lock jge 0x40acf9
  40ad6f:	jns    0x40ad59
  40ad71:	mov    ch,ch
  40ad73:	adc    eax,0x4dcb5a99
  40ad78:	mov    ch,0x1e
  40ad7a:	sub    edx,DWORD PTR [edx+0x26]
  40ad7d:	xor    edx,DWORD PTR [ecx-0x44]
  40ad80:	and    DWORD PTR [eax-0x8ffbd86],esi
  40ad86:	mov    eax,0x33791d42
  40ad8b:	cmc    
  40ad8c:	pop    ds
  40ad8d:	cs lea edi,ss:[eax+edx*8-0x8e3603e]
  40ad96:	adc    al,0x5c
  40ad98:	ss pop edx
  40ad9a:	pop    ecx
  40ad9b:	stos   BYTE PTR es:[edi],al
  40ad9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad9d:	adc    al,0x1a
  40ad9f:	mov    bh,0x7d
  40ada1:	sub    eax,0x638a0123
  40ada6:	fstp   st(2)
  40ada8:	(bad)  
  40ada9:	out    dx,eax
  40adaa:	js     0x40ad76
  40adac:	cmp    al,0x7e
  40adae:	(bad)  
  40adb0:	clc    
  40adb1:	xor    dh,dl
  40adb3:	(bad)  
  40adb4:	in     eax,dx
  40adb5:	idiv   BYTE PTR [ebx-0x7a1c8784]
  40adbb:	cdq    
  40adbc:	or     DWORD PTR [edx],eax
  40adbe:	mov    cl,0x77
  40adc0:	cmp    ecx,DWORD PTR [ecx+ecx*1+0x4]
  40adc4:	mov    DWORD PTR [edi+0x2e],edx
  40adc7:	repnz pop edi
  40adc9:	je     0x40adde
  40adcb:	xchg   ecx,eax
  40adcc:	dec    ebx
  40adcd:	lahf   
  40adce:	mov    ebp,0xde58e07b
  40add3:	jecxz  0x40ad9a
  40add5:	mov    edi,0xcc40c86b
  40adda:	mov    esi,0xb99aff13
  40addf:	stos   DWORD PTR es:[edi],eax
  40ade0:	pop    ebp
  40ade1:	jecxz  0x40ae25
  40ade3:	call   0x53d9:0x693b1ab7
  40adea:	dec    esp
  40adeb:	pop    esp
  40adec:	lahf   
  40aded:	pop    eax
  40adee:	sbb    ecx,DWORD PTR [eax-0x253c019e]
  40adf4:	das    
  40adf5:	push   0x23dfd33b
  40adfa:	test   eax,0x631c89f3
  40adff:	sub    bh,BYTE PTR [esi+0x76]
  40ae02:	inc    ecx
  40ae03:	push   esp
  40ae04:	loopne 0x40adc8
  40ae06:	loopne 0x40ae3e
  40ae08:	mov    ebx,ebp
  40ae0a:	jns    0x40ae63
  40ae0c:	cwde   
  40ae0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae0e:	cdq    
  40ae0f:	ins    BYTE PTR es:[edi],dx
  40ae10:	mov    DWORD PTR ds:0x160fd702,eax
  40ae16:	cmp    BYTE PTR ds:0x8350f76a,dh
  40ae1c:	sbb    edi,DWORD PTR [esi+0x904f82b]
  40ae22:	fsubrp st(6),st
  40ae24:	or     BYTE PTR [ecx-0x1b],0x11
  40ae28:	pop    ds
  40ae29:	dec    edx
  40ae2a:	iret   
  40ae2b:	and    dh,BYTE PTR [esi+0x52]
  40ae2e:	aam    0x60
  40ae30:	or     esp,edi
  40ae32:	shl    BYTE PTR [edi+0x28137f08],0xd7
  40ae39:	fcomp  QWORD PTR [edx]
  40ae3b:	jl     0x40adbf
  40ae3d:	mov    bl,0x1f
  40ae3f:	push   ecx
  40ae40:	mov    al,ch
  40ae42:	sbb    bl,BYTE PTR [ecx+0x4024778d]
  40ae48:	into   
  40ae49:	mov    ds:0x82672894,al
  40ae4e:	push   ds
  40ae4f:	dec    ebp
  40ae50:	pushf  
  40ae51:	into   
  40ae52:	ins    BYTE PTR es:[edi],dx
  40ae53:	mov    al,0xa3
  40ae55:	std    
  40ae56:	cmp    al,0x20
  40ae58:	add    BYTE PTR [ebx],dl
  40ae5a:	xor    esp,DWORD PTR [ecx+0x6e857019]
  40ae60:	fwait
  40ae61:	lea    ecx,[edx-0x17]
  40ae64:	pop    ds
  40ae65:	pop    ebx
  40ae66:	idiv   BYTE PTR [ebx]
  40ae68:	adc    eax,0x2b70315e
  40ae6d:	pop    ebx
  40ae6e:	mov    DWORD PTR [ebx+eax*2],esi
  40ae71:	sbb    al,dh
  40ae73:	int    0xd2
  40ae75:	push   edx
  40ae76:	pop    ss
  40ae77:	aas    
  40ae78:	ins    BYTE PTR es:[edi],dx
  40ae79:	jb     0x40ae22
  40ae7b:	mov    esi,edx
  40ae7d:	push   0x87671c37
  40ae82:	mov    esi,0xbca3d18c
  40ae87:	(bad)  
  40ae88:	jmp    0x3ae476fc
  40ae8d:	add    dl,dl
  40ae8f:	xor    DWORD PTR [ecx-0x22267115],ebx
  40ae95:	test   DWORD PTR [esp+esi*1+0x4093f527],esi
  40ae9c:	xchg   esp,eax
  40ae9d:	mov    ch,0x23
  40ae9f:	pop    ds
  40aea0:	push   0xe603d4b8
  40aea5:	fstp   QWORD PTR [esi-0x6]
  40aea8:	pusha  
  40aea9:	jnp    0x40ae37
  40aeab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeac:	add    al,0x8e
  40aeae:	test   DWORD PTR ds:0xb103443b,edi
  40aeb4:	fsubr  QWORD PTR [ecx]
  40aeb6:	daa    
  40aeb7:	pop    ebx
  40aeb8:	mov    dh,0x1f
  40aeba:	cmp    eax,0xb9d7e47e
  40aebf:	clc    
  40aec0:	cmp    al,0x4e
  40aec2:	addr16 inc ebp
  40aec4:	and    BYTE PTR [edi+edx*1-0x67],al
  40aec8:	scas   al,BYTE PTR es:[edi]
  40aec9:	mov    ds:0xf0b1b10d,eax
  40aece:	ror    BYTE PTR [ebx],cl
  40aed0:	stos   DWORD PTR es:[edi],eax
  40aed1:	bnd es jae 0x40ae60
  40aed5:	call   ebx
  40aed7:	and    DWORD PTR [edi],ebx
  40aed9:	leave  
  40aeda:	in     al,dx
  40aedb:	js     0x40af43
  40aedd:	rcl    BYTE PTR [ebx+0x3f],cl
  40aee0:	pop    ds
  40aee1:	std    
  40aee2:	mov    eax,ds:0xc1565a65
  40aee7:	pop    eax
  40aee8:	test   al,0x3d
  40aeea:	or     dl,BYTE PTR [ebx+edx*4]
  40aeed:	and    dh,ch
  40aeef:	add    ah,ah
  40aef1:	or     edx,edx
  40aef3:	test   BYTE PTR [ebp-0x3b],ch
  40aef6:	mov    edi,0x9ed8e5b5
  40aefb:	xrelease xchg DWORD PTR [ecx+ecx*2-0xf],eax
  40af00:	(bad)  
  40af01:	div    BYTE PTR [ebx]
  40af03:	and    al,0x47
  40af05:	test   eax,0xe8019650
  40af0a:	fsubr  QWORD PTR [ebp+0x12be32c3]
  40af10:	mov    cl,0x13
  40af12:	fimul  WORD PTR [eax-0x68009650]
  40af18:	or     ah,BYTE PTR [esi-0x6ac9ce1a]
  40af1e:	cmp    ch,BYTE PTR [esi+edi*4+0x44]
  40af22:	xchg   esp,eax
  40af23:	mov    ebx,0xf9cc0618
  40af28:	sub    cl,al
  40af2a:	outs   dx,BYTE PTR ds:[esi]
  40af2b:	mov    ds:0xe7f47455,eax
  40af30:	inc    ebx
  40af31:	dec    esp
  40af32:	adc    eax,0x77f144f0
  40af37:	dec    edi
  40af38:	(bad)  
  40af3a:	pop    edx
  40af3b:	retf   0xb188
  40af3e:	adc    ebx,esp
  40af40:	cli    
  40af41:	cmp    edx,ecx
  40af43:	or     ch,bh
  40af45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af46:	scas   al,BYTE PTR es:[edi]
  40af47:	lahf   
  40af48:	popf   
  40af49:	and    bh,BYTE PTR ds:0x709871a
  40af4f:	in     al,dx
  40af50:	adc    eax,0xfb965229
  40af55:	jb     0x40af8d
  40af57:	sbb    bl,cl
  40af59:	add    al,0xb3
  40af5b:	les    edx,FWORD PTR [edi]
  40af5d:	je     0x40afb7
  40af5f:	or     edi,DWORD PTR [ebx]
  40af61:	int    0x8c
  40af63:	jae    0x40af4d
  40af65:	push   edx
  40af66:	in     eax,dx
  40af67:	or     al,0x2a
  40af69:	int3   
  40af6a:	pop    eax
  40af6b:	mov    bl,0xe6
  40af6d:	dec    ecx
  40af6e:	add    al,al
  40af70:	mov    cl,BYTE PTR [ebx-0x7ffd81ff]
  40af76:	inc    esp
  40af77:	fld    TBYTE PTR [edx-0x77644aee]
  40af7d:	xchg   DWORD PTR [ebx],edx
  40af7f:	(bad)  
  40af81:	jbe    0x40af09
  40af83:	inc    edi
  40af84:	adc    BYTE PTR [ebx+0x61],bl
  40af87:	pop    esp
  40af88:	loope  0x40afc6
  40af8a:	cmp    eax,0x3420e3a6
  40af8f:	out    0xad,al
  40af91:	xchg   esp,eax
  40af92:	push   ss
  40af93:	sti    
  40af94:	fcmovne st,st(3)
  40af96:	sbb    al,0xfa
  40af98:	xchg   esp,eax
  40af99:	mov    ds:0xc06c465d,al
  40af9e:	push   ds
  40af9f:	xor    ebx,DWORD PTR [edx+0x440602e0]
  40afa5:	stos   BYTE PTR es:[edi],al
  40afa6:	and    cl,BYTE PTR [ebx-0x68023f40]
  40afac:	pop    edi
  40afad:	xor    eax,0x3dc49554
  40afb2:	in     al,0x81
  40afb4:	out    dx,al
  40afb5:	inc    ebx
  40afb6:	ins    DWORD PTR es:[edi],dx
  40afb7:	mov    dl,0x56
  40afb9:	aad    0x3
  40afbb:	addr16 push esp
  40afbd:	ins    DWORD PTR es:[edi],dx
  40afbe:	fdivr  st,st(7)
  40afc1:	mov    WORD PTR [ebx+0x65b9cca0],gs
  40afc7:	or     al,0xa6
  40afc9:	mov    ds:0xfd494828,eax
  40afce:	loop   0x40af5d
  40afd0:	mov    ebp,0xe3f090cb
  40afd5:	jns    0x40b005
  40afd7:	xchg   ebp,eax
  40afd8:	and    DWORD PTR [edx+0x33],0x75
  40afdc:	inc    esp
  40afdd:	push   0x14
  40afdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe0:	mov    edx,0x248d7645
  40afe5:	jo     0x40af8d
  40afe7:	out    dx,eax
  40afe8:	add    ecx,DWORD PTR [ebp-0x7c81d0d0]
  40afee:	iret   
  40afef:	mov    edi,0x17832511
  40aff4:	cmp    eax,0x8e9e4a06
  40aff9:	out    0xe,al
  40affb:	jbe    0x40af93
  40affd:	(bad)  
  40affe:	xchg   esp,eax
  40afff:	lea    eax,[eax+ebp*4-0x5d]
  40b003:	iret   
  40b004:	adc    eax,0x8f0dafe2
  40b009:	mov    esp,0x4aaf8ef5
  40b00e:	lahf   
  40b00f:	cmc    
  40b010:	sub    dh,0xfe
  40b013:	push   ebx
  40b014:	leave  
  40b015:	dec    eax
  40b016:	(bad)
  40b019:	jbe    0x40affe
  40b01b:	adc    ah,cl
  40b01d:	or     BYTE PTR [edx],dl
  40b01f:	vpmacsdd xmm5,xmm4,xmm7,xmm5
  40b025:	mov    dl,0x6f
  40b027:	mov    al,ds:0xb3f594c7
  40b02c:	cmp    DWORD PTR ds:0xc54eb7e5,0x81b90c96
  40b036:	pop    edi
  40b037:	mov    ah,0x45
  40b039:	je     0x40afbf
  40b03b:	cmp    esp,eax
  40b03d:	xlat   BYTE PTR ds:[ebx]
  40b03e:	cwde   
  40b03f:	push   ds
  40b040:	mov    esp,0xf2724a45
  40b045:	push   ebx
  40b046:	adc    edi,ecx
  40b048:	out    dx,eax
  40b049:	sub    al,BYTE PTR [ebx]
  40b04b:	jbe    0x40b067
  40b04d:	push   cs
  40b04e:	(bad)  
  40b04f:	mov    ecx,0xd52241f5
  40b054:	xchg   ebp,eax
  40b055:	cmp    dh,BYTE PTR [esi]
  40b057:	sub    BYTE PTR [ebx],cl
  40b059:	lds    esp,FWORD PTR [edi-0x25]
  40b05c:	inc    edx
  40b05d:	ror    DWORD PTR [edx],0x53
  40b060:	ins    DWORD PTR es:[edi],dx
  40b061:	mov    dl,BYTE PTR [esi]
  40b063:	pop    eax
  40b064:	test   DWORD PTR [ecx],0x72279927
  40b06a:	xchg   edx,eax
  40b06b:	pushf  
  40b06c:	mov    ss,WORD PTR [edi+0x60]
  40b06f:	jns    0x40b04e
  40b071:	cmp    ecx,DWORD PTR [ecx+0x60]
  40b074:	or     DWORD PTR [ebp+0x4924cdfb],eax
  40b07a:	addr16 and al,0xa5
  40b07d:	jl     0x40b0e9
  40b07f:	repnz dec eax
  40b081:	jmp    0xa66535b3
  40b086:	sar    BYTE PTR [esi+eax*1+0x4ff63d31],cl
  40b08d:	lods   al,BYTE PTR ds:[esi]
  40b08e:	inc    ebx
  40b08f:	dec    esp
  40b090:	mov    fs,esi
  40b092:	enter  0x17b4,0x42
  40b096:	mov    ?,WORD PTR [ebx-0x458955f3]
  40b09c:	test   ecx,ebx
  40b09e:	xchg   DWORD PTR [ecx],edx
  40b0a0:	jle    0x40b045
  40b0a2:	mov    esi,0x13c70816
  40b0a7:	sbb    esp,DWORD PTR ds:0xb90c574b
  40b0ad:	fld    QWORD PTR [ecx+0x4e]
  40b0b0:	mov    ds:0xe3a88059,eax
  40b0b5:	mov    eax,ds:0x9fbc8717
  40b0ba:	rep stos BYTE PTR es:[edi],al
  40b0bc:	push   eax
  40b0bd:	push   esp
  40b0be:	pop    ebx
  40b0bf:	test   eax,0x5b8ca7ca
  40b0c4:	popa   
  40b0c5:	mov    WORD PTR [edx],ss
  40b0c7:	clc    
  40b0c8:	jle    0x40b06e
  40b0ca:	fiadd  WORD PTR [eax+0x4a4db925]
  40b0d0:	call   0x28076040
  40b0d5:	stos   BYTE PTR es:[edi],al
  40b0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0d7:	test   edx,ebp
  40b0d9:	cmp    bh,BYTE PTR [ebp+0x3453420a]
  40b0df:	ret    
  40b0e0:	mov    ebp,0x39a4b100
  40b0e5:	mov    ecx,0x8836f889
  40b0ea:	jb     0x40b10c
  40b0ec:	dec    ebp
  40b0ed:	fdiv   DWORD PTR [edi+0x569db73d]
  40b0f3:	mov    WORD PTR [eax],?
  40b0f5:	das    
  40b0f6:	out    0x78,eax
  40b0f8:	loope  0x40b12d
  40b0fa:	push   0x5e
  40b0fc:	mov    al,0xc5
  40b0fe:	out    dx,al
  40b0ff:	ins    BYTE PTR es:[edi],dx
  40b100:	pop    edx
  40b101:	mov    dl,0x58
  40b103:	(bad)  
  40b104:	and    al,0xf9
  40b106:	push   0xde74688c
  40b10b:	aas    
  40b10c:	test   BYTE PTR [ebp+0x1fc4977f],dl
  40b112:	mov    ebp,0x24b0f035
  40b117:	pop    esp
  40b118:	inc    edx
  40b119:	in     eax,0xce
  40b11b:	bound  ecx,QWORD PTR [esi]
  40b11d:	arpl   sp,bx
  40b11f:	mov    eax,ds:0xa276a4c3
  40b124:	sub    eax,0xe8f0f601
  40b129:	rol    DWORD PTR [edx+0x14],0xfd
  40b12d:	data16 addr16 in al,dx
  40b130:	push   edi
  40b131:	xchg   ebp,eax
  40b132:	pop    edx
  40b133:	and    edx,DWORD PTR ds:0x2fc647e4
  40b139:	aaa    
  40b13a:	and    al,0x4a
  40b13c:	or     al,0xef
  40b13e:	mov    ds:0x820190d9,eax
  40b143:	push   ss
  40b144:	leave  
  40b145:	inc    edi
  40b146:	add    DWORD PTR [ebp-0x8626bbc],0x94cac357
  40b150:	xchg   ebp,eax
  40b151:	dec    esp
  40b152:	jns    0x40b1bd
  40b154:	xchg   ecx,eax
  40b155:	loope  0x40b12f
  40b157:	mov    dl,0xe6
  40b159:	(bad)  
  40b15a:	fisub  DWORD PTR [edx-0x6c7b47cd]
  40b160:	sahf   
  40b161:	xlat   BYTE PTR ds:[ebx]
  40b162:	xlat   BYTE PTR ds:[ebx]
  40b163:	push   ss
  40b164:	jmp    0x30202566
  40b169:	sti    
  40b16a:	adc    al,0x2f
  40b16c:	jae    0x40b19b
  40b16e:	out    dx,al
  40b16f:	loope  0x40b15c
  40b171:	xor    bl,BYTE PTR [ebx-0x78d47157]
  40b177:	push   esp
  40b178:	cmp    eax,0x4ba6db34
  40b17d:	push   edx
  40b17e:	mov    edi,0x4b41be5
  40b183:	mov    al,0xc6
  40b185:	inc    edi
  40b186:	xchg   esp,eax
  40b187:	add    eax,0x70767052
  40b18c:	add    DWORD PTR [esi-0x3],ecx
  40b18f:	sbb    eax,0x2829ee85
  40b194:	pop    esi
  40b195:	dec    ebx
  40b196:	pop    edx
  40b197:	add    DWORD PTR [ebx+ecx*1-0x7],0x88343b19
  40b19f:	nop
  40b1a0:	dec    ebx
  40b1a1:	inc    ebx
  40b1a2:	mov    dh,0x2
  40b1a4:	inc    DWORD PTR [ebx+0x21]
  40b1a7:	rcl    DWORD PTR [eax],cl
  40b1a9:	sbb    al,0x5d
  40b1ab:	and    al,0xd6
  40b1ad:	mov    ebx,0xb641cc46
  40b1b2:	and    esi,DWORD PTR [eax-0x4a425658]
  40b1b8:	push   ecx
  40b1b9:	pop    ebp
  40b1ba:	mov    edi,0x1cf48939
  40b1bf:	(bad)  
  40b1c0:	(bad)  
  40b1c1:	(bad)  
  40b1c3:	hlt    
  40b1c4:	dec    edx
  40b1c5:	pop    ebp
  40b1c6:	sbb    edx,ebp
  40b1c8:	ficom  WORD PTR [eax+esi*4-0x17c9f143]
  40b1cf:	mov    ch,0xce
  40b1d1:	xor    DWORD PTR [ecx+eax*2-0x63],eax
  40b1d5:	les    edx,FWORD PTR [eax+0x7db009a3]
  40b1db:	pop    edi
  40b1dc:	les    esp,FWORD PTR [eax+0x43]
  40b1df:	call   0x417d:0x81e7f721
  40b1e6:	ja     0x40b1c8
  40b1e8:	xor    dl,BYTE PTR [edi-0x44]
  40b1eb:	push   esi
  40b1ec:	dec    ebx
  40b1ed:	or     BYTE PTR [esi-0x33],bh
  40b1f0:	daa    
  40b1f1:	in     eax,0x8e
  40b1f3:	test   BYTE PTR [edi+0x28],bh
  40b1f6:	add    esi,eax
  40b1f8:	add    DWORD PTR [ebp+0x69],eax
  40b1fb:	dec    edx
  40b1fc:	push   edi
  40b1fd:	push   eax
  40b1fe:	cmp    BYTE PTR [eax],cl
  40b200:	push   0x23e012a
  40b205:	fdiv   QWORD PTR [esi+0x3f232129]
  40b20b:	xlat   BYTE PTR ds:[ebx]
  40b20c:	or     cl,BYTE PTR [edi-0x67fa879e]
  40b212:	shr    BYTE PTR [ebx-0x79],0x5e
  40b216:	jmp    0x40b1ca
  40b218:	or     eax,DWORD PTR [edx]
  40b21a:	pop    edi
  40b21b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b21c:	pop    edx
  40b21d:	je     0x40b1d4
  40b21f:	(bad)  
  40b220:	push   esp
  40b221:	lods   al,BYTE PTR ds:[esi]
  40b222:	rcr    DWORD PTR [esi+0x55aaf317],0xd8
  40b229:	pop    esp
  40b22a:	mov    WORD PTR ds:0x71f7ad2,es
  40b230:	lahf   
  40b231:	hlt    
  40b232:	ins    DWORD PTR es:[edi],dx
  40b233:	outs   dx,DWORD PTR ds:[esi]
  40b234:	push   0xffffff9c
  40b236:	imul   di,cx,0x12f3
  40b23b:	outs   dx,DWORD PTR ds:[esi]
  40b23c:	inc    ecx
  40b23d:	sar    BYTE PTR [ecx+0x2d],0x4e
  40b241:	je     0x40b21c
  40b243:	fwait
  40b244:	mov    esp,0xe0504d70
  40b249:	mov    eax,0x25f9a15c
  40b24e:	xor    eax,0xa77d8984
  40b253:	xor    BYTE PTR [eax],ch
  40b255:	or     al,0x44
  40b257:	sbb    DWORD PTR [ecx-0x32],edi
  40b25a:	mov    eax,ebx
  40b25c:	push   es
  40b25d:	jecxz  0x40b22e
  40b25f:	fisttp DWORD PTR [edx]
  40b261:	pop    esp
  40b262:	loopne 0x40b262
  40b264:	ror    DWORD PTR ds:0x1b0d22fe,1
  40b26a:	push   0x5d
  40b26c:	sahf   
  40b26d:	inc    eax
  40b26e:	fbld   TBYTE PTR [esi]
  40b270:	jno    0x40b244
  40b272:	cmp    dl,BYTE PTR ds:0x46a69218
  40b278:	(bad)
  40b27d:	outs   dx,BYTE PTR ds:[esi]
  40b27e:	loop   0x40b26a
  40b280:	and    al,0x8d
  40b282:	aas    
  40b283:	(bad)  
  40b284:	mov    eax,ds:0x6a0dbe8c
  40b289:	jp     0x40b23d
  40b28b:	and    esp,ecx
  40b28d:	jmp    0xa9ee7f6f
  40b292:	mov    esi,0xa64fdfc
  40b297:	out    0x81,eax
  40b299:	aad    0xf3
  40b29b:	mov    cs,WORD PTR [edi+ebx*8+0x58a227fa]
  40b2a2:	cmp    ch,0x4f
  40b2a5:	ret    
  40b2a6:	dec    ebx
  40b2a7:	push   esi
  40b2a8:	(bad)  
  40b2a9:	mov    ecx,DWORD PTR [ebx]
  40b2ab:	es pop esp
  40b2ad:	xchg   edi,eax
  40b2ae:	inc    ebp
  40b2af:	out    0xc9,al
  40b2b1:	(bad)  
  40b2b2:	pop    ecx
  40b2b3:	add    DWORD PTR [edi-0x1e794fb5],eax
  40b2b9:	fsubr  QWORD PTR [edi-0x7f]
  40b2bc:	aam    0x40
  40b2be:	xor    DWORD PTR [ecx-0x51f023e2],0x6f23e6dd
  40b2c8:	and    eax,0x7d9cf76f
  40b2cd:	inc    edx
  40b2ce:	fdiv   DWORD PTR [edx]
  40b2d0:	adc    ebp,DWORD PTR ds:0x5c7f1fe3
  40b2d6:	jge    0x40b316
  40b2d8:	call   FWORD PTR [ecx]
  40b2da:	in     al,dx
  40b2db:	jge    0x40b280
  40b2dd:	xor    esi,ebp
  40b2df:	rcl    DWORD PTR [esi],1
  40b2e1:	std    
  40b2e2:	out    dx,al
  40b2e3:	call   0xbdf9acb9
  40b2e8:	mov    ebx,edi
  40b2ea:	je     0x40b2c5
  40b2ec:	iret   
  40b2ed:	jbe    0x40b355
  40b2ef:	adc    DWORD PTR [esi+0x1859191b],esi
  40b2f5:	pop    es
  40b2f6:	mov    al,ds:0xae447fdb
  40b2fb:	sub    bl,ch
  40b2fd:	pop    ds
  40b2fe:	jl     0x40b2e2
  40b300:	fnstsw WORD PTR ds:0xb496876d
  40b306:	pop    ss
  40b307:	mov    ds,WORD PTR [ebx-0x20]
  40b30a:	xchg   BYTE PTR [ebx+0x1a68e42c],bh
  40b310:	push   ds
  40b311:	sub    al,0x14
  40b313:	add    DWORD PTR [ecx+0x7ec6a8b5],0x43fc5306
  40b31d:	dec    ebx
  40b31e:	adc    DWORD PTR ds:0xce394417,eax
  40b324:	adc    BYTE PTR [ebp-0x2cc127a6],dl
  40b32a:	cmp    al,0x57
  40b32c:	clc    
  40b32d:	mov    bh,BYTE PTR [edx-0x7f]
  40b330:	mov    bh,0xde
  40b332:	and    dh,BYTE PTR [eax]
  40b334:	xor    eax,0x9c1667c4
  40b339:	stos   DWORD PTR es:[edi],eax
  40b33a:	xchg   ebp,eax
  40b33b:	pop    ss
  40b33c:	sub    BYTE PTR [eax+0x7a],dl
  40b33f:	lds    esp,FWORD PTR [eax+0x736471d5]
  40b345:	add    BYTE PTR [esi+eax*8],bh
  40b348:	pop    esp
  40b349:	lds    edi,FWORD PTR [edi+0x7f3e1c43]
  40b34f:	xor    BYTE PTR [ecx+ebx*1+0x519609ff],bh
  40b356:	(bad)  
  40b357:	cmc    
  40b358:	jl     0x40b366
  40b35a:	stc    
  40b35b:	fdivr  DWORD PTR [eax]
  40b35d:	lock pop eax
  40b35f:	in     al,0x83
  40b361:	sbb    eax,0xef33bd2e
  40b366:	xor    cl,ah
  40b368:	jmp    0x37eca5fc
  40b36d:	outs   dx,DWORD PTR ds:[esi]
  40b36e:	(bad)  
  40b370:	jnp    0x40b3ad
  40b372:	push   cs
  40b373:	stos   DWORD PTR es:[edi],eax
  40b374:	cmp    al,0xa3
  40b376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b377:	clc    
  40b378:	xchg   edi,eax
  40b379:	inc    ecx
  40b37a:	fs test eax,0x90669345
  40b380:	sar    DWORD PTR [ebx-0x39],0x5f
  40b384:	adc    eax,0xc18dcfe5
  40b389:	cmp    eax,0x7bfb7549
  40b38e:	aam    0x41
  40b390:	lahf   
  40b391:	outs   dx,DWORD PTR ds:[esi]
  40b392:	div    BYTE PTR [esi-0x60]
  40b395:	popf   
  40b396:	(bad)  
  40b397:	sub    dh,BYTE PTR ss:[ecx]
  40b39a:	ins    DWORD PTR es:[edi],dx
  40b39b:	mov    ebp,0x31b46559
  40b3a0:	ret    
  40b3a1:	inc    ebp
  40b3a2:	int    0xae
  40b3a4:	(bad)  
  40b3a6:	aad    0x15
  40b3a8:	xchg   ebx,eax
  40b3a9:	push   cs
  40b3aa:	xor    BYTE PTR [esi+0x695485ad],ah
  40b3b0:	sbb    eax,0x900e1d89
  40b3b5:	fisubr WORD PTR [edx+0x21]
  40b3b8:	push   eax
  40b3b9:	sub    al,0x71
  40b3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3bc:	(bad)  
  40b3bd:	sahf   
  40b3be:	adc    edi,DWORD PTR [edi-0x4e]
  40b3c1:	fcmovnbe st,st(3)
  40b3c3:	aam    0x67
  40b3c5:	pop    eax
  40b3c6:	gs dec esp
  40b3c8:	pop    esp
  40b3c9:	or     DWORD PTR [edi+0x68a2a830],eax
  40b3cf:	inc    edx
  40b3d0:	push   es
  40b3d1:	test   DWORD PTR [edx-0x6b55e02f],edi
  40b3d7:	and    al,0x37
  40b3d9:	sub    cl,BYTE PTR [esi-0x80]
  40b3dc:	jl     0x40b3ff
  40b3de:	sub    eax,0x49512229
  40b3e3:	lea    edx,[ecx-0x382edc9c]
  40b3e9:	out    dx,eax
  40b3ea:	lock sbb ch,ah
  40b3ed:	(bad)  
  40b3ee:	cli    
  40b3ef:	repnz or esp,DWORD PTR [edx]
  40b3f2:	repz ss push ds
  40b3f5:	les    ecx,FWORD PTR [esi+0x5c982879]
  40b3fb:	push   ds
  40b3fc:	ins    BYTE PTR es:[edi],dx
  40b3fd:	sub    ch,0x61
  40b400:	jae    0x40b393
  40b402:	dec    edx
  40b403:	mov    DWORD PTR [esi-0x222cf25],ebx
  40b409:	test   ah,ch
  40b40b:	xor    eax,0x572d9193
  40b410:	ret    0x12ce
  40b413:	fcmovne st,st(3)
  40b415:	push   cs
  40b416:	ror    eax,0x3
  40b419:	cld    
  40b41a:	push   0xd2076a1
  40b41f:	pop    edx
  40b420:	test   eax,0x4cb2108a
  40b425:	retf   0xf3f6
  40b428:	or     BYTE PTR ds:0x4c579f31,0x2c
  40b42f:	sub    cl,bh
  40b431:	inc    esi
  40b432:	(bad)  
  40b433:	add    eax,0x11a277e4
  40b438:	sub    edi,DWORD PTR [ebp+0x7c9f3479]
  40b43e:	cmp    al,0x66
  40b440:	mov    ds:0xdd205cc3,al
  40b445:	push   fs
  40b447:	jo     0x40b3f4
  40b449:	jp     0x40b4be
  40b44b:	fstp   DWORD PTR [edx-0x684252ae]
  40b451:	push   ds
  40b452:	lock jmp 0xf7b1:0xcc70a6f
  40b45a:	ror    DWORD PTR [edx+ebx*8+0x53cece18],0x73
  40b462:	lds    esp,FWORD PTR [edi+0x522c005]
  40b468:	and    DWORD PTR ds:0x4f759e5,esp
  40b46e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b46f:	outs   dx,BYTE PTR ds:[esi]
  40b470:	data16 sbb al,BYTE PTR [edx-0x1]
  40b474:	sbb    esp,DWORD PTR [ebp+0x750a3695]
  40b47a:	enter  0xc25,0xde
  40b47e:	mov    bl,0xa6
  40b480:	jbe    0x40b4b4
  40b482:	pop    ss
  40b483:	xor    al,0xf4
  40b485:	out    dx,eax
  40b486:	xchg   ebp,eax
  40b487:	scas   al,BYTE PTR es:[edi]
  40b488:	mov    ds:0xd58a04d1,eax
  40b48d:	packssdw mm6,QWORD PTR [edx+0x8]
  40b491:	adc    dh,cl
  40b493:	lods   al,BYTE PTR ds:[esi]
  40b494:	lock call 0x2fea:0x1db5fa5f
  40b49c:	add    ch,BYTE PTR [esi+0xe]
  40b49f:	bound  esp,QWORD PTR ds:0xda4c1d4
  40b4a5:	iret   
  40b4a6:	sbb    al,0xb1
  40b4a8:	fs push ebp
  40b4aa:	dec    ebx
  40b4ab:	clc    
  40b4ac:	dec    ebx
  40b4ad:	mov    dl,0xab
  40b4af:	es xchg edi,eax
  40b4b1:	push   cs
  40b4b2:	scas   al,BYTE PTR es:[edi]
  40b4b3:	fst    st(3)
  40b4b5:	or     dh,BYTE PTR [ecx]
  40b4b7:	test   DWORD PTR [esi],0x3cbb018f
  40b4bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4be:	mov    edi,0x9d1f19f
  40b4c3:	jmp    FWORD PTR [edx+ebp*1-0x7e]
  40b4c7:	scas   eax,DWORD PTR es:[edi]
  40b4c8:	loopne 0x40b52e
  40b4ca:	stos   DWORD PTR es:[edi],eax
  40b4cb:	call   0x7c62:0xa1319ed6
  40b4d2:	enter  0xeefb,0x8f
  40b4d6:	sti    
  40b4d7:	ds (bad) 
  40b4d9:	aad    0x7a
  40b4db:	(bad)  
  40b4dc:	sbb    al,0x1f
  40b4de:	int3   
  40b4df:	dec    esi
  40b4e0:	in     al,0xea
  40b4e2:	enter  0xaae8,0xff
  40b4e6:	gs mov ebx,0xd61a7718
  40b4ec:	pop    ebp
  40b4ed:	mov    dh,0xee
  40b4ef:	arpl   WORD PTR [edi+0x3da010fd],sp
  40b4f5:	repnz stos BYTE PTR es:[edi],al
  40b4f7:	fstp   st(4)
  40b4f9:	ds jb  0x40b4df
  40b4fc:	pop    edi
  40b4fd:	dec    ecx
  40b4fe:	cdq    
  40b4ff:	fisttp QWORD PTR [ebx]
  40b501:	dec    esi
  40b502:	xchg   esp,eax
  40b503:	out    0xc,al
  40b505:	mov    ah,cl
  40b507:	test   esp,eax
  40b509:	fs push ebp
  40b50b:	repnz sub BYTE PTR [eax],ah
  40b50e:	push   ecx
  40b50f:	pop    ebx
  40b510:	jmp    0x40b510
  40b512:	push   0xffffff93
  40b514:	inc    ecx
  40b515:	or     al,0xb7
  40b517:	dec    ecx
  40b518:	mov    BYTE PTR [ebp-0x4702f754],dl
  40b51e:	mov    ds:0x4f5610fa,al
  40b523:	pop    edx
  40b524:	popa   
  40b525:	outs   dx,BYTE PTR ds:[esi]
  40b526:	cmp    DWORD PTR [edi],ebx
  40b528:	icebp  
  40b529:	call   0x8f94:0x5eb5c168
  40b530:	mov    edx,0xcdd6eea3
  40b535:	cli    
  40b536:	fmul   QWORD PTR [esi]
  40b538:	mov    DWORD PTR [eax-0x5],0x2d4627f0
  40b53f:	and    ah,BYTE PTR [ecx+0x296f4d45]
  40b545:	mov    BYTE PTR [esi+edi*2],ah
  40b548:	mov    esi,0xef0e82f
  40b54d:	lds    esi,FWORD PTR [esi-0x2545dd03]
  40b553:	scas   eax,DWORD PTR es:[edi]
  40b554:	push   es
  40b555:	jne    0x40b545
  40b557:	inc    ebp
  40b558:	out    0xb8,al
  40b55a:	jnp    0x40b5b1
  40b55c:	dec    ebp
  40b55d:	mov    bl,0x56
  40b55f:	mov    ecx,0xa26b0214
  40b564:	mov    dh,0x6f
  40b566:	test   BYTE PTR [edx-0x3201c2c3],cl
  40b56c:	jno    0x40b530
  40b56e:	sti    
  40b56f:	call   0x91ae0c85
  40b574:	mov    edx,DWORD PTR [ebx-0x66]
  40b577:	push   eax
  40b578:	test   al,0x32
  40b57a:	jmp    0x40b568
  40b57c:	out    0xa4,al
  40b57e:	loop   0x40b556
  40b580:	mov    edi,0xe06c831b
  40b585:	add    eax,0x709f71bd
  40b58a:	xor    esp,DWORD PTR [eax+0x2]
  40b58d:	sar    DWORD PTR [ebx+0x6b],cl
  40b590:	pop    es
  40b591:	cmp    ebp,DWORD PTR [ecx+esi*1-0x66]
  40b595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b596:	call   FWORD PTR [eax]
  40b598:	icebp  
  40b599:	loope  0x40b5bd
  40b59b:	aam    0x6c
  40b59d:	neg    DWORD PTR ds:0x82534dc2
  40b5a3:	test   BYTE PTR [esi+eiz*2+0x142ce029],al
  40b5aa:	rcl    DWORD PTR [edi-0x16],1
  40b5ad:	jmp    0x6a66:0x4fc98a79
  40b5b4:	pop    ecx
  40b5b5:	daa    
  40b5b6:	and    esp,DWORD PTR [esi]
  40b5b8:	adc    al,0xf0
  40b5ba:	dec    ecx
  40b5bb:	sub    eax,DWORD PTR [ebx-0x72]
  40b5be:	addr16 jns 0x40b5c1
  40b5c1:	jno    0x40b603
  40b5c3:	inc    esp
  40b5c4:	in     eax,0xa8
  40b5c6:	inc    edx
  40b5c7:	dec    ecx
  40b5c8:	mov    DWORD PTR [ecx],esi
  40b5ca:	cmc    
  40b5cb:	shl    dl,1
  40b5cd:	out    dx,eax
  40b5ce:	sub    BYTE PTR [ebx-0x7fd518e0],bl
  40b5d4:	test   eax,0x51243016
  40b5d9:	ja     0x40b5d6
  40b5db:	das    
  40b5dc:	popa   
  40b5dd:	icebp  
  40b5de:	ret    0x1a91
  40b5e1:	mov    DWORD PTR [edi-0x63c578dc],edi
  40b5e7:	pop    ecx
  40b5e8:	add    ch,cl
  40b5ea:	mov    ebx,0x7667dea4
  40b5ef:	push   ebx
  40b5f0:	and    edi,DWORD PTR [esi]
  40b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f3:	pop    ds
  40b5f4:	ins    DWORD PTR es:[edi],dx
  40b5f5:	(bad)  
  40b5f6:	fild   WORD PTR [edi]
  40b5f8:	xor    DWORD PTR [eax+eiz*8-0x5d],ecx
  40b5fc:	mov    ds:0xd383ab70,eax
  40b601:	mov    dl,0xc2
  40b603:	push   0x5c
  40b605:	mov    al,ds:0x41b8519c
  40b60a:	inc    esp
  40b60b:	repz or DWORD PTR [ebp+0x5257db17],eax
  40b612:	pop    edx
  40b613:	jmp    0xc9decf5c
  40b618:	pop    ebp
  40b619:	add    ah,BYTE PTR [esi-0x29]
  40b61c:	sub    DWORD PTR [esi-0x2f],edi
  40b61f:	inc    ecx
  40b620:	repnz pop esi
  40b622:	push   ss
  40b623:	push   esp
  40b624:	scas   eax,DWORD PTR es:[edi]
  40b625:	inc    edi
  40b626:	and    BYTE PTR [ebx+edi*4-0xa],0x67
  40b62b:	jge    0xbfc638f8
  40b631:	mov    dl,0x81
  40b633:	out    0x93,al
  40b635:	test   eax,0xeec411e
  40b63a:	jno    0x40b626
  40b63c:	inc    esi
  40b63d:	mov    ds:0xf98e1882,al
  40b642:	jge    0x40b61a
  40b644:	xor    DWORD PTR [edi],ebx
  40b646:	test   BYTE PTR [ebx-0x5f],dh
  40b649:	shl    BYTE PTR [esi-0x54],0xd9
  40b64d:	in     al,0x98
  40b64f:	cli    
  40b650:	jo     0x40b63b
  40b652:	hlt    
  40b653:	shl    DWORD PTR [edi],1
  40b655:	or     al,0x18
  40b657:	sub    BYTE PTR [esi+0x2e],al
  40b65a:	push   cs
  40b65b:	adc    eax,0x83ff5328
  40b660:	jae    0x40b5f1
  40b662:	add    BYTE PTR [esi-0x4a24875e],al
  40b668:	mov    WORD PTR [edx-0x43],ds
  40b66b:	cmp    eax,0xee2edba1
  40b670:	icebp  
  40b671:	std    
  40b672:	sub    edi,DWORD PTR cs:[bx+si-0x4c]
  40b677:	mov    esi,0xa45434c0
  40b67c:	pop    ss
  40b67d:	jp     0x40b673
  40b67f:	shr    cl,0x8d
  40b682:	or     ebx,ecx
  40b684:	or     eax,0x61b00ebd
  40b689:	arpl   cx,di
  40b68b:	(bad)  
  40b68d:	(bad)  
  40b68f:	repz pop es
  40b691:	and    eax,0xd3cf6004
  40b696:	aad    0x48
  40b698:	or     eax,0x30fed13
  40b69d:	add    DWORD PTR ds:0xc85557d4,ecx
  40b6a3:	add    BYTE PTR [ebx-0x64],bh
  40b6a6:	jne    0x40b699
  40b6a8:	inc    ebp
  40b6a9:	sbb    BYTE PTR [edx],al
  40b6ab:	loop   0x40b726
  40b6ad:	fistp  DWORD PTR [ecx]
  40b6af:	sbb    al,0x7f
  40b6b1:	es leave 
  40b6b3:	pop    edx
  40b6b4:	aaa    
  40b6b5:	mov    ch,0x9b
  40b6b7:	dec    ebp
  40b6b8:	add    edx,edx
  40b6ba:	call   0x49d630a
  40b6bf:	ds dec esi
  40b6c1:	and    bl,BYTE PTR [eax+eax*1-0x688880a]
  40b6c8:	or     al,0x3b
  40b6ca:	(bad)  
  40b6cc:	add    edx,DWORD PTR [edi+0x65]
  40b6cf:	cli    
  40b6d0:	sbb    BYTE PTR [esi],dl
  40b6d2:	call   0x9e9a9273
  40b6d7:	js     0x40b65d
  40b6d9:	fcmovnu st,st(4)
  40b6db:	xor    esi,DWORD PTR [ecx+edx*2-0x14532625]
  40b6e2:	mov    al,ds:0xaf9523
  40b6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6e8:	dec    esp
  40b6e9:	or     edi,DWORD PTR [eax+0x4]
  40b6ec:	sub    BYTE PTR [edx+0x5],ch
  40b6ef:	cdq    
  40b6f0:	push   0xd6a8926a
  40b6f5:	xor    al,0x80
  40b6f7:	int3   
  40b6f8:	icebp  
  40b6f9:	out    0x7e,al
  40b6fb:	inc    ebp
  40b6fc:	and    ecx,DWORD PTR [ebx]
  40b6fe:	pop    esp
  40b6ff:	xchg   DWORD PTR [edx+0x74c34f67],esi
  40b705:	mov    ah,BYTE PTR ds:0x70a9b099
  40b70b:	in     al,0x21
  40b70d:	xlat   BYTE PTR ds:[ebx]
  40b70e:	(bad)  
  40b70f:	enter  0x1187,0xd5
  40b713:	repnz and eax,0x1de9c86b
  40b719:	push   ebx
  40b71a:	mov    eax,0x52765ed6
  40b71f:	mov    BYTE PTR [eax+0x1e707467],dl
  40b725:	in     eax,dx
  40b726:	add    al,0xb8
  40b728:	stc    
  40b729:	jnp    0x40b768
  40b72b:	repnz xchg esp,eax
  40b72d:	cwde   
  40b72e:	lock and al,0xb0
  40b731:	(bad)  
  40b732:	sub    DWORD PTR gs:[ecx],esi
  40b735:	xchg   esi,eax
  40b736:	data16 jno 0x40b6dc
  40b739:	inc    ebp
  40b73a:	dec    esi
  40b73b:	sbb    eax,0xb28b0428
  40b740:	outs   dx,BYTE PTR ds:[esi]
  40b741:	and    DWORD PTR [esi+0x24e52f14],esi
  40b747:	inc    ebx
  40b748:	sbb    eax,0x48a02b41
  40b74d:	div    eax
  40b74f:	push   esp
  40b750:	clc    
  40b751:	cld    
  40b752:	mov    edi,0xd7f0db9e
  40b757:	aaa    
  40b758:	jo     0x40b77a
  40b75a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b75b:	mov    esp,0xc61fe3bb
  40b760:	loope  0x40b743
  40b762:	les    esi,FWORD PTR [ebx-0x59fafa00]
  40b768:	xchg   ebp,eax
  40b769:	and    edx,DWORD PTR [eax]
  40b76b:	mov    ds:0x7ddfb298,al
  40b770:	mov    ds:0x5d0983da,al
  40b775:	aas    
  40b776:	cmp    cl,ch
  40b778:	push   eax
  40b779:	clc    
  40b77a:	inc    edx
  40b77b:	test   edx,ebx
  40b77d:	and    ecx,DWORD PTR [eax]
  40b77f:	jle    0x40b7b6
  40b781:	push   esi
  40b782:	adc    al,0x43
  40b784:	cld    
  40b785:	popf   
  40b786:	mov    BYTE PTR [ebx+0xf3a3b6f],ah
  40b78c:	sti    
  40b78d:	repz ret 
  40b78f:	jmp    0xbc28834e
  40b794:	pop    edi
  40b795:	cmp    ebx,esi
  40b797:	or     al,0x1
  40b799:	pop    ebp
  40b79a:	push   ebx
  40b79b:	mov    ah,0xdb
  40b79d:	lock in al,dx
  40b79f:	add    BYTE PTR cs:[ecx+0x4e],dl
  40b7a3:	aad    0x9e
  40b7a5:	lea    esi,[ebx]
  40b7a7:	pop    ss
  40b7a8:	xchg   edi,eax
  40b7a9:	push   ss
  40b7aa:	add    BYTE PTR [ecx-0x5c9835f7],0x9c
  40b7b1:	fstp   st(0)
  40b7b3:	leave  
  40b7b4:	cld    
  40b7b5:	in     eax,0x7f
  40b7b7:	push   ebp
  40b7b8:	push   es
  40b7b9:	inc    edx
  40b7ba:	mov    edi,0x46fe6b8b
  40b7bf:	mov    dh,0x1a
  40b7c1:	mov    cs,ebp
  40b7c3:	push   esi
  40b7c4:	pop    es
  40b7c5:	adc    eax,0x7fce203f
  40b7ca:	mov    ch,0x8c
  40b7cc:	mov    ds:0x6438ebac,eax
  40b7d1:	les    ecx,FWORD PTR [eax+0x72]
  40b7d4:	rcr    BYTE PTR [edx-0x73],cl
  40b7d7:	inc    ebx
  40b7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7d9:	lods   eax,DWORD PTR ds:[esi]
  40b7da:	inc    ecx
  40b7db:	mov    esp,0x25b1d7b8
  40b7e0:	cs pop dx
  40b7e3:	inc    esp
  40b7e4:	leave  
  40b7e5:	in     al,0xf5
  40b7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7e8:	lods   al,BYTE PTR ds:[esi]
  40b7e9:	fisttp WORD PTR [esi-0x3f15cea0]
  40b7ef:	mov    ebx,0x122de64a
  40b7f4:	loopne 0x40b822
  40b7f6:	and    edx,eax
  40b7f8:	xchg   BYTE PTR [ecx+0x328c5f9e],al
  40b7fe:	mov    ebp,esp
  40b800:	jg     0x40b811
  40b802:	test   BYTE PTR [esi-0x2b],dh
  40b805:	push   0xb9242bd1
  40b80a:	pop    DWORD PTR [esi+0x39a3710]
  40b810:	jge    0x40b832
  40b812:	xchg   ecx,eax
  40b813:	ficom  DWORD PTR [ebx+eiz*2-0x5b7cad94]
  40b81a:	jmp    0xa1e36435
  40b81f:	pop    es
  40b820:	sahf   
  40b821:	lock call 0x20be996d
  40b827:	mov    edi,0x37c6e9cf
  40b82c:	mov    edx,0xa7ce786
  40b831:	or     al,0xdb
  40b833:	hlt    
  40b834:	sub    dh,al
  40b836:	repnz lods al,BYTE PTR ds:[esi]
  40b838:	(bad)  
  40b839:	aad    0xfb
  40b83b:	imul   dh
  40b83d:	shl    DWORD PTR [ebx-0x596e08e0],1
  40b843:	cli    
  40b844:	das    
  40b845:	mov    cl,0x95
  40b847:	push   DWORD PTR [esi+0x63]
  40b84a:	mov    ebx,0x6070cb16
  40b84f:	or     eax,0x92d39966
  40b854:	movnti DWORD PTR [ebp*4-0x23e28fa1],edx
  40b85c:	out    dx,eax
  40b85d:	hlt    
  40b85e:	mov    edi,0x96070d46
  40b863:	adc    edx,ebp
  40b865:	xchg   ebp,eax
  40b866:	dec    eax
  40b867:	jns    0x40b8c7
  40b869:	mov    BYTE PTR [ebx+0x6e9c384a],dh
  40b86f:	dec    ecx
  40b870:	jmp    0x7c65f994
  40b875:	dec    esi
  40b876:	aaa    
  40b877:	mov    eax,0x504a0a02
  40b87c:	pop    ds
  40b87d:	inc    esi
  40b87e:	dec    ecx
  40b87f:	push   ss
  40b880:	adc    eax,0xa80e4bd5
  40b885:	adc    DWORD PTR [eax-0x17],esi
  40b888:	fsub   QWORD PTR [edi-0x3f725532]
  40b88e:	jmp    0xf3fafc64
  40b893:	jp     0x40b8ff
  40b895:	inc    edx
  40b896:	fistp  QWORD PTR [bx+si-0x53]
  40b89a:	mov    eax,ds
  40b89c:	leave  
  40b89d:	push   ebx
  40b89e:	(bad)  
  40b89f:	scas   eax,DWORD PTR es:[edi]
  40b8a0:	xchg   BYTE PTR [ebx+0x197693ca],bh
  40b8a6:	sub    ch,BYTE PTR [esi-0x4adbadfb]
  40b8ac:	push   0x5d873530
  40b8b1:	inc    ebx
  40b8b2:	xchg   ebx,eax
  40b8b3:	arpl   sp,bp
  40b8b5:	hlt    
  40b8b6:	xchg   ecx,eax
  40b8b7:	mov    ebx,0xc4241a51
  40b8bc:	fist   WORD PTR [ecx+0x31]
  40b8bf:	daa    
  40b8c0:	xchg   eax,esp
  40b8c2:	mov    ecx,DWORD PTR [edi-0x26]
  40b8c5:	out    dx,eax
  40b8c6:	cmp    BYTE PTR [ebp+eiz*4+0x3be97f32],ch
  40b8cd:	clc    
  40b8ce:	add    bl,cl
  40b8d0:	dec    ebp
  40b8d1:	inc    edi
  40b8d2:	mov    edx,0xab93a2ba
  40b8d7:	scas   al,BYTE PTR es:[edi]
  40b8d8:	icebp  
  40b8d9:	jl     0x40b916
  40b8db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8dc:	adc    al,0xbb
  40b8de:	out    dx,eax
  40b8df:	enter  0x5bce,0x4
  40b8e3:	popf   
  40b8e4:	adc    DWORD PTR [esi-0x52],edi
  40b8e7:	ds cmp eax,0xadbe78b5
  40b8ed:	mov    ebx,0xdef67fbb
  40b8f2:	adc    BYTE PTR [ecx],ah
  40b8f4:	cmc    
  40b8f5:	xor    DWORD PTR [ebx],ebp
  40b8f7:	pop    edx
  40b8f8:	loop   0x40b90d
  40b8fa:	jbe    0x40b972
  40b8fc:	lock aad 0x85
  40b8ff:	cmp    al,0x5b
  40b901:	stos   BYTE PTR es:[edi],al
  40b902:	mov    BYTE PTR [eax+ebx*1],ah
  40b905:	pop    esp
  40b906:	xchg   edi,eax
  40b907:	cmp    eax,0x960a3a5d
  40b90c:	retf   0xec82
  40b90f:	scas   eax,DWORD PTR es:[edi]
  40b910:	and    ecx,DWORD PTR [ecx-0x603e4005]
  40b916:	in     al,0x12
  40b918:	shl    DWORD PTR [edi+0x57],1
  40b91b:	dec    ebp
  40b91c:	or     ch,dl
  40b91e:	mov    esp,0xd5a5a089
  40b923:	ja     0x40b95e
  40b925:	mov    es,WORD PTR [esi+0x5d]
  40b928:	adc    esi,DWORD PTR ds:0xcbfef3d2
  40b92e:	jne    0x40b8b5
  40b930:	iret   
  40b931:	loope  0x40b9ae
  40b933:	push   ecx
  40b934:	icebp  
  40b935:	cmp    al,0x2a
  40b937:	frstor [edx+0x37ddb7d3]
  40b93d:	jno    0x40b8dc
  40b93f:	lock fs ds fs jp 0x40b8c8
  40b945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b946:	jl     0x40b9b9
  40b948:	adc    DWORD PTR [ebp+0x2a],ecx
  40b94b:	cli    
  40b94c:	jne    0x40b952
  40b94e:	pop    ds
  40b94f:	mov    ds:0x912b8cbf,eax
  40b954:	cli    
  40b955:	cld    
  40b956:	rol    BYTE PTR [ebp+0x1e8c7db0],1
  40b95c:	ror    BYTE PTR [edi+0x6c20706e],0x20
  40b963:	into   
  40b964:	ror    BYTE PTR [eax],0x21
  40b967:	inc    esi
  40b968:	push   ebx
  40b969:	cmp    dl,BYTE PTR [eax]
  40b96b:	push   esp
  40b96c:	push   ecx
  40b96d:	or     ebp,esp
  40b96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b970:	xchg   esi,eax
  40b971:	xor    BYTE PTR [ecx],dh
  40b973:	dec    edx
  40b974:	out    dx,eax
  40b975:	push   esp
  40b976:	inc    esi
  40b977:	add    al,0xe8
  40b979:	out    0xa1,eax
  40b97b:	pusha  
  40b97c:	xchg   ebp,eax
  40b97d:	adc    al,0x3
  40b97f:	sbb    BYTE PTR [ebx],ch
  40b981:	(bad)  
  40b983:	neg    BYTE PTR [edi]
  40b985:	sub    ebx,esp
  40b987:	ret    0x26d9
  40b98a:	in     eax,dx
  40b98b:	mov    BYTE PTR [ebx+edx*4-0x68],bh
  40b98f:	push   esi
  40b990:	call   0xecdf01c3
  40b995:	fidiv  DWORD PTR [ebp-0x43]
  40b998:	or     BYTE PTR [esi],dl
  40b99a:	rol    DWORD PTR [ebp-0x2a],cl
  40b99d:	addr16 pushf 
  40b99f:	jne    0x40ba0f
  40b9a1:	js     0x40b9ad
  40b9a3:	not    DWORD PTR [edi]
  40b9a5:	mov    al,ds:0x86059620
  40b9aa:	inc    edi
  40b9ab:	pop    ebp
  40b9ac:	add    al,0xbc
  40b9ae:	push   edi
  40b9af:	neg    DWORD PTR [edi]
  40b9b1:	lock adc DWORD PTR [ebx-0x4],edi
  40b9b5:	out    0x95,al
  40b9b7:	shl    esi,1
  40b9b9:	push   ebx
  40b9ba:	(bad)  
  40b9bb:	xlat   BYTE PTR ds:[ebx]
  40b9bc:	xor    BYTE PTR [edi+0x4f02cf3f],dh
  40b9c2:	fisub  WORD PTR [eax-0x1f]
  40b9c5:	das    
  40b9c6:	mov    ch,0xa3
  40b9c8:	retf   0x21c3
  40b9cb:	mov    WORD PTR [edx],gs
  40b9cd:	jg     0x40b9e8
  40b9cf:	arpl   WORD PTR [edx+0x39],sp
  40b9d2:	mov    eax,0x3456d3fd
  40b9d7:	arpl   WORD PTR [edx+0x59],bp
  40b9da:	inc    esp
  40b9db:	jp     0x40b9ec
  40b9dd:	xor    BYTE PTR [edx],0xd8
  40b9e0:	add    al,0xec
  40b9e2:	fidivr WORD PTR [ebx]
  40b9e4:	lock pop edx
  40b9e6:	gs push 0x21389cec
  40b9ec:	aaa    
  40b9ed:	cdq    
  40b9ee:	sub    DWORD PTR cs:[edi+0x78],esp
  40b9f2:	imul   ecx,ebp,0x6c16e2b8
  40b9f8:	aam    0xa
  40b9fa:	mov    esp,0x47aebe4f
  40b9ff:	xchg   edx,eax
  40ba00:	loopne 0x40b9de
  40ba02:	loope  0x40ba12
  40ba04:	or     eax,0x44276189
  40ba09:	mov    eax,ds:0x8c1a8c2c
  40ba0e:	test   DWORD PTR es:[ebx+edx*1+0x74],eax
  40ba13:	inc    ebp
  40ba14:	out    dx,eax
  40ba15:	adc    eax,0xe72b350a
  40ba1a:	fs cdq 
  40ba1c:	repz loopne 0x40ba9d
  40ba1f:	mov    BYTE PTR [eax+0x4c903efe],0x6a
  40ba26:	cmp    dh,BYTE PTR [ebp+0xce9e186]
  40ba2c:	add    BYTE PTR ds:0xdbe1d9d6,bh
  40ba32:	cwde   
  40ba33:	out    dx,al
  40ba34:	loopne 0x40b9ea
  40ba36:	add    al,0xe0
  40ba38:	out    0xf7,eax
  40ba3a:	mov    edx,edx
  40ba3c:	popa   
  40ba3d:	out    dx,eax
  40ba3e:	sub    esi,DWORD PTR [esp+edx*1+0xc]
  40ba42:	test   esp,ebx
  40ba44:	adc    DWORD PTR [eax-0x19],edx
  40ba47:	lea    eax,[edx-0x72]
  40ba4a:	lea    edi,[edx+0x4832387d]
  40ba50:	push   esp
  40ba51:	push   cs
  40ba52:	mov    dl,0x64
  40ba54:	sub    BYTE PTR [edx-0x66],bl
  40ba57:	in     eax,0x9b
  40ba59:	icebp  
  40ba5a:	xor    cl,BYTE PTR [ecx+0x14]
  40ba5d:	cs xor cl,ch
  40ba60:	daa    
  40ba61:	(bad)  
  40ba62:	mov    ebx,0x211003aa
  40ba67:	mov    dl,0xcf
  40ba69:	aam    0xa1
  40ba6b:	add    eax,0x57ff6be7
  40ba70:	mov    al,ds:0x821654db
  40ba75:	jmp    0x40ba2f
  40ba77:	imul   ebx,DWORD PTR [eax-0x405cd7c],0xd64a2250
  40ba81:	ss rol dh,1
  40ba84:	test   eax,0x85afacfe
  40ba89:	mov    bh,BYTE PTR [ebp-0x42]
  40ba8c:	mov    al,0x6e
  40ba8e:	push   ss
  40ba8f:	sbb    al,ch
  40ba91:	xchg   esi,eax
  40ba92:	imul   edi,DWORD PTR [edx],0x73
  40ba95:	shl    bh,1
  40ba97:	mov    edx,0xd2749be
  40ba9c:	inc    ebx
  40ba9d:	jmp    0x40ba32
  40ba9f:	aam    0x7b
  40baa1:	jg     0x40ba7d
  40baa3:	dec    esi
  40baa4:	add    DWORD PTR [ebx-0x770e522a],ebp
  40baaa:	int3   
  40baab:	jae    0x40bb00
  40baad:	fadd   DWORD PTR [esi+0x34]
  40bab0:	add    esi,DWORD PTR [edi-0x3a28cc05]
  40bab6:	jmp    0x9572367a
  40babb:	mov    ah,0x24
  40babd:	sub    DWORD PTR [esi],ebx
  40babf:	test   eax,0x688fadf4
  40bac4:	fwait
  40bac5:	je     0x40ba52
  40bac7:	arpl   WORD PTR [edx+0x1fb4207b],sp
  40bacd:	xchg   edx,eax
  40bace:	sub    al,0x1b
  40bad0:	jnp    0x40bac5
  40bad2:	jg     0x40ba57
  40bad4:	int3   
  40bad5:	test   al,0x16
  40bad7:	inc    edx
  40bad8:	jne    0x40bafd
  40bada:	int3   
  40badb:	sbb    bl,ah
  40badd:	jb     0x40bab6
  40badf:	repz xor al,0x41
  40bae2:	es hlt 
  40bae4:	jno    0x40bac6
  40bae6:	lods   eax,DWORD PTR ds:[esi]
  40bae7:	pop    ebp
  40bae8:	rcl    BYTE PTR [eax-0x66],0x88
  40baec:	test   BYTE PTR [eax+0x75],0xe1
  40baf0:	xchg   edx,eax
  40baf1:	retf   0xa009
  40baf4:	mov    edi,0x4e48ccc3
  40baf9:	shr    BYTE PTR [eax],1
  40bafb:	push   ecx
  40bafc:	out    0xcf,al
  40bafe:	inc    edi
  40baff:	cmp    ch,BYTE PTR [ecx]
  40bb01:	mov    al,0xed
  40bb03:	pop    ebx
  40bb04:	fdivr  st(2),st
  40bb06:	pop    esi
  40bb07:	inc    eax
  40bb08:	mov    ah,0x0
  40bb0a:	sbb    BYTE PTR [esi],ch
  40bb0c:	std    
  40bb0d:	addr16 aam 0x4d
  40bb10:	mov    bl,0x10
  40bb12:	cmp    bl,ch
  40bb14:	and    al,0x5b
  40bb16:	pop    ss
  40bb17:	das    
  40bb18:	cmp    DWORD PTR [edi],ebp
  40bb1a:	jmp    0xf76a83e4
  40bb1f:	call   0x5a85:0xd310b02a
  40bb26:	test   eax,0x24f5359
  40bb2b:	mov    ds:0x6d8a932c,eax
  40bb30:	sub    ah,BYTE PTR ds:0x304975e5
  40bb36:	xor    eax,0xa402e128
  40bb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb3c:	imul   edx,DWORD PTR [esi-0x6e],0xffffffe3
  40bb40:	push   ds
  40bb41:	mov    dh,dh
  40bb43:	fldcw  WORD PTR [esp+ebp*8-0x4c29b57b]
  40bb4a:	pop    esp
  40bb4b:	out    0xaa,al
  40bb4d:	inc    esp
  40bb4e:	dec    BYTE PTR [esi+eiz*2+0x46]
  40bb52:	push   edx
  40bb53:	xchg   esi,eax
  40bb54:	jle    0x40bbc7
  40bb56:	and    DWORD PTR ds:0x8a624b3,edx
  40bb5c:	xchg   edx,eax
  40bb5d:	pusha  
  40bb5e:	mov    edi,0x6b2e5331
  40bb63:	sar    eax,0xd4
  40bb66:	aad    0xd1
  40bb68:	retf   
  40bb69:	add    eax,0xf1488eec
  40bb6e:	fisubr DWORD PTR [esi-0x13035aa6]
  40bb74:	aam    0x5f
  40bb76:	out    0xcc,al
  40bb78:	pop    edi
  40bb79:	jno    0x40bbbf
  40bb7b:	enter  0x1a11,0xc2
  40bb7f:	mov    esi,0x4e4c32e2
  40bb84:	and    al,0xf7
  40bb86:	jg     0x40bbc2
  40bb88:	add    eax,0xcd320abf
  40bb8d:	xchg   esp,eax
  40bb8e:	cmp    ebx,edx
  40bb90:	add    eax,0x42
  40bb93:	out    dx,eax
  40bb94:	inc    esp
  40bb95:	inc    edi
  40bb96:	pop    ds
  40bb97:	lea    esp,[esp+ebx*8-0x54]
  40bb9b:	push   eax
  40bb9c:	xor    edi,DWORD PTR [edi-0x18]
  40bb9f:	fwait
  40bba0:	shl    al,cl
  40bba2:	push   ds
  40bba3:	lahf   
  40bba4:	mov    DWORD PTR [ebx+0x7da19b86],edi
  40bbaa:	push   cs
  40bbab:	and    eax,0xba16e59e
  40bbb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbb1:	outs   dx,DWORD PTR ds:[esi]
  40bbb2:	int3   
  40bbb3:	mov    al,0x9d
  40bbb5:	loop   0x40bc04
  40bbb7:	sub    DWORD PTR [esi-0x37c01525],0x62
  40bbbe:	and    DWORD PTR [edi+0x5a],0xffffffe2
  40bbc2:	cld    
  40bbc3:	add    BYTE PTR [ebx+0x38],0x61
  40bbc7:	mov    bh,0x4f
  40bbc9:	push   0x8eab51a6
  40bbce:	popa   
  40bbcf:	arpl   WORD PTR [edi-0xc68236f],bx
  40bbd5:	xor    BYTE PTR [eax-0x19],ah
  40bbd8:	in     eax,dx
  40bbd9:	int    0x9a
  40bbdb:	(bad)  
  40bbdc:	shl    al,cl
  40bbde:	ins    BYTE PTR es:[edi],dx
  40bbdf:	xchg   ecx,eax
  40bbe0:	inc    edx
  40bbe1:	and    eax,0x2d3d92cc
  40bbe6:	push   edx
  40bbe7:	test   DWORD PTR [ecx+0x275b257f],ecx
  40bbed:	out    0x32,eax
  40bbef:	cmc    
  40bbf0:	push   ds
  40bbf1:	and    edi,DWORD PTR [esp+ebx*1+0x37]
  40bbf5:	mov    ebx,0x8aa05807
  40bbfa:	mov    WORD PTR [eax-0x7e],ss
  40bbfd:	adc    BYTE PTR [ecx-0x5971eb89],al
  40bc03:	add    eax,0x2975351b
  40bc08:	sbb    al,0xfe
  40bc0a:	in     al,0x5d
  40bc0c:	push   0xffffff9b
  40bc0e:	pop    eax
  40bc0f:	int3   
  40bc10:	mov    dl,0x57
  40bc12:	push   ebx
  40bc13:	cdq    
  40bc14:	aas    
  40bc15:	inc    edx
  40bc16:	sbb    bh,0x74
  40bc19:	lods   al,BYTE PTR ds:[esi]
  40bc1a:	pusha  
  40bc1b:	inc    ebx
  40bc1c:	xchg   edx,eax
  40bc1d:	stos   DWORD PTR es:[edi],eax
  40bc1e:	jno    0x40bc2c
  40bc20:	dec    edi
  40bc21:	rcr    DWORD PTR [eax-0x4db2eedc],0xc2
  40bc28:	fucom  st(5)
  40bc2a:	int    0xd
  40bc2c:	jo     0x40bca6
  40bc2e:	sub    bh,BYTE PTR [esi+0x2ff3960c]
  40bc34:	push   ebx
  40bc35:	push   ebp
  40bc36:	(bad)  
  40bc37:	pop    eax
  40bc38:	add    ch,BYTE PTR [ebp-0x6a2418e4]
  40bc3e:	sbb    ebp,DWORD PTR [ebx]
  40bc40:	adc    BYTE PTR [ecx],dh
  40bc42:	div    BYTE PTR [esi]
  40bc44:	lahf   
  40bc45:	push   ebp
  40bc46:	out    dx,al
  40bc47:	lock sub al,0xc6
  40bc4a:	cld    
  40bc4b:	out    dx,al
  40bc4c:	mov    BYTE PTR [edi+0x58],dl
  40bc4f:	mov    dl,0xa6
  40bc51:	mov    ecx,0x25484876
  40bc56:	(bad)  
  40bc57:	in     eax,dx
  40bc58:	hlt    
  40bc59:	out    0x7c,eax
  40bc5b:	adc    edi,DWORD PTR [ebx]
  40bc5d:	stos   BYTE PTR es:[edi],al
  40bc5e:	jp     0x40bbe7
  40bc60:	xor    ebp,DWORD PTR [esi+0x7a]
  40bc63:	jb     0x40bbf6
  40bc65:	dec    BYTE PTR [edi-0x577f621b]
  40bc6b:	inc    ecx
  40bc6c:	into   
  40bc6d:	hlt    
  40bc6e:	dec    edx
  40bc6f:	ret    0x1774
  40bc72:	push   esi
  40bc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc74:	mov    bl,0xd6
  40bc76:	adc    al,0x4e
  40bc78:	retf   0xd77b
  40bc7b:	mov    ebp,0x1f7894c7
  40bc80:	push   ecx
  40bc81:	pop    ebp
  40bc82:	sub    BYTE PTR [eax-0x3c],bh
  40bc85:	push   0x5f347ad8
  40bc8a:	and    ch,BYTE PTR [ebp-0x71]
  40bc8d:	dec    esp
  40bc8e:	gs sbb ebp,ebp
  40bc91:	imul   eax,DWORD PTR [edi+edi*4-0x78],0x52
  40bc96:	jg     0x40bc7c
  40bc98:	inc    edx
  40bc99:	test   BYTE PTR [eax+0x67],bl
  40bc9c:	out    0x9,al
  40bc9e:	imul   esp,DWORD PTR [edi],0x8fe41696
  40bca4:	fmulp  st(3),st
  40bca6:	jb     0x40bc35
  40bca8:	cld    
  40bca9:	fcom   DWORD PTR ds:[edx+0x1ee1189]
  40bcb0:	ss jp  0x40bc6b
  40bcb3:	jno    0x40bc89
  40bcb5:	(bad)  
  40bcb6:	xor    eax,0xe4183ec0
  40bcbb:	outs   dx,DWORD PTR ds:[esi]
  40bcbc:	inc    esp
  40bcbd:	retf   
  40bcbe:	ins    DWORD PTR es:[edi],dx
  40bcbf:	imul   ecx,DWORD PTR [esi+0x2],0xffffffb0
  40bcc3:	cmp    al,ah
  40bcc5:	in     eax,0xdb
  40bcc7:	add    ah,bh
  40bcc9:	rcl    ebx,cl
  40bccb:	lea    edx,[eax+0x63]
  40bcce:	mov    eax,0x91203596
  40bcd3:	sub    al,0x50
  40bcd5:	nop
  40bcd6:	shl    BYTE PTR [ecx+0x6e],1
  40bcd9:	in     eax,0x16
  40bcdb:	xchg   ebp,eax
  40bcdc:	add    edx,ebx
  40bcde:	(bad)  
  40bcdf:	aam    0x48
  40bce1:	xchg   esi,eax
  40bce2:	lds    esi,FWORD PTR [ebx+edx*2+0x5f]
  40bce6:	inc    edx
  40bce7:	mov    bh,0xe7
  40bce9:	push   edi
  40bcea:	int    0x2a
  40bcec:	and    BYTE PTR [edx+ebx*8],dh
  40bcef:	adc    dl,BYTE PTR [edx+0x67583de4]
  40bcf5:	sub    eax,0xba4c74c4
  40bcfa:	push   es
  40bcfb:	pop    ds
  40bcfc:	adc    al,0xaf
  40bcfe:	(bad)  
  40bcff:	or     esi,ecx
  40bd01:	cmp    esp,DWORD PTR [eax]
  40bd03:	test   eax,0x92ee9895
  40bd08:	(bad)  
  40bd09:	std    
  40bd0a:	push   cs
  40bd0b:	stc    
  40bd0c:	sbb    ebp,DWORD PTR [esi+0x2aa701f4]
  40bd12:	loope  0x40bcf1
  40bd14:	inc    edx
  40bd15:	stos   DWORD PTR es:[edi],eax
  40bd16:	inc    esi
  40bd17:	(bad)  
  40bd18:	pop    ebp
  40bd19:	xchg   edx,eax
  40bd1a:	ret    0xd9ae
  40bd1d:	add    dh,dl
  40bd1f:	cmp    ebx,DWORD PTR [eax-0x37]
  40bd22:	out    0x48,eax
  40bd24:	inc    ecx
  40bd25:	xchg   edi,eax
  40bd26:	retf   
  40bd27:	push   edi
  40bd28:	fiadd  DWORD PTR [ebp-0x46]
  40bd2b:	out    dx,eax
  40bd2c:	loope  0x40bd9d
  40bd2e:	outs   dx,BYTE PTR ds:[esi]
  40bd2f:	ror    ebp,cl
  40bd31:	xchg   DWORD PTR [ebp-0x5c],ebx
  40bd34:	xchg   esp,eax
  40bd35:	pop    esi
  40bd36:	cld    
  40bd37:	inc    eax
  40bd38:	and    ecx,DWORD PTR [eax]
  40bd3a:	xchg   ecx,eax
  40bd3b:	test   BYTE PTR [ebp+ecx*2-0x40],0xf7
  40bd40:	shl    DWORD PTR [edx+0x2177865a],cl
  40bd46:	jl     0x40bd8b
  40bd48:	jge    0x40bd63
  40bd4a:	dec    esi
  40bd4b:	inc    esi
  40bd4c:	(bad)  
  40bd4d:	(bad)  
  40bd4e:	mov    ?,WORD PTR [eax-0x36d3322a]
  40bd54:	imul   esi,DWORD PTR [eax+0x4d],0x441988f5
  40bd5b:	jl     0x40bcde
  40bd5d:	adc    al,0xea
  40bd5f:	sub    BYTE PTR [edi-0x75623517],0x78
  40bd66:	dec    esi
  40bd67:	dec    ecx
  40bd68:	mov    ss,WORD PTR [edi+0x63]
  40bd6b:	dec    eax
  40bd6c:	sar    BYTE PTR [ecx+0x44c6a83f],cl
  40bd72:	call   0xe5ed0d1c
  40bd77:	daa    
  40bd78:	loopne 0x40bd0e
  40bd7a:	and    esi,DWORD PTR ds:[ecx]
  40bd7d:	or     DWORD PTR [ebp-0x7d],ebp
  40bd80:	and    dh,ch
  40bd82:	add    esi,DWORD PTR [edi]
  40bd84:	aam    0x2e
  40bd86:	push   0x55
  40bd88:	add    ebp,DWORD PTR [ebp-0x52]
  40bd8b:	dec    edi
  40bd8c:	pop    eax
  40bd8d:	jbe    0x40be09
  40bd8f:	shr    BYTE PTR [esi],1
  40bd91:	scas   al,BYTE PTR es:[edi]
  40bd92:	xchg   ecx,eax
  40bd93:	adc    edi,DWORD PTR [ebp-0x25e9eef1]
  40bd99:	xchg   DWORD PTR [esi-0x7162350],eax
  40bd9f:	xor    al,0xd9
  40bda1:	add    edi,esi
  40bda3:	mov    edi,0x3d2a055a
  40bda8:	clc    
  40bda9:	repz cld 
  40bdab:	out    0x44,al
  40bdad:	mov    ebp,0x9f677d4f
  40bdb2:	stc    
  40bdb3:	xchg   esi,eax
  40bdb4:	or     DWORD PTR [edi+edi*4-0x12],esi
  40bdb8:	inc    edx
  40bdb9:	dec    esp
  40bdba:	data16 mov ch,dh
  40bdbd:	xor    al,0xab
  40bdbf:	push   0xffffffe0
  40bdc1:	test   al,0x93
  40bdc3:	out    dx,eax
  40bdc4:	(bad)  
  40bdc5:	inc    esi
  40bdc6:	in     eax,dx
  40bdc7:	mov    ch,0x53
  40bdc9:	mov    dh,0xe5
  40bdcb:	push   es
  40bdcc:	sub    cl,bh
  40bdce:	add    BYTE PTR [edx+eiz*8],bl
  40bdd1:	xor    eax,0x3cccc72b
  40bdd6:	inc    ebp
  40bdd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdd8:	sbb    DWORD PTR [esi-0x65],ecx
  40bddb:	mov    edx,0xc259164b
  40bde0:	cmp    eax,ebx
  40bde2:	ins    BYTE PTR es:[edi],dx
  40bde3:	lods   al,BYTE PTR ds:[esi]
  40bde4:	rcl    DWORD PTR [eax+edx*8],cl
  40bde7:	in     al,0xe7
  40bde9:	bound  edi,QWORD PTR [ebp+0x7b]
  40bdec:	pop    eax
  40bded:	jns    0x40be12
  40bdef:	int3   
  40bdf0:	mov    bh,0x5e
  40bdf2:	push   edx
  40bdf3:	cmp    eax,esi
  40bdf5:	cdq    
  40bdf6:	inc    esp
  40bdf7:	cli    
  40bdf8:	call   0xbd1801b9
  40bdfd:	mov    dl,0xd7
  40bdff:	lock sti 
  40be01:	jp     0x40bdd4
  40be03:	jge    0x40bdac
  40be05:	fsub   DWORD PTR ds:[ebp+0x797266b4]
  40be0c:	nop
  40be0d:	jb     0x40be86
  40be0f:	push   cs
  40be10:	arpl   WORD PTR [ecx-0x5ce13d1],bx
  40be16:	jmp    0x6a60d5a
  40be1b:	sar    BYTE PTR [esi-0x50e6882],0xc2
  40be22:	jb     0x40be0e
  40be24:	outs   dx,DWORD PTR ds:[esi]
  40be25:	push   0x38
  40be27:	or     DWORD PTR [ebp-0x29f50c10],esi
  40be2d:	sbb    cl,BYTE PTR [edi+0x2bec63a1]
  40be33:	out    0xd6,al
  40be35:	int    0xa4
  40be37:	cs jae 0x40beb3
  40be3a:	adc    ebx,DWORD PTR [edx]
  40be3c:	popa   
  40be3d:	outs   dx,DWORD PTR ds:[esi]
  40be3e:	loope  0x40bebb
  40be40:	call   0x21b2:0xeb843e67
  40be47:	shl    DWORD PTR [ecx+0x5fa7f4e1],cl
  40be4d:	add    DWORD PTR [ecx],edi
  40be4f:	mov    ebx,0xcad5aa16
  40be54:	add    eax,0xd6c527e5
  40be59:	test   BYTE PTR [ebp-0x4a],ch
  40be5c:	in     eax,dx
  40be5d:	leave  
  40be5e:	add    eax,0xf688ac93
  40be63:	jl     0x40be44
  40be65:	lahf   
  40be66:	pop    ebx
  40be67:	or     DWORD PTR ds:0x2ba9b2c9,esi
  40be6d:	les    ebp,FWORD PTR [edi-0x24]
  40be70:	shl    DWORD PTR [edi],0x40
  40be73:	mov    ebx,0x4e3d7ee9
  40be78:	loopne 0x40be2c
  40be7a:	mov    dh,0x74
  40be7c:	mov    cl,0x98
  40be7e:	xchg   ebx,eax
  40be7f:	cld    
  40be80:	lock xlat BYTE PTR ds:[ebx]
  40be82:	pop    ebx
  40be83:	mov    esp,0xeae69f76
  40be88:	pop    ebp
  40be89:	ins    BYTE PTR es:[edi],dx
  40be8a:	(bad)  
  40be8b:	mov    esp,0x44445452
  40be90:	and    dh,BYTE PTR [edx+eax*4+0x1a]
  40be94:	or     ch,BYTE PTR [ebx+0xe]
  40be97:	add    DWORD PTR [ecx-0x38030070],esp
  40be9d:	or     eax,0x41a9f567
  40bea2:	mov    al,0x7c
  40bea4:	mov    dl,0xda
  40bea6:	xor    dl,bh
  40bea8:	btr    edi,esi
  40beab:	adc    eax,0xb0a0501a
  40beb0:	and    DWORD PTR [edi-0x2],ebx
  40beb3:	test   DWORD PTR [ecx-0x7f3e8add],0x6e041f84
  40bebd:	leave  
  40bebe:	mov    ah,0x4a
  40bec0:	push   es
  40bec1:	sub    esp,DWORD PTR cs:[eax+0x1566f9df]
  40bec8:	mov    bl,0xa9
  40beca:	jl     0x40be59
  40becc:	repnz test DWORD PTR [eax-0xfe933be],edi
  40bed3:	xor    dh,bh
  40bed5:	leave  
  40bed6:	push   edx
  40bed7:	paddq  mm4,QWORD PTR [esp+esi*2]
  40bedb:	mov    esi,0xf1bf4b8f
  40bee0:	idiv   BYTE PTR [ecx-0x4d]
  40bee3:	daa    
  40bee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bee5:	ds nop
  40bee7:	inc    esp
  40bee8:	jns    0x40bf00
  40beea:	or     esi,DWORD PTR [ecx+0x14]
  40beed:	pop    esp
  40beee:	dec    eax
  40beef:	dec    eax
  40bef0:	popf   
  40bef1:	rcl    DWORD PTR [edx],1
  40bef3:	xchg   DWORD PTR [ebx+ebx*1+0x0],esp
  40bef7:	ins    BYTE PTR es:[edi],dx
  40bef8:	into   
  40bef9:	add    al,0x41
  40befb:	mov    dh,bh
  40befd:	cmp    eax,0xffc707f9
  40bf02:	mov    ecx,esp
  40bf04:	in     al,0x1
  40bf06:	xlat   BYTE PTR ds:[ebx]
  40bf07:	stos   DWORD PTR es:[edi],eax
  40bf08:	cmp    esi,eax
  40bf0a:	jmp    0x8b16c4a2
  40bf0f:	and    cl,BYTE PTR [edi+0x73e094ba]
  40bf15:	imul   esp,esp,0xfffffff0
  40bf18:	jne    0x40be9d
  40bf1a:	xchg   cl,dh
  40bf1c:	xor    DWORD PTR [edi-0x5adc065],edx
  40bf22:	sub    DWORD PTR [edx],eax
  40bf24:	xlat   BYTE PTR ds:[ebx]
  40bf25:	jae    0x40bf6c
  40bf27:	ss mov eax,0x2925ddf2
  40bf2d:	and    eax,0x5de4b8bf
  40bf32:	pop    eax
  40bf33:	ror    al,0x9c
  40bf36:	dec    esp
  40bf37:	jg     0x40beec
  40bf39:	lock stos BYTE PTR es:[edi],al
  40bf3b:	push   ds
  40bf3c:	lods   al,BYTE PTR ds:[esi]
  40bf3d:	inc    esp
  40bf3e:	xlat   BYTE PTR ds:[ebx]
  40bf3f:	xlat   BYTE PTR ds:[ebx]
  40bf40:	lods   al,BYTE PTR ds:[esi]
  40bf41:	loope  0x40bf1f
  40bf43:	popf   
  40bf44:	stos   BYTE PTR es:[edi],al
  40bf45:	push   es
  40bf46:	stc    
  40bf47:	add    eax,0xee5331c2
  40bf4c:	sbb    eax,0x1f3effd6
  40bf51:	test   al,0x85
  40bf53:	aas    
  40bf54:	push   0x3b553e6d
  40bf59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf5a:	and    DWORD PTR [ebp+ecx*4-0x2879216e],edx
  40bf61:	xor    eax,DWORD PTR [ecx]
  40bf63:	push   edi
  40bf64:	sub    edi,eax
  40bf66:	xor    DWORD PTR [ebx],ecx
  40bf68:	and    al,0xcf
  40bf6a:	and    DWORD PTR [edi-0x7d2e9fcd],esi
  40bf70:	push   eax
  40bf71:	scas   al,BYTE PTR es:[edi]
  40bf72:	movups XMMWORD PTR [ebx],xmm5
  40bf75:	div    BYTE PTR [esp]
  40bf78:	imul   edi,DWORD PTR [ecx-0xf],0x931c5a35
  40bf7f:	fs xchg esp,eax
  40bf81:	leave  
  40bf82:	or     dh,BYTE PTR [ebp-0x300f62fb]
  40bf88:	inc    ebx
  40bf89:	push   ds
  40bf8a:	repz ret 0xdc68
  40bf8e:	imul   eax,esi,0x2717a736
  40bf94:	mov    bh,0x79
  40bf96:	fisubr WORD PTR [eax]
  40bf98:	jbe    0x40bf6d
  40bf9a:	pop    edi
  40bf9b:	int    0x70
  40bf9d:	call   0xa7f2:0xc0267a6d
  40bfa4:	inc    ebp
  40bfa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa6:	clc    
  40bfa7:	dec    esp
  40bfa8:	pop    eax
  40bfa9:	mov    esp,0x913d18b3
  40bfae:	call   0x9ac5:0x44591274
  40bfb5:	add    edx,DWORD PTR [ecx]
  40bfb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfb8:	out    0x24,al
  40bfba:	jns    0x40bfca
  40bfbc:	cmc    
  40bfbd:	daa    
  40bfbe:	mov    ebp,0x53dd8ed0
  40bfc3:	fs popa 
  40bfc5:	push   ecx
  40bfc6:	hlt    
  40bfc7:	std    
  40bfc8:	in     eax,0xa0
  40bfca:	inc    ebp
  40bfcb:	daa    
  40bfcc:	test   eax,0x9c07b2c4
  40bfd1:	add    dl,BYTE PTR [eax-0xf]
  40bfd4:	push   ds
  40bfd5:	je     0x40bff3
  40bfd7:	adc    ah,BYTE PTR [ebx]
  40bfd9:	mov    BYTE PTR [eax],dl
  40bfdb:	mov    ecx,0x4d70f4f6
  40bfe0:	lods   eax,DWORD PTR ds:[esi]
  40bfe1:	mov    ds:0xe3031777,al
  40bfe6:	sub    BYTE PTR [edi-0x50],dh
  40bfe9:	aam    0x62
  40bfeb:	adc    bh,BYTE PTR [eax+0x62]
  40bfee:	inc    esi
  40bfef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff0:	and    al,0xaf
  40bff2:	sti    
  40bff3:	and    al,0x5e
  40bff5:	retf   
  40bff6:	icebp  
  40bff7:	es in  eax,dx
  40bff9:	dec    esi
  40bffa:	std    
  40bffb:	es out dx,eax
  40bffd:	jmp    0x9b6b2065
  40c002:	or     BYTE PTR [eax-0x4b],bl
  40c005:	dec    esi
  40c006:	cmp    al,0xf9
  40c008:	lods   al,BYTE PTR ds:[esi]
  40c009:	dec    edi
  40c00a:	sbb    eax,0xae79db9a
  40c00f:	loopne 0x40c043
  40c011:	pop    es
  40c012:	cmc    
  40c013:	pop    esp
  40c014:	jge    0x40bf97
  40c016:	add    DWORD PTR [ebp+esi*2-0x6815194a],edx
  40c01d:	xchg   esp,eax
  40c01e:	xchg   ebp,eax
  40c01f:	cwde   
  40c020:	jnp    0x40c023
  40c022:	in     al,dx
  40c023:	fsubr  st(7),st
  40c025:	and    al,0x6d
  40c027:	mov    ch,0x6c
  40c029:	int3   
  40c02a:	stos   DWORD PTR es:[edi],eax
  40c02b:	das    
  40c02c:	div    BYTE PTR [edi]
  40c02e:	outs   dx,BYTE PTR ds:[esi]
  40c02f:	dec    ecx
  40c030:	adc    bl,BYTE PTR [ebx+0x4ab6ecf9]
  40c036:	adc    eax,ecx
  40c038:	fsubrp st(6),st
  40c03a:	inc    eax
  40c03b:	rcl    BYTE PTR [ecx+0x46],1
  40c03e:	scas   al,BYTE PTR es:[edi]
  40c03f:	and    BYTE PTR [eax+0x1d],al
  40c042:	mov    esp,0x96a795f6
  40c047:	daa    
  40c048:	inc    ebp
  40c049:	or     DWORD PTR [ecx+edi*4+0x3de9a9b1],ecx
  40c050:	or     DWORD PTR [eax-0x46],0x650e9641
  40c057:	stc    
  40c058:	inc    eax
  40c059:	(bad)  
  40c05a:	(bad)  
  40c05b:	pop    ss
  40c05c:	dec    edi
  40c05d:	mov    ch,0xe4
  40c05f:	jmp    0x387e1b7
  40c064:	dec    eax
  40c065:	jmp    FWORD PTR [ebx-0x7f]
  40c068:	adc    eax,0x486ae5d8
  40c06d:	pop    ecx
  40c06e:	not    DWORD PTR [ecx+ebx*8]
  40c071:	out    dx,al
  40c072:	pushf  
  40c073:	aam    0xf1
  40c075:	pop    es
  40c076:	add    al,0xb0
  40c078:	mov    al,0xfd
  40c07a:	mov    ds:0xbd849717,eax
  40c07f:	fisubr DWORD PTR ds:[edi+ecx*4+0x7432c8d]
  40c087:	stos   BYTE PTR es:[edi],al
  40c088:	lods   al,BYTE PTR ds:[esi]
  40c089:	jo     0x40c0c4
  40c08b:	xlat   BYTE PTR ds:[ebx]
  40c08c:	cmc    
  40c08d:	pop    ss
  40c08e:	(bad)  
  40c08f:	icebp  
  40c090:	push   edx
  40c091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c092:	sbb    DWORD PTR [edi],esp
  40c094:	xor    ah,bh
  40c096:	lods   eax,DWORD PTR ds:[esi]
  40c097:	rol    bl,cl
  40c099:	data16 jl 0x40c10d
  40c09c:	scas   eax,DWORD PTR es:[edi]
  40c09d:	mov    edx,eax
  40c09f:	lock mov ds:0xfd25e5f3,al
  40c0a5:	push   0xffffffef
  40c0a7:	sub    eax,0xf2aaf0da
  40c0ac:	jne    0x40c09b
  40c0ae:	mov    dl,BYTE PTR [edx-0x5d1fef35]
  40c0b4:	addr16 push ebx
  40c0b6:	les    esi,FWORD PTR [edi-0x3fa52b0c]
  40c0bc:	out    dx,al
  40c0bd:	mov    ecx,0x8db31a9f
  40c0c2:	icebp  
  40c0c3:	fsubr  QWORD PTR [esi+ebp*4+0x6e]
  40c0c7:	cmp    al,ah
  40c0c9:	lea    ebp,[ecx]
  40c0cb:	fsubrp st(4),st
  40c0cd:	and    ch,BYTE PTR [ecx+eax*1-0x70830493]
  40c0d4:	and    bh,dl
  40c0d6:	mov    edx,ecx
  40c0d8:	pop    eax
  40c0d9:	(bad)  
  40c0db:	pandn  mm1,QWORD PTR [edi]
  40c0de:	repz out dx,eax
  40c0e0:	push   0x7b4558ce
  40c0e5:	stc    
  40c0e6:	xchg   esi,eax
  40c0e7:	mov    ebp,0xea95fdf5
  40c0ec:	mov    eax,0x48019d9d
  40c0f1:	jecxz  0x40c0b5
  40c0f3:	shl    BYTE PTR [edi+0x57a3e595],1
  40c0f9:	or     eax,0x9dc5ec6c
  40c0fe:	repz add al,0x90
  40c101:	cmp    BYTE PTR [ebx],al
  40c103:	sub    edi,DWORD PTR [ecx-0x25]
  40c106:	test   DWORD PTR [esi],ebp
  40c108:	test   eax,0x6e2af678
  40c10d:	out    dx,al
  40c10e:	pop    eax
  40c10f:	fwait
  40c110:	dec    ecx
  40c111:	gs xchg edx,eax
  40c113:	pop    ecx
  40c114:	enter  0xccfb,0xd1
  40c118:	shl    BYTE PTR [edx+0x4da9a40b],cl
  40c11e:	jne    0x40c0b7
  40c120:	pop    edi
  40c121:	loop   0x40c0c7
  40c123:	push   0x7e6df69
  40c128:	jp     0x40c187
  40c12a:	mov    bh,0xb1
  40c12c:	test   eax,0x525b163b
  40c131:	jecxz  0x40c0c7
  40c133:	(bad)  
  40c134:	cld    
  40c135:	into   
  40c136:	fmul   DWORD PTR [esi]
  40c138:	cmp    DWORD PTR [ebx-0x1e],ebp
  40c13b:	xchg   edi,eax
  40c13c:	sub    dl,ch
  40c13e:	adc    dl,BYTE PTR [edi+0x47419d7f]
  40c144:	pop    ss
  40c145:	mov    esp,0x59e65b12
  40c14a:	test   al,0x1c
  40c14c:	cmp    dh,bh
  40c14e:	js     0x40c146
  40c150:	iret   
  40c151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c152:	pusha  
  40c153:	fisttp WORD PTR [edx]
  40c155:	cmp    ebx,DWORD PTR [eax+0x63]
  40c158:	or     al,0xb4
  40c15a:	mov    ds:0xdfd5588e,eax
  40c15f:	jge    0x40c1dd
  40c161:	daa    
  40c162:	pop    ecx
  40c164:	sbb    BYTE PTR [esi-0x15],0x2d
  40c168:	or     DWORD PTR [edi+0x2d951a03],ebp
  40c16e:	out    0xc,al
  40c170:	daa    
  40c171:	pop    ds
  40c172:	int3   
  40c173:	add    BYTE PTR [esi+0x31],ch
  40c176:	cmp    al,0x37
  40c178:	pop    es
  40c179:	cmp    dh,BYTE PTR [ebx+0x5c]
  40c17c:	cli    
  40c17d:	pop    DWORD PTR [ebp+0x2a15dbd3]
  40c183:	sbb    eax,0x1df25676
  40c188:	scas   al,BYTE PTR es:[edi]
  40c189:	inc    edi
  40c18a:	gs aam 0x34
  40c18d:	and    edx,esp
  40c18f:	mov    dh,0xf0
  40c191:	fs iret 
  40c193:	xlat   BYTE PTR ds:[ebx]
  40c194:	(bad)  
  40c195:	addr16 (bad) 
  40c197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c198:	es mov bl,0xc3
  40c19b:	jbe    0x40c16b
  40c19d:	jbe    0x40c175
  40c19f:	mov    ebp,0x2e839359
  40c1a4:	sbb    eax,0x8da7d3bc
  40c1a9:	add    DWORD PTR [esi],0xffffff9a
  40c1ac:	hlt    
  40c1ad:	mov    ecx,0x95c80af0
  40c1b2:	push   ecx
  40c1b3:	retf   0x4bc4
  40c1b6:	ror    DWORD PTR [ecx],cl
  40c1b8:	lahf   
  40c1b9:	pop    edx
  40c1ba:	sbb    eax,0x9c4a2a68
  40c1bf:	and    al,0x4a
  40c1c1:	mov    ecx,DWORD PTR [edx+0x169dd06c]
  40c1c7:	xchg   ebx,eax
  40c1c8:	imul   edi,DWORD PTR [esp+edx*2-0x6200b864],0xffffffe8
  40c1d0:	push   0xffffffd7
  40c1d2:	mov    ds:0x63d5fd58,al
  40c1d7:	sub    eax,0x65f30dc6
  40c1dc:	adc    al,0xb3
  40c1de:	in     eax,0x21
  40c1e0:	cmp    al,0xb4
  40c1e2:	ret    0x8ef8
  40c1e5:	ret    
  40c1e6:	dec    eax
  40c1e7:	and    al,0x1d
  40c1e9:	pusha  
  40c1ea:	popf   
  40c1eb:	fcomp  DWORD PTR [eax+ebx*2+0x63]
  40c1ef:	jnp    0x40c1d2
  40c1f1:	or     al,0xb
  40c1f3:	push   ebp
  40c1f4:	xchg   esi,eax
  40c1f5:	adc    DWORD PTR [esi],esp
  40c1f7:	mov    al,0xd4
  40c1f9:	sbb    al,0xa4
  40c1fb:	push   eax
  40c1fc:	into   
  40c1fd:	mov    eax,ds:0xdbb75ea2
  40c202:	push   0x4c22078e
  40c207:	sbb    eax,0x3e48e465
  40c20c:	fadd   st,st(6)
  40c20e:	jmp    0x40c221
  40c210:	or     eax,0x9764228d
  40c215:	xchg   esi,eax
  40c216:	or     DWORD PTR [ebx+0x2932c405],ecx
  40c21c:	aam    0xde
  40c21e:	inc    esp
  40c21f:	mov    bh,0x70
  40c221:	push   ebx
  40c222:	push   es
  40c223:	shl    al,cl
  40c225:	inc    edx
  40c226:	stos   DWORD PTR es:[edi],eax
  40c227:	test   eax,0xc9faf96b
  40c22c:	sbb    DWORD PTR [ecx],ecx
  40c22e:	pop    esi
  40c22f:	xchg   esi,eax
  40c230:	pop    esp
  40c231:	outs   dx,BYTE PTR ds:[esi]
  40c232:	mov    dh,0xd0
  40c234:	jae    0x40c1c4
  40c236:	pop    es
  40c237:	scas   al,BYTE PTR es:[edi]
  40c238:	mov    bl,0x28
  40c23a:	and    al,0x48
  40c23c:	std    
  40c23d:	call   0x391d:0xcfa4793d
  40c244:	add    esi,edx
  40c246:	sub    eax,0x87f2a029
  40c24b:	cli    
  40c24c:	push   ecx
  40c24d:	out    0x66,al
  40c24f:	push   ebx
  40c250:	mov    ds:0x4cd8a322,eax
  40c255:	dec    ebx
  40c256:	dec    ecx
  40c257:	bound  ecx,QWORD PTR [ebp-0x3ef88b6]
  40c25d:	jnp    0x40c1ee
  40c25f:	enter  0x2ff1,0x4e
  40c263:	mov    al,0x6f
  40c265:	xor    edx,0xbbb780a4
  40c26b:	(bad)  
  40c26c:	out    dx,al
  40c26d:	retf   
  40c26e:	sub    eax,0x4f8e6118
  40c273:	push   0xffffffb0
  40c275:	and    DWORD PTR [edx+esi*1+0x136bda3a],eax
  40c27c:	xchg   esp,eax
  40c27d:	(bad)  [edi+eax*4]
  40c280:	ins    BYTE PTR es:[edi],dx
  40c281:	fwait
  40c282:	push   es
  40c283:	push   ds
  40c284:	cld    
  40c285:	jp     0x40c22b
  40c287:	add    eax,0x860ae1c
  40c28c:	nop
  40c28d:	mov    bl,0x6c
  40c28f:	addr16 xchg ebp,eax
  40c291:	inc    edi
  40c292:	mov    eax,0xe8a7d89f
  40c297:	(bad)  
  40c298:	shr    BYTE PTR [eax+0x6562aec9],cl
  40c29e:	lahf   
  40c29f:	fwait
  40c2a0:	inc    ebx
  40c2a1:	push   0x8a7accb5
  40c2a6:	int    0x95
  40c2a8:	cmp    cl,BYTE PTR [esp+ebp*1]
  40c2ab:	add    esi,DWORD PTR [ecx+eiz*4+0x67]
  40c2af:	mov    eax,0x2337af49
  40c2b4:	or     al,0x5e
  40c2b6:	mov    ebp,eax
  40c2b8:	dec    eax
  40c2b9:	fnsave [edx]
  40c2bb:	fdivp  st(4),st
  40c2bd:	loope  0x40c2f4
  40c2bf:	mov    bh,BYTE PTR [ecx-0x1e]
  40c2c2:	dec    ebx
  40c2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c4:	stos   DWORD PTR es:[edi],eax
  40c2c5:	ins    BYTE PTR es:[edi],dx
  40c2c6:	mov    esi,0x396f2f69
  40c2cb:	test   al,0xb9
  40c2cd:	in     al,dx
  40c2ce:	jg     0x40c2fa
  40c2d0:	xchg   ebp,eax
  40c2d1:	test   BYTE PTR [ebp+0x4e7a3fc6],dl
  40c2d7:	test   DWORD PTR [edx-0x41],ebp
  40c2da:	repz sbb BYTE PTR [ebx+0x4],dh
  40c2de:	xor    eax,0x681b4df7
  40c2e3:	mov    ds:0xcd9aa337,eax
  40c2e8:	inc    edx
  40c2e9:	(bad)  
  40c2eb:	(bad)  
  40c2ec:	rol    BYTE PTR ds:[edi],0xa2
  40c2f0:	in     al,dx
  40c2f1:	into   
  40c2f2:	sbb    al,0xde
  40c2f4:	sbb    bl,BYTE PTR [eax+eiz*8+0x6d]
  40c2f8:	fsubr  QWORD PTR [ebp-0x3ef8757f]
  40c2fe:	add    al,0xd8
  40c300:	sub    eax,0x8dc6a5ee
  40c305:	dec    ecx
  40c306:	sbb    dl,BYTE PTR [edi-0x544ac885]
  40c30c:	xor    al,0x20
  40c30e:	pop    ecx
  40c30f:	in     eax,0x29
  40c311:	and    BYTE PTR [ecx-0x7e],al
  40c314:	cwde   
  40c315:	daa    
  40c316:	rol    ah,cl
  40c318:	(bad)  
  40c319:	pop    eax
  40c31a:	xchg   ebp,eax
  40c31b:	(bad)  
  40c31c:	and    dh,dl
  40c31e:	popf   
  40c31f:	mov    ecx,0xed6823c6
  40c324:	adc    ebp,DWORD PTR [ecx]
  40c326:	out    dx,al
  40c327:	mov    ecx,0x55ef164a
  40c32c:	add    BYTE PTR [ebx],dh
  40c32e:	test   BYTE PTR [ebp-0x4bb7a4af],ah
  40c334:	dec    ecx
  40c335:	cld    
  40c336:	out    0x76,al
  40c338:	xchg   DWORD PTR [esi+0x3e0376c5],edi
  40c33e:	inc    DWORD PTR ds:0xe60c48a3
  40c344:	dec    esi
  40c345:	arpl   WORD PTR [ebx],dx
  40c347:	(bad)  
  40c348:	sbb    ebp,DWORD PTR [eax+0x53f0eddc]
  40c34e:	mov    al,ds:0x9b4fe1bd
  40c353:	lds    ebx,FWORD PTR [esi+eax*8+0x13]
  40c357:	(bad)  
  40c358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c359:	adc    esp,esi
  40c35b:	add    DWORD PTR [edx],edx
  40c35d:	(bad)
  40c360:	sar    DWORD PTR [ebx-0x32bb9205],cl
  40c366:	jb     0x40c37b
  40c368:	mov    al,0x44
  40c36a:	cmp    BYTE PTR [esi],al
  40c36c:	add    bh,BYTE PTR [ebx-0x197febba]
  40c372:	xchg   esi,eax
  40c373:	xor    ah,BYTE PTR [edx]
  40c375:	add    eax,esi
  40c377:	sub    ecx,DWORD PTR [ebp+0x4746fe46]
  40c37d:	mov    eax,0x64891793
  40c382:	nop
  40c383:	cmp    al,0x2b
  40c385:	dec    esi
  40c386:	ja     0x40c407
  40c388:	int3   
  40c389:	pop    eax
  40c38a:	cs push ecx
  40c38c:	inc    esi
  40c38d:	pop    ecx
  40c38e:	cmp    eax,0x2e02899d
  40c393:	adc    eax,0x57def48b
  40c398:	loopne 0x40c3a4
  40c39a:	lock xor al,0x50
  40c39d:	fldenv [edi+0x59b2ac61]
  40c3a3:	ja     0x40c329
  40c3a5:	adc    eax,DWORD PTR [ecx-0x7831d240]
  40c3ab:	fsub   DWORD PTR [ebx]
  40c3ad:	or     dl,BYTE PTR [edi]
  40c3af:	xor    al,dh
  40c3b1:	pop    ecx
  40c3b2:	idiv   DWORD PTR [eax]
  40c3b4:	sar    DWORD PTR ds:0x6c0ebd97,0x66
  40c3bb:	inc    ecx
  40c3bc:	les    ebp,FWORD PTR [ebx-0x22233e54]
  40c3c2:	es int3 
  40c3c4:	push   esp
  40c3c5:	pop    ds
  40c3c6:	loopne 0x40c3e3
  40c3c8:	mov    al,BYTE PTR [edi+0x27]
  40c3cb:	xor    DWORD PTR [edx],0xffffff83
  40c3ce:	pop    ds
  40c3cf:	pop    esp
  40c3d0:	push   ds
  40c3d1:	lods   eax,DWORD PTR ds:[esi]
  40c3d2:	sbb    esi,eax
  40c3d4:	xchg   ah,bh
  40c3d6:	xchg   ebp,eax
  40c3d7:	jnp    0x40c398
  40c3d9:	ja     0x40c42d
  40c3db:	bound  esi,QWORD PTR [edi-0x70e0abf0]
  40c3e1:	cmp    BYTE PTR [edi],ch
  40c3e3:	ret    0x4548
  40c3e6:	frstor [edx]
  40c3e8:	test   al,0x94
  40c3ea:	mov    BYTE PTR [ebx+ecx*8-0x1bde16d0],bh
  40c3f1:	xchg   ecx,eax
  40c3f2:	inc    ebx
  40c3f3:	loope  0x40c3d8
  40c3f5:	jge    0x40c43e
  40c3f7:	sbb    BYTE PTR [ebx],dh
  40c3f9:	lock xor BYTE PTR ds:0x316372c1,ch
  40c400:	ds enter 0xfcee,0x60
  40c405:	pop    ebp
  40c406:	int    0xe8
  40c408:	(bad)  
  40c409:	es sahf 
  40c40b:	dec    edi
  40c40c:	mov    ah,0xba
  40c40e:	adc    BYTE PTR [ebp-0x1c],bl
  40c411:	pop    ebp
  40c412:	loope  0x40c44c
  40c414:	dec    ebx
  40c415:	pop    edx
  40c416:	add    bh,BYTE PTR ds:0xe4468efa
  40c41c:	stos   BYTE PTR es:[edi],al
  40c41d:	pop    eax
  40c41e:	inc    eax
  40c41f:	xchg   esp,eax
  40c420:	dec    edi
  40c421:	sbb    ebp,DWORD PTR [eax+0x38]
  40c424:	(bad)  
  40c425:	cmp    BYTE PTR [esi],dh
  40c427:	clc    
  40c428:	adc    DWORD PTR [eax-0x60],ebx
  40c42b:	push   ecx
  40c42c:	outs   dx,BYTE PTR ds:[esi]
  40c42d:	xchg   edi,eax
  40c42e:	neg    DWORD PTR [ebp+0x2d7ef98c]
  40c434:	imul   eax,DWORD PTR [ebx],0x47e6c397
  40c43a:	ins    DWORD PTR es:[edi],dx
  40c43b:	dec    ebx
  40c43c:	xor    DWORD PTR [eax+0xf994680],esi
  40c442:	arpl   WORD PTR [ebx+0x54],bp
  40c445:	es xchg edx,edx
  40c448:	bound  esp,QWORD PTR [ebx+0x6]
  40c44b:	dec    esp
  40c44c:	gs pop ss
  40c44e:	push   ss
  40c44f:	js     0x40c409
  40c451:	mov    eax,ds:0xc6b2d6bc
  40c456:	test   DWORD PTR [ecx],ebx
  40c458:	outs   dx,DWORD PTR ds:[esi]
  40c459:	(bad)  
  40c45a:	int3   
  40c45b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c45c:	dec    ecx
  40c45d:	xor    BYTE PTR [edi-0x54],0x1f
  40c461:	pop    esi
  40c462:	push   ds
  40c463:	into   
  40c464:	cwde   
  40c465:	lods   al,BYTE PTR ds:[esi]
  40c466:	adc    edi,DWORD PTR [bx]
  40c469:	bound  ebp,QWORD PTR ds:0x67781d89
  40c46f:	ds jno 0x40c4a9
  40c472:	xor    BYTE PTR [ebx+0x69f1f84f],0xd2
  40c479:	pushf  
  40c47a:	popa   
  40c47b:	push   0x3af7782a
  40c480:	add    eax,0x2e3e0d1
  40c485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c486:	je     0x40c4b5
  40c488:	jno    0x40c44a
  40c48a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c48b:	(bad)  
  40c48c:	xor    DWORD PTR [ebp+0xdef772d],ebx
  40c492:	or     eax,0x24ebb767
  40c497:	dec    ecx
  40c498:	cmp    BYTE PTR [ebp+0x15f53886],dh
  40c49e:	jno    0x40c450
  40c4a0:	xchg   ecx,eax
  40c4a1:	cdq    
  40c4a2:	sub    DWORD PTR [eax],esp
  40c4a4:	out    0x5b,eax
  40c4a6:	stos   DWORD PTR es:[edi],eax
  40c4a7:	sbb    DWORD PTR [ebp+ebx*2-0x55],ebx
  40c4ab:	push   ebx
  40c4ac:	mov    dh,0xf0
  40c4ae:	inc    ebp
  40c4af:	sbb    edx,DWORD PTR [edi+ecx*2-0x43]
  40c4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4b4:	inc    esi
  40c4b5:	fistp  QWORD PTR [edx]
  40c4b7:	fisub  WORD PTR [ebx-0x4e3406ec]
  40c4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4be:	add    eax,0x8e5d3d
  40c4c3:	call   0x106a:0x65e40417
  40c4ca:	xchg   esi,eax
  40c4cb:	mov    BYTE PTR [eax],dh
  40c4cd:	cmp    eax,0xefe87691
  40c4d2:	ror    DWORD PTR [edx+0x77],1
  40c4d5:	mov    ch,0x98
  40c4d7:	pop    ds
  40c4d8:	pop    ebp
  40c4d9:	cmp    al,0xb9
  40c4db:	push   0xffffff98
  40c4dd:	sub    eax,0xa23d63e1
  40c4e2:	sar    DWORD PTR [ecx],1
  40c4e4:	ficom  DWORD PTR [edi-0x45076134]
  40c4ea:	das    
  40c4eb:	int3   
  40c4ec:	dec    esp
  40c4ed:	retf   0x852c
  40c4f0:	jg     0x40c4a7
  40c4f2:	shr    BYTE PTR [ebx],cl
  40c4f4:	int3   
  40c4f5:	mov    eax,ds:0x580415f9
  40c4fa:	cmp    bh,BYTE PTR [eax+edx*4-0x58ccb478]
  40c501:	push   ds
  40c502:	shr    BYTE PTR [edi],1
  40c504:	(bad)  
  40c505:	rol    DWORD PTR [eax],cl
  40c507:	daa    
  40c508:	cmc    
  40c509:	fsub   QWORD PTR [edi-0x5f6205e0]
  40c50f:	xchg   DWORD PTR [edi],esi
  40c511:	pop    es
  40c512:	sbb    BYTE PTR [edx+edx*2],ah
  40c515:	jns    0x40c53c
  40c517:	test   edx,esp
  40c519:	pushf  
  40c51a:	mov    ecx,0x158540f5
  40c51f:	retf   
  40c520:	mov    edx,0x2e268caf
  40c525:	test   bl,0x97
  40c528:	or     DWORD PTR [eax-0x12],esi
  40c52b:	pusha  
  40c52c:	pop    eax
  40c52d:	and    eax,DWORD PTR [edi+ebp*1-0xec155b8]
  40c534:	xchg   ebx,eax
  40c535:	pop    eax
  40c536:	(bad)  
  40c537:	jle    0x40c584
  40c539:	sub    eax,0x81341a67
  40c53e:	in     eax,dx
  40c53f:	mov    ebx,0xe27465fc
  40c544:	jne    0x40c542
  40c546:	lahf   
  40c547:	xchg   edi,eax
  40c548:	in     eax,dx
  40c549:	sti    
  40c54a:	shl    DWORD PTR [edi],0x4
  40c54d:	repz add BYTE PTR [ebx+0x75],cl
  40c551:	(bad)  [ebx]
  40c553:	lods   eax,DWORD PTR ds:[esi]
  40c554:	xchg   esp,eax
  40c555:	mov    DWORD PTR [edx+0xc],eax
  40c558:	push   DWORD PTR [ecx]
  40c55a:	icebp  
  40c55b:	sbb    DWORD PTR [ecx+0x24],edi
  40c55e:	mov    eax,0x318d3b3d
  40c563:	retf   
  40c564:	jbe    0x40c568
  40c566:	add    al,0xdd
  40c568:	in     eax,dx
  40c569:	add    DWORD PTR [esi-0x5cc6c57d],0xffffffa5
  40c570:	mov    al,0xb0
  40c572:	(bad)  
  40c573:	push   ds
  40c574:	add    al,0x5f
  40c576:	scas   al,BYTE PTR es:[edi]
  40c577:	int3   
  40c578:	shr    BYTE PTR [ebp+0xc5240c],1
  40c57e:	(bad)  
  40c57f:	xchg   ecx,eax
  40c580:	push   esi
  40c581:	aad    0x92
  40c583:	pop    es
  40c584:	fisubr WORD PTR [edi]
  40c586:	(bad)  
  40c588:	ret    0xdb35
  40c58b:	push   ebx
  40c58c:	pusha  
  40c58d:	xor    al,0x2e
  40c58f:	mov    ds:0x67d47890,al
  40c594:	jle    0x40c545
  40c596:	sti    
  40c597:	jl     0x40c548
  40c599:	xchg   ecx,eax
  40c59a:	mov    edx,0x761cab20
  40c59f:	cwde   
  40c5a0:	and    eax,0x6789c51c
  40c5a5:	aaa    
  40c5a6:	xchg   ecx,eax
  40c5a7:	sti    
  40c5a8:	xchg   DWORD PTR [edx-0x7f4bd152],edi
  40c5ae:	lahf   
  40c5af:	clc    
  40c5b0:	xor    ecx,0x1eb93dff
  40c5b6:	xor    DWORD PTR [edx+0x324ec837],edi
  40c5bc:	retf   
  40c5bd:	push   edi
  40c5be:	jmp    0xdfd4fe9b
  40c5c3:	les    esp,FWORD PTR [edx+0x76]
  40c5c6:	ds pop ebx
  40c5c8:	push   ebp
  40c5c9:	mov    dl,0x58
  40c5cb:	cmp    al,0xec
  40c5cd:	push   ecx
  40c5ce:	mov    ds:0x29c93d6d,al
  40c5d3:	push   ds
  40c5d4:	rcr    DWORD PTR [edx],1
  40c5d6:	sahf   
  40c5d7:	dec    ebp
  40c5d8:	sub    edi,DWORD PTR [ebx]
  40c5da:	in     al,dx
  40c5db:	push   cs
  40c5dc:	ins    BYTE PTR es:[edi],dx
  40c5dd:	push   ss
  40c5de:	(bad)  
  40c5df:	(bad)  
  40c5e0:	call   0xaf3a:0x3b9e2142
  40c5e7:	call   0x9fef:0x613608c6
  40c5ee:	sahf   
  40c5ef:	xchg   ecx,eax
  40c5f0:	dec    esi
  40c5f1:	inc    ecx
  40c5f2:	jbe    0x40c669
  40c5f4:	in     al,0x6b
  40c5f6:	mov    ch,al
  40c5f8:	inc    esi
  40c5f9:	lea    edi,[ebp+0x69f07ea3]
  40c5ff:	jnp    0x40c5b9
  40c601:	mov    al,0x33
  40c603:	mov    ebp,DWORD PTR [ebp+edx*1+0x7b]
  40c607:	inc    esi
  40c608:	cmp    BYTE PTR [ebx+0x6fd380e5],bh
  40c60e:	lods   al,BYTE PTR ds:[esi]
  40c60f:	xchg   ebx,eax
  40c610:	sbb    DWORD PTR [eax+0x24],esp
  40c613:	add    eax,0x2d6cf2bf
  40c618:	rcr    DWORD PTR [ecx-0x74],cl
  40c61b:	test   DWORD PTR [edx],esi
  40c61d:	add    BYTE PTR [ecx+0x7],dh
  40c620:	sub    edx,ebx
  40c622:	iret   
  40c623:	mov    edi,0x89f86f28
  40c628:	sub    al,0x46
  40c62a:	mov    bl,0x24
  40c62c:	ins    DWORD PTR es:[edi],dx
  40c62d:	mov    ah,0xae
  40c62f:	js     0x40c65d
  40c631:	mov    edx,ds
  40c633:	mov    DWORD PTR [ebx],esi
  40c635:	ror    DWORD PTR [ebp-0x1a3fc77c],0x64
  40c63c:	add    BYTE PTR [ebx-0x6ccf383],cl
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	dec    ebp
  40cc3e:	addr16 and bh,ch
  40cc41:	clc    
  40cc42:	in     eax,0x7a
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	call   0x2bc4cad1
  40cc4e:	inc    edi
  40cc4f:	and    bl,BYTE PTR [edx+0x24]
  40cc52:	sub    ch,BYTE PTR es:[ebx]
  40cc55:	out    dx,al
  40cc56:	in     eax,0xdc
  40cc58:	fs in  al,0x49
  40cc5b:	sbb    BYTE PTR ds:0xba151f46,ah
  40cc61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc62:	sub    eax,0x27adf39d
  40cc67:	and    eax,0x7e5c072d
  40cc6c:	jbe    0x40cbf2
  40cc6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc6f:	clc    
  40cc70:	xchg   ecx,eax
  40cc71:	test   eax,0xc174c06c
  40cc76:	dec    ecx
  40cc77:	hlt    
  40cc78:	jmp    0x40cc3c
  40cc7a:	ss mov cl,0xc7
  40cc7d:	mul    DWORD PTR [eax-0x517bf916]
  40cc83:	cwde   
  40cc84:	and    al,0x19
  40cc86:	jae    0x40ccea
  40cc88:	daa    
  40cc89:	out    dx,al
  40cc8a:	pminsw mm5,QWORD PTR [esi-0x50]
  40cc8e:	xor    al,0x97
  40cc90:	cmp    BYTE PTR [edi+ecx*1+0x41],dl
  40cc94:	stos   BYTE PTR es:[edi],al
  40cc95:	ins    DWORD PTR es:[edi],dx
  40cc96:	retf   
  40cc97:	add    BYTE PTR [ebp-0x71],bl
  40cc9a:	lea    esp,[edx+eiz*2]
  40cc9d:	pop    edx
  40cc9e:	clc    
  40cc9f:	ret    
  40cca0:	mov    al,BYTE PTR [ebx-0x41d8ccb0]
  40cca6:	xchg   esi,eax
  40cca7:	leave  
  40cca8:	jnp    0x40cc7c
  40ccaa:	pushf  
  40ccab:	xchg   ebp,eax
  40ccac:	fsubr  QWORD PTR [esi+0x54c9325c]
  40ccb2:	pop    ss
  40ccb3:	mov    ds:0x77c0148a,eax
  40ccb8:	loop   0x40cc77
  40ccba:	in     eax,0x4e
  40ccbc:	mov    bh,0x9b
  40ccbe:	and    DWORD PTR [ecx+ebx*2],esi
  40ccc1:	ds aad 0xa2
  40ccc4:	lahf   
  40ccc5:	test   eax,0x8f65d68e
  40ccca:	dec    edx
  40cccb:	stos   DWORD PTR es:[edi],eax
  40cccc:	sar    DWORD PTR [eax-0x51ba2d7a],1
  40ccd2:	jmp    0x40cc79
  40ccd4:	pop    ds
  40ccd5:	mov    ds:0x7b282e83,al
  40ccda:	add    DWORD PTR [edx],esi
  40ccdc:	pop    edx
  40ccdd:	out    0xd6,eax
  40ccdf:	push   ebx
  40cce0:	aaa    
  40cce1:	(bad)  
  40cce2:	(bad)  [ecx-0x67256732]
  40cce8:	scas   eax,DWORD PTR es:[edi]
  40cce9:	jb     0x40cce1
  40cceb:	fcmovnu st,st(5)
  40cced:	(bad)  
  40ccef:	and    ah,BYTE PTR [ecx-0x3c45e28c]
  40ccf5:	cmp    BYTE PTR [edi+0xda146c6],0x9d
  40ccfc:	jl     0x40cc9c
  40ccfe:	push   0xffffffa1
  40cd00:	das    
  40cd01:	dec    ecx
  40cd02:	add    BYTE PTR [ebp-0x3a],dl
  40cd05:	test   DWORD PTR [ebp-0xe],edx
  40cd08:	mov    edx,0x9218c232
  40cd0d:	dec    ebx
  40cd0e:	outs   dx,BYTE PTR ds:[esi]
  40cd0f:	xor    edx,edi
  40cd11:	xchg   edi,eax
  40cd12:	(bad)  
  40cd13:	dec    ebx
  40cd14:	mov    ah,bh
  40cd16:	icebp  
  40cd17:	xor    eax,0x36e02613
  40cd1c:	sbb    al,0xb8
  40cd1e:	ret    0x8568
  40cd21:	pop    ecx
  40cd22:	cwde   
  40cd23:	lods   al,BYTE PTR ds:[esi]
  40cd24:	cmp    BYTE PTR [eax+eax*1],bh
  40cd27:	jmp    DWORD PTR [ebx]
  40cd29:	scas   al,BYTE PTR es:[edi]
  40cd2a:	out    0x55,eax
  40cd2c:	pop    eax
  40cd2d:	daa    
  40cd2e:	xchg   esp,eax
  40cd2f:	stos   BYTE PTR es:[edi],al
  40cd30:	pusha  
  40cd31:	stos   BYTE PTR es:[edi],al
  40cd32:	mov    dl,BYTE PTR [ebx]
  40cd34:	adc    ecx,DWORD PTR [ecx]
  40cd36:	test   DWORD PTR [esi],ecx
  40cd38:	(bad)  
  40cd39:	(bad)  
  40cd3a:	lock push ebp
  40cd3c:	cwde   
  40cd3d:	mov    cl,0x6
  40cd3f:	and    DWORD PTR [esi],ebp
  40cd41:	data16 mov al,ah
  40cd44:	sbb    DWORD PTR [eax-0x4e0011a7],0xffffffb8
  40cd4b:	fwait
  40cd4c:	add    eax,0xf406d38f
  40cd51:	xchg   edx,eax
  40cd52:	mov    es,eax
  40cd54:	and    ah,bl
  40cd56:	xor    eax,0x5c1cd549
  40cd5b:	jl     0x40cd95
  40cd5d:	int    0xb2
  40cd5f:	mov    ch,0x65
  40cd61:	lahf   
  40cd62:	mov    dl,0xde
  40cd64:	icebp  
  40cd65:	cld    
  40cd66:	(bad)  
  40cd67:	std    
  40cd68:	loopne 0x40cd59
  40cd6a:	int    0x7d
  40cd6c:	or     al,0xab
  40cd6e:	xor    al,0xaa
  40cd70:	(bad)  
  40cd71:	dec    ebx
  40cd72:	xchg   esp,eax
  40cd73:	xchg   esp,eax
  40cd74:	or     ah,BYTE PTR [esi-0x64]
  40cd77:	jo     0x40cd22
  40cd79:	in     al,0x5c
  40cd7b:	idiv   dl
  40cd7d:	ja     0x40cd3f
  40cd7f:	mov    dh,0xc9
  40cd81:	lods   eax,DWORD PTR ds:[esi]
  40cd82:	fsub   DWORD PTR [esp+edx*1-0xe]
  40cd86:	push   edi
  40cd87:	jns    0x40cd7d
  40cd89:	mov    ah,0xed
  40cd8b:	push   0xb0964720
  40cd90:	sti    
  40cd91:	gs out dx,al
  40cd93:	sub    DWORD PTR [esi+edx*2],0xffffffd4
  40cd97:	cmp    DWORD PTR [ebp-0x6e00ae8e],ecx
  40cd9d:	gs inc ebp
  40cd9f:	in     al,0x13
  40cda1:	retf   0x4864
  40cda4:	sub    eax,0x4c8456cc
  40cda9:	jg     0x40cdb9
  40cdab:	gs jae 0x40ce14
  40cdae:	or     BYTE PTR [esi+edi*1],ch
  40cdb1:	xor    BYTE PTR [ecx-0x42349da3],ch
  40cdb7:	push   cs
  40cdb8:	or     ch,BYTE PTR [ebx-0x56338db3]
  40cdbe:	cli    
  40cdbf:	ret    
  40cdc0:	pop    ss
  40cdc1:	(bad)  
  40cdc2:	dec    ecx
  40cdc3:	mov    al,ds:0xf0ace3b3
  40cdc8:	(bad)  
  40cdc9:	xchg   esi,eax
  40cdca:	in     eax,0x3e
  40cdcc:	jmp    0xbb5:0x9202eb3a
  40cdd3:	or     al,0x92
  40cdd5:	addr16 retf 0x67ff
  40cdd9:	cld    
  40cdda:	xchg   esi,eax
  40cddb:	sub    ebx,esp
  40cddd:	dec    edx
  40cdde:	pmullw mm5,QWORD PTR [esi+0x1e]
  40cde2:	test   BYTE PTR [esi+0x28053955],dl
  40cde8:	dec    edi
  40cde9:	push   ebx
  40cdea:	leave  
  40cdeb:	cmp    ecx,ebp
  40cded:	retf   
  40cdee:	shr    cl,1
  40cdf0:	pop    eax
  40cdf1:	mov    ch,0xe8
  40cdf3:	fidivr WORD PTR [edx]
  40cdf5:	int3   
  40cdf6:	or     edi,DWORD PTR [esi+0x18]
  40cdf9:	jnp    0x40ce3c
  40cdfb:	ja     0x40cd8f
  40cdfd:	push   ds
  40cdfe:	pop    edi
  40cdff:	push   0x13995ea8
  40ce04:	fnsave [edx+edi*2+0x73fb3a06]
  40ce0b:	ds (bad) 
  40ce0d:	into   
  40ce0e:	in     eax,dx
  40ce0f:	call   0x8f98:0xcdbb871e
  40ce16:	xchg   DWORD PTR [ebp+0x1b41a750],edx
  40ce1c:	pop    ebp
  40ce1d:	ret    0xed81
  40ce20:	jg     0x40cdc0
  40ce22:	stos   BYTE PTR es:[edi],al
  40ce23:	xchg   ebx,eax
  40ce24:	daa    
  40ce25:	xor    DWORD PTR [ecx+0x6f],esi
  40ce28:	outs   dx,BYTE PTR ds:[esi]
  40ce29:	daa    
  40ce2a:	dec    BYTE PTR [edi]
  40ce2c:	cli    
  40ce2d:	mov    ?,WORD PTR [esp+edi*2-0x26]
  40ce31:	push   esi
  40ce32:	mov    cl,0xbd
  40ce34:	ror    BYTE PTR [ecx+0xb],1
  40ce37:	stos   BYTE PTR es:[edi],al
  40ce38:	cmp    cl,ah
  40ce3a:	or     esi,edi
  40ce3c:	xchg   ecx,eax
  40ce3d:	xor    al,0x22
  40ce3f:	push   es
  40ce40:	fcomp  DWORD PTR [edx]
  40ce42:	call   0x5639b36d
  40ce47:	inc    ebx
  40ce48:	mov    edx,ecx
  40ce4a:	(bad)  
  40ce4b:	pop    ebp
  40ce4c:	sub    ebp,DWORD PTR [ecx]
  40ce4e:	cmp    BYTE PTR [eax-0x13],bh
  40ce51:	nop
  40ce52:	mov    edi,0x52ebd755
  40ce57:	push   esi
  40ce58:	sub    eax,0x1fdc3b24
  40ce5d:	in     eax,dx
  40ce5e:	popf   
  40ce5f:	cdq    
  40ce60:	ret    
  40ce61:	(bad)  
  40ce62:	pop    ecx
  40ce63:	jl     0x40ceae
  40ce65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce66:	mov    cl,0xf7
  40ce68:	hlt    
  40ce69:	es add eax,0xde763753
  40ce6f:	inc    edi
  40ce70:	mov    ds:0xec1ab3c6,al
  40ce75:	lods   eax,DWORD PTR ds:[esi]
  40ce76:	cmp    ecx,DWORD PTR [ecx+0x12]
  40ce79:	mov    esp,0xe704dbb6
  40ce7e:	xlat   BYTE PTR ds:[ebx]
  40ce7f:	adc    al,BYTE PTR [eax]
  40ce81:	mov    eax,0xb3c4dda
  40ce86:	inc    eax
  40ce87:	jb     0x40ce89
  40ce89:	xchg   ecx,eax
  40ce8a:	push   ecx
  40ce8b:	pusha  
  40ce8c:	pusha  
  40ce8d:	push   es
  40ce8e:	cs mov edi,0xc68a3977
  40ce94:	jns    0x40ce90
  40ce96:	inc    ebx
  40ce97:	mov    eax,ds:0x77412634
  40ce9c:	sub    al,0x55
  40ce9e:	add    cl,ch
  40cea0:	pop    ss
  40cea1:	jb     0x40cf11
  40cea3:	dec    edx
  40cea4:	adc    dh,BYTE PTR [esi-0x44]
  40cea7:	mov    bl,BYTE PTR [esi-0x5a122b60]
  40cead:	jg     0x40ce7d
  40ceaf:	(bad)  
  40ceb0:	mov    dh,0x17
  40ceb2:	cmp    al,0xee
  40ceb4:	xchg   esp,eax
  40ceb5:	jmp    0x1cfb:0x2ab6ae05
  40cebc:	mov    dl,0x94
  40cebe:	jne    0x40cf0c
  40cec0:	cmp    dh,BYTE PTR [edi]
  40cec2:	mov    cl,0x9e
  40cec4:	jb     0x40cf23
  40cec6:	add    BYTE PTR [ecx-0x3296fa0c],bh
  40cecc:	jg     0x40ce71
  40cece:	cmc    
  40cecf:	out    0x7f,al
  40ced1:	jmp    0xdf7ff01c
  40ced6:	cmc    
  40ced7:	dec    edx
  40ced8:	xchg   ebx,eax
  40ced9:	fidivr WORD PTR [ebp-0x49]
  40cedc:	hlt    
  40cedd:	add    bl,bl
  40cedf:	stc    
  40cee0:	dec    ebx
  40cee1:	xchg   edi,eax
  40cee2:	push   0x5b
  40cee4:	data16 aaa 
  40cee6:	push   edi
  40cee7:	rcl    DWORD PTR [eax],0xb
  40ceea:	xor    esp,DWORD PTR [edi+0x6a]
  40ceed:	shr    esi,1
  40ceef:	dec    esi
  40cef0:	dec    ecx
  40cef1:	and    DWORD PTR [ecx+0x50bb021b],0x9af41a2b
  40cefb:	pusha  
  40cefc:	ds retf 
  40cefe:	adc    eax,0xb14538e4
  40cf03:	inc    edi
  40cf04:	and    ebx,DWORD PTR [ecx+0x5c]
  40cf07:	test   al,0x2d
  40cf09:	dec    esp
  40cf0a:	stos   BYTE PTR es:[edi],al
  40cf0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf0c:	sbb    cl,BYTE PTR [ecx+0x55]
  40cf0f:	sbb    dh,dh
  40cf11:	jp     0x40cf79
  40cf13:	popf   
  40cf14:	mov    ebp,0x370c350e
  40cf19:	push   0x70
  40cf1b:	mov    WORD PTR ds:0x22100c72,fs
  40cf21:	mov    ebp,0x57be9edd
  40cf26:	cmp    DWORD PTR [ebx+eax*8-0xd],esp
  40cf2a:	xchg   BYTE PTR [edx],ch
  40cf2c:	xchg   ecx,eax
  40cf2d:	or     al,0x72
  40cf2f:	mov    ds:0x41847774,al
  40cf34:	pop    ebp
  40cf35:	xchg   DWORD PTR [ebx],ecx
  40cf37:	sbb    edx,DWORD PTR ds:0x92c46369
  40cf3d:	lods   eax,DWORD PTR ds:[esi]
  40cf3e:	add    al,0x32
  40cf40:	out    0xa9,eax
  40cf42:	ret    0x551a
  40cf45:	int3   
  40cf46:	leave  
  40cf47:	dec    di
  40cf49:	sub    edi,DWORD PTR [eax]
  40cf4b:	les    eax,FWORD PTR [eax+esi*8]
  40cf4e:	pushf  
  40cf4f:	sbb    ch,BYTE PTR [esi+0x27181b28]
  40cf55:	sbb    al,0xa9
  40cf57:	pop    esi
  40cf58:	mov    al,0xe8
  40cf5a:	cld    
  40cf5b:	xchg   DWORD PTR [eax-0x4d],edi
  40cf5e:	pushf  
  40cf5f:	push   ecx
  40cf60:	jo     0x40cef6
  40cf62:	clc    
  40cf63:	dec    esp
  40cf64:	fiadd  WORD PTR [eax]
  40cf66:	xchg   edi,eax
  40cf67:	hlt    
  40cf68:	jg     0x40cf3b
  40cf6a:	cmp    edi,esi
  40cf6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf6d:	or     edi,DWORD PTR [ebx+esi*8]
  40cf70:	hlt    
  40cf71:	push   ds
  40cf72:	dec    esi
  40cf73:	inc    ecx
  40cf74:	imul   BYTE PTR [edx]
  40cf76:	and    eax,0xcc18c638
  40cf7b:	push   es
  40cf7c:	xchg   edx,eax
  40cf7d:	dec    esp
  40cf7e:	dec    edx
  40cf7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf80:	jne    0x40cf8e
  40cf82:	or     eax,0x6cbced9f
  40cf87:	in     al,0x13
  40cf89:	out    0xea,eax
  40cf8b:	or     bh,BYTE PTR [edi-0x21]
  40cf8e:	sub    al,0x2b
  40cf90:	mov    edx,0x985ca9d1
  40cf95:	bound  ebp,QWORD PTR [esi]
  40cf97:	or     BYTE PTR [eax+0x6f],bh
  40cf9a:	xchg   ebp,eax
  40cf9b:	push   ds
  40cf9c:	fsub   QWORD PTR [ebp+0x7f273bf6]
  40cfa2:	inc    ecx
  40cfa3:	mov    dl,0x6e
  40cfa5:	fdivr  DWORD PTR [ebx-0x66721046]
  40cfab:	es push ebp
  40cfad:	repnz dec eax
  40cfaf:	scas   eax,DWORD PTR es:[edi]
  40cfb0:	(bad)  
  40cfb1:	jp     0x40cf59
  40cfb3:	aas    
  40cfb4:	xchg   edx,eax
  40cfb5:	das    
  40cfb6:	jne    0x40d012
  40cfb8:	je     0x40cfff
  40cfba:	int    0xcb
  40cfbc:	pop    ebx
  40cfbd:	sub    BYTE PTR [esi-0x39d4fb0f],al
  40cfc3:	repnz mov cl,0x32
  40cfc6:	jge    0x40cfe4
  40cfc8:	stos   DWORD PTR es:[edi],eax
  40cfc9:	jecxz  0x40cfe5
  40cfcb:	sbb    eax,0xf9ea8533
  40cfd0:	dec    eax
  40cfd1:	stos   DWORD PTR es:[edi],eax
  40cfd2:	outs   dx,DWORD PTR ds:[esi]
  40cfd3:	sub    al,0x26
  40cfd5:	lods   eax,DWORD PTR ds:[esi]
  40cfd6:	stos   BYTE PTR es:[edi],al
  40cfd7:	ins    DWORD PTR es:[edi],dx
  40cfd8:	je     0x40d054
  40cfda:	(bad)  
  40cfdb:	push   esi
  40cfdc:	sahf   
  40cfdd:	sbb    ebp,DWORD PTR [edi+0x3f0ef168]
  40cfe3:	loopne 0x40d012
  40cfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe6:	outs   dx,BYTE PTR ds:[esi]
  40cfe7:	mov    edi,DWORD PTR [ebx]
  40cfe9:	fmulp  st(1),st
  40cfeb:	fucomp st(5)
  40cfed:	pop    edi
  40cfee:	fs mov edi,0xccbc81a1
  40cff4:	jl     0x40cf9a
  40cff6:	sub    BYTE PTR [ecx-0x2f],ch
  40cff9:	adc    edx,DWORD PTR [ebp+0x5d]
  40cffc:	add    edi,DWORD PTR [esi-0x37]
  40cfff:	pop    eax
  40d000:	and    dh,BYTE PTR [edx+eiz*4-0x79]
  40d004:	jg     0x40d03a
  40d006:	pop    esp
  40d007:	iret   
  40d008:	xchg   edi,eax
  40d009:	push   0xffffffcc
  40d00b:	cmp    DWORD PTR [edi],edi
  40d00d:	(bad)  
  40d00e:	lods   eax,DWORD PTR ds:[esi]
  40d00f:	je     0x40d007
  40d011:	clc    
  40d012:	pop    ecx
  40d013:	test   BYTE PTR [ebx],dl
  40d015:	push   es
  40d016:	mov    ebp,DWORD PTR [edx]
  40d018:	retf   
  40d019:	js     0x40cfb5
  40d01b:	add    bl,BYTE PTR [edx-0x62]
  40d01e:	sbb    esp,DWORD PTR [eax]
  40d020:	adc    ebp,DWORD PTR [ebx]
  40d022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d023:	(bad)  
  40d024:	mov    BYTE PTR [eax+0x51],dl
  40d027:	pop    ebp
  40d028:	sbb    dl,bh
  40d02a:	sbb    eax,0xcebd5b3c
  40d02f:	jae    0x40d01b
  40d031:	sub    eax,0xbdcc4d10
  40d036:	into   
  40d037:	mov    bl,BYTE PTR [edi-0x1f]
  40d03a:	jo     0x40d031
  40d03c:	cs ret 
  40d03e:	aad    0xc5
  40d040:	and    DWORD PTR [edi],ebx
  40d042:	jmp    0x40d02c
  40d044:	sub    eax,0xc2962b01
  40d049:	cmp    ah,BYTE PTR [eax-0x21a7535a]
  40d04f:	fisttp WORD PTR [edx-0x7ffd7027]
  40d055:	mov    edi,0x788e05e8
  40d05a:	retf   0x7221
  40d05d:	rol    DWORD PTR [ebx],1
  40d05f:	test   BYTE PTR [esi-0xb],ah
  40d062:	scas   al,BYTE PTR es:[edi]
  40d063:	aaa    
  40d064:	or     al,0xd8
  40d066:	imul   ecx,esi,0x74
  40d069:	mov    ss,WORD PTR [eax+eiz*8-0x45970761]
  40d070:	out    dx,eax
  40d071:	sub    DWORD PTR [edi-0x6a],0xcea607b
  40d078:	frstor [esi]
  40d07a:	lock xchg edx,eax
  40d07c:	lahf   
  40d07d:	and    ch,BYTE PTR [ebx+ebx*2-0x53f2fc3]
  40d084:	mov    al,ds:0xcea6c2d8
  40d089:	retf   0x3128
  40d08c:	hlt    
  40d08d:	mov    edi,0xb780fd57
  40d092:	mov    WORD PTR [edi-0x37],?
  40d095:	lods   eax,DWORD PTR ds:[esi]
  40d096:	cmp    DWORD PTR [eax-0x50],edx
  40d099:	dec    esi
  40d09a:	xlat   BYTE PTR ds:[ebx]
  40d09b:	fdivp  st(5),st
  40d09d:	inc    edx
  40d09e:	sahf   
  40d09f:	push   ebp
  40d0a0:	std    
  40d0a1:	fisub  DWORD PTR [edi+edi*1-0x6200ae4d]
  40d0a8:	push   ebp
  40d0a9:	ss pop edx
  40d0ab:	inc    ecx
  40d0ac:	push   ds
  40d0ad:	jb     0x40d083
  40d0af:	mov    esp,0x941c9f54
  40d0b4:	ret    
  40d0b5:	cmp    esi,DWORD PTR [edi]
  40d0b7:	xchg   dh,ch
  40d0b9:	(bad)  
  40d0ba:	stos   BYTE PTR es:[edi],al
  40d0bb:	jns    0x40d070
  40d0bd:	inc    eax
  40d0be:	sub    ah,al
  40d0c0:	shl    BYTE PTR [ebp+0x384ecbbb],0x55
  40d0c7:	pop    es
  40d0c8:	lahf   
  40d0c9:	jmp    0x40d070
  40d0cb:	pop    eax
  40d0cc:	shr    BYTE PTR [ecx],0xed
  40d0cf:	jbe    0x40d05a
  40d0d1:	xchg   ecx,eax
  40d0d2:	fwait
  40d0d3:	scas   al,BYTE PTR es:[edi]
  40d0d4:	leave  
  40d0d5:	xchg   esp,eax
  40d0d6:	int3   
  40d0d7:	jmp    0x40d12c
  40d0d9:	jbe    0x40d07d
  40d0db:	je     0x40d098
  40d0dd:	(bad)  
  40d0de:	imul   esp,DWORD PTR [ecx+0x1f],0x3a
  40d0e2:	dec    esp
  40d0e3:	inc    edi
  40d0e4:	pusha  
  40d0e5:	sbb    BYTE PTR [ecx-0x3b184527],ch
  40d0eb:	scas   al,BYTE PTR es:[edi]
  40d0ec:	cmp    eax,0x4166c3ab
  40d0f1:	std    
  40d0f2:	stc    
  40d0f3:	xchg   ebp,eax
  40d0f4:	bound  edx,QWORD PTR [ecx+edx*2+0x79]
  40d0f8:	int3   
  40d0f9:	add    ebp,DWORD PTR [edx+edi*8-0x476fcbc5]
  40d100:	xchg   edi,eax
  40d101:	outs   dx,BYTE PTR ds:[esi]
  40d102:	fstp   DWORD PTR [edi]
  40d104:	imul   eax,DWORD PTR [ebp-0x6d],0x67c132cf
  40d10b:	fcmovne st,st(3)
  40d10d:	(bad)  
  40d10e:	(bad)  
  40d10f:	repz adc esi,ebx
  40d112:	shl    DWORD PTR [ebx-0x7a],1
  40d115:	push   edx
  40d116:	ins    BYTE PTR es:[edi],dx
  40d117:	(bad)
  40d11a:	imul   ecx,esp,0x10e423aa
  40d120:	icebp  
  40d121:	or     bl,BYTE PTR [edx-0x5a]
  40d124:	test   BYTE PTR [esi-0x5f],0x5a
  40d128:	mov    dl,0x9c
  40d12a:	mov    ecx,0x894cb43e
  40d12f:	push   cs
  40d130:	cdq    
  40d131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d132:	push   ebp
  40d133:	aad    0x4c
  40d135:	add    eax,0x54ae0201
  40d13a:	mov    ah,0xc1
  40d13c:	(bad)  
  40d13d:	aad    0x92
  40d13f:	imul   edx,DWORD PTR [esi],0x38
  40d142:	repnz add esi,ebx
  40d145:	arpl   sp,dx
  40d147:	ins    BYTE PTR es:[edi],dx
  40d148:	mov    ds:0xe70c8ca8,al
  40d14d:	sub    ecx,DWORD PTR [eax-0x22]
  40d150:	sbb    eax,esi
  40d152:	out    dx,al
  40d153:	dec    eax
  40d154:	(bad)  
  40d155:	fwait
  40d156:	cmp    ebx,DWORD PTR [edi+0x8]
  40d159:	xor    ebp,esi
  40d15b:	mov    ds:0xebad2f0f,al
  40d160:	xor    al,0x6e
  40d162:	jno    0x40d14e
  40d164:	fadd   QWORD PTR [ebx+edx*4]
  40d167:	inc    esi
  40d168:	adc    al,0xa9
  40d16a:	leave  
  40d16b:	enter  0xf907,0x5
  40d16f:	stc    
  40d170:	test   BYTE PTR [edi],bl
  40d172:	mov    ds:0x670cc463,al
  40d177:	popf   
  40d178:	ins    DWORD PTR es:[edi],dx
  40d179:	in     eax,dx
  40d17a:	outs   dx,BYTE PTR ds:[esi]
  40d17b:	stc    
  40d17c:	inc    ebp
  40d17d:	stos   BYTE PTR es:[edi],al
  40d17e:	in     al,0x44
  40d180:	adc    edx,ebx
  40d182:	or     DWORD PTR [edx+ebp*4+0x66],0xffffffe0
  40d187:	popa   
  40d188:	sub    BYTE PTR [ecx+0x12d3e231],cl
  40d18e:	fnsave [ebx-0x6b]
  40d191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d192:	mov    esp,DWORD PTR [edi+0x101c54c2]
  40d198:	fmul   DWORD PTR [ecx+ecx*1-0x48]
  40d19c:	inc    ebx
  40d19d:	dec    eax
  40d19e:	adc    ebp,eax
  40d1a0:	or     al,0xdd
  40d1a2:	shr    bl,cl
  40d1a4:	sub    bl,bl
  40d1a6:	mov    ecx,0xd8857953
  40d1ab:	mov    ah,0xb
  40d1ad:	add    eax,0x6c7c6cc5
  40d1b2:	les    esi,FWORD PTR [edx+0x58]
  40d1b5:	sbb    BYTE PTR [eax],bl
  40d1b7:	ins    BYTE PTR es:[edi],dx
  40d1b8:	gs leave 
  40d1ba:	shl    BYTE PTR [ebx-0x33139597],0xff
  40d1c1:	adc    BYTE PTR [esi-0x3f],0x1a
  40d1c5:	xor    DWORD PTR [eax],0xffffffd0
  40d1c8:	push   cs
  40d1c9:	inc    edx
  40d1ca:	add    DWORD PTR [edx-0x6f],0xa
  40d1ce:	adc    ah,al
  40d1d0:	jo     0x40d1bc
  40d1d2:	mov    edi,0x749cb380
  40d1d7:	ins    DWORD PTR es:[edi],dx
  40d1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1d9:	sbb    bl,dl
  40d1db:	push   eax
  40d1dc:	jmp    0xb5558008
  40d1e1:	adc    cl,ch
  40d1e3:	dec    esi
  40d1e4:	mov    ah,0x5
  40d1e6:	jle    0x40d169
  40d1e8:	out    dx,eax
  40d1e9:	rol    DWORD PTR [edx],cl
  40d1eb:	in     eax,dx
  40d1ec:	mov    ds:0xb75fae60,al
  40d1f1:	and    bh,0x4e
  40d1f4:	dec    edx
  40d1f5:	jnp    0x40d249
  40d1f7:	call   0x7caf:0x19e6079c
  40d1fe:	sbb    al,0x15
  40d200:	xor    DWORD PTR gs:[esi+0x1b],esi
  40d204:	lock ins DWORD PTR es:[edi],dx
  40d206:	mov    edi,0xb7e7f856
  40d20b:	test   eax,0xc8ae41ce
  40d210:	add    DWORD PTR [eax+0x11],ecx
  40d213:	out    dx,al
  40d214:	popf   
  40d215:	pusha  
  40d216:	push   edx
  40d217:	sar    BYTE PTR [ebx+0x69],0x2
  40d21b:	outs   dx,BYTE PTR ds:[esi]
  40d21c:	push   edx
  40d21d:	jnp    0x40d1ef
  40d21f:	push   0x446fbe65
  40d224:	sbb    eax,0xfec3bb86
  40d229:	sub    DWORD PTR [ecx-0x8],esi
  40d22c:	out    dx,eax
  40d22d:	push   ebp
  40d22e:	pushfw 
  40d230:	pop    ebx
  40d231:	in     eax,dx
  40d232:	sahf   
  40d233:	ins    DWORD PTR es:[edi],dx
  40d234:	xlat   BYTE PTR ds:[ebx]
  40d235:	out    0xbb,al
  40d237:	cwde   
  40d238:	xor    eax,0x1a38dba2
  40d23d:	in     eax,0x7b
  40d23f:	ins    BYTE PTR es:[edi],dx
  40d240:	mov    dl,0xf
  40d242:	jnp    0x40d23c
  40d244:	push   eax
  40d245:	and    eax,0xa991db83
  40d24a:	pop    eax
  40d24b:	inc    ebx
  40d24c:	or     ah,BYTE PTR [edi-0x34]
  40d24f:	jecxz  0x40d28f
  40d251:	es mov esp,0x72aa558e
  40d257:	popf   
  40d258:	stos   DWORD PTR es:[edi],eax
  40d259:	pop    ebx
  40d25a:	push   esp
  40d25b:	jae    0x40d247
  40d25d:	mov    ebx,0xe96ef67c
  40d262:	or     al,0xac
  40d264:	inc    edx
  40d265:	jg     0x40d2cc
  40d267:	inc    ecx
  40d268:	retf   0x52a8
  40d26b:	les    ecx,FWORD PTR [eax+0x520f9af8]
  40d271:	sbb    DWORD PTR [edi],ecx
  40d273:	ss jmp 0x50f3ee87
  40d279:	stos   BYTE PTR es:[edi],al
  40d27a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40d27c:	mov    WORD PTR [esi+0x63ccd802],ss
  40d282:	adc    ecx,DWORD PTR [edx+0x5734eea7]
  40d288:	cdq    
  40d289:	and    al,0xd
  40d28b:	lahf   
  40d28c:	pushf  
  40d28d:	adc    bh,al
  40d28f:	mov    ah,0x59
  40d291:	in     eax,dx
  40d292:	jo     0x40d296
  40d294:	out    dx,eax
  40d295:	je     0x40d2bb
  40d297:	adc    dh,dl
  40d299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d29a:	inc    esi
  40d29b:	sbb    al,0x2d
  40d29d:	push   ebx
  40d29e:	push   es
  40d29f:	jne    0x40d26e
  40d2a1:	aaa    
  40d2a2:	sbb    eax,0xbc6f3e66
  40d2a7:	jb     0x40d271
  40d2a9:	add    DWORD PTR [ebp+0x39],esi
  40d2ac:	xor    DWORD PTR [ebp+0x32],ebx
  40d2af:	adc    eax,0xb8637566
  40d2b4:	or     dl,BYTE PTR [edx-0x6e287f2b]
  40d2ba:	fs jne 0x40d249
  40d2bd:	mov    esi,DWORD PTR [edi-0x2b330601]
  40d2c3:	mov    dh,0x72
  40d2c5:	cmp    edx,DWORD PTR [ebx]
  40d2c7:	xchg   esi,esi
  40d2c9:	xchg   BYTE PTR [eax],dh
  40d2cb:	xor    al,0x66
  40d2cd:	push   esp
  40d2ce:	scas   al,BYTE PTR es:[edi]
  40d2cf:	imul   eax,esp,0xdead6b30
  40d2d5:	add    al,ch
  40d2d7:	int    0x91
  40d2d9:	scas   al,BYTE PTR es:[edi]
  40d2da:	jnp    0x40d280
  40d2dc:	add    al,0xfb
  40d2de:	mov    BYTE PTR [edi-0x1e66eebf],dh
  40d2e4:	adc    al,0xa0
  40d2e6:	(bad)  
  40d2e7:	fsubrp st(1),st
  40d2e9:	(bad)  
  40d2ea:	and    DWORD PTR [eax],eax
  40d2ec:	test   BYTE PTR [ebp+ebp*4+0x60],al
  40d2f0:	mov    al,ds:0x4338390f
  40d2f5:	dec    edx
  40d2f6:	mov    ebp,0x5cc70c1
  40d2fb:	int3   
  40d2fc:	test   DWORD PTR [edi-0x170d570a],eax
  40d302:	pop    edi
  40d303:	mov    esp,0xb076dd5f
  40d308:	loop   0x40d311
  40d30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d30b:	pushf  
  40d30c:	fwait
  40d30d:	push   0x35
  40d30f:	push   ecx
  40d310:	jae    0x40d29c
  40d312:	pop    ds
  40d313:	add    esi,DWORD PTR [ebp-0x13be5bd6]
  40d319:	mov    ds:0xf2f09da4,eax
  40d31e:	pop    ebx
  40d31f:	adc    ah,BYTE PTR [esi-0x19c33050]
  40d325:	sbb    DWORD PTR [ecx],esi
  40d327:	fcomp  st(1)
  40d329:	call   0x441f:0x490410b
  40d330:	mov    ecx,0x8027dfe7
  40d335:	cmp    DWORD PTR [esp+ebx*8-0x11],0xb709a289
  40d33d:	jnp    0x40d2c1
  40d33f:	jle    0x40d3b0
  40d341:	iret   
  40d342:	rol    cl,1
  40d344:	stc    
  40d345:	shl    DWORD PTR [edx+ebx*1-0x7fe489f5],0xb3
  40d34d:	or     al,BYTE PTR [ebp+0x57]
  40d350:	jmp    0x40d327
  40d352:	mov    ah,0xe8
  40d354:	and    DWORD PTR [edx+0x7e],esp
  40d357:	sbb    esi,edi
  40d359:	cmp    BYTE PTR [ebp+0x40],0xa3
  40d35d:	inc    eax
  40d35e:	ds xchg esp,eax
  40d360:	adc    BYTE PTR [edi+0x43],ah
  40d363:	xor    dh,BYTE PTR [ebp-0x6f]
  40d366:	fwait
  40d367:	mov    bh,0x6a
  40d369:	lock (bad) 
  40d36b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d36c:	add    al,BYTE PTR [esi]
  40d36e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d36f:	aas    
  40d370:	xchg   ebp,eax
  40d371:	sub    bh,ah
  40d373:	xchg   ecx,eax
  40d374:	jmp    0x8199:0x159e516d
  40d37b:	retf   0x899b
  40d37e:	mov    al,0x5e
  40d380:	test   DWORD PTR [ebx+0x49],0x1adad9b6
  40d387:	into   
  40d388:	popf   
  40d389:	dec    esi
  40d38a:	aas    
  40d38b:	iret   
  40d38c:	pop    esi
  40d38d:	sbb    ebp,DWORD PTR [ecx-0x297e46d2]
  40d393:	pop    esi
  40d394:	jbe    0x40d37c
  40d396:	(bad)  
  40d397:	cmp    eax,DWORD PTR [edi-0x79]
  40d39a:	sbb    BYTE PTR [ebp-0x67a986ea],dh
  40d3a0:	mov    bl,0x74
  40d3a2:	push   ds
  40d3a3:	mov    ecx,0xf7611a36
  40d3a8:	aas    
  40d3a9:	in     eax,dx
  40d3aa:	inc    esp
  40d3ab:	das    
  40d3ac:	stos   BYTE PTR es:[edi],al
  40d3ad:	sar    BYTE PTR [eax+0x2eb2270c],1
  40d3b3:	fild   WORD PTR [ecx]
  40d3b5:	mov    ebx,0xb507f1d6
  40d3ba:	xor    ah,0x38
  40d3bd:	mov    DWORD PTR [ebx+0x7c],eax
  40d3c0:	pop    eax
  40d3c1:	adc    DWORD PTR [eax+0x7c],eax
  40d3c4:	aas    
  40d3c5:	cdq    
  40d3c6:	or     DWORD PTR [edi-0x16],eax
  40d3c9:	out    0xfa,eax
  40d3cb:	and    BYTE PTR [ebx],ch
  40d3cd:	ins    DWORD PTR es:[edi],dx
  40d3ce:	in     eax,dx
  40d3cf:	dec    edi
  40d3d0:	in     eax,dx
  40d3d1:	mul    BYTE PTR [edx+0x2a81f517]
  40d3d7:	jp     0x40d3a7
  40d3d9:	mov    ds:0x457430f1,al
  40d3de:	mov    ds:0x9c54fed5,eax
  40d3e3:	xchg   edx,eax
  40d3e4:	icebp  
  40d3e5:	xor    al,0x74
  40d3e7:	sbb    edi,DWORD PTR [ebp+0x67]
  40d3ea:	pop    esp
  40d3eb:	mov    ch,0x9d
  40d3ed:	hlt    
  40d3ee:	pop    edx
  40d3ef:	dec    eax
  40d3f0:	cwde   
  40d3f1:	dec    ebx
  40d3f2:	inc    edi
  40d3f3:	sbb    eax,eax
  40d3f5:	jmp    0x40d394
  40d3f7:	sti    
  40d3f8:	repz pop esi
  40d3fa:	out    dx,eax
  40d3fb:	xchg   al,dl
  40d3fd:	inc    esp
  40d3fe:	xor    esi,edi
  40d400:	in     al,0x49
  40d402:	mov    edi,0xd6513ac3
  40d407:	shl    BYTE PTR [esp+ebp*1-0x645e37d7],0x4f
  40d40f:	ins    DWORD PTR es:[edi],dx
  40d410:	aad    0x7a
  40d412:	mov    dl,0x28
  40d414:	inc    edx
  40d415:	out    dx,eax
  40d416:	lock inc edx
  40d418:	cli    
  40d419:	sub    edi,ecx
  40d41b:	(bad)  
  40d41c:	int    0x14
  40d41e:	xchg   DWORD PTR ss:[ebx-0x5dd33491],eax
  40d425:	js     0x40d3fd
  40d427:	ss push 0xffffffdd
  40d42a:	fmul   DWORD PTR [ebp-0x43]
  40d42d:	adc    al,0x91
  40d42f:	rcr    DWORD PTR [edx],cl
  40d431:	sbb    ebp,DWORD PTR [eax+0x6b]
  40d434:	(bad)  
  40d435:	mov    ds:0xd6ef0951,al
  40d43a:	sub    dh,dh
  40d43c:	xchg   BYTE PTR [esi],dh
  40d43e:	aas    
  40d43f:	inc    edx
  40d440:	inc    ebx
  40d441:	das    
  40d442:	inc    eax
  40d443:	mov    bh,0x21
  40d445:	push   eax
  40d446:	sbb    al,0xc4
  40d448:	push   0x38
  40d44a:	leave  
  40d44b:	retf   
  40d44c:	outs   dx,BYTE PTR ds:[esi]
  40d44d:	dec    DWORD PTR es:[esi]
  40d450:	scas   eax,DWORD PTR es:[edi]
  40d451:	add    bh,BYTE PTR [ecx+0x0]
  40d454:	das    
  40d455:	(bad)  [esi+ebp*2]
  40d458:	xor    eax,DWORD PTR ds:0x62d253dc
  40d45e:	pop    es
  40d45f:	call   0x2462:0x753a35e4
  40d466:	push   ecx
  40d467:	jl     0x40d473
  40d469:	pop    ecx
  40d46a:	adc    BYTE PTR [ecx+0x12],bl
  40d46d:	jp     0x40d466
  40d46f:	das    
  40d470:	pusha  
  40d471:	ins    BYTE PTR es:[edi],dx
  40d472:	popa   
  40d473:	pop    ds
  40d474:	xchg   ecx,eax
  40d475:	daa    
  40d476:	call   DWORD PTR [edx+0x49]
  40d479:	pop    eax
  40d47a:	sti    
  40d47b:	std    
  40d47c:	mov    bl,ah
  40d47e:	push   ds
  40d47f:	call   0xb757e2f5
  40d484:	mov    eax,ds:0xec0572b5
  40d489:	enter  0xee99,0x18
  40d48d:	ins    DWORD PTR es:[edi],dx
  40d48e:	cmp    ah,BYTE PTR [ecx+0x2b9c70f3]
  40d494:	jne    0x40d4ca
  40d496:	add    ch,BYTE PTR [eax-0x38]
  40d499:	sub    ebp,DWORD PTR ds:0xbafac5c5
  40d49f:	mov    es,WORD PTR [edx+0x578c0680]
  40d4a5:	rol    BYTE PTR ss:[ecx],1
  40d4a8:	adc    BYTE PTR [edi-0x39],dh
  40d4ab:	xchg   DWORD PTR [ebp-0x47],eax
  40d4ae:	dec    ecx
  40d4af:	pcmpeqw mm2,QWORD PTR [edi+0x66]
  40d4b3:	sbb    ah,0xcf
  40d4b6:	ja     0x40d50b
  40d4b8:	je     0x40d4ca
  40d4ba:	div    BYTE PTR ds:0x52358e50
  40d4c0:	xchg   ebx,eax
  40d4c1:	add    ebx,DWORD PTR [ebp-0x70]
  40d4c4:	push   eax
  40d4c5:	xor    al,0x2d
  40d4c7:	call   0xd021e2b9
  40d4cc:	std    
  40d4cd:	clc    
  40d4ce:	lahf   
  40d4cf:	push   0xa77e5b13
  40d4d4:	cwde   
  40d4d5:	xchg   ecx,eax
  40d4d6:	xor    BYTE PTR [eax+eiz*8],al
  40d4d9:	cli    
  40d4da:	or     dl,BYTE PTR [esi+ecx*8+0x5a8b7754]
  40d4e1:	cmp    eax,0x99fa9438
  40d4e6:	out    0x8f,eax
  40d4e8:	das    
  40d4e9:	mov    esi,0xa89a594a
  40d4ee:	mov    BYTE PTR [esi-0x70],0x11
  40d4f2:	or     DWORD PTR [ebx+0x1482fda7],ecx
  40d4f8:	xor    eax,0xc7c1bde0
  40d4fd:	push   edi
  40d4fe:	adc    ah,ch
  40d500:	stc    
  40d501:	gs pop es
  40d503:	and    DWORD PTR fs:[ebp-0xe3edaa0],ebx
  40d50a:	push   ebx
  40d50b:	push   ss
  40d50c:	repnz mov ebp,DWORD PTR [edi+edi*8+0x6f5f5b19]
  40d514:	popa   
  40d515:	mov    edi,DWORD PTR [ecx+0x2]
  40d518:	or     al,0xb8
  40d51a:	sub    dl,ah
  40d51c:	dec    ebx
  40d51d:	lock popf 
  40d51f:	es pop es
  40d521:	(bad)  
  40d522:	xchg   edx,eax
  40d523:	jo     0x40d592
  40d525:	adc    DWORD PTR [ecx-0x6a3a1883],eax
  40d52b:	mov    BYTE PTR [ecx],dl
  40d52d:	sub    dh,BYTE PTR [ebx]
  40d52f:	lods   al,BYTE PTR ds:[esi]
  40d530:	or     esp,DWORD PTR [edi-0x7fc1b085]
  40d536:	inc    edi
  40d537:	mov    eax,0xa40272e5
  40d53c:	sub    ch,BYTE PTR [edx]
  40d53e:	test   BYTE PTR [esi-0x1d58afae],0xd7
  40d545:	mov    edi,0x9b82fe05
  40d54a:	xchg   bh,cl
  40d54c:	jmp    0xb60b74eb
  40d551:	test   eax,0x45378ff6
  40d556:	or     BYTE PTR [ebx],cl
  40d558:	scas   eax,DWORD PTR es:[edi]
  40d559:	add    edi,ecx
  40d55b:	ins    DWORD PTR es:[edi],dx
  40d55c:	(bad)  
  40d55d:	lea    ebp,[edi]
  40d55f:	int    0x86
  40d561:	adc    eax,DWORD PTR [ecx-0x6]
  40d564:	dec    edx
  40d565:	dec    edx
  40d566:	inc    edi
  40d567:	mov    dl,0x8d
  40d569:	rcr    BYTE PTR [esi+0x7e],cl
  40d56c:	mov    ds:0xbee294ef,al
  40d571:	fstp   DWORD PTR [esi+0x3c]
  40d574:	jbe    0x40d587
  40d576:	mov    ch,0x54
  40d578:	cmp    ebp,edx
  40d57a:	jns    0x40d55e
  40d57c:	mov    ebx,0x5cb624fe
  40d581:	popf   
  40d582:	mov    ah,0x2e
  40d584:	cmp    BYTE PTR [edx],0x88
  40d587:	mov    bh,0x7e
  40d589:	sbb    al,0x48
  40d58b:	call   0xd3b740e2
  40d590:	push   esi
  40d591:	add    al,0x69
  40d593:	and    edx,ebx
  40d595:	arpl   WORD PTR [ebx],ax
  40d597:	sbb    eax,eax
  40d599:	pop    ebx
  40d59a:	dec    eax
  40d59b:	fisubr WORD PTR [esp+ecx*8+0x5d]
  40d59f:	fiadd  DWORD PTR [eax]
  40d5a1:	das    
  40d5a2:	mov    esi,0x9a6b9e6c
  40d5a7:	pop    ebp
  40d5a8:	lods   al,BYTE PTR ds:[esi]
  40d5a9:	jns    0x40d5df
  40d5ab:	add    DWORD PTR [ecx+0x1775aa9f],0x3c
  40d5b2:	xor    DWORD PTR [esi+eax*1],edi
  40d5b5:	xchg   ecx,eax
  40d5b6:	xor    eax,DWORD PTR [ecx]
  40d5b8:	cld    
  40d5b9:	push   esi
  40d5ba:	push   esi
  40d5bb:	mov    dl,0x51
  40d5bd:	imul   esi,DWORD PTR [edx+edi*4],0xd6af7ea2
  40d5c4:	daa    
  40d5c5:	mov    esi,0xf3b3e06e
  40d5ca:	mov    eax,0x7bd46490
  40d5cf:	retf   
  40d5d0:	xchg   ecx,eax
  40d5d1:	ins    BYTE PTR es:[edi],dx
  40d5d2:	inc    edx
  40d5d3:	fadd   st,st(3)
  40d5d5:	pop    ecx
  40d5d6:	sahf   
  40d5d7:	xchg   esi,eax
  40d5d8:	in     al,dx
  40d5d9:	sti    
  40d5da:	pop    ds
  40d5db:	adc    eax,0xa74ab090
  40d5e0:	arpl   cx,cx
  40d5e2:	xchg   esp,eax
  40d5e3:	cmp    DWORD PTR [eax],eax
  40d5e5:	aam    0x24
  40d5e7:	das    
  40d5e8:	add    eax,0x2404d3dd
  40d5ed:	dec    edi
  40d5ee:	enter  0x5cd3,0xb7
  40d5f2:	jp     0x40d657
  40d5f4:	pop    esp
  40d5f5:	inc    eax
  40d5f6:	mov    ds:0xeafa6fa3,eax
  40d5fb:	call   0xc95f:0xc031085a
  40d602:	lock aaa 
  40d604:	or     al,0x75
  40d606:	ficomp WORD PTR [edx+0x28]
  40d609:	cs jp  0x40d679
  40d60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d60d:	retf   
  40d60e:	pop    ds
  40d60f:	jne    0x40d5aa
  40d611:	jbe    0x40d648
  40d613:	and    esi,ebp
  40d615:	or     DWORD PTR [edi-0x26],edi
  40d618:	mov    dl,0x9f
  40d61a:	fnsave [edx]
  40d61c:	pop    esi
  40d61d:	test   eax,0x3bbac649
  40d622:	dec    ebp
  40d623:	mov    eax,ds:0x2d883d2c
  40d628:	jmp    0x40d60f
  40d62a:	xor    al,0xa4
  40d62c:	push   ebx
  40d62d:	mov    ecx,0xe48f0fd2
  40d632:	sti    
  40d633:	sti    
  40d634:	mov    al,0x4e
  40d636:	cli    
  40d637:	jns    0x40d5c8
  40d639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d63a:	out    0x13,al
  40d63c:	popf   
  40d63d:	fcomp  DWORD PTR [ebp-0x38afe7b4]
  40d643:	adc    eax,0xd87d3738
  40d648:	inc    edx
  40d649:	out    dx,eax
  40d64a:	push   ecx
  40d64b:	or     bh,dh
  40d64d:	xchg   ecx,eax
  40d64e:	adc    al,0xf4
  40d650:	pop    edi
  40d651:	pop    ebx
  40d652:	lds    ebp,FWORD PTR [ebx]
  40d654:	xchg   edi,eax
  40d655:	inc    edi
  40d656:	mov    dl,0x46
  40d658:	mov    DWORD PTR [esi+0x66],ebp
  40d65b:	push   ecx
  40d65c:	leave  
  40d65d:	mov    ebx,0x25374ed6
  40d663:	xor    bl,BYTE PTR [esi+0x30760abb]
  40d669:	stos   DWORD PTR es:[edi],eax
  40d66a:	xor    BYTE PTR gs:[eax+0x3b95765c],ch
  40d671:	test   eax,0xca1990e
  40d676:	xchg   ebp,eax
  40d677:	lds    esp,FWORD PTR [edx]
  40d679:	(bad)  
  40d67a:	push   ebp
  40d67b:	call   0x68cdfa52
  40d680:	inc    esi
  40d681:	pop    eax
  40d682:	sub    ebx,esp
  40d684:	jmp    0x8d83:0x7bb4d362
  40d68b:	push   ecx
  40d68c:	and    al,0x3
  40d68e:	inc    edx
  40d68f:	nop
  40d690:	scas   eax,DWORD PTR es:[edi]
  40d691:	loope  0x40d6e8
  40d693:	xchg   ebx,eax
  40d694:	out    0x37,eax
  40d696:	mov    eax,0x32a39984
  40d69b:	or     eax,0x37da55a8
  40d6a0:	es xchg ebp,eax
  40d6a2:	mov    al,0xe8
  40d6a4:	imul   eax,DWORD PTR [ecx+0x10],0x6f
  40d6a8:	in     al,0xf3
  40d6aa:	adc    bl,BYTE PTR [edi+0x70]
  40d6ad:	add    ah,ah
  40d6af:	mov    bl,0xb9
  40d6b1:	test   eax,0xdbb931e1
  40d6b6:	retf   
  40d6b7:	mov    ecx,0xcdff8e8a
  40d6bc:	(bad)  
  40d6bd:	sub    ecx,ebx
  40d6bf:	mov    BYTE PTR [ecx+0x41387b5a],dl
  40d6c5:	sub    dh,dl
  40d6c7:	stos   DWORD PTR es:[edi],eax
  40d6c8:	sbb    cl,dh
  40d6ca:	jns    0x40d654
  40d6cc:	cwde   
  40d6cd:	aas    
  40d6ce:	sub    al,0xc0
  40d6d0:	push   0xfd687b1a
  40d6d5:	jle    0x40d6ba
  40d6d7:	jns    0x40d68b
  40d6d9:	mov    dh,0xae
  40d6db:	jbe    0x40d676
  40d6dd:	rol    BYTE PTR [esi+eiz*4-0x5cf96f7b],0xaa
  40d6e5:	adc    eax,0x983bc53c
  40d6ea:	xchg   esi,eax
  40d6eb:	cdq    
  40d6ec:	sbb    BYTE PTR [ecx-0x44d8a8cb],0xb9
  40d6f3:	ret    
  40d6f4:	xor    al,0x9
  40d6f6:	fmul   DWORD PTR [edi-0x6a]
  40d6f9:	nop
  40d6fa:	cs or  bl,bh
  40d6fd:	ja     0x40d710
  40d6ff:	cwde   
  40d700:	mov    eax,0x459daf72
  40d705:	rcr    BYTE PTR [edx+0x36],cl
  40d708:	pop    edx
  40d709:	lea    esp,[ecx+0x60614c6]
  40d70f:	or     eax,DWORD PTR [ecx]
  40d711:	pop    edi
  40d712:	ds mov cl,0x53
  40d715:	(bad)  
  40d716:	int    0x36
  40d718:	push   ebp
  40d719:	pop    ebp
  40d71a:	mov    ecx,DWORD PTR [esi-0x32]
  40d71d:	cli    
  40d71e:	fwait
  40d71f:	xchg   BYTE PTR ds:0x7fa19b3c,bl
  40d725:	add    eax,0x61cd43ea
  40d72a:	hlt    
  40d72b:	repnz adc DWORD PTR es:[ebx+0x36a637b0],ecx
  40d733:	or     DWORD PTR ds:0x41e79a44,edi
  40d739:	xor    BYTE PTR [ebx+0x8cdc379],ah
  40d73f:	test   al,0xeb
  40d741:	push   ebx
  40d742:	pop    ebp
  40d743:	jno    0x40d73a
  40d745:	jp     0x40d759
  40d747:	(bad)  
  40d749:	and    al,0x8
  40d74b:	add    DWORD PTR [ebx],edx
  40d74d:	inc    edx
  40d74e:	push   edx
  40d74f:	push   ebx
  40d750:	stos   DWORD PTR es:[edi],eax
  40d751:	ror    BYTE PTR [esi+ebx*2+0x223cb060],cl
  40d758:	mov    BYTE PTR [eax-0x6f],bl
  40d75b:	into   
  40d75c:	ins    DWORD PTR es:[edi],dx
  40d75d:	enter  0x8032,0x86
  40d761:	push   ebp
  40d762:	mov    dl,0x42
  40d764:	sbb    bl,0x46
  40d767:	cli    
  40d768:	test   BYTE PTR [ebx+0x22e9e24b],al
  40d76e:	leave  
  40d76f:	jns    0x40d704
  40d771:	ins    DWORD PTR es:[edi],dx
  40d772:	mov    WORD PTR [ebx],?
  40d774:	jbe    0x40d7e5
  40d776:	fnsave [ebx]
  40d778:	and    eax,0xc65d0e04
  40d77d:	je     0x40d791
  40d77f:	lds    ebx,FWORD PTR [edi+ecx*8-0x73]
  40d783:	inc    edi
  40d784:	push   ebx
  40d785:	push   ebx
  40d786:	xchg   ebp,eax
  40d787:	xchg   esi,eax
  40d788:	sub    edi,ebp
  40d78a:	xor    eax,0xf85a4c61
  40d78f:	dec    esp
  40d790:	jle    0x40d79c
  40d792:	fdiv   QWORD PTR [eax+0x3060ebe]
  40d798:	adc    al,0x16
  40d79a:	out    dx,al
  40d79b:	jns    0x40d7bc
  40d79d:	dec    edx
  40d79e:	add    al,0x6e
  40d7a0:	ret    
  40d7a1:	pushf  
  40d7a2:	aas    
  40d7a3:	push   cs
  40d7a4:	mov    ch,0x3
  40d7a6:	test   eax,0x1a7e1b96
  40d7ab:	pop    esi
  40d7ac:	(bad)  
  40d7ad:	popa   
  40d7ae:	dec    eax
  40d7af:	pop    edx
  40d7b0:	sbb    ecx,DWORD PTR [eax]
  40d7b2:	or     eax,0xd474fce3
  40d7b7:	sahf   
  40d7b8:	pop    es
  40d7b9:	pop    ds
  40d7ba:	sbb    BYTE PTR [ecx+0x48],ch
  40d7bd:	or     eax,0x1ef9f947
  40d7c2:	mov    al,0xfe
  40d7c4:	pushf  
  40d7c5:	pop    esp
  40d7c6:	mov    edx,0xbba17a99
  40d7cb:	and    al,BYTE PTR [ebx]
  40d7cd:	mov    al,0xf0
  40d7cf:	retf   
  40d7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d1:	scas   al,BYTE PTR es:[edi]
  40d7d2:	jo     0x40d82f
  40d7d4:	mov    eax,ds:0x205dc154
  40d7d9:	cs dec ebx
  40d7db:	push   es
  40d7dc:	jbe    0x40d77d
  40d7de:	jg     0x40d808
  40d7e0:	cmp    BYTE PTR [ebx],bl
  40d7e2:	repnz and eax,0xb8fdfe46
  40d7e8:	xchg   esp,eax
  40d7e9:	test   al,0x82
  40d7eb:	add    al,0xa2
  40d7ed:	push   eax
  40d7ee:	or     al,0xf5
  40d7f0:	js     0x40d815
  40d7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f3:	ss add dl,0x82
  40d7f7:	sbb    DWORD PTR [eax],0x3b
  40d7fa:	stos   DWORD PTR es:[edi],eax
  40d7fb:	stos   BYTE PTR es:[edi],al
  40d7fc:	sub    DWORD PTR [ebp-0x21b6bff6],esi
  40d802:	clc    
  40d803:	xor    DWORD PTR [esi+0x38],0x81caeac0
  40d80a:	push   es
  40d80b:	xor    DWORD PTR [ebp+edx*1+0x1f],ecx
  40d80f:	gs cmp ah,cl
  40d812:	sub    al,0xe6
  40d815:	push   es
  40d816:	imul   eax,esp,0xffffffab
  40d819:	popa   
  40d81a:	sbb    ecx,DWORD PTR [ebx+0x6ca7c876]
  40d820:	mov    bl,0xcf
  40d822:	pop    ebp
  40d823:	fwait
  40d824:	in     al,0x25
  40d826:	sbb    eax,0x43ff7920
  40d82b:	imul   edi,ecx,0xe0d6cfa5
  40d831:	push   0xffffffae
  40d833:	fwait
  40d834:	push   es
  40d835:	loop   0x40d81d
  40d837:	stos   BYTE PTR es:[edi],al
  40d838:	ds ins BYTE PTR es:[edi],dx
  40d83a:	outs   dx,DWORD PTR ds:[esi]
  40d83b:	out    0x27,al
  40d83d:	pushf  
  40d83e:	add    eax,0x1c17c14b
  40d843:	push   edx
  40d844:	pop    esi
  40d845:	xchg   ebx,eax
  40d846:	inc    esp
  40d847:	aaa    
  40d848:	xchg   BYTE PTR [edx-0x75e5d057],bl
  40d84e:	push   es
  40d84f:	xchg   ebx,eax
  40d850:	mov    ?,WORD PTR [eax-0x68]
  40d853:	mov    esi,0xcee54482
  40d858:	daa    
  40d859:	push   esp
  40d85a:	jmp    0x2edd:0xd87638f1
  40d861:	jns    0x40d805
  40d863:	jecxz  0x40d822
  40d865:	imul   esp,DWORD PTR [edx+0x12734ce1],0x72e4bc08
  40d86f:	ins    DWORD PTR es:[edi],dx
  40d870:	sub    ebx,DWORD PTR [esi]
  40d872:	outs   dx,BYTE PTR ds:[esi]
  40d873:	dec    ebx
  40d874:	and    esi,edx
  40d876:	ret    
  40d877:	fnsave [eax]
  40d879:	push   0x91cfec0d
  40d87e:	mov    edx,0x23fb5e9b
  40d883:	push   esi
  40d884:	in     al,0x32
  40d886:	lods   eax,DWORD PTR ds:[esi]
  40d887:	(bad)  
  40d888:	lahf   
  40d889:	push   esi
  40d88a:	xchg   ebp,eax
  40d88b:	in     eax,0xcc
  40d88d:	jecxz  0x40d8a7
  40d88f:	lahf   
  40d890:	lds    edx,FWORD PTR [ebx-0x25]
  40d893:	cmp    eax,0xc612eff9
  40d898:	xchg   ecx,eax
  40d899:	push   0xddbb7cc9
  40d89e:	mov    WORD PTR ss:[ecx],ds
  40d8a1:	push   cs
  40d8a2:	sbb    DWORD PTR [ebp+0x44],ebx
  40d8a5:	fidivr WORD PTR [ecx+0xa6edfc7]
  40d8ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ac:	dec    ecx
  40d8ad:	pushf  
  40d8ae:	pusha  
  40d8af:	pop    ebx
  40d8b0:	sbb    BYTE PTR [edx+edi*4+0x7fd472d9],0xaf
  40d8b8:	outs   dx,BYTE PTR ds:[esi]
  40d8b9:	mov    ebp,0x8a292095
  40d8be:	ds loopne 0x40d925
  40d8c1:	xchg   esp,eax
  40d8c2:	jns    0x40d8fd
  40d8c4:	lods   eax,DWORD PTR ds:[esi]
  40d8c5:	and    eax,0x6115e194
  40d8ca:	es cmp al,ah
  40d8cd:	and    BYTE PTR [edx-0x75],ah
  40d8d0:	and    DWORD PTR [ecx],ecx
  40d8d2:	fldcw  WORD PTR [esi+ebx*8-0x42]
  40d8d6:	outs   dx,DWORD PTR ds:[esi]
  40d8d7:	fadd   QWORD PTR [esi]
  40d8d9:	ret    0xe5b0
  40d8dc:	bound  edx,QWORD PTR [edx+0xe]
  40d8df:	adc    DWORD PTR [edi+0x44206b44],0x3d
  40d8e6:	je     0x40d8ac
  40d8e8:	or     ebp,DWORD PTR [esi]
  40d8ea:	in     al,0x6e
  40d8ec:	popa   
  40d8ed:	dec    eax
  40d8ee:	lods   al,BYTE PTR ds:[esi]
  40d8ef:	xchg   esp,eax
  40d8f0:	sti    
  40d8f1:	dec    esp
  40d8f2:	lea    esi,[ecx+0x6ddca020]
  40d8f8:	xchg   edi,eax
  40d8f9:	test   BYTE PTR [edx-0x2e],bh
  40d8fc:	or     DWORD PTR [edi],edi
  40d8fe:	add    BYTE PTR [esi-0x68],ah
  40d901:	test   DWORD PTR [eax+0x7d],edi
  40d904:	push   esp
  40d905:	iret   
  40d906:	mov    DWORD PTR [edi-0x6f],esp
  40d909:	or     eax,DWORD PTR [ebx]
  40d90b:	push   ebp
  40d90c:	aad    0x5a
  40d90e:	mov    bh,0xab
  40d910:	inc    esp
  40d911:	clc    
  40d912:	pop    ds
  40d913:	dec    eax
  40d914:	into   
  40d915:	rcr    DWORD PTR [edi-0x18],cl
  40d918:	loopne 0x40d8fd
  40d91a:	in     al,0x77
  40d91c:	cmp    BYTE PTR [ebx],dl
  40d91e:	mov    ah,BYTE PTR [edi]
  40d920:	int    0x1c
  40d922:	fcomp  DWORD PTR [eax+eax*4-0x37]
  40d926:	pop    ebx
  40d927:	imul   ebx,DWORD PTR [ecx-0x38],0x25192643
  40d92e:	fwait
  40d92f:	ja     0x40d910
  40d931:	sub    BYTE PTR [esi],bh
  40d933:	mov    eax,ds:0xf2baa442
  40d938:	inc    esp
  40d939:	mov    edx,0x6609b52c
  40d93e:	push   esi
  40d93f:	fistp  QWORD PTR [ebx]
  40d941:	mov    cl,0x86
  40d943:	sar    DWORD PTR [eax+0x63],cl
  40d946:	stos   BYTE PTR es:[edi],al
  40d947:	and    eax,esi
  40d949:	pop    eax
  40d94a:	and    al,0x20
  40d94c:	inc    ecx
  40d94d:	push   cs
  40d94e:	sub    BYTE PTR [eax+0x2],dh
  40d951:	sbb    bh,BYTE PTR [ecx-0x18]
  40d954:	push   es
  40d955:	sub    eax,0x269341b8
  40d95a:	mov    edi,0x275cf3f
  40d95f:	sub    DWORD PTR [ebp+0x7d],edx
  40d962:	jecxz  0x40d9cc
  40d964:	ins    BYTE PTR es:[edi],dx
  40d965:	mov    al,0xdd
  40d967:	call   0x1292:0x6059c3cc
  40d96e:	(bad)  
  40d96f:	dec    edi
  40d970:	loopne 0x40d9c1
  40d972:	hlt    
  40d973:	fwait
  40d974:	or     BYTE PTR [esi-0xde8fbc0],al
  40d97a:	cs shl edx,1
  40d97d:	add    ebp,DWORD PTR [ebx+0x72530079]
  40d983:	into   
  40d984:	outs   dx,DWORD PTR ds:[esi]
  40d985:	loopne 0x40d9a9
  40d987:	cs cs and esp,edx
  40d98b:	jns    0x40d96f
  40d98d:	sub    eax,0xfe49ccc0
  40d992:	sub    BYTE PTR [edi+0x22],0x54
  40d996:	ss pop eax
  40d998:	aas    
  40d999:	xor    cl,BYTE PTR [edi]
  40d99b:	rcr    BYTE PTR [ebx],1
  40d99d:	pop    eax
  40d99e:	popf   
  40d99f:	enter  0x9fd4,0xeb
  40d9a3:	push   es
  40d9a4:	sbb    eax,DWORD PTR [eax-0x76]
  40d9a7:	mov    ebx,0x3f535831
  40d9ac:	mov    BYTE PTR [eax],cl
  40d9ae:	pop    edi
  40d9af:	scas   al,BYTE PTR es:[edi]
  40d9b0:	sar    DWORD PTR [ecx+0x29],0x87
  40d9b4:	mov    al,ds:0x9abe8b0b
  40d9b9:	(bad)  
  40d9ba:	rcl    DWORD PTR [eax-0x11ebf64b],cl
  40d9c0:	jne    0x40d9dd
  40d9c2:	and    BYTE PTR [ebp-0x236f379b],0x60
  40d9c9:	mov    esi,0x2890ec04
  40d9ce:	(bad)  
  40d9cf:	iret   
  40d9d0:	sub    DWORD PTR [edi-0x63719453],ecx
  40d9d6:	sbb    esp,edi
  40d9d8:	ret    0xa314
  40d9db:	pop    eax
  40d9dc:	pop    eax
  40d9dd:	inc    ebp
  40d9de:	lods   al,BYTE PTR ds:[esi]
  40d9df:	inc    edi
  40d9e0:	xchg   edi,eax
  40d9e1:	dec    edi
  40d9e2:	jnp    0x40d9a3
  40d9e4:	stos   DWORD PTR es:[edi],eax
  40d9e5:	sahf   
  40d9e6:	jp     0x40da53
  40d9e8:	fs sahf 
  40d9ea:	jle    0x40d99a
  40d9ec:	popf   
  40d9ed:	mov    edx,0x8de38fd7
  40d9f2:	push   ss
  40d9f3:	jb     0x40d9c5
  40d9f5:	jge    0x40da17
  40d9f7:	jb     0x40da3b
  40d9f9:	sub    esp,ebp
  40d9fb:	int    0x9c
  40d9fd:	push   cs
  40d9fe:	sub    eax,0xea44c835
  40da03:	sub    ah,ah
  40da05:	xchg   ebp,eax
  40da06:	cmp    al,0x38
  40da08:	imul   esp,eax,0x5d
  40da0b:	fdivr  DWORD PTR [edi+0x1be12e11]
  40da11:	aas    
  40da12:	xlat   BYTE PTR ds:[ebx]
  40da13:	imul   edi,esp,0x40ce751
  40da19:	fs int3 
  40da1b:	call   0xf120e4ff
  40da20:	das    
  40da21:	xchg   esi,eax
  40da22:	xchg   ebx,edi
  40da24:	mov    al,0x1c
  40da26:	cmp    DWORD PTR [ebx+ecx*2],ebx
  40da29:	dec    edi
  40da2a:	loopne 0x40d9bf
  40da2c:	dec    esi
  40da2d:	imul   eax,DWORD PTR [esi+0x7d],0x2631a98f
  40da34:	bound  edx,QWORD PTR [eax]
  40da36:	mov    eax,0xe7d357d8
  40da3b:	dec    ecx
  40da3c:	or     cl,al
  40da3e:	dec    ebp
  40da3f:	cdq    
  40da40:	sub    BYTE PTR [eax+0x3b7cab2f],al
  40da46:	addr16 test eax,0xfc096604
  40da4c:	mov    dh,0x91
  40da4e:	push   ebx
  40da4f:	aam    0x68
  40da51:	cdq    
  40da52:	and    al,0xe4
  40da54:	(bad)  
  40da55:	mov    cl,0x8
  40da57:	jne    0x40da78
  40da59:	lahf   
  40da5a:	push   cs
  40da5b:	xchg   esi,eax
  40da5c:	sub    ebp,ebp
  40da5e:	test   ah,0x9f
  40da61:	(bad)  
  40da62:	sti    
  40da63:	xchg   esi,eax
  40da64:	xor    eax,0x3c7ceb61
  40da69:	xor    eax,0xe25d2773
  40da6e:	mov    ecx,0x89523b5
  40da73:	repnz into 
  40da75:	pop    edx
  40da76:	mov    esi,0x89fa8719
  40da7b:	das    
  40da7c:	mov    bl,0x84
  40da7e:	push   ebx
  40da7f:	mov    al,bh
  40da81:	stos   DWORD PTR es:[edi],eax
  40da82:	aas    
  40da83:	or     BYTE PTR [ebx-0x74],bh
  40da86:	js     0x40da1e
  40da88:	cli    
  40da89:	mov    ds,WORD PTR [esi+0x4889f32b]
  40da8f:	data16 aam 0x3c
  40da92:	clc    
  40da93:	div    DWORD PTR [eax-0x31]
  40da96:	repz sub eax,0x71abc40d
  40da9c:	pop    ss
  40da9d:	jns    0x40dad8
  40da9f:	test   BYTE PTR [ecx+esi*8-0x12e2bdd9],dh
  40daa6:	stos   BYTE PTR es:[edi],al
  40daa7:	jmp    0x40da69
  40daa9:	rol    DWORD PTR ds:0xa6c26691,0x1e
  40dab0:	jnp    0x40da63
  40dab2:	sbb    ecx,DWORD PTR [ecx]
  40dab4:	sub    dl,BYTE PTR [ebx]
  40dab6:	repz js 0x40da9c
  40dab9:	inc    ebx
  40daba:	inc    esp
  40dabb:	mov    esi,ebx
  40dabd:	or     dl,BYTE PTR [ecx-0x5d]
  40dac0:	pop    ds
  40dac1:	retf   0x62d3
  40dac4:	adc    BYTE PTR [ebp+eiz*2+0x7e],cl
  40dac8:	dec    ebx
  40dac9:	sbb    BYTE PTR [esi+0x47863d89],dh
  40dacf:	xchg   ebp,eax
  40dad0:	pop    es
  40dad1:	cwde   
  40dad2:	fwait
  40dad3:	or     cl,BYTE PTR [edi+0x36c37f17]
  40dad9:	pop    edi
  40dada:	fs mov ebp,0x411a4b11
  40dae0:	mov    ch,0x2e
  40dae2:	ret    0x9f4
  40dae5:	dec    ebp
  40dae6:	lods   al,BYTE PTR ds:[esi]
  40dae7:	lahf   
  40dae8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dae9:	xor    ebp,eax
  40daeb:	mov    dl,al
  40daed:	inc    esi
  40daee:	test   eax,0x1be48676
  40daf3:	or     dh,BYTE PTR [edi-0x2e70766e]
  40daf9:	add    BYTE PTR [ebx],ch
  40dafb:	add    BYTE PTR [edi],dh
  40dafd:	inc    BYTE PTR [edx-0x4ed24512]
  40db03:	pop    ds
  40db04:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40db06:	adc    BYTE PTR [eax-0xa7d4b88],bl
  40db0c:	cli    
  40db0d:	test   BYTE PTR [eax*4-0x1b3ad884],bl
  40db14:	mov    esi,0x7698164d
  40db19:	rcl    bh,cl
  40db1b:	repz jno 0x40db17
  40db1e:	and    esi,DWORD PTR [edi+edx*8-0x781f934]
  40db25:	stc    
  40db26:	cmc    
  40db27:	cmp    cl,bh
  40db29:	or     dl,BYTE PTR [eax+0x649ca3fe]
  40db2f:	pop    ss
  40db30:	and    al,0x3
  40db32:	lahf   
  40db33:	or     ch,BYTE PTR [ebx+0x62]
  40db36:	int    0x25
  40db38:	dec    edi
  40db39:	mov    ebx,0xa253a3d3
  40db3e:	cmp    al,0xd
  40db40:	jge    0x40db38
  40db42:	jo     0x40db0b
  40db44:	jg     0x40db3f
  40db46:	xor    al,0x49
  40db48:	pop    esp
  40db49:	pop    ecx
  40db4a:	int3   
  40db4b:	rol    DWORD PTR [esi],0x3b
  40db4e:	sub    edi,0xfffffff3
  40db51:	(bad)  
  40db52:	mov    edx,0x39a74947
  40db57:	dec    esi
  40db58:	cld    
  40db59:	(bad)  
  40db5a:	and    ebp,DWORD PTR [eax-0x6d]
  40db5d:	and    eax,0xcf973ba8
  40db62:	add    DWORD PTR cs:[edx-0x452d6426],esi
  40db69:	jg     0x40db18
  40db6b:	(bad)  
  40db6c:	das    
  40db6d:	in     al,0x13
  40db6f:	scas   eax,DWORD PTR es:[edi]
  40db70:	cmp    eax,0x3874ada
  40db75:	push   0xbba737ef
  40db7a:	retf   
  40db7b:	popa   
  40db7c:	sbb    edi,ebx
  40db7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db7f:	xlat   BYTE PTR ss:[ebx]
  40db81:	xchg   ebp,eax
  40db82:	pop    eax
  40db83:	retf   
  40db84:	cmp    cl,dh
  40db86:	lahf   
  40db87:	jmp    0x40db40
  40db89:	mov    ds:0xb2fd1344,eax
  40db8e:	adc    DWORD PTR [eax+0x5a362d5e],ebp
  40db94:	mov    cl,0x92
  40db96:	arpl   WORD PTR [edi],di
  40db98:	jecxz  0x40db3d
  40db9a:	mov    eax,ds:0x9fdb5943
  40db9f:	les    edi,FWORD PTR [eax-0x29]
  40dba2:	cmp    BYTE PTR [edx+0x64],ah
  40dba5:	add    dh,BYTE PTR [eax]
  40dba7:	sub    dl,BYTE PTR [esi-0x309e783d]
  40dbad:	dec    edx
  40dbae:	inc    edi
  40dbaf:	int    0x1a
  40dbb1:	fstp   QWORD PTR [ecx-0x15]
  40dbb4:	loop   0x40dbea
  40dbb6:	stc    
  40dbb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb8:	mov    ds,WORD PTR [eax-0x728cba35]
  40dbbe:	aad    0xd
  40dbc0:	push   ebx
  40dbc1:	popa   
  40dbc2:	das    
  40dbc3:	fwait
  40dbc4:	test   BYTE PTR [eax],bl
  40dbc6:	inc    edx
  40dbc7:	lahf   
  40dbc8:	rcr    BYTE PTR [ebx+0xc3953f2],1
  40dbce:	add    al,0x60
  40dbd0:	inc    eax
  40dbd1:	setl   BYTE PTR [ebx-0x39]
  40dbd5:	and    esi,edx
  40dbd7:	sbb    ebp,ebp
  40dbd9:	cmp    al,0x4c
  40dbdb:	cld    
  40dbdc:	sbb    eax,0x79c4ff71
  40dbe1:	(bad)
  40dbe4:	shl    ebp,0xfd
  40dbe7:	xchg   ecx,eax
  40dbe8:	inc    eax
  40dbe9:	ins    BYTE PTR es:[edi],dx
  40dbea:	mov    DWORD PTR [edi+0x4e68dc7a],eax
  40dbf0:	nop
  40dbf1:	cmp    BYTE PTR [eax],al
  40dbf3:	mov    esi,0x3de66639
  40dbf8:	jmp    0x70addaf5
  40dbfd:	dec    edx
  40dbfe:	imul   ebx,ebx,0x5b
  40dc01:	imul   ebx,eax,0x38
  40dc04:	out    dx,al
  40dc05:	dec    bx
  40dc07:	pop    eax
  40dc08:	sub    edi,DWORD PTR [ebp-0x80]
  40dc0b:	inc    esi
  40dc0c:	sub    al,0xf9
  40dc0e:	add    DWORD PTR [ecx+edx*2],ebp
  40dc11:	outs   dx,DWORD PTR ds:[esi]
  40dc12:	scas   eax,DWORD PTR es:[edi]
  40dc13:	inc    ecx
  40dc14:	inc    edi
  40dc15:	mov    ebx,0xd92055b4
  40dc1a:	xor    ebp,DWORD PTR [eax-0x39]
  40dc1d:	dec    ecx
  40dc1e:	fnstcw WORD PTR [edi+esi*1+0x29ce3688]
  40dc25:	jmp    0xb662d3c4
  40dc2a:	sub    ah,cl
  40dc2c:	pop    ss
  40dc2d:	shl    BYTE PTR [ebx-0x1121af3c],0x31
  40dc34:	push   ss
  40dc35:	mov    ebx,0x47fbbee8
  40dc3a:	test   al,0x43
  40dc3c:	loope  0x40dc04
  40dc3e:	xor    DWORD PTR [edx],eax
  40dc40:	mov    DWORD PTR [ebp-0x6e7fcfd0],ebp
  40dc46:	mov    al,0xe8
  40dc48:	fwait
  40dc49:	xor    DWORD PTR [eax-0x1ce2ba6f],0xbaeea128
  40dc53:	add    eax,0xce79c84e
  40dc58:	je     0x40dc8f
  40dc5a:	mov    bl,0x46
  40dc5c:	push   ebp
  40dc5d:	mov    ds:0x99df9286,eax
  40dc62:	js     0x40dcd5
  40dc64:	js     0x40dc60
  40dc66:	cld    
  40dc67:	and    al,0xf7
  40dc69:	and    al,0x13
  40dc6b:	jmp    0x8259:0xa5c4fc3d
  40dc72:	inc    ecx
  40dc73:	bound  edx,QWORD PTR [eax-0x3146125b]
  40dc79:	or     al,0xf1
  40dc7b:	fmulp  st(7),st
  40dc7d:	jle    0x40dce0
  40dc7f:	lds    ebp,FWORD PTR [edx]
  40dc81:	mov    ch,bh
  40dc83:	add    dl,BYTE PTR [esi+0x7d]
  40dc86:	mov    ds:0xd13a4a0e,al
  40dc8b:	jb     0x40dc83
  40dc8d:	out    0x6c,al
  40dc8f:	mov    eax,0xfb0568f1
  40dc94:	push   cs
  40dc95:	inc    ebp
  40dc96:	xchg   esi,eax
  40dc97:	test   DWORD PTR [esi+0x5c],esi
  40dc9a:	ret    0x7ffe
  40dc9d:	mov    WORD PTR [ebx-0x6f124baf],gs
  40dca3:	enter  0xdfc3,0x31
  40dca7:	in     eax,dx
  40dca8:	mov    edi,0x809729dd
  40dcad:	jle    0x40dca1
  40dcaf:	add    eax,0xeb912975
  40dcb4:	cmp    al,0x43
  40dcb6:	inc    ebp
  40dcb7:	les    ebp,FWORD PTR [esi+eiz*8+0x8d8ead3]
  40dcbe:	int    0x81
  40dcc0:	out    0x27,eax
  40dcc2:	adc    bh,al
  40dcc4:	push   0x29
  40dcc6:	push   eax
  40dcc7:	(bad)  
  40dcc8:	cmc    
  40dcc9:	addr16 mov eax,ds:0x5e2f
  40dccd:	push   bp
  40dccf:	sub    ecx,DWORD PTR [edi]
  40dcd1:	jbe    0x40dd29
  40dcd3:	dec    esp
  40dcd4:	sub    BYTE PTR ds:[edx-0x172f981a],ch
  40dcdb:	jge    0x40dcb7
  40dcdd:	mov    ebp,0xd7bd2203
  40dce2:	out    dx,al
  40dce3:	mov    eax,ds:0x11f5053e
  40dce8:	lods   eax,DWORD PTR ds:[esi]
  40dce9:	pop    ebx
  40dcea:	lods   eax,DWORD PTR ds:[esi]
  40dceb:	in     eax,dx
  40dcec:	jmp    0x7e6e:0x93d89cb4
  40dcf3:	xor    DWORD PTR [edx-0x52964ff7],ebx
  40dcf9:	in     eax,0x14
  40dcfb:	push   ecx
  40dcfc:	pop    ds
  40dcfd:	pop    ss
  40dcfe:	fsubrp st(3),st
  40dd00:	add    al,0x7e
  40dd02:	enter  0xc0b5,0xd
  40dd06:	rcl    ebp,1
  40dd08:	test   eax,0xecaa0d8f
  40dd0d:	retf   
  40dd0e:	xor    esp,DWORD PTR [eax-0x5f]
  40dd11:	xor    al,0x47
  40dd13:	arpl   WORD PTR [ecx+0x5e3df6f1],bp
  40dd19:	fisttp DWORD PTR [esi-0x14]
  40dd1c:	fsubr  QWORD PTR [ecx+edi*4]
  40dd1f:	in     eax,dx
  40dd20:	dec    ebx
  40dd21:	test   DWORD PTR [eax-0x5],eax
  40dd24:	sbb    BYTE PTR [esi+eax*8-0x494aa054],bl
  40dd2b:	push   ebp
  40dd2c:	out    0xb2,eax
  40dd2e:	xor    BYTE PTR [esi+0x30],bh
  40dd31:	cmp    BYTE PTR [esi-0x2a],bh
  40dd34:	test   DWORD PTR [eax+0x65bb5d11],edx
  40dd3a:	mov    eax,DWORD PTR [eax+edi*8-0x6f92ec30]
  40dd41:	sub    al,0xbe
  40dd43:	popf   
  40dd44:	sahf   
  40dd45:	xor    BYTE PTR [ecx+0x5e5e66da],cl
  40dd4b:	popf   
  40dd4c:	inc    edx
  40dd4d:	xchg   esi,eax
  40dd4e:	mov    WORD PTR [eax+0x9],gs
  40dd51:	clc    
  40dd52:	adc    ebx,esp
  40dd54:	jle    0x40dda5
  40dd56:	pop    edx
  40dd57:	mov    ebp,0xb79c05fa
  40dd5c:	shl    ah,cl
  40dd5e:	xchg   DWORD PTR [esp+edx*1-0x27],esi
  40dd62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd63:	cwde   
  40dd64:	add    ebx,ebx
  40dd66:	pusha  
  40dd67:	dec    ecx
  40dd68:	xchg   edx,eax
  40dd69:	enter  0x8d47,0xe
  40dd6d:	sub    DWORD PTR [esi+ebp*4-0x60],esi
  40dd71:	mov    cl,0xec
  40dd73:	jb     0x40dd42
  40dd75:	jl     0x40dde9
  40dd77:	lods   al,BYTE PTR ds:[esi]
  40dd78:	cmp    eax,DWORD PTR [ecx-0x5ca76ce3]
  40dd7e:	push   ecx
  40dd7f:	xor    BYTE PTR [ebp-0x7eeae30],cl
  40dd85:	gs adc ah,al
  40dd88:	pop    ss
  40dd89:	jl     0x40dd44
  40dd8b:	fs std 
  40dd8d:	sub    ebp,eax
  40dd8f:	loopne 0x40ddd8
  40dd91:	loop   0x40de02
  40dd93:	dec    esp
  40dd94:	jne    0x40de13
  40dd96:	ja     0x40dd48
  40dd98:	fimul  DWORD PTR [eax+esi*4+0x27f9314f]
  40dd9f:	js     0x40dd3d
  40dda1:	jmp    0xc563:0x1fd84709
  40dda8:	adc    dh,BYTE PTR [edi-0x2f]
  40ddab:	add    dl,bh
  40ddad:	adc    eax,0xaea061cc
  40ddb2:	das    
  40ddb3:	dec    ebp
  40ddb4:	in     eax,dx
  40ddb5:	adc    al,0x12
  40ddb7:	inc    eax
  40ddb8:	xchg   edx,eax
  40ddb9:	adc    ah,BYTE PTR ds:[ecx+0xefb1d64]
  40ddc0:	push   ebp
  40ddc1:	ins    BYTE PTR es:[edi],dx
  40ddc2:	cmp    BYTE PTR [ebx+esi*8-0x7a],dh
  40ddc6:	jne    0x40dde3
  40ddc8:	push   0x2f
  40ddca:	test   al,0xe0
  40ddcc:	mov    ah,0x71
  40ddce:	into   
  40ddcf:	imul   edi,DWORD PTR [ebp+0x219b484d],0xa4e87e1c
  40ddd9:	sbb    BYTE PTR [eax+ecx*4-0x1c086ba3],bh
  40dde0:	ror    BYTE PTR [ecx],1
  40dde2:	arpl   WORD PTR [ecx+eiz*8-0x3854224d],bx
  40dde9:	dec    ebp
  40ddea:	xchg   ebp,eax
  40ddeb:	into   
  40ddec:	push   edx
  40dded:	daa    
  40ddee:	mov    eax,ds:0xcef41209
  40ddf3:	inc    edi
  40ddf4:	and    ecx,0x68
  40ddf7:	push   eax
  40ddf8:	push   es
  40ddf9:	xor    BYTE PTR [ebp-0x7a856afe],bh
  40ddff:	stos   BYTE PTR es:[edi],al
  40de00:	xchg   BYTE PTR [eax+0x34],cl
  40de03:	sub    DWORD PTR [edi],0xffffffb0
  40de06:	popa   
  40de07:	fwait
  40de08:	dec    edx
  40de09:	lds    edi,FWORD PTR [edx-0x58]
  40de0c:	cmp    BYTE PTR [esp+edi*2],0xa9
  40de10:	mov    WORD PTR [edi+0x13],ds
  40de13:	lahf   
  40de14:	mul    cl
  40de16:	pop    ds
  40de17:	test   al,0xe3
  40de19:	rcl    DWORD PTR [ebx-0x27],1
  40de1c:	add    al,0xe
  40de1e:	pop    ecx
  40de1f:	ror    BYTE PTR [ecx+0x67f73bdb],0x81
  40de26:	int3   
  40de27:	mov    WORD PTR [edx+0x6946800b],es
  40de2d:	dec    ecx
  40de2e:	mov    bl,0xea
  40de30:	jae    0x40ddb4
  40de32:	(bad)  
  40de33:	shl    BYTE PTR [esi+ebx*4],1
  40de36:	jmp    0x646cf4f5
  40de3b:	test   DWORD PTR [edi],0xbaee4a89
  40de41:	mov    ebx,0x9f317f44
  40de46:	and    eax,0xf17a993a
  40de4b:	int3   
  40de4c:	stos   BYTE PTR es:[edi],al
  40de4d:	adc    ebx,DWORD PTR [edi+ecx*2]
  40de50:	or     esp,eax
  40de52:	popa   
  40de53:	iret   
  40de54:	xchg   DWORD PTR [ebp-0x71],edi
  40de57:	aaa    
  40de58:	cmp    eax,0x7f948ac9
  40de5d:	ins    BYTE PTR es:[edi],dx
  40de5e:	sub    DWORD PTR [edx+eax*4+0x5b7b8344],ebp
  40de65:	push   esp
  40de66:	cld    
  40de67:	pop    esi
  40de68:	sbb    edx,DWORD PTR [eax+ebx*1+0x42397d31]
  40de6f:	(bad)  
  40de70:	sub    eax,0x951997fb
  40de75:	push   esi
  40de76:	addr16 push ebx
  40de78:	sbb    eax,0x28f58eba
  40de7d:	xchg   ecx,eax
  40de7e:	add    BYTE PTR [ebp+0x5667b3a0],cl
  40de84:	fcomp  QWORD PTR [edi-0x7a015dc6]
  40de8a:	(bad)  
  40de8b:	xchg   ebx,eax
  40de8c:	(bad)  
  40de8e:	pop    ds
  40de8f:	mov    dl,0x31
  40de91:	adc    eax,0xe4b4f215
  40de96:	aam    0x35
  40de98:	rol    DWORD PTR [esi-0x41597583],1
  40de9e:	fistp  QWORD PTR ds:0xf9027d3d
  40dea4:	jp     0x40dee3
  40dea6:	rol    al,0x1
  40dea9:	sahf   
  40deaa:	mov    BYTE PTR [ecx-0x22],cl
  40dead:	pushf  
  40deae:	mov    eax,0x4cf52762
  40deb3:	inc    ecx
  40deb4:	and    eax,0x574f06b3
  40deb9:	jecxz  0x40de47
  40debb:	dec    eax
  40debc:	cmp    al,0xcc
  40debe:	cmp    DWORD PTR [edx+0x4015f3e2],edi
  40dec4:	xor    eax,0xcaa49a0b
  40dec9:	adc    DWORD PTR [ebx],esp
  40decb:	mov    dh,0x4d
  40decd:	jl     0x40deb1
  40decf:	ins    BYTE PTR es:[edi],dx
  40ded0:	repnz cld 
  40ded2:	in     al,0xd4
  40ded4:	dec    DWORD PTR [edx-0x59]
  40ded7:	xchg   ecx,eax
  40ded8:	lods   eax,DWORD PTR ds:[esi]
  40ded9:	psllq  mm6,mm6
  40dedc:	cmp    DWORD PTR [esi],ecx
  40dede:	das    
  40dedf:	jbe    0x40df5c
  40dee1:	rcl    eax,cl
  40dee3:	mov    ebp,0x207365d5
  40dee8:	pop    esp
  40dee9:	in     al,dx
  40deea:	rol    BYTE PTR [edx-0x31],0xa2
  40deee:	cld    
  40deef:	rol    DWORD PTR [edi-0x63f64996],1
  40def5:	jge    0x40df6e
  40def7:	adc    eax,0xaa4fb38b
  40defc:	ins    BYTE PTR es:[edi],dx
  40defd:	push   esi
  40defe:	adc    eax,0xb1d589e1
  40df03:	out    0xa4,al
  40df05:	jp     0x40deac
  40df07:	mov    ah,ah
  40df09:	and    al,0x86
  40df0b:	fst    DWORD PTR [esi]
  40df0d:	imul   ebx,DWORD PTR [ebx+ebx*4-0x65e7b5a7],0xffffffd7
  40df15:	mov    bl,0x50
  40df17:	call   0x19b8:0x45821f1a
  40df1e:	cmp    BYTE PTR [esi+0x4c],0x0
  40df22:	inc    ebp
  40df23:	lods   al,BYTE PTR ds:[esi]
  40df24:	adc    al,0xb3
  40df26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df27:	aas    
  40df28:	mov    ebp,0x9a2e0dee
  40df2d:	jns    0x40df0f
  40df2f:	dec    ebx
  40df30:	stc    
  40df31:	fcomp  QWORD PTR [esi+0x15]
  40df34:	add    al,cl
  40df36:	dec    edx
  40df37:	aaa    
  40df38:	sub    al,0xc5
  40df3a:	jbe    0x40dedd
  40df3c:	sbb    ebp,ecx
  40df3e:	in     eax,dx
  40df3f:	retf   0xc467
  40df42:	(bad)  
  40df43:	fsubp  st(3),st
  40df45:	xor    ecx,DWORD PTR [eax-0x21347892]
  40df4b:	add    bl,dh
  40df4d:	fld    QWORD PTR [esi-0x69]
  40df50:	das    
  40df51:	xchg   DWORD PTR [edx+ecx*2-0x13bc84ba],ecx
  40df58:	cdq    
  40df59:	in     al,0x15
  40df5b:	mov    ah,0x95
  40df5d:	xchg   esi,eax
  40df5e:	aam    0x5c
  40df60:	pusha  
  40df61:	mov    dh,0x8b
  40df63:	add    esp,DWORD PTR [ebx-0x78]
  40df66:	ja     0x40df25
  40df68:	xor    esp,ecx
  40df6a:	rcr    DWORD PTR [edx+ebx*2],cl
  40df6d:	dec    esp
  40df6e:	add    ch,BYTE PTR [edx]
  40df70:	and    ch,ch
  40df72:	mov    dl,0x73
  40df74:	ficom  DWORD PTR [eax+0x54]
  40df77:	in     al,0x8a
  40df79:	and    edx,esp
  40df7b:	dec    esp
  40df7c:	jg     0x40df07
  40df7e:	cmp    ch,BYTE PTR [esi]
  40df80:	test   bl,cl
  40df82:	sbb    al,0xc2
  40df84:	adc    BYTE PTR [edi*1+0x9da8324],al
  40df8b:	sbb    eax,0x49edda2e
  40df90:	imul   eax,edi,0xffffffcf
  40df93:	out    0x35,al
  40df95:	or     eax,0x74361033
  40df9a:	mov    dh,0x7a
  40df9c:	mov    eax,ds:0x45ba8865
  40dfa1:	or     al,0x55
  40dfa3:	or     DWORD PTR [ebx],ebx
  40dfa5:	shl    eax,cl
  40dfa7:	(bad)  
  40dfa8:	idiv   DWORD PTR [ecx-0x3dd6a9ea]
  40dfae:	dec    edx
  40dfaf:	cbw    
  40dfb1:	aad    0xcb
  40dfb3:	loopne 0x40dffb
  40dfb5:	push   edx
  40dfb6:	sar    cl,0xd8
  40dfb9:	jp     0x40dffb
  40dfbb:	xchg   edx,eax
  40dfbc:	jb     0x40df9c
  40dfbe:	hlt    
  40dfbf:	mov    eax,ds:0xb7403d46
  40dfc4:	xor    ah,BYTE PTR [eax+0x13c48f46]
  40dfca:	push   es
  40dfcb:	cwde   
  40dfcc:	pop    ebx
  40dfcd:	cmc    
  40dfce:	xchg   ebx,eax
  40dfcf:	cli    
  40dfd0:	fcom   QWORD PTR [ebx-0x66]
  40dfd3:	push   ebx
  40dfd4:	jge    0x40df9c
  40dfd6:	or     DWORD PTR [edi],ebp
  40dfd8:	imul   edi,edi,0xffffff91
  40dfdb:	je     0x40dfc5
  40dfdd:	cmp    eax,0x56b3001a
  40dfe2:	mov    eax,ds:0x51830adf
  40dfe7:	sbb    BYTE PTR [edi],bl
  40dfe9:	push   0x9
  40dfeb:	pop    esi
  40dfec:	xor    al,0xfd
  40dfee:	jmp    0x40dfb1
  40dff0:	sbb    esi,ecx
  40dff2:	jmp    0x4dd6:0xa52336b7
  40dff9:	ret    0xb14e
  40dffc:	popa   
  40dffd:	dec    ebx
  40dffe:	pop    es
  40dfff:	ins    DWORD PTR es:[edi],dx
  40e000:	(bad)  
  40e001:	ror    DWORD PTR ss:[esi-0x13],cl
  40e005:	and    al,0x2c
  40e007:	loop   0x40e019
  40e009:	shl    BYTE PTR [ebp-0x44a21cd],cl
  40e00f:	adc    BYTE PTR [ebp+0x63fe2e46],al
  40e015:	scas   eax,DWORD PTR es:[edi]
  40e016:	xor    ebp,DWORD PTR [edx]
  40e018:	push   cs
  40e019:	stos   BYTE PTR es:[edi],al
  40e01a:	inc    edi
  40e01b:	les    ebp,FWORD PTR [edx+0x1e039a18]
  40e021:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e023:	imul   eax,ebp,0x749d2401
  40e029:	sbb    BYTE PTR [ebp-0x7d],ch
  40e02c:	and    BYTE PTR [esi+edi*4+0x2afc5fb6],bl
  40e033:	dec    ebp
  40e034:	adc    eax,0x6bcd0b34
  40e039:	xor    BYTE PTR [esp+edi*1+0x69a3395],cl
  40e040:	and    eax,0x3e0e0b06
  40e045:	(bad)  
  40e047:	int3   
  40e048:	loop   0x40e08d
  40e04a:	mov    dh,0x10
  40e04c:	sub    DWORD PTR [esi-0x39],edx
  40e04f:	les    eax,FWORD PTR [ecx-0x5d4cf341]
  40e055:	sub    al,0x2b
  40e057:	mov    dh,0x2b
  40e059:	mov    ebp,0x5aa3859c
  40e05e:	pop    es
  40e05f:	pop    esp
  40e060:	in     eax,dx
  40e061:	mov    ecx,0xeff5af92
  40e066:	and    al,al
  40e068:	xchg   ecx,eax
  40e069:	mov    dl,0xce
  40e06b:	jg     0x40e041
  40e06d:	fiadd  WORD PTR [ebp+0x4fa6c9f2]
  40e073:	std    
  40e074:	jne    0x40e05d
  40e076:	inc    edx
  40e077:	fdiv   DWORD PTR [esi-0x4b]
  40e07a:	jl     0x40e0be
  40e07c:	jp     0x40e097
  40e07e:	dec    esp
  40e07f:	ss add cl,0xca
  40e083:	cmc    
  40e084:	sub    DWORD PTR [ebx],edx
  40e086:	cmc    
  40e087:	inc    esi
  40e088:	fldcw  WORD PTR [ebp+0x71]
  40e08b:	mov    BYTE PTR [edx+0x43],ah
  40e08e:	dec    edi
  40e08f:	or     al,0xd0
  40e091:	pop    edx
  40e092:	mov    ah,0x99
  40e094:	inc    ebx
  40e095:	in     al,0xe4
  40e097:	sbb    DWORD PTR [esi],edx
  40e099:	xor    DWORD PTR [eax],edx
  40e09b:	and    eax,0x2531ecd9
  40e0a0:	mov    BYTE PTR [esi+0x1a],al
  40e0a3:	popa   
  40e0a4:	adc    al,0x1f
  40e0a6:	(bad)  
  40e0a7:	bound  ecx,QWORD PTR [edi-0x70]
  40e0aa:	out    dx,eax
  40e0ab:	ret    0xfbd8
  40e0ae:	mov    ecx,0xe3f53904
  40e0b3:	nop
  40e0b4:	sbb    DWORD PTR [edi],esi
  40e0b6:	adc    al,0xbd
  40e0b8:	adc    BYTE PTR [eax+0x8c15ee1],dh
  40e0be:	cli    
  40e0bf:	jmp    0x47465319
  40e0c4:	popa   
  40e0c5:	pop    eax
  40e0c6:	scas   eax,DWORD PTR es:[edi]
  40e0c7:	retf   
  40e0c8:	js     0x40e0fe
  40e0ca:	loopne 0x40e0ae
  40e0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0cd:	jecxz  0x40e130
  40e0cf:	push   ebx
  40e0d0:	jo     0x40e085
  40e0d2:	push   ebx
  40e0d3:	mov    esp,0x807b4bdf
  40e0d8:	adc    bl,BYTE PTR [edx]
  40e0da:	xor    ah,BYTE PTR [ebx+0x8]
  40e0dd:	in     eax,dx
  40e0de:	stc    
  40e0df:	aad    0xf3
  40e0e1:	mov    ebp,0xf47586a8
  40e0e6:	sub    al,0x65
  40e0e8:	push   ecx
  40e0e9:	push   ds
  40e0ea:	sbb    DWORD PTR [edx],ecx
  40e0ec:	xor    al,0xd3
  40e0ee:	repz and al,0xb
  40e0f1:	sysexit 
  40e0f3:	outs   dx,BYTE PTR ds:[esi]
  40e0f4:	xchg   BYTE PTR [esp+eiz*4-0x1e],ch
  40e0f8:	outs   dx,DWORD PTR ds:[esi]
  40e0f9:	sub    bl,BYTE PTR [edx]
  40e0fb:	(bad)  [ebp-0x72]
  40e0fe:	mov    edi,0x6efff380
  40e103:	sahf   
  40e104:	xchg   ebx,eax
  40e105:	jbe    0x40e0ff
  40e107:	xor    al,0x10
  40e109:	sub    esi,DWORD PTR [ebx-0x3b802663]
  40e10f:	mov    dl,BYTE PTR [edi+0xd]
  40e112:	mov    ch,0xef
  40e114:	push   0x66
  40e116:	mov    ch,0x94
  40e118:	out    0xce,eax
  40e11a:	aas    
  40e11b:	add    ebx,edi
  40e11d:	mov    eax,ds:0xa6d530d9
  40e122:	das    
  40e123:	and    al,0xf6
  40e125:	mov    cl,0xbe
  40e127:	(bad)  
  40e129:	vpor   ymm7,ymm0,YMMWORD PTR [bp+di-0x5c32]
  40e130:	loopne 0x40e0d8
  40e132:	sbb    BYTE PTR [ecx+0x13],0xed
  40e136:	and    eax,0x7a5280f3
  40e13b:	jle    0x40e17c
  40e13d:	scas   al,BYTE PTR es:[edi]
  40e13e:	fdivr  DWORD PTR [edi-0x35f8884e]
  40e144:	pop    edi
  40e145:	pusha  
  40e146:	xchg   BYTE PTR [esp+ebx*8],al
  40e149:	fldenv [ecx-0x205b1041]
  40e14f:	ror    bl,0x12
  40e152:	mov    bl,0xaf
  40e154:	popf   
  40e155:	inc    ecx
  40e156:	call   0xef50:0x649be24d
  40e15d:	arpl   WORD PTR [ecx+0x18],sp
  40e160:	xchg   edx,eax
  40e161:	(bad)  
  40e162:	daa    
  40e163:	xchg   edx,eax
  40e164:	jns    0x40e1d4
  40e166:	ror    DWORD PTR [edi+0x2],0x73
  40e16a:	sar    dh,0x60
  40e16d:	pop    esi
  40e16e:	test   ebp,esp
  40e170:	aas    
  40e171:	sti    
  40e172:	retf   0xafac
  40e175:	push   ebp
  40e176:	mov    ch,0xbd
  40e178:	in     al,dx
  40e179:	push   edi
  40e17a:	sbb    DWORD PTR [esi+eax*8+0x51],esi
  40e17e:	icebp  
  40e17f:	js     0x40e110
  40e181:	or     ecx,DWORD PTR [ecx+0x8]
  40e184:	sub    al,0xb9
  40e186:	cmp    eax,0xd120b1b0
  40e18b:	add    DWORD PTR [edi],edi
  40e18d:	xor    BYTE PTR [ebx+0x73683ba5],dl
  40e193:	fmul   st,st(0)
  40e195:	or     eax,0xdbe68c3a
  40e19a:	pop    edi
  40e19b:	jle    0x40e207
  40e19d:	pushf  
  40e19e:	sbb    esi,DWORD PTR [edx-0x7]
  40e1a1:	mov    edx,0x7e0505a
  40e1a6:	push   DWORD PTR [ebp+0x7c]
  40e1a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1aa:	sbb    edi,DWORD PTR [ecx+0x324520b1]
  40e1b0:	test   ax,0x174e
  40e1b4:	mov    dh,0x10
  40e1b6:	add    BYTE PTR [edx+0x275137a6],dl
  40e1bc:	add    eax,0x7bd9c347
  40e1c1:	leave  
  40e1c2:	fbld   TBYTE PTR [edi-0x6a244cfc]
  40e1c8:	loopne 0x40e1d8
  40e1ca:	push   ecx
  40e1cb:	stc    
  40e1cc:	imul   ecx,DWORD PTR [ebx-0x4d],0x60
  40e1d0:	pop    ebx
  40e1d1:	or     al,0x30
  40e1d3:	test   eax,0xfb32a0f0
  40e1d8:	jne    0x40e1b6
  40e1da:	adc    eax,0xe8ded197
  40e1df:	mov    eax,0xacea57c0
  40e1e4:	stos   BYTE PTR es:[edi],al
  40e1e5:	je     0x40e242
  40e1e7:	test   al,0x29
  40e1e9:	pop    es
  40e1ea:	in     eax,0xd1
  40e1ec:	mov    ch,BYTE PTR [ebx]
  40e1ee:	out    0x99,eax
  40e1f0:	pusha  
  40e1f1:	mov    ch,cl
  40e1f3:	scas   eax,DWORD PTR es:[edi]
  40e1f4:	icebp  
  40e1f5:	and    al,0x7d
  40e1f7:	aas    
  40e1f8:	fsubr  st(1),st
  40e1fa:	out    0x13,al
  40e1fc:	sbb    cl,ch
  40e1fe:	test   eax,0x87bef420
  40e203:	lods   al,BYTE PTR ds:[esi]
  40e204:	add    dl,dh
  40e206:	retf   0x7122
  40e209:	sbb    esp,DWORD PTR [ebx]
  40e20b:	sbb    BYTE PTR [ebx+0x6754e5dd],bl
  40e211:	in     eax,dx
  40e212:	(bad)  
  40e213:	sub    ebp,DWORD PTR [eax-0x28936b81]
  40e219:	lods   eax,DWORD PTR ds:[esi]
  40e21a:	inc    esi
  40e21b:	pop    ebx
  40e21c:	jp     0x40e1c2
  40e21e:	xchg   esp,eax
  40e21f:	ror    DWORD PTR [edx],0x3e
  40e222:	sbb    BYTE PTR [ebx-0x4e],0x7c
  40e226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e227:	xchg   edi,eax
  40e228:	and    esp,DWORD PTR [edx]
  40e22a:	loope  0x40e264
  40e22c:	cmp    dh,BYTE PTR ds:0x5bfc97d1
  40e232:	push   cs
  40e233:	cld    
  40e234:	sub    BYTE PTR [eax+0x1b],dl
  40e237:	fdiv   DWORD PTR [eax+0x7e]
  40e23a:	mov    ebp,0x80bb143c
  40e23f:	cmp    DWORD PTR ds:0x8d278296,edi
  40e245:	mov    ebx,0x84dde9be
  40e24a:	sub    eax,0xc660896f
  40e24f:	stos   BYTE PTR es:[edi],al
  40e250:	sti    
  40e251:	xor    BYTE PTR [eax+0x73],cl
  40e254:	dec    esi
  40e255:	repz cmp ebx,DWORD PTR [ecx]
  40e258:	cmp    DWORD PTR [edi+0x2ca1cc7a],esp
  40e25e:	mov    eax,0xde5820d8
  40e263:	in     al,0x31
  40e265:	outs   dx,DWORD PTR ds:[esi]
  40e266:	jbe    0x40e2bb
  40e268:	sub    al,0xfc
  40e26a:	mov    al,ds:0xc5aa0a0a
  40e26f:	jbe    0x40e2ed
  40e271:	stos   BYTE PTR es:[edi],al
  40e272:	ret    0x9e9d
  40e275:	jl     0x40e285
  40e277:	jl     0x40e29c
  40e279:	(bad)  
  40e27a:	fild   QWORD PTR [ecx+0x4]
  40e27d:	cmp    esi,ebp
  40e27f:	adc    BYTE PTR [esi-0x34],dl
  40e282:	pop    es
  40e283:	outs   dx,BYTE PTR ds:[esi]
  40e284:	xchg   esi,ecx
  40e286:	inc    edx
  40e287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e288:	test   al,0xba
  40e28a:	mov    bh,0x1f
  40e28c:	or     BYTE PTR [ebp+0x66],dh
  40e28f:	sub    al,0x67
  40e291:	xor    eax,0x819c620e
  40e296:	jmp    0x63299422
  40e29b:	push   eax
  40e29c:	pop    ebp
  40e29d:	rcr    BYTE PTR [edx-0x49a16018],cl
  40e2a3:	xor    BYTE PTR [ecx+eax*8+0x64],al
  40e2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a8:	(bad)  
  40e2a9:	in     al,dx
  40e2aa:	xchg   ebx,eax
  40e2ab:	inc    ebx
  40e2ac:	sbb    dh,BYTE PTR [edx]
  40e2ae:	pop    esi
  40e2af:	jl     0x40e25f
  40e2b1:	jbe    0x40e26a
  40e2b3:	mov    edx,0xad10680e
  40e2b8:	dec    eax
  40e2b9:	nop
  40e2ba:	lahf   
  40e2bb:	stos   DWORD PTR es:[edi],eax
  40e2bc:	mov    cl,0x3d
  40e2be:	and    esi,eax
  40e2c0:	aaa    
  40e2c1:	test   BYTE PTR [ecx-0x49fb1be4],dh
  40e2c7:	ins    DWORD PTR es:[edi],dx
  40e2c8:	mov    esp,0x2bcdd18b
  40e2cd:	jo     0x40e322
  40e2cf:	fld    DWORD PTR [edx+0xa]
  40e2d2:	mov    ds:0xf057002c,eax
  40e2d7:	in     eax,dx
  40e2d8:	cwde   
  40e2d9:	repz adc ecx,DWORD PTR [ecx+0x56]
  40e2dd:	call   0x8bc:0xd77c1562
  40e2e4:	jmp    0xa94:0x1e1684ba
  40e2eb:	pusha  
  40e2ec:	add    bh,BYTE PTR [eax+0x16]
  40e2ef:	bnd call DWORD PTR [eax+0x72]
  40e2f3:	cmp    ebp,esi
  40e2f5:	(bad)  
  40e2f6:	jmp    0x883a1b22
  40e2fb:	xchg   BYTE PTR [ebx-0xea10aca],al
  40e301:	sub    al,0xa6
  40e303:	stc    
  40e304:	xchg   DWORD PTR [ebx-0x3e0dcf7b],ecx
  40e30a:	sbb    BYTE PTR [ebx],al
  40e30c:	dec    esp
  40e30d:	mov    ah,0x2c
  40e30f:	pop    ds
  40e310:	test   al,0xff
  40e312:	cs mov ebp,0xb1892210
  40e318:	dec    eax
  40e319:	or     BYTE PTR [esi-0x26b24325],al
  40e31f:	jl     0x40e35b
  40e321:	data16 hlt 
  40e323:	or     BYTE PTR [edx+0x4bebfa08],ch
  40e329:	ret    
  40e32a:	mov    bl,bl
  40e32c:	es mov eax,0xa05ec1b7
  40e332:	loopne 0x40e34b
  40e334:	outs   dx,BYTE PTR ds:[esi]
  40e335:	adc    al,0x1d
  40e337:	adc    cl,dh
  40e339:	test   al,dl
  40e33b:	lods   eax,DWORD PTR ds:[esi]
  40e33c:	scas   eax,DWORD PTR es:[edi]
  40e33d:	sub    DWORD PTR [ebp+0x7581264b],ecx
  40e343:	data16 jae 0x40e323
  40e346:	mov    WORD PTR [edx],?
  40e348:	push   edx
  40e349:	stc    
  40e34a:	or     DWORD PTR [edx],esp
  40e34c:	push   ebx
  40e34d:	add    al,0xef
  40e34f:	mov    ds:0x2ed9a618,eax
  40e354:	mov    dl,0xb9
  40e356:	sbb    bh,BYTE PTR [eax+0x48]
  40e359:	push   ecx
  40e35a:	mov    dh,0xa9
  40e35c:	mov    bh,0xa0
  40e35e:	jle    0x40e2f9
  40e360:	aas    
  40e361:	xor    DWORD PTR [eax-0x6eafe9a7],esp
  40e367:	rcl    BYTE PTR [ebp-0x13],1
  40e36a:	jmp    0x2e7:0xc0fbde4f
  40e371:	jbe    0x40e2fa
  40e373:	out    0x6c,eax
  40e375:	inc    edi
  40e376:	daa    
  40e377:	mov    esp,0x54ac4242
  40e37c:	rcr    DWORD PTR [ebx],cl
  40e37e:	sbb    edx,DWORD PTR [ebx-0x750ece31]
  40e384:	mov    bl,0xd6
  40e386:	pop    edi
  40e387:	jmp    0x4477dd26
  40e38c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e38d:	bound  ebp,QWORD PTR [ecx-0x52]
  40e390:	dec    edx
  40e391:	pop    ebp
  40e392:	dec    edi
  40e393:	(bad)  
  40e394:	clc    
  40e395:	sub    esp,DWORD PTR [ebx+0x4c]
  40e398:	lds    edi,FWORD PTR [esi+edi*2]
  40e39b:	xor    DWORD PTR [edi-0x1e],ebp
  40e39e:	xchg   edx,eax
  40e39f:	(bad)  
  40e3a0:	mov    DWORD PTR [esp+eax*8-0x21],edx
  40e3a4:	out    dx,eax
  40e3a5:	xchg   ecx,eax
  40e3a6:	test   al,0x17
  40e3a8:	pop    eax
  40e3a9:	ror    DWORD PTR es:[ecx-0x6c66b2e6],0xcc
  40e3b1:	lock jmp 0xe8de4cb2
  40e3b7:	inc    edi
  40e3b8:	push   es
  40e3b9:	dec    ebx
  40e3ba:	stos   BYTE PTR es:[edi],al
  40e3bb:	dec    esi
  40e3bc:	sbb    ecx,DWORD PTR [esi+0x400b9c1a]
  40e3c2:	jl     0x40e3d8
  40e3c4:	repnz pop ds
  40e3c6:	mov    ecx,0x1883c675
  40e3cb:	pop    es
  40e3cc:	pop    ebp
  40e3cd:	ret    0x9556
  40e3d0:	xchg   esp,eax
  40e3d1:	jp     0x40e3bf
  40e3d3:	jne    0x40e453
  40e3d5:	add    edi,edi
  40e3d7:	(bad)  
  40e3d8:	pop    ecx
  40e3d9:	add    ebp,ecx
  40e3db:	and    DWORD PTR [edx-0x5e],ecx
  40e3de:	jmp    0xdbf5:0xa7a01d5a
  40e3e5:	dec    ecx
  40e3e6:	fwait
  40e3e7:	mul    BYTE PTR [esi+0x25227ba6]
  40e3ed:	push   ecx
  40e3ee:	jno    0x40e418
  40e3f0:	jmp    0x40e467
  40e3f2:	mov    ebx,0xfe7c028e
  40e3f7:	ja     0x40e389
  40e3f9:	push   edx
  40e3fa:	inc    DWORD PTR [edi+edx*4]
  40e3fd:	sbb    dh,BYTE PTR [edi+0x9fb5b8f]
  40e403:	mov    ebx,0x370c2fe4
  40e408:	retf   0xc2a
  40e40b:	jne    0x40e429
  40e40d:	pop    esi
  40e40e:	nop
  40e40f:	int    0x62
  40e411:	test   al,0xa1
  40e413:	aam    0x1c
  40e415:	dec    BYTE PTR [edx+0xca900c]
  40e41b:	sar    DWORD PTR [edi+0x2fa930ff],1
  40e421:	rcl    DWORD PTR [edx],cl
  40e423:	xor    DWORD PTR [edx+ebx*8-0x8],edx
  40e427:	retf   
  40e428:	adc    al,0xb8
  40e42a:	sbb    al,0x58
  40e42c:	push   esi
  40e42d:	sbb    bl,BYTE PTR [esp+edi*2-0x19]
  40e431:	mov    al,0xca
  40e433:	retw   
  40e435:	add    ebp,DWORD PTR [esp+ebx*1+0x64a24e21]
  40e43c:	adc    ebx,DWORD PTR [ebx]
  40e43e:	popf   
  40e43f:	xchg   esp,eax
  40e440:	pop    edi
  40e441:	mov    ds:0xb5921416,eax
  40e446:	mov    edx,0xa0892fec
  40e44b:	mov    ax,WORD PTR [eax]
  40e44e:	lea    esi,[ecx+0x3f2397f9]
  40e454:	cwde   
  40e455:	add    DWORD PTR [edx-0x4cbbf939],esp
  40e45b:	pop    es
  40e45c:	adc    BYTE PTR [esi+edx*2-0x4a746430],ah
  40e463:	jno    0x40e49b
  40e465:	icebp  
  40e466:	sbb    DWORD PTR [ebp-0xd],ecx
  40e469:	xchg   esi,eax
  40e46a:	add    edi,DWORD PTR [edi+0x4]
  40e46d:	test   eax,0x938df304
  40e472:	enter  0x103b,0x25
  40e476:	or     eax,0xe26d003e
  40e47b:	jecxz  0x40e45c
  40e47d:	sub    al,BYTE PTR [eax+0x77ffb60b]
  40e483:	rol    BYTE PTR [edi-0x78c88272],0x97
  40e48a:	pop    edx
  40e48b:	loope  0x40e41c
  40e48d:	sbb    BYTE PTR [ebp+0x3ebf148],bh
  40e493:	shr    DWORD PTR [esi+eax*1+0x6a6909ec],cl
  40e49a:	cdq    
  40e49b:	xchg   BYTE PTR [ecx],al
  40e49d:	mov    ds:0x7f36a96f,al
  40e4a2:	iret   
  40e4a3:	sbb    al,0x1a
  40e4a5:	retf   
  40e4a6:	ins    DWORD PTR es:[edi],dx
  40e4a7:	ds xchg edi,eax
  40e4a9:	mov    esp,0x15a98828
  40e4ae:	ret    
  40e4af:	push   edi
  40e4b0:	and    eax,esp
  40e4b2:	jo     0x40e50d
  40e4b4:	fimul  DWORD PTR [edi-0x4ea6a0ea]
  40e4ba:	sub    ebp,DWORD PTR [ecx+0x3f925738]
  40e4c0:	(bad)  
  40e4c2:	dec    edi
  40e4c3:	push   es
  40e4c4:	sbb    ebx,esi
  40e4c6:	call   0xa63f:0x9e897e2
  40e4cd:	mov    edi,0x9bd677d9
  40e4d2:	arpl   WORD PTR [esi],dx
  40e4d4:	jg     0x40e53d
  40e4d6:	retf   
  40e4d7:	push   esi
  40e4d8:	cdq    
  40e4d9:	popf   
  40e4da:	bound  ebx,QWORD PTR ds:0x66f11426
  40e4e0:	and    ebp,DWORD PTR [eax-0x33]
  40e4e3:	lock lahf 
  40e4e5:	ja     0x40e53c
  40e4e7:	call   0x124dda53
  40e4ec:	out    dx,eax
  40e4ed:	pushf  
  40e4ee:	jp     0x40e484
  40e4f0:	mov    bl,0xf5
  40e4f2:	push   esi
  40e4f3:	mov    ds,WORD PTR [edx+0x3d]
  40e4f6:	mov    ds:0xb9ce8708,al
  40e4fb:	adc    DWORD PTR [ebx-0x10],0x90ee703b
  40e502:	lock cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40e505:	fld    DWORD PTR [edi-0x1f1cfb40]
  40e50b:	cmp    cl,BYTE PTR ds:0xaf2bae99
  40e511:	das    
  40e512:	jne    0x40e519
  40e514:	leave  
  40e515:	mov    edx,0xa4ddc604
  40e51a:	pop    edx
  40e51b:	add    BYTE PTR [esi+0x2dd5c227],bl
  40e521:	cmp    eax,0x8f7f2c81
  40e526:	or     al,0x2c
  40e528:	loopne 0x40e522
  40e52a:	lods   eax,DWORD PTR ds:[esi]
  40e52b:	xchg   DWORD PTR [edx+0x905203b],edx
  40e531:	ins    DWORD PTR es:[edi],dx
  40e532:	in     eax,dx
  40e533:	pop    es
  40e534:	scas   eax,DWORD PTR es:[edi]
  40e535:	aaa    
  40e536:	ja     0x40e544
  40e538:	or     BYTE PTR [ebx],dh
  40e53a:	cmp    BYTE PTR [ebp+0x72c41da1],ch
  40e540:	sub    edx,eax
  40e542:	inc    edi
  40e543:	fdivr  DWORD PTR [ecx-0x58]
  40e546:	mov    ch,0x4
  40e548:	or     DWORD PTR [ebp-0x59583512],0x789c727c
  40e552:	je     0x40e5b6
  40e554:	out    0x17,al
  40e556:	fld    QWORD PTR [ebx]
  40e558:	pop    esi
  40e559:	outs   dx,BYTE PTR ds:[esi]
  40e55a:	jmp    0x40e5ac
  40e55c:	rcr    edi,0x86
  40e55f:	lock lods eax,DWORD PTR ds:[esi]
  40e561:	pop    esi
  40e562:	or     BYTE PTR [eax-0x18],bh
  40e565:	rol    ch,1
  40e567:	ins    BYTE PTR es:[edi],dx
  40e568:	(bad)  
  40e569:	adc    al,0xbc
  40e56b:	arpl   WORD PTR ds:0x7b2ecff4,ax
  40e571:	and    al,0xf
  40e573:	ror    BYTE PTR [edx],1
  40e575:	sbb    al,0x9d
  40e577:	add    BYTE PTR [eax+edx*8+0x3fe6c74b],dl
  40e57e:	pusha  
  40e57f:	out    0x9c,eax
  40e581:	or     DWORD PTR [esi],esp
  40e583:	nop
  40e584:	push   cs
  40e585:	sbb    cl,BYTE PTR [esi+0x4b22e44e]
  40e58b:	add    edi,0x12d400ae
  40e591:	pop    eax
  40e592:	loope  0x40e517
  40e594:	fs pop es
  40e596:	nop
  40e597:	or     al,0xad
  40e599:	stc    
  40e59a:	mov    edi,gs
  40e59c:	inc    ecx
  40e59d:	into   
  40e59e:	cmp    al,0xe9
  40e5a0:	(bad)  
  40e5a1:	fs ja  0x40e543
  40e5a4:	sbb    ah,BYTE PTR [esi+ebx*4]
  40e5a7:	stos   DWORD PTR es:[edi],eax
  40e5a8:	jo     0x40e5d8
  40e5aa:	fdiv   DWORD PTR [eax-0x2c]
  40e5ad:	push   esi
  40e5ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5af:	cmp    edi,DWORD PTR [edx+0x31]
  40e5b2:	hlt    
  40e5b3:	and    ecx,ebx
  40e5b5:	and    eax,0xed2b9080
  40e5ba:	into   
  40e5bb:	push   0x9febd6c
  40e5c0:	or     eax,0xadaad141
  40e5c5:	enter  0x2e3d,0xb0
  40e5c9:	mov    DWORD PTR [ebp+0x7d244927],esi
  40e5cf:	inc    esi
  40e5d0:	mov    esi,0x1e16bcf
  40e5d5:	dec    ebx
  40e5d6:	in     al,dx
  40e5d7:	jge    0x40e58f
  40e5d9:	cmp    edx,edx
  40e5db:	arpl   si,cx
  40e5dd:	cmp    eax,0x1bd4ce31
  40e5e2:	popf   
  40e5e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5e4:	or     al,0x51
  40e5e6:	add    eax,0xf6d984ef
  40e5eb:	cmp    al,0xf
  40e5ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ee:	jmp    0x9bcebb2
  40e5f3:	test   eax,0x882bdb0
  40e5f8:	hlt    
  40e5f9:	sbb    esp,DWORD PTR [edi+eiz*4+0x737bdb05]
  40e600:	dec    edx
  40e601:	push   esi
  40e602:	pusha  
  40e603:	sub    ebp,0xffffffb5
  40e606:	cli    
  40e607:	jmp    0x40e5d2
  40e609:	jle    0x40e62c
  40e60b:	push   eax
  40e60c:	ret    
  40e60d:	mov    bh,0xf4
  40e60f:	sar    BYTE PTR [edi+ebx*2+0x2263bb20],1
  40e616:	out    dx,al
  40e617:	aam    0x88
  40e619:	ret    
  40e61a:	add    eax,0xa2bfaf23
  40e61f:	push   ebp
  40e620:	test   eax,0x6fb254e3
  40e625:	fild   DWORD PTR [edx+0x199cd60a]
  40e62b:	push   es
  40e62c:	int3   
  40e62d:	popf   
  40e62e:	push   ebp
  40e62f:	mov    edi,0xe9765449
  40e634:	call   0xe6f3da8a
  40e639:	push   eax
  40e63a:	fnstsw WORD PTR [edx+0x24d334b1]
  40e640:	pusha  
  40e641:	out    0x45,al
  40e643:	jg     0x40e661
  40e645:	jecxz  0x40e65d
  40e647:	sub    BYTE PTR [ebx-0x5dbb4be6],0xf7
  40e64e:	sahf   
  40e64f:	out    dx,eax
  40e650:	clc    
  40e651:	dec    ebp
  40e652:	dec    ebx
  40e653:	hlt    
  40e654:	scas   eax,DWORD PTR es:[edi]
  40e655:	sbb    ebx,esi
  40e657:	pop    es
  40e658:	dec    esi
  40e659:	test   eax,0x83992da3
  40e65e:	retf   0xa5e2
  40e661:	and    al,0x86
  40e663:	int3   
  40e664:	das    
  40e665:	pop    ecx
  40e666:	mov    ebp,edx
  40e668:	test   al,0x76
  40e66a:	lods   al,BYTE PTR ds:[esi]
  40e66b:	push   cs
  40e66c:	and    esp,DWORD PTR [edi]
  40e66e:	push   ss
  40e66f:	in     al,dx
  40e670:	xor    esp,edi
  40e672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e673:	call   0x2842c7da
  40e678:	jge    0x40e63b
  40e67a:	mov    bl,0xf3
  40e67c:	and    DWORD PTR [edx+0x1d001836],esi
  40e682:	iret   
  40e683:	push   cs
  40e684:	psllw  mm5,QWORD PTR [ecx]
  40e687:	fistp  QWORD PTR [esi]
  40e689:	add    DWORD PTR [edx],0xc34bedf8
  40e68f:	mov    BYTE PTR [ebp-0x47dcd3ed],al
  40e695:	jb     0x40e714
  40e697:	retf   0x81d2
  40e69a:	jbe    0x40e715
  40e69c:	jbe    0x40e66b
  40e69e:	fwait
  40e69f:	lea    ecx,[eax-0x31ace659]
  40e6a5:	or     eax,0x5774c47c
  40e6aa:	inc    edx
  40e6ab:	call   0x239e:0xc11f3269
  40e6b2:	inc    esp
  40e6b3:	push   esp
  40e6b4:	jbe    0x40e655
  40e6b6:	fidivr DWORD PTR [ecx+0x3d4f0cdb]
  40e6bc:	jae    0x40e722
  40e6be:	daa    
  40e6bf:	add    DWORD PTR [edx+0x712f63b0],edx
  40e6c5:	xchg   ebp,eax
  40e6c6:	mov    ch,BYTE PTR [ebp+edx*2+0x5e2bc4f9]
  40e6cd:	jl     0x40e6f9
  40e6cf:	hlt    
  40e6d0:	ficom  WORD PTR [edi]
  40e6d2:	aas    
  40e6d3:	xor    al,0x39
  40e6d5:	(bad)  
  40e6d6:	(bad)  
  40e6d7:	xchg   edx,eax
  40e6d8:	enter  0x15c2,0x7a
  40e6dc:	mov    ch,0x2
  40e6de:	add    al,0xa6
  40e6e0:	pop    ecx
  40e6e1:	pushf  
  40e6e2:	add    DWORD PTR [esi],ebx
  40e6e4:	test   BYTE PTR [edi-0x40],cl
  40e6e7:	lahf   
  40e6e8:	outs   dx,DWORD PTR ds:[esi]
  40e6e9:	leave  
  40e6ea:	loop   0x40e695
  40e6ec:	(bad)  
  40e6ed:	int3   
  40e6ee:	retf   
  40e6ef:	pop    edx
  40e6f0:	add    eax,esi
  40e6f2:	mov    es,WORD PTR [esi]
  40e6f4:	and    al,0xa5
  40e6f6:	or     edx,0x5c362f3d
  40e6fc:	sbb    al,bh
  40e6fe:	mov    ecx,0x95d345d5
  40e703:	lock cdq 
  40e705:	lods   al,BYTE PTR ds:[esi]
  40e706:	js     0x40e68b
  40e708:	sbb    edx,DWORD PTR [edx]
  40e70a:	imul   ebx,DWORD PTR [ecx],0xffffffdf
  40e70d:	adc    ax,0xd6a2
  40e711:	loopne 0x40e791
  40e713:	pop    esi
  40e714:	pop    edx
  40e715:	and    DWORD PTR [ecx],edi
  40e717:	pop    ecx
  40e718:	rcl    ah,cl
  40e71a:	lea    ebp,[edx-0x68cb2623]
  40e720:	cld    
  40e721:	jne    0x40e6ea
  40e723:	sbb    BYTE PTR [eax-0x7c951ffa],dh
  40e729:	jg     0x40e6bb
  40e72b:	in     al,dx
  40e72c:	xlat   BYTE PTR ds:[ebx]
  40e72d:	push   ds
  40e72e:	inc    ecx
  40e72f:	into   
  40e730:	outs   dx,BYTE PTR ds:[esi]
  40e731:	mov    ebp,0x36965bd
  40e736:	aaa    
  40e737:	scas   al,BYTE PTR es:[edi]
  40e738:	aad    0x31
  40e73a:	or     ebp,DWORD PTR [esi]
  40e73c:	rcl    BYTE PTR [esi+0x79],cl
  40e73f:	xchg   esi,edx
  40e741:	sbb    BYTE PTR [ebx],0xce
  40e744:	mov    dl,0xa0
  40e746:	inc    ecx
  40e747:	cmp    ebp,DWORD PTR [eax-0x75]
  40e74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e74b:	arpl   WORD PTR [ebx-0x37b9eefc],di
  40e751:	add    esp,DWORD PTR ds:0x6910776d
  40e757:	add    al,0xde
  40e759:	mov    BYTE PTR [esi+0x6c],ah
  40e75c:	xor    DWORD PTR [eax-0x70],ecx
  40e75f:	ds push edi
  40e761:	popa   
  40e762:	and    eax,0x24b0c170
  40e767:	adc    eax,0x677219ed
  40e76c:	imul   esi,edx,0x8e4bff3
  40e772:	pop    eax
  40e773:	pop    ebp
  40e774:	(bad)  
  40e775:	dec    ebp
  40e776:	aaa    
  40e777:	scas   eax,DWORD PTR es:[edi]
  40e778:	sbb    dl,cl
  40e77a:	jg     0x40e74b
  40e77c:	sub    esi,edx
  40e77e:	retf   
  40e77f:	push   cs
  40e780:	outs   dx,DWORD PTR ds:[esi]
  40e781:	mov    esi,DWORD PTR [ebx-0x1dc1519f]
  40e787:	jns    0x40e7cc
  40e789:	stos   DWORD PTR es:[edi],eax
  40e78a:	mov    ecx,0x9eac0474
  40e78f:	mov    al,ds:0xff2cea2
  40e794:	xor    BYTE PTR [esi+eiz*1+0x9],ch
  40e798:	adc    bl,BYTE PTR [ebx+0x60]
  40e79b:	test   al,0x9b
  40e79d:	sub    eax,0x5c3a986c
  40e7a2:	jbe    0x40e7ff
  40e7a4:	nop
  40e7a5:	in     eax,dx
  40e7a6:	mov    ebp,ecx
  40e7a8:	adc    eax,0x27b14b2
  40e7ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7ae:	sbb    ah,BYTE PTR [edx+esi*2]
  40e7b1:	int3   
  40e7b2:	mov    ch,0x5d
  40e7b4:	jno    0x40e7b7
  40e7b6:	sbb    bh,BYTE PTR [eax]
  40e7b8:	jo     0x40e793
  40e7ba:	adc    BYTE PTR [ebx+eiz*8-0x3e],dh
  40e7be:	nop
  40e7bf:	sub    BYTE PTR [ebp+0x73],bh
  40e7c2:	push   eax
  40e7c3:	loope  0x40e791
  40e7c5:	fcomip st,st(1)
  40e7c7:	movaps xmm3,XMMWORD PTR [ebx-0x15396828]
  40e7ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7cf:	enter  0xa39c,0x7d
  40e7d3:	mov    esi,0xa4e85caf
  40e7d8:	sub    al,0x85
  40e7da:	xchg   ecx,eax
  40e7db:	mov    dh,0x2c
  40e7dd:	mov    edx,0xdc4ecbf3
  40e7e2:	push   esp
  40e7e3:	xchg   ecx,eax
  40e7e4:	pop    esp
  40e7e5:	add    ebp,DWORD PTR [ecx+0x6e]
  40e7e8:	mov    ds:0x99e95173,al
  40e7ed:	loopne 0x40e85b
  40e7ef:	adc    BYTE PTR [eax-0x72cc8a27],dl
  40e7f5:	adc    al,0xc9
  40e7f7:	xchg   edx,eax
  40e7f8:	aam    0x8
  40e7fa:	js     0x40e7d4
  40e7fc:	in     al,dx
  40e7fd:	test   DWORD PTR [eax-0x53a12c1e],esi
  40e803:	push   ss
  40e804:	out    0x6f,eax
  40e806:	push   es
  40e807:	fldenv [edi]
  40e809:	sti    
  40e80a:	xchg   ebx,eax
  40e80b:	retf   
  40e80c:	cdq    
  40e80d:	adc    eax,0x7fb960c0
  40e812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e813:	cld    
  40e814:	dec    esi
  40e815:	outs   dx,BYTE PTR ds:[esi]
  40e816:	mov    eax,0x31162694
  40e81b:	sbb    al,0x61
  40e81d:	jecxz  0x40e85d
  40e81f:	repz jmp 0x40e86e
  40e822:	mov    esi,0x62ae829d
  40e827:	loopne 0x40e7e6
  40e829:	or     edi,esi
  40e82b:	mov    eax,0xff939dd6
  40e830:	pushf  
  40e831:	xchg   ecx,eax
  40e832:	pop    ebp
  40e833:	fwait
  40e834:	retf   0xf63c
  40e837:	push   es
  40e838:	je     0x40e8a7
  40e83a:	je     0x40e7d8
  40e83c:	pop    esi
  40e83d:	mov    ah,0x4
  40e83f:	int    0xb6
  40e841:	cdq    
  40e842:	xchg   ecx,eax
  40e843:	ret    
  40e844:	ret    0xf539
  40e847:	test   al,0xef
  40e849:	xor    eax,0x38416243
  40e84e:	ret    
  40e84f:	push   edi
  40e850:	out    dx,eax
  40e851:	fwait
  40e852:	loopne 0x40e7de
  40e854:	je     0x40e840
  40e856:	adc    al,BYTE PTR [esi+0x6b]
  40e859:	xchg   BYTE PTR [ebx+0x52],ah
  40e85c:	nop
  40e85d:	in     eax,dx
  40e85e:	cmp    BYTE PTR [edi-0x44],dh
  40e861:	out    dx,eax
  40e862:	push   eax
  40e863:	push   esi
  40e864:	adc    BYTE PTR [eax+0x786a615d],dh
  40e86a:	fistp  DWORD PTR [esi-0x3e]
  40e86d:	ins    DWORD PTR es:[edi],dx
  40e86e:	rcl    DWORD PTR [ebp+0x2628b5e7],0xba
  40e875:	out    dx,al
  40e876:	pop    esi
  40e877:	aad    0xfc
  40e879:	leave  
  40e87a:	mov    ds:0xa32f1b6d,eax
  40e87f:	inc    ebp
  40e880:	lock rcr DWORD PTR [esi+ebp*1+0x2847d8f6],1
  40e888:	fcomp  QWORD PTR ds:0x5c2623a4
  40e88e:	ret    
  40e88f:	scas   al,BYTE PTR es:[edi]
  40e890:	fist   WORD PTR [ebp+ebx*1-0x17a1d5be]
  40e897:	or     al,0xc7
  40e899:	retf   
  40e89a:	xchg   edi,eax
  40e89b:	ja     0x40e8f0
  40e89d:	cmp    ebx,ebx
  40e89f:	sbb    bh,bl
  40e8a1:	rcr    DWORD PTR [eax-0x33980b50],cl
  40e8a7:	retf   
  40e8a8:	in     eax,0xb4
  40e8aa:	inc    esp
  40e8ab:	fs (bad) 
  40e8ad:	test   BYTE PTR [edx+edi*1],0x8d
  40e8b1:	hlt    
  40e8b2:	imul   ecx,DWORD PTR [eax],0xac0d5451
  40e8b8:	sbb    esi,DWORD PTR ds:0xaa6f45a7
  40e8be:	xchg   ebx,eax
  40e8bf:	cs cmp al,0xa
  40e8c2:	(bad)  
  40e8c3:	cmp    DWORD PTR [edi-0x2b],edi
  40e8c6:	sub    edi,DWORD PTR [ebx+0x8d9eafa]
  40e8cc:	data16 adc bh,BYTE PTR [edi]
  40e8cf:	jne    0x40e8e2
  40e8d1:	jp     0x40e911
  40e8d3:	sbb    DWORD PTR [esi+0x6a],ebx
  40e8d6:	in     eax,0x90
  40e8d8:	in     al,dx
  40e8d9:	pop    eax
  40e8da:	inc    ebx
  40e8db:	or     bh,BYTE PTR [esi]
  40e8dd:	inc    ebx
  40e8de:	push   es
  40e8df:	mov    dl,0x78
  40e8e1:	mov    esp,0xa37f8599
  40e8e6:	xchg   esp,eax
  40e8e7:	xchg   DWORD PTR [esi],esp
  40e8e9:	pop    es
  40e8ea:	xchg   DWORD PTR [esp+ecx*2-0x55],edx
  40e8ee:	jo     0x40e8a2
  40e8f0:	adc    bh,0xf7
  40e8f3:	cmp    BYTE PTR [ebx+0xa],bl
  40e8f6:	and    BYTE PTR [ecx+0x52],ch
  40e8f9:	inc    ebp
  40e8fa:	test   eax,0x43fb245
  40e8ff:	and    eax,0xaae9a986
  40e904:	xor    BYTE PTR [ebx+0x68],ah
  40e907:	cld    
  40e908:	ret    0xdc6a
  40e90b:	lods   eax,DWORD PTR ds:[esi]
  40e90c:	mov    eax,ds:0x9115671
  40e911:	jo     0x40e8ed
  40e913:	(bad)  
  40e914:	popa   
  40e915:	xor    BYTE PTR [edx],al
  40e917:	sbb    BYTE PTR [eax],bl
  40e919:	pop    es
  40e91a:	mov    ds:0x1fbc5e0e,al
  40e91f:	jmp    0x9f949e0
  40e924:	push   ebx
  40e925:	mov    esp,0xa6bdf054
  40e92a:	out    dx,al
  40e92b:	jl     0x40e8b3
  40e92d:	out    0x9d,al
  40e92f:	sbb    BYTE PTR [ecx+eiz*4+0x1c259e92],al
  40e936:	push   ss
  40e937:	push   0x6e
  40e939:	dec    eax
  40e93a:	mov    edi,0x63439131
  40e93f:	repnz sub al,0xd7
  40e942:	push   0x26f8a67
  40e947:	xchg   ebp,eax
  40e948:	dec    bh
  40e94a:	jne    0x40e8eb
  40e94c:	mov    ebp,0x94a264d1
  40e951:	pushf  
  40e952:	push   ebp
  40e953:	leave  
  40e954:	and    eax,esp
  40e956:	mov    eax,0x51114054
  40e95b:	push   ss
  40e95c:	push   ecx
  40e95d:	out    dx,al
  40e95e:	pop    edi
  40e95f:	mov    eax,ds:0x88e8cb07
  40e964:	sbb    bh,0x74
  40e967:	sub    bl,BYTE PTR [eax]
  40e969:	mov    ds:0x568b56ef,eax
  40e96e:	mov    eax,ds:0x43f2d61c
  40e973:	das    
  40e974:	adc    BYTE PTR [edx+0x1c4eda9a],cl
  40e97a:	loopne 0x40e96e
  40e97c:	es mov cl,0x2c
  40e97f:	sbb    DWORD PTR [edi+0x656955fa],esi
  40e985:	stos   DWORD PTR es:[edi],eax
  40e986:	mov    bl,0xaa
  40e988:	leave  
  40e989:	test   eax,0x309c92bf
  40e98e:	jo     0x40e960
  40e990:	in     al,0xef
  40e992:	mov    ecx,0x626eddd9
  40e997:	sar    dh,1
  40e999:	sbb    al,0x22
  40e99b:	inc    esp
  40e99c:	jg     0x40e99d
  40e99e:	or     eax,0x306fd15d
  40e9a3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40e9a5:	xchg   ecx,eax
  40e9a6:	mov    dh,0xa
  40e9a8:	and    cl,BYTE PTR [ebx+0x4933272c]
  40e9ae:	repnz inc edi
  40e9b0:	enter  0x4db0,0xd5
  40e9b4:	jecxz  0x40e983
  40e9b6:	daa    
  40e9b7:	push   edi
  40e9b8:	icebp  
  40e9b9:	mov    BYTE PTR [edi-0x82758a9],dl
  40e9bf:	test   eax,0x80eb3f27
  40e9c4:	pop    eax
  40e9c5:	data16 add BYTE PTR [edi],bl
  40e9c8:	(bad)  
  40e9c9:	leave  
  40e9ca:	dec    esi
  40e9cb:	cmp    eax,0xc87eefc0
  40e9d0:	and    eax,0x5e69c4ae
  40e9d5:	push   ebp
  40e9d6:	sub    edi,0xffffff89
  40e9d9:	or     eax,0xe0fb1a8f
  40e9de:	das    
  40e9df:	xchg   ecx,eax
  40e9e0:	shl    DWORD PTR [eax-0x1372c5b7],1
  40e9e6:	inc    ebx
  40e9e7:	mov    dl,0x4d
  40e9e9:	sbb    bh,BYTE PTR [esi+0x647de687]
  40e9ef:	pop    ss
  40e9f0:	inc    edx
  40e9f1:	loop   0x40e997
  40e9f3:	imul   ecx,DWORD PTR [ebx+0x7d],0x4ef9f60f
  40e9fa:	and    esi,0x41
  40e9fd:	cmp    ebp,esp
  40e9ff:	pop    edi
  40ea00:	pushw  0xd1ea
  40ea04:	dec    ebx
  40ea05:	call   0xf833:0x4f5cb7ed
  40ea0c:	ret    0xab07
  40ea0f:	add    al,BYTE PTR [ecx]
  40ea11:	inc    ecx
  40ea12:	cmp    BYTE PTR [ecx+0x4c2d3aa7],al
  40ea18:	push   esi
  40ea19:	aaa    
  40ea1a:	push   edx
  40ea1b:	mov    dl,0xad
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea1f:	dec    ebx
  40ea20:	mov    ah,0xc7
  40ea22:	daa    
  40ea23:	faddp  st(0),st
  40ea25:	pop    edi
  40ea26:	stos   DWORD PTR es:[edi],eax
  40ea27:	(bad)  
  40ea28:	in     al,0x4e
  40ea2a:	shl    BYTE PTR [edx],0x3b
  40ea2d:	cdq    
  40ea2e:	push   0x60
  40ea30:	lahf   
  40ea31:	dec    ebx
  40ea32:	xchg   edx,eax
  40ea33:	outs   dx,DWORD PTR ds:[esi]
  40ea34:	dec    esi
  40ea35:	sbb    bl,bl
  40ea37:	xor    DWORD PTR [ebx+0x8],esi
  40ea3a:	xor    eax,0x302d90a2
  40ea3f:	sbb    DWORD PTR [esi+0x31],ebp
  40ea42:	(bad)  
  40ea43:	repz inc ebp
  40ea45:	cmp    esp,edx
  40ea47:	pushf  
  40ea48:	pop    esi
  40ea49:	xchg   DWORD PTR [ebx-0x483dfc2d],esi
  40ea4f:	fst    DWORD PTR [edi-0x60acd7f7]
  40ea55:	std    
  40ea56:	and    al,0xf8
  40ea58:	cmp    BYTE PTR [ecx+eax*2],bh
  40ea5b:	jmp    0x40ea65
  40ea5d:	(bad)  
  40ea5e:	call   0x1cb2ada1
  40ea63:	mov    DWORD PTR [ebp-0x5715472f],eax
  40ea69:	dec    edx
  40ea6a:	test   BYTE PTR [edi+0xf],dl
  40ea6d:	cs in  eax,0xc2
  40ea70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea71:	xchg   edi,eax
  40ea72:	pop    ss
  40ea73:	aas    
  40ea74:	shl    DWORD PTR [esi+0x712e5fd],0x72
  40ea7b:	out    0x6d,eax
  40ea7d:	xchg   esp,eax
  40ea7e:	fmul   DWORD PTR [ecx-0x77]
  40ea81:	test   BYTE PTR [ecx+0x775daddf],ch
  40ea87:	cmc    
  40ea88:	sti    
  40ea89:	popf   
  40ea8a:	xor    esp,DWORD PTR [ebp-0x28]
  40ea8d:	cmp    esp,DWORD PTR ds:0xebf0bc2d
  40ea93:	(bad)  
  40ea94:	aaa    
  40ea95:	push   eax
  40ea96:	scas   eax,DWORD PTR es:[edi]
  40ea97:	xor    DWORD PTR [ecx],0xffffffc7
  40ea9a:	push   ebp
  40ea9b:	push   esp
  40ea9c:	xor    BYTE PTR [esi+0x9e074a3],dh
  40eaa2:	mov    eax,edi
  40eaa4:	mov    esi,0x9e1f4cc4
  40eaa9:	jbe    0x40eae2
  40eaab:	dec    ebx
  40eaac:	arpl   WORD PTR [esi],di
  40eaae:	xchg   BYTE PTR [eax-0x34],bh
  40eab1:	shl    BYTE PTR [eax+0x1508cc16],1
  40eab7:	jmp    0x40eaaa
  40eab9:	inc    esi
  40eaba:	cmp    BYTE PTR [ecx-0xc75da56],ah
  40eac0:	mov    edi,0x2ecdd31c
  40eac5:	ret    
  40eac6:	ja     0x40eb13
  40eac8:	mov    ds:0x55e93f57,al
  40eacd:	push   es
  40eace:	pusha  
  40eacf:	lock jle 0x40ea66
  40ead2:	repz jp 0x40eacc
  40ead5:	jl     0x40ea80
  40ead7:	(bad)  
  40ead8:	sub    eax,0x5878c124
  40eadd:	dec    esi
  40eade:	aad    0xd3
  40eae0:	test   eax,0x16104c77
  40eae5:	inc    ebx
  40eae6:	das    
  40eae7:	loope  0x40ead0
  40eae9:	nop
  40eaea:	or     edi,DWORD PTR [edi]
  40eaec:	cmp    eax,0x9ca43fd2
  40eaf1:	fisub  DWORD PTR [bp+di-0x6d]
  40eaf5:	sub    al,0x11
  40eaf7:	test   BYTE PTR [edi],0x41
  40eafa:	mov    al,0xee
  40eafc:	ror    DWORD PTR [ebp-0x24],cl
  40eaff:	or     BYTE PTR [eax+0x11f7794c],dl
  40eb05:	push   esi
  40eb06:	pushf  
  40eb07:	xchg   edx,eax
  40eb08:	aas    
  40eb09:	jmp    0x1d39:0xf908035d
  40eb10:	cmp    dl,al
  40eb12:	or     DWORD PTR [ebp+0x74c6b540],ecx
  40eb18:	lar    ebp,WORD PTR [edi-0x61]
  40eb1c:	pop    edi
  40eb1d:	dec    ebx
  40eb1e:	in     eax,dx
  40eb1f:	xor    ch,BYTE PTR [eax]
  40eb21:	loope  0x40eb18
  40eb23:	push   ecx
  40eb24:	xor    DWORD PTR [edi],esi
  40eb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb27:	(bad)  
  40eb28:	push   ds
  40eb29:	jns    0x40eb55
  40eb2b:	jb     0x40eb9c
  40eb2d:	push   edx
  40eb2e:	fdiv   QWORD PTR [ebx]
  40eb30:	mov    ebp,0x74858cc3
  40eb35:	xor    DWORD PTR [esi+ebp*2-0x43],0xffffff82
  40eb3a:	call   DWORD PTR [ebx-0x576e5e4b]
  40eb40:	push   esp
  40eb41:	test   BYTE PTR ds:0xbc0147cc,ch
  40eb47:	out    0x71,eax
  40eb49:	lock jae 0x40ebc6
  40eb4c:	aaa    
  40eb4d:	in     eax,0xcf
  40eb4f:	cmp    cl,BYTE PTR [ecx+0x6db3cb67]
  40eb55:	cmc    
  40eb56:	adc    al,0xdf
  40eb58:	int    0x48
  40eb5a:	xchg   edi,eax
  40eb5b:	dec    esi
  40eb5c:	xchg   esi,eax
  40eb5d:	sbb    al,0xdd
  40eb5f:	jg     0x40eae4
  40eb61:	push   edi
  40eb62:	retf   
  40eb63:	push   ss
  40eb64:	sti    
  40eb65:	mov    ah,0xb7
  40eb67:	repnz push edi
  40eb69:	and    BYTE PTR [ecx],ch
  40eb6b:	loopne 0x40eafb
  40eb6d:	push   esi
  40eb6e:	hlt    
  40eb6f:	mov    eax,0xd1b421ac
  40eb74:	retf   
  40eb75:	inc    ebx
  40eb76:	retf   
  40eb77:	xchg   esp,eax
  40eb78:	ret    0x152
  40eb7b:	in     eax,0x48
  40eb7d:	xor    ecx,esi
  40eb7f:	fdiv   st,st(0)
  40eb81:	dec    esp
  40eb82:	fwait
  40eb83:	shl    BYTE PTR [esi-0x6f],cl
  40eb86:	adc    edx,DWORD PTR [eax-0x399bd8a6]
  40eb8c:	int    0xe0
  40eb8e:	popf   
  40eb8f:	into   
  40eb90:	inc    edx
  40eb91:	or     al,0xdd
  40eb93:	xchg   ebp,eax
  40eb94:	and    eax,0x637f628c
  40eb99:	je     0x40ec06
  40eb9b:	retf   
  40eb9c:	xchg   edx,eax
  40eb9d:	sbb    BYTE PTR [esp+ecx*1-0x16],ch
  40eba1:	sbb    BYTE PTR [esi],al
  40eba3:	scas   eax,DWORD PTR es:[edi]
  40eba4:	out    dx,eax
  40eba5:	dec    edx
  40eba6:	out    dx,al
  40eba7:	lea    eax,[ecx-0x4d]
  40ebaa:	out    dx,eax
  40ebab:	pop    edx
  40ebac:	push   0x50299f61
  40ebb1:	fiadd  WORD PTR [esp+edx*2-0x53]
  40ebb5:	mov    ss,edi
  40ebb7:	sar    BYTE PTR [ecx],cl
  40ebb9:	dec    esp
  40ebba:	(bad)  
  40ebbb:	shl    BYTE PTR ds:0x6239f4a9,1
  40ebc1:	cmc    
  40ebc2:	imul   esp,DWORD PTR [edi+0x62b4718d],0xffffffb9
  40ebc9:	mov    bh,BYTE PTR [edx]
  40ebcb:	hlt    
  40ebcc:	xor    al,0x7e
  40ebce:	aas    
  40ebcf:	cwde   
  40ebd0:	jnp    0x40ebbc
  40ebd2:	int    0xa0
  40ebd4:	js     0x40eb92
  40ebd6:	mov    ds:0x9f2045d9,al
  40ebdb:	mov    ah,0xa
  40ebdd:	in     al,dx
  40ebde:	and    DWORD PTR [ebx],edx
  40ebe0:	lock and DWORD PTR [ecx-0x287579cd],edx
  40ebe7:	or     al,dh
  40ebe9:	popa   
  40ebea:	cld    
  40ebeb:	int    0xca
  40ebed:	cmp    al,al
  40ebef:	hlt    
  40ebf0:	or     eax,0x31fdede7
  40ebf5:	bound  ebp,QWORD PTR [edx]
  40ebf7:	lods   eax,DWORD PTR ds:[esi]
  40ebf8:	inc    ebp
  40ebf9:	dec    esi
  40ebfa:	sub    edx,DWORD PTR [ebx-0x6c2452dc]
  40ec00:	xor    ebp,eax
  40ec02:	(bad)  
  40ec03:	cmp    DWORD PTR [edx+0x7f],edi
  40ec06:	ret    
  40ec07:	cmp    ax,0x84b3
  40ec0b:	sub    eax,0xfc3acd13
  40ec10:	es into 
  40ec12:	pop    ebp
  40ec13:	cmp    DWORD PTR [ebx+ebx*4+0x207e0f3c],ebp
  40ec1a:	fdivr  QWORD PTR [esp+edi*2+0x3b]
  40ec1e:	mov    esp,0x8c40eb3d
  40ec23:	sbb    eax,0x391332c8
  40ec28:	add    bh,BYTE PTR [edx]
  40ec2a:	pop    ebp
  40ec2b:	pop    es
  40ec2c:	fldcw  WORD PTR [ebx+ebx*8-0x20]
  40ec30:	fisttp QWORD PTR [ebx]
  40ec32:	and    al,0x29
  40ec34:	arpl   WORD PTR [ecx],sp
  40ec36:	test   bl,bh
  40ec38:	sub    dh,BYTE PTR [ecx+0x4d]
  40ec3b:	test   ch,cl
  40ec3d:	push   esi
  40ec3e:	jo     0x40ec51
  40ec40:	pop    ds
  40ec41:	xchg   ecx,eax
  40ec42:	fidivr WORD PTR [ebp+0x3e]
  40ec45:	(bad)  
  40ec46:	stc    
  40ec47:	or     ebx,DWORD PTR [ecx-0x1cb4af59]
  40ec4d:	shr    DWORD PTR [edx],0xbb
  40ec50:	sahf   
  40ec51:	sbb    DWORD PTR [edi-0x2f],ebp
  40ec54:	rol    DWORD PTR [edi-0x12b48a6d],1
  40ec5a:	outs   dx,DWORD PTR ds:[esi]
  40ec5b:	adc    eax,0x57cbf4f1
  40ec60:	jno    0x40ecc5
  40ec62:	mov    ch,0x4c
  40ec64:	popa   
  40ec65:	faddp  st(0),st
  40ec67:	dec    esi
  40ec68:	xor    ebp,DWORD PTR [esi]
  40ec6a:	mov    ch,0x1
  40ec6c:	rcl    DWORD PTR [ecx+0x28636fda],0xab
  40ec73:	in     al,0xc1
  40ec75:	dec    esi
  40ec76:	cmp    al,BYTE PTR [eax]
  40ec78:	sti    
  40ec79:	nop
  40ec7a:	aas    
  40ec7b:	popf   
  40ec7c:	scas   al,BYTE PTR es:[edi]
  40ec7d:	jns    0x40ece4
  40ec7f:	clc    
  40ec80:	cmp    al,0xe
  40ec82:	mov    ds:0xda126498,eax
  40ec87:	sbb    al,BYTE PTR ds:0x817c5d4b
  40ec8d:	in     al,0xb9
  40ec8f:	out    dx,al
  40ec90:	inc    esp
  40ec91:	add    ebx,DWORD PTR [edi-0x6ad637d2]
  40ec97:	int3   
  40ec98:	mov    ah,ch
  40ec9a:	out    dx,eax
  40ec9b:	mov    edi,0x7dca4b19
  40eca0:	int    0x86
  40eca2:	push   esp
  40eca3:	repnz aas 
  40eca5:	xor    al,0x44
  40eca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eca8:	pop    ss
  40eca9:	lahf   
  40ecaa:	fs jbe 0x40ec87
  40ecad:	repnz in al,dx
  40ecaf:	loop   0x40eca6
  40ecb1:	fistp  DWORD PTR [eax]
  40ecb3:	inc    ecx
  40ecb4:	jle    0x40eca0
  40ecb6:	pop    edx
  40ecb7:	div    DWORD PTR [eax]
  40ecb9:	cmp    ecx,DWORD PTR [ecx]
  40ecbb:	adc    BYTE PTR [ebx-0x30],dh
  40ecbe:	mov    esp,0xa959d652
  40ecc3:	mov    BYTE PTR [ecx],bh
  40ecc5:	fmul   QWORD PTR [edx-0xc]
  40ecc8:	cmp    eax,0x14d507c5
  40eccd:	dec    esi
  40ecce:	sub    BYTE PTR [edi+esi*8+0x54],cl
  40ecd2:	xchg   esp,eax
  40ecd3:	jge    0x40ed50
  40ecd5:	aad    0x43
  40ecd7:	jne    0x40ec84
  40ecd9:	cmp    al,0x84
  40ecdb:	(bad)  
  40ecdc:	mov    edi,0x4c3261f1
  40ece1:	shl    BYTE PTR [ebp+0x445e1e80],1
  40ece7:	ins    DWORD PTR es:[edi],dx
  40ece8:	push   ebx
  40ece9:	xor    DWORD PTR [esp+ebx*4],ebp
  40ecec:	and    DWORD PTR [edx+0x23c7445d],edi
  40ecf2:	and    BYTE PTR gs:[ecx-0x142425a0],bl
  40ecf9:	and    BYTE PTR [ecx-0x64eb3a52],dl
  40ecff:	xor    DWORD PTR [esi],edi
  40ed01:	mov    es,WORD PTR [ebx]
  40ed03:	js     0x40ed46
  40ed05:	pop    ds
  40ed06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed07:	push   eax
  40ed08:	add    al,0xed
  40ed0a:	rcl    eax,0x35
  40ed0d:	lock pop ebx
  40ed0f:	int3   
  40ed10:	aam    0x3c
  40ed12:	(bad)  
  40ed13:	test   edi,0x83fcc30b
  40ed19:	jmp    0x7386f0a3
  40ed1e:	adc    esi,ebp
  40ed20:	aam    0x85
  40ed22:	scas   al,BYTE PTR es:[edi]
  40ed23:	pop    edi
  40ed24:	lds    edi,FWORD PTR [edx+0x13]
  40ed27:	xchg   esi,eax
  40ed28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed29:	shr    DWORD PTR [eax+eax*8+0x2d],1
  40ed2d:	mul    DWORD PTR [ebx+0x1a]
  40ed30:	mov    al,BYTE PTR [eax]
  40ed32:	fs mov ebp,0xce70de7c
  40ed38:	fimul  WORD PTR [esi]
  40ed3a:	push   es
  40ed3b:	dec    esi
  40ed3c:	lea    esi,[esp+ebx*1-0x75]
  40ed40:	sti    
  40ed41:	dec    eax
  40ed42:	fidivr DWORD PTR [esi]
  40ed44:	cmp    al,0x25
  40ed46:	into   
  40ed47:	and    BYTE PTR ds:0xec1005b2,ch
  40ed4d:	mov    ds:0xe536be06,eax
  40ed52:	pop    eax
  40ed53:	ror    ebx,cl
  40ed55:	inc    ebp
  40ed56:	test   DWORD PTR [edi+0x31606fee],eax
  40ed5c:	(bad)  
  40ed5d:	dec    ebp
  40ed5e:	and    bh,BYTE PTR [ebp+ecx*2-0x2a2f2771]
  40ed65:	hlt    
  40ed66:	jl     0x40ed46
  40ed68:	imul   ebp,DWORD PTR [edx+ebx*4-0x6d],0xfffffffa
  40ed6d:	mov    edi,0xd7074168
  40ed72:	jmp    0xcb37:0xe654b3d1
  40ed79:	enter  0x129,0x92
  40ed7d:	ret    0x5b15
  40ed80:	add    esi,DWORD PTR [ebp-0x2a]
  40ed83:	pop    eax
  40ed84:	jecxz  0x40edc8
  40ed86:	jns    0x40edd7
  40ed88:	xor    eax,0xc6eff411
  40ed8d:	mov    ch,BYTE PTR fs:[eax]
  40ed90:	push   cs
  40ed91:	adc    DWORD PTR [eax-0x2b],0xffffffe8
  40ed95:	adc    eax,0x4092470a
  40ed9a:	cmp    DWORD PTR [ebp+0x4a043b6],ebp
  40eda0:	add    esi,ecx
  40eda2:	or     eax,0xe4fbf9b2
  40eda7:	xchg   edx,eax
  40eda8:	jp     0x40ed89
  40edaa:	push   0xffffffab
  40edac:	push   0x28748038
  40edb1:	sti    
  40edb2:	mov    bh,0x7a
  40edb4:	cli    
  40edb5:	das    
  40edb6:	mov    gs,edx
  40edb8:	retf   0xccc9
  40edbb:	adc    esp,DWORD PTR [edi+0x3461b618]
  40edc1:	fadd   QWORD PTR [esi+0x5e2261c0]
  40edc7:	cmp    esi,DWORD PTR [ecx]
  40edc9:	fs mov ebp,0xe297c845
  40edcf:	adc    al,BYTE PTR [edx+0x5645e56f]
  40edd5:	ret    
  40edd6:	jb     0x40ee20
  40edd8:	lds    edx,FWORD PTR [ebx+0x60]
  40eddb:	or     BYTE PTR [esi+0x50708a6c],dl
  40ede1:	xchg   edi,eax
  40ede2:	sub    BYTE PTR [ebp+ebp*1+0x2],ah
  40ede6:	stc    
  40ede7:	in     eax,0x17
  40ede9:	out    dx,al
  40edea:	nop
  40edeb:	loopne 0x40edb7
  40eded:	mov    esp,0x40a93b24
  40edf2:	shr    BYTE PTR [eax],0x67
  40edf5:	sbb    al,BYTE PTR [ebx-0xe57531a]
  40edfb:	xchg   DWORD PTR [edx],edx
  40edfd:	nop
  40edfe:	je     0x40ee2a
  40ee00:	nop
  40ee01:	(bad)  
  40ee02:	sbb    DWORD PTR [edi+0x75],ebx
  40ee05:	and    DWORD PTR [ebx],ebp
  40ee07:	(bad)  
  40ee08:	retf   0x78f0
  40ee0b:	adc    ecx,DWORD PTR [eax-0x3f]
  40ee0e:	inc    BYTE PTR [eax+ecx*8-0x213a358b]
  40ee15:	cld    
  40ee16:	loope  0x40ee0b
  40ee18:	adc    DWORD PTR [edi-0x20c5a91b],0x8692b4b4
  40ee22:	dec    eax
  40ee23:	push   0x7a27eb8e
  40ee28:	and    edi,DWORD PTR [ebx]
  40ee2a:	outs   dx,DWORD PTR ds:[esi]
  40ee2b:	jmp    0xd2a0beb2
  40ee30:	arpl   WORD PTR [edi+0xa4b546c],bp
  40ee36:	xchg   edx,eax
  40ee37:	loopne 0x40edfe
  40ee39:	in     eax,0x7d
  40ee3b:	mov    dh,0x92
  40ee3d:	sbb    dl,BYTE PTR [ecx]
  40ee3f:	mov    bh,0x2
  40ee41:	aas    
  40ee42:	dec    edi
  40ee43:	scas   eax,DWORD PTR es:[edi]
  40ee44:	xchg   ecx,eax
  40ee45:	ret    0x21bf
  40ee48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee49:	dec    edx
  40ee4a:	push   es
  40ee4b:	cld    
  40ee4c:	shl    DWORD PTR [edi+0x20],1
  40ee4f:	test   eax,0xf4569129
  40ee54:	(bad)
  40ee57:	xchg   esp,eax
  40ee58:	add    DWORD PTR [edx],eax
  40ee5a:	ror    edi,0x67
  40ee5d:	mov    ah,0x6b
  40ee5f:	mov    cl,0x62
  40ee61:	inc    eax
  40ee62:	je     0x40eeda
  40ee64:	lods   eax,DWORD PTR ds:[esi]
  40ee65:	jb     0x40ee67
  40ee67:	iret   
  40ee68:	mov    al,0x24
  40ee6a:	cmc    
  40ee6b:	in     eax,dx
  40ee6c:	jmp    0x5b9e:0xc1ffc35d
  40ee73:	sbb    BYTE PTR [esi+0x52cac96a],ah
  40ee79:	pop    esi
  40ee7a:	mov    dl,0x88
  40ee7c:	cmp    al,0xf2
  40ee7e:	ins    BYTE PTR es:[edi],dx
  40ee7f:	jmp    0xb248:0x1041221c
  40ee86:	pop    ebp
  40ee87:	fnstenv [ecx]
  40ee89:	cdq    
  40ee8a:	pop    edi
  40ee8b:	repz or BYTE PTR [edi],al
  40ee8e:	adc    ecx,DWORD PTR [ecx+0x707b4828]
  40ee94:	dec    ebp
  40ee95:	add    al,0x36
  40ee97:	mov    esp,0x71a3adc2
  40ee9c:	or     ah,0x75
  40ee9f:	test   al,0x33
  40eea1:	cmp    DWORD PTR [ebx+ebp*2],ebx
  40eea4:	imul   esi,DWORD PTR [esi+0x1d7d39de],0x72
  40eeab:	sub    DWORD PTR [ebx+0x6b],esi
  40eeae:	add    BYTE PTR [ecx-0x67],0x3c
  40eeb2:	mov    esi,0x3cbad7ed
  40eeb7:	fadd   st,st(0)
  40eeb9:	pop    esi
  40eeba:	mov    bl,0x3e
  40eebc:	inc    ebp
  40eebd:	sahf   
  40eebe:	jns    0x40eee8
  40eec0:	mov    edi,0xffe42732
  40eec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eec6:	clc    
  40eec7:	inc    esp
  40eec8:	leave  
  40eec9:	loope  0x40ee7d
  40eecb:	add    ah,BYTE PTR [esi]
  40eecd:	(bad)
  40eed0:	fisttp DWORD PTR [ecx+0x12ff27ae]
  40eed6:	pusha  
  40eed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed8:	pop    ebp
  40eed9:	mov    dh,0x1d
  40eedb:	mov    ch,0x88
  40eedd:	mov    esp,DWORD PTR [edi-0x58f4fcc3]
  40eee3:	mov    ebx,0x803443ec
  40eee8:	loop   0x40ef4e
  40eeea:	(bad)  
  40eeeb:	mov    ds:0x9b194ef7,eax
  40eef0:	cld    
  40eef1:	mov    edi,DWORD PTR [esi+esi*4-0x46ebae40]
  40eef8:	test   BYTE PTR [ebx],dl
  40eefa:	stos   DWORD PTR es:[edi],eax
  40eefb:	xor    eax,0x4de77aab
  40ef00:	sti    
  40ef01:	mov    eax,ebx
  40ef03:	add    eax,0x53b64d86
  40ef08:	dec    edi
  40ef09:	sub    ebx,ecx
  40ef0b:	cmc    
  40ef0c:	cmp    ah,ah
  40ef0e:	je     0x40eebf
  40ef10:	pop    eax
  40ef11:	jge    0x40ef62
  40ef13:	mov    ebp,0xf030a04f
  40ef18:	test   DWORD PTR [edi+0x3cd3cfc4],esi
  40ef1e:	inc    esi
  40ef1f:	add    ch,BYTE PTR [ecx]
  40ef21:	dec    ebx
  40ef22:	ins    DWORD PTR es:[edi],dx
  40ef23:	jae    0x40eebe
  40ef25:	sbb    ch,bl
  40ef27:	jecxz  0x40ef8a
  40ef29:	adc    ebp,DWORD PTR [edi-0x2e438d4f]
  40ef2f:	loope  0x40eed4
  40ef31:	cmc    
  40ef32:	xchg   edx,eax
  40ef33:	push   ecx
  40ef34:	fwait
  40ef35:	test   al,0xc4
  40ef37:	in     al,dx
  40ef38:	iret   
  40ef39:	push   ecx
  40ef3a:	mov    esp,0x3014ed2f
  40ef3f:	mov    dh,0xcd
  40ef41:	and    DWORD PTR [ebx-0x1a1c728c],esi
  40ef47:	and    bh,dh
  40ef49:	shr    BYTE PTR [esi],0xf6
  40ef4c:	adc    al,0xd8
  40ef4e:	ror    BYTE PTR [ebp+0x5bbcbc2b],0x7c
  40ef55:	imul   edi,DWORD PTR [edx],0x32
  40ef58:	cmp    DWORD PTR [eax],edi
  40ef5a:	and    ebx,edx
  40ef5c:	(bad)  [ebx]
  40ef5e:	or     ebx,DWORD PTR [edi]
  40ef60:	add    al,0xb5
  40ef62:	xchg   esp,eax
  40ef63:	repz xchg esp,eax
  40ef65:	inc    eax
  40ef66:	mov    ?,WORD PTR [eax+0x1a452bc4]
  40ef6c:	arpl   WORD PTR [eax-0x4a],bx
  40ef6f:	leave  
  40ef70:	jge    0x40efa3
  40ef72:	lahf   
  40ef73:	cmp    BYTE PTR [edx+0xd4d0260],dh
  40ef79:	dec    edi
  40ef7a:	mov    ds:0x18ac6d99,al
  40ef7f:	mov    BYTE PTR [esi],al
  40ef81:	cmp    esi,DWORD PTR [edx-0x69]
  40ef84:	int    0x8e
  40ef86:	mov    al,0xff
  40ef88:	shr    edx,cl
  40ef8a:	fdiv   st(0),st
  40ef8c:	stc    
  40ef8d:	mov    dh,0x33
  40ef8f:	or     edx,esp
  40ef91:	addr16 mov edi,0x7d9fc5e2
  40ef97:	add    al,cl
  40ef99:	out    dx,eax
  40ef9a:	imul   ebp,eax,0xffffff95
  40ef9d:	jecxz  0x40efca
  40ef9f:	ret    0x150c
  40efa2:	stos   DWORD PTR es:[edi],eax
  40efa3:	sub    eax,0x240b6d32
  40efa8:	pusha  
  40efa9:	jnp    0x40ef6c
  40efab:	mov    ah,0xe2
  40efad:	pop    esi
  40efae:	in     al,dx
  40efaf:	or     al,0xb0
  40efb1:	mov    al,BYTE PTR fs:[ebp-0x1]
  40efb5:	and    DWORD PTR ds:0x429018,0x0
  40efbf:	xor    ecx,ecx
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0x9
  40f695:	dec    esp
  40f696:	fisubr WORD PTR [esi+0x7a7aca87]
  40f69c:	add    DWORD PTR [edi+0x7a],ebx
  40f69f:	jp     0x40f69d
  40f6a1:	scas   eax,DWORD PTR es:[edi]
  40f6a2:	aad    0x51
  40f6a4:	jmp    0x39a9:0xe526949b
  40f6ab:	loope  0x40f643
  40f6ad:	mov    esi,0x2c2ddb79
  40f6b2:	cs mov edi,0x8711fb6e
  40f6b8:	adc    ecx,DWORD PTR [ecx+0x5a]
  40f6bb:	sbb    eax,ebx
  40f6bd:	sub    DWORD PTR [esi-0x79],eax
  40f6c0:	(bad)  
  40f6c1:	les    esi,FWORD PTR ds:[edx-0x18]
  40f6c5:	popf   
  40f6c6:	aaa    
  40f6c7:	jl     0x40f747
  40f6c9:	mov    ebx,0x54c033c3
  40f6ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6cf:	push   edx
  40f6d0:	rcl    BYTE PTR [eax],0x6e
  40f6d3:	iret   
  40f6d4:	push   0xffffffb7
  40f6d6:	shl    DWORD PTR [edx+0x8c28c6d],1
  40f6dc:	out    0x69,al
  40f6de:	sbb    ah,BYTE PTR [esi]
  40f6e0:	add    edx,DWORD PTR [ecx-0x65]
  40f6e3:	push   ss
  40f6e4:	pop    esi
  40f6e5:	fdiv   QWORD PTR ds:0xb0a16591
  40f6eb:	std    
  40f6ec:	pushf  
  40f6ed:	(bad)  
  40f6ee:	ja     0x40f709
  40f6f0:	sub    BYTE PTR [eax+0x11d1f579],bh
  40f6f6:	pop    edi
  40f6f7:	ja     0x40f6b8
  40f6f9:	mov    WORD PTR [ebx+edi*4],es
  40f6fc:	lds    ebp,FWORD PTR [esi+0x24]
  40f6ff:	imul   eax,esp,0xafcecbaa
  40f705:	add    eax,0x92540d2e
  40f70a:	xor    al,0xb7
  40f70c:	cmp    eax,0x2725a04
  40f711:	push   ss
  40f712:	jns    0x40f744
  40f714:	push   esp
  40f715:	cmp    esp,DWORD PTR [ebx+eax*4-0x8]
  40f719:	push   ds
  40f71a:	jge    0x40f702
  40f71c:	sbb    al,0x6f
  40f71e:	fidivr DWORD PTR [esi]
  40f720:	popf   
  40f721:	sar    eax,cl
  40f723:	inc    ebx
  40f724:	or     ecx,DWORD PTR [edi]
  40f726:	jmp    0x48d0:0x360398aa
  40f72d:	out    0xc3,eax
  40f72f:	jnp    0x40f6d8
  40f731:	inc    esp
  40f732:	(bad)  
  40f733:	xchg   ecx,eax
  40f734:	mov    esp,0x61f6dab0
  40f739:	in     eax,0x6
  40f73b:	inc    esi
  40f73c:	arpl   WORD PTR [edx-0x22],si
  40f73f:	inc    edx
  40f740:	mov    edx,0xa2f39c07
  40f745:	xchg   edi,eax
  40f746:	inc    esp
  40f747:	stos   BYTE PTR es:[edi],al
  40f748:	int    0x86
  40f74a:	repnz enter 0x8225,0xa9
  40f74f:	daa    
  40f750:	xor    DWORD PTR [edi+0x6963d134],edi
  40f756:	in     eax,0x68
  40f758:	out    0x7,al
  40f75a:	test   al,0x4f
  40f75c:	mov    eax,0x706ee5b9
  40f761:	jge    0x40f714
  40f763:	sbb    ah,BYTE PTR [edi]
  40f765:	call   0xa40d58b3
  40f76a:	sub    al,0xac
  40f76c:	ret    
  40f76d:	mov    esp,0x4a0e248
  40f772:	xor    eax,0xd8e7e61
  40f777:	xor    dl,bl
  40f779:	cmp    ebx,ebp
  40f77b:	fwait
  40f77c:	pop    gs
  40f77e:	hlt    
  40f77f:	loopne 0x40f702
  40f781:	(bad)  
  40f782:	sbb    BYTE PTR [eax+eiz*8-0x69],bl
  40f786:	icebp  
  40f787:	add    DWORD PTR [edi+0x3],0x43
  40f78b:	imul   eax,ebp,0xffffffaf
  40f78e:	jmp    0x5a70:0x5d5cb996
  40f795:	test   eax,0x64d5ea84
  40f79a:	pop    esi
  40f79b:	sbb    al,0xfb
  40f79d:	jg     0x40f747
  40f79f:	test   al,0x7b
  40f7a1:	(bad)  
  40f7a2:	adc    al,0x3d
  40f7a4:	dec    edi
  40f7a5:	mov    BYTE PTR [edi+eax*2-0x1],ch
  40f7a9:	ret    
  40f7aa:	mov    ds:0x6a3b2d3e,al
  40f7af:	jns    0x40f79e
  40f7b1:	adc    dl,BYTE PTR [edx-0x7b3380c9]
  40f7b7:	mov    bh,0x19
  40f7b9:	sbb    edi,eax
  40f7bb:	stos   BYTE PTR es:[edi],al
  40f7bc:	rcl    esi,cl
  40f7be:	iret   
  40f7bf:	push   esi
  40f7c0:	adc    eax,0x474506b0
  40f7c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7c6:	adc    al,0xd3
  40f7c8:	pop    edi
  40f7c9:	pop    esi
  40f7ca:	popa   
  40f7cb:	inc    ebx
  40f7cc:	push   ds
  40f7cd:	push   ebp
  40f7ce:	sbb    dl,ah
  40f7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7d1:	test   eax,0xf5da4080
  40f7d6:	dec    eax
  40f7d7:	sbb    al,0x79
  40f7d9:	jae    0x40f78a
  40f7db:	pop    esp
  40f7dc:	cwde   
  40f7dd:	lock xor BYTE PTR [edi+0xc],bh
  40f7e1:	ror    DWORD PTR ds:0x67a044c9,cl
  40f7e7:	jl     0x40f7ac
  40f7e9:	mov    esp,0x478449a5
  40f7ee:	in     eax,0x9e
  40f7f0:	fucom  st(3)
  40f7f2:	out    dx,al
  40f7f3:	fcos   
  40f7f5:	mov    ah,0xb4
  40f7f7:	cld    
  40f7f8:	cmp    eax,0xb82a533a
  40f7fd:	out    dx,eax
  40f7fe:	je     0x40f837
  40f800:	out    dx,eax
  40f801:	je     0x40f7bc
  40f803:	ror    DWORD PTR [ebx+0xf],cl
  40f806:	lahf   
  40f807:	ins    BYTE PTR es:[edi],dx
  40f808:	pop    ds
  40f809:	pop    ecx
  40f80a:	bound  esi,QWORD PTR [edi+0x33]
  40f80d:	ret    
  40f80e:	lock xor BYTE PTR [ecx-0x63],ch
  40f812:	gs mov cl,0x45
  40f815:	mov    ds:0x6a7c9567,al
  40f81a:	push   ebx
  40f81b:	pop    ebx
  40f81c:	mov    ch,0x9e
  40f81e:	mov    esi,0x267a5437
  40f823:	push   esi
  40f824:	mov    ch,0x1f
  40f826:	fwait
  40f827:	cli    
  40f828:	add    edx,ecx
  40f82a:	inc    esp
  40f82b:	mov    ah,0xde
  40f82d:	pop    ebp
  40f82e:	mov    edi,0x2bf70905
  40f833:	xor    eax,0xa23dd2c3
  40f838:	inc    ecx
  40f839:	dec    edx
  40f83a:	jmp    0x40f7f0
  40f83c:	push   ecx
  40f83d:	in     al,dx
  40f83e:	xor    eax,ebp
  40f840:	add    eax,0x773b6c9f
  40f845:	(bad)  
  40f846:	mov    ebx,DWORD PTR [ecx+0x4892cc75]
  40f84c:	mov    ebx,0xe4edaa35
  40f851:	mov    eax,ds:0x65782c39
  40f856:	jae    0x40f845
  40f858:	jmp    0x40f87d
  40f85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f85b:	cld    
  40f85c:	lea    edx,[ecx+0x621ede06]
  40f862:	sbb    al,0x17
  40f864:	mov    edi,0xf090095f
  40f869:	pop    edx
  40f86a:	icebp  
  40f86b:	sbb    bl,dl
  40f86d:	call   0xba23:0xe2565b63
  40f874:	push   0xff708d17
  40f879:	mov    ebp,0x86164294
  40f87f:	xor    ebp,edi
  40f881:	or     DWORD PTR ds:0x354ae2b0,ebx
  40f887:	mov    dh,cl
  40f889:	call   0x17ed:0xb4105729
  40f890:	retf   
  40f891:	inc    eax
  40f892:	mov    cl,BYTE PTR [esi+0x68]
  40f895:	cmp    al,0x3e
  40f897:	mov    eax,ebx
  40f899:	and    DWORD PTR [esi+0x672a4c25],edi
  40f89f:	mov    cl,0x2f
  40f8a1:	cmp    eax,0x39d641c0
  40f8a6:	icebp  
  40f8a7:	daa    
  40f8a8:	jp     0x40f8e2
  40f8aa:	(bad)
  40f8ad:	fs shr esi,1
  40f8b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8b1:	jmp    0x3fe4:0xd303f748
  40f8b8:	mov    eax,ds:0xd3ebfe22
  40f8bd:	dec    eax
  40f8be:	mov    bl,0xaa
  40f8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c1:	btr    DWORD PTR [esi-0x6f],edx
  40f8c5:	loope  0x40f923
  40f8c7:	dec    ebp
  40f8c8:	cld    
  40f8c9:	lock adc bl,0xd7
  40f8cd:	iret   
  40f8ce:	xor    esi,DWORD PTR [edi+ebp*8]
  40f8d1:	sbb    al,0x51
  40f8d3:	inc    esp
  40f8d4:	rcl    BYTE PTR [eax+0x4c21be0c],cl
  40f8da:	jge    0x40f94a
  40f8dc:	jns    0x40f946
  40f8de:	jbe    0x40f931
  40f8e0:	sub    eax,0x5f46e66b
  40f8e5:	sti    
  40f8e6:	mov    bh,0x60
  40f8e8:	sub    eax,0xf765c8af
  40f8ed:	cmp    al,0xcb
  40f8ef:	adc    ebx,DWORD PTR [esi+eax*2+0x7d]
  40f8f3:	adc    eax,0xf8132b66
  40f8f8:	cld    
  40f8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8fa:	or     eax,0x42ec8a84
  40f8ff:	sub    eax,0x7d530746
  40f904:	shr    BYTE PTR [edx-0x134c04b1],cl
  40f90a:	add    ebp,ebp
  40f90c:	popa   
  40f90d:	in     al,0x4c
  40f90f:	cmp    eax,DWORD PTR [edi]
  40f911:	pop    ecx
  40f912:	gs (bad) 
  40f914:	fmul   DWORD PTR [ebx]
  40f916:	push   0xffffffdb
  40f918:	jp     0x40f959
  40f91a:	scas   eax,DWORD PTR es:[edi]
  40f91b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f91c:	mov    al,ds:0x9d4650f6
  40f921:	inc    ecx
  40f922:	(bad)  
  40f923:	hlt    
  40f924:	pop    ecx
  40f925:	mov    ch,0x7c
  40f927:	cmp    al,0xf1
  40f929:	xchg   ebx,eax
  40f92a:	push   es
  40f92b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f92c:	mov    esp,0xff10a867
  40f931:	push   ds
  40f932:	push   ecx
  40f933:	or     al,ch
  40f935:	and    al,0x5d
  40f937:	or     al,BYTE PTR [ebp-0x2a53854]
  40f93d:	lea    esi,[esi+ebp*1-0x15a9a3a]
  40f944:	pop    ecx
  40f945:	xchg   ebx,eax
  40f946:	dec    ebx
  40f947:	(bad)  
  40f948:	loope  0x40f8dd
  40f94a:	add    DWORD PTR [esi],esp
  40f94c:	pop    eax
  40f94d:	mov    eax,0x5c438c8a
  40f952:	enter  0x247,0x0
  40f956:	(bad)  
  40f957:	popa   
  40f958:	js     0x40f92f
  40f95a:	add    al,0x4f
  40f95c:	clc    
  40f95d:	pop    eax
  40f95e:	jbe    0x40f9a6
  40f960:	or     al,0xa2
  40f962:	xchg   DWORD PTR [edx-0x70],edi
  40f965:	stc    
  40f966:	add    dl,ah
  40f968:	push   ebp
  40f969:	mov    esp,0x2f0be4c7
  40f96e:	mov    ch,dl
  40f970:	xchg   esp,eax
  40f971:	lea    ebx,[esi]
  40f973:	push   ss
  40f974:	sbb    BYTE PTR [edi+edx*1],bh
  40f977:	xchg   BYTE PTR [eax+0x4460a618],ch
  40f97d:	ret    
  40f97e:	jae    0x40f9c2
  40f980:	adc    bh,al
  40f982:	cmp    ebx,DWORD PTR [eax-0x39]
  40f985:	fs dec esi
  40f987:	pop    edx
  40f988:	sbb    DWORD PTR [eax+edi*8+0x2f],edx
  40f98c:	adc    al,0x6d
  40f98e:	cmp    DWORD PTR [edi+0x68],ecx
  40f991:	push   ebx
  40f992:	cs push ebx
  40f994:	mov    esp,0x71e1872f
  40f999:	popf   
  40f99a:	ret    
  40f99b:	aad    0x2c
  40f99d:	adc    al,0x9b
  40f99f:	mov    ecx,0x67014319
  40f9a4:	mov    eax,DWORD PTR [edx-0x70cab893]
  40f9aa:	jmp    0x7cac3921
  40f9af:	pop    edx
  40f9b0:	call   0xd647:0x499d6b76
  40f9b7:	sub    al,0x4b
  40f9b9:	in     eax,0xb8
  40f9bb:	hlt    
  40f9bc:	inc    eax
  40f9bd:	aaa    
  40f9be:	cmp    eax,0x546774c0
  40f9c3:	jl     0x40fa0c
  40f9c5:	cmp    DWORD PTR [esi+eax*4+0x1c],edx
  40f9c9:	pop    ds
  40f9ca:	scas   eax,DWORD PTR es:[edi]
  40f9cb:	xor    esp,edi
  40f9cd:	pop    ebp
  40f9ce:	add    edx,DWORD PTR [edx]
  40f9d0:	arpl   WORD PTR [ebx],sp
  40f9d2:	add    ebx,DWORD PTR [ebx+0x28]
  40f9d5:	xor    DWORD PTR [eax+0x5c77e3eb],ebp
  40f9db:	popa   
  40f9dc:	inc    edx
  40f9dd:	fidivr WORD PTR [edx+esi*4+0x61299f3]
  40f9e4:	mov    ebp,0x9dd14c9e
  40f9e9:	dec    ebp
  40f9ea:	cmp    DWORD PTR [ebx*4+0x21c1e418],0x26378b7
  40f9f5:	add    DWORD PTR ds:0xee251b81,0x286c542a
  40f9ff:	sbb    cl,BYTE PTR [edx]
  40fa01:	push   ecx
  40fa02:	nop
  40fa03:	mov    dh,0x2d
  40fa05:	dec    eax
  40fa06:	and    eax,0x2c0498fa
  40fa0b:	cmp    ebp,DWORD PTR [edx]
  40fa0d:	adc    al,0x69
  40fa0f:	xor    edx,esi
  40fa11:	sub    al,0xec
  40fa13:	lods   eax,DWORD PTR ds:[esi]
  40fa14:	sub    eax,0x57c6bd5d
  40fa19:	sub    eax,DWORD PTR [bx+si]
  40fa1c:	pop    esi
  40fa1d:	mov    ecx,0xe083d5db
  40fa22:	xchg   edi,eax
  40fa23:	mov    edi,0x61179325
  40fa28:	pop    es
  40fa29:	scas   al,BYTE PTR es:[edi]
  40fa2a:	in     eax,0xe7
  40fa2c:	das    
  40fa2d:	daa    
  40fa2e:	or     eax,0xae593adf
  40fa33:	(bad)  
  40fa34:	scas   al,BYTE PTR es:[edi]
  40fa35:	and    cl,BYTE PTR [esi-0x3a]
  40fa38:	or     eax,0x4a319905
  40fa3d:	stos   DWORD PTR es:[edi],eax
  40fa3e:	setbe  bl
  40fa41:	mov    WORD PTR [edi+ecx*1+0x19],?
  40fa45:	adc    al,0xa6
  40fa47:	cld    
  40fa48:	ins    DWORD PTR es:[edi],dx
  40fa49:	sbb    cl,BYTE PTR [edi+0x69df6546]
  40fa4f:	push   edx
  40fa50:	xor    dh,BYTE PTR [ebx-0x16310110]
  40fa56:	jmp    0x40fa90
  40fa58:	inc    esi
  40fa59:	jb     0x40fa35
  40fa5b:	cmp    bl,dh
  40fa5d:	cdq    
  40fa5e:	cmp    ch,ch
  40fa60:	ins    BYTE PTR es:[edi],dx
  40fa61:	fimul  WORD PTR [esi+0x71f3abfb]
  40fa67:	les    esi,FWORD PTR [eax+0x22]
  40fa6a:	xchg   ecx,eax
  40fa6b:	pop    ebx
  40fa6c:	jmp    0x3c6223a2
  40fa71:	cli    
  40fa72:	sbb    eax,0x8593622
  40fa77:	adc    ecx,0x5820f078
  40fa7d:	addr16 and ebx,eax
  40fa80:	pop    eax
  40fa81:	pop    eax
  40fa82:	addr16 mov al,ds:0x6a9e
  40fa86:	pop    esp
  40fa87:	xchg   esi,eax
  40fa88:	lds    ebp,FWORD PTR [ebp+0x7782aab]
  40fa8e:	aam    0x11
  40fa90:	inc    esi
  40fa91:	outs   dx,DWORD PTR ds:[esi]
  40fa92:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40fa94:	daa    
  40fa95:	push   ecx
  40fa96:	cli    
  40fa97:	jp     0x40fac9
  40fa99:	sub    DWORD PTR [edx+ebx*8+0x5c],0x701626de
  40faa1:	cmp    DWORD PTR [edx-0x5de899d5],ebx
  40faa7:	leave  
  40faa8:	icebp  
  40faa9:	(bad)  
  40faaa:	aad    0x2b
  40faac:	xchg   edi,eax
  40faad:	pop    ss
  40faae:	dec    ebx
  40faaf:	les    edi,FWORD PTR [ecx-0x21]
  40fab2:	(bad)  
  40fab4:	add    eax,edx
  40fab6:	fsubp  st(0),st
  40fab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fab9:	test   al,0x18
  40fabb:	xchg   DWORD PTR fs:[edi+0x43],eax
  40fabf:	jae    0x40fa45
  40fac1:	mov    edx,0x746775c8
  40fac6:	daa    
  40fac7:	shl    DWORD PTR [edi-0x5d],cl
  40faca:	je     0x40fb0f
  40facc:	jbe    0x40faf1
  40face:	xchg   esi,eax
  40fad0:	or     BYTE PTR es:[edi-0x7ecfdfe2],bl
  40fad7:	adc    al,0x45
  40fad9:	enter  0x8f5,0x4c
  40fadd:	mov    bh,0xea
  40fadf:	jno    0x40fb02
  40fae1:	enter  0xd330,0x7e
  40fae5:	es dec ebp
  40fae7:	dec    esi
  40fae8:	in     al,0xdf
  40faea:	push   cs
  40faeb:	(bad)  
  40faec:	mov    ebp,0x830271db
  40faf1:	mov    edx,0x2381cf65
  40faf6:	nop
  40faf7:	jp     0x40faa4
  40faf9:	ds js  0x40fb5a
  40fafc:	jbe    0x40fabe
  40fafe:	fistp  QWORD PTR [esi+0x7d]
  40fb01:	loop   0x40fb0c
  40fb03:	mov    edx,0xdd9cbe10
  40fb08:	inc    edi
  40fb09:	xor    al,0xd2
  40fb0b:	and    edi,DWORD PTR [eax]
  40fb0d:	ret    0xf5d8
  40fb10:	adc    DWORD PTR [edi+edi*1-0x76],eax
  40fb14:	imul   ebx
  40fb16:	add    edi,DWORD PTR [eax+ecx*4]
  40fb19:	mov    bl,0x58
  40fb1b:	call   0x2227:0xc15512bc
  40fb22:	sub    DWORD PTR [ebx+0x4],0x986c22b6
  40fb29:	in     al,dx
  40fb2a:	xor    ecx,DWORD PTR [ebx-0x53208050]
  40fb30:	cmp    al,ch
  40fb32:	stos   BYTE PTR es:[edi],al
  40fb33:	shr    BYTE PTR [ecx+eiz*4-0x59],1
  40fb37:	sub    eax,0x9486e086
  40fb3c:	cmp    eax,0xdca3f0e0
  40fb41:	inc    esp
  40fb42:	pop    ecx
  40fb43:	xor    WORD PTR [edx],0x3699
  40fb48:	mov    ebp,0xa94f9f25
  40fb4d:	hlt    
  40fb4e:	sub    eax,0xd1f37218
  40fb53:	sbb    DWORD PTR [edi+0xb921545],edi
  40fb59:	mov    eax,0x3ca578c2
  40fb5e:	repnz xchg ecx,eax
  40fb60:	mov    db3,eax
  40fb63:	iret   
  40fb64:	pop    ebp
  40fb65:	(bad)  
  40fb66:	adc    dh,ch
  40fb68:	jmp    0x40fb34
  40fb6a:	jns    0x40fb00
  40fb6c:	pop    ebp
  40fb6d:	aas    
  40fb6e:	out    0x85,al
  40fb70:	jae    0x40fb65
  40fb72:	dec    eax
  40fb73:	dec    esp
  40fb74:	cmp    BYTE PTR ds:0x630eb7d4,0x9b
  40fb7b:	stos   BYTE PTR es:[edi],al
  40fb7c:	adc    eax,DWORD PTR ds:0x150f2b15
  40fb82:	into   
  40fb83:	cmp    eax,0x8c00e1b2
  40fb88:	xchg   ebp,eax
  40fb89:	js     0x40fb31
  40fb8b:	jl     0x40fbfb
  40fb8d:	dec    esi
  40fb8e:	test   al,0xda
  40fb90:	xor    BYTE PTR [ecx+ebx*8+0x43],0xea
  40fb95:	vmread DWORD PTR [esi],edx
  40fb98:	bound  esp,QWORD PTR ds:0x540f5bce
  40fb9e:	ins    BYTE PTR es:[edi],dx
  40fb9f:	out    0xe2,al
  40fba1:	cwde   
  40fba2:	sbb    bh,BYTE PTR ds:0x6152b45b
  40fba8:	sub    ecx,DWORD PTR [eax+ebp*1]
  40fbab:	jl     0x40fbc7
  40fbad:	jg     0x40fc2b
  40fbaf:	aaa    
  40fbb0:	jge    0x40fb82
  40fbb2:	shl    cl,1
  40fbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbb5:	mov    dh,0xaf
  40fbb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbb8:	mov    esi,0xe7954800
  40fbbd:	imul   edi,edi,0x34b807ea
  40fbc3:	faddp  st(3),st
  40fbc5:	dec    ebx
  40fbc6:	div    DWORD PTR [eax+0x2053b1e3]
  40fbcc:	stos   BYTE PTR es:[edi],al
  40fbcd:	fdiv   QWORD PTR [ebp+0xf]
  40fbd0:	cdq    
  40fbd1:	cmp    eax,0x43a504d5
  40fbd6:	and    eax,0x6d846516
  40fbdb:	dec    DWORD PTR [ebp+0x700db62c]
  40fbe1:	test   BYTE PTR [ebp-0x70],ch
  40fbe4:	fs jp  0x40fc55
  40fbe7:	test   eax,0x168e275f
  40fbec:	sti    
  40fbed:	addr16 push 0x36
  40fbf0:	add    ch,BYTE PTR [edx+0x5a]
  40fbf3:	pop    ecx
  40fbf4:	mov    esp,DWORD PTR [esi-0x781cc4e]
  40fbfa:	fldcw  WORD PTR [esi]
  40fbfc:	into   
  40fbfd:	(bad)  
  40fbfe:	sbb    bl,BYTE PTR [esi+ebp*1]
  40fc01:	imul   esi,DWORD PTR [ebp-0x75],0x7c
  40fc05:	mov    esp,0xc41b43f8
  40fc0a:	dec    esp
  40fc0b:	xchg   esi,eax
  40fc0c:	dec    eax
  40fc0d:	sbb    al,0x75
  40fc0f:	xchg   ebp,eax
  40fc10:	idiv   DWORD PTR [eax+0x5470e9ba]
  40fc16:	add    eax,0x4a9a2a12
  40fc1b:	dec    esp
  40fc1c:	dec    eax
  40fc1d:	test   al,0xbd
  40fc1f:	mov    BYTE PTR [edx+esi*1-0x66],al
  40fc23:	push   eax
  40fc24:	leave  
  40fc25:	repz icebp 
  40fc27:	jp     0x40fc19
  40fc29:	test   al,0x6a
  40fc2b:	mov    ebp,0x8eca84f0
  40fc30:	jno    0x40fc72
  40fc32:	(bad)  
  40fc34:	sar    dl,cl
  40fc36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc37:	add    al,0x1f
  40fc39:	mov    ebp,0x3108e57b
  40fc3e:	js     0x40fc41
  40fc40:	test   al,0xea
  40fc42:	or     DWORD PTR [esp+esi*1-0x39],ebp
  40fc46:	popf   
  40fc47:	pop    edx
  40fc48:	add    eax,0xb2fbda11
  40fc4d:	loop   0x40fc8b
  40fc4f:	jo     0x40fc90
  40fc51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc52:	aam    0xfe
  40fc54:	mov    ah,0x5c
  40fc56:	jb     0x40fc1c
  40fc58:	fnstcw WORD PTR [ebp-0x11b6c1e0]
  40fc5e:	cli    
  40fc5f:	scas   eax,DWORD PTR es:[edi]
  40fc60:	cli    
  40fc61:	mov    eax,eax
  40fc63:	sbb    BYTE PTR [edx+0xcb1eb5f],bl
  40fc69:	and    DWORD PTR [ebp+0x4e68a9f6],0xb426d99a
  40fc73:	popf   
  40fc74:	add    cl,BYTE PTR [ebx]
  40fc76:	pushf  
  40fc77:	jge    0x40fc7f
  40fc79:	(bad)  
  40fc7b:	sbb    eax,DWORD PTR [edi]
  40fc7d:	and    al,0x81
  40fc7f:	shl    BYTE PTR [ecx-0x6f],cl
  40fc82:	cmp    edx,ebx
  40fc84:	test   BYTE PTR [ebx+0x5],bh
  40fc87:	mov    ch,0x2c
  40fc89:	xchg   ebx,eax
  40fc8a:	and    cl,ah
  40fc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc8d:	jle    0x40fc58
  40fc8f:	cmp    eax,0x19d777ee
  40fc94:	cmp    DWORD PTR [ebx-0x43],esi
  40fc97:	sub    DWORD PTR [ebp+0x643624fd],esi
  40fc9d:	and    eax,0xce4002e5
  40fca2:	or     al,0xbf
  40fca4:	dec    edx
  40fca5:	add    al,0x48
  40fca7:	cmp    BYTE PTR [ebx+0x3bece4d8],bl
  40fcad:	dec    ebx
  40fcae:	lds    eax,FWORD PTR [edx-0x6f]
  40fcb1:	pop    eax
  40fcb2:	(bad)  
  40fcb3:	in     al,0x58
  40fcb5:	or     bl,dh
  40fcb7:	mov    BYTE PTR [eax],dh
  40fcb9:	push   ss
  40fcba:	jne    0x40fcda
  40fcbc:	add    esi,DWORD PTR [ecx]
  40fcbe:	test   al,0x4e
  40fcc0:	sbb    bh,BYTE PTR [edi]
  40fcc2:	xchg   ecx,eax
  40fcc3:	retf   0xda76
  40fcc6:	push   esp
  40fcc7:	push   ss
  40fcc8:	pop    ecx
  40fcc9:	mov    edx,0x6885a88a
  40fcce:	add    al,0xa2
  40fcd0:	ss fcmovnbe st,st(5)
  40fcd3:	pop    esi
  40fcd4:	test   BYTE PTR [esi-0x14a2b86c],dl
  40fcda:	or     eax,0xd95fbe8b
  40fcdf:	add    eax,0xc7186130
  40fce4:	arpl   WORD PTR [ecx+edx*4],si
  40fce7:	adc    DWORD PTR [eax+0x1a1caac1],ebp
  40fced:	adc    ah,dh
  40fcef:	pop    ecx
  40fcf0:	xor    ebp,DWORD PTR [ebp+eiz*2-0x1]
  40fcf4:	adc    al,0x4c
  40fcf6:	dec    esp
  40fcf7:	mov    bh,0x6b
  40fcf9:	repnz ds imul esi,edx,0xa9682135
  40fd01:	mov    ch,0x58
  40fd03:	cmp    bh,BYTE PTR [eax]
  40fd05:	cmp    al,BYTE PTR [edi]
  40fd07:	lahf   
  40fd08:	mov    ch,0x81
  40fd0a:	and    dl,BYTE PTR [esi+0x3b64570e]
  40fd10:	pop    ss
  40fd11:	mov    ds:0x31d5b362,al
  40fd16:	fdivr  DWORD PTR [esi]
  40fd18:	fimul  DWORD PTR [edi]
  40fd1a:	xlat   BYTE PTR ds:[ebx]
  40fd1b:	jae    0x40fd30
  40fd1d:	outs   dx,DWORD PTR ds:[esi]
  40fd1e:	imul   ecx,DWORD PTR [ecx-0x4d00d91],0xe3a1bc8
  40fd28:	add    dl,ch
  40fd2a:	add    al,0xc2
  40fd2c:	push   ebx
  40fd2d:	std    
  40fd2e:	loopne 0x40fd3b
  40fd30:	outs   dx,BYTE PTR ds:[esi]
  40fd31:	add    eax,0xc2cdbb74
  40fd36:	test   al,0x4e
  40fd38:	cs mov ebx,0xd45fa625
  40fd3e:	aaa    
  40fd3f:	cdq    
  40fd40:	add    bh,BYTE PTR [eax]
  40fd42:	mov    al,dl
  40fd44:	mov    dl,BYTE PTR [edi+0x39]
  40fd47:	dec    edi
  40fd48:	mov    edx,0x6cf57a0a
  40fd4d:	dec    edi
  40fd4e:	loop   0x40fd9a
  40fd50:	mov    dh,0x90
  40fd52:	jne    0x40fdb2
  40fd54:	xlat   BYTE PTR ds:[ebx]
  40fd55:	hlt    
  40fd56:	js     0x40fd21
  40fd58:	and    al,0x2e
  40fd5a:	iret   
  40fd5b:	fild   QWORD PTR [esi-0x6841ba7d]
  40fd61:	out    0x83,al
  40fd63:	mov    ecx,0xeac6b088
  40fd68:	int    0xd2
  40fd6a:	add    al,BYTE PTR [edi+0x1b]
  40fd6d:	jae    0x40fd37
  40fd6f:	popf   
  40fd70:	retf   0x30e8
  40fd73:	pop    ebx
  40fd74:	or     BYTE PTR [eax+ebx*8-0x80],dl
  40fd78:	sbb    ah,BYTE PTR [edx]
  40fd7a:	mov    al,ds:0xb42999d8
  40fd7f:	mov    ebx,0xd7024ba9
  40fd84:	int3   
  40fd85:	push   esi
  40fd86:	stos   DWORD PTR es:[edi],eax
  40fd87:	test   ecx,edx
  40fd89:	rcl    DWORD PTR [edi+0x52cbb4b4],1
  40fd8f:	cmp    ebp,DWORD PTR [esi]
  40fd91:	push   ebp
  40fd92:	add    eax,0x7b661595
  40fd97:	cmp    eax,DWORD PTR [ecx]
  40fd99:	out    0xa6,al
  40fd9b:	lea    ebx,[edx+0x67]
  40fd9e:	lahf   
  40fd9f:	push   0xa138deb3
  40fda4:	sub    al,BYTE PTR [edx-0x5]
  40fda7:	sbb    BYTE PTR [edi-0x34f09256],0x75
  40fdae:	xor    ch,BYTE PTR [esp+edx*1]
  40fdb1:	push   ss
  40fdb2:	xor    ch,ah
  40fdb4:	mov    bl,BYTE PTR [edi+0x4d5f7e31]
  40fdba:	lds    edi,FWORD PTR [edx+0x6d]
  40fdbd:	xchg   BYTE PTR [esi],dl
  40fdbf:	mov    edi,0x3052a56
  40fdc4:	out    0x20,al
  40fdc6:	inc    ebx
  40fdc7:	stos   BYTE PTR es:[edi],al
  40fdc8:	or     DWORD PTR [ebp-0x35],ebx
  40fdcb:	jnp    0x40fd5b
  40fdcd:	adc    eax,0x4d126b6b
  40fdd2:	jle    0x40fd5c
  40fdd4:	jecxz  0x40fe07
  40fdd6:	pop    ebx
  40fdd7:	add    eax,DWORD PTR [esp+ebp*2+0x5c76e9b2]
  40fdde:	(bad)  
  40fddf:	cmp    BYTE PTR [ecx-0x772e97eb],cl
  40fde5:	pop    eax
  40fde6:	sbb    BYTE PTR [edx+0x73],bh
  40fde9:	mov    dh,0x9a
  40fdeb:	jmp    0xb52b:0x98a237e1
  40fdf2:	jmp    0xfd4f:0x5f89b697
  40fdf9:	jne    0x40fdb8
  40fdfb:	pop    ds
  40fdfc:	test   eax,0xe823f10f
  40fe01:	add    al,0xb0
  40fe03:	retf   
  40fe04:	jnp    0x40fe6a
  40fe06:	cli    
  40fe07:	imul   esi,DWORD PTR [ebp-0x4b],0x7e5141fc
  40fe0e:	add    DWORD PTR [esi+0x78cf9eb2],0x4f
  40fe15:	sub    DWORD PTR [edi],esp
  40fe17:	sbb    BYTE PTR [edi],ah
  40fe19:	cmp    ecx,DWORD PTR [edi]
  40fe1b:	xchg   esi,eax
  40fe1c:	loopne 0x40fe10
  40fe1e:	mov    eax,0xcea67bbc
  40fe23:	and    DWORD PTR ds:0x61dfc278,ecx
  40fe29:	dec    edi
  40fe2a:	adc    DWORD PTR [ebx+edx*2-0x78],ecx
  40fe2e:	(bad)  
  40fe2f:	fnsave [edx+0x443c5c90]
  40fe35:	xor    esi,DWORD PTR [ebx-0x25]
  40fe38:	pop    esi
  40fe39:	(bad)  
  40fe3a:	adc    DWORD PTR [edi+0xfe4be96],esp
  40fe40:	add    eax,edi
  40fe42:	lods   eax,DWORD PTR ds:[esi]
  40fe43:	adc    eax,0xcbe7ece0
  40fe48:	inc    esp
  40fe49:	dec    ecx
  40fe4a:	mov    ds:0x6677340e,eax
  40fe4f:	mov    bl,0x77
  40fe51:	dec    edi
  40fe52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe53:	jne    0x40fe02
  40fe55:	sbb    edi,DWORD PTR [ecx+ebx*4]
  40fe58:	dec    eax
  40fe59:	mov    ah,0xde
  40fe5b:	pop    ebp
  40fe5c:	mov    eax,0x6b66344b
  40fe61:	mov    ah,0xc7
  40fe63:	and    DWORD PTR [eax-0x57],ebx
  40fe66:	jo     0x40feda
  40fe68:	shr    BYTE PTR [esi-0x58],0xc4
  40fe6c:	mov    ch,0x38
  40fe6e:	inc    edx
  40fe6f:	nop
  40fe70:	xor    al,0xde
  40fe72:	add    DWORD PTR [ecx+0x7e73aadf],edi
  40fe78:	jmp    0x40fe21
  40fe7a:	(bad)  
  40fe7b:	fsubr  QWORD PTR [edx-0x75]
  40fe7e:	xchg   esp,eax
  40fe7f:	sbb    BYTE PTR ds:0x97870192,ch
  40fe85:	aaa    
  40fe86:	push   ebp
  40fe87:	push   0xc687198c
  40fe8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe8d:	cli    
  40fe8e:	pop    ebp
  40fe8f:	add    al,0x40
  40fe91:	xchg   DWORD PTR [edx+0x53],eax
  40fe94:	sub    DWORD PTR [edx+0x747f1f22],ebx
  40fe9a:	jge    0x40fec6
  40fe9c:	test   BYTE PTR [ecx+0x17b4b3e4],0x50
  40fea3:	adc    eax,0x6099aa4f
  40fea8:	lods   eax,DWORD PTR ds:[esi]
  40fea9:	outs   dx,DWORD PTR ds:[esi]
  40feaa:	sbb    edi,eax
  40feac:	call   0x5576:0xc3c97619
  40feb3:	adc    al,0xc4
  40feb5:	jb     0x40ff1a
  40feb7:	jbe    0x40ff04
  40feb9:	push   edx
  40feba:	dec    ebp
  40febb:	sub    al,0x4b
  40febd:	pop    edi
  40febe:	arpl   WORD PTR [ebp-0x6cc7439b],ax
  40fec4:	mov    ebx,0xe7f1fa40
  40fec9:	in     eax,dx
  40feca:	mov    edx,DWORD PTR [edi+ebx*4]
  40fecd:	retf   
  40fece:	fistp  DWORD PTR [ebp-0x5dc6e1f2]
  40fed4:	mov    edi,0x51761759
  40fed9:	ret    
  40feda:	push   0xcf658f58
  40fedf:	mov    dl,0x60
  40fee1:	cmc    
  40fee2:	cmp    edi,0xbc79d7fe
  40fee8:	cmp    cl,BYTE PTR [ecx]
  40feea:	push   eax
  40feeb:	xor    BYTE PTR [ecx+0x400a5c70],bl
  40fef1:	add    esi,edi
  40fef3:	out    dx,eax
  40fef4:	scas   al,BYTE PTR es:[edi]
  40fef5:	sti    
  40fef6:	ja     0x40ff32
  40fef8:	test   DWORD PTR [ecx-0x2e],esi
  40fefb:	in     al,0x66
  40fefd:	and    DWORD PTR [edi],eax
  40feff:	jo     0x40ff35
  40ff01:	mov    al,ds:0x593e4162
  40ff06:	dec    ecx
  40ff07:	mov    eax,0x94430208
  40ff0c:	push   ebx
  40ff0d:	aam    0x3d
  40ff0f:	test   BYTE PTR [ebx-0x68],ch
  40ff12:	cs cld 
  40ff14:	sbb    DWORD PTR [esi+0x77],ebp
  40ff17:	sub    eax,ebx
  40ff19:	xor    al,BYTE PTR [esi]
  40ff1b:	or     BYTE PTR [esi+0x2e],0xcb
  40ff1f:	pusha  
  40ff20:	mov    ds:0x30a26e1d,eax
  40ff25:	mov    bh,0x1
  40ff27:	push   esi
  40ff28:	add    esi,edi
  40ff2a:	sbb    DWORD PTR [esi+0x784d31d9],edx
  40ff30:	push   edi
  40ff31:	adc    edi,edx
  40ff33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff34:	push   edi
  40ff35:	add    eax,0xa71fc0aa
  40ff3a:	or     ah,bl
  40ff3c:	jl     0x40ff20
  40ff3e:	(bad)  
  40ff3f:	stc    
  40ff40:	sbb    ah,dl
  40ff42:	sar    ebp,1
  40ff44:	fiadd  DWORD PTR [ecx+eax*2+0xcee5ba5]
  40ff4b:	nop
  40ff4c:	(bad)
  40ff4f:	dec    esp
  40ff50:	adc    BYTE PTR [edx],bl
  40ff52:	push   ebx
  40ff53:	add    dl,BYTE PTR [edx-0x2b34a822]
  40ff59:	stc    
  40ff5a:	or     eax,0xedec833e
  40ff5f:	out    dx,eax
  40ff60:	inc    ecx
  40ff61:	inc    ebx
  40ff62:	repz test eax,0xda92948c
  40ff68:	jnp    0x40ffe1
  40ff6a:	repz call 0x8882:0xc813860d
  40ff72:	dec    ebx
  40ff73:	pusha  
  40ff74:	add    al,BYTE PTR [edi-0x44]
  40ff77:	mov    al,0x1
  40ff79:	aam    0xd6
  40ff7b:	mov    al,ds:0x2dc4bc0f
  40ff80:	(bad)  [edx-0x5ab7b275]
  40ff86:	(bad)  
  40ff87:	call   0x1bc9:0x6ec8c64c
  40ff8e:	repnz div BYTE PTR [eax]
  40ff91:	int    0x80
  40ff93:	cmp    bh,0xe4
  40ff96:	imul   ecx,DWORD PTR [edi-0x61],0xffffff9c
  40ff9a:	repz dec ebp
  40ff9c:	ret    
  40ff9d:	mov    edx,0xdb67c5e
  40ffa2:	outs   dx,BYTE PTR ds:[esi]
  40ffa3:	xchg   bl,al
  40ffa5:	repnz pop eax
  40ffa7:	push   DWORD PTR [ebx]
  40ffa9:	retf   0x781b
  40ffac:	inc    esp
  40ffad:	lds    ebx,FWORD PTR [esp+edx*2+0x2d83001c]
  40ffb4:	out    0xc3,al
  40ffb6:	xchg   esp,eax
  40ffb7:	out    0x87,eax
  40ffb9:	enter  0xa3a2,0xb9
  40ffbd:	loop   0x410020
  40ffbf:	ror    BYTE PTR [ebx+edi*4+0x66],cl
  40ffc3:	fist   DWORD PTR [esi]
  40ffc5:	pushf  
  40ffc6:	mov    dh,0xc1
  40ffc8:	jbe    0x40ffd0
  40ffca:	dec    edi
  40ffcb:	sub    esp,edx
  40ffcd:	xchg   esp,eax
  40ffce:	xchg   ebx,eax
  40ffcf:	loop   0x40ffa7
  40ffd1:	push   ebp
  40ffd2:	dec    edx
  40ffd3:	fnstenv [ecx-0x78]
  40ffd6:	in     eax,0x3d
  40ffd8:	pop    es
  40ffd9:	test   al,0x8c
  40ffdb:	mov    bh,0xa2
  40ffdd:	(bad)  
  40ffde:	pop    ebp
  40ffdf:	mov    ds:0x927e6d46,al
  40ffe4:	int    0x52
  40ffe6:	xchg   ebp,eax
  40ffe7:	adc    ah,BYTE PTR [eax]
  40ffe9:	push   eax
  40ffea:	nop
  40ffeb:	ficomp WORD PTR [ecx+0xe6bd47a]
  40fff1:	bnd jnp 0x41000e
  40fff4:	pop    edi
  40fff5:	arpl   di,bx
  40fff7:	inc    edx
  40fff8:	and    eax,0x1f85610c
  40fffd:	mov    bh,BYTE PTR [ecx-0x15]
  410000:	pop    esp
  410001:	cmp    al,0x46
  410003:	and    BYTE PTR [edi+0x52bcf3a4],ah
  410009:	dec    ebx
  41000a:	int    0x99
  41000c:	mov    dh,0x6f
  41000e:	sub    ebx,ebp
  410010:	bound  ecx,QWORD PTR [esi+0x57]
  410013:	adc    DWORD PTR [esi+ecx*4-0x16],0xffffffbf
  410018:	mov    al,0x64
  41001a:	iret   
  41001b:	jno    0x410000
  41001d:	shl    BYTE PTR [ecx-0x63],1
  410020:	or     edx,DWORD PTR ds:0x96ad876
  410026:	arpl   WORD PTR [edx+0x5520523],dx
  41002c:	inc    ebp
  41002d:	call   0x4e132b63
  410032:	ret    
  410033:	push   edx
  410034:	pop    edi
  410035:	inc    ecx
  410036:	dec    ecx
  410037:	sub    BYTE PTR [edx+0x730109b4],dh
  41003d:	or     BYTE PTR [esi],cl
  41003f:	ret    
  410040:	and    DWORD PTR [esi+ebp*2-0x79],ebx
  410044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410046:	ins    DWORD PTR es:[edi],dx
  410047:	sub    BYTE PTR [esi+0x373b3095],cl
  41004d:	ror    esi,0xb7
  410050:	or     BYTE PTR [ecx],bl
  410052:	adc    al,0x8b
  410054:	fcmovne st,st(7)
  410056:	jmp    0x40ffed
  410058:	fucomp st(1)
  41005a:	mov    ah,0x5
  41005c:	rcl    ah,1
  41005e:	bound  edi,QWORD PTR [edx]
  410060:	pop    esi
  410061:	add    eax,0x6d17f0e2
  410066:	xor    al,0xba
  410068:	fsubp  st(1),st
  41006a:	sti    
  41006b:	cmp    esi,0x8513b534
  410071:	mov    ecx,0xfbe3f932
  410076:	push   esi
  410077:	mov    eax,0xb04eb524
  41007c:	call   DWORD PTR [eax]
  41007e:	xor    DWORD PTR [ecx+0x6ec7535d],edx
  410084:	and    al,0x5c
  410086:	sub    DWORD PTR [edx+0x17],ecx
  410089:	(bad)  
  41008a:	fsubr  DWORD PTR [edx]
  41008c:	mov    ecx,DWORD PTR ds:0xcfa9b201
  410092:	jo     0x4100c7
  410094:	sub    eax,0xc43924db
  410099:	retf   0x1f1e
  41009c:	add    esi,DWORD PTR [eax-0xd]
  41009f:	mov    ecx,0x43a38d07
  4100a4:	xchg   esp,eax
  4100a5:	test   BYTE PTR ds:[ebp-0x62a74ae],cl
  4100ac:	je     0x410068
  4100ae:	pop    es
  4100af:	jo     0x41010b
  4100b1:	mov    ebx,0x2bf4776a
  4100b6:	aad    0x53
  4100b8:	pop    ebx
  4100b9:	mov    al,ds:0x33a1a206
  4100be:	popf   
  4100bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c0:	xor    al,BYTE PTR [edx+edx*4+0x5e]
  4100c4:	daa    
  4100c5:	test   eax,0xb7b72e7d
  4100ca:	or     eax,0x5c96e45e
  4100cf:	js     0x410057
  4100d1:	and    cl,al
  4100d3:	(bad)  
  4100d4:	push   ss
  4100d5:	add    eax,0x66fb83e5
  4100da:	addr16 pop ds
  4100dc:	retf   
  4100dd:	icebp  
  4100de:	mov    WORD PTR ds:0x824aab68,ds
  4100e4:	xchg   di,ax
  4100e6:	pusha  
  4100e7:	daa    
  4100e8:	test   BYTE PTR [ecx+0x44],ch
  4100eb:	xlat   BYTE PTR ds:[ebx]
  4100ec:	outs   dx,DWORD PTR ds:[esi]
  4100ed:	in     eax,0x5f
  4100ef:	loop   0x410152
  4100f1:	out    dx,eax
  4100f2:	adc    edi,DWORD PTR [ecx-0x4]
  4100f5:	push   esi
  4100f6:	push   es
  4100f7:	and    DWORD PTR [ebx],ecx
  4100f9:	push   0xffffffac
  4100fb:	mov    ds:0xb96a7834,al
  410100:	lods   al,BYTE PTR ds:[esi]
  410101:	push   ss
  410102:	outs   dx,DWORD PTR ds:[esi]
  410103:	cdq    
  410104:	je     0x410162
  410106:	jmp    DWORD PTR [edi+0x30]
  410109:	loope  0x410181
  41010b:	mov    ebp,DWORD PTR [ecx-0x1a]
  41010e:	mov    WORD PTR [edx-0x77],es
  410111:	sub    BYTE PTR [esi-0x7fdfdca4],cl
  410117:	dec    edx
  410118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410119:	dec    ebx
  41011a:	inc    esp
  41011b:	push   es
  41011c:	rcr    BYTE PTR ds:0x8bed1a77,1
  410122:	bound  edx,QWORD PTR [eax+0x54c86786]
  410128:	popa   
  410129:	arpl   WORD PTR es:[ecx],cx
  41012c:	xor    DWORD PTR [esi+0x6b95df58],ecx
  410132:	std    
  410133:	cmp    BYTE PTR [esi-0x48],dh
  410136:	jl     0x4100ea
  410138:	jnp    0x41018b
  41013a:	loop   0x4100cd
  41013c:	ret    0x276c
  41013f:	aaa    
  410140:	sbb    al,bh
  410142:	push   ss
  410143:	jmp    FWORD PTR [esi-0x5dc174a8]
  410149:	dec    edx
  41014a:	aas    
  41014b:	mov    al,0x2d
  41014d:	add    BYTE PTR [ebx],0x6f
  410150:	jae    0x41018f
  410152:	addr16 int3 
  410154:	ds or  al,0x2b
  410157:	push   cs
  410158:	test   BYTE PTR [edx+0x3a4a35f5],dl
  41015e:	jo     0x410141
  410160:	push   eax
  410161:	pop    ds
  410162:	inc    ebp
  410163:	sbb    DWORD PTR [edi+0x27a6624],eax
  410169:	dec    ebp
  41016a:	xlat   BYTE PTR ds:[ebx]
  41016b:	add    DWORD PTR [esi+edi*4+0x16],esi
  41016f:	sbb    al,BYTE PTR [eax-0x3db0500d]
  410175:	cli    
  410176:	xor    al,0xf8
  410178:	je     0x410127
  41017a:	cmp    ah,BYTE PTR [ebx+0x65]
  41017d:	adc    eax,0x9d2ebb51
  410182:	jge    0x41010a
  410184:	push   es
  410185:	add    DWORD PTR [esi-0x4],edx
  410188:	and    edi,esp
  41018a:	test   esi,ecx
  41018c:	dec    esi
  41018d:	or     eax,0xdf10c5b
  410192:	sub    BYTE PTR [edi+eiz*1],al
  410195:	and    BYTE PTR [esi+ebp*8],ch
  410198:	jbe    0x410181
  41019a:	fdiv   DWORD PTR [ecx-0x14578e86]
  4101a0:	sbb    edi,DWORD PTR [ecx-0x340a45ea]
  4101a6:	pop    ecx
  4101a7:	arpl   WORD PTR [eax],ax
  4101a9:	mov    bh,0x5c
  4101ab:	push   0x3a
  4101ad:	add    esi,DWORD PTR [edi-0x37]
  4101b0:	xor    DWORD PTR [eax+0x30],esi
  4101b3:	mov    edx,0xaaa56af1
  4101b8:	mov    dh,0xe3
  4101ba:	aaa    
  4101bb:	je     0x4101cb
  4101bd:	inc    ebx
  4101be:	ffreep st(2)
  4101c0:	sti    
  4101c1:	mov    ch,0xca
  4101c3:	mov    ebp,0x37218784
  4101c8:	mov    ds:0x5643b96d,eax
  4101cd:	or     BYTE PTR [edi-0x8],bh
  4101d0:	sbb    DWORD PTR [esi],ebx
  4101d2:	push   0xffffffb8
  4101d4:	jmp    0xabd5aa6d
  4101d9:	or     esp,ebx
  4101db:	jl     0x41016b
  4101dd:	dec    edi
  4101de:	sbb    eax,0x37b65726
  4101e3:	ins    BYTE PTR es:[edi],dx
  4101e4:	call   DWORD PTR [esi-0x31]
  4101e7:	out    0x37,al
  4101e9:	pusha  
  4101ea:	call   FWORD PTR [edx]
  4101ec:	outs   dx,BYTE PTR ds:[esi]
  4101ed:	mov    DWORD PTR [edx-0x72],edx
  4101f0:	mov    dl,0xc6
  4101f2:	xlat   BYTE PTR ds:[ebx]
  4101f3:	pop    edx
  4101f4:	sub    BYTE PTR [eax],ch
  4101f6:	repz cmp al,BYTE PTR [ecx-0x26]
  4101fa:	jne    0x410208
  4101fc:	xor    ah,BYTE PTR [ebx-0x15]
  4101ff:	cmp    ecx,esi
  410201:	mov    al,0x25
  410203:	xchg   edx,eax
  410204:	or     bl,ah
  410206:	push   cs
  410207:	bound  edi,QWORD PTR [edi+ebx*4]
  41020a:	pop    ss
  41020b:	xor    eax,0x7da4343d
  410210:	xor    cl,al
  410212:	adc    ecx,DWORD PTR [eax+0x690ba838]
  410218:	push   edx
  410219:	inc    ebp
  41021a:	mov    bh,0x6e
  41021c:	pop    eax
  41021d:	iret   
  41021e:	sub    DWORD PTR [ecx-0x27],0xffffff8d
  410222:	jmp    0x410249
  410224:	pop    esi
  410225:	mov    bh,0x50
  410227:	rol    DWORD PTR [edx+0x4b],0x1f
  41022b:	pop    eax
  41022c:	xchg   edx,eax
  41022d:	push   cs
  41022e:	imul   DWORD PTR [esi]
  410230:	inc    esp
  410231:	iret   
  410232:	push   ss
  410233:	add    DWORD PTR [edx],ebx
  410235:	dec    edx
  410236:	sub    eax,ebx
  410238:	and    esi,DWORD PTR [eax+edi*8]
  41023b:	setbe  BYTE PTR [ebx-0x63]
  41023f:	pop    ds
  410240:	add    BYTE PTR [edx-0x33],0x4f
  410244:	ret    
  410245:	scas   al,BYTE PTR es:[edi]
  410246:	mov    dl,0x16
  410248:	out    dx,al
  410249:	mov    esp,0xa25ca6c5
  41024e:	test   eax,0xf000e5b
  410253:	ror    DWORD PTR [ebx-0x58dbdca2],cl
  410259:	daa    
  41025a:	repz and ecx,esp
  41025d:	js     0x410205
  41025f:	xor    DWORD PTR ds:0x4fa7ede9,esi
  410265:	xchg   ebx,eax
  410266:	adc    bl,BYTE PTR [ebp+0x5b11b9bf]
  41026c:	adc    al,0x28
  41026e:	push   edx
  41026f:	stc    
  410270:	fsubr  QWORD PTR [edx+0x67]
  410273:	pop    ecx
  410274:	jne    0x41025c
  410276:	cwde   
  410277:	fidivr DWORD PTR ds:0xcb6e0c08
  41027d:	push   edi
  41027e:	(bad)  
  41027f:	in     eax,dx
  410280:	bound  ebp,QWORD PTR [ecx+esi*8-0x603f77f3]
  410287:	jno    0x410305
  410289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41028a:	sub    al,0x95
  41028c:	addr16 add eax,0xab1d13ff
  410292:	fidivr WORD PTR [esi+0x4]
  410295:	mov    ds,WORD PTR [ebp+ecx*2+0x64]
  410299:	pop    ss
  41029a:	xor    ecx,DWORD PTR [ebp-0x21d3b6d6]
  4102a0:	repz push es
  4102a2:	or     ch,BYTE PTR [ebx-0x11312464]
  4102a8:	imul   bh
  4102aa:	fisttp WORD PTR [edx-0x7dd8be2e]
  4102b0:	add    eax,0xdd3e3586
  4102b5:	ficomp WORD PTR [esi-0x263c2def]
  4102bb:	retf   
  4102bc:	fsubr  st(1),st
  4102bf:	test   DWORD PTR cs:[edi+0x6b],edi
  4102c3:	jb     0x41033c
  4102c5:	loop   0x4102ae
  4102c7:	shl    DWORD PTR [edx-0x2d],0x40
  4102cb:	pop    ecx
  4102cc:	jge    0x4102fd
  4102ce:	xor    DWORD PTR [edi+0x1dc5d96b],0x1f
  4102d5:	push   es
  4102d6:	xor    bl,BYTE PTR [esi*1+0x70fa75b1]
  4102dd:	mov    al,0x2b
  4102df:	or     BYTE PTR [ebx-0x29],bh
  4102e2:	xor    edi,DWORD PTR [eax+0x7aaa366]
  4102e8:	and    BYTE PTR [ebp-0xe],dh
  4102eb:	jl     0x41033e
  4102ed:	aas    
  4102ee:	dec    edi
  4102ef:	mov    DWORD PTR [ebx-0x4c],edx
  4102f2:	enter  0x7ed7,0x74
  4102f6:	fistp  WORD PTR [esi-0x70488b31]
  4102fc:	push   ecx
  4102fd:	stc    
  4102fe:	xor    al,0x35
  410300:	enter  0xc55a,0xe5
  410304:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  410306:	fucomip st,st(6)
  410308:	dec    edx
  410309:	xor    DWORD PTR ds:0x4b7df713,esp
  41030f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410310:	jno    0x41031c
  410312:	aaa    
  410313:	ins    BYTE PTR es:[edi],dx
  410314:	push   ds
  410315:	jle    0x4102e9
  410317:	(bad)  
  410318:	jge    0x410338
  41031a:	push   eax
  41031b:	lods   eax,DWORD PTR ds:[esi]
  41031c:	js     0x4102c4
  41031e:	inc    esi
  41031f:	add    bl,0xdc
  410322:	mov    al,ds:0xf3c28d8a
  410328:	stc    
  410329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41032a:	mov    dl,0x69
  41032c:	jecxz  0x41034d
  41032e:	dec    ecx
  41032f:	fs loope 0x4102fb
  410332:	mov    cl,0x75
  410334:	into   
  410335:	and    eax,0x790686db
  41033a:	fstp   QWORD PTR [ebp-0x6b243d31]
  410340:	je     0x41033a
  410342:	fadd   DWORD PTR [ebp+0x42]
  410345:	scas   al,BYTE PTR es:[edi]
  410346:	sbb    bl,dh
  410348:	not    bh
  41034a:	push   ecx
  41034b:	cmp    DWORD PTR [ebx-0x4860ec64],esi
  410351:	xchg   ebx,eax
  410352:	test   BYTE PTR [edx+0x6f],bh
  410355:	mov    edx,0x8e1a64f0
  41035a:	jl     0x410356
  41035c:	mov    BYTE PTR [ebp+0x72],dh
  41035f:	(bad)  [ebx+0x4a568f4e]
  410365:	mov    ebp,0x174ceec7
  41036a:	sub    al,0x67
  41036c:	cmp    eax,0x60648e15
  410371:	iret   
  410372:	cli    
  410373:	or     ah,BYTE PTR [ecx-0x52]
  410376:	mov    ebx,0x2700e611
  41037b:	dec    edi
  41037c:	cli    
  41037d:	pop    es
  41037e:	out    0xa2,eax
  410380:	in     al,dx
  410381:	(bad)  
  410382:	sbb    BYTE PTR [ecx+0x19fa84a9],dh
  410388:	lods   al,BYTE PTR ds:[esi]
  410389:	cwde   
  41038a:	icebp  
  41038b:	mov    edi,0x20cb4f1b
  410390:	jp     0x41032c
  410392:	test   al,0x5e
  410394:	stos   BYTE PTR es:[edi],al
  410395:	jmp    0x2ad:0x2a3b0364
  41039c:	js     0x41034f
  41039e:	imul   eax,DWORD PTR [edi],0xffffffa0
  4103a1:	rcl    ah,cl
  4103a3:	sbb    eax,0xe181f19
  4103a8:	dec    ecx
  4103a9:	dec    ecx
  4103aa:	fisttp WORD PTR [eax-0x6194fba2]
  4103b0:	rol    BYTE PTR [ecx],1
  4103b2:	imul   ebx,ebx,0x2daa65c9
  4103b8:	pushf  
  4103b9:	mov    bh,0xc1
  4103bb:	sbb    edx,edx
  4103bd:	loopne 0x4103f5
  4103bf:	push   es
  4103c0:	mov    ds:0xfd8c85ac,eax
  4103c5:	inc    esp
  4103c6:	inc    ax
  4103c8:	mov    dh,0x3a
  4103ca:	not    DWORD PTR [ecx]
  4103cc:	push   eax
  4103cd:	cmp    ah,BYTE PTR [ecx]
  4103cf:	stc    
  4103d0:	jg     0x41041e
  4103d2:	stos   DWORD PTR es:[edi],eax
  4103d3:	jg     0x410433
  4103d5:	(bad)  
  4103d6:	adc    ah,BYTE PTR [eax-0x5db78bcb]
  4103dc:	or     ch,dh
  4103de:	call   0x98b3:0xf675d335
  4103e5:	pop    ecx
  4103e6:	or     al,0x99
  4103e8:	add    ebx,ebx
  4103ea:	adc    BYTE PTR [ebx+0x1],0x24
  4103ee:	test   al,0x1f
  4103f0:	retf   0x794f
  4103f3:	xchg   edi,eax
  4103f4:	jp     0x410394
  4103f6:	in     eax,0xa1
  4103f8:	gs std 
  4103fa:	sub    BYTE PTR [ebx-0x68],al
  4103fd:	fist   DWORD PTR [edx]
  4103ff:	es xchg ebx,eax
  410401:	adc    esi,ebp
  410403:	or     DWORD PTR [esi],0x62f4a1a6
  410409:	scas   eax,DWORD PTR es:[edi]
  41040a:	inc    ecx
  41040b:	(bad)  
  41040c:	jns    0x4103fe
  41040e:	jp     0x4103af
  410410:	lods   al,BYTE PTR ds:[esi]
  410411:	sub    ch,BYTE PTR [edi]
  410413:	push   ebx
  410414:	int3   
  410415:	test   ecx,edx
  410417:	mov    WORD PTR [ecx],fs
  410419:	or     edx,edx
  41041b:	or     al,0x10
  41041d:	out    0x1a,al
  41041f:	lock fcmovu st,st(1)
  410422:	pop    ds
  410423:	jl     0x4103d2
  410425:	inc    ah
  410427:	pop    esi
  410428:	adc    dl,dh
  41042a:	loopne 0x410408
  41042c:	hlt    
  41042d:	aam    0x7a
  41042f:	mov    eax,ds:0x7426fe86
  410434:	mov    al,ds:0x4f2290ba
  410439:	jno    0x410492
  41043b:	jmp    0xadd4:0x307a83b8
  410442:	push   edx
  410443:	xor    edi,DWORD PTR [eax]
  410445:	arpl   WORD PTR [ebx+edi*2-0x49],bp
  410449:	and    BYTE PTR [eax+0x48306dab],0x38
  410450:	daa    
  410451:	adc    DWORD PTR [ebx-0x7338469d],eax
  410457:	pop    esi
  410458:	cmp    ax,0x92ca
  41045c:	shr    dh,cl
  41045e:	mov    eax,DWORD PTR [edx-0x418462e4]
  410464:	in     al,dx
  410465:	test   al,0xca
  410467:	sub    BYTE PTR [ebx+0x328d4830],bl
  41046d:	xchg   esi,eax
  41046e:	inc    ecx
  41046f:	jl     0x4104a1
  410471:	(bad)
  410474:	inc    eax
  410475:	out    dx,eax
  410476:	leave  
  410477:	lock add bl,BYTE PTR [esi-0x1e]
  41047b:	test   DWORD PTR ds:0xf5f3784b,0x3a5b844e
  410485:	mov    esi,0x2692c2ae
  41048a:	unpckhps xmm3,XMMWORD PTR [ecx+0x427a3b36]
  410491:	push   eax
  410492:	mov    edx,0x8ed2ddf5
  410497:	dec    ecx
  410498:	jne    0x41045e
  41049a:	test   edx,ebp
  41049c:	ret    0xbe3c
  41049f:	out    0x8b,al
  4104a1:	cld    
  4104a2:	clc    
  4104a3:	push   edi
  4104a4:	jmp    0x4104c9
  4104a6:	in     al,0x97
  4104a8:	or     al,0xaa
  4104aa:	adc    BYTE PTR [ebp+0x15],dl
  4104ad:	rol    BYTE PTR [ebp-0x6c1c1181],0x77
  4104b4:	(bad)  
  4104b5:	retf   0x654c
  4104b8:	cwde   
  4104b9:	and    dh,BYTE PTR [edi-0x6f]
  4104bc:	mov    BYTE PTR [esi-0x67],bl
  4104bf:	retf   
  4104c0:	ss xor eax,0xc52d6547
  4104c6:	inc    edx
  4104c7:	push   edi
  4104c8:	mov    bh,BYTE PTR [ecx-0x6eb5dae0]
  4104ce:	shl    DWORD PTR [eax-0x380fd3f2],0x21
  4104d5:	hlt    
  4104d6:	xchg   BYTE PTR [edi],bh
  4104d8:	in     eax,dx
  4104d9:	fbstp  TBYTE PTR [ecx+0x7590da4e]
  4104df:	in     eax,dx
  4104e0:	pop    esp
  4104e1:	pop    ds
  4104e2:	mov    WORD PTR [edi+ebp*8+0x2fcecd38],es
  4104e9:	and    BYTE PTR [esi],bl
  4104eb:	jae    0x4104db
  4104ed:	data16 and cl,ch
  4104f0:	enter  0x7a9f,0x5d
  4104f4:	pop    ds
  4104f5:	dec    ebp
  4104f6:	jns    0x410575
  4104f8:	in     ax,0x57
  4104fb:	sub    bl,al
  4104fd:	cmp    edi,DWORD PTR [ebp+0x4ec2ed62]
  410503:	aas    
  410504:	fcmovu st,st(0)
  410506:	rcr    DWORD PTR [esi-0x12ecdc21],0x39
  41050d:	jg     0x41057c
  41050f:	or     al,0x21
  410511:	(bad)  
  410512:	dec    edi
  410513:	(bad)  
  410515:	pop    edi
  410516:	in     eax,0xc2
  410518:	xor    BYTE PTR [edx-0x4e],al
  41051b:	cmp    al,0x43
  41051d:	loopne 0x41054a
  41051f:	push   esp
  410520:	test   al,0xf9
  410522:	fimul  WORD PTR [eax-0x52]
  410525:	pop    edi
  410526:	mov    al,ds:0x269d5f27
  41052b:	pop    edx
  41052c:	jl     0x410583
  41052e:	sub    al,0xdb
  410530:	ins    DWORD PTR es:[edi],dx
  410531:	sti    
  410532:	out    0xf6,al
  410534:	loop   0x410520
  410536:	mov    al,ds:0x7e7206f7
  41053b:	push   0xffffffdd
  41053d:	hlt    
  41053e:	icebp  
  41053f:	jl     0x410583
  410541:	lock mov cl,BYTE PTR [esi]
  410544:	cdq    
  410545:	dec    ebx
  410546:	jmp    0x4105c2
  410548:	lds    esi,FWORD PTR [ebx-0x29]
  41054b:	hlt    
  41054c:	inc    esp
  41054d:	adc    al,0xcb
  41054f:	pop    ds
  410550:	dec    eax
  410551:	(bad)  
  410553:	addr16 mov esi,0xaa696f3b
  410559:	inc    ebp
  41055a:	xor    BYTE PTR [edx-0xb7178ce],0xca
  410561:	push   ebp
  410562:	ja     0x410528
  410564:	dec    edx
  410565:	mov    ch,0xb9
  410567:	push   ebp
  410568:	leave  
  410569:	je     0x410541
  41056b:	in     eax,0xbd
  41056d:	or     DWORD PTR [eax],ebp
  41056f:	les    edx,FWORD PTR [ecx-0x5e]
  410572:	fwait
  410573:	enter  0x4cd6,0x1c
  410577:	aad    0x22
  410579:	push   ss
  41057a:	pop    edx
  41057b:	xchg   esp,eax
  41057c:	jmp    0x12faf5d1
  410581:	mov    ds:0xc66db729,al
  410586:	cvtps2pi mm4,QWORD PTR [ecx+0x37]
  41058a:	jb     0x41056f
  41058c:	cld    
  41058d:	hlt    
  41058e:	sub    al,0x9a
  410590:	jl     0x4105c3
  410592:	call   0x6b1:0xeb225fc2
  410599:	push   es
  41059a:	ud1    esi,DWORD PTR [ebx]
  41059d:	add    DWORD PTR [ecx+edx*4+0x61],ecx
  4105a1:	mov    eax,0xfb262783
  4105a6:	leave  
  4105a7:	mov    dl,0x40
  4105a9:	scas   al,BYTE PTR es:[edi]
  4105aa:	stc    
  4105ab:	imul   esi,ebx,0x9af0e61f
  4105b1:	or     eax,0xfce56e7d
  4105b6:	xchg   ecx,eax
  4105b7:	push   ebp
  4105b8:	loopne 0x4105a5
  4105ba:	xor    DWORD PTR [edx-0x2e205797],edx
  4105c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c1:	cwde   
  4105c2:	and    edx,DWORD PTR ds:0x93591cfc
  4105c8:	xor    DWORD PTR [esi+ebx*1-0x450003df],ebp
  4105cf:	mov    bl,0xe6
  4105d1:	test   BYTE PTR [edx+0xa],dh
  4105d4:	dec    esp
  4105d5:	or     BYTE PTR [ecx+0x14808b46],bh
  4105db:	outs   dx,DWORD PTR ds:[esi]
  4105dc:	stos   BYTE PTR es:[edi],al
  4105dd:	imul   edx,ecx,0xfffffff7
  4105e0:	cmp    eax,0x6c657883
  4105e5:	mov    bh,0x85
  4105e7:	sbb    esi,DWORD PTR [esi+edx*4-0x7093766d]
  4105ee:	scas   al,BYTE PTR es:[edi]
  4105ef:	inc    edx
  4105f0:	loope  0x41065d
  4105f2:	cli    
  4105f3:	jmp    0x43d9:0xe533a5bc
  4105fa:	loop   0x4105ea
  4105fc:	dec    ebp
  4105fd:	(bad)  
  4105fe:	mov    ds:0xaa088691,eax
  410603:	xchg   esi,eax
  410604:	pop    ebp
  410605:	in     eax,0x0
  410607:	sbb    esi,edi
  410609:	aaa    
  41060a:	sbb    dh,bl
  41060c:	out    0x7c,eax
  41060e:	add    eax,0xf28beeed
  410613:	in     al,dx
  410614:	adc    al,0xbe
  410616:	stos   DWORD PTR es:[edi],eax
  410617:	xchg   ebx,eax
  410618:	jnp    0x4105c7
  41061a:	fcom   DWORD PTR [ecx-0x275712b0]
  410620:	ds xchg ebp,eax
  410622:	xor    BYTE PTR [edx],ch
  410624:	dec    edx
  410625:	jnp    0x4105d1
  410627:	loop   0x4105e9
  410629:	std    
  41062a:	std    
  41062b:	xor    eax,0xeea99f09
  410630:	cmp    BYTE PTR ds:0x62b5769c,al
  410636:	sub    esi,ecx
  410638:	mov    WORD PTR [edi-0x3c],?
  41063b:	jmp    0x4105df
  41063d:	neg    edi
  41063f:	fcomp  DWORD PTR [edi+0x7d18ec7d]
  410645:	ss js  0x41061a
  410648:	aas    
  410649:	or     dl,BYTE PTR [esi-0x6fabeaf5]
  41064f:	in     al,dx
  410650:	retf   
  410651:	mov    ds:0x7019ca05,al
  410656:	adc    dl,0x12
  410659:	(bad)  [edi]
  41065b:	rcr    DWORD PTR fs:[eax+0x10],cl
  41065f:	xor    edi,ecx
  410661:	les    edi,FWORD PTR [ebx+0x26]
  410664:	mov    eax,ds:0x6a0b757f
  410669:	clc    
  41066a:	lock ins BYTE PTR es:[edi],dx
  41066c:	xchg   ecx,eax
  41066d:	pop    ebp
  41066e:	cmp    BYTE PTR [ebp-0x69],ah
  410671:	dec    edx
  410672:	pop    esp
  410673:	xchg   BYTE PTR [ecx],bl
  410675:	and    DWORD PTR [edx+0x5cf0f097],ebp
  41067b:	jne    0x410644
  41067d:	jmp    0xd5e9:0x2c815cf4
  410684:	fbstp  TBYTE PTR [eax-0x4a70eaf2]
  41068a:	ss aaa 
  41068c:	stos   DWORD PTR es:[edi],eax
  41068d:	or     DWORD PTR [eax],ebx
  41068f:	out    0xdc,al
  410691:	rcr    DWORD PTR [ecx+0x6c],0x65
  410695:	iret   
  410696:	fisub  WORD PTR [ebx-0x776aecb3]
  41069c:	cli    
  41069d:	repz jb 0x410626
  4106a0:	or     DWORD PTR [edx],ebx
  4106a2:	mov    ch,bl
  4106a4:	adc    ebp,DWORD PTR [esi-0x22]
  4106a7:	(bad)  
  4106a9:	inc    ebx
  4106aa:	ret    
  4106ab:	data16 sub cl,bl
  4106ae:	les    ebx,FWORD PTR [ebp-0x74]
  4106b1:	pop    edx
  4106b2:	sbb    BYTE PTR [edx+0x3d2e1d2c],bh
  4106b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106b9:	and    esp,DWORD PTR [ebp+0x7a]
  4106bc:	mov    ecx,DWORD PTR [ebx]
  4106be:	push   ds
  4106bf:	mov    dl,ch
  4106c1:	jne    0x410650
  4106c3:	test   DWORD PTR [ecx+0x27183b1],edx
  4106c9:	jg     0x41072c
  4106cb:	adc    DWORD PTR [eax-0x6a77fb88],esi
  4106d1:	cld    
  4106d2:	cdq    
  4106d3:	mov    ah,0x93
  4106d5:	sub    BYTE PTR [edx-0x698d81ca],ah
  4106db:	lahf   
  4106dc:	mov    BYTE PTR [esi+0x70],al
  4106df:	sti    
  4106e0:	mov    al,0x66
  4106e2:	aas    
  4106e3:	pop    ds
  4106e4:	(bad)  
  4106e5:	jo     0x4106cf
  4106e7:	rcr    DWORD PTR [edx+0x79bd62c6],cl
  4106ed:	into   
  4106ee:	loopne 0x4106cf
  4106f0:	dec    edx
  4106f1:	js     0x410760
  4106f3:	jo     0x4106a9
  4106f5:	lds    edi,FWORD PTR [esi]
  4106f7:	pop    ebp
  4106f8:	and    eax,0x8ff4f40c
  4106fd:	adc    esp,DWORD PTR [edi]
  4106ff:	mov    edx,0x448e04c7
  410704:	or     al,0xee
  410706:	test   BYTE PTR [ebx-0x39f50f59],0x6e
  41070d:	add    BYTE PTR [edx],dl
  41070f:	lods   al,BYTE PTR ds:[esi]
  410710:	int    0x64
  410712:	xor    al,0x2a
  410714:	mov    al,BYTE PTR [ecx+0x7]
  410717:	mov    ds:0x6ad2aa4d,eax
  41071c:	je     0x410719
  41071e:	inc    ecx
  41071f:	test   eax,0xfe58bc2a
  410724:	mov    bl,0x74
  410726:	clc    
  410727:	jno    0x410708
  410729:	adc    DWORD PTR ds:0x4c96de5f,ebx
  41072f:	call   0xd078:0x3c146317
  410736:	and    eax,DWORD PTR [eax-0x703c8a45]
  41073c:	push   cs
  41073d:	lods   al,BYTE PTR ds:[esi]
  41073e:	and    al,0xb5
  410740:	ins    DWORD PTR es:[edi],dx
  410741:	push   ecx
  410742:	dec    eax
  410743:	mov    edx,0x71913c99
  410748:	sub    ecx,DWORD PTR [edi-0x69]
  41074b:	mov    ebp,0xd5eafc88
  410750:	jmp    0x4106f5
  410752:	icebp  
  410753:	push   eax
  410754:	test   eax,0x494aff60
  410759:	mov    fs,edx
  41075b:	mov    fs,esp
  41075d:	aam    0x12
  41075f:	jecxz  0x410764
  410761:	xchg   edx,eax
  410762:	out    0x56,al
  410764:	aam    0x19
  410766:	fdivr  DWORD PTR [ebx-0x20]
  410769:	mov    ebp,edx
  41076b:	out    0xbc,eax
  41076d:	cmp    edx,DWORD PTR [ecx-0x4ef43616]
  410773:	inc    ecx
  410774:	adc    DWORD PTR [eax-0x1],ecx
  410777:	dec    ebp
  410778:	jge    0x41073f
  41077a:	pop    es
  41077b:	psubw  mm7,QWORD PTR [ebp+0x65]
  41077f:	mov    esi,0x12b297aa
  410784:	sar    DWORD PTR [edx+0x1a],0x7e
  410788:	jnp    0x4107e0
  41078a:	jmp    0xd0c3859a
  41078f:	test   DWORD PTR [edx+esi*4+0x64],esi
  410793:	xor    al,0xf8
  410795:	sar    DWORD PTR [ecx+0x1e002510],cl
  41079b:	add    dh,BYTE PTR [esi+0x1d17131c]
  4107a1:	jecxz  0x41078e
  4107a3:	leave  
  4107a4:	out    0xb1,al
  4107a6:	and    eax,0xd68041e1
  4107ab:	in     eax,dx
  4107ac:	cmp    al,0xbd
  4107ae:	sub    BYTE PTR [edx-0x36],0x6e
  4107b2:	mov    ecx,esp
  4107b4:	fist   DWORD PTR [eax]
  4107b6:	retf   0x7e44
  4107b9:	(bad)  
  4107ba:	xchg   ecx,eax
  4107bb:	mov    bh,0x4e
  4107bd:	imul   edx,DWORD PTR [edx+0x8],0x558e582e
  4107c4:	mov    edi,eax
  4107c6:	dec    ebx
  4107c7:	xor    BYTE PTR [ebp-0x14d2915a],ch
  4107cd:	shl    DWORD PTR [eax+0x58],1
  4107d0:	ret    0x12c9
  4107d3:	in     al,dx
  4107d4:	add    BYTE PTR [edi+0x6f09c6cb],dh
  4107da:	mov    dh,0x9e
  4107dc:	sar    DWORD PTR [ecx+0x29],cl
  4107df:	dec    edx
  4107e0:	outs   dx,WORD PTR ds:[esi]
  4107e2:	xchg   esi,eax
  4107e3:	mov    cl,0x1a
  4107e5:	cmp    edi,eax
  4107e7:	xchg   ebp,eax
  4107e8:	cld    
  4107e9:	pop    esp
  4107ea:	xor    ecx,esp
  4107ec:	enter  0x47ab,0xf2
  4107f0:	mov    eax,ds:0xc6f278a6
  4107f5:	shr    BYTE PTR [edx-0x33ab44fb],1
  4107fb:	(bad)  [esi]
  4107fd:	mov    ah,0xda
  4107ff:	shr    DWORD PTR [eax],cl
  410801:	inc    esp
  410802:	inc    edx
  410803:	xor    cl,BYTE PTR [ecx+0x433f4c5c]
  410809:	cmovg  edi,esp
  41080c:	or     BYTE PTR gs:0x17fad270,dh
  410813:	dec    ebp
  410814:	mov    ebp,0x4ee18750
  410819:	ja     0x410854
  41081b:	pop    ebp
  41081c:	cmp    dl,dh
  41081e:	inc    ebp
  41081f:	push   ebp
  410820:	out    0xb2,eax
  410822:	add    eax,0xd27ae58f
  410827:	sbb    al,0xb3
  410829:	xchg   edx,eax
  41082a:	mov    bl,BYTE PTR [ebx]
  41082c:	sub    al,0x32
  41082e:	pushf  
  41082f:	mov    eax,ds:0x9f647ee6
  410834:	mov    ds:0x2fedcaa7,eax
  410839:	pushf  
  41083a:	out    0xf2,al
  41083c:	lea    ebp,[ebp+0x55512b71]
  410842:	adc    eax,ebp
  410844:	mov    ds,ecx
  410846:	pop    ds
  410847:	xchg   edi,eax
  410848:	adc    ecx,DWORD PTR [edx+0x17]
  41084b:	xchg   ebp,eax
  41084c:	fwait
  41084d:	dec    edx
  41084e:	arpl   ax,dx
  410850:	pop    edi
  410851:	add    DWORD PTR [ebp-0x62],eax
  410854:	scas   eax,DWORD PTR es:[edi]
  410855:	retf   
  410856:	jno    0x410869
  410858:	ficomp DWORD PTR [ebp+edi*8+0x6e]
  41085c:	pop    ebp
  41085d:	jg     0x41082e
  41085f:	ja     0x41087a
  410861:	jo     0x41082f
  410863:	in     al,0xc
  410865:	adc    DWORD PTR [eax-0x4fb13612],edi
  41086b:	inc    ebx
  41086c:	mov    edx,0x734a0f54
  410871:	add    dh,BYTE PTR [edx-0x7]
  410874:	cmp    al,0xdb
  410876:	add    BYTE PTR [ecx+edi*4],al
  410879:	dec    edx
  41087a:	mov    eax,0xbe1a1a2b
  41087f:	mov    bh,BYTE PTR ds:0x7458e2
  410885:	repz test BYTE PTR ds:0xfc9814b2,dl
  41088d:	dec    edx
  41088e:	inc    ecx
  41088f:	cdq    
  410890:	iret   
  410891:	cs std 
  410893:	out    dx,eax
  410894:	es shl ah,cl
  410897:	xchg   ebx,eax
  410898:	push   esi
  410899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41089a:	mov    DWORD PTR [edx+0x56],edx
  41089d:	sbb    dh,BYTE PTR [bx]
  4108a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108a1:	and    DWORD PTR [ebp-0x5],edx
  4108a4:	mov    ebp,0x46ea0b54
  4108a9:	dec    esp
  4108aa:	cli    
  4108ab:	cli    
  4108ac:	enter  0x87e7,0xaf
  4108b0:	mov    ch,BYTE PTR [ebx-0x59b76fe0]
  4108b6:	mov    ebp,0xf8888a
  4108bb:	mov    ds:0xa82457ff,eax
  4108c0:	sahf   
  4108c1:	add    eax,0xcfc5c9bc
  4108c6:	int3   
  4108c7:	xor    DWORD PTR [ebx],esi
  4108c9:	jae    0x410878
  4108cb:	mov    ah,0x1a
  4108cd:	mov    al,0x4a
  4108cf:	dec    DWORD PTR [esi]
  4108d1:	fs xchg ecx,eax
  4108d3:	adc    bh,BYTE PTR [eax+0x6f]
  4108d6:	lods   eax,DWORD PTR ds:[esi]
  4108d7:	push   edx
  4108d8:	les    esi,FWORD PTR [eax]
  4108da:	out    dx,eax
  4108db:	jmp    0x410903
  4108dd:	(bad)  fs:[eax+0x7e]
  4108e1:	xchg   DWORD PTR [esi+0x5863068],ebp
  4108e7:	out    dx,eax
  4108e8:	rcl    DWORD PTR [ecx-0x32],1
  4108eb:	jg     0x410929
  4108ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ee:	push   esi
  4108ef:	sbb    bh,BYTE PTR [edi-0x288be76b]
  4108f5:	sub    cl,ch
  4108f7:	imul   ebx,DWORD PTR [edi-0x19],0x40c5e25a
  4108fe:	imul   edi,DWORD PTR ds:0xbd667df5,0x8a2a499d
  410908:	es dec esp
  41090a:	outs   dx,DWORD PTR ds:[esi]
  41090b:	iret   
  41090c:	inc    esp
  41090d:	mov    al,ds:0xeeaa401c
  410912:	mov    eax,ds:0xd175138f
  410917:	hlt    
  410918:	cmp    eax,0x551a0f3f
  41091d:	mov    ah,0xad
  41091f:	xor    al,0xf1
  410921:	xor    bl,BYTE PTR [esi]
  410923:	pop    eax
  410924:	or     BYTE PTR [esi+eax*8+0x71],0xa8
  410929:	aam    0x3f
  41092b:	stos   DWORD PTR es:[edi],eax
  41092c:	sbb    esp,DWORD PTR [edx]
  41092e:	lods   al,BYTE PTR ds:[esi]
  41092f:	retf   
  410930:	lods   al,BYTE PTR ds:[esi]
  410931:	std    
  410932:	out    0x6b,eax
  410934:	add    DWORD PTR [ebx+0x27],edx
  410937:	inc    esp
  410938:	out    dx,eax
  410939:	fwait
  41093a:	pusha  
  41093b:	out    dx,eax
  41093c:	xchg   ecx,eax
  41093d:	rcr    BYTE PTR [edx-0x27],0x9e
  410941:	and    bh,BYTE PTR [esi]
  410943:	sbb    al,BYTE PTR [edi+0x1b]
  410946:	out    dx,al
  410947:	in     eax,dx
  410948:	cmp    BYTE PTR [edx],ch
  41094a:	arpl   cx,ax
  41094c:	xor    BYTE PTR [edi],cl
  41094e:	pop    edi
  41094f:	cmp    DWORD PTR [ebp-0x25d1fe21],0xffffffce
  410956:	xor    BYTE PTR [esi+esi*4-0x3167f5d7],cl
  41095d:	cli    
  41095e:	ins    BYTE PTR es:[edi],dx
  41095f:	cld    
  410960:	neg    bh
  410962:	leave  
  410963:	js     0x410961
  410965:	push   es
  410966:	cli    
  410967:	jns    0x410927
  410969:	scas   al,BYTE PTR es:[edi]
  41096a:	dec    ecx
  41096b:	push   edx
  41096c:	mov    dl,0x5
  41096e:	inc    ebp
  41096f:	push   es
  410970:	sbb    dh,dl
  410972:	loope  0x410925
  410974:	adc    DWORD PTR [ebx],esi
  410976:	cwde   
  410977:	xchg   esp,eax
  410978:	xor    BYTE PTR [ecx-0x7],al
  41097b:	xor    ah,bl
  41097d:	repz daa 
  41097f:	xchg   esi,eax
  410980:	fst    DWORD PTR [edi+0x5d4a2428]
  410986:	or     esi,DWORD PTR [ebx+0x40]
  410989:	cdq    
  41098a:	in     al,dx
  41098b:	stc    
  41098c:	xchg   ebx,eax
  41098d:	cmp    eax,DWORD PTR [esp+ebx*2]
  410990:	pop    ebp
  410991:	dec    edi
  410992:	cdq    
  410993:	lods   eax,DWORD PTR ds:[esi]
  410994:	add    edx,DWORD PTR [edx+0x74]
  410997:	cs inc ecx
  410999:	mov    eax,0x27d36dfc
  41099e:	test   DWORD PTR [edx+0x41],esi
  4109a1:	dec    esp
  4109a2:	cmp    BYTE PTR [eax-0x60],cl
  4109a5:	jnp    0x410930
  4109a7:	jnp    0x4109ac
  4109a9:	mov    dl,0x6b
  4109ab:	shr    esp,0x1f
  4109ae:	xlat   BYTE PTR ds:[ebx]
  4109af:	mov    ah,0xfb
  4109b1:	xchg   DWORD PTR [edx-0x42],ecx
  4109b4:	cmp    edi,ebx
  4109b6:	xor    ah,al
  4109b8:	push   es
  4109b9:	mov    al,0x26
  4109bb:	mov    ah,0xaf
  4109bd:	fbstp  TBYTE PTR [edi+0x73d20f10]
  4109c3:	sbb    DWORD PTR [ebp+0x0],eax
  4109c6:	(bad)  
  4109c8:	and    ebp,DWORD PTR [esi-0x295ecb9e]
  4109ce:	and    bh,bl
  4109d0:	pop    edx
  4109d1:	pop    edi
  4109d2:	pop    ds
  4109d3:	push   cs
  4109d4:	jge    0x4109e8
  4109d6:	ror    DWORD PTR [edx+0x4],cl
  4109d9:	vmwrite ecx,DWORD PTR [ebx]
  4109dc:	fcmovnbe st,st(6)
  4109de:	int    0xf4
  4109e0:	repz cmp al,0xbf
  4109e3:	xchg   ebx,eax
  4109e4:	dec    eax
  4109e5:	mov    bh,0xde
  4109e7:	shr    BYTE PTR [eax],cl
  4109e9:	fiadd  WORD PTR [edx+0x3c9b3175]
  4109ef:	fisub  DWORD PTR [esi]
  4109f1:	jbe    0x4109f7
  4109f3:	xor    DWORD PTR [esp+ebp*1+0x5999595f],edx
  4109fa:	in     al,dx
  4109fb:	popf   
  4109fc:	stc    
  4109fd:	xchg   esp,eax
  4109fe:	jne    0x410984
  410a00:	jge    0x4109b9
  410a02:	or     DWORD PTR [ebx-0x4b],ecx
  410a05:	push   edx
  410a07:	ins    DWORD PTR es:[edi],dx
  410a08:	rcr    DWORD PTR [ecx],cl
  410a0a:	adc    dl,bh
  410a0c:	cmp    esp,DWORD PTR [esi-0x78]
  410a0f:	dec    ebx
  410a10:	xor    DWORD PTR [ebx-0x7e],edx
  410a13:	inc    edi
  410a14:	push   esi
  410a15:	lahf   
  410a16:	jns    0x4109d0
  410a18:	mov    ebp,DWORD PTR [eax]
  410a1a:	xchg   ebp,eax
  410a1b:	xchg   esp,eax
  410a1c:	sbb    al,0xda
  410a1e:	and    cl,BYTE PTR [ebx]
  410a20:	nop
  410a21:	fyl2xp1 
  410a23:	pop    ss
  410a24:	nop
  410a25:	jmp    0x410a55
  410a27:	int    0xad
  410a29:	mov    esp,ds
  410a2b:	adc    dh,dl
  410a2d:	mov    ah,0xa7
  410a2f:	mov    ecx,0x9e5a1e99
  410a34:	xor    eax,0x7aeef7d
  410a39:	out    0x14,eax
  410a3b:	ins    BYTE PTR es:[edi],dx
  410a3c:	ror    DWORD PTR [ecx],0xca
  410a3f:	mov    dl,0x7b
  410a41:	and    DWORD PTR [edx],esp
  410a43:	js     0x410abe
  410a45:	add    eax,0xbe7a8243
  410a4a:	pop    ss
  410a4b:	cmp    DWORD PTR [edi-0xa8becde],eax
  410a51:	int    0xbe
  410a53:	je     0x410abc
  410a55:	out    0x50,eax
  410a57:	lea    ebx,[edi-0x1cc984a8]
  410a5d:	fstp   DWORD PTR [esi]
  410a5f:	adc    al,0x7e
  410a61:	pop    edi
  410a62:	add    bh,ch
  410a64:	cli    
  410a65:	push   0x5d
  410a67:	aaa    
  410a68:	fdecstp 
  410a6a:	stos   DWORD PTR es:[edi],eax
  410a6b:	(bad)  
  410a6c:	ins    BYTE PTR es:[edi],dx
  410a6d:	loopne 0x410a6c
  410a6f:	push   0xffffffcf
  410a71:	ins    DWORD PTR es:[edi],dx
  410a72:	shr    bh,0xa
  410a75:	adc    ecx,DWORD PTR [eax+0x7a417fc9]
  410a7b:	fiadd  DWORD PTR [ebx-0x59]
  410a7e:	call   0x7dbdc4a1
  410a83:	nop
  410a84:	shl    BYTE PTR [edx-0x34859f90],cl
  410a8a:	pop    edx
  410a8b:	mov    cl,BYTE PTR [edx]
  410a8d:	sahf   
  410a8e:	jbe    0x410a3e
  410a90:	popf   
  410a91:	gs neg ebp
  410a94:	push   ebx
  410a95:	sub    esi,DWORD PTR [ebx-0x4cae2103]
  410a9b:	imul   ebp,ebp,0xa8e8c95
  410aa1:	arpl   bp,ax
  410aa3:	add    BYTE PTR [edi],bl
  410aa5:	or     BYTE PTR [esi+0x50],cl
  410aa8:	fcom   DWORD PTR ds:0xfcfb7592
  410aae:	(bad)  
  410aaf:	inc    edx
  410ab0:	retf   0xaf1e
  410ab3:	push   ss
  410ab4:	dec    eax
  410ab5:	pop    ecx
  410ab6:	leave  
  410ab7:	cmp    al,0x2d
  410ab9:	stos   BYTE PTR es:[edi],al
  410aba:	push   ss
  410abb:	sbb    al,0xed
  410abd:	push   eax
  410abe:	cmp    ebp,DWORD PTR [ecx-0x6c]
  410ac1:	mov    eax,0xd716f998
  410ac6:	inc    ecx
  410ac7:	jmp    0x410ae8
  410ac9:	imul   esi,DWORD PTR [esi],0xffffffba
  410acc:	cmp    ebx,0x82fd7d71
  410ad2:	adc    esp,DWORD PTR [ecx+0x552ec664]
  410ad8:	push   es
  410ad9:	ss leave 
  410adb:	ds push esp
  410add:	mov    ds:0xb303090,eax
  410ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae3:	and    ecx,DWORD PTR [ecx+0x7d]
  410ae6:	mov    ds:0xb346a04f,eax
  410aeb:	(bad)  
  410aec:	xlat   BYTE PTR ds:[ebx]
  410aed:	in     eax,0x9
  410aef:	cwde   
  410af0:	or     al,0x18
  410af3:	push   ebp
  410af4:	pusha  
  410af5:	inc    ecx
  410af6:	inc    ebp
  410af7:	mov    bh,0xbd
  410af9:	fild   WORD PTR [edx]
  410afb:	jmp    0x18d3:0x68d7a068
  410b02:	pop    esp
  410b03:	xchg   BYTE PTR [eax-0x23],dl
  410b06:	call   0xa2b8646c
  410b0b:	sbb    al,0x0
  410b0d:	call   0xe8f2:0x306aa242
  410b14:	jge    0x410b06
  410b16:	into   
  410b17:	ins    DWORD PTR es:[edi],dx
  410b18:	jle    0x410b84
  410b1a:	xchg   BYTE PTR [edx+0x67],al
  410b1d:	mov    cl,0x7c
  410b1f:	stos   DWORD PTR es:[edi],eax
  410b20:	ins    BYTE PTR es:[edi],dx
  410b21:	bsf    eax,DWORD PTR [eax+0x2d]
  410b25:	out    dx,al
  410b26:	adc    DWORD PTR gs:[ebp+0x34036ad1],esi
  410b2d:	int3   
  410b2e:	lock mov ah,0xd1
  410b31:	inc    eax
  410b32:	inc    esi
  410b33:	or     BYTE PTR [eax+0x2328086d],ch
  410b39:	leave  
  410b3a:	sub    ch,BYTE PTR [eax]
  410b3c:	adc    eax,0xa7b0a173
  410b41:	cmp    BYTE PTR [edx+0x3cf6e67b],al
  410b47:	lods   eax,DWORD PTR ds:[esi]
  410b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4a:	jmp    0x410ba4
  410b4c:	mov    ebp,0x5afbf19
  410b51:	mov    eax,ecx
  410b53:	retf   0x8ef6
  410b56:	fucomi st,st(2)
  410b58:	mov    ?,WORD PTR [edi]
  410b5a:	lods   al,BYTE PTR ds:[esi]
  410b5b:	inc    DWORD PTR [ebx+esi*2]
  410b5e:	sbb    BYTE PTR [ecx],al
  410b60:	add    eax,0xbdfcb032
  410b65:	dec    eax
  410b66:	fdiv   QWORD PTR [ebx-0x6d8fdd51]
  410b6c:	sub    DWORD PTR [esi-0x3b3cf0b9],esp
  410b72:	inc    ebx
  410b73:	ja     0x410b6e
  410b75:	aas    
  410b76:	cmp    ebx,DWORD PTR [ecx+0x30]
  410b79:	mov    dl,BYTE PTR [ebp+0x2e]
  410b7c:	mov    ss,WORD PTR [edi-0x754ea9e3]
  410b82:	and    al,0x2
  410b84:	pop    ebx
  410b85:	or     edi,DWORD PTR [esi]
  410b87:	cmc    
  410b88:	jle    0x410b9e
  410b8a:	dec    eax
  410b8b:	mov    ebx,0x4a0d0cf1
  410b90:	mov    al,0xc
  410b92:	aas    
  410b93:	stc    
  410b94:	cwde   
  410b95:	cmp    edi,0x11f7c02f
  410b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b9c:	dec    ebp
  410b9d:	push   ecx
  410b9e:	ds call 0x7cc1:0xa48b7ad4
  410ba6:	popa   
  410ba7:	ret    0xd3b9
  410baa:	jmp    0xf0fd38de
  410baf:	hlt    
  410bb0:	cli    
  410bb1:	xchg   edi,eax
  410bb2:	or     edx,ecx
  410bb4:	ret    
  410bb5:	cmp    ebx,0xffffffd7
  410bb8:	jecxz  0x410b60
  410bba:	adc    al,0x2
  410bbc:	pusha  
  410bbd:	pop    ecx
  410bbe:	outs   dx,BYTE PTR ds:[esi]
  410bbf:	in     eax,dx
  410bc0:	push   edi
  410bc1:	push   ecx
  410bc2:	xchg   esp,eax
  410bc3:	cdq    
  410bc4:	push   edi
  410bc5:	push   esp
  410bc6:	in     al,dx
  410bc7:	fld    st(2)
  410bc9:	jo     0x410c13
  410bcb:	aad    0x40
  410bcd:	into   
  410bce:	push   ebx
  410bcf:	xor    dl,ah
  410bd1:	xor    eax,0xad37713a
  410bd6:	xor    bl,BYTE PTR [edx]
  410bd8:	xchg   edx,eax
  410bd9:	xchg   ecx,eax
  410bda:	dec    ecx
  410bdb:	and    bh,BYTE PTR [ecx]
  410bdd:	js     0x410c2f
  410bdf:	xor    DWORD PTR [edx],ebx
  410be1:	outs   dx,BYTE PTR ds:[esi]
  410be2:	inc    esp
  410be3:	mov    ebp,0xaf08c5bc
  410be8:	je     0x410c1a
  410bea:	repz rcr DWORD PTR [ecx+0x139d98b7],cl
  410bf1:	inc    eax
  410bf2:	push   esp
  410bf3:	inc    edx
  410bf4:	sub    edi,DWORD PTR [edi+0x68]
  410bf7:	js     0x410b79
  410bf9:	xchg   ecx,eax
  410bfa:	fdiv   st,st(0)
  410bfc:	out    0x21,eax
  410bfe:	icebp  
  410bff:	iret   
  410c00:	cmp    eax,DWORD PTR [ebx-0x7b]
  410c03:	xor    ebp,DWORD PTR [esi-0x50]
  410c06:	(bad)  
  410c07:	cli    
  410c08:	je     0x410bb8
  410c0a:	fwait
  410c0b:	add    DWORD PTR [eax-0x24801a51],edi
  410c11:	into   
  410c12:	adc    eax,0x3c5ec52e
  410c17:	sub    al,0x54
  410c19:	(bad)  
  410c1a:	push   ebp
  410c1b:	enter  0xff24,0x3e
  410c1f:	gs ja  0x410c12
  410c22:	std    
  410c23:	mul    BYTE PTR [eax+edi*2]
  410c26:	(bad)  
  410c27:	mov    eax,0xb70a7555
  410c2c:	pop    ds
  410c2d:	pop    ebp
  410c2e:	ret    0x5af0
  410c31:	pop    edi
  410c32:	xor    DWORD PTR [ecx-0x605722fc],ecx
  410c38:	push   eax
  410c39:	pop    edx
  410c3a:	mov    al,ds:0x77cf9741
  410c3f:	add    ecx,DWORD PTR [ebp+0x6bd20040]
  410c45:	call   0xf7ab:0xab5ecbc2
  410c4c:	ret    0xc4be
  410c4f:	pushf  
  410c50:	ss mov bh,0x11
  410c53:	xchg   esp,eax
  410c54:	mov    ah,0x31
  410c56:	std    
  410c57:	xchg   edx,eax
  410c58:	sbb    bh,cl
  410c5a:	stos   BYTE PTR es:[edi],al
  410c5b:	adc    DWORD PTR [ebp+0x36fd017b],edx
  410c61:	test   al,0x33
  410c63:	fstp   DWORD PTR [eax-0x25a09c46]
  410c69:	sbb    dh,BYTE PTR [eax+0x7a6f81c3]
  410c6f:	push   esp
  410c70:	inc    edx
  410c71:	icebp  
  410c72:	push   ebp
  410c73:	mov    ecx,0xc1af2ac
  410c78:	test   DWORD PTR [esi+0x14],ebp
  410c7b:	(bad)  [esi+0x3e0c6c5e]
  410c81:	xchg   DWORD PTR [ebx+0x30],eax
  410c84:	jmp    0x7172:0xea3e21c8
  410c8b:	(bad)  
  410c8d:	sbb    edx,DWORD PTR [edx]
  410c8f:	enter  0xf09d,0xbc
  410c93:	nop
  410c94:	pop    ebx
  410c95:	dec    BYTE PTR [edi+edx*1]
  410c98:	dec    ebp
  410c99:	mov    ch,0xca
  410c9b:	mov    DWORD PTR [ebx-0x4e394e7c],eax
  410ca1:	ds xchg ebp,eax
  410ca3:	sbb    dl,ah
  410ca5:	int3   
  410ca6:	retf   0xdac8
  410ca9:	mov    dl,bl
  410cab:	dec    esp
  410cac:	scas   eax,DWORD PTR es:[edi]
  410cad:	call   0xe9f3:0xd533c3e6
  410cb4:	leave  
  410cb5:	sbb    eax,0xe1896e
  410cba:	scas   al,BYTE PTR es:[edi]
  410cbb:	push   ds
  410cbc:	mov    edx,0xeb41b3b1
  410cc1:	adc    ah,BYTE PTR [ebx]
  410cc3:	stc    
  410cc4:	imul   ebp,ecx,0x8248b56c
  410cca:	xor    eax,0x9d22e889
  410ccf:	jnp    0x410c9f
  410cd1:	lods   al,BYTE PTR ds:[esi]
  410cd2:	xchg   DWORD PTR ds:0x666f75c9,ecx
  410cd8:	sub    DWORD PTR [esi-0x26],0x2d6cdd1f
  410cdf:	adc    DWORD PTR [esi],eax
  410ce1:	jns    0x410cbd
  410ce3:	jae    0x410c83
  410ce5:	out    0xf,al
  410ce7:	retf   0x8981
  410cea:	pop    ss
  410ceb:	xchg   edi,eax
  410cec:	push   0xc2b172d1
  410cf1:	jge    0x410d11
  410cf3:	ja     0x410d11
  410cf5:	mov    eax,0x5aac65b4
  410cfa:	call   FWORD PTR [edi-0x1]
  410cfd:	test   DWORD PTR [esi+0x1],ecx
  410d00:	fmul   QWORD PTR [edx+0x7d191dca]
  410d06:	sar    BYTE PTR [ebx-0x40029370],cl
  410d0c:	pop    ecx
  410d0d:	icebp  
  410d0e:	adc    esp,edx
  410d10:	cli    
  410d11:	xchg   esp,eax
  410d12:	lods   eax,DWORD PTR ds:[esi]
  410d13:	xchg   BYTE PTR [edi+0x445f4f4b],cl
  410d19:	mov    ah,0x50
  410d1b:	pop    edx
  410d1c:	mov    ah,0xd8
  410d1e:	cmp    eax,0xd857bc07
  410d23:	int    0xd1
  410d25:	sub    BYTE PTR fs:[edx-0x3868ecda],cl
  410d2c:	xchg   esi,eax
  410d2d:	inc    edx
  410d2e:	leave  
  410d2f:	sub    BYTE PTR [ebx],al
  410d31:	test   al,0x4f
  410d33:	dec    eax
  410d34:	jo     0x410d0f
  410d36:	cli    
  410d37:	test   DWORD PTR [edx+0x7b],esp
  410d3a:	(bad)  
  410d3b:	shr    BYTE PTR [esi+0x250c37c2],0xd1
  410d42:	xor    ebx,DWORD PTR [edx-0x8]
  410d45:	xor    edi,DWORD PTR ds:0x458dd3b2
  410d4b:	jmp    DWORD PTR [edx+eiz*1+0x7fd5bb13]
  410d52:	aad    0x26
  410d54:	mov    eax,edx
  410d56:	ja     0x410cf8
  410d58:	xchg   edi,eax
  410d59:	sti    
  410d5a:	jmp    0x410ce2
  410d5c:	pop    esi
  410d5d:	es dec eax
  410d5f:	lock int 0xba
  410d62:	dec    edx
  410d63:	sar    cl,0xbf
  410d66:	fndisi(8087 only) 
  410d68:	and    al,0x3b
  410d6a:	(bad)  
  410d6b:	push   ebp
  410d6c:	imul   ebp,DWORD PTR [edx-0x32],0xf8cfc9ff
  410d73:	push   esi
  410d74:	jbe    0x410d47
  410d76:	cmp    ah,BYTE PTR [edi-0x4b186ada]
  410d7c:	inc    esp
  410d7d:	or     dl,al
  410d7f:	jb     0x410de6
  410d81:	push   0x2b
  410d83:	dec    edi
  410d84:	int    0xff
  410d86:	mov    BYTE PTR [edx+eiz*2+0x46cfe7cf],al
  410d8d:	cld    
  410d8e:	or     al,0x68
  410d90:	test   DWORD PTR [esi-0x68],ecx
  410d93:	xor    eax,0xd8cc11d2
  410d98:	fsub   DWORD PTR [eax+eiz*8+0x23e5d232]
  410d9f:	mov    WORD PTR [ecx+0x18558ca],ds
  410da5:	xor    edi,DWORD PTR [ecx-0xd31b44a]
  410dab:	cmp    eax,0xf14926b
  410db0:	lods   eax,DWORD PTR ds:[esi]
  410db1:	inc    edx
  410db2:	inc    edx
  410db3:	push   eax
  410db4:	cmp    DWORD PTR [edx],0xffffffe4
  410db7:	out    dx,al
  410db8:	ret    
  410db9:	xchg   ebp,eax
  410dba:	push   es
  410dbb:	push   ebp
  410dbc:	imul   edx,DWORD PTR [edx-0x70b6ff22],0xe52b5ece
  410dc6:	icebp  
  410dc7:	int3   
  410dc8:	mov    ?,WORD PTR cs:[esi]
  410dcb:	xchg   esp,eax
  410dcc:	inc    ebp
  410dcd:	test   edx,ebx
  410dcf:	gs in  eax,dx
  410dd1:	in     al,0x7f
  410dd3:	sub    eax,0x4e4a9e66
  410dd8:	mov    ch,0xef
  410dda:	cmp    ecx,esp
  410ddc:	aas    
  410ddd:	nop
  410dde:	neg    BYTE PTR [eax-0x6a60e5d3]
  410de4:	jg     0x410e0b
  410de6:	daa    
  410de7:	dec    edi
  410de8:	or     DWORD PTR [edi],ecx
  410dea:	jno    0x410e61
  410dec:	pop    ecx
  410ded:	std    
  410dee:	inc    edx
  410def:	dec    ecx
  410df0:	mov    BYTE PTR [ebx+eax*8],bh
  410df3:	dec    esi
  410df4:	xor    BYTE PTR [eax+0x2c],dh
  410df7:	sahf   
  410df8:	pop    es
  410df9:	test   al,0x96
  410dfb:	fidiv  WORD PTR [ebp-0x2f24cb73]
  410e01:	xchg   ecx,eax
  410e02:	inc    edx
  410e03:	mov    edi,0x1b4417d5
  410e08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e0a:	jno    0x410db6
  410e0c:	push   DWORD PTR [ecx+0x28889b12]
  410e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e13:	and    al,0xf7
  410e15:	mov    esp,0xaf4a8c74
  410e1a:	retf   0xdc22
  410e1d:	lods   al,BYTE PTR ds:[esi]
  410e1e:	stc    
  410e1f:	fwait
  410e20:	js     0x410e3c
  410e22:	jp     0x410e23
  410e24:	es jno 0x410dea
  410e27:	pop    ss
  410e28:	loope  0x410df4
  410e2a:	mov    DWORD PTR [eax+eax*8],esp
  410e2d:	outs   dx,DWORD PTR ds:[esi]
  410e2e:	pop    edx
  410e2f:	nop
  410e30:	jnp    0x410e16
  410e32:	jg     0x410dd4
  410e34:	iret   
  410e35:	dec    eax
  410e36:	(bad)  
  410e37:	test   eax,0x2716ea2b
  410e3c:	popf   
  410e3d:	pop    esi
  410e3e:	xchg   ebp,eax
  410e3f:	out    dx,al
  410e40:	adc    eax,0xb820a28e
  410e45:	fnsetpm(287 only) 
  410e47:	xor    BYTE PTR [ecx],al
  410e49:	popa   
  410e4a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e4c:	jg     0x410e5c
  410e4e:	out    0x61,eax
  410e50:	push   cs
  410e51:	xchg   DWORD PTR [ecx+0x7f71abe7],ebx
  410e57:	iret   
  410e58:	in     al,0x67
  410e5a:	xlat   BYTE PTR ds:[ebx]
  410e5b:	iret   
  410e5c:	xor    DWORD PTR [ebx],edx
  410e5e:	pushf  
  410e5f:	lock or edx,edx
  410e62:	and    DWORD PTR [edx+edi*1+0x309796bf],edx
  410e69:	inc    ebx
  410e6a:	rcr    ah,cl
  410e6c:	in     al,dx
  410e6d:	repnz add dh,BYTE PTR [esi+0x37]
  410e71:	(bad)  
  410e72:	aad    0xfb
  410e74:	iret   
  410e75:	scas   eax,DWORD PTR es:[edi]
  410e76:	or     eax,0x65303002
  410e7b:	aas    
  410e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e7d:	daa    
  410e7e:	retf   0xbd49
  410e81:	or     BYTE PTR [edx-0x14],ch
  410e84:	(bad)  
  410e85:	jmp    0xa175:0x9af143a9
  410e8c:	fst    QWORD PTR [edi-0x6e]
  410e8f:	retf   0xbb38
  410e92:	aad    0xeb
  410e94:	and    al,0x64
  410e96:	mov    bl,0x84
  410e98:	ins    DWORD PTR es:[edi],dx
  410e99:	push   esi
  410e9a:	out    0xef,al
  410e9c:	push   ds
  410e9d:	mov    bh,0xb6
  410e9f:	(bad)  [edi-0x19]
  410ea2:	setb   bh
  410ea5:	bound  ebp,QWORD PTR [eax]
  410ea7:	add    BYTE PTR [eax],ch
  410ea9:	lods   eax,DWORD PTR ds:[esi]
  410eaa:	push   esi
  410eab:	and    al,BYTE PTR ds:0x709b7278
  410eb1:	iret   
  410eb2:	dec    ebp
  410eb3:	pop    ebx
  410eb4:	sbb    al,cl
  410eb6:	out    dx,eax
  410eb7:	sbb    eax,0x80d6fa9a
  410ebc:	add    DWORD PTR [ebp+0x16],0x1a3256c9
  410ec3:	in     al,0x45
  410ec5:	xor    edx,esp
  410ec7:	retf   0xfbb5
  410eca:	scas   al,BYTE PTR es:[edi]
  410ecb:	sbb    BYTE PTR [edi+0x31],al
  410ece:	jl     0x410eaf
  410ed0:	fdiv   DWORD PTR [ebx]
  410ed2:	fcmove st,st(0)
  410ed4:	sbb    DWORD PTR ds:0x2c48a121,edx
  410eda:	jle    0x410e78
  410edc:	mov    dh,0x2e
  410ede:	lahf   
  410edf:	imul   edx,ecx,0xffffffb2
  410ee2:	test   eax,0x684ae321
  410ee7:	sbb    eax,0x7ef3b794
  410eec:	and    eax,0x9854d66e
  410ef1:	add    edx,DWORD PTR [esi+edi*4]
  410ef4:	push   esp
  410ef5:	aam    0x5d
  410ef7:	adc    DWORD PTR [edi+0x4b],esi
  410efa:	sub    edx,DWORD PTR [ecx+0x16c2f11f]
  410f00:	push   ss
  410f01:	in     eax,0x19
  410f03:	mov    BYTE PTR [ebx-0x77e4085a],al
  410f09:	jp     0x410efe
  410f0b:	mov    cl,0x3f
  410f0d:	push   es
  410f0e:	jae    0x410f8e
  410f10:	loopne 0x410ec8
  410f12:	jmp    0xae36:0x67982eb3
  410f19:	es pop dx
  410f1c:	sbb    ecx,ebx
  410f1e:	ror    eax,0x25
  410f21:	cmc    
  410f22:	mov    edi,0x42bab933
  410f27:	cli    
  410f28:	and    DWORD PTR [eax],eax
  410f2a:	daa    
  410f2b:	xchg   ecx,eax
  410f2c:	sbb    al,0xf6
  410f2e:	mov    ah,0xa8
  410f30:	mov    bh,0xa3
  410f32:	(bad)  
  410f33:	pop    es
  410f34:	bound  edx,QWORD PTR [ebx-0x73a4a674]
  410f3a:	cmp    edi,esp
  410f3c:	jp     0x410fba
  410f3e:	ins    BYTE PTR es:[edi],dx
  410f3f:	jns    0x410f14
  410f41:	cwde   
  410f42:	mov    ds:0x4d1ccc6d,al
  410f47:	jae    0x410f63
  410f49:	mov    edi,0xe9164d01
  410f4e:	es das 
  410f50:	test   al,0x95
  410f52:	out    dx,al
  410f53:	pop    ecx
  410f54:	sbb    BYTE PTR [esi+0x4b0eaf95],cl
  410f5a:	jg     0x410fb5
  410f5c:	(bad)  
  410f5d:	lds    esi,FWORD PTR [esi-0x78085995]
  410f63:	ret    
  410f64:	mov    ebp,0x7ad6e4e1
  410f69:	add    ah,BYTE PTR [ebx+0x3d66fe68]
  410f6f:	bound  ebp,QWORD PTR [edi+0x2c9677f2]
  410f75:	xor    al,0xf6
  410f77:	push   0x707f32e5
  410f7c:	mov    al,ds:0xbcb8a37f
  410f81:	dec    esp
  410f82:	test   al,0xc3
  410f84:	nop
  410f85:	int3   
  410f86:	in     al,0xbd
  410f88:	or     eax,edi
  410f8a:	mov    ds:0x6e7e643,al
  410f8f:	adc    BYTE PTR [eax],bh
  410f91:	jne    0x410fb8
  410f93:	xor    al,0x8b
  410f95:	repnz test DWORD PTR [ebx],ebx
  410f98:	retf   0x8981
  410f9b:	sbb    ebx,edx
  410f9d:	xor    al,0x9e
  410f9f:	mov    WORD PTR [ebx],ds
  410fa1:	retf   0x49f2
  410fa4:	ss mov ecx,0x79032e39
  410faa:	mov    al,ds:0x66679f06
  410faf:	jbe    0x410fcc
  410fb1:	mov    DWORD PTR [edi+0x1a02d09f],edx
  410fb7:	and    BYTE PTR [edi+0x56],ch
  410fba:	inc    ecx
  410fbb:	lahf   
  410fbc:	out    dx,al
  410fbd:	adc    eax,0x9fa4cd16
  410fc2:	jnp    0x410f89
  410fc4:	aas    
  410fc5:	inc    edx
  410fc6:	xchg   edi,eax
  410fc7:	nop
  410fc8:	ret    
  410fc9:	cmp    dl,0x4e
  410fcc:	fcmovb st,st(0)
  410fce:	fs sub al,0xb3
  410fd1:	push   0x6ef60fcf
  410fd6:	cmc    
  410fd7:	xchg   ecx,eax
  410fd8:	push   eax
  410fd9:	mov    edi,0xf52a25fc
  410fde:	mov    al,ds:0xf97b594c
  410fe3:	rcr    BYTE PTR [ecx],1
  410fe5:	push   ebx
  410fe6:	cli    
  410fe7:	loope  0x410fbc
  410fe9:	inc    ebp
  410fea:	add    eax,0xabdc6299
  410fef:	cmpxchg DWORD PTR [esi+0x1d06f60],esi
  410ff6:	cld    
  410ff7:	arpl   WORD PTR [edx+0x1c2fb33b],si
  410ffd:	sbb    DWORD PTR [edi+0x7b9f40d8],eax
  411003:	popf   
  411004:	and    eax,ebp
  411006:	loopne 0x411057
  411008:	aad    0x43
  41100a:	out    0x59,al
  41100c:	mov    eax,0xa186f12a
  411011:	or     eax,0x2cc33f9b
  411016:	loope  0x411023
  411018:	retf   
  411019:	aaa    
  41101a:	or     DWORD PTR [ebp-0x5e1b1bb8],esi
  411020:	push   0x2c
  411022:	shr    DWORD PTR [ecx+0x13],0xf6
  411026:	push   edx
  411027:	enter  0xe5bc,0xf5
  41102b:	sub    eax,0x96d0400a
  411030:	pop    edx
  411031:	mov    eax,0xbec006f2
  411036:	and    BYTE PTR [edx],0x64
  411039:	sbb    DWORD PTR [esi+0x765d928a],edi
  41103f:	dec    ebp
  411040:	pushf  
  411041:	add    BYTE PTR [ebp-0x309a4194],al
  411047:	clc    
  411048:	sub    DWORD PTR [eax-0x4e],eax
  41104b:	lods   al,BYTE PTR ds:[esi]
  41104c:	jp     0x4110a1
  41104e:	xor    bh,BYTE PTR [edi+0x7b4fb54c]
  411054:	stos   BYTE PTR es:[edi],al
  411055:	cmp    ah,ch
  411057:	jno    0x410ffa
  411059:	retf   
  41105a:	sbb    eax,0x97640caf
  41105f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411060:	mov    dh,0x7a
  411062:	jg     0x411053
  411064:	jmp    DWORD PTR [esp+esi*8-0x1ec079b]
  41106b:	sub    eax,0x111fa603
  411070:	sbb    DWORD PTR [edi+0x4ee8f98],ebx
  411076:	ins    BYTE PTR es:[edi],dx
  411077:	test   eax,0xe41b03ec
  41107c:	in     al,0x50
  41107e:	inc    esi
  41107f:	daa    
  411080:	push   edx
  411081:	sub    DWORD PTR [ebx+0x6be6a5],esp
  411087:	mov    ds:0x1ac51c92,eax
  41108c:	fadd   st(5),st
  41108e:	jnp    0x4110b4
  411090:	pop    edx
  411091:	fwait
  411092:	jne    0x41108e
  411094:	jo     0x4110f0
  411096:	out    0xe9,eax
  411098:	pop    esp
  411099:	imul   bl
  41109b:	int3   
  41109c:	jae    0x41110a
  41109e:	scas   eax,DWORD PTR es:[edi]
  41109f:	shl    BYTE PTR [esi-0x15918893],1
  4110a5:	and    al,0x41
  4110a7:	scas   al,BYTE PTR es:[edi]
  4110a8:	cbw    
  4110aa:	lea    edx,[ebp-0x5fd29004]
  4110b0:	pop    eax
  4110b1:	sbb    dl,BYTE PTR [ecx+0x17]
  4110b4:	add    ecx,esp
  4110b6:	fld    TBYTE PTR [ebp+eiz*1+0x60d98074]
  4110bd:	or     bl,0xdc
  4110c0:	or     BYTE PTR [ecx*1+0x14ac4607],bl
  4110c7:	cmp    eax,0xc3155905
  4110cc:	lds    ecx,FWORD PTR [ebx+0x6b]
  4110cf:	push   eax
  4110d0:	jns    0x41110c
  4110d2:	cmp    al,cl
  4110d4:	call   0x9957:0x2cd6d1af
  4110db:	addr16 mov cl,al
  4110de:	xchg   al,bh
  4110e0:	sbb    DWORD PTR [ecx],edi
  4110e2:	adc    al,0x84
  4110e4:	sub    al,0xce
  4110e6:	xchg   edi,eax
  4110e8:	ror    DWORD PTR ds:0x2b1ebcfa,1
  4110ee:	sbb    eax,0xe3593f0a
  4110f3:	jmp    0xade1da6b
  4110f8:	dec    esp
  4110f9:	sahf   
  4110fa:	repz pop esi
  4110fc:	pop    esp
  4110fd:	scas   eax,DWORD PTR es:[edi]
  4110fe:	mov    edx,0x71887a13
  411103:	icebp  
  411104:	push   ss
  411105:	fstp   QWORD PTR [edx-0x51]
  411108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411109:	xor    eax,0xe6667e7f
  41110e:	sub    al,0x37
  411110:	out    dx,al
  411111:	push   es
  411112:	lea    edx,[edi]
  411114:	push   cs
  411115:	push   0x30
  411117:	int3   
  411118:	mov    dl,0x5b
  41111a:	frstor [ebx]
  41111c:	add    al,0x2
  41111e:	adc    DWORD PTR [ebp-0x5dcc3a44],ebx
  411124:	adc    edx,ebx
  411126:	stos   BYTE PTR es:[edi],al
  411127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411128:	and    eax,0x88620c3
  41112d:	jp     0x41113c
  41112f:	nop
  411130:	test   DWORD PTR [edi-0x7d],esp
  411133:	fwait
  411134:	mov    edi,0xc6f9beb4
  411139:	stos   DWORD PTR es:[edi],eax
  41113a:	add    dh,BYTE PTR [ebp-0x31383dbd]
  411140:	scas   eax,DWORD PTR es:[edi]
  411141:	sti    
  411142:	xchg   ecx,eax
  411143:	daa    
  411144:	bound  edx,QWORD PTR [edi]
  411146:	xchg   cl,cl
  411148:	xor    ecx,eax
  41114a:	fldlg2 
  41114c:	lds    ebp,FWORD PTR [ecx]
  41114e:	jmp    0x9790:0xf7fc18f4
  411155:	dec    edx
  411156:	popa   
  411157:	dec    ebp
  411158:	mov    edx,0xfd3bee97
  41115d:	shl    dh,1
  41115f:	sar    DWORD PTR [esp+edi*1],cl
  411162:	stos   DWORD PTR es:[edi],eax
  411163:	nop
  411164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411165:	jg     0x4111e5
  411167:	dec    edi
  411168:	sub    eax,esp
  41116a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41116b:	stc    
  41116c:	cmp    DWORD PTR [ebp-0x21],edx
  41116f:	xor    al,0x80
  411171:	rcl    edx,1
  411173:	jno    0x41115f
  411175:	addr16 adc al,0xb8
  411178:	push   edx
  411179:	jbe    0x41118c
  41117b:	leave  
  41117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41117d:	push   0xffffffdd
  41117f:	nop
  411180:	into   
  411181:	inc    ebp
  411182:	cmp    ebx,edx
  411184:	push   esi
  411185:	mov    al,BYTE PTR [edi-0x3d]
  411188:	adc    DWORD PTR [esi-0x25],esp
  41118b:	int3   
  41118c:	ret    0x8faa
  41118f:	(bad)  
  411190:	push   0x3862e05b
  411195:	add    esp,0x5c
  411198:	popa   
  411199:	sub    eax,0xc6ddf22e
  41119e:	xchg   edi,eax
  41119f:	ret    
  4111a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a2:	or     ebx,esp
  4111a4:	sar    BYTE PTR [edx-0x12],cl
  4111a7:	pop    esi
  4111a8:	and    bh,BYTE PTR [esp+eax*2]
  4111ab:	jbe    0x411154
  4111ad:	lock not DWORD PTR [edi+0x7bc0dcc5]
  4111b4:	(bad)
  4111b7:	loopne 0x41122d
  4111b9:	sub    DWORD PTR [ebp-0xb0c8677],0x4a
  4111c0:	mov    ebx,0xc583f6d2
  4111c5:	in     eax,dx
  4111c6:	or     eax,0xc7ad8237
  4111cb:	ret    
  4111cc:	push   ecx
  4111cd:	stos   BYTE PTR es:[edi],al
  4111ce:	js     0x4111a4
  4111d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d1:	mov    dl,BYTE PTR [ebx+0x43]
  4111d4:	and    eax,0xf48289a7
  4111d9:	cmp    BYTE PTR [ebx],dh
  4111db:	ss es out dx,eax
  4111de:	(bad)  
  4111df:	sbb    ah,BYTE PTR [eax+0x4a]
  4111e2:	lods   al,BYTE PTR ds:[esi]
  4111e3:	iret   
  4111e4:	rcl    BYTE PTR es:[edx-0x64],cl
  4111e8:	cmp    DWORD PTR [ebx],edi
  4111ea:	outs   dx,DWORD PTR ds:[esi]
  4111eb:	loop   0x4111e5
  4111ed:	fwait
  4111ee:	xor    eax,0x340403b5
  4111f3:	aad    0x67
  4111f5:	out    dx,al
  4111f6:	lods   al,BYTE PTR ds:[esi]
  4111f7:	fidivr WORD PTR ds:[eax-0x49]
  4111fb:	pop    edi
  4111fc:	fisub  WORD PTR ds:0x2d29c882
  411202:	cdq    
  411203:	xchg   ebp,eax
  411204:	pop    ss
  411205:	outs   dx,BYTE PTR ds:[esi]
  411206:	sub    al,0xf8
  411208:	or     BYTE PTR [edi+edi*8-0x29],al
  41120c:	ret    0x2146
  41120f:	inc    ebx
  411210:	bound  edx,QWORD PTR [edx-0xd]
  411213:	inc    ecx
  411214:	hlt    
  411215:	call   0xd6249ccf
  41121a:	dec    edx
  41121b:	pushf  
  41121c:	mov    BYTE PTR [ebx],dh
  41121e:	adc    BYTE PTR [ecx+0x26],cl
  411221:	jb     0x4111e6
  411223:	cwde   
  411224:	(bad)  
  411225:	mov    al,0x8e
  411227:	cmp    cl,ch
  411229:	cmp    ah,0xce
  41122c:	cli    
  41122d:	gs push eax
  41122f:	out    0x1c,al
  411231:	cmp    esp,DWORD PTR ds:0xe25e42ad
  411237:	xchg   ebp,ecx
  411239:	fst    QWORD PTR [esi-0x7f]
  41123c:	push   ds
  41123d:	cwde   
  41123e:	mov    al,ds:0xf83fd0bf
  411243:	dec    ebp
  411244:	pop    esp
  411245:	mov    dh,0xa9
  411247:	dec    esp
  411248:	sbb    DWORD PTR [edi-0x6ff68399],eax
  41124e:	fst    st(4)
  411250:	test   DWORD PTR [ebx+edx*4-0x3c],0x107c448f
  411258:	ret    
  411259:	jbe    0x411241
  41125b:	imul   esi,ecx,0x35
  41125e:	jp     0x4112a6
  411260:	push   ss
  411261:	xlat   BYTE PTR ds:[ebx]
  411262:	call   0x983d:0x9fd75797
  411269:	sbb    ah,BYTE PTR [esp+ecx*1+0x68ce63aa]
  411270:	jmp    0x5db7d219
  411275:	pushf  
  411276:	xchg   edx,eax
  411277:	or     al,0xee
  411279:	sti    
  41127a:	pop    ebx
  41127b:	test   DWORD PTR [edi+0xcd7d656],ebp
  411281:	adc    DWORD PTR [ebx-0x3],0xffffffdb
  411285:	jl     0x4112e9
  411287:	mov    cl,BYTE PTR [edx]
  411289:	cmp    bh,dl
  41128b:	outs   dx,DWORD PTR ds:[esi]
  41128c:	iret   
  41128d:	inc    ecx
  41128e:	cld    
  41128f:	pusha  
  411290:	and    al,0x60
  411292:	jecxz  0x411254
  411294:	test   eax,0x8b5043af
  411299:	scas   al,BYTE PTR es:[edi]
  41129a:	adc    eax,0xab43f8b4
  41129f:	cwde   
  4112a0:	or     al,0x7f
  4112a2:	jg     0x411226
  4112a4:	inc    ecx
  4112a5:	popa   
  4112a6:	(bad)  
  4112a7:	pop    ss
  4112a8:	inc    esi
  4112a9:	jns    0x4112b8
  4112ab:	jno    0x41124a
  4112ad:	imul   ebp,DWORD PTR [edx],0x57bf0677
  4112b3:	push   es
  4112b4:	xchg   ebp,eax
  4112b5:	dec    eax
  4112b6:	push   cs
  4112b7:	sbb    eax,0xa917a19c
  4112bc:	or     edx,esi
  4112be:	fld    QWORD PTR [ecx]
  4112c0:	or     al,0x66
  4112c2:	je     0x41133e
  4112c4:	pop    esp
  4112c5:	xchg   edi,eax
  4112c6:	cwde   
  4112c7:	jmp    0xfadb20c7
  4112cc:	outs   dx,BYTE PTR ds:[esi]
  4112cd:	ins    DWORD PTR es:[edi],dx
  4112ce:	ror    bl,1
  4112d0:	dec    ebx
  4112d1:	add    BYTE PTR [esi],ah
  4112d3:	xor    dh,bl
  4112d5:	xchg   ebp,eax
  4112d6:	sub    al,BYTE PTR [eax]
  4112d8:	mov    WORD PTR [edi-0x50889746],gs
  4112de:	loope  0x411356
  4112e0:	in     al,dx
  4112e1:	lock (bad) 
  4112e3:	mov    edx,0x20655895
  4112e8:	pop    es
  4112e9:	and    al,0xb1
  4112eb:	dec    edx
  4112ec:	imul   ebx,DWORD PTR [ebx-0x50],0xffffff81
  4112f0:	repnz mov ss,WORD PTR [edi+0x26]
  4112f4:	test   eax,0x290bac6f
  4112f9:	pop    ss
  4112fa:	ret    0x5648
  4112fd:	push   esi
  4112fe:	loope  0x411285
  411300:	fbstp  TBYTE PTR [esi]
  411302:	cmp    ebp,DWORD PTR ds:0xf509515d
  411308:	cmc    
  411309:	dec    edi
  41130a:	adc    cl,BYTE PTR [ebx-0x6a592657]
  411310:	cdq    
  411311:	pop    edx
  411312:	fnstcw WORD PTR [esi]
  411314:	xlat   BYTE PTR ds:[ebx]
  411315:	call   0x7651ebcd
  41131a:	cdq    
  41131b:	mov    edi,0xf407ab34
  411320:	inc    ebx
  411321:	call   0x2e004ec3
  411326:	add    ah,BYTE PTR [eax+0x2e]
  411329:	out    dx,al
  41132a:	pop    es
  41132b:	pusha  
  41132c:	sar    esp,0xb0
  41132f:	aaa    
  411330:	and    al,0xd8
  411332:	inc    esi
  411333:	outs   dx,BYTE PTR ds:[esi]
  411334:	ds dec ebx
  411336:	jnp    0x4112e9
  411338:	xchg   esi,eax
  411339:	dec    esi
  41133a:	scas   eax,DWORD PTR es:[edi]
  41133b:	loope  0x4112dd
  41133d:	jle    0x411374
  41133f:	xchg   BYTE PTR [edi+0x7eb75c4b],bl
  411345:	(bad)  
  411346:	idiv   bh
  411348:	and    eax,esp
  41134a:	xchg   edx,eax
  41134b:	lahf   
  41134c:	sub    DWORD PTR [ecx],ebx
  41134e:	addr16 mov cl,0xaa
  411351:	mov    WORD PTR [esi+0x73e6cc7b],?
  411357:	sub    BYTE PTR fs:[edi+ebx*4],0xba
  41135c:	outs   dx,BYTE PTR ds:[esi]
  41135d:	dec    esi
  41135e:	cdq    
  41135f:	ja     0x4113e0
  411361:	jle    0x411341
  411363:	adc    al,0x48
  411365:	hlt    
  411366:	xor    eax,0x51fead26
  41136b:	repnz ins BYTE PTR es:[edi],dx
  41136d:	mov    ds:0x887f7864,al
  411372:	sbb    ah,BYTE PTR [edi-0x2f]
  411375:	mov    ah,0x15
  411377:	push   ecx
  411378:	push   cs
  411379:	hlt    
  41137a:	cmp    eax,0x1d7f5393
  41137f:	into   
  411380:	mov    dh,0x58
  411382:	bound  esp,QWORD PTR [esi-0x3d9867a6]
  411388:	add    ah,BYTE PTR [eax]
  41138a:	fidiv  DWORD PTR [ebx]
  41138c:	lock (bad) [eax-0x3b]
  411390:	and    al,0x53
  411392:	out    dx,eax
  411393:	jnp    0x41135f
  411395:	outs   dx,DWORD PTR ds:[esi]
  411396:	out    dx,eax
  411397:	ins    BYTE PTR es:[edi],dx
  411398:	mov    WORD PTR [esi+0x19],ss
  41139b:	and    cl,BYTE PTR [ebx-0x47]
  41139e:	ss xchg esi,eax
  4113a0:	inc    edx
  4113a1:	stos   DWORD PTR es:[edi],eax
  4113a2:	inc    ebx
  4113a3:	mov    cl,0xbf
  4113a5:	xchg   ebx,eax
  4113a6:	mov    esi,0xf388f9a3
  4113ab:	jae    0x41133f
  4113ad:	and    al,0x4f
  4113af:	or     dh,BYTE PTR [si-0x68]
  4113b3:	aad    0x5b
  4113b5:	cmp    al,0xed
  4113b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113b8:	add    eax,0x491e68cf
  4113bd:	push   esi
  4113be:	(bad)  
  4113bf:	jmp    0x4113d3
  4113c1:	jno    0x411378
  4113c3:	test   DWORD PTR [ebp-0x53],ecx
  4113c6:	fwait
  4113c7:	stos   DWORD PTR es:[edi],eax
  4113c8:	sbb    eax,0x3d373815
  4113cd:	pslld  mm5,mm1
  4113d0:	aad    0x61
  4113d2:	bnd ret 0x5a20
  4113d6:	pop    esi
  4113d7:	fiadd  DWORD PTR [ecx]
  4113d9:	jns    0x4113e8
  4113db:	bndstx [ebx-0x21],bnd1
  4113df:	push   es
  4113e0:	call   0x139efa86
  4113e5:	dec    ebx
  4113e6:	enter  0x274f,0xa
  4113ea:	push   ds
  4113eb:	in     eax,dx
  4113ec:	cmp    DWORD PTR [ebp*4-0x30eac04b],0x52
  4113f4:	cs pop ebp
  4113f6:	mov    bl,0xc
  4113f8:	test   eax,0xff6ee621
  4113fd:	cmc    
  4113fe:	pop    ds
  4113ff:	inc    ebp
  411400:	call   0x3a7bd334
  411405:	stc    
  411406:	dec    edx
  411407:	lods   al,BYTE PTR ds:[esi]
  411408:	loope  0x4113a6
  41140a:	(bad)  
  41140b:	lock repnz dec esp
  41140e:	xchg   DWORD PTR [esp+edi*2+0x45f84599],edx
  411415:	fwait
  411416:	or     al,0x1e
  411418:	fstp   TBYTE PTR [ebx-0x1f7f44d8]
  41141e:	pushf  
  41141f:	outs   dx,BYTE PTR ds:[esi]
  411420:	push   esi
  411421:	xor    ecx,esp
  411423:	xor    edx,DWORD PTR [edx-0x37faebe7]
  411429:	mov    ebp,esp
  41142b:	mov    al,0x90
  41142d:	std    
  41142e:	dec    esi
  41142f:	adc    ebx,0xc731cce9
  411435:	jmp    0x411474
  411437:	adc    DWORD PTR [ecx+edi*1+0x48],esp
  41143b:	jg     0x4113dc
  41143d:	adc    ch,cl
  41143f:	or     ch,BYTE PTR [esi-0x4094e20f]
  411445:	aam    0xd7
  411447:	jmp    0x3d4e6f9c
  41144c:	pop    ss
  41144d:	arpl   WORD PTR [ebx-0x618f684e],si
  411453:	das    
  411454:	lods   ax,WORD PTR ds:[esi]
  411456:	or     dh,0x2
  411459:	and    BYTE PTR [edx-0x4225290c],bh
  41145f:	iret   
  411460:	xor    BYTE PTR [eax+0x4e],0xd1
  411464:	lock sub cl,BYTE PTR [eax-0x93d66ff]
  41146b:	mov    WORD PTR [eax+0x35],gs
  41146e:	mov    ah,0x55
  411470:	enter  0xf88,0xe7
  411474:	sbb    DWORD PTR [esi+0x2f3b7bd5],0x19fc18ff
  41147e:	or     ah,BYTE PTR [edx]
  411480:	hlt    
  411481:	test   eax,0x74e03cd3
  411486:	repz icebp 
  411488:	sub    BYTE PTR [ecx+ebx*1],0x33
  41148c:	push   esp
  41148d:	sar    DWORD PTR [ecx-0x80],cl
  411490:	add    eax,0x6405d0ab
  411495:	pop    es
  411496:	mov    al,0x3
  411498:	out    0x4c,al
  41149a:	sub    bl,BYTE PTR [ecx-0x229bc839]
  4114a0:	add    BYTE PTR [edx+0x68363fe5],ch
  4114a6:	fadd   st,st(7)
  4114a8:	pop    esp
  4114a9:	stos   DWORD PTR es:[edi],eax
  4114aa:	or     DWORD PTR [eax+esi*4-0x7c8d9b2c],esi
  4114b1:	clc    
  4114b2:	jo     0x41143b
  4114b4:	dec    ecx
  4114b5:	xchg   esp,eax
  4114b6:	sahf   
  4114b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b8:	sbb    eax,0xa66b4b29
  4114bd:	test   eax,0x4aed05b6
  4114c2:	xor    BYTE PTR [ebp+0x6c7cf529],bh
  4114c8:	pop    eax
  4114c9:	ret    0x7f6d
  4114cc:	inc    esp
  4114cd:	rep repnz lods al,BYTE PTR ds:[esi]
  4114d0:	mov    eax,0x7372cb17
  4114d5:	dec    ebx
  4114d6:	mov    fs,WORD PTR [edx-0x748dce65]
  4114dc:	repz add al,0x77
  4114df:	sub    DWORD PTR [ebp-0x76804eda],eax
  4114e5:	pop    esp
  4114e6:	popa   
  4114e7:	add    al,0xf
  4114e9:	iret   
  4114ea:	push   ecx
  4114eb:	xchg   ebx,eax
  4114ec:	icebp  
  4114ed:	add    edi,DWORD PTR [ebp+0x6d]
  4114f0:	adc    BYTE PTR [ebx-0x2c6c760],dl
  4114f6:	fisubr WORD PTR [edx*4+0x50df20c5]
  4114fe:	add    DWORD PTR [ebx],esi
  411500:	add    ecx,DWORD PTR [ebp-0x482b7a92]
  411506:	jecxz  0x411559
  411508:	jae    0x4114ca
  41150a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41150b:	outs   dx,DWORD PTR ds:[esi]
  41150c:	lahf   
  41150d:	jmp    0xd28d:0x2b5ebb18
  411514:	hlt    
  411515:	icebp  
  411516:	gs sbb al,cl
  411519:	addr16 leave 
  41151b:	jge    0x41156d
  41151d:	jo     0x4114a1
  41151f:	pop    edi
  411520:	ja     0x4114db
  411522:	xchg   esp,eax
  411523:	mov    ebp,0x81ff63ad
  411528:	or     al,0xd4
  41152a:	fsubr  QWORD PTR [ebx]
  41152c:	jmp    0x14e8bb0e
  411531:	mov    bl,0xcd
  411533:	daa    
  411534:	adc    esi,eax
  411536:	sar    cl,0x72
  411539:	cmp    al,0x39
  41153b:	je     0x4114c9
  41153d:	jnp    0x4114d6
  41153f:	and    eax,0xc7a53420
  411544:	xor    cl,al
  411546:	sub    BYTE PTR [esp+esi*2-0x7d],0x29
  41154b:	stos   BYTE PTR es:[edi],al
  41154c:	push   edi
  41154d:	fdiv   st(6),st
  41154f:	aaa    
  411550:	mov    ah,0xe
  411552:	out    dx,al
  411553:	pop    esi
  411554:	mov    esi,0x30877034
  411559:	ds int 0x57
  41155c:	into   
  41155d:	push   DWORD PTR [edi+edx*8+0x51]
  411561:	mov    esi,esi
  411563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411564:	jp     0x411531
  411566:	lods   eax,DWORD PTR ds:[esi]
  411567:	push   ebp
  411568:	mov    cl,0x29
  41156a:	mov    dl,0x90
  41156c:	mov    DWORD PTR [esi-0x303eb16c],ecx
  411572:	fdivr  DWORD PTR [esi-0x2]
  411575:	jl     0x411593
  411577:	rol    DWORD PTR [eax+ecx*4-0x77424147],0x46
  41157f:	outs   dx,DWORD PTR ds:[esi]
  411580:	cmp    eax,esi
  411582:	addr16 std 
  411584:	mov    bl,0x8c
  411586:	in     eax,0xe2
  411588:	fisttp WORD PTR [edx]
  41158a:	xchg   esp,eax
  41158b:	cmp    al,0x1a
  41158d:	add    dh,ah
  41158f:	xor    bl,ch
  411591:	or     BYTE PTR [esi+0x58bbc2d1],dl
  411597:	inc    esp
  411598:	adc    DWORD PTR [eax+0x407cff8],edx
  41159e:	outs   dx,DWORD PTR ds:[esi]
  41159f:	test   al,0x88
  4115a1:	xchg   DWORD PTR [esi+ecx*2+0x478512ca],eax
  4115a8:	loop   0x4115a7
  4115aa:	popf   
  4115ab:	and    eax,0xc653a8e6
  4115b0:	(bad)  [ebp+edx*2+0x4e5bf7b5]
  4115b7:	jbe    0x411567
  4115b9:	add    al,0xa9
  4115bb:	arpl   WORD PTR [edx],si
  4115bd:	out    dx,al
  4115be:	test   ebx,ecx
  4115c0:	stos   DWORD PTR es:[edi],eax
  4115c1:	test   eax,0x26803dd0
  4115c6:	xchg   ebx,eax
  4115c7:	inc    edx
  4115c8:	jo     0x411590
  4115ca:	stc    
  4115cb:	mov    ?,WORD PTR [ebx+0xdee5d1f]
  4115d1:	xlat   BYTE PTR ds:[ebx]
  4115d2:	pusha  
  4115d3:	mov    ch,0x5a
  4115d5:	push   0x5c
  4115d7:	dec    edx
  4115d8:	out    0xac,eax
  4115da:	(bad)  
  4115db:	in     eax,0xd6
  4115dd:	(bad)  
  4115df:	jmp    0x4115a0
  4115e1:	mov    ebx,0xf2aa396b
  4115e6:	outs   dx,BYTE PTR ds:[esi]
  4115e7:	addr16 call 0xf2b:0x3b6deddd
  4115ef:	and    DWORD PTR [ebx],ecx
  4115f1:	sahf   
  4115f2:	push   ebp
  4115f3:	lods   al,BYTE PTR ds:[esi]
  4115f4:	add    ch,BYTE PTR [edx-0x29733965]
  4115fa:	push   ss
  4115fb:	mov    ch,0x30
  4115fd:	out    0x8b,eax
  4115ff:	xor    eax,0xb8dcf693
  411604:	out    0xe3,al
  411606:	(bad)  
  411607:	stos   DWORD PTR es:[edi],eax
  411608:	dec    esi
  411609:	jns    0x41162d
  41160b:	adc    bh,bh
  41160d:	cmp    bl,bh
  41160f:	xchg   edx,eax
  411610:	jo     0x411623
  411612:	push   esp
  411613:	out    dx,eax
  411614:	sbb    BYTE PTR [edx+esi*8-0x14f3cbab],al
  41161b:	sbb    al,0xe1
  41161d:	inc    esp
  41161e:	and    ecx,DWORD PTR fs:[eax+0x4]
  411622:	mov    eax,0x52c0eefc
  411627:	neg    BYTE PTR [ebx+0x63]
  41162a:	inc    esp
  41162b:	outs   dx,BYTE PTR ds:[esi]
  41162c:	mov    al,0x50
  41162e:	pushf  
  41162f:	sub    eax,0xd3f86ace
  411634:	jmp    0x4115c4
  411636:	push   eax
  411637:	and    BYTE PTR [esi+0x71],ch
  41163a:	outs   dx,BYTE PTR ds:[esi]
  41163b:	mov    bl,0x7c
  41163d:	mov    esp,0xd9d735
  411642:	ins    DWORD PTR es:[edi],dx
  411643:	rol    DWORD PTR [ebx+0x3189a112],0x51
  41164a:	push   eax
  41164b:	bound  eax,QWORD PTR [ebx+0xa]
  41164e:	call   0x652e:0x8f78e878
  411655:	xor    esi,DWORD PTR [edi-0x75]
  411658:	xchg   edx,eax
  411659:	xchg   esp,eax
  41165a:	add    eax,0xdd6bd202
  41165f:	lahf   
  411660:	and    ah,BYTE PTR [eax-0x4519346f]
  411666:	sbb    al,BYTE PTR [ebx]
  411668:	xchg   DWORD PTR gs:[esi],ecx
  41166b:	ss aad 0x55
  41166e:	(bad)
  411672:	pushf  
  411673:	popa   
  411674:	push   0x93931513
  411679:	lock dec edx
  41167b:	mov    bl,0x8f
  41167d:	dec    ecx
  41167e:	xchg   bx,ax
  411680:	pop    ecx
  411681:	lea    eax,[ecx-0x792d2df9]
  411687:	mov    BYTE PTR [esi],dh
  411689:	outs   dx,DWORD PTR ds:[esi]
  41168a:	(bad)  
  41168b:	call   0x99bdab29
  411690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411692:	add    ebp,edi
  411694:	in     al,0xd
  411696:	cmp    al,BYTE PTR [ebp+0x5e]
  411699:	sbb    BYTE PTR es:[ebx],0x4d
  41169d:	(bad)  
  41169e:	(bad)  
  4116a0:	aam    0x33
  4116a2:	mov    ah,0xd3
  4116a4:	cmp    DWORD PTR [esi+0x3e9703e9],ebp
  4116aa:	ret    
  4116ab:	ror    eax,0x2b
  4116ae:	gs jns 0x411683
  4116b1:	popf   
  4116b2:	jne    0x411672
  4116b4:	inc    esi
  4116b5:	(bad)  
  4116b6:	jmp    0xa439c234
  4116bb:	sbb    eax,0xe396fe52
  4116c0:	inc    eax
  4116c1:	xchg   eax,edx
  4116c3:	adc    eax,0xfd781754
  4116c8:	(bad)  
  4116c9:	mov    dh,bh
  4116cb:	pop    esp
  4116cc:	or     DWORD PTR ds:0x74b7da16,edi
  4116d2:	popa   
  4116d3:	in     eax,dx
  4116d4:	pop    esi
  4116d5:	clc    
  4116d6:	out    dx,eax
  4116d7:	sbb    DWORD PTR ds:0x496650f7,esi
  4116dd:	sbb    eax,DWORD PTR [esi-0x28]
  4116e0:	(bad)  
  4116e1:	push   esi
  4116e2:	xor    ebp,ebx
  4116e4:	sbb    al,0xd4
  4116e6:	or     esi,ecx
  4116e8:	popa   
  4116e9:	fist   WORD PTR [edx]
  4116eb:	xor    ebp,edx
  4116ed:	cmp    BYTE PTR [esi],ah
  4116ef:	and    ch,dl
  4116f1:	imul   eax,ebx,0x430b2964
  4116f7:	adc    eax,ebx
  4116f9:	(bad)  
  4116fa:	js     0x41174a
  4116fc:	enter  0x9585,0x49
  411700:	push   cs
  411701:	loope  0x4116a8
  411703:	xchg   esp,eax
  411704:	mov    edi,0x581f3179
  411709:	iret   
  41170a:	sub    eax,0x85d22f48
  41170f:	aaa    
  411710:	(bad)  
  411711:	popa   
  411712:	ins    BYTE PTR es:[edi],dx
  411713:	loopne 0x4116e2
  411715:	test   DWORD PTR [ebp+0x44],edx
  411718:	sub    BYTE PTR [edx],ah
  41171a:	icebp  
  41171b:	xchg   edi,eax
  41171c:	and    cl,ch
  41171e:	push   ds
  41171f:	cli    
  411720:	jae    0x4116e6
  411722:	xchg   ebp,eax
  411723:	repz xchg ebp,eax
  411725:	out    dx,eax
  411726:	push   ecx
  411727:	mov    cl,0xd1
  411729:	xchg   BYTE PTR [ecx+0x6008f115],dl
  41172f:	lods   eax,DWORD PTR ds:[esi]
  411730:	cmp    eax,0x629f03b4
  411735:	stos   DWORD PTR es:[edi],eax
  411736:	push   edi
  411737:	imul   esi,DWORD PTR [ecx-0x7c],0xc6870439
  41173e:	jecxz  0x4116f9
  411740:	call   0x1ca:0xd86f7967
  411747:	xor    BYTE PTR [esi-0x5ebf7722],ch
  41174d:	hlt    
  41174e:	ja     0x411724
  411750:	mov    ch,0x69
  411752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411754:	dec    esp
  411755:	adc    al,0xa
  411757:	pop    ss
  411758:	leave  
  411759:	and    BYTE PTR [ebx],al
  41175b:	mov    ecx,DWORD PTR [edi]
  41175d:	lods   al,BYTE PTR ds:[esi]
  41175e:	(bad)  
  41175f:	mov    bh,0xba
  411761:	int3   
  411762:	pusha  
  411763:	adc    BYTE PTR [edx+0x264343d4],ch
  411769:	aas    
  41176a:	dec    ebx
  41176b:	mov    cl,0xaa
  41176d:	pushf  
  41176e:	jecxz  0x4117cb
  411770:	sub    BYTE PTR [ebx-0x7c],dh
  411773:	jo     0x4117ea
  411775:	out    dx,al
  411776:	dec    edx
  411777:	jmp    0x4117ad
  411779:	das    
  41177a:	adc    DWORD PTR [edx+0x21],esi
  41177d:	xor    eax,0x1b
  411780:	aaa    
  411781:	xchg   ebp,eax
  411782:	dec    edx
  411783:	mov    ecx,0xe19e3a7b
  411788:	cmp    BYTE PTR [esi+0x44fbd70a],cl
  41178e:	ss mov edx,0x2b29e328
  411794:	ins    BYTE PTR es:[edi],dx
  411795:	out    0xf7,al
  411797:	jge    0x41179f
  411799:	ja     0x411737
  41179b:	xchg   DWORD PTR [edx],ebp
  41179d:	arpl   WORD PTR ds:0x3b106e5d,di
  4117a3:	in     eax,dx
  4117a4:	shl    DWORD PTR [esp+ebp*4+0x10],1
  4117a8:	sti    
  4117a9:	pop    ss
  4117aa:	fldenv [edx-0x64403342]
  4117b0:	mov    edi,0xf98f6783
  4117b5:	out    dx,al
  4117b6:	mov    eax,0xf7a2b69c
  4117bb:	pop    edx
  4117bc:	push   esi
  4117bd:	jecxz  0x4117fc
  4117bf:	xchg   esi,eax
  4117c0:	pop    ss
  4117c1:	cli    
  4117c2:	mov    bl,BYTE PTR [ebp+eax*2-0xb46cd12]
  4117c9:	cmp    BYTE PTR [ebx-0x6a],bl
  4117cc:	stos   DWORD PTR es:[edi],eax
  4117cd:	idiv   BYTE PTR [eax]
  4117cf:	pop    esi
  4117d0:	mov    esi,0x97ff4029
  4117d5:	mov    cs,esp
  4117d7:	dec    eax
  4117d8:	lods   al,BYTE PTR gs:[esi]
  4117da:	mov    ?,WORD PTR [esi]
  4117dc:	xor    esp,ecx
  4117de:	pop    ebx
  4117df:	outs   dx,BYTE PTR ds:[esi]
  4117e0:	scas   al,BYTE PTR es:[edi]
  4117e1:	or     ch,bl
  4117e3:	repz enter 0x4a29,0x1f
  4117e8:	fsub   QWORD PTR [ebp+0x1deb5a78]
  4117ee:	pop    eax
  4117ef:	sub    al,0x6b
  4117f1:	int3   
  4117f2:	imul   ebp,DWORD PTR [eax+0x71],0xc31a0fd8
  4117f9:	inc    DWORD PTR [eax]
  4117fb:	xor    DWORD PTR [eax],esi
  4117fd:	xlat   BYTE PTR ds:[ebx]
  4117fe:	cmp    DWORD PTR [ebp+0x4e17f814],0xc8214480
  411808:	pop    esp
  411809:	outs   dx,DWORD PTR ds:[esi]
  41180a:	inc    ebx
  41180b:	imul   esi,DWORD PTR [eax],0x54
  41180e:	fdiv   QWORD PTR [edx]
  411810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411811:	jmp    0xb8e1c309
  411816:	inc    esi
  411817:	in     eax,dx
  411818:	mov    ah,0x74
  41181a:	ret    0x833c
  41181d:	bound  eax,QWORD PTR [ecx-0x1]
  411820:	fild   QWORD PTR [edi-0x6d563579]
  411826:	daa    
  411827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411828:	inc    esi
  411829:	jle    0x411888
  41182b:	mov    al,ds:0x1cba7f8b
  411830:	mov    esi,DWORD PTR [edx+0x2e]
  411833:	or     eax,0xb49e5dcc
  411838:	inc    edx
  411839:	cmp    dh,BYTE PTR [esp+eax*1-0x3a0ee3af]
  411840:	dec    esi
  411841:	cld    
  411842:	mov    bl,0x58
  411844:	or     DWORD PTR [esp+ebp*1+0x7fa83455],esp
  41184b:	ss (bad) 
  41184d:	ja     0x4118cc
  41184f:	push   es
  411850:	add    BYTE PTR [ecx+edx*1+0x38c3dfd6],bh
  411857:	or     BYTE PTR [ebx+0x5d9015a4],0x7a
  41185e:	data16 sub BYTE PTR [esi],dl
  411861:	xchg   ecx,eax
  411862:	cmc    
  411863:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411864:	aas    
  411865:	inc    edi
  411866:	or     BYTE PTR [esi],dl
  411868:	mov    ebx,0xd0c0ecf1
  41186d:	xor    BYTE PTR [esi+0x47788e54],dl
  411873:	cmp    eax,0x1c54abe0
  411878:	stos   BYTE PTR es:[edi],al
  411879:	jmp    0xebb0d2ec
  41187e:	vandnps ymm0,ymm1,YMMWORD PTR [ecx-0x18]
  411883:	data16 clc 
  411885:	mov    ds:0x9796dee8,al
  41188a:	cmp    esp,ebp
  41188c:	xchg   edx,eax
  41188d:	inc    bx
  41188f:	cli    
  411890:	xor    bl,BYTE PTR [edi-0x4c]
  411893:	xchg   edx,eax
  411894:	cwde   
  411895:	and    eax,0xb21a1b7f
  41189a:	and    eax,0xb56bf426
  41189f:	xchg   edi,eax
  4118a0:	fadd   st(0),st
  4118a2:	(bad)  
  4118a3:	imul   ecx,DWORD PTR [ecx+0x4e],0x42
  4118a7:	mov    ch,0xcc
  4118a9:	clc    
  4118aa:	push   ebx
  4118ab:	pop    ds
  4118ac:	mov    ds:0x8a501d09,eax
  4118b1:	ret    0xd3c2
  4118b4:	cld    
  4118b5:	idiv   eax
  4118b7:	mov    edi,0x59321b21
  4118bc:	stos   DWORD PTR es:[edi],eax
  4118bd:	fwait
  4118be:	lods   eax,DWORD PTR ds:[esi]
  4118bf:	int3   
  4118c0:	(bad)  
  4118c1:	jbe    0x411872
  4118c3:	pop    edi
  4118c4:	(bad)  
  4118c5:	push   esp
  4118c6:	jb     0x41190d
  4118c8:	ja     0x41190b
  4118ca:	xchg   ebx,eax
  4118cb:	jae    0x41192a
  4118cd:	inc    ebx
  4118ce:	fsub   DWORD PTR [ebp-0x66fc3219]
  4118d4:	mov    BYTE PTR [ebx-0x73852f7],dl
  4118da:	and    BYTE PTR [ebx-0x421cb76a],dl
  4118e0:	xchg   ebp,eax
  4118e1:	(bad)  
  4118e2:	sub    eax,0x5a6171d8
  4118e7:	fs call 0xe5d3:0x7d8958d8
  4118ef:	xchg   ebp,eax
  4118f0:	inc    ebx
  4118f1:	sub    eax,0xb8676f8f
  4118f6:	add    bl,BYTE PTR [ebx]
  4118f8:	dec    ebp
  4118f9:	push   ds
  4118fa:	mov    cs,esi
  4118fc:	cs (bad) 
  4118fe:	ja     0x41197a
  411900:	mov    bl,0x1a
  411902:	les    ebx,FWORD PTR [esi-0x2b4b1614]
  411908:	sbb    al,0x50
  41190a:	mov    ecx,0x7ba4cc45
  41190f:	or     esi,esp
  411911:	mov    esi,0x8fc78575
  411916:	stos   DWORD PTR es:[edi],eax
  411917:	add    BYTE PTR [ebx-0x397567de],ah
  41191d:	sub    BYTE PTR [ecx],0x14
  411920:	pop    esp
  411921:	xchg   esp,eax
  411922:	push   edx
  411923:	mov    esi,ebp
  411925:	or     DWORD PTR [edi+0x63],edx
  411928:	out    dx,al
  411929:	test   eax,0x16856180
  41192e:	jnp    0x411995
  411930:	cmp    ch,bl
  411932:	popf   
  411933:	jmp    0x4118be
  411935:	cmp    ebp,DWORD PTR [ebp+0x72]
  411938:	dec    esi
  411939:	test   eax,0xe4701099
  41193e:	jl     0x4118d6
  411940:	adc    DWORD PTR [esi],ebp
  411942:	push   ebp
  411943:	jb     0x4119b6
  411945:	pushf  
  411946:	dec    ebx
  411947:	js     0x4119b5
  411949:	cmp    eax,0x3d9134c8
  41194e:	pusha  
  41194f:	mov    ebp,0xfe34cfa9
  411954:	(bad)  
  411955:	ins    BYTE PTR es:[edi],dx
  411956:	cli    
  411957:	ins    BYTE PTR es:[edi],dx
  411958:	push   es
  411959:	jg     0x411937
  41195b:	inc    ecx
  41195c:	lods   al,BYTE PTR ds:[esi]
  41195d:	stc    
  41195e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41195f:	pop    ds
  411960:	dec    edx
  411961:	sbb    al,0x1b
  411963:	pop    edx
  411964:	mov    edi,esp
  411966:	std    
  411967:	mov    eax,fs:0x4a00e2bd
  41196d:	sbb    edi,esi
  41196f:	cmp    eax,0x396e983f
  411974:	imul   edi,DWORD PTR [eax+0x77837430],0x79
  41197b:	jnp    0x4119e8
  41197d:	or     cl,BYTE PTR [esi]
  41197f:	cli    
  411980:	xchg   esi,eax
  411981:	xchg   esp,eax
  411982:	push   ebx
  411983:	and    bh,BYTE PTR [esp+eiz*2-0x18]
  411987:	pop    esi
  411988:	xchg   esp,eax
  411989:	mov    edi,0xb0fa887c
  41198e:	(bad)  
  41198f:	(bad)  
  411990:	leave  
  411991:	dec    esi
  411992:	adc    DWORD PTR [eax-0x3c2ead6d],edx
  411998:	call   0xf728d290
  41199d:	aad    0xf7
  41199f:	pop    eax
  4119a0:	xchg   edx,eax
  4119a1:	ret    
  4119a2:	arpl   WORD PTR [edx+0x2855f135],di
  4119a8:	cs inc edx
  4119aa:	bsf    ebp,DWORD PTR [edi+eiz*4-0x27ab7a16]
  4119b2:	mov    edx,0xc54ff31e
  4119b7:	int3   
  4119b8:	and    edx,DWORD PTR [ebp-0x37d7a197]
  4119be:	xchg   esi,eax
  4119bf:	cli    
  4119c0:	inc    ebx
  4119c1:	sub    edi,DWORD PTR [edi]
  4119c3:	mov    WORD PTR [ebx+eax*1+0x50],cs
  4119c7:	xlat   BYTE PTR ds:[ebx]
  4119c8:	sbb    bh,BYTE PTR [ebx+eax*4]
  4119cb:	mov    esi,0x8e97955c
  4119d0:	std    
  4119d1:	es jbe 0x4119f3
  4119d4:	cmp    eax,0x41204666
  4119d9:	add    BYTE PTR [esi],ah
  4119db:	aaa    
  4119dc:	pop    esp
  4119dd:	retf   0x2e40
  4119e0:	neg    DWORD PTR [ebp-0xa]
  4119e3:	xor    DWORD PTR [esi],edi
  4119e5:	mov    eax,ds:0x8035bf1d
  4119ea:	pop    ecx
  4119eb:	jg     0x411a28
  4119ed:	popf   
  4119ee:	mov    esp,DWORD PTR [eax+edx*4]
  4119f1:	into   
  4119f2:	sahf   
  4119f3:	xchg   ecx,eax
  4119f4:	das    
  4119f5:	push   es
  4119f6:	scas   eax,DWORD PTR es:[edi]
  4119f7:	push   0x7e111385
  4119fc:	jmp    0x5fb2:0x8afc60d0
  411a03:	push   ecx
  411a04:	imul   esp,esi,0x8bc620cc
  411a0a:	push   ebp
  411a0b:	or     BYTE PTR [ebx-0x3d7e57a3],cl
  411a11:	clc    
  411a12:	or     BYTE PTR [edi+0x0],dl
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0x5a0c9bed
  411b74:	fild   QWORD PTR [esi]
  411b76:	scas   al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411b96
  411b7e:	data16 sbb al,0xe5
  411b81:	test   DWORD PTR [ecx],esi
  411b83:	aaa    
  411b84:	or     eax,0xe88f2760
  411b89:	fsub   DWORD PTR [esp+edi*8-0x5a738d20]
  411b90:	popf   
  411b91:	loopne 0x411b9a
  411b93:	sbb    DWORD PTR [ebx],edi
  411b95:	jbe    0x411bc5
  411b97:	mov    ch,0x38
  411b99:	js     0x411bbc
  411b9b:	ror    BYTE PTR [eax-0x5b],1
  411b9e:	mov    ebx,0x74b2034f
  411ba3:	lods   eax,DWORD PTR ds:[esi]
  411ba4:	repz dec edx
  411ba6:	fimul  WORD PTR [esi+edx*4-0x23]
  411baa:	mov    eax,0x59ff732b
  411baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb0:	xor    al,0x52
  411bb2:	inc    ecx
  411bb3:	sar    BYTE PTR [edx],0xdd
  411bb6:	and    bh,dl
  411bb8:	mov    esi,0xea1a0a7d
  411bbd:	inc    ebp
  411bbe:	dec    edx
  411bbf:	scas   al,BYTE PTR es:[edi]
  411bc0:	(bad)  
  411bc1:	push   edi
  411bc2:	int3   
  411bc3:	ins    BYTE PTR es:[edi],dx
  411bc4:	inc    ebp
  411bc5:	fcom   st(3)
  411bc7:	ja     0x411b92
  411bc9:	add    al,0xa7
  411bcb:	loope  0x411b5b
  411bcd:	mov    ebp,0xf3b4ea54
  411bd2:	ins    BYTE PTR es:[edi],dx
  411bd3:	inc    ecx
  411bd4:	pop    eax
  411bd5:	ss mov bl,0x24
  411bd8:	pop    ebx
  411bd9:	push   cs
  411bda:	xchg   esp,eax
  411bdb:	jne    0x411b78
  411bdd:	fs retf 
  411bdf:	sub    DWORD PTR [ecx-0x564372b7],edx
  411be5:	add    DWORD PTR [ebp+0x5e7af711],esp
  411beb:	xchg   BYTE PTR [esi+0x52098d4e],al
  411bf1:	push   ebp
  411bf2:	lock xchg ebp,eax
  411bf4:	add    eax,0x259c2def
  411bf9:	sub    ebx,ecx
  411bfb:	outs   dx,BYTE PTR ds:[esi]
  411bfc:	add    eax,0x217e124b
  411c01:	aam    0x4e
  411c03:	stos   BYTE PTR es:[edi],al
  411c04:	push   0xea7ae638
  411c09:	je     0x411c4c
  411c0b:	mov    ebp,0xb9b84d3e
  411c10:	test   eax,0xd0afaf7b
  411c15:	int3   
  411c16:	mov    cl,0xdb
  411c18:	stc    
  411c19:	pop    esp
  411c1a:	add    edi,DWORD PTR [esi]
  411c1c:	adc    eax,0x50d3f347
  411c21:	fidiv  DWORD PTR [ecx-0x4b]
  411c24:	jmp    0x411c1d
  411c26:	jns    0x411c29
  411c28:	pushf  
  411c29:	(bad)
  411c2d:	leave  
  411c2e:	ret    
  411c2f:	(bad)  
  411c30:	hlt    
  411c31:	sbb    al,0xe0
  411c33:	adc    cl,cl
  411c35:	gs xchg ebx,eax
  411c37:	out    dx,eax
  411c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c39:	mov    ch,bl
  411c3b:	dec    edi
  411c3c:	xchg   esp,eax
  411c3d:	mov    bl,0x63
  411c3f:	mov    ds,WORD PTR [esi+0x2b523bf1]
  411c45:	mov    ss,WORD PTR [ecx+0xbbead97]
  411c4b:	cwde   
  411c4c:	inc    esi
  411c4d:	adc    DWORD PTR [edx],edx
  411c4f:	out    0xd4,al
  411c51:	ss jle 0x411c6c
  411c54:	out    dx,eax
  411c55:	dec    edx
  411c56:	and    eax,0xdd657f
  411c5b:	cmp    bh,BYTE PTR [esi+0x191e3dc1]
  411c61:	out    dx,al
  411c62:	arpl   WORD PTR [eax-0x62],bp
  411c65:	dec    esi
  411c66:	arpl   WORD PTR [ebp+0x73],bx
  411c69:	addr16 push es
  411c6b:	mov    ebp,0xa22c50b3
  411c70:	sbb    eax,0x6217a4c9
  411c75:	dec    edx
  411c76:	fidiv  DWORD PTR [ecx]
  411c78:	xchg   esp,eax
  411c79:	cli    
  411c7a:	xchg   BYTE PTR [eax+ebx*4-0x667b8474],al
  411c81:	mov    ch,0x96
  411c83:	outs   dx,DWORD PTR ds:[esi]
  411c84:	push   ss
  411c85:	orps   xmm1,XMMWORD PTR [edx+0x6b46f31d]
  411c8c:	cwde   
  411c8d:	das    
  411c8e:	stc    
  411c8f:	scas   eax,DWORD PTR es:[edi]
  411c90:	push   edi
  411c91:	leave  
  411c92:	mov    eax,ds:0x71e16254
  411c97:	ja     0x411c42
  411c99:	jo     0x411cd6
  411c9b:	adc    BYTE PTR [esi-0x38],dl
  411c9e:	add    eax,0xebff1a83
  411ca3:	xchg   ebp,eax
  411ca4:	cmp    esp,DWORD PTR [edi]
  411ca6:	stos   BYTE PTR es:[edi],al
  411ca7:	hlt    
  411ca8:	adc    ebx,edi
  411caa:	or     DWORD PTR [ebp+0x7a17e91c],ebp
  411cb0:	inc    esi
  411cb1:	pop    es
  411cb2:	mov    dl,0x7b
  411cb4:	pop    edx
  411cb5:	out    dx,eax
  411cb6:	pop    edi
  411cb7:	xchg   DWORD PTR [edi+0x1d],edx
  411cba:	dec    edi
  411cbb:	sbb    dh,BYTE PTR [ebp+0x71]
  411cbe:	dec    esi
  411cbf:	pop    ds
  411cc0:	lods   al,BYTE PTR ds:[esi]
  411cc1:	outs   dx,BYTE PTR ds:[esi]
  411cc2:	call   0x7352cc90
  411cc7:	test   edx,0xeb1634b2
  411ccd:	(bad)  
  411ccf:	rol    BYTE PTR [ecx+0x6a5dc249],1
  411cd5:	jmp    0x199fa6bd
  411cda:	hlt    
  411cdb:	adc    ah,bh
  411cdd:	sub    eax,0xed72cfd5
  411ce2:	ja     0x411d12
  411ce4:	pop    ds
  411ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ce6:	or     DWORD PTR [esi+0x40],ecx
  411ce9:	(bad)  
  411cea:	rol    BYTE PTR [ebp-0x3d6a9f07],1
  411cf0:	into   
  411cf1:	inc    edi
  411cf2:	push   ds
  411cf3:	pushf  
  411cf4:	xchg   edi,eax
  411cf5:	mov    DWORD PTR [eax+0x76],ebx
  411cf8:	call   0xa64f:0xfc85932d
  411cff:	pop    ecx
  411d00:	loopne 0x411c88
  411d02:	ret    0xd7ea
  411d05:	cmp    DWORD PTR [ecx-0x67],esp
  411d08:	mov    ah,BYTE PTR [ebx-0x24d3ea03]
  411d0e:	aas    
  411d0f:	loop   0x411cc9
  411d11:	sub    ecx,ebp
  411d13:	lahf   
  411d14:	mov    ebx,0x17f33930
  411d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d1a:	shl    DWORD PTR [edx],0xaa
  411d1d:	inc    ecx
  411d1e:	xchg   edi,eax
  411d1f:	dec    esp
  411d20:	push   ebp
  411d21:	faddp  st(4),st
  411d23:	scas   eax,DWORD PTR es:[edi]
  411d24:	repnz sbb ch,cl
  411d27:	adc    BYTE PTR [ebp-0x3a039e70],bl
  411d2d:	inc    eax
  411d2e:	fsin   
  411d30:	aas    
  411d31:	int3   
  411d32:	jne    0x411d01
  411d34:	push   eax
  411d35:	ror    BYTE PTR [eax],0x4c
  411d38:	xor    eax,0x49afb1b5
  411d3d:	ret    
  411d3e:	sbb    DWORD PTR [edi+0xbb52051],esp
  411d44:	push   ecx
  411d45:	lods   al,BYTE PTR ds:[esi]
  411d46:	jne    0x411cf0
  411d48:	cli    
  411d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d4a:	dec    esi
  411d4b:	rol    DWORD PTR [ebx-0x1],cl
  411d4e:	xlat   BYTE PTR ds:[ebx]
  411d4f:	xor    BYTE PTR [edi+0x7f],cl
  411d52:	(bad)  
  411d54:	push   edx
  411d55:	test   al,0x6f
  411d57:	outs   dx,DWORD PTR ds:[esi]
  411d58:	iret   
  411d59:	ins    BYTE PTR es:[edi],dx
  411d5a:	ins    DWORD PTR es:[edi],dx
  411d5b:	je     0x411d0a
  411d5d:	ret    
  411d5e:	mov    ds,WORD PTR [eax+0x335ec2e5]
  411d64:	leave  
  411d65:	out    0x8e,eax
  411d67:	xor    eax,0xc1774973
  411d6c:	repz das 
  411d6e:	dec    eax
  411d6f:	aad    0x8
  411d71:	call   0x5e2d:0xcf850e68
  411d78:	add    al,0xa6
  411d7a:	mov    BYTE PTR [ebp-0x36],al
  411d7d:	mov    eax,0x85be2dd3
  411d82:	dec    esp
  411d83:	or     edx,ecx
  411d85:	cmp    cl,cl
  411d87:	adc    dh,BYTE PTR [edx-0x34]
  411d8a:	xchg   esp,eax
  411d8b:	push   ebx
  411d8c:	xchg   ebp,eax
  411d8d:	xchg   BYTE PTR ds:0xb66f6c8d,cl
  411d93:	lock jecxz 0x411d4c
  411d96:	jo     0x411d71
  411d98:	outs   dx,DWORD PTR ds:[esi]
  411d99:	push   0x12
  411d9b:	sahf   
  411d9c:	sub    eax,0x1ebda38f
  411da1:	mov    edi,0x524314d8
  411da6:	adc    ah,BYTE PTR [edx+0x4e67697]
  411dac:	out    0x4,eax
  411dae:	imul   ebp,DWORD PTR [ecx+edi*8],0x13b4f8cd
  411db5:	and    al,0x71
  411db7:	xchg   ebp,eax
  411db8:	sbb    esi,DWORD PTR [ebp-0xe]
  411dbb:	jp     0x411df2
  411dbd:	popf   
  411dbe:	inc    ecx
  411dbf:	fcomip st,st(2)
  411dc1:	popf   
  411dc2:	mov    eax,ds:0x1eafb8f3
  411dc7:	add    al,0x4d
  411dc9:	cmp    edx,edx
  411dcb:	mov    edx,0x66b1cf0b
  411dd0:	mov    ebp,0x10124652
  411dd5:	cdq    
  411dd6:	inc    esp
  411dd7:	leave  
  411dd8:	fcmovnbe st,st(1)
  411dda:	xchg   DWORD PTR [esi+0x78],eax
  411ddd:	nop
  411dde:	pop    ecx
  411ddf:	repnz add DWORD PTR [ecx+0x60],0x46
  411de4:	push   edx
  411de5:	pop    edi
  411de6:	cmp    al,0xcf
  411de8:	test   BYTE PTR [ecx],dl
  411dea:	mov    eax,0xd37d5306
  411def:	retf   0x66cc
  411df2:	jne    0x411db7
  411df4:	in     al,dx
  411df5:	cdq    
  411df6:	push   eax
  411df7:	icebp  
  411df8:	or     BYTE PTR [eax+0x43],dl
  411dfb:	push   eax
  411dfc:	xor    al,0xb9
  411dfe:	fucomip st,st(0)
  411e00:	loop   0x411ddd
  411e02:	jle    0x411d9e
  411e04:	xlat   BYTE PTR ds:[ebx]
  411e05:	jecxz  0x411e70
  411e07:	sbb    al,0xa6
  411e09:	sub    BYTE PTR [edi-0x7],ah
  411e0c:	stos   DWORD PTR es:[edi],eax
  411e0d:	push   esp
  411e0e:	push   ss
  411e0f:	xor    ch,ah
  411e11:	xor    eax,0xb9baf2ec
  411e16:	mov    bl,BYTE PTR [eax]
  411e18:	ss scas eax,DWORD PTR es:[edi]
  411e1a:	int    0x69
  411e1c:	ret    0x1fc6
  411e1f:	ss pop edi
  411e21:	mov    ch,0x6e
  411e23:	pushf  
  411e24:	inc    edi
  411e25:	pushf  
  411e26:	sub    al,0xb2
  411e28:	mov    esp,0x3826b988
  411e2d:	cli    
  411e2e:	int3   
  411e2f:	es icebp 
  411e31:	jmp    0x411e71
  411e33:	sbb    al,0xbe
  411e35:	ja     0x411e44
  411e37:	xor    al,0xa1
  411e39:	xchg   ebp,eax
  411e3a:	jne    0x411e9f
  411e3c:	icebp  
  411e3d:	int3   
  411e3e:	ror    BYTE PTR [ebx],0x3d
  411e41:	gs sub al,0xf4
  411e44:	dec    ecx
  411e45:	add    cl,BYTE PTR [eax-0x3fc84df8]
  411e4b:	dec    edi
  411e4c:	call   0x6cb3ac3d
  411e51:	cmp    BYTE PTR [esp+eax*8+0x67],dl
  411e55:	jmp    0xcf58:0x23407934
  411e5c:	fisttp QWORD PTR [edi+0x55dcca88]
  411e62:	pop    ds
  411e63:	lahf   
  411e64:	jne    0x411e3c
  411e66:	lock gs (bad) 
  411e69:	clc    
  411e6a:	es mov al,0xa2
  411e6d:	mov    ebx,0xe2448dbf
  411e72:	ret    
  411e73:	jb     0x411ec5
  411e75:	add    al,0x1a
  411e77:	mov    cs,WORD PTR [edx-0x53d52ca4]
  411e7d:	xchg   esi,eax
  411e7e:	xlat   BYTE PTR ds:[ebx]
  411e7f:	push   esi
  411e80:	pop    es
  411e81:	enter  0xfe5b,0x10
  411e85:	js     0x411eb7
  411e87:	xlat   BYTE PTR ds:[ebx]
  411e88:	push   ss
  411e89:	rcl    DWORD PTR [ecx],cl
  411e8b:	mov    bh,0xd0
  411e8d:	out    dx,eax
  411e8e:	sbb    ah,BYTE PTR [eax-0x3368a7b7]
  411e94:	jmp    0x34d2851d
  411e99:	mov    esi,DWORD PTR [edx+0x70]
  411e9c:	sahf   
  411e9d:	dec    ecx
  411e9e:	or     DWORD PTR [ecx-0x11],ebp
  411ea1:	sub    eax,DWORD PTR [edi]
  411ea3:	stos   DWORD PTR es:[edi],eax
  411ea4:	stos   BYTE PTR es:[edi],al
  411ea5:	in     al,0xed
  411ea7:	xchg   BYTE PTR [ecx*2+0x5b043171],ah
  411eae:	dec    esi
  411eaf:	sub    eax,0xe82f0909
  411eb4:	pop    ss
  411eb5:	inc    edx
  411eb6:	fst    QWORD PTR ds:0xc2afebff
  411ebc:	int3   
  411ebd:	int    0xe4
  411ebf:	rcr    DWORD PTR [edx-0xa],cl
  411ec2:	cmp    esp,esi
  411ec4:	pusha  
  411ec5:	xor    edi,DWORD PTR [edi]
  411ec7:	sub    al,0xe0
  411ec9:	daa    
  411eca:	in     al,dx
  411ecb:	mov    ah,0xad
  411ecd:	or     dh,BYTE PTR [eax+ebp*8-0x7cf94213]
  411ed4:	inc    ecx
  411ed5:	vmread DWORD PTR [ecx-0x64b3b987],edx
  411edc:	xor    DWORD PTR [ecx+edx*2-0x48],0x9293af3d
  411ee4:	sahf   
  411ee5:	bts    edi,edi
  411ee8:	mov    ebp,0x535b9388
  411eed:	xlat   BYTE PTR ds:[ebx]
  411eee:	sbb    dh,BYTE PTR [eax]
  411ef0:	les    ebx,FWORD PTR [esi]
  411ef2:	nop
  411ef3:	jns    0x411e7d
  411ef5:	stos   BYTE PTR es:[edi],al
  411ef6:	(bad)  
  411ef7:	repz (bad)
  411efa:	sbb    eax,edi
  411efc:	out    dx,al
  411efd:	push   ecx
  411efe:	mov    dl,0x7f
  411f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f01:	inc    esi
  411f02:	push   ss
  411f03:	or     DWORD PTR [eax-0x57],0x6f
  411f07:	shl    BYTE PTR [ebp-0x5c],1
  411f0a:	fcmovnu st,st(6)
  411f0c:	nop
  411f0d:	dec    esp
  411f0e:	fisub  WORD PTR [edi-0xd8cf55e]
  411f14:	cmp    eax,0x5b9434be
  411f19:	retf   0x59c0
  411f1c:	cmp    ah,cl
  411f1e:	mov    ds:0x214fe0fa,al
  411f23:	dec    ebp
  411f24:	mov    bh,0xf9
  411f26:	jp     0x411f8a
  411f28:	pop    edi
  411f29:	dec    eax
  411f2a:	test   DWORD PTR [edx-0x31],0x496b6eea
  411f31:	bt     esi,ebp
  411f34:	fwait
  411f35:	jle    0x411f20
  411f37:	adc    DWORD PTR [ebp+0x64],esi
  411f3a:	inc    ecx
  411f3b:	sbb    DWORD PTR [esi-0x59],edx
  411f3e:	aaa    
  411f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f40:	retf   
  411f41:	int    0x62
  411f43:	loop   0x411f8d
  411f45:	ss cdq 
  411f47:	mov    cl,0xfb
  411f49:	jno    0x411fba
  411f4b:	or     al,0x73
  411f4d:	mov    eax,0xb23c2ab0
  411f52:	jno    0x411f5e
  411f54:	cmc    
  411f55:	sub    al,0x2
  411f57:	jp     0x411f85
  411f59:	cmp    ebx,DWORD PTR [edx+ecx*1]
  411f5c:	pop    ss
  411f5d:	shl    BYTE PTR [ebx+0x52],1
  411f60:	(bad)  
  411f61:	loope  0x411fae
  411f63:	xchg   esi,eax
  411f64:	sub    eax,0x35dfd3a6
  411f69:	xchg   edi,eax
  411f6a:	jmp    0x2637:0xd44f68cd
  411f71:	sub    al,0xf1
  411f73:	mov    eax,es:0xd256a04d
  411f79:	call   0x2db:0x1acc92b6
  411f80:	mov    eax,0xf5c2f6b
  411f85:	cmp    BYTE PTR [ecx+0x40],dh
  411f88:	mov    WORD PTR [edi],gs
  411f8a:	addr16 nop
  411f8c:	cld    
  411f8d:	pop    ebx
  411f8e:	out    0x6a,eax
  411f90:	or     BYTE PTR [ebx-0x35423d00],al
  411f96:	jmp    0x411ff7
  411f98:	stos   BYTE PTR es:[edi],al
  411f99:	mov    ebp,0xd90e5d4c
  411f9e:	sbb    al,0xb7
  411fa0:	fs nop
  411fa2:	mov    bl,0x62
  411fa4:	icebp  
  411fa5:	int    0x9b
  411fa7:	mov    ebx,0x8407d2c8
  411fac:	cwde   
  411fad:	push   ds
  411fae:	add    bh,dl
  411fb0:	out    0xab,eax
  411fb2:	jmp    0x2ff97795
  411fb7:	leave  
  411fb8:	pop    ecx
  411fb9:	stos   BYTE PTR es:[edi],al
  411fba:	mov    bl,0xb3
  411fbc:	retf   
  411fbd:	int    0xbe
  411fbf:	call   0xa3d9:0x793708c1
  411fc6:	stos   BYTE PTR es:[edi],al
  411fc7:	mov    bh,0xdb
  411fc9:	das    
  411fca:	scas   eax,DWORD PTR es:[edi]
  411fcb:	leave  
  411fcc:	call   0xb064:0xf372178e
  411fd3:	retf   
  411fd4:	adc    ch,0x70
  411fd7:	mov    cl,0xa0
  411fd9:	test   BYTE PTR [eax+0x19],0x55
  411fdd:	jb     0x411f98
  411fdf:	pushf  
  411fe0:	mov    ss,eax
  411fe2:	push   esp
  411fe3:	test   DWORD PTR [edx+eiz*4],ebp
  411fe6:	sbb    DWORD PTR [ebx-0x7],ebp
  411fe9:	neg    DWORD PTR [ebx+0x196dd379]
  411fef:	in     al,0x8
  411ff1:	imul   edx,DWORD PTR [eax-0x6c6f88f1],0x66
  411ff8:	ds sub eax,0x12ea61d2
  411ffe:	xchg   ebp,eax
  411fff:	je     0x412022
  412001:	scas   al,BYTE PTR es:[edi]
  412002:	pop    edx
  412003:	repnz mov ah,dh
  412006:	fistp  WORD PTR ds:0x67ec4ca4
  41200c:	rcr    DWORD PTR [ebp+0x4c623155],cl
  412012:	xor    eax,0x6b8adb60
  412017:	popf   
  412018:	popf   
  412019:	cmc    
  41201a:	sub    DWORD PTR [edi-0x1b],ebp
  41201d:	retf   
  41201e:	xlat   BYTE PTR ds:[ebx]
  41201f:	out    dx,al
  412020:	adc    edx,DWORD PTR [esi+ebx*1+0x131ff310]
  412027:	lea    ecx,[edi+0x22]
  41202a:	jbe    0x412023
  41202c:	mov    ebx,0x79573d70
  412031:	stc    
  412032:	sbb    al,0x53
  412034:	xchg   ecx,eax
  412035:	pop    esp
  412036:	out    dx,al
  412037:	jle    0x41203c
  412039:	and    BYTE PTR [edi],al
  41203b:	daa    
  41203c:	pop    ebx
  41203d:	inc    edx
  41203e:	fsubr  QWORD PTR [esp]
  412041:	je     0x412066
  412043:	push   edx
  412044:	fiadd  WORD PTR [ebx]
  412046:	repz push ebp
  412048:	jbe    0x412039
  41204a:	imul   eax,DWORD PTR [eax],0x6
  41204d:	int    0xce
  41204f:	and    DWORD PTR es:[ecx+0x65],esp
  412053:	aas    
  412054:	repz cmp bh,BYTE PTR [esi+0x3bdd8640]
  41205b:	mov    al,ds:0x328a7e47
  412060:	xchg   esi,eax
  412061:	fistp  WORD PTR [edx]
  412063:	div    DWORD PTR [esi+0x4b9a7034]
  412069:	adc    ecx,esi
  41206b:	sub    eax,0x39ba1f8a
  412070:	sbb    bl,al
  412072:	cmp    al,0x68
  412074:	test   DWORD PTR [ecx+edx*8+0x75],esp
  412078:	jecxz  0x412091
  41207a:	add    ah,bl
  41207c:	add    ah,BYTE PTR [esi-0x58]
  41207f:	sbb    eax,0x5d9fe692
  412084:	dec    ebp
  412085:	popa   
  412086:	(bad)
  412089:	fisttp QWORD PTR [ebx]
  41208b:	je     0x41208e
  41208d:	call   0xf2ad724f
  412092:	dec    ebp
  412093:	enter  0x252e,0x7e
  412097:	dec    ecx
  412098:	dec    edi
  412099:	lods   al,BYTE PTR ds:[esi]
  41209a:	lea    esp,[edx]
  41209c:	stc    
  41209d:	mov    esp,0x173064e1
  4120a2:	jno    0x412120
  4120a4:	jle    0x412119
  4120a6:	fist   DWORD PTR [ebp+0x5e]
  4120a9:	iret   
  4120aa:	dec    ebx
  4120ab:	xor    DWORD PTR [ebx],0x40
  4120ae:	adc    esp,DWORD PTR [ebp-0x72d912f8]
  4120b4:	shr    BYTE PTR [ebp-0x1318b6c9],1
  4120ba:	sub    esi,eax
  4120bc:	dec    ecx
  4120bd:	or     eax,0xb340bf86
  4120c2:	xchg   ebx,eax
  4120c3:	lock stos BYTE PTR es:[edi],al
  4120c5:	shr    BYTE PTR [edi-0x6fe3193c],0x17
  4120cc:	retf   
  4120cd:	cmp    bl,BYTE PTR [eax+0x12]
  4120d0:	out    dx,al
  4120d1:	(bad)  
  4120d2:	push   edx
  4120d3:	jp     0x412058
  4120d5:	sbb    cl,BYTE PTR [eax+ecx*4+0x16]
  4120d9:	or     al,0x52
  4120db:	out    0x77,eax
  4120dd:	mov    edx,0x38b1f25d
  4120e2:	cld    
  4120e3:	adc    eax,0x1b01b30f
  4120e8:	aas    
  4120e9:	js     0x412073
  4120eb:	popf   
  4120ec:	ret    
  4120ed:	sub    BYTE PTR [edx],0x30
  4120f0:	pop    ebp
  4120f1:	loop   0x412100
  4120f3:	pop    es
  4120f4:	or     BYTE PTR [ecx-0x43],dl
  4120f7:	or     al,0xc0
  4120f9:	push   eax
  4120fa:	int3   
  4120fb:	push   cs
  4120fc:	or     bh,BYTE PTR [ecx-0x48]
  4120ff:	mov    ah,0x71
  412101:	out    0x27,al
  412103:	test   eax,0xfaa3525d
  412108:	bound  eax,QWORD PTR [ebp-0x54e60509]
  41210e:	mov    al,ds:0x7a5fe854
  412113:	xchg   DWORD PTR [ecx+eax*1-0x3c],ebp
  412117:	push   es
  412118:	mov    esp,0xcc38c908
  41211d:	stc    
  41211e:	push   DWORD PTR [ebx-0x38]
  412121:	int3   
  412122:	(bad)  
  412123:	test   BYTE PTR [edx-0x65fd82dc],dl
  412129:	mov    DWORD PTR [ecx+0x33],edx
  41212c:	out    dx,al
  41212d:	xor    BYTE PTR [eax+0x7],bh
  412130:	xchg   esi,eax
  412131:	popf   
  412132:	inc    esp
  412133:	adc    dh,cl
  412135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412136:	sub    al,0xee
  412138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412139:	ds pop ds
  41213b:	gs mov ?,edi
  41213e:	mov    esp,0x6537f2a9
  412143:	mov    ebp,0xf19dc7b6
  412148:	shl    DWORD PTR [edi+eax*2-0x17],1
  41214c:	cmp    eax,0xf5f85252
  412151:	and    eax,0x9a078cb7
  412156:	inc    ebx
  412157:	xchg   BYTE PTR [ecx],cl
  412159:	daa    
  41215a:	nop
  41215b:	sub    eax,DWORD PTR [eax+0x1cdcbf]
  412161:	std    
  412162:	xor    BYTE PTR [eax+0x57f2ec7c],cl
  412168:	std    
  412169:	daa    
  41216a:	mov    edi,0xd3b996
  41216f:	sub    al,0xdf
  412171:	xor    edx,ebp
  412173:	inc    edx
  412174:	xchg   esp,eax
  412175:	mov    ah,0xc9
  412177:	xor    eax,0xb9294da3
  41217c:	xor    al,0xcf
  41217e:	inc    edx
  41217f:	mov    esp,0x6246db17
  412184:	xchg   edi,eax
  412185:	int3   
  412186:	mov    esp,0xec81ebf0
  41218b:	setl   BYTE PTR [ebx-0x74e75f40]
  412192:	iret   
  412193:	pushf  
  412194:	xchg   ebx,eax
  412195:	xor    al,0xc
  412197:	sti    
  412198:	sub    BYTE PTR [edi+0x63],ch
  41219b:	inc    eax
  41219c:	push   ecx
  41219d:	fmul   DWORD PTR [ebp+0x2a]
  4121a0:	or     esp,ecx
  4121a2:	sbb    edi,ebx
  4121a4:	call   0xf12704c3
  4121a9:	jns    0x412207
  4121ab:	adc    al,0xdd
  4121ad:	dec    ecx
  4121ae:	mov    dl,0x29
  4121b0:	pop    esi
  4121b1:	fstp   DWORD PTR [edx+ebx*1-0x79]
  4121b5:	jne    0x41218f
  4121b7:	mov    dh,BYTE PTR [esi-0x62]
  4121ba:	push   0xce47d01f
  4121bf:	fnstcw WORD PTR [ebp+0x73]
  4121c2:	jae    0x412205
  4121c4:	dec    ebx
  4121c5:	mov    cl,0x56
  4121c7:	int    0x6e
  4121c9:	xlat   BYTE PTR ds:[ebx]
  4121ca:	xor    edi,eax
  4121cc:	aad    0x31
  4121ce:	mov    bh,0x85
  4121d0:	or     cl,BYTE PTR ds:0xeba5902d
  4121d6:	mov    edi,0xfca2601e
  4121db:	aad    0x23
  4121dd:	mov    dl,0x2d
  4121df:	and    esi,esi
  4121e1:	push   edx
  4121e2:	mov    al,BYTE PTR [edi]
  4121e4:	(bad)  
  4121e6:	mov    esp,0x5c84ab3f
  4121eb:	lahf   
  4121ec:	mov    fs,WORD PTR [eax-0xd]
  4121ef:	mov    ds:0xe5013f61,eax
  4121f4:	push   ebx
  4121f5:	lock adc al,0xe4
  4121f8:	add    dl,dl
  4121fa:	jae    0x4121a3
  4121fc:	not    DWORD PTR [esi]
  4121fe:	xor    eax,0x1c2df37
  412203:	(bad)  
  412204:	arpl   WORD PTR [edx+0x44],bp
  412207:	cmp    edx,DWORD PTR [ebx]
  412209:	aaa    
  41220a:	in     eax,0xc0
  41220c:	dec    esp
  41220d:	mov    eax,0xb867faa4
  412212:	popf   
  412213:	pop    es
  412214:	jns    0x4121f5
  412216:	lock sbb dl,BYTE PTR [eax-0x350b7381]
  41221d:	rcl    BYTE PTR [ebx-0x62],cl
  412220:	clc    
  412221:	pop    ecx
  412222:	lods   al,BYTE PTR ds:[esi]
  412223:	mov    eax,0xc5d81147
  412228:	sub    BYTE PTR [esi-0x71399346],dl
  41222e:	or     DWORD PTR [esi],ebx
  412230:	jl     0x4121c7
  412232:	in     eax,0x70
  412234:	bound  esi,QWORD PTR [edx]
  412236:	xchg   esp,eax
  412237:	js     0x4121d0
  412239:	and    BYTE PTR [edi],0x66
  41223c:	cmp    al,0x45
  41223e:	inc    esi
  41223f:	push   esp
  412240:	out    dx,eax
  412241:	jmp    0x412255
  412243:	retf   0xc94f
  412246:	push   esp
  412247:	inc    esi
  412248:	out    dx,al
  412249:	dec    ebp
  41224a:	icebp  
  41224b:	mov    ch,0xf7
  41224d:	mov    dh,0x8a
  41224f:	ins    DWORD PTR es:[edi],dx
  412250:	imul   eax,DWORD PTR [edx-0x11],0xe7377f36
  412257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412258:	aad    0x24
  41225a:	scas   eax,DWORD PTR es:[edi]
  41225b:	sub    ebp,DWORD PTR [edx+0x633a98f6]
  412261:	aas    
  412262:	stos   BYTE PTR es:[edi],al
  412263:	xchg   ecx,eax
  412264:	push   ss
  412265:	inc    edi
  412266:	sbb    al,BYTE PTR [esi-0x27]
  412269:	xor    BYTE PTR [ebp+0x6796305],bl
  41226f:	(bad)  
  412270:	(bad)  
  412271:	mov    ah,0xf5
  412273:	pop    ebp
  412274:	test   BYTE PTR [esi+0x68d92cff],dh
  41227a:	adc    eax,0x37ebd2ee
  41227f:	jl     0x4122e9
  412281:	aad    0x9d
  412283:	and    ebx,DWORD PTR [edx+0x5dbb7515]
  412289:	jae    0x412252
  41228b:	ins    DWORD PTR es:[edi],dx
  41228c:	jno    0x412255
  41228e:	jle    0x41221a
  412290:	mov    cl,0xb6
  412292:	pusha  
  412293:	arpl   dx,bp
  412295:	pop    ds
  412296:	mov    cl,0xf5
  412298:	mov    ebx,0xc53ab8b
  41229d:	xchg   ebx,eax
  41229e:	sbb    edi,DWORD PTR [edx-0x6b]
  4122a1:	lods   al,BYTE PTR ds:[esi]
  4122a2:	mov    esp,0x440dd08c
  4122a7:	data16 sbb BYTE PTR [eax+0x35],0x88
  4122ac:	adc    eax,0xdccc7d09
  4122b1:	push   edi
  4122b2:	inc    edx
  4122b3:	rcr    edi,cl
  4122b5:	mov    ebp,ss
  4122b7:	in     eax,dx
  4122b8:	das    
  4122b9:	mov    BYTE PTR [eax-0x7],al
  4122bc:	push   edi
  4122bd:	jne    0x4122a3
  4122bf:	inc    ebp
  4122c0:	sub    al,0xb0
  4122c2:	outs   dx,BYTE PTR ds:[esi]
  4122c3:	mov    ebx,0x9d14c7e9
  4122c8:	ins    BYTE PTR es:[edi],dx
  4122c9:	mov    edx,edi
  4122cb:	push   es
  4122cc:	lods   eax,DWORD PTR ds:[esi]
  4122cd:	imul   DWORD PTR [esi]
  4122cf:	ins    BYTE PTR es:[edi],dx
  4122d0:	in     eax,dx
  4122d1:	dec    ebp
  4122d2:	cmp    edx,DWORD PTR [ecx]
  4122d4:	push   DWORD PTR [ecx+0x1e1458a]
  4122da:	repz sub esp,ecx
  4122dd:	ds push ecx
  4122df:	dec    esp
  4122e0:	xor    BYTE PTR [esi-0x6c0d3e3e],cl
  4122e6:	mov    al,dh
  4122e8:	aas    
  4122e9:	test   bl,cl
  4122eb:	lods   eax,DWORD PTR ds:[esi]
  4122ec:	test   eax,0x2f43473b
  4122f1:	pusha  
  4122f2:	out    0xbc,eax
  4122f4:	in     eax,dx
  4122f5:	push   0x27
  4122f7:	or     al,0x58
  4122f9:	and    edx,ebx
  4122fb:	sbb    esp,edi
  4122fd:	ret    0xf106
  412300:	int3   
  412301:	or     al,0x34
  412303:	xlat   BYTE PTR ds:[ebx]
  412304:	jmp    0x41234b
  412306:	retf   
  412307:	or     al,0xf3
  412309:	pop    es
  41230a:	call   0xdf0e:0xed054c17
  412311:	and    eax,ecx
  412313:	mov    ebx,0x3be8fbe2
  412318:	mov    al,ds:0x3db3e55d
  41231d:	sub    edi,DWORD PTR [esi-0x5e]
  412320:	daa    
  412321:	mov    ds:0x231c7689,al
  412326:	sbb    eax,0xb2053b65
  41232b:	pop    esp
  41232c:	stos   BYTE PTR es:[edi],al
  41232d:	jne    0x4123a8
  41232f:	sbb    BYTE PTR [eax+0x4a],ah
  412332:	jb     0x41238c
  412334:	ds int 0x13
  412337:	lods   eax,DWORD PTR ds:[esi]
  412338:	inc    esp
  412339:	pop    es
  41233a:	cmp    al,0xed
  41233c:	loopne 0x4122e7
  41233e:	ins    BYTE PTR es:[edi],dx
  41233f:	(bad)  
  412340:	call   0xddb5:0xac4cb91b
  412347:	shl    DWORD PTR [edx-0x6a8822ba],cl
  41234d:	fist   DWORD PTR [eax-0x456ea851]
  412353:	call   0x3939:0xcdff8281
  41235a:	popf   
  41235b:	fild   DWORD PTR [esi+0x51]
  41235e:	ret    
  41235f:	jbe    0x41231b
  412361:	xlat   BYTE PTR ds:[ebx]
  412362:	sub    al,0x2d
  412364:	jmp    0x2edc:0x11dcd757
  41236b:	scas   al,BYTE PTR es:[edi]
  41236c:	fs jo  0x41232c
  41236f:	adc    DWORD PTR [ebp+0x72],ecx
  412372:	out    0x4b,ax
  412375:	cld    
  412376:	pop    esp
  412377:	mov    ds:0x5b3961d4,al
  41237c:	add    al,0x14
  41237e:	inc    edx
  41237f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412380:	scas   eax,DWORD PTR es:[edi]
  412381:	imul   eax,DWORD PTR [ebx+0x51ae912a],0xea8bf4f7
  41238b:	int3   
  41238c:	sub    edi,DWORD PTR [ebx+0x2741a0e3]
  412392:	in     eax,dx
  412393:	aas    
  412394:	std    
  412395:	mov    es,WORD PTR [edx]
  412397:	in     eax,0xdb
  412399:	xchg   DWORD PTR [eax-0x7eda685f],edi
  41239f:	imul   edx,DWORD PTR [eax+0x19],0x49438113
  4123a6:	jns    0x412418
  4123a8:	ds and esp,eax
  4123ab:	out    0x83,eax
  4123ad:	lods   al,BYTE PTR ds:[esi]
  4123ae:	rcpps  xmm0,XMMWORD PTR [esi-0xa174341]
  4123b5:	cmp    ebp,DWORD PTR [ecx+0x1b1cd3ea]
  4123bb:	retf   0xae0a
  4123be:	(bad)  
  4123bf:	jae    0x41234f
  4123c1:	push   edx
  4123c2:	loop   0x41235c
  4123c4:	mov    ds:0xfce9df1b,al
  4123c9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4123cb:	jno    0x4123da
  4123cd:	mov    dl,0xc4
  4123cf:	pop    ss
  4123d0:	inc    edx
  4123d1:	dec    ebp
  4123d2:	enter  0xc275,0xa5
  4123d6:	dec    ecx
  4123d7:	js     0x41239d
  4123d9:	mov    ch,0xa0
  4123db:	fldcw  WORD PTR [eax-0x8]
  4123de:	or     eax,0x7f4f065d
  4123e3:	dec    edx
  4123e4:	and    bl,BYTE PTR [esi+0x6f]
  4123e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e8:	les    ecx,FWORD PTR [esi+0x5078b441]
  4123ee:	test   al,0x44
  4123f0:	push   ss
  4123f1:	mov    eax,esi
  4123f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f4:	test   DWORD PTR [edx],edi
  4123f6:	mov    ecx,0x36bd64ae
  4123fb:	push   ebp
  4123fc:	or     DWORD PTR [edi],ebx
  4123fe:	add    ah,dl
  412400:	xchg   DWORD PTR [ebx+0x17],esi
  412403:	xchg   esi,eax
  412404:	jle    0x412391
  412406:	or     BYTE PTR [ebp-0x71],bl
  412409:	xor    edi,DWORD PTR [eax+0x1cd45e15]
  41240f:	cli    
  412410:	push   es
  412411:	out    dx,eax
  412412:	sbb    BYTE PTR [ecx+0x18],al
  412415:	xchg   ebp,eax
  412416:	fs je  0x412444
  412419:	pushf  
  41241a:	xchg   esi,eax
  41241b:	lahf   
  41241c:	add    esi,DWORD PTR [ebp-0x52]
  41241f:	or     ch,0xcd
  412422:	mov    ds:0x10b90845,al
  412427:	or     eax,ebp
  412429:	mov    esp,0xb0243dce
  41242e:	adc    DWORD PTR [edx-0x36],ebx
  412431:	inc    edi
  412432:	jl     0x41249e
  412434:	ins    DWORD PTR es:[edi],dx
  412435:	inc    ebp
  412436:	(bad)  
  412437:	jg     0x41247d
  412439:	mov    ds:0xd1553541,al
  41243e:	push   edx
  41243f:	and    eax,0x693f5c2b
  412444:	inc    ebx
  412445:	movups xmm1,xmm0
  412448:	jmp    0x41247f
  41244a:	adc    bh,BYTE PTR [edx+0x7e242d99]
  412450:	xor    al,0xdb
  412452:	call   0x7c8b75d0
  412457:	arpl   WORD PTR [edx-0x1a],cx
  41245a:	inc    eax
  41245b:	std    
  41245c:	rcr    dl,cl
  41245e:	add    DWORD PTR [edx+ebp*8],ebp
  412461:	inc    ecx
  412462:	push   esi
  412463:	shl    ecx,0x5
  412466:	loope  0x412406
  412468:	mov    al,0xd8
  41246a:	daa    
  41246b:	dec    BYTE PTR ds:0x369ecee0
  412471:	adc    ch,BYTE PTR [edi-0x22]
  412474:	in     al,dx
  412475:	mov    DWORD PTR [ecx],edi
  412477:	adc    cl,BYTE PTR [eax+ebx*1]
  41247a:	inc    esi
  41247b:	into   
  41247c:	scas   al,BYTE PTR es:[edi]
  41247d:	inc    ecx
  41247e:	aaa    
  41247f:	dec    ecx
  412480:	xor    ebx,edi
  412482:	mov    ch,0x0
  412484:	jle    0x41244a
  412486:	cld    
  412487:	cld    
  412488:	stos   BYTE PTR es:[edi],al
  412489:	data16 mov WORD PTR [eax+0x0],es
  41248d:	rcl    DWORD PTR [esp+ecx*1-0x44297ed],1
  412494:	cwde   
  412495:	daa    
  412496:	lods   al,BYTE PTR ds:[esi]
  412497:	repz loopne 0x4124cf
  41249a:	mov    ds:0xea73324,eax
  41249f:	stos   DWORD PTR es:[edi],eax
  4124a0:	scas   eax,DWORD PTR es:[edi]
  4124a1:	in     al,0x7d
  4124a3:	jmp    0x37e0:0xbde43b14
  4124aa:	jge    0x4124ac
  4124ac:	(bad)  
  4124ae:	fnstenv [eax+0x3b3566b6]
  4124b4:	adc    eax,0xa6375a6d
  4124b9:	leave  
  4124ba:	or     eax,0xf5122370
  4124bf:	pop    ss
  4124c0:	sub    eax,0x5e729327
  4124c5:	out    dx,al
  4124c6:	mov    ah,0xd5
  4124c8:	ins    DWORD PTR es:[edi],dx
  4124c9:	imul   esi,DWORD PTR [ebx],0x48
  4124cc:	out    dx,eax
  4124cd:	and    edi,eax
  4124cf:	shl    DWORD PTR [edx],0xda
  4124d2:	lods   eax,DWORD PTR ds:[esi]
  4124d3:	gs fwait
  4124d5:	cld    
  4124d6:	or     DWORD PTR [ebx-0x7b],0xffffffcc
  4124da:	js     0x4124a8
  4124dc:	retf   0xb217
  4124df:	sbb    edi,0xb9e79156
  4124e5:	retf   
  4124e6:	idiv   BYTE PTR [edi+0x4666a63c]
  4124ec:	cmp    al,0x9d
  4124ee:	lea    ecx,[edi]
  4124f0:	outs   dx,BYTE PTR ds:[esi]
  4124f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124f2:	add    BYTE PTR [esi],cl
  4124f4:	rcl    DWORD PTR ds:[eax],1
  4124f7:	adc    eax,0x91d472ed
  4124fc:	mov    ch,0xd1
  4124fe:	xor    esi,DWORD PTR [esi]
  412500:	es test al,0x82
  412503:	ror    BYTE PTR [ecx-0x1a],0xfc
  412507:	inc    ebx
  412508:	sbb    al,0xc5
  41250a:	mov    ds:0xfedeb4cd,al
  41250f:	aam    0x7e
  412511:	call   0x31f1:0xe30ed443
  412518:	mov    esi,0x94080002
  41251d:	lea    edx,[edx-0x11]
  412520:	and    bh,dh
  412522:	sub    edi,DWORD PTR [esi+edx*8+0x35]
  412526:	or     eax,0xaa5172c2
  41252b:	addr16 pop ebp
  41252d:	(bad)  
  41252e:	xor    al,0x78
  412530:	mov    ecx,0x33c72954
  412535:	cmp    BYTE PTR [edx+ecx*8],0xb
  412539:	jmp    0xfa10fbc2
  41253e:	retf   
  41253f:	in     al,0x29
  412541:	add    al,0x4
  412543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412544:	mov    eax,0xaee11cb4
  412549:	aaa    
  41254a:	popf   
  41254b:	test   eax,0xab83e7e7
  412550:	fnstenv [ebx-0x65255cf3]
  412556:	in     al,0xe7
  412558:	mov    cl,0xd9
  41255a:	or     BYTE PTR [ecx],bl
  41255c:	sbb    DWORD PTR [ecx-0x6d],edi
  41255f:	push   ds
  412560:	sub    eax,0x6c74621
  412565:	mov    edi,DWORD PTR [edi+0x3]
  412568:	cmp    eax,0x4a73b4f2
  41256d:	pop    esp
  41256e:	push   DWORD PTR [edi-0x7af51e87]
  412574:	mov    ds:0x59904d80,eax
  412579:	push   eax
  41257a:	mov    BYTE PTR [ebx-0x33510c54],bl
  412580:	lahf   
  412581:	jl     0x41258f
  412583:	in     al,dx
  412584:	jge    0x4125bb
  412586:	inc    ecx
  412587:	js     0x412565
  412589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41258a:	push   es
  41258b:	push   ebx
  41258c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41258d:	test   DWORD PTR [ecx],0x8b9aef39
  412593:	push   ds
  412594:	inc    edx
  412595:	push   ebp
  412596:	xor    ebp,esp
  412598:	and    eax,0xe7fc21e9
  41259d:	mov    ecx,0xc854af80
  4125a2:	mov    esi,0x4810c79d
  4125a7:	xlat   BYTE PTR ds:[ebx]
  4125a8:	or     esi,edx
  4125aa:	or     bl,bl
  4125ac:	or     esp,eax
  4125ae:	dec    edi
  4125af:	js     0x4125c2
  4125b1:	mov    esp,ebx
  4125b3:	or     ebp,ebx
  4125b5:	repz and DWORD PTR [esi-0x61],edi
  4125b9:	aam    0x79
  4125bb:	push   ebp
  4125bc:	lea    edx,[edx-0x11]
  4125bf:	jbe    0x4125ad
  4125c1:	fwait
  4125c2:	not    dh
  4125c4:	mov    al,ds:0x9ffd6ff4
  4125c9:	xor    al,dh
  4125cb:	bound  ebp,QWORD PTR [edx+0x760f87af]
  4125d1:	xchg   DWORD PTR [eax],esi
  4125d3:	rcl    esi,cl
  4125d5:	add    bh,BYTE PTR [edx+0x71]
  4125d8:	jmp    0x4125e2
  4125da:	cld    
  4125db:	add    esi,DWORD PTR [esi-0x38]
  4125de:	(bad)  
  4125df:	xor    esp,esi
  4125e1:	aad    0x11
  4125e3:	ins    DWORD PTR es:[edi],dx
  4125e4:	clc    
  4125e5:	mov    ds:0xdfc7af84,al
  4125ea:	xor    ah,BYTE PTR [eax+0x0]
  4125ed:	jge    0x41259c
  4125ef:	ins    DWORD PTR es:[edi],dx
  4125f0:	or     eax,0x68a0540e
  4125f5:	ins    BYTE PTR es:[edi],dx
  4125f6:	adc    dh,dh
  4125f8:	shr    DWORD PTR [eax+0x450cd41e],cl
  4125fe:	and    ch,bh
  412600:	sti    
  412601:	dec    esi
  412602:	push   esp
  412603:	jb     0x41262c
  412605:	int3   
  412606:	frstor [esi-0x3d00668c]
  41260c:	mov    ebx,0xaa467909
  412611:	rol    BYTE PTR [edi-0x6f911d52],cl
  412617:	sub    al,BYTE PTR [ecx+eiz*8-0x56ade4cb]
  41261e:	adc    al,0x2b
  412620:	and    al,0x19
  412622:	pop    ecx
  412623:	cmp    DWORD PTR [edi+0x7e2c5b8c],edi
  412629:	ficom  WORD PTR [ebp+0x11]
  41262c:	mov    esi,0x83ac603
  412631:	sti    
  412632:	neg    ebx
  412634:	xchg   edi,eax
  412635:	and    al,0x4e
  412637:	cmp    ebp,DWORD PTR [esi-0x6d2e9b40]
  41263d:	and    eax,0x32a6199e
  412642:	sub    DWORD PTR [eax-0x7e],edx
  412645:	dec    edx
  412646:	and    esp,DWORD PTR [ebx+0x1e0c1feb]
  41264c:	enter  0xdd9e,0x32
  412650:	mov    eax,ds:0x60217e93
  412655:	loopne 0x4126c0
  412657:	xor    eax,0x66de69c7
  41265c:	shl    esp,cl
  41265e:	imul   ebp,eax,0x2a
  412661:	inc    ebx
  412662:	xchg   BYTE PTR [eax+0x45f7b7b8],dh
  412668:	mov    ebp,0xfaf31672
  41266d:	xchg   esp,eax
  41266e:	mov    ah,0xb0
  412670:	ss daa 
  412672:	div    eax
  412674:	emms   
  412676:	mov    ebp,0x2189f3b9
  41267b:	mov    dl,0xac
  41267d:	mov    DWORD PTR [eax-0x1b9ff898],ecx
  412683:	mov    ebp,0x79348e0d
  412688:	or     al,0xa3
  41268a:	mov    cl,0x2a
  41268c:	(bad)  [edi+0x15]
  41268f:	dec    ebx
  412690:	out    0x2a,eax
  412692:	lahf   
  412693:	mov    ebp,0x57c3308e
  412698:	jno    0x41265c
  41269a:	jge    0x41268d
  41269c:	pop    ebp
  41269d:	jge    0x412681
  41269f:	jb     0x4126f6
  4126a1:	push   ds
  4126a2:	xor    ebx,DWORD PTR [eax]
  4126a4:	mov    eax,ds:0xe6e1c5a5
  4126a9:	lea    ebp,[edi-0x206f5f6e]
  4126af:	mov    esi,0xae27bcc4
  4126b4:	cmp    al,0xdc
  4126b6:	sub    bl,BYTE PTR ds:0xb22b6e1b
  4126bc:	xor    al,0xbc
  4126be:	sbb    BYTE PTR [ebx-0x24],dl
  4126c1:	xchg   ebp,eax
  4126c2:	repnz mov edx,0xd69715e3
  4126c8:	push   eax
  4126c9:	dec    ebx
  4126ca:	int    0xb7
  4126cc:	mov    ds:0xb5f9e1ca,eax
  4126d1:	test   al,0x4c
  4126d3:	in     al,0xa9
  4126d5:	lahf   
  4126d6:	xchg   ecx,eax
  4126d7:	outs   dx,BYTE PTR ds:[esi]
  4126d8:	jns    0x4126e2
  4126da:	sar    BYTE PTR [esi+0x7c],1
  4126dd:	daa    
  4126de:	cmp    edx,DWORD PTR [bp-0xf]
  4126e2:	xchg   edx,eax
  4126e3:	sbb    ecx,DWORD PTR [esi-0x75]
  4126e6:	in     al,0x55
  4126e8:	push   0x7b
  4126ea:	retf   
  4126eb:	xor    BYTE PTR [edx-0x167b039e],ah
  4126f1:	out    dx,al
  4126f2:	jmp    FWORD PTR [ecx-0x61]
  4126f5:	retf   
  4126f6:	ror    DWORD PTR [edi+0x5b06a0ad],cl
  4126fc:	or     al,0x12
  4126fe:	inc    ebp
  4126ff:	mov    bl,0x67
  412701:	jp     0x412715
  412703:	inc    ebp
  412704:	popf   
  412705:	cmp    cl,BYTE PTR [ecx]
  412707:	mov    al,ds:0xb857df2b
  41270c:	mov    DWORD PTR [edi-0x44f423a8],ebx
  412712:	jmp    0xcb93:0x5cc1f400
  412719:	(bad)  
  41271a:	in     eax,0x79
  41271c:	or     esp,DWORD PTR [edx-0x69]
  41271f:	pop    ebp
  412720:	cmp    ah,cl
  412722:	and    bx,WORD PTR [edx]
  412725:	mov    ebx,0x1a70c38
  41272a:	pop    ebp
  41272b:	in     al,dx
  41272c:	gs sti 
  41272e:	sahf   
  41272f:	jle    0x4126e1
  412731:	mov    ebx,0xd98cddb6
  412736:	adc    al,0xb8
  412738:	jg     0x412761
  41273a:	mov    dh,0xf5
  41273c:	aad    0xa8
  41273e:	jp     0x41270f
  412740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412741:	mov    ds:0xbbeb8be7,eax
  412746:	(bad)  
  412747:	fistp  WORD PTR [ebp+0x4]
  41274a:	ja     0x4126f6
  41274c:	std    
  41274d:	inc    esp
  41274e:	adc    eax,0xe4636df
  412753:	imul   eax,DWORD PTR [ecx+0x71],0x9a57c04
  41275a:	or     ecx,DWORD PTR [eax+edi*4-0x6c]
  41275e:	out    dx,al
  41275f:	mov    ecx,0x2e86e2a6
  412764:	pop    ecx
  412765:	stos   DWORD PTR es:[edi],eax
  412766:	aaa    
  412767:	inc    ebp
  412768:	rcl    bl,0xe8
  41276b:	xchg   ecx,eax
  41276c:	stos   BYTE PTR es:[edi],al
  41276d:	xchg   ebp,eax
  41276e:	pop    ss
  41276f:	pop    edx
  412770:	and    bh,BYTE PTR [esi+0x79ab7d32]
  412776:	dec    esi
  412777:	pushf  
  412778:	fild   QWORD PTR [eax-0x52]
  41277b:	in     eax,dx
  41277c:	dec    edx
  41277d:	test   bl,ch
  41277f:	loopne 0x4127e3
  412781:	adc    ebx,esp
  412783:	outs   dx,BYTE PTR ds:[esi]
  412784:	xor    ebx,eax
  412786:	xor    al,0x32
  412789:	loop   0x41272c
  41278b:	xor    BYTE PTR [edx+eiz*2],ch
  41278e:	inc    eax
  41278f:	nop
  412790:	les    ebx,FWORD PTR [ebx]
  412792:	inc    ebx
  412793:	pusha  
  412794:	in     al,0x4e
  412796:	pop    ebx
  412797:	sbb    eax,0xacd5719b
  41279c:	xor    esi,edi
  41279e:	aad    0x42
  4127a0:	dec    edx
  4127a1:	outs   dx,BYTE PTR ds:[esi]
  4127a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a3:	sbb    BYTE PTR [esi+esi*2],dh
  4127a6:	fild   QWORD PTR [ebx]
  4127a8:	xchg   esp,eax
  4127a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127aa:	mov    ecx,0x1455702
  4127af:	call   0x75ee:0x548e263a
  4127b6:	call   0x4ca2:0x2acc0b49
  4127bd:	xor    dl,BYTE PTR [esi+0x5e]
  4127c0:	clc    
  4127c1:	pop    ecx
  4127c2:	push   cs
  4127c3:	push   esi
  4127c4:	jns    0x412787
  4127c6:	adc    al,0x92
  4127c8:	int    0xac
  4127ca:	pushf  
  4127cb:	xor    ebx,0x1e40048d
  4127d1:	arpl   WORD PTR [edx],cx
  4127d3:	(bad)  
  4127d4:	and    cl,ch
  4127d6:	pop    edx
  4127d7:	shl    DWORD PTR [edx],cl
  4127d9:	lock jg 0x412852
  4127dc:	ins    BYTE PTR es:[edi],dx
  4127dd:	lods   al,BYTE PTR ds:[esi]
  4127de:	out    0xf6,eax
  4127e0:	cdq    
  4127e1:	push   edi
  4127e2:	aad    0xc3
  4127e4:	scas   eax,DWORD PTR es:[edi]
  4127e5:	adc    al,BYTE PTR [ebp+0x46d3598e]
  4127eb:	or     edi,0x70
  4127ee:	mov    dh,0xfc
  4127f0:	dec    eax
  4127f1:	loopne 0x4127b6
  4127f3:	sahf   
  4127f4:	je     0x4127af
  4127f6:	and    al,0x7f
  4127f8:	iret   
  4127f9:	pop    ebp
  4127fa:	fs popf 
  4127fc:	inc    esi
  4127fd:	out    0xc3,al
  4127ff:	sub    al,0x6
  412801:	sbb    dh,BYTE PTR [edx-0x37e40556]
  412807:	inc    ebp
  412808:	xor    DWORD PTR [esi],edx
  41280a:	cmp    ebx,DWORD PTR [ecx+0x3e8d5a01]
  412810:	mov    ebp,0x3f9cc51f
  412815:	inc    esi
  412816:	mov    eax,ds:0x8eba1d50
  41281b:	fwait
  41281c:	sbb    DWORD PTR [ecx],esi
  41281e:	cmp    al,0x37
  412820:	(bad)  
  412821:	mov    ecx,0x1dc0efde
  412826:	adc    BYTE PTR [edi-0x5e],dl
  412829:	leave  
  41282a:	xor    cl,BYTE PTR [esi-0x5b]
  41282d:	sbb    DWORD PTR [esi+0x31],ebx
  412830:	mov    bl,BYTE PTR [eax]
  412832:	pop    ds
  412833:	shr    esp,cl
  412835:	arpl   WORD PTR [ebx],bp
  412837:	enter  0x4771,0x6b
  41283b:	and    eax,0xd1a83f42
  412840:	sub    eax,edi
  412842:	add    al,0xcc
  412844:	adc    eax,0x22e6f722
  412849:	popa   
  41284a:	push   edi
  41284b:	and    eax,0x627a9426
  412850:	(bad)  
  412851:	gs sti 
  412853:	shr    ah,cl
  412855:	mov    dl,0xe0
  412857:	popa   
  412858:	inc    ebx
  412859:	mov    bh,0xce
  41285b:	sbb    al,0x12
  41285d:	dec    edx
  41285e:	sbb    al,0xd8
  412860:	ret    0x635b
  412863:	mov    ecx,0x252e25d6
  412868:	dec    ebp
  412869:	sub    BYTE PTR [edx],dl
  41286b:	xchg   edi,eax
  41286c:	push   ebp
  41286d:	xor    BYTE PTR [ebx+0x3ec663be],cl
  412873:	or     al,0x5a
  412875:	inc    eax
  412876:	scas   al,BYTE PTR es:[edi]
  412877:	inc    edi
  412878:	enter  0x4212,0xbd
  41287c:	mov    ah,0x63
  41287e:	and    DWORD PTR [eax],edx
  412880:	repnz cmp al,0x32
  412883:	adc    DWORD PTR [ebx+0x3f],ebx
  412886:	adc    eax,0x429e246c
  41288b:	mov    al,0x86
  41288d:	mov    dl,0xb6
  41288f:	fadd   st(5),st
  412891:	or     dh,ah
  412893:	test   DWORD PTR [ebx+0x11315fb0],0x4c6fa300
  41289d:	xor    DWORD PTR [ebp+0xd6e337f],esp
  4128a3:	je     0x41289a
  4128a5:	test   al,0xd6
  4128a7:	in     eax,0x3d
  4128a9:	inc    edx
  4128aa:	sub    al,0x49
  4128ac:	jge    0x4128d0
  4128ae:	out    dx,eax
  4128af:	mov    ah,0x4c
  4128b1:	xor    al,0xf5
  4128b3:	cmp    dl,BYTE PTR [edi+ecx*1+0x22522756]
  4128ba:	popa   
  4128bb:	in     al,0xda
  4128bd:	inc    ecx
  4128be:	xchg   ebp,eax
  4128bf:	mov    edx,0x4d1c1d1a
  4128c4:	or     BYTE PTR [ebx+esi*4-0x2faec5d],bh
  4128cb:	outs   dx,BYTE PTR ds:[esi]
  4128cc:	sti    
  4128cd:	push   ebp
  4128ce:	jae    0x4128ed
  4128d0:	push   ecx
  4128d1:	div    esi
  4128d3:	push   ds
  4128d4:	fst    QWORD PTR [edx]
  4128d6:	gs dec edx
  4128d8:	aad    0x53
  4128da:	push   0xaf4053fb
  4128df:	inc    ebx
  4128e0:	stos   BYTE PTR es:[edi],al
  4128e1:	std    
  4128e2:	mov    ds:0x598e0e33,al
  4128e7:	aam    0x82
  4128e9:	bnd jle 0x4128d8
  4128ec:	ja     0x4128af
  4128ee:	sbb    eax,edi
  4128f0:	data16 cmp ah,bh
  4128f3:	js     0x41293c
  4128f5:	mov    ch,al
  4128f7:	jo     0x4128bf
  4128f9:	adc    al,dh
  4128fb:	push   ds
  4128fc:	mov    ah,0xd8
  4128fe:	lock popf 
  412900:	dec    eax
  412901:	ss ds pop edx
  412904:	add    BYTE PTR [ecx+0x4d],0xed
  412908:	add    DWORD PTR [ecx+0x2bbb573],edx
  41290e:	dec    eax
  41290f:	fidiv  WORD PTR [edi]
  412911:	cld    
  412912:	mov    ds:0x89eac7db,eax
  412917:	jae    0x41291d
  412919:	dec    edx
  41291a:	xlat   BYTE PTR ds:[ebx]
  41291b:	push   0xffffffa3
  41291d:	sbb    DWORD PTR [esi],ecx
  41291f:	cwde   
  412920:	stos   DWORD PTR es:[edi],eax
  412921:	aad    0x21
  412923:	aaa    
  412924:	enter  0xb538,0x33
  412928:	stc    
  412929:	and    DWORD PTR [edx+0x74f23d6],0xd5d4e371
  412933:	stos   DWORD PTR es:[edi],eax
  412934:	aas    
  412935:	dec    eax
  412936:	mov    ebp,0x582b9b92
  41293b:	xor    DWORD PTR [edx],ebp
  41293d:	bound  esi,QWORD PTR [edx+0x6963a7e4]
  412943:	fs stos DWORD PTR es:[edi],eax
  412945:	push   ecx
  412946:	mov    cl,0x8a
  412948:	neg    dl
  41294a:	push   es
  41294b:	inc    edx
  41294c:	adc    eax,DWORD PTR [ecx+0x60]
  41294f:	pop    es
  412950:	popf   
  412951:	xor    al,0x2f
  412953:	cmp    DWORD PTR [ebp+0x33],0xffffffc5
  412957:	lock out 0xf7,al
  41295a:	mov    ah,0x58
  41295c:	(bad)  
  41295d:	sbb    al,BYTE PTR [esi+0x4b]
  412960:	sbb    dh,al
  412962:	(bad)  
  412963:	out    0x8e,al
  412965:	jle    0x41294d
  412967:	fdiv   QWORD PTR [ebx]
  412969:	adc    BYTE PTR ds:0x18b513f6,0xf8
  412970:	adc    eax,0xb8cb9ed9
  412975:	call   0x1b2a107e
  41297a:	fld    TBYTE PTR [ecx-0x34]
  41297d:	in     eax,0x44
  41297f:	cdq    
  412980:	push   edx
  412981:	test   al,0x50
  412983:	jmp    0x7a27:0x8ec5371b
  41298a:	pusha  
  41298b:	inc    esp
  41298c:	loopne 0x412987
  41298e:	js     0x4129a3
  412990:	sahf   
  412991:	mov    ds:0xeb203802,al
  412996:	loope  0x4129e6
  412998:	jl     0x412968
  41299a:	mov    dl,0xcb
  41299c:	cmp    DWORD PTR [eax+0x239b3bd3],0x2f4dc686
  4129a6:	push   ebp
  4129a7:	mov    eax,0xeb5cb802
  4129ac:	add    eax,eax
  4129ae:	xchg   ecx,eax
  4129af:	leave  
  4129b0:	dec    ecx
  4129b1:	dec    edx
  4129b2:	sub    al,0x95
  4129b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129b5:	push   edx
  4129b6:	out    0xc8,eax
  4129b8:	mov    ebx,0xc348111b
  4129bd:	(bad)  [edx-0x46]
  4129c0:	sbb    edi,DWORD PTR [edi]
  4129c2:	enter  0x6986,0x65
  4129c6:	push   edx
  4129c7:	cdq    
  4129c8:	(bad)  
  4129c9:	in     al,dx
  4129ca:	test   al,0xbe
  4129cc:	lds    ebx,FWORD PTR [ebx]
  4129ce:	aaa    
  4129cf:	imul   ebx,DWORD PTR [ebx-0xc589c30],0x10
  4129d6:	add    edi,DWORD PTR [ecx+esi*4]
  4129d9:	xchg   edx,eax
  4129da:	xor    edi,DWORD PTR [ebx]
  4129dc:	mov    ebp,0xcd04efbd
  4129e1:	mov    WORD PTR [ebp-0x6947137a],ds
  4129e7:	ins    DWORD PTR es:[edi],dx
  4129e8:	jb     0x412a13
  4129ea:	sub    bl,BYTE PTR [ecx-0x595d0efd]
  4129f0:	gs into 
  4129f2:	or     eax,0x1271c571
  4129f7:	jmp    0x5f5:0xa05b8e9a
  4129fe:	icebp  
  4129ff:	(bad)  
  412a00:	mov    ebp,0x7a315cd3
  412a05:	mov    eax,ds:0x4e96132d
  412a0a:	pop    ebx
  412a0b:	inc    eax
  412a0c:	push   esi
  412a0d:	std    
  412a0e:	cmp    BYTE PTR [edx+0x5b],bl
  412a11:	dec    edx
  412a12:	mov    al,0x48
  412a14:	dec    BYTE PTR [edi-0x27]
  412a17:	dec    ecx
  412a18:	adc    DWORD PTR [ebp+0x31],eax
  412a1b:	aaa    
  412a1c:	xchg   esp,eax
  412a1d:	mov    edx,0x858152e
  412a22:	inc    ebx
  412a23:	test   eax,0xebc1fec7
  412a28:	dec    ebx
  412a29:	push   ds
  412a2a:	jbe    0x4129cc
  412a2c:	push   ss
  412a2d:	dec    esp
  412a2e:	sub    eax,0x38f261e9
  412a33:	int    0xb2
  412a35:	sbb    ecx,edx
  412a37:	(bad)  
  412a38:	jmp    FWORD PTR [eax+edx*2+0x5b]
  412a3c:	fcom   QWORD PTR [edx+0x7978bb0e]
  412a42:	arpl   WORD PTR [ebx+0xa772332],dx
  412a48:	push   ebx
  412a49:	nop
  412a4a:	inc    eax
  412a4b:	push   cs
  412a4c:	call   0x75c2:0x59ec96e7
  412a53:	xor    eax,edx
  412a55:	jle    0x412a6c
  412a57:	int    0x64
  412a59:	pop    esp
  412a5a:	lahf   
  412a5b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a5d:	xlat   BYTE PTR ds:[ebx]
  412a5e:	jae    0x412a75
  412a60:	lods   al,BYTE PTR ds:[esi]
  412a61:	inc    edi
  412a62:	(bad)  
  412a63:	pop    eax
  412a64:	fst    QWORD PTR [edx-0x69]
  412a67:	ja     0x412a2c
  412a69:	and    esp,DWORD PTR [edx+0x65b00ff2]
  412a6f:	aas    
  412a70:	mov    esp,0x4c18f6f7
  412a75:	sar    BYTE PTR [ecx-0x66],cl
  412a78:	mov    ecx,0xbccb7436
  412a7d:	ins    DWORD PTR es:[edi],dx
  412a7e:	pusha  
  412a7f:	rcr    BYTE PTR [esi+0xe5f4e4a],cl
  412a85:	sub    eax,ebp
  412a87:	xchg   esp,eax
  412a88:	mov    ecx,0xf81ead89
  412a8d:	cmp    eax,0xd92d57e6
  412a92:	jnp    0x412a41
  412a94:	rcr    DWORD PTR [ebp+0x3],0xbb
  412a98:	pop    edi
  412a99:	loopne 0x412ac8
  412a9b:	add    eax,0xadb4203
  412aa0:	(bad)  
  412aa1:	into   
  412aa2:	retf   
  412aa3:	add    bx,dx
  412aa6:	imul   ebx,DWORD PTR [ecx+edx*8+0x3a3173ff],0xffffffe3
  412aae:	adc    al,0x49
  412ab0:	fs xchg edi,eax
  412ab2:	jl     0x412aad
  412ab4:	imul   DWORD PTR [ebx-0x1e]
  412ab7:	mov    ebx,0x3857c41d
  412abc:	imul   esp,DWORD PTR fs:[edi-0x7a764ca8],0xffffffad
  412ac4:	jmp    0x412aae
  412ac6:	popa   
  412ac7:	mov    bl,0x93
  412ac9:	mov    cl,BYTE PTR [edi-0x6f]
  412acc:	inc    eax
  412acd:	adc    BYTE PTR [ebp+0x48],ch
  412ad0:	adc    DWORD PTR [eax+0x67],esp
  412ad3:	or     ebx,ebx
  412ad5:	xchg   BYTE PTR [edi+ebx*2-0x6cfece7b],bl
  412adc:	lock mov ebp,0x6139d63
  412ae2:	or     eax,0x87121c18
  412ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ae8:	outs   dx,BYTE PTR ds:[esi]
  412ae9:	push   ebx
  412aea:	std    
  412aeb:	repz test dh,0x72
  412aef:	cli    
  412af0:	xor    eax,0x79bfe6f
  412af5:	cwde   
  412af6:	loope  0x412a93
  412af8:	popa   
  412af9:	or     edx,DWORD PTR [ebx-0x55a92523]
  412aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b00:	ins    DWORD PTR es:[edi],dx
  412b01:	(bad)  
  412b02:	test   DWORD PTR [edx+0x7],0x63461bde
  412b09:	mov    BYTE PTR [edi+eax*2+0x3b1b32ec],cl
  412b10:	lods   eax,DWORD PTR ds:[esi]
  412b11:	mov    ebx,0xd5176213
  412b17:	inc    esp
  412b18:	push   0x80169c4a
  412b1d:	jl     0x412ad5
  412b1f:	or     BYTE PTR [ebp-0x5bb2e97a],0x9b
  412b26:	ds (bad) 
  412b28:	into   
  412b29:	mov    eax,es
  412b2b:	aaa    
  412b2c:	mov    ecx,0xa2726ee1
  412b31:	add    DWORD PTR [esp+edx*4-0x60],esi
  412b35:	gs sub eax,0x386d6d6b
  412b3b:	ins    BYTE PTR es:[edi],dx
  412b3c:	js     0x412afc
  412b3e:	mov    ebp,0x7b66d865
  412b43:	push   eax
  412b44:	pop    ebp
  412b45:	xchg   BYTE PTR [edi+0x3c],al
  412b48:	xchg   esi,eax
  412b49:	(bad)  
  412b4a:	lock add al,0xbe
  412b4d:	ret    
  412b4e:	test   eax,0x58ec0b04
  412b53:	xchg   ecx,eax
  412b54:	stc    
  412b55:	lock ja 0x412b55
  412b58:	mov    DWORD PTR [esi],esi
  412b5a:	sub    al,0x59
  412b5c:	sti    
  412b5d:	nop
  412b5e:	aam    0x4
  412b60:	adc    esi,DWORD PTR [ecx]
  412b62:	add    eax,DWORD PTR [edi+ecx*1-0x33]
  412b66:	jp     0x412b65
  412b68:	jae    0x412be4
  412b6a:	ss jmp 0x412b6b
  412b6d:	aam    0xe3
  412b6f:	inc    ebx
  412b70:	pop    ds
  412b71:	pusha  
  412b72:	mov    ds:0xd4efcb1c,eax
  412b77:	fistp  QWORD PTR [edi]
  412b79:	push   ebx
  412b7a:	inc    esi
  412b7b:	mov    al,0xd5
  412b7d:	out    0xc5,al
  412b7f:	retf   
  412b80:	jmp    0x412b55
  412b82:	ret    
  412b83:	mov    BYTE PTR [bx+di+0x3253],dl
  412b88:	xchg   ebx,eax
  412b89:	ins    BYTE PTR es:[edi],dx
  412b8a:	sub    cl,ch
  412b8c:	das    
  412b8d:	sub    BYTE PTR [edx-0x40dc224b],0xaa
  412b94:	jne    0x412bdd
  412b96:	mov    es,WORD PTR [ecx]
  412b98:	outs   dx,DWORD PTR ds:[esi]
  412b99:	fwait
  412b9a:	out    0xca,eax
  412b9c:	mov    bh,0x65
  412b9e:	ds push ecx
  412ba0:	jno    0x412b69
  412ba2:	lods   eax,DWORD PTR ds:[esi]
  412ba3:	inc    esi
  412ba4:	shr    ch,1
  412ba6:	jne    0x412c1d
  412ba8:	cmp    BYTE PTR es:[edx+edx*1-0x2f2b29f3],cl
  412bb0:	jno    0x412b52
  412bb2:	and    eax,0x30089942
  412bb7:	and    eax,0xacd4768e
  412bbc:	test   al,0x1c
  412bbe:	ss loopne 0x412bff
  412bc1:	lock mov BYTE PTR [edx-0x6f],0x1e
  412bc6:	call   0x7801096b
  412bcb:	les    ecx,FWORD PTR [edi]
  412bcd:	jns    0x412b85
  412bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd0:	cmovbe edi,DWORD PTR [esi+0x68]
  412bd4:	push   cs
  412bd5:	retf   
  412bd6:	pop    ds
  412bd7:	xchg   esp,eax
  412bd8:	mov    dl,0xaf
  412bda:	fcom   DWORD PTR fs:[esi+0x227bbf23]
  412be1:	mov    edx,0x25f49a24
  412be6:	jl     0x412b85
  412be8:	mov    dh,0x95
  412bea:	and    eax,eax
  412bec:	push   0xffffffb7
  412bee:	pop    esi
  412bef:	repz xor al,0xa4
  412bf2:	outs   dx,DWORD PTR ds:[esi]
  412bf3:	mov    bl,0x4a
  412bf5:	mov    eax,ds:0x1db3f257
  412bfa:	cwde   
  412bfb:	pop    esi
  412bfc:	mov    edx,0xab0b5a8e
  412c01:	pusha  
  412c02:	or     DWORD PTR [ecx-0x4f],esp
  412c05:	loop   0x412c15
  412c07:	jmp    0xa1fcd589
  412c0c:	adc    DWORD PTR [ebx+0x583f3243],edi
  412c12:	or     eax,0xbe25e824
  412c17:	mov    esp,0xca74ec40
  412c1c:	cmp    DWORD PTR [edi-0x71],edx
  412c1f:	out    dx,eax
  412c20:	(bad)  
  412c21:	loopne 0x412c17
  412c23:	je     0x412c3c
  412c25:	cwde   
  412c26:	lock sbb eax,0xb5a851f2
  412c2c:	or     al,0x5f
  412c2e:	outs   dx,DWORD PTR ds:[esi]
  412c2f:	add    BYTE PTR [ecx+0x71],ah
  412c32:	scas   eax,DWORD PTR es:[edi]
  412c33:	and    al,0x9b
  412c35:	jg     0x412c9c
  412c37:	cli    
  412c38:	repz xchg esp,eax
  412c3a:	ss mov cl,ch
  412c3d:	add    eax,esi
  412c3f:	mov    ebp,0x74f42639
  412c44:	pop    esi
  412c45:	push   es
  412c46:	and    eax,0x4e580956
  412c4b:	mov    esp,0xddf8567e
  412c50:	adc    BYTE PTR [edx],dh
  412c52:	es in  al,0x1a
  412c55:	out    0xe5,eax
  412c57:	daa    
  412c58:	sbb    DWORD PTR [ebx],ebx
  412c5a:	dec    ebp
  412c5b:	ins    DWORD PTR es:[edi],dx
  412c5c:	push   esp
  412c5d:	out    0x5b,al
  412c5f:	lds    ecx,FWORD PTR [edx-0xf]
  412c62:	jo     0x412c78
  412c64:	add    BYTE PTR [edi-0x66fa28c2],cl
  412c6a:	in     eax,0x73
  412c6c:	pop    edi
  412c6d:	mov    ds:0xb20c2a31,al
  412c72:	push   0x7d922ab
  412c77:	les    eax,FWORD PTR [ecx+0x2]
  412c7a:	dec    edi
  412c7b:	out    0x81,eax
  412c7d:	xlat   BYTE PTR ds:[ebx]
  412c7e:	sbb    al,0xec
  412c80:	adc    ch,bl
  412c82:	mov    ch,BYTE PTR [edi+0x20c6bb92]
  412c88:	div    DWORD PTR [edx+0x4bf48e94]
  412c8e:	aas    
  412c8f:	(bad)  
  412c90:	cmp    al,0xae
  412c92:	cwde   
  412c93:	sub    al,0xd7
  412c95:	fstp   TBYTE PTR [ecx]
  412c97:	loope  0x412c3b
  412c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9a:	cld    
  412c9b:	stos   DWORD PTR es:[edi],eax
  412c9c:	(bad)  
  412c9d:	dec    edi
  412c9e:	das    
  412c9f:	cdq    
  412ca0:	cmp    al,0x53
  412ca2:	stos   BYTE PTR es:[edi],al
  412ca3:	and    eax,0x14036f93
  412ca8:	push   0xbf24fa61
  412cad:	ds clc 
  412caf:	xor    esp,esp
  412cb1:	fistp  QWORD PTR [eax+0x16a9f502]
  412cb7:	je     0x412cd1
  412cb9:	or     edi,DWORD PTR ds:0x9310d68a
  412cbf:	mov    ebp,0xe0cf171f
  412cc4:	les    ebp,FWORD PTR [ebp-0x5bd6c9f8]
  412cca:	rcr    DWORD PTR [ebx+0x5aa09873],cl
  412cd0:	out    0x96,al
  412cd2:	push   ebx
  412cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cd4:	in     eax,dx
  412cd5:	mov    eax,0x302d1d93
  412cda:	add    al,0x1f
  412cdc:	rcl    dh,cl
  412cde:	jne    0x412d38
  412ce0:	call   0x26349a19
  412ce5:	es in  eax,0x34
  412ce8:	jl     0x412c9c
  412cea:	int3   
  412ceb:	jo     0x412cf5
  412ced:	sbb    DWORD PTR [ebp+eiz*4+0x1f7a7496],esp
  412cf4:	push   ds
  412cf5:	ror    DWORD PTR [edi-0x6b],0xa9
  412cf9:	cmp    DWORD PTR [edx+0x50],edi
  412cfc:	xor    DWORD PTR [ebp+0x5c],ebx
  412cff:	in     eax,dx
  412d00:	adc    BYTE PTR [ebx+0x66],ch
  412d03:	pop    edi
  412d04:	adc    al,0x47
  412d06:	es cmp esp,esp
  412d09:	nop
  412d0a:	pop    ds
  412d0b:	sub    cl,BYTE PTR [ebx-0x3f]
  412d0e:	adc    edx,edi
  412d10:	push   ds
  412d11:	repnz jecxz 0x412cfe
  412d14:	inc    edi
  412d15:	ins    BYTE PTR es:[edi],dx
  412d16:	pop    edi
  412d17:	jne    0x412ce1
  412d19:	mov    ecx,0x2253780f
  412d1e:	aaa    
  412d1f:	ret    0x40d4
  412d22:	daa    
  412d23:	mov    eax,DWORD PTR [ecx+0x57]
  412d26:	inc    eax
  412d27:	es fwait
  412d29:	sbb    eax,0x4b8b8a56
  412d2e:	test   BYTE PTR [eax],dh
  412d30:	mov    ebp,0x2cc95fd5
  412d35:	wrmsr  
  412d37:	inc    edi
  412d38:	cwde   
  412d39:	popf   
  412d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d3b:	jmp    0x9b753fd5
  412d40:	inc    ecx
  412d41:	and    ebx,DWORD PTR ds:0xcb6d939f
  412d47:	sub    al,0xf0
  412d49:	mov    ch,0xb3
  412d4b:	fs jno 0x412d29
  412d4e:	fisub  DWORD PTR [ebx-0x384ec2b4]
  412d54:	inc    ebx
  412d55:	aas    
  412d56:	inc    eax
  412d57:	loopne 0x412db8
  412d59:	neg    eax
  412d5b:	mul    BYTE PTR [ebx+0x7fb151d6]
  412d61:	test   esp,eax
  412d63:	ins    BYTE PTR es:[edi],dx
  412d64:	add    DWORD PTR [esi],0x2b
  412d67:	repnz dec edi
  412d69:	pop    es
  412d6a:	mov    bl,0xb2
  412d6c:	iret   
  412d6d:	ins    DWORD PTR es:[edi],dx
  412d6e:	cmp    eax,0xdfe445bb
  412d73:	inc    ebx
  412d74:	xor    al,0xea
  412d76:	pop    ss
  412d77:	dec    esi
  412d78:	dec    edi
  412d79:	(bad)  
  412d7a:	adc    ecx,DWORD PTR [ebx]
  412d7c:	cli    
  412d7d:	in     al,0xb0
  412d7f:	mov    ebx,0x5d627213
  412d84:	and    al,0x2a
  412d86:	sahf   
  412d87:	repz clc 
  412d89:	jbe    0x412d57
  412d8b:	mov    ds:0x81d4e70b,eax
  412d90:	lock inc ebx
  412d92:	popf   
  412d93:	rcl    esi,1
  412d95:	retf   0xcd67
  412d98:	std    
  412d99:	mov    ds:0xa667bc0b,al
  412d9e:	mov    edx,0xc63b198
  412da3:	add    al,0x7b
  412da5:	popf   
  412da6:	xor    eax,0x41946ebf
  412dab:	lds    esp,FWORD PTR [esp+ebx*1-0x6d749545]
  412db2:	in     eax,0x4f
  412db4:	fwait
  412db5:	mov    ebp,0x2dcc32fc
  412dba:	inc    ecx
  412dbb:	jmp    0xe3ac:0x39c0b3e8
  412dc2:	sub    edx,eax
  412dc4:	aaa    
  412dc5:	jne    0x412e3a
  412dc7:	pushf  
  412dc8:	std    
  412dc9:	xchg   ecx,eax
  412dca:	dec    ebx
  412dcb:	ret    
  412dcc:	push   ecx
  412dcd:	cmp    al,0x5f
  412dcf:	pop    es
  412dd0:	cmp    eax,0x74462398
  412dd5:	shl    DWORD PTR [edx],1
  412dd7:	xchg   edi,eax
  412dd8:	call   FWORD PTR [ebx-0x5]
  412ddb:	add    edx,DWORD PTR [ecx-0x77]
  412dde:	adc    dh,cl
  412de0:	dec    esp
  412de1:	mov    bh,0xd1
  412de3:	inc    ebp
  412de4:	ss pop edi
  412de6:	pop    ebp
  412de7:	add    al,0x2e
  412de9:	sub    eax,0x9105ce1a
  412dee:	or     DWORD PTR [edi],edi
  412df0:	ins    DWORD PTR es:[edi],dx
  412df1:	push   eax
  412df2:	dec    ebp
  412df3:	(bad)  
  412df4:	cmc    
  412df5:	sbb    eax,DWORD PTR [esi+ecx*2+0x73]
  412df9:	mov    edx,0xc59e2ba7
  412dfe:	cmp    DWORD PTR [edx+0x2a222260],ebx
  412e04:	int3   
  412e05:	adc    al,0x3b
  412e07:	lds    esp,FWORD PTR [ebp-0x5d370ff5]
  412e0d:	retf   0x89b4
  412e10:	ror    DWORD PTR [eax],0xf1
  412e13:	mov    edi,0xcac41d7a
  412e18:	test   BYTE PTR [edi+0x12],ah
  412e1b:	imul   BYTE PTR ds:0xa59894d7
  412e21:	mov    al,ds:0xa2ea2607
  412e26:	in     eax,0xfb
  412e28:	xchg   ebp,eax
  412e29:	sub    eax,0x74d784bb
  412e2e:	scas   al,BYTE PTR es:[edi]
  412e2f:	ins    DWORD PTR es:[edi],dx
  412e30:	xchg   DWORD PTR [esi],ebx
  412e32:	jecxz  0x412eb3
  412e34:	test   BYTE PTR [edi-0x7cbfca5e],bl
  412e3a:	cmp    BYTE PTR [edi],al
  412e3c:	ret    0x489f
  412e3f:	mov    ?,ecx
  412e41:	out    dx,al
  412e42:	scas   al,BYTE PTR es:[edi]
  412e43:	loope  0x412e15
  412e45:	retf   
  412e46:	mov    esi,0x40fcd946
  412e4b:	(bad)  
  412e4c:	xor    DWORD PTR [ebx-0x71f1b83b],ebx
  412e52:	inc    edi
  412e53:	in     eax,0x1d
  412e55:	push   ebx
  412e56:	into   
  412e57:	fnstenv [eax-0x68c36fa7]
  412e5d:	xor    eax,0xa321e6bb
  412e62:	mov    DWORD PTR [ebx+eiz*2],eax
  412e65:	add    BYTE PTR [esp+ebx*2+0x28],ch
  412e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e6a:	push   ebx
  412e6b:	mov    dl,0xd1
  412e6d:	iret   
  412e6e:	scas   al,BYTE PTR es:[edi]
  412e6f:	pop    ecx
  412e70:	ret    0xc10a
  412e73:	sub    DWORD PTR [edi+ebp*8+0x5a],ebx
  412e77:	bswap  ebx
  412e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e7a:	xchg   ebx,eax
  412e7b:	jne    0x412e12
  412e7d:	jnp    0x412e3b
  412e7f:	adc    al,0xa
  412e81:	push   ebp
  412e82:	in     al,dx
  412e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e84:	mov    dl,0x59
  412e86:	push   esi
  412e87:	fsub   QWORD PTR [ebx+0x20]
  412e8a:	cmp    eax,DWORD PTR [ecx]
  412e8c:	and    cl,ch
  412e8e:	jno    0x412e41
  412e90:	call   0x8c397a77
  412e95:	add    eax,0x4e8dd8b
  412e9a:	adc    DWORD PTR [eax+0x236d0ead],ecx
  412ea0:	mov    ebp,0x584be646
  412ea5:	es sub al,0x6
  412ea8:	mov    dl,0x44
  412eaa:	sbb    eax,0x1b7abcbf
  412eaf:	dec    esp
  412eb0:	mov    edx,0xd43377b7
  412eb5:	sbb    al,0xac
  412eb7:	sub    eax,0x34b685a2
  412ebc:	repz es out dx,eax
  412ebf:	xchg   ebp,eax
  412ec0:	add    BYTE PTR [edx-0x67],dl
  412ec3:	mov    esi,0x13630d3b
  412ec8:	mov    edx,0xe2aed4db
  412ecd:	dec    ebx
  412ece:	aad    0x70
  412ed0:	aaa    
  412ed1:	fmul   st(0),st
  412ed3:	retf   0xe514
  412ed6:	inc    ecx
  412ed7:	ss jb  0x412f16
  412eda:	cwde   
  412edb:	pmaddwd mm5,QWORD PTR [edx]
  412ede:	sbb    BYTE PTR [edi-0x4f1e6a6],dl
  412ee4:	cmc    
  412ee5:	sbb    dh,al
  412ee7:	mov    ch,0x65
  412ee9:	add    BYTE PTR [esi-0x502dcc32],0xef
  412ef0:	pushfw 
  412ef2:	jecxz  0x412ee0
  412ef4:	pop    edi
  412ef5:	lods   al,BYTE PTR ds:[esi]
  412ef6:	xor    eax,0xd7f0bfc8
  412efb:	lahf   
  412efc:	fist   WORD PTR [edx]
  412efe:	aas    
  412eff:	popa   
  412f00:	add    esp,DWORD PTR [ebx+0x1a580186]
  412f06:	pop    eax
  412f07:	int    0xa0
  412f09:	jbe    0x412ecf
  412f0b:	test   al,0x60
  412f0d:	shl    cl,1
  412f0f:	imul   ecx,DWORD PTR [edx-0xc96abf0],0x50a1a014
  412f19:	pusha  
  412f1a:	xor    cl,cl
  412f1c:	call   FWORD PTR [esi+0x6343e06d]
  412f22:	jbe    0x412f9e
  412f24:	jg     0x412f45
  412f26:	out    dx,eax
  412f27:	pop    ebx
  412f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f29:	or     eax,0xc661be2a
  412f2e:	pop    esi
  412f2f:	das    
  412f30:	es push esp
  412f32:	and    DWORD PTR [edx+0xc47dd87],0x60
  412f39:	icebp  
  412f3a:	cmp    BYTE PTR [ebx],ch
  412f3c:	loop   0x412f5d
  412f3e:	add    eax,0xc49c11df
  412f43:	bound  eax,QWORD PTR [eax+0x75]
  412f46:	scas   al,BYTE PTR es:[edi]
  412f47:	add    eax,0xcc03eae1
  412f4c:	mov    ch,0xaf
  412f4e:	loop   0x412f70
  412f50:	inc    esi
  412f51:	call   0x72cb:0x1520c615
  412f58:	push   ebx
  412f59:	push   ds
  412f5a:	das    
  412f5b:	xor    al,0x2c
  412f5d:	xor    al,0xd8
  412f5f:	jmp    DWORD PTR [esp+esi*2+0x9]
  412f63:	aam    0xab
  412f65:	ror    DWORD PTR [edx-0x5c],1
  412f68:	test   eax,0x673eaf03
  412f6d:	mov    edi,0x8d0fdcd0
  412f72:	out    0xe0,al
  412f74:	inc    ebp
  412f75:	in     al,0x6a
  412f77:	lea    esi,[ebp+0x4471fc67]
  412f7d:	hlt    
  412f7e:	and    eax,0x91a61264
  412f84:	inc    esp
  412f85:	sub    ch,BYTE PTR [ebx]
  412f87:	jmp    0x412fa9
  412f89:	and    DWORD PTR [bp+si+0x3698],esp
  412f8e:	cmp    DWORD PTR [bx+si-0x16],edi
  412f92:	mov    ebp,0x35cbac98
  412f97:	test   cl,bl
  412f99:	or     DWORD PTR [esi],eax
  412f9b:	mov    ds,WORD PTR [eax]
  412f9d:	imul   esi,DWORD PTR [ebx+0x57],0x49951738
  412fa4:	adc    al,0x83
  412fa6:	sbb    edx,DWORD PTR [edi+0x4a518a27]
  412fac:	mov    bl,0xd7
  412fae:	mov    ecx,0xfd5bc8ef
  412fb3:	out    dx,al
  412fb4:	sub    bl,BYTE PTR [edx+eiz*2]
  412fb7:	ss (bad) 
  412fb9:	sbb    cl,al
  412fbb:	call   0x1e76:0xecf1
  412fc1:	inc    eax
  412fc2:	test   al,0x87
  412fc4:	rcr    DWORD PTR [ecx+0x53c41f7f],cl
  412fca:	sahf   
  412fcb:	push   ebp
  412fcc:	ds inc esp
  412fce:	jo     0x412fc9
  412fd0:	sub    esi,0xb6f54e5a
  412fd6:	gs cmp al,0xbb
  412fd9:	mov    ecx,0x88af10ad
  412fde:	and    eax,DWORD PTR [esi+0x7]
  412fe1:	or     eax,DWORD PTR [ecx]
  412fe3:	dec    ebp
  412fe4:	push   edx
  412fe5:	jl     0x412ff3
  412fe7:	mov    ebp,0x62629334
  412fec:	js     0x41301b
  412fee:	mov    bh,0x38
  412ff0:	ss jecxz 0x412f92
  412ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ff4:	or     ecx,DWORD PTR [ebx-0x79476523]
  412ffa:	sti    
  412ffb:	push   fs
  412ffd:	lds    ecx,FWORD PTR [ecx]
  412fff:	(bad)  
  413000:	xlat   BYTE PTR ds:[ebx]
  413001:	ret    
  413002:	xor    dl,dh
  413004:	loopne 0x413002
  413006:	push   ds
  413007:	popa   
  413008:	and    eax,0x472ef227
  41300d:	call   0xef31e2f9
  413012:	icebp  
  413013:	mov    ah,0x53
  413015:	mov    ecx,0x8a3817f7
  41301a:	add    al,0xd4
  41301c:	xor    DWORD PTR [eax+0x19],0xffffffa7
  413020:	clc    
  413021:	inc    esi
  413022:	add    esi,DWORD PTR [edi]
  413024:	jecxz  0x412fd1
  413026:	push   eax
  413027:	jp     0x41304f
  413029:	(bad)  
  41302a:	add    ah,dl
  41302c:	pop    ss
  41302d:	push   cs
  41302e:	push   edx
  41302f:	leave  
  413030:	push   0x4f
  413032:	mov    eax,0x2cbb7e61
  413037:	sahf   
  413038:	int3   
  413039:	sbb    edi,ebp
  41303b:	pushf  
  41303c:	mov    al,al
  41303e:	jge    0x4130a4
  413040:	adc    al,0x26
  413042:	and    ebp,DWORD PTR [esi+0x2fb156b6]
  413048:	popa   
  413049:	cwde   
  41304a:	cld    
  41304b:	retf   0xef40
  41304e:	aaa    
  41304f:	push   ds
  413050:	enter  0x1ec3,0xa7
  413054:	or     DWORD PTR [ecx],edi
  413056:	inc    ecx
  413057:	scas   eax,DWORD PTR es:[edi]
  413058:	(bad)  
  413059:	adc    al,0xaf
  41305b:	xor    cl,ch
  41305d:	push   esi
  41305e:	jle    0x413090
  413060:	inc    esi
  413061:	pushf  
  413062:	xchg   edx,eax
  413063:	xor    eax,0x7deaa1b3
  413068:	aam    0xdd
  41306a:	xor    al,bl
  41306c:	inc    ecx
  41306d:	adc    al,0xfc
  41306f:	cmp    ecx,DWORD PTR [edx+esi*2]
  413072:	dec    edi
  413073:	cli    
  413074:	pop    ebx
  413075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413076:	lea    esi,[ebx-0x14]
  413079:	or     edx,ecx
  41307b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41307c:	mov    ch,0x7a
  41307e:	clc    
  41307f:	or     edx,DWORD PTR [eax-0x1dcb098b]
  413085:	lods   eax,DWORD PTR ds:[esi]
  413086:	repz les eax,FWORD PTR [edi]
  413089:	ficomp DWORD PTR [eax]
  41308b:	dec    ebp
  41308c:	push   bp
  41308e:	mov    dl,0xd
  413090:	enter  0x89df,0x45
  413094:	cmc    
  413095:	lods   al,BYTE PTR ds:[esi]
  413096:	pop    edx
  413097:	or     BYTE PTR [ecx-0x4a],ah
  41309a:	int    0x81
  41309c:	push   eax
  41309d:	pop    ss
  41309e:	mov    al,ds:0x3746e9e9
  4130a3:	cmp    dl,BYTE PTR [esi]
  4130a5:	cmp    al,0x40
  4130a7:	pop    ds
  4130a8:	loop   0x41304a
  4130aa:	xor    esp,esp
  4130ac:	mov    cl,0x35
  4130ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130b0:	add    al,0x77
  4130b2:	adc    cl,BYTE PTR [esi+0x6a710761]
  4130b8:	test   BYTE PTR [ebx+eax*1-0x79],dh
  4130bc:	les    edx,FWORD PTR ds:0xffe9ab47
  4130c2:	xor    eax,esi
  4130c4:	cmc    
  4130c5:	mov    ss,ecx
  4130c7:	int3   
  4130c8:	iret   
  4130c9:	ins    DWORD PTR es:[edi],dx
  4130ca:	dec    esi
  4130cb:	push   cs
  4130cc:	mov    eax,ds:0x8f5684b7
  4130d1:	ret    0xb375
  4130d4:	pop    ecx
  4130d5:	xchg   sp,ax
  4130d7:	or     DWORD PTR [ebx-0x55],edx
  4130da:	mov    eax,ds:0x24ebbc1
  4130df:	popa   
  4130e0:	pop    esp
  4130e1:	dec    ecx
  4130e2:	out    dx,eax
  4130e3:	push   edi
  4130e4:	mov    bh,0x64
  4130e6:	dec    edi
  4130e7:	data16 add dl,bh
  4130ea:	mov    bh,0x9a
  4130ec:	fisub  WORD PTR [edx-0x13565f23]
  4130f2:	and    edx,DWORD PTR [esi+0x5f234e93]
  4130f8:	repnz hlt 
  4130fa:	mov    edx,0x2ba5aec0
  4130ff:	jnp    0x41311c
  413101:	inc    edi
  413102:	push   ds
  413103:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  413105:	push   cs
  413106:	adc    al,0xcc
  413108:	mov    ebp,DWORD PTR [esi]
  41310a:	jo     0x413129
  41310c:	mov    edi,0xe6d66374
  413111:	or     eax,0x1a1a9b96
  413116:	dec    ebp
  413117:	outs   dx,BYTE PTR ds:[esi]
  413118:	jmp    0xf2f59a7
  41311d:	or     eax,DWORD PTR [eax+edi*4+0x2522e382]
  413124:	adc    bl,al
  413126:	lahf   
  413127:	xchg   ebp,eax
  413128:	sbb    eax,0x5400dcae
  41312d:	ret    
  41312e:	test   BYTE PTR ds:0xf7c1917c,cl
  413134:	int    0x5c
  413136:	sbb    DWORD PTR [esi-0x41e24b41],ebp
  41313c:	push   ecx
  41313d:	sub    BYTE PTR [eax+eiz*4],0x75
  413141:	ret    0xc4ec
  413144:	sbb    DWORD PTR [eax-0x4a6c2292],0x28d05b1e
  41314e:	adc    eax,0x40b062a1
  413153:	(bad)  
  413154:	out    dx,eax
  413155:	out    dx,eax
  413156:	xor    ebp,DWORD PTR [ebp-0x6add533c]
  41315c:	cdq    
  41315d:	shr    ch,cl
  41315f:	xchg   ebx,eax
  413160:	fs inc esi
  413162:	out    0xe6,al
  413164:	inc    esi
  413165:	xchg   esi,eax
  413166:	cmc    
  413167:	fdivrp st(1),st
  413169:	pop    edi
  41316a:	adc    al,0xa
  41316c:	xor    bh,dh
  41316e:	jnp    0x4131a6
  413170:	leave  
  413171:	sub    BYTE PTR ds:0x7ce0dcf2,dl
  413177:	call   0x670b6ea6
  41317c:	mov    cl,0x4
  41317e:	(bad)  
  41317f:	aaa    
  413180:	ja     0x413113
  413182:	test   BYTE PTR [ecx-0xfd630b7],dl
  413188:	in     al,0xe4
  41318a:	fst    QWORD PTR [esp+edx*2]
  41318d:	leave  
  41318e:	jne    0x413193
  413190:	ret    
  413191:	ficom  DWORD PTR [ebx-0x3f]
  413194:	push   ds
  413195:	dec    edi
  413196:	loopne 0x413198
  413198:	xlat   BYTE PTR ds:[ebx]
  413199:	and    DWORD PTR [edx-0x2def4325],0x67
  4131a0:	out    dx,al
  4131a1:	xor    DWORD PTR [ebx],esi
  4131a3:	adc    eax,0x216e7296
  4131a8:	hlt    
  4131a9:	test   eax,0x4e2448b8
  4131ae:	mov    ds:0x1430da3,al
  4131b3:	push   ss
  4131b4:	inc    BYTE PTR ds:0x3cfd69fe
  4131ba:	add    dh,BYTE PTR [ebx]
  4131bc:	sub    esi,esp
  4131be:	sbb    edi,ebp
  4131c0:	mov    ch,0x84
  4131c2:	and    ecx,ebp
  4131c4:	repnz push 0x3bff8dea
  4131ca:	mov    WORD PTR [ebx],es
  4131cc:	mov    esi,0xf1e43932
  4131d1:	inc    edx
  4131d2:	shl    DWORD PTR [edi],1
  4131d4:	stos   DWORD PTR es:[edi],eax
  4131d5:	pop    ecx
  4131d6:	xor    al,0x2d
  4131d8:	mov    bh,0x29
  4131da:	repnz es out 0xe1,al
  4131de:	retf   
  4131df:	in     al,dx
  4131e0:	mov    WORD PTR [eax+0x1f],cs
  4131e3:	loopne 0x413216
  4131e5:	jmp    0xc7f4:0xfb08ef1a
  4131ec:	xchg   edx,eax
  4131ed:	aam    0x70
  4131ef:	mov    bh,0xc1
  4131f1:	mov    bh,0x1f
  4131f3:	scas   al,BYTE PTR es:[edi]
  4131f4:	jbe    0x4131e5
  4131f6:	mov    dl,0xb6
  4131f8:	retf   0x5c75
  4131fb:	xlat   BYTE PTR ds:[ebx]
  4131fc:	ja     0x4131b5
  4131fe:	loop   0x4131ee
  413200:	xchg   BYTE PTR [ebx-0x7c],bh
  413203:	mov    ch,0x8
  413205:	mov    cl,0xce
  413207:	mov    ebx,fs
  413209:	shl    esi,1
  41320b:	(bad)  
  41320c:	lods   eax,DWORD PTR ds:[esi]
  41320d:	cdq    
  41320e:	fdivr  QWORD PTR [edi]
  413210:	xchg   BYTE PTR [edi-0x52],cl
  413213:	leave  
  413214:	std    
  413215:	test   eax,0xae67d7a9
  41321a:	lea    edx,[ecx]
  41321c:	xor    ebp,DWORD PTR [eax+ebp*1]
  41321f:	mov    edi,DWORD PTR [ebx+esi*4-0xe0a1978]
  413226:	push   esi
  413227:	cmp    esi,DWORD PTR [esi+0x319ef83d]
  41322d:	scas   al,BYTE PTR es:[edi]
  41322e:	test   al,0x93
  413230:	nop
  413231:	and    al,BYTE PTR [ebp-0x4c6869b8]
  413237:	imul   DWORD PTR [ebx-0x24057ece]
  41323d:	or     esi,ecx
  41323f:	and    eax,0x5cfcb7f3
  413244:	dec    ebp
  413245:	loope  0x413286
  413247:	adc    al,0x37
  413249:	jecxz  0x4132ca
  41324b:	add    bh,ch
  41324d:	mov    al,ds:0x22dd710d
  413252:	(bad)  
  413254:	and    eax,0x6a0b4de0
  413259:	scas   al,BYTE PTR es:[edi]
  41325a:	mov    ebp,0x1c49d66c
  41325f:	int3   
  413260:	lahf   
  413261:	mov    ah,0x6d
  413263:	jns    0x413273
  413265:	aad    0xe2
  413267:	add    al,0xf0
  413269:	xchg   esp,eax
  41326a:	add    esi,esp
  41326c:	out    dx,al
  41326d:	xor    DWORD PTR [edx],0xf19adbea
  413273:	dec    esi
  413274:	shr    BYTE PTR [edi-0xbc0b6be],0x1a
  41327b:	outs   dx,DWORD PTR ds:[esi]
  41327c:	cmp    al,0x64
  41327e:	cmc    
  41327f:	outs   dx,DWORD PTR ds:[esi]
  413280:	mov    edi,0x8d0c8633
  413285:	stos   DWORD PTR es:[edi],eax
  413286:	mov    ah,BYTE PTR [ebx-0x591577b4]
  41328c:	fisub  WORD PTR [ecx-0x47b046db]
  413292:	mov    esi,0x8ff8ea85
  413297:	fiadd  DWORD PTR [edx-0x7454d216]
  41329d:	arpl   WORD PTR [esi],bx
  41329f:	add    BYTE PTR [ebx+ebp*2+0x5f245cea],cl
  4132a6:	inc    esp
  4132a7:	jle    0x41322e
  4132a9:	mov    ch,0xe3
  4132ab:	inc    ebx
  4132ac:	mov    edi,edx
  4132ae:	test   DWORD PTR [eax+0x21],edx
  4132b1:	sbb    DWORD PTR [eax],edx
  4132b3:	sbb    esp,edx
  4132b5:	dec    ecx
  4132b6:	adc    eax,ebx
  4132b8:	cs call 0x94ae70dc
  4132be:	cmp    al,0x36
  4132c0:	lock sbb ecx,eax
  4132c3:	sub    dh,BYTE PTR [esi+0x5b]
  4132c6:	push   cs
  4132c7:	xchg   edx,eax
  4132c8:	or     BYTE PTR [eax],ch
  4132ca:	mov    ds:0x7849b0bf,eax
  4132cf:	arpl   WORD PTR [ebx],di
  4132d1:	leave  
  4132d2:	pop    ds
  4132d3:	mov    ds:0x364839ce,al
  4132d8:	mul    BYTE PTR [ecx]
  4132da:	loopne 0x4132e1
  4132dc:	xor    al,0x3e
  4132de:	adc    esp,DWORD PTR [ecx-0x43]
  4132e1:	stos   BYTE PTR es:[edi],al
  4132e2:	jmp    FWORD PTR ds:[ebp+edi*4+0x775965a0]
  4132ea:	mov    esp,0xd15ad67c
  4132ef:	mov    esp,0xed7f47bc
  4132f4:	mov    edi,0x2800ca2c
  4132f9:	xchg   ebp,eax
  4132fa:	inc    ecx
  4132fb:	mov    cl,0x38
  4132fd:	inc    edi
  4132fe:	pop    es
  4132ff:	push   ds
  413300:	loop   0x413338
  413302:	mov    eax,ds:0xe0aaefd2
  413307:	imul   ecx,esp,0xffffffbb
  41330a:	ret    
  41330b:	push   edx
  41330c:	push   eax
  41330d:	mov    ch,BYTE PTR [esi]
  41330f:	dec    edi
  413310:	enter  0xb78b,0x72
  413314:	adc    eax,0x4eea31dc
  413319:	adc    cl,BYTE PTR [ebp-0x57]
  41331c:	(bad)  
  41331d:	mov    bh,0xb4
  41331f:	dec    edi
  413320:	or     DWORD PTR [eax],esi
  413322:	jne    0x413368
  413324:	mov    esp,0x4829a7ec
  413329:	sahf   
  41332a:	into   
  41332b:	frstor [edi-0x29]
  41332e:	fsubr  QWORD PTR [eax]
  413330:	pop    ebx
  413331:	pop    es
  413332:	dec    ebp
  413333:	xchg   esp,eax
  413334:	(bad)  
  413335:	jbe    0x41335a
  413337:	xor    ebx,eax
  413339:	out    dx,al
  41333a:	add    cl,al
  41333c:	xor    edx,DWORD PTR [edx-0x29]
  41333f:	push   ecx
  413340:	lods   al,BYTE PTR ds:[esi]
  413341:	xchg   edi,eax
  413342:	sbb    ecx,DWORD PTR [ebx+0x78e96fa6]
  413348:	sbb    dh,ah
  41334a:	adc    edx,DWORD PTR ds:0xfca16ff2
  413350:	lods   al,BYTE PTR ds:[esi]
  413351:	(bad)  
  413352:	jmp    0x4132d8
  413354:	fbld   TBYTE PTR [ecx]
  413356:	adc    al,0x47
  413358:	scas   eax,DWORD PTR es:[edi]
  413359:	test   eax,0x8cb7cf3b
  41335e:	bound  eax,QWORD PTR [edi-0x21a95f78]
  413364:	inc    edi
  413365:	pop    esi
  413366:	lods   al,BYTE PTR ds:[esi]
  413367:	mov    ebp,0x14b0126d
  41336c:	loope  0x413321
  41336e:	and    eax,0x8721e68
  413373:	repz sbb cl,0xa7
  413377:	cli    
  413378:	dec    edx
  413379:	mov    eax,0xa38059bc
  41337e:	ror    DWORD PTR [ebp+0x42367ec0],0xbb
  413385:	jae    0x413393
  413387:	(bad)  
  413388:	xchg   ebp,eax
  413389:	jg     0x4133bf
  41338b:	sub    al,BYTE PTR [ecx]
  41338d:	js     0x413313
  41338f:	xchg   ebx,eax
  413390:	jns    0x41338f
  413392:	cmp    eax,0x817fefa4
  413397:	jle    0x41332f
  413399:	inc    edi
  41339a:	sub    DWORD PTR [ecx-0x48],edx
  41339d:	fwait
  41339e:	mov    cl,0x8a
  4133a0:	stos   BYTE PTR es:[edi],al
  4133a1:	outs   dx,DWORD PTR ds:[esi]
  4133a2:	scas   al,BYTE PTR es:[edi]
  4133a3:	fiadd  WORD PTR [ecx-0x35932458]
  4133a9:	adc    BYTE PTR [edi+0x53e8507f],0x3e
  4133b0:	mov    al,BYTE PTR [ebx+0x3c]
  4133b3:	iret   
  4133b4:	mov    ds:0xefc048a2,eax
  4133b9:	int3   
  4133ba:	or     dh,BYTE PTR [edi-0x51]
  4133bd:	(bad)  
  4133be:	loopne 0x413394
  4133c0:	das    
  4133c1:	sub    DWORD PTR [edx-0x434cc4bc],esi
  4133c7:	sti    
  4133c8:	or     eax,0x44886ac8
  4133cd:	sub    edx,DWORD PTR [ebp+0x4446ba55]
  4133d3:	into   
  4133d4:	inc    ecx
  4133d5:	stc    
  4133d6:	(bad)  
  4133d7:	fsub   DWORD PTR [edx+ebx*8-0x799688ee]
  4133de:	pop    esp
  4133df:	repz adc BYTE PTR [ecx],cl
  4133e2:	push   eax
  4133e3:	mov    ebp,0x45e5719c
  4133e8:	adc    eax,DWORD PTR ss:[edi]
  4133eb:	loope  0x4133f6
  4133ed:	jg     0x4133b3
  4133ef:	and    al,0xb8
  4133f1:	pop    ecx
  4133f2:	outs   dx,DWORD PTR ds:[esi]
  4133f3:	shl    DWORD PTR ds:0x38c4d9e9,1
  4133f9:	push   ds
  4133fa:	sub    esp,DWORD PTR [edx-0x4340cd9a]
  413400:	mov    ch,0x19
  413402:	inc    ecx
  413403:	jne    0x413395
  413405:	sbb    ah,BYTE PTR [edx+0x38d2ef7d]
  41340b:	jge    0x413484
  41340d:	and    BYTE PTR [edx-0xa],bh
  413410:	xor    ch,BYTE PTR fs:[esi*4+0x23303f65]
  413418:	ret    0x23a6
  41341b:	push   0xa4e0bacf
  413420:	enter  0xf125,0x3c
  413424:	push   DWORD PTR [eax+0x46]
  413427:	mov    esp,0xfda096e
  41342c:	or     eax,0x551edfb4
  413431:	in     al,0xcc
  413433:	fsub   st,st(5)
  413435:	icebp  
  413436:	in     eax,0x37
  413438:	ins    DWORD PTR es:[edi],dx
  413439:	pop    ss
  41343a:	or     eax,0x6d6c337
  41343f:	sahf   
  413440:	retf   
  413441:	mov    al,BYTE PTR [edx-0x2320bc07]
  413447:	lea    esi,[ebp+0x30865452]
  41344d:	(bad)  
  41344e:	call   0x5cd8dbc7
  413453:	pop    edi
  413454:	ds jmp 0xafd898fa
  41345a:	lods   eax,DWORD PTR ds:[esi]
  41345b:	pop    esp
  41345c:	xor    al,bh
  41345e:	push   ss
  41345f:	xchg   ebp,eax
  413460:	mov    dl,0x9c
  413462:	das    
  413463:	rcr    BYTE PTR [ebx+0x9d96a7b],1
  413469:	adc    dl,BYTE PTR [esi-0x2f]
  41346c:	dec    ebx
  41346d:	into   
  41346e:	lahf   
  41346f:	pop    esp
  413470:	pop    edx
  413471:	add    bh,al
  413473:	and    ah,BYTE PTR [edi]
  413475:	sbb    ebx,DWORD PTR [esp+edi*8-0x40]
  413479:	ja     0x413405
  41347b:	nop
  41347c:	jl     0x41343d
  41347e:	adc    edi,DWORD PTR [eax]
  413480:	adc    DWORD PTR [edx-0x2e],0xf1225e10
  413487:	cmp    BYTE PTR [eax+0x502bba93],0x6f
  41348e:	cmc    
  41348f:	dec    ecx
  413490:	sub    DWORD PTR [edi+0x40],edi
  413493:	cwde   
  413494:	push   ebx
  413495:	sbb    eax,0x312ed8ef
  41349a:	es adc dl,dl
  41349d:	mov    al,0xb5
  41349f:	and    al,dh
  4134a1:	sti    
  4134a2:	adc    DWORD PTR [esi],esp
  4134a4:	push   ecx
  4134a5:	fistp  DWORD PTR [ecx+0x1e]
  4134a8:	cmp    eax,0x6c769a9a
  4134ad:	gs mov edx,0xf2df5c5b
  4134b3:	cmp    eax,0x2088c6e9
  4134b8:	jbe    0x413459
  4134ba:	jmp    DWORD PTR [esi+0x5241c105]
  4134c0:	shl    BYTE PTR [edx+0x6264fa04],1
  4134c6:	and    edi,ebp
  4134c8:	mov    ds:0x753aeda1,eax
  4134cd:	jmp    DWORD PTR [esi-0x8]
  4134d0:	(bad)  
  4134d1:	int3   
  4134d2:	adc    ebx,DWORD PTR [ebp+0x22]
  4134d5:	out    dx,eax
  4134d6:	call   0x6bb5a019
  4134db:	les    ebx,FWORD PTR [ebx+0x6258bf3]
  4134e1:	jnp    0x4134be
  4134e3:	(bad)  
  4134e4:	and    BYTE PTR [ebp-0x14],bh
  4134e7:	mov    dh,0xbc
  4134e9:	pop    ebx
  4134ea:	ficom  WORD PTR [ecx-0x516e0b93]
  4134f0:	dec    esi
  4134f1:	ror    DWORD PTR [esi+edi*2+0x334d0502],cl
  4134f8:	in     al,0xdb
  4134fa:	push   es
  4134fb:	pop    ss
  4134fc:	push   edx
  4134fd:	push   esp
  4134fe:	add    al,0x2f
  413500:	iret   
  413501:	xchg   ebp,eax
  413502:	shl    edx,1
  413504:	dec    ebp
  413505:	addr16 jp 0x4134c8
  413508:	sbb    ch,BYTE PTR [ebp-0x589e5862]
  41350e:	(bad)
  413513:	mov    dl,0x47
  413515:	in     eax,0x5
  413517:	mov    ecx,0x1c84fd66
  41351c:	xor    ch,BYTE PTR es:[ecx-0x3f7d481f]
  413523:	inc    ebx
  413524:	mov    ecx,0x54e85f2b
  413529:	and    ah,bl
  41352b:	nop
  41352c:	push   esp
  41352d:	fsub   st(5),st
  41352f:	sbb    ebp,DWORD PTR [eax+0x2534c705]
  413535:	lods   eax,DWORD PTR ds:[esi]
  413536:	stc    
  413537:	xor    eax,0xac65a528
  41353c:	lods   al,BYTE PTR ds:[esi]
  41353d:	mov    bh,0x12
  41353f:	stos   DWORD PTR es:[edi],eax
  413540:	ficom  DWORD PTR [edx-0x45]
  413543:	in     eax,0x26
  413545:	add    al,0x46
  413547:	sar    ecx,1
  413549:	ror    DWORD PTR [eax],0x8f
  41354c:	pop    edx
  41354d:	pop    ecx
  41354e:	jbe    0x413532
  413550:	fild   DWORD PTR [edx+0x4]
  413553:	jge    0x413546
  413555:	(bad)  
  413556:	jle    0x413531
  413558:	rol    BYTE PTR [edx+ecx*4],cl
  41355b:	inc    ebp
  41355c:	inc    esp
  41355d:	mul    BYTE PTR [ebp-0x4382ab55]
  413563:	fisub  DWORD PTR [ecx]
  413565:	rcl    esi,0xb3
  413568:	fisub  DWORD PTR [eax-0x78]
  41356b:	sub    bl,BYTE PTR [edx+0x1f]
  41356e:	or     eax,0x49f1be01
  413573:	lods   al,BYTE PTR ds:[esi]
  413574:	std    
  413575:	or     bh,0xcc
  413578:	(bad)  
  413579:	push   eax
  41357a:	fisttp DWORD PTR [eax-0x7b34d0e8]
  413580:	out    dx,al
  413581:	jnp    0x41358a
  413583:	sub    BYTE PTR [ebx],bl
  413585:	fsubr  st(7),st
  413587:	add    BYTE PTR [ebp-0x52f6e3a8],bh
  41358d:	pusha  
  41358e:	pop    esp
  41358f:	repnz sahf 
  413591:	dec    esp
  413592:	mov    ah,0xf9
  413594:	dec    esi
  413595:	jmp    0x413580
  413597:	ins    DWORD PTR es:[edi],dx
  413598:	sub    esi,DWORD PTR [edi]
  41359a:	dec    ecx
  41359b:	and    DWORD PTR [edi-0x1aac839],ebp
  4135a1:	mov    gs,WORD PTR [edi+0x6209f3c8]
  4135a7:	adc    ebp,0xffffffda
  4135aa:	addr16 aam 0xad
  4135ad:	dec    esp
  4135ae:	xchg   edx,eax
  4135af:	loop   0x41358c
  4135b1:	sti    
  4135b2:	sub    DWORD PTR [edx-0x70],ebx
  4135b5:	outs   dx,DWORD PTR ds:[esi]
  4135b6:	test   al,0x53
  4135b8:	xchg   edx,eax
  4135b9:	aas    
  4135ba:	ss xor eax,0xded7b48e
  4135c0:	jmp    0x413635
  4135c2:	rcl    DWORD PTR [eax+0x6d8862c3],cl
  4135c8:	pop    ss
  4135c9:	jl     0x413636
  4135cb:	retf   
  4135cc:	mov    ds:0xf2edb344,al
  4135d1:	jl     0x4135b2
  4135d3:	sbb    BYTE PTR ss:[ebx+0x27b3f86b],0x78
  4135db:	xchg   ecx,eax
  4135dc:	sahf   
  4135dd:	shl    DWORD PTR [ecx+0x2798c0fa],cl
  4135e3:	sti    
  4135e4:	and    BYTE PTR [edx],ah
  4135e6:	lahf   
  4135e7:	ret    
  4135e8:	pop    edx
  4135e9:	loope  0x4135c4
  4135eb:	popa   
  4135ec:	fstp   DWORD PTR [edx-0x1491f91c]
  4135f2:	xor    esp,edx
  4135f4:	aam    0xac
  4135f6:	add    cl,BYTE PTR [ecx-0x58c6f227]
  4135fc:	xor    esi,DWORD PTR [edi]
  4135fe:	xor    BYTE PTR [ebp-0x14],0x8
  413602:	jmp    0xea4f2911
  413607:	pop    eax
  413608:	mov    eax,ds:0x8a9ccb3e
  41360d:	pop    es
  41360e:	sbb    ebp,DWORD PTR [ecx+0x44]
  413611:	int3   
  413612:	test   al,0xed
  413614:	cld    
  413615:	push   edi
  413616:	sbb    esp,DWORD PTR [edi+0x14579723]
  41361c:	lahf   
  41361d:	adc    esp,eax
  41361f:	xchg   ebx,eax
  413620:	ret    0xf33b
  413623:	(bad)  
  413624:	(bad)  
  413625:	(bad)  
  413626:	iret   
  413627:	push   ds
  413628:	fwait
  413629:	jle    0x4135d9
  41362b:	jns    0x413688
  41362d:	hlt    
  41362e:	push   ss
  41362f:	and    ch,bl
  413631:	pop    esi
  413632:	repz adc esp,DWORD PTR ds:[eax+0x7763f797]
  41363a:	leave  
  41363b:	(bad)  [edx]
  41363d:	pop    es
  41363e:	sub    eax,0x57faa123
  413643:	dec    esi
  413644:	jmp    0x988e85ba
  413649:	aad    0x75
  41364b:	mov    al,ch
  41364d:	fsubr  DWORD PTR [ecx+0x69]
  413650:	scas   eax,DWORD PTR es:[edi]
  413651:	lods   eax,DWORD PTR ds:[esi]
  413652:	sub    BYTE PTR [edi],bl
  413654:	iret   
  413655:	push   eax
  413656:	pop    ss
  413657:	xor    eax,esi
  413659:	jge    0x413674
  41365b:	test   al,0xf8
  41365d:	enter  0x4524,0x91
  413661:	cmp    eax,esp
  413663:	push   ss
  413664:	push   es
  413665:	test   DWORD PTR [ebx],edx
  413667:	jmp    0x4136e2
  413669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41366a:	push   ecx
  41366b:	cld    
  41366c:	or     DWORD PTR [ebx+0x2e],esp
  41366f:	ud2    
  413671:	sub    BYTE PTR [ebp+0x4a0d2deb],bh
  413677:	dec    edi
  413678:	sub    edx,ebx
  41367a:	inc    esi
  41367b:	mov    edx,0x222c6692
  413680:	sub    ebp,DWORD PTR [edx+0x2f399043]
  413686:	addr16 repnz cdq 
  413689:	sbb    eax,0x16187dc9
  41368e:	out    dx,al
  41368f:	mov    DWORD PTR [bx+si+0x3749],edi
  413694:	fmul   DWORD PTR [ebx]
  413696:	imul   ecx,DWORD PTR [edx-0x71],0xffffffc8
  41369a:	mul    DWORD PTR [eax+0x60]
  41369d:	lahf   
  41369e:	(bad)  
  41369f:	xchg   esp,eax
  4136a0:	dec    ebx
  4136a1:	cmp    BYTE PTR ss:[esi],ch
  4136a4:	ret    
  4136a5:	leave  
  4136a6:	jp     0x4136cc
  4136a8:	push   ecx
  4136a9:	addr16 es fsubp st(6),st
  4136ad:	or     eax,0xe2c09c48
  4136b2:	mov    dl,0xbb
  4136b4:	pop    edx
  4136b5:	or     eax,0x37193518
  4136ba:	xchg   ch,ch
  4136bc:	jmp    0xf5d5:0x8e88fb30
  4136c3:	push   0xe0a47d08
  4136c8:	test   dl,bl
  4136ca:	dec    eax
  4136cb:	sub    DWORD PTR [edx-0x3d],esi
  4136ce:	std    
  4136cf:	mov    dl,0xf6
  4136d1:	xchg   BYTE PTR [ebx],bl
  4136d3:	inc    eax
  4136d4:	mov    ebp,0x9010ef1
  4136d9:	jne    0x413697
  4136db:	imul   edi,ecx,0xffffff8e
  4136de:	mov    bl,0x97
  4136e0:	add    edx,ecx
  4136e2:	fidivr WORD PTR [ebp+0x460a2cc3]
  4136e8:	jbe    0x413760
  4136ea:	daa    
  4136eb:	lahf   
  4136ec:	repnz in al,0xf1
  4136ef:	nop
  4136f0:	or     eax,0x978bd6f1
  4136f5:	in     al,0xf3
  4136f7:	aam    0x27
  4136f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136fa:	scas   eax,DWORD PTR es:[edi]
  4136fb:	inc    edi
  4136fc:	xchg   ecx,eax
  4136fd:	leave  
  4136fe:	out    0x31,al
  413700:	cmp    dh,BYTE PTR [eax-0x77]
  413703:	inc    ecx
  413704:	dec    ebp
  413705:	fistp  WORD PTR [ecx-0x6f]
  413708:	push   cs
  413709:	and    esi,eax
  41370b:	jecxz  0x4136f9
  41370d:	in     al,dx
  41370e:	add    bl,0xdb
  413711:	sbb    BYTE PTR [ecx-0x2f],0xdd
  413715:	cmpps  xmm3,XMMWORD PTR [esi-0x61],0xc3
  41371a:	imul   ebx,DWORD PTR [eax],0xbd7645a8
  413720:	cdq    
  413721:	dec    esi
  413722:	mov    ds:0x51ecb5e3,eax
  413727:	push   0x5b2a5fbe
  41372c:	mov    ecx,DWORD PTR [ebp+0x1b]
  41372f:	xor    eax,0x26e45d8c
  413734:	arpl   WORD PTR [ebp-0x71f8a84e],ax
  41373a:	daa    
  41373b:	les    ebp,FWORD PTR [edx+0x7a3ec525]
  413741:	stc    
  413742:	jmp    0xa7bc:0xdc6f3d1a
  413749:	inc    eax
  41374a:	xor    al,0x9a
  41374c:	xor    dl,al
  41374e:	in     eax,0x94
  413750:	xchg   edi,eax
  413751:	sbb    BYTE PTR [ecx+eiz*4+0xa],dl
  413755:	out    0xf0,eax
  413757:	in     eax,0xd7
  413759:	cmp    BYTE PTR [edi],bh
  41375b:	xchg   DWORD PTR [ecx],esp
  41375d:	dec    eax
  41375e:	mov    cs,WORD PTR [eax+edx*1-0x16]
  413762:	hlt    
  413763:	xchg   esp,eax
  413764:	adc    edx,esp
  413766:	mov    dh,0xcd
  413768:	dec    edx
  413769:	popa   
  41376a:	sar    BYTE PTR [ebx-0x65943562],0xa8
  413771:	sti    
  413772:	adc    eax,0xd873cb53
  413777:	fs sbb al,dl
  41377a:	dec    ebx
  41377b:	xor    al,0x1c
  41377d:	add    bh,BYTE PTR [esi+esi*4]
  413780:	shl    DWORD PTR [ebp+0xc3e57bf],1
  413786:	mov    edi,0x3f5b6035
  41378b:	inc    edx
  41378c:	sub    eax,0x94e75f28
  413791:	iret   
  413792:	jge    0x41378e
  413794:	dec    ebx
  413795:	mov    cl,0x12
  413797:	lds    esi,FWORD PTR [edi+ebp*8-0x25]
  41379b:	sub    cl,BYTE PTR [ecx]
  41379d:	gs leave 
  41379f:	xor    eax,0xd738b32c
  4137a4:	jns    0x413793
  4137a6:	cwde   
  4137a7:	ret    0xc160
  4137aa:	icebp  
  4137ab:	pop    ebx
  4137ac:	gs mov al,0xb0
  4137af:	inc    edi
  4137b0:	inc    ecx
  4137b1:	xchg   edi,eax
  4137b2:	push   cs
  4137b3:	icebp  
  4137b4:	xor    cl,BYTE PTR [ecx-0x5e]
  4137b7:	add    BYTE PTR [eax-0x11d28a3a],dl
  4137bd:	retf   0xe7f5
  4137c0:	xchg   BYTE PTR [ecx+0x11],al
  4137c3:	pop    eax
  4137c4:	adc    al,0x62
  4137c6:	dec    esi
  4137c7:	mov    al,ds:0xc0a4a71d
  4137cc:	aam    0x83
  4137ce:	jb     0x4137d4
  4137d0:	outs   dx,BYTE PTR ds:[esi]
  4137d1:	cmp    cl,BYTE PTR [edx]
  4137d3:	outs   dx,BYTE PTR ds:[esi]
  4137d4:	jecxz  0x413832
  4137d6:	jnp    0x413763
  4137d8:	push   es
  4137d9:	sar    BYTE PTR [esi-0x3c33f40f],cl
  4137df:	xchg   esp,eax
  4137e0:	mov    eax,0xdd619f54
  4137e5:	mov    fs:0x3f5721d3,al
  4137eb:	lds    edi,FWORD PTR [eax+edx*1-0xc]
  4137ef:	cmp    edi,DWORD PTR [edx]
  4137f1:	fisttp QWORD PTR [ecx]
  4137f3:	out    dx,al
  4137f4:	adc    ch,ch
  4137f6:	xchg   esi,eax
  4137f7:	mov    al,ds:0xa666c7d8
  4137fc:	jnp    0x413854
  4137fe:	xchg   eax,ebx
  413800:	fidiv  WORD PTR [esi]
  413802:	jbe    0x4137fd
  413804:	adc    DWORD PTR [edx+0x712a85e2],esi
  41380a:	push   ecx
  41380b:	fnstsw WORD PTR [ecx]
  41380d:	jnp    0x4137cd
  41380f:	or     eax,0x5e5e27d
  413814:	nop
  413815:	dec    esi
  413816:	mov    BYTE PTR [ebx],al
  413818:	inc    esi
  413819:	push   es
  41381a:	jno    0x413818
  41381c:	push   ebp
  41381d:	call   0xd057f10c
  413822:	sub    DWORD PTR [ecx-0x59],0xf
  413826:	inc    edx
  413827:	pop    ebx
  413828:	jne    0x413877
  41382a:	or     cl,BYTE PTR [esp+edx*8-0x2675b379]
  413831:	mov    bh,0x7f
  413833:	retf   
  413834:	shl    BYTE PTR [eax],0xe4
  413837:	retf   
  413838:	es mov edx,0x2c28971e
  41383e:	mov    ds:0x127ec7a0,eax
  413843:	cmp    bl,BYTE PTR [edi-0x7e5c313]
  413849:	loope  0x413825
  41384b:	pop    ebp
  41384c:	fcom   QWORD PTR [edx+0x7c7595c1]
  413852:	retf   
  413853:	and    DWORD PTR [eax],esp
  413855:	repz shl BYTE PTR [esi+0x7d],0xe
  41385a:	out    0x8f,eax
  41385c:	add    DWORD PTR [esi],ebx
  41385e:	js     0x413874
  413860:	add    DWORD PTR [edi+eiz*4],0x75e214b4
  413867:	arpl   WORD PTR [ebp-0x59fe9d55],dx
  41386d:	lea    ebx,ds:0xb06cb621
  413873:	cmp    ebx,DWORD PTR [edi]
  413875:	inc    ecx
  413876:	lock fsubrp st(7),st
  413879:	cmp    al,0x8a
  41387b:	pushf  
  41387c:	jg     0x413802
  41387e:	lea    eax,[ebx+0x618e1969]
  413884:	cwde   
  413885:	pushf  
  413886:	pop    ebx
  413887:	ficom  DWORD PTR [edx]
  413889:	out    dx,al
  41388a:	ss push ebx
  41388c:	xchg   ecx,eax
  41388d:	fwait
  41388e:	jg     0x4138cc
  413890:	popa   
  413891:	neg    BYTE PTR [ebx+0x7b]
  413894:	mov    WORD PTR [esi+0x5c701d9],gs
  41389a:	inc    ebp
  41389b:	sbb    eax,0xf325fbb3
  4138a0:	mov    ecx,0x16bd1e06
  4138a5:	jecxz  0x4138c1
  4138a7:	mov    edx,0x8919ddab
  4138ac:	in     eax,0x7b
  4138ae:	enter  0x650c,0xe4
  4138b2:	xchg   BYTE PTR [edi+0x6a],ah
  4138b5:	pop    es
  4138b6:	inc    ebx
  4138b7:	call   0xb5b0fdc1
  4138bc:	push   esi
  4138bd:	and    DWORD PTR [esi],0x63
  4138c0:	inc    esp
  4138c1:	sbb    al,0x20
  4138c3:	fld    DWORD PTR [ebp-0xf]
  4138c6:	mov    ebx,0x625f0156
  4138cb:	and    DWORD PTR [ecx-0x6c],esp
  4138ce:	out    dx,al
  4138cf:	stos   BYTE PTR es:[edi],al
  4138d0:	mov    DWORD PTR [ebp-0x71474523],edi
  4138d6:	and    al,0x40
  4138d8:	fcomp  st(2)
  4138da:	out    0x16,eax
  4138dc:	sub    eax,0xa34295fa
  4138e1:	push   DWORD PTR [edi+0x4c86ea5b]
  4138e7:	and    ch,dl
  4138e9:	aam    0x1b
  4138eb:	mov    ch,0x53
  4138ed:	lods   al,BYTE PTR ds:[esi]
  4138ee:	lods   eax,DWORD PTR ds:[esi]
  4138ef:	sti    
  4138f0:	fisttp QWORD PTR [ebx*4-0x1242a018]
  4138f7:	inc    ebp
  4138f8:	mov    dl,0xe4
  4138fa:	jg     0x413892
  4138fc:	pusha  
  4138fd:	pusha  
  4138fe:	xlat   BYTE PTR ds:[ebx]
  4138ff:	pop    esp
  413900:	add    esp,DWORD PTR [eax]
  413902:	mov    dl,0x4d
  413904:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413906:	dec    ecx
  413907:	sahf   
  413908:	std    
  413909:	(bad)  
  41390a:	je     0x4138ca
  41390c:	lods   eax,DWORD PTR ds:[esi]
  41390d:	fistp  QWORD PTR [eax-0x62974222]
  413913:	push   edi
  413914:	fst    QWORD PTR [esi]
  413916:	clc    
  413917:	into   
  413918:	mov    al,0x16
  41391a:	push   esi
  41391b:	(bad)  
  41391c:	test   BYTE PTR [esi-0x35094333],bh
  413922:	popf   
  413923:	add    BYTE PTR [edx+0x67],cl
  413926:	lock clc 
  413928:	enter  0xfdc6,0x72
  41392c:	inc    ecx
  41392d:	add    DWORD PTR [ebp+0x3aa3e17],ebx
  413933:	int    0x12
  413935:	pop    ds
  413936:	les    esp,FWORD PTR [edx]
  413938:	ins    DWORD PTR es:[edi],dx
  413939:	xchg   edx,eax
  41393a:	aam    0x33
  41393c:	push   esp
  41393d:	add    DWORD PTR [esi+0x392299dc],esp
  413943:	sti    
  413944:	enter  0xd25c,0xbb
  413948:	nop
  413949:	sub    edi,DWORD PTR [eax+0x754f1bd1]
  41394f:	pop    ebp
  413950:	push   edi
  413951:	sbb    ebp,DWORD PTR [edx]
  413953:	adc    BYTE PTR [edi],cl
  413955:	clc    
  413956:	call   0xd5b693eb
  41395b:	leave  
  41395c:	sub    ch,ah
  41395e:	arpl   si,bp
  413960:	jbe    0x413969
  413962:	out    0x21,eax
  413964:	test   DWORD PTR [edx],esi
  413966:	xchg   BYTE PTR [ebp-0x4b],dh
  413969:	or     eax,0xb65f2274
  41396e:	ss pop esp
  413970:	cwde   
  413971:	jg     0x413960
  413973:	push   edi
  413974:	shr    BYTE PTR [edi-0x1a129d81],1
  41397a:	aad    0x8b
  41397c:	arpl   WORD PTR [ebx],ax
  41397e:	mov    cl,0x11
  413980:	repnz mov ch,0xbf
  413983:	add    edx,DWORD PTR [esi-0x553fc93b]
  413989:	push   ss
  41398a:	xor    ecx,edx
  41398c:	call   0xfd37:0xa26546c0
  413993:	ins    BYTE PTR es:[edi],dx
  413994:	pop    ds
  413995:	cmp    ebp,esp
  413997:	jno    0x41393d
  413999:	jge    0x4139a5
  41399b:	into   
  41399c:	push   ebp
  41399d:	xor    cl,BYTE PTR [ebp+0x6b70cc3d]
  4139a3:	sbb    dh,bh
  4139a5:	xchg   ebx,eax
  4139a6:	popa   
  4139a7:	jl     0x4139f0
  4139a9:	daa    
  4139aa:	pop    ss
  4139ab:	aaa    
  4139ac:	sub    BYTE PTR [edi+0x48],ch
  4139af:	mov    cl,0xca
  4139b1:	loop   0x413a26
  4139b3:	stos   DWORD PTR es:[edi],eax
  4139b4:	(bad)  
  4139b6:	and    ebx,DWORD PTR [eax]
  4139b8:	adc    BYTE PTR [edx+0x59],bl
  4139bb:	hlt    
  4139bc:	bound  edi,QWORD PTR ds:0xd5d1cdcf
  4139c2:	call   0x591a:0xb116257c
  4139c9:	or     DWORD PTR [edi],ebx
  4139cb:	(bad)  
  4139cc:	out    dx,eax
  4139cd:	(bad)
  4139d0:	cmp    al,0x6d
  4139d2:	inc    ecx
  4139d3:	dec    ebp
  4139d4:	test   al,0x29
  4139d6:	cs cmp al,0x8c
  4139d9:	pop    edx
  4139da:	ss pop esi
  4139dc:	cwde   
  4139dd:	push   ecx
  4139de:	inc    edi
  4139df:	scas   eax,DWORD PTR es:[edi]
  4139e0:	sub    eax,0xffffffed
  4139e3:	xor    DWORD PTR [eax],ebp
  4139e5:	test   DWORD PTR [eax+0x3996f899],ebx
  4139eb:	retf   0xa52d
  4139ee:	pop    es
  4139ef:	sub    ebp,eax
  4139f1:	in     al,dx
  4139f2:	aad    0xba
  4139f4:	dec    eax
  4139f5:	std    
  4139f6:	sbb    eax,DWORD PTR [ebp+0x77f55b3c]
  4139fc:	test   BYTE PTR [edi],bh
  4139fe:	in     al,0xc6
  413a00:	cld    
  413a01:	jle    0x413a70
  413a03:	lea    esi,[edi]
  413a05:	push   esp
  413a06:	shr    BYTE PTR [eax+0xf],0x1e
  413a0a:	mov    cl,0x76
  413a0c:	mov    fs,WORD PTR [ebx]
  413a0e:	pop    ecx
  413a0f:	loope  0x4139c5
  413a11:	push   ebp
  413a12:	xor    DWORD PTR [ecx],esi
  413a14:	pop    es
  413a15:	add    al,0xae
  413a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a18:	stos   DWORD PTR es:[edi],eax
  413a19:	aaa    
  413a1a:	adc    DWORD PTR [eax+0x1c],0xd747f013
  413a21:	sar    DWORD PTR [ecx-0x496007e3],1
  413a27:	(bad)  
  413a28:	push   0xffffffbd
  413a2a:	lock jne 0x4139f6
  413a2d:	dec    esp
  413a2e:	rol    DWORD PTR [ecx-0x757c146],1
  413a34:	in     eax,0xb
  413a36:	(bad)  
  413a37:	pop    eax
  413a38:	out    0x26,eax
  413a3a:	test   al,0xc1
  413a3c:	push   ebx
  413a3d:	gs cld 
  413a3f:	ret    
  413a40:	pop    ds
  413a41:	leave  
  413a42:	sar    esi,cl
  413a44:	inc    ebx
  413a45:	pop    ebp
  413a46:	stos   BYTE PTR es:[edi],al
  413a47:	add    BYTE PTR [eax-0x63],0x93
  413a4b:	test   DWORD PTR es:[esi-0x71f13a6],ebx
  413a52:	or     edi,esi
  413a54:	xchg   edi,eax
  413a55:	or     BYTE PTR [ecx-0x76727a43],ah
  413a5b:	mov    edi,0x684a0f21
  413a60:	or     eax,0x54c95ae0
  413a65:	push   ebx
  413a66:	scas   eax,DWORD PTR es:[edi]
  413a67:	xor    BYTE PTR [esi+0x4e],bl
  413a6a:	call   edi
  413a6c:	mov    edi,0x75e18ec9
  413a71:	fsub   QWORD PTR [ebp+0x10]
  413a74:	mov    ds:0x7970c057,eax
  413a79:	clc    
  413a7a:	xor    esp,edx
  413a7c:	jl     0x413a5d
  413a7e:	jmp    0x11fdc61d
  413a83:	cmp    eax,0xa2ebb3c6
  413a88:	xor    BYTE PTR [ebx+0x4bc9c602],al
  413a8e:	jo     0x413af3
  413a90:	cmp    al,0x28
  413a92:	jbe    0x413afb
  413a94:	pushf  
  413a95:	xor    BYTE PTR [eax+eiz*1],bh
  413a98:	xor    DWORD PTR ds:0xc85ad658,0xfe256e5a
  413aa2:	inc    eax
  413aa3:	pop    edx
  413aa4:	inc    ebx
  413aa5:	ds into 
  413aa7:	inc    edx
  413aa8:	outs   dx,DWORD PTR ds:[esi]
  413aa9:	daa    
  413aaa:	les    eax,FWORD PTR [ebx+0x13f428c7]
  413ab0:	push   ebx
  413ab1:	dec    ebx
  413ab2:	adc    esp,DWORD PTR [esi-0x771c0226]
  413ab8:	and    BYTE PTR [ecx+0x654cf183],cl
  413abe:	js     0x413ae7
  413ac0:	pop    esi
  413ac1:	jae    0x413aa0
  413ac3:	dec    ebp
  413ac4:	aaa    
  413ac5:	fsubr  DWORD PTR [esi]
  413ac7:	mov    DWORD PTR [ebx+0x7f],edx
  413aca:	jne    0x413b49
  413acc:	into   
  413acd:	pop    es
  413ace:	jno    0x413b3d
  413ad0:	pop    ss
  413ad1:	je     0x413b0c
  413ad3:	pop    es
  413ad4:	mov    esp,0x8a3e2840
  413ad9:	repz sbb ebx,DWORD PTR [edi+0x62]
  413add:	sbb    ecx,ebp
  413adf:	ss mov ebp,0xce4be190
  413ae5:	or     BYTE PTR [edi+eiz*4+0x6b],0x2
  413aea:	xchg   DWORD PTR [esi-0x76],eax
  413aed:	push   ds
  413aee:	jecxz  0x413afd
  413af0:	into   
  413af1:	add    al,0xb6
  413af3:	add    BYTE PTR [ebx-0x6d],bh
  413af6:	out    0x92,al
  413af8:	pop    es
  413af9:	jmp    0x94157e7f
  413afe:	fidiv  DWORD PTR [edx]
  413b00:	iret   
  413b01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b02:	in     eax,dx
  413b03:	enter  0x9284,0x56
  413b07:	sar    BYTE PTR [ebx+0x3d],0xf8
  413b0b:	pop    esi
  413b0c:	xchg   esi,eax
  413b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b0e:	loopne 0x413ac5
  413b10:	inc    eax
  413b11:	inc    edi
  413b12:	lods   al,BYTE PTR ds:[esi]
  413b13:	pop    ebp
  413b14:	sub    al,BYTE PTR [ebx-0x45b6b02]
  413b1a:	pop    edx
  413b1b:	pusha  
  413b1c:	pop    es
  413b1d:	int3   
  413b1e:	out    0xbf,al
  413b20:	arpl   di,sp
  413b22:	sbb    eax,0xc75c455b
  413b27:	scas   al,BYTE PTR es:[edi]
  413b28:	or     BYTE PTR [eax+0x302cdde3],0xbb
  413b2f:	ja     0x413b13
  413b31:	push   ebp
  413b32:	dec    ecx
  413b33:	and    bl,ch
  413b35:	mov    ds:0xed377e27,al
  413b3a:	sub    eax,DWORD PTR [ebx-0x46]
  413b3d:	mov    edi,0xd8d05853
  413b42:	inc    edi
  413b43:	std    
  413b44:	push   0xc17489f8
  413b49:	and    al,0x88
  413b4b:	sbb    DWORD PTR [ebx+ebp*4],esp
  413b4e:	call   0xb381:0xa76fc378
  413b55:	data16 fdivr QWORD PTR [eax]
  413b58:	pushf  
  413b59:	xchg   edx,eax
  413b5a:	stos   DWORD PTR es:[edi],eax
  413b5b:	shl    edx,1
  413b5d:	in     al,dx
  413b5e:	sub    dh,BYTE PTR [edi]
  413b60:	mov    cs,WORD PTR [edi-0x9]
  413b63:	ins    DWORD PTR es:[edi],dx
  413b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b65:	xor    eax,0x96d4801c
  413b6a:	fisttp DWORD PTR [edi+0x5b1b5531]
  413b70:	pop    ds
  413b71:	leave  
  413b72:	jnp    0x413b92
  413b74:	test   DWORD PTR [esi],esi
  413b76:	cmp    bl,BYTE PTR [esi]
  413b78:	sbb    eax,0xa0f41e38
  413b7d:	arpl   WORD PTR [edx+0x28],di
  413b80:	jne    0x413bfc
  413b82:	dec    esp
  413b83:	jg     0x413b83
  413b85:	sbb    DWORD PTR [ebp-0x34],edx
  413b88:	cmp    ah,BYTE PTR [ecx+0x16]
  413b8b:	js     0x413b3c
  413b8d:	rdtsc  
  413b8f:	cdq    
  413b90:	fs or  al,0x7d
  413b93:	or     eax,esi
  413b95:	pop    edx
  413b96:	xor    DWORD PTR [ebp+0x3885a1f3],0xcdaecf2e
  413ba0:	aas    
  413ba1:	cmp    al,0xfa
  413ba3:	sub    ebp,esi
  413ba5:	dec    ecx
  413ba6:	inc    ecx
  413ba7:	stos   BYTE PTR es:[edi],al
  413ba8:	xchg   ebp,eax
  413ba9:	out    dx,eax
  413baa:	or     esp,0x6a
  413bad:	(bad)  
  413bae:	stos   DWORD PTR es:[edi],eax
  413baf:	cmp    dl,BYTE PTR [esi]
  413bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bb2:	scas   eax,DWORD PTR es:[edi]
  413bb3:	aad    0xb5
  413bb5:	scas   al,BYTE PTR es:[edi]
  413bb6:	jmp    0x6f436750
  413bbb:	lock adc eax,0x3bad750a
  413bc1:	or     DWORD PTR [ebp+0x59a1e42a],esi
  413bc7:	mov    eax,DWORD PTR [edx]
  413bc9:	cmp    BYTE PTR [eax+0x16],dh
  413bcc:	and    ecx,DWORD PTR ds:0xa6a7a994
  413bd2:	pop    eax
  413bd3:	sbb    BYTE PTR [ebp+0x4cce407b],dh
  413bd9:	in     eax,dx
  413bda:	shr    BYTE PTR gs:[edi-0x2440400f],cl
  413be1:	and    eax,0xdf13c9f6
  413be6:	repz push ds
  413be8:	pop    edi
  413be9:	or     edi,DWORD PTR [ecx-0x1214842]
  413bef:	loope  0x413b75
  413bf1:	mov    ebx,0xe9e9de33
  413bf6:	daa    
  413bf7:	xchg   ebp,eax
  413bf8:	test   DWORD PTR ss:0xbd8cef02,ecx
  413bff:	out    dx,eax
  413c00:	mov    esi,0x7fbc9b21
  413c05:	test   al,0x68
  413c07:	sbb    DWORD PTR ss:[edi-0x705a13a9],0x3036371b
  413c12:	outs   dx,BYTE PTR ds:[esi]
  413c13:	dec    ebx
  413c14:	mov    ds:0x32956ff7,eax
  413c19:	stos   DWORD PTR es:[edi],eax
  413c1a:	aas    
  413c1b:	mov    edx,0x250917a5
  413c20:	lahf   
  413c21:	pop    ecx
  413c22:	sub    bl,BYTE PTR [ecx]
  413c24:	xor    BYTE PTR [ebp+0x1050d5cc],ch
  413c2a:	cld    
  413c2b:	adc    eax,0xfb425adb
  413c30:	cmp    eax,ebp
  413c32:	mov    ah,0xa9
  413c34:	jns    0x413c3c
  413c36:	lods   al,BYTE PTR ds:[esi]
  413c37:	sbb    bh,ch
  413c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3a:	hlt    
  413c3b:	or     al,0xa4
  413c3d:	jae    0x413bc0
  413c3f:	inc    edx
  413c40:	mov    eax,0xcc932b4c
  413c45:	rcl    edi,1
  413c47:	mov    al,0xaf
  413c49:	xchg   eax,ebp
  413c4b:	jg     0x413c58
  413c4d:	and    BYTE PTR [edi+0x46],dl
  413c50:	repz mov eax,ds:0x85aa06a2
  413c56:	push   edx
  413c57:	cmovg  edx,DWORD PTR [eax-0x78]
  413c5b:	push   ss
  413c5c:	lods   eax,DWORD PTR ds:[esi]
  413c5d:	fst    QWORD PTR [edx]
  413c5f:	cmc    
  413c60:	sbb    DWORD PTR [ecx-0x18e0cc88],ecx
  413c66:	mov    ebp,0xa4bfeab4
  413c6b:	(bad)  
  413c6c:	mov    edx,0xd8950d7
  413c71:	sbb    ch,BYTE PTR [ebp+0x38cf1de6]
  413c77:	xor    bh,BYTE PTR [ebp-0x20463ad2]
  413c7d:	shl    BYTE PTR [esi+0x7c],1
  413c80:	dec    esp
  413c81:	out    dx,eax
  413c82:	int3   
  413c83:	cmc    
  413c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c85:	add    eax,0xdef6c459
  413c8a:	fs xor eax,ecx
  413c8d:	adc    bl,0xd1
  413c90:	test   eax,0x43c81143
  413c95:	pop    eax
  413c96:	loopne 0x413c9e
  413c98:	ror    DWORD PTR [eax+0x3],cl
  413c9b:	inc    ecx
  413c9c:	push   ecx
  413c9d:	xchg   DWORD PTR [esp+edx*8-0x23],esp
  413ca1:	push   esi
  413ca2:	outs   dx,BYTE PTR ds:[esi]
  413ca3:	jae    0x413cc7
  413ca5:	arpl   WORD PTR [eax-0x2c],si
  413ca8:	popa   
  413ca9:	fsubr  st(4),st
  413cab:	mov    eax,ds:0x8d80e8d9
  413cb0:	push   ds
  413cb1:	enter  0xfc4a,0xe5
  413cb5:	xlat   BYTE PTR ds:[ebx]
  413cb6:	mov    ch,0x67
  413cb8:	and    eax,0x1ce4d395
  413cbd:	dec    edx
  413cbe:	pop    edx
  413cbf:	or     dl,cl
  413cc1:	scas   eax,DWORD PTR es:[edi]
  413cc2:	xchg   ecx,eax
  413cc3:	dec    esp
  413cc4:	loope  0x413d30
  413cc6:	jne    0x413ceb
  413cc8:	loop   0x413c4c
  413cca:	sub    al,0x71
  413ccc:	loopne 0x413cf1
  413cce:	or     edi,DWORD PTR [edi+eax*4+0x28]
  413cd2:	ss push esp
  413cd4:	mov    WORD PTR [eax],?
  413cd6:	mov    al,0xa8
  413cd8:	mov    ch,0x3c
  413cda:	in     al,dx
  413cdb:	jae    0x413d58
  413cdd:	jmp    0x413cb9
  413cdf:	rol    edx,0xc0
  413ce2:	cmc    
  413ce3:	not    BYTE PTR [esi+0x2a]
  413ce6:	sub    DWORD PTR [edi-0x6b],0xffffffd4
  413cea:	shr    ebp,0x5c
  413ced:	sbb    esi,DWORD PTR [edi]
  413cef:	jb     0x413cc6
  413cf1:	clc    
  413cf2:	fbld   TBYTE PTR [ebx+0x4a]
  413cf5:	pop    ds
  413cf6:	in     al,dx
  413cf7:	in     al,0xa6
  413cf9:	and    bl,BYTE PTR [edx+eax*8-0x9ec9d9c]
  413d00:	sbb    cl,dl
  413d02:	sbb    cl,al
  413d04:	lahf   
  413d05:	jmp    0xcc38:0x9a8d2b4b
  413d0c:	in     eax,dx
  413d0d:	loope  0x413d0a
  413d0f:	test   eax,esi
  413d11:	jo     0x413d5c
  413d13:	mov    esi,0x2d83d995
  413d18:	or     al,0x97
  413d1a:	sub    DWORD PTR [edx],0xffffffc0
  413d1d:	sub    BYTE PTR [esi],ah
  413d1f:	sahf   
  413d20:	inc    ecx
  413d21:	push   ecx
  413d22:	and    DWORD PTR [ecx+ecx*2+0x5fc26269],edi
  413d29:	and    edi,DWORD PTR [esp+ecx*8-0xa]
  413d2d:	xor    al,0x69
  413d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d30:	cmp    eax,0x1c9a75d8
  413d35:	push   edx
  413d36:	jg     0x413d09
  413d38:	leave  
  413d39:	out    0x7,al
  413d3b:	push   ecx
  413d3c:	es jl  0x413d9d
  413d3f:	and    DWORD PTR [ebx+ebx*4],edx
  413d42:	inc    ebp
  413d43:	icebp  
  413d44:	in     eax,dx
  413d45:	scas   al,BYTE PTR es:[edi]
  413d46:	push   eax
  413d47:	inc    ecx
  413d48:	lods   eax,DWORD PTR ds:[esi]
  413d49:	outs   dx,DWORD PTR ds:[esi]
  413d4a:	into   
  413d4b:	ret    
  413d4c:	(bad)  
  413d4d:	mov    ch,0x6f
  413d4f:	push   0x6140e462
  413d54:	push   0x6f26b659
  413d59:	adc    al,BYTE PTR [eax]
  413d5b:	sbb    al,0xcf
  413d5d:	pop    esp
  413d5e:	outs   dx,DWORD PTR ds:[esi]
  413d5f:	xchg   ebx,eax
  413d60:	js     0x413cfa
  413d62:	(bad)  
  413d63:	lods   eax,DWORD PTR ds:[esi]
  413d64:	dec    ebp
  413d65:	xchg   BYTE PTR [eax+0x3a],cl
  413d68:	xchg   edx,eax
  413d69:	ins    DWORD PTR es:[edi],dx
  413d6a:	fnstcw WORD PTR [eax+0x57b648e]
  413d70:	cdq    
  413d71:	jb     0x413cf8
  413d73:	jns    0x413d92
  413d75:	nop
  413d76:	daa    
  413d77:	push   0x7f
  413d79:	xor    DWORD PTR [edi+0x56],ebx
  413d7c:	scas   eax,DWORD PTR es:[edi]
  413d7d:	sub    BYTE PTR [ebx+edi*1],dh
  413d80:	sbb    eax,0xa71ba3ea
  413d85:	in     eax,0xf0
  413d87:	sbb    ah,cl
  413d89:	stos   DWORD PTR es:[edi],eax
  413d8a:	retf   0xad9c
  413d8d:	out    dx,al
  413d8e:	push   ebx
  413d8f:	aaa    
  413d90:	fld    DWORD PTR [esi]
  413d92:	jle    0x413dd4
  413d94:	icebp  
  413d95:	pop    ebp
  413d96:	outs   dx,DWORD PTR ds:[esi]
  413d97:	loope  0x413df9
  413d99:	sbb    eax,0xe3387f66
  413d9e:	sub    dl,BYTE PTR [esi+0x6226f50b]
  413da4:	inc    ebp
  413da5:	xchg   esi,eax
  413da6:	cld    
  413da7:	cli    
  413da8:	int3   
  413da9:	add    DWORD PTR [edi-0x10],esp
  413dac:	cmp    esi,ebp
  413dae:	mov    ds:0xcfcd377,eax
  413db3:	xchg   DWORD PTR [edx+0x5b0d4786],ebp
  413db9:	outs   dx,BYTE PTR ds:[esi]
  413dba:	mov    bl,0x33
  413dbc:	jne    0x413dc4
  413dbe:	adc    eax,0xdd3e92ea
  413dc3:	jbe    0x413d87
  413dc5:	xchg   edx,eax
  413dc6:	mov    cl,0xf0
  413dc8:	fdivr  st(4),st
  413dca:	popa   
  413dcb:	loope  0x413d82
  413dcd:	test   eax,0x8a1336e6
  413dd2:	push   eax
  413dd3:	lahf   
  413dd4:	mov    ds:0x53d956ce,eax
  413dd9:	mov    esi,0x6d8b3cc9
  413dde:	mov    al,BYTE PTR [esi-0x614792d8]
  413de4:	es inc ebp
  413de6:	jmp    0x349e:0xada1279d
  413ded:	dec    esi
  413dee:	xchg   ebp,eax
  413def:	push   ecx
  413df0:	or     al,BYTE PTR [ebx+0x38]
  413df3:	sub    DWORD PTR [eax-0x592166f9],0xffffff85
  413dfa:	or     eax,0x83997b31
  413dff:	sbb    eax,0x94ebad1e
  413e04:	mov    DWORD PTR [esi+ebx*4-0x2],esi
  413e08:	mov    al,0x20
  413e0a:	mov    dh,0x6e
  413e0c:	fidivr DWORD PTR [esi]
  413e0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e0f:	xchg   BYTE PTR [ecx],ah
  413e11:	scas   eax,DWORD PTR es:[edi]
  413e12:	dec    esi
  413e13:	and    eax,esp
  413e15:	cld    
  413e16:	push   ss
  413e17:	(bad)  
  413e19:	cli    
  413e1a:	mov    ah,0xbb
  413e1c:	not    BYTE PTR [edi]
  413e1e:	stos   DWORD PTR es:[edi],eax
  413e1f:	fild   QWORD PTR [ebx+ecx*2+0x6a]
  413e23:	push   cs
  413e24:	add    al,0x77
  413e26:	shr    DWORD PTR [ecx-0x43a58f8c],0x92
  413e2d:	mov    esp,0x7e00fd36
  413e32:	je     0x413e7e
  413e34:	adc    BYTE PTR [eax+0x411c04f3],bl
  413e3a:	xchg   ecx,eax
  413e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e3c:	shr    BYTE PTR [ebx+0x7d815c8e],0x27
  413e43:	pop    ebx
  413e44:	sahf   
  413e45:	or     eax,0x12dcdfa0
  413e4a:	push   ss
  413e4b:	inc    edx
  413e4c:	or     dl,BYTE PTR [esi-0x7c]
  413e4f:	mov    es,WORD PTR [edi+eiz*1]
  413e52:	sub    DWORD PTR [eax],ecx
  413e54:	std    
  413e55:	mul    eax
  413e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e58:	cs jno 0x413eba
  413e5b:	(bad)  
  413e5c:	jle    0x413e9e
  413e5e:	adc    eax,ebp
  413e60:	push   ecx
  413e61:	test   DWORD PTR [eax-0x3470c021],eax
  413e67:	add    dh,ch
  413e69:	jl     0x413eb4
  413e6b:	fmul   st,st(7)
  413e6d:	dec    edx
  413e6e:	pop    ecx
  413e6f:	cmp    BYTE PTR [edi+esi*2+0x666c4fd0],bl
  413e76:	inc    ebp
  413e77:	not    BYTE PTR [eax-0xb]
  413e7a:	xor    bh,BYTE PTR ds:0xae6f41c0
  413e80:	pop    ebx
  413e81:	repnz dec ecx
  413e83:	cmp    BYTE PTR [ecx-0x6c],dh
  413e86:	retf   0xe32c
  413e89:	adc    ebx,0x3d1f19c0
  413e8f:	xor    ebp,ebx
  413e91:	jne    0x413e46
  413e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e94:	xor    esi,esp
  413e96:	jle    0x413e3a
  413e98:	fs (bad) 
  413e9b:	icebp  
  413e9c:	xchg   esp,eax
  413e9d:	mov    dh,bl
  413e9f:	mov    bh,0xce
  413ea1:	push   esp
  413ea2:	outs   dx,BYTE PTR ds:[esi]
  413ea3:	iret   
  413ea4:	mov    bl,BYTE PTR [ecx-0x56]
  413ea7:	mov    ds:0xabb49f0f,al
  413eac:	aam    0xa
  413eae:	inc    edi
  413eaf:	dec    edi
  413eb0:	or     eax,0xe6fcc2d4
  413eb5:	ficom  WORD PTR [edi]
  413eb7:	lods   al,BYTE PTR ds:[esi]
  413eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eb9:	inc    ecx
  413eba:	test   eax,0xca8d5b6f
  413ebf:	sbb    ebx,esi
  413ec1:	ss mov bh,0x84
  413ec4:	jecxz  0x413ee9
  413ec6:	sbb    eax,0xed8524a8
  413ecb:	xchg   DWORD PTR [ebx],edx
  413ecd:	add    ecx,0xffffffcc
  413ed0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ed1:	xchg   edx,eax
  413ed2:	loopne 0x413e98
  413ed4:	xchg   esi,eax
  413ed5:	xchg   esi,eax
  413ed6:	pop    edx
  413ed7:	pop    ebp
  413ed8:	adc    esp,eax
  413eda:	inc    edi
  413edb:	sahf   
  413edc:	adc    eax,0x7fd2cff5
  413ee1:	mov    esp,0x31a247bc
  413ee6:	mov    edx,DWORD PTR [ebp-0x14]
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR [esi-0x4aa011a0],ch
  413f29:	jae    0x413fa5
  413f2b:	jp     0x413f2e
  413f2d:	pop    edi
  413f2e:	jp     0x413faa
  413f30:	and    ah,BYTE PTR [ebx+eax*8-0x4]
  413f34:	add    eax,DWORD PTR [eax+0x4e]
  413f37:	enter  0x89e1,0x7a
  413f3b:	and    DWORD PTR [esi+0x2a],ebp
  413f3e:	and    cl,BYTE PTR [edx]
  413f40:	std    
  413f41:	pop    ss
  413f42:	jb     0x413f7e
  413f44:	clc    
  413f45:	xlat   BYTE PTR ds:[ebx]
  413f46:	sahf   
  413f47:	sbb    DWORD PTR [ecx],edx
  413f49:	pop    eax
  413f4a:	icebp  
  413f4b:	pop    ebp
  413f4c:	pop    esp
  413f4d:	mov    dh,0x87
  413f4f:	test   BYTE PTR [ebx+0x1b6157f4],dl
  413f55:	cwde   
  413f56:	jno    0x413f12
  413f58:	or     ch,BYTE PTR [edi-0x3f]
  413f5b:	jle    0x413f3c
  413f5d:	inc    ebx
  413f5e:	mov    esi,0xa7aa3e08
  413f63:	(bad)  
  413f65:	shl    BYTE PTR [esi+0x30],cl
  413f68:	adc    al,0xd6
  413f6a:	mov    dh,0x66
  413f6c:	or     al,0x6d
  413f6e:	js     0x413f7b
  413f70:	push   ebx
  413f71:	rcr    DWORD PTR [edi+0x3047ab35],1
  413f77:	pop    edx
  413f78:	push   eax
  413f79:	into   
  413f7a:	imul   eax,DWORD PTR [edx+edi*8],0x47
  413f7e:	jl     0x413f4d
  413f80:	jae    0x413f23
  413f82:	dec    ecx
  413f83:	(bad)  
  413f84:	sbb    eax,0x8be91f8b
  413f89:	jecxz  0x413f73
  413f8b:	loop   0x413f1e
  413f8d:	add    al,0xdc
  413f8f:	xlat   BYTE PTR ds:[ebx]
  413f90:	dec    ebp
  413f91:	sbb    BYTE PTR [eax+0x28],bh
  413f94:	shl    DWORD PTR [esi],cl
  413f96:	dec    ebx
  413f97:	cmp    BYTE PTR [esi+edi*4+0x21b4802e],0x63
  413f9f:	clc    
  413fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa1:	push   ebx
  413fa2:	test   DWORD PTR [edi-0x22],esp
  413fa5:	mov    bh,0xff
  413fa7:	loop   0x414005
  413fa9:	push   ss
  413faa:	rcr    BYTE PTR [edx],cl
  413fac:	call   0xb06e51b
  413fb1:	call   0x7b1e:0xdcc406d6
  413fb8:	dec    eax
  413fb9:	sbb    eax,0xa3ce72cd
  413fbe:	scas   eax,DWORD PTR es:[edi]
  413fbf:	jp     0x414005
  413fc1:	jecxz  0x414012
  413fc3:	jnp    0x413fb7
  413fc5:	(bad)  
  413fc6:	jbe    0x414018
  413fc8:	push   0xd62ffa90
  413fcd:	jns    0x413fba
  413fcf:	stos   BYTE PTR es:[edi],al
  413fd0:	scas   eax,DWORD PTR es:[edi]
  413fd1:	xchg   edi,eax
  413fd2:	mov    ebx,0xb8b7fef7
  413fd7:	push   esi
  413fd8:	dec    ecx
  413fd9:	idiv   edx
  413fdb:	push   ebp
  413fdc:	js     0x41404e
  413fde:	pop    es
  413fdf:	gs ds inc cx
  413fe3:	push   eax
  413fe4:	lahf   
  413fe5:	or     al,0x74
  413fe7:	mov    bh,0xe
  413fe9:	test   BYTE PTR [edi],dl
  413feb:	dec    edx
  413fec:	or     dh,0x75
  413fef:	in     al,0xae
  413ff1:	mov    cl,0xfb
  413ff3:	clc    
  413ff4:	jl     0x413fa0
  413ff6:	inc    ebx
  413ff7:	inc    eax
  413ff8:	loop   0x414035
  413ffa:	or     eax,0xae9a382b
  413fff:	add    bl,ch
  414001:	loope  0x41401a
  414003:	dec    esp
  414004:	(bad)  
  414005:	cmp    eax,0x67640511
  41400a:	loopne 0x414079
  41400c:	not    DWORD PTR [esi+eax*1+0x1172e143]
  414013:	mov    ebp,0x862ab5ff
  414018:	lods   eax,DWORD PTR ds:[esi]
  414019:	out    dx,al
  41401a:	or     BYTE PTR [edx],0x79
  41401d:	xor    DWORD PTR [ecx],eax
  41401f:	mov    cl,0x52
  414021:	sub    ch,cl
  414023:	jae    0x414008
  414025:	retf   0xbd5c
  414028:	lahf   
  414029:	fsubr  DWORD PTR [eax+ebp*2-0x707a48c0]
  414030:	pop    es
  414031:	fadd   QWORD PTR [ecx]
  414033:	dec    eax
  414034:	lea    esp,[edx+0x3889c395]
  41403a:	jb     0x413ffa
  41403c:	aaa    
  41403d:	and    DWORD PTR [ebx+eiz*4],esi
  414040:	adc    bh,BYTE PTR [ecx+0x24]
  414043:	in     al,0xae
  414045:	jno    0x414052
  414047:	mov    ds:0xa42e7c2f,al
  41404c:	dec    esp
  41404d:	sahf   
  41404e:	dec    edi
  41404f:	add    ah,dl
  414051:	imul   ebx,DWORD PTR [esi-0x2a7e53a2],0xdb3ab073
  41405b:	xchg   esi,eax
  41405c:	into   
  41405d:	mov    ah,dl
  41405f:	(bad)  
  414060:	mov    esi,0xe6a4f14f
  414065:	xchg   edi,eax
  414066:	and    ebx,DWORD PTR [esi-0x22]
  414069:	sbb    esp,esp
  41406b:	push   esi
  41406c:	jne    0x414016
  41406e:	add    ch,cl
  414070:	mov    ah,0x63
  414072:	std    
  414073:	sub    bl,BYTE PTR [ebx+0x1d63778]
  414079:	sbb    DWORD PTR [ebx+esi*8+0x4488e9aa],esp
  414080:	xchg   ebp,eax
  414081:	aas    
  414082:	fistp  DWORD PTR [ebp-0x320c98c2]
  414088:	rol    DWORD PTR [ebp-0x1ba6a047],cl
  41408e:	lock cwde 
  414090:	sbb    eax,0x4a1602e9
  414095:	out    0x95,eax
  414097:	mov    al,BYTE PTR [ecx+0x57]
  41409a:	sbb    bl,BYTE PTR [ecx]
  41409c:	or     eax,0xae50270b
  4140a1:	pop    ebx
  4140a2:	mov    esi,DWORD PTR [ebx]
  4140a4:	sbb    edi,DWORD PTR [edx]
  4140a6:	(bad)  
  4140a7:	(bad)  
  4140a8:	ficom  WORD PTR [eax]
  4140aa:	cmp    bh,ah
  4140ac:	les    ecx,FWORD PTR [edi-0x42c930bb]
  4140b2:	(bad)  
  4140b3:	mov    al,0x2b
  4140b5:	xor    al,0xf6
  4140b7:	inc    ebp
  4140b8:	mov    ah,BYTE PTR [ecx+0x7200a4f7]
  4140be:	bound  eax,QWORD PTR [eax-0x367814dd]
  4140c4:	test   DWORD PTR [ebp+edi*4-0x7e296198],esi
  4140cb:	push   es
  4140cc:	sbb    al,0xa9
  4140ce:	add    al,0xa8
  4140d0:	test   al,0x86
  4140d2:	popa   
  4140d3:	out    dx,eax
  4140d4:	cmp    edx,esi
  4140d6:	test   ax,0xd0fe
  4140da:	call   0xe728:0x2a7f81c
  4140e1:	pop    ss
  4140e2:	shl    BYTE PTR [ebx+0x66],cl
  4140e5:	cmp    dh,BYTE PTR [ecx-0x47]
  4140e8:	mov    bh,0x86
  4140ea:	add    BYTE PTR [eax-0x55fd2411],ah
  4140f0:	mov    esp,0x80582c2c
  4140f5:	outs   dx,DWORD PTR ds:[esi]
  4140f6:	add    eax,0x9d9d37
  4140fb:	loopne 0x4140a6
  4140fd:	xor    edi,DWORD PTR [ecx-0x2e]
  414100:	pmuludq mm1,QWORD PTR [esi]
  414103:	inc    esp
  414104:	push   edi
  414105:	cdq    
  414106:	enter  0xfe45,0xa9
  41410a:	rol    BYTE PTR [esi+0x5baa1972],0x9d
  414111:	or     ebp,edi
  414113:	retf   0x9257
  414116:	stc    
  414117:	jmp    0x414132
  414119:	xchg   edi,eax
  41411a:	inc    esi
  41411b:	cdq    
  41411c:	xor    dh,bl
  41411e:	adc    eax,0xfb27e18d
  414123:	rcr    esi,cl
  414125:	gs sbb al,0x14
  414128:	and    BYTE PTR [ebp+0x787e43a3],ch
  41412e:	pushf  
  41412f:	and    BYTE PTR [ebx],ch
  414131:	in     al,0x66
  414133:	repnz shr DWORD PTR [ebx+0x45],0x32
  414138:	mov    ds:0xdede4d87,eax
  41413d:	dec    ecx
  41413e:	mov    cl,0xe4
  414140:	repz jb 0x414190
  414143:	(bad)  
  414144:	sub    ebp,DWORD PTR [ecx]
  414146:	div    BYTE PTR [ecx-0x3d2ae686]
  41414c:	sbb    esp,DWORD PTR [ebx-0x287fc2eb]
  414152:	push   ecx
  414153:	imul   edx,DWORD PTR [eax-0x5cdb7b82],0xffffffc2
  41415a:	fwait
  41415b:	push   es
  41415c:	jp     0x4140ed
  41415e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41415f:	push   es
  414160:	mov    eax,0x1fe7cccd
  414165:	out    0xd9,eax
  414167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414168:	xchg   edx,eax
  414169:	pop    ebp
  41416a:	push   eax
  41416b:	mov    ebp,0xf4d8f369
  414170:	das    
  414171:	push   eax
  414172:	push   ds
  414173:	mov    ebp,eax
  414175:	(bad)  
  414176:	aam    0x1d
  414178:	mov    bl,0xf6
  41417a:	mov    bh,ah
  41417c:	mov    WORD PTR [ebp-0xf],es
  41417f:	xchg   esp,eax
  414180:	mov    WORD PTR [esi+0x19db4f63],cs
  414186:	pop    ebx
  414187:	mov    es,WORD PTR [ecx]
  414189:	mov    ?,ebx
  41418b:	xor    DWORD PTR [eax],ebp
  41418d:	lods   al,BYTE PTR ds:[esi]
  41418e:	out    0xe2,al
  414190:	sbb    ecx,DWORD PTR [edx+ebx*8-0x23199759]
  414197:	inc    ebx
  414198:	test   BYTE PTR [edi-0x563fdae4],ah
  41419e:	ror    DWORD PTR [ebx+0x44],0xf0
  4141a2:	pop    ecx
  4141a3:	js     0x414188
  4141a5:	push   ebp
  4141a6:	cmp    eax,0xb44039d4
  4141ab:	pop    ss
  4141ac:	clc    
  4141ad:	test   DWORD PTR [esi-0x18],eax
  4141b0:	cdq    
  4141b1:	mov    eax,ds:0x6d649c55
  4141b6:	lock xor BYTE PTR [eax+0x3c],cl
  4141ba:	cmp    ah,ch
  4141bc:	call   0xe9c0c467
  4141c1:	hlt    
  4141c2:	xor    eax,0xfe634096
  4141c7:	retf   
  4141c8:	mov    db2,ebx
  4141cb:	inc    eax
  4141cc:	inc    esp
  4141cd:	cmp    esi,DWORD PTR [edi-0x66]
  4141d0:	jmp    0xde64d2a1
  4141d5:	shl    DWORD PTR [eax-0x65],0x1a
  4141d9:	rol    DWORD PTR [edi-0x9763954],0x49
  4141e0:	dec    ecx
  4141e1:	lock xchg esp,eax
  4141e3:	mov    WORD PTR ss:[ebx],ss
  4141e6:	pop    ds
  4141e7:	mov    edx,0xb0d633e0
  4141ec:	and    eax,DWORD PTR [ebx+0x761f6754]
  4141f2:	test   eax,0xfe82ee62
  4141f7:	sbb    DWORD PTR [esi+0x902a353],esp
  4141fd:	(bad)  
  4141fe:	mov    al,0x2a
  414200:	and    edi,DWORD PTR [edi-0x5c]
  414203:	jle    0x41426f
  414205:	aad    0xf6
  414207:	xor    DWORD PTR [eax],ecx
  414209:	cld    
  41420a:	fsubrp st(2),st
  41420c:	pop    eax
  41420d:	hlt    
  41420e:	jmp    0x414261
  414210:	ins    BYTE PTR es:[edi],dx
  414211:	push   ecx
  414212:	fst    st(3)
  414214:	cmp    dl,BYTE PTR [ecx+0x53]
  414217:	jge    0x414231
  414219:	jae    0x41425f
  41421b:	adc    eax,0xa193d8c4
  414220:	mov    esp,0x96fe83f6
  414225:	je     0x4141b7
  414227:	sub    ebp,DWORD PTR [ebp+0x1bec01db]
  41422d:	sbb    eax,0x2b90ccbb
  414232:	into   
  414233:	outs   dx,BYTE PTR ds:[esi]
  414234:	and    BYTE PTR [edx],bh
  414236:	pop    esp
  414237:	and    al,0xfd
  414239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41423a:	retf   
  41423b:	(bad)  
  41423c:	scas   eax,DWORD PTR es:[edi]
  41423d:	dec    edx
  41423e:	les    esp,FWORD PTR [eax-0x28]
  414241:	mov    eax,0x378e5e4
  414246:	pop    ecx
  414247:	ja     0x4142ad
  414249:	push   cs
  41424a:	push   esp
  41424b:	cmp    al,0xb9
  41424d:	jno    0x41424a
  41424f:	cmovle ebx,DWORD PTR [edi+0x45294c46]
  414256:	in     al,dx
  414257:	dec    ebp
  414258:	fs int3 
  41425a:	les    eax,FWORD PTR [ebx]
  41425c:	iret   
  41425d:	pop    edx
  41425e:	jae    0x414246
  414260:	dec    edx
  414261:	fmulp  st(6),st
  414263:	mov    ah,0x2b
  414265:	push   eax
  414266:	cli    
  414267:	sub    eax,DWORD PTR [eax-0xbc84e29]
  41426d:	retf   
  41426e:	mov    ch,0xbd
  414270:	(bad)  
  414271:	je     0x4142ed
  414273:	pop    edi
  414274:	lea    esi,[esi]
  414276:	in     eax,0x7e
  414278:	jmp    0x414235
  41427a:	mov    esp,0x66af3538
  41427f:	xlat   BYTE PTR ds:[ebx]
  414280:	mov    eax,ds:0x14a0a89c
  414285:	fld    st(0)
  414287:	cdq    
  414288:	(bad)  
  414289:	test   bh,0x59
  41428c:	rol    bh,1
  41428e:	jmp    0x4142da
  414290:	mov    dh,0x91
  414292:	sbb    al,0x80
  414294:	push   ds
  414295:	or     esp,0xfffffffe
  414298:	mov    ebp,0x4c87ea52
  41429d:	xchg   edx,eax
  41429e:	xchg   ebp,eax
  41429f:	mov    bh,0xb9
  4142a1:	and    esp,esp
  4142a3:	(bad)  
  4142a4:	fimul  DWORD PTR [esi-0x62]
  4142a7:	or     esi,eax
  4142a9:	or     al,0x9c
  4142ab:	pop    ss
  4142ac:	rol    DWORD PTR [eax-0x1d8c7688],0x99
  4142b3:	lods   al,BYTE PTR ds:[esi]
  4142b4:	push   edx
  4142b5:	pop    edx
  4142b6:	lods   al,BYTE PTR ds:[esi]
  4142b7:	jg     0x4142dc
  4142b9:	sub    BYTE PTR [ebp-0x4eee27b],al
  4142bf:	mov    al,0x74
  4142c1:	in     al,0x8a
  4142c3:	mov    cl,0x22
  4142c5:	cmp    bh,dl
  4142c7:	mov    edx,0x8a5ff88e
  4142cc:	fnstenv [edi]
  4142ce:	adc    al,0xb1
  4142d0:	and    edx,DWORD PTR [esi+0x4db0f9a0]
  4142d6:	shl    DWORD PTR [edi-0x364adc9d],0x6
  4142dd:	sbb    BYTE PTR [ebp-0x231c0f1d],dl
  4142e3:	add    al,0x83
  4142e5:	rcr    esp,0xee
  4142e8:	jl     0x414274
  4142ea:	adc    esi,esp
  4142ec:	cmp    DWORD PTR [eax],edi
  4142ee:	test   al,0xc6
  4142f0:	int    0x3b
  4142f2:	(bad)  
  4142f4:	xor    al,0x5
  4142f6:	mov    ?,WORD PTR [edi]
  4142f8:	xchg   esi,eax
  4142f9:	xchg   DWORD PTR [ecx+eax*8],ebx
  4142fc:	(bad)  
  4142fe:	and    al,0x13
  414300:	and    eax,0xb06f488c
  414305:	sub    DWORD PTR ds:0x481d46e,ecx
  41430b:	(bad)
  41430e:	aad    0xb9
  414310:	das    
  414311:	int    0x4d
  414313:	aas    
  414314:	inc    esp
  414315:	xchg   edx,eax
  414316:	jecxz  0x4142cf
  414318:	jle    0x4142be
  41431a:	cdq    
  41431b:	mov    ebp,esp
  41431d:	lea    ebx,[ebp-0x2108a5ce]
  414323:	test   DWORD PTR [ecx+0x1b8cc1c0],edi
  414329:	fild   DWORD PTR [ebx+esi*8-0x206a2d72]
  414330:	rcl    DWORD PTR [ecx],cl
  414332:	mov    eax,ss:0x229e5aae
  414338:	cmp    cl,BYTE PTR [ebx+0x1b3eb088]
  41433e:	das    
  41433f:	test   DWORD PTR [ebx-0x57],ecx
  414342:	test   DWORD PTR [edi+0x48566cee],esi
  414348:	dec    edi
  414349:	in     eax,dx
  41434a:	and    eax,0xedd19507
  41434f:	add    al,BYTE PTR [ebx]
  414351:	and    ch,dh
  414353:	mov    dh,0xd7
  414355:	mov    bh,0xf5
  414357:	fidiv  DWORD PTR [ecx]
  414359:	fadd   QWORD PTR [eax]
  41435b:	jne    0x414354
  41435d:	test   al,0x75
  41435f:	or     BYTE PTR [ebx-0x62cd9a87],dh
  414365:	outs   dx,BYTE PTR ds:[esi]
  414366:	call   0xeb0a:0xa36e68a
  41436d:	cld    
  41436e:	push   edx
  41436f:	and    ecx,DWORD PTR ds:0x435643a4
  414375:	sub    eax,0xcc74ecdf
  41437a:	push   esp
  41437b:	xchg   ebx,eax
  41437c:	or     eax,DWORD PTR [ebp+0x36]
  41437f:	or     BYTE PTR [ebp-0x68aedba5],ch
  414385:	neg    BYTE PTR [ecx-0x118e398f]
  41438b:	cwde   
  41438c:	mov    esp,0xb9872cea
  414391:	lea    edx,[ebx-0x4099cd0b]
  414397:	add    edi,ebx
  414399:	mov    gs,WORD PTR [eax-0x1a907b6e]
  41439f:	adc    cl,bh
  4143a1:	push   cs
  4143a2:	pop    eax
  4143a3:	pop    edi
  4143a4:	or     cl,BYTE PTR [edx+0x51]
  4143a7:	mov    edi,0xb700e925
  4143ac:	jne    0x414362
  4143ae:	mov    ecx,0xef1c593
  4143b3:	scas   al,BYTE PTR es:[edi]
  4143b4:	mov    ds:0x6f433764,eax
  4143b9:	push   ebx
  4143ba:	and    eax,0x4fa7f7f8
  4143bf:	sahf   
  4143c0:	lods   eax,DWORD PTR ds:[esi]
  4143c1:	push   esi
  4143c2:	xor    al,0x2c
  4143c4:	and    BYTE PTR [edx+0x51c6d024],ah
  4143ca:	jecxz  0x4143ac
  4143cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143cd:	fisub  DWORD PTR [eax+0x1d246a1a]
  4143d3:	(bad)  
  4143d4:	stc    
  4143d5:	jg     0x41436e
  4143d7:	xor    al,cl
  4143d9:	xchg   ecx,eax
  4143da:	mov    cl,0x3a
  4143dc:	cdq    
  4143dd:	retf   0x7cb0
  4143e0:	adc    cl,BYTE PTR [esi-0x1baeecec]
  4143e6:	loope  0x414419
  4143e8:	xchg   esi,eax
  4143e9:	and    ebx,DWORD PTR [ebp+0x44a781fe]
  4143ef:	scas   eax,DWORD PTR es:[edi]
  4143f0:	xchg   edx,eax
  4143f1:	mov    dl,BYTE PTR [eax+0x405d54ab]
  4143f7:	cmp    BYTE PTR [edi+0x26],cl
  4143fa:	into   
  4143fb:	push   0x37c59123
  414400:	repz inc ebp
  414402:	pop    edx
  414403:	mul    DWORD PTR [ecx]
  414405:	imul   ecx,ecx,0x7f
  414408:	mov    ebp,0x37b21ec1
  41440d:	shr    BYTE PTR [esi+0x4d83f4da],cl
  414413:	sbb    DWORD PTR [ecx-0x43d1467c],ebp
  414419:	lods   al,BYTE PTR ds:[esi]
  41441a:	push   ecx
  41441b:	mov    edi,0xa637a76f
  414420:	mov    eax,ds:0x3991e7cc
  414425:	shl    BYTE PTR [ebx+0x4d],cl
  414428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414429:	xchg   ebx,eax
  41442a:	enter  0x7ddd,0x68
  41442e:	jne    0x4143eb
  414430:	mov    al,ds:0x5d292d08
  414435:	test   esp,edi
  414437:	sub    al,0xc7
  414439:	mov    esp,0x8ea23aa2
  41443e:	add    BYTE PTR ds:0x291d9332,0x46
  414445:	jl     0x4144b8
  414447:	inc    ecx
  414448:	sub    al,0x29
  41444a:	repnz push ds
  41444c:	les    ebx,FWORD PTR [edi+0x1be03c4c]
  414452:	mov    eax,ds:0x4dc6b30c
  414457:	adc    al,0x7
  414459:	aas    
  41445a:	nop
  41445b:	aam    0x37
  41445d:	or     BYTE PTR [ecx],ah
  41445f:	rcl    DWORD PTR [edx+0x19de8318],cl
  414465:	test   BYTE PTR [ebp+0x3],dh
  414468:	sbb    ebp,DWORD PTR [edx+0xf]
  41446b:	sub    DWORD PTR [eax-0x5567ee11],edx
  414471:	mov    ah,0x10
  414473:	inc    ebp
  414474:	inc    edx
  414475:	out    dx,al
  414476:	cwde   
  414477:	icebp  
  414478:	pusha  
  414479:	adc    esi,DWORD PTR [esi+0x33788acc]
  41447f:	fcomip st,st(1)
  414481:	sbb    al,0x43
  414483:	mov    al,0x26
  414485:	ficom  WORD PTR cs:[esi+0xf79f6ae]
  41448c:	pop    ss
  41448d:	addr16 in eax,dx
  41448f:	data16 test BYTE PTR [eax+0x42c0ed84],dh
  414496:	dec    edx
  414497:	inc    esi
  414498:	out    dx,eax
  414499:	jecxz  0x4144fa
  41449b:	push   0x43eebc9a
  4144a0:	fisub  WORD PTR [eax+0x2e]
  4144a3:	push   esp
  4144a4:	cmp    ebx,DWORD PTR [edi]
  4144a6:	sahf   
  4144a7:	jne    0x414454
  4144a9:	jnp    0x414473
  4144ab:	pop    ebp
  4144ac:	lea    ebp,[esi+0x22328de5]
  4144b2:	sbb    esi,ebx
  4144b4:	hlt    
  4144b5:	test   edi,0xf8e56df6
  4144bb:	inc    ebp
  4144bc:	push   ecx
  4144bd:	repz repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144c0:	lods   al,BYTE PTR ds:[esi]
  4144c1:	sbb    eax,0x2f6c9ad1
  4144c6:	and    dh,dl
  4144c8:	iret   
  4144c9:	pop    eax
  4144ca:	cmp    BYTE PTR [ecx+0x43508263],bh
  4144d0:	sub    al,cl
  4144d2:	lahf   
  4144d3:	push   ecx
  4144d4:	xor    eax,0xe7ffcd96
  4144d9:	mov    ds:0x3da64d13,al
  4144de:	or     eax,0x40da8958
  4144e3:	or     edx,DWORD PTR [edx]
  4144e5:	xor    eax,0xf72f7ba5
  4144ea:	push   edx
  4144eb:	sbb    BYTE PTR [edi-0x50],dl
  4144ee:	ss mov esp,ecx
  4144f1:	aaa    
  4144f2:	sub    DWORD PTR [eax+ecx*4-0x1e2bc7bc],0x6ff9b475
  4144fd:	pop    ebp
  4144fe:	pop    edi
  4144ff:	ds mov al,0xdd
  414502:	jle    0x4144b3
  414504:	lahf   
  414505:	mov    DWORD PTR [esi+ecx*8],edi
  414508:	lds    edi,FWORD PTR [ecx+0x5450235f]
  41450e:	push   cs
  41450f:	in     al,0x71
  414511:	push   0x12d9ddfa
  414516:	hlt    
  414517:	add    esp,DWORD PTR [ebp+0x77]
  41451a:	lahf   
  41451b:	push   0x72
  41451d:	pop    ebp
  41451e:	popa   
  41451f:	pop    eax
  414520:	into   
  414521:	push   eax
  414522:	add    BYTE PTR [edi],ch
  414524:	mov    al,ds:0x6679d5ba
  414529:	cs dec esp
  41452b:	ins    BYTE PTR es:[edi],dx
  41452c:	fadd   DWORD PTR [ebx+0x62e487b1]
  414532:	sbb    eax,0xaa68f0e4
  414537:	hlt    
  414538:	ror    DWORD PTR [ecx+0x11e6f18],0x70
  41453f:	xchg   ebp,eax
  414540:	xchg   ebx,eax
  414541:	pop    ebx
  414542:	popf   
  414543:	add    cl,ah
  414545:	shr    cl,cl
  414547:	das    
  414548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414549:	in     al,dx
  41454a:	call   0xa6457517
  41454f:	dec    edi
  414550:	xchg   DWORD PTR [eax],esi
  414552:	sub    bl,BYTE PTR [edx]
  414554:	imul   eax,ebx,0xf4e6cb32
  41455a:	rol    DWORD PTR [ebx],0x5c
  41455d:	ror    DWORD PTR [eax+0x62bef001],cl
  414563:	xor    eax,ebp
  414565:	sub    DWORD PTR [ecx],esi
  414567:	pop    edi
  414568:	push   eax
  414569:	jmp    0x177a1103
  41456e:	retf   
  41456f:	add    eax,DWORD PTR [ecx+0xa]
  414572:	icebp  
  414573:	jmp    0xb242a6e0
  414578:	scas   al,BYTE PTR es:[edi]
  414579:	fidiv  WORD PTR [edx+edi*2]
  41457c:	clc    
  41457d:	je     0x41459f
  41457f:	or     al,ch
  414581:	inc    ecx
  414582:	rol    DWORD PTR [eax],0x2e
  414585:	cmp    DWORD PTR [eax],ebp
  414587:	popf   
  414588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414589:	jae    0x4145ab
  41458b:	xor    DWORD PTR [eax],0xe5e7c23e
  414591:	pop    edi
  414592:	or     eax,0x20ceef7e
  414597:	jle    0x414541
  414599:	adc    DWORD PTR [ebx+0x3c],0xbdf0a327
  4145a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a1:	out    dx,al
  4145a2:	mov    ah,0xb2
  4145a4:	sub    eax,0xd4fd195e
  4145a9:	(bad)  
  4145aa:	in     al,dx
  4145ab:	jae    0x4145fa
  4145ad:	mov    ds:0x6e5bcd2a,al
  4145b2:	push   ss
  4145b3:	(bad)  
  4145b4:	jmp    0x7268f346
  4145b9:	test   ebx,esi
  4145bb:	xchg   ebx,eax
  4145bc:	sbb    edx,DWORD PTR [edi-0x391c3b36]
  4145c2:	jg     0x4145e4
  4145c4:	popa   
  4145c5:	fwait
  4145c6:	lods   eax,DWORD PTR ds:[esi]
  4145c7:	call   0xecee:0xbde3e76c
  4145ce:	mov    ebp,DWORD PTR [ebx-0x4dc3a387]
  4145d4:	cdq    
  4145d5:	sub    BYTE PTR [ebp-0x56],ch
  4145d8:	jns    0x414631
  4145da:	jge    0x4145ca
  4145dc:	push   0x25b7709
  4145e1:	add    eax,0x569ca4ab
  4145e6:	xchg   ecx,eax
  4145e7:	pop    edx
  4145e8:	pop    es
  4145e9:	sbb    eax,0x543d2de3
  4145ee:	leave  
  4145ef:	cmp    DWORD PTR [esp+eiz*8-0x23efaf23],edi
  4145f6:	ins    DWORD PTR es:[edi],dx
  4145f7:	adc    dh,BYTE PTR [edx-0x20]
  4145fa:	mov    dl,0x6e
  4145fc:	add    eax,0x38160b25
  414601:	cmp    DWORD PTR [ebp+0x254a39cc],edx
  414607:	and    eax,0x7c471385
  41460c:	lods   eax,DWORD PTR ds:[esi]
  41460d:	ret    0x33a2
  414610:	das    
  414611:	mov    ch,BYTE PTR ds:0x50b3
  414616:	(bad)  
  414617:	(bad)  
  414618:	add    ah,BYTE PTR [edi+0x18]
  41461b:	retf   0x8f9a
  41461e:	retf   0x6871
  414621:	cmp    BYTE PTR [ebx+0x12],cl
  414624:	xor    dh,BYTE PTR [eax-0x69]
  414627:	pop    es
  414628:	sub    ecx,edi
  41462a:	mul    BYTE PTR [esi+esi*4+0xe]
  41462e:	push   es
  41462f:	aam    0x24
  414631:	and    ecx,ebx
  414633:	mov    ebp,ebp
  414635:	gs int 0x8e
  414638:	cmpxchg BYTE PTR [ecx],ah
  41463b:	and    ebx,esi
  41463d:	test   DWORD PTR [ecx+0x2e1e989a],0x7f54701f
  414647:	mov    ds:0x37fa768e,al
  41464c:	lds    esi,FWORD PTR [edi+eiz*4+0x4cd51767]
  414653:	pop    edx
  414654:	pop    edi
  414655:	fdiv   QWORD PTR [ebp+0x41]
  414658:	mov    eax,ds:0x69116e0b
  41465d:	mov    cl,0x2b
  41465f:	dec    esi
  414660:	ins    DWORD PTR es:[edi],dx
  414661:	adc    DWORD PTR [ebx-0x3cf43c03],ebx
  414667:	push   es
  414668:	push   ecx
  414669:	mov    eax,ds:0x72564a31
  41466e:	jmp    0xeb6df924
  414673:	xchg   ebp,eax
  414674:	icebp  
  414675:	into   
  414676:	(bad)  [ebp+0x3ea57a7b]
  41467c:	fild   DWORD PTR [eax]
  41467e:	push   es
  41467f:	xchg   ecx,eax
  414680:	cdq    
  414681:	xor    dh,al
  414683:	push   eax
  414684:	ret    0x110f
  414687:	jbe    0x4146b7
  414689:	adc    eax,0xc0a1958a
  41468e:	and    eax,DWORD PTR [ecx]
  414690:	jmp    DWORD PTR [ebp-0x435e365]
  414696:	jb     0x41465c
  414698:	mov    ecx,0x3a5060ed
  41469d:	bound  ecx,QWORD PTR [eax]
  41469f:	mov    al,ds:0xf0182737
  4146a4:	xchg   edx,eax
  4146a5:	int    0xe8
  4146a7:	pop    edi
  4146a8:	pushf  
  4146a9:	jmp    0x63ecf687
  4146ae:	inc    edx
  4146af:	std    
  4146b0:	inc    edx
  4146b1:	pop    esi
  4146b2:	sub    DWORD PTR [ecx-0x158c6cea],esi
  4146b8:	mov    ebp,0xffd27a71
  4146bd:	popf   
  4146be:	(bad)  
  4146bf:	jne    0x41464e
  4146c1:	sbb    eax,0xcb9367c1
  4146c6:	sub    eax,0x4a6583ba
  4146cb:	inc    ebx
  4146cc:	stos   DWORD PTR es:[edi],eax
  4146cd:	test   DWORD PTR ds:0x47b48b1,esp
  4146d3:	push   cs
  4146d4:	inc    ebp
  4146d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146d6:	sub    eax,edx
  4146d8:	inc    esp
  4146d9:	push   ecx
  4146da:	scas   eax,DWORD PTR es:[edi]
  4146db:	pushf  
  4146dc:	jp     0x41474f
  4146de:	jbe    0x414705
  4146e0:	pop    ebx
  4146e1:	mov    bh,0x80
  4146e3:	or     bh,0xb9
  4146e6:	cmp    al,0x87
  4146e8:	cdq    
  4146e9:	push   esp
  4146ea:	xor    bh,BYTE PTR [ecx-0x1bb74446]
  4146f0:	sbb    eax,0x8c813d6a
  4146f5:	mov    bh,0xf
  4146f7:	cmp    dh,dh
  4146f9:	fist   WORD PTR [eax-0x1]
  4146fc:	inc    ebx
  4146fd:	leave  
  4146fe:	rcl    cl,cl
  414700:	retf   0xd64c
  414703:	ins    BYTE PTR es:[edi],dx
  414704:	fdiv   DWORD PTR [ebx+0x383cea83]
  41470a:	or     bl,cl
  41470c:	aad    0xd1
  41470e:	jl     0x414768
  414710:	pop    es
  414711:	(bad)  
  414712:	hlt    
  414713:	lds    esi,FWORD PTR [edi]
  414715:	xlat   BYTE PTR ds:[ebx]
  414716:	sbb    eax,0xaab10a9c
  41471b:	xlat   BYTE PTR ds:[ebx]
  41471c:	in     al,dx
  41471d:	addr16 pop es
  41471f:	data16 in al,0x72
  414722:	adc    dl,ah
  414724:	mov    DWORD PTR [edx],eax
  414726:	pop    eax
  414727:	cmp    eax,DWORD PTR [ecx-0x4054ff55]
  41472d:	(bad)  
  41472e:	repz bound esp,QWORD PTR [edx+ebx*2-0x17]
  414733:	mov    eax,ds:0xec6047fb
  414738:	(bad)  
  414739:	retf   0x3a7e
  41473c:	sub    BYTE PTR [esi-0x2d2d4586],cl
  414742:	ins    BYTE PTR es:[edi],dx
  414743:	push   ebp
  414744:	jne    0x414799
  414746:	gs or  eax,0x517023de
  41474c:	and    eax,0xcb24b276
  414751:	push   edi
  414752:	dec    esp
  414753:	mul    BYTE PTR [ebx-0x35ba4f8d]
  414759:	adc    eax,0x42ff9755
  41475e:	inc    ecx
  41475f:	xor    eax,DWORD PTR [edx]
  414761:	mov    ch,0x61
  414763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414764:	cmp    esp,DWORD PTR [esi+0x33]
  414767:	jmp    0x8ed5:0xa01a1d6f
  41476e:	dec    edi
  41476f:	jo     0x41476a
  414771:	fisubr WORD PTR [ebp+0x57015d5f]
  414777:	push   0xa207351c
  41477c:	cmp    cl,cl
  41477e:	je     0x4147a2
  414780:	lods   eax,DWORD PTR ds:[esi]
  414781:	lds    eax,FWORD PTR [edx]
  414783:	cdq    
  414784:	ins    BYTE PTR es:[edi],dx
  414785:	inc    ebp
  414786:	in     al,dx
  414787:	adc    ch,BYTE PTR [edx+0x12]
  41478a:	jo     0x414738
  41478c:	mov    bh,0xeb
  41478e:	jnp    0x414792
  414790:	mov    al,ds:0xb102c1e6
  414795:	jb     0x414719
  414797:	(bad)  
  414798:	stos   BYTE PTR es:[edi],al
  414799:	sub    bh,bl
  41479b:	sbb    DWORD PTR ds:0xc5a3853a,0x28
  4147a2:	and    eax,esi
  4147a4:	mov    bl,0x10
  4147a6:	dec    ebx
  4147a7:	mov    es,WORD PTR [eax-0x2d]
  4147aa:	dec    esi
  4147ab:	adc    eax,0xbec2f8c7
  4147b0:	out    0xb2,al
  4147b2:	pushf  
  4147b3:	outs   dx,BYTE PTR ds:[esi]
  4147b4:	(bad)  
  4147b5:	and    cl,BYTE PTR [ebx+0x70]
  4147b8:	not    BYTE PTR [ebx]
  4147ba:	pop    edx
  4147bb:	sub    DWORD PTR [eax],0xffffffa4
  4147be:	mov    ebx,0xd353684c
  4147c3:	sub    BYTE PTR [edi],0x77
  4147c6:	in     eax,0x46
  4147c8:	push   edi
  4147c9:	sub    cl,al
  4147cb:	pop    ecx
  4147cc:	rcr    BYTE PTR [edi-0x6e2e6db],1
  4147d2:	dec    esp
  4147d3:	test   al,0xd0
  4147d5:	popf   
  4147d6:	lods   al,BYTE PTR ds:[esi]
  4147d7:	cmc    
  4147d8:	ja     0x414806
  4147da:	clc    
  4147db:	enter  0xb6b5,0x33
  4147df:	fstp   DWORD PTR [ebp+eiz*2-0x32]
  4147e3:	cmp    eax,0xd6c7d320
  4147e8:	aaa    
  4147e9:	and    DWORD PTR [esi+0x22a20360],esi
  4147ef:	sbb    BYTE PTR [esi+0x65],ah
  4147f2:	sti    
  4147f3:	ins    DWORD PTR es:[edi],dx
  4147f4:	aas    
  4147f5:	data16 je 0x414798
  4147f8:	(bad)  
  4147f9:	pop    ebx
  4147fa:	mov    bh,0x31
  4147fc:	lds    edi,FWORD PTR [esp+esi*8+0x60e7106c]
  414803:	sub    al,BYTE PTR [edi-0x5e]
  414806:	push   edi
  414807:	jno    0x414812
  414809:	ja     0x4147d9
  41480b:	pop    ebp
  41480c:	and    eax,0xda81b8c5
  414811:	mov    eax,0x161a9e82
  414816:	ins    DWORD PTR es:[edi],dx
  414817:	popa   
  414818:	enter  0x27ed,0x8b
  41481c:	sub    eax,0x78a959f3
  414821:	cli    
  414822:	xchg   DWORD PTR [edi+esi*8],ebp
  414825:	clc    
  414826:	data16 xor bl,BYTE PTR [ebp-0x47a40db3]
  41482d:	addr16 dec esi
  41482f:	cmc    
  414830:	mov    ds:0xc277f62d,al
  414835:	shl    BYTE PTR [ecx-0x2],1
  414838:	out    0x2c,al
  41483a:	jb     0x414812
  41483c:	add    bh,BYTE PTR [esi-0x2a8bc2ae]
  414842:	mov    esi,DWORD PTR [ebx]
  414844:	aaa    
  414845:	ss jl  0x414838
  414848:	or     DWORD PTR ds:[ebp-0x33],0xffffffb0
  41484d:	int    0x3c
  41484f:	ins    DWORD PTR es:[edi],dx
  414850:	sbb    DWORD PTR [ebx-0xfacfc98],ebx
  414856:	or     bl,BYTE PTR [edi+edx*4+0x4a]
  41485a:	mov    eax,ds:0x5c1351e3
  41485f:	clc    
  414860:	call   ebx
  414862:	jg     0x414867
  414864:	adc    BYTE PTR [eax+0x65],bl
  414867:	add    ecx,DWORD PTR ds:0x2eba03e1
  41486d:	fimul  DWORD PTR ds:0xc1e9a154
  414873:	addr16 mov dh,0x32
  414876:	iret   
  414877:	add    DWORD PTR [edi-0x70],ecx
  41487a:	push   ss
  41487b:	cmp    ebx,DWORD PTR [eax-0x1a71d407]
  414881:	repnz (bad) 
  414883:	or     DWORD PTR [ebx-0x17],esp
  414886:	cld    
  414887:	xchg   esi,eax
  414888:	in     al,0x24
  41488a:	and    al,0x3b
  41488c:	xchg   ebp,eax
  41488d:	push   es
  41488e:	add    al,0x82
  414890:	(bad)  
  414891:	and    BYTE PTR [ebp+edi*1+0x18],ch
  414895:	outs   dx,DWORD PTR ds:[esi]
  414896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414897:	and    al,0xad
  414899:	dec    ecx
  41489a:	call   0x2952:0x8f76f6a6
  4148a1:	fcomp  QWORD PTR [ebx]
  4148a3:	jb     0x41487e
  4148a5:	pop    esp
  4148a6:	push   eax
  4148a7:	and    al,0x22
  4148aa:	leave  
  4148ab:	or     DWORD PTR ds:0x117a509c,esp
  4148b1:	push   ds
  4148b2:	hlt    
  4148b3:	mov    eax,0xfe96782f
  4148b8:	and    ebx,ebx
  4148ba:	div    DWORD PTR [eax-0x41c9557d]
  4148c0:	jno    0x414885
  4148c2:	ret    
  4148c3:	sbb    BYTE PTR [esi+0x7b],cl
  4148c6:	or     al,0x32
  4148c8:	fwait
  4148c9:	mov    ebp,0xc9d8b980
  4148ce:	sub    bl,dh
  4148d0:	jo     0x41488b
  4148d2:	pop    eax
  4148d3:	jne    0x4148f9
  4148d5:	dec    ecx
  4148d6:	add    al,0x48
  4148d8:	dec    edx
  4148d9:	lock test DWORD PTR [ebx+0x575176bf],edx
  4148e0:	cmp    al,0xf7
  4148e2:	call   0x648af1de
  4148e7:	scas   eax,DWORD PTR es:[edi]
  4148e8:	fdiv   DWORD PTR [esp+ebp*2]
  4148eb:	dec    esi
  4148ec:	push   edi
  4148ed:	test   bh,ah
  4148ef:	add    bl,BYTE PTR [ebx+0x7741407b]
  4148f5:	adc    DWORD PTR [esi],0x6dfe1947
  4148fb:	(bad)  
  4148fd:	bound  esi,QWORD PTR [edi-0x20]
  414900:	lods   al,BYTE PTR ds:[esi]
  414901:	les    ebp,FWORD PTR [edi+0x441d3607]
  414907:	add    eax,0x2dcdd25a
  41490c:	iret   
  41490d:	sbb    BYTE PTR [eax+edx*4+0x68],0xc9
  414912:	sar    BYTE PTR [ebp-0x7a],cl
  414915:	inc    ebp
  414916:	scas   al,BYTE PTR es:[edi]
  414917:	pop    ebp
  414918:	xchg   edx,eax
  414919:	add    eax,0x8f4bd4b
  41491e:	pop    eax
  41491f:	push   0x56ee9486
  414924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414925:	test   DWORD PTR [edi],ebp
  414927:	jb     0x41499b
  414929:	lahf   
  41492a:	mov    bl,ch
  41492c:	je     0x414975
  41492e:	loopne 0x41497d
  414930:	ret    
  414931:	int    0xb0
  414933:	and    ecx,esi
  414935:	jne    0x414928
  414937:	addr16 dec eax
  414939:	jle    0x414934
  41493b:	(bad)  
  41493d:	cdq    
  41493e:	jbe    0x414946
  414940:	cli    
  414941:	dec    ebp
  414942:	xchg   edi,eax
  414943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414944:	shr    esi,cl
  414946:	adc    eax,0xfc426a59
  41494b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41494c:	call   0x8ef9b391
  414951:	add    cl,BYTE PTR [eax-0x54]
  414954:	push   esp
  414955:	(bad)  
  414956:	jo     0x414946
  414958:	scas   al,BYTE PTR es:[edi]
  414959:	(bad)  
  41495a:	(bad)  
  41495b:	jno    0x414991
  41495d:	ds mov bl,0xcd
  414960:	stos   BYTE PTR es:[edi],al
  414961:	scas   eax,DWORD PTR es:[edi]
  414962:	inc    DWORD PTR [ecx]
  414964:	xor    ecx,DWORD PTR [esi+eax*4-0x677bfdee]
  41496b:	adc    eax,0x45f78c23
  414970:	sub    BYTE PTR [edi-0x62],bh
  414973:	adc    BYTE PTR [ebp-0x3b],0x5f
  414977:	sub    bh,BYTE PTR [ebx]
  414979:	or     BYTE PTR [ebp-0x46ea3e3b],bl
  41497f:	pop    si
  414981:	mul    DWORD PTR [esi-0x5f41c5e9]
  414987:	fld    TBYTE PTR [edi]
  414989:	cs aas 
  41498b:	sub    al,0xb6
  41498d:	imul   DWORD PTR [edi+0x7afc2b9]
  414993:	sub    ebx,0x56732ddd
  414999:	adc    eax,DWORD PTR [ebp+0x74872195]
  41499f:	jns    0x41494f
  4149a1:	xor    esi,edx
  4149a3:	inc    ebx
  4149a4:	lock loopne 0x41497d
  4149a7:	shr    DWORD PTR [eax+0x39457fb2],1
  4149ad:	ret    
  4149ae:	aad    0x99
  4149b0:	sbb    esp,DWORD PTR [eax+0x5e]
  4149b3:	xor    BYTE PTR [ecx+0x2b4d9bd6],cl
  4149b9:	and    ecx,DWORD PTR [edi+0xdf1024d]
  4149bf:	jle    0x41495f
  4149c1:	inc    ecx
  4149c2:	jmp    0x4149a8
  4149c4:	das    
  4149c5:	push   0x21
  4149c7:	mov    es:0x4f46844c,eax
  4149cd:	pop    eax
  4149ce:	adc    BYTE PTR [edi],dh
  4149d0:	inc    ebx
  4149d1:	and    al,BYTE PTR [edx-0x7826458e]
  4149d7:	adc    ebx,0x48494f4c
  4149dd:	xlat   BYTE PTR ds:[ebx]
  4149de:	mov    eax,DWORD PTR [eax-0x68]
  4149e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e2:	inc    edx
  4149e3:	or     dl,BYTE PTR [edx-0x1d25d80f]
  4149e9:	ror    esp,cl
  4149eb:	mov    BYTE PTR [eax+0x1c308a30],bh
  4149f1:	imul   esp,DWORD PTR [esi-0x53],0xffffffa9
  4149f5:	lock mov ecx,0xd07a9fdf
  4149fb:	jne    0x414a49
  4149fd:	inc    esp
  4149fe:	ins    DWORD PTR es:[edi],dx
  4149ff:	pop    eax
  414a00:	sub    eax,DWORD PTR [eax]
  414a02:	push   eax
  414a03:	sbb    ch,BYTE PTR [ecx+0x3b]
  414a06:	lahf   
  414a07:	dec    DWORD PTR [ebx]
  414a09:	mov    esp,0x87eaa79d
  414a0e:	mov    dl,0x99
  414a10:	retf   0x7738
  414a13:	mov    ds:0xadb890bf,eax
  414a18:	aas    
  414a19:	(bad)  
  414a1a:	dec    ecx
  414a1b:	outs   dx,DWORD PTR ds:[esi]
  414a1c:	or     ah,al
  414a1e:	jmp    0x3190c03d
  414a23:	jo     0x414a06
  414a25:	cld    
  414a26:	pop    edx
  414a27:	imul   esp,DWORD PTR [edx],0xbe608d44
  414a2d:	sbb    esp,esp
  414a2f:	pop    ebx
  414a30:	jae    0x4149bf
  414a32:	mov    dl,dl
  414a34:	inc    edx
  414a35:	push   es
  414a36:	outs   dx,BYTE PTR ds:[esi]
  414a37:	mov    ah,al
  414a39:	mov    eax,ds:0x18eccefe
  414a3e:	or     ebp,DWORD PTR [esi-0x447d5f47]
  414a44:	aaa    
  414a45:	jmp    0xa937a1ff
  414a4a:	push   ss
  414a4b:	outs   dx,DWORD PTR ds:[esi]
  414a4c:	out    0xe5,eax
  414a4e:	cdq    
  414a4f:	test   eax,0x36da7735
  414a54:	data16 (bad) 
  414a56:	scas   al,BYTE PTR es:[edi]
  414a57:	adc    BYTE PTR [ecx-0x34],cl
  414a5a:	ss xor al,0x73
  414a5d:	xor    esi,DWORD PTR ds:0x48ee31e7
  414a63:	adc    BYTE PTR [esi+0x61f45bb3],ah
  414a69:	hlt    
  414a6a:	int3   
  414a6b:	xchg   ebx,ebp
  414a6d:	push   edx
  414a6e:	sub    ebx,esp
  414a70:	push   ebp
  414a71:	jp     0x414a75
  414a73:	mov    es:0x25f8ae93,eax
  414a79:	mov    dl,0x52
  414a7b:	push   eax
  414a7c:	mov    edx,edx
  414a7e:	(bad)  
  414a7f:	or     DWORD PTR [ebx+0xda1ff0c],ebx
  414a85:	bound  edi,QWORD PTR [esi-0x5c444dfb]
  414a8b:	(bad)  
  414a8c:	adc    DWORD PTR [esi+0x0],ebp
  414a8f:	pop    esp
  414a90:	push   ecx
  414a91:	dec    ecx
  414a92:	in     eax,0x62
  414a94:	xor    BYTE PTR [eiz*1+0x584f3797],0x72
  414a9c:	out    0x6d,eax
  414a9e:	mov    ds:0x12920be,al
  414aa3:	sub    eax,0x8a2e1dd8
  414aa8:	pop    ss
  414aa9:	les    edx,FWORD PTR [eax]
  414aab:	jecxz  0x414aed
  414aad:	mov    ecx,0x848debe5
  414ab2:	gs push esp
  414ab4:	cmp    edx,DWORD PTR [esi+0x70eb1974]
  414aba:	xchg   edx,eax
  414abb:	or     ebp,edi
  414abd:	adc    BYTE PTR [ebp+eiz*8-0x3c841e59],bl
  414ac4:	mov    bl,BYTE PTR [edx]
  414ac6:	mov    edx,0x6f5b3d07
  414acb:	inc    eax
  414acc:	cmp    bh,BYTE PTR [ebx-0x150cf586]
  414ad2:	jecxz  0x414aa9
  414ad4:	or     bl,BYTE PTR [ebx+0xc401124]
  414ada:	push   ebx
  414adb:	mov    al,ds:0xb108b5fe
  414ae0:	enter  0xd5b0,0xf7
  414ae4:	mov    ebx,0xba113fca
  414ae9:	add    eax,0x3ac52d45
  414aee:	stos   BYTE PTR es:[edi],al
  414aef:	(bad)  
  414af0:	in     al,0x5c
  414af2:	mul    DWORD PTR ds:0x71a69379
  414af8:	mov    eax,ds:0xf2b673da
  414afd:	sub    eax,0x7687724c
  414b02:	pop    edx
  414b03:	mov    esp,0x2c79ecd7
  414b08:	aas    
  414b09:	aas    
  414b0a:	xor    eax,DWORD PTR [eax-0xfba1af6]
  414b10:	ins    BYTE PTR es:[edi],dx
  414b11:	mov    esi,DWORD PTR [eax-0x2c]
  414b14:	pop    ds
  414b15:	je     0x414b6c
  414b17:	mov    dl,al
  414b19:	or     eax,0xdb250773
  414b1e:	mov    dl,0x1c
  414b20:	stc    
  414b21:	mov    bh,0x75
  414b23:	or     eax,0xaf21c008
  414b28:	pop    esp
  414b29:	clc    
  414b2a:	pop    edi
  414b2b:	rol    DWORD PTR [eax-0x18],0xc7
  414b2f:	sahf   
  414b30:	or     al,0xb4
  414b32:	inc    eax
  414b33:	xor    bl,bl
  414b35:	in     al,0xf0
  414b37:	(bad)  
  414b39:	sbb    al,0x81
  414b3b:	cmp    bh,BYTE PTR [edx+ecx*1+0x8]
  414b3f:	mov    edi,0xf4d0704d
  414b44:	dec    esi
  414b45:	xchg   esi,eax
  414b46:	cli    
  414b47:	mov    al,0x3c
  414b49:	adc    eax,eax
  414b4b:	push   edx
  414b4c:	xchg   esp,eax
  414b4d:	cwde   
  414b4e:	jge    0x414bc7
  414b50:	ja     0x414b5c
  414b52:	mov    al,ds:0xff8e1b75
  414b57:	cs sbb eax,0x9a96237
  414b5d:	xchg   edi,eax
  414b5e:	cs call 0xc6966cff
  414b64:	mov    dl,0x6d
  414b66:	iret   
  414b67:	xor    eax,0x32e9a18b
  414b6c:	sbb    eax,0x6c9e92c1
  414b71:	or     al,0xf7
  414b73:	jge    0x414b53
  414b75:	xor    edi,ebp
  414b77:	loop   0x414b34
  414b79:	cdq    
  414b7a:	sub    eax,0xc98c09e7
  414b7f:	mov    esp,0x79574bdd
  414b84:	adc    al,0x96
  414b86:	xor    dh,bh
  414b88:	push   edx
  414b89:	push   esi
  414b8a:	dec    ebx
  414b8b:	cmp    eax,esi
  414b8d:	xchg   edx,eax
  414b8e:	mov    cl,0x55
  414b90:	(bad)  
  414b91:	and    eax,DWORD PTR [ecx-0x794d0a8]
  414b97:	(bad)  
  414b98:	pop    ebp
  414b99:	cmp    ebp,DWORD PTR [edx+0x2a9179fa]
  414b9f:	inc    BYTE PTR [eax-0x16]
  414ba2:	jns    0x414b8f
  414ba4:	xchg   esp,eax
  414ba5:	dec    ecx
  414ba6:	inc    esi
  414ba7:	add    eax,0xa1d8b7ca
  414bac:	push   edi
  414bad:	add    al,0xd5
  414baf:	jp     0x414bc9
  414bb1:	dec    edi
  414bb2:	dec    ebx
  414bb3:	aad    0x5b
  414bb5:	shl    DWORD PTR [edi],cl
  414bb7:	aaa    
  414bb8:	popf   
  414bb9:	outs   dx,DWORD PTR ds:[esi]
  414bba:	fdiv   QWORD PTR [ecx+0x43951112]
  414bc0:	in     al,dx
  414bc1:	in     eax,0x70
  414bc3:	jbe    0x414b4e
  414bc5:	push   ss
  414bc6:	iret   
  414bc7:	inc    ecx
  414bc8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  414bca:	mov    ch,0x30
  414bcc:	pop    esi
  414bcd:	jns    0x414c2e
  414bcf:	or     DWORD PTR [ebp-0x6f],esp
  414bd2:	push   es
  414bd3:	inc    esp
  414bd4:	and    DWORD PTR [eax+0x17],ebp
  414bd7:	cmp    ecx,DWORD PTR es:[esi-0x51]
  414bdb:	mov    ds:0xf4ce9273,eax
  414be0:	repnz test esp,ebx
  414be3:	lods   eax,DWORD PTR ds:[esi]
  414be4:	xchg   ebp,eax
  414be5:	mov    bl,0xb9
  414be7:	ins    BYTE PTR es:[edi],dx
  414be8:	lahf   
  414be9:	idiv   BYTE PTR [esi-0x7]
  414bec:	pop    ds
  414bed:	fs push ss
  414bef:	outs   dx,DWORD PTR ds:[esi]
  414bf0:	test   al,ch
  414bf2:	call   0x8135bf6e
  414bf7:	sub    al,0xda
  414bf9:	in     al,dx
  414bfa:	(bad)  
  414bfb:	adc    esp,edx
  414bfd:	fld    DWORD PTR [edx]
  414bff:	inc    ebx
  414c00:	shl    BYTE PTR [esi],0xd6
  414c03:	fsubr  st,st(5)
  414c05:	or     dl,cl
  414c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c08:	sub    al,0xb5
  414c0a:	arpl   WORD PTR [esi],di
  414c0c:	repnz pushf 
  414c0e:	stos   DWORD PTR es:[edi],eax
  414c0f:	cs mov esp,0x5a1eee60
  414c15:	push   0x76
  414c17:	and    al,ch
  414c19:	mov    DWORD PTR [eax-0x4ebf710d],ecx
  414c1f:	and    eax,0x1542d91e
  414c24:	ds add esi,ebp
  414c27:	adc    al,0x2f
  414c29:	leave  
  414c2a:	int3   
  414c2b:	xor    ecx,DWORD PTR [edi]
  414c2d:	jbe    0x414c7f
  414c2f:	jle    0x414c8a
  414c31:	std    
  414c32:	je     0x414bc7
  414c34:	(bad)  
  414c35:	cmp    ah,BYTE PTR [ecx]
  414c37:	imul   ebp,DWORD PTR [esi+0x48],0x9fe12ca1
  414c3e:	cwde   
  414c3f:	iret   
  414c40:	adc    DWORD PTR [esi],0x73
  414c43:	sub    eax,0xceab5d2c
  414c48:	xor    al,0x99
  414c4a:	adc    al,bl
  414c4c:	xor    DWORD PTR [ebx],0xadc31ce8
  414c52:	fiadd  DWORD PTR [edi+ebx*2+0x1e]
  414c56:	fild   QWORD PTR [ebx-0x2e0f4d13]
  414c5c:	xor    al,0x82
  414c5e:	in     al,0xb3
  414c60:	adc    BYTE PTR [ebx],0xd6
  414c63:	push   eax
  414c64:	jmp    0x414ce0
  414c66:	xor    DWORD PTR [ebp-0x73350d3e],ecx
  414c6c:	arpl   WORD PTR [esi],cx
  414c6e:	ins    DWORD PTR es:[edi],dx
  414c6f:	and    ah,BYTE PTR ss:[edx-0x1e3ee54e]
  414c76:	mov    ecx,0x9d863298
  414c7b:	aad    0x19
  414c7d:	repnz add bh,BYTE PTR [ebx+0x3d]
  414c81:	mov    BYTE PTR [eax+0x1],dh
  414c84:	das    
  414c85:	(bad)  
  414c86:	int    0xbe
  414c88:	gs aaa 
  414c8a:	xor    eax,0x41fe6252
  414c8f:	dec    ebx
  414c90:	popf   
  414c91:	sub    eax,0x519ab085
  414c96:	adc    ebx,DWORD PTR [esi-0x16]
  414c99:	mov    dl,0x4c
  414c9b:	clc    
  414c9c:	xlat   BYTE PTR ds:[ebx]
  414c9d:	sbb    al,0x37
  414c9f:	inc    ebx
  414ca1:	popf   
  414ca2:	jns    0x414c3b
  414ca4:	xchg   edi,eax
  414ca5:	xchg   esi,eax
  414ca6:	out    0xf4,eax
  414ca8:	dec    eax
  414ca9:	lahf   
  414caa:	dec    ebx
  414cab:	and    bl,dl
  414cad:	jge    0x414c6e
  414caf:	outs   dx,DWORD PTR ds:[esi]
  414cb0:	int3   
  414cb1:	push   edi
  414cb2:	xchg   esi,eax
  414cb3:	mov    ah,BYTE PTR [ecx+0x734b319b]
  414cb9:	mov    ah,0x85
  414cbb:	fsub   DWORD PTR [ecx-0x5]
  414cbe:	imul   BYTE PTR [ecx]
  414cc0:	xlat   BYTE PTR ds:[ebx]
  414cc1:	sbb    dl,BYTE PTR [edi-0x6f]
  414cc4:	test   eax,0x51897509
  414cc9:	xor    BYTE PTR [ecx],al
  414ccb:	jnp    0x414cc0
  414ccd:	xchg   esp,eax
  414cce:	inc    ebx
  414ccf:	jg     0x414d23
  414cd1:	or     eax,0xdde2d101
  414cd6:	cdq    
  414cd7:	push   ds
  414cd8:	dec    eax
  414cd9:	dec    ebp
  414cda:	jo     0x414ce3
  414cdc:	js     0x414cc3
  414cde:	mov    ebx,0xf4b6e803
  414ce3:	aam    0xde
  414ce5:	ds pop edx
  414ce7:	jbe    0x414cba
  414ce9:	ins    BYTE PTR es:[edi],dx
  414cea:	nop
  414ceb:	and    dl,BYTE PTR [ebx+0x6f]
  414cee:	mov    ah,0x14
  414cf0:	in     al,0xff
  414cf2:	je     0x414d63
  414cf4:	push   edx
  414cf5:	inc    eax
  414cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf7:	pusha  
  414cf8:	inc    ebp
  414cf9:	jno    0x414d38
  414cfb:	jmp    0xe5697fdf
  414d00:	push   ss
  414d01:	jne    0x414cbd
  414d03:	dec    esi
  414d04:	sub    ecx,DWORD PTR [edx+ecx*1]
  414d07:	push   esp
  414d08:	dec    edi
  414d09:	mov    cl,0x1f
  414d0b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  414d0d:	push   ebx
  414d0e:	mov    ds:0x6173b7fd,al
  414d13:	dec    esi
  414d14:	loope  0x414cd4
  414d16:	sar    BYTE PTR [eax+0x5fe21c34],0xe3
  414d1d:	xor    ch,BYTE PTR [ecx]
  414d1f:	pushf  
  414d20:	add    DWORD PTR [ebx+eiz*2],0xdf019290
  414d27:	mov    ds:0x31c605e9,eax
  414d2c:	mov    esp,0xa9b4228e
  414d31:	sti    
  414d32:	rcl    DWORD PTR [edx],1
  414d34:	sahf   
  414d35:	sbb    eax,0x42df282a
  414d3a:	imul   ecx,DWORD PTR [ebx+0x14bf63db],0x38311f6e
  414d44:	sub    edi,ecx
  414d46:	and    al,ch
  414d48:	inc    esp
  414d49:	inc    ecx
  414d4a:	daa    
  414d4b:	xchg   esi,eax
  414d4c:	pop    edx
  414d4d:	popf   
  414d4e:	cwde   
  414d4f:	stos   BYTE PTR es:[edi],al
  414d50:	jo     0x414dbc
  414d52:	sub    BYTE PTR [ecx+0x3b],cl
  414d55:	push   cs
  414d56:	leave  
  414d57:	dec    ebx
  414d58:	adc    al,0x25
  414d5a:	out    dx,eax
  414d5b:	inc    ebp
  414d5c:	cmp    al,0x10
  414d5e:	lock add eax,0x802e5638
  414d64:	sub    BYTE PTR ds:0xcb21a79d,ch
  414d6a:	fcmovnb st,st(6)
  414d6c:	inc    esp
  414d6d:	xor    esp,DWORD PTR [ebp+0x1d]
  414d70:	xchg   ebx,eax
  414d71:	mov    edi,0x35515ec8
  414d76:	clc    
  414d77:	pop    ss
  414d78:	push   eax
  414d79:	adc    ah,0x18
  414d7c:	nop
  414d7d:	js     0x414d33
  414d7f:	mov    ecx,0x6d982f56
  414d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d85:	pop    ebx
  414d86:	loop   0x414dcf
  414d88:	lea    esi,[ecx]
  414d8a:	inc    ecx
  414d8b:	pop    ebx
  414d8c:	les    ebx,FWORD PTR [eax+0x5a]
  414d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d90:	push   edi
  414d91:	pop    eax
  414d92:	sbb    BYTE PTR cs:[esi-0x158472ad],ch
  414d99:	outs   dx,BYTE PTR ds:[esi]
  414d9a:	inc    esi
  414d9b:	sub    eax,0xa219dd82
  414da0:	ret    
  414da1:	pop    ebx
  414da2:	ret    
  414da3:	dec    ecx
  414da4:	(bad)  [esi+ecx*1-0x57ef225f]
  414dab:	sub    dh,BYTE PTR [ebx-0x41]
  414dae:	and    bh,BYTE PTR es:[eax+0x3d]
  414db2:	pushf  
  414db3:	adc    BYTE PTR [ebx+ecx*2-0x3],bl
  414db7:	add    bh,dl
  414db9:	out    dx,eax
  414dba:	dec    eax
  414dbb:	sub    al,0xfc
  414dbd:	arpl   WORD PTR [ebp+0x25],bp
  414dc0:	pop    edx
  414dc1:	sub    al,bl
  414dc3:	imul   eax,DWORD PTR [ebx*1+0x708b1f24],0xffffff95
  414dcb:	cs mov al,0xd1
  414dce:	jnp    0x414dbb
  414dd0:	sahf   
  414dd1:	into   
  414dd2:	push   edx
  414dd3:	inc    ebx
  414dd4:	adc    esp,esi
  414dd6:	popf   
  414dd7:	shr    edx,cl
  414dd9:	push   edi
  414dda:	cmp    cl,BYTE PTR [ecx+ebp*1-0x29]
  414dde:	jno    0x414de1
  414de0:	pop    esi
  414de1:	sbb    BYTE PTR [edx+0x72],bh
  414de4:	call   0xb4184eff
  414de9:	dec    ecx
  414dea:	cmp    BYTE PTR [ebp+0x2a],bl
  414ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dee:	addr16 inc esp
  414df0:	test   al,0x25
  414df2:	mov    ?,ebx
  414df4:	mov    ebx,0x750b141f
  414df9:	adc    dl,bh
  414dfb:	jae    0x414e1e
  414dfd:	inc    edi
  414dfe:	cmp    eax,0x731b7598
  414e03:	fld    QWORD PTR [ecx+edi*4+0x74b57ad7]
  414e0a:	inc    ecx
  414e0b:	scas   eax,DWORD PTR es:[edi]
  414e0c:	pusha  
  414e0d:	mul    BYTE PTR [edx]
  414e0f:	or     al,0xbd
  414e11:	inc    ebp
  414e13:	sar    DWORD PTR [edx+0x4],1
  414e16:	dec    esi
  414e17:	mov    edx,0x4c0dfe80
  414e1c:	ins    BYTE PTR es:[edi],dx
  414e1d:	enter  0xf516,0x1f
  414e21:	(bad)  ds:0x47bb51aa
  414e27:	les    esi,FWORD PTR [edx+0x3]
  414e2a:	jnp    0x414dbe
  414e2c:	aaa    
  414e2d:	repnz push ebx
  414e2f:	rcr    BYTE PTR [edi+0x5987eb9d],0xfe
  414e36:	cld    
  414e37:	js     0x414e18
  414e39:	dec    ebp
  414e3a:	cmp    ebx,DWORD PTR [ecx+0x4c]
  414e3d:	neg    BYTE PTR ds:0x11a67085
  414e43:	into   
  414e44:	mov    ebp,0x4aeb58bf
  414e49:	ds test ebp,0xebd54b4f
  414e50:	pop    ds
  414e51:	inc    ebp
  414e52:	sub    al,0x7f
  414e54:	sub    al,0x8a
  414e56:	push   edi
  414e57:	mov    dh,ch
  414e59:	jbe    0x414e3a
  414e5b:	(bad)  
  414e5c:	push   esp
  414e5d:	(bad)  
  414e5e:	int3   
  414e5f:	pop    es
  414e60:	sub    cl,BYTE PTR [edi+0x6d4bb4d4]
  414e66:	mov    esi,0x1b3dbd
  414e6b:	xor    dh,cl
  414e6d:	pop    esi
  414e6e:	fstp   DWORD PTR [esi-0x556b984a]
  414e74:	jb     0x414e49
  414e76:	shr    BYTE PTR [ecx+ebp*8-0x17],0xd8
  414e7b:	(bad)  
  414e7c:	arpl   ax,di
  414e7e:	cmp    ah,BYTE PTR [ecx+0x5701ac2e]
  414e84:	xchg   esi,eax
  414e85:	xchg   DWORD PTR [esi+ebx*2],esi
  414e88:	rep lods eax,DWORD PTR ds:[esi]
  414e8a:	(bad)  
  414e8b:	test   esp,0x25922446
  414e91:	clc    
  414e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e93:	jns    0x414e7a
  414e95:	push   ebp
  414e96:	inc    eax
  414e97:	aas    
  414e98:	mov    ebx,0xa0547312
  414e9d:	or     ch,BYTE PTR [ebx+edi*2]
  414ea0:	jbe    0x414e69
  414ea2:	imul   esi,DWORD PTR [edx],0xffffffbb
  414ea5:	test   DWORD PTR [edi+0x58],eax
  414ea8:	aas    
  414ea9:	rcr    esi,1
  414eab:	out    0x3c,al
  414ead:	inc    edi
  414eae:	mov    edi,0x41648f76
  414eb3:	mov    edi,0x9049a606
  414eb8:	rcr    BYTE PTR [ecx],1
  414eba:	inc    ecx
  414ebb:	adc    ah,cl
  414ebd:	repz xchg ebx,eax
  414ebf:	lods   al,BYTE PTR ds:[esi]
  414ec0:	push   ecx
  414ec1:	(bad)  
  414ec2:	sbb    al,0x2d
  414ec4:	dec    ebp
  414ec5:	fiadd  WORD PTR [eax+0x47]
  414ec8:	loopne 0x414e8a
  414eca:	fidiv  WORD PTR [eax]
  414ecc:	in     eax,0x6e
  414ece:	loopne 0x414eb8
  414ed0:	out    0x29,eax
  414ed2:	push   eax
  414ed3:	ror    DWORD PTR [esi],1
  414ed5:	(bad)  
  414ed6:	das    
  414ed7:	jns    0x414ef8
  414ed9:	ins    BYTE PTR es:[edi],dx
  414eda:	xor    BYTE PTR [esi+ecx*1-0x15],0xc2
  414edf:	dec    esp
  414ee0:	fild   WORD PTR ss:[esi-0x51]
  414ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee5:	and    DWORD PTR [eax+0x6b],0x3b
  414ee9:	adc    al,BYTE PTR [ebx+0x7b]
  414eec:	cld    
  414eed:	push   ds
  414eee:	add    DWORD PTR [eax+0x31],esp
  414ef1:	loopne 0x414eb4
  414ef3:	mov    esp,0xe4d390cb
  414ef8:	jno    0x414f5c
  414efa:	mov    ds:0x8c8d3b53,al
  414eff:	mov    ebx,0x2308d54e
  414f04:	mov    eax,ds:0x91d6e73a
  414f09:	add    eax,0x9a913f1b
  414f0e:	loopne 0x414f0a
  414f10:	out    0xd4,al
  414f12:	mov    edx,0xd707013d
  414f17:	outs   dx,BYTE PTR ds:[esi]
  414f18:	mov    ds:0x7d70f9fd,al
  414f1d:	in     al,dx
  414f1e:	and    al,0xe9
  414f20:	and    eax,DWORD PTR [ebx+0x4f733490]
  414f26:	add    eax,0x16087259
  414f2b:	shr    WORD PTR [ebx],1
  414f2e:	jb     0x414ee8
  414f30:	imul   ebp,DWORD PTR [ebx],0xa1edd8c6
  414f36:	cmp    eax,0x26d7642e
  414f3b:	push   ss
  414f3c:	mov    ebp,?
  414f3e:	sti    
  414f3f:	popa   
  414f40:	fist   DWORD PTR [edi]
  414f42:	inc    ebp
  414f43:	or     DWORD PTR [ebx+ebp*4+0x18],esp
  414f47:	retf   
  414f48:	mov    ds:0x48cecabf,eax
  414f4d:	xor    al,0xe3
  414f4f:	mov    al,0xb9
  414f51:	push   esi
  414f52:	adc    ebx,DWORD PTR [edx]
  414f54:	or     BYTE PTR [ecx+0x0],bh
  414f57:	push   0x62
  414f59:	(bad)  
  414f5a:	cmp    DWORD PTR [ecx],esi
  414f5c:	pop    esp
  414f5d:	test   eax,0x1ed96f1d
  414f62:	ret    
  414f63:	mov    al,ds:0xc786b59
  414f68:	data16 jbe 0x414f18
  414f6b:	lahf   
  414f6c:	push   esi
  414f6d:	ja     0x414fc1
  414f6f:	sub    BYTE PTR [ecx-0x7a],dh
  414f72:	add    esi,esi
  414f74:	aaa    
  414f75:	out    dx,al
  414f76:	ret    0xc3c9
  414f79:	dec    edi
  414f7a:	add    eax,0x4dd74cb2
  414f7f:	sub    eax,DWORD PTR [edx-0x58c5eca3]
  414f85:	dec    edx
  414f86:	stos   BYTE PTR es:[edi],al
  414f87:	pusha  
  414f88:	fisubr DWORD PTR [eax-0x59afa118]
  414f8e:	dec    edi
  414f8f:	add    ebp,DWORD PTR [ebx+0x70dbc1d0]
  414f95:	sti    
  414f96:	mov    ebp,0x364f7c40
  414f9b:	sahf   
  414f9c:	xchg   DWORD PTR [ebx+ebx*4],esp
  414f9f:	dec    ebx
  414fa0:	into   
  414fa1:	cwde   
  414fa2:	pop    ecx
  414fa3:	cli    
  414fa4:	pop    esp
  414fa5:	nop
  414fa6:	ds loopne 0x414fdb
  414fa9:	jo     0x414fb0
  414fab:	out    dx,al
  414fac:	and    eax,0x400b5d2b
  414fb1:	lea    esi,[ecx+0x61ce4bb2]
  414fb7:	sub    al,0x46
  414fb9:	push   ebp
  414fba:	rcr    DWORD PTR [ebx],1
  414fbc:	jo     0x414fea
  414fbe:	add    edi,ebx
  414fc0:	loopne 0x414fd1
  414fc2:	sbb    DWORD PTR [ebp+0x5a],ebx
  414fc5:	(bad)  
  414fc6:	test   al,0x18
  414fc8:	aad    0xe4
  414fca:	mov    ch,0xba
  414fcc:	adc    DWORD PTR [eax-0x530c2285],esi
  414fd2:	adc    al,0xf6
  414fd4:	dec    ebx
  414fd5:	sub    eax,0x6fb4aa3e
  414fda:	int    0x7f
  414fdc:	pop    edx
  414fdd:	dec    eax
  414fde:	mov    bh,0xc7
  414fe0:	xor    al,0x67
  414fe2:	push   ebp
  414fe3:	inc    ebx
  414fe4:	retf   
  414fe5:	pop    es
  414fe6:	pop    edi
  414fe7:	(bad)  
  414fe8:	jmp    0xe0f742c
  414fed:	jp     0x414fe6
  414fef:	adc    edi,esp
  414ff1:	pop    ds
  414ff2:	scas   eax,DWORD PTR es:[edi]
  414ff3:	pop    edi
  414ff4:	push   0xc
  414ff6:	arpl   WORD PTR [eax-0x45],bp
  414ff9:	scas   al,BYTE PTR es:[edi]
  414ffa:	mov    dl,0x89
  414ffc:	(bad)  
  414ffd:	test   eax,0x669d8b1e
  415002:	xchg   BYTE PTR [eax-0x80],dl
  415005:	xor    ebx,ecx
  415007:	arpl   WORD PTR [edi+esi*4+0x376121b7],bx
  41500e:	inc    esi
  41500f:	lahf   
  415010:	inc    ebp
  415011:	mov    cl,0x9b
  415013:	imul   eax,DWORD PTR [esi+edi*8-0x564a9d64],0xffffffa2
  41501b:	or     bl,dh
  41501d:	jmp    0x26a14a2c
  415022:	push   ebx
  415023:	jmp    0x6ae:0x5f7abe80
  41502a:	push   esp
  41502b:	int    0x8c
  41502d:	sbb    DWORD PTR [edx+0x1f],esp
  415030:	lods   al,BYTE PTR ds:[esi]
  415031:	lods   al,BYTE PTR ds:[esi]
  415032:	mov    ah,0xa3
  415034:	sar    BYTE PTR gs:[ebp+ecx*4-0x61ed1869],1
  41503c:	mov    bl,0x4b
  41503e:	add    ebx,edx
  415040:	push   ecx
  415041:	xchg   edx,eax
  415042:	(bad)  
  415043:	jecxz  0x415093
  415045:	ja     0x415048
  415047:	add    DWORD PTR [esi],ebp
  415049:	lods   eax,DWORD PTR es:[esi]
  41504b:	mov    ds:0x1b1e822f,al
  415050:	iret   
  415051:	rol    BYTE PTR [ecx],cl
  415053:	mov    bl,0xc5
  415055:	jbe    0x41504d
  415057:	jle    0x415058
  415059:	cmp    BYTE PTR [ebx-0x6b],ah
  41505c:	fdiv   QWORD PTR [esi-0x3b66d0ec]
  415062:	push   esp
  415063:	fsubrp st(3),st
  415065:	shr    al,1
  415067:	pop    ecx
  415068:	mov    cl,0x63
  41506a:	outs   dx,DWORD PTR ds:[esi]
  41506b:	test   DWORD PTR [edi-0x1d],0x64380dde
  415072:	or     DWORD PTR [edx+eiz*2-0x43],0x7d17d46d
  41507a:	jmp    0x415076
  41507c:	sbb    ebx,eax
  41507e:	std    
  41507f:	cwde   
  415080:	pop    edx
  415081:	(bad)  
  415082:	mov    WORD PTR [edx-0x5977fbb3],es
  415088:	jmp    0xfed0:0x1e802397
  41508f:	std    
  415090:	loop   0x415021
  415092:	pop    edx
  415093:	mov    ds:0x6f37ad30,eax
  415098:	lea    ebx,[ebp+0x75]
  41509b:	daa    
  41509c:	inc    edi
  41509e:	div    DWORD PTR [eax+edx*8+0x0]
  4150a2:	fnsave [esi-0x1ba96ee9]
  4150a8:	iret   
  4150a9:	or     edx,DWORD PTR [edx-0x49]
  4150ac:	inc    edx
  4150ad:	fisub  DWORD PTR ds:0xfeeead52
  4150b3:	pop    ebp
  4150b4:	clc    
  4150b5:	es pop ecx
  4150b7:	adc    al,0x5f
  4150b9:	and    ecx,DWORD PTR [eax]
  4150bb:	nop
  4150bc:	js     0x4150f7
  4150be:	push   esi
  4150bf:	inc    edi
  4150c0:	in     eax,0x1e
  4150c2:	mov    esi,DWORD PTR [eax]
  4150c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c5:	inc    edx
  4150c6:	and    DWORD PTR ds:0x7512e03e,esp
  4150cc:	add    al,0x56
  4150ce:	adc    al,0xeb
  4150d0:	in     al,0xda
  4150d2:	loop   0x415126
  4150d4:	mov    eax,ds:0x280f6044
  4150d9:	pop    esp
  4150da:	int    0xfb
  4150dc:	jno    0x415105
  4150de:	mov    edx,esi
  4150e0:	test   eax,0x9b56ccfe
  4150e5:	lahf   
  4150e6:	dec    edx
  4150e7:	or     al,0x85
  4150e9:	push   0xfffffff8
  4150eb:	jno    0x415083
  4150ed:	sbb    dl,bh
  4150ef:	ret    0x6101
  4150f2:	push   DWORD PTR [edx]
  4150f4:	lock stos DWORD PTR es:[edi],eax
  4150f6:	lea    edi,ds:0x1939aee5
  4150fc:	push   ds
  4150fd:	or     ch,0xb4
  415100:	mov    ch,0xa2
  415102:	push   esi
  415103:	outs   dx,BYTE PTR ds:[esi]
  415104:	inc    eax
  415105:	lds    edx,FWORD PTR [ecx-0x54]
  415108:	jl     0x4150e6
  41510a:	inc    eax
  41510b:	xchg   ebp,eax
  41510c:	mov    esi,0xe3b8894d
  415111:	cmp    al,0xe0
  415113:	adc    DWORD PTR [esp+ebx*2+0xf9fd8f2],ecx
  41511a:	cmp    BYTE PTR [ecx],bh
  41511c:	pop    ecx
  41511d:	in     eax,0x40
  41511f:	test   ebx,esi
  415121:	cli    
  415122:	sbb    bl,BYTE PTR [ebp+0x275e9bb0]
  415128:	xor    DWORD PTR [esi+eiz*4-0x8],esi
  41512c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41512d:	xor    bl,BYTE PTR [ebx+0x59ebc952]
  415133:	data16 and dl,dl
  415136:	int3   
  415137:	loop   0x41513e
  415139:	mov    dh,0x91
  41513b:	mov    eax,0xa27de850
  415140:	popa   
  415141:	out    0x1a,al
  415143:	imul   ecx,DWORD PTR [edi-0x1858b7e9],0xffffffc3
  41514a:	jne    0x415112
  41514c:	xchg   edx,eax
  41514d:	fwait
  41514e:	neg    DWORD PTR es:[esi]
  415151:	retf   0xd2c4
  415154:	xchg   BYTE PTR [edi-0x3f67d697],dh
  41515a:	mov    al,ds:0xf16185f9
  41515f:	retf   0xf2d6
  415162:	cld    
  415163:	loope  0x4151a5
  415165:	sbb    cl,0x9c
  415168:	mov    bl,0xd0
  41516a:	add    BYTE PTR fs:[edx-0x58],dl
  41516e:	xor    eax,0xa5d829cb
  415173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415174:	mov    al,BYTE PTR [ecx-0x4d59b331]
  41517a:	aad    0x1f
  41517c:	mov    eax,ds:0x39fd0892
  415181:	ja     0x41514d
  415183:	pop    ss
  415184:	(bad)  
  415185:	mov    ah,0x30
  415187:	adc    al,0xc5
  415189:	fbstp  TBYTE PTR [esi+0x37]
  41518c:	js     0x41517f
  41518e:	jb     0x4151ea
  415190:	imul   ebx,DWORD PTR [edx+0x38e8a329],0xd805171b
  41519a:	sbb    ch,cl
  41519c:	outs   dx,DWORD PTR ds:[esi]
  41519d:	test   bh,ch
  41519f:	xchg   ebx,eax
  4151a0:	cmp    edx,DWORD PTR [ecx]
  4151a2:	xchg   ecx,eax
  4151a3:	mov    ds:0xb7f2a8af,al
  4151a8:	call   FWORD PTR [esi+0x74333c8]
  4151ae:	ror    BYTE PTR [esi-0x57d57c6c],1
  4151b4:	or     eax,0x3fa2270f
  4151b9:	out    dx,eax
  4151ba:	outs   dx,BYTE PTR ds:[esi]
  4151bb:	pop    ds
  4151bc:	(bad)  
  4151bd:	jp     0x41514d
  4151bf:	add    dh,BYTE PTR [ecx+0x5c]
  4151c2:	call   0x336e:0xe5f6d360
  4151c9:	aas    
  4151ca:	ror    BYTE PTR [ebx],0x6a
  4151cd:	push   ebx
  4151ce:	loopne 0x4151ff
  4151d0:	mov    edi,0xf7ef3fb9
  4151d5:	scas   al,BYTE PTR es:[edi]
  4151d6:	add    bh,al
  4151d8:	ss push ecx
  4151da:	rol    BYTE PTR ds:0x8dc72ace,1
  4151e0:	mov    BYTE PTR [eax+0x1298383e],dl
  4151e6:	int3   
  4151e7:	add    DWORD PTR [edx+edi*8],eax
  4151ea:	add    al,0xf1
  4151ec:	jns    0x4151f0
  4151ee:	je     0x415178
  4151f0:	xchg   ecx,eax
  4151f1:	shl    DWORD PTR [edx],1
  4151f3:	or     esp,DWORD PTR [ebx-0x198edb7a]
  4151f9:	std    
  4151fa:	or     edi,DWORD PTR [esi-0x80]
  4151fd:	(bad)  
  4151fe:	rep lods al,BYTE PTR ds:[esi]
  415200:	test   BYTE PTR [edi+ecx*2-0x15ad4236],ah
  415207:	(bad)  
  415208:	mov    eax,ds:0xbeceab8a
  41520d:	jg     0x4151f0
  41520f:	mov    edx,0x2e0c3807
  415214:	add    cl,ah
  415216:	test   DWORD PTR [ebx+eiz*1+0x4d1d7f47],0x5e69cec1
  415221:	jne    0x415231
  415223:	add    eax,0x8b6c66b2
  415228:	clc    
  415229:	hlt    
  41522a:	lahf   
  41522b:	fnstsw WORD PTR [edx+0x5d]
  41522e:	popf   
  41522f:	call   0x6d05:0x6f8ef627
  415236:	aam    0x60
  415238:	clc    
  415239:	mov    esi,0x2b96ce4f
  41523e:	cmp    eax,0x588b0c02
  415243:	sbb    ebp,DWORD PTR [ecx]
  415245:	(bad)  ds:0x7c096190
  41524b:	push   ecx
  41524c:	fwait
  41524d:	jl     0x4152a6
  41524f:	test   eax,0xc03946c0
  415254:	jae    0x4152cb
  415256:	mov    ds:0x56b4433f,al
  41525b:	xchg   DWORD PTR [edi+edx*2+0x7f152c3d],edx
  415262:	xor    edi,edx
  415264:	idiv   DWORD PTR [ecx]
  415266:	repz scas al,BYTE PTR es:[edi]
  415268:	ins    DWORD PTR es:[edi],dx
  415269:	int3   
  41526a:	jmp    0x41526a
  41526c:	call   0xa1a1:0xd8f01e69
  415273:	leave  
  415274:	pop    edx
  415275:	mov    bh,0x89
  415277:	shl    DWORD PTR [eax],1
  415279:	repz cmp BYTE PTR [ecx+0x7762dceb],bh
  415280:	pop    ss
  415281:	call   0x207b:0xa69bf603
  415288:	jmp    0xab96a14b
  41528d:	inc    eax
  41528e:	jo     0x415214
  415290:	jle    0x4152c6
  415292:	mov    eax,ds:0x7989022c
  415297:	js     0x4152f4
  415299:	xor    al,0xb3
  41529b:	dec    edx
  41529c:	adc    al,0xee
  41529e:	push   0xffffffd3
  4152a0:	lock mov al,0x1f
  4152a3:	loop   0x4152fe
  4152a5:	mov    ah,BYTE PTR [esi]
  4152a7:	rcr    BYTE PTR [ebp-0x59],0x6c
  4152ab:	mov    dl,0xf6
  4152ad:	mov    ch,0x47
  4152af:	mov    DWORD PTR [edi+0x4f6d5d97],esi
  4152b5:	icebp  
  4152b6:	sti    
  4152b7:	ror    DWORD PTR [edi-0x19fae4b6],cl
  4152bd:	sbb    eax,0x3600beab
  4152c2:	dec    edx
  4152c3:	and    al,0x87
  4152c5:	sbb    DWORD PTR [esi+edi*2+0x19b3a6ff],edx
  4152cc:	dec    ebp
  4152cd:	test   eax,0xb6924ed9
  4152d2:	xlat   BYTE PTR ds:[ebx]
  4152d3:	jae    0x415343
  4152d5:	sub    cl,BYTE PTR [edi+ecx*8-0x2884a5db]
  4152dc:	mov    bh,0x61
  4152de:	in     al,dx
  4152df:	aas    
  4152e0:	jmp    0x4152f8
  4152e2:	aas    
  4152e3:	aad    0x8c
  4152e5:	xchg   ecx,eax
  4152e6:	fidivr WORD PTR [ebx-0x54c69c14]
  4152ec:	jmp    0xdf768275
  4152f1:	aas    
  4152f2:	lock rcr BYTE PTR [edi-0x12],0x97
  4152f7:	loop   0x415294
  4152f9:	sub    edx,esp
  4152fb:	lods   al,BYTE PTR ds:[esi]
  4152fc:	fmul   QWORD PTR [ebx-0x29c8a873]
  415302:	xchg   ebx,eax
  415303:	dec    ebx
  415304:	nop
  415305:	cwde   
  415306:	ror    BYTE PTR [edi],cl
  415308:	mov    ebp,0x4cfc9b83
  41530d:	outs   dx,BYTE PTR ds:[esi]
  41530e:	(bad)  [ecx-0x80]
  415311:	fiadd  WORD PTR [edi+0x51]
  415314:	mov    bh,0x36
  415316:	mov    bh,0x60
  415318:	enter  0x41e4,0x3a
  41531c:	ds in  al,0x50
  41531f:	ja     0x415386
  415321:	jmp    ecx
  415323:	jg     0x415365
  415325:	leave  
  415326:	xor    BYTE PTR [ebx],0x36
  415329:	sub    ebp,DWORD PTR [eax+0x2a]
  41532c:	cmp    DWORD PTR [edi],ecx
  41532e:	lods   eax,DWORD PTR ds:[esi]
  41532f:	rol    BYTE PTR [eax+0x4881dd42],0xe7
  415336:	(bad)  
  415337:	in     eax,dx
  415338:	mov    ebx,0x3122c99
  41533d:	mov    cl,0xd0
  41533f:	push   ecx
  415340:	sti    
  415341:	mov    edx,0xd24fbc70
  415346:	test   DWORD PTR [edi-0x79],ebx
  415349:	sbb    BYTE PTR [esi-0x48],0xa9
  41534d:	aaa    
  41534e:	and    eax,0x387810c5
  415353:	into   
  415354:	cmc    
  415355:	mov    bl,dl
  415357:	push   esp
  415358:	adc    BYTE PTR [esi+eax*2-0x43],ch
  41535c:	stos   BYTE PTR es:[edi],al
  41535d:	scas   eax,DWORD PTR es:[edi]
  41535e:	pop    ebx
  41535f:	addr16 mov al,ds:0x18f2
  415363:	push   eax
  415364:	inc    ecx
  415365:	push   0x15
  415367:	sub    eax,0xc6fb0bfc
  41536c:	fld    DWORD PTR [ebx-0x10a4da57]
  415372:	jo     0x41530e
  415374:	call   0x2aa3:0x9b4a746c
  41537b:	in     eax,dx
  41537c:	or     ecx,ebp
  41537e:	jmp    0x41530d
  415380:	call   0xd803c159
  415385:	xor    ecx,ebx
  415387:	aad    0xc8
  415389:	fisttp DWORD PTR [eax+0x654ec95a]
  41538f:	cdq    
  415390:	inc    ebp
  415391:	mov    esi,0x497d3c71
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	sbb    BYTE PTR [edx-0x5],0x9a
  41539b:	dec    ebp
  41539c:	ins    DWORD PTR es:[edi],dx
  41539d:	hlt    
  41539e:	fwait
  41539f:	aaa    
  4153a0:	xchg   ah,bh
  4153a2:	ffreep st(4)
  4153a4:	std    
  4153a5:	frstor [eax]
  4153a7:	(bad)  [ebx-0x3a87b62f]
  4153ad:	cbw    
  4153af:	fistp  WORD PTR ds:0xd22abb7b
  4153b5:	push   ebx
  4153b6:	mov    edi,0x826fc9a0
  4153bb:	jl     0x41536c
  4153bd:	lods   al,BYTE PTR ds:[esi]
  4153be:	cmp    ah,BYTE PTR [eax]
  4153c0:	rol    DWORD PTR [esi+0x17],1
  4153c3:	out    dx,al
  4153c4:	ds cwde 
  4153c6:	int3   
  4153c7:	and    BYTE PTR [esi],al
  4153c9:	repz or ebx,ecx
  4153cc:	out    0xe5,eax
  4153ce:	sbb    DWORD PTR [edx],esp
  4153d0:	pop    ebx
  4153d1:	pop    es
  4153d2:	adc    eax,0x5c406a4a
  4153d7:	mov    eax,ebx
  4153d9:	dec    edx
  4153da:	cmp    dl,BYTE PTR [edx-0x80]
  4153dd:	dec    edx
  4153de:	adc    esp,DWORD PTR [ebp+0x2c26a76f]
  4153e4:	sahf   
  4153e5:	mov    edx,fs
  4153e7:	aaa    
  4153e8:	push   cs
  4153e9:	pop    ss
  4153ea:	cmovge eax,DWORD PTR [eax+edx*1]
  4153ee:	int3   
  4153ef:	jl     0x41545f
  4153f1:	mov    esi,0x1fba3478
  4153f6:	inc    edi
  4153f7:	push   es
  4153f8:	ins    BYTE PTR es:[edi],dx
  4153f9:	push   ecx
  4153fa:	fcmovnbe st,st(4)
  4153fc:	popa   
  4153fd:	daa    
  4153fe:	mov    dl,0x94
  415400:	sbb    eax,0xf2f7a59f
  415405:	gs sahf 
  415407:	jle    0x41539b
  415409:	xchg   ebp,eax
  41540a:	mov    ch,0x38
  41540c:	(bad)  
  41540d:	mov    dl,BYTE PTR [esi+esi*2-0x23ae565f]
  415414:	mov    BYTE PTR [ecx-0x777589b7],bl
  41541a:	or     ebx,esi
  41541c:	les    eax,FWORD PTR [edx]
  41541e:	call   0x2f3:0xcbd4b781
  415425:	outs   dx,DWORD PTR ds:[esi]
  415426:	loope  0x41545b
  415428:	out    dx,eax
  415429:	mov    ebx,0x513bc0fe
  41542e:	fdivr  st,st(4)
  415430:	jecxz  0x41548f
  415432:	cld    
  415433:	pop    es
  415434:	jmp    0xe4e656e6
  415439:	sbb    edx,0x47
  41543c:	mov    dl,0x58
  41543e:	inc    esp
  41543f:	aam    0xa1
  415441:	shl    BYTE PTR [ecx+0x4d],cl
  415444:	or     DWORD PTR [ebx-0x3fc26ba],edx
  41544a:	xchg   esp,eax
  41544b:	es stos DWORD PTR es:[edi],eax
  41544d:	pop    ebp
  41544e:	xchg   edx,eax
  41544f:	add    DWORD PTR [ebp+edx*1-0x14b51367],ebx
  415456:	jno    0x415486
  415458:	arpl   bp,bx
  41545a:	repz mov ds:0x8b880e01,al
  415460:	je     0x4154cf
  415462:	mov    esp,0x8b3bfc9
  415467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415468:	cli    
  415469:	dec    esp
  41546a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41546b:	cs stos BYTE PTR es:[edi],al
  41546d:	dec    edi
  41546e:	into   
  41546f:	pop    ss
  415470:	mov    BYTE PTR [ebx+0x29089e2f],bl
  415476:	xor    DWORD PTR [ebx],ebp
  415478:	xchg   esi,eax
  415479:	add    eax,0xbb1a60f6
  41547e:	and    DWORD PTR [ebx+0x73],ebp
  415481:	dec    esi
  415482:	stos   BYTE PTR es:[edi],al
  415483:	xchg   ebx,eax
  415484:	and    eax,0xa7b766db
  415489:	sbb    bh,BYTE PTR [edi]
  41548b:	add    eax,0xf9c9b3f6
  415490:	out    0x40,al
  415492:	push   0xffffffec
  415494:	sub    eax,0x6396745e
  415499:	jmp    0x3864ade5
  41549e:	mov    esi,0x853f3604
  4154a3:	sbb    DWORD PTR [esp+eax*2-0x1d],edi
  4154a7:	xchg   edx,eax
  4154a8:	mov    edi,ecx
  4154aa:	pop    ss
  4154ab:	sbb    ebp,ecx
  4154ad:	imul   esp,DWORD PTR [esi],0x26
  4154b0:	and    eax,0xa7fe84eb
  4154b5:	mov    eax,0x7b4e050c
  4154ba:	fidivr WORD PTR [edi]
  4154bc:	outs   dx,BYTE PTR ds:[esi]
  4154bd:	jp     0x41548b
  4154bf:	and    bh,bl
  4154c1:	mov    dh,0x1f
  4154c3:	mov    al,0xf3
  4154c5:	aad    0x80
  4154c7:	xchg   esi,eax
  4154c8:	dec    ebp
  4154c9:	aas    
  4154ca:	cmp    ah,BYTE PTR [eax]
  4154cc:	push   eax
  4154cd:	inc    edx
  4154ce:	loope  0x415517
  4154d0:	(bad)  
  4154d1:	and    ah,dl
  4154d3:	sbb    cl,BYTE PTR [eax]
  4154d5:	scas   al,BYTE PTR es:[edi]
  4154d6:	jmp    0x10fe:0xc5ddeda
  4154dd:	and    ebp,DWORD PTR [edi+0x16b4030]
  4154e3:	sub    eax,DWORD PTR [ebp-0x11]
  4154e6:	xor    eax,0xb915e064
  4154eb:	pop    ds
  4154ec:	jo     0x41555c
  4154ee:	mov    edx,0xefe7cc6f
  4154f3:	xor    al,0x45
  4154f5:	and    cl,BYTE PTR [esi-0x75]
  4154f8:	loop   0x415540
  4154fa:	in     al,0xc6
  4154fc:	mov    edx,0xebb3bd20
  415501:	jo     0x4154b5
  415503:	icebp  
  415504:	xor    bl,BYTE PTR [ebx+0x4b1868b1]
  41550a:	push   esi
  41550b:	pop    edx
  41550c:	mov    al,0x7b
  41550e:	out    dx,al
  41550f:	jns    0x4154ea
  415511:	mov    ecx,0x955cb54c
  415516:	cmp    al,0x6c
  415518:	xchg   ecx,eax
  415519:	adc    bl,BYTE PTR [edx-0x1851bf46]
  41551f:	xor    eax,edi
  415521:	and    eax,0xdac76857
  415526:	inc    esp
  415527:	das    
  415528:	and    BYTE PTR [esi+edi*4+0x63],ch
  41552c:	test   al,0x42
  41552e:	stos   BYTE PTR es:[edi],al
  41552f:	fbld   TBYTE PTR [ebp-0x52]
  415532:	fwait
  415533:	mov    ecx,0x6fc748bb
  415538:	in     eax,0x61
  41553a:	jecxz  0x4154d8
  41553c:	lds    ebp,FWORD PTR [ebx]
  41553e:	fiadd  DWORD PTR [esi+0x2caf78a6]
  415544:	mov    ds:0x235ff0a9,eax
  415549:	leave  
  41554a:	cmp    al,0x1f
  41554c:	xchg   esi,eax
  41554d:	test   eax,0x33c81ec9
  415552:	in     eax,0x69
  415554:	call   0xd9bc:0x391af9cb
  41555b:	fwait
  41555c:	repz sahf 
  41555e:	inc    ebx
  41555f:	pop    ss
  415560:	dec    ebp
  415561:	pop    ebx
  415562:	jle    0x4155bd
  415564:	push   ebp
  415565:	jge    0x415516
  415567:	mov    fs,edi
  415569:	outs   dx,BYTE PTR ds:[esi]
  41556a:	aam    0x7b
  41556c:	pop    ss
  41556d:	adc    ebp,0x34
  415570:	xchg   esi,eax
  415571:	dec    edx
  415572:	outs   dx,BYTE PTR ds:[esi]
  415573:	cmp    ah,BYTE PTR [esi+0x5f]
  415576:	aas    
  415577:	and    al,0xe6
  415579:	push   0xffffff9e
  41557b:	in     eax,0x4d
  41557d:	xor    dh,BYTE PTR [edx]
  41557f:	inc    edx
  415580:	pop    edi
  415581:	mov    esp,0x1a4ff91d
  415587:	or     BYTE PTR [ecx-0x2b],dh
  41558a:	fistp  DWORD PTR [ebp+0x20]
  41558d:	(bad)  
  41558e:	fidiv  DWORD PTR [edi]
  415590:	fucomi st,st(4)
  415592:	jns    0x4155e0
  415594:	int    0x67
  415596:	je     0x415565
  415598:	out    dx,eax
  415599:	mov    edx,0x7b74f3b8
  41559e:	mov    DWORD PTR [ecx+0x38141327],ecx
  4155a4:	hlt    
  4155a5:	mov    eax,DWORD PTR [edx-0x1a]
  4155a8:	cld    
  4155a9:	jmp    0x6164804a
  4155ae:	adc    ah,BYTE PTR [ebx]
  4155b0:	sub    dx,WORD PTR [eax]
  4155b3:	pushf  
  4155b4:	fistp  QWORD PTR [ecx]
  4155b6:	inc    edi
  4155b7:	push   ebp
  4155b8:	pop    ecx
  4155b9:	dec    esp
  4155ba:	and    al,0x4c
  4155bc:	addr16 mov edx,0x8e916bb5
  4155c2:	xor    edx,DWORD PTR [eax]
  4155c4:	ds jbe 0x4155b1
  4155c7:	mov    WORD PTR [ecx+0x5f],cs
  4155ca:	mov    bh,0x78
  4155cc:	jmp    0x296f0bdc
  4155d1:	jmp    DWORD PTR [bx]
  4155d4:	and    eax,0x150cb4a6
  4155d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155da:	pop    eax
  4155db:	jle    0x415600
  4155dd:	mov    edx,0xe9d5d791
  4155e2:	test   al,0xea
  4155e4:	push   ebp
  4155e5:	dec    edx
  4155e6:	bound  ebx,QWORD PTR [esp+ecx*2-0x41]
  4155ea:	in     al,0xb1
  4155ec:	fsubr  st,st(7)
  4155ee:	add    DWORD PTR [eax+ebx*2-0x55],edi
  4155f2:	sub    eax,0x845d9d5
  4155f7:	push   eax
  4155f8:	jle    0x41562b
  4155fa:	pusha  
  4155fb:	xchg   esp,eax
  4155fc:	iret   
  4155fd:	retf   
  4155fe:	inc    eax
  4155ff:	aam    0x23
  415601:	jge    0x415613
  415603:	(bad)  
  415604:	xor    ecx,ebx
  415606:	jle    0x415639
  415608:	clc    
  415609:	cmp    eax,0x54792a22
  41560e:	loop   0x4155bc
  415610:	popa   
  415611:	xor    DWORD PTR [ebx],edx
  415613:	sbb    eax,0x67b00504
  415618:	jle    0x415690
  41561a:	push   ss
  41561b:	cmc    
  41561c:	xor    ebx,DWORD PTR [edi]
  41561e:	aam    0x7a
  415620:	lods   eax,DWORD PTR ds:[esi]
  415621:	fsub   DWORD PTR [edi+edi*2-0x31]
  415625:	data16 aad 0x10
  415628:	jg     0x415668
  41562a:	stc    
  41562b:	pop    ecx
  41562c:	and    BYTE PTR [ecx+0x61c063cc],0x17
  415633:	retf   
  415634:	push   edi
  415635:	aaa    
  415636:	jg     0x4155cd
  415638:	jo     0x415677
  41563a:	es cmp dh,ch
  41563d:	jnp    0x415677
  41563f:	mov    dh,0xca
  415641:	pusha  
  415642:	push   0x63
  415644:	jnp    0x4155e0
  415646:	or     eax,0x936c3bec
  41564b:	xor    al,0xc5
  41564d:	sub    bl,BYTE PTR [edx]
  41564f:	add    DWORD PTR [edx+esi*8+0x5f66960d],esi
  415656:	xchg   edi,eax
  415657:	push   ecx
  415658:	arpl   WORD PTR [edi+0x2879a37b],cx
  41565e:	add    dh,ch
  415660:	xchg   ebx,eax
  415661:	out    0x2b,al
  415663:	adc    bh,BYTE PTR [ebx]
  415665:	leave  
  415666:	pop    ds
  415667:	push   edx
  415668:	out    0x58,al
  41566a:	jno    0x4156c6
  41566c:	idiv   DWORD PTR cs:[edi+0x464e0832]
  415673:	idiv   DWORD PTR ds:0xd32da430
  415679:	xchg   ebx,eax
  41567a:	gs add al,0x2c
  41567d:	call   0x91ed0877
  415682:	mov    edi,0xa553127e
  415687:	xchg   BYTE PTR [ebx+0x5c],al
  41568a:	mov    edi,0x6e9ded59
  41568f:	fsubr  DWORD PTR [eax]
  415691:	adc    eax,0xf0f537b9
  415696:	add    BYTE PTR [esi+0x68],al
  415699:	jge    0x4156f4
  41569b:	sbb    eax,0x47e728c8
  4156a0:	xchg   DWORD PTR [edi-0x3b],edi
  4156a3:	bound  ebx,QWORD PTR [ecx-0x5274fb97]
  4156a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156aa:	push   ss
  4156ab:	adc    ebp,esp
  4156ad:	xor    eax,ebp
  4156af:	hlt    
  4156b0:	out    0x2,al
  4156b2:	jo     0x4156f9
  4156b4:	xor    eax,edi
  4156b6:	xor    BYTE PTR [eax+0x5f3d3e8e],al
  4156bc:	mov    ebp,0x2f4851ef
  4156c1:	mov    ch,0xb6
  4156c3:	mov    ebp,0xba48913f
  4156c8:	shl    DWORD PTR [ecx],0xfe
  4156cb:	retf   
  4156cc:	cmp    BYTE PTR [eax+0x38a2e8d5],0x2e
  4156d3:	aas    
  4156d4:	aaa    
  4156d5:	jns    0x415735
  4156d7:	(bad)  
  4156d8:	pop    ebp
  4156d9:	push   ds
  4156da:	mov    ebx,0xbf953ecd
  4156df:	iret   
  4156e0:	xor    al,0x1b
  4156e2:	stos   BYTE PTR es:[edi],al
  4156e3:	pop    edx
  4156e4:	ins    DWORD PTR es:[edi],dx
  4156e5:	imul   esi,DWORD PTR [eax+0x7d],0x74
  4156e9:	jge    0x415695
  4156eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ec:	mov    ecx,ebx
  4156ee:	das    
  4156ef:	(bad)  
  4156f0:	in     eax,dx
  4156f1:	xchg   esp,eax
  4156f2:	mov    ds:0x9a8870ba,eax
  4156f7:	mov    BYTE PTR [edx],ah
  4156f9:	loope  0x4156fe
  4156fb:	jmp    0xd11bb963
  415700:	shr    BYTE PTR [ecx],1
  415702:	in     eax,0xf
  415704:	pushf  
  415705:	lock (bad) 
  415707:	jp     0x415780
  415709:	psrad  mm0,QWORD PTR [ecx+ebp*8]
  41570d:	jl     0x41574f
  41570f:	xchg   esp,eax
  415710:	pop    ebp
  415711:	mov    esp,DWORD PTR [ebx+0x1e]
  415714:	les    eax,FWORD PTR [eax+0x7eb69e91]
  41571a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571b:	sub    DWORD PTR [ecx-0x67d8eaac],ebp
  415721:	xchg   ecx,eax
  415722:	fstp   TBYTE PTR [ecx-0x5d6a2089]
  415728:	pop    ebx
  415729:	pop    ss
  41572a:	lahf   
  41572b:	lods   al,BYTE PTR ds:[esi]
  41572c:	pop    ebx
  41572d:	call   0x25a4:0x9afdd432
  415734:	icebp  
  415735:	cmp    eax,DWORD PTR [ecx]
  415737:	push   ebx
  415738:	jecxz  0x41571e
  41573a:	push   esi
  41573b:	fild   DWORD PTR [edi-0x77a852bd]
  415741:	pop    ecx
  415742:	sbb    eax,0xf297cfc9
  415747:	push   0xffffffc0
  415749:	ins    BYTE PTR es:[edi],dx
  41574a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41574b:	cmp    BYTE PTR [edi+ebx*4+0x7b],bh
  41574f:	call   0x1a48:0xaf816cd5
  415756:	and    eax,0xfe7c5fee
  41575b:	fsub   DWORD PTR [ebp-0x63443140]
  415761:	xor    eax,0x8744f734
  415766:	adc    eax,ecx
  415768:	je     0x415711
  41576a:	jae    0x4156ff
  41576c:	test   eax,0xdc28e22f
  415772:	xlat   BYTE PTR ds:[ebx]
  415773:	mov    ds:0x52d0a78f,eax
  415778:	mov    ds:0x14e7f52a,al
  41577d:	cmc    
  41577e:	pop    ebp
  41577f:	dec    ebp
  415780:	ds inc edx
  415782:	sbb    BYTE PTR [eax],dh
  415784:	outs   dx,DWORD PTR ds:[esi]
  415785:	jnp    0x415767
  415787:	lock ret 0xfc4f
  41578b:	pushf  
  41578c:	cmp    al,0x4b
  41578e:	scas   al,BYTE PTR es:[edi]
  41578f:	sub    al,0x40
  415791:	sahf   
  415792:	arpl   WORD PTR [eax-0x75],ax
  415795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415796:	out    0x7d,al
  415798:	int3   
  415799:	push   ebp
  41579a:	mov    ebx,DWORD PTR [ebp+0x1f25fa7b]
  4157a0:	dec    esi
  4157a1:	mov    ds:0x65b33112,eax
  4157a6:	pop    ds
  4157a7:	jno    0x415800
  4157a9:	aam    0x57
  4157ab:	mov    ds,edi
  4157ad:	inc    ebx
  4157ae:	pop    DWORD PTR [esi-0x18cd65c9]
  4157b4:	mov    al,ds:0xf683c4d9
  4157b9:	test   eax,0x7ac2eb34
  4157be:	(bad)  ds:0xff945817
  4157c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c5:	jmp    0x34f65a29
  4157ca:	lods   eax,DWORD PTR ds:[esi]
  4157cb:	inc    BYTE PTR [edx-0x62]
  4157ce:	adc    al,0xd6
  4157d0:	and    eax,0xc638b0f1
  4157d5:	fcmovb st,st(4)
  4157d7:	int3   
  4157d8:	ret    0xbff2
  4157db:	shl    DWORD PTR [edi+0x11876212],cl
  4157e1:	scas   al,BYTE PTR es:[edi]
  4157e2:	std    
  4157e3:	and    cl,BYTE PTR [edi]
  4157e5:	xchg   esi,eax
  4157e6:	stc    
  4157e7:	pop    ss
  4157e8:	mov    ecx,0x912b8f9b
  4157ed:	rcl    DWORD PTR [ebp+0x6d],0xfb
  4157f1:	and    BYTE PTR [ebx-0x32],ch
  4157f4:	popf   
  4157f5:	add    al,0x68
  4157f7:	mov    BYTE PTR [ecx-0x70b92823],dl
  4157fd:	sbb    eax,0x16e7e49f
  415802:	inc    edi
  415803:	sbb    eax,0x96ea17ff
  415808:	push   edi
  415809:	sub    eax,0xea6f24e5
  41580e:	repz rcr ebx,1
  415811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415812:	sub    DWORD PTR [ebx],esi
  415814:	add    al,0x27
  415816:	imul   eax,DWORD PTR [ecx+0x5032747e],0x8dc58af3
  415820:	lds    ebx,FWORD PTR [ebp+0x2024eddc]
  415826:	jne    0x415856
  415828:	mov    edi,0xe83f595b
  41582d:	ja     0x415853
  41582f:	shr    DWORD PTR [eax],cl
  415831:	mov    al,ds:0xb00ff78e
  415836:	cmp    ch,BYTE PTR ds:0x955fe687
  41583c:	pop    edi
  41583d:	lock lods eax,DWORD PTR ds:[esi]
  41583f:	jecxz  0x415856
  415841:	dec    ebp
  415842:	sub    ecx,DWORD PTR [ecx-0x7f]
  415845:	pop    edi
  415846:	sbb    ebx,DWORD PTR [esi]
  415848:	xor    DWORD PTR [esi],0x51
  41584b:	call   0xb9348d85
  415850:	in     al,0x92
  415852:	out    0x43,al
  415854:	idiv   DWORD PTR [edi+esi*2]
  415857:	rcr    BYTE PTR [ecx-0x7c],cl
  41585a:	inc    edi
  41585b:	and    ebx,esp
  41585d:	arpl   WORD PTR [eax-0x39952901],si
  415863:	inc    esp
  415864:	fnstenv [edi+0x7d]
  415867:	nop
  415868:	push   0x7c22e60c
  41586d:	jnp    0x415807
  41586f:	daa    
  415870:	dec    edi
  415871:	jecxz  0x41586a
  415873:	in     al,0x72
  415875:	scas   eax,DWORD PTR es:[edi]
  415876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415877:	dec    ecx
  415878:	mov    eax,0xa224006
  41587d:	arpl   bp,dx
  41587f:	stc    
  415880:	je     0x4158eb
  415882:	ret    
  415883:	add    eax,0x2bcd0775
  415888:	pop    esi
  415889:	adc    eax,0x2a1bc4ff
  41588e:	inc    edi
  41588f:	leave  
  415890:	or     bl,BYTE PTR [edi]
  415892:	icebp  
  415893:	sub    al,0x3e
  415895:	pusha  
  415896:	into   
  415897:	xor    BYTE PTR [edi],0xb3
  41589a:	push   ecx
  41589b:	push   ss
  41589c:	ja     0x41587c
  41589e:	pop    esi
  41589f:	pop    esi
  4158a0:	mov    bh,0x26
  4158a2:	adc    DWORD PTR [ebp-0x17],ebp
  4158a5:	push   edx
  4158a6:	xchg   edi,eax
  4158a7:	das    
  4158a8:	mov    al,0x0
  4158aa:	jae    0x415877
  4158ac:	int3   
  4158ad:	bound  ebp,QWORD PTR [eax-0x356f2791]
  4158b3:	and    BYTE PTR [ecx+edx*8-0x31bb3af3],0x63
  4158bb:	xchg   edx,eax
  4158bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158bd:	sub    DWORD PTR [edi],esp
  4158bf:	pop    ebp
  4158c0:	cwde   
  4158c1:	call   0xa5ac:0x13a05b2a
  4158c8:	aaa    
  4158c9:	mov    ecx,0x2482195e
  4158ce:	inc    eax
  4158cf:	add    DWORD PTR [ebp+0xf],edi
  4158d2:	dec    eax
  4158d3:	xchg   edi,eax
  4158d4:	and    BYTE PTR [ebx+0x69],0x40
  4158d8:	call   0xce05:0xeca513e1
  4158df:	and    al,BYTE PTR [ecx]
  4158e1:	sub    BYTE PTR ds:0xd2c224ce,cl
  4158e7:	ins    DWORD PTR es:[edi],dx
  4158e8:	ins    BYTE PTR es:[edi],dx
  4158e9:	fadd   QWORD PTR [eax+0x67f65f27]
  4158ef:	loopne 0x41596f
  4158f1:	mov    ds:0xad00c328,al
  4158f6:	in     al,dx
  4158f7:	sub    ecx,DWORD PTR [edi-0x3c26b688]
  4158fd:	iret   
  4158fe:	loopne 0x4158f2
  415900:	rcl    BYTE PTR [edi-0x149c7c85],0x40
  415907:	iret   
  415908:	mov    bh,0x53
  41590a:	test   eax,0x13b3673c
  41590f:	cmp    edi,DWORD PTR [ecx-0x40babbd6]
  415915:	jge    0x41594a
  415917:	mov    cl,BYTE PTR [ebp+0x548ac99a]
  41591d:	shr    BYTE PTR [ebx],0xcf
  415920:	push   0xffffff98
  415922:	lea    esp,[edi]
  415924:	aam    0xe2
  415926:	adc    bl,BYTE PTR [edx+0x6b168d8e]
  41592c:	push   cs
  41592d:	loop   0x415937
  41592f:	or     al,0x7e
  415931:	aad    0xf2
  415933:	mov    al,0xfb
  415935:	xor    ch,BYTE PTR [edx]
  415937:	lea    edx,[edx-0x52]
  41593a:	ja     0x415930
  41593c:	and    edi,ebx
  41593e:	nop
  41593f:	sub    ah,BYTE PTR [esi]
  415941:	pop    ecx
  415942:	add    DWORD PTR [ecx+0x1aa120a],edi
  415948:	ficomp DWORD PTR [eax-0x27]
  41594b:	out    dx,al
  41594c:	rcl    DWORD PTR [edx+edx*2+0x7ab57774],cl
  415953:	mov    al,ds:0x3e5387b8
  415958:	jnp    0x415919
  41595a:	loope  0x4159d1
  41595c:	int3   
  41595d:	retf   0x3db0
  415960:	dec    DWORD PTR [edi]
  415962:	mov    eax,ds:0x209dc4b
  415967:	loopne 0x41595b
  415969:	pop    esi
  41596a:	dec    ebp
  41596b:	and    ch,BYTE PTR [eax]
  41596d:	inc    ebp
  41596e:	push   0xffffffa2
  415970:	hlt    
  415971:	add    al,0xec
  415973:	sti    
  415974:	mov    eax,ds:0xee9a1737
  415979:	je     0x415950
  41597b:	pop    ebx
  41597c:	pmulhw mm3,QWORD PTR [esi+0x23]
  415980:	lods   eax,DWORD PTR ds:[esi]
  415981:	cli    
  415982:	inc    esi
  415983:	mov    bh,0x47
  415985:	cld    
  415986:	xchg   edx,eax
  415987:	aaa    
  415988:	dec    edx
  415989:	add    bl,BYTE PTR [ebx-0x7eeb23cc]
  41598f:	mov    eax,0xb34bdfc0
  415994:	lea    ecx,[edi]
  415996:	cli    
  415997:	bound  esi,QWORD PTR [ebp-0x151d2bba]
  41599d:	outs   dx,DWORD PTR ds:[esi]
  41599e:	inc    ecx
  41599f:	push   es
  4159a0:	push   ss
  4159a1:	pop    edi
  4159a2:	add    al,0xa
  4159a4:	arpl   dx,ax
  4159a6:	data16 shr BYTE PTR [ecx-0x2f453e99],cl
  4159ad:	push   esp
  4159ae:	lea    ebx,[edi]
  4159b0:	mov    ebp,0xc487455a
  4159b5:	fidivr WORD PTR [eax]
  4159b7:	push   ds
  4159b8:	out    dx,al
  4159b9:	cld    
  4159ba:	push   esp
  4159bb:	push   eax
  4159bc:	ret    0xcac4
  4159bf:	clc    
  4159c0:	and    eax,0xe8dffd7
  4159c5:	pop    ebp
  4159c6:	mov    ecx,0x4a8e7b7c
  4159cb:	fs out 0x1f,al
  4159ce:	pop    ds
  4159cf:	sbb    eax,0x9f6eb239
  4159d5:	aaa    
  4159d6:	push   cs
  4159d7:	mov    edi,edi
  4159d9:	gs xor al,0xa0
  4159dc:	cmp    ch,BYTE PTR [eax-0x744068f9]
  4159e2:	mov    ch,0x79
  4159e4:	aam    0xb1
  4159e6:	inc    edi
  4159e7:	addr16 pushf 
  4159e9:	push   ss
  4159ea:	sbb    al,0x6b
  4159ec:	cmp    eax,0x64358996
  4159f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f2:	or     cl,0x32
  4159f5:	pop    edx
  4159f6:	sbb    eax,0xfd3ae229
  4159fb:	add    ecx,eax
  4159fd:	std    
  4159fe:	call   0x6c90:0x7243be2b
  415a05:	push   0x1cfe672e
  415a0a:	or     BYTE PTR [eax+0x68],dl
  415a0d:	jp     0x4159bd
  415a0f:	mov    edi,0x8331e11e
  415a14:	mov    esi,edi
  415a16:	jo     0x4159fc
  415a18:	dec    eax
  415a19:	iret   
  415a1a:	xchg   ecx,eax
  415a1b:	mov    eax,ds:0x3aec99c4
  415a20:	outs   dx,BYTE PTR ds:[esi]
  415a21:	push   eax
  415a22:	mov    BYTE PTR [esi],dh
  415a24:	cld    
  415a25:	cmp    ebx,DWORD PTR cs:[ebx+0x46]
  415a29:	or     eax,0x559eaf7e
  415a2e:	push   0xffffffdc
  415a30:	ret    
  415a31:	mov    edx,0xd8759fb4
  415a36:	mov    bh,0x1f
  415a38:	jp     0x415a82
  415a3a:	ret    
  415a3b:	jecxz  0x415aa6
  415a3d:	mov    eax,ds:0xcdee4177
  415a42:	sub    BYTE PTR [eax+eax*1-0x64],al
  415a46:	(bad)  
  415a47:	mov    edx,0x2b06196c
  415a4c:	dec    esi
  415a4d:	sti    
  415a4e:	jl     0x415aca
  415a50:	imul   edx,DWORD PTR [ebx+0x5e1afec4],0x75b418f0
  415a5a:	outs   dx,BYTE PTR ds:[esi]
  415a5b:	jmp    0x415a99
  415a5d:	bound  esp,QWORD PTR [ebp+0x6352724c]
  415a63:	dec    ebp
  415a64:	sub    al,0xed
  415a66:	add    dh,BYTE PTR [eax+0x1b1c062d]
  415a6c:	ds xchg edi,eax
  415a6e:	fwait
  415a6f:	scas   eax,DWORD PTR es:[edi]
  415a70:	mov    al,0x77
  415a72:	loope  0x415a0a
  415a74:	(bad)  [ebx]
  415a76:	ja     0x415a26
  415a78:	(bad)
  415a7c:	cmp    al,0xba
  415a7e:	cwde   
  415a7f:	or     al,0xfa
  415a81:	outs   dx,BYTE PTR ds:[esi]
  415a82:	aas    
  415a83:	int    0x5a
  415a85:	sub    al,0xcf
  415a87:	icebp  
  415a88:	pop    esp
  415a89:	mov    eax,0xbf947310
  415a8e:	jno    0x415aa6
  415a90:	enter  0xe194,0x44
  415a94:	fnstcw WORD PTR [edx+0x9]
  415a97:	or     eax,0x5ab54c5e
  415a9c:	(bad)
  415a9f:	rcl    bh,1
  415aa1:	nop
  415aa2:	and    eax,0x112ffdd4
  415aa7:	shl    BYTE PTR [ebx-0x1e],1
  415aaa:	cs and al,0xd3
  415aad:	inc    edi
  415aae:	(bad)  
  415aaf:	and    esp,DWORD PTR [esi-0x4d]
  415ab2:	inc    esi
  415ab3:	popa   
  415ab4:	push   ecx
  415ab5:	inc    esi
  415ab6:	outs   dx,DWORD PTR ds:[esi]
  415ab7:	sbb    al,0xfe
  415ab9:	(bad)  
  415aba:	cs loope 0x415ae1
  415abd:	inc    ebp
  415abe:	mov    edx,0x32dc6a73
  415ac3:	xchg   edi,eax
  415ac4:	mov    edi,0x628c87f1
  415ac9:	pop    ebx
  415aca:	xor    eax,0x5abe00be
  415acf:	push   ds
  415ad0:	jo     0x415add
  415ad2:	adc    eax,0x318f0141
  415ad7:	lock fmul st(3),st
  415ada:	pusha  
  415adb:	sti    
  415adc:	xlat   BYTE PTR ds:[ebx]
  415add:	mov    edx,0x8f38c82
  415ae2:	jo     0x415af1
  415ae4:	sbb    ch,dl
  415ae6:	and    DWORD PTR [edi],0x6a024d16
  415aec:	pop    esp
  415aed:	xchg   esi,eax
  415aee:	lods   eax,DWORD PTR ds:[esi]
  415aef:	sub    bl,BYTE PTR [eax]
  415af1:	mov    bh,0x99
  415af3:	adc    al,0x4b
  415af5:	adc    edx,DWORD PTR [edx]
  415af7:	jo     0x415b23
  415af9:	push   edx
  415afa:	jmp    0x382fcac5
  415aff:	addr16 int3 
  415b01:	xor    bh,BYTE PTR ds:0x3f71b953
  415b07:	nop
  415b08:	sub    eax,0x3e62fce6
  415b0d:	outs   dx,BYTE PTR ds:[esi]
  415b0e:	jns    0x415b3f
  415b10:	out    0x38,al
  415b12:	mov    al,0x92
  415b14:	stos   DWORD PTR es:[edi],eax
  415b15:	xor    bh,BYTE PTR [ecx-0x45]
  415b18:	and    eax,0x4e10be95
  415b1d:	mov    ebx,0x5df5b108
  415b22:	ror    BYTE PTR [edx],1
  415b24:	out    0x11,al
  415b26:	push   ecx
  415b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b28:	cmp    BYTE PTR [eax],0xcb
  415b2b:	mov    eax,ds:0xb84b42c3
  415b30:	inc    esi
  415b31:	hlt    
  415b32:	(bad)  
  415b33:	mov    bl,0x5
  415b35:	and    bl,BYTE PTR ds:0x826f5860
  415b3b:	bound  ecx,QWORD PTR [ecx+ecx*1-0x57]
  415b3f:	and    BYTE PTR [ebx+0x6d],dh
  415b42:	xchg   ebp,eax
  415b43:	sbb    BYTE PTR [eax+0x163d7a98],cl
  415b49:	mov    ds:0x56a0e78f,eax
  415b4e:	data16 sub bh,cl
  415b51:	(bad)  
  415b53:	jo     0x415ad6
  415b55:	ds gs jl 0x415bb1
  415b59:	rcl    DWORD PTR ds:0x57700ba3,0xda
  415b60:	mov    al,ds:0x7c7a9ba4
  415b65:	call   0x372b:0xe8d7b686
  415b6c:	push   esp
  415b6d:	or     al,0x15
  415b6f:	jp     0x415b79
  415b71:	pusha  
  415b72:	or     eax,0x62909674
  415b77:	or     eax,0x35e212f5
  415b7c:	js     0x415b63
  415b7e:	std    
  415b7f:	mov    bl,0x59
  415b81:	dec    ecx
  415b82:	sbb    DWORD PTR [edx+0x2],esi
  415b85:	push   edx
  415b86:	(bad)  
  415b88:	fisttp QWORD PTR [ecx+edi*4-0x3d]
  415b8c:	les    ecx,FWORD PTR [esi+edx*4+0x65]
  415b90:	jmp    0x415bae
  415b92:	(bad)  
  415b93:	lods   al,BYTE PTR ds:[esi]
  415b94:	pop    ebx
  415b95:	push   edi
  415b96:	pop    eax
  415b97:	les    esp,FWORD PTR [ebx+0x2a7044fb]
  415b9d:	adc    BYTE PTR [edx],cl
  415b9f:	js     0x415bf6
  415ba1:	cmp    al,0x85
  415ba3:	or     DWORD PTR [ebp+0xe],esp
  415ba6:	arpl   WORD PTR [edi+ebp*1],bp
  415ba9:	inc    esi
  415baa:	or     eax,0x86bdd105
  415baf:	scas   eax,DWORD PTR es:[edi]
  415bb0:	inc    ecx
  415bb1:	mov    al,0x95
  415bb3:	es and al,0x62
  415bb6:	dec    ecx
  415bb7:	cli    
  415bb8:	pop    DWORD PTR [eax]
  415bba:	and    ecx,DWORD PTR [esi]
  415bbc:	sub    DWORD PTR [esi],ebp
  415bbe:	or     BYTE PTR [edx],bh
  415bc0:	xor    esi,ecx
  415bc2:	movsx  esp,BYTE PTR [edx+0x3e]
  415bc6:	adc    ebx,DWORD PTR [eax]
  415bc8:	adc    DWORD PTR [esi+0x32202104],ecx
  415bce:	jne    0x415c0b
  415bd0:	jnp    0x415bd2
  415bd2:	mov    DWORD PTR ds:0xe4ba4c55,0xa07f44a1
  415bdc:	push   cs
  415bdd:	(bad)  
  415bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bdf:	sub    ebp,DWORD PTR [ebp+0x5d]
  415be2:	shl    BYTE PTR [edx-0x7d6562cd],0xf0
  415be9:	cmp    eax,0x805acf61
  415bee:	inc    ebp
  415bef:	retf   
  415bf0:	adc    BYTE PTR [ecx],dl
  415bf2:	mov    esi,0xe02abcc7
  415bf7:	add    BYTE PTR [ebx-0x2b5fe4e],ch
  415bfd:	scas   eax,DWORD PTR es:[edi]
  415bfe:	cmp    eax,0x15a2075b
  415c03:	fucom  st(3)
  415c05:	test   bh,al
  415c07:	fiadd  WORD PTR [ecx-0x1a]
  415c0a:	add    eax,0x10ed888
  415c0f:	sbb    al,0x29
  415c11:	lods   eax,DWORD PTR ds:[esi]
  415c12:	out    dx,al
  415c13:	mov    cl,0xee
  415c15:	adc    al,0x38
  415c17:	inc    edx
  415c18:	mov    ah,0x8d
  415c1a:	mov    dl,0x4f
  415c1c:	pop    es
  415c1d:	lock pop esp
  415c1f:	sub    eax,0xc73eb82
  415c24:	(bad)  
  415c25:	fisubr WORD PTR [esi+eax*8+0x7ef03ff0]
  415c2c:	and    bh,ch
  415c2e:	pop    esi
  415c2f:	and    cl,bh
  415c31:	in     al,dx
  415c32:	shl    dl,1
  415c34:	aam    0xcd
  415c36:	enter  0x13e4,0x98
  415c3a:	inc    BYTE PTR [edi-0x47fb6608]
  415c40:	xor    BYTE PTR [edi+0xd2619b6],dl
  415c46:	mov    WORD PTR [edi-0x1fd0400d],ds
  415c4c:	or     al,0xf4
  415c4e:	int    0xd6
  415c50:	cmc    
  415c51:	scas   al,BYTE PTR es:[edi]
  415c52:	fsubr  st(1),st
  415c54:	test   BYTE PTR [esp+eiz*4+0x40],al
  415c58:	gs (bad) 
  415c5a:	fs or  eax,0x60766bbb
  415c60:	sti    
  415c61:	stc    
  415c62:	fstp   QWORD PTR [ebp-0x29]
  415c65:	mov    cl,0xd
  415c67:	pop    gs
  415c69:	imul   ebp,DWORD PTR ds:0x7c52e5c5,0xffffff83
  415c70:	sub    al,0x1c
  415c72:	pop    es
  415c73:	sbb    al,0xf
  415c75:	imul   esi,DWORD PTR [esi],0xa20bd7fd
  415c7b:	jno    0x415c1b
  415c7d:	cli    
  415c7e:	xlat   BYTE PTR ds:[ebx]
  415c7f:	(bad)  
  415c80:	fcomip st,st(7)
  415c82:	ret    
  415c83:	xlat   BYTE PTR ds:[ebx]
  415c84:	jns    0x415c96
  415c86:	push   ebx
  415c87:	cmp    eax,0x5d2fe104
  415c8c:	fnsave [edx-0x66]
  415c8f:	(bad)  
  415c90:	fidiv  DWORD PTR [ebx+ecx*1-0x17fadbb1]
  415c97:	push   0x2392500
  415c9c:	sub    eax,DWORD PTR [esi]
  415c9e:	jl     0x415cdd
  415ca0:	mov    eax,ds:0x200e4c6b
  415ca5:	xor    al,0x63
  415ca7:	out    dx,al
  415ca8:	xchg   esi,eax
  415ca9:	(bad)  
  415caa:	jg     0x415cb4
  415cac:	ins    DWORD PTR es:[edi],dx
  415cad:	mov    edx,DWORD PTR [ecx-0x53]
  415cb0:	dec    BYTE PTR [esi-0x64]
  415cb3:	dec    ebx
  415cb4:	xlat   BYTE PTR fs:[ebx]
  415cb6:	mov    cl,0x95
  415cb8:	gs inc ebx
  415cba:	sbb    al,0x36
  415cbc:	add    eax,0x36dd67fa
  415cc1:	packssdw mm7,QWORD PTR [ebp+0x0]
  415cc5:	sti    
  415cc6:	shl    DWORD PTR [edi+edi*1-0x43],cl
  415cca:	pop    esi
  415ccb:	mov    eax,0xc345590e
  415cd0:	ror    BYTE PTR [ebx],0x7
  415cd3:	cli    
  415cd4:	pop    esp
  415cd5:	push   ss
  415cd6:	dec    esi
  415cd7:	xchg   esi,eax
  415cd8:	mov    ds:0x771d601,eax
  415cdd:	xor    cl,BYTE PTR [edx+0x5508d318]
  415ce3:	lock cmc 
  415ce5:	and    ch,dh
  415ce7:	clc    
  415ce8:	mov    ecx,0x77b0015f
  415ced:	sahf   
  415cee:	scas   al,BYTE PTR es:[edi]
  415cef:	cmp    al,0x1a
  415cf1:	jmp    0x415d4f
  415cf3:	das    
  415cf4:	(bad)  
  415cf5:	dec    esp
  415cf6:	cmp    al,0x91
  415cf8:	add    DWORD PTR [ebx-0x3da1fa95],ebx
  415cfe:	push   eax
  415cff:	in     eax,dx
  415d00:	sub    ebx,DWORD PTR [ebp-0x1de734a]
  415d06:	retf   
  415d07:	or     al,0xe4
  415d09:	mov    cl,ch
  415d0b:	je     0x415d41
  415d0d:	(bad)  
  415d0e:	sahf   
  415d0f:	adc    DWORD PTR [ebp+0x2e],ebx
  415d12:	ins    BYTE PTR es:[edi],dx
  415d13:	mov    ebx,0x9d12d20e
  415d18:	jmp    0xf70699b3
  415d1d:	push   ebp
  415d1e:	fstp   DWORD PTR [edx-0x3cd0f445]
  415d24:	das    
  415d25:	and    esi,edx
  415d27:	test   al,0x51
  415d29:	or     al,0x30
  415d2b:	mov    dh,0x19
  415d2d:	push   cs
  415d2e:	dec    ebx
  415d2f:	rcl    BYTE PTR ds:0x7ebd8923,cl
  415d35:	or     DWORD PTR ds:0xaec4b1eb,0x80eacb42
  415d3f:	hlt    
  415d40:	sbb    al,0xee
  415d42:	push   eax
  415d43:	push   0xc9b05b73
  415d48:	inc    esp
  415d49:	call   0x47e959dd
  415d4e:	aam    0xac
  415d50:	icebp  
  415d51:	sbb    esp,eax
  415d53:	or     BYTE PTR [edi],bl
  415d55:	call   0xd119ef07
  415d5a:	sbb    BYTE PTR [edx+0x4d],0x8c
  415d5e:	cld    
  415d5f:	aad    0x8d
  415d61:	shl    BYTE PTR [eax+0x5d],1
  415d64:	retf   
  415d65:	inc    edx
  415d66:	fsub   QWORD PTR [ecx-0xd]
  415d69:	adc    ah,BYTE PTR [ebx]
  415d6b:	or     edx,ebx
  415d6d:	test   al,0xa7
  415d6f:	mov    dh,0xc0
  415d71:	or     eax,0xd7cda09f
  415d76:	inc    BYTE PTR [ecx-0x4b8e03bc]
  415d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7d:	je     0x415db5
  415d7f:	jecxz  0x415d80
  415d81:	pop    ecx
  415d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d83:	and    eax,DWORD PTR [eax]
  415d85:	jmp    0x415d0e
  415d87:	dec    edx
  415d88:	dec    edx
  415d89:	mov    eax,ds:0x49d0e15b
  415d8e:	and    eax,0x378f1113
  415d93:	pop    esi
  415d94:	pop    esi
  415d95:	fisubr DWORD PTR fs:[edx+0x4d]
  415d99:	cwde   
  415d9a:	imul   edx,DWORD PTR [edi],0xd6db4665
  415da0:	mov    eax,ds:0xab757be
  415da5:	imul   edi,DWORD PTR [edi-0x5b20ba],0xffffff99
  415dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dad:	mov    al,ds:0x1e53b43d
  415db2:	mov    dh,0xda
  415db4:	push   esp
  415db5:	jo     0x415db8
  415db7:	cmp    eax,0x9a8d2e86
  415dbc:	inc    esi
  415dbd:	sub    BYTE PTR [ebx],0x39
  415dc0:	pop    esp
  415dc1:	les    esi,FWORD PTR cs:[ebx+eiz*8]
  415dc5:	and    bh,BYTE PTR [esi]
  415dc7:	jae    0x415e42
  415dc9:	or     DWORD PTR [edi-0x2a1a22a],esi
  415dcf:	out    0x50,al
  415dd1:	(bad)  
  415dd2:	jmp    0xc311503f
  415dd7:	cld    
  415dd8:	mov    esi,DWORD PTR [ebx-0x7b]
  415ddb:	and    eax,0xfcedd8f
  415de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de1:	pop    edx
  415de2:	push   ebx
  415de3:	or     eax,0xc7ec95b0
  415de8:	lods   eax,DWORD PTR ds:[esi]
  415de9:	ins    BYTE PTR es:[edi],dx
  415dea:	repz pop ss
  415dec:	mov    ds:0x3c430617,eax
  415df1:	adc    eax,0xf204d266
  415df6:	push   ecx
  415df7:	mov    dh,0x71
  415df9:	and    BYTE PTR [esi],ah
  415dfb:	and    edx,DWORD PTR [ecx]
  415dfd:	mov    esi,0xa72ea339
  415e02:	cwde   
  415e03:	and    DWORD PTR [esi],ebx
  415e05:	es cmp al,0x12
  415e08:	jb     0x415df4
  415e0a:	add    DWORD PTR [ebx+esi*1-0x100f719],0x2766e036
  415e15:	retf   0x33c9
  415e18:	jmp    DWORD PTR [esi]
  415e1a:	(bad)  
  415e1b:	jns    0x415de7
  415e1d:	push   edi
  415e1e:	or     DWORD PTR [edx+0x139b49],eax
  415e24:	xchg   edi,eax
  415e25:	dec    eax
  415e26:	sub    eax,esp
  415e28:	fdivr  DWORD PTR ds:[esi-0x1f]
  415e2c:	mov    eax,ds:0x10ac2a51
  415e31:	jb     0x415ea4
  415e33:	lahf   
  415e34:	fst    st(6)
  415e36:	pushf  
  415e37:	and    bh,dh
  415e39:	jns    0x415e16
  415e3b:	jnp    0x415e82
  415e3d:	cmp    edx,DWORD PTR [esi]
  415e3f:	mov    ah,0x77
  415e41:	pushf  
  415e42:	mov    ds:0x20756be8,al
  415e47:	cdq    
  415e48:	pop    ecx
  415e49:	dec    esi
  415e4a:	add    ah,BYTE PTR [ecx-0x46]
  415e4d:	retf   0x6ea5
  415e50:	iret   
  415e51:	mov    edi,0x6e6a2fae
  415e56:	std    
  415e57:	adc    DWORD PTR [ecx-0x68],eax
  415e5a:	outs   dx,DWORD PTR ds:[esi]
  415e5b:	push   ecx
  415e5c:	stc    
  415e5d:	add    al,bh
  415e5f:	sub    al,0x6
  415e61:	std    
  415e62:	adc    BYTE PTR [edx-0x9],cl
  415e65:	jl     0x415ea7
  415e67:	or     bh,bl
  415e69:	push   0xffffffcd
  415e6b:	gs jae 0x415ee1
  415e6e:	jmp    0xadf43ef7
  415e73:	ins    BYTE PTR es:[edi],dx
  415e74:	cli    
  415e75:	mov    cl,0x8
  415e77:	sbb    eax,DWORD PTR [ebx]
  415e79:	mov    WORD PTR [esi+edi*2+0x4ace0f88],gs
  415e80:	jnp    0x415e05
  415e82:	ja     0x415ee1
  415e84:	push   cs
  415e85:	(bad)  
  415e86:	xchg   esi,eax
  415e87:	das    
  415e88:	xchg   ecx,eax
  415e89:	mov    ah,0x7e
  415e8b:	pushf  
  415e8c:	retf   0xf057
  415e8f:	popf   
  415e90:	jecxz  0x415e5d
  415e92:	sahf   
  415e93:	or     ah,BYTE PTR [ecx+0x12]
  415e96:	(bad)  
  415e97:	jle    0x415ed5
  415e99:	sub    BYTE PTR [edi],cl
  415e9b:	sbb    bl,BYTE PTR [ebx-0x4e]
  415e9e:	sub    BYTE PTR [eax+0x30],bh
  415ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ea2:	adc    eax,0x7d1b94c1
  415ea7:	push   edi
  415ea8:	popa   
  415ea9:	imul   eax,ecx,0xe01414dd
  415eaf:	test   DWORD PTR [eax+0x178835ce],eax
  415eb5:	dec    ecx
  415eb6:	cmp    al,0x27
  415eb8:	mov    eax,0xcadf83d3
  415ebd:	into   
  415ebe:	dec    esi
  415ebf:	lock scas al,BYTE PTR es:[edi]
  415ec1:	inc    eax
  415ec2:	mov    cl,0x5b
  415ec4:	xchg   DWORD PTR [edx+0x5d],ebx
  415ec7:	adc    BYTE PTR [ecx],ch
  415ec9:	xchg   edx,eax
  415eca:	out    0x54,al
  415ecc:	mov    edx,0xf3cb447b
  415ed1:	fwait
  415ed2:	dec    ebp
  415ed3:	pop    es
  415ed4:	jle    0x415eba
  415ed6:	mov    ecx,0x12cb6abd
  415edb:	mov    ah,0xe9
  415edd:	sti    
  415ede:	mov    ebx,0x66b18be7
  415ee3:	inc    edx
  415ee4:	xor    edx,edx
  415ee6:	mov    ds:0xdeca784f,al
  415eeb:	mov    edi,0xe080fba6
  415ef0:	jnp    0x415ef5
  415ef2:	imul   ecx,DWORD PTR [edi-0x3c23fe70],0xfffffff2
  415ef9:	xchg   esp,eax
  415efa:	or     DWORD PTR [esi-0xfe89a80],edx
  415f00:	loopne 0x415f61
  415f02:	xchg   ebx,eax
  415f03:	xor    al,0x57
  415f05:	mov    al,0x2d
  415f07:	mov    bh,0x3
  415f09:	test   bl,bh
  415f0b:	pop    ebp
  415f0c:	in     eax,0xda
  415f0e:	lds    ebx,FWORD PTR ds:0x322616a6
  415f14:	iret   
  415f15:	jae    0x415eff
  415f17:	jle    0x415f4b
  415f19:	les    esp,FWORD PTR [ecx-0x296fd952]
  415f1f:	cmp    BYTE PTR [edx],0xe2
  415f22:	add    BYTE PTR [eax],ch
  415f24:	sub    eax,0xfb831515
  415f29:	mov    al,ds:0x85d54d7d
  415f2e:	(bad)  
  415f2f:	fild   WORD PTR [edx]
  415f31:	retfw  0x268c
  415f35:	xchg   BYTE PTR [edx+0x7],bl
  415f38:	fdivp  st(3),st
  415f3a:	xor    dh,BYTE PTR [ecx]
  415f3c:	lahf   
  415f3d:	pop    ds
  415f3e:	jns    0x415f00
  415f40:	cmp    eax,0xa822a7aa
  415f45:	fld    QWORD PTR [ecx-0x5610fcf1]
  415f4b:	cmp    al,0x21
  415f4d:	xor    al,0x63
  415f4f:	ins    BYTE PTR es:[edi],dx
  415f50:	std    
  415f51:	outs   dx,DWORD PTR ds:[esi]
  415f52:	mov    eax,0xcf0de110
  415f57:	jmp    0x415f13
  415f59:	test   DWORD PTR [ecx],ebx
  415f5b:	jne    0x415fd1
  415f5d:	jp     0x415f7a
  415f5f:	in     eax,dx
  415f60:	sub    eax,ecx
  415f62:	out    0x89,eax
  415f64:	cmp    BYTE PTR [esi+ebx*1+0x2a5b4f99],bl
  415f6b:	leave  
  415f6c:	jmp    0xe363:0x10941d5f
  415f73:	int3   
  415f74:	ss jno 0x415fe2
  415f77:	(bad)  
  415f79:	fs xor al,0xa3
  415f7c:	adc    edi,ebp
  415f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f7f:	lods   eax,DWORD PTR ds:[esi]
  415f80:	je     0x415f23
  415f82:	push   edi
  415f83:	daa    
  415f84:	cld    
  415f85:	in     al,0x2f
  415f87:	dec    ebx
  415f88:	and    ah,al
  415f8a:	ror    BYTE PTR [esi],0x11
  415f8d:	fwait
  415f8e:	in     eax,0x7b
  415f90:	xchg   esi,eax
  415f91:	shr    BYTE PTR [edi-0x7a060552],1
  415f97:	or     eax,0x61c0f32d
  415f9c:	and    ah,cl
  415f9e:	mov    dl,0xa0
  415fa0:	mov    edi,0x13ace237
  415fa5:	xchg   ebx,eax
  415fa6:	xchg   edx,eax
  415fa7:	gs retfw 0xce2f
  415fac:	ret    0x30ea
  415faf:	pop    edi
  415fb0:	mov    ch,0x20
  415fb2:	scas   al,BYTE PTR es:[edi]
  415fb3:	inc    esi
  415fb4:	push   esp
  415fb5:	jmp    0xdb5e:0xcf361cfb
  415fbc:	jl     0x415f67
  415fbe:	rcl    BYTE PTR [ebp-0x576555bc],1
  415fc4:	add    ecx,ebx
  415fc6:	or     al,0x57
  415fc8:	sub    edi,DWORD PTR [eax]
  415fca:	icebp  
  415fcb:	cmc    
  415fcc:	(bad)  
  415fce:	pop    DWORD PTR [ebx+0x5a]
  415fd1:	daa    
  415fd2:	xchg   edx,eax
  415fd3:	push   edi
  415fd4:	add    al,BYTE PTR [ebp+0x2100efe0]
  415fda:	xchg   ebx,eax
  415fdb:	bnd jns 0x416051
  415fde:	xor    esp,DWORD PTR [ebp-0x7]
  415fe1:	pop    edx
  415fe2:	sbb    ebx,DWORD PTR [edi+0x1ed230ce]
  415fe8:	call   0xf72401b7
  415fed:	aad    0x5c
  415fef:	adc    BYTE PTR [ecx+0x3cc76e26],0xf3
  415ff6:	sbb    al,0x3a
  415ff8:	adc    DWORD PTR [esi-0x70],ecx
  415ffb:	iret   
  415ffc:	retf   0x3243
  415fff:	call   0x7fc2:0x50e8ca7e
  416006:	hlt    
  416007:	test   DWORD PTR [ebx-0x3b64ddf5],0xdac6901e
  416011:	fwait
  416012:	add    ch,ah
  416014:	inc    edi
  416015:	int3   
  416016:	mov    ds:0x68d2129a,eax
  41601b:	xchg   ecx,eax
  41601c:	ins    DWORD PTR es:[edi],dx
  41601d:	imul   ebp,DWORD PTR [edi+0x36a76522],0x48
  416024:	pop    es
  416025:	adc    DWORD PTR [ecx+ebx*4],ebp
  416028:	(bad)  
  416029:	dec    ebp
  41602a:	retf   0x944c
  41602d:	test   ch,cl
  41602f:	pop    ss
  416030:	xchg   ecx,eax
  416031:	pop    esp
  416032:	jne    0x416055
  416034:	mov    edi,0x3ba63528
  416039:	bound  esp,QWORD PTR [ecx-0x5a]
  41603c:	rcl    BYTE PTR [esi],1
  41603e:	inc    esp
  41603f:	cmp    al,0x32
  416041:	fdivp  st(5),st
  416043:	sub    al,0xd6
  416045:	xchg   ebx,eax
  416046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416047:	sub    BYTE PTR [edi],bh
  416049:	call   0xbb9d:0xf9f8517b
  416050:	shr    bl,1
  416052:	dec    ebp
  416053:	or     eax,0x121fb545
  416058:	or     al,0x41
  41605a:	adc    al,0x83
  41605c:	mov    BYTE PTR [esi],dh
  41605e:	and    edx,edi
  416060:	ins    BYTE PTR es:[edi],dx
  416061:	cmp    eax,0xdc87cf70
  416066:	jmp    0xe09d7c2e
  41606b:	xor    ch,bl
  41606d:	ss aad 0x6e
  416070:	(bad)  
  416071:	int    0xe0
  416073:	mov    esp,0x39da285e
  416078:	sbb    al,0x24
  41607a:	std    
  41607b:	cli    
  41607c:	fcomp  DWORD PTR [esi]
  41607e:	add    BYTE PTR [edx+0x63],bl
  416081:	aas    
  416082:	xchg   edi,eax
  416083:	push   ebp
  416084:	or     edi,DWORD PTR [esi]
  416086:	push   0xc5701e23
  41608b:	mov    cl,0xe4
  41608d:	inc    edx
  41608e:	and    ecx,DWORD PTR [ecx]
  416090:	push   esi
  416091:	(bad)  
  416092:	loope  0x416056
  416094:	sub    al,0x1
  416096:	stos   DWORD PTR es:[edi],eax
  416097:	lea    ebx,[esi]
  416099:	test   DWORD PTR [edx+0x4e],0xf123badc
  4160a0:	jge    0x416023
  4160a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a3:	dec    esp
  4160a4:	adc    edx,DWORD PTR [ecx]
  4160a6:	and    BYTE PTR [ecx+0x360d4141],dh
  4160ac:	mov    edi,0xa62993ea
  4160b1:	or     eax,0xf748a2be
  4160b6:	inc    edx
  4160b7:	mov    eax,0x1c45f502
  4160bc:	add    eax,DWORD PTR [eax+ecx*1-0x56]
  4160c0:	aaa    
  4160c1:	mov    ebx,0x2ae90e0d
  4160c6:	and    edx,DWORD PTR [edi+0x4f028a22]
  4160cc:	pop    edx
  4160cd:	(bad)  
  4160ce:	hlt    
  4160cf:	xor    eax,0x6b52eb48
  4160d4:	and    bh,BYTE PTR [ecx+0xd1b08e1]
  4160da:	lock stos BYTE PTR es:[edi],al
  4160dc:	pusha  
  4160dd:	mov    edi,0x2b44b360
  4160e2:	lods   eax,DWORD PTR ds:[esi]
  4160e3:	pusha  
  4160e4:	jmp    0x1871:0xb4f29f88
  4160eb:	loopne 0x41607e
  4160ed:	xchg   ebx,eax
  4160ee:	jmp    0xa33c56aa
  4160f3:	and    DWORD PTR [ecx],esi
  4160f5:	loopne 0x416086
  4160f7:	data16 ja 0x416116
  4160fa:	push   esp
  4160fb:	jle    0x416092
  4160fd:	scas   eax,DWORD PTR es:[edi]
  4160fe:	or     bh,BYTE PTR [edi+0x26]
  416101:	xor    ebp,DWORD PTR [edx]
  416103:	xchg   eax,ecx
  416105:	push   ecx
  416106:	inc    eax
  416107:	dec    eax
  416108:	pop    ecx
  416109:	jp     0x416115
  41610b:	or     al,0xc1
  41610d:	mov    al,0x55
  41610f:	jmp    0x2e64:0xb248e8fe
  416116:	ins    WORD PTR es:[edi],dx
  416118:	xor    al,0xdd
  41611a:	lahf   
  41611b:	pop    ecx
  41611c:	mov    bl,0x2d
  41611e:	imul   esp,DWORD PTR [ebx],0x69cfd60
  416124:	mov    ebp,0x926f7589
  416129:	dec    eax
  41612a:	push   edi
  41612b:	iret   
  41612c:	mov    BYTE PTR [edx],cl
  41612e:	aas    
  41612f:	fxch   st(2)
  416131:	out    dx,al
  416132:	mov    edi,0x1acc1350
  416137:	hlt    
  416138:	xor    al,0x91
  41613a:	push   eax
  41613b:	jo     0x41614a
  41613d:	sub    edx,esp
  41613f:	inc    esi
  416140:	xor    eax,ebx
  416142:	retf   0xb71
  416145:	les    esi,FWORD PTR [eax]
  416147:	pop    es
  416148:	dec    edi
  416149:	repnz sbb bl,BYTE PTR [edx]
  41614c:	push   esi
  41614e:	jecxz  0x4160d9
  416150:	xchg   BYTE PTR [esi],dl
  416152:	xchg   esi,eax
  416153:	mov    eax,ds:0x60603397
  416158:	test   dh,0x5e
  41615b:	xor    eax,0x7bd2e1f
  416160:	stos   BYTE PTR es:[edi],al
  416161:	mov    ebx,0x8906029b
  416166:	mov    DWORD PTR [edi+0x7d],edi
  416169:	adc    dh,bh
  41616b:	rol    esp,1
  41616d:	aad    0xaa
  41616f:	sahf   
  416170:	cld    
  416171:	xchg   DWORD PTR [ebx],esp
  416173:	push   cs
  416174:	repz jl 0x4161c7
  416177:	xor    cl,cl
  416179:	pop    eax
  41617a:	je     0x416183
  41617c:	in     eax,dx
  41617d:	test   edi,esi
  41617f:	xchg   DWORD PTR [ecx+0x6f],ebx
  416182:	cwde   
  416183:	gs mov ecx,0x48d43421
  416189:	aaa    
  41618a:	sbb    eax,DWORD PTR [eax+0x0]
  41618d:	lods   eax,DWORD PTR ds:[esi]
  41618e:	mov    al,ds:0xf62a89d2
  416193:	lods   eax,DWORD PTR ds:[esi]
  416194:	je     0x4161a5
  416196:	sub    cl,BYTE PTR [edx+0x9d8dd99]
  41619c:	xchg   ebx,eax
  41619d:	dec    edx
  41619e:	rcr    BYTE PTR [edx],0x97
  4161a1:	push   esi
  4161a2:	xor    ah,bl
  4161a4:	add    edi,esp
  4161a6:	test   eax,0x60a80ec3
  4161ab:	push   ds
  4161ac:	aas    
  4161ad:	dec    edx
  4161ae:	idiv   DWORD PTR [edx-0x6542cd1]
  4161b4:	and    eax,0x4a8c64dd
  4161b9:	call   0x32e442f4
  4161be:	sub    BYTE PTR [eax],dh
  4161c0:	in     al,dx
  4161c1:	mov    ds:0xcc6a0c08,al
  4161c6:	xor    eax,DWORD PTR [eax-0x73ed4072]
  4161cc:	pop    edi
  4161cd:	ins    BYTE PTR es:[edi],dx
  4161ce:	jge    0x4161b7
  4161d0:	and    eax,0xdcccc082
  4161d5:	inc    esp
  4161d6:	mov    al,ds:0xc25436b7
  4161db:	sub    eax,0xb6064a9c
  4161e0:	xchg   esp,eax
  4161e1:	mov    dl,0x1c
  4161e3:	out    0x64,eax
  4161e5:	adc    dh,BYTE PTR [esi+0x4b]
  4161e8:	(bad)  
  4161e9:	inc    DWORD PTR [edx-0x316c7e80]
  4161ef:	(bad)  es:[eax+ebp*1]
  4161f3:	jp     0x416260
  4161f5:	iret   
  4161f6:	int3   
  4161f7:	test   DWORD PTR [esi-0x625c0029],edi
  4161fd:	pop    ecx
  4161fe:	jbe    0x4161c8
  416200:	test   al,0x60
  416202:	lds    ebp,FWORD PTR [edi+0x1f]
  416205:	xor    bl,ah
  416207:	cmp    esi,edi
  416209:	and    BYTE PTR [edi],dl
  41620b:	lds    edx,FWORD PTR [ebx]
  41620d:	aad    0x3d
  41620f:	mov    bh,BYTE PTR [edi-0x20c88bf0]
  416215:	(bad)  
  416216:	jb     0x4161fd
  416218:	jge    0x416246
  41621a:	imul   esi,DWORD PTR [ebx+0x68],0x4a
  41621e:	retf   0xf395
  416221:	out    dx,al
  416222:	repz jl 0x416204
  416225:	inc    edi
  416226:	pop    ecx
  416227:	sbb    eax,esp
  416229:	ja     0x41626e
  41622b:	adc    eax,0xc4b8f610
  416230:	mov    dh,0x5
  416232:	ja     0x4161c2
  416234:	popa   
  416235:	and    dl,cl
  416237:	mov    al,0x63
  416239:	(bad)  
  41623a:	or     eax,0x4b91634e
  41623f:	not    edi
  416241:	mov    BYTE PTR [edx-0x124bdb3c],0x35
  416248:	xchg   ecx,eax
  416249:	and    DWORD PTR [esi],edx
  41624b:	in     eax,0x7d
  41624d:	mov    eax,ds:0xcea634b1
  416252:	jo     0x416202
  416254:	jecxz  0x416253
  416256:	js     0x4162c1
  416258:	mov    ch,0x5
  41625a:	push   0xffffffaf
  41625c:	lods   al,BYTE PTR ds:[esi]
  41625d:	xchg   esi,eax
  41625e:	enter  0x5559,0x41
  416262:	xchg   esi,eax
  416263:	inc    ecx
  416264:	das    
  416265:	pop    ecx
  416266:	dec    eax
  416267:	je     0x416285
  416269:	mov    ecx,0xed990ec6
  41626e:	out    0x7e,al
  416270:	xor    BYTE PTR [edi-0x550fd83e],bl
  416276:	stc    
  416277:	ficom  DWORD PTR [ecx]
  416279:	lahf   
  41627a:	fisttp WORD PTR [edi+0x47]
  41627d:	xor    DWORD PTR [esi+0x60],ebp
  416280:	js     0x416202
  416282:	shl    ah,0x81
  416285:	push   ss
  416286:	and    BYTE PTR [edi],bl
  416288:	mov    edx,0x1db7c454
  41628d:	sbb    esp,DWORD PTR [esi-0x141bfb57]
  416293:	(bad)  
  416295:	inc    edi
  416296:	lods   al,BYTE PTR ds:[si]
  416298:	stos   DWORD PTR es:[edi],eax
  416299:	mov    DWORD PTR [ebp-0x58],edx
  41629c:	mov    edx,DWORD PTR [ebp+0x8]
  41629f:	mov    ebx,DWORD PTR [ebp-0x54]
  4162a2:	add    edx,0x64f8da
  4162a8:	or     edx,ebx
  4162aa:	mov    DWORD PTR [ebp-0x54],edx
  4162ad:	mov    edx,DWORD PTR [ebp+0x8]
  4162b0:	mov    ebx,DWORD PTR [ebp-0x50]
  4162b3:	add    edx,ecx
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0xdc,eax
  416394:	es inc esi
  416396:	inc    edi
  416397:	pop    esp
  416398:	push   edi
  416399:	jns    0x416415
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x416404
  4163a0:	xchg   ebx,eax
  4163a1:	loop   0x416387
  4163a3:	ss into 
  4163a5:	add    bp,WORD PTR [eax+0x2c]
  4163a9:	mov    ss,edx
  4163ab:	pop    esi
  4163ac:	mov    dl,0x2b
  4163ae:	sub    ebx,DWORD PTR [eax+0x13a47db8]
  4163b4:	cli    
  4163b5:	scas   eax,DWORD PTR es:[edi]
  4163b6:	jmp    0x98999f97
  4163bb:	es dec ebx
  4163bd:	ins    DWORD PTR es:[edi],dx
  4163be:	sub    edi,ebx
  4163c0:	xchg   esp,eax
  4163c1:	(bad)  [ebp-0x1f]
  4163c4:	mov    ebp,DWORD PTR [eax]
  4163c6:	getsec 
  4163c8:	mov    edi,0x897c137c
  4163cd:	jmp    0x4321:0x18229f00
  4163d4:	mov    ds:0x14316c5b,al
  4163d9:	and    eax,0x820c9eb5
  4163de:	fmul   QWORD PTR [esi-0x1b2b8134]
  4163e4:	mov    ecx,0x63dbaae1
  4163e9:	and    DWORD PTR [eax-0x46b568a4],0xb3fab56a
  4163f3:	mov    cl,ah
  4163f5:	add    BYTE PTR [edx+0x2e],dl
  4163f8:	enterw 0xa781,0x25
  4163fd:	inc    esi
  4163fe:	adc    BYTE PTR [eax],al
  416400:	stos   DWORD PTR es:[edi],eax
  416401:	mov    bh,0x8f
  416403:	inc    esp
  416404:	icebp  
  416405:	pop    edx
  416406:	cmp    BYTE PTR [ebx+0xa6d927f],bl
  41640c:	nop
  41640d:	and    dl,bh
  41640f:	or     eax,0xf7050b0f
  416414:	pushf  
  416415:	in     eax,dx
  416416:	inc    edx
  416417:	or     ch,ah
  416419:	fdiv   st,st(7)
  41641b:	pop    ebp
  41641c:	ins    BYTE PTR es:[edi],dx
  41641d:	cmc    
  41641e:	pop    ecx
  41641f:	xlat   BYTE PTR ds:[ebx]
  416420:	xor    DWORD PTR [eax],edx
  416422:	cwde   
  416423:	adc    BYTE PTR [ecx],dh
  416425:	rol    eax,cl
  416427:	or     ecx,DWORD PTR [ebx-0x2d]
  41642a:	or     ch,al
  41642c:	push   ebp
  41642d:	imul   edi,DWORD PTR [ecx-0x692ed8f1],0x2c
  416434:	jmp    0x190fcca1
  416439:	rcl    BYTE PTR [ecx],cl
  41643b:	enter  0xf785,0x9e
  41643f:	pop    edi
  416440:	add    BYTE PTR cs:[ebx+0x37],dh
  416444:	call   FWORD PTR [edx+0x65]
  416447:	shl    DWORD PTR [esi+0x4bec4f23],cl
  41644d:	cmp    al,0x99
  41644f:	mov    ch,0x3f
  416451:	cmp    al,0x1f
  416453:	or     ah,ah
  416455:	inc    ebp
  416456:	or     al,0xc2
  416458:	push   edi
  416459:	push   cs
  41645a:	repz pop eax
  41645c:	nop
  41645d:	jb     0x4163f4
  41645f:	sbb    bl,BYTE PTR gs:[edi+0x56]
  416463:	mov    eax,ds:0xb674d8cf
  416468:	jecxz  0x4164e1
  41646a:	call   0x2cac:0x2ac11208
  416471:	xchg   cx,ax
  416473:	dec    eax
  416474:	jae    0x4163f7
  416476:	out    dx,eax
  416477:	xor    ebx,esp
  416479:	pushf  
  41647a:	ja     0x41640d
  41647c:	aaa    
  41647d:	ss sti 
  41647f:	jb     0x416495
  416481:	test   al,0xcd
  416483:	push   eax
  416484:	or     eax,0xfc42e6f3
  416489:	add    eax,0x3658b61a
  41648e:	mov    cl,0x23
  416490:	xchg   BYTE PTR [ecx],bl
  416492:	and    BYTE PTR [edi-0x11bdea1a],ch
  416498:	sub    al,0xb
  41649b:	hlt    
  41649c:	push   edi
  41649d:	pop    ss
  41649e:	sti    
  41649f:	mov    bh,0x6e
  4164a1:	adc    ch,ch
  4164a3:	mov    bh,0x6c
  4164a5:	pop    ecx
  4164a6:	fdivr  st(1),st
  4164a8:	cmp    esp,ebp
  4164aa:	sub    al,0xbe
  4164ac:	add    edx,esp
  4164ae:	pop    esp
  4164af:	jl     0x41644a
  4164b1:	cdq    
  4164b2:	sub    edx,DWORD PTR [edi]
  4164b4:	lea    ecx,[ebx+0x508ba77f]
  4164ba:	xor    al,BYTE PTR [ebp-0x4e1249f7]
  4164c0:	jge    0x416506
  4164c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c3:	xor    edx,ecx
  4164c5:	ss push esp
  4164c7:	inc    edx
  4164c8:	iret   
  4164c9:	dec    esp
  4164ca:	inc    edx
  4164cb:	fwait
  4164cc:	mov    ss:0xf5171163,eax
  4164d2:	ins    DWORD PTR es:[edi],dx
  4164d3:	jbe    0x416467
  4164d5:	adc    DWORD PTR [ebx],ecx
  4164d7:	cmp    dl,BYTE PTR [edi+0xe34f7c6]
  4164dd:	sub    ebp,DWORD PTR [ebx+edx*8+0x5f]
  4164e1:	addr16 cmp ah,bh
  4164e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e5:	fs pop ebp
  4164e7:	ret    0x405e
  4164ea:	adc    DWORD PTR [ebp-0x287ba817],edx
  4164f0:	pop    esp
  4164f1:	sbb    eax,0xa931e217
  4164f6:	stc    
  4164f7:	rcl    BYTE PTR [ebx+0x71c21501],1
  4164fd:	bnd jae 0x416530
  416500:	paddb  mm3,QWORD PTR [edx+ecx*8]
  416504:	outs   dx,DWORD PTR ds:[esi]
  416505:	mov    ebp,0x22c290f3
  41650a:	or     BYTE PTR [edi+0x45],0x89
  41650e:	les    esi,FWORD PTR [edi+0x7c]
  416511:	adc    eax,0x7d62825e
  416516:	bswap  ebp
  416518:	fdivrp st(7),st
  41651a:	inc    edx
  41651b:	fld    DWORD PTR [eax-0xe]
  41651e:	(bad)  
  41651f:	cmp    BYTE PTR [esi+0x74],ch
  416522:	jecxz  0x4164f2
  416524:	scas   eax,DWORD PTR es:[edi]
  416525:	dec    ebp
  416527:	pop    ecx
  416528:	dec    edi
  416529:	and    esi,edi
  41652b:	xor    eax,0xe1956982
  416530:	mov    dh,ch
  416532:	jle    0x416515
  416534:	xor    DWORD PTR ds:0xe3083aea,edx
  41653a:	popf   
  41653b:	shr    dl,cl
  41653d:	or     ebx,DWORD PTR [ebx-0x62cf1d4d]
  416543:	mov    cl,0xd8
  416545:	sub    al,ah
  416547:	push   eax
  416548:	pop    ss
  416549:	xchg   esi,eax
  41654a:	ja     0x4164d6
  41654c:	sti    
  41654d:	cmp    ah,BYTE PTR [ebp-0x1e]
  416550:	lahf   
  416551:	addr16 in al,0x3c
  416554:	enter  0xe88,0x9e
  416558:	fdiv   DWORD PTR [edi]
  41655a:	inc    edx
  41655b:	adc    ch,ah
  41655d:	int    0x6b
  41655f:	loopne 0x41650c
  416561:	sbb    DWORD PTR [ebx],edx
  416563:	cmc    
  416564:	imul   ebp,DWORD PTR [edx-0x5de4d33e],0x93873036
  41656e:	push   edi
  41656f:	daa    
  416570:	shl    BYTE PTR [ecx+eax*2],cl
  416573:	xor    dl,ah
  416575:	sub    eax,DWORD PTR fs:[ecx]
  416578:	ins    BYTE PTR es:[edi],dx
  416579:	jmp    0xfed40c27
  41657e:	pop    ebx
  41657f:	jbe    0x4165e5
  416581:	in     al,0x99
  416583:	cmp    BYTE PTR [esi+0xa],bl
  416586:	and    al,0x7a
  416588:	xchg   DWORD PTR [eax],eax
  41658a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41658b:	sbb    DWORD PTR [esi+0x3e21ed44],edi
  416591:	call   0x22f3:0x42390c20
  416598:	mov    ah,al
  41659a:	repnz cld 
  41659c:	sub    BYTE PTR [eax+0x30f980ae],0x16
  4165a3:	test   DWORD PTR [eax-0x2db086f1],ecx
  4165a9:	jle    0x416536
  4165ab:	shl    BYTE PTR [esi],1
  4165ad:	loop   0x4165f1
  4165af:	sbb    ebx,DWORD PTR [eax-0x34]
  4165b2:	add    DWORD PTR [edi-0x39],ecx
  4165b5:	into   
  4165b6:	adc    al,0x7b
  4165b8:	into   
  4165b9:	pop    edi
  4165ba:	jno    0x4165a3
  4165bc:	dec    ebx
  4165bd:	sbb    DWORD PTR ds:0xb0d4d24f,ecx
  4165c3:	fdiv   st,st(1)
  4165c5:	xchg   edi,eax
  4165c6:	sbb    eax,0xb1d0c75c
  4165cb:	push   cs
  4165cc:	call   DWORD PTR [edi+0x72809a76]
  4165d2:	xor    dl,ch
  4165d4:	xlat   BYTE PTR ds:[ebx]
  4165d5:	push   edi
  4165d6:	test   al,0xc3
  4165d8:	leave  
  4165d9:	pop    ss
  4165da:	sbb    al,0xc4
  4165dc:	mov    ebx,DWORD PTR [edi+edx*1+0x76]
  4165e0:	and    al,0x9c
  4165e2:	xchg   DWORD PTR [edi+0x61],esp
  4165e5:	rol    edi,cl
  4165e7:	in     al,dx
  4165e8:	ins    BYTE PTR es:[edi],dx
  4165e9:	popf   
  4165ea:	and    edx,DWORD PTR [ecx-0x3aecc24e]
  4165f0:	sbb    dl,bl
  4165f2:	mov    ah,0xc2
  4165f4:	(bad)  
  4165f6:	push   ds
  4165f7:	sbb    eax,0x38b9dc11
  4165fc:	test   DWORD PTR [ebx+ecx*4],ebp
  4165ff:	add    eax,0x299d8267
  416604:	xchg   ebx,eax
  416605:	sub    BYTE PTR [eax+eiz*1+0x3b],ah
  416609:	or     BYTE PTR [edi-0x9],bh
  41660c:	out    dx,al
  41660d:	jg     0x4165f4
  41660f:	fist   WORD PTR [eax-0x9]
  416612:	hlt    
  416613:	pop    edx
  416614:	jbe    0x41668b
  416616:	pop    esp
  416617:	setle  BYTE PTR ds:0x733141d0
  41661e:	push   cs
  41661f:	xchg   bh,dl
  416621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416622:	dec    esp
  416623:	cmp    DWORD PTR [edi+0x76bb23d1],0x41
  41662a:	stc    
  41662b:	(bad)  
  41662c:	add    BYTE PTR ss:[edx-0x24],dl
  416630:	xor    BYTE PTR [ebx-0x78],dl
  416633:	ret    0x73a7
  416636:	fwait
  416637:	loopne 0x4166a1
  416639:	nop
  41663a:	in     al,dx
  41663b:	xor    bl,dl
  41663d:	hlt    
  41663e:	xor    BYTE PTR [edx+0x1f],dl
  416641:	xchg   ebx,eax
  416642:	ja     0x416692
  416644:	and    bl,BYTE PTR [ebx+0x3d22868b]
  41664a:	fwait
  41664b:	inc    edx
  41664c:	dec    edi
  41664d:	mov    bh,ch
  41664f:	jb     0x41662f
  416651:	mov    edi,ds
  416653:	imul   ebx,DWORD PTR [ebx-0x62],0xffffffa5
  416657:	out    dx,eax
  416658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416659:	mov    edx,0xecc94cf9
  41665e:	lods   eax,DWORD PTR ds:[esi]
  41665f:	xchg   ecx,eax
  416660:	rcr    BYTE PTR [ecx],0xcc
  416663:	inc    edx
  416664:	hlt    
  416665:	test   edx,edi
  416667:	scas   al,BYTE PTR es:[edi]
  416668:	scas   al,BYTE PTR es:[edi]
  416669:	mov    WORD PTR [ebx-0xa154bfd],?
  41666f:	out    dx,eax
  416670:	fdivr  st(3),st
  416672:	mov    edx,0x67b8d40c
  416677:	fucomi st,st(7)
  416679:	cwde   
  41667a:	pop    ecx
  41667b:	or     BYTE PTR [eax-0x5d08bf9b],cl
  416681:	add    al,0xcc
  416683:	mov    ecx,0xc4f737c1
  416688:	add    ah,BYTE PTR [ecx+0x6cd54389]
  41668e:	mov    ch,BYTE PTR [ecx+eiz*1]
  416691:	repz inc esp
  416693:	js     0x4166c2
  416695:	aam    0xae
  416697:	and    al,0xbe
  416699:	mov    BYTE PTR [edi-0x3978caaa],dh
  41669f:	push   ds
  4166a0:	xor    DWORD PTR [edi-0x3],ecx
  4166a3:	mov    al,ds:0x1178c45a
  4166a8:	dec    ebp
  4166a9:	xchg   ecx,eax
  4166aa:	aaa    
  4166ab:	hlt    
  4166ac:	int    0xac
  4166ae:	pushf  
  4166af:	pop    edi
  4166b0:	xchg   esp,eax
  4166b1:	lds    ebx,FWORD PTR [esi+0x62c61414]
  4166b7:	xor    BYTE PTR [edx-0x42],dh
  4166ba:	sar    DWORD PTR [edi-0x275cd560],cl
  4166c0:	dec    ecx
  4166c1:	mov    bl,0x70
  4166c3:	rcl    BYTE PTR [ecx],cl
  4166c5:	dec    esi
  4166c6:	das    
  4166c7:	in     eax,0x1e
  4166c9:	pop    edi
  4166ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166cb:	xchg   edi,eax
  4166cc:	add    al,dl
  4166ce:	jmp    0x4166dd
  4166d0:	scas   eax,DWORD PTR es:[edi]
  4166d1:	sti    
  4166d2:	scas   al,BYTE PTR es:[edi]
  4166d3:	jbe    0x416717
  4166d5:	cld    
  4166d6:	enter  0xad44,0x0
  4166da:	xchg   DWORD PTR [ebx+0x26a51404],ebx
  4166e0:	cmp    eax,0xe93a061b
  4166e5:	shl    BYTE PTR [ebx+0x68d9ea1e],cl
  4166eb:	or     DWORD PTR [esi],ecx
  4166ed:	(bad)  
  4166ee:	mov    dh,0xd8
  4166f0:	sub    DWORD PTR ds:0x5d7f5756,ecx
  4166f6:	pop    edx
  4166f7:	cmp    eax,0x816b504c
  4166fc:	jns    0x416690
  4166fe:	xlat   BYTE PTR ds:[ebx]
  4166ff:	retf   
  416700:	outs   dx,DWORD PTR ds:[esi]
  416701:	inc    ebp
  416702:	sub    DWORD PTR [edx+0x1c7414b7],eax
  416708:	xor    eax,ecx
  41670a:	xor    bh,dh
  41670c:	addr16 dec ecx
  41670e:	mov    esi,edx
  416710:	repnz pop ebp
  416712:	pop    eax
  416713:	les    edi,FWORD PTR [esi+edx*4+0x59379283]
  41671a:	aam    0x8f
  41671c:	dec    ebx
  41671d:	popf   
  41671e:	repz push esp
  416720:	in     al,dx
  416721:	in     al,dx
  416722:	call   0x262e:0x1fff21aa
  416729:	stc    
  41672a:	pavgb  mm3,mm0
  41672d:	push   es
  41672e:	jl     0x416737
  416730:	inc    edx
  416731:	or     eax,DWORD PTR ds:0x61e47846
  416737:	jge    0x4166c0
  416739:	pusha  
  41673a:	imul   ebx,esp,0x9e01689b
  416740:	inc    esi
  416741:	or     DWORD PTR [ecx+0x6a],ecx
  416744:	scas   eax,DWORD PTR es:[edi]
  416745:	(bad)  
  416746:	cmp    BYTE PTR [ebx+0x4a],cl
  416749:	bnd jl 0x4167c9
  41674c:	arpl   WORD PTR [edi-0x7f3d570f],ax
  416752:	or     BYTE PTR fs:[ebp+0x2d],bh
  416756:	sti    
  416757:	cmp    edx,DWORD PTR [edx+ebp*1+0x44]
  41675b:	pusha  
  41675c:	iret   
  41675d:	(bad)  
  41675e:	outs   dx,BYTE PTR ds:[esi]
  41675f:	mov    gs,ebx
  416761:	(bad)  
  416762:	xchg   edx,eax
  416763:	xlat   BYTE PTR ds:[ebx]
  416764:	cli    
  416765:	jle    0x416706
  416767:	mov    al,0x22
  416769:	or     dh,bl
  41676b:	mov    dh,dh
  41676d:	dec    ecx
  41676e:	inc    esp
  41676f:	sub    al,0x46
  416771:	xchg   edi,eax
  416772:	cmp    eax,0xc5d32f1e
  416777:	dec    esp
  416778:	icebp  
  416779:	in     al,0xa9
  41677b:	mov    edi,0x3be18ace
  416780:	mov    DWORD PTR [ebp-0x73],ebx
  416783:	ja     0x4167f3
  416785:	je     0x416711
  416787:	pop    edi
  416788:	cwde   
  416789:	fistp  DWORD PTR [ecx-0x309f5e55]
  41678f:	popf   
  416790:	in     al,0x5d
  416792:	pop    edi
  416793:	pop    esp
  416794:	popa   
  416795:	xchg   esi,eax
  416796:	jp     0x4167cd
  416798:	xor    DWORD PTR [esi],ebx
  41679a:	xor    al,0xb6
  41679c:	fmul   DWORD PTR [edi]
  41679e:	fisttp DWORD PTR [esi]
  4167a0:	in     al,dx
  4167a1:	mov    WORD PTR [esi-0x53],ds
  4167a4:	inc    edi
  4167a5:	push   0x8
  4167a7:	push   ebp
  4167a8:	and    DWORD PTR [eax+0x19],eax
  4167ab:	pop    ebx
  4167ac:	add    edx,DWORD PTR [esi+0x23]
  4167af:	ret    0xcd0f
  4167b2:	mov    ebp,0x5d5cdd8a
  4167b7:	retf   0x54a1
  4167ba:	pusha  
  4167bb:	stc    
  4167bc:	ret    0x3aa
  4167bf:	in     al,dx
  4167c0:	inc    ecx
  4167c1:	pop    ebx
  4167c2:	jecxz  0x416796
  4167c4:	jnp    0x416759
  4167c6:	push   ecx
  4167c7:	int    0x61
  4167c9:	dec    eax
  4167ca:	(bad)  
  4167cb:	push   0xe1dbf1fe
  4167d0:	dec    esi
  4167d1:	sahf   
  4167d2:	aaa    
  4167d3:	js     0x41675c
  4167d5:	rcl    cl,1
  4167d7:	ja     0x416816
  4167d9:	(bad)  
  4167da:	popf   
  4167db:	call   0xeb5c5851
  4167e0:	loope  0x4167eb
  4167e2:	outs   dx,DWORD PTR ds:[esi]
  4167e3:	mov    eax,0xebeba42a
  4167e8:	jnp    0x41679e
  4167ea:	enter  0xbf9d,0x9c
  4167ee:	xchg   esp,eax
  4167ef:	mov    ds:0x93ee0ebe,eax
  4167f4:	mov    esp,ebp
  4167f6:	or     eax,esi
  4167f8:	inc    edx
  4167f9:	jge    0x416784
  4167fb:	adc    dl,BYTE PTR [eax+0x38]
  4167fe:	sbb    edi,DWORD PTR [ecx]
  416800:	scas   al,BYTE PTR es:[edi]
  416801:	add    DWORD PTR [eax-0x62],0xffffffe0
  416805:	and    DWORD PTR [edi],ebp
  416807:	(bad)  
  416808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416809:	cwde   
  41680a:	mov    al,ds:0xee5be75b
  41680f:	out    0xc0,al
  416811:	mov    gs,WORD PTR [esi+0x16]
  416814:	loopne 0x41688b
  416816:	dec    edx
  416817:	ret    
  416818:	cwde   
  416819:	stos   BYTE PTR es:[edi],al
  41681a:	xchg   BYTE PTR [edi],ch
  41681c:	pop    esp
  41681d:	push   eax
  41681e:	mov    edx,0xcd442618
  416823:	pop    es
  416824:	in     eax,dx
  416825:	sti    
  416826:	jl     0x41683a
  416828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416829:	cmc    
  41682a:	xor    al,0xe0
  41682c:	mov    eax,ds:0xbe8900ce
  416831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416832:	cmp    ebp,DWORD PTR [esi+0x6a]
  416835:	xchg   esi,eax
  416836:	pusha  
  416837:	jne    0x4167c5
  416839:	mov    eax,0x5b2dca55
  41683e:	jmp    0x87b0dd92
  416843:	add    ebp,DWORD PTR [edi-0x73767571]
  416849:	jo     0x41689c
  41684b:	push   ds
  41684c:	jecxz  0x4167eb
  41684e:	ret    0x3c4b
  416851:	push   ds
  416852:	push   cs
  416853:	or     ebx,edx
  416855:	les    ecx,FWORD PTR [edi+0x452a8533]
  41685b:	mov    ds,WORD PTR [ecx-0x754015e6]
  416861:	(bad)  
  416862:	retf   
  416863:	sbb    al,0x21
  416865:	push   es
  416866:	ja     0x41686d
  416868:	xor    eax,DWORD PTR [ecx-0x670e5bf6]
  41686e:	lahf   
  41686f:	add    eax,0xad11422
  416874:	gs repz xchg ebx,eax
  416877:	rol    DWORD PTR [edi+0x20],cl
  41687a:	inc    edx
  41687b:	imul   DWORD PTR [eax+0x3dc4286a]
  416881:	mov    ebx,DWORD PTR [ebp+0x3520d2a6]
  416887:	xchg   esp,eax
  416888:	sub    eax,DWORD PTR [edi+0x72]
  41688b:	cld    
  41688c:	out    0xbd,eax
  41688e:	fwait
  41688f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416890:	xchg   DWORD PTR [ebp-0x42],edx
  416893:	cmp    cl,BYTE PTR [ebp+edi*1+0x7b]
  416897:	xchg   ebp,eax
  416898:	or     DWORD PTR [eax],eax
  41689a:	or     al,0x6c
  41689c:	push   ecx
  41689d:	jle    0x4168f9
  41689f:	inc    DWORD PTR [edi]
  4168a1:	mov    al,ds:0x5e5eaf28
  4168a6:	adc    ebp,DWORD PTR [ebx+eiz*4+0x5d8acf87]
  4168ad:	add    DWORD PTR [ebx+0x72b4f13d],ebx
  4168b3:	push   ebx
  4168b4:	icebp  
  4168b5:	inc    esi
  4168b6:	mov    esp,0xb3e41403
  4168bb:	push   esi
  4168bc:	pop    ebx
  4168bd:	prefetch (bad)
  4168be:	or     eax,0x9c8b6ee5
  4168c3:	or     edx,DWORD PTR [edi-0x23]
  4168c6:	xchg   edi,eax
  4168c7:	pop    ebx
  4168c8:	popa   
  4168c9:	jge    0x416900
  4168cb:	pop    eax
  4168cc:	adc    eax,0xe5475bb7
  4168d1:	inc    ecx
  4168d2:	(bad)  
  4168d4:	dec    ecx
  4168d5:	fcomip st,st(2)
  4168d7:	cdq    
  4168d8:	test   BYTE PTR [edx-0xc6404b7],cl
  4168de:	xor    BYTE PTR es:[eax+ebx*2+0x4e16bb4c],0x4d
  4168e7:	sub    dl,BYTE PTR [ecx+ebx*2-0x4955b87a]
  4168ee:	sub    BYTE PTR [edx],0x3b
  4168f1:	dec    ebx
  4168f2:	jne    0x416885
  4168f4:	test   DWORD PTR [esi-0x66ef911c],esp
  4168fa:	loope  0x416893
  4168fc:	sub    ebp,edx
  4168fe:	cmp    edx,DWORD PTR [ebp-0x47]
  416901:	adc    BYTE PTR [ebx+0x28ffc9dd],dh
  416907:	or     eax,0xd0f0f522
  41690c:	add    dh,dh
  41690e:	pop    eax
  41690f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416910:	jp     0x416903
  416912:	frstor [edi+0x10]
  416915:	aam    0x77
  416917:	push   esp
  416918:	pop    ecx
  416919:	leave  
  41691a:	outs   dx,BYTE PTR ds:[esi]
  41691b:	xor    al,0x6f
  41691d:	(bad)  
  41691e:	and    BYTE PTR [ecx],al
  416920:	out    0x1f,al
  416922:	inc    edx
  416923:	sbb    DWORD PTR [esi-0x2e],0xffffffa2
  416927:	test   dl,dh
  416929:	sar    BYTE PTR [edi],cl
  41692b:	dec    ebx
  41692c:	xlat   BYTE PTR ds:[ebx]
  41692d:	aad    0x13
  41692f:	popa   
  416930:	sbb    edx,DWORD PTR [esp+ebx*8+0xbb70840]
  416937:	sbb    DWORD PTR [ebx-0x70],ecx
  41693a:	in     al,0x4d
  41693c:	xchg   ebx,eax
  41693d:	and    dl,ch
  41693f:	int    0xd1
  416941:	mov    ebx,0x43c0ac3f
  416946:	dec    edx
  416947:	mov    ebx,0x7b64f3dc
  41694c:	lods   al,BYTE PTR ds:[esi]
  41694d:	cdq    
  41694e:	mov    ebp,0xbf04ce80
  416953:	mov    DWORD PTR [edx],ebp
  416955:	call   0xef27:0x7046eec4
  41695c:	dec    ecx
  41695d:	cmp    al,0x53
  41695f:	cwde   
  416960:	jl     0x4169b3
  416962:	dec    eax
  416963:	lods   eax,DWORD PTR ds:[esi]
  416964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416965:	aas    
  416966:	aaa    
  416967:	in     eax,dx
  416968:	inc    esp
  416969:	cmp    BYTE PTR [esi+0x66],0x18
  41696d:	into   
  41696e:	or     al,cl
  416970:	call   DWORD PTR [edx]
  416972:	std    
  416973:	adc    BYTE PTR [eax-0x6b8a1f01],0xcb
  41697a:	test   BYTE PTR [edi-0x7177f6de],0x21
  416981:	jnp    0x12896381
  416987:	cli    
  416988:	int3   
  416989:	inc    ebp
  41698a:	ret    
  41698b:	out    0x26,al
  41698d:	in     eax,dx
  41698e:	fadd   DWORD PTR ds:0xa7fce44d
  416994:	pop    ss
  416995:	lods   eax,DWORD PTR ds:[esi]
  416996:	xor    eax,DWORD PTR [edi+edi*4-0x3185ab8]
  41699d:	mov    esp,0x353df12a
  4169a2:	jmp    0x2042:0x6bd564f2
  4169a9:	rol    DWORD PTR [ebx-0x60770e37],cl
  4169af:	xor    esp,DWORD PTR ds:0x2e0c3940
  4169b5:	ja     0x416944
  4169b7:	ss fcmove st,st(5)
  4169ba:	pop    edx
  4169bb:	(bad)  
  4169bc:	shl    BYTE PTR [ecx-0x58812eb6],1
  4169c2:	inc    ebp
  4169c3:	out    0x64,al
  4169c5:	and    DWORD PTR gs:[edi-0x75],edi
  4169c9:	(bad)  [ecx-0x7c18dafe]
  4169cf:	mov    ds:0xa6c25390,eax
  4169d4:	push   edx
  4169d5:	sub    eax,esi
  4169d7:	jl     0x416a22
  4169d9:	add    esp,ecx
  4169db:	sbb    ecx,DWORD PTR [edx]
  4169dd:	shl    BYTE PTR [ebp-0x14b7dfae],1
  4169e3:	push   cs
  4169e4:	loop   0x416a26
  4169e6:	into   
  4169e7:	xchg   esi,eax
  4169e8:	cmp    al,0x9c
  4169ea:	test   BYTE PTR [eax],al
  4169ec:	arpl   WORD PTR [ecx+0x2c],bp
  4169ef:	mov    DWORD PTR [ecx-0x19d74594],edi
  4169f5:	cmc    
  4169f6:	mov    ch,0x80
  4169f8:	adc    ebx,esp
  4169fa:	aaa    
  4169fb:	ins    BYTE PTR es:[edi],dx
  4169fc:	repz or edi,edx
  4169ff:	push   esi
  416a00:	repz and BYTE PTR gs:[ebp+0x5],0x35
  416a06:	mov    dh,0x40
  416a08:	call   0x116708b
  416a0d:	cmp    DWORD PTR [ecx],esp
  416a0f:	jmp    0x479547ac
  416a14:	or     eax,0x46d38f56
  416a19:	mov    al,ds:0xda007db2
  416a1e:	ss push edx
  416a20:	sub    BYTE PTR [esp+edx*1-0x21],ah
  416a24:	xchg   ecx,eax
  416a25:	test   eax,0x2105b01e
  416a2a:	dec    ecx
  416a2b:	test   BYTE PTR [edi-0x4d],dh
  416a2e:	cld    
  416a2f:	rcl    DWORD PTR [edx+eax*4-0x31],0x69
  416a34:	add    dl,BYTE PTR [ecx]
  416a36:	xor    eax,0x228ab7a6
  416a3b:	adc    esi,DWORD PTR [ecx+esi*1]
  416a3e:	jb     0x416a4d
  416a40:	in     al,0x44
  416a42:	cmp    eax,0x1b671c20
  416a47:	inc    edx
  416a48:	jne    0x416a42
  416a4a:	xor    cl,0x2e
  416a4d:	call   FWORD PTR [eax+0x264a3157]
  416a53:	rol    bh,cl
  416a55:	mov    WORD PTR ss:[ecx+0x2e9f3c3b],ss
  416a5c:	not    DWORD PTR [eax-0x3fa3a8b9]
  416a62:	arpl   WORD PTR [ebx+0x2aa0a9d5],si
  416a68:	fdiv   DWORD PTR [eax+0x54b1d05]
  416a6e:	mov    ds:0x998e4476,al
  416a73:	mov    ds:0x46ee4760,al
  416a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a79:	lea    ecx,[edx-0x15]
  416a7c:	(bad)  
  416a7d:	retf   
  416a7e:	or     BYTE PTR [edx],ah
  416a80:	shr    DWORD PTR [eax+eiz*2],cl
  416a83:	test   DWORD PTR [ecx+ebp*4-0x68],ebx
  416a87:	into   
  416a88:	adc    BYTE PTR [ebx-0x70c8e7eb],cl
  416a8e:	cmc    
  416a8f:	test   BYTE PTR [ecx+0x62f430d6],ah
  416a95:	loope  0x416b0d
  416a97:	int    0x56
  416a99:	iret   
  416a9a:	push   0xda504beb
  416a9f:	pop    es
  416aa0:	sub    al,0xf3
  416aa2:	mov    ecx,0xcb6cffcf
  416aa7:	aam    0xbd
  416aa9:	dec    eax
  416aaa:	push   edx
  416aab:	(bad)  [ecx-0x741df62]
  416ab1:	fiadd  WORD PTR [eax+0x30]
  416ab4:	les    ebp,FWORD PTR [ebx+0x9b2ce2]
  416aba:	push   esi
  416abb:	xor    cl,ah
  416abd:	cdq    
  416abe:	into   
  416abf:	fldcw  WORD PTR [esi-0x980141d]
  416ac5:	jmp    DWORD PTR [esi-0x2562907a]
  416acb:	(bad)  [eax-0x33701478]
  416ad1:	scas   eax,DWORD PTR es:[edi]
  416ad2:	rcr    DWORD PTR [ebp-0xf],cl
  416ad5:	movlps xmm1,QWORD PTR [eax+ebp*1]
  416ad9:	call   0xa705:0x9782fa11
  416ae0:	mov    cl,0xcc
  416ae2:	jno    0x416b1b
  416ae4:	cmp    al,0xb4
  416ae6:	les    edi,FWORD PTR [ebp-0x7c569603]
  416aec:	div    DWORD PTR [edx]
  416aee:	dec    ecx
  416aef:	jbe    0x416b0d
  416af1:	push   cs
  416af2:	mov    ch,BYTE PTR [edx-0x72d1ea4f]
  416af8:	push   edx
  416af9:	or     BYTE PTR [ebx+esi*2],ch
  416afc:	add    esi,DWORD PTR es:[ecx]
  416aff:	mov    al,ds:0x1fcef1c9
  416b04:	add    eax,ecx
  416b06:	das    
  416b07:	mov    al,0xa9
  416b09:	push   esi
  416b0a:	cld    
  416b0b:	push   es
  416b0c:	adc    ch,BYTE PTR [edi-0x641ffccc]
  416b12:	test   esi,ebx
  416b14:	int3   
  416b15:	add    eax,0xac3a7b94
  416b1a:	fcomi  st,st(0)
  416b1c:	mov    esi,0x54c7371f
  416b21:	sbb    DWORD PTR [ebx+0x61],eax
  416b24:	sub    BYTE PTR [edx],dl
  416b26:	inc    eax
  416b27:	inc    cx
  416b29:	mov    eax,ds:0x6ab67d8a
  416b2e:	shl    BYTE PTR [edi+0x1e70a117],0x61
  416b35:	test   BYTE PTR [edi],cl
  416b37:	das    
  416b38:	jb     0x416ae6
  416b3a:	lods   al,BYTE PTR ds:[esi]
  416b3b:	and    BYTE PTR [ebp+0x6c],dl
  416b3e:	xchg   edx,eax
  416b3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b40:	sub    al,ch
  416b42:	mov    ch,0x9e
  416b44:	(bad)  
  416b45:	es clc 
  416b47:	cld    
  416b48:	fadd   DWORD PTR [esi+0x39]
  416b4b:	dec    esi
  416b4c:	adc    al,0x8e
  416b4e:	mov    ah,0x6a
  416b50:	call   DWORD PTR [esi+0x5ef93a5f]
  416b56:	mov    edx,0xbc7740d6
  416b5b:	mov    BYTE PTR [ebx],dl
  416b5d:	mov    al,0x18
  416b5f:	mov    ah,0x2e
  416b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b62:	stc    
  416b63:	jo     0x416ba1
  416b65:	fcomp  DWORD PTR [esi]
  416b67:	push   ds
  416b68:	jmp    0x3d8c:0xe55b1b51
  416b6f:	dec    eax
  416b70:	jmp    0xda7bb965
  416b75:	xchg   DWORD PTR [edx+0x5e5988e0],edx
  416b7b:	popf   
  416b7c:	icebp  
  416b7d:	(bad)  
  416b7e:	in     al,0xa
  416b80:	mov    ecx,0xc41c9772
  416b85:	or     eax,0xb9e822df
  416b8a:	fsubr  QWORD PTR [edx-0x14]
  416b8d:	xlat   BYTE PTR ds:[ebx]
  416b8e:	cdq    
  416b8f:	adc    ch,BYTE PTR [ebp-0x6a30bb73]
  416b95:	inc    ecx
  416b96:	fldenv [edx]
  416b98:	loop   0x416b9d
  416b9a:	in     al,0x8b
  416b9c:	xor    eax,0x58f378b
  416ba1:	sbb    eax,0x93a30f7a
  416ba6:	(bad)  
  416ba7:	push   0x2be6f0e4
  416bac:	in     eax,0xb4
  416bae:	push   ds
  416baf:	pop    esi
  416bb0:	cmc    
  416bb1:	mov    eax,0xf05eca5e
  416bb6:	aaa    
  416bb7:	stc    
  416bb8:	push   esi
  416bb9:	adc    edx,DWORD PTR [ecx-0x4a729284]
  416bbf:	pop    esi
  416bc0:	hlt    
  416bc1:	scas   eax,DWORD PTR es:[edi]
  416bc2:	mov    dl,0xbe
  416bc4:	std    
  416bc5:	retf   0xeae
  416bc8:	pop    esp
  416bc9:	jmp    0x7fae:0xe89d5d8d
  416bd0:	data16 mov al,ds:0x36079d44
  416bd6:	cmp    dh,BYTE PTR [esi-0x5d29849e]
  416bdc:	pop    eax
  416bdd:	popf   
  416bde:	fmul   QWORD PTR [ebx]
  416be0:	adc    BYTE PTR [ebx+0x5d],dh
  416be3:	add    al,0x46
  416be5:	test   DWORD PTR [edx-0x44],ebp
  416be8:	adc    bl,BYTE PTR [esi]
  416bea:	mov    cl,0xa8
  416bec:	push   ecx
  416bed:	jns    0x416bcd
  416bef:	imul   ebp,DWORD PTR [edx-0x48],0xffffffa6
  416bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf4:	pop    eax
  416bf5:	sub    eax,0x28e48923
  416bfa:	call   0x164c:0xecbc764d
  416c01:	mov    DWORD PTR [edi+0x466cc08d],edi
  416c07:	and    DWORD PTR [ecx+0x2746e6be],ebx
  416c0d:	pop    esi
  416c0e:	into   
  416c0f:	xor    dh,al
  416c11:	xchg   edi,eax
  416c12:	inc    ebp
  416c13:	and    DWORD PTR [ebx+edx*1],esp
  416c16:	adc    BYTE PTR [edx+0x39],dl
  416c19:	add    eax,0xac9ea793
  416c1e:	lahf   
  416c1f:	outs   dx,DWORD PTR ds:[esi]
  416c20:	xchg   edi,eax
  416c21:	rcl    BYTE PTR [edx+eiz*8],0x67
  416c25:	mov    gs,esi
  416c27:	pop    eax
  416c28:	repnz cmp cl,dh
  416c2b:	mov    dl,0x9f
  416c2d:	in     eax,dx
  416c2e:	jne    0x416be7
  416c30:	pushf  
  416c31:	ja     0x416c0d
  416c33:	xor    eax,DWORD PTR [esi+ebx*8+0x4d2dcd88]
  416c3a:	inc    eax
  416c3b:	jmp    0xccc6da7c
  416c40:	push   edi
  416c41:	aam    0xd8
  416c43:	xchg   esi,eax
  416c44:	sbb    DWORD PTR [esi+0x66bc5374],edx
  416c4a:	(bad)  
  416c4b:	out    dx,eax
  416c4c:	inc    eax
  416c4d:	inc    edx
  416c4e:	sbb    al,0xb6
  416c50:	xchg   esp,eax
  416c51:	and    ecx,DWORD PTR [eax+eax*1+0x6744e0c2]
  416c58:	adc    al,0x53
  416c5a:	dec    ebx
  416c5b:	jg     0x416c92
  416c5d:	mov    ch,0x24
  416c5f:	xchg   ebx,eax
  416c60:	loop   0x416c0b
  416c62:	xor    eax,0x347f9d8a
  416c67:	icebp  
  416c68:	xchg   ebp,eax
  416c69:	fdiv   QWORD PTR [ebp+0x37345227]
  416c6f:	sbb    bh,bl
  416c71:	loop   0x416c27
  416c73:	mov    al,0x8c
  416c75:	pop    esp
  416c76:	fisubr DWORD PTR [edx+0xd116dd2]
  416c7c:	adc    DWORD PTR [edi-0x32e7781],ecx
  416c82:	iret   
  416c83:	jns    0x416c0e
  416c85:	lock cmp BYTE PTR [ebx-0x55],ch
  416c89:	and    al,0x81
  416c8b:	mov    ah,0xa8
  416c8d:	rol    DWORD PTR [edi],0xf4
  416c90:	das    
  416c91:	sub    eax,0x8ffa2cd4
  416c96:	cmp    al,0xd
  416c98:	adc    bh,bl
  416c9a:	sub    DWORD PTR [eax],edx
  416c9c:	push   eax
  416c9d:	js     0x416c29
  416c9f:	fadd   st,st(7)
  416ca1:	xlat   BYTE PTR ds:[ebx]
  416ca2:	push   0x7d22bff9
  416ca7:	icebp  
  416ca8:	jno    0x416c7f
  416caa:	xchg   ecx,eax
  416cab:	scas   eax,DWORD PTR es:[edi]
  416cac:	adc    eax,0x385c6e57
  416cb1:	and    cl,BYTE PTR [edi]
  416cb3:	pop    esp
  416cb4:	jo     0x416ce7
  416cb6:	jge    0x416ce5
  416cb8:	jg     0x416d36
  416cba:	ret    0x70a7
  416cbd:	adc    ah,al
  416cbf:	pop    ss
  416cc0:	mov    dl,0x1f
  416cc2:	neg    esp
  416cc4:	sbb    eax,0x7ee37268
  416cc9:	xor    ah,dh
  416ccb:	mov    ds:0x3766cf6a,al
  416cd0:	(bad)  
  416cd1:	bound  ecx,QWORD PTR [eax-0x14]
  416cd4:	pop    esp
  416cd5:	sub    eax,0xe33ca1d6
  416cda:	jl     0x416d58
  416cdc:	mov    ecx,0x65364c42
  416ce1:	adc    eax,0xb2c85032
  416ce6:	fstp   TBYTE PTR [ecx]
  416ce8:	ror    esp,cl
  416cea:	mov    ebp,0x46ece182
  416cef:	popa   
  416cf0:	sub    ebp,esp
  416cf2:	mov    eax,ds:0xe875f52e
  416cf7:	push   ecx
  416cf8:	lock aad 0x80
  416cfb:	cmp    eax,0xa2b88c2d
  416d00:	mov    dl,0xab
  416d02:	mov    edx,0x8dcb570
  416d07:	jmp    0x9089:0x7cbc7ce8
  416d0e:	push   esp
  416d0f:	fsub   QWORD PTR ds:0x9b357e14
  416d15:	sub    edi,DWORD PTR [ecx+0x6]
  416d18:	daa    
  416d19:	js     0x416ce6
  416d1b:	mov    eax,ds:0x2769dd29
  416d20:	add    al,0x4e
  416d22:	cmp    ch,BYTE PTR [edi]
  416d24:	stos   BYTE PTR es:[edi],al
  416d25:	xor    bh,BYTE PTR [esi]
  416d27:	call   0xd8d327f9
  416d2c:	aad    0x41
  416d2e:	hlt    
  416d2f:	push   ebp
  416d30:	sub    si,si
  416d33:	pop    edx
  416d34:	out    0xd2,al
  416d36:	int    0x93
  416d38:	sub    al,ch
  416d3a:	adc    al,0x34
  416d3c:	mov    cl,0x71
  416d3e:	out    dx,al
  416d3f:	push   eax
  416d40:	dec    ebx
  416d41:	cld    
  416d42:	retf   0x4928
  416d45:	icebp  
  416d46:	(bad)  
  416d48:	dec    eax
  416d49:	jge    0x416cfa
  416d4b:	(bad)  
  416d4c:	fbld   TBYTE PTR [ebx]
  416d4e:	or     al,BYTE PTR [edx-0x4437c022]
  416d54:	nop
  416d55:	adc    BYTE PTR [ebp-0x47],dl
  416d58:	hlt    
  416d59:	gs ins DWORD PTR es:[edi],dx
  416d5b:	or     BYTE PTR [edi-0x42],ch
  416d5e:	sbb    eax,0x37bfe98e
  416d63:	ret    
  416d64:	cmp    al,0xe3
  416d66:	or     eax,0x26cf489c
  416d6b:	and    ch,ch
  416d6d:	call   FWORD PTR [edx-0x34ccd78d]
  416d73:	sbb    al,0x26
  416d75:	in     al,dx
  416d76:	imul   ebx,DWORD PTR ds:0x6066398f,0x23
  416d7d:	pop    esp
  416d7e:	mov    ebx,0x1c1f27ee
  416d83:	pop    edx
  416d84:	dec    edx
  416d85:	ret    0xfcde
  416d88:	nop
  416d89:	test   DWORD PTR [ebp+0x3f],ecx
  416d8c:	ins    BYTE PTR es:[edi],dx
  416d8d:	ins    DWORD PTR es:[edi],dx
  416d8e:	outs   dx,DWORD PTR ds:[esi]
  416d8f:	mov    esi,0x249893e9
  416d94:	jg     0x416d9e
  416d96:	sub    BYTE PTR [edi-0x3ecc7b72],0x33
  416d9d:	mov    DWORD PTR [ebp+0x9],ebx
  416da0:	jmp    0x416d70
  416da2:	sub    al,0x89
  416da4:	pushf  
  416da5:	add    BYTE PTR [ebx+0x9],ch
  416da8:	into   
  416da9:	or     eax,0xf6c72165
  416dae:	cdq    
  416daf:	cdq    
  416db0:	mov    ch,0x9e
  416db2:	nop
  416db3:	cs jmp 0xf7c2cb5a
  416db9:	mov    bl,0x79
  416dbb:	fs sahf 
  416dbd:	out    0x4e,eax
  416dbf:	push   edx
  416dc0:	jle    0x416d75
  416dc2:	xchg   ecx,eax
  416dc3:	inc    esi
  416dc4:	sbb    eax,0x84bd2a18
  416dc9:	mov    ebx,DWORD PTR ds:0x8cc412af
  416dcf:	dec    ecx
  416dd0:	xchg   ebx,eax
  416dd1:	stos   DWORD PTR es:[edi],eax
  416dd2:	cmc    
  416dd3:	pusha  
  416dd4:	sub    BYTE PTR fs:[esi],bh
  416dd7:	gs inc ebp
  416dd9:	dec    esp
  416dda:	mov    ds:0x725e4ab5,eax
  416ddf:	out    0xb8,al
  416de1:	mov    al,ds:0xd9b7e218
  416de6:	adc    dl,bl
  416de8:	xchg   ebp,eax
  416de9:	xor    BYTE PTR [eax],bh
  416deb:	(bad)  
  416dec:	inc    edx
  416ded:	outs   dx,DWORD PTR ds:[esi]
  416dee:	div    DWORD PTR [esi-0x19ff9261]
  416df4:	cmp    DWORD PTR [ebx+0x212c9b3],edx
  416dfa:	sub    BYTE PTR [edx+0x4f],dl
  416dfd:	inc    edi
  416dfe:	lea    ebp,[ebx-0x38]
  416e01:	aam    0x68
  416e03:	outs   dx,BYTE PTR ds:[esi]
  416e04:	pop    ebp
  416e05:	dec    edx
  416e06:	sahf   
  416e07:	mov    esi,0xdae25b5b
  416e0c:	pop    ss
  416e0d:	jae    0x416e4c
  416e0f:	push   ecx
  416e10:	cmp    al,BYTE PTR [eax+edx*4-0x6d]
  416e14:	fwait
  416e15:	popf   
  416e16:	std    
  416e17:	(bad)  
  416e18:	xchg   ebx,eax
  416e19:	sbb    al,0x98
  416e1b:	sbb    BYTE PTR [edx],0x56
  416e1e:	pop    es
  416e1f:	jno    0x416de5
  416e21:	pop    edx
  416e22:	popf   
  416e23:	jmp    0x416db5
  416e25:	idiv   ebp
  416e27:	mov    cl,0x16
  416e29:	mov    DWORD PTR [ecx],esi
  416e2b:	push   0xffffffca
  416e2d:	push   0xc6476290
  416e32:	jno    0x416db7
  416e34:	arpl   WORD PTR [edi+ecx*1+0x6b],di
  416e38:	xchg   edi,eax
  416e39:	lods   eax,DWORD PTR ds:[esi]
  416e3a:	cmp    al,0x25
  416e3c:	dec    ebp
  416e3d:	sbb    DWORD PTR [ebp+0x5016c797],edi
  416e43:	stc    
  416e44:	int    0x99
  416e46:	rcr    DWORD PTR [edx],1
  416e48:	shr    DWORD PTR [edi-0x80],1
  416e4b:	bound  edx,QWORD PTR [esp+esi*8+0x37]
  416e4f:	inc    ebp
  416e50:	xor    dl,dh
  416e52:	clc    
  416e53:	leave  
  416e54:	xlat   BYTE PTR ds:[ebx]
  416e55:	scas   al,BYTE PTR es:[edi]
  416e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e57:	jne    0x416e61
  416e59:	pop    ss
  416e5a:	ss inc edx
  416e5c:	test   BYTE PTR [edx+0x16],bh
  416e5f:	loope  0x416e8b
  416e61:	inc    edx
  416e62:	mov    ?,WORD PTR [esi-0x3efe60a0]
  416e68:	mov    ecx,0xeecc767f
  416e6d:	xor    esp,DWORD PTR [esi]
  416e6f:	mov    eax,ds:0x7be0c561
  416e74:	data16 (bad) 
  416e76:	mov    bl,0x9d
  416e78:	retf   0x5518
  416e7b:	ret    
  416e7c:	daa    
  416e7d:	popf   
  416e7e:	pop    edi
  416e7f:	idiv   BYTE PTR [edx-0x3631238b]
  416e85:	push   esi
  416e86:	mov    WORD PTR [edx+ebx*8+0x35],ds
  416e8a:	jle    0x416eff
  416e8c:	add    bl,BYTE PTR [edi+ebx*8]
  416e8f:	mov    esi,0x5ade85dc
  416e94:	mov    bl,0x38
  416e96:	jmp    0xfe1ee83d
  416e9b:	adc    eax,0xf7e88b44
  416ea0:	ret    
  416ea1:	sbb    BYTE PTR [edx+eax*1+0x1caed9c2],ch
  416ea8:	fwait
  416ea9:	jmp    0x416ef8
  416eab:	push   esi
  416eac:	xor    BYTE PTR [edx],dh
  416eae:	mov    ah,0xef
  416eb0:	outs   dx,BYTE PTR ds:[esi]
  416eb1:	push   es
  416eb2:	aaa    
  416eb3:	in     al,dx
  416eb4:	lea    esp,[esi]
  416eb6:	in     eax,dx
  416eb7:	das    
  416eb8:	inc    esp
  416eb9:	(bad)  
  416ebb:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  416ebd:	(bad)  
  416ebe:	mov    ebx,edi
  416ec0:	or     al,0xbf
  416ec2:	push   esi
  416ec3:	dec    edi
  416ec4:	call   0xd33d:0x96f0c6a6
  416ecb:	mov    BYTE PTR [ebp-0x682349eb],0xcc
  416ed2:	iret   
  416ed3:	cmc    
  416ed4:	retf   0x935f
  416ed7:	sub    ah,BYTE PTR [ebx-0x4d2b43bb]
  416edd:	mov    ebx,0x455c6e51
  416ee2:	bound  edx,QWORD PTR [ebx]
  416ee4:	xor    ebp,DWORD PTR [edx]
  416ee6:	mov    cl,dl
  416ee8:	lahf   
  416ee9:	out    0xac,al
  416eeb:	call   0xec0d357b
  416ef0:	out    dx,al
  416ef1:	fs jg  0x416e75
  416ef4:	(bad)  
  416ef5:	adc    al,0x58
  416ef7:	jecxz  0x416ea1
  416ef9:	inc    esi
  416efa:	xchg   edi,eax
  416efb:	popa   
  416efc:	or     DWORD PTR [edi+ecx*8+0x7d],ebx
  416f00:	adc    esp,esi
  416f02:	lods   al,BYTE PTR ds:[esi]
  416f03:	mov    ebp,0xc3495c14
  416f08:	xor    eax,0x2fccd3c4
  416f0d:	sahf   
  416f0e:	aam    0xaf
  416f10:	push   cs
  416f11:	mov    bh,0xcd
  416f13:	outs   dx,DWORD PTR ds:[esi]
  416f14:	shl    BYTE PTR [eax+0x6b008898],cl
  416f1a:	imul   DWORD PTR [ecx]
  416f1c:	adc    ah,BYTE PTR [edx]
  416f1e:	dec    ecx
  416f1f:	dec    edx
  416f20:	push   edx
  416f21:	mov    ds:0xfcee9f21,al
  416f26:	jo     0x416f51
  416f28:	test   BYTE PTR cs:[edi+eax*4-0x3e],0x34
  416f2e:	(bad)  
  416f2f:	out    0xfb,eax
  416f31:	inc    eax
  416f32:	out    0xfc,eax
  416f34:	mov    dl,0x78
  416f36:	inc    ebx
  416f37:	xchg   ebx,eax
  416f38:	inc    edx
  416f39:	aad    0x78
  416f3b:	mov    eax,0xa0e47fac
  416f40:	sub    al,0x8b
  416f42:	out    dx,al
  416f43:	leave  
  416f44:	cmp    cl,ch
  416f46:	push   ss
  416f47:	(bad)  
  416f48:	aam    0x4c
  416f4a:	cmp    BYTE PTR [edi+edx*8+0x3a],bh
  416f4e:	(bad)  
  416f4f:	cs (bad) 
  416f52:	cwde   
  416f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f54:	(bad)  
  416f55:	dec    esp
  416f56:	test   al,0x29
  416f58:	ret    0x8c8e
  416f5b:	xor    edx,DWORD PTR [edi+0x7d671810]
  416f61:	shr    DWORD PTR [edx],1
  416f63:	sbb    dl,0x84
  416f66:	jns    0x416fad
  416f68:	or     eax,0x9dee146e
  416f6d:	sub    BYTE PTR [ecx+0x14d3c1a],cl
  416f73:	jp     0x416f6e
  416f75:	adc    al,0x8c
  416f77:	cmp    ah,BYTE PTR [edi]
  416f79:	push   esi
  416f7a:	xchg   edx,eax
  416f7b:	fneni(8087 only) 
  416f7d:	jl     0x416f41
  416f7f:	inc    esi
  416f80:	rol    DWORD PTR [ebx+0x17],0x23
  416f84:	arpl   WORD PTR [eax-0x34bb7c2a],bx
  416f8a:	scas   al,BYTE PTR es:[edi]
  416f8b:	xor    edi,DWORD PTR [esi+0x3c8bdaf]
  416f91:	ret    0x6a70
  416f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f95:	jmp    0xdecc3eba
  416f9a:	and    ebp,DWORD PTR [ecx-0x4275d4eb]
  416fa0:	jmp    0x2292:0x57b19aec
  416fa7:	hlt    
  416fa8:	sbb    eax,0xc5434c9
  416fad:	mov    db2,eax
  416fb0:	sbb    ebx,DWORD PTR [ebx+ebp*4-0x138623dd]
  416fb7:	cmp    eax,0xa4521344
  416fbc:	hlt    
  416fbd:	cmp    al,0x9e
  416fbf:	jne    0x416ffd
  416fc1:	dec    edx
  416fc2:	daa    
  416fc3:	mov    ds:0x601ff912,eax
  416fc8:	mov    ds:0xd7107d62,al
  416fcd:	inc    edi
  416fce:	icebp  
  416fcf:	xchg   BYTE PTR [ecx+0x48e681ba],ch
  416fd5:	inc    edi
  416fd6:	adc    al,0x34
  416fd8:	cmp    DWORD PTR [eax],ecx
  416fda:	sbb    DWORD PTR [ecx+0x2d],edi
  416fdd:	arpl   WORD PTR fs:[edx-0x1c],di
  416fe1:	and    esi,esi
  416fe3:	jo     0x41703d
  416fe5:	sbb    edi,DWORD PTR [ecx+eiz*8+0x47c94232]
  416fec:	scas   eax,DWORD PTR es:[edi]
  416fed:	xlat   BYTE PTR ds:[ebx]
  416fee:	push   ebp
  416fef:	cs sbb esi,esi
  416ff2:	lahf   
  416ff3:	jo     0x417021
  416ff5:	jo     0x417074
  416ff7:	ds mov dh,0x83
  416ffa:	scas   eax,DWORD PTR es:[edi]
  416ffb:	mov    al,0xa6
  416ffd:	fisubr DWORD PTR [eax+0x75]
  417000:	or     ebp,ebx
  417002:	iret   
  417003:	lods   eax,DWORD PTR ds:[esi]
  417004:	sub    eax,edi
  417006:	add    ch,BYTE PTR [edi-0x30cd1da3]
  41700c:	cdq    
  41700d:	in     eax,dx
  41700e:	stos   DWORD PTR es:[edi],eax
  41700f:	add    dh,bh
  417011:	mov    al,0xe
  417013:	or     ecx,DWORD PTR [ecx+0x27]
  417016:	cmp    ebx,DWORD PTR [ecx+0x40f3dbe7]
  41701c:	(bad)  
  41701d:	dec    esi
  41701e:	aas    
  41701f:	cs mov dl,0x8c
  417022:	mov    ecx,ecx
  417024:	inc    esi
  417025:	mov    ds:0xcda43b92,eax
  41702a:	stc    
  41702b:	add    DWORD PTR [eax],ecx
  41702d:	sub    DWORD PTR [ebx-0x78ebde0],ebx
  417033:	lds    ebx,FWORD PTR [edi]
  417035:	leave  
  417036:	popf   
  417037:	fdiv   st(6),st
  417039:	clc    
  41703a:	into   
  41703b:	aam    0x88
  41703d:	enter  0x3bc5,0xd8
  417041:	add    eax,0xe1714b4b
  417046:	dec    esp
  417047:	or     ebx,edx
  417049:	jp     0x41704e
  41704b:	fwait
  41704c:	call   0xf3b6:0xa56c8571
  417053:	jae    0x4170c8
  417055:	(bad)  [eax+0x37]
  417058:	push   ebp
  417059:	cmc    
  41705a:	sbb    eax,edi
  41705c:	sahf   
  41705d:	dec    esi
  41705e:	cmp    ebp,DWORD PTR [ecx-0x49ad3f87]
  417064:	ret    
  417065:	mov    ebx,0xde8c732a
  41706a:	icebp  
  41706b:	or     cl,cl
  41706d:	aad    0x1d
  41706f:	xor    BYTE PTR [ebp+eiz*2+0x5e],0x76
  417074:	adc    BYTE PTR [ecx],dh
  417076:	fimul  DWORD PTR [ebx-0x6de0ca4f]
  41707c:	out    0x77,eax
  41707e:	xchg   esp,eax
  41707f:	adc    eax,0xcb3548d8
  417084:	sub    dl,dl
  417086:	mov    ch,0xf1
  417088:	xchg   ebp,eax
  417089:	pop    ebp
  41708a:	pushf  
  41708b:	fld    TBYTE PTR [ecx]
  41708d:	mov    bl,0xd1
  41708f:	lea    edx,ds:0x19cce86e
  417095:	dec    eax
  417096:	pop    ebx
  417097:	adc    al,0xd5
  417099:	inc    ebp
  41709a:	call   0x93e90ed1
  41709f:	inc    eax
  4170a0:	pop    ebx
  4170a1:	jb     0x4170d6
  4170a3:	mov    es,WORD PTR [edi+0x3781177]
  4170a9:	mov    eax,0x51c98320
  4170ae:	jle    0x417049
  4170b0:	sti    
  4170b1:	pop    ebp
  4170b2:	in     al,0xb4
  4170b4:	or     ebx,DWORD PTR [eax+0xf]
  4170b7:	int3   
  4170b8:	inc    ecx
  4170b9:	sub    ch,bh
  4170bb:	ror    BYTE PTR [edi],1
  4170bd:	inc    ebp
  4170be:	outs   dx,BYTE PTR ds:[esi]
  4170bf:	inc    ebx
  4170c0:	les    esi,FWORD PTR [edx]
  4170c2:	mov    bl,0xa1
  4170c4:	mov    DWORD PTR [edi+0x0],ecx
  4170c7:	jg     0x41713e
  4170c9:	push   ds
  4170ca:	mov    WORD PTR [eax-0x6556c4e0],es
  4170d0:	xchg   esi,eax
  4170d1:	or     eax,0x19b1a8ce
  4170d6:	loopne 0x417113
  4170d8:	and    esp,ecx
  4170da:	and    dl,BYTE PTR [esi-0x2629fee]
  4170e0:	push   edx
  4170e1:	adc    DWORD PTR [edi+ebp*8+0x2faeac04],edx
  4170e8:	or     edx,ebp
  4170ea:	rcl    BYTE PTR [ebx],cl
  4170ec:	sub    BYTE PTR [eax-0x75],ch
  4170ef:	add    bh,BYTE PTR [ebx]
  4170f1:	mov    cl,BYTE PTR [edi-0x51a57697]
  4170f7:	inc    edx
  4170f9:	bound  edx,QWORD PTR ds:0x5d72826a
  4170ff:	sar    BYTE PTR [ebx],cl
  417101:	shl    BYTE PTR [ebp-0x2a],1
  417104:	enter  0x1b6d,0x7
  417108:	retf   0x6c28
  41710b:	inc    ebx
  41710c:	lods   al,BYTE PTR ds:[esi]
  41710d:	dec    esi
  41710e:	push   esp
  41710f:	outs   dx,BYTE PTR ds:[esi]
  417110:	nop
  417111:	ins    DWORD PTR es:[edi],dx
  417112:	mov    ebp,0x2619caa2
  417117:	cdq    
  417118:	add    bl,BYTE PTR [ebx+0xd]
  41711b:	adc    eax,0xa46f087f
  417120:	(bad)  
  417121:	repz xchg edi,eax
  417123:	jbe    0x417130
  417125:	cvtpi2ps xmm5,mm2
  417128:	stc    
  417129:	xchg   ebx,eax
  41712a:	xchg   esp,eax
  41712b:	jne    0x4170ed
  41712d:	cmpps  xmm7,XMMWORD PTR [esi+0x8],0xf8
  417132:	cmp    DWORD PTR [ebx-0x295f36f5],edi
  417138:	pop    esp
  417139:	pop    ebp
  41713a:	int    0x3
  41713c:	adc    DWORD PTR [edx+0x9],ebp
  41713f:	adc    eax,0x3523a20d
  417144:	mov    bh,0x79
  417146:	ins    BYTE PTR es:[edi],dx
  417147:	cmp    ah,BYTE PTR [eax+0x54f13eff]
  41714d:	stos   DWORD PTR es:[edi],eax
  41714e:	loope  0x417197
  417150:	aas    
  417151:	push   ss
  417152:	and    ebx,DWORD PTR [ebx]
  417154:	(bad)  
  417155:	hlt    
  417156:	sahf   
  417157:	leave  
  417158:	adc    DWORD PTR [eax+ebp*1],ecx
  41715b:	lahf   
  41715c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41715d:	push   ebx
  41715e:	data16 mov BYTE PTR [edi],bh
  417161:	bound  esp,QWORD PTR [ebp+0x2b]
  417164:	xchg   ecx,eax
  417165:	lds    ecx,FWORD PTR [ebx+0x1dcbddbe]
  41716b:	cmp    DWORD PTR [eax+ebx*4+0x3b],edi
  41716f:	aam    0x90
  417171:	icebp  
  417172:	mov    cl,ah
  417174:	push   es
  417175:	stc    
  417176:	sub    BYTE PTR [edx+ebx*4+0x26],al
  41717a:	sti    
  41717b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41717c:	pmullw mm0,mm6
  41717f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417180:	sub    al,0x37
  417182:	xor    al,0xa1
  417184:	out    dx,eax
  417185:	pop    edi
  417186:	jg     0x4171d8
  417188:	and    DWORD PTR [edi-0x5a96266a],ecx
  41718e:	add    edx,DWORD PTR [esi+0x50]
  417191:	add    DWORD PTR [eax],ebx
  417193:	icebp  
  417194:	leave  
  417195:	test   DWORD PTR [esp+ebx*4-0x41527f76],ecx
  41719c:	sub    eax,ecx
  41719e:	call   0x7f98:0xb0d56a19
  4171a5:	pusha  
  4171a6:	or     DWORD PTR [edx],ecx
  4171a8:	dec    eax
  4171a9:	mov    ch,0x60
  4171ab:	retf   
  4171ac:	mov    edx,esi
  4171ae:	ins    BYTE PTR es:[edi],dx
  4171af:	push   ebx
  4171b0:	sbb    dl,0x7d
  4171b3:	sti    
  4171b4:	es clc 
  4171b6:	dec    edx
  4171b7:	ficomp DWORD PTR [eax+0x27]
  4171ba:	mov    ch,0xdf
  4171bc:	lea    eax,[eax+0x6a5d2fd4]
  4171c2:	mov    esp,ss
  4171c4:	mov    ds:0x1a371663,al
  4171c9:	loopne 0x41721d
  4171cb:	out    dx,al
  4171cc:	sub    edi,DWORD PTR [ebx+0x12753199]
  4171d2:	rcr    BYTE PTR [esi+0x3a],cl
  4171d5:	fs (bad) 
  4171d7:	fld    TBYTE PTR [ebp-0x63]
  4171da:	sub    esp,eax
  4171dc:	arpl   ax,bp
  4171de:	xchg   edi,eax
  4171df:	(bad)  
  4171e0:	js     0x417163
  4171e2:	nop
  4171e3:	bound  ebp,QWORD PTR [edx+0x5e0a83cd]
  4171e9:	shl    DWORD PTR ds:0x4d72edc6,cl
  4171ef:	cmp    eax,0x927071cc
  4171f4:	test   DWORD PTR [edx-0x380038be],ecx
  4171fa:	fmul   QWORD PTR [eax]
  4171fc:	fldcw  WORD PTR [ecx]
  4171fe:	xchg   DWORD PTR [eax],ecx
  417200:	or     cl,BYTE PTR [edx-0xf90356]
  417206:	mov    al,ds:0x18e2dea4
  41720b:	out    0x9f,al
  41720d:	pop    ds
  41720e:	dec    ebp
  41720f:	fcom   DWORD PTR gs:[edi-0x66f9bf96]
  417217:	adc    eax,0x2f1f02d5
  41721c:	jno    0x417222
  41721e:	shl    DWORD PTR [esp+eax*8-0x39ce95a3],0xbe
  417226:	std    
  417227:	mov    dl,0xfc
  417229:	push   es
  41722a:	cdq    
  41722b:	and    eax,0xa101ad3
  417230:	mov    edx,0xd81a99b2
  417235:	call   0x4b3e330d
  41723a:	sub    ebp,DWORD PTR [ecx+0x1]
  41723d:	dec    eax
  41723e:	jo     0x417242
  417240:	xchg   esi,eax
  417241:	push   ebp
  417242:	out    dx,al
  417243:	add    eax,0xe3c1aecb
  417248:	xchg   DWORD PTR [esi-0x50],ebp
  41724b:	mov    eax,ds:0xbeace3cd
  417250:	ret    
  417251:	(bad)  
  417252:	test   DWORD PTR [ecx],edx
  417254:	call   0x3f5030c0
  417259:	hlt    
  41725a:	and    eax,0x2220c3c8
  41725f:	and    esi,DWORD PTR [edx+ecx*2+0x3a]
  417263:	test   eax,0xf1e95c8b
  417268:	fnstcw WORD PTR fs:[ebx]
  41726b:	lds    ebx,FWORD PTR [edi]
  41726d:	mov    DWORD PTR [edx+0x42],edx
  417270:	mov    bh,0x12
  417272:	xchg   edi,eax
  417273:	imul   si
  417276:	pop    ebx
  417277:	lahf   
  417278:	fdivr  st(5),st
  41727a:	mov    ebp,0xf0980d8c
  41727f:	xchg   edx,eax
  417280:	jp     0x417271
  417282:	call   DWORD PTR [esi-0x21]
  417285:	mov    al,ds:0x2f167c11
  41728a:	pop    DWORD PTR [eax+eax*1]
  41728d:	loopne 0x4172c8
  41728f:	stc    
  417290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417291:	sbb    ah,cl
  417293:	cwde   
  417294:	fidivr WORD PTR [edx]
  417296:	push   DWORD PTR [eax-0x364c9062]
  41729c:	popa   
  41729d:	outs   dx,DWORD PTR ds:[esi]
  41729e:	inc    edi
  41729f:	cli    
  4172a0:	jge    0x41725a
  4172a2:	mov    BYTE PTR [esi],dh
  4172a4:	gs ins BYTE PTR es:[edi],dx
  4172a6:	outs   dx,DWORD PTR ds:[esi]
  4172a7:	call   0xb89c:0x70852072
  4172ae:	imul   ecx,DWORD PTR [edx+eiz*1],0x8eac68c0
  4172b5:	xchg   BYTE PTR [esi-0x14],cl
  4172b8:	mov    esi,0xcee98f70
  4172bd:	and    DWORD PTR [edi],ebx
  4172bf:	pop    ebp
  4172c0:	retf   0xd2a7
  4172c3:	push   cs
  4172c4:	mov    cl,0xa1
  4172c6:	pop    ss
  4172c7:	sub    DWORD PTR [edi-0x4c],eax
  4172ca:	or     esi,DWORD PTR [esi+esi*1-0x1723041f]
  4172d1:	lea    edi,ds:0xa915af34
  4172d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172d8:	sbb    BYTE PTR [ebp+ecx*1-0x12],0xee
  4172dd:	fcomp  DWORD PTR [eax]
  4172df:	mov    al,0xa8
  4172e1:	mov    dh,0x96
  4172e3:	loopne 0x4172e3
  4172e5:	push   edx
  4172e6:	mov    bl,0x13
  4172e8:	jmp    0x405008b2
  4172ed:	aad    0x20
  4172ef:	mov    ch,0xd3
  4172f1:	xchg   edi,eax
  4172f2:	and    al,0xd6
  4172f4:	retf   0x60d9
  4172f7:	sbb    BYTE PTR [ecx+0x7a1e9f0],0x69
  4172fe:	outs   dx,DWORD PTR ds:[esi]
  4172ff:	enter  0x8bc5,0x83
  417303:	call   0x24f0:0xc73b3967
  41730a:	xlat   BYTE PTR ds:[ebx]
  41730b:	mov    ah,0x5f
  41730d:	sbb    bl,ah
  41730f:	fst    DWORD PTR gs:[edx-0x28]
  417313:	fcmove st,st(1)
  417315:	cmp    esp,DWORD PTR [ebp-0x790eeca0]
  41731b:	cmp    eax,0x743b490c
  417320:	(bad)  
  417321:	pop    eax
  417322:	shl    DWORD PTR [ebx],0x6b
  417325:	ret    0x2efd
  417328:	cdq    
  417329:	mov    DWORD PTR [edx],edi
  41732b:	rcr    BYTE PTR [ecx],1
  41732d:	xchg   edi,eax
  41732e:	(bad)  
  41732f:	jmp    0x3c3565d7
  417334:	jno    0x41739f
  417336:	adc    al,0x1
  417338:	(bad)  [ecx+0x48]
  41733b:	ret    0x38a5
  41733e:	lock push edi
  417340:	jmp    0x417324
  417342:	mov    ch,BYTE PTR [ebp-0x71]
  417345:	dec    esp
  417346:	adc    DWORD PTR [edi+0x49307cdd],edx
  41734c:	xor    eax,0x27631235
  417351:	fwait
  417352:	xchg   esi,eax
  417353:	bound  edi,QWORD PTR [eax+0x69]
  417356:	push   esp
  417357:	xchg   BYTE PTR [esi+0x5c0b6ef9],bh
  41735d:	adc    eax,0xcd788747
  417362:	or     BYTE PTR [ebx-0x3d1dd873],ch
  417368:	mov    ch,BYTE PTR [edi+0x5efbf4d5]
  41736e:	inc    edi
  41736f:	jecxz  0x4173a1
  417371:	rcr    BYTE PTR [edi-0x10],cl
  417374:	dec    ebx
  417375:	out    0xdf,eax
  417377:	test   eax,0xaaf26b9
  41737c:	je     0x4173d3
  41737e:	adc    esi,ebp
  417380:	mov    al,0xf4
  417382:	(bad)  
  417384:	add    BYTE PTR [ebx],al
  417386:	clc    
  417387:	repz adc DWORD PTR [ecx+eax*2],esp
  41738b:	sbb    ebx,DWORD PTR [ecx-0x2abab454]
  417391:	cdq    
  417392:	add    al,0xf6
  417394:	pop    ebp
  417395:	xor    DWORD PTR [ecx+0x422dfa27],esp
  41739b:	jge    0x417387
  41739d:	sbb    eax,0x91cef705
  4173a2:	xchg   esi,eax
  4173a3:	inc    ebp
  4173a4:	push   esp
  4173a5:	out    dx,eax
  4173a6:	inc    eax
  4173a7:	mov    ebx,0xeb86ff8f
  4173ac:	mov    esi,0x74ec7ed3
  4173b1:	jne    0x4173b0
  4173b3:	ins    BYTE PTR es:[edi],dx
  4173b4:	add    DWORD PTR [bp+si-0xf],0xffffffd2
  4173b9:	xor    dh,cl
  4173bb:	adc    al,0x1a
  4173bd:	es inc eax
  4173bf:	mov    ecx,0x33679f89
  4173c4:	scas   al,BYTE PTR es:[edi]
  4173c5:	std    
  4173c6:	ds and eax,0xf42e4aa1
  4173cc:	popf   
  4173cd:	ret    0xfa98
  4173d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173d1:	sub    ah,cl
  4173d3:	fs cmc 
  4173d5:	pop    ebx
  4173d6:	adc    ebx,DWORD PTR [edi]
  4173d8:	inc    ebx
  4173d9:	iret   
  4173da:	mov    ecx,0x2e86f2e0
  4173df:	jg     0x4173de
  4173e1:	nop
  4173e2:	out    dx,al
  4173e3:	or     ecx,esi
  4173e5:	inc    edi
  4173e6:	in     eax,0x26
  4173e8:	or     ecx,DWORD PTR [ecx+0x17e5ca30]
  4173ee:	addr16 inc esi
  4173f0:	pop    esi
  4173f1:	cdq    
  4173f2:	pop    ebp
  4173f3:	sub    ah,dl
  4173f5:	shr    BYTE PTR [esi],cl
  4173f7:	cli    
  4173f8:	ficom  DWORD PTR ss:[ebx]
  4173fb:	fsubr  QWORD PTR [eax+0x1f077be9]
  417401:	shl    DWORD PTR [ebx+eiz*1],0x13
  417405:	pushf  
  417406:	(bad)  
  417407:	jb     0x417407
  417409:	adc    al,0xf1
  41740b:	ret    0x209d
  41740e:	mov    dh,0x65
  417410:	inc    ebp
  417411:	fstp   TBYTE PTR [edx+0x4adcdca1]
  417417:	mov    eax,0x1926bbbd
  41741c:	xor    DWORD PTR [eax+0x16],ebp
  41741f:	add    al,BYTE PTR ds:0xf5dc62aa
  417425:	out    dx,al
  417426:	sti    
  417427:	fbld   TBYTE PTR [ebx-0x6418a135]
  41742d:	pop    eax
  41742e:	test   al,0xc3
  417430:	mov    edx,0x1ac72147
  417435:	add    eax,0x2ced4a3a
  41743a:	inc    edx
  41743b:	sti    
  41743c:	dec    ebp
  41743d:	in     al,0xca
  41743f:	push   0xff494113
  417444:	addr16 in eax,0xb
  417447:	pop    ebx
  417448:	mov    edx,0xece164fc
  41744d:	scas   eax,DWORD PTR es:[edi]
  41744e:	mov    cl,0x2f
  417450:	icebp  
  417451:	leave  
  417452:	test   eax,0x68f0bf5e
  417457:	rol    ah,0xf8
  41745a:	jne    0x4173e8
  41745c:	mov    eax,0xbf4f4bc
  417461:	in     eax,dx
  417462:	fcom   DWORD PTR [ebp-0x5ab06008]
  417468:	jecxz  0x41745c
  41746a:	rol    ch,1
  41746c:	test   bl,dh
  41746e:	or     eax,0xb58450d1
  417473:	and    BYTE PTR [edi],dh
  417475:	outs   dx,DWORD PTR ds:[esi]
  417476:	aam    0xec
  417478:	sbb    BYTE PTR [ebx],ah
  41747a:	push   0x4e
  41747c:	scas   eax,DWORD PTR es:[edi]
  41747d:	xor    DWORD PTR [ebx+ecx*2+0x191931e8],edx
  417484:	adc    DWORD PTR [edx*2-0x39382107],esp
  41748b:	(bad)  
  41748c:	jl     0x4174ba
  41748e:	or     eax,esi
  417490:	clc    
  417491:	mov    esp,DWORD PTR [ecx+0x3e1a6c80]
  417497:	jns    0x41745c
  417499:	pop    eax
  41749a:	jp     0x4174b2
  41749c:	push   edi
  41749d:	aam    0xe0
  41749f:	jp     0x4174f6
  4174a1:	add    eax,DWORD PTR [eax-0xd42fe]
  4174a7:	adc    ecx,DWORD PTR [edi]
  4174a9:	sub    al,0x43
  4174ab:	sar    BYTE PTR [ebx-0x723ed20b],1
  4174b1:	bound  ebx,QWORD PTR [ebx]
  4174b3:	cdq    
  4174b4:	ss jnp 0x417523
  4174b7:	shl    BYTE PTR [edx+ebx*1+0x72],cl
  4174bb:	sbb    ebx,DWORD PTR [ecx-0x2a]
  4174be:	sahf   
  4174bf:	std    
  4174c0:	cmp    al,bh
  4174c2:	push   ebx
  4174c3:	(bad)  [edi+ebp*8-0xe]
  4174c7:	xor    al,0xcf
  4174c9:	sbb    DWORD PTR ds:0x69e726f3,ecx
  4174cf:	pusha  
  4174d0:	(bad)  
  4174d1:	xor    eax,esi
  4174d3:	sti    
  4174d4:	pop    ebp
  4174d5:	mov    eax,ds:0x1993d108
  4174da:	loope  0x4174b9
  4174dc:	arpl   WORD PTR [ebx+edi*8-0x32],ax
  4174e0:	je     0x41752f
  4174e2:	mov    edx,0x8f120318
  4174e7:	shr    DWORD PTR [ebx-0x7844528d],0x15
  4174ee:	xchg   BYTE PTR es:[ecx-0x2a512dde],dh
  4174f5:	or     DWORD PTR [edx+0x53c80cce],0x58bed50e
  4174ff:	mov    dl,0xa4
  417501:	xor    eax,0x660706c8
  417506:	inc    esp
  417507:	jns    0x4174cc
  417509:	xor    al,0x50
  41750b:	adc    al,0xb2
  41750d:	mov    ch,0x1a
  41750f:	jge    0x4174a4
  417511:	mov    cl,0x77
  417513:	(bad)  
  417514:	mov    edx,0xcbc61c8e
  417519:	mov    eax,ds:0xdbe12b73
  41751e:	(bad)  
  417520:	xor    bh,BYTE PTR [eax+0x5ff14104]
  417526:	dec    ebx
  417527:	and    dl,BYTE PTR [ebp-0x5c]
  41752a:	mov    bl,0x2f
  41752c:	leave  
  41752d:	(bad)  
  41752e:	mov    eax,0xa0dc3cfe
  417533:	pop    esi
  417534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417535:	bnd jmp 0x41758e
  417538:	adc    edi,ebx
  41753a:	fwait
  41753b:	jle    0x417537
  41753d:	push   edx
  41753e:	pop    esi
  41753f:	sub    eax,0x116f025c
  417544:	fiadd  DWORD PTR [edx+0x311ac93d]
  41754a:	(bad)  
  41754c:	sar    DWORD PTR [ecx],1
  41754e:	adc    BYTE PTR [edi],ch
  417550:	cmp    ah,ch
  417552:	jecxz  0x417585
  417554:	loope  0x4175b3
  417556:	fst    DWORD PTR [eax-0x3ed3e3d7]
  41755c:	push   ecx
  41755d:	ins    BYTE PTR es:[edi],dx
  41755e:	sbb    al,0x51
  417560:	xlat   BYTE PTR ds:[ebx]
  417561:	jge    0x417531
  417563:	push   ebp
  417564:	nop
  417565:	push   edi
  417566:	(bad)  
  417567:	and    al,0xa4
  417569:	(bad)  
  41756a:	test   al,0x60
  41756c:	cmp    ebp,DWORD PTR [esi+esi*1]
  41756f:	in     eax,0xa0
  417571:	xchg   esi,eax
  417572:	mov    edx,0x701993d0
  417577:	call   0x79a9a7ac
  41757c:	push   ebp
  41757d:	push   esp
  41757e:	lea    ecx,[esi-0x7d]
  417581:	mov    edi,0x83a77907
  417586:	test   BYTE PTR [ecx-0x50160321],ch
  41758c:	test   eax,0x6b6bfaa8
  417591:	int3   
  417592:	lock leave 
  417594:	call   0x31597fc1
  417599:	sub    ah,ch
  41759b:	in     eax,dx
  41759c:	inc    ebp
  41759d:	sahf   
  41759e:	or     cl,0x29
  4175a1:	inc    ebp
  4175a2:	in     al,0x1d
  4175a4:	fs dec ecx
  4175a6:	adc    al,0x7d
  4175a8:	dec    edx
  4175a9:	test   al,0x4c
  4175ab:	mov    ecx,?
  4175ad:	adc    BYTE PTR [ecx+ecx*4],0x2a
  4175b1:	out    dx,eax
  4175b2:	cmp    DWORD PTR [edi],0x212550d2
  4175b8:	imul   ebx,DWORD PTR [ecx+esi*2+0x10],0x7d
  4175bd:	retf   0x5231
  4175c0:	loop   0x4175cc
  4175c2:	inc    edx
  4175c3:	jbe    0x41756f
  4175c5:	int    0xf0
  4175c7:	pop    es
  4175c8:	lds    ebp,FWORD PTR [eax+0x4a]
  4175cb:	mov    dh,0x72
  4175cd:	jb     0x4175d1
  4175cf:	sbb    esp,DWORD PTR [esi+0x7e02fc97]
  4175d5:	mov    esi,0xd3031abd
  4175da:	std    
  4175db:	mov    dh,0xeb
  4175dd:	fisubr WORD PTR [edi]
  4175df:	push   ecx
  4175e0:	add    BYTE PTR [edi+esi*2+0x12],bl
  4175e4:	out    0xe5,al
  4175e6:	jle    0x417579
  4175e8:	mov    bl,0x21
  4175ea:	test   BYTE PTR [edi-0x21],dl
  4175ed:	data16 jnp 0x417655
  4175f0:	inc    ecx
  4175f1:	mov    ecx,DWORD PTR [esi]
  4175f3:	aaa    
  4175f4:	repnz nop
  4175f6:	(bad)  
  4175f7:	rcr    DWORD PTR [ecx+0x6a76d111],cl
  4175fd:	(bad)  
  4175fe:	leave  
  4175ff:	cdq    
  417600:	repz cdq 
  417602:	sbb    eax,0xde23076b
  417607:	xchg   BYTE PTR [ecx-0x1],cl
  41760a:	mov    eax,ds:0x40b3e0db
  41760f:	pop    esp
  417610:	fisubr WORD PTR [edx]
  417612:	push   cs
  417613:	mov    dl,0x7c
  417615:	std    
  417616:	push   0xffffff9f
  417618:	mov    ecx,0xd39cd0c6
  41761d:	rep ins BYTE PTR es:[edi],dx
  41761f:	inc    ebx
  417620:	push   esp
  417621:	jle    0x417634
  417623:	xor    bh,BYTE PTR [eax]
  417625:	lock adc DWORD PTR [ebx-0x70c93641],0x77e31ecc
  417630:	or     esi,DWORD PTR [esi+0x65]
  417633:	lods   eax,DWORD PTR ds:[esi]
  417634:	stos   DWORD PTR es:[edi],eax
  417635:	push   0xb73a11c3
  41763a:	repz es jmp 0x41763b
  41763e:	(bad)  
  41763f:	xchg   ecx,eax
  417640:	std    
  417641:	cmp    eax,0xf60217b7
  417646:	imul   esi,DWORD PTR [eax+0x52d980be],0x40
  41764d:	sub    al,ch
  41764f:	mov    bl,0xa8
  417651:	push   esi
  417652:	jns    0x417621
  417654:	call   0xda91:0xbc00b4c7
  41765b:	dec    ebx
  41765c:	es jno 0x41764f
  41765f:	sub    eax,DWORD PTR [edi+0x4fded03f]
  417665:	test   al,0xfd
  417667:	out    dx,eax
  417668:	lods   eax,DWORD PTR ds:[esi]
  417669:	lea    edx,[ecx]
  41766b:	(bad)  
  41766c:	je     0x417641
  41766e:	(bad)  
  41766f:	aaa    
  417670:	ss je  0x41763e
  417673:	jg     0x417692
  417675:	or     ebx,DWORD PTR [esi]
  417677:	std    
  417678:	xor    BYTE PTR [eax-0x25],ch
  41767b:	stos   BYTE PTR es:[edi],al
  41767c:	pop    ebx
  41767d:	mov    cl,0x1c
  41767f:	lods   eax,DWORD PTR ds:[esi]
  417680:	pop    ecx
  417681:	call   0x4ed5:0x8716a649
  417688:	or     DWORD PTR [ebx+0x6c],0xff62eaa0
  41768f:	push   ecx
  417690:	popa   
  417691:	arpl   WORD PTR ds:0x1447e00b,cx
  417697:	(bad)  
  417698:	mov    ah,0x5c
  41769a:	call   0x7624f86
  41769f:	inc    esp
  4176a0:	xor    BYTE PTR [edi+0x5],0x8b
  4176a4:	sub    BYTE PTR [edi+0x6a57c5fc],bl
  4176aa:	push   0xffffff80
  4176ac:	xlat   BYTE PTR ds:[ebx]
  4176ad:	cmc    
  4176ae:	or     eax,0xfa92fd40
  4176b3:	push   esi
  4176b4:	add    edi,0xd054a0fa
  4176ba:	(bad)  
  4176bb:	bound  ebx,QWORD PTR [ebx+0x1329acad]
  4176c1:	popa   
  4176c2:	inc    ebx
  4176c3:	sbb    al,0xf4
  4176c5:	rcl    DWORD PTR [esi],1
  4176c7:	push   ecx
  4176c8:	test   al,0x44
  4176ca:	mov    edi,edi
  4176cc:	sbb    al,0xb8
  4176ce:	loope  0x417707
  4176d0:	jns    0x4176aa
  4176d2:	int    0xa0
  4176d4:	xor    DWORD PTR [ebp+0x74],edx
  4176d7:	imul   ecx,DWORD PTR [edi+0x3e],0xffffffa6
  4176db:	sub    ch,al
  4176dd:	fild   WORD PTR fs:0xe996cf9a
  4176e4:	mov    esi,0x345b916f
  4176e9:	leave  
  4176ea:	mov    bh,0x6a
  4176ec:	pop    ebp
  4176ed:	jge    0x4176c3
  4176ef:	mov    al,0xc6
  4176f1:	ror    al,cl
  4176f3:	mov    dl,0xab
  4176f5:	in     eax,0x37
  4176f7:	test   eax,0x97afc198
  4176fc:	je     0x41773c
  4176fe:	ret    
  4176ff:	xchg   ebp,eax
  417700:	and    bh,BYTE PTR [eax]
  417702:	out    0xdf,al
  417704:	mov    esi,?
  417706:	push   DWORD PTR [eax+0x13]
  417709:	adc    BYTE PTR [edi-0x1c],ch
  41770c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41770d:	mov    eax,ds:0xc564d66f
  417712:	cmp    esp,DWORD PTR [edi-0x3584b69a]
  417718:	ret    
  417719:	push   ebx
  41771a:	push   0xffffffc7
  41771c:	jae    0x417758
  41771e:	dec    ecx
  41771f:	in     al,0xdd
  417721:	call   0x6b68a8b2
  417726:	jmp    0x5fa85b07
  41772b:	das    
  41772c:	pusha  
  41772d:	out    dx,eax
  41772e:	addr16 mov ecx,0x61dda4a1
  417734:	popa   
  417735:	sub    ch,BYTE PTR [ebp+edi*4+0x58]
  417739:	test   BYTE PTR [ebx-0x19],bh
  41773c:	retf   
  41773d:	das    
  41773e:	xor    cl,bh
  417740:	ret    0x481a
  417743:	loope  0x417721
  417745:	and    cl,al
  417747:	nop
  417748:	dec    ebp
  417749:	xchg   esi,eax
  41774a:	or     al,0xfa
  41774c:	cdq    
  41774d:	ins    BYTE PTR es:[edi],dx
  41774e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41774f:	jmp    0x66e0:0x613c3ae1
  417756:	(bad)  
  417757:	xchg   ebx,eax
  417758:	mov    DWORD PTR [edx],ebp
  41775a:	inc    esp
  41775b:	pop    esi
  41775c:	push   ebp
  41775d:	dec    ebx
  41775e:	inc    esi
  41775f:	dec    eax
  417760:	fnstsw WORD PTR [esi]
  417762:	lock mov ebp,DWORD PTR [eax]
  417765:	mov    al,ds:0x40eeb823
  41776a:	adc    eax,0x1266461
  41776f:	xchg   DWORD PTR [esi+0x412475d9],edx
  417775:	pop    ecx
  417776:	jp     0x417771
  417778:	gs clc 
  41777a:	inc    ebp
  41777b:	mov    bh,0xe0
  41777d:	stos   BYTE PTR es:[edi],al
  41777e:	sub    bl,BYTE PTR [edi+ebx*8]
  417781:	call   0x2de2:0x2338641d
  417788:	push   ebp
  417789:	outs   dx,BYTE PTR ds:[esi]
  41778a:	pusha  
  41778b:	mov    dl,BYTE PTR [eax-0x9]
  41778e:	cmp    DWORD PTR [ebx-0x61],eax
  417791:	mov    ds:0xba7c5c37,al
  417796:	int    0x51
  417798:	out    dx,al
  417799:	and    BYTE PTR [ecx],0x0
  41779c:	push   ebp
  41779d:	out    dx,eax
  41779e:	cwde   
  41779f:	or     al,0x4
  4177a1:	dec    ebp
  4177a2:	adc    eax,0x43147b7d
  4177a7:	mov    eax,0x401c26b7
  4177ac:	in     eax,dx
  4177ad:	les    eax,FWORD PTR [edx+0x54]
  4177b0:	repz ret 
  4177b2:	pop    esi
  4177b3:	mov    al,ds:0x43779309
  4177b8:	sbb    ch,BYTE PTR [ebx-0x4c]
  4177bb:	sub    DWORD PTR [eax+0x18],ecx
  4177be:	scas   eax,DWORD PTR es:[edi]
  4177bf:	cld    
  4177c0:	push   ecx
  4177c1:	hlt    
  4177c2:	nop
  4177c3:	ss rcl bh,cl
  4177c6:	scas   al,BYTE PTR es:[edi]
  4177c7:	pusha  
  4177c8:	add    ebp,DWORD PTR [ebp-0x46]
  4177cb:	hlt    
  4177cc:	mov    esi,0xa936c4b3
  4177d1:	mov    cl,0xc6
  4177d3:	adc    al,0x79
  4177d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d6:	cld    
  4177d7:	bound  ecx,QWORD PTR [eax-0x3ff2f41c]
  4177dd:	add    bl,BYTE PTR [eax]
  4177df:	and    al,0x8a
  4177e1:	jmp    0x41782a
  4177e3:	cmp    dh,BYTE PTR [esi-0x1]
  4177e6:	(bad)  
  4177e7:	jge    0x4177dd
  4177e9:	pop    es
  4177ea:	out    dx,eax
  4177eb:	loopne 0x4177c2
  4177ed:	jle    0x4177e6
  4177ef:	jmp    0x417786
  4177f1:	(bad)  
  4177f2:	mov    eax,0x585654d9
  4177f7:	add    bl,BYTE PTR ds:0x32c8e9ea
  4177fd:	sbb    ebp,ebx
  4177ff:	mov    ebp,0x4b84de93
  417804:	cdq    
  417805:	jae    0x417855
  417807:	xor    BYTE PTR [esi-0x58ae6084],al
  41780d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780e:	sub    eax,0x5f4993d1
  417813:	out    dx,eax
  417814:	adc    DWORD PTR [ecx],0x7c
  417817:	mov    esi,0xed213b49
  41781c:	sub    BYTE PTR [ebx+0x14],ch
  41781f:	ins    BYTE PTR es:[edi],dx
  417820:	je     0x4177bf
  417822:	aaa    
  417823:	jle    0x4177ef
  417825:	and    al,dl
  417827:	ud2    
  417829:	sbb    bl,dl
  41782b:	mov    al,ds:0x2d016315
  417830:	or     al,0x3d
  417832:	clc    
  417833:	adc    BYTE PTR [edi],0xe3
  417836:	adc    al,0xe5
  417838:	push   0x95f68abe
  41783d:	js     0x417868
  41783f:	mov    ds:0x4e8f3538,al
  417844:	mov    edi,0x38283810
  417849:	nop
  41784a:	js     0x41786b
  41784c:	pop    esi
  41784d:	nop
  41784e:	or     bh,bh
  417850:	call   0xbacf:0x1f0d7b59
  417857:	adc    al,0x51
  417859:	xor    eax,0x682f8090
  41785e:	push   ecx
  41785f:	xor    BYTE PTR [ebp-0x1d2c9021],bh
  417865:	lods   eax,DWORD PTR ds:[esi]
  417866:	inc    ebx
  417867:	mov    ebx,0x12c40ebe
  41786c:	dec    ecx
  41786d:	gs mov ch,0xb4
  417870:	mov    ebp,0x8441281e
  417875:	enter  0x49bc,0x2f
  417879:	mov    edi,0xc5555e71
  41787e:	pusha  
  41787f:	imul   BYTE PTR [esi]
  417881:	jmp    0x978130d7
  417886:	ror    BYTE PTR [ecx],cl
  417888:	mov    dl,0x33
  41788a:	(bad)  
  41788b:	jg     0x4178c6
  41788d:	fwait
  41788e:	imul   esp,DWORD PTR [esi],0xffffffdc
  417891:	inc    esi
  417892:	ins    DWORD PTR es:[edi],dx
  417893:	imul   ebx,DWORD PTR [edx-0x37],0xffffffb1
  417897:	retf   
  417898:	stos   DWORD PTR es:[edi],eax
  417899:	scas   al,BYTE PTR es:[edi]
  41789a:	or     DWORD PTR [ebx],esi
  41789c:	pop    edi
  41789d:	mov    eax,0xef84474c
  4178a2:	jmp    0xfc9d0c1d
  4178a7:	xchg   esp,eax
  4178a8:	or     al,0xba
  4178aa:	sub    esp,DWORD PTR [eax+edi*1-0x23d8f973]
  4178b1:	inc    esp
  4178b2:	std    
  4178b3:	leave  
  4178b4:	jo     0x4178fe
  4178b6:	repnz xchg esp,eax
  4178b8:	and    esp,DWORD PTR [ecx+0x9]
  4178bb:	je     0x417896
  4178bd:	cli    
  4178be:	mov    dl,0x60
  4178c0:	inc    edi
  4178c1:	(bad)  
  4178c3:	and    esp,ecx
  4178c5:	and    DWORD PTR [ebx-0x59b7ab9],ecx
  4178cb:	(bad)  
  4178cc:	cli    
  4178cd:	mov    cl,0x10
  4178cf:	mov    ecx,0xce9a9b51
  4178d4:	fisubr DWORD PTR [ebp-0x17]
  4178d7:	jge    0x41793e
  4178d9:	sub    eax,0x7e3835c3
  4178de:	das    
  4178df:	aas    
  4178e0:	jg     0x4178d5
  4178e2:	jns    0x4178d1
  4178e4:	inc    eax
  4178e5:	shl    BYTE PTR [ebp-0x4920df13],0xc
  4178ec:	push   ebx
  4178ed:	jmp    0x6264:0x76a6c99b
  4178f4:	xor    edx,edi
  4178f6:	mov    dl,0x3a
  4178f8:	lods   al,BYTE PTR ds:[esi]
  4178f9:	enter  0x750b,0xa6
  4178fd:	push   eax
  4178fe:	cmp    eax,0x530debba
  417903:	add    al,0x44
  417906:	ret    0x2a0a
  417909:	fnstenv [edi+0x4a]
  41790c:	adc    ecx,ebp
  41790e:	inc    ecx
  41790f:	(bad)  
  417910:	enter  0xf40e,0xdf
  417914:	stos   DWORD PTR es:[edi],eax
  417915:	xor    dl,0x7e
  417918:	inc    esi
  417919:	lea    ecx,[ebx]
  41791b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41791c:	in     eax,0xfd
  41791e:	aad    0xf2
  417920:	sub    al,0x5d
  417922:	(bad)  
  417923:	test   eax,0x7b28ebe5
  417928:	pop    eax
  417929:	call   0x7077:0x66808adc
  417930:	sahf   
  417931:	cmp    BYTE PTR [edx],dl
  417933:	outs   dx,BYTE PTR ds:[esi]
  417934:	test   BYTE PTR [ecx-0x15a1157],dl
  41793a:	pop    ebp
  41793b:	(bad)  
  41793c:	push   0x79ea23fd
  417941:	lods   al,BYTE PTR ds:[esi]
  417942:	jle    0x417960
  417944:	outs   dx,BYTE PTR ds:[esi]
  417945:	mov    ebx,0xfc301bb8
  41794a:	adc    dl,0x50
  41794d:	pushf  
  41794e:	loop   0x417990
  417950:	inc    ebx
  417951:	icebp  
  417952:	rol    BYTE PTR [ebx+0x27],1
  417955:	xor    eax,0x3d7ce550
  41795a:	mov    eax,0x1739722a
  41795f:	sub    edi,edi
  417961:	cmp    eax,DWORD PTR [ecx+0x11]
  417964:	repz pushf 
  417966:	or     ah,BYTE PTR [ebx-0x39f6d67e]
  41796c:	js     0x41799f
  41796e:	scas   eax,DWORD PTR es:[edi]
  41796f:	sub    esp,ecx
  417971:	and    al,BYTE PTR [eax+esi*8+0xd]
  417975:	repz out dx,al
  417977:	fidivr DWORD PTR [ebx+0x7a]
  41797a:	mov    dh,0xce
  41797c:	mov    WORD PTR [eax+0x6],?
  41797f:	test   DWORD PTR [ecx+eiz*2+0x31],0x77d8f928
  417987:	fild   QWORD PTR [edx+ebx*2-0x3c068f35]
  41798e:	rcl    DWORD PTR [ebp+0x7b9b6436],0xdf
  417995:	inc    edx
  417996:	cmp    al,BYTE PTR [edi-0x40]
  417999:	jmp    0xd4448a2a
  41799e:	(bad)  
  41799f:	push   0x38739eda
  4179a4:	mov    dh,0x43
  4179a6:	(bad)
  4179ab:	or     dl,ch
  4179ad:	mov    ds:0xbcf82fff,al
  4179b2:	call   0x201c6349
  4179b7:	inc    edi
  4179b8:	jae    0x4179d2
  4179ba:	fimul  WORD PTR [esi+eax*4+0x39]
  4179be:	scas   al,BYTE PTR es:[edi]
  4179bf:	or     ch,BYTE PTR [edx-0x55]
  4179c2:	inc    esi
  4179c3:	jecxz  0x417a2f
  4179c5:	outs   dx,BYTE PTR ds:[esi]
  4179c6:	pop    ecx
  4179c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c8:	ja     0x417984
  4179ca:	repnz fsub DWORD PTR [edx+0x62]
  4179ce:	adc    al,0x4c
  4179d0:	sbb    DWORD PTR [edi],esi
  4179d2:	mov    ebx,0xc62ec797
  4179d7:	add    al,dl
  4179d9:	push   ss
  4179da:	pusha  
  4179db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179dc:	rcr    DWORD PTR [eax+0x3c128970],cl
  4179e2:	xlat   BYTE PTR ds:[ebx]
  4179e3:	mov    cl,0x4f
  4179e5:	call   0x6103:0xc73e3179
  4179ec:	pop    ebx
  4179ed:	stos   DWORD PTR es:[edi],eax
  4179ee:	fsub   DWORD PTR [edx]
  4179f0:	jnp    0x417a5b
  4179f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f3:	push   eax
  4179f4:	mov    eax,0x841c0e26
  4179f9:	and    al,0x77
  4179fb:	mov    edi,0xb1faddd1
  417a00:	popa   
  417a01:	int    0xfd
  417a03:	popa   
  417a04:	imul   edi,DWORD PTR [edx-0x783468d1],0x3d
  417a0b:	pop    ss
  417a0c:	jns    0x4179bb
  417a0e:	adc    eax,0xe7352c2d
  417a13:	mov    cl,0x2a
  417a15:	dec    eax
  417a16:	rol    DWORD PTR [edx],1
  417a18:	xor    BYTE PTR [ecx+0x51],0xab
  417a1c:	cmc    
  417a1d:	mov    al,0x62
  417a20:	outs   dx,BYTE PTR ds:[esi]
  417a22:	jne    0x4179d9
  417a24:	pop    ebx
  417a25:	cmp    DWORD PTR [edi],0x19
  417a28:	sti    
  417a29:	xchg   edi,eax
  417a2a:	cld    
  417a2b:	lahf   
  417a2c:	into   
  417a2d:	push   ebx
  417a2e:	sub    al,0x3
  417a30:	xchg   edi,eax
  417a31:	cmp    eax,0x665d414d
  417a36:	jns    0x417a20
  417a38:	(bad)  
  417a39:	push   edx
  417a3a:	retf   
  417a3b:	or     esi,edx
  417a3d:	pcmpgtw mm3,mm5
  417a40:	hlt    
  417a41:	imul   esi,DWORD PTR [ebx],0xffffffcd
  417a44:	mov    eax,0xe148a43c
  417a49:	ins    DWORD PTR es:[edi],dx
  417a4a:	(bad)  
  417a4b:	rcr    ah,0x2a
  417a4e:	fimul  WORD PTR [ecx]
  417a50:	fnstenv [edi+0x71]
  417a53:	inc    esi
  417a54:	add    eax,0xd1032c3a
  417a59:	or     eax,0x48cb88f
  417a5e:	mov    al,0xf8
  417a60:	adc    eax,0x2ddfc9f4
  417a65:	iret   
  417a66:	ins    DWORD PTR es:[edi],dx
  417a67:	fdivrp st(3),st
  417a69:	ficom  DWORD PTR [ecx-0x40d20c45]
  417a6f:	adc    DWORD PTR [ebx],edi
  417a71:	sbb    al,0xf5
  417a73:	sar    ebx,cl
  417a75:	sahf   
  417a76:	jo     0x417a74
  417a78:	pop    ecx
  417a79:	push   edx
  417a7a:	popa   
  417a7b:	out    0x17,eax
  417a7d:	pushf  
  417a7e:	mov    dh,0x73
  417a80:	mov    eax,ds:0x770171f8
  417a85:	jp     0x417afa
  417a87:	xchg   ebx,eax
  417a88:	outs   dx,DWORD PTR ds:[esi]
  417a89:	sub    al,0xad
  417a8b:	ja     0x417add
  417a8d:	js     0x417ab0
  417a8f:	sbb    al,0x98
  417a91:	push   0x29
  417a93:	cmp    eax,0x2e0c9897
  417a98:	jle    0x417a42
  417a9a:	out    0x6a,al
  417a9c:	cld    
  417a9d:	mov    edx,0xe2fa4ed
  417aa2:	lock push esp
  417aa4:	dec    ecx
  417aa5:	xlat   BYTE PTR ds:[ebx]
  417aa6:	scas   al,BYTE PTR es:[edi]
  417aa7:	int    0xb8
  417aa9:	(bad)  
  417aaa:	push   ds
  417aab:	pop    ds
  417aac:	jb     0x417aa5
  417aae:	xchg   ebx,eax
  417aaf:	jp     0x417aef
  417ab1:	jp     0x417b2f
  417ab3:	sbb    eax,0xa5096b45
  417ab8:	imul   eax,DWORD PTR [ebx-0x845ad35],0x3809ec18
  417ac2:	lock dec ebp
  417ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac5:	mov    ds:0xab5cedb1,eax
  417aca:	add    eax,0xbfd9c2a5
  417acf:	cmp    bl,dl
  417ad1:	pop    edx
  417ad2:	push   edi
  417ad3:	cld    
  417ad4:	lock iret 
  417ad6:	(bad)  
  417ad7:	mov    ds:0x7606dede,eax
  417adc:	popa   
  417add:	xor    BYTE PTR [esi+0x36],bh
  417ae0:	js     0x417abb
  417ae2:	push   eax
  417ae3:	arpl   bx,sp
  417ae5:	aaa    
  417ae6:	int    0x87
  417ae8:	sbb    edi,DWORD PTR ds:0x3e41
  417aed:	fsubr  st(5),st
  417aef:	sbb    ah,BYTE PTR es:[ebx-0x3c7ac52a]
  417af6:	imul   DWORD PTR [ebp-0x23b6a2f1]
  417afc:	mov    ebx,0xdf50f793
  417b01:	jno    0x417b2e
  417b03:	rcl    bh,cl
  417b05:	and    ebx,DWORD PTR ds:[edi-0x399a8e78]
  417b0c:	add    eax,0xd84e895d
  417b11:	pop    ebx
  417b12:	aaa    
  417b13:	stc    
  417b14:	push   ebx
  417b15:	xor    ah,BYTE PTR [esi+ebp*2]
  417b18:	adc    eax,0xe83dbff3
  417b1d:	dec    ebx
  417b1e:	cwde   
  417b1f:	mov    ecx,eax
  417b21:	sti    
  417b22:	repnz scas al,BYTE PTR es:[edi]
  417b24:	hlt    
  417b25:	sbb    esi,DWORD PTR [ecx-0x3c]
  417b28:	and    DWORD PTR [esi+0x11],ebx
  417b2b:	mov    bl,0x98
  417b2d:	and    edi,eax
  417b2f:	cmp    BYTE PTR [ebx],al
  417b31:	lea    esi,[ecx-0x265a1553]
  417b37:	gs or  edi,ecx
  417b3a:	mov    esp,0xd0ba851
  417b3f:	(bad)  
  417b40:	rcl    DWORD PTR [esi-0x7],cl
  417b43:	dec    ebp
  417b44:	inc    ebp
  417b45:	mov    ch,0x4f
  417b47:	and    BYTE PTR [ecx],cl
  417b49:	ins    BYTE PTR es:[edi],dx
  417b4a:	hlt    
  417b4b:	es pusha 
  417b4d:	xchg   ebp,eax
  417b4e:	fcomip st,st(3)
  417b50:	pop    ebp
  417b51:	push   edi
  417b52:	in     al,dx
  417b53:	and    al,0x76
  417b55:	lds    ecx,FWORD PTR [edi-0x17e1d499]
  417b5b:	sub    al,0xbc
  417b5d:	jne    0x417b63
  417b5f:	pop    ecx
  417b60:	xchg   esp,eax
  417b61:	retf   
  417b62:	push   cs
  417b63:	sbb    BYTE PTR cs:[eax],cl
  417b66:	xchg   esp,eax
  417b67:	aas    
  417b68:	fmul   QWORD PTR [edx+ecx*8+0x120cfa01]
  417b6f:	push   ebp
  417b70:	jmp    0xf5250cae
  417b75:	cli    
  417b76:	call   0xfbf6:0xa9e49da2
  417b7d:	inc    ebp
  417b7e:	fwait
  417b7f:	pop    ebp
  417b80:	mov    ecx,0x7fec72da
  417b85:	jae    0x417b92
  417b87:	ror    DWORD PTR [esi+0x4e],cl
  417b8a:	fcmovu st,st(0)
  417b8c:	xlat   BYTE PTR ds:[ebx]
  417b8d:	(bad)  
  417b8e:	rol    BYTE PTR [edi+ebp*1],1
  417b91:	popa   
  417b92:	pop    ecx
  417b93:	imul   edi,DWORD PTR [ecx],0xfa63b3bd
  417b99:	repnz sub al,0xf3
  417b9c:	stc    
  417b9d:	or     BYTE PTR [ebp-0x66],0xbd
  417ba1:	push   es
  417ba2:	data16 cmp ah,BYTE PTR [ecx-0x30]
  417ba6:	push   edx
  417ba7:	xchg   edx,eax
  417ba8:	jns    0x417c03
  417baa:	jg     0x417bc7
  417bac:	out    0xb,eax
  417bae:	add    al,0x43
  417bb0:	in     eax,0x35
  417bb2:	stc    
  417bb3:	mov    BYTE PTR [ebp-0x5478f4b4],ah
  417bb9:	popf   
  417bba:	aad    0xdb
  417bbc:	pop    esi
  417bbd:	stos   BYTE PTR es:[edi],al
  417bbe:	iret   
  417bbf:	clc    
  417bc0:	pop    ebx
  417bc1:	xlat   BYTE PTR ds:[ebx]
  417bc2:	fxch   st(3)
  417bc4:	xor    DWORD PTR [ebx+0x7],0xffffff93
  417bc8:	cmc    
  417bc9:	in     eax,dx
  417bca:	sar    bh,cl
  417bcc:	pop    ebx
  417bcd:	cli    
  417bce:	inc    ebp
  417bcf:	mov    edi,0xad84e963
  417bd4:	jbe    0x417b7b
  417bd6:	mov    cl,0xa4
  417bd8:	adc    DWORD PTR [ebx+0x5d],esp
  417bdb:	mov    al,0x9f
  417bdd:	pop    esp
  417bde:	mul    DWORD PTR [eax+0x38d524d2]
  417be4:	mov    fs,WORD PTR [edi+esi*1]
  417be7:	popa   
  417be8:	pop    esp
  417be9:	xchg   DWORD PTR [ecx+0x616a3649],esp
  417bef:	mov    dh,0xe2
  417bf1:	adc    DWORD PTR [edi+esi*8-0x3c],ecx
  417bf5:	shr    DWORD PTR [ecx-0x1c],cl
  417bf8:	sbb    al,0xba
  417bfa:	mov    WORD PTR [edi],?
  417bfc:	in     al,0xf5
  417bfe:	out    dx,eax
  417bff:	adc    DWORD PTR [eax+edi*2+0x68b93ef9],esp
  417c06:	dec    ebp
  417c07:	into   
  417c08:	or     BYTE PTR [edi+ecx*8-0x566bc8e1],dl
  417c0f:	adc    bh,BYTE PTR [ebx+0x28]
  417c12:	cmp    eax,0xc6aa88ca
  417c17:	aam    0x1c
  417c19:	aad    0xe1
  417c1b:	adc    cl,BYTE PTR [edx+0x3]
  417c1e:	outs   dx,DWORD PTR ds:[esi]
  417c1f:	push   esp
  417c20:	push   es
  417c21:	enter  0x4dac,0xd4
  417c25:	inc    ecx
  417c26:	push   0xffffffbd
  417c28:	jb     0x417c38
  417c2a:	inc    ecx
  417c2b:	jne    0x417c4a
  417c2d:	or     DWORD PTR [edi+0x90622d9],ebp
  417c33:	pop    es
  417c34:	dec    edx
  417c35:	sahf   
  417c36:	or     BYTE PTR [ecx+0x13],dl
  417c39:	fimul  DWORD PTR [ecx+ebp*2-0x30]
  417c3d:	and    eax,0x70572ba9
  417c42:	and    ecx,edx
  417c44:	dec    edx
  417c45:	icebp  
  417c46:	out    0xfd,eax
  417c48:	jnp    0x417cac
  417c4a:	pop    ds
  417c4b:	stos   BYTE PTR es:[edi],al
  417c4c:	cmp    BYTE PTR [ebp+0x4042826c],ah
  417c52:	outs   dx,WORD PTR ds:[esi]
  417c54:	ss shl ah,cl
  417c57:	out    dx,eax
  417c58:	jp     0x417cbc
  417c5a:	sbb    bh,dh
  417c5c:	int3   
  417c5d:	push   0xffffffbc
  417c5f:	fcom   DWORD PTR [eax]
  417c61:	sbb    DWORD PTR [edx],edi
  417c63:	dec    ebp
  417c64:	es pop eax
  417c66:	inc    edx
  417c67:	xchg   esp,eax
  417c68:	mov    ebx,0x6c6212fd
  417c6d:	push   edi
  417c6e:	lock or bh,BYTE PTR [ebp+0x6f]
  417c72:	mov    ebp,0x562e7968
  417c77:	dec    edx
  417c78:	int3   
  417c79:	in     eax,0xa5
  417c7b:	xlat   BYTE PTR ds:[ebx]
  417c7c:	out    0x97,eax
  417c7e:	loopne 0x417c47
  417c80:	mov    ds:0x62aefe0a,eax
  417c85:	jp     0x417cb9
  417c87:	or     dh,bh
  417c89:	and    ebx,DWORD PTR [edx]
  417c8b:	leave  
  417c8c:	mov    bl,BYTE PTR [ecx-0x1c]
  417c8f:	cmc    
  417c90:	dec    ecx
  417c91:	pop    ds
  417c92:	(bad)  
  417c93:	popf   
  417c94:	stos   BYTE PTR es:[edi],al
  417c95:	jecxz  0x417ced
  417c97:	xchg   esi,eax
  417c98:	ja     0x417c33
  417c9a:	cmp    BYTE PTR [edx+0x20dbe7d7],al
  417ca0:	fmul   DWORD PTR [eax]
  417ca2:	ror    DWORD PTR [ebx],0xbd
  417ca5:	xchg   edi,eax
  417ca6:	fwait
  417ca7:	jae    0x417ce7
  417ca9:	mov    esi,0x34db55e4
  417cae:	pop    esi
  417caf:	pop    edi
  417cb0:	ret    0x8d3a
  417cb3:	loopne 0x417d03
  417cb5:	out    dx,al
  417cb6:	(bad)  
  417cb7:	mov    dl,0x50
  417cb9:	lods   al,BYTE PTR ds:[esi]
  417cba:	xor    esi,esp
  417cbc:	pushf  
  417cbd:	push   eax
  417cbe:	mov    dh,0x1a
  417cc0:	mov    eax,ds:0x92ba3b42
  417cc5:	pop    ds
  417cc6:	mov    ds:0x2363ef7,eax
  417ccb:	cmp    al,0x71
  417ccd:	sbb    BYTE PTR [esi],al
  417ccf:	mov    edi,0x2b2a8565
  417cd4:	cmc    
  417cd5:	dec    eax
  417cd6:	jge    0x417cee
  417cd8:	les    ecx,FWORD PTR [ecx-0x67cc24b0]
  417cde:	xlat   BYTE PTR ds:[ebx]
  417cdf:	imul   ebp,DWORD PTR [edi+0x115cb18f],0x80eae099
  417ce9:	out    dx,al
  417cea:	pop    ss
  417ceb:	test   ebx,0x3aa8ab8e
  417cf1:	mov    eax,0x6dfd7ad9
  417cf6:	xchg   BYTE PTR [ebx+0xe],dh
  417cf9:	into   
  417cfa:	adc    edi,ebp
  417cfc:	mov    bh,0xa7
  417cfe:	out    dx,al
  417cff:	dec    ecx
  417d00:	mov    eax,ds:0x547bd11e
  417d05:	iret   
  417d06:	and    eax,0x2b06a6b1
  417d0b:	shr    DWORD PTR [eax],cl
  417d0d:	test   ah,ch
  417d0f:	loope  0x417cf0
  417d11:	or     bl,BYTE PTR [esi+0x18]
  417d14:	dec    ecx
  417d15:	fisub  WORD PTR [eax+edx*2+0x30]
  417d19:	inc    edx
  417d1a:	sub    eax,0xf58ea46a
  417d1f:	cmp    BYTE PTR [ecx-0x6e],cl
  417d22:	inc    esi
  417d23:	jge    0x417d8e
  417d25:	or     ch,BYTE PTR [eax-0xc10a71]
  417d2b:	push   es
  417d2c:	push   0xffffffa5
  417d2e:	sub    ebp,DWORD PTR [bp+si+0x70]
  417d32:	jbe    0x417ce0
  417d34:	jge    0x417d43
  417d36:	stos   BYTE PTR es:[edi],al
  417d37:	rol    DWORD PTR [esi+0x6d],1
  417d3a:	or     al,BYTE PTR [ecx+edx*2+0x43]
  417d3e:	push   ebp
  417d3f:	jae    0x417da1
  417d41:	pop    ebx
  417d42:	pop    ecx
  417d43:	sbb    esp,DWORD PTR [ebx+0x5c]
  417d46:	mov    esi,0x6fb38183
  417d4b:	icebp  
  417d4c:	stos   DWORD PTR es:[edi],eax
  417d4d:	jp     0x417d38
  417d4f:	and    eax,0x649c7f03
  417d54:	arpl   WORD PTR [bp+si+0x2d],sp
  417d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d59:	pusha  
  417d5a:	sbb    eax,0x69ba5982
  417d5f:	dec    ebp
  417d60:	or     DWORD PTR [edi],esi
  417d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d63:	repz loopne 0x417cfb
  417d66:	sub    eax,0xe88a4259
  417d6b:	xchg   edx,eax
  417d6c:	lahf   
  417d6d:	sub    DWORD PTR [ebp-0x39],esi
  417d70:	mov    edi,0x332d48db
  417d75:	adc    BYTE PTR [edi-0x79],ch
  417d78:	imul   ebp,DWORD PTR [edx],0xf6fe7537
  417d7e:	jns    0x417dce
  417d80:	(bad)  [ebx]
  417d82:	mov    bl,0x14
  417d84:	push   es
  417d85:	inc    esp
  417d86:	pop    ebp
  417d87:	call   0xa43c:0x14680390
  417d8e:	xlat   BYTE PTR ds:[ebx]
  417d8f:	lock sbb eax,0x55242bb4
  417d95:	lods   al,BYTE PTR ds:[esi]
  417d96:	adc    BYTE PTR [edi],ah
  417d98:	push   ebx
  417d99:	dec    ebp
  417d9a:	lods   eax,DWORD PTR ds:[esi]
  417d9b:	clc    
  417d9c:	ret    
  417d9d:	dec    ebp
  417d9e:	ds stc 
  417da0:	lock pop ebp
  417da2:	lahf   
  417da3:	add    ecx,DWORD PTR ds:0xe4259531
  417da9:	jle    0x417e0c
  417dab:	jno    0x417dac
  417dad:	jg     0x417da0
  417daf:	sub    al,BYTE PTR [edi]
  417db1:	iret   
  417db2:	lods   al,BYTE PTR ds:[esi]
  417db3:	mov    esi,0x608e1ec3
  417db8:	mov    esi,0xee942c48
  417dbd:	sub    al,0x32
  417dbf:	call   0x389bfcda
  417dc4:	sub    eax,0x145bd6bc
  417dc9:	sbb    bh,BYTE PTR ds:0xf115dcd6
  417dcf:	clc    
  417dd0:	loopne 0x417d53
  417dd2:	scas   al,BYTE PTR es:[edi]
  417dd3:	jmp    0x417d7c
  417dd5:	pop    ebp
  417dd6:	rcr    BYTE PTR [esi-0x55e041a],0x84
  417ddd:	imul   ebp,esi,0x68413e6f
  417de3:	call   0xf37cf791
  417de8:	loop   0x417d84
  417dea:	dec    edx
  417deb:	inc    esp
  417dec:	pop    ss
  417ded:	xor    DWORD PTR [ebp+0x2c7bc029],esp
  417df3:	mov    eax,0x2acb7d1a
  417df8:	mov    ds:0x5c5f9afc,al
  417dfd:	and    BYTE PTR [ecx+0x3eb3b3a7],dl
  417e03:	mov    fs,WORD PTR [ebp+edi*8-0x74]
  417e07:	sub    esp,DWORD PTR [esi]
  417e09:	(bad)  
  417e0a:	fiadd  DWORD PTR [edx]
  417e0c:	fild   QWORD PTR [ebp-0x2a]
  417e0f:	fisttp DWORD PTR [edx+0x5]
  417e12:	pop    esp
  417e13:	(bad)  
  417e14:	and    DWORD PTR [esi+0x44],esi
  417e17:	mov    al,ds:0x8d0d2bc3
  417e1c:	pop    es
  417e1d:	jne    0x417db1
  417e1f:	sub    DWORD PTR [esi],esi
  417e21:	jns    0x417db9
  417e23:	and    BYTE PTR [eax],cl
  417e25:	lahf   
  417e26:	jge    0x417ddc
  417e28:	or     al,0x88
  417e2a:	jne    0x417e6f
  417e2c:	sub    edx,edi
  417e2e:	pop    esp
  417e2f:	push   ecx
  417e30:	mov    esi,0x33f6e323
  417e35:	aam    0x61
  417e37:	stc    
  417e38:	cs pop eax
  417e3a:	ins    DWORD PTR es:[edi],dx
  417e3b:	cmc    
  417e3c:	out    dx,eax
  417e3d:	outs   dx,BYTE PTR ds:[esi]
  417e3e:	pop    eax
  417e3f:	cdq    
  417e40:	lds    eax,FWORD PTR [ebx-0x80]
  417e43:	and    DWORD PTR [edx],edi
  417e45:	dec    edx
  417e46:	out    0x3c,eax
  417e48:	imul   edx,DWORD PTR [ebx+ebp*8],0x31630761
  417e4f:	jo     0x417e18
  417e51:	inc    esp
  417e52:	outs   dx,BYTE PTR ds:[esi]
  417e53:	inc    esi
  417e54:	cmp    al,0x47
  417e56:	jecxz  0x417e31
  417e58:	in     eax,dx
  417e59:	xchg   DWORD PTR [esi-0x70],ebx
  417e5c:	cld    
  417e5d:	push   esi
  417e5e:	mov    ebp,0x799f8630
  417e63:	mov    bl,0x9c
  417e65:	sahf   
  417e66:	mov    ch,0xb6
  417e68:	test   BYTE PTR [esp+edi*1-0x7d],al
  417e6c:	add    dh,dh
  417e6e:	jl     0x417e92
  417e70:	addr16 pushf 
  417e72:	and    eax,0xf61e76b3
  417e77:	jp     0x417ea0
  417e79:	outs   dx,DWORD PTR ds:[esi]
  417e7a:	cli    
  417e7b:	jmp    0xf1858ab0
  417e80:	into   
  417e81:	je     0x417e9b
  417e83:	adc    ebp,esp
  417e85:	jns    0x417ecf
  417e87:	ror    DWORD PTR [esi-0x1b85bd5e],1
  417e8d:	addr16 inc esi
  417e8f:	xchg   ecx,eax
  417e90:	je     0x417e50
  417e92:	and    al,0xe3
  417e94:	pop    es
  417e95:	push   esp
  417e96:	jmp    0x9c91:0xf0cc47b2
  417e9d:	mul    BYTE PTR [ecx-0x5b]
  417ea0:	cmc    
  417ea1:	mov    bh,0x3e
  417ea3:	sbb    BYTE PTR [esi+esi*2],dl
  417ea6:	xchg   esi,eax
  417ea7:	xlat   BYTE PTR ds:[ebx]
  417ea8:	mov    ds:0xe2c3f993,al
  417ead:	nop
  417eae:	jne    0x417efe
  417eb0:	inc    esi
  417eb1:	loopne 0x417e33
  417eb3:	aad    0x3
  417eb5:	pop    edi
  417eb6:	push   es
  417eb7:	cmp    ch,BYTE PTR [edx-0x21e6c6ca]
  417ebd:	push   eax
  417ebe:	and    cl,ah
  417ec0:	fisub  WORD PTR [edx+0x5a]
  417ec3:	lods   eax,DWORD PTR ds:[esi]
  417ec4:	jnp    0x417edb
  417ec6:	in     al,dx
  417ec7:	nop
  417ec8:	pop    es
  417ec9:	xchg   edx,eax
  417eca:	test   DWORD PTR [ecx],ebp
  417ecc:	aaa    
  417ecd:	rcr    BYTE PTR [eax+0x4a],cl
  417ed0:	pop    ecx
  417ed1:	push   eax
  417ed2:	xor    al,0xa2
  417ed4:	push   ebx
  417ed5:	inc    esp
  417ed6:	jmp    0xaa7a:0x96d8b4ed
  417edd:	out    dx,al
  417ede:	pop    edi
  417edf:	cmp    al,BYTE PTR [eax+0x5c]
  417ee2:	add    eax,0x83f6f88c
  417ee7:	sub    eax,0x48adb7a7
  417eec:	sbb    ebx,edx
  417eee:	xlat   BYTE PTR ds:[ebx]
  417eef:	scas   al,BYTE PTR es:[edi]
  417ef0:	shl    BYTE PTR [eax+0x5c],1
  417ef3:	mov    al,0xf3
  417ef5:	sbb    DWORD PTR [eax+0x3cad33de],0xffffff82
  417efc:	cld    
  417efd:	pop    ebp
  417efe:	mov    ah,0x31
  417f00:	push   ds
  417f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f02:	mov    ds:0x6e9c4598,eax
  417f07:	aaa    
  417f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f09:	fimul  DWORD PTR [ebp-0x35d7248e]
  417f0f:	stos   BYTE PTR es:[edi],al
  417f10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f11:	add    cl,BYTE PTR [ecx]
  417f13:	inc    esi
  417f14:	fsubr  st,st(5)
  417f16:	ds gs clc 
  417f19:	push   ds
  417f1a:	in     al,dx
  417f1b:	(bad)  
  417f1c:	jnp    0x417eda
  417f1e:	test   DWORD PTR [eax+ebx*4],esi
  417f21:	jb     0x417f8e
  417f23:	inc    edi
  417f24:	mov    ecx,0x80112b13
  417f29:	ror    DWORD PTR [ebx-0x75203dc8],cl
  417f2f:	mov    DWORD PTR [ebx-0x13],ebp
  417f32:	sub    al,cl
  417f34:	xor    dh,dh
  417f36:	push   0xffffffc6
  417f38:	xor    ebp,DWORD PTR [eax-0x1bd0712c]
  417f3e:	sub    al,0x22
  417f40:	aad    0x2e
  417f42:	fidivr DWORD PTR [esi-0x1a7cae0d]
  417f48:	push   es
  417f49:	mov    dh,BYTE PTR gs:[edi-0x5cf4c3d1]
  417f50:	push   ds
  417f51:	push   ecx
  417f52:	xchg   edx,eax
  417f53:	jge    0x417f3d
  417f55:	xor    BYTE PTR [ebx-0x1a],cl
  417f58:	sbb    al,0x4a
  417f5a:	ins    DWORD PTR es:[edi],dx
  417f5b:	out    0xe1,eax
  417f5d:	push   ecx
  417f5e:	test   DWORD PTR ds:0x3d4af464,eax
  417f64:	mov    esi,0x21e515ca
  417f69:	sbb    esi,DWORD PTR [edi-0x5b86c4a2]
  417f6f:	out    dx,al
  417f70:	xor    bl,dh
  417f72:	jnp    0x417fe3
  417f74:	cwde   
  417f75:	je     0x417f43
  417f77:	aad    0xbe
  417f79:	dec    edi
  417f7a:	mov    ds:0xfe0be080,eax
  417f7f:	and    ch,BYTE PTR [eax+eax*8-0x5]
  417f83:	or     DWORD PTR [eax],edx
  417f85:	nop
  417f86:	jns    0x417f9c
  417f88:	dec    edi
  417f89:	sar    BYTE PTR [eax-0x6e],1
  417f8c:	and    al,0x78
  417f8e:	xor    al,0x16
  417f90:	mov    edx,0x4533c674
  417f95:	(bad)  
  417f97:	xor    al,0xd6
  417f99:	xchg   edi,eax
  417f9a:	cmp    eax,0x3630c6b2
  417f9f:	jecxz  0x418019
  417fa1:	jns    0x417f61
  417fa3:	push   ebx
  417fa4:	(bad)  
  417fa6:	int3   
  417fa7:	outs   dx,BYTE PTR ds:[esi]
  417fa8:	inc    esi
  417fa9:	lds    esi,FWORD PTR [eax+0x968436b]
  417faf:	push   ecx
  417fb0:	adc    al,0x14
  417fb2:	push   ebx
  417fb3:	push   0x4a8aa093
  417fb8:	int3   
  417fb9:	ret    
  417fba:	sbb    ch,0x5e
  417fbd:	push   0x7e589541
  417fc2:	dec    esp
  417fc3:	adc    DWORD PTR [eax-0x21],0x525e729e
  417fca:	ja     0x417fea
  417fcc:	xor    edx,DWORD PTR [ebx]
  417fce:	pop    ecx
  417fcf:	stc    
  417fd0:	mov    esp,0x52ad6760
  417fd5:	pop    ebp
  417fd6:	cmp    eax,0xe1dcbdb6
  417fdb:	mov    BYTE PTR [eax+0x7c],bh
  417fde:	imul   ecx,DWORD PTR [edi],0xd23195d7
  417fe4:	jge    0x417ff0
  417fe6:	stos   BYTE PTR es:[edi],al
  417fe7:	in     al,dx
  417fe8:	push   eax
  417fe9:	ficom  DWORD PTR [eax]
  417feb:	dec    edi
  417fec:	xchg   edx,eax
  417fed:	dec    esp
  417fee:	push   edi
  417fef:	(bad)  
  417ff0:	mov    edi,0x965aaa2e
  417ff5:	sub    BYTE PTR [edx+0x4e],bl
  417ff8:	test   al,bh
  417ffa:	lea    ebx,[esi]
  417ffc:	jle    0x41804d
  417ffe:	aas    
  417fff:	cwde   
  418000:	test   DWORD PTR [esi],edx
  418002:	push   edx
  418003:	jg     0x418050
  418005:	mov    ah,0x58
  418007:	xor    eax,0x98d05fe0
  41800c:	adc    al,0x66
  41800e:	xor    eax,0x3232e7d7
  418013:	test   edx,ecx
  418015:	or     al,BYTE PTR [ecx+0x2afeb7c]
  41801b:	xchg   ebp,eax
  41801c:	sbb    BYTE PTR ds:0x37715f51,ah
  418022:	cmp    eax,0x60775df8
  418027:	pop    edi
  418028:	mov    gs,edi
  41802a:	icebp  
  41802b:	fild   DWORD PTR [ecx-0xc6311b9]
  418031:	mov    ecx,0xfc5f1cea
  418036:	or     BYTE PTR [eax],bh
  418038:	push   0x8
  41803a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41803b:	pop    eax
  41803c:	int    0x7e
  41803e:	fild   WORD PTR [esi+0xe2b3d2b]
  418044:	mov    al,0xd1
  418046:	jg     0x417fd5
  418048:	sub    DWORD PTR [ebp+0x20],ecx
  41804b:	inc    esi
  41804c:	push   0xd903103c
  418051:	div    BYTE PTR cs:[ecx-0x9fb1b0c]
  418058:	lods   eax,DWORD PTR ds:[esi]
  418059:	cs jl  0x41808b
  41805c:	sar    BYTE PTR [edx+edx*8-0x77],cl
  418060:	inc    esp
  418061:	or     BYTE PTR [edx+0x6d],0xe1
  418065:	imul   edx,DWORD PTR [eax+eax*8+0x3d5d08c4],0x33e1bdf3
  418070:	xor    DWORD PTR [esi],0xa1628422
  418076:	fldl2t 
  418078:	mov    al,0x82
  41807a:	or     DWORD PTR [edx],edi
  41807c:	shr    BYTE PTR [eax+0x3f],cl
  41807f:	mov    eax,0x387397b0
  418084:	inc    eax
  418085:	je     0x41809e
  418087:	fcmovb st,st(4)
  418089:	fld    TBYTE PTR [edi-0x61]
  41808c:	adc    eax,0xf39b1f87
  418091:	pop    ecx
  418092:	add    eax,0xe28995a4
  418097:	sub    al,0x4d
  418099:	shl    DWORD PTR [ebx],0xe9
  41809c:	mov    ecx,0x7544818f
  4180a1:	inc    ebx
  4180a2:	cli    
  4180a3:	sbb    BYTE PTR [edi-0x4c66cc05],cl
  4180a9:	pop    ss
  4180aa:	push   0xa04bd4
  4180af:	dec    esi
  4180b0:	sub    BYTE PTR [esi-0x681b94ca],al
  4180b6:	lods   al,BYTE PTR ds:[esi]
  4180b7:	or     al,0x19
  4180b9:	or     eax,0x6e1a2d21
  4180be:	push   ebp
  4180bf:	push   ds
  4180c0:	js     0x4180d0
  4180c2:	imul   ebp,DWORD PTR [edi+0x70],0xffffff99
  4180c6:	ja     0x4180b3
  4180c8:	rol    BYTE PTR [edi+ebp*4+0x69],0xcb
  4180cd:	fidiv  WORD PTR [edi+eax*1-0x50dd4ebd]
  4180d4:	xor    al,0xbc
  4180d6:	and    BYTE PTR [ebp+0x4b4279a1],al
  4180dc:	sbb    eax,0xaf3a28c6
  4180e1:	int    0xac
  4180e3:	pop    esp
  4180e4:	jmp    0x3c0b:0xf7b099c9
  4180eb:	pop    ds
  4180ec:	sub    BYTE PTR [edi-0x50],al
  4180ef:	out    dx,al
  4180f0:	aaa    
  4180f1:	inc    eax
  4180f2:	out    dx,eax
  4180f3:	jp     0x41811f
  4180f5:	not    DWORD PTR [eax]
  4180f7:	mov    ah,0xe9
  4180f9:	xchg   ebp,eax
  4180fa:	add    ebx,DWORD PTR [eax]
  4180fc:	mov    BYTE PTR ds:0xbaa82b7,bl
  418102:	lods   eax,DWORD PTR ds:[esi]
  418103:	sub    al,0x90
  418105:	lods   eax,DWORD PTR gs:[esi]
  418107:	js     0x4180c2
  418109:	cdq    
  41810a:	icebp  
  41810b:	or     BYTE PTR [ebx],0x23
  41810e:	lds    edi,FWORD PTR [edx+0x43]
  418111:	in     al,dx
  418112:	fmulp  st(0),st
  418114:	add    BYTE PTR [edi-0x2ec013c],0xca
  41811b:	mov    ebp,0x9c88397c
  418120:	lea    ebp,[edi+ebx*2-0x6e]
  418124:	mov    ?,esi
  418126:	enter  0xdd6e,0x61
  41812a:	fucom  st(0)
  41812c:	ror    BYTE PTR [esi-0x651be831],1
  418132:	sbb    eax,0x8ac91f3d
  418137:	pop    edx
  418138:	cwde   
  418139:	loop   0x4181a1
  41813b:	rol    BYTE PTR [ebx-0x740c39a8],0xbd
  418142:	xor    al,0xb8
  418144:	sbb    eax,0xf3692408
  418149:	(bad)  
  41814a:	shr    BYTE PTR [edi-0x4d],cl
  41814d:	in     eax,0x75
  41814f:	inc    eax
  418150:	sub    BYTE PTR [esi-0x9851e09],ah
  418156:	xchg   ecx,eax
  418157:	jmp    0x4ef327fb
  41815c:	jne    0x41815a
  41815e:	clc    
  41815f:	jg     0x4180f4
  418161:	push   edi
  418162:	das    
  418163:	mov    dl,0x62
  418165:	sub    eax,0xf18901a1
  41816a:	jbe    0x41813e
  41816c:	imul   ebp,DWORD PTR [edi+0x2ee10d2a],0xc004a51e
  418176:	and    BYTE PTR [ebp+0x95a97ea],ah
  41817c:	push   ss
  41817d:	jb     0x4181f6
  41817f:	daa    
  418180:	jmp    0x3f70:0x2285e8cc
  418187:	or     ebp,DWORD PTR [ebx-0x617b4318]
  41818d:	loop   0x418151
  41818f:	push   ss
  418190:	sahf   
  418191:	xor    BYTE PTR [edi+0x80b4131],dl
  418197:	mov    BYTE PTR [edx],cl
  418199:	xchg   ebx,eax
  41819a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41819b:	jae    0x4181e3
  41819d:	fwait
  41819e:	jge    0x418139
  4181a0:	mov    ebx,0xfb799062
  4181a5:	in     al,dx
  4181a6:	int3   
  4181a7:	pop    ds
  4181a8:	add    BYTE PTR [eax+0x50aa52bd],bh
  4181ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181af:	fisubr WORD PTR [eax]
  4181b1:	repnz push 0xa7d72f09
  4181b7:	or     esp,edx
  4181b9:	cmp    BYTE PTR [esi+eax*4-0x6dcf5ad0],ah
  4181c0:	dec    al
  4181c2:	mov    ebx,0xac717f01
  4181c7:	add    ebp,DWORD PTR [ebx+0x66805558]
  4181cd:	test   eax,0x4470181c
  4181d2:	mov    ch,0x7
  4181d4:	cld    
  4181d5:	js     0x418254
  4181d7:	push   cs
  4181d8:	aad    0x2
  4181da:	xchg   BYTE PTR [edx],bh
  4181dc:	(bad)  [ebx]
  4181de:	fs mov esi,0x751a0826
  4181e4:	sub    DWORD PTR [ebp-0x3],eax
  4181e7:	mov    dh,0x51
  4181e9:	sub    bh,BYTE PTR [ebx-0x29]
  4181ec:	and    BYTE PTR [esi],dh
  4181ee:	mov    bh,0xdd
  4181f0:	cmp    ebx,DWORD PTR [eax-0x1c69a49e]
  4181f6:	mov    eax,ds:0xbe345776
  4181fb:	fldenv [ebx-0x622d2f36]
  418201:	push   edx
  418202:	imul   esi,DWORD PTR [ebx],0x7cf0833d
  418208:	mov    ebx,0xb673d930
  41820d:	test   al,0xb5
  41820f:	pushf  
  418210:	add    eax,0x8d64ff4b
  418215:	in     eax,0xd9
  418217:	jno    0x418231
  418219:	or     ebp,ebp
  41821b:	pop    ebx
  41821c:	repnz adc ebx,ebp
  41821f:	dec    edx
  418220:	pop    di
  418222:	sbb    al,0xe
  418224:	xor    DWORD PTR [edi-0x771de431],edx
  41822a:	dec    esi
  41822b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41822c:	(bad)  
  41822d:	fsubr  DWORD PTR [eax]
  41822f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418230:	jno    0x41823f
  418232:	inc    ecx
  418233:	retf   
  418234:	call   0x45:0x200f76a0
  41823b:	pop    eax
  41823c:	add    al,0xf8
  41823e:	adc    BYTE PTR [ebx+0x6e57613c],cl
  418244:	loop   0x418291
  418246:	and    BYTE PTR [esi],0x28
  418249:	stos   BYTE PTR es:[edi],al
  41824a:	adc    esp,DWORD PTR ds:0x3cdf2468
  418250:	mov    edi,0x7171e01c
  418255:	pushf  
  418256:	mov    ch,0x90
  418258:	dec    ecx
  418259:	pop    ebp
  41825a:	mov    al,0xca
  41825c:	lods   al,BYTE PTR ds:[esi]
  41825d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41825e:	sbb    al,0xf
  418260:	cs fdivp st(3),st
  418263:	or     BYTE PTR [edx],ch
  418265:	mov    ah,0x88
  418267:	retf   0x5068
  41826a:	test   al,0xdd
  41826c:	mov    esi,ss
  41826e:	mov    dl,0xa1
  418270:	fst    QWORD PTR [ecx-0x26]
  418273:	adc    al,0x55
  418275:	push   edi
  418276:	lds    ebx,FWORD PTR [ecx+0x3f70b5f1]
  41827c:	fistp  DWORD PTR [ebx]
  41827e:	shr    bh,1
  418280:	in     al,0xf3
  418282:	dec    edx
  418283:	adc    cl,BYTE PTR [ecx+0x3636fc6]
  418289:	xor    BYTE PTR [esi+0x57db2f07],al
  41828f:	or     al,0x40
  418291:	sar    DWORD PTR ds:[ecx+0x31],0xf8
  418296:	xchg   edi,eax
  418297:	dec    esp
  418298:	icebp  
  418299:	mov    ebp,0x6491314c
  41829e:	dec    edi
  41829f:	jb     0x418244
  4182a1:	inc    edx
  4182a2:	cld    
  4182a3:	jno    0x418239
  4182a5:	ror    BYTE PTR ds:0xc65541c8,0xd1
  4182ac:	data16 cli 
  4182ae:	(bad)  
  4182af:	xchg   edx,eax
  4182b0:	mov    ebx,0x720fa43
  4182b5:	push   0xbeaf4286
  4182ba:	repz rol DWORD PTR [eax],cl
  4182bd:	retf   
  4182be:	push   edx
  4182bf:	mov    edx,0x63421372
  4182c4:	icebp  
  4182c5:	cli    
  4182c6:	xchg   ecx,eax
  4182c7:	cld    
  4182c8:	neg    DWORD PTR [edi]
  4182ca:	xor    al,0x57
  4182cc:	ins    DWORD PTR es:[edi],dx
  4182cd:	pop    esi
  4182ce:	xchg   ebp,eax
  4182cf:	rcl    BYTE PTR [esi],1
  4182d1:	mov    cl,0xeb
  4182d3:	lods   eax,DWORD PTR ds:[esi]
  4182d4:	shr    BYTE PTR [eax+edx*8-0x80],1
  4182d8:	fdiv   st(7),st
  4182da:	push   edx
  4182db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182dc:	fdiv   DWORD PTR [eax+eax*1]
  4182df:	mov    dh,0xcf
  4182e1:	ja     0x418347
  4182e3:	sub    eax,0x22f09465
  4182e8:	iret   
  4182e9:	sbb    al,0xec
  4182eb:	add    ebx,DWORD PTR [eax+0x64]
  4182ee:	sbb    ebp,eax
  4182f0:	daa    
  4182f1:	xchg   edx,eax
  4182f2:	jb     0x4182b6
  4182f4:	gs gs pop ecx
  4182f7:	cmc    
  4182f8:	dec    edx
  4182f9:	push   esp
  4182fa:	arpl   WORD PTR [esp+eax*8+0x50],bp
  4182fe:	sub    al,0x9b
  418300:	xchg   esi,eax
  418301:	int    0x4c
  418303:	call   0xb56700ba
  418308:	test   ah,cl
  41830a:	fwait
  41830b:	retf   
  41830c:	xchg   ecx,eax
  41830d:	xchg   esi,eax
  41830e:	xchg   BYTE PTR [edi-0x127b2e24],dh
  418314:	xchg   ecx,eax
  418315:	cdq    
  418316:	(bad)  
  418317:	cmp    al,0xde
  418319:	test   BYTE PTR [esi+0x6c6145f3],0xbc
  418320:	push   es
  418321:	les    eax,FWORD PTR [ebp-0x52eff992]
  418327:	lds    ebp,FWORD PTR [edx-0x4ba4404a]
  41832d:	daa    
  41832e:	cmc    
  41832f:	lock mov edi,0xd6e0984c
  418335:	scas   eax,DWORD PTR es:[edi]
  418336:	cwde   
  418337:	enter  0x88de,0xe8
  41833b:	stos   DWORD PTR es:[edi],eax
  41833c:	int3   
  41833d:	cld    
  41833e:	push   cs
  41833f:	and    DWORD PTR [esi-0x4b],ebx
  418342:	adc    al,0xd9
  418344:	(bad)
  418347:	mov    cl,cl
  418349:	mov    ebx,0x4d43ba2a
  41834e:	xchg   edi,eax
  41834f:	and    al,0x4f
  418351:	push   ebx
  418352:	in     al,dx
  418353:	push   edx
  418354:	jnp    0x418339
  418356:	jmp    0xf8570727
  41835b:	push   esp
  41835c:	(bad)  
  41835d:	cmp    DWORD PTR [eax+ecx*1],esp
  418360:	aam    0xd5
  418362:	leave  
  418363:	repz add BYTE PTR [eax+0x5bcbdb1d],bl
  41836a:	lods   eax,DWORD PTR ds:[esi]
  41836b:	dec    ebx
  41836c:	push   ss
  41836d:	mov    BYTE PTR [edx-0x60],dh
  418370:	dec    ebx
  418371:	push   ebp
  418372:	es aas 
  418374:	add    al,0x3e
  418376:	cmp    al,0xdd
  418378:	in     al,0xb9
  41837a:	mov    ch,0xa8
  41837c:	pop    ecx
  41837d:	push   cs
  41837e:	imul   ebp,ebx,0x7f
  418381:	int    0x99
  418383:	cmp    cl,BYTE PTR [esi]
  418385:	push   ss
  418386:	cwde   
  418387:	or     ah,BYTE PTR [ebp+0x644e6bc5]
  41838d:	adc    al,0x14
  41838f:	out    dx,al
  418390:	sbb    al,0x86
  418392:	data16 cld 
  418394:	mov    WORD PTR [edx],fs
  418396:	lods   eax,DWORD PTR ds:[esi]
  418397:	mov    ds:0x3f94bedc,eax
  41839c:	out    0x2,eax
  41839e:	pop    edi
  41839f:	and    al,0x72
  4183a1:	or     eax,0xa9687146
  4183a6:	mov    dh,0x2a
  4183a8:	das    
  4183a9:	adc    dl,al
  4183ab:	cmp    bl,ah
  4183ad:	fwait
  4183ae:	mov    cl,BYTE PTR [ecx-0x57db648]
  4183b4:	nop
  4183b5:	shr    edi,cl
  4183b7:	add    al,0x89
  4183b9:	imul   esi,DWORD PTR [ecx],0xb
  4183bc:	outs   dx,DWORD PTR ds:[esi]
  4183bd:	dec    eax
  4183be:	or     ebp,esi
  4183c0:	jle    0x4183ab
  4183c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c3:	xor    BYTE PTR [eax+0x44],dl
  4183c6:	ret    
  4183c7:	rcl    BYTE PTR [ebx+0xf0baa1f],cl
  4183cd:	add    BYTE PTR [esi-0x19],dl
  4183d0:	(bad)  
  4183d1:	int    0x5f
  4183d3:	fwait
  4183d4:	mov    al,BYTE PTR [ebp-0x2b]
  4183d7:	adc    DWORD PTR [edx+0x66],0xffffffb2
  4183db:	frstor [ecx]
  4183dd:	mov    es,WORD PTR [eax+0x4d10b4c9]
  4183e3:	sbb    ecx,ecx
  4183e5:	cs popf 
  4183e7:	sub    cl,0x9b
  4183ea:	jge    0x418375
  4183ec:	(bad)  
  4183ed:	retf   
  4183ee:	mov    esi,0x9a9d38a6
  4183f3:	sbb    DWORD PTR [esi+0x37aafded],0x4e
  4183fa:	mov    edx,0x388d1fc3
  4183ff:	jnp    0x41842b
  418401:	or     al,0xfb
  418403:	dec    ecx
  418404:	mov    edi,0x7e7ee0cf
  418409:	cli    
  41840a:	push   edi
  41840b:	repnz pop ds
  41840d:	jne    0x4183f9
  41840f:	js     0x418428
  418411:	dec    esi
  418412:	and    dl,BYTE PTR [ecx-0x6e]
  418415:	push   esp
  418416:	push   ecx
  418417:	mov    ah,0xa
  418419:	loope  0x4183ff
  41841b:	je     0x418492
  41841d:	aad    0x14
  41841f:	imul   edi,ebp,0xdc6d2c36
  418425:	or     al,0x1e
  418427:	mov    bh,BYTE PTR [ebx+0x41ee6fda]
  41842d:	aaa    
  41842e:	(bad)  
  41842f:	xchg   BYTE PTR [bp+di],ch
  418432:	and    eax,0xea87133b
  418437:	xor    cl,BYTE PTR [ebx+0x7d2b4384]
  41843d:	pop    esp
  41843e:	call   0xbf9d:0xf321db8f
  418445:	dec    BYTE PTR [edx]
  418447:	and    eax,0x21583f37
  41844c:	fmul   st,st(4)
  41844e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41844f:	fnstsw ax
  418451:	xor    ebp,edx
  418453:	inc    ebx
  418454:	in     eax,dx
  418455:	cdq    
  418456:	repz and BYTE PTR [ebx+0x7c1400e0],bl
  41845d:	inc    esi
  41845e:	das    
  41845f:	mov    bl,BYTE PTR [ebp-0x2a]
  418462:	fisub  WORD PTR [eax+0x7]
  418465:	ret    0x5697
  418468:	icebp  
  418469:	cmp    ecx,ebx
  41846b:	or     eax,0x12232990
  418470:	cmp    BYTE PTR [esi-0x3c],ah
  418473:	dec    ebx
  418474:	sub    eax,0xb83edc36
  418479:	repz out dx,eax
  41847b:	inc    esi
  41847c:	jl     0x4184ee
  41847e:	inc    ecx
  41847f:	je     0x418493
  418481:	outs   dx,BYTE PTR es:[esi]
  418483:	in     eax,dx
  418484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418485:	mov    ds:0xe183bb32,eax
  41848a:	mov    al,0x84
  41848c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41848d:	mov    edx,0xdcb0a2ff
  418492:	pushf  
  418493:	push   edi
  418494:	sbb    eax,DWORD PTR [ebx]
  418496:	mov    edi,0x351349ef
  41849b:	push   0xfb41a932
  4184a0:	in     eax,dx
  4184a1:	(bad)  
  4184a2:	jmp    0x65f66d8d
  4184a7:	data16 fndisi(8087 only) 
  4184aa:	fisub  WORD PTR [esi-0x46]
  4184ad:	fst    QWORD PTR [esi+0x4e]
  4184b0:	enter  0xd33c,0xcb
  4184b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b5:	sbb    esp,esi
  4184b7:	(bad)  
  4184b8:	sti    
  4184b9:	into   
  4184ba:	inc    edi
  4184bb:	fcmovne st,st(5)
  4184bd:	fmul   QWORD PTR [eax]
  4184bf:	push   edi
  4184c0:	adc    DWORD PTR [ecx+0x470bce4b],ebx
  4184c6:	addr16 pop edx
  4184c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c9:	icebp  
  4184ca:	jno    0x4184cd
  4184cc:	mov    dh,BYTE PTR [eax-0x2d]
  4184cf:	or     eax,0x77b1e8b4
  4184d4:	xchg   edx,eax
  4184d5:	jp     0x41851d
  4184d7:	inc    eax
  4184d8:	dec    ebx
  4184d9:	xchg   ebp,eax
  4184da:	scas   al,BYTE PTR es:[edi]
  4184db:	inc    ecx
  4184dc:	rcl    esi,cl
  4184de:	or     cl,bh
  4184e0:	daa    
  4184e1:	cdq    
  4184e2:	xlat   BYTE PTR ds:[ebx]
  4184e3:	scas   al,BYTE PTR es:[edi]
  4184e4:	jmp    0x418488
  4184e6:	xchg   edx,eax
  4184e7:	out    0x4f,al
  4184e9:	mov    WORD PTR [ebp-0x4b],?
  4184ec:	jecxz  0x41855e
  4184ee:	sahf   
  4184ef:	mov    ecx,0x1c9780fe
  4184f4:	pop    ebx
  4184f5:	xchg   edx,eax
  4184f6:	sbb    DWORD PTR [edi-0x55],0xfffffff9
  4184fa:	loop   0x4184c7
  4184fc:	mov    WORD PTR [edi+ebx*2-0x38],es
  418500:	bound  eax,QWORD PTR ss:[edx-0x1e]
  418504:	cli    
  418505:	std    
  418506:	push   cs
  418507:	pop    esp
  418508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418509:	xchg   ebp,eax
  41850a:	stos   BYTE PTR es:[edi],al
  41850b:	test   eax,0xe0652cf0
  418510:	or     al,0x9a
  418512:	int    0x7
  418514:	add    al,0xba
  418516:	inc    ebx
  418517:	cmp    DWORD PTR [ecx-0x2e],ebp
  41851a:	jp     0x4184dd
  41851c:	inc    ebp
  41851d:	cmp    BYTE PTR [ecx+0x7bb552e2],0xe0
  418524:	arpl   WORD PTR [ebx+ebx*2],si
  418527:	mov    al,ds:0x2ac39138
  41852c:	cmc    
  41852d:	xchg   esi,eax
  41852e:	pop    ebp
  41852f:	scas   al,BYTE PTR es:[edi]
  418530:	sbb    DWORD PTR [ecx+0x73ef3227],ebx
  418536:	cli    
  418537:	sub    eax,DWORD PTR [edx-0x3e]
  41853a:	jb     0x418509
  41853c:	lea    edi,[esi-0x71b0a4ed]
  418542:	mov    ebx,0xe560a9d7
  418547:	xor    al,BYTE PTR [ecx]
  418549:	fsubp  st(3),st
  41854b:	jmp    0x8ac879ef
  418550:	std    
  418551:	and    ebp,esp
  418553:	in     al,0x89
  418555:	cmp    BYTE PTR [ebx+esi*2],0xdc
  418559:	mov    edi,0xd8799c93
  41855e:	cli    
  41855f:	(bad)  
  418560:	and    ch,BYTE PTR [edx+esi*4-0x3f0e50e0]
  418567:	mov    edi,eax
  418569:	mov    ebx,0x608013c2
  41856e:	inc    edi
  41856f:	jge    0x4185be
  418571:	jg     0x4185d1
  418573:	jl     0x41856f
  418575:	dec    ecx
  418576:	and    esi,ecx
  418578:	jbe    0x41859e
  41857a:	sub    eax,0xa5b94df9
  41857f:	mov    ds:0x3a10843f,al
  418584:	out    dx,al
  418585:	int    0x1f
  418587:	pop    es
  418588:	nop
  418589:	push   edi
  41858a:	and    eax,0xbad96beb
  41858f:	loope  0x41860f
  418591:	ret    
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	sbb    BYTE PTR [edi],ah
  418595:	mov    DWORD PTR [edx+0x4f86d115],esp
  41859b:	gs adc eax,0xa12cf038
  4185a1:	pop    ecx
  4185a2:	pop    ss
  4185a3:	dec    ecx
  4185a4:	dec    ebp
  4185a5:	sub    eax,0x5e83211a
  4185aa:	sbb    BYTE PTR [ebx+0x347ad065],al
  4185b0:	push   esi
  4185b1:	mov    esi,0x1958cc08
  4185b6:	xlat   BYTE PTR ds:[ebx]
  4185b7:	out    dx,al
  4185b8:	mov    edx,0xbbae2a15
  4185bd:	inc    ecx
  4185be:	je     0x418622
  4185c0:	mov    edx,0xc1a51ddd
  4185c5:	test   eax,0xc54ed84c
  4185ca:	jbe    0x418569
  4185cc:	sub    BYTE PTR [esi+ebx*8+0x10],bh
  4185d0:	jno    0x4185b1
  4185d2:	adc    BYTE PTR [eax-0x30],ah
  4185d5:	xchg   BYTE PTR [eax],dl
  4185d7:	xchg   edx,eax
  4185d8:	lock pop edi
  4185da:	and    DWORD PTR [edi+0x5a],ebp
  4185dd:	or     edi,ebp
  4185df:	mov    bl,0x69
  4185e1:	ins    DWORD PTR es:[edi],dx
  4185e2:	std    
  4185e3:	std    
  4185e4:	pop    esi
  4185e5:	mov    al,0xf1
  4185e7:	dec    eax
  4185e8:	pop    ebp
  4185e9:	mov    ebp,0x6a2144ea
  4185ee:	por    mm4,QWORD PTR [ecx-0x2eb08d62]
  4185f5:	push   ebp
  4185f6:	sbb    edx,DWORD PTR [edi-0x754620b]
  4185fc:	jmp    0x20faca27
  418601:	(bad)  
  418603:	imul   edi,DWORD PTR [edi],0xbc59ce21
  418609:	sbb    dl,bl
  41860b:	push   ss
  41860c:	fwait
  41860d:	(bad)  
  41860e:	out    0xe2,al
  418610:	test   al,0xb6
  418612:	push   ecx
  418613:	jns    0x418664
  418615:	gs aas 
  418617:	outs   dx,DWORD PTR ds:[esi]
  418618:	inc    ebx
  418619:	shl    DWORD PTR [ecx],1
  41861b:	or     DWORD PTR [edx-0x57f34107],ebx
  418621:	in     al,0xca
  418623:	leave  
  418624:	aas    
  418625:	push   eax
  418626:	scas   eax,DWORD PTR es:[edi]
  418627:	add    al,0x8a
  418629:	inc    ebx
  41862a:	iret   
  41862b:	ss mov al,gs:0x308d4f3f
  418632:	cmp    dh,BYTE PTR [ebx]
  418634:	stos   BYTE PTR es:[edi],al
  418635:	mov    ebx,gs
  418637:	push   ss
  418638:	or     ebp,DWORD PTR [ebx-0x28a2cc92]
  41863e:	dec    eax
  41863f:	jmp    FWORD PTR [ebp+edx*2-0x59a514a0]
  418646:	sbb    BYTE PTR [ebp-0x9d71329],0x24
  41864d:	push   es
  41864e:	(bad)  
  41864f:	cdq    
  418650:	imul   ecx,ebx,0xffffffbd
  418653:	cli    
  418654:	outs   dx,DWORD PTR ds:[esi]
  418655:	idiv   BYTE PTR [ecx+0x21ef7a7f]
  41865b:	sub    DWORD PTR [edi+0x3b],ebp
  41865e:	mov    ebx,ds
  418660:	loop   0x418671
  418662:	fsin   
  418664:	jp     0x41866f
  418666:	or     DWORD PTR [eax],0xce4b3445
  41866c:	xor    ecx,esp
  41866e:	inc    ebp
  41866f:	or     DWORD PTR [ecx+0x34d1e651],edi
  418675:	dec    ecx
  418676:	(bad)  
  418677:	ds or  al,0x71
  41867a:	and    edx,esi
  41867c:	or     ah,BYTE PTR [eax-0xc]
  41867f:	adc    ebx,DWORD PTR [ebp+0x268dbac9]
  418685:	dec    esi
  418686:	or     eax,DWORD PTR [edi+0x544aa941]
  41868c:	cdq    
  41868d:	jne    0x4186ff
  41868f:	iret   
  418690:	ins    BYTE PTR es:[edi],dx
  418691:	daa    
  418692:	es int3 
  418694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418695:	jmp    0x1fd6bd9d
  41869a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41869b:	or     cl,BYTE PTR [eax-0x32]
  41869e:	(bad)  
  41869f:	js     0x41862a
  4186a1:	aas    
  4186a2:	(bad)  
  4186a3:	push   cs
  4186a4:	sahf   
  4186a5:	dec    ebp
  4186a6:	cmp    ah,BYTE PTR [esi+edx*4-0x3cc2db53]
  4186ad:	icebp  
  4186ae:	outs   dx,DWORD PTR ds:[esi]
  4186af:	call   ecx
  4186b1:	jae    0x41864a
  4186b3:	and    edx,DWORD PTR [edx-0xebb893a]
  4186b9:	push   0x4c87e54a
  4186be:	int3   
  4186bf:	xor    edi,edi
  4186c1:	jne    0x4186f0
  4186c3:	call   0x8fba:0xc1738a03
  4186ca:	pop    es
  4186cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186cc:	or     dh,BYTE PTR [ebx]
  4186ce:	xlat   BYTE PTR ds:[ebx]
  4186cf:	icebp  
  4186d0:	push   eax
  4186d1:	sbb    eax,DWORD PTR [esi]
  4186d3:	mov    dh,0xf3
  4186d5:	mov    DWORD PTR [edx+edx*4-0x1f400ba3],eax
  4186dc:	ret    
  4186dd:	mov    es,esp
  4186df:	lods   al,BYTE PTR ds:[esi]
  4186e0:	les    edx,FWORD PTR [esi+edi*4+0x70]
  4186e4:	xor    DWORD PTR [ebx-0x36256ce4],0xffffffa4
  4186eb:	or     BYTE PTR [ecx],ah
  4186ed:	clc    
  4186ee:	mov    bh,0x7b
  4186f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f1:	cmc    
  4186f2:	int3   
  4186f3:	out    dx,eax
  4186f4:	sbb    BYTE PTR [eax],cl
  4186f6:	aas    
  4186f7:	lods   eax,DWORD PTR ds:[esi]
  4186f8:	cs sar ebp,0x7f
  4186fc:	jno    0x41875a
  4186fe:	shl    DWORD PTR [esi-0x2bd32d05],cl
  418704:	xchg   edx,eax
  418705:	and    DWORD PTR [ecx+0x10],0x948dd033
  41870c:	sbb    ah,al
  41870e:	jb     0x418742
  418710:	add    BYTE PTR [ecx+0x558bf455],cl
  418716:	lock xor edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	pop    ss
  4187e2:	mov    cl,0xb3
  4187e4:	loopne 0x4187d1
  4187e6:	xor    al,0x79
  4187e8:	jp     0x4187eb
  4187ea:	pop    edi
  4187eb:	jp     0x418867
  4187ed:	xor    al,0x8d
  4187ef:	out    0x4,al
  4187f1:	loopne 0x41879a
  4187f3:	jbe    0x4187ed
  4187f5:	test   al,0x67
  4187f7:	jmp    0xd106f0
  4187fc:	mov    ds:0xd34ccb85,al
  418801:	add    al,0xbb
  418803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418804:	pop    ds
  418805:	jge    0x41887f
  418807:	push   ebp
  418808:	inc    eax
  418809:	jbe    0x41883b
  41880b:	mov    ds:0xbc5f4241,al
  418810:	mov    esp,0xbb9e7be4
  418815:	cmp    al,0xd5
  418817:	mov    al,0x38
  418819:	jle    0x4187aa
  41881b:	fmul   st(2),st
  41881d:	pop    ds
  41881e:	ret    
  41881f:	adc    ecx,DWORD PTR [edi+0x48]
  418822:	add    BYTE PTR [edi],dh
  418824:	xchg   edx,eax
  418825:	inc    eax
  418826:	ins    BYTE PTR es:[edi],dx
  418827:	adc    BYTE PTR [edx],dh
  418829:	mov    BYTE PTR [ebp+0x6a],ch
  41882c:	daa    
  41882d:	mov    ch,0xd0
  41882f:	pop    ecx
  418830:	test   DWORD PTR [ecx-0x8],ecx
  418833:	adc    BYTE PTR [ecx],0x84
  418836:	fcom   QWORD PTR [ebx]
  418838:	(bad)  
  418839:	scas   eax,DWORD PTR es:[edi]
  41883a:	xchg   BYTE PTR [eax+ebx*1+0x12],ch
  41883e:	bound  edi,QWORD PTR [edi]
  418840:	xchg   ebp,eax
  418841:	and    BYTE PTR [eax],al
  418843:	(bad)  
  418844:	mov    esi,0x28c1dbdf
  418849:	push   ebp
  41884a:	inc    edi
  41884b:	jmp    0x6c9f21a7
  418850:	outs   dx,BYTE PTR ds:[esi]
  418851:	in     al,dx
  418852:	test   BYTE PTR ds:0xea00b115,0xf5
  418859:	mov    ch,0xa7
  41885b:	popa   
  41885c:	out    0xd3,al
  41885e:	mov    bl,0xfd
  418860:	cmp    cl,BYTE PTR [edi+0x3db18aef]
  418866:	out    dx,al
  418867:	inc    ecx
  418868:	test   BYTE PTR [eax+0x7cbbf53f],dl
  41886e:	(bad)  
  41886f:	fs xchg esi,eax
  418871:	pop    edx
  418872:	lods   eax,DWORD PTR ds:[esi]
  418873:	repnz stos DWORD PTR es:[edi],eax
  418875:	add    BYTE PTR [edi],bl
  418877:	jp     0x41889e
  418879:	sahf   
  41887a:	sar    DWORD PTR [eax-0x7f],0x58
  41887e:	xchg   ebp,eax
  41887f:	cld    
  418880:	add    eax,0xa542450f
  418885:	out    0xf2,eax
  418887:	outs   dx,DWORD PTR es:[esi]
  418889:	sub    eax,DWORD PTR [esi]
  41888b:	fwait
  41888c:	(bad)  
  41888d:	sbb    DWORD PTR [esi],0xb9e57a92
  418893:	shl    BYTE PTR [eax+0x31],1
  418896:	or     dh,0x85
  418899:	xchg   ebx,eax
  41889a:	cs jo  0x418872
  41889d:	xchg   esi,eax
  41889e:	adc    cl,BYTE PTR [edx+0x41f8038]
  4188a4:	add    bl,dl
  4188a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a7:	dec    edx
  4188a8:	adc    al,dh
  4188aa:	(bad)  
  4188ab:	rcr    bl,1
  4188ad:	pop    ebx
  4188ae:	jmp    DWORD PTR [esi+0x4f]
  4188b1:	sbb    DWORD PTR [esi-0x52],0x47819393
  4188b8:	push   ecx
  4188b9:	cmp    bh,BYTE PTR [edi-0x3f]
  4188bc:	sbb    al,0x60
  4188be:	xor    edi,DWORD PTR ds:0x44495f03
  4188c4:	aaa    
  4188c5:	stos   BYTE PTR es:[edi],al
  4188c6:	add    al,0x18
  4188c8:	push   eax
  4188c9:	imul   edi,DWORD PTR ds:0xd718fbc0,0xffffffee
  4188d0:	mov    dh,0x55
  4188d2:	cmp    BYTE PTR [eax-0x567b1096],al
  4188d8:	sahf   
  4188d9:	leave  
  4188da:	mov    DWORD PTR [ebp-0x34],esi
  4188dd:	and    eax,DWORD PTR [ebp+0x14109a68]
  4188e3:	jnp    0x41891c
  4188e5:	or     al,0x80
  4188e7:	std    
  4188e8:	scas   eax,DWORD PTR es:[edi]
  4188e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188ea:	mov    ebx,0x167f418a
  4188ef:	rcl    BYTE PTR [ebp-0x42ce22df],1
  4188f5:	lods   eax,DWORD PTR ds:[esi]
  4188f6:	sbb    bl,BYTE PTR [edx]
  4188f8:	add    al,0xab
  4188fa:	loope  0x418962
  4188fc:	icebp  
  4188fd:	(bad)  
  4188fe:	aaa    
  4188ff:	add    DWORD PTR [ecx+eiz*2],0x80e8b89b
  418906:	arpl   WORD PTR [eax+0x5657dcc3],di
  41890c:	cmp    eax,0x5488b144
  418911:	pusha  
  418912:	cdq    
  418913:	pop    ecx
  418914:	aam    0x2e
  418916:	mov    al,ds:0xee0f08a9
  41891b:	dec    ebp
  41891c:	(bad)  
  41891d:	in     eax,dx
  41891e:	ins    BYTE PTR es:[edi],dx
  41891f:	ret    0xda90
  418922:	or     DWORD PTR [esi],edx
  418924:	popa   
  418925:	sub    al,0x5b
  418927:	fmul   st,st(3)
  418929:	cdq    
  41892a:	cmp    esi,eax
  41892c:	out    0xf0,al
  41892e:	mov    eax,0x8b3f253
  418933:	pop    ecx
  418934:	pop    edi
  418935:	out    dx,eax
  418936:	cmp    eax,0xb7270808
  41893b:	inc    ecx
  41893c:	cmc    
  41893d:	ffreep st(5)
  41893f:	sbb    esi,eax
  418941:	pop    edi
  418942:	push   esi
  418943:	fidivr WORD PTR [ebp+0x1ad08066]
  418949:	adc    BYTE PTR [ebx+0x69],cl
  41894c:	pop    ss
  41894d:	imul   eax,DWORD PTR [edx],0xffffffa3
  418950:	and    bl,BYTE PTR [edi]
  418952:	hlt    
  418953:	sti    
  418954:	pusha  
  418955:	cli    
  418956:	mov    dl,0x72
  418958:	sub    al,0x12
  41895a:	fsub   QWORD PTR [esi+ecx*1-0x78d33e83]
  418961:	in     eax,dx
  418962:	rcr    DWORD PTR [esi+0x5e],cl
  418965:	scas   al,BYTE PTR es:[edi]
  418966:	(bad)  
  418967:	int    0xa3
  418969:	(bad)  
  41896a:	shl    BYTE PTR [ecx],1
  41896c:	or     eax,0x6be946f2
  418971:	loop   0x418911
  418973:	sbb    DWORD PTR [ebx-0x31],0xffffffc5
  418977:	enter  0x6b2a,0x21
  41897b:	adc    BYTE PTR [ecx+0x43],al
  41897e:	xor    eax,0x71a52656
  418983:	cmp    al,BYTE PTR [ecx+0x21]
  418986:	mov    al,0x17
  418988:	sub    ebx,DWORD PTR [ecx+0x6677e25b]
  41898e:	sar    ch,cl
  418990:	jo     0x41896c
  418992:	je     0x418932
  418994:	xor    bl,BYTE PTR [edi+0x35]
  418997:	dec    edi
  418998:	inc    ebp
  418999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41899a:	test   DWORD PTR [ebp+0x72],edi
  41899d:	mov    bl,0x4e
  41899f:	or     cl,BYTE PTR [ecx-0x324aea4e]
  4189a5:	push   0xd76ac5b9
  4189aa:	pop    ss
  4189ab:	outs   dx,DWORD PTR ds:[esi]
  4189ac:	push   DWORD PTR [eax+0x941fb56]
  4189b2:	push   es
  4189b3:	mov    eax,0xc5dd88d5
  4189b8:	inc    eax
  4189b9:	mov    eax,ds:0xb07c7ebb
  4189be:	sub    eax,0x5917420d
  4189c3:	jo     0x4189d6
  4189c5:	lahf   
  4189c6:	ins    DWORD PTR es:[edi],dx
  4189c7:	mov    ch,0xae
  4189c9:	or     DWORD PTR [edx-0x20],edi
  4189cc:	shr    bh,1
  4189ce:	and    al,0x97
  4189d1:	ret    0xe306
  4189d4:	push   esp
  4189d5:	dec    ebp
  4189d6:	cmp    al,0xf
  4189d8:	mov    edx,0x40e16e84
  4189dd:	adc    al,0x29
  4189df:	jmp    0x4189f1
  4189e1:	popf   
  4189e2:	pause  
  4189e4:	mov    cl,0x6b
  4189e6:	mov    ebx,0xf4f9d36b
  4189eb:	sub    BYTE PTR [edi+0x4ae623ca],ah
  4189f1:	adc    al,0xf6
  4189f3:	mov    DWORD PTR [esp+esi*8],ecx
  4189f6:	sbb    edx,DWORD PTR [edx+0x10]
  4189f9:	push   edi
  4189fa:	in     al,dx
  4189fb:	adc    eax,0x2a2ff7d0
  418a00:	or     DWORD PTR [edi],ebp
  418a02:	jb     0x4189c2
  418a04:	cmp    ah,0xae
  418a07:	test   eax,0xdba9e3e8
  418a0c:	loopne 0x418a7a
  418a0e:	xor    eax,0x35b476fc
  418a13:	mov    DWORD PTR [esi-0x80],esp
  418a16:	dec    ebp
  418a17:	sbb    edx,DWORD PTR [edx-0xd8087c3]
  418a1d:	push   cs
  418a1e:	xchg   esi,eax
  418a1f:	pushf  
  418a20:	and    al,bh
  418a22:	xor    BYTE PTR [ebx-0x1afb165b],bh
  418a28:	and    eax,0xa7e774df
  418a2d:	sub    DWORD PTR [edx-0x2c7d2cf6],ebp
  418a33:	into   
  418a34:	cld    
  418a35:	jp     0x418a63
  418a37:	ret    0x77f
  418a3a:	rol    eax,1
  418a3c:	ins    DWORD PTR es:[edi],dx
  418a3d:	das    
  418a3e:	daa    
  418a3f:	and    al,0x76
  418a41:	outs   dx,BYTE PTR ds:[esi]
  418a42:	pop    edi
  418a43:	(bad)  
  418a44:	aas    
  418a45:	out    dx,al
  418a46:	xchg   esp,eax
  418a47:	test   BYTE PTR [ebx-0x6c1c7d21],ah
  418a4d:	retf   
  418a4e:	mov    ch,0xec
  418a50:	shr    DWORD PTR [edx+0x1a02f3c2],1
  418a56:	mov    bl,0xf2
  418a58:	call   FWORD PTR [eax+0x0]
  418a5b:	jp     0x418a3b
  418a5d:	bound  ecx,QWORD PTR [ebp-0x73]
  418a60:	adc    edx,eax
  418a62:	or     edx,DWORD PTR [edi]
  418a64:	or     eax,0x34657822
  418a69:	out    dx,al
  418a6a:	scas   al,BYTE PTR es:[edi]
  418a6b:	jge    0x418ac8
  418a6d:	sbb    BYTE PTR [esi+0x68],0xe2
  418a71:	cmp    DWORD PTR [ecx-0x27],ecx
  418a74:	push   ebx
  418a75:	add    esp,edi
  418a77:	out    0x3c,al
  418a79:	xchg   DWORD PTR [ecx-0x60],esi
  418a7c:	ds mov al,0x52
  418a7f:	and    ebx,DWORD PTR [ebp+0x3e]
  418a82:	lea    ebx,[ecx-0x5a70afb3]
  418a88:	xor    eax,0xb7379ddd
  418a8d:	inc    eax
  418a8e:	and    BYTE PTR ss:[ebx-0x77ce66c6],bh
  418a95:	xchg   ecx,eax
  418a96:	xchg   edx,eax
  418a97:	cdq    
  418a98:	dec    esp
  418a99:	push   eax
  418a9a:	dec    ebp
  418a9b:	xor    eax,0xcb43d593
  418aa0:	aas    
  418aa1:	xor    eax,0x35393ec2
  418aa6:	ins    DWORD PTR es:[edi],dx
  418aa7:	dec    ecx
  418aa8:	bnd jne 0x418a5b
  418aab:	cmp    eax,0xed421b22
  418ab0:	mov    ds:0x5ac693f,al
  418ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab6:	cmp    al,0x55
  418ab8:	stc    
  418ab9:	ds push cs
  418abb:	jbe    0x418a51
  418abd:	sub    al,0xa8
  418abf:	repnz fldenv [eax-0x51]
  418ac3:	pop    ebx
  418ac4:	xchg   BYTE PTR [edx+0x4b],dl
  418ac7:	leave  
  418ac8:	mul    DWORD PTR [edx+0x50f9f36b]
  418ace:	int3   
  418acf:	or     eax,DWORD PTR [ebx]
  418ad1:	xor    dl,ch
  418ad3:	mov    dl,0x4d
  418ad5:	test   al,0x86
  418ad7:	idiv   BYTE PTR [eax+0x25eed636]
  418add:	scas   al,BYTE PTR es:[edi]
  418ade:	in     al,0xdd
  418ae0:	pop    ebx
  418ae1:	jl     0x418a69
  418ae3:	push   esp
  418ae4:	add    BYTE PTR [esi+0xdf348bc],dl
  418aea:	fsubr  DWORD PTR [edi]
  418aec:	pop    esp
  418aed:	enter  0x17e6,0x48
  418af1:	pop    esi
  418af2:	retf   
  418af3:	xchg   edi,eax
  418af4:	jge    0x418b69
  418af6:	or     edi,DWORD PTR [ecx]
  418af8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  418afa:	adc    al,0x3a
  418afc:	nop
  418afd:	shl    BYTE PTR [eax],1
  418aff:	add    bl,bl
  418b01:	sub    cl,dh
  418b03:	cmp    al,0xfd
  418b05:	iret   
  418b06:	mov    edx,DWORD PTR [esi]
  418b08:	pusha  
  418b09:	jg     0x418b21
  418b0b:	or     BYTE PTR [edi],bl
  418b0d:	pop    eax
  418b0e:	addr16 popa 
  418b10:	sbb    DWORD PTR [ebx],eax
  418b12:	test   eax,0xabbd7bc5
  418b17:	rol    DWORD PTR [edx-0x76],cl
  418b1a:	dec    ecx
  418b1b:	sub    edi,ebx
  418b1d:	push   0x2e8161c
  418b22:	popa   
  418b23:	lock mov ds:0x807df5a2,eax
  418b29:	push   ebp
  418b2a:	pop    ecx
  418b2b:	dec    eax
  418b2c:	ja     0x418b7d
  418b2e:	fst    st(7)
  418b30:	(bad)  
  418b32:	sbb    BYTE PTR [eax-0x74e7322d],bl
  418b38:	in     eax,0x60
  418b3a:	dec    ebp
  418b3b:	dec    esp
  418b3c:	sub    esi,DWORD PTR [edi+0x4b]
  418b3f:	inc    ebx
  418b40:	or     edi,DWORD PTR [esi]
  418b42:	das    
  418b43:	les    edx,FWORD PTR [esi]
  418b45:	add    DWORD PTR [ecx],0x95cf9eae
  418b4b:	mov    ds:0xd9ae14bd,eax
  418b50:	inc    ecx
  418b51:	xchg   BYTE PTR [esi+0x79],al
  418b54:	push   eax
  418b55:	jno    0x418b9d
  418b57:	and    BYTE PTR [esi-0x63],bh
  418b5a:	imul   esi,DWORD PTR [eax-0x31],0xfde34834
  418b61:	sub    al,0x7c
  418b63:	sti    
  418b64:	push   es
  418b65:	sub    al,0x56
  418b67:	test   al,0xeb
  418b69:	test   al,0xd0
  418b6b:	push   eax
  418b6c:	aam    0xa9
  418b6e:	or     DWORD PTR [esi],edi
  418b70:	aam    0x4f
  418b72:	add    edx,edi
  418b74:	data16 aas 
  418b76:	jb     0x418bb3
  418b78:	adc    ebp,esi
  418b7a:	fdivr  QWORD PTR ds:0x255fac9
  418b80:	scas   eax,DWORD PTR es:[edi]
  418b81:	cli    
  418b82:	push   0xffffffc5
  418b84:	pop    ecx
  418b85:	rcr    esi,cl
  418b87:	adc    eax,0x9b255677
  418b8c:	pop    ebp
  418b8d:	in     eax,0x1c
  418b8f:	mov    BYTE PTR [ebp+eax*8+0x39446d20],ch
  418b96:	enter  0x86f9,0x54
  418b9a:	dec    ebp
  418b9b:	arpl   WORD PTR [ecx+0x48],si
  418b9e:	xor    al,0x89
  418ba0:	lds    ecx,FWORD PTR [ebp+eax*2+0x35]
  418ba4:	es inc ebx
  418ba6:	mov    bl,0x55
  418ba8:	xor    BYTE PTR [ecx],bh
  418baa:	shr    DWORD PTR [ecx],cl
  418bac:	mov    dl,0xa7
  418bae:	mov    ebx,0x3ea53a75
  418bb3:	dec    ecx
  418bb4:	mov    ebx,0x4ae2d20d
  418bb9:	push   esi
  418bba:	mov    esi,edx
  418bbc:	jl     0x418bb0
  418bbe:	or     esi,edi
  418bc0:	xor    al,0xe4
  418bc2:	jmp    0x418b6b
  418bc4:	imul   esi,DWORD PTR [ecx-0x20f116b1],0x6a
  418bcb:	into   
  418bcc:	jmp    0xbd0c033a
  418bd1:	leave  
  418bd2:	stc    
  418bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd4:	cwde   
  418bd5:	xor    BYTE PTR [ebx],0x38
  418bd8:	pop    es
  418bd9:	mov    edi,0xfcf037f5
  418bde:	mov    edx,0xbaef717f
  418be3:	out    0xf7,eax
  418be5:	repnz mov bl,0x8d
  418be8:	fisttp WORD PTR ds:0x194ba369
  418bee:	mov    eax,0xb168a6ab
  418bf3:	cmc    
  418bf4:	pop    esp
  418bf5:	mov    ds:0x8c50a1d8,al
  418bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bfb:	data16 mov dl,0xfb
  418bfe:	rcl    esp,1
  418c00:	ins    BYTE PTR es:[edi],dx
  418c01:	mov    ds:0x5e84ac58,al
  418c06:	in     al,dx
  418c07:	xchg   ebx,eax
  418c08:	retf   
  418c09:	xchg   ebx,eax
  418c0a:	jmp    0x1e821d6d
  418c0f:	xchg   DWORD PTR [esi-0x33],ebp
  418c12:	cs icebp 
  418c14:	xor    eax,0x4d74f2c3
  418c19:	stos   DWORD PTR es:[edi],eax
  418c1a:	adc    BYTE PTR [eax-0x6ac70203],ch
  418c20:	fisub  WORD PTR [edx+edx*8+0xc]
  418c24:	cmp    DWORD PTR [esi-0x14],ecx
  418c27:	clc    
  418c28:	sbb    DWORD PTR [ebx+ebp*1-0x15],ecx
  418c2c:	lods   al,BYTE PTR ds:[esi]
  418c2d:	xor    eax,0x57166f6b
  418c32:	fsub   st(1),st
  418c34:	mov    ds:0xa98fdac2,eax
  418c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c3a:	(bad)  
  418c3b:	sub    eax,0xbe0698e1
  418c40:	das    
  418c41:	(bad)  
  418c42:	and    al,0xa6
  418c44:	shl    BYTE PTR [ebx],cl
  418c46:	out    dx,al
  418c47:	mov    cx,0x1590
  418c4b:	dec    ecx
  418c4c:	adc    al,0x8e
  418c4e:	xor    cl,dl
  418c50:	cmp    DWORD PTR [bp-0x660f],0x4a
  418c56:	sbb    esi,edi
  418c58:	xchg   ebp,eax
  418c59:	adc    DWORD PTR [eax+0x7b02a0fa],edi
  418c5f:	cmp    ecx,esi
  418c61:	or     eax,0xb0f7c6d9
  418c66:	sbb    dl,bh
  418c68:	and    al,0xb5
  418c6a:	jmp    0xe9b80ae9
  418c6f:	jne    0x418c6c
  418c71:	sbb    dl,dh
  418c73:	les    ebp,FWORD PTR [edx-0x3c]
  418c76:	aaa    
  418c77:	or     eax,0x7d33a762
  418c7c:	jo     0x418c57
  418c7e:	pop    ebp
  418c7f:	pop    ebx
  418c80:	and    DWORD PTR [ecx],eax
  418c82:	adc    ebx,0x8d94c9e
  418c88:	pop    ds
  418c89:	push   cs
  418c8a:	pop    ds
  418c8b:	xchg   ebx,eax
  418c8d:	cld    
  418c8e:	loopne 0x418c47
  418c90:	js     0x418c5d
  418c92:	test   DWORD PTR [esi],edx
  418c94:	fstp   DWORD PTR [ebp+0x4c]
  418c97:	mov    ss,WORD PTR [edx+0x50be5d07]
  418c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c9e:	pop    ds
  418c9f:	retf   
  418ca0:	mov    cl,0x16
  418ca2:	xor    bh,BYTE PTR [edi+edx*1]
  418ca5:	and    al,0xa3
  418ca7:	nop
  418ca8:	fist   DWORD PTR [ecx+edx*8-0x74]
  418cac:	cs push esi
  418cae:	out    dx,eax
  418caf:	test   al,0xc9
  418cb1:	in     eax,0x86
  418cb3:	jno    0x418c46
  418cb5:	mov    dl,0x16
  418cb7:	jg     0x418cd5
  418cb9:	push   esp
  418cba:	cvtpi2ps xmm5,QWORD PTR [ecx+0x30f49782]
  418cc1:	jg     0x418c67
  418cc3:	sahf   
  418cc4:	xlat   BYTE PTR ds:[ebx]
  418cc5:	mov    cl,0x37
  418cc7:	ficom  WORD PTR [edi]
  418cc9:	out    0x67,eax
  418ccb:	inc    esi
  418ccc:	mov    edx,0x6da026d3
  418cd1:	retf   
  418cd2:	add    esi,DWORD PTR [edi-0x5b1fba8]
  418cd8:	cmp    DWORD PTR [ecx+ebp*8-0x67],0x73
  418cdd:	stos   BYTE PTR es:[edi],al
  418cde:	call   0x79f4:0x4a745a7f
  418ce5:	mov    ds:0xfeb40bcb,eax
  418cea:	pop    ebp
  418ceb:	cmp    cl,ah
  418ced:	test   eax,0x6a086682
  418cf2:	and    al,0x8b
  418cf4:	loopne 0x418d4b
  418cf6:	clc    
  418cf7:	or     eax,0x3d93a51f
  418cfc:	sub    al,0x6e
  418cfe:	adc    BYTE PTR [ebx],cl
  418d00:	jb     0x418cd1
  418d02:	in     eax,0xc0
  418d04:	mov    ds:0x8bcd3a48,eax
  418d09:	nop
  418d0a:	mov    dh,0xa5
  418d0c:	cmp    esi,esi
  418d0e:	cwde   
  418d0f:	mov    BYTE PTR [ebp-0x554ee4e8],dh
  418d15:	cwde   
  418d16:	lods   al,BYTE PTR ds:[esi]
  418d17:	loop   0x418d49
  418d19:	jno    0x418cee
  418d1b:	pop    esp
  418d1c:	in     al,0x58
  418d1e:	das    
  418d1f:	jl     0x418d59
  418d21:	mov    ah,0xe
  418d23:	sbb    DWORD PTR [ebx+0x75],eax
  418d26:	clc    
  418d27:	lods   al,BYTE PTR ds:[esi]
  418d28:	mov    cl,bh
  418d2a:	jns    0x418d9c
  418d2c:	imul   ebp,DWORD PTR [esi+0x9e07b47],0xac9e6ab
  418d36:	idiv   edx
  418d38:	(bad)  
  418d39:	jmp    0x418d2a
  418d3b:	push   eax
  418d3c:	or     BYTE PTR [eax+0x25],0xe8
  418d40:	sub    DWORD PTR [esp+ebp*4],eax
  418d43:	popa   
  418d44:	and    esp,esi
  418d46:	jae    0x418da7
  418d48:	jb     0x418ccd
  418d4a:	in     al,0xe1
  418d4c:	out    0x76,al
  418d4e:	aad    0xa
  418d50:	lods   al,BYTE PTR ds:[esi]
  418d51:	push   ss
  418d52:	jne    0x418d64
  418d54:	push   0x9a603c02
  418d59:	jle    0x418d85
  418d5b:	add    eax,0x8102704d
  418d60:	jge    0x418d10
  418d62:	test   BYTE PTR ds:0x1ad25a39,0x2e
  418d69:	jp     0x418d78
  418d6b:	push   es
  418d6c:	nop
  418d6d:	pop    ecx
  418d6e:	je     0x418da9
  418d70:	test   eax,0xb8a58599
  418d75:	add    al,0x10
  418d77:	and    eax,0x43f0581b
  418d7c:	cmp    ch,BYTE PTR [edx+ebp*8+0x4ef74b0f]
  418d83:	bound  ecx,QWORD PTR [edi-0x1f79c941]
  418d89:	mul    bh
  418d8b:	mov    edx,DWORD PTR [edi-0x66]
  418d8e:	shl    BYTE PTR [ebx+ebp*8],1
  418d91:	push   ss
  418d92:	stc    
  418d93:	imul   edi,DWORD PTR [ebx],0xcff701d5
  418d99:	and    al,0x89
  418d9b:	dec    ecx
  418d9c:	ja     0x418d5f
  418d9e:	xor    DWORD PTR [ebx+0xb6c4796],ecx
  418da4:	inc    ebx
  418da5:	cli    
  418da6:	sbb    esi,esp
  418da8:	out    0x1d,al
  418daa:	or     edx,ecx
  418dac:	and    bh,BYTE PTR [ebp+esi*2+0x1c68ff25]
  418db3:	cmp    DWORD PTR [esi-0x7887b30c],0x49973e16
  418dbd:	inc    edi
  418dbe:	movlps QWORD PTR [ebp-0x2c9d157b],xmm6
  418dc5:	dec    eax
  418dc6:	sub    DWORD PTR [ebx-0x17],esi
  418dc9:	in     al,dx
  418dca:	popf   
  418dcb:	add    eax,0xec50bb74
  418dd0:	sar    dh,0xf2
  418dd3:	mov    ebx,0x51c4aa17
  418dd8:	pause  
  418dda:	cmp    eax,0x69e2088d
  418ddf:	out    dx,eax
  418de0:	imul   esi,eax,0x9628b664
  418de6:	jo     0x418da3
  418de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418de9:	les    esp,FWORD PTR [esi+0xd]
  418dec:	bound  esp,QWORD PTR [esi]
  418dee:	daa    
  418def:	mov    ah,0xd5
  418df1:	adc    ebp,DWORD PTR [esi+edi*1-0x6e40744b]
  418df8:	(bad)  
  418df9:	fwait
  418dfa:	xchg   DWORD PTR [edx],ecx
  418dfc:	pop    edx
  418dfd:	clc    
  418dfe:	push   0x61
  418e00:	outs   dx,DWORD PTR ds:[esi]
  418e01:	mov    ebx,0x9e2006d5
  418e06:	or     DWORD PTR [esi-0x12e8e37d],ebp
  418e0c:	xlat   BYTE PTR ds:[bx]
  418e0e:	ficomp WORD PTR [edi+ebx*4+0x73]
  418e12:	daa    
  418e13:	sahf   
  418e14:	mov    cl,0x2e
  418e16:	aad    0x49
  418e18:	gs in  eax,0xcf
  418e1b:	mov    bh,0xcf
  418e1d:	fild   WORD PTR [ebx-0x53]
  418e20:	mov    esi,0xc37eb351
  418e25:	dec    edx
  418e26:	mov    eax,ds:0x459b4eed
  418e2b:	leave  
  418e2c:	or     DWORD PTR [eax-0x54d1991c],esi
  418e32:	aam    0xc9
  418e34:	int    0xaa
  418e36:	retf   
  418e37:	or     dh,BYTE PTR [ecx+0x32]
  418e3a:	jb     0x418e34
  418e3c:	in     al,dx
  418e3d:	cdq    
  418e3e:	jns    0x418e8a
  418e40:	fld    DWORD PTR [edi+0x37]
  418e43:	(bad)  
  418e44:	cs enter 0x7609,0xc4
  418e49:	mov    al,ds:0x99875135
  418e4e:	fnstcw WORD PTR [edi]
  418e50:	rcr    BYTE PTR [eax-0xc],0x39
  418e54:	sbb    BYTE PTR [ecx-0x252a201c],dl
  418e5a:	(bad)  
  418e5b:	aam    0x35
  418e5d:	jbe    0x418dfc
  418e5f:	in     al,0xf
  418e61:	mov    cl,0xe3
  418e63:	ins    DWORD PTR es:[edi],dx
  418e64:	mov    bh,0x5a
  418e66:	addr16 in eax,0x2d
  418e69:	(bad)  
  418e6a:	scas   al,BYTE PTR es:[edi]
  418e6b:	(bad)  
  418e6c:	xchg   ebx,eax
  418e6d:	mov    ch,0x3d
  418e6f:	(bad)  
  418e70:	outs   dx,BYTE PTR ds:[esi]
  418e71:	lods   eax,DWORD PTR ds:[esi]
  418e72:	repnz out 0xda,eax
  418e75:	pop    edx
  418e76:	pop    es
  418e77:	ret    0xcd9a
  418e7a:	sub    ah,al
  418e7c:	call   0xb911a786
  418e81:	mov    bh,0x6a
  418e83:	fdiv   DWORD PTR [edx-0x9]
  418e86:	or     edi,0xc4199a3e
  418e8c:	sar    DWORD PTR [esi-0x18],cl
  418e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e90:	mov    ecx,0x5df64e3f
  418e95:	jp     0x418e64
  418e97:	call   0x1a3f:0x1f232fdb
  418e9e:	in     al,0xc4
  418ea0:	xor    al,0x43
  418ea2:	jge    0x418e88
  418ea4:	imul   eax,esp,0x3d
  418ea7:	(bad)  [edx+0x71]
  418eaa:	adc    BYTE PTR [ebx+0x50],0xb8
  418eae:	stos   BYTE PTR es:[edi],al
  418eaf:	jnp    0x418e84
  418eb1:	pop    esp
  418eb2:	jno    0x418ee0
  418eb4:	clc    
  418eb5:	into   
  418eb6:	cmp    eax,ebp
  418eb8:	test   DWORD PTR [edi-0x2ce4d03f],ebp
  418ebe:	gs in  al,0x17
  418ec1:	lahf   
  418ec2:	and    bh,ch
  418ec4:	imul   ecx,DWORD PTR [edx-0x1245f668],0xe5f344bb
  418ece:	pop    esi
  418ecf:	mov    edi,0x7b40d69c
  418ed4:	loop   0x418f50
  418ed6:	frstor [edi]
  418ed8:	(bad)  
  418ed9:	imul   DWORD PTR [ecx-0x20]
  418edc:	pop    esi
  418edd:	imul   esp,DWORD PTR [eax],0x46500b1c
  418ee3:	fcmovnbe st,st(5)
  418ee5:	and    ecx,DWORD PTR [esi+0x4b]
  418ee8:	in     eax,0xdd
  418eea:	sahf   
  418eeb:	inc    eax
  418eec:	fdiv   DWORD PTR [esp+esi*2]
  418eef:	xor    BYTE PTR [ecx+0x72],dl
  418ef2:	jl     0x418ee5
  418ef4:	adc    BYTE PTR [ebx+0x78531894],bh
  418efa:	sbb    al,0x5e
  418efc:	fnsave [edx+0x212b5880]
  418f02:	xor    dl,dh
  418f04:	inc    ecx
  418f05:	aam    0x8f
  418f07:	retf   
  418f08:	jg     0x418eb2
  418f0a:	or     dh,BYTE PTR [ecx]
  418f0c:	dec    ecx
  418f0d:	xor    eax,0x691ea423
  418f12:	push   es
  418f13:	and    al,0xe
  418f15:	xchg   esp,eax
  418f16:	gs sti 
  418f18:	adc    eax,0x72a4ac30
  418f1d:	outs   dx,BYTE PTR ds:[esi]
  418f1e:	test   eax,0x4613ffdf
  418f23:	test   eax,0x5ea36dd5
  418f28:	pop    ecx
  418f29:	das    
  418f2a:	xor    eax,0x35e5cf81
  418f2f:	call   0xaa2c:0xe807a352
  418f36:	in     al,dx
  418f37:	pop    esp
  418f38:	icebp  
  418f39:	es dec edi
  418f3b:	sar    edi,0xde
  418f3e:	push   esi
  418f3f:	clc    
  418f40:	ja     0x418ee8
  418f42:	(bad)  
  418f44:	pop    ebx
  418f45:	jmp    0x9d9490f3
  418f4a:	(bad)  
  418f4b:	scas   eax,DWORD PTR es:[edi]
  418f4c:	adc    BYTE PTR [eax-0x2e70ea28],bl
  418f52:	scas   eax,DWORD PTR es:[edi]
  418f53:	jne    0x418f7d
  418f55:	pop    eax
  418f56:	cwde   
  418f57:	call   0xfe5f:0x24fddaaf
  418f5e:	out    0xd3,eax
  418f60:	mov    bl,0xc5
  418f62:	ja     0x418f88
  418f64:	mov    esp,0x593af564
  418f69:	jecxz  0x418f79
  418f6b:	in     eax,dx
  418f6c:	repnz icebp 
  418f6e:	aam    0x98
  418f70:	mov    esi,0x4fcd8847
  418f75:	jb     0x418f81
  418f77:	xor    DWORD PTR [edx+0x6d],ebp
  418f7a:	adc    al,0xc6
  418f7c:	push   ebx
  418f7d:	pop    ebx
  418f7e:	mov    edi,0x15334ed5
  418f83:	pop    ds
  418f84:	cmc    
  418f85:	into   
  418f86:	dec    edx
  418f87:	cmp    ch,BYTE PTR [esi+0x5d]
  418f8a:	mov    eax,0x974c0c24
  418f8f:	fnstsw WORD PTR [ecx-0x16]
  418f92:	cli    
  418f93:	jmp    0x418f98
  418f95:	div    DWORD PTR [eax]
  418f97:	sbb    DWORD PTR [esi],ebx
  418f99:	stos   BYTE PTR es:[edi],al
  418f9a:	sbb    eax,DWORD PTR gs:[eax-0x16]
  418f9e:	(bad)  
  418f9f:	popa   
  418fa0:	adc    al,0xce
  418fa2:	sub    DWORD PTR [edi-0xa],ebp
  418fa5:	jl     0x418f46
  418fa7:	sbb    eax,ebp
  418fa9:	cmc    
  418faa:	shl    DWORD PTR [ebx+0x23a58954],0x4e
  418fb1:	or     DWORD PTR [ebp+0x30d472f7],edi
  418fb7:	adc    esi,DWORD PTR [edi]
  418fb9:	inc    eax
  418fba:	sar    DWORD PTR [edx-0x77],cl
  418fbd:	fbstp  TBYTE PTR [eax+0x2f0a9fc0]
  418fc3:	ins    DWORD PTR es:[edi],dx
  418fc4:	sbb    ah,bl
  418fc6:	fdiv   DWORD PTR [esi]
  418fc8:	inc    eax
  418fc9:	sub    ebp,DWORD PTR ds:0x85c11039
  418fcf:	js     0x41903f
  418fd1:	or     al,0x7
  418fd3:	jmp    0xad49:0x4c69f5fd
  418fda:	test   dl,ah
  418fdc:	or     edx,DWORD PTR [ebp-0x64]
  418fdf:	aad    0x5
  418fe1:	or     ebp,DWORD PTR [ebp+0x16475d79]
  418fe7:	sub    ch,BYTE PTR [ebp-0x2f]
  418fea:	lods   al,BYTE PTR ds:[esi]
  418feb:	aam    0x1d
  418fed:	inc    ebp
  418fee:	adc    DWORD PTR [esi],esi
  418ff0:	push   ds
  418ff1:	add    DWORD PTR [eax+edx*1-0x1d],esi
  418ff5:	ds mov eax,0x68783021
  418ffb:	into   
  418ffc:	jecxz  0x41906e
  418ffe:	adc    DWORD PTR [edx+0x57],ebx
  419001:	and    eax,0x18c2289b
  419006:	jl     0x419042
  419008:	jo     0x418ff1
  41900a:	hlt    
  41900b:	loop   0x418fe8
  41900d:	pusha  
  41900e:	jmp    0x419081
  419010:	dec    eax
  419011:	pop    ebx
  419012:	inc    edi
  419013:	arpl   WORD PTR [edx-0x36],sp
  419016:	ins    BYTE PTR es:[edi],dx
  419017:	cmp    ch,BYTE PTR [edi-0x2a5f67e0]
  41901d:	pop    eax
  41901e:	cwde   
  41901f:	scas   eax,DWORD PTR es:[edi]
  419020:	push   ds
  419021:	add    DWORD PTR [edi+0x41],ebx
  419024:	fst    DWORD PTR [ebx+ebx*8]
  419027:	dec    esp
  419028:	pop    ds
  419029:	fsubr  QWORD PTR [esi]
  41902b:	retf   
  41902c:	icebp  
  41902d:	inc    ebx
  41902e:	loopne 0x419057
  419030:	and    BYTE PTR [edi],cl
  419032:	retf   0x8195
  419035:	cmp    BYTE PTR [ebx+0x1f86c51d],0x16
  41903c:	ds aas 
  41903e:	jmp    0xde56:0xb0b3369c
  419045:	icebp  
  419046:	jno    0x41908a
  419048:	jmp    0x4190c3
  41904a:	mov    ecx,0x82e8d63c
  41904f:	loopne 0x41908c
  419051:	sub    al,0x5b
  419053:	(bad)  
  419054:	jmp    0xd43828c4
  419059:	retf   
  41905a:	popa   
  41905b:	push   ss
  41905c:	call   0xc24c7b19
  419061:	mov    bh,0xec
  419063:	pop    eax
  419064:	adc    eax,0x83a9d5bc
  419069:	mov    WORD PTR [edx],ds
  41906b:	jne    0x4190b2
  41906d:	jle    0x419082
  41906f:	mov    bh,0xbf
  419071:	test   eax,0x5bf12798
  419076:	cmp    al,0x22
  419078:	dec    ebp
  419079:	js     0x41909a
  41907b:	and    eax,0xdf34b609
  419080:	push   cs
  419081:	mov    ah,0xe9
  419083:	sub    ch,BYTE PTR [ebp-0x3eb5e61b]
  419089:	and    eax,0xd3f02b1e
  41908e:	inc    esp
  41908f:	push   edi
  419090:	jae    0x4190a3
  419092:	aam    0x7f
  419094:	pop    ebx
  419095:	adc    ebx,DWORD PTR [ecx]
  419097:	sub    eax,0x4da8e6c5
  41909c:	stos   BYTE PTR es:[edi],al
  41909d:	out    0x1f,al
  41909f:	xchg   edx,eax
  4190a0:	ins    BYTE PTR es:[edi],dx
  4190a1:	enter  0x348f,0x41
  4190a5:	imul   ecx,DWORD PTR [eax],0xb6143269
  4190ab:	aas    
  4190ac:	inc    esi
  4190ad:	cmp    ecx,DWORD PTR [ebx]
  4190af:	loop   0x4190fa
  4190b1:	push   0xd222c1f1
  4190b6:	not    BYTE PTR [edx+0x341f7664]
  4190bc:	inc    ecx
  4190bd:	cmp    bh,BYTE PTR [esi]
  4190bf:	or     dh,BYTE PTR [edi+0x668ca139]
  4190c5:	sub    al,0x50
  4190c7:	jl     0x41911c
  4190c9:	pop    ds
  4190ca:	adc    DWORD PTR [ecx-0x783478ab],esi
  4190d0:	sti    
  4190d1:	mov    bl,0x4f
  4190d3:	(bad)  [esi+0x4dcc4b18]
  4190d9:	add    eax,0x4372c8dc
  4190de:	jmp    0x3ddb:0x476681e6
  4190e5:	in     al,0x28
  4190e7:	repnz stc 
  4190e9:	loopne 0x4190ac
  4190eb:	popf   
  4190ec:	fild   QWORD PTR [eax]
  4190ee:	push   esi
  4190ef:	pop    ss
  4190f0:	mov    edi,gs
  4190f2:	adc    al,0xaa
  4190f4:	jae    0x41913b
  4190f6:	loop   0x4190d0
  4190f8:	fadd   QWORD PTR [ecx+0x12]
  4190fb:	stos   BYTE PTR es:[edi],al
  4190fc:	dec    ebp
  4190fd:	pop    es
  4190fe:	mov    edx,0x867e41e
  419103:	sbb    al,0xc3
  419105:	mov    eax,ds:0xb56b3827
  41910a:	sbb    bh,BYTE PTR ds:0xd3f54a11
  419110:	pop    ebx
  419111:	into   
  419112:	inc    ecx
  419113:	retf   0x1ae1
  419116:	fs in  eax,dx
  419118:	push   ds
  419119:	inc    edx
  41911a:	addr16 mov dl,ch
  41911d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41911e:	jbe    0x4190ad
  419120:	inc    edx
  419121:	arpl   WORD PTR [ebx+0x60e314cd],cx
  419127:	dec    ebx
  419128:	jp     0x4190de
  41912a:	xor    DWORD PTR [edi+0x48],0xffffff88
  41912e:	sub    cl,bl
  419130:	out    0xd6,al
  419132:	and    eax,0xe90a5058
  419137:	int    0xc0
  419139:	ret    0x8726
  41913c:	push   edx
  41913d:	aas    
  41913e:	inc    esp
  41913f:	xchg   esi,eax
  419140:	ficomp WORD PTR [edx]
  419142:	out    dx,al
  419143:	mov    ah,0x8e
  419145:	add    esi,0x2e
  419148:	mov    ds:0x559f553,eax
  41914d:	call   0x250158f1
  419152:	loopne 0x4191cb
  419154:	jle    0x4191a1
  419156:	pop    es
  419157:	test   edx,ebp
  419159:	jge    0x4191ae
  41915b:	pop    eax
  41915c:	(bad)  
  41915d:	(bad)  
  41915e:	dec    esp
  41915f:	test   eax,0x8fc9df4f
  419164:	dec    esi
  419165:	xchg   ecx,eax
  419166:	test   al,0xb8
  419168:	cmp    eax,0xd4041ec
  41916d:	stos   DWORD PTR es:[edi],eax
  41916e:	xor    eax,0x8e3dbbbd
  419173:	arpl   bp,ax
  419175:	test   eax,0xc939b9f7
  41917a:	ret    0xb2c3
  41917d:	mov    ds:0x5803ec5f,al
  419182:	leave  
  419183:	lea    esi,[edi-0x5b]
  419186:	xchg   DWORD PTR [edx+ebp*8],esi
  419189:	and    bh,al
  41918b:	jo     0x419208
  41918d:	mov    DWORD PTR [edi-0x57f49fcf],eax
  419193:	mov    dh,0x9b
  419195:	pop    esp
  419196:	out    dx,al
  419197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419198:	xchg   esp,eax
  419199:	cld    
  41919a:	push   ss
  41919b:	rcr    ah,cl
  41919d:	mov    ah,0xe8
  41919f:	dec    esp
  4191a0:	ins    DWORD PTR es:[edi],dx
  4191a1:	fiadd  DWORD PTR [ebx]
  4191a3:	bound  esp,QWORD PTR [edi]
  4191a5:	pop    edx
  4191a6:	mov    ds:0x8012de25,eax
  4191ab:	push   esp
  4191ac:	adc    al,0x33
  4191ae:	xchg   esp,eax
  4191af:	icebp  
  4191b0:	stos   DWORD PTR es:[edi],eax
  4191b1:	(bad)
  4191b4:	push   ss
  4191b5:	push   cs
  4191b6:	inc    esp
  4191b7:	cs scas al,BYTE PTR es:[edi]
  4191b9:	push   ds
  4191ba:	xor    esp,esp
  4191bc:	adc    DWORD PTR [edi],edx
  4191be:	sub    al,0x9a
  4191c0:	out    dx,eax
  4191c1:	dec    ebp
  4191c2:	add    eax,0x5b2d36b5
  4191c7:	dec    esi
  4191c8:	outs   dx,DWORD PTR ds:[esi]
  4191c9:	inc    edi
  4191ca:	pushf  
  4191cb:	ret    
  4191cc:	push   ebp
  4191cd:	cmp    DWORD PTR ds:0x7140e925,0x42
  4191d4:	jno    0x419253
  4191d6:	dec    edi
  4191d7:	sbb    ebp,eax
  4191d9:	fwait
  4191da:	hlt    
  4191db:	jns    0x419171
  4191dd:	(bad)  
  4191df:	(bad)
  4191e2:	push   esi
  4191e3:	and    BYTE PTR [eax-0x44],dh
  4191e6:	mov    edx,0x2fbd4d29
  4191eb:	mov    edi,DWORD PTR [esi+eiz*2-0x6f]
  4191ef:	cli    
  4191f0:	jae    0x419224
  4191f2:	xor    cl,BYTE PTR [ebx+0x66]
  4191f5:	mov    al,ds:0x2d7c7e8f
  4191fa:	cmp    esp,DWORD PTR [eax+ecx*4-0x3010b32b]
  419201:	pushf  
  419202:	mov    dl,0x16
  419204:	shl    DWORD PTR [edi-0x77],1
  419207:	stc    
  419208:	and    bl,BYTE PTR [ebp-0x7665469a]
  41920e:	icebp  
  41920f:	sbb    al,0x28
  419211:	cmp    al,0xc1
  419213:	mov    esi,0xa650eab4
  419218:	dec    ebx
  419219:	jne    0x4191fc
  41921b:	(bad)  
  41921c:	icebp  
  41921d:	xor    ebp,edx
  41921f:	mov    ah,0x78
  419221:	adc    al,0xa9
  419223:	cmp    al,0xa3
  419225:	sbb    BYTE PTR [ebp+0x32ea6909],bl
  41922b:	jb     0x41923d
  41922d:	jno    0x419239
  41922f:	mov    esi,0x319baf6b
  419234:	push   esp
  419235:	imul   edi,DWORD PTR [esi],0x73
  419238:	addr16 fucomip st,st(2)
  41923b:	ins    DWORD PTR es:[edi],dx
  41923c:	hlt    
  41923d:	inc    ecx
  41923e:	ret    0xe7a7
  419241:	aas    
  419242:	fmul   st,st(3)
  419244:	mov    DWORD PTR [ecx+0x37],esi
  419247:	or     bh,BYTE PTR [esi+edi*4]
  41924a:	mov    ecx,0x3a5644b2
  41924f:	in     eax,dx
  419250:	in     al,dx
  419251:	rcl    DWORD PTR [ebp-0x77beb2f9],0x37
  419258:	cmp    ebx,DWORD PTR [ecx-0x18]
  41925b:	test   edi,edi
  41925d:	or     bh,BYTE PTR [edx-0x51]
  419260:	dec    esp
  419261:	test   DWORD PTR [eax+0x6b],esp
  419264:	sti    
  419265:	push   esp
  419266:	xchg   BYTE PTR [ebp+0xd],ah
  419269:	xchg   esi,eax
  41926a:	cmp    eax,0x4127c80a
  41926f:	xor    ebx,esi
  419271:	lea    edx,[esi-0x41]
  419274:	and    al,0xf4
  419276:	push   eax
  419277:	(bad)  
  419278:	lahf   
  419279:	cwde   
  41927a:	shl    dl,0x2b
  41927d:	(bad)  
  41927e:	leave  
  41927f:	les    esi,FWORD PTR [ecx-0x1e]
  419282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419283:	xchg   edi,eax
  419284:	mov    dl,0x51
  419286:	arpl   dx,sp
  419288:	int    0x5d
  41928a:	dec    ebp
  41928b:	mov    ds:0xf26db936,al
  419290:	pushw  ds
  419292:	call   0xc3c9:0x68f260c3
  419299:	fld    QWORD PTR [esi-0x603482bc]
  41929f:	adc    esi,DWORD PTR [ecx-0x20d0e3ae]
  4192a5:	popa   
  4192a6:	loopne 0x41923a
  4192a8:	push   eax
  4192a9:	cmp    bh,BYTE PTR [eax]
  4192ab:	stos   BYTE PTR es:[edi],al
  4192ac:	out    dx,al
  4192ad:	push   ebx
  4192ae:	pop    edx
  4192af:	dec    esi
  4192b0:	add    ebx,DWORD PTR [eax]
  4192b2:	rcr    BYTE PTR [eax],cl
  4192b4:	push   ebx
  4192b5:	std    
  4192b6:	loopne 0x419253
  4192b8:	pushf  
  4192b9:	addr16 push es
  4192bb:	sbb    eax,ecx
  4192bd:	stc    
  4192be:	test   BYTE PTR [ecx-0x27bf75ab],0xf1
  4192c5:	lds    ebp,FWORD PTR [ecx+0x6c3d872a]
  4192cb:	dec    esi
  4192cc:	add    eax,0x7f66cc06
  4192d1:	fnstenv [ecx]
  4192d3:	xor    BYTE PTR [ebx+0x19845f98],dh
  4192d9:	pop    edx
  4192da:	shl    BYTE PTR [esi+0x22642821],0xed
  4192e1:	adc    ebx,DWORD PTR [eax]
  4192e3:	and    DWORD PTR [ecx-0xf],esi
  4192e6:	test   BYTE PTR [esi+0x1c],ch
  4192e9:	dec    esp
  4192ea:	jecxz  0x41934a
  4192ec:	jae    0x419345
  4192ee:	lods   ax,WORD PTR ds:[esi]
  4192f0:	icebp  
  4192f1:	fnstsw WORD PTR ds:0x3bb802e7
  4192f7:	inc    esp
  4192f8:	das    
  4192f9:	arpl   bx,di
  4192fb:	xor    BYTE PTR [eax+esi*1-0x3c],0x96
  419300:	mov    ?,WORD PTR [ebp-0x4655105a]
  419306:	inc    ecx
  419307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419308:	inc    edi
  419309:	psraw  mm2,QWORD PTR ds:0x3cc09344
  419310:	push   eax
  419311:	(bad)  
  419312:	(bad)  
  419313:	push   esi
  419314:	mov    edx,ds
  419316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419317:	js     0x419302
  419319:	mov    ch,0x1
  41931b:	push   ebx
  41931c:	and    eax,0x12477e7f
  419321:	loop   0x41936a
  419323:	cdq    
  419324:	and    edi,DWORD PTR [ecx+eiz*2]
  419327:	adc    al,0x7a
  419329:	mov    bl,BYTE PTR [esi]
  41932b:	xor    al,0xb
  41932d:	psrlq  mm7,mm4
  419330:	lss    ebp,FWORD PTR [ecx]
  419333:	lods   al,BYTE PTR ds:[esi]
  419334:	jl     0x4192e7
  419336:	pmuludq mm6,mm5
  419339:	or     bh,ah
  41933b:	mov    ebx,0x3c513798
  419340:	loope  0x4192fd
  419342:	mov    esi,0x2b95250e
  419347:	mov    ds:0xeb9a2b73,eax
  41934c:	js     0x41935c
  41934e:	fstp   TBYTE PTR [edx+0x650cdd67]
  419354:	pop    eax
  419355:	xor    al,0xf4
  419357:	fsubr  QWORD PTR [edi]
  419359:	jle    0x4193b7
  41935b:	sub    ecx,DWORD PTR [edx]
  41935d:	icebp  
  41935e:	inc    edi
  41935f:	pop    es
  419360:	test   DWORD PTR gs:0x85c98c7,0x62f5c5e9
  41936b:	bound  edx,QWORD PTR [ebx]
  41936d:	imul   BYTE PTR [esi]
  41936f:	aam    0xce
  419371:	dec    eax
  419372:	(bad)  
  419373:	adc    al,0xe0
  419375:	arpl   si,cx
  419377:	push   edx
  419378:	xchg   BYTE PTR [ebx-0x76],bh
  41937b:	xor    eax,0x966814a1
  419380:	cdq    
  419381:	ins    DWORD PTR es:[edi],dx
  419382:	or     DWORD PTR [ebx+0x5a23996f],eax
  419388:	cld    
  419389:	fstp   DWORD PTR [ebp+ebp*8+0x36]
  41938d:	jae    0x4193b6
  41938f:	cld    
  419390:	aad    0x62
  419392:	xchg   DWORD PTR ds:0xaeed6f1e,ebx
  419398:	pop    esp
  419399:	inc    eax
  41939a:	lds    sp,DWORD PTR es:[esi-0x3b]
  41939f:	rcr    DWORD PTR [ebp-0x733a7324],cl
  4193a5:	mov    dh,0x6d
  4193a7:	pop    ss
  4193a8:	adc    DWORD PTR [ebp+0x5b041cc4],ebp
  4193ae:	hlt    
  4193af:	call   0xfaef96b2
  4193b4:	and    bl,BYTE PTR [edx+0x6a]
  4193b7:	inc    edx
  4193b8:	aad    0x77
  4193ba:	mov    bl,0x83
  4193bc:	out    dx,eax
  4193bd:	push   es
  4193be:	inc    ebx
  4193bf:	in     eax,dx
  4193c0:	pop    esi
  4193c1:	push   ds
  4193c2:	push   0xe
  4193c4:	or     DWORD PTR [ebx+0x246d727a],0x4b
  4193cb:	add    DWORD PTR [ebx-0x73ec98e],eax
  4193d1:	and    BYTE PTR [eax+edx*8+0x18d2716],ch
  4193d8:	shr    BYTE PTR [ecx-0x7f],cl
  4193db:	adc    BYTE PTR [ebp-0x1d],dh
  4193de:	xor    ebp,DWORD PTR [esi]
  4193e0:	popf   
  4193e1:	lock and cl,BYTE PTR [edi+0x63fd923f]
  4193e8:	shr    BYTE PTR [edx-0x61],0xea
  4193ec:	mov    cl,0x49
  4193ee:	aad    0xc9
  4193f0:	adc    BYTE PTR [ebp-0x5c87afe7],ah
  4193f6:	sbb    dl,BYTE PTR [esi+0x61]
  4193f9:	popf   
  4193fa:	mov    ecx,ds
  4193fc:	imul   ebx,DWORD PTR [eax+0x14],0xe5e16fdd
  419403:	dec    ebx
  419404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419405:	xor    bh,bl
  419407:	push   cs
  419408:	(bad)  
  41940a:	daa    
  41940b:	fsubr  st,st(0)
  41940d:	sbb    esi,DWORD PTR [ebp+0x7a3cb26b]
  419413:	xor    DWORD PTR [esi+0x2f],edx
  419416:	pop    ss
  419417:	fwait
  419418:	sti    
  419419:	dec    edi
  41941a:	int3   
  41941b:	pop    es
  41941c:	sub    ch,bh
  41941e:	inc    ebp
  41941f:	add    ch,BYTE PTR [edi-0x35]
  419422:	js     0x4193b6
  419424:	push   esi
  419425:	pop    ebp
  419427:	sub    al,0xeb
  419429:	and    al,0xf7
  41942b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41942c:	push   ss
  41942d:	xor    eax,0x42f89620
  419432:	sbb    eax,0xfcfe49fa
  419437:	in     al,0x2a
  419439:	(bad)  
  41943a:	lock sar BYTE PTR [edx],1
  41943d:	mov    BYTE PTR [edi+0x7cd0caaf],dh
  419443:	mov    BYTE PTR [edi+0x2a83e650],ch
  419449:	mov    al,ds:0xe538faf4
  41944e:	mov    ?,WORD PTR [ebp+0x6ae41304]
  419454:	jmp    0x9170:0x5f1835d3
  41945b:	(bad)
  41945e:	pop    edx
  41945f:	xlat   BYTE PTR ds:[ebx]
  419460:	lods   eax,DWORD PTR ds:[esi]
  419461:	ret    0x1fe
  419464:	push   esp
  419465:	push   0x51
  419467:	and    edx,DWORD PTR [edi+eax*1]
  41946a:	mov    dh,0x55
  41946c:	push   edi
  41946d:	fst    QWORD PTR [edx+ebp*2]
  419470:	mov    bl,0xdf
  419472:	notrack jmp DWORD PTR [edi-0x659b522f]
  419479:	pop    ebp
  41947a:	jne    0x4194ef
  41947c:	lds    ebp,FWORD PTR [edi+0x78104586]
  419482:	dec    edx
  419483:	push   ds
  419484:	mov    ebx,0x87b3a6f6
  419489:	mov    DWORD PTR [edi-0x3b21efa8],esi
  41948f:	mov    ebx,0xfa41ea7a
  419494:	jmp    0x419487
  419496:	add    BYTE PTR [ecx-0x427afc9b],bl
  41949c:	nop
  41949d:	int3   
  41949e:	xchg   ebp,edx
  4194a0:	mov    ch,0x7d
  4194a2:	xor    esi,eax
  4194a4:	jns    0x4194aa
  4194a6:	std    
  4194a7:	(bad)  
  4194a8:	fldenv [ecx]
  4194aa:	imul   esi,DWORD PTR [esi-0x46],0xffffffee
  4194ae:	cmc    
  4194af:	jmp    0xfdc1:0x5669420f
  4194b6:	adc    eax,0x89785f98
  4194bb:	sub    ebx,DWORD PTR [ecx+0x6e01f992]
  4194c1:	add    al,0x50
  4194c3:	push   ecx
  4194c4:	dec    edi
  4194c5:	xchg   edx,eax
  4194c6:	adc    al,0x93
  4194c8:	or     DWORD PTR [edx-0x7e],0x58
  4194cc:	retf   0xc47f
  4194cf:	sbb    dh,BYTE PTR [esi-0x5a]
  4194d2:	test   eax,0x7b342287
  4194d7:	test   eax,0x8806c346
  4194dd:	lahf   
  4194de:	sbb    dh,cl
  4194e0:	outs   dx,DWORD PTR ds:[esi]
  4194e1:	xchg   ecx,eax
  4194e2:	push   edx
  4194e3:	loope  0x41946d
  4194e5:	sbb    al,0xac
  4194e7:	xor    esi,ecx
  4194e9:	push   0x25
  4194eb:	pusha  
  4194ec:	int3   
  4194ed:	cs push cs
  4194ef:	shl    DWORD PTR [ebp+0x7dac3705],cl
  4194f5:	xor    eax,0x4cdbe511
  4194fa:	mov    ebx,DWORD PTR [ebx]
  4194fc:	stos   DWORD PTR es:[edi],eax
  4194fd:	stos   BYTE PTR es:[edi],al
  4194fe:	int    0x5e
  419500:	loope  0x4194f7
  419502:	jae    0x41952c
  419504:	fcomp  DWORD PTR [ebx+0x427e4b0]
  41950a:	xlat   BYTE PTR ds:[bx]
  41950c:	aam    0x2d
  41950e:	pushf  
  41950f:	mov    cl,BYTE PTR [ecx]
  419511:	hlt    
  419512:	lock jne 0x4194e0
  419515:	in     al,0xb6
  419517:	les    eax,FWORD PTR [edx+edi*4]
  41951a:	jp     0x4194a1
  41951c:	cdq    
  41951d:	gs in  eax,dx
  41951f:	push   es
  419520:	cmp    al,0xca
  419522:	retf   0xbb49
  419525:	jo     0x41954b
  419527:	fist   DWORD PTR [ecx+0x703ff617]
  41952d:	ret    
  41952e:	dec    eax
  41952f:	lods   al,BYTE PTR ds:[esi]
  419530:	mov    cl,BYTE PTR [ebx]
  419532:	push   edx
  419533:	loop   0x41954f
  419535:	fild   WORD PTR [edi]
  419537:	ror    BYTE PTR [edx+0x18],1
  41953a:	ficom  WORD PTR [ebx+0x70]
  41953d:	push   esi
  41953e:	mov    bl,0x9b
  419540:	push   ss
  419541:	ficom  DWORD PTR [edx-0x5a]
  419544:	lods   al,BYTE PTR ds:[esi]
  419545:	mov    bh,0xcf
  419547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419548:	out    0x55,al
  41954a:	pop    ds
  41954b:	test   BYTE PTR [ebx],0x82
  41954e:	xor    al,0xdc
  419550:	in     eax,0x30
  419552:	pop    ss
  419553:	or     ebx,eax
  419555:	mov    ebp,0xb3ad54e1
  41955a:	cs loopne 0x4195d8
  41955d:	popf   
  41955e:	xor    eax,0xddb3dc50
  419563:	aaa    
  419564:	jecxz  0x419508
  419566:	pop    edi
  419567:	stos   DWORD PTR es:[edi],eax
  419568:	mov    ds:0x974d7f12,eax
  41956d:	in     al,dx
  41956e:	inc    esi
  41956f:	das    
  419570:	ror    dl,0x28
  419573:	push   cs
  419574:	add    ch,dh
  419576:	push   eax
  419577:	adc    al,0x8d
  419579:	pop    eax
  41957a:	fidiv  WORD PTR [edx-0x5404aa97]
  419580:	mov    dh,0x6
  419582:	shl    BYTE PTR [edi],cl
  419584:	sbb    dh,BYTE PTR [edx+ebp*8-0x74]
  419588:	jns    0x419547
  41958a:	fs pop edx
  41958c:	aad    0x89
  41958e:	test   BYTE PTR [edi-0x69fdce0b],0xd
  419595:	jmp    0xe835:0x2dd31d9
  41959c:	adc    eax,0x1c022114
  4195a1:	or     ebx,DWORD PTR [esi+0x766fba9d]
  4195a7:	xchg   ebp,eax
  4195a8:	mov    ah,0x66
  4195aa:	das    
  4195ab:	xchg   BYTE PTR [ebx],bl
  4195ad:	aad    0x38
  4195af:	cmp    DWORD PTR [ecx],edi
  4195b1:	sar    DWORD PTR [eax+0x7412b1e8],1
  4195b7:	(bad)  
  4195b8:	loop   0x4195d0
  4195ba:	xor    eax,0x8ccd2452
  4195bf:	fidivr WORD PTR [esi]
  4195c1:	fdivr  DWORD PTR [eax-0xea456e9]
  4195c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195c8:	jno    0x4195f5
  4195ca:	scas   eax,DWORD PTR es:[edi]
  4195cb:	aam    0x32
  4195cd:	into   
  4195ce:	cs lahf 
  4195d0:	add    DWORD PTR [ecx+0x17],ecx
  4195d3:	sbb    DWORD PTR [ecx],ebp
  4195d5:	fs idiv al
  4195d8:	call   0x9594:0x8044d6bb
  4195df:	inc    DWORD PTR [edx]
  4195e1:	xor    edi,0x6c7664c3
  4195e7:	add    BYTE PTR [esp+ebp*8],al
  4195ea:	leave  
  4195eb:	sti    
  4195ec:	ret    
  4195ed:	imul   ebx,DWORD PTR [esi+0x41],0xe78f0a32
  4195f4:	mov    ds:0xd5b0c221,eax
  4195f9:	leave  
  4195fa:	inc    esi
  4195fb:	push   0x6d
  4195fd:	lds    ecx,FWORD PTR [edx+0xdd3eb75]
  419603:	sub    DWORD PTR [esi],ecx
  419605:	pusha  
  419606:	xchg   esi,eax
  419607:	jnp    0x419620
  419609:	mov    ebp,0x378d09fc
  41960e:	icebp  
  41960f:	loopne 0x419683
  419611:	mov    cl,0xc7
  419613:	test   BYTE PTR [eax+0x1e01b41a],ch
  419619:	cmp    eax,0x3ee3e863
  41961e:	sub    dl,0x86
  419621:	jnp    0x4195c2
  419623:	jbe    0x41969c
  419625:	and    esp,DWORD PTR [edx+0x75]
  419628:	inc    ebp
  419629:	push   0x38331f41
  41962e:	dec    edi
  41962f:	popf   
  419630:	sbb    ah,BYTE PTR [eax-0x536b46a8]
  419636:	mov    cs,WORD PTR ds:[edx+0x13]
  41963a:	imul   eax,ebx,0x6ba2fc45
  419640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419641:	sahf   
  419642:	add    esp,DWORD PTR [esi+0x28eab0c2]
  419648:	sti    
  419649:	(bad)  
  41964a:	mov    al,ds:0x72c9a128
  41964f:	or     ah,BYTE PTR [eax+0x8f1dfee]
  419655:	sti    
  419656:	sub    al,0xdf
  419658:	add    eax,0x402534bd
  41965d:	(bad)  
  41965e:	jle    0x419627
  419660:	or     DWORD PTR [esi+0x66],ecx
  419663:	xbegin 0xf884269
  419669:	mov    esi,0xd040ffd2
  41966e:	mov    eax,0xb5eed68c
  419673:	stos   DWORD PTR es:[edi],eax
  419674:	enter  0x3d43,0x12
  419678:	aaa    
  419679:	sub    ebx,DWORD PTR [edx+0x2f]
  41967c:	mov    gs,WORD PTR [edi+0x10]
  41967f:	xchg   dh,bl
  419681:	test   eax,0x946beeed
  419686:	sub    eax,0xcb618167
  41968b:	sbb    bh,dh
  41968d:	enter  0x3598,0x19
  419691:	jp     0x41970a
  419693:	adc    dh,dl
  419695:	jne    0x419628
  419697:	push   0xd
  419699:	add    BYTE PTR [esi+0x1a7e980e],dl
  41969f:	in     al,0x60
  4196a1:	mov    cl,0x3
  4196a3:	lahf   
  4196a4:	stos   BYTE PTR es:[edi],al
  4196a5:	jns    0x419663
  4196a7:	mov    eax,0x8683524a
  4196ac:	mov    eax,0xbcde83e7
  4196b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196b2:	mov    ecx,0x568ba7ee
  4196b7:	sar    eax,0xa7
  4196ba:	cmp    DWORD PTR [edi],eax
  4196bc:	test   DWORD PTR [esi-0x61],0x286da58e
  4196c3:	add    bl,BYTE PTR [edi-0x1b]
  4196c6:	cmp    eax,DWORD PTR [edi-0x10f760a8]
  4196cc:	outs   dx,DWORD PTR ds:[esi]
  4196cd:	push   ecx
  4196ce:	inc    DWORD PTR [ecx+ecx*2]
  4196d1:	push   ebx
  4196d2:	inc    eax
  4196d3:	jmp    0x419719
  4196d5:	pop    esp
  4196d6:	push   esp
  4196d7:	add    BYTE PTR ds:0x9184570e,al
  4196dd:	or     DWORD PTR [eax+0x3bb6cb15],edx
  4196e3:	add    bl,BYTE PTR [si]
  4196e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e7:	call   FWORD PTR [ecx-0x61ff52d8]
  4196ed:	dec    ecx
  4196ee:	mov    esp,0x973de011
  4196f3:	mov    ebx,0x3790151e
  4196f8:	sub    ebp,edi
  4196fa:	mov    edx,0x2f916f5c
  4196ff:	inc    ecx
  419700:	cwde   
  419701:	pop    es
  419702:	xor    eax,0x901b2d7a
  419707:	cmp    al,0xb4
  419709:	mov    ebx,edx
  41970b:	call   0x59ec:0x280a35df
  419712:	xchg   ecx,eax
  419713:	imul   esp,DWORD PTR [edi+0x1ffbb4c7],0x47
  41971a:	std    
  41971b:	jns    0x41978f
  41971d:	out    0x2b,eax
  41971f:	in     eax,0x3
  419721:	pop    ebp
  419722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419723:	and    al,0x29
  419725:	addr16 hlt 
  419727:	sub    eax,0xac32e87f
  41972c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41972d:	(bad)  
  41972e:	pop    ebp
  41972f:	lahf   
  419730:	addr16 xor al,0xcd
  419733:	outs   dx,BYTE PTR ds:[esi]
  419734:	jl     0x4196e1
  419736:	push   0xfffffff3
  419738:	push   edi
  419739:	jp     0x41979a
  41973b:	adc    eax,0x4ae71b72
  419740:	imul   edx,DWORD PTR [edx],0xa73ff4ae
  419746:	push   edx
  419747:	mov    BYTE PTR [ebx],al
  419749:	ins    DWORD PTR es:[edi],dx
  41974a:	adc    eax,0xa256812e
  41974f:	outs   dx,DWORD PTR ds:[esi]
  419750:	add    eax,0x7579d4e0
  419755:	dec    edi
  419756:	push   eax
  419757:	cmp    BYTE PTR [eax],bh
  419759:	pop    ebx
  41975a:	(bad)  
  41975b:	sub    esp,esp
  41975d:	push   0xc89b53c6
  419762:	jnp    0x41978d
  419764:	inc    ecx
  419765:	xlat   BYTE PTR ds:[ebx]
  419766:	dec    esp
  419767:	retf   0x3240
  41976a:	(bad)  
  41976b:	adc    eax,0x7374405c
  419770:	gs inc ebp
  419772:	test   BYTE PTR [esi-0x19],dl
  419775:	or     eax,0x2d46db7b
  41977a:	cmc    
  41977b:	loop   0x419733
  41977d:	mov    ecx,0x38b43763
  419782:	scas   al,BYTE PTR es:[edi]
  419783:	push   ecx
  419784:	mov    ecx,0x341fc8d8
  419789:	dec    ebx
  41978a:	xchg   BYTE PTR [eax+eiz*4-0x2a1f6a3b],dh
  419791:	cli    
  419792:	xchg   ecx,eax
  419793:	jg     0x41975b
  419795:	aas    
  419796:	out    dx,eax
  419797:	add    al,0x58
  419799:	div    BYTE PTR [eax-0x57]
  41979c:	fild   QWORD PTR fs:[eax]
  41979f:	mov    bh,0xde
  4197a1:	pop    edi
  4197a2:	fdivr  DWORD PTR [edx+esi*1-0x6cdf42ec]
  4197a9:	int    0x21
  4197ab:	xchg   ecx,eax
  4197ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ad:	cs jg  0x419820
  4197b0:	mov    BYTE PTR cs:[edx],al
  4197b3:	in     al,0x60
  4197b5:	bound  ecx,QWORD PTR [ebp-0xb]
  4197b8:	pop    es
  4197b9:	adc    DWORD PTR [edi+eiz*8],esp
  4197bc:	adc    ebx,ecx
  4197be:	sub    esi,DWORD PTR [ebp-0x768359cb]
  4197c4:	fmul   DWORD PTR [edi]
  4197c6:	imul   esp,edx,0x17
  4197c9:	pop    ecx
  4197ca:	pop    esp
  4197cb:	test   ecx,ecx
  4197cd:	xchg   esp,eax
  4197ce:	mov    bl,0x7
  4197d0:	sbb    BYTE PTR [esi+0x54],al
  4197d3:	inc    edx
  4197d4:	aad    0x39
  4197d6:	in     al,dx
  4197d7:	arpl   WORD PTR [ebx],sp
  4197d9:	mov    DWORD PTR [esp],ebx
  4197dc:	or     al,0xe9
  4197de:	mov    bh,0x54
  4197e0:	inc    edi
  4197e1:	(bad)  
  4197e2:	jae    0x4197b9
  4197e4:	cld    
  4197e5:	jns    0x41978b
  4197e7:	mov    eax,0xc2136eee
  4197ec:	mov    ds:0xdf889325,al
  4197f1:	loop   0x419870
  4197f3:	shl    DWORD PTR [esi+0x33b098f8],0x1e
  4197fa:	shl    DWORD PTR [edi-0x41],cl
  4197fd:	out    dx,eax
  4197fe:	mov    edi,0x25a6f645
  419803:	lea    esp,[edi-0x2f342548]
  419809:	xor    al,0xb7
  41980b:	cld    
  41980c:	int    0x1d
  41980e:	xchg   ebx,eax
  41980f:	gs pop ss
  419811:	popf   
  419812:	(bad)  
  419814:	or     al,0xe5
  419816:	call   DWORD PTR [ebx+0x7b579da]
  41981c:	pop    edx
  41981d:	test   BYTE PTR [eax+0x77],ch
  419820:	mov    esp,0x78962af2
  419825:	out    0x2,eax
  419827:	pop    ecx
  419828:	sub    eax,0xa992d86b
  41982d:	lahf   
  41982e:	ror    BYTE PTR [edx],cl
  419830:	push   esp
  419831:	repnz or edx,ecx
  419834:	add    al,0xe6
  419836:	fxch   st(4)
  419838:	jb     0x41982b
  41983a:	pop    DWORD PTR [edx]
  41983c:	pop    esi
  41983d:	push   esi
  41983e:	pop    esi
  41983f:	sbb    bl,bh
  419841:	dec    BYTE PTR [edx+0x26]
  419844:	dec    eax
  419845:	adc    al,0x9b
  419847:	sub    BYTE PTR [ebx+edx*1],bh
  41984a:	mov    ah,BYTE PTR [ebp-0x4d]
  41984d:	icebp  
  41984e:	dec    ecx
  41984f:	loope  0x419899
  419851:	(bad)  
  419852:	ja     0x419872
  419854:	push   edx
  419855:	pop    ecx
  419856:	sbb    DWORD PTR [esi],0xffffffbd
  419859:	test   dh,bh
  41985b:	push   eax
  41985c:	sub    bh,BYTE PTR [ebx+0x20]
  41985f:	xchg   ecx,eax
  419860:	inc    ecx
  419861:	imul   edi,ebx,0x7d
  419864:	or     al,0x44
  419866:	mov    es,WORD PTR [esp+ebp*2-0x40]
  41986a:	sub    al,0xe4
  41986c:	xlat   BYTE PTR ds:[ebx]
  41986d:	dec    eax
  41986e:	loop   0x4198c1
  419870:	jnp    0x419876
  419872:	xchg   esp,eax
  419873:	adc    DWORD PTR [ebx],esp
  419875:	shl    ebp,1
  419877:	sub    DWORD PTR [ecx-0x5e40a9a1],ebx
  41987d:	push   edi
  41987e:	les    edi,FWORD PTR [ebx+0xd65f532]
  419884:	xor    BYTE PTR [ecx],dl
  419886:	hlt    
  419887:	mov    al,0x31
  419889:	inc    ebp
  41988a:	mov    bh,0x7a
  41988c:	mov    ds:0x14ae8dcf,al
  419891:	and    DWORD PTR [ecx+eiz*4-0x383f83ba],esi
  419898:	pop    ecx
  419899:	and    al,0x6d
  41989b:	add    al,0xbc
  41989d:	js     0x4198b5
  41989f:	mul    DWORD PTR [ebp+0x2830c346]
  4198a5:	bound  eax,QWORD PTR [ebx+0x3b]
  4198a8:	mov    edx,0x87fa1224
  4198ad:	daa    
  4198ae:	xchg   esi,eax
  4198af:	xchg   ebp,eax
  4198b0:	jg     0x4198b4
  4198b2:	shr    ebp,0xbb
  4198b5:	cmp    al,0xaf
  4198b7:	mov    dl,0x80
  4198b9:	out    dx,al
  4198ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198bb:	jmp    0xcd8ac2a6
  4198c0:	adc    BYTE PTR [edi+0x731eeda2],dl
  4198c6:	push   ebp
  4198c7:	adc    ecx,ebp
  4198c9:	cmp    ch,BYTE PTR [esi+ebp*1-0x69]
  4198cd:	imul   ebp,DWORD PTR [esi+edi*1+0x69ae39cf],0x5da693bf
  4198d8:	push   0x3
  4198da:	sbb    DWORD PTR [edx+0xa],edi
  4198dd:	sbb    eax,0x2c903910
  4198e2:	push   ecx
  4198e3:	rcl    BYTE PTR [edi],cl
  4198e5:	adc    DWORD PTR [eax],ecx
  4198e7:	adc    DWORD PTR [ecx-0x7351289c],ebp
  4198ed:	lahf   
  4198ee:	in     eax,0x2
  4198f0:	in     eax,0x26
  4198f2:	test   al,0x85
  4198f4:	pop    ebx
  4198f5:	aad    0x7f
  4198f7:	daa    
  4198f8:	mov    ah,0xc7
  4198fa:	nop
  4198fb:	sbb    BYTE PTR [esi],dl
  4198fd:	bound  ebx,QWORD PTR [esi-0x15]
  419900:	inc    ebp
  419901:	test   eax,0x5cf3fb22
  419906:	cwde   
  419907:	inc    esi
  419908:	push   edi
  419909:	sub    eax,0x32d8fe3
  41990e:	mov    ds:0xe50df9ce,al
  419913:	(bad)  
  419914:	dec    ebp
  419915:	jne    0x4198f6
  419917:	out    dx,al
  419918:	pop    ebp
  419919:	xchg   esi,eax
  41991a:	mov    fs,edx
  41991c:	ja     0x4198be
  41991e:	call   0xb905:0x93b48aec
  419925:	out    0x9b,al
  419927:	and    al,0x82
  419929:	and    ecx,DWORD PTR ds:0xd24244a7
  41992f:	xchg   ecx,eax
  419930:	fld    DWORD PTR [ebx+0xb]
  419933:	dec    edi
  419934:	mov    ah,0xf1
  419936:	(bad)  
  419937:	push   ds
  419938:	jnp    0x41999e
  41993a:	push   ebp
  41993b:	je     0x4198d2
  41993d:	bound  ebx,QWORD PTR [ecx-0xe]
  419940:	inc    eax
  419941:	jne    0x419934
  419943:	add    al,0x94
  419945:	push   0xc38e19e
  41994a:	and    edi,esp
  41994c:	(bad)  
  41994d:	daa    
  41994e:	ds push eax
  419950:	push   ecx
  419951:	cwde   
  419952:	add    ecx,DWORD PTR [ebp-0x18]
  419955:	sti    
  419956:	mov    ?,WORD PTR [edi+0x2d]
  419959:	call   DWORD PTR [esi]
  41995b:	arpl   WORD PTR [ecx],si
  41995d:	in     eax,dx
  41995e:	and    eax,0xc14c6b5
  419963:	and    al,0x84
  419965:	adc    eax,0x8a37fcda
  41996a:	xchg   bl,ch
  41996c:	sbb    al,0xe5
  41996e:	cdq    
  41996f:	jnp    0x4199c4
  419971:	mov    BYTE PTR [edx-0x4433c673],bl
  419977:	(bad)  
  419978:	loope  0x419905
  41997a:	inc    ebp
  41997b:	fimul  DWORD PTR [ebx+0xe8b5481]
  419981:	or     al,0x8e
  419983:	sbb    ebx,0x3243d6d0
  419989:	cmp    edx,DWORD PTR [esp+ebx*2]
  41998c:	std    
  41998d:	int3   
  41998e:	scas   eax,DWORD PTR es:[edi]
  41998f:	test   BYTE PTR [edi-0x1c81b31e],al
  419995:	add    ah,BYTE PTR [esi]
  419997:	jp     0x4199d5
  419999:	sub    eax,0xcd68d0c5
  41999e:	mov    ecx,0xc730263e
  4199a3:	shr    DWORD PTR [ecx+0x118eba4f],cl
  4199a9:	ins    BYTE PTR es:[edi],dx
  4199aa:	(bad)  
  4199ab:	out    dx,eax
  4199ac:	lods   eax,DWORD PTR ds:[esi]
  4199ad:	popf   
  4199ae:	jno    0x419990
  4199b0:	hlt    
  4199b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b2:	pop    esp
  4199b3:	outs   dx,BYTE PTR ds:[esi]
  4199b4:	lock in al,0x2c
  4199b7:	pop    ss
  4199b8:	(bad)  
  4199b9:	js     0x4199a2
  4199bb:	iret   
  4199bc:	pusha  
  4199bd:	add    DWORD PTR [ebp+0x19],0x99794ff3
  4199c4:	(bad)
  4199c7:	fistp  DWORD PTR [edi-0x7dd02432]
  4199cd:	xor    DWORD PTR [ebx-0x14c39a14],esp
  4199d3:	test   eax,0x7820abd
  4199d8:	pop    ebx
  4199d9:	cmp    eax,0x10a7633b
  4199de:	hlt    
  4199df:	mov    fs,WORD PTR [ebx*1-0x7f184286]
  4199e6:	out    0x13,eax
  4199e8:	push   esp
  4199e9:	imul   eax,DWORD PTR [ebx],0xffffffcf
  4199ec:	xor    esi,ebp
  4199ee:	and    ecx,DWORD PTR [edi]
  4199f0:	jecxz  0x4199c0
  4199f2:	jp     0x419a0e
  4199f4:	loopne 0x4199ba
  4199f6:	dec    ebp
  4199f7:	sbb    dl,BYTE PTR [esi+0x53]
  4199fa:	inc    ebx
  4199fb:	mov    ecx,0xe0077634
  419a00:	clc    
  419a01:	and    edi,eax
  419a03:	cdq    
  419a04:	xor    BYTE PTR [eax+0x1],dh
  419a07:	inc    edi
  419a08:	jp     0x419a75
  419a0a:	(bad)
  419a0e:	and    eax,0x1fc2eff6
  419a13:	mov    ah,0x31
  419a15:	lahf   
  419a16:	xchg   ebx,eax
  419a17:	sub    al,0x89
  419a19:	cwde   
  419a1a:	aas    
  419a1b:	or     DWORD PTR [esi-0x46],ecx
  419a1e:	sub    bh,BYTE PTR [esi]
  419a20:	xchg   esi,eax
  419a21:	sub    DWORD PTR [ecx+0x7be8eaa9],edi
  419a27:	push   esi
  419a28:	mov    BYTE PTR [ebx],bh
  419a2a:	(bad)  [ebx+0x27]
  419a2d:	jmp    0x8f527b06
  419a32:	or     bh,bl
  419a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a35:	sbb    BYTE PTR [edx-0x2047b3c3],bh
  419a3b:	int    0x5
  419a3d:	bound  eax,QWORD PTR [ebx+0x4f]
  419a40:	add    ebx,DWORD PTR [esi-0x30a488cc]
  419a46:	dec    ebp
  419a47:	xchg   esi,eax
  419a48:	and    DWORD PTR [ebx+0x78],0x3e
  419a4c:	js     0x419ac5
  419a4e:	or     BYTE PTR [esi-0xb],bl
  419a51:	push   ebp
  419a52:	or     al,0x1f
  419a54:	jl     0x4199e7
  419a56:	cmp    BYTE PTR [eax+0x3],cl
  419a59:	mov    ds:0xfb063866,al
  419a5e:	ins    BYTE PTR es:[edi],dx
  419a5f:	xchg   edi,eax
  419a60:	cmp    eax,0xdd45ce4f
  419a65:	inc    ebx
  419a66:	jecxz  0x419a0b
  419a68:	push   ecx
  419a69:	xchg   ebx,eax
  419a6a:	mov    ecx,0x504bc342
  419a6f:	stc    
  419a70:	pop    ds
  419a71:	xchg   ebp,eax
  419a72:	test   eax,0xcfcf56b
  419a77:	inc    esp
  419a78:	adc    dl,BYTE PTR [ecx]
  419a7a:	jne    0x419aae
  419a7c:	xor    DWORD PTR [ecx-0x6e],0xa9fcfb29
  419a83:	popf   
  419a84:	bound  edi,QWORD PTR ds:0x36ff0529
  419a8a:	add    eax,0x9baf0da7
  419a8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a90:	iret   
  419a91:	dec    bp
  419a93:	sub    al,0x84
  419a95:	jmp    0xae03f124
  419a9a:	shr    ebp,0xa5
  419a9d:	and    ch,BYTE PTR ds:0x22b3a553
  419aa3:	ret    0xd860
  419aa6:	xor    esi,DWORD PTR [ecx+0x579c3e01]
  419aac:	xchg   esi,eax
  419aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419aae:	xor    DWORD PTR [edx],0xffffff87
  419ab1:	adc    ebx,eax
  419ab3:	mov    dl,0x7b
  419ab5:	gs in  eax,0xb7
  419ab8:	push   ecx
  419ab9:	sub    eax,0x1ac40ef1
  419abe:	inc    esp
  419abf:	xchg   esp,eax
  419ac0:	or     esi,eax
  419ac2:	imul   ecx,DWORD PTR [edx-0x23903f03],0x7
  419ac9:	ds inc ebp
  419acb:	(bad)
  419acf:	or     eax,0x9ddc3a84
  419ad4:	cmp    eax,0x667a3b96
  419ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ada:	imul   esi,esi,0xcc79498c
  419ae0:	outs   dx,BYTE PTR ds:[esi]
  419ae1:	in     eax,0xcd
  419ae3:	fidiv  WORD PTR [esi]
  419ae5:	mov    ebx,0x2f5bd0ce
  419aea:	dec    edi
  419aeb:	push   ss
  419aec:	inc    eax
  419aed:	shl    BYTE PTR [edi],1
  419aef:	enter  0x789e,0xa5
  419af3:	xor    DWORD PTR [esp+ecx*4-0x6e495181],esi
  419afa:	lock hlt 
  419afc:	imul   ebp,DWORD PTR [edi+0x50],0xffffffef
  419b00:	push   ebp
  419b01:	dec    ecx
  419b02:	xor    esp,edi
  419b04:	ins    DWORD PTR es:[edi],dx
  419b05:	jecxz  0x419b41
  419b07:	ds mov eax,ebp
  419b0a:	push   0xffffff82
  419b0c:	loopne 0x419ae9
  419b0e:	sub    ah,al
  419b10:	and    bl,BYTE PTR ds:0xfd9c868d
  419b16:	adc    DWORD PTR [ebx+0x25],eax
  419b19:	lea    esi,[ecx+0x3a]
  419b1c:	jmp    0xf2a3:0xe0ff273b
  419b23:	pop    ebx
  419b24:	xchg   ebp,eax
  419b25:	retf   0x6f2a
  419b28:	out    0x81,eax
  419b2a:	mov    WORD PTR [ebx-0x2f],ds
  419b2d:	aam    0x19
  419b2f:	jp     0x419acf
  419b31:	mov    bh,0x2e
  419b33:	lahf   
  419b34:	fstp   TBYTE PTR [edx-0x5233865d]
  419b3a:	mov    bl,BYTE PTR [bp+si]
  419b3d:	cmp    esi,DWORD PTR [edi+eax*8]
  419b40:	jge    0x419b95
  419b42:	rcr    BYTE PTR [ecx+0x4b],0x11
  419b46:	jl     0x419b12
  419b48:	dec    edx
  419b49:	lods   al,BYTE PTR ds:[esi]
  419b4a:	push   es
  419b4b:	sbb    DWORD PTR ds:0xd88d8bbc,esi
  419b51:	sbb    al,0x29
  419b53:	xchg   edi,eax
  419b54:	or     al,0x3d
  419b56:	ss xchg edx,eax
  419b58:	stos   BYTE PTR es:[edi],al
  419b59:	(bad)  
  419b5b:	or     edi,DWORD PTR [esi]
  419b5d:	das    
  419b5e:	cmp    eax,0x76728d0e
  419b63:	pop    ss
  419b64:	fsubr  QWORD PTR [eax-0x2431fa97]
  419b6a:	(bad)  
  419b6b:	fsub   QWORD PTR [edx+ebx*2+0x1f]
  419b6f:	fstp   TBYTE PTR [ebp+ebx*8+0x48]
  419b73:	loopne 0x419bd0
  419b75:	add    ah,0x2f
  419b78:	jne    0x419b7f
  419b7a:	dec    esp
  419b7b:	dec    esi
  419b7c:	ret    
  419b7d:	(bad)  
  419b7e:	adc    dl,BYTE PTR [esp+eax*8]
  419b81:	add    BYTE PTR [edi-0x6e],dh
  419b84:	dec    ebp
  419b85:	cwde   
  419b86:	int    0x83
  419b88:	popa   
  419b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b8a:	pop    ecx
  419b8b:	ss (bad) 
  419b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b8e:	pop    esp
  419b8f:	rcr    dl,0x9d
  419b92:	int3   
  419b93:	fs arpl ax,bx
  419b96:	inc    esi
  419b97:	popf   
  419b98:	pop    ss
  419b99:	dec    edx
  419b9a:	pop    ss
  419b9b:	add    eax,0xbac86bd7
  419ba0:	in     eax,0xc1
  419ba2:	sti    
  419ba3:	cmp    eax,DWORD PTR [eax]
  419ba5:	nop
  419ba6:	mov    ecx,0x5bffaa75
  419bab:	push   es
  419bac:	or     al,0xbb
  419bae:	push   esi
  419baf:	test   BYTE PTR [esi],ah
  419bb1:	xchg   edx,eax
  419bb2:	fs out dx,eax
  419bb4:	das    
  419bb5:	pusha  
  419bb6:	xor    ebx,ebx
  419bb8:	stos   BYTE PTR es:[edi],al
  419bb9:	sub    eax,0x14bbdb29
  419bbe:	clc    
  419bbf:	pop    ss
  419bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc1:	pop    esi
  419bc2:	out    dx,eax
  419bc3:	(bad)  
  419bc4:	cwde   
  419bc5:	jp     0x419bb2
  419bc7:	push   ebx
  419bc8:	mov    ?,WORD PTR [edi]
  419bca:	iret   
  419bcb:	inc    edx
  419bcc:	mov    DWORD PTR [ecx+0x3b7d23ed],ebx
  419bd2:	push   cs
  419bd3:	js     0x419be3
  419bd5:	sub    eax,DWORD PTR [edi-0x5]
  419bd8:	mov    BYTE PTR [ebp+0xc],0x1b
  419bdc:	jg     0x419bd6
  419bde:	scas   al,BYTE PTR es:[edi]
  419bdf:	aad    0xc
  419be1:	or     al,0xc6
  419be3:	add    DWORD PTR [ecx+0x71],0x6ed821a2
  419bea:	test   al,0x9f
  419bec:	xor    al,0xb8
  419bee:	mov    dh,0x72
  419bf0:	jne    0x419bd8
  419bf2:	out    0x58,eax
  419bf4:	pop    ecx
  419bf5:	call   0x3b3f3eaa
  419bfa:	xor    al,0x61
  419bfc:	xchg   ebp,eax
  419bfd:	sbb    BYTE PTR [ebx],dh
  419bff:	into   
  419c00:	mov    eax,ds:0x62bf0d4d
  419c05:	push   esp
  419c06:	imul   eax,ecx,0xfffffff2
  419c09:	push   edi
  419c0a:	jge    0x419c4d
  419c0c:	adc    al,0x17
  419c0e:	adc    dh,al
  419c10:	adc    BYTE PTR [ecx+eax*4+0x4c6dddf2],dh
  419c17:	sub    al,0xe2
  419c19:	mov    dl,0xdf
  419c1b:	push   eax
  419c1c:	cwde   
  419c1d:	imul   eax,DWORD PTR [edx+0x50],0x27
  419c21:	sbb    eax,DWORD PTR [edi-0x80]
  419c24:	(bad)  
  419c25:	ror    dh,0xb8
  419c28:	adc    ch,BYTE PTR [ebx]
  419c2a:	push   0x98c95277
  419c2f:	movlps QWORD PTR [esi-0x42246a03],xmm4
  419c36:	mov    fs,ebx
  419c38:	aam    0x43
  419c3a:	push   ebp
  419c3b:	push   esp
  419c3c:	cwde   
  419c3d:	out    dx,al
  419c3e:	xchg   BYTE PTR [ecx+edx*2],ch
  419c41:	mov    eax,0x7bc69ea3
  419c46:	rcl    DWORD PTR ds:[edi],1
  419c49:	fmul   DWORD PTR [edx+0xb8d32e9]
  419c4f:	xchg   esp,eax
  419c50:	pop    ecx
  419c51:	(bad)  
  419c52:	retf   0x5627
  419c55:	xchg   ebx,eax
  419c56:	mov    ds:0x9e963cfc,eax
  419c5b:	cmp    ebp,ebx
  419c5d:	call   0x4ec218ed
  419c62:	lods   al,BYTE PTR ds:[esi]
  419c63:	outs   dx,BYTE PTR ds:[esi]
  419c64:	push   ecx
  419c65:	inc    edi
  419c66:	adc    al,0x63
  419c68:	and    ah,ah
  419c6a:	js     0x419c0a
  419c6c:	push   eax
  419c6d:	cwde   
  419c6e:	ds mov al,0xa9
  419c71:	push   esi
  419c72:	rcl    DWORD PTR [edx-0x417ee959],cl
  419c78:	lods   al,BYTE PTR ds:[esi]
  419c79:	push   es
  419c7a:	outs   dx,DWORD PTR ds:[esi]
  419c7b:	add    ebx,DWORD PTR [eax+0x154fd301]
  419c81:	outs   dx,BYTE PTR ds:[esi]
  419c82:	mov    esi,0x7e56c869
  419c87:	mov    ebp,ebx
  419c89:	jae    0x419c9c
  419c8b:	mov    bh,0x4b
  419c8d:	fs xchg ebx,eax
  419c8f:	retf   0x3ec0
  419c92:	in     al,0x69
  419c94:	cwde   
  419c95:	pop    ds
  419c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c97:	jb     0x419cbc
  419c99:	jmp    0xa699:0x79dffd14
  419ca0:	push   edx
  419ca1:	(bad)  
  419ca2:	int    0x8c
  419ca4:	pop    eax
  419ca5:	pushf  
  419ca6:	mov    esi,0xd9978e55
  419cab:	fimul  DWORD PTR [edx]
  419cad:	add    edx,ebx
  419caf:	push   ds
  419cb0:	retf   0x153e
  419cb3:	das    
  419cb4:	pop    ecx
  419cb5:	push   ds
  419cb6:	out    dx,eax
  419cb7:	inc    ebx
  419cb8:	outs   dx,DWORD PTR ds:[esi]
  419cb9:	sahf   
  419cba:	mov    esp,0xcf85b883
  419cbf:	nop
  419cc0:	ss mov eax,0xce904ba7
  419cc6:	inc    ebp
  419cc7:	sbb    cl,BYTE PTR [eax-0x21d4473]
  419ccd:	out    0xe2,eax
  419ccf:	xor    ch,BYTE PTR ds:0x77268db6
  419cd5:	jecxz  0x419caa
  419cd7:	push   esp
  419cd8:	pop    ebp
  419cd9:	adc    edx,edx
  419cdb:	adc    al,0x2f
  419cdd:	jnp    0x419cc2
  419cdf:	sbb    BYTE PTR [edi-0x345536ab],dl
  419ce5:	popf   
  419ce6:	push   ebx
  419ce7:	sahf   
  419ce8:	js     0x419c74
  419cea:	les    esp,FWORD PTR [ecx+esi*4]
  419ced:	mov    eax,ds:0xfd196670
  419cf2:	or     edi,0xffffffb6
  419cf5:	mov    edi,0x8d13624e
  419cfa:	mov    bl,0xd3
  419cfc:	int3   
  419cfd:	gs aaa 
  419cff:	mov    WORD PTR [edi+0x6273c71c],cs
  419d05:	mov    BYTE PTR [edi+0x57a87a1c],cl
  419d0b:	lea    esi,[eax]
  419d0d:	and    eax,0xbd1bec19
  419d12:	sar    BYTE PTR [edx],0x6b
  419d15:	pop    esi
  419d16:	lock push ebx
  419d18:	pop    ecx
  419d19:	fist   DWORD PTR [eax-0x24aa4c00]
  419d1f:	mov    bh,0x29
  419d21:	scas   al,BYTE PTR es:[edi]
  419d22:	shl    DWORD PTR [ebx],cl
  419d24:	jle    0x419d96
  419d26:	test   bh,dl
  419d28:	test   DWORD PTR [ebp+0x18],ecx
  419d2b:	mov    ebp,DWORD PTR [esi-0x7f]
  419d2e:	jl     0x419d70
  419d30:	mov    bl,0x21
  419d32:	and    DWORD PTR [edx+0x5720a771],ebp
  419d38:	jl     0x419d22
  419d3a:	rol    DWORD PTR [edx-0x4f],0x84
  419d3e:	nop
  419d3f:	push   ebx
  419d40:	cmp    eax,0x7eb0cd8d
  419d45:	add    eax,0xb4c4e88d
  419d4a:	jb     0x419d36
  419d4c:	inc    edi
  419d4d:	jae    0x419cf2
  419d4f:	mov    ebp,0x5f5fee4f
  419d54:	jbe    0x419d79
  419d56:	inc    ecx
  419d57:	or     cl,BYTE PTR [ebx+esi*8+0x1a]
  419d5b:	and    DWORD PTR [ebx-0x71a50746],esi
  419d61:	mov    eax,ds:0x44930505
  419d66:	pop    eax
  419d67:	adc    ecx,DWORD PTR [edi-0x7d73b061]
  419d6d:	push   0x8c3e0b27
  419d72:	inc    DWORD PTR [edi-0x12eb8f15]
  419d78:	cli    
  419d79:	mov    bl,0x37
  419d7b:	mov    dl,0x76
  419d7d:	les    eax,FWORD PTR [ecx]
  419d7f:	out    0x47,al
  419d81:	sbb    ch,BYTE PTR [eax+esi*4+0x31]
  419d85:	jb     0x419df8
  419d87:	push   cs
  419d88:	inc    edi
  419d89:	adc    ah,BYTE PTR [edi+0x4f72b5f7]
  419d8f:	or     bl,BYTE PTR [esi+0x23368ecf]
  419d95:	mov    cl,0x48
  419d97:	dec    esi
  419d98:	jmp    0x419de8
  419d9a:	pop    esp
  419d9b:	fld    QWORD PTR [ebx]
  419d9d:	stc    
  419d9e:	adc    BYTE PTR [ebp+esi*2+0xaa7177f],ah
  419da5:	and    al,0xf7
  419da7:	pop    eax
  419da8:	sbb    ebx,eax
  419daa:	sahf   
  419dab:	aad    0xc1
  419dad:	retf   
  419dae:	jecxz  0x419d7a
  419db0:	inc    eax
  419db1:	fimul  WORD PTR [edx+0x133e87e]
  419db7:	shl    ebx,cl
  419db9:	movd   mm2,DWORD PTR [edx-0x42]
  419dbd:	ret    0x88db
  419dc0:	mov    ds:0x34b4ea7,eax
  419dc5:	jae    0x419dea
  419dc7:	xor    ecx,ebx
  419dc9:	in     al,0x4b
  419dcb:	into   
  419dcc:	add    al,0xd2
  419dce:	mov    edi,0xdd551959
  419dd3:	call   0x824e8ae1
  419dd8:	pop    ebx
  419dd9:	add    bh,BYTE PTR ds:0x7224725f
  419ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419de0:	push   0x66
  419de2:	icebp  
  419de3:	jg     0x419d9f
  419de5:	stos   BYTE PTR es:[edi],al
  419de6:	cmp    al,0x60
  419de8:	ret    0x50a
  419deb:	in     eax,dx
  419dec:	push   0x35
  419dee:	ins    DWORD PTR es:[edi],dx
  419def:	inc    eax
  419df0:	mov    al,0x70
  419df2:	rcr    edx,1
  419df4:	and    DWORD PTR [esi+0x1e398db1],ebx
  419dfa:	int    0x59
  419dfc:	adc    eax,0x177e01d6
  419e01:	inc    ebx
  419e02:	je     0x419e48
  419e04:	cs sbb al,0xec
  419e07:	outs   dx,BYTE PTR ds:[esi]
  419e08:	xor    al,0x1b
  419e0a:	test   BYTE PTR [esi-0x40b96b1a],0x1f
  419e11:	or     eax,0x53be5e27
  419e16:	pop    ds
  419e17:	dec    eax
  419e18:	mov    WORD PTR [ebx+0x6589b685],es
  419e1e:	mov    cl,0xf1
  419e20:	mov    ds:0x59f793f4,al
  419e25:	sub    BYTE PTR [ecx],0x3b
  419e28:	mov    ebx,0xb29dbeaf
  419e2d:	cmp    eax,0xd580b835
  419e32:	into   
  419e33:	mov    ebp,0xcec17b56
  419e38:	jbe    0x419e7d
  419e3a:	iret   
  419e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e3c:	and    al,ch
  419e3e:	dec    ebp
  419e3f:	repz or dh,al
  419e42:	xlat   BYTE PTR ds:[ebx]
  419e43:	xchg   ebx,eax
  419e44:	outs   dx,DWORD PTR ds:[esi]
  419e45:	push   0xcd523ab2
  419e4a:	test   DWORD PTR ds:0x7ef89fa7,edx
  419e50:	and    bl,BYTE PTR [edx-0x7f51f9de]
  419e56:	push   es
  419e57:	sbb    al,0x48
  419e59:	js     0x419eb5
  419e5b:	and    al,0x7
  419e5d:	jae    0x419de6
  419e5f:	xchg   esi,eax
  419e60:	call   0x5e14b3ae
  419e65:	and    eax,0x4090736b
  419e6a:	scas   eax,DWORD PTR es:[edi]
  419e6b:	jnp    0x419e90
  419e6d:	mov    dl,0x8
  419e6f:	shl    bh,1
  419e71:	sub    BYTE PTR [esi+0x1b],0x12
  419e75:	xor    bl,al
  419e77:	and    dl,BYTE PTR [edx-0x3e]
  419e7a:	pop    ebp
  419e7b:	pop    ebp
  419e7c:	or     ah,BYTE PTR [ecx]
  419e7e:	sbb    DWORD PTR [ebp-0x6e],esi
  419e81:	and    DWORD PTR [esi-0x4c4d111b],ecx
  419e87:	xchg   BYTE PTR [edx+eiz*2+0x1ef2dde3],dl
  419e8e:	(bad)  
  419e8f:	imul   esi,DWORD PTR [ecx],0x214656e6
  419e95:	xor    dh,ch
  419e97:	das    
  419e98:	out    dx,al
  419e99:	imul   ebx,DWORD PTR [edx+0x23],0xfefbe84d
  419ea0:	jmp    0x7a40:0x3be75df6
  419ea7:	lahf   
  419ea8:	sub    eax,0xc8bc3536
  419ead:	mov    edx,0x4873b9e7
  419eb2:	dec    ebp
  419eb3:	data16 outs dx,BYTE PTR ds:[esi]
  419eb5:	les    edx,FWORD PTR [edx+0x135ce06]
  419ebb:	mov    esp,0x287babf2
  419ec0:	loop   0x419f39
  419ec2:	inc    ebp
  419ec3:	jnp    0x419ea0
  419ec5:	and    esp,DWORD PTR [esi+ebx*2+0x6f]
  419ec9:	clc    
  419eca:	sti    
  419ecb:	push   0x69016c5b
  419ed0:	(bad)  
  419ed1:	sub    al,BYTE PTR [ebx+ebp*1-0x5499a938]
  419ed8:	aas    
  419ed9:	sub    BYTE PTR [eax+eax*8-0x4f556bca],dl
  419ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ee1:	jns    0x419f33
  419ee3:	or     bh,al
  419ee5:	push   ds
  419ee6:	xchg   esi,eax
  419ee7:	pop    esp
  419ee8:	outs   dx,BYTE PTR ds:[esi]
  419ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eea:	and    ah,0x13
  419eed:	inc    ebx
  419eee:	jge    0x419f13
  419ef0:	cwde   
  419ef1:	mov    WORD PTR [esi+0x26e65cfb],gs
  419ef7:	outs   dx,BYTE PTR ds:[esi]
  419ef8:	outs   dx,BYTE PTR ds:[esi]
  419ef9:	sbb    bh,BYTE PTR [edx+0x6bc43944]
  419eff:	pusha  
  419f00:	mov    eax,gs
  419f02:	sbb    BYTE PTR [edi],ch
  419f04:	ins    BYTE PTR es:[edi],dx
  419f05:	fst    DWORD PTR [esi-0x34acfd5]
  419f0b:	mov    dl,0x93
  419f0d:	jb     0x419ecf
  419f0f:	xchg   DWORD PTR [eiz*1+0x75eeb662],edi
  419f16:	lods   eax,DWORD PTR ds:[esi]
  419f17:	push   ebx
  419f18:	sar    ecx,cl
  419f1a:	pushf  
  419f1b:	imul   esp,DWORD PTR [ecx],0xffffff8e
  419f1e:	add    al,0x60
  419f20:	scas   al,BYTE PTR es:[edi]
  419f21:	icebp  
  419f22:	jae    0x419f92
  419f24:	(bad)  
  419f25:	leave  
  419f26:	sub    al,0x88
  419f28:	pop    esi
  419f29:	les    eax,FWORD PTR [esi+0x279b69bb]
  419f2f:	cdq    
  419f30:	pop    ebx
  419f31:	sub    ch,BYTE PTR [ebx+0x55]
  419f34:	daa    
  419f35:	or     ecx,edx
  419f37:	pop    ebx
  419f38:	jno    0x419efd
  419f3a:	cmc    
  419f3b:	(bad)  [ecx-0x15]
  419f3e:	fist   DWORD PTR [ecx+ebp*8+0x5caded3]
  419f45:	(bad)  
  419f46:	fbld   TBYTE PTR [esi]
  419f48:	pushf  
  419f49:	push   cs
  419f4a:	lods   eax,DWORD PTR ds:[esi]
  419f4b:	mov    ch,0x83
  419f4d:	pop    ss
  419f4e:	sub    edx,DWORD PTR [esi]
  419f50:	mov    DWORD PTR [ebx+0x36],esi
  419f53:	push   ebp
  419f54:	add    ebp,edi
  419f56:	enter  0x90a7,0xb5
  419f5a:	adc    edx,ebp
  419f5c:	cmp    esp,DWORD PTR [esi-0x10a0e6de]
  419f62:	add    al,0x38
  419f64:	or     DWORD PTR [eax+0x40],edx
  419f67:	test   BYTE PTR [edx+0x17926ba0],cl
  419f6d:	pusha  
  419f6e:	jle    0x419f43
  419f70:	jmp    0x6097:0x6dba8030
  419f77:	push   edx
  419f78:	push   ecx
  419f79:	les    ecx,FWORD PTR [esi+0x1357ab96]
  419f7f:	adc    al,0x77
  419f81:	sti    
  419f82:	or     cl,BYTE PTR [esi+0x4b89b670]
  419f88:	lock je 0x419f24
  419f8b:	sahf   
  419f8c:	inc    si
  419f8e:	aad    0x4a
  419f90:	aaa    
  419f91:	or     al,0x55
  419f93:	out    0x59,eax
  419f95:	data16 icebp 
  419f97:	sbb    al,0xf7
  419f99:	and    al,0xfd
  419f9b:	sub    al,dl
  419f9d:	sub    al,BYTE PTR [eax]
  419f9f:	mov    ebp,0x3d855698
  419fa4:	xchg   esi,eax
  419fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fa6:	addr16 fwait
  419fa8:	ret    
  419fa9:	pop    ebx
  419faa:	sti    
  419fab:	jbe    0x419f62
  419fad:	std    
  419fae:	mov    edi,0x9fcfa2ce
  419fb3:	mov    dl,0x5
  419fb5:	mov    dl,0x65
  419fb7:	or     al,0xd2
  419fb9:	cmp    eax,0x4906d201
  419fbe:	or     ch,bl
  419fc0:	push   edi
  419fc1:	(bad)  
  419fc3:	loop   0x419f5a
  419fc5:	push   cs
  419fc6:	sar    DWORD PTR [ebx+esi*1+0x5c],cl
  419fca:	adc    al,0x75
  419fcc:	xchg   esi,eax
  419fcd:	out    dx,al
  419fce:	push   ebp
  419fcf:	add    eax,0x264faa85
  419fd4:	pop    esi
  419fd5:	stos   BYTE PTR es:[edi],al
  419fd6:	inc    eax
  419fd7:	inc    ecx
  419fd8:	ds out 0x18,al
  419fdb:	xor    eax,0x19521f09
  419fe0:	cmp    eax,ebp
  419fe2:	pop    es
  419fe3:	lods   al,BYTE PTR ds:[esi]
  419fe4:	popf   
  419fe5:	ret    0x1d2b
  419fe8:	inc    esp
  419fe9:	test   esi,0xdf62b2ad
  419fef:	inc    edi
  419ff0:	mov    esp,0xe075b77
  419ff5:	sub    eax,0xd577280a
  419ffa:	in     eax,dx
  419ffb:	pcmpeqb mm7,QWORD PTR [ecx]
  419ffe:	fadd   QWORD PTR [ebp-0x77c9eaf8]
  41a004:	fiadd  DWORD PTR [esi-0x78a6b975]
  41a00a:	mov    ch,0xd2
  41a00c:	out    0x54,eax
  41a00e:	push   ecx
  41a00f:	pop    ds
  41a010:	ja     0x41a01d
  41a012:	hlt    
  41a013:	pop    ss
  41a014:	inc    eax
  41a015:	pop    edi
  41a016:	test   eax,0xc60c4834
  41a01b:	in     al,0xd3
  41a01d:	in     al,dx
  41a01e:	sbb    DWORD PTR [ebx],esi
  41a020:	sbb    ebp,edx
  41a022:	jecxz  0x419fe3
  41a024:	rcl    DWORD PTR [esi-0x3942d887],cl
  41a02a:	jno    0x419fb5
  41a02c:	sub    eax,0xf3ba2708
  41a031:	sahf   
  41a032:	cmc    
  41a033:	and    ah,0x1e
  41a036:	push   esi
  41a037:	add    esp,0xa547b648
  41a03d:	rcr    dh,cl
  41a03f:	stos   BYTE PTR es:[edi],al
  41a040:	push   ds
  41a041:	sbb    BYTE PTR [edi+edi*2-0x34],bh
  41a045:	ja     0x419fd3
  41a047:	add    bh,BYTE PTR [edx-0x4b3945db]
  41a04d:	mov    dh,0x58
  41a04f:	cmp    dl,ch
  41a051:	out    dx,ax
  41a053:	cmp    eax,0x783e5ae8
  41a058:	sbb    al,0xa5
  41a05a:	test   eax,0x4e362c41
  41a05f:	out    0xe8,al
  41a061:	js     0x41a0bf
  41a063:	aam    0x5f
  41a065:	xlat   BYTE PTR ds:[ebx]
  41a066:	bound  esi,QWORD PTR [ebp+0x200c21b3]
  41a06c:	test   DWORD PTR [ebx],ebp
  41a06e:	add    dl,BYTE PTR [eax+0x7952651b]
  41a074:	fst    QWORD PTR ds:0x1102726d
  41a07a:	ins    BYTE PTR es:[edi],dx
  41a07b:	pop    ebx
  41a07c:	xlat   BYTE PTR ds:[ebx]
  41a07d:	jge    0x41a0f3
  41a07f:	ror    BYTE PTR [ecx],0x8c
  41a082:	cs or  eax,0x5892675b
  41a088:	dec    ebx
  41a089:	mov    fs,eax
  41a08b:	and    DWORD PTR [ebx-0x1],edx
  41a08e:	sbb    DWORD PTR [esi-0x2b4d2143],ebx
  41a094:	push   ds
  41a095:	pop    esp
  41a096:	jbe    0x41a021
  41a098:	jnp    0x41a114
  41a09a:	push   ecx
  41a09b:	push   ebx
  41a09c:	mov    ebx,0x701e2dad
  41a0a1:	test   BYTE PTR [edi],dl
  41a0a3:	adc    edx,eax
  41a0a5:	push   eax
  41a0a6:	cld    
  41a0a7:	int    0x1c
  41a0a9:	(bad)  
  41a0aa:	hlt    
  41a0ab:	in     al,dx
  41a0ac:	xchg   ebp,eax
  41a0ad:	xor    DWORD PTR [ebp-0x65],edx
  41a0b0:	mov    ah,0x97
  41a0b2:	int3   
  41a0b3:	sub    al,BYTE PTR [edi+0x51f766b6]
  41a0b9:	sub    BYTE PTR [edx+0xe],cl
  41a0bc:	push   ds
  41a0bd:	mov    ebp,0x3b2d495e
  41a0c2:	sbb    eax,0xd244c2d5
  41a0c7:	pusha  
  41a0c8:	sub    eax,0xce053a8a
  41a0cd:	mov    bh,0x48
  41a0cf:	pushf  
  41a0d0:	jle    0x41a0b2
  41a0d2:	dec    esi
  41a0d3:	jne    0x41a0f9
  41a0d5:	mul    DWORD PTR [ecx+ecx*2-0x33bba2bc]
  41a0dc:	ret    
  41a0dd:	jne    0x41a0cc
  41a0df:	add    eax,0xfbacfb19
  41a0e4:	fistp  WORD PTR [esi-0x3a2e1c4b]
  41a0ea:	push   edi
  41a0eb:	pop    esi
  41a0ec:	and    ch,BYTE PTR [edi+0x48]
  41a0ef:	xor    ebx,DWORD PTR [edi+0x17]
  41a0f2:	and    BYTE PTR [ebp+0x40],bh
  41a0f5:	test   bh,al
  41a0f7:	das    
  41a0f8:	adc    eax,0xbedfcbf6
  41a0fd:	pop    eax
  41a0fe:	push   ss
  41a0ff:	or     eax,0x6228401b
  41a104:	jmp    0x41a146
  41a106:	outs   dx,DWORD PTR ds:[esi]
  41a107:	ret    
  41a108:	into   
  41a109:	mul    DWORD PTR [eax+eiz*1+0x10aadd75]
  41a110:	(bad)  
  41a111:	ins    DWORD PTR es:[edi],dx
  41a112:	gs (bad) 
  41a114:	in     al,dx
  41a115:	daa    
  41a116:	imul   ebx,DWORD PTR [esi+eiz*4],0xd79a7419
  41a11d:	(bad)  
  41a11e:	push   ecx
  41a11f:	cmp    BYTE PTR [ebp+0x47a98ea6],dh
  41a125:	and    DWORD PTR [esp+edi*1+0x51],esp
  41a129:	fstp   QWORD PTR [ebx]
  41a12b:	sub    DWORD PTR [edx+eiz*2],0xe77d8559
  41a132:	test   al,0x62
  41a134:	mov    bh,0x12
  41a136:	ror    edi,0xa0
  41a139:	(bad)  
  41a13b:	imul   esi,ebp,0xfffffff7
  41a13e:	or     BYTE PTR [ebp-0x5f4b1cf4],al
  41a144:	aaa    
  41a145:	icebp  
  41a146:	mov    edx,0xad23f54b
  41a14b:	push   ds
  41a14c:	pop    edx
  41a14d:	dec    edi
  41a14e:	jge    0x41a12b
  41a150:	inc    ebx
  41a151:	pop    es
  41a152:	pop    ebx
  41a153:	and    DWORD PTR [ecx+0x0],0xfffffff9
  41a157:	mov    fs,eax
  41a159:	and    BYTE PTR [ecx+0x60],bl
  41a15c:	adc    eax,0x7ff58a23
  41a161:	and    al,0xf5
  41a163:	jmp    0x52e6d13
  41a168:	pop    eax
  41a169:	addr16 xchg esp,eax
  41a16b:	mov    ah,0x9f
  41a16d:	mov    gs,WORD PTR [esi]
  41a16f:	sub    al,0xd
  41a171:	shl    DWORD PTR [ebx+0x12],1
  41a174:	push   edi
  41a175:	addr16 jg 0x41a1a2
  41a178:	cmp    DWORD PTR ds:0x5a1c4919,0xb
  41a17f:	pop    ebp
  41a180:	arpl   WORD PTR [ebp+0x1b],di
  41a183:	dec    DWORD PTR [ebp-0x70]
  41a186:	mov    esp,0xddabd146
  41a18b:	aas    
  41a18c:	mov    ebp,0xca129536
  41a191:	xchg   BYTE PTR [ebx+0x489504ac],al
  41a197:	mov    esp,0xe5b5427
  41a19c:	retf   0x4d99
  41a19f:	cmp    ah,BYTE PTR gs:[ebx+0x676ef259]
  41a1a6:	xor    dl,bh
  41a1a8:	es push esi
  41a1aa:	mov    al,0x87
  41a1ac:	dec    eax
  41a1ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ae:	retf   0xec64
  41a1b1:	cmp    al,0x71
  41a1b3:	xor    al,0xc1
  41a1b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b6:	push   ebx
  41a1b7:	inc    ebx
  41a1b8:	(bad)  [ebx+0x73fd0a9c]
  41a1be:	jg     0x41a157
  41a1c0:	jno    0x41a1ab
  41a1c2:	xchg   esi,eax
  41a1c3:	hlt    
  41a1c4:	sub    eax,0x2fecd538
  41a1c9:	call   0x2c155e14
  41a1ce:	ret    
  41a1cf:	sbb    eax,0x63d8fa27
  41a1d4:	add    dl,BYTE PTR [ecx+ecx*2+0x30]
  41a1d8:	pop    ebp
  41a1d9:	jmp    0x2c63:0xb4c1626b
  41a1e0:	ins    BYTE PTR es:[edi],dx
  41a1e1:	fisubr DWORD PTR [edx]
  41a1e3:	cmp    bh,ch
  41a1e5:	pop    ebp
  41a1e6:	lods   eax,DWORD PTR cs:[esi]
  41a1e8:	mov    ebx,0xe8b0c6ce
  41a1ed:	push   ebx
  41a1ee:	xlat   BYTE PTR ds:[ebx]
  41a1ef:	ss ror bh,0x8a
  41a1f3:	push   ebp
  41a1f4:	xor    bh,dh
  41a1f6:	pop    eax
  41a1f7:	lods   eax,DWORD PTR ds:[esi]
  41a1f8:	dec    ebp
  41a1f9:	lds    ecx,FWORD PTR [edi]
  41a1fb:	xor    BYTE PTR [ebp-0x67e45e31],cl
  41a201:	icebp  
  41a202:	adc    ebx,esi
  41a204:	enter  0x227e,0xac
  41a208:	sbb    BYTE PTR [eax],dl
  41a20a:	add    cl,bl
  41a20c:	aam    0x71
  41a20e:	or     DWORD PTR [eax-0x85a588b],eax
  41a214:	repnz aad 0x1
  41a217:	int    0x5a
  41a219:	ds xor ah,ah
  41a21c:	add    al,0xfe
  41a21e:	and    BYTE PTR [edi],ah
  41a220:	clc    
  41a221:	sbb    BYTE PTR [eax+edx*1+0xc3f23de],0x7e
  41a229:	icebp  
  41a22a:	sbb    DWORD PTR [edx+0x4886c11f],eax
  41a230:	fcom   QWORD PTR [ebp+0x2c]
  41a233:	pop    esp
  41a234:	mov    al,0x93
  41a236:	fwait
  41a237:	inc    ebx
  41a238:	std    
  41a239:	add    eax,0xe014cf8f
  41a23e:	stc    
  41a23f:	lods   eax,DWORD PTR ds:[esi]
  41a240:	pop    edi
  41a241:	inc    ecx
  41a242:	ss mov bl,0xa4
  41a245:	(bad)  
  41a246:	nop
  41a247:	dec    ebp
  41a248:	adc    eax,0xdf310085
  41a24d:	adc    BYTE PTR [eax-0x9],cl
  41a250:	or     eax,0xad48aaba
  41a255:	data16 xor al,0x6
  41a258:	or     al,0xf8
  41a25a:	out    0x63,al
  41a25c:	lods   eax,DWORD PTR ds:[esi]
  41a25d:	push   ebp
  41a25e:	xchg   ebp,eax
  41a25f:	xor    al,0x24
  41a261:	jno    0x41a25f
  41a263:	or     eax,DWORD PTR [esi+0x7b]
  41a266:	dec    eax
  41a267:	out    0xf9,eax
  41a269:	cmp    DWORD PTR [edx-0x483b9eea],ebp
  41a26f:	mov    esi,0x675b942e
  41a274:	pushf  
  41a275:	scas   eax,DWORD PTR es:[edi]
  41a276:	sub    eax,DWORD PTR [edx+0x624c2b50]
  41a27c:	sar    esi,1
  41a27e:	fidivr DWORD PTR [ebx-0x1e]
  41a281:	xchg   edi,eax
  41a282:	pop    ss
  41a283:	xchg   ebp,eax
  41a284:	lds    ebp,FWORD PTR [edx]
  41a286:	ja     0x41a2ee
  41a288:	push   eax
  41a289:	or     DWORD PTR [edx+0x2170b268],0xc58b8227
  41a293:	out    0x15,eax
  41a295:	dec    edi
  41a296:	cwde   
  41a297:	aam    0x33
  41a299:	xor    BYTE PTR [esp+ebx*2-0x1e2c414d],ch
  41a2a0:	call   0x9d58:0x3d004336
  41a2a7:	neg    eax
  41a2a9:	dec    edx
  41a2aa:	test   BYTE PTR [esi+eax*8-0x36],ah
  41a2ae:	mov    al,ds:0x660d6db0
  41a2b3:	push   edi
  41a2b4:	add    eax,0x487e82d5
  41a2b9:	xchg   ebp,eax
  41a2ba:	dec    eax
  41a2bb:	sar    dh,1
  41a2bd:	test   BYTE PTR [ebx],ch
  41a2bf:	xchg   esp,eax
  41a2c0:	sbb    esi,DWORD PTR [ebx]
  41a2c2:	push   0xffffffaa
  41a2c4:	dec    ebx
  41a2c5:	push   ebp
  41a2c6:	dec    ecx
  41a2c7:	outs   dx,BYTE PTR ds:[esi]
  41a2c8:	inc    eax
  41a2c9:	inc    eax
  41a2ca:	test   ecx,edi
  41a2cc:	or     ecx,DWORD PTR [edi+0x21c1a183]
  41a2d2:	test   al,0x7e
  41a2d4:	xchg   ebp,eax
  41a2d5:	popf   
  41a2d6:	cwde   
  41a2d7:	xlat   BYTE PTR ds:[ebx]
  41a2d8:	inc    edi
  41a2d9:	je     0x41a346
  41a2db:	inc    DWORD PTR [edi]
  41a2dd:	xor    DWORD PTR [ecx+0x69abd5c5],esp
  41a2e3:	pop    eax
  41a2e4:	pop    esp
  41a2e5:	and    cl,ah
  41a2e7:	cmp    eax,DWORD PTR [ebx+ebp*2]
  41a2ea:	jmp    FWORD PTR [edx-0x7ce8f89c]
  41a2f0:	outs   dx,DWORD PTR ds:[esi]
  41a2f1:	adc    dh,ch
  41a2f3:	or     BYTE PTR [ecx-0x1e7ef4ed],ch
  41a2f9:	and    ebp,DWORD PTR [edx+0x23]
  41a2fc:	xchg   edi,eax
  41a2fd:	and    al,0x56
  41a2ff:	in     eax,dx
  41a300:	sbb    DWORD PTR [edx-0x42],edx
  41a303:	jno    0x41a2ba
  41a305:	xor    dh,BYTE PTR [eax]
  41a307:	push   0x9ed089f1
  41a30c:	fs loope 0x41a2ac
  41a30f:	dec    ebx
  41a310:	mov    dh,BYTE PTR [edx+0x2fbbf7a]
  41a316:	leave  
  41a317:	popf   
  41a318:	xor    edx,DWORD PTR [edi+0x54f2957b]
  41a31e:	mov    cl,0x9b
  41a320:	mov    ch,0xa4
  41a322:	inc    ebp
  41a323:	cmp    esp,ebp
  41a325:	icebp  
  41a326:	mov    eax,0xc535b5d9
  41a32b:	in     eax,dx
  41a32c:	clc    
  41a32d:	test   al,0x84
  41a32f:	(bad)  
  41a330:	sub    edi,DWORD PTR [edi-0xd9cc664]
  41a336:	mov    edx,0x22282b82
  41a33b:	pop    edi
  41a33c:	inc    eax
  41a33d:	mov    esp,0xf7bd074f
  41a342:	mov    dh,0xae
  41a344:	or     BYTE PTR [ebx-0x7aa6e1d9],ch
  41a34a:	pop    DWORD PTR [ebx]
  41a34c:	sub    eax,0xfd3d5a03
  41a351:	in     eax,0xe8
  41a353:	jecxz  0x41a2f0
  41a355:	mov    ch,0x2c
  41a357:	adc    edi,edx
  41a359:	jle    0x41a317
  41a35b:	fstp   TBYTE PTR [edx-0x51981ac4]
  41a361:	test   al,0xb3
  41a363:	cs jbe 0x41a3cb
  41a366:	and    edx,ebx
  41a368:	jge    0x41a3d9
  41a36a:	push   ebx
  41a36b:	cmp    DWORD PTR [eax+0x76099deb],edi
  41a371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a372:	adc    al,0x87
  41a374:	mov    ds:0x488cf6ca,al
  41a379:	shl    DWORD PTR cs:[esi],1
  41a37c:	jg     0x41a342
  41a37e:	adc    ebp,edi
  41a380:	into   
  41a381:	pusha  
  41a382:	ret    0x68f2
  41a385:	sub    DWORD PTR [eax+esi*8],0x30247c2f
  41a38c:	mov    al,0xdb
  41a38e:	lock jno 0x41a34a
  41a391:	jp     0x41a342
  41a393:	pop    ebx
  41a394:	lea    ecx,[ebx]
  41a396:	mov    ds:0x5d663cb1,eax
  41a39b:	mov    dh,0xaf
  41a39d:	imul   esi,DWORD PTR [edi-0x21c98c76],0xffffff8a
  41a3a4:	pop    ebp
  41a3a5:	cmp    eax,0x237ddd2e
  41a3aa:	loope  0x41a348
  41a3ac:	stc    
  41a3ad:	fwait
  41a3ae:	call   0xc973cdfb
  41a3b3:	fst    DWORD PTR [ebx+0x5c]
  41a3b6:	pop    edi
  41a3b7:	or     BYTE PTR [ebx+0x2f],al
  41a3ba:	add    al,0x53
  41a3bc:	jl     0x41a3b7
  41a3be:	inc    ebx
  41a3bf:	lds    ecx,FWORD PTR [eax+ebp*8]
  41a3c2:	mov    edi,0x3cf4054d
  41a3c7:	(bad)  
  41a3c8:	push   cs
  41a3c9:	and    bl,bh
  41a3cb:	xchg   esp,eax
  41a3cc:	test   al,0xa3
  41a3ce:	xchg   esi,eax
  41a3cf:	xchg   ebx,eax
  41a3d0:	sbb    BYTE PTR [ecx+edx*8],cl
  41a3d3:	js     0x41a3ba
  41a3d5:	sti    
  41a3d6:	sti    
  41a3d7:	and    BYTE PTR [esi+0x1fd54ae8],ah
  41a3dd:	pop    ss
  41a3de:	mov    esp,0x794b6a7e
  41a3e3:	add    BYTE PTR [edx],dh
  41a3e5:	jns    0x41a41d
  41a3e7:	repnz icebp 
  41a3e9:	outs   dx,DWORD PTR ds:[esi]
  41a3ea:	scas   eax,DWORD PTR es:[edi]
  41a3eb:	mov    bh,0xf0
  41a3ed:	aad    0xdf
  41a3ef:	adc    DWORD PTR [edi+0x5f],0xffffffa9
  41a3f3:	mov    al,0xc7
  41a3f5:	mov    cl,0x98
  41a3f7:	jnp    0x41a3d6
  41a3f9:	push   0xf09f1e30
  41a3fe:	sbb    eax,0xe33cdc75
  41a403:	sub    DWORD PTR [esi+0x63],0x84fe9125
  41a40a:	ret    
  41a40b:	xchg   edx,eax
  41a40c:	jnp    0x41a3f1
  41a40e:	int    0x4a
  41a410:	scas   al,BYTE PTR es:[edi]
  41a411:	xchg   edx,eax
  41a412:	bound  ecx,QWORD PTR [ebp+0x6fc09db3]
  41a418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a419:	cmp    BYTE PTR [ecx],ch
  41a41b:	int3   
  41a41c:	mov    bl,0x9b
  41a41e:	cli    
  41a41f:	bound  ecx,QWORD PTR ds:0xd89f4e99
  41a425:	stos   DWORD PTR es:[edi],eax
  41a426:	inc    ebx
  41a427:	mov    BYTE PTR [ebx+edi*2-0x5e1b87cf],bl
  41a42e:	and    al,0xa6
  41a430:	push   edx
  41a431:	inc    ebx
  41a432:	xchg   edx,eax
  41a433:	loopne 0x41a4ae
  41a435:	stc    
  41a436:	xchg   edx,eax
  41a437:	(bad)  
  41a438:	out    0x4a,al
  41a43a:	sbb    dl,BYTE PTR [ebx+0x22f81db4]
  41a440:	ret    0xa72
  41a443:	test   eax,0xca59dc44
  41a448:	mov    ch,0x8b
  41a44a:	hlt    
  41a44b:	xlat   BYTE PTR ds:[ebx]
  41a44c:	stos   BYTE PTR es:[edi],al
  41a44d:	mov    ch,ah
  41a44f:	add    edi,DWORD PTR [ebx+eiz*2-0x24cb1528]
  41a456:	dec    esi
  41a457:	popa   
  41a458:	das    
  41a459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a45a:	sub    al,0x6
  41a45c:	inc    eax
  41a45d:	or     BYTE PTR [ebx+0x37],0x11
  41a461:	adc    DWORD PTR [esi+0xec8dfad],0x22
  41a468:	mov    cl,0x76
  41a46a:	mov    esp,0xe8fcab4d
  41a46f:	repz sbb BYTE PTR [edi+0x2b],0x56
  41a474:	in     eax,0xd5
  41a476:	push   ss
  41a477:	les    edi,FWORD PTR [edi]
  41a479:	inc    edx
  41a47a:	xor    al,0x8d
  41a47c:	mov    dh,dh
  41a47e:	xchg   edi,eax
  41a47f:	inc    ebx
  41a480:	jle    0x41a408
  41a482:	(bad)  
  41a483:	jmp    0xd6018e59
  41a488:	push   es
  41a489:	jl     0x41a4fb
  41a48b:	push   edi
  41a48c:	jg     0x41a4d6
  41a48e:	icebp  
  41a48f:	inc    ebp
  41a490:	adc    al,0xc5
  41a492:	(bad)  
  41a495:	add    eax,0xab7beb99
  41a49a:	adc    eax,DWORD PTR [ecx+0x5825df83]
  41a4a0:	rcl    DWORD PTR [eax],cl
  41a4a2:	or     al,0xa4
  41a4a4:	pop    esp
  41a4a5:	pop    esi
  41a4a6:	test   eax,esi
  41a4a8:	xor    esp,esi
  41a4aa:	outs   dx,BYTE PTR ds:[esi]
  41a4ab:	(bad)  
  41a4ac:	and    eax,0x735fd1c9
  41a4b1:	addr16 (bad) 
  41a4b4:	push   edi
  41a4b5:	imul   BYTE PTR [ecx]
  41a4b7:	repz retf 
  41a4b9:	cmp    esp,DWORD PTR [eax]
  41a4bb:	aas    
  41a4bc:	xlat   BYTE PTR ds:[ebx]
  41a4bd:	inc    ecx
  41a4be:	mov    cl,0xb2
  41a4c0:	and    BYTE PTR [ebp+0xab69efc],bl
  41a4c6:	push   esp
  41a4c7:	ret    
  41a4c8:	inc    ecx
  41a4c9:	ins    DWORD PTR es:[edi],dx
  41a4ca:	jnp    0x41a45d
  41a4cc:	jl     0x41a53d
  41a4ce:	mov    eax,ds:0x1518a4c6
  41a4d3:	fadd   QWORD PTR gs:[ebp+0x28]
  41a4d7:	or     ebp,eax
  41a4d9:	mov    cs,WORD PTR [ebx]
  41a4db:	adc    DWORD PTR [ebp-0x22],ecx
  41a4de:	and    ecx,DWORD PTR [eax-0x3b05882f]
  41a4e4:	sbb    cl,dl
  41a4e6:	lds    edx,FWORD PTR [ebx+0x6b]
  41a4e9:	outs   dx,BYTE PTR ds:[esi]
  41a4ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4eb:	sub    eax,0xfa8e7964
  41a4f0:	pop    ebp
  41a4f1:	pop    ebp
  41a4f2:	mov    al,0xf8
  41a4f4:	dec    ecx
  41a4f5:	mov    ebp,DWORD PTR [ebp+0x59]
  41a4f8:	jae    0x41a553
  41a4fa:	mov    eax,ds:0x194ce64c
  41a4ff:	pop    ebx
  41a500:	mov    DWORD PTR [edi],edx
  41a502:	stos   BYTE PTR es:[edi],al
  41a503:	(bad)  
  41a504:	mov    esi,0xdfc3abf9
  41a509:	shl    BYTE PTR [ecx+0x4d],cl
  41a50c:	(bad)  
  41a50d:	(bad)  
  41a50e:	push   edx
  41a50f:	jb     0x41a585
  41a511:	or     al,0x33
  41a513:	test   al,0xce
  41a515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a516:	aad    0x92
  41a518:	fadd   DWORD PTR [edi-0x7f08558e]
  41a51e:	dec    edi
  41a51f:	and    al,0xff
  41a521:	out    0x99,eax
  41a523:	jecxz  0x41a4c3
  41a525:	or     eax,0xec47e12f
  41a52a:	(bad)
  41a52d:	jp     0x41a4c8
  41a52f:	adc    BYTE PTR [ebx-0x43],bh
  41a532:	push   esp
  41a533:	repz sub eax,0xf7834f40
  41a539:	add    al,0x23
  41a53b:	inc    ecx
  41a53c:	mov    al,0x30
  41a53e:	xchg   ebp,eax
  41a53f:	jge    0x41a569
  41a541:	sbb    eax,0xce67d947
  41a546:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a548:	and    DWORD PTR [ebx+0x7c],ebx
  41a54b:	inc    eax
  41a54c:	popa   
  41a54d:	push   ss
  41a54e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a54f:	aas    
  41a550:	test   esp,esp
  41a552:	ins    BYTE PTR es:[edi],dx
  41a553:	sti    
  41a554:	or     al,0xb2
  41a556:	in     al,0x55
  41a558:	stc    
  41a559:	dec    edi
  41a55a:	sbb    BYTE PTR [ecx],0x78
  41a55d:	shr    DWORD PTR [ecx],1
  41a55f:	ret    
  41a560:	cmp    al,0xfc
  41a562:	out    dx,eax
  41a563:	int3   
  41a564:	repnz mov ?,ecx
  41a567:	in     al,0xa4
  41a569:	out    0xcc,eax
  41a56b:	inc    ebx
  41a56c:	push   0x5d5c2fa0
  41a571:	sub    eax,0x73786ee4
  41a576:	iret   
  41a577:	push   ss
  41a578:	into   
  41a579:	rcl    ecx,cl
  41a57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a57c:	push   edi
  41a57d:	xchg   ebp,eax
  41a57e:	xchg   esi,eax
  41a57f:	pop    es
  41a580:	in     al,dx
  41a581:	scas   eax,DWORD PTR es:[edi]
  41a582:	mov    eax,0xafc14e29
  41a587:	fst    QWORD PTR [edx+0x366d562b]
  41a58d:	fistp  DWORD PTR [ebx+0x26ab4b27]
  41a593:	mov    eax,0xa4ee6d22
  41a598:	lahf   
  41a599:	or     eax,0xab70ad9b
  41a59e:	mov    al,0xf7
  41a5a0:	jmp    0xd103:0xaf783798
  41a5a7:	and    bl,BYTE PTR [edx+ebp*4-0x7638b14c]
  41a5ae:	mov    eax,cs
  41a5b0:	mov    ds,WORD PTR [ebx+0x0]
  41a5b3:	xchg   edx,eax
  41a5b4:	ins    BYTE PTR es:[edi],dx
  41a5b5:	jns    0x41a5f5
  41a5b7:	rcl    DWORD PTR [esi],1
  41a5b9:	mov    bl,al
  41a5bb:	ins    BYTE PTR es:[edi],dx
  41a5bc:	inc    edx
  41a5bd:	loopne 0x41a5c3
  41a5bf:	cli    
  41a5c0:	jmp    0xd101:0xbb7958da
  41a5c7:	adc    al,0xd6
  41a5c9:	mov    WORD PTR [edx+0x2d],?
  41a5cc:	jp     0x41a568
  41a5ce:	adc    edx,DWORD PTR [ebp+0x49]
  41a5d1:	mov    ecx,0xf63d448d
  41a5d6:	dec    ebp
  41a5d7:	shld   edi,ecx,0xde
  41a5db:	retf   
  41a5dc:	scas   al,BYTE PTR es:[edi]
  41a5dd:	push   edx
  41a5de:	out    0xd0,eax
  41a5e0:	out    0xe8,eax
  41a5e2:	addr16 jg 0x41a646
  41a5e5:	push   ebp
  41a5e6:	mov    ebp,edi
  41a5e8:	mov    cs,WORD PTR [esp+edx*4]
  41a5eb:	aam    0xe6
  41a5ed:	mov    bl,ch
  41a5ef:	jge    0x41a5c0
  41a5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f2:	mov    ds:0xc6384065,eax
  41a5f7:	add    al,0x45
  41a5f9:	mov    dl,0x4c
  41a5fb:	(bad)  
  41a5fc:	call   DWORD PTR [edx]
  41a5fe:	pop    ss
  41a5ff:	lods   eax,DWORD PTR ds:[esi]
  41a600:	jo     0x41a680
  41a602:	jmp    0x1218:0xcf728721
  41a609:	pop    ebp
  41a60a:	push   edx
  41a60b:	pop    edi
  41a60c:	or     al,0xdf
  41a60e:	je     0x41a611
  41a610:	aam    0xbd
  41a612:	adc    eax,0xc2c70b5b
  41a617:	jl     0x41a645
  41a619:	push   es
  41a61a:	ins    DWORD PTR es:[edi],dx
  41a61b:	pop    ss
  41a61c:	aaa    
  41a61d:	and    eax,0xffffffcb
  41a620:	lods   al,BYTE PTR ds:[esi]
  41a621:	lahf   
  41a622:	sub    dh,BYTE PTR [esi+eiz*1]
  41a625:	inc    ebx
  41a626:	(bad)  
  41a627:	adc    BYTE PTR [edx+edx*2],cl
  41a62a:	sbb    DWORD PTR [eax+0x4f],eax
  41a62d:	jle    0x41a64f
  41a62f:	ins    DWORD PTR es:[edi],dx
  41a630:	inc    ecx
  41a631:	xor    eax,0x3f7eed39
  41a636:	xor    al,0x96
  41a638:	or     DWORD PTR [esi],ebx
  41a63a:	pop    es
  41a63b:	push   esi
  41a63c:	and    bl,bh
  41a63e:	inc    esi
  41a63f:	pushf  
  41a640:	mov    ebx,0x7341fbd2
  41a645:	pop    esp
  41a646:	push   esp
  41a647:	mov    ecx,0x837cdaf
  41a64c:	sub    esi,DWORD PTR [ecx-0x7ed4ba3b]
  41a652:	pop    edx
  41a653:	int3   
  41a654:	scas   al,BYTE PTR es:[edi]
  41a655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a656:	test   al,0xa9
  41a658:	ds xchg esp,eax
  41a65a:	loopne 0x41a671
  41a65c:	dec    edx
  41a65d:	int3   
  41a65e:	xchg   ebp,eax
  41a65f:	push   es
  41a660:	adc    edx,esi
  41a662:	shl    DWORD PTR [ecx+eiz*1+0x62c6e568],0x15
  41a66a:	push   es
  41a66b:	retf   0xd985
  41a66e:	inc    DWORD PTR [edx]
  41a670:	pop    ebp
  41a671:	fs dec edi
  41a673:	lock fs pop edi
  41a676:	sbb    eax,0x3bd798b2
  41a67b:	dec    ebx
  41a67c:	xchg   edx,eax
  41a67d:	mov    esi,0x81f3c459
  41a682:	(bad)  
  41a683:	sub    cl,BYTE PTR [ebx+0x2f3a18ce]
  41a689:	pop    esp
  41a68a:	in     eax,0x1d
  41a68c:	in     eax,dx
  41a68d:	mul    WORD PTR [esi]
  41a690:	pop    esi
  41a691:	popa   
  41a692:	xchg   ecx,eax
  41a693:	out    0x1f,eax
  41a695:	lock arpl WORD PTR [edx],si
  41a698:	xor    dh,BYTE PTR [esi]
  41a69a:	into   
  41a69b:	pop    esi
  41a69c:	ins    BYTE PTR es:[edi],dx
  41a69d:	cli    
  41a69e:	nop
  41a69f:	push   esi
  41a6a0:	xor    edi,DWORD PTR [edx+0x1b07a936]
  41a6a6:	xchg   edi,eax
  41a6a7:	pop    esp
  41a6a8:	jo     0x41a69e
  41a6aa:	addr16 push 0x9c7cc8d1
  41a6b0:	je     0x41a6b2
  41a6b2:	xchg   BYTE PTR [ebx+0x736d8c38],dl
  41a6b8:	lock and BYTE PTR [edi-0x74f347e9],0x53
  41a6c0:	cmp    DWORD PTR [esp+esi*4-0x16],ebx
  41a6c4:	add    BYTE PTR [edi],dl
  41a6c6:	pop    ebx
  41a6c7:	data16 arpl WORD PTR [ebx+0x567cc743],bx
  41a6ce:	pop    ebx
  41a6cf:	add    ch,BYTE PTR [ebx-0x6e]
  41a6d2:	lahf   
  41a6d3:	call   eax
  41a6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6d6:	or     ecx,ebp
  41a6d8:	add    eax,0x6b995fd3
  41a6dd:	(bad)  
  41a6de:	mov    edx,0x956bdec7
  41a6e3:	pop    ss
  41a6e4:	add    DWORD PTR [esi+0x35],esi
  41a6e7:	outs   dx,DWORD PTR ds:[esi]
  41a6e8:	aad    0x75
  41a6ea:	inc    edi
  41a6eb:	cmc    
  41a6ec:	(bad)  [edx*4+0x3913491d]
  41a6f3:	arpl   WORD PTR [edx+0x38ec7c1a],sp
  41a6f9:	fcom   QWORD PTR [ebp+0x63b1769d]
  41a6ff:	xchg   edi,eax
  41a700:	pushf  
  41a701:	push   ebp
  41a702:	dec    edx
  41a703:	mov    cl,0x80
  41a705:	pop    ss
  41a706:	lahf   
  41a707:	jg     0x41a775
  41a709:	adc    esi,DWORD PTR [esi]
  41a70b:	mov    dl,0xc9
  41a70d:	stc    
  41a70e:	pop    eax
  41a70f:	test   ebp,esp
  41a711:	sub    al,0x1a
  41a713:	inc    ebp
  41a714:	pushf  
  41a715:	repz fsub QWORD PTR [eax-0x17a7978f]
  41a71c:	inc    esi
  41a71d:	add    ch,bl
  41a71f:	xchg   esp,eax
  41a720:	scas   al,BYTE PTR es:[edi]
  41a721:	push   ds
  41a722:	inc    esp
  41a723:	out    0x6d,eax
  41a725:	cmp    ecx,edx
  41a727:	cmp    esp,ebp
  41a729:	leave  
  41a72a:	push   DWORD PTR [ecx-0x71]
  41a72d:	adc    dl,BYTE PTR [ebx+esi*2-0x2d0c6880]
  41a734:	mov    esi,0x84f76661
  41a739:	stos   DWORD PTR es:[edi],eax
  41a73a:	fs push ebx
  41a73c:	lock (bad) 
  41a73e:	jmp    0x80b0da42
  41a743:	and    DWORD PTR [ebx+0x3fcd4ab9],ebp
  41a749:	std    
  41a74a:	test   BYTE PTR [esi+0x6d],0x6d
  41a74e:	xor    al,0xa9
  41a750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a751:	dec    esi
  41a752:	push   edx
  41a753:	test   BYTE PTR [esi-0x3f],bl
  41a756:	(bad)  
  41a758:	jmp    0x41a76e
  41a75a:	mov    ebp,0x21462e2d
  41a75f:	pop    ecx
  41a760:	lods   al,BYTE PTR ds:[esi]
  41a761:	test   DWORD PTR [ebx-0x36],esp
  41a764:	lea    esp,[edi]
  41a766:	pushf  
  41a767:	stc    
  41a768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a769:	inc    ebp
  41a76a:	or     esi,DWORD PTR [ecx]
  41a76c:	rcr    BYTE PTR [edx-0x21f52271],0x5f
  41a773:	mov    ah,0xa1
  41a775:	rol    DWORD PTR [eax+0x7ab01dd4],1
  41a77b:	mov    ch,0xa0
  41a77d:	cmp    ebx,0x3f
  41a780:	inc    esi
  41a781:	mov    WORD PTR [esi-0x1a],?
  41a784:	jmp    0x41a70b
  41a786:	mov    eax,ds:0x6d29e582
  41a78b:	mov    al,0x6d
  41a78d:	pop    ebp
  41a78e:	fs jns 0x41a7c7
  41a791:	xchg   esp,eax
  41a792:	and    BYTE PTR ss:[edx+0x0],cl
  41a796:	and    dh,BYTE PTR [edx]
  41a798:	push   esi
  41a799:	lahf   
  41a79a:	push   es
  41a79b:	pop    ds
  41a79c:	jecxz  0x41a767
  41a79e:	les    eax,FWORD PTR [esp+ecx*2-0x363276cb]
  41a7a5:	enter  0x9b6c,0x20
  41a7a9:	jmp    0x6194:0x9f55a1fb
  41a7b0:	cmp    DWORD PTR [edi-0x72e6fb7d],ecx
  41a7b6:	pusha  
  41a7b7:	dec    ebp
  41a7b8:	cmp    eax,DWORD PTR [edx]
  41a7ba:	nop
  41a7bb:	cdq    
  41a7bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7bd:	pushf  
  41a7be:	fwait
  41a7bf:	xchg   edi,eax
  41a7c0:	lea    ecx,[edx-0x528af39]
  41a7c6:	fisttp WORD PTR [eax-0x7e9a4254]
  41a7cc:	mov    esi,DWORD PTR [esi+0x7a]
  41a7cf:	xor    DWORD PTR [ecx],0x88436bc7
  41a7d5:	sbb    eax,0x4768e53d
  41a7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7db:	xchg   al,dl
  41a7dd:	jl     0x41a7f7
  41a7df:	(bad)  
  41a7e0:	loope  0x41a850
  41a7e2:	rcl    DWORD PTR [esi+0x1e],cl
  41a7e5:	adc    al,0x7d
  41a7e7:	in     eax,dx
  41a7e8:	in     eax,0x57
  41a7ea:	dec    esi
  41a7eb:	mov    ebp,0xbee07fe6
  41a7f0:	dec    ecx
  41a7f1:	sub    BYTE PTR [esi+0x7dc16516],0xa7
  41a7f8:	mov    ebp,0x37d9003a
  41a7fd:	retf   
  41a7fe:	popa   
  41a7ff:	jle    0x41a7ec
  41a801:	test   BYTE PTR [ebx],ah
  41a803:	into   
  41a804:	das    
  41a805:	(bad)
  41a808:	fcmove st,st(3)
  41a80a:	mov    ah,0x2a
  41a80c:	rol    BYTE PTR [eax],0x0
  41a80f:	int    0x4c
  41a811:	sub    bl,bl
  41a813:	jmp    0x41a867
  41a815:	adc    al,0x8b
  41a817:	jns    0x41a7ab
  41a819:	int    0xed
  41a81b:	dec    esp
  41a81c:	mov    dl,0xf9
  41a81e:	arpl   WORD PTR [edi],di
  41a820:	in     eax,dx
  41a821:	mov    dl,0xb4
  41a823:	ret    
  41a824:	ss inc eax
  41a826:	xor    ah,ch
  41a828:	call   0x3c9e:0x97381f77
  41a82f:	in     eax,0x6f
  41a831:	nop
  41a832:	pop    edx
  41a833:	les    esp,FWORD PTR [ebp+0x12]
  41a836:	sti    
  41a837:	ds mov edi,0x4fb785c1
  41a83d:	mov    ch,bh
  41a83f:	aam    0xb0
  41a841:	and    eax,0x3ef2d59
  41a846:	pop    ebx
  41a847:	or     eax,0x3ecabd3e
  41a84c:	frstor [edi-0xb]
  41a84f:	add    ebp,DWORD PTR [ebp-0xa]
  41a852:	popf   
  41a853:	or     edi,DWORD PTR [edi]
  41a855:	add    al,cl
  41a857:	mov    ds:0xba787382,al
  41a85c:	xor    al,BYTE PTR [eax-0x23492422]
  41a862:	loop   0x41a8d6
  41a864:	adc    al,BYTE PTR ds:0x70db821c
  41a86a:	das    
  41a86b:	out    0xda,eax
  41a86d:	test   eax,0x6a2f9672
  41a872:	(bad)  
  41a873:	shl    DWORD PTR [eax+0x74],1
  41a876:	lds    esp,FWORD PTR [eax+ebp*8]
  41a879:	fidiv  DWORD PTR [ecx+0x3e]
  41a87c:	aad    0x5e
  41a87e:	xor    al,bl
  41a880:	mov    ebp,0x97982daa
  41a885:	add    edx,DWORD PTR [edx-0x9]
  41a888:	outs   dx,DWORD PTR ds:[esi]
  41a889:	lea    ebx,[edi]
  41a88b:	iret   
  41a88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a88d:	ror    BYTE PTR [edi-0x37437932],1
  41a893:	jle    0x41a840
  41a895:	mov    ah,0xb0
  41a898:	sbb    eax,0xc2ef93f
  41a89d:	mov    dh,0x5f
  41a89f:	or     esi,ebx
  41a8a1:	pop    ecx
  41a8a2:	cli    
  41a8a3:	mov    ebp,0x40d37201
  41a8a8:	xor    eax,0xe3327ff3
  41a8ad:	popa   
  41a8ae:	mov    ah,0x68
  41a8b0:	mov    ch,0x21
  41a8b2:	inc    esi
  41a8b3:	jmp    0x6438:0x3240d332
  41a8ba:	add    eax,ecx
  41a8bc:	shl    DWORD PTR [edi],1
  41a8be:	ret    0x4cf1
  41a8c1:	adc    dh,BYTE PTR [esi-0x13e29e7f]
  41a8c7:	mov    ch,0x34
  41a8c9:	push   eax
  41a8ca:	call   0x5b28:0x77164344
  41a8d1:	cmp    eax,0x7d13524c
  41a8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8d7:	xor    BYTE PTR [eax+0x3a36871e],bl
  41a8dd:	xor    esi,ecx
  41a8df:	inc    esi
  41a8e0:	rol    DWORD PTR [esi],cl
  41a8e2:	stos   DWORD PTR es:[edi],eax
  41a8e3:	outs   dx,BYTE PTR ds:[esi]
  41a8e4:	push   0x17
  41a8e6:	jl     0x41a8dd
  41a8e8:	jle    0x41a8fe
  41a8ea:	les    eax,FWORD PTR [edi+0x1538413b]
  41a8f0:	lahf   
  41a8f1:	adc    al,0x15
  41a8f3:	cmc    
  41a8f4:	in     eax,dx
  41a8f5:	ficomp DWORD PTR [edi+0x5d]
  41a8f8:	loopne 0x41a88c
  41a8fa:	dec    ecx
  41a8fb:	mov    bl,BYTE PTR [edi+0x10]
  41a8fe:	ins    BYTE PTR es:[edi],dx
  41a8ff:	mov    esi,0xabb8f442
  41a904:	(bad)
  41a907:	sbb    DWORD PTR [edi],edx
  41a909:	mov    ch,bh
  41a90b:	dec    ebx
  41a90c:	jg     0x41a94b
  41a90e:	mov    ebx,0xb4bba88
  41a913:	xlat   BYTE PTR ds:[ebx]
  41a914:	cwde   
  41a915:	mov    cl,BYTE PTR [edi+ecx*2-0x5de923d6]
  41a91c:	ds adc ah,dl
  41a91f:	test   al,0x67
  41a921:	cwde   
  41a922:	pop    edx
  41a923:	jmp    0x95fdf0f6
  41a928:	cwde   
  41a929:	add    eax,0x355dbb30
  41a92e:	pop    eax
  41a92f:	jmp    0x41a8f2
  41a931:	fist   WORD PTR [esi-0x29da59b2]
  41a937:	icebp  
  41a938:	jp     0x41a94a
  41a93a:	inc    ecx
  41a93b:	push   esi
  41a93c:	jge    0x41a8f5
  41a93e:	nop
  41a93f:	push   0xa47e2823
  41a944:	adc    eax,0x69f0ec43
  41a949:	add    eax,0x2ef22397
  41a94e:	outs   dx,BYTE PTR ds:[esi]
  41a94f:	mov    BYTE PTR [eax-0x68],bh
  41a952:	(bad)  
  41a953:	dec    edx
  41a954:	and    DWORD PTR [esi+ecx*2+0x10],0x79eba81f
  41a95c:	out    0xea,eax
  41a95e:	std    
  41a95f:	inc    eax
  41a960:	dec    ebx
  41a961:	and    al,0x2d
  41a963:	es sbb eax,0x13066ce6
  41a969:	mov    ebx,0xca65c0e2
  41a96e:	mov    bh,0x6
  41a970:	mov    WORD PTR [edi-0x20],gs
  41a973:	xchg   edx,eax
  41a974:	pop    ds
  41a975:	aas    
  41a976:	and    ah,ch
  41a978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a979:	aam    0x2e
  41a97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a97c:	dec    edx
  41a97d:	add    BYTE PTR [ecx+0x7f],dh
  41a980:	pop    ecx
  41a981:	sti    
  41a982:	xor    DWORD PTR [eax+0x24],ecx
  41a985:	call   0x4dda:0x1fc64bed
  41a98c:	pop    esp
  41a98d:	add    BYTE PTR [ecx+0x1f],bl
  41a990:	adc    al,BYTE PTR [ebx+0x4eeea93f]
  41a996:	popa   
  41a997:	ds in  al,dx
  41a999:	cwde   
  41a99a:	fs aaa 
  41a99c:	nop
  41a99d:	xchg   edi,eax
  41a99e:	and    eax,0x4afe7d59
  41a9a3:	or     ch,BYTE PTR [edi-0x772bcb7a]
  41a9a9:	(bad)  [eax]
  41a9ab:	ja     0x41a9a5
  41a9ad:	cs or  al,0x1b
  41a9b0:	(bad)  
  41a9b1:	jmp    0x4d3b:0xa8a2ba81
  41a9b8:	inc    edx
  41a9b9:	call   0xcb48306d
  41a9be:	inc    ecx
  41a9bf:	jne    0x41a989
  41a9c1:	les    edx,FWORD PTR [edi+0x3a58d4ae]
  41a9c7:	or     eax,0x45fad866
  41a9cc:	sbb    al,0xb
  41a9ce:	or     ebx,DWORD PTR [edx]
  41a9d0:	adc    bl,BYTE PTR fs:[ebx-0x5a]
  41a9d4:	(bad)  
  41a9d5:	adc    eax,0xabb2adb5
  41a9da:	test   DWORD PTR [ebx+0x5bbfa0e2],eax
  41a9e0:	scas   al,BYTE PTR es:[edi]
  41a9e1:	ror    DWORD PTR [edi],0xf0
  41a9e4:	and    DWORD PTR [eax],ecx
  41a9e6:	aas    
  41a9e7:	(bad)  
  41a9e8:	jmp    0x66f162d9
  41a9ed:	cdq    
  41a9ee:	aad    0x11
  41a9f0:	xchg   esi,eax
  41a9f1:	in     al,dx
  41a9f2:	sbb    ch,BYTE PTR [edi+0xabbda17]
  41a9f8:	mov    ch,BYTE PTR [ebx+0x407bc45d]
  41a9fe:	lods   al,BYTE PTR ds:[esi]
  41a9ff:	xor    al,ch
  41aa01:	shr    eax,1
  41aa03:	xchg   DWORD PTR [ebp+0x1f],edx
  41aa06:	lds    eax,FWORD PTR [ebx+0x4af07f32]
  41aa0c:	sahf   
  41aa0d:	xor    eax,0xa6d9199d
  41aa12:	push   esp
  41aa13:	mov    eax,0x9bf77203
  41aa18:	mov    bl,0x59
  41aa1a:	in     al,0x8b
  41aa1c:	in     al,0x1a
  41aa1e:	jae    0x41aa05
  41aa20:	xor    bl,BYTE PTR [ebp-0x45451346]
  41aa26:	pop    edi
  41aa27:	stos   DWORD PTR es:[edi],eax
  41aa28:	cmp    dl,BYTE PTR [eax]
  41aa2a:	fcmovnbe st,st(0)
  41aa2c:	adc    ah,cl
  41aa2e:	and    BYTE PTR [ecx+esi*8],bh
  41aa31:	scas   eax,DWORD PTR es:[edi]
  41aa32:	loop   0x41aaa9
  41aa34:	mov    dh,0xd
  41aa36:	mov    ecx,DWORD PTR [esi-0x72bf2ffa]
  41aa3c:	mov    dl,0xa4
  41aa3e:	nop
  41aa3f:	pop    ds
  41aa40:	add    DWORD PTR [ebx],ecx
  41aa42:	mov    DWORD PTR [eax+0x41c66475],0xe7f4722d
  41aa4c:	outs   dx,BYTE PTR ds:[esi]
  41aa4d:	adc    al,0x11
  41aa4f:	test   BYTE PTR [edx+ebp*8-0x44ed8bbe],ah
  41aa56:	jbe    0x41aa1a
  41aa58:	mul    DWORD PTR [edx]
  41aa5a:	scas   eax,DWORD PTR es:[edi]
  41aa5b:	mov    dl,0x2d
  41aa5d:	outs   dx,DWORD PTR ds:[esi]
  41aa5e:	jecxz  0x41aa49
  41aa60:	rol    DWORD PTR [edx],0x81
  41aa63:	xor    al,0x1a
  41aa65:	jecxz  0x41aa65
  41aa67:	icebp  
  41aa68:	imul   esi,esp,0x7c
  41aa6b:	rcl    ecx,0xda
  41aa6e:	retf   
  41aa6f:	adc    al,BYTE PTR [ecx]
  41aa71:	and    ah,cl
  41aa73:	push   esi
  41aa74:	and    eax,DWORD PTR [eax]
  41aa76:	mov    esp,0xf01708c7
  41aa7b:	ins    DWORD PTR es:[edi],dx
  41aa7c:	jns    0x41aa3e
  41aa7e:	pop    ds
  41aa7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa80:	pop    esp
  41aa81:	leave  
  41aa82:	adc    BYTE PTR [edx-0x8],bl
  41aa85:	call   0xa694c2f6
  41aa8a:	cdq    
  41aa8b:	and    DWORD PTR [esi],esi
  41aa8d:	inc    ebp
  41aa8e:	ins    DWORD PTR es:[edi],dx
  41aa8f:	push   ebx
  41aa90:	test   DWORD PTR [edx-0x55],edx
  41aa93:	cmc    
  41aa94:	neg    ch
  41aa96:	and    al,0x47
  41aa98:	jl     0x41aa49
  41aa9a:	mov    ebx,0x6f81fe17
  41aa9f:	cli    
  41aaa0:	dec    ebp
  41aaa1:	mov    al,0xca
  41aaa3:	jbe    0x13a532fd
  41aaa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaaa:	sub    ch,BYTE PTR [edi]
  41aaac:	mov    edx,0x43ef77b8
  41aab1:	arpl   WORD PTR [edx-0x73d71d38],di
  41aab7:	jno    0x41aad9
  41aab9:	sub    al,0x32
  41aabb:	mov    ds:0x6c111e65,al
  41aac0:	xor    BYTE PTR [eax-0xa887f33],bl
  41aac6:	in     eax,0xe5
  41aac8:	mov    bl,0x8c
  41aaca:	fadd   st(0),st
  41aacc:	add    eax,0xabfe1ffb
  41aad1:	nop
  41aad2:	jo     0x41ab3f
  41aad4:	ins    DWORD PTR es:[edi],dx
  41aad5:	jae    0x41aab6
  41aad7:	dec    esi
  41aad8:	adc    eax,0xfaf7e4c5
  41aadd:	jmp    0x41aab3
  41aadf:	jnp    0x41aa8c
  41aae1:	jmp    0x41aae1
  41aae3:	and    eax,0x66daf031
  41aae8:	add    BYTE PTR [esi-0x3de8feb0],0x20
  41aaef:	in     al,dx
  41aaf0:	and    BYTE PTR [eax+0x5a],ch
  41aaf3:	mov    edx,0xb7af4de3
  41aaf8:	mov    al,ds:0x8d41fab5
  41aafd:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41aaff:	inc    esi
  41ab00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab01:	mov    dl,0x57
  41ab03:	sub    al,0xb6
  41ab05:	fsubr  DWORD PTR [ecx-0x2c187f09]
  41ab0b:	sub    al,0xeb
  41ab0d:	mov    BYTE PTR [esi+0x56],dh
  41ab10:	or     WORD PTR [ebp-0xf11a1b],dx
  41ab17:	adc    DWORD PTR [ecx],0x942d2f0d
  41ab1d:	out    0x77,eax
  41ab1f:	test   esi,esi
  41ab21:	inc    esp
  41ab22:	jno    0x41ab2a
  41ab24:	sbb    ebp,DWORD PTR [ecx]
  41ab26:	xor    DWORD PTR [esp+ebx*8-0x472ee524],esi
  41ab2d:	pop    ecx
  41ab2e:	(bad)  
  41ab2f:	in     eax,dx
  41ab30:	xor    al,0x5e
  41ab32:	sbb    al,0x44
  41ab34:	das    
  41ab35:	mov    edx,0xb436fac4
  41ab3a:	mov    ecx,0x5f053930
  41ab3f:	test   BYTE PTR [ebx+0x44181085],0xaa
  41ab46:	add    ch,BYTE PTR [edi+0x100a0895]
  41ab4c:	or     BYTE PTR [eax+0x2b],bh
  41ab4f:	add    dl,cl
  41ab51:	ret    
  41ab52:	aas    
  41ab53:	inc    ecx
  41ab54:	test   al,0x54
  41ab56:	add    ecx,0x5708f8
  41ab5c:	imul   ecx,edx
  41ab5f:	mov    DWORD PTR [ebp-0x58],ecx
  41ab62:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab65:	mov    edx,DWORD PTR [ebp-0x54]
  41ab68:	add    ecx,0x64f8da
  41ab6e:	or     ecx,edx
  41ab70:	mov    DWORD PTR [ebp-0x54],ecx
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	mov    DWORD PTR [ebp-0x35],ebx
  41acb7:	mov    edi,0x494a3092
  41acbc:	lea    edx,[esi-0x1e08321d]
  41acc2:	or     bh,BYTE PTR [ecx+eax*1+0x0]
  41acc6:	add    BYTE PTR [eax],al
  41acc8:	inc    ebx
  41acc9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41accd:	jb     0x41ad41
  41accf:	outs   dx,BYTE PTR gs:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp-0x738f6e92],0x41
  41e48b:	das    
  41e48c:	clc    
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	xchg   DWORD PTR [edx],eax
  41e492:	add    BYTE PTR [eax],al
  41e494:	ret    0x1a56
  41e497:	arpl   WORD PTR ds:0xc6aa7a,di
  41e49e:	fld    QWORD PTR [esi-0x32]
  41e4a1:	pop    edi
  41e4a2:	not    dl
  41e4a4:	hlt    
  41e4a5:	repnz mov edx,0x26ba662a
  41e4ab:	fst    st(7)
  41e4ad:	push   edx
  41e4ae:	ins    BYTE PTR es:[edi],dx
  41e4af:	mov    cl,0x68
  41e4b1:	sbb    al,BYTE PTR [edi+ecx*4+0x2d39274]
  41e4b8:	adc    DWORD PTR [ebx],edi
  41e4ba:	inc    esp
  41e4bb:	popa   
  41e4bc:	aaa    
  41e4bd:	xchg   BYTE PTR [ebx+0x58095846],bl
  41e4c3:	shr    esi,0x46
  41e4c6:	lock dec eax
  41e4c8:	clc    
  41e4c9:	cmp    cl,ch
  41e4cb:	xchg   esp,eax
  41e4cc:	lods   al,BYTE PTR ds:[esi]
  41e4cd:	pusha  
  41e4ce:	lock mov ebp,0x6666630a
  41e4d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d5:	mov    DWORD PTR [edx+0x1ce76ae5],edx
  41e4db:	jle    0x41e4c3
  41e4dd:	pop    ecx
  41e4de:	(bad)  
  41e4df:	cdq    
  41e4e0:	sbb    eax,0x8f8d1c98
  41e4e5:	sbb    eax,0x7916f3e6
  41e4ea:	adc    edi,DWORD PTR [eax]
  41e4ec:	cmp    BYTE PTR [eax+ebx*8+0x53],ah
  41e4f0:	dec    esi
  41e4f1:	push   eax
  41e4f2:	bnd js 0x41e53a
  41e4f5:	outs   dx,DWORD PTR ds:[esi]
  41e4f6:	mov    bl,0x7e
  41e4f8:	push   cs
  41e4f9:	pop    esp
  41e4fa:	rol    BYTE PTR ss:[ecx],cl
  41e4fd:	push   es
  41e4fe:	mov    DWORD PTR [ebp+esi*1+0x41],ecx
  41e502:	stc    
  41e503:	mov    eax,0xe5ff93d0
  41e508:	imul   edx,edx,0xd1d8ee17
  41e50e:	adc    DWORD PTR [eax+edi*2-0x35],ecx
  41e512:	sbb    al,0x9e
  41e514:	push   0xffffff94
  41e516:	pop    ecx
  41e517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e518:	push   ds
  41e519:	ins    BYTE PTR es:[edi],dx
  41e51a:	xchg   ebp,eax
  41e51b:	mov    ch,0x89
  41e51d:	push   ss
  41e51e:	data16 stc 
  41e520:	push   ss
  41e521:	cld    
  41e522:	dec    ebx
  41e523:	push   ss
  41e524:	mov    eax,ds:0x779dda5a
  41e529:	and    BYTE PTR [ebx+0x51627d15],0x32
  41e530:	and    eax,0x42ba0fd3
  41e535:	push   0xffffff8b
  41e537:	xlat   BYTE PTR ds:[ebx]
  41e538:	test   BYTE PTR [edx],0x1c
  41e53b:	arpl   bp,dx
  41e53d:	es fcomip st,st(2)
  41e540:	scas   eax,DWORD PTR es:[edi]
  41e541:	out    dx,al
  41e542:	sbb    DWORD PTR [esi-0x4],0x90f763ad
  41e549:	add    esp,0x48
  41e54c:	imul   ebp,DWORD PTR [edx-0xd],0xffffffe8
  41e550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e551:	gs mov edx,0x39e11e03
  41e557:	dec    esi
  41e558:	sti    
  41e559:	sbb    bl,BYTE PTR ds:0x68aa986a
  41e55f:	or     ebx,DWORD PTR [ebx+0x35bb4c5]
  41e565:	push   0x891796a5
  41e56a:	(bad)  
  41e56b:	mov    dh,0xd3
  41e56d:	dec    esp
  41e56e:	jmp    0xa903:0x6c85d548
  41e575:	and    al,0x82
  41e577:	push   ecx
  41e578:	ss and al,0x2d
  41e57b:	hlt    
  41e57c:	jnp    0x41e523
  41e57e:	inc    ebx
  41e57f:	inc    ebx
  41e580:	xchg   ebx,eax
  41e581:	out    0xfe,eax
  41e583:	and    DWORD PTR [eax+0x5a870091],ecx
  41e589:	mov    ah,0x66
  41e58b:	lea    ebp,[esp+ecx*8-0x54e4d15f]
  41e592:	jmp    0x41e53b
  41e594:	xor    eax,0x88e1a5f4
  41e599:	sbb    ebp,esp
  41e59b:	or     eax,0x1638e3c2
  41e5a0:	mov    dl,0xc2
  41e5a2:	js     0x41e600
  41e5a4:	or     esp,DWORD PTR [edi+0x7b4339fd]
  41e5aa:	push   0x1ccdd48b
  41e5af:	int3   
  41e5b0:	fstp   QWORD PTR [ebp+0xfb58327]
  41e5b6:	add    eax,DWORD PTR [bx+0x7ed5]
  41e5bb:	ss pop ebx
  41e5bd:	scas   eax,DWORD PTR es:[edi]
  41e5be:	inc    ebx
  41e5bf:	add    BYTE PTR [ecx*2+0xf2997fb],ah
  41e5c6:	fld    DWORD PTR [edx]
  41e5c8:	icebp  
  41e5c9:	cmp    al,BYTE PTR [esi]
  41e5cb:	pop    es
  41e5cc:	and    eax,0xffffffee
  41e5cf:	cmp    esp,DWORD PTR [eax+0x3f]
  41e5d2:	ins    DWORD PTR es:[edi],dx
  41e5d3:	jb     0x41e61e
  41e5d5:	or     DWORD PTR [ebx+edx*8-0x32],esi
  41e5d9:	jmp    0xb723:0x142899be
  41e5e0:	push   ds
  41e5e1:	popa   
  41e5e2:	test   al,0x84
  41e5e4:	sub    bh,ah
  41e5e6:	dec    eax
  41e5e7:	call   0xfd33:0x9a1c1ecf
  41e5ee:	(bad)
  41e5f2:	jne    0x41e5fd
  41e5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5f5:	pop    edi
  41e5f6:	in     eax,0x48
  41e5f8:	inc    ecx
  41e5f9:	push   ebx
  41e5fa:	(bad)  
  41e5fb:	pop    edx
  41e5fc:	addr16 mov ebp,0xe343f00e
  41e602:	fidiv  DWORD PTR [esi+0x7f]
  41e605:	add    esp,DWORD PTR [eax+0x549f2274]
  41e60b:	cld    
  41e60c:	mov    al,0xa5
  41e60e:	loop   0x41e5cc
  41e610:	and    DWORD PTR [edi-0x6f],ebp
  41e613:	adc    esi,DWORD PTR [esp+edi*1]
  41e616:	push   eax
  41e617:	outs   dx,BYTE PTR ds:[esi]
  41e618:	outs   dx,DWORD PTR ds:[esi]
  41e619:	lea    edi,[ebx+0x51]
  41e61c:	push   ebx
  41e61d:	sti    
  41e61e:	inc    esi
  41e61f:	mov    ch,BYTE PTR [edi-0x29ed86e2]
  41e625:	mul    DWORD PTR [edi+0x123decad]
  41e62b:	pop    edx
  41e62c:	test   eax,0x3c0ba7b8
  41e631:	sahf   
  41e632:	sub    esi,edi
  41e634:	mov    ebx,0xbe4c7da5
  41e639:	push   edi
  41e63a:	inc    eax
  41e63b:	push   0xeb1f6dc6
  41e640:	imul   ebp,DWORD PTR [ebp+0x3c65a443],0x16581c21
  41e64a:	xor    al,0x5d
  41e64c:	add    BYTE PTR [esi],dh
  41e64e:	mov    DWORD PTR [edi-0x7e0b8300],0x108e3a0e
  41e658:	fwait
  41e659:	push   es
  41e65a:	sub    bl,BYTE PTR [ebx+0x1b9ca43e]
  41e660:	push   ss
  41e661:	xchg   ecx,eax
  41e662:	xor    dh,BYTE PTR [edi+eax*1]
  41e665:	ja     0x41e69d
  41e667:	shr    DWORD PTR [edx-0x34],cl
  41e66a:	or     eax,0xf385923
  41e66f:	loop   0x41e6d9
  41e671:	cmp    edx,0xffffffd2
  41e674:	add    ch,BYTE PTR [eax+ebp*1+0xe]
  41e678:	int    0x83
  41e67a:	mov    bl,0x45
  41e67c:	jmp    0xc23a:0xc1ca9112
  41e683:	ss pushf 
  41e685:	sub    esi,DWORD PTR [ebx-0x2d77a06d]
  41e68b:	std    
  41e68c:	fstp   QWORD PTR [edx-0x8]
  41e68f:	ret    0x2172
  41e692:	into   
  41e693:	fcomip st,st(1)
  41e695:	mov    bh,BYTE PTR [edi-0x37]
  41e698:	mov    DWORD PTR [eax],ebx
  41e69a:	inc    ecx
  41e69b:	repz jae 0x41e65c
  41e69e:	ret    0x29df
  41e6a1:	jb     0x41e685
  41e6a3:	mov    al,0x3
  41e6a5:	dec    edi
  41e6a6:	cs push 0x6
  41e6a9:	ret    
  41e6aa:	xor    eax,esi
  41e6ac:	test   ebx,esp
  41e6ae:	cmp    al,0xb7
  41e6b0:	mul    BYTE PTR [ebp-0x22]
  41e6b3:	dec    ebx
  41e6b4:	pop    ecx
  41e6b5:	pop    edx
  41e6b6:	je     0x41e6bc
  41e6b8:	pushf  
  41e6b9:	adc    DWORD PTR [ebp+0x3e473b36],edi
  41e6bf:	(bad)  
  41e6c1:	sbb    edi,DWORD PTR [edi]
  41e6c3:	fbld   TBYTE PTR [edx]
  41e6c5:	pop    ds
  41e6c6:	rcr    BYTE PTR [ebx+ebp*4-0x585a5910],0xb4
  41e6ce:	ffreep st(6)
  41e6d0:	and    al,0x4f
  41e6d2:	xlat   BYTE PTR ds:[ebx]
  41e6d3:	xchg   DWORD PTR [ebx+0xf1fa79e],esi
  41e6d9:	xchg   DWORD PTR [eax-0x12],edi
  41e6dc:	adc    esi,DWORD PTR [esp+edx*1+0x72a11dcc]
  41e6e3:	xchg   esp,eax
  41e6e4:	scas   eax,DWORD PTR es:[edi]
  41e6e5:	sbb    DWORD PTR [esi],ebx
  41e6e7:	inc    ebp
  41e6e8:	xchg   dh,dh
  41e6ea:	lds    ecx,FWORD PTR [esi-0x1c026f77]
  41e6f0:	xchg   ebx,eax
  41e6f1:	in     al,dx
  41e6f2:	add    al,0xd2
  41e6f4:	mov    ah,BYTE PTR [edx]
  41e6f6:	cmp    DWORD PTR [ecx+0x1d90e9c],0xa70018d9
  41e700:	aad    0x36
  41e702:	(bad)  
  41e703:	mov    ah,0x83
  41e705:	fwait
  41e706:	add    BYTE PTR [ebx],ah
  41e708:	(bad)  
  41e709:	shr    BYTE PTR [esp+eax*1+0x9],cl
  41e70d:	mov    esp,es
  41e70f:	test   al,0xb5
  41e711:	jmp    0x36c3d5a7
  41e716:	xor    cl,BYTE PTR [ecx+0x5a]
  41e719:	jmp    0xfef6:0x4c770030
  41e720:	(bad)  
  41e721:	(bad)  
  41e722:	jg     0x41e6f1
  41e724:	mov    ah,0x6b
  41e726:	mov    dh,0x14
  41e728:	mov    ds:0x7f34d61e,eax
  41e72d:	add    DWORD PTR fs:[eax],eax
  41e730:	xchg   DWORD PTR [edx],eax
  41e732:	add    BYTE PTR [eax],al
  41e734:	mov    DWORD PTR [eax],eax
  41e736:	pop    ss
  41e737:	imul   DWORD PTR [ebp+eax*1-0x53]
  41e73b:	xor    BYTE PTR [ebp+0x73992103],0xa0
  41e742:	mov    di,?
  41e745:	imul   eax,DWORD PTR [ebp+eax*4+0x61],0x80d40dbe
  41e74d:	dec    esi
  41e74e:	pop    es
  41e74f:	cmp    edi,edx
  41e751:	lahf   
  41e752:	or     esi,esp
  41e754:	adc    BYTE PTR [edi-0x4c5e8c27],0x3
  41e75b:	mov    ch,0x83
  41e75d:	mov    dl,0x60
  41e75f:	or     eax,0x839e77af
  41e764:	test   al,0x6e
  41e766:	lea    edi,[ecx+0x72dd050a]
  41e76c:	dec    eax
  41e76d:	jne    0x41e70c
  41e76f:	shl    DWORD PTR [ebx-0x2bda21b3],1
  41e775:	add    DWORD PTR [ebx],ebp
  41e777:	cmp    al,BYTE PTR [edi+0x5036556]
  41e77d:	sub    BYTE PTR [edx-0x56],0x7
  41e781:	imul   edi,edx,0xbf2541bc
  41e787:	sar    edi,cl
  41e789:	(bad)  
  41e78a:	out    0xc4,al
  41e78c:	neg    DWORD PTR [eax-0x6241b96e]
  41e792:	ss adc eax,0xe82c358a
  41e798:	push   edx
  41e799:	push   0xa56a3220
  41e79e:	sar    BYTE PTR [ebx+edi*8-0x55],1
  41e7a2:	cld    
  41e7a3:	cmp    BYTE PTR [edx-0xf3507fb],ch
  41e7a9:	sub    BYTE PTR [edi+0x3703af71],bh
  41e7af:	inc    ebx
  41e7b0:	jne    0x41e7bf
  41e7b2:	jb     0x41e820
  41e7b4:	pop    edx
  41e7b5:	out    dx,al
  41e7b6:	mov    esp,0x5589fdf2
  41e7bb:	jge    0x41e7ba
  41e7bd:	or     BYTE PTR [edi+0x6d],0x27
  41e7c1:	pop    edx
  41e7c2:	lods   eax,DWORD PTR ds:[esi]
  41e7c3:	icebp  
  41e7c4:	and    al,0xdb
  41e7c6:	loop   0x41e779
  41e7c8:	sub    edi,edx
  41e7ca:	js     0x41e79b
  41e7cc:	jno    0x41e798
  41e7ce:	das    
  41e7cf:	ins    BYTE PTR es:[edi],dx
  41e7d0:	and    bh,al
  41e7d2:	inc    ebx
  41e7d3:	ret    0x6125
  41e7d6:	retf   
  41e7d7:	retf   0xce95
  41e7da:	sub    eax,0xc8bb76e7
  41e7df:	pop    ds
  41e7e0:	cwde   
  41e7e1:	adc    BYTE PTR [eax],cl
  41e7e3:	add    BYTE PTR [edi-0x7a6b576a],cl
  41e7e9:	dec    ecx
  41e7ea:	pop    edi
  41e7eb:	sar    eax,1
  41e7ed:	fisttp QWORD PTR [ebp-0x12]
  41e7f0:	aad    0xdb
  41e7f2:	call   0x1627:0x22527a82
  41e7f9:	pusha  
  41e7fa:	cmp    al,0x8d
  41e7fc:	add    al,0xe
  41e7fe:	cmc    
  41e7ff:	push   ecx
  41e800:	mov    edx,0x63268dce
  41e805:	add    ch,bh
  41e807:	dec    esp
  41e808:	inc    esi
  41e809:	loop   0x41e790
  41e80b:	pop    ebp
  41e80c:	mov    dh,0xe0
  41e80e:	push   ecx
  41e80f:	je     0x41e7c9
  41e811:	std    
  41e812:	cdq    
  41e813:	sahf   
  41e814:	ins    DWORD PTR es:[edi],dx
  41e815:	jg     0x41e7aa
  41e817:	dec    ecx
  41e818:	loope  0x41e828
  41e81a:	cli    
  41e81b:	adc    DWORD PTR [edx],0x53546a08
  41e821:	into   
  41e822:	add    ch,BYTE PTR [edi+ebx*4]
  41e825:	jge    0x41e7e4
  41e827:	icebp  
  41e828:	rol    DWORD PTR [ebp+0x5f],0x18
  41e82c:	inc    ecx
  41e82d:	call   0x7c3:0xaad0666
  41e834:	jno    0x41e7e3
  41e836:	inc    eax
  41e837:	dec    esi
  41e838:	xchg   ebp,eax
  41e839:	les    esp,FWORD PTR [ecx+0xa]
  41e83c:	fadd   QWORD PTR [ebp+esi*4-0x14]
  41e840:	leave  
  41e841:	push   ds
  41e842:	test   DWORD PTR ds:0x9d3e70ad,ecx
  41e848:	pusha  
  41e849:	aam    0xaa
  41e84b:	popa   
  41e84c:	fdiv   st(3),st
  41e84e:	je     0x41e814
  41e850:	sub    DWORD PTR [ebp-0x1d27c5c4],esi
  41e856:	or     eax,0x339c2c17
  41e85b:	shl    bl,1
  41e85d:	pop    esp
  41e85e:	mov    ds:0xbb1e2992,al
  41e863:	push   edi
  41e864:	(bad)  
  41e865:	lock mov al,0xfb
  41e868:	outs   dx,BYTE PTR ds:[esi]
  41e869:	sub    al,BYTE PTR [ebx-0xf]
  41e86c:	xchg   ebp,eax
  41e86d:	fdivr  QWORD PTR [edi]
  41e86f:	mov    es,WORD PTR [esi+eax*8]
  41e872:	mov    ah,0x2f
  41e874:	and    al,0x4b
  41e876:	enter  0xdfab,0xc5
  41e87a:	push   0x4cb1436e
  41e87f:	sub    eax,0x3c47a23c
  41e884:	and    al,0x9c
  41e886:	(bad)  
  41e887:	popa   
  41e888:	sub    al,0xb4
  41e88a:	stos   DWORD PTR es:[edi],eax
  41e88b:	data16 loop 0x41e89e
  41e88e:	(bad)  
  41e88f:	push   ss
  41e890:	dec    ebx
  41e891:	jbe    0x41e89b
  41e893:	and    al,0x20
  41e895:	sub    al,0x1b
  41e897:	and    DWORD PTR [esi-0x7ef3c307],edx
  41e89d:	xchg   ebx,eax
  41e89e:	xchg   ecx,eax
  41e89f:	pushf  
  41e8a0:	pop    edx
  41e8a1:	test   BYTE PTR [eax+ebp*2+0x3b],ch
  41e8a5:	dec    ebx
  41e8a6:	addr16 mov eax,0xc948235b
  41e8ac:	cld    
  41e8ad:	cmc    
  41e8ae:	jo     0x41e8bb
  41e8b0:	(bad)  
  41e8b1:	je     0x41e915
  41e8b3:	in     al,0x75
  41e8b5:	push   esi
  41e8b6:	pop    eax
  41e8b7:	dec    ebx
  41e8b8:	sub    ch,ah
  41e8ba:	push   esp
  41e8bb:	ins    BYTE PTR es:[edi],dx
  41e8bc:	fsubr  DWORD PTR [esi+0x24]
  41e8bf:	push   ebx
  41e8c0:	in     eax,0x2c
  41e8c2:	clc    
  41e8c3:	push   0x5d
  41e8c5:	push   cs
  41e8c6:	dec    eax
  41e8c7:	cs clc 
  41e8c9:	xor    BYTE PTR [esi],dh
  41e8cb:	inc    eax
  41e8cc:	int    0x6c
  41e8ce:	(bad)  
  41e8cf:	mov    ?,WORD PTR [ebp+esi*4+0x4f3defb6]
  41e8d6:	out    0xb0,al
  41e8d8:	scas   eax,DWORD PTR es:[edi]
  41e8d9:	sahf   
  41e8da:	pop    ebx
  41e8db:	sti    
  41e8dc:	pop    ds
  41e8dd:	fucomip st,st(5)
  41e8df:	xor    al,0x69
  41e8e1:	push   0xff3e1a96
  41e8e6:	pop    edi
  41e8e7:	addr16 ret 0x61e5
  41e8eb:	sar    BYTE PTR [ecx+0x5],1
  41e8ee:	cdq    
  41e8ef:	push   cs
  41e8f0:	jmp    0x6144:0x17e8caf2
  41e8f7:	mov    al,ds:0xe2cfe1f5
  41e8fc:	dec    ebp
  41e8fd:	adc    al,0x24
  41e8ff:	call   0xd612:0x5f89b7ce
  41e906:	dec    ebx
  41e907:	stos   BYTE PTR es:[edi],al
  41e908:	es cs aaa 
  41e90b:	push   edi
  41e90c:	mov    ebp,edi
  41e90e:	sbb    eax,0xc0bcbcf3
  41e913:	adc    eax,0x93a04164
  41e918:	fcmovbe st,st(4)
  41e91a:	call   0x908c:0x413f12d8
  41e921:	je     0x41e8f8
  41e923:	fstp   QWORD PTR [edx+0x291a83ee]
  41e929:	sbb    eax,0x784416b9
  41e92e:	in     al,dx
  41e92f:	cmc    
  41e930:	push   cs
  41e931:	sub    al,0x74
  41e933:	jns    0x41e8cf
  41e935:	pop    eax
  41e936:	mov    ds:0x4b3deca6,eax
  41e93b:	std    
  41e93c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e93d:	out    0x76,al
  41e93f:	add    DWORD PTR [eax-0x3befcfb8],ebp
  41e945:	neg    BYTE PTR [ebx-0x53]
  41e948:	rol    DWORD PTR [ebx+0x69713c7d],cl
  41e94e:	test   al,0xd0
  41e950:	pop    edx
  41e951:	dec    eax
  41e952:	or     BYTE PTR [ebx+0x4727c31d],al
  41e958:	stos   DWORD PTR es:[edi],eax
  41e959:	mov    ds:0x4efa43fe,eax
  41e95e:	nop
  41e95f:	jo     0x41e948
  41e961:	pop    esp
  41e962:	ds xchg ecx,eax
  41e964:	(bad)  
  41e965:	xor    al,0x64
  41e967:	rcr    DWORD PTR [eax+0x380bde18],0xb6
  41e96e:	retf   0xc241
  41e971:	or     eax,0xd8b7e1c6
  41e976:	call   0xbab4f544
  41e97b:	push   es
  41e97c:	cmp    edx,esi
  41e97e:	mov    esp,0xd78034de
  41e983:	push   ebp
  41e984:	fmul   DWORD PTR [ebx+eax*8-0x1617d369]
  41e98b:	addr16 push esp
  41e98d:	xor    bh,BYTE PTR [ecx-0x26]
  41e990:	(bad)  
  41e991:	scas   eax,DWORD PTR es:[edi]
  41e992:	shr    dl,1
  41e994:	xchg   edx,eax
  41e995:	adc    eax,0x2f28358e
  41e99a:	aaa    
  41e99b:	pop    ebp
  41e99c:	test   eax,0xb8042a95
  41e9a1:	xchg   edx,eax
  41e9a2:	cmp    edi,ebx
  41e9a4:	xchg   ebx,eax
  41e9a5:	pop    ebp
  41e9a6:	(bad)
  41e9aa:	imul   edx,edx,0x17
  41e9ad:	ja     0x41e945
  41e9af:	adc    DWORD PTR [eax-0x6c],edx
  41e9b2:	test   DWORD PTR ss:[ebx+ecx*8],ecx
  41e9b6:	dec    ebx
  41e9b7:	mov    esp,0x1d48f
  41e9bc:	pop    es
  41e9bd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9c3:	pop    ds
  41e9c4:	xchg   BYTE PTR [ebx],bl
  41e9c6:	mov    edx,0x49af54d0
  41e9cb:	xor    al,0x6
  41e9cd:	add    DWORD PTR [bx+si],eax
  41e9d0:	xchg   DWORD PTR [edx],eax
  41e9d2:	add    BYTE PTR [eax],al
  41e9d4:	cmp    eax,0x126f0cd8
  41e9d9:	mov    eax,0x759adadc
  41e9de:	adc    eax,DWORD PTR [edi+ebx*4-0x5e]
  41e9e2:	pop    eax
  41e9e3:	mov    dl,0x13
  41e9e5:	xchg   edi,eax
  41e9e6:	or     al,0xc4
  41e9e8:	gs (bad) 
  41e9ea:	aas    
  41e9eb:	dec    ebp
  41e9ec:	and    BYTE PTR [eax],dh
  41e9ee:	dec    edi
  41e9ef:	cmp    al,0x34
  41e9f1:	pop    eax
  41e9f2:	loopne 0x41ea56
  41e9f4:	add    eax,0x306c5ec
  41e9f9:	jno    0x41ea7a
  41e9fb:	sbb    edx,eax
  41e9fd:	sub    esp,DWORD PTR [eax-0x71c00b3c]
  41ea03:	ss lahf 
  41ea05:	adc    BYTE PTR [ebx+0x18],bl
  41ea08:	(bad)  
  41ea09:	xchg   esp,eax
  41ea0a:	jecxz  0x41e9c1
  41ea0c:	hlt    
  41ea0d:	push   0xe
  41ea0f:	mov    eax,ds:0xcdcc0196
  41ea14:	push   0xe2de839b
  41ea19:	mov    dl,0xa1
  41ea1b:	rol    BYTE PTR [edx+esi*4-0x52a423c5],0xe7
  41ea23:	mov    ch,0xf4
  41ea25:	add    esp,DWORD PTR [ebp-0x757ea7ae]
  41ea2b:	mov    WORD PTR [edx-0x22],ss
  41ea2e:	cdq    
  41ea2f:	aad    0x9d
  41ea31:	xlat   BYTE PTR ds:[ebx]
  41ea32:	pushf  
  41ea33:	sub    DWORD PTR [ebx-0x6],ebx
  41ea36:	and    bh,BYTE PTR [ebp-0x1591ea7d]
  41ea3c:	or     DWORD PTR [edi-0x1b],edx
  41ea3f:	dec    edi
  41ea40:	retf   
  41ea41:	in     al,0x9c
  41ea43:	fimul  DWORD PTR [edx+0x69]
  41ea46:	jnp    0x41ea1a
  41ea48:	dec    edi
  41ea49:	sar    BYTE PTR [edx-0x6d0add99],0x7c
  41ea50:	sub    esi,DWORD PTR [ebp+0x15e3d8e7]
  41ea56:	jle    0x41ea6a
  41ea58:	rol    ecx,cl
  41ea5a:	sub    BYTE PTR ds:0x9dde9842,dh
  41ea60:	jg     0x41ea1f
  41ea62:	cs dec esi
  41ea64:	pop    ds
  41ea65:	test   DWORD PTR [ebx+0x1e],ebx
  41ea68:	cmp    al,0xee
  41ea6a:	cmp    ebp,DWORD PTR [eax]
  41ea6c:	retf   
  41ea6d:	xchg   edi,eax
  41ea6e:	push   es
  41ea6f:	mov    eax,eax
  41ea71:	les    ebx,FWORD PTR [ecx+ebp*8+0x273577d6]
  41ea78:	xlat   BYTE PTR ds:[ebx]
  41ea79:	push   cs
  41ea7a:	retf   0x198a
  41ea7d:	push   edx
  41ea7e:	sub    dl,BYTE PTR [edi+ebp*2]
  41ea81:	in     eax,0xbe
  41ea83:	push   ds
  41ea84:	inc    ecx
  41ea85:	dec    edi
  41ea86:	adc    edi,DWORD PTR [eax+0x4325ed55]
  41ea8c:	or     DWORD PTR [eax+0x25110e95],esp
  41ea92:	and    BYTE PTR [ebx+0x11b71ae2],0xe3
  41ea99:	fcom   st(1)
  41ea9b:	mov    esp,0x78649b2c
  41eaa0:	out    dx,eax
  41eaa1:	jl     0x41eac7
  41eaa3:	inc    ecx
  41eaa4:	push   esi
  41eaa5:	in     eax,0x12
  41eaa7:	xchg   ebp,eax
  41eaa8:	mov    BYTE PTR [ecx-0x7e73120d],bh
  41eaae:	repnz and eax,0x53a81352
  41eab4:	test   BYTE PTR [ebx-0x4b92ea0e],0xc9
  41eabb:	inc    edi
  41eabc:	pop    ebp
  41eabd:	sub    al,0x4e
  41eabf:	sub    al,0x8
  41eac1:	jae    0x41ea51
  41eac3:	xor    eax,0xe4bec820
  41eac8:	push   ss
  41eac9:	pop    es
  41eaca:	(bad)  
  41eacb:	mov    fs,WORD PTR [esp+eiz*2+0x69]
  41eacf:	in     al,dx
  41ead0:	cmp    esp,eax
  41ead2:	xlat   BYTE PTR ds:[ebx]
  41ead3:	out    dx,eax
  41ead4:	add    al,0x59
  41ead6:	cmp    eax,0x138254c6
  41eadb:	pop    eax
  41eadc:	enter  0x746a,0x2c
  41eae0:	(bad)  
  41eae1:	fild   DWORD PTR [edx-0x7a137d4]
  41eae7:	sub    DWORD PTR [ecx+0x4e0ebf16],ebp
  41eaed:	rcr    esi,1
  41eaef:	dec    ecx
  41eaf0:	das    
  41eaf1:	add    DWORD PTR [edx+0x69],ebx
  41eaf4:	or     edx,DWORD PTR ds:0x16dfec0c
  41eafa:	aaa    
  41eafb:	or     al,0x8a
  41eafd:	(bad)  
  41eafe:	into   
  41eaff:	push   es
  41eb00:	call   0xefcfe82e
  41eb05:	mov    bh,0xb2
  41eb07:	adc    ah,BYTE PTR [ebx+0x5c]
  41eb0a:	out    0x89,al
  41eb0c:	aas    
  41eb0d:	aaa    
  41eb0e:	jp     0x41eb52
  41eb10:	mov    ecx,0x765edd0f
  41eb15:	das    
  41eb16:	ucomiss xmm3,DWORD PTR [esi]
  41eb19:	imul   esi,DWORD PTR [ecx+0x2d],0x26
  41eb1d:	icebp  
  41eb1e:	dec    ebp
  41eb1f:	cs popa 
  41eb21:	cmp    BYTE PTR [eax+0x50],dh
  41eb24:	pop    esp
  41eb25:	or     DWORD PTR [edx],esi
  41eb27:	inc    edx
  41eb28:	mov    ecx,edx
  41eb2a:	leave  
  41eb2b:	inc    BYTE PTR [edx-0x1bb510ee]
  41eb31:	push   ebp
  41eb32:	mov    edi,0xdecc6264
  41eb37:	and    eax,0x10487b4c
  41eb3c:	hlt    
  41eb3d:	add    al,BYTE PTR [esi]
  41eb3f:	jnp    0x41eb9c
  41eb41:	imul   BYTE PTR ds:0xf12f885
  41eb47:	int    0x1a
  41eb49:	dec    ecx
  41eb4a:	adc    bl,al
  41eb4c:	jne    0x41eb16
  41eb4e:	out    dx,eax
  41eb4f:	fxch   st(0)
  41eb51:	jecxz  0x41eb2a
  41eb53:	aam    0x62
  41eb55:	xor    ebp,DWORD PTR [edi+eax*2]
  41eb58:	shr    DWORD PTR [ebx],1
  41eb5a:	or     al,0x8e
  41eb5c:	inc    eax
  41eb5d:	ins    BYTE PTR es:[edi],dx
  41eb5e:	mov    ebp,0x1b416cce
  41eb63:	fisubr WORD PTR [edx]
  41eb65:	ja     0x41eba4
  41eb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb68:	jns    0x41eaee
  41eb6a:	cs push edx
  41eb6c:	(bad)  
  41eb6d:	out    dx,al
  41eb6e:	xlat   BYTE PTR ds:[ebx]
  41eb6f:	inc    esp
  41eb70:	and    al,0x3d
  41eb72:	add    BYTE PTR ds:0xcb2015c9,0xdb
  41eb79:	int3   
  41eb7a:	mov    gs,WORD PTR [ebx+0x7e5c3464]
  41eb80:	inc    eax
  41eb81:	dec    esp
  41eb82:	and    esp,DWORD PTR [ebx-0x58bd67fc]
  41eb88:	jp     0x41eb94
  41eb8a:	pop    eax
  41eb8b:	mov    esi,0xd5d6d954
  41eb90:	xchg   BYTE PTR [edx+0x4a015d24],ah
  41eb96:	xchg   BYTE PTR es:[esi+0x7ab56a50],dl
  41eb9d:	adc    DWORD PTR [edx+0x7baac0ac],ecx
  41eba3:	lea    ebp,[edx+ecx*1-0x16a1dd59]
  41ebaa:	sub    al,0xad
  41ebac:	inc    esi
  41ebad:	repnz ins DWORD PTR es:[edi],dx
  41ebaf:	push   ss
  41ebb0:	popa   
  41ebb1:	nop
  41ebb2:	adc    eax,esi
  41ebb4:	mov    edi,0x1371f50f
  41ebb9:	sti    
  41ebba:	out    0xb4,eax
  41ebbc:	rol    cl,1
  41ebbe:	or     ebp,edi
  41ebc0:	data16 and al,0x49
  41ebc3:	pop    ss
  41ebc4:	dec    ebx
  41ebc5:	sub    DWORD PTR [ebx-0x16],ecx
  41ebc8:	mov    dl,0xa7
  41ebca:	cmp    eax,DWORD PTR ds:0x34502646
  41ebd0:	cmp    BYTE PTR [eax+0x33],0xfb
  41ebd4:	into   
  41ebd5:	adc    al,0x63
  41ebd7:	add    DWORD PTR [edi-0x61],ebp
  41ebda:	lahf   
  41ebdb:	call   0x7292:0x59bbce01
  41ebe2:	xor    DWORD PTR [edx-0x5abdda02],ecx
  41ebe8:	in     eax,0x19
  41ebea:	sub    DWORD PTR [edx-0x619fc219],0x74635bd5
  41ebf4:	in     eax,dx
  41ebf5:	inc    bh
  41ebf7:	(bad)  
  41ebf8:	jecxz  0x41ec60
  41ebfa:	test   DWORD PTR [edx+0x4a],esi
  41ebfd:	daa    
  41ebfe:	sub    eax,DWORD PTR [edx-0x7b6920bb]
  41ec04:	leave  
  41ec05:	pop    ds
  41ec06:	repz dec ax
  41ec09:	and    al,0xbc
  41ec0b:	pop    edi
  41ec0c:	mov    DWORD PTR [edx+0x2d],edi
  41ec0f:	inc    esp
  41ec10:	jbe    0x41ebbf
  41ec12:	inc    esp
  41ec13:	push   ebx
  41ec14:	mov    ch,0x9d
  41ec16:	pusha  
  41ec17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec18:	(bad)  
  41ec19:	dec    edi
  41ec1a:	lds    ebx,FWORD PTR [ecx+0x32]
  41ec1d:	xchg   ecx,eax
  41ec1e:	sbb    cl,BYTE PTR [ebx+0x6]
  41ec21:	adc    edx,DWORD PTR [edi]
  41ec23:	pop    ebp
  41ec24:	sbb    al,BYTE PTR [esp+eiz*2]
  41ec27:	add    eax,0x4d0b2c6b
  41ec2c:	push   edx
  41ec2d:	xchg   ebp,eax
  41ec2e:	repz jle 0x41ec5a
  41ec31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec32:	mov    ebx,0x64530c88
  41ec37:	shl    ah,cl
  41ec39:	jg     0x41ec27
  41ec3b:	fdiv   QWORD PTR [eax+0x6b]
  41ec3e:	lds    esi,FWORD PTR [ecx+0x17]
  41ec41:	jo     0x41ec3a
  41ec43:	add    ebp,DWORD PTR [ecx+0x75ef456d]
  41ec49:	imul   ecx,DWORD PTR ds:0x4673cac6,0x1572d1b5
  41ec53:	push   esi
  41ec54:	mov    al,ds:0x8604dbf3
  41ec59:	xchg   BYTE PTR [edx+0x0],al
  41ec5c:	push   ds
  41ec5d:	add    al,0xa7
  41ec5f:	(bad)  
  41ec60:	mov    edi,0xf6dd7ee7
  41ec65:	jp     0x41ec30
  41ec67:	push   esi
  41ec68:	xchg   edx,eax
  41ec69:	add    eax,0x698d9a31
  41ec6e:	add    DWORD PTR [eax],eax
  41ec70:	xchg   DWORD PTR [edx],eax
  41ec72:	add    BYTE PTR [eax],al
  41ec74:	push   cs
  41ec75:	mov    ch,0xb6
  41ec77:	sbb    dh,BYTE PTR ds:0x2a876d9e
  41ec7d:	cmc    
  41ec7e:	mov    ch,0x20
  41ec80:	ds scas al,BYTE PTR es:[edi]
  41ec82:	mov    WORD PTR [ecx+esi*4],es
  41ec85:	shl    BYTE PTR ds:0xcd628d32,cl
  41ec8b:	mov    eax,0x3961ae21
  41ec90:	sbb    esp,DWORD PTR [esi]
  41ec92:	in     al,0x8b
  41ec94:	cs scas al,BYTE PTR es:[edi]
  41ec96:	popf   
  41ec97:	ins    BYTE PTR es:[edi],dx
  41ec98:	xchg   edi,eax
  41ec99:	sbb    eax,esi
  41ec9b:	mov    ds:0x7af98521,al
  41eca0:	push   ecx
  41eca1:	mov    BYTE PTR [ebx+0x31],dl
  41eca4:	dec    ebp
  41eca5:	or     bl,BYTE PTR [ebx-0x2fd286c]
  41ecab:	push   ebx
  41ecac:	xchg   edx,eax
  41ecad:	xor    eax,0xca7f191e
  41ecb2:	hlt    
  41ecb3:	xchg   ebx,eax
  41ecb4:	out    dx,al
  41ecb5:	stc    
  41ecb6:	js     0x41ec4c
  41ecb8:	inc    esi
  41ecb9:	lahf   
  41ecba:	icebp  
  41ecbb:	ins    BYTE PTR es:[edi],dx
  41ecbc:	push   esi
  41ecbd:	jo     0x41ed11
  41ecbf:	add    al,0xea
  41ecc1:	ins    DWORD PTR es:[edi],dx
  41ecc2:	xchg   edx,eax
  41ecc3:	into   
  41ecc4:	clc    
  41ecc5:	in     eax,0xc9
  41ecc7:	jns    0x41ecb7
  41ecc9:	push   esp
  41ecca:	pop    ds
  41eccb:	rcr    BYTE PTR [eax-0x2b],cl
  41ecce:	add    DWORD PTR [ebx-0x26],0x3
  41ecd2:	jbe    0x41ec5c
  41ecd4:	je     0x41ecb9
  41ecd6:	xchg   DWORD PTR [ebx],esp
  41ecd8:	push   edi
  41ecd9:	loop   0x41ecaf
  41ecdb:	pop    ecx
  41ecdc:	xchg   edi,eax
  41ecdd:	leave  
  41ecde:	push   es
  41ecdf:	retf   0x4047
  41ece2:	sbb    al,0xd1
  41ece4:	pop    edi
  41ece5:	enter  0x5e37,0x1d
  41ece9:	in     al,0x6
  41eceb:	or     al,0x6b
  41eced:	(bad)  
  41ecee:	jne    0x41ece5
  41ecf0:	retf   
  41ecf1:	adc    dl,BYTE PTR [esi]
  41ecf3:	dec    eax
  41ecf4:	cmp    al,0x9d
  41ecf6:	pop    esi
  41ecf7:	jp     0x41ec93
  41ecf9:	xor    DWORD PTR [eax],edx
  41ecfb:	pop    ecx
  41ecfc:	aaa    
  41ecfd:	adc    BYTE PTR [ecx],0xb0
  41ed00:	pop    ebx
  41ed01:	xchg   esi,eax
  41ed02:	push   ds
  41ed03:	repnz shl DWORD PTR [ecx+ebp*1],cl
  41ed07:	jge    0x41ed74
  41ed09:	mov    al,ds:0x9e2d854c
  41ed0e:	scas   al,BYTE PTR es:[edi]
  41ed0f:	les    ecx,FWORD PTR [edi-0x3f]
  41ed12:	jns    0x41ed11
  41ed14:	out    dx,al
  41ed15:	js     0x41ed30
  41ed17:	rcl    BYTE PTR [ebx-0x7f],cl
  41ed1a:	stc    
  41ed1b:	adc    esp,DWORD PTR [ebx+edi*2-0x23]
  41ed1f:	lock cmp DWORD PTR [edx-0x10a7708a],ebx
  41ed26:	lea    esp,[esi]
  41ed28:	stc    
  41ed29:	push   0xce916651
  41ed2e:	js     0x41ecb2
  41ed30:	adc    ch,bl
  41ed32:	sub    DWORD PTR [ecx-0x32],esi
  41ed35:	cdq    
  41ed36:	inc    ebp
  41ed37:	mov    ecx,0x1e71be80
  41ed3c:	mov    ds:0x113bc381,eax
  41ed41:	inc    ebx
  41ed42:	xor    al,0xf4
  41ed44:	or     al,0x1f
  41ed46:	adc    BYTE PTR [ebx],bl
  41ed48:	push   es
  41ed49:	fisttp DWORD PTR [edi]
  41ed4b:	jo     0x41ed3b
  41ed4d:	(bad)  [ebx-0x23]
  41ed50:	sub    eax,0x995c287
  41ed55:	xor    DWORD PTR [eax-0x4a],0xffffffaf
  41ed59:	gs aas 
  41ed5b:	push   esp
  41ed5c:	cmp    al,ah
  41ed5e:	popf   
  41ed5f:	icebp  
  41ed60:	das    
  41ed61:	(bad)  
  41ed62:	neg    DWORD PTR [ebx+0x732065be]
  41ed68:	xchg   esi,eax
  41ed69:	xchg   DWORD PTR [edi+0x64],esi
  41ed6c:	dec    ecx
  41ed6d:	(bad)  
  41ed6e:	cmp    esp,DWORD PTR [ecx]
  41ed70:	mov    bl,0x64
  41ed72:	add    dl,BYTE PTR [esi]
  41ed74:	ror    DWORD PTR [esi],0x29
  41ed77:	mov    bh,0xfb
  41ed79:	rcr    DWORD PTR [eax-0x1b6407f1],0x84
  41ed80:	or     eax,0xdb33ba74
  41ed85:	gs loopne 0x41ed92
  41ed88:	inc    esi
  41ed89:	jnp    0x41ede7
  41ed8b:	stos   BYTE PTR es:[edi],al
  41ed8c:	pop    ss
  41ed8d:	ret    0x3ba0
  41ed90:	inc    esi
  41ed91:	add    BYTE PTR [edi+ebp*2+0x2687778f],bh
  41ed98:	dec    ebp
  41ed99:	(bad)  
  41ed9a:	sti    
  41ed9b:	mov    eax,ds:0xf979bbc9
  41eda0:	lahf   
  41eda1:	or     eax,0x777ba86c
  41eda6:	inc    eax
  41eda7:	add    esi,DWORD PTR [eax]
  41eda9:	cwde   
  41edaa:	or     bl,BYTE PTR [ecx+0x40]
  41edad:	psubsw mm1,QWORD PTR [edi*8-0x229722a8]
  41edb5:	mov    esp,0x1466cd5e
  41edba:	xchg   esi,eax
  41edbb:	cdq    
  41edbc:	inc    esi
  41edbd:	push   edx
  41edbe:	sub    DWORD PTR [ecx-0x11381af4],0x852ca74c
  41edc8:	ror    BYTE PTR [edi+0x5b],cl
  41edcb:	push   edx
  41edcc:	xchg   edx,eax
  41edcd:	imul   BYTE PTR ds:0x6689325b
  41edd3:	mov    al,BYTE PTR [ebp+0x70]
  41edd6:	(bad)  
  41edd7:	lods   al,BYTE PTR ds:[esi]
  41edd8:	adc    cl,BYTE PTR ds:0x1e15938a
  41edde:	adc    esi,DWORD PTR [edx+0x4d450ca8]
  41ede4:	adc    DWORD PTR [eax+ecx*4-0x4a],esi
  41ede8:	std    
  41ede9:	push   ecx
  41edea:	xor    BYTE PTR [edx-0x9],ah
  41eded:	fimul  DWORD PTR [edi-0x59]
  41edf0:	dec    edx
  41edf1:	xor    al,0xc2
  41edf3:	(bad)  
  41edf4:	pop    ecx
  41edf5:	jns    0x41ed98
  41edf7:	adc    cl,bh
  41edf9:	js     0x41edd4
  41edfb:	mov    esi,DWORD PTR [esi]
  41edfd:	pop    ebx
  41edfe:	xchg   ebx,eax
  41edff:	and    eax,0xaf7b45f4
  41ee04:	push   ss
  41ee05:	sahf   
  41ee06:	fs mov eax,0x34bb461e
  41ee0c:	dec    edi
  41ee0d:	cmp    BYTE PTR [eax+0x7c],ch
  41ee10:	mov    ecx,0x610226fa
  41ee15:	stos   BYTE PTR es:[edi],al
  41ee16:	int    0xa5
  41ee18:	and    dh,BYTE PTR ds:0xc4b7a862
  41ee1e:	cmp    dl,BYTE PTR [ebp+0x4d7a699b]
  41ee24:	dec    esp
  41ee25:	mov    edx,0x996ae59a
  41ee2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee2b:	pop    edi
  41ee2c:	outs   dx,DWORD PTR ds:[esi]
  41ee2d:	mov    ah,0x62
  41ee2f:	je     0x41edb4
  41ee31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee32:	push   edx
  41ee33:	sub    ch,BYTE PTR [edx+0x74]
  41ee36:	cmp    edx,DWORD PTR [edi-0x6c3e3405]
  41ee3c:	out    dx,eax
  41ee3d:	xor    eax,0x7f7be3e9
  41ee42:	mov    ecx,0xc4db6f85
  41ee47:	xchg   edx,eax
  41ee48:	push   esp
  41ee49:	and    DWORD PTR [edx-0x3e4b74de],0x9d156c12
  41ee53:	fs xchg ebx,eax
  41ee55:	(bad)  
  41ee56:	mov    edi,0x9886c9b1
  41ee5b:	push   esp
  41ee5c:	lods   al,BYTE PTR ds:[esi]
  41ee5d:	pop    es
  41ee5e:	push   es
  41ee5f:	and    ebx,ebx
  41ee61:	in     al,dx
  41ee62:	jo     0x41ee56
  41ee64:	stos   BYTE PTR es:[edi],al
  41ee65:	data16 mov ah,0x57
  41ee68:	les    ebp,FWORD PTR [ebp+ecx*1-0x79790de2]
  41ee6f:	inc    eax
  41ee70:	stos   BYTE PTR es:[edi],al
  41ee71:	sti    
  41ee72:	pushf  
  41ee73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee74:	or     ax,0xd86e
  41ee78:	cmp    eax,0x8c7c7ca5
  41ee7d:	es nop
  41ee7f:	dec    ebx
  41ee80:	and    BYTE PTR [edi+0x25b01c27],cl
  41ee86:	pop    edi
  41ee87:	or     eax,0x20ee4b13
  41ee8c:	adc    al,0xa9
  41ee8e:	xchg   edi,eax
  41ee8f:	popf   
  41ee90:	mov    ah,0xd1
  41ee92:	pop    edi
  41ee93:	xchg   esi,eax
  41ee94:	out    dx,al
  41ee95:	cmp    al,0x33
  41ee97:	int    0x95
  41ee99:	(bad)  
  41ee9b:	and    cl,BYTE PTR [edx]
  41ee9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee9e:	std    
  41ee9f:	in     al,0x14
  41eea1:	ins    DWORD PTR es:[edi],dx
  41eea2:	jno    0x41eedb
  41eea4:	jle    0x41eea0
  41eea6:	xchg   DWORD PTR [edi+0x3d4beaf3],edi
  41eeac:	xchg   BYTE PTR [esi+0x17119a4],cl
  41eeb2:	mov    eax,0x73b9d343
  41eeb7:	data16 into 
  41eeb9:	add    DWORD PTR [ecx+0x473ed1e8],edi
  41eebf:	cmp    cl,BYTE PTR [edi+0x6e]
  41eec2:	pop    ebx
  41eec3:	sar    BYTE PTR [edi],0x81
  41eec6:	ret    0x8da
  41eec9:	in     al,0xda
  41eecb:	(bad)  
  41eecc:	mov    ecx,0xd20465e1
  41eed1:	pop    edi
  41eed2:	mov    ebp,0x8095bde0
  41eed7:	and    dh,BYTE PTR [esi+ebx*1]
  41eeda:	and    BYTE PTR [edx],dh
  41eedc:	mov    esi,0x21c775c0
  41eee1:	push   0xffffffa0
  41eee3:	popf   
  41eee4:	in     eax,dx
  41eee5:	rcl    DWORD PTR [ebx+eiz*8+0x62],cl
  41eee9:	out    0x4,eax
  41eeeb:	add    al,0x1b
  41eeed:	jno    0x41ef1e
  41eeef:	pop    edx
  41eef0:	jns    0x41ee90
  41eef2:	xchg   esi,eax
  41eef3:	mov    eax,ds:0x18a824e3
  41eef8:	rol    dl,0xfc
  41eefb:	add    BYTE PTR [eax-0x77],bh
  41eefe:	hlt    
  41eeff:	mov    al,0xf5
  41ef01:	std    
  41ef02:	jl     0x41eecd
  41ef04:	dec    edi
  41ef05:	pop    ds
  41ef06:	cmp    DWORD PTR [ebx+0x54],ebp
  41ef09:	sbb    edi,DWORD PTR [edx-0x5f]
  41ef0c:	adc    al,0x6c
  41ef0e:	add    DWORD PTR [eax],eax
  41ef10:	xchg   DWORD PTR [edx],eax
  41ef12:	add    BYTE PTR [eax],al
  41ef14:	aas    
  41ef15:	jbe    0x41ef1f
  41ef17:	or     eax,0x74d9795c
  41ef1c:	push   eax
  41ef1d:	xchg   ebx,eax
  41ef1e:	ficomp WORD PTR [ebx]
  41ef20:	(bad)  
  41ef21:	or     esp,DWORD PTR [edx-0x3f2e6ab6]
  41ef27:	cwde   
  41ef28:	ret    
  41ef29:	retf   0x3559
  41ef2c:	mov    ebx,0x7fb4d546
  41ef31:	out    0x1c,al
  41ef33:	push   esi
  41ef34:	sub    ecx,DWORD PTR [edx+0x2537b9d]
  41ef3a:	(bad)
  41ef3d:	rol    DWORD PTR [edx-0x77f3aa00],1
  41ef43:	cs and eax,0x64237abd
  41ef49:	pop    eax
  41ef4a:	fwait
  41ef4b:	int    0x77
  41ef4d:	and    ecx,DWORD PTR [esi+0x7eeeaf99]
  41ef53:	rcr    DWORD PTR [esi],cl
  41ef55:	imul   edx,DWORD PTR [eax+0x2650abaf],0xffffffb4
  41ef5c:	xchg   ebx,eax
  41ef5d:	call   0x595c4082
  41ef62:	jmp    0xeee91b50
  41ef67:	cs loopne 0x41efd7
  41ef6a:	cmp    ebp,DWORD PTR [eax-0xdcb5346]
  41ef70:	xchg   esp,ebp
  41ef72:	fdivr  st,st(0)
  41ef74:	and    edx,DWORD PTR [eax]
  41ef76:	ror    DWORD PTR [ebp+0x3e],cl
  41ef79:	shl    edx,1
  41ef7b:	or     al,0xb
  41ef7d:	xchg   ebx,eax
  41ef7e:	mov    ah,0x1
  41ef80:	jae    0x41ef8c
  41ef82:	adc    dh,bl
  41ef84:	and    al,0x54
  41ef86:	addr16 dec edx
  41ef88:	or     eax,0x6f46f505
  41ef8d:	das    
  41ef8e:	enter  0x933a,0x12
  41ef92:	dec    esi
  41ef93:	mov    esi,0x9f3f2f3d
  41ef98:	mov    esi,0xaac5e1b1
  41ef9d:	dec    esi
  41ef9e:	ds stc 
  41efa0:	hlt    
  41efa1:	(bad)  
  41efa2:	fsubr  st,st(5)
  41efa4:	or     ebx,DWORD PTR [ebp-0x5b]
  41efa7:	adc    ebp,DWORD PTR [ebx]
  41efa9:	push   eax
  41efaa:	mov    BYTE PTR [edi-0x56f3e941],cl
  41efb0:	push   ebp
  41efb1:	xlat   BYTE PTR ds:[ebx]
  41efb2:	mov    al,ds:0xc7e7c58b
  41efb7:	or     eax,0xcb0443ae
  41efbc:	in     eax,0x99
  41efbe:	iret   
  41efbf:	in     eax,0xe1
  41efc1:	sub    esi,DWORD PTR [esi+0x10d686f9]
  41efc7:	ins    DWORD PTR es:[edi],dx
  41efc8:	arpl   WORD PTR [ebx-0x1e],ax
  41efcb:	sub    ecx,0x5e
  41efce:	(bad)  
  41efcf:	loopne 0x41ef57
  41efd1:	loope  0x41f051
  41efd3:	(bad)  
  41efd4:	scas   eax,DWORD PTR es:[edi]
  41efd5:	sar    DWORD PTR [edx+0x180bbb07],cl
  41efdb:	arpl   WORD PTR [di-0x36],dx
  41efdf:	popf   
  41efe0:	push   edx
  41efe1:	ss xor eax,0x9ecf7eff
  41efe7:	je     0x41ef9d
  41efe9:	mov    ds:0xa9c094c5,al
  41efee:	jns    0x41efa6
  41eff0:	push   0x75
  41eff2:	aad    0x5f
  41eff4:	and    al,0xea
  41eff6:	dec    eax
  41eff7:	adc    al,0x95
  41eff9:	pop    ecx
  41effa:	neg    DWORD PTR [ebx-0x2dc5bd75]
  41f000:	sti    
  41f001:	jl     0x41f072
  41f003:	hlt    
  41f004:	sbb    BYTE PTR [ebx+0x43],cl
  41f007:	out    0xdd,al
  41f009:	jmp    0x41f00d
  41f00b:	lea    eax,[edx]
  41f00d:	fidivr WORD PTR [ebx+0x59]
  41f010:	scas   al,BYTE PTR es:[edi]
  41f011:	push   es
  41f012:	je     0x41f07e
  41f014:	xor    eax,0x2489eb39
  41f019:	fistp  QWORD PTR [edx]
  41f01b:	lods   al,BYTE PTR ds:[esi]
  41f01c:	push   ss
  41f01d:	sbb    cl,BYTE PTR [ebx-0x62d10710]
  41f023:	mul    DWORD PTR es:[edi+0x5]
  41f027:	xor    BYTE PTR [eax-0x6f],bh
  41f02a:	dec    ebp
  41f02b:	sub    esp,edi
  41f02d:	adc    eax,0x98a81d6b
  41f032:	mov    WORD PTR [edx+0x70],?
  41f035:	hlt    
  41f036:	stos   DWORD PTR es:[edi],eax
  41f037:	std    
  41f038:	xchg   ch,dl
  41f03a:	aad    0xbb
  41f03c:	hlt    
  41f03d:	push   esi
  41f03e:	mov    ah,0xe0
  41f040:	out    0xb4,al
  41f042:	sar    BYTE PTR [eax+0x30],0xdc
  41f046:	mov    eax,0xaadaef57
  41f04b:	xor    ch,0x6c
  41f04e:	mov    edx,esi
  41f050:	fldln2 
  41f052:	loope  0x41f019
  41f054:	arpl   WORD PTR [ebp+0x30],bx
  41f057:	sar    DWORD PTR [edx+0x5303fe57],1
  41f05d:	or     al,0x8c
  41f05f:	mov    eax,0x12762a77
  41f064:	sti    
  41f065:	stc    
  41f066:	retf   
  41f067:	int    0x9a
  41f069:	jmp    0x41f017
  41f06b:	into   
  41f06c:	or     dl,cl
  41f06e:	aad    0x6b
  41f070:	pop    eax
  41f071:	mov    al,ds:0x4ddcebfa
  41f076:	and    esp,ebx
  41f078:	aaa    
  41f079:	stos   DWORD PTR es:[edi],eax
  41f07a:	inc    edi
  41f07b:	inc    ebp
  41f07c:	dec    esp
  41f07d:	push   es
  41f07e:	(bad)
  41f081:	cmp    DWORD PTR [eax-0x60],esi
  41f084:	sub    al,BYTE PTR [ebx]
  41f086:	pop    ss
  41f087:	mov    dl,BYTE PTR [esi]
  41f089:	outs   dx,DWORD PTR ds:[esi]
  41f08a:	push   ds
  41f08b:	dec    ebp
  41f08c:	inc    edi
  41f08d:	push   0xffffffe5
  41f08f:	loope  0x41f02a
  41f091:	shr    BYTE PTR ds:[ebp-0x36],1
  41f095:	add    al,0x66
  41f097:	add    eax,ebx
  41f099:	jl     0x41f057
  41f09b:	test   BYTE PTR [esi],0x85
  41f09e:	mov    ecx,0x24beaa97
  41f0a3:	(bad)  
  41f0a4:	mov    dh,0xab
  41f0a6:	jbe    0x41f121
  41f0a8:	test   eax,0xc19f362f
  41f0ad:	adc    al,0x2b
  41f0af:	lods   al,BYTE PTR ds:[esi]
  41f0b0:	adc    BYTE PTR [eax-0x38],0x1c
  41f0b4:	aad    0x8c
  41f0b6:	mov    dl,0xa4
  41f0b8:	inc    eax
  41f0b9:	sbb    edx,DWORD PTR [edx+0x15]
  41f0bc:	stc    
  41f0bd:	daa    
  41f0be:	cmp    bh,0xf6
  41f0c1:	fs push ss
  41f0c3:	push   edi
  41f0c4:	mov    ah,0x60
  41f0c6:	scas   al,BYTE PTR es:[edi]
  41f0c7:	ss pop ebp
  41f0ca:	ds in  eax,dx
  41f0cc:	pop    ds
  41f0cd:	into   
  41f0ce:	sbb    BYTE PTR [esi+edi*2],bh
  41f0d1:	xchg   edx,eax
  41f0d2:	cli    
  41f0d3:	lods   al,BYTE PTR ds:[esi]
  41f0d4:	mov    ebx,0xf4b0209a
  41f0d9:	ret    
  41f0da:	scas   al,BYTE PTR es:[edi]
  41f0db:	pop    es
  41f0dc:	mov    al,0xb
  41f0de:	mov    ebx,0x823e854d
  41f0e3:	sub    bl,BYTE PTR [eax-0x25]
  41f0e6:	aad    0xbf
  41f0e8:	stos   DWORD PTR es:[edi],eax
  41f0e9:	loope  0x41f0fa
  41f0eb:	bound  ebp,QWORD PTR [edx]
  41f0ed:	fild   DWORD PTR [esi-0x38f937f1]
  41f0f3:	lods   eax,DWORD PTR es:[esi]
  41f0f5:	sti    
  41f0f6:	in     al,0xc4
  41f0f8:	and    BYTE PTR [ecx],ah
  41f0fa:	inc    esi
  41f0fb:	lds    edi,FWORD PTR [eax]
  41f0fd:	add    al,0xbe
  41f0ff:	lods   eax,DWORD PTR ds:[esi]
  41f100:	out    dx,al
  41f101:	and    edx,DWORD PTR [ebp+0x3f]
  41f104:	imul   edx,DWORD PTR [edx-0x22a7afd4],0xa96c5a40
  41f10e:	adc    bh,BYTE PTR [ebp+0x19]
  41f111:	fadd   st(4),st
  41f113:	sbb    al,0x2b
  41f115:	rcr    BYTE PTR [edx-0x3d484ce0],0xb5
  41f11c:	pop    ebx
  41f11d:	push   eax
  41f11e:	fiadd  DWORD PTR [edi-0x45]
  41f121:	sub    edi,DWORD PTR [ebx-0x15]
  41f124:	xchg   BYTE PTR [edi+0x70],cl
  41f127:	xor    BYTE PTR [ecx-0x73],bl
  41f12a:	test   DWORD PTR es:[eax-0x29],eax
  41f12e:	call   0x4d52909f
  41f133:	adc    al,BYTE PTR [ecx]
  41f135:	mov    ds:0xecc4ebe1,al
  41f13a:	fs push edi
  41f13c:	and    eax,0x3b2b7f55
  41f141:	cmp    ecx,eax
  41f143:	xor    ebx,DWORD PTR [di]
  41f146:	(bad)  
  41f147:	icebp  
  41f148:	add    DWORD PTR [edx-0x10],ecx
  41f14b:	jmp    0xe270628a
  41f150:	popf   
  41f151:	xor    edi,DWORD PTR [eax-0x1a]
  41f154:	cmp    esi,ecx
  41f156:	out    0x7f,al
  41f158:	mov    ecx,0x70803579
  41f15d:	pop    edx
  41f15e:	sub    eax,0xfe3f166e
  41f163:	dec    ebp
  41f164:	and    BYTE PTR [esi-0x3e5a85c4],bh
  41f16a:	fnstsw WORD PTR [ebp-0x72c427ed]
  41f170:	in     al,dx
  41f171:	icebp  
  41f172:	pop    ebx
  41f173:	pop    edx
  41f174:	lock sbb eax,0xcb8fbfe8
  41f17a:	call   0x6141ef39
  41f17f:	mov    bh,0x1c
  41f181:	fs icebp 
  41f183:	mov    DWORD PTR ds:0x295bdcf5,esi
  41f189:	adc    DWORD PTR [ecx+0x6e],0x53d96e02
  41f190:	scas   al,BYTE PTR es:[edi]
  41f191:	pop    ebp
  41f192:	shl    DWORD PTR [edi-0x5056bf28],cl
  41f198:	cmp    ebp,DWORD PTR [eax]
  41f19a:	inc    edx
  41f19b:	add    BYTE PTR [edx+ecx*4-0x49],bl
  41f19f:	imul   esi,edi,0x7f
  41f1a2:	fdivr  QWORD PTR [edi-0x2621f8a7]
  41f1a8:	and    esp,DWORD PTR [esi+ecx*4]
  41f1ab:	cwde   
  41f1ac:	fwait
  41f1ad:	outs   dx,BYTE PTR ds:[esi]
  41f1ae:	add    DWORD PTR [eax],eax
  41f1b0:	xchg   DWORD PTR [edx],eax
  41f1b2:	add    BYTE PTR [eax],al
  41f1b4:	push   edi
  41f1b5:	pop    ebp
  41f1b6:	fstp   QWORD PTR [eax-0x41b91bd8]
  41f1bc:	jmp    0x41f1b5
  41f1be:	pushf  
  41f1bf:	xor    DWORD PTR [edi-0x254ca9ee],esi
  41f1c5:	mov    dh,0xd9
  41f1c7:	push   esp
  41f1c8:	mov    esi,0x871eff1b
  41f1cd:	pop    ebp
  41f1ce:	out    0x42,eax
  41f1d0:	int3   
  41f1d1:	inc    eax
  41f1d2:	ins    DWORD PTR es:[edi],dx
  41f1d3:	rol    BYTE PTR [eax],1
  41f1d5:	inc    edx
  41f1d6:	add    ebp,DWORD PTR [ebx]
  41f1d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d9:	add    BYTE PTR [ebx-0x5245cae4],ah
  41f1df:	out    0x44,al
  41f1e1:	lahf   
  41f1e2:	and    ebp,DWORD PTR [edx-0x681e0d6b]
  41f1e8:	mov    eax,ds:0xc9a2d4dc
  41f1ed:	test   DWORD PTR [edi+0x2f56931],ecx
  41f1f3:	mov    esi,ebx
  41f1f5:	je     0x41f1ac
  41f1f7:	xchg   ecx,eax
  41f1f8:	lods   al,BYTE PTR ds:[esi]
  41f1f9:	or     BYTE PTR [edx+0x10c6765],0x6e
  41f200:	leave  
  41f201:	push   ds
  41f202:	aaa    
  41f203:	jl     0x41f26b
  41f205:	jg     0x41f1e4
  41f207:	es and eax,0xd4959a73
  41f20d:	sbb    BYTE PTR [ebx],al
  41f20f:	call   0xcaf24ff0
  41f214:	in     eax,dx
  41f215:	(bad)  
  41f216:	sub    eax,0x2df03b0e
  41f21b:	sub    DWORD PTR [edi-0x7f],edi
  41f21e:	mov    bl,0x5b
  41f220:	mov    ch,0x63
  41f222:	inc    ecx
  41f223:	je     0x41f213
  41f225:	out    dx,eax
  41f226:	push   0xf007d8f1
  41f22b:	jmp    0x41f26f
  41f22d:	mov    WORD PTR [eax-0x60],es
  41f230:	fiadd  DWORD PTR [edx-0x58c6d13b]
  41f236:	int3   
  41f237:	jae    0x41f1bc
  41f239:	mov    ebp,DWORD PTR [esi+0x14]
  41f23c:	es mov ecx,0x727d96ea
  41f242:	mov    esp,0x3fc64db5
  41f247:	cmp    al,BYTE PTR [ebx+0x4a63550e]
  41f24d:	mov    ch,0x63
  41f24f:	sti    
  41f250:	inc    ebx
  41f251:	cmp    DWORD PTR [ecx],ebx
  41f253:	daa    
  41f254:	and    ah,BYTE PTR [ecx]
  41f256:	in     al,dx
  41f257:	fisub  WORD PTR [ebx+esi*4]
  41f25a:	popa   
  41f25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f25c:	and    DWORD PTR [edx+ecx*8+0xb2f11c7],0xcb92ecd2
  41f267:	(bad)  
  41f268:	jle    0x41f264
  41f26a:	ss jg  0x41f280
  41f26d:	sub    DWORD PTR [eax],ecx
  41f26f:	(bad)  [ecx+edx*4+0x30]
  41f273:	sub    ch,bh
  41f275:	inc    ecx
  41f276:	dec    esi
  41f277:	rol    DWORD PTR [edx-0x45],1
  41f27a:	mov    ds,eax
  41f27c:	mov    ds:0x5b61745b,eax
  41f281:	stc    
  41f282:	xchg   ecx,eax
  41f283:	mov    bh,0xf8
  41f285:	mov    edi,0x9524be0b
  41f28a:	call   0x399176df
  41f28f:	mov    esi,0xf563c7c1
  41f294:	sub    DWORD PTR [edi-0x2f8ea440],ebp
  41f29a:	or     BYTE PTR [ebx],ah
  41f29c:	ret    
  41f29d:	cmp    esp,ebx
  41f29f:	push   0xffffff91
  41f2a1:	xor    eax,0x8094f92
  41f2a6:	cmp    esi,DWORD PTR [edi-0x18]
  41f2a9:	test   bh,ch
  41f2ab:	inc    eax
  41f2ac:	iret   
  41f2ad:	out    dx,eax
  41f2ae:	or     al,0x33
  41f2b0:	pusha  
  41f2b1:	jmp    0xb825:0x8301341f
  41f2b8:	push   ecx
  41f2b9:	mov    dl,0x1b
  41f2bb:	leavew 
  41f2bd:	je     0x41f2ee
  41f2bf:	ins    DWORD PTR es:[edi],dx
  41f2c0:	loopne 0x41f339
  41f2c2:	cld    
  41f2c3:	popf   
  41f2c4:	jo     0x41f343
  41f2c6:	arpl   WORD PTR [ebp-0x6f4eac4e],ax
  41f2cc:	adc    ch,BYTE PTR [eax+0x152b4b32]
  41f2d2:	xchg   edi,eax
  41f2d3:	test   ecx,esp
  41f2d5:	call   0xf3f7:0xebc428c7
  41f2dc:	mov    ds:0xcf1f3b90,eax
  41f2e1:	or     BYTE PTR [edi-0x4f],bl
  41f2e4:	xor    DWORD PTR [edx-0x43c780bf],ebp
  41f2ea:	lahf   
  41f2eb:	cmp    esp,ecx
  41f2ed:	or     DWORD PTR [edx+0x3ccd054b],0xffffffcc
  41f2f4:	pushf  
  41f2f5:	shl    BYTE PTR [ebp+0x8459c82],1
  41f2fb:	inc    esp
  41f2fc:	sbb    edx,DWORD PTR [edx+0x61985017]
  41f302:	pandn  mm4,QWORD PTR [ebp-0x21]
  41f306:	lods   al,BYTE PTR ds:[esi]
  41f307:	jnp    0x41f2d3
  41f309:	mov    ebp,0xb4d505e3
  41f30e:	push   ebx
  41f30f:	icebp  
  41f310:	outs   dx,DWORD PTR ds:[esi]
  41f311:	repz out dx,al
  41f313:	test   BYTE PTR [eax],0x4e
  41f316:	inc    esi
  41f317:	cmp    al,0xa8
  41f319:	repz add al,0x3d
  41f31c:	add    eax,0xa7664453
  41f321:	(bad)  [esi+0x45]
  41f324:	inc    edi
  41f325:	sbb    DWORD PTR [edx+0x55aa216f],edi
  41f32b:	mov    ecx,0x829bac95
  41f330:	inc    esp
  41f331:	and    DWORD PTR [eax-0x57],edi
  41f334:	ins    DWORD PTR es:[edi],dx
  41f335:	cwde   
  41f336:	add    dl,BYTE PTR [edi-0x75]
  41f339:	shl    DWORD PTR [edx+0x39],0xce
  41f33d:	jle    0x41f2fc
  41f33f:	repz pop edx
  41f341:	loop   0x41f37b
  41f343:	sub    al,0x65
  41f345:	into   
  41f346:	and    edx,edi
  41f348:	(bad)  
  41f34a:	xchg   ebp,eax
  41f34b:	ins    DWORD PTR es:[edi],dx
  41f34c:	mov    esi,0x8c528f1f
  41f351:	pop    esi
  41f352:	cld    
  41f353:	bound  ecx,QWORD PTR [eax]
  41f355:	shl    DWORD PTR [esi+0x7da37bfa],cl
  41f35b:	inc    esp
  41f35c:	and    DWORD PTR [edx+0x3c],ebp
  41f35f:	adc    al,0x4f
  41f361:	xchg   BYTE PTR [edx-0x58],dl
  41f364:	or     edx,DWORD PTR [ecx+0x60]
  41f367:	or     ebp,ebx
  41f369:	mov    edi,0x194f0cf8
  41f36e:	mov    BYTE PTR [edi-0x50],bl
  41f371:	push   edx
  41f372:	mov    al,0x4d
  41f374:	inc    edx
  41f375:	jns    0x41f372
  41f377:	mov    al,ds:0xe423a32c
  41f37c:	xchg   esp,eax
  41f37d:	das    
  41f37e:	test   DWORD PTR [edi+ecx*4+0x3f5a39f4],ebp
  41f385:	js     0x41f404
  41f387:	ret    0xc0e6
  41f38a:	sti    
  41f38b:	outs   dx,DWORD PTR es:[esi]
  41f38d:	mov    cl,0x26
  41f38f:	sbb    ebp,DWORD PTR [esi-0x24991dda]
  41f395:	jo     0x41f34f
  41f397:	mov    al,ds:0x9e5bc5b0
  41f39c:	idiv   DWORD PTR [edi+0x5f35ed40]
  41f3a2:	or     eax,0xcc071c1c
  41f3a7:	loop   0x41f38f
  41f3a9:	mov    edi,0x7ec17cb3
  41f3ae:	add    eax,0xd059cb5c
  41f3b3:	(bad)  
  41f3b4:	pop    ebx
  41f3b5:	cmp    dl,BYTE PTR [edx]
  41f3b7:	imul   eax,DWORD PTR [edx-0x55],0x1e17ff6c
  41f3be:	jns    0x41f3c3
  41f3c0:	jbe    0x41f422
  41f3c2:	or     eax,0xc1e0457b
  41f3c7:	and    DWORD PTR ds:0x6d3f7577,edx
  41f3cd:	mov    eax,0xcb86c03c
  41f3d2:	sbb    DWORD PTR [edi+0xd32fecf],esp
  41f3d8:	mov    ebp,0x3b3c14bb
  41f3dd:	and    eax,DWORD PTR [edi]
  41f3df:	outs   dx,BYTE PTR ds:[esi]
  41f3e0:	inc    ebx
  41f3e1:	push   0xffffffa1
  41f3e3:	or     BYTE PTR [edx+0x16],ch
  41f3e6:	sub    BYTE PTR [edx-0x1b021512],bh
  41f3ec:	ret    0x4f9c
  41f3ef:	mov    eax,ds:0x30fa5a2e
  41f3f4:	stos   DWORD PTR es:[edi],eax
  41f3f5:	inc    ecx
  41f3f6:	adc    DWORD PTR [edi],0xaa4cb109
  41f3fc:	inc    eax
  41f3fd:	mov    BYTE PTR [esi+0x38],bh
  41f400:	fcom   DWORD PTR [edx-0x54]
  41f403:	mov    edi,0x14ba503c
  41f408:	shr    BYTE PTR [eax-0x65],1
  41f40b:	scas   eax,DWORD PTR es:[edi]
  41f40c:	sub    BYTE PTR [edi+0x4f470bae],cl
  41f412:	iret   
  41f413:	call   FWORD PTR [edx+ecx*2]
  41f416:	mov    dh,0x9b
  41f418:	xor    dl,BYTE PTR [ecx]
  41f41a:	arpl   WORD PTR [eax+edx*8],dx
  41f41d:	fild   WORD PTR [esi-0xc]
  41f420:	sti    
  41f421:	jne    0x41f3b7
  41f423:	cmp    bl,al
  41f425:	fwait
  41f426:	jne    0x41f400
  41f428:	pop    ebp
  41f429:	out    0x9b,al
  41f42b:	pop    ss
  41f42c:	rcl    BYTE PTR [edi+0x6c32d2e7],0x77
  41f433:	pop    eax
  41f434:	ja     0x41f477
  41f436:	xor    eax,0xb134fcc
  41f43b:	add    BYTE PTR [edi-0x402578e6],ah
  41f441:	(bad)  
  41f443:	jg     0x41f3f1
  41f445:	pop    ss
  41f446:	aad    0x14
  41f448:	mov    esi,0x22bc5d1a
  41f44d:	jno    0x41f450
  41f44f:	add    BYTE PTR [edi-0x33fffffe],al
  41f455:	in     al,0x55
  41f457:	mov    es,WORD PTR [ecx]
  41f459:	loop   0x41f4c5
  41f45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f45c:	dec    ebp
  41f45d:	push   ebp
  41f45e:	pop    edi
  41f45f:	ficomp DWORD PTR [ecx-0x108c556b]
  41f465:	mov    cl,0x83
  41f467:	ins    DWORD PTR es:[edi],dx
  41f468:	dec    edx
  41f469:	lods   eax,DWORD PTR ds:[esi]
  41f46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f46b:	ins    BYTE PTR es:[edi],dx
  41f46c:	clc    
  41f46d:	popf   
  41f46e:	sar    DWORD PTR [edx+0x465dd010],0x82
  41f475:	aaa    
  41f476:	jecxz  0x41f482
  41f478:	xor    al,0xc3
  41f47a:	loop   0x41f404
  41f47c:	or     eax,0x972e540f
  41f481:	mov    ch,0x44
  41f483:	inc    edx
  41f484:	cmc    
  41f485:	iret   
  41f486:	xchg   ecx,eax
  41f487:	(bad)  
  41f488:	(bad)
  41f48b:	cmc    
  41f48c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f48d:	cmp    BYTE PTR [eax-0xa],cl
  41f490:	(bad)  
  41f491:	sub    BYTE PTR [ebx],ch
  41f493:	mov    ah,0xb9
  41f495:	jno    0x41f4d5
  41f497:	test   DWORD PTR [edi-0x66],esi
  41f49a:	mul    DWORD PTR [eax-0x76bf8c19]
  41f4a0:	and    al,0xa4
  41f4a2:	inc    eax
  41f4a3:	sub    ch,BYTE PTR [ecx-0x71]
  41f4a6:	dec    ebp
  41f4a7:	shr    BYTE PTR [esp+edi*1],1
  41f4aa:	mov    ebp,0xc588a610
  41f4af:	call   FWORD PTR [esi]
  41f4b1:	sti    
  41f4b2:	ret    0xdc4b
  41f4b5:	aas    
  41f4b6:	jnp    0x41f453
  41f4b8:	ins    BYTE PTR es:[edi],dx
  41f4b9:	mov    cl,0x43
  41f4bb:	xchg   ecx,eax
  41f4bc:	mov    ds:0x5fd65541,eax
  41f4c1:	pusha  
  41f4c2:	lods   al,BYTE PTR ds:[esi]
  41f4c3:	bound  esi,QWORD PTR [esi+0x78]
  41f4c6:	inc    esp
  41f4c7:	adc    eax,DWORD PTR ds:[ecx+edx*1+0xc6e8752]
  41f4cf:	jp     0x41f4dd
  41f4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4d2:	inc    ebp
  41f4d3:	es push ecx
  41f4d5:	arpl   sp,cx
  41f4d7:	sahf   
  41f4d8:	(bad)  
  41f4d9:	and    edi,ebp
  41f4db:	xchg   edi,eax
  41f4dc:	jmp    0x41f4f1
  41f4de:	in     al,0x7a
  41f4e0:	push   edx
  41f4e1:	retf   
  41f4e2:	jg     0x41f48c
  41f4e4:	mov    ebp,0xf491f33c
  41f4e9:	ret    0x9248
  41f4ec:	daa    
  41f4ed:	jmp    0x41f4bd
  41f4ef:	enter  0xb14,0xd
  41f4f3:	push   ecx
  41f4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f5:	or     BYTE PTR [eax-0x529aa900],bh
  41f4fb:	adc    eax,0xfc237f07
  41f500:	inc    ebx
  41f501:	pop    edi
  41f502:	xchg   DWORD PTR [esi-0x4e],edi
  41f505:	and    ebp,DWORD PTR [ecx]
  41f507:	jnp    0x41f558
  41f509:	jb     0x41f538
  41f50b:	loopne 0x41f54d
  41f50d:	sbb    ch,BYTE PTR [edi+ebp*4-0x49]
  41f511:	mov    al,0xbc
  41f513:	addr16 aaa 
  41f515:	and    eax,0x7f236c0d
  41f51a:	sub    BYTE PTR [esi],bh
  41f51c:	mov    ebx,0xc8ffe5bb
  41f521:	in     al,0xa
  41f523:	enter  0xe15f,0xf7
  41f527:	(bad)  [ebx]
  41f529:	(bad)  
  41f52b:	xchg   edi,eax
  41f52c:	mov    dh,0x6
  41f52e:	stos   BYTE PTR es:[edi],al
  41f52f:	add    DWORD PTR [ebx-0x3981d47a],ecx
  41f535:	test   DWORD PTR [ebx],0xf1e47df1
  41f53b:	lea    edi,[eax]
  41f53d:	adc    eax,0x75de21fb
  41f542:	(bad)  
  41f543:	cmp    ebp,esi
  41f545:	(bad)  [eax-0x24a77b75]
  41f54b:	loopne 0x41f564
  41f54d:	(bad)  
  41f54f:	jae    0x41f4d9
  41f551:	aad    0x80
  41f553:	mov    bh,0xdd
  41f555:	cld    
  41f556:	mov    ebp,0x3174f725
  41f55b:	and    bl,BYTE PTR [ebx+0x5d]
  41f55e:	and    al,0x7d
  41f560:	mov    ds:0xd17b1820,eax
  41f565:	or     dh,BYTE PTR [edi]
  41f567:	jg     0x41f5aa
  41f569:	mov    cl,0xea
  41f56b:	sub    DWORD PTR [eax+0x73],0xa07574a1
  41f572:	fnstenv [ebx]
  41f574:	jbe    0x41f538
  41f576:	adc    edx,DWORD PTR [ebx-0x67a71100]
  41f57c:	retf   
  41f57d:	fwait
  41f57e:	pusha  
  41f57f:	push   0x4e
  41f581:	arpl   dx,bp
  41f583:	jecxz  0x41f5cf
  41f585:	and    ah,bh
  41f587:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f588:	imul   edi,ecx,0x61
  41f58b:	adc    esp,DWORD PTR ds:0x4efe4786
  41f591:	dec    eax
  41f592:	scas   eax,DWORD PTR es:[edi]
  41f593:	shl    bl,0xde
  41f596:	add    ch,BYTE PTR [ebx]
  41f598:	xor    al,BYTE PTR [edi+0x4f]
  41f59b:	pop    ecx
  41f59c:	mov    ds:0x2ad8479d,eax
  41f5a1:	add    ch,BYTE PTR [edx+eax*1]
  41f5a4:	scas   eax,DWORD PTR es:[edi]
  41f5a5:	call   0xbbd:0xcf608382
  41f5ac:	sbb    dh,dl
  41f5ae:	out    dx,al
  41f5af:	xchg   ebp,esp
  41f5b1:	mov    esi,0xdbd95efd
  41f5b6:	data16 ja 0x41f601
  41f5b9:	push   edx
  41f5ba:	mov    ch,0x91
  41f5bc:	adc    eax,0xa231f5e4
  41f5c1:	rcr    DWORD PTR [ebx+0x9],1
  41f5c4:	dec    eax
  41f5c5:	nop
  41f5c6:	dec    ecx
  41f5c7:	jnp    0x41f613
  41f5c9:	push   0x1b
  41f5cb:	(bad)  
  41f5cd:	inc    edi
  41f5ce:	sub    esi,DWORD PTR [eax]
  41f5d0:	aaa    
  41f5d1:	stos   DWORD PTR es:[edi],eax
  41f5d2:	fld    st(3)
  41f5d4:	or     BYTE PTR [ebp+0x56106a20],ch
  41f5da:	leave  
  41f5db:	jle    0x41f651
  41f5dd:	std    
  41f5de:	test   BYTE PTR [esi-0x2d],cl
  41f5e1:	(bad)  
  41f5e3:	sar    eax,cl
  41f5e5:	in     al,0x26
  41f5e7:	mov    ch,0x84
  41f5e9:	in     al,dx
  41f5ea:	or     BYTE PTR [edi-0x2],ah
  41f5ed:	adc    al,BYTE PTR [edi+ecx*1-0x522280c7]
  41f5f4:	cmp    al,0xc2
  41f5f6:	jge    0x41f5d8
  41f5f8:	add    bh,bh
  41f5fa:	std    
  41f5fb:	push   ecx
  41f5fc:	pop    ds
  41f5fd:	call   0x29db:0x60a76cda
  41f604:	cdq    
  41f605:	mov    ebp,0x403a589e
  41f60a:	sub    BYTE PTR [ebx-0x31b116e2],al
  41f610:	push   ebx
  41f611:	ja     0x41f5c2
  41f613:	fs sbb edx,edi
  41f616:	xchg   edx,eax
  41f617:	and    DWORD PTR [edi+0x180dd641],esp
  41f61d:	add    al,0x88
  41f61f:	ficomp WORD PTR [edx+0x7dd96e59]
  41f625:	cmp    bh,BYTE PTR [edi]
  41f627:	aas    
  41f628:	sbb    BYTE PTR [esi],bh
  41f62a:	push   0x22
  41f62c:	add    eax,0xcb809ada
  41f631:	lods   al,BYTE PTR ds:[esi]
  41f632:	mov    BYTE PTR [eax+ebx*4],al
  41f635:	out    0x1b,al
  41f637:	pop    ds
  41f638:	das    
  41f639:	inc    ecx
  41f63a:	lea    ebx,[eax-0x5a]
  41f63d:	pop    ss
  41f63e:	mov    al,ds:0x7f26758b
  41f643:	sbb    al,0x7f
  41f645:	pop    ecx
  41f646:	cmp    BYTE PTR [esi+0x2250677b],bh
  41f64c:	inc    eax
  41f64d:	aaa    
  41f64e:	mov    BYTE PTR [edx+0x7a1d4317],ah
  41f654:	repz mov esi,0x822044f6
  41f65a:	(bad)  
  41f65b:	jge    0x41f627
  41f65d:	fldcw  WORD PTR [edi]
  41f65f:	pop    ss
  41f660:	gs sbb eax,0x257b622c
  41f666:	aad    0xab
  41f668:	mov    edx,0xc33dba20
  41f66d:	ror    DWORD PTR [ebx+0x77],cl
  41f670:	adc    al,0x52
  41f672:	in     al,dx
  41f673:	and    dl,BYTE PTR [ebp+0x42356923]
  41f679:	stos   DWORD PTR es:[edi],eax
  41f67a:	jmp    FWORD PTR [eax-0x17]
  41f67d:	jmp    FWORD PTR [edi+edi*1-0x2c6b3a47]
  41f684:	pop    eax
  41f685:	and    al,0x34
  41f687:	dec    edi
  41f688:	shl    DWORD PTR [ecx-0x10],cl
  41f68b:	xchg   ebp,eax
  41f68c:	rcr    BYTE PTR [eax-0x4],cl
  41f68f:	xchg   DWORD PTR [eax+ebp*1-0x43],ecx
  41f693:	call   0xe99:0x32783908
  41f69a:	stos   BYTE PTR es:[edi],al
  41f69b:	dec    esi
  41f69c:	retf   
  41f69d:	bound  esp,QWORD PTR [ebx+0x46]
  41f6a0:	inc    eax
  41f6a1:	mov    edi,0x46bde3be
  41f6a6:	mov    ebx,0x18cdeaf0
  41f6ab:	dec    ebp
  41f6ac:	or     bh,BYTE PTR [edi-0x183a95f5]
  41f6b2:	int3   
  41f6b3:	js     0x41f6a8
  41f6b5:	(bad)  
  41f6b6:	dec    ebp
  41f6b7:	jmp    0x41f6aa
  41f6b9:	mov    eax,0x7200b980
  41f6be:	ins    BYTE PTR es:[edi],dx
  41f6bf:	jo     0x41f665
  41f6c1:	cld    
  41f6c2:	pop    ds
  41f6c3:	ss nop
  41f6c5:	pushf  
  41f6c6:	test   eax,0xaa229a63
  41f6cb:	stos   BYTE PTR es:[edi],al
  41f6cc:	cmp    eax,0x105aff5c
  41f6d1:	sub    al,0x93
  41f6d3:	add    dl,ch
  41f6d5:	jo     0x41f671
  41f6d7:	outs   dx,DWORD PTR ds:[esi]
  41f6d8:	inc    ecx
  41f6d9:	jmp    ebx
  41f6db:	add    BYTE PTR [ebp-0x15b01f1],bl
  41f6e1:	cmc    
  41f6e2:	fistp  QWORD PTR [edi]
  41f6e4:	stc    
  41f6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e6:	mov    bl,0x6e
  41f6e8:	ja     0x41f743
  41f6ea:	xor    eax,0x173a9b5
  41f6ef:	add    BYTE PTR [edi-0x7ffffffe],al
  41f6f5:	sub    cx,0x22
  41f6f9:	jo     0x41f729
  41f6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6fc:	rcr    DWORD PTR [edi+0x2917aea6],1
  41f702:	test   DWORD PTR [edi-0x2d504a1e],esp
  41f708:	in     eax,dx
  41f709:	add    ah,ah
  41f70b:	leave  
  41f70c:	mov    esp,DWORD PTR ds:0x4520bb6
  41f712:	ret    
  41f713:	imul   eax,DWORD PTR [ecx],0xb89aa305
  41f719:	cmc    
  41f71a:	ffreep st(1)
  41f71c:	xor    eax,0xcc0ceda0
  41f721:	add    al,0x1c
  41f723:	xor    eax,0x44271a8
  41f728:	pop    esp
  41f729:	add    eax,0x142775cb
  41f72e:	ja     0x41f73f
  41f730:	mov    es,WORD PTR [edx]
  41f732:	das    
  41f733:	lock cs fdiv QWORD PTR ds:[edi]
  41f738:	mov    bl,0x45
  41f73a:	push   esi
  41f73b:	pavgb  mm5,mm2
  41f73e:	fst    QWORD PTR [edx+0x5e004600]
  41f744:	cwde   
  41f745:	hlt    
  41f746:	fdiv   QWORD PTR [edx+0xa]
  41f749:	push   esp
  41f74a:	dec    ebp
  41f74b:	arpl   di,bx
  41f74d:	fbld   TBYTE PTR [esi+0x2]
  41f750:	jge    0x41f6fa
  41f752:	mov    edi,DWORD PTR [esi+edx*8-0x5f]
  41f756:	rcl    DWORD PTR [eax],1
  41f758:	xlat   BYTE PTR ds:[ebx]
  41f759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75a:	sbb    bl,BYTE PTR [ecx]
  41f75c:	sub    BYTE PTR [eax+0x63],ch
  41f75f:	leave  
  41f760:	adc    cl,BYTE PTR [ebx-0x7d]
  41f763:	fisttp WORD PTR [ebp+edi*8-0x16]
  41f767:	rcr    DWORD PTR [edx],1
  41f769:	int3   
  41f76a:	lea    eax,[ebx+0x5a77e2ca]
  41f770:	test   DWORD PTR [esi],esp
  41f772:	mov    al,ds:0x9b0457c0
  41f777:	addr16 push ss
  41f779:	or     BYTE PTR [edi],ah
  41f77b:	xor    ah,BYTE PTR [ecx+ecx*1]
  41f77e:	clc    
  41f77f:	into   
  41f780:	lods   eax,DWORD PTR ds:[esi]
  41f781:	neg    BYTE PTR [eax+0x66]
  41f784:	shr    DWORD PTR [ebp+0x52cb7474],1
  41f78a:	inc    ebp
  41f78b:	loopne 0x41f7fc
  41f78d:	shl    esi,0xb2
  41f790:	imul   edi,DWORD PTR [ebp-0x5ff2afe6],0xffffffc3
  41f797:	vandps xmm6,xmm2,XMMWORD PTR [ebx+esi*8-0x5676ab49]
  41f7a0:	in     eax,dx
  41f7a1:	lds    ebp,FWORD PTR [esi+0x2e]
  41f7a4:	loope  0x41f7ef
  41f7a6:	les    edi,FWORD PTR [esi-0x26d1fd59]
  41f7ac:	std    
  41f7ad:	mov    dh,0x26
  41f7af:	adc    ch,BYTE PTR [ecx+0x12bd3468]
  41f7b5:	jmp    0x41f7db
  41f7b7:	xchg   esi,eax
  41f7b8:	nop
  41f7b9:	adc    eax,DWORD PTR [ebx+esi*8-0x1355e1b5]
  41f7c0:	mov    dh,0x1b
  41f7c2:	out    0x29,al
  41f7c4:	fisub  DWORD PTR [edx+0x3efafaf1]
  41f7ca:	lea    ebp,[edi-0x5ea25f3f]
  41f7d0:	enter  0x9fb8,0x4
  41f7d4:	int    0x1b
  41f7d6:	sar    DWORD PTR [edx],1
  41f7d8:	pusha  
  41f7d9:	xchg   dl,dl
  41f7db:	nop
  41f7dc:	cli    
  41f7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7de:	nop
  41f7df:	inc    BYTE PTR [edx+0x1a917a31]
  41f7e5:	jp     0x41f7c7
  41f7e7:	or     edx,DWORD PTR [ebp+0x7f]
  41f7ea:	xchg   esi,eax
  41f7eb:	push   0x37af5618
  41f7f0:	xlat   BYTE PTR ds:[ebx]
  41f7f1:	rsm    
  41f7f3:	adc    bl,BYTE PTR [esi+ebp*4-0x30]
  41f7f7:	xchg   DWORD PTR ds:0x93cd44c5,ebx
  41f7fd:	outs   dx,BYTE PTR ds:[esi]
  41f7fe:	xchg   ebp,eax
  41f7ff:	scas   eax,DWORD PTR es:[edi]
  41f800:	xor    cl,BYTE PTR [eax-0x68]
  41f803:	or     cl,bl
  41f805:	jns    0x41f7de
  41f807:	or     ebx,DWORD PTR [edx]
  41f809:	(bad)  
  41f80a:	xor    ecx,esp
  41f80c:	xchg   ecx,eax
  41f80d:	or     eax,0xd8017c9
  41f812:	mov    bl,0xe8
  41f814:	out    dx,eax
  41f815:	mov    bl,0x6a
  41f817:	repz (bad) 
  41f819:	lods   al,BYTE PTR ds:[esi]
  41f81a:	fidiv  WORD PTR [esi-0x24]
  41f81d:	sub    bl,BYTE PTR [eax]
  41f81f:	loope  0x41f88c
  41f821:	sbb    BYTE PTR [ecx-0x34e3b00c],bl
  41f827:	push   0xf8434695
  41f82c:	xchg   DWORD PTR [edx-0x27],edi
  41f82f:	les    esi,FWORD PTR [eax+0x18abc45e]
  41f835:	mov    esp,0x3d7f4891
  41f83a:	jge    0x41f833
  41f83c:	shl    BYTE PTR [eax+0x1e],1
  41f83f:	les    esp,FWORD PTR [ebx+0x57]
  41f842:	mov    bl,BYTE PTR cs:[ebp+0x5e0a65ab]
  41f849:	shl    BYTE PTR [ebx+0x6b],cl
  41f84c:	push   0x7c
  41f84e:	(bad)  
  41f84f:	dec    ecx
  41f850:	pop    ecx
  41f851:	cmp    eax,0xe2bbcbc7
  41f856:	sbb    BYTE PTR [ebx+esi*4-0x5f],ch
  41f85a:	out    0x94,eax
  41f85c:	data16 sbb cl,BYTE PTR [eax]
  41f85f:	cdq    
  41f860:	inc    ecx
  41f861:	adc    ebx,DWORD PTR [ecx+eax*8]
  41f864:	ficomp DWORD PTR [ebx+0x629ad96]
  41f86a:	(bad)  [edx]
  41f86c:	add    ah,al
  41f86e:	mov    ds:0x386745b9,al
  41f873:	cld    
  41f874:	cmp    eax,0xb8331041
  41f879:	ret    0x7748
  41f87c:	call   0xaed7:0xc791f737
  41f883:	push   es
  41f884:	sahf   
  41f885:	jp     0x41f855
  41f887:	and    DWORD PTR [eax+eiz*4+0xa],esi
  41f88b:	xchg   DWORD PTR [ebx],esi
  41f88d:	lock call 0xfd69:0x57562973
  41f895:	addr16 add eax,0x8fce0fd
  41f89b:	add    al,0x71
  41f89d:	jmp    0xfc4e6f38
  41f8a2:	xchg   edx,eax
  41f8a3:	add    BYTE PTR [esi-0x75],0x2e
  41f8a7:	ror    DWORD PTR [ebx-0x5a],cl
  41f8aa:	push   ebp
  41f8ab:	mov    dl,0x20
  41f8ad:	rol    cl,1
  41f8af:	out    0xc7,al
  41f8b1:	and    al,0xf2
  41f8b3:	lods   eax,DWORD PTR ds:[esi]
  41f8b4:	outs   dx,DWORD PTR ds:[esi]
  41f8b5:	jmp    FWORD PTR [ebx+ebx*8+0x74]
  41f8b9:	cmp    ax,0xc7ae
  41f8bd:	add    eax,0xd603123f
  41f8c2:	popf   
  41f8c3:	pop    ebx
  41f8c4:	mov    dl,0x3c
  41f8c6:	pop    edx
  41f8c7:	in     eax,0x24
  41f8c9:	xchg   ebp,eax
  41f8ca:	stc    
  41f8cb:	js     0x41f902
  41f8cd:	dec    ebp
  41f8ce:	jg     0x41f931
  41f8d0:	or     edi,esp
  41f8d2:	push   edi
  41f8d3:	outs   dx,BYTE PTR ds:[esi]
  41f8d4:	xchg   edx,eax
  41f8d5:	sbb    BYTE PTR [esi],0x7b
  41f8d8:	lock ror BYTE PTR [ebp+edx*4-0x7a2526fb],cl
  41f8e0:	mov    edi,0x7207fb72
  41f8e5:	stc    
  41f8e6:	pushf  
  41f8e7:	in     al,0x60
  41f8e9:	test   DWORD PTR [edi+0x5aa525cb],ecx
  41f8ef:	cdq    
  41f8f0:	in     eax,dx
  41f8f1:	xchg   esi,eax
  41f8f2:	js     0x41f88d
  41f8f4:	mov    ah,0x89
  41f8f6:	xchg   ebp,eax
  41f8f7:	sbb    al,0x8a
  41f8f9:	jle    0x41f934
  41f8fb:	jge    0x41f965
  41f8fd:	xor    dl,BYTE PTR [eax]
  41f8ff:	test   ch,dh
  41f901:	cdq    
  41f902:	mov    eax,DWORD PTR [edx-0x43]
  41f905:	or     al,0x23
  41f907:	lods   al,BYTE PTR ds:[esi]
  41f908:	push   esp
  41f909:	jmp    0x43f4:0xf13de0d9
  41f910:	fst    DWORD PTR [edx-0x11b54af8]
  41f916:	lea    ebx,[esi-0x3a25dcfa]
  41f91c:	ins    DWORD PTR es:[edi],dx
  41f91d:	xchg   edi,eax
  41f91e:	mov    al,ds:0x25226410
  41f923:	repnz sub BYTE PTR [eax+0x78827880],al
  41f92a:	inc    esp
  41f92b:	add    cl,bh
  41f92d:	jne    0x41f932
  41f92f:	pop    esi
  41f930:	mov    ds:0x39c17353,eax
  41f935:	jg     0x41f8cd
  41f937:	je     0x41f904
  41f939:	xchg   ebp,eax
  41f93a:	popa   
  41f93b:	jne    0x41f913
  41f93d:	mov    dh,0xea
  41f93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f940:	sbb    BYTE PTR [ebx+0xf045c10],bl
  41f946:	cmp    eax,0x793c8377
  41f94b:	push   0xffffff8c
  41f94d:	inc    edx
  41f94e:	cmp    dh,cl
  41f950:	stos   DWORD PTR es:[edi],eax
  41f951:	add    edx,eax
  41f953:	inc    esi
  41f954:	cmp    esi,DWORD PTR [edi+esi*4]
  41f957:	jno    0x41f99d
  41f959:	retf   
  41f95a:	cmp    esi,esi
  41f95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f95d:	mov    ecx,0x886f10f2
  41f962:	rcl    DWORD PTR [edx-0x1f],0x47
  41f966:	cdq    
  41f967:	mov    ecx,0x7cdd193f
  41f96c:	or     al,0x11
  41f96e:	or     eax,0x8975342a
  41f973:	or     cl,BYTE PTR [ebx+0x15]
  41f976:	stos   BYTE PTR es:[edi],al
  41f977:	arpl   sp,sp
  41f979:	adc    BYTE PTR [eax+eax*1+0x20],0x16
  41f97e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97f:	lea    esi,[esi+0x25bf29bf]
  41f985:	lods   eax,DWORD PTR ds:[esi]
  41f986:	and    dl,al
  41f988:	jp     0x41f90d
  41f98a:	lea    esp,[ecx+0x30]
  41f98d:	jbe    0x41f990
  41f98f:	add    BYTE PTR [edi+0x20000002],al
  41f995:	sbb    edi,DWORD PTR [edi+0x4f742560]
  41f99b:	jge    0x41f97f
  41f99d:	and    BYTE PTR [eax+0x7a],0xa2
  41f9a1:	sbb    ecx,DWORD PTR [ebx+0x7]
  41f9a4:	aas    
  41f9a5:	sar    esi,1
  41f9a7:	mov    cl,0x90
  41f9a9:	idiv   ecx
  41f9ab:	call   0x9cd36293
  41f9b0:	jge    0x41f9cb
  41f9b2:	ss inc edx
  41f9b4:	(bad)  
  41f9b6:	mov    eax,ds:0xfe3d0344
  41f9bb:	test   al,0x7e
  41f9bd:	add    al,0x1a
  41f9bf:	dec    ebp
  41f9c0:	mov    DWORD PTR [esi+0x2f],ecx
  41f9c3:	mov    eax,0xa2c6f5fe
  41f9c8:	sbb    bh,BYTE PTR [ebp+0x45]
  41f9cb:	sahf   
  41f9cc:	fidiv  DWORD PTR [ecx+edx*2]
  41f9cf:	cs jmp 0x41f952
  41f9d2:	ss (bad) 
  41f9d4:	js     0x41f9cd
  41f9d6:	mov    ecx,0xd2e819b4
  41f9db:	sub    BYTE PTR [ecx-0x1ed272bc],bl
  41f9e1:	retf   
  41f9e2:	add    DWORD PTR [esi],esi
  41f9e4:	leave  
  41f9e5:	inc    ecx
  41f9e6:	das    
  41f9e7:	or     al,0x7e
  41f9e9:	mov    ch,0xb9
  41f9eb:	rcr    DWORD PTR [edi],0x94
  41f9ee:	repz std 
  41f9f0:	int3   
  41f9f1:	xor    DWORD PTR [esi+0x3c03432b],edi
  41f9f7:	sub    BYTE PTR [edi],ah
  41f9f9:	or     al,0x50
  41f9fb:	push   eax
  41f9fc:	fnstsw WORD PTR [eax+0x1e8361a5]
  41fa02:	mov    edi,0xedb2eb19
  41fa07:	add    bh,0xd5
  41fa0a:	in     al,0x95
  41fa0c:	sti    
  41fa0d:	jmp    0x41fa8c
  41fa0f:	xchg   ebp,eax
  41fa10:	xchg   ebp,eax
  41fa11:	add    ebx,DWORD PTR [edx+0x77cc5006]
  41fa17:	ror    DWORD PTR [eax],cl
  41fa19:	inc    esi
  41fa1a:	out    0x14,eax
  41fa1c:	ror    BYTE PTR [eax],cl
  41fa1e:	cwde   
  41fa1f:	shr    dh,1
  41fa21:	cmp    eax,0xa3fd5ef3
  41fa26:	js     0x41faa3
  41fa28:	mov    ebx,ebx
  41fa2a:	jl     0x41fa53
  41fa2c:	(bad)  ds:0xbc5471b3
  41fa32:	mov    esi,0xacfe06aa
  41fa37:	rol    BYTE PTR ds:0x7f765148,1
  41fa3d:	xor    al,0xb1
  41fa3f:	adc    BYTE PTR [eax],ch
  41fa41:	sbb    ch,BYTE PTR [ebx+0x43]
  41fa44:	dec    edx
  41fa45:	pusha  
  41fa46:	retf   0xcf36
  41fa49:	lea    eax,[eax-0x5454ebb8]
  41fa4f:	mov    WORD PTR [eax+eiz*4+0x7f7b4f39],cs
  41fa56:	sub    DWORD PTR [ecx+0x16],edx
  41fa59:	call   0x30951a20
  41fa5e:	dec    DWORD PTR [edx+ebx*4]
  41fa61:	pusha  
  41fa62:	mov    eax,0x2766019d
  41fa67:	nop
  41fa68:	out    dx,eax
  41fa69:	jnp    0x41fa31
  41fa6b:	push   eax
  41fa6c:	mov    cl,0xe
  41fa6e:	or     eax,0x7ba1aa3f
  41fa73:	or     al,0x33
  41fa75:	fdiv   DWORD PTR [edx+0x20aa96ce]
  41fa7b:	inc    esi
  41fa7c:	jmp    0xc36ea110
  41fa81:	scas   al,BYTE PTR es:[edi]
  41fa82:	mov    eax,0x6eb16774
  41fa87:	jbe    0x41fac4
  41fa89:	or     BYTE PTR [esi+edi*1-0x425264c],0x78
  41fa91:	fs in  eax,dx
  41fa93:	add    BYTE PTR [esi-0x5],dl
  41fa96:	xchg   esi,eax
  41fa97:	loope  0x41fada
  41fa99:	inc    ebp
  41fa9a:	ss push es
  41fa9c:	push   ebp
  41fa9d:	xor    DWORD PTR [ebx-0xb],ebx
  41faa0:	mov    ds:0x9194201,eax
  41faa5:	sub    al,0x12
  41faa7:	mov    bh,0x4b
  41faa9:	mov    al,ds:0x1e54781
  41faae:	add    DWORD PTR [eax],eax
  41fab0:	arpl   WORD PTR [ebx-0x5b],cx
  41fab3:	out    0xd2,eax
  41fab5:	sbb    BYTE PTR [eax+0xa7fc71a],al
  41fabb:	push   0x20
  41fabd:	mov    ecx,0x53254c27
  41fac2:	mov    edi,0x9d2a5c45
  41fac7:	cmp    al,0x5e
  41fac9:	pop    ebx
  41faca:	sti    
  41facb:	push   ds
  41facc:	rcl    DWORD PTR [edi-0x1ce7147],0x12
  41fad3:	cmp    BYTE PTR ds:0xe0c2d59e,al
  41fad9:	cld    
  41fada:	in     eax,0xe9
  41fadc:	mov    esp,0x67c8de8
  41fae1:	lahf   
  41fae2:	mov    edx,DWORD PTR [esi-0x622bd860]
  41fae8:	aaa    
  41fae9:	fidivr DWORD PTR [edx-0x24]
  41faec:	mov    eax,0x344d0e02
  41faf1:	xor    al,0xc8
  41faf3:	xor    dh,BYTE PTR [ebp+0x2728df94]
  41faf9:	gs jmp 0xef6f784b
  41faff:	fldcw  WORD PTR [esi+eiz*2]
  41fb02:	xlat   BYTE PTR ds:[ebx]
  41fb03:	fistp  QWORD PTR [edi+0x73ba98b9]
  41fb09:	lods   al,BYTE PTR ds:[esi]
  41fb0a:	sbb    al,0xb1
  41fb0c:	add    eax,0xb35d2655
  41fb11:	pusha  
  41fb12:	aas    
  41fb13:	loop   0x41fae9
  41fb15:	xor    eax,0xd48a5a07
  41fb1a:	addr16 mov esp,0x693acd4b
  41fb20:	inc    esi
  41fb21:	sub    DWORD PTR [esi+edi*4],0x2b
  41fb25:	mov    esi,0x500e2455
  41fb2a:	inc    esp
  41fb2b:	cmp    edx,DWORD PTR [edx-0x19]
  41fb2e:	out    0x7f,al
  41fb30:	sbb    al,BYTE PTR [ebp-0x9]
  41fb33:	cdq    
  41fb34:	ficomp WORD PTR [ebx+0x7]
  41fb37:	addr16 (bad) 
  41fb3a:	and    al,0x83
  41fb3c:	dec    ebx
  41fb3d:	in     eax,dx
  41fb3e:	inc    esp
  41fb3f:	xor    al,0x69
  41fb41:	int    0xc6
  41fb43:	add    DWORD PTR [ecx],0x4a8902b5
  41fb49:	fsubr  DWORD PTR [edi-0x4c]
  41fb4c:	push   cs
  41fb4d:	call   0x878:0x55fc3f01
  41fb54:	stc    
  41fb55:	mov    bl,0xe3
  41fb57:	xlat   BYTE PTR ds:[ebx]
  41fb58:	call   0x5bef:0x4edbd92e
  41fb5f:	pop    ecx
  41fb60:	mov    dh,0xef
  41fb62:	adc    eax,0x1642f8f0
  41fb67:	and    al,0xf7
  41fb69:	jge    0x41fb0b
  41fb6b:	jmp    DWORD PTR [eax]
  41fb6d:	mov    bl,0x88
  41fb6f:	aad    0x5d
  41fb71:	fisttp DWORD PTR [esi]
  41fb73:	lahf   
  41fb74:	and    DWORD PTR [esi+0x64],0x75
  41fb78:	lock ins BYTE PTR es:[edi],dx
  41fb7a:	inc    edi
  41fb7b:	xchg   esi,eax
  41fb7c:	dec    ebp
  41fb7d:	rcl    DWORD PTR [edx*8-0x241dfd6b],cl
  41fb84:	mov    BYTE PTR [eax],bh
  41fb86:	stos   BYTE PTR es:[edi],al
  41fb87:	ret    0x5613
  41fb8a:	in     al,dx
  41fb8b:	ret    
  41fb8c:	data16 adc bl,ch
  41fb8f:	ins    BYTE PTR es:[edi],dx
  41fb90:	adc    DWORD PTR [ecx-0x57d342e5],esi
  41fb96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb97:	(bad)  [edx+0x60]
  41fb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb9b:	bound  ecx,QWORD PTR [eax-0x3ec24815]
  41fba1:	inc    edx
  41fba2:	adc    DWORD PTR [ecx],esi
  41fba4:	stos   BYTE PTR es:[edi],al
  41fba5:	and    BYTE PTR [esi+0x20202296],bl
  41fbab:	jle    0x41fc05
  41fbad:	dec    DWORD PTR [edi+0x29]
  41fbb0:	lods   eax,DWORD PTR ds:[esi]
  41fbb1:	lds    eax,FWORD PTR [ebx+0x5b]
  41fbb4:	fsubr  QWORD PTR [edx]
  41fbb6:	retf   0x88e3
  41fbb9:	sbb    edi,ebp
  41fbbb:	aaa    
  41fbbc:	lea    esp,[edx-0x7c]
  41fbbf:	adc    eax,0xcd516cf1
  41fbc4:	pusha  
  41fbc5:	sbb    DWORD PTR ds:0x40e2526,eax
  41fbcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbcc:	cdq    
  41fbcd:	xchg   edi,eax
  41fbce:	sub    esi,esi
  41fbd0:	adc    al,0x87
  41fbd2:	imul   esi,DWORD PTR [esi],0x926fe958
  41fbd8:	retf   0xedaf
  41fbdb:	jns    0x41fc15
  41fbdd:	scas   eax,DWORD PTR es:[edi]
  41fbde:	dec    ecx
  41fbdf:	xchg   ebx,eax
  41fbe0:	mov    dl,bh
  41fbe2:	sar    BYTE PTR cs:[esi-0x2c],cl
  41fbe6:	or     bl,BYTE PTR [edx+0x54]
  41fbe9:	fs mov cl,0x58
  41fbec:	and    ah,bl
  41fbee:	mov    gs:0x5a201e74,eax
  41fbf4:	rcl    DWORD PTR [ecx-0xc],1
  41fbf7:	in     al,0x1
  41fbf9:	jp     0x41fc79
  41fbfb:	pop    edi
  41fbfc:	cmp    al,0x0
  41fbfe:	cli    
  41fbff:	pop    edx
  41fc00:	mov    esp,0xc29766d3
  41fc05:	and    DWORD PTR [eax],ebp
  41fc07:	xor    ah,dl
  41fc09:	jle    0x41fc5a
  41fc0b:	repnz imul ecx,DWORD PTR [ebx-0x79],0x2
  41fc10:	mov    bh,al
  41fc12:	xchg   edx,eax
  41fc13:	or     edx,DWORD PTR [ebp+0x106191de]
  41fc19:	mov    al,BYTE PTR [ebp+0x0]
  41fc1c:	mov    al,0x33
  41fc1e:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41fc24:	test   DWORD PTR [edi+0x5f260cbe],esi
  41fc2a:	xchg   esp,eax
  41fc2b:	arpl   WORD PTR [edi-0x78fffe88],si
  41fc31:	add    al,BYTE PTR [eax]
  41fc33:	add    BYTE PTR [eax],dl
  41fc35:	or     ebx,DWORD PTR [ecx]
  41fc37:	test   al,0xd7
  41fc39:	jecxz  0x41fc1e
  41fc3b:	mov    eax,ds:0x7ad3e68
  41fc40:	xor    DWORD PTR [esi-0x4c],ebx
  41fc43:	inc    ebp
  41fc44:	cmc    
  41fc45:	inc    ebx
  41fc46:	add    DWORD PTR [ebx-0x6f],eax
  41fc49:	mov    esp,0x3df37b53
  41fc4e:	repnz push ebx
  41fc50:	in     al,dx
  41fc51:	push   ss
  41fc52:	jnp    0x41fc67
  41fc54:	sbb    BYTE PTR [edx+0x39],bl
  41fc57:	push   0xffffff9f
  41fc59:	dec    eax
  41fc5a:	ret    
  41fc5b:	mov    esi,0xa7314309
  41fc60:	(bad)  
  41fc61:	stc    
  41fc62:	xor    al,0x67
  41fc64:	mov    dl,0xdd
  41fc66:	lock sbb edi,ebx
  41fc69:	xchg   DWORD PTR ss:[edi-0x7c],esi
  41fc6d:	(bad)  
  41fc6e:	ja     0x41fc54
  41fc70:	inc    eax
  41fc71:	mov    ds,WORD PTR [ebp+0x71842f65]
  41fc77:	add    al,0xf7
  41fc79:	sub    edi,DWORD PTR [eax]
  41fc7b:	and    DWORD PTR [ebp-0x28],edi
  41fc7e:	mov    ds:0xdf04352,eax
  41fc83:	mov    ch,0x5e
  41fc85:	xor    ah,BYTE PTR [ebx+0x66]
  41fc88:	xchg   esp,eax
  41fc89:	cld    
  41fc8a:	fcomp  DWORD PTR [ebp+0x2711caf2]
  41fc90:	sbb    ebx,edx
  41fc92:	test   DWORD PTR [ebx+0x14d42635],edx
  41fc98:	xor    eax,0x49f8ef37
  41fc9d:	lea    eax,[ecx]
  41fc9f:	mov    edx,0x4d49628
  41fca4:	add    BYTE PTR [ebx],al
  41fca6:	je     0x41fca9
  41fca8:	hlt    
  41fca9:	and    al,0x39
  41fcab:	and    eax,DWORD PTR [eax+0x59]
  41fcae:	(bad)  
  41fcaf:	jnp    0x41fc7e
  41fcb1:	inc    ebp
  41fcb2:	dec    edx
  41fcb3:	pop    edi
  41fcb4:	das    
  41fcb5:	push   0x11
  41fcb7:	or     ebx,ebp
  41fcb9:	stc    
  41fcba:	fldl2e 
  41fcbc:	or     eax,eax
  41fcbe:	mov    ds:0x108751d0,eax
  41fcc3:	test   al,0x8a
  41fcc5:	scas   eax,DWORD PTR es:[edi]
  41fcc6:	out    0x2f,al
  41fcc8:	xor    edi,DWORD PTR [edx+0x24ec5a92]
  41fcce:	mov    ah,0x2c
  41fcd0:	test   al,0x17
  41fcd2:	dec    edi
  41fcd3:	mov    bh,0x14
  41fcd5:	fbstp  TBYTE PTR es:[edi]
  41fcd8:	pop    eax
  41fcd9:	repz jl 0x41fc83
  41fcdc:	shl    DWORD PTR [eax-0x1b],cl
  41fcdf:	call   0xacb3d55a
  41fce4:	and    al,0x7
  41fce6:	stos   DWORD PTR es:[edi],eax
  41fce7:	pop    ebp
  41fce8:	stos   BYTE PTR es:[edi],al
  41fce9:	xor    al,0x78
  41fceb:	mov    eax,ds:0xa2416fa8
  41fcf0:	int    0x1f
  41fcf2:	test   BYTE PTR [ebx],bl
  41fcf4:	or     eax,0x32cfc60
  41fcf9:	outs   dx,BYTE PTR ds:[esi]
  41fcfa:	mov    al,0x41
  41fcfc:	and    dl,BYTE PTR [eax-0x30c4c984]
  41fd02:	sub    bh,BYTE PTR [ecx]
  41fd04:	inc    ebx
  41fd05:	inc    ecx
  41fd06:	inc    esi
  41fd07:	add    al,0x36
  41fd09:	test   ah,0x14
  41fd0c:	lea    edi,[ecx-0x61223433]
  41fd12:	jp     0x41fcb2
  41fd14:	push   0xffffffb1
  41fd16:	pop    esi
  41fd17:	mov    edi,0x80f23c2a
  41fd1c:	inc    edx
  41fd1d:	imul   esi,esi,0x70bf4faa
  41fd23:	jmp    0x40ce3b30
  41fd28:	add    al,0x28
  41fd2a:	xor    edx,edi
  41fd2c:	and    ebp,DWORD PTR [esi+0x21e7409d]
  41fd32:	push   0xffffffde
  41fd34:	enter  0x2749,0xa5
  41fd38:	addr16 xchg edx,eax
  41fd3a:	loope  0x41fd0e
  41fd3c:	data16 mov al,ds:0xfad60d4b
  41fd42:	sub    bh,0xc2
  41fd45:	ret    
  41fd46:	lahf   
  41fd47:	or     ah,BYTE PTR [ecx-0x1af559fb]
  41fd4d:	repz pop ecx
  41fd50:	sub    dh,BYTE PTR [edx+edi*4+0x60]
  41fd54:	daa    
  41fd55:	or     eax,0xc13527d0
  41fd5a:	xchg   ebp,eax
  41fd5b:	mov    BYTE PTR [ebx+0x30],bl
  41fd5e:	jae    0x41fd35
  41fd60:	mov    ds:0x1230f599,eax
  41fd65:	ins    DWORD PTR es:[edi],dx
  41fd66:	(bad)  
  41fd67:	mov    al,0xd3
  41fd69:	sbb    ebx,DWORD PTR [edi+0x206a66bc]
  41fd6f:	and    al,0x26
  41fd71:	and    DWORD PTR ds:0x37711b96,esi
  41fd77:	jnp    0x41fd3c
  41fd79:	sub    DWORD PTR [eax-0x1934c192],ebx
  41fd7f:	jge    0x41fd5c
  41fd81:	bound  esi,QWORD PTR [ebp+0x3b]
  41fd84:	push   ebp
  41fd85:	jb     0x41fda9
  41fd87:	adc    edx,DWORD PTR [eax-0x1f9f5f5e]
  41fd8d:	pop    ecx
  41fd8e:	jns    0x41fd67
  41fd90:	mov    cl,0xc1
  41fd92:	mov    DWORD PTR [edi],ecx
  41fd94:	out    0x45,eax
  41fd96:	cld    
  41fd97:	inc    ebp
  41fd98:	xchg   ebx,eax
  41fd99:	mov    WORD PTR ds:0x1075a11c,gs
  41fd9f:	adc    BYTE PTR [esi-0x5693d342],ch
  41fda5:	mov    dh,0x62
  41fda7:	aam    0xe9
  41fda9:	mov    ebp,0x3d3d748c
  41fdae:	iret   
  41fdaf:	lahf   
  41fdb0:	repnz adc eax,0x20636f23
  41fdb6:	mov    cl,0x84
  41fdb8:	stos   BYTE PTR es:[edi],al
  41fdb9:	xor    DWORD PTR [ebx+0x20],edi
  41fdbc:	inc    esp
  41fdbd:	add    BYTE PTR [esi],0x62
  41fdc0:	push   edx
  41fdc1:	push   ds
  41fdc2:	xchg   ebp,eax
  41fdc3:	aad    0xb3
  41fdc5:	dec    ebx
  41fdc6:	retf   
  41fdc7:	std    
  41fdc8:	pushf  
  41fdc9:	cmp    DWORD PTR [edi],esi
  41fdcb:	adc    al,0xaa
  41fdcd:	rcl    DWORD PTR [ebx],cl
  41fdcf:	adc    DWORD PTR [ebx-0x3b],0x32
  41fdd3:	(bad)  
  41fdd5:	push   ss
  41fdd6:	stos   BYTE PTR es:[edi],al
  41fdd7:	adc    BYTE PTR [ebx-0x577c139e],bh
  41fddd:	cmp    BYTE PTR [esi-0x6e8ace74],0x3a
  41fde4:	inc    ebp
  41fde5:	pop    esp
  41fde6:	mov    DWORD PTR [ebp-0x61],esi
  41fde9:	imul   edi,ebx,0x3029738a
  41fdef:	xor    BYTE PTR [edi],ch
  41fdf1:	ss cld 
  41fdf3:	mov    ebp,0x8e1519a9
  41fdf8:	sub    BYTE PTR [edx],0x1e
  41fdfb:	je     0x41fe39
  41fdfd:	ficomp DWORD PTR [esi+edi*4-0x6d]
  41fe01:	sub    BYTE PTR [ebp-0x1d7e83da],bl
  41fe07:	jbe    0x41fe0d
  41fe09:	push   0xdbf4778c
  41fe0e:	scas   al,BYTE PTR es:[edi]
  41fe0f:	push   esi
  41fe10:	inc    eax
  41fe11:	pop    ds
  41fe12:	push   ds
  41fe13:	dec    ebx
  41fe14:	sbb    al,ch
  41fe16:	dec    ebx
  41fe17:	add    BYTE PTR [edi+edi*4-0x551b1fb9],cl
  41fe1e:	sbb    al,0x50
  41fe20:	mov    al,ds:0xb6bf2e17
  41fe25:	cld    
  41fe26:	jo     0x41fdd7
  41fe28:	sub    DWORD PTR [ebx-0x70ff9428],ebp
  41fe2e:	and    bl,bh
  41fe30:	dec    ebx
  41fe31:	mov    ebx,DWORD PTR [esp+eax*1-0x46]
  41fe35:	leave  
  41fe36:	inc    esp
  41fe37:	xchg   ebp,eax
  41fe38:	pop    esi
  41fe39:	xor    DWORD PTR [ecx-0x55],esp
  41fe3c:	cdq    
  41fe3d:	inc    esp
  41fe3e:	dec    ah
  41fe40:	push   edi
  41fe41:	out    0xe0,eax
  41fe43:	inc    edx
  41fe44:	ficomp DWORD PTR [ebp-0x3b]
  41fe47:	aad    0x79
  41fe49:	or     al,0xf1
  41fe4b:	mov    ebx,0x1af605df
  41fe50:	call   0x44f1:0xf5e44131
  41fe57:	int3   
  41fe58:	xchg   ecx,eax
  41fe59:	cmp    ecx,esi
  41fe5b:	(bad)  
  41fe5c:	dec    ecx
  41fe5d:	push   edi
  41fe5e:	pop    ds
  41fe5f:	push   edx
  41fe60:	nop
  41fe61:	add    al,BYTE PTR [ebp-0x5d858bb9]
  41fe67:	jp     0x41fed7
  41fe69:	and    edx,DWORD PTR [edx+0x3c]
  41fe6c:	popa   
  41fe6d:	inc    ebp
  41fe6e:	push   0xd858d5b8
  41fe73:	in     eax,0x41
  41fe75:	and    al,0x34
  41fe77:	shr    BYTE PTR [edi+0x314eb4ec],0x70
  41fe7e:	mov    ?,WORD PTR [ebp+edx*4-0x7e]
  41fe82:	call   0xc11f35c
  41fe87:	psrlw  mm6,QWORD PTR [eax-0x4b694d7c]
  41fe8e:	(bad)  
  41fe8f:	mov    ebp,0xdeab6eec
  41fe94:	add    al,BYTE PTR [ebp+0x63e27eba]
  41fe9a:	in     eax,0x3
  41fe9c:	cld    
  41fe9d:	jae    0x41ff10
  41fe9f:	jno    0x41fe32
  41fea1:	jl     0x41fe4e
  41fea3:	push   edi
  41fea4:	push   esp
  41fea5:	push   esp
  41fea6:	push   ds
  41fea7:	stc    
  41fea8:	out    0xd2,eax
  41feaa:	mov    ebx,DWORD PTR [ebx-0x49]
  41fead:	jb     0x41fe8a
  41feaf:	or     al,0xa9
  41feb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feb2:	mov    ebp,0x7a994884
  41feb7:	stc    
  41feb8:	ficomp WORD PTR [edx*1-0x36a15700]
  41febf:	xchg   esp,eax
  41fec0:	call   DWORD PTR [edi-0x1bf58003]
  41fec6:	cdq    
  41fec7:	pop    ecx
  41fec8:	add    BYTE PTR [edi+0x7b3e8fe0],ah
  41fece:	add    DWORD PTR [eax],eax
  41fed0:	xchg   DWORD PTR [edx],eax
  41fed2:	add    BYTE PTR [eax],al
  41fed4:	sub    al,0x48
  41fed6:	pop    ebp
  41fed7:	call   0x7cdd:0x471e3d6c
  41fede:	xchg   edx,eax
  41fedf:	or     ch,dl
  41fee1:	jl     0x41feb7
  41fee3:	pop    esp
  41fee4:	test   eax,0x171b3fef
  41fee9:	pop    edx
  41feea:	pusha  
  41feeb:	jo     0x41fea7
  41feed:	sbb    dl,bl
  41feef:	mov    esp,0x4a83ea55
  41fef4:	and    eax,0x84dcaee6
  41fef9:	mov    bl,0x28
  41fefb:	push   esp
  41fefc:	push   eax
  41fefd:	in     eax,0xc5
  41feff:	jmp    0xf7f85445
  41ff04:	xchg   ecx,eax
  41ff05:	mov    edi,0x32bd07bd
  41ff0a:	data16 out dx,al
  41ff0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff0d:	pop    ebx
  41ff0e:	gs call 0xd024618e
  41ff14:	out    dx,eax
  41ff15:	jmp    0x45faaceb
  41ff1a:	retf   
  41ff1b:	or     al,0x9
  41ff1d:	imul   ebp,DWORD PTR [ebp-0x17fec80],0xffffffb8
  41ff24:	or     BYTE PTR [edi+0x3df72db0],al
  41ff2a:	and    ebp,edx
  41ff2c:	mov    esi,0xb47c0c53
  41ff31:	sbb    al,0xc8
  41ff33:	pop    ebx
  41ff34:	scas   eax,DWORD PTR es:[edi]
  41ff35:	pop    edx
  41ff36:	push   ebp
  41ff37:	or     DWORD PTR [ebx],esp
  41ff39:	das    
  41ff3a:	push   ecx
  41ff3b:	adc    ebx,edx
  41ff3d:	and    eax,0xce2fac12
  41ff42:	xor    cl,ah
  41ff44:	inc    esp
  41ff45:	dec    ecx
  41ff46:	xchg   edx,eax
  41ff47:	pop    edi
  41ff48:	xchg   ecx,eax
  41ff49:	or     dh,BYTE PTR [ecx+0x63]
  41ff4c:	je     0x41ffa2
  41ff4e:	ror    DWORD PTR [edi+eiz*4-0xb102a65],cl
  41ff55:	xlat   BYTE PTR ds:[ebx]
  41ff56:	ret    0xa767
  41ff59:	leave  
  41ff5a:	mov    bl,0xb0
  41ff5c:	mov    al,0xd
  41ff5e:	and    ebp,DWORD PTR [ebx]
  41ff60:	ds inc esp
  41ff62:	push   esi
  41ff63:	lods   al,BYTE PTR ds:[esi]
  41ff64:	imul   ebx,edi,0x761e129b
  41ff6a:	cs inc edx
  41ff6c:	loopne 0x41ff2c
  41ff6e:	or     BYTE PTR [esi-0x169759f2],bl
  41ff74:	push   ecx
  41ff75:	xchg   ebx,eax
  41ff76:	jl     0x41ff7b
  41ff78:	pop    ss
  41ff79:	in     al,0xc0
  41ff7b:	xchg   ebp,eax
  41ff7c:	out    0x58,al
  41ff7e:	out    0x83,eax
  41ff80:	arpl   cx,bx
  41ff82:	addr16 cmc 
  41ff84:	stos   BYTE PTR es:[edi],al
  41ff85:	enter  0x2441,0xdd
  41ff89:	inc    eax
  41ff8a:	and    al,0x3c
  41ff8c:	(bad)  
  41ff8e:	jb     0x41ff53
  41ff90:	jae    0x41ff80
  41ff92:	mov    al,ds:0xed66a817
  41ff97:	sbb    DWORD PTR [edx-0x13cbd0fc],esi
  41ff9d:	jae    0x41ffaf
  41ff9f:	in     eax,0x83
  41ffa1:	stc    
  41ffa2:	or     bh,BYTE PTR [ebp+0x29]
  41ffa5:	bswap  edx
  41ffa7:	cmp    edx,DWORD PTR [edi+0x1ff2a8ef]
  41ffad:	pop    ecx
  41ffae:	(bad)  
  41ffb0:	xchg   ebp,eax
  41ffb1:	stos   BYTE PTR es:[edi],al
  41ffb2:	sti    
  41ffb3:	stos   BYTE PTR es:[edi],al
  41ffb4:	out    dx,al
  41ffb5:	dec    edi
  41ffb6:	iret   
  41ffb7:	call   0x7924f351
  41ffbc:	ins    DWORD PTR es:[edi],dx
  41ffbd:	or     eax,0x18a4bccd
  41ffc2:	ins    BYTE PTR es:[edi],dx
  41ffc3:	stc    
  41ffc4:	pop    ecx
  41ffc5:	xor    al,0x24
  41ffc7:	inc    eax
  41ffc8:	mov    eax,ds:0x192f711c
  41ffcd:	jb     0x41ff67
  41ffcf:	outs   dx,BYTE PTR ds:[esi]
  41ffd0:	fnsave [eax]
  41ffd2:	addr16 and al,0xea
  41ffd5:	call   0xbf03:0xead69255
  41ffdc:	dec    ebp
  41ffdd:	fsub   QWORD PTR ds:0xa5ea68f
  41ffe3:	clc    
  41ffe4:	inc    eax
  41ffe5:	pop    es
  41ffe6:	xlat   BYTE PTR ds:[ebx]
  41ffe7:	mov    ss,WORD PTR [edi-0x69]
  41ffea:	adc    esi,DWORD PTR [ebx]
  41ffec:	sub    al,0x72
  41ffee:	fcomp  QWORD PTR [ebp+0x6c91f98c]
  41fff4:	stos   DWORD PTR es:[edi],eax
  41fff5:	mov    WORD PTR [edx-0x350119b6],fs
  41fffb:	data16 lahf 
  41fffd:	or     esp,DWORD PTR [edx+ebx*8+0x71508fc]
  420004:	arpl   WORD PTR [ebx-0x3e34476e],dx
  42000a:	xor    al,0xda
  42000c:	add    DWORD PTR [eax-0x3525adc4],esi
  420012:	cmp    eax,0x46b4033c
  420017:	push   eax
  420018:	sbb    esi,DWORD PTR [ecx+ebp*4-0x29]
  42001c:	push   cs
  42001d:	cmp    DWORD PTR [edx-0x5a],0xfffffff0
  420021:	loop   0x41ffbb
  420023:	outs   dx,BYTE PTR ds:[esi]
  420024:	mov    WORD PTR ds:0xde0ff9e7,?
  42002a:	retf   0x1af5
  42002d:	and    al,0xab
  42002f:	sar    BYTE PTR [edx-0x51],1
  420032:	iret   
  420033:	mov    ebx,0xb670e389
  420038:	pop    esp
  42003a:	xchg   ecx,eax
  42003b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42003c:	sub    BYTE PTR [edx-0x95d0d53],0xf7
  420043:	dec    eax
  420044:	iret   
  420045:	out    0x4f,eax
  420047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420048:	mul    BYTE PTR [eax+0x1a5e3985]
  42004e:	inc    esp
  42004f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420050:	add    BYTE PTR ds:0x43773898,0x71
  420057:	or     dh,dl
  420059:	push   edx
  42005a:	mov    bl,0x8c
  42005c:	xor    ecx,DWORD PTR [ebx+0x60]
  42005f:	and    dl,BYTE PTR [edi+esi*2-0x27feacf]
  420066:	xchg   esi,eax
  420067:	add    edi,ebp
  420069:	mov    dh,0xa2
  42006b:	inc    edx
  42006c:	shl    DWORD PTR [edx],1
  42006e:	and    DWORD PTR ds:0xd1006c36,esp
  420074:	mov    ecx,0x96e1f681
  420079:	push   ds
  42007a:	retf   0xbe68
  42007d:	out    0xfa,eax
  42007f:	retf   0x96cd
  420082:	dec    ebx
  420083:	cwde   
  420084:	mov    ebp,0xaf4b7003
  420089:	out    0xe6,al
  42008b:	mov    bl,0x4c
  42008d:	mov    dl,0x9
  42008f:	outs   dx,DWORD PTR ds:[esi]
  420090:	xchg   esi,eax
  420091:	rcl    BYTE PTR [eax-0x2b],1
  420094:	stos   BYTE PTR es:[edi],al
  420095:	scas   al,BYTE PTR es:[edi]
  420096:	clc    
  420097:	lahf   
  420098:	cmp    eax,0x6e2148ad
  42009d:	mov    bh,0xbd
  42009f:	neg    DWORD PTR [ebx+0x42]
  4200a2:	mov    bl,0xa8
  4200a4:	jp     0x42009b
  4200a6:	les    ebx,FWORD PTR [esi+0x22dcb240]
  4200ac:	imul   edx,eax,0xfffffff7
  4200af:	lds    esi,FWORD PTR [ebx+edi*2+0x31]
  4200b3:	adc    BYTE PTR [edi+0x7b28d5ed],bl
  4200b9:	jno    0x420110
  4200bb:	xchg   esi,eax
  4200bc:	add    al,0x51
  4200be:	int3   
  4200bf:	and    esp,edx
  4200c1:	jo     0x4200d9
  4200c3:	mov    bh,0xba
  4200c5:	stc    
  4200c6:	cmp    BYTE PTR [edx+0x6be8e1d9],bl
  4200cc:	sahf   
  4200cd:	inc    ebx
  4200ce:	xchg   ecx,eax
  4200cf:	in     al,dx
  4200d0:	add    DWORD PTR [edx],0xffffffd0
  4200d3:	push   es
  4200d4:	sbb    bh,0x7e
  4200d7:	lea    esi,[esi-0x4f]
  4200da:	and    eax,esp
  4200dc:	imul   ebx,DWORD PTR [eax],0x36f74681
  4200e2:	loop   0x420111
  4200e4:	femms  
  4200e6:	push   es
  4200e7:	jl     0x420134
  4200e9:	int    0xa9
  4200eb:	mov    bh,0x9f
  4200ed:	dec    esi
  4200ee:	and    ebp,esp
  4200f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200f1:	mov    bh,0x3
  4200f3:	test   eax,0x9bcec36f
  4200f8:	push   edx
  4200f9:	loope  0x4200ec
  4200fb:	inc    eax
  4200fc:	mov    ds:0x5cada4ee,eax
  420101:	adc    bl,BYTE PTR [ecx+0x2fff2d5]
  420107:	test   eax,0xda803893
  42010c:	outs   dx,BYTE PTR ds:[esi]
  42010d:	nop
  42010e:	test   BYTE PTR [ebp+0x5c49d0ff],dh
  420114:	rcl    BYTE PTR [edx],1
  420116:	and    al,0x35
  420118:	ja     0x4200d9
  42011a:	mov    DWORD PTR ds:0x5461d373,edi
  420120:	mov    edx,0xfce5e744
  420125:	sub    DWORD PTR [edi+esi*2],0x7c0b2f2b
  42012c:	mov    bh,BYTE PTR [esi+0x3ec9ea0e]
  420132:	pop    ecx
  420133:	push   es
  420134:	sbb    ebx,edx
  420136:	lds    esp,FWORD PTR [ebp+edi*4+0x1dc698f4]
  42013d:	pop    ebp
  42013e:	neg    bl
  420140:	push   ss
  420141:	mov    WORD PTR [esi],es
  420143:	sahf   
  420144:	aad    0x51
  420146:	push   ebp
  420147:	and    edi,DWORD PTR [eax+0x46a88f09]
  42014d:	sahf   
  42014e:	loope  0x42016e
  420150:	lods   eax,DWORD PTR ds:[esi]
  420151:	adc    al,0x8c
  420153:	mov    esi,0x4dc79127
  420158:	and    eax,DWORD PTR [esi-0x67]
  42015b:	add    BYTE PTR [ebx+0x7d7539cf],bh
  420161:	idiv   edi
  420163:	iret   
  420164:	std    
  420165:	mov    ecx,DWORD PTR [esi-0x5de485f1]
  42016b:	outs   dx,DWORD PTR ds:[esi]
  42016c:	lds    edi,FWORD PTR [ebp+0x1]
  42016f:	add    BYTE PTR [edi-0x1efffffe],al
  420175:	dec    ebx
  420176:	fcmovu st,st(4)
  420178:	fadd   DWORD PTR ds:0x339fc27c
  42017e:	mov    DWORD PTR [ebx],edi
  420180:	xchg   ebp,eax
  420181:	xchg   ebp,eax
  420182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420183:	mov    esp,0xe30103f8
  420188:	sbb    al,0xf
  42018a:	or     BYTE PTR [edi-0x57],al
  42018d:	mov    edx,0xcd0f166a
  420192:	iret   
  420193:	jmp    0xf19fa6e8
  420198:	xlat   BYTE PTR ds:[ebx]
  420199:	jne    0x42015f
  42019b:	std    
  42019c:	jp     0x4201d8
  42019e:	xchg   edi,eax
  42019f:	jns    0x420212
  4201a1:	or     ch,BYTE PTR [edx]
  4201a3:	jbe    0x4201e6
  4201a5:	xor    DWORD PTR [eax+0x181b8915],ecx
  4201ab:	sub    al,0xf7
  4201ad:	push   0xffffffe3
  4201af:	mov    dh,0xad
  4201b1:	sbb    ah,BYTE PTR [esi]
  4201b3:	mov    BYTE PTR [ebp+0x38],ah
  4201b6:	jp     0x4201b1
  4201b8:	fwait
  4201b9:	add    BYTE PTR [eax-0x2512097e],bl
  4201bf:	popf   
  4201c0:	jmp    0xbec5:0x55ff2951
  4201c7:	(bad)  
  4201c8:	in     eax,dx
  4201c9:	iret   
  4201ca:	mov    edi,0xb4dfc575
  4201cf:	test   al,0xc3
  4201d1:	cld    
  4201d2:	popf   
  4201d3:	mov    edx,0x13050099
  4201d8:	js     0x420185
  4201da:	sbb    eax,DWORD PTR [ebx+0x6ecc49b6]
  4201e0:	pusha  
  4201e1:	aas    
  4201e2:	mov    esi,0x91e1dbda
  4201e7:	fbstp  TBYTE PTR [ecx]
  4201e9:	jns    0x4201b4
  4201eb:	lods   al,BYTE PTR ds:[esi]
  4201ec:	idiv   BYTE PTR [ecx-0x62d49940]
  4201f2:	dec    ebx
  4201f3:	push   eax
  4201f4:	sti    
  4201f5:	es push esi
  4201f7:	aaa    
  4201f8:	cld    
  4201f9:	sbb    al,0xe9
  4201fb:	xor    edx,DWORD PTR [eax+0xe059908]
  420201:	adc    al,0xb3
  420203:	add    al,BYTE PTR ds:0xff624c87
  420209:	pop    edx
  42020a:	xchg   DWORD PTR [ecx],edx
  42020c:	mov    dh,0xe3
  42020e:	sti    
  42020f:	in     eax,dx
  420210:	adc    DWORD PTR [edx],esi
  420212:	stos   BYTE PTR es:[edi],al
  420213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420214:	push   cs
  420215:	jecxz  0x4201c2
  420217:	and    DWORD PTR ds:[ecx],esi
  42021a:	sbb    DWORD PTR [ebp-0x5c61e6f8],eax
  420220:	lds    eax,FWORD PTR [ecx-0x2e]
  420223:	and    al,ah
  420225:	lods   eax,DWORD PTR ds:[esi]
  420226:	cmc    
  420227:	jg     0x420296
  420229:	loopne 0x420277
  42022b:	imul   esi,DWORD PTR [ecx+edi*8-0x18abff55],0x27
  420233:	jb     0x42028f
  420235:	xlat   BYTE PTR ds:[ebx]
  420236:	sub    esp,DWORD PTR [edx]
  420238:	sub    eax,0x7cbb7042
  42023d:	adc    BYTE PTR [esi-0x2d],dl
  420240:	mov    esp,0x8b684190
  420245:	(bad)  
  420246:	(bad)  
  420247:	mov    ebp,0x9daf38cd
  42024c:	pop    es
  42024d:	ins    DWORD PTR es:[edi],dx
  42024e:	pop    es
  42024f:	add    DWORD PTR [ebx+eax*1+0x7e],ebp
  420253:	std    
  420254:	xchg   ebp,eax
  420255:	sub    edi,DWORD PTR [edx-0x19c81fe1]
  42025b:	popf   
  42025c:	xchg   ebx,eax
  42025d:	loopne 0x420228
  42025f:	or     edx,0xada5fd22
  420265:	xchg   esi,eax
  420266:	inc    BYTE PTR [eax-0x5642708f]
  42026c:	fsubr  st(5),st
  42026e:	repnz mov dh,0x69
  420271:	rcl    DWORD PTR [ebp+ebp*8+0xd],1
  420275:	pop    ss
  420276:	mov    WORD PTR [ecx+0x74],ds
  420279:	adc    BYTE PTR [ecx+0x20313edc],ah
  42027f:	fsub   DWORD PTR [ecx+0x4d]
  420282:	or     bl,dh
  420284:	jecxz  0x420250
  420286:	inc    edi
  420287:	aaa    
  420288:	mov    ds:0x4f6db7e4,al
  42028d:	push   ss
  42028e:	pop    eax
  42028f:	lods   al,BYTE PTR ds:[esi]
  420290:	imul   edx,ecx,0x1e4df529
  420296:	add    eax,DWORD PTR ss:[edx-0x58]
  42029a:	stos   DWORD PTR es:[edi],eax
  42029b:	call   0x7c03:0x1e19c19a
  4202a2:	popa   
  4202a3:	or     DWORD PTR [esi+0x1e],esp
  4202a6:	call   0xc46b73be
  4202ab:	test   ebp,edx
  4202ad:	xchg   esp,eax
  4202ae:	in     eax,dx
  4202af:	call   FWORD PTR [ebx+0x6a50237e]
  4202b5:	jge    0x4202b3
  4202b7:	and    ah,ah
  4202b9:	xor    DWORD PTR fs:[ebx],edx
  4202bc:	pop    edi
  4202bd:	cmp    eax,edi
  4202bf:	leave  
  4202c0:	inc    eax
  4202c1:	cdq    
  4202c2:	mov    ah,0xc6
  4202c4:	xchg   ebx,eax
  4202c5:	mov    cl,0xec
  4202c7:	lods   al,BYTE PTR ds:[esi]
  4202c8:	test   DWORD PTR [esi+esi*4+0x4c],0x605a2076
  4202d0:	rol    DWORD PTR [eax],1
  4202d2:	mov    bl,0x81
  4202d4:	cli    
  4202d5:	(bad)  
  4202d6:	imul   esp,DWORD PTR [edi-0x57],0x5590a8d9
  4202dd:	sti    
  4202de:	dec    ebp
  4202df:	sbb    al,0x86
  4202e1:	xor    al,0xfd
  4202e3:	test   al,0x45
  4202e5:	pop    eax
  4202e6:	aam    0x1d
  4202e8:	mov    edx,0x83355557
  4202ed:	imul   edi,ebx,0x3ffb6e8f
  4202f3:	xor    cl,dh
  4202f5:	push   0x2e
  4202f7:	push   edx
  4202f8:	gs push eax
  4202fa:	push   ecx
  4202fb:	or     eax,esi
  4202fd:	mov    DWORD PTR [esi-0x5b],edx
  420300:	jae    0x4202fc
  420302:	mov    ah,0xd0
  420304:	push   ds
  420305:	neg    DWORD PTR [bx+di]
  420308:	pop    es
  420309:	mov    bh,0x2b
  42030b:	imul   esp,DWORD PTR [esi],0xff0e9213
  420311:	hlt    
  420312:	out    0x5a,al
  420314:	and    eax,0x2d9fbc
  420319:	mov    eax,0xe60e4670
  42031e:	out    dx,al
  42031f:	xor    ebp,0x9d2e3fbc
  420325:	lea    ecx,[edx+0x48ca970f]
  42032b:	imul   esp,DWORD PTR [edi-0xf],0x32
  42032f:	shl    BYTE PTR [edi],cl
  420331:	and    eax,0x5a465947
  420336:	push   esp
  420337:	into   
  420338:	cmp    bl,BYTE PTR [esi+ebx*8]
  42033b:	mov    esp,0xceda68cf
  420340:	cwde   
  420341:	rol    DWORD PTR [edx+0x278417ce],0x82
  420348:	mov    eax,0x301ec210
  42034d:	mov    edi,0x5781206f
  420352:	push   ebp
  420353:	mov    ecx,0x57f564ea
  420358:	aaa    
  420359:	adc    eax,0xb9c38152
  42035e:	clc    
  42035f:	push   0x4d64be17
  420364:	clc    
  420365:	ss pusha 
  420367:	jmp    0x8de92a3e
  42036c:	add    WORD PTR [ecx-0x6b11ada9],0x3ed8
  420375:	xor    dh,dh
  420377:	(bad)  
  420378:	fdiv   QWORD PTR [ebp-0x56]
  42037b:	xor    eax,0x880edb8b
  420380:	lods   eax,DWORD PTR ds:[esi]
  420381:	fisubr WORD PTR [esi+0x5]
  420384:	mov    ch,0xe2
  420386:	adc    BYTE PTR [esi+eax*1+0x6b],cl
  42038a:	mov    ah,0xcf
  42038c:	sub    esp,esi
  42038e:	pop    esp
  42038f:	mov    bh,0x9b
  420391:	dec    esp
  420392:	scas   eax,DWORD PTR es:[edi]
  420393:	sbb    ch,BYTE PTR [ebp-0x70cf0d4b]
  420399:	sub    bh,dl
  42039b:	rol    BYTE PTR [ebx],cl
  42039d:	sub    edx,0xb
  4203a0:	pop    ebx
  4203a1:	pmaxsw mm7,QWORD PTR [ebx]
  4203a4:	mov    al,0xec
  4203a6:	in     al,dx
  4203a7:	cmc    
  4203a8:	hlt    
  4203a9:	and    al,0x4b
  4203ab:	jge    0x4203b2
  4203ad:	mov    ah,0xc4
  4203af:	inc    esp
  4203b0:	call   0x11e53e2c
  4203b5:	cmp    DWORD PTR [ebp+edx*4-0x4ba4d71a],eax
  4203bc:	pop    esp
  4203bd:	enter  0xbff4,0x10
  4203c1:	jmp    0x4203a0
  4203c3:	inc    ebp
  4203c4:	adc    ecx,ebp
  4203c6:	(bad)  
  4203c7:	jecxz  0x420402
  4203c9:	in     al,dx
  4203ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203cb:	jle    0x42037b
  4203cd:	mov    ch,0xbb
  4203cf:	fsubr  QWORD PTR [eax+ebx*2-0x265d9113]
  4203d6:	or     DWORD PTR [ecx-0x3de3b55d],0xffffff80
  4203dd:	push   0x5b7b564
  4203e2:	add    edx,ebx
  4203e4:	pop    ds
  4203e5:	mov    bh,BYTE PTR ds:0xa96a9110
  4203eb:	push   eax
  4203ec:	ja     0x420403
  4203ee:	jns    0x42038c
  4203f0:	ds out 0x6a,al
  4203f3:	arpl   WORD PTR [ebx+0x6dd495ad],sp
  4203f9:	loopne 0x4203f2
  4203fb:	add    dh,ch
  4203fd:	ret    0x2d9d
  420400:	mov    ebp,0x3fc3fe7f
  420405:	out    dx,eax
  420406:	mov    edi,0x1b98af37
  42040b:	mov    eax,ds:0x1804c
  420410:	xchg   DWORD PTR [edx],eax
  420412:	add    BYTE PTR [eax],al
  420414:	mov    ebx,0xcd41c596
  420419:	call   0xe252fbb8
  42041e:	hlt    
  42041f:	xchg   edx,eax
  420420:	inc    ebp
  420421:	sub    eax,0x47a14a05
  420426:	bound  edi,QWORD PTR [ecx]
  420428:	fisub  DWORD PTR [eax+0x1c2f4c3]
  42042e:	popf   
  42042f:	push   ss
  420430:	out    dx,eax
  420431:	mov    bh,al
  420433:	sbb    eax,0xb9227e61
  420438:	jno    0x4204b3
  42043a:	out    dx,eax
  42043b:	jg     0x420491
  42043d:	(bad)  
  42043e:	jecxz  0x420408
  420440:	pusha  
  420441:	sbb    DWORD PTR [edi],esi
  420443:	mov    WORD PTR [edx],es
  420445:	pushf  
  420446:	sub    al,0x4e
  420448:	(bad)  
  420449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044a:	jne    0x42048e
  42044c:	xor    al,0x27
  42044e:	jb     0x420413
  420450:	mov    ah,0xc3
  420452:	push   esp
  420453:	inc    esp
  420454:	fxtract 
  420456:	mov    eax,0xcb7629d9
  42045b:	ret    0xd0db
  42045e:	sub    ebx,ecx
  420460:	out    0x34,al
  420462:	or     eax,0x1ed49b24
  420467:	xchg   edx,eax
  420468:	lahf   
  420469:	push   esi
  42046a:	loop   0x420444
  42046c:	iret   
  42046d:	xor    DWORD PTR [esi-0x5c54b013],eax
  420473:	dec    edx
  420474:	jecxz  0x42047d
  420476:	mov    edi,0xbac761d6
  42047b:	push   cs
  42047c:	mov    al,0xbd
  42047f:	retf   0x34c4
  420482:	lds    edi,FWORD PTR [ebx+eiz*1]
  420485:	cmp    BYTE PTR [ebx+edi*8-0x3c],bl
  420489:	jne    0x42049d
  42048b:	pop    esp
  42048c:	mov    cs,ebp
  42048e:	jno    0x420505
  420490:	jle    0x4204e6
  420492:	push   eax
  420493:	xor    edi,DWORD PTR [ebx+0x418be69]
  420499:	mov    ebp,0x5f264dca
  42049e:	das    
  42049f:	inc    esp
  4204a0:	inc    eax
  4204a1:	xor    BYTE PTR [esi+0x34],dl
  4204a4:	gs out 0x1,eax
  4204a7:	pop    edx
  4204a8:	mov    bh,BYTE PTR [ecx]
  4204aa:	push   es
  4204ab:	sub    eax,0x795e0c1d
  4204b0:	xor    dl,BYTE PTR [ebp+0x690d3a1]
  4204b6:	push   0x7cd435a
  4204bb:	mov    dh,0x8c
  4204bd:	(bad)  
  4204be:	leave  
  4204bf:	stc    
  4204c0:	adc    BYTE PTR [esi+0x95038a1],cl
  4204c6:	mov    bh,0xec
  4204c8:	mov    bl,0x6d
  4204ca:	popa   
  4204cb:	icebp  
  4204cc:	sbb    bh,BYTE PTR [esi-0x9665250]
  4204d2:	xchg   ecx,eax
  4204d3:	ins    DWORD PTR es:[edi],dx
  4204d4:	out    dx,eax
  4204d5:	stos   DWORD PTR es:[edi],eax
  4204d6:	imul   ebp,ebx,0x4e7d24d4
  4204dc:	stc    
  4204dd:	mov    ebp,0x669ed577
  4204e2:	or     eax,0x1e7fb324
  4204e7:	(bad)  
  4204e8:	test   eax,0x2c2e78b7
  4204ed:	outs   dx,DWORD PTR ds:[esi]
  4204ee:	mov    cl,0x1d
  4204f0:	cmp    BYTE PTR [edi+0x3d3771cc],0xa7
  4204f7:	inc    esp
  4204f8:	neg    DWORD PTR [esi+eax*2-0x21929687]
  4204ff:	leave  
  420500:	xor    BYTE PTR [edi-0x6cd53765],dh
  420506:	jp     0x42055d
  420508:	das    
  420509:	mov    DWORD PTR [ecx],ebp
  42050b:	mov    bl,0xbb
  42050d:	es das 
  42050f:	mov    ebp,0x4b81211e
  420514:	jl     0x420594
  420516:	push   0x1c25a982
  42051b:	cmp    BYTE PTR [eax+0x753e4aa2],dl
  420521:	add    eax,0xf758e6dd
  420526:	or     ecx,eax
  420528:	pushf  
  420529:	cmp    ah,ah
  42052b:	shl    dh,1
  42052d:	in     eax,0xb5
  42052f:	push   edi
  420530:	mov    ecx,DWORD PTR [ecx]
  420532:	pop    eax
  420533:	rcr    BYTE PTR [ecx-0x67345967],cl
  420539:	xor    ebp,DWORD PTR [eax+0x66bee853]
  42053f:	ja     0x42051e
  420541:	pop    esp
  420542:	xor    DWORD PTR [esi-0x64],0xffffff9d
  420546:	jg     0x420570
  420548:	mov    WORD PTR [edx-0x6e313e43],?
  42054e:	mov    ecx,0x4dc89f66
  420553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420554:	in     eax,dx
  420555:	inc    ecx
  420556:	and    ecx,DWORD PTR [ecx+esi*4+0x6710edca]
  42055d:	and    BYTE PTR [ebp-0x66],bl
  420560:	add    al,0xca
  420562:	xor    bl,BYTE PTR [eax+eiz*1]
  420565:	repnz scas al,BYTE PTR es:[edi]
  420567:	icebp  
  420568:	frndint 
  42056a:	jno    0x4205eb
  42056c:	ret    0xeddb
  42056f:	pop    edx
  420570:	mov    BYTE PTR [edx],dl
  420572:	test   BYTE PTR [edi+0x1fb385b0],ch
  420578:	test   DWORD PTR [ebp-0x7],esp
  42057b:	push   eax
  42057c:	retf   0xe526
  42057f:	mov    bh,0x85
  420581:	scas   al,BYTE PTR es:[edi]
  420582:	not    DWORD PTR ds:0xce7337a5
  420588:	inc    esi
  420589:	aad    0xc9
  42058b:	jle    0x4205cb
  42058d:	push   ecx
  42058e:	(bad)  [ebx+0x39f9c80d]
  420594:	mov    ecx,0x58b019e9
  420599:	add    eax,0x46e03a6c
  42059e:	or     BYTE PTR [edx],ah
  4205a0:	mov    dh,0xb9
  4205a2:	adc    DWORD PTR [edx-0x6cd7b131],esp
  4205a8:	pop    edx
  4205a9:	adc    ecx,DWORD PTR [esi]
  4205ab:	cmp    ecx,0x72
  4205ae:	push   0xffffff9d
  4205b0:	cdq    
  4205b1:	rol    ebx,0x2c
  4205b4:	cmp    bl,ch
  4205b6:	cli    
  4205b7:	cmp    ebp,ebx
  4205b9:	enter  0xc45e,0x27
  4205bd:	push   edx
  4205be:	dec    edx
  4205bf:	cmp    DWORD PTR [eax+0x10962e],edx
  4205c5:	jmp    0x1310:0x98854ecc
  4205cc:	cmc    
  4205cd:	fcom   QWORD PTR ds:0xccbcdc53
  4205d3:	aam    0x65
  4205d5:	sar    BYTE PTR [edx],0x7d
  4205d8:	cmc    
  4205d9:	mov    eax,0x59639f8d
  4205de:	test   edi,0x2b2dd898
  4205e4:	push   edi
  4205e5:	fcomp  DWORD PTR [esi]
  4205e7:	stos   BYTE PTR es:[edi],al
  4205e8:	scas   eax,DWORD PTR es:[edi]
  4205e9:	push   edx
  4205ea:	sub    BYTE PTR [ebx-0x7f35c7aa],dh
  4205f0:	mov    edi,?
  4205f2:	jmp    0xd2631a08
  4205f7:	cmp    al,0x4c
  4205f9:	imul   ebx,edx,0x64
  4205fc:	inc    esi
  4205fd:	xchg   ebx,eax
  4205fe:	daa    
  4205ff:	adc    al,0x6f
  420601:	mov    cl,0x8
  420603:	je     0x4205c2
  420605:	lahf   
  420606:	ret    0x4f76
  420609:	jo     0x420652
  42060b:	jl     0x42061a
  42060d:	popf   
  42060e:	mov    dh,0xec
  420610:	iret   
  420611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420613:	jmp    0x9ebe7e1
  420618:	mov    ebp,0x7d0c034b
  42061d:	mov    ds:0xdfd856f7,al
  420622:	outs   dx,DWORD PTR ds:[esi]
  420623:	inc    ebp
  420624:	outs   dx,DWORD PTR ds:[esi]
  420625:	pop    ebp
  420626:	jmp    0x21bc3c69
  42062b:	out    dx,al
  42062c:	int    0xbd
  42062e:	(bad)  
  420630:	(bad)  
  420631:	(bad)  
  420632:	in     al,dx
  420633:	or     BYTE PTR [esp+ebx*8],ah
  420636:	inc    edi
  420637:	fidivr DWORD PTR [ebx-0x7dfe580a]
  42063d:	(bad)  
  42063e:	xor    al,0xe6
  420640:	fwait
  420641:	jbe    0x4205de
  420643:	pop    ebp
  420644:	xlat   BYTE PTR ds:[ebx]
  420645:	sbb    BYTE PTR [ebp-0x6f],bh
  420648:	test   dh,0xd5
  42064b:	xor    ebx,DWORD PTR [edx+0x76bf617b]
  420651:	and    al,0x3e
  420653:	sbb    ebx,DWORD PTR [ebx-0x55]
  420656:	shr    BYTE PTR [esp+ebp*4+0x77],0x81
  42065b:	jmp    0xbbb8:0x83350286
  420662:	add    DWORD PTR [edx],esp
  420664:	dec    edx
  420665:	mov    al,0x29
  420667:	mov    edi,0x73150323
  42066c:	pop    edx
  42066d:	shr    bl,0x7f
  420670:	aaa    
  420671:	bound  ebp,QWORD PTR [edi+0x21]
  420674:	mov    edx,0xe2ff4c9d
  420679:	and    DWORD PTR [eax],esp
  42067b:	sar    esp,0x8d
  42067e:	mov    ebx,0x92f11ea5
  420683:	mov    ah,BYTE PTR [edi+eax*2+0x4f]
  420687:	pop    esi
  420688:	pop    ss
  420689:	outs   dx,DWORD PTR ds:[esi]
  42068a:	mov    ecx,0xfadf332f
  42068f:	mov    ah,0x89
  420691:	clc    
  420692:	repnz pop esp
  420694:	fcom   DWORD PTR [ebx-0x1b43782]
  42069a:	jle    0x42069c
  42069c:	push   ebx
  42069d:	(bad)  
  42069e:	(bad)  
  42069f:	push   esi
  4206a0:	(bad)  
  4206a1:	jle    0x42069e
  4206a3:	xlat   BYTE PTR ds:[ebx]
  4206a4:	outs   dx,DWORD PTR ds:[esi]
  4206a5:	mov    ah,0x77
  4206a7:	call   0x82d3:0xb412d3c0
  4206ae:	add    DWORD PTR [eax],eax
  4206b0:	xchg   DWORD PTR [edx],eax
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	pop    edx
  4206b5:	and    al,0x86
  4206b7:	ins    BYTE PTR es:[edi],dx
  4206b8:	add    BYTE PTR [ebp-0x149a2f8],ch
  4206be:	cmp    al,0x7e
  4206c0:	mov    ?,WORD PTR [edi-0x2bc7274c]
  4206c6:	sar    BYTE PTR [ecx-0x54283e99],cl
  4206cc:	push   edx
  4206cd:	outs   dx,BYTE PTR ds:[esi]
  4206ce:	mov    eax,ds:0xe2158ab4
  4206d3:	in     al,0x61
  4206d5:	ret    
  4206d6:	mov    DWORD PTR [edx],ecx
  4206d8:	dec    edi
  4206d9:	jb     0x420741
  4206db:	enter  0x561b,0xb1
  4206df:	and    BYTE PTR [ebx-0x12a0c435],dh
  4206e5:	mov    esp,0x37c67966
  4206ea:	icebp  
  4206eb:	clc    
  4206ec:	retf   
  4206ed:	inc    esp
  4206ee:	mov    esp,0xfe8d8f5
  4206f3:	xor    ebp,DWORD PTR [ebp-0x6c2ca895]
  4206f9:	out    dx,al
  4206fa:	jae    0x420687
  4206fc:	inc    ebp
  4206fd:	mov    ds:0x3cd92328,al
  420702:	scas   al,BYTE PTR es:[edi]
  420703:	cmp    ecx,eax
  420705:	cmp    dl,BYTE PTR [eax]
  420707:	xor    eax,0xaa7b11ed
  42070c:	mov    esi,0x76ea66bd
  420711:	outs   dx,DWORD PTR ds:[esi]
  420712:	icebp  
  420713:	in     eax,0xf1
  420715:	loop   0x4206b6
  420717:	(bad)  
  420718:	lea    edx,[edi-0x4457352]
  42071e:	add    dh,dh
  420720:	mov    WORD PTR [ecx+0x4],es
  420723:	scas   eax,DWORD PTR es:[edi]
  420724:	(bad)  
  420725:	mov    edi,0x9bbe8aea
  42072a:	push   ebp
  42072b:	sub    BYTE PTR [edi],0xe8
  42072e:	out    0x84,al
  420730:	hlt    
  420731:	dec    ebp
  420732:	add    esp,DWORD PTR [edi]
  420734:	je     0x4206df
  420736:	push   0xfffffff7
  420738:	inc    ebx
  420739:	retf   
  42073a:	(bad)  
  42073b:	lds    edi,FWORD PTR ds:0xe294431c
  420741:	mov    ds:0xed66ae15,eax
  420746:	std    
  420747:	pop    ss
  420748:	popf   
  420749:	push   ecx
  42074a:	jae    0x420708
  42074c:	ror    DWORD PTR [eax+0x52],0x17
  420750:	sub    DWORD PTR [esi-0x4f],edx
  420753:	jnp    0x42078d
  420755:	sub    al,0xda
  420757:	xchg   ebp,eax
  420758:	test   BYTE PTR [edi],cl
  42075a:	je     0x4207bd
  42075c:	or     eax,0x3a568d12
  420761:	out    dx,eax
  420762:	fwait
  420763:	push   esp
  420764:	lods   al,BYTE PTR ds:[esi]
  420765:	(bad)  
  420767:	not    edx
  420769:	and    dh,BYTE PTR [ebx]
  42076b:	shr    ebp,1
  42076d:	sahf   
  42076e:	pop    ds
  42076f:	stc    
  420770:	fcomp  DWORD PTR [ebx+0x70]
  420773:	pop    esp
  420774:	xor    esp,0x9f5b1710
  42077a:	add    esi,edi
  42077c:	(bad)  
  42077d:	mov    ds:0xc6cabc0c,al
  420782:	sbb    al,0xf3
  420784:	push   ecx
  420785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420786:	xchg   edi,eax
  420787:	pop    eax
  420788:	push   ds
  420789:	xchg   esp,eax
  42078a:	push   cs
  42078b:	in     eax,dx
  42078c:	ja     0x4207a3
  42078e:	mov    bl,0x9b
  420790:	cli    
  420791:	xchg   ebx,eax
  420792:	test   DWORD PTR [ecx],0x3de9d0a3
  420798:	mov    esi,0x453d3794
  42079d:	and    ebx,edi
  42079f:	sbb    ecx,edx
  4207a1:	xchg   DWORD PTR [esi],ebx
  4207a3:	mov    DWORD PTR [edx],ebx
  4207a5:	and    edi,0x58efcb12
  4207ab:	jb     0x420755
  4207ad:	pop    esi
  4207ae:	xor    al,0xd9
  4207b0:	iret   
  4207b1:	jns    0x420787
  4207b3:	adc    dl,ch
  4207b5:	test   DWORD PTR [ebx+ebp*1],ebp
  4207b8:	popa   
  4207b9:	xor    eax,0x2a9c172a
  4207be:	or     ch,ch
  4207c0:	clc    
  4207c1:	aaa    
  4207c2:	cmp    al,0xbc
  4207c4:	hlt    
  4207c5:	ret    
  4207c6:	outs   dx,BYTE PTR ds:[esi]
  4207c8:	or     eax,0x3440970b
  4207cd:	mov    dh,0xd6
  4207cf:	jo     0x420767
  4207d1:	sub    bh,bh
  4207d3:	cmp    BYTE PTR [ecx],cl
  4207d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207d6:	jl     0x420761
  4207d8:	mov    BYTE PTR [ebx],bl
  4207da:	mov    ch,0x33
  4207dc:	push   0xffffffa0
  4207de:	sbb    eax,0x4d8b092d
  4207e3:	leave  
  4207e4:	cwde   
  4207e5:	pop    esi
  4207e6:	in     eax,0xc0
  4207e8:	mov    BYTE PTR [esi],bh
  4207ea:	inc    ebx
  4207eb:	addr16 push ds
  4207ed:	push   cs
  4207ee:	jp     0x4207f6
  4207f0:	cmp    al,dl
  4207f2:	call   0x2ba9:0x56a267d2
  4207f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207fa:	loop   0x420872
  4207fc:	enter  0xefb5,0x91
  420800:	or     al,BYTE PTR ss:[edx+0x456d2706]
  420807:	ror    BYTE PTR [ebp+0x50],cl
  42080a:	ror    dl,0x53
  42080d:	ins    BYTE PTR es:[edi],dx
  42080e:	add    al,0xd1
  420810:	jno    0x420888
  420812:	adc    DWORD PTR [ebx],ebx
  420814:	add    al,0xff
  420816:	push   ebp
  420817:	sub    bh,BYTE PTR [esi+0x22]
  42081a:	mov    bl,0x1f
  42081c:	scas   al,BYTE PTR es:[edi]
  42081d:	xor    eax,0x37299208
  420822:	dec    edi
  420823:	xor    eax,0x4ae9358f
  420828:	fwait
  420829:	dec    edx
  42082a:	das    
  42082b:	mov    ebx,0x22139a65
  420830:	rcr    DWORD PTR [ebp-0x71],cl
  420833:	lods   al,BYTE PTR ds:[esi]
  420834:	icebp  
  420835:	xor    DWORD PTR [ecx],0xa9cdac13
  42083b:	sbb    edx,ecx
  42083d:	cmp    DWORD PTR [edi+0x79],esi
  420840:	outs   dx,BYTE PTR ds:[esi]
  420841:	not    DWORD PTR [esi]
  420843:	repz cdq 
  420845:	dec    ecx
  420846:	pop    eax
  420847:	loope  0x4208bb
  420849:	xchg   edx,eax
  42084a:	sub    DWORD PTR [ebp+0x1d],edx
  42084d:	sbb    BYTE PTR [edi-0x41],ah
  420850:	leave  
  420851:	cmp    al,0x57
  420853:	dec    edi
  420854:	mov    ?,eax
  420856:	xchg   esp,eax
  420857:	mov    ebp,0xabc36a07
  42085c:	or     bh,ch
  42085e:	ss into 
  420860:	stos   BYTE PTR es:[edi],al
  420861:	cmp    al,0xf1
  420863:	push   ebx
  420864:	dec    eax
  420865:	xor    DWORD PTR [ebp-0x14],ecx
  420868:	inc    edx
  420869:	jmp    0x4208be
  42086b:	ret    0x71a5
  42086e:	sub    ebx,ebx
  420870:	jp     0x4208e2
  420872:	fcmovnbe st,st(5)
  420874:	in     al,0x68
  420876:	gs aam 0x99
  420879:	cmp    ebp,DWORD PTR [esi+0x38b498b5]
  42087f:	mov    eax,0xa1e1fe37
  420884:	clc    
  420885:	dec    eax
  420886:	stc    
  420887:	fwait
  420888:	xchg   ebp,eax
  420889:	std    
  42088a:	aad    0xad
  42088c:	cmp    cl,BYTE PTR [eax-0x278504e4]
  420892:	cmc    
  420893:	or     BYTE PTR [edi],0x22
  420896:	mov    eax,0x5a22fdd5
  42089b:	jnp    0x42087e
  42089d:	sbb    edi,eax
  42089f:	xchg   edi,eax
  4208a0:	xor    ebp,esp
  4208a2:	sahf   
  4208a3:	lea    ebp,[edx]
  4208a5:	add    DWORD PTR [eax-0x7ad87ee2],esp
  4208ab:	scas   eax,DWORD PTR es:[edi]
  4208ac:	or     al,0x8b
  4208ae:	sbb    eax,0xa562f184
  4208b3:	and    BYTE PTR [esi],dh
  4208b5:	cdq    
  4208b6:	xor    eax,0x41e3770e
  4208bb:	les    ebp,FWORD PTR [edi+0x72]
  4208be:	clc    
  4208bf:	fld    TBYTE PTR [edi-0x80]
  4208c2:	ins    BYTE PTR es:[edi],dx
  4208c3:	and    esi,DWORD PTR [edi-0x46]
  4208c6:	xor    al,BYTE PTR [esi+0x18]
  4208c9:	aas    
  4208ca:	jo     0x420886
  4208cc:	adc    eax,0x837bc363
  4208d1:	jg     0x420898
  4208d3:	inc    esp
  4208d4:	jle    0x42092e
  4208d6:	adc    DWORD PTR [edx],ecx
  4208d8:	push   eax
  4208d9:	sub    DWORD PTR [edx+0x102ac22d],0x917b665d
  4208e3:	dec    ebx
  4208e4:	out    0x54,al
  4208e6:	jnp    0x4208da
  4208e8:	xchg   edi,eax
  4208e9:	into   
  4208ea:	adc    eax,0x7db9d026
  4208ef:	pop    ss
  4208f0:	inc    edi
  4208f1:	add    BYTE PTR [ecx],cl
  4208f3:	and    ecx,esp
  4208f5:	mov    bl,bh
  4208f7:	dec    ecx
  4208f8:	cwde   
  4208f9:	and    esi,DWORD PTR [eax+0xcee0891]
  4208ff:	dec    eax
  420900:	mov    eax,0x55f8e771
  420905:	adc    BYTE PTR [ecx+0x30],ch
  420908:	aad    0xb6
  42090a:	adc    eax,0x97333b97
  42090f:	pop    eax
  420910:	arpl   WORD PTR [ecx+0x76ad062e],sp
  420916:	xchg   esp,eax
  420917:	out    dx,al
  420918:	inc    edi
  420919:	mov    eax,0x4b44dba2
  42091e:	cmp    eax,0xb2fe293
  420923:	dec    esp
  420924:	inc    eax
  420925:	cmp    BYTE PTR [ebx+esi*1+0x24],0xc2
  42092a:	mov    al,ds:0x391c95c6
  42092f:	(bad)  
  420930:	fsub   DWORD PTR [edi+edi*2-0x73]
  420934:	cmp    al,0xd
  420936:	mov    ecx,0xc6706e1d
  42093b:	add    BYTE PTR [ecx],dl
  42093d:	push   cs
  42093e:	or     dl,ch
  420940:	pop    ds
  420941:	out    dx,al
  420942:	repz jmp FWORD PTR [edi-0x6130fbda]
  420949:	mov    ebp,ecx
  42094b:	jns    0x4209a7
  42094d:	test   DWORD PTR [ecx],eax
  42094f:	add    BYTE PTR [edi+0x21000002],al
  420955:	int    0x79
  420957:	mov    ch,ch
  420959:	push   esi
  42095a:	popf   
  42095b:	dec    esp
  42095c:	loope  0x4209b2
  42095e:	aas    
  42095f:	push   ebp
  420960:	out    0x84,eax
  420962:	fild   WORD PTR [ebx+0x38ab6f59]
  420968:	cmp    DWORD PTR [edi-0x7a],edi
  42096b:	addr16 jb 0x42098b
  42096e:	cmp    ah,BYTE PTR [ecx+0x2fb1de7a]
  420974:	push   ss
  420975:	test   DWORD PTR ds:[edi],0xa9d75f37
  42097c:	cmp    BYTE PTR [eax-0x3c83eae9],bh
  420982:	mov    DWORD PTR [ebx-0x52af37ba],edx
  420988:	xchg   ebp,eax
  420989:	xchg   edi,eax
  42098a:	sub    DWORD PTR [esi-0x7],edi
  42098d:	mov    al,0x2a
  42098f:	cmp    edi,DWORD PTR [esi]
  420991:	mov    al,0x2d
  420993:	mov    esp,0x99f560fc
  420998:	scas   eax,DWORD PTR es:[edi]
  420999:	(bad)  
  42099a:	stos   DWORD PTR es:[edi],eax
  42099b:	setbe  BYTE PTR [eax-0x1]
  42099f:	inc    esp
  4209a0:	(bad)  
  4209a1:	cmp    DWORD PTR [ebx-0x2b],esi
  4209a4:	dec    esi
  4209a5:	push   ecx
  4209a6:	dec    eax
  4209a7:	jge    0x42096d
  4209a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209aa:	adc    eax,0x3600208e
  4209af:	jle    0x4209c5
  4209b1:	xor    DWORD PTR [eax],esp
  4209b3:	sub    ecx,DWORD PTR [ebp+0x76]
  4209b6:	dec    ebx
  4209b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b8:	inc    esi
  4209b9:	aas    
  4209ba:	sub    ch,BYTE PTR [ebx+0x79]
  4209bd:	out    dx,al
  4209be:	sbb    edi,DWORD PTR [edi]
  4209c0:	mov    ch,0x17
  4209c2:	or     esp,esp
  4209c4:	(bad)  
  4209c5:	dec    eax
  4209c6:	ret    
  4209c7:	pop    esi
  4209c8:	sbb    eax,0xcefcce39
  4209cd:	inc    esi
  4209ce:	sbb    eax,0xcfe1ee8a
  4209d3:	inc    edi
  4209d4:	in     eax,dx
  4209d5:	and    al,0x71
  4209d7:	push   0xffffffa6
  4209d9:	leave  
  4209da:	push   cs
  4209db:	test   BYTE PTR [edx+0x33],dh
  4209de:	jp     0x4209b6
  4209e0:	test   DWORD PTR [ebp+0x30],eax
  4209e3:	jecxz  0x4209d6
  4209e5:	into   
  4209e6:	(bad)  ds:0xc76559f1
  4209ec:	add    BYTE PTR [esi+0x61],dh
  4209ef:	mov    cl,0x38
  4209f1:	mov    al,ds:0xe7aed60c
  4209f6:	into   
  4209f7:	sbb    ch,BYTE PTR [edi]
  4209f9:	enter  0x1b45,0xb1
  4209fd:	mov    ds:0x6e1a0983,eax
  420a02:	call   0x51bea46f
  420a07:	sbb    al,0x8f
  420a09:	push   edi
  420a0a:	sub    al,BYTE PTR [edi]
  420a0c:	mov    al,ds:0xc51e8de
  420a11:	repz loop 0x420a0f
  420a14:	in     al,0x5a
  420a16:	pop    es
  420a17:	fmul   QWORD PTR [ebx-0x4dbd3bbc]
  420a1d:	out    dx,eax
  420a1e:	mov    bl,0x14
  420a20:	in     al,0xf
  420a22:	data16 clc 
  420a24:	lods   eax,DWORD PTR ds:[esi]
  420a25:	ins    DWORD PTR es:[edi],dx
  420a26:	xor    eax,0x8a510a5d
  420a2b:	ins    DWORD PTR es:[edi],dx
  420a2c:	(bad)  
  420a2d:	nop
  420a2e:	xor    BYTE PTR [ecx-0x65de8b35],0x47
  420a35:	jns    0x420a52
  420a37:	pop    ds
  420a38:	ror    BYTE PTR [edx+edi*4],1
  420a3b:	mov    DWORD PTR [ecx+0x7f05c6a0],ebx
  420a41:	loop   0x420a5a
  420a43:	cmp    BYTE PTR [ebp-0x4e],ah
  420a46:	js     0x4209f1
  420a48:	or     ecx,DWORD PTR [ebx]
  420a4a:	jne    0x420a9c
  420a4c:	jno    0x420a39
  420a4e:	gs and eax,0x6619e9fd
  420a54:	sbb    eax,0x68a9386d
  420a59:	cli    
  420a5a:	mov    ah,0xfe
  420a5c:	imul   edi,DWORD PTR [ecx],0x397c9e78
  420a62:	out    dx,al
  420a63:	jb     0x420a0d
  420a65:	shr    ebp,0x87
  420a68:	mov    bl,BYTE PTR [ebp+0x16]
  420a6b:	mov    WORD PTR [ebp+edi*2+0x515f2f82],es
  420a72:	in     eax,0xfe
  420a74:	call   0x7ac19f52
  420a79:	xor    edi,ebx
  420a7b:	ror    BYTE PTR [edx-0x48],1
  420a7e:	inc    esp
  420a7f:	int3   
  420a80:	scas   al,BYTE PTR es:[edi]
  420a81:	mov    dl,0xea
  420a83:	sahf   
  420a84:	fimul  DWORD PTR [ecx-0x43d649a8]
  420a8a:	push   ebx
  420a8b:	inc    esp
  420a8c:	aad    0xac
  420a8e:	or     edi,DWORD PTR [edi-0x58]
  420a91:	not    bh
  420a93:	jecxz  0x420a33
  420a95:	push   eax
  420a96:	cmp    BYTE PTR [esi],bl
  420a98:	stos   BYTE PTR es:[edi],al
  420a99:	jae    0x420a3c
  420a9b:	stc    
  420a9c:	outs   dx,DWORD PTR ds:[esi]
  420a9d:	int3   
  420a9e:	mov    ds:0x91ca6ffb,al
  420aa3:	cmp    ebx,DWORD PTR ds:0xe61d2134
  420aa9:	in     eax,0x4f
  420aab:	lahf   
  420aac:	enter  0x5d32,0x3c
  420ab0:	pop    eax
  420ab1:	push   0xffffffe2
  420ab3:	xchg   DWORD PTR [ecx],ebp
  420ab5:	adc    eax,0xab9a0bec
  420aba:	popa   
  420abb:	push   eax
  420abc:	mov    ah,0x60
  420abe:	daa    
  420abf:	iret   
  420ac0:	pusha  
  420ac1:	adc    bh,BYTE PTR [edi]
  420ac3:	jl     0x420a56
  420ac5:	cwde   
  420ac6:	retf   
  420ac7:	add    BYTE PTR [edx+0x61],ah
  420aca:	popf   
  420acb:	push   esi
  420acc:	or     DWORD PTR [edx],eax
  420ace:	das    
  420acf:	add    al,0x68
  420ad1:	inc    ecx
  420ad2:	(bad)  [ebp+0x5c918f8e]
  420ad8:	xchg   esi,eax
  420ad9:	cmp    bh,BYTE PTR [ecx]
  420adb:	xor    bl,BYTE PTR [edx+0x3]
  420ade:	(bad)  
  420adf:	mov    eax,ds:0xf7c12b56
  420ae4:	push   ecx
  420ae5:	in     al,dx
  420ae6:	test   BYTE PTR [edi],al
  420ae8:	in     al,0x20
  420aea:	mov    dl,0x85
  420aec:	push   edi
  420aed:	lock mov bl,0x68
  420af0:	xor    DWORD PTR [edx-0x11f26195],edi
  420af6:	xor    eax,0xa8c4d254
  420afb:	pop    ecx
  420afc:	push   ecx
  420afd:	add    al,0x1b
  420aff:	sahf   
  420b00:	mov    al,0x15
  420b02:	xor    ecx,esp
  420b04:	push   esp
  420b05:	nop
  420b06:	scas   eax,DWORD PTR es:[edi]
  420b07:	xchg   edi,eax
  420b08:	sbb    al,0x4a
  420b0a:	ins    DWORD PTR es:[edi],dx
  420b0b:	dec    ebx
  420b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b0d:	mov    cl,0xed
  420b0f:	adc    ch,BYTE PTR [ecx+0x2e5a298b]
  420b15:	pop    ecx
  420b16:	xchg   edi,eax
  420b17:	dec    BYTE PTR [esi+0x61]
  420b1a:	push   0xffffffd4
  420b1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b1d:	sub    edi,ebp
  420b1f:	test   esp,edx
  420b21:	jbe    0x420b6e
  420b23:	mov    ds:0x6e161194,al
  420b28:	arpl   WORD PTR [edi+0x2d],di
  420b2b:	and    DWORD PTR [edx],esi
  420b2d:	test   BYTE PTR [esi-0x8],dh
  420b30:	mov    edx,0x325132d8
  420b35:	pop    eax
  420b36:	mov    dl,0x62
  420b38:	add    DWORD PTR [eax-0x54cc9079],esp
  420b3e:	pop    ss
  420b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b40:	or     edi,DWORD PTR [ecx*1-0x375aa96d]
  420b47:	fbstp  TBYTE PTR [ecx-0x6717f88f]
  420b4d:	fsubp  st(3),st
  420b4f:	outs   dx,DWORD PTR ds:[esi]
  420b50:	pop    edi
  420b51:	adc    eax,0x65707c6f
  420b56:	in     al,0xef
  420b58:	jmp    0x1e394eef
  420b5d:	in     eax,0xc2
  420b5f:	and    DWORD PTR [esi+0x1469f9cd],esi
  420b65:	adc    ch,BYTE PTR [eax]
  420b67:	adc    esi,DWORD PTR [edi+0x49]
  420b6a:	xchg   ebx,eax
  420b6b:	pop    edx
  420b6c:	and    DWORD PTR [ecx-0x10],edi
  420b6f:	ins    BYTE PTR es:[edi],dx
  420b70:	add    al,0xe
  420b72:	adc    ebx,DWORD PTR [ecx]
  420b74:	xor    eax,0xfd8bda85
  420b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b7a:	add    DWORD PTR [ebx-0x5d],edi
  420b7d:	inc    ebx
  420b7e:	call   0x54d18d98
  420b83:	dec    esi
  420b84:	in     eax,dx
  420b85:	enter  0xce2c,0x7d
  420b89:	push   0xffffff92
  420b8b:	pop    eax
  420b8c:	jno    0x420be0
  420b8e:	icebp  
  420b8f:	rcr    DWORD PTR [edi-0x22],cl
  420b92:	fsub   DWORD PTR [edx+0x7d1cacc9]
  420b98:	push   edi
  420b99:	in     al,dx
  420b9a:	jnp    0x420b23
  420b9c:	dec    esp
  420b9d:	(bad)  
  420b9e:	or     cl,BYTE PTR [esi-0x28cd38a9]
  420ba4:	ins    BYTE PTR es:[edi],dx
  420ba5:	add    ch,bl
  420ba7:	mov    eax,0xc872013c
  420bac:	ins    BYTE PTR es:[edi],dx
  420bad:	xchg   edx,eax
  420bae:	sbb    DWORD PTR [esi+0x6c],0xce7bad0c
  420bb5:	adc    DWORD PTR [eax+0x1d50d88b],edx
  420bbb:	mov    eax,ds:0x3c402913
  420bc0:	out    0x90,al
  420bc2:	add    edx,edi
  420bc4:	jb     0x420c1f
  420bc6:	in     eax,dx
  420bc7:	inc    eax
  420bc8:	outs   dx,BYTE PTR ds:[esi]
  420bc9:	jb     0x420be7
  420bcb:	jae    0x420b79
  420bcd:	cmp    al,0x2c
  420bcf:	ficomp WORD PTR [ecx]
  420bd1:	test   eax,0xbe404ebc
  420bd6:	jge    0x420bf2
  420bd8:	inc    ebp
  420bd9:	pop    es
  420bda:	push   0x0
  420bdc:	leave  
  420bdd:	xchg   esi,eax
  420bde:	ins    DWORD PTR es:[edi],dx
  420bdf:	mov    dh,0x7f
  420be1:	(bad)  
  420be2:	(bad)  
  420be4:	aam    0xd9
  420be6:	inc    ebx
  420be7:	fsubr  DWORD PTR [ebx]
  420be9:	repnz xor ebp,ecx
  420bec:	loope  0x420b75
  420bee:	add    DWORD PTR [eax],eax
  420bf0:	xchg   DWORD PTR [edx],eax
  420bf2:	add    BYTE PTR [eax],al
  420bf4:	mov    al,0xd5
  420bf6:	dec    edi
  420bf7:	rcl    BYTE PTR [ecx],cl
  420bf9:	sahf   
  420bfa:	popf   
  420bfb:	pusha  
  420bfc:	not    BYTE PTR [ebp+0x42]
  420bff:	in     al,dx
  420c00:	mov    esp,0x19ce95d9
  420c05:	fidivr DWORD PTR [edi]
  420c07:	cmp    al,ch
  420c09:	(bad)  
  420c0a:	cdq    
  420c0b:	out    dx,al
  420c0c:	ret    
  420c0d:	xchg   esp,ecx
  420c0f:	cli    
  420c10:	nop
  420c11:	shl    BYTE PTR [edi],1
  420c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c14:	sbb    al,0x33
  420c16:	outs   dx,DWORD PTR ds:[esi]
  420c17:	js     0x420bb2
  420c19:	lods   al,BYTE PTR ds:[esi]
  420c1a:	mov    esi,0x7df3afed
  420c1f:	pop    ss
  420c20:	mov    esi,0x3f9961de
  420c25:	sbb    dh,BYTE PTR [edi-0x15f4a8e1]
  420c2b:	repnz test al,0x2f
  420c2e:	dec    esi
  420c2f:	mov    edx,0xda38b198
  420c34:	mov    eax,0x9fae21e4
  420c39:	stos   BYTE PTR es:[edi],al
  420c3a:	mov    ebp,0x2f6761c6
  420c3f:	dec    eax
  420c40:	inc    ecx
  420c41:	push   edx
  420c42:	or     DWORD PTR ds:0x3258995e,esi
  420c48:	mov    ch,0x4c
  420c4a:	test   eax,0x8ec7cc7a
  420c4f:	push   ebp
  420c50:	adc    dl,ah
  420c52:	inc    edx
  420c53:	test   al,0xd0
  420c55:	(bad)  
  420c56:	push   cs
  420c57:	popa   
  420c58:	fld    st(6)
  420c5a:	xor    DWORD PTR [ebp+0x62],ebp
  420c5d:	bound  eax,QWORD PTR [ecx-0x5e]
  420c60:	mov    WORD PTR [ebx-0x34e88a27],cs
  420c66:	xlat   BYTE PTR ds:[ebx]
  420c67:	adc    BYTE PTR [ebx],al
  420c69:	xor    cl,bl
  420c6b:	scas   al,BYTE PTR es:[edi]
  420c6c:	fiadd  DWORD PTR [esi+ebp*4]
  420c6f:	dec    ecx
  420c70:	and    al,BYTE PTR [ebp+0xe]
  420c73:	stos   BYTE PTR es:[edi],al
  420c74:	outs   dx,BYTE PTR ds:[esi]
  420c75:	xchg   BYTE PTR ds:0xc6ebd14,dl
  420c7b:	mov    dh,0x8d
  420c7d:	sti    
  420c7e:	fimul  WORD PTR ds:0x39eea572
  420c84:	mov    ds:0x8a30fd95,al
  420c89:	adc    eax,0xce03e7ef
  420c8e:	lea    ecx,[eax+0x3a112f33]
  420c94:	in     al,0x2b
  420c96:	adc    cl,BYTE PTR [esi+0x66]
  420c99:	mov    bh,0x27
  420c9b:	psadbw mm4,QWORD PTR [ecx+0x42b51a03]
  420ca2:	cmp    bh,cl
  420ca4:	sub    DWORD PTR [esi+0x30],esi
  420ca7:	in     eax,dx
  420ca8:	mov    ecx,0xbc096de
  420cad:	clc    
  420cae:	push   esp
  420caf:	outs   dx,DWORD PTR ds:[esi]
  420cb0:	mov    cl,0x98
  420cb2:	push   es
  420cb3:	outs   dx,BYTE PTR ds:[esi]
  420cb4:	xor    ah,BYTE PTR [ecx-0x30]
  420cb7:	(bad)
  420cbb:	add    eax,0x215a6f34
  420cc0:	call   0x9a87bbac
  420cc5:	mov    DWORD PTR [edi+0x454c7f32],ecx
  420ccb:	fsubr  st,st(2)
  420ccd:	mov    ebp,0x16b0ab16
  420cd2:	call   FWORD PTR [esi+0x37]
  420cd5:	outs   dx,BYTE PTR ds:[esi]
  420cd6:	cld    
  420cd7:	aas    
  420cd8:	push   cs
  420cd9:	icebp  
  420cda:	jo     0x420c66
  420cdc:	mov    ds:0x6bc10079,eax
  420ce1:	fisttp WORD PTR [eax+ebx*4-0x4d330462]
  420ce8:	inc    esp
  420ce9:	mov    bh,0xb4
  420ceb:	aaa    
  420cec:	(bad)  [edi]
  420cee:	lea    eax,[ebx-0x54]
  420cf1:	inc    esp
  420cf2:	(bad)  
  420cf3:	mov    eax,0x53982c27
  420cf8:	sti    
  420cf9:	shr    BYTE PTR [ecx+0x49],1
  420cfc:	xchg   bl,bl
  420cfe:	add    eax,0x90ec07ad
  420d03:	mov    ds:0x242de480,eax
  420d08:	mov    ebx,esi
  420d0a:	mov    BYTE PTR [eax],al
  420d0c:	rol    BYTE PTR [ebp-0x19992b06],0x88
  420d13:	push   ebx
  420d14:	mov    bl,ah
  420d16:	aas    
  420d17:	and    esp,ebp
  420d19:	addr16 dec edi
  420d1b:	ins    DWORD PTR es:[edi],dx
  420d1c:	int3   
  420d1d:	push   cs
  420d1e:	xchg   BYTE PTR [esi+0x27],al
  420d21:	dec    ebp
  420d22:	jmp    0x3afa03d0
  420d27:	ret    0x708e
  420d2a:	scas   al,BYTE PTR es:[edi]
  420d2b:	push   es
  420d2c:	mov    esi,0x856eef82
  420d31:	daa    
  420d32:	mov    eax,DWORD PTR [edi-0xa66a5ce]
  420d38:	(bad)  
  420d39:	pop    eax
  420d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d3b:	pop    ebx
  420d3c:	adc    ebp,DWORD PTR [eax+0x7db71dc3]
  420d42:	add    al,0xbb
  420d44:	dec    edi
  420d45:	jmp    0xa73d:0xa03c8d92
  420d4c:	xor    DWORD PTR [ebp+0x1487884a],edx
  420d52:	out    0xaa,eax
  420d54:	retf   0xbb74
  420d57:	push   0x43
  420d59:	sbb    esp,DWORD PTR [ebp+0x59]
  420d5c:	and    al,0x49
  420d5e:	aaa    
  420d5f:	out    dx,al
  420d60:	xchg   ecx,eax
  420d61:	push   esi
  420d62:	push   ds
  420d63:	out    0x95,al
  420d65:	loope  0x420d58
  420d67:	xchg   DWORD PTR [ebx-0x16d33a60],edi
  420d6d:	push   edx
  420d6e:	mov    ecx,0xa3eb5b61
  420d73:	xlat   BYTE PTR ds:[ebx]
  420d74:	ja     0x420d3b
  420d76:	mov    esp,0x20649db7
  420d7b:	lods   eax,DWORD PTR ds:[esi]
  420d7c:	ds aam 0xca
  420d7f:	and    al,0x19
  420d81:	(bad)  
  420d82:	cdq    
  420d83:	(bad)  [edx]
  420d85:	cld    
  420d86:	xchg   ecx,eax
  420d87:	rcl    DWORD PTR fs:[ecx+0x6876649a],cl
  420d8e:	enter  0xef2b,0xa8
  420d92:	dec    esi
  420d93:	cmp    ebx,esp
  420d95:	and    BYTE PTR [edx+0x679141b9],0xea
  420d9c:	xchg   ecx,eax
  420d9d:	adc    ecx,esp
  420d9f:	push   0x2d
  420da1:	fld    QWORD PTR [esi-0x325cda8f]
  420da7:	push   edx
  420da8:	xchg   ebp,eax
  420da9:	pop    es
  420daa:	pop    es
  420dab:	(bad)  
  420dac:	cdq    
  420dad:	sti    
  420dae:	das    
  420daf:	jae    0x420db7
  420db1:	sahf   
  420db2:	xchg   esi,eax
  420db3:	sbb    BYTE PTR [edx-0x6b],cl
  420db6:	jmp    0xe6e3eb24
  420dbb:	mov    esp,0x259ce75c
  420dc0:	out    0xd1,eax
  420dc2:	cli    
  420dc3:	lock sbb eax,0xa935fc12
  420dc9:	pop    es
  420dca:	and    al,0xec
  420dcc:	push   edx
  420dcd:	xor    esi,ebp
  420dcf:	popf   
  420dd0:	cmp    al,0x0
  420dd2:	jns    0x420e29
  420dd4:	mov    eax,0x63afb3a1
  420dd9:	dec    ebx
  420dda:	and    eax,0xe9873007
  420ddf:	xor    eax,DWORD PTR [ecx]
  420de1:	fadd   DWORD PTR ds:0x68883c9d
  420de7:	sbb    BYTE PTR [eax-0x48],0x9
  420deb:	(bad)  [ecx-0x3a7d0c76]
  420df1:	sub    ah,BYTE PTR gs:[edi+eax*2-0x4a75ea45]
  420df9:	fwait
  420dfa:	adc    bl,dl
  420dfc:	mul    BYTE PTR [ebx-0x59]
  420dff:	fistp  DWORD PTR [eax+0x7bc76218]
  420e05:	jno    0x420e6e
  420e07:	fmul   DWORD PTR [edx]
  420e09:	ds ss aad 0xa0
  420e0d:	call   0x1fa5:0xa5472d60
  420e14:	mov    ds:0x82b61777,al
  420e19:	sbb    al,0x82
  420e1b:	sub    dl,BYTE PTR [edx+0x28]
  420e1e:	mov    cs,WORD PTR [eax]
  420e20:	or     DWORD PTR cs:[ecx-0x6509d933],0x5a2a8606
  420e2b:	scas   al,BYTE PTR es:[edi]
  420e2c:	std    
  420e2d:	xchg   ecx,eax
  420e2e:	mov    ecx,0x5b9f563d
  420e33:	jp     0x420e00
  420e35:	or     al,0xab
  420e37:	pop    esp
  420e38:	(bad)  
  420e39:	popf   
  420e3a:	add    BYTE PTR [ecx+0x290ef88d],ah
  420e40:	xor    ecx,DWORD PTR [eax-0x39]
  420e43:	out    dx,al
  420e44:	pushf  
  420e45:	mov    esi,0xdd0af493
  420e4a:	pop    ebx
  420e4b:	ficomp WORD PTR [esi-0x8]
  420e4e:	push   edi
  420e4f:	je     0x420e8b
  420e51:	adc    bh,BYTE PTR [edx-0x61]
  420e54:	sub    ebp,DWORD PTR [edx-0xd8975b0]
  420e5a:	pop    ss
  420e5b:	or     al,0x71
  420e5d:	or     BYTE PTR [ecx-0x79660113],dh
  420e63:	push   ds
  420e64:	sar    bl,cl
  420e66:	outs   dx,BYTE PTR ds:[esi]
  420e67:	dec    edx
  420e68:	jp     0x420dee
  420e6a:	or     BYTE PTR [ecx+0x0],bh
  420e6d:	out    0x51,eax
  420e6f:	sub    bl,BYTE PTR [edx]
  420e71:	jns    0x420df7
  420e73:	repz mov ds:0xa5b43d26,al
  420e79:	xchg   ebx,eax
  420e7a:	pushf  
  420e7b:	add    BYTE PTR [eax-0x11],cl
  420e7e:	ja     0x420eeb
  420e80:	idiv   ebx
  420e82:	pop    esp
  420e83:	out    dx,eax
  420e84:	dec    esp
  420e85:	mul    BYTE PTR [esi-0x7d]
  420e88:	icebp  
  420e89:	pop    ecx
  420e8a:	sbb    DWORD PTR [eax+ebp*2-0x78fffe76],edi
  420e91:	add    al,BYTE PTR [eax]
  420e93:	add    dl,ah
  420e95:	out    dx,eax
  420e96:	pop    eax
  420e97:	call   0xdce8d852
  420e9c:	loope  0x420f14
  420e9e:	popa   
  420e9f:	scas   al,BYTE PTR es:[edi]
  420ea0:	fs mov ah,0x5a
  420ea3:	arpl   WORD PTR [ecx+0x42],bp
  420ea6:	out    dx,al
  420ea7:	rol    DWORD PTR [esi+0x63],0xb1
  420eab:	(bad)  
  420ead:	sub    BYTE PTR [edi-0x1d7ea6dd],ch
  420eb3:	fwait
  420eb4:	xchg   edi,eax
  420eb5:	pop    ds
  420eb6:	mov    edi,0x1fa12d7f
  420ebb:	out    dx,eax
  420ebc:	add    DWORD PTR [ecx],ebx
  420ebe:	sar    ah,0x91
  420ec1:	push   ebp
  420ec2:	cld    
  420ec3:	test   al,0xc3
  420ec5:	mov    eax,ds:0xba140d02
  420eca:	mov    ds:0x49d3fcdc,al
  420ecf:	int    0x41
  420ed1:	test   eax,0x2f3d5d25
  420ed6:	fbld   TBYTE PTR [ebp-0x3a]
  420ed9:	out    0xe8,eax
  420edb:	popf   
  420edc:	int    0x1b
  420ede:	aas    
  420edf:	data16 mov WORD PTR [ebx],?
  420ee2:	lds    esi,FWORD PTR [ebp+0x2b]
  420ee5:	int    0xec
  420ee7:	sub    eax,DWORD PTR [ebx-0x52fbd1d6]
  420eed:	or     al,BYTE PTR [ecx]
  420eef:	add    eax,0xb99c952
  420ef4:	loop   0x420f35
  420ef6:	in     eax,dx
  420ef7:	enter  0xc801,0x4b
  420efb:	push   edx
  420efc:	xor    DWORD PTR [ebp+0x17],edi
  420eff:	retf   
  420f00:	add    eax,edi
  420f02:	mov    ecx,0xe5478db4
  420f07:	jl     0x420ee4
  420f09:	pop    esi
  420f0a:	and    DWORD PTR [edx],0x9f65260b
  420f10:	fistp  QWORD PTR ds:0xd3a7acd7
  420f16:	jl     0x420f1b
  420f18:	mov    ch,0x3e
  420f1a:	cmp    DWORD PTR ds:0x32bccdd3,ebx
  420f20:	es sub bl,dh
  420f23:	sbb    al,0x5d
  420f25:	les    edx,FWORD PTR [edx+ecx*4-0x6c8165a]
  420f2c:	das    
  420f2d:	push   esp
  420f2e:	and    DWORD PTR [edx+ebx*4],esi
  420f31:	jmp    0xa016:0xaf4670a4
  420f38:	dec    edi
  420f39:	inc    ebx
  420f3a:	and    ebp,DWORD PTR [ebx+0x11]
  420f3d:	aaa    
  420f3e:	clc    
  420f3f:	pop    ecx
  420f40:	pop    ds
  420f41:	mov    ds:0x46cc32f5,eax
  420f46:	or     al,0x61
  420f48:	jge    0x420f6d
  420f4a:	gs aad 0xea
  420f4d:	shl    BYTE PTR [edx+0x61e4f9a8],0x40
  420f54:	dec    edx
  420f55:	xor    bl,BYTE PTR [esi-0x169f667d]
  420f5b:	mov    ebp,0xaffb844b
  420f60:	fild   QWORD PTR ds:0x44f3f937
  420f66:	in     al,0x8a
  420f68:	shr    DWORD PTR [ebp-0x31c914ef],1
  420f6e:	imul   ebp,DWORD PTR ds:0x99a96d2,0x7d70e3f8
  420f78:	sbb    eax,0xb865fe23
  420f7d:	hlt    
  420f7e:	gs sti 
  420f80:	cmp    edx,DWORD PTR [esi-0x6d]
  420f83:	adc    BYTE PTR [edx-0x1e],dl
  420f86:	into   
  420f87:	in     eax,0x8a
  420f89:	int    0x53
  420f8b:	pop    ss
  420f8c:	xchg   ebp,eax
  420f8d:	pop    esp
  420f8e:	push   ds
  420f8f:	push   esi
  420f90:	sub    edx,ecx
  420f92:	fldenv [eax]
  420f94:	dec    eax
  420f95:	dec    ebx
  420f96:	jns    0x421005
  420f98:	loop   0x420f65
  420f9a:	xchg   edi,eax
  420f9b:	xor    eax,0xaa2b4b75
  420fa0:	mov    ds:0x8f71e396,eax
  420fa5:	jo     0x420fe1
  420fa7:	xchg   edi,eax
  420fa8:	adc    bh,BYTE PTR [edx+0x7e]
  420fab:	cmp    al,0xd0
  420fad:	xchg   ebx,eax
  420fae:	lea    eax,[ecx+0xdc0c2e3]
  420fb4:	into   
  420fb5:	mov    edi,0x11d69896
  420fba:	dec    esp
  420fbb:	icebp  
  420fbc:	or     al,0xab
  420fbe:	xchg   edi,eax
  420fbf:	loop   0x420fa6
  420fc1:	push   esp
  420fc2:	nop
  420fc3:	inc    esi
  420fc4:	fsub   st,st(1)
  420fc6:	sub    eax,0x46b6c33a
  420fcb:	aaa    
  420fcc:	sub    eax,0xa16d542e
  420fd1:	or     dl,al
  420fd3:	rcr    DWORD PTR [edx+0x5090fe75],0x23
  420fda:	aam    0xa9
  420fdc:	sub    DWORD PTR [eax+edx*4+0x7b],esp
  420fe0:	sar    DWORD PTR [edi],1
  420fe2:	add    BYTE PTR [edx+0x28c0c0c3],ch
  420fe8:	dec    esi
  420fe9:	test   DWORD PTR [ebp+0x2fe4337e],0xcf2d1921
  420ff3:	imul   ebp,DWORD PTR [eax],0xf
  420ff6:	or     eax,DWORD PTR [ecx-0x35]
  420ff9:	inc    esp
  420ffa:	clc    
  420ffb:	jae    0x420f7f
  420ffd:	sub    BYTE PTR [ecx+0x68],ah
  421000:	arpl   sp,dx
  421002:	jp     0x420fdc
  421004:	jmp    0x420f91
  421006:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421007:	idiv   BYTE PTR ds:0xd2f98414
  42100d:	jbe    0x421065
  42100f:	das    
  421010:	jle    0x420ff7
  421012:	int3   
  421013:	lahf   
  421014:	mov    ds:0x48f306e7,al
  421019:	sbb    dl,BYTE PTR [eax]
  42101b:	fld    DWORD PTR [ecx+0xb]
  42101e:	pop    ebp
  42101f:	push   ebx
  421020:	call   0x98d732e6
  421025:	frstor [ecx+0x66]
  421028:	inc    esp
  421029:	ret    
  42102a:	retf   0x1693
  42102d:	pop    eax
  42102e:	mov    ebp,0x977da867
  421033:	(bad)  
  421034:	jp     0x42105f
  421036:	test   BYTE PTR [edx],bh
  421038:	icebp  
  421039:	push   0x58
  42103b:	aas    
  42103c:	jecxz  0x42109d
  42103e:	js     0x4210a7
  421040:	add    eax,0x3bd26fa9
  421045:	outs   dx,BYTE PTR ds:[esi]
  421046:	mov    bh,0x86
  421048:	stos   DWORD PTR es:[edi],eax
  421049:	out    dx,al
  42104a:	mov    ebx,0x99d00d60
  42104f:	pop    ebx
  421050:	imul   eax,edi,0xffffffbf
  421053:	fnstcw WORD PTR [ebx-0x22]
  421056:	push   ebx
  421057:	cmp    dh,dl
  421059:	mul    BYTE PTR [ebx+0xd]
  42105c:	dec    ebp
  42105d:	fcmovu st,st(1)
  42105f:	cmp    DWORD PTR [esi+0x1],ebx
  421062:	pushf  
  421063:	loop   0x4210e1
  421065:	mov    ah,0x3a
  421067:	push   ss
  421068:	push   ebp
  421069:	nop    DWORD PTR [ebp-0x4e]
  42106d:	pop    ebp
  42106e:	pop    ebx
  42106f:	add    eax,DWORD PTR [eax]
  421071:	sti    
  421072:	shl    DWORD PTR [ecx+ebx*1-0xa286167],1
  421079:	addr16 jns 0x4210cb
  42107c:	test   eax,0x942924a4
  421081:	rcl    bh,0x33
  421084:	adc    eax,0xc2697c6e
  421089:	loop   0x421106
  42108b:	cmp    cl,BYTE PTR [ecx+0x2f]
  42108e:	ja     0x4210f1
  421090:	pusha  
  421091:	test   al,0x7f
  421093:	push   cs
  421094:	inc    eax
  421095:	push   ebx
  421096:	adc    BYTE PTR [ecx],bl
  421098:	clc    
  421099:	pusha  
  42109a:	jmp    0x6758:0xcaba1a62
  4210a1:	(bad)  
  4210a3:	adc    bh,0x5
  4210a6:	mov    ch,0xb2
  4210a8:	int    0x84
  4210aa:	daa    
  4210ab:	test   al,0x34
  4210ad:	mov    eax,0xdb1b7436
  4210b2:	fbstp  TBYTE PTR [ecx-0x38]
  4210b5:	inc    esi
  4210b6:	inc    ebp
  4210b7:	ins    DWORD PTR es:[edi],dx
  4210b8:	dec    eax
  4210b9:	cs mov ebx,0x5f14dad1
  4210bf:	lods   al,BYTE PTR ds:[esi]
  4210c0:	mov    cl,0xa4
  4210c2:	or     eax,0x3d02e699
  4210c7:	jne    0x4210e2
  4210c9:	xlat   BYTE PTR ds:[ebx]
  4210ca:	add    BYTE PTR [eax],bl
  4210cc:	and    al,0x73
  4210ce:	ds aaa 
  4210d0:	jmp    0x4210c7
  4210d2:	out    dx,eax
  4210d3:	push   esp
  4210d4:	mov    eax,0xbf350a7b
  4210d9:	iret   
  4210da:	leave  
  4210db:	adc    al,0x83
  4210dd:	rcr    DWORD PTR [edx],0xdb
  4210e0:	add    dl,ah
  4210e2:	add    esi,DWORD PTR [ecx+0x3c]
  4210e5:	mov    esi,0x20b53ee2
  4210ea:	div    bh
  4210ec:	aas    
  4210ed:	cbw    
  4210ef:	and    BYTE PTR [esi+0x3fcd9ad5],bl
  4210f5:	scas   eax,DWORD PTR es:[edi]
  4210f6:	xchg   edx,eax
  4210f7:	call   0x9222a3f1
  4210fc:	mov    DWORD PTR [ecx],ecx
  4210fe:	scas   eax,DWORD PTR es:[edi]
  4210ff:	push   ebp
  421100:	pusha  
  421101:	dec    edi
  421102:	mov    eax,ds:0xc619db87
  421107:	cs aam 0xa8
  42110a:	mov    eax,0x8940fb96
  42110f:	fwait
  421110:	sbb    BYTE PTR [ecx-0x40],0xe6
  421114:	sbb    BYTE PTR [ebp+0x1d],cl
  421117:	sub    eax,0x487c01
  42111c:	mov    al,0xe3
  42111e:	pop    edx
  42111f:	jecxz  0x42117c
  421121:	sti    
  421122:	mov    ecx,0x72415ff3
  421127:	test   DWORD PTR [edx+eax*4-0x3a],ecx
  42112b:	mov    bh,ch
  42112d:	mov    WORD PTR [ecx],es
  42112f:	add    BYTE PTR [edi-0x1cfffffe],al
  421135:	adc    ch,BYTE PTR [esi+0x34]
  421138:	imul   ebx,edx,0x58d25485
  42113e:	jmp    0x90f53236
  421143:	jg     0x421193
  421145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421146:	pop    esp
  421147:	hlt    
  421148:	dec    edi
  421149:	sub    ch,BYTE PTR [ebp-0x62]
  42114c:	ror    ecx,cl
  42114e:	xchg   edx,eax
  42114f:	in     eax,dx
  421150:	dec    ebp
  421151:	es jecxz 0x4211b7
  421154:	aaa    
  421155:	ins    BYTE PTR es:[edi],dx
  421156:	cwde   
  421157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421158:	xchg   edi,esp
  42115a:	xchg   ecx,eax
  42115b:	shl    DWORD PTR [ebx+0x22375be5],1
  421161:	arpl   WORD PTR [esi+0x70a67a59],bx
  421167:	xchg   DWORD PTR [ebx+esi*2+0x6d],esp
  42116b:	xor    BYTE PTR [edi+0x4b],cl
  42116e:	sub    al,0xab
  421170:	add    eax,0x72bb5719
  421175:	jmp    0x42118f
  421177:	jne    0x4211b0
  421179:	fsub   st,st(1)
  42117b:	add    eax,ecx
  42117d:	fwait
  42117e:	rol    BYTE PTR [esi+0x11d64ef0],1
  421184:	and    DWORD PTR [edi*8+0x71c3b774],0x16
  42118c:	dec    edi
  42118d:	lea    ebx,[eax+eiz*8+0x39]
  421191:	ss xchg ebx,eax
  421193:	in     al,dx
  421194:	loopne 0x42113b
  421196:	ds icebp 
  421198:	pop    es
  421199:	jecxz  0x4211e0
  42119b:	retf   
  42119c:	xor    eax,0x6f5b939a
  4211a1:	icebp  
  4211a2:	mov    al,BYTE PTR [eax]
  4211a4:	loope  0x4211a3
  4211a6:	lea    eax,[eax+0x3c]
  4211a9:	arpl   WORD PTR [esi+eax*4],sp
  4211ac:	sbb    ch,BYTE PTR [eax-0x40]
  4211af:	test   BYTE PTR [edx],ch
  4211b1:	mov    esp,DWORD PTR [edx-0x2c8f473b]
  4211b7:	bound  edx,QWORD PTR [eax]
  4211b9:	loopne 0x421155
  4211bb:	clc    
  4211bc:	fstp   QWORD PTR [eax-0x71]
  4211bf:	sbb    ebx,eax
  4211c1:	or     cl,ch
  4211c3:	(bad)  
  4211c5:	mov    ds:0xd55b2c3d,eax
  4211ca:	add    ebp,DWORD PTR [edi-0x5e]
  4211cd:	push   esp
  4211ce:	rcr    dh,0xb8
  4211d1:	shl    BYTE PTR cs:[esi],1
  4211d4:	push   esi
  4211d5:	add    al,0x41
  4211d7:	xchg   DWORD PTR [eax+0x34ee2b90],esp
  4211dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211de:	fs dec eax
  4211e0:	mov    cl,0x9a
  4211e2:	dec    ebx
  4211e3:	dec    edx
  4211e4:	inc    ebx
  4211e5:	mov    eax,ds:0x4c5d1038
  4211ea:	or     eax,DWORD PTR [eax-0x1e105b14]
  4211f0:	jne    0x4211bc
  4211f2:	add    eax,0xacaeb3a6
  4211f7:	jnp    0x4211dd
  4211f9:	xchg   edi,eax
  4211fa:	shr    al,0xef
  4211fd:	and    bl,BYTE PTR [ebx-0x56565733]
  421203:	(bad)  
  421204:	xchg   esp,eax
  421205:	mov    bh,0x0
  421207:	inc    edx
  421208:	loope  0x4211af
  42120a:	inc    BYTE PTR [ebp-0x765c461c]
  421210:	push   esp
  421211:	loopne 0x4211c9
  421213:	into   
  421214:	push   cs
  421215:	sar    bh,cl
  421217:	ret    0x5b9b
  42121a:	pushf  
  42121b:	inc    edx
  42121c:	push   edi
  42121d:	sub    BYTE PTR [ebx+0xd],bl
  421220:	or     eax,0x52eaf307
  421225:	int    0x8b
  421227:	jecxz  0x421280
  421229:	xor    BYTE PTR [ecx+0x17],bl
  42122c:	imul   esp,ecx,0xffffff9c
  42122f:	lods   al,BYTE PTR ds:[esi]
  421230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421231:	stos   BYTE PTR es:[edi],al
  421232:	add    esi,DWORD PTR [esi]
  421234:	stc    
  421235:	ss pop ss
  421237:	sar    DWORD PTR [ecx],0x76
  42123a:	cmp    eax,edx
  42123c:	lds    edx,FWORD PTR [edi]
  42123e:	sbb    esi,edi
  421240:	sub    DWORD PTR [edi+0x1b3362f3],0xc89bd5f2
  42124a:	pop    edx
  42124b:	or     eax,0x641954cb
  421250:	xchg   ebp,eax
  421251:	mov    ecx,0x48797202
  421256:	mov    ds,WORD PTR [ebp-0x28]
  421259:	into   
  42125a:	shl    BYTE PTR [eax-0x3d],cl
  42125d:	aas    
  42125e:	scas   eax,DWORD PTR es:[edi]
  42125f:	mov    esp,0xb0ec5de2
  421264:	pop    es
  421265:	aaa    
  421266:	adc    BYTE PTR [ebp+0x14],bl
  421269:	jae    0x42128f
  42126b:	les    ecx,FWORD PTR [esi-0x991823]
  421271:	sbb    DWORD PTR [edi],ecx
  421273:	pop    ss
  421274:	lea    esi,[ecx+0x3e]
  421277:	dec    edi
  421278:	mov    ds:0x1f37506d,al
  42127d:	dec    edi
  42127e:	scas   al,BYTE PTR es:[edi]
  42127f:	ins    DWORD PTR es:[edi],dx
  421280:	int    0xd9
  421282:	push   ecx
  421283:	and    eax,0x6aeae617
  421288:	retf   
  421289:	loope  0x421291
  42128b:	pop    ebp
  42128c:	push   ss
  42128d:	mov    bl,0xb1
  42128f:	ret    0x206
  421292:	add    ah,BYTE PTR ds:0x148f6293
  421298:	dec    esp
  421299:	adc    eax,edi
  42129b:	in     al,0xbc
  42129d:	enter  0x2e20,0x70
  4212a1:	adc    eax,0x73cc6e91
  4212a6:	mov    eax,0x126b7bfa
  4212ab:	ficomp WORD PTR [eax+0x2f0efb5d]
  4212b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212b2:	sbb    DWORD PTR [edi],0xffffff99
  4212b5:	lds    eax,FWORD PTR [ecx+ebx*2+0x79a698f6]
  4212bc:	inc    edi
  4212bd:	jno    0x42126a
  4212bf:	(bad)  
  4212c0:	lea    edi,[edi+0x26221e02]
  4212c6:	out    0xa1,al
  4212c8:	mov    DWORD PTR [ecx],0x7d636808
  4212ce:	ret    
  4212cf:	mov    al,ds:0x9d19bdf3
  4212d4:	mov    esp,edi
  4212d6:	jne    0x4212ad
  4212d8:	out    0xac,al
  4212da:	ret    0x3d99
  4212dd:	dec    edi
  4212de:	xchg   ecx,eax
  4212df:	add    dh,BYTE PTR [eax+ebp*1]
  4212e2:	jle    0x42134c
  4212e4:	popa   
  4212e5:	xor    DWORD PTR [edi+0x69d0a261],0xffffff80
  4212ec:	out    0xf5,eax
  4212ee:	sub    eax,0x9c61aa09
  4212f3:	push   es
  4212f4:	sbb    DWORD PTR [eax-0x10],esp
  4212f7:	fisttp WORD PTR es:[edi+0x4f]
  4212fb:	push   ds
  4212fc:	dec    edx
  4212fd:	int3   
  4212fe:	je     0x421307
  421300:	cmp    DWORD PTR [esi+0x61],edx
  421303:	sbb    eax,0xcf95efe2
  421308:	pusha  
  421309:	adc    dh,ch
  42130b:	hlt    
  42130c:	das    
  42130d:	loope  0x421378
  42130f:	clc    
  421310:	jo     0x421354
  421312:	push   ecx
  421313:	push   ecx
  421314:	loop   0x4212ec
  421316:	adc    al,0xc1
  421318:	stos   DWORD PTR es:[edi],eax
  421319:	or     ecx,DWORD PTR [eax]
  42131b:	xchg   esi,eax
  42131c:	sub    ecx,DWORD PTR [ebx+0x71]
  42131f:	mov    ah,0x90
  421321:	aaa    
  421322:	push   ebp
  421323:	sbb    BYTE PTR [edx-0x6b],dh
  421326:	imul   edx
  421328:	sti    
  421329:	dec    esi
  42132a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42132b:	add    edi,eax
  42132d:	and    DWORD PTR [eax+0xb3431c1],0xffffffe0
  421334:	sub    edx,ebx
  421336:	fidiv  WORD PTR [edi+0x40]
  421339:	pushf  
  42133a:	or     BYTE PTR [ebx],al
  42133c:	stos   BYTE PTR es:[edi],al
  42133d:	imul   DWORD PTR [edx-0x1581a38c]
  421343:	mov    dl,0xce
  421345:	mov    al,BYTE PTR [esi]
  421347:	scas   al,BYTE PTR es:[edi]
  421348:	fprem  
  42134a:	push   ebx
  42134b:	fiadd  DWORD PTR [eax]
  42134d:	xchg   ecx,eax
  42134e:	jecxz  0x4212dc
  421350:	loopne 0x4213cf
  421352:	repz and eax,0x57425307
  421358:	cmp    BYTE PTR [esi],0xa7
  42135b:	push   ebp
  42135c:	in     eax,0xec
  42135e:	dec    ebp
  42135f:	cmc    
  421360:	and    DWORD PTR [ebx+0x7a9c6dbf],ebp
  421366:	test   BYTE PTR [ebx-0x4b],0x92
  42136a:	ret    0xdcd5
  42136d:	fcom   DWORD PTR [edx+0x5e]
  421370:	fild   WORD PTR [ecx+0x5e]
  421373:	sub    esi,DWORD PTR [edx]
  421375:	pusha  
  421376:	(bad)  
  421377:	sub    esp,edx
  421379:	xchg   ecx,eax
  42137a:	mov    esp,0x9b4bfce9
  42137f:	inc    ebx
  421380:	pop    ss
  421381:	adc    al,dl
  421383:	loopne 0x421362
  421385:	(bad)  
  421386:	idiv   DWORD PTR [edx-0x1e]
  421389:	test   al,0x47
  42138b:	ja     0x421383
  42138d:	ds jno 0x421386
  421390:	cmp    DWORD PTR [ebp+0x718a056d],eax
  421396:	dec    ebp
  421397:	fisubr DWORD PTR [esi]
  421399:	mov    bh,0xbf
  42139b:	pushf  
  42139c:	test   al,0xf0
  42139e:	jne    0x421396
  4213a0:	mov    ebp,ebx
  4213a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213a3:	ins    DWORD PTR es:[edi],dx
  4213a4:	dec    ebx
  4213a5:	xor    eax,0x346cf429
  4213aa:	cld    
  4213ab:	mov    dl,0x86
  4213ad:	dec    edx
  4213ae:	jb     0x4213dd
  4213b0:	sar    BYTE PTR [eax+eax*4-0x41bd39ba],cl
  4213b7:	inc    ebx
  4213b8:	jno    0x42139e
  4213ba:	lea    eax,[eax]
  4213bc:	xor    eax,0xbf06168e
  4213c1:	sahf   
  4213c2:	xor    eax,0xa0e807bf
  4213c7:	mov    edx,0xfb92bc06
  4213cc:	jbe    0x42135d
  4213ce:	add    DWORD PTR [eax],eax
  4213d0:	xchg   DWORD PTR [edx],eax
  4213d2:	add    BYTE PTR [eax],al
  4213d4:	pushf  
  4213d5:	hlt    
  4213d6:	sbb    al,0xab
  4213d8:	mov    ebp,0xbf1c9388
  4213dd:	mov    ch,0xf3
  4213df:	jbe    0x4213a7
  4213e1:	push   esi
  4213e2:	pushf  
  4213e3:	xor    dl,BYTE PTR [esi+0x14005d6a]
  4213e9:	sub    DWORD PTR [eax+eax*1],0xf40ead45
  4213f0:	leave  
  4213f1:	xchg   ebx,eax
  4213f2:	push   edi
  4213f3:	cmp    eax,0x4888fca4
  4213f8:	xchg   BYTE PTR [ebp-0x36],ch
  4213fb:	sub    al,0x22
  4213fd:	mov    edx,0x8f58ffe0
  421402:	xor    ah,BYTE PTR [ecx-0x1a90b118]
  421408:	or     edx,esi
  42140a:	sub    DWORD PTR [esi],ebx
  42140c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140d:	call   0x72ad:0xc3f15d7a
  421414:	and    DWORD PTR [esi-0x10148f0f],edi
  42141a:	gs mov dh,0xa8
  42141d:	mov    gs,WORD PTR [ecx+0x2f]
  421420:	inc    edx
  421421:	dec    eax
  421422:	(bad)  
  421423:	in     al,dx
  421424:	fist   WORD PTR [ebx]
  421426:	mov    DWORD PTR gs:[esi-0x15b11db],ebx
  42142d:	out    0x58,eax
  42142f:	lea    eax,[esi+0x48]
  421432:	lods   al,BYTE PTR ds:[esi]
  421433:	xchg   ebp,eax
  421434:	in     al,dx
  421435:	(bad)  
  421436:	add    esp,DWORD PTR [edx-0x2111e4a0]
  42143c:	jno    0x421463
  42143e:	sub    ah,BYTE PTR [edx+esi*8-0x17]
  421442:	xchg   esi,eax
  421443:	cdq    
  421444:	lea    esp,[eax+0x6f]
  421447:	or     al,0x32
  421449:	sub    al,0x32
  42144b:	mov    ch,BYTE PTR [edi+0x5a]
  42144e:	sbb    BYTE PTR [ecx],ah
  421450:	rcr    BYTE PTR ds:0xa1c33cc7,0xb6
  421457:	outs   dx,DWORD PTR ds:[esi]
  421458:	imul   esi,DWORD PTR [esp+edi*1+0x456f142a],0x1b
  421460:	iret   
  421461:	in     eax,dx
  421462:	sbb    ah,BYTE PTR [ecx+0x1b]
  421465:	leave  
  421466:	aaa    
  421467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421468:	stos   BYTE PTR es:[edi],al
  421469:	fld    TBYTE PTR [eax]
  42146b:	xor    BYTE PTR [esi-0x576e1f0],0x8
  421472:	ds fwait
  421474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421475:	mov    ah,0xc9
  421477:	pop    eax
  421478:	icebp  
  421479:	in     eax,dx
  42147a:	(bad)  
  42147b:	loopne 0x4214ea
  42147d:	in     al,dx
  42147e:	call   0x1adb:0x6717649d
  421485:	mov    cl,BYTE PTR ds:0x7db6b2
  42148b:	call   0xe24281f
  421490:	sbb    al,0x10
  421492:	pop    ecx
  421493:	jmp    0xa996:0x3c70e15f
  42149a:	call   0x3b9c:0xf5324b83
  4214a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a2:	enter  0x764b,0x4d
  4214a6:	ficom  WORD PTR [ecx-0x59]
  4214a9:	in     al,0xfb
  4214ab:	mov    esp,0xcc1949c4
  4214b0:	inc    ebx
  4214b1:	sub    ch,0xd8
  4214b4:	imul   ebx,DWORD PTR ds:0x1c652524,0xffffffe0
  4214bb:	repz or esp,DWORD PTR [edi-0x9]
  4214bf:	adc    ch,BYTE PTR [edi-0x5ee5c703]
  4214c5:	cdq    
  4214c6:	pop    es
  4214c7:	rcl    DWORD PTR [esi-0x43],1
  4214ca:	add    dl,bl
  4214cc:	jmp    0x7651:0x42c4bb4
  4214d3:	mov    WORD PTR [ecx],?
  4214d5:	stos   BYTE PTR es:[edi],al
  4214d6:	test   al,0x3c
  4214d8:	lock cmp al,BYTE PTR cs:[ebp+0x4c]
  4214dd:	pop    ebx
  4214de:	mov    al,0xb5
  4214e0:	pusha  
  4214e1:	outs   dx,DWORD PTR ds:[esi]
  4214e2:	retf   0xb97b
  4214e5:	dec    eax
  4214e6:	xor    al,0xc9
  4214e8:	loope  0x4214c2
  4214ea:	xchg   DWORD PTR [ecx+eax*4],edx
  4214ed:	xlat   BYTE PTR ds:[ebx]
  4214ee:	repnz inc edx
  4214f0:	mov    ch,0x2e
  4214f2:	and    eax,0x366ff78c
  4214f7:	push   ebp
  4214f8:	jmp    0xf8181090
  4214fd:	xchg   ecx,eax
  4214fe:	retf   
  4214ff:	pop    esi
  421500:	add    DWORD PTR [esi],edi
  421502:	dec    ebp
  421503:	jno    0x421552
  421505:	pop    ecx
  421506:	in     eax,0x19
  421508:	lea    edi,[edx-0x709baf82]
  42150e:	rol    BYTE PTR [esp+esi*1],0x80
  421512:	cdq    
  421513:	cmp    al,BYTE PTR es:[ebp-0x57]
  421517:	xchg   ebx,eax
  421518:	(bad)  
  421519:	mov    ch,0x51
  42151b:	mov    ebp,0x96558848
  421520:	gs and al,0x1c
  421523:	ja     0x4214ba
  421525:	loop   0x421533
  421527:	adc    al,0x4e
  421529:	fst    DWORD PTR [esi-0x7d]
  42152c:	shr    esi,cl
  42152e:	xor    edx,ecx
  421530:	test   eax,0x59f4a1c6
  421535:	ret    
  421536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421537:	test   esi,edi
  421539:	cmp    BYTE PTR [ebx+edx*1-0x5d],bl
  42153d:	aas    
  42153e:	adc    al,0x56
  421540:	cs fcmovnb st,st(5)
  421543:	imul   ebp,DWORD PTR [ecx+0x223a0dec],0x49
  42154a:	lock pop ebx
  42154c:	inc    esi
  42154d:	push   cs
  42154e:	push   ebx
  42154f:	mov    cl,0xfa
  421551:	xor    eax,0x716722f3
  421556:	dec    edi
  421557:	leave  
  421558:	mov    ds:0x734f309b,al
  42155d:	or     eax,0x9b534635
  421562:	into   
  421563:	mov    BYTE PTR [ebx],dl
  421565:	pop    esp
  421566:	push   ecx
  421567:	cmp    bh,cl
  421569:	adc    DWORD PTR [eax-0x2f0ac1],eax
  42156f:	aaa    
  421570:	cmp    BYTE PTR [edx-0x727a87e8],cl
  421576:	xor    BYTE PTR [ebp-0x79],bh
  421579:	sbb    dl,BYTE PTR [edi+edi*4-0x10fc5ce9]
  421580:	gs out 0xf5,eax
  421583:	lods   al,BYTE PTR ds:[esi]
  421584:	and    DWORD PTR [edx],esp
  421586:	pushf  
  421587:	mov    dl,0xb9
  421589:	pop    esi
  42158a:	mov    ds:0x74e10fd1,eax
  42158f:	ret    0xc17f
  421592:	mov    ah,0x65
  421594:	call   0xb44e50bd
  421599:	or     edi,ebp
  42159b:	dec    esi
  42159c:	shl    DWORD PTR [ecx-0x7c],0xa2
  4215a0:	sub    DWORD PTR [ebx],ecx
  4215a2:	push   edx
  4215a3:	loopne 0x4215ed
  4215a5:	sahf   
  4215a6:	test   BYTE PTR [eax+edi*2],dh
  4215a9:	mov    DWORD PTR [edx+0x2f8b4092],eax
  4215af:	retf   0xa709
  4215b2:	bound  ecx,QWORD PTR [edi]
  4215b4:	xor    eax,0x80867ea8
  4215b9:	add    eax,0xa2e5af40
  4215be:	fcomp  DWORD PTR [ebp+0x6c]
  4215c1:	(bad)  
  4215c2:	pop    edx
  4215c3:	sub    eax,0x1dd66234
  4215c8:	imul   edx,DWORD PTR [edx+0x47],0xa0660537
  4215cf:	enter  0x9249,0x3a
  4215d3:	adc    al,0x81
  4215d5:	leave  
  4215d6:	pop    esp
  4215d7:	mov    ch,ch
  4215d9:	ins    DWORD PTR es:[edi],dx
  4215da:	xor    edi,DWORD PTR [ecx+0x1f]
  4215dd:	(bad)  [ecx+0x4b]
  4215e0:	popa   
  4215e1:	xchg   edx,eax
  4215e2:	xchg   edx,eax
  4215e3:	or     al,BYTE PTR [eax-0x54]
  4215e6:	sbb    BYTE PTR [ebx-0x7d],cl
  4215e9:	stos   DWORD PTR es:[edi],eax
  4215ea:	in     eax,0xa
  4215ec:	cmp    eax,0xab3e34d1
  4215f1:	jnp    0x421626
  4215f3:	popa   
  4215f4:	xor    ebp,eax
  4215f6:	mov    cl,0x10
  4215f8:	pop    ss
  4215f9:	icebp  
  4215fa:	aas    
  4215fb:	or     ax,0x5d96
  4215ff:	sub    eax,0x27597dca
  421604:	sub    DWORD PTR [ecx],esi
  421606:	leave  
  421607:	scas   eax,DWORD PTR es:[edi]
  421608:	cmc    
  421609:	adc    eax,0xdd412479
  42160e:	sbb    ah,bh
  421610:	call   0x978d:0x4d09b19b
  421617:	(bad)  
  421618:	(bad)  [eax+0x70]
  42161b:	cdq    
  42161c:	js     0x42169b
  42161e:	fisubr WORD PTR [edi]
  421620:	shl    BYTE PTR [edx+0x75],cl
  421623:	(bad)  
  421624:	neg    DWORD PTR [esi]
  421626:	leave  
  421627:	lods   al,BYTE PTR ds:[esi]
  421628:	push   0x3c5a5319
  42162d:	mov    es,WORD PTR [esi+0x14]
  421630:	cmp    DWORD PTR [ebp-0x7a842821],eax
  421636:	jle    0x4215cc
  421638:	pop    esp
  421639:	rcl    DWORD PTR [edx],1
  42163b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42163c:	loope  0x421612
  42163e:	jg     0x421630
  421640:	hlt    
  421641:	cmp    BYTE PTR [esi],al
  421643:	jmp    0x30487a96
  421648:	adc    cl,ah
  42164a:	pop    ebp
  42164b:	cmc    
  42164c:	loopne 0x4216ab
  42164e:	push   ss
  42164f:	sub    dl,BYTE PTR [ebx]
  421651:	cmp    DWORD PTR [edi+0x304b39f3],0xfe684ab1
  42165b:	add    cl,bh
  42165d:	std    
  42165e:	in     eax,dx
  42165f:	mov    cl,0xed
  421661:	mov    cl,0xfd
  421663:	std    
  421664:	pop    ds
  421665:	xor    dl,0xed
  421668:	push   edx
  421669:	in     eax,0xe
  42166b:	xor    ch,bh
  42166d:	xchg   ecx,eax
  42166e:	add    DWORD PTR [eax],eax
  421670:	xchg   DWORD PTR [edx],eax
  421672:	add    BYTE PTR [eax],al
  421674:	mov    al,0x81
  421676:	xor    DWORD PTR [esi+0x5d],ecx
  421679:	jbe    0x42165c
  42167b:	mov    ch,0x19
  42167d:	add    eax,0xda06d92a
  421682:	in     al,dx
  421683:	shl    BYTE PTR [edx+0x2d],0xb
  421687:	daa    
  421688:	mov    ds:0x6f0f158f,al
  42168d:	and    al,0x93
  42168f:	xchg   ebp,ecx
  421691:	add    al,0xfe
  421693:	aam    0x37
  421695:	mov    ds:0x35edb0f4,al
  42169a:	cmc    
  42169b:	cld    
  42169c:	xor    ch,BYTE PTR [ebp-0x331abe41]
  4216a2:	imul   esi
  4216a4:	call   0xf624d113
  4216a9:	xchg   esi,eax
  4216aa:	push   ebx
  4216ab:	pop    esi
  4216ac:	fsubr  DWORD PTR [esi+0x10]
  4216af:	(bad)  
  4216b0:	and    eax,0xccba68f5
  4216b5:	data16 cmp al,dl
  4216b8:	xchg   edi,eax
  4216b9:	shr    DWORD PTR [eax-0x3689493],cl
  4216bf:	or     eax,0xc36efdec
  4216c4:	cmc    
  4216c5:	addr16 fcomi st,st(3)
  4216c8:	test   al,0x41
  4216ca:	outs   dx,DWORD PTR ds:[esi]
  4216cb:	stos   DWORD PTR es:[edi],eax
  4216cc:	sti    
  4216cd:	retf   0xa35e
  4216d0:	dec    edx
  4216d1:	in     eax,0x13
  4216d3:	mov    WORD PTR [ebx+0x70aa6100],ss
  4216d9:	test   al,0xfa
  4216db:	cmp    al,0xb7
  4216dd:	rcl    BYTE PTR [edx+0x39b4fbd],1
  4216e3:	jl     0x421672
  4216e5:	ret    0x1db7
  4216e8:	out    dx,eax
  4216e9:	stc    
  4216ea:	cmp    DWORD PTR [ecx-0x59],ebx
  4216ed:	loopne 0x4216dd
  4216ef:	aam    0xc1
  4216f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216f2:	cmp    bh,BYTE PTR [edi]
  4216f4:	mov    ecx,0xfad3e88f
  4216f9:	pop    eax
  4216fa:	popf   
  4216fb:	xor    dh,BYTE PTR [eax]
  4216fd:	lea    ebp,[ebp+0x5043f8e6]
  421703:	or     ebx,0x2e80f84f
  421709:	xchg   esp,eax
  42170a:	in     eax,0x5d
  42170c:	rol    DWORD PTR [eax],cl
  42170e:	xchg   edx,eax
  42170f:	fld    TBYTE PTR [edx-0x33]
  421712:	in     al,0xcc
  421714:	xor    DWORD PTR [ebp-0x3aa5fa07],edi
  42171a:	fiadd  DWORD PTR [eax]
  42171c:	adc    BYTE PTR ds:0x5a4990c0,ah
  421722:	or     DWORD PTR [ebp-0xbcc4915],esp
  421728:	call   0x4e6a07d
  42172d:	push   cs
  42172e:	sub    edi,esi
  421730:	fadd   DWORD PTR [ebx+0x7bc1d14]
  421736:	ss loopne 0x42177f
  421739:	mov    ah,0x35
  42173b:	rcr    BYTE PTR [ebx-0x2eb4b20f],0x64
  421742:	arpl   WORD PTR [eax+0x3d],bp
  421745:	mov    bl,0xdf
  421747:	jp     0x42170c
  421749:	(bad)  
  42174a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42174b:	test   al,0x59
  42174d:	xor    eax,esp
  42174f:	or     ecx,DWORD PTR [edx-0x5]
  421752:	popf   
  421753:	out    dx,eax
  421754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421755:	fstp   QWORD PTR [edi+0x40b3021a]
  42175b:	call   0x2310:0x5817c06e
  421762:	and    BYTE PTR [eax+0x57428bea],ah
  421768:	xor    eax,0xbb02e6d1
  42176d:	cmc    
  42176e:	fldenv [edx-0xfdd4f53]
  421774:	push   edx
  421775:	leave  
  421776:	jp     0x42179b
  421778:	inc    ecx
  421779:	jle    0x4217b1
  42177b:	jle    0x421711
  42177d:	push   esi
  42177e:	and    esi,edi
  421780:	call   0x120c6e11
  421785:	in     al,0xc2
  421787:	jbe    0x42178e
  421789:	sbb    DWORD PTR [esi],esp
  42178b:	loope  0x421782
  42178d:	lahf   
  42178e:	fmul   st(1),st
  421790:	test   BYTE PTR [eax-0x6ef4a283],0x99
  421797:	ins    DWORD PTR es:[edi],dx
  421798:	jb     0x421781
  42179a:	and    eax,0x1bcffd8
  42179f:	xor    eax,DWORD PTR [edi]
  4217a1:	outs   dx,DWORD PTR ds:[esi]
  4217a2:	xchg   ebx,eax
  4217a3:	sbb    al,0x17
  4217a5:	push   cs
  4217a6:	xchg   edx,eax
  4217a7:	cli    
  4217a8:	xor    ebp,ebp
  4217aa:	pop    edi
  4217ab:	dec    edi
  4217ac:	mov    eax,ds:0x9349bf27
  4217b1:	xchg   esp,eax
  4217b2:	(bad)  
  4217b3:	je     0x421798
  4217b5:	add    DWORD PTR [esi],edx
  4217b7:	js     0x4217fc
  4217b9:	push   esp
  4217ba:	adc    DWORD PTR [edi+ebx*1+0x2b230602],eax
  4217c1:	mov    bl,BYTE PTR [esi]
  4217c3:	sbb    BYTE PTR [ebx-0x417e3269],bl
  4217c9:	adc    DWORD PTR ds:0xe8b0f9ec,esp
  4217cf:	mov    bl,0xfe
  4217d1:	ss mov ebx,0x59c14527
  4217d7:	xor    al,dh
  4217d9:	or     dh,BYTE PTR [ebx-0x6b]
  4217dc:	shl    BYTE PTR [esp+edi*2],0x31
  4217e0:	test   DWORD PTR [esi+0x36],ecx
  4217e3:	dec    ecx
  4217e4:	(bad)  
  4217e5:	cli    
  4217e6:	(bad)  
  4217e7:	sar    DWORD PTR [esi+0x398f3bd6],1
  4217ed:	(bad)  [ebp+0x7]
  4217f0:	adc    cl,BYTE PTR ds:0x22309246
  4217f6:	ja     0x421872
  4217f8:	mov    fs,WORD PTR [edx]
  4217fa:	push   0x70
  4217fc:	dec    esi
  4217fd:	sub    edi,DWORD PTR [edx+0x3]
  421800:	adc    eax,0xa863bad3
  421805:	div    DWORD PTR [ebx+ebp*4-0x58]
  421809:	adc    ecx,DWORD PTR [ecx]
  42180b:	aas    
  42180c:	mov    ecx,esp
  42180e:	mov    cl,ch
  421810:	or     dh,BYTE PTR [esi-0x71]
  421813:	adc    al,ah
  421815:	lahf   
  421816:	shr    DWORD PTR [edi+0x44],0x72
  42181a:	les    ebx,FWORD PTR [ebp+0x81bc5a8]
  421820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421821:	mov    edx,0x722de62b
  421826:	mov    edx,0xf69d9a8b
  42182b:	add    DWORD PTR [ebp-0x2dffd213],0x7d
  421832:	mov    ebp,0x98db6595
  421837:	adc    dh,BYTE PTR [esi-0x73f00fa]
  42183d:	cmp    eax,0xdeb8c5f9
  421842:	retf   0xe8df
  421845:	mov    cs,WORD PTR ds:0xc82add1d
  42184b:	jmp    0xd6739e7f
  421850:	add    eax,0xdbc7ffa8
  421855:	std    
  421856:	loop   0x4218c9
  421858:	jmp    0x57122b3d
  42185d:	jne    0x4217f3
  42185f:	lahf   
  421860:	lock dec eax
  421862:	xchg   BYTE PTR [edi-0x4f],dl
  421865:	mov    DWORD PTR [edx],esi
  421867:	mov    esp,0xc8ea5b29
  42186c:	lods   al,BYTE PTR ds:[esi]
  42186d:	outs   dx,BYTE PTR ds:[esi]
  42186e:	push   es
  42186f:	pop    ds
  421870:	mov    bh,0x14
  421872:	adc    al,0x30
  421874:	pop    ds
  421875:	push   ds
  421876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421878:	ret    
  421879:	fsub   DWORD PTR [edi-0x6902c0cb]
  42187f:	sub    dl,BYTE PTR [ebx-0x1c]
  421882:	cwde   
  421883:	fild   DWORD PTR [esi]
  421885:	xor    al,0x5d
  421887:	(bad)  
  421888:	push   ds
  421889:	aas    
  42188a:	xchg   esi,eax
  42188b:	icebp  
  42188c:	test   ah,al
  42188e:	test   dh,0xd8
  421891:	dec    ebp
  421892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421893:	jp     0x421889
  421895:	adc    dl,BYTE PTR [ebx+0x2f]
  421898:	hlt    
  421899:	repz xchg edx,eax
  42189b:	test   DWORD PTR [ebx+0x4d07c30b],ebp
  4218a1:	lock mov WORD PTR [ebx],ss
  4218a4:	xor    al,0x31
  4218a6:	repz clc 
  4218a8:	sar    BYTE PTR [edi-0xd2fe230],cl
  4218ae:	stos   DWORD PTR es:[edi],eax
  4218af:	add    eax,0x6def82f1
  4218b4:	dec    esp
  4218b5:	xor    eax,0xbc667432
  4218ba:	lods   al,BYTE PTR ds:[esi]
  4218bb:	les    edi,FWORD PTR [ebp+ebx*2-0x36]
  4218bf:	in     eax,dx
  4218c0:	push   es
  4218c1:	iret   
  4218c2:	call   0xaa43f6c9
  4218c7:	or     esp,0xfe7d4166
  4218cd:	lock cmp edi,DWORD PTR [edi-0x4d]
  4218d1:	in     eax,dx
  4218d2:	enter  0xa698,0x3f
  4218d6:	ins    BYTE PTR es:[edi],dx
  4218d7:	mov    eax,0xfdb2677a
  4218dc:	push   0xe158925b
  4218e1:	bound  ebp,QWORD PTR [edi-0x2c211bec]
  4218e7:	out    0x29,al
  4218e9:	xchg   edx,eax
  4218ea:	rcr    BYTE PTR [eax-0x51],0xb4
  4218ee:	stos   BYTE PTR es:[edi],al
  4218ef:	pop    eax
  4218f0:	aas    
  4218f1:	repz xor eax,0xc4bfe00c
  4218f7:	fimul  WORD PTR [ebp-0xdff585f]
  4218fd:	rol    BYTE PTR ds:0xf6d53751,0xe3
  421904:	out    dx,al
  421905:	sub    ebp,esp
  421907:	(bad)  
  421909:	into   
  42190a:	mov    ds:0x194844c,al
  42190f:	add    BYTE PTR [edi-0x4bfffffe],al
  421915:	nop
  421916:	push   esp
  421917:	adc    al,0xf
  421919:	mov    BYTE PTR [edi],al
  42191b:	pop    edi
  42191c:	les    eax,FWORD PTR [eax-0x52]
  42191f:	xor    eax,0x4ce4727b
  421924:	outs   dx,BYTE PTR ds:[esi]
  421925:	fld    DWORD PTR [eax+0x1b]
  421928:	repnz sbb BYTE PTR [edi-0x29],dh
  42192c:	jp     0x4218ca
  42192e:	test   DWORD PTR [ebx+0x705aa420],edx
  421934:	and    eax,edi
  421936:	ja     0x42197c
  421938:	pinsrw mm2,WORD PTR [eax-0x6b8027b6],0x9f
  421940:	adc    eax,0xe4153ef9
  421945:	std    
  421946:	mov    WORD PTR [ecx+0x5b69528b],?
  42194c:	(bad)  
  42194d:	mov    eax,0xb7036333
  421952:	cmp    al,0xdf
  421954:	mov    bh,0xe7
  421956:	bound  ecx,QWORD PTR [ebx]
  421958:	dec    ebp
  421959:	fdivr  st(4),st
  42195b:	and    BYTE PTR [edx-0x7cdcdff4],ah
  421961:	mov    cl,0xa6
  421963:	push   cs
  421964:	ins    BYTE PTR es:[edi],dx
  421965:	(bad)  
  421966:	hlt    
  421967:	enter  0x2c14,0xe7
  42196b:	arpl   WORD PTR [edi-0x7ec92630],ax
  421971:	loopne 0x421947
  421973:	arpl   WORD PTR [ebp+edi*2+0x2f],dx
  421977:	mov    dh,0x83
  421979:	sbb    edi,ebx
  42197b:	mov    al,ds:0x5b045023
  421980:	pop    esp
  421981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421982:	mov    DWORD PTR [ebx+0x4cad73a4],edx
  421988:	pop    es
  421989:	neg    BYTE PTR [ebp+0x19]
  42198c:	xchg   esi,eax
  42198d:	pop    esi
  42198e:	jnp    0x421a06
  421990:	jnp    0x4219f0
  421992:	je     0x4219f3
  421994:	pop    esi
  421995:	sub    al,0x71
  421997:	xchg   esi,eax
  421998:	jno    0x421929
  42199a:	loope  0x42191f
  42199c:	ja     0x4219d8
  42199e:	xor    cl,bh
  4219a0:	fwait
  4219a1:	mov    ds:0x3065884e,eax
  4219a6:	scas   eax,DWORD PTR es:[edi]
  4219a7:	loopne 0x4219db
  4219a9:	pop    esi
  4219aa:	or     eax,0x77b47e9a
  4219af:	add    DWORD PTR [ebx],edi
  4219b1:	cmp    eax,0x6d042f25
  4219b6:	sbb    BYTE PTR [esi-0x3747138b],0xec
  4219bd:	push   eax
  4219be:	mov    BYTE PTR [ecx+eax*8],bh
  4219c1:	pop    ebx
  4219c2:	mov    al,0xeb
  4219c4:	(bad)  
  4219c6:	inc    esp
  4219c7:	xor    ecx,ebx
  4219c9:	in     eax,dx
  4219ca:	pop    ecx
  4219cb:	es pop esi
  4219cd:	jne    0x4219a3
  4219cf:	mov    ds:0xfad99b7e,eax
  4219d4:	adc    esi,ecx
  4219d6:	mov    ds:0x93191215,al
  4219db:	fwait
  4219dc:	push   ds
  4219dd:	(bad)  
  4219de:	stos   DWORD PTR es:[edi],eax
  4219df:	mov    ds:0x8babb2e6,al
  4219e4:	out    dx,eax
  4219e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e7:	bound  esi,QWORD PTR [ebx]
  4219e9:	dec    esi
  4219ea:	call   0xcd8f075
  4219ef:	(bad)  
  4219f0:	(bad)  
  4219f1:	pop    eax
  4219f2:	outs   dx,DWORD PTR ds:[esi]
  4219f3:	or     BYTE PTR [edi],bh
  4219f5:	fiadd  DWORD PTR ds:0x32498682
  4219fb:	(bad)  
  4219fc:	stc    
  4219fd:	adc    al,0x77
  4219ff:	cli    
  421a00:	mov    cl,0x9e
  421a02:	adc    ah,BYTE PTR [ecx]
  421a04:	mov    ah,0xa4
  421a06:	push   0xffffff8d
  421a08:	mov    ds:0x88363d7b,al
  421a0d:	ins    DWORD PTR es:[edi],dx
  421a0e:	imul   esi,DWORD PTR [eax-0x559ce1e3],0x3a5ac7b2
  421a18:	adc    al,0x2f
  421a1a:	cmp    ah,BYTE PTR [edx-0x44]
  421a1d:	mov    bh,0x2
  421a1f:	push   ebx
  421a20:	jmp    0x421a83
  421a22:	pop    edi
  421a23:	aad    0xa6
  421a25:	and    al,0x9b
  421a27:	shl    al,0x1b
  421a2a:	fs push 0xffffffd5
  421a2d:	pop    ds
  421a2e:	daa    
  421a2f:	jns    0x421a31
  421a31:	sub    cl,cl
  421a33:	test   BYTE PTR [edi-0x7d880efc],dl
  421a39:	add    eax,0xce8b8938
  421a3e:	scas   al,BYTE PTR es:[edi]
  421a3f:	sahf   
  421a40:	cmp    esi,edi
  421a42:	loope  0x421a3d
  421a44:	scas   eax,DWORD PTR es:[edi]
  421a45:	pushf  
  421a46:	sar    BYTE PTR [ebp-0x382d269f],0xf5
  421a4d:	push   esp
  421a4e:	sub    DWORD PTR [ebp-0x2e],ecx
  421a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a52:	mov    esp,0x5adf03b5
  421a57:	xchg   ebp,ebp
  421a59:	sti    
  421a5a:	mov    ecx,0x45d919af
  421a5f:	outs   dx,DWORD PTR ds:[esi]
  421a60:	outs   dx,DWORD PTR ds:[esi]
  421a61:	pop    ecx
  421a62:	mov    BYTE PTR [ebp+0x7e],bl
  421a65:	pop    ds
  421a66:	xchg   BYTE PTR [ecx],dh
  421a68:	hlt    
  421a69:	hlt    
  421a6a:	enter  0x7527,0xbd
  421a6e:	jno    0x421a98
  421a70:	jge    0x421a13
  421a72:	or     al,0x6a
  421a74:	sbb    al,0x90
  421a76:	dec    ebx
  421a77:	arpl   WORD PTR [ebx-0x1e03c554],di
  421a7d:	inc    DWORD PTR [esi]
  421a7f:	mov    al,0xda
  421a81:	fiadd  WORD PTR [ecx]
  421a83:	bound  edi,QWORD PTR [eax-0x77741b3b]
  421a89:	pop    eax
  421a8a:	and    esi,DWORD PTR [edx-0x39622553]
  421a90:	mov    DWORD PTR [ecx-0x76f3b2d],esp
  421a96:	cmp    esi,DWORD PTR [ebx]
  421a98:	push   edi
  421a99:	push   ebp
  421a9a:	(bad)  
  421a9b:	sub    eax,0x51708c75
  421aa0:	push   ds
  421aa1:	cwde   
  421aa2:	mov    al,0x9e
  421aa4:	adc    ah,dl
  421aa6:	loope  0x421acb
  421aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aa9:	lahf   
  421aaa:	sbb    BYTE PTR [ebp+0x3e],dl
  421aad:	xchg   ecx,eax
  421aae:	lock (bad) 
  421ab0:	aaa    
  421ab1:	or     BYTE PTR [ebp-0x60],0x6
  421ab5:	cmp    BYTE PTR [edi],0x39
  421ab8:	retf   0xc578
  421abb:	push   ecx
  421abc:	add    dh,BYTE PTR [esi-0x137c69e8]
  421ac2:	retf   0xf81d
  421ac5:	xchg   ebx,eax
  421ac6:	ins    DWORD PTR es:[edi],dx
  421ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ac8:	push   ecx
  421ac9:	cdq    
  421aca:	xlat   BYTE PTR ds:[ebx]
  421acb:	pop    esp
  421acc:	retf   
  421acd:	rcr    DWORD PTR [ebx+0xc64e228],cl
  421ad3:	fcmovnb st,st(1)
  421ad5:	loop   0x421a61
  421ad7:	leave  
  421ad8:	(bad)  
  421ad9:	sub    BYTE PTR [ebx-0x74],bl
  421adc:	pop    ebp
  421add:	(bad)
  421ae0:	sbb    eax,0xab994d94
  421ae5:	xor    esi,esp
  421ae7:	les    ebx,FWORD PTR [ecx]
  421ae9:	imul   ebx,DWORD PTR [eax-0x1e8b8d8a],0x14
  421af0:	adc    DWORD PTR [edi],ecx
  421af2:	loop   0x421b09
  421af4:	adc    BYTE PTR [esi-0x7],dh
  421af7:	xchg   edi,eax
  421af8:	dec    ebp
  421af9:	push   eax
  421afa:	dec    eax
  421afb:	bound  eax,QWORD PTR [ebx+0x18df3d7a]
  421b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b02:	mov    ebp,0x2dc30249
  421b07:	cmp    eax,0x52f40a63
  421b0c:	jecxz  0x421b06
  421b0e:	adc    eax,esp
  421b10:	cld    
  421b11:	repz jg 0x421b74
  421b14:	add    al,0x18
  421b16:	jo     0x421b3d
  421b18:	jns    0x421aac
  421b1a:	rcl    DWORD PTR [edx-0x8b9a9b],0xb0
  421b21:	lock nop
  421b23:	dec    edi
  421b24:	not    bh
  421b26:	shl    BYTE PTR [edx+0x55],0x82
  421b2a:	xor    ebp,ebp
  421b2c:	cmp    al,0x64
  421b2e:	pusha  
  421b2f:	fiadd  DWORD PTR [edi]
  421b31:	jg     0x421b3b
  421b33:	xchg   edi,eax
  421b34:	(bad)  
  421b35:	ins    DWORD PTR es:[edi],dx
  421b36:	xchg   ebx,eax
  421b37:	sub    DWORD PTR [esp],eax
  421b3a:	andps  xmm4,XMMWORD PTR [ebx-0x4148b507]
  421b41:	clc    
  421b42:	ret    0x246b
  421b45:	pop    ebp
  421b46:	lock dec ebx
  421b48:	push   ds
  421b49:	imul   ebp,DWORD PTR [ecx],0xddb24000
  421b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b50:	jg     0x421bba
  421b52:	jl     0x421b93
  421b54:	push   es
  421b55:	cdq    
  421b56:	cmp    eax,DWORD PTR [esp+edx*1]
  421b59:	and    DWORD PTR [edi+0x493e9eee],ebx
  421b5f:	xor    eax,0xaa387c4c
  421b64:	mov    ebp,0xe27dd47f
  421b69:	xor    bh,BYTE PTR [ecx+eax*1-0x77c2242b]
  421b70:	rcr    bh,1
  421b72:	ret    0xb505
  421b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b76:	scas   al,BYTE PTR es:[edi]
  421b77:	and    eax,0xa9f07b7
  421b7c:	sub    dh,BYTE PTR [eax+0xc]
  421b7f:	stos   BYTE PTR es:[edi],al
  421b80:	mov    ds:0x52f591c3,al
  421b85:	ss in  al,dx
  421b87:	dec    ecx
  421b88:	je     0x421bf9
  421b8a:	lahf   
  421b8b:	mov    ebx,0x569d4ac7
  421b90:	mov    bh,0x4e
  421b92:	mov    al,ds:0x19a39aa0
  421b97:	inc    ebp
  421b98:	popf   
  421b99:	(bad)  
  421b9a:	or     al,0x0
  421b9c:	inc    ebx
  421b9d:	inc    ecx
  421b9e:	popa   
  421b9f:	data16 arpl WORD PTR [esi+0x47],sp
  421ba3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421ba7:	xor    BYTE PTR [ebp+0xbcfdb55],bh
  421bad:	xchg   edi,eax
  421bae:	add    DWORD PTR [eax],eax
  421bb0:	xchg   DWORD PTR [edx],eax
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	cdq    
  421bb5:	xchg   esp,eax
  421bb6:	nop
  421bb7:	push   eax
  421bb8:	pop    esp
  421bb9:	sti    
  421bba:	lock mov cl,0x2e
  421bbd:	stos   BYTE PTR es:[edi],al
  421bbe:	loope  0x421b67
  421bc0:	mov    esp,0x2d224b07
  421bc5:	ficomp WORD PTR [ecx+0x766f5b9]
  421bcb:	xchg   ebx,eax
  421bcc:	(bad)  [ecx+0x27]
  421bcf:	sbb    esi,eax
  421bd1:	jge    0x421bd7
  421bd3:	mov    dh,0xd1
  421bd5:	mov    al,0x80
  421bd7:	jmp    0x8dbc:0xdf9f41a0
  421bde:	ret    0xc813
  421be1:	mov    esi,0x355347f0
  421be6:	iret   
  421be7:	shl    DWORD PTR [edi+0x322d6632],cl
  421bed:	or     eax,0xfea879fd
  421bf2:	sub    ecx,edi
  421bf4:	loope  0x421c6f
  421bf6:	(bad)  
  421bf7:	sbb    BYTE PTR [ecx],ah
  421bf9:	xor    BYTE PTR [esi],bl
  421bfb:	icebp  
  421bfc:	jo     0x421c75
  421bfe:	mov    al,BYTE PTR ds:0x34f2c6c1
  421c04:	mov    eax,0x3dcb6260
  421c09:	cmp    al,0xba
  421c0b:	mov    bh,0x1
  421c0d:	pop    es
  421c0e:	ret    
  421c0f:	inc    ecx
  421c10:	inc    eax
  421c11:	sub    BYTE PTR [ebx],ch
  421c13:	pop    ebx
  421c14:	fidiv  WORD PTR [ebx]
  421c16:	data16 jecxz 0x421c67
  421c19:	or     al,0x8a
  421c1b:	repz and eax,DWORD PTR [ebx+edi*2]
  421c1f:	jo     0x421c83
  421c21:	push   eax
  421c22:	add    ch,dh
  421c24:	or     ebp,DWORD PTR [ebx+0x42f71a55]
  421c2a:	test   DWORD PTR [ebp-0x514c7732],ebp
  421c30:	sahf   
  421c31:	mov    esp,0x4beb078e
  421c36:	push   ebp
  421c37:	cmp    esi,DWORD PTR [esi+0x36]
  421c3a:	out    0x7c,eax
  421c3c:	fadd   QWORD PTR [ebp-0x22023e69]
  421c42:	mov    ?,eax
  421c44:	xchg   esi,eax
  421c45:	push   ss
  421c46:	pop    esi
  421c47:	mov    ebx,0xe8d69a55
  421c4c:	push   esp
  421c4d:	push   ss
  421c4e:	push   edi
  421c4f:	(bad)  
  421c50:	dec    eax
  421c51:	xor    esp,edi
  421c53:	jl     0x421c9e
  421c55:	mov    dl,0x74
  421c57:	jo     0x421c99
  421c59:	mov    dl,0xc4
  421c5b:	arpl   WORD PTR [ecx+eiz*8],bx
  421c5e:	mov    esi,0x3bf3b357
  421c63:	fbstp  TBYTE PTR [ecx+0x6c81e17a]
  421c69:	jle    0x421c2e
  421c6b:	jle    0x421c73
  421c6d:	out    0xb8,eax
  421c6f:	push   0x95bad547
  421c74:	cwde   
  421c75:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  421c77:	push   ss
  421c78:	cmp    al,BYTE PTR [ebp-0x44c5234c]
  421c7e:	mov    edi,0xb192bf9d
  421c83:	or     eax,DWORD PTR [edx+0x0]
  421c86:	stc    
  421c87:	mov    esi,0xe48c9b7e
  421c8c:	jmp    0x421c40
  421c8e:	pop    ebx
  421c8f:	adc    DWORD PTR [edi+0x7e],esi
  421c92:	mov    eax,ds:0xd13651ce
  421c97:	push   esi
  421c98:	add    DWORD PTR [ecx-0x1352f7ba],eax
  421c9e:	inc    edx
  421c9f:	and    eax,0x311b2ae4
  421ca4:	loope  0x421c65
  421ca6:	jle    0x421ca6
  421ca8:	fsub   QWORD PTR [edx]
  421caa:	adc    BYTE PTR [edx+eiz*4+0x49c632a0],bl
  421cb1:	adc    edi,ebp
  421cb3:	mov    BYTE PTR [ebx],al
  421cb5:	in     al,dx
  421cb6:	dec    esi
  421cb7:	or     bh,BYTE PTR [ebx-0x12]
  421cba:	push   ecx
  421cbb:	inc    ebx
  421cbc:	adc    eax,DWORD PTR [edx+0x29245d8d]
  421cc2:	jge    0x421d14
  421cc4:	mov    ch,ah
  421cc6:	sub    al,0x4b
  421cc8:	ret    
  421cc9:	push   ds
  421cca:	mov    ebx,0xe94266de
  421ccf:	and    DWORD PTR [ebx+0x76],0xf503245a
  421cd6:	(bad)  
  421cd7:	push   edi
  421cd8:	ds pop ebp
  421cda:	jecxz  0x421d57
  421cdc:	aaa    
  421cdd:	sahf   
  421cde:	retf   0xec04
  421ce1:	arpl   di,ax
  421ce3:	(bad)  
  421ce4:	loope  0x421c88
  421ce6:	mov    ah,0x51
  421ce8:	fistp  QWORD PTR [ebx-0x31]
  421ceb:	cli    
  421cec:	inc    eax
  421ced:	sub    ecx,esi
  421cef:	add    al,0x2b
  421cf1:	js     0x421cd4
  421cf3:	add    DWORD PTR [eax],edi
  421cf5:	cmp    al,0xc4
  421cf7:	jp     0x421d6f
  421cf9:	sbb    BYTE PTR [edi+0x63],ah
  421cfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cfd:	pop    ebp
  421cfe:	ins    BYTE PTR es:[edi],dx
  421cff:	shl    DWORD PTR [ebp+0x42],1
  421d02:	sub    BYTE PTR [ebx],0x5c
  421d05:	loope  0x421cb1
  421d07:	push   ds
  421d08:	jmp    0x421c9d
  421d0a:	icebp  
  421d0b:	dec    edx
  421d0c:	in     eax,dx
  421d0d:	mov    ch,0xff
  421d0f:	rol    BYTE PTR [esi-0x1571eb55],1
  421d15:	add    eax,0x9a692504
  421d1a:	ins    BYTE PTR es:[edi],dx
  421d1b:	stc    
  421d1c:	jge    0x421d6d
  421d1e:	push   ebx
  421d1f:	add    ch,bl
  421d21:	icebp  
  421d22:	scas   al,BYTE PTR es:[edi]
  421d23:	call   0xbf22:0xcbaed150
  421d2a:	in     al,0x8d
  421d2c:	push   edi
  421d2d:	pop    ebp
  421d2e:	add    DWORD PTR [esi],esi
  421d30:	xor    esi,DWORD PTR [eax+ebx*4-0x64]
  421d34:	mov    dh,0x10
  421d36:	into   
  421d37:	ds cmp dl,bh
  421d3a:	cwde   
  421d3b:	js     0x421d97
  421d3d:	test   WORD PTR [eax-0x44a22d5d],0x1199
  421d46:	xor    DWORD PTR [ebp-0x5364dd3e],esi
  421d4c:	(bad)  
  421d4d:	mov    esp,0x393e18d7
  421d52:	mov    esi,0xde030a3d
  421d57:	mov    bl,0xf1
  421d59:	mov    eax,DWORD PTR [edi+0x3f1fe158]
  421d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d60:	mov    ds:0xc9baf15d,al
  421d65:	mov    ah,ch
  421d67:	cmp    edx,DWORD PTR [edi+ecx*8+0x5c167bf4]
  421d6e:	in     al,dx
  421d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d71:	test   DWORD PTR [eax],esi
  421d73:	push   0x44677c37
  421d78:	out    0xa7,eax
  421d7a:	xchg   esp,eax
  421d7b:	test   DWORD PTR [edi-0x7f4eb180],ebx
  421d81:	and    al,0x6
  421d83:	xchg   esi,eax
  421d84:	push   ebp
  421d85:	fsubr  DWORD PTR [eax-0x6a]
  421d88:	xchg   ecx,eax
  421d89:	xchg   bl,ah
  421d8b:	add    ebp,DWORD PTR [ecx-0x1a2dd0e5]
  421d91:	rol    BYTE PTR [ecx],cl
  421d93:	popa   
  421d94:	pop    edi
  421d95:	aad    0x7b
  421d97:	pop    edx
  421d98:	pop    ss
  421d99:	mov    WORD PTR [ebp+0x6f],gs
  421d9c:	les    ebx,FWORD PTR [esi+0x38]
  421d9f:	aaa    
  421da0:	adc    al,BYTE PTR [ecx+0x14]
  421da3:	je     0x421da6
  421da5:	push   esp
  421da6:	sbb    ah,ch
  421da8:	sub    eax,0xb388c96f
  421dad:	int    0x3d
  421daf:	sub    ch,BYTE PTR [esi+0xd0d4016]
  421db5:	leave  
  421db6:	xchg   bh,dl
  421db8:	push   ecx
  421db9:	add    bl,BYTE PTR [ecx+0x66]
  421dbc:	sbb    ebx,edx
  421dbe:	xor    DWORD PTR [ebx-0x17],ebx
  421dc1:	sub    al,0x3d
  421dc3:	add    eax,0xc4b11860
  421dc8:	xor    ebx,DWORD PTR [ebp+0x51]
  421dcb:	mov    DWORD PTR [ecx+eax*1],edi
  421dce:	add    al,0xb2
  421dd0:	sbb    WORD PTR [edx-0x4d],cx
  421dd4:	pushf  
  421dd5:	jmp    0x421e18
  421dd7:	inc    ebp
  421dd8:	lock push 0x71
  421ddb:	jmp    0x60955f5c
  421de0:	out    0xea,eax
  421de2:	and    DWORD PTR [ecx-0x61],edx
  421de5:	ja     0x421e3d
  421de7:	cmp    al,0x99
  421de9:	xor    eax,0xc318b78f
  421dee:	adc    ch,BYTE PTR [esi]
  421df0:	mov    esp,DWORD PTR [esi+0xc]
  421df3:	lea    edx,[ecx+0x6e]
  421df6:	(bad)  
  421df7:	cmc    
  421df8:	es push eax
  421dfa:	inc    DWORD PTR ds:0x64f239cd
  421e00:	cmc    
  421e01:	inc    esp
  421e02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e03:	and    edi,0xd2d58c65
  421e09:	hlt    
  421e0a:	sub    BYTE PTR [esp+ebx*1+0x53],0x7d
  421e0f:	jmp    FWORD PTR [edi]
  421e11:	pusha  
  421e12:	lahf   
  421e13:	shr    DWORD PTR [ebx+0x42],1
  421e16:	push   edx
  421e17:	add    eax,0x1d2851c0
  421e1c:	cld    
  421e1d:	adc    DWORD PTR [esi],ebp
  421e1f:	ja     0x421db8
  421e21:	dec    esi
  421e22:	sub    BYTE PTR [edx],al
  421e24:	mov    eax,ds:0x6440d4ce
  421e29:	sbb    eax,0x77cc0821
  421e2e:	fidiv  DWORD PTR [ebp+0x6e]
  421e31:	fmul   st(4),st
  421e33:	or     al,0xde
  421e35:	xchg   ebx,eax
  421e36:	leave  
  421e37:	mov    bl,0xb2
  421e39:	sti    
  421e3a:	outs   dx,BYTE PTR ds:[esi]
  421e3b:	add    BYTE PTR [ebx-0xce42c16],cl
  421e41:	cmp    ecx,ebx
  421e43:	cli    
  421e44:	in     al,dx
  421e45:	jg     0x421e7e
  421e47:	loopne 0x421e4c
  421e49:	jnp    0x421e19
  421e4b:	mov    WORD PTR [edx-0x78fffe67],ss
  421e51:	add    al,BYTE PTR [eax]
  421e53:	add    BYTE PTR [ebx+0x76e6806b],dl
  421e59:	dec    edi
  421e5a:	sbb    edx,DWORD PTR [edi]
  421e5c:	mov    dh,0xe7
  421e5e:	and    edx,DWORD PTR [eax+ecx*1-0x439989e9]
  421e65:	in     eax,0x8d
  421e67:	bound  ecx,QWORD PTR [edi-0x73]
  421e6a:	mov    ds:0x15e89ee5,al
  421e6f:	pop    ebp
  421e70:	test   esi,ebp
  421e72:	popf   
  421e73:	fsub   QWORD PTR [eax-0x49]
  421e76:	or     al,0x46
  421e78:	lahf   
  421e79:	and    al,0xe0
  421e7b:	stc    
  421e7c:	mov    esi,0xfb60cdf0
  421e81:	icebp  
  421e82:	mov    DWORD PTR [esi+0x8],esi
  421e85:	push   ecx
  421e86:	(bad)  
  421e87:	cmp    ecx,DWORD PTR [edi+0x37]
  421e8a:	sbb    BYTE PTR [esi],dh
  421e8c:	ror    DWORD PTR [ecx],1
  421e8e:	dec    ebx
  421e8f:	jns    0x421ed0
  421e91:	xor    BYTE PTR [ebp+0x765aa2f4],ah
  421e97:	ins    BYTE PTR es:[edi],dx
  421e98:	out    0x93,al
  421e9a:	fbstp  TBYTE PTR [eax+0x42]
  421e9d:	add    DWORD PTR [ebx-0x17],eax
  421ea0:	dec    eax
  421ea1:	shr    BYTE PTR [edi],1
  421ea3:	sub    BYTE PTR [eax],0xa0
  421ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea7:	mov    bh,0xc7
  421ea9:	int3   
  421eaa:	and    DWORD PTR [ebx-0x20],esi
  421ead:	mov    bl,bl
  421eaf:	dec    esi
  421eb0:	lods   eax,DWORD PTR ds:[esi]
  421eb1:	add    edi,DWORD PTR [edx+0x9]
  421eb4:	ret    
  421eb5:	mov    dl,BYTE PTR ds:0x55f2ce34
  421ebb:	and    DWORD PTR [eax],edx
  421ebd:	or     dh,0x5f
  421ec0:	arpl   WORD PTR [edi-0x13],bx
  421ec3:	sahf   
  421ec4:	sbb    eax,0xac9f0aba
  421ec9:	pop    edi
  421eca:	xchg   edi,eax
  421ecb:	push   0xdcce4a36
  421ed0:	ds mov ebp,0x70042142
  421ed6:	pop    esi
  421ed7:	adc    al,0x8b
  421ed9:	(bad)  
  421eda:	xchg   esp,eax
  421edb:	cwde   
  421edc:	push   ss
  421edd:	and    ch,dl
  421edf:	outs   dx,DWORD PTR ds:[esi]
  421ee0:	inc    esp
  421ee1:	inc    esi
  421ee2:	pusha  
  421ee3:	xor    eax,0x9b76385
  421ee8:	mov    ds:0x3b6bef3c,al
  421eed:	mov    WORD PTR [edx+0x33560cfc],cs
  421ef3:	push   DWORD PTR [edx]
  421ef5:	and    bh,BYTE PTR [eax+0x319ab1e5]
  421efb:	ret    
  421efc:	test   al,0x2d
  421efe:	push   edi
  421eff:	or     DWORD PTR [eax],edx
  421f01:	outs   dx,DWORD PTR ds:[esi]
  421f02:	imul   eax,esp,0xb
  421f05:	pop    esi
  421f06:	sbb    edx,DWORD PTR [esi+0x52780104]
  421f0c:	ror    DWORD PTR [edx+edx*4-0x66],1
  421f10:	pop    esi
  421f12:	dec    esp
  421f13:	lea    edi,[ebx]
  421f15:	ret    0xe319
  421f18:	fs pop edx
  421f1a:	clc    
  421f1b:	sub    eax,0x9abba519
  421f20:	cli    
  421f21:	push   ecx
  421f22:	and    al,0x1c
  421f24:	loope  0x421eb6
  421f26:	add    al,BYTE PTR [ebp+0x38]
  421f29:	arpl   WORD PTR [ecx+0x4d],cx
  421f2c:	cmp    eax,0xc78cff0d
  421f31:	mov    eax,ds:0xd3117295
  421f36:	push   ebx
  421f37:	arpl   cx,cx
  421f39:	mov    ebx,eax
  421f3b:	inc    edx
  421f3c:	dec    eax
  421f3d:	popa   
  421f3e:	add    eax,0x87f843c1
  421f43:	cld    
  421f44:	sub    dl,ch
  421f46:	xor    eax,0x3d740715
  421f4b:	test   DWORD PTR ds:0x543dd17c,ebx
  421f51:	stos   BYTE PTR es:[edi],al
  421f52:	pop    ebx
  421f53:	in     al,dx
  421f54:	adc    al,0x64
  421f56:	pop    DWORD PTR [esi]
  421f58:	mov    edi,0xfec3d4ee
  421f5d:	icebp  
  421f5e:	mov    gs,WORD PTR [edx-0x44]
  421f61:	push   eax
  421f62:	dec    ebp
  421f63:	retf   
  421f64:	inc    eax
  421f65:	cmp    bh,BYTE PTR [eax-0x583b03cb]
  421f6b:	(bad)  
  421f6c:	test   DWORD PTR ds:0xc220ea42,0xd0dd26fe
  421f76:	adc    ch,dl
  421f78:	pop    ebx
  421f79:	imul   edi,DWORD PTR [edx],0xea0e5e7
  421f7f:	shl    BYTE PTR ds:0x8aefdcd8,1
  421f85:	xchg   DWORD PTR [eax-0x7c9b4b9c],eax
  421f8b:	and    esi,DWORD PTR ds:0x63c553e0
  421f91:	cwde   
  421f92:	in     eax,0xc9
  421f94:	pop    ss
  421f95:	lods   eax,DWORD PTR ds:[esi]
  421f96:	lahf   
  421f97:	mov    dh,0xd5
  421f99:	cdq    
  421f9a:	sbb    BYTE PTR [esi+0x68],dl
  421f9d:	inc    eax
  421f9e:	mov    ds:0x934cd04d,al
  421fa3:	jecxz  0x421fa0
  421fa5:	adc    edi,DWORD PTR [edx]
  421fa7:	test   eax,0x8aa4cf53
  421fac:	pop    ebx
  421fad:	sub    al,BYTE PTR [edx]
  421faf:	cwde   
  421fb0:	cs mov ch,0x85
  421fb3:	das    
  421fb4:	push   ebx
  421fb5:	ja     0x421fb4
  421fb7:	dec    edx
  421fb8:	jmp    0x5d5:0x9329cbbf
  421fbf:	lds    ebp,FWORD PTR [esi-0x46]
  421fc2:	dec    ebx
  421fc3:	xchg   DWORD PTR [eax],ecx
  421fc5:	aam    0x9a
  421fc7:	sub    eax,0x67273ac4
  421fcc:	and    eax,DWORD PTR [eax+0x1fe5640f]
  421fd2:	jno    0x421fa9
  421fd4:	repz dec ebx
  421fd6:	xchg   ebx,eax
  421fd7:	imul   edx,DWORD PTR [esp+edx*2],0x88970518
  421fde:	jb     0x421ff5
  421fe0:	dec    ecx
  421fe1:	add    ebp,ecx
  421fe3:	imul   edx,DWORD PTR [ebx-0x79c03d4b],0x7157826
  421fed:	add    BYTE PTR [esi-0x45],cl
  421ff0:	arpl   WORD PTR [esi+edx*4],ax
  421ff3:	sbb    dl,BYTE PTR [ebp-0x6de171db]
  421ff9:	call   0x92a61d16
  421ffe:	and    DWORD PTR [edi+eax*2-0x2125b4d3],esi
  422005:	retf   
  422006:	sbb    BYTE PTR [edi],bl
  422008:	pop    ds
  422009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42200a:	push   ebx
  42200b:	xchg   BYTE PTR [edx],ah
  42200d:	stc    
  42200e:	and    ebp,ecx
  422010:	add    BYTE PTR [eax+0x2310851d],dl
  422016:	xor    eax,0x8867d2cb
  42201b:	(bad)  
  42201c:	clc    
  42201d:	and    BYTE PTR [ecx-0x47898a47],al
  422023:	out    dx,al
  422024:	cmp    edx,edi
  422026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422027:	or     al,ch
  422029:	lock mov dh,0x5
  42202c:	pop    eax
  42202d:	mov    ds:0x8817151,al
  422032:	sub    BYTE PTR [ecx-0x42],bl
  422035:	inc    eax
  422036:	mov    ?,WORD PTR [ebx]
  422038:	jno    0x422027
  42203a:	fsub   QWORD PTR [edi+esi*4+0x66]
  42203e:	and    BYTE PTR [edi-0x69],bl
  422041:	mov    DWORD PTR [ebx-0x3e],ebp
  422044:	adc    eax,0x2b94598d
  422049:	pop    ebx
  42204a:	cmp    al,0x18
  42204c:	push   esp
  42204d:	les    edi,FWORD PTR [esi+0x5e936773]
  422053:	es retf 0x844d
  422057:	imul   BYTE PTR [eax+0x1f50dee9]
  42205d:	mov    ecx,0xc724bfc3
  422062:	inc    esp
  422063:	test   DWORD PTR [esi],esp
  422065:	les    esi,FWORD PTR [eax+0x1b]
  422068:	iret   
  422069:	pop    ebp
  42206a:	out    0x1d,al
  42206c:	mov    ecx,?
  42206e:	cs icebp 
  422070:	mov    al,BYTE PTR [edx+0x78f9abc5]
  422076:	mov    bl,0xb4
  422078:	push   edi
  422079:	mov    eax,ds:0x60c48c7f
  42207e:	and    eax,0xb5e6d686
  422083:	mov    eax,0x1521cbb3
  422088:	mov    eax,ds:0xb2319d9c
  42208d:	jecxz  0x42208c
  42208f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422090:	inc    esp
  422091:	(bad)  
  422092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422093:	and    al,0x4
  422095:	fwait
  422096:	jo     0x4220e6
  422098:	push   cs
  422099:	add    eax,0xb010ddb8
  42209e:	push   esi
  42209f:	les    edi,FWORD PTR [esi+ebp*8+0x7099af8c]
  4220a6:	pop    eax
  4220a7:	push   esi
  4220a8:	lea    ebp,[ebx]
  4220aa:	test   DWORD PTR [ebp+0x2e],ebx
  4220ad:	(bad)  
  4220ae:	sti    
  4220af:	das    
  4220b0:	scas   al,BYTE PTR es:[edi]
  4220b1:	lods   eax,DWORD PTR ds:[esi]
  4220b2:	inc    esp
  4220b3:	jns    0x42211d
  4220b5:	cmp    al,BYTE PTR [esi-0x6f]
  4220b8:	jmp    0xc946c39a
  4220bd:	ret    0xee2a
  4220c0:	call   0xb7e484e1
  4220c5:	inc    edx
  4220c6:	push   ds
  4220c7:	rol    edx,cl
  4220c9:	pop    edi
  4220ca:	mov    al,0xa3
  4220cc:	push   edx
  4220cd:	cmp    bh,dl
  4220cf:	cwde   
  4220d0:	rol    BYTE PTR [ebx-0x2a78a3f8],0x9d
  4220d7:	cmp    al,0xd6
  4220d9:	xchg   ebx,eax
  4220da:	ret    0xd200
  4220dd:	and    dl,BYTE PTR [esi-0x21410966]
  4220e3:	push   0x52
  4220e5:	push   ds
  4220e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e7:	and    dh,dl
  4220e9:	bound  ebp,QWORD PTR [esi+0x8]
  4220ec:	sbb    DWORD PTR [ecx+eax*1+0x28700],ebx
  4220f3:	add    BYTE PTR [esp+eiz*2],dl
  4220f6:	sub    DWORD PTR [ebx+0x75],edx
  4220f9:	dec    esp
  4220fa:	loop   0x42213a
  4220fc:	xor    eax,DWORD PTR [ecx+0x25]
  4220ff:	push   esi
  422100:	je     0x42217d
  422102:	mov    eax,ds:0x8d475742
  422107:	sbb    eax,0xba483cbd
  42210c:	jae    0x4220f8
  42210e:	out    0x3b,al
  422110:	loopne 0x42209e
  422112:	fld    DWORD PTR [eax+0x76cd8899]
  422118:	ins    BYTE PTR es:[edi],dx
  422119:	and    BYTE PTR [ebx-0x5eee25d],dl
  42211f:	sbb    BYTE PTR [ecx+0x72091d5],cl
  422125:	jecxz  0x4220e4
  422127:	enter  0x3ab0,0x6
  42212b:	jae    0x4220d9
  42212d:	iret   
  42212e:	inc    esi
  42212f:	sub    esp,0x917d31c9
  422135:	pop    ds
  422136:	sub    DWORD PTR [eax-0x732ab2f1],esi
  42213c:	pop    edx
  42213d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42213f:	out    dx,al
  422140:	daa    
  422141:	fwait
  422142:	pushf  
  422143:	icebp  
  422144:	in     al,dx
  422145:	mov    al,0xac
  422147:	xchg   edx,eax
  422148:	mov    dl,0x97
  42214a:	jo     0x422158
  42214c:	xor    BYTE PTR [ebp+0x40],0xa7
  422150:	outs   dx,BYTE PTR ds:[esi]
  422151:	rcl    DWORD PTR [esi+0x127a6db4],1
  422157:	mov    eax,0xd8925435
  42215c:	mov    BYTE PTR [edi],al
  42215e:	cmp    eax,0x6826da2a
  422163:	pop    esp
  422164:	call   0xa38d3207
  422169:	inc    ecx
  42216a:	push   0x68
  42216c:	aam    0x47
  42216e:	ret    
  42216f:	bnd jo 0x42216a
  422172:	lds    eax,FWORD PTR [ecx]
  422174:	push   esi
  422175:	mov    DWORD PTR [ecx+0x2e5e93c3],edx
  42217b:	outs   dx,BYTE PTR ds:[esi]
  42217c:	ds stos BYTE PTR es:[edi],al
  42217e:	std    
  42217f:	xchg   DWORD PTR [ecx+0x26],esp
  422182:	fadd   st,st(0)
  422184:	hlt    
  422185:	push   eax
  422186:	and    BYTE PTR [ebp-0x3228eb5d],dl
  42218c:	add    al,BYTE PTR [esi+0x1a]
  42218f:	and    eax,0x5ae3ecbc
  422194:	push   ds
  422195:	push   ss
  422196:	imul   ebx,DWORD PTR ds:0x80bb736e,0x285cf23c
  4221a0:	stos   DWORD PTR es:[edi],eax
  4221a1:	sub    ch,bl
  4221a3:	cdq    
  4221a4:	fstp   QWORD PTR [ebp-0x31e1fe55]
  4221aa:	repnz aas 
  4221ac:	int3   
  4221ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ae:	stos   BYTE PTR es:[edi],al
  4221af:	std    
  4221b0:	pusha  
  4221b1:	lods   al,BYTE PTR ds:[esi]
  4221b2:	adc    bl,bl
  4221b4:	fs ja  0x42213a
  4221b7:	sbb    ebx,DWORD PTR ds:0x1d4e24ea
  4221bd:	jge    0x422156
  4221bf:	xchg   esp,eax
  4221c0:	cli    
  4221c1:	sbb    eax,0xa8eee47e
  4221c6:	cwde   
  4221c7:	lock mov eax,DWORD PTR [edx+edi*1]
  4221cb:	dec    edx
  4221cc:	xor    ebx,DWORD PTR [eax+0x777d4a7f]
  4221d2:	in     al,0xa7
  4221d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221d5:	xchg   al,dl
  4221d7:	jmp    0xfdb74836
  4221dc:	lock mov bh,0x32
  4221df:	retf   
  4221e0:	sbb    eax,0x663027a7
  4221e5:	sbb    al,BYTE PTR [ebx-0x51]
  4221e8:	sbb    BYTE PTR [ecx-0x67d354eb],0x20
  4221ef:	into   
  4221f0:	in     eax,0xf9
  4221f2:	fidiv  DWORD PTR ds:[edx-0x2e]
  4221f6:	mov    bl,0x85
  4221f8:	jnp    0x422244
  4221fa:	sbb    dh,BYTE PTR [ebx+ecx*1]
  4221fd:	outs   dx,DWORD PTR ds:[esi]
  4221fe:	fwait
  4221ff:	add    BYTE PTR [ebx],0x9
  422202:	int    0xc5
  422204:	mov    ecx,0xd97fd7cd
  422209:	lock xor eax,0xda01fcb4
  42220f:	neg    DWORD PTR [edi]
  422211:	mov    cl,0x51
  422213:	stos   BYTE PTR es:[edi],al
  422214:	or     eax,0xed65a172
  422219:	sub    al,0x30
  42221b:	sub    al,0x1b
  42221d:	xor    eax,0x7c2eb549
  422222:	dec    eax
  422223:	xchg   esi,eax
  422224:	xchg   edx,eax
  422225:	ja     0x422203
  422227:	aad    0x35
  422229:	jo     0x42227d
  42222b:	fidivr DWORD PTR [ecx-0x5a2e6487]
  422231:	repz adc eax,0x9452489f
  422237:	jp     0x422287
  422239:	lods   al,BYTE PTR ds:[esi]
  42223a:	test   al,0xb
  42223c:	into   
  42223d:	sar    ebp,cl
  42223f:	cmc    
  422240:	or     bl,ch
  422242:	pop    edx
  422243:	in     eax,dx
  422244:	bound  esi,QWORD PTR [ebx]
  422246:	das    
  422247:	or     BYTE PTR [edi],0xe2
  42224a:	fwait
  42224b:	sub    eax,esp
  42224d:	or     ecx,DWORD PTR [edx-0x24]
  422250:	and    BYTE PTR [ecx-0x9],dh
  422253:	cld    
  422254:	fadd   DWORD PTR [edi+0x72db9369]
  42225a:	mov    cl,0xba
  42225c:	ja     0x4222d7
  42225e:	or     al,dh
  422260:	mov    edx,0xccb067da
  422265:	jmp    0xb633:0xbd887e20
  42226c:	rcr    BYTE PTR [eax],1
  42226e:	fs sub eax,0x39288382
  422274:	xchg   edi,eax
  422275:	loope  0x4222bd
  422277:	lock fadd DWORD PTR [esi]
  42227a:	mov    ecx,0x90bade4b
  42227f:	add    DWORD PTR [ebx],edx
  422281:	cmp    al,0x51
  422283:	sbb    esi,esp
  422285:	clc    
  422286:	add    eax,0x6227cc33
  42228b:	aas    
  42228c:	or     al,0xce
  42228e:	pop    ebx
  42228f:	daa    
  422290:	ret    0x2eff
  422293:	retf   0xc6cd
  422296:	jne    0x422285
  422298:	retf   
  422299:	pop    es
  42229a:	adc    esp,DWORD PTR [eax-0x3cb41649]
  4222a0:	bound  ebp,QWORD PTR ds:0x6cf2b2e0
  4222a6:	inc    ebp
  4222a7:	bound  ebp,QWORD PTR [esp+edx*8+0x4a6746e3]
  4222ae:	mov    bl,0xc1
  4222b0:	aaa    
  4222b1:	lds    esi,FWORD PTR [edx]
  4222b3:	xor    BYTE PTR [edi-0x414431fb],0x6f
  4222ba:	ror    ebx,1
  4222bc:	sahf   
  4222bd:	mov    bh,0x8c
  4222bf:	and    bl,BYTE PTR [edi+0x28]
  4222c2:	inc    esp
  4222c3:	repz xor al,0x63
  4222c6:	test   ebx,esp
  4222c8:	(bad)  
  4222c9:	mov    eax,0xc90d68c6
  4222ce:	and    edi,edi
  4222d0:	cmc    
  4222d1:	leave  
  4222d2:	jbe    0x422312
  4222d4:	iret   
  4222d5:	mov    bl,0x70
  4222d7:	and    cl,BYTE PTR [ebp+0x41]
  4222da:	pusha  
  4222db:	ja     0x4222ca
  4222dd:	sub    al,BYTE PTR [eax+0x2c]
  4222e0:	imul   ebx,DWORD PTR [edx-0x7d988668],0xffffffcc
  4222e7:	test   DWORD PTR [esi+eax*2],ebp
  4222ea:	loopne 0x4222e5
  4222ec:	fcomp  QWORD PTR [eax+edx*4]
  4222ef:	das    
  4222f0:	or     al,0x24
  4222f2:	dec    ecx
  4222f3:	mov    WORD PTR fs:[ecx],gs
  4222f6:	cwde   
  4222f7:	js     0x42235f
  4222f9:	jmp    0x42232c
  4222fb:	mov    ecx,fs
  4222fd:	lock push ss
  4222ff:	xlat   BYTE PTR ds:[ebx]
  422300:	cld    
  422301:	inc    edx
  422302:	cmp    BYTE PTR [edx],dl
  422304:	jno    0x4222ea
  422306:	sbb    ebx,DWORD PTR [ebx]
  422308:	dec    eax
  422309:	dec    ebp
  42230a:	push   ebp
  42230b:	inc    esp
  42230c:	mov    eax,ds:0xbb5d7343
  422311:	dec    ebx
  422312:	xor    al,0x36
  422314:	in     eax,0x4e
  422316:	rcr    ebp,cl
  422318:	(bad)  
  422319:	jo     0x422324
  42231b:	jne    0x422376
  42231d:	xor    al,0x32
  42231f:	and    bl,BYTE PTR [eax-0xd48a3b6]
  422325:	imul   ecx,DWORD PTR [ebx+esi*2+0x6ad51653],0xa639a643
  422330:	cmp    eax,0x6dedb1fc
  422335:	mov    edi,0xec3e2a17
  42233a:	stc    
  42233b:	sbb    eax,0x17e4d7ec
  422340:	pop    ebx
  422341:	ss mov esi,0xa35a4bf1
  422347:	mov    ds:0xadf8251a,al
  42234c:	jbe    0x422319
  42234e:	imul   edx,DWORD PTR [ebp+ebp*8-0x37],0x5e
  422353:	pop    eax
  422354:	rcr    DWORD PTR [ecx],0x2a
  422357:	sahf   
  422358:	mov    cl,0x16
  42235a:	enter  0x2be,0x3b
  42235e:	cmp    ebp,ebx
  422360:	outs   dx,BYTE PTR ds:[esi]
  422361:	pop    edi
  422362:	sbb    DWORD PTR [ebx+0x10],ecx
  422365:	cmp    BYTE PTR [esi+0x77c36ee1],bh
  42236b:	sti    
  42236c:	rol    BYTE PTR ds:0xd2abfe87,0x45
  422373:	mov    bl,0x2
  422375:	xchg   ebx,eax
  422376:	les    ecx,FWORD PTR ds:0xbd9828
  42237c:	fnstsw WORD PTR [edi+ecx*4]
  42237f:	mov    esp,0x7dffbfef
  422384:	add    al,BYTE PTR [ebp-0x517c723f]
  42238a:	outs   dx,BYTE PTR ds:[esi]
  42238b:	xchg   ecx,eax
  42238c:	mov    al,ds:0x8700019e
  422391:	add    al,BYTE PTR [eax]
  422393:	add    dh,dh
  422395:	icebp  
  422396:	mov    cl,0xa7
  422398:	das    
  422399:	out    dx,al
  42239a:	push   ss
  42239b:	mov    ch,0x45
  42239d:	ss pop ss
  42239f:	adc    eax,esi
  4223a1:	jo     0x422364
  4223a3:	lock js 0x422407
  4223a6:	setl   BYTE PTR [ebp-0x782b065f]
  4223ad:	sub    al,0x66
  4223af:	test   eax,0xd72058b9
  4223b4:	and    eax,DWORD PTR [eax-0x29e760e4]
  4223ba:	and    DWORD PTR [edi+0x580d8697],ebx
  4223c0:	xor    BYTE PTR [esi+0x5c],dl
  4223c3:	pop    es
  4223c4:	xor    DWORD PTR [edx],esi
  4223c6:	and    ch,ch
  4223c8:	sbb    eax,0x6de40730
  4223cd:	mov    al,BYTE PTR [ebx]
  4223cf:	adc    edx,DWORD PTR [esp]
  4223d2:	mov    BYTE PTR [ebx],dh
  4223d4:	cwde   
  4223d5:	add    dl,0x41
  4223d8:	fadd   QWORD PTR [ebp+0x99c3c15]
  4223de:	imul   eax,edx,0xff23520b
  4223e4:	mov    edx,0xea10e147
  4223e9:	mov    ds:0xde429d9e,eax
  4223ee:	push   edi
  4223ef:	ds xchg esp,eax
  4223f1:	inc    esp
  4223f2:	pop    ss
  4223f3:	test   DWORD PTR [eax+0x4f],esp
  4223f6:	xchg   DWORD PTR [edx+0x39],eax
  4223f9:	add    bh,BYTE PTR [eax+0x1d]
  4223fc:	push   ebp
  4223fd:	xchg   esp,eax
  4223fe:	xor    al,BYTE PTR [ebx+0x30]
  422401:	sbb    al,0xbb
  422403:	mov    al,0x1c
  422405:	pop    ebx
  422406:	fs addr16 dec ebx
  422409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240a:	outs   dx,BYTE PTR ds:[esi]
  42240b:	or     BYTE PTR [edi],bl
  42240d:	rcr    BYTE PTR [esp+esi*4+0x36],cl
  422411:	call   ebx
  422413:	jo     0x422468
  422415:	jne    0x4223f4
  422417:	in     al,dx
  422418:	push   edi
  422419:	ins    BYTE PTR es:[edi],dx
  42241a:	or     bh,BYTE PTR [ebx+0x6024cb0]
  422420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422421:	sar    BYTE PTR [ebp+esi*4-0x32152c15],1
  422428:	jmp    FWORD PTR [eax]
  42242a:	jge    0x422420
  42242c:	pop    ecx
  42242d:	adc    al,0xa1
  42242f:	pop    edi
  422430:	fidivr DWORD PTR [edx-0x3b]
  422433:	(bad)  
  422434:	fcomp  QWORD PTR [edi+0x3a]
  422437:	mov    bl,0x52
  422439:	or     DWORD PTR [eax],edi
  42243b:	mov    al,0x2
  42243d:	ret    
  42243e:	jb     0x4224b8
  422440:	add    BYTE PTR [ecx],dl
  422442:	pop    ebx
  422443:	pusha  
  422444:	xor    DWORD PTR [esi],0xe2ec303c
  42244a:	push   ebp
  42244b:	dec    ecx
  42244c:	and    bh,BYTE PTR [edi-0x3ce39c7]
  422452:	and    DWORD PTR [edx+0x75],eax
  422455:	jle    0x422475
  422457:	dec    edx
  422458:	jl     0x42246b
  42245a:	out    dx,eax
  42245b:	push   es
  42245c:	dec    eax
  42245d:	add    bl,BYTE PTR [eax-0x578f0a43]
  422463:	sub    al,BYTE PTR [ebp-0x3b02b1ef]
  422469:	into   
  42246a:	adc    BYTE PTR [eax-0x737e2af7],cl
  422470:	cmp    eax,0x2ceb2bc7
  422475:	hlt    
  422476:	or     esp,DWORD PTR [ebp-0x6d6158da]
  42247c:	xor    DWORD PTR [esp+0x5aefa26],eax
  422483:	pusha  
  422484:	fwait
  422485:	mov    esi,0xd7ffd83c
  42248a:	adc    edi,DWORD PTR [esi-0x33]
  42248d:	cmc    
  42248e:	xchg   edi,eax
  42248f:	mov    ch,0x67
  422491:	push   ecx
  422492:	cmp    al,0x5a
  422494:	cmp    DWORD PTR [eax+eiz*4-0x50],edx
  422498:	retf   
  422499:	jnp    0x42250b
  42249b:	bound  eax,QWORD PTR [ecx]
  42249d:	and    eax,DWORD PTR [ebx+0x3196bb58]
  4224a3:	test   DWORD PTR [ebx],0x465fdd1f
  4224a9:	stos   DWORD PTR es:[edi],eax
  4224aa:	sahf   
  4224ab:	out    dx,eax
  4224ac:	aam    0x68
  4224ae:	mov    ds:0x177b22ec,eax
  4224b3:	mov    bh,BYTE PTR [eax]
  4224b5:	mov    ah,0xfa
  4224b7:	mov    ds:0xaf08404c,al
  4224bc:	pushf  
  4224bd:	pop    ds
  4224be:	mov    WORD PTR [eax+0x36],ds
  4224c1:	pushf  
  4224c2:	aas    
  4224c3:	shr    dl,0x71
  4224c6:	ss pop ss
  4224c8:	mov    ah,0xc9
  4224ca:	mov    ah,0x5d
  4224cc:	sbb    esi,esi
  4224ce:	sub    ebx,DWORD PTR [ecx-0x70]
  4224d1:	mov    eax,ds:0xccb9ee60
  4224d6:	loopne 0x42245d
  4224d8:	mov    WORD PTR [ebp+0x14],?
  4224db:	mov    bl,0xab
  4224dd:	mov    al,ds:0xfe5cde64
  4224e2:	inc    ecx
  4224e3:	repnz dec edi
  4224e5:	enter  0xd73b,0xf2
  4224e9:	jae    0x42255b
  4224eb:	dec    ebp
  4224ec:	jmp    0xc5bb:0x125ff482
  4224f3:	icebp  
  4224f4:	adc    DWORD PTR [eax],0x61c6fff2
  4224fa:	pusha  
  4224fb:	ret    
  4224fc:	push   eax
  4224fd:	inc    edx
  4224fe:	or     DWORD PTR [ebp+0x1beb12d2],0xfed0c2ed
  422508:	sbb    edi,edx
  42250a:	cmc    
  42250b:	and    cl,BYTE PTR [eax-0x5a83cba0]
  422511:	mov    ch,0x65
  422513:	adc    BYTE PTR [edx],0xdc
  422516:	xchg   DWORD PTR fs:[ebx-0x78],esp
  42251a:	ss out dx,eax
  42251c:	jmp    0x406d0653
  422521:	std    
  422522:	aam    0xac
  422524:	int3   
  422525:	cmc    
  422526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422527:	inc    ecx
  422528:	in     eax,0x4c
  42252a:	and    al,0x66
  42252c:	mov    edi,0x9780aae1
  422531:	sub    eax,0xeb15f104
  422536:	pop    esp
  422537:	pop    esp
  422538:	cld    
  422539:	pusha  
  42253a:	pop    edx
  42253b:	js     0x42254c
  42253d:	or     BYTE PTR [esi],dh
  42253f:	cdq    
  422540:	add    al,0x22
  422542:	xchg   DWORD PTR [ebx+0x6d7c39d7],edx
  422548:	cmc    
  422549:	call   FWORD PTR [edx-0x1d]
  42254c:	inc    esi
  42254d:	icebp  
  42254e:	sub    eax,0x42aa8a2f
  422553:	sbb    DWORD PTR [ecx],esp
  422555:	iret   
  422556:	fs cmp eax,0x5f3529b7
  42255c:	add    eax,0x650c9f30
  422561:	shr    DWORD PTR [esi-0x18639747],cl
  422567:	push   esp
  422568:	stc    
  422569:	outs   dx,BYTE PTR ds:[esi]
  42256a:	ins    DWORD PTR es:[edi],dx
  42256b:	dec    BYTE PTR [edx-0x39]
  42256e:	add    dl,BYTE PTR [ebx+0x1d9da4e7]
  422574:	xor    al,0x2e
  422576:	mov    al,0xbf
  422578:	dec    edi
  422579:	pop    ebx
  42257a:	pop    ebx
  42257b:	scas   al,BYTE PTR es:[edi]
  42257c:	jbe    0x422558
  42257e:	iret   
  42257f:	test   eax,eax
  422581:	loop   0x4225a1
  422583:	cmp    DWORD PTR [esp+ecx*8],0xffffffa3
  422587:	adc    BYTE PTR [eax+edi*8],dl
  42258a:	ins    BYTE PTR es:[edi],dx
  42258b:	push   esi
  42258c:	cs sti 
  42258e:	inc    esi
  42258f:	pop    ecx
  422590:	leave  
  422591:	pusha  
  422592:	shr    dh,1
  422594:	pop    eax
  422595:	hlt    
  422596:	mov    cl,0x3a
  422598:	push   ss
  422599:	push   ss
  42259a:	mov    edi,0x763e834e
  42259f:	loope  0x4225ca
  4225a1:	push   edx
  4225a2:	push   0xcac951b7
  4225a7:	or     ch,cl
  4225a9:	retf   
  4225aa:	hlt    
  4225ab:	pop    ebx
  4225ac:	mov    bh,0x6f
  4225ae:	push   ecx
  4225af:	push   es
  4225b0:	mov    esp,0x7040aa40
  4225b5:	inc    edx
  4225b6:	sbb    al,0x42
  4225b8:	arpl   dx,si
  4225ba:	sti    
  4225bb:	popf   
  4225bc:	sub    DWORD PTR [eax+0x146f3d67],esp
  4225c2:	fcom   QWORD PTR [esi+0x2b9d97b4]
  4225c8:	aaa    
  4225c9:	jno    0x4225fe
  4225cb:	adc    eax,0xea4c1ade
  4225d0:	ss cwde 
  4225d2:	push   0x1c
  4225d4:	sti    
  4225d5:	mov    dh,0x42
  4225d7:	repnz test BYTE PTR [ebp-0x67],0xcd
  4225dc:	inc    eax
  4225dd:	(bad)  [eax+0x4aa04a7f]
  4225e3:	inc    edx
  4225e4:	pop    esi
  4225e5:	add    esp,ebp
  4225e7:	jmp    0x4225a6
  4225e9:	xchg   DWORD PTR [edx],esi
  4225eb:	pop    edi
  4225ec:	mov    bl,BYTE PTR [eax+0x585b8483]
  4225f2:	sbb    BYTE PTR [esi],0xa6
  4225f5:	pop    ebp
  4225f6:	fucomip st,st(6)
  4225f8:	push   ecx
  4225f9:	(bad)  
  4225fa:	stos   BYTE PTR es:[edi],al
  4225fb:	dec    ecx
  4225fc:	jnp    0x422591
  4225fe:	dec    ebp
  4225ff:	lock fstp TBYTE PTR [edx]
  422602:	or     DWORD PTR [ebp+0x2a],ebx
  422605:	pop    edx
  422606:	setns  BYTE PTR [edx-0x7b]
  42260a:	cmp    ah,BYTE PTR [esi]
  42260c:	aaa    
  42260d:	mov    ebx,0x8ade1b8b
  422612:	aam    0x4e
  422614:	mov    WORD PTR [ecx-0x6694472c],fs
  42261a:	aas    
  42261b:	add    BYTE PTR [esi-0x4fd6421],dh
  422621:	inc    esi
  422622:	mov    edi,0x5e25f0ff
  422627:	and    eax,0xcad025aa
  42262c:	daa    
  42262d:	mov    eax,ds:0x2870001
  422632:	add    BYTE PTR [eax],al
  422634:	int3   
  422635:	fdiv   st,st(2)
  422637:	das    
  422638:	fs mov ebp,0xe4015cc0
  42263e:	call   FWORD PTR [esi-0x5bf3274c]
  422644:	das    
  422645:	shl    BYTE PTR [ecx+0x37],0xad
  422649:	dec    edx
  42264a:	int    0x40
  42264c:	int3   
  42264d:	xchg   edi,eax
  42264e:	outs   dx,BYTE PTR ds:[esi]
  42264f:	loop   0x422699
  422651:	fs mov bl,dl
  422654:	or     eax,0x66fcc573
  422659:	loop   0x4226da
  42265b:	iret   
  42265c:	sar    BYTE PTR [ecx+0x4a],0x71
  422660:	sbb    eax,0xfc0bcacc
  422665:	pushf  
  422666:	lds    esi,FWORD PTR ds:0x5a9c330c
  42266c:	arpl   WORD PTR [eax],ax
  42266e:	sbb    DWORD PTR [edx],edi
  422670:	adc    BYTE PTR [ecx-0x1c249712],ch
  422676:	pushf  
  422677:	push   0xffffffdb
  422679:	xor    al,0x28
  42267b:	aam    0x5d
  42267d:	lods   eax,DWORD PTR ds:[esi]
  42267e:	std    
  42267f:	arpl   WORD PTR [ecx],si
  422681:	jg     0x422633
  422683:	cmp    edi,DWORD PTR [ecx]
  422685:	push   esi
  422686:	cs inc ecx
  422688:	sub    dl,BYTE PTR [ebx]
  42268a:	in     eax,dx
  42268b:	in     eax,0x52
  42268d:	xor    bl,bl
  42268f:	mov    bl,0xa0
  422691:	pop    ss
  422692:	movq   mm4,mm5
  422695:	lock aam 0x5
  422698:	int3   
  422699:	pop    ebp
  42269a:	fmul   st(0),st
  42269c:	iret   
  42269d:	jmp    0x2fb1:0x251a4a9a
  4226a4:	shr    ebx,0xaa
  4226a7:	inc    ecx
  4226a8:	loop   0x42263a
  4226aa:	dec    esp
  4226ab:	rcr    DWORD PTR [edi+eax*1-0x1016f301],cl
  4226b2:	or     eax,0xad0bcbb
  4226b7:	sub    bl,BYTE PTR ds:0x56cc75d2
  4226bd:	shl    dl,cl
  4226bf:	cmc    
  4226c0:	adc    BYTE PTR [eax-0x50f0b14d],cl
  4226c6:	not    DWORD PTR [ecx-0x75]
  4226c9:	pusha  
  4226ca:	cmp    ebp,DWORD PTR [esi-0x50845e16]
  4226d0:	push   esi
  4226d1:	shl    BYTE PTR [esp+eiz*2],0x36
  4226d5:	pop    eax
  4226d6:	clc    
  4226d7:	ins    BYTE PTR es:[edi],dx
  4226d8:	mov    bl,0x4d
  4226da:	cmp    cl,dh
  4226dc:	dec    esi
  4226dd:	lods   eax,DWORD PTR ds:[esi]
  4226de:	scas   al,BYTE PTR es:[edi]
  4226df:	jnp    0x4226c6
  4226e1:	mov    DWORD PTR [ebx-0x4286504],esi
  4226e7:	sar    DWORD PTR [ebx],0x23
  4226ea:	nop
  4226eb:	sbb    ecx,DWORD PTR [edx+0x3a]
  4226ee:	inc    edx
  4226ef:	push   ecx
  4226f0:	out    dx,al
  4226f1:	daa    
  4226f2:	inc    ebx
  4226f3:	ret    0xb3ae
  4226f6:	aad    0xb8
  4226f8:	(bad)  
  4226fa:	inc    edx
  4226fb:	pop    edx
  4226fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226fe:	fiadd  DWORD PTR [ebx+0x36838de7]
  422704:	sbb    edx,DWORD PTR [esi]
  422706:	test   al,0x7d
  422708:	fdivr  QWORD PTR [eax*8+0x7024197b]
  42270f:	fsub   QWORD PTR [edi+0x68f5ec33]
  422715:	push   ebp
  422716:	xlat   BYTE PTR ds:[ebx]
  422717:	repz aas 
  422719:	push   ss
  42271a:	pop    ebx
  42271b:	out    0x89,eax
  42271d:	sar    ebp,cl
  42271f:	aas    
  422720:	imul   ebp,DWORD PTR [ebx],0xffffffb6
  422723:	mov    eax,ds:0xfeba593d
  422728:	push   0x6aa697bc
  42272d:	mov    al,ds:0xfd39c35
  422732:	jb     0x422751
  422734:	addr16 dec ecx
  422736:	or     DWORD PTR [edx+0x76c3969d],0xd7e55e86
  422740:	jg     0x4226ca
  422742:	call   FWORD PTR [edx-0x80]
  422745:	hlt    
  422746:	out    dx,eax
  422747:	dec    esi
  422748:	mov    edx,0xc25b55fc
  42274d:	jmp    0x107c:0x1b26567b
  422754:	fimul  WORD PTR [ecx-0xd]
  422757:	lock mov edi,DWORD PTR [esi-0x7a24d324]
  42275e:	lds    edi,FWORD PTR [esi]
  422760:	pop    eax
  422761:	push   ebp
  422762:	add    DWORD PTR [edi-0x73],0xffffff94
  422766:	idiv   esp
  422768:	dec    esi
  422769:	mov    al,fs:0xb9963409
  42276f:	sbb    DWORD PTR [ebp-0xf],ecx
  422772:	leave  
  422773:	inc    eax
  422774:	mov    ah,0xd3
  422776:	(bad)  ds:0x9fce668f
  42277c:	and    ecx,esp
  42277e:	rol    BYTE PTR [ecx+0x2b19cdd0],1
  422784:	push   es
  422785:	jp     0x42277b
  422787:	loopne 0x422789
  422789:	xchg   esi,eax
  42278a:	call   0xfbe6:0x7632316f
  422791:	mov    dl,0x6f
  422793:	js     0x42272b
  422795:	mov    ecx,0xc554f3ae
  42279a:	mov    ds:0x6acb82b,al
  42279f:	cmc    
  4227a0:	jo     0x422764
  4227a2:	ror    bl,0xd3
  4227a5:	and    esi,DWORD PTR [eax-0x2c]
  4227a8:	icebp  
  4227a9:	inc    ebx
  4227aa:	shr    BYTE PTR [edx+0x576303cb],1
  4227b0:	stos   DWORD PTR es:[edi],eax
  4227b1:	arpl   ax,cx
  4227b3:	fnsave [ecx+0xc5b3b2c]
  4227b9:	pop    esp
  4227ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227bb:	and    ecx,eax
  4227bd:	jnp    0x4227dc
  4227bf:	cmp    ah,ch
  4227c1:	fwait
  4227c2:	mov    fs,WORD PTR [eax+0x6bed05b4]
  4227c8:	ja     0x4227d6
  4227ca:	test   al,0x70
  4227cc:	fld    st(5)
  4227ce:	cmp    ch,BYTE PTR [esi-0x151f220c]
  4227d4:	xchg   ebp,eax
  4227d5:	cmp    ch,dh
  4227d7:	and    bl,BYTE PTR [eax-0xd]
  4227da:	pop    ds
  4227db:	repz mov gs,ebp
  4227de:	inc    esi
  4227df:	icebp  
  4227e0:	xor    dl,BYTE PTR [eax]
  4227e2:	loopne 0x42280d
  4227e4:	push   edx
  4227e5:	sbb    ebp,DWORD PTR ds:0x69f480b9
  4227eb:	xchg   esp,eax
  4227ec:	cmp    BYTE PTR [esi-0x3b],dh
  4227ef:	out    dx,eax
  4227f0:	xchg   DWORD PTR [edi-0x7f234dfb],edi
  4227f6:	pop    ebp
  4227f7:	cmc    
  4227f8:	sti    
  4227f9:	or     eax,0x23cdb580
  4227fe:	test   eax,0xe0ce5ad0
  422803:	aas    
  422804:	pushf  
  422805:	cmp    eax,0xa842b1a
  42280a:	cmp    DWORD PTR [ebp-0x8],0x91084dc6
  422811:	daa    
  422812:	pop    es
  422813:	imul   eax,DWORD PTR [edi-0x60bfec0d],0xfffffffe
  42281a:	xor    DWORD PTR [edx],esp
  42281c:	daa    
  42281d:	xchg   BYTE PTR [edx-0x68d4a2a8],al
  422823:	std    
  422824:	mov    al,ds:0x692b6973
  422829:	ins    DWORD PTR es:[edi],dx
  42282a:	jns    0x422854
  42282c:	out    dx,al
  42282d:	inc    ecx
  42282e:	sbb    al,0xe4
  422830:	pop    es
  422831:	dec    esi
  422832:	inc    ebx
  422833:	and    bl,BYTE PTR [ebx+eax*1+0x1588faf2]
  42283a:	hlt    
  42283b:	mov    ds:0x1647eb4,eax
  422840:	ds call 0x9c4287dd
  422846:	bound  ebx,QWORD PTR [eax-0x3b]
  422849:	mov    ecx,0xc823cbc3
  42284e:	shl    BYTE PTR [ebx-0x6e],0x16
  422852:	inc    esp
  422853:	push   edx
  422854:	dec    ecx
  422855:	retf   0xa04f
  422858:	push   ds
  422859:	in     eax,dx
  42285a:	dec    esp
  42285b:	retf   0xe42d
  42285e:	jl     0x42281d
  422860:	pop    esp
  422861:	jnp    0x42287e
  422863:	loope  0x42287b
  422865:	loop   0x4228c5
  422867:	popf   
  422868:	mov    cl,bh
  42286a:	repz int 0xf7
  42286d:	pop    ecx
  42286e:	sub    al,0x77
  422870:	test   BYTE PTR [edi-0x6e],dh
  422873:	and    al,0xc1
  422875:	in     al,0xd1
  422877:	pop    esp
  422878:	and    DWORD PTR [esi+edi*4+0x5e],ecx
  42287c:	lahf   
  42287d:	xor    edi,DWORD PTR [edx+eiz*1]
  422880:	mov    BYTE PTR ds:0x20c7fca4,bh
  422886:	popa   
  422887:	retf   
  422888:	inc    ecx
  422889:	xor    BYTE PTR [edx+0x44e0958d],cl
  42288f:	test   eax,0xbc354c4
  422894:	into   
  422895:	mov    eax,0x351ea20c
  42289a:	mov    BYTE PTR [esi],ch
  42289c:	jmp    0x6575:0xb1d22959
  4228a3:	push   esi
  4228a4:	mov    ebp,DWORD PTR [esi]
  4228a6:	mov    ebx,DWORD PTR [ecx-0x6adbccb]
  4228ac:	iret   
  4228ad:	daa    
  4228ae:	stos   BYTE PTR es:[edi],al
  4228af:	jbe    0x4228d4
  4228b1:	inc    ebp
  4228b2:	add    dh,BYTE PTR [esp+ebp*8+0x6f]
  4228b6:	out    dx,eax
  4228b7:	mov    edx,0x5db2a8
  4228bc:	clc    
  4228bd:	mov    ah,0x7f
  4228bf:	cmp    eax,0xf5faff7f
  4228c4:	jle    0x4228c8
  4228c6:	xor    eax,DWORD PTR [esi+0x7e]
  4228c9:	lods   al,BYTE PTR ds:[esi]
  4228ca:	xchg   esi,eax
  4228cb:	dec    edi
  4228cc:	scas   al,BYTE PTR es:[edi]
  4228cd:	mov    ds:0x2870001,eax
  4228d2:	add    BYTE PTR [eax],al
  4228d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228d5:	dec    esi
  4228d6:	jg     0x422908
  4228d8:	(bad)  
  4228d9:	or     ebx,DWORD PTR [ebx]
  4228db:	xor    BYTE PTR [edx-0x78],0x6c
  4228df:	aaa    
  4228e0:	mov    DWORD PTR [edx+0x6],esi
  4228e3:	stos   DWORD PTR es:[edi],eax
  4228e4:	push   edx
  4228e5:	push   ebx
  4228e6:	sar    al,cl
  4228e8:	test   DWORD PTR [ecx+0x3f678ef2],ebp
  4228ee:	in     al,0x27
  4228f0:	mov    fs,WORD PTR [edx]
  4228f2:	push   ebp
  4228f3:	cmp    DWORD PTR [edi-0xa568986],0xffffff83
  4228fa:	jmp    0x422933
  4228fc:	loop   0x42289c
  4228fe:	imul   edi,DWORD PTR [edi],0xffffffc0
  422901:	mov    ecx,0x944e3821
  422906:	add    eax,0xcdfb1fb
  42290b:	and    edx,esi
  42290d:	add    dl,BYTE PTR [ebp+0x5379ec53]
  422913:	push   ebx
  422914:	jmp    0x422923
  422916:	inc    edi
  422917:	jo     0x422998
  422919:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42291a:	fisttp WORD PTR [ebp-0x1a]
  42291d:	psrld  mm1,QWORD PTR [ebx]
  422920:	inc    ecx
  422921:	int    0x11
  422923:	jmp    0x6e47:0x5eb69346
  42292a:	call   0x3b2b11d0
  42292f:	mov    esp,gs
  422931:	sub    DWORD PTR [edx+0x7d],edi
  422934:	pop    esp
  422935:	cwde   
  422936:	cli    
  422937:	popa   
  422938:	add    edx,DWORD PTR [ebx+0x158bc73a]
  42293e:	je     0x4228db
  422940:	xchg   esi,eax
  422941:	mov    esi,ebx
  422943:	dec    ebx
  422944:	out    dx,eax
  422945:	or     al,0x3c
  422947:	imul   edx,DWORD PTR [edi+edx*1],0xd638d8ea
  42294e:	pusha  
  42294f:	shl    dh,cl
  422951:	adc    eax,0xbbbfb36f
  422956:	loope  0x422931
  422958:	dec    ecx
  422959:	sub    eax,0x1848f6e6
  42295e:	es push ecx
  422960:	cmp    edi,DWORD PTR [ebx]
  422962:	xchg   ecx,eax
  422963:	dec    edx
  422964:	mov    al,0x65
  422966:	rol    BYTE PTR ds:0xb9618814,cl
  42296c:	mov    ?,ebp
  42296e:	arpl   WORD PTR [edx-0x67],cx
  422971:	movnti DWORD PTR [esp+edi*4+0x418574a1],edx
  422979:	clc    
  42297a:	lea    eax,[ecx-0x3826f384]
  422980:	mov    ds:0xc27e4831,eax
  422985:	es mov ah,0x38
  422988:	dec    edx
  422989:	add    dh,bh
  42298b:	idiv   bl
  42298d:	je     0x422953
  42298f:	into   
  422990:	cli    
  422991:	hlt    
  422992:	retf   
  422993:	(bad)  
  422994:	sub    al,0xee
  422996:	shr    BYTE PTR [ecx],cl
  422998:	ret    0x3b4f
  42299b:	sbb    eax,0x4248036b
  4229a0:	push   edi
  4229a1:	pop    eax
  4229a2:	add    eax,0xcdc2d5a5
  4229a7:	jno    0x42294b
  4229a9:	ss ret 0x5570
  4229ad:	jns    0x4229e5
  4229af:	lods   eax,DWORD PTR ds:[esi]
  4229b0:	js     0x4229f2
  4229b2:	mov    dh,0x32
  4229b4:	int    0x2c
  4229b6:	pop    es
  4229b7:	cmc    
  4229b8:	fld    DWORD PTR [ebp-0x71]
  4229bb:	xor    DWORD PTR [ebx+edx*8+0x66978521],eax
  4229c2:	sti    
  4229c3:	inc    ecx
  4229c4:	ja     0x422987
  4229c6:	popa   
  4229c7:	arpl   bx,bp
  4229c9:	ret    
  4229ca:	popf   
  4229cb:	sub    al,bl
  4229cd:	dec    esp
  4229ce:	mov    al,ds:0x303783ff
  4229d3:	rol    ebx,1
  4229d5:	popf   
  4229d6:	sbb    eax,0x418d686e
  4229db:	(bad)  
  4229dc:	rol    DWORD PTR [ebp+ebp*1+0x27],cl
  4229e0:	xlat   BYTE PTR ds:[ebx]
  4229e1:	pop    ebp
  4229e2:	add    ah,BYTE PTR [eax+0x6066c1b8]
  4229e8:	(bad)  
  4229e9:	aad    0x19
  4229eb:	in     al,0xe2
  4229ed:	inc    ecx
  4229ee:	lods   eax,DWORD PTR ds:[esi]
  4229ef:	sub    al,0x21
  4229f2:	mov    dl,0x2c
  4229f4:	cwde   
  4229f5:	pusha  
  4229f6:	inc    edi
  4229f7:	hlt    
  4229f8:	aaa    
  4229f9:	sub    BYTE PTR [esi+0x5b10dae0],ah
  4229ff:	pop    ecx
  422a00:	and    al,0xeb
  422a02:	jb     0x422984
  422a04:	cld    
  422a05:	push   eax
  422a06:	dec    DWORD PTR [ecx-0x3]
  422a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a0a:	jmp    0x240893da
  422a0f:	jae    0x4229c8
  422a11:	pop    ebx
  422a12:	dec    ecx
  422a13:	mov    ebx,0xc317a6e4
  422a18:	pusha  
  422a19:	pop    ebx
  422a1a:	xchg   ebx,eax
  422a1b:	icebp  
  422a1c:	cdq    
  422a1d:	test   eax,0x82882923
  422a22:	jmp    0x4229cc
  422a24:	dec    edi
  422a25:	adc    BYTE PTR [edi+edi*8+0x8dc1d1b],ch
  422a2c:	inc    ebx
  422a2d:	fwait
  422a2e:	cli    
  422a2f:	in     al,dx
  422a30:	lds    edx,FWORD PTR [ebx]
  422a32:	mov    bl,0xeb
  422a34:	xor    al,0x91
  422a36:	mov    ?,ecx
  422a38:	or     bl,BYTE PTR [ebx]
  422a3a:	push   es
  422a3b:	mov    eax,ds:0xc20835f1
  422a40:	add    esi,ebp
  422a42:	xchg   esp,eax
  422a43:	pop    esi
  422a44:	push   edi
  422a45:	call   0x5872:0xdd9401ab
  422a4c:	or     al,0xc6
  422a4e:	inc    esi
  422a4f:	aas    
  422a50:	jmp    0xd394d6c3
  422a55:	test   BYTE PTR [esi],cl
  422a57:	dec    esi
  422a58:	mov    eax,ds:0x57328d
  422a5d:	sar    ecx,1
  422a5f:	loop   0x422a03
  422a61:	ret    
  422a62:	xchg   DWORD PTR [edi+0x1b13a59d],ebx
  422a68:	jb     0x422a6b
  422a6a:	sub    DWORD PTR [eax+0x7b],edx
  422a6d:	sbb    ebx,DWORD PTR [edx-0x468299cd]
  422a73:	sets   BYTE PTR [eax+0x17]
  422a77:	add    eax,0x15101049
  422a7c:	pusha  
  422a7d:	xor    edi,ebp
  422a7f:	cli    
  422a80:	jl     0x422a68
  422a82:	pop    eax
  422a83:	or     al,0xb6
  422a85:	add    al,0x4a
  422a87:	iret   
  422a88:	fcmovnb st,st(3)
  422a8a:	add    BYTE PTR [edx-0x10],bh
  422a8d:	add    bh,bl
  422a8f:	xchg   ebx,eax
  422a90:	cmc    
  422a91:	mov    dh,0x5b
  422a93:	push   ds
  422a94:	or     eax,0xf952bd90
  422a99:	jle    0x422af7
  422a9b:	dec    eax
  422a9c:	push   es
  422a9d:	mov    al,bl
  422a9f:	aaa    
  422aa0:	daa    
  422aa1:	ins    BYTE PTR es:[edi],dx
  422aa2:	mov    BYTE PTR [esi-0x4ccfa06a],bh
  422aa8:	call   0x48ab:0x1235c438
  422aaf:	xchg   edi,eax
  422ab0:	pop    edi
  422ab1:	bound  esp,QWORD PTR [ebx-0x16eb4233]
  422ab7:	lock ja 0x422a7d
  422aba:	cmp    ah,BYTE PTR [eax]
  422abc:	out    dx,al
  422abd:	add    ebp,DWORD PTR [edi-0x3c]
  422ac0:	stos   DWORD PTR es:[edi],eax
  422ac1:	push   edi
  422ac2:	fistp  QWORD PTR [ebx+0x3568b912]
  422ac8:	cmp    DWORD PTR es:[ebp+0x33db7c41],edx
  422acf:	je     0x422b26
  422ad1:	loopne 0x422a7a
  422ad3:	stc    
  422ad4:	call   0xbe17dcd
  422ad9:	daa    
  422ada:	ss add al,0x3
  422add:	cmp    DWORD PTR [edi-0x4f],ebx
  422ae0:	mov    ds:0xbf4baadc,al
  422ae5:	push   cs
  422ae6:	and    al,0x6
  422ae8:	test   BYTE PTR [ebp+0x6a7aae43],cl
  422aee:	xchg   esp,eax
  422aef:	pop    eax
  422af0:	jae    0x422a88
  422af2:	aas    
  422af3:	sub    eax,0xa02c2472
  422af8:	icebp  
  422af9:	push   esp
  422afa:	jl     0x422b26
  422afc:	sar    DWORD PTR [eax],1
  422afe:	lods   al,BYTE PTR ds:[esi]
  422aff:	push   0x268b3a35
  422b04:	sahf   
  422b05:	daa    
  422b06:	stc    
  422b07:	adc    eax,0x6fbb5ae5
  422b0c:	pop    ebp
  422b0d:	sbb    eax,0x81174175
  422b12:	ds popa 
  422b14:	test   DWORD PTR [edi+0x49],eax
  422b17:	mov    edx,0xa61596da
  422b1c:	dec    ebx
  422b1d:	ret    0xdebb
  422b20:	adc    bh,BYTE PTR [ecx+0x11]
  422b23:	jne    0x422b85
  422b25:	pop    eax
  422b26:	aam    0xd8
  422b28:	mov    ah,0x5b
  422b2a:	or     BYTE PTR [edx],bh
  422b2c:	test   ah,dh
  422b2e:	push   es
  422b2f:	xchg   edi,eax
  422b30:	inc    edi
  422b31:	pushw  0x23
  422b34:	adc    al,0xa4
  422b36:	or     al,0x52
  422b38:	(bad)  
  422b39:	sub    eax,0x3411501c
  422b3e:	mov    edx,edi
  422b40:	mov    cl,0x85
  422b42:	mov    dl,0xc6
  422b44:	jns    0x422b43
  422b46:	jecxz  0x422b0f
  422b48:	jmp    0xd528:0x6e37c9aa
  422b4f:	mov    ebp,0xb113abe9
  422b54:	mov    ah,0x87
  422b56:	leave  
  422b57:	test   dl,dh
  422b59:	rcl    DWORD PTR [ecx],1
  422b5b:	add    BYTE PTR [ecx],bh
  422b5d:	sbb    al,0x89
  422b5f:	out    0xad,eax
  422b61:	idiv   DWORD PTR [edi-0x22]
  422b64:	mov    DWORD PTR [edx+0x79],ebp
  422b67:	adc    DWORD PTR [ecx+ebx*1-0x59cad86e],0x2870001
  422b72:	add    BYTE PTR [eax],al
  422b74:	add    eax,DWORD PTR [ebp-0x33fe832]
  422b7a:	ja     0x422b4b
  422b7c:	std    
  422b7d:	rcr    BYTE PTR [ebx+0x300a36fa],cl
  422b83:	sub    DWORD PTR [ebx],0xbe715749
  422b89:	xor    bh,BYTE PTR [ebx]
  422b8b:	mov    ebp,0x389060f2
  422b90:	retf   0x54c8
  422b93:	repz (bad) 
  422b95:	clc    
  422b96:	aad    0x83
  422b98:	adc    ebp,DWORD PTR [edi+eax*2-0x14]
  422b9c:	push   ss
  422b9d:	jl     0x422b49
  422b9f:	and    eax,DWORD PTR [ecx+0x42c81283]
  422ba5:	lods   al,BYTE PTR ds:[esi]
  422ba6:	call   0x8b0:0x6518675f
  422bad:	fdivp  st(3),st
  422baf:	mov    bh,0x28
  422bb1:	cmc    
  422bb2:	push   eax
  422bb3:	daa    
  422bb4:	xchg   esp,eax
  422bb5:	sub    dl,BYTE PTR [esi]
  422bb7:	aam    0x97
  422bb9:	and    ch,BYTE PTR [edx]
  422bbb:	int3   
  422bbc:	jo     0x422c05
  422bbe:	xor    esi,DWORD PTR [edx+0x79]
  422bc1:	mov    dh,0x12
  422bc3:	xchg   edx,eax
  422bc4:	or     BYTE PTR [edx-0x303b93bb],al
  422bca:	(bad)  
  422bcb:	(bad)  
  422bcc:	cld    
  422bcd:	sahf   
  422bce:	jg     0x422c31
  422bd0:	mov    esp,0x171cef
  422bd5:	push   esp
  422bd6:	pusha  
  422bd7:	int3   
  422bd8:	push   ds
  422bd9:	mov    ds:0x440b3681,eax
  422bde:	aaa    
  422bdf:	push   edx
  422be0:	out    0xd,al
  422be2:	test   BYTE PTR [ecx-0x4f5ba3b4],al
  422be8:	xor    ebx,DWORD PTR [ebx-0x19]
  422beb:	in     al,dx
  422bec:	jmp    0x299c:0xd45260dd
  422bf3:	hlt    
  422bf4:	mov    eax,ds:0xedebf22
  422bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bfa:	call   0x950a:0xbd5df00f
  422c01:	dec    eax
  422c02:	sub    ch,BYTE PTR [ecx+ebp*1-0x58]
  422c06:	mov    ebx,0x544b014d
  422c0b:	(bad)  
  422c0c:	loope  0x422c5c
  422c0e:	cmc    
  422c0f:	pop    esi
  422c10:	retf   
  422c11:	jmp    0xab5d0780
  422c16:	inc    ebp
  422c17:	and    eax,edi
  422c19:	popa   
  422c1a:	jns    0x422baf
  422c1c:	xchg   esp,eax
  422c1d:	xchg   edx,eax
  422c1e:	in     al,dx
  422c1f:	enter  0x2278,0xd3
  422c23:	push   0x7a
  422c25:	jge    0x422c71
  422c27:	addr16 js 0x422c12
  422c2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c2b:	cs in  eax,0x89
  422c2e:	mov    ?,esi
  422c30:	rol    DWORD PTR [ebp+eiz*8-0x1],0x13
  422c35:	jmp    0x25fa:0x45759f0a
  422c3c:	int    0x2e
  422c3e:	shl    BYTE PTR [ecx],1
  422c40:	cmp    eax,0x75aadd6a
  422c45:	repz jne 0x422c04
  422c48:	out    0xcf,eax
  422c4a:	(bad)  
  422c4b:	aam    0x2
  422c4d:	fcmovnbe st,st(5)
  422c4f:	repnz xchg esp,eax
  422c51:	iret   
  422c52:	jg     0x422cb0
  422c54:	loop   0x422cca
  422c56:	jp     0x422c1a
  422c58:	out    0x62,al
  422c5a:	je     0x422c48
  422c5c:	jb     0x422bf9
  422c5e:	ret    
  422c5f:	fcomp  QWORD PTR [esp+eiz*4+0x7bba3f9a]
  422c66:	dec    edi
  422c67:	aam    0x78
  422c69:	test   DWORD PTR [ebx+0x20],esp
  422c6c:	mov    ch,0xa4
  422c6e:	pop    ebx
  422c6f:	fdivr  DWORD PTR ds:0xcf86b3de
  422c75:	pop    es
  422c76:	pop    edx
  422c77:	xchg   edi,eax
  422c78:	fsubr  st,st(7)
  422c7a:	aam    0x23
  422c7c:	xchg   dl,dl
  422c7e:	dec    ecx
  422c7f:	jnp    0x422cbe
  422c81:	test   BYTE PTR [esi+ecx*8+0x5292938c],ch
  422c88:	lods   eax,DWORD PTR ds:[esi]
  422c89:	test   BYTE PTR [ebx+0x6a37d98e],al
  422c8f:	outs   dx,DWORD PTR ds:[esi]
  422c90:	loop   0x422d0c
  422c92:	add    DWORD PTR [ebp-0x76],ebp
  422c95:	nop
  422c96:	jecxz  0x422cdf
  422c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c99:	cdq    
  422c9a:	mov    edx,0x821f6bc2
  422c9f:	xchg   ebx,eax
  422ca0:	xchg   ecx,eax
  422ca1:	lods   al,BYTE PTR ds:[esi]
  422ca2:	arpl   si,di
  422ca4:	ret    
  422ca5:	jecxz  0x422cf6
  422ca7:	adc    DWORD PTR [ebx],ebp
  422ca9:	dec    ebx
  422caa:	push   0x58
  422cac:	fimul  WORD PTR ds:0x30a5a961
  422cb2:	in     al,dx
  422cb3:	dec    esp
  422cb4:	pop    es
  422cb5:	sub    esi,DWORD PTR [ecx-0xa]
  422cb8:	dec    ecx
  422cb9:	sub    ebp,esp
  422cbb:	test   DWORD PTR [eax-0x6a],ebx
  422cbe:	sub    al,0x43
  422cc0:	mov    WORD PTR [eax],gs
  422cc2:	mov    eax,ds:0x349a2aa1
  422cc7:	(bad)  
  422cc8:	lds    esi,FWORD PTR ds:0x7ce25bd2
  422cce:	sar    DWORD PTR [edi+0x29],1
  422cd1:	push   ebp
  422cd2:	data16 loopne 0x422d2b
  422cd5:	mov    ch,0xd8
  422cd7:	jnp    0x422d3c
  422cd9:	cli    
  422cda:	pop    es
  422cdb:	xor    al,0x6d
  422cdd:	clc    
  422cde:	icebp  
  422cdf:	jecxz  0x422cc8
  422ce1:	dec    ebx
  422ce2:	test   BYTE PTR [ebx],0x37
  422ce5:	repz fdivr st,st(6)
  422ce8:	mov    BYTE PTR [eax-0x53f27ca5],dl
  422cee:	xor    edx,ebp
  422cf0:	scas   eax,DWORD PTR es:[edi]
  422cf1:	push   es
  422cf2:	ja     0x422cad
  422cf4:	daa    
  422cf5:	push   es
  422cf6:	aaa    
  422cf7:	xchg   DWORD PTR [ebx+0x2c8cc9b8],edi
  422cfd:	mov    edx,0x7c460b86
  422d02:	adc    eax,0xf055beec
  422d07:	push   0x29201bc6
  422d0c:	(bad)  
  422d0d:	icebp  
  422d0e:	mov    edx,0xac50b136
  422d13:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422d15:	cmp    BYTE PTR [ebx],ch
  422d17:	rol    BYTE PTR [edx],0x9c
  422d1a:	xchg   DWORD PTR ds:0xb860a75d,ebx
  422d20:	test   eax,0x4c42a132
  422d25:	mov    BYTE PTR [edx+0xe613d1b],cl
  422d2b:	clc    
  422d2c:	add    edi,eax
  422d2e:	jl     0x422d46
  422d30:	test   al,0x1d
  422d32:	inc    esi
  422d33:	cmc    
  422d34:	stos   DWORD PTR es:[edi],eax
  422d35:	arpl   WORD PTR gs:[edi-0x56],bx
  422d39:	sbb    ah,ah
  422d3b:	jg     0x422ccd
  422d3d:	or     DWORD PTR [edi],eax
  422d3f:	xchg   esi,eax
  422d40:	pop    ebp
  422d41:	cli    
  422d42:	mov    ds:0x3685c05d,eax
  422d47:	call   0xc74e:0x4f89ea03
  422d4e:	pop    ebx
  422d4f:	jg     0x422cf9
  422d51:	ins    DWORD PTR es:[edi],dx
  422d52:	push   0x476266c1
  422d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d58:	or     eax,0xfe1a6f32
  422d5d:	sub    edi,DWORD PTR [esi-0x39]
  422d60:	pushf  
  422d61:	scas   eax,DWORD PTR es:[edi]
  422d62:	xor    al,0xd8
  422d64:	arpl   dx,bp
  422d66:	cmp    BYTE PTR ds:0x5f152e6,ch
  422d6c:	push   cs
  422d6d:	test   esp,ecx
  422d6f:	scas   al,BYTE PTR es:[edi]
  422d70:	pop    ebx
  422d71:	mov    WORD PTR [ebp-0x16],ds
  422d74:	inc    esi
  422d75:	add    esi,DWORD PTR [edx+0x5afb6538]
  422d7b:	gs (bad) 
  422d7d:	cmp    bh,ah
  422d7f:	xchg   esi,eax
  422d80:	je     0x422dbe
  422d82:	pop    ecx
  422d83:	inc    eax
  422d84:	call   0xd37c4dc4
  422d89:	addr16 jmp 0xefe8:0xccfe43b
  422d91:	push   ebx
  422d92:	cmp    edi,DWORD PTR [ebx+0x64481ca2]
  422d98:	jmp    DWORD PTR [esi+0x6af4fe13]
  422d9e:	sub    eax,0x999647ca
  422da3:	lds    eax,FWORD PTR [ebx+ebx*1+0x4195bc8c]
  422daa:	and    eax,0xabeac03d
  422daf:	rcl    BYTE PTR [ebp-0x73],0x45
  422db3:	scas   al,BYTE PTR es:[edi]
  422db4:	mov    dh,0xfe
  422db6:	pop    edx
  422db7:	dec    ebp
  422db8:	int3   
  422db9:	ret    
  422dba:	sub    DWORD PTR [edx],ebp
  422dbc:	adc    DWORD PTR [esi],esp
  422dbe:	or     BYTE PTR [ebp-0x27d5db05],bh
  422dc4:	fiadd  WORD PTR [ecx]
  422dc6:	sub    BYTE PTR [ebx-0x37],bl
  422dc9:	daa    
  422dca:	jle    0x422db7
  422dcc:	(bad)  
  422dcd:	sub    eax,0x5fc94550
  422dd2:	inc    edx
  422dd3:	jecxz  0x422e3c
  422dd5:	cld    
  422dd6:	arpl   bx,si
  422dd8:	in     eax,dx
  422dd9:	test   BYTE PTR [ebx-0x66cd0790],bl
  422ddf:	jns    0x422df4
  422de1:	jle    0x422e08
  422de3:	dec    esp
  422de4:	xchg   edx,eax
  422de5:	iret   
  422de6:	sbb    BYTE PTR [ebx-0x2f],bl
  422de9:	test   eax,0x483920ab
  422dee:	aaa    
  422def:	aad    0xf8
  422df1:	sbb    DWORD PTR [ebp-0x5a],eax
  422df4:	push   ss
  422df5:	mov    bh,0x82
  422df7:	add    edx,DWORD PTR [edi-0x50]
  422dfa:	rol    DWORD PTR [eax],0x65
  422dfd:	mov    ah,0x18
  422dff:	fcompp 
  422e01:	(bad)  
  422e02:	out    0xbf,eax
  422e04:	gs mov ah,0x46
  422e07:	imul   BYTE PTR [ebp+0x74]
  422e0a:	lods   eax,DWORD PTR ds:[esi]
  422e0b:	loope  0x422dc9
  422e0d:	test   al,0x1
  422e0f:	add    BYTE PTR [edi+0x1e000002],al
  422e15:	or     bh,0xf1
  422e18:	xor    al,0x8c
  422e1a:	pop    eax
  422e1b:	sub    ecx,DWORD PTR [edi+0x7bad4bc0]
  422e21:	pop    eax
  422e22:	repnz int3 
  422e24:	sbb    ch,0x45
  422e27:	pop    edi
  422e28:	(bad)  
  422e2a:	cwde   
  422e2b:	arpl   bx,dx
  422e2d:	mov    esi,0x5ff64c25
  422e32:	adc    al,BYTE PTR [edi-0x63]
  422e35:	xor    dl,BYTE PTR [edx-0x51]
  422e38:	mov    es,WORD PTR [ecx]
  422e3a:	je     0x38b1d5a8
  422e40:	daa    
  422e41:	imul   ecx,DWORD PTR [eax+0x401ca5ac],0xffffffe5
  422e48:	das    
  422e49:	mov    ebp,0x6e7a9f61
  422e4e:	cmp    al,0xf2
  422e50:	mov    cl,0x5d
  422e52:	mov    dl,0xe8
  422e54:	fnstcw WORD PTR [esi]
  422e56:	mov    edi,0xf0ee30fe
  422e5b:	not    BYTE PTR [ebp-0x62]
  422e5e:	adc    ecx,ecx
  422e60:	test   eax,0xe69c13f3
  422e65:	push   edi
  422e66:	stos   DWORD PTR es:[edi],eax
  422e67:	sub    al,0x86
  422e69:	(bad)  
  422e6a:	pop    esp
  422e6b:	arpl   WORD PTR [eax+eiz*2-0x3780f9a1],bp
  422e72:	enter  0x1abf,0xec
  422e76:	push   es
  422e77:	aas    
  422e78:	ret    
  422e79:	aad    0x10
  422e7b:	push   cs
  422e7c:	add    al,0x57
  422e7e:	shl    DWORD PTR [ebx],0xc3
  422e81:	and    DWORD PTR [ecx+0x44],esi
  422e84:	rcr    BYTE PTR [eax-0x6c],cl
  422e87:	jp     0x422e23
  422e89:	fimul  WORD PTR [eax-0x77d965a3]
  422e8f:	lds    ebx,FWORD PTR [ecx+0x5c3d5cde]
  422e95:	call   0x7c308140
  422e9a:	cli    
  422e9b:	js     0x422eef
  422e9d:	inc    ebx
  422e9e:	jo     0x422eb9
  422ea0:	mov    al,0xd
  422ea2:	inc    ebp
  422ea3:	std    
  422ea4:	popf   
  422ea5:	mov    esi,0x24b42410
  422eaa:	pushf  
  422eab:	or     cl,BYTE PTR [edi]
  422ead:	xchg   edx,eax
  422eae:	sti    
  422eaf:	push   0xe44b5dbd
  422eb4:	pop    ecx
  422eb5:	addr16 push esp
  422eb7:	sub    dl,BYTE PTR [edx+ebp*2+0x406547a0]
  422ebe:	add    DWORD PTR [edx-0x1f],ecx
  422ec1:	sub    ecx,DWORD PTR fs:[eax]
  422ec4:	aam    0x18
  422ec6:	jl     0x422ec9
  422ec8:	inc    edi
  422ec9:	cmp    edi,DWORD PTR [esi+0x5a]
  422ecc:	jo     0x422f30
  422ece:	pop    edi
  422ecf:	or     bl,cl
  422ed1:	leave  
  422ed2:	pop    edx
  422ed3:	push   edi
  422ed4:	jne    0x422ea8
  422ed6:	popa   
  422ed7:	push   ebp
  422ed8:	adc    eax,0x4ed8d4d2
  422edd:	xchg   ebp,eax
  422ede:	inc    esi
  422edf:	mov    ebp,0x4044e5d4
  422ee4:	leave  
  422ee5:	push   cs
  422ee6:	hlt    
  422ee7:	pop    edx
  422ee8:	icebp  
  422ee9:	fmulp  st(2),st
  422eeb:	dec    eax
  422eec:	out    dx,eax
  422eed:	jne    0x422ef7
  422eef:	(bad)  
  422ef0:	push   0x2c36e5ea
  422ef5:	mov    ecx,0x8ea7dba8
  422efa:	mov    al,ds:0x737aa6b1
  422eff:	(bad)  
  422f00:	test   eax,0xbb8d6cd1
  422f05:	in     eax,0xad
  422f07:	leave  
  422f08:	mov    ebx,0x9a8d545b
  422f0d:	retf   
  422f0e:	push   0x26
  422f10:	xor    edx,DWORD PTR ds:0x1b5d0d41
  422f16:	jno    0x422e9e
  422f18:	in     eax,0xf2
  422f1a:	rcl    DWORD PTR [esi-0x433804fc],0xfa
  422f21:	jnp    0x422f62
  422f23:	rcr    DWORD PTR [edx+eax*4+0x726717dd],cl
  422f2a:	push   ebx
  422f2b:	(bad)  
  422f2c:	or     al,0x15
  422f2e:	inc    eax
  422f2f:	inc    ebp
  422f30:	jle    0x422edf
  422f32:	and    bh,dh
  422f34:	and    eax,0x8eda0cc7
  422f39:	int3   
  422f3a:	jg     0x422ed6
  422f3c:	enter  0x5e25,0x60
  422f40:	dec    esp
  422f41:	or     DWORD PTR [edx-0x18],eax
  422f44:	push   cs
  422f45:	dec    ebp
  422f46:	push   esi
  422f47:	imul   eax,DWORD PTR [ecx],0xb112b3da
  422f4d:	(bad)  
  422f4e:	mov    eax,0x4e69f2c2
  422f53:	cs ja  0x422f67
  422f56:	xor    BYTE PTR [ecx+0x44],al
  422f59:	cmp    eax,0x8d0c8cc9
  422f5e:	mov    esp,DWORD PTR [eax]
  422f60:	inc    ecx
  422f61:	stos   BYTE PTR es:[edi],al
  422f62:	stos   DWORD PTR es:[edi],eax
  422f63:	xchg   ecx,eax
  422f64:	dec    edx
  422f65:	dec    ebx
  422f66:	fiadd  DWORD PTR ds:0xd12fbcd4
  422f6c:	popa   
  422f6d:	rol    BYTE PTR [ebp+0xaea1537],cl
  422f73:	mov    ebp,0x7eed9fae
  422f78:	xor    ecx,DWORD PTR [ebx]
  422f7a:	mov    ds:0xad91cb0,al
  422f7f:	(bad)  
  422f80:	cdq    
  422f81:	add    DWORD PTR [ebx-0x2d30f6f2],esp
  422f87:	(bad)  
  422f88:	sti    
  422f89:	pop    esp
  422f8a:	pop    es
  422f8b:	xchg   ebx,eax
  422f8c:	xor    bl,bl
  422f8e:	aam    0x44
  422f90:	and    ax,0xa669
  422f94:	cmp    eax,0x5ed31559
  422f99:	or     esp,esi
  422f9b:	retf   0x2b92
  422f9e:	ins    BYTE PTR es:[edi],dx
  422f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fa0:	pop    ebp
  422fa1:	sbb    DWORD PTR [ebx-0x56e3cb12],0x3df7091e
  422fab:	xor    BYTE PTR [ecx-0x34ddfc96],al
  422fb1:	push   esi
  422fb2:	mov    ebp,0x35e16537
  422fb7:	(bad)  
  422fb8:	repnz mov es,edi
  422fbb:	mov    eax,ds:0xbaef5928
  422fc0:	dec    esi
  422fc1:	cmp    DWORD PTR [eax+ebp*1+0x55153cc2],eax
  422fc8:	rol    BYTE PTR [edx+0x6856db35],1
  422fce:	ss mov edx,gs
  422fd1:	mov    eax,ds:0x7e0397f7
  422fd6:	and    edi,DWORD PTR [esi-0x61]
  422fd9:	jns    0x422fdb
  422fdb:	lods   eax,DWORD PTR ds:[esi]
  422fdc:	rcr    bh,1
  422fde:	mov    esi,0xdd1e50a0
  422fe3:	lods   al,BYTE PTR ds:[esi]
  422fe4:	cdq    
  422fe5:	mov    al,0x20
  422fe7:	pop    ecx
  422fe8:	sbb    eax,0x477fd610
  422fed:	(bad)  
  422fef:	lds    ebp,FWORD PTR [ebx+ecx*1]
  422ff2:	inc    ebp
  422ff3:	out    dx,eax
  422ff4:	fnstcw WORD PTR [eax+0x30]
  422ff7:	push   ds
  422ff8:	sub    ch,cl
  422ffa:	jg     0x422f8f
  422ffc:	jecxz  0x423030
  422ffe:	dec    ebp
  422fff:	test   edi,esp
  423001:	nop
  423002:	dec    ebp
  423003:	xor    BYTE PTR [eax+ebp*4-0x4ec0af3a],0xa1
  42300b:	jb     0x422fbe
  42300d:	std    
  42300e:	mov    ebx,ebp
  423010:	inc    esp
  423011:	lods   eax,DWORD PTR ds:[esi]
  423012:	cmp    DWORD PTR [ebp+0x65],ebp
  423015:	inc    ecx
  423016:	(bad)  
  423017:	je     0x423024
  423019:	ins    BYTE PTR es:[edi],dx
  42301a:	xor    edx,edi
  42301c:	aam    0x4d
  42301e:	loope  0x423072
  423020:	int3   
  423021:	stos   DWORD PTR es:[edi],eax
  423022:	ret    
  423023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423024:	rcl    DWORD PTR [eax+0x1c588cc3],cl
  42302a:	enter  0xb1b0,0xb8
  42302e:	ja     0x422fc9
  423030:	scas   eax,DWORD PTR es:[edi]
  423031:	fcomp  DWORD PTR [ebx-0x7c]
  423034:	(bad)  
  423035:	pop    ecx
  423036:	in     al,dx
  423037:	call   0x794e3993
  42303c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42303d:	cmp    ecx,eax
  42303f:	fsubrp st(1),st
  423041:	stos   DWORD PTR es:[edi],eax
  423042:	inc    ebx
  423043:	sub    esi,DWORD PTR [esi]
  423045:	test   al,0xde
  423047:	cli    
  423048:	add    DWORD PTR ss:[ecx],0x6d5b7670
  42304f:	jb     0x422fee
  423051:	push   0xffffff9d
  423053:	mov    esi,0xe3b21bec
  423058:	cmp    eax,0xb3586981
  42305d:	sub    al,0x79
  42305f:	mov    BYTE PTR [ebx+0x30],bh
  423062:	jbe    0x423042
  423064:	dec    esi
  423065:	ins    BYTE PTR es:[edi],dx
  423066:	jecxz  0x4230c1
  423068:	push   0xffffffd3
  42306a:	push   ebp
  42306b:	(bad)  
  42306c:	int3   
  42306d:	ret    0xb7ad
  423070:	sub    bh,BYTE PTR [edx]
  423072:	pop    esi
  423073:	mov    ebp,0xb845c177
  423078:	push   esp
  423079:	or     BYTE PTR [ebp-0x40],bl
  42307c:	push   0xffffffe5
  42307e:	and    ecx,DWORD PTR [ebx]
  423080:	xor    DWORD PTR [eax-0x183844c6],edi
  423086:	mul    DWORD PTR [ebx-0x36]
  423089:	jecxz  0x4230b7
  42308b:	or     bh,BYTE PTR [ebx-0x67]
  42308e:	imul   ecx,esi,0x25f00211
  423094:	daa    
  423095:	mov    ebx,0x414ccf5b
  42309a:	jle    0x42309c
  42309c:	adc    bl,al
  42309e:	arpl   WORD PTR [edx-0x15],si
  4230a1:	sti    
  4230a2:	adc    edi,eax
  4230a4:	sub    edi,DWORD PTR [ebx+0x1d4488f7]
  4230aa:	mov    ecx,0x1ab43b2
  4230af:	add    BYTE PTR [edi-0x76fffffe],al
  4230b5:	push   esi
  4230b6:	push   ebx
  4230b7:	test   DWORD PTR [ecx],esp
  4230b9:	idiv   DWORD PTR [eax+0x52d70bcb]
  4230bf:	or     BYTE PTR [ebp+esi*2+0x1e],al
  4230c3:	sbb    al,0xc0
  4230c5:	test   DWORD PTR [edx],edx
  4230c7:	sbb    eax,0x84d1f180
  4230cc:	ficom  DWORD PTR ds:0x3beb0d48
  4230d2:	pop    ss
  4230d3:	aam    0x5e
  4230d5:	mov    edx,0x7c57833c
  4230da:	das    
  4230db:	pop    edx
  4230dc:	ret    
  4230dd:	cdq    
  4230de:	(bad)  
  4230df:	fidiv  DWORD PTR [edx-0xc77879f]
  4230e5:	jmp    DWORD PTR [eax+ebp*2]
  4230e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230e9:	shr    BYTE PTR [esi],cl
  4230eb:	or     eax,0x7e0ee05d
  4230f0:	fsubp  st(3),st
  4230f2:	(bad)
  4230f6:	adc    dl,al
  4230f8:	fcom   DWORD PTR [ecx*8+0x632ca5c1]
  4230ff:	jg     0x423151
  423101:	jp     0x42316a
  423103:	push   ecx
  423104:	aas    
  423105:	aad    0xa7
  423107:	mov    ds:0x7f3dca6e,eax
  42310c:	add    BYTE PTR [ebx],cl
  42310e:	mov    al,0x28
  423110:	sub    eax,0x888fa6db
  423115:	push   ss
  423116:	dec    ecx
  423117:	call   0x64cbeb7b
  42311c:	add    BYTE PTR [si+0x1fe8],0x3b
  423122:	xchg   esi,eax
  423123:	int3   
  423124:	aad    0x4e
  423126:	ret    
  423127:	pop    edi
  423128:	(bad)  
  423129:	loope  0x423165
  42312b:	addr16 pop ss
  42312d:	sbb    eax,0xb6475574
  423132:	dec    eax
  423133:	lock sbb ecx,DWORD PTR [edi-0x63]
  423137:	cli    
  423138:	leave  
  423139:	test   eax,0x5e305ca1
  42313e:	xchg   edx,eax
  42313f:	xchg   ebp,eax
  423140:	mov    ebp,0x1d977d95
  423145:	test   BYTE PTR [edi-0x1a4d731f],al
  42314b:	push   ebp
  42314c:	cmp    DWORD PTR [ecx],edx
  42314e:	les    ecx,FWORD PTR [esi]
  423150:	mov    edi,0x76fbad3f
  423155:	xor    esp,DWORD PTR [eax-0x14]
  423158:	and    eax,0x3d896b67
  42315d:	mov    ah,0xc7
  42315f:	jns    0x4230f0
  423161:	push   es
  423162:	or     edx,ebx
  423164:	cmp    eax,0x509f60dc
  423169:	cmp    edi,DWORD PTR [ebx-0x80]
  42316c:	fld    QWORD PTR [edx-0x53]
  42316f:	addr16 push edi
  423171:	and    dh,BYTE PTR [eax]
  423173:	sub    al,0x39
  423175:	push   edx
  423176:	inc    ebx
  423177:	mov    cl,0x95
  423179:	pushf  
  42317a:	das    
  42317b:	clc    
  42317c:	leave  
  42317d:	jecxz  0x4231ba
  42317f:	fsub   DWORD PTR [ebx-0x1a]
  423182:	push   ecx
  423183:	mov    esp,0xed57a1af
  423188:	sub    DWORD PTR [ebx],ebp
  42318a:	test   DWORD PTR [esp+edx*4+0x72],0xc18ae6f
  423192:	fimul  DWORD PTR [edi+ebp*8+0x19f9df97]
  423199:	push   ebx
  42319a:	fisttp QWORD PTR [ebx]
  42319c:	jno    0x423177
  42319e:	cmp    ch,cl
  4231a0:	cmc    
  4231a1:	dec    edx
  4231a2:	jle    0x423168
  4231a4:	lods   al,BYTE PTR ds:[esi]
  4231a5:	pop    ds
  4231a6:	xor    al,BYTE PTR [ebp+0x68ebc978]
  4231ac:	pushf  
  4231ad:	adc    al,0xf3
  4231af:	dec    ebx
  4231b0:	bound  ebx,QWORD PTR [ecx+0x6a]
  4231b3:	data16 jne 0x423182
  4231b6:	cmp    dh,0x5e
  4231b9:	inc    esp
  4231ba:	sahf   
  4231bb:	push   esi
  4231bc:	les    eax,FWORD PTR [edi+ebp*1]
  4231bf:	mov    ecx,0xe757f8b8
  4231c4:	sub    eax,0xea141b88
  4231c9:	data16 sahf 
  4231cb:	pop    ds
  4231cc:	xchg   bx,ax
  4231ce:	test   eax,0x7e91f26e
  4231d3:	das    
  4231d4:	rcl    ecx,cl
  4231d6:	adc    BYTE PTR [ecx],ch
  4231d8:	retf   
  4231d9:	cld    
  4231da:	pushf  
  4231db:	adc    ch,dl
  4231dd:	or     ch,BYTE PTR [esi+0x30f82877]
  4231e3:	loopne 0x4231c1
  4231e5:	inc    edx
  4231e6:	pop    eax
  4231e7:	and    DWORD PTR [ecx+ecx*4],eax
  4231ea:	leave  
  4231eb:	mov    al,ds:0x32ef4994
  4231f0:	mov    ch,0x9b
  4231f2:	pop    ss
  4231f3:	neg    BYTE PTR [edi]
  4231f5:	jae    0x4231cb
  4231f7:	adc    esp,DWORD PTR [ecx+0x218eeae3]
  4231fd:	pop    esi
  4231fe:	add    ebx,eax
  423200:	fwait
  423201:	mov    edx,0xb46d6352
  423206:	loop   0x4231db
  423208:	push   eax
  423209:	pusha  
  42320a:	cmp    DWORD PTR [ecx+0x72934fbb],edx
  423210:	inc    eax
  423211:	es xchg ebp,eax
  423213:	sub    eax,0x71ebb6c3
  423218:	xor    edx,DWORD PTR [esi+0x65]
  42321b:	push   cs
  42321c:	pop    ss
  42321d:	sbb    al,BYTE PTR [edx+0x23]
  423220:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  423222:	jno    0x423227
  423224:	lahf   
  423225:	leave  
  423226:	inc    ebp
  423227:	test   eax,0xbdb1dbed
  42322c:	push   edi
  42322d:	and    BYTE PTR [ebp+ebp*2+0x1d],0x82
  423232:	or     cl,BYTE PTR [eax-0x7ab4b449]
  423238:	add    DWORD PTR [eax-0x77],ecx
  42323b:	inc    ebx
  42323c:	xor    al,al
  42323e:	mov    dh,0x6b
  423240:	push   cs
  423241:	jb     0x42323d
  423243:	sbb    ebx,DWORD PTR [edx]
  423245:	ja     0x4232a3
  423247:	jno    0x423291
  423249:	adc    eax,DWORD PTR [ecx]
  42324b:	mov    ebp,0xb952ee61
  423250:	cmp    al,0x4c
  423252:	jle    0x423259
  423254:	inc    eax
  423255:	push   edi
  423256:	xor    edi,ebx
  423258:	ja     0x42324f
  42325a:	fild   QWORD PTR ds:0x8d11faad
  423260:	ds test ch,dl
  423263:	adc    esp,ebp
  423265:	out    dx,al
  423266:	pop    ss
  423267:	adc    bh,BYTE PTR [ebx-0x583a8e99]
  42326d:	(bad)  
  42326e:	add    al,0xd
  423270:	(bad)  [ebx-0x6e9fb379]
  423276:	and    cl,BYTE PTR [ebx+eax*1-0x58]
  42327a:	sahf   
  42327b:	in     eax,0x8e
  42327d:	dec    esp
  42327e:	and    eax,0x900d4cd9
  423283:	dec    ecx
  423284:	mov    ds:0x72e8e668,al
  423289:	ins    BYTE PTR es:[edi],dx
  42328a:	dec    ecx
  42328b:	out    dx,al
  42328c:	adc    dh,BYTE PTR [ebx-0x79]
  42328f:	sbb    BYTE PTR [ebx],bh
  423291:	mov    cl,0xce
  423293:	arpl   bx,dx
  423295:	or     eax,0xd8632240
  42329a:	or     edi,edx
  42329c:	outs   dx,BYTE PTR ds:[esi]
  42329d:	mov    BYTE PTR [edx-0x2a5c50ee],ch
  4232a3:	push   DWORD PTR es:[ebp+0x2fae9696]
  4232aa:	popa   
  4232ab:	xchg   ebp,eax
  4232ac:	mov    BYTE PTR [edi-0x1971d561],0xbf
  4232b3:	(bad)  
  4232b4:	rcl    DWORD PTR [ebp+eax*1-0x648b6bcf],1
  4232bb:	dec    ebp
  4232bc:	call   0x3e87:0x7c144680
  4232c3:	add    esi,edx
  4232c5:	mov    BYTE PTR [ebx+0x3dd614ea],ah
  4232cb:	sbb    dl,0xaf
  4232ce:	sub    bl,dl
  4232d0:	sub    al,0xd
  4232d2:	mov    ch,0x45
  4232d4:	mov    es,WORD PTR [esi-0x329e6de8]
  4232da:	xchg   ebp,eax
  4232db:	(bad)
  4232de:	pop    ecx
  4232df:	rol    BYTE PTR [ebx],0xcd
  4232e2:	pop    edx
  4232e3:	jnp    0x42331b
  4232e5:	sub    esi,esi
  4232e7:	iret   
  4232e8:	inc    eax
  4232e9:	imul   ebx,DWORD PTR [eax],0xffffffb5
  4232ec:	pop    eax
  4232ed:	fs and eax,0x3119de62
  4232f3:	mov    al,0x2a
  4232f5:	jp     0x4232a1
  4232f7:	push   ebp
  4232f8:	inc    ecx
  4232f9:	jae    0x4232d5
  4232fb:	ja     0x423345
  4232fd:	sbb    eax,0x109615c3
  423302:	xor    al,0xc8
  423304:	and    ah,dl
  423306:	inc    ebp
  423307:	retf   
  423308:	sub    al,0x54
  42330a:	mov    al,ds:0x88d721c2
  42330f:	inc    edi
  423310:	test   al,0xcd
  423312:	out    dx,eax
  423313:	mov    ecx,0x58553cd6
  423318:	sbb    DWORD PTR [ecx+0x6d],ebx
  42331b:	mov    bh,0xee
  42331d:	inc    esi
  42331e:	stos   DWORD PTR es:[edi],eax
  42331f:	jle    0x423319
  423321:	jecxz  0x42332f
  423323:	sub    al,0x3f
  423325:	dec    esi
  423326:	push   ecx
  423327:	jns    0x423338
  423329:	les    edi,FWORD PTR [eax-0x5f7f7c56]
  42332f:	push   esp
  423330:	push   edi
  423331:	hlt    
  423332:	(bad)  
  423333:	repnz test BYTE PTR [eax+0x4fea0ee7],al
  42333a:	add    DWORD PTR [eax],0x3f88200e
  423340:	scas   al,BYTE PTR es:[edi]
  423341:	mov    edi,0xbd9331bf
  423346:	mov    DWORD PTR [edx-0x39930382],edx
  42334c:	retf   0x1ad
  42334f:	add    BYTE PTR [edi+0x54000002],al
  423355:	arpl   WORD PTR [esi+0x47624abb],sp
  42335b:	adc    eax,0x52fce1fb
  423360:	push   ebx
  423361:	xchg   ecx,eax
  423362:	arpl   sp,di
  423364:	lock cld 
  423366:	pusha  
  423367:	xchg   ebx,eax
  423368:	mov    dh,0x47
  42336a:	mov    ds:0xce9909dd,eax
  42336f:	sub    al,0x95
  423371:	imul   esi,DWORD PTR [ecx+esi*8],0x21
  423375:	pop    edx
  423376:	imul   ecx,DWORD PTR [ecx+0x3d],0xffffffcd
  42337a:	mov    ecx,DWORD PTR [edi]
  42337c:	mov    esp,0x2a20e82b
  423381:	xchg   edx,eax
  423382:	rcr    DWORD PTR [ecx+0x44],0xb1
  423386:	jge    0x4233c0
  423388:	daa    
  423389:	pop    eax
  42338a:	(bad)  
  42338c:	xchg   esp,eax
  42338d:	dec    ecx
  42338e:	add    DWORD PTR [eax],esi
  423390:	int    0x68
  423392:	scas   al,BYTE PTR es:[edi]
  423393:	mov    edi,0x3699f00a
  423398:	into   
  423399:	pop    es
  42339a:	push   ecx
  42339b:	xchg   ecx,eax
  42339c:	cmp    eax,0x2892a18c
  4233a1:	adc    esp,DWORD PTR [ecx]
  4233a3:	xchg   edi,eax
  4233a4:	jnp    0x4233a2
  4233a6:	sub    al,0xeb
  4233a8:	inc    ecx
  4233a9:	mov    ecx,0xcd0c9297
  4233ae:	cs cs sub al,0x48
  4233b2:	out    dx,al
  4233b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233b4:	int3   
  4233b5:	pop    ecx
  4233b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233b7:	or     BYTE PTR [esp+eiz*2-0x3],bh
  4233bb:	adc    cl,BYTE PTR [esi+0x6f9b382]
  4233c1:	xor    al,0xaf
  4233c3:	jno    0x423435
  4233c5:	adc    ecx,0xffffffd9
  4233c8:	mov    cs,ecx
  4233ca:	(bad)  
  4233cb:	mov    esp,0x393d6b6a
  4233d0:	dec    esp
  4233d1:	sbb    edi,DWORD PTR [ecx-0x7dbeac3]
  4233d7:	(bad)  
  4233d8:	cmp    al,0xb1
  4233da:	fistp  QWORD PTR [edi]
  4233dc:	loop   0x4233e5
  4233de:	inc    edi
  4233df:	in     eax,0x79
  4233e1:	lods   al,BYTE PTR ds:[esi]
  4233e2:	shl    DWORD PTR ds:0xde42c8f7,1
  4233e8:	dec    esp
  4233e9:	lods   eax,DWORD PTR ds:[esi]
  4233ea:	add    BYTE PTR [edi+0x4e],dh
  4233ed:	dec    ebp
  4233ee:	jno    0x4233c2
  4233f0:	lock xlat BYTE PTR ds:[ebx]
  4233f2:	sub    eax,0xca587bb
  4233f7:	mov    dl,0xa0
  4233f9:	mov    dh,0x48
  4233fb:	or     BYTE PTR [ebx+0xd],bh
  4233fe:	push   eax
  4233ff:	in     al,0x46
  423401:	outs   dx,BYTE PTR ds:[esi]
  423402:	gs dec esp
  423404:	inc    ebp
  423405:	mov    al,ds:0xc18b634e
  42340a:	cmp    edx,DWORD PTR [ecx-0x709c8646]
  423410:	sbb    DWORD PTR [ebp-0x169779bb],ebx
  423416:	xchg   esi,eax
  423417:	nop
  423418:	mov    esp,0xb33c2922
  42341d:	jb     0x4233aa
  42341f:	pop    ecx
  423420:	mov    esp,0xce123975
  423425:	and    DWORD PTR [esi+0x51],esp
  423428:	ret    0xc621
  42342b:	pop    es
  42342c:	fnstcw WORD PTR ds:0x290de31
  423432:	call   0xdc0938f1
  423437:	out    0xfc,al
  423439:	(bad)  
  42343a:	imul   ecx,DWORD PTR [edi-0x6f01f844],0xffffffa6
  423441:	jbe    0x42348a
  423443:	and    BYTE PTR [ecx-0x4995790e],0xda
  42344a:	fwait
  42344b:	cmp    ebp,esi
  42344d:	mul    DWORD PTR [edi+esi*2]
  423450:	mov    bl,0x41
  423452:	outs   dx,BYTE PTR ds:[esi]
  423453:	pop    edi
  423454:	adc    eax,0x4a14d474
  423459:	jnp    0x4234a4
  42345b:	call   0xb0c5:0xfe4a1788
  423462:	je     0x42343e
  423464:	jne    0x42347c
  423466:	jp     0x423454
  423468:	stos   BYTE PTR es:[edi],al
  423469:	dec    ebx
  42346a:	mov    DWORD PTR [eax-0x65],edi
  42346d:	push   0xc82e7755
  423472:	add    eax,DWORD PTR [ebx]
  423474:	ss jl  0x4234b4
  423477:	mov    dh,0xbc
  423479:	jo     0x4234df
  42347b:	adc    ebx,ecx
  42347d:	mov    dh,0x4c
  42347f:	mov    esp,gs
  423481:	imul   edi,DWORD PTR [ebx-0x46],0x9e9298f9
  423488:	enter  0xc220,0x22
  42348c:	nop
  42348d:	ins    BYTE PTR es:[edi],dx
  42348e:	ja     0x423503
  423490:	popf   
  423491:	jo     0x423415
  423493:	shr    DWORD PTR [esi-0x6d],1
  423496:	aaa    
  423497:	push   ss
  423498:	jnp    0x423421
  42349a:	sub    edi,DWORD PTR [ebx+0x49]
  42349d:	jae    0x4234b4
  42349f:	fimul  WORD PTR [edi+edi*2-0x6b015bcf]
  4234a6:	cmp    eax,0xff2e7367
  4234ab:	mov    ecx,0xcb26d516
  4234b0:	lds    ebp,FWORD PTR [esi]
  4234b2:	push   eax
  4234b3:	push   ebx
  4234b4:	push   es
  4234b5:	cmp    al,0x37
  4234b7:	xor    eax,0xe0797be4
  4234bc:	jb     0x4234f8
  4234be:	call   0xd630:0x7eeccb93
  4234c5:	stc    
  4234c6:	jp     0x4234b3
  4234c8:	add    dl,ah
  4234ca:	push   esi
  4234cb:	not    DWORD PTR [ecx]
  4234cd:	jne    0x4234f1
  4234cf:	loop   0x42351d
  4234d1:	jo     0x423519
  4234d3:	mov    bh,0x9
  4234d5:	or     esp,DWORD PTR [ebx-0x22]
  4234d8:	jo     0x423469
  4234da:	inc    edi
  4234db:	push   esi
  4234dc:	es mov es,edx
  4234df:	xor    eax,0xb23cc255
  4234e4:	cmp    BYTE PTR [ebp-0x61f4d98b],bh
  4234ea:	fild   DWORD PTR [edi]
  4234ec:	jbe    0x42346f
  4234ee:	pop    ss
  4234ef:	fsub   QWORD PTR [ebp+ebx*2-0x26]
  4234f3:	sahf   
  4234f4:	retf   0x41a6
  4234f7:	cmpxchg ecx,ebx
  4234fa:	xchg   ebx,eax
  4234fb:	push   edi
  4234fc:	jb     0x42356e
  4234fe:	nop
  4234ff:	or     ecx,DWORD PTR [edx-0x2d]
  423502:	add    edi,DWORD PTR [ebp+0x7795d022]
  423508:	mov    cl,0x4c
  42350a:	int3   
  42350b:	dec    esp
  42350c:	adc    eax,0x319225eb
  423511:	shl    BYTE PTR [edx+0x53],cl
  423514:	aam    0x20
  423516:	stos   BYTE PTR es:[edi],al
  423517:	ret    
  423518:	lds    edx,FWORD PTR [ecx+0x1412acd2]
  42351e:	inc    esi
  42351f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423520:	(bad)  
  423522:	out    0x4c,eax
  423524:	dec    ebp
  423525:	inc    ecx
  423526:	xor    ah,BYTE PTR ds:0x779693a8
  42352c:	sub    DWORD PTR [ecx],esi
  42352e:	fimul  WORD PTR [eax+0x1e]
  423531:	mov    ecx,0xd8519259
  423536:	and    bh,ch
  423538:	mov    esi,0x56fcf5f1
  42353d:	mov    ebp,ebx
  42353f:	jae    0x4234f1
  423541:	and    eax,0x62f74dcd
  423546:	cmp    eax,0xc5bc0df2
  42354b:	jle    0x42351e
  42354d:	nop
  42354e:	cdq    
  42354f:	pop    esi
  423550:	lock mov ecx,0xb0edfcb9
  423556:	inc    ebx
  423557:	xchg   ebp,eax
  423558:	rcr    DWORD PTR [eax+0x9],0x73
  42355c:	popf   
  42355d:	stos   BYTE PTR es:[edi],al
  42355e:	leave  
  42355f:	mov    cl,0xde
  423561:	sub    DWORD PTR gs:[esi-0x334d3315],edx
  423568:	(bad)  
  42356a:	imul   ebp,DWORD PTR [edi-0x78],0x4f4e4d4
  423571:	loopne 0x4235d8
  423573:	pop    edx
  423574:	cwde   
  423575:	fs mov esi,0x9da60fef
  42357b:	pop    ss
  42357c:	pop    ebp
  42357d:	mov    cs,WORD PTR [esi-0x30]
  423580:	and    al,0x1d
  423582:	scas   eax,DWORD PTR es:[edi]
  423583:	ins    BYTE PTR es:[edi],dx
  423584:	fwait
  423585:	outs   dx,BYTE PTR ds:[esi]
  423586:	cmc    
  423587:	ret    0xfe82
  42358a:	add    eax,0x7958cf48
  42358f:	(bad)  
  423590:	in     eax,0x39
  423592:	loope  0x4235cc
  423594:	add    DWORD PTR [edx-0x2b],eax
  423597:	jns    0x423585
  423599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42359a:	shr    dh,0xea
  42359d:	repz ja 0x4235bb
  4235a0:	(bad)  
  4235a1:	stos   BYTE PTR es:[edi],al
  4235a2:	xchg   BYTE PTR [esi+0x4e8b3e63],al
  4235a8:	lahf   
  4235a9:	jg     0x4235b5
  4235ab:	xchg   DWORD PTR [esi],esi
  4235ad:	push   cs
  4235ae:	sbb    DWORD PTR [eax+0x1f],edx
  4235b1:	jp     0x42362f
  4235b3:	jae    0x4235ba
  4235b5:	cmp    bh,BYTE PTR ds:0x1107b3ab
  4235bb:	ins    BYTE PTR es:[edi],dx
  4235bc:	cmp    BYTE PTR [edx+0x50486be],dl
  4235c2:	ret    0xd3ce
  4235c5:	gs fld st(4)
  4235c8:	or     bl,0xcf
  4235cb:	push   ss
  4235cc:	mov    DWORD PTR [ecx+0x44c67c80],ebx
  4235d2:	loopne 0x423580
  4235d4:	pop    ebp
  4235d5:	push   0xf5ba327e
  4235da:	ltr    WORD PTR [edi+edi*4+0x63]
  4235df:	push   eax
  4235e0:	jecxz  0x4235be
  4235e2:	jg     0x4235a3
  4235e4:	popa   
  4235e5:	hlt    
  4235e6:	mov    esi,0xbadb1c1d
  4235eb:	mov    DWORD PTR [ecx-0x50],edx
  4235ee:	add    DWORD PTR [eax],eax
  4235f0:	xchg   DWORD PTR [edx],eax
  4235f2:	add    BYTE PTR [eax],al
  4235f4:	in     eax,dx
  4235f5:	mov    bl,0xdc
  4235f7:	sub    DWORD PTR ds:0x585c3f93,0xfffffff0
  4235fe:	enter  0x29bd,0xa4
  423602:	aam    0xe0
  423604:	out    0x98,eax
  423606:	icebp  
  423607:	mov    DWORD PTR [ecx+0xe],esp
  42360a:	mov    al,ds:0xd10a5355
  42360f:	mov    ebx,0xa176b77c
  423614:	jnp    0x4235fc
  423616:	sbb    DWORD PTR [edx+0x4f],edi
  423619:	mov    ds:0xe314671f,al
  42361e:	cwde   
  42361f:	mov    ch,0xfe
  423621:	jb     0x4235d3
  423623:	mov    bh,0xea
  423625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423626:	mov    al,0xc2
  423628:	push   edi
  423629:	push   0xffffff97
  42362b:	sar    BYTE PTR [edx-0x43],0xa2
  42362f:	loope  0x423635
  423631:	jmp    0x510e3766
  423636:	fldcw  WORD PTR [ecx-0x75]
  423639:	xor    eax,0x38a7e14
  42363e:	pushf  
  42363f:	hlt    
  423640:	pop    esi
  423641:	push   es
  423642:	inc    edx
  423643:	test   al,0x57
  423645:	jle    0x4236a8
  423647:	push   esi
  423648:	stos   DWORD PTR es:[edi],eax
  423649:	das    
  42364a:	or     esi,DWORD PTR [edi-0x51535e4d]
  423650:	(bad)  
  423651:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  423653:	push   ss
  423654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423655:	or     DWORD PTR [edx+0x66907607],ebp
  42365b:	xchg   ebp,eax
  42365c:	mov    al,ds:0x5fb4510
  423661:	cmp    esp,DWORD PTR [ecx-0x275b6e8]
  423667:	sub    eax,0x8db1f646
  42366c:	(bad)  
  42366d:	(bad)  [esp+eiz*4-0x4c]
  423671:	sti    
  423672:	rcr    BYTE PTR [edi+0x294a50e8],1
  423678:	ja     0x4236b9
  42367a:	loop   0x42364e
  42367c:	jecxz  0x423607
  42367e:	dec    eax
  42367f:	stos   BYTE PTR es:[edi],al
  423680:	xor    ch,BYTE PTR [edi+eiz*1+0x5ce53ea7]
  423687:	add    al,0x75
  423689:	inc    edx
  42368a:	ror    BYTE PTR [ecx-0x1a],cl
  42368d:	aad    0xc2
  42368f:	sbb    eax,esp
  423691:	lds    esp,FWORD PTR [eax-0xb99861e]
  423697:	pusha  
  423698:	sub    DWORD PTR [ebx+edx*1],esp
  42369b:	test   ch,bl
  42369d:	and    DWORD PTR [eax*2-0x298e04b7],edi
  4236a4:	mov    ebp,0xd2785b5a
  4236a9:	cmp    eax,0x6e0cc804
  4236ae:	scas   eax,DWORD PTR es:[edi]
  4236af:	ret    0x6d7d
  4236b2:	mov    al,ds:0x33890474
  4236b7:	push   eax
  4236b8:	mov    cl,0xc0
  4236ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236bb:	retf   0x166a
  4236be:	push   cs
  4236bf:	sbb    al,0xba
  4236c1:	push   eax
  4236c2:	aas    
  4236c3:	cmp    BYTE PTR [edi+0x6f],ch
  4236c6:	push   0x3b
  4236c8:	xor    BYTE PTR [esi],al
  4236ca:	sbb    DWORD PTR [ecx+0x2c],0xef4639cf
  4236d1:	cmp    cl,BYTE PTR [eax-0x33bf7535]
  4236d7:	jecxz  0x423661
  4236d9:	pop    ebp
  4236da:	hlt    
  4236db:	inc    eax
  4236dc:	pop    eax
  4236dd:	or     BYTE PTR [edi],ch
  4236df:	mov    ds:0xc1b2490,eax
  4236e4:	gs inc edx
  4236e6:	jg     0x423691
  4236e8:	pushf  
  4236e9:	js     0x4236c9
  4236eb:	test   eax,0x41bffa69
  4236f0:	xchg   ebx,eax
  4236f1:	daa    
  4236f2:	cmc    
  4236f3:	repnz sbb BYTE PTR [ebx-0x3add940a],dh
  4236fa:	mov    edi,0xf5ca23d
  4236ff:	add    BYTE PTR [esi-0x1d],ah
  423702:	fimul  DWORD PTR [esi+esi*4+0x231b7f33]
  423709:	or     eax,0x65cf5d52
  42370e:	addr16 aam 0x8a
  423711:	adc    bl,dh
  423713:	push   cs
  423714:	sub    eax,0x2b1a84e1
  423719:	aam    0xfb
  42371b:	stos   DWORD PTR es:[edi],eax
  42371c:	in     eax,0x1b
  42371e:	inc    esp
  42371f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423720:	and    ch,dh
  423722:	lods   al,BYTE PTR ds:[esi]
  423723:	mov    al,0x57
  423725:	sub    esp,ebp
  423727:	cmp    eax,0x3a585053
  42372c:	cdq    
  42372d:	scas   eax,DWORD PTR es:[edi]
  42372e:	cmovo  ebx,DWORD PTR [edi-0x70a8cb4b]
  423735:	mov    ds:0x6efb27e7,eax
  42373a:	popa   
  42373b:	shl    BYTE PTR [eax+ebp*8-0x3be7b2f7],cl
  423742:	mov    ebx,0x5bd39dff
  423747:	jbe    0x4236da
  423749:	xor    cl,cl
  42374b:	and    BYTE PTR [eax-0x32],cl
  42374e:	fdiv   QWORD PTR [edx+0x63]
  423751:	outs   dx,DWORD PTR ds:[esi]
  423752:	leave  
  423753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423754:	ds loop 0x4237cc
  423757:	jb     0x4236e0
  423759:	dec    eax
  42375a:	not    BYTE PTR [eax-0x1add08d8]
  423760:	dec    dh
  423762:	add    DWORD PTR [edx+0x38],eax
  423765:	xchg   BYTE PTR [edi+0x37],dl
  423768:	icebp  
  423769:	ror    ah,1
  42376b:	mov    BYTE PTR [ebx],al
  42376d:	arpl   WORD PTR [eax+0x7bb31e83],sp
  423773:	fs xchg edi,eax
  423775:	pop    ecx
  423776:	pop    eax
  423777:	jecxz  0x4237be
  423779:	imul   edx,DWORD PTR [edi],0x3de7b600
  42377f:	mov    dh,0x9d
  423781:	(bad)  
  423782:	pop    esp
  423783:	enter  0xf01,0x83
  423787:	loope  0x4237ae
  423789:	mov    edi,0x7965eee3
  42378e:	stc    
  42378f:	outs   dx,BYTE PTR ds:[esi]
  423790:	ss in  al,0x2
  423793:	mov    esi,0xdc9425b0
  423798:	xlat   BYTE PTR ds:[ebx]
  423799:	out    0x4c,al
  42379b:	xchg   esp,eax
  42379c:	jge    0x4237b4
  42379e:	inc    ebp
  42379f:	mov    edi,DWORD PTR [edi+0x79]
  4237a2:	stc    
  4237a3:	repnz pop esi
  4237a5:	cmovno edi,ebp
  4237a8:	xor    bh,0x69
  4237ab:	cmp    al,0x72
  4237ad:	nop
  4237ae:	cmp    ebp,DWORD PTR [edi-0x23]
  4237b1:	dec    ecx
  4237b2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4237b4:	jbe    0x42380d
  4237b6:	popa   
  4237b7:	repnz inc esi
  4237b9:	sub    BYTE PTR [edi+0x3e4371c2],0xd1
  4237c0:	sub    al,0x82
  4237c2:	adc    al,0x85
  4237c4:	mov    cl,0xa4
  4237c6:	clc    
  4237c7:	loop   0x423809
  4237c9:	pop    ebp
  4237ca:	repz je 0x4237ad
  4237cd:	aad    0x5
  4237cf:	pop    esi
  4237d0:	fisub  WORD PTR [ecx*8+0x4d8a7b5d]
  4237d7:	aad    0x3
  4237d9:	clc    
  4237da:	jae    0x423806
  4237dc:	sbb    ch,BYTE PTR [bp+di+0xfbc]
  4237e1:	shr    BYTE PTR [eax-0x21199b4a],cl
  4237e7:	test   al,0x69
  4237e9:	xchg   ebx,eax
  4237ea:	ss and eax,0x795d0876
  4237f0:	or     bl,al
  4237f2:	ja     0x4237a5
  4237f4:	cs dec eax
  4237f6:	push   esi
  4237f7:	dec    ebp
  4237f8:	push   eax
  4237f9:	shl    DWORD PTR [ebx],1
  4237fb:	fst    QWORD PTR [esi]
  4237fd:	enter  0x1147,0x4e
  423801:	std    
  423802:	adc    DWORD PTR [ebx],0x60
  423805:	push   esp
  423806:	jnp    0x42384b
  423808:	loope  0x4237d2
  42380a:	cmp    DWORD PTR [edx+0x390e2af3],esi
  423810:	xchg   esi,eax
  423811:	mov    ah,0x64
  423813:	add    al,0xb7
  423815:	mov    ch,0x52
  423817:	push   cs
  423818:	lods   eax,DWORD PTR ds:[esi]
  423819:	ins    BYTE PTR es:[edi],dx
  42381a:	(bad)  
  42381b:	loopne 0x423858
  42381d:	cmp    al,0x1c
  42381f:	or     eax,0x57ebc171
  423824:	out    dx,al
  423825:	cmp    bh,BYTE PTR [eax-0x6c]
  423828:	xchg   esp,eax
  423829:	mov    cl,cl
  42382b:	or     eax,DWORD PTR [edx+0x57e6f8ff]
  423831:	mov    cl,BYTE PTR [ebp+0x3d967428]
  423837:	pushf  
  423838:	add    eax,0x79274c30
  42383d:	mov    dh,0x3
  42383f:	js     0x4237ef
  423841:	sub    DWORD PTR [ebx],esi
  423843:	les    esp,FWORD PTR [edx+0x1efc60b]
  423849:	mov    DWORD PTR [edi],eax
  42384b:	loope  0x4237cf
  42384d:	add    al,0xcb
  42384f:	add    bl,bl
  423851:	pop    ds
  423852:	adc    eax,0x2fc4c579
  423857:	(bad)  
  423858:	imul   eax,esi,0x7ef24b29
  42385e:	pop    es
  42385f:	adc    ah,al
  423861:	and    BYTE PTR [edx],al
  423863:	mov    WORD PTR [ebx+0x42],gs
  423866:	(bad)  
  423867:	sbb    eax,0xc701ae4c
  42386c:	jns    0x42383e
  42386e:	inc    ebx
  42386f:	std    
  423870:	push   cs
  423871:	dec    edi
  423872:	adc    DWORD PTR [ebp-0x7da9614f],0x505a60
  42387c:	inc    ebx
  42387d:	push   ebp
  42387e:	pusha  
  42387f:	(bad)  
  423880:	jbe    0x423841
  423882:	out    dx,eax
  423883:	fnstsw WORD PTR [edx-0x6bbca93d]
  423889:	mov    dh,0x3b
  42388b:	enter  0xb2d8,0x1
  42388f:	add    BYTE PTR [edi+0x1000002],al
  423895:	inc    edx
  423896:	pop    ebp
  423897:	daa    
  423898:	push   esp
  423899:	push   ds
  42389a:	dec    WORD PTR [edx]
  42389d:	push   ecx
  42389e:	push   edi
  42389f:	mov    esi,0x25125407
  4238a4:	scas   al,BYTE PTR es:[edi]
  4238a5:	retf   
  4238a6:	ds nop
  4238a8:	stos   DWORD PTR es:[edi],eax
  4238a9:	lds    edi,FWORD PTR [ebx+0x49]
  4238ac:	ins    DWORD PTR es:[edi],dx
  4238ad:	in     al,dx
  4238ae:	sbb    bh,BYTE PTR [edi]
  4238b0:	jns    0x42384e
  4238b2:	xor    esi,DWORD PTR [edi+0x73a46794]
  4238b8:	(bad)  
  4238b9:	fptan  
  4238bb:	or     edi,DWORD PTR [bp-0x1d]
  4238bf:	loope  0x4238f0
  4238c1:	or     eax,0x91ff76ce
  4238c6:	pop    ebp
  4238c7:	test   eax,0xeac232a1
  4238cc:	enter  0x150f,0xb3
  4238d0:	cs ds mov edi,0xc1336263
  4238d7:	retf   
  4238d8:	push   esp
  4238d9:	inc    eax
  4238da:	xchg   esp,eax
  4238db:	jle    0x42390c
  4238dd:	cmp    al,0xcd
  4238df:	sbb    DWORD PTR [esp+ebx*4],edi
  4238e2:	and    al,BYTE PTR [ebx]
  4238e4:	jecxz  0x4238d6
  4238e6:	jl     0x4238c5
  4238e8:	outs   dx,DWORD PTR ds:[esi]
  4238e9:	mov    cl,0x5b
  4238eb:	mov    bl,BYTE PTR [esi-0x25c9aa8f]
  4238f1:	sar    DWORD PTR [edi+0x1c4d84f8],0xa2
  4238f8:	add    ebp,ebp
  4238fa:	outs   dx,BYTE PTR ds:[esi]
  4238fb:	ret    
  4238fc:	dec    eax
  4238fd:	jp     0x4238f6
  4238ff:	sub    eax,0xebdbc4a3
  423904:	aaa    
  423905:	call   0xa7cf:0xd9c99d6c
  42390c:	mov    edi,0x17c98c9a
  423911:	inc    esi
  423912:	scas   eax,DWORD PTR es:[edi]
  423913:	outs   dx,DWORD PTR ds:[esi]
  423914:	std    
  423915:	arpl   WORD PTR [eax+0x6d072449],si
  42391b:	clc    
  42391c:	adc    BYTE PTR [ecx-0x1f1ec289],0xd4
  423923:	and    al,0xfe
  423925:	dec    edi
  423926:	repz sub DWORD PTR [edx-0x32aa123f],edi
  42392d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42392e:	sub    al,0xf4
  423930:	mov    ah,0xfc
  423932:	mov    BYTE PTR [ecx],ah
  423934:	fnsave [edi]
  423936:	lods   al,BYTE PTR ds:[esi]
  423937:	adc    ecx,DWORD PTR [edx+eiz*8]
  42393a:	mov    DWORD PTR [eax+0x49b2f123],eax
  423940:	mov    ebp,0xace676ca
  423945:	xchg   edx,eax
  423946:	arpl   WORD PTR [ebx-0xe3d8e50],ax
  42394c:	cmc    
  42394d:	cmp    DWORD PTR [ebp+edi*1+0x60],0x75
  423952:	dec    esp
  423953:	mov    ch,0xc2
  423955:	mov    al,0x6
  423957:	(bad)  
  423958:	outs   dx,DWORD PTR ds:[esi]
  423959:	jnp    0x4239bf
  42395b:	adc    esi,DWORD PTR [esi-0x32da035e]
  423961:	or     DWORD PTR [esi-0x327b6258],edx
  423967:	xchg   edx,eax
  423968:	cwde   
  423969:	mov    BYTE PTR [edx+0x44],0xe6
  42396d:	lea    esi,[bp+di]
  423970:	add    DWORD PTR ds:0xd7f83cd8,edi
  423976:	aaa    
  423977:	adc    esi,edx
  423979:	sub    esi,DWORD PTR [ebx+0x652281d0]
  42397f:	pop    ebp
  423980:	aaa    
  423981:	mov    cl,0xd1
  423983:	jg     0x4239ab
  423985:	xor    ebx,ebp
  423987:	mov    edi,0x75686a9d
  42398c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42398d:	cmc    
  42398e:	jno    0x4239ff
  423990:	add    al,0x19
  423992:	xchg   BYTE PTR [ebx-0x411754d4],bh
  423998:	gs push 0xffffffe0
  42399b:	xor    DWORD PTR [edx+0x7f001c87],edx
  4239a1:	push   es
  4239a2:	inc    al
  4239a4:	(bad)  
  4239a6:	imul   DWORD PTR [edx]
  4239a8:	out    dx,eax
  4239a9:	xor    al,0xd1
  4239ab:	add    al,0xd0
  4239ad:	fnsave [edx-0x156d0500]
  4239b3:	fbstp  TBYTE PTR fs:[esi]
  4239b6:	sbb    eax,0x8fe6f02a
  4239bb:	pusha  
  4239bc:	lahf   
  4239bd:	std    
  4239be:	or     ebp,DWORD PTR [ecx+0x2b8ee880]
  4239c4:	nop
  4239c5:	push   ebp
  4239c6:	inc    ebx
  4239c7:	add    edx,DWORD PTR [eax-0x17]
  4239ca:	cdq    
  4239cb:	into   
  4239cc:	dec    edx
  4239cd:	lahf   
  4239ce:	cmp    al,0x9
  4239d0:	retf   
  4239d1:	aaa    
  4239d2:	not    ch
  4239d4:	frstor [eax-0x48225d03]
  4239da:	or     eax,0x8e6463be
  4239df:	in     al,dx
  4239e0:	dec    ecx
  4239e1:	je     0x423a3f
  4239e3:	xchg   BYTE PTR [ecx],bh
  4239e5:	mov    cl,0xff
  4239e7:	adc    eax,0xdfcf7f92
  4239ec:	loope  0x4239d9
  4239ee:	mov    DWORD PTR [ebx-0x625e20f1],esi
  4239f4:	push   cs
  4239f5:	and    DWORD PTR [esi-0x667b9d46],eax
  4239fb:	sti    
  4239fc:	pop    eax
  4239fd:	in     al,0xb7
  4239ff:	add    ch,BYTE PTR [ecx-0x46d8581f]
  423a05:	fst    st(2)
  423a07:	sbb    BYTE PTR [ebx],0x3a
  423a0a:	push   ss
  423a0b:	mov    edi,DWORD PTR [ebx-0x68]
  423a0e:	and    al,bl
  423a10:	mov    BYTE PTR [ecx+0x53],bl
  423a13:	sbb    al,0xce
  423a15:	cmp    dh,dl
  423a17:	data16 mov ch,0x44
  423a1a:	mov    eax,0x44ef0aa6
  423a1f:	xor    dh,BYTE PTR [esi+0x45c9681e]
  423a25:	fsub   st(6),st
  423a27:	or     eax,esp
  423a29:	xchg   esi,eax
  423a2a:	or     al,0x4a
  423a2c:	push   esp
  423a2d:	(bad)  
  423a2e:	jae    0x4239b3
  423a30:	add    eax,0xa736da04
  423a35:	lock imul eax,esp,0xffffff85
  423a39:	xchg   esi,eax
  423a3a:	into   
  423a3b:	jmp    0xc71c:0xf9a608ac
  423a42:	test   ebx,eax
  423a44:	jo     0x423a56
  423a46:	sub    ah,ah
  423a48:	mov    al,0x5c
  423a4a:	fnsave ds:0xb0c35387
  423a50:	sbb    eax,0x7d818bd
  423a55:	out    0x27,eax
  423a57:	mov    ch,0x29
  423a59:	pcmpgtw mm2,QWORD PTR [ecx+0x62]
  423a5d:	loopne 0x423ac5
  423a5f:	xchg   ecx,eax
  423a60:	sbb    cl,BYTE PTR [esi]
  423a62:	push   eax
  423a63:	bound  ebx,QWORD PTR [ebx-0x124cf72b]
  423a69:	in     al,0xfb
  423a6b:	and    edi,DWORD PTR [ebp-0x6c]
  423a6e:	scas   al,BYTE PTR es:[edi]
  423a6f:	mov    bl,0x96
  423a71:	xor    dl,BYTE PTR [edx-0x1b]
  423a74:	and    eax,0xd24be20c
  423a79:	lahf   
  423a7a:	scas   eax,DWORD PTR es:[edi]
  423a7b:	mov    cl,BYTE PTR [edi]
  423a7d:	ror    DWORD PTR [edi+0x10dd7826],0xe3
  423a84:	pop    ebx
  423a85:	bswap  edx
  423a87:	jo     0x423a0f
  423a89:	cdq    
  423a8a:	push   0x18
  423a8c:	(bad)  
  423a8d:	in     eax,0x32
  423a8f:	push   edi
  423a90:	loopne 0x423a57
  423a92:	pop    ecx
  423a93:	and    eax,0x17cb6ff9
  423a98:	push   ss
  423a99:	pusha  
  423a9a:	loope  0x423a2a
  423a9c:	push   ds
  423a9d:	push   0xffffffe6
  423a9f:	lods   al,BYTE PTR gs:[esi]
  423aa1:	push   ds
  423aa2:	add    dl,bl
  423aa4:	test   DWORD PTR es:[esi+0x15],ebx
  423aa8:	push   eax
  423aa9:	dec    esi
  423aaa:	test   bl,0xf5
  423aad:	cmp    al,0xef
  423aaf:	mov    ds:0x6aa25c88,al
  423ab4:	add    DWORD PTR [edi+0x75b674d2],ebx
  423aba:	or     eax,0xf77302b0
  423abf:	enter  0x8b8d,0xc2
  423ac3:	fnsave [ecx+0x5f7aaa9a]
  423ac9:	in     eax,dx
  423aca:	out    0x22,al
  423acc:	inc    eax
  423acd:	dec    ebp
  423ace:	push   cs
  423acf:	pop    ebp
  423ad0:	sub    al,0xe6
  423ad2:	ss aam 0xf8
  423ad5:	repnz mov ah,0x89
  423ad8:	aam    0xf0
  423ada:	cmp    al,0x58
  423adc:	leave  
  423add:	in     eax,0x73
  423adf:	shl    BYTE PTR [ebx-0x52c7050a],0x60
  423ae6:	xchg   ebp,eax
  423ae7:	adc    dl,dl
  423ae9:	stc    
  423aea:	nop
  423aeb:	and    eax,0x6bec5d7a
  423af0:	push   es
  423af1:	inc    eax
  423af2:	or     DWORD PTR [esp+esi*8-0x500cd25c],esp
  423af9:	pop    esp
  423afa:	xor    al,0x4a
  423afc:	shr    ah,0x0
  423aff:	or     BYTE PTR [edx],0x5d
  423b02:	add    edx,eax
  423b04:	pop    edi
  423b05:	cmp    al,0x5c
  423b07:	int3   
  423b08:	ins    DWORD PTR es:[edi],dx
  423b09:	fs icebp 
  423b0b:	jnp    0x423b17
  423b0d:	shl    dl,1
  423b0f:	add    edx,esp
  423b11:	mov    eax,ds:0x5cc63a2a
  423b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b17:	xchg   esp,eax
  423b18:	jne    0x423b6b
  423b1a:	jne    0x423b1c
  423b1c:	push   edi
  423b1d:	sub    eax,0xba7f9a07
  423b22:	fucomip st,st(5)
  423b24:	ficom  WORD PTR [ebp+0x41]
  423b27:	adc    al,0x87
  423b29:	xchg   ecx,eax
  423b2a:	sub    bh,al
  423b2c:	pop    edi
  423b2d:	mov    ch,0x1
  423b2f:	add    BYTE PTR [edi-0x2cfffffe],al
  423b35:	and    DWORD PTR [edx+0x4ca905c9],ebx
  423b3b:	adc    ebx,DWORD PTR [eax]
  423b3d:	cmp    DWORD PTR [ebp-0x27d8a4fe],eax
  423b43:	dec    edi
  423b44:	and    DWORD PTR [ebp-0x2f42ab70],esp
  423b4a:	lds    edx,FWORD PTR [esi+0x77]
  423b4d:	fnstenv [eax]
  423b4f:	jne    0x423ae4
  423b51:	test   DWORD PTR [edx+0x59],esp
  423b54:	repnz aam 0x91
  423b57:	popa   
  423b58:	mov    edx,0x71884c55
  423b5d:	push   ss
  423b5e:	sub    dl,BYTE PTR [ecx]
  423b60:	out    0x65,al
  423b62:	les    edx,FWORD PTR [esi+0x2c]
  423b65:	shl    dh,cl
  423b67:	shl    DWORD PTR [eax+0x3a87c832],cl
  423b6d:	popf   
  423b6e:	jle    0x423baa
  423b70:	sbb    DWORD PTR [ecx+ecx*2-0x6fd13385],edi
  423b77:	push   0xffffffa4
  423b79:	push   ecx
  423b7a:	xchg   ebx,eax
  423b7b:	jmp    0x423b33
  423b7d:	jnp    0x423bd9
  423b7f:	xchg   ebx,eax
  423b80:	iret   
  423b81:	inc    esi
  423b82:	ss pop ss
  423b84:	jo     0x423b10
  423b86:	or     BYTE PTR [eax-0x346d5284],0x33
  423b8d:	cmp    dl,ah
  423b8f:	aam    0xc4
  423b91:	cmp    ebp,DWORD PTR [ebx]
  423b93:	inc    esp
  423b94:	cmp    eax,DWORD PTR [edi-0x3aba6c17]
  423b9a:	xor    bl,ah
  423b9c:	(bad)  
  423b9d:	loope  0x423b9e
  423b9f:	inc    edi
  423ba0:	retf   
  423ba1:	scas   al,BYTE PTR es:[edi]
  423ba2:	aad    0x7c
  423ba4:	mov    dl,0x9
  423ba6:	push   es
  423ba7:	mov    BYTE PTR [esi-0xb],dl
  423baa:	mov    ecx,0xe2ce0f24
  423baf:	fwait
  423bb0:	mov    eax,ds:0xe110ab02
  423bb5:	xor    edx,0xaa2c517b
  423bbb:	ficomp DWORD PTR [eax*1-0x6c1957b5]
  423bc2:	jmp    0x423bba
  423bc4:	popf   
  423bc5:	pushf  
  423bc6:	retf   0xea84
  423bc9:	sub    DWORD PTR [esi],ecx
  423bcb:	cmp    eax,0x5e8eb18e
  423bd0:	and    al,0x13
  423bd2:	lahf   
  423bd3:	sub    cl,BYTE PTR [ebp+0x52b23da6]
  423bd9:	(bad)  
  423bda:	shl    DWORD PTR [edx+0x1ff10027],1
  423be0:	add    ebx,DWORD PTR gs:[edi]
  423be3:	add    al,BYTE PTR [ebp-0xa98e0d5]
  423be9:	mov    ebx,0xa74c1ce1
  423bee:	stc    
  423bef:	aad    0xb4
  423bf1:	shl    ebp,0x75
  423bf4:	mov    al,ds:0x772ded84
  423bf9:	arpl   WORD PTR es:[edi+0x56],dx
  423bfd:	push   0xfffffff1
  423bff:	pop    ebx
  423c00:	cmp    eax,0xb40960bd
  423c05:	fdivr  QWORD PTR [edi+0x33]
  423c08:	xchg   edx,eax
  423c09:	sub    eax,DWORD PTR [bx+si]
  423c0c:	cmc    
  423c0d:	xchg   edx,eax
  423c0e:	fild   DWORD PTR [ebx+0x22]
  423c11:	shl    DWORD PTR [edx],0x8e
  423c14:	les    esp,FWORD PTR ds:0xab46e3b8
  423c1a:	sub    eax,DWORD PTR [eax]
  423c1c:	mov    cl,0x35
  423c1e:	loope  0x423c06
  423c20:	test   ebx,ebp
  423c22:	or     al,0x50
  423c24:	push   WORD PTR [eax]
  423c27:	aam    0xd0
  423c29:	shr    BYTE PTR [edi-0x42e8589a],1
  423c2f:	push   ebx
  423c30:	std    
  423c31:	pop    ds
  423c32:	mov    WORD PTR [edx+0x730fd695],gs
  423c38:	ins    DWORD PTR es:[edi],dx
  423c39:	je     0x423ca7
  423c3b:	or     bl,BYTE PTR [ecx]
  423c3d:	push   edi
  423c3e:	inc    ebp
  423c3f:	push   esp
  423c40:	add    eax,0x48f15fb1
  423c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c46:	cmp    bh,BYTE PTR ds:0xab0f4762
  423c4c:	or     eax,0xebb100b5
  423c51:	push   ebx
  423c52:	or     bh,BYTE PTR fs:[edx]
  423c55:	ret    0x6548
  423c58:	mov    al,ds:0xf8e049b
  423c5d:	jae    0x423bf2
  423c5f:	pop    ecx
  423c60:	sar    BYTE PTR [ebx+0x98437da],0x59
  423c67:	(bad)  
  423c68:	cmc    
  423c69:	cmp    DWORD PTR [eax+0x23ebc12e],edi
  423c6f:	mov    ebx,0xb6db8f5d
  423c74:	and    al,0x46
  423c76:	sub    DWORD PTR [edi],ebp
  423c78:	sub    eax,0x16dc2f2d
  423c7d:	and    edx,DWORD PTR [ebx+0x2c]
  423c80:	js     0x423c39
  423c82:	jnp    0x423c94
  423c84:	mov    ebx,0x4889c6e7
  423c89:	mov    eax,ds:0x34135685
  423c8e:	hlt    
  423c8f:	push   esi
  423c90:	and    bh,BYTE PTR [ebp-0x40]
  423c93:	mov    edi,DWORD PTR [eax]
  423c95:	retf   0x9e00
  423c98:	test   BYTE PTR [edx-0x4d],0x42
  423c9c:	outs   dx,DWORD PTR ds:[esi]
  423c9d:	jl     0x423cc1
  423c9f:	jg     0x423c7b
  423ca1:	dec    ecx
  423ca2:	les    edx,FWORD PTR [eax+eiz*2-0x58ae3041]
  423ca9:	shr    BYTE PTR [edi+0x3a0f5ed],0x76
  423cb0:	fucomi st,st(0)
  423cb2:	int    0x91
  423cb4:	retf   
  423cb5:	pop    ebp
  423cb6:	jmp    0xccae:0x8869fd1c
  423cbd:	inc    esi
  423cbe:	inc    eax
  423cbf:	fwait
  423cc0:	retf   
  423cc1:	xchg   edx,eax
  423cc2:	or     eax,0xe2a3a743
  423cc7:	pop    ds
  423cc8:	cmp    al,0xa1
  423cca:	test   bh,dl
  423ccc:	inc    ecx
  423ccd:	jo     0x423c8d
  423ccf:	mov    BYTE PTR [edx+esi*2-0x18],bl
  423cd3:	leave  
  423cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cd5:	mov    edi,DWORD PTR [eax-0x3a]
  423cd8:	rcl    dl,1
  423cda:	jg     0x423cd4
  423cdc:	lea    eax,[edx+eiz*8+0x58e12cd]
  423ce3:	adc    ecx,DWORD PTR gs:[ecx-0x42]
  423ce7:	in     eax,dx
  423ce8:	inc    esp
  423ce9:	mov    ecx,0x398207f7
  423cee:	fs cmp bh,0x15
  423cf2:	jno    0x423ce8
  423cf4:	(bad)  
  423cf5:	lods   eax,DWORD PTR fs:[esi]
  423cf7:	scas   eax,DWORD PTR es:[edi]
  423cf8:	add    DWORD PTR [ebx-0x1b44a2ec],esp
  423cfe:	mov    cl,0x9b
  423d00:	pop    es
  423d01:	pop    ss
  423d02:	push   esi
  423d03:	sbb    edx,DWORD PTR [edx+0x45b1890d]
  423d09:	inc    esp
  423d0a:	icebp  
  423d0b:	mov    WORD PTR [ebx],ss
  423d0d:	add    DWORD PTR [edi],ebx
  423d0f:	add    ch,dl
  423d11:	xor    al,0x8
  423d13:	test   al,0x96
  423d15:	sti    
  423d16:	leave  
  423d17:	cmp    esi,esp
  423d19:	pop    ebx
  423d1a:	outs   dx,DWORD PTR ds:[esi]
  423d1b:	imul   edi,DWORD PTR [edx+0x25],0x1c
  423d1f:	adc    al,0x77
  423d21:	mov    eax,ds:0x37496015
  423d26:	and    esi,edi
  423d28:	outs   dx,BYTE PTR ds:[esi]
  423d29:	dec    esi
  423d2a:	dec    esp
  423d2b:	or     BYTE PTR ds:0x34c47cfb,0x7
  423d32:	cmp    dl,ch
  423d34:	inc    esi
  423d35:	xor    ebp,edx
  423d37:	test   eax,0xf4fa934d
  423d3c:	fidiv  DWORD PTR [edi+0x1325b053]
  423d42:	jmp    0x423da5
  423d44:	pop    eax
  423d45:	push   0x51916af6
  423d4a:	hlt    
  423d4b:	adc    BYTE PTR [ebx-0x28],dl
  423d4e:	loop   0x423d68
  423d50:	mov    al,0x34
  423d52:	xchg   BYTE PTR [eax+0x69cf3fb8],dh
  423d58:	lea    ecx,[eax+0x5fd2f6d0]
  423d5e:	and    DWORD PTR [ecx],edi
  423d60:	inc    ebp
  423d61:	push   cs
  423d62:	mov    ebx,0x91c5c854
  423d67:	gs inc edx
  423d69:	hlt    
  423d6a:	xor    al,0x77
  423d6c:	xor    BYTE PTR [esi],0x27
  423d6f:	fcom   DWORD PTR [edx]
  423d71:	mov    esi,0x2db7b81a
  423d76:	pop    esi
  423d77:	fsub   DWORD PTR gs:[edi+ecx*8-0x4f7cd7ac]
  423d7f:	lods   al,BYTE PTR ds:[esi]
  423d80:	add    BYTE PTR [ebx],ah
  423d82:	movntq QWORD PTR [esi],mm0
  423d85:	add    edi,ecx
  423d87:	loope  0x423da7
  423d89:	inc    ecx
  423d8a:	jl     0x423dbd
  423d8c:	jno    0x423de2
  423d8e:	jbe    0x423db7
  423d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d91:	xchg   ebx,eax
  423d92:	fmul   st,st(1)
  423d94:	das    
  423d95:	test   al,0x21
  423d97:	mov    ah,0x3
  423d99:	xor    DWORD PTR [edx],edx
  423d9b:	xor    BYTE PTR [edx-0x54],cl
  423d9e:	ss test bl,ch
  423da1:	xchg   esi,eax
  423da2:	dec    eax
  423da3:	inc    edi
  423da4:	iret   
  423da5:	dec    eax
  423da6:	and    al,BYTE PTR [edx+0x2a]
  423da9:	adc    BYTE PTR [eax+edx*2],0x1c
  423dad:	loop   0x423e20
  423daf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423db0:	or     al,0x33
  423db2:	xor    DWORD PTR [ebp+0x7e],0x61982cd0
  423db9:	ja     0x423dd1
  423dbb:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  423dbf:	outs   dx,DWORD PTR es:[esi]
  423dc1:	daa    
  423dc2:	ins    DWORD PTR es:[edi],dx
  423dc3:	push   0xfffffff2
  423dc5:	push   esp
  423dc6:	stos   DWORD PTR es:[edi],eax
  423dc7:	adc    ecx,edx
  423dc9:	adc    esi,DWORD PTR [edx+edi*1+0x1b7e6]
  423dd0:	xchg   DWORD PTR [edx],eax
  423dd2:	add    BYTE PTR [eax],al
  423dd4:	fcomp  DWORD PTR [ecx-0x36]
  423dd7:	jb     0x423e48
  423dd9:	icebp  
  423dda:	xchg   ebx,eax
  423ddb:	or     DWORD PTR [ebx],ebx
  423ddd:	(bad)  
  423dde:	enter  0x3f30,0x84
  423de2:	in     eax,0x24
  423de4:	dec    edx
  423de5:	pop    esi
  423de6:	mov    ah,0xaf
  423de8:	(bad)  
  423de9:	jmp    0x423dc4
  423deb:	jle    0x423de8
  423ded:	iret   
  423dee:	adc    ebx,DWORD PTR [edi]
  423df0:	out    0xa6,al
  423df2:	enter  0x5883,0x37
  423df6:	ss (bad) 
  423df8:	and    al,0xf2
  423dfa:	cmp    DWORD PTR [eax-0x7b822de6],esp
  423e00:	mov    dl,0x5e
  423e02:	xor    eax,0x1c91df54
  423e07:	pusha  
  423e08:	daa    
  423e09:	mov    ebp,DWORD PTR [esi+0xe]
  423e0c:	sahf   
  423e0d:	adc    al,0x2f
  423e0f:	or     eax,0x2d158618
  423e14:	jmp    0x423df7
  423e16:	push   ecx
  423e17:	mov    ds:0xa2a27d95,al
  423e1c:	div    DWORD PTR gs:[ebx+eiz*1]
  423e20:	mov    dh,0xb3
  423e22:	out    dx,eax
  423e23:	mov    bl,0x17
  423e25:	lock inc edx
  423e27:	cdq    
  423e28:	addr16 stc 
  423e2a:	aam    0xe2
  423e2c:	and    eax,0xf732b093
  423e31:	int3   
  423e32:	jecxz  0x423e48
  423e34:	mov    dh,0x7c
  423e36:	cmp    esi,DWORD PTR [esp+ecx*1+0x7d0fbac0]
  423e3d:	mov    esp,0x984359ce
  423e42:	clc    
  423e43:	sbb    DWORD PTR [esi],edi
  423e45:	add    ebx,DWORD PTR [ebx-0x259e6508]
  423e4b:	pop    edx
  423e4c:	mov    esi,0x900b15d4
  423e51:	lea    esp,[ebx]
  423e53:	jge    0x423e09
  423e55:	mov    edi,0x2d79d67
  423e5a:	push   esi
  423e5b:	nop
  423e5c:	gs jp  0x423e48
  423e5f:	inc    ebx
  423e60:	mov    bh,0x98
  423e62:	popf   
  423e63:	push   ecx
  423e64:	std    
  423e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e66:	xchg   esi,eax
  423e67:	and    eax,0x7cccfcc2
  423e6c:	out    0xe8,eax
  423e6e:	lds    edi,FWORD PTR [ebx+ebx*8-0x2c]
  423e72:	shl    DWORD PTR [ebx-0x12],1
  423e75:	jge    0x423ed9
  423e77:	or     esp,eax
  423e79:	test   BYTE PTR [eax+0x50],bl
  423e7c:	test   al,0xd7
  423e7e:	neg    BYTE PTR [eax-0x16]
  423e81:	jb     0x423e3a
  423e83:	rcr    ecx,cl
  423e85:	xchg   ebp,eax
  423e86:	ja     0x423e27
  423e88:	cmp    al,0x73
  423e8a:	sar    BYTE PTR [ebx-0x18],0xae
  423e8e:	xchg   edi,eax
  423e8f:	mov    WORD PTR [ebx+0x2f09cb4d],?
  423e95:	mov    esi,0x92567f3e
  423e9a:	mov    esi,DWORD PTR [esp+edx*4-0x1dfded07]
  423ea1:	xor    al,0xe
  423ea3:	xchg   ebp,eax
  423ea4:	cs out dx,eax
  423ea6:	jecxz  0x423e48
  423ea8:	jl     0x423e7c
  423eaa:	hlt    
  423eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eac:	cmp    DWORD PTR [esi+0x3368b56e],0x3f
  423eb3:	xchg   ebp,eax
  423eb4:	jle    0x423ec7
  423eb6:	leave  
  423eb7:	cmp    al,0xdd
  423eb9:	in     al,dx
  423eba:	mov    DWORD PTR [edi-0x14],ebx
  423ebd:	xchg   esp,eax
  423ebe:	inc    edx
  423ebf:	pop    ebp
  423ec0:	push   eax
  423ec1:	dec    edx
  423ec2:	pop    edi
  423ec3:	ins    BYTE PTR es:[edi],dx
  423ec4:	sbb    bh,dh
  423ec6:	xor    bl,BYTE PTR ds:0x9f23fc88
  423ecc:	sahf   
  423ecd:	push   edi
  423ece:	arpl   WORD PTR [edx-0x5b],di
  423ed1:	jl     0x423e93
  423ed3:	(bad)  
  423ed4:	int3   
  423ed5:	or     DWORD PTR [edi-0x39ca2d49],0xe581e716
  423edf:	pop    esp
  423ee0:	mov    eax,ds:0xeb45a61d
  423ee5:	sub    al,0x4e
  423ee7:	sbb    DWORD PTR [esi-0x62],esi
  423eea:	lods   al,BYTE PTR ds:[esi]
  423eeb:	in     al,0xf0
  423eed:	inc    edx
  423eee:	outs   dx,DWORD PTR ds:[esi]
  423eef:	mov    ah,0x36
  423ef1:	out    dx,al
  423ef2:	mov    ecx,0x1f766db7
  423ef7:	mov    ds:0xcd3cf718,al
  423efc:	test   BYTE PTR [eax],0xa
  423eff:	mov    edi,DWORD PTR [edi]
  423f01:	int3   
  423f02:	shl    BYTE PTR [esp+esi*2+0x3e],1
  423f06:	ficomp WORD PTR ss:[ebp+0xed3490c]
  423f0d:	cmp    al,al
  423f0f:	pop    edx
  423f10:	inc    ebp
  423f11:	out    dx,eax
  423f12:	lahf   
  423f13:	or     eax,0x686e0e0
  423f18:	pop    eax
  423f19:	scas   al,BYTE PTR es:[edi]
  423f1a:	ins    BYTE PTR es:[edi],dx
  423f1b:	jb     0x423f48
  423f1d:	fisubr DWORD PTR [edx+0x8e8d3ac]
  423f23:	cwde   
  423f24:	arpl   WORD PTR [edx+0x62],cx
  423f27:	push   ss
  423f28:	leave  
  423f29:	pop    esp
  423f2a:	sahf   
  423f2b:	outs   dx,BYTE PTR ds:[esi]
  423f2c:	shl    BYTE PTR [ebp-0x638f4aee],0x9b
  423f33:	inc    ebp
  423f34:	mov    dh,0x9
  423f36:	jle    0x423fb5
  423f38:	addr16 push edx
  423f3a:	xchg   ecx,eax
  423f3b:	cs in  al,0xd9
  423f3e:	push   ebx
  423f3f:	div    BYTE PTR [ebp-0x4f9333c6]
  423f45:	int    0xf6
  423f47:	push   ss
  423f48:	repz mov ebp,0x5c526abb
  423f4e:	js     0x423f11
  423f50:	jge    0x423faf
  423f52:	out    dx,al
  423f53:	das    
  423f54:	push   eax
  423f55:	mov    edx,DWORD PTR [ecx-0xa]
  423f58:	pop    ebx
  423f59:	cld    
  423f5a:	scas   eax,DWORD PTR es:[edi]
  423f5b:	cli    
  423f5c:	pop    esi
  423f5d:	scas   al,BYTE PTR es:[edi]
  423f5e:	std    
  423f5f:	aam    0xe0
  423f61:	repnz sub edi,esi
  423f64:	je     0x423f20
  423f66:	mov    ebx,0x29eff6ce
  423f6b:	cdq    
  423f6c:	or     eax,0x18500bd7
  423f71:	sti    
  423f72:	dec    ebx
  423f73:	fild   DWORD PTR [eax-0x1a]
  423f76:	nop
  423f77:	sbb    DWORD PTR [eax+0x2e],edi
  423f7a:	push   ebp
  423f7b:	push   edi
  423f7c:	xchg   esi,eax
  423f7d:	cmp    DWORD PTR [eax-0x74],edi
  423f80:	cmp    edi,ebp
  423f82:	mov    ds:0x4bf1346f,al
  423f87:	mov    gs,WORD PTR [eax-0x68ffa5ba]
  423f8d:	loopne 0x423fe3
  423f8f:	mov    DWORD PTR ds:0x7720a371,eax
  423f95:	call   0xab1d:0x2f4c24e1
  423f9c:	jnp    0x423fd7
  423f9e:	inc    ecx
  423f9f:	push   edi
  423fa0:	bound  edi,QWORD PTR [ebp+0x92709e4]
  423fa6:	adc    dh,dl
  423fa8:	pop    ebp
  423fa9:	pushf  
  423faa:	mov    bh,0xcf
  423fac:	xor    dl,BYTE PTR [ecx-0x2ce02c8a]
  423fb2:	cmp    esi,edi
  423fb4:	mov    WORD PTR [ecx+edx*1-0x36b4b2f],es
  423fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fbc:	cmp    BYTE PTR [ebx-0x2f2bdf37],ch
  423fc2:	(bad)  
  423fc3:	fisttp DWORD PTR [edi-0x218e7de0]
  423fc9:	out    dx,al
  423fca:	int3   
  423fcb:	gs xchg esp,eax
  423fcd:	inc    edx
  423fce:	sub    eax,0xf3adb18
  423fd3:	test   al,0x5
  423fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fd6:	add    BYTE PTR [ebp-0x5a],bh
  423fd9:	ret    
  423fda:	ss fwait
  423fdc:	push   edx
  423fdd:	add    al,0x29
  423fdf:	pop    ebx
  423fe0:	repnz mov edx,0x55d6a8be
  423fe6:	ret    0xc004
  423fe9:	je     0x424044
  423feb:	pop    edi
  423fec:	test   ah,dh
  423fee:	mov    cl,0x51
  423ff0:	call   0x790a:0xab360e8f
  423ff7:	cwde   
  423ff8:	and    al,0xa8
  423ffa:	ss out dx,eax
  423ffc:	mov    esi,edx
  423ffe:	nop
  423fff:	daa    
  424000:	mov    ah,al
  424002:	add    DWORD PTR [edx],edx
  424004:	jnp    0x42400a
  424006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424007:	pusha  
  424008:	mov    ch,0xb6
  42400a:	hlt    
  42400b:	ret    0x11d4
  42400e:	jno    0x42404a
  424010:	dec    ecx
  424011:	jecxz  0x423fc8
  424013:	stos   BYTE PTR es:[edi],al
  424014:	fisub  DWORD PTR [edx+0x2a]
  424017:	mov    cl,0x80
  424019:	call   0xbce555e4
  42401e:	leave  
  42401f:	jmp    DWORD PTR ds:0xd7060e44
  424025:	push   ecx
  424026:	and    cl,cl
  424028:	adc    al,0x99
  42402a:	imul   edx,DWORD PTR [eax-0x4ab5ca42],0x5ab66f3e
  424034:	and    al,0x41
  424036:	cmp    al,bh
  424038:	jne    0x424063
  42403a:	stc    
  42403b:	out    dx,eax
  42403c:	std    
  42403d:	xchg   edi,eax
  42403e:	popf   
  42403f:	pusha  
  424040:	add    eax,0xda9ef0fc
  424045:	loop   0x423fdf
  424047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424048:	stos   BYTE PTR es:[edi],al
  424049:	sbb    esp,eax
  42404b:	repz jl 0x42407a
  42404e:	adc    dh,al
  424050:	jnp    0x424036
  424052:	aad    0x6c
  424054:	push   ecx
  424055:	call   0xb1:0x46f4a53e
  42405c:	inc    ebx
  42405d:	lea    ebx,[edi]
  42405f:	and    bh,bl
  424061:	mov    dl,0x7f
  424063:	out    dx,eax
  424064:	add    BYTE PTR [ebx-0x25b4d8f0],dl
  42406a:	(bad)
  42406d:	mov    edx,0x2870001
  424072:	add    BYTE PTR [eax],al
  424074:	enter  0x3012,0x90
  424078:	iret   
  424079:	xchg   DWORD PTR [esi+0x153beb46],ebx
  42407f:	pushf  
  424080:	lea    eax,[ebx+0x13]
  424083:	cmp    edi,DWORD PTR [ebp+0x12]
  424086:	dec    ebx
  424087:	jecxz  0x4240ee
  424089:	push   edi
  42408a:	push   es
  42408b:	pop    edx
  42408c:	adc    eax,0xda860e97
  424091:	dec    ebp
  424092:	lahf   
  424093:	ret    
  424094:	jae    0x42407a
  424096:	cmc    
  424097:	ficom  DWORD PTR [esp+edi*1-0x39a77290]
  42409e:	mov    eax,ds:0xce01edd7
  4240a3:	lods   eax,DWORD PTR ds:[esi]
  4240a4:	jmp    0x819ed070
  4240a9:	or     ebp,DWORD PTR [ebp+0x1fa6279d]
  4240af:	add    edi,ebx
  4240b1:	and    dl,BYTE PTR [ebp-0xbd2abaa]
  4240b7:	scas   eax,DWORD PTR es:[edi]
  4240b8:	shr    DWORD PTR [edx],0x15
  4240bb:	test   BYTE PTR [edx],dh
  4240bd:	xor    al,0x3
  4240bf:	ret    
  4240c0:	mov    cl,0xa4
  4240c2:	rcr    al,cl
  4240c4:	lahf   
  4240c5:	jl     0x424113
  4240c7:	mov    ds:0x502bc9e6,al
  4240cc:	adc    BYTE PTR [esi],cl
  4240ce:	mov    edi,0x746355c0
  4240d3:	xor    ebx,0xbe124341
  4240d9:	mov    ebp,0x4a22159d
  4240de:	pop    ebx
  4240df:	sbb    esp,DWORD PTR [ecx-0x71d6f41a]
  4240e5:	cs inc ebp
  4240e7:	xchg   edi,eax
  4240e8:	dec    esp
  4240e9:	(bad)  
  4240ea:	pop    eax
  4240eb:	ds jbe 0x4240c3
  4240ee:	cdq    
  4240ef:	sbb    ah,BYTE PTR [esi+ebx*4-0x596e60fc]
  4240f6:	push   0xffffffab
  4240f8:	jg     0x424138
  4240fa:	and    al,0x84
  4240fc:	mov    eax,0x82754f1e
  424101:	mov    ?,WORD PTR [ebp+0x62]
  424104:	xor    BYTE PTR [esi-0x1],0xbc
  424108:	and    eax,0xfb243c2e
  42410d:	mov    ebp,0x1082e096
  424112:	add    ecx,esp
  424114:	lahf   
  424115:	loope  0x4240d0
  424117:	mov    bh,BYTE PTR [esp+edx*8]
  42411a:	ins    BYTE PTR es:[edi],dx
  42411b:	lds    edx,FWORD PTR [ebp+0x51]
  42411e:	jne    0x4240e1
  424120:	mov    bh,bh
  424122:	xchg   dl,bl
  424124:	xchg   esp,eax
  424125:	cmp    dh,BYTE PTR [edx+edx*4-0x1e]
  424129:	out    dx,eax
  42412a:	call   0xf3a9:0x186dff65
  424131:	jmp    0xe22a:0x2292febc
  424138:	retf   0xa0d2
  42413b:	add    esp,DWORD PTR [ebp+0x60da1a4]
  424141:	das    
  424142:	repz pop esi
  424144:	xchg   edx,eax
  424145:	enter  0xe3e6,0xff
  424149:	mov    bl,0x56
  42414b:	jo     0x424115
  42414d:	push   eax
  42414e:	pop    es
  42414f:	sbb    esi,edx
  424151:	jmp    0xde4e:0x2e4a853
  424158:	mov    dh,BYTE PTR [ebx+0x1c]
  42415b:	sub    al,0x9
  42415d:	adc    eax,0x571b0cb4
  424162:	pop    ebp
  424163:	push   ds
  424164:	push   esi
  424165:	addr16 or al,0x39
  424169:	add    bh,dl
  42416b:	mov    ebp,0xf5ddfee6
  424170:	jae    0x424196
  424172:	push   edi
  424173:	adc    ebx,DWORD PTR [eax]
  424175:	sbb    edi,DWORD PTR [edx+0x1af21796]
  42417b:	dec    ebx
  42417c:	push   cs
  42417d:	sbb    esp,esp
  42417f:	test   eax,0x71598727
  424184:	rcl    BYTE PTR [eax-0x4d0b36b5],cl
  42418a:	mov    ch,0x89
  42418c:	sti    
  42418d:	inc    ecx
  42418e:	bound  edx,QWORD PTR ds:0x49eceb49
  424194:	repz push esi
  424196:	push   edx
  424197:	test   bh,0xdb
  42419a:	outs   dx,DWORD PTR ds:[esi]
  42419b:	mov    ds:0xbf7b101b,eax
  4241a0:	dec    esp
  4241a1:	pushf  
  4241a2:	fsubr  DWORD PTR [esi]
  4241a4:	lahf   
  4241a5:	sar    DWORD PTR [esi],cl
  4241a7:	mov    al,0x8
  4241a9:	inc    esp
  4241aa:	jl     0x42417a
  4241ac:	mov    cl,0x7b
  4241ae:	xor    DWORD PTR [eax],esi
  4241b0:	sub    al,BYTE PTR [ebx+0x307cee59]
  4241b6:	loopne 0x424139
  4241b8:	add    ah,BYTE PTR [esi]
  4241ba:	ja     0x424145
  4241bc:	inc    edx
  4241bd:	mov    ebp,0x8b96f77f
  4241c2:	jns    0x42419d
  4241c4:	pusha  
  4241c5:	popf   
  4241c6:	lea    ebp,[ebp-0x4d6729c7]
  4241cc:	sub    esp,DWORD PTR [esp+ecx*2-0x6a682803]
  4241d3:	mov    ch,0xf5
  4241d5:	ret    
  4241d6:	mov    ch,BYTE PTR [ecx-0x6d8f69dc]
  4241dc:	out    dx,eax
  4241dd:	inc    edx
  4241de:	mov    esp,0xae92df56
  4241e3:	jp     0x42421f
  4241e5:	mov    esi,0x172690f2
  4241ea:	add    eax,0x79ab75fa
  4241ef:	mov    ecx,0xcc5b0992
  4241f4:	shl    BYTE PTR [ebx-0x57],0x54
  4241f8:	jg     0x4241b7
  4241fa:	xlat   BYTE PTR ds:[ebx]
  4241fb:	mov    ds:0x547957fd,al
  424200:	pop    ds
  424201:	jl     0x424214
  424203:	arpl   WORD PTR gs:[esi+0x24],di
  424207:	cmp    DWORD PTR [ebx],eax
  424209:	lods   eax,DWORD PTR ds:[esi]
  42420a:	(bad)  
  42420b:	fstp   TBYTE PTR [eax*2-0x3745785e]
  424212:	into   
  424213:	mov    ebp,DWORD PTR [edx-0x1e]
  424216:	push   0xffffffa1
  424218:	xchg   BYTE PTR [eax+ecx*4+0x4499ad5],bl
  42421f:	fwait
  424220:	aam    0x27
  424222:	adc    al,0x28
  424224:	push   esi
  424225:	dec    edi
  424226:	inc    esi
  424227:	adc    al,0xd6
  424229:	sbb    ebp,DWORD PTR [edi-0x2938ec4c]
  42422f:	repnz sti 
  424231:	inc    eax
  424232:	mov    dh,0x6
  424234:	pop    es
  424235:	sar    BYTE PTR [esi-0xd],cl
  424238:	mov    ch,0x14
  42423a:	sub    eax,0x25d79dc4
  42423f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424240:	dec    eax
  424241:	call   0xf2cc:0x7a62e5a6
  424248:	sub    BYTE PTR [ecx+0x59d1d0d6],0x1f
  42424f:	lea    esi,[edi+0x7a]
  424252:	inc    ecx
  424253:	fcom   DWORD PTR [ecx+0x4514319e]
  424259:	inc    esi
  42425a:	ret    0xf0f0
  42425d:	loopne 0x4242b4
  42425f:	loope  0x4241eb
  424261:	fs cmc 
  424263:	iret   
  424264:	lods   al,BYTE PTR ds:[esi]
  424265:	dec    edx
  424266:	loopne 0x4242e7
  424268:	imul   eax,DWORD PTR gs:[ebx-0x57],0xffffffe7
  42426d:	in     al,dx
  42426e:	add    eax,0x793bb44f
  424273:	jle    0x42424b
  424275:	mov    bh,0x58
  424277:	pop    ebx
  424278:	dec    ebx
  424279:	dec    eax
  42427a:	sub    DWORD PTR [ebx+0x14],0xffffffa9
  42427e:	inc    eax
  42427f:	push   ecx
  424280:	mov    al,ds:0xfae0098d
  424285:	test   al,0xe3
  424287:	sub    bl,ch
  424289:	aam    0xe0
  42428b:	push   es
  42428c:	xor    ah,BYTE PTR [edi]
  42428e:	add    bh,ah
  424290:	ins    DWORD PTR es:[edi],dx
  424291:	add    edx,DWORD PTR [edi-0x307beb43]
  424297:	daa    
  424298:	fidivr DWORD PTR [ecx+0x2da3041b]
  42429e:	addr16 jp 0x4242f5
  4242a1:	out    dx,eax
  4242a2:	enter  0x224d,0xad
  4242a6:	lahf   
  4242a7:	(bad)  
  4242a8:	leave  
  4242a9:	inc    esp
  4242aa:	fldenv [ecx-0x6c4b7070]
  4242b0:	loopne 0x42428e
  4242b2:	add    BYTE PTR [esi+0x774313c1],ah
  4242b8:	lea    ecx,[eax]
  4242ba:	dec    esi
  4242bb:	push   0x9a398fd2
  4242c0:	sub    al,ah
  4242c2:	aad    0xb9
  4242c4:	mov    ebp,0x42c0a46e
  4242c9:	mov    ah,0x52
  4242cb:	cmp    bh,BYTE PTR ds:0x37b20e8d
  4242d1:	stos   BYTE PTR es:[edi],al
  4242d2:	scas   eax,DWORD PTR es:[edi]
  4242d3:	dec    ebx
  4242d4:	mov    al,ds:0x1e633911
  4242d9:	push   ecx
  4242da:	or     eax,0x4e720394
  4242df:	fist   WORD PTR [eax]
  4242e1:	fdivr  st(1),st
  4242e3:	add    DWORD PTR [ebx+0x187e269e],0x86db9111
  4242ed:	mov    cl,0xfd
  4242ef:	pop    ss
  4242f0:	ss mov bl,bl
  4242f3:	js     0x424318
  4242f5:	cmp    bh,0x9f
  4242f8:	loop   0x42433f
  4242fa:	in     al,dx
  4242fb:	add    ah,dh
  4242fd:	cmp    DWORD PTR [edx-0x2002081],edx
  424303:	mov    ebx,0xc0721507
  424308:	push   ebx
  424309:	inc    edx
  42430a:	cwde   
  42430b:	call   0x287:0x1bcf4
  424312:	add    BYTE PTR [eax],al
  424314:	aam    0x63
  424316:	repz pop esi
  424318:	in     al,dx
  424319:	and    al,0xfd
  42431b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42431c:	fadd   st(7),st
  42431e:	mov    ebp,0xe6986004
  424323:	int3   
  424324:	sbb    BYTE PTR [ecx],ah
  424326:	mov    al,ds:0xc286ecd9
  42432b:	jecxz  0x4242e5
  42432d:	xor    BYTE PTR [ebp+0xd4a30f0],cl
  424333:	repnz mov ch,0x68
  424336:	js     0x424360
  424338:	push   es
  424339:	nop
  42433a:	adc    DWORD PTR [ecx-0x68],eax
  42433d:	ret    
  42433e:	sti    
  42433f:	ret    
  424340:	stos   BYTE PTR es:[edi],al
  424341:	dec    eax
  424342:	xor    al,0x94
  424344:	mov    ds:0xc54e85d0,eax
  424349:	sub    eax,0x5074b8d
  42434e:	hlt    
  42434f:	or     eax,0xea937fcc
  424354:	mov    dh,0x5b
  424356:	and    al,0x7e
  424358:	push   ecx
  424359:	push   edi
  42435a:	or     esi,DWORD PTR [ecx]
  42435c:	mov    eax,ds:0x8a786571
  424361:	inc    esp
  424362:	or     ebx,DWORD PTR [si-0x80]
  424366:	mov    ah,0x42
  424368:	(bad)  
  424369:	lahf   
  42436a:	inc    esp
  42436b:	xchg   ecx,eax
  42436c:	jne    0x424313
  42436e:	sub    bl,BYTE PTR [edx+ecx*2]
  424371:	out    dx,al
  424372:	ror    dl,0xfb
  424375:	dec    esp
  424376:	jnp    0x4243cd
  424378:	ret    
  424379:	jmp    0x6647bd6f
  42437e:	xchg   ecx,eax
  42437f:	cmp    al,0x18
  424381:	cmp    esi,esi
  424383:	call   0xcc1d1060
  424388:	cmp    BYTE PTR [ebx+edx*4-0x39],cl
  42438c:	fist   WORD PTR [ecx-0x25]
  42438f:	(bad)  
  424390:	sub    DWORD PTR [edi+0x7a44e785],0xfc52a897
  42439a:	out    0xb2,eax
  42439c:	adc    dh,0x66
  42439f:	pop    ebp
  4243a0:	lods   eax,DWORD PTR ds:[esi]
  4243a1:	push   ss
  4243a2:	test   BYTE PTR [esi],0x32
  4243a5:	mov    ch,BYTE PTR [edx-0x4a]
  4243a8:	pop    esi
  4243a9:	push   ebp
  4243aa:	push   edi
  4243ab:	or     DWORD PTR [esi+0x1c],ebx
  4243ae:	rcr    BYTE PTR [ebp+0x229ade1a],1
  4243b4:	sbb    ebx,DWORD PTR [edx+eiz*8+0x39]
  4243b8:	fucom  st(4)
  4243ba:	or     BYTE PTR [esi+0xbc4922e],cl
  4243c0:	es push eax
  4243c2:	push   0xffffffa3
  4243c4:	cmp    BYTE PTR [eax+ecx*1-0x63],0xb5
  4243c9:	loopne 0x4243e1
  4243cb:	fst    QWORD PTR [ebx+0x2ed8a595]
  4243d1:	inc    DWORD PTR [esp+ebx*2+0x24]
  4243d5:	int    0xa1
  4243d7:	and    eax,0xeea0183b
  4243dc:	not    BYTE PTR [edx]
  4243de:	jne    0x42445a
  4243e0:	and    eax,0x190e4770
  4243e5:	leave  
  4243e6:	add    dh,BYTE PTR [ebx-0x58]
  4243e9:	inc    ebp
  4243ea:	js     0x424464
  4243ec:	sbb    dh,BYTE PTR [ecx+0x52e01e7]
  4243f2:	and    esp,edi
  4243f4:	rcl    BYTE PTR [edi+0x1e],1
  4243f7:	xor    ebx,DWORD PTR [esi]
  4243f9:	jge    0x424381
  4243fb:	sbb    dl,BYTE PTR [edi+edi*8-0x3fc4b0db]
  424402:	scas   eax,DWORD PTR es:[edi]
  424403:	das    
  424404:	test   bh,0x92
  424407:	push   ss
  424408:	rcl    cl,cl
  42440a:	std    
  42440b:	ret    
  42440c:	inc    esi
  42440d:	pop    esi
  42440e:	jns    0x424450
  424410:	cld    
  424411:	repz xor al,0x7b
  424414:	xlat   BYTE PTR ds:[ebx]
  424415:	daa    
  424416:	xchg   ecx,eax
  424417:	test   al,0x81
  424419:	inc    eax
  42441a:	call   0xffccdf2f
  42441f:	(bad)  
  424420:	jb     0x4243cc
  424422:	mov    esi,0x49619afd
  424427:	xchg   DWORD PTR [ebp-0x57091493],esi
  42442d:	mov    BYTE PTR [eax-0x8],0x7e
  424431:	mov    bl,0x67
  424433:	pop    edx
  424434:	inc    eax
  424435:	lods   al,BYTE PTR ds:[esi]
  424436:	add    BYTE PTR [ecx-0x153b6605],ah
  42443c:	jg     0x424485
  42443e:	or     eax,0xf2a2b208
  424443:	push   edi
  424444:	stos   BYTE PTR es:[edi],al
  424445:	jb     0x4243f8
  424447:	rcl    esi,1
  424449:	xchg   ebp,eax
  42444a:	bound  edx,QWORD PTR [esi]
  42444c:	mov    esi,edi
  42444e:	imul   edi,DWORD PTR [ecx-0x64],0xffffffad
  424452:	and    al,0xfd
  424454:	dec    esp
  424455:	jle    0x42448d
  424457:	push   ecx
  424458:	push   ds
  424459:	jae    0x424455
  42445b:	dec    edx
  42445c:	mov    bl,0x1c
  42445e:	jne    0x4244cc
  424460:	mov    edx,0x3155aaa5
  424465:	and    BYTE PTR [edx],ah
  424467:	(bad)  
  424468:	push   edx
  424469:	not    esi
  42446b:	paddd  mm5,QWORD PTR [eax-0x5b3e8297]
  424472:	add    eax,0x503c715a
  424477:	ret    
  424478:	popa   
  424479:	jp     0x42440b
  42447b:	sbb    al,0xb7
  42447d:	into   
  42447e:	add    BYTE PTR [ebx],ah
  424480:	loop   0x424496
  424482:	mov    es,WORD PTR [ebx+0x7c]
  424485:	sub    esp,0x51ffc610
  42448b:	dec    esi
  42448c:	sub    al,0x7a
  42448e:	pushf  
  42448f:	jb     0x424420
  424491:	pop    ds
  424492:	daa    
  424493:	fdivr  QWORD PTR [esi]
  424495:	and    al,0xf
  424497:	sbb    BYTE PTR [ecx-0x5bd9f402],bh
  42449d:	xor    ecx,ebx
  42449f:	sub    eax,0x1d109b5
  4244a4:	cmc    
  4244a5:	call   0x6595:0x7195dcf5
  4244ac:	mov    ebx,?
  4244ae:	test   DWORD PTR [edi-0x36f86d95],eax
  4244b4:	add    BYTE PTR [eax],cl
  4244b6:	into   
  4244b7:	(bad)  
  4244b8:	gs xchg esp,eax
  4244ba:	adc    eax,ebx
  4244bc:	push   esp
  4244bd:	repz cmp al,0xe4
  4244c0:	adc    al,0x6c
  4244c2:	mov    eax,0x9a87aa97
  4244c7:	popf   
  4244c8:	push   0x2dcfcd72
  4244cd:	mov    ch,0xa0
  4244cf:	mov    ds:0x3d43e616,eax
  4244d4:	fwait
  4244d5:	xlat   BYTE PTR ds:[ebx]
  4244d6:	cdq    
  4244d7:	fdivrp st(7),st
  4244d9:	push   esi
  4244da:	lods   al,BYTE PTR ds:[esi]
  4244db:	pop    ebx
  4244dc:	cmp    edx,DWORD PTR [ebp+0x27b83e49]
  4244e2:	xlat   BYTE PTR ds:[ebx]
  4244e3:	jp     0x424541
  4244e5:	sub    DWORD PTR [edx],eax
  4244e7:	ret    
  4244e8:	and    ebx,ebp
  4244ea:	enter  0xd64d,0x95
  4244ee:	jne    0x4244ee
  4244f0:	into   
  4244f1:	mov    eax,0xc7fc228e
  4244f6:	mov    al,al
  4244f8:	xor    eax,0x254c5017
  4244fd:	adc    eax,0xeb0f80e5
  424502:	xchg   edx,eax
  424503:	into   
  424504:	mov    WORD PTR [edx+0x12ea5e40],?
  42450a:	jbe    0x4244a8
  42450c:	rcl    BYTE PTR [eax+0x2a52c9e8],cl
  424512:	repnz pop ebx
  424514:	dec    eax
  424515:	xchg   ecx,eax
  424516:	dec    ecx
  424517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424518:	in     al,dx
  424519:	ret    
  42451a:	fdiv   DWORD PTR [esi+0x5a86323e]
  424520:	in     al,dx
  424521:	iret   
  424522:	pushf  
  424523:	add    ecx,DWORD PTR [ecx-0x51]
  424526:	call   0xf20f:0x9412e04a
  42452d:	mov    al,ds:0x940843e9
  424532:	mov    ah,0x85
  424534:	and    DWORD PTR [ebx+0x23359b8d],edx
  42453a:	cmc    
  42453b:	(bad)  
  42453d:	mov    esp,0xd427f5e5
  424542:	nop
  424543:	fist   WORD PTR [eax+edi*8]
  424546:	neg    DWORD PTR [eax+0x43bdc1f4]
  42454c:	push   edx
  42454d:	pop    ecx
  42454e:	into   
  42454f:	inc    edi
  424550:	push   ecx
  424551:	xor    al,0x30
  424553:	inc    esi
  424554:	mov    WORD PTR [ecx-0x6117ce52],ss
  42455a:	sbb    al,0x23
  42455c:	sar    BYTE PTR [ecx],0x45
  42455f:	data16 mov al,ds:0xcce8e9d2
  424565:	jne    0x4245a5
  424567:	sub    eax,0x348c5c26
  42456c:	rcl    BYTE PTR [ecx+ebx*4],cl
  42456f:	xor    bl,ah
  424571:	sub    esp,DWORD PTR [edx-0x337d870d]
  424577:	adc    ebp,ebp
  424579:	jl     0x42450c
  42457b:	daa    
  42457c:	add    eax,0xf4d481b9
  424581:	cmp    eax,0xb21d65e6
  424586:	xchg   ecx,eax
  424587:	les    ebx,FWORD PTR [ecx-0x2377842c]
  42458d:	daa    
  42458e:	dec    edi
  42458f:	ins    BYTE PTR es:[edi],dx
  424590:	scas   al,BYTE PTR es:[edi]
  424591:	push   ecx
  424592:	mov    cl,0x5b
  424594:	push   cs
  424595:	icebp  
  424596:	out    0x80,eax
  424598:	(bad)  
  424599:	aaa    
  42459a:	daa    
  42459b:	add    BYTE PTR [esi+edi*1+0x24],dl
  42459f:	sbb    DWORD PTR [esi+0x1b],ebp
  4245a2:	jge    0x424623
  4245a4:	(bad)  
  4245a5:	mov    eax,0x8fe1cfc0
  4245aa:	pop    edi
  4245ab:	add    DWORD PTR [ebx-0x41],edi
  4245ae:	add    DWORD PTR [eax],eax
  4245b0:	xchg   DWORD PTR [edx],eax
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	sbb    eax,0xf4a43d5c
  4245b9:	fild   WORD PTR [ebx]
  4245bb:	mov    ecx,0xf65c14ee
  4245c0:	or     esi,edx
  4245c2:	not    cl
  4245c4:	dec    ecx
  4245c5:	sub    esi,DWORD PTR [edx+0x2d]
  4245c8:	data16 (bad) 
  4245ca:	fidivr WORD PTR [edx-0x750d92c1]
  4245d0:	sbb    BYTE PTR [ecx],dh
  4245d2:	es cdq 
  4245d4:	arpl   WORD PTR [edx+0x5efa3a82],di
  4245da:	or     BYTE PTR [eax],ah
  4245dc:	retf   0x1469
  4245df:	and    eax,0x7b449074
  4245e4:	(bad)  
  4245e5:	cdq    
  4245e6:	outs   dx,BYTE PTR ds:[esi]
  4245e7:	cmp    bl,BYTE PTR [esi]
  4245e9:	dec    ebp
  4245ea:	xchg   ebx,eax
  4245eb:	pop    ds
  4245ec:	or     esp,DWORD PTR [esi+edi*2+0x2c1ab8b5]
  4245f3:	adc    ah,BYTE PTR [edx+0x6d]
  4245f6:	(bad)  
  4245f7:	mov    ebp,0x337909af
  4245fc:	stc    
  4245fd:	mov    bh,0x80
  4245ff:	out    0x13,al
  424601:	pop    ebx
  424602:	not    BYTE PTR [edx+0x14758501]
  424608:	leave  
  424609:	push   ds
  42460a:	pop    ecx
  42460b:	fwait
  42460c:	inc    esi
  42460d:	fwait
  42460e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42460f:	nop
  424610:	pushf  
  424611:	test   al,0x4b
  424613:	sbb    eax,0xcbc4792f
  424618:	aad    0x74
  42461a:	xlat   BYTE PTR ds:[ebx]
  42461b:	in     al,dx
  42461c:	xor    bh,BYTE PTR [eax+0x56c53788]
  424622:	std    
  424623:	in     eax,0xe0
  424625:	fidivr DWORD PTR [ebx+0x16b03f28]
  42462b:	adc    ebp,DWORD PTR [edx+0x3c]
  42462e:	dec    edi
  42462f:	scas   al,BYTE PTR es:[edi]
  424630:	sti    
  424631:	mov    edi,0x11289573
  424636:	xchg   ebx,eax
  424637:	xchg   edx,eax
  424638:	dec    ebx
  424639:	pop    ss
  42463a:	push   ebp
  42463b:	(bad)
  42463e:	pop    ds
  42463f:	or     edi,0x54942095
  424645:	fldcw  WORD PTR ds:0xfd662e11
  42464b:	ins    DWORD PTR es:[edi],dx
  42464c:	cmc    
  42464d:	jbe    0x4246b9
  42464f:	cmp    BYTE PTR [edx],dl
  424651:	(bad)  
  424653:	repnz aaa 
  424655:	popf   
  424656:	mov    edx,0xd737a7d3
  42465b:	js     0x424609
  42465d:	xchg   edx,eax
  42465e:	and    DWORD PTR [esi+eax*1-0x54db560d],ebp
  424665:	add    bh,BYTE PTR [edi+0x1848520e]
  42466b:	loopne 0x424684
  42466d:	mov    DWORD PTR [ebx],esi
  42466f:	arpl   WORD PTR [edx-0x6242deb6],cx
  424675:	fstp   TBYTE PTR [eax+eax*8-0x39]
  424679:	xchg   ebp,eax
  42467a:	les    ebp,FWORD PTR [ecx]
  42467c:	dec    ebx
  42467d:	adc    DWORD PTR [edx],0x6ddba845
  424683:	outs   dx,DWORD PTR ds:[esi]
  424684:	mov    edi,0x4e81345e
  424689:	adc    esp,DWORD PTR [ebp-0x7e]
  42468c:	xchg   edi,eax
  42468d:	scas   al,BYTE PTR es:[edi]
  42468e:	jo     0x4246b7
  424690:	add    esi,DWORD PTR [ebp-0x42]
  424693:	inc    esp
  424694:	sub    al,BYTE PTR ds:0xa6551f2e
  42469a:	jno    0x424649
  42469c:	pop    ds
  42469d:	leave  
  42469e:	xor    bh,BYTE PTR [eax+0x47c7c89b]
  4246a4:	sbb    edi,DWORD PTR [ebx+0x3a]
  4246a7:	cld    
  4246a8:	inc    esp
  4246a9:	call   0x8245c42e
  4246ae:	pop    esi
  4246af:	jne    0x42470b
  4246b1:	push   esi
  4246b2:	dec    esi
  4246b3:	les    ebx,FWORD PTR [edi]
  4246b5:	cdq    
  4246b6:	pop    ebp
  4246b7:	in     al,dx
  4246b8:	(bad)  
  4246b9:	test   eax,0x6781f91e
  4246be:	cmovnp eax,DWORD PTR [ecx-0x6a]
  4246c2:	inc    edx
  4246c3:	out    0xd8,eax
  4246c5:	cdq    
  4246c6:	push   ebp
  4246c7:	pop    eax
  4246c8:	mov    al,0x3f
  4246ca:	fstp   TBYTE PTR [di-0x1fe2]
  4246cf:	ja     0x42466d
  4246d1:	sbb    ah,BYTE PTR [edx+0x60bb44c1]
  4246d7:	or     BYTE PTR [eax+ebx*4+0x78],al
  4246db:	sub    DWORD PTR [eax-0x474d3222],edx
  4246e1:	jl     0x424670
  4246e3:	sbb    al,0xed
  4246e5:	mov    ch,0x50
  4246e7:	jg     0x4246bd
  4246e9:	nop
  4246ea:	and    al,0xf6
  4246ec:	or     ebp,DWORD PTR [edx-0x61]
  4246ef:	ja     0x42470f
  4246f1:	in     al,dx
  4246f2:	out    0xfc,al
  4246f4:	xchg   DWORD PTR [edx],esp
  4246f6:	inc    edx
  4246f7:	cmp    eax,0x7f809ec5
  4246fc:	sbb    BYTE PTR [ecx],dl
  4246fe:	xlat   BYTE PTR ds:[ebx]
  4246ff:	sub    al,0xae
  424701:	daa    
  424702:	(bad)  
  424703:	push   esi
  424704:	ret    
  424705:	sbb    BYTE PTR [eax+esi*2],dh
  424708:	sbb    ah,dh
  42470a:	sub    DWORD PTR [esi-0xf796ca5],esi
  424710:	sti    
  424711:	sbb    al,0x59
  424713:	mov    esi,0xeb123d91
  424718:	inc    eax
  424719:	mov    al,0x50
  42471b:	dec    ebp
  42471c:	fcmovne st,st(3)
  42471e:	stc    
  42471f:	test   al,0x56
  424721:	cmp    ecx,DWORD PTR [ebp+0x421ffaef]
  424727:	jmp    0x1504edb6
  42472c:	sbb    eax,0x109d0b50
  424731:	push   ebp
  424732:	xchg   edx,eax
  424733:	aas    
  424734:	fild   QWORD PTR [eax]
  424736:	test   DWORD PTR [esi+0x269284f9],esp
  42473c:	ficom  WORD PTR [ebx-0x5bbaf579]
  424742:	sbb    ecx,DWORD PTR [ebp-0x11a75db2]
  424748:	adc    ecx,DWORD PTR [ebp+0x52]
  42474b:	out    dx,al
  42474c:	fistp  QWORD PTR ds:0x9f116e6c
  424752:	mov    ah,0xa0
  424754:	push   0x3c
  424756:	sbb    bh,cl
  424758:	mov    ebx,0x1ced8d8d
  42475d:	cmc    
  42475e:	loopne 0x424703
  424760:	add    BYTE PTR [ecx+0x39],al
  424763:	mov    edx,0xcb28ff7
  424768:	jmp    0x1a8227ac
  42476d:	dec    esi
  42476e:	pop    ecx
  42476f:	jbe    0x4247bd
  424771:	fnstcw WORD PTR [ebp-0x4db07dde]
  424777:	lods   eax,DWORD PTR ds:[esi]
  424778:	or     cl,BYTE PTR [eax]
  42477a:	imul   esi,DWORD PTR [ecx],0x2edba592
  424780:	add    BYTE PTR fs:[eax],ch
  424783:	mov    ebp,DWORD PTR [edi+0x36]
  424786:	and    ecx,eax
  424788:	lods   al,BYTE PTR ds:[esi]
  424789:	dec    eax
  42478a:	mov    esp,0xf820e92a
  42478f:	das    
  424790:	sub    eax,0xfdd9242
  424795:	shl    BYTE PTR [ebx-0x72],cl
  424798:	cld    
  424799:	dec    esp
  42479a:	in     al,dx
  42479b:	mov    eax,ds:0x1f79ca93
  4247a0:	icebp  
  4247a1:	retf   
  4247a2:	mov    ds:0x3158a5a9,eax
  4247a7:	dec    ebp
  4247a8:	push   ecx
  4247a9:	push   0xc9d4ef77
  4247ae:	fmul   DWORD PTR [ebp-0x797baf1e]
  4247b4:	sub    ebp,ecx
  4247b6:	pop    esp
  4247b7:	dec    ecx
  4247b8:	in     al,0xc8
  4247ba:	rcl    bl,cl
  4247bc:	cmp    eax,0x241f33ed
  4247c1:	jne    0x4247f4
  4247c3:	cli    
  4247c4:	mov    esp,0x90e9cc71
  4247c9:	sbb    al,0xb1
  4247cb:	dec    eax
  4247cc:	(bad)  
  4247ce:	loope  0x42475a
  4247d0:	inc    ebp
  4247d1:	xchg   ebx,eax
  4247d2:	or     BYTE PTR gs:[ecx+0x6d],ah
  4247d6:	in     eax,0x9
  4247d8:	js     0x424819
  4247da:	sbb    eax,0x4c987f1e
  4247df:	rcr    BYTE PTR [edx+0x2b],0xe4
  4247e3:	leave  
  4247e4:	dec    edx
  4247e5:	xor    edx,DWORD PTR ds:0x911b431
  4247eb:	mov    ah,ch
  4247ed:	push   cs
  4247ee:	push   eax
  4247ef:	push   eax
  4247f0:	xlat   BYTE PTR ds:[ebx]
  4247f1:	inc    ebp
  4247f2:	pop    eax
  4247f3:	push   es
  4247f4:	push   0xffffffb0
  4247f6:	inc    edx
  4247f7:	pop    es
  4247f8:	sub    BYTE PTR [ebp+0x18b8afbb],ah
  4247fe:	mov    edi,0x298533a
  424803:	cmp    ebp,esi
  424805:	mov    edx,0xfc73434e
  42480a:	jne    0x424818
  42480c:	push   eax
  42480d:	arpl   bp,bp
  42480f:	jecxz  0x4247a1
  424811:	inc    esi
  424812:	mov    ebp,0xf03e36b
  424817:	ret    
  424818:	push   ecx
  424819:	test   ebx,edi
  42481b:	jo     0x4247f4
  42481d:	adc    ebx,ebp
  42481f:	cdq    
  424820:	retf   
  424821:	mov    bh,0x26
  424823:	add    BYTE PTR [ecx-0x5a3308c6],cl
  424829:	fisubr WORD PTR [edi-0x27]
  42482c:	cmp    al,0x15
  42482e:	shl    DWORD PTR [ecx],0x58
  424831:	int    0xbf
  424833:	push   esp
  424834:	mov    al,ds:0x6a35dc85
  424839:	jle    0x424828
  42483b:	add    BYTE PTR [esi+0x74ef74ea],bh
  424841:	(bad)  
  424842:	mov    edi,0x98b349fb
  424847:	xor    bl,BYTE PTR [edi+0x2d49563]
  42484d:	ret    0x1
  424850:	xchg   DWORD PTR [edx],eax
  424852:	add    BYTE PTR [eax],al
  424854:	jb     0x424817
  424856:	shr    BYTE PTR [esi],1
  424858:	imul   esp,DWORD PTR [ebx+0x6e715a04],0x34a50588
  424862:	push   ebp
  424863:	xor    eax,esp
  424865:	xor    DWORD PTR [ecx-0x68221329],ebx
  42486b:	inc    esp
  42486c:	les    eax,FWORD PTR [edi]
  42486e:	adc    ebx,edi
  424870:	adc    dl,bl
  424872:	fldcw  WORD PTR ss:[edx+esi*8+0x63696bea]
  42487a:	mov    esi,0xf04364f1
  42487f:	arpl   WORD PTR [ecx],sp
  424881:	pop    edi
  424882:	inc    esp
  424883:	loopne 0x424833
  424885:	push   0xecbdbba7
  42488a:	sub    edx,DWORD PTR [ecx]
  42488c:	fistp  WORD PTR [ecx+0x4f]
  42488f:	je     0x424888
  424891:	mov    dh,0xff
  424893:	dec    eax
  424894:	add    al,dh
  424896:	and    eax,0xb68b9443
  42489b:	cs mov esi,0x69e9602e
  4248a1:	(bad)  
  4248a3:	mov    al,0xd9
  4248a5:	(bad)  [esi+0x24eec265]
  4248ab:	out    0xe8,eax
  4248ad:	aam    0x26
  4248af:	arpl   WORD PTR [esi+0x4808c156],cx
  4248b5:	dec    esp
  4248b6:	jg     0x424890
  4248b8:	mov    al,ds:0xb76d623e
  4248bd:	aam    0xcf
  4248bf:	test   al,0xdf
  4248c1:	fisubr DWORD PTR [edi-0x12]
  4248c4:	mov    ebp,0x7a67f655
  4248c9:	jns    0x4248a8
  4248cb:	imul   esp,ecx,0xdf5f9e53
  4248d1:	sub    al,0x19
  4248d3:	inc    esp
  4248d4:	mov    bh,0xc5
  4248d6:	int3   
  4248d7:	inc    edi
  4248d8:	outs   dx,BYTE PTR ds:[esi]
  4248d9:	stos   DWORD PTR es:[edi],eax
  4248da:	aam    0xc7
  4248dc:	push   ebp
  4248dd:	xor    dl,BYTE PTR [ebp-0x1d830991]
  4248e3:	and    eax,0x7e43ade1
  4248e8:	loope  0x4248bd
  4248ea:	inc    esi
  4248eb:	xchg   edx,eax
  4248ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248ed:	and    edi,ebx
  4248ef:	or     BYTE PTR [edx-0x4b],ch
  4248f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248f3:	ror    DWORD PTR [eax-0x5af30a23],0x36
  4248fa:	(bad)  
  4248fb:	paddd  mm4,QWORD PTR [edx+0x77]
  4248ff:	pop    ebp
  424900:	jnp    0x4248ca
  424902:	fnsave [eax+edi*4-0x23]
  424906:	test   DWORD PTR [esi],ebp
  424908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424909:	mov    bh,0x7a
  42490b:	sbb    bl,dh
  42490d:	cli    
  42490e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42490f:	outs   dx,DWORD PTR ds:[esi]
  424910:	push   eax
  424911:	(bad)  
  424912:	ror    esi,1
  424914:	push   ebx
  424915:	mov    esp,DWORD PTR [eax+0x5f]
  424918:	mov    al,ds:0x2b801a55
  42491d:	sahf   
  42491e:	and    DWORD PTR [edx-0x5e],0xffffffc7
  424922:	add    bh,BYTE PTR [ebx]
  424924:	(bad)  
  424925:	(bad)  
  424926:	in     eax,0xb2
  424928:	mov    al,ch
  42492a:	(bad)  
  42492b:	mov    esi,0x92a80d8a
  424930:	les    edi,FWORD PTR [edx]
  424932:	xchg   BYTE PTR [ecx],bl
  424934:	xor    al,0x6d
  424936:	xchg   edi,eax
  424937:	in     eax,dx
  424938:	cmp    eax,0xed503a0
  42493d:	test   BYTE PTR [esi+0x131a1578],ch
  424943:	icebp  
  424944:	sbb    ebp,DWORD PTR cs:[eiz*2-0x14b563dd]
  42494c:	sar    BYTE PTR [edi],0x65
  42494f:	fidivr DWORD PTR [ebp+0x1c]
  424952:	add    eax,0x25a58476
  424957:	test   BYTE PTR [esi],0xe9
  42495a:	mov    eax,edx
  42495c:	inc    eax
  42495d:	das    
  42495e:	jb     0x42490c
  424960:	mov    cl,0x1f
  424962:	adc    ah,BYTE PTR [edi*2+0x632c759a]
  424969:	cmp    dl,bh
  42496b:	mov    ebp,0xd409c237
  424970:	pushf  
  424971:	(bad)  
  424972:	fisttp WORD PTR [eax]
  424974:	fsubr  QWORD PTR [edx]
  424976:	jecxz  0x42495e
  424978:	add    bl,BYTE PTR [ebx+0x45]
  42497b:	inc    esp
  42497c:	dec    eax
  42497d:	adc    al,0x7b
  42497f:	push   es
  424980:	or     DWORD PTR [eax+0x27],0x1d
  424984:	pop    ss
  424985:	jmp    0x67f0c901
  42498a:	cmp    ebx,ebx
  42498c:	push   es
  42498d:	sbb    ebx,DWORD PTR [ebp+esi*1-0x27d3e53e]
  424994:	pop    ecx
  424995:	cmp    eax,0xba2733e
  42499a:	out    0xc7,al
  42499c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42499d:	test   ch,bl
  42499f:	jle    0x4249ec
  4249a1:	mov    eax,0x8e42a835
  4249a6:	and    BYTE PTR ds:[ebp-0x6f],al
  4249aa:	jg     0x424935
  4249ac:	js     0x4249f9
  4249ae:	and    esi,eax
  4249b0:	test   al,0x5
  4249b2:	retf   0x675
  4249b5:	inc    ecx
  4249b6:	adc    eax,DWORD PTR [esi]
  4249b8:	mov    ebx,0x6cacf8ac
  4249bd:	jle    0x424957
  4249bf:	js     0x424a2e
  4249c1:	sub    dl,BYTE PTR [eax-0x40]
  4249c4:	(bad)  
  4249c5:	jno    0x424980
  4249c7:	test   eax,0x21fce7cd
  4249cc:	ret    
  4249cd:	cmc    
  4249ce:	outs   dx,DWORD PTR ds:[esi]
  4249cf:	jnp    0x4249c3
  4249d1:	cli    
  4249d2:	sti    
  4249d3:	sbb    eax,0xf0b2297
  4249d8:	jnp    0x424a59
  4249da:	cli    
  4249db:	mov    ch,0x8c
  4249dd:	mov    ah,0xdb
  4249df:	cmp    eax,0xba883a
  4249e4:	add    al,BYTE PTR [ebx+eax*2-0x31cb80f6]
  4249eb:	add    esp,DWORD PTR [edi+0x17]
  4249ee:	pop    ss
  4249ef:	mov    eax,ds:0xf5482c5
  4249f4:	jmp    0xfbf6:0x4e844efa
  4249fb:	mov    ebx,0x12ff3034
  424a00:	add    DWORD PTR [esp+ecx*1-0x31e43aa5],0x8120a832
  424a0b:	adc    al,0x4f
  424a0d:	sbb    BYTE PTR ds:0xba807ef1,ch
  424a13:	jmp    0x3e75:0xa6086a40
  424a1a:	icebp  
  424a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a1c:	pop    ss
  424a1d:	cmp    DWORD PTR [ebp+0x6d],esp
  424a20:	out    0xfa,eax
  424a22:	and    BYTE PTR [ebx-0x56],cl
  424a25:	cmp    ebx,DWORD PTR ds:[ebx]
  424a28:	xor    BYTE PTR [ebx+0xdbfc621],bh
  424a2e:	fsubr  QWORD PTR [esi]
  424a30:	sbb    ch,BYTE PTR [edx]
  424a32:	xchg   esi,eax
  424a33:	fisttp QWORD PTR [edi+0x3d]
  424a36:	xor    al,0xf5
  424a38:	cli    
  424a39:	loop   0x424ab1
  424a3b:	call   0x9c50:0x98a81701
  424a42:	sbb    DWORD PTR [eax],ebx
  424a44:	and    DWORD PTR [edx-0x2bfd8c07],edx
  424a4a:	ror    DWORD PTR [edx+0x47],1
  424a4d:	repnz xor BYTE PTR [ecx],dh
  424a50:	or     ecx,DWORD PTR [ecx-0x484251ae]
  424a56:	call   0xb8097048
  424a5b:	pop    edx
  424a5d:	xchg   DWORD PTR [ecx],edx
  424a5f:	add    DWORD PTR [ebx],esp
  424a61:	fs jg  0x424a05
  424a64:	lea    ebx,[esi-0x60]
  424a67:	xchg   esp,eax
  424a68:	lods   al,BYTE PTR ds:[esi]
  424a69:	div    ebx
  424a6b:	out    dx,al
  424a6c:	xor    DWORD PTR [edx+0x4f],edi
  424a6f:	call   0x9f645cee
  424a74:	push   0x2167404c
  424a79:	inc    ebp
  424a7a:	sbb    bl,al
  424a7c:	mov    dl,0xd2
  424a7e:	loop   0x424a21
  424a80:	cmp    DWORD PTR ds:0xf3ac6b29,edx
  424a86:	(bad)  
  424a87:	outs   dx,DWORD PTR ds:[esi]
  424a88:	inc    esp
  424a89:	jmp    0xceff9200
  424a8e:	rol    BYTE PTR [eax-0x5f3493df],cl
  424a94:	daa    
  424a95:	pusha  
  424a96:	adc    al,dl
  424a98:	adc    DWORD PTR [esi-0x73],edx
  424a9b:	lods   al,BYTE PTR ds:[esi]
  424a9c:	mov    esp,0x3f78f170
  424aa1:	push   ebx
  424aa2:	mov    eax,ds:0x41ab1ffa
  424aa7:	mov    ds:0x2fbc77db,al
  424aac:	jnp    0x424afd
  424aae:	jle    0x424b20
  424ab0:	cdq    
  424ab1:	xchg   edi,eax
  424ab2:	mov    ds:0x8a9944c9,eax
  424ab7:	xchg   ecx,eax
  424ab8:	fisubr WORD PTR [eax-0x33844420]
  424abe:	mov    ah,ah
  424ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ac1:	push   eax
  424ac2:	(bad)  
  424ac3:	sbb    bl,ch
  424ac5:	mov    dl,0x90
  424ac7:	and    al,0xd1
  424ac9:	add    BYTE PTR [ebx-0x64],0xe4
  424acd:	push   cs
  424ace:	(bad)  
  424acf:	xchg   edx,eax
  424ad0:	xchg   edx,eax
  424ad1:	or     BYTE PTR [edx-0x56f010bf],bl
  424ad7:	dec    edx
  424ad8:	lahf   
  424ad9:	call   0x458d4b8b
  424ade:	mov    edx,0x5fffbeee
  424ae3:	in     eax,0x54
  424ae5:	stos   BYTE PTR es:[edi],al
  424ae6:	clc    
  424ae7:	adc    eax,ebp
  424ae9:	push   cs
  424aea:	jmp    0x424b17
  424aec:	mov    esp,eax
  424aee:	add    DWORD PTR [eax],eax
  424af0:	xchg   DWORD PTR [edx],eax
  424af2:	add    BYTE PTR [eax],al
  424af4:	inc    ebp
  424af5:	push   0x4b
  424af7:	shl    DWORD PTR [edx],1
  424af9:	push   esi
  424afa:	es das 
  424afc:	retf   0x4f53
  424aff:	sbb    eax,0x4f567320
  424b04:	pop    ebx
  424b05:	lods   al,BYTE PTR gs:[esi]
  424b07:	mov    ds:0x53acb852,eax
  424b0c:	cdq    
  424b0d:	dec    edx
  424b0e:	mov    eax,0x3e7f1c4
  424b13:	scas   al,BYTE PTR es:[edi]
  424b14:	adc    DWORD PTR [eax-0x5afe4fc3],ecx
  424b1a:	jns    0x424ac0
  424b1c:	or     al,0x60
  424b1e:	sbb    eax,0x38648be3
  424b23:	aas    
  424b24:	xor    edi,DWORD PTR [esi+0x72]
  424b27:	loope  0x424b80
  424b29:	xor    ebx,esp
  424b2b:	loope  0x424b84
  424b2d:	ins    BYTE PTR es:[edi],dx
  424b2e:	test   eax,0xe028272a
  424b33:	pop    eax
  424b34:	push   esi
  424b35:	push   esi
  424b36:	test   BYTE PTR [esp+eax*2-0x4364fa66],0xf
  424b3e:	in     eax,dx
  424b3f:	and    al,BYTE PTR [ebp+0x62]
  424b42:	fwait
  424b43:	inc    edi
  424b44:	retf   
  424b45:	enter  0x28de,0x7e
  424b49:	add    ebx,DWORD PTR [ecx]
  424b4b:	xchg   ecx,eax
  424b4c:	push   edi
  424b4d:	or     ah,bl
  424b4f:	pusha  
  424b50:	mov    eax,0xe5535928
  424b55:	adc    BYTE PTR [edi-0x47],al
  424b58:	sar    BYTE PTR [ecx-0x58a881a2],1
  424b5e:	sahf   
  424b5f:	loop   0x424b25
  424b61:	jl     0x424aff
  424b63:	push   es
  424b64:	add    esp,DWORD PTR [ecx+0xeefb88]
  424b6a:	xor    al,0x67
  424b6c:	inc    eax
  424b6d:	(bad)  
  424b6e:	(bad)  
  424b6f:	aas    
  424b70:	iret   
  424b71:	test   DWORD PTR [ebx],0x28c8c35e
  424b77:	fs push edx
  424b79:	xchg   ebx,eax
  424b7a:	and    al,0x26
  424b7c:	leave  
  424b7d:	(bad)  
  424b7f:	jo     0x424b0e
  424b81:	out    0x2e,al
  424b83:	xor    edi,DWORD PTR [esi]
  424b85:	cmp    dh,0x30
  424b88:	mov    ecx,0x31ba812c
  424b8d:	jle    0x424b33
  424b8f:	int3   
  424b90:	or     BYTE PTR gs:[edi-0x35f07e65],0x79
  424b98:	or     eax,0xe61c033f
  424b9d:	ds fwait
  424b9f:	mov    edx,0x6563a91a
  424ba4:	std    
  424ba5:	or     bh,BYTE PTR [edi-0x12]
  424ba8:	ins    DWORD PTR es:[edi],dx
  424ba9:	add    dh,BYTE PTR [eax+0x46]
  424bac:	imul   eax,DWORD PTR [ebx-0xa],0xffffff8f
  424bb0:	mov    esi,0x6f870bc7
  424bb5:	pop    esp
  424bb6:	and    BYTE PTR [edx+edx*2+0x7febe8ad],dh
  424bbd:	jmp    0x424c2c
  424bbf:	sub    edi,ebp
  424bc1:	jmp    0x424b91
  424bc3:	rol    BYTE PTR [esi+0xc],1
  424bc6:	or     DWORD PTR [edi-0x15],eax
  424bc9:	push   edi
  424bca:	sub    ah,ah
  424bcc:	xor    eax,0xcb2d7399
  424bd1:	adc    edi,edx
  424bd3:	mov    eax,ds:0xd13d133
  424bd8:	push   esp
  424bd9:	in     al,dx
  424bda:	and    eax,0x133c1673
  424bdf:	stos   DWORD PTR es:[edi],eax
  424be0:	and    BYTE PTR [edi+0x71],bl
  424be3:	shl    BYTE PTR [ebx-0x18],0xad
  424be7:	add    BYTE PTR [ebp-0x39f2d11f],cl
  424bed:	das    
  424bee:	xor    eax,0x1b564d71
  424bf3:	in     eax,0x40
  424bf5:	inc    ecx
  424bf6:	adc    ebp,esi
  424bf8:	inc    edi
  424bf9:	pop    DWORD PTR es:[ebp+0x3b94d3a1]
  424c00:	pop    eax
  424c01:	aas    
  424c02:	push   eax
  424c03:	mov    al,0xd0
  424c05:	cmp    al,0x5b
  424c07:	adc    bl,BYTE PTR [esi]
  424c09:	shl    BYTE PTR [esi],cl
  424c0b:	push   0x57
  424c0d:	lds    edi,FWORD PTR [ebx+0x43f952b2]
  424c13:	mov    BYTE PTR [esi-0x11ff4943],dh
  424c19:	pop    esi
  424c1a:	jl     0x424bf8
  424c1c:	pop    esi
  424c1d:	sbb    eax,0xbb19c8
  424c22:	into   
  424c23:	sub    al,0x87
  424c25:	mov    bh,0x2
  424c27:	jmp    ecx
  424c29:	sbb    ecx,DWORD PTR [ecx+0x13747950]
  424c2f:	fdiv   DWORD PTR [eax-0x11f8b45]
  424c35:	fist   DWORD PTR [edi+0x15]
  424c38:	int3   
  424c39:	(bad)  
  424c3b:	sub    BYTE PTR gs:[ebp+0x3b48f483],cl
  424c42:	clc    
  424c43:	adc    BYTE PTR [eax-0x48],0xec
  424c47:	sbb    cl,BYTE PTR [ebx-0x6c]
  424c4a:	jp     0x424cbf
  424c4c:	(bad)  
  424c4d:	pop    ss
  424c4e:	mov    cs,WORD PTR [ebx]
  424c50:	fisttp QWORD PTR [edx-0x5d]
  424c53:	ss push 0xffffff9f
  424c56:	mov    edi,DWORD PTR [edx+0x12a099d8]
  424c5c:	hlt    
  424c5d:	fst    QWORD PTR [esi]
  424c5f:	and    esi,DWORD PTR [eax+0x4986e915]
  424c65:	jnp    0x424c37
  424c67:	adc    DWORD PTR [ebx-0x50],ebx
  424c6a:	xchg   DWORD PTR [ebp-0x3c],edi
  424c6d:	pop    esi
  424c6e:	jo     0x424cd8
  424c70:	jno    0x424c4b
  424c72:	push   edx
  424c73:	xor    esi,DWORD PTR [ecx-0x5cc2ee5e]
  424c79:	push   ebx
  424c7a:	aam    0x75
  424c7c:	xor    dh,BYTE PTR [esi+0xe]
  424c7f:	lahf   
  424c80:	ja     0x424c91
  424c82:	fwait
  424c83:	dec    ecx
  424c84:	mov    ?,WORD PTR [ecx+0x60642788]
  424c8a:	in     al,0x8f
  424c8c:	outs   dx,BYTE PTR ds:[esi]
  424c8d:	imul   edx,DWORD PTR [esi+eax*8+0x70bd282e],0xffffffc6
  424c95:	dec    esp
  424c96:	lahf   
  424c97:	aaa    
  424c98:	dec    eax
  424c99:	jecxz  0x424c67
  424c9b:	mov    edi,?
  424c9d:	jae    0x424c2f
  424c9f:	inc    DWORD PTR [esi]
  424ca1:	pop    eax
  424ca2:	fcom   st(4)
  424ca4:	loope  0x424c58
  424ca6:	pop    es
  424ca7:	mov    edi,ebp
  424ca9:	(bad)  
  424caa:	push   ebx
  424cab:	and    eax,0xa93d4241
  424cb0:	dec    edi
  424cb1:	ins    BYTE PTR es:[edi],dx
  424cb2:	mov    dl,0xf6
  424cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cb5:	int3   
  424cb6:	iret   
  424cb7:	add    BYTE PTR [eax],al
  424cb9:	test   eax,0xca12058
  424cbe:	push   ss
  424cbf:	mov    al,ds:0x40eca50a
  424cc4:	inc    edx
  424cc5:	pop    esi
  424cc6:	in     eax,dx
  424cc7:	sub    BYTE PTR [ecx],bl
  424cc9:	xor    esi,DWORD PTR [ecx]
  424ccb:	pop    ebp
  424ccc:	test   BYTE PTR [edx-0x21a84584],al
  424cd2:	or     ah,BYTE PTR [esp+esi*8]
  424cd5:	enter  0xd3dd,0x56
  424cd9:	jle    0x424d47
  424cdb:	cli    
  424cdc:	inc    ebx
  424cdd:	pop    esi
  424cde:	fcomp  QWORD PTR [edi]
  424ce0:	and    eax,0xbe0a9641
  424ce5:	into   
  424ce6:	cmp    al,0x81
  424ce8:	cmp    al,0x43
  424cea:	inc    edx
  424ceb:	mov    ebp,0x2bcb6a55
  424cf0:	ror    BYTE PTR [esi],0x5c
  424cf3:	adc    ah,BYTE PTR [esi+ecx*4-0x35df7cb7]
  424cfa:	or     DWORD PTR [ebp+eax*8-0x11],ebx
  424cfe:	pop    es
  424cff:	and    esi,DWORD PTR [esi+ebp*2]
  424d02:	dec    ebp
  424d03:	mov    dl,0x2f
  424d05:	jo     0x424d38
  424d07:	les    ebx,FWORD PTR cs:[ebx+ecx*8]
  424d0b:	add    ah,BYTE PTR [eax]
  424d0d:	rcr    DWORD PTR [ecx+0x5d],1
  424d10:	test   BYTE PTR gs:[esi+edi*2+0x23],bh
  424d15:	hlt    
  424d16:	xchg   edi,eax
  424d17:	lock mov ds:0x5f5b6f1e,eax
  424d1d:	inc    esi
  424d1e:	add    bh,cl
  424d20:	or     al,0xe8
  424d22:	xlat   BYTE PTR ds:[ebx]
  424d23:	test   DWORD PTR [esi+0x928ba29],esp
  424d29:	xchg   ecx,eax
  424d2a:	cs mov eax,0xd9466115
  424d30:	sbb    BYTE PTR [eax+0x15],ah
  424d33:	jns    0x424ced
  424d35:	sahf   
  424d36:	out    dx,eax
  424d37:	call   0x194:0x7072d459
  424d3e:	dec    esi
  424d3f:	mov    eax,0x41642f62
  424d44:	retf   0xfc32
  424d47:	cwde   
  424d48:	pop    ecx
  424d49:	dec    eax
  424d4a:	sbb    ebx,DWORD PTR [esi]
  424d4c:	adc    ah,BYTE PTR [esi-0x5d]
  424d4f:	lahf   
  424d50:	call   FWORD PTR [edi+0x7a]
  424d53:	popa   
  424d54:	push   ds
  424d55:	and    BYTE PTR [edx],0x3c
  424d58:	or     al,0xeb
  424d5a:	dec    ebx
  424d5b:	ins    DWORD PTR es:[edi],dx
  424d5c:	test   ah,0x84
  424d5f:	test   edi,eax
  424d61:	jno    0x424d3a
  424d63:	dec    ebp
  424d64:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d66:	dec    edi
  424d67:	mov    DWORD PTR gs:[edx-0x44],ebx
  424d6b:	sbb    al,0x22
  424d6d:	ss xor ah,dl
  424d70:	dec    edx
  424d71:	lods   eax,DWORD PTR ds:[esi]
  424d72:	cmc    
  424d73:	int3   
  424d74:	ror    DWORD PTR [ebx+0x3c],0x92
  424d78:	dec    esi
  424d79:	into   
  424d7a:	fld    QWORD PTR [eax]
  424d7c:	stos   BYTE PTR es:[edi],al
  424d7d:	jo     0x424d5f
  424d7f:	dec    ecx
  424d80:	cli    
  424d81:	fldcw  WORD PTR [ebx-0x35bf70d]
  424d87:	loopne 0x424dfa
  424d89:	dec    esi
  424d8a:	xchg   edi,ebx
  424d8c:	adc    bh,al
  424d8e:	add    DWORD PTR [eax],eax
  424d90:	xchg   DWORD PTR [edx],eax
  424d92:	add    BYTE PTR [eax],al
  424d94:	pop    esp
  424d95:	add    al,0x2d
  424d97:	ja     0x424d64
  424d99:	fmul   DWORD PTR [esi-0x63]
  424d9c:	pop    ecx
  424d9d:	xor    BYTE PTR [edi+ebp*1],0x74
  424da1:	pop    eax
  424da2:	jg     0x424d50
  424da4:	retf   0x3dd5
  424da7:	dec    ebx
  424da8:	mov    bl,0xa7
  424daa:	es jbe 0x424dcb
  424dad:	xor    DWORD PTR [ebx+0x639b1868],0xb1c01605
  424db7:	in     eax,dx
  424db8:	pusha  
  424db9:	ret    0xb623
  424dbc:	call   0x461e:0x553b31e9
  424dc3:	js     0x424d9d
  424dc5:	scas   al,BYTE PTR es:[edi]
  424dc6:	pop    ss
  424dc7:	sahf   
  424dc8:	data16 or al,BYTE PTR [edx+edi*2+0x54]
  424dcd:	es stos BYTE PTR es:[edi],al
  424dcf:	ficomp WORD PTR [esi-0x13b717b0]
  424dd5:	xor    ecx,DWORD PTR [esp+ecx*8]
  424dd8:	ja     0x424e25
  424dda:	lods   al,BYTE PTR ds:[esi]
  424ddb:	sub    eax,0xf4980c0c
  424de0:	and    esp,DWORD PTR [eax+0x6b1c921a]
  424de6:	adc    al,0xfe
  424de8:	sub    DWORD PTR [esi-0x5d],edx
  424deb:	sbb    esi,esp
  424ded:	cmp    BYTE PTR fs:0x3a0b52c8,cl
  424df4:	dec    esp
  424df5:	or     ebx,esp
  424df7:	lds    edi,FWORD PTR [esi+edi*2-0x39]
  424dfb:	cmp    BYTE PTR [esp+esi*2-0x616cab64],cl
  424e02:	sti    
  424e03:	mov    ds:0xccdb7451,al
  424e08:	cmp    DWORD PTR [eax+ecx*8-0x63],ebx
  424e0c:	fld    QWORD PTR [esi-0x2066bf0b]
  424e12:	stos   DWORD PTR es:[edi],eax
  424e13:	out    dx,eax
  424e14:	jg     0x424dd9
  424e16:	or     DWORD PTR [edx-0x18],0x46
  424e1a:	rcl    eax,0x3f
  424e1d:	pop    esp
  424e1e:	rcl    DWORD PTR [edi],0x21
  424e21:	inc    edi
  424e22:	ds pop ss
  424e24:	pop    esp
  424e25:	push   esi
  424e26:	loope  0x424e81
  424e28:	call   0xc933e303
  424e2d:	popf   
  424e2e:	add    edx,DWORD PTR [edi+edx*4-0xb13ca7e]
  424e35:	push   cs
  424e36:	pop    ebp
  424e37:	in     eax,0xde
  424e39:	or     eax,0x703e037
  424e3e:	daa    
  424e3f:	sar    BYTE PTR [edx+ecx*4-0x354a0adb],1
  424e46:	cli    
  424e47:	mov    esi,0xf3354f96
  424e4c:	mov    eax,ds:0x63a0db76
  424e51:	xchg   edi,eax
  424e52:	adc    bl,BYTE PTR [ebx-0x78aaba5]
  424e58:	and    al,0xab
  424e5a:	lds    ecx,FWORD PTR [eax-0x72]
  424e5d:	mov    esp,0x2c8549ec
  424e62:	nop
  424e63:	inc    ebx
  424e64:	ficomp DWORD PTR ds:0xf891a72d
  424e6a:	sbb    DWORD PTR [edx+ebp*2],esp
  424e6d:	dec    esp
  424e6e:	sbb    esi,DWORD PTR [ebx]
  424e70:	xchg   BYTE PTR [ebx-0x33d588a8],ah
  424e76:	inc    esp
  424e77:	stos   DWORD PTR es:[edi],eax
  424e78:	test   eax,0xb6bfc95d
  424e7d:	rcl    DWORD PTR [eax+0x24f070a5],1
  424e83:	mov    bh,0x3d
  424e85:	cmp    eax,0x233376b3
  424e8a:	xchg   ecx,eax
  424e8b:	arpl   WORD PTR [ecx+0x27],di
  424e8e:	inc    edx
  424e8f:	inc    ax
  424e91:	fcmovnb st,st(5)
  424e93:	push   ds
  424e94:	mov    dl,0xda
  424e96:	push   ebp
  424e97:	push   edi
  424e98:	add    ah,BYTE PTR [ebp+0x10]
  424e9b:	into   
  424e9c:	xchg   ebp,eax
  424e9d:	(bad)  
  424e9e:	pop    ds
  424e9f:	push   0xf7ae721a
  424ea4:	imul   edi,DWORD PTR ds:0xb888f771,0xfbddc093
  424eae:	fnstsw WORD PTR [edi]
  424eb0:	psrad  mm0,QWORD PTR [eax-0x7b]
  424eb4:	aaa    
  424eb5:	sahf   
  424eb6:	(bad)  [eax-0x7e]
  424eb9:	add    eax,0xf8153c19
  424ebe:	mov    bl,0x17
  424ec0:	add    ch,BYTE PTR [esi-0x591f7af1]
  424ec6:	sahf   
  424ec7:	sti    
  424ec8:	(bad)  
  424ec9:	cmp    bh,BYTE PTR [edi]
  424ecb:	aad    0xf5
  424ecd:	add    BYTE PTR ds:0x9bae4243,0x6b
  424ed4:	in     al,dx
  424ed5:	mov    dl,0xd7
  424ed7:	(bad)  
  424ed8:	icebp  
  424ed9:	ins    DWORD PTR es:[edi],dx
  424eda:	cmp    DWORD PTR [esi+0x2b],ebx
  424edd:	push   ss
  424ede:	pop    ss
  424edf:	outs   dx,DWORD PTR ds:[esi]
  424ee0:	jmp    0xe8a4:0x1ab1e56
  424ee7:	int    0x5c
  424ee9:	outs   dx,DWORD PTR ds:[esi]
  424eea:	pop    edx
  424eeb:	adc    ah,BYTE PTR [ecx]
  424eed:	inc    eax
  424eee:	loop   0x424eb4
  424ef0:	por    mm7,QWORD PTR [ecx+0x22df615b]
  424ef7:	cdq    
  424ef8:	sub    ch,BYTE PTR [ecx-0x1b]
  424efb:	or     esp,DWORD PTR [ebx+0x3b]
  424efe:	test   al,0xd5
  424f00:	imul   edx,ebx,0x552e08e2
  424f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f07:	test   DWORD PTR [edi],edi
  424f09:	cmp    DWORD PTR [esi+0x20fe2219],0x9beb3e2e
  424f13:	aas    
  424f14:	test   DWORD PTR [ecx],edi
  424f16:	je     0x424f4f
  424f18:	mov    ebx,0xb4d1264c
  424f1d:	add    bl,BYTE PTR [esi-0x5043c841]
  424f23:	fldcw  WORD PTR [ebp+edi*1+0x5e]
  424f27:	xchg   esi,eax
  424f28:	mov    dh,cl
  424f2a:	shr    cl,0x36
  424f2d:	push   ecx
  424f2e:	xchg   esi,eax
  424f2f:	inc    edi
  424f30:	scas   eax,DWORD PTR es:[edi]
  424f31:	data16 sub BYTE PTR [ecx-0x4d],ch
  424f35:	cdq    
  424f36:	inc    DWORD PTR [ecx-0x88544f3]
  424f3c:	dec    edi
  424f3d:	pop    edi
  424f3e:	add    eax,0xf7201442
  424f43:	inc    ebp
  424f44:	addr16 pop ds
  424f46:	mov    dh,0xb0
  424f48:	(bad)  
  424f49:	out    0xa9,eax
  424f4b:	fsub   DWORD PTR [edx]
  424f4d:	rol    BYTE PTR [edi],cl
  424f4f:	push   ebp
  424f50:	pop    edi
  424f51:	push   ecx
  424f52:	dec    esp
  424f53:	call   0xeb79839d
  424f58:	pop    edi
  424f59:	and    al,0xd8
  424f5b:	mov    ah,0xa6
  424f5d:	pop    eax
  424f5e:	ret    0xf610
  424f61:	and    BYTE PTR [esi+0x69],0x70
  424f65:	jmp    0xaf1:0xeff12732
  424f6c:	mov    ecx,DWORD PTR [ebx+esi*2]
  424f6f:	jmp    0xa6e5:0xbd797fca
  424f76:	(bad)  
  424f77:	sahf   
  424f78:	(bad)  
  424f79:	retf   
  424f7a:	xchg   esi,eax
  424f7b:	push   ebp
  424f7c:	sub    edx,esi
  424f7e:	call   0x96189514
  424f83:	test   al,0xa5
  424f85:	cmp    bh,BYTE PTR [eax]
  424f87:	cmp    ebp,DWORD PTR [edi+ebp*1+0x68]
  424f8b:	clc    
  424f8c:	outs   dx,DWORD PTR gs:[esi]
  424f8e:	test   DWORD PTR [ebx-0x77],esp
  424f91:	or     ebx,esp
  424f93:	fmul   QWORD PTR [eax]
  424f95:	sbb    ebx,DWORD PTR [edi+0x1ce3021]
  424f9b:	lock sbb DWORD PTR [eax+edi*4+0x136c811e],eax
  424fa3:	ror    BYTE PTR [edi-0x114d0ae5],0x2c
  424faa:	in     eax,dx
  424fab:	pop    es
  424fac:	sbb    eax,0x8f348087
  424fb1:	fucom  st(0)
  424fb3:	mov    eax,0x2ab22ec4
  424fb8:	or     BYTE PTR [ebx+ebx*4-0x2c],dl
  424fbc:	push   0x772dea55
  424fc1:	jo     0x424ff7
  424fc3:	cdq    
  424fc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424fc5:	stos   BYTE PTR es:[edi],al
  424fc6:	mov    edx,0x6466d113
  424fcb:	int    0x75
  424fcd:	adc    bl,BYTE PTR [edi+0x33]
  424fd0:	pop    ebp
  424fd1:	or     al,0x5f
  424fd3:	loopne 0x42501c
  424fd5:	sbb    al,0xe0
  424fd7:	ds mov al,0xcc
  424fda:	sar    WORD PTR [edi],0x2c
  424fde:	icebp  
  424fdf:	jne    0x42505f
  424fe1:	add    ecx,esi
  424fe3:	push   edx
  424fe4:	cmp    al,0x23
  424fe6:	xchg   ebx,eax
  424fe7:	(bad)  
  424fe8:	jecxz  0x42505e
  424fea:	les    edi,FWORD PTR [ebp-0x4f]
  424fed:	or     al,0xd
  424fef:	pmulhw mm1,mm4
  424ff2:	(bad)  
  424ff3:	pop    ss
  424ff4:	push   0xf2f719de
  424ff9:	sbb    esp,edi
  424ffb:	(bad)  
  424ffc:	sbb    BYTE PTR [eax],al
  424ffe:	jne    0x42504d
  425000:	sahf   
  425001:	xchg   ecx,eax
  425002:	test   DWORD PTR [esi+0x7be4107f],ebp
  425008:	adc    DWORD PTR [edx+eax*1-0xf2fb3cd],esi
  42500f:	test   BYTE PTR [ecx],0xc7
  425012:	(bad)  
  425013:	in     eax,0x3b
  425015:	bound  edx,QWORD PTR [ecx-0x40d347c7]
  42501b:	add    BYTE PTR [edx-0x79],cl
  42501e:	push   edx
  42501f:	dec    esp
  425020:	(bad)  
  425022:	pop    esi
  425023:	xchg   eax,esp
  425025:	js     0x424fa8
  425027:	mov    ebx,0x6272744c
  42502c:	xchg   edi,eax
  42502d:	leave  
  42502e:	add    DWORD PTR [eax],eax
  425030:	xchg   DWORD PTR [edx],eax
  425032:	add    BYTE PTR [eax],al
  425034:	rcl    BYTE PTR [bx+di-0x697],1
  425039:	mov    ds,WORD PTR [edx-0x503157d4]
  42503f:	pop    ss
  425040:	js     0x424fc4
  425042:	imul   esp,esi,0xffffffff
  425045:	xchg   ebx,eax
  425046:	imul   ebp,DWORD PTR [ecx+0x57b064b8],0x49d6c332
  425050:	dec    ebp
  425051:	sub    esp,edi
  425053:	xor    eax,0x48e26bf9
  425058:	idiv   BYTE PTR [eax]
  42505a:	cli    
  42505b:	maxps  xmm1,XMMWORD PTR [bp+di+0x34]
  425060:	push   0x3ba557f9
  425065:	dec    edi
  425066:	sub    BYTE PTR [eax-0x1412eab1],bl
  42506c:	clc    
  42506d:	inc    ebp
  42506e:	scas   eax,DWORD PTR es:[edi]
  42506f:	ret    0x31aa
  425072:	inc    esp
  425073:	rol    BYTE PTR [eax],1
  425075:	shl    BYTE PTR [ebx-0x18be533f],1
  42507b:	sbb    bl,BYTE PTR [edi+0x4111a7df]
  425081:	pop    ebp
  425082:	inc    edi
  425083:	lds    esp,FWORD PTR [edi-0x8f0ead2]
  425089:	and    BYTE PTR [ecx-0x4ed325d7],al
  42508f:	rcl    BYTE PTR [ecx-0x2f],1
  425092:	outs   dx,DWORD PTR ds:[esi]
  425093:	adc    BYTE PTR [edi+0x1693c445],dh
  425099:	pop    ds
  42509a:	and    eax,0x6068060d
  42509f:	das    
  4250a0:	ds dec ecx
  4250a2:	test   al,0x12
  4250a4:	repz or DWORD PTR [eax],edx
  4250a7:	mov    eax,ds:0x4d7f31e2
  4250ac:	bound  esi,QWORD PTR [edi-0x30]
  4250af:	xchg   ebp,eax
  4250b0:	push   cs
  4250b1:	test   eax,0xdad8a29d
  4250b6:	test   DWORD PTR [esi+0x77],ebp
  4250b9:	jecxz  0x425040
  4250bb:	test   al,0xa
  4250bd:	sahf   
  4250be:	or     DWORD PTR [ebx],edx
  4250c0:	(bad)  
  4250c1:	jmp    0x4250b5
  4250c3:	pop    edx
  4250c4:	xor    al,0xc4
  4250c6:	fist   DWORD PTR [edi]
  4250c8:	jp     0x4250ac
  4250ca:	(bad)
  4250ce:	cmp    bh,BYTE PTR ss:[esp+esi*4+0xf786d2c]
  4250d6:	popa   
  4250d7:	(bad)  
  4250d9:	ins    BYTE PTR es:[edi],dx
  4250da:	pop    ebp
  4250db:	es leave 
  4250dd:	leave  
  4250de:	pop    ss
  4250df:	inc    esp
  4250e0:	(bad)  [ecx]
  4250e2:	and    DWORD PTR [ecx],eax
  4250e4:	in     al,0xab
  4250e6:	push   cs
  4250e7:	push   ebx
  4250e8:	int    0x67
  4250ea:	jne    0x4250a0
  4250ec:	xor    al,BYTE PTR [ecx+edx*1-0x77fddfe4]
  4250f3:	cld    
  4250f4:	lds    ebx,FWORD PTR [esi-0x47]
  4250f7:	or     ah,ch
  4250f9:	out    dx,al
  4250fa:	test   al,0xd6
  4250fc:	aaa    
  4250fd:	push   ebx
  4250fe:	sub    al,0x62
  425100:	sahf   
  425101:	(bad)  
  425102:	sub    DWORD PTR [ebp-0x1d99109a],esp
  425108:	mov    dl,0x47
  42510a:	or     ebp,DWORD PTR [esi-0x70f19691]
  425110:	mov    bl,0x80
  425112:	add    bl,cl
  425114:	pop    edi
  425115:	std    
  425116:	add    eax,0xf2c0bbd4
  42511b:	xchg   esp,eax
  42511c:	ins    BYTE PTR es:[edi],dx
  42511d:	push   esi
  42511e:	xchg   cl,ah
  425120:	cmc    
  425121:	outs   dx,DWORD PTR ds:[esi]
  425122:	cmp    eax,0x81c685e0
  425127:	jae    0x425110
  425129:	mov    al,ds:0xfb8c7de9
  42512e:	je     0x42512d
  425130:	aas    
  425131:	outs   dx,BYTE PTR ds:[esi]
  425132:	dec    ebx
  425133:	into   
  425134:	in     eax,0xa1
  425136:	jmp    0xbc1f:0xf2f092e7
  42513d:	in     eax,0x74
  42513f:	dec    esi
  425140:	stc    
  425141:	jp     0x4250eb
  425143:	jmp    0x294c:0x38271e59
  42514a:	cs cmc 
  42514c:	add    al,0xa8
  42514e:	add    ah,BYTE PTR [edi+edi*4]
  425151:	mov    esp,edx
  425153:	xchg   ebx,eax
  425154:	push   edi
  425155:	push   edi
  425156:	mov    WORD PTR [edi+0x6f],cs
  425159:	adc    DWORD PTR [edi+0x3cd20428],edx
  42515f:	jmp    0xdbd2:0x3238b5ab
  425166:	leave  
  425167:	inc    edx
  425168:	jb     0x425114
  42516a:	bound  esp,QWORD PTR [edi+ecx*1+0x7d6689cb]
  425171:	and    BYTE PTR [edi],dh
  425173:	fsub   QWORD PTR [esi+0x5320f739]
  425179:	outs   dx,DWORD PTR ds:[esi]
  42517a:	mov    BYTE PTR [eax-0xf59f856],al
  425180:	cmp    DWORD PTR [ecx],esp
  425182:	or     cl,BYTE PTR [esi+ecx*4+0x286b66f8]
  425189:	popa   
  42518a:	dec    esi
  42518b:	sar    BYTE PTR [edx+edx*8-0x5d],0x40
  425190:	xchg   edi,eax
  425191:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  425193:	jle    0x425118
  425195:	pop    ecx
  425196:	js     0x425118
  425198:	cmp    al,0x4b
  42519a:	(bad)
  42519e:	cdq    
  42519f:	mov    edx,0x992f7ec5
  4251a4:	mov    ds:0x5bf6ece9,al
  4251a9:	mov    esp,0xb7fe09e4
  4251ae:	mov    dl,0x15
  4251b0:	or     BYTE PTR [eax],dl
  4251b2:	pushf  
  4251b3:	hlt    
  4251b4:	out    dx,al
  4251b5:	jbe    0x425155
  4251b7:	(bad)  
  4251b8:	mov    eax,DWORD PTR [ecx+0x60abcfd2]
  4251be:	into   
  4251bf:	add    DWORD PTR [ebp+0x69],edx
  4251c2:	sbb    DWORD PTR [esi+eiz*2+0x6e8be3b9],ebx
  4251c9:	fst    QWORD PTR [edi-0x4c5d8bfc]
  4251cf:	std    
  4251d0:	in     eax,dx
  4251d1:	loopne 0x4251fb
  4251d3:	jne    0x425251
  4251d5:	scas   al,BYTE PTR es:[edi]
  4251d6:	add    ebx,DWORD PTR [ecx-0x46]
  4251d9:	(bad)  
  4251dc:	add    DWORD PTR [eax],0x15
  4251df:	mov    eax,ds:0xd889fc0b
  4251e4:	mov    ebp,0x7175595e
  4251e9:	and    eax,0x72cb5bc3
  4251ee:	outs   dx,DWORD PTR ds:[esi]
  4251ef:	pop    ecx
  4251f0:	arpl   si,cx
  4251f2:	dec    ecx
  4251f3:	jno    0x4251ab
  4251f5:	mov    ah,0xaa
  4251f7:	ins    DWORD PTR es:[edi],dx
  4251f8:	in     eax,0x6
  4251fa:	fs xchg esp,eax
  4251fc:	out    dx,eax
  4251fd:	rcl    DWORD PTR [edi-0x76],cl
  425200:	pop    ebx
  425201:	scas   eax,DWORD PTR es:[edi]
  425202:	xchg   BYTE PTR [eax+0x11df0987],al
  425208:	aad    0x9
  42520a:	cli    
  42520b:	in     al,dx
  42520c:	gs jl  0x42521b
  42520f:	cmp    edx,DWORD PTR [edi-0x784aa3a7]
  425215:	into   
  425216:	and    bh,ch
  425218:	cwde   
  425219:	inc    eax
  42521a:	ror    BYTE PTR [ebx+0x3afac726],0x4f
  425221:	push   esp
  425222:	cmp    al,0x64
  425224:	fcmovu st,st(4)
  425226:	mov    eax,ds:0xe3b0c622
  42522b:	ja     0x42522f
  42522d:	push   eax
  42522e:	retf   
  42522f:	cmp    eax,0x49c92dc3
  425234:	cmp    al,0xc
  425236:	sub    BYTE PTR [ebx+0x58],dh
  425239:	sbb    eax,0x79e062de
  42523e:	cmp    ebp,edx
  425240:	xchg   edx,eax
  425241:	mov    eax,0xc8ed0964
  425246:	push   ebp
  425247:	ins    BYTE PTR es:[edi],dx
  425248:	sub    al,0xc9
  42524a:	adc    ecx,DWORD PTR [ecx+0x2c]
  42524d:	outs   dx,DWORD PTR ds:[esi]
  42524e:	pusha  
  42524f:	in     eax,dx
  425250:	out    0x7d,al
  425252:	loopne 0x4251ff
  425254:	pusha  
  425255:	outs   dx,DWORD PTR ds:[esi]
  425256:	jb     0x425257
  425258:	sbb    cl,al
  42525a:	and    al,0xe6
  42525c:	push   eax
  42525d:	mov    cs,ecx
  42525f:	stc    
  425260:	(bad)  
  425262:	push   ebx
  425263:	xchg   BYTE PTR [esi+0x2d2ac1ed],dl
  425269:	es jmp 0x42520d
  42526c:	out    0x59,al
  42526e:	or     DWORD PTR [ebp-0x54],edx
  425271:	(bad)  ds:0x2d21992
  425277:	add    ecx,edi
  425279:	out    dx,al
  42527a:	cdq    
  42527b:	fcmovb st,st(2)
  42527d:	enter  0x5a45,0x5c
  425281:	push   ebp
  425282:	jno    0x425292
  425284:	mov    ebp,0x11dc7ad7
  425289:	mov    edi,0xc1fab57d
  42528e:	cli    
  42528f:	pop    ecx
  425290:	cmc    
  425291:	jge    0x4252a8
  425293:	cld    
  425294:	int3   
  425295:	dec    DWORD PTR [edi+0x6b784d8e]
  42529b:	adc    cl,BYTE PTR [esi]
  42529d:	(bad)  
  42529e:	popa   
  42529f:	addr16 sbb ecx,esi
  4252a2:	into   
  4252a3:	dec    ebx
  4252a4:	dec    esi
  4252a5:	cmc    
  4252a6:	and    BYTE PTR [ecx+ebp*4+0x36b211cf],0xb
  4252ae:	repnz retf 
  4252b0:	mov    ds:0xe9ef8e02,al
  4252b5:	les    esp,FWORD PTR [esi-0x3e]
  4252b8:	sbb    ebx,ecx
  4252ba:	and    eax,DWORD PTR [eax]
  4252bc:	or     dl,BYTE PTR [edx-0x3c684]
  4252c2:	dec    edi
  4252c3:	mov    bl,0xec
  4252c5:	jo     0x42527e
  4252c7:	lea    ecx,[edx+edx*1-0x33e10b13]
  4252ce:	add    DWORD PTR [eax],eax
  4252d0:	xchg   DWORD PTR [edx],eax
  4252d2:	add    BYTE PTR [eax],al
  4252d4:	adc    bh,dl
  4252d6:	aaa    
  4252d7:	mov    ch,0xaf
  4252d9:	mov    eax,0x66e18166
  4252de:	loope  0x425336
  4252e0:	popa   
  4252e1:	outs   dx,DWORD PTR ds:[esi]
  4252e2:	outs   dx,BYTE PTR ds:[esi]
  4252e3:	push   ecx
  4252e4:	sar    BYTE PTR [esi+0xa],cl
  4252e7:	inc    esi
  4252e8:	popa   
  4252e9:	jmp    0x42532d
  4252eb:	loopne 0x425345
  4252ed:	loop   0x4252a0
  4252ef:	or     al,0xea
  4252f1:	jns    0x425309
  4252f3:	ret    0x2bf5
  4252f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252f7:	dec    ecx
  4252f8:	sbb    cl,BYTE PTR [edi]
  4252fa:	mov    bh,0xfa
  4252fc:	nop
  4252fd:	sbb    al,0x9b
  4252ff:	mov    ebx,fs
  425301:	xor    BYTE PTR [edi-0x33072f75],ch
  425307:	pop    es
  425308:	fild   WORD PTR [eax-0x37]
  42530b:	adc    dl,dh
  42530d:	mov    cl,0xbd
  42530f:	mov    edx,0x5f27c662
  425314:	fcmovnb st,st(2)
  425316:	add    al,0x7a
  425318:	call   0xe284baf7
  42531d:	xor    ch,BYTE PTR [edx+0x15]
  425320:	jle    0x425388
  425322:	mov    BYTE PTR [edx],al
  425324:	cmp    al,0xaf
  425326:	mov    BYTE PTR [eax+0x290a8bcc],al
  42532c:	dec    ebp
  42532d:	aas    
  42532e:	mov    ecx,0x62a77c55
  425333:	and    eax,0x6a56ebeb
  425338:	jae    0x4253a6
  42533a:	stc    
  42533b:	(bad)  
  42533c:	in     eax,0x1f
  42533e:	lds    ecx,FWORD PTR [esp+eax*2-0x606e8204]
  425345:	paddusw mm4,QWORD PTR ds:[ebp-0x4393887d]
  42534d:	mov    ds:0xaef0e168,eax
  425352:	fimul  WORD PTR [eax+0x56]
  425355:	push   0x502d786b
  42535a:	in     al,0xf3
  42535c:	xor    ebx,ebp
  42535e:	ss dec esi
  425360:	call   0xcbcf:0x8af5068
  425367:	outs   dx,BYTE PTR ds:[esi]
  425368:	push   es
  425369:	stos   BYTE PTR es:[edi],al
  42536a:	test   dl,cl
  42536c:	addr16 add al,0x6c
  42536f:	add    bl,BYTE PTR [edi]
  425371:	fcomi  st,st(0)
  425373:	mov    ch,0x79
  425375:	jg     0x425318
  425377:	cwde   
  425378:	inc    eax
  425379:	bound  edi,QWORD PTR [edi-0x3ceb0382]
  42537f:	mov    dh,0x21
  425381:	das    
  425382:	push   esi
  425383:	fist   WORD PTR [ebp-0x71e24667]
  425389:	push   ss
  42538a:	mov    ah,0xce
  42538c:	sbb    BYTE PTR [ebp+0x44],dh
  42538f:	cli    
  425390:	inc    ebp
  425391:	pop    ds
  425392:	add    eax,0xe4e446d5
  425397:	mov    eax,ds:0x7636988e
  42539c:	into   
  42539d:	not    BYTE PTR [edi+0x50]
  4253a0:	not    BYTE PTR [ecx+eax*8]
  4253a3:	sub    esp,DWORD PTR [eax-0x12012627]
  4253a9:	neg    DWORD PTR [edi-0x2c251da]
  4253af:	dec    edx
  4253b0:	or     DWORD PTR [eax-0x77],esi
  4253b3:	and    al,BYTE PTR [edi+0x78c71f16]
  4253b9:	(bad)  
  4253ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253bb:	and    DWORD PTR [esi],ebx
  4253bd:	mov    bh,cl
  4253bf:	push   0x12
  4253c1:	call   0x98559ab0
  4253c6:	mov    WORD PTR [ebx],fs
  4253c8:	popa   
  4253c9:	mov    DWORD PTR [ebp+0x2f981809],edi
  4253cf:	xchg   esp,eax
  4253d0:	cmp    eax,DWORD PTR [ebp-0x1e]
  4253d3:	mov    al,ds:0x9c4c4bc1
  4253d8:	test   BYTE PTR [edi],dl
  4253da:	adc    edi,DWORD PTR [esi]
  4253dc:	(bad)  
  4253dd:	sti    
  4253de:	pop    DWORD PTR [edi-0x32850fe2]
  4253e4:	fs jp  0x42541f
  4253e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253e8:	(bad)  
  4253e9:	shl    ebx,1
  4253eb:	loope  0x425449
  4253ed:	cmp    BYTE PTR [ecx],ah
  4253ef:	les    ebx,FWORD PTR [ecx-0x7d0c8da4]
  4253f5:	int    0xa3
  4253f7:	jne    0x4253aa
  4253f9:	fisttp WORD PTR [ecx-0x50]
  4253fc:	shr    edx,1
  4253fe:	dec    esp
  4253ff:	out    0x8e,al
  425401:	mov    esi,0x8ff46139
  425406:	rcr    BYTE PTR [esp+ebp*2],0xda
  42540a:	sbb    cl,bl
  42540c:	sbb    DWORD PTR cs:[esi+ecx*2],edx
  425410:	call   0x85cc:0xbf6089a9
  425417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425418:	adc    DWORD PTR [edx-0x41],eax
  42541b:	push   ds
  42541c:	or     al,BYTE PTR [ebp+ecx*1-0x6ddb65ca]
  425423:	sahf   
  425424:	repz sub dl,ah
  425427:	inc    edx
  425428:	cmp    ch,cl
  42542a:	xor    DWORD PTR [ebx-0x44],0x77
  42542e:	test   DWORD PTR [ebx],0x10586dfe
  425434:	xor    DWORD PTR [edx+0x3b],esp
  425437:	jbe    0x42549a
  425439:	add    ebp,ebp
  42543b:	or     ecx,DWORD PTR [si-0x559a]
  425440:	into   
  425441:	pop    esi
  425442:	es jl  0x42544e
  425445:	mov    eax,ds:0xcad46a1
  42544a:	pop    edx
  42544b:	dec    esi
  42544c:	retf   
  42544d:	push   cs
  42544e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42544f:	neg    DWORD PTR [esi]
  425451:	mov    edx,0x19b7d20e
  425456:	test   al,0xc2
  425458:	jb     0x4253f1
  42545a:	push   ds
  42545b:	mov    cl,0x90
  42545d:	cmc    
  42545e:	push   es
  42545f:	call   0xf7df6eea
  425464:	pop    DWORD PTR ds:0xcd3e218f
  42546a:	push   es
  42546b:	mov    bh,0x96
  42546d:	(bad)  
  42546e:	es adc esi,edi
  425471:	repz dec esi
  425473:	(bad)  
  425474:	mov    WORD PTR [ebp+0x1e],ds
  425477:	rcl    DWORD PTR [ebx-0x54dffd24],cl
  42547d:	xor    eax,ebp
  42547f:	dec    edi
  425480:	mov    edx,DWORD PTR [ebx-0x98b6af1]
  425486:	out    0xb0,eax
  425488:	lods   eax,DWORD PTR ds:[esi]
  425489:	out    0xcd,al
  42548b:	jbe    0x42550b
  42548d:	mov    dl,bh
  42548f:	add    BYTE PTR [edi-0x50be840e],bl
  425495:	sub    DWORD PTR [edi-0x79],eax
  425498:	add    BYTE PTR [eax+0x26],dh
  42549b:	sub    DWORD PTR ds:0xc58713fc,esp
  4254a1:	push   edi
  4254a2:	add    eax,0xc0ecaede
  4254a7:	pop    esp
  4254a8:	inc    eax
  4254a9:	inc    eax
  4254aa:	dec    eax
  4254ab:	out    0xbb,eax
  4254ad:	lea    eax,[edx]
  4254af:	mov    dl,0xb0
  4254b1:	popf   
  4254b2:	push   ebx
  4254b3:	rcr    DWORD PTR [esi-0x5712ec98],0xab
  4254ba:	pop    edi
  4254bb:	idiv   BYTE PTR [ecx-0x31d57b89]
  4254c1:	cmc    
  4254c2:	or     al,0x63
  4254c4:	push   ds
  4254c5:	or     DWORD PTR [edi+ebx*1+0x7a50b8a1],ecx
  4254cc:	or     eax,0x453119a6
  4254d1:	and    DWORD PTR [esi],edx
  4254d3:	iret   
  4254d4:	outs   dx,BYTE PTR ds:[esi]
  4254d5:	mov    bh,0x6b
  4254d7:	add    dh,BYTE PTR [edx+0x37572ddb]
  4254dd:	sar    BYTE PTR [edx-0x7d0b13e3],1
  4254e3:	push   eax
  4254e4:	inc    esp
  4254e5:	adc    DWORD PTR [eax+0x6e19cb82],edi
  4254eb:	lods   al,BYTE PTR ds:[esi]
  4254ec:	jbe    0x425541
  4254ee:	rcr    BYTE PTR [edi-0x300a176d],cl
  4254f4:	add    eax,0x2d208b78
  4254f9:	dec    edi
  4254fa:	or     DWORD PTR [edi],ebx
  4254fc:	pop    esi
  4254fd:	enter  0xbd10,0x87
  425501:	pop    ss
  425502:	pop    esp
  425503:	sar    DWORD PTR [esi],1
  425505:	mov    dl,BYTE PTR [edi+0x57c9cd12]
  42550b:	adc    ah,cl
  42550d:	ret    0x5bf2
  425510:	lahf   
  425511:	test   al,0xbf
  425513:	enter  0x4661,0x86
  425517:	scas   eax,DWORD PTR es:[edi]
  425518:	cdq    
  425519:	xlat   BYTE PTR ds:[ebx]
  42551a:	sub    eax,0x5a2bf247
  42551f:	inc    edx
  425520:	(bad)  
  425521:	push   eax
  425522:	mov    bl,0xb7
  425524:	jg     0x4254e2
  425526:	sub    bl,bh
  425528:	lods   al,BYTE PTR ds:[esi]
  425529:	push   ecx
  42552a:	fdivr  DWORD PTR [edx]
  42552c:	out    dx,al
  42552d:	fwait
  42552e:	and    dl,dl
  425530:	addr16 inc esp
  425532:	cmp    eax,0x71c4fe9f
  425537:	push   ebp
  425538:	jg     0x4254d8
  42553a:	(bad)  [edi]
  42553c:	sub    BYTE PTR [ebx+0x3c],dh
  42553f:	mov    BYTE PTR [ecx-0x7209b742],ch
  425545:	repnz (bad) 
  425547:	daa    
  425548:	add    ch,0x26
  42554b:	lods   al,BYTE PTR ds:[esi]
  42554c:	pop    ecx
  42554d:	loopne 0x4255c8
  42554f:	adc    bl,BYTE PTR [edx-0x27]
  425552:	(bad)  
  425553:	mov    dl,0x0
  425555:	and    eax,0x8c5ac12
  42555a:	mov    al,ds:0xd121c300
  42555f:	dec    eax
  425560:	repz clc 
  425562:	fld    TBYTE PTR [ebx+0x202892a0]
  425568:	sbb    edx,esp
  42556a:	cmp    BYTE PTR [edi-0x5b],0xce
  42556e:	add    DWORD PTR [eax],eax
  425570:	xchg   DWORD PTR [edx],eax
  425572:	add    BYTE PTR [eax],al
  425574:	and    BYTE PTR gs:[esi-0x287f9ac7],dl
  42557b:	enter  0xa482,0xfc
  42557f:	inc    BYTE PTR [ebp-0x1d]
  425582:	xchg   edi,eax
  425583:	push   ds
  425584:	stos   DWORD PTR es:[edi],eax
  425585:	loope  0x425516
  425587:	pop    ds
  425588:	fsub   DWORD PTR [esi-0x64660c5c]
  42558e:	inc    ebx
  42558f:	cmc    
  425590:	cwde   
  425591:	or     al,0x98
  425593:	stos   BYTE PTR es:[edi],al
  425594:	outs   dx,BYTE PTR ds:[esi]
  425595:	in     al,dx
  425596:	leave  
  425597:	out    dx,al
  425598:	popf   
  425599:	xor    BYTE PTR [ecx-0xe],dh
  42559c:	push   0xfffffffe
  42559e:	mov    ebp,0x61d56d1f
  4255a3:	and    bl,dl
  4255a5:	test   bl,0xfb
  4255a8:	jo     0x4255f5
  4255aa:	imul   ecx,DWORD PTR [eax+ebp*8],0x17
  4255ae:	mov    al,ds:0x34ede064
  4255b3:	add    ebp,DWORD PTR [bx]
  4255b6:	sti    
  4255b7:	outs   dx,DWORD PTR ds:[esi]
  4255b8:	lods   al,BYTE PTR ds:[esi]
  4255b9:	out    0x64,al
  4255bb:	jne    0x4255b7
  4255bd:	and    eax,0x44054f0e
  4255c2:	in     al,0xcd
  4255c4:	daa    
  4255c5:	mov    BYTE PTR [esi],dh
  4255c7:	cdq    
  4255c8:	mov    ecx,0x3cf07792
  4255cd:	das    
  4255ce:	inc    esp
  4255cf:	pop    esi
  4255d0:	push   es
  4255d1:	icebp  
  4255d2:	jo     0x425586
  4255d4:	cdq    
  4255d5:	add    al,BYTE PTR [ebx+ebx*2]
  4255d8:	jbe    0x425585
  4255da:	xor    DWORD PTR [ebx],edx
  4255dc:	cmp    esi,DWORD PTR gs:[eax]
  4255df:	adc    ebx,DWORD PTR [edi-0x75c10690]
  4255e5:	mov    ebp,DWORD PTR [edx]
  4255e7:	fdivrp st(1),st
  4255e9:	adc    edx,edx
  4255eb:	push   ebx
  4255ec:	bound  esp,QWORD PTR ds:0x2b460a2b
  4255f2:	push   es
  4255f3:	in     eax,dx
  4255f4:	adc    BYTE PTR [eax-0x70fd6c9],al
  4255fa:	ja     0x425674
  4255fc:	push   ebp
  4255fd:	sbb    al,0x5
  4255ff:	add    BYTE PTR [ebp+0x2eed50ee],al
  425605:	aas    
  425606:	inc    edi
  425607:	das    
  425608:	inc    edi
  425609:	(bad)  
  42560a:	or     al,0x14
  42560c:	inc    esp
  42560d:	push   ebx
  42560e:	xor    eax,0xdd4647aa
  425613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425614:	in     al,dx
  425615:	or     al,0xa8
  425618:	inc    esi
  425619:	mov    BYTE PTR [ecx],bl
  42561b:	mov    eax,ds:0xd8326aa9
  425620:	jnp    0x425673
  425622:	or     ebx,ebx
  425624:	mov    ebx,0xaf0e83a2
  425629:	cld    
  42562a:	test   eax,0x8dbcd087
  42562f:	scas   eax,DWORD PTR es:[edi]
  425630:	xchg   ecx,eax
  425631:	ror    BYTE PTR [edx],cl
  425633:	(bad)  
  425634:	jb     0x4256a2
  425636:	inc    eax
  425637:	repnz sub BYTE PTR [edx+0x14536b25],0x44
  42563f:	mov    esp,0x196d6b45
  425644:	imul   ebx,DWORD PTR [ebx+esi*8],0x41
  425648:	gs adc dl,ah
  42564b:	jbe    0x4256b6
  42564d:	add    esp,DWORD PTR [edx+eiz*4+0x215ad325]
  425654:	mov    ecx,0xf683cd5a
  425659:	lds    eax,FWORD PTR [eax]
  42565b:	lods   eax,DWORD PTR ds:[esi]
  42565c:	aas    
  42565d:	in     eax,dx
  42565e:	or     bl,BYTE PTR [eax-0x79c5030]
  425664:	pusha  
  425665:	rcl    DWORD PTR [edi],1
  425667:	lea    edx,[ecx+0x6b6fec4f]
  42566d:	fdivr  st,st(6)
  42566f:	fst    QWORD PTR [esp+ebx*4+0x540d2872]
  425676:	loopne 0x42565b
  425678:	out    dx,al
  425679:	or     al,0x97
  42567b:	mov    edx,0x72a786c1
  425680:	dec    edx
  425681:	sub    DWORD PTR [ebp+0x618c0ea1],edx
  425687:	into   
  425688:	xchg   edx,eax
  425689:	mov    esp,0xbb4dd83d
  42568e:	(bad)  
  42568f:	mov    ch,0x44
  425691:	push   ds
  425692:	out    dx,eax
  425693:	out    0x59,eax
  425695:	std    
  425696:	jnp    0x4256c7
  425698:	or     ebx,ecx
  42569a:	pop    edx
  42569b:	inc    eax
  42569c:	jbe    0x4256fc
  42569e:	add    ecx,DWORD PTR [edx+ebp*1+0x2ce5d450]
  4256a5:	lea    eax,[esi-0x70ce18e7]
  4256ab:	bound  eax,QWORD PTR [edx-0x59]
  4256ae:	pop    ebx
  4256af:	push   eax
  4256b0:	xor    BYTE PTR [ecx+0x58],0x7e
  4256b4:	jmp    0x328fd352
  4256b9:	ss pop ss
  4256bb:	retf   
  4256bc:	mov    BYTE PTR [edx],0xf7
  4256bf:	imul   esi,ecx,0xcc4b40cc
  4256c5:	mov    bl,0xfe
  4256c7:	cmp    al,0x7c
  4256c9:	fs or  ecx,0xffffff8b
  4256cd:	adc    al,0x7b
  4256cf:	popa   
  4256d0:	sub    al,0x74
  4256d3:	sar    BYTE PTR [ecx],1
  4256d5:	pop    eax
  4256d6:	in     eax,0x77
  4256d8:	aad    0xe8
  4256da:	ds sub al,0x95
  4256dd:	fxch   st(6)
  4256df:	data16 fdiv QWORD PTR [ebp+eax*2+0x47]
  4256e4:	adc    al,0x4d
  4256e6:	dec    ebx
  4256e7:	adc    cl,BYTE PTR [esi]
  4256e9:	jge    0x425693
  4256eb:	mov    ecx,0xcfb94faa
  4256f0:	xor    al,0x5a
  4256f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256f3:	jb     0x425758
  4256f5:	mov    ecx,0xd335569a
  4256fa:	pusha  
  4256fb:	push   ds
  4256fc:	pop    esp
  4256fd:	push   ss
  4256fe:	test   BYTE PTR [eax],dl
  425700:	pop    es
  425701:	int    0xa2
  425703:	aaa    
  425704:	xchg   ebp,eax
  425705:	outs   dx,DWORD PTR ds:[esi]
  425706:	mov    al,ds:0x91abf055
  42570b:	add    al,0xfe
  42570d:	fldcw  WORD PTR [esi-0x7cc7cf8d]
  425713:	cmp    al,ch
  425715:	sbb    al,0x59
  425717:	daa    
  425718:	inc    esi
  425719:	dec    edx
  42571a:	adc    DWORD PTR [edx],edx
  42571c:	sub    eax,esi
  42571e:	pop    ss
  42571f:	push   0x23
  425721:	cmp    BYTE PTR [eax+0x1e],bl
  425724:	push   0xffffffb1
  425726:	imul   edi
  425728:	retf   0xbdcf
  42572b:	fist   DWORD PTR [ebp-0x16]
  42572e:	inc    ebp
  42572f:	imul   ah
  425731:	mov    edx,0x6c83cbec
  425736:	xchg   edx,eax
  425737:	loopne 0x4256ff
  425739:	rol    DWORD PTR [edi],1
  42573b:	shr    ebp,1
  42573d:	push   DWORD PTR [eax+0x126b4735]
  425743:	xchg   ecx,eax
  425744:	mov    WORD PTR [edi],ss
  425746:	ja     0x425722
  425748:	and    ah,BYTE PTR [ebp-0x300cdb6]
  42574e:	jnp    0x4257b2
  425750:	jbe    0x425701
  425752:	pop    DWORD PTR [ebp+ebx*1-0x1593c94e]
  425759:	fbld   TBYTE PTR [esi-0x6]
  42575c:	sub    di,bp
  42575f:	stos   DWORD PTR es:[edi],eax
  425760:	repnz cmp cl,BYTE PTR [esi+ebx*1+0x4b]
  425765:	iret   
  425766:	mov    esi,0x4c9ef638
  42576b:	imul   eax,DWORD PTR [ecx+0x6e],0x9464638c
  425772:	adc    al,0x26
  425774:	mov    cl,0xcf
  425776:	xchg   edi,eax
  425777:	xlat   BYTE PTR ds:[ebx]
  425778:	bound  esp,QWORD PTR [edx+0x55]
  42577b:	div    edx
  42577d:	or     BYTE PTR [eax],dl
  42577f:	sub    esi,DWORD PTR [edi-0x74]
  425782:	push   edi
  425783:	ds (bad) 
  425785:	xor    eax,0xfe109d64
  42578a:	mov    eax,DWORD PTR [ebx]
  42578c:	add    edx,ebx
  42578e:	bound  ebx,QWORD PTR [ecx-0x56]
  425791:	push   eax
  425792:	jge    0x4257d2
  425794:	test   al,0x7f
  425796:	jle    0x425797
  425798:	in     eax,dx
  425799:	lahf   
  42579a:	push   ebx
  42579b:	dec    edx
  42579c:	sub    al,0xe0
  42579e:	inc    esp
  42579f:	cld    
  4257a0:	jae    0x4257c9
  4257a2:	ins    BYTE PTR es:[edi],dx
  4257a3:	stos   DWORD PTR es:[edi],eax
  4257a4:	dec    esp
  4257a5:	fdiv   st,st(5)
  4257a7:	ds jo  0x4257aa
  4257aa:	out    dx,al
  4257ab:	lock sbb BYTE PTR [edx],dh
  4257ae:	or     eax,0x6ae117b4
  4257b3:	xchg   BYTE PTR [bx+0x6870],dh
  4257b8:	fidiv  WORD PTR cs:[ebp+0x18]
  4257bc:	pop    esp
  4257bd:	in     eax,0xef
  4257bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257c0:	cmp    eax,0x5e797c97
  4257c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257c6:	or     eax,DWORD PTR [edx]
  4257c8:	ror    BYTE PTR [edx-0x3f],cl
  4257cb:	mov    ds:0x7c607baf,eax
  4257d0:	xor    ebp,esp
  4257d2:	je     0x4257ee
  4257d4:	inc    edx
  4257d5:	js     0x4257a7
  4257d7:	sub    eax,0x4c4f0186
  4257dc:	add    BYTE PTR [eax+0x68adf4ad],0x4a
  4257e3:	pop    es
  4257e4:	pop    edx
  4257e5:	popf   
  4257e6:	cmc    
  4257e7:	dec    edx
  4257e8:	rol    DWORD PTR [esi+eiz*8],cl
  4257eb:	lea    ebp,[esi-0x3e85d442]
  4257f1:	dec    esp
  4257f2:	add    edi,ebp
  4257f4:	cmc    
  4257f5:	rcl    BYTE PTR [edi],1
  4257f7:	out    0xf6,eax
  4257f9:	xor    eax,0xef599a00
  4257ff:	jmp    0x7be157f3
  425804:	inc    ebx
  425805:	pop    ebp
  425806:	pop    esp
  425807:	mov    cl,0xf9
  425809:	inc    esp
  42580b:	mov    ds:0x1d12c,eax
  425810:	xchg   DWORD PTR [edx],eax
  425812:	add    BYTE PTR [eax],al
  425814:	das    
  425815:	std    
  425816:	add    al,0x3a
  425818:	(bad)  
  425819:	xchg   edx,eax
  42581a:	xchg   BYTE PTR [esi+edi*1],dl
  42581d:	shl    DWORD PTR [edi-0x1f],cl
  425820:	adc    dl,bl
  425822:	xlat   BYTE PTR ds:[ebx]
  425823:	mov    BYTE PTR [ebx+0x6ba3ea5a],al
  425829:	xor    eax,0xf197a48f
  42582e:	shl    DWORD PTR ds:0x756f5fed,0xa2
  425835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425836:	cmp    dh,BYTE PTR [ebp-0x7a946a3]
  42583c:	inc    esi
  42583d:	test   dh,al
  42583f:	iret   
  425840:	iret   
  425841:	(bad)  
  425842:	call   0x17e59994
  425847:	out    dx,eax
  425848:	ret    0x554
  42584b:	call   0xe77e40ad
  425850:	int    0xb3
  425852:	and    BYTE PTR [edx],ch
  425854:	ror    dh,cl
  425856:	stos   BYTE PTR es:[edi],al
  425857:	mov    edi,esi
  425859:	mov    esp,0xc3dc5412
  42585e:	and    al,0xa2
  425860:	std    
  425861:	xchg   BYTE PTR [ecx],ch
  425863:	lods   al,BYTE PTR ds:[esi]
  425864:	push   edx
  425865:	fadd   QWORD PTR [ebx]
  425867:	repnz fld TBYTE PTR [esi+0x3abb8a1f]
  42586e:	mov    edx,0x14b8163d
  425873:	pop    eax
  425874:	and    bh,cl
  425876:	(bad)  
  425877:	mov    al,0xe6
  425879:	pop    ebp
  42587a:	lahf   
  42587b:	in     al,0xef
  42587d:	push   0x46
  42587f:	clc    
  425880:	mov    esp,0xace715b1
  425885:	pop    esp
  425886:	inc    ebx
  425887:	pop    edi
  425888:	out    dx,eax
  425889:	or     al,bl
  42588b:	jle    0x4258d7
  42588d:	test   edi,ebp
  42588f:	sbb    BYTE PTR [edx+edi*2-0x49799a0],0xd3
  425897:	inc    ebp
  425898:	mov    ebp,0x352b9c49
  42589d:	out    dx,al
  42589e:	ds loopne 0x4258f4
  4258a1:	pop    ebp
  4258a2:	adc    BYTE PTR [edx],dl
  4258a4:	ins    WORD PTR es:[edi],dx
  4258a6:	xchg   ecx,eax
  4258a7:	pop    edx
  4258a8:	fsub   st(3),st
  4258aa:	and    ecx,DWORD PTR [ebx+0x78a2c9df]
  4258b0:	sbb    al,0x7d
  4258b2:	clc    
  4258b3:	mov    ecx,0x6bf4a02
  4258b8:	lods   eax,DWORD PTR ds:[esi]
  4258b9:	sbb    cl,BYTE PTR [eax+0x44]
  4258bc:	daa    
  4258bd:	xchg   BYTE PTR [ebx],bh
  4258bf:	nop
  4258c0:	dec    esi
  4258c1:	loop   0x425910
  4258c3:	sbb    al,0xa5
  4258c5:	ins    DWORD PTR es:[edi],dx
  4258c6:	jnp    0x425882
  4258c8:	jo     0x4258a5
  4258ca:	inc    esp
  4258cb:	add    al,0xa1
  4258cd:	or     BYTE PTR [ecx+0x34],ch
  4258d0:	fistp  DWORD PTR [edi]
  4258d2:	jns    0x4258b8
  4258d4:	fwait
  4258d5:	sub    BYTE PTR [edx-0x638d3dc6],ah
  4258db:	js     0x425920
  4258dd:	push   0xffffffce
  4258df:	(bad)  
  4258e0:	dec    esi
  4258e1:	aaa    
  4258e2:	jb     0x425865
  4258e4:	inc    eax
  4258e5:	xchg   esp,esi
  4258e7:	add    edx,0xffffff94
  4258ea:	push   cs
  4258eb:	jne    0x425937
  4258ed:	repz mov ebp,esi
  4258f0:	ss in  eax,dx
  4258f2:	loope  0x425905
  4258f4:	sbb    al,0x18
  4258f6:	xchg   edi,eax
  4258f7:	icebp  
  4258f8:	dec    edi
  4258f9:	jmp    0x42591b
  4258fb:	popf   
  4258fc:	rcl    BYTE PTR [ebx],0x70
  4258ff:	push   ds
  425900:	dec    ecx
  425901:	repz mov ss,WORD PTR [eax]
  425904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425905:	sti    
  425906:	mov    ebp,0x80bddcb9
  42590b:	dec    ecx
  42590c:	pop    ss
  42590d:	pop    ds
  42590e:	mov    eax,ds:0xeac22551
  425913:	mov    DWORD PTR ds:0x4f756ac2,ecx
  425919:	mov    edi,0x3fcee2c4
  42591e:	sahf   
  42591f:	cmc    
  425920:	loope  0x42598f
  425922:	dec    esp
  425923:	idiv   BYTE PTR [esi]
  425925:	sbb    DWORD PTR [ebx],edx
  425927:	add    BYTE PTR [edx],0x4c
  42592a:	(bad)  
  42592b:	sar    DWORD PTR ds:0xd87b86fb,cl
  425931:	jl     0x425995
  425933:	rol    BYTE PTR [edx+0x4e8f1eaf],1
  425939:	adc    bl,BYTE PTR [eax]
  42593b:	xchg   edx,eax
  42593c:	push   ds
  42593d:	xchg   ecx,eax
  42593e:	fucomip st,st(7)
  425940:	cmp    cl,dl
  425942:	sub    al,0x1f
  425944:	xchg   ebx,eax
  425945:	pop    ecx
  425946:	jle    0x4258da
  425948:	push   esi
  425949:	cmc    
  42594a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42594b:	push   esp
  42594c:	test   ecx,esi
  42594e:	sbb    esi,0xdc9d3533
  425954:	pop    ebx
  425955:	pop    ebp
  425956:	std    
  425957:	pop    edi
  425958:	inc    edi
  425959:	mov    dl,0x8b
  42595c:	stos   BYTE PTR es:[edi],al
  42595d:	cmovs  esp,DWORD PTR [eax]
  425960:	add    dh,dl
  425962:	lods   eax,DWORD PTR ds:[esi]
  425963:	les    ecx,FWORD PTR [eax+0x5a7c9f60]
  425969:	call   0xa112:0x601cf5ea
  425970:	aas    
  425971:	mov    ecx,0xccb647ec
  425976:	jge    0x42595e
  425978:	sub    eax,0x199e05fb
  42597d:	add    DWORD PTR [edi+0x44],ebx
  425980:	nop
  425981:	and    DWORD PTR [ebp+0x11],esi
  425984:	call   0x46648c4c
  425989:	ja     0x4259f5
  42598b:	mov    esp,0xe4c27dd6
  425990:	mov    al,BYTE PTR [ebp+ebx*2+0x700ad357]
  425997:	xor    eax,0x6e8bc4c3
  42599c:	add    dh,BYTE PTR [ecx]
  42599e:	js     0x425992
  4259a0:	test   eax,0xe72b19ee
  4259a5:	inc    edi
  4259a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259a8:	mov    DWORD PTR [eax],ecx
  4259aa:	mov    esi,0x9bbbb979
  4259af:	aas    
  4259b0:	jae    0x425a1d
  4259b2:	xlat   BYTE PTR ds:[ebx]
  4259b3:	and    BYTE PTR [esi+0x91c1bef],cl
  4259b9:	sub    edx,DWORD PTR [ebx]
  4259bb:	push   cs
  4259bc:	arpl   WORD PTR [ebx+0x1b150e72],sp
  4259c2:	rcr    BYTE PTR [esi-0x36],1
  4259c5:	sub    al,BYTE PTR [ebp+0x5cbe0a92]
  4259cb:	xor    eax,0x6d5b9ffd
  4259d0:	mov    edx,0x660d248f
  4259d5:	popf   
  4259d6:	mov    esp,0x995d05d8
  4259db:	test   DWORD PTR [ebp-0x7326529a],edi
  4259e1:	inc    ebx
  4259e2:	nop
  4259e3:	fld    TBYTE PTR [ebx+0x542b70d9]
  4259e9:	xor    dh,BYTE PTR [esi]
  4259eb:	enter  0xabd8,0xd9
  4259ef:	mov    BYTE PTR [ebx+0x6a],ch
  4259f2:	lea    esi,[ebx]
  4259f4:	mov    eax,ds:0x3f5b2126
  4259f9:	std    
  4259fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259fb:	pop    esi
  4259fc:	push   cs
  4259fd:	psrlw  mm5,QWORD PTR [ebp+0x50bb077c]
  425a04:	xchg   esi,eax
  425a05:	sub    eax,0xe6a7bf1c
  425a0a:	fsubr  DWORD PTR [esp+edi*8+0x4b3aa3d4]
  425a11:	pop    ebx
  425a12:	(bad)  
  425a14:	jle    0x425a18
  425a16:	inc    ebx
  425a17:	jo     0x425a83
  425a19:	mov    WORD PTR [esi+eax*2-0x7e76059c],?
  425a20:	dec    ecx
  425a21:	push   esi
  425a22:	int3   
  425a23:	jno    0x425a72
  425a25:	push   esi
  425a26:	sar    DWORD PTR [esi+eiz*2],0xf3
  425a2a:	xchg   esp,eax
  425a2b:	xchg   ebx,eax
  425a2c:	(bad)  
  425a2d:	jmp    0x425a84
  425a2f:	pop    ebp
  425a30:	mov    esp,0x5f40fbb0
  425a35:	pop    ebx
  425a36:	or     BYTE PTR [edi+0x71],0x45
  425a3a:	pop    ecx
  425a3b:	dec    ecx
  425a3c:	adc    DWORD PTR [edx+0x4159a9d1],ebx
  425a42:	xchg   esp,eax
  425a43:	or     eax,0xfc9184a7
  425a48:	pop    ss
  425a49:	inc    ebx
  425a4a:	push   esi
  425a4b:	mov    bl,BYTE PTR [ebx-0x19ab08a3]
  425a51:	ja     0x425a0b
  425a53:	dec    esp
  425a54:	pop    cx
  425a56:	iret   
  425a57:	pop    ebp
  425a58:	lds    ecx,FWORD PTR [ebp+0x588280d4]
  425a5e:	xchg   edi,eax
  425a5f:	xchg   bh,dl
  425a61:	sbb    edx,DWORD PTR [ebp-0x5b7ca165]
  425a67:	cmp    al,0x1d
  425a69:	push   cs
  425a6a:	jns    0x425a23
  425a6c:	push   cs
  425a6d:	in     eax,dx
  425a6e:	jo     0x425adb
  425a70:	aam    0x88
  425a72:	cld    
  425a73:	adc    DWORD PTR [edi-0x16],0x7
  425a77:	fcomp  QWORD PTR [ebp-0x57]
  425a7a:	lea    eax,[edx]
  425a7c:	sbb    cl,dl
  425a7e:	stc    
  425a7f:	lods   al,BYTE PTR ds:[esi]
  425a80:	bound  edi,QWORD PTR [edi]
  425a82:	aam    0x51
  425a84:	test   ecx,esp
  425a86:	iret   
  425a87:	add    BYTE PTR [edi+0x7dc62f0c],bl
  425a8d:	adc    cl,BYTE PTR [ebx+0x1f36e64d]
  425a93:	mov    esi,0x9cab6ca2
  425a98:	inc    ebx
  425a99:	pop    ecx
  425a9a:	xchg   DWORD PTR [eax],eax
  425a9c:	(bad)  
  425a9d:	rol    BYTE PTR [edi],0x37
  425aa0:	dec    edi
  425aa1:	idiv   DWORD PTR [ebp+0x532a00fa]
  425aa7:	fld    QWORD PTR [edx-0x4c90cea0]
  425aad:	rol    DWORD PTR [ecx],cl
  425aaf:	add    BYTE PTR [edi+0x2],al
  425ab5:	cmp    BYTE PTR [ebp-0x55],cl
  425ab8:	enter  0x62c3,0xdd
  425abc:	pop    esp
  425abd:	sar    DWORD PTR [esi],0x58
  425ac0:	ret    
  425ac1:	in     al,dx
  425ac2:	add    ebx,eax
  425ac4:	outs   dx,BYTE PTR ds:[esi]
  425ac5:	sub    DWORD PTR [ebx+0x32d7e3d9],ebp
  425acb:	xchg   bh,cl
  425acd:	mov    DWORD PTR [eax],esi
  425acf:	or     al,0xf
  425ad1:	repz xchg ecx,eax
  425ad3:	jg     0x425a71
  425ad5:	pop    edx
  425ad6:	xor    BYTE PTR [ecx-0x1c4b1c5b],bl
  425adc:	daa    
  425add:	or     al,0x75
  425adf:	or     DWORD PTR [eax-0x25da27ad],ecx
  425ae5:	repnz dec esi
  425ae7:	and    eax,esp
  425ae9:	and    al,0x82
  425aeb:	sbb    DWORD PTR [eax+0xd],0xd187f01f
  425af2:	lea    eax,[ebx+0x15]
  425af5:	push   cs
  425af6:	jge    0x425b41
  425af8:	sti    
  425af9:	cli    
  425afa:	es cs rol ebx,cl
  425afe:	xchg   ah,dh
  425b00:	jg     0x425adc
  425b02:	cmp    ecx,DWORD PTR [ebx]
  425b04:	out    0xc9,al
  425b06:	sahf   
  425b07:	inc    ebp
  425b08:	xor    eax,0xe83d16aa
  425b0d:	mov    DWORD PTR ds:0xd917b1f,edx
  425b13:	sbb    dl,bh
  425b15:	push   ds
  425b16:	icebp  
  425b17:	nop
  425b18:	outs   dx,BYTE PTR ds:[esi]
  425b19:	lahf   
  425b1a:	das    
  425b1b:	pop    edi
  425b1c:	mov    ds:0x98fa4061,eax
  425b21:	cmp    al,0x2
  425b23:	leave  
  425b24:	je     0x425b07
  425b26:	pusha  
  425b27:	fild   WORD PTR [ebx+0x4590968b]
  425b2d:	pop    ebx
  425b2e:	push   ds
  425b2f:	cdq    
  425b30:	dec    BYTE PTR [eax]
  425b32:	out    0xe0,eax
  425b34:	fisub  DWORD PTR [edx+0x5a63f77d]
  425b3a:	inc    esp
  425b3b:	mov    ch,0x7
  425b3d:	push   ebp
  425b3e:	push   ebx
  425b3f:	pop    ebp
  425b40:	and    DWORD PTR [edx],eax
  425b42:	mov    esp,0xd7821205
  425b47:	into   
  425b48:	or     eax,0x900096a
  425b4d:	xlat   BYTE PTR ds:[ebx]
  425b4e:	fcom   QWORD PTR [esi]
  425b50:	push   0xffffff98
  425b52:	mov    ebp,DWORD PTR [esi]
  425b54:	inc    eax
  425b55:	retf   0xbf58
  425b58:	jnp    0x425ae1
  425b5a:	push   ebp
  425b5b:	test   eax,0xcc8d2f7
  425b60:	je     0x425b1f
  425b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b63:	pop    esi
  425b64:	mov    al,0x18
  425b66:	ror    DWORD PTR [ebx+0x11],0x1
  425b6a:	xchg   ecx,eax
  425b6b:	(bad)  
  425b6c:	xor    al,0x79
  425b6e:	dec    ecx
  425b6f:	sub    eax,0x44897757
  425b74:	push   0xd6141b87
  425b79:	lea    esp,[ebx-0x68db4a29]
  425b7f:	mov    ch,0xd5
  425b81:	shl    BYTE PTR [esi],1
  425b83:	jb     0x425b6f
  425b85:	mov    ch,0x7e
  425b87:	add    al,0x8c
  425b89:	adc    BYTE PTR [ecx-0x104595cb],0x22
  425b90:	(bad)  
  425b91:	rcl    BYTE PTR [edx-0x17706c3d],1
  425b97:	out    dx,al
  425b98:	inc    ebp
  425b99:	clc    
  425b9a:	cmp    BYTE PTR [ebp-0x3],0x5f
  425b9e:	xchg   edx,eax
  425b9f:	xchg   ebp,eax
  425ba0:	sub    BYTE PTR [ebx],dh
  425ba2:	sbb    ebp,DWORD PTR [ecx+ebp*2]
  425ba5:	mov    ds,WORD PTR [esi+0x205df713]
  425bab:	sbb    BYTE PTR [ecx-0x7],cl
  425bae:	jg     0x425bec
  425bb0:	pop    ds
  425bb1:	mov    esi,0xac0c8da0
  425bb6:	(bad)  
  425bb7:	fist   DWORD PTR [ebx]
  425bb9:	dec    edx
  425bba:	sub    eax,0x6dfef7f4
  425bbf:	in     al,dx
  425bc0:	data16 jbe 0x425bff
  425bc3:	fwait
  425bc4:	js     0x425bdf
  425bc6:	addr16 sahf 
  425bc8:	leave  
  425bc9:	jl     0x425b4e
  425bcb:	outs   dx,BYTE PTR ds:[esi]
  425bcc:	out    dx,eax
  425bcd:	sbb    cl,dl
  425bcf:	inc    edx
  425bd0:	aam    0x3a
  425bd2:	imul   ebx,DWORD PTR [edx+0x23],0xfffffff5
  425bd6:	fdiv   QWORD PTR [edx]
  425bd8:	push   es
  425bd9:	add    DWORD PTR [eax+0x206d809e],0x1091c3fd
  425be3:	or     DWORD PTR [esi+0x76819193],edx
  425be9:	scas   eax,DWORD PTR es:[edi]
  425bea:	or     eax,0x9ea4d05e
  425bef:	test   BYTE PTR [ebx+0x53],dl
  425bf2:	cli    
  425bf3:	cmp    DWORD PTR [edx+0x58cf2d23],ecx
  425bf9:	mul    BYTE PTR [eax+0x7f23fd83]
  425bff:	jge    0x425c6f
  425c01:	sti    
  425c02:	mov    ecx,0xd70faaa3
  425c07:	js     0x425c80
  425c09:	ja     0x425b9c
  425c0b:	push   bx
  425c0d:	push   ss
  425c0e:	test   eax,0x486e450c
  425c13:	jecxz  0x425bf6
  425c15:	fnstenv [edi-0x48]
  425c18:	inc    esi
  425c19:	(bad)  
  425c1b:	add    eax,0x3bb847c0
  425c20:	pop    esp
  425c21:	or     ebp,ebp
  425c23:	icebp  
  425c24:	sub    dl,BYTE PTR [edx]
  425c26:	aam    0x3c
  425c28:	mov    BYTE PTR [ecx+0x15c93630],ah
  425c2e:	pop    ecx
  425c2f:	std    
  425c30:	cmp    DWORD PTR fs:0xb91803c,edi
  425c37:	mov    bh,0xad
  425c39:	scas   eax,DWORD PTR es:[edi]
  425c3a:	leave  
  425c3b:	les    esi,FWORD PTR [edi]
  425c3d:	jne    0x425c99
  425c3f:	or     ch,BYTE PTR es:[ecx]
  425c42:	mov    dh,0x10
  425c44:	retf   0x5335
  425c47:	xor    DWORD PTR [esp+ecx*8+0x46a45eb8],ebx
  425c4e:	aad    0x4c
  425c50:	and    cl,BYTE PTR [eax+ebx*8+0x390b4efb]
  425c57:	mov    bh,0x15
  425c59:	xor    DWORD PTR [edx+0x2a93631b],eax
  425c5f:	or     al,0xc3
  425c61:	call   0xfd44:0x9152851d
  425c68:	jo     0x425c6a
  425c6a:	pop    ss
  425c6b:	pushf  
  425c6c:	sbb    eax,0xae3f07e8
  425c71:	and    al,ch
  425c73:	xor    ah,BYTE PTR [edi-0x23]
  425c76:	ja     0x425ce2
  425c78:	mov    ecx,0x4b1df511
  425c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c7e:	or     al,0x2c
  425c80:	xlat   BYTE PTR ds:[ebx]
  425c81:	out    dx,al
  425c82:	or     al,0x9d
  425c84:	mov    dh,0x23
  425c86:	inc    eax
  425c87:	add    BYTE PTR [eax-0x29],bl
  425c8a:	fwait
  425c8b:	mov    fs,WORD PTR [edi-0x503e8005]
  425c91:	xchg   esp,eax
  425c92:	or     bh,bh
  425c94:	fwait
  425c95:	(bad)  
  425c96:	std    
  425c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c98:	and    esp,DWORD PTR [edx]
  425c9a:	mov    dl,0x74
  425c9c:	test   al,0x4a
  425c9e:	adc    DWORD PTR ds:0xaa15b85b,esp
  425ca4:	(bad)  
  425ca8:	cmc    
  425ca9:	in     al,0xdb
  425cab:	loop   0x425cc7
  425cad:	jg     0x425ce8
  425caf:	repz jnp 0x425cde
  425cb2:	push   ecx
  425cb3:	and    BYTE PTR [esi],0xe8
  425cb6:	ins    DWORD PTR es:[edi],dx
  425cb7:	(bad)  
  425cb8:	data16 cli 
  425cba:	mov    eax,0xd83f8506
  425cbf:	mov    ds:0x351ce642,eax
  425cc4:	rcr    BYTE PTR [esi+0x3d],0x99
  425cc8:	pop    ds
  425cc9:	push   esi
  425cca:	xor    BYTE PTR [ebx],bh
  425ccc:	in     eax,dx
  425ccd:	push   0xfffffffa
  425ccf:	dec    edi
  425cd0:	sar    BYTE PTR [esi+0x66],0x43
  425cd4:	and    eax,0x36c5f17b
  425cd9:	push   esp
  425cda:	dec    ebp
  425cdb:	pop    es
  425cdc:	fist   DWORD PTR [edx+0x7aca091f]
  425ce2:	push   ebp
  425ce3:	inc    esp
  425ce4:	or     BYTE PTR ds:0xac6f0d3,al
  425cea:	pop    esp
  425ceb:	pusha  
  425cec:	aas    
  425ced:	push   cs
  425cee:	mov    ds:0x125fefe5,al
  425cf3:	sub    esi,DWORD PTR [esi+0x2a]
  425cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cf7:	ret    0xa78d
  425cfa:	mov    ds:0xfe33ce9e,eax
  425cff:	mov    DWORD PTR [edi-0x3adf34b],ebx
  425d05:	jl     0x425caa
  425d07:	mov    cs,ecx
  425d09:	sub    ebp,DWORD PTR [eax-0x4]
  425d0c:	cmp    ch,BYTE PTR [ecx]
  425d0e:	or     BYTE PTR [edx+0x7f],bl
  425d11:	aas    
  425d12:	inc    eax
  425d13:	and    bl,ah
  425d15:	adc    DWORD PTR [edx-0x52],ebx
  425d18:	hlt    
  425d19:	(bad)  
  425d1a:	mov    ds:0xadf9f55,eax
  425d1f:	xor    DWORD PTR [ecx],0xd1113a20
  425d25:	pop    esi
  425d26:	inc    eax
  425d27:	and    BYTE PTR [ebx+0x49e4c21a],ah
  425d2d:	or     DWORD PTR [eax-0x65],esi
  425d30:	pop    esi
  425d31:	(bad)
  425d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d35:	enter  0x4483,0x59
  425d39:	(bad)  
  425d3a:	cmp    al,0x0
  425d3c:	mov    al,0x8a
  425d3e:	call   0xfa2657c4
  425d43:	mov    ebx,0x99242062
  425d48:	adc    ecx,esi
  425d4a:	sub    eax,0x1d63aaa
  425d4f:	add    BYTE PTR [edi-0x11fffffe],al
  425d55:	pop    eax
  425d56:	pop    ecx
  425d57:	jle    0x425d36
  425d59:	dec    edi
  425d5a:	adc    eax,DWORD PTR [ebp+0x7d]
  425d5d:	(bad)  
  425d5e:	stos   BYTE PTR es:[edi],al
  425d5f:	fldenv [esi]
  425d61:	xor    ah,BYTE PTR [eax-0x28e36d83]
  425d67:	call   0x69d1:0x89f958cd
  425d6e:	test   DWORD PTR [ebp+ecx*2-0x69828b83],eax
  425d75:	lea    esi,[edx-0x3db3a639]
  425d7b:	repz pop ebx
  425d7d:	mov    dh,0xf4
  425d7f:	lahf   
  425d80:	leave  
  425d81:	dec    ebp
  425d82:	pop    eax
  425d83:	popf   
  425d84:	stos   BYTE PTR es:[edi],al
  425d85:	sbb    al,0x68
  425d87:	div    BYTE PTR [edi]
  425d89:	lahf   
  425d8a:	jge    0x425dcb
  425d8c:	pop    ecx
  425d8d:	sub    DWORD PTR [eax-0x4a],ebp
  425d90:	dec    esp
  425d91:	int3   
  425d92:	pop    ds
  425d93:	ror    BYTE PTR [edi+ebp*1+0x6b],1
  425d97:	pusha  
  425d98:	out    0xb9,al
  425d9a:	das    
  425d9b:	adc    DWORD PTR [ebx-0x27196f5b],0xd8063d3
  425da5:	xchg   esp,eax
  425da6:	in     eax,0x38
  425da8:	push   ecx
  425da9:	adc    al,0x15
  425dab:	call   0xb9d53b5f
  425db0:	sti    
  425db1:	jb     0x425d6e
  425db3:	rcr    DWORD PTR [esi+0x78f9cf16],1
  425db9:	sub    DWORD PTR ss:[eax+0x2c],esp
  425dbd:	pop    ebp
  425dbe:	enter  0xa56c,0xde
  425dc2:	push   edi
  425dc3:	aam    0xf9
  425dc5:	inc    ecx
  425dc6:	fild   QWORD PTR [edx+0x4e]
  425dc9:	push   es
  425dca:	inc    ecx
  425dcb:	retf   
  425dcc:	xchg   esp,eax
  425dcd:	adc    ebx,DWORD PTR [esi]
  425dcf:	jae    0x425e04
  425dd1:	out    0x92,eax
  425dd3:	lea    eax,[ebp-0x4002cfd0]
  425dd9:	test   eax,esp
  425ddb:	(bad)  
  425ddd:	(bad)  
  425ddf:	pop    esi
  425de0:	stc    
  425de1:	or     al,0x4d
  425de4:	stos   BYTE PTR es:[edi],al
  425de5:	scas   eax,DWORD PTR es:[edi]
  425de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425de7:	cmp    dh,dl
  425de9:	adc    BYTE PTR [eax+0x62],cl
  425dec:	dec    esi
  425ded:	fadd   QWORD PTR [esi+edi*1]
  425df0:	dec    edx
  425df1:	lahf   
  425df2:	arpl   WORD PTR [ecx],cx
  425df4:	pop    esi
  425df5:	shl    DWORD PTR [ecx+edx*2],cl
  425df8:	stc    
  425df9:	test   eax,0x69bbc482
  425dfe:	mov    ebx,0xc742e81e
  425e03:	rcl    BYTE PTR [edx],0x70
  425e06:	popa   
  425e07:	dec    eax
  425e08:	outs   dx,BYTE PTR ds:[esi]
  425e09:	int    0x21
  425e0b:	add    bl,cl
  425e0d:	push   edi
  425e0e:	scas   eax,DWORD PTR es:[edi]
  425e0f:	dec    ebx
  425e10:	test   BYTE PTR [ebp+0x6b242efa],cl
  425e16:	adc    al,BYTE PTR [ebp+eiz*1-0x2c]
  425e1a:	add    al,0x36
  425e1c:	lea    ebp,[ebx-0x5a]
  425e1f:	out    0x9e,eax
  425e21:	test   DWORD PTR fs:[edi],0xd43e494
  425e28:	imul   esi,DWORD PTR [ecx],0x23b61ee9
  425e2e:	rcr    dh,1
  425e30:	popa   
  425e31:	mov    al,0x78
  425e33:	out    dx,al
  425e34:	fdiv   DWORD PTR [esi-0x12]
  425e37:	or     DWORD PTR [ecx-0x1045d812],eax
  425e3d:	(bad)  
  425e3e:	sub    dh,bh
  425e40:	imul   ecx,eax,0x20a8f789
  425e46:	or     al,BYTE PTR [ebx]
  425e48:	mov    BYTE PTR [ecx-0x34],ch
  425e4b:	mov    ebx,?
  425e4d:	addr16 mov ss,edx
  425e50:	dec    eax
  425e51:	mov    edx,0x56fe55a9
  425e56:	or     BYTE PTR [esp+eax*1],al
  425e59:	sub    edx,DWORD PTR gs:[ebp+0x1ac4438c]
  425e60:	adc    al,0x1f
  425e62:	push   cs
  425e63:	clc    
  425e64:	sub    esi,ebx
  425e66:	dec    edi
  425e67:	push   edi
  425e68:	ficom  DWORD PTR [edx+0x5c178bfa]
  425e6e:	mov    ss,WORD PTR [esi+eiz*1+0x259f9b6c]
  425e75:	outs   dx,BYTE PTR ds:[esi]
  425e76:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e78:	mov    DWORD PTR [ebx-0x4e5ca0eb],esi
  425e7e:	inc    edi
  425e7f:	xor    ebx,edx
  425e81:	and    al,0xcf
  425e83:	add    eax,esi
  425e85:	scas   al,BYTE PTR es:[edi]
  425e86:	scas   al,BYTE PTR es:[edi]
  425e87:	push   ss
  425e88:	mov    ecx,0xa15e1de9
  425e8d:	sub    eax,0x718a29aa
  425e92:	push   ebp
  425e93:	xor    al,0xab
  425e95:	ss dec ecx
  425e97:	fwait
  425e98:	jo     0x425ef5
  425e9a:	xor    BYTE PTR [ecx+0x53],bh
  425e9d:	pop    eax
  425e9e:	mov    esp,0xc8f47b2b
  425ea3:	shr    esi,1
  425ea5:	cvttps2pi mm1,QWORD PTR [ebx-0x53d7d5d9]
  425eac:	push   ebx
  425ead:	(bad)  
  425eae:	jno    0x425ee4
  425eb0:	test   al,0x77
  425eb2:	push   cs
  425eb3:	mov    ebx,0x7b28ac75
  425eb8:	dec    edx
  425eb9:	call   0xdac9:0xaa843c7
  425ec0:	cmp    dh,BYTE PTR [ebp-0x26]
  425ec3:	mov    BYTE PTR [edx],al
  425ec5:	bound  ecx,QWORD PTR [ebx+eiz*4+0xa]
  425ec9:	pusha  
  425eca:	or     al,0xdd
  425ecc:	bound  esp,QWORD PTR [eax-0x60]
  425ecf:	pop    eax
  425ed0:	mov    eax,ds:0xfae8b8a0
  425ed5:	push   0xffffffa0
  425ed7:	xor    DWORD PTR [edi],ecx
  425ed9:	stos   DWORD PTR es:[edi],eax
  425eda:	(bad)  
  425edb:	jg     0x425f39
  425edd:	lock inc ebx
  425edf:	mov    ecx,0x7cde8836
  425ee4:	mov    WORD PTR [edx-0x7706c2a2],cs
  425eea:	scas   eax,DWORD PTR es:[edi]
  425eeb:	addr16 jl 0x425eaf
  425eee:	retf   
  425eef:	imul   eax,DWORD PTR [edi],0xedd645b9
  425ef5:	or     al,0x54
  425ef7:	cld    
  425ef8:	jmp    0x7ff8:0x6b201aba
  425eff:	xchg   edx,eax
  425f00:	jp     0x425e8a
  425f02:	mov    DWORD PTR ss:[edi+0x4e],edi
  425f06:	push   es
  425f07:	test   eax,0x927408c9
  425f0c:	inc    esp
  425f0d:	cmp    al,0xda
  425f0f:	fwait
  425f10:	pop    ecx
  425f11:	inc    ebx
  425f12:	sbb    ecx,DWORD PTR [ebx+ecx*4-0x6a9b77c7]
  425f19:	fld    DWORD PTR [ebp-0x51337be1]
  425f1f:	adc    al,0x31
  425f21:	and    eax,0x1a19664f
  425f26:	inc    eax
  425f27:	adc    al,0x26
  425f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f2a:	rcl    BYTE PTR [ebx-0x7a38c26],cl
  425f30:	push   DWORD PTR [edx-0xa068b47]
  425f36:	std    
  425f37:	cmc    
  425f38:	aad    0x69
  425f3a:	lahf   
  425f3b:	not    BYTE PTR [ebp-0x65]
  425f3e:	sub    ah,dl
  425f40:	and    ch,BYTE PTR [ebx+0x1a]
  425f43:	dec    edi
  425f44:	(bad)  
  425f45:	out    0x43,al
  425f47:	mov    dh,0x86
  425f49:	push   0xffffff8f
  425f4b:	lods   al,BYTE PTR ds:[esi]
  425f4c:	shl    BYTE PTR [esi+0x71dbf223],0xc6
  425f53:	cmp    BYTE PTR [esi-0x3281ea2b],al
  425f59:	sub    BYTE PTR [edx],ch
  425f5b:	xchg   edx,eax
  425f5c:	ja     0x425ef0
  425f5e:	adc    BYTE PTR [edi],bl
  425f60:	push   ebp
  425f61:	xchg   DWORD PTR [eax+0x4bbf0a61],esi
  425f67:	int3   
  425f68:	inc    edi
  425f69:	push   esp
  425f6a:	retf   
  425f6b:	mov    DWORD PTR [esi+0x20ee1c32],ecx
  425f71:	mov    esi,0x1f6bc1c8
  425f76:	dec    edi
  425f77:	jne    0x425fb0
  425f79:	hlt    
  425f7a:	ins    DWORD PTR es:[edi],dx
  425f7b:	lods   al,BYTE PTR ds:[esi]
  425f7c:	mov    DWORD PTR [ebx+0x3de47c3b],ebp
  425f82:	and    ebp,edx
  425f84:	mov    esi,DWORD PTR [ecx]
  425f86:	push   ebx
  425f87:	adc    edi,DWORD PTR [eax]
  425f89:	push   ebp
  425f8a:	dec    ebx
  425f8b:	xchg   ebp,eax
  425f8c:	push   ebp
  425f8d:	dec    esp
  425f8e:	mov    esp,fs
  425f90:	mov    ecx,0x574df68
  425f95:	out    dx,eax
  425f96:	rol    BYTE PTR [edx+eax*2],0x76
  425f9a:	out    0xb9,al
  425f9c:	cmp    DWORD PTR [esi-0x5c29d35],ecx
  425fa2:	fwait
  425fa3:	and    eax,DWORD PTR [eax]
  425fa5:	mov    ah,0xbb
  425fa7:	fiadd  DWORD PTR [esp+edx*4+0xed4dbeb]
  425fae:	mov    ch,0x49
  425fb0:	jge    0x42602d
  425fb2:	mov    bh,0x5e
  425fb4:	je     0x425fae
  425fb6:	add    esi,esi
  425fb8:	fmul   QWORD PTR [ebx+0x380ac772]
  425fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fbf:	or     eax,0x5c15c78b
  425fc4:	outs   dx,DWORD PTR ds:[esi]
  425fc5:	add    eax,0xc8d96a35
  425fca:	icebp  
  425fcb:	aas    
  425fcc:	or     ebp,DWORD PTR [esi]
  425fce:	xlat   BYTE PTR ds:[ebx]
  425fcf:	xchg   DWORD PTR [eax+0x3ddfac05],ecx
  425fd5:	jnp    0x426047
  425fd7:	sahf   
  425fd8:	inc    esp
  425fd9:	jle    0x425f8e
  425fdb:	add    BYTE PTR [edx-0x39253b74],cl
  425fe1:	ficomp DWORD PTR [esi+0x2983e7dc]
  425fe7:	mov    WORD PTR [edx],fs
  425fe9:	out    dx,al
  425fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425feb:	jmp    0x287:0x1d8c1
  425ff2:	add    BYTE PTR [eax],al
  425ff4:	mov    ds:0x6bf80777,eax
  425ff9:	cmp    eax,ebp
  425ffb:	xor    dh,BYTE PTR [ebx+0x49]
  425ffe:	(bad)  
  425fff:	imul   ebx,edx,0x6560dbb1
  426005:	jns    0x425ff3
  426007:	push   edx
  426008:	sub    ah,BYTE PTR [edx-0x9]
  42600b:	mov    esi,0xb11f26f0
  426010:	sahf   
  426011:	fbld   TBYTE PTR [ecx+0x341086ce]
  426017:	in     eax,0x7c
  426019:	jle    0x426031
  42601b:	push   ss
  42601c:	push   edx
  42601d:	jmp    0x21a0c2ab
  426022:	mov    eax,0xadac3de1
  426027:	or     BYTE PTR [eax-0x6cc53123],ah
  42602d:	in     eax,dx
  42602e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426030:	sub    al,0x56
  426032:	cwde   
  426033:	bound  ecx,QWORD PTR [edx-0x99cd3cc]
  426039:	dec    edi
  42603a:	mov    ah,0xe
  42603c:	(bad)  
  42603e:	shr    BYTE PTR [esi+ebp*4],1
  426041:	or     cl,BYTE PTR [esi-0x52]
  426044:	dec    edi
  426045:	test   DWORD PTR [esi+ecx*4-0x5b],ebx
  426049:	push   0x4f9132cd
  42604e:	pop    esp
  42604f:	dec    ecx
  426050:	into   
  426051:	xlat   BYTE PTR ds:[ebx]
  426052:	and    BYTE PTR ds:0xca54748a,cl
  426058:	ins    DWORD PTR es:[edi],dx
  426059:	fwait
  42605a:	outs   dx,DWORD PTR ds:[esi]
  42605b:	ret    0x473a
  42605e:	mov    ds:0x902e67e8,eax
  426063:	retf   0xcfbf
  426066:	repz icebp 
  426068:	pop    ebp
  426069:	adc    eax,0x85c3a11
  42606e:	cmc    
  42606f:	inc    ecx
  426070:	sbb    BYTE PTR [ecx+0x71],bl
  426073:	rcl    cl,1
  426075:	dec    ecx
  426076:	bound  ebp,QWORD PTR [esi+0x50091859]
  42607c:	pop    esi
  42607d:	retf   0x2856
  426080:	dec    esi
  426081:	retf   
  426082:	scas   eax,DWORD PTR es:[edi]
  426083:	cwde   
  426084:	push   ss
  426085:	addr16 xchg ebp,eax
  426087:	sub    bh,BYTE PTR ds:[ecx]
  42608a:	mov    ebx,DWORD PTR [edx]
  42608c:	sar    DWORD PTR [esp+esi*8],1
  42608f:	push   DWORD PTR ds:0x71aa4378
  426095:	repz xchg edi,eax
  426097:	xor    al,BYTE PTR [ebp+0x2d64fa4]
  42609d:	xchg   BYTE PTR [ecx+0x31d62593],dl
  4260a3:	inc    esi
  4260a4:	bound  esi,QWORD PTR [esi]
  4260a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260a7:	fwait
  4260a8:	add    al,0xf
  4260aa:	or     BYTE PTR [edx+0x632e4d55],0xeb
  4260b1:	mov    al,ds:0xb242b141
  4260b6:	loopne 0x426097
  4260b8:	js     0x4260ce
  4260ba:	lods   eax,DWORD PTR ds:[esi]
  4260bb:	ja     0x4260f2
  4260bd:	mov    edi,0xe2735ed8
  4260c2:	scas   eax,DWORD PTR es:[edi]
  4260c3:	add    cl,BYTE PTR [ebp+0x2a]
  4260c6:	fsub   QWORD PTR ds:0xb38b785
  4260cc:	xor    dh,BYTE PTR [ecx+edi*1]
  4260cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260d0:	sub    DWORD PTR [esi+edx*4],ebp
  4260d3:	test   BYTE PTR [ebp-0x4e118dfc],0x6b
  4260da:	push   ss
  4260db:	push   esp
  4260dc:	or     eax,0xb628c39e
  4260e1:	sti    
  4260e2:	and    cl,BYTE PTR ds:0x12bbad87
  4260e8:	rcl    BYTE PTR [eax],0x3
  4260eb:	clc    
  4260ec:	div    BYTE PTR [edi+0x53]
  4260ef:	cs pushf 
  4260f1:	in     al,dx
  4260f2:	pop    ds
  4260f3:	push   esi
  4260f4:	xchg   ebp,eax
  4260f5:	mov    ecx,0xf561dbe0
  4260fa:	stc    
  4260fb:	add    DWORD PTR [ebp-0x2e],0x49
  4260ff:	add    esi,ebp
  426101:	dec    edx
  426102:	imul   eax,DWORD PTR [edx],0x45
  426105:	jb     0x4260a5
  426107:	mov    cl,0x37
  426109:	sbb    DWORD PTR [eax-0x5d74790a],ebx
  42610f:	pop    esp
  426110:	mul    BYTE PTR [ecx]
  426112:	mov    eax,0xcbad5f3a
  426117:	cld    
  426118:	inc    ebx
  426119:	scas   al,BYTE PTR es:[edi]
  42611a:	imul   esi,ecx,0x6a6cfade
  426120:	adc    DWORD PTR [edi],0x6a9b85dd
  426126:	pop    ds
  426127:	adc    BYTE PTR ds:0x27d52863,dh
  42612d:	sub    dl,BYTE PTR [esi+0x4e0c6c96]
  426133:	xchg   esi,eax
  426134:	stc    
  426135:	sub    al,BYTE PTR [eax-0x7b]
  426138:	into   
  426139:	ret    
  42613a:	test   eax,0xec622c5f
  42613f:	adc    BYTE PTR [edx-0x2dc77feb],0x92
  426146:	js     0x4260fd
  426148:	in     eax,0xb9
  42614a:	into   
  42614b:	xchg   ebp,eax
  42614c:	pushf  
  42614d:	loope  0x42610b
  42614f:	pushf  
  426150:	ds jge 0x42615f
  426153:	mov    ds:0x55bf0988,al
  426158:	and    ecx,DWORD PTR [edx+edi*8]
  42615b:	cmp    edi,edx
  42615d:	xor    al,0x13
  42615f:	iret   
  426160:	pusha  
  426161:	cdq    
  426162:	ins    BYTE PTR es:[edi],dx
  426163:	test   BYTE PTR [esi+ebx*8],0xab
  426167:	inc    ecx
  426168:	and    edi,DWORD PTR [esi]
  42616a:	div    BYTE PTR [ecx-0x67]
  42616d:	mov    ebp,0x632e7044
  426172:	xchg   edx,eax
  426173:	cdq    
  426174:	jnp    0x4261b9
  426176:	cmp    eax,0xd4a96e98
  42617b:	jg     0x426115
  42617d:	scas   al,BYTE PTR es:[edi]
  42617e:	pushf  
  42617f:	int    0x65
  426181:	inc    eax
  426182:	fs jmp 0x48fe:0x4c09188e
  42618a:	out    0x57,al
  42618c:	dec    edi
  42618d:	xchg   DWORD PTR [ebp+0x7a],esp
  426190:	pusha  
  426191:	push   ebx
  426192:	cmp    eax,0xfcc21d6b
  426197:	cmp    esi,DWORD PTR ds:0x2cd9480a
  42619d:	xchg   esp,eax
  42619e:	clc    
  42619f:	imul   esp,ebx,0x31b8b827
  4261a5:	aam    0x11
  4261a7:	mov    bl,0x5b
  4261a9:	pop    eax
  4261aa:	imul   esi,eax,0xf8479eaf
  4261b0:	jae    0x42613f
  4261b2:	mov    ds:0x99bae81f,eax
  4261b7:	push   0x0
  4261b9:	cld    
  4261ba:	pusha  
  4261bb:	and    DWORD PTR [ebp+0x55a58531],ecx
  4261c1:	loop   0x42619b
  4261c3:	aad    0x4
  4261c5:	and    BYTE PTR [ebx+0x64],bl
  4261c8:	shr    DWORD PTR ds:0xbcc26ecf,0xaf
  4261cf:	dec    ebx
  4261d0:	ror    eax,cl
  4261d2:	lds    eax,FWORD PTR [ecx]
  4261d4:	adc    ebx,DWORD PTR [esi+ebx*1+0x1ae66795]
  4261db:	gs ds cdq 
  4261de:	fsubr  DWORD PTR [ecx-0x14]
  4261e1:	add    al,0xca
  4261e3:	jle    0x42621a
  4261e5:	xchg   esi,eax
  4261e6:	in     eax,dx
  4261e7:	sbb    DWORD PTR [edx],ecx
  4261e9:	aas    
  4261ea:	mov    BYTE PTR [edx+0x2b6744b5],dh
  4261f0:	mov    bh,0x9f
  4261f2:	pusha  
  4261f3:	(bad)  
  4261f4:	mov    al,ds:0x2521e7cf
  4261f9:	jg     0x4261b7
  4261fb:	dec    ebp
  4261fc:	in     eax,dx
  4261fd:	sahf   
  4261fe:	fstp   TBYTE PTR [edx]
  426200:	sbb    al,0x57
  426202:	mov    ebp,0xe77c2e21
  426207:	mov    ebp,0x5dc7b96f
  42620c:	cmp    bl,0x95
  42620f:	adc    edx,DWORD PTR [ecx+0x30139619]
  426215:	cdq    
  426216:	mov    ds:0x75184777,al
  42621b:	dec    ecx
  42621c:	ins    BYTE PTR es:[edi],dx
  42621d:	and    BYTE PTR [ebx-0x18b51261],bh
  426223:	fmulp  st(2),st
  426225:	pop    esi
  426226:	cld    
  426227:	cs pop ds
  426229:	stos   BYTE PTR es:[edi],al
  42622a:	shl    DWORD PTR [edx+0x28],1
  42622d:	sbb    DWORD PTR [ebp-0x373ebeca],eax
  426233:	mov    esp,DWORD PTR [ebx-0x76]
  426236:	test   DWORD PTR [esi-0x35],0xd9f69f23
  42623d:	add    BYTE PTR [ecx-0x358d2278],0xb1
  426244:	add    BYTE PTR [eax+ebx*1],ch
  426247:	add    dh,BYTE PTR [edi+ebp*8+0x30]
  42624b:	lea    esi,[edi+0x2115e6cc]
  426251:	test   eax,eax
  426253:	inc    ebp
  426254:	add    DWORD PTR cs:[esi-0x46],0xc05d1cb1
  42625c:	lods   al,BYTE PTR ds:[esi]
  42625d:	jle    0x4262b5
  42625f:	icebp  
  426260:	jb     0x4262d7
  426262:	and    esp,edx
  426264:	loope  0x42628f
  426266:	adc    al,0xda
  426268:	or     edx,DWORD PTR [ebx+0x16]
  42626b:	fs push ds
  42626d:	imul   ebx,DWORD PTR [ebp+0x7e008e4b],0x83134548
  426277:	dec    esi
  426278:	and    al,0x17
  42627a:	jg     0x42627c
  42627c:	inc    eax
  42627d:	stos   BYTE PTR es:[edi],al
  42627e:	pop    edx
  42627f:	sbb    bh,dl
  426281:	cli    
  426282:	inc    eax
  426283:	cli    
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	jmp    0x55b9:0x5645e400
  42628c:	dec    eax
  42628d:	fild   DWORD PTR [ecx]
  42628f:	add    BYTE PTR [edi+0x5d000002],al
  426295:	cmp    eax,0x4d7bda4c
  42629a:	(bad)  [ecx+0x23]
  42629d:	ins    BYTE PTR es:[edi],dx
  42629e:	mov    dh,0x40
  4262a0:	push   esp
  4262a1:	or     dh,bh
  4262a3:	nop
  4262a4:	cs jle 0x42631c
  4262a7:	xchg   esp,eax
  4262a8:	lock addr16 retf 
  4262ab:	(bad)  
  4262ad:	sahf   
  4262ae:	xor    cl,ah
  4262b0:	hlt    
  4262b1:	jl     0x42623f
  4262b3:	sbb    al,0x7c
  4262b5:	pop    esp
  4262b6:	jb     0x4262e1
  4262b8:	push   0xffffffb4
  4262ba:	push   0xffffffc6
  4262bc:	mov    ch,0xe
  4262be:	imul   ecx,ebp,0x34
  4262c1:	stos   DWORD PTR es:[edi],eax
  4262c2:	enter  0xc21,0xdc
  4262c6:	xor    ebp,esi
  4262c8:	nop
  4262c9:	std    
  4262ca:	mov    dh,0xa7
  4262cc:	lds    edi,FWORD PTR [ebx]
  4262ce:	dec    edx
  4262cf:	adc    al,0x4c
  4262d1:	sbb    al,0xaa
  4262d3:	mov    ebx,0xf07d4306
  4262d8:	lods   al,BYTE PTR ds:[esi]
  4262d9:	sbb    ch,ah
  4262db:	or     BYTE PTR ds:0x3075487a,bl
  4262e1:	xchg   edi,eax
  4262e2:	je     0x42629d
  4262e4:	adc    BYTE PTR [edx-0x17],ah
  4262e7:	mov    ah,0x1d
  4262e9:	fs push esp
  4262eb:	loop   0x4262a3
  4262ed:	ins    BYTE PTR es:[edi],dx
  4262ee:	and    DWORD PTR ds:0xcea5c246,eax
  4262f4:	inc    esp
  4262f5:	das    
  4262f6:	xor    al,0xa0
  4262f8:	mov    cl,0xc3
  4262fa:	xor    ah,BYTE PTR [ebx]
  4262fc:	or     al,0x7e
  4262fe:	inc    esi
  4262ff:	push   ebp
  426300:	ficomp WORD PTR [edi]
  426302:	push   edx
  426303:	inc    edx
  426304:	(bad)  
  426305:	inc    esi
  426306:	mov    ecx,0xbd0a7861
  42630b:	mov    dl,0x94
  42630d:	ret    
  42630e:	sti    
  42630f:	js     0x4262c6
  426311:	pop    esp
  426312:	dec    ecx
  426313:	loope  0x426381
  426315:	out    0x6f,eax
  426317:	imul   DWORD PTR [ecx+0x39cdc3fe]
  42631d:	mov    ecx,0x54085715
  426322:	(bad)  
  426323:	call   0x20c97222
  426328:	dec    esi
  426329:	xchg   ecx,eax
  42632a:	retf   0x8c0a
  42632d:	stos   BYTE PTR es:[edi],al
  42632e:	icebp  
  42632f:	mov    dh,0x84
  426331:	stos   WORD PTR es:[edi],ax
  426333:	das    
  426334:	add    ah,ah
  426336:	jno    0x42635b
  426338:	add    edx,DWORD PTR [eax+0x421e84b8]
  42633e:	push   esp
  42633f:	popf   
  426340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426341:	daa    
  426342:	jae    0x426352
  426344:	sbb    DWORD PTR [esi],ebp
  426346:	pushf  
  426347:	popf   
  426348:	pop    ebx
  426349:	mov    ax,ds:0x76898939
  42634f:	xlat   BYTE PTR ds:[ebx]
  426350:	aad    0xdf
  426352:	ds js  0x426387
  426355:	inc    ecx
  426356:	jb     0x426370
  426358:	xchg   ecx,eax
  426359:	cld    
  42635a:	retf   
  42635b:	pop    edx
  42635c:	cmp    eax,0x940a4ec6
  426361:	loopne 0x4263a4
  426363:	cmp    BYTE PTR [edx],0x14
  426366:	ss cmp ebp,edx
  426369:	sbb    DWORD PTR [bp+0x6f],ebx
  42636d:	sbb    bl,BYTE PTR [eax+0x30]
  426370:	pop    es
  426371:	mov    esi,0x4aa859be
  426376:	out    0x9e,eax
  426378:	adc    ch,cl
  42637a:	sub    DWORD PTR [eax-0x2c],edx
  42637d:	add    al,BYTE PTR [edi+ebp*4-0x35]
  426381:	xor    DWORD PTR [ebp+0x23],esp
  426384:	test   al,0xb3
  426386:	sbb    BYTE PTR [ebp-0x3be22d4f],dl
  42638c:	retf   0xbe1e
  42638f:	mov    al,BYTE PTR [ebp-0x2d6a0b52]
  426395:	cdq    
  426396:	pop    esp
  426397:	mov    ebx,0x47b49f76
  42639c:	sub    eax,0xc90224c8
  4263a1:	leave  
  4263a2:	out    dx,al
  4263a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263a4:	lods   eax,DWORD PTR ds:[esi]
  4263a5:	jp     0x42632a
  4263a7:	mov    DWORD PTR [edx-0x63],ebp
  4263aa:	sub    BYTE PTR [edi],ah
  4263ac:	or     DWORD PTR [ebx-0x79],ebx
  4263af:	fld    QWORD PTR [ecx]
  4263b1:	or     ebp,DWORD PTR [ebx-0x2a8b845c]
  4263b7:	retf   0x82c9
  4263ba:	outs   dx,DWORD PTR ds:[esi]
  4263bb:	add    al,0x24
  4263bd:	imul   esp,esp,0x3ff37eeb
  4263c3:	xor    BYTE PTR [edx+0x2f8fb3cf],cl
  4263c9:	test   BYTE PTR [ebx],dh
  4263cb:	jne    0x426375
  4263cd:	test   eax,0x7dd06285
  4263d2:	je     0x4263ca
  4263d4:	add    DWORD PTR [ebx],ebp
  4263d6:	stos   BYTE PTR es:[edi],al
  4263d7:	jmp    0x3176:0xe4541ee6
  4263de:	ret    
  4263df:	xor    eax,0x76e6ee71
  4263e4:	add    eax,0x88db63cd
  4263e9:	iret   
  4263ea:	clc    
  4263eb:	mov    ss,WORD PTR [ebx-0x6d]
  4263ee:	test   BYTE PTR [ecx],dl
  4263f0:	jb     0x426443
  4263f2:	add    ah,BYTE PTR [esi-0x5]
  4263f5:	xor    ecx,esi
  4263f7:	add    DWORD PTR [ecx+0x66],ebx
  4263fa:	xchg   esi,eax
  4263fb:	das    
  4263fc:	ins    DWORD PTR es:[edi],dx
  4263fd:	loop   0x426408
  4263ff:	pop    ebx
  426400:	sti    
  426401:	dec    eax
  426402:	fs stos BYTE PTR es:[edi],al
  426404:	fld    TBYTE PTR [ecx-0x37]
  426407:	and    al,0x74
  426409:	lahf   
  42640a:	in     al,0x0
  42640c:	fadd   DWORD PTR [edi+0x9a202e6]
  426412:	or     cl,BYTE PTR [ecx-0x4195ea06]
  426418:	outs   dx,DWORD PTR ds:[esi]
  426419:	adc    ebx,DWORD PTR [ecx-0x5]
  42641c:	mov    eax,0x916e040f
  426421:	pop    eax
  426422:	(bad)  
  426423:	fwait
  426424:	aaa    
  426425:	cwde   
  426426:	jo     0x4263b1
  426428:	repz or eax,0x2020ce53
  42642e:	jp     0x4263fb
  426430:	mov    al,ds:0x7872b85e
  426435:	xchg   ebp,eax
  426436:	dec    esp
  426437:	push   edi
  426438:	pop    ds
  426439:	icebp  
  42643a:	js     0x426404
  42643c:	push   0xa
  42643e:	ds ret 0x5981
  426442:	fdiv   st,st(7)
  426444:	out    0xbc,eax
  426446:	push   eax
  426447:	mov    ch,0x4a
  426449:	mov    ebx,0x99aaa69d
  42644e:	les    edi,FWORD PTR [ecx+edi*8-0x53]
  426452:	xlat   BYTE PTR ds:[ebx]
  426453:	dec    ecx
  426454:	push   0x28
  426456:	std    
  426457:	mov    bh,0xa6
  426459:	and    bh,BYTE PTR [edx-0x690b0e5a]
  42645f:	mov    bh,0x88
  426461:	scas   eax,DWORD PTR es:[edi]
  426462:	jecxz  0x4263f4
  426464:	lock test DWORD PTR [ebx],ebp
  426467:	fldcw  WORD PTR [ebx-0x23]
  42646a:	test   al,0x11
  42646c:	adc    edi,DWORD PTR [edx-0x5]
  42646f:	inc    eax
  426470:	push   eax
  426471:	jg     0x426422
  426473:	jb     0x4264f3
  426475:	pop    ecx
  426476:	jo     0x4264ae
  426478:	mov    edi,0x1c0963b3
  42647d:	sbb    cl,BYTE PTR [eax-0x17]
  426480:	xlat   BYTE PTR ds:[ebx]
  426481:	mov    esp,0x7fdb8527
  426486:	out    0xec,al
  426488:	or     al,0xa0
  42648a:	push   es
  42648b:	mov    dh,0x66
  42648d:	push   cs
  42648e:	pushf  
  42648f:	mov    edx,0x5c1edde8
  426494:	outs   dx,DWORD PTR ds:[esi]
  426495:	jmp    0x6526eaf8
  42649a:	pop    edi
  42649b:	cmc    
  42649c:	fs jae 0x4264b0
  42649f:	mov    al,ds:0xf40fcdc8
  4264a4:	push   ebx
  4264a5:	jnp    0x426479
  4264a7:	push   edi
  4264a8:	push   edi
  4264a9:	test   BYTE PTR [ebp+0x4d8901ae],bh
  4264af:	xchg   ebx,eax
  4264b0:	mov    BYTE PTR [ebx],dl
  4264b2:	cmp    al,bh
  4264b4:	lahf   
  4264b5:	mov    ah,0xb7
  4264b7:	xlat   BYTE PTR ds:[ebx]
  4264b8:	mov    esi,0xd0705bee
  4264bd:	outs   dx,BYTE PTR ds:[esi]
  4264be:	fucomip st,st(4)
  4264c0:	mov    edi,0x98091356
  4264c5:	mov    ch,0x7
  4264c7:	stos   BYTE PTR es:[edi],al
  4264c8:	adc    eax,0xfc8f6a68
  4264cd:	adc    edi,0xffffffde
  4264d0:	les    ebp,FWORD PTR [esi]
  4264d2:	mov    al,0x5c
  4264d4:	dec    ebx
  4264d5:	push   ebp
  4264d6:	pop    esi
  4264d7:	arpl   WORD PTR [ebx-0x1147bae1],di
  4264dd:	and    eax,0x431f1d1e
  4264e2:	mov    bl,0xc7
  4264e4:	push   eax
  4264e5:	mov    edx,0x9215f45b
  4264ea:	mov    ds:0xb2f42081,al
  4264ef:	jmp    0xe53c8ee1
  4264f4:	in     al,0xdf
  4264f6:	aas    
  4264f7:	mov    esp,DWORD PTR [ecx-0x36]
  4264fa:	pushf  
  4264fb:	in     eax,0xbf
  4264fd:	mov    esp,ds
  4264ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426500:	xor    BYTE PTR [ebx+ebx*4],bl
  426503:	and    ebx,DWORD PTR [esp+edx*1]
  426506:	test   eax,esi
  426508:	xchg   esp,eax
  426509:	mov    ebp,0x79ac6d5b
  42650e:	adc    ah,BYTE PTR [edx]
  426510:	cmp    al,0xa
  426512:	js     0x4264fd
  426514:	stos   BYTE PTR es:[edi],al
  426515:	int3   
  426516:	and    BYTE PTR [edi-0x6f],ch
  426519:	nop
  42651a:	jg     0x42651c
  42651c:	mov    dh,0xe4
  42651e:	xlat   BYTE PTR ds:[ebx]
  42651f:	push   esp
  426520:	xlat   BYTE PTR ds:[ebx]
  426521:	ja     0x4264da
  426523:	out    0xf3,al
  426525:	ss icebp 
  426527:	mov    esp,0xf03a0d52
  42652c:	iret   
  42652d:	fld    QWORD PTR [ecx]
  42652f:	add    BYTE PTR [edi+0x14000002],al
  426535:	retf   0xb27f
  426538:	xor    DWORD PTR [eax+ebp*2-0x4c],0x7
  42653d:	cwde   
  42653e:	push   edx
  42653f:	push   cs
  426540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426541:	cld    
  426542:	push   esi
  426543:	aad    0xef
  426545:	dec    eax
  426546:	into   
  426547:	in     eax,dx
  426548:	test   al,0xb6
  42654b:	mov    ebx,0xaf394daa
  426550:	pop    esp
  426551:	xchg   ecx,eax
  426552:	push   ebx
  426553:	inc    ebx
  426554:	adc    edi,ebx
  426556:	or     eax,0x831c9d6
  42655b:	lds    ebx,FWORD PTR [esi+edx*1]
  42655e:	dec    edx
  42655f:	call   0xff9:0xc9f3bd4b
  426566:	add    al,0x69
  426568:	add    DWORD PTR [eax+0x2ec62687],0x1e4cc89d
  426572:	ins    BYTE PTR es:[edi],dx
  426573:	inc    edx
  426574:	dec    ebx
  426575:	sbb    ebp,DWORD PTR [ebx+0x43]
  426578:	test   DWORD PTR [ecx+0x6c35c9d1],edx
  42657e:	mov    eax,0x7691c7bf
  426583:	sbb    ch,BYTE PTR [edi]
  426585:	fstp   TBYTE PTR [edi-0x8]
  426588:	mov    ebp,0xc623c9b5
  42658d:	ret    
  42658e:	xor    al,bl
  426590:	dec    esi
  426591:	cmp    ch,BYTE PTR [ebx-0x673b47fc]
  426597:	cmp    edi,DWORD PTR [esi-0x40046729]
  42659d:	in     eax,dx
  42659e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42659f:	fs xchg edx,eax
  4265a1:	out    0x90,al
  4265a3:	(bad)  
  4265a4:	dec    ecx
  4265a5:	leave  
  4265a6:	cmp    bh,BYTE PTR [ebx+0x1c6b4f50]
  4265ac:	(bad)  
  4265ad:	pop    es
  4265ae:	div    ch
  4265b0:	sub    edi,DWORD PTR [edx-0x47]
  4265b3:	enter  0x4868,0xf3
  4265b7:	fiadd  DWORD PTR [edi+0x4]
  4265ba:	pop    esp
  4265bb:	retf   0xf5d1
  4265be:	and    dh,dl
  4265c0:	popf   
  4265c1:	dec    ebx
  4265c2:	ret    0xd307
  4265c5:	xor    DWORD PTR [ebx],esi
  4265c7:	or     DWORD PTR [ecx+eiz*2-0x2f],edi
  4265cb:	lds    esp,FWORD PTR [ebx]
  4265cd:	push   cs
  4265ce:	mov    ah,0x81
  4265d0:	sti    
  4265d1:	loop   0x4265ae
  4265d3:	mov    edx,0x19ac3c4b
  4265d8:	and    edi,0x5a
  4265db:	mov    ds:0x95169680,al
  4265e0:	popa   
  4265e1:	xor    edx,DWORD PTR ds:0xa40b9269
  4265e7:	adc    ah,BYTE PTR [esi+0x1]
  4265ea:	xor    esp,DWORD PTR ds:0xbbe9ab5b
  4265f0:	hlt    
  4265f1:	mov    dl,0x66
  4265f3:	imul   ebx,DWORD PTR [ebx+edi*4],0xffffffec
  4265f7:	popa   
  4265f8:	lahf   
  4265f9:	push   esi
  4265fa:	xchg   ebx,eax
  4265fb:	cmovle esi,DWORD PTR [ebx+0x5f5b93f4]
  426602:	scas   al,BYTE PTR es:[edi]
  426603:	stc    
  426604:	out    0xb6,al
  426606:	pop    edi
  426607:	push   esp
  426608:	mov    WORD PTR [ebx+0x29],?
  42660b:	stc    
  42660c:	out    dx,al
  42660d:	lds    ecx,FWORD PTR [edi+0x125ca386]
  426613:	cmp    bh,dl
  426615:	cmp    edi,DWORD PTR [edx+0x6]
  426618:	(bad)  
  426619:	test   DWORD PTR [ebx-0x6e],0x2ab93b60
  426620:	and    eax,0xe1aaab13
  426625:	dec    ebp
  426626:	adc    BYTE PTR [edx-0x3],bl
  426629:	fwait
  42662a:	ja     0x4265eb
  42662c:	int    0xa2
  42662e:	out    0x21,al
  426630:	mov    ecx,0xaa9ee410
  426635:	ror    BYTE PTR [eax+0x6e929896],1
  42663b:	cmp    DWORD PTR [edi-0x1e61acad],edi
  426641:	dec    DWORD PTR [ebp+0x729b5c33]
  426647:	shr    BYTE PTR [eax+0x5de5dff3],1
  42664d:	mov    al,0xe0
  42664f:	popa   
  426650:	cmp    ebx,DWORD PTR [eax-0x4a]
  426653:	int    0x96
  426655:	cmc    
  426656:	outs   dx,DWORD PTR ds:[esi]
  426657:	out    0xb6,eax
  426659:	clc    
  42665a:	add    eax,0xa26962ec
  42665f:	sbb    eax,DWORD PTR [esi]
  426661:	sub    al,0x6e
  426663:	xchg   ebx,eax
  426664:	ins    DWORD PTR es:[edi],dx
  426665:	lods   al,BYTE PTR ds:[esi]
  426666:	in     al,0x52
  426668:	in     al,dx
  426669:	xchg   ebx,eax
  42666a:	xor    esi,edx
  42666c:	jmp    0xb66b:0xe4488b95
  426673:	xchg   esi,eax
  426674:	jge    0x426637
  426676:	stos   DWORD PTR es:[edi],eax
  426677:	call   0xd100:0xb73e7356
  42667e:	jge    0x426663
  426680:	push   cs
  426681:	int    0x1a
  426683:	(bad)  
  426684:	(bad)  
  426685:	inc    edi
  426686:	inc    esp
  426687:	mov    ebx,0xed931d81
  42668c:	pop    ecx
  42668d:	xchg   ecx,eax
  42668e:	scas   al,BYTE PTR es:[edi]
  42668f:	scas   al,BYTE PTR es:[edi]
  426690:	cmp    DWORD PTR [ebx+0x37],esp
  426693:	jb     0x4266e3
  426695:	sbb    edx,edx
  426697:	jmp    0xe65a01ac
  42669c:	push   edx
  42669d:	mov    bh,0x7c
  42669f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266a0:	ss popf 
  4266a2:	ins    BYTE PTR es:[edi],dx
  4266a3:	outs   dx,DWORD PTR ds:[esi]
  4266a4:	mov    eax,ds:0x781150e0
  4266a9:	xchg   edi,eax
  4266aa:	xor    al,0xf0
  4266ac:	int3   
  4266ad:	sub    esi,DWORD PTR [esi+esi*1]
  4266b0:	lahf   
  4266b1:	jno    0x4266a4
  4266b3:	jnp    0x426662
  4266b5:	(bad)  
  4266b6:	pop    ss
  4266b7:	sbb    eax,0xb6457f94
  4266bc:	call   0x760:0x99a75b8f
  4266c3:	mov    dh,bh
  4266c5:	mov    WORD PTR [ecx+0x29],fs
  4266c8:	mov    bh,BYTE PTR [ebx-0xb]
  4266cb:	test   DWORD PTR [edx+0x6513d0b],ecx
  4266d1:	ja     0x4266af
  4266d3:	xor    al,BYTE PTR [edi+0x2c4f0a33]
  4266d9:	jecxz  0x426691
  4266db:	sbb    al,BYTE PTR [edi]
  4266dd:	retf   
  4266de:	mov    esp,?
  4266e0:	loope  0x42675b
  4266e2:	imul   ebp,DWORD PTR [edx],0x7c
  4266e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266e6:	imul   edx,DWORD PTR [ebx-0x1981b655],0x4d
  4266ed:	xchg   esi,eax
  4266ee:	xor    al,0x66
  4266f0:	fdiv   QWORD PTR [ebx+0x5e6cb47e]
  4266f6:	in     eax,dx
  4266f7:	dec    esp
  4266f8:	nop
  4266f9:	scas   al,BYTE PTR es:[edi]
  4266fa:	push   esi
  4266fb:	dec    edx
  4266fc:	sar    BYTE PTR [esi+0x71304468],cl
  426702:	outs   dx,BYTE PTR ds:[esi]
  426703:	fmul   QWORD PTR [edi-0x5f]
  426706:	jmp    0x711a:0xf1fafed8
  42670d:	mov    es,WORD PTR [edx+edx*2+0x5bfd1e4c]
  426714:	idiv   ebx
  426716:	test   eax,0xd9826b49
  42671b:	push   ss
  42671c:	xchg   BYTE PTR [esi],dh
  42671e:	fild   WORD PTR [edi]
  426720:	mov    ds,WORD PTR [esi]
  426722:	or     eax,esi
  426724:	dec    esp
  426725:	pushf  
  426726:	jecxz  0x4266dc
  426728:	in     al,0x25
  42672a:	icebp  
  42672b:	into   
  42672c:	adc    eax,0x2d0206ba
  426731:	repnz push esp
  426733:	in     eax,0xe2
  426735:	pop    esp
  426736:	and    eax,0x9d89b4bb
  42673b:	mov    edx,0x72865db9
  426740:	repz push 0xffffffcb
  426743:	jle    0x426765
  426745:	jmp    0x426735
  426747:	lods   al,BYTE PTR ds:[esi]
  426748:	loopne 0x426787
  42674a:	nop
  42674b:	(bad)  
  42674c:	loop   0x426771
  42674e:	out    0xdd,al
  426750:	popf   
  426751:	push   edi
  426752:	xor    edx,DWORD PTR [eax+0x10]
  426755:	push   ebp
  426756:	repz in al,0x74
  426759:	popa   
  42675a:	idiv   BYTE PTR [edi+0x4e]
  42675d:	mov    esi,0x4c5633d0
  426762:	cdq    
  426763:	pop    edi
  426764:	aam    0x84
  426766:	pop    eax
  426767:	xchg   esi,eax
  426768:	iret   
  426769:	push   ebx
  42676a:	sub    DWORD PTR [ebx-0x7a],0x70
  42676e:	xor    al,BYTE PTR [edx]
  426770:	out    dx,al
  426771:	leave  
  426772:	(bad)  
  426774:	outs   dx,BYTE PTR ds:[esi]
  426775:	sub    esi,DWORD PTR [eax]
  426777:	sub    dl,bl
  426779:	jno    0x4267a1
  42677b:	push   edi
  42677c:	jnp    0x4267d1
  42677e:	sub    al,0xc
  426780:	sahf   
  426781:	out    0xd1,eax
  426783:	pop    eax
  426784:	js     0x4267c4
  426786:	aam    0x9f
  426788:	std    
  426789:	mov    eax,ds:0x2a48844c
  42678e:	loop   0x42675c
  426790:	dec    esi
  426791:	and    eax,0x17af2eea
  426796:	int    0xc8
  426798:	mov    al,0x16
  42679a:	add    DWORD PTR [ebx+ebp*1-0x52],eax
  42679e:	inc    ebx
  42679f:	dec    eax
  4267a0:	jle    0x426732
  4267a2:	test   DWORD PTR [edx+esi*8-0x65],eax
  4267a6:	out    0x21,eax
  4267a8:	(bad)  
  4267a9:	jno    0x4267c7
  4267ab:	inc    ebx
  4267ac:	sub    BYTE PTR [ecx-0x64],bl
  4267af:	adc    eax,0xb4368f3c
  4267b4:	in     eax,0xdc
  4267b6:	stos   DWORD PTR es:[edi],eax
  4267b7:	push   edi
  4267b8:	test   eax,0xfa004044
  4267bd:	rcl    DWORD PTR ds:0xfac73d07,cl
  4267c3:	push   DWORD PTR ds:0xf1c7bfe
  4267c9:	adc    ah,0x1b
  4267cc:	push   esi
  4267cd:	loopne 0x4267d0
  4267cf:	add    BYTE PTR [edi+0x77000002],al
  4267d5:	cmp    bl,ah
  4267d7:	aam    0x8a
  4267d9:	inc    edi
  4267da:	adc    BYTE PTR [ebx-0x17],ah
  4267dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267de:	out    dx,eax
  4267df:	(bad)  
  4267e0:	mov    dh,0x16
  4267e2:	or     BYTE PTR [edi],bl
  4267e4:	not    ebx
  4267e6:	jnp    0x426818
  4267e8:	mov    bl,0x7e
  4267ea:	(bad)  
  4267eb:	adc    dl,BYTE PTR ds:0xd001e951
  4267f1:	icebp  
  4267f2:	pop    edi
  4267f3:	mov    dl,0xbc
  4267f5:	lahf   
  4267f6:	cdq    
  4267f7:	inc    eax
  4267f8:	inc    edx
  4267f9:	(bad)  
  4267fa:	push   0xfffffff1
  4267fc:	sahf   
  4267fd:	lods   eax,DWORD PTR ds:[esi]
  4267fe:	pop    eax
  4267ff:	add    al,BYTE PTR [esi+ecx*1]
  426802:	xor    esp,eax
  426804:	ror    DWORD PTR [eax],cl
  426806:	rcr    ah,0x82
  426809:	sbb    eax,0xe56a54e4
  42680e:	ins    DWORD PTR es:[edi],dx
  42680f:	ds xchg ecx,eax
  426811:	dec    eax
  426812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426813:	push   es
  426814:	outs   dx,BYTE PTR ds:[esi]
  426815:	add    eax,0x46de3e2b
  42681a:	fidivr WORD PTR [esp+ebx*4-0x3f]
  42681e:	inc    edi
  42681f:	lock lock mov esp,0xda11a9ff
  426826:	das    
  426827:	and    ah,BYTE PTR [esi]
  426829:	and    dl,BYTE PTR [ebx+0x77]
  42682c:	and    BYTE PTR [esi],al
  42682e:	inc    esi
  42682f:	and    BYTE PTR [ebx+0x56],al
  426832:	test   BYTE PTR [ebx+eiz*4-0x62],dl
  426836:	cmp    eax,0xe007a80c
  42683b:	xchg   edx,eax
  42683c:	jmp    0x426812
  42683e:	cmp    eax,0x1a4bf3b4
  426843:	jg     0x4267c7
  426845:	outs   dx,DWORD PTR ds:[esi]
  426846:	scas   al,BYTE PTR es:[edi]
  426847:	imul   edx,DWORD PTR [ebx],0x36
  42684a:	jge    0x4268b4
  42684c:	jp     0x4267dd
  42684e:	push   cs
  42684f:	inc    esi
  426850:	sbb    BYTE PTR [eax+0x24eb427b],cl
  426856:	or     eax,0xe31d80cf
  42685b:	pop    eax
  42685c:	xor    DWORD PTR [edi*4-0x313596d3],ebp
  426863:	mov    DWORD PTR [eax],0xdd3049b6
  426869:	sub    dh,BYTE PTR [esi]
  42686b:	push   ebp
  42686c:	hlt    
  42686d:	gs inc eax
  42686f:	jns    0x426851
  426871:	xchg   ebp,edi
  426873:	aam    0x57
  426875:	jg     0x42686f
  426877:	mov    WORD PTR [esi],ds
  426879:	cmpps  xmm6,xmm6,0xf
  42687d:	in     eax,0xe8
  42687f:	sbb    ah,BYTE PTR [ecx-0x6cd85448]
  426885:	inc    eax
  426886:	mov    dh,0x4e
  426888:	mov    esp,0xdbac9c69
  42688d:	xor    BYTE PTR [esi+0x5c],bl
  426890:	push   ss
  426891:	pusha  
  426892:	out    dx,al
  426893:	and    eax,0xbdbe2a8f
  426898:	in     eax,0xf0
  42689a:	push   es
  42689b:	in     eax,dx
  42689c:	inc    edx
  42689d:	in     eax,dx
  42689e:	fsub   DWORD PTR [esi-0x1508d357]
  4268a4:	fs dec ebx
  4268a6:	xor    al,0x89
  4268a8:	cmp    BYTE PTR [edx],bh
  4268aa:	dec    eax
  4268ab:	fwait
  4268ac:	ret    
  4268ad:	mov    BYTE PTR [ecx+0x429a9ad8],ah
  4268b3:	add    ebx,ebp
  4268b5:	xchg   esp,eax
  4268b6:	call   0xbef324b3
  4268bb:	jmp    0x137b:0x107b1e80
  4268c2:	mov    al,ds:0x89632f6
  4268c7:	mov    eax,0xed15cfc7
  4268cc:	jo     0x426873
  4268ce:	inc    ecx
  4268cf:	xlat   BYTE PTR ds:[ebx]
  4268d0:	sbb    eax,0x276c949a
  4268d5:	add    ah,BYTE PTR [eax+0x79b19c74]
  4268db:	lea    edi,[ebx+0x21de0c68]
  4268e1:	mov    fs,WORD PTR [ecx]
  4268e3:	push   ds
  4268e4:	arpl   WORD PTR [esi+0x3213e17f],dx
  4268ea:	pop    es
  4268eb:	pop    DWORD PTR [ecx+0x3fd34915]
  4268f1:	mov    gs,WORD PTR [eax+0x2]
  4268f4:	shl    BYTE PTR [edi],cl
  4268f6:	rcl    DWORD PTR [ecx+ebp*8-0x4034c051],1
  4268fd:	xor    bh,BYTE PTR [ebp-0x79]
  426900:	push   ds
  426901:	and    esp,DWORD PTR [ecx+eiz*4]
  426904:	into   
  426905:	jne    0x426961
  426907:	dec    eax
  426908:	data16 mov dl,0xd3
  42690b:	mov    edx,0x2167883b
  426910:	into   
  426911:	rcl    DWORD PTR [edi],0x50
  426914:	arpl   WORD PTR [ecx],di
  426916:	add    al,0x36
  426918:	loop   0x42693b
  42691a:	xchg   ebx,eax
  42691b:	adc    dh,bl
  42691d:	pop    ds
  42691e:	(bad)  
  42691f:	cmc    
  426920:	enter  0x860e,0x41
  426924:	add    eax,DWORD PTR [edi]
  426926:	mov    esi,DWORD PTR [ecx+ebx*1+0x12]
  42692a:	jecxz  0x426916
  42692c:	rol    BYTE PTR [eax-0x4b],0x41
  426930:	js     0x42696e
  426932:	add    BYTE PTR cs:[ebp+edx*4+0x4018bf44],ah
  42693a:	inc    ecx
  42693b:	push   ebp
  42693c:	xchg   edi,eax
  42693d:	cli    
  42693e:	mov    ebp,0x208a5439
  426943:	add    dl,al
  426945:	mov    ecx,0xf2d8a8d1
  42694a:	and    dh,BYTE PTR [esi]
  42694c:	daa    
  42694d:	jbe    0x4268fe
  42694f:	xor    al,0xcc
  426951:	add    eax,0x490e8396
  426956:	fisttp DWORD PTR [ecx-0x354d98ab]
  42695c:	adc    eax,0x923065a9
  426961:	fmul   st(1),st
  426963:	dec    esp
  426964:	cmp    eax,0xeaa18729
  426969:	(bad)  
  42696a:	mov    ebx,0xb57299ce
  42696f:	or     DWORD PTR [eax+edx*1-0x22fba6ac],edx
  426976:	add    ah,al
  426978:	push   ebp
  426979:	cmp    bh,BYTE PTR [esi]
  42697b:	fwait
  42697c:	push   edx
  42697d:	popa   
  42697e:	mov    al,0xbd
  426980:	xchg   esp,eax
  426981:	int3   
  426982:	out    dx,eax
  426983:	or     bh,al
  426985:	sbb    dl,BYTE PTR [ebx]
  426987:	add    BYTE PTR [esi-0x2b59946d],0x76
  42698e:	imul   BYTE PTR [ebp-0x7f]
  426991:	mov    eax,0x5be533d9
  426996:	(bad)  
  426997:	std    
  426998:	lea    esp,[esi-0x35]
  42699b:	pop    ecx
  42699c:	rcr    DWORD PTR [eax],1
  42699e:	pop    esp
  42699f:	dec    eax
  4269a0:	push   ebp
  4269a1:	cdq    
  4269a2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269a4:	shl    DWORD PTR [edx-0x2e],1
  4269a7:	sbb    BYTE PTR [ebx],bh
  4269a9:	xor    dl,BYTE PTR [eax+0x24705117]
  4269af:	fdivr  DWORD PTR [esi-0xc406c18]
  4269b5:	retf   0x2bf7
  4269b8:	xchg   ebx,eax
  4269b9:	dec    esi
  4269ba:	scas   al,BYTE PTR es:[edi]
  4269bb:	jmp    0x760105be
  4269c0:	xchg   DWORD PTR [ebx+0x62],edi
  4269c3:	cs je  0x4269c8
  4269c6:	and    ebp,DWORD PTR [ebx+0x4eea18e1]
  4269cc:	ds jnp 0x426a4d
  4269cf:	stc    
  4269d0:	mov    ch,0x55
  4269d2:	add    BYTE PTR [edi],ah
  4269d4:	pop    es
  4269d5:	adc    esi,DWORD PTR [edx+ecx*1]
  4269d8:	aaa    
  4269d9:	sbb    eax,DWORD PTR [ebx+esi*8-0x7e82adc]
  4269e0:	outs   dx,DWORD PTR ds:[esi]
  4269e1:	mov    cl,0xd3
  4269e3:	sub    al,0x26
  4269e5:	dec    ebp
  4269e6:	pusha  
  4269e7:	outs   dx,BYTE PTR ds:[esi]
  4269e8:	dec    esi
  4269e9:	sub    DWORD PTR ds:0x19e9cc4e,ebx
  4269ef:	dec    edx
  4269f0:	std    
  4269f1:	jne    0x426a15
  4269f3:	cmp    dh,bl
  4269f5:	mov    ch,0xcf
  4269f7:	retf   0x8c0f
  4269fa:	or     BYTE PTR [ebx-0x268bb70a],0xab
  426a01:	dec    esp
  426a02:	call   0xed44:0x6fefe144
  426a09:	mov    esp,0x88b07d0c
  426a0e:	mov    ebp,DWORD PTR [edi-0x6b24667f]
  426a14:	jmp    0x1bbe48c0
  426a19:	retf   0xba1f
  426a1c:	outs   dx,DWORD PTR ds:[esi]
  426a1d:	cmc    
  426a1e:	repnz outs dx,DWORD PTR ds:[esi]
  426a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a21:	dec    edi
  426a22:	jecxz  0x426a21
  426a24:	daa    
  426a25:	jae    0x4269dd
  426a27:	fidivr DWORD PTR [ebp-0x3d]
  426a2a:	sar    edx,0xd
  426a2d:	aas    
  426a2e:	or     eax,0xcb2e5cb
  426a33:	repnz in eax,0x42
  426a36:	(bad)  
  426a38:	mov    ds:0x2d674cb,al
  426a3d:	push   ebp
  426a3e:	xor    eax,0xb745a968
  426a43:	push   esp
  426a44:	test   al,0xbc
  426a46:	sar    BYTE PTR [ebx+0x68],1
  426a49:	cmp    BYTE PTR [esi],dl
  426a4b:	inc    ecx
  426a4c:	mov    ds,WORD PTR [ebp-0x69dc1fb9]
  426a52:	xor    ch,0x15
  426a55:	leave  
  426a56:	out    0xb8,eax
  426a58:	jnp    0x4269fc
  426a5a:	mov    cl,0x0
  426a5c:	iret   
  426a5d:	neg    BYTE PTR [ebp-0x308442b0]
  426a63:	(bad)  
  426a64:	out    dx,eax
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	(bad)  
  426a67:	push   ss
  426a68:	cs mov ebx,0xe2ddbdf9
  426a6e:	add    DWORD PTR [eax],eax
  426a70:	xchg   DWORD PTR [edx],eax
  426a72:	add    BYTE PTR [eax],al
  426a74:	ja     0x426ab5
  426a76:	loopne 0x426aad
  426a78:	mov    dh,0x56
  426a7a:	cmp    DWORD PTR [ebp-0x45],esp
  426a7d:	pop    eax
  426a7e:	retf   
  426a7f:	jae    0x426ac0
  426a81:	popf   
  426a82:	xchg   ecx,eax
  426a83:	repnz mov al,ds:0x1b1a09c
  426a89:	test   al,0x5
  426a8b:	jno    0x426a15
  426a8d:	inc    edx
  426a8e:	rcl    esi,0xbc
  426a91:	aaa    
  426a92:	pop    esi
  426a93:	lods   al,BYTE PTR ds:[esi]
  426a94:	pusha  
  426a95:	stos   BYTE PTR es:[edi],al
  426a96:	mov    edi,0x8d8f66e7
  426a9b:	aam    0xa4
  426a9d:	sub    eax,0x7656158f
  426aa2:	not    BYTE PTR [ebx+eiz*8]
  426aa5:	cdq    
  426aa6:	in     eax,0x14
  426aa8:	dec    ebx
  426aa9:	test   DWORD PTR [edi+0x2c0c3268],0x4b1a455d
  426ab3:	sbb    esp,DWORD PTR [edx-0x71]
  426ab6:	jae    0x426a9b
  426ab8:	call   0x25e9:0x6f6a2bc4
  426abf:	out    dx,eax
  426ac0:	das    
  426ac1:	pop    edx
  426ac2:	outs   dx,DWORD PTR ds:[esi]
  426ac3:	enter  0x57e,0x68
  426ac7:	stos   DWORD PTR es:[edi],eax
  426ac8:	jno    0x426b49
  426aca:	lods   al,BYTE PTR ds:[esi]
  426acb:	dec    esi
  426acc:	pop    esi
  426acd:	mov    al,0x57
  426acf:	mov    bl,0x59
  426ad1:	mov    bl,0xa1
  426ad3:	mov    edx,0xeb95698
  426ad8:	or     BYTE PTR [edx],bh
  426ada:	pop    ebp
  426adb:	sbb    al,0xcb
  426add:	push   ebp
  426ade:	pop    edx
  426adf:	cmp    BYTE PTR [ecx-0x63fb3d21],0x42
  426ae6:	adc    BYTE PTR ds:0x67439584,0x14
  426aed:	mov    ah,0x7e
  426aef:	sbb    eax,0x12efa06e
  426af4:	ret    
  426af5:	xchg   ebp,eax
  426af6:	and    DWORD PTR [eax],ebx
  426af8:	dec    edi
  426af9:	pop    edx
  426afa:	pop    ds
  426afb:	std    
  426afc:	into   
  426afd:	mov    al,0xa4
  426aff:	push   esi
  426b00:	pop    ds
  426b01:	stos   BYTE PTR es:[edi],al
  426b02:	push   esi
  426b03:	frstor [ebp-0x3b064d94]
  426b09:	pushf  
  426b0a:	sub    ecx,DWORD PTR [ecx]
  426b0c:	mov    ?,esp
  426b0e:	enter  0x5aeb,0x5c
  426b12:	fsub   st,st(0)
  426b14:	pop    ebx
  426b15:	in     al,0xa9
  426b17:	call   0xb48f:0x9f34e773
  426b1e:	jno    0x426b0d
  426b20:	sub    eax,0x6d4c07ef
  426b25:	lds    esi,FWORD PTR [ebx]
  426b27:	les    esi,FWORD PTR [ecx-0x63102ca9]
  426b2d:	or     BYTE PTR [edi+0xfe445bf],bl
  426b33:	xchg   ecx,eax
  426b34:	into   
  426b35:	pop    edx
  426b36:	sahf   
  426b37:	pop    ss
  426b38:	arpl   dx,ax
  426b3a:	xchg   ecx,eax
  426b3b:	jecxz  0x426b77
  426b3d:	repz test DWORD PTR [edx+edi*1],0x22397a1e
  426b45:	xlat   BYTE PTR ds:[ebx]
  426b46:	xchg   esp,eax
  426b47:	into   
  426b48:	cmp    BYTE PTR [esi],ch
  426b4a:	cmp    eax,0x4b3753d4
  426b4f:	int3   
  426b50:	cmp    eax,0xbfcf9e8b
  426b55:	jmp    0x426bbc
  426b57:	pop    ebp
  426b58:	xchg   edx,eax
  426b59:	pop    es
  426b5a:	pushf  
  426b5b:	lock icebp 
  426b5d:	std    
  426b5e:	mov    ecx,0xf2cdf138
  426b63:	dec    esi
  426b64:	mov    ah,0x23
  426b66:	mov    al,ds:0x4a2f2fd9
  426b6b:	and    ebp,DWORD PTR ds:[edx-0x16]
  426b6f:	aad    0xe9
  426b71:	call   0x2ddf412
  426b76:	rol    cl,1
  426b78:	mov    al,0x1d
  426b7a:	mov    bh,0x36
  426b7c:	mov    BYTE PTR [edi-0x16194214],cl
  426b82:	mov    eax,ds:0x3c7955f7
  426b87:	pop    ss
  426b88:	popa   
  426b89:	loope  0x426b96
  426b8b:	pusha  
  426b8c:	jnp    0x426b88
  426b8e:	xchg   ebx,eax
  426b8f:	or     al,0x8f
  426b91:	mov    cl,0xd2
  426b93:	xchg   BYTE PTR [esi-0x5a],dh
  426b96:	sbb    al,0xf4
  426b98:	adc    bl,BYTE PTR [eax]
  426b9a:	adc    DWORD PTR [edi+0x5d],0x71f5f0e8
  426ba1:	les    edi,FWORD PTR [ebp+0x56d58b59]
  426ba7:	lods   eax,DWORD PTR ds:[esi]
  426ba8:	bound  edi,QWORD PTR [ebp-0x38fed5b4]
  426bae:	cmp    ebx,ebp
  426bb0:	sub    al,BYTE PTR [eax+0x1be23dd8]
  426bb6:	or     esi,DWORD PTR [ecx]
  426bb8:	dec    esi
  426bb9:	(bad)  
  426bba:	push   esi
  426bbb:	cmc    
  426bbc:	sbb    eax,0xecaf5688
  426bc1:	mov    al,ch
  426bc3:	arpl   WORD PTR [ecx-0x6125d186],di
  426bc9:	and    al,0x40
  426bcb:	pop    eax
  426bcc:	jae    0x426c3f
  426bce:	(bad)  
  426bcf:	(bad)  
  426bd0:	retf   0xb035
  426bd3:	cwde   
  426bd4:	push   ss
  426bd5:	adc    edi,DWORD PTR [ecx-0x20]
  426bd8:	pop    edx
  426bd9:	pop    esi
  426bda:	mov    dl,0x4b
  426bdc:	pop    edi
  426bdd:	jmp    0xc26a:0x887b5853
  426be4:	mov    eax,ds:0x936506fd
  426be9:	(bad)  
  426bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426beb:	mov    edx,0x56627f17
  426bf0:	cmc    
  426bf1:	pop    ecx
  426bf2:	jno    0x426c1e
  426bf4:	dec    ebp
  426bf5:	xor    ebx,eax
  426bf7:	mov    edx,0xb1c68d51
  426bfc:	bound  ebx,QWORD PTR [edi+esi*1+0x19a1265c]
  426c03:	adc    al,0x76
  426c05:	inc    ebp
  426c06:	inc    ebx
  426c07:	retf   0x1301
  426c0a:	in     al,0xd7
  426c0c:	popf   
  426c0d:	cmp    DWORD PTR [ecx-0x6d5fd4db],esp
  426c13:	sahf   
  426c14:	dec    esp
  426c15:	lahf   
  426c16:	retf   
  426c17:	push   ebp
  426c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c19:	mov    edi,0x34a74617
  426c1e:	sar    BYTE PTR [edx],1
  426c20:	dec    edx
  426c21:	js     0x426be4
  426c23:	inc    ebp
  426c24:	addr16 loopne 0x426c24
  426c27:	xchg   esp,eax
  426c28:	cmp    BYTE PTR ds:0x63fcb826,bh
  426c2e:	mov    al,ds:0x7c41fafb
  426c33:	sub    dh,BYTE PTR es:[edx-0x7e]
  426c37:	mov    edx,0xeafa0bf4
  426c3c:	(bad)  
  426c3d:	and    DWORD PTR [edx+0x10],ebx
  426c40:	scas   eax,DWORD PTR es:[edi]
  426c41:	pop    ebx
  426c42:	aas    
  426c43:	mov    BYTE PTR [eax+0x5509b7c9],0x29
  426c4a:	jmp    0xcb4:0xfe0bb169
  426c51:	xchg   esp,eax
  426c52:	ins    DWORD PTR es:[edi],dx
  426c53:	popf   
  426c54:	cmp    eax,0xc8f9e92f
  426c59:	pop    eax
  426c5a:	sub    bl,ch
  426c5c:	push   esp
  426c5d:	jle    0x426c96
  426c5f:	jno    0x426c36
  426c61:	pusha  
  426c62:	mov    ch,0xbe
  426c64:	lods   al,BYTE PTR ds:[esi]
  426c65:	mov    edi,0xa80670ca
  426c6a:	call   0x1c390ff4
  426c6f:	jge    0x426cdd
  426c71:	ins    BYTE PTR es:[edi],dx
  426c72:	into   
  426c73:	aaa    
  426c74:	pop    ss
  426c75:	loop   0x426c98
  426c77:	es in  eax,dx
  426c79:	or     dh,BYTE PTR [ebx-0x6df0a036]
  426c7f:	fistp  WORD PTR [ebx-0x47]
  426c82:	dec    ecx
  426c83:	xchg   ecx,eax
  426c84:	rol    DWORD PTR ds:0xde4e9184,1
  426c8a:	lahf   
  426c8b:	cmc    
  426c8c:	or     DWORD PTR [edi+ebx*1-0x66],esi
  426c90:	mov    ds:0x95030552,al
  426c95:	push   esi
  426c96:	outs   dx,DWORD PTR ds:[esi]
  426c97:	pop    edx
  426c98:	mov    bl,0x9
  426c9a:	js     0x426c57
  426c9c:	fdivr  QWORD PTR [eax-0x13]
  426c9f:	aad    0x12
  426ca1:	bound  edi,QWORD PTR [eax+0x6b37213e]
  426ca7:	and    eax,0xcb6c1534
  426cac:	mov    edi,DWORD PTR [ebx*2-0x77b5808c]
  426cb3:	bound  edx,QWORD PTR [edx-0x1f]
  426cb6:	and    ch,BYTE PTR [ecx+0x45]
  426cb9:	mov    bl,0x38
  426cbb:	inc    edx
  426cbc:	ins    BYTE PTR es:[edi],dx
  426cbd:	xlat   BYTE PTR ds:[ebx]
  426cbe:	fwait
  426cbf:	pop    eax
  426cc0:	fist   DWORD PTR [ecx-0x53]
  426cc3:	jp     0x426ced
  426cc5:	inc    esp
  426cc6:	mov    dh,0x76
  426cc8:	retf   0xe65f
  426ccb:	out    0xae,al
  426ccd:	or     eax,0x29725c82
  426cd2:	rol    ah,0x6d
  426cd5:	adc    al,0x1c
  426cd7:	(bad)  
  426cd8:	arpl   WORD PTR [edi+0x16],ax
  426cdb:	push   edx
  426cdc:	xor    eax,0x7c9789ae
  426ce1:	mov    ecx,0xa321cde0
  426ce6:	aam    0x88
  426ce8:	xchg   eax,ebp
  426cea:	mov    al,0xd3
  426cec:	pushf  
  426ced:	jecxz  0x426cd1
  426cef:	sbb    dl,bl
  426cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cf2:	std    
  426cf3:	push   es
  426cf4:	adc    bl,al
  426cf6:	stos   DWORD PTR es:[edi],eax
  426cf7:	adc    DWORD PTR [ecx+0x70],esi
  426cfa:	mov    ebx,0x2d236800
  426cff:	push   ds
  426d00:	outs   dx,DWORD PTR ds:[esi]
  426d01:	push   ds
  426d02:	jnp    0x426d7b
  426d04:	fisub  WORD PTR [ebp-0x789c4fca]
  426d0a:	mov    ch,0xd4
  426d0c:	fs in  eax,0x1
  426d0f:	add    BYTE PTR [edi+0x22000002],al
  426d15:	xchg   ebx,eax
  426d16:	jg     0x426d77
  426d18:	or     eax,DWORD PTR [ebx+0x15]
  426d1b:	scas   al,BYTE PTR es:[edi]
  426d1c:	mov    bl,0xa3
  426d1e:	fdivp  st(6),st
  426d20:	ret    
  426d21:	push   ss
  426d22:	fs inc ebx
  426d24:	int    0x9
  426d26:	pop    ecx
  426d27:	(bad)  
  426d29:	xor    BYTE PTR [esi+0x34a8c106],ah
  426d2f:	push   0xac3ee32f
  426d34:	js     0x426d7b
  426d36:	xor    al,0x12
  426d38:	test   BYTE PTR [edi],dl
  426d3a:	cs in  al,0x5d
  426d3d:	mov    ds:0xacd480cf,al
  426d42:	out    dx,al
  426d43:	in     al,0x4d
  426d45:	loope  0x426ce4
  426d47:	fstp   QWORD PTR [ecx+0x64]
  426d4a:	lds    edx,FWORD PTR [ebp-0x64]
  426d4d:	jo     0x426db0
  426d4f:	call   0x3caf32db
  426d54:	dec    ebp
  426d55:	sub    edi,eax
  426d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d58:	and    eax,0x309d51a7
  426d5d:	sub    eax,0xdbf0843f
  426d62:	add    ah,0xfc
  426d65:	push   cs
  426d66:	push   ebp
  426d67:	sub    ah,bh
  426d69:	bnd jb 0x426d3c
  426d6c:	xlat   BYTE PTR ds:[ebx]
  426d6d:	repnz xor BYTE PTR [edx-0x6c],0x76
  426d72:	mov    bl,0xa6
  426d74:	popa   
  426d75:	cs mov dl,0x22
  426d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d79:	adc    ecx,DWORD PTR [esi-0x7ed458a5]
  426d7f:	shl    BYTE PTR [ecx],cl
  426d81:	add    esi,DWORD PTR [eax+eiz*4+0x1f]
  426d85:	xchg   BYTE PTR [edx+ebp*8],dl
  426d88:	mov    DWORD PTR [ebp+0x44e6cfe],esi
  426d8e:	lods   al,BYTE PTR ds:[esi]
  426d8f:	or     DWORD PTR [edx],esi
  426d91:	push   esp
  426d92:	mov    dl,0x2e
  426d94:	mov    ds:0x6def05c,eax
  426d9a:	call   0xeb24:0xd730422d
  426da1:	cli    
  426da2:	test   al,0x59
  426da4:	repz jo 0x426dce
  426da7:	jmp    0x426dd5
  426da9:	lods   al,BYTE PTR ds:[esi]
  426daa:	mov    bl,0xe3
  426dac:	xchg   esp,eax
  426dad:	js     0x426d56
  426daf:	cmp    eax,esi
  426db1:	mov    ebp,0x77483a67
  426db6:	clc    
  426db7:	daa    
  426db8:	stos   BYTE PTR es:[edi],al
  426db9:	gs mov dh,0x4b
  426dbc:	std    
  426dbd:	fimul  WORD PTR [ebx-0x3e]
  426dc0:	push   cs
  426dc1:	and    eax,0x94acd3d4
  426dc6:	shl    bl,1
  426dc8:	sbb    BYTE PTR [esi],ah
  426dca:	push   ss
  426dcb:	jns    0x426dd4
  426dcd:	push   esp
  426dce:	add    eax,0xb6f0f9e3
  426dd3:	ret    0x1dba
  426dd6:	loope  0x426e39
  426dd8:	lea    ebp,[esp+edi*1+0x6b]
  426ddc:	fs out dx,al
  426dde:	test   al,0xf5
  426de0:	int    0xba
  426de2:	push   edx
  426de3:	mov    ds:0x17a14528,eax
  426de8:	xor    eax,0xf8e56cc1
  426ded:	or     BYTE PTR [eax],dl
  426def:	fild   QWORD PTR [edx+0x63dbf9b0]
  426df5:	dec    ebp
  426df6:	mov    ah,0xde
  426df8:	adc    eax,0xba84faaa
  426dfd:	(bad)  
  426dfe:	sbb    cl,BYTE PTR [ebp-0x65]
  426e01:	sub    al,0x39
  426e03:	push   ss
  426e04:	daa    
  426e05:	mov    eax,ds:0x23ab37ab
  426e0a:	lea    ecx,[ebx]
  426e0c:	scas   eax,DWORD PTR es:[edi]
  426e0d:	cli    
  426e0e:	xor    BYTE PTR [ecx],ah
  426e10:	or     al,0x2f
  426e12:	lods   eax,DWORD PTR ds:[esi]
  426e13:	add    al,0xdb
  426e15:	das    
  426e16:	jnp    0x426df0
  426e18:	aad    0x74
  426e1a:	call   0x1089ade9
  426e1f:	pop    esi
  426e20:	dec    ebp
  426e21:	mov    bl,0xf5
  426e23:	mov    ds,WORD PTR [edi]
  426e25:	push   esi
  426e26:	shr    DWORD PTR [edi+0xe163ab4],cl
  426e2c:	jg     0x426dba
  426e2e:	fldlg2 
  426e30:	nop
  426e31:	or     DWORD PTR [edi-0x76],0x44
  426e35:	push   edx
  426e36:	(bad)  
  426e39:	inc    DWORD PTR [esi-0x1b]
  426e3c:	repnz add ch,cl
  426e3f:	and    DWORD PTR [edx+edx*8+0x7c],esi
  426e43:	xchg   ebp,edi
  426e45:	iret   
  426e46:	rcl    DWORD PTR [ecx-0x4],1
  426e49:	stos   BYTE PTR es:[edi],al
  426e4a:	cld    
  426e4b:	into   
  426e4c:	idiv   ebx
  426e4e:	(bad)  [esi+0x3b89588d]
  426e54:	sub    bh,cl
  426e56:	mov    al,ds:0x7e55ac15
  426e5b:	cmp    bl,BYTE PTR [ebp+0x61249572]
  426e61:	mov    bl,al
  426e63:	jmp    0x354a:0xa2c8fa0
  426e6a:	sbb    al,0xd2
  426e6c:	or     dh,BYTE PTR [ecx-0x29c92275]
  426e72:	jne    0x426e10
  426e74:	cmp    BYTE PTR [edx],cl
  426e76:	and    ecx,ebx
  426e78:	icebp  
  426e79:	sub    al,0x25
  426e7b:	aas    
  426e7c:	aas    
  426e7d:	int3   
  426e7e:	bound  edi,QWORD PTR [ecx]
  426e80:	in     eax,dx
  426e81:	and    cl,BYTE PTR [di-0x279d]
  426e86:	aaa    
  426e87:	lods   eax,DWORD PTR ds:[esi]
  426e89:	add    dl,BYTE PTR [edx]
  426e8b:	xor    al,BYTE PTR [ebx+0x2]
  426e8e:	lock pop edi
  426e90:	sbb    bl,dl
  426e92:	mov    edi,0xc788ba0f
  426e97:	cmp    edx,DWORD PTR [esi-0xb08dc41]
  426e9d:	push   ebp
  426e9e:	add    DWORD PTR [esi-0x3db9edc9],edi
  426ea4:	cmc    
  426ea5:	ret    0x2592
  426ea8:	aam    0xcf
  426eaa:	jmp    0xa2e312b1
  426eaf:	add    eax,0x55d004df
  426eb4:	add    al,0xcc
  426eb6:	sub    al,0xbb
  426eb8:	call   0xce81:0x7e9dfbf2
  426ebf:	hlt    
  426ec0:	push   ebx
  426ec1:	imul   eax,DWORD PTR [ecx],0xffffffec
  426ec4:	jb     0x426f32
  426ec6:	and    DWORD PTR [edx+0xdb855b2],esi
  426ecc:	(bad)  
  426ecd:	dec    DWORD PTR [ebp+0x1f433181]
  426ed3:	repnz fadd st,st(2)
  426ed6:	inc    ecx
  426ed7:	sub    eax,0x8be0e1cb
  426edc:	adc    DWORD PTR [ecx+0x1],ecx
  426edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ee0:	mov    esi,0x5a0ad791
  426ee5:	sub    esi,DWORD PTR [bx]
  426ee8:	fwait
  426ee9:	sti    
  426eea:	rcl    DWORD PTR ds:0x994ee9e2,cl
  426ef0:	cmp    eax,0x5449d53a
  426ef5:	aaa    
  426ef6:	lahf   
  426ef7:	add    BYTE PTR [edx+0x34f7f8df],dl
  426efd:	or     DWORD PTR [esi],esp
  426eff:	imul   edx,DWORD PTR [ecx+0x27a4d9b],0x2f
  426f06:	or     BYTE PTR [ecx+esi*4],dh
  426f09:	sbb    edx,DWORD PTR [edx]
  426f0b:	sti    
  426f0c:	mov    DWORD PTR [eax+0x76],edx
  426f0f:	cdq    
  426f10:	or     cl,BYTE PTR [ecx+0x3b]
  426f13:	outs   dx,BYTE PTR ds:[esi]
  426f14:	scas   eax,DWORD PTR es:[edi]
  426f15:	hlt    
  426f16:	ret    0x7d42
  426f19:	mov    DWORD PTR [ebp+0x5ae5af6f],ecx
  426f1f:	adc    DWORD PTR [ebx],eax
  426f21:	and    DWORD PTR [eax],edi
  426f23:	mov    edi,0xe326a16b
  426f28:	mov    ds:0x799229b2,al
  426f2d:	mov    ch,0xa1
  426f2f:	push   ecx
  426f30:	ret    0x27f3
  426f33:	push   esi
  426f34:	inc    esi
  426f35:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  426f37:	in     eax,dx
  426f38:	test   DWORD PTR [edx+0x425db049],ebp
  426f3e:	scas   al,BYTE PTR es:[edi]
  426f3f:	iret   
  426f40:	ret    0x9377
  426f43:	mov    cl,0x3b
  426f45:	dec    eax
  426f46:	pusha  
  426f47:	add    dh,al
  426f49:	test   eax,0x4d4fd4aa
  426f4e:	les    edi,FWORD PTR [esi]
  426f50:	(bad)
  426f53:	mov    dh,BYTE PTR [ecx]
  426f55:	daa    
  426f56:	pop    eax
  426f57:	add    al,0xaf
  426f59:	clc    
  426f5a:	imul   esp,DWORD PTR [esi],0x73
  426f5d:	dec    ebx
  426f5e:	xor    eax,0xdc2c604
  426f63:	shl    BYTE PTR [eax+0x5e1e1404],0x4a
  426f6a:	sbb    eax,0x505a619e
  426f6f:	xchg   BYTE PTR [edi],ch
  426f71:	(bad)  
  426f72:	out    dx,al
  426f73:	dec    edx
  426f74:	mov    al,ds:0x4f04bf15
  426f79:	sar    DWORD PTR [ecx+0x29],1
  426f7c:	nop
  426f7d:	add    eax,0xd8bfdd13
  426f82:	jmp    0x8893:0xfebf162d
  426f89:	add    al,0x40
  426f8b:	cli    
  426f8c:	or     BYTE PTR [edx-0x4a7f524f],0xcd
  426f93:	sbb    DWORD PTR [edx-0x53],ebx
  426f96:	fstp   TBYTE PTR [edi+edx*2-0x66ffc87a]
  426f9d:	enter  0x9ff8,0xf9
  426fa1:	mov    edi,0xdf92ceff
  426fa6:	push   ds
  426fa7:	outs   dx,BYTE PTR ds:[esi]
  426fa8:	jo     0x42701c
  426faa:	mov    edx,0x1e7eb70
  426faf:	add    BYTE PTR [edi-0x20fffffe],al
  426fb5:	loop   0x426f5a
  426fb7:	pop    esi
  426fb8:	ret    
  426fb9:	je     0x426f79
  426fbb:	fistp  DWORD PTR [ebp-0x9]
  426fbe:	repz and ecx,DWORD PTR [ecx+0x19755e3b]
  426fc5:	inc    ebp
  426fc6:	ret    
  426fc7:	inc    esi
  426fc8:	jge    0x426fda
  426fca:	scas   eax,DWORD PTR es:[edi]
  426fcb:	ficom  DWORD PTR [ebx+0x40]
  426fce:	jbe    0x426f72
  426fd0:	fwait
  426fd1:	out    0x3b,al
  426fd3:	in     al,0x72
  426fd5:	test   al,0xe4
  426fd7:	fstp   TBYTE PTR [edx-0x3e]
  426fda:	mov    BYTE PTR [eax],bl
  426fdc:	xor    eax,0x80331c7f
  426fe1:	cmp    al,0x65
  426fe3:	cmp    eax,0xe775a7ce
  426fe8:	cmp    DWORD PTR [ecx-0x30],ebx
  426feb:	cmp    al,0xde
  426fed:	loope  0x42704c
  426fef:	ret    0x9520
  426ff2:	cmp    esi,ecx
  426ff4:	mov    WORD PTR [eax-0x1d],fs
  426ff7:	(bad)  
  426ff8:	or     edi,DWORD PTR [ebx-0x33]
  426ffb:	out    0x3,eax
  426ffd:	dec    esi
  426ffe:	dec    ebx
  426fff:	xor    esp,DWORD PTR [ebp+0x59]
  427002:	test   al,0xdc
  427004:	xor    eax,DWORD PTR [edi+0x6e]
  427007:	adc    eax,DWORD PTR [edi-0x5f]
  42700a:	dec    ebp
  42700b:	ds jecxz 0x426fa1
  42700e:	cli    
  42700f:	push   ebp
  427010:	or     al,BYTE PTR [ebp-0x39cb2366]
  427016:	push   0xfffffffb
  427018:	cmp    BYTE PTR [edx],bl
  42701a:	mov    esp,0xbf5fb759
  42701f:	out    0x24,al
  427021:	mov    ebx,0x1911bc3c
  427026:	les    eax,FWORD PTR [edx+ebx*8]
  427029:	dec    esp
  42702a:	xchg   ebx,eax
  42702b:	cmp    al,0x57
  42702d:	out    0xc0,al
  42702f:	stos   DWORD PTR es:[edi],eax
  427030:	arpl   WORD PTR [ebx+0x2d123406],di
  427036:	outs   dx,BYTE PTR ds:[esi]
  427037:	je     0x426fd1
  427039:	pop    ds
  42703a:	xor    DWORD PTR [edi],0x4a4d6687
  427040:	xchg   ebp,eax
  427041:	popa   
  427042:	and    ebp,DWORD PTR [edi+ecx*8+0x8]
  427046:	dec    edx
  427047:	xchg   BYTE PTR [eax-0x54],bh
  42704a:	ret    0xcb19
  42704d:	dec    ebp
  42704e:	test   DWORD PTR [ebx-0x56],ebp
  427051:	pop    esp
  427052:	mov    esp,0x9c9790e7
  427057:	pop    edx
  427058:	sub    eax,0xf4489ef0
  42705d:	mov    ?,WORD PTR ds:0xab687682
  427063:	enter  0x396d,0x9e
  427067:	cwde   
  427068:	jge    0x427072
  42706a:	dec    ebx
  42706b:	mov    ch,0x71
  42706d:	adc    al,0x99
  42706f:	mov    WORD PTR [ebp+0x3b],?
  427072:	fnsetpm(287 only) 
  427074:	jmp    0x42702a
  427076:	pop    ss
  427077:	push   ebx
  427078:	or     cl,BYTE PTR [edx-0x42]
  42707b:	jne    0x427020
  42707d:	dec    ebp
  42707e:	mov    edx,0x77070e76
  427083:	test   eax,0xa2cedb28
  427088:	push   0x77c0d313
  42708d:	fisubr WORD PTR ds:[eax+0x6c22590b]
  427094:	dec    ebp
  427095:	icebp  
  427096:	lods   al,BYTE PTR ds:[esi]
  427097:	inc    edi
  427098:	aad    0x33
  42709a:	mov    al,0x50
  42709c:	pop    es
  42709d:	ds jae 0x4270b6
  4270a0:	adc    edi,ecx
  4270a2:	in     al,0x6e
  4270a4:	add    esp,esi
  4270a6:	and    eax,0xa79124b6
  4270ab:	sbb    edi,DWORD PTR [ebx+0x43e95be8]
  4270b1:	call   0xa6f7a01b
  4270b6:	mov    eax,DWORD PTR [edi]
  4270b8:	pushf  
  4270b9:	in     al,0xa2
  4270bb:	retf   
  4270bc:	jecxz  0x42707a
  4270be:	cld    
  4270bf:	iret   
  4270c0:	mov    esi,0x97e599ae
  4270c5:	fldenv [edi]
  4270c7:	(bad)  
  4270c8:	mov    ds,eax
  4270ca:	pop    edi
  4270cb:	cmp    BYTE PTR [ebx-0x47],bh
  4270ce:	mov    al,ds:0x424b5426
  4270d3:	mov    ah,0x50
  4270d6:	jb     0x427128
  4270d8:	mov    eax,ds:0x90b0b7b2
  4270dd:	mov    edi,DWORD PTR [edi+0x6b]
  4270e0:	add    bl,0xdd
  4270e3:	mov    eax,0x6582f752
  4270e8:	scas   eax,DWORD PTR es:[edi]
  4270e9:	sbb    bl,ah
  4270eb:	ret    
  4270ec:	int3   
  4270ed:	mov    dh,0x72
  4270ef:	mov    bh,0x42
  4270f1:	xchg   BYTE PTR [ebp-0x59],bh
  4270f4:	pop    edx
  4270f5:	xchg   ecx,eax
  4270f6:	dec    edx
  4270f7:	push   edi
  4270f8:	sub    al,0x92
  4270fa:	push   esi
  4270fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270fc:	add    bl,BYTE PTR [ecx-0x458dc4b]
  427102:	jg     0x4270c7
  427104:	inc    esp
  427105:	pop    edx
  427106:	cmp    DWORD PTR [edx-0x14],edx
  427109:	or     eax,0xc555afd1
  42710e:	push   ds
  42710f:	rcr    BYTE PTR [edi-0x4a],0x40
  427113:	add    DWORD PTR [eax-0x47],0x4b7c4d2
  42711a:	test   BYTE PTR [edi+0x1ce86c9a],dl
  427120:	mov    ebp,0x709846d8
  427125:	out    0x2f,al
  427127:	or     DWORD PTR [edi],esp
  427129:	mov    dl,0xb2
  42712b:	daa    
  42712c:	sbb    DWORD PTR [ebp-0x3905e15c],edi
  427132:	ret    0xe6b
  427135:	cli    
  427136:	fisttp DWORD PTR [esi]
  427138:	add    al,0x76
  42713a:	fsubr  st(1),st
  42713c:	mov    ah,0x7a
  42713e:	dec    ebp
  42713f:	enter  0x8a09,0x64
  427143:	repnz cli 
  427145:	div    DWORD PTR [ebp-0x64]
  427148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427149:	pop    eax
  42714a:	fwait
  42714b:	popa   
  42714c:	pop    esp
  42714d:	and    BYTE PTR [edx-0x17d940ea],0x34
  427154:	pushf  
  427155:	daa    
  427156:	out    0x60,al
  427158:	ret    
  427159:	(bad)  
  42715a:	fdivp  st(2),st
  42715c:	bound  ebx,QWORD PTR [eax-0x76]
  42715f:	leave  
  427160:	mov    ss,WORD PTR [ebx]
  427162:	sub    DWORD PTR [edx+0x475ba9fe],edi
  427168:	jbe    0x4271b8
  42716a:	xor    eax,esi
  42716c:	cli    
  42716d:	add    edx,DWORD PTR [esi]
  42716f:	sti    
  427170:	sbb    ch,BYTE PTR [ecx+0x30]
  427173:	xchg   ecx,eax
  427174:	retf   0xb7bb
  427177:	mov    BYTE PTR [eax-0x2ae61d6c],bl
  42717d:	push   esp
  42717e:	leave  
  42717f:	stos   DWORD PTR es:[edi],eax
  427180:	inc    esi
  427181:	ret    
  427182:	adc    esi,DWORD PTR [ebx+0x5ed21875]
  427188:	imul   esi,DWORD PTR [esi+0x9],0xffffff81
  42718c:	cmp    BYTE PTR [eax-0x709ac2e5],0x46
  427193:	dec    ebp
  427194:	pop    ss
  427195:	dec    ecx
  427196:	imul   eax,esp,0x3c
  427199:	and    BYTE PTR [ecx+0x44f8ecc1],ah
  42719f:	push   ecx
  4271a0:	adc    DWORD PTR [ecx],ebp
  4271a2:	inc    esp
  4271a3:	or     ecx,esi
  4271a5:	inc    eax
  4271a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271a7:	fldcw  WORD PTR [ebp-0x4]
  4271aa:	imul   ebx,DWORD PTR [ecx],0xffffffc8
  4271ad:	sub    BYTE PTR [eax],al
  4271af:	cmp    eax,0xf9dac114
  4271b4:	push   eax
  4271b5:	push   cs
  4271b6:	mov    dh,0x51
  4271b8:	ror    DWORD PTR [esi+0x5a5e488f],0x38
  4271bf:	jmp    0xc9ccb8b5
  4271c4:	mov    BYTE PTR [ecx+0x5b],bl
  4271c7:	test   eax,0x55b8ca52
  4271cc:	dec    ebp
  4271cd:	js     0x42724a
  4271cf:	in     al,0xbf
  4271d1:	mov    ebp,0xbfbfb81b
  4271d6:	call   0x31ce:0xfbf57757
  4271dd:	push   ds
  4271de:	fld    QWORD PTR [esi]
  4271e0:	loope  0x427207
  4271e2:	xor    al,0x21
  4271e4:	and    eax,0x179bc1fd
  4271e9:	aas    
  4271ea:	les    esp,FWORD PTR [ecx-0x18dc60ad]
  4271f0:	(bad)  
  4271f1:	mov    ebx,0xe35c9e62
  4271f6:	and    ah,bh
  4271f8:	mov    ds:0xfeea8d58,eax
  4271fd:	cmc    
  4271fe:	aaa    
  4271ff:	push   esp
  427201:	test   BYTE PTR [edi+0x40],ah
  427204:	(bad)  
  427205:	outs   dx,DWORD PTR ds:[esi]
  427206:	jg     0x427220
  427208:	jne    0x42727d
  42720a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42720b:	pop    ebp
  42720c:	mov    dl,0x7b
  42720e:	add    al,0x11
  427210:	test   BYTE PTR [ecx-0x3816dce2],dl
  427216:	sub    eax,0xdbdbb97a
  42721b:	es ret 
  42721d:	fwait
  42721e:	das    
  42721f:	pop    ebp
  427220:	adc    BYTE PTR [ebp+0x61141007],cl
  427226:	stos   BYTE PTR es:[edi],al
  427227:	mov    edx,esp
  427229:	cmp    ebx,DWORD PTR [ebx]
  42722b:	hlt    
  42722c:	mov    ebx,0x54d76d4c
  427231:	popa   
  427232:	mov    cl,0x11
  427234:	fadd   QWORD PTR [ecx-0x6a8658bf]
  42723a:	jo     0x42723c
  42723c:	jns    0x427248
  42723e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  427242:	jge    0x4272af
  427244:	int3   
  427245:	outs   dx,BYTE PTR ds:[esi]
  427246:	xchg   esi,esi
  427248:	sbb    eax,0x7225cfb1
  42724d:	jmp    0x0:0x2870001
  427254:	jge    0x4272b8
  427256:	lock adc eax,0xe43dff3a
  42725c:	dec    edx
  42725d:	mov    ecx,0x41041799
  427262:	mov    eax,0xb81520da
  427267:	xlat   BYTE PTR ds:[ebx]
  427268:	add    DWORD PTR [esi+eax*4-0x1ec68256],esp
  42726f:	(bad)  
  427270:	shl    BYTE PTR [edi+0x5f],1
  427273:	mov    ds:0x9197a603,al
  427278:	shl    DWORD PTR [edx],0x24
  42727b:	xchg   ebp,eax
  42727c:	pop    esp
  42727d:	test   al,0x82
  42727f:	sub    eax,0x31a40e64
  427284:	pop    ebx
  427285:	jle    0x427257
  427287:	inc    eax
  427288:	add    ch,BYTE PTR [edi+0x1f]
  42728b:	repnz not ebp
  42728e:	and    ebx,DWORD PTR [ecx-0x6e822c9]
  427294:	jmp    0x5fc8:0xc39d91e5
  42729b:	leave  
  42729c:	aaa    
  42729d:	cmc    
  42729e:	sub    eax,0x95c42128
  4272a3:	cmp    ch,BYTE PTR [esi+0x2a55d77e]
  4272a9:	stos   BYTE PTR es:[edi],al
  4272aa:	push   eax
  4272ab:	pop    ebp
  4272ac:	xor    esi,ebx
  4272ae:	jno    0x427245
  4272b0:	mov    al,BYTE PTR [eax+0x6dad8dc9]
  4272b6:	jge    0x4272d2
  4272b8:	stos   BYTE PTR es:[edi],al
  4272b9:	mov    dl,0x7b
  4272bb:	mov    al,BYTE PTR [edx]
  4272bd:	pop    es
  4272be:	inc    eax
  4272bf:	mov    ebx,0x9bf2c584
  4272c4:	mov    eax,0x3f1286d3
  4272c9:	cmp    ah,BYTE PTR [eax-0xe3382b0]
  4272cf:	pushf  
  4272d0:	mov    ch,0x59
  4272d2:	xor    eax,0xd6003e6
  4272d7:	or     eax,0xd8597fe9
  4272dc:	cld    
  4272dd:	jl     0x4272fb
  4272df:	lock bound esi,QWORD PTR [eax-0x347024b9]
  4272e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272e7:	fisub  WORD PTR cs:[edi+0x20]
  4272eb:	ret    
  4272ec:	out    0xf5,eax
  4272ee:	call   0xc181eaa8
  4272f3:	jl     0x427314
  4272f5:	js     0x427315
  4272f7:	lods   al,BYTE PTR ds:[esi]
  4272f8:	and    ah,cl
  4272fa:	cmp    DWORD PTR [esi-0x44],ecx
  4272fd:	in     al,0x74
  4272ff:	pusha  
  427300:	outs   dx,DWORD PTR ds:[esi]
  427301:	retf   
  427302:	mov    edi,0x44851123
  427307:	ror    DWORD PTR [eax-0x4a914746],0xa3
  42730e:	push   es
  42730f:	mov    ah,0x36
  427311:	push   edx
  427312:	cmp    DWORD PTR [esi-0x23df2709],eax
  427318:	pop    ebp
  427319:	icebp  
  42731a:	cmp    DWORD PTR [ecx+0x3c2eb8a6],edi
  427320:	ja     0x427325
  427322:	enter  0x16bd,0xb0
  427326:	xchg   DWORD PTR [esi],ebx
  427328:	cmp    DWORD PTR [edx+0x34d23a78],eax
  42732e:	sbb    ecx,ebp
  427330:	and    cl,BYTE PTR [ecx-0x29b2e487]
  427336:	pop    edx
  427337:	sub    BYTE PTR [ebp-0x3],dl
  42733a:	sbb    DWORD PTR [ebp+eiz*1+0x1aa0109f],edi
  427341:	mov    edi,DWORD PTR [ebp+eiz*4+0x3816f92a]
  427348:	lock sbb BYTE PTR [ebx+0x2d],bl
  42734c:	jno    0x427395
  42734e:	pop    ebx
  42734f:	mov    al,0x8b
  427351:	push   0xffffffab
  427353:	xchg   edx,eax
  427354:	jge    0x427303
  427356:	test   eax,0xd77131a7
  42735b:	mov    eax,ds:0xd9fac458
  427360:	pop    DWORD PTR [ebx+0x73]
  427363:	add    al,0xee
  427365:	imul   ebx,DWORD PTR [edx-0x47d18946],0xe8b8c571
  42736f:	adc    eax,0x54c68802
  427374:	push   ebp
  427375:	and    BYTE PTR [ecx-0x72],cl
  427378:	pop    esi
  427379:	mov    ebp,0xf5dd462e
  42737e:	pop    esp
  42737f:	ss xchg ecx,eax
  427381:	pop    ss
  427382:	inc    esp
  427383:	push   ebp
  427384:	ja     0x4273c3
  427386:	push   edi
  427387:	xchg   ebx,eax
  427388:	retf   0x8eb6
  42738b:	cmp    ch,BYTE PTR [ebp+edx*1-0x7725b249]
  427392:	xchg   esp,eax
  427393:	cmc    
  427394:	sub    eax,0x311facdf
  427399:	xchg   esi,eax
  42739a:	sub    BYTE PTR [edi+0x13],al
  42739d:	mov    edx,0xcfc6c32c
  4273a2:	aam    0xaf
  4273a4:	add    dl,BYTE PTR [ecx]
  4273a6:	and    eax,0xdda1ccde
  4273ab:	retf   
  4273ac:	ja     0x4273e3
  4273ae:	fistp  WORD PTR ds:0xdc08adcc
  4273b4:	inc    ecx
  4273b5:	push   esi
  4273b6:	xchg   edi,eax
  4273b7:	and    al,0xe
  4273b9:	and    DWORD PTR [esi+0x6d],0x65bfa40b
  4273c0:	das    
  4273c1:	mov    dh,0x5b
  4273c3:	mov    ebp,0x14516a8
  4273c8:	std    
  4273c9:	mov    edx,gs
  4273cb:	mov    al,ds:0xcd1fa3df
  4273d0:	(bad)
  4273d3:	cmp    eax,0x97bd2117
  4273d8:	mov    ecx,0xd0aadd0
  4273dd:	popa   
  4273de:	sbb    eax,0x424f2624
  4273e3:	sbb    dl,dl
  4273e5:	lock xor DWORD PTR [edx+0x14],ebp
  4273e9:	clc    
  4273ea:	sbb    bh,BYTE PTR [eax-0x248e4e2f]
  4273f0:	jno    0x427381
  4273f2:	push   es
  4273f3:	lea    ebx,[ebx-0x8]
  4273f6:	js     0x427407
  4273f8:	test   eax,0xbf0357ca
  4273fd:	out    dx,al
  4273fe:	pop    es
  4273ff:	inc    edx
  427400:	ret    0xabe8
  427403:	jge    0x42745f
  427405:	dec    ebx
  427406:	jno    0x4273e9
  427408:	je     0x4273dd
  42740a:	retf   0xb88c
  42740d:	xchg   ebx,eax
  42740e:	and    BYTE PTR [ebx+0x3e9f47c3],0x35
  427415:	pop    eax
  427416:	ror    edx,cl
  427418:	int    0x88
  42741a:	pop    ebp
  42741b:	mov    esi,0xbfb2dac1
  427420:	add    DWORD PTR [ecx],edi
  427422:	gs jmp 0xe0a:0xe6b2405d
  42742a:	jbe    0x427469
  42742c:	jle    0x42746c
  42742e:	arpl   ax,dx
  427430:	rol    BYTE PTR ds:0x6bca0ffa,cl
  427436:	dec    ebp
  427437:	jo     0x4273ce
  427439:	add    ebx,edi
  42743b:	addr16 jge 0x4273ef
  42743e:	out    dx,eax
  42743f:	sbb    BYTE PTR [eax],dl
  427441:	icebp  
  427442:	and    BYTE PTR [ecx],dl
  427444:	cmp    ch,BYTE PTR [esi+0x31]
  427447:	retf   0xf0e2
  42744a:	popa   
  42744b:	xchg   ebp,eax
  42744c:	pop    esp
  42744d:	inc    ebx
  42744e:	aam    0xdc
  427450:	push   esi
  427451:	jge    0x42747c
  427453:	dec    ebx
  427454:	push   cs
  427455:	shr    BYTE PTR [edx-0x27],0xb
  427459:	fs adc BYTE PTR fs:[esi],dh
  42745d:	fadd   st,st(3)
  42745f:	mov    ds:0x521d1a4a,eax
  427464:	je     0x42740e
  427466:	sub    BYTE PTR [edi+0x20],0xd4
  42746a:	inc    ecx
  42746b:	jbe    0x4274b9
  42746d:	clc    
  42746e:	xlat   BYTE PTR ds:[ebx]
  42746f:	mov    ch,0x8f
  427471:	mov    al,0xc0
  427473:	mov    al,0xa2
  427475:	or     esp,DWORD PTR [ecx+0x20]
  427478:	and    bl,bl
  42747a:	mov    esi,0x7333ca3
  42747f:	mov    dh,0x84
  427481:	pop    ebx
  427482:	xor    DWORD PTR [ecx+0x9],esi
  427485:	shr    ecx,0x86
  427488:	jl     0x427458
  42748a:	test   BYTE PTR [ecx-0x6e],bh
  42748d:	adc    BYTE PTR [edx-0x3cec7cb],al
  427493:	inc    ebx
  427494:	icebp  
  427495:	in     eax,0xd6
  427497:	push   ecx
  427498:	clc    
  427499:	repz add BYTE PTR [eax],ch
  42749c:	mov    eax,ds:0xcd881ece
  4274a1:	(bad)  
  4274a2:	retf   0x7a60
  4274a5:	cmp    edx,0xffffffee
  4274a8:	jae    0x427444
  4274aa:	and    ch,cl
  4274ac:	mov    ah,0x1f
  4274ae:	and    ebx,DWORD PTR [eax+ebx*1-0x48]
  4274b2:	hlt    
  4274b3:	iret   
  4274b4:	loopne 0x4274cc
  4274b6:	and    al,BYTE PTR [ecx+eiz*4]
  4274b9:	es or  al,0xf2
  4274bc:	stos   DWORD PTR es:[edi],eax
  4274bd:	loope  0x42747a
  4274bf:	int    0x46
  4274c1:	sbb    eax,0x8094e562
  4274c6:	pop    esp
  4274c7:	cmp    DWORD PTR [eax+0x28c1914],ebp
  4274cd:	ds mov dl,0x64
  4274d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274d1:	loopne 0x42748b
  4274d3:	cmc    
  4274d4:	std    
  4274d5:	ss fwait
  4274d7:	(bad)  
  4274d8:	jge    0x427493
  4274da:	iret   
  4274db:	add    BYTE PTR [ecx+0x3],bl
  4274de:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  4274e3:	pop    ds
  4274e4:	sub    ebp,DWORD PTR [esi-0x4035c146]
  4274ea:	(bad)  
  4274eb:	dec    ebx
  4274ec:	stc    
  4274ed:	in     al,dx
  4274ee:	add    DWORD PTR [eax],eax
  4274f0:	xchg   DWORD PTR [edx],eax
  4274f2:	add    BYTE PTR [eax],al
  4274f4:	add    al,0x55
  4274f6:	or     BYTE PTR gs:[eax],al
  4274f9:	push   ds
  4274fa:	(bad)  
  4274fb:	jne    0x427485
  4274fd:	in     al,dx
  4274fe:	or     al,0xa4
  427500:	pop    edx
  427501:	jge    0x427541
  427503:	retf   0xfab7
  427506:	push   esp
  427507:	fnstenv [esi+0x29]
  42750a:	sbb    edi,0xb9aedc4e
  427510:	jecxz  0x427557
  427512:	das    
  427513:	xchg   BYTE PTR [edx-0x4d557430],al
  427519:	inc    ebx
  42751a:	xchg   ebx,eax
  42751b:	lods   al,BYTE PTR ds:[esi]
  42751c:	push   edi
  42751d:	sub    ebp,DWORD PTR [esi]
  42751f:	test   BYTE PTR [ebx-0x1a],al
  427522:	jae    0x427509
  427524:	(bad)  
  427525:	jp     0x427543
  427527:	out    dx,eax
  427528:	xlat   BYTE PTR ds:[ebx]
  427529:	add    al,0x8d
  42752b:	dec    ebx
  42752c:	push   cs
  42752d:	enter  0x7687,0x25
  427531:	dec    ebx
  427532:	inc    ebp
  427533:	cmp    edi,edi
  427535:	mov    dh,0x5d
  427537:	test   al,0x2d
  427539:	je     0x42754e
  42753b:	cld    
  42753c:	xor    al,BYTE PTR [eax+0x12]
  42753f:	ja     0x4275a4
  427541:	add    DWORD PTR [eax-0x5b73ceed],edi
  427547:	aas    
  427548:	mov    ecx,DWORD PTR [esi-0x61a39892]
  42754e:	mov    ch,bl
  427550:	enter  0x7f01,0xcd
  427554:	mov    eax,0x7db1138e
  427559:	and    DWORD PTR [edx+esi*2-0x1a],0x24ffb34b
  427561:	add    DWORD PTR [ebp-0x148ea9a3],ebp
  427567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427568:	int3   
  427569:	jmp    0xe3e66830
  42756e:	lahf   
  42756f:	pop    eax
  427570:	sbb    esp,DWORD PTR [eax+ecx*2+0x48]
  427574:	dec    esi
  427575:	out    dx,eax
  427576:	fidivr WORD PTR [edi-0x62915977]
  42757c:	ins    BYTE PTR es:[edi],dx
  42757d:	in     eax,0xe3
  42757f:	pop    ds
  427580:	adc    BYTE PTR [edx-0x72],cl
  427583:	jl     0x4275d4
  427585:	xchg   edi,eax
  427586:	xchg   DWORD PTR [edx],ecx
  427588:	(bad)  
  427589:	loope  0x427560
  42758b:	lahf   
  42758c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42758d:	add    edx,edi
  42758f:	ret    
  427590:	ror    BYTE PTR [edi+0x30],0xeb
  427594:	out    dx,al
  427595:	and    al,0xd4
  427597:	and    bl,BYTE PTR [edi+0x1e]
  42759a:	mov    edi,0x7548a2e8
  42759f:	sbb    DWORD PTR [edx-0x78e6cd0],ecx
  4275a5:	mov    al,ds:0xc7678d9d
  4275aa:	rol    DWORD PTR [ecx],cl
  4275ac:	in     eax,dx
  4275ad:	sar    ebx,0x1c
  4275b0:	je     0x427592
  4275b2:	leave  
  4275b3:	jmp    0x4275dd
  4275b5:	push   eax
  4275b6:	aaa    
  4275b7:	sar    BYTE PTR [edi],cl
  4275b9:	outs   dx,DWORD PTR ds:[esi]
  4275ba:	jmp    ecx
  4275bc:	call   0x998d:0xb69c633c
  4275c3:	iret   
  4275c4:	sti    
  4275c5:	loope  0x427617
  4275c7:	ret    
  4275c8:	cmp    edi,DWORD PTR es:[esi+0x73]
  4275cc:	pop    ss
  4275cd:	sbb    ebp,DWORD PTR [esi-0xa9ea5b5]
  4275d3:	jle    0x4275e4
  4275d5:	sbb    al,0xd1
  4275d7:	cwde   
  4275d8:	push   edi
  4275d9:	sub    eax,0xc02b373e
  4275de:	in     eax,0x6a
  4275e0:	push   esi
  4275e1:	aad    0xbc
  4275e3:	mov    BYTE PTR [eax],bh
  4275e5:	gs sbb eax,esp
  4275e8:	lods   eax,DWORD PTR ds:[esi]
  4275e9:	jae    0x4275cd
  4275eb:	bound  esi,QWORD PTR [ebp-0x74]
  4275ee:	xlat   BYTE PTR ds:[ebx]
  4275ef:	fs ins BYTE PTR es:[edi],dx
  4275f1:	xchg   esp,eax
  4275f2:	mov    esi,0xbc1df1f9
  4275f7:	int3   
  4275f8:	dec    ecx
  4275f9:	(bad)  
  4275fa:	in     eax,0xa2
  4275fc:	cwde   
  4275fd:	dec    ebx
  4275fe:	and    eax,0x6d555bdb
  427603:	outs   dx,DWORD PTR ds:[esi]
  427604:	aaa    
  427605:	add    DWORD PTR [ebp-0x185a602d],ebx
  42760b:	push   ebx
  42760c:	and    esi,DWORD PTR [ebp-0x1d]
  42760f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427610:	jp     0x427599
  427612:	and    BYTE PTR [ecx+0x7b699040],ah
  427618:	mul    BYTE PTR [edi+ebx*4+0x70]
  42761c:	cs pop ds
  42761e:	mov    ds:0x23a4966b,al
  427623:	(bad)  
  427624:	jne    0x4276a3
  427626:	in     eax,dx
  427627:	ss inc edx
  427629:	mov    dl,0x4e
  42762b:	mov    cl,0x18
  42762d:	sbb    al,0xb3
  42762f:	dec    esi
  427630:	nop
  427631:	fisubr WORD PTR [ebp-0x19]
  427634:	and    al,0xc7
  427636:	cli    
  427637:	jmp    0xa151:0xf18189bc
  42763e:	mul    ecx
  427640:	mov    edx,0xfbe96980
  427645:	and    bl,bh
  427647:	and    al,0xb9
  427649:	jmp    0x4276a1
  42764b:	leave  
  42764c:	ins    BYTE PTR es:[edi],dx
  42764d:	xchg   edi,eax
  42764e:	or     BYTE PTR [edi+0x57],bh
  427651:	pop    ebx
  427652:	xchg   al,bl
  427654:	push   0x900df96c
  427659:	mov    edx,0x42554cb3
  42765e:	add    al,0x8b
  427660:	adc    BYTE PTR [esi],0x6c
  427663:	(bad)  
  427664:	push   cs
  427665:	adc    DWORD PTR [esp+edx*4-0x66b9e126],ebx
  42766c:	adc    BYTE PTR [esp+ebp*1-0x4b],bl
  427670:	(bad)
  427674:	cli    
  427675:	jmp    0x5937:0x37b6ac99
  42767c:	xor    al,0xd7
  42767e:	cli    
  42767f:	scas   eax,DWORD PTR es:[edi]
  427680:	mov    ebx,0x389c126b
  427685:	xchg   DWORD PTR [eax-0x68b7f1a6],edx
  42768b:	inc    esi
  42768c:	mov    esp,0xbb3f1226
  427691:	scas   al,BYTE PTR es:[edi]
  427692:	xchg   DWORD PTR [eax-0x52ab9191],eax
  427698:	sbb    al,0x88
  42769a:	repnz or cl,BYTE PTR [eax-0x7ce6c937]
  4276a1:	push   edx
  4276a2:	xor    BYTE PTR [edi],dh
  4276a4:	push   ds
  4276a5:	outs   dx,BYTE PTR ds:[esi]
  4276a6:	(bad)
  4276a9:	and    bl,BYTE PTR ds:0xbd7a025d
  4276af:	xchg   edi,eax
  4276b0:	or     al,0x8a
  4276b2:	add    edx,ebx
  4276b4:	pop    es
  4276b5:	sbb    al,0x67
  4276b7:	mov    ebx,0x1ec0577b
  4276bc:	scas   al,BYTE PTR es:[edi]
  4276bd:	mov    ebx,0x5f396a0e
  4276c2:	iret   
  4276c3:	stos   DWORD PTR es:[edi],eax
  4276c4:	pop    eax
  4276c5:	pop    eax
  4276c6:	cmp    al,0x51
  4276c8:	and    eax,0xc020a36b
  4276cd:	int    0xab
  4276cf:	test   BYTE PTR [ebp-0x2d],0x34
  4276d3:	lahf   
  4276d4:	call   0xaaf16660
  4276d9:	dec    esp
  4276da:	repnz inc edi
  4276dc:	(bad)  
  4276de:	ja     0x4276bc
  4276e0:	jo     0x427748
  4276e2:	loopne 0x42771f
  4276e4:	adc    bh,ah
  4276e6:	sub    BYTE PTR [edx-0x6c569079],bh
  4276ec:	(bad)  
  4276ee:	sub    eax,0x523d9d7d
  4276f3:	(bad)
  4276f6:	out    dx,al
  4276f7:	jge    0x42772c
  4276f9:	inc    esi
  4276fa:	and    al,0x8c
  4276fc:	and    eax,0xac22986d
  427701:	xor    al,0x80
  427703:	mov    ds:0x91b4db9a,eax
  427708:	test   eax,0x9d36c5d8
  42770d:	aaa    
  42770e:	mov    al,ss:0x70675113
  427714:	lds    esp,FWORD PTR [ebp-0x29cf307e]
  42771a:	push   edi
  42771b:	outs   dx,BYTE PTR ds:[esi]
  42771c:	jmp    0x5aa7ec6
  427721:	jns    0x427756
  427723:	push   esp
  427724:	push   esi
  427725:	add    BYTE PTR [edi+0x6c],bh
  427728:	jae    0x42775b
  42772a:	lods   al,BYTE PTR ds:[esi]
  42772b:	pop    ss
  42772c:	mov    ebp,0xbf74fb9a
  427731:	push   0x3c
  427733:	sub    ah,ch
  427735:	and    ebp,DWORD PTR [ebx]
  427737:	xor    eax,0x9ac38725
  42773c:	inc    ecx
  42773d:	sbb    eax,0xad8bf787
  427742:	fcomi  st,st(4)
  427744:	fcomp  QWORD PTR [esi+0x4c71278d]
  42774a:	enter  0x8467,0x6
  42774e:	sbb    BYTE PTR [edx],cl
  427750:	imul   ecx,DWORD PTR [ebx+0x43],0xf49c613a
  427757:	or     eax,0x505c3d2a
  42775c:	and    cl,BYTE PTR [esi]
  42775e:	div    DWORD PTR [edx+0x15b5c60]
  427764:	cmp    BYTE PTR [edi],0xeb
  427767:	pop    ecx
  427768:	(bad)  
  427769:	sbb    esp,DWORD PTR [ebp+0x1c]
  42776c:	iret   
  42776d:	cmp    eax,0x5f857a20
  427772:	bound  edx,QWORD PTR [ebp-0x17]
  427775:	std    
  427776:	stos   BYTE PTR es:[edi],al
  427777:	jnp    0x427727
  427779:	je     0x4277da
  42777b:	add    BYTE PTR [ebx],bl
  42777d:	daa    
  42777e:	pushf  
  42777f:	cli    
  427780:	mov    esp,0x2ae77ffb
  427785:	scas   al,BYTE PTR es:[edi]
  427786:	aad    0xf
  427788:	pop    ecx
  427789:	push   ss
  42778a:	xchg   edi,eax
  42778b:	mov    al,0x80
  42778d:	out    dx,eax
  42778e:	add    DWORD PTR [eax],eax
  427790:	xchg   DWORD PTR [edx],eax
  427792:	add    BYTE PTR [eax],al
  427794:	aam    0xc2
  427796:	mov    esi,DWORD PTR [edi+0x4a13db1d]
  42779c:	bnd jae 0x42774a
  42779f:	mov    ds,eax
  4277a1:	and    esp,DWORD PTR ds:0xc99c2eb7
  4277a7:	adc    ebp,ebx
  4277a9:	xor    al,0x80
  4277ab:	mov    edi,0xea1f154c
  4277b0:	loop   0x42778d
  4277b2:	adc    ch,BYTE PTR [edx]
  4277b4:	test   al,0xc2
  4277b6:	xchg   esp,eax
  4277b7:	std    
  4277b8:	int    0x69
  4277ba:	shr    BYTE PTR [edx+ebp*4+0x6048f232],0x57
  4277c2:	sub    al,0xce
  4277c4:	mov    dh,0x97
  4277c6:	shl    ah,cl
  4277c8:	es jl  0x4277be
  4277cb:	add    al,0xbc
  4277cd:	sub    eax,0x2c86e71b
  4277d2:	xchg   esi,eax
  4277d3:	push   esi
  4277d4:	xchg   ecx,eax
  4277d5:	push   eax
  4277d6:	xor    dl,bl
  4277d8:	popf   
  4277d9:	mov    bh,0x94
  4277db:	shl    BYTE PTR [esi],cl
  4277dd:	xor    ah,BYTE PTR [ecx+0x5c]
  4277e0:	les    esi,FWORD PTR [eax+0x57a316b8]
  4277e6:	push   esp
  4277e7:	data16 jnp 0x427857
  4277ea:	mov    ah,dl
  4277ec:	xchg   bl,dl
  4277ee:	repz lock idiv DWORD PTR [edi]
  4277f2:	(bad)  
  4277f3:	jmp    0x929:0xb561c11e
  4277fa:	shl    BYTE PTR [ecx-0x4e55648],1
  427800:	pop    es
  427801:	push   ds
  427802:	loope  0x4277a4
  427804:	or     edx,eax
  427806:	fdivr  DWORD PTR [eax+ebx*1+0x205ffbde]
  42780d:	in     eax,0x41
  42780f:	sub    edx,ebx
  427811:	xor    DWORD PTR [edi+0x50520d26],ebp
  427817:	push   eax
  427818:	fcom   QWORD PTR [edx]
  42781a:	xchg   ebp,eax
  42781b:	xor    DWORD PTR [esi-0x79],eax
  42781e:	jmp    0xc091:0x3a464016
  427825:	mov    ds:0x995c01e8,eax
  42782a:	test   al,0x5c
  42782c:	pop    edx
  42782d:	xor    al,0x1e
  42782f:	ins    BYTE PTR es:[edi],dx
  427830:	arpl   WORD PTR ds:0x1059bd43,di
  427836:	outs   dx,DWORD PTR ds:[esi]
  427837:	mov    esp,0xb630460d
  42783c:	rcr    DWORD PTR [edi-0x30],0x2
  427840:	jb     0x42787b
  427842:	data16 jns 0x4277c9
  427845:	movntq (bad),mm5
  427846:	out    0xe9,eax
  427848:	lahf   
  427849:	xchg   DWORD PTR [ecx-0x79],edx
  42784c:	xor    DWORD PTR [eax-0x16fe56d5],esi
  427852:	imul   eax,DWORD PTR [edx+eiz*2-0xe819da7],0x97cd82b5
  42785d:	add    al,BYTE PTR [edx]
  42785f:	pop    ebp
  427860:	hlt    
  427861:	dec    edi
  427862:	sbb    eax,0xb38ecdf1
  427867:	sbb    DWORD PTR [edi+0x773dd8fe],edi
  42786d:	in     eax,dx
  42786e:	push   esp
  42786f:	mov    eax,0xb1650256
  427874:	call   0x6feb:0x284d775e
  42787b:	rcl    DWORD PTR [ecx+0x7e363265],cl
  427881:	es retf 0x5761
  427885:	scas   al,BYTE PTR es:[edi]
  427886:	lods   eax,DWORD PTR ds:[esi]
  427887:	stos   DWORD PTR es:[edi],eax
  427888:	popa   
  427889:	mov    edi,0x2753c3d4
  42788e:	shr    BYTE PTR [ecx-0x5e0157bb],1
  427894:	xchg   BYTE PTR [edx-0x56],ah
  427897:	clc    
  427898:	mov    edi,0xd270a1bc
  42789d:	inc    esp
  42789e:	pop    ds
  42789f:	pop    esi
  4278a0:	mov    ecx,es
  4278a2:	or     DWORD PTR [ebx-0x293d6345],eax
  4278a8:	retf   
  4278a9:	cmp    DWORD PTR [edi-0x67f8a4],ebx
  4278af:	push   esp
  4278b0:	sbb    BYTE PTR [ebx],cl
  4278b2:	dec    ebx
  4278b3:	mov    dl,0xcd
  4278b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278b6:	cli    
  4278b7:	mov    eax,ds:0x7186a885
  4278bc:	push   eax
  4278bd:	or     BYTE PTR [edi+0x42],dl
  4278c0:	mov    ds:0x21888489,eax
  4278c5:	pop    ecx
  4278c6:	inc    eax
  4278c7:	add    eax,0xf6340c42
  4278cc:	aaa    
  4278cd:	fs jle 0x4278e5
  4278d0:	cmc    
  4278d1:	(bad)  
  4278d2:	mov    bh,0xb7
  4278d4:	sub    al,0x47
  4278d6:	repz pusha 
  4278d8:	or     al,0xe9
  4278da:	in     eax,dx
  4278db:	mov    dl,0x86
  4278dd:	push   cs
  4278de:	icebp  
  4278df:	xlat   BYTE PTR ds:[ebx]
  4278e0:	pop    esi
  4278e1:	add    DWORD PTR [edi+0x3d],esi
  4278e4:	mov    BYTE PTR [ebp+esi*1-0x11528dc3],ah
  4278eb:	fisttp WORD PTR [esi+0x44]
  4278ee:	lea    edi,[ebp+0xc]
  4278f1:	ror    dh,cl
  4278f3:	scas   eax,DWORD PTR es:[edi]
  4278f4:	outs   dx,DWORD PTR ds:[esi]
  4278f5:	jne    0x4278c6
  4278f7:	js     0x4278dd
  4278f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4278fa:	pop    esp
  4278fb:	sbb    DWORD PTR [edx-0xd3e7cd1],ebx
  427901:	repnz xchg edi,eax
  427903:	mov    edi,DWORD PTR [esi-0x3e8e38ed]
  427909:	movq   mm1,QWORD PTR [edi+0x7c3481b0]
  427910:	cmovb  eax,DWORD PTR [ebp+0x51]
  427914:	xchg   edi,eax
  427915:	and    BYTE PTR [ebx+edi*1],0xd7
  427919:	lods   al,BYTE PTR ds:[esi]
  42791a:	cld    
  42791b:	mov    cl,0x97
  42791d:	mov    eax,ds:0x80596655
  427922:	lock mov ds:0x2b04884d,al
  427928:	imul   edi,ecx,0xf58b754f
  42792e:	push   esi
  42792f:	das    
  427930:	adc    eax,0x7a7fd51c
  427935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427936:	or     al,0xa2
  427938:	div    ch
  42793a:	push   ebx
  42793b:	dec    esp
  42793c:	mov    ds:0xc0619b08,eax
  427941:	sub    DWORD PTR [edx-0x1f2ede89],0xfffffff4
  427948:	idiv   bh
  42794a:	cmp    al,BYTE PTR [ebp+0x581932f8]
  427950:	inc    ecx
  427951:	(bad)  
  427952:	std    
  427953:	mov    dh,BYTE PTR [ebp+eax*8-0x9]
  427957:	dec    ebp
  427958:	pusha  
  427959:	and    BYTE PTR [ecx-0x2e5dae13],bl
  42795f:	push   ebx
  427960:	fisttp QWORD PTR [ecx-0x3fe48bff]
  427966:	sub    ebp,DWORD PTR [eax]
  427968:	scas   eax,DWORD PTR es:[edi]
  427969:	psubsb mm4,QWORD PTR [eax+0x5ea46767]
  427970:	rol    BYTE PTR [ecx-0x2a],0x24
  427974:	popa   
  427975:	jp     0x4279e6
  427977:	stos   BYTE PTR es:[edi],al
  427978:	outs   dx,DWORD PTR ds:[esi]
  427979:	arpl   WORD PTR [edi-0x1b13e2ba],ax
  42797f:	pushf  
  427980:	aad    0x40
  427982:	xchg   esi,eax
  427983:	imul   eax,DWORD PTR [ebx+0x2fa403],0xd40374da
  42798d:	dec    eax
  42798e:	aad    0xaf
  427990:	out    0x57,al
  427992:	jg     0x427927
  427994:	jno    0x427931
  427996:	push   eax
  427997:	xor    dh,BYTE PTR [ebx-0x25aced4]
  42799d:	jg     0x4279fa
  42799f:	sub    ebp,ecx
  4279a1:	or     DWORD PTR [ecx+0x544ff50c],esi
  4279a7:	jne    0x4279e0
  4279a9:	xchg   ebp,eax
  4279aa:	push   cs
  4279ab:	jp     0x427a11
  4279ad:	jnp    0x4279d6
  4279af:	mov    BYTE PTR [edx-0x3b],0x23
  4279b3:	pop    eax
  4279b4:	dec    ebx
  4279b5:	mov    ecx,0x99d529d1
  4279ba:	jne    0x427a10
  4279bc:	cs aas 
  4279be:	ds sti 
  4279c0:	data16 outs dx,WORD PTR ds:[esi]
  4279c3:	xchg   esi,eax
  4279c4:	out    0x2a,al
  4279c6:	bnd jp 0x427a03
  4279c9:	or     eax,0xc5371c66
  4279ce:	and    cl,bh
  4279d0:	mov    dl,0x97
  4279d2:	mov    cl,0xc7
  4279d4:	cld    
  4279d5:	adc    al,BYTE PTR ds:0xcf066bf6
  4279db:	out    0xea,al
  4279dd:	push   edx
  4279de:	cdq    
  4279df:	pop    es
  4279e0:	in     eax,0x3e
  4279e2:	sub    dl,ch
  4279e4:	test   al,0xe3
  4279e6:	mov    esi,0x9ff9c963
  4279eb:	adc    ebp,0x43ad41ef
  4279f1:	mov    esi,0xc153b81c
  4279f6:	cmc    
  4279f7:	adc    eax,esp
  4279f9:	push   ss
  4279fa:	clc    
  4279fb:	push   ebp
  4279fc:	or     DWORD PTR [edx+0x23],eax
  4279ff:	xor    eax,0xa520e965
  427a04:	inc    ebx
  427a05:	cwde   
  427a06:	xor    bl,al
  427a08:	push   edx
  427a09:	pop    esi
  427a0a:	ins    BYTE PTR es:[edi],dx
  427a0b:	jae    0x427a10
  427a0d:	and    edx,ecx
  427a0f:	sti    
  427a10:	sbb    al,0x27
  427a12:	pushf  
  427a13:	in     al,0x2a
  427a15:	pushf  
  427a16:	pushf  
  427a17:	push   ebp
  427a18:	addr16 xor eax,0x449a0001
  427a1e:	and    bh,al
  427a20:	(bad)  
  427a21:	(bad)  
  427a22:	fisub  DWORD PTR [esi+0x62]
  427a25:	mov    eax,0x9fc47475
  427a2a:	mov    ebp,DWORD PTR [ebx]
  427a2c:	pop    es
  427a2d:	repnz add DWORD PTR [eax],eax
  427a30:	xchg   DWORD PTR [edx],eax
  427a32:	add    BYTE PTR [eax],al
  427a34:	cmp    eax,DWORD PTR [eax-0x196187c1]
  427a3a:	ret    
  427a3b:	into   
  427a3c:	cmp    al,0x4e
  427a3e:	ss inc edi
  427a40:	int3   
  427a41:	in     eax,0x78
  427a43:	sbb    cl,al
  427a45:	and    ah,0xf
  427a48:	ret    0x91a5
  427a4b:	adc    al,0xa1
  427a4d:	cli    
  427a4e:	int3   
  427a4f:	mov    edx,0x21b318f6
  427a54:	arpl   WORD PTR [bp+si+0x67],sp
  427a58:	(bad)  
  427a59:	out    0xd7,eax
  427a5b:	jg     0x427ab8
  427a5d:	data16 loopne 0x427a3f
  427a60:	lods   eax,DWORD PTR ds:[esi]
  427a61:	lea    esp,[ebx-0xa4d5c95]
  427a67:	mov    edx,edi
  427a69:	adc    ch,dh
  427a6b:	jb     0x427ace
  427a6d:	(bad)  
  427a6e:	outs   dx,DWORD PTR ds:[esi]
  427a6f:	and    DWORD PTR [eax+0x77],0x22
  427a73:	(bad)  
  427a74:	mov    ah,0xee
  427a76:	das    
  427a77:	nop
  427a78:	std    
  427a79:	popa   
  427a7a:	mov    BYTE PTR [edi-0x3],ch
  427a7d:	push   edi
  427a7e:	jg     0x427a5c
  427a80:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a82:	js     0x427a39
  427a84:	pusha  
  427a85:	mov    bl,0x1b
  427a87:	shl    ecx,cl
  427a89:	outs   dx,BYTE PTR ds:[esi]
  427a8a:	outs   dx,DWORD PTR ds:[esi]
  427a8b:	mov    edx,0xfaf0cef9
  427a90:	pop    edx
  427a91:	xchg   edi,eax
  427a92:	mov    esi,0xb51de0af
  427a97:	mov    edi,0x4a004f2f
  427a9c:	outs   dx,BYTE PTR ds:[esi]
  427a9d:	(bad)  
  427a9e:	outs   dx,DWORD PTR ds:[esi]
  427a9f:	mov    ch,0x92
  427aa1:	add    DWORD PTR [eax+0x17de243e],esp
  427aa7:	xchg   edx,eax
  427aa8:	in     eax,0x81
  427aaa:	pushf  
  427aab:	enter  0x5bdb,0xfa
  427aaf:	mov    dl,0xa4
  427ab1:	leave  
  427ab2:	or     BYTE PTR [ebx],bl
  427ab4:	and    ch,bh
  427ab6:	xor    al,0xe3
  427ab8:	xor    ebp,DWORD PTR [edx+0x2c]
  427abb:	iret   
  427abc:	cmp    bh,BYTE PTR [ecx+esi*4]
  427abf:	xor    al,0x91
  427ac2:	cmp    al,BYTE PTR ds:0x9ac43d76
  427ac8:	dec    ecx
  427ac9:	leave  
  427aca:	stc    
  427acb:	xor    BYTE PTR [ebx+0x26],ch
  427ace:	and    BYTE PTR [ecx-0x3],dh
  427ad1:	jmp    0x427b1f
  427ad3:	or     BYTE PTR [edi-0x4],0x6c
  427ad7:	les    esp,FWORD PTR [ebx+0x1706de0f]
  427add:	outs   dx,BYTE PTR ds:[esi]
  427ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427adf:	adc    eax,0x3822fadc
  427ae4:	or     BYTE PTR [ebx+0x48d389a3],bl
  427aea:	jp     0x427b6b
  427aec:	and    al,0x8f
  427aee:	data16 jne 0x427a88
  427af1:	add    al,0x61
  427af3:	and    DWORD PTR [edi+0x39],eax
  427af6:	loopne 0x427aa1
  427af8:	ror    bl,cl
  427afa:	pop    es
  427afb:	add    DWORD PTR [ebx+eax*2+0x3e7aba70],0x5916c04f
  427b06:	sbb    al,BYTE PTR [esi+0x62245f32]
  427b0c:	mul    BYTE PTR [ebx]
  427b0e:	xor    ch,BYTE PTR [edx+0x7a84adc2]
  427b14:	mov    al,0x12
  427b16:	adc    bh,BYTE PTR [eax+0x41784644]
  427b1c:	sub    ebx,DWORD PTR [ebx+0x24bb8a32]
  427b22:	add    DWORD PTR [edi],ebx
  427b24:	ds in  eax,0x8c
  427b27:	xor    bh,BYTE PTR [edx+0x35]
  427b2a:	push   es
  427b2b:	dec    ebx
  427b2c:	mov    cl,0x4d
  427b2e:	js     0x427b78
  427b30:	(bad)  
  427b31:	cmp    eax,0x8cc8268d
  427b36:	rcr    BYTE PTR [eax-0x51],0x20
  427b3a:	adc    DWORD PTR gs:[edi+ebx*2],edi
  427b3e:	lea    edi,[ecx+0x27c10461]
  427b44:	cwde   
  427b45:	out    0x2d,al
  427b47:	push   edi
  427b48:	push   ecx
  427b49:	cld    
  427b4a:	add    BYTE PTR [ecx],0xac
  427b4d:	xor    dh,BYTE PTR [ecx-0x72]
  427b50:	inc    edi
  427b51:	sbb    al,0xea
  427b53:	adc    ah,BYTE PTR [edx]
  427b55:	mov    esi,0x7171eee0
  427b5a:	xchg   ebp,eax
  427b5b:	and    al,0x15
  427b5d:	and    al,0xf6
  427b5f:	addr16 push ss
  427b61:	loope  0x427b55
  427b63:	rcl    BYTE PTR [edx],cl
  427b65:	(bad)  
  427b66:	mul    DWORD PTR [ebp+0x7f411d99]
  427b6c:	inc    edi
  427b6d:	fisttp DWORD PTR [edx-0x65]
  427b70:	(bad)  
  427b71:	stc    
  427b72:	inc    esi
  427b73:	sub    ch,ah
  427b75:	bound  esi,QWORD PTR [ebx-0x22133f83]
  427b7b:	loop   0x427b3a
  427b7d:	jmp    0xca1dbc73
  427b82:	(bad)  
  427b83:	lds    esp,FWORD PTR [ebp+0x12]
  427b86:	icebp  
  427b87:	mov    BYTE PTR [eax+edx*2],al
  427b8a:	data16 fcom QWORD PTR [ebx+0x38]
  427b8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b8f:	addr16 int 0x8e
  427b92:	dec    ecx
  427b93:	xor    edi,esp
  427b95:	mov    ecx,0xad4e583c
  427b9a:	aam    0x7b
  427b9c:	(bad)  
  427b9d:	out    0xaf,eax
  427b9f:	xchg   esp,eax
  427ba0:	inc    ebx
  427ba1:	push   ebx
  427ba2:	enter  0xc5f7,0xab
  427ba6:	sbb    eax,0x33ca6ead
  427bab:	aam    0x17
  427bad:	inc    esp
  427bae:	lds    ebp,FWORD PTR ds:[esi-0x4736374]
  427bb5:	aam    0x5b
  427bb7:	push   0x803a8611
  427bbc:	loope  0x427c2c
  427bbe:	mov    dh,BYTE PTR [eax+0x69d86f6d]
  427bc4:	mov    ds:0xabe7da82,eax
  427bc9:	jmp    FWORD PTR [edi]
  427bcb:	popf   
  427bcc:	cmp    eax,0x36dbed9c
  427bd1:	and    BYTE PTR [eax-0x12],bl
  427bd4:	mov    dh,0xc4
  427bd6:	mov    al,ds:0x5a2d14db
  427bdb:	call   0x4ae1cca8
  427be0:	add    eax,0xacd11fc9
  427be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427be6:	stc    
  427be7:	(bad)  
  427be8:	out    dx,eax
  427be9:	and    eax,0x8be7cbd
  427bee:	stos   DWORD PTR es:[edi],eax
  427bef:	jno    0x427c2a
  427bf1:	mov    cs,ecx
  427bf3:	push   ss
  427bf4:	imul   eax,edx,0x5d6995b8
  427bfa:	sbb    edi,DWORD PTR [edi-0x1b]
  427bfd:	jecxz  0x427bc5
  427bff:	add    BYTE PTR [esi-0x12],ch
  427c02:	xlat   BYTE PTR ds:[ebx]
  427c03:	mov    eax,DWORD PTR [ebp-0x11]
  427c06:	outs   dx,BYTE PTR ds:[esi]
  427c07:	test   ecx,0xd4c06a2a
  427c0d:	out    0xd2,al
  427c0f:	pushf  
  427c10:	inc    ebp
  427c11:	and    bh,BYTE PTR [edx]
  427c13:	mov    ch,0xc0
  427c15:	push   edx
  427c16:	retf   0x31cd
  427c19:	scas   al,BYTE PTR es:[edi]
  427c1a:	ins    BYTE PTR es:[edi],dx
  427c1b:	mov    gs,WORD PTR [edx]
  427c1d:	push   0xb6343be
  427c22:	mov    gs,WORD PTR ds:0x4d7490d5
  427c28:	mov    bh,0xe7
  427c2a:	aam    0x10
  427c2c:	xchg   BYTE PTR [ebx+0x62d9e61f],cl
  427c32:	shl    BYTE PTR [esi+0x51ef4a05],0x2c
  427c39:	sub    DWORD PTR [edx-0x5f],esi
  427c3c:	push   esi
  427c3d:	scas   al,BYTE PTR es:[edi]
  427c3e:	adc    al,0x73
  427c40:	and    dl,BYTE PTR [ebx+0x5db40900]
  427c46:	push   cs
  427c47:	xor    DWORD PTR [ebp+0x137793d7],edx
  427c4d:	iret   
  427c4e:	mov    al,0xdb
  427c50:	push   ds
  427c51:	sbb    eax,0x3e1f900c
  427c56:	mov    ebx,0xc1fff0b6
  427c5b:	add    eax,ebp
  427c5d:	push   ecx
  427c5e:	(bad)  
  427c5f:	and    BYTE PTR [eax-0x3a1fea7a],ch
  427c65:	ret    0xdffe
  427c68:	iret   
  427c69:	shl    BYTE PTR [edx+0x5f5b079a],0xdb
  427c70:	push   0x7ab3af8c
  427c75:	hlt    
  427c76:	cmp    eax,0x1345090f
  427c7b:	pop    edi
  427c7c:	sub    DWORD PTR [esi+0x5b0da5ae],ecx
  427c82:	jg     0x427c93
  427c84:	pusha  
  427c85:	inc    ebx
  427c86:	aaa    
  427c87:	cli    
  427c88:	dec    edx
  427c89:	out    0xff,al
  427c8b:	pusha  
  427c8c:	mov    dl,BYTE PTR ds:0xd1a6c3c9
  427c92:	popf   
  427c93:	jbe    0x427c6d
  427c95:	cmp    DWORD PTR [ecx-0x7ea2d769],edx
  427c9b:	or     DWORD PTR [edi-0x1f],edx
  427c9e:	jg     0x427cc8
  427ca0:	or     cl,BYTE PTR [ecx+0x4bfe47b1]
  427ca6:	lock loope 0x427cec
  427ca9:	dec    eax
  427caa:	and    eax,0xac220ab7
  427caf:	cli    
  427cb0:	sub    al,BYTE PTR [ecx-0x38]
  427cb3:	inc    ebx
  427cb4:	imul   edx,ecx,0xffffff95
  427cb7:	sbb    DWORD PTR [edx-0x26],0x74
  427cbb:	add    BYTE PTR [eax+0x3fc326ab],dl
  427cc1:	iret   
  427cc2:	cmc    
  427cc3:	sti    
  427cc4:	pushf  
  427cc5:	ds loop 0x427cb4
  427cc8:	pop    esp
  427cc9:	arpl   WORD PTR [eax],cx
  427ccb:	ins    DWORD PTR es:[edi],dx
  427ccc:	mov    ?,esp
  427cce:	add    DWORD PTR [eax],eax
  427cd0:	xchg   DWORD PTR [edx],eax
  427cd2:	add    BYTE PTR [eax],al
  427cd4:	pop    eax
  427cd5:	mov    cl,0x33
  427cd7:	das    
  427cd8:	xor    DWORD PTR [ecx-0x401e9f05],0x2abb688d
  427ce2:	jbe    0x427d3a
  427ce4:	or     DWORD PTR [eax-0x50],eax
  427ce7:	and    cl,ch
  427ce9:	fs xchg esp,eax
  427ceb:	enter  0x5009,0x79
  427cef:	push   ebp
  427cf0:	stc    
  427cf1:	aas    
  427cf2:	add    esi,DWORD PTR [ebx+0x41b433c2]
  427cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cf9:	push   ss
  427cfa:	push   esp
  427cfb:	adc    eax,DWORD PTR [ebx+eiz*8]
  427cfe:	jl     0x427d69
  427d00:	in     al,0x2a
  427d02:	outs   dx,DWORD PTR ds:[esi]
  427d03:	mov    esp,0xcdbabce9
  427d08:	outs   dx,DWORD PTR ds:[esi]
  427d09:	jge    0x427d40
  427d0b:	dec    edi
  427d0c:	pop    ds
  427d0d:	(bad)  
  427d0e:	mov    ch,0xda
  427d10:	stc    
  427d11:	ret    
  427d12:	pop    edi
  427d13:	ds jg  0x427d22
  427d16:	out    dx,al
  427d17:	call   0x4e64d554
  427d1c:	retf   
  427d1d:	sbb    al,0x13
  427d1f:	mov    cl,0xa9
  427d21:	pop    esi
  427d22:	add    dh,bl
  427d24:	mov    cl,0xc3
  427d26:	stos   DWORD PTR es:[edi],eax
  427d27:	sub    DWORD PTR [eax],eax
  427d29:	fisubr WORD PTR ds:0x6484f53c
  427d2f:	das    
  427d30:	jl     0x427d68
  427d32:	sub    bh,BYTE PTR ds:0xc60c137d
  427d38:	popf   
  427d39:	jo     0x427d6a
  427d3b:	mov    edi,0xbae15f6b
  427d40:	jg     0x427d7e
  427d42:	aas    
  427d43:	jge    0x427d4a
  427d45:	jp     0x427d96
  427d47:	mov    esp,0x13747c6c
  427d4c:	push   es
  427d4d:	hlt    
  427d4e:	push   ss
  427d4f:	sbb    DWORD PTR [edi+eax*4+0x30],0x1f
  427d54:	jne    0x427d13
  427d56:	daa    
  427d57:	shl    BYTE PTR [esi],cl
  427d59:	mov    ebx,0x1d0654ff
  427d5e:	mov    bl,0x3c
  427d60:	ds in  al,dx
  427d62:	and    DWORD PTR [esi+0x33],esi
  427d65:	sub    DWORD PTR ds:0xabbf4816,eax
  427d6b:	jae    0x427ddc
  427d6d:	dec    esi
  427d6e:	popa   
  427d6f:	jl     0x427d06
  427d71:	aas    
  427d72:	loop   0x427dbf
  427d74:	mov    eax,ds:0xab681f9e
  427d79:	pop    ebx
  427d7a:	pop    esp
  427d7b:	dec    edi
  427d7c:	aaa    
  427d7d:	repz imul edx,ebx,0x855697a5
  427d84:	jae    0x427d34
  427d86:	aam    0x31
  427d88:	js     0x427daf
  427d8a:	out    0x7,eax
  427d8c:	jmp    0x427d4b
  427d8e:	test   al,0xe0
  427d90:	mov    eax,?
  427d92:	(bad)  
  427d93:	ds jne 0x427d30
  427d96:	mov    cl,0x3f
  427d98:	add    BYTE PTR ds:0x23d2a575,0xff
  427d9f:	pop    ss
  427da0:	cmp    ah,BYTE PTR [ebx+0x3e]
  427da3:	push   edi
  427da4:	mov    eax,DWORD PTR [edi+edi*2]
  427da7:	mov    DWORD PTR [edi+0x7d],esp
  427daa:	xor    BYTE PTR [eax+0x30],0xf6
  427dae:	add    DWORD PTR [eax+0xba4a3db],eax
  427db4:	xor    cl,dl
  427db6:	mov    esi,0xe8f445bb
  427dbb:	(bad)
  427dbe:	pop    edi
  427dbf:	jge    0x427d85
  427dc1:	clc    
  427dc2:	nop
  427dc3:	add    al,0x5b
  427dc5:	(bad)  
  427dc6:	pop    esi
  427dc7:	fidiv  WORD PTR [eax-0x37]
  427dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dcb:	aad    0xb1
  427dcd:	add    eax,DWORD PTR [ebx+0x139acc8a]
  427dd3:	sbb    bh,dh
  427dd5:	cmp    ebp,DWORD PTR [edi+0x6d]
  427dd8:	add    DWORD PTR [eax+0x8494b7],ecx
  427dde:	cli    
  427ddf:	or     al,0x33
  427de1:	pop    edi
  427de2:	jl     0x427e55
  427de4:	add    BYTE PTR [esi],ch
  427de6:	sar    BYTE PTR [ebx+0x4c],cl
  427de9:	dec    ecx
  427dea:	pop    ebx
  427deb:	es jb  0xe9ab70a
  427df2:	lds    esi,FWORD PTR [edi]
  427df4:	scas   eax,DWORD PTR es:[edi]
  427df5:	or     dl,BYTE PTR [edx-0x12]
  427df8:	inc    ebp
  427df9:	out    dx,eax
  427dfa:	dec    eax
  427dfb:	ss test al,0xb0
  427dfe:	cmp    DWORD PTR [edi-0x49647012],edx
  427e04:	push   esp
  427e05:	neg    DWORD PTR [ebx+ecx*8+0x5e]
  427e09:	mov    dl,BYTE PTR [esi+edx*8]
  427e0c:	push   0x4a
  427e0e:	xlat   BYTE PTR ds:[ebx]
  427e0f:	jl     0x427e35
  427e11:	into   
  427e12:	(bad)  
  427e13:	div    DWORD PTR [ecx]
  427e15:	pop    ss
  427e16:	out    0x90,eax
  427e18:	aad    0x7a
  427e1a:	mov    bh,0xba
  427e1c:	rcl    esi,cl
  427e1e:	xor    al,0x5f
  427e20:	loope  0x427e0f
  427e22:	lods   al,BYTE PTR ds:[esi]
  427e23:	rol    DWORD PTR [esi-0x5a132449],0x4d
  427e2a:	and    eax,0xc129b8c1
  427e2f:	inc    esi
  427e30:	cmp    BYTE PTR [esi+edi*8+0x20efe767],0xc5
  427e38:	push   es
  427e39:	mov    esi,0x27ee6af2
  427e3e:	push   0xffffffff
  427e40:	scas   al,BYTE PTR es:[edi]
  427e41:	xor    al,0xbe
  427e43:	xchg   ecx,eax
  427e44:	mov    ebx,0x6b381349
  427e49:	jmp    0x700dda80
  427e4e:	adc    BYTE PTR [esi+0x5105b481],ch
  427e54:	daa    
  427e55:	loopne 0x427e78
  427e57:	lods   al,BYTE PTR ds:[esi]
  427e58:	loope  0x427e2f
  427e5a:	jmp    0x8659:0x87d42bf0
  427e61:	add    bl,BYTE PTR [eax+0x0]
  427e64:	dec    esi
  427e65:	mov    ebx,0xeabdb157
  427e6a:	mov    cl,0x9f
  427e6c:	fidivr DWORD PTR [edx-0x47]
  427e6f:	leave  
  427e70:	add    BYTE PTR [ecx+0x24],bh
  427e73:	jecxz  0x427e64
  427e75:	xor    ebp,esi
  427e77:	pop    ds
  427e78:	data16 outs dx,BYTE PTR ds:[esi]
  427e7a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e7c:	xchg   DWORD PTR [edi+0x578b79a0],ecx
  427e82:	jmp    0xd54f:0xe92bce5
  427e89:	fimul  WORD PTR [eax+0x21]
  427e8c:	lahf   
  427e8d:	xchg   esi,eax
  427e8e:	in     al,0xc3
  427e90:	xor    al,0xe6
  427e92:	pop    edi
  427e93:	pop    es
  427e94:	das    
  427e95:	aad    0x13
  427e97:	xchg   ecx,eax
  427e98:	adc    eax,0x906cb62b
  427e9d:	in     al,dx
  427e9e:	dec    esi
  427e9f:	rcr    BYTE PTR [edx-0x54],1
  427ea2:	sti    
  427ea3:	adc    BYTE PTR [ebp-0x43],dh
  427ea6:	mov    cl,0x58
  427ea8:	jns    0x427e60
  427eaa:	pusha  
  427eab:	mov    WORD PTR [ebx+0x724ad4e7],fs
  427eb1:	ja     0x427eeb
  427eb3:	mov    DWORD PTR [ebx],edx
  427eb5:	or     bh,cl
  427eb7:	imul   ebp,DWORD PTR [ebp-0x68],0x17
  427ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ebc:	sub    eax,DWORD PTR [edx-0x585c564]
  427ec2:	inc    ecx
  427ec3:	mov    edx,0x8e1e42c9
  427ec8:	inc    ebx
  427ec9:	xlat   BYTE PTR ds:[ebx]
  427eca:	jle    0x427e4c
  427ecc:	stos   BYTE PTR es:[edi],al
  427ecd:	fwait
  427ece:	push   ss
  427ecf:	xchg   edx,eax
  427ed0:	mov    ch,0x30
  427ed2:	dec    esi
  427ed3:	pop    ecx
  427ed4:	push   es
  427ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ed6:	add    BYTE PTR [edi-0x1101055f],dh
  427edc:	push   edi
  427edd:	mov    eax,0x31b4a4be
  427ee2:	loop   0x427e8c
  427ee4:	(bad)  
  427ee5:	jbe    0x427f56
  427ee7:	leave  
  427ee8:	pop    edx
  427ee9:	pop    eax
  427eea:	and    BYTE PTR [edx],ch
  427eec:	add    ecx,edx
  427eee:	dec    ebp
  427eef:	test   al,0xae
  427ef1:	inc    edx
  427ef2:	cmc    
  427ef3:	call   0x5f3f4c76
  427ef8:	or     DWORD PTR [esi],edi
  427efa:	mov    ah,0xd6
  427efc:	fwait
  427efd:	mov    BYTE PTR [ecx-0x46],cl
  427f00:	dec    esp
  427f01:	loope  0x427f78
  427f03:	pop    edi
  427f04:	btc    DWORD PTR [esi+ebp*8+0x81d8ea6],ebx
  427f0c:	into   
  427f0d:	xor    al,0x7f
  427f0f:	fild   DWORD PTR [ebx+0x46]
  427f12:	push   ebx
  427f13:	loop   0x427f1a
  427f15:	push   0xffffffa4
  427f17:	out    0x5e,al
  427f19:	jp     0x427f7c
  427f1b:	loope  0x427f2b
  427f1d:	les    ecx,FWORD PTR [esi*4-0xdad435]
  427f24:	mov    edx,0xde1526e9
  427f29:	mov    dh,0x34
  427f2b:	add    BYTE PTR [ebp-0x37],cl
  427f2e:	pop    ecx
  427f2f:	and    eax,0x340e9c4b
  427f34:	test   BYTE PTR [edi],0x89
  427f37:	(bad)  
  427f38:	addr16 cwde 
  427f3a:	pop    edi
  427f3b:	dec    ebx
  427f3c:	pop    ebp
  427f3d:	out    0x43,al
  427f3f:	xor    eax,edx
  427f41:	aaa    
  427f42:	push   ebp
  427f43:	test   BYTE PTR [ebx],0x45
  427f46:	xlat   BYTE PTR ds:[ebx]
  427f47:	dec    esp
  427f48:	rol    DWORD PTR [ebx+ecx*1],1
  427f4b:	lahf   
  427f4c:	jl     0x427eee
  427f4e:	or     BYTE PTR [edx+0x48],dh
  427f51:	mov    ebp,DWORD PTR [eax]
  427f53:	gs gs adc al,0xb6
  427f57:	sbb    esp,DWORD PTR [edi+ebx*4+0x39fd000e]
  427f5e:	xor    eax,0xfd1cf514
  427f63:	stc    
  427f64:	int    0xea
  427f66:	xor    al,al
  427f68:	push   eax
  427f69:	in     eax,0x7e
  427f6b:	ja     0x427f82
  427f6d:	test   DWORD PTR [ecx],0x28700
  427f73:	add    BYTE PTR [edx-0x706eff3c],cl
  427f79:	add    BYTE PTR [esi-0x2b286584],ch
  427f7f:	adc    eax,0x5f996008
  427f84:	cmp    BYTE PTR [esi],0xf0
  427f87:	(bad)  
  427f88:	sub    BYTE PTR [eax],bl
  427f8a:	sub    bl,dh
  427f8c:	jle    0x427f78
  427f8e:	add    eax,0xf456f378
  427f93:	scas   eax,DWORD PTR es:[edi]
  427f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f95:	sub    cl,BYTE PTR [esi-0x5e]
  427f98:	push   edx
  427f99:	dec    esi
  427f9a:	std    
  427f9b:	in     al,0xa3
  427f9d:	adc    BYTE PTR [ebx+0x4a114296],cl
  427fa3:	rcr    DWORD PTR ds:0x4b9e5f8b,cl
  427fa9:	xor    eax,0x96f9eb8b
  427fae:	adc    eax,0xf8025658
  427fb3:	inc    eax
  427fb4:	inc    edx
  427fb5:	dec    ebx
  427fb6:	cmp    ah,bh
  427fb8:	inc    esi
  427fb9:	push   ebx
  427fba:	jne    0x427fe7
  427fbc:	fist   WORD PTR [eax+eiz*1+0x41]
  427fc0:	imul   esp,DWORD PTR [eax-0x76],0xffffff87
  427fc4:	call   0xb9d8:0xfb61e9cf
  427fcb:	popf   
  427fcc:	cmp    al,BYTE PTR [edi-0x43]
  427fcf:	sbb    DWORD PTR [eax],edx
  427fd1:	add    eax,0x5b47132c
  427fd6:	rcl    DWORD PTR [ecx-0x65],cl
  427fd9:	leave  
  427fda:	(bad)  
  427fdb:	(bad)  
  427fdc:	fild   WORD PTR [eax-0x1a1c9ac9]
  427fe2:	test   al,0x47
  427fe4:	jo     0x427f6c
  427fe6:	xchg   edx,eax
  427fe7:	pop    ds
  427fe8:	and    bh,BYTE PTR [ebp+0x35]
  427feb:	pushf  
  427fec:	push   ecx
  427fed:	push   esp
  427fee:	call   0xcecdbcdb
  427ff3:	cmp    al,0x35
  427ff5:	cmp    DWORD PTR [esi+0x50],0x14
  427ff9:	xor    dh,0xbd
  427ffc:	inc    esi
  427ffd:	stc    
  427ffe:	xchg   edi,eax
  427fff:	icebp  
  428000:	sub    DWORD PTR [ecx-0x9],esp
  428003:	pop    eax
  428004:	stos   DWORD PTR es:[edi],eax
  428005:	and    eax,0xd8ca60cc
  42800a:	inc    edx
  42800b:	mov    ebx,0xa0b636cb
  428010:	pop    ds
  428011:	stos   DWORD PTR es:[edi],eax
  428012:	pop    ebp
  428013:	stc    
  428014:	out    dx,eax
  428015:	scas   al,BYTE PTR es:[edi]
  428016:	imul   ebp,DWORD PTR [ebp-0x4963ad46],0x19
  42801d:	jge    0x427fe3
  42801f:	out    0x8c,eax
  428021:	jnp    0x428053
  428023:	xor    ah,BYTE PTR [ebp-0x3d]
  428026:	adc    BYTE PTR [ebp+0x76],al
  428029:	mov    ds,edi
  42802b:	mov    dh,0x4d
  42802d:	int    0x14
  42802f:	mov    ecx,0x14680632
  428034:	fsub   DWORD PTR [edx]
  428036:	arpl   WORD PTR [ecx+0x27],ax
  428039:	(bad)  
  42803a:	js     0x427fc6
  42803c:	xor    cl,BYTE PTR [ebp-0x11cfb2ec]
  428042:	mov    ebp,0xb5e815da
  428047:	adc    esi,eax
  428049:	in     al,0x7
  42804b:	mov    eax,cs
  42804d:	mov    dl,0xb3
  42804f:	test   al,0x14
  428051:	xchg   BYTE PTR [ecx-0x2a2bb07c],cl
  428057:	and    edx,ecx
  428059:	inc    edx
  42805a:	es repnz out 0x1,eax
  42805e:	fs xor al,0x7a
  428061:	aad    0xa5
  428063:	mov    ch,0x70
  428065:	lods   eax,DWORD PTR ds:[esi]
  428066:	sub    esp,0xffffff83
  428069:	jmp    0x18de3252
  42806e:	cli    
  42806f:	dec    ebx
  428070:	mov    ecx,0xabdbfd07
  428075:	rcl    ecx,1
  428077:	add    eax,0xf78e8192
  42807c:	imul   ecx,esp,0x879db8bb
  428082:	(bad)  
  428083:	in     eax,0x32
  428085:	out    0x6e,al
  428087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428088:	(bad)  
  428089:	out    0xd0,al
  42808b:	inc    esi
  42808c:	sbb    DWORD PTR [esi+0x5865b74a],ecx
  428092:	imul   esp,DWORD PTR [eax],0xd2887186
  428098:	push   ebp
  428099:	lds    esi,FWORD PTR [esi-0x2]
  42809c:	jbe    0x4280d2
  42809e:	xchg   DWORD PTR [esi-0x5db0d24c],esi
  4280a4:	mov    eax,ss:0x972c662a
  4280aa:	daa    
  4280ab:	xlat   BYTE PTR ds:[ebx]
  4280ac:	loopne 0x4280ac
  4280ae:	xchg   ecx,eax
  4280af:	loop   0x4280a1
  4280b1:	fsub   DWORD PTR [edi]
  4280b3:	mov    dh,0xd0
  4280b5:	cmp    edx,DWORD PTR [edx]
  4280b7:	jg     0x4280db
  4280b9:	xchg   edx,eax
  4280ba:	and    eax,0xd5dfe53a
  4280bf:	jne    0x42811d
  4280c1:	mov    BYTE PTR [edi-0x1b6a7d6d],0xd2
  4280c8:	jbe    0x4280ad
  4280ca:	shl    cl,cl
  4280cc:	push   edx
  4280cd:	cli    
  4280ce:	sub    eax,DWORD PTR [ebx-0x11]
  4280d1:	sbb    BYTE PTR ds:0x73865a3a,0x9f
  4280d8:	retf   
  4280d9:	repz mov edi,0xeee9b617
  4280df:	sbb    al,BYTE PTR [ecx+0xb]
  4280e2:	je     0x42813d
  4280e4:	out    dx,al
  4280e5:	xchg   ebx,eax
  4280e6:	jle    0x428157
  4280e8:	jle    0x428167
  4280ea:	and    al,0xe6
  4280ed:	mov    dl,0x48
  4280ef:	stc    
  4280f0:	ret    0xa8c8
  4280f3:	sahf   
  4280f4:	addr16 mov ds,edx
  4280f7:	scas   al,BYTE PTR es:[edi]
  4280f8:	into   
  4280f9:	aad    0x63
  4280fb:	cmp    ebx,DWORD PTR [edx+0x48]
  4280fe:	sub    cl,al
  428100:	and    cl,cl
  428102:	cmp    eax,0x4cdfb55e
  428107:	mov    esi,0xc6ffd3e
  42810c:	stos   DWORD PTR es:[edi],eax
  42810d:	es dec ecx
  42810f:	cmp    dl,BYTE PTR [edx-0x30]
  428112:	das    
  428113:	iret   
  428114:	push   0x791e5111
  428119:	pusha  
  42811a:	xchg   ecx,eax
  42811b:	loopne 0x4280d6
  42811d:	(bad)  
  42811e:	and    edx,esp
  428120:	stos   DWORD PTR es:[edi],eax
  428121:	adc    edx,ebp
  428123:	(bad)  
  428124:	and    eax,0x71979f41
  428129:	stc    
  42812a:	in     al,0x2
  42812c:	mov    ds:0x464426fc,al
  428131:	loope  0x428168
  428133:	sar    BYTE PTR [edi+eax*4],1
  428136:	adc    DWORD PTR [esi+0xe64d6e3],edi
  42813c:	fstp   TBYTE PTR [edx-0x2d9e8aa3]
  428142:	lods   al,BYTE PTR ds:[esi]
  428143:	xchg   esi,eax
  428144:	js     0x4280fa
  428146:	push   0x28
  428148:	and    eax,0xfd544d8f
  42814d:	rcl    esi,0x7e
  428150:	adc    edx,ecx
  428152:	in     eax,dx
  428153:	into   
  428154:	fnsave [edi]
  428156:	cmp    DWORD PTR [ebx+0x4ca6b9f1],eax
  42815c:	js     0x428171
  42815e:	inc    eax
  42815f:	out    dx,eax
  428160:	cmp    ah,BYTE PTR [edx+0x8]
  428163:	mov    ah,0xa1
  428165:	xchg   ecx,eax
  428166:	in     eax,dx
  428167:	push   ebp
  428168:	fnsave [ecx]
  42816a:	ror    bl,1
  42816c:	cmp    BYTE PTR [edi+0x3d81342e],bh
  428172:	fistp  DWORD PTR [edi+0x2512120c]
  428178:	imul   esp,DWORD PTR [ecx-0x1045fa18],0x73cf87bf
  428182:	(bad)  
  428184:	scas   al,BYTE PTR es:[edi]
  428185:	mov    al,ds:0xa4fe432e
  42818a:	ret    0xd234
  42818d:	rol    BYTE PTR [ebx+0x70338a5e],0xb5
  428194:	sub    DWORD PTR [esi*4-0x33bd86a5],edi
  42819b:	jno    0x42820b
  42819d:	daa    
  42819e:	sti    
  42819f:	mov    ds:0x86527784,eax
  4281a4:	mov    BYTE PTR [ecx-0x67],al
  4281a7:	stos   BYTE PTR es:[edi],al
  4281a8:	mov    ch,0xaa
  4281aa:	lds    edx,FWORD PTR [edi-0x3f]
  4281ad:	sub    eax,0xc4a14008
  4281b2:	cmp    eax,0x7480c94c
  4281b7:	std    
  4281b8:	sbb    al,0x25
  4281ba:	add    al,0x70
  4281bc:	xchg   ecx,eax
  4281bd:	inc    edi
  4281be:	sub    ecx,DWORD PTR [esi-0x2c]
  4281c1:	fisub  DWORD PTR ds:0xd8a935ad
  4281c7:	dec    eax
  4281c8:	pop    ss
  4281c9:	daa    
  4281ca:	cmp    al,0x19
  4281cc:	cmp    bh,al
  4281ce:	push   edx
  4281cf:	aaa    
  4281d0:	mov    al,bl
  4281d2:	(bad)  
  4281d3:	dec    DWORD PTR ds:0xc510c268
  4281d9:	in     al,dx
  4281da:	leave  
  4281db:	retf   0xc51e
  4281de:	xchg   esp,eax
  4281df:	mov    bl,0x9e
  4281e1:	test   eax,0x84fe82a0
  4281e6:	(bad)  
  4281e7:	test   eax,0x10751044
  4281ec:	and    edi,0x81095a31
  4281f2:	cmp    al,0x22
  4281f4:	jnp    0x428193
  4281f6:	mov    ch,0x66
  4281f8:	(bad)  
  4281f9:	(bad)  
  4281fa:	push   esi
  4281fb:	add    BYTE PTR [ecx-0x7d39faf],ch
  428201:	cmp    eax,0x8ba9d5ed
  428206:	mov    ebx,0x50f8292
  42820b:	mov    ecx,0x1f99c
  428210:	or     eax,0xca000000
  428215:	ins    BYTE PTR es:[edi],dx
  428216:	sbb    eax,0x844f3dcf
  42821b:	sub    esi,DWORD PTR [ebp-0x76]
  42821e:	pop    ecx
  42821f:	cmp    DWORD PTR [ecx],ecx
	...
